BLEU SCORE: 0.03817681337429048

TEST MSG: Preserve quoted reserved keyword column names in MV creation
GENERATED MSG: Fix out - of - space error treatment in memtable flushing

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index f291674 . . e82eedd 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 10 <nl> + * Preserve quoted reserved keyword column names in MV creation ( CASSANDRA - 11803 ) <nl> * nodetool stopdaemon errors out ( CASSANDRA - 12646 ) <nl> * Split materialized view mutations on build to prevent OOM ( CASSANDRA - 12268 ) <nl> * mx4j does not work in 3 . 0 . 8 ( CASSANDRA - 12274 ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java b / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java <nl> index 1e25b23 . . ceb81be 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java <nl> @ @ - 362 , 8 + 362 , 9 @ @ public class ColumnIdentifier extends Selectable implements IMeasurableMemory , C <nl> <nl> public static String maybeQuote ( String text ) <nl> { <nl> - if ( UNQUOTED _ IDENTIFIER . matcher ( text ) . matches ( ) ) <nl> + if ( UNQUOTED _ IDENTIFIER . matcher ( text ) . matches ( ) & & ! ReservedKeywords . isReserved ( text ) ) <nl> return text ; <nl> + <nl> return ' " ' + PATTERN _ DOUBLE _ QUOTE . matcher ( text ) . replaceAll ( Matcher . quoteReplacement ( " \ " \ " " ) ) + ' " ' ; <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / Cql . g b / src / java / org / apache / cassandra / cql3 / Cql . g <nl> index d50b979 . . 3123877 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / Cql . g <nl> + + + b / src / java / org / apache / cassandra / cql3 / Cql . g <nl> @ @ - 1634 , 6 + 1634 , 8 @ @ basic _ unreserved _ keyword returns [ String str ] <nl> ; <nl> <nl> / / Case - insensitive keywords <nl> + / / When adding a new reserved keyword , add entry to o . a . c . cql3 . ReservedKeywords as well <nl> + / / When adding a new unreserved keyword , add entry to list above <nl> K _ SELECT : S E L E C T ; <nl> K _ FROM : F R O M ; <nl> K _ AS : A S ; <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / ReservedKeywords . java b / src / java / org / apache / cassandra / cql3 / ReservedKeywords . java <nl> new file mode 100644 <nl> index 0000000 . . 91b7e61 <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / cql3 / ReservedKeywords . java <nl> @ @ - 0 , 0 + 1 , 118 @ @ <nl> + / * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package org . apache . cassandra . cql3 ; <nl> + <nl> + import java . util . Set ; <nl> + <nl> + import com . google . common . collect . ImmutableSet ; <nl> + <nl> + class ReservedKeywords <nl> + { <nl> + private static final String [ ] reservedKeywords = new String [ ] <nl> + { <nl> + " SELECT " , <nl> + " FROM " , <nl> + " WHERE " , <nl> + " AND " , <nl> + " KEY " , <nl> + " ENTRIES " , <nl> + " FULL " , <nl> + " INSERT " , <nl> + " UPDATE " , <nl> + " WITH " , <nl> + " LIMIT " , <nl> + " USING " , <nl> + " USE " , <nl> + " COUNT " , <nl> + " SET " , <nl> + " BEGIN " , <nl> + " UNLOGGED " , <nl> + " BATCH " , <nl> + " APPLY " , <nl> + " TRUNCATE " , <nl> + " DELETE " , <nl> + " IN " , <nl> + " CREATE " , <nl> + " KEYSPACE " , <nl> + " SCHEMA " , <nl> + " COLUMNFAMILY " , <nl> + " TABLE " , <nl> + " MATERIALIZED " , <nl> + " VIEW " , <nl> + " INDEX " , <nl> + " ON " , <nl> + " TO " , <nl> + " DROP " , <nl> + " PRIMARY " , <nl> + " INTO " , <nl> + " TIMESTAMP " , <nl> + " TTL " , <nl> + " ALTER " , <nl> + " RENAME " , <nl> + " ADD " , <nl> + " ORDER " , <nl> + " BY " , <nl> + " ASC " , <nl> + " DESC " , <nl> + " ALLOW " , <nl> + " IF " , <nl> + " IS " , <nl> + " GRANT " , <nl> + " OF " , <nl> + " REVOKE " , <nl> + " MODIFY " , <nl> + " AUTHORIZE " , <nl> + " DESCRIBE " , <nl> + " EXECUTE " , <nl> + " NORECURSIVE " , <nl> + " ASCII " , <nl> + " BIGINT " , <nl> + " BLOB " , <nl> + " BOOLEAN " , <nl> + " COUNTER " , <nl> + " DECIMAL " , <nl> + " DOUBLE " , <nl> + " FLOAT " , <nl> + " INET " , <nl> + " INT " , <nl> + " SMALLINT " , <nl> + " TINYINT " , <nl> + " TEXT " , <nl> + " UUID " , <nl> + " VARCHAR " , <nl> + " VARINT " , <nl> + " TIMEUUID " , <nl> + " TOKEN " , <nl> + " WRITETIME " , <nl> + " DATE " , <nl> + " TIME " , <nl> + " NULL " , <nl> + " NOT " , <nl> + " NAN " , <nl> + " INFINITY " , <nl> + " OR " , <nl> + " REPLACE " } ; <nl> + <nl> + private static final Set < String > reservedSet = ImmutableSet . copyOf ( reservedKeywords ) ; <nl> + <nl> + static boolean isReserved ( String text ) <nl> + { <nl> + return reservedSet . contains ( text . toUpperCase ( ) ) ; <nl> + } <nl> + } <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / ViewTest . java b / test / unit / org / apache / cassandra / cql3 / ViewTest . java <nl> index c9ef401 . . a6de756 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / ViewTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / ViewTest . java <nl> @ @ - 1137 , 4 + 1137 , 24 @ @ public class ViewTest extends CQLTester <nl> assertRowsNet ( protocolVersion , executeNet ( protocolVersion , " SELECT * FROM % s " ) , row ( 0 , 1 , null , " rab " ) ) ; <nl> assertRowsNet ( protocolVersion , executeNet ( protocolVersion , " SELECT * FROM mv " ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testReservedKeywordsInMV ( ) throws Throwable <nl> + { <nl> + createTable ( " CREATE TABLE % s ( \ " token \ " int PRIMARY KEY , \ " keyspace \ " int ) " ) ; <nl> + <nl> + executeNet ( protocolVersion , " USE " + keyspace ( ) ) ; <nl> + <nl> + createView ( " mv " , <nl> + " CREATE MATERIALIZED VIEW % s AS " + <nl> + " SELECT \ " keyspace \ " , \ " token \ " " + <nl> + " FROM % % s " + <nl> + " WHERE \ " keyspace \ " IS NOT NULL AND \ " token \ " IS NOT NULL " + <nl> + " PRIMARY KEY ( \ " keyspace \ " , \ " token \ " ) " ) ; <nl> + <nl> + execute ( " INSERT INTO % s ( \ " token \ " , \ " keyspace \ " ) VALUES ( ? , ? ) " , 0 , 1 ) ; <nl> + <nl> + assertRowsNet ( protocolVersion , executeNet ( protocolVersion , " SELECT * FROM % s " ) , row ( 0 , 1 ) ) ; <nl> + assertRowsNet ( protocolVersion , executeNet ( protocolVersion , " SELECT * FROM mv " ) , row ( 1 , 0 ) ) ; <nl> + } <nl> } <nl> diff - - git a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java <nl> index c2e5cb7 . . fdcc99c 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java <nl> @ @ - 635 , 10 + 635 , 10 @ @ public class ColumnFamilyStoreCQLHelperTest extends CQLTester <nl> <nl> assertTrue ( ColumnFamilyStoreCQLHelper . getCFMetadataAsCQL ( cfs . metadata , true ) . startsWith ( <nl> " CREATE TABLE IF NOT EXISTS " + DYNAMIC _ COMPOSITE + " . " + DYNAMIC _ COMPOSITE + " ( \ n " + <nl> - " \ tkey ascii , \ n " + <nl> + " \ t \ " key \ " ascii , \ n " + <nl> " \ tcols ' org . apache . cassandra . db . marshal . DynamicCompositeType ( a = > org . apache . cassandra . db . marshal . BytesType , b = > org . apache . cassandra . db . marshal . BytesType , c = > org . apache . cassandra . db . marshal . BytesType ) ' , \ n " + <nl> " \ tval ascii , \ n " + <nl> - " \ tPRIMARY KEY ( key , cols ) ) \ n " + <nl> + " \ tPRIMARY KEY ( \ " key \ " , cols ) ) \ n " + <nl> " \ tWITH ID = " + cfs . metadata . cfId + " \ n " + <nl> " \ tAND COMPACT STORAGE " ) ) ; <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index f291674 . . e82eedd 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 10 
 + * Preserve quoted reserved keyword column names in MV creation ( CASSANDRA - 11803 ) 
 * nodetool stopdaemon errors out ( CASSANDRA - 12646 ) 
 * Split materialized view mutations on build to prevent OOM ( CASSANDRA - 12268 ) 
 * mx4j does not work in 3 . 0 . 8 ( CASSANDRA - 12274 ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java b / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java 
 index 1e25b23 . . ceb81be 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java 
 + + + b / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java 
 @ @ - 362 , 8 + 362 , 9 @ @ public class ColumnIdentifier extends Selectable implements IMeasurableMemory , C 
 
 public static String maybeQuote ( String text ) 
 { 
 - if ( UNQUOTED _ IDENTIFIER . matcher ( text ) . matches ( ) ) 
 + if ( UNQUOTED _ IDENTIFIER . matcher ( text ) . matches ( ) & & ! ReservedKeywords . isReserved ( text ) ) 
 return text ; 
 + 
 return ' " ' + PATTERN _ DOUBLE _ QUOTE . matcher ( text ) . replaceAll ( Matcher . quoteReplacement ( " \ " \ " " ) ) + ' " ' ; 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / cql3 / Cql . g b / src / java / org / apache / cassandra / cql3 / Cql . g 
 index d50b979 . . 3123877 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / Cql . g 
 + + + b / src / java / org / apache / cassandra / cql3 / Cql . g 
 @ @ - 1634 , 6 + 1634 , 8 @ @ basic _ unreserved _ keyword returns [ String str ] 
 ; 
 
 / / Case - insensitive keywords 
 + / / When adding a new reserved keyword , add entry to o . a . c . cql3 . ReservedKeywords as well 
 + / / When adding a new unreserved keyword , add entry to list above 
 K _ SELECT : S E L E C T ; 
 K _ FROM : F R O M ; 
 K _ AS : A S ; 
 diff - - git a / src / java / org / apache / cassandra / cql3 / ReservedKeywords . java b / src / java / org / apache / cassandra / cql3 / ReservedKeywords . java 
 new file mode 100644 
 index 0000000 . . 91b7e61 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / cql3 / ReservedKeywords . java 
 @ @ - 0 , 0 + 1 , 118 @ @ 
 + / * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package org . apache . cassandra . cql3 ; 
 + 
 + import java . util . Set ; 
 + 
 + import com . google . common . collect . ImmutableSet ; 
 + 
 + class ReservedKeywords 
 + { 
 + private static final String [ ] reservedKeywords = new String [ ] 
 + { 
 + " SELECT " , 
 + " FROM " , 
 + " WHERE " , 
 + " AND " , 
 + " KEY " , 
 + " ENTRIES " , 
 + " FULL " , 
 + " INSERT " , 
 + " UPDATE " , 
 + " WITH " , 
 + " LIMIT " , 
 + " USING " , 
 + " USE " , 
 + " COUNT " , 
 + " SET " , 
 + " BEGIN " , 
 + " UNLOGGED " , 
 + " BATCH " , 
 + " APPLY " , 
 + " TRUNCATE " , 
 + " DELETE " , 
 + " IN " , 
 + " CREATE " , 
 + " KEYSPACE " , 
 + " SCHEMA " , 
 + " COLUMNFAMILY " , 
 + " TABLE " , 
 + " MATERIALIZED " , 
 + " VIEW " , 
 + " INDEX " , 
 + " ON " , 
 + " TO " , 
 + " DROP " , 
 + " PRIMARY " , 
 + " INTO " , 
 + " TIMESTAMP " , 
 + " TTL " , 
 + " ALTER " , 
 + " RENAME " , 
 + " ADD " , 
 + " ORDER " , 
 + " BY " , 
 + " ASC " , 
 + " DESC " , 
 + " ALLOW " , 
 + " IF " , 
 + " IS " , 
 + " GRANT " , 
 + " OF " , 
 + " REVOKE " , 
 + " MODIFY " , 
 + " AUTHORIZE " , 
 + " DESCRIBE " , 
 + " EXECUTE " , 
 + " NORECURSIVE " , 
 + " ASCII " , 
 + " BIGINT " , 
 + " BLOB " , 
 + " BOOLEAN " , 
 + " COUNTER " , 
 + " DECIMAL " , 
 + " DOUBLE " , 
 + " FLOAT " , 
 + " INET " , 
 + " INT " , 
 + " SMALLINT " , 
 + " TINYINT " , 
 + " TEXT " , 
 + " UUID " , 
 + " VARCHAR " , 
 + " VARINT " , 
 + " TIMEUUID " , 
 + " TOKEN " , 
 + " WRITETIME " , 
 + " DATE " , 
 + " TIME " , 
 + " NULL " , 
 + " NOT " , 
 + " NAN " , 
 + " INFINITY " , 
 + " OR " , 
 + " REPLACE " } ; 
 + 
 + private static final Set < String > reservedSet = ImmutableSet . copyOf ( reservedKeywords ) ; 
 + 
 + static boolean isReserved ( String text ) 
 + { 
 + return reservedSet . contains ( text . toUpperCase ( ) ) ; 
 + } 
 + } 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / ViewTest . java b / test / unit / org / apache / cassandra / cql3 / ViewTest . java 
 index c9ef401 . . a6de756 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / ViewTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / ViewTest . java 
 @ @ - 1137 , 4 + 1137 , 24 @ @ public class ViewTest extends CQLTester 
 assertRowsNet ( protocolVersion , executeNet ( protocolVersion , " SELECT * FROM % s " ) , row ( 0 , 1 , null , " rab " ) ) ; 
 assertRowsNet ( protocolVersion , executeNet ( protocolVersion , " SELECT * FROM mv " ) ) ; 
 } 
 + 
 + @ Test 
 + public void testReservedKeywordsInMV ( ) throws Throwable 
 + { 
 + createTable ( " CREATE TABLE % s ( \ " token \ " int PRIMARY KEY , \ " keyspace \ " int ) " ) ; 
 + 
 + executeNet ( protocolVersion , " USE " + keyspace ( ) ) ; 
 + 
 + createView ( " mv " , 
 + " CREATE MATERIALIZED VIEW % s AS " + 
 + " SELECT \ " keyspace \ " , \ " token \ " " + 
 + " FROM % % s " + 
 + " WHERE \ " keyspace \ " IS NOT NULL AND \ " token \ " IS NOT NULL " + 
 + " PRIMARY KEY ( \ " keyspace \ " , \ " token \ " ) " ) ; 
 + 
 + execute ( " INSERT INTO % s ( \ " token \ " , \ " keyspace \ " ) VALUES ( ? , ? ) " , 0 , 1 ) ; 
 + 
 + assertRowsNet ( protocolVersion , executeNet ( protocolVersion , " SELECT * FROM % s " ) , row ( 0 , 1 ) ) ; 
 + assertRowsNet ( protocolVersion , executeNet ( protocolVersion , " SELECT * FROM mv " ) , row ( 1 , 0 ) ) ; 
 + } 
 } 
 diff - - git a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java 
 index c2e5cb7 . . fdcc99c 100644 
 - - - a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java 
 + + + b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java 
 @ @ - 635 , 10 + 635 , 10 @ @ public class ColumnFamilyStoreCQLHelperTest extends CQLTester 
 
 assertTrue ( ColumnFamilyStoreCQLHelper . getCFMetadataAsCQL ( cfs . metadata , true ) . startsWith ( 
 " CREATE TABLE IF NOT EXISTS " + DYNAMIC _ COMPOSITE + " . " + DYNAMIC _ COMPOSITE + " ( \ n " + 
 - " \ tkey ascii , \ n " + 
 + " \ t \ " key \ " ascii , \ n " + 
 " \ tcols ' org . apache . cassandra . db . marshal . DynamicCompositeType ( a = > org . apache . cassandra . db . marshal . BytesType , b = > org . apache . cassandra . db . marshal . BytesType , c = > org . apache . cassandra . db . marshal . BytesType ) ' , \ n " + 
 " \ tval ascii , \ n " + 
 - " \ tPRIMARY KEY ( key , cols ) ) \ n " + 
 + " \ tPRIMARY KEY ( \ " key \ " , cols ) ) \ n " + 
 " \ tWITH ID = " + cfs . metadata . cfId + " \ n " + 
 " \ tAND COMPACT STORAGE " ) ) ; 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
