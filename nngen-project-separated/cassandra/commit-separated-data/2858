BLEU SCORE: 0.08310415003234632

TEST MSG: use junit assertions
GENERATED MSG: support streaming SSTables of older versions

TEST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / cache / CacheProviderTest . java b / test / unit / org / apache / cassandra / cache / CacheProviderTest . java <nl> index 189e888 . . aa6d3dd 100644 <nl> - - - a / test / unit / org / apache / cassandra / cache / CacheProviderTest . java <nl> + + + b / test / unit / org / apache / cassandra / cache / CacheProviderTest . java <nl> @ @ - 51 , 7 + 51 , 7 @ @ public class CacheProviderTest extends SchemaLoader <nl> private void simpleCase ( ColumnFamily cf , ICache < MeasureableString , IRowCacheEntry > cache ) <nl> { <nl> cache . put ( key1 , cf ) ; <nl> - assert cache . get ( key1 ) ! = null ; <nl> + assertNotNull ( cache . get ( key1 ) ) ; <nl> <nl> assertDigests ( cache . get ( key1 ) , cf ) ; <nl> cache . put ( key2 , cf ) ; <nl> @ @ - 65 , 8 + 65 , 8 @ @ public class CacheProviderTest extends SchemaLoader <nl> private void assertDigests ( IRowCacheEntry one , ColumnFamily two ) <nl> { <nl> / / CF does not implement . equals <nl> - assert one instanceof ColumnFamily ; <nl> - assert ColumnFamily . digest ( ( ColumnFamily ) one ) . equals ( ColumnFamily . digest ( two ) ) ; <nl> + assertTrue ( one instanceof ColumnFamily ) ; <nl> + assertEquals ( ColumnFamily . digest ( ( ColumnFamily ) one ) , ColumnFamily . digest ( two ) ) ; <nl> } <nl> <nl> / / TODO this isn ' t terribly useful
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 6b2e2ba . . 6fa719f 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * Fix bugs in the native protocol v2 ( CASSANDRA - 5770 ) <nl> * CAS on ' primary key only ' table ( CASSANDRA - 5715 ) <nl> * Support streaming SSTables of old versions ( CASSANDRA - 5772 ) <nl> + * Always respect protocol version in native protocol ( CASSANDRA - 5778 ) <nl> <nl> <nl> 2 . 0 . 0 - beta1 <nl> diff - - git a / doc / native _ protocol _ v2 . spec b / doc / native _ protocol _ v2 . spec <nl> index 76d697f . . 9b6d52c 100644 <nl> - - - a / doc / native _ protocol _ v2 . spec <nl> + + + b / doc / native _ protocol _ v2 . spec <nl> @ @ - 69 , 10 + 69 , 8 @ @ Table of Contents <nl> <nl> The protocol distinguishes 2 types of frames : requests and responses . Requests <nl> are those frame sent by the clients to the server , response are the ones sent <nl> - by the server . Note however that while communication are initiated by the <nl> - client with the server responding to request , the protocol may likely add <nl> - server pushes in the future , so responses does not obligatory come right after <nl> - a client request . <nl> + by the server . Note however that the protocol supports server pushes ( events ) <nl> + so responses does not necessarily come right after a client request . <nl> <nl> Note to client implementors : clients library should always assume that the <nl> body of a given frame may contain more data than what is described in this <nl> @ @ - 98 , 6 + 96 , 11 @ @ Table of Contents <nl> 0x02 Request frame for this protocol version <nl> 0x82 Response frame for this protocol version <nl> <nl> + Please note that the while every message ship with the version , only one version <nl> + of messages is accepted on a given connection . In other words , the first message <nl> + exchanged ( STARTUP ) sets the version for the connection for the lifetime of this <nl> + connection . <nl> + <nl> This document describe the version 2 of the protocol . For the changes made since <nl> version 1 , see Section 9 . <nl> <nl> diff - - git a / src / java / org / apache / cassandra / transport / Connection . java b / src / java / org / apache / cassandra / transport / Connection . java <nl> index 67f06a4 . . a72402f 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / Connection . java <nl> + + + b / src / java / org / apache / cassandra / transport / Connection . java <nl> @ @ - 21 , 13 + 21 , 19 @ @ import org . jboss . netty . channel . Channel ; <nl> <nl> public class Connection <nl> { <nl> - private volatile FrameCompressor frameCompressor ; <nl> - private volatile Channel channel ; <nl> + private final Channel channel ; <nl> + private final int version ; <nl> private final Tracker tracker ; <nl> <nl> - public Connection ( Tracker tracker ) <nl> + private volatile FrameCompressor frameCompressor ; <nl> + <nl> + public Connection ( Channel channel , int version , Tracker tracker ) <nl> { <nl> + this . channel = channel ; <nl> + this . version = version ; <nl> this . tracker = tracker ; <nl> + <nl> + tracker . addConnection ( channel , this ) ; <nl> } <nl> <nl> public void setCompressor ( FrameCompressor compressor ) <nl> @ @ - 45 , 10 + 51 , 9 @ @ public class Connection <nl> return tracker ; <nl> } <nl> <nl> - public void registerChannel ( Channel ch ) <nl> + public int getVersion ( ) <nl> { <nl> - channel = ch ; <nl> - tracker . addConnection ( ch , this ) ; <nl> + return version ; <nl> } <nl> <nl> public Channel channel ( ) <nl> @ @ - 58 , 7 + 63 , 7 @ @ public class Connection <nl> <nl> public interface Factory <nl> { <nl> - public Connection newConnection ( Tracker tracker ) ; <nl> + public Connection newConnection ( Channel channel , int version ) ; <nl> } <nl> <nl> public interface Tracker <nl> diff - - git a / src / java / org / apache / cassandra / transport / Frame . java b / src / java / org / apache / cassandra / transport / Frame . java <nl> index 014d512 . . b19ea33 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / Frame . java <nl> + + + b / src / java / org / apache / cassandra / transport / Frame . java <nl> @ @ - 34 , 7 + 34 , 6 @ @ public class Frame <nl> { <nl> public final Header header ; <nl> public final ChannelBuffer body ; <nl> - public final Connection connection ; <nl> <nl> / * * <nl> * On - wire frame . <nl> @ @ - 47 , 14 + 46 , 13 @ @ public class Frame <nl> * | length | <nl> * + - - - - - - - - - + - - - - - - - - - + - - - - - - - - - + - - - - - - - - - + <nl> * / <nl> - private Frame ( Header header , ChannelBuffer body , Connection connection ) <nl> + private Frame ( Header header , ChannelBuffer body ) <nl> { <nl> this . header = header ; <nl> this . body = body ; <nl> - this . connection = connection ; <nl> } <nl> <nl> - public static Frame create ( ChannelBuffer fullFrame , Connection connection ) <nl> + public static Frame create ( ChannelBuffer fullFrame ) <nl> { <nl> assert fullFrame . readableBytes ( ) > = Header . LENGTH : String . format ( " Frame too short ( % d bytes = % s ) " , <nl> fullFrame . readableBytes ( ) , <nl> @ @ - 72 , 13 + 70 , 13 @ @ public class Frame <nl> version = version & 0x7F ; <nl> <nl> Header header = new Header ( version , flags , streamId , Message . Type . fromOpcode ( opcode , direction ) ) ; <nl> - return new Frame ( header , fullFrame , connection ) ; <nl> + return new Frame ( header , fullFrame ) ; <nl> } <nl> <nl> - public static Frame create ( Message . Type type , int streamId , int version , EnumSet < Header . Flag > flags , ChannelBuffer body , Connection connection ) <nl> + public static Frame create ( Message . Type type , int streamId , int version , EnumSet < Header . Flag > flags , ChannelBuffer body ) <nl> { <nl> Header header = new Header ( version , flags , streamId , type ) ; <nl> - return new Frame ( header , body , connection ) ; <nl> + return new Frame ( header , body ) ; <nl> } <nl> <nl> public static class Header <nl> @ @ - 134 , 25 + 132 , 19 @ @ public class Frame <nl> <nl> public Frame with ( ChannelBuffer newBody ) <nl> { <nl> - return new Frame ( header , newBody , connection ) ; <nl> + return new Frame ( header , newBody ) ; <nl> } <nl> <nl> public static class Decoder extends LengthFieldBasedFrameDecoder <nl> { <nl> private static final int MAX _ FRAME _ LENTH = 256 * 1024 * 1024 ; / / 256 MB <nl> - private final Connection connection ; <nl> <nl> - public Decoder ( Connection . Tracker tracker , Connection . Factory factory ) <nl> - { <nl> - super ( MAX _ FRAME _ LENTH , 4 , 4 , 0 , 0 , true ) ; <nl> - this . connection = factory . newConnection ( tracker ) ; <nl> - } <nl> + private final Connection . Factory factory ; <nl> <nl> - @ Override <nl> - public void channelOpen ( ChannelHandlerContext ctx , ChannelStateEvent e ) <nl> - throws Exception <nl> + public Decoder ( Connection . Factory factory ) <nl> { <nl> - connection . registerChannel ( e . getChannel ( ) ) ; <nl> + super ( MAX _ FRAME _ LENTH , 4 , 4 , 0 , 0 , true ) ; <nl> + this . factory = factory ; <nl> } <nl> <nl> @ Override <nl> @ @ - 183 , 7 + 175 , 19 @ @ public class Frame <nl> { <nl> return null ; <nl> } <nl> - return Frame . create ( frame , connection ) ; <nl> + <nl> + Connection connection = ( Connection ) channel . getAttachment ( ) ; <nl> + if ( connection = = null ) <nl> + { <nl> + / / First message seen on this channel , attach the connection object <nl> + connection = factory . newConnection ( channel , version ) ; <nl> + channel . setAttachment ( connection ) ; <nl> + } <nl> + else if ( connection . getVersion ( ) ! = version ) <nl> + { <nl> + throw new ProtocolException ( String . format ( " Invalid message version . Got % d but previous messages on this connection had version % d " , version , connection . getVersion ( ) ) ) ; <nl> + } <nl> + return Frame . create ( frame ) ; <nl> } <nl> catch ( CorruptedFrameException e ) <nl> { <nl> @ @ - 225 , 11 + 229 , 12 @ @ public class Frame <nl> assert msg instanceof Frame : " Expecting frame , got " + msg ; <nl> <nl> Frame frame = ( Frame ) msg ; <nl> + Connection connection = ( Connection ) channel . getAttachment ( ) ; <nl> <nl> - if ( ! frame . header . flags . contains ( Header . Flag . COMPRESSED ) ) <nl> + if ( ! frame . header . flags . contains ( Header . Flag . COMPRESSED ) | | connection = = null ) <nl> return frame ; <nl> <nl> - FrameCompressor compressor = frame . connection . getCompressor ( ) ; <nl> + FrameCompressor compressor = connection . getCompressor ( ) ; <nl> if ( compressor = = null ) <nl> return frame ; <nl> <nl> @ @ - 245 , 12 + 250 , 13 @ @ public class Frame <nl> assert msg instanceof Frame : " Expecting frame , got " + msg ; <nl> <nl> Frame frame = ( Frame ) msg ; <nl> + Connection connection = ( Connection ) channel . getAttachment ( ) ; <nl> <nl> / / Never compress STARTUP messages <nl> - if ( frame . header . type = = Message . Type . STARTUP | | frame . connection = = null ) <nl> + if ( frame . header . type = = Message . Type . STARTUP | | connection = = null ) <nl> return frame ; <nl> <nl> - FrameCompressor compressor = frame . connection . getCompressor ( ) ; <nl> + FrameCompressor compressor = connection . getCompressor ( ) ; <nl> if ( compressor = = null ) <nl> return frame ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / transport / Message . java b / src / java / org / apache / cassandra / transport / Message . java <nl> index 8c46f9b . . 557bddf 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / Message . java <nl> + + + b / src / java / org / apache / cassandra / transport / Message . java <nl> @ @ - 119 , 7 + 119 , 6 @ @ public abstract class Message <nl> public final Type type ; <nl> protected volatile Connection connection ; <nl> private volatile int streamId ; <nl> - private volatile int version = Frame . Header . CURRENT _ VERSION ; <nl> <nl> protected Message ( Type type ) <nl> { <nl> @ @ - 147 , 18 + 146 , 7 @ @ public abstract class Message <nl> return streamId ; <nl> } <nl> <nl> - public int getVersion ( ) <nl> - { <nl> - return version ; <nl> - } <nl> - <nl> - public Message setVersion ( int version ) <nl> - { <nl> - this . version = version ; <nl> - return this ; <nl> - } <nl> - <nl> - public abstract ChannelBuffer encode ( ) ; <nl> + public abstract ChannelBuffer encode ( int version ) ; <nl> <nl> public static abstract class Request extends Message <nl> { <nl> @ @ - 225 , 13 + 213 , 12 @ @ public abstract class Message <nl> { <nl> Message message = frame . header . type . codec . decode ( frame . body , frame . header . version ) ; <nl> message . setStreamId ( frame . header . streamId ) ; <nl> - message . setVersion ( frame . header . version ) ; <nl> <nl> if ( isRequest ) <nl> { <nl> assert message instanceof Request ; <nl> Request req = ( Request ) message ; <nl> - req . attach ( frame . connection ) ; <nl> + req . attach ( ( Connection ) channel . getAttachment ( ) ) ; <nl> if ( isTracing ) <nl> req . setTracingRequested ( ) ; <nl> } <nl> @ @ - 260 , 7 + 247 , 11 @ @ public abstract class Message <nl> <nl> Message message = ( Message ) msg ; <nl> <nl> - ChannelBuffer body = message . encode ( ) ; <nl> + Connection connection = ( Connection ) channel . getAttachment ( ) ; <nl> + / / The only case the connection can be null is when we send the initial STARTUP message ( client side thus ) <nl> + int version = connection = = null ? Frame . Header . CURRENT _ VERSION : connection . getVersion ( ) ; <nl> + <nl> + ChannelBuffer body = message . encode ( version ) ; <nl> EnumSet < Frame . Header . Flag > flags = EnumSet . noneOf ( Frame . Header . Flag . class ) ; <nl> if ( message instanceof Response ) <nl> { <nl> @ @ - 278 , 7 + 269 , 7 @ @ public abstract class Message <nl> flags . add ( Frame . Header . Flag . TRACING ) ; <nl> } <nl> <nl> - return Frame . create ( message . type , message . getStreamId ( ) , message . getVersion ( ) , flags , body , message . connection ( ) ) ; <nl> + return Frame . create ( message . type , message . getStreamId ( ) , version , flags , body ) ; <nl> } <nl> } <nl> <nl> @ @ - 298 , 24 + 289 , 23 @ @ public abstract class Message <nl> { <nl> assert request . connection ( ) instanceof ServerConnection ; <nl> ServerConnection connection = ( ServerConnection ) request . connection ( ) ; <nl> - QueryState qstate = connection . validateNewMessage ( request . type , request . getVersion ( ) , request . getStreamId ( ) ) ; <nl> + QueryState qstate = connection . validateNewMessage ( request . type , connection . getVersion ( ) , request . getStreamId ( ) ) ; <nl> <nl> - logger . debug ( " Received : { } , v = { } " , request , request . getVersion ( ) ) ; <nl> + logger . debug ( " Received : { } , v = { } " , request , connection . getVersion ( ) ) ; <nl> <nl> Response response = request . execute ( qstate ) ; <nl> response . setStreamId ( request . getStreamId ( ) ) ; <nl> - response . setVersion ( request . getVersion ( ) ) ; <nl> response . attach ( connection ) ; <nl> connection . applyStateTransition ( request . type , response . type ) ; <nl> <nl> - logger . debug ( " Responding : { } , v = { } " , response , response . getVersion ( ) ) ; <nl> + logger . debug ( " Responding : { } , v = { } " , response , connection . getVersion ( ) ) ; <nl> <nl> ctx . getChannel ( ) . write ( response ) ; <nl> } <nl> catch ( Exception ex ) <nl> { <nl> / / Don ' t let the exception propagate to exceptionCaught ( ) if we can help it so that we can assign the right streamID . <nl> - ctx . getChannel ( ) . write ( ErrorMessage . fromException ( ex ) . setStreamId ( request . getStreamId ( ) ) . setVersion ( request . getVersion ( ) ) ) ; <nl> + ctx . getChannel ( ) . write ( ErrorMessage . fromException ( ex ) . setStreamId ( request . getStreamId ( ) ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / transport / Server . java b / src / java / org / apache / cassandra / transport / Server . java <nl> index 31f5df2 . . 0a0a77c 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / Server . java <nl> + + + b / src / java / org / apache / cassandra / transport / Server . java <nl> @ @ - 66 , 6 + 66 , 14 @ @ public class Server implements CassandraDaemon . Server <nl> <nl> private final ConnectionTracker connectionTracker = new ConnectionTracker ( ) ; <nl> <nl> + private final Connection . Factory connectionFactory = new Connection . Factory ( ) <nl> + { <nl> + public Connection newConnection ( Channel channel , int version ) <nl> + { <nl> + return new ServerConnection ( channel , version , connectionTracker ) ; <nl> + } <nl> + } ; <nl> + <nl> public final InetSocketAddress socket ; <nl> private final AtomicBoolean isRunning = new AtomicBoolean ( false ) ; <nl> <nl> @ @ - 163 , 6 + 171 , 7 @ @ public class Server implements CassandraDaemon . Server <nl> logger . info ( " Stop listening for CQL clients " ) ; <nl> } <nl> <nl> + <nl> public static class ConnectionTracker implements Connection . Tracker <nl> { <nl> public final ChannelGroup allChannels = new DefaultChannelGroup ( ) ; <nl> @ @ - 224 , 7 + 233 , 7 @ @ public class Server implements CassandraDaemon . Server <nl> <nl> / / pipeline . addLast ( " debug " , new LoggingHandler ( ) ) ; <nl> <nl> - pipeline . addLast ( " frameDecoder " , new Frame . Decoder ( server . connectionTracker , ServerConnection . FACTORY ) ) ; <nl> + pipeline . addLast ( " frameDecoder " , new Frame . Decoder ( server . connectionFactory ) ) ; <nl> pipeline . addLast ( " frameEncoder " , frameEncoder ) ; <nl> <nl> pipeline . addLast ( " frameDecompressor " , frameDecompressor ) ; <nl> diff - - git a / src / java / org / apache / cassandra / transport / ServerConnection . java b / src / java / org / apache / cassandra / transport / ServerConnection . java <nl> index 7ec4a00 . . 97b6b5a 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / ServerConnection . java <nl> + + + b / src / java / org / apache / cassandra / transport / ServerConnection . java <nl> @ @ - 19 , 6 + 19 , 8 @ @ package org . apache . cassandra . transport ; <nl> <nl> import java . util . concurrent . ConcurrentMap ; <nl> <nl> + import org . jboss . netty . channel . Channel ; <nl> + <nl> import org . apache . cassandra . auth . IAuthenticator ; <nl> import org . apache . cassandra . auth . ISaslAwareAuthenticator ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> @ @ - 30 , 14 + 32 , 6 @ @ import org . cliffc . high _ scale _ lib . NonBlockingHashMap ; <nl> <nl> public class ServerConnection extends Connection <nl> { <nl> - public static final Factory FACTORY = new Factory ( ) <nl> - { <nl> - public Connection newConnection ( Connection . Tracker tracker ) <nl> - { <nl> - return new ServerConnection ( tracker ) ; <nl> - } <nl> - } ; <nl> - <nl> private enum State { UNINITIALIZED , AUTHENTICATION , READY ; } <nl> <nl> private volatile SaslAuthenticator saslAuthenticator ; <nl> @ @ - 46 , 9 + 40 , 9 @ @ public class ServerConnection extends Connection <nl> <nl> private final ConcurrentMap < Integer , QueryState > queryStates = new NonBlockingHashMap < Integer , QueryState > ( ) ; <nl> <nl> - public ServerConnection ( Connection . Tracker tracker ) <nl> + public ServerConnection ( Channel channel , int version , Connection . Tracker tracker ) <nl> { <nl> - super ( tracker ) ; <nl> + super ( channel , version , tracker ) ; <nl> this . clientState = new ClientState ( ) ; <nl> this . state = State . UNINITIALIZED ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / transport / SimpleClient . java b / src / java / org / apache / cassandra / transport / SimpleClient . java <nl> index b9dd3f5 . . df4f811 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / SimpleClient . java <nl> + + + b / src / java / org / apache / cassandra / transport / SimpleClient . java <nl> @ @ - 71 , 15 + 71 , 17 @ @ public class SimpleClient <nl> <nl> protected final ResponseHandler responseHandler = new ResponseHandler ( ) ; <nl> protected final Connection . Tracker tracker = new ConnectionTracker ( ) ; <nl> - protected final Connection connection = new Connection ( tracker ) ; <nl> + / / We don ' t track connection really , so we don ' t need one Connection per channel <nl> + protected final Connection connection = new Connection ( null , Frame . Header . CURRENT _ VERSION , tracker ) ; <nl> protected ClientBootstrap bootstrap ; <nl> protected Channel channel ; <nl> protected ChannelFuture lastWriteFuture ; <nl> <nl> private final Connection . Factory connectionFactory = new Connection . Factory ( ) <nl> { <nl> - public Connection newConnection ( Connection . Tracker tracker ) <nl> + public Connection newConnection ( Channel channel , int version ) <nl> { <nl> + assert version = = Frame . Header . CURRENT _ VERSION ; <nl> return connection ; <nl> } <nl> } ; <nl> @ @ - 227 , 7 + 229 , 7 @ @ public class SimpleClient <nl> <nl> / / pipeline . addLast ( " debug " , new LoggingHandler ( ) ) ; <nl> <nl> - pipeline . addLast ( " frameDecoder " , new Frame . Decoder ( tracker , connectionFactory ) ) ; <nl> + pipeline . addLast ( " frameDecoder " , new Frame . Decoder ( connectionFactory ) ) ; <nl> pipeline . addLast ( " frameEncoder " , frameEncoder ) ; <nl> <nl> pipeline . addLast ( " frameDecompressor " , frameDecompressor ) ; <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / AuthChallenge . java b / src / java / org / apache / cassandra / transport / messages / AuthChallenge . java <nl> index 63df7d0 . . 92f18bd 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / AuthChallenge . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / AuthChallenge . java <nl> @ @ - 54 , 10 + 54 , 9 @ @ public class AuthChallenge extends Message . Response <nl> this . token = token ; <nl> } <nl> <nl> - @ Override <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> public byte [ ] getToken ( ) <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / AuthResponse . java b / src / java / org / apache / cassandra / transport / messages / AuthResponse . java <nl> index 8a33a72 . . 6b2eb24 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / AuthResponse . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / AuthResponse . java <nl> @ @ - 66 , 10 + 66 , 9 @ @ public class AuthResponse extends Message . Request <nl> this . token = token ; <nl> } <nl> <nl> - @ Override <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / AuthSuccess . java b / src / java / org / apache / cassandra / transport / messages / AuthSuccess . java <nl> index 13c750a . . e4b75e3 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / AuthSuccess . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / AuthSuccess . java <nl> @ @ - 57 , 10 + 57 , 9 @ @ public class AuthSuccess extends Message . Response <nl> this . token = token ; <nl> } <nl> <nl> - @ Override <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> public byte [ ] getToken ( ) <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / AuthenticateMessage . java b / src / java / org / apache / cassandra / transport / messages / AuthenticateMessage . java <nl> index 292f748 . . 11d6443 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / AuthenticateMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / AuthenticateMessage . java <nl> @ @ - 49 , 9 + 49 , 9 @ @ public class AuthenticateMessage extends Message . Response <nl> this . authenticator = authenticator ; <nl> } <nl> <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / BatchMessage . java b / src / java / org / apache / cassandra / transport / messages / BatchMessage . java <nl> index 9fb4482 . . ad348e3 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / BatchMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / BatchMessage . java <nl> @ @ - 158 , 9 + 158 , 9 @ @ public class BatchMessage extends Message . Request <nl> this . consistency = consistency ; <nl> } <nl> <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> public Message . Response execute ( QueryState state ) <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / CredentialsMessage . java b / src / java / org / apache / cassandra / transport / messages / CredentialsMessage . java <nl> index 207907a . . a00d98b 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / CredentialsMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / CredentialsMessage . java <nl> @ @ - 76 , 9 + 76 , 9 @ @ public class CredentialsMessage extends Message . Request <nl> super ( Message . Type . CREDENTIALS ) ; <nl> } <nl> <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> public Message . Response execute ( QueryState state ) <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java b / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java <nl> index 3675f08 . . 7bc65e5 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java <nl> @ @ - 211 , 9 + 211 , 9 @ @ public class ErrorMessage extends Message . Response <nl> return new ErrorMessage ( new ServerError ( e ) , streamId ) ; <nl> } <nl> <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / EventMessage . java b / src / java / org / apache / cassandra / transport / messages / EventMessage . java <nl> index f7a93ae . . 46399fe 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / EventMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / EventMessage . java <nl> @ @ - 46 , 9 + 46 , 9 @ @ public class EventMessage extends Message . Response <nl> this . setStreamId ( - 1 ) ; <nl> } <nl> <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / ExecuteMessage . java b / src / java / org / apache / cassandra / transport / messages / ExecuteMessage . java <nl> index 6dd3fc6 . . f83df9d 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / ExecuteMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / ExecuteMessage . java <nl> @ @ - 167 , 9 + 167 , 9 @ @ public class ExecuteMessage extends Message . Request <nl> this . pagingState = pagingState ; <nl> } <nl> <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> public Message . Response execute ( QueryState state ) <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / OptionsMessage . java b / src / java / org / apache / cassandra / transport / messages / OptionsMessage . java <nl> index 49d8e1b . . 53f8504 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / OptionsMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / OptionsMessage . java <nl> @ @ - 53 , 9 + 53 , 9 @ @ public class OptionsMessage extends Message . Request <nl> super ( Message . Type . OPTIONS ) ; <nl> } <nl> <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> public Message . Response execute ( QueryState state ) <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / PrepareMessage . java b / src / java / org / apache / cassandra / transport / messages / PrepareMessage . java <nl> index 851f3f8 . . d7eaa5b 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / PrepareMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / PrepareMessage . java <nl> @ @ - 52 , 9 + 52 , 9 @ @ public class PrepareMessage extends Message . Request <nl> this . query = query ; <nl> } <nl> <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> public Message . Response execute ( QueryState state ) <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / QueryMessage . java b / src / java / org / apache / cassandra / transport / messages / QueryMessage . java <nl> index e9f3d46 . . 9e8050c 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / QueryMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / QueryMessage . java <nl> @ @ - 184 , 9 + 184 , 9 @ @ public class QueryMessage extends Message . Request <nl> this . pagingState = pagingState ; <nl> } <nl> <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> public Message . Response execute ( QueryState state ) <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / ReadyMessage . java b / src / java / org / apache / cassandra / transport / messages / ReadyMessage . java <nl> index 414fdd3 . . fe90cd9 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / ReadyMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / ReadyMessage . java <nl> @ @ - 45 , 9 + 45 , 9 @ @ public class ReadyMessage extends Message . Response <nl> super ( Message . Type . READY ) ; <nl> } <nl> <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / RegisterMessage . java b / src / java / org / apache / cassandra / transport / messages / RegisterMessage . java <nl> index a6816fb . . 1902f9a 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / RegisterMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / RegisterMessage . java <nl> @ @ - 67 , 9 + 67 , 9 @ @ public class RegisterMessage extends Message . Request <nl> return new ReadyMessage ( ) ; <nl> } <nl> <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / ResultMessage . java b / src / java / org / apache / cassandra / transport / messages / ResultMessage . java <nl> index 9e75f9d . . b703cd0 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / ResultMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / ResultMessage . java <nl> @ @ - 48 , 7 + 48 , 7 @ @ public abstract class ResultMessage extends Message . Response <nl> ChannelBuffer kcb = ChannelBuffers . buffer ( 4 ) ; <nl> kcb . writeInt ( msg . kind . id ) ; <nl> <nl> - ChannelBuffer body = msg . encodeBody ( ) ; <nl> + ChannelBuffer body = msg . encodeBody ( version ) ; <nl> return ChannelBuffers . wrappedBuffer ( kcb , body ) ; <nl> } <nl> } ; <nl> @ @ - 102 , 12 + 102 , 12 @ @ public abstract class ResultMessage extends Message . Response <nl> this . kind = kind ; <nl> } <nl> <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> - protected abstract ChannelBuffer encodeBody ( ) ; <nl> + protected abstract ChannelBuffer encodeBody ( int version ) ; <nl> <nl> public abstract CqlResult toThriftResult ( ) ; <nl> <nl> @ @ - 134 , 9 + 134 , 9 @ @ public abstract class ResultMessage extends Message . Response <nl> } <nl> } ; <nl> <nl> - protected ChannelBuffer encodeBody ( ) <nl> + protected ChannelBuffer encodeBody ( int version ) <nl> { <nl> - return subcodec . encode ( this , getVersion ( ) ) ; <nl> + return subcodec . encode ( this , version ) ; <nl> } <nl> <nl> public CqlResult toThriftResult ( ) <nl> @ @ - 176 , 9 + 176 , 9 @ @ public abstract class ResultMessage extends Message . Response <nl> } <nl> } ; <nl> <nl> - protected ChannelBuffer encodeBody ( ) <nl> + protected ChannelBuffer encodeBody ( int version ) <nl> { <nl> - return subcodec . encode ( this , getVersion ( ) ) ; <nl> + return subcodec . encode ( this , version ) ; <nl> } <nl> <nl> public CqlResult toThriftResult ( ) <nl> @ @ - 218 , 9 + 218 , 9 @ @ public abstract class ResultMessage extends Message . Response <nl> this . result = result ; <nl> } <nl> <nl> - protected ChannelBuffer encodeBody ( ) <nl> + protected ChannelBuffer encodeBody ( int version ) <nl> { <nl> - return subcodec . encode ( this , getVersion ( ) ) ; <nl> + return subcodec . encode ( this , version ) ; <nl> } <nl> <nl> public CqlResult toThriftResult ( ) <nl> @ @ - 299 , 9 + 299 , 9 @ @ public abstract class ResultMessage extends Message . Response <nl> return ( ( SelectStatement ) statement ) . getResultMetadata ( ) ; <nl> } <nl> <nl> - protected ChannelBuffer encodeBody ( ) <nl> + protected ChannelBuffer encodeBody ( int version ) <nl> { <nl> - return subcodec . encode ( this , getVersion ( ) ) ; <nl> + return subcodec . encode ( this , version ) ; <nl> } <nl> <nl> public CqlResult toThriftResult ( ) <nl> @ @ - 382 , 9 + 382 , 9 @ @ public abstract class ResultMessage extends Message . Response <nl> } <nl> } ; <nl> <nl> - protected ChannelBuffer encodeBody ( ) <nl> + protected ChannelBuffer encodeBody ( int version ) <nl> { <nl> - return subcodec . encode ( this , getVersion ( ) ) ; <nl> + return subcodec . encode ( this , version ) ; <nl> } <nl> <nl> public CqlResult toThriftResult ( ) <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / StartupMessage . java b / src / java / org / apache / cassandra / transport / messages / StartupMessage . java <nl> index 6d6d1d9 . . 9ca6a4c 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / StartupMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / StartupMessage . java <nl> @ @ - 61 , 9 + 61 , 9 @ @ public class StartupMessage extends Message . Request <nl> this . options = options ; <nl> } <nl> <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> public Message . Response execute ( QueryState state ) <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / SupportedMessage . java b / src / java / org / apache / cassandra / transport / messages / SupportedMessage . java <nl> index 7318112 . . 0184a8c 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / SupportedMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / SupportedMessage . java <nl> @ @ - 54 , 9 + 54 , 9 @ @ public class SupportedMessage extends Message . Response <nl> this . supported = supported ; <nl> } <nl> <nl> - public ChannelBuffer encode ( ) <nl> + public ChannelBuffer encode ( int version ) <nl> { <nl> - return codec . encode ( this , getVersion ( ) ) ; <nl> + return codec . encode ( this , version ) ; <nl> } <nl> <nl> @ Override

TEST DIFF:
diff - - git a / test / unit / org / apache / cassandra / cache / CacheProviderTest . java b / test / unit / org / apache / cassandra / cache / CacheProviderTest . java 
 index 189e888 . . aa6d3dd 100644 
 - - - a / test / unit / org / apache / cassandra / cache / CacheProviderTest . java 
 + + + b / test / unit / org / apache / cassandra / cache / CacheProviderTest . java 
 @ @ - 51 , 7 + 51 , 7 @ @ public class CacheProviderTest extends SchemaLoader 
 private void simpleCase ( ColumnFamily cf , ICache < MeasureableString , IRowCacheEntry > cache ) 
 { 
 cache . put ( key1 , cf ) ; 
 - assert cache . get ( key1 ) ! = null ; 
 + assertNotNull ( cache . get ( key1 ) ) ; 
 
 assertDigests ( cache . get ( key1 ) , cf ) ; 
 cache . put ( key2 , cf ) ; 
 @ @ - 65 , 8 + 65 , 8 @ @ public class CacheProviderTest extends SchemaLoader 
 private void assertDigests ( IRowCacheEntry one , ColumnFamily two ) 
 { 
 / / CF does not implement . equals 
 - assert one instanceof ColumnFamily ; 
 - assert ColumnFamily . digest ( ( ColumnFamily ) one ) . equals ( ColumnFamily . digest ( two ) ) ; 
 + assertTrue ( one instanceof ColumnFamily ) ; 
 + assertEquals ( ColumnFamily . digest ( ( ColumnFamily ) one ) , ColumnFamily . digest ( two ) ) ; 
 } 
 
 / / TODO this isn ' t terribly useful

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 6b2e2ba . . 6fa719f 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 12 , 6 + 12 , 7 @ @ 
 * Fix bugs in the native protocol v2 ( CASSANDRA - 5770 ) 
 * CAS on ' primary key only ' table ( CASSANDRA - 5715 ) 
 * Support streaming SSTables of old versions ( CASSANDRA - 5772 ) 
 + * Always respect protocol version in native protocol ( CASSANDRA - 5778 ) 
 
 
 2 . 0 . 0 - beta1 
 diff - - git a / doc / native _ protocol _ v2 . spec b / doc / native _ protocol _ v2 . spec 
 index 76d697f . . 9b6d52c 100644 
 - - - a / doc / native _ protocol _ v2 . spec 
 + + + b / doc / native _ protocol _ v2 . spec 
 @ @ - 69 , 10 + 69 , 8 @ @ Table of Contents 
 
 The protocol distinguishes 2 types of frames : requests and responses . Requests 
 are those frame sent by the clients to the server , response are the ones sent 
 - by the server . Note however that while communication are initiated by the 
 - client with the server responding to request , the protocol may likely add 
 - server pushes in the future , so responses does not obligatory come right after 
 - a client request . 
 + by the server . Note however that the protocol supports server pushes ( events ) 
 + so responses does not necessarily come right after a client request . 
 
 Note to client implementors : clients library should always assume that the 
 body of a given frame may contain more data than what is described in this 
 @ @ - 98 , 6 + 96 , 11 @ @ Table of Contents 
 0x02 Request frame for this protocol version 
 0x82 Response frame for this protocol version 
 
 + Please note that the while every message ship with the version , only one version 
 + of messages is accepted on a given connection . In other words , the first message 
 + exchanged ( STARTUP ) sets the version for the connection for the lifetime of this 
 + connection . 
 + 
 This document describe the version 2 of the protocol . For the changes made since 
 version 1 , see Section 9 . 
 
 diff - - git a / src / java / org / apache / cassandra / transport / Connection . java b / src / java / org / apache / cassandra / transport / Connection . java 
 index 67f06a4 . . a72402f 100644 
 - - - a / src / java / org / apache / cassandra / transport / Connection . java 
 + + + b / src / java / org / apache / cassandra / transport / Connection . java 
 @ @ - 21 , 13 + 21 , 19 @ @ import org . jboss . netty . channel . Channel ; 
 
 public class Connection 
 { 
 - private volatile FrameCompressor frameCompressor ; 
 - private volatile Channel channel ; 
 + private final Channel channel ; 
 + private final int version ; 
 private final Tracker tracker ; 
 
 - public Connection ( Tracker tracker ) 
 + private volatile FrameCompressor frameCompressor ; 
 + 
 + public Connection ( Channel channel , int version , Tracker tracker ) 
 { 
 + this . channel = channel ; 
 + this . version = version ; 
 this . tracker = tracker ; 
 + 
 + tracker . addConnection ( channel , this ) ; 
 } 
 
 public void setCompressor ( FrameCompressor compressor ) 
 @ @ - 45 , 10 + 51 , 9 @ @ public class Connection 
 return tracker ; 
 } 
 
 - public void registerChannel ( Channel ch ) 
 + public int getVersion ( ) 
 { 
 - channel = ch ; 
 - tracker . addConnection ( ch , this ) ; 
 + return version ; 
 } 
 
 public Channel channel ( ) 
 @ @ - 58 , 7 + 63 , 7 @ @ public class Connection 
 
 public interface Factory 
 { 
 - public Connection newConnection ( Tracker tracker ) ; 
 + public Connection newConnection ( Channel channel , int version ) ; 
 } 
 
 public interface Tracker 
 diff - - git a / src / java / org / apache / cassandra / transport / Frame . java b / src / java / org / apache / cassandra / transport / Frame . java 
 index 014d512 . . b19ea33 100644 
 - - - a / src / java / org / apache / cassandra / transport / Frame . java 
 + + + b / src / java / org / apache / cassandra / transport / Frame . java 
 @ @ - 34 , 7 + 34 , 6 @ @ public class Frame 
 { 
 public final Header header ; 
 public final ChannelBuffer body ; 
 - public final Connection connection ; 
 
 / * * 
 * On - wire frame . 
 @ @ - 47 , 14 + 46 , 13 @ @ public class Frame 
 * | length | 
 * + - - - - - - - - - + - - - - - - - - - + - - - - - - - - - + - - - - - - - - - + 
 * / 
 - private Frame ( Header header , ChannelBuffer body , Connection connection ) 
 + private Frame ( Header header , ChannelBuffer body ) 
 { 
 this . header = header ; 
 this . body = body ; 
 - this . connection = connection ; 
 } 
 
 - public static Frame create ( ChannelBuffer fullFrame , Connection connection ) 
 + public static Frame create ( ChannelBuffer fullFrame ) 
 { 
 assert fullFrame . readableBytes ( ) > = Header . LENGTH : String . format ( " Frame too short ( % d bytes = % s ) " , 
 fullFrame . readableBytes ( ) , 
 @ @ - 72 , 13 + 70 , 13 @ @ public class Frame 
 version = version & 0x7F ; 
 
 Header header = new Header ( version , flags , streamId , Message . Type . fromOpcode ( opcode , direction ) ) ; 
 - return new Frame ( header , fullFrame , connection ) ; 
 + return new Frame ( header , fullFrame ) ; 
 } 
 
 - public static Frame create ( Message . Type type , int streamId , int version , EnumSet < Header . Flag > flags , ChannelBuffer body , Connection connection ) 
 + public static Frame create ( Message . Type type , int streamId , int version , EnumSet < Header . Flag > flags , ChannelBuffer body ) 
 { 
 Header header = new Header ( version , flags , streamId , type ) ; 
 - return new Frame ( header , body , connection ) ; 
 + return new Frame ( header , body ) ; 
 } 
 
 public static class Header 
 @ @ - 134 , 25 + 132 , 19 @ @ public class Frame 
 
 public Frame with ( ChannelBuffer newBody ) 
 { 
 - return new Frame ( header , newBody , connection ) ; 
 + return new Frame ( header , newBody ) ; 
 } 
 
 public static class Decoder extends LengthFieldBasedFrameDecoder 
 { 
 private static final int MAX _ FRAME _ LENTH = 256 * 1024 * 1024 ; / / 256 MB 
 - private final Connection connection ; 
 
 - public Decoder ( Connection . Tracker tracker , Connection . Factory factory ) 
 - { 
 - super ( MAX _ FRAME _ LENTH , 4 , 4 , 0 , 0 , true ) ; 
 - this . connection = factory . newConnection ( tracker ) ; 
 - } 
 + private final Connection . Factory factory ; 
 
 - @ Override 
 - public void channelOpen ( ChannelHandlerContext ctx , ChannelStateEvent e ) 
 - throws Exception 
 + public Decoder ( Connection . Factory factory ) 
 { 
 - connection . registerChannel ( e . getChannel ( ) ) ; 
 + super ( MAX _ FRAME _ LENTH , 4 , 4 , 0 , 0 , true ) ; 
 + this . factory = factory ; 
 } 
 
 @ Override 
 @ @ - 183 , 7 + 175 , 19 @ @ public class Frame 
 { 
 return null ; 
 } 
 - return Frame . create ( frame , connection ) ; 
 + 
 + Connection connection = ( Connection ) channel . getAttachment ( ) ; 
 + if ( connection = = null ) 
 + { 
 + / / First message seen on this channel , attach the connection object 
 + connection = factory . newConnection ( channel , version ) ; 
 + channel . setAttachment ( connection ) ; 
 + } 
 + else if ( connection . getVersion ( ) ! = version ) 
 + { 
 + throw new ProtocolException ( String . format ( " Invalid message version . Got % d but previous messages on this connection had version % d " , version , connection . getVersion ( ) ) ) ; 
 + } 
 + return Frame . create ( frame ) ; 
 } 
 catch ( CorruptedFrameException e ) 
 { 
 @ @ - 225 , 11 + 229 , 12 @ @ public class Frame 
 assert msg instanceof Frame : " Expecting frame , got " + msg ; 
 
 Frame frame = ( Frame ) msg ; 
 + Connection connection = ( Connection ) channel . getAttachment ( ) ; 
 
 - if ( ! frame . header . flags . contains ( Header . Flag . COMPRESSED ) ) 
 + if ( ! frame . header . flags . contains ( Header . Flag . COMPRESSED ) | | connection = = null ) 
 return frame ; 
 
 - FrameCompressor compressor = frame . connection . getCompressor ( ) ; 
 + FrameCompressor compressor = connection . getCompressor ( ) ; 
 if ( compressor = = null ) 
 return frame ; 
 
 @ @ - 245 , 12 + 250 , 13 @ @ public class Frame 
 assert msg instanceof Frame : " Expecting frame , got " + msg ; 
 
 Frame frame = ( Frame ) msg ; 
 + Connection connection = ( Connection ) channel . getAttachment ( ) ; 
 
 / / Never compress STARTUP messages 
 - if ( frame . header . type = = Message . Type . STARTUP | | frame . connection = = null ) 
 + if ( frame . header . type = = Message . Type . STARTUP | | connection = = null ) 
 return frame ; 
 
 - FrameCompressor compressor = frame . connection . getCompressor ( ) ; 
 + FrameCompressor compressor = connection . getCompressor ( ) ; 
 if ( compressor = = null ) 
 return frame ; 
 
 diff - - git a / src / java / org / apache / cassandra / transport / Message . java b / src / java / org / apache / cassandra / transport / Message . java 
 index 8c46f9b . . 557bddf 100644 
 - - - a / src / java / org / apache / cassandra / transport / Message . java 
 + + + b / src / java / org / apache / cassandra / transport / Message . java 
 @ @ - 119 , 7 + 119 , 6 @ @ public abstract class Message 
 public final Type type ; 
 protected volatile Connection connection ; 
 private volatile int streamId ; 
 - private volatile int version = Frame . Header . CURRENT _ VERSION ; 
 
 protected Message ( Type type ) 
 { 
 @ @ - 147 , 18 + 146 , 7 @ @ public abstract class Message 
 return streamId ; 
 } 
 
 - public int getVersion ( ) 
 - { 
 - return version ; 
 - } 
 - 
 - public Message setVersion ( int version ) 
 - { 
 - this . version = version ; 
 - return this ; 
 - } 
 - 
 - public abstract ChannelBuffer encode ( ) ; 
 + public abstract ChannelBuffer encode ( int version ) ; 
 
 public static abstract class Request extends Message 
 { 
 @ @ - 225 , 13 + 213 , 12 @ @ public abstract class Message 
 { 
 Message message = frame . header . type . codec . decode ( frame . body , frame . header . version ) ; 
 message . setStreamId ( frame . header . streamId ) ; 
 - message . setVersion ( frame . header . version ) ; 
 
 if ( isRequest ) 
 { 
 assert message instanceof Request ; 
 Request req = ( Request ) message ; 
 - req . attach ( frame . connection ) ; 
 + req . attach ( ( Connection ) channel . getAttachment ( ) ) ; 
 if ( isTracing ) 
 req . setTracingRequested ( ) ; 
 } 
 @ @ - 260 , 7 + 247 , 11 @ @ public abstract class Message 
 
 Message message = ( Message ) msg ; 
 
 - ChannelBuffer body = message . encode ( ) ; 
 + Connection connection = ( Connection ) channel . getAttachment ( ) ; 
 + / / The only case the connection can be null is when we send the initial STARTUP message ( client side thus ) 
 + int version = connection = = null ? Frame . Header . CURRENT _ VERSION : connection . getVersion ( ) ; 
 + 
 + ChannelBuffer body = message . encode ( version ) ; 
 EnumSet < Frame . Header . Flag > flags = EnumSet . noneOf ( Frame . Header . Flag . class ) ; 
 if ( message instanceof Response ) 
 { 
 @ @ - 278 , 7 + 269 , 7 @ @ public abstract class Message 
 flags . add ( Frame . Header . Flag . TRACING ) ; 
 } 
 
 - return Frame . create ( message . type , message . getStreamId ( ) , message . getVersion ( ) , flags , body , message . connection ( ) ) ; 
 + return Frame . create ( message . type , message . getStreamId ( ) , version , flags , body ) ; 
 } 
 } 
 
 @ @ - 298 , 24 + 289 , 23 @ @ public abstract class Message 
 { 
 assert request . connection ( ) instanceof ServerConnection ; 
 ServerConnection connection = ( ServerConnection ) request . connection ( ) ; 
 - QueryState qstate = connection . validateNewMessage ( request . type , request . getVersion ( ) , request . getStreamId ( ) ) ; 
 + QueryState qstate = connection . validateNewMessage ( request . type , connection . getVersion ( ) , request . getStreamId ( ) ) ; 
 
 - logger . debug ( " Received : { } , v = { } " , request , request . getVersion ( ) ) ; 
 + logger . debug ( " Received : { } , v = { } " , request , connection . getVersion ( ) ) ; 
 
 Response response = request . execute ( qstate ) ; 
 response . setStreamId ( request . getStreamId ( ) ) ; 
 - response . setVersion ( request . getVersion ( ) ) ; 
 response . attach ( connection ) ; 
 connection . applyStateTransition ( request . type , response . type ) ; 
 
 - logger . debug ( " Responding : { } , v = { } " , response , response . getVersion ( ) ) ; 
 + logger . debug ( " Responding : { } , v = { } " , response , connection . getVersion ( ) ) ; 
 
 ctx . getChannel ( ) . write ( response ) ; 
 } 
 catch ( Exception ex ) 
 { 
 / / Don ' t let the exception propagate to exceptionCaught ( ) if we can help it so that we can assign the right streamID . 
 - ctx . getChannel ( ) . write ( ErrorMessage . fromException ( ex ) . setStreamId ( request . getStreamId ( ) ) . setVersion ( request . getVersion ( ) ) ) ; 
 + ctx . getChannel ( ) . write ( ErrorMessage . fromException ( ex ) . setStreamId ( request . getStreamId ( ) ) ) ; 
 } 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / transport / Server . java b / src / java / org / apache / cassandra / transport / Server . java 
 index 31f5df2 . . 0a0a77c 100644 
 - - - a / src / java / org / apache / cassandra / transport / Server . java 
 + + + b / src / java / org / apache / cassandra / transport / Server . java 
 @ @ - 66 , 6 + 66 , 14 @ @ public class Server implements CassandraDaemon . Server 
 
 private final ConnectionTracker connectionTracker = new ConnectionTracker ( ) ; 
 
 + private final Connection . Factory connectionFactory = new Connection . Factory ( ) 
 + { 
 + public Connection newConnection ( Channel channel , int version ) 
 + { 
 + return new ServerConnection ( channel , version , connectionTracker ) ; 
 + } 
 + } ; 
 + 
 public final InetSocketAddress socket ; 
 private final AtomicBoolean isRunning = new AtomicBoolean ( false ) ; 
 
 @ @ - 163 , 6 + 171 , 7 @ @ public class Server implements CassandraDaemon . Server 
 logger . info ( " Stop listening for CQL clients " ) ; 
 } 
 
 + 
 public static class ConnectionTracker implements Connection . Tracker 
 { 
 public final ChannelGroup allChannels = new DefaultChannelGroup ( ) ; 
 @ @ - 224 , 7 + 233 , 7 @ @ public class Server implements CassandraDaemon . Server 
 
 / / pipeline . addLast ( " debug " , new LoggingHandler ( ) ) ; 
 
 - pipeline . addLast ( " frameDecoder " , new Frame . Decoder ( server . connectionTracker , ServerConnection . FACTORY ) ) ; 
 + pipeline . addLast ( " frameDecoder " , new Frame . Decoder ( server . connectionFactory ) ) ; 
 pipeline . addLast ( " frameEncoder " , frameEncoder ) ; 
 
 pipeline . addLast ( " frameDecompressor " , frameDecompressor ) ; 
 diff - - git a / src / java / org / apache / cassandra / transport / ServerConnection . java b / src / java / org / apache / cassandra / transport / ServerConnection . java 
 index 7ec4a00 . . 97b6b5a 100644 
 - - - a / src / java / org / apache / cassandra / transport / ServerConnection . java 
 + + + b / src / java / org / apache / cassandra / transport / ServerConnection . java 
 @ @ - 19 , 6 + 19 , 8 @ @ package org . apache . cassandra . transport ; 
 
 import java . util . concurrent . ConcurrentMap ; 
 
 + import org . jboss . netty . channel . Channel ; 
 + 
 import org . apache . cassandra . auth . IAuthenticator ; 
 import org . apache . cassandra . auth . ISaslAwareAuthenticator ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 @ @ - 30 , 14 + 32 , 6 @ @ import org . cliffc . high _ scale _ lib . NonBlockingHashMap ; 
 
 public class ServerConnection extends Connection 
 { 
 - public static final Factory FACTORY = new Factory ( ) 
 - { 
 - public Connection newConnection ( Connection . Tracker tracker ) 
 - { 
 - return new ServerConnection ( tracker ) ; 
 - } 
 - } ; 
 - 
 private enum State { UNINITIALIZED , AUTHENTICATION , READY ; } 
 
 private volatile SaslAuthenticator saslAuthenticator ; 
 @ @ - 46 , 9 + 40 , 9 @ @ public class ServerConnection extends Connection 
 
 private final ConcurrentMap < Integer , QueryState > queryStates = new NonBlockingHashMap < Integer , QueryState > ( ) ; 
 
 - public ServerConnection ( Connection . Tracker tracker ) 
 + public ServerConnection ( Channel channel , int version , Connection . Tracker tracker ) 
 { 
 - super ( tracker ) ; 
 + super ( channel , version , tracker ) ; 
 this . clientState = new ClientState ( ) ; 
 this . state = State . UNINITIALIZED ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / transport / SimpleClient . java b / src / java / org / apache / cassandra / transport / SimpleClient . java 
 index b9dd3f5 . . df4f811 100644 
 - - - a / src / java / org / apache / cassandra / transport / SimpleClient . java 
 + + + b / src / java / org / apache / cassandra / transport / SimpleClient . java 
 @ @ - 71 , 15 + 71 , 17 @ @ public class SimpleClient 
 
 protected final ResponseHandler responseHandler = new ResponseHandler ( ) ; 
 protected final Connection . Tracker tracker = new ConnectionTracker ( ) ; 
 - protected final Connection connection = new Connection ( tracker ) ; 
 + / / We don ' t track connection really , so we don ' t need one Connection per channel 
 + protected final Connection connection = new Connection ( null , Frame . Header . CURRENT _ VERSION , tracker ) ; 
 protected ClientBootstrap bootstrap ; 
 protected Channel channel ; 
 protected ChannelFuture lastWriteFuture ; 
 
 private final Connection . Factory connectionFactory = new Connection . Factory ( ) 
 { 
 - public Connection newConnection ( Connection . Tracker tracker ) 
 + public Connection newConnection ( Channel channel , int version ) 
 { 
 + assert version = = Frame . Header . CURRENT _ VERSION ; 
 return connection ; 
 } 
 } ; 
 @ @ - 227 , 7 + 229 , 7 @ @ public class SimpleClient 
 
 / / pipeline . addLast ( " debug " , new LoggingHandler ( ) ) ; 
 
 - pipeline . addLast ( " frameDecoder " , new Frame . Decoder ( tracker , connectionFactory ) ) ; 
 + pipeline . addLast ( " frameDecoder " , new Frame . Decoder ( connectionFactory ) ) ; 
 pipeline . addLast ( " frameEncoder " , frameEncoder ) ; 
 
 pipeline . addLast ( " frameDecompressor " , frameDecompressor ) ; 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / AuthChallenge . java b / src / java / org / apache / cassandra / transport / messages / AuthChallenge . java 
 index 63df7d0 . . 92f18bd 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / AuthChallenge . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / AuthChallenge . java 
 @ @ - 54 , 10 + 54 , 9 @ @ public class AuthChallenge extends Message . Response 
 this . token = token ; 
 } 
 
 - @ Override 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 public byte [ ] getToken ( ) 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / AuthResponse . java b / src / java / org / apache / cassandra / transport / messages / AuthResponse . java 
 index 8a33a72 . . 6b2eb24 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / AuthResponse . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / AuthResponse . java 
 @ @ - 66 , 10 + 66 , 9 @ @ public class AuthResponse extends Message . Request 
 this . token = token ; 
 } 
 
 - @ Override 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 @ Override 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / AuthSuccess . java b / src / java / org / apache / cassandra / transport / messages / AuthSuccess . java 
 index 13c750a . . e4b75e3 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / AuthSuccess . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / AuthSuccess . java 
 @ @ - 57 , 10 + 57 , 9 @ @ public class AuthSuccess extends Message . Response 
 this . token = token ; 
 } 
 
 - @ Override 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 public byte [ ] getToken ( ) 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / AuthenticateMessage . java b / src / java / org / apache / cassandra / transport / messages / AuthenticateMessage . java 
 index 292f748 . . 11d6443 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / AuthenticateMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / AuthenticateMessage . java 
 @ @ - 49 , 9 + 49 , 9 @ @ public class AuthenticateMessage extends Message . Response 
 this . authenticator = authenticator ; 
 } 
 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 @ Override 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / BatchMessage . java b / src / java / org / apache / cassandra / transport / messages / BatchMessage . java 
 index 9fb4482 . . ad348e3 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / BatchMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / BatchMessage . java 
 @ @ - 158 , 9 + 158 , 9 @ @ public class BatchMessage extends Message . Request 
 this . consistency = consistency ; 
 } 
 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 public Message . Response execute ( QueryState state ) 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / CredentialsMessage . java b / src / java / org / apache / cassandra / transport / messages / CredentialsMessage . java 
 index 207907a . . a00d98b 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / CredentialsMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / CredentialsMessage . java 
 @ @ - 76 , 9 + 76 , 9 @ @ public class CredentialsMessage extends Message . Request 
 super ( Message . Type . CREDENTIALS ) ; 
 } 
 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 public Message . Response execute ( QueryState state ) 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java b / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java 
 index 3675f08 . . 7bc65e5 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / ErrorMessage . java 
 @ @ - 211 , 9 + 211 , 9 @ @ public class ErrorMessage extends Message . Response 
 return new ErrorMessage ( new ServerError ( e ) , streamId ) ; 
 } 
 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 @ Override 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / EventMessage . java b / src / java / org / apache / cassandra / transport / messages / EventMessage . java 
 index f7a93ae . . 46399fe 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / EventMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / EventMessage . java 
 @ @ - 46 , 9 + 46 , 9 @ @ public class EventMessage extends Message . Response 
 this . setStreamId ( - 1 ) ; 
 } 
 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 @ Override 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / ExecuteMessage . java b / src / java / org / apache / cassandra / transport / messages / ExecuteMessage . java 
 index 6dd3fc6 . . f83df9d 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / ExecuteMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / ExecuteMessage . java 
 @ @ - 167 , 9 + 167 , 9 @ @ public class ExecuteMessage extends Message . Request 
 this . pagingState = pagingState ; 
 } 
 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 public Message . Response execute ( QueryState state ) 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / OptionsMessage . java b / src / java / org / apache / cassandra / transport / messages / OptionsMessage . java 
 index 49d8e1b . . 53f8504 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / OptionsMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / OptionsMessage . java 
 @ @ - 53 , 9 + 53 , 9 @ @ public class OptionsMessage extends Message . Request 
 super ( Message . Type . OPTIONS ) ; 
 } 
 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 public Message . Response execute ( QueryState state ) 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / PrepareMessage . java b / src / java / org / apache / cassandra / transport / messages / PrepareMessage . java 
 index 851f3f8 . . d7eaa5b 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / PrepareMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / PrepareMessage . java 
 @ @ - 52 , 9 + 52 , 9 @ @ public class PrepareMessage extends Message . Request 
 this . query = query ; 
 } 
 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 public Message . Response execute ( QueryState state ) 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / QueryMessage . java b / src / java / org / apache / cassandra / transport / messages / QueryMessage . java 
 index e9f3d46 . . 9e8050c 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / QueryMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / QueryMessage . java 
 @ @ - 184 , 9 + 184 , 9 @ @ public class QueryMessage extends Message . Request 
 this . pagingState = pagingState ; 
 } 
 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 public Message . Response execute ( QueryState state ) 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / ReadyMessage . java b / src / java / org / apache / cassandra / transport / messages / ReadyMessage . java 
 index 414fdd3 . . fe90cd9 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / ReadyMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / ReadyMessage . java 
 @ @ - 45 , 9 + 45 , 9 @ @ public class ReadyMessage extends Message . Response 
 super ( Message . Type . READY ) ; 
 } 
 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 @ Override 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / RegisterMessage . java b / src / java / org / apache / cassandra / transport / messages / RegisterMessage . java 
 index a6816fb . . 1902f9a 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / RegisterMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / RegisterMessage . java 
 @ @ - 67 , 9 + 67 , 9 @ @ public class RegisterMessage extends Message . Request 
 return new ReadyMessage ( ) ; 
 } 
 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 @ Override 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / ResultMessage . java b / src / java / org / apache / cassandra / transport / messages / ResultMessage . java 
 index 9e75f9d . . b703cd0 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / ResultMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / ResultMessage . java 
 @ @ - 48 , 7 + 48 , 7 @ @ public abstract class ResultMessage extends Message . Response 
 ChannelBuffer kcb = ChannelBuffers . buffer ( 4 ) ; 
 kcb . writeInt ( msg . kind . id ) ; 
 
 - ChannelBuffer body = msg . encodeBody ( ) ; 
 + ChannelBuffer body = msg . encodeBody ( version ) ; 
 return ChannelBuffers . wrappedBuffer ( kcb , body ) ; 
 } 
 } ; 
 @ @ - 102 , 12 + 102 , 12 @ @ public abstract class ResultMessage extends Message . Response 
 this . kind = kind ; 
 } 
 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 - protected abstract ChannelBuffer encodeBody ( ) ; 
 + protected abstract ChannelBuffer encodeBody ( int version ) ; 
 
 public abstract CqlResult toThriftResult ( ) ; 
 
 @ @ - 134 , 9 + 134 , 9 @ @ public abstract class ResultMessage extends Message . Response 
 } 
 } ; 
 
 - protected ChannelBuffer encodeBody ( ) 
 + protected ChannelBuffer encodeBody ( int version ) 
 { 
 - return subcodec . encode ( this , getVersion ( ) ) ; 
 + return subcodec . encode ( this , version ) ; 
 } 
 
 public CqlResult toThriftResult ( ) 
 @ @ - 176 , 9 + 176 , 9 @ @ public abstract class ResultMessage extends Message . Response 
 } 
 } ; 
 
 - protected ChannelBuffer encodeBody ( ) 
 + protected ChannelBuffer encodeBody ( int version ) 
 { 
 - return subcodec . encode ( this , getVersion ( ) ) ; 
 + return subcodec . encode ( this , version ) ; 
 } 
 
 public CqlResult toThriftResult ( ) 
 @ @ - 218 , 9 + 218 , 9 @ @ public abstract class ResultMessage extends Message . Response 
 this . result = result ; 
 } 
 
 - protected ChannelBuffer encodeBody ( ) 
 + protected ChannelBuffer encodeBody ( int version ) 
 { 
 - return subcodec . encode ( this , getVersion ( ) ) ; 
 + return subcodec . encode ( this , version ) ; 
 } 
 
 public CqlResult toThriftResult ( ) 
 @ @ - 299 , 9 + 299 , 9 @ @ public abstract class ResultMessage extends Message . Response 
 return ( ( SelectStatement ) statement ) . getResultMetadata ( ) ; 
 } 
 
 - protected ChannelBuffer encodeBody ( ) 
 + protected ChannelBuffer encodeBody ( int version ) 
 { 
 - return subcodec . encode ( this , getVersion ( ) ) ; 
 + return subcodec . encode ( this , version ) ; 
 } 
 
 public CqlResult toThriftResult ( ) 
 @ @ - 382 , 9 + 382 , 9 @ @ public abstract class ResultMessage extends Message . Response 
 } 
 } ; 
 
 - protected ChannelBuffer encodeBody ( ) 
 + protected ChannelBuffer encodeBody ( int version ) 
 { 
 - return subcodec . encode ( this , getVersion ( ) ) ; 
 + return subcodec . encode ( this , version ) ; 
 } 
 
 public CqlResult toThriftResult ( ) 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / StartupMessage . java b / src / java / org / apache / cassandra / transport / messages / StartupMessage . java 
 index 6d6d1d9 . . 9ca6a4c 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / StartupMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / StartupMessage . java 
 @ @ - 61 , 9 + 61 , 9 @ @ public class StartupMessage extends Message . Request 
 this . options = options ; 
 } 
 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 public Message . Response execute ( QueryState state ) 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / SupportedMessage . java b / src / java / org / apache / cassandra / transport / messages / SupportedMessage . java 
 index 7318112 . . 0184a8c 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / SupportedMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / SupportedMessage . java 
 @ @ - 54 , 9 + 54 , 9 @ @ public class SupportedMessage extends Message . Response 
 this . supported = supported ; 
 } 
 
 - public ChannelBuffer encode ( ) 
 + public ChannelBuffer encode ( int version ) 
 { 
 - return codec . encode ( this , getVersion ( ) ) ; 
 + return codec . encode ( this , version ) ; 
 } 
 
 @ Override
