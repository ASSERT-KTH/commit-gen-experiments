BLEU SCORE: 0.020980574531482755

TEST MSG: Raise the phi convict threshold check in 1 . 2
GENERATED MSG: Fix repair hanging silently on an unexpected error

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index d7b7f00 . . 8533e64 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 21 , 7 + 21 , 7 @ @ <nl> * Preserves CQL metadata when updating table from thrift ( CASSANDRA - 6831 ) <nl> * fix time conversion to milliseconds in SimpleCondition . await ( CASSANDRA - 7149 ) <nl> * remove duplicate query for local tokens ( CASSANDRA - 7182 ) <nl> - <nl> + * raise streaming phi convict threshold level ( CASSANDRA - 7063 ) <nl> <nl> 1 . 2 . 16 <nl> * Add UNLOGGED , COUNTER options to BATCH documentation ( CASSANDRA - 6816 ) <nl> diff - - git a / src / java / org / apache / cassandra / streaming / AbstractStreamSession . java b / src / java / org / apache / cassandra / streaming / AbstractStreamSession . java <nl> index f8de827 . . 77dbcd6 100644 <nl> - - - a / src / java / org / apache / cassandra / streaming / AbstractStreamSession . java <nl> + + + b / src / java / org / apache / cassandra / streaming / AbstractStreamSession . java <nl> @ @ - 102 , 7 + 102 , 7 @ @ public abstract class AbstractStreamSession implements IEndpointStateChangeSubsc <nl> return ; <nl> <nl> / / We want a higher confidence in the failure detection than usual because failing a streaming wrongly has a high cost . <nl> - if ( phi < 2 * DatabaseDescriptor . getPhiConvictThreshold ( ) ) <nl> + if ( phi < 100 * DatabaseDescriptor . getPhiConvictThreshold ( ) ) <nl> return ; <nl> <nl> logger . error ( " Stream failed because { } died or was restarted / removed ( streams may still be active "
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 4bdfb91 . . 1abfc65 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 21 , 6 + 21 , 7 @ @ <nl> * cqlsh : add CLUSTERING ORDER BY support to DESCRIBE ( CASSANDRA - 5528 ) <nl> * Add custom secondary index support to CQL3 ( CASSANDRA - 5484 ) <nl> * Fix repair hanging silently on unexpected error ( CASSANDRA - 5229 ) <nl> + * Fix Ec2Snitch regression introduced by CASSANDRA - 5171 ( CASSANDRA - 5432 ) <nl> Merged from 1 . 1 <nl> * Add retry mechanism to OTC for non - droppable _ verbs ( CASSANDRA - 5393 ) <nl> * Use allocator information to improve memtable memory usage estimate <nl> diff - - git a / src / java / org / apache / cassandra / locator / Ec2Snitch . java b / src / java / org / apache / cassandra / locator / Ec2Snitch . java <nl> index f36449d . . a28e2a6 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / Ec2Snitch . java <nl> + + + b / src / java / org / apache / cassandra / locator / Ec2Snitch . java <nl> @ @ - 23 , 13 + 23 , 11 @ @ import java . io . IOException ; <nl> import java . net . HttpURLConnection ; <nl> import java . net . InetAddress ; <nl> import java . net . URL ; <nl> - import java . util . Map ; <nl> <nl> import com . google . common . base . Charsets ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> - import org . apache . cassandra . db . SystemTable ; <nl> import org . apache . cassandra . exceptions . ConfigurationException ; <nl> import org . apache . cassandra . gms . ApplicationState ; <nl> import org . apache . cassandra . gms . EndpointState ; <nl> @ @ - 46 , 7 + 44 , 6 @ @ public class Ec2Snitch extends AbstractNetworkTopologySnitch <nl> protected static final String ZONE _ NAME _ QUERY _ URL = " http : / / 169 . 254 . 169 . 254 / latest / meta - data / placement / availability - zone " ; <nl> private static final String DEFAULT _ DC = " UNKNOWN - DC " ; <nl> private static final String DEFAULT _ RACK = " UNKNOWN - RACK " ; <nl> - private Map < InetAddress , Map < String , String > > savedEndpoints ; <nl> protected String ec2zone ; <nl> protected String ec2region ; <nl> <nl> @ @ - 96 , 13 + 93 , 7 @ @ public class Ec2Snitch extends AbstractNetworkTopologySnitch <nl> return ec2zone ; <nl> EndpointState state = Gossiper . instance . getEndpointStateForEndpoint ( endpoint ) ; <nl> if ( state = = null | | state . getApplicationState ( ApplicationState . RACK ) = = null ) <nl> - { <nl> - if ( savedEndpoints = = null ) <nl> - savedEndpoints = SystemTable . loadDcRackInfo ( ) ; <nl> - if ( savedEndpoints . containsKey ( endpoint ) ) <nl> - return savedEndpoints . get ( endpoint ) . get ( " rack " ) ; <nl> return DEFAULT _ RACK ; <nl> - } <nl> return state . getApplicationState ( ApplicationState . RACK ) . value ; <nl> } <nl> <nl> @ @ - 112 , 13 + 103 , 7 @ @ public class Ec2Snitch extends AbstractNetworkTopologySnitch <nl> return ec2region ; <nl> EndpointState state = Gossiper . instance . getEndpointStateForEndpoint ( endpoint ) ; <nl> if ( state = = null | | state . getApplicationState ( ApplicationState . DC ) = = null ) <nl> - { <nl> - if ( savedEndpoints = = null ) <nl> - savedEndpoints = SystemTable . loadDcRackInfo ( ) ; <nl> - if ( savedEndpoints . containsKey ( endpoint ) ) <nl> - return savedEndpoints . get ( endpoint ) . get ( " data _ center " ) ; <nl> return DEFAULT _ DC ; <nl> - } <nl> return state . getApplicationState ( ApplicationState . DC ) . value ; <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java b / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java <nl> index 88cad5b . . 1bc1893 100644 <nl> - - - a / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java <nl> + + + b / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java <nl> @ @ - 132 , 6 + 132 , 8 @ @ public class OutboundTcpConnectionPool <nl> <nl> InetAddress endPoint ( ) <nl> { <nl> + if ( id . equals ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> + return FBUtilities . getLocalAddress ( ) ; <nl> return resetedEndpoint = = null ? id : resetedEndpoint ; <nl> } <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index d7b7f00 . . 8533e64 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 21 , 7 + 21 , 7 @ @ 
 * Preserves CQL metadata when updating table from thrift ( CASSANDRA - 6831 ) 
 * fix time conversion to milliseconds in SimpleCondition . await ( CASSANDRA - 7149 ) 
 * remove duplicate query for local tokens ( CASSANDRA - 7182 ) 
 - 
 + * raise streaming phi convict threshold level ( CASSANDRA - 7063 ) 
 
 1 . 2 . 16 
 * Add UNLOGGED , COUNTER options to BATCH documentation ( CASSANDRA - 6816 ) 
 diff - - git a / src / java / org / apache / cassandra / streaming / AbstractStreamSession . java b / src / java / org / apache / cassandra / streaming / AbstractStreamSession . java 
 index f8de827 . . 77dbcd6 100644 
 - - - a / src / java / org / apache / cassandra / streaming / AbstractStreamSession . java 
 + + + b / src / java / org / apache / cassandra / streaming / AbstractStreamSession . java 
 @ @ - 102 , 7 + 102 , 7 @ @ public abstract class AbstractStreamSession implements IEndpointStateChangeSubsc 
 return ; 
 
 / / We want a higher confidence in the failure detection than usual because failing a streaming wrongly has a high cost . 
 - if ( phi < 2 * DatabaseDescriptor . getPhiConvictThreshold ( ) ) 
 + if ( phi < 100 * DatabaseDescriptor . getPhiConvictThreshold ( ) ) 
 return ; 
 
 logger . error ( " Stream failed because { } died or was restarted / removed ( streams may still be active "

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 4bdfb91 . . 1abfc65 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 21 , 6 + 21 , 7 @ @ 
 * cqlsh : add CLUSTERING ORDER BY support to DESCRIBE ( CASSANDRA - 5528 ) 
 * Add custom secondary index support to CQL3 ( CASSANDRA - 5484 ) 
 * Fix repair hanging silently on unexpected error ( CASSANDRA - 5229 ) 
 + * Fix Ec2Snitch regression introduced by CASSANDRA - 5171 ( CASSANDRA - 5432 ) 
 Merged from 1 . 1 
 * Add retry mechanism to OTC for non - droppable _ verbs ( CASSANDRA - 5393 ) 
 * Use allocator information to improve memtable memory usage estimate 
 diff - - git a / src / java / org / apache / cassandra / locator / Ec2Snitch . java b / src / java / org / apache / cassandra / locator / Ec2Snitch . java 
 index f36449d . . a28e2a6 100644 
 - - - a / src / java / org / apache / cassandra / locator / Ec2Snitch . java 
 + + + b / src / java / org / apache / cassandra / locator / Ec2Snitch . java 
 @ @ - 23 , 13 + 23 , 11 @ @ import java . io . IOException ; 
 import java . net . HttpURLConnection ; 
 import java . net . InetAddress ; 
 import java . net . URL ; 
 - import java . util . Map ; 
 
 import com . google . common . base . Charsets ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 - import org . apache . cassandra . db . SystemTable ; 
 import org . apache . cassandra . exceptions . ConfigurationException ; 
 import org . apache . cassandra . gms . ApplicationState ; 
 import org . apache . cassandra . gms . EndpointState ; 
 @ @ - 46 , 7 + 44 , 6 @ @ public class Ec2Snitch extends AbstractNetworkTopologySnitch 
 protected static final String ZONE _ NAME _ QUERY _ URL = " http : / / 169 . 254 . 169 . 254 / latest / meta - data / placement / availability - zone " ; 
 private static final String DEFAULT _ DC = " UNKNOWN - DC " ; 
 private static final String DEFAULT _ RACK = " UNKNOWN - RACK " ; 
 - private Map < InetAddress , Map < String , String > > savedEndpoints ; 
 protected String ec2zone ; 
 protected String ec2region ; 
 
 @ @ - 96 , 13 + 93 , 7 @ @ public class Ec2Snitch extends AbstractNetworkTopologySnitch 
 return ec2zone ; 
 EndpointState state = Gossiper . instance . getEndpointStateForEndpoint ( endpoint ) ; 
 if ( state = = null | | state . getApplicationState ( ApplicationState . RACK ) = = null ) 
 - { 
 - if ( savedEndpoints = = null ) 
 - savedEndpoints = SystemTable . loadDcRackInfo ( ) ; 
 - if ( savedEndpoints . containsKey ( endpoint ) ) 
 - return savedEndpoints . get ( endpoint ) . get ( " rack " ) ; 
 return DEFAULT _ RACK ; 
 - } 
 return state . getApplicationState ( ApplicationState . RACK ) . value ; 
 } 
 
 @ @ - 112 , 13 + 103 , 7 @ @ public class Ec2Snitch extends AbstractNetworkTopologySnitch 
 return ec2region ; 
 EndpointState state = Gossiper . instance . getEndpointStateForEndpoint ( endpoint ) ; 
 if ( state = = null | | state . getApplicationState ( ApplicationState . DC ) = = null ) 
 - { 
 - if ( savedEndpoints = = null ) 
 - savedEndpoints = SystemTable . loadDcRackInfo ( ) ; 
 - if ( savedEndpoints . containsKey ( endpoint ) ) 
 - return savedEndpoints . get ( endpoint ) . get ( " data _ center " ) ; 
 return DEFAULT _ DC ; 
 - } 
 return state . getApplicationState ( ApplicationState . DC ) . value ; 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java b / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java 
 index 88cad5b . . 1bc1893 100644 
 - - - a / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java 
 + + + b / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java 
 @ @ - 132 , 6 + 132 , 8 @ @ public class OutboundTcpConnectionPool 
 
 InetAddress endPoint ( ) 
 { 
 + if ( id . equals ( FBUtilities . getBroadcastAddress ( ) ) ) 
 + return FBUtilities . getLocalAddress ( ) ; 
 return resetedEndpoint = = null ? id : resetedEndpoint ; 
 } 

