BLEU SCORE: 0.01908840668714524

TEST MSG: Revert " Populate TokenMetadata early during startup . "
GENERATED MSG: default auto _ bootstrap to true and remove from example configuration

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 0ff9363 . . 232e264 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 45 , 7 + 45 , 6 @ @ Merged from 2 . 0 : <nl> * faster async logback configuration for tests ( CASSANDRA - 9376 ) <nl> * Add ` smallint ` and ` tinyint ` data types ( CASSANDRA - 8951 ) <nl> * Avoid thrift schema creation when native driver is used in stress tool ( CASSANDRA - 9374 ) <nl> - * Populate TokenMetadata early during startup ( CASSANDRA - 9317 ) <nl> * Make Functions . declared thread - safe <nl> * Add client warnings to native protocol v4 ( CASSANDRA - 8930 ) <nl> * Allow roles cache to be invalidated ( CASSANDRA - 8967 ) <nl> diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> index 914600e . . c1b4ad6 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> @ @ - 173 , 7 + 173 , 6 @ @ public class CassandraDaemon <nl> } <nl> } ) ; <nl> <nl> - StorageService . instance . populateTokenMetadata ( ) ; <nl> / / load schema from disk <nl> Schema . instance . loadFromDisk ( ) ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 4fdb7b7 . . e059348 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 565 , 21 + 565 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; <nl> } <nl> <nl> - public void populateTokenMetadata ( ) <nl> - { <nl> - if ( Boolean . parseBoolean ( System . getProperty ( " cassandra . load _ ring _ state " , " true " ) ) ) <nl> - { <nl> - logger . info ( " Populating token metadata from system tables " ) ; <nl> - Multimap < InetAddress , Token > loadedTokens = SystemKeyspace . loadTokens ( ) ; <nl> - if ( ! shouldBootstrap ( ) ) / / if we have not completed bootstrapping , we should not add ourselves as a normal token <nl> - loadedTokens . putAll ( FBUtilities . getBroadcastAddress ( ) , SystemKeyspace . getSavedTokens ( ) ) ; <nl> - for ( InetAddress ep : loadedTokens . keySet ( ) ) <nl> - tokenMetadata . updateNormalTokens ( loadedTokens . get ( ep ) , ep ) ; <nl> - <nl> - logger . info ( " Token metadata : { } " , tokenMetadata ) ; <nl> - } <nl> - } <nl> - <nl> public synchronized void initServer ( ) throws ConfigurationException <nl> { <nl> initServer ( RING _ DELAY ) ; <nl> @ @ - 620 , 6 + 605 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> } <nl> else <nl> { <nl> + tokenMetadata . updateNormalTokens ( loadedTokens . get ( ep ) , ep ) ; <nl> if ( loadedHostIds . containsKey ( ep ) ) <nl> tokenMetadata . updateHostId ( loadedHostIds . get ( ep ) , ep ) ; <nl> Gossiper . instance . addSavedEndpoint ( ep ) ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java <nl> index 9bebdf4 . . 4b77704 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliClient . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliClient . java <nl> @ @ - 17 , 7 + 17 , 6 @ @ <nl> * / <nl> package org . apache . cassandra . cli ; <nl> <nl> - import java . io . IOError ; <nl> import java . io . IOException ; <nl> import java . io . InputStream ; <nl> import java . net . InetAddress ; <nl> @ @ - 58 , 7 + 57 , 6 @ @ import org . yaml . snakeyaml . Yaml ; <nl> / / Cli Client Side Library <nl> public class CliClient <nl> { <nl> - <nl> / * * <nl> * Available value conversion functions <nl> * Used by convertValueByFunction ( Tree functionCall ) method <nl> @ @ - 163 , 6 + 161 , 13 @ @ public class CliClient <nl> <nl> private CliUserHelp getHelp ( ) <nl> { <nl> + if ( help = = null ) <nl> + help = loadHelp ( ) ; <nl> + return help ; <nl> + } <nl> + <nl> + private CliUserHelp loadHelp ( ) <nl> + { <nl> final InputStream is = CliClient . class . getClassLoader ( ) . getResourceAsStream ( " org / apache / cassandra / cli / CliHelp . yaml " ) ; <nl> assert is ! = null ; <nl> <nl> @ @ - 182 , 7 + 187 , 7 @ @ public class CliClient <nl> <nl> public void printBanner ( ) <nl> { <nl> - sessionState . out . println ( help . banner ) ; <nl> + sessionState . out . println ( getHelp ( ) . banner ) ; <nl> } <nl> <nl> / / Execute a CLI Statement <nl> @ @ - 315 , 13 + 320 , 10 @ @ public class CliClient <nl> <nl> private void executeHelp ( Tree tree ) <nl> { <nl> - if ( help = = null ) <nl> - help = getHelp ( ) ; <nl> - <nl> if ( tree . getChildCount ( ) > 0 ) <nl> { <nl> String token = tree . getChild ( 0 ) . getText ( ) ; <nl> - for ( CliCommandHelp ch : help . commands ) <nl> + for ( CliCommandHelp ch : getHelp ( ) . commands ) <nl> { <nl> if ( token . equals ( ch . name ) ) <nl> { <nl> @ @ - 332 , 7 + 334 , 7 @ @ public class CliClient <nl> } <nl> else <nl> { <nl> - sessionState . out . println ( help . help ) ; <nl> + sessionState . out . println ( getHelp ( ) . help ) ; <nl> } <nl> } <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 0ff9363 . . 232e264 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 45 , 7 + 45 , 6 @ @ Merged from 2 . 0 : 
 * faster async logback configuration for tests ( CASSANDRA - 9376 ) 
 * Add ` smallint ` and ` tinyint ` data types ( CASSANDRA - 8951 ) 
 * Avoid thrift schema creation when native driver is used in stress tool ( CASSANDRA - 9374 ) 
 - * Populate TokenMetadata early during startup ( CASSANDRA - 9317 ) 
 * Make Functions . declared thread - safe 
 * Add client warnings to native protocol v4 ( CASSANDRA - 8930 ) 
 * Allow roles cache to be invalidated ( CASSANDRA - 8967 ) 
 diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 index 914600e . . c1b4ad6 100644 
 - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 @ @ - 173 , 7 + 173 , 6 @ @ public class CassandraDaemon 
 } 
 } ) ; 
 
 - StorageService . instance . populateTokenMetadata ( ) ; 
 / / load schema from disk 
 Schema . instance . loadFromDisk ( ) ; 
 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 4fdb7b7 . . e059348 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 565 , 21 + 565 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; 
 } 
 
 - public void populateTokenMetadata ( ) 
 - { 
 - if ( Boolean . parseBoolean ( System . getProperty ( " cassandra . load _ ring _ state " , " true " ) ) ) 
 - { 
 - logger . info ( " Populating token metadata from system tables " ) ; 
 - Multimap < InetAddress , Token > loadedTokens = SystemKeyspace . loadTokens ( ) ; 
 - if ( ! shouldBootstrap ( ) ) / / if we have not completed bootstrapping , we should not add ourselves as a normal token 
 - loadedTokens . putAll ( FBUtilities . getBroadcastAddress ( ) , SystemKeyspace . getSavedTokens ( ) ) ; 
 - for ( InetAddress ep : loadedTokens . keySet ( ) ) 
 - tokenMetadata . updateNormalTokens ( loadedTokens . get ( ep ) , ep ) ; 
 - 
 - logger . info ( " Token metadata : { } " , tokenMetadata ) ; 
 - } 
 - } 
 - 
 public synchronized void initServer ( ) throws ConfigurationException 
 { 
 initServer ( RING _ DELAY ) ; 
 @ @ - 620 , 6 + 605 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 } 
 else 
 { 
 + tokenMetadata . updateNormalTokens ( loadedTokens . get ( ep ) , ep ) ; 
 if ( loadedHostIds . containsKey ( ep ) ) 
 tokenMetadata . updateHostId ( loadedHostIds . get ( ep ) , ep ) ; 
 Gossiper . instance . addSavedEndpoint ( ep ) ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java 
 index 9bebdf4 . . 4b77704 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliClient . java 
 + + + b / src / java / org / apache / cassandra / cli / CliClient . java 
 @ @ - 17 , 7 + 17 , 6 @ @ 
 * / 
 package org . apache . cassandra . cli ; 
 
 - import java . io . IOError ; 
 import java . io . IOException ; 
 import java . io . InputStream ; 
 import java . net . InetAddress ; 
 @ @ - 58 , 7 + 57 , 6 @ @ import org . yaml . snakeyaml . Yaml ; 
 / / Cli Client Side Library 
 public class CliClient 
 { 
 - 
 / * * 
 * Available value conversion functions 
 * Used by convertValueByFunction ( Tree functionCall ) method 
 @ @ - 163 , 6 + 161 , 13 @ @ public class CliClient 
 
 private CliUserHelp getHelp ( ) 
 { 
 + if ( help = = null ) 
 + help = loadHelp ( ) ; 
 + return help ; 
 + } 
 + 
 + private CliUserHelp loadHelp ( ) 
 + { 
 final InputStream is = CliClient . class . getClassLoader ( ) . getResourceAsStream ( " org / apache / cassandra / cli / CliHelp . yaml " ) ; 
 assert is ! = null ; 
 
 @ @ - 182 , 7 + 187 , 7 @ @ public class CliClient 
 
 public void printBanner ( ) 
 { 
 - sessionState . out . println ( help . banner ) ; 
 + sessionState . out . println ( getHelp ( ) . banner ) ; 
 } 
 
 / / Execute a CLI Statement 
 @ @ - 315 , 13 + 320 , 10 @ @ public class CliClient 
 
 private void executeHelp ( Tree tree ) 
 { 
 - if ( help = = null ) 
 - help = getHelp ( ) ; 
 - 
 if ( tree . getChildCount ( ) > 0 ) 
 { 
 String token = tree . getChild ( 0 ) . getText ( ) ; 
 - for ( CliCommandHelp ch : help . commands ) 
 + for ( CliCommandHelp ch : getHelp ( ) . commands ) 
 { 
 if ( token . equals ( ch . name ) ) 
 { 
 @ @ - 332 , 7 + 334 , 7 @ @ public class CliClient 
 } 
 else 
 { 
 - sessionState . out . println ( help . help ) ; 
 + sessionState . out . println ( getHelp ( ) . help ) ; 
 } 
 } 

