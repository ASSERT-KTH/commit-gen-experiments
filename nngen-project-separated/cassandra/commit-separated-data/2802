BLEU SCORE: 0.006193628179172647

TEST MSG: Add iterable CqlPagingRecordReader .
GENERATED MSG: add example of commitlog _ sync _ batch _ window _ in _ ms to . yaml

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlPagingRecordReader . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlPagingRecordReader . java <nl> index d9b9a39 . . 002992f 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlPagingRecordReader . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlPagingRecordReader . java <nl> @ @ - 65 , 7 + 65 , 7 @ @ public class CqlPagingRecordReader extends RecordReader < Map < String , ByteBuffer > , <nl> public static final int DEFAULT _ CQL _ PAGE _ LIMIT = 1000 ; / / TODO : find the number large enough but not OOM <nl> <nl> private ColumnFamilySplit split ; <nl> - private RowIterator rowIterator ; <nl> + protected RowIterator rowIterator ; <nl> <nl> private Pair < Map < String , ByteBuffer > , Map < String , ByteBuffer > > currentRow ; <nl> private int totalRowCount ; / / total number of rows to fetch <nl> @ @ - 282 , 7 + 282 , 7 @ @ public class CqlPagingRecordReader extends RecordReader < Map < String , ByteBuffer > , <nl> } <nl> <nl> / * * CQL row iterator * / <nl> - private class RowIterator extends AbstractIterator < Pair < Map < String , ByteBuffer > , Map < String , ByteBuffer > > > <nl> + protected class RowIterator extends AbstractIterator < Pair < Map < String , ByteBuffer > , Map < String , ByteBuffer > > > <nl> { <nl> protected int totalRead = 0 ; / / total number of cf rows read <nl> protected Iterator < CqlRow > rows ; <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / IterableCqlPagingRecordReader . java b / src / java / org / apache / cassandra / hadoop / cql3 / IterableCqlPagingRecordReader . java <nl> new file mode 100644 <nl> index 0000000 . . 85beed9 <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / hadoop / cql3 / IterableCqlPagingRecordReader . java <nl> @ @ - 0 , 0 + 1 , 75 @ @ <nl> + / * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + package org . apache . cassandra . hadoop . cql3 ; <nl> + <nl> + import java . io . Closeable ; <nl> + import java . io . IOException ; <nl> + import java . nio . ByteBuffer ; <nl> + import java . util . Iterator ; <nl> + import java . util . Map ; <nl> + <nl> + import org . apache . commons . lang . NotImplementedException ; <nl> + <nl> + import org . apache . cassandra . utils . Pair ; <nl> + <nl> + / * * <nl> + * Implements an iterable - friendly { @ link CqlPagingRecordReader } . <nl> + * / <nl> + public class IterableCqlPagingRecordReader extends CqlPagingRecordReader <nl> + implements Iterable < Pair < Map < String , ByteBuffer > , Map < String , ByteBuffer > > > , Closeable <nl> + { <nl> + public Iterator < Pair < Map < String , ByteBuffer > , Map < String , ByteBuffer > > > iterator ( ) <nl> + { <nl> + return new Iterator < Pair < Map < String , ByteBuffer > , Map < String , ByteBuffer > > > ( ) <nl> + { <nl> + public boolean hasNext ( ) <nl> + { <nl> + return rowIterator . hasNext ( ) ; <nl> + } <nl> + <nl> + public Pair < Map < String , ByteBuffer > , Map < String , ByteBuffer > > next ( ) <nl> + { <nl> + return rowIterator . next ( ) ; <nl> + } <nl> + <nl> + public void remove ( ) <nl> + { <nl> + throw new NotImplementedException ( " Cannot remove an element on this iterator ! " ) ; <nl> + <nl> + } <nl> + } ; <nl> + } <nl> + <nl> + / * * <nl> + * @ throws NotImplementedException Always throws this exception , this operation does not make sense in this implementation . <nl> + * / <nl> + @ Override <nl> + public boolean nextKeyValue ( ) throws IOException <nl> + { <nl> + throw new NotImplementedException ( " Calling method nextKeyValue ( ) does not make sense in this implementation " ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ throws NotImplementedException Always throws this exception , this operation does not make sense in this implementation . <nl> + * / <nl> + @ Override <nl> + public boolean next ( Map < String , ByteBuffer > keys , Map < String , ByteBuffer > value ) throws IOException <nl> + { <nl> + throw new NotImplementedException ( " Calling method next ( ) does not make sense in this implementation " ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / examples / client _ only / conf / cassandra . yaml b / examples / client _ only / conf / cassandra . yaml <nl> index 97e3853 . . 2d92794 100644 <nl> - - - a / examples / client _ only / conf / cassandra . yaml <nl> + + + b / examples / client _ only / conf / cassandra . yaml <nl> @ @ - 77 , 9 + 77 , 6 @ @ commitlog _ directory : / var / lib / cassandra / commitlog <nl> # saved caches <nl> saved _ caches _ directory : / var / lib / cassandra / saved _ caches <nl> <nl> - # Size to allow commitlog to grow to before creating a new segment <nl> - commitlog _ rotation _ threshold _ in _ mb : 128 <nl> - <nl> # commitlog _ sync may be either " periodic " or " batch . " <nl> # When in batch mode , Cassandra won ' t ack writes until the commit log <nl> # has been fsynced to disk . It will wait up to

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlPagingRecordReader . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlPagingRecordReader . java 
 index d9b9a39 . . 002992f 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlPagingRecordReader . java 
 + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlPagingRecordReader . java 
 @ @ - 65 , 7 + 65 , 7 @ @ public class CqlPagingRecordReader extends RecordReader < Map < String , ByteBuffer > , 
 public static final int DEFAULT _ CQL _ PAGE _ LIMIT = 1000 ; / / TODO : find the number large enough but not OOM 
 
 private ColumnFamilySplit split ; 
 - private RowIterator rowIterator ; 
 + protected RowIterator rowIterator ; 
 
 private Pair < Map < String , ByteBuffer > , Map < String , ByteBuffer > > currentRow ; 
 private int totalRowCount ; / / total number of rows to fetch 
 @ @ - 282 , 7 + 282 , 7 @ @ public class CqlPagingRecordReader extends RecordReader < Map < String , ByteBuffer > , 
 } 
 
 / * * CQL row iterator * / 
 - private class RowIterator extends AbstractIterator < Pair < Map < String , ByteBuffer > , Map < String , ByteBuffer > > > 
 + protected class RowIterator extends AbstractIterator < Pair < Map < String , ByteBuffer > , Map < String , ByteBuffer > > > 
 { 
 protected int totalRead = 0 ; / / total number of cf rows read 
 protected Iterator < CqlRow > rows ; 
 diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / IterableCqlPagingRecordReader . java b / src / java / org / apache / cassandra / hadoop / cql3 / IterableCqlPagingRecordReader . java 
 new file mode 100644 
 index 0000000 . . 85beed9 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / hadoop / cql3 / IterableCqlPagingRecordReader . java 
 @ @ - 0 , 0 + 1 , 75 @ @ 
 + / * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + package org . apache . cassandra . hadoop . cql3 ; 
 + 
 + import java . io . Closeable ; 
 + import java . io . IOException ; 
 + import java . nio . ByteBuffer ; 
 + import java . util . Iterator ; 
 + import java . util . Map ; 
 + 
 + import org . apache . commons . lang . NotImplementedException ; 
 + 
 + import org . apache . cassandra . utils . Pair ; 
 + 
 + / * * 
 + * Implements an iterable - friendly { @ link CqlPagingRecordReader } . 
 + * / 
 + public class IterableCqlPagingRecordReader extends CqlPagingRecordReader 
 + implements Iterable < Pair < Map < String , ByteBuffer > , Map < String , ByteBuffer > > > , Closeable 
 + { 
 + public Iterator < Pair < Map < String , ByteBuffer > , Map < String , ByteBuffer > > > iterator ( ) 
 + { 
 + return new Iterator < Pair < Map < String , ByteBuffer > , Map < String , ByteBuffer > > > ( ) 
 + { 
 + public boolean hasNext ( ) 
 + { 
 + return rowIterator . hasNext ( ) ; 
 + } 
 + 
 + public Pair < Map < String , ByteBuffer > , Map < String , ByteBuffer > > next ( ) 
 + { 
 + return rowIterator . next ( ) ; 
 + } 
 + 
 + public void remove ( ) 
 + { 
 + throw new NotImplementedException ( " Cannot remove an element on this iterator ! " ) ; 
 + 
 + } 
 + } ; 
 + } 
 + 
 + / * * 
 + * @ throws NotImplementedException Always throws this exception , this operation does not make sense in this implementation . 
 + * / 
 + @ Override 
 + public boolean nextKeyValue ( ) throws IOException 
 + { 
 + throw new NotImplementedException ( " Calling method nextKeyValue ( ) does not make sense in this implementation " ) ; 
 + } 
 + 
 + / * * 
 + * @ throws NotImplementedException Always throws this exception , this operation does not make sense in this implementation . 
 + * / 
 + @ Override 
 + public boolean next ( Map < String , ByteBuffer > keys , Map < String , ByteBuffer > value ) throws IOException 
 + { 
 + throw new NotImplementedException ( " Calling method next ( ) does not make sense in this implementation " ) ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / examples / client _ only / conf / cassandra . yaml b / examples / client _ only / conf / cassandra . yaml 
 index 97e3853 . . 2d92794 100644 
 - - - a / examples / client _ only / conf / cassandra . yaml 
 + + + b / examples / client _ only / conf / cassandra . yaml 
 @ @ - 77 , 9 + 77 , 6 @ @ commitlog _ directory : / var / lib / cassandra / commitlog 
 # saved caches 
 saved _ caches _ directory : / var / lib / cassandra / saved _ caches 
 
 - # Size to allow commitlog to grow to before creating a new segment 
 - commitlog _ rotation _ threshold _ in _ mb : 128 
 - 
 # commitlog _ sync may be either " periodic " or " batch . " 
 # When in batch mode , Cassandra won ' t ack writes until the commit log 
 # has been fsynced to disk . It will wait up to
