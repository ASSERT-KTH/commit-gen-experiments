BLEU SCORE: 0.034353182138500235

TEST MSG: Delete temp test files on exit
GENERATED MSG: additional check for offheap bloom filter size

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index bc2645f . . e38cd70 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 4 . 0 <nl> + * Delete temp test files on exit ( CASSANDRA - 14153 ) <nl> * Make PartitionUpdate and Mutation immutable ( CASSANDRA - 13867 ) <nl> * Fix CommitLogReplayer exception for CDC data ( CASSANDRA - 14066 ) <nl> * Fix cassandra - stress startup failure ( CASSANDRA - 14106 ) <nl> diff - - git a / src / java / org / apache / cassandra / io / util / FileUtils . java b / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> index 5236fef . . 70595fc 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> + + + b / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> @ @ - 118 , 6 + 118 , 13 @ @ public final class FileUtils <nl> return createTempFile ( prefix , suffix , new File ( System . getProperty ( " java . io . tmpdir " ) ) ) ; <nl> } <nl> <nl> + public static File createDeletableTempFile ( String prefix , String suffix ) <nl> + { <nl> + File f = createTempFile ( prefix , suffix , new File ( System . getProperty ( " java . io . tmpdir " ) ) ) ; <nl> + f . deleteOnExit ( ) ; <nl> + return f ; <nl> + } <nl> + <nl> public static Throwable deleteWithConfirm ( String filePath , boolean expect , Throwable accumulate ) <nl> { <nl> return deleteWithConfirm ( new File ( filePath ) , expect , accumulate ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / io / compress / CompressedSequentialWriterTest . java b / test / unit / org / apache / cassandra / io / compress / CompressedSequentialWriterTest . java <nl> index dab2013 . . 2accf87 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / compress / CompressedSequentialWriterTest . java <nl> + + + b / test / unit / org / apache / cassandra / io / compress / CompressedSequentialWriterTest . java <nl> @ @ - 177 , 7 + 177 , 7 @ @ public class CompressedSequentialWriterTest extends SequentialWriterTest <nl> public void resetAndTruncateTest ( ) <nl> { <nl> File tempFile = new File ( Files . createTempDir ( ) , " reset . txt " ) ; <nl> - File offsetsFile = FileUtils . createTempFile ( " compressedsequentialwriter . offset " , " test " ) ; <nl> + File offsetsFile = FileUtils . createDeletableTempFile ( " compressedsequentialwriter . offset " , " test " ) ; <nl> final int bufferSize = 48 ; <nl> final int writeSize = 64 ; <nl> byte [ ] toWrite = new byte [ writeSize ] ; <nl> diff - - git a / test / unit / org / apache / cassandra / io / util / FileUtilsTest . java b / test / unit / org / apache / cassandra / io / util / FileUtilsTest . java <nl> index 8821672 . . 9a5c03a 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / util / FileUtilsTest . java <nl> + + + b / test / unit / org / apache / cassandra / io / util / FileUtilsTest . java <nl> @ @ - 47 , 7 + 47 , 7 @ @ public class FileUtilsTest <nl> @ Test <nl> public void testTruncate ( ) throws IOException <nl> { <nl> - File file = FileUtils . createTempFile ( " testTruncate " , " 1 " ) ; <nl> + File file = FileUtils . createDeletableTempFile ( " testTruncate " , " 1 " ) ; <nl> final String expected = " The quick brown fox jumps over the lazy dog " ; <nl> <nl> Files . write ( file . toPath ( ) , expected . getBytes ( ) ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / utils / BloomFilterTest . java b / test / unit / org / apache / cassandra / utils / BloomFilterTest . java <nl> index 07cbc5a . . 337e387 100644 <nl> - - - a / test / unit / org / apache / cassandra / utils / BloomFilterTest . java <nl> + + + b / test / unit / org / apache / cassandra / utils / BloomFilterTest . java <nl> @ @ - 193 , 7 + 193 , 7 @ @ public class BloomFilterTest <nl> { <nl> ByteBuffer test = ByteBuffer . wrap ( new byte [ ] { 0 , 1 } ) ; <nl> <nl> - File file = FileUtils . createTempFile ( " bloomFilterTest - " , " . dat " ) ; <nl> + File file = FileUtils . createDeletableTempFile ( " bloomFilterTest - " , " . dat " ) ; <nl> BloomFilter filter = ( BloomFilter ) FilterFactory . getFilter ( ( ( long ) Integer . MAX _ VALUE / 8 ) + 1 , 0 . 01d , true ) ; <nl> filter . add ( FilterTestHelper . wrap ( test ) ) ; <nl> DataOutputStreamPlus out = new BufferedDataOutputStreamPlus ( new FileOutputStream ( file ) ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / utils / NativeLibraryTest . java b / test / unit / org / apache / cassandra / utils / NativeLibraryTest . java <nl> index 226653e . . 1a26351 100644 <nl> - - - a / test / unit / org / apache / cassandra / utils / NativeLibraryTest . java <nl> + + + b / test / unit / org / apache / cassandra / utils / NativeLibraryTest . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ public class NativeLibraryTest <nl> @ Test <nl> public void testSkipCache ( ) <nl> { <nl> - File file = FileUtils . createTempFile ( " testSkipCache " , " 1 " ) ; <nl> + File file = FileUtils . createDeletableTempFile ( " testSkipCache " , " 1 " ) ; <nl> <nl> NativeLibrary . trySkipCache ( file . getPath ( ) , 0 , 0 ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / utils / BloomFilterTest . java b / test / unit / org / apache / cassandra / utils / BloomFilterTest . java <nl> index 872cb05 . . feff193 100644 <nl> - - - a / test / unit / org / apache / cassandra / utils / BloomFilterTest . java <nl> + + + b / test / unit / org / apache / cassandra / utils / BloomFilterTest . java <nl> @ @ - 38 , 7 + 38 , 6 @ @ import org . junit . Test ; <nl> <nl> import org . apache . cassandra . io . util . DataOutputBuffer ; <nl> import org . apache . cassandra . io . util . FileUtils ; <nl> - import org . apache . cassandra . utils . FilterFactory . Type ; <nl> <nl> public class BloomFilterTest <nl> { <nl> @ @ - 170 , 7 + 169 , 7 @ @ public class BloomFilterTest <nl> out . close ( ) ; <nl> <nl> DataInputStream in = new DataInputStream ( new FileInputStream ( file ) ) ; <nl> - BloomFilter filter2 = ( BloomFilter ) FilterFactory . deserialize ( in , Type . MURMUR3 , true ) ; <nl> + BloomFilter filter2 = ( BloomFilter ) FilterFactory . deserialize ( in , true ) ; <nl> Assert . assertTrue ( filter2 . isPresent ( test ) ) ; <nl> FileUtils . closeQuietly ( in ) ; <nl> }

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index bc2645f . . e38cd70 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 4 . 0 
 + * Delete temp test files on exit ( CASSANDRA - 14153 ) 
 * Make PartitionUpdate and Mutation immutable ( CASSANDRA - 13867 ) 
 * Fix CommitLogReplayer exception for CDC data ( CASSANDRA - 14066 ) 
 * Fix cassandra - stress startup failure ( CASSANDRA - 14106 ) 
 diff - - git a / src / java / org / apache / cassandra / io / util / FileUtils . java b / src / java / org / apache / cassandra / io / util / FileUtils . java 
 index 5236fef . . 70595fc 100644 
 - - - a / src / java / org / apache / cassandra / io / util / FileUtils . java 
 + + + b / src / java / org / apache / cassandra / io / util / FileUtils . java 
 @ @ - 118 , 6 + 118 , 13 @ @ public final class FileUtils 
 return createTempFile ( prefix , suffix , new File ( System . getProperty ( " java . io . tmpdir " ) ) ) ; 
 } 
 
 + public static File createDeletableTempFile ( String prefix , String suffix ) 
 + { 
 + File f = createTempFile ( prefix , suffix , new File ( System . getProperty ( " java . io . tmpdir " ) ) ) ; 
 + f . deleteOnExit ( ) ; 
 + return f ; 
 + } 
 + 
 public static Throwable deleteWithConfirm ( String filePath , boolean expect , Throwable accumulate ) 
 { 
 return deleteWithConfirm ( new File ( filePath ) , expect , accumulate ) ; 
 diff - - git a / test / unit / org / apache / cassandra / io / compress / CompressedSequentialWriterTest . java b / test / unit / org / apache / cassandra / io / compress / CompressedSequentialWriterTest . java 
 index dab2013 . . 2accf87 100644 
 - - - a / test / unit / org / apache / cassandra / io / compress / CompressedSequentialWriterTest . java 
 + + + b / test / unit / org / apache / cassandra / io / compress / CompressedSequentialWriterTest . java 
 @ @ - 177 , 7 + 177 , 7 @ @ public class CompressedSequentialWriterTest extends SequentialWriterTest 
 public void resetAndTruncateTest ( ) 
 { 
 File tempFile = new File ( Files . createTempDir ( ) , " reset . txt " ) ; 
 - File offsetsFile = FileUtils . createTempFile ( " compressedsequentialwriter . offset " , " test " ) ; 
 + File offsetsFile = FileUtils . createDeletableTempFile ( " compressedsequentialwriter . offset " , " test " ) ; 
 final int bufferSize = 48 ; 
 final int writeSize = 64 ; 
 byte [ ] toWrite = new byte [ writeSize ] ; 
 diff - - git a / test / unit / org / apache / cassandra / io / util / FileUtilsTest . java b / test / unit / org / apache / cassandra / io / util / FileUtilsTest . java 
 index 8821672 . . 9a5c03a 100644 
 - - - a / test / unit / org / apache / cassandra / io / util / FileUtilsTest . java 
 + + + b / test / unit / org / apache / cassandra / io / util / FileUtilsTest . java 
 @ @ - 47 , 7 + 47 , 7 @ @ public class FileUtilsTest 
 @ Test 
 public void testTruncate ( ) throws IOException 
 { 
 - File file = FileUtils . createTempFile ( " testTruncate " , " 1 " ) ; 
 + File file = FileUtils . createDeletableTempFile ( " testTruncate " , " 1 " ) ; 
 final String expected = " The quick brown fox jumps over the lazy dog " ; 
 
 Files . write ( file . toPath ( ) , expected . getBytes ( ) ) ; 
 diff - - git a / test / unit / org / apache / cassandra / utils / BloomFilterTest . java b / test / unit / org / apache / cassandra / utils / BloomFilterTest . java 
 index 07cbc5a . . 337e387 100644 
 - - - a / test / unit / org / apache / cassandra / utils / BloomFilterTest . java 
 + + + b / test / unit / org / apache / cassandra / utils / BloomFilterTest . java 
 @ @ - 193 , 7 + 193 , 7 @ @ public class BloomFilterTest 
 { 
 ByteBuffer test = ByteBuffer . wrap ( new byte [ ] { 0 , 1 } ) ; 
 
 - File file = FileUtils . createTempFile ( " bloomFilterTest - " , " . dat " ) ; 
 + File file = FileUtils . createDeletableTempFile ( " bloomFilterTest - " , " . dat " ) ; 
 BloomFilter filter = ( BloomFilter ) FilterFactory . getFilter ( ( ( long ) Integer . MAX _ VALUE / 8 ) + 1 , 0 . 01d , true ) ; 
 filter . add ( FilterTestHelper . wrap ( test ) ) ; 
 DataOutputStreamPlus out = new BufferedDataOutputStreamPlus ( new FileOutputStream ( file ) ) ; 
 diff - - git a / test / unit / org / apache / cassandra / utils / NativeLibraryTest . java b / test / unit / org / apache / cassandra / utils / NativeLibraryTest . java 
 index 226653e . . 1a26351 100644 
 - - - a / test / unit / org / apache / cassandra / utils / NativeLibraryTest . java 
 + + + b / test / unit / org / apache / cassandra / utils / NativeLibraryTest . java 
 @ @ - 30 , 7 + 30 , 7 @ @ public class NativeLibraryTest 
 @ Test 
 public void testSkipCache ( ) 
 { 
 - File file = FileUtils . createTempFile ( " testSkipCache " , " 1 " ) ; 
 + File file = FileUtils . createDeletableTempFile ( " testSkipCache " , " 1 " ) ; 
 
 NativeLibrary . trySkipCache ( file . getPath ( ) , 0 , 0 ) ; 
 }

NEAREST DIFF:
diff - - git a / test / unit / org / apache / cassandra / utils / BloomFilterTest . java b / test / unit / org / apache / cassandra / utils / BloomFilterTest . java 
 index 872cb05 . . feff193 100644 
 - - - a / test / unit / org / apache / cassandra / utils / BloomFilterTest . java 
 + + + b / test / unit / org / apache / cassandra / utils / BloomFilterTest . java 
 @ @ - 38 , 7 + 38 , 6 @ @ import org . junit . Test ; 
 
 import org . apache . cassandra . io . util . DataOutputBuffer ; 
 import org . apache . cassandra . io . util . FileUtils ; 
 - import org . apache . cassandra . utils . FilterFactory . Type ; 
 
 public class BloomFilterTest 
 { 
 @ @ - 170 , 7 + 169 , 7 @ @ public class BloomFilterTest 
 out . close ( ) ; 
 
 DataInputStream in = new DataInputStream ( new FileInputStream ( file ) ) ; 
 - BloomFilter filter2 = ( BloomFilter ) FilterFactory . deserialize ( in , Type . MURMUR3 , true ) ; 
 + BloomFilter filter2 = ( BloomFilter ) FilterFactory . deserialize ( in , true ) ; 
 Assert . assertTrue ( filter2 . isPresent ( test ) ) ; 
 FileUtils . closeQuietly ( in ) ; 
 }
