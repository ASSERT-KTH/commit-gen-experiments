BLEU SCORE: 0.1597357760615681

TEST MSG: Ninja fix table names
GENERATED MSG: ninja fix formatting

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / SystemKeyspace . java b / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> index 3d1f555 . . e31feaa 100644 <nl> - - - a / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> + + + b / src / java / org / apache / cassandra / db / SystemKeyspace . java <nl> @ @ - 100 , 8 + 100 , 8 @ @ public final class SystemKeyspace <nl> public static final String SSTABLE _ ACTIVITY = " sstable _ activity " ; <nl> public static final String SIZE _ ESTIMATES = " size _ estimates " ; <nl> public static final String AVAILABLE _ RANGES = " available _ ranges " ; <nl> - public static final String MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS = " materializedviews _ builds _ in _ progress " ; <nl> - public static final String BUILT _ MATERIALIZEDVIEWS = " built _ materializedviews " ; <nl> + public static final String MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS = " materialized _ views _ builds _ in _ progress " ; <nl> + public static final String BUILT _ MATERIALIZED _ VIEWS = " built _ materialized _ views " ; <nl> <nl> @ Deprecated public static final String LEGACY _ KEYSPACES = " schema _ keyspaces " ; <nl> @ Deprecated public static final String LEGACY _ COLUMNFAMILIES = " schema _ columnfamilies " ; <nl> @ @ - 263 , 7 + 263 , 7 @ @ public final class SystemKeyspace <nl> + " PRIMARY KEY ( ( keyspace _ name ) ) ) " ) ; <nl> <nl> private static final CFMetaData MaterializedViewsBuildsInProgress = <nl> - compile ( MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS , <nl> + compile ( MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS , <nl> " materialized views builds current progress " , <nl> " CREATE TABLE % s ( " <nl> + " keyspace _ name text , " <nl> @ @ - 273 , 7 + 273 , 7 @ @ public final class SystemKeyspace <nl> + " PRIMARY KEY ( ( keyspace _ name ) , view _ name ) ) " ) ; <nl> <nl> private static final CFMetaData BuiltMaterializedViews = <nl> - compile ( BUILT _ MATERIALIZEDVIEWS , <nl> + compile ( BUILT _ MATERIALIZED _ VIEWS , <nl> " built materialized views " , <nl> " CREATE TABLE % s ( " <nl> + " keyspace _ name text , " <nl> @ @ - 517 , 32 + 517 , 32 @ @ public final class SystemKeyspace <nl> public static boolean isViewBuilt ( String keyspaceName , String viewName ) <nl> { <nl> String req = " SELECT view _ name FROM % s . \ " % s \ " WHERE keyspace _ name = ? AND view _ name = ? " ; <nl> - UntypedResultSet result = executeInternal ( String . format ( req , NAME , BUILT _ MATERIALIZEDVIEWS ) , keyspaceName , viewName ) ; <nl> + UntypedResultSet result = executeInternal ( String . format ( req , NAME , BUILT _ MATERIALIZED _ VIEWS ) , keyspaceName , viewName ) ; <nl> return ! result . isEmpty ( ) ; <nl> } <nl> <nl> public static void setMaterializedViewBuilt ( String keyspaceName , String viewName ) <nl> { <nl> String req = " INSERT INTO % s . \ " % s \ " ( keyspace _ name , view _ name ) VALUES ( ? , ? ) " ; <nl> - executeInternal ( String . format ( req , NAME , BUILT _ MATERIALIZEDVIEWS ) , keyspaceName , viewName ) ; <nl> - forceBlockingFlush ( BUILT _ MATERIALIZEDVIEWS ) ; <nl> + executeInternal ( String . format ( req , NAME , BUILT _ MATERIALIZED _ VIEWS ) , keyspaceName , viewName ) ; <nl> + forceBlockingFlush ( BUILT _ MATERIALIZED _ VIEWS ) ; <nl> } <nl> <nl> <nl> public static void setMaterializedViewRemoved ( String keyspaceName , String viewName ) <nl> { <nl> String buildReq = " DELETE FROM % S . % s WHERE keyspace _ name = ? AND view _ name = ? " ; <nl> - executeInternal ( String . format ( buildReq , NAME , MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS ) , keyspaceName , viewName ) ; <nl> - forceBlockingFlush ( MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS ) ; <nl> + executeInternal ( String . format ( buildReq , NAME , MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS ) , keyspaceName , viewName ) ; <nl> + forceBlockingFlush ( MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS ) ; <nl> <nl> String builtReq = " DELETE FROM % s . \ " % s \ " WHERE keyspace _ name = ? AND view _ name = ? " ; <nl> - executeInternal ( String . format ( builtReq , NAME , BUILT _ MATERIALIZEDVIEWS ) , keyspaceName , viewName ) ; <nl> - forceBlockingFlush ( BUILT _ MATERIALIZEDVIEWS ) ; <nl> + executeInternal ( String . format ( builtReq , NAME , BUILT _ MATERIALIZED _ VIEWS ) , keyspaceName , viewName ) ; <nl> + forceBlockingFlush ( BUILT _ MATERIALIZED _ VIEWS ) ; <nl> } <nl> <nl> public static void beginMaterializedViewBuild ( String ksname , String viewName , int generationNumber ) <nl> { <nl> - executeInternal ( String . format ( " INSERT INTO system . % s ( keyspace _ name , view _ name , generation _ number ) VALUES ( ? , ? , ? ) " , MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS ) , <nl> + executeInternal ( String . format ( " INSERT INTO system . % s ( keyspace _ name , view _ name , generation _ number ) VALUES ( ? , ? , ? ) " , MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS ) , <nl> ksname , <nl> viewName , <nl> generationNumber ) ; <nl> @ @ - 556 , 22 + 556 , 22 @ @ public final class SystemKeyspace <nl> / / Also , if the build succeeded , but the materialized view build failed , we will be able to skip the <nl> / / materialized view build check next boot . <nl> setMaterializedViewBuilt ( ksname , viewName ) ; <nl> - forceBlockingFlush ( BUILT _ MATERIALIZEDVIEWS ) ; <nl> - executeInternal ( String . format ( " DELETE FROM system . % s WHERE keyspace _ name = ? AND view _ name = ? " , MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS ) , ksname , viewName ) ; <nl> - forceBlockingFlush ( MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS ) ; <nl> + forceBlockingFlush ( BUILT _ MATERIALIZED _ VIEWS ) ; <nl> + executeInternal ( String . format ( " DELETE FROM system . % s WHERE keyspace _ name = ? AND view _ name = ? " , MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS ) , ksname , viewName ) ; <nl> + forceBlockingFlush ( MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS ) ; <nl> } <nl> <nl> public static void updateMaterializedViewBuildStatus ( String ksname , String viewName , Token token ) <nl> { <nl> String req = " INSERT INTO system . % s ( keyspace _ name , view _ name , last _ token ) VALUES ( ? , ? , ? ) " ; <nl> Token . TokenFactory factory = StorageService . getPartitioner ( ) . getTokenFactory ( ) ; <nl> - executeInternal ( String . format ( req , MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS ) , ksname , viewName , factory . toString ( token ) ) ; <nl> + executeInternal ( String . format ( req , MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS ) , ksname , viewName , factory . toString ( token ) ) ; <nl> } <nl> <nl> public static Pair < Integer , Token > getMaterializedViewBuildStatus ( String ksname , String viewName ) <nl> { <nl> String req = " SELECT generation _ number , last _ token FROM system . % s WHERE keyspace _ name = ? AND view _ name = ? " ; <nl> - UntypedResultSet queryResultSet = executeInternal ( String . format ( req , MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS ) , ksname , viewName ) ; <nl> + UntypedResultSet queryResultSet = executeInternal ( String . format ( req , MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS ) , ksname , viewName ) ; <nl> if ( queryResultSet = = null | | queryResultSet . isEmpty ( ) ) <nl> return null ; <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / SystemKeyspace . java b / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 index 3d1f555 . . e31feaa 100644 
 - - - a / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 + + + b / src / java / org / apache / cassandra / db / SystemKeyspace . java 
 @ @ - 100 , 8 + 100 , 8 @ @ public final class SystemKeyspace 
 public static final String SSTABLE _ ACTIVITY = " sstable _ activity " ; 
 public static final String SIZE _ ESTIMATES = " size _ estimates " ; 
 public static final String AVAILABLE _ RANGES = " available _ ranges " ; 
 - public static final String MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS = " materializedviews _ builds _ in _ progress " ; 
 - public static final String BUILT _ MATERIALIZEDVIEWS = " built _ materializedviews " ; 
 + public static final String MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS = " materialized _ views _ builds _ in _ progress " ; 
 + public static final String BUILT _ MATERIALIZED _ VIEWS = " built _ materialized _ views " ; 
 
 @ Deprecated public static final String LEGACY _ KEYSPACES = " schema _ keyspaces " ; 
 @ Deprecated public static final String LEGACY _ COLUMNFAMILIES = " schema _ columnfamilies " ; 
 @ @ - 263 , 7 + 263 , 7 @ @ public final class SystemKeyspace 
 + " PRIMARY KEY ( ( keyspace _ name ) ) ) " ) ; 
 
 private static final CFMetaData MaterializedViewsBuildsInProgress = 
 - compile ( MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS , 
 + compile ( MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS , 
 " materialized views builds current progress " , 
 " CREATE TABLE % s ( " 
 + " keyspace _ name text , " 
 @ @ - 273 , 7 + 273 , 7 @ @ public final class SystemKeyspace 
 + " PRIMARY KEY ( ( keyspace _ name ) , view _ name ) ) " ) ; 
 
 private static final CFMetaData BuiltMaterializedViews = 
 - compile ( BUILT _ MATERIALIZEDVIEWS , 
 + compile ( BUILT _ MATERIALIZED _ VIEWS , 
 " built materialized views " , 
 " CREATE TABLE % s ( " 
 + " keyspace _ name text , " 
 @ @ - 517 , 32 + 517 , 32 @ @ public final class SystemKeyspace 
 public static boolean isViewBuilt ( String keyspaceName , String viewName ) 
 { 
 String req = " SELECT view _ name FROM % s . \ " % s \ " WHERE keyspace _ name = ? AND view _ name = ? " ; 
 - UntypedResultSet result = executeInternal ( String . format ( req , NAME , BUILT _ MATERIALIZEDVIEWS ) , keyspaceName , viewName ) ; 
 + UntypedResultSet result = executeInternal ( String . format ( req , NAME , BUILT _ MATERIALIZED _ VIEWS ) , keyspaceName , viewName ) ; 
 return ! result . isEmpty ( ) ; 
 } 
 
 public static void setMaterializedViewBuilt ( String keyspaceName , String viewName ) 
 { 
 String req = " INSERT INTO % s . \ " % s \ " ( keyspace _ name , view _ name ) VALUES ( ? , ? ) " ; 
 - executeInternal ( String . format ( req , NAME , BUILT _ MATERIALIZEDVIEWS ) , keyspaceName , viewName ) ; 
 - forceBlockingFlush ( BUILT _ MATERIALIZEDVIEWS ) ; 
 + executeInternal ( String . format ( req , NAME , BUILT _ MATERIALIZED _ VIEWS ) , keyspaceName , viewName ) ; 
 + forceBlockingFlush ( BUILT _ MATERIALIZED _ VIEWS ) ; 
 } 
 
 
 public static void setMaterializedViewRemoved ( String keyspaceName , String viewName ) 
 { 
 String buildReq = " DELETE FROM % S . % s WHERE keyspace _ name = ? AND view _ name = ? " ; 
 - executeInternal ( String . format ( buildReq , NAME , MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS ) , keyspaceName , viewName ) ; 
 - forceBlockingFlush ( MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS ) ; 
 + executeInternal ( String . format ( buildReq , NAME , MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS ) , keyspaceName , viewName ) ; 
 + forceBlockingFlush ( MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS ) ; 
 
 String builtReq = " DELETE FROM % s . \ " % s \ " WHERE keyspace _ name = ? AND view _ name = ? " ; 
 - executeInternal ( String . format ( builtReq , NAME , BUILT _ MATERIALIZEDVIEWS ) , keyspaceName , viewName ) ; 
 - forceBlockingFlush ( BUILT _ MATERIALIZEDVIEWS ) ; 
 + executeInternal ( String . format ( builtReq , NAME , BUILT _ MATERIALIZED _ VIEWS ) , keyspaceName , viewName ) ; 
 + forceBlockingFlush ( BUILT _ MATERIALIZED _ VIEWS ) ; 
 } 
 
 public static void beginMaterializedViewBuild ( String ksname , String viewName , int generationNumber ) 
 { 
 - executeInternal ( String . format ( " INSERT INTO system . % s ( keyspace _ name , view _ name , generation _ number ) VALUES ( ? , ? , ? ) " , MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS ) , 
 + executeInternal ( String . format ( " INSERT INTO system . % s ( keyspace _ name , view _ name , generation _ number ) VALUES ( ? , ? , ? ) " , MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS ) , 
 ksname , 
 viewName , 
 generationNumber ) ; 
 @ @ - 556 , 22 + 556 , 22 @ @ public final class SystemKeyspace 
 / / Also , if the build succeeded , but the materialized view build failed , we will be able to skip the 
 / / materialized view build check next boot . 
 setMaterializedViewBuilt ( ksname , viewName ) ; 
 - forceBlockingFlush ( BUILT _ MATERIALIZEDVIEWS ) ; 
 - executeInternal ( String . format ( " DELETE FROM system . % s WHERE keyspace _ name = ? AND view _ name = ? " , MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS ) , ksname , viewName ) ; 
 - forceBlockingFlush ( MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS ) ; 
 + forceBlockingFlush ( BUILT _ MATERIALIZED _ VIEWS ) ; 
 + executeInternal ( String . format ( " DELETE FROM system . % s WHERE keyspace _ name = ? AND view _ name = ? " , MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS ) , ksname , viewName ) ; 
 + forceBlockingFlush ( MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS ) ; 
 } 
 
 public static void updateMaterializedViewBuildStatus ( String ksname , String viewName , Token token ) 
 { 
 String req = " INSERT INTO system . % s ( keyspace _ name , view _ name , last _ token ) VALUES ( ? , ? , ? ) " ; 
 Token . TokenFactory factory = StorageService . getPartitioner ( ) . getTokenFactory ( ) ; 
 - executeInternal ( String . format ( req , MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS ) , ksname , viewName , factory . toString ( token ) ) ; 
 + executeInternal ( String . format ( req , MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS ) , ksname , viewName , factory . toString ( token ) ) ; 
 } 
 
 public static Pair < Integer , Token > getMaterializedViewBuildStatus ( String ksname , String viewName ) 
 { 
 String req = " SELECT generation _ number , last _ token FROM system . % s WHERE keyspace _ name = ? AND view _ name = ? " ; 
 - UntypedResultSet queryResultSet = executeInternal ( String . format ( req , MATERIALIZEDVIEWS _ BUILDS _ IN _ PROGRESS ) , ksname , viewName ) ; 
 + UntypedResultSet queryResultSet = executeInternal ( String . format ( req , MATERIALIZED _ VIEWS _ BUILDS _ IN _ PROGRESS ) , ksname , viewName ) ; 
 if ( queryResultSet = = null | | queryResultSet . isEmpty ( ) ) 
 return null ; 


NEAREST DIFF:
ELIMINATEDSENTENCE
