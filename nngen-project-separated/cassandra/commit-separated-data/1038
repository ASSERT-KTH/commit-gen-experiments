BLEU SCORE: 0.05660233915657915

TEST MSG: Fix deserialization of read commands in mixed clusters
GENERATED MSG: Fix mixed version read request compatibility for compact static tables

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 47d2dc1 . . dcbce5b 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 3 <nl> + * Fix deserialization of legacy read commands ( CASSANDRA - 11087 ) <nl> * Fix incorrect computation of deletion time in sstable metadata ( CASSANDRA - 11102 ) <nl> * Avoid memory leak when collecting sstable metadata ( CASSANDRA - 11026 ) <nl> * Mutations do not block for completion under view lock contention ( CASSANDRA - 10779 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / ReadCommand . java b / src / java / org / apache / cassandra / db / ReadCommand . java <nl> index f21d100 . . 97c3d07 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ReadCommand . java <nl> + + + b / src / java / org / apache / cassandra / db / ReadCommand . java <nl> @ @ - 1308 , 8 + 1308 , 23 @ @ public abstract class ReadCommand implements ReadQuery <nl> " Fill name in filter ( hex ) : " + ByteBufferUtil . bytesToHex ( buffer ) , metadata . cfId ) ; <nl> } <nl> <nl> - if ( ! cellName . clustering . equals ( Clustering . STATIC _ CLUSTERING ) ) <nl> + / / If we ' re querying for a static column , we may also need to read it <nl> + / / as if it were a thrift dynamic column ( because the column metadata , <nl> + / / which makes it a static column in 3 . 0 + , may have been added * after * <nl> + / / some values were written ) . Note that all cql queries on non - compact <nl> + / / tables used slice & not name filters prior to 3 . 0 so this path is <nl> + / / not taken for non - compact tables . It is theoretically possible to <nl> + / / get here via thrift , hence the check on metadata . isStaticCompactTable . <nl> + / / See CASSANDRA - 11087 . <nl> + if ( metadata . isStaticCompactTable ( ) & & cellName . clustering . equals ( Clustering . STATIC _ CLUSTERING ) ) <nl> + { <nl> + clusterings . add ( new Clustering ( cellName . column . name . bytes ) ) ; <nl> + selectionBuilder . add ( metadata . compactValueColumn ( ) ) ; <nl> + } <nl> + else <nl> + { <nl> clusterings . add ( cellName . clustering ) ; <nl> + } <nl> <nl> selectionBuilder . add ( cellName . column ) ; <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 47d2dc1 . . dcbce5b 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 3 
 + * Fix deserialization of legacy read commands ( CASSANDRA - 11087 ) 
 * Fix incorrect computation of deletion time in sstable metadata ( CASSANDRA - 11102 ) 
 * Avoid memory leak when collecting sstable metadata ( CASSANDRA - 11026 ) 
 * Mutations do not block for completion under view lock contention ( CASSANDRA - 10779 ) 
 diff - - git a / src / java / org / apache / cassandra / db / ReadCommand . java b / src / java / org / apache / cassandra / db / ReadCommand . java 
 index f21d100 . . 97c3d07 100644 
 - - - a / src / java / org / apache / cassandra / db / ReadCommand . java 
 + + + b / src / java / org / apache / cassandra / db / ReadCommand . java 
 @ @ - 1308 , 8 + 1308 , 23 @ @ public abstract class ReadCommand implements ReadQuery 
 " Fill name in filter ( hex ) : " + ByteBufferUtil . bytesToHex ( buffer ) , metadata . cfId ) ; 
 } 
 
 - if ( ! cellName . clustering . equals ( Clustering . STATIC _ CLUSTERING ) ) 
 + / / If we ' re querying for a static column , we may also need to read it 
 + / / as if it were a thrift dynamic column ( because the column metadata , 
 + / / which makes it a static column in 3 . 0 + , may have been added * after * 
 + / / some values were written ) . Note that all cql queries on non - compact 
 + / / tables used slice & not name filters prior to 3 . 0 so this path is 
 + / / not taken for non - compact tables . It is theoretically possible to 
 + / / get here via thrift , hence the check on metadata . isStaticCompactTable . 
 + / / See CASSANDRA - 11087 . 
 + if ( metadata . isStaticCompactTable ( ) & & cellName . clustering . equals ( Clustering . STATIC _ CLUSTERING ) ) 
 + { 
 + clusterings . add ( new Clustering ( cellName . column . name . bytes ) ) ; 
 + selectionBuilder . add ( metadata . compactValueColumn ( ) ) ; 
 + } 
 + else 
 + { 
 clusterings . add ( cellName . clustering ) ; 
 + } 
 
 selectionBuilder . add ( cellName . column ) ; 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
