BLEU SCORE: 0.11044795567078944

TEST MSG: cqlsh : Fix INSERT and UPDATE LWT handling
GENERATED MSG: cqlsh : fix LIST USERS output

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 8daeb2d . . 1a1abc0 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 6 @ @ <nl> 3 . 0 . 3 <nl> + * ( cqlsh ) handle INSERT and UPDATE statements with LWT conditions correctly <nl> + ( CASSANDRA - 11003 ) <nl> * Fix DISTINCT queries in mixed version clusters ( CASSANDRA - 10762 ) <nl> * Migrate build status for indexes along with legacy schema ( CASSANDRA - 11046 ) <nl> * Ensure SSTables for legacy KEYS indexes can be read ( CASSANDRA - 11045 ) <nl> diff - - git a / bin / cqlsh . py b / bin / cqlsh . py <nl> index 5d7d9e7 . . 74e7103 100644 <nl> - - - a / bin / cqlsh . py <nl> + + + b / bin / cqlsh . py <nl> @ @ - 1269 , 7 + 1269 , 7 @ @ class Shell ( cmd . Cmd ) : <nl> elif result : <nl> # CAS INSERT / UPDATE <nl> self . writeresult ( " " ) <nl> - self . print _ static _ result ( result . column _ names , list ( result ) , self . parse _ for _ table _ meta ( statement . query _ string ) ) <nl> + self . print _ static _ result ( result . column _ names , list ( result ) , self . parse _ for _ update _ meta ( statement . query _ string ) ) <nl> self . flush _ output ( ) <nl> return True , future <nl>
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 62c3f52 . . 1052901 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 6 + 1 , 7 @ @ <nl> 2 . 0 . 3 <nl> * Fix modifying column _ metadata from thrift ( CASSANDRA - 6182 ) <nl> * cqlsh : fix LIST USERS output ( CASSANDRA - 6242 ) <nl> + * Add IRequestSink interface ( CASSANDRA - 6248 ) <nl> <nl> <nl> 2 . 0 . 2 <nl> diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java <nl> index b66c8a4 . . 6696e87 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessagingService . java <nl> + + + b / src / java / org / apache / cassandra / net / MessagingService . java <nl> @ @ - 53 , 7 + 53 , 7 @ @ import org . apache . cassandra . io . IVersionedSerializer ; <nl> import org . apache . cassandra . locator . ILatencySubscriber ; <nl> import org . apache . cassandra . metrics . ConnectionMetrics ; <nl> import org . apache . cassandra . metrics . DroppedMessageMetrics ; <nl> - import org . apache . cassandra . net . sink . SinkManager ; <nl> + import org . apache . cassandra . sink . SinkManager ; <nl> import org . apache . cassandra . repair . messages . RepairMessage ; <nl> import org . apache . cassandra . security . SSLFactory ; <nl> import org . apache . cassandra . service . * ; <nl> @ @ - 708 , 9 + 708 , 13 @ @ public final class MessagingService implements MessagingServiceMBean <nl> if ( state ! = null ) <nl> state . trace ( " Message received from { } " , message . from ) ; <nl> <nl> + Verb verb = message . verb ; <nl> message = SinkManager . processInboundMessage ( message , id ) ; <nl> if ( message = = null ) <nl> + { <nl> + incrementRejectedMessages ( verb ) ; <nl> return ; <nl> + } <nl> <nl> Runnable runnable = new MessageDeliveryTask ( message , id , timestamp ) ; <nl> TracingAwareExecutorService stage = StageManager . getStage ( message . getMessageType ( ) ) ; <nl> @ @ - 798 , 6 + 802 , 20 @ @ public final class MessagingService implements MessagingServiceMBean <nl> droppedMessages . get ( verb ) . dropped . mark ( ) ; <nl> } <nl> <nl> + / * * <nl> + * Same as incrementDroppedMessages ( ) , but allows non - droppable verbs . Called for IMessageSink - caused message drops . <nl> + * / <nl> + private void incrementRejectedMessages ( Verb verb ) <nl> + { <nl> + DroppedMessageMetrics metrics = droppedMessages . get ( verb ) ; <nl> + if ( metrics = = null ) <nl> + { <nl> + metrics = new DroppedMessageMetrics ( verb ) ; <nl> + droppedMessages . put ( verb , metrics ) ; <nl> + } <nl> + metrics . dropped . mark ( ) ; <nl> + } <nl> + <nl> private void logDroppedMessages ( ) <nl> { <nl> boolean logTpstats = false ; <nl> diff - - git a / src / java / org / apache / cassandra / net / sink / IMessageSink . java b / src / java / org / apache / cassandra / net / sink / IMessageSink . java <nl> deleted file mode 100644 <nl> index d6b6496 . . 0000000 <nl> - - - a / src / java / org / apache / cassandra / net / sink / IMessageSink . java <nl> + + + / dev / null <nl> @ @ - 1 , 42 + 0 , 0 @ @ <nl> - / * <nl> - * Licensed to the Apache Software Foundation ( ASF ) under one <nl> - * or more contributor license agreements . See the NOTICE file <nl> - * distributed with this work for additional information <nl> - * regarding copyright ownership . The ASF licenses this file <nl> - * to you under the Apache License , Version 2 . 0 ( the <nl> - * " License " ) ; you may not use this file except in compliance <nl> - * with the License . You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - package org . apache . cassandra . net . sink ; <nl> - <nl> - import java . net . InetAddress ; <nl> - <nl> - import org . apache . cassandra . net . MessageIn ; <nl> - import org . apache . cassandra . net . MessageOut ; <nl> - <nl> - public interface IMessageSink <nl> - { <nl> - / * * <nl> - * Transform or drop an outgoing message <nl> - * <nl> - * @ return null if the message is dropped , or the transformed message to send , which may be just <nl> - * the original message <nl> - * / <nl> - public MessageOut handleMessage ( MessageOut message , int id , InetAddress to ) ; <nl> - <nl> - / * * <nl> - * Transform or drop an incoming message <nl> - * <nl> - * @ return null if the message is dropped , or the transformed message to receive , which may be just <nl> - * the original message <nl> - * / <nl> - public MessageIn handleMessage ( MessageIn message , int id , InetAddress to ) ; <nl> - } <nl> diff - - git a / src / java / org / apache / cassandra / net / sink / SinkManager . java b / src / java / org / apache / cassandra / net / sink / SinkManager . java <nl> deleted file mode 100644 <nl> index 7b67afe . . 0000000 <nl> - - - a / src / java / org / apache / cassandra / net / sink / SinkManager . java <nl> + + + / dev / null <nl> @ @ - 1 , 68 + 0 , 0 @ @ <nl> - / * <nl> - * Licensed to the Apache Software Foundation ( ASF ) under one <nl> - * or more contributor license agreements . See the NOTICE file <nl> - * distributed with this work for additional information <nl> - * regarding copyright ownership . The ASF licenses this file <nl> - * to you under the Apache License , Version 2 . 0 ( the <nl> - * " License " ) ; you may not use this file except in compliance <nl> - * with the License . You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - package org . apache . cassandra . net . sink ; <nl> - <nl> - import java . net . InetAddress ; <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - <nl> - import org . apache . cassandra . net . MessageIn ; <nl> - import org . apache . cassandra . net . MessageOut ; <nl> - <nl> - public class SinkManager <nl> - { <nl> - private static final List < IMessageSink > sinks = new ArrayList < IMessageSink > ( ) ; <nl> - <nl> - public static void add ( IMessageSink ms ) <nl> - { <nl> - sinks . add ( ms ) ; <nl> - } <nl> - <nl> - public static void clear ( ) <nl> - { <nl> - sinks . clear ( ) ; <nl> - } <nl> - <nl> - public static MessageOut processOutboundMessage ( MessageOut message , int id , InetAddress to ) <nl> - { <nl> - if ( sinks . isEmpty ( ) ) <nl> - return message ; <nl> - <nl> - for ( IMessageSink ms : sinks ) <nl> - { <nl> - message = ms . handleMessage ( message , id , to ) ; <nl> - if ( message = = null ) <nl> - return null ; <nl> - } <nl> - return message ; <nl> - } <nl> - <nl> - public static MessageIn processInboundMessage ( MessageIn message , int id ) <nl> - { <nl> - if ( sinks . isEmpty ( ) ) <nl> - return message ; <nl> - <nl> - for ( IMessageSink ms : sinks ) <nl> - { <nl> - message = ms . handleMessage ( message , id , null ) ; <nl> - if ( message = = null ) <nl> - return null ; <nl> - } <nl> - return message ; <nl> - } <nl> - } <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> index 6dd702b . . 52a2a47 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageProxy . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> @ @ - 62 , 6 + 62 , 7 @ @ import org . apache . cassandra . metrics . ReadRepairMetrics ; <nl> import org . apache . cassandra . metrics . StorageMetrics ; <nl> import org . apache . cassandra . net . * ; <nl> import org . apache . cassandra . service . paxos . * ; <nl> + import org . apache . cassandra . sink . SinkManager ; <nl> import org . apache . cassandra . tracing . Tracing ; <nl> import org . apache . cassandra . triggers . TriggerExecutor ; <nl> import org . apache . cassandra . utils . * ; <nl> @ @ - 992 , 8 + 993 , 12 @ @ public class StorageProxy implements StorageProxyMBean <nl> { <nl> public void runMayThrow ( ) <nl> { <nl> - rm . apply ( ) ; <nl> - responseHandler . response ( null ) ; <nl> + IMutation processed = SinkManager . processWriteRequest ( rm ) ; <nl> + if ( processed ! = null ) <nl> + { <nl> + processed . apply ( ) ; <nl> + responseHandler . response ( null ) ; <nl> + } <nl> } <nl> } ; <nl> StageManager . getStage ( Stage . MUTATION ) . execute ( runnable ) ; <nl> @ @ - 1104 , 8 + 1109 , 12 @ @ public class StorageProxy implements StorageProxyMBean <nl> { <nl> public void runMayThrow ( ) <nl> { <nl> - assert mutation instanceof CounterMutation ; <nl> - final CounterMutation cm = ( CounterMutation ) mutation ; <nl> + IMutation processed = SinkManager . processWriteRequest ( mutation ) ; <nl> + if ( processed = = null ) <nl> + return ; <nl> + <nl> + assert processed instanceof CounterMutation ; <nl> + final CounterMutation cm = ( CounterMutation ) processed ; <nl> <nl> / / apply mutation <nl> cm . apply ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / sink / IMessageSink . java b / src / java / org / apache / cassandra / sink / IMessageSink . java <nl> new file mode 100644 <nl> index 0000000 . . 996e7ff <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / sink / IMessageSink . java <nl> @ @ - 0 , 0 + 1 , 42 @ @ <nl> + / * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + package org . apache . cassandra . sink ; <nl> + <nl> + import java . net . InetAddress ; <nl> + <nl> + import org . apache . cassandra . net . MessageIn ; <nl> + import org . apache . cassandra . net . MessageOut ; <nl> + <nl> + public interface IMessageSink <nl> + { <nl> + / * * <nl> + * Transform or drop an outgoing message <nl> + * <nl> + * @ return null if the message is dropped , or the transformed message to send , which may be just <nl> + * the original message <nl> + * / <nl> + MessageOut handleMessage ( MessageOut message , int id , InetAddress to ) ; <nl> + <nl> + / * * <nl> + * Transform or drop an incoming message <nl> + * <nl> + * @ return null if the message is dropped , or the transformed message to receive , which may be just <nl> + * the original message <nl> + * / <nl> + MessageIn handleMessage ( MessageIn message , int id , InetAddress to ) ; <nl> + } <nl> diff - - git a / src / java / org / apache / cassandra / sink / IRequestSink . java b / src / java / org / apache / cassandra / sink / IRequestSink . java <nl> new file mode 100644 <nl> index 0000000 . . 8d68ce8 <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / sink / IRequestSink . java <nl> @ @ - 0 , 0 + 1 , 32 @ @ <nl> + / * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + package org . apache . cassandra . sink ; <nl> + <nl> + import org . apache . cassandra . db . IMutation ; <nl> + <nl> + public interface IRequestSink <nl> + { <nl> + / * * <nl> + * Transform or drop a write request ( represented by a RowMutation ) . <nl> + * <nl> + * @ param mutation the RowMutation to be applied locally . <nl> + * @ return null if the mutation is to be dropped , or the transformed mutation to apply , which may be just <nl> + * the original mutation . <nl> + * / <nl> + IMutation handleWriteRequest ( IMutation mutation ) ; <nl> + } <nl> diff - - git a / src / java / org / apache / cassandra / sink / SinkManager . java b / src / java / org / apache / cassandra / sink / SinkManager . java <nl> new file mode 100644 <nl> index 0000000 . . 9b422dc <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / sink / SinkManager . java <nl> @ @ - 0 , 0 + 1 , 100 @ @ <nl> + / * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + package org . apache . cassandra . sink ; <nl> + <nl> + import java . net . InetAddress ; <nl> + import java . util . Set ; <nl> + import java . util . concurrent . CopyOnWriteArraySet ; <nl> + <nl> + import org . apache . cassandra . db . IMutation ; <nl> + import org . apache . cassandra . net . MessageIn ; <nl> + import org . apache . cassandra . net . MessageOut ; <nl> + <nl> + public class SinkManager <nl> + { <nl> + private static final Set < IMessageSink > messageSinks = new CopyOnWriteArraySet < > ( ) ; <nl> + private static final Set < IRequestSink > requestSinks = new CopyOnWriteArraySet < > ( ) ; <nl> + <nl> + public static void add ( IMessageSink ms ) <nl> + { <nl> + messageSinks . add ( ms ) ; <nl> + } <nl> + <nl> + public static void add ( IRequestSink rs ) <nl> + { <nl> + requestSinks . add ( rs ) ; <nl> + } <nl> + <nl> + public static void remove ( IMessageSink ms ) <nl> + { <nl> + messageSinks . remove ( ms ) ; <nl> + } <nl> + <nl> + public static void remove ( IRequestSink rs ) <nl> + { <nl> + requestSinks . remove ( rs ) ; <nl> + } <nl> + <nl> + public static void clear ( ) <nl> + { <nl> + messageSinks . clear ( ) ; <nl> + requestSinks . clear ( ) ; <nl> + } <nl> + <nl> + public static MessageOut processOutboundMessage ( MessageOut message , int id , InetAddress to ) <nl> + { <nl> + if ( messageSinks . isEmpty ( ) ) <nl> + return message ; <nl> + <nl> + for ( IMessageSink ms : messageSinks ) <nl> + { <nl> + message = ms . handleMessage ( message , id , to ) ; <nl> + if ( message = = null ) <nl> + return null ; <nl> + } <nl> + return message ; <nl> + } <nl> + <nl> + public static MessageIn processInboundMessage ( MessageIn message , int id ) <nl> + { <nl> + if ( messageSinks . isEmpty ( ) ) <nl> + return message ; <nl> + <nl> + for ( IMessageSink ms : messageSinks ) <nl> + { <nl> + message = ms . handleMessage ( message , id , null ) ; <nl> + if ( message = = null ) <nl> + return null ; <nl> + } <nl> + return message ; <nl> + } <nl> + <nl> + public static IMutation processWriteRequest ( IMutation mutation ) <nl> + { <nl> + if ( requestSinks . isEmpty ( ) ) <nl> + return mutation ; <nl> + <nl> + for ( IRequestSink rs : requestSinks ) <nl> + { <nl> + mutation = rs . handleWriteRequest ( mutation ) ; <nl> + if ( mutation = = null ) <nl> + return null ; <nl> + } <nl> + return mutation ; <nl> + } <nl> + } <nl> diff - - git a / test / unit / org / apache / cassandra / repair / DifferencerTest . java b / test / unit / org / apache / cassandra / repair / DifferencerTest . java <nl> index 3f259f2 . . b6dce40 100644 <nl> - - - a / test / unit / org / apache / cassandra / repair / DifferencerTest . java <nl> + + + b / test / unit / org / apache / cassandra / repair / DifferencerTest . java <nl> @ @ - 33 , 8 + 33 , 8 @ @ import org . apache . cassandra . dht . Token ; <nl> import org . apache . cassandra . net . MessageIn ; <nl> import org . apache . cassandra . net . MessageOut ; <nl> import org . apache . cassandra . net . MessagingService ; <nl> - import org . apache . cassandra . net . sink . IMessageSink ; <nl> - import org . apache . cassandra . net . sink . SinkManager ; <nl> + import org . apache . cassandra . sink . IMessageSink ; <nl> + import org . apache . cassandra . sink . SinkManager ; <nl> import org . apache . cassandra . repair . messages . RepairMessage ; <nl> import org . apache . cassandra . repair . messages . SyncComplete ; <nl> import org . apache . cassandra . utils . MerkleTree ; <nl> diff - - git a / test / unit / org / apache / cassandra / repair / ValidatorTest . java b / test / unit / org / apache / cassandra / repair / ValidatorTest . java <nl> index a6be1b1 . . 9fa5d89 100644 <nl> - - - a / test / unit / org / apache / cassandra / repair / ValidatorTest . java <nl> + + + b / test / unit / org / apache / cassandra / repair / ValidatorTest . java <nl> @ @ - 35 , 8 + 35 , 8 @ @ import org . apache . cassandra . dht . Token ; <nl> import org . apache . cassandra . net . MessageIn ; <nl> import org . apache . cassandra . net . MessageOut ; <nl> import org . apache . cassandra . net . MessagingService ; <nl> - import org . apache . cassandra . net . sink . IMessageSink ; <nl> - import org . apache . cassandra . net . sink . SinkManager ; <nl> + import org . apache . cassandra . sink . IMessageSink ; <nl> + import org . apache . cassandra . sink . SinkManager ; <nl> import org . apache . cassandra . repair . messages . RepairMessage ; <nl> import org . apache . cassandra . repair . messages . ValidationComplete ; <nl> import org . apache . cassandra . service . StorageService ; <nl> diff - - git a / test / unit / org / apache / cassandra / service / RemoveTest . java b / test / unit / org / apache / cassandra / service / RemoveTest . java <nl> index 1b3eb48 . . 62dd636 100644 <nl> - - - a / test / unit / org / apache / cassandra / service / RemoveTest . java <nl> + + + b / test / unit / org / apache / cassandra / service / RemoveTest . java <nl> @ @ - 39 , 7 + 39 , 7 @ @ import org . apache . cassandra . gms . Gossiper ; <nl> import org . apache . cassandra . locator . TokenMetadata ; <nl> import org . apache . cassandra . net . MessageOut ; <nl> import org . apache . cassandra . net . MessagingService ; <nl> - import org . apache . cassandra . net . sink . SinkManager ; <nl> + import org . apache . cassandra . sink . SinkManager ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> <nl> import static org . junit . Assert . assertEquals ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 8daeb2d . . 1a1abc0 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 6 @ @ 
 3 . 0 . 3 
 + * ( cqlsh ) handle INSERT and UPDATE statements with LWT conditions correctly 
 + ( CASSANDRA - 11003 ) 
 * Fix DISTINCT queries in mixed version clusters ( CASSANDRA - 10762 ) 
 * Migrate build status for indexes along with legacy schema ( CASSANDRA - 11046 ) 
 * Ensure SSTables for legacy KEYS indexes can be read ( CASSANDRA - 11045 ) 
 diff - - git a / bin / cqlsh . py b / bin / cqlsh . py 
 index 5d7d9e7 . . 74e7103 100644 
 - - - a / bin / cqlsh . py 
 + + + b / bin / cqlsh . py 
 @ @ - 1269 , 7 + 1269 , 7 @ @ class Shell ( cmd . Cmd ) : 
 elif result : 
 # CAS INSERT / UPDATE 
 self . writeresult ( " " ) 
 - self . print _ static _ result ( result . column _ names , list ( result ) , self . parse _ for _ table _ meta ( statement . query _ string ) ) 
 + self . print _ static _ result ( result . column _ names , list ( result ) , self . parse _ for _ update _ meta ( statement . query _ string ) ) 
 self . flush _ output ( ) 
 return True , future 


NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 62c3f52 . . 1052901 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 2 . 0 . 3 
 * Fix modifying column _ metadata from thrift ( CASSANDRA - 6182 ) 
 * cqlsh : fix LIST USERS output ( CASSANDRA - 6242 ) 
 + * Add IRequestSink interface ( CASSANDRA - 6248 ) 
 
 
 2 . 0 . 2 
 diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java 
 index b66c8a4 . . 6696e87 100644 
 - - - a / src / java / org / apache / cassandra / net / MessagingService . java 
 + + + b / src / java / org / apache / cassandra / net / MessagingService . java 
 @ @ - 53 , 7 + 53 , 7 @ @ import org . apache . cassandra . io . IVersionedSerializer ; 
 import org . apache . cassandra . locator . ILatencySubscriber ; 
 import org . apache . cassandra . metrics . ConnectionMetrics ; 
 import org . apache . cassandra . metrics . DroppedMessageMetrics ; 
 - import org . apache . cassandra . net . sink . SinkManager ; 
 + import org . apache . cassandra . sink . SinkManager ; 
 import org . apache . cassandra . repair . messages . RepairMessage ; 
 import org . apache . cassandra . security . SSLFactory ; 
 import org . apache . cassandra . service . * ; 
 @ @ - 708 , 9 + 708 , 13 @ @ public final class MessagingService implements MessagingServiceMBean 
 if ( state ! = null ) 
 state . trace ( " Message received from { } " , message . from ) ; 
 
 + Verb verb = message . verb ; 
 message = SinkManager . processInboundMessage ( message , id ) ; 
 if ( message = = null ) 
 + { 
 + incrementRejectedMessages ( verb ) ; 
 return ; 
 + } 
 
 Runnable runnable = new MessageDeliveryTask ( message , id , timestamp ) ; 
 TracingAwareExecutorService stage = StageManager . getStage ( message . getMessageType ( ) ) ; 
 @ @ - 798 , 6 + 802 , 20 @ @ public final class MessagingService implements MessagingServiceMBean 
 droppedMessages . get ( verb ) . dropped . mark ( ) ; 
 } 
 
 + / * * 
 + * Same as incrementDroppedMessages ( ) , but allows non - droppable verbs . Called for IMessageSink - caused message drops . 
 + * / 
 + private void incrementRejectedMessages ( Verb verb ) 
 + { 
 + DroppedMessageMetrics metrics = droppedMessages . get ( verb ) ; 
 + if ( metrics = = null ) 
 + { 
 + metrics = new DroppedMessageMetrics ( verb ) ; 
 + droppedMessages . put ( verb , metrics ) ; 
 + } 
 + metrics . dropped . mark ( ) ; 
 + } 
 + 
 private void logDroppedMessages ( ) 
 { 
 boolean logTpstats = false ; 
 diff - - git a / src / java / org / apache / cassandra / net / sink / IMessageSink . java b / src / java / org / apache / cassandra / net / sink / IMessageSink . java 
 deleted file mode 100644 
 index d6b6496 . . 0000000 
 - - - a / src / java / org / apache / cassandra / net / sink / IMessageSink . java 
 + + + / dev / null 
 @ @ - 1 , 42 + 0 , 0 @ @ 
 - / * 
 - * Licensed to the Apache Software Foundation ( ASF ) under one 
 - * or more contributor license agreements . See the NOTICE file 
 - * distributed with this work for additional information 
 - * regarding copyright ownership . The ASF licenses this file 
 - * to you under the Apache License , Version 2 . 0 ( the 
 - * " License " ) ; you may not use this file except in compliance 
 - * with the License . You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - package org . apache . cassandra . net . sink ; 
 - 
 - import java . net . InetAddress ; 
 - 
 - import org . apache . cassandra . net . MessageIn ; 
 - import org . apache . cassandra . net . MessageOut ; 
 - 
 - public interface IMessageSink 
 - { 
 - / * * 
 - * Transform or drop an outgoing message 
 - * 
 - * @ return null if the message is dropped , or the transformed message to send , which may be just 
 - * the original message 
 - * / 
 - public MessageOut handleMessage ( MessageOut message , int id , InetAddress to ) ; 
 - 
 - / * * 
 - * Transform or drop an incoming message 
 - * 
 - * @ return null if the message is dropped , or the transformed message to receive , which may be just 
 - * the original message 
 - * / 
 - public MessageIn handleMessage ( MessageIn message , int id , InetAddress to ) ; 
 - } 
 diff - - git a / src / java / org / apache / cassandra / net / sink / SinkManager . java b / src / java / org / apache / cassandra / net / sink / SinkManager . java 
 deleted file mode 100644 
 index 7b67afe . . 0000000 
 - - - a / src / java / org / apache / cassandra / net / sink / SinkManager . java 
 + + + / dev / null 
 @ @ - 1 , 68 + 0 , 0 @ @ 
 - / * 
 - * Licensed to the Apache Software Foundation ( ASF ) under one 
 - * or more contributor license agreements . See the NOTICE file 
 - * distributed with this work for additional information 
 - * regarding copyright ownership . The ASF licenses this file 
 - * to you under the Apache License , Version 2 . 0 ( the 
 - * " License " ) ; you may not use this file except in compliance 
 - * with the License . You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - package org . apache . cassandra . net . sink ; 
 - 
 - import java . net . InetAddress ; 
 - import java . util . ArrayList ; 
 - import java . util . List ; 
 - 
 - import org . apache . cassandra . net . MessageIn ; 
 - import org . apache . cassandra . net . MessageOut ; 
 - 
 - public class SinkManager 
 - { 
 - private static final List < IMessageSink > sinks = new ArrayList < IMessageSink > ( ) ; 
 - 
 - public static void add ( IMessageSink ms ) 
 - { 
 - sinks . add ( ms ) ; 
 - } 
 - 
 - public static void clear ( ) 
 - { 
 - sinks . clear ( ) ; 
 - } 
 - 
 - public static MessageOut processOutboundMessage ( MessageOut message , int id , InetAddress to ) 
 - { 
 - if ( sinks . isEmpty ( ) ) 
 - return message ; 
 - 
 - for ( IMessageSink ms : sinks ) 
 - { 
 - message = ms . handleMessage ( message , id , to ) ; 
 - if ( message = = null ) 
 - return null ; 
 - } 
 - return message ; 
 - } 
 - 
 - public static MessageIn processInboundMessage ( MessageIn message , int id ) 
 - { 
 - if ( sinks . isEmpty ( ) ) 
 - return message ; 
 - 
 - for ( IMessageSink ms : sinks ) 
 - { 
 - message = ms . handleMessage ( message , id , null ) ; 
 - if ( message = = null ) 
 - return null ; 
 - } 
 - return message ; 
 - } 
 - } 
 diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java 
 index 6dd702b . . 52a2a47 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageProxy . java 
 + + + b / src / java / org / apache / cassandra / service / StorageProxy . java 
 @ @ - 62 , 6 + 62 , 7 @ @ import org . apache . cassandra . metrics . ReadRepairMetrics ; 
 import org . apache . cassandra . metrics . StorageMetrics ; 
 import org . apache . cassandra . net . * ; 
 import org . apache . cassandra . service . paxos . * ; 
 + import org . apache . cassandra . sink . SinkManager ; 
 import org . apache . cassandra . tracing . Tracing ; 
 import org . apache . cassandra . triggers . TriggerExecutor ; 
 import org . apache . cassandra . utils . * ; 
 @ @ - 992 , 8 + 993 , 12 @ @ public class StorageProxy implements StorageProxyMBean 
 { 
 public void runMayThrow ( ) 
 { 
 - rm . apply ( ) ; 
 - responseHandler . response ( null ) ; 
 + IMutation processed = SinkManager . processWriteRequest ( rm ) ; 
 + if ( processed ! = null ) 
 + { 
 + processed . apply ( ) ; 
 + responseHandler . response ( null ) ; 
 + } 
 } 
 } ; 
 StageManager . getStage ( Stage . MUTATION ) . execute ( runnable ) ; 
 @ @ - 1104 , 8 + 1109 , 12 @ @ public class StorageProxy implements StorageProxyMBean 
 { 
 public void runMayThrow ( ) 
 { 
 - assert mutation instanceof CounterMutation ; 
 - final CounterMutation cm = ( CounterMutation ) mutation ; 
 + IMutation processed = SinkManager . processWriteRequest ( mutation ) ; 
 + if ( processed = = null ) 
 + return ; 
 + 
 + assert processed instanceof CounterMutation ; 
 + final CounterMutation cm = ( CounterMutation ) processed ; 
 
 / / apply mutation 
 cm . apply ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / sink / IMessageSink . java b / src / java / org / apache / cassandra / sink / IMessageSink . java 
 new file mode 100644 
 index 0000000 . . 996e7ff 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / sink / IMessageSink . java 
 @ @ - 0 , 0 + 1 , 42 @ @ 
 + / * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + package org . apache . cassandra . sink ; 
 + 
 + import java . net . InetAddress ; 
 + 
 + import org . apache . cassandra . net . MessageIn ; 
 + import org . apache . cassandra . net . MessageOut ; 
 + 
 + public interface IMessageSink 
 + { 
 + / * * 
 + * Transform or drop an outgoing message 
 + * 
 + * @ return null if the message is dropped , or the transformed message to send , which may be just 
 + * the original message 
 + * / 
 + MessageOut handleMessage ( MessageOut message , int id , InetAddress to ) ; 
 + 
 + / * * 
 + * Transform or drop an incoming message 
 + * 
 + * @ return null if the message is dropped , or the transformed message to receive , which may be just 
 + * the original message 
 + * / 
 + MessageIn handleMessage ( MessageIn message , int id , InetAddress to ) ; 
 + } 
 diff - - git a / src / java / org / apache / cassandra / sink / IRequestSink . java b / src / java / org / apache / cassandra / sink / IRequestSink . java 
 new file mode 100644 
 index 0000000 . . 8d68ce8 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / sink / IRequestSink . java 
 @ @ - 0 , 0 + 1 , 32 @ @ 
 + / * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + package org . apache . cassandra . sink ; 
 + 
 + import org . apache . cassandra . db . IMutation ; 
 + 
 + public interface IRequestSink 
 + { 
 + / * * 
 + * Transform or drop a write request ( represented by a RowMutation ) . 
 + * 
 + * @ param mutation the RowMutation to be applied locally . 
 + * @ return null if the mutation is to be dropped , or the transformed mutation to apply , which may be just 
 + * the original mutation . 
 + * / 
 + IMutation handleWriteRequest ( IMutation mutation ) ; 
 + } 
 diff - - git a / src / java / org / apache / cassandra / sink / SinkManager . java b / src / java / org / apache / cassandra / sink / SinkManager . java 
 new file mode 100644 
 index 0000000 . . 9b422dc 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / sink / SinkManager . java 
 @ @ - 0 , 0 + 1 , 100 @ @ 
 + / * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + package org . apache . cassandra . sink ; 
 + 
 + import java . net . InetAddress ; 
 + import java . util . Set ; 
 + import java . util . concurrent . CopyOnWriteArraySet ; 
 + 
 + import org . apache . cassandra . db . IMutation ; 
 + import org . apache . cassandra . net . MessageIn ; 
 + import org . apache . cassandra . net . MessageOut ; 
 + 
 + public class SinkManager 
 + { 
 + private static final Set < IMessageSink > messageSinks = new CopyOnWriteArraySet < > ( ) ; 
 + private static final Set < IRequestSink > requestSinks = new CopyOnWriteArraySet < > ( ) ; 
 + 
 + public static void add ( IMessageSink ms ) 
 + { 
 + messageSinks . add ( ms ) ; 
 + } 
 + 
 + public static void add ( IRequestSink rs ) 
 + { 
 + requestSinks . add ( rs ) ; 
 + } 
 + 
 + public static void remove ( IMessageSink ms ) 
 + { 
 + messageSinks . remove ( ms ) ; 
 + } 
 + 
 + public static void remove ( IRequestSink rs ) 
 + { 
 + requestSinks . remove ( rs ) ; 
 + } 
 + 
 + public static void clear ( ) 
 + { 
 + messageSinks . clear ( ) ; 
 + requestSinks . clear ( ) ; 
 + } 
 + 
 + public static MessageOut processOutboundMessage ( MessageOut message , int id , InetAddress to ) 
 + { 
 + if ( messageSinks . isEmpty ( ) ) 
 + return message ; 
 + 
 + for ( IMessageSink ms : messageSinks ) 
 + { 
 + message = ms . handleMessage ( message , id , to ) ; 
 + if ( message = = null ) 
 + return null ; 
 + } 
 + return message ; 
 + } 
 + 
 + public static MessageIn processInboundMessage ( MessageIn message , int id ) 
 + { 
 + if ( messageSinks . isEmpty ( ) ) 
 + return message ; 
 + 
 + for ( IMessageSink ms : messageSinks ) 
 + { 
 + message = ms . handleMessage ( message , id , null ) ; 
 + if ( message = = null ) 
 + return null ; 
 + } 
 + return message ; 
 + } 
 + 
 + public static IMutation processWriteRequest ( IMutation mutation ) 
 + { 
 + if ( requestSinks . isEmpty ( ) ) 
 + return mutation ; 
 + 
 + for ( IRequestSink rs : requestSinks ) 
 + { 
 + mutation = rs . handleWriteRequest ( mutation ) ; 
 + if ( mutation = = null ) 
 + return null ; 
 + } 
 + return mutation ; 
 + } 
 + } 
 diff - - git a / test / unit / org / apache / cassandra / repair / DifferencerTest . java b / test / unit / org / apache / cassandra / repair / DifferencerTest . java 
 index 3f259f2 . . b6dce40 100644 
 - - - a / test / unit / org / apache / cassandra / repair / DifferencerTest . java 
 + + + b / test / unit / org / apache / cassandra / repair / DifferencerTest . java 
 @ @ - 33 , 8 + 33 , 8 @ @ import org . apache . cassandra . dht . Token ; 
 import org . apache . cassandra . net . MessageIn ; 
 import org . apache . cassandra . net . MessageOut ; 
 import org . apache . cassandra . net . MessagingService ; 
 - import org . apache . cassandra . net . sink . IMessageSink ; 
 - import org . apache . cassandra . net . sink . SinkManager ; 
 + import org . apache . cassandra . sink . IMessageSink ; 
 + import org . apache . cassandra . sink . SinkManager ; 
 import org . apache . cassandra . repair . messages . RepairMessage ; 
 import org . apache . cassandra . repair . messages . SyncComplete ; 
 import org . apache . cassandra . utils . MerkleTree ; 
 diff - - git a / test / unit / org / apache / cassandra / repair / ValidatorTest . java b / test / unit / org / apache / cassandra / repair / ValidatorTest . java 
 index a6be1b1 . . 9fa5d89 100644 
 - - - a / test / unit / org / apache / cassandra / repair / ValidatorTest . java 
 + + + b / test / unit / org / apache / cassandra / repair / ValidatorTest . java 
 @ @ - 35 , 8 + 35 , 8 @ @ import org . apache . cassandra . dht . Token ; 
 import org . apache . cassandra . net . MessageIn ; 
 import org . apache . cassandra . net . MessageOut ; 
 import org . apache . cassandra . net . MessagingService ; 
 - import org . apache . cassandra . net . sink . IMessageSink ; 
 - import org . apache . cassandra . net . sink . SinkManager ; 
 + import org . apache . cassandra . sink . IMessageSink ; 
 + import org . apache . cassandra . sink . SinkManager ; 
 import org . apache . cassandra . repair . messages . RepairMessage ; 
 import org . apache . cassandra . repair . messages . ValidationComplete ; 
 import org . apache . cassandra . service . StorageService ; 
 diff - - git a / test / unit / org / apache / cassandra / service / RemoveTest . java b / test / unit / org / apache / cassandra / service / RemoveTest . java 
 index 1b3eb48 . . 62dd636 100644 
 - - - a / test / unit / org / apache / cassandra / service / RemoveTest . java 
 + + + b / test / unit / org / apache / cassandra / service / RemoveTest . java 
 @ @ - 39 , 7 + 39 , 7 @ @ import org . apache . cassandra . gms . Gossiper ; 
 import org . apache . cassandra . locator . TokenMetadata ; 
 import org . apache . cassandra . net . MessageOut ; 
 import org . apache . cassandra . net . MessagingService ; 
 - import org . apache . cassandra . net . sink . SinkManager ; 
 + import org . apache . cassandra . sink . SinkManager ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 
 import static org . junit . Assert . assertEquals ;
