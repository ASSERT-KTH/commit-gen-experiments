BLEU SCORE: 0.4824572994959539

TEST MSG: Make sure compaction stats are updated when compaction is interrupted ( back - port from 3 . 0 )
GENERATED MSG: Make sure compaction stats are updated when compaction is interrupted

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 033b366 . . b565acb 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 2 . 10 <nl> + * Make sure compaction stats are updated when compaction is interrupted ( Backport from 3 . 0 , CASSANDRA - 12100 ) <nl> * Fix flaky LongLeveledCompactionStrategyTest ( CASSANDRA - 12202 ) <nl> * Fix failing COPY TO STDOUT ( CASSANDRA - 12497 ) <nl> * Fix ColumnCounter : : countAll behaviour for reverse queries ( CASSANDRA - 13222 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionTask . java b / src / java / org / apache / cassandra / db / compaction / CompactionTask . java <nl> index 7489b3d . . 006c8ff 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionTask . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionTask . java <nl> @ @ - 165 , 13 + 165 , 14 @ @ public class CompactionTask extends AbstractCompactionTask <nl> ci = new CompactionIterable ( compactionType , scanners . scanners , controller , sstableFormat , taskId ) ; <nl> try ( CloseableIterator < AbstractCompactedRow > iter = ci . iterator ( ) ) <nl> { <nl> - if ( collector ! = null ) <nl> - collector . beginCompaction ( ci ) ; <nl> long lastCheckObsoletion = start ; <nl> <nl> if ( ! controller . cfs . getCompactionStrategy ( ) . isActive ) <nl> throw new CompactionInterruptedException ( ci . getCompactionInfo ( ) ) ; <nl> <nl> + if ( collector ! = null ) <nl> + collector . beginCompaction ( ci ) ; <nl> + <nl> try ( CompactionAwareWriter writer = getCompactionAwareWriter ( cfs , transaction , actuallyCompact ) ) <nl> { <nl> estimatedKeys = writer . estimatedKeys ( ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 033b366 . . b565acb 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 2 . 10 
 + * Make sure compaction stats are updated when compaction is interrupted ( Backport from 3 . 0 , CASSANDRA - 12100 ) 
 * Fix flaky LongLeveledCompactionStrategyTest ( CASSANDRA - 12202 ) 
 * Fix failing COPY TO STDOUT ( CASSANDRA - 12497 ) 
 * Fix ColumnCounter : : countAll behaviour for reverse queries ( CASSANDRA - 13222 ) 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionTask . java b / src / java / org / apache / cassandra / db / compaction / CompactionTask . java 
 index 7489b3d . . 006c8ff 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionTask . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionTask . java 
 @ @ - 165 , 13 + 165 , 14 @ @ public class CompactionTask extends AbstractCompactionTask 
 ci = new CompactionIterable ( compactionType , scanners . scanners , controller , sstableFormat , taskId ) ; 
 try ( CloseableIterator < AbstractCompactedRow > iter = ci . iterator ( ) ) 
 { 
 - if ( collector ! = null ) 
 - collector . beginCompaction ( ci ) ; 
 long lastCheckObsoletion = start ; 
 
 if ( ! controller . cfs . getCompactionStrategy ( ) . isActive ) 
 throw new CompactionInterruptedException ( ci . getCompactionInfo ( ) ) ; 
 
 + if ( collector ! = null ) 
 + collector . beginCompaction ( ci ) ; 
 + 
 try ( CompactionAwareWriter writer = getCompactionAwareWriter ( cfs , transaction , actuallyCompact ) ) 
 { 
 estimatedKeys = writer . estimatedKeys ( ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
