BLEU SCORE: 3.481258787100087E-8

TEST MSG: warnings
GENERATED MSG: abandon temp sstables on compaction error . patch by gdusbabek , reviewed by jbellis . CASSANDRA - 1596

TEST DIFF (one line): diff - - git a / tools / stress / src / org / apache / cassandra / stress / generatedata / DataGenStringDictionary . java b / tools / stress / src / org / apache / cassandra / stress / generatedata / DataGenStringDictionary . java <nl> index 68c8034 . . e581232 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / generatedata / DataGenStringDictionary . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / generatedata / DataGenStringDictionary . java <nl> @ @ - 61 , 24 + 61 , 26 @ @ public class DataGenStringDictionary extends DataGen <nl> public static DataGenFactory getFactory ( File file ) throws IOException <nl> { <nl> final List < Pair < byte [ ] , Double > > words = new ArrayList < > ( ) ; <nl> - final BufferedReader reader = new BufferedReader ( new FileReader ( file ) ) ; <nl> - String line ; <nl> - while ( null ! = ( line = reader . readLine ( ) ) ) <nl> + try ( final BufferedReader reader = new BufferedReader ( new FileReader ( file ) ) ) <nl> { <nl> - String [ ] pair = line . split ( " + " ) ; <nl> - if ( pair . length ! = 2 ) <nl> - throw new IllegalArgumentException ( " Invalid record in dictionary : \ " " + line + " \ " " ) ; <nl> - words . add ( new Pair < > ( pair [ 1 ] . getBytes ( UTF _ 8 ) , Double . parseDouble ( pair [ 0 ] ) ) ) ; <nl> - } <nl> - final EnumeratedDistribution < byte [ ] > dist = new EnumeratedDistribution < byte [ ] > ( words ) ; <nl> - return new DataGenFactory ( ) <nl> - { <nl> - @ Override <nl> - public DataGen get ( ) <nl> + String line ; <nl> + while ( null ! = ( line = reader . readLine ( ) ) ) <nl> { <nl> - return new DataGenStringDictionary ( dist ) ; <nl> + String [ ] pair = line . split ( " + " ) ; <nl> + if ( pair . length ! = 2 ) <nl> + throw new IllegalArgumentException ( " Invalid record in dictionary : \ " " + line + " \ " " ) ; <nl> + words . add ( new Pair < > ( pair [ 1 ] . getBytes ( UTF _ 8 ) , Double . parseDouble ( pair [ 0 ] ) ) ) ; <nl> } <nl> - } ; <nl> + final EnumeratedDistribution < byte [ ] > dist = new EnumeratedDistribution < byte [ ] > ( words ) ; <nl> + return new DataGenFactory ( ) <nl> + { <nl> + @ Override <nl> + public DataGen get ( ) <nl> + { <nl> + return new DataGenStringDictionary ( dist ) ; <nl> + } <nl> + } ; <nl> + } <nl> } <nl> <nl> } <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterAdder . java b / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterAdder . java <nl> index 8e1f137 . . aae99b5 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterAdder . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterAdder . java <nl> @ @ - 63 , 7 + 63 , 7 @ @ public class CqlCounterAdder extends CqlOperation < Integer > <nl> } <nl> <nl> @ Override <nl> - protected CqlRunOp buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) <nl> + protected CqlRunOp < Integer > buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) <nl> { <nl> return new CqlRunOpAlwaysSucceed ( client , query , queryId , params , keyid , key , 1 ) ; <nl> } <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterGetter . java b / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterGetter . java <nl> index 0a0b05b . . 31fd20d 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterGetter . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterGetter . java <nl> @ @ - 60 , 7 + 60 , 7 @ @ public class CqlCounterGetter extends CqlOperation < Integer > <nl> } <nl> <nl> @ Override <nl> - protected CqlRunOp buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) <nl> + protected CqlRunOp < Integer > buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) <nl> { <nl> return new CqlRunOpTestNonEmpty ( client , query , queryId , params , keyid , key ) ; <nl> } <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java b / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java <nl> index 6b1577c . . 82f00aa 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java <nl> @ @ - 79 , 7 + 79 , 7 @ @ public class CqlInserter extends CqlOperation < Integer > <nl> } <nl> <nl> @ Override <nl> - protected CqlRunOp buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) <nl> + protected CqlRunOp < Integer > buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) <nl> { <nl> return new CqlRunOpAlwaysSucceed ( client , query , queryId , params , keyid , key , 1 ) ; <nl> } <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / CqlRangeSlicer . java b / tools / stress / src / org / apache / cassandra / stress / operations / CqlRangeSlicer . java <nl> index 467e754 . . 76ba966 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / operations / CqlRangeSlicer . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / operations / CqlRangeSlicer . java <nl> @ @ - 51 , 7 + 51 , 7 @ @ public class CqlRangeSlicer extends CqlOperation < Integer > <nl> } <nl> <nl> @ Override <nl> - protected CqlRunOp buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) <nl> + protected CqlRunOp < Integer > buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) <nl> { <nl> return new CqlRunOpTestNonEmpty ( client , query , queryId , params , keyid , key ) ; <nl> } <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / CqlReader . java b / tools / stress / src / org / apache / cassandra / stress / operations / CqlReader . java <nl> index 051fd18 . . 749a482 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / operations / CqlReader . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / operations / CqlReader . java <nl> @ @ - 79 , 7 + 79 , 7 @ @ public class CqlReader extends CqlOperation < Integer > <nl> } <nl> <nl> @ Override <nl> - protected CqlRunOp buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) <nl> + protected CqlRunOp < Integer > buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) <nl> { <nl> return new CqlRunOpTestNonEmpty ( client , query , queryId , params , keyid , key ) ; <nl> } <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / StressSettings . java b / tools / stress / src / org / apache / cassandra / stress / settings / StressSettings . java <nl> index ec4db96 . . b3fe406 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / settings / StressSettings . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / settings / StressSettings . java <nl> @ @ - 9 , 7 + 9 , 6 @ @ import org . apache . cassandra . stress . util . SimpleThriftClient ; <nl> import org . apache . cassandra . stress . util . SmartThriftClient ; <nl> import org . apache . cassandra . thrift . Cassandra ; <nl> import org . apache . cassandra . thrift . InvalidRequestException ; <nl> - import org . apache . cassandra . thrift . TFramedTransportFactory ; <nl> import org . apache . cassandra . transport . SimpleClient ; <nl> import org . apache . thrift . protocol . TBinaryProtocol ; <nl> import org . apache . thrift . transport . TSocket ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 893c5d8 . . 05acb48 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 26 , 6 + 26 , 7 @ @ dev <nl> * reduce index sample time by 75 % ( CASSANDRA - 1572 ) <nl> * add cli support for column metadata ( CASSANDRA - 1578 ) <nl> * add cli support for schema modification ( CASSANDRA - 1584 ) <nl> + * delete temp files on failed compactions ( CASSANDRA - 1596 ) <nl> <nl> <nl> 0 . 7 - beta2 <nl> diff - - git a / src / java / org / apache / cassandra / db / CompactionManager . java b / src / java / org / apache / cassandra / db / CompactionManager . java <nl> index 4ac73e5 . . 3000dd8 100644 <nl> - - - a / src / java / org / apache / cassandra / db / CompactionManager . java <nl> + + + b / src / java / org / apache / cassandra / db / CompactionManager . java <nl> @ @ - 283 , 9 + 283 , 16 @ @ public class CompactionManager implements CompactionManagerMBean <nl> while ( nni . hasNext ( ) ) <nl> { <nl> AbstractCompactedRow row = nni . next ( ) ; <nl> - long prevpos = writer . getFilePointer ( ) ; <nl> - <nl> - writer . append ( row ) ; <nl> + try <nl> + { <nl> + writer . append ( row ) ; <nl> + } <nl> + catch ( IOException ex ) <nl> + { <nl> + writer . abort ( ) ; <nl> + / / rethrow the exception so that caller knows compaction failed . <nl> + throw ex ; <nl> + } <nl> totalkeysWritten + + ; <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> index ccef690 . . 8d37c0a 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ package org . apache . cassandra . io . sstable ; <nl> import java . io . * ; <nl> import java . util . Set ; <nl> <nl> + import org . apache . cassandra . io . util . FileUtils ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> @ @ - 65 , 6 + 66 , 30 @ @ public class SSTableWriter extends SSTable <nl> components . add ( Component . PRIMARY _ INDEX ) ; <nl> components . add ( Component . STATS ) ; <nl> } <nl> + <nl> + / * * something bad happened and the files associated with this writer need to be deleted . * / <nl> + public void abort ( ) <nl> + { <nl> + try <nl> + { <nl> + dataFile . close ( ) ; <nl> + FileUtils . deleteWithConfirm ( dataFile . getPath ( ) ) ; <nl> + } <nl> + catch ( IOException ex ) <nl> + { <nl> + logger . error ( String . format ( " Caught exception while deleting aborted sstable ( % s ) . % s " , dataFile . getPath ( ) , ex . getMessage ( ) ) ) ; <nl> + } <nl> + <nl> + try <nl> + { <nl> + iwriter . close ( ) ; <nl> + FileUtils . deleteWithConfirm ( descriptor . filenameFor ( SSTable . COMPONENT _ INDEX ) ) ; <nl> + } <nl> + catch ( IOException ex ) <nl> + { <nl> + logger . error ( String . format ( " Caught exception while deleting aborted sstable ( % s ) . % s " , descriptor . filenameFor ( SSTable . COMPONENT _ INDEX ) , ex . getMessage ( ) ) ) ; <nl> + } <nl> + } <nl> <nl> private long beforeAppend ( DecoratedKey decoratedKey ) throws IOException <nl> {

TEST DIFF:
diff - - git a / tools / stress / src / org / apache / cassandra / stress / generatedata / DataGenStringDictionary . java b / tools / stress / src / org / apache / cassandra / stress / generatedata / DataGenStringDictionary . java 
 index 68c8034 . . e581232 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / generatedata / DataGenStringDictionary . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / generatedata / DataGenStringDictionary . java 
 @ @ - 61 , 24 + 61 , 26 @ @ public class DataGenStringDictionary extends DataGen 
 public static DataGenFactory getFactory ( File file ) throws IOException 
 { 
 final List < Pair < byte [ ] , Double > > words = new ArrayList < > ( ) ; 
 - final BufferedReader reader = new BufferedReader ( new FileReader ( file ) ) ; 
 - String line ; 
 - while ( null ! = ( line = reader . readLine ( ) ) ) 
 + try ( final BufferedReader reader = new BufferedReader ( new FileReader ( file ) ) ) 
 { 
 - String [ ] pair = line . split ( " + " ) ; 
 - if ( pair . length ! = 2 ) 
 - throw new IllegalArgumentException ( " Invalid record in dictionary : \ " " + line + " \ " " ) ; 
 - words . add ( new Pair < > ( pair [ 1 ] . getBytes ( UTF _ 8 ) , Double . parseDouble ( pair [ 0 ] ) ) ) ; 
 - } 
 - final EnumeratedDistribution < byte [ ] > dist = new EnumeratedDistribution < byte [ ] > ( words ) ; 
 - return new DataGenFactory ( ) 
 - { 
 - @ Override 
 - public DataGen get ( ) 
 + String line ; 
 + while ( null ! = ( line = reader . readLine ( ) ) ) 
 { 
 - return new DataGenStringDictionary ( dist ) ; 
 + String [ ] pair = line . split ( " + " ) ; 
 + if ( pair . length ! = 2 ) 
 + throw new IllegalArgumentException ( " Invalid record in dictionary : \ " " + line + " \ " " ) ; 
 + words . add ( new Pair < > ( pair [ 1 ] . getBytes ( UTF _ 8 ) , Double . parseDouble ( pair [ 0 ] ) ) ) ; 
 } 
 - } ; 
 + final EnumeratedDistribution < byte [ ] > dist = new EnumeratedDistribution < byte [ ] > ( words ) ; 
 + return new DataGenFactory ( ) 
 + { 
 + @ Override 
 + public DataGen get ( ) 
 + { 
 + return new DataGenStringDictionary ( dist ) ; 
 + } 
 + } ; 
 + } 
 } 
 
 } 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterAdder . java b / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterAdder . java 
 index 8e1f137 . . aae99b5 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterAdder . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterAdder . java 
 @ @ - 63 , 7 + 63 , 7 @ @ public class CqlCounterAdder extends CqlOperation < Integer > 
 } 
 
 @ Override 
 - protected CqlRunOp buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) 
 + protected CqlRunOp < Integer > buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) 
 { 
 return new CqlRunOpAlwaysSucceed ( client , query , queryId , params , keyid , key , 1 ) ; 
 } 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterGetter . java b / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterGetter . java 
 index 0a0b05b . . 31fd20d 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterGetter . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / operations / CqlCounterGetter . java 
 @ @ - 60 , 7 + 60 , 7 @ @ public class CqlCounterGetter extends CqlOperation < Integer > 
 } 
 
 @ Override 
 - protected CqlRunOp buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) 
 + protected CqlRunOp < Integer > buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) 
 { 
 return new CqlRunOpTestNonEmpty ( client , query , queryId , params , keyid , key ) ; 
 } 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java b / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java 
 index 6b1577c . . 82f00aa 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java 
 @ @ - 79 , 7 + 79 , 7 @ @ public class CqlInserter extends CqlOperation < Integer > 
 } 
 
 @ Override 
 - protected CqlRunOp buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) 
 + protected CqlRunOp < Integer > buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) 
 { 
 return new CqlRunOpAlwaysSucceed ( client , query , queryId , params , keyid , key , 1 ) ; 
 } 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / CqlRangeSlicer . java b / tools / stress / src / org / apache / cassandra / stress / operations / CqlRangeSlicer . java 
 index 467e754 . . 76ba966 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / operations / CqlRangeSlicer . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / operations / CqlRangeSlicer . java 
 @ @ - 51 , 7 + 51 , 7 @ @ public class CqlRangeSlicer extends CqlOperation < Integer > 
 } 
 
 @ Override 
 - protected CqlRunOp buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) 
 + protected CqlRunOp < Integer > buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) 
 { 
 return new CqlRunOpTestNonEmpty ( client , query , queryId , params , keyid , key ) ; 
 } 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / CqlReader . java b / tools / stress / src / org / apache / cassandra / stress / operations / CqlReader . java 
 index 051fd18 . . 749a482 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / operations / CqlReader . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / operations / CqlReader . java 
 @ @ - 79 , 7 + 79 , 7 @ @ public class CqlReader extends CqlOperation < Integer > 
 } 
 
 @ Override 
 - protected CqlRunOp buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) 
 + protected CqlRunOp < Integer > buildRunOp ( ClientWrapper client , String query , Object queryId , List < ByteBuffer > params , String keyid , ByteBuffer key ) 
 { 
 return new CqlRunOpTestNonEmpty ( client , query , queryId , params , keyid , key ) ; 
 } 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / StressSettings . java b / tools / stress / src / org / apache / cassandra / stress / settings / StressSettings . java 
 index ec4db96 . . b3fe406 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / settings / StressSettings . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / settings / StressSettings . java 
 @ @ - 9 , 7 + 9 , 6 @ @ import org . apache . cassandra . stress . util . SimpleThriftClient ; 
 import org . apache . cassandra . stress . util . SmartThriftClient ; 
 import org . apache . cassandra . thrift . Cassandra ; 
 import org . apache . cassandra . thrift . InvalidRequestException ; 
 - import org . apache . cassandra . thrift . TFramedTransportFactory ; 
 import org . apache . cassandra . transport . SimpleClient ; 
 import org . apache . thrift . protocol . TBinaryProtocol ; 
 import org . apache . thrift . transport . TSocket ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 893c5d8 . . 05acb48 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 26 , 6 + 26 , 7 @ @ dev 
 * reduce index sample time by 75 % ( CASSANDRA - 1572 ) 
 * add cli support for column metadata ( CASSANDRA - 1578 ) 
 * add cli support for schema modification ( CASSANDRA - 1584 ) 
 + * delete temp files on failed compactions ( CASSANDRA - 1596 ) 
 
 
 0 . 7 - beta2 
 diff - - git a / src / java / org / apache / cassandra / db / CompactionManager . java b / src / java / org / apache / cassandra / db / CompactionManager . java 
 index 4ac73e5 . . 3000dd8 100644 
 - - - a / src / java / org / apache / cassandra / db / CompactionManager . java 
 + + + b / src / java / org / apache / cassandra / db / CompactionManager . java 
 @ @ - 283 , 9 + 283 , 16 @ @ public class CompactionManager implements CompactionManagerMBean 
 while ( nni . hasNext ( ) ) 
 { 
 AbstractCompactedRow row = nni . next ( ) ; 
 - long prevpos = writer . getFilePointer ( ) ; 
 - 
 - writer . append ( row ) ; 
 + try 
 + { 
 + writer . append ( row ) ; 
 + } 
 + catch ( IOException ex ) 
 + { 
 + writer . abort ( ) ; 
 + / / rethrow the exception so that caller knows compaction failed . 
 + throw ex ; 
 + } 
 totalkeysWritten + + ; 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 index ccef690 . . 8d37c0a 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 @ @ - 22 , 6 + 22 , 7 @ @ package org . apache . cassandra . io . sstable ; 
 import java . io . * ; 
 import java . util . Set ; 
 
 + import org . apache . cassandra . io . util . FileUtils ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 @ @ - 65 , 6 + 66 , 30 @ @ public class SSTableWriter extends SSTable 
 components . add ( Component . PRIMARY _ INDEX ) ; 
 components . add ( Component . STATS ) ; 
 } 
 + 
 + / * * something bad happened and the files associated with this writer need to be deleted . * / 
 + public void abort ( ) 
 + { 
 + try 
 + { 
 + dataFile . close ( ) ; 
 + FileUtils . deleteWithConfirm ( dataFile . getPath ( ) ) ; 
 + } 
 + catch ( IOException ex ) 
 + { 
 + logger . error ( String . format ( " Caught exception while deleting aborted sstable ( % s ) . % s " , dataFile . getPath ( ) , ex . getMessage ( ) ) ) ; 
 + } 
 + 
 + try 
 + { 
 + iwriter . close ( ) ; 
 + FileUtils . deleteWithConfirm ( descriptor . filenameFor ( SSTable . COMPONENT _ INDEX ) ) ; 
 + } 
 + catch ( IOException ex ) 
 + { 
 + logger . error ( String . format ( " Caught exception while deleting aborted sstable ( % s ) . % s " , descriptor . filenameFor ( SSTable . COMPONENT _ INDEX ) , ex . getMessage ( ) ) ) ; 
 + } 
 + } 
 
 private long beforeAppend ( DecoratedKey decoratedKey ) throws IOException 
 {
