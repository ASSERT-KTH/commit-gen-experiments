BLEU SCORE: 0.020980574531482755

TEST MSG: Use correct bounds for all - data range when filtering
GENERATED MSG: Allow only DISTINCT queries with partition keys restrictions

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 72d6a1f . . b238018 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 10 <nl> + * Use correct bounds for all - data range when filtering ( CASSANDRA - 12666 ) <nl> * Remove timing window in test case ( CASSANDRA - 12875 ) <nl> * Resolve unit testing without JCE security libraries installed ( CASSANDRA - 12945 ) <nl> * Fix inconsistencies in cassandra - stress load balancing policy ( CASSANDRA - 12919 ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java b / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java <nl> index 53ac68c . . 2d04633 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java <nl> @ @ - 624 , 11 + 624 , 6 @ @ public final class StatementRestrictions <nl> * / <nl> private ByteBuffer getPartitionKeyBound ( Bound b , QueryOptions options ) <nl> { <nl> - / / Deal with unrestricted partition key components ( special - casing is required to deal with 2i queries on the <nl> - / / first component of a composite partition key ) queries that filter on the partition key . <nl> - if ( partitionKeyRestrictions . needFiltering ( cfm ) ) <nl> - return ByteBufferUtil . EMPTY _ BYTE _ BUFFER ; <nl> - <nl> / / We deal with IN queries for keys in other places , so we know buildBound will return only one result <nl> return partitionKeyRestrictions . bounds ( b , options ) . get ( 0 ) ; <nl> } <nl> @ @ - 654 , 6 + 649 , 11 @ @ public final class StatementRestrictions <nl> private AbstractBounds < PartitionPosition > getPartitionKeyBounds ( IPartitioner p , <nl> QueryOptions options ) <nl> { <nl> + / / Deal with unrestricted partition key components ( special - casing is required to deal with 2i queries on the <nl> + / / first component of a composite partition key ) queries that filter on the partition key . <nl> + if ( partitionKeyRestrictions . needFiltering ( cfm ) ) <nl> + return new Range < > ( p . getMinimumToken ( ) . minKeyBound ( ) , p . getMinimumToken ( ) . maxKeyBound ( ) ) ; <nl> + <nl> ByteBuffer startKeyBytes = getPartitionKeyBound ( Bound . START , options ) ; <nl> ByteBuffer finishKeyBytes = getPartitionKeyBound ( Bound . END , options ) ; <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 72d6a1f . . b238018 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 10 
 + * Use correct bounds for all - data range when filtering ( CASSANDRA - 12666 ) 
 * Remove timing window in test case ( CASSANDRA - 12875 ) 
 * Resolve unit testing without JCE security libraries installed ( CASSANDRA - 12945 ) 
 * Fix inconsistencies in cassandra - stress load balancing policy ( CASSANDRA - 12919 ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java b / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java 
 index 53ac68c . . 2d04633 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java 
 + + + b / src / java / org / apache / cassandra / cql3 / restrictions / StatementRestrictions . java 
 @ @ - 624 , 11 + 624 , 6 @ @ public final class StatementRestrictions 
 * / 
 private ByteBuffer getPartitionKeyBound ( Bound b , QueryOptions options ) 
 { 
 - / / Deal with unrestricted partition key components ( special - casing is required to deal with 2i queries on the 
 - / / first component of a composite partition key ) queries that filter on the partition key . 
 - if ( partitionKeyRestrictions . needFiltering ( cfm ) ) 
 - return ByteBufferUtil . EMPTY _ BYTE _ BUFFER ; 
 - 
 / / We deal with IN queries for keys in other places , so we know buildBound will return only one result 
 return partitionKeyRestrictions . bounds ( b , options ) . get ( 0 ) ; 
 } 
 @ @ - 654 , 6 + 649 , 11 @ @ public final class StatementRestrictions 
 private AbstractBounds < PartitionPosition > getPartitionKeyBounds ( IPartitioner p , 
 QueryOptions options ) 
 { 
 + / / Deal with unrestricted partition key components ( special - casing is required to deal with 2i queries on the 
 + / / first component of a composite partition key ) queries that filter on the partition key . 
 + if ( partitionKeyRestrictions . needFiltering ( cfm ) ) 
 + return new Range < > ( p . getMinimumToken ( ) . minKeyBound ( ) , p . getMinimumToken ( ) . maxKeyBound ( ) ) ; 
 + 
 ByteBuffer startKeyBytes = getPartitionKeyBound ( Bound . START , options ) ; 
 ByteBuffer finishKeyBytes = getPartitionKeyBound ( Bound . END , options ) ; 


NEAREST DIFF:
ELIMINATEDSENTENCE
