BLEU SCORE: 0.0254507234234606

TEST MSG: fix CRC32Ex unit test when JDK < 1 . 8
GENERATED MSG: use JNA to call link w / o spawning a separate process during snapshot .

TEST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / utils / CRC32FactoryTest . java b / test / unit / org / apache / cassandra / utils / CRC32FactoryTest . java <nl> index a55fbf0 . . 2187cb9 100644 <nl> - - - a / test / unit / org / apache / cassandra / utils / CRC32FactoryTest . java <nl> + + + b / test / unit / org / apache / cassandra / utils / CRC32FactoryTest . java <nl> @ @ - 55 , 6 + 55 , 9 @ @ public class CRC32FactoryTest <nl> <nl> private void testOnce ( ) <nl> { <nl> + if ( Float . parseFloat ( System . getProperty ( " java . version " ) . substring ( 0 , 3 ) ) < 1 . 8 ) <nl> + return ; <nl> + <nl> final long seed = System . nanoTime ( ) ; <nl> System . out . println ( " Seed is " + seed ) ; <nl> Random r = new java . util . Random ( seed ) ; <nl> @ @ - 112 , 9 + 115 , 9 @ @ public class CRC32FactoryTest <nl> @ Test <nl> public void jdkDetection ( ) <nl> { <nl> - if ( System . getProperty ( " java . version " ) . startsWith ( " 1 . 7 " ) ) <nl> - assertFalse ( CRC32Factory . create ( ) instanceof CRC32Factory . CRC32Ex ) ; <nl> - else <nl> + if ( Float . parseFloat ( System . getProperty ( " java . version " ) . substring ( 0 , 3 ) ) > = 1 . 8 ) <nl> assertTrue ( CRC32Factory . create ( ) instanceof CRC32Factory . CRC32Ex ) ; <nl> + else <nl> + assertFalse ( CRC32Factory . create ( ) instanceof CRC32Factory . CRC32Ex ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 420138a . . 8db932b 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 21 , 6 + 21 , 7 @ @ dev <nl> ( CASSANDRA - 1385 ) <nl> * disallow invalid keyspace and column family names . This includes name that <nl> matches a ' ^ \ w + ' regex . ( CASSANDRA - 1377 ) <nl> + * use JNA , if present , to take snapshots ( CASSANDRA - 1371 ) <nl> <nl> <nl> 0 . 7 - beta1 <nl> diff - - git a / src / java / org / apache / cassandra / io / util / FileUtils . java b / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> index cd75871 . . eb1d0e5 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> + + + b / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> @ @ - 25 , 6 + 25 , 9 @ @ import java . util . * ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> + import com . sun . jna . Native ; <nl> + import org . apache . cassandra . utils . CLibrary ; <nl> + <nl> <nl> public class FileUtils <nl> { <nl> @ @ - 206 , 6 + 209 , 30 @ @ public class FileUtils <nl> * / <nl> public static void createHardLink ( File sourceFile , File destinationFile ) throws IOException <nl> { <nl> + int errno = Integer . MIN _ VALUE ; <nl> + try <nl> + { <nl> + int result = CLibrary . link ( sourceFile . getAbsolutePath ( ) , destinationFile . getAbsolutePath ( ) ) ; <nl> + if ( result ! = 0 ) <nl> + errno = Native . getLastError ( ) ; <nl> + } <nl> + catch ( UnsatisfiedLinkError e ) <nl> + { <nl> + createHardLinkWithExec ( sourceFile , destinationFile ) ; <nl> + return ; <nl> + } <nl> + <nl> + if ( errno ! = Integer . MIN _ VALUE ) <nl> + { <nl> + / / there are 17 different error codes listed on the man page . punt until / unless we find which <nl> + / / ones actually turn up in practice . <nl> + throw new IOException ( String . format ( " Unable to create hard link from % s to % s ( errno % d ) " , <nl> + sourceFile , destinationFile , errno ) ) ; <nl> + } <nl> + } <nl> + <nl> + private static void createHardLinkWithExec ( File sourceFile , File destinationFile ) throws IOException <nl> + { <nl> String osname = System . getProperty ( " os . name " ) ; <nl> ProcessBuilder pb ; <nl> if ( osname . startsWith ( " Windows " ) ) <nl> diff - - git a / src / java / org / apache / cassandra / utils / CLibrary . java b / src / java / org / apache / cassandra / utils / CLibrary . java <nl> index 3682927 . . ee85a9a 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / CLibrary . java <nl> + + + b / src / java / org / apache / cassandra / utils / CLibrary . java <nl> @ @ - 49 , 8 + 49 , 9 @ @ public final class CLibrary <nl> } <nl> <nl> public static native int mlockall ( int flags ) ; <nl> - <nl> public static native int munlockall ( ) ; <nl> <nl> + public static native int link ( String from , String to ) ; <nl> + <nl> private CLibrary ( ) { } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / utils / FBUtilities . java b / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> index 4b846fb . . 366b888 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> + + + b / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> @ @ - 616 , 21 + 616 , 6 @ @ public class FBUtilities <nl> / / this will have already been logged by CLibrary , no need to repeat it <nl> return ; <nl> } <nl> - catch ( Exception e ) <nl> - { <nl> - logger _ . debug ( " Unable to mlockall " , e ) ; <nl> - / / skipping mlockall doesn ' t seem to be a Big Deal except on Linux . See CASSANDRA - 1214 <nl> - if ( System . getProperty ( " os . name " ) . toLowerCase ( ) . contains ( " linux " ) ) <nl> - { <nl> - logger _ . warn ( " Unable to lock JVM memory ( " + e . getMessage ( ) + " ) . " <nl> - + " This can result in part of the JVM being swapped out , especially with mmapped I / O enabled . " ) ; <nl> - } <nl> - else if ( ! System . getProperty ( " os . name " ) . toLowerCase ( ) . contains ( " windows " ) ) <nl> - { <nl> - logger _ . info ( " Unable to lock JVM memory : " + e . getMessage ( ) ) ; <nl> - } <nl> - return ; <nl> - } <nl> <nl> if ( errno ! = Integer . MIN _ VALUE ) <nl> { <nl> diff - - git a / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java b / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java <nl> index 8d342cc . . 369f522 100644 <nl> - - - a / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java <nl> + + + b / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java <nl> @ @ - 60 , 5 + 60 , 11 @ @ public class StorageServiceServerTest <nl> List < Token > toks = Collections . emptyList ( ) ; <nl> assertEquals ( Collections . emptyList ( ) , StorageService . instance . getAllRanges ( toks ) ) ; <nl> } <nl> - } <nl> <nl> + @ Test <nl> + public void testSnapshot ( ) throws IOException <nl> + { <nl> + / / no need to insert extra data , even an " empty " database will have a little information in the system keyspace <nl> + StorageService . instance . takeAllSnapshot ( null ) ; <nl> + } <nl> + }

TEST DIFF:
diff - - git a / test / unit / org / apache / cassandra / utils / CRC32FactoryTest . java b / test / unit / org / apache / cassandra / utils / CRC32FactoryTest . java 
 index a55fbf0 . . 2187cb9 100644 
 - - - a / test / unit / org / apache / cassandra / utils / CRC32FactoryTest . java 
 + + + b / test / unit / org / apache / cassandra / utils / CRC32FactoryTest . java 
 @ @ - 55 , 6 + 55 , 9 @ @ public class CRC32FactoryTest 
 
 private void testOnce ( ) 
 { 
 + if ( Float . parseFloat ( System . getProperty ( " java . version " ) . substring ( 0 , 3 ) ) < 1 . 8 ) 
 + return ; 
 + 
 final long seed = System . nanoTime ( ) ; 
 System . out . println ( " Seed is " + seed ) ; 
 Random r = new java . util . Random ( seed ) ; 
 @ @ - 112 , 9 + 115 , 9 @ @ public class CRC32FactoryTest 
 @ Test 
 public void jdkDetection ( ) 
 { 
 - if ( System . getProperty ( " java . version " ) . startsWith ( " 1 . 7 " ) ) 
 - assertFalse ( CRC32Factory . create ( ) instanceof CRC32Factory . CRC32Ex ) ; 
 - else 
 + if ( Float . parseFloat ( System . getProperty ( " java . version " ) . substring ( 0 , 3 ) ) > = 1 . 8 ) 
 assertTrue ( CRC32Factory . create ( ) instanceof CRC32Factory . CRC32Ex ) ; 
 + else 
 + assertFalse ( CRC32Factory . create ( ) instanceof CRC32Factory . CRC32Ex ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 420138a . . 8db932b 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 21 , 6 + 21 , 7 @ @ dev 
 ( CASSANDRA - 1385 ) 
 * disallow invalid keyspace and column family names . This includes name that 
 matches a ' ^ \ w + ' regex . ( CASSANDRA - 1377 ) 
 + * use JNA , if present , to take snapshots ( CASSANDRA - 1371 ) 
 
 
 0 . 7 - beta1 
 diff - - git a / src / java / org / apache / cassandra / io / util / FileUtils . java b / src / java / org / apache / cassandra / io / util / FileUtils . java 
 index cd75871 . . eb1d0e5 100644 
 - - - a / src / java / org / apache / cassandra / io / util / FileUtils . java 
 + + + b / src / java / org / apache / cassandra / io / util / FileUtils . java 
 @ @ - 25 , 6 + 25 , 9 @ @ import java . util . * ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 + import com . sun . jna . Native ; 
 + import org . apache . cassandra . utils . CLibrary ; 
 + 
 
 public class FileUtils 
 { 
 @ @ - 206 , 6 + 209 , 30 @ @ public class FileUtils 
 * / 
 public static void createHardLink ( File sourceFile , File destinationFile ) throws IOException 
 { 
 + int errno = Integer . MIN _ VALUE ; 
 + try 
 + { 
 + int result = CLibrary . link ( sourceFile . getAbsolutePath ( ) , destinationFile . getAbsolutePath ( ) ) ; 
 + if ( result ! = 0 ) 
 + errno = Native . getLastError ( ) ; 
 + } 
 + catch ( UnsatisfiedLinkError e ) 
 + { 
 + createHardLinkWithExec ( sourceFile , destinationFile ) ; 
 + return ; 
 + } 
 + 
 + if ( errno ! = Integer . MIN _ VALUE ) 
 + { 
 + / / there are 17 different error codes listed on the man page . punt until / unless we find which 
 + / / ones actually turn up in practice . 
 + throw new IOException ( String . format ( " Unable to create hard link from % s to % s ( errno % d ) " , 
 + sourceFile , destinationFile , errno ) ) ; 
 + } 
 + } 
 + 
 + private static void createHardLinkWithExec ( File sourceFile , File destinationFile ) throws IOException 
 + { 
 String osname = System . getProperty ( " os . name " ) ; 
 ProcessBuilder pb ; 
 if ( osname . startsWith ( " Windows " ) ) 
 diff - - git a / src / java / org / apache / cassandra / utils / CLibrary . java b / src / java / org / apache / cassandra / utils / CLibrary . java 
 index 3682927 . . ee85a9a 100644 
 - - - a / src / java / org / apache / cassandra / utils / CLibrary . java 
 + + + b / src / java / org / apache / cassandra / utils / CLibrary . java 
 @ @ - 49 , 8 + 49 , 9 @ @ public final class CLibrary 
 } 
 
 public static native int mlockall ( int flags ) ; 
 - 
 public static native int munlockall ( ) ; 
 
 + public static native int link ( String from , String to ) ; 
 + 
 private CLibrary ( ) { } 
 } 
 diff - - git a / src / java / org / apache / cassandra / utils / FBUtilities . java b / src / java / org / apache / cassandra / utils / FBUtilities . java 
 index 4b846fb . . 366b888 100644 
 - - - a / src / java / org / apache / cassandra / utils / FBUtilities . java 
 + + + b / src / java / org / apache / cassandra / utils / FBUtilities . java 
 @ @ - 616 , 21 + 616 , 6 @ @ public class FBUtilities 
 / / this will have already been logged by CLibrary , no need to repeat it 
 return ; 
 } 
 - catch ( Exception e ) 
 - { 
 - logger _ . debug ( " Unable to mlockall " , e ) ; 
 - / / skipping mlockall doesn ' t seem to be a Big Deal except on Linux . See CASSANDRA - 1214 
 - if ( System . getProperty ( " os . name " ) . toLowerCase ( ) . contains ( " linux " ) ) 
 - { 
 - logger _ . warn ( " Unable to lock JVM memory ( " + e . getMessage ( ) + " ) . " 
 - + " This can result in part of the JVM being swapped out , especially with mmapped I / O enabled . " ) ; 
 - } 
 - else if ( ! System . getProperty ( " os . name " ) . toLowerCase ( ) . contains ( " windows " ) ) 
 - { 
 - logger _ . info ( " Unable to lock JVM memory : " + e . getMessage ( ) ) ; 
 - } 
 - return ; 
 - } 
 
 if ( errno ! = Integer . MIN _ VALUE ) 
 { 
 diff - - git a / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java b / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java 
 index 8d342cc . . 369f522 100644 
 - - - a / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java 
 + + + b / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java 
 @ @ - 60 , 5 + 60 , 11 @ @ public class StorageServiceServerTest 
 List < Token > toks = Collections . emptyList ( ) ; 
 assertEquals ( Collections . emptyList ( ) , StorageService . instance . getAllRanges ( toks ) ) ; 
 } 
 - } 
 
 + @ Test 
 + public void testSnapshot ( ) throws IOException 
 + { 
 + / / no need to insert extra data , even an " empty " database will have a little information in the system keyspace 
 + StorageService . instance . takeAllSnapshot ( null ) ; 
 + } 
 + }
