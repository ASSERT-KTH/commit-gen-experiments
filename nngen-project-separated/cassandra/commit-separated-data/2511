BLEU SCORE: 0.0033689734995427335

TEST MSG: fix build
GENERATED MSG: Update token metadata for NORMAL state when endpoint has not changed .

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 992a13a . . bfca642 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 1537 , 7 + 1537 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> / / set state back to normal , since the node may have tried to leave , but failed and is now back up <nl> tokensToUpdateInMetadata . add ( token ) ; <nl> if ( ! isClientMode ) <nl> - tokensToUpdateInSystemKeyspace . add ( token ) ; <nl> + tokensToUpdateInSystemTable . add ( token ) ; <nl> } <nl> else if ( tokenMetadata . isRelocating ( token ) & & tokenMetadata . getRelocatingRanges ( ) . get ( token ) . equals ( endpoint ) ) <nl> {
NEAREST DIFF (one line): diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml <nl> index 8241c78 . . ca5495d 100644 <nl> - - - a / conf / cassandra . yaml <nl> + + + b / conf / cassandra . yaml <nl> @ @ - 31 , 6 + 31 , 10 @ @ auto _ bootstrap : false <nl> <nl> # See http : / / wiki . apache . org / cassandra / HintedHandoff <nl> hinted _ handoff _ enabled : true <nl> + # this defines the maximum amount of time a dead host will have hints <nl> + # generated . After it has been dead this long , hints will be dropped . <nl> + # Maximum is approximately 50 days <nl> + max _ hint _ window _ in _ ms : 2147483647 <nl> <nl> # authentication backend , implementing IAuthenticator ; used to identify users <nl> authenticator : org . apache . cassandra . auth . AllowAllAuthenticator <nl> diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java <nl> index def0a5e . . fd4bca0 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Config . java <nl> + + + b / src / java / org / apache / cassandra / config / Config . java <nl> @ @ - 34 , 6 + 34 , 7 @ @ public class Config <nl> <nl> public Boolean auto _ bootstrap = false ; <nl> public Boolean hinted _ handoff _ enabled = true ; <nl> + public Integer max _ hint _ window _ in _ ms = Integer . MAX _ VALUE ; <nl> <nl> public String [ ] seeds ; <nl> public DiskAccessMode disk _ access _ mode = DiskAccessMode . auto ; <nl> diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index f1f23f0 . . 972cd5e 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 1079 , 6 + 1079 , 11 @ @ public class DatabaseDescriptor <nl> return conf . hinted _ handoff _ enabled ; <nl> } <nl> <nl> + public static int getMaxHintWindow ( ) <nl> + { <nl> + return conf . max _ hint _ window _ in _ ms ; <nl> + } <nl> + <nl> public static AbstractType getValueValidator ( String keyspace , String cf , ByteBuffer column ) <nl> { <nl> return getCFMetaData ( keyspace , cf ) . getValueValidator ( column ) ; <nl> diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> index de863f8 . . 312cf85 100644 <nl> - - - a / src / java / org / apache / cassandra / gms / Gossiper . java <nl> + + + b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> @ @ - 128 , 7 + 128 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener <nl> private Set < InetAddress > liveEndpoints _ = new ConcurrentSkipListSet < InetAddress > ( inetcomparator ) ; <nl> <nl> / * unreachable member set * / <nl> - private Set < InetAddress > unreachableEndpoints _ = new ConcurrentSkipListSet < InetAddress > ( inetcomparator ) ; <nl> + private Map < InetAddress , Long > unreachableEndpoints _ = new ConcurrentHashMap < InetAddress , Long > ( ) ; <nl> <nl> / * initial seeds for joining the cluster * / <nl> private Set < InetAddress > seeds _ = new ConcurrentSkipListSet < InetAddress > ( inetcomparator ) ; <nl> @ @ - 179 , 7 + 179 , 16 @ @ public class Gossiper implements IFailureDetectionEventListener <nl> <nl> public Set < InetAddress > getUnreachableMembers ( ) <nl> { <nl> - return new HashSet < InetAddress > ( unreachableEndpoints _ ) ; <nl> + return unreachableEndpoints _ . keySet ( ) ; <nl> + } <nl> + <nl> + public long getEndpointDowntime ( InetAddress ep ) <nl> + { <nl> + Long downtime = unreachableEndpoints _ . get ( ep ) ; <nl> + if ( downtime ! = null ) <nl> + return System . currentTimeMillis ( ) - downtime ; <nl> + else <nl> + return 0L ; <nl> } <nl> <nl> / * * <nl> @ @ - 353 , 7 + 362 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener <nl> double prob = unreachableEndpoints / ( liveEndpoints + 1 ) ; <nl> double randDbl = random _ . nextDouble ( ) ; <nl> if ( randDbl < prob ) <nl> - sendGossip ( message , unreachableEndpoints _ ) ; <nl> + sendGossip ( message , unreachableEndpoints _ . keySet ( ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 735 , 7 + 744 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener <nl> else <nl> { <nl> liveEndpoints _ . remove ( addr ) ; <nl> - unreachableEndpoints _ . add ( addr ) ; <nl> + unreachableEndpoints _ . put ( addr , System . currentTimeMillis ( ) ) ; <nl> for ( IEndpointStateChangeSubscriber subscriber : subscribers _ ) <nl> subscriber . onDead ( addr , epState ) ; <nl> } <nl> @ @ - 871 , 7 + 880 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener <nl> epState . isAGossiper ( true ) ; <nl> epState . setHasToken ( true ) ; <nl> endpointStateMap _ . put ( ep , epState ) ; <nl> - unreachableEndpoints _ . add ( ep ) ; <nl> + unreachableEndpoints _ . put ( ep , System . currentTimeMillis ( ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / locator / AbstractReplicationStrategy . java b / src / java / org / apache / cassandra / locator / AbstractReplicationStrategy . java <nl> index 7c13068 . . 1a560a0 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / AbstractReplicationStrategy . java <nl> + + + b / src / java / org / apache / cassandra / locator / AbstractReplicationStrategy . java <nl> @ @ - 25 , 6 + 25 , 7 @ @ import java . util . * ; <nl> <nl> import com . google . common . collect . HashMultimap ; <nl> import com . google . common . collect . Multimap ; <nl> + import org . apache . cassandra . gms . Gossiper ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> @ @ - 163 , 6 + 164 , 12 @ @ public abstract class AbstractReplicationStrategy <nl> { <nl> if ( map . containsKey ( ep ) ) <nl> continue ; <nl> + if ( ! StorageProxy . shouldHint ( ep ) ) <nl> + { <nl> + if ( logger . isDebugEnabled ( ) ) <nl> + logger . debug ( " not hinting " + ep + " which has been down " + Gossiper . instance . getEndpointDowntime ( ep ) + " ms " ) ; <nl> + continue ; <nl> + } <nl> <nl> InetAddress destination = map . isEmpty ( ) <nl> ? localAddress <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> index 6b78762 . . ec1f435 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageProxy . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> @ @ - 75 , 6 + 75 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> private static final LatencyTracker rangeStats = new LatencyTracker ( ) ; <nl> private static final LatencyTracker writeStats = new LatencyTracker ( ) ; <nl> private static boolean hintedHandoffEnabled = DatabaseDescriptor . hintedHandoffEnabled ( ) ; <nl> + private static int maxHintWindow = DatabaseDescriptor . getMaxHintWindow ( ) ; <nl> private static final String UNREACHABLE = " UNREACHABLE " ; <nl> <nl> private StorageProxy ( ) { } <nl> @ @ - 182 , 7 + 183 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> } <nl> } <nl> responseHandler . addHintCallback ( hintedMessage , destination ) ; <nl> - <nl> + <nl> Multimap < Message , InetAddress > messages = dcMessages . get ( dc ) ; <nl> <nl> if ( messages = = null ) <nl> @ @ - 190 , 7 + 191 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> messages = HashMultimap . create ( ) ; <nl> dcMessages . put ( dc , messages ) ; <nl> } <nl> - <nl> + <nl> messages . put ( hintedMessage , destination ) ; <nl> } <nl> } <nl> @ @ - 803 , 6 + 804 , 21 @ @ public class StorageProxy implements StorageProxyMBean <nl> return hintedHandoffEnabled ; <nl> } <nl> <nl> + public int getMaxHintWindow ( ) <nl> + { <nl> + return maxHintWindow ; <nl> + } <nl> + <nl> + public void setMaxHintWindow ( int ms ) <nl> + { <nl> + maxHintWindow = ms ; <nl> + } <nl> + <nl> + public static boolean shouldHint ( InetAddress ep ) <nl> + { <nl> + return Gossiper . instance . getEndpointDowntime ( ep ) < = maxHintWindow ; <nl> + } <nl> + <nl> / * * <nl> * Performs the truncate operatoin , which effectively deletes all data from <nl> * the column family cfname <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageProxyMBean . java b / src / java / org / apache / cassandra / service / StorageProxyMBean . java <nl> index 0c63cf2 . . 8adccec 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageProxyMBean . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageProxyMBean . java <nl> @ @ - 40 , 4 + 40 , 6 @ @ public interface StorageProxyMBean <nl> <nl> public boolean getHintedHandoffEnabled ( ) ; <nl> public void setHintedHandoffEnabled ( boolean b ) ; <nl> + public int getMaxHintWindow ( ) ; <nl> + public void setMaxHintWindow ( int ms ) ; <nl> }

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 992a13a . . bfca642 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 1537 , 7 + 1537 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 / / set state back to normal , since the node may have tried to leave , but failed and is now back up 
 tokensToUpdateInMetadata . add ( token ) ; 
 if ( ! isClientMode ) 
 - tokensToUpdateInSystemKeyspace . add ( token ) ; 
 + tokensToUpdateInSystemTable . add ( token ) ; 
 } 
 else if ( tokenMetadata . isRelocating ( token ) & & tokenMetadata . getRelocatingRanges ( ) . get ( token ) . equals ( endpoint ) ) 
 {

NEAREST DIFF:
diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml 
 index 8241c78 . . ca5495d 100644 
 - - - a / conf / cassandra . yaml 
 + + + b / conf / cassandra . yaml 
 @ @ - 31 , 6 + 31 , 10 @ @ auto _ bootstrap : false 
 
 # See http : / / wiki . apache . org / cassandra / HintedHandoff 
 hinted _ handoff _ enabled : true 
 + # this defines the maximum amount of time a dead host will have hints 
 + # generated . After it has been dead this long , hints will be dropped . 
 + # Maximum is approximately 50 days 
 + max _ hint _ window _ in _ ms : 2147483647 
 
 # authentication backend , implementing IAuthenticator ; used to identify users 
 authenticator : org . apache . cassandra . auth . AllowAllAuthenticator 
 diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java 
 index def0a5e . . fd4bca0 100644 
 - - - a / src / java / org / apache / cassandra / config / Config . java 
 + + + b / src / java / org / apache / cassandra / config / Config . java 
 @ @ - 34 , 6 + 34 , 7 @ @ public class Config 
 
 public Boolean auto _ bootstrap = false ; 
 public Boolean hinted _ handoff _ enabled = true ; 
 + public Integer max _ hint _ window _ in _ ms = Integer . MAX _ VALUE ; 
 
 public String [ ] seeds ; 
 public DiskAccessMode disk _ access _ mode = DiskAccessMode . auto ; 
 diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index f1f23f0 . . 972cd5e 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 1079 , 6 + 1079 , 11 @ @ public class DatabaseDescriptor 
 return conf . hinted _ handoff _ enabled ; 
 } 
 
 + public static int getMaxHintWindow ( ) 
 + { 
 + return conf . max _ hint _ window _ in _ ms ; 
 + } 
 + 
 public static AbstractType getValueValidator ( String keyspace , String cf , ByteBuffer column ) 
 { 
 return getCFMetaData ( keyspace , cf ) . getValueValidator ( column ) ; 
 diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java 
 index de863f8 . . 312cf85 100644 
 - - - a / src / java / org / apache / cassandra / gms / Gossiper . java 
 + + + b / src / java / org / apache / cassandra / gms / Gossiper . java 
 @ @ - 128 , 7 + 128 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener 
 private Set < InetAddress > liveEndpoints _ = new ConcurrentSkipListSet < InetAddress > ( inetcomparator ) ; 
 
 / * unreachable member set * / 
 - private Set < InetAddress > unreachableEndpoints _ = new ConcurrentSkipListSet < InetAddress > ( inetcomparator ) ; 
 + private Map < InetAddress , Long > unreachableEndpoints _ = new ConcurrentHashMap < InetAddress , Long > ( ) ; 
 
 / * initial seeds for joining the cluster * / 
 private Set < InetAddress > seeds _ = new ConcurrentSkipListSet < InetAddress > ( inetcomparator ) ; 
 @ @ - 179 , 7 + 179 , 16 @ @ public class Gossiper implements IFailureDetectionEventListener 
 
 public Set < InetAddress > getUnreachableMembers ( ) 
 { 
 - return new HashSet < InetAddress > ( unreachableEndpoints _ ) ; 
 + return unreachableEndpoints _ . keySet ( ) ; 
 + } 
 + 
 + public long getEndpointDowntime ( InetAddress ep ) 
 + { 
 + Long downtime = unreachableEndpoints _ . get ( ep ) ; 
 + if ( downtime ! = null ) 
 + return System . currentTimeMillis ( ) - downtime ; 
 + else 
 + return 0L ; 
 } 
 
 / * * 
 @ @ - 353 , 7 + 362 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener 
 double prob = unreachableEndpoints / ( liveEndpoints + 1 ) ; 
 double randDbl = random _ . nextDouble ( ) ; 
 if ( randDbl < prob ) 
 - sendGossip ( message , unreachableEndpoints _ ) ; 
 + sendGossip ( message , unreachableEndpoints _ . keySet ( ) ) ; 
 } 
 } 
 
 @ @ - 735 , 7 + 744 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener 
 else 
 { 
 liveEndpoints _ . remove ( addr ) ; 
 - unreachableEndpoints _ . add ( addr ) ; 
 + unreachableEndpoints _ . put ( addr , System . currentTimeMillis ( ) ) ; 
 for ( IEndpointStateChangeSubscriber subscriber : subscribers _ ) 
 subscriber . onDead ( addr , epState ) ; 
 } 
 @ @ - 871 , 7 + 880 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener 
 epState . isAGossiper ( true ) ; 
 epState . setHasToken ( true ) ; 
 endpointStateMap _ . put ( ep , epState ) ; 
 - unreachableEndpoints _ . add ( ep ) ; 
 + unreachableEndpoints _ . put ( ep , System . currentTimeMillis ( ) ) ; 
 } 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / locator / AbstractReplicationStrategy . java b / src / java / org / apache / cassandra / locator / AbstractReplicationStrategy . java 
 index 7c13068 . . 1a560a0 100644 
 - - - a / src / java / org / apache / cassandra / locator / AbstractReplicationStrategy . java 
 + + + b / src / java / org / apache / cassandra / locator / AbstractReplicationStrategy . java 
 @ @ - 25 , 6 + 25 , 7 @ @ import java . util . * ; 
 
 import com . google . common . collect . HashMultimap ; 
 import com . google . common . collect . Multimap ; 
 + import org . apache . cassandra . gms . Gossiper ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 @ @ - 163 , 6 + 164 , 12 @ @ public abstract class AbstractReplicationStrategy 
 { 
 if ( map . containsKey ( ep ) ) 
 continue ; 
 + if ( ! StorageProxy . shouldHint ( ep ) ) 
 + { 
 + if ( logger . isDebugEnabled ( ) ) 
 + logger . debug ( " not hinting " + ep + " which has been down " + Gossiper . instance . getEndpointDowntime ( ep ) + " ms " ) ; 
 + continue ; 
 + } 
 
 InetAddress destination = map . isEmpty ( ) 
 ? localAddress 
 diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java 
 index 6b78762 . . ec1f435 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageProxy . java 
 + + + b / src / java / org / apache / cassandra / service / StorageProxy . java 
 @ @ - 75 , 6 + 75 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 private static final LatencyTracker rangeStats = new LatencyTracker ( ) ; 
 private static final LatencyTracker writeStats = new LatencyTracker ( ) ; 
 private static boolean hintedHandoffEnabled = DatabaseDescriptor . hintedHandoffEnabled ( ) ; 
 + private static int maxHintWindow = DatabaseDescriptor . getMaxHintWindow ( ) ; 
 private static final String UNREACHABLE = " UNREACHABLE " ; 
 
 private StorageProxy ( ) { } 
 @ @ - 182 , 7 + 183 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 } 
 } 
 responseHandler . addHintCallback ( hintedMessage , destination ) ; 
 - 
 + 
 Multimap < Message , InetAddress > messages = dcMessages . get ( dc ) ; 
 
 if ( messages = = null ) 
 @ @ - 190 , 7 + 191 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 messages = HashMultimap . create ( ) ; 
 dcMessages . put ( dc , messages ) ; 
 } 
 - 
 + 
 messages . put ( hintedMessage , destination ) ; 
 } 
 } 
 @ @ - 803 , 6 + 804 , 21 @ @ public class StorageProxy implements StorageProxyMBean 
 return hintedHandoffEnabled ; 
 } 
 
 + public int getMaxHintWindow ( ) 
 + { 
 + return maxHintWindow ; 
 + } 
 + 
 + public void setMaxHintWindow ( int ms ) 
 + { 
 + maxHintWindow = ms ; 
 + } 
 + 
 + public static boolean shouldHint ( InetAddress ep ) 
 + { 
 + return Gossiper . instance . getEndpointDowntime ( ep ) < = maxHintWindow ; 
 + } 
 + 
 / * * 
 * Performs the truncate operatoin , which effectively deletes all data from 
 * the column family cfname 
 diff - - git a / src / java / org / apache / cassandra / service / StorageProxyMBean . java b / src / java / org / apache / cassandra / service / StorageProxyMBean . java 
 index 0c63cf2 . . 8adccec 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageProxyMBean . java 
 + + + b / src / java / org / apache / cassandra / service / StorageProxyMBean . java 
 @ @ - 40 , 4 + 40 , 6 @ @ public interface StorageProxyMBean 
 
 public boolean getHintedHandoffEnabled ( ) ; 
 public void setHintedHandoffEnabled ( boolean b ) ; 
 + public int getMaxHintWindow ( ) ; 
 + public void setMaxHintWindow ( int ms ) ; 
 }
