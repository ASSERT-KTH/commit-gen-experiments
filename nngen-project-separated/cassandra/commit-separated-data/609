BLEU SCORE: 0.020244462660665517

TEST MSG: Add curl key fetch and one - line the example ` apt - key adv ` key fetch .
GENERATED MSG: revert incomplete BMT - excision

TEST DIFF (one line): diff - - git a / doc / source / getting _ started / installing . rst b / doc / source / getting _ started / installing . rst <nl> index e96edd7 . . 1a7b8ad 100644 <nl> - - - a / doc / source / getting _ started / installing . rst <nl> + + + b / doc / source / getting _ started / installing . rst <nl> @ @ - 65 , 6 + 65 , 12 @ @ Installation from Debian packages <nl> <nl> echo " deb http : / / www . apache . org / dist / cassandra / debian 36x main " | sudo tee - a / etc / apt / sources . list . d / cassandra . sources . list <nl> <nl> + - Add the Apache Cassandra repository keys : <nl> + <nl> + : : <nl> + <nl> + curl https : / / www . apache . org / dist / cassandra / KEYS | sudo apt - key add - <nl> + <nl> - Update the repositories : <nl> <nl> : : <nl> @ @ - 75 , 14 + 81 , 13 @ @ Installation from Debian packages <nl> <nl> : : <nl> <nl> - GPG error : http : / / www . apache . org 36x InRelease : The following signatures couldn ' t be verified because the public key is not available : NO _ PUBKEY 749D6EEC0353B12C <nl> + GPG error : http : / / www . apache . org 36x InRelease : The following signatures couldn ' t be verified because the public key is not available : NO _ PUBKEY A278B781FE4B2BDA <nl> <nl> - Then add the public key 749D6EEC0353B12C as follows : <nl> + Then add the public key A278B781FE4B2BDA as follows : <nl> <nl> : : <nl> <nl> - gpg - - keyserver pgp . mit . edu - - recv - keys 749D6EEC0353B12C <nl> - gpg - - export - - armor 749D6EEC0353B12C | sudo apt - key add - <nl> + sudo apt - key adv - - keyserver pool . sks - keyservers . net - - recv - key A278B781FE4B2BDA <nl> <nl> and repeat ` ` sudo apt - get update ` ` . The actual key may be different , you get it from the error message itself . For a <nl> full list of Apache contributors public keys , you can refer to ` this link < https : / / www . apache . org / dist / cassandra / KEYS > ` _ _ .
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> index 15f5acb . . c2cf81a 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> @ @ - 25 , 6 + 25 , 7 @ @ import java . io . IOException ; <nl> import java . io . PrintStream ; <nl> import java . lang . management . MemoryUsage ; <nl> import java . net . InetAddress ; <nl> + import java . net . UnknownHostException ; <nl> import java . text . DecimalFormat ; <nl> import java . util . * ; <nl> import java . util . Map . Entry ; <nl> @ @ - 161 , 11 + 162 , 12 @ @ public class NodeCmd <nl> Collection < String > movingNodes = probe . getMovingNodes ( ) ; <nl> Map < String , String > loadMap = probe . getLoadMap ( ) ; <nl> <nl> - outs . printf ( " % - 16s % - 7s % - 8s % - 16s % - 8s % - 44s % n " , " Address " , " Status " , " State " , " Load " , " Owns " , " Token " ) ; <nl> + String format = " % - 16s % - 12s % - 12s % - 7s % - 8s % - 16s % - 8s % - 44s % n " ; <nl> + outs . printf ( format , " Address " , " DC " , " Rack " , " Status " , " State " , " Load " , " Owns " , " Token " ) ; <nl> / / show pre - wrap token twice so you can always read a node ' s range as <nl> / / ( previous line token , current line token ] <nl> if ( sortedTokens . size ( ) > 1 ) <nl> - outs . printf ( " % - 16s % - 7s % - 8s % - 16s % - 8s % - 44s % n " , " " , " " , " " , " " , " " , sortedTokens . get ( sortedTokens . size ( ) - 1 ) ) ; <nl> + outs . printf ( format , " " , " " , " " , " " , " " , " " , " " , sortedTokens . get ( sortedTokens . size ( ) - 1 ) ) ; <nl> <nl> / / Calculate per - token ownership of the ring <nl> Map < Token , Float > ownerships = probe . getOwnership ( ) ; <nl> @ @ - 173 , 6 + 175 , 24 @ @ public class NodeCmd <nl> for ( Token token : sortedTokens ) <nl> { <nl> String primaryEndpoint = tokenToEndpoint . get ( token ) ; <nl> + String dataCenter ; <nl> + try <nl> + { <nl> + dataCenter = probe . getEndpointSnitchInfoProxy ( ) . getDatacenter ( primaryEndpoint ) ; <nl> + } <nl> + catch ( UnknownHostException e ) <nl> + { <nl> + dataCenter = " Unknown " ; <nl> + } <nl> + String rack ; <nl> + try <nl> + { <nl> + rack = probe . getEndpointSnitchInfoProxy ( ) . getRack ( primaryEndpoint ) ; <nl> + } <nl> + catch ( UnknownHostException e ) <nl> + { <nl> + rack = " Unknown " ; <nl> + } <nl> String status = liveNodes . contains ( primaryEndpoint ) <nl> ? " Up " <nl> : deadNodes . contains ( primaryEndpoint ) <nl> @ @ - 192 , 7 + 212 , 7 @ @ public class NodeCmd <nl> ? loadMap . get ( primaryEndpoint ) <nl> : " ? " ; <nl> String owns = new DecimalFormat ( " # # 0 . 00 % " ) . format ( ownerships . get ( token ) ) ; <nl> - outs . printf ( " % - 16s % - 7s % - 8s % - 16s % - 8s % - 44s % n " , primaryEndpoint , status , state , load , owns , token ) ; <nl> + outs . printf ( format , primaryEndpoint , dataCenter , rack , status , state , load , owns , token ) ; <nl> } <nl> } <nl> <nl> @ @ - 236 , 6 + 256 , 10 @ @ public class NodeCmd <nl> double memUsed = ( double ) heapUsage . getUsed ( ) / ( 1024 * 1024 ) ; <nl> double memMax = ( double ) heapUsage . getMax ( ) / ( 1024 * 1024 ) ; <nl> outs . printf ( " % - 17s : % . 2f / % . 2f % n " , " Heap Memory ( MB ) " , memUsed , memMax ) ; <nl> + <nl> + / / Data Center / Rack <nl> + outs . printf ( " % - 17s : % s % n " , " Data Center " , probe . getDataCenter ( ) ) ; <nl> + outs . printf ( " % - 17s : % s % n " , " Rack " , probe . getRack ( ) ) ; <nl> } <nl> <nl> public void printReleaseVersion ( PrintStream outs ) <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> index 6d40708 . . 12cecaf 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> @ @ - 25 , 6 + 25 , 7 @ @ import java . lang . management . MemoryMXBean ; <nl> import java . lang . management . MemoryUsage ; <nl> import java . lang . management . RuntimeMXBean ; <nl> import java . net . InetAddress ; <nl> + import java . net . UnknownHostException ; <nl> import java . nio . ByteBuffer ; <nl> import java . util . * ; <nl> import java . util . Map . Entry ; <nl> @ @ - 47 , 6 + 48 , 7 @ @ import org . apache . cassandra . db . ColumnFamilyStoreMBean ; <nl> import org . apache . cassandra . db . CompactionManager ; <nl> import org . apache . cassandra . db . CompactionManagerMBean ; <nl> import org . apache . cassandra . dht . Token ; <nl> + import org . apache . cassandra . locator . EndpointSnitchInfoMBean ; <nl> import org . apache . cassandra . net . MessagingServiceMBean ; <nl> import org . apache . cassandra . service . StorageServiceMBean ; <nl> import org . apache . cassandra . streaming . StreamingService ; <nl> @ @ - 485 , 6 + 487 , 18 @ @ public class NodeProbe <nl> throw new RuntimeException ( " Error while executing truncate " , e ) ; <nl> } <nl> } <nl> + <nl> + public EndpointSnitchInfoMBean getEndpointSnitchInfoProxy ( ) <nl> + { <nl> + try <nl> + { <nl> + return JMX . newMBeanProxy ( mbeanServerConn , new ObjectName ( " org . apache . cassandra . db : type = EndpointSnitchInfo " ) , EndpointSnitchInfoMBean . class ) ; <nl> + } <nl> + catch ( MalformedObjectNameException e ) <nl> + { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + } <nl> <nl> public MessagingServiceMBean getMsProxy ( ) <nl> { <nl> @ @ - 516 , 6 + 530 , 30 @ @ public class NodeProbe <nl> return cfsProxy ; <nl> } <nl> <nl> + public String getDataCenter ( ) <nl> + { <nl> + try <nl> + { <nl> + return getEndpointSnitchInfoProxy ( ) . getDatacenter ( host ) ; <nl> + } <nl> + catch ( UnknownHostException e ) <nl> + { <nl> + return " Unknown " ; <nl> + } <nl> + } <nl> + <nl> + public String getRack ( ) <nl> + { <nl> + try <nl> + { <nl> + return getEndpointSnitchInfoProxy ( ) . getRack ( host ) ; <nl> + } <nl> + catch ( UnknownHostException e ) <nl> + { <nl> + return " Unknown " ; <nl> + } <nl> + } <nl> + <nl> public List < String > getKeyspaces ( ) <nl> { <nl> return ssProxy . getKeyspaces ( ) ;

TEST DIFF:
diff - - git a / doc / source / getting _ started / installing . rst b / doc / source / getting _ started / installing . rst 
 index e96edd7 . . 1a7b8ad 100644 
 - - - a / doc / source / getting _ started / installing . rst 
 + + + b / doc / source / getting _ started / installing . rst 
 @ @ - 65 , 6 + 65 , 12 @ @ Installation from Debian packages 
 
 echo " deb http : / / www . apache . org / dist / cassandra / debian 36x main " | sudo tee - a / etc / apt / sources . list . d / cassandra . sources . list 
 
 + - Add the Apache Cassandra repository keys : 
 + 
 + : : 
 + 
 + curl https : / / www . apache . org / dist / cassandra / KEYS | sudo apt - key add - 
 + 
 - Update the repositories : 
 
 : : 
 @ @ - 75 , 14 + 81 , 13 @ @ Installation from Debian packages 
 
 : : 
 
 - GPG error : http : / / www . apache . org 36x InRelease : The following signatures couldn ' t be verified because the public key is not available : NO _ PUBKEY 749D6EEC0353B12C 
 + GPG error : http : / / www . apache . org 36x InRelease : The following signatures couldn ' t be verified because the public key is not available : NO _ PUBKEY A278B781FE4B2BDA 
 
 - Then add the public key 749D6EEC0353B12C as follows : 
 + Then add the public key A278B781FE4B2BDA as follows : 
 
 : : 
 
 - gpg - - keyserver pgp . mit . edu - - recv - keys 749D6EEC0353B12C 
 - gpg - - export - - armor 749D6EEC0353B12C | sudo apt - key add - 
 + sudo apt - key adv - - keyserver pool . sks - keyservers . net - - recv - key A278B781FE4B2BDA 
 
 and repeat ` ` sudo apt - get update ` ` . The actual key may be different , you get it from the error message itself . For a 
 full list of Apache contributors public keys , you can refer to ` this link < https : / / www . apache . org / dist / cassandra / KEYS > ` _ _ .

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 index 15f5acb . . c2cf81a 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 @ @ - 25 , 6 + 25 , 7 @ @ import java . io . IOException ; 
 import java . io . PrintStream ; 
 import java . lang . management . MemoryUsage ; 
 import java . net . InetAddress ; 
 + import java . net . UnknownHostException ; 
 import java . text . DecimalFormat ; 
 import java . util . * ; 
 import java . util . Map . Entry ; 
 @ @ - 161 , 11 + 162 , 12 @ @ public class NodeCmd 
 Collection < String > movingNodes = probe . getMovingNodes ( ) ; 
 Map < String , String > loadMap = probe . getLoadMap ( ) ; 
 
 - outs . printf ( " % - 16s % - 7s % - 8s % - 16s % - 8s % - 44s % n " , " Address " , " Status " , " State " , " Load " , " Owns " , " Token " ) ; 
 + String format = " % - 16s % - 12s % - 12s % - 7s % - 8s % - 16s % - 8s % - 44s % n " ; 
 + outs . printf ( format , " Address " , " DC " , " Rack " , " Status " , " State " , " Load " , " Owns " , " Token " ) ; 
 / / show pre - wrap token twice so you can always read a node ' s range as 
 / / ( previous line token , current line token ] 
 if ( sortedTokens . size ( ) > 1 ) 
 - outs . printf ( " % - 16s % - 7s % - 8s % - 16s % - 8s % - 44s % n " , " " , " " , " " , " " , " " , sortedTokens . get ( sortedTokens . size ( ) - 1 ) ) ; 
 + outs . printf ( format , " " , " " , " " , " " , " " , " " , " " , sortedTokens . get ( sortedTokens . size ( ) - 1 ) ) ; 
 
 / / Calculate per - token ownership of the ring 
 Map < Token , Float > ownerships = probe . getOwnership ( ) ; 
 @ @ - 173 , 6 + 175 , 24 @ @ public class NodeCmd 
 for ( Token token : sortedTokens ) 
 { 
 String primaryEndpoint = tokenToEndpoint . get ( token ) ; 
 + String dataCenter ; 
 + try 
 + { 
 + dataCenter = probe . getEndpointSnitchInfoProxy ( ) . getDatacenter ( primaryEndpoint ) ; 
 + } 
 + catch ( UnknownHostException e ) 
 + { 
 + dataCenter = " Unknown " ; 
 + } 
 + String rack ; 
 + try 
 + { 
 + rack = probe . getEndpointSnitchInfoProxy ( ) . getRack ( primaryEndpoint ) ; 
 + } 
 + catch ( UnknownHostException e ) 
 + { 
 + rack = " Unknown " ; 
 + } 
 String status = liveNodes . contains ( primaryEndpoint ) 
 ? " Up " 
 : deadNodes . contains ( primaryEndpoint ) 
 @ @ - 192 , 7 + 212 , 7 @ @ public class NodeCmd 
 ? loadMap . get ( primaryEndpoint ) 
 : " ? " ; 
 String owns = new DecimalFormat ( " # # 0 . 00 % " ) . format ( ownerships . get ( token ) ) ; 
 - outs . printf ( " % - 16s % - 7s % - 8s % - 16s % - 8s % - 44s % n " , primaryEndpoint , status , state , load , owns , token ) ; 
 + outs . printf ( format , primaryEndpoint , dataCenter , rack , status , state , load , owns , token ) ; 
 } 
 } 
 
 @ @ - 236 , 6 + 256 , 10 @ @ public class NodeCmd 
 double memUsed = ( double ) heapUsage . getUsed ( ) / ( 1024 * 1024 ) ; 
 double memMax = ( double ) heapUsage . getMax ( ) / ( 1024 * 1024 ) ; 
 outs . printf ( " % - 17s : % . 2f / % . 2f % n " , " Heap Memory ( MB ) " , memUsed , memMax ) ; 
 + 
 + / / Data Center / Rack 
 + outs . printf ( " % - 17s : % s % n " , " Data Center " , probe . getDataCenter ( ) ) ; 
 + outs . printf ( " % - 17s : % s % n " , " Rack " , probe . getRack ( ) ) ; 
 } 
 
 public void printReleaseVersion ( PrintStream outs ) 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 index 6d40708 . . 12cecaf 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 @ @ - 25 , 6 + 25 , 7 @ @ import java . lang . management . MemoryMXBean ; 
 import java . lang . management . MemoryUsage ; 
 import java . lang . management . RuntimeMXBean ; 
 import java . net . InetAddress ; 
 + import java . net . UnknownHostException ; 
 import java . nio . ByteBuffer ; 
 import java . util . * ; 
 import java . util . Map . Entry ; 
 @ @ - 47 , 6 + 48 , 7 @ @ import org . apache . cassandra . db . ColumnFamilyStoreMBean ; 
 import org . apache . cassandra . db . CompactionManager ; 
 import org . apache . cassandra . db . CompactionManagerMBean ; 
 import org . apache . cassandra . dht . Token ; 
 + import org . apache . cassandra . locator . EndpointSnitchInfoMBean ; 
 import org . apache . cassandra . net . MessagingServiceMBean ; 
 import org . apache . cassandra . service . StorageServiceMBean ; 
 import org . apache . cassandra . streaming . StreamingService ; 
 @ @ - 485 , 6 + 487 , 18 @ @ public class NodeProbe 
 throw new RuntimeException ( " Error while executing truncate " , e ) ; 
 } 
 } 
 + 
 + public EndpointSnitchInfoMBean getEndpointSnitchInfoProxy ( ) 
 + { 
 + try 
 + { 
 + return JMX . newMBeanProxy ( mbeanServerConn , new ObjectName ( " org . apache . cassandra . db : type = EndpointSnitchInfo " ) , EndpointSnitchInfoMBean . class ) ; 
 + } 
 + catch ( MalformedObjectNameException e ) 
 + { 
 + throw new RuntimeException ( e ) ; 
 + } 
 + } 
 
 public MessagingServiceMBean getMsProxy ( ) 
 { 
 @ @ - 516 , 6 + 530 , 30 @ @ public class NodeProbe 
 return cfsProxy ; 
 } 
 
 + public String getDataCenter ( ) 
 + { 
 + try 
 + { 
 + return getEndpointSnitchInfoProxy ( ) . getDatacenter ( host ) ; 
 + } 
 + catch ( UnknownHostException e ) 
 + { 
 + return " Unknown " ; 
 + } 
 + } 
 + 
 + public String getRack ( ) 
 + { 
 + try 
 + { 
 + return getEndpointSnitchInfoProxy ( ) . getRack ( host ) ; 
 + } 
 + catch ( UnknownHostException e ) 
 + { 
 + return " Unknown " ; 
 + } 
 + } 
 + 
 public List < String > getKeyspaces ( ) 
 { 
 return ssProxy . getKeyspaces ( ) ;
