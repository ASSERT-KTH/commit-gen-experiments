BLEU SCORE: 0.002819880908565337

TEST MSG: Track metrics at a keyspace level
GENERATED MSG: make Table . open throw IOError instead of IOException . patch by Rodrigo Peinado ; reviewed by jbellis for CASSANDRA - 756

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index f37eda4 . . 28b5f29 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 2 . 17 <nl> + * Track metrics at a keyspace level ( CASSANDRA - 6539 ) <nl> * Add replace _ address _ first _ boot flag to only replace if not bootstrapped ( CASSANDRA - 7356 ) <nl> * Enable keepalive for native protocol ( CASSANDRA - 7380 ) <nl> * Check internal addresses for seeds ( CASSANDRA - 6523 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / Table . java b / src / java / org / apache / cassandra / db / Table . java <nl> index e6df982 . . 611fd9a 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Table . java <nl> + + + b / src / java / org / apache / cassandra / db / Table . java <nl> @ @ - 42 , 6 + 42 , 7 @ @ import org . apache . cassandra . io . sstable . SSTableReader ; <nl> import org . apache . cassandra . locator . AbstractReplicationStrategy ; <nl> import org . apache . cassandra . service . StorageService ; <nl> import org . apache . cassandra . tracing . Tracing ; <nl> + import org . apache . cassandra . metrics . KeyspaceMetrics ; <nl> <nl> / * * <nl> * It represents a Keyspace . <nl> @ @ - 74 , 6 + 75 , 7 @ @ public class Table <nl> private final ConcurrentMap < UUID , ColumnFamilyStore > columnFamilyStores = new ConcurrentHashMap < UUID , ColumnFamilyStore > ( ) ; <nl> private final Object [ ] indexLocks ; <nl> private volatile AbstractReplicationStrategy replicationStrategy ; <nl> + public final KeyspaceMetrics metric ; <nl> public static final Function < String , Table > tableTransformer = new Function < String , Table > ( ) <nl> { <nl> public Table apply ( String tableName ) <nl> @ @ - 132 , 6 + 134 , 7 @ @ public class Table <nl> { <nl> for ( ColumnFamilyStore cfs : t . getColumnFamilyStores ( ) ) <nl> t . unloadCf ( cfs ) ; <nl> + t . metric . release ( ) ; <nl> } <nl> return t ; <nl> } <nl> @ @ - 271 , 6 + 274 , 7 @ @ public class Table <nl> logger . debug ( " Initializing { } . { } " , name , cfm . cfName ) ; <nl> initCf ( cfm . cfId , cfm . cfName , loadSSTables ) ; <nl> } <nl> + this . metric = new KeyspaceMetrics ( this ) ; <nl> } <nl> <nl> public void createReplicationStrategy ( KSMetaData ksm )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 4e2a031 . . 83d7c58 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ package org . apache . cassandra . db ; <nl> <nl> import java . io . Closeable ; <nl> import java . io . File ; <nl> + import java . io . IOError ; <nl> import java . io . IOException ; <nl> import java . lang . management . ManagementFactory ; <nl> import java . util . * ; <nl> @ @ - 32 , 8 + 33 , 6 @ @ import java . util . regex . Pattern ; <nl> import javax . management . MBeanServer ; <nl> import javax . management . ObjectName ; <nl> <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> import org . apache . commons . collections . IteratorUtils ; <nl> <nl> import com . google . common . base . Predicate ; <nl> @ @ - 50 , 7 + 49 , 6 @ @ import org . apache . cassandra . dht . AbstractBounds ; <nl> import org . apache . cassandra . dht . Bounds ; <nl> import org . apache . cassandra . dht . Range ; <nl> import org . apache . cassandra . dht . Token ; <nl> - import org . apache . cassandra . io . * ; <nl> import org . apache . cassandra . io . sstable . SSTable ; <nl> import org . apache . cassandra . io . sstable . SSTableReader ; <nl> import org . apache . cassandra . io . sstable . SSTableScanner ; <nl> @ @ - 59 , 6 + 57 , 8 @ @ import org . apache . cassandra . io . util . FileUtils ; <nl> import org . apache . cassandra . service . StorageService ; <nl> import org . apache . cassandra . thrift . SliceRange ; <nl> import org . apache . cassandra . utils . * ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> <nl> public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> { <nl> @ @ - 125 , 7 + 125 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> private long rowsCompactedTotalSize = 0L ; <nl> private long rowsCompactedCount = 0L ; <nl> <nl> - ColumnFamilyStore ( String table , String columnFamilyName , boolean isSuper , int indexValue ) throws IOException <nl> + ColumnFamilyStore ( String table , String columnFamilyName , boolean isSuper , int indexValue ) <nl> { <nl> table _ = table ; <nl> columnFamily _ = columnFamilyName ; <nl> @ @ - 151 , 14 + 151 , 28 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> if ( ! new File ( basePath + " - Data . db " ) . exists ( ) ) <nl> { <nl> logger _ . info ( String . format ( " Removing orphan % s " , file . getAbsolutePath ( ) ) ) ; <nl> - FileUtils . deleteWithConfirm ( file ) ; <nl> + try <nl> + { <nl> + FileUtils . deleteWithConfirm ( file ) ; <nl> + } <nl> + catch ( IOException e ) <nl> + { <nl> + throw new IOError ( e ) ; <nl> + } <nl> continue ; <nl> } <nl> } <nl> <nl> if ( ( ( file . length ( ) = = 0 & & ! filename . endsWith ( " - Compacted " ) ) | | ( filename . contains ( " - " + SSTable . TEMPFILE _ MARKER ) ) ) ) <nl> { <nl> - FileUtils . deleteWithConfirm ( file ) ; <nl> + try <nl> + { <nl> + FileUtils . deleteWithConfirm ( file ) ; <nl> + } <nl> + catch ( IOException e ) <nl> + { <nl> + throw new IOError ( e ) ; <nl> + } <nl> continue ; <nl> } <nl> <nl> @ @ - 221 , 7 + 235 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> return 0L ; <nl> } <nl> <nl> - public static ColumnFamilyStore createColumnFamilyStore ( String table , String columnFamily ) throws IOException <nl> + public static ColumnFamilyStore createColumnFamilyStore ( String table , String columnFamily ) <nl> { <nl> / * <nl> * Get all data files associated with old Memtables for this table . <nl> @ @ - 560 , 14 + 574 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> <nl> public Table getTable ( ) <nl> { <nl> - try <nl> - { <nl> - return Table . open ( table _ ) ; <nl> - } <nl> - catch ( IOException e ) <nl> - { <nl> - throw new RuntimeException ( e ) ; <nl> - } <nl> + return Table . open ( table _ ) ; <nl> } <nl> <nl> void markCompacted ( Collection < SSTableReader > sstables ) throws IOException <nl> diff - - git a / src / java / org / apache / cassandra / db / Table . java b / src / java / org / apache / cassandra / db / Table . java <nl> index 4a8721f . . da1aff6 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Table . java <nl> + + + b / src / java / org / apache / cassandra / db / Table . java <nl> @ @ - 85 , 7 + 85 , 7 @ @ public class Table <nl> / / cache application CFs since Range queries ask for them a _ lot _ <nl> private SortedSet < String > applicationColumnFamilies ; <nl> <nl> - public static Table open ( String table ) throws IOException <nl> + public static Table open ( String table ) <nl> { <nl> Table tableInstance = instances . get ( table ) ; <nl> if ( tableInstance = = null ) <nl> @ @ - 229 , 7 + 229 , 7 @ @ public class Table <nl> return list ; <nl> } <nl> <nl> - private Table ( String table ) throws IOException <nl> + private Table ( String table ) <nl> { <nl> name = table ; <nl> waitForCommitLog = DatabaseDescriptor . getCommitLogSync ( ) = = DatabaseDescriptor . CommitLogSync . batch ; <nl> @ @ - 282 , 7 + 282 , 7 @ @ public class Table <nl> } <nl> <nl> / * * adds a cf to internal structures , ends up creating disk files ) . * / <nl> - public void addCf ( String cfName ) throws IOException <nl> + public void addCf ( String cfName ) <nl> { <nl> assert ! columnFamilyStores . containsKey ( cfName ) : cfName ; <nl> columnFamilyStores . put ( cfName , ColumnFamilyStore . createColumnFamilyStore ( name , cfName ) ) ; <nl> @ @ - 430 , 14 + 430 , 7 @ @ public class Table <nl> { <nl> public Table apply ( String tableName ) <nl> { <nl> - try <nl> - { <nl> - return Table . open ( tableName ) ; <nl> - } <nl> - catch ( IOException e ) <nl> - { <nl> - throw new RuntimeException ( e ) ; <nl> - } <nl> + return Table . open ( tableName ) ; <nl> } <nl> } ; <nl> return Iterables . transform ( DatabaseDescriptor . getTables ( ) , transformer ) ; <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTable . java b / src / java / org / apache / cassandra / io / sstable / SSTable . java <nl> index a44a1ba . . 6b20937 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTable . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTable . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ <nl> package org . apache . cassandra . io . sstable ; <nl> <nl> import java . io . File ; <nl> + import java . io . IOError ; <nl> import java . io . IOException ; <nl> import java . util . List ; <nl> import java . util . Arrays ; <nl> @ @ - 122 , 14 + 123 , 21 @ @ public abstract class SSTable <nl> * <nl> * @ return true if the file was deleted <nl> * / <nl> - public static boolean deleteIfCompacted ( String dataFilename ) throws IOException <nl> + public static boolean deleteIfCompacted ( String dataFilename ) <nl> { <nl> if ( new File ( compactedFilename ( dataFilename ) ) . exists ( ) ) <nl> { <nl> - FileUtils . deleteWithConfirm ( new File ( dataFilename ) ) ; <nl> - FileUtils . deleteWithConfirm ( new File ( SSTable . indexFilename ( dataFilename ) ) ) ; <nl> - FileUtils . deleteWithConfirm ( new File ( SSTable . filterFilename ( dataFilename ) ) ) ; <nl> - FileUtils . deleteWithConfirm ( new File ( SSTable . compactedFilename ( dataFilename ) ) ) ; <nl> + try <nl> + { <nl> + FileUtils . deleteWithConfirm ( new File ( dataFilename ) ) ; <nl> + FileUtils . deleteWithConfirm ( new File ( SSTable . indexFilename ( dataFilename ) ) ) ; <nl> + FileUtils . deleteWithConfirm ( new File ( SSTable . filterFilename ( dataFilename ) ) ) ; <nl> + FileUtils . deleteWithConfirm ( new File ( SSTable . compactedFilename ( dataFilename ) ) ) ; <nl> + } <nl> + catch ( IOException e ) <nl> + { <nl> + throw new IOError ( e ) ; <nl> + } <nl> logger . info ( " Deleted " + dataFilename ) ; <nl> return true ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / AntiEntropyService . java b / src / java / org / apache / cassandra / service / AntiEntropyService . java <nl> index 816f53f . . 0d60662 100644 <nl> - - - a / src / java / org / apache / cassandra / service / AntiEntropyService . java <nl> + + + b / src / java / org / apache / cassandra / service / AntiEntropyService . java <nl> @ @ - 358 , 14 + 358 , 7 @ @ public class AntiEntropyService <nl> { <nl> List < DecoratedKey > keys = new ArrayList < DecoratedKey > ( ) ; <nl> ColumnFamilyStore cfs ; <nl> - try <nl> - { <nl> - cfs = Table . open ( cf . left ) . getColumnFamilyStore ( cf . right ) ; <nl> - } <nl> - catch ( IOException e ) <nl> - { <nl> - throw new IOError ( e ) ; <nl> - } <nl> + cfs = Table . open ( cf . left ) . getColumnFamilyStore ( cf . right ) ; <nl> if ( cfs ! = null ) / / TODO test w / valid CF definitions , this if { } shouldn ' t be necessary <nl> { <nl> for ( DecoratedKey sample : cfs . allKeySamples ( ) ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 8393db6 . . a5fd0b6 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 857 , 15 + 857 , 7 @ @ public class StorageService implements IEndPointStateChangeSubscriber , StorageSe <nl> double bytes = 0 ; <nl> for ( String tableName : DatabaseDescriptor . getTables ( ) ) <nl> { <nl> - Table table ; <nl> - try <nl> - { <nl> - table = Table . open ( tableName ) ; <nl> - } <nl> - catch ( IOException e ) <nl> - { <nl> - throw new IOError ( e ) ; <nl> - } <nl> + Table table = Table . open ( tableName ) ; <nl> for ( String cfName : table . getColumnFamilies ( ) ) <nl> { <nl> ColumnFamilyStore cfs = table . getColumnFamilyStore ( cfName ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableUtils . java b / test / unit / org / apache / cassandra / io / sstable / SSTableUtils . java <nl> index 08baf11 . . 80625d7 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableUtils . java <nl> + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableUtils . java <nl> @ @ - 45 , 15 + 45 , 8 @ @ public class SSTableUtils <nl> public static String CFNAME ; <nl> static <nl> { <nl> - try <nl> - { <nl> - TABLENAME = DatabaseDescriptor . getTables ( ) . iterator ( ) . next ( ) ; <nl> - CFNAME = Table . open ( TABLENAME ) . getColumnFamilies ( ) . iterator ( ) . next ( ) ; <nl> - } <nl> - catch ( IOException e ) <nl> - { <nl> - throw new RuntimeException ( e ) ; <nl> - } <nl> + TABLENAME = DatabaseDescriptor . getTables ( ) . iterator ( ) . next ( ) ; <nl> + CFNAME = Table . open ( TABLENAME ) . getColumnFamilies ( ) . iterator ( ) . next ( ) ; <nl> } <nl> <nl> public static File tempSSTableFile ( String tablename , String cfname ) throws IOException

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index f37eda4 . . 28b5f29 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 2 . 17 
 + * Track metrics at a keyspace level ( CASSANDRA - 6539 ) 
 * Add replace _ address _ first _ boot flag to only replace if not bootstrapped ( CASSANDRA - 7356 ) 
 * Enable keepalive for native protocol ( CASSANDRA - 7380 ) 
 * Check internal addresses for seeds ( CASSANDRA - 6523 ) 
 diff - - git a / src / java / org / apache / cassandra / db / Table . java b / src / java / org / apache / cassandra / db / Table . java 
 index e6df982 . . 611fd9a 100644 
 - - - a / src / java / org / apache / cassandra / db / Table . java 
 + + + b / src / java / org / apache / cassandra / db / Table . java 
 @ @ - 42 , 6 + 42 , 7 @ @ import org . apache . cassandra . io . sstable . SSTableReader ; 
 import org . apache . cassandra . locator . AbstractReplicationStrategy ; 
 import org . apache . cassandra . service . StorageService ; 
 import org . apache . cassandra . tracing . Tracing ; 
 + import org . apache . cassandra . metrics . KeyspaceMetrics ; 
 
 / * * 
 * It represents a Keyspace . 
 @ @ - 74 , 6 + 75 , 7 @ @ public class Table 
 private final ConcurrentMap < UUID , ColumnFamilyStore > columnFamilyStores = new ConcurrentHashMap < UUID , ColumnFamilyStore > ( ) ; 
 private final Object [ ] indexLocks ; 
 private volatile AbstractReplicationStrategy replicationStrategy ; 
 + public final KeyspaceMetrics metric ; 
 public static final Function < String , Table > tableTransformer = new Function < String , Table > ( ) 
 { 
 public Table apply ( String tableName ) 
 @ @ - 132 , 6 + 134 , 7 @ @ public class Table 
 { 
 for ( ColumnFamilyStore cfs : t . getColumnFamilyStores ( ) ) 
 t . unloadCf ( cfs ) ; 
 + t . metric . release ( ) ; 
 } 
 return t ; 
 } 
 @ @ - 271 , 6 + 274 , 7 @ @ public class Table 
 logger . debug ( " Initializing { } . { } " , name , cfm . cfName ) ; 
 initCf ( cfm . cfId , cfm . cfName , loadSSTables ) ; 
 } 
 + this . metric = new KeyspaceMetrics ( this ) ; 
 } 
 
 public void createReplicationStrategy ( KSMetaData ksm )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 4e2a031 . . 83d7c58 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 20 , 6 + 20 , 7 @ @ package org . apache . cassandra . db ; 
 
 import java . io . Closeable ; 
 import java . io . File ; 
 + import java . io . IOError ; 
 import java . io . IOException ; 
 import java . lang . management . ManagementFactory ; 
 import java . util . * ; 
 @ @ - 32 , 8 + 33 , 6 @ @ import java . util . regex . Pattern ; 
 import javax . management . MBeanServer ; 
 import javax . management . ObjectName ; 
 
 - import org . slf4j . Logger ; 
 - import org . slf4j . LoggerFactory ; 
 import org . apache . commons . collections . IteratorUtils ; 
 
 import com . google . common . base . Predicate ; 
 @ @ - 50 , 7 + 49 , 6 @ @ import org . apache . cassandra . dht . AbstractBounds ; 
 import org . apache . cassandra . dht . Bounds ; 
 import org . apache . cassandra . dht . Range ; 
 import org . apache . cassandra . dht . Token ; 
 - import org . apache . cassandra . io . * ; 
 import org . apache . cassandra . io . sstable . SSTable ; 
 import org . apache . cassandra . io . sstable . SSTableReader ; 
 import org . apache . cassandra . io . sstable . SSTableScanner ; 
 @ @ - 59 , 6 + 57 , 8 @ @ import org . apache . cassandra . io . util . FileUtils ; 
 import org . apache . cassandra . service . StorageService ; 
 import org . apache . cassandra . thrift . SliceRange ; 
 import org . apache . cassandra . utils . * ; 
 + import org . slf4j . Logger ; 
 + import org . slf4j . LoggerFactory ; 
 
 public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 { 
 @ @ - 125 , 7 + 125 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 private long rowsCompactedTotalSize = 0L ; 
 private long rowsCompactedCount = 0L ; 
 
 - ColumnFamilyStore ( String table , String columnFamilyName , boolean isSuper , int indexValue ) throws IOException 
 + ColumnFamilyStore ( String table , String columnFamilyName , boolean isSuper , int indexValue ) 
 { 
 table _ = table ; 
 columnFamily _ = columnFamilyName ; 
 @ @ - 151 , 14 + 151 , 28 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 if ( ! new File ( basePath + " - Data . db " ) . exists ( ) ) 
 { 
 logger _ . info ( String . format ( " Removing orphan % s " , file . getAbsolutePath ( ) ) ) ; 
 - FileUtils . deleteWithConfirm ( file ) ; 
 + try 
 + { 
 + FileUtils . deleteWithConfirm ( file ) ; 
 + } 
 + catch ( IOException e ) 
 + { 
 + throw new IOError ( e ) ; 
 + } 
 continue ; 
 } 
 } 
 
 if ( ( ( file . length ( ) = = 0 & & ! filename . endsWith ( " - Compacted " ) ) | | ( filename . contains ( " - " + SSTable . TEMPFILE _ MARKER ) ) ) ) 
 { 
 - FileUtils . deleteWithConfirm ( file ) ; 
 + try 
 + { 
 + FileUtils . deleteWithConfirm ( file ) ; 
 + } 
 + catch ( IOException e ) 
 + { 
 + throw new IOError ( e ) ; 
 + } 
 continue ; 
 } 
 
 @ @ - 221 , 7 + 235 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 return 0L ; 
 } 
 
 - public static ColumnFamilyStore createColumnFamilyStore ( String table , String columnFamily ) throws IOException 
 + public static ColumnFamilyStore createColumnFamilyStore ( String table , String columnFamily ) 
 { 
 / * 
 * Get all data files associated with old Memtables for this table . 
 @ @ - 560 , 14 + 574 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 
 public Table getTable ( ) 
 { 
 - try 
 - { 
 - return Table . open ( table _ ) ; 
 - } 
 - catch ( IOException e ) 
 - { 
 - throw new RuntimeException ( e ) ; 
 - } 
 + return Table . open ( table _ ) ; 
 } 
 
 void markCompacted ( Collection < SSTableReader > sstables ) throws IOException 
 diff - - git a / src / java / org / apache / cassandra / db / Table . java b / src / java / org / apache / cassandra / db / Table . java 
 index 4a8721f . . da1aff6 100644 
 - - - a / src / java / org / apache / cassandra / db / Table . java 
 + + + b / src / java / org / apache / cassandra / db / Table . java 
 @ @ - 85 , 7 + 85 , 7 @ @ public class Table 
 / / cache application CFs since Range queries ask for them a _ lot _ 
 private SortedSet < String > applicationColumnFamilies ; 
 
 - public static Table open ( String table ) throws IOException 
 + public static Table open ( String table ) 
 { 
 Table tableInstance = instances . get ( table ) ; 
 if ( tableInstance = = null ) 
 @ @ - 229 , 7 + 229 , 7 @ @ public class Table 
 return list ; 
 } 
 
 - private Table ( String table ) throws IOException 
 + private Table ( String table ) 
 { 
 name = table ; 
 waitForCommitLog = DatabaseDescriptor . getCommitLogSync ( ) = = DatabaseDescriptor . CommitLogSync . batch ; 
 @ @ - 282 , 7 + 282 , 7 @ @ public class Table 
 } 
 
 / * * adds a cf to internal structures , ends up creating disk files ) . * / 
 - public void addCf ( String cfName ) throws IOException 
 + public void addCf ( String cfName ) 
 { 
 assert ! columnFamilyStores . containsKey ( cfName ) : cfName ; 
 columnFamilyStores . put ( cfName , ColumnFamilyStore . createColumnFamilyStore ( name , cfName ) ) ; 
 @ @ - 430 , 14 + 430 , 7 @ @ public class Table 
 { 
 public Table apply ( String tableName ) 
 { 
 - try 
 - { 
 - return Table . open ( tableName ) ; 
 - } 
 - catch ( IOException e ) 
 - { 
 - throw new RuntimeException ( e ) ; 
 - } 
 + return Table . open ( tableName ) ; 
 } 
 } ; 
 return Iterables . transform ( DatabaseDescriptor . getTables ( ) , transformer ) ; 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTable . java b / src / java / org / apache / cassandra / io / sstable / SSTable . java 
 index a44a1ba . . 6b20937 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTable . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTable . java 
 @ @ - 20 , 6 + 20 , 7 @ @ 
 package org . apache . cassandra . io . sstable ; 
 
 import java . io . File ; 
 + import java . io . IOError ; 
 import java . io . IOException ; 
 import java . util . List ; 
 import java . util . Arrays ; 
 @ @ - 122 , 14 + 123 , 21 @ @ public abstract class SSTable 
 * 
 * @ return true if the file was deleted 
 * / 
 - public static boolean deleteIfCompacted ( String dataFilename ) throws IOException 
 + public static boolean deleteIfCompacted ( String dataFilename ) 
 { 
 if ( new File ( compactedFilename ( dataFilename ) ) . exists ( ) ) 
 { 
 - FileUtils . deleteWithConfirm ( new File ( dataFilename ) ) ; 
 - FileUtils . deleteWithConfirm ( new File ( SSTable . indexFilename ( dataFilename ) ) ) ; 
 - FileUtils . deleteWithConfirm ( new File ( SSTable . filterFilename ( dataFilename ) ) ) ; 
 - FileUtils . deleteWithConfirm ( new File ( SSTable . compactedFilename ( dataFilename ) ) ) ; 
 + try 
 + { 
 + FileUtils . deleteWithConfirm ( new File ( dataFilename ) ) ; 
 + FileUtils . deleteWithConfirm ( new File ( SSTable . indexFilename ( dataFilename ) ) ) ; 
 + FileUtils . deleteWithConfirm ( new File ( SSTable . filterFilename ( dataFilename ) ) ) ; 
 + FileUtils . deleteWithConfirm ( new File ( SSTable . compactedFilename ( dataFilename ) ) ) ; 
 + } 
 + catch ( IOException e ) 
 + { 
 + throw new IOError ( e ) ; 
 + } 
 logger . info ( " Deleted " + dataFilename ) ; 
 return true ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / AntiEntropyService . java b / src / java / org / apache / cassandra / service / AntiEntropyService . java 
 index 816f53f . . 0d60662 100644 
 - - - a / src / java / org / apache / cassandra / service / AntiEntropyService . java 
 + + + b / src / java / org / apache / cassandra / service / AntiEntropyService . java 
 @ @ - 358 , 14 + 358 , 7 @ @ public class AntiEntropyService 
 { 
 List < DecoratedKey > keys = new ArrayList < DecoratedKey > ( ) ; 
 ColumnFamilyStore cfs ; 
 - try 
 - { 
 - cfs = Table . open ( cf . left ) . getColumnFamilyStore ( cf . right ) ; 
 - } 
 - catch ( IOException e ) 
 - { 
 - throw new IOError ( e ) ; 
 - } 
 + cfs = Table . open ( cf . left ) . getColumnFamilyStore ( cf . right ) ; 
 if ( cfs ! = null ) / / TODO test w / valid CF definitions , this if { } shouldn ' t be necessary 
 { 
 for ( DecoratedKey sample : cfs . allKeySamples ( ) ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 8393db6 . . a5fd0b6 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 857 , 15 + 857 , 7 @ @ public class StorageService implements IEndPointStateChangeSubscriber , StorageSe 
 double bytes = 0 ; 
 for ( String tableName : DatabaseDescriptor . getTables ( ) ) 
 { 
 - Table table ; 
 - try 
 - { 
 - table = Table . open ( tableName ) ; 
 - } 
 - catch ( IOException e ) 
 - { 
 - throw new IOError ( e ) ; 
 - } 
 + Table table = Table . open ( tableName ) ; 
 for ( String cfName : table . getColumnFamilies ( ) ) 
 { 
 ColumnFamilyStore cfs = table . getColumnFamilyStore ( cfName ) ; 
 diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableUtils . java b / test / unit / org / apache / cassandra / io / sstable / SSTableUtils . java 
 index 08baf11 . . 80625d7 100644 
 - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableUtils . java 
 + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableUtils . java 
 @ @ - 45 , 15 + 45 , 8 @ @ public class SSTableUtils 
 public static String CFNAME ; 
 static 
 { 
 - try 
 - { 
 - TABLENAME = DatabaseDescriptor . getTables ( ) . iterator ( ) . next ( ) ; 
 - CFNAME = Table . open ( TABLENAME ) . getColumnFamilies ( ) . iterator ( ) . next ( ) ; 
 - } 
 - catch ( IOException e ) 
 - { 
 - throw new RuntimeException ( e ) ; 
 - } 
 + TABLENAME = DatabaseDescriptor . getTables ( ) . iterator ( ) . next ( ) ; 
 + CFNAME = Table . open ( TABLENAME ) . getColumnFamilies ( ) . iterator ( ) . next ( ) ; 
 } 
 
 public static File tempSSTableFile ( String tablename , String cfname ) throws IOException
