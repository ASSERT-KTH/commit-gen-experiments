BLEU SCORE: 1.0

TEST MSG: Ninja : update cqlsh completion tests for CASSANDRA - 8844
GENERATED MSG: Ninja : update cqlsh completion tests for CASSANDRA - 8844

TEST DIFF (one line): diff - - git a / pylib / cqlshlib / test / test _ cqlsh _ completion . py b / pylib / cqlshlib / test / test _ cqlsh _ completion . py <nl> index 8485ff0 . . 21eb088 100644 <nl> - - - a / pylib / cqlshlib / test / test _ cqlsh _ completion . py <nl> + + + b / pylib / cqlshlib / test / test _ cqlsh _ completion . py <nl> @ @ - 595 , 7 + 595 , 7 @ @ class TestCqlshCompletion ( CqlshCompletionCase ) : <nl> ' memtable _ flush _ period _ in _ ms ' , <nl> ' read _ repair _ chance ' , ' CLUSTERING ' , <nl> ' COMPACT ' , ' caching ' , ' comment ' , <nl> - ' min _ index _ interval ' , ' speculative _ retry ' ] ) <nl> + ' min _ index _ interval ' , ' speculative _ retry ' , ' cdc ' ] ) <nl> self . trycompletions ( prefix + ' new _ table ( col _ a int PRIMARY KEY ) WITH ' , <nl> choices = [ ' bloom _ filter _ fp _ chance ' , ' compaction ' , <nl> ' compression ' , <nl> @ @ - 605 , 7 + 605 , 7 @ @ class TestCqlshCompletion ( CqlshCompletionCase ) : <nl> ' memtable _ flush _ period _ in _ ms ' , <nl> ' read _ repair _ chance ' , ' CLUSTERING ' , <nl> ' COMPACT ' , ' caching ' , ' comment ' , <nl> - ' min _ index _ interval ' , ' speculative _ retry ' ] ) <nl> + ' min _ index _ interval ' , ' speculative _ retry ' , ' cdc ' ] ) <nl> self . trycompletions ( prefix + ' new _ table ( col _ a int PRIMARY KEY ) WITH bloom _ filter _ fp _ chance ' , <nl> immediate = ' = ' ) <nl> self . trycompletions ( prefix + ' new _ table ( col _ a int PRIMARY KEY ) WITH bloom _ filter _ fp _ chance = ' , <nl> @ @ - 653 , 7 + 653 , 7 @ @ class TestCqlshCompletion ( CqlshCompletionCase ) : <nl> ' memtable _ flush _ period _ in _ ms ' , <nl> ' read _ repair _ chance ' , ' CLUSTERING ' , <nl> ' COMPACT ' , ' caching ' , ' comment ' , <nl> - ' min _ index _ interval ' , ' speculative _ retry ' ] ) <nl> + ' min _ index _ interval ' , ' speculative _ retry ' , ' cdc ' ] ) <nl> self . trycompletions ( prefix + " new _ table ( col _ a int PRIMARY KEY ) WITH compaction = " <nl> + " { ' class ' : ' DateTieredCompactionStrategy ' , ' " , <nl> choices = [ ' base _ time _ seconds ' , ' max _ sstable _ age _ days ' , <nl> @ @ - 669 , 7 + 669 , 6 @ @ class TestCqlshCompletion ( CqlshCompletionCase ) : <nl> ' enabled ' , ' unchecked _ tombstone _ compaction ' , <nl> ' only _ purge _ repaired _ tombstones ' ] ) <nl> <nl> - <nl> def test _ complete _ in _ create _ columnfamily ( self ) : <nl> self . trycompletions ( ' CREATE C ' , choices = [ ' COLUMNFAMILY ' , ' CUSTOM ' ] ) <nl> self . trycompletions ( ' CREATE CO ' , immediate = ' LUMNFAMILY ' )
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / pylib / cqlshlib / test / test _ cqlsh _ completion . py b / pylib / cqlshlib / test / test _ cqlsh _ completion . py 
 index 8485ff0 . . 21eb088 100644 
 - - - a / pylib / cqlshlib / test / test _ cqlsh _ completion . py 
 + + + b / pylib / cqlshlib / test / test _ cqlsh _ completion . py 
 @ @ - 595 , 7 + 595 , 7 @ @ class TestCqlshCompletion ( CqlshCompletionCase ) : 
 ' memtable _ flush _ period _ in _ ms ' , 
 ' read _ repair _ chance ' , ' CLUSTERING ' , 
 ' COMPACT ' , ' caching ' , ' comment ' , 
 - ' min _ index _ interval ' , ' speculative _ retry ' ] ) 
 + ' min _ index _ interval ' , ' speculative _ retry ' , ' cdc ' ] ) 
 self . trycompletions ( prefix + ' new _ table ( col _ a int PRIMARY KEY ) WITH ' , 
 choices = [ ' bloom _ filter _ fp _ chance ' , ' compaction ' , 
 ' compression ' , 
 @ @ - 605 , 7 + 605 , 7 @ @ class TestCqlshCompletion ( CqlshCompletionCase ) : 
 ' memtable _ flush _ period _ in _ ms ' , 
 ' read _ repair _ chance ' , ' CLUSTERING ' , 
 ' COMPACT ' , ' caching ' , ' comment ' , 
 - ' min _ index _ interval ' , ' speculative _ retry ' ] ) 
 + ' min _ index _ interval ' , ' speculative _ retry ' , ' cdc ' ] ) 
 self . trycompletions ( prefix + ' new _ table ( col _ a int PRIMARY KEY ) WITH bloom _ filter _ fp _ chance ' , 
 immediate = ' = ' ) 
 self . trycompletions ( prefix + ' new _ table ( col _ a int PRIMARY KEY ) WITH bloom _ filter _ fp _ chance = ' , 
 @ @ - 653 , 7 + 653 , 7 @ @ class TestCqlshCompletion ( CqlshCompletionCase ) : 
 ' memtable _ flush _ period _ in _ ms ' , 
 ' read _ repair _ chance ' , ' CLUSTERING ' , 
 ' COMPACT ' , ' caching ' , ' comment ' , 
 - ' min _ index _ interval ' , ' speculative _ retry ' ] ) 
 + ' min _ index _ interval ' , ' speculative _ retry ' , ' cdc ' ] ) 
 self . trycompletions ( prefix + " new _ table ( col _ a int PRIMARY KEY ) WITH compaction = " 
 + " { ' class ' : ' DateTieredCompactionStrategy ' , ' " , 
 choices = [ ' base _ time _ seconds ' , ' max _ sstable _ age _ days ' , 
 @ @ - 669 , 7 + 669 , 6 @ @ class TestCqlshCompletion ( CqlshCompletionCase ) : 
 ' enabled ' , ' unchecked _ tombstone _ compaction ' , 
 ' only _ purge _ repaired _ tombstones ' ] ) 
 
 - 
 def test _ complete _ in _ create _ columnfamily ( self ) : 
 self . trycompletions ( ' CREATE C ' , choices = [ ' COLUMNFAMILY ' , ' CUSTOM ' ] ) 
 self . trycompletions ( ' CREATE CO ' , immediate = ' LUMNFAMILY ' )

NEAREST DIFF:
ELIMINATEDSENTENCE
