BLEU SCORE: 0.05522397783539471

TEST MSG: Improve cqlsh waiting for a trace to complete
GENERATED MSG: cqlsh : enable tracing

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c4772a7 . . b8990d9 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 17 , 6 + 17 , 7 @ @ <nl> * Set - Dcassandra . storagedir for all tool shell scripts ( CASSANDRA - 7587 ) <nl> * Don ' t swap max / min col names when mutating sstable metadata ( CASSANDRA - 7596 ) <nl> * ( cqlsh ) Correctly handle paged result sets ( CASSANDRA - 7625 ) <nl> + * ( cqlsh ) Improve waiting for a trace to complete ( CASSANDRA - 7626 ) <nl> Merged from 2 . 0 : <nl> * Fix ReversedType ( DateType ) mapping to native protocol ( CASSANDRA - 7576 ) <nl> * Always merge ranges owned by a single node ( CASSANDRA - 6930 ) <nl> diff - - git a / bin / cqlsh b / bin / cqlsh <nl> index 551ad54 . . ba0c886 100755 <nl> - - - a / bin / cqlsh <nl> + + + b / bin / cqlsh <nl> @ @ - 123 , 7 + 123 , 7 @ @ from cqlshlib . displaying import ( RED , BLUE , ANSI _ RESET , COLUMN _ NAME _ COLORS , <nl> FormattedValue , colorme ) <nl> from cqlshlib . formatting import format _ by _ type , formatter _ for , format _ value _ utype <nl> from cqlshlib . util import trim _ if _ present <nl> - from cqlshlib . tracing import print _ trace _ session <nl> + from cqlshlib . tracing import print _ trace _ session , print _ trace <nl> <nl> HISTORY _ DIR = os . path . expanduser ( os . path . join ( ' ~ ' , ' . cassandra ' ) ) <nl> CONFIG _ FILE = os . path . join ( HISTORY _ DIR , ' cqlshrc ' ) <nl> @ @ - 149 , 6 + 149 , 7 @ @ DEFAULT _ PROTOCOL _ VERSION = 3 <nl> DEFAULT _ TIME _ FORMAT = ' % Y - % m - % d % H : % M : % S % z ' <nl> DEFAULT _ FLOAT _ PRECISION = 5 <nl> DEFAULT _ SELECT _ LIMIT = 10000 <nl> + DEFAULT _ MAX _ TRACE _ WAIT = 10 <nl> <nl> if readline is not None and readline . _ _ doc _ _ is not None and ' libedit ' in readline . _ _ doc _ _ : <nl> DEFAULT _ COMPLETEKEY = ' \ t ' <nl> @ @ - 491 , 6 + 492 , 7 @ @ class Shell ( cmd . Cmd ) : <nl> tracing _ enabled = False , expand _ enabled = False , <nl> display _ time _ format = DEFAULT _ TIME _ FORMAT , <nl> display _ float _ precision = DEFAULT _ FLOAT _ PRECISION , <nl> + max _ trace _ wait = DEFAULT _ MAX _ TRACE _ WAIT , <nl> ssl = False , <nl> single _ statement = None ) : <nl> cmd . Cmd . _ _ init _ _ ( self , completekey = completekey ) <nl> @ @ - 526 , 6 + 528 , 8 @ @ class Shell ( cmd . Cmd ) : <nl> self . color = color <nl> self . display _ time _ format = display _ time _ format <nl> self . display _ float _ precision = display _ float _ precision <nl> + self . max _ trace _ wait = max _ trace _ wait <nl> + self . session . max _ trace _ wait = max _ trace _ wait <nl> if encoding is None : <nl> encoding = locale . getpreferredencoding ( ) <nl> self . encoding = encoding <nl> @ @ - 886 , 8 + 890 , 11 @ @ class Shell ( cmd . Cmd ) : <nl> result = self . perform _ simple _ statement ( stmt , <nl> with _ default _ limit = with _ default _ limit ) <nl> if self . tracing _ enabled : <nl> - time . sleep ( 0 . 5 ) # trace writes are async so we wait a little . <nl> - print _ trace _ session ( self , self . session , stmt . trace . trace _ id ) <nl> + if stmt . trace : <nl> + print _ trace ( self , stmt . trace ) <nl> + else : <nl> + msg = " Statement trace did not complete within % d seconds " % ( self . session . max _ trace _ wait ) <nl> + self . writeresult ( msg , color = RED ) <nl> <nl> return result <nl> <nl> @ @ - 920 , 7 + 927 , 7 @ @ class Shell ( cmd . Cmd ) : <nl> self . decoding _ errors = [ ] <nl> <nl> self . writeresult ( " " ) <nl> - if rows : <nl> + if rows : <nl> rows = list ( rows ) # this may be an iterator if the result is large enough to page <nl> self . print _ static _ result ( rows ) <nl> self . writeresult ( " ( % d rows ) " % len ( rows or [ ] ) ) <nl> @ @ - 1493 , 7 + 1500 , 8 @ @ class Shell ( cmd . Cmd ) : <nl> color = self . color , encoding = self . encoding , stdin = f , <nl> tty = False , use _ conn = self . conn , cqlver = self . cql _ version , <nl> display _ time _ format = self . display _ time _ format , <nl> - display _ float _ precision = self . display _ float _ precision ) <nl> + display _ float _ precision = self . display _ float _ precision , <nl> + max _ trace _ wait = self . max _ trace _ wait ) <nl> subshell . cmdloop ( ) <nl> f . close ( ) <nl> <nl> @ @ - 1788 , 6 + 1796 , 8 @ @ def read _ options ( cmdlineargs , environment ) : <nl> DEFAULT _ TIME _ FORMAT ) <nl> optvalues . float _ precision = option _ with _ default ( configs . getint , ' ui ' , ' float _ precision ' , <nl> DEFAULT _ FLOAT _ PRECISION ) <nl> + optvalues . max _ trace _ wait = option _ with _ default ( configs . getfloat , ' tracing ' , ' max _ trace _ wait ' , <nl> + DEFAULT _ MAX _ TRACE _ WAIT ) <nl> optvalues . debug = False <nl> optvalues . file = None <nl> optvalues . ssl = False <nl> @ @ - 1895 , 6 + 1905 , 7 @ @ def main ( options , hostname , port ) : <nl> keyspace = options . keyspace , <nl> display _ time _ format = options . time _ format , <nl> display _ float _ precision = options . float _ precision , <nl> + max _ trace _ wait = options . max _ trace _ wait , <nl> ssl = options . ssl , <nl> single _ statement = options . execute ) <nl> except KeyboardInterrupt : <nl> diff - - git a / conf / cqlshrc . sample b / conf / cqlshrc . sample <nl> index ad59787 . . 6558ad2 100644 <nl> - - - a / conf / cqlshrc . sample <nl> + + + b / conf / cqlshrc . sample <nl> @ @ - 32 , 6 + 32 , 9 @ @ version = 3 . 1 . 5 <nl> hostname = 127 . 0 . 0 . 1 <nl> port = 9042 <nl> <nl> + [ tracing ] <nl> + max _ trace _ wait = 10 . 0 <nl> + <nl> ; [ ssl ] <nl> ; certfile = ~ / keys / cassandra . cert <nl> ; ; optional - true by default . <nl> diff - - git a / pylib / cqlshlib / tracing . py b / pylib / cqlshlib / tracing . py <nl> index 456ea31 . . 40d22f0 100644 <nl> - - - a / pylib / cqlshlib / tracing . py <nl> + + + b / pylib / cqlshlib / tracing . py <nl> @ @ - 17 , 14 + 17 , 29 @ @ <nl> from cqlshlib . displaying import MAGENTA <nl> from datetime import datetime <nl> import time <nl> - from cassandra . query import QueryTrace <nl> + from cassandra . query import QueryTrace , TraceUnavailable <nl> <nl> <nl> def print _ trace _ session ( shell , session , session _ id ) : <nl> + " " " <nl> + Lookup a trace by session and trace session ID , then print it . <nl> + " " " <nl> trace = QueryTrace ( session _ id , session ) <nl> - rows = fetch _ trace _ session ( trace ) <nl> - if not rows : <nl> + try : <nl> + trace . populate ( ) <nl> + except TraceUnavailable : <nl> shell . printerr ( " Session % s wasn ' t found . " % session _ id ) <nl> + else : <nl> + print _ trace ( shell , trace ) <nl> + <nl> + <nl> + def print _ trace ( shell , trace ) : <nl> + " " " <nl> + Print an already populated cassandra . query . QueryTrace instance . <nl> + " " " <nl> + rows = make _ trace _ rows ( trace ) <nl> + if not rows : <nl> + shell . printerr ( " No rows for session % s found . " % ( trace . trace _ id , ) ) <nl> return <nl> names = [ ' activity ' , ' timestamp ' , ' source ' , ' source _ elapsed ' ] <nl> <nl> @ @ - 33 , 14 + 48 , 13 @ @ def print _ trace _ session ( shell , session , session _ id ) : <nl> <nl> shell . writeresult ( ' ' ) <nl> shell . writeresult ( ' Tracing session : ' , color = MAGENTA , newline = False ) <nl> - shell . writeresult ( session _ id ) <nl> + shell . writeresult ( trace . trace _ id ) <nl> shell . writeresult ( ' ' ) <nl> shell . print _ formatted _ result ( formatted _ names , formatted _ values ) <nl> shell . writeresult ( ' ' ) <nl> <nl> <nl> - def fetch _ trace _ session ( trace ) : <nl> - trace . populate ( ) <nl> + def make _ trace _ rows ( trace ) : <nl> if not trace . events : <nl> return [ ] <nl> <nl> @ @ - 51 , 7 + 65 , 7 @ @ def fetch _ trace _ session ( trace ) : <nl> rows . append ( [ " % s [ % s ] " % ( event . description , event . thread _ name ) , <nl> str ( datetime _ from _ utc _ to _ local ( event . datetime ) ) , <nl> event . source , <nl> - event . source _ elapsed . microseconds ] ) <nl> + event . source _ elapsed . microseconds if event . source _ elapsed else " - - " ] ) <nl> # append footer row ( from sessions table ) . <nl> if trace . duration : <nl> finished _ at = ( datetime _ from _ utc _ to _ local ( trace . started _ at ) + trace . duration ) <nl> @ @ - 67 , 4 + 81 , 3 @ @ def datetime _ from _ utc _ to _ local ( utc _ datetime ) : <nl> now _ timestamp = time . time ( ) <nl> offset = datetime . fromtimestamp ( now _ timestamp ) - datetime . utcfromtimestamp ( now _ timestamp ) <nl> return utc _ datetime + offset <nl> -
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> index fcbd5cb . . 5f22109 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> @ @ - 479 , 7 + 479 , 7 @ @ public class LeveledManifest <nl> candidates . addAll ( overlapping ( candidates , generations [ 1 ] ) ) ; <nl> } <nl> <nl> - return candidates ; <nl> + return candidates . size ( ) > 1 ? candidates : Collections . < SSTableReader > emptyList ( ) ; <nl> } <nl> <nl> / / for non - L0 compactions , pick up where we left off last time

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c4772a7 . . b8990d9 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 17 , 6 + 17 , 7 @ @ 
 * Set - Dcassandra . storagedir for all tool shell scripts ( CASSANDRA - 7587 ) 
 * Don ' t swap max / min col names when mutating sstable metadata ( CASSANDRA - 7596 ) 
 * ( cqlsh ) Correctly handle paged result sets ( CASSANDRA - 7625 ) 
 + * ( cqlsh ) Improve waiting for a trace to complete ( CASSANDRA - 7626 ) 
 Merged from 2 . 0 : 
 * Fix ReversedType ( DateType ) mapping to native protocol ( CASSANDRA - 7576 ) 
 * Always merge ranges owned by a single node ( CASSANDRA - 6930 ) 
 diff - - git a / bin / cqlsh b / bin / cqlsh 
 index 551ad54 . . ba0c886 100755 
 - - - a / bin / cqlsh 
 + + + b / bin / cqlsh 
 @ @ - 123 , 7 + 123 , 7 @ @ from cqlshlib . displaying import ( RED , BLUE , ANSI _ RESET , COLUMN _ NAME _ COLORS , 
 FormattedValue , colorme ) 
 from cqlshlib . formatting import format _ by _ type , formatter _ for , format _ value _ utype 
 from cqlshlib . util import trim _ if _ present 
 - from cqlshlib . tracing import print _ trace _ session 
 + from cqlshlib . tracing import print _ trace _ session , print _ trace 
 
 HISTORY _ DIR = os . path . expanduser ( os . path . join ( ' ~ ' , ' . cassandra ' ) ) 
 CONFIG _ FILE = os . path . join ( HISTORY _ DIR , ' cqlshrc ' ) 
 @ @ - 149 , 6 + 149 , 7 @ @ DEFAULT _ PROTOCOL _ VERSION = 3 
 DEFAULT _ TIME _ FORMAT = ' % Y - % m - % d % H : % M : % S % z ' 
 DEFAULT _ FLOAT _ PRECISION = 5 
 DEFAULT _ SELECT _ LIMIT = 10000 
 + DEFAULT _ MAX _ TRACE _ WAIT = 10 
 
 if readline is not None and readline . _ _ doc _ _ is not None and ' libedit ' in readline . _ _ doc _ _ : 
 DEFAULT _ COMPLETEKEY = ' \ t ' 
 @ @ - 491 , 6 + 492 , 7 @ @ class Shell ( cmd . Cmd ) : 
 tracing _ enabled = False , expand _ enabled = False , 
 display _ time _ format = DEFAULT _ TIME _ FORMAT , 
 display _ float _ precision = DEFAULT _ FLOAT _ PRECISION , 
 + max _ trace _ wait = DEFAULT _ MAX _ TRACE _ WAIT , 
 ssl = False , 
 single _ statement = None ) : 
 cmd . Cmd . _ _ init _ _ ( self , completekey = completekey ) 
 @ @ - 526 , 6 + 528 , 8 @ @ class Shell ( cmd . Cmd ) : 
 self . color = color 
 self . display _ time _ format = display _ time _ format 
 self . display _ float _ precision = display _ float _ precision 
 + self . max _ trace _ wait = max _ trace _ wait 
 + self . session . max _ trace _ wait = max _ trace _ wait 
 if encoding is None : 
 encoding = locale . getpreferredencoding ( ) 
 self . encoding = encoding 
 @ @ - 886 , 8 + 890 , 11 @ @ class Shell ( cmd . Cmd ) : 
 result = self . perform _ simple _ statement ( stmt , 
 with _ default _ limit = with _ default _ limit ) 
 if self . tracing _ enabled : 
 - time . sleep ( 0 . 5 ) # trace writes are async so we wait a little . 
 - print _ trace _ session ( self , self . session , stmt . trace . trace _ id ) 
 + if stmt . trace : 
 + print _ trace ( self , stmt . trace ) 
 + else : 
 + msg = " Statement trace did not complete within % d seconds " % ( self . session . max _ trace _ wait ) 
 + self . writeresult ( msg , color = RED ) 
 
 return result 
 
 @ @ - 920 , 7 + 927 , 7 @ @ class Shell ( cmd . Cmd ) : 
 self . decoding _ errors = [ ] 
 
 self . writeresult ( " " ) 
 - if rows : 
 + if rows : 
 rows = list ( rows ) # this may be an iterator if the result is large enough to page 
 self . print _ static _ result ( rows ) 
 self . writeresult ( " ( % d rows ) " % len ( rows or [ ] ) ) 
 @ @ - 1493 , 7 + 1500 , 8 @ @ class Shell ( cmd . Cmd ) : 
 color = self . color , encoding = self . encoding , stdin = f , 
 tty = False , use _ conn = self . conn , cqlver = self . cql _ version , 
 display _ time _ format = self . display _ time _ format , 
 - display _ float _ precision = self . display _ float _ precision ) 
 + display _ float _ precision = self . display _ float _ precision , 
 + max _ trace _ wait = self . max _ trace _ wait ) 
 subshell . cmdloop ( ) 
 f . close ( ) 
 
 @ @ - 1788 , 6 + 1796 , 8 @ @ def read _ options ( cmdlineargs , environment ) : 
 DEFAULT _ TIME _ FORMAT ) 
 optvalues . float _ precision = option _ with _ default ( configs . getint , ' ui ' , ' float _ precision ' , 
 DEFAULT _ FLOAT _ PRECISION ) 
 + optvalues . max _ trace _ wait = option _ with _ default ( configs . getfloat , ' tracing ' , ' max _ trace _ wait ' , 
 + DEFAULT _ MAX _ TRACE _ WAIT ) 
 optvalues . debug = False 
 optvalues . file = None 
 optvalues . ssl = False 
 @ @ - 1895 , 6 + 1905 , 7 @ @ def main ( options , hostname , port ) : 
 keyspace = options . keyspace , 
 display _ time _ format = options . time _ format , 
 display _ float _ precision = options . float _ precision , 
 + max _ trace _ wait = options . max _ trace _ wait , 
 ssl = options . ssl , 
 single _ statement = options . execute ) 
 except KeyboardInterrupt : 
 diff - - git a / conf / cqlshrc . sample b / conf / cqlshrc . sample 
 index ad59787 . . 6558ad2 100644 
 - - - a / conf / cqlshrc . sample 
 + + + b / conf / cqlshrc . sample 
 @ @ - 32 , 6 + 32 , 9 @ @ version = 3 . 1 . 5 
 hostname = 127 . 0 . 0 . 1 
 port = 9042 
 
 + [ tracing ] 
 + max _ trace _ wait = 10 . 0 
 + 
 ; [ ssl ] 
 ; certfile = ~ / keys / cassandra . cert 
 ; ; optional - true by default . 
 diff - - git a / pylib / cqlshlib / tracing . py b / pylib / cqlshlib / tracing . py 
 index 456ea31 . . 40d22f0 100644 
 - - - a / pylib / cqlshlib / tracing . py 
 + + + b / pylib / cqlshlib / tracing . py 
 @ @ - 17 , 14 + 17 , 29 @ @ 
 from cqlshlib . displaying import MAGENTA 
 from datetime import datetime 
 import time 
 - from cassandra . query import QueryTrace 
 + from cassandra . query import QueryTrace , TraceUnavailable 
 
 
 def print _ trace _ session ( shell , session , session _ id ) : 
 + " " " 
 + Lookup a trace by session and trace session ID , then print it . 
 + " " " 
 trace = QueryTrace ( session _ id , session ) 
 - rows = fetch _ trace _ session ( trace ) 
 - if not rows : 
 + try : 
 + trace . populate ( ) 
 + except TraceUnavailable : 
 shell . printerr ( " Session % s wasn ' t found . " % session _ id ) 
 + else : 
 + print _ trace ( shell , trace ) 
 + 
 + 
 + def print _ trace ( shell , trace ) : 
 + " " " 
 + Print an already populated cassandra . query . QueryTrace instance . 
 + " " " 
 + rows = make _ trace _ rows ( trace ) 
 + if not rows : 
 + shell . printerr ( " No rows for session % s found . " % ( trace . trace _ id , ) ) 
 return 
 names = [ ' activity ' , ' timestamp ' , ' source ' , ' source _ elapsed ' ] 
 
 @ @ - 33 , 14 + 48 , 13 @ @ def print _ trace _ session ( shell , session , session _ id ) : 
 
 shell . writeresult ( ' ' ) 
 shell . writeresult ( ' Tracing session : ' , color = MAGENTA , newline = False ) 
 - shell . writeresult ( session _ id ) 
 + shell . writeresult ( trace . trace _ id ) 
 shell . writeresult ( ' ' ) 
 shell . print _ formatted _ result ( formatted _ names , formatted _ values ) 
 shell . writeresult ( ' ' ) 
 
 
 - def fetch _ trace _ session ( trace ) : 
 - trace . populate ( ) 
 + def make _ trace _ rows ( trace ) : 
 if not trace . events : 
 return [ ] 
 
 @ @ - 51 , 7 + 65 , 7 @ @ def fetch _ trace _ session ( trace ) : 
 rows . append ( [ " % s [ % s ] " % ( event . description , event . thread _ name ) , 
 str ( datetime _ from _ utc _ to _ local ( event . datetime ) ) , 
 event . source , 
 - event . source _ elapsed . microseconds ] ) 
 + event . source _ elapsed . microseconds if event . source _ elapsed else " - - " ] ) 
 # append footer row ( from sessions table ) . 
 if trace . duration : 
 finished _ at = ( datetime _ from _ utc _ to _ local ( trace . started _ at ) + trace . duration ) 
 @ @ - 67 , 4 + 81 , 3 @ @ def datetime _ from _ utc _ to _ local ( utc _ datetime ) : 
 now _ timestamp = time . time ( ) 
 offset = datetime . fromtimestamp ( now _ timestamp ) - datetime . utcfromtimestamp ( now _ timestamp ) 
 return utc _ datetime + offset 
 -

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 index fcbd5cb . . 5f22109 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 @ @ - 479 , 7 + 479 , 7 @ @ public class LeveledManifest 
 candidates . addAll ( overlapping ( candidates , generations [ 1 ] ) ) ; 
 } 
 
 - return candidates ; 
 + return candidates . size ( ) > 1 ? candidates : Collections . < SSTableReader > emptyList ( ) ; 
 } 
 
 / / for non - L0 compactions , pick up where we left off last time
