BLEU SCORE: 0.03283637368030199

TEST MSG: use standard utf - 8 charset constants
GENERATED MSG: handle Compression . NONE in CassandraServer

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / tools / JsonTransformer . java b / src / java / org / apache / cassandra / tools / JsonTransformer . java <nl> index 5747089 . . 8e81121 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / JsonTransformer . java <nl> + + + b / src / java / org / apache / cassandra / tools / JsonTransformer . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import java . io . IOException ; <nl> import java . io . OutputStream ; <nl> import java . io . OutputStreamWriter ; <nl> import java . nio . ByteBuffer ; <nl> + import java . nio . charset . StandardCharsets ; <nl> import java . time . Instant ; <nl> import java . util . List ; <nl> import java . util . concurrent . TimeUnit ; <nl> @ @ - 71 , 7 + 72 , 7 @ @ public final class JsonTransformer <nl> public static void toJson ( ISSTableScanner currentScanner , Stream < UnfilteredRowIterator > partitions , boolean rawTime , CFMetaData metadata , OutputStream out ) <nl> throws IOException <nl> { <nl> - try ( JsonGenerator json = jsonFactory . createJsonGenerator ( new OutputStreamWriter ( out , " UTF - 8 " ) ) ) <nl> + try ( JsonGenerator json = jsonFactory . createJsonGenerator ( new OutputStreamWriter ( out , StandardCharsets . UTF _ 8 ) ) ) <nl> { <nl> JsonTransformer transformer = new JsonTransformer ( json , currentScanner , rawTime , metadata ) ; <nl> json . writeStartArray ( ) ; <nl> @ @ - 82 , 7 + 83 , 7 @ @ public final class JsonTransformer <nl> <nl> public static void keysToJson ( ISSTableScanner currentScanner , Stream < DecoratedKey > keys , boolean rawTime , CFMetaData metadata , OutputStream out ) throws IOException <nl> { <nl> - try ( JsonGenerator json = jsonFactory . createJsonGenerator ( new OutputStreamWriter ( out , " UTF - 8 " ) ) ) <nl> + try ( JsonGenerator json = jsonFactory . createJsonGenerator ( new OutputStreamWriter ( out , StandardCharsets . UTF _ 8 ) ) ) <nl> { <nl> JsonTransformer transformer = new JsonTransformer ( json , currentScanner , rawTime , metadata ) ; <nl> json . writeStartArray ( ) ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / MeteredFlusher . java b / src / java / org / apache / cassandra / db / MeteredFlusher . java <nl> index 68230c3 . . 6abb540 100644 <nl> - - - a / src / java / org / apache / cassandra / db / MeteredFlusher . java <nl> + + + b / src / java / org / apache / cassandra / db / MeteredFlusher . java <nl> @ @ - 87 , 7 + 87 , 7 @ @ class MeteredFlusher implements Runnable <nl> } <nl> finally <nl> { <nl> - logger . debug ( " memtable memory usage is { } bytes with { } live " , liveBytes + flushingBytes , liveBytes ) ; <nl> + logger . trace ( " memtable memory usage is { } bytes with { } live " , liveBytes + flushingBytes , liveBytes ) ; <nl> } <nl> } <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / tools / JsonTransformer . java b / src / java / org / apache / cassandra / tools / JsonTransformer . java 
 index 5747089 . . 8e81121 100644 
 - - - a / src / java / org / apache / cassandra / tools / JsonTransformer . java 
 + + + b / src / java / org / apache / cassandra / tools / JsonTransformer . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import java . io . IOException ; 
 import java . io . OutputStream ; 
 import java . io . OutputStreamWriter ; 
 import java . nio . ByteBuffer ; 
 + import java . nio . charset . StandardCharsets ; 
 import java . time . Instant ; 
 import java . util . List ; 
 import java . util . concurrent . TimeUnit ; 
 @ @ - 71 , 7 + 72 , 7 @ @ public final class JsonTransformer 
 public static void toJson ( ISSTableScanner currentScanner , Stream < UnfilteredRowIterator > partitions , boolean rawTime , CFMetaData metadata , OutputStream out ) 
 throws IOException 
 { 
 - try ( JsonGenerator json = jsonFactory . createJsonGenerator ( new OutputStreamWriter ( out , " UTF - 8 " ) ) ) 
 + try ( JsonGenerator json = jsonFactory . createJsonGenerator ( new OutputStreamWriter ( out , StandardCharsets . UTF _ 8 ) ) ) 
 { 
 JsonTransformer transformer = new JsonTransformer ( json , currentScanner , rawTime , metadata ) ; 
 json . writeStartArray ( ) ; 
 @ @ - 82 , 7 + 83 , 7 @ @ public final class JsonTransformer 
 
 public static void keysToJson ( ISSTableScanner currentScanner , Stream < DecoratedKey > keys , boolean rawTime , CFMetaData metadata , OutputStream out ) throws IOException 
 { 
 - try ( JsonGenerator json = jsonFactory . createJsonGenerator ( new OutputStreamWriter ( out , " UTF - 8 " ) ) ) 
 + try ( JsonGenerator json = jsonFactory . createJsonGenerator ( new OutputStreamWriter ( out , StandardCharsets . UTF _ 8 ) ) ) 
 { 
 JsonTransformer transformer = new JsonTransformer ( json , currentScanner , rawTime , metadata ) ; 
 json . writeStartArray ( ) ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / MeteredFlusher . java b / src / java / org / apache / cassandra / db / MeteredFlusher . java 
 index 68230c3 . . 6abb540 100644 
 - - - a / src / java / org / apache / cassandra / db / MeteredFlusher . java 
 + + + b / src / java / org / apache / cassandra / db / MeteredFlusher . java 
 @ @ - 87 , 7 + 87 , 7 @ @ class MeteredFlusher implements Runnable 
 } 
 finally 
 { 
 - logger . debug ( " memtable memory usage is { } bytes with { } live " , liveBytes + flushingBytes , liveBytes ) ; 
 + logger . trace ( " memtable memory usage is { } bytes with { } live " , liveBytes + flushingBytes , liveBytes ) ; 
 } 
 } 

