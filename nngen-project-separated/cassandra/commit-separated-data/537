BLEU SCORE: 0.028398387225677897

TEST MSG: Make hint delivery async so MV hint is deferred on failure to acquire lock
GENERATED MSG: Mutations do not block for completion under view lock contention

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / hints / Hint . java b / src / java / org / apache / cassandra / hints / Hint . java <nl> index cbb5e74 . . 17fbf5d 100644 <nl> - - - a / src / java / org / apache / cassandra / hints / Hint . java <nl> + + + b / src / java / org / apache / cassandra / hints / Hint . java <nl> @ @ - 19 , 8 + 19 , 12 @ @ package org . apache . cassandra . hints ; <nl> <nl> import java . io . IOException ; <nl> import java . util . * ; <nl> + import java . util . concurrent . CompletableFuture ; <nl> + import java . util . concurrent . ExecutionException ; <nl> import java . util . concurrent . TimeUnit ; <nl> <nl> + import com . google . common . base . Throwables ; <nl> + <nl> import org . apache . cassandra . db . * ; <nl> import org . apache . cassandra . io . IVersionedSerializer ; <nl> import org . apache . cassandra . io . util . DataInputPlus ; <nl> @ @ - 68 , 7 + 72 , 7 @ @ public final class Hint <nl> return new Hint ( mutation , creationTime , mutation . smallestGCGS ( ) ) ; <nl> } <nl> <nl> - / * * <nl> + / * <nl> * @ param mutation the hinted mutation <nl> * @ param creationTime time of this hint ' s creation ( in milliseconds since epoch ) <nl> * @ param gcgs the smallest gcgs of all tables involved at the time of hint creation ( in seconds ) <nl> @ @ - 81 , 19 + 85 , 33 @ @ public final class Hint <nl> / * * <nl> * Applies the contained mutation unless it ' s expired , filtering out any updates for truncated tables <nl> * / <nl> - void apply ( ) <nl> + CompletableFuture < ? > applyFuture ( ) <nl> { <nl> - if ( ! isLive ( ) ) <nl> - return ; <nl> + if ( isLive ( ) ) <nl> + { <nl> + / / filter out partition update for table that have been truncated since hint ' s creation <nl> + Mutation filtered = mutation ; <nl> + for ( UUID id : mutation . getColumnFamilyIds ( ) ) <nl> + if ( creationTime < = SystemKeyspace . getTruncatedAt ( id ) ) <nl> + filtered = filtered . without ( id ) ; <nl> <nl> - / / filter out partition update for table that have been truncated since hint ' s creation <nl> - Mutation filtered = mutation ; <nl> - for ( UUID id : mutation . getColumnFamilyIds ( ) ) <nl> - if ( creationTime < = SystemKeyspace . getTruncatedAt ( id ) ) <nl> - filtered = filtered . without ( id ) ; <nl> + if ( ! filtered . isEmpty ( ) ) <nl> + return filtered . applyFuture ( ) ; <nl> + } <nl> + <nl> + return CompletableFuture . completedFuture ( null ) ; <nl> + } <nl> <nl> - if ( ! filtered . isEmpty ( ) ) <nl> - filtered . apply ( ) ; <nl> + void apply ( ) <nl> + { <nl> + try <nl> + { <nl> + applyFuture ( ) . get ( ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + throw Throwables . propagate ( e . getCause ( ) ) ; <nl> + } <nl> } <nl> <nl> / * * <nl> diff - - git a / src / java / org / apache / cassandra / hints / HintVerbHandler . java b / src / java / org / apache / cassandra / hints / HintVerbHandler . java <nl> index d8838a9 . . abcd1f9 100644 <nl> - - - a / src / java / org / apache / cassandra / hints / HintVerbHandler . java <nl> + + + b / src / java / org / apache / cassandra / hints / HintVerbHandler . java <nl> @ @ - 88 , 10 + 88 , 8 @ @ public final class HintVerbHandler implements IVerbHandler < HintMessage > <nl> else <nl> { <nl> / / the common path - the node is both the destination and a valid replica for the hint . <nl> - hint . apply ( ) ; <nl> + hint . applyFuture ( ) . thenAccept ( o - > reply ( id , message . from ) ) . exceptionally ( e - > { logger . debug ( " Failed to apply hint " , e ) ; return null ; } ) ; <nl> } <nl> - <nl> - reply ( id , message . from ) ; <nl> } <nl> <nl> private static void reply ( int id , InetAddress to )
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / hints / Hint . java b / src / java / org / apache / cassandra / hints / Hint . java 
 index cbb5e74 . . 17fbf5d 100644 
 - - - a / src / java / org / apache / cassandra / hints / Hint . java 
 + + + b / src / java / org / apache / cassandra / hints / Hint . java 
 @ @ - 19 , 8 + 19 , 12 @ @ package org . apache . cassandra . hints ; 
 
 import java . io . IOException ; 
 import java . util . * ; 
 + import java . util . concurrent . CompletableFuture ; 
 + import java . util . concurrent . ExecutionException ; 
 import java . util . concurrent . TimeUnit ; 
 
 + import com . google . common . base . Throwables ; 
 + 
 import org . apache . cassandra . db . * ; 
 import org . apache . cassandra . io . IVersionedSerializer ; 
 import org . apache . cassandra . io . util . DataInputPlus ; 
 @ @ - 68 , 7 + 72 , 7 @ @ public final class Hint 
 return new Hint ( mutation , creationTime , mutation . smallestGCGS ( ) ) ; 
 } 
 
 - / * * 
 + / * 
 * @ param mutation the hinted mutation 
 * @ param creationTime time of this hint ' s creation ( in milliseconds since epoch ) 
 * @ param gcgs the smallest gcgs of all tables involved at the time of hint creation ( in seconds ) 
 @ @ - 81 , 19 + 85 , 33 @ @ public final class Hint 
 / * * 
 * Applies the contained mutation unless it ' s expired , filtering out any updates for truncated tables 
 * / 
 - void apply ( ) 
 + CompletableFuture < ? > applyFuture ( ) 
 { 
 - if ( ! isLive ( ) ) 
 - return ; 
 + if ( isLive ( ) ) 
 + { 
 + / / filter out partition update for table that have been truncated since hint ' s creation 
 + Mutation filtered = mutation ; 
 + for ( UUID id : mutation . getColumnFamilyIds ( ) ) 
 + if ( creationTime < = SystemKeyspace . getTruncatedAt ( id ) ) 
 + filtered = filtered . without ( id ) ; 
 
 - / / filter out partition update for table that have been truncated since hint ' s creation 
 - Mutation filtered = mutation ; 
 - for ( UUID id : mutation . getColumnFamilyIds ( ) ) 
 - if ( creationTime < = SystemKeyspace . getTruncatedAt ( id ) ) 
 - filtered = filtered . without ( id ) ; 
 + if ( ! filtered . isEmpty ( ) ) 
 + return filtered . applyFuture ( ) ; 
 + } 
 + 
 + return CompletableFuture . completedFuture ( null ) ; 
 + } 
 
 - if ( ! filtered . isEmpty ( ) ) 
 - filtered . apply ( ) ; 
 + void apply ( ) 
 + { 
 + try 
 + { 
 + applyFuture ( ) . get ( ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + throw Throwables . propagate ( e . getCause ( ) ) ; 
 + } 
 } 
 
 / * * 
 diff - - git a / src / java / org / apache / cassandra / hints / HintVerbHandler . java b / src / java / org / apache / cassandra / hints / HintVerbHandler . java 
 index d8838a9 . . abcd1f9 100644 
 - - - a / src / java / org / apache / cassandra / hints / HintVerbHandler . java 
 + + + b / src / java / org / apache / cassandra / hints / HintVerbHandler . java 
 @ @ - 88 , 10 + 88 , 8 @ @ public final class HintVerbHandler implements IVerbHandler < HintMessage > 
 else 
 { 
 / / the common path - the node is both the destination and a valid replica for the hint . 
 - hint . apply ( ) ; 
 + hint . applyFuture ( ) . thenAccept ( o - > reply ( id , message . from ) ) . exceptionally ( e - > { logger . debug ( " Failed to apply hint " , e ) ; return null ; } ) ; 
 } 
 - 
 - reply ( id , message . from ) ; 
 } 
 
 private static void reply ( int id , InetAddress to )

NEAREST DIFF:
ELIMINATEDSENTENCE
