BLEU SCORE: 0.010211566521809648

TEST MSG: Fix AntiCompactionTest . antiCompactionSizeTest
GENERATED MSG: Followup to CASSANDRA - 6916 - fix bug in cleanup and add unit test .

TEST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / db / compaction / AntiCompactionTest . java b / test / unit / org / apache / cassandra / db / compaction / AntiCompactionTest . java <nl> index b85c5ec . . 73baeeb 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / compaction / AntiCompactionTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / compaction / AntiCompactionTest . java <nl> @ @ - 149 , 10 + 149 , 15 @ @ public class AntiCompactionTest <nl> CompactionManager . instance . performAnticompaction ( cfs , Arrays . asList ( range ) , refs , txn , 12345 ) ; <nl> } <nl> long sum = 0 ; <nl> + long rows = 0 ; <nl> for ( SSTableReader x : cfs . getLiveSSTables ( ) ) <nl> + { <nl> sum + = x . bytesOnDisk ( ) ; <nl> + rows + = x . getTotalRows ( ) ; <nl> + } <nl> assertEquals ( sum , cfs . metric . liveDiskSpaceUsed . getCount ( ) ) ; <nl> - assertEquals ( origSize , cfs . metric . liveDiskSpaceUsed . getCount ( ) , 100000 ) ; <nl> + assertEquals ( rows , 1000 * ( 1000 * 5 ) ) ; / / See writeFile for how this number is derived <nl> + assertEquals ( origSize , cfs . metric . liveDiskSpaceUsed . getCount ( ) , 16000000 ) ; <nl> } <nl> <nl> private SSTableReader writeFile ( ColumnFamilyStore cfs , int count ) <nl> @ @ - 293 , 7 + 298 , 7 @ @ public class AntiCompactionTest <nl> } <nl> Collection < SSTableReader > sstables = getUnrepairedSSTables ( store ) ; <nl> assertEquals ( store . getLiveSSTables ( ) . size ( ) , sstables . size ( ) ) ; <nl> - <nl> + <nl> Range < Token > range = new Range < Token > ( new BytesToken ( " - 10 " . getBytes ( ) ) , new BytesToken ( " - 1 " . getBytes ( ) ) ) ; <nl> List < Range < Token > > ranges = Arrays . asList ( range ) ; <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / test / unit / org / apache / cassandra / db / compaction / AntiCompactionTest . java b / test / unit / org / apache / cassandra / db / compaction / AntiCompactionTest . java 
 index b85c5ec . . 73baeeb 100644 
 - - - a / test / unit / org / apache / cassandra / db / compaction / AntiCompactionTest . java 
 + + + b / test / unit / org / apache / cassandra / db / compaction / AntiCompactionTest . java 
 @ @ - 149 , 10 + 149 , 15 @ @ public class AntiCompactionTest 
 CompactionManager . instance . performAnticompaction ( cfs , Arrays . asList ( range ) , refs , txn , 12345 ) ; 
 } 
 long sum = 0 ; 
 + long rows = 0 ; 
 for ( SSTableReader x : cfs . getLiveSSTables ( ) ) 
 + { 
 sum + = x . bytesOnDisk ( ) ; 
 + rows + = x . getTotalRows ( ) ; 
 + } 
 assertEquals ( sum , cfs . metric . liveDiskSpaceUsed . getCount ( ) ) ; 
 - assertEquals ( origSize , cfs . metric . liveDiskSpaceUsed . getCount ( ) , 100000 ) ; 
 + assertEquals ( rows , 1000 * ( 1000 * 5 ) ) ; / / See writeFile for how this number is derived 
 + assertEquals ( origSize , cfs . metric . liveDiskSpaceUsed . getCount ( ) , 16000000 ) ; 
 } 
 
 private SSTableReader writeFile ( ColumnFamilyStore cfs , int count ) 
 @ @ - 293 , 7 + 298 , 7 @ @ public class AntiCompactionTest 
 } 
 Collection < SSTableReader > sstables = getUnrepairedSSTables ( store ) ; 
 assertEquals ( store . getLiveSSTables ( ) . size ( ) , sstables . size ( ) ) ; 
 - 
 + 
 Range < Token > range = new Range < Token > ( new BytesToken ( " - 10 " . getBytes ( ) ) , new BytesToken ( " - 1 " . getBytes ( ) ) ) ; 
 List < Range < Token > > ranges = Arrays . asList ( range ) ; 


NEAREST DIFF:
ELIMINATEDSENTENCE
