BLEU SCORE: 0.016151720297612714

TEST MSG: Avoid overlaps in LCS by not skipping levels and verifying that the candidates
GENERATED MSG: ignore messages from the future . keep track of nodes in gossip regardless . patch by gdusbabek , reviewed by jbellis . CASSANDRA - 1970

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index a4dc8fd . . 9509a76 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 3 + 1 , 4 @ @ <nl> + 2 . 0 . 6 <nl> * Add compatibility for Hadoop 0 . 2 . x ( CASSANDRA - 5201 ) <nl> * Fix EstimatedHistogram races ( CASSANDRA - 6682 ) <nl> * Failure detector correctly converts initial value to nanos ( CASSANDRA - 6658 ) <nl> @ @ - 10 , 6 + 11 , 7 @ @ <nl> time histogram ( CASSANDRA - 6522 ) <nl> * Stop CommitLogSegment . close ( ) from calling sync ( ) ( CASSANDRA - 6652 ) <nl> * Make commitlog failure handling configurable ( CASSANDRA - 6364 ) <nl> + * Avoid overlaps in LCS ( CASSANDRA - 6688 ) <nl> Merged from 1 . 2 : <nl> * Fix broken streams when replacing with same IP ( CASSANDRA - 6622 ) <nl> * Fix upgradesstables NPE for non - CF - based indexes ( CASSANDRA - 6645 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> index 4347ad5 . . a78a867 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> @ @ - 113 , 23 + 113 , 6 @ @ public class LeveledManifest <nl> generations [ level ] . add ( reader ) ; <nl> } <nl> <nl> - / * * <nl> - * if the number of SSTables in the current compacted set * by itself * exceeds the target level ' s <nl> - * ( regardless of the level ' s current contents ) , find an empty level instead <nl> - * / <nl> - private int skipLevels ( int newLevel , Iterable < SSTableReader > added ) <nl> - { <nl> - / / Note that we now check if the sstables included in the compaction , * before * the compaction , fit in the next level . <nl> - / / This is needed since we need to decide before the actual compaction what level they will be in . <nl> - / / This should be safe , we might skip levels where the compacted data could have fit but that should be ok . <nl> - while ( maxBytesForLevel ( newLevel ) < SSTableReader . getTotalBytes ( added ) <nl> - & & generations [ ( newLevel + 1 ) ] . isEmpty ( ) ) <nl> - { <nl> - newLevel + + ; <nl> - } <nl> - return newLevel ; <nl> - } <nl> - <nl> public synchronized void replace ( Collection < SSTableReader > removed , Collection < SSTableReader > added ) <nl> { <nl> assert ! removed . isEmpty ( ) ; / / use add ( ) instead of promote when adding new sstables <nl> @ @ - 449 , 7 + 432 , 10 @ @ public class LeveledManifest <nl> <nl> for ( SSTableReader newCandidate : overlappedL0 ) <nl> { <nl> - candidates . add ( newCandidate ) ; <nl> + / / overlappedL0 could contain sstables that are not in compactingL0 , but do overlap <nl> + / / other sstables that are <nl> + if ( overlapping ( newCandidate , compactingL0 ) . isEmpty ( ) ) <nl> + candidates . add ( newCandidate ) ; <nl> remaining . remove ( newCandidate ) ; <nl> } <nl> <nl> @ @ - 572 , 7 + 558 , 6 @ @ public class LeveledManifest <nl> else <nl> { <nl> newLevel = minimumLevel = = maximumLevel ? maximumLevel + 1 : maximumLevel ; <nl> - newLevel = skipLevels ( newLevel , sstables ) ; <nl> assert newLevel > 0 ; <nl> } <nl> return newLevel ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / locator / Ec2Snitch . java b / src / java / org / apache / cassandra / locator / Ec2Snitch . java <nl> index 18f7ab4 . . d513915 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / Ec2Snitch . java <nl> + + + b / src / java / org / apache / cassandra / locator / Ec2Snitch . java <nl> @ @ - 89 , 7 + 89 , 7 @ @ public class Ec2Snitch extends AbstractNetworkTopologySnitch <nl> { <nl> / / Share EC2 info via gossip . We have to wait until Gossiper is initialized though . <nl> logger . info ( " Ec2Snitch adding ApplicationState ec2region = " + ec2region + " ec2zone = " + ec2zone ) ; <nl> - Gossiper . instance . addLocalApplicationState ( ApplicationState . DC , StorageService . valueFactory . datacenter ( ec2region ) ) ; <nl> - Gossiper . instance . addLocalApplicationState ( ApplicationState . RACK , StorageService . valueFactory . rack ( ec2zone ) ) ; <nl> + Gossiper . instance . addLocalApplicationState ( ApplicationState . DC , StorageService . instance . valueFactory . datacenter ( ec2region ) ) ; <nl> + Gossiper . instance . addLocalApplicationState ( ApplicationState . RACK , StorageService . instance . valueFactory . rack ( ec2zone ) ) ; <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / MigrationManager . java b / src / java / org / apache / cassandra / service / MigrationManager . java <nl> index 0afe4aa . . 1e7bc1f 100644 <nl> - - - a / src / java / org / apache / cassandra / service / MigrationManager . java <nl> + + + b / src / java / org / apache / cassandra / service / MigrationManager . java <nl> @ @ - 97 , 7 + 97 , 7 @ @ public class MigrationManager implements IEndpointStateChangeSubscriber <nl> MessagingService . instance ( ) . sendOneWay ( msg , host ) ; <nl> / / this is for notifying nodes as they arrive in the cluster . <nl> if ( ! StorageService . instance . isClientMode ( ) ) <nl> - Gossiper . instance . addLocalApplicationState ( ApplicationState . SCHEMA , StorageService . valueFactory . migration ( version ) ) ; <nl> + Gossiper . instance . addLocalApplicationState ( ApplicationState . SCHEMA , StorageService . instance . valueFactory . migration ( version ) ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageLoadBalancer . java b / src / java / org / apache / cassandra / service / StorageLoadBalancer . java <nl> index e77e05f . . 07ab2b6 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageLoadBalancer . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageLoadBalancer . java <nl> @ @ - 348 , 7 + 348 , 7 @ @ public class StorageLoadBalancer implements IEndpointStateChangeSubscriber <nl> if ( logger _ . isDebugEnabled ( ) ) <nl> logger _ . debug ( " Disseminating load info . . . " ) ; <nl> Gossiper . instance . addLocalApplicationState ( ApplicationState . LOAD , <nl> - StorageService . valueFactory . load ( StorageService . instance . getLoad ( ) ) ) ; <nl> + StorageService . instance . valueFactory . load ( StorageService . instance . getLoad ( ) ) ) ; <nl> } <nl> } ; <nl> StorageService . scheduledTasks . scheduleWithFixedDelay ( runnable , 2 * Gossiper . intervalInMillis _ , BROADCAST _ INTERVAL , TimeUnit . MILLISECONDS ) ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index f6ed879 . . 084806b 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 27 , 7 + 27 , 6 @ @ import java . nio . ByteBuffer ; <nl> import java . util . * ; <nl> import java . util . concurrent . * ; <nl> import javax . management . MBeanServer ; <nl> - import javax . management . MalformedObjectNameException ; <nl> import javax . management . ObjectName ; <nl> <nl> import com . google . common . base . Charsets ; <nl> @ @ - 152 , 13 + 151 , 14 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> / * This abstraction maintains the token / endpoint metadata information * / <nl> private TokenMetadata tokenMetadata _ = new TokenMetadata ( ) ; <nl> <nl> - private static IPartitioner partitioner _ = DatabaseDescriptor . getPartitioner ( ) ; <nl> - public static VersionedValue . VersionedValueFactory valueFactory = new VersionedValue . VersionedValueFactory ( partitioner _ ) ; <nl> + private IPartitioner partitioner = DatabaseDescriptor . getPartitioner ( ) ; <nl> + public VersionedValue . VersionedValueFactory valueFactory = new VersionedValue . VersionedValueFactory ( partitioner ) ; <nl> <nl> public static final StorageService instance = new StorageService ( ) ; <nl> <nl> - public static IPartitioner getPartitioner ( ) { <nl> - return partitioner _ ; <nl> + public static IPartitioner getPartitioner ( ) <nl> + { <nl> + return instance . partitioner ; <nl> } <nl> <nl> public Collection < Range > getLocalRanges ( String table ) <nl> @ @ - 458 , 12 + 458 , 12 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> String initialToken = DatabaseDescriptor . getInitialToken ( ) ; <nl> if ( initialToken = = null ) <nl> { <nl> - token = partitioner _ . getRandomToken ( ) ; <nl> + token = partitioner . getRandomToken ( ) ; <nl> logger _ . warn ( " Generated random token " + token + " . Random tokens will result in an unbalanced ring ; see http : / / wiki . apache . org / cassandra / Operations " ) ; <nl> } <nl> else <nl> { <nl> - token = partitioner _ . getTokenFactory ( ) . fromString ( initialToken ) ; <nl> + token = partitioner . getTokenFactory ( ) . fromString ( initialToken ) ; <nl> logger _ . info ( " Saved token not found . Using " + token + " from configuration " ) ; <nl> } <nl> } <nl> @ @ - 1444 , 7 + 1444 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> * / <nl> public List < InetAddress > getNaturalEndpoints ( String table , ByteBuffer key ) <nl> { <nl> - return getNaturalEndpoints ( table , partitioner _ . getToken ( key ) ) ; <nl> + return getNaturalEndpoints ( table , partitioner . getToken ( key ) ) ; <nl> } <nl> <nl> public List < InetAddress > getNaturalEndpoints ( String table , byte [ ] key ) <nl> @ @ - 1473 , 7 + 1473 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> * / <nl> public List < InetAddress > getLiveNaturalEndpoints ( String table , ByteBuffer key ) <nl> { <nl> - return getLiveNaturalEndpoints ( table , partitioner _ . getToken ( key ) ) ; <nl> + return getLiveNaturalEndpoints ( table , partitioner . getToken ( key ) ) ; <nl> } <nl> <nl> public List < InetAddress > getLiveNaturalEndpoints ( String table , Token token ) <nl> @ @ - 1546 , 7 + 1546 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> FBUtilities . sortSampledKeys ( keys , range ) ; <nl> <nl> if ( keys . size ( ) < 3 ) <nl> - return partitioner _ . midpoint ( range . left , range . right ) ; <nl> + return partitioner . midpoint ( range . left , range . right ) ; <nl> else <nl> return keys . get ( keys . size ( ) / 2 ) . token ; <nl> } <nl> @ @ - 1670 , 7 + 1670 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> <nl> public void move ( String newToken ) throws IOException , InterruptedException <nl> { <nl> - move ( partitioner _ . getTokenFactory ( ) . fromString ( newToken ) ) ; <nl> + move ( partitioner . getTokenFactory ( ) . fromString ( newToken ) ) ; <nl> } <nl> <nl> public void loadBalance ( ) throws IOException , InterruptedException <nl> @ @ - 1760 , 7 + 1760 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> { <nl> InetAddress myAddress = FBUtilities . getLocalAddress ( ) ; <nl> Token localToken = tokenMetadata _ . getToken ( myAddress ) ; <nl> - Token token = partitioner _ . getTokenFactory ( ) . fromString ( tokenString ) ; <nl> + Token token = partitioner . getTokenFactory ( ) . fromString ( tokenString ) ; <nl> InetAddress endpoint = tokenMetadata _ . getEndpoint ( token ) ; <nl> <nl> if ( endpoint = = null ) <nl> @ @ - 2074 , 9 + 2074 , 9 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> / / Never ever do this at home . Used by tests . <nl> IPartitioner setPartitionerUnsafe ( IPartitioner newPartitioner ) <nl> { <nl> - IPartitioner oldPartitioner = partitioner _ ; <nl> - partitioner _ = newPartitioner ; <nl> - valueFactory = new VersionedValue . VersionedValueFactory ( partitioner _ ) ; <nl> + IPartitioner oldPartitioner = partitioner ; <nl> + partitioner = newPartitioner ; <nl> + valueFactory = new VersionedValue . VersionedValueFactory ( partitioner ) ; <nl> return oldPartitioner ; <nl> } <nl> <nl> @ @ - 2109 , 7 + 2109 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> { <nl> List < Token > sortedTokens = new ArrayList < Token > ( getTokenToEndpointMap ( ) . keySet ( ) ) ; <nl> Collections . sort ( sortedTokens ) ; <nl> - return partitioner _ . describeOwnership ( sortedTokens ) ; <nl> + return partitioner . describeOwnership ( sortedTokens ) ; <nl> } <nl> <nl> public List < String > getKeyspaces ( ) <nl> diff - - git a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java <nl> index d42e87c . . 756d849 100644 <nl> - - - a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java <nl> + + + b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java <nl> @ @ - 85 , 7 + 85 , 7 @ @ public class BootStrapperTest extends CleanupHelper <nl> Range range = ss . getPrimaryRangeForEndpoint ( bootstrapSource ) ; <nl> Token token = StorageService . getPartitioner ( ) . midpoint ( range . left , range . right ) ; <nl> assert range . contains ( token ) ; <nl> - ss . onChange ( bootstrapAddrs [ i ] , ApplicationState . STATUS , StorageService . valueFactory . bootstrapping ( token ) ) ; <nl> + ss . onChange ( bootstrapAddrs [ i ] , ApplicationState . STATUS , StorageService . instance . valueFactory . bootstrapping ( token ) ) ; <nl> } <nl> <nl> / / any further attempt to bootsrtap should fail since every node in the cluster is splitting . <nl> @ @ - 102 , 7 + 102 , 7 @ @ public class BootStrapperTest extends CleanupHelper <nl> / / indicate that one of the nodes is done . see if the node it was bootstrapping from is still available . <nl> Range range = ss . getPrimaryRangeForEndpoint ( addrs [ 2 ] ) ; <nl> Token token = StorageService . getPartitioner ( ) . midpoint ( range . left , range . right ) ; <nl> - ss . onChange ( bootstrapAddrs [ 2 ] , ApplicationState . STATUS , StorageService . valueFactory . normal ( token ) ) ; <nl> + ss . onChange ( bootstrapAddrs [ 2 ] , ApplicationState . STATUS , StorageService . instance . valueFactory . normal ( token ) ) ; <nl> load . put ( bootstrapAddrs [ 2 ] , 0d ) ; <nl> InetAddress addr = BootStrapper . getBootstrapSource ( ss . getTokenMetadata ( ) , load ) ; <nl> assert addr ! = null & & addr . equals ( addrs [ 2 ] ) ; <nl> @ @ - 134 , 7 + 134 , 7 @ @ public class BootStrapperTest extends CleanupHelper <nl> Range range5 = ss . getPrimaryRangeForEndpoint ( five ) ; <nl> Token fakeToken = StorageService . getPartitioner ( ) . midpoint ( range5 . left , range5 . right ) ; <nl> assert range5 . contains ( fakeToken ) ; <nl> - ss . onChange ( myEndpoint , ApplicationState . STATUS , StorageService . valueFactory . bootstrapping ( fakeToken ) ) ; <nl> + ss . onChange ( myEndpoint , ApplicationState . STATUS , StorageService . instance . valueFactory . bootstrapping ( fakeToken ) ) ; <nl> tmd = ss . getTokenMetadata ( ) ; <nl> <nl> InetAddress source4 = BootStrapper . getBootstrapSource ( tmd , load ) ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index a4dc8fd . . 9509a76 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 3 + 1 , 4 @ @ 
 + 2 . 0 . 6 
 * Add compatibility for Hadoop 0 . 2 . x ( CASSANDRA - 5201 ) 
 * Fix EstimatedHistogram races ( CASSANDRA - 6682 ) 
 * Failure detector correctly converts initial value to nanos ( CASSANDRA - 6658 ) 
 @ @ - 10 , 6 + 11 , 7 @ @ 
 time histogram ( CASSANDRA - 6522 ) 
 * Stop CommitLogSegment . close ( ) from calling sync ( ) ( CASSANDRA - 6652 ) 
 * Make commitlog failure handling configurable ( CASSANDRA - 6364 ) 
 + * Avoid overlaps in LCS ( CASSANDRA - 6688 ) 
 Merged from 1 . 2 : 
 * Fix broken streams when replacing with same IP ( CASSANDRA - 6622 ) 
 * Fix upgradesstables NPE for non - CF - based indexes ( CASSANDRA - 6645 ) 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 index 4347ad5 . . a78a867 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 @ @ - 113 , 23 + 113 , 6 @ @ public class LeveledManifest 
 generations [ level ] . add ( reader ) ; 
 } 
 
 - / * * 
 - * if the number of SSTables in the current compacted set * by itself * exceeds the target level ' s 
 - * ( regardless of the level ' s current contents ) , find an empty level instead 
 - * / 
 - private int skipLevels ( int newLevel , Iterable < SSTableReader > added ) 
 - { 
 - / / Note that we now check if the sstables included in the compaction , * before * the compaction , fit in the next level . 
 - / / This is needed since we need to decide before the actual compaction what level they will be in . 
 - / / This should be safe , we might skip levels where the compacted data could have fit but that should be ok . 
 - while ( maxBytesForLevel ( newLevel ) < SSTableReader . getTotalBytes ( added ) 
 - & & generations [ ( newLevel + 1 ) ] . isEmpty ( ) ) 
 - { 
 - newLevel + + ; 
 - } 
 - return newLevel ; 
 - } 
 - 
 public synchronized void replace ( Collection < SSTableReader > removed , Collection < SSTableReader > added ) 
 { 
 assert ! removed . isEmpty ( ) ; / / use add ( ) instead of promote when adding new sstables 
 @ @ - 449 , 7 + 432 , 10 @ @ public class LeveledManifest 
 
 for ( SSTableReader newCandidate : overlappedL0 ) 
 { 
 - candidates . add ( newCandidate ) ; 
 + / / overlappedL0 could contain sstables that are not in compactingL0 , but do overlap 
 + / / other sstables that are 
 + if ( overlapping ( newCandidate , compactingL0 ) . isEmpty ( ) ) 
 + candidates . add ( newCandidate ) ; 
 remaining . remove ( newCandidate ) ; 
 } 
 
 @ @ - 572 , 7 + 558 , 6 @ @ public class LeveledManifest 
 else 
 { 
 newLevel = minimumLevel = = maximumLevel ? maximumLevel + 1 : maximumLevel ; 
 - newLevel = skipLevels ( newLevel , sstables ) ; 
 assert newLevel > 0 ; 
 } 
 return newLevel ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / locator / Ec2Snitch . java b / src / java / org / apache / cassandra / locator / Ec2Snitch . java 
 index 18f7ab4 . . d513915 100644 
 - - - a / src / java / org / apache / cassandra / locator / Ec2Snitch . java 
 + + + b / src / java / org / apache / cassandra / locator / Ec2Snitch . java 
 @ @ - 89 , 7 + 89 , 7 @ @ public class Ec2Snitch extends AbstractNetworkTopologySnitch 
 { 
 / / Share EC2 info via gossip . We have to wait until Gossiper is initialized though . 
 logger . info ( " Ec2Snitch adding ApplicationState ec2region = " + ec2region + " ec2zone = " + ec2zone ) ; 
 - Gossiper . instance . addLocalApplicationState ( ApplicationState . DC , StorageService . valueFactory . datacenter ( ec2region ) ) ; 
 - Gossiper . instance . addLocalApplicationState ( ApplicationState . RACK , StorageService . valueFactory . rack ( ec2zone ) ) ; 
 + Gossiper . instance . addLocalApplicationState ( ApplicationState . DC , StorageService . instance . valueFactory . datacenter ( ec2region ) ) ; 
 + Gossiper . instance . addLocalApplicationState ( ApplicationState . RACK , StorageService . instance . valueFactory . rack ( ec2zone ) ) ; 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / MigrationManager . java b / src / java / org / apache / cassandra / service / MigrationManager . java 
 index 0afe4aa . . 1e7bc1f 100644 
 - - - a / src / java / org / apache / cassandra / service / MigrationManager . java 
 + + + b / src / java / org / apache / cassandra / service / MigrationManager . java 
 @ @ - 97 , 7 + 97 , 7 @ @ public class MigrationManager implements IEndpointStateChangeSubscriber 
 MessagingService . instance ( ) . sendOneWay ( msg , host ) ; 
 / / this is for notifying nodes as they arrive in the cluster . 
 if ( ! StorageService . instance . isClientMode ( ) ) 
 - Gossiper . instance . addLocalApplicationState ( ApplicationState . SCHEMA , StorageService . valueFactory . migration ( version ) ) ; 
 + Gossiper . instance . addLocalApplicationState ( ApplicationState . SCHEMA , StorageService . instance . valueFactory . migration ( version ) ) ; 
 } 
 
 / * * 
 diff - - git a / src / java / org / apache / cassandra / service / StorageLoadBalancer . java b / src / java / org / apache / cassandra / service / StorageLoadBalancer . java 
 index e77e05f . . 07ab2b6 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageLoadBalancer . java 
 + + + b / src / java / org / apache / cassandra / service / StorageLoadBalancer . java 
 @ @ - 348 , 7 + 348 , 7 @ @ public class StorageLoadBalancer implements IEndpointStateChangeSubscriber 
 if ( logger _ . isDebugEnabled ( ) ) 
 logger _ . debug ( " Disseminating load info . . . " ) ; 
 Gossiper . instance . addLocalApplicationState ( ApplicationState . LOAD , 
 - StorageService . valueFactory . load ( StorageService . instance . getLoad ( ) ) ) ; 
 + StorageService . instance . valueFactory . load ( StorageService . instance . getLoad ( ) ) ) ; 
 } 
 } ; 
 StorageService . scheduledTasks . scheduleWithFixedDelay ( runnable , 2 * Gossiper . intervalInMillis _ , BROADCAST _ INTERVAL , TimeUnit . MILLISECONDS ) ; 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index f6ed879 . . 084806b 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 27 , 7 + 27 , 6 @ @ import java . nio . ByteBuffer ; 
 import java . util . * ; 
 import java . util . concurrent . * ; 
 import javax . management . MBeanServer ; 
 - import javax . management . MalformedObjectNameException ; 
 import javax . management . ObjectName ; 
 
 import com . google . common . base . Charsets ; 
 @ @ - 152 , 13 + 151 , 14 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 / * This abstraction maintains the token / endpoint metadata information * / 
 private TokenMetadata tokenMetadata _ = new TokenMetadata ( ) ; 
 
 - private static IPartitioner partitioner _ = DatabaseDescriptor . getPartitioner ( ) ; 
 - public static VersionedValue . VersionedValueFactory valueFactory = new VersionedValue . VersionedValueFactory ( partitioner _ ) ; 
 + private IPartitioner partitioner = DatabaseDescriptor . getPartitioner ( ) ; 
 + public VersionedValue . VersionedValueFactory valueFactory = new VersionedValue . VersionedValueFactory ( partitioner ) ; 
 
 public static final StorageService instance = new StorageService ( ) ; 
 
 - public static IPartitioner getPartitioner ( ) { 
 - return partitioner _ ; 
 + public static IPartitioner getPartitioner ( ) 
 + { 
 + return instance . partitioner ; 
 } 
 
 public Collection < Range > getLocalRanges ( String table ) 
 @ @ - 458 , 12 + 458 , 12 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 String initialToken = DatabaseDescriptor . getInitialToken ( ) ; 
 if ( initialToken = = null ) 
 { 
 - token = partitioner _ . getRandomToken ( ) ; 
 + token = partitioner . getRandomToken ( ) ; 
 logger _ . warn ( " Generated random token " + token + " . Random tokens will result in an unbalanced ring ; see http : / / wiki . apache . org / cassandra / Operations " ) ; 
 } 
 else 
 { 
 - token = partitioner _ . getTokenFactory ( ) . fromString ( initialToken ) ; 
 + token = partitioner . getTokenFactory ( ) . fromString ( initialToken ) ; 
 logger _ . info ( " Saved token not found . Using " + token + " from configuration " ) ; 
 } 
 } 
 @ @ - 1444 , 7 + 1444 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 * / 
 public List < InetAddress > getNaturalEndpoints ( String table , ByteBuffer key ) 
 { 
 - return getNaturalEndpoints ( table , partitioner _ . getToken ( key ) ) ; 
 + return getNaturalEndpoints ( table , partitioner . getToken ( key ) ) ; 
 } 
 
 public List < InetAddress > getNaturalEndpoints ( String table , byte [ ] key ) 
 @ @ - 1473 , 7 + 1473 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 * / 
 public List < InetAddress > getLiveNaturalEndpoints ( String table , ByteBuffer key ) 
 { 
 - return getLiveNaturalEndpoints ( table , partitioner _ . getToken ( key ) ) ; 
 + return getLiveNaturalEndpoints ( table , partitioner . getToken ( key ) ) ; 
 } 
 
 public List < InetAddress > getLiveNaturalEndpoints ( String table , Token token ) 
 @ @ - 1546 , 7 + 1546 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 FBUtilities . sortSampledKeys ( keys , range ) ; 
 
 if ( keys . size ( ) < 3 ) 
 - return partitioner _ . midpoint ( range . left , range . right ) ; 
 + return partitioner . midpoint ( range . left , range . right ) ; 
 else 
 return keys . get ( keys . size ( ) / 2 ) . token ; 
 } 
 @ @ - 1670 , 7 + 1670 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 
 public void move ( String newToken ) throws IOException , InterruptedException 
 { 
 - move ( partitioner _ . getTokenFactory ( ) . fromString ( newToken ) ) ; 
 + move ( partitioner . getTokenFactory ( ) . fromString ( newToken ) ) ; 
 } 
 
 public void loadBalance ( ) throws IOException , InterruptedException 
 @ @ - 1760 , 7 + 1760 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 { 
 InetAddress myAddress = FBUtilities . getLocalAddress ( ) ; 
 Token localToken = tokenMetadata _ . getToken ( myAddress ) ; 
 - Token token = partitioner _ . getTokenFactory ( ) . fromString ( tokenString ) ; 
 + Token token = partitioner . getTokenFactory ( ) . fromString ( tokenString ) ; 
 InetAddress endpoint = tokenMetadata _ . getEndpoint ( token ) ; 
 
 if ( endpoint = = null ) 
 @ @ - 2074 , 9 + 2074 , 9 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 / / Never ever do this at home . Used by tests . 
 IPartitioner setPartitionerUnsafe ( IPartitioner newPartitioner ) 
 { 
 - IPartitioner oldPartitioner = partitioner _ ; 
 - partitioner _ = newPartitioner ; 
 - valueFactory = new VersionedValue . VersionedValueFactory ( partitioner _ ) ; 
 + IPartitioner oldPartitioner = partitioner ; 
 + partitioner = newPartitioner ; 
 + valueFactory = new VersionedValue . VersionedValueFactory ( partitioner ) ; 
 return oldPartitioner ; 
 } 
 
 @ @ - 2109 , 7 + 2109 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 { 
 List < Token > sortedTokens = new ArrayList < Token > ( getTokenToEndpointMap ( ) . keySet ( ) ) ; 
 Collections . sort ( sortedTokens ) ; 
 - return partitioner _ . describeOwnership ( sortedTokens ) ; 
 + return partitioner . describeOwnership ( sortedTokens ) ; 
 } 
 
 public List < String > getKeyspaces ( ) 
 diff - - git a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java 
 index d42e87c . . 756d849 100644 
 - - - a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java 
 + + + b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java 
 @ @ - 85 , 7 + 85 , 7 @ @ public class BootStrapperTest extends CleanupHelper 
 Range range = ss . getPrimaryRangeForEndpoint ( bootstrapSource ) ; 
 Token token = StorageService . getPartitioner ( ) . midpoint ( range . left , range . right ) ; 
 assert range . contains ( token ) ; 
 - ss . onChange ( bootstrapAddrs [ i ] , ApplicationState . STATUS , StorageService . valueFactory . bootstrapping ( token ) ) ; 
 + ss . onChange ( bootstrapAddrs [ i ] , ApplicationState . STATUS , StorageService . instance . valueFactory . bootstrapping ( token ) ) ; 
 } 
 
 / / any further attempt to bootsrtap should fail since every node in the cluster is splitting . 
 @ @ - 102 , 7 + 102 , 7 @ @ public class BootStrapperTest extends CleanupHelper 
 / / indicate that one of the nodes is done . see if the node it was bootstrapping from is still available . 
 Range range = ss . getPrimaryRangeForEndpoint ( addrs [ 2 ] ) ; 
 Token token = StorageService . getPartitioner ( ) . midpoint ( range . left , range . right ) ; 
 - ss . onChange ( bootstrapAddrs [ 2 ] , ApplicationState . STATUS , StorageService . valueFactory . normal ( token ) ) ; 
 + ss . onChange ( bootstrapAddrs [ 2 ] , ApplicationState . STATUS , StorageService . instance . valueFactory . normal ( token ) ) ; 
 load . put ( bootstrapAddrs [ 2 ] , 0d ) ; 
 InetAddress addr = BootStrapper . getBootstrapSource ( ss . getTokenMetadata ( ) , load ) ; 
 assert addr ! = null & & addr . equals ( addrs [ 2 ] ) ; 
 @ @ - 134 , 7 + 134 , 7 @ @ public class BootStrapperTest extends CleanupHelper 
 Range range5 = ss . getPrimaryRangeForEndpoint ( five ) ; 
 Token fakeToken = StorageService . getPartitioner ( ) . midpoint ( range5 . left , range5 . right ) ; 
 assert range5 . contains ( fakeToken ) ; 
 - ss . onChange ( myEndpoint , ApplicationState . STATUS , StorageService . valueFactory . bootstrapping ( fakeToken ) ) ; 
 + ss . onChange ( myEndpoint , ApplicationState . STATUS , StorageService . instance . valueFactory . bootstrapping ( fakeToken ) ) ; 
 tmd = ss . getTokenMetadata ( ) ; 
 
 InetAddress source4 = BootStrapper . getBootstrapSource ( tmd , load ) ;
