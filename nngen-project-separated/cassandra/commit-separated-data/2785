BLEU SCORE: 2.820893212548129E-4

TEST MSG: ocd
GENERATED MSG: Remove old jamm jar and update cassandra . bat

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index c93ea5b . . c4b1b2e 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 1491 , 7 + 1491 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> } <nl> else <nl> { <nl> - logger . warn ( " Host ID Collision for { } between { } and { } ; ignored { } " , hostId , existing , endpoint , endpoint ) ; <nl> + logger . warn ( " Host ID collision for { } between { } and { } ; ignored { } " , hostId , existing , endpoint , endpoint ) ; <nl> tokenMetadata . removeEndpoint ( endpoint ) ; <nl> endpointsToRemove . add ( endpoint ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 021588a . . a467792 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 3 + 1 , 7 @ @ <nl> + 0 . 8 . 7 <nl> + * Kill server on wrapped OOME such as from FileChannel . map ( CASSANDRA - 3201 ) <nl> + <nl> + <nl> 0 . 8 . 6 <nl> * revert CASSANDRA - 2388 <nl> * change TokenRange . endpoints back to listen / broadcast address to match <nl> diff - - git a / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java b / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java <nl> index 8135ac0 . . 73997bd 100644 <nl> - - - a / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java <nl> + + + b / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java <nl> @ @ - 137 , 9 + 137 , 11 @ @ public abstract class AbstractCassandraDaemon implements CassandraDaemon <nl> { <nl> exceptions . incrementAndGet ( ) ; <nl> logger . error ( " Fatal exception in thread " + t , e ) ; <nl> - if ( e instanceof OutOfMemoryError ) <nl> + for ( Throwable e2 = e ; e2 ! = null ; e2 = e2 . getCause ( ) ) <nl> { <nl> - System . exit ( 100 ) ; <nl> + / / some code , like FileChannel . map , will wrap an OutOfMemoryError in another exception <nl> + if ( e2 instanceof OutOfMemoryError ) <nl> + System . exit ( 100 ) ; <nl> } <nl> } <nl> } ) ;

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index c93ea5b . . c4b1b2e 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 1491 , 7 + 1491 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 } 
 else 
 { 
 - logger . warn ( " Host ID Collision for { } between { } and { } ; ignored { } " , hostId , existing , endpoint , endpoint ) ; 
 + logger . warn ( " Host ID collision for { } between { } and { } ; ignored { } " , hostId , existing , endpoint , endpoint ) ; 
 tokenMetadata . removeEndpoint ( endpoint ) ; 
 endpointsToRemove . add ( endpoint ) ; 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 021588a . . a467792 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 3 + 1 , 7 @ @ 
 + 0 . 8 . 7 
 + * Kill server on wrapped OOME such as from FileChannel . map ( CASSANDRA - 3201 ) 
 + 
 + 
 0 . 8 . 6 
 * revert CASSANDRA - 2388 
 * change TokenRange . endpoints back to listen / broadcast address to match 
 diff - - git a / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java b / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java 
 index 8135ac0 . . 73997bd 100644 
 - - - a / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java 
 + + + b / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java 
 @ @ - 137 , 9 + 137 , 11 @ @ public abstract class AbstractCassandraDaemon implements CassandraDaemon 
 { 
 exceptions . incrementAndGet ( ) ; 
 logger . error ( " Fatal exception in thread " + t , e ) ; 
 - if ( e instanceof OutOfMemoryError ) 
 + for ( Throwable e2 = e ; e2 ! = null ; e2 = e2 . getCause ( ) ) 
 { 
 - System . exit ( 100 ) ; 
 + / / some code , like FileChannel . map , will wrap an OutOfMemoryError in another exception 
 + if ( e2 instanceof OutOfMemoryError ) 
 + System . exit ( 100 ) ; 
 } 
 } 
 } ) ;
