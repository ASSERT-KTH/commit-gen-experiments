BLEU SCORE: 0.011514383434815713

TEST MSG: Cassandra not starting when using enhanced startup scripts in windows
GENERATED MSG: Fix Java Version check for versions > 100 on Windows ( 3 . 0 patch )

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index e2f6d07 . . 7c557f7 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 17 <nl> + * Cassandra not starting when using enhanced startup scripts in windows ( CASSANDRA - 14418 ) <nl> * Fix progress stats and units in compactionstats ( CASSANDRA - 12244 ) <nl> * Better handle missing partition columns in system _ schema . columns ( CASSANDRA - 14379 ) <nl> * Delay hints store excise by write timeout to avoid race with decommission ( CASSANDRA - 13740 ) <nl> diff - - git a / conf / cassandra - env . ps1 b / conf / cassandra - env . ps1 <nl> index 405ed92 . . 74511f0 100644 <nl> - - - a / conf / cassandra - env . ps1 <nl> + + + b / conf / cassandra - env . ps1 <nl> @ @ - 377 , 7 + 377 , 7 @ @ Function SetCassandraEnvironment <nl> } <nl> <nl> # provides hints to the JIT compiler <nl> - $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : CompileCommandFile = $ env : CASSANDRA _ CONF \ hotspot _ compiler " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : CompileCommandFile = " " $ env : CASSANDRA _ CONF \ hotspot _ compiler " " " <nl> <nl> # add the jamm javaagent <nl> if ( ( $ env : JVM _ VENDOR - ne " OpenJDK " ) - or ( $ env : JVM _ VERSION . CompareTo ( " 1 . 6 . 0 " ) - eq 1 ) - or <nl> @ @ - 390 , 7 + 390 , 7 @ @ Function SetCassandraEnvironment <nl> if ( $ env : CASSANDRA _ HEAPDUMP _ DIR ) <nl> { <nl> $ unixTimestamp = [ int64 ] ( ( [ datetime ] : : UtcNow ) - ( get - date " 1 / 1 / 1970 " ) ) . TotalSeconds <nl> - $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : HeapDumpPath = $ env : CASSANDRA _ HEAPDUMP _ DIR \ cassandra - $ unixTimestamp - pid $ pid . hprof " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : HeapDumpPath = " " $ env : CASSANDRA _ HEAPDUMP _ DIR \ cassandra - $ unixTimestamp - pid $ pid . hprof " " " <nl> } <nl> <nl> if ( $ env : JVM _ VERSION . CompareTo ( " 1 . 8 . 0 " ) - eq - 1 - or [ convert ] : : ToInt32 ( $ env : JVM _ PATCH _ VERSION ) - lt 40 )
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index e2f6d07 . . 7c557f7 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 17 
 + * Cassandra not starting when using enhanced startup scripts in windows ( CASSANDRA - 14418 ) 
 * Fix progress stats and units in compactionstats ( CASSANDRA - 12244 ) 
 * Better handle missing partition columns in system _ schema . columns ( CASSANDRA - 14379 ) 
 * Delay hints store excise by write timeout to avoid race with decommission ( CASSANDRA - 13740 ) 
 diff - - git a / conf / cassandra - env . ps1 b / conf / cassandra - env . ps1 
 index 405ed92 . . 74511f0 100644 
 - - - a / conf / cassandra - env . ps1 
 + + + b / conf / cassandra - env . ps1 
 @ @ - 377 , 7 + 377 , 7 @ @ Function SetCassandraEnvironment 
 } 
 
 # provides hints to the JIT compiler 
 - $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : CompileCommandFile = $ env : CASSANDRA _ CONF \ hotspot _ compiler " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : CompileCommandFile = " " $ env : CASSANDRA _ CONF \ hotspot _ compiler " " " 
 
 # add the jamm javaagent 
 if ( ( $ env : JVM _ VENDOR - ne " OpenJDK " ) - or ( $ env : JVM _ VERSION . CompareTo ( " 1 . 6 . 0 " ) - eq 1 ) - or 
 @ @ - 390 , 7 + 390 , 7 @ @ Function SetCassandraEnvironment 
 if ( $ env : CASSANDRA _ HEAPDUMP _ DIR ) 
 { 
 $ unixTimestamp = [ int64 ] ( ( [ datetime ] : : UtcNow ) - ( get - date " 1 / 1 / 1970 " ) ) . TotalSeconds 
 - $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : HeapDumpPath = $ env : CASSANDRA _ HEAPDUMP _ DIR \ cassandra - $ unixTimestamp - pid $ pid . hprof " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : HeapDumpPath = " " $ env : CASSANDRA _ HEAPDUMP _ DIR \ cassandra - $ unixTimestamp - pid $ pid . hprof " " " 
 } 
 
 if ( $ env : JVM _ VERSION . CompareTo ( " 1 . 8 . 0 " ) - eq - 1 - or [ convert ] : : ToInt32 ( $ env : JVM _ PATCH _ VERSION ) - lt 40 )

NEAREST DIFF:
ELIMINATEDSENTENCE
