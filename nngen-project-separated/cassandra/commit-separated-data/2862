BLEU SCORE: 0.04844232281716619

TEST MSG: add StorageService . stopDaemon
GENERATED MSG: Snapshot to include manifest under LeveledCompactionStrategy

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 67036c5 . . 916ed7d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 0 . 4 <nl> + * add StorageService . stopDaemon ( ) ( CASSANDRA - 4268 ) <nl> * add IRE for invalid CF supplied to get _ count ( CASSANDRA - 5701 ) <nl> * add client encryption support to sstableloader ( CASSANDRA - 6378 ) <nl> * Fix accept ( ) loop for SSL sockets post - shutdown ( CASSANDRA - 6468 ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index c341684 . . cca7b00 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 380 , 6 + 380 , 15 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> return initialized ; <nl> } <nl> <nl> + public void stopDaemon ( ) <nl> + { <nl> + if ( daemon = = null ) <nl> + throw new IllegalStateException ( " No configured daemon " ) ; <nl> + daemon . deactivate ( ) ; <nl> + / / completely shut down cassandra <nl> + System . exit ( 0 ) ; <nl> + } <nl> + <nl> public synchronized Collection < Token > prepareReplacementInfo ( ) throws ConfigurationException <nl> { <nl> logger . info ( " Gathering node replacement information for { } " , DatabaseDescriptor . getReplaceAddress ( ) ) ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> index be1b0aa . . df85901 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> @ @ - 395 , 6 + 395 , 9 @ @ public interface StorageServiceMBean extends NotificationEmitter <nl> / / allows a user to recover a forcibly ' killed ' node <nl> public void startGossiping ( ) ; <nl> <nl> + / / allows a user to forcibly completely stop cassandra <nl> + public void stopDaemon ( ) ; <nl> + <nl> / / to determine if gossip is disabled <nl> public boolean isInitialized ( ) ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> index 5c071b6 . . c32539f 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> @ @ - 162 , 6 + 162 , 7 @ @ public class NodeCmd <nl> STATUSBINARY , <nl> STATUSTHRIFT , <nl> STOP , <nl> + STOPDAEMON , <nl> TPSTATS , <nl> UPGRADESSTABLES , <nl> VERSION , <nl> @ @ - 1288 , 6 + 1289 , 12 @ @ public class NodeCmd <nl> probe . stop ( arguments [ 0 ] . toUpperCase ( ) ) ; <nl> break ; <nl> <nl> + case STOPDAEMON : <nl> + if ( arguments . length ! = 0 ) { badUse ( " stopdaemon does not take arguments . " ) ; } <nl> + try { probe . stopCassandraDaemon ( ) ; } <nl> + catch ( Throwable t ) { System . out . println ( " Cassandra has shut down . \ n " ) ; } <nl> + break ; <nl> + <nl> case DESCRIBERING : <nl> if ( arguments . length ! = 1 ) { badUse ( " Missing keyspace argument for describering . " ) ; } <nl> nodeCmd . printDescribeRing ( arguments [ 0 ] , System . out ) ; <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> index d784f29 . . 4f60464 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> @ @ - 766 , 6 + 766 , 11 @ @ public class NodeProbe <nl> return ssProxy . isRPCServerRunning ( ) ; <nl> } <nl> <nl> + public void stopCassandraDaemon ( ) <nl> + { <nl> + ssProxy . stopDaemon ( ) ; <nl> + } <nl> + <nl> public boolean isInitialized ( ) <nl> { <nl> return ssProxy . isInitialized ( ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b570eff . . 203a52f 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 34 , 6 + 34 , 8 @ @ <nl> * add bin \ daemon to binary tarball for Windows service ( CASSANDRA - 3331 ) <nl> * Fix places where uncompressed size of sstables was use in place of the <nl> compressed one ( CASSANDRA - 3338 ) <nl> + * Fix hsha thrift server ( CASSANDRA - 3346 ) <nl> + * Make sure repair only stream needed sstables ( CASSANDRA - 3345 ) <nl> Fixes merged from 0 . 8 below : <nl> * Fix tool . bat files when CASSANDRA _ HOME contains spaces ( CASSANDRA - 3258 ) <nl> * Force flush of status table when removing / updating token ( CASSANDRA - 3243 ) <nl> diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index 85f750a . . 6413d57 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 372 , 7 + 372 , 7 @ @ public class DatabaseDescriptor <nl> : 16 ; <nl> if ( conf . rpc _ max _ threads = = null ) <nl> conf . rpc _ max _ threads = conf . rpc _ server _ type . toLowerCase ( ) . equals ( " hsha " ) <nl> - ? Runtime . getRuntime ( ) . availableProcessors ( ) <nl> + ? Runtime . getRuntime ( ) . availableProcessors ( ) * 4 <nl> : Integer . MAX _ VALUE ; <nl> <nl> / * data file and commit log directories . they get created later , when they ' re needed . * / <nl> diff - - git a / src / java / org / apache / cassandra / streaming / StreamingRepairTask . java b / src / java / org / apache / cassandra / streaming / StreamingRepairTask . java <nl> index f292241 . . 1953886 100644 <nl> - - - a / src / java / org / apache / cassandra / streaming / StreamingRepairTask . java <nl> + + + b / src / java / org / apache / cassandra / streaming / StreamingRepairTask . java <nl> @ @ - 121 , 7 + 121 , 7 @ @ public class StreamingRepairTask implements Runnable <nl> StreamOutSession outsession = StreamOutSession . create ( tableName , dst , callback ) ; <nl> StreamOut . transferSSTables ( outsession , sstables , ranges , OperationType . AES ) ; <nl> / / request ranges from the remote node <nl> - StreamIn . requestRanges ( dst , tableName , ranges , callback , OperationType . AES ) ; <nl> + StreamIn . requestRanges ( dst , tableName , Collections . singleton ( cfstore ) , ranges , callback , OperationType . AES ) ; <nl> } <nl> catch ( Exception e ) <nl> {

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 67036c5 . . 916ed7d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 0 . 4 
 + * add StorageService . stopDaemon ( ) ( CASSANDRA - 4268 ) 
 * add IRE for invalid CF supplied to get _ count ( CASSANDRA - 5701 ) 
 * add client encryption support to sstableloader ( CASSANDRA - 6378 ) 
 * Fix accept ( ) loop for SSL sockets post - shutdown ( CASSANDRA - 6468 ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index c341684 . . cca7b00 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 380 , 6 + 380 , 15 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 return initialized ; 
 } 
 
 + public void stopDaemon ( ) 
 + { 
 + if ( daemon = = null ) 
 + throw new IllegalStateException ( " No configured daemon " ) ; 
 + daemon . deactivate ( ) ; 
 + / / completely shut down cassandra 
 + System . exit ( 0 ) ; 
 + } 
 + 
 public synchronized Collection < Token > prepareReplacementInfo ( ) throws ConfigurationException 
 { 
 logger . info ( " Gathering node replacement information for { } " , DatabaseDescriptor . getReplaceAddress ( ) ) ; 
 diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 index be1b0aa . . df85901 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 @ @ - 395 , 6 + 395 , 9 @ @ public interface StorageServiceMBean extends NotificationEmitter 
 / / allows a user to recover a forcibly ' killed ' node 
 public void startGossiping ( ) ; 
 
 + / / allows a user to forcibly completely stop cassandra 
 + public void stopDaemon ( ) ; 
 + 
 / / to determine if gossip is disabled 
 public boolean isInitialized ( ) ; 
 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 index 5c071b6 . . c32539f 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 @ @ - 162 , 6 + 162 , 7 @ @ public class NodeCmd 
 STATUSBINARY , 
 STATUSTHRIFT , 
 STOP , 
 + STOPDAEMON , 
 TPSTATS , 
 UPGRADESSTABLES , 
 VERSION , 
 @ @ - 1288 , 6 + 1289 , 12 @ @ public class NodeCmd 
 probe . stop ( arguments [ 0 ] . toUpperCase ( ) ) ; 
 break ; 
 
 + case STOPDAEMON : 
 + if ( arguments . length ! = 0 ) { badUse ( " stopdaemon does not take arguments . " ) ; } 
 + try { probe . stopCassandraDaemon ( ) ; } 
 + catch ( Throwable t ) { System . out . println ( " Cassandra has shut down . \ n " ) ; } 
 + break ; 
 + 
 case DESCRIBERING : 
 if ( arguments . length ! = 1 ) { badUse ( " Missing keyspace argument for describering . " ) ; } 
 nodeCmd . printDescribeRing ( arguments [ 0 ] , System . out ) ; 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 index d784f29 . . 4f60464 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 @ @ - 766 , 6 + 766 , 11 @ @ public class NodeProbe 
 return ssProxy . isRPCServerRunning ( ) ; 
 } 
 
 + public void stopCassandraDaemon ( ) 
 + { 
 + ssProxy . stopDaemon ( ) ; 
 + } 
 + 
 public boolean isInitialized ( ) 
 { 
 return ssProxy . isInitialized ( ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b570eff . . 203a52f 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 34 , 6 + 34 , 8 @ @ 
 * add bin \ daemon to binary tarball for Windows service ( CASSANDRA - 3331 ) 
 * Fix places where uncompressed size of sstables was use in place of the 
 compressed one ( CASSANDRA - 3338 ) 
 + * Fix hsha thrift server ( CASSANDRA - 3346 ) 
 + * Make sure repair only stream needed sstables ( CASSANDRA - 3345 ) 
 Fixes merged from 0 . 8 below : 
 * Fix tool . bat files when CASSANDRA _ HOME contains spaces ( CASSANDRA - 3258 ) 
 * Force flush of status table when removing / updating token ( CASSANDRA - 3243 ) 
 diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index 85f750a . . 6413d57 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 372 , 7 + 372 , 7 @ @ public class DatabaseDescriptor 
 : 16 ; 
 if ( conf . rpc _ max _ threads = = null ) 
 conf . rpc _ max _ threads = conf . rpc _ server _ type . toLowerCase ( ) . equals ( " hsha " ) 
 - ? Runtime . getRuntime ( ) . availableProcessors ( ) 
 + ? Runtime . getRuntime ( ) . availableProcessors ( ) * 4 
 : Integer . MAX _ VALUE ; 
 
 / * data file and commit log directories . they get created later , when they ' re needed . * / 
 diff - - git a / src / java / org / apache / cassandra / streaming / StreamingRepairTask . java b / src / java / org / apache / cassandra / streaming / StreamingRepairTask . java 
 index f292241 . . 1953886 100644 
 - - - a / src / java / org / apache / cassandra / streaming / StreamingRepairTask . java 
 + + + b / src / java / org / apache / cassandra / streaming / StreamingRepairTask . java 
 @ @ - 121 , 7 + 121 , 7 @ @ public class StreamingRepairTask implements Runnable 
 StreamOutSession outsession = StreamOutSession . create ( tableName , dst , callback ) ; 
 StreamOut . transferSSTables ( outsession , sstables , ranges , OperationType . AES ) ; 
 / / request ranges from the remote node 
 - StreamIn . requestRanges ( dst , tableName , ranges , callback , OperationType . AES ) ; 
 + StreamIn . requestRanges ( dst , tableName , Collections . singleton ( cfstore ) , ranges , callback , OperationType . AES ) ; 
 } 
 catch ( Exception e ) 
 {
