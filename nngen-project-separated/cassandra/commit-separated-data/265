BLEU SCORE: 0.022882533035912193

TEST MSG: fix minor logging issues
GENERATED MSG: renames and cleanup for bootstrap - related code .

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / compaction / DateTieredCompactionStrategyOptions . java b / src / java / org / apache / cassandra / db / compaction / DateTieredCompactionStrategyOptions . java <nl> index 9362bde . . 7604bbc 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / DateTieredCompactionStrategyOptions . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / DateTieredCompactionStrategyOptions . java <nl> @ @ - 54 , 7 + 54 , 7 @ @ public final class DateTieredCompactionStrategyOptions <nl> String optionValue = options . get ( TIMESTAMP _ RESOLUTION _ KEY ) ; <nl> timestampResolution = optionValue = = null ? DEFAULT _ TIMESTAMP _ RESOLUTION : TimeUnit . valueOf ( optionValue ) ; <nl> if ( timestampResolution ! = DEFAULT _ TIMESTAMP _ RESOLUTION ) <nl> - logger . warn ( " Using a non - default timestamp _ resolution { } - are you really doing inserts with USING TIMESTAMP < non _ microsecond _ timestamp > ( or driver equivalent ) ? " , timestampResolution . toString ( ) ) ; <nl> + logger . warn ( " Using a non - default timestamp _ resolution { } - are you really doing inserts with USING TIMESTAMP < non _ microsecond _ timestamp > ( or driver equivalent ) ? " , timestampResolution ) ; <nl> optionValue = options . get ( MAX _ SSTABLE _ AGE _ KEY ) ; <nl> double fractionalDays = optionValue = = null ? DEFAULT _ MAX _ SSTABLE _ AGE _ DAYS : Double . parseDouble ( optionValue ) ; <nl> maxSSTableAge = Math . round ( fractionalDays * timestampResolution . convert ( 1 , TimeUnit . DAYS ) ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / TimeWindowCompactionStrategyOptions . java b / src / java / org / apache / cassandra / db / compaction / TimeWindowCompactionStrategyOptions . java <nl> index 24b4fe0 . . 8b2ba23 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / TimeWindowCompactionStrategyOptions . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / TimeWindowCompactionStrategyOptions . java <nl> @ @ - 63 , 7 + 63 , 7 @ @ public final class TimeWindowCompactionStrategyOptions <nl> String optionValue = options . get ( TIMESTAMP _ RESOLUTION _ KEY ) ; <nl> timestampResolution = optionValue = = null ? DEFAULT _ TIMESTAMP _ RESOLUTION : TimeUnit . valueOf ( optionValue ) ; <nl> if ( timestampResolution ! = DEFAULT _ TIMESTAMP _ RESOLUTION ) <nl> - logger . warn ( " Using a non - default timestamp _ resolution { } - are you really doing inserts with USING TIMESTAMP < non _ microsecond _ timestamp > ( or driver equivalent ) ? " , timestampResolution . toString ( ) ) ; <nl> + logger . warn ( " Using a non - default timestamp _ resolution { } - are you really doing inserts with USING TIMESTAMP < non _ microsecond _ timestamp > ( or driver equivalent ) ? " , timestampResolution ) ; <nl> <nl> optionValue = options . get ( COMPACTION _ WINDOW _ UNIT _ KEY ) ; <nl> sstableWindowUnit = optionValue = = null ? DEFAULT _ COMPACTION _ WINDOW _ UNIT : TimeUnit . valueOf ( optionValue ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / lifecycle / LogTransaction . java b / src / java / org / apache / cassandra / db / lifecycle / LogTransaction . java <nl> index face9fa . . 2f30d70 100644 <nl> - - - a / src / java / org / apache / cassandra / db / lifecycle / LogTransaction . java <nl> + + + b / src / java / org / apache / cassandra / db / lifecycle / LogTransaction . java <nl> @ @ - 212 , 7 + 212 , 7 @ @ class LogTransaction extends Transactional . AbstractTransactional implements Tran <nl> { <nl> e . printStackTrace ( ps ) ; <nl> } <nl> - logger . debug ( " Unable to delete { } as it does not exist , stack trace : \ n { } " , file , baos . toString ( ) ) ; <nl> + logger . debug ( " Unable to delete { } as it does not exist , stack trace : \ n { } " , file , baos ) ; <nl> } <nl> } <nl> catch ( IOException e ) <nl> diff - - git a / src / java / org / apache / cassandra / db / marshal / DynamicCompositeType . java b / src / java / org / apache / cassandra / db / marshal / DynamicCompositeType . java <nl> index cade725 . . c6eeecf 100644 <nl> - - - a / src / java / org / apache / cassandra / db / marshal / DynamicCompositeType . java <nl> + + + b / src / java / org / apache / cassandra / db / marshal / DynamicCompositeType . java <nl> @ @ - 123 , 7 + 123 , 7 @ @ public class DynamicCompositeType extends AbstractCompositeType <nl> * If both types are ReversedType ( Type ) , we need to compare on the wrapped type ( which may differ between the two types ) to avoid <nl> * incompatible comparisons being made . <nl> * / <nl> - if ( ( comp1 instanceof ReversedType ) & & ( comp2 instanceof ReversedType ) ) <nl> + if ( ( comp1 instanceof ReversedType ) & & ( comp2 instanceof ReversedType ) ) <nl> { <nl> comp1 = ( ( ReversedType < ? > ) comp1 ) . baseType ; <nl> comp2 = ( ( ReversedType < ? > ) comp2 ) . baseType ; <nl> @ @ - 199 , 19 + 199 , 19 @ @ public class DynamicCompositeType extends AbstractCompositeType <nl> valueStr = ByteBufferUtil . string ( value ) ; <nl> comparator = TypeParser . parse ( valueStr ) ; <nl> } <nl> - catch ( CharacterCodingException ce ) <nl> + catch ( CharacterCodingException ce ) <nl> { <nl> - / / ByteBufferUtil . string failed . <nl> + / / ByteBufferUtil . string failed . <nl> / / Log it here and we ' ll further throw an exception below since comparator = = null <nl> - logger . error ( " Failed with [ { } ] when decoding the byte buffer in ByteBufferUtil . string ( ) " , <nl> - ce . toString ( ) ) ; <nl> + logger . error ( " Failed with [ { } ] when decoding the byte buffer in ByteBufferUtil . string ( ) " , <nl> + ce ) ; <nl> } <nl> catch ( Exception e ) <nl> { <nl> - / / parse failed . <nl> + / / parse failed . <nl> / / Log it here and we ' ll further throw an exception below since comparator = = null <nl> - logger . error ( " Failed to parse value string \ " { } \ " with exception : [ { } ] " , <nl> - valueStr , e . toString ( ) ) ; <nl> + logger . error ( " Failed to parse value string \ " { } \ " with exception : [ { } ] " , <nl> + valueStr , e ) ; <nl> } <nl> } <nl> else <nl> diff - - git a / src / java / org / apache / cassandra / net / async / InboundHandshakeHandler . java b / src / java / org / apache / cassandra / net / async / InboundHandshakeHandler . java <nl> index aa4f4ff . . 625f03d 100644 <nl> - - - a / src / java / org / apache / cassandra / net / async / InboundHandshakeHandler . java <nl> + + + b / src / java / org / apache / cassandra / net / async / InboundHandshakeHandler . java <nl> @ @ - 91 , 7 + 91 , 7 @ @ class InboundHandshakeHandler extends ByteToMessageDecoder <nl> case HANDSHAKE _ FAIL : <nl> throw new IllegalStateException ( " channel should be closed after determining the handshake failed with peer : " + ctx . channel ( ) . remoteAddress ( ) ) ; <nl> default : <nl> - logger . error ( " unhandled state : " + state ) ; <nl> + logger . error ( " unhandled state : { } " , state ) ; <nl> state = State . HANDSHAKE _ FAIL ; <nl> ctx . close ( ) ; <nl> } <nl> @ @ - 166 , 7 + 166 , 7 @ @ class InboundHandshakeHandler extends ByteToMessageDecoder <nl> / / streaming connections are per - session and have a fixed version . we can ' t do anything with a wrong - version stream connection , so drop it . <nl> if ( version ! = StreamMessage . CURRENT _ VERSION ) <nl> { <nl> - logger . warn ( " Received stream using protocol version % d ( my version % d ) . Terminating connection " , version , MessagingService . current _ version ) ; <nl> + logger . warn ( " Received stream using protocol version { } ( my version { } ) . Terminating connection " , version , MessagingService . current _ version ) ; <nl> ctx . close ( ) ; <nl> return State . HANDSHAKE _ FAIL ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index c88fe8f . . 0fb643f 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 344 , 9 + 344 , 9 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> <nl> String getNextFileName ( ) <nl> { <nl> - / / Psuedo increment so that we do not generate consecutive numbers <nl> + / / increment twice so that we do not generate consecutive numbers <nl> fileIndexGenerator _ . incrementAndGet ( ) ; <nl> - return table _ + " - " + columnFamily _ + " - " + fileIndexGenerator _ . incrementAndGet ( ) ; <nl> + return String . format ( " % s - % s - Data . db " , columnFamily _ , fileIndexGenerator _ . incrementAndGet ( ) ) ; <nl> } <nl> <nl> / * <nl> @ @ - 1033 , 8 + 1033 , 11 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> rangeWriter . closeAndOpenReader ( DatabaseDescriptor . getKeysCachedFraction ( table _ ) ) ; <nl> if ( fileList ! = null ) <nl> { <nl> + fileList . add ( rangeWriter . indexFilename ( ) ) ; <nl> + fileList . add ( rangeWriter . filterFilename ( ) ) ; <nl> fileList . add ( rangeWriter . getFilename ( ) ) ; <nl> } <nl> + result = true ; <nl> } <nl> <nl> if ( logger _ . isDebugEnabled ( ) ) <nl> diff - - git a / src / java / org / apache / cassandra / dht / BootstrapMetadataVerbHandler . java b / src / java / org / apache / cassandra / dht / BootstrapMetadataVerbHandler . java <nl> index 0956a80 . . 88f86f8 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / BootstrapMetadataVerbHandler . java <nl> + + + b / src / java / org / apache / cassandra / dht / BootstrapMetadataVerbHandler . java <nl> @ @ - 125 , 8 + 125 , 9 @ @ public class BootstrapMetadataVerbHandler implements IVerbHandler <nl> logger _ . debug ( " Forcing compaction . . . " ) ; <nl> / * Get the counting bloom filter for each endpoint and the list of files that need to be streamed * / <nl> List < String > fileList = new ArrayList < String > ( ) ; <nl> - boolean bVal = table . forceCompaction ( ranges , target , fileList ) ; <nl> + table . forceCompaction ( ranges , target , fileList ) ; <nl> doHandoff ( target , fileList , tName ) ; <nl> + / / In Handoff , Streaming the file also deletes the file , so no cleanup needed <nl> } <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java <nl> index 9677777 . . 8c021e1 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessagingService . java <nl> + + + b / src / java / org / apache / cassandra / net / MessagingService . java <nl> @ @ - 601 , 7 + 601 , 7 @ @ public class MessagingService implements IMessagingService <nl> return messageSerializerExecutor _ ; <nl> } <nl> <nl> - public static ExecutorService getDeserilizationExecutor ( ) <nl> + public static ExecutorService getDeserializationExecutor ( ) <nl> { <nl> return messageDeserializerExecutor _ ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / net / TcpConnection . java b / src / java / org / apache / cassandra / net / TcpConnection . java <nl> index 3176b2a . . 1d4f774 100644 <nl> - - - a / src / java / org / apache / cassandra / net / TcpConnection . java <nl> + + + b / src / java / org / apache / cassandra / net / TcpConnection . java <nl> @ @ - 469 , 7 + 469 , 7 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable <nl> } <nl> <nl> / * Deserialize and handle the message * / <nl> - MessagingService . getDeserilizationExecutor ( ) . submit ( new MessageDeserializationTask ( pH . serializerType _ , bytes ) ) ; <nl> + MessagingService . getDeserializationExecutor ( ) . submit ( new MessageDeserializationTask ( pH . serializerType _ , bytes ) ) ; <nl> tcpReader _ . resetState ( ) ; <nl> } <nl> else <nl> @ @ - 490 , 7 + 490 , 8 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable <nl> } <nl> finally <nl> { <nl> - turnOnInterestOps ( key _ , SelectionKey . OP _ READ ) ; <nl> + if ( key _ . isValid ( ) ) / / not valid if closeSocket has been called above <nl> + turnOnInterestOps ( key _ , SelectionKey . OP _ READ ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / net / io / ContentStreamState . java b / src / java / org / apache / cassandra / net / io / ContentStreamState . java <nl> index adce2bd . . ef4f8aa 100644 <nl> - - - a / src / java / org / apache / cassandra / net / io / ContentStreamState . java <nl> + + + b / src / java / org / apache / cassandra / net / io / ContentStreamState . java <nl> @ @ - 68 , 7 + 68 , 7 @ @ class ContentStreamState extends StartState <nl> { <nl> SocketChannel socketChannel = stream _ . getStream ( ) ; <nl> InetSocketAddress remoteAddress = ( InetSocketAddress ) socketChannel . socket ( ) . getRemoteSocketAddress ( ) ; <nl> - String remoteHost = remoteAddress . getHostName ( ) ; <nl> + String remoteHostIp = remoteAddress . getAddress ( ) . getHostAddress ( ) ; <nl> createFileChannel ( ) ; <nl> if ( streamContext _ ! = null ) <nl> { <nl> @ @ - 82 , 7 + 82 , 7 @ @ class ContentStreamState extends StartState <nl> { <nl> / * Ask the source node to re - stream this file . * / <nl> streamStatus _ . setAction ( StreamContextManager . StreamCompletionAction . STREAM ) ; <nl> - handleStreamCompletion ( remoteHost ) ; <nl> + handleStreamCompletion ( remoteHostIp ) ; <nl> / * Delete the orphaned file . * / <nl> File file = new File ( streamContext _ . getTargetFile ( ) ) ; <nl> file . delete ( ) ; <nl> @ @ - 92 , 7 + 92 , 7 @ @ class ContentStreamState extends StartState <nl> { <nl> if ( logger _ . isDebugEnabled ( ) ) <nl> logger _ . debug ( " Removing stream context " + streamContext _ ) ; <nl> - handleStreamCompletion ( remoteHost ) ; <nl> + handleStreamCompletion ( remoteHostIp ) ; <nl> bytesRead _ = 0L ; <nl> fc _ . close ( ) ; <nl> morphState ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StreamManager . java b / src / java / org / apache / cassandra / service / StreamManager . java <nl> index fddbb94 . . 32d1ff7 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StreamManager . java <nl> + + + b / src / java / org / apache / cassandra / service / StreamManager . java <nl> @ @ - 44 , 7 + 44 , 7 @ @ public final class StreamManager <nl> <nl> public static class BootstrapTerminateVerbHandler implements IVerbHandler <nl> { <nl> - private static Logger logger _ = Logger . getLogger ( BootstrapInitiateDoneVerbHandler . class ) ; <nl> + private static Logger logger _ = Logger . getLogger ( BootstrapTerminateVerbHandler . class ) ; <nl> <nl> public void doVerb ( Message message ) <nl> {

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / compaction / DateTieredCompactionStrategyOptions . java b / src / java / org / apache / cassandra / db / compaction / DateTieredCompactionStrategyOptions . java 
 index 9362bde . . 7604bbc 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / DateTieredCompactionStrategyOptions . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / DateTieredCompactionStrategyOptions . java 
 @ @ - 54 , 7 + 54 , 7 @ @ public final class DateTieredCompactionStrategyOptions 
 String optionValue = options . get ( TIMESTAMP _ RESOLUTION _ KEY ) ; 
 timestampResolution = optionValue = = null ? DEFAULT _ TIMESTAMP _ RESOLUTION : TimeUnit . valueOf ( optionValue ) ; 
 if ( timestampResolution ! = DEFAULT _ TIMESTAMP _ RESOLUTION ) 
 - logger . warn ( " Using a non - default timestamp _ resolution { } - are you really doing inserts with USING TIMESTAMP < non _ microsecond _ timestamp > ( or driver equivalent ) ? " , timestampResolution . toString ( ) ) ; 
 + logger . warn ( " Using a non - default timestamp _ resolution { } - are you really doing inserts with USING TIMESTAMP < non _ microsecond _ timestamp > ( or driver equivalent ) ? " , timestampResolution ) ; 
 optionValue = options . get ( MAX _ SSTABLE _ AGE _ KEY ) ; 
 double fractionalDays = optionValue = = null ? DEFAULT _ MAX _ SSTABLE _ AGE _ DAYS : Double . parseDouble ( optionValue ) ; 
 maxSSTableAge = Math . round ( fractionalDays * timestampResolution . convert ( 1 , TimeUnit . DAYS ) ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / TimeWindowCompactionStrategyOptions . java b / src / java / org / apache / cassandra / db / compaction / TimeWindowCompactionStrategyOptions . java 
 index 24b4fe0 . . 8b2ba23 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / TimeWindowCompactionStrategyOptions . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / TimeWindowCompactionStrategyOptions . java 
 @ @ - 63 , 7 + 63 , 7 @ @ public final class TimeWindowCompactionStrategyOptions 
 String optionValue = options . get ( TIMESTAMP _ RESOLUTION _ KEY ) ; 
 timestampResolution = optionValue = = null ? DEFAULT _ TIMESTAMP _ RESOLUTION : TimeUnit . valueOf ( optionValue ) ; 
 if ( timestampResolution ! = DEFAULT _ TIMESTAMP _ RESOLUTION ) 
 - logger . warn ( " Using a non - default timestamp _ resolution { } - are you really doing inserts with USING TIMESTAMP < non _ microsecond _ timestamp > ( or driver equivalent ) ? " , timestampResolution . toString ( ) ) ; 
 + logger . warn ( " Using a non - default timestamp _ resolution { } - are you really doing inserts with USING TIMESTAMP < non _ microsecond _ timestamp > ( or driver equivalent ) ? " , timestampResolution ) ; 
 
 optionValue = options . get ( COMPACTION _ WINDOW _ UNIT _ KEY ) ; 
 sstableWindowUnit = optionValue = = null ? DEFAULT _ COMPACTION _ WINDOW _ UNIT : TimeUnit . valueOf ( optionValue ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / lifecycle / LogTransaction . java b / src / java / org / apache / cassandra / db / lifecycle / LogTransaction . java 
 index face9fa . . 2f30d70 100644 
 - - - a / src / java / org / apache / cassandra / db / lifecycle / LogTransaction . java 
 + + + b / src / java / org / apache / cassandra / db / lifecycle / LogTransaction . java 
 @ @ - 212 , 7 + 212 , 7 @ @ class LogTransaction extends Transactional . AbstractTransactional implements Tran 
 { 
 e . printStackTrace ( ps ) ; 
 } 
 - logger . debug ( " Unable to delete { } as it does not exist , stack trace : \ n { } " , file , baos . toString ( ) ) ; 
 + logger . debug ( " Unable to delete { } as it does not exist , stack trace : \ n { } " , file , baos ) ; 
 } 
 } 
 catch ( IOException e ) 
 diff - - git a / src / java / org / apache / cassandra / db / marshal / DynamicCompositeType . java b / src / java / org / apache / cassandra / db / marshal / DynamicCompositeType . java 
 index cade725 . . c6eeecf 100644 
 - - - a / src / java / org / apache / cassandra / db / marshal / DynamicCompositeType . java 
 + + + b / src / java / org / apache / cassandra / db / marshal / DynamicCompositeType . java 
 @ @ - 123 , 7 + 123 , 7 @ @ public class DynamicCompositeType extends AbstractCompositeType 
 * If both types are ReversedType ( Type ) , we need to compare on the wrapped type ( which may differ between the two types ) to avoid 
 * incompatible comparisons being made . 
 * / 
 - if ( ( comp1 instanceof ReversedType ) & & ( comp2 instanceof ReversedType ) ) 
 + if ( ( comp1 instanceof ReversedType ) & & ( comp2 instanceof ReversedType ) ) 
 { 
 comp1 = ( ( ReversedType < ? > ) comp1 ) . baseType ; 
 comp2 = ( ( ReversedType < ? > ) comp2 ) . baseType ; 
 @ @ - 199 , 19 + 199 , 19 @ @ public class DynamicCompositeType extends AbstractCompositeType 
 valueStr = ByteBufferUtil . string ( value ) ; 
 comparator = TypeParser . parse ( valueStr ) ; 
 } 
 - catch ( CharacterCodingException ce ) 
 + catch ( CharacterCodingException ce ) 
 { 
 - / / ByteBufferUtil . string failed . 
 + / / ByteBufferUtil . string failed . 
 / / Log it here and we ' ll further throw an exception below since comparator = = null 
 - logger . error ( " Failed with [ { } ] when decoding the byte buffer in ByteBufferUtil . string ( ) " , 
 - ce . toString ( ) ) ; 
 + logger . error ( " Failed with [ { } ] when decoding the byte buffer in ByteBufferUtil . string ( ) " , 
 + ce ) ; 
 } 
 catch ( Exception e ) 
 { 
 - / / parse failed . 
 + / / parse failed . 
 / / Log it here and we ' ll further throw an exception below since comparator = = null 
 - logger . error ( " Failed to parse value string \ " { } \ " with exception : [ { } ] " , 
 - valueStr , e . toString ( ) ) ; 
 + logger . error ( " Failed to parse value string \ " { } \ " with exception : [ { } ] " , 
 + valueStr , e ) ; 
 } 
 } 
 else 
 diff - - git a / src / java / org / apache / cassandra / net / async / InboundHandshakeHandler . java b / src / java / org / apache / cassandra / net / async / InboundHandshakeHandler . java 
 index aa4f4ff . . 625f03d 100644 
 - - - a / src / java / org / apache / cassandra / net / async / InboundHandshakeHandler . java 
 + + + b / src / java / org / apache / cassandra / net / async / InboundHandshakeHandler . java 
 @ @ - 91 , 7 + 91 , 7 @ @ class InboundHandshakeHandler extends ByteToMessageDecoder 
 case HANDSHAKE _ FAIL : 
 throw new IllegalStateException ( " channel should be closed after determining the handshake failed with peer : " + ctx . channel ( ) . remoteAddress ( ) ) ; 
 default : 
 - logger . error ( " unhandled state : " + state ) ; 
 + logger . error ( " unhandled state : { } " , state ) ; 
 state = State . HANDSHAKE _ FAIL ; 
 ctx . close ( ) ; 
 } 
 @ @ - 166 , 7 + 166 , 7 @ @ class InboundHandshakeHandler extends ByteToMessageDecoder 
 / / streaming connections are per - session and have a fixed version . we can ' t do anything with a wrong - version stream connection , so drop it . 
 if ( version ! = StreamMessage . CURRENT _ VERSION ) 
 { 
 - logger . warn ( " Received stream using protocol version % d ( my version % d ) . Terminating connection " , version , MessagingService . current _ version ) ; 
 + logger . warn ( " Received stream using protocol version { } ( my version { } ) . Terminating connection " , version , MessagingService . current _ version ) ; 
 ctx . close ( ) ; 
 return State . HANDSHAKE _ FAIL ; 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index c88fe8f . . 0fb643f 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 344 , 9 + 344 , 9 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 
 String getNextFileName ( ) 
 { 
 - / / Psuedo increment so that we do not generate consecutive numbers 
 + / / increment twice so that we do not generate consecutive numbers 
 fileIndexGenerator _ . incrementAndGet ( ) ; 
 - return table _ + " - " + columnFamily _ + " - " + fileIndexGenerator _ . incrementAndGet ( ) ; 
 + return String . format ( " % s - % s - Data . db " , columnFamily _ , fileIndexGenerator _ . incrementAndGet ( ) ) ; 
 } 
 
 / * 
 @ @ - 1033 , 8 + 1033 , 11 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 rangeWriter . closeAndOpenReader ( DatabaseDescriptor . getKeysCachedFraction ( table _ ) ) ; 
 if ( fileList ! = null ) 
 { 
 + fileList . add ( rangeWriter . indexFilename ( ) ) ; 
 + fileList . add ( rangeWriter . filterFilename ( ) ) ; 
 fileList . add ( rangeWriter . getFilename ( ) ) ; 
 } 
 + result = true ; 
 } 
 
 if ( logger _ . isDebugEnabled ( ) ) 
 diff - - git a / src / java / org / apache / cassandra / dht / BootstrapMetadataVerbHandler . java b / src / java / org / apache / cassandra / dht / BootstrapMetadataVerbHandler . java 
 index 0956a80 . . 88f86f8 100644 
 - - - a / src / java / org / apache / cassandra / dht / BootstrapMetadataVerbHandler . java 
 + + + b / src / java / org / apache / cassandra / dht / BootstrapMetadataVerbHandler . java 
 @ @ - 125 , 8 + 125 , 9 @ @ public class BootstrapMetadataVerbHandler implements IVerbHandler 
 logger _ . debug ( " Forcing compaction . . . " ) ; 
 / * Get the counting bloom filter for each endpoint and the list of files that need to be streamed * / 
 List < String > fileList = new ArrayList < String > ( ) ; 
 - boolean bVal = table . forceCompaction ( ranges , target , fileList ) ; 
 + table . forceCompaction ( ranges , target , fileList ) ; 
 doHandoff ( target , fileList , tName ) ; 
 + / / In Handoff , Streaming the file also deletes the file , so no cleanup needed 
 } 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java 
 index 9677777 . . 8c021e1 100644 
 - - - a / src / java / org / apache / cassandra / net / MessagingService . java 
 + + + b / src / java / org / apache / cassandra / net / MessagingService . java 
 @ @ - 601 , 7 + 601 , 7 @ @ public class MessagingService implements IMessagingService 
 return messageSerializerExecutor _ ; 
 } 
 
 - public static ExecutorService getDeserilizationExecutor ( ) 
 + public static ExecutorService getDeserializationExecutor ( ) 
 { 
 return messageDeserializerExecutor _ ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / net / TcpConnection . java b / src / java / org / apache / cassandra / net / TcpConnection . java 
 index 3176b2a . . 1d4f774 100644 
 - - - a / src / java / org / apache / cassandra / net / TcpConnection . java 
 + + + b / src / java / org / apache / cassandra / net / TcpConnection . java 
 @ @ - 469 , 7 + 469 , 7 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable 
 } 
 
 / * Deserialize and handle the message * / 
 - MessagingService . getDeserilizationExecutor ( ) . submit ( new MessageDeserializationTask ( pH . serializerType _ , bytes ) ) ; 
 + MessagingService . getDeserializationExecutor ( ) . submit ( new MessageDeserializationTask ( pH . serializerType _ , bytes ) ) ; 
 tcpReader _ . resetState ( ) ; 
 } 
 else 
 @ @ - 490 , 7 + 490 , 8 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable 
 } 
 finally 
 { 
 - turnOnInterestOps ( key _ , SelectionKey . OP _ READ ) ; 
 + if ( key _ . isValid ( ) ) / / not valid if closeSocket has been called above 
 + turnOnInterestOps ( key _ , SelectionKey . OP _ READ ) ; 
 } 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / net / io / ContentStreamState . java b / src / java / org / apache / cassandra / net / io / ContentStreamState . java 
 index adce2bd . . ef4f8aa 100644 
 - - - a / src / java / org / apache / cassandra / net / io / ContentStreamState . java 
 + + + b / src / java / org / apache / cassandra / net / io / ContentStreamState . java 
 @ @ - 68 , 7 + 68 , 7 @ @ class ContentStreamState extends StartState 
 { 
 SocketChannel socketChannel = stream _ . getStream ( ) ; 
 InetSocketAddress remoteAddress = ( InetSocketAddress ) socketChannel . socket ( ) . getRemoteSocketAddress ( ) ; 
 - String remoteHost = remoteAddress . getHostName ( ) ; 
 + String remoteHostIp = remoteAddress . getAddress ( ) . getHostAddress ( ) ; 
 createFileChannel ( ) ; 
 if ( streamContext _ ! = null ) 
 { 
 @ @ - 82 , 7 + 82 , 7 @ @ class ContentStreamState extends StartState 
 { 
 / * Ask the source node to re - stream this file . * / 
 streamStatus _ . setAction ( StreamContextManager . StreamCompletionAction . STREAM ) ; 
 - handleStreamCompletion ( remoteHost ) ; 
 + handleStreamCompletion ( remoteHostIp ) ; 
 / * Delete the orphaned file . * / 
 File file = new File ( streamContext _ . getTargetFile ( ) ) ; 
 file . delete ( ) ; 
 @ @ - 92 , 7 + 92 , 7 @ @ class ContentStreamState extends StartState 
 { 
 if ( logger _ . isDebugEnabled ( ) ) 
 logger _ . debug ( " Removing stream context " + streamContext _ ) ; 
 - handleStreamCompletion ( remoteHost ) ; 
 + handleStreamCompletion ( remoteHostIp ) ; 
 bytesRead _ = 0L ; 
 fc _ . close ( ) ; 
 morphState ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / service / StreamManager . java b / src / java / org / apache / cassandra / service / StreamManager . java 
 index fddbb94 . . 32d1ff7 100644 
 - - - a / src / java / org / apache / cassandra / service / StreamManager . java 
 + + + b / src / java / org / apache / cassandra / service / StreamManager . java 
 @ @ - 44 , 7 + 44 , 7 @ @ public final class StreamManager 
 
 public static class BootstrapTerminateVerbHandler implements IVerbHandler 
 { 
 - private static Logger logger _ = Logger . getLogger ( BootstrapInitiateDoneVerbHandler . class ) ; 
 + private static Logger logger _ = Logger . getLogger ( BootstrapTerminateVerbHandler . class ) ; 
 
 public void doVerb ( Message message ) 
 {
