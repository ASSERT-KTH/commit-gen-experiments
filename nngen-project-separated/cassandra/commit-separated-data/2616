BLEU SCORE: 0.035802380724744266

TEST MSG: Remove avro usage in DataOutputTest
GENERATED MSG: additional check for offheap bloom filter size

TEST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / io / util / DataOutputTest . java b / test / unit / org / apache / cassandra / io / util / DataOutputTest . java <nl> index 4eeec4d . . 2a8c7a9 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / util / DataOutputTest . java <nl> + + + b / test / unit / org / apache / cassandra / io / util / DataOutputTest . java <nl> @ @ - 31 , 14 + 31 , 12 @ @ import java . io . IOException ; <nl> import java . io . RandomAccessFile ; <nl> import java . nio . ByteBuffer ; <nl> import java . nio . channels . Channels ; <nl> - import java . util . Arrays ; <nl> import java . util . Random ; <nl> import java . util . concurrent . ThreadLocalRandom ; <nl> <nl> import org . junit . Assert ; <nl> import org . junit . Test ; <nl> <nl> - import org . apache . avro . util . ByteBufferInputStream ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> <nl> public class DataOutputTest <nl> @ @ - 79 , 7 + 77 , 7 @ @ public class DataOutputTest <nl> ByteBuffer buf = wrap ( new byte [ 345 ] , true ) ; <nl> DataOutputByteBuffer write = new DataOutputByteBuffer ( buf . duplicate ( ) ) ; <nl> DataInput canon = testWrite ( write ) ; <nl> - DataInput test = new DataInputStream ( new ByteBufferInputStream ( Arrays . asList ( buf ) ) ) ; <nl> + DataInput test = new DataInputStream ( new ByteArrayInputStream ( ByteBufferUtil . getArray ( buf ) ) ) ; <nl> testRead ( test , canon ) ; <nl> } <nl> <nl> @ @ - 89 , 7 + 87 , 7 @ @ public class DataOutputTest <nl> ByteBuffer buf = wrap ( new byte [ 345 ] , false ) ; <nl> DataOutputByteBuffer write = new DataOutputByteBuffer ( buf . duplicate ( ) ) ; <nl> DataInput canon = testWrite ( write ) ; <nl> - DataInput test = new DataInputStream ( new ByteBufferInputStream ( Arrays . asList ( buf ) ) ) ; <nl> + DataInput test = new DataInputStream ( new ByteArrayInputStream ( ByteBufferUtil . getArray ( buf ) ) ) ; <nl> testRead ( test , canon ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / utils / BloomFilterTest . java b / test / unit / org / apache / cassandra / utils / BloomFilterTest . java <nl> index 872cb05 . . feff193 100644 <nl> - - - a / test / unit / org / apache / cassandra / utils / BloomFilterTest . java <nl> + + + b / test / unit / org / apache / cassandra / utils / BloomFilterTest . java <nl> @ @ - 38 , 7 + 38 , 6 @ @ import org . junit . Test ; <nl> <nl> import org . apache . cassandra . io . util . DataOutputBuffer ; <nl> import org . apache . cassandra . io . util . FileUtils ; <nl> - import org . apache . cassandra . utils . FilterFactory . Type ; <nl> <nl> public class BloomFilterTest <nl> { <nl> @ @ - 170 , 7 + 169 , 7 @ @ public class BloomFilterTest <nl> out . close ( ) ; <nl> <nl> DataInputStream in = new DataInputStream ( new FileInputStream ( file ) ) ; <nl> - BloomFilter filter2 = ( BloomFilter ) FilterFactory . deserialize ( in , Type . MURMUR3 , true ) ; <nl> + BloomFilter filter2 = ( BloomFilter ) FilterFactory . deserialize ( in , true ) ; <nl> Assert . assertTrue ( filter2 . isPresent ( test ) ) ; <nl> FileUtils . closeQuietly ( in ) ; <nl> }

TEST DIFF:
diff - - git a / test / unit / org / apache / cassandra / io / util / DataOutputTest . java b / test / unit / org / apache / cassandra / io / util / DataOutputTest . java 
 index 4eeec4d . . 2a8c7a9 100644 
 - - - a / test / unit / org / apache / cassandra / io / util / DataOutputTest . java 
 + + + b / test / unit / org / apache / cassandra / io / util / DataOutputTest . java 
 @ @ - 31 , 14 + 31 , 12 @ @ import java . io . IOException ; 
 import java . io . RandomAccessFile ; 
 import java . nio . ByteBuffer ; 
 import java . nio . channels . Channels ; 
 - import java . util . Arrays ; 
 import java . util . Random ; 
 import java . util . concurrent . ThreadLocalRandom ; 
 
 import org . junit . Assert ; 
 import org . junit . Test ; 
 
 - import org . apache . avro . util . ByteBufferInputStream ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 
 public class DataOutputTest 
 @ @ - 79 , 7 + 77 , 7 @ @ public class DataOutputTest 
 ByteBuffer buf = wrap ( new byte [ 345 ] , true ) ; 
 DataOutputByteBuffer write = new DataOutputByteBuffer ( buf . duplicate ( ) ) ; 
 DataInput canon = testWrite ( write ) ; 
 - DataInput test = new DataInputStream ( new ByteBufferInputStream ( Arrays . asList ( buf ) ) ) ; 
 + DataInput test = new DataInputStream ( new ByteArrayInputStream ( ByteBufferUtil . getArray ( buf ) ) ) ; 
 testRead ( test , canon ) ; 
 } 
 
 @ @ - 89 , 7 + 87 , 7 @ @ public class DataOutputTest 
 ByteBuffer buf = wrap ( new byte [ 345 ] , false ) ; 
 DataOutputByteBuffer write = new DataOutputByteBuffer ( buf . duplicate ( ) ) ; 
 DataInput canon = testWrite ( write ) ; 
 - DataInput test = new DataInputStream ( new ByteBufferInputStream ( Arrays . asList ( buf ) ) ) ; 
 + DataInput test = new DataInputStream ( new ByteArrayInputStream ( ByteBufferUtil . getArray ( buf ) ) ) ; 
 testRead ( test , canon ) ; 
 } 


NEAREST DIFF:
diff - - git a / test / unit / org / apache / cassandra / utils / BloomFilterTest . java b / test / unit / org / apache / cassandra / utils / BloomFilterTest . java 
 index 872cb05 . . feff193 100644 
 - - - a / test / unit / org / apache / cassandra / utils / BloomFilterTest . java 
 + + + b / test / unit / org / apache / cassandra / utils / BloomFilterTest . java 
 @ @ - 38 , 7 + 38 , 6 @ @ import org . junit . Test ; 
 
 import org . apache . cassandra . io . util . DataOutputBuffer ; 
 import org . apache . cassandra . io . util . FileUtils ; 
 - import org . apache . cassandra . utils . FilterFactory . Type ; 
 
 public class BloomFilterTest 
 { 
 @ @ - 170 , 7 + 169 , 7 @ @ public class BloomFilterTest 
 out . close ( ) ; 
 
 DataInputStream in = new DataInputStream ( new FileInputStream ( file ) ) ; 
 - BloomFilter filter2 = ( BloomFilter ) FilterFactory . deserialize ( in , Type . MURMUR3 , true ) ; 
 + BloomFilter filter2 = ( BloomFilter ) FilterFactory . deserialize ( in , true ) ; 
 Assert . assertTrue ( filter2 . isPresent ( test ) ) ; 
 FileUtils . closeQuietly ( in ) ; 
 }
