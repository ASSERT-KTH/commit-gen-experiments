BLEU SCORE: 0.018543295278285157

TEST MSG: Make PasswordAuthenticator number of hashing rounds configurable
GENERATED MSG: Expose whether jna is enabled and memory is locked via JMX

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 0e75973 . . e85b622 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 4 <nl> + * Make PasswordAuthenticator number of hashing rounds configurable ( CASSANDRA - 8085 ) <nl> * Fix AssertionError when binding nested collections in DELETE ( CASSANDRA - 8900 ) <nl> * Check for overlap with non - early sstables in LCS ( CASSANDRA - 8739 ) <nl> * Only calculate max purgable timestamp if we have to ( CASSANDRA - 8914 ) <nl> diff - - git a / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java b / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java <nl> index 9570770 . . 7d30664 100644 <nl> - - - a / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java <nl> + + + b / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java <nl> @ @ - 31 , 6 + 31 , 7 @ @ import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> import org . apache . cassandra . concurrent . ScheduledExecutors ; <nl> + import org . apache . cassandra . config . Config ; <nl> import org . apache . cassandra . cql3 . UntypedResultSet ; <nl> import org . apache . cassandra . cql3 . QueryProcessor ; <nl> import org . apache . cassandra . cql3 . QueryOptions ; <nl> @ @ - 51 , 8 + 52 , 19 @ @ public class PasswordAuthenticator implements ISaslAwareAuthenticator <nl> { <nl> private static final Logger logger = LoggerFactory . getLogger ( PasswordAuthenticator . class ) ; <nl> <nl> - / / 2 * * GENSALT _ LOG2 _ ROUNS rounds of hashing will be performed . <nl> - private static final int GENSALT _ LOG2 _ ROUNDS = 10 ; <nl> + / / 2 * * GENSALT _ LOG2 _ ROUNDS rounds of hashing will be performed . <nl> + private static final String GENSALT _ LOG2 _ ROUNDS _ PROPERTY = Config . PROPERTY _ PREFIX + " auth _ bcrypt _ gensalt _ log2 _ rounds " ; <nl> + private static final int GENSALT _ LOG2 _ ROUNDS = getGensaltLogRounds ( ) ; <nl> + <nl> + static int getGensaltLogRounds ( ) <nl> + { <nl> + int rounds = Integer . getInteger ( GENSALT _ LOG2 _ ROUNDS _ PROPERTY , 10 ) ; <nl> + if ( rounds < 4 | | rounds > 31 ) <nl> + throw new RuntimeException ( new ConfigurationException ( String . format ( " Bad value for system property - D % s . " + <nl> + " Please use a value 4 and 31 " , <nl> + GENSALT _ LOG2 _ ROUNDS _ PROPERTY ) ) ) ; <nl> + return rounds ; <nl> + } <nl> <nl> / / name of the hash column . <nl> private static final String SALTED _ HASH = " salted _ hash " ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / NativeAccessMBean . java b / src / java / org / apache / cassandra / service / NativeAccessMBean . java <nl> new file mode 100644 <nl> index 0000000 . . 39b96c5 <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / service / NativeAccessMBean . java <nl> @ @ - 0 , 0 + 1 , 9 @ @ <nl> + package org . apache . cassandra . service ; <nl> + <nl> + public interface NativeAccessMBean <nl> + { <nl> + boolean isAvailable ( ) ; <nl> + <nl> + boolean isMemoryLockable ( ) ; <nl> + } <nl> +

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 0e75973 . . e85b622 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 4 
 + * Make PasswordAuthenticator number of hashing rounds configurable ( CASSANDRA - 8085 ) 
 * Fix AssertionError when binding nested collections in DELETE ( CASSANDRA - 8900 ) 
 * Check for overlap with non - early sstables in LCS ( CASSANDRA - 8739 ) 
 * Only calculate max purgable timestamp if we have to ( CASSANDRA - 8914 ) 
 diff - - git a / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java b / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java 
 index 9570770 . . 7d30664 100644 
 - - - a / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java 
 + + + b / src / java / org / apache / cassandra / auth / PasswordAuthenticator . java 
 @ @ - 31 , 6 + 31 , 7 @ @ import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 import org . apache . cassandra . concurrent . ScheduledExecutors ; 
 + import org . apache . cassandra . config . Config ; 
 import org . apache . cassandra . cql3 . UntypedResultSet ; 
 import org . apache . cassandra . cql3 . QueryProcessor ; 
 import org . apache . cassandra . cql3 . QueryOptions ; 
 @ @ - 51 , 8 + 52 , 19 @ @ public class PasswordAuthenticator implements ISaslAwareAuthenticator 
 { 
 private static final Logger logger = LoggerFactory . getLogger ( PasswordAuthenticator . class ) ; 
 
 - / / 2 * * GENSALT _ LOG2 _ ROUNS rounds of hashing will be performed . 
 - private static final int GENSALT _ LOG2 _ ROUNDS = 10 ; 
 + / / 2 * * GENSALT _ LOG2 _ ROUNDS rounds of hashing will be performed . 
 + private static final String GENSALT _ LOG2 _ ROUNDS _ PROPERTY = Config . PROPERTY _ PREFIX + " auth _ bcrypt _ gensalt _ log2 _ rounds " ; 
 + private static final int GENSALT _ LOG2 _ ROUNDS = getGensaltLogRounds ( ) ; 
 + 
 + static int getGensaltLogRounds ( ) 
 + { 
 + int rounds = Integer . getInteger ( GENSALT _ LOG2 _ ROUNDS _ PROPERTY , 10 ) ; 
 + if ( rounds < 4 | | rounds > 31 ) 
 + throw new RuntimeException ( new ConfigurationException ( String . format ( " Bad value for system property - D % s . " + 
 + " Please use a value 4 and 31 " , 
 + GENSALT _ LOG2 _ ROUNDS _ PROPERTY ) ) ) ; 
 + return rounds ; 
 + } 
 
 / / name of the hash column . 
 private static final String SALTED _ HASH = " salted _ hash " ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / NativeAccessMBean . java b / src / java / org / apache / cassandra / service / NativeAccessMBean . java 
 new file mode 100644 
 index 0000000 . . 39b96c5 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / service / NativeAccessMBean . java 
 @ @ - 0 , 0 + 1 , 9 @ @ 
 + package org . apache . cassandra . service ; 
 + 
 + public interface NativeAccessMBean 
 + { 
 + boolean isAvailable ( ) ; 
 + 
 + boolean isMemoryLockable ( ) ; 
 + } 
 +
