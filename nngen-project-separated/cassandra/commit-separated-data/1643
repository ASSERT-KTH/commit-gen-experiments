BLEU SCORE: 0.035802380724744266

TEST MSG: merge from 2 . 0
GENERATED MSG: Fix ReconnectableSnitch reconnecting to peers during upgrade

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 6e586a3 . . aa5f235 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 19 , 6 + 19 , 7 @ @ <nl> * Fix anticompaction blocking ANTI _ ENTROPY stage ( CASSANDRA - 9151 ) <nl> * Repair waits for anticompaction to finish ( CASSANDRA - 9097 ) <nl> Merged from 2 . 0 : <nl> + * Fix ReconnectableSnitch reconnecting to peers during upgrade ( CASSANDRA - 6702 ) <nl> * Include keyspace and table name in error log for collections over the size <nl> limit ( CASSANDRA - 9286 ) <nl> * Avoid potential overlap in LCS with single - partition sstables ( CASSANDRA - 9322 ) <nl> diff - - git a / src / java / org / apache / cassandra / locator / ReconnectableSnitchHelper . java b / src / java / org / apache / cassandra / locator / ReconnectableSnitchHelper . java <nl> index e5dbdeb . . 3277af7 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / ReconnectableSnitchHelper . java <nl> + + + b / src / java / org / apache / cassandra / locator / ReconnectableSnitchHelper . java <nl> @ @ - 60 , 7 + 60 , 6 @ @ public class ReconnectableSnitchHelper implements IEndpointStateChangeSubscriber <nl> private void reconnect ( InetAddress publicAddress , InetAddress localAddress ) <nl> { <nl> if ( snitch . getDatacenter ( publicAddress ) . equals ( localDc ) <nl> - & & MessagingService . instance ( ) . getVersion ( publicAddress ) = = MessagingService . current _ version <nl> & & ! MessagingService . instance ( ) . getConnectionPool ( publicAddress ) . endPoint ( ) . equals ( localAddress ) ) <nl> { <nl> MessagingService . instance ( ) . getConnectionPool ( publicAddress ) . reset ( localAddress ) ; <nl> diff - - git a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java <nl> index 08baf89 . . 24560502 100644 <nl> - - - a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java <nl> + + + b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java <nl> @ @ - 130 , 11 + 130 , 14 @ @ public class IncomingTcpConnection extends Thread implements Closeable <nl> { <nl> / / handshake ( true ) endpoint versions <nl> DataOutputStream out = new DataOutputStream ( socket . getOutputStream ( ) ) ; <nl> + / / if this version is < the MS version the other node is trying <nl> + / / to connect with , the other node will disconnect <nl> out . writeInt ( MessagingService . current _ version ) ; <nl> out . flush ( ) ; <nl> DataInputStream in = new DataInputStream ( socket . getInputStream ( ) ) ; <nl> int maxVersion = in . readInt ( ) ; <nl> - <nl> + / / outbound side will reconnect if necessary to upgrade version <nl> + assert version < = MessagingService . current _ version ; <nl> from = CompactEndpointSerializationHelper . deserialize ( in ) ; <nl> / / record the ( true ) version of the endpoint <nl> MessagingService . instance ( ) . setVersion ( from , maxVersion ) ; <nl> @ @ - 161 , 15 + 164 , 6 @ @ public class IncomingTcpConnection extends Thread implements Closeable <nl> in = new DataInputStream ( new BufferedInputStream ( socket . getInputStream ( ) , BUFFER _ SIZE ) ) ; <nl> } <nl> <nl> - if ( version > MessagingService . current _ version ) <nl> - { <nl> - / / save the endpoint so gossip will reconnect to it <nl> - Gossiper . instance . addSavedEndpoint ( from ) ; <nl> - logger . info ( " Received messages from newer protocol version { } . Ignoring " , version ) ; <nl> - return ; <nl> - } <nl> - / / outbound side will reconnect if necessary to upgrade version <nl> - <nl> while ( true ) <nl> { <nl> MessagingService . validateMagic ( in . readInt ( ) ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 6e586a3 . . aa5f235 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 19 , 6 + 19 , 7 @ @ 
 * Fix anticompaction blocking ANTI _ ENTROPY stage ( CASSANDRA - 9151 ) 
 * Repair waits for anticompaction to finish ( CASSANDRA - 9097 ) 
 Merged from 2 . 0 : 
 + * Fix ReconnectableSnitch reconnecting to peers during upgrade ( CASSANDRA - 6702 ) 
 * Include keyspace and table name in error log for collections over the size 
 limit ( CASSANDRA - 9286 ) 
 * Avoid potential overlap in LCS with single - partition sstables ( CASSANDRA - 9322 ) 
 diff - - git a / src / java / org / apache / cassandra / locator / ReconnectableSnitchHelper . java b / src / java / org / apache / cassandra / locator / ReconnectableSnitchHelper . java 
 index e5dbdeb . . 3277af7 100644 
 - - - a / src / java / org / apache / cassandra / locator / ReconnectableSnitchHelper . java 
 + + + b / src / java / org / apache / cassandra / locator / ReconnectableSnitchHelper . java 
 @ @ - 60 , 7 + 60 , 6 @ @ public class ReconnectableSnitchHelper implements IEndpointStateChangeSubscriber 
 private void reconnect ( InetAddress publicAddress , InetAddress localAddress ) 
 { 
 if ( snitch . getDatacenter ( publicAddress ) . equals ( localDc ) 
 - & & MessagingService . instance ( ) . getVersion ( publicAddress ) = = MessagingService . current _ version 
 & & ! MessagingService . instance ( ) . getConnectionPool ( publicAddress ) . endPoint ( ) . equals ( localAddress ) ) 
 { 
 MessagingService . instance ( ) . getConnectionPool ( publicAddress ) . reset ( localAddress ) ; 
 diff - - git a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java 
 index 08baf89 . . 24560502 100644 
 - - - a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java 
 + + + b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java 
 @ @ - 130 , 11 + 130 , 14 @ @ public class IncomingTcpConnection extends Thread implements Closeable 
 { 
 / / handshake ( true ) endpoint versions 
 DataOutputStream out = new DataOutputStream ( socket . getOutputStream ( ) ) ; 
 + / / if this version is < the MS version the other node is trying 
 + / / to connect with , the other node will disconnect 
 out . writeInt ( MessagingService . current _ version ) ; 
 out . flush ( ) ; 
 DataInputStream in = new DataInputStream ( socket . getInputStream ( ) ) ; 
 int maxVersion = in . readInt ( ) ; 
 - 
 + / / outbound side will reconnect if necessary to upgrade version 
 + assert version < = MessagingService . current _ version ; 
 from = CompactEndpointSerializationHelper . deserialize ( in ) ; 
 / / record the ( true ) version of the endpoint 
 MessagingService . instance ( ) . setVersion ( from , maxVersion ) ; 
 @ @ - 161 , 15 + 164 , 6 @ @ public class IncomingTcpConnection extends Thread implements Closeable 
 in = new DataInputStream ( new BufferedInputStream ( socket . getInputStream ( ) , BUFFER _ SIZE ) ) ; 
 } 
 
 - if ( version > MessagingService . current _ version ) 
 - { 
 - / / save the endpoint so gossip will reconnect to it 
 - Gossiper . instance . addSavedEndpoint ( from ) ; 
 - logger . info ( " Received messages from newer protocol version { } . Ignoring " , version ) ; 
 - return ; 
 - } 
 - / / outbound side will reconnect if necessary to upgrade version 
 - 
 while ( true ) 
 { 
 MessagingService . validateMagic ( in . readInt ( ) ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
