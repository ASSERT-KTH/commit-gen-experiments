BLEU SCORE: 0.021721299903135396

TEST MSG: Move handling of migration event source to solve bootstrap race .
GENERATED MSG: Only count compaction as active ( for throttling ) once the compaction lock has been acquired .

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 981f977 . . b2e892e 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 3 + 1 , 6 @ @ <nl> + 1 . 2 . 15 <nl> + * Move handling of migration event source to solve bootstrap race ( CASSANDRA - 6648 ) <nl> + <nl> 1 . 2 . 14 <nl> * Reverted code to limit CQL prepared statement cache by size ( CASSANDRA - 6592 ) <nl> * add cassandra . default _ messaging _ version property to allow easier <nl> diff - - git a / src / java / org / apache / cassandra / service / MigrationManager . java b / src / java / org / apache / cassandra / service / MigrationManager . java <nl> index 3ede35e . . 37d5f43 100644 <nl> - - - a / src / java / org / apache / cassandra / service / MigrationManager . java <nl> + + + b / src / java / org / apache / cassandra / service / MigrationManager . java <nl> @ @ - 50 , 7 + 50 , 7 @ @ import org . apache . cassandra . utils . FBUtilities ; <nl> import org . apache . cassandra . utils . UUIDGen ; <nl> import org . apache . cassandra . utils . WrappedRunnable ; <nl> <nl> - public class MigrationManager implements IEndpointStateChangeSubscriber <nl> + public class MigrationManager <nl> { <nl> private static final Logger logger = LoggerFactory . getLogger ( MigrationManager . class ) ; <nl> <nl> @ @ - 63 , 7 + 63 , 7 @ @ public class MigrationManager implements IEndpointStateChangeSubscriber <nl> public static final int MIGRATION _ DELAY _ IN _ MS = 60000 ; <nl> <nl> private final List < IMigrationListener > listeners = new CopyOnWriteArrayList < IMigrationListener > ( ) ; <nl> - <nl> + <nl> private MigrationManager ( ) { } <nl> <nl> public void register ( IMigrationListener listener ) <nl> @ @ - 76 , 34 + 76 , 14 @ @ public class MigrationManager implements IEndpointStateChangeSubscriber <nl> listeners . remove ( listener ) ; <nl> } <nl> <nl> - public void onJoin ( InetAddress endpoint , EndpointState epState ) <nl> - { } <nl> - <nl> - public void onChange ( InetAddress endpoint , ApplicationState state , VersionedValue value ) <nl> - { <nl> - if ( state ! = ApplicationState . SCHEMA | | endpoint . equals ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> - return ; <nl> - <nl> - maybeScheduleSchemaPull ( UUID . fromString ( value . value ) , endpoint ) ; <nl> - } <nl> - <nl> - public void onAlive ( InetAddress endpoint , EndpointState state ) <nl> + public void scheduleSchemaPull ( InetAddress endpoint , EndpointState state ) <nl> { <nl> VersionedValue value = state . getApplicationState ( ApplicationState . SCHEMA ) ; <nl> <nl> - if ( value ! = null ) <nl> + if ( ! endpoint . equals ( FBUtilities . getBroadcastAddress ( ) ) & & value ! = null ) <nl> maybeScheduleSchemaPull ( UUID . fromString ( value . value ) , endpoint ) ; <nl> } <nl> <nl> - public void onDead ( InetAddress endpoint , EndpointState state ) <nl> - { } <nl> - <nl> - public void onRestart ( InetAddress endpoint , EndpointState state ) <nl> - { } <nl> - <nl> - public void onRemove ( InetAddress endpoint ) <nl> - { } <nl> - <nl> / * * <nl> * If versions differ this node sends request with local migration list to the endpoint <nl> * and expecting to receive a list of migrations to apply locally . <nl> @ @ - 165 , 7 + 145 , 7 @ @ public class MigrationManager implements IEndpointStateChangeSubscriber <nl> <nl> public static boolean isReadyForBootstrap ( ) <nl> { <nl> - return ( ( ThreadPoolExecutor ) StageManager . getStage ( Stage . MIGRATION ) ) . getActiveCount ( ) = = 0 ; <nl> + return Schema . instance . getVersion ( ) ! = null & & ! Schema . emptyVersion . equals ( Schema . instance . getVersion ( ) ) ; <nl> } <nl> <nl> public void notifyCreateKeyspace ( KSMetaData ksm ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index c4b1b2e . . fa43154 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 185 , 8 + 185 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> private static enum Mode { NORMAL , CLIENT , JOINING , LEAVING , DECOMMISSIONED , MOVING , DRAINING , DRAINED , RELOCATING } <nl> private Mode operationMode ; <nl> <nl> - private final MigrationManager migrationManager = MigrationManager . instance ; <nl> - <nl> / * Used for tracking drain progress * / <nl> private volatile int totalCFs , remainingCFs ; <nl> <nl> @ @ - 376 , 7 + 374 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> <nl> public void stopClient ( ) <nl> { <nl> - Gossiper . instance . unregister ( migrationManager ) ; <nl> Gossiper . instance . unregister ( this ) ; <nl> Gossiper . instance . stop ( ) ; <nl> MessagingService . instance ( ) . shutdown ( ) ; <nl> @ @ - 464 , 7 + 461 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> logger . info ( " Starting up client gossip " ) ; <nl> setMode ( Mode . CLIENT , false ) ; <nl> Gossiper . instance . register ( this ) ; <nl> - Gossiper . instance . register ( migrationManager ) ; <nl> Gossiper . instance . start ( ( int ) ( System . currentTimeMillis ( ) / 1000 ) ) ; / / needed for node - ring gathering . <nl> Gossiper . instance . addLocalApplicationState ( ApplicationState . NET _ VERSION , valueFactory . networkVersion ( ) ) ; <nl> <nl> @ @ - 620 , 7 + 616 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> appStates . put ( ApplicationState . RELEASE _ VERSION , valueFactory . releaseVersion ( ) ) ; <nl> logger . info ( " Starting up server gossip " ) ; <nl> Gossiper . instance . register ( this ) ; <nl> - Gossiper . instance . register ( migrationManager ) ; <nl> Gossiper . instance . start ( SystemTable . incrementAndGetGeneration ( ) , appStates ) ; / / needed for node - ring gathering . <nl> / / gossip snitch infos ( local DC and rack ) <nl> gossipSnitchInfo ( ) ; <nl> @ @ - 1981 , 6 + 1976 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> { <nl> onChange ( endpoint , entry . getKey ( ) , entry . getValue ( ) ) ; <nl> } <nl> + MigrationManager . instance . scheduleSchemaPull ( endpoint , epState ) ; <nl> } <nl> <nl> public void onAlive ( InetAddress endpoint , EndpointState state ) <nl> @ @ - 1999 , 6 + 1995 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) <nl> subscriber . onJoinCluster ( endpoint ) ; <nl> } <nl> + MigrationManager . instance . scheduleSchemaPull ( endpoint , state ) ; <nl> } <nl> <nl> public void onRemove ( InetAddress endpoint )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 2a80fb1 . . 6db56a7 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 3 + 1 , 9 @ @ <nl> + 1 . 0 . 1 <nl> + * Fix handling of tombstone by SSTableExport / Import ( CASSANDRA - 3357 ) <nl> + * Only count compaction as active ( for throttling ) when they have <nl> + successfully acquired the compaction lock ( CASSANDRA - 3344 ) <nl> + <nl> + <nl> 1 . 0 . 0 - final <nl> * close scrubbed sstable fd before deleting it ( CASSANDRA - 3318 ) <nl> * fix bug preventing obsolete commitlog segments from being removed <nl> @ @ - 30 , 7 + 36 , 6 @ @ Fixes merged from 0 . 8 below : <nl> * Nodetool no longer leaks threads and closes JMX connections ( CASSANDRA - 3309 ) <nl> * fix truncate allowing data to be replayed post - restart ( CASSANDRA - 3297 ) <nl> * Move SimpleAuthority and SimpleAuthenticator to examples ( CASSANDRA - 2922 ) <nl> - * Fix handling of tombstone by SSTableExport / Import ( CASSANDRA - 3357 ) <nl> <nl> <nl> 1 . 0 . 0 - rc2 <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> index 020c6ff . . d462053 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> @ @ - 959 , 7 + 959 , 7 @ @ public class CompactionManager implements CompactionManagerMBean <nl> <nl> public int getActiveCompactions ( ) <nl> { <nl> - return executor . getActiveCount ( ) + validationExecutor . getActiveCount ( ) ; <nl> + return CompactionExecutor . compactions . size ( ) ; <nl> } <nl> <nl> private static class CompactionExecutor extends DebuggableThreadPoolExecutor implements CompactionExecutorStatsCollector

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 981f977 . . b2e892e 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 3 + 1 , 6 @ @ 
 + 1 . 2 . 15 
 + * Move handling of migration event source to solve bootstrap race ( CASSANDRA - 6648 ) 
 + 
 1 . 2 . 14 
 * Reverted code to limit CQL prepared statement cache by size ( CASSANDRA - 6592 ) 
 * add cassandra . default _ messaging _ version property to allow easier 
 diff - - git a / src / java / org / apache / cassandra / service / MigrationManager . java b / src / java / org / apache / cassandra / service / MigrationManager . java 
 index 3ede35e . . 37d5f43 100644 
 - - - a / src / java / org / apache / cassandra / service / MigrationManager . java 
 + + + b / src / java / org / apache / cassandra / service / MigrationManager . java 
 @ @ - 50 , 7 + 50 , 7 @ @ import org . apache . cassandra . utils . FBUtilities ; 
 import org . apache . cassandra . utils . UUIDGen ; 
 import org . apache . cassandra . utils . WrappedRunnable ; 
 
 - public class MigrationManager implements IEndpointStateChangeSubscriber 
 + public class MigrationManager 
 { 
 private static final Logger logger = LoggerFactory . getLogger ( MigrationManager . class ) ; 
 
 @ @ - 63 , 7 + 63 , 7 @ @ public class MigrationManager implements IEndpointStateChangeSubscriber 
 public static final int MIGRATION _ DELAY _ IN _ MS = 60000 ; 
 
 private final List < IMigrationListener > listeners = new CopyOnWriteArrayList < IMigrationListener > ( ) ; 
 - 
 + 
 private MigrationManager ( ) { } 
 
 public void register ( IMigrationListener listener ) 
 @ @ - 76 , 34 + 76 , 14 @ @ public class MigrationManager implements IEndpointStateChangeSubscriber 
 listeners . remove ( listener ) ; 
 } 
 
 - public void onJoin ( InetAddress endpoint , EndpointState epState ) 
 - { } 
 - 
 - public void onChange ( InetAddress endpoint , ApplicationState state , VersionedValue value ) 
 - { 
 - if ( state ! = ApplicationState . SCHEMA | | endpoint . equals ( FBUtilities . getBroadcastAddress ( ) ) ) 
 - return ; 
 - 
 - maybeScheduleSchemaPull ( UUID . fromString ( value . value ) , endpoint ) ; 
 - } 
 - 
 - public void onAlive ( InetAddress endpoint , EndpointState state ) 
 + public void scheduleSchemaPull ( InetAddress endpoint , EndpointState state ) 
 { 
 VersionedValue value = state . getApplicationState ( ApplicationState . SCHEMA ) ; 
 
 - if ( value ! = null ) 
 + if ( ! endpoint . equals ( FBUtilities . getBroadcastAddress ( ) ) & & value ! = null ) 
 maybeScheduleSchemaPull ( UUID . fromString ( value . value ) , endpoint ) ; 
 } 
 
 - public void onDead ( InetAddress endpoint , EndpointState state ) 
 - { } 
 - 
 - public void onRestart ( InetAddress endpoint , EndpointState state ) 
 - { } 
 - 
 - public void onRemove ( InetAddress endpoint ) 
 - { } 
 - 
 / * * 
 * If versions differ this node sends request with local migration list to the endpoint 
 * and expecting to receive a list of migrations to apply locally . 
 @ @ - 165 , 7 + 145 , 7 @ @ public class MigrationManager implements IEndpointStateChangeSubscriber 
 
 public static boolean isReadyForBootstrap ( ) 
 { 
 - return ( ( ThreadPoolExecutor ) StageManager . getStage ( Stage . MIGRATION ) ) . getActiveCount ( ) = = 0 ; 
 + return Schema . instance . getVersion ( ) ! = null & & ! Schema . emptyVersion . equals ( Schema . instance . getVersion ( ) ) ; 
 } 
 
 public void notifyCreateKeyspace ( KSMetaData ksm ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index c4b1b2e . . fa43154 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 185 , 8 + 185 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 private static enum Mode { NORMAL , CLIENT , JOINING , LEAVING , DECOMMISSIONED , MOVING , DRAINING , DRAINED , RELOCATING } 
 private Mode operationMode ; 
 
 - private final MigrationManager migrationManager = MigrationManager . instance ; 
 - 
 / * Used for tracking drain progress * / 
 private volatile int totalCFs , remainingCFs ; 
 
 @ @ - 376 , 7 + 374 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 
 public void stopClient ( ) 
 { 
 - Gossiper . instance . unregister ( migrationManager ) ; 
 Gossiper . instance . unregister ( this ) ; 
 Gossiper . instance . stop ( ) ; 
 MessagingService . instance ( ) . shutdown ( ) ; 
 @ @ - 464 , 7 + 461 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 logger . info ( " Starting up client gossip " ) ; 
 setMode ( Mode . CLIENT , false ) ; 
 Gossiper . instance . register ( this ) ; 
 - Gossiper . instance . register ( migrationManager ) ; 
 Gossiper . instance . start ( ( int ) ( System . currentTimeMillis ( ) / 1000 ) ) ; / / needed for node - ring gathering . 
 Gossiper . instance . addLocalApplicationState ( ApplicationState . NET _ VERSION , valueFactory . networkVersion ( ) ) ; 
 
 @ @ - 620 , 7 + 616 , 6 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 appStates . put ( ApplicationState . RELEASE _ VERSION , valueFactory . releaseVersion ( ) ) ; 
 logger . info ( " Starting up server gossip " ) ; 
 Gossiper . instance . register ( this ) ; 
 - Gossiper . instance . register ( migrationManager ) ; 
 Gossiper . instance . start ( SystemTable . incrementAndGetGeneration ( ) , appStates ) ; / / needed for node - ring gathering . 
 / / gossip snitch infos ( local DC and rack ) 
 gossipSnitchInfo ( ) ; 
 @ @ - 1981 , 6 + 1976 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 { 
 onChange ( endpoint , entry . getKey ( ) , entry . getValue ( ) ) ; 
 } 
 + MigrationManager . instance . scheduleSchemaPull ( endpoint , epState ) ; 
 } 
 
 public void onAlive ( InetAddress endpoint , EndpointState state ) 
 @ @ - 1999 , 6 + 1995 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) 
 subscriber . onJoinCluster ( endpoint ) ; 
 } 
 + MigrationManager . instance . scheduleSchemaPull ( endpoint , state ) ; 
 } 
 
 public void onRemove ( InetAddress endpoint )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 2a80fb1 . . 6db56a7 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 3 + 1 , 9 @ @ 
 + 1 . 0 . 1 
 + * Fix handling of tombstone by SSTableExport / Import ( CASSANDRA - 3357 ) 
 + * Only count compaction as active ( for throttling ) when they have 
 + successfully acquired the compaction lock ( CASSANDRA - 3344 ) 
 + 
 + 
 1 . 0 . 0 - final 
 * close scrubbed sstable fd before deleting it ( CASSANDRA - 3318 ) 
 * fix bug preventing obsolete commitlog segments from being removed 
 @ @ - 30 , 7 + 36 , 6 @ @ Fixes merged from 0 . 8 below : 
 * Nodetool no longer leaks threads and closes JMX connections ( CASSANDRA - 3309 ) 
 * fix truncate allowing data to be replayed post - restart ( CASSANDRA - 3297 ) 
 * Move SimpleAuthority and SimpleAuthenticator to examples ( CASSANDRA - 2922 ) 
 - * Fix handling of tombstone by SSTableExport / Import ( CASSANDRA - 3357 ) 
 
 
 1 . 0 . 0 - rc2 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 index 020c6ff . . d462053 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 @ @ - 959 , 7 + 959 , 7 @ @ public class CompactionManager implements CompactionManagerMBean 
 
 public int getActiveCompactions ( ) 
 { 
 - return executor . getActiveCount ( ) + validationExecutor . getActiveCount ( ) ; 
 + return CompactionExecutor . compactions . size ( ) ; 
 } 
 
 private static class CompactionExecutor extends DebuggableThreadPoolExecutor implements CompactionExecutorStatsCollector
