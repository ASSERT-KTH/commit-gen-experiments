BLEU SCORE: 0.13134549472120793

TEST MSG: cqlsh : Display milliseconds when datetime overflows
GENERATED MSG: cqlsh : add support for multiline comments

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index ae9d545 . . f0aa996 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 39 , 6 + 39 , 7 @ @ Merged from 2 . 1 : <nl> * Avoid major compaction mixing repaired and unrepaired sstables in DTCS ( CASSANDRA - 11113 ) <nl> * Make it clear what DTCS timestamp _ resolution is used for ( CASSANDRA - 11041 ) <nl> * ( cqlsh ) Support timezone conversion using pytz ( CASSANDRA - 10397 ) <nl> + * ( cqlsh ) Display milliseconds when datetime overflows ( CASSANDRA - 10625 ) <nl> <nl> <nl> 3 . 0 . 3 <nl> diff - - git a / bin / cqlsh . py b / bin / cqlsh . py <nl> index 6cc98c3 . . a4dd253 100644 <nl> - - - a / bin / cqlsh . py <nl> + + + b / bin / cqlsh . py <nl> @ @ - 148 , 10 + 148 , 13 @ @ except ImportError , e : <nl> <nl> from cassandra . auth import PlainTextAuthProvider <nl> from cassandra . cluster import Cluster <nl> + from cassandra . marshal import int64 _ unpack <nl> from cassandra . metadata import ( ColumnMetadata , KeyspaceMetadata , <nl> TableMetadata , protect _ name , protect _ names ) <nl> from cassandra . policies import WhiteListRoundRobinPolicy <nl> from cassandra . query import SimpleStatement , ordered _ dict _ factory , TraceUnavailable <nl> + from cassandra . type _ codes import DateType <nl> + from cassandra . util import datetime _ from _ timestamp <nl> <nl> # cqlsh should run correctly when run out of a Cassandra source tree , <nl> # out of an unpacked Cassandra tarball , and after a proper package install . <nl> @ @ - 600 , 10 + 603 , 24 @ @ def insert _ driver _ hooks ( ) : <nl> <nl> <nl> def extend _ cql _ deserialization ( ) : <nl> - " " " <nl> - The python driver returns BLOBs as string , but we expect them as bytearrays <nl> - " " " <nl> + # The python driver returns BLOBs as string , but we expect them as bytearrays <nl> cassandra . cqltypes . BytesType . deserialize = staticmethod ( lambda byts , protocol _ version : bytearray ( byts ) ) <nl> + <nl> + class DateOverFlowWarning ( RuntimeWarning ) : <nl> + pass <nl> + <nl> + # Native datetime types blow up outside of datetime . [ MIN | MAX ] _ YEAR . We will fall back to an int timestamp <nl> + def deserialize _ date _ fallback _ int ( byts , protocol _ version ) : <nl> + timestamp _ ms = int64 _ unpack ( byts ) <nl> + try : <nl> + return datetime _ from _ timestamp ( timestamp _ ms / 1000 . 0 ) <nl> + except OverflowError : <nl> + warnings . warn ( DateOverFlowWarning ( " Some timestamps are larger than Python datetime can represent . Timestamps are displayed in milliseconds from epoch . " ) ) <nl> + return timestamp _ ms <nl> + <nl> + cassandra . cqltypes . DateType . deserialize = staticmethod ( deserialize _ date _ fallback _ int ) <nl> + <nl> + # Return cassandra . cqltypes . EMPTY instead of None for empty values <nl> cassandra . cqltypes . CassandraType . support _ empty _ values = True <nl> <nl>
NEAREST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 92f18f8 . . 7140611 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 365 , 7 + 365 , 9 @ @ <nl> < dependency groupId = " org . apache . rat " artifactId = " apache - rat " version = " 0 . 6 " > <nl> < exclusion groupId = " commons - lang " artifactId = " commons - lang " / > <nl> < / dependency > <nl> - < dependency groupId = " org . apache . hadoop " artifactId = " hadoop - core " version = " 1 . 0 . 3 " / > <nl> + < dependency groupId = " org . apache . hadoop " artifactId = " hadoop - core " version = " 1 . 0 . 3 " > <nl> + 	 < exclusion groupId = " org . mortbay . jetty " artifactId = " servlet - api " / > <nl> + < / dependency > <nl> < dependency groupId = " org . apache . pig " artifactId = " pig " version = " 0 . 10 . 0 " / > <nl> < dependency groupId = " net . java . dev . jna " artifactId = " jna " version = " 3 . 2 . 7 " / > <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index ae9d545 . . f0aa996 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 39 , 6 + 39 , 7 @ @ Merged from 2 . 1 : 
 * Avoid major compaction mixing repaired and unrepaired sstables in DTCS ( CASSANDRA - 11113 ) 
 * Make it clear what DTCS timestamp _ resolution is used for ( CASSANDRA - 11041 ) 
 * ( cqlsh ) Support timezone conversion using pytz ( CASSANDRA - 10397 ) 
 + * ( cqlsh ) Display milliseconds when datetime overflows ( CASSANDRA - 10625 ) 
 
 
 3 . 0 . 3 
 diff - - git a / bin / cqlsh . py b / bin / cqlsh . py 
 index 6cc98c3 . . a4dd253 100644 
 - - - a / bin / cqlsh . py 
 + + + b / bin / cqlsh . py 
 @ @ - 148 , 10 + 148 , 13 @ @ except ImportError , e : 
 
 from cassandra . auth import PlainTextAuthProvider 
 from cassandra . cluster import Cluster 
 + from cassandra . marshal import int64 _ unpack 
 from cassandra . metadata import ( ColumnMetadata , KeyspaceMetadata , 
 TableMetadata , protect _ name , protect _ names ) 
 from cassandra . policies import WhiteListRoundRobinPolicy 
 from cassandra . query import SimpleStatement , ordered _ dict _ factory , TraceUnavailable 
 + from cassandra . type _ codes import DateType 
 + from cassandra . util import datetime _ from _ timestamp 
 
 # cqlsh should run correctly when run out of a Cassandra source tree , 
 # out of an unpacked Cassandra tarball , and after a proper package install . 
 @ @ - 600 , 10 + 603 , 24 @ @ def insert _ driver _ hooks ( ) : 
 
 
 def extend _ cql _ deserialization ( ) : 
 - " " " 
 - The python driver returns BLOBs as string , but we expect them as bytearrays 
 - " " " 
 + # The python driver returns BLOBs as string , but we expect them as bytearrays 
 cassandra . cqltypes . BytesType . deserialize = staticmethod ( lambda byts , protocol _ version : bytearray ( byts ) ) 
 + 
 + class DateOverFlowWarning ( RuntimeWarning ) : 
 + pass 
 + 
 + # Native datetime types blow up outside of datetime . [ MIN | MAX ] _ YEAR . We will fall back to an int timestamp 
 + def deserialize _ date _ fallback _ int ( byts , protocol _ version ) : 
 + timestamp _ ms = int64 _ unpack ( byts ) 
 + try : 
 + return datetime _ from _ timestamp ( timestamp _ ms / 1000 . 0 ) 
 + except OverflowError : 
 + warnings . warn ( DateOverFlowWarning ( " Some timestamps are larger than Python datetime can represent . Timestamps are displayed in milliseconds from epoch . " ) ) 
 + return timestamp _ ms 
 + 
 + cassandra . cqltypes . DateType . deserialize = staticmethod ( deserialize _ date _ fallback _ int ) 
 + 
 + # Return cassandra . cqltypes . EMPTY instead of None for empty values 
 cassandra . cqltypes . CassandraType . support _ empty _ values = True 
 


NEAREST DIFF:
diff - - git a / build . xml b / build . xml 
 index 92f18f8 . . 7140611 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 365 , 7 + 365 , 9 @ @ 
 < dependency groupId = " org . apache . rat " artifactId = " apache - rat " version = " 0 . 6 " > 
 < exclusion groupId = " commons - lang " artifactId = " commons - lang " / > 
 < / dependency > 
 - < dependency groupId = " org . apache . hadoop " artifactId = " hadoop - core " version = " 1 . 0 . 3 " / > 
 + < dependency groupId = " org . apache . hadoop " artifactId = " hadoop - core " version = " 1 . 0 . 3 " > 
 + 	 < exclusion groupId = " org . mortbay . jetty " artifactId = " servlet - api " / > 
 + < / dependency > 
 < dependency groupId = " org . apache . pig " artifactId = " pig " version = " 0 . 10 . 0 " / > 
 < dependency groupId = " net . java . dev . jna " artifactId = " jna " version = " 3 . 2 . 7 " / > 

