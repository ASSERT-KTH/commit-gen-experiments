BLEU SCORE: 0.01908840668714524

TEST MSG: Use real node messaging versions for schema exchange decisions
GENERATED MSG: p / 4443 / 050 _ process _ queued _ xfers

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index de7c307 . . 872934a 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 6 , 6 + 6 , 7 @ @ <nl> * Compact hints after partial replay to clean out tombstones ( CASSANDRA - 6666 ) <nl> * Log USING TTL / TIMESTAMP in a counter update warning ( CASSANDRA - 6649 ) <nl> * Don ' t exchange schema between nodes with different versions ( CASSANDRA - 6695 ) <nl> + * Use real node messaging versions for schema exchange decisions ( CASSANDRA - 6700 ) <nl> <nl> <nl> 1 . 2 . 15 <nl> diff - - git a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java <nl> index 3b24a7f . . d0126c7 100644 <nl> - - - a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java <nl> + + + b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java <nl> @ @ - 130 , 8 + 130 , 8 @ @ public class IncomingTcpConnection extends Thread <nl> logger . info ( " Received messages from newer protocol version { } . Ignoring " , version ) ; <nl> return ; <nl> } <nl> - MessagingService . instance ( ) . setVersion ( from , Math . min ( MessagingService . current _ version , maxVersion ) ) ; <nl> - logger . debug ( " set version for { } to { } " , from , Math . min ( MessagingService . current _ version , maxVersion ) ) ; <nl> + MessagingService . instance ( ) . setVersion ( from , maxVersion ) ; <nl> + logger . debug ( " Set version for { } to { } ( will use { } ) " , from , maxVersion , Math . min ( MessagingService . current _ version , maxVersion ) ) ; <nl> / / outbound side will reconnect if necessary to upgrade version <nl> <nl> while ( true ) <nl> diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java <nl> index bfc3957 . . 09fa272 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessagingService . java <nl> + + + b / src / java / org / apache / cassandra / net / MessagingService . java <nl> @ @ - 800 , 10 + 800 , 10 @ @ public final class MessagingService implements MessagingServiceMBean <nl> / * * <nl> * @ return the last version associated with address , or @ param version if this is the first such version <nl> * / <nl> - public int setVersion ( InetAddress address , int version ) <nl> + public int setVersion ( InetAddress endpoint , int version ) <nl> { <nl> - logger . debug ( " Setting version { } for { } " , version , address ) ; <nl> - Integer v = versions . put ( address , version ) ; <nl> + logger . debug ( " Setting version { } for { } " , version , endpoint ) ; <nl> + Integer v = versions . put ( endpoint , version ) ; <nl> return v = = null ? version : v ; <nl> } <nl> <nl> @ @ - 813 , 27 + 813 , 35 @ @ public final class MessagingService implements MessagingServiceMBean <nl> versions . remove ( endpoint ) ; <nl> } <nl> <nl> - public Integer getVersion ( InetAddress address ) <nl> + public int getVersion ( InetAddress endpoint ) <nl> { <nl> - Integer v = versions . get ( address ) ; <nl> + Integer v = versions . get ( endpoint ) ; <nl> if ( v = = null ) <nl> { <nl> / / we don ' t know the version . assume current . we ' ll know soon enough if that was incorrect . <nl> - logger . trace ( " Assuming current protocol version for { } " , address ) ; <nl> + logger . trace ( " Assuming current protocol version for { } " , endpoint ) ; <nl> return MessagingService . current _ version ; <nl> } <nl> else <nl> - return v ; <nl> + return Math . min ( v , MessagingService . current _ version ) ; <nl> } <nl> <nl> - public int getVersion ( String address ) throws UnknownHostException <nl> + public int getVersion ( String endpoint ) throws UnknownHostException <nl> { <nl> - return getVersion ( InetAddress . getByName ( address ) ) ; <nl> + return getVersion ( InetAddress . getByName ( endpoint ) ) ; <nl> + } <nl> + <nl> + public int getRawVersion ( InetAddress endpoint ) <nl> + { <nl> + Integer v = versions . get ( endpoint ) ; <nl> + if ( v = = null ) <nl> + throw new IllegalStateException ( " getRawVersion ( ) was called without checking knowsVersion ( ) result first " ) ; <nl> + return v ; <nl> } <nl> <nl> public boolean knowsVersion ( InetAddress endpoint ) <nl> { <nl> - return versions . get ( endpoint ) ! = null ; <nl> + return versions . containsKey ( endpoint ) ; <nl> } <nl> <nl> public void incrementDroppedMessages ( Verb verb ) <nl> diff - - git a / src / java / org / apache / cassandra / service / MigrationManager . java b / src / java / org / apache / cassandra / service / MigrationManager . java <nl> index 68d0bad . . 584415d 100644 <nl> - - - a / src / java / org / apache / cassandra / service / MigrationManager . java <nl> + + + b / src / java / org / apache / cassandra / service / MigrationManager . java <nl> @ @ - 138 , 7 + 138 , 7 @ @ public class MigrationManager <nl> * Don ' t request schema from fat clients <nl> * / <nl> return MessagingService . instance ( ) . knowsVersion ( endpoint ) <nl> - & & MessagingService . instance ( ) . getVersion ( endpoint ) = = MessagingService . current _ version <nl> + & & MessagingService . instance ( ) . getRawVersion ( endpoint ) = = MessagingService . current _ version <nl> & & ! Gossiper . instance . isFatClient ( endpoint ) ; <nl> } <nl> <nl> @ @ - 292 , 7 + 292 , 7 @ @ public class MigrationManager <nl> / / only push schema to nodes with known and equal versions <nl> if ( ! endpoint . equals ( FBUtilities . getBroadcastAddress ( ) ) & & <nl> MessagingService . instance ( ) . knowsVersion ( endpoint ) & & <nl> - MessagingService . instance ( ) . getVersion ( endpoint ) = = MessagingService . current _ version ) <nl> + MessagingService . instance ( ) . getRawVersion ( endpoint ) = = MessagingService . current _ version ) <nl> pushSchemaMutation ( endpoint , schema ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / bin / cqlsh b / bin / cqlsh <nl> index 3bef142 . . 5f99e45 100755 <nl> - - - a / bin / cqlsh <nl> + + + b / bin / cqlsh <nl> @ @ - 2690 , 7 + 2690 , 7 @ @ def setup _ cqlruleset ( cqlmodule ) : <nl> def main ( options , hostname , port ) : <nl> setup _ cqlruleset ( options . cqlmodule ) <nl> <nl> - if os . path . exists ( HISTORY ) and readline is not None : <nl> + if os . path . exists ( HISTORY ) and readline is not None and readline . get _ history _ length ( ) > 0 : <nl> readline . read _ history _ file ( HISTORY ) <nl> delims = readline . get _ completer _ delims ( ) <nl> delims . replace ( " ' " , " " )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index de7c307 . . 872934a 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 6 , 6 + 6 , 7 @ @ 
 * Compact hints after partial replay to clean out tombstones ( CASSANDRA - 6666 ) 
 * Log USING TTL / TIMESTAMP in a counter update warning ( CASSANDRA - 6649 ) 
 * Don ' t exchange schema between nodes with different versions ( CASSANDRA - 6695 ) 
 + * Use real node messaging versions for schema exchange decisions ( CASSANDRA - 6700 ) 
 
 
 1 . 2 . 15 
 diff - - git a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java 
 index 3b24a7f . . d0126c7 100644 
 - - - a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java 
 + + + b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java 
 @ @ - 130 , 8 + 130 , 8 @ @ public class IncomingTcpConnection extends Thread 
 logger . info ( " Received messages from newer protocol version { } . Ignoring " , version ) ; 
 return ; 
 } 
 - MessagingService . instance ( ) . setVersion ( from , Math . min ( MessagingService . current _ version , maxVersion ) ) ; 
 - logger . debug ( " set version for { } to { } " , from , Math . min ( MessagingService . current _ version , maxVersion ) ) ; 
 + MessagingService . instance ( ) . setVersion ( from , maxVersion ) ; 
 + logger . debug ( " Set version for { } to { } ( will use { } ) " , from , maxVersion , Math . min ( MessagingService . current _ version , maxVersion ) ) ; 
 / / outbound side will reconnect if necessary to upgrade version 
 
 while ( true ) 
 diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java 
 index bfc3957 . . 09fa272 100644 
 - - - a / src / java / org / apache / cassandra / net / MessagingService . java 
 + + + b / src / java / org / apache / cassandra / net / MessagingService . java 
 @ @ - 800 , 10 + 800 , 10 @ @ public final class MessagingService implements MessagingServiceMBean 
 / * * 
 * @ return the last version associated with address , or @ param version if this is the first such version 
 * / 
 - public int setVersion ( InetAddress address , int version ) 
 + public int setVersion ( InetAddress endpoint , int version ) 
 { 
 - logger . debug ( " Setting version { } for { } " , version , address ) ; 
 - Integer v = versions . put ( address , version ) ; 
 + logger . debug ( " Setting version { } for { } " , version , endpoint ) ; 
 + Integer v = versions . put ( endpoint , version ) ; 
 return v = = null ? version : v ; 
 } 
 
 @ @ - 813 , 27 + 813 , 35 @ @ public final class MessagingService implements MessagingServiceMBean 
 versions . remove ( endpoint ) ; 
 } 
 
 - public Integer getVersion ( InetAddress address ) 
 + public int getVersion ( InetAddress endpoint ) 
 { 
 - Integer v = versions . get ( address ) ; 
 + Integer v = versions . get ( endpoint ) ; 
 if ( v = = null ) 
 { 
 / / we don ' t know the version . assume current . we ' ll know soon enough if that was incorrect . 
 - logger . trace ( " Assuming current protocol version for { } " , address ) ; 
 + logger . trace ( " Assuming current protocol version for { } " , endpoint ) ; 
 return MessagingService . current _ version ; 
 } 
 else 
 - return v ; 
 + return Math . min ( v , MessagingService . current _ version ) ; 
 } 
 
 - public int getVersion ( String address ) throws UnknownHostException 
 + public int getVersion ( String endpoint ) throws UnknownHostException 
 { 
 - return getVersion ( InetAddress . getByName ( address ) ) ; 
 + return getVersion ( InetAddress . getByName ( endpoint ) ) ; 
 + } 
 + 
 + public int getRawVersion ( InetAddress endpoint ) 
 + { 
 + Integer v = versions . get ( endpoint ) ; 
 + if ( v = = null ) 
 + throw new IllegalStateException ( " getRawVersion ( ) was called without checking knowsVersion ( ) result first " ) ; 
 + return v ; 
 } 
 
 public boolean knowsVersion ( InetAddress endpoint ) 
 { 
 - return versions . get ( endpoint ) ! = null ; 
 + return versions . containsKey ( endpoint ) ; 
 } 
 
 public void incrementDroppedMessages ( Verb verb ) 
 diff - - git a / src / java / org / apache / cassandra / service / MigrationManager . java b / src / java / org / apache / cassandra / service / MigrationManager . java 
 index 68d0bad . . 584415d 100644 
 - - - a / src / java / org / apache / cassandra / service / MigrationManager . java 
 + + + b / src / java / org / apache / cassandra / service / MigrationManager . java 
 @ @ - 138 , 7 + 138 , 7 @ @ public class MigrationManager 
 * Don ' t request schema from fat clients 
 * / 
 return MessagingService . instance ( ) . knowsVersion ( endpoint ) 
 - & & MessagingService . instance ( ) . getVersion ( endpoint ) = = MessagingService . current _ version 
 + & & MessagingService . instance ( ) . getRawVersion ( endpoint ) = = MessagingService . current _ version 
 & & ! Gossiper . instance . isFatClient ( endpoint ) ; 
 } 
 
 @ @ - 292 , 7 + 292 , 7 @ @ public class MigrationManager 
 / / only push schema to nodes with known and equal versions 
 if ( ! endpoint . equals ( FBUtilities . getBroadcastAddress ( ) ) & & 
 MessagingService . instance ( ) . knowsVersion ( endpoint ) & & 
 - MessagingService . instance ( ) . getVersion ( endpoint ) = = MessagingService . current _ version ) 
 + MessagingService . instance ( ) . getRawVersion ( endpoint ) = = MessagingService . current _ version ) 
 pushSchemaMutation ( endpoint , schema ) ; 
 } 


NEAREST DIFF:
diff - - git a / bin / cqlsh b / bin / cqlsh 
 index 3bef142 . . 5f99e45 100755 
 - - - a / bin / cqlsh 
 + + + b / bin / cqlsh 
 @ @ - 2690 , 7 + 2690 , 7 @ @ def setup _ cqlruleset ( cqlmodule ) : 
 def main ( options , hostname , port ) : 
 setup _ cqlruleset ( options . cqlmodule ) 
 
 - if os . path . exists ( HISTORY ) and readline is not None : 
 + if os . path . exists ( HISTORY ) and readline is not None and readline . get _ history _ length ( ) > 0 : 
 readline . read _ history _ file ( HISTORY ) 
 delims = readline . get _ completer _ delims ( ) 
 delims . replace ( " ' " , " " )
