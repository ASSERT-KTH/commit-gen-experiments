BLEU SCORE: 0.040583489434387374

TEST MSG: Remove tmplink files for offline compactions
GENERATED MSG: merge from 0 . 7

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 3545afc . . 2e74a15 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 3 <nl> + * Remove tmplink files for offline compactions ( CASSANDRA - 8321 ) <nl> * Reduce maxHintsInProgress ( CASSANDRA - 8415 ) <nl> * BTree updates may call provided update function twice ( CASSANDRA - 8018 ) <nl> * Release sstable references after anticompaction ( CASSANDRA - 8386 ) <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java <nl> index d187e9d . . f9d2fe4 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java <nl> @ @ - 190 , 9 + 190 , 15 @ @ public class SSTableRewriter <nl> <nl> for ( Pair < SSTableWriter , SSTableReader > w : finishedWriters ) <nl> { <nl> - / / we should close the bloom filter if we have not opened an sstable reader from this <nl> - / / writer ( it will get closed when we release the sstable reference below ) : <nl> + / / we should close the bloom filter if we have not opened an sstable reader from this <nl> + / / writer ( it will get closed when we release the sstable reference below ) : <nl> w . left . abort ( w . right = = null ) ; <nl> + if ( isOffline & & w . right ! = null ) <nl> + { <nl> + / / the pairs get removed from finishedWriters when they are closedAndOpened in finish ( ) , the ones left need to be removed here : <nl> + w . right . markObsolete ( ) ; <nl> + w . right . releaseReference ( ) ; <nl> + } <nl> } <nl> <nl> / / also remove already completed SSTables <nl> @ @ - 344 , 7 + 350 , 15 @ @ public class SSTableRewriter <nl> finished . add ( newReader ) ; <nl> <nl> if ( w . right ! = null ) <nl> + { <nl> w . right . sharesBfWith ( newReader ) ; <nl> + if ( isOffline ) <nl> + { <nl> + / / remove the tmplink files if we are offline - no one is using them <nl> + w . right . markObsolete ( ) ; <nl> + w . right . releaseReference ( ) ; <nl> + } <nl> + } <nl> / / w . right is the tmplink - reader we added when switching writer , replace with the real sstable . <nl> toReplace . add ( Pair . create ( w . right , newReader ) ) ; <nl> } <nl> @ @ - 356 , 11 + 370 , 10 @ @ public class SSTableRewriter <nl> it . remove ( ) ; <nl> } <nl> <nl> - for ( Pair < SSTableReader , SSTableReader > replace : toReplace ) <nl> - replaceEarlyOpenedFile ( replace . left , replace . right ) ; <nl> - <nl> if ( ! isOffline ) <nl> { <nl> + for ( Pair < SSTableReader , SSTableReader > replace : toReplace ) <nl> + replaceEarlyOpenedFile ( replace . left , replace . right ) ; <nl> dataTracker . unmarkCompacting ( finished ) ; <nl> } <nl> return finished ; <nl> @ @ - 382 , 8 + 395 , 16 @ @ public class SSTableRewriter <nl> { <nl> SSTableReader newReader = w . left . closeAndOpenReader ( maxAge ) ; <nl> finished . add ( newReader ) ; <nl> + <nl> if ( w . right ! = null ) <nl> + { <nl> w . right . sharesBfWith ( newReader ) ; <nl> + if ( isOffline ) <nl> + { <nl> + w . right . markObsolete ( ) ; <nl> + w . right . releaseReference ( ) ; <nl> + } <nl> + } <nl> / / w . right is the tmplink - reader we added when switching writer , replace with the real sstable . <nl> toReplace . add ( Pair . create ( w . right , newReader ) ) ; <nl> } <nl> diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java <nl> index 0a76b66 . . c0a017e 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java <nl> + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java <nl> @ @ - 43 , 6 + 43 , 7 @ @ import org . apache . cassandra . db . compaction . CompactionController ; <nl> import org . apache . cassandra . db . compaction . ICompactionScanner ; <nl> import org . apache . cassandra . db . compaction . LazilyCompactedRow ; <nl> import org . apache . cassandra . db . compaction . OperationType ; <nl> + import org . apache . cassandra . db . compaction . SSTableSplitter ; <nl> import org . apache . cassandra . io . sstable . metadata . MetadataCollector ; <nl> import org . apache . cassandra . metrics . StorageMetrics ; <nl> import org . apache . cassandra . service . StorageService ; <nl> @ @ - 457 , 61 + 458 , 59 @ @ public class SSTableRewriterTest extends SchemaLoader <nl> validateCFS ( cfs ) ; <nl> } <nl> @ Test <nl> - public void testAbort ( ) throws Exception <nl> + public void testSSTableSplit ( ) throws InterruptedException <nl> { <nl> Keyspace keyspace = Keyspace . open ( KEYSPACE ) ; <nl> ColumnFamilyStore cfs = keyspace . getColumnFamilyStore ( CF ) ; <nl> cfs . truncateBlocking ( ) ; <nl> + cfs . disableAutoCompaction ( ) ; <nl> SSTableReader s = writeFile ( cfs , 1000 ) ; <nl> - cfs . addSSTable ( s ) ; <nl> - Set < SSTableReader > compacting = Sets . newHashSet ( s ) ; <nl> - SSTableRewriter . overrideOpenInterval ( 10000000 ) ; <nl> - SSTableRewriter rewriter = new SSTableRewriter ( cfs , compacting , 1000 , false ) ; <nl> - SSTableWriter w = getWriter ( cfs , s . descriptor . directory ) ; <nl> - rewriter . switchWriter ( w ) ; <nl> - try ( ICompactionScanner scanner = compacting . iterator ( ) . next ( ) . getScanner ( ) ; <nl> - CompactionController controller = new CompactionController ( cfs , compacting , 0 ) ) <nl> + cfs . getDataTracker ( ) . markCompacting ( Arrays . asList ( s ) ) ; <nl> + SSTableSplitter splitter = new SSTableSplitter ( cfs , s , 10 ) ; <nl> + splitter . split ( ) ; <nl> + Thread . sleep ( 1000 ) ; <nl> + assertFileCounts ( s . descriptor . directory . list ( ) , 0 , 0 ) ; <nl> + for ( File f : s . descriptor . directory . listFiles ( ) ) <nl> { <nl> - while ( scanner . hasNext ( ) ) <nl> - { <nl> - rewriter . append ( new LazilyCompactedRow ( controller , Arrays . asList ( scanner . next ( ) ) ) ) ; <nl> - if ( rewriter . currentWriter ( ) . getOnDiskFilePointer ( ) > 25000000 ) <nl> - { <nl> - rewriter . switchWriter ( getWriter ( cfs , s . descriptor . directory ) ) ; <nl> - } <nl> - } <nl> - try <nl> - { <nl> - rewriter . finishAndThrow ( false ) ; <nl> - } <nl> - catch ( Throwable t ) <nl> - { <nl> - rewriter . abort ( ) ; <nl> - } <nl> + / / we need to clear out the data dir , otherwise tests running after this breaks <nl> + f . delete ( ) ; <nl> } <nl> - Thread . sleep ( 1000 ) ; <nl> - int filecount = assertFileCounts ( s . descriptor . directory . list ( ) , 0 , 0 ) ; <nl> - assertEquals ( filecount , 1 ) ; <nl> - assertEquals ( 1 , cfs . getSSTables ( ) . size ( ) ) ; <nl> - validateCFS ( cfs ) ; <nl> - cfs . truncateBlocking ( ) ; <nl> - Thread . sleep ( 1000 ) ; <nl> - filecount = assertFileCounts ( s . descriptor . directory . list ( ) , 0 , 0 ) ; <nl> - assertEquals ( 0 , filecount ) ; <nl> + } <nl> <nl> + @ Test <nl> + public void testOfflineAbort ( ) throws Exception <nl> + { <nl> + testAbortHelper ( true , true ) ; <nl> + } <nl> + @ Test <nl> + public void testOfflineAbort2 ( ) throws Exception <nl> + { <nl> + testAbortHelper ( false , true ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testAbort ( ) throws Exception <nl> + { <nl> + testAbortHelper ( false , false ) ; <nl> } <nl> <nl> @ Test <nl> public void testAbort2 ( ) throws Exception <nl> { <nl> + testAbortHelper ( true , false ) ; <nl> + } <nl> + <nl> + private void testAbortHelper ( boolean earlyException , boolean offline ) throws Exception <nl> + { <nl> Keyspace keyspace = Keyspace . open ( KEYSPACE ) ; <nl> ColumnFamilyStore cfs = keyspace . getColumnFamilyStore ( CF ) ; <nl> cfs . truncateBlocking ( ) ; <nl> SSTableReader s = writeFile ( cfs , 1000 ) ; <nl> - cfs . addSSTable ( s ) ; <nl> + if ( ! offline ) <nl> + cfs . addSSTable ( s ) ; <nl> Set < SSTableReader > compacting = Sets . newHashSet ( s ) ; <nl> SSTableRewriter . overrideOpenInterval ( 10000000 ) ; <nl> - SSTableRewriter rewriter = new SSTableRewriter ( cfs , compacting , 1000 , false ) ; <nl> + SSTableRewriter rewriter = new SSTableRewriter ( cfs , compacting , 1000 , offline ) ; <nl> SSTableWriter w = getWriter ( cfs , s . descriptor . directory ) ; <nl> rewriter . switchWriter ( w ) ; <nl> try ( ICompactionScanner scanner = compacting . iterator ( ) . next ( ) . getScanner ( ) ; <nl> @ @ - 527 , 7 + 526 , 7 @ @ public class SSTableRewriterTest extends SchemaLoader <nl> } <nl> try <nl> { <nl> - rewriter . finishAndThrow ( true ) ; <nl> + rewriter . finishAndThrow ( earlyException ) ; <nl> } <nl> catch ( Throwable t ) <nl> { <nl> @ @ - 537 , 11 + 536 , 25 @ @ public class SSTableRewriterTest extends SchemaLoader <nl> Thread . sleep ( 1000 ) ; <nl> int filecount = assertFileCounts ( s . descriptor . directory . list ( ) , 0 , 0 ) ; <nl> assertEquals ( filecount , 1 ) ; <nl> - assertEquals ( 1 , cfs . getSSTables ( ) . size ( ) ) ; <nl> - validateCFS ( cfs ) ; <nl> + if ( ! offline ) <nl> + { <nl> + assertEquals ( 1 , cfs . getSSTables ( ) . size ( ) ) ; <nl> + validateCFS ( cfs ) ; <nl> + } <nl> cfs . truncateBlocking ( ) ; <nl> Thread . sleep ( 1000 ) ; <nl> filecount = assertFileCounts ( s . descriptor . directory . list ( ) , 0 , 0 ) ; <nl> + if ( offline ) <nl> + { <nl> + / / the file is not added to the CFS , therefor not truncated away above <nl> + assertEquals ( 1 , filecount ) ; <nl> + for ( File f : s . descriptor . directory . listFiles ( ) ) <nl> + { <nl> + f . delete ( ) ; <nl> + } <nl> + filecount = assertFileCounts ( s . descriptor . directory . list ( ) , 0 , 0 ) ; <nl> + } <nl> + <nl> assertEquals ( 0 , filecount ) ; <nl> <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index eec904a . . 982454c 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 59 , 6 + 59 , 8 @ @ <nl> the old ones ( CASSANDRA - 1644 ) <nl> * upgrade to Thrift 0 . 5 ( CASSANDRA - 1367 ) <nl> * renamed CL . DCQUORUM to LOCAL _ QUORUM and DCQUORUMSYNC to EACH _ QUORUM <nl> + * cli truncate support ( CASSANDRA - 1653 ) <nl> + * update GC settings in cassandra . bat ( CASSANDRA - 1636 ) <nl> <nl> <nl> 0 . 7 - beta2 <nl> diff - - git a / src / java / org / apache / cassandra / cli / Cli . g b / src / java / org / apache / cassandra / cli / Cli . g <nl> index e59c608 . . a9229ee 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / Cli . g <nl> + + + b / src / java / org / apache / cassandra / cli / Cli . g <nl> @ @ - 55 , 6 + 55 , 7 @ @ tokens { <nl> NODE _ UPDATE _ KEYSPACE ; <nl> NODE _ UPDATE _ COLUMN _ FAMILY ; <nl> NODE _ LIST ; <nl> + NODE _ TRUNCATE ; <nl> <nl> / / Internal Nodes . <nl> NODE _ COLUMN _ ACCESS ; <nl> @ @ - 123 , 6 + 124 , 7 @ @ statement <nl> | setStatement <nl> | showStatement <nl> | listStatement <nl> + | truncateStatement <nl> | - > ^ ( NODE _ NO _ OP ) <nl> ; <nl> <nl> @ @ - 174 , 6 + 176 , 8 @ @ helpStatement <nl> - > ^ ( NODE _ HELP NODE _ THRIFT _ COUNT ) <nl> | K _ HELP K _ LIST <nl> - > ^ ( NODE _ HELP NODE _ LIST ) <nl> + | K _ HELP K _ TRUNCATE <nl> + - > ^ ( NODE _ HELP NODE _ TRUNCATE ) <nl> | K _ HELP <nl> - > ^ ( NODE _ HELP ) <nl> | ' ? ' <nl> @ @ - 231 , 6 + 235 , 11 @ @ listStatement <nl> - > ^ ( NODE _ LIST columnFamily keyRangeExpr ? ^ ( NODE _ LIMIT $ limit ) ? ) <nl> ; <nl> <nl> + truncateStatement <nl> + : K _ TRUNCATE columnFamily <nl> + - > ^ ( NODE _ TRUNCATE columnFamily ) <nl> + ; <nl> + <nl> showClusterName <nl> : K _ SHOW K _ CLUSTER K _ NAME <nl> - > ^ ( NODE _ SHOW _ CLUSTER _ NAME ) <nl> @ @ - 430 , 6 + 439 , 7 @ @ K _ AND : ' AND ' ; <nl> K _ UPDATE : ' UPDATE ' ; <nl> K _ LIST : ' LIST ' ; <nl> K _ LIMIT : ' LIMIT ' ; <nl> + K _ TRUNCATE : ' TRUNCATE ' ; <nl> <nl> / / private syntactic rules <nl> fragment <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java <nl> index b6ace98 . . b63105a 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliClient . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliClient . java <nl> @ @ - 171 , 6 + 171 , 9 @ @ public class CliClient extends CliUserHelp <nl> case CliParser . NODE _ LIST : <nl> executeList ( tree ) ; <nl> break ; <nl> + case CliParser . NODE _ TRUNCATE : <nl> + executeTruncate ( tree . getChild ( 0 ) . getText ( ) ) ; <nl> + break ; <nl> case CliParser . NODE _ NO _ OP : <nl> / / comment lines come here ; they are treated as no ops . <nl> break ; <nl> @ @ - 943 , 6 + 946 , 30 @ @ public class CliClient extends CliUserHelp <nl> printSliceList ( columnFamilyDef , keySlices ) ; <nl> } <nl> <nl> + / / TRUNCATE < columnFamily > <nl> + private void executeTruncate ( String columnFamily ) <nl> + { <nl> + if ( ! CliMain . isConnected ( ) | | ! hasKeySpace ( ) ) <nl> + return ; <nl> + <nl> + / / getting CfDef , it will fail if there is no such column family in current keySpace . <nl> + CfDef cfDef = getCfDef ( columnFamily ) ; <nl> + <nl> + try <nl> + { <nl> + thriftClient . truncate ( cfDef . getName ( ) ) ; <nl> + sessionState . out . println ( columnFamily + " truncated . " ) ; <nl> + } <nl> + catch ( InvalidRequestException e ) <nl> + { <nl> + throw new RuntimeException ( e . getWhy ( ) ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + throw new RuntimeException ( e . getMessage ( ) ) ; <nl> + } <nl> + } <nl> + <nl> / / SHOW API VERSION <nl> private void executeShowVersion ( ) throws TException <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliCompleter . java b / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> index f541fe5 . . b033d8f 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> @ @ - 55 , 12 + 55 , 16 @ @ public class CliCompleter extends SimpleCompletor <nl> " help set " , <nl> " help del " , <nl> " help count " , <nl> + " help list " , <nl> + " help truncate " <nl> } ; <nl> private static String [ ] keyspaceCommands = { <nl> " get " , <nl> " set " , <nl> " count " , <nl> - " del " <nl> + " del " , <nl> + " list " , <nl> + " truncate " <nl> } ; <nl> <nl> public CliCompleter ( ) <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliUserHelp . java b / src / java / org / apache / cassandra / cli / CliUserHelp . java <nl> index 7c512e2 . . db6a779 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliUserHelp . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliUserHelp . java <nl> @ @ - 281 , 6 + 281 , 13 @ @ public class CliUserHelp { <nl> state . out . println ( " list Users [ j : ] limit 40 " ) ; <nl> break ; <nl> <nl> + case CliParser . NODE _ TRUNCATE : <nl> + state . out . println ( " truncate < column _ family > " ) ; <nl> + state . out . println ( " Truncate specified column family . \ n " ) ; <nl> + state . out . println ( " example : " ) ; <nl> + state . out . println ( " truncate Category " ) ; <nl> + break ; <nl> + <nl> default : <nl> state . out . println ( " ? " ) ; <nl> break ; <nl> @ @ - 324 , 7 + 331 , 8 @ @ public class CliUserHelp { <nl> state . out . println ( " del < cf > [ ' < key > ' ] [ ' < super > ' ] [ ' < col > ' ] Delete sub column . " ) ; <nl> state . out . println ( " count < cf > [ ' < key > ' ] Count columns in record . " ) ; <nl> state . out . println ( " count < cf > [ ' < key > ' ] [ ' < super > ' ] Count columns in a super column . " ) ; <nl> - state . out . println ( " list < cf > List all rows in the column family . " ) ; <nl> + state . out . println ( " truncate < column _ family > Truncate specified column family . " ) ; <nl> + state . out . println ( " list < cf > List all rows in the column family . " ) ; <nl> state . out . println ( " list < cf > [ < startKey > : ] " ) ; <nl> state . out . println ( " List rows in the column family beginning with < startKey > . " ) ; <nl> state . out . println ( " list < cf > [ < startKey > : < endKey > ] " ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / cli / CliTest . java b / test / unit / org / apache / cassandra / cli / CliTest . java <nl> index 24a3de0 . . eddcafd 100644 <nl> - - - a / test / unit / org / apache / cassandra / cli / CliTest . java <nl> + + + b / test / unit / org / apache / cassandra / cli / CliTest . java <nl> @ @ - 52 , 6 + 52 , 7 @ @ public class CliTest extends TestCase <nl> " list CF3 [ h : ] " , <nl> " list CF3 limit 10 " , <nl> " list CF3 [ h : g ] limit 10 " , <nl> + " truncate CF1 " , <nl> " update keyspace TestKeySpace with placement _ strategy = ' org . apache . cassandra . locator . LocalStrategy ' " , <nl> " update keyspace TestKeySpace with replication _ factor = 1 and strategy _ options = [ { DC1 : 3 , DC2 : 4 , DC5 : 1 } ] " <nl> } ; <nl> @ @ - 101 , 6 + 102 , 10 @ @ public class CliTest extends TestCase <nl> assertTrue ( result . startsWith ( " = > ( column = " ) ) ; <nl> } <nl> } <nl> + else if ( statement . startsWith ( " truncate " ) ) <nl> + { <nl> + assertTrue ( result . contains ( " truncated . " ) ) ; <nl> + } <nl> <nl> outStream . reset ( ) ; / / reset stream so we have only output from next statement all the time <nl> errStream . reset ( ) ; / / no errors to the end user .

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 3545afc . . 2e74a15 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 3 
 + * Remove tmplink files for offline compactions ( CASSANDRA - 8321 ) 
 * Reduce maxHintsInProgress ( CASSANDRA - 8415 ) 
 * BTree updates may call provided update function twice ( CASSANDRA - 8018 ) 
 * Release sstable references after anticompaction ( CASSANDRA - 8386 ) 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java 
 index d187e9d . . f9d2fe4 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java 
 @ @ - 190 , 9 + 190 , 15 @ @ public class SSTableRewriter 
 
 for ( Pair < SSTableWriter , SSTableReader > w : finishedWriters ) 
 { 
 - / / we should close the bloom filter if we have not opened an sstable reader from this 
 - / / writer ( it will get closed when we release the sstable reference below ) : 
 + / / we should close the bloom filter if we have not opened an sstable reader from this 
 + / / writer ( it will get closed when we release the sstable reference below ) : 
 w . left . abort ( w . right = = null ) ; 
 + if ( isOffline & & w . right ! = null ) 
 + { 
 + / / the pairs get removed from finishedWriters when they are closedAndOpened in finish ( ) , the ones left need to be removed here : 
 + w . right . markObsolete ( ) ; 
 + w . right . releaseReference ( ) ; 
 + } 
 } 
 
 / / also remove already completed SSTables 
 @ @ - 344 , 7 + 350 , 15 @ @ public class SSTableRewriter 
 finished . add ( newReader ) ; 
 
 if ( w . right ! = null ) 
 + { 
 w . right . sharesBfWith ( newReader ) ; 
 + if ( isOffline ) 
 + { 
 + / / remove the tmplink files if we are offline - no one is using them 
 + w . right . markObsolete ( ) ; 
 + w . right . releaseReference ( ) ; 
 + } 
 + } 
 / / w . right is the tmplink - reader we added when switching writer , replace with the real sstable . 
 toReplace . add ( Pair . create ( w . right , newReader ) ) ; 
 } 
 @ @ - 356 , 11 + 370 , 10 @ @ public class SSTableRewriter 
 it . remove ( ) ; 
 } 
 
 - for ( Pair < SSTableReader , SSTableReader > replace : toReplace ) 
 - replaceEarlyOpenedFile ( replace . left , replace . right ) ; 
 - 
 if ( ! isOffline ) 
 { 
 + for ( Pair < SSTableReader , SSTableReader > replace : toReplace ) 
 + replaceEarlyOpenedFile ( replace . left , replace . right ) ; 
 dataTracker . unmarkCompacting ( finished ) ; 
 } 
 return finished ; 
 @ @ - 382 , 8 + 395 , 16 @ @ public class SSTableRewriter 
 { 
 SSTableReader newReader = w . left . closeAndOpenReader ( maxAge ) ; 
 finished . add ( newReader ) ; 
 + 
 if ( w . right ! = null ) 
 + { 
 w . right . sharesBfWith ( newReader ) ; 
 + if ( isOffline ) 
 + { 
 + w . right . markObsolete ( ) ; 
 + w . right . releaseReference ( ) ; 
 + } 
 + } 
 / / w . right is the tmplink - reader we added when switching writer , replace with the real sstable . 
 toReplace . add ( Pair . create ( w . right , newReader ) ) ; 
 } 
 diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java 
 index 0a76b66 . . c0a017e 100644 
 - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java 
 + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableRewriterTest . java 
 @ @ - 43 , 6 + 43 , 7 @ @ import org . apache . cassandra . db . compaction . CompactionController ; 
 import org . apache . cassandra . db . compaction . ICompactionScanner ; 
 import org . apache . cassandra . db . compaction . LazilyCompactedRow ; 
 import org . apache . cassandra . db . compaction . OperationType ; 
 + import org . apache . cassandra . db . compaction . SSTableSplitter ; 
 import org . apache . cassandra . io . sstable . metadata . MetadataCollector ; 
 import org . apache . cassandra . metrics . StorageMetrics ; 
 import org . apache . cassandra . service . StorageService ; 
 @ @ - 457 , 61 + 458 , 59 @ @ public class SSTableRewriterTest extends SchemaLoader 
 validateCFS ( cfs ) ; 
 } 
 @ Test 
 - public void testAbort ( ) throws Exception 
 + public void testSSTableSplit ( ) throws InterruptedException 
 { 
 Keyspace keyspace = Keyspace . open ( KEYSPACE ) ; 
 ColumnFamilyStore cfs = keyspace . getColumnFamilyStore ( CF ) ; 
 cfs . truncateBlocking ( ) ; 
 + cfs . disableAutoCompaction ( ) ; 
 SSTableReader s = writeFile ( cfs , 1000 ) ; 
 - cfs . addSSTable ( s ) ; 
 - Set < SSTableReader > compacting = Sets . newHashSet ( s ) ; 
 - SSTableRewriter . overrideOpenInterval ( 10000000 ) ; 
 - SSTableRewriter rewriter = new SSTableRewriter ( cfs , compacting , 1000 , false ) ; 
 - SSTableWriter w = getWriter ( cfs , s . descriptor . directory ) ; 
 - rewriter . switchWriter ( w ) ; 
 - try ( ICompactionScanner scanner = compacting . iterator ( ) . next ( ) . getScanner ( ) ; 
 - CompactionController controller = new CompactionController ( cfs , compacting , 0 ) ) 
 + cfs . getDataTracker ( ) . markCompacting ( Arrays . asList ( s ) ) ; 
 + SSTableSplitter splitter = new SSTableSplitter ( cfs , s , 10 ) ; 
 + splitter . split ( ) ; 
 + Thread . sleep ( 1000 ) ; 
 + assertFileCounts ( s . descriptor . directory . list ( ) , 0 , 0 ) ; 
 + for ( File f : s . descriptor . directory . listFiles ( ) ) 
 { 
 - while ( scanner . hasNext ( ) ) 
 - { 
 - rewriter . append ( new LazilyCompactedRow ( controller , Arrays . asList ( scanner . next ( ) ) ) ) ; 
 - if ( rewriter . currentWriter ( ) . getOnDiskFilePointer ( ) > 25000000 ) 
 - { 
 - rewriter . switchWriter ( getWriter ( cfs , s . descriptor . directory ) ) ; 
 - } 
 - } 
 - try 
 - { 
 - rewriter . finishAndThrow ( false ) ; 
 - } 
 - catch ( Throwable t ) 
 - { 
 - rewriter . abort ( ) ; 
 - } 
 + / / we need to clear out the data dir , otherwise tests running after this breaks 
 + f . delete ( ) ; 
 } 
 - Thread . sleep ( 1000 ) ; 
 - int filecount = assertFileCounts ( s . descriptor . directory . list ( ) , 0 , 0 ) ; 
 - assertEquals ( filecount , 1 ) ; 
 - assertEquals ( 1 , cfs . getSSTables ( ) . size ( ) ) ; 
 - validateCFS ( cfs ) ; 
 - cfs . truncateBlocking ( ) ; 
 - Thread . sleep ( 1000 ) ; 
 - filecount = assertFileCounts ( s . descriptor . directory . list ( ) , 0 , 0 ) ; 
 - assertEquals ( 0 , filecount ) ; 
 + } 
 
 + @ Test 
 + public void testOfflineAbort ( ) throws Exception 
 + { 
 + testAbortHelper ( true , true ) ; 
 + } 
 + @ Test 
 + public void testOfflineAbort2 ( ) throws Exception 
 + { 
 + testAbortHelper ( false , true ) ; 
 + } 
 + 
 + @ Test 
 + public void testAbort ( ) throws Exception 
 + { 
 + testAbortHelper ( false , false ) ; 
 } 
 
 @ Test 
 public void testAbort2 ( ) throws Exception 
 { 
 + testAbortHelper ( true , false ) ; 
 + } 
 + 
 + private void testAbortHelper ( boolean earlyException , boolean offline ) throws Exception 
 + { 
 Keyspace keyspace = Keyspace . open ( KEYSPACE ) ; 
 ColumnFamilyStore cfs = keyspace . getColumnFamilyStore ( CF ) ; 
 cfs . truncateBlocking ( ) ; 
 SSTableReader s = writeFile ( cfs , 1000 ) ; 
 - cfs . addSSTable ( s ) ; 
 + if ( ! offline ) 
 + cfs . addSSTable ( s ) ; 
 Set < SSTableReader > compacting = Sets . newHashSet ( s ) ; 
 SSTableRewriter . overrideOpenInterval ( 10000000 ) ; 
 - SSTableRewriter rewriter = new SSTableRewriter ( cfs , compacting , 1000 , false ) ; 
 + SSTableRewriter rewriter = new SSTableRewriter ( cfs , compacting , 1000 , offline ) ; 
 SSTableWriter w = getWriter ( cfs , s . descriptor . directory ) ; 
 rewriter . switchWriter ( w ) ; 
 try ( ICompactionScanner scanner = compacting . iterator ( ) . next ( ) . getScanner ( ) ; 
 @ @ - 527 , 7 + 526 , 7 @ @ public class SSTableRewriterTest extends SchemaLoader 
 } 
 try 
 { 
 - rewriter . finishAndThrow ( true ) ; 
 + rewriter . finishAndThrow ( earlyException ) ; 
 } 
 catch ( Throwable t ) 
 { 
 @ @ - 537 , 11 + 536 , 25 @ @ public class SSTableRewriterTest extends SchemaLoader 
 Thread . sleep ( 1000 ) ; 
 int filecount = assertFileCounts ( s . descriptor . directory . list ( ) , 0 , 0 ) ; 
 assertEquals ( filecount , 1 ) ; 
 - assertEquals ( 1 , cfs . getSSTables ( ) . size ( ) ) ; 
 - validateCFS ( cfs ) ; 
 + if ( ! offline ) 
 + { 
 + assertEquals ( 1 , cfs . getSSTables ( ) . size ( ) ) ; 
 + validateCFS ( cfs ) ; 
 + } 
 cfs . truncateBlocking ( ) ; 
 Thread . sleep ( 1000 ) ; 
 filecount = assertFileCounts ( s . descriptor . directory . list ( ) , 0 , 0 ) ; 
 + if ( offline ) 
 + { 
 + / / the file is not added to the CFS , therefor not truncated away above 
 + assertEquals ( 1 , filecount ) ; 
 + for ( File f : s . descriptor . directory . listFiles ( ) ) 
 + { 
 + f . delete ( ) ; 
 + } 
 + filecount = assertFileCounts ( s . descriptor . directory . list ( ) , 0 , 0 ) ; 
 + } 
 + 
 assertEquals ( 0 , filecount ) ; 
 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index eec904a . . 982454c 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 59 , 6 + 59 , 8 @ @ 
 the old ones ( CASSANDRA - 1644 ) 
 * upgrade to Thrift 0 . 5 ( CASSANDRA - 1367 ) 
 * renamed CL . DCQUORUM to LOCAL _ QUORUM and DCQUORUMSYNC to EACH _ QUORUM 
 + * cli truncate support ( CASSANDRA - 1653 ) 
 + * update GC settings in cassandra . bat ( CASSANDRA - 1636 ) 
 
 
 0 . 7 - beta2 
 diff - - git a / src / java / org / apache / cassandra / cli / Cli . g b / src / java / org / apache / cassandra / cli / Cli . g 
 index e59c608 . . a9229ee 100644 
 - - - a / src / java / org / apache / cassandra / cli / Cli . g 
 + + + b / src / java / org / apache / cassandra / cli / Cli . g 
 @ @ - 55 , 6 + 55 , 7 @ @ tokens { 
 NODE _ UPDATE _ KEYSPACE ; 
 NODE _ UPDATE _ COLUMN _ FAMILY ; 
 NODE _ LIST ; 
 + NODE _ TRUNCATE ; 
 
 / / Internal Nodes . 
 NODE _ COLUMN _ ACCESS ; 
 @ @ - 123 , 6 + 124 , 7 @ @ statement 
 | setStatement 
 | showStatement 
 | listStatement 
 + | truncateStatement 
 | - > ^ ( NODE _ NO _ OP ) 
 ; 
 
 @ @ - 174 , 6 + 176 , 8 @ @ helpStatement 
 - > ^ ( NODE _ HELP NODE _ THRIFT _ COUNT ) 
 | K _ HELP K _ LIST 
 - > ^ ( NODE _ HELP NODE _ LIST ) 
 + | K _ HELP K _ TRUNCATE 
 + - > ^ ( NODE _ HELP NODE _ TRUNCATE ) 
 | K _ HELP 
 - > ^ ( NODE _ HELP ) 
 | ' ? ' 
 @ @ - 231 , 6 + 235 , 11 @ @ listStatement 
 - > ^ ( NODE _ LIST columnFamily keyRangeExpr ? ^ ( NODE _ LIMIT $ limit ) ? ) 
 ; 
 
 + truncateStatement 
 + : K _ TRUNCATE columnFamily 
 + - > ^ ( NODE _ TRUNCATE columnFamily ) 
 + ; 
 + 
 showClusterName 
 : K _ SHOW K _ CLUSTER K _ NAME 
 - > ^ ( NODE _ SHOW _ CLUSTER _ NAME ) 
 @ @ - 430 , 6 + 439 , 7 @ @ K _ AND : ' AND ' ; 
 K _ UPDATE : ' UPDATE ' ; 
 K _ LIST : ' LIST ' ; 
 K _ LIMIT : ' LIMIT ' ; 
 + K _ TRUNCATE : ' TRUNCATE ' ; 
 
 / / private syntactic rules 
 fragment 
 diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java 
 index b6ace98 . . b63105a 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliClient . java 
 + + + b / src / java / org / apache / cassandra / cli / CliClient . java 
 @ @ - 171 , 6 + 171 , 9 @ @ public class CliClient extends CliUserHelp 
 case CliParser . NODE _ LIST : 
 executeList ( tree ) ; 
 break ; 
 + case CliParser . NODE _ TRUNCATE : 
 + executeTruncate ( tree . getChild ( 0 ) . getText ( ) ) ; 
 + break ; 
 case CliParser . NODE _ NO _ OP : 
 / / comment lines come here ; they are treated as no ops . 
 break ; 
 @ @ - 943 , 6 + 946 , 30 @ @ public class CliClient extends CliUserHelp 
 printSliceList ( columnFamilyDef , keySlices ) ; 
 } 
 
 + / / TRUNCATE < columnFamily > 
 + private void executeTruncate ( String columnFamily ) 
 + { 
 + if ( ! CliMain . isConnected ( ) | | ! hasKeySpace ( ) ) 
 + return ; 
 + 
 + / / getting CfDef , it will fail if there is no such column family in current keySpace . 
 + CfDef cfDef = getCfDef ( columnFamily ) ; 
 + 
 + try 
 + { 
 + thriftClient . truncate ( cfDef . getName ( ) ) ; 
 + sessionState . out . println ( columnFamily + " truncated . " ) ; 
 + } 
 + catch ( InvalidRequestException e ) 
 + { 
 + throw new RuntimeException ( e . getWhy ( ) ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + throw new RuntimeException ( e . getMessage ( ) ) ; 
 + } 
 + } 
 + 
 / / SHOW API VERSION 
 private void executeShowVersion ( ) throws TException 
 { 
 diff - - git a / src / java / org / apache / cassandra / cli / CliCompleter . java b / src / java / org / apache / cassandra / cli / CliCompleter . java 
 index f541fe5 . . b033d8f 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliCompleter . java 
 + + + b / src / java / org / apache / cassandra / cli / CliCompleter . java 
 @ @ - 55 , 12 + 55 , 16 @ @ public class CliCompleter extends SimpleCompletor 
 " help set " , 
 " help del " , 
 " help count " , 
 + " help list " , 
 + " help truncate " 
 } ; 
 private static String [ ] keyspaceCommands = { 
 " get " , 
 " set " , 
 " count " , 
 - " del " 
 + " del " , 
 + " list " , 
 + " truncate " 
 } ; 
 
 public CliCompleter ( ) 
 diff - - git a / src / java / org / apache / cassandra / cli / CliUserHelp . java b / src / java / org / apache / cassandra / cli / CliUserHelp . java 
 index 7c512e2 . . db6a779 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliUserHelp . java 
 + + + b / src / java / org / apache / cassandra / cli / CliUserHelp . java 
 @ @ - 281 , 6 + 281 , 13 @ @ public class CliUserHelp { 
 state . out . println ( " list Users [ j : ] limit 40 " ) ; 
 break ; 
 
 + case CliParser . NODE _ TRUNCATE : 
 + state . out . println ( " truncate < column _ family > " ) ; 
 + state . out . println ( " Truncate specified column family . \ n " ) ; 
 + state . out . println ( " example : " ) ; 
 + state . out . println ( " truncate Category " ) ; 
 + break ; 
 + 
 default : 
 state . out . println ( " ? " ) ; 
 break ; 
 @ @ - 324 , 7 + 331 , 8 @ @ public class CliUserHelp { 
 state . out . println ( " del < cf > [ ' < key > ' ] [ ' < super > ' ] [ ' < col > ' ] Delete sub column . " ) ; 
 state . out . println ( " count < cf > [ ' < key > ' ] Count columns in record . " ) ; 
 state . out . println ( " count < cf > [ ' < key > ' ] [ ' < super > ' ] Count columns in a super column . " ) ; 
 - state . out . println ( " list < cf > List all rows in the column family . " ) ; 
 + state . out . println ( " truncate < column _ family > Truncate specified column family . " ) ; 
 + state . out . println ( " list < cf > List all rows in the column family . " ) ; 
 state . out . println ( " list < cf > [ < startKey > : ] " ) ; 
 state . out . println ( " List rows in the column family beginning with < startKey > . " ) ; 
 state . out . println ( " list < cf > [ < startKey > : < endKey > ] " ) ; 
 diff - - git a / test / unit / org / apache / cassandra / cli / CliTest . java b / test / unit / org / apache / cassandra / cli / CliTest . java 
 index 24a3de0 . . eddcafd 100644 
 - - - a / test / unit / org / apache / cassandra / cli / CliTest . java 
 + + + b / test / unit / org / apache / cassandra / cli / CliTest . java 
 @ @ - 52 , 6 + 52 , 7 @ @ public class CliTest extends TestCase 
 " list CF3 [ h : ] " , 
 " list CF3 limit 10 " , 
 " list CF3 [ h : g ] limit 10 " , 
 + " truncate CF1 " , 
 " update keyspace TestKeySpace with placement _ strategy = ' org . apache . cassandra . locator . LocalStrategy ' " , 
 " update keyspace TestKeySpace with replication _ factor = 1 and strategy _ options = [ { DC1 : 3 , DC2 : 4 , DC5 : 1 } ] " 
 } ; 
 @ @ - 101 , 6 + 102 , 10 @ @ public class CliTest extends TestCase 
 assertTrue ( result . startsWith ( " = > ( column = " ) ) ; 
 } 
 } 
 + else if ( statement . startsWith ( " truncate " ) ) 
 + { 
 + assertTrue ( result . contains ( " truncated . " ) ) ; 
 + } 
 
 outStream . reset ( ) ; / / reset stream so we have only output from next statement all the time 
 errStream . reset ( ) ; / / no errors to the end user .
