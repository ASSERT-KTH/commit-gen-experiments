BLEU SCORE: 0.06567274736060397

TEST MSG: fix GCS test for 2 . 0
GENERATED MSG: Fix unit test failures

TEST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / locator / GoogleCloudSnitchTest . java b / test / unit / org / apache / cassandra / locator / GoogleCloudSnitchTest . java <nl> index 70080a8 . . 09f96db 100644 <nl> - - - a / test / unit / org / apache / cassandra / locator / GoogleCloudSnitchTest . java <nl> + + + b / test / unit / org / apache / cassandra / locator / GoogleCloudSnitchTest . java <nl> @ @ - 52 , 7 + 52 , 6 @ @ public class GoogleCloudSnitchTest <nl> { <nl> SchemaLoader . mkdirs ( ) ; <nl> SchemaLoader . cleanup ( ) ; <nl> - Keyspace . setInitialized ( ) ; <nl> StorageService . instance . initServer ( 0 ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / thrift / CassandraServer . java b / src / java / org / apache / cassandra / thrift / CassandraServer . java <nl> index 393b5f1 . . 9cebacb 100644 <nl> - - - a / src / java / org / apache / cassandra / thrift / CassandraServer . java <nl> + + + b / src / java / org / apache / cassandra / thrift / CassandraServer . java <nl> @ @ - 297 , 9 + 297 , 9 @ @ public class CassandraServer implements Cassandra . Iface <nl> if ( startSessionIfRequested ( ) ) <nl> { <nl> Map < String , String > traceParameters = ImmutableMap . of ( " key " , ByteBufferUtil . bytesToHex ( key ) , <nl> - " column _ parent " , column _ parent . toString ( ) , <nl> - " predicate " , predicate . toString ( ) , <nl> - " consistency _ level " , consistency _ level . name ( ) ) ; <nl> + " column _ parent " , column _ parent . toString ( ) , <nl> + " predicate " , predicate . toString ( ) , <nl> + " consistency _ level " , consistency _ level . name ( ) ) ; <nl> Tracing . instance ( ) . begin ( " get _ slice " , traceParameters ) ; <nl> } <nl> else <nl> @ @ - 310 , 8 + 310 , 7 @ @ public class CassandraServer implements Cassandra . Iface <nl> try <nl> { <nl> state ( ) . hasColumnFamilyAccess ( column _ parent . column _ family , Permission . SELECT ) ; <nl> - return multigetSliceInternal ( state ( ) . getKeyspace ( ) , Collections . singletonList ( key ) , column _ parent , <nl> - predicate , consistency _ level ) . get ( key ) ; <nl> + return multigetSliceInternal ( state ( ) . getKeyspace ( ) , Collections . singletonList ( key ) , column _ parent , predicate , consistency _ level ) . get ( key ) ; <nl> } <nl> catch ( RequestValidationException e ) <nl> { <nl> @ @ - 330 , 13 + 329 , 11 @ @ public class CassandraServer implements Cassandra . Iface <nl> { <nl> List < String > keysList = Lists . newArrayList ( ) ; <nl> for ( ByteBuffer key : keys ) <nl> - { <nl> keysList . add ( ByteBufferUtil . bytesToHex ( key ) ) ; <nl> - } <nl> Map < String , String > traceParameters = ImmutableMap . of ( " keys " , keysList . toString ( ) , <nl> - " column _ parent " , column _ parent . toString ( ) , <nl> - " predicate " , predicate . toString ( ) , <nl> - " consistency _ level " , consistency _ level . name ( ) ) ; <nl> + " column _ parent " , column _ parent . toString ( ) , <nl> + " predicate " , predicate . toString ( ) , <nl> + " consistency _ level " , consistency _ level . name ( ) ) ; <nl> Tracing . instance ( ) . begin ( " multiget _ slice " , traceParameters ) ; <nl> } <nl> else <nl> @ @ - 424 , 12 + 421 , 11 @ @ public class CassandraServer implements Cassandra . Iface <nl> public ColumnOrSuperColumn get ( ByteBuffer key , ColumnPath column _ path , ConsistencyLevel consistency _ level ) <nl> throws InvalidRequestException , NotFoundException , UnavailableException , TimedOutException <nl> { <nl> - <nl> if ( startSessionIfRequested ( ) ) <nl> { <nl> Map < String , String > traceParameters = ImmutableMap . of ( " key " , ByteBufferUtil . bytesToHex ( key ) , <nl> - " column _ path " , column _ path . toString ( ) , <nl> - " consistency _ level " , consistency _ level . name ( ) ) ; <nl> + " column _ path " , column _ path . toString ( ) , <nl> + " consistency _ level " , consistency _ level . name ( ) ) ; <nl> Tracing . instance ( ) . begin ( " get " , traceParameters ) ; <nl> } <nl> else <nl> @ @ - 457 , 9 + 453 , 9 @ @ public class CassandraServer implements Cassandra . Iface <nl> if ( startSessionIfRequested ( ) ) <nl> { <nl> Map < String , String > traceParameters = ImmutableMap . of ( " key " , ByteBufferUtil . bytesToHex ( key ) , <nl> - " column _ parent " , column _ parent . toString ( ) , <nl> - " predicate " , predicate . toString ( ) , <nl> - " consistency _ level " , consistency _ level . name ( ) ) ; <nl> + " column _ parent " , column _ parent . toString ( ) , <nl> + " predicate " , predicate . toString ( ) , <nl> + " consistency _ level " , consistency _ level . name ( ) ) ; <nl> Tracing . instance ( ) . begin ( " get _ count " , traceParameters ) ; <nl> } <nl> else <nl> @ @ - 482 , 8 + 478 , 7 @ @ public class CassandraServer implements Cassandra . Iface <nl> if ( cfs . getMeanColumns ( ) > 0 ) <nl> { <nl> int averageColumnSize = ( int ) ( cfs . getMeanRowSize ( ) / cfs . getMeanColumns ( ) ) ; <nl> - pageSize = Math . min ( COUNT _ PAGE _ SIZE , <nl> - DatabaseDescriptor . getInMemoryCompactionLimit ( ) / averageColumnSize ) ; <nl> + pageSize = Math . min ( COUNT _ PAGE _ SIZE , DatabaseDescriptor . getInMemoryCompactionLimit ( ) / averageColumnSize ) ; <nl> pageSize = Math . max ( 2 , pageSize ) ; <nl> logger . debug ( " average row column size is { } ; using pageSize of { } " , averageColumnSize , pageSize ) ; <nl> } <nl> @ @ - 498 , 9 + 493 , 9 @ @ public class CassandraServer implements Cassandra . Iface <nl> if ( predicate . slice _ range = = null ) <nl> { <nl> predicate . slice _ range = new SliceRange ( ByteBufferUtil . EMPTY _ BYTE _ BUFFER , <nl> - ByteBufferUtil . EMPTY _ BYTE _ BUFFER , <nl> - false , <nl> - Integer . MAX _ VALUE ) ; <nl> + ByteBufferUtil . EMPTY _ BYTE _ BUFFER , <nl> + false , <nl> + Integer . MAX _ VALUE ) ; <nl> } <nl> <nl> final int requestedCount = predicate . slice _ range . count ; <nl> @ @ - 514 , 8 + 509 , 7 @ @ public class CassandraServer implements Cassandra . Iface <nl> break ; <nl> <nl> ByteBuffer firstName = getName ( columns . get ( 0 ) ) ; <nl> - int newColumns = pages = = 0 | | ! firstName . equals ( predicate . slice _ range . start ) ? columns . size ( ) <nl> - : columns . size ( ) - 1 ; <nl> + int newColumns = pages = = 0 | | ! firstName . equals ( predicate . slice _ range . start ) ? columns . size ( ) : columns . size ( ) - 1 ; <nl> <nl> totalCount + = newColumns ; <nl> / / if we over - counted , just return original limit <nl> @ @ - 562 , 9 + 556 , 9 @ @ public class CassandraServer implements Cassandra . Iface <nl> keysList . add ( ByteBufferUtil . bytesToHex ( key ) ) ; <nl> } <nl> Map < String , String > traceParameters = ImmutableMap . of ( " keys " , keysList . toString ( ) , <nl> - " column _ parent " , column _ parent . toString ( ) , <nl> - " predicate " , predicate . toString ( ) , <nl> - " consistency _ level " , consistency _ level . name ( ) ) ; <nl> + " column _ parent " , column _ parent . toString ( ) , <nl> + " predicate " , predicate . toString ( ) , <nl> + " consistency _ level " , consistency _ level . name ( ) ) ; <nl> Tracing . instance ( ) . begin ( " multiget _ count " , traceParameters ) ; <nl> } <nl> else <nl> @ @ - 579 , 13 + 573 , 10 @ @ public class CassandraServer implements Cassandra . Iface <nl> String keyspace = cState . getKeyspace ( ) ; <nl> <nl> Map < ByteBuffer , Integer > counts = new HashMap < ByteBuffer , Integer > ( ) ; <nl> - Map < ByteBuffer , List < ColumnOrSuperColumn > > columnFamiliesMap = multigetSliceInternal ( keyspace , keys , <nl> - column _ parent , predicate , consistency _ level ) ; <nl> + Map < ByteBuffer , List < ColumnOrSuperColumn > > columnFamiliesMap = multigetSliceInternal ( keyspace , keys , column _ parent , predicate , consistency _ level ) ; <nl> <nl> for ( Map . Entry < ByteBuffer , List < ColumnOrSuperColumn > > cf : columnFamiliesMap . entrySet ( ) ) <nl> - { <nl> counts . put ( cf . getKey ( ) , cf . getValue ( ) . size ( ) ) ; <nl> - } <nl> return counts ; <nl> } <nl> catch ( RequestValidationException e ) <nl> @ @ - 633 , 9 + 624 , 9 @ @ public class CassandraServer implements Cassandra . Iface <nl> if ( startSessionIfRequested ( ) ) <nl> { <nl> Map < String , String > traceParameters = ImmutableMap . of ( " key " , ByteBufferUtil . bytesToHex ( key ) , <nl> - " column _ parent " , column _ parent . toString ( ) , <nl> - " column " , column . toString ( ) , <nl> - " consistency _ level " , consistency _ level . name ( ) ) ; <nl> + " column _ parent " , column _ parent . toString ( ) , <nl> + " column " , column . toString ( ) , <nl> + " consistency _ level " , consistency _ level . name ( ) ) ; <nl> Tracing . instance ( ) . begin ( " insert " , traceParameters ) ; <nl> } <nl> else <nl> @ @ - 742 , 7 + 733 , 7 @ @ public class CassandraServer implements Cassandra . Iface <nl> for ( Map . Entry < ByteBuffer , Map < String , List < Mutation > > > mutationEntry : mutation _ map . entrySet ( ) ) <nl> { <nl> traceParameters . put ( ByteBufferUtil . bytesToHex ( mutationEntry . getKey ( ) ) , <nl> - Joiner . on ( " ; " ) . withKeyValueSeparator ( " : " ) . join ( mutationEntry . getValue ( ) ) ) ; <nl> + Joiner . on ( " ; " ) . withKeyValueSeparator ( " : " ) . join ( mutationEntry . getValue ( ) ) ) ; <nl> } <nl> traceParameters . put ( " consistency _ level " , consistency _ level . name ( ) ) ; <nl> Tracing . instance ( ) . begin ( " batch _ mutate " , traceParameters ) ; <nl> @ @ - 775 , 7 + 766 , 7 @ @ public class CassandraServer implements Cassandra . Iface <nl> for ( Map . Entry < ByteBuffer , Map < String , List < Mutation > > > mutationEntry : mutation _ map . entrySet ( ) ) <nl> { <nl> traceParameters . put ( ByteBufferUtil . bytesToHex ( mutationEntry . getKey ( ) ) , <nl> - Joiner . on ( " ; " ) . withKeyValueSeparator ( " : " ) . join ( mutationEntry . getValue ( ) ) ) ; <nl> + Joiner . on ( " ; " ) . withKeyValueSeparator ( " : " ) . join ( mutationEntry . getValue ( ) ) ) ; <nl> } <nl> traceParameters . put ( " consistency _ level " , consistency _ level . name ( ) ) ; <nl> Tracing . instance ( ) . begin ( " atomic _ batch _ mutate " , traceParameters ) ; <nl> @ @ - 826 , 9 + 817 , 9 @ @ public class CassandraServer implements Cassandra . Iface <nl> if ( startSessionIfRequested ( ) ) <nl> { <nl> Map < String , String > traceParameters = ImmutableMap . of ( " key " , ByteBufferUtil . bytesToHex ( key ) , <nl> - " column _ path " , column _ path . toString ( ) , <nl> - " timestamp " , timestamp + " " , <nl> - " consistency _ level " , consistency _ level . name ( ) ) ; <nl> + " column _ path " , column _ path . toString ( ) , <nl> + " timestamp " , timestamp + " " , <nl> + " consistency _ level " , consistency _ level . name ( ) ) ; <nl> Tracing . instance ( ) . begin ( " remove " , traceParameters ) ; <nl> } <nl> else <nl> @ @ - 947 , 17 + 938 , 17 @ @ public class CassandraServer implements Cassandra . Iface <nl> } <nl> else <nl> { <nl> - RowPosition end = range . end _ key = = null ? p . getTokenFactory ( ) . fromString ( range . end _ token ) . maxKeyBound ( p ) <nl> - : RowPosition . forKey ( range . end _ key , p ) ; <nl> + RowPosition end = range . end _ key = = null <nl> + ? p . getTokenFactory ( ) . fromString ( range . end _ token ) . maxKeyBound ( p ) <nl> + : RowPosition . forKey ( range . end _ key , p ) ; <nl> bounds = new Bounds < RowPosition > ( RowPosition . forKey ( range . start _ key , p ) , end ) ; <nl> } <nl> schedule ( DatabaseDescriptor . getRangeRpcTimeout ( ) ) ; <nl> try <nl> { <nl> - IDiskAtomFilter filter = ThriftValidation . asIFilter ( predicate , <nl> - metadata . getComparatorFor ( column _ parent . super _ column ) ) ; <nl> + IDiskAtomFilter filter = ThriftValidation . asIFilter ( predicate , metadata . getComparatorFor ( column _ parent . super _ column ) ) ; <nl> rows = StorageProxy . getRangeSlice ( new RangeSliceCommand ( keyspace , column _ parent , filter , bounds , <nl> - range . row _ filter , range . count ) , consistencyLevel ) ; <nl> + range . row _ filter , range . count ) , consistencyLevel ) ; <nl> } <nl> finally <nl> { <nl> @ @ - 995 , 11 + 986 , 10 @ @ public class CassandraServer implements Cassandra . Iface <nl> { <nl> if ( startSessionIfRequested ( ) ) <nl> { <nl> - Map < String , String > traceParameters = ImmutableMap . of ( <nl> - " column _ family " , column _ family , <nl> - " range " , range . toString ( ) , <nl> - " start _ column " , ByteBufferUtil . bytesToHex ( start _ column ) , <nl> - " consistency _ level " , consistency _ level . name ( ) ) ; <nl> + Map < String , String > traceParameters = ImmutableMap . of ( " column _ family " , column _ family , <nl> + " range " , range . toString ( ) , <nl> + " start _ column " , ByteBufferUtil . bytesToHex ( start _ column ) , <nl> + " consistency _ level " , consistency _ level . name ( ) ) ; <nl> Tracing . instance ( ) . begin ( " get _ paged _ slice " , traceParameters ) ; <nl> } <nl> else <nl> @ @ - 1020 , 8 + 1010 , 7 @ @ public class CassandraServer implements Cassandra . Iface <nl> org . apache . cassandra . db . ConsistencyLevel consistencyLevel = ThriftConversion . fromThrift ( consistency _ level ) ; <nl> consistencyLevel . validateForRead ( keyspace ) ; <nl> <nl> - SlicePredicate predicate = new SlicePredicate ( ) . setSlice _ range ( new SliceRange ( start _ column , <nl> - ByteBufferUtil . EMPTY _ BYTE _ BUFFER , false , - 1 ) ) ; <nl> + SlicePredicate predicate = new SlicePredicate ( ) . setSlice _ range ( new SliceRange ( start _ column , ByteBufferUtil . EMPTY _ BYTE _ BUFFER , false , - 1 ) ) ; <nl> <nl> IPartitioner p = StorageService . getPartitioner ( ) ; <nl> AbstractBounds < RowPosition > bounds ; <nl> @ @ - 1035 , 9 + 1024 , 9 @ @ public class CassandraServer implements Cassandra . Iface <nl> } <nl> else <nl> { <nl> - RowPosition end = range . end _ key = = null ? p . getTokenFactory ( ) . fromString ( range . end _ token ) <nl> - . maxKeyBound ( p ) <nl> - : RowPosition . forKey ( range . end _ key , p ) ; <nl> + RowPosition end = range . end _ key = = null <nl> + ? p . getTokenFactory ( ) . fromString ( range . end _ token ) . maxKeyBound ( p ) <nl> + : RowPosition . forKey ( range . end _ key , p ) ; <nl> bounds = new Bounds < RowPosition > ( RowPosition . forKey ( range . start _ key , p ) , end ) ; <nl> } <nl> <nl> @ @ - 1047 , 7 + 1036 , 7 @ @ public class CassandraServer implements Cassandra . Iface <nl> { <nl> IDiskAtomFilter filter = ThriftValidation . asIFilter ( predicate , metadata . comparator ) ; <nl> rows = StorageProxy . getRangeSlice ( new RangeSliceCommand ( keyspace , column _ family , null , filter , <nl> - bounds , range . row _ filter , range . count , true , true ) , consistencyLevel ) ; <nl> + bounds , range . row _ filter , range . count , true , true ) , consistencyLevel ) ; <nl> } <nl> finally <nl> { <nl> @ @ - 1098 , 11 + 1087 , 10 @ @ public class CassandraServer implements Cassandra . Iface <nl> { <nl> if ( startSessionIfRequested ( ) ) <nl> { <nl> - Map < String , String > traceParameters = ImmutableMap . of ( <nl> - " column _ parent " , column _ parent . toString ( ) , <nl> - " index _ clause " , index _ clause . toString ( ) , <nl> - " slice _ predicate " , column _ predicate . toString ( ) , <nl> - " consistency _ level " , consistency _ level . name ( ) ) ; <nl> + Map < String , String > traceParameters = ImmutableMap . of ( " column _ parent " , column _ parent . toString ( ) , <nl> + " index _ clause " , index _ clause . toString ( ) , <nl> + " slice _ predicate " , column _ predicate . toString ( ) , <nl> + " consistency _ level " , consistency _ level . name ( ) ) ; <nl> Tracing . instance ( ) . begin ( " get _ indexed _ slices " , traceParameters ) ; <nl> } <nl> else <nl> @ @ - 1124 , 17 + 1112 , 16 @ @ public class CassandraServer implements Cassandra . Iface <nl> <nl> IPartitioner p = StorageService . getPartitioner ( ) ; <nl> AbstractBounds < RowPosition > bounds = new Bounds < RowPosition > ( RowPosition . forKey ( index _ clause . start _ key , p ) , <nl> - p . getMinimumToken ( ) . minKeyBound ( ) ) ; <nl> + p . getMinimumToken ( ) . minKeyBound ( ) ) ; <nl> <nl> - IDiskAtomFilter filter = ThriftValidation . asIFilter ( column _ predicate , <nl> - metadata . getComparatorFor ( column _ parent . super _ column ) ) ; <nl> + IDiskAtomFilter filter = ThriftValidation . asIFilter ( column _ predicate , metadata . getComparatorFor ( column _ parent . super _ column ) ) ; <nl> RangeSliceCommand command = new RangeSliceCommand ( keyspace , <nl> - column _ parent . column _ family , <nl> - null , <nl> - filter , <nl> - bounds , <nl> - index _ clause . expressions , <nl> - index _ clause . count ) ; <nl> + column _ parent . column _ family , <nl> + null , <nl> + filter , <nl> + bounds , <nl> + index _ clause . expressions , <nl> + index _ clause . count ) ; <nl> <nl> List < Row > rows = StorageProxy . getRangeSlice ( command , consistencyLevel ) ; <nl> return thriftifyKeySlices ( rows , column _ parent , column _ predicate ) ; <nl> @ @ - 1518 , 10 + 1505 , 9 @ @ public class CassandraServer implements Cassandra . Iface <nl> { <nl> if ( startSessionIfRequested ( ) ) <nl> { <nl> - Map < String , String > traceParameters = ImmutableMap . of ( <nl> - " column _ parent " , column _ parent . toString ( ) , <nl> - " column " , column . toString ( ) , <nl> - " consistency _ level " , consistency _ level . name ( ) ) ; <nl> + Map < String , String > traceParameters = ImmutableMap . of ( " column _ parent " , column _ parent . toString ( ) , <nl> + " column " , column . toString ( ) , <nl> + " consistency _ level " , consistency _ level . name ( ) ) ; <nl> Tracing . instance ( ) . begin ( " add " , traceParameters ) ; <nl> } <nl> else <nl> @ @ - 1572 , 8 + 1558 , 8 @ @ public class CassandraServer implements Cassandra . Iface <nl> if ( startSessionIfRequested ( ) ) <nl> { <nl> Map < String , String > traceParameters = ImmutableMap . of ( " key " , ByteBufferUtil . bytesToHex ( key ) , <nl> - " column _ path " , path . toString ( ) , <nl> - " consistency _ level " , consistency _ level . name ( ) ) ; <nl> + " column _ path " , path . toString ( ) , <nl> + " consistency _ level " , consistency _ level . name ( ) ) ; <nl> Tracing . instance ( ) . begin ( " remove _ counter " , traceParameters ) ; <nl> } <nl> else <nl> @ @ - 1615 , 11 + 1601 , 11 @ @ public class CassandraServer implements Cassandra . Iface <nl> { <nl> if ( decompressor . needsInput ( ) ) <nl> lenRead = query . remaining ( ) < 1024 ? query . remaining ( ) : 1024 ; <nl> - query . get ( inBuffer , 0 , lenRead ) ; <nl> - decompressor . setInput ( inBuffer , 0 , lenRead ) ; <nl> + query . get ( inBuffer , 0 , lenRead ) ; <nl> + decompressor . setInput ( inBuffer , 0 , lenRead ) ; <nl> <nl> int lenWrite = 0 ; <nl> - while ( ( lenWrite = decompressor . inflate ( outBuffer ) ) ! = 0 ) <nl> + while ( ( lenWrite = decompressor . inflate ( outBuffer ) ) ! = 0 ) <nl> decompressed . write ( outBuffer , 0 , lenWrite ) ; <nl> <nl> if ( decompressor . finished ( ) )

TEST DIFF:
diff - - git a / test / unit / org / apache / cassandra / locator / GoogleCloudSnitchTest . java b / test / unit / org / apache / cassandra / locator / GoogleCloudSnitchTest . java 
 index 70080a8 . . 09f96db 100644 
 - - - a / test / unit / org / apache / cassandra / locator / GoogleCloudSnitchTest . java 
 + + + b / test / unit / org / apache / cassandra / locator / GoogleCloudSnitchTest . java 
 @ @ - 52 , 7 + 52 , 6 @ @ public class GoogleCloudSnitchTest 
 { 
 SchemaLoader . mkdirs ( ) ; 
 SchemaLoader . cleanup ( ) ; 
 - Keyspace . setInitialized ( ) ; 
 StorageService . instance . initServer ( 0 ) ; 
 } 


NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / thrift / CassandraServer . java b / src / java / org / apache / cassandra / thrift / CassandraServer . java 
 index 393b5f1 . . 9cebacb 100644 
 - - - a / src / java / org / apache / cassandra / thrift / CassandraServer . java 
 + + + b / src / java / org / apache / cassandra / thrift / CassandraServer . java 
 @ @ - 297 , 9 + 297 , 9 @ @ public class CassandraServer implements Cassandra . Iface 
 if ( startSessionIfRequested ( ) ) 
 { 
 Map < String , String > traceParameters = ImmutableMap . of ( " key " , ByteBufferUtil . bytesToHex ( key ) , 
 - " column _ parent " , column _ parent . toString ( ) , 
 - " predicate " , predicate . toString ( ) , 
 - " consistency _ level " , consistency _ level . name ( ) ) ; 
 + " column _ parent " , column _ parent . toString ( ) , 
 + " predicate " , predicate . toString ( ) , 
 + " consistency _ level " , consistency _ level . name ( ) ) ; 
 Tracing . instance ( ) . begin ( " get _ slice " , traceParameters ) ; 
 } 
 else 
 @ @ - 310 , 8 + 310 , 7 @ @ public class CassandraServer implements Cassandra . Iface 
 try 
 { 
 state ( ) . hasColumnFamilyAccess ( column _ parent . column _ family , Permission . SELECT ) ; 
 - return multigetSliceInternal ( state ( ) . getKeyspace ( ) , Collections . singletonList ( key ) , column _ parent , 
 - predicate , consistency _ level ) . get ( key ) ; 
 + return multigetSliceInternal ( state ( ) . getKeyspace ( ) , Collections . singletonList ( key ) , column _ parent , predicate , consistency _ level ) . get ( key ) ; 
 } 
 catch ( RequestValidationException e ) 
 { 
 @ @ - 330 , 13 + 329 , 11 @ @ public class CassandraServer implements Cassandra . Iface 
 { 
 List < String > keysList = Lists . newArrayList ( ) ; 
 for ( ByteBuffer key : keys ) 
 - { 
 keysList . add ( ByteBufferUtil . bytesToHex ( key ) ) ; 
 - } 
 Map < String , String > traceParameters = ImmutableMap . of ( " keys " , keysList . toString ( ) , 
 - " column _ parent " , column _ parent . toString ( ) , 
 - " predicate " , predicate . toString ( ) , 
 - " consistency _ level " , consistency _ level . name ( ) ) ; 
 + " column _ parent " , column _ parent . toString ( ) , 
 + " predicate " , predicate . toString ( ) , 
 + " consistency _ level " , consistency _ level . name ( ) ) ; 
 Tracing . instance ( ) . begin ( " multiget _ slice " , traceParameters ) ; 
 } 
 else 
 @ @ - 424 , 12 + 421 , 11 @ @ public class CassandraServer implements Cassandra . Iface 
 public ColumnOrSuperColumn get ( ByteBuffer key , ColumnPath column _ path , ConsistencyLevel consistency _ level ) 
 throws InvalidRequestException , NotFoundException , UnavailableException , TimedOutException 
 { 
 - 
 if ( startSessionIfRequested ( ) ) 
 { 
 Map < String , String > traceParameters = ImmutableMap . of ( " key " , ByteBufferUtil . bytesToHex ( key ) , 
 - " column _ path " , column _ path . toString ( ) , 
 - " consistency _ level " , consistency _ level . name ( ) ) ; 
 + " column _ path " , column _ path . toString ( ) , 
 + " consistency _ level " , consistency _ level . name ( ) ) ; 
 Tracing . instance ( ) . begin ( " get " , traceParameters ) ; 
 } 
 else 
 @ @ - 457 , 9 + 453 , 9 @ @ public class CassandraServer implements Cassandra . Iface 
 if ( startSessionIfRequested ( ) ) 
 { 
 Map < String , String > traceParameters = ImmutableMap . of ( " key " , ByteBufferUtil . bytesToHex ( key ) , 
 - " column _ parent " , column _ parent . toString ( ) , 
 - " predicate " , predicate . toString ( ) , 
 - " consistency _ level " , consistency _ level . name ( ) ) ; 
 + " column _ parent " , column _ parent . toString ( ) , 
 + " predicate " , predicate . toString ( ) , 
 + " consistency _ level " , consistency _ level . name ( ) ) ; 
 Tracing . instance ( ) . begin ( " get _ count " , traceParameters ) ; 
 } 
 else 
 @ @ - 482 , 8 + 478 , 7 @ @ public class CassandraServer implements Cassandra . Iface 
 if ( cfs . getMeanColumns ( ) > 0 ) 
 { 
 int averageColumnSize = ( int ) ( cfs . getMeanRowSize ( ) / cfs . getMeanColumns ( ) ) ; 
 - pageSize = Math . min ( COUNT _ PAGE _ SIZE , 
 - DatabaseDescriptor . getInMemoryCompactionLimit ( ) / averageColumnSize ) ; 
 + pageSize = Math . min ( COUNT _ PAGE _ SIZE , DatabaseDescriptor . getInMemoryCompactionLimit ( ) / averageColumnSize ) ; 
 pageSize = Math . max ( 2 , pageSize ) ; 
 logger . debug ( " average row column size is { } ; using pageSize of { } " , averageColumnSize , pageSize ) ; 
 } 
 @ @ - 498 , 9 + 493 , 9 @ @ public class CassandraServer implements Cassandra . Iface 
 if ( predicate . slice _ range = = null ) 
 { 
 predicate . slice _ range = new SliceRange ( ByteBufferUtil . EMPTY _ BYTE _ BUFFER , 
 - ByteBufferUtil . EMPTY _ BYTE _ BUFFER , 
 - false , 
 - Integer . MAX _ VALUE ) ; 
 + ByteBufferUtil . EMPTY _ BYTE _ BUFFER , 
 + false , 
 + Integer . MAX _ VALUE ) ; 
 } 
 
 final int requestedCount = predicate . slice _ range . count ; 
 @ @ - 514 , 8 + 509 , 7 @ @ public class CassandraServer implements Cassandra . Iface 
 break ; 
 
 ByteBuffer firstName = getName ( columns . get ( 0 ) ) ; 
 - int newColumns = pages = = 0 | | ! firstName . equals ( predicate . slice _ range . start ) ? columns . size ( ) 
 - : columns . size ( ) - 1 ; 
 + int newColumns = pages = = 0 | | ! firstName . equals ( predicate . slice _ range . start ) ? columns . size ( ) : columns . size ( ) - 1 ; 
 
 totalCount + = newColumns ; 
 / / if we over - counted , just return original limit 
 @ @ - 562 , 9 + 556 , 9 @ @ public class CassandraServer implements Cassandra . Iface 
 keysList . add ( ByteBufferUtil . bytesToHex ( key ) ) ; 
 } 
 Map < String , String > traceParameters = ImmutableMap . of ( " keys " , keysList . toString ( ) , 
 - " column _ parent " , column _ parent . toString ( ) , 
 - " predicate " , predicate . toString ( ) , 
 - " consistency _ level " , consistency _ level . name ( ) ) ; 
 + " column _ parent " , column _ parent . toString ( ) , 
 + " predicate " , predicate . toString ( ) , 
 + " consistency _ level " , consistency _ level . name ( ) ) ; 
 Tracing . instance ( ) . begin ( " multiget _ count " , traceParameters ) ; 
 } 
 else 
 @ @ - 579 , 13 + 573 , 10 @ @ public class CassandraServer implements Cassandra . Iface 
 String keyspace = cState . getKeyspace ( ) ; 
 
 Map < ByteBuffer , Integer > counts = new HashMap < ByteBuffer , Integer > ( ) ; 
 - Map < ByteBuffer , List < ColumnOrSuperColumn > > columnFamiliesMap = multigetSliceInternal ( keyspace , keys , 
 - column _ parent , predicate , consistency _ level ) ; 
 + Map < ByteBuffer , List < ColumnOrSuperColumn > > columnFamiliesMap = multigetSliceInternal ( keyspace , keys , column _ parent , predicate , consistency _ level ) ; 
 
 for ( Map . Entry < ByteBuffer , List < ColumnOrSuperColumn > > cf : columnFamiliesMap . entrySet ( ) ) 
 - { 
 counts . put ( cf . getKey ( ) , cf . getValue ( ) . size ( ) ) ; 
 - } 
 return counts ; 
 } 
 catch ( RequestValidationException e ) 
 @ @ - 633 , 9 + 624 , 9 @ @ public class CassandraServer implements Cassandra . Iface 
 if ( startSessionIfRequested ( ) ) 
 { 
 Map < String , String > traceParameters = ImmutableMap . of ( " key " , ByteBufferUtil . bytesToHex ( key ) , 
 - " column _ parent " , column _ parent . toString ( ) , 
 - " column " , column . toString ( ) , 
 - " consistency _ level " , consistency _ level . name ( ) ) ; 
 + " column _ parent " , column _ parent . toString ( ) , 
 + " column " , column . toString ( ) , 
 + " consistency _ level " , consistency _ level . name ( ) ) ; 
 Tracing . instance ( ) . begin ( " insert " , traceParameters ) ; 
 } 
 else 
 @ @ - 742 , 7 + 733 , 7 @ @ public class CassandraServer implements Cassandra . Iface 
 for ( Map . Entry < ByteBuffer , Map < String , List < Mutation > > > mutationEntry : mutation _ map . entrySet ( ) ) 
 { 
 traceParameters . put ( ByteBufferUtil . bytesToHex ( mutationEntry . getKey ( ) ) , 
 - Joiner . on ( " ; " ) . withKeyValueSeparator ( " : " ) . join ( mutationEntry . getValue ( ) ) ) ; 
 + Joiner . on ( " ; " ) . withKeyValueSeparator ( " : " ) . join ( mutationEntry . getValue ( ) ) ) ; 
 } 
 traceParameters . put ( " consistency _ level " , consistency _ level . name ( ) ) ; 
 Tracing . instance ( ) . begin ( " batch _ mutate " , traceParameters ) ; 
 @ @ - 775 , 7 + 766 , 7 @ @ public class CassandraServer implements Cassandra . Iface 
 for ( Map . Entry < ByteBuffer , Map < String , List < Mutation > > > mutationEntry : mutation _ map . entrySet ( ) ) 
 { 
 traceParameters . put ( ByteBufferUtil . bytesToHex ( mutationEntry . getKey ( ) ) , 
 - Joiner . on ( " ; " ) . withKeyValueSeparator ( " : " ) . join ( mutationEntry . getValue ( ) ) ) ; 
 + Joiner . on ( " ; " ) . withKeyValueSeparator ( " : " ) . join ( mutationEntry . getValue ( ) ) ) ; 
 } 
 traceParameters . put ( " consistency _ level " , consistency _ level . name ( ) ) ; 
 Tracing . instance ( ) . begin ( " atomic _ batch _ mutate " , traceParameters ) ; 
 @ @ - 826 , 9 + 817 , 9 @ @ public class CassandraServer implements Cassandra . Iface 
 if ( startSessionIfRequested ( ) ) 
 { 
 Map < String , String > traceParameters = ImmutableMap . of ( " key " , ByteBufferUtil . bytesToHex ( key ) , 
 - " column _ path " , column _ path . toString ( ) , 
 - " timestamp " , timestamp + " " , 
 - " consistency _ level " , consistency _ level . name ( ) ) ; 
 + " column _ path " , column _ path . toString ( ) , 
 + " timestamp " , timestamp + " " , 
 + " consistency _ level " , consistency _ level . name ( ) ) ; 
 Tracing . instance ( ) . begin ( " remove " , traceParameters ) ; 
 } 
 else 
 @ @ - 947 , 17 + 938 , 17 @ @ public class CassandraServer implements Cassandra . Iface 
 } 
 else 
 { 
 - RowPosition end = range . end _ key = = null ? p . getTokenFactory ( ) . fromString ( range . end _ token ) . maxKeyBound ( p ) 
 - : RowPosition . forKey ( range . end _ key , p ) ; 
 + RowPosition end = range . end _ key = = null 
 + ? p . getTokenFactory ( ) . fromString ( range . end _ token ) . maxKeyBound ( p ) 
 + : RowPosition . forKey ( range . end _ key , p ) ; 
 bounds = new Bounds < RowPosition > ( RowPosition . forKey ( range . start _ key , p ) , end ) ; 
 } 
 schedule ( DatabaseDescriptor . getRangeRpcTimeout ( ) ) ; 
 try 
 { 
 - IDiskAtomFilter filter = ThriftValidation . asIFilter ( predicate , 
 - metadata . getComparatorFor ( column _ parent . super _ column ) ) ; 
 + IDiskAtomFilter filter = ThriftValidation . asIFilter ( predicate , metadata . getComparatorFor ( column _ parent . super _ column ) ) ; 
 rows = StorageProxy . getRangeSlice ( new RangeSliceCommand ( keyspace , column _ parent , filter , bounds , 
 - range . row _ filter , range . count ) , consistencyLevel ) ; 
 + range . row _ filter , range . count ) , consistencyLevel ) ; 
 } 
 finally 
 { 
 @ @ - 995 , 11 + 986 , 10 @ @ public class CassandraServer implements Cassandra . Iface 
 { 
 if ( startSessionIfRequested ( ) ) 
 { 
 - Map < String , String > traceParameters = ImmutableMap . of ( 
 - " column _ family " , column _ family , 
 - " range " , range . toString ( ) , 
 - " start _ column " , ByteBufferUtil . bytesToHex ( start _ column ) , 
 - " consistency _ level " , consistency _ level . name ( ) ) ; 
 + Map < String , String > traceParameters = ImmutableMap . of ( " column _ family " , column _ family , 
 + " range " , range . toString ( ) , 
 + " start _ column " , ByteBufferUtil . bytesToHex ( start _ column ) , 
 + " consistency _ level " , consistency _ level . name ( ) ) ; 
 Tracing . instance ( ) . begin ( " get _ paged _ slice " , traceParameters ) ; 
 } 
 else 
 @ @ - 1020 , 8 + 1010 , 7 @ @ public class CassandraServer implements Cassandra . Iface 
 org . apache . cassandra . db . ConsistencyLevel consistencyLevel = ThriftConversion . fromThrift ( consistency _ level ) ; 
 consistencyLevel . validateForRead ( keyspace ) ; 
 
 - SlicePredicate predicate = new SlicePredicate ( ) . setSlice _ range ( new SliceRange ( start _ column , 
 - ByteBufferUtil . EMPTY _ BYTE _ BUFFER , false , - 1 ) ) ; 
 + SlicePredicate predicate = new SlicePredicate ( ) . setSlice _ range ( new SliceRange ( start _ column , ByteBufferUtil . EMPTY _ BYTE _ BUFFER , false , - 1 ) ) ; 
 
 IPartitioner p = StorageService . getPartitioner ( ) ; 
 AbstractBounds < RowPosition > bounds ; 
 @ @ - 1035 , 9 + 1024 , 9 @ @ public class CassandraServer implements Cassandra . Iface 
 } 
 else 
 { 
 - RowPosition end = range . end _ key = = null ? p . getTokenFactory ( ) . fromString ( range . end _ token ) 
 - . maxKeyBound ( p ) 
 - : RowPosition . forKey ( range . end _ key , p ) ; 
 + RowPosition end = range . end _ key = = null 
 + ? p . getTokenFactory ( ) . fromString ( range . end _ token ) . maxKeyBound ( p ) 
 + : RowPosition . forKey ( range . end _ key , p ) ; 
 bounds = new Bounds < RowPosition > ( RowPosition . forKey ( range . start _ key , p ) , end ) ; 
 } 
 
 @ @ - 1047 , 7 + 1036 , 7 @ @ public class CassandraServer implements Cassandra . Iface 
 { 
 IDiskAtomFilter filter = ThriftValidation . asIFilter ( predicate , metadata . comparator ) ; 
 rows = StorageProxy . getRangeSlice ( new RangeSliceCommand ( keyspace , column _ family , null , filter , 
 - bounds , range . row _ filter , range . count , true , true ) , consistencyLevel ) ; 
 + bounds , range . row _ filter , range . count , true , true ) , consistencyLevel ) ; 
 } 
 finally 
 { 
 @ @ - 1098 , 11 + 1087 , 10 @ @ public class CassandraServer implements Cassandra . Iface 
 { 
 if ( startSessionIfRequested ( ) ) 
 { 
 - Map < String , String > traceParameters = ImmutableMap . of ( 
 - " column _ parent " , column _ parent . toString ( ) , 
 - " index _ clause " , index _ clause . toString ( ) , 
 - " slice _ predicate " , column _ predicate . toString ( ) , 
 - " consistency _ level " , consistency _ level . name ( ) ) ; 
 + Map < String , String > traceParameters = ImmutableMap . of ( " column _ parent " , column _ parent . toString ( ) , 
 + " index _ clause " , index _ clause . toString ( ) , 
 + " slice _ predicate " , column _ predicate . toString ( ) , 
 + " consistency _ level " , consistency _ level . name ( ) ) ; 
 Tracing . instance ( ) . begin ( " get _ indexed _ slices " , traceParameters ) ; 
 } 
 else 
 @ @ - 1124 , 17 + 1112 , 16 @ @ public class CassandraServer implements Cassandra . Iface 
 
 IPartitioner p = StorageService . getPartitioner ( ) ; 
 AbstractBounds < RowPosition > bounds = new Bounds < RowPosition > ( RowPosition . forKey ( index _ clause . start _ key , p ) , 
 - p . getMinimumToken ( ) . minKeyBound ( ) ) ; 
 + p . getMinimumToken ( ) . minKeyBound ( ) ) ; 
 
 - IDiskAtomFilter filter = ThriftValidation . asIFilter ( column _ predicate , 
 - metadata . getComparatorFor ( column _ parent . super _ column ) ) ; 
 + IDiskAtomFilter filter = ThriftValidation . asIFilter ( column _ predicate , metadata . getComparatorFor ( column _ parent . super _ column ) ) ; 
 RangeSliceCommand command = new RangeSliceCommand ( keyspace , 
 - column _ parent . column _ family , 
 - null , 
 - filter , 
 - bounds , 
 - index _ clause . expressions , 
 - index _ clause . count ) ; 
 + column _ parent . column _ family , 
 + null , 
 + filter , 
 + bounds , 
 + index _ clause . expressions , 
 + index _ clause . count ) ; 
 
 List < Row > rows = StorageProxy . getRangeSlice ( command , consistencyLevel ) ; 
 return thriftifyKeySlices ( rows , column _ parent , column _ predicate ) ; 
 @ @ - 1518 , 10 + 1505 , 9 @ @ public class CassandraServer implements Cassandra . Iface 
 { 
 if ( startSessionIfRequested ( ) ) 
 { 
 - Map < String , String > traceParameters = ImmutableMap . of ( 
 - " column _ parent " , column _ parent . toString ( ) , 
 - " column " , column . toString ( ) , 
 - " consistency _ level " , consistency _ level . name ( ) ) ; 
 + Map < String , String > traceParameters = ImmutableMap . of ( " column _ parent " , column _ parent . toString ( ) , 
 + " column " , column . toString ( ) , 
 + " consistency _ level " , consistency _ level . name ( ) ) ; 
 Tracing . instance ( ) . begin ( " add " , traceParameters ) ; 
 } 
 else 
 @ @ - 1572 , 8 + 1558 , 8 @ @ public class CassandraServer implements Cassandra . Iface 
 if ( startSessionIfRequested ( ) ) 
 { 
 Map < String , String > traceParameters = ImmutableMap . of ( " key " , ByteBufferUtil . bytesToHex ( key ) , 
 - " column _ path " , path . toString ( ) , 
 - " consistency _ level " , consistency _ level . name ( ) ) ; 
 + " column _ path " , path . toString ( ) , 
 + " consistency _ level " , consistency _ level . name ( ) ) ; 
 Tracing . instance ( ) . begin ( " remove _ counter " , traceParameters ) ; 
 } 
 else 
 @ @ - 1615 , 11 + 1601 , 11 @ @ public class CassandraServer implements Cassandra . Iface 
 { 
 if ( decompressor . needsInput ( ) ) 
 lenRead = query . remaining ( ) < 1024 ? query . remaining ( ) : 1024 ; 
 - query . get ( inBuffer , 0 , lenRead ) ; 
 - decompressor . setInput ( inBuffer , 0 , lenRead ) ; 
 + query . get ( inBuffer , 0 , lenRead ) ; 
 + decompressor . setInput ( inBuffer , 0 , lenRead ) ; 
 
 int lenWrite = 0 ; 
 - while ( ( lenWrite = decompressor . inflate ( outBuffer ) ) ! = 0 ) 
 + while ( ( lenWrite = decompressor . inflate ( outBuffer ) ) ! = 0 ) 
 decompressed . write ( outBuffer , 0 , lenWrite ) ; 
 
 if ( decompressor . finished ( ) )
