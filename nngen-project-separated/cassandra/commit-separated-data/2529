BLEU SCORE: 0.027611988917697356

TEST MSG: Allow overriding cassandra - rackdc . properties location
GENERATED MSG: Make Ec2Region ' s datacenter name configurable

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 50d5896 . . 81eb566 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 0 . 8 <nl> + * Allow overriding cassandra - rackdc . properties file ( CASSANDRA - 7072 ) <nl> * Set JMX RMI port to 7199 ( CASSANDRA - 7087 ) <nl> * Use LOCAL _ QUORUM for data reads at LOCAL _ SERIAL ( CASSANDRA - 6939 ) <nl> * Log a warning for large batches ( CASSANDRA - 6487 ) <nl> diff - - git a / src / java / org / apache / cassandra / locator / SnitchProperties . java b / src / java / org / apache / cassandra / locator / SnitchProperties . java <nl> index 809a180 . . a78b2a7 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / SnitchProperties . java <nl> + + + b / src / java / org / apache / cassandra / locator / SnitchProperties . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ <nl> package org . apache . cassandra . locator ; <nl> <nl> import java . io . InputStream ; <nl> + import java . net . URL ; <nl> import java . util . Properties ; <nl> <nl> import org . apache . cassandra . io . util . FileUtils ; <nl> @ @ - 32 , 14 + 33 , 21 @ @ public class SnitchProperties <nl> <nl> static <nl> { <nl> - InputStream stream = SnitchProperties . class . getClassLoader ( ) . getResourceAsStream ( RACKDC _ PROPERTY _ FILENAME ) ; <nl> + properties = new Properties ( ) ; <nl> + InputStream stream = null ; <nl> + String configURL = System . getProperty ( " cassandra . rackdc . properties " ) ; <nl> try <nl> { <nl> + URL url = new URL ( configURL ) ; <nl> + if ( configURL = = null ) <nl> + url = SnitchProperties . class . getClassLoader ( ) . getResource ( <nl> + " cassandra - rackdc . properties " ) ; <nl> + stream = url . openStream ( ) ; <nl> properties . load ( stream ) ; <nl> } <nl> catch ( Exception e ) <nl> { <nl> - / / do not throw exception here , just consider this a incomplete or a empty property file . <nl> + / / do not throw exception here , just consider this an incomplete or an empty property file . <nl> logger . warn ( " Unable to read " + RACKDC _ PROPERTY _ FILENAME ) ; <nl> } <nl> finally
NEAREST DIFF (one line): diff - - git a / conf / cassandra - env . sh b / conf / cassandra - env . sh <nl> index 95760dd . . e38371f 100644 <nl> - - - a / conf / cassandra - env . sh <nl> + + + b / conf / cassandra - env . sh <nl> @ @ - 30 , 6 + 30 , 11 @ @ calculate _ heap _ sizes ( ) <nl> system _ memory _ in _ mb = ` prtconf | awk ' / Memory size : / { print $ 3 } ' ` <nl> system _ cpu _ cores = ` psrinfo | wc - l ` <nl> ; ; <nl> + Darwin ) <nl> + system _ memory _ in _ bytes = ` sysctl hw . memsize | awk ' { print $ 2 } ' ` <nl> + system _ memory _ in _ mb = ` expr $ system _ memory _ in _ bytes / 1024 / 1024 ` <nl> + system _ cpu _ cores = ` sysctl hw . ncpu | awk ' { print $ 2 } ' ` <nl> + ; ; <nl> * ) <nl> # assume reasonable defaults for e . g . a modern desktop or <nl> # cheap server

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 50d5896 . . 81eb566 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 0 . 8 
 + * Allow overriding cassandra - rackdc . properties file ( CASSANDRA - 7072 ) 
 * Set JMX RMI port to 7199 ( CASSANDRA - 7087 ) 
 * Use LOCAL _ QUORUM for data reads at LOCAL _ SERIAL ( CASSANDRA - 6939 ) 
 * Log a warning for large batches ( CASSANDRA - 6487 ) 
 diff - - git a / src / java / org / apache / cassandra / locator / SnitchProperties . java b / src / java / org / apache / cassandra / locator / SnitchProperties . java 
 index 809a180 . . a78b2a7 100644 
 - - - a / src / java / org / apache / cassandra / locator / SnitchProperties . java 
 + + + b / src / java / org / apache / cassandra / locator / SnitchProperties . java 
 @ @ - 18 , 6 + 18 , 7 @ @ 
 package org . apache . cassandra . locator ; 
 
 import java . io . InputStream ; 
 + import java . net . URL ; 
 import java . util . Properties ; 
 
 import org . apache . cassandra . io . util . FileUtils ; 
 @ @ - 32 , 14 + 33 , 21 @ @ public class SnitchProperties 
 
 static 
 { 
 - InputStream stream = SnitchProperties . class . getClassLoader ( ) . getResourceAsStream ( RACKDC _ PROPERTY _ FILENAME ) ; 
 + properties = new Properties ( ) ; 
 + InputStream stream = null ; 
 + String configURL = System . getProperty ( " cassandra . rackdc . properties " ) ; 
 try 
 { 
 + URL url = new URL ( configURL ) ; 
 + if ( configURL = = null ) 
 + url = SnitchProperties . class . getClassLoader ( ) . getResource ( 
 + " cassandra - rackdc . properties " ) ; 
 + stream = url . openStream ( ) ; 
 properties . load ( stream ) ; 
 } 
 catch ( Exception e ) 
 { 
 - / / do not throw exception here , just consider this a incomplete or a empty property file . 
 + / / do not throw exception here , just consider this an incomplete or an empty property file . 
 logger . warn ( " Unable to read " + RACKDC _ PROPERTY _ FILENAME ) ; 
 } 
 finally

NEAREST DIFF:
diff - - git a / conf / cassandra - env . sh b / conf / cassandra - env . sh 
 index 95760dd . . e38371f 100644 
 - - - a / conf / cassandra - env . sh 
 + + + b / conf / cassandra - env . sh 
 @ @ - 30 , 6 + 30 , 11 @ @ calculate _ heap _ sizes ( ) 
 system _ memory _ in _ mb = ` prtconf | awk ' / Memory size : / { print $ 3 } ' ` 
 system _ cpu _ cores = ` psrinfo | wc - l ` 
 ; ; 
 + Darwin ) 
 + system _ memory _ in _ bytes = ` sysctl hw . memsize | awk ' { print $ 2 } ' ` 
 + system _ memory _ in _ mb = ` expr $ system _ memory _ in _ bytes / 1024 / 1024 ` 
 + system _ cpu _ cores = ` sysctl hw . ncpu | awk ' { print $ 2 } ' ` 
 + ; ; 
 * ) 
 # assume reasonable defaults for e . g . a modern desktop or 
 # cheap server
