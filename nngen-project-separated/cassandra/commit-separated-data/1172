BLEU SCORE: 0.0334950357084578

TEST MSG: Improve COPY command to work with Counter columns
GENERATED MSG: cqlsh : fix COPY FROM handling of null / empty PK values

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 9e2869e . . 86e5cb2 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 12 <nl> + * ( cqlsh ) Support counters in COPY commands ( CASSANDRA - 9043 ) <nl> * Try next replica if not possible to connect to primary replica on <nl> ColumnFamilyRecordReader ( CASSANDRA - 2388 ) <nl> * Limit window size in DTCS ( CASSANDRA - 10280 ) <nl> diff - - git a / bin / cqlsh b / bin / cqlsh <nl> index 5459d67 . . 56cd218 100755 <nl> - - - a / bin / cqlsh <nl> + + + b / bin / cqlsh <nl> @ @ - 1696 , 10 + 1696 , 16 @ @ class Shell ( cmd . Cmd ) : <nl> pk _ cols = [ col . name for col in table _ meta . primary _ key ] <nl> cqltypes = [ table _ meta . columns [ name ] . typestring for name in columns ] <nl> pk _ indexes = [ columns . index ( col . name ) for col in table _ meta . primary _ key ] <nl> - query = ' INSERT INTO % s . % s ( % s ) VALUES ( % % s ) ' % ( <nl> - protect _ name ( ks ) , <nl> - protect _ name ( cf ) , <nl> - ' , ' . join ( protect _ names ( columns ) ) ) <nl> + is _ counter _ table = ( " counter " in cqltypes ) <nl> + if is _ counter _ table : <nl> + query = ' Update % s . % s SET % % s WHERE % % s ' % ( <nl> + protect _ name ( ks ) , <nl> + protect _ name ( cf ) ) <nl> + else : <nl> + query = ' INSERT INTO % s . % s ( % s ) VALUES ( % % s ) ' % ( <nl> + protect _ name ( ks ) , <nl> + protect _ name ( cf ) , <nl> + ' , ' . join ( protect _ names ( columns ) ) ) <nl> <nl> # we need to handle some types specially <nl> should _ escape = [ t in ( ' ascii ' , ' text ' , ' timestamp ' , ' date ' , ' time ' , ' inet ' ) for t in cqltypes ] <nl> @ @ - 1764 , 8 + 1770 , 17 @ @ class Shell ( cmd . Cmd ) : <nl> return <nl> else : <nl> row [ i ] = ' null ' <nl> - <nl> - full _ query = query % ( ' , ' . join ( row ) , ) <nl> + if is _ counter _ table : <nl> + where _ clause = [ ] <nl> + set _ clause = [ ] <nl> + for i , value in enumerate ( row ) : <nl> + if i in pk _ indexes : <nl> + where _ clause . append ( " % s = % s " % ( columns [ i ] , value ) ) <nl> + else : <nl> + set _ clause . append ( " % s = % s + % s " % ( columns [ i ] , columns [ i ] , value ) ) <nl> + full _ query = query % ( ' , ' . join ( set _ clause ) , ' AND ' . join ( where _ clause ) ) <nl> + else : <nl> + full _ query = query % ( ' , ' . join ( row ) , ) <nl> query _ message = QueryMessage ( <nl> full _ query , self . consistency _ level , serial _ consistency _ level = None , <nl> fetch _ size = None , paging _ state = None , timestamp = insert _ timestamp )
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 9e2869e . . 86e5cb2 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 12 
 + * ( cqlsh ) Support counters in COPY commands ( CASSANDRA - 9043 ) 
 * Try next replica if not possible to connect to primary replica on 
 ColumnFamilyRecordReader ( CASSANDRA - 2388 ) 
 * Limit window size in DTCS ( CASSANDRA - 10280 ) 
 diff - - git a / bin / cqlsh b / bin / cqlsh 
 index 5459d67 . . 56cd218 100755 
 - - - a / bin / cqlsh 
 + + + b / bin / cqlsh 
 @ @ - 1696 , 10 + 1696 , 16 @ @ class Shell ( cmd . Cmd ) : 
 pk _ cols = [ col . name for col in table _ meta . primary _ key ] 
 cqltypes = [ table _ meta . columns [ name ] . typestring for name in columns ] 
 pk _ indexes = [ columns . index ( col . name ) for col in table _ meta . primary _ key ] 
 - query = ' INSERT INTO % s . % s ( % s ) VALUES ( % % s ) ' % ( 
 - protect _ name ( ks ) , 
 - protect _ name ( cf ) , 
 - ' , ' . join ( protect _ names ( columns ) ) ) 
 + is _ counter _ table = ( " counter " in cqltypes ) 
 + if is _ counter _ table : 
 + query = ' Update % s . % s SET % % s WHERE % % s ' % ( 
 + protect _ name ( ks ) , 
 + protect _ name ( cf ) ) 
 + else : 
 + query = ' INSERT INTO % s . % s ( % s ) VALUES ( % % s ) ' % ( 
 + protect _ name ( ks ) , 
 + protect _ name ( cf ) , 
 + ' , ' . join ( protect _ names ( columns ) ) ) 
 
 # we need to handle some types specially 
 should _ escape = [ t in ( ' ascii ' , ' text ' , ' timestamp ' , ' date ' , ' time ' , ' inet ' ) for t in cqltypes ] 
 @ @ - 1764 , 8 + 1770 , 17 @ @ class Shell ( cmd . Cmd ) : 
 return 
 else : 
 row [ i ] = ' null ' 
 - 
 - full _ query = query % ( ' , ' . join ( row ) , ) 
 + if is _ counter _ table : 
 + where _ clause = [ ] 
 + set _ clause = [ ] 
 + for i , value in enumerate ( row ) : 
 + if i in pk _ indexes : 
 + where _ clause . append ( " % s = % s " % ( columns [ i ] , value ) ) 
 + else : 
 + set _ clause . append ( " % s = % s + % s " % ( columns [ i ] , columns [ i ] , value ) ) 
 + full _ query = query % ( ' , ' . join ( set _ clause ) , ' AND ' . join ( where _ clause ) ) 
 + else : 
 + full _ query = query % ( ' , ' . join ( row ) , ) 
 query _ message = QueryMessage ( 
 full _ query , self . consistency _ level , serial _ consistency _ level = None , 
 fetch _ size = None , paging _ state = None , timestamp = insert _ timestamp )

NEAREST DIFF:
ELIMINATEDSENTENCE
