BLEU SCORE: 0.04767707020457096

TEST MSG: ninja fix typo in cassandra - env . ps1
GENERATED MSG: fix jdk verison check for sh / dash

TEST DIFF (one line): diff - - git a / conf / cassandra - env . ps1 b / conf / cassandra - env . ps1 <nl> index 5100577 . . f005ab1 100644 <nl> - - - a / conf / cassandra - env . ps1 <nl> + + + b / conf / cassandra - env . ps1 <nl> @ @ - 332 , 7 + 332 , 7 @ @ Function SetCassandraEnvironment <nl> $ env : JVM _ OPTS = " $ env : JVM _ OPTS - javaagent : " " $ env : CASSANDRA _ HOME \ lib \ jamm - 0 . 3 . 0 . jar " " " <nl> } <nl> <nl> - if ( $ env : JVM _ VERSION . CompareTo ( " 1 . 8 . 0 _ 40 " - eq - 1 ) ) <nl> + if ( $ env : JVM _ VERSION . CompareTo ( " 1 . 8 . 0 _ 40 " ) - eq - 1 ) <nl> { <nl> echo " Cassandra 3 . 0 and later require Java 8u40 or later . " <nl> exit
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> index 2874433 . . 5ea05c5 100644 <nl> - - - a / src / java / org / apache / cassandra / config / CFMetaData . java <nl> + + + b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> @ @ - 582 , 7 + 582 , 7 @ @ public final class CFMetaData <nl> AbstractType validator = defaultValidator ; <nl> ColumnDefinition columnDefinition = column _ metadata . get ( column ) ; <nl> if ( columnDefinition ! = null ) <nl> - validator = columnDefinition . validator ; <nl> + validator = columnDefinition . getValidator ( ) ; <nl> return validator ; <nl> } <nl> <nl> @ @ - 684 , 10 + 684 , 12 @ @ public final class CFMetaData <nl> / / update the ones staying <nl> for ( org . apache . cassandra . avro . ColumnDef def : cf _ def . column _ metadata ) <nl> { <nl> - if ( ! column _ metadata . containsKey ( def . name ) ) <nl> + ColumnDefinition oldDef = column _ metadata . get ( def . name ) ; <nl> + if ( oldDef = = null ) <nl> continue ; <nl> - column _ metadata . get ( def . name ) . setIndexType ( def . index _ type = = null ? null : org . apache . cassandra . thrift . IndexType . valueOf ( def . index _ type . name ( ) ) ) ; <nl> - column _ metadata . get ( def . name ) . setIndexName ( def . index _ name = = null ? null : def . index _ name . toString ( ) ) ; <nl> + oldDef . setValidator ( DatabaseDescriptor . getComparator ( def . validation _ class ) ) ; <nl> + oldDef . setIndexType ( def . index _ type = = null ? null : org . apache . cassandra . thrift . IndexType . valueOf ( def . index _ type . name ( ) ) ) ; <nl> + oldDef . setIndexName ( def . index _ name = = null ? null : def . index _ name . toString ( ) ) ; <nl> } <nl> / / add the new ones coming in . <nl> for ( org . apache . cassandra . avro . ColumnDef def : toAdd ) <nl> @ @ - 732 , 7 + 734 , 7 @ @ public final class CFMetaData <nl> tcd . setIndex _ name ( cd . getIndexName ( ) ) ; <nl> tcd . setIndex _ type ( cd . getIndexType ( ) ) ; <nl> tcd . setName ( cd . name ) ; <nl> - tcd . setValidation _ class ( cd . validator . getClass ( ) . getName ( ) ) ; <nl> + tcd . setValidation _ class ( cd . getValidator ( ) . getClass ( ) . getName ( ) ) ; <nl> column _ meta . add ( tcd ) ; <nl> } <nl> def . setColumn _ metadata ( column _ meta ) ; <nl> @ @ - 773 , 7 + 775 , 7 @ @ public final class CFMetaData <nl> tcd . index _ name = cd . getIndexName ( ) ; <nl> tcd . index _ type = cd . getIndexType ( ) = = null ? null : org . apache . cassandra . avro . IndexType . valueOf ( cd . getIndexType ( ) . name ( ) ) ; <nl> tcd . name = ByteBufferUtil . clone ( cd . name ) ; <nl> - tcd . validation _ class = cd . validator . getClass ( ) . getName ( ) ; <nl> + tcd . validation _ class = cd . getValidator ( ) . getClass ( ) . getName ( ) ; <nl> column _ meta . add ( tcd ) ; <nl> } <nl> def . column _ metadata = column _ meta ; <nl> diff - - git a / src / java / org / apache / cassandra / config / ColumnDefinition . java b / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> index cfbe57b . . c2c32b5 100644 <nl> - - - a / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> + + + b / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> @ @ - 36 , 7 + 36 , 7 @ @ import org . apache . cassandra . utils . ByteBufferUtil ; <nl> public class ColumnDefinition <nl> { <nl> public final ByteBuffer name ; <nl> - public final AbstractType validator ; <nl> + private AbstractType validator ; <nl> private IndexType index _ type ; <nl> private String index _ name ; <nl> <nl> @ @ - 180 , 4 + 180 , 14 @ @ public class ColumnDefinition <nl> { <nl> this . index _ type = index _ type ; <nl> } <nl> + <nl> + public AbstractType getValidator ( ) <nl> + { <nl> + return validator ; <nl> + } <nl> + <nl> + public void setValidator ( AbstractType validator ) <nl> + { <nl> + this . validator = validator ; <nl> + } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 16690d0 . . 1f2948c 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 327 , 7 + 327 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> final CFMetaData indexedCfMetadata = CFMetaData . newIndexMetadata ( metadata , info , columnComparator ) ; <nl> ColumnFamilyStore indexedCfs = ColumnFamilyStore . createColumnFamilyStore ( table , <nl> indexedCfMetadata . cfName , <nl> - new LocalPartitioner ( metadata . getColumn _ metadata ( ) . get ( info . name ) . validator ) , <nl> + new LocalPartitioner ( metadata . getColumn _ metadata ( ) . get ( info . name ) . getValidator ( ) ) , <nl> indexedCfMetadata ) ; <nl> <nl> / / link in indexedColumns . this means that writes will add new data to the index immediately , <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index dde38a4 . . 9f2d05a 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 29 , 9 + 29 , 7 @ @ import java . util . concurrent . * ; <nl> import javax . management . MBeanServer ; <nl> import javax . management . ObjectName ; <nl> <nl> - import com . google . common . base . Charsets ; <nl> import com . google . common . collect . HashMultimap ; <nl> - import com . google . common . collect . Iterables ; <nl> import com . google . common . collect . Multimap ; <nl> <nl> import org . apache . cassandra . db . commitlog . CommitLog ; <nl> @ @ - 2079 , 7 + 2077 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> rcd . index _ name = cd . getIndexName ( ) ; <nl> rcd . index _ type = cd . getIndexType ( ) ; <nl> rcd . name = ByteBufferUtil . string ( cd . name ) ; <nl> - rcd . validator _ class = cd . validator . getClass ( ) . getName ( ) ; <nl> + rcd . validator _ class = cd . getValidator ( ) . getClass ( ) . getName ( ) ; <nl> rcf . column _ metadata [ j + + ] = rcd ; <nl> } <nl> if ( j = = 0 ) <nl> diff - - git a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java <nl> index bcb3ea1 . . ddebf29 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java <nl> @ @ - 343 , 7 + 343 , 7 @ @ public class ColumnFamilyStoreTest extends CleanupHelper <nl> <nl> ColumnFamilyStore cfs = table . getColumnFamilyStore ( " Indexed2 " ) ; <nl> ColumnDefinition old = cfs . metadata . getColumn _ metadata ( ) . get ( ByteBufferUtil . bytes ( " birthdate " ) ) ; <nl> - ColumnDefinition cd = new ColumnDefinition ( old . name , old . validator . getClass ( ) . getName ( ) , IndexType . KEYS , " birthdate _ index " ) ; <nl> + ColumnDefinition cd = new ColumnDefinition ( old . name , old . getValidator ( ) . getClass ( ) . getName ( ) , IndexType . KEYS , " birthdate _ index " ) ; <nl> Future < ? > future = cfs . addIndex ( cd ) ; <nl> future . get ( ) ; <nl> / / we had a bug ( CASSANDRA - 2244 ) where index would get created but not flushed - - check for that

TEST DIFF:
diff - - git a / conf / cassandra - env . ps1 b / conf / cassandra - env . ps1 
 index 5100577 . . f005ab1 100644 
 - - - a / conf / cassandra - env . ps1 
 + + + b / conf / cassandra - env . ps1 
 @ @ - 332 , 7 + 332 , 7 @ @ Function SetCassandraEnvironment 
 $ env : JVM _ OPTS = " $ env : JVM _ OPTS - javaagent : " " $ env : CASSANDRA _ HOME \ lib \ jamm - 0 . 3 . 0 . jar " " " 
 } 
 
 - if ( $ env : JVM _ VERSION . CompareTo ( " 1 . 8 . 0 _ 40 " - eq - 1 ) ) 
 + if ( $ env : JVM _ VERSION . CompareTo ( " 1 . 8 . 0 _ 40 " ) - eq - 1 ) 
 { 
 echo " Cassandra 3 . 0 and later require Java 8u40 or later . " 
 exit

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java 
 index 2874433 . . 5ea05c5 100644 
 - - - a / src / java / org / apache / cassandra / config / CFMetaData . java 
 + + + b / src / java / org / apache / cassandra / config / CFMetaData . java 
 @ @ - 582 , 7 + 582 , 7 @ @ public final class CFMetaData 
 AbstractType validator = defaultValidator ; 
 ColumnDefinition columnDefinition = column _ metadata . get ( column ) ; 
 if ( columnDefinition ! = null ) 
 - validator = columnDefinition . validator ; 
 + validator = columnDefinition . getValidator ( ) ; 
 return validator ; 
 } 
 
 @ @ - 684 , 10 + 684 , 12 @ @ public final class CFMetaData 
 / / update the ones staying 
 for ( org . apache . cassandra . avro . ColumnDef def : cf _ def . column _ metadata ) 
 { 
 - if ( ! column _ metadata . containsKey ( def . name ) ) 
 + ColumnDefinition oldDef = column _ metadata . get ( def . name ) ; 
 + if ( oldDef = = null ) 
 continue ; 
 - column _ metadata . get ( def . name ) . setIndexType ( def . index _ type = = null ? null : org . apache . cassandra . thrift . IndexType . valueOf ( def . index _ type . name ( ) ) ) ; 
 - column _ metadata . get ( def . name ) . setIndexName ( def . index _ name = = null ? null : def . index _ name . toString ( ) ) ; 
 + oldDef . setValidator ( DatabaseDescriptor . getComparator ( def . validation _ class ) ) ; 
 + oldDef . setIndexType ( def . index _ type = = null ? null : org . apache . cassandra . thrift . IndexType . valueOf ( def . index _ type . name ( ) ) ) ; 
 + oldDef . setIndexName ( def . index _ name = = null ? null : def . index _ name . toString ( ) ) ; 
 } 
 / / add the new ones coming in . 
 for ( org . apache . cassandra . avro . ColumnDef def : toAdd ) 
 @ @ - 732 , 7 + 734 , 7 @ @ public final class CFMetaData 
 tcd . setIndex _ name ( cd . getIndexName ( ) ) ; 
 tcd . setIndex _ type ( cd . getIndexType ( ) ) ; 
 tcd . setName ( cd . name ) ; 
 - tcd . setValidation _ class ( cd . validator . getClass ( ) . getName ( ) ) ; 
 + tcd . setValidation _ class ( cd . getValidator ( ) . getClass ( ) . getName ( ) ) ; 
 column _ meta . add ( tcd ) ; 
 } 
 def . setColumn _ metadata ( column _ meta ) ; 
 @ @ - 773 , 7 + 775 , 7 @ @ public final class CFMetaData 
 tcd . index _ name = cd . getIndexName ( ) ; 
 tcd . index _ type = cd . getIndexType ( ) = = null ? null : org . apache . cassandra . avro . IndexType . valueOf ( cd . getIndexType ( ) . name ( ) ) ; 
 tcd . name = ByteBufferUtil . clone ( cd . name ) ; 
 - tcd . validation _ class = cd . validator . getClass ( ) . getName ( ) ; 
 + tcd . validation _ class = cd . getValidator ( ) . getClass ( ) . getName ( ) ; 
 column _ meta . add ( tcd ) ; 
 } 
 def . column _ metadata = column _ meta ; 
 diff - - git a / src / java / org / apache / cassandra / config / ColumnDefinition . java b / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 index cfbe57b . . c2c32b5 100644 
 - - - a / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 + + + b / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 @ @ - 36 , 7 + 36 , 7 @ @ import org . apache . cassandra . utils . ByteBufferUtil ; 
 public class ColumnDefinition 
 { 
 public final ByteBuffer name ; 
 - public final AbstractType validator ; 
 + private AbstractType validator ; 
 private IndexType index _ type ; 
 private String index _ name ; 
 
 @ @ - 180 , 4 + 180 , 14 @ @ public class ColumnDefinition 
 { 
 this . index _ type = index _ type ; 
 } 
 + 
 + public AbstractType getValidator ( ) 
 + { 
 + return validator ; 
 + } 
 + 
 + public void setValidator ( AbstractType validator ) 
 + { 
 + this . validator = validator ; 
 + } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 16690d0 . . 1f2948c 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 327 , 7 + 327 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 final CFMetaData indexedCfMetadata = CFMetaData . newIndexMetadata ( metadata , info , columnComparator ) ; 
 ColumnFamilyStore indexedCfs = ColumnFamilyStore . createColumnFamilyStore ( table , 
 indexedCfMetadata . cfName , 
 - new LocalPartitioner ( metadata . getColumn _ metadata ( ) . get ( info . name ) . validator ) , 
 + new LocalPartitioner ( metadata . getColumn _ metadata ( ) . get ( info . name ) . getValidator ( ) ) , 
 indexedCfMetadata ) ; 
 
 / / link in indexedColumns . this means that writes will add new data to the index immediately , 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index dde38a4 . . 9f2d05a 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 29 , 9 + 29 , 7 @ @ import java . util . concurrent . * ; 
 import javax . management . MBeanServer ; 
 import javax . management . ObjectName ; 
 
 - import com . google . common . base . Charsets ; 
 import com . google . common . collect . HashMultimap ; 
 - import com . google . common . collect . Iterables ; 
 import com . google . common . collect . Multimap ; 
 
 import org . apache . cassandra . db . commitlog . CommitLog ; 
 @ @ - 2079 , 7 + 2077 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 rcd . index _ name = cd . getIndexName ( ) ; 
 rcd . index _ type = cd . getIndexType ( ) ; 
 rcd . name = ByteBufferUtil . string ( cd . name ) ; 
 - rcd . validator _ class = cd . validator . getClass ( ) . getName ( ) ; 
 + rcd . validator _ class = cd . getValidator ( ) . getClass ( ) . getName ( ) ; 
 rcf . column _ metadata [ j + + ] = rcd ; 
 } 
 if ( j = = 0 ) 
 diff - - git a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java 
 index bcb3ea1 . . ddebf29 100644 
 - - - a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java 
 + + + b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java 
 @ @ - 343 , 7 + 343 , 7 @ @ public class ColumnFamilyStoreTest extends CleanupHelper 
 
 ColumnFamilyStore cfs = table . getColumnFamilyStore ( " Indexed2 " ) ; 
 ColumnDefinition old = cfs . metadata . getColumn _ metadata ( ) . get ( ByteBufferUtil . bytes ( " birthdate " ) ) ; 
 - ColumnDefinition cd = new ColumnDefinition ( old . name , old . validator . getClass ( ) . getName ( ) , IndexType . KEYS , " birthdate _ index " ) ; 
 + ColumnDefinition cd = new ColumnDefinition ( old . name , old . getValidator ( ) . getClass ( ) . getName ( ) , IndexType . KEYS , " birthdate _ index " ) ; 
 Future < ? > future = cfs . addIndex ( cd ) ; 
 future . get ( ) ; 
 / / we had a bug ( CASSANDRA - 2244 ) where index would get created but not flushed - - check for that
