BLEU SCORE: 0.040583489434387374

TEST MSG: Provide visibility into prepared statements churn
GENERATED MSG: Update sstablesPerReadHistogram to use biased sampling

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 4619bee . . 5125c77 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 1 <nl> + * Provide visibility into prepared statements churn ( CASSANDRA - 7921 ) <nl> * Invalidate prepared statements when their keyspace or table is <nl> dropped ( CASSANDRA - 7566 ) <nl> * cassandra - stress : fix support for NetworkTopologyStrategy ( CASSANDRA - 7945 ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / QueryProcessor . java b / src / java / org / apache / cassandra / cql3 / QueryProcessor . java <nl> index 419a3e1 . . 8744db4 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / QueryProcessor . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / QueryProcessor . java <nl> @ @ - 99 , 6 + 99 , 7 @ @ public class QueryProcessor implements QueryHandler <nl> { <nl> public void onEviction ( MD5Digest md5Digest , ParsedStatement . Prepared prepared ) <nl> { <nl> + metrics . preparedStatementsEvicted . inc ( ) ; <nl> } <nl> } ) . build ( ) ; <nl> <nl> @ @ - 109 , 6 + 110 , 7 @ @ public class QueryProcessor implements QueryHandler <nl> { <nl> public void onEviction ( Integer integer , CQLStatement cqlStatement ) <nl> { <nl> + metrics . preparedStatementsEvicted . inc ( ) ; <nl> } <nl> } ) <nl> . build ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / metrics / CQLMetrics . java b / src / java / org / apache / cassandra / metrics / CQLMetrics . java <nl> index 79a8e10 . . a7076dd 100644 <nl> - - - a / src / java / org / apache / cassandra / metrics / CQLMetrics . java <nl> + + + b / src / java / org / apache / cassandra / metrics / CQLMetrics . java <nl> @ @ - 29 , 6 + 29 , 7 @ @ public class CQLMetrics <nl> <nl> public final Counter regularStatementsExecuted ; <nl> public final Counter preparedStatementsExecuted ; <nl> + public final Counter preparedStatementsEvicted ; <nl> <nl> public final Gauge < Integer > preparedStatementsCount ; <nl> public final Gauge < Double > preparedStatementsRatio ; <nl> @ @ - 37 , 6 + 38 , 8 @ @ public class CQLMetrics <nl> { <nl> regularStatementsExecuted = Metrics . newCounter ( factory . createMetricName ( " RegularStatementsExecuted " ) ) ; <nl> preparedStatementsExecuted = Metrics . newCounter ( factory . createMetricName ( " PreparedStatementsExecuted " ) ) ; <nl> + preparedStatementsEvicted = Metrics . newCounter ( factory . createMetricName ( " PreparedStatementsEvicted " ) ) ; <nl> + <nl> preparedStatementsCount = Metrics . newGauge ( factory . createMetricName ( " PreparedStatementsCount " ) , new Gauge < Integer > ( ) <nl> { <nl> public Integer value ( ) <nl> diff - - git a / test / unit / org / apache / cassandra / metrics / CQLMetricsTest . java b / test / unit / org / apache / cassandra / metrics / CQLMetricsTest . java <nl> index 91abf86 . . 88104a6 100644 <nl> - - - a / test / unit / org / apache / cassandra / metrics / CQLMetricsTest . java <nl> + + + b / test / unit / org / apache / cassandra / metrics / CQLMetricsTest . java <nl> @ @ - 119 , 6 + 119 , 7 @ @ public class CQLMetricsTest extends SchemaLoader <nl> { <nl> QueryProcessor . metrics . preparedStatementsExecuted . clear ( ) ; <nl> QueryProcessor . metrics . regularStatementsExecuted . clear ( ) ; <nl> + QueryProcessor . metrics . preparedStatementsEvicted . clear ( ) ; <nl> } <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java b / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java <nl> index ef58c86 . . 9ee7568 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java <nl> @ @ - 287 , 9 + 287 , 11 @ @ public interface ColumnFamilyStoreMBean <nl> public void disableAutoCompaction ( ) ; <nl> <nl> / * * Number of tombstoned cells retreived during the last slicequery * / <nl> + @ Deprecated <nl> public double getTombstonesPerSlice ( ) ; <nl> <nl> / * * Number of live cells retreived during the last slicequery * / <nl> + @ Deprecated <nl> public double getLiveCellsPerSlice ( ) ; <nl> <nl> public long estimateKeys ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> index 4416a37 . . 86f9eef 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> @ @ - 916 , 6 + 916 , 8 @ @ public class NodeCmd <nl> outs . println ( " \ t \ tCompacted row minimum size : " + cfstore . getMinRowSize ( ) ) ; <nl> outs . println ( " \ t \ tCompacted row maximum size : " + cfstore . getMaxRowSize ( ) ) ; <nl> outs . println ( " \ t \ tCompacted row mean size : " + cfstore . getMeanRowSize ( ) ) ; <nl> + outs . println ( " \ t \ tAverage live cells per slice ( last five minutes ) : " + cfstore . getLiveCellsPerSlice ( ) ) ; <nl> + outs . println ( " \ t \ tAverage tombstones per slice ( last five minutes ) : " + cfstore . getTombstonesPerSlice ( ) ) ; <nl> <nl> outs . println ( " " ) ; <nl> }

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 4619bee . . 5125c77 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 1 
 + * Provide visibility into prepared statements churn ( CASSANDRA - 7921 ) 
 * Invalidate prepared statements when their keyspace or table is 
 dropped ( CASSANDRA - 7566 ) 
 * cassandra - stress : fix support for NetworkTopologyStrategy ( CASSANDRA - 7945 ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / QueryProcessor . java b / src / java / org / apache / cassandra / cql3 / QueryProcessor . java 
 index 419a3e1 . . 8744db4 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / QueryProcessor . java 
 + + + b / src / java / org / apache / cassandra / cql3 / QueryProcessor . java 
 @ @ - 99 , 6 + 99 , 7 @ @ public class QueryProcessor implements QueryHandler 
 { 
 public void onEviction ( MD5Digest md5Digest , ParsedStatement . Prepared prepared ) 
 { 
 + metrics . preparedStatementsEvicted . inc ( ) ; 
 } 
 } ) . build ( ) ; 
 
 @ @ - 109 , 6 + 110 , 7 @ @ public class QueryProcessor implements QueryHandler 
 { 
 public void onEviction ( Integer integer , CQLStatement cqlStatement ) 
 { 
 + metrics . preparedStatementsEvicted . inc ( ) ; 
 } 
 } ) 
 . build ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / metrics / CQLMetrics . java b / src / java / org / apache / cassandra / metrics / CQLMetrics . java 
 index 79a8e10 . . a7076dd 100644 
 - - - a / src / java / org / apache / cassandra / metrics / CQLMetrics . java 
 + + + b / src / java / org / apache / cassandra / metrics / CQLMetrics . java 
 @ @ - 29 , 6 + 29 , 7 @ @ public class CQLMetrics 
 
 public final Counter regularStatementsExecuted ; 
 public final Counter preparedStatementsExecuted ; 
 + public final Counter preparedStatementsEvicted ; 
 
 public final Gauge < Integer > preparedStatementsCount ; 
 public final Gauge < Double > preparedStatementsRatio ; 
 @ @ - 37 , 6 + 38 , 8 @ @ public class CQLMetrics 
 { 
 regularStatementsExecuted = Metrics . newCounter ( factory . createMetricName ( " RegularStatementsExecuted " ) ) ; 
 preparedStatementsExecuted = Metrics . newCounter ( factory . createMetricName ( " PreparedStatementsExecuted " ) ) ; 
 + preparedStatementsEvicted = Metrics . newCounter ( factory . createMetricName ( " PreparedStatementsEvicted " ) ) ; 
 + 
 preparedStatementsCount = Metrics . newGauge ( factory . createMetricName ( " PreparedStatementsCount " ) , new Gauge < Integer > ( ) 
 { 
 public Integer value ( ) 
 diff - - git a / test / unit / org / apache / cassandra / metrics / CQLMetricsTest . java b / test / unit / org / apache / cassandra / metrics / CQLMetricsTest . java 
 index 91abf86 . . 88104a6 100644 
 - - - a / test / unit / org / apache / cassandra / metrics / CQLMetricsTest . java 
 + + + b / test / unit / org / apache / cassandra / metrics / CQLMetricsTest . java 
 @ @ - 119 , 6 + 119 , 7 @ @ public class CQLMetricsTest extends SchemaLoader 
 { 
 QueryProcessor . metrics . preparedStatementsExecuted . clear ( ) ; 
 QueryProcessor . metrics . regularStatementsExecuted . clear ( ) ; 
 + QueryProcessor . metrics . preparedStatementsEvicted . clear ( ) ; 
 } 
 } 


NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java b / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java 
 index ef58c86 . . 9ee7568 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStoreMBean . java 
 @ @ - 287 , 9 + 287 , 11 @ @ public interface ColumnFamilyStoreMBean 
 public void disableAutoCompaction ( ) ; 
 
 / * * Number of tombstoned cells retreived during the last slicequery * / 
 + @ Deprecated 
 public double getTombstonesPerSlice ( ) ; 
 
 / * * Number of live cells retreived during the last slicequery * / 
 + @ Deprecated 
 public double getLiveCellsPerSlice ( ) ; 
 
 public long estimateKeys ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 index 4416a37 . . 86f9eef 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 @ @ - 916 , 6 + 916 , 8 @ @ public class NodeCmd 
 outs . println ( " \ t \ tCompacted row minimum size : " + cfstore . getMinRowSize ( ) ) ; 
 outs . println ( " \ t \ tCompacted row maximum size : " + cfstore . getMaxRowSize ( ) ) ; 
 outs . println ( " \ t \ tCompacted row mean size : " + cfstore . getMeanRowSize ( ) ) ; 
 + outs . println ( " \ t \ tAverage live cells per slice ( last five minutes ) : " + cfstore . getLiveCellsPerSlice ( ) ) ; 
 + outs . println ( " \ t \ tAverage tombstones per slice ( last five minutes ) : " + cfstore . getTombstonesPerSlice ( ) ) ; 
 
 outs . println ( " " ) ; 
 }
