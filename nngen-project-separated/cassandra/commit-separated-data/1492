BLEU SCORE: 0.010697691669654345

TEST MSG: Get rid of CFMetaData . isPurged
GENERATED MSG: Ensure writes have completed after dropping a table , before recycling commit log segments

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> index fea2638 . . 8ae5e93 100644 <nl> - - - a / src / java / org / apache / cassandra / config / CFMetaData . java <nl> + + + b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> @ @ - 193 , 7 + 193 , 7 @ @ public final class CFMetaData <nl> private volatile SpeculativeRetry speculativeRetry = DEFAULT _ SPECULATIVE _ RETRY ; <nl> private volatile Map < ColumnIdentifier , DroppedColumn > droppedColumns = new HashMap < > ( ) ; <nl> private volatile Triggers triggers = Triggers . none ( ) ; <nl> - private volatile boolean isPurged = false ; <nl> + <nl> / * <nl> * All CQL3 columns definition are stored in the columnMetadata map . <nl> * On top of that , we keep separated collection of each kind of definition , to <nl> @ @ - 201 , 7 + 201 , 6 @ @ public final class CFMetaData <nl> * clustering key ones , those list are ordered by the " component index " of the <nl> * elements . <nl> * / <nl> - <nl> private volatile Map < ByteBuffer , ColumnDefinition > columnMetadata = new HashMap < > ( ) ; <nl> private volatile List < ColumnDefinition > partitionKeyColumns ; / / Always of size keyValidator . componentsCount , null padded if necessary <nl> private volatile List < ColumnDefinition > clusteringColumns ; / / Of size comparator . componentsCount or comparator . componentsCount - 1 , null padded if necessary <nl> @ @ - 1118 , 16 + 1117 , 6 @ @ public final class CFMetaData <nl> " interval ( % d ) . " , maxIndexInterval , minIndexInterval ) ) ; <nl> } <nl> <nl> - public boolean isPurged ( ) <nl> - { <nl> - return isPurged ; <nl> - } <nl> - <nl> - void markPurged ( ) <nl> - { <nl> - isPurged = true ; <nl> - } <nl> - <nl> / / The comparator to validate the definition name . <nl> public AbstractType < ? > thriftColumnNameType ( ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / config / Schema . java b / src / java / org / apache / cassandra / config / Schema . java <nl> index 29dffa1 . . c934327 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Schema . java <nl> + + + b / src / java / org / apache / cassandra / config / Schema . java <nl> @ @ - 357 , 20 + 357 , 14 @ @ public class Schema <nl> cfIdMap . put ( key , cfm . cfId ) ; <nl> } <nl> <nl> - public void unload ( CFMetaData cfm ) <nl> - { <nl> - cfIdMap . remove ( Pair . create ( cfm . ksName , cfm . cfName ) ) ; <nl> - } <nl> - <nl> / * * <nl> * Used for ColumnFamily data eviction out from the schema <nl> * <nl> * @ param cfm The ColumnFamily Definition to evict <nl> * / <nl> - public void purge ( CFMetaData cfm ) <nl> + public void unload ( CFMetaData cfm ) <nl> { <nl> - unload ( cfm ) ; <nl> - cfm . markPurged ( ) ; <nl> + cfIdMap . remove ( Pair . create ( cfm . ksName , cfm . cfName ) ) ; <nl> } <nl> <nl> / * Function helpers * / <nl> @ @ - 449 , 7 + 443 , 7 @ @ public class Schema <nl> for ( String keyspaceName : getNonSystemKeyspaces ( ) ) <nl> { <nl> KeyspaceMetadata ksm = getKSMetaData ( keyspaceName ) ; <nl> - ksm . tables . forEach ( this : : purge ) ; <nl> + ksm . tables . forEach ( this : : unload ) ; <nl> clearKeyspaceMetadata ( ksm ) ; <nl> } <nl> <nl> @ @ - 486 , 7 + 480 , 7 @ @ public class Schema <nl> { <nl> ColumnFamilyStore cfs = keyspace . getColumnFamilyStore ( cfm . cfName ) ; <nl> <nl> - purge ( cfm ) ; <nl> + unload ( cfm ) ; <nl> <nl> if ( DatabaseDescriptor . isAutoSnapshot ( ) ) <nl> cfs . snapshot ( snapshotName ) ; <nl> @ @ - 551 , 7 + 545 , 7 @ @ public class Schema <nl> CFMetaData cfm = oldKsm . tables . get ( tableName ) . get ( ) ; <nl> KeyspaceMetadata newKsm = oldKsm . withSwapped ( oldKsm . tables . without ( tableName ) ) ; <nl> <nl> - purge ( cfm ) ; <nl> + unload ( cfm ) ; <nl> setKeyspaceMetadata ( newKsm ) ; <nl> <nl> CompactionManager . instance . interruptCompactionFor ( Collections . singleton ( cfm ) , true ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java <nl> index 41bb31e . . b4b7b19 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java <nl> @ @ - 401 , 14 + 401 , 7 @ @ public abstract class CommitLogSegment <nl> void markDirty ( Mutation mutation , int allocatedPosition ) <nl> { <nl> for ( PartitionUpdate update : mutation . getPartitionUpdates ( ) ) <nl> - { <nl> - / / check for deleted CFS <nl> - CFMetaData cfm = update . metadata ( ) ; <nl> - if ( cfm . isPurged ( ) ) <nl> - logger . error ( " Attempted to write commit log entry for unrecognized table : { } " , cfm . cfId ) ; <nl> - else <nl> - ensureAtleast ( cfDirty , cfm . cfId , allocatedPosition ) ; <nl> - } <nl> + ensureAtleast ( cfDirty , update . metadata ( ) . cfId , allocatedPosition ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / test / unit / org / apache / cassandra / db / commitlog / CommitLogUpgradeTest . java b / test / unit / org / apache / cassandra / db / commitlog / CommitLogUpgradeTest . java <nl> index 1289f43 . . 3d13a22 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / commitlog / CommitLogUpgradeTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / commitlog / CommitLogUpgradeTest . java <nl> @ @ - 87 , 7 + 87 , 7 @ @ public class CommitLogUpgradeTest <nl> if ( Schema . instance . getCF ( cfid ) = = null ) <nl> { <nl> CFMetaData cfm = Schema . instance . getCFMetaData ( KEYSPACE , TABLE ) ; <nl> - Schema . instance . purge ( cfm ) ; <nl> + Schema . instance . unload ( cfm ) ; <nl> Schema . instance . load ( cfm . copy ( cfid ) ) ; <nl> } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java 
 index fea2638 . . 8ae5e93 100644 
 - - - a / src / java / org / apache / cassandra / config / CFMetaData . java 
 + + + b / src / java / org / apache / cassandra / config / CFMetaData . java 
 @ @ - 193 , 7 + 193 , 7 @ @ public final class CFMetaData 
 private volatile SpeculativeRetry speculativeRetry = DEFAULT _ SPECULATIVE _ RETRY ; 
 private volatile Map < ColumnIdentifier , DroppedColumn > droppedColumns = new HashMap < > ( ) ; 
 private volatile Triggers triggers = Triggers . none ( ) ; 
 - private volatile boolean isPurged = false ; 
 + 
 / * 
 * All CQL3 columns definition are stored in the columnMetadata map . 
 * On top of that , we keep separated collection of each kind of definition , to 
 @ @ - 201 , 7 + 201 , 6 @ @ public final class CFMetaData 
 * clustering key ones , those list are ordered by the " component index " of the 
 * elements . 
 * / 
 - 
 private volatile Map < ByteBuffer , ColumnDefinition > columnMetadata = new HashMap < > ( ) ; 
 private volatile List < ColumnDefinition > partitionKeyColumns ; / / Always of size keyValidator . componentsCount , null padded if necessary 
 private volatile List < ColumnDefinition > clusteringColumns ; / / Of size comparator . componentsCount or comparator . componentsCount - 1 , null padded if necessary 
 @ @ - 1118 , 16 + 1117 , 6 @ @ public final class CFMetaData 
 " interval ( % d ) . " , maxIndexInterval , minIndexInterval ) ) ; 
 } 
 
 - public boolean isPurged ( ) 
 - { 
 - return isPurged ; 
 - } 
 - 
 - void markPurged ( ) 
 - { 
 - isPurged = true ; 
 - } 
 - 
 / / The comparator to validate the definition name . 
 public AbstractType < ? > thriftColumnNameType ( ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / config / Schema . java b / src / java / org / apache / cassandra / config / Schema . java 
 index 29dffa1 . . c934327 100644 
 - - - a / src / java / org / apache / cassandra / config / Schema . java 
 + + + b / src / java / org / apache / cassandra / config / Schema . java 
 @ @ - 357 , 20 + 357 , 14 @ @ public class Schema 
 cfIdMap . put ( key , cfm . cfId ) ; 
 } 
 
 - public void unload ( CFMetaData cfm ) 
 - { 
 - cfIdMap . remove ( Pair . create ( cfm . ksName , cfm . cfName ) ) ; 
 - } 
 - 
 / * * 
 * Used for ColumnFamily data eviction out from the schema 
 * 
 * @ param cfm The ColumnFamily Definition to evict 
 * / 
 - public void purge ( CFMetaData cfm ) 
 + public void unload ( CFMetaData cfm ) 
 { 
 - unload ( cfm ) ; 
 - cfm . markPurged ( ) ; 
 + cfIdMap . remove ( Pair . create ( cfm . ksName , cfm . cfName ) ) ; 
 } 
 
 / * Function helpers * / 
 @ @ - 449 , 7 + 443 , 7 @ @ public class Schema 
 for ( String keyspaceName : getNonSystemKeyspaces ( ) ) 
 { 
 KeyspaceMetadata ksm = getKSMetaData ( keyspaceName ) ; 
 - ksm . tables . forEach ( this : : purge ) ; 
 + ksm . tables . forEach ( this : : unload ) ; 
 clearKeyspaceMetadata ( ksm ) ; 
 } 
 
 @ @ - 486 , 7 + 480 , 7 @ @ public class Schema 
 { 
 ColumnFamilyStore cfs = keyspace . getColumnFamilyStore ( cfm . cfName ) ; 
 
 - purge ( cfm ) ; 
 + unload ( cfm ) ; 
 
 if ( DatabaseDescriptor . isAutoSnapshot ( ) ) 
 cfs . snapshot ( snapshotName ) ; 
 @ @ - 551 , 7 + 545 , 7 @ @ public class Schema 
 CFMetaData cfm = oldKsm . tables . get ( tableName ) . get ( ) ; 
 KeyspaceMetadata newKsm = oldKsm . withSwapped ( oldKsm . tables . without ( tableName ) ) ; 
 
 - purge ( cfm ) ; 
 + unload ( cfm ) ; 
 setKeyspaceMetadata ( newKsm ) ; 
 
 CompactionManager . instance . interruptCompactionFor ( Collections . singleton ( cfm ) , true ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java 
 index 41bb31e . . b4b7b19 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java 
 @ @ - 401 , 14 + 401 , 7 @ @ public abstract class CommitLogSegment 
 void markDirty ( Mutation mutation , int allocatedPosition ) 
 { 
 for ( PartitionUpdate update : mutation . getPartitionUpdates ( ) ) 
 - { 
 - / / check for deleted CFS 
 - CFMetaData cfm = update . metadata ( ) ; 
 - if ( cfm . isPurged ( ) ) 
 - logger . error ( " Attempted to write commit log entry for unrecognized table : { } " , cfm . cfId ) ; 
 - else 
 - ensureAtleast ( cfDirty , cfm . cfId , allocatedPosition ) ; 
 - } 
 + ensureAtleast ( cfDirty , update . metadata ( ) . cfId , allocatedPosition ) ; 
 } 
 
 / * * 
 diff - - git a / test / unit / org / apache / cassandra / db / commitlog / CommitLogUpgradeTest . java b / test / unit / org / apache / cassandra / db / commitlog / CommitLogUpgradeTest . java 
 index 1289f43 . . 3d13a22 100644 
 - - - a / test / unit / org / apache / cassandra / db / commitlog / CommitLogUpgradeTest . java 
 + + + b / test / unit / org / apache / cassandra / db / commitlog / CommitLogUpgradeTest . java 
 @ @ - 87 , 7 + 87 , 7 @ @ public class CommitLogUpgradeTest 
 if ( Schema . instance . getCF ( cfid ) = = null ) 
 { 
 CFMetaData cfm = Schema . instance . getCFMetaData ( KEYSPACE , TABLE ) ; 
 - Schema . instance . purge ( cfm ) ; 
 + Schema . instance . unload ( cfm ) ; 
 Schema . instance . load ( cfm . copy ( cfid ) ) ; 
 } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
