BLEU SCORE: 0.04372912656590315

TEST MSG: Avoid read repairing purgeable tombstones
GENERATED MSG: Invalidate row cache when dropping CF

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index fb06cd6 . . 19e1afe 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 2 . 7 <nl> + * Avoid read repairing purgeable tombstones on range slices ( CASSANDRA - 11427 ) <nl> * Restore ability to filter on clustering columns when using a 2i ( CASSANDRA - 11510 ) <nl> * JSON datetime formatting needs timezone ( CASSANDRA - 11137 ) <nl> * Fix is _ dense recalculation for Thrift - updated tables ( CASSANDRA - 11502 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 79c9af2 . . abd41e7 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 2293 , 6 + 2293 , 9 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> removeDroppedColumns ( data ) ; <nl> } <nl> <nl> + / / remove purgable tombstones from result - see CASSANDRA - 11427 <nl> + data . purgeTombstones ( gcBefore ( filter . timestamp ) ) ; <nl> + <nl> rows . add ( new Row ( rawRow . key , data ) ) ; <nl> if ( ! ignoreTombstonedPartitions | | ! data . hasOnlyTombstones ( filter . timestamp ) ) <nl> matched + + ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index cd6895f . . 57ad75d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 26 , 6 + 26 , 7 @ @ <nl> * Fix paging with reversed slices ( CASSANDRA - 6343 ) <nl> * Set minTimestamp correctly to be able to drop expired sstables ( CASSANDRA - 6337 ) <nl> Merged from 1 . 2 : <nl> + * Invalidate row cache when dropping CF ( CASSANDRA - 6351 ) <nl> * add non - jamm path for cached statements ( CASSANDRA - 6293 ) <nl> * ( Hadoop ) Require CFRR batchSize to be at least 2 ( CASSANDRA - 6114 ) <nl> * Fix altering column types ( CASSANDRA - 6185 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 4346224 . . 137d597 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 328 , 6 + 328 , 12 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> SystemKeyspace . removeTruncationRecord ( metadata . cfId ) ; <nl> data . unreferenceSSTables ( ) ; <nl> indexManager . invalidate ( ) ; <nl> + <nl> + for ( RowCacheKey key : CacheService . instance . rowCache . getKeySet ( ) ) <nl> + { <nl> + if ( key . cfId = = metadata . cfId ) <nl> + invalidateCachedRow ( key ) ; <nl> + } <nl> } <nl> catch ( Exception e ) <nl> { <nl> @ @ - 1257 , 7 + 1263 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> finally <nl> { <nl> if ( sentinelSuccess & & data = = null ) <nl> - CacheService . instance . rowCache . remove ( key ) ; <nl> + invalidateCachedRow ( key ) ; <nl> } <nl> } <nl> <nl> @ @ - 1967 , 7 + 1973 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> for ( RowCacheKey key : CacheService . instance . rowCache . getKeySet ( ) ) <nl> { <nl> if ( key . cfId = = metadata . cfId ) <nl> - CacheService . instance . rowCache . remove ( key ) ; <nl> + invalidateCachedRow ( key ) ; <nl> } <nl> } <nl> } ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index fb06cd6 . . 19e1afe 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 2 . 7 
 + * Avoid read repairing purgeable tombstones on range slices ( CASSANDRA - 11427 ) 
 * Restore ability to filter on clustering columns when using a 2i ( CASSANDRA - 11510 ) 
 * JSON datetime formatting needs timezone ( CASSANDRA - 11137 ) 
 * Fix is _ dense recalculation for Thrift - updated tables ( CASSANDRA - 11502 ) 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 79c9af2 . . abd41e7 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 2293 , 6 + 2293 , 9 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 removeDroppedColumns ( data ) ; 
 } 
 
 + / / remove purgable tombstones from result - see CASSANDRA - 11427 
 + data . purgeTombstones ( gcBefore ( filter . timestamp ) ) ; 
 + 
 rows . add ( new Row ( rawRow . key , data ) ) ; 
 if ( ! ignoreTombstonedPartitions | | ! data . hasOnlyTombstones ( filter . timestamp ) ) 
 matched + + ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index cd6895f . . 57ad75d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 26 , 6 + 26 , 7 @ @ 
 * Fix paging with reversed slices ( CASSANDRA - 6343 ) 
 * Set minTimestamp correctly to be able to drop expired sstables ( CASSANDRA - 6337 ) 
 Merged from 1 . 2 : 
 + * Invalidate row cache when dropping CF ( CASSANDRA - 6351 ) 
 * add non - jamm path for cached statements ( CASSANDRA - 6293 ) 
 * ( Hadoop ) Require CFRR batchSize to be at least 2 ( CASSANDRA - 6114 ) 
 * Fix altering column types ( CASSANDRA - 6185 ) 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 4346224 . . 137d597 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 328 , 6 + 328 , 12 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 SystemKeyspace . removeTruncationRecord ( metadata . cfId ) ; 
 data . unreferenceSSTables ( ) ; 
 indexManager . invalidate ( ) ; 
 + 
 + for ( RowCacheKey key : CacheService . instance . rowCache . getKeySet ( ) ) 
 + { 
 + if ( key . cfId = = metadata . cfId ) 
 + invalidateCachedRow ( key ) ; 
 + } 
 } 
 catch ( Exception e ) 
 { 
 @ @ - 1257 , 7 + 1263 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 finally 
 { 
 if ( sentinelSuccess & & data = = null ) 
 - CacheService . instance . rowCache . remove ( key ) ; 
 + invalidateCachedRow ( key ) ; 
 } 
 } 
 
 @ @ - 1967 , 7 + 1973 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 for ( RowCacheKey key : CacheService . instance . rowCache . getKeySet ( ) ) 
 { 
 if ( key . cfId = = metadata . cfId ) 
 - CacheService . instance . rowCache . remove ( key ) ; 
 + invalidateCachedRow ( key ) ; 
 } 
 } 
 } ;
