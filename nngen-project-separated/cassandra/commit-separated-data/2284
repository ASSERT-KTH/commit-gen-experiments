BLEU SCORE: 0.04873498938813619

TEST MSG: Switch liveRatio - related log messages to DEBUG
GENERATED MSG: average a reduced liveRatio estimate with the previous one

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index aeb4b9d . . 26d94f7 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 0 . 10 <nl> + * Switch liveRatio - related log messages to DEBUG ( CASSANDRA - 7467 ) <nl> * ( cqlsh ) Add tab - completion for CREATE / DROP USER IF [ NOT ] EXISTS ( CASSANDRA - 7611 ) <nl> * Always merge ranges owned by a single node ( CASSANDRA - 6930 ) <nl> * Pig support for hadoop CqlInputFormat ( CASSANDRA - 6454 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / Memtable . java b / src / java / org / apache / cassandra / db / Memtable . java <nl> index bcef0ec . . 20adeb7 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Memtable . java <nl> + + + b / src / java / org / apache / cassandra / db / Memtable . java <nl> @ @ - 467 , 7 + 467 , 7 @ @ public class Memtable <nl> } <nl> if ( newRatio > MAX _ SANE _ LIVE _ RATIO ) <nl> { <nl> - logger . warn ( " setting live ratio to maximum of { } instead of { } " , MAX _ SANE _ LIVE _ RATIO , newRatio ) ; <nl> + logger . debug ( " setting live ratio to maximum of { } instead of { } " , MAX _ SANE _ LIVE _ RATIO , newRatio ) ; <nl> newRatio = MAX _ SANE _ LIVE _ RATIO ; <nl> } <nl> <nl> @ @ - 478 , 8 + 478 , 8 @ @ public class Memtable <nl> else <nl> memtable . liveRatio = ( memtable . liveRatio + newRatio ) / 2 . 0 ; <nl> <nl> - logger . info ( " { } liveRatio is { } ( just - counted was { } ) . calculation took { } ms for { } cells " , <nl> - cfs , memtable . liveRatio , newRatio , TimeUnit . NANOSECONDS . toMillis ( System . nanoTime ( ) - start ) , objects ) ; <nl> + logger . debug ( " { } liveRatio is { } ( just - counted was { } ) . calculation took { } ms for { } cells " , <nl> + cfs , memtable . liveRatio , newRatio , TimeUnit . NANOSECONDS . toMillis ( System . nanoTime ( ) - start ) , objects ) ; <nl> } <nl> finally <nl> {
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c6fa3d3 . . 8a9d924 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 1 - dev <nl> + * ( cqlsh ) fix recognizing uppercase SELECT keyword ( CASSANDRA - 4161 ) <nl> * average a reduced liveRatio estimate with the previous one ( CASSANDRA - 4065 ) <nl> * Allow KS and CF names up to 48 characters ( CASSANDRA - 4157 ) <nl> * Add support for CL . TWO and CL . THREE in CQL ( CASSANDRA - 4156 ) <nl> diff - - git a / bin / cqlsh b / bin / cqlsh <nl> index 505b705 . . c26324a 100755 <nl> - - - a / bin / cqlsh <nl> + + + b / bin / cqlsh <nl> @ @ - 804 , 7 + 804 , 7 @ @ class Shell ( cmd . Cmd ) : <nl> return self . perform _ statement ( cqlhandling . cql _ extract _ orig ( tokens , srcstr ) ) <nl> <nl> def handle _ parse _ error ( self , cmdword , tokens , parsed , srcstr ) : <nl> - if cmdword = = ' select ' : <nl> + if cmdword . lower ( ) = = ' select ' : <nl> # hey , maybe they know about some new syntax we don ' t . type <nl> # assumptions won ' t work , but maybe the query will . <nl> return self . perform _ statement ( cqlhandling . cql _ extract _ orig ( tokens , srcstr ) )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index aeb4b9d . . 26d94f7 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 0 . 10 
 + * Switch liveRatio - related log messages to DEBUG ( CASSANDRA - 7467 ) 
 * ( cqlsh ) Add tab - completion for CREATE / DROP USER IF [ NOT ] EXISTS ( CASSANDRA - 7611 ) 
 * Always merge ranges owned by a single node ( CASSANDRA - 6930 ) 
 * Pig support for hadoop CqlInputFormat ( CASSANDRA - 6454 ) 
 diff - - git a / src / java / org / apache / cassandra / db / Memtable . java b / src / java / org / apache / cassandra / db / Memtable . java 
 index bcef0ec . . 20adeb7 100644 
 - - - a / src / java / org / apache / cassandra / db / Memtable . java 
 + + + b / src / java / org / apache / cassandra / db / Memtable . java 
 @ @ - 467 , 7 + 467 , 7 @ @ public class Memtable 
 } 
 if ( newRatio > MAX _ SANE _ LIVE _ RATIO ) 
 { 
 - logger . warn ( " setting live ratio to maximum of { } instead of { } " , MAX _ SANE _ LIVE _ RATIO , newRatio ) ; 
 + logger . debug ( " setting live ratio to maximum of { } instead of { } " , MAX _ SANE _ LIVE _ RATIO , newRatio ) ; 
 newRatio = MAX _ SANE _ LIVE _ RATIO ; 
 } 
 
 @ @ - 478 , 8 + 478 , 8 @ @ public class Memtable 
 else 
 memtable . liveRatio = ( memtable . liveRatio + newRatio ) / 2 . 0 ; 
 
 - logger . info ( " { } liveRatio is { } ( just - counted was { } ) . calculation took { } ms for { } cells " , 
 - cfs , memtable . liveRatio , newRatio , TimeUnit . NANOSECONDS . toMillis ( System . nanoTime ( ) - start ) , objects ) ; 
 + logger . debug ( " { } liveRatio is { } ( just - counted was { } ) . calculation took { } ms for { } cells " , 
 + cfs , memtable . liveRatio , newRatio , TimeUnit . NANOSECONDS . toMillis ( System . nanoTime ( ) - start ) , objects ) ; 
 } 
 finally 
 {

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c6fa3d3 . . 8a9d924 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 1 - dev 
 + * ( cqlsh ) fix recognizing uppercase SELECT keyword ( CASSANDRA - 4161 ) 
 * average a reduced liveRatio estimate with the previous one ( CASSANDRA - 4065 ) 
 * Allow KS and CF names up to 48 characters ( CASSANDRA - 4157 ) 
 * Add support for CL . TWO and CL . THREE in CQL ( CASSANDRA - 4156 ) 
 diff - - git a / bin / cqlsh b / bin / cqlsh 
 index 505b705 . . c26324a 100755 
 - - - a / bin / cqlsh 
 + + + b / bin / cqlsh 
 @ @ - 804 , 7 + 804 , 7 @ @ class Shell ( cmd . Cmd ) : 
 return self . perform _ statement ( cqlhandling . cql _ extract _ orig ( tokens , srcstr ) ) 
 
 def handle _ parse _ error ( self , cmdword , tokens , parsed , srcstr ) : 
 - if cmdword = = ' select ' : 
 + if cmdword . lower ( ) = = ' select ' : 
 # hey , maybe they know about some new syntax we don ' t . type 
 # assumptions won ' t work , but maybe the query will . 
 return self . perform _ statement ( cqlhandling . cql _ extract _ orig ( tokens , srcstr ) )
