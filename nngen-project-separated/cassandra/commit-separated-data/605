BLEU SCORE: 0.037477767366779206

TEST MSG: Fix test broken after second pass of CASSANDRA - 11803 changes
GENERATED MSG: Fix tests

TEST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java <nl> index fa878c3 . . 0b04bb3 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java <nl> @ @ - 649 , 10 + 649 , 10 @ @ public class ColumnFamilyStoreCQLHelperTest extends CQLTester <nl> <nl> assertTrue ( ColumnFamilyStoreCQLHelper . getCFMetadataAsCQL ( cfs . metadata , true ) . startsWith ( <nl> " CREATE TABLE IF NOT EXISTS " + DYNAMIC _ COMPOSITE + " . " + DYNAMIC _ COMPOSITE + " ( \ n " + <nl> - " \ t \ " key \ " ascii , \ n " + <nl> + " \ tkey ascii , \ n " + <nl> " \ tcols ' org . apache . cassandra . db . marshal . DynamicCompositeType ( a = > org . apache . cassandra . db . marshal . BytesType , b = > org . apache . cassandra . db . marshal . BytesType , c = > org . apache . cassandra . db . marshal . BytesType ) ' , \ n " + <nl> " \ tval ascii , \ n " + <nl> - " \ tPRIMARY KEY ( \ " key \ " , cols ) ) \ n " + <nl> + " \ tPRIMARY KEY ( key , cols ) ) \ n " + <nl> " \ tWITH ID = " + cfs . metadata . cfId + " \ n " + <nl> " \ tAND COMPACT STORAGE " ) ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cql / CreateColumnFamilyStatement . java b / src / java / org / apache / cassandra / cql / CreateColumnFamilyStatement . java <nl> index dd72eaf . . 4c86b6e 100644 <nl> - - - a / src / java / org / apache / cassandra / cql / CreateColumnFamilyStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql / CreateColumnFamilyStatement . java <nl> @ @ - 177 , 12 + 177 , 15 @ @ public class CreateColumnFamilyStatement <nl> . maxCompactionThreshold ( getPropertyInt ( CFPropDefs . KW _ MAXCOMPACTIONTHRESHOLD , CFMetaData . DEFAULT _ MAX _ COMPACTION _ THRESHOLD ) ) <nl> . columnMetadata ( getColumns ( comparator ) ) <nl> . keyValidator ( TypeParser . parse ( CFPropDefs . comparators . get ( getKeyType ( ) ) ) ) <nl> - . keyAliases ( Collections . < ByteBuffer > singletonList ( keyAlias ) ) <nl> . compactionStrategyClass ( cfProps . compactionStrategyClass ) <nl> . compactionStrategyOptions ( cfProps . compactionStrategyOptions ) <nl> . compressionParameters ( CompressionParameters . create ( cfProps . compressionParameters ) ) <nl> . caching ( CFMetaData . Caching . fromString ( getPropertyString ( CFPropDefs . KW _ CACHING , CFMetaData . DEFAULT _ CACHING _ STRATEGY . toString ( ) ) ) ) <nl> . bloomFilterFpChance ( getPropertyDouble ( CFPropDefs . KW _ BF _ FP _ CHANCE , CFMetaData . DEFAULT _ BF _ FP _ CHANCE ) ) ; <nl> + <nl> + / / CQL2 can have null keyAliases <nl> + if ( keyAlias ! = null ) <nl> + newCFMD . keyAliases ( Collections . < ByteBuffer > singletonList ( keyAlias ) ) ; <nl> } <nl> catch ( ConfigurationException e ) <nl> {

TEST DIFF:
diff - - git a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java 
 index fa878c3 . . 0b04bb3 100644 
 - - - a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java 
 + + + b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreCQLHelperTest . java 
 @ @ - 649 , 10 + 649 , 10 @ @ public class ColumnFamilyStoreCQLHelperTest extends CQLTester 
 
 assertTrue ( ColumnFamilyStoreCQLHelper . getCFMetadataAsCQL ( cfs . metadata , true ) . startsWith ( 
 " CREATE TABLE IF NOT EXISTS " + DYNAMIC _ COMPOSITE + " . " + DYNAMIC _ COMPOSITE + " ( \ n " + 
 - " \ t \ " key \ " ascii , \ n " + 
 + " \ tkey ascii , \ n " + 
 " \ tcols ' org . apache . cassandra . db . marshal . DynamicCompositeType ( a = > org . apache . cassandra . db . marshal . BytesType , b = > org . apache . cassandra . db . marshal . BytesType , c = > org . apache . cassandra . db . marshal . BytesType ) ' , \ n " + 
 " \ tval ascii , \ n " + 
 - " \ tPRIMARY KEY ( \ " key \ " , cols ) ) \ n " + 
 + " \ tPRIMARY KEY ( key , cols ) ) \ n " + 
 " \ tWITH ID = " + cfs . metadata . cfId + " \ n " + 
 " \ tAND COMPACT STORAGE " ) ) ; 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / cql / CreateColumnFamilyStatement . java b / src / java / org / apache / cassandra / cql / CreateColumnFamilyStatement . java 
 index dd72eaf . . 4c86b6e 100644 
 - - - a / src / java / org / apache / cassandra / cql / CreateColumnFamilyStatement . java 
 + + + b / src / java / org / apache / cassandra / cql / CreateColumnFamilyStatement . java 
 @ @ - 177 , 12 + 177 , 15 @ @ public class CreateColumnFamilyStatement 
 . maxCompactionThreshold ( getPropertyInt ( CFPropDefs . KW _ MAXCOMPACTIONTHRESHOLD , CFMetaData . DEFAULT _ MAX _ COMPACTION _ THRESHOLD ) ) 
 . columnMetadata ( getColumns ( comparator ) ) 
 . keyValidator ( TypeParser . parse ( CFPropDefs . comparators . get ( getKeyType ( ) ) ) ) 
 - . keyAliases ( Collections . < ByteBuffer > singletonList ( keyAlias ) ) 
 . compactionStrategyClass ( cfProps . compactionStrategyClass ) 
 . compactionStrategyOptions ( cfProps . compactionStrategyOptions ) 
 . compressionParameters ( CompressionParameters . create ( cfProps . compressionParameters ) ) 
 . caching ( CFMetaData . Caching . fromString ( getPropertyString ( CFPropDefs . KW _ CACHING , CFMetaData . DEFAULT _ CACHING _ STRATEGY . toString ( ) ) ) ) 
 . bloomFilterFpChance ( getPropertyDouble ( CFPropDefs . KW _ BF _ FP _ CHANCE , CFMetaData . DEFAULT _ BF _ FP _ CHANCE ) ) ; 
 + 
 + / / CQL2 can have null keyAliases 
 + if ( keyAlias ! = null ) 
 + newCFMD . keyAliases ( Collections . < ByteBuffer > singletonList ( keyAlias ) ) ; 
 } 
 catch ( ConfigurationException e ) 
 {
