BLEU SCORE: 0.008418013465838444

TEST MSG: Enable snapshot artifacts publish
GENERATED MSG: Update versions , news and changes for 1 . 0 . 11 release

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index e227c40 . . 0d3571d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 4 . 0 <nl> + * Enable snapshot artifacts publish ( CASSANDRA - 12704 ) <nl> * Introduce RangesAtEndpoint . unwrap to simplify StreamSession . addTransferRanges ( CASSANDRA - 14770 ) <nl> * LOCAL _ QUORUM may speculate to non - local nodes , resulting in Timeout instead of Unavailable ( CASSANDRA - 14735 ) <nl> * Avoid creating empty compaction tasks after truncate ( CASSANDRA - 14780 ) <nl> diff - - git a / build . xml b / build . xml <nl> index 86462f7 . . 28c33bf 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 2038 , 7 + 2038 , 6 @ @ <nl> <nl> < target name = " publish " <nl> depends = " mvn - install " <nl> - if = " release " <nl> description = " Publishes the artifacts to the Maven repository " > <nl> <nl> < ! - - the parent - - >
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / CounterColumn . java b / src / java / org / apache / cassandra / db / CounterColumn . java <nl> index ecfe2f1 . . 0aa22ec 100644 <nl> - - - a / src / java / org / apache / cassandra / db / CounterColumn . java <nl> + + + b / src / java / org / apache / cassandra / db / CounterColumn . java <nl> @ @ - 24 , 7 + 24 , 8 @ @ import java . security . MessageDigest ; <nl> import java . util . concurrent . TimeoutException ; <nl> import java . util . Collection ; <nl> <nl> - import org . apache . log4j . Logger ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> <nl> import org . apache . cassandra . config . CFMetaData ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> @ @ - 46 , 7 + 47 , 7 @ @ import org . apache . cassandra . utils . * ; <nl> * / <nl> public class CounterColumn extends Column <nl> { <nl> - private static final Logger logger = Logger . getLogger ( CounterColumn . class ) ; <nl> + private static final Logger logger = LoggerFactory . getLogger ( CounterColumn . class ) ; <nl> <nl> protected static final CounterContext contextManager = CounterContext . instance ( ) ; <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index e227c40 . . 0d3571d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 4 . 0 
 + * Enable snapshot artifacts publish ( CASSANDRA - 12704 ) 
 * Introduce RangesAtEndpoint . unwrap to simplify StreamSession . addTransferRanges ( CASSANDRA - 14770 ) 
 * LOCAL _ QUORUM may speculate to non - local nodes , resulting in Timeout instead of Unavailable ( CASSANDRA - 14735 ) 
 * Avoid creating empty compaction tasks after truncate ( CASSANDRA - 14780 ) 
 diff - - git a / build . xml b / build . xml 
 index 86462f7 . . 28c33bf 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 2038 , 7 + 2038 , 6 @ @ 
 
 < target name = " publish " 
 depends = " mvn - install " 
 - if = " release " 
 description = " Publishes the artifacts to the Maven repository " > 
 
 < ! - - the parent - - >

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / CounterColumn . java b / src / java / org / apache / cassandra / db / CounterColumn . java 
 index ecfe2f1 . . 0aa22ec 100644 
 - - - a / src / java / org / apache / cassandra / db / CounterColumn . java 
 + + + b / src / java / org / apache / cassandra / db / CounterColumn . java 
 @ @ - 24 , 7 + 24 , 8 @ @ import java . security . MessageDigest ; 
 import java . util . concurrent . TimeoutException ; 
 import java . util . Collection ; 
 
 - import org . apache . log4j . Logger ; 
 + import org . slf4j . Logger ; 
 + import org . slf4j . LoggerFactory ; 
 
 import org . apache . cassandra . config . CFMetaData ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 @ @ - 46 , 7 + 47 , 7 @ @ import org . apache . cassandra . utils . * ; 
 * / 
 public class CounterColumn extends Column 
 { 
 - private static final Logger logger = Logger . getLogger ( CounterColumn . class ) ; 
 + private static final Logger logger = LoggerFactory . getLogger ( CounterColumn . class ) ; 
 
 protected static final CounterContext contextManager = CounterContext . instance ( ) ; 

