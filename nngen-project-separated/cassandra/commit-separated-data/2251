BLEU SCORE: 1.0

TEST MSG: Prevent SSP from erroring out when the yaml is yanked from it .
GENERATED MSG: Prevent SSP from erroring out when the yaml is yanked from it .

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / locator / SimpleSeedProvider . java b / src / java / org / apache / cassandra / locator / SimpleSeedProvider . java <nl> index 6f36cd0 . . 8e7d9fc 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / SimpleSeedProvider . java <nl> + + + b / src / java / org / apache / cassandra / locator / SimpleSeedProvider . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ <nl> * / <nl> package org . apache . cassandra . locator ; <nl> <nl> + import java . io . IOException ; <nl> import java . io . InputStream ; <nl> import java . net . InetAddress ; <nl> import java . net . URL ; <nl> @ @ - 29 , 6 + 30 , 7 @ @ import java . util . Map ; <nl> import org . apache . cassandra . config . Config ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . config . SeedProviderDef ; <nl> + import org . apache . cassandra . exceptions . ConfigurationException ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> import org . yaml . snakeyaml . Loader ; <nl> @ @ - 39 , 19 + 41 , 34 @ @ public class SimpleSeedProvider implements SeedProvider <nl> { <nl> private static final Logger logger = LoggerFactory . getLogger ( SimpleSeedProvider . class ) ; <nl> <nl> - public SimpleSeedProvider ( Map < String , String > args ) { } <nl> + List < InetAddress > seeds ; <nl> + public SimpleSeedProvider ( Map < String , String > args ) { <nl> + try <nl> + { <nl> + seeds = loadSeeds ( ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + throw new AssertionError ( e ) ; <nl> + } <nl> + } <nl> <nl> public List < InetAddress > getSeeds ( ) <nl> { <nl> - Config conf ; <nl> try <nl> { <nl> - conf = DatabaseDescriptor . loadConfig ( ) ; <nl> + seeds = loadSeeds ( ) ; <nl> } <nl> catch ( Exception e ) <nl> { <nl> - throw new AssertionError ( e ) ; <nl> + logger . warn ( " Could not refresh seeds from configuration file : { } " , e ) ; <nl> } <nl> + return Collections . unmodifiableList ( seeds ) ; <nl> + } <nl> + <nl> + private List < InetAddress > loadSeeds ( ) throws IOException , ConfigurationException <nl> + { <nl> + Config conf = DatabaseDescriptor . loadConfig ( ) ; <nl> String [ ] hosts = conf . seed _ provider . parameters . get ( " seeds " ) . split ( " , " , - 1 ) ; <nl> List < InetAddress > seeds = new ArrayList < InetAddress > ( hosts . length ) ; <nl> for ( String host : hosts ) <nl> @ @ - 66 , 6 + 83 , 6 @ @ public class SimpleSeedProvider implements SeedProvider <nl> logger . warn ( " Seed provider couldn ' t lookup host { } " , host ) ; <nl> } <nl> } <nl> - return Collections . unmodifiableList ( seeds ) ; <nl> + return seeds ; <nl> } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / locator / SimpleSeedProvider . java b / src / java / org / apache / cassandra / locator / SimpleSeedProvider . java 
 index 6f36cd0 . . 8e7d9fc 100644 
 - - - a / src / java / org / apache / cassandra / locator / SimpleSeedProvider . java 
 + + + b / src / java / org / apache / cassandra / locator / SimpleSeedProvider . java 
 @ @ - 17 , 6 + 17 , 7 @ @ 
 * / 
 package org . apache . cassandra . locator ; 
 
 + import java . io . IOException ; 
 import java . io . InputStream ; 
 import java . net . InetAddress ; 
 import java . net . URL ; 
 @ @ - 29 , 6 + 30 , 7 @ @ import java . util . Map ; 
 import org . apache . cassandra . config . Config ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . config . SeedProviderDef ; 
 + import org . apache . cassandra . exceptions . ConfigurationException ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 import org . yaml . snakeyaml . Loader ; 
 @ @ - 39 , 19 + 41 , 34 @ @ public class SimpleSeedProvider implements SeedProvider 
 { 
 private static final Logger logger = LoggerFactory . getLogger ( SimpleSeedProvider . class ) ; 
 
 - public SimpleSeedProvider ( Map < String , String > args ) { } 
 + List < InetAddress > seeds ; 
 + public SimpleSeedProvider ( Map < String , String > args ) { 
 + try 
 + { 
 + seeds = loadSeeds ( ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + throw new AssertionError ( e ) ; 
 + } 
 + } 
 
 public List < InetAddress > getSeeds ( ) 
 { 
 - Config conf ; 
 try 
 { 
 - conf = DatabaseDescriptor . loadConfig ( ) ; 
 + seeds = loadSeeds ( ) ; 
 } 
 catch ( Exception e ) 
 { 
 - throw new AssertionError ( e ) ; 
 + logger . warn ( " Could not refresh seeds from configuration file : { } " , e ) ; 
 } 
 + return Collections . unmodifiableList ( seeds ) ; 
 + } 
 + 
 + private List < InetAddress > loadSeeds ( ) throws IOException , ConfigurationException 
 + { 
 + Config conf = DatabaseDescriptor . loadConfig ( ) ; 
 String [ ] hosts = conf . seed _ provider . parameters . get ( " seeds " ) . split ( " , " , - 1 ) ; 
 List < InetAddress > seeds = new ArrayList < InetAddress > ( hosts . length ) ; 
 for ( String host : hosts ) 
 @ @ - 66 , 6 + 83 , 6 @ @ public class SimpleSeedProvider implements SeedProvider 
 logger . warn ( " Seed provider couldn ' t lookup host { } " , host ) ; 
 } 
 } 
 - return Collections . unmodifiableList ( seeds ) ; 
 + return seeds ; 
 } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
