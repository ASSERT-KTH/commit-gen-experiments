BLEU SCORE: 0.033864985683445356

TEST MSG: Check the column name , not cell name , for dropped columns
GENERATED MSG: Clone super column to avoid modifying them mid - flush

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 9c0ab85 . . 04d0354 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 6 @ @ <nl> 3 . 0 . 3 <nl> + * Check the column name , not cell name , for dropped columns when reading <nl> + legacy sstables ( CASSANDRA - 11018 ) <nl> * Don ' t attempt to index clustering values of static rows ( CASSANDRA - 11021 ) <nl> * Remove checksum files after replaying hints ( CASSANDRA - 10947 ) <nl> * Support passing base table metadata to custom 2i validation ( CASSANDRA - 10924 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / LegacyLayout . java b / src / java / org / apache / cassandra / db / LegacyLayout . java <nl> index 91b7755 . . e9e5169 100644 <nl> - - - a / src / java / org / apache / cassandra / db / LegacyLayout . java <nl> + + + b / src / java / org / apache / cassandra / db / LegacyLayout . java <nl> @ @ - 961 , 7 + 961 , 7 @ @ public abstract class LegacyLayout <nl> / / then simply ignore the cell is fine . But also not that we ignore if it ' s the <nl> / / system keyspace because for those table we actually remove columns without registering <nl> / / them in the dropped columns <nl> - assert metadata . ksName . equals ( SystemKeyspace . NAME ) | | metadata . getDroppedColumnDefinition ( cellname ) ! = null : e . getMessage ( ) ; <nl> + assert metadata . ksName . equals ( SystemKeyspace . NAME ) | | metadata . getDroppedColumnDefinition ( e . columnName ) ! = null : e . getMessage ( ) ; <nl> } <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / config / DefsTest . java b / test / unit / org / apache / cassandra / config / DefsTest . java <nl> index b724a6f . . d99f2f8 100644 <nl> - - - a / test / unit / org / apache / cassandra / config / DefsTest . java <nl> + + + b / test / unit / org / apache / cassandra / config / DefsTest . java <nl> @ @ - 436 , 15 + 436 , 15 @ @ public class DefsTest extends CleanupHelper <nl> assert ! success : " This mutation should have failed since the CF no longer exists . " ; <nl> <nl> / / reads should fail too . <nl> + boolean opened = false ; <nl> try <nl> { <nl> Table . open ( ks . name ) ; <nl> + opened = true ; <nl> } <nl> - catch ( Throwable th ) <nl> - { <nl> - / / this is what has historically happened when you try to open a table that doesn ' t exist . <nl> - assert th instanceof NullPointerException ; <nl> - } <nl> + catch ( Throwable th ) { } <nl> + if ( opened ) <nl> + throw new AssertionError ( " Opened dropped keyspace " ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 500 , 14 + 500 , 15 @ @ public class DefsTest extends CleanupHelper <nl> assert DefsTable . getFiles ( newKs . name , cfName ) . size ( ) > 0 ; <nl> <nl> / / read on old should fail . <nl> + boolean opened = false ; <nl> try <nl> { <nl> Table . open ( oldKs . name ) ; <nl> + opened = true ; <nl> } <nl> - catch ( Throwable th ) <nl> - { <nl> - assert th instanceof NullPointerException ; <nl> - } <nl> + catch ( Throwable th ) { } <nl> + if ( opened ) <nl> + throw new AssertionError ( " Opened dropped keyspace " ) ; <nl> <nl> / / write on old should fail . <nl> rm = new RowMutation ( oldKs . name , ByteBufferUtil . bytes ( " any key will do " ) ) ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 9c0ab85 . . 04d0354 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 6 @ @ 
 3 . 0 . 3 
 + * Check the column name , not cell name , for dropped columns when reading 
 + legacy sstables ( CASSANDRA - 11018 ) 
 * Don ' t attempt to index clustering values of static rows ( CASSANDRA - 11021 ) 
 * Remove checksum files after replaying hints ( CASSANDRA - 10947 ) 
 * Support passing base table metadata to custom 2i validation ( CASSANDRA - 10924 ) 
 diff - - git a / src / java / org / apache / cassandra / db / LegacyLayout . java b / src / java / org / apache / cassandra / db / LegacyLayout . java 
 index 91b7755 . . e9e5169 100644 
 - - - a / src / java / org / apache / cassandra / db / LegacyLayout . java 
 + + + b / src / java / org / apache / cassandra / db / LegacyLayout . java 
 @ @ - 961 , 7 + 961 , 7 @ @ public abstract class LegacyLayout 
 / / then simply ignore the cell is fine . But also not that we ignore if it ' s the 
 / / system keyspace because for those table we actually remove columns without registering 
 / / them in the dropped columns 
 - assert metadata . ksName . equals ( SystemKeyspace . NAME ) | | metadata . getDroppedColumnDefinition ( cellname ) ! = null : e . getMessage ( ) ; 
 + assert metadata . ksName . equals ( SystemKeyspace . NAME ) | | metadata . getDroppedColumnDefinition ( e . columnName ) ! = null : e . getMessage ( ) ; 
 } 
 } 
 }

NEAREST DIFF:
diff - - git a / test / unit / org / apache / cassandra / config / DefsTest . java b / test / unit / org / apache / cassandra / config / DefsTest . java 
 index b724a6f . . d99f2f8 100644 
 - - - a / test / unit / org / apache / cassandra / config / DefsTest . java 
 + + + b / test / unit / org / apache / cassandra / config / DefsTest . java 
 @ @ - 436 , 15 + 436 , 15 @ @ public class DefsTest extends CleanupHelper 
 assert ! success : " This mutation should have failed since the CF no longer exists . " ; 
 
 / / reads should fail too . 
 + boolean opened = false ; 
 try 
 { 
 Table . open ( ks . name ) ; 
 + opened = true ; 
 } 
 - catch ( Throwable th ) 
 - { 
 - / / this is what has historically happened when you try to open a table that doesn ' t exist . 
 - assert th instanceof NullPointerException ; 
 - } 
 + catch ( Throwable th ) { } 
 + if ( opened ) 
 + throw new AssertionError ( " Opened dropped keyspace " ) ; 
 } 
 
 @ Test 
 @ @ - 500 , 14 + 500 , 15 @ @ public class DefsTest extends CleanupHelper 
 assert DefsTable . getFiles ( newKs . name , cfName ) . size ( ) > 0 ; 
 
 / / read on old should fail . 
 + boolean opened = false ; 
 try 
 { 
 Table . open ( oldKs . name ) ; 
 + opened = true ; 
 } 
 - catch ( Throwable th ) 
 - { 
 - assert th instanceof NullPointerException ; 
 - } 
 + catch ( Throwable th ) { } 
 + if ( opened ) 
 + throw new AssertionError ( " Opened dropped keyspace " ) ; 
 
 / / write on old should fail . 
 rm = new RowMutation ( oldKs . name , ByteBufferUtil . bytes ( " any key will do " ) ) ;
