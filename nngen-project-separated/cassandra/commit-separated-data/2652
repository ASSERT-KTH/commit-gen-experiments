BLEU SCORE: 0.056697911109760024

TEST MSG: Fix stress smart Thrift client to pick servers correctly
GENERATED MSG: Make stress . java insert operation to use microseconds

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 4d9bc07 . . 05f1048 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 17 , 6 + 17 , 7 @ @ <nl> * Change caching option syntax ( CASSANDRA - 6745 ) <nl> * Fix stress to do proper counter reads ( CASSANDRA - 6835 ) <nl> * Fix help message for stress counter _ write ( CASSANDRA - 6824 ) <nl> + * Fix stress smart Thrift client to pick servers correctly ( CASSANDRA - 6848 ) <nl> Merged from 2 . 0 : <nl> * Fix leaking validator FH in StreamWriter ( CASSANDRA - 6832 ) <nl> * fix nodetool getsstables for blob PK ( CASSANDRA - 6803 ) <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / util / SmartThriftClient . java b / tools / stress / src / org / apache / cassandra / stress / util / SmartThriftClient . java <nl> index 48d8b64 . . 2782a05 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / util / SmartThriftClient . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / util / SmartThriftClient . java <nl> @ @ - 29 , 6 + 29 , 7 @ @ import java . util . concurrent . atomic . AtomicInteger ; <nl> <nl> import com . datastax . driver . core . Host ; <nl> import com . datastax . driver . core . Metadata ; <nl> + import com . google . common . collect . Iterators ; <nl> import org . apache . cassandra . stress . settings . StressSettings ; <nl> import org . apache . cassandra . thrift . * ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> @ @ - 108 , 13 + 109 , 10 @ @ public class SmartThriftClient implements ThriftClient <nl> private Client get ( ByteBuffer pk ) <nl> { <nl> Set < Host > hosts = metadata . getReplicas ( metadata . quote ( keyspace ) , pk ) ; <nl> - int count = roundrobin . incrementAndGet ( ) % hosts . size ( ) ; <nl> - if ( count < 0 ) <nl> - count = - count ; <nl> - Iterator < Host > iter = hosts . iterator ( ) ; <nl> - while ( count > 0 & & iter . hasNext ( ) ) <nl> - iter . next ( ) ; <nl> - Host host = iter . next ( ) ; <nl> + int pos = roundrobin . incrementAndGet ( ) % hosts . size ( ) ; <nl> + if ( pos < 0 ) <nl> + pos = - pos ; <nl> + Host host = Iterators . get ( hosts . iterator ( ) , pos ) ; <nl> ConcurrentLinkedQueue < Client > q = cache . get ( host ) ; <nl> if ( q = = null ) <nl> {
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java <nl> index 9ff110e . . 99037a1 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessagingService . java <nl> + + + b / src / java / org / apache / cassandra / net / MessagingService . java <nl> @ @ - 482 , 7 + 482 , 21 @ @ public final class MessagingService implements MessagingServiceMBean <nl> logger _ . info ( " Waiting for messaging service to quiesce " ) ; <nl> / / We may need to schedule hints on the mutation stage , so it ' s erroneous to shut down the mutation stage first <nl> assert ! StageManager . getStage ( Stage . MUTATION ) . isShutdown ( ) ; <nl> + <nl> + / / the important part <nl> callbacks . shutdown ( ) ; <nl> + <nl> + / / attempt to humor tests that try to stop and restart MS <nl> + try <nl> + { <nl> + for ( SocketThread th : socketThreads ) <nl> + th . close ( ) ; <nl> + } <nl> + catch ( IOException e ) <nl> + { <nl> + throw new IOError ( e ) ; <nl> + } <nl> + <nl> } <nl> <nl> public void receive ( Message message , String id )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 4d9bc07 . . 05f1048 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 17 , 6 + 17 , 7 @ @ 
 * Change caching option syntax ( CASSANDRA - 6745 ) 
 * Fix stress to do proper counter reads ( CASSANDRA - 6835 ) 
 * Fix help message for stress counter _ write ( CASSANDRA - 6824 ) 
 + * Fix stress smart Thrift client to pick servers correctly ( CASSANDRA - 6848 ) 
 Merged from 2 . 0 : 
 * Fix leaking validator FH in StreamWriter ( CASSANDRA - 6832 ) 
 * fix nodetool getsstables for blob PK ( CASSANDRA - 6803 ) 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / util / SmartThriftClient . java b / tools / stress / src / org / apache / cassandra / stress / util / SmartThriftClient . java 
 index 48d8b64 . . 2782a05 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / util / SmartThriftClient . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / util / SmartThriftClient . java 
 @ @ - 29 , 6 + 29 , 7 @ @ import java . util . concurrent . atomic . AtomicInteger ; 
 
 import com . datastax . driver . core . Host ; 
 import com . datastax . driver . core . Metadata ; 
 + import com . google . common . collect . Iterators ; 
 import org . apache . cassandra . stress . settings . StressSettings ; 
 import org . apache . cassandra . thrift . * ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 @ @ - 108 , 13 + 109 , 10 @ @ public class SmartThriftClient implements ThriftClient 
 private Client get ( ByteBuffer pk ) 
 { 
 Set < Host > hosts = metadata . getReplicas ( metadata . quote ( keyspace ) , pk ) ; 
 - int count = roundrobin . incrementAndGet ( ) % hosts . size ( ) ; 
 - if ( count < 0 ) 
 - count = - count ; 
 - Iterator < Host > iter = hosts . iterator ( ) ; 
 - while ( count > 0 & & iter . hasNext ( ) ) 
 - iter . next ( ) ; 
 - Host host = iter . next ( ) ; 
 + int pos = roundrobin . incrementAndGet ( ) % hosts . size ( ) ; 
 + if ( pos < 0 ) 
 + pos = - pos ; 
 + Host host = Iterators . get ( hosts . iterator ( ) , pos ) ; 
 ConcurrentLinkedQueue < Client > q = cache . get ( host ) ; 
 if ( q = = null ) 
 {

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java 
 index 9ff110e . . 99037a1 100644 
 - - - a / src / java / org / apache / cassandra / net / MessagingService . java 
 + + + b / src / java / org / apache / cassandra / net / MessagingService . java 
 @ @ - 482 , 7 + 482 , 21 @ @ public final class MessagingService implements MessagingServiceMBean 
 logger _ . info ( " Waiting for messaging service to quiesce " ) ; 
 / / We may need to schedule hints on the mutation stage , so it ' s erroneous to shut down the mutation stage first 
 assert ! StageManager . getStage ( Stage . MUTATION ) . isShutdown ( ) ; 
 + 
 + / / the important part 
 callbacks . shutdown ( ) ; 
 + 
 + / / attempt to humor tests that try to stop and restart MS 
 + try 
 + { 
 + for ( SocketThread th : socketThreads ) 
 + th . close ( ) ; 
 + } 
 + catch ( IOException e ) 
 + { 
 + throw new IOError ( e ) ; 
 + } 
 + 
 } 
 
 public void receive ( Message message , String id )
