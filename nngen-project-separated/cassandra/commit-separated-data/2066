BLEU SCORE: 0.02383853510228548

TEST MSG: Notify DT subscribers when a column family is truncated
GENERATED MSG: Add SSTableDeletingNotification to DataTracker

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 7deea86 . . 1c2231d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 0 . 11 : <nl> + * Notify DT subscribers when a column family is truncated ( CASSANDRA - 8088 ) <nl> * Add sanity check of $ JAVA on startup ( CASSANDRA - 7676 ) <nl> * Schedule fat client schema pull on join ( CASSANDRA - 7993 ) <nl> * Don ' t reset nodes ' versions when closing IncomingTcpConnections <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 3da44de . . d0ff951 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 2035 , 6 + 2035 , 8 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> logger . debug ( " Discarding sstable data for truncated CF + indexes " ) ; <nl> <nl> final long truncatedAt = System . currentTimeMillis ( ) ; <nl> + data . notifyTruncated ( truncatedAt ) ; <nl> + <nl> if ( DatabaseDescriptor . isAutoSnapshot ( ) ) <nl> snapshot ( Keyspace . getTimestampedSnapshotName ( name ) ) ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / db / DataTracker . java b / src / java / org / apache / cassandra / db / DataTracker . java <nl> index d41181b . . f6d2c75 100644 <nl> - - - a / src / java / org / apache / cassandra / db / DataTracker . java <nl> + + + b / src / java / org / apache / cassandra / db / DataTracker . java <nl> @ @ - 475 , 6 + 475 , 13 @ @ public class DataTracker <nl> subscriber . handleNotification ( notification , this ) ; <nl> } <nl> <nl> + public void notifyTruncated ( long truncatedAt ) <nl> + { <nl> + INotification notification = new TruncationNotification ( truncatedAt ) ; <nl> + for ( INotificationConsumer subscriber : subscribers ) <nl> + subscriber . handleNotification ( notification , this ) ; <nl> + } <nl> + <nl> public void subscribe ( INotificationConsumer consumer ) <nl> { <nl> subscribers . add ( consumer ) ; <nl> diff - - git a / src / java / org / apache / cassandra / notifications / TruncationNotification . java b / src / java / org / apache / cassandra / notifications / TruncationNotification . java <nl> new file mode 100644 <nl> index 0000000 . . 345dd17 <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / notifications / TruncationNotification . java <nl> @ @ - 0 , 0 + 1 , 32 @ @ <nl> + / * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + package org . apache . cassandra . notifications ; <nl> + <nl> + / * * <nl> + * Fired during truncate , after the memtable has been flushed but before any <nl> + * snapshot is taken and SSTables are discarded <nl> + * / <nl> + public class TruncationNotification implements INotification <nl> + { <nl> + public final long truncatedAt ; <nl> + <nl> + public TruncationNotification ( long truncatedAt ) <nl> + { <nl> + this . truncatedAt = truncatedAt ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 51be09d . . 049544e 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 2 . 10 <nl> + * ( Hadoop ) Fix CQLRW for thrift tables ( CASSANDRA - 6002 ) <nl> * Fix possible divide - by - zero in HHOM ( CASSANDRA - 5990 ) <nl> * Allow local batchlog writes for CL . ANY ( CASSANDRA - 5967 ) <nl> * Optimize name query performance in wide rows ( CASSANDRA - 5966 ) <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java <nl> index be178b3 . . d08e08a 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java <nl> @ @ - 376 , 11 + 376 , 15 @ @ final class CqlRecordWriter extends AbstractColumnFamilyRecordWriter < Map < String , <nl> CFMetaData cfMeta = CFMetaData . fromThrift ( cfDef ) ; <nl> CFDefinition cfDefinition = new CFDefinition ( cfMeta ) ; <nl> int i = 0 ; <nl> + partitionKeyColumns = new String [ cfDefinition . keys . keySet ( ) . size ( ) ] ; <nl> for ( ColumnIdentifier column : cfDefinition . keys . keySet ( ) ) <nl> { <nl> partitionKeyColumns [ i ] = column . toString ( ) ; <nl> i + + ; <nl> } <nl> + clusterColumns = new ArrayList < String > ( ) ; <nl> + for ( ColumnIdentifier column : cfDefinition . columns . keySet ( ) ) <nl> + clusterColumns . add ( column . toString ( ) ) ; <nl> return ; <nl> } <nl> }

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 7deea86 . . 1c2231d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 0 . 11 : 
 + * Notify DT subscribers when a column family is truncated ( CASSANDRA - 8088 ) 
 * Add sanity check of $ JAVA on startup ( CASSANDRA - 7676 ) 
 * Schedule fat client schema pull on join ( CASSANDRA - 7993 ) 
 * Don ' t reset nodes ' versions when closing IncomingTcpConnections 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 3da44de . . d0ff951 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 2035 , 6 + 2035 , 8 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 logger . debug ( " Discarding sstable data for truncated CF + indexes " ) ; 
 
 final long truncatedAt = System . currentTimeMillis ( ) ; 
 + data . notifyTruncated ( truncatedAt ) ; 
 + 
 if ( DatabaseDescriptor . isAutoSnapshot ( ) ) 
 snapshot ( Keyspace . getTimestampedSnapshotName ( name ) ) ; 
 
 diff - - git a / src / java / org / apache / cassandra / db / DataTracker . java b / src / java / org / apache / cassandra / db / DataTracker . java 
 index d41181b . . f6d2c75 100644 
 - - - a / src / java / org / apache / cassandra / db / DataTracker . java 
 + + + b / src / java / org / apache / cassandra / db / DataTracker . java 
 @ @ - 475 , 6 + 475 , 13 @ @ public class DataTracker 
 subscriber . handleNotification ( notification , this ) ; 
 } 
 
 + public void notifyTruncated ( long truncatedAt ) 
 + { 
 + INotification notification = new TruncationNotification ( truncatedAt ) ; 
 + for ( INotificationConsumer subscriber : subscribers ) 
 + subscriber . handleNotification ( notification , this ) ; 
 + } 
 + 
 public void subscribe ( INotificationConsumer consumer ) 
 { 
 subscribers . add ( consumer ) ; 
 diff - - git a / src / java / org / apache / cassandra / notifications / TruncationNotification . java b / src / java / org / apache / cassandra / notifications / TruncationNotification . java 
 new file mode 100644 
 index 0000000 . . 345dd17 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / notifications / TruncationNotification . java 
 @ @ - 0 , 0 + 1 , 32 @ @ 
 + / * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + package org . apache . cassandra . notifications ; 
 + 
 + / * * 
 + * Fired during truncate , after the memtable has been flushed but before any 
 + * snapshot is taken and SSTables are discarded 
 + * / 
 + public class TruncationNotification implements INotification 
 + { 
 + public final long truncatedAt ; 
 + 
 + public TruncationNotification ( long truncatedAt ) 
 + { 
 + this . truncatedAt = truncatedAt ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 51be09d . . 049544e 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 2 . 10 
 + * ( Hadoop ) Fix CQLRW for thrift tables ( CASSANDRA - 6002 ) 
 * Fix possible divide - by - zero in HHOM ( CASSANDRA - 5990 ) 
 * Allow local batchlog writes for CL . ANY ( CASSANDRA - 5967 ) 
 * Optimize name query performance in wide rows ( CASSANDRA - 5966 ) 
 diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java 
 index be178b3 . . d08e08a 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java 
 + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java 
 @ @ - 376 , 11 + 376 , 15 @ @ final class CqlRecordWriter extends AbstractColumnFamilyRecordWriter < Map < String , 
 CFMetaData cfMeta = CFMetaData . fromThrift ( cfDef ) ; 
 CFDefinition cfDefinition = new CFDefinition ( cfMeta ) ; 
 int i = 0 ; 
 + partitionKeyColumns = new String [ cfDefinition . keys . keySet ( ) . size ( ) ] ; 
 for ( ColumnIdentifier column : cfDefinition . keys . keySet ( ) ) 
 { 
 partitionKeyColumns [ i ] = column . toString ( ) ; 
 i + + ; 
 } 
 + clusterColumns = new ArrayList < String > ( ) ; 
 + for ( ColumnIdentifier column : cfDefinition . columns . keySet ( ) ) 
 + clusterColumns . add ( column . toString ( ) ) ; 
 return ; 
 } 
 }
