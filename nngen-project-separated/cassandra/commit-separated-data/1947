BLEU SCORE: 0.027611988917697356

TEST MSG: fix up misapply of CASSANDRA - 7964 nits
GENERATED MSG: fixup

TEST DIFF (one line): diff - - git a / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java b / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java <nl> index baab867 . . 0d0cba1 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java <nl> @ @ - 169 , 7 + 169 , 6 @ @ public abstract class PartitionIterator implements Iterator < Row > <nl> / / so that we know with what chance we reached there , and we adjust our roll at that level by that amount <nl> final double [ ] chancemodifier = new double [ generator . clusteringComponents . size ( ) ] ; <nl> final double [ ] rollmodifier = new double [ generator . clusteringComponents . size ( ) ] ; <nl> - final ThreadLocalRandom random = ThreadLocalRandom . current ( ) ; <nl> <nl> / / track where in the partition we are , and where we are limited to <nl> final int [ ] position = new int [ generator . clusteringComponents . size ( ) ] ; <nl> @ @ - 240 , 7 + 239 , 7 @ @ public abstract class PartitionIterator implements Iterator < Row > <nl> } <nl> <nl> / / seek to our start position <nl> - switch ( seek ( isWrite ? position : null ) ) <nl> + switch ( seek ( isWrite ? position : 0 ) ) <nl> { <nl> case END _ OF _ PARTITION : <nl> return false ; <nl> @ @ - 382 , 6 + 381 , 7 @ @ public abstract class PartitionIterator implements Iterator < Row > <nl> <nl> private boolean advance ( int depth , boolean first ) <nl> { <nl> + ThreadLocalRandom random = ThreadLocalRandom . current ( ) ; <nl> / / advance the leaf component <nl> clusteringComponents [ depth ] . poll ( ) ; <nl> position [ depth ] + + ; <nl> @ @ - 548 , 9 + 548 , 9 @ @ public abstract class PartitionIterator implements Iterator < Row > <nl> <nl> private State setHasNext ( boolean hasNext ) <nl> { <nl> + this . hasNext = hasNext ; <nl> if ( ! hasNext ) <nl> { <nl> - this . hasNext = false ; <nl> boolean isLast = finishedPartition ( ) ; <nl> if ( isWrite ) <nl> { <nl> @ @ - 562 , 7 + 562 , 6 @ @ public abstract class PartitionIterator implements Iterator < Row > <nl> } <nl> return isLast ? State . END _ OF _ PARTITION : State . AFTER _ LIMIT ; <nl> } <nl> - this . hasNext = hasNext ; <nl> return State . SUCCESS ; <nl> } <nl> } <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java b / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java <nl> index 61237f1 . . a915d93 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java <nl> @ @ - 44 , 15 + 44 , 10 @ @ public class SchemaInsert extends SchemaStatement <nl> <nl> public SchemaInsert ( Timer timer , StressSettings settings , PartitionGenerator generator , SeedManager seedManager , Distribution batchSize , RatioDistribution useRatio , Integer thriftId , PreparedStatement statement , ConsistencyLevel cl , BatchStatement . Type batchType ) <nl> { <nl> - super ( timer , settings , spec ( generator , seedManager , batchSize , useRatio ) , statement , thriftId , cl , ValidationType . NOT _ FAIL ) ; <nl> + super ( timer , settings , new DataSpec ( generator , seedManager , batchSize , useRatio ) , statement , thriftId , cl , ValidationType . NOT _ FAIL ) ; <nl> this . batchType = batchType ; <nl> } <nl> <nl> - private static DataSpec spec ( PartitionGenerator generator , SeedManager seedManager , Distribution partitionCount , RatioDistribution useRatio ) <nl> - { <nl> - return new DataSpec ( generator , seedManager , partitionCount , useRatio ) ; <nl> - } <nl> - <nl> private class JavaDriverRun extends Runner <nl> { <nl> final JavaDriverClient client ; <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaQuery . java b / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaQuery . java <nl> index 72db2f7 . . a51bac4 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaQuery . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaQuery . java <nl> @ @ - 54 , 16 + 54 , 11 @ @ public class SchemaQuery extends SchemaStatement <nl> <nl> public SchemaQuery ( Timer timer , StressSettings settings , PartitionGenerator generator , SeedManager seedManager , Integer thriftId , PreparedStatement statement , ConsistencyLevel cl , ValidationType validationType , ArgSelect argSelect ) <nl> { <nl> - super ( timer , settings , spec ( generator , seedManager , statement . getVariables ( ) . size ( ) , argSelect ) , statement , thriftId , cl , validationType ) ; <nl> + super ( timer , settings , new DataSpec ( generator , seedManager , new DistributionFixed ( 1 ) , argSelect = = ArgSelect . MULTIROW ? statement . getVariables ( ) . size ( ) : 1 ) , statement , thriftId , cl , validationType ) ; <nl> this . argSelect = argSelect ; <nl> randomBuffer = new Object [ argumentIndex . length ] [ argumentIndex . length ] ; <nl> } <nl> <nl> - static DataSpec spec ( PartitionGenerator generator , SeedManager seedManager , int argCount , ArgSelect argSelect ) <nl> - { <nl> - return new DataSpec ( generator , seedManager , new DistributionFixed ( 1 ) , argSelect = = ArgSelect . MULTIROW ? argCount : 1 ) ; <nl> - } <nl> - <nl> private class JavaDriverRun extends Runner <nl> { <nl> final JavaDriverClient client ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java b / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java 
 index baab867 . . 0d0cba1 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / generate / PartitionIterator . java 
 @ @ - 169 , 7 + 169 , 6 @ @ public abstract class PartitionIterator implements Iterator < Row > 
 / / so that we know with what chance we reached there , and we adjust our roll at that level by that amount 
 final double [ ] chancemodifier = new double [ generator . clusteringComponents . size ( ) ] ; 
 final double [ ] rollmodifier = new double [ generator . clusteringComponents . size ( ) ] ; 
 - final ThreadLocalRandom random = ThreadLocalRandom . current ( ) ; 
 
 / / track where in the partition we are , and where we are limited to 
 final int [ ] position = new int [ generator . clusteringComponents . size ( ) ] ; 
 @ @ - 240 , 7 + 239 , 7 @ @ public abstract class PartitionIterator implements Iterator < Row > 
 } 
 
 / / seek to our start position 
 - switch ( seek ( isWrite ? position : null ) ) 
 + switch ( seek ( isWrite ? position : 0 ) ) 
 { 
 case END _ OF _ PARTITION : 
 return false ; 
 @ @ - 382 , 6 + 381 , 7 @ @ public abstract class PartitionIterator implements Iterator < Row > 
 
 private boolean advance ( int depth , boolean first ) 
 { 
 + ThreadLocalRandom random = ThreadLocalRandom . current ( ) ; 
 / / advance the leaf component 
 clusteringComponents [ depth ] . poll ( ) ; 
 position [ depth ] + + ; 
 @ @ - 548 , 9 + 548 , 9 @ @ public abstract class PartitionIterator implements Iterator < Row > 
 
 private State setHasNext ( boolean hasNext ) 
 { 
 + this . hasNext = hasNext ; 
 if ( ! hasNext ) 
 { 
 - this . hasNext = false ; 
 boolean isLast = finishedPartition ( ) ; 
 if ( isWrite ) 
 { 
 @ @ - 562 , 7 + 562 , 6 @ @ public abstract class PartitionIterator implements Iterator < Row > 
 } 
 return isLast ? State . END _ OF _ PARTITION : State . AFTER _ LIMIT ; 
 } 
 - this . hasNext = hasNext ; 
 return State . SUCCESS ; 
 } 
 } 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java b / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java 
 index 61237f1 . . a915d93 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java 
 @ @ - 44 , 15 + 44 , 10 @ @ public class SchemaInsert extends SchemaStatement 
 
 public SchemaInsert ( Timer timer , StressSettings settings , PartitionGenerator generator , SeedManager seedManager , Distribution batchSize , RatioDistribution useRatio , Integer thriftId , PreparedStatement statement , ConsistencyLevel cl , BatchStatement . Type batchType ) 
 { 
 - super ( timer , settings , spec ( generator , seedManager , batchSize , useRatio ) , statement , thriftId , cl , ValidationType . NOT _ FAIL ) ; 
 + super ( timer , settings , new DataSpec ( generator , seedManager , batchSize , useRatio ) , statement , thriftId , cl , ValidationType . NOT _ FAIL ) ; 
 this . batchType = batchType ; 
 } 
 
 - private static DataSpec spec ( PartitionGenerator generator , SeedManager seedManager , Distribution partitionCount , RatioDistribution useRatio ) 
 - { 
 - return new DataSpec ( generator , seedManager , partitionCount , useRatio ) ; 
 - } 
 - 
 private class JavaDriverRun extends Runner 
 { 
 final JavaDriverClient client ; 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaQuery . java b / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaQuery . java 
 index 72db2f7 . . a51bac4 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaQuery . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaQuery . java 
 @ @ - 54 , 16 + 54 , 11 @ @ public class SchemaQuery extends SchemaStatement 
 
 public SchemaQuery ( Timer timer , StressSettings settings , PartitionGenerator generator , SeedManager seedManager , Integer thriftId , PreparedStatement statement , ConsistencyLevel cl , ValidationType validationType , ArgSelect argSelect ) 
 { 
 - super ( timer , settings , spec ( generator , seedManager , statement . getVariables ( ) . size ( ) , argSelect ) , statement , thriftId , cl , validationType ) ; 
 + super ( timer , settings , new DataSpec ( generator , seedManager , new DistributionFixed ( 1 ) , argSelect = = ArgSelect . MULTIROW ? statement . getVariables ( ) . size ( ) : 1 ) , statement , thriftId , cl , validationType ) ; 
 this . argSelect = argSelect ; 
 randomBuffer = new Object [ argumentIndex . length ] [ argumentIndex . length ] ; 
 } 
 
 - static DataSpec spec ( PartitionGenerator generator , SeedManager seedManager , int argCount , ArgSelect argSelect ) 
 - { 
 - return new DataSpec ( generator , seedManager , new DistributionFixed ( 1 ) , argSelect = = ArgSelect . MULTIROW ? argCount : 1 ) ; 
 - } 
 - 
 private class JavaDriverRun extends Runner 
 { 
 final JavaDriverClient client ;

NEAREST DIFF:
ELIMINATEDSENTENCE
