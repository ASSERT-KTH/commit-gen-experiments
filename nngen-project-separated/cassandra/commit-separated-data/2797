BLEU SCORE: 0.01908840668714524

TEST MSG: Remove the assert from DataTracker . unsubscribe ( )
GENERATED MSG: don ' t throw exception on batch of counter super columns

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / DataTracker . java b / src / java / org / apache / cassandra / db / DataTracker . java <nl> index 4fe0a5e . . b128abb 100644 <nl> - - - a / src / java / org / apache / cassandra / db / DataTracker . java <nl> + + + b / src / java / org / apache / cassandra / db / DataTracker . java <nl> @ @ - 446 , 8 + 446 , 7 @ @ public class DataTracker <nl> <nl> public void unsubscribe ( INotificationConsumer consumer ) <nl> { <nl> - boolean found = subscribers . remove ( consumer ) ; <nl> - assert found : consumer + " not subscribed " ; <nl> + subscribers . remove ( consumer ) ; <nl> } <nl> <nl> public static SSTableIntervalTree buildIntervalTree ( Iterable < SSTableReader > sstables )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 0debe69 . . a839fe1 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 21 , 6 + 21 , 7 @ @ <nl> with no post - flush activity permanently dirty ) ( CASSANDRA - 2829 ) <nl> * fix throwing exception with batch mutation of counter super columns <nl> ( CASSANDRA - 2949 ) <nl> + * ignore system tables during repair ( CASSANDRA - 2979 ) <nl> <nl> <nl> 0 . 8 . 2 <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 878e73a . . 1370115 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 1532 , 6 + 1532 , 11 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> * / <nl> public void forceTableRepair ( final String tableName , final String . . . columnFamilies ) throws IOException <nl> { <nl> + if ( Table . SYSTEM _ TABLE . equals ( tableName ) ) <nl> + { <nl> + return ; <nl> + } <nl> + <nl> List < AntiEntropyService . RepairSession > sessions = new ArrayList < AntiEntropyService . RepairSession > ( ) ; <nl> for ( Range range : getLocalRanges ( tableName ) ) <nl> {

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / DataTracker . java b / src / java / org / apache / cassandra / db / DataTracker . java 
 index 4fe0a5e . . b128abb 100644 
 - - - a / src / java / org / apache / cassandra / db / DataTracker . java 
 + + + b / src / java / org / apache / cassandra / db / DataTracker . java 
 @ @ - 446 , 8 + 446 , 7 @ @ public class DataTracker 
 
 public void unsubscribe ( INotificationConsumer consumer ) 
 { 
 - boolean found = subscribers . remove ( consumer ) ; 
 - assert found : consumer + " not subscribed " ; 
 + subscribers . remove ( consumer ) ; 
 } 
 
 public static SSTableIntervalTree buildIntervalTree ( Iterable < SSTableReader > sstables )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 0debe69 . . a839fe1 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 21 , 6 + 21 , 7 @ @ 
 with no post - flush activity permanently dirty ) ( CASSANDRA - 2829 ) 
 * fix throwing exception with batch mutation of counter super columns 
 ( CASSANDRA - 2949 ) 
 + * ignore system tables during repair ( CASSANDRA - 2979 ) 
 
 
 0 . 8 . 2 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 878e73a . . 1370115 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 1532 , 6 + 1532 , 11 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 * / 
 public void forceTableRepair ( final String tableName , final String . . . columnFamilies ) throws IOException 
 { 
 + if ( Table . SYSTEM _ TABLE . equals ( tableName ) ) 
 + { 
 + return ; 
 + } 
 + 
 List < AntiEntropyService . RepairSession > sessions = new ArrayList < AntiEntropyService . RepairSession > ( ) ; 
 for ( Range range : getLocalRanges ( tableName ) ) 
 {
