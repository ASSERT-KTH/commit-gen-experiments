BLEU SCORE: 0.02139089632303349

TEST MSG: Fix CAS conditions for COMPACT STORAGE tables
GENERATED MSG: add rpc _ [ min | max ] _ threads

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 42c78af . . 920f073 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 36 , 6 + 36 , 7 @ @ <nl> * FBUtilities . singleton ( ) should use the CF comparator ( CASSANDRA - 6778 ) <nl> * Fix CQLSStableWriter . addRow ( Map < String , Object > ) ( CASSANDRA - 6526 ) <nl> * Fix HSHA server introducing corrupt data ( CASSANDRA - 6285 ) <nl> + * Fix CAS conditions for COMPACT STORAGE tables ( CASSANDRA - 6813 ) <nl> Merged from 1 . 2 : <nl> * Add CMSClassUnloadingEnabled JVM option ( CASSANDRA - 6541 ) <nl> * Catch memtable flush exceptions during shutdown ( CASSANDRA - 6735 ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / ColumnCondition . java b / src / java / org / apache / cassandra / cql3 / ColumnCondition . java <nl> index 797dba6 . . ce44c3b 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / ColumnCondition . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / ColumnCondition . java <nl> @ @ - 92 , 7 + 92 , 12 @ @ public class ColumnCondition <nl> if ( column . type instanceof CollectionType ) <nl> return collectionAppliesTo ( ( CollectionType ) column . type , rowPrefix , current , now ) ; <nl> <nl> - Column c = current . getColumn ( copyOrUpdatePrefix ( current . metadata ( ) , rowPrefix ) . add ( column . name . key ) . build ( ) ) ; <nl> + ColumnNameBuilder prefix = copyOrUpdatePrefix ( current . metadata ( ) , rowPrefix ) ; <nl> + ByteBuffer columnName = column . kind = = CFDefinition . Name . Kind . VALUE _ ALIAS <nl> + ? prefix . build ( ) <nl> + : prefix . add ( column . name . key ) . build ( ) ; <nl> + <nl> + Column c = current . getColumn ( columnName ) ; <nl> ByteBuffer v = value . bindAndGet ( variables ) ; <nl> return v = = null <nl> ? c = = null | | ! c . isLive ( now ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / CQL3CasConditions . java b / src / java / org / apache / cassandra / cql3 / statements / CQL3CasConditions . java <nl> index 668f98f . . ee004bc 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / CQL3CasConditions . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / CQL3CasConditions . java <nl> @ @ - 82 , 7 + 82 , 8 @ @ public class CQL3CasConditions implements CASConditions <nl> for ( Map . Entry < ByteBuffer , RowCondition > entry : conditions . entrySet ( ) ) <nl> slices [ i + + ] = new ColumnSlice ( entry . getKey ( ) , entry . getValue ( ) . rowPrefix . buildAsEndOfRange ( ) ) ; <nl> <nl> - return new SliceQueryFilter ( slices , false , slices . length , cfm . clusteringKeyColumns ( ) . size ( ) ) ; <nl> + int toGroup = cfm . getCfDef ( ) . isCompact ? - 1 : cfm . clusteringKeyColumns ( ) . size ( ) ; <nl> + return new SliceQueryFilter ( slices , false , slices . length , toGroup ) ; <nl> } <nl> <nl> public boolean appliesTo ( ColumnFamily current ) throws InvalidRequestException
NEAREST DIFF (one line): diff - - git a / contrib / pig / src / java / org / apache / cassandra / hadoop / pig / CassandraStorage . java b / contrib / pig / src / java / org / apache / cassandra / hadoop / pig / CassandraStorage . java <nl> index da43409 . . d639bc8 100644 <nl> - - - a / contrib / pig / src / java / org / apache / cassandra / hadoop / pig / CassandraStorage . java <nl> + + + b / contrib / pig / src / java / org / apache / cassandra / hadoop / pig / CassandraStorage . java <nl> @ @ - 29 , 9 + 29 , 9 @ @ import org . apache . cassandra . db . SuperColumn ; <nl> import org . apache . cassandra . hadoop . * ; <nl> import org . apache . cassandra . thrift . SlicePredicate ; <nl> import org . apache . cassandra . thrift . SliceRange ; <nl> - import org . apache . cassandra . avro . Mutation ; <nl> - import org . apache . cassandra . avro . Deletion ; <nl> - import org . apache . cassandra . avro . ColumnOrSuperColumn ; <nl> + import org . apache . cassandra . hadoop . avro . Mutation ; <nl> + import org . apache . cassandra . hadoop . avro . Deletion ; <nl> + import org . apache . cassandra . hadoop . avro . ColumnOrSuperColumn ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> <nl> import org . apache . hadoop . conf . Configuration ; <nl> @ @ - 57 , 7 + 57 , 7 @ @ public class CassandraStorage extends LoadFunc implements StoreFuncInterface , Lo <nl> public final static String PIG _ INITIAL _ ADDRESS = " PIG _ INITIAL _ ADDRESS " ; <nl> public final static String PIG _ PARTITIONER = " PIG _ PARTITIONER " ; <nl> <nl> - private final static ByteBuffer BOUND = FBUtilities . EMPTY _ BYTE _ BUFFER ; <nl> + private final static ByteBuffer BOUND = ByteBufferUtil . EMPTY _ BYTE _ BUFFER ; <nl> private final static int LIMIT = 1024 ; <nl> private static final Log logger = LogFactory . getLog ( CassandraStorage . class ) ; <nl> <nl> @ @ - 237 , 12 + 237 , 12 @ @ public class CassandraStorage extends LoadFunc implements StoreFuncInterface , Lo <nl> Mutation mutation = new Mutation ( ) ; <nl> if ( DataType . findType ( pair . get ( 1 ) ) = = DataType . BAG ) / / supercolumn <nl> { <nl> - org . apache . cassandra . avro . SuperColumn sc = new org . apache . cassandra . avro . SuperColumn ( ) ; <nl> + org . apache . cassandra . hadoop . avro . SuperColumn sc = new org . apache . cassandra . hadoop . avro . SuperColumn ( ) ; <nl> sc . name = objToBB ( pair . get ( 0 ) ) ; <nl> - ArrayList < org . apache . cassandra . avro . Column > columns = new ArrayList < org . apache . cassandra . avro . Column > ( ) ; <nl> + ArrayList < org . apache . cassandra . hadoop . avro . Column > columns = new ArrayList < org . apache . cassandra . hadoop . avro . Column > ( ) ; <nl> for ( Tuple subcol : ( DefaultDataBag ) pair . get ( 1 ) ) <nl> { <nl> - org . apache . cassandra . avro . Column column = new org . apache . cassandra . avro . Column ( ) ; <nl> + org . apache . cassandra . hadoop . avro . Column column = new org . apache . cassandra . hadoop . avro . Column ( ) ; <nl> column . name = objToBB ( subcol . get ( 0 ) ) ; <nl> column . value = objToBB ( subcol . get ( 1 ) ) ; <nl> column . timestamp = System . currentTimeMillis ( ) * 1000 ; <nl> @ @ - 266 , 13 + 266 , 13 @ @ public class CassandraStorage extends LoadFunc implements StoreFuncInterface , Lo <nl> if ( pair . get ( 1 ) = = null ) <nl> { <nl> mutation . deletion = new Deletion ( ) ; <nl> - mutation . deletion . predicate = new org . apache . cassandra . avro . SlicePredicate ( ) ; <nl> + mutation . deletion . predicate = new org . apache . cassandra . hadoop . avro . SlicePredicate ( ) ; <nl> mutation . deletion . predicate . column _ names = Arrays . asList ( objToBB ( pair . get ( 0 ) ) ) ; <nl> mutation . deletion . timestamp = System . currentTimeMillis ( ) * 1000 ; <nl> } <nl> else <nl> { <nl> - org . apache . cassandra . avro . Column column = new org . apache . cassandra . avro . Column ( ) ; <nl> + org . apache . cassandra . hadoop . avro . Column column = new org . apache . cassandra . hadoop . avro . Column ( ) ; <nl> column . name = objToBB ( pair . get ( 0 ) ) ; <nl> column . value = objToBB ( pair . get ( 1 ) ) ; <nl> column . timestamp = System . currentTimeMillis ( ) * 1000 ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 42c78af . . 920f073 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 36 , 6 + 36 , 7 @ @ 
 * FBUtilities . singleton ( ) should use the CF comparator ( CASSANDRA - 6778 ) 
 * Fix CQLSStableWriter . addRow ( Map < String , Object > ) ( CASSANDRA - 6526 ) 
 * Fix HSHA server introducing corrupt data ( CASSANDRA - 6285 ) 
 + * Fix CAS conditions for COMPACT STORAGE tables ( CASSANDRA - 6813 ) 
 Merged from 1 . 2 : 
 * Add CMSClassUnloadingEnabled JVM option ( CASSANDRA - 6541 ) 
 * Catch memtable flush exceptions during shutdown ( CASSANDRA - 6735 ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / ColumnCondition . java b / src / java / org / apache / cassandra / cql3 / ColumnCondition . java 
 index 797dba6 . . ce44c3b 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / ColumnCondition . java 
 + + + b / src / java / org / apache / cassandra / cql3 / ColumnCondition . java 
 @ @ - 92 , 7 + 92 , 12 @ @ public class ColumnCondition 
 if ( column . type instanceof CollectionType ) 
 return collectionAppliesTo ( ( CollectionType ) column . type , rowPrefix , current , now ) ; 
 
 - Column c = current . getColumn ( copyOrUpdatePrefix ( current . metadata ( ) , rowPrefix ) . add ( column . name . key ) . build ( ) ) ; 
 + ColumnNameBuilder prefix = copyOrUpdatePrefix ( current . metadata ( ) , rowPrefix ) ; 
 + ByteBuffer columnName = column . kind = = CFDefinition . Name . Kind . VALUE _ ALIAS 
 + ? prefix . build ( ) 
 + : prefix . add ( column . name . key ) . build ( ) ; 
 + 
 + Column c = current . getColumn ( columnName ) ; 
 ByteBuffer v = value . bindAndGet ( variables ) ; 
 return v = = null 
 ? c = = null | | ! c . isLive ( now ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / CQL3CasConditions . java b / src / java / org / apache / cassandra / cql3 / statements / CQL3CasConditions . java 
 index 668f98f . . ee004bc 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / CQL3CasConditions . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / CQL3CasConditions . java 
 @ @ - 82 , 7 + 82 , 8 @ @ public class CQL3CasConditions implements CASConditions 
 for ( Map . Entry < ByteBuffer , RowCondition > entry : conditions . entrySet ( ) ) 
 slices [ i + + ] = new ColumnSlice ( entry . getKey ( ) , entry . getValue ( ) . rowPrefix . buildAsEndOfRange ( ) ) ; 
 
 - return new SliceQueryFilter ( slices , false , slices . length , cfm . clusteringKeyColumns ( ) . size ( ) ) ; 
 + int toGroup = cfm . getCfDef ( ) . isCompact ? - 1 : cfm . clusteringKeyColumns ( ) . size ( ) ; 
 + return new SliceQueryFilter ( slices , false , slices . length , toGroup ) ; 
 } 
 
 public boolean appliesTo ( ColumnFamily current ) throws InvalidRequestException

NEAREST DIFF:
diff - - git a / contrib / pig / src / java / org / apache / cassandra / hadoop / pig / CassandraStorage . java b / contrib / pig / src / java / org / apache / cassandra / hadoop / pig / CassandraStorage . java 
 index da43409 . . d639bc8 100644 
 - - - a / contrib / pig / src / java / org / apache / cassandra / hadoop / pig / CassandraStorage . java 
 + + + b / contrib / pig / src / java / org / apache / cassandra / hadoop / pig / CassandraStorage . java 
 @ @ - 29 , 9 + 29 , 9 @ @ import org . apache . cassandra . db . SuperColumn ; 
 import org . apache . cassandra . hadoop . * ; 
 import org . apache . cassandra . thrift . SlicePredicate ; 
 import org . apache . cassandra . thrift . SliceRange ; 
 - import org . apache . cassandra . avro . Mutation ; 
 - import org . apache . cassandra . avro . Deletion ; 
 - import org . apache . cassandra . avro . ColumnOrSuperColumn ; 
 + import org . apache . cassandra . hadoop . avro . Mutation ; 
 + import org . apache . cassandra . hadoop . avro . Deletion ; 
 + import org . apache . cassandra . hadoop . avro . ColumnOrSuperColumn ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 
 import org . apache . hadoop . conf . Configuration ; 
 @ @ - 57 , 7 + 57 , 7 @ @ public class CassandraStorage extends LoadFunc implements StoreFuncInterface , Lo 
 public final static String PIG _ INITIAL _ ADDRESS = " PIG _ INITIAL _ ADDRESS " ; 
 public final static String PIG _ PARTITIONER = " PIG _ PARTITIONER " ; 
 
 - private final static ByteBuffer BOUND = FBUtilities . EMPTY _ BYTE _ BUFFER ; 
 + private final static ByteBuffer BOUND = ByteBufferUtil . EMPTY _ BYTE _ BUFFER ; 
 private final static int LIMIT = 1024 ; 
 private static final Log logger = LogFactory . getLog ( CassandraStorage . class ) ; 
 
 @ @ - 237 , 12 + 237 , 12 @ @ public class CassandraStorage extends LoadFunc implements StoreFuncInterface , Lo 
 Mutation mutation = new Mutation ( ) ; 
 if ( DataType . findType ( pair . get ( 1 ) ) = = DataType . BAG ) / / supercolumn 
 { 
 - org . apache . cassandra . avro . SuperColumn sc = new org . apache . cassandra . avro . SuperColumn ( ) ; 
 + org . apache . cassandra . hadoop . avro . SuperColumn sc = new org . apache . cassandra . hadoop . avro . SuperColumn ( ) ; 
 sc . name = objToBB ( pair . get ( 0 ) ) ; 
 - ArrayList < org . apache . cassandra . avro . Column > columns = new ArrayList < org . apache . cassandra . avro . Column > ( ) ; 
 + ArrayList < org . apache . cassandra . hadoop . avro . Column > columns = new ArrayList < org . apache . cassandra . hadoop . avro . Column > ( ) ; 
 for ( Tuple subcol : ( DefaultDataBag ) pair . get ( 1 ) ) 
 { 
 - org . apache . cassandra . avro . Column column = new org . apache . cassandra . avro . Column ( ) ; 
 + org . apache . cassandra . hadoop . avro . Column column = new org . apache . cassandra . hadoop . avro . Column ( ) ; 
 column . name = objToBB ( subcol . get ( 0 ) ) ; 
 column . value = objToBB ( subcol . get ( 1 ) ) ; 
 column . timestamp = System . currentTimeMillis ( ) * 1000 ; 
 @ @ - 266 , 13 + 266 , 13 @ @ public class CassandraStorage extends LoadFunc implements StoreFuncInterface , Lo 
 if ( pair . get ( 1 ) = = null ) 
 { 
 mutation . deletion = new Deletion ( ) ; 
 - mutation . deletion . predicate = new org . apache . cassandra . avro . SlicePredicate ( ) ; 
 + mutation . deletion . predicate = new org . apache . cassandra . hadoop . avro . SlicePredicate ( ) ; 
 mutation . deletion . predicate . column _ names = Arrays . asList ( objToBB ( pair . get ( 0 ) ) ) ; 
 mutation . deletion . timestamp = System . currentTimeMillis ( ) * 1000 ; 
 } 
 else 
 { 
 - org . apache . cassandra . avro . Column column = new org . apache . cassandra . avro . Column ( ) ; 
 + org . apache . cassandra . hadoop . avro . Column column = new org . apache . cassandra . hadoop . avro . Column ( ) ; 
 column . name = objToBB ( pair . get ( 0 ) ) ; 
 column . value = objToBB ( pair . get ( 1 ) ) ; 
 column . timestamp = System . currentTimeMillis ( ) * 1000 ;
