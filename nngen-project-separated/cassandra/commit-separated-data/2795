BLEU SCORE: 0.2259005009024612

TEST MSG: Fix test .
GENERATED MSG: multithreaded hint replay

TEST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / service / pager / AbstractQueryPagerTest . java b / test / unit / org / apache / cassandra / service / pager / AbstractQueryPagerTest . java <nl> index 5467ec0 . . 9df9f6d 100644 <nl> - - - a / test / unit / org / apache / cassandra / service / pager / AbstractQueryPagerTest . java <nl> + + + b / test / unit / org / apache / cassandra / service / pager / AbstractQueryPagerTest . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import static org . junit . Assert . * ; <nl> import org . apache . cassandra . Util ; <nl> import org . apache . cassandra . config . * ; <nl> import org . apache . cassandra . db . * ; <nl> + import org . apache . cassandra . db . composites . CellNames ; <nl> import org . apache . cassandra . db . filter . ColumnCounter ; <nl> import org . apache . cassandra . db . marshal . Int32Type ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> @ @ - 108 , 8 + 109 , 8 @ @ public class AbstractQueryPagerTest <nl> assertEquals ( values . length , row . cf . getColumnCount ( ) ) ; <nl> <nl> int i = 0 ; <nl> - for ( Column c : row . cf ) <nl> - assertEquals ( values [ i + + ] , i ( c . name ( ) ) ) ; <nl> + for ( Cell c : row . cf ) <nl> + assertEquals ( values [ i + + ] , i ( c . name ( ) . toByteBuffer ( ) ) ) ; <nl> } <nl> <nl> private Row createRow ( String name , int nbCol ) <nl> @ @ - 121 , 13 + 122 , 13 @ @ public class AbstractQueryPagerTest <nl> { <nl> ColumnFamily cf = TreeMapBackedSortedColumns . factory . create ( createMetadata ( ) ) ; <nl> for ( int i = 0 ; i < nbCol ; i + + ) <nl> - cf . addColumn ( bb ( i ) , bb ( i ) , 0 ) ; <nl> + cf . addColumn ( CellNames . simpleDense ( bb ( i ) ) , bb ( i ) , 0 ) ; <nl> return cf ; <nl> } <nl> <nl> private CFMetaData createMetadata ( ) <nl> { <nl> - return new CFMetaData ( " ks " , " cf " , ColumnFamilyType . Standard , Int32Type . instance ) ; <nl> + return new CFMetaData ( " ks " , " cf " , ColumnFamilyType . Standard , CellNames . fromAbstractType ( Int32Type . instance , false ) ) ; <nl> } <nl> <nl> private static ByteBuffer bb ( int i )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> index c7b160d . . 425ea33 100644 <nl> - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> @ @ - 318 , 6 + 318 , 14 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean <nl> page : <nl> for ( IColumn hint : hintsPage . getSortedColumns ( ) ) <nl> { <nl> + / / Skip tombstones : <nl> + / / if we iterate quickly enough , it ' s possible that we could request a new page in the same millisecond <nl> + / / in which the local deletion timestamp was generated on the last column in the old page , in which <nl> + / / case the hint will have no columns ( since it ' s deleted ) but will still be included in the resultset <nl> + / / since ( even with gcgs = 0 ) it ' s still a " relevant " tombstone . <nl> + if ( ! hint . isLive ( ) ) <nl> + continue ; <nl> + <nl> startColumn = hint . name ( ) ; <nl> for ( IColumn subColumn : hint . getSubColumns ( ) ) <nl> { <nl> @ @ - 330 , 14 + 338 , 6 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean <nl> } <nl> } <nl> <nl> - / / Skip tombstones : <nl> - / / if we iterate quickly enough , it ' s possible that we could request a new page in the same millisecond <nl> - / / in which the local deletion timestamp was generated on the last column in the old page , in which <nl> - / / case the hint will have no columns ( since it ' s deleted ) but will still be included in the resultset <nl> - / / since ( even with gcgs = 0 ) it ' s still a " relevant " tombstone . <nl> - if ( ! hint . isLive ( ) ) <nl> - continue ; <nl> - <nl> IColumn versionColumn = hint . getSubColumn ( ByteBufferUtil . bytes ( " version " ) ) ; <nl> IColumn tableColumn = hint . getSubColumn ( ByteBufferUtil . bytes ( " table " ) ) ; <nl> IColumn keyColumn = hint . getSubColumn ( ByteBufferUtil . bytes ( " key " ) ) ;

TEST DIFF:
diff - - git a / test / unit / org / apache / cassandra / service / pager / AbstractQueryPagerTest . java b / test / unit / org / apache / cassandra / service / pager / AbstractQueryPagerTest . java 
 index 5467ec0 . . 9df9f6d 100644 
 - - - a / test / unit / org / apache / cassandra / service / pager / AbstractQueryPagerTest . java 
 + + + b / test / unit / org / apache / cassandra / service / pager / AbstractQueryPagerTest . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import static org . junit . Assert . * ; 
 import org . apache . cassandra . Util ; 
 import org . apache . cassandra . config . * ; 
 import org . apache . cassandra . db . * ; 
 + import org . apache . cassandra . db . composites . CellNames ; 
 import org . apache . cassandra . db . filter . ColumnCounter ; 
 import org . apache . cassandra . db . marshal . Int32Type ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 @ @ - 108 , 8 + 109 , 8 @ @ public class AbstractQueryPagerTest 
 assertEquals ( values . length , row . cf . getColumnCount ( ) ) ; 
 
 int i = 0 ; 
 - for ( Column c : row . cf ) 
 - assertEquals ( values [ i + + ] , i ( c . name ( ) ) ) ; 
 + for ( Cell c : row . cf ) 
 + assertEquals ( values [ i + + ] , i ( c . name ( ) . toByteBuffer ( ) ) ) ; 
 } 
 
 private Row createRow ( String name , int nbCol ) 
 @ @ - 121 , 13 + 122 , 13 @ @ public class AbstractQueryPagerTest 
 { 
 ColumnFamily cf = TreeMapBackedSortedColumns . factory . create ( createMetadata ( ) ) ; 
 for ( int i = 0 ; i < nbCol ; i + + ) 
 - cf . addColumn ( bb ( i ) , bb ( i ) , 0 ) ; 
 + cf . addColumn ( CellNames . simpleDense ( bb ( i ) ) , bb ( i ) , 0 ) ; 
 return cf ; 
 } 
 
 private CFMetaData createMetadata ( ) 
 { 
 - return new CFMetaData ( " ks " , " cf " , ColumnFamilyType . Standard , Int32Type . instance ) ; 
 + return new CFMetaData ( " ks " , " cf " , ColumnFamilyType . Standard , CellNames . fromAbstractType ( Int32Type . instance , false ) ) ; 
 } 
 
 private static ByteBuffer bb ( int i )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 index c7b160d . . 425ea33 100644 
 - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 @ @ - 318 , 6 + 318 , 14 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean 
 page : 
 for ( IColumn hint : hintsPage . getSortedColumns ( ) ) 
 { 
 + / / Skip tombstones : 
 + / / if we iterate quickly enough , it ' s possible that we could request a new page in the same millisecond 
 + / / in which the local deletion timestamp was generated on the last column in the old page , in which 
 + / / case the hint will have no columns ( since it ' s deleted ) but will still be included in the resultset 
 + / / since ( even with gcgs = 0 ) it ' s still a " relevant " tombstone . 
 + if ( ! hint . isLive ( ) ) 
 + continue ; 
 + 
 startColumn = hint . name ( ) ; 
 for ( IColumn subColumn : hint . getSubColumns ( ) ) 
 { 
 @ @ - 330 , 14 + 338 , 6 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean 
 } 
 } 
 
 - / / Skip tombstones : 
 - / / if we iterate quickly enough , it ' s possible that we could request a new page in the same millisecond 
 - / / in which the local deletion timestamp was generated on the last column in the old page , in which 
 - / / case the hint will have no columns ( since it ' s deleted ) but will still be included in the resultset 
 - / / since ( even with gcgs = 0 ) it ' s still a " relevant " tombstone . 
 - if ( ! hint . isLive ( ) ) 
 - continue ; 
 - 
 IColumn versionColumn = hint . getSubColumn ( ByteBufferUtil . bytes ( " version " ) ) ; 
 IColumn tableColumn = hint . getSubColumn ( ByteBufferUtil . bytes ( " table " ) ) ; 
 IColumn keyColumn = hint . getSubColumn ( ByteBufferUtil . bytes ( " key " ) ) ;
