BLEU SCORE: 0.04767707020457096

TEST MSG: Reenable upgrade tests and make them runnable via CircleCI
GENERATED MSG: Use new docker image for CircleCI builds

TEST DIFF (one line): diff - - git a / . circleci / config . yml b / . circleci / config . yml <nl> index c389cbc . . 78dae4c 100644 <nl> - - - a / . circleci / config . yml <nl> + + + b / . circleci / config . yml <nl> @ @ - 56 , 6 + 56 , 12 @ @ with _ dtest _ jobs _ only : & with _ dtest _ jobs _ only <nl> - dtests - no - vnodes : <nl> requires : <nl> - build <nl> + upgrade _ job _ only : & upgrade _ job _ only <nl> + jobs : <nl> + - build <nl> + - upgrade _ tests : <nl> + requires : <nl> + - build <nl> # Set env _ settings , env _ vars , and workflows / build _ and _ run _ tests based on environment <nl> env _ settings : & env _ settings <nl> < < : * default _ env _ settings <nl> @ @ - 68 , 6 + 74 , 7 @ @ workflows : <nl> build _ and _ run _ tests : * default _ jobs <nl> # build _ and _ run _ tests : * with _ dtest _ jobs _ only <nl> # build _ and _ run _ tests : * with _ dtest _ jobs <nl> + # build _ and _ run _ tests : * upgrade _ job _ only <nl> docker _ image : & docker _ image spod / cassandra - testing - ubuntu18 - java11 <nl> version : 2 <nl> jobs : <nl> @ @ - 227 , 7 + 234 , 7 @ @ jobs : <nl> export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> <nl> echo " * * * Collected DTests ( with vnodes ) * * * " <nl> - set - eo pipefail & & . / run _ dtests . py - - use - vnodes - - dtest - print - tests - only - - skip - resource - intensive - tests - - dtest - print - tests - output = / tmp / all _ dtest _ tests _ with _ vnodes <nl> + set - eo pipefail & & . / run _ dtests . py - - use - vnodes - - dtest - print - tests - only - - skip - resource - intensive - tests - - dtest - print - tests - output = / tmp / all _ dtest _ tests _ with _ vnodes - - cassandra - dir = " . . / cassandra " <nl> set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = classname / tmp / all _ dtest _ tests _ with _ vnodes > / tmp / split _ dtest _ tests _ with _ vnodes . txt <nl> cat / tmp / split _ dtest _ tests _ with _ vnodes . txt | tr ' \ n ' ' ' > / tmp / split _ dtest _ tests _ with _ vnodes _ final . txt <nl> # cat / tmp / split _ dtest _ tests _ with _ vnodes . txt <nl> @ @ - 305 , 7 + 312 , 7 @ @ jobs : <nl> export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> <nl> echo " * * * Collected DTests ( without vnodes ) * * * " <nl> - . / run _ dtests . py - - dtest - print - tests - only - - skip - resource - intensive - tests - - dtest - print - tests - output = / tmp / all _ dtest _ tests _ without _ vnodes <nl> + . / run _ dtests . py - - dtest - print - tests - only - - skip - resource - intensive - tests - - dtest - print - tests - output = / tmp / all _ dtest _ tests _ without _ vnodes - - cassandra - dir = " . . / cassandra " <nl> set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = classname / tmp / all _ dtest _ tests _ without _ vnodes > / tmp / split _ dtest _ tests _ without _ vnodes . txt <nl> cat / tmp / split _ dtest _ tests _ without _ vnodes . txt | tr ' \ n ' ' ' > / tmp / split _ dtest _ tests _ without _ vnodes _ final . txt <nl> # cat / tmp / split _ dtest _ tests _ without _ vnodes . txt <nl> @ @ - 337 , 3 + 344 , 80 @ @ jobs : <nl> - store _ artifacts : <nl> path : ~ / cassandra - dtest / logs <nl> destination : dtest _ no _ vnodes _ logs <nl> + upgrade _ tests : <nl> + < < : * env _ settings <nl> + working _ directory : ~ / <nl> + shell : / bin / bash - eo pipefail - l <nl> + docker : <nl> + - image : * docker _ image <nl> + environment : <nl> + < < : * env _ vars <nl> + steps : <nl> + - attach _ workspace : <nl> + at : / home / cassandra <nl> + - run : <nl> + name : Clone Cassandra dtest Repository ( via git ) <nl> + command : | <nl> + export LANG = en _ US . UTF - 8 <nl> + git clone - - single - branch - - branch master - - depth 1 git : / / github . com / apache / cassandra - dtest . git ~ / cassandra - dtest <nl> + - run : <nl> + name : Configure virtualenv and python Dependencies <nl> + command : | <nl> + # note , this should be super quick as all dependencies should be pre - installed in the docker image <nl> + # if additional dependencies were added to requirmeents . txt and the docker image hasn ' t been updated <nl> + # we ' d have to install it here at runtime - - which will make things slow , so do yourself a favor and <nl> + # rebuild the docker image ! ( it automatically pulls the latest requirements . txt on build ) <nl> + export LANG = en _ US . UTF - 8 <nl> + source ~ / env / bin / activate <nl> + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> + export CASS _ DRIVER _ NO _ EXTENSIONS = true <nl> + export CASS _ DRIVER _ NO _ CYTHON = true <nl> + pip3 install - - upgrade - r ~ / cassandra - dtest / requirements . txt <nl> + pip3 freeze <nl> + - run : <nl> + name : Determine Tests to Run <nl> + no _ output _ timeout : 5m <nl> + command : | <nl> + # reminder : this code ( along with all the steps ) is independently executed on every circle container <nl> + # so the goal here is to get the circleci script to return the tests * this * container will run <nl> + # which we do via the ` circleci ` cli tool . <nl> + <nl> + export LANG = en _ US . UTF - 8 <nl> + export RUN _ STATIC _ UPGRADE _ MATRIX = true <nl> + cd cassandra - dtest <nl> + source ~ / env / bin / activate <nl> + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> + <nl> + echo " * * * Collected upgrade DTests ( without vnodes ) * * * " <nl> + . / run _ dtests . py - - dtest - print - tests - only - - dtest - print - tests - output = / tmp / all _ dtest _ tests _ without _ vnodes - - cassandra - dir = " . . / cassandra " - - execute - upgrade - tests <nl> + cat / tmp / all _ dtest _ tests _ without _ vnodes | grep ' ^ upgrade _ tests ' > / tmp / all _ upgrade _ dtest _ tests _ without _ vnodes <nl> + set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = classname / tmp / all _ upgrade _ dtest _ tests _ without _ vnodes > / tmp / split _ upgrade _ dtest _ tests _ without _ vnodes . txt <nl> + cat / tmp / split _ upgrade _ dtest _ tests _ without _ vnodes . txt | tr ' \ n ' ' ' > / tmp / split _ upgrade _ dtest _ tests _ without _ vnodes _ final . txt <nl> + cat / tmp / split _ upgrade _ dtest _ tests _ without _ vnodes _ final . txt <nl> + - run : <nl> + name : Run upgrade dtests ( without vnodes ) <nl> + no _ output _ timeout : 15m <nl> + command : | <nl> + # for now require at least 50 circleci containers to run the dtests ( with less resources the tests won ' t produce reliable results or will fail to complete ) <nl> + if [ $ CIRCLE _ NODE _ TOTAL - gt 0 ] ; then <nl> + source ~ / env / bin / activate <nl> + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> + export RUN _ STATIC _ UPGRADE _ MATRIX = true <nl> + cd ~ / cassandra - dtest <nl> + mkdir - p / tmp / dtest <nl> + <nl> + mkdir - p / tmp / results / dtests <nl> + # we need the " set - o pipefail " here so that the exit code that circleci will actually use is from pytest and not the exit code from tee <nl> + export SPLIT _ TESTS = ` cat / tmp / split _ upgrade _ dtest _ tests _ without _ vnodes _ final . txt ` <nl> + # Skip all syncing to disk to avoid performance issues in flaky CI environments <nl> + export CASSANDRA _ SKIP _ SYNC = true <nl> + set - o pipefail & & cd ~ / cassandra - dtest & & pytest - - log - level = " INFO " - - junit - xml = / tmp / results / dtests / pytest _ result _ novnodes . xml - s - - cassandra - dir = / home / cassandra / cassandra - - execute - upgrade - tests - - keep - test - dir - - log - cli - level = debug $ SPLIT _ TESTS 2 > & 1 | tee / tmp / dtest / stdout - novnodes . txt <nl> + fi <nl> + - store _ test _ results : <nl> + path : / tmp / results <nl> + - store _ artifacts : <nl> + path : / tmp / dtest <nl> + destination : dtest _ upgrade _ no _ vnodes <nl> + - store _ artifacts : <nl> + path : ~ / cassandra - dtest / logs <nl> + destination : dtest _ upgrade _ no _ vnodes _ logs
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / . circleci / config . yml b / . circleci / config . yml 
 index c389cbc . . 78dae4c 100644 
 - - - a / . circleci / config . yml 
 + + + b / . circleci / config . yml 
 @ @ - 56 , 6 + 56 , 12 @ @ with _ dtest _ jobs _ only : & with _ dtest _ jobs _ only 
 - dtests - no - vnodes : 
 requires : 
 - build 
 + upgrade _ job _ only : & upgrade _ job _ only 
 + jobs : 
 + - build 
 + - upgrade _ tests : 
 + requires : 
 + - build 
 # Set env _ settings , env _ vars , and workflows / build _ and _ run _ tests based on environment 
 env _ settings : & env _ settings 
 < < : * default _ env _ settings 
 @ @ - 68 , 6 + 74 , 7 @ @ workflows : 
 build _ and _ run _ tests : * default _ jobs 
 # build _ and _ run _ tests : * with _ dtest _ jobs _ only 
 # build _ and _ run _ tests : * with _ dtest _ jobs 
 + # build _ and _ run _ tests : * upgrade _ job _ only 
 docker _ image : & docker _ image spod / cassandra - testing - ubuntu18 - java11 
 version : 2 
 jobs : 
 @ @ - 227 , 7 + 234 , 7 @ @ jobs : 
 export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 
 echo " * * * Collected DTests ( with vnodes ) * * * " 
 - set - eo pipefail & & . / run _ dtests . py - - use - vnodes - - dtest - print - tests - only - - skip - resource - intensive - tests - - dtest - print - tests - output = / tmp / all _ dtest _ tests _ with _ vnodes 
 + set - eo pipefail & & . / run _ dtests . py - - use - vnodes - - dtest - print - tests - only - - skip - resource - intensive - tests - - dtest - print - tests - output = / tmp / all _ dtest _ tests _ with _ vnodes - - cassandra - dir = " . . / cassandra " 
 set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = classname / tmp / all _ dtest _ tests _ with _ vnodes > / tmp / split _ dtest _ tests _ with _ vnodes . txt 
 cat / tmp / split _ dtest _ tests _ with _ vnodes . txt | tr ' \ n ' ' ' > / tmp / split _ dtest _ tests _ with _ vnodes _ final . txt 
 # cat / tmp / split _ dtest _ tests _ with _ vnodes . txt 
 @ @ - 305 , 7 + 312 , 7 @ @ jobs : 
 export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 
 echo " * * * Collected DTests ( without vnodes ) * * * " 
 - . / run _ dtests . py - - dtest - print - tests - only - - skip - resource - intensive - tests - - dtest - print - tests - output = / tmp / all _ dtest _ tests _ without _ vnodes 
 + . / run _ dtests . py - - dtest - print - tests - only - - skip - resource - intensive - tests - - dtest - print - tests - output = / tmp / all _ dtest _ tests _ without _ vnodes - - cassandra - dir = " . . / cassandra " 
 set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = classname / tmp / all _ dtest _ tests _ without _ vnodes > / tmp / split _ dtest _ tests _ without _ vnodes . txt 
 cat / tmp / split _ dtest _ tests _ without _ vnodes . txt | tr ' \ n ' ' ' > / tmp / split _ dtest _ tests _ without _ vnodes _ final . txt 
 # cat / tmp / split _ dtest _ tests _ without _ vnodes . txt 
 @ @ - 337 , 3 + 344 , 80 @ @ jobs : 
 - store _ artifacts : 
 path : ~ / cassandra - dtest / logs 
 destination : dtest _ no _ vnodes _ logs 
 + upgrade _ tests : 
 + < < : * env _ settings 
 + working _ directory : ~ / 
 + shell : / bin / bash - eo pipefail - l 
 + docker : 
 + - image : * docker _ image 
 + environment : 
 + < < : * env _ vars 
 + steps : 
 + - attach _ workspace : 
 + at : / home / cassandra 
 + - run : 
 + name : Clone Cassandra dtest Repository ( via git ) 
 + command : | 
 + export LANG = en _ US . UTF - 8 
 + git clone - - single - branch - - branch master - - depth 1 git : / / github . com / apache / cassandra - dtest . git ~ / cassandra - dtest 
 + - run : 
 + name : Configure virtualenv and python Dependencies 
 + command : | 
 + # note , this should be super quick as all dependencies should be pre - installed in the docker image 
 + # if additional dependencies were added to requirmeents . txt and the docker image hasn ' t been updated 
 + # we ' d have to install it here at runtime - - which will make things slow , so do yourself a favor and 
 + # rebuild the docker image ! ( it automatically pulls the latest requirements . txt on build ) 
 + export LANG = en _ US . UTF - 8 
 + source ~ / env / bin / activate 
 + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 + export CASS _ DRIVER _ NO _ EXTENSIONS = true 
 + export CASS _ DRIVER _ NO _ CYTHON = true 
 + pip3 install - - upgrade - r ~ / cassandra - dtest / requirements . txt 
 + pip3 freeze 
 + - run : 
 + name : Determine Tests to Run 
 + no _ output _ timeout : 5m 
 + command : | 
 + # reminder : this code ( along with all the steps ) is independently executed on every circle container 
 + # so the goal here is to get the circleci script to return the tests * this * container will run 
 + # which we do via the ` circleci ` cli tool . 
 + 
 + export LANG = en _ US . UTF - 8 
 + export RUN _ STATIC _ UPGRADE _ MATRIX = true 
 + cd cassandra - dtest 
 + source ~ / env / bin / activate 
 + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 + 
 + echo " * * * Collected upgrade DTests ( without vnodes ) * * * " 
 + . / run _ dtests . py - - dtest - print - tests - only - - dtest - print - tests - output = / tmp / all _ dtest _ tests _ without _ vnodes - - cassandra - dir = " . . / cassandra " - - execute - upgrade - tests 
 + cat / tmp / all _ dtest _ tests _ without _ vnodes | grep ' ^ upgrade _ tests ' > / tmp / all _ upgrade _ dtest _ tests _ without _ vnodes 
 + set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = classname / tmp / all _ upgrade _ dtest _ tests _ without _ vnodes > / tmp / split _ upgrade _ dtest _ tests _ without _ vnodes . txt 
 + cat / tmp / split _ upgrade _ dtest _ tests _ without _ vnodes . txt | tr ' \ n ' ' ' > / tmp / split _ upgrade _ dtest _ tests _ without _ vnodes _ final . txt 
 + cat / tmp / split _ upgrade _ dtest _ tests _ without _ vnodes _ final . txt 
 + - run : 
 + name : Run upgrade dtests ( without vnodes ) 
 + no _ output _ timeout : 15m 
 + command : | 
 + # for now require at least 50 circleci containers to run the dtests ( with less resources the tests won ' t produce reliable results or will fail to complete ) 
 + if [ $ CIRCLE _ NODE _ TOTAL - gt 0 ] ; then 
 + source ~ / env / bin / activate 
 + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 + export RUN _ STATIC _ UPGRADE _ MATRIX = true 
 + cd ~ / cassandra - dtest 
 + mkdir - p / tmp / dtest 
 + 
 + mkdir - p / tmp / results / dtests 
 + # we need the " set - o pipefail " here so that the exit code that circleci will actually use is from pytest and not the exit code from tee 
 + export SPLIT _ TESTS = ` cat / tmp / split _ upgrade _ dtest _ tests _ without _ vnodes _ final . txt ` 
 + # Skip all syncing to disk to avoid performance issues in flaky CI environments 
 + export CASSANDRA _ SKIP _ SYNC = true 
 + set - o pipefail & & cd ~ / cassandra - dtest & & pytest - - log - level = " INFO " - - junit - xml = / tmp / results / dtests / pytest _ result _ novnodes . xml - s - - cassandra - dir = / home / cassandra / cassandra - - execute - upgrade - tests - - keep - test - dir - - log - cli - level = debug $ SPLIT _ TESTS 2 > & 1 | tee / tmp / dtest / stdout - novnodes . txt 
 + fi 
 + - store _ test _ results : 
 + path : / tmp / results 
 + - store _ artifacts : 
 + path : / tmp / dtest 
 + destination : dtest _ upgrade _ no _ vnodes 
 + - store _ artifacts : 
 + path : ~ / cassandra - dtest / logs 
 + destination : dtest _ upgrade _ no _ vnodes _ logs

NEAREST DIFF:
ELIMINATEDSENTENCE
