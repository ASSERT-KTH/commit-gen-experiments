BLEU SCORE: 1.0

TEST MSG: Allow triggers ' names to be quoted identifiers
GENERATED MSG: Allow triggers ' names to be quoted identifiers

TEST DIFF (one line): diff - - git a / NEWS . txt b / NEWS . txt <nl> index 9b521e4 . . db34fd3 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 47 , 6 + 47 , 9 @ @ New features <nl> longer a responsible for that range of keys . <nl> If you want the old behavior ( due to a lost node perhaps ) <nl> you can set the following property ( - Dcassandra . consistent . rangemovement = false ) <nl> + - It is now possible to use quoted identifiers in triggers ' names . <nl> + WARNING : if you previously used triggers with capital letters in their <nl> + names , then you must quote them from now on . <nl> <nl> Upgrading <nl> - - - - - - - - - <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / Cql . g b / src / java / org / apache / cassandra / cql3 / Cql . g <nl> index 93df1b4 . . 6bfda15 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / Cql . g <nl> + + + b / src / java / org / apache / cassandra / cql3 / Cql . g <nl> @ @ - 587 , 9 + 587 , 9 @ @ createTriggerStatement returns [ CreateTriggerStatement expr ] <nl> @ init { <nl> boolean ifNotExists = false ; <nl> } <nl> - : K _ CREATE K _ TRIGGER ( K _ IF K _ NOT K _ EXISTS { ifNotExists = true ; } ) ? ( name = IDENT ) <nl> + : K _ CREATE K _ TRIGGER ( K _ IF K _ NOT K _ EXISTS { ifNotExists = true ; } ) ? ( name = cident ) <nl> K _ ON cf = columnFamilyName K _ USING cls = STRING _ LITERAL <nl> - { $ expr = new CreateTriggerStatement ( cf , $ name . text , $ cls . text , ifNotExists ) ; } <nl> + { $ expr = new CreateTriggerStatement ( cf , name . toString ( ) , $ cls . text , ifNotExists ) ; } <nl> ; <nl> <nl> / * * <nl> @ @ - 597 , 8 + 597 , 8 @ @ createTriggerStatement returns [ CreateTriggerStatement expr ] <nl> * / <nl> dropTriggerStatement returns [ DropTriggerStatement expr ] <nl> @ init { boolean ifExists = false ; } <nl> - : K _ DROP K _ TRIGGER ( K _ IF K _ EXISTS { ifExists = true ; } ) ? ( name = IDENT ) K _ ON cf = columnFamilyName <nl> - { $ expr = new DropTriggerStatement ( cf , $ name . text , ifExists ) ; } <nl> + : K _ DROP K _ TRIGGER ( K _ IF K _ EXISTS { ifExists = true ; } ) ? ( name = cident ) K _ ON cf = columnFamilyName <nl> + { $ expr = new DropTriggerStatement ( cf , name . toString ( ) , ifExists ) ; } <nl> ; <nl> <nl> / * * <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / CreateTriggerStatementTest . java b / test / unit / org / apache / cassandra / cql3 / CreateTriggerStatementTest . java <nl> index 39703cc . . 6557c16 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / CreateTriggerStatementTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / CreateTriggerStatementTest . java <nl> @ @ - 43 , 6 + 43 , 8 @ @ public class CreateTriggerStatementTest extends CQLTester <nl> execute ( " CREATE TRIGGER trigger _ 2 ON % s USING ' " + TestTrigger . class . getName ( ) + " ' " ) ; <nl> assertTriggerExists ( " trigger _ 2 " , TestTrigger . class ) ; <nl> assertInvalid ( " CREATE TRIGGER trigger _ 1 ON % s USING ' " + TestTrigger . class . getName ( ) + " ' " ) ; <nl> + execute ( " CREATE TRIGGER \ " Trigger 3 \ " ON % s USING ' " + TestTrigger . class . getName ( ) + " ' " ) ; <nl> + assertTriggerExists ( " Trigger 3 " , TestTrigger . class ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 72 , 6 + 74 , 12 @ @ public class CreateTriggerStatementTest extends CQLTester <nl> assertTriggerExists ( " trigger _ 1 " , TestTrigger . class ) ; <nl> <nl> assertInvalid ( " DROP TRIGGER trigger _ 2 ON % s " ) ; <nl> + <nl> + execute ( " CREATE TRIGGER \ " Trigger 3 \ " ON % s USING ' " + TestTrigger . class . getName ( ) + " ' " ) ; <nl> + assertTriggerExists ( " Trigger 3 " , TestTrigger . class ) ; <nl> + <nl> + execute ( " DROP TRIGGER \ " Trigger 3 \ " ON % s " ) ; <nl> + assertTriggerDoesNotExists ( " Trigger 3 " , TestTrigger . class ) ; <nl> } <nl> <nl> @ Test
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / NEWS . txt b / NEWS . txt 
 index 9b521e4 . . db34fd3 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 47 , 6 + 47 , 9 @ @ New features 
 longer a responsible for that range of keys . 
 If you want the old behavior ( due to a lost node perhaps ) 
 you can set the following property ( - Dcassandra . consistent . rangemovement = false ) 
 + - It is now possible to use quoted identifiers in triggers ' names . 
 + WARNING : if you previously used triggers with capital letters in their 
 + names , then you must quote them from now on . 
 
 Upgrading 
 - - - - - - - - - 
 diff - - git a / src / java / org / apache / cassandra / cql3 / Cql . g b / src / java / org / apache / cassandra / cql3 / Cql . g 
 index 93df1b4 . . 6bfda15 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / Cql . g 
 + + + b / src / java / org / apache / cassandra / cql3 / Cql . g 
 @ @ - 587 , 9 + 587 , 9 @ @ createTriggerStatement returns [ CreateTriggerStatement expr ] 
 @ init { 
 boolean ifNotExists = false ; 
 } 
 - : K _ CREATE K _ TRIGGER ( K _ IF K _ NOT K _ EXISTS { ifNotExists = true ; } ) ? ( name = IDENT ) 
 + : K _ CREATE K _ TRIGGER ( K _ IF K _ NOT K _ EXISTS { ifNotExists = true ; } ) ? ( name = cident ) 
 K _ ON cf = columnFamilyName K _ USING cls = STRING _ LITERAL 
 - { $ expr = new CreateTriggerStatement ( cf , $ name . text , $ cls . text , ifNotExists ) ; } 
 + { $ expr = new CreateTriggerStatement ( cf , name . toString ( ) , $ cls . text , ifNotExists ) ; } 
 ; 
 
 / * * 
 @ @ - 597 , 8 + 597 , 8 @ @ createTriggerStatement returns [ CreateTriggerStatement expr ] 
 * / 
 dropTriggerStatement returns [ DropTriggerStatement expr ] 
 @ init { boolean ifExists = false ; } 
 - : K _ DROP K _ TRIGGER ( K _ IF K _ EXISTS { ifExists = true ; } ) ? ( name = IDENT ) K _ ON cf = columnFamilyName 
 - { $ expr = new DropTriggerStatement ( cf , $ name . text , ifExists ) ; } 
 + : K _ DROP K _ TRIGGER ( K _ IF K _ EXISTS { ifExists = true ; } ) ? ( name = cident ) K _ ON cf = columnFamilyName 
 + { $ expr = new DropTriggerStatement ( cf , name . toString ( ) , ifExists ) ; } 
 ; 
 
 / * * 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / CreateTriggerStatementTest . java b / test / unit / org / apache / cassandra / cql3 / CreateTriggerStatementTest . java 
 index 39703cc . . 6557c16 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / CreateTriggerStatementTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / CreateTriggerStatementTest . java 
 @ @ - 43 , 6 + 43 , 8 @ @ public class CreateTriggerStatementTest extends CQLTester 
 execute ( " CREATE TRIGGER trigger _ 2 ON % s USING ' " + TestTrigger . class . getName ( ) + " ' " ) ; 
 assertTriggerExists ( " trigger _ 2 " , TestTrigger . class ) ; 
 assertInvalid ( " CREATE TRIGGER trigger _ 1 ON % s USING ' " + TestTrigger . class . getName ( ) + " ' " ) ; 
 + execute ( " CREATE TRIGGER \ " Trigger 3 \ " ON % s USING ' " + TestTrigger . class . getName ( ) + " ' " ) ; 
 + assertTriggerExists ( " Trigger 3 " , TestTrigger . class ) ; 
 } 
 
 @ Test 
 @ @ - 72 , 6 + 74 , 12 @ @ public class CreateTriggerStatementTest extends CQLTester 
 assertTriggerExists ( " trigger _ 1 " , TestTrigger . class ) ; 
 
 assertInvalid ( " DROP TRIGGER trigger _ 2 ON % s " ) ; 
 + 
 + execute ( " CREATE TRIGGER \ " Trigger 3 \ " ON % s USING ' " + TestTrigger . class . getName ( ) + " ' " ) ; 
 + assertTriggerExists ( " Trigger 3 " , TestTrigger . class ) ; 
 + 
 + execute ( " DROP TRIGGER \ " Trigger 3 \ " ON % s " ) ; 
 + assertTriggerDoesNotExists ( " Trigger 3 " , TestTrigger . class ) ; 
 } 
 
 @ Test

NEAREST DIFF:
ELIMINATEDSENTENCE
