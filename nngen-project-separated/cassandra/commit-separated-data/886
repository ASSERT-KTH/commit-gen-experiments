BLEU SCORE: 0.01047173488538854

TEST MSG: Disallow creating view with a static column
GENERATED MSG: Allow " IS NOT NULL " to be excluded for non - composite partition keys

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 95db7bc . . f947568 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 6 <nl> + * Disallow creating view with a static column ( CASSANDRA - 11602 ) <nl> * Reduce the amount of object allocations caused by the getFunctions methods ( CASSANDRA - 11593 ) <nl> * Potential error replaying commitlog with smallint / tinyint / date / time types ( CASSANDRA - 11618 ) <nl> * Fix queries with filtering on counter columns ( CASSANDRA - 11629 ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java b / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java <nl> index 5af4887 . . 45231b7 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java <nl> @ @ - 168 , 10 + 168 , 7 @ @ public class CreateViewStatement extends SchemaAlteringStatement <nl> if ( cdef = = null ) <nl> throw new InvalidRequestException ( " Unknown column name detected in CREATE MATERIALIZED VIEW statement : " + identifier ) ; <nl> <nl> - if ( cdef . isStatic ( ) ) <nl> - ClientWarn . instance . warn ( String . format ( " Unable to include static column ' % s ' in Materialized View SELECT statement " , identifier ) ) ; <nl> - else <nl> - included . add ( identifier ) ; <nl> + included . add ( identifier ) ; <nl> } <nl> <nl> Set < ColumnIdentifier . Raw > targetPrimaryKeys = new HashSet < > ( ) ; <nl> @ @ - 246 , 10 + 243 , 14 @ @ public class CreateViewStatement extends SchemaAlteringStatement <nl> for ( ColumnDefinition def : cfm . allColumns ( ) ) <nl> { <nl> ColumnIdentifier identifier = def . name ; <nl> + boolean includeDef = included . isEmpty ( ) | | included . contains ( identifier ) ; <nl> + <nl> + if ( includeDef & & def . isStatic ( ) ) <nl> + { <nl> + throw new InvalidRequestException ( String . format ( " Unable to include static column ' % s ' which would be included by Materialized View SELECT * statement " , identifier ) ) ; <nl> + } <nl> <nl> - if ( ( included . isEmpty ( ) | | included . contains ( identifier ) ) <nl> - & & ! targetClusteringColumns . contains ( identifier ) & & ! targetPartitionKeys . contains ( identifier ) <nl> - & & ! def . isStatic ( ) ) <nl> + if ( includeDef & & ! targetClusteringColumns . contains ( identifier ) & & ! targetPartitionKeys . contains ( identifier ) ) <nl> { <nl> includedColumns . add ( identifier ) ; <nl> } <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / ViewTest . java b / test / unit / org / apache / cassandra / cql3 / ViewTest . java <nl> index 830f37f . . ac4becb 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / ViewTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / ViewTest . java <nl> @ @ - 207 , 13 + 207 , 31 @ @ public class ViewTest extends CQLTester <nl> try <nl> { <nl> createView ( " mv _ static " , " CREATE MATERIALIZED VIEW % % s AS SELECT * FROM % s WHERE sval IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( sval , k , c ) " ) ; <nl> - Assert . fail ( " MV on static should fail " ) ; <nl> + Assert . fail ( " Use of static column in a MV primary key should fail " ) ; <nl> } <nl> catch ( InvalidQueryException e ) <nl> { <nl> } <nl> <nl> - createView ( " mv _ static " , " CREATE MATERIALIZED VIEW % s AS SELECT * FROM % % s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( val , k , c ) " ) ; <nl> + try <nl> + { <nl> + createView ( " mv _ static " , " CREATE MATERIALIZED VIEW % % s AS SELECT val , sval FROM % s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( val , k , c ) " ) ; <nl> + Assert . fail ( " Explicit select of static column in MV should fail " ) ; <nl> + } <nl> + catch ( InvalidQueryException e ) <nl> + { <nl> + } <nl> + <nl> + try <nl> + { <nl> + createView ( " mv _ static " , " CREATE MATERIALIZED VIEW % s AS SELECT * FROM % % s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( val , k , c ) " ) ; <nl> + Assert . fail ( " Implicit select of static column in MV should fail " ) ; <nl> + } <nl> + catch ( InvalidQueryException e ) <nl> + { <nl> + } <nl> + <nl> + createView ( " mv _ static " , " CREATE MATERIALIZED VIEW % s AS SELECT val , k , c FROM % % s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( val , k , c ) " ) ; <nl> <nl> for ( int i = 0 ; i < 100 ; i + + ) <nl> updateView ( " INSERT into % s ( k , c , sval , val ) VALUES ( ? , ? , ? , ? ) " , 0 , i % 2 , " bar " + i , " baz " ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 95db7bc . . f947568 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 6 
 + * Disallow creating view with a static column ( CASSANDRA - 11602 ) 
 * Reduce the amount of object allocations caused by the getFunctions methods ( CASSANDRA - 11593 ) 
 * Potential error replaying commitlog with smallint / tinyint / date / time types ( CASSANDRA - 11618 ) 
 * Fix queries with filtering on counter columns ( CASSANDRA - 11629 ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java b / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java 
 index 5af4887 . . 45231b7 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / CreateViewStatement . java 
 @ @ - 168 , 10 + 168 , 7 @ @ public class CreateViewStatement extends SchemaAlteringStatement 
 if ( cdef = = null ) 
 throw new InvalidRequestException ( " Unknown column name detected in CREATE MATERIALIZED VIEW statement : " + identifier ) ; 
 
 - if ( cdef . isStatic ( ) ) 
 - ClientWarn . instance . warn ( String . format ( " Unable to include static column ' % s ' in Materialized View SELECT statement " , identifier ) ) ; 
 - else 
 - included . add ( identifier ) ; 
 + included . add ( identifier ) ; 
 } 
 
 Set < ColumnIdentifier . Raw > targetPrimaryKeys = new HashSet < > ( ) ; 
 @ @ - 246 , 10 + 243 , 14 @ @ public class CreateViewStatement extends SchemaAlteringStatement 
 for ( ColumnDefinition def : cfm . allColumns ( ) ) 
 { 
 ColumnIdentifier identifier = def . name ; 
 + boolean includeDef = included . isEmpty ( ) | | included . contains ( identifier ) ; 
 + 
 + if ( includeDef & & def . isStatic ( ) ) 
 + { 
 + throw new InvalidRequestException ( String . format ( " Unable to include static column ' % s ' which would be included by Materialized View SELECT * statement " , identifier ) ) ; 
 + } 
 
 - if ( ( included . isEmpty ( ) | | included . contains ( identifier ) ) 
 - & & ! targetClusteringColumns . contains ( identifier ) & & ! targetPartitionKeys . contains ( identifier ) 
 - & & ! def . isStatic ( ) ) 
 + if ( includeDef & & ! targetClusteringColumns . contains ( identifier ) & & ! targetPartitionKeys . contains ( identifier ) ) 
 { 
 includedColumns . add ( identifier ) ; 
 } 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / ViewTest . java b / test / unit / org / apache / cassandra / cql3 / ViewTest . java 
 index 830f37f . . ac4becb 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / ViewTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / ViewTest . java 
 @ @ - 207 , 13 + 207 , 31 @ @ public class ViewTest extends CQLTester 
 try 
 { 
 createView ( " mv _ static " , " CREATE MATERIALIZED VIEW % % s AS SELECT * FROM % s WHERE sval IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( sval , k , c ) " ) ; 
 - Assert . fail ( " MV on static should fail " ) ; 
 + Assert . fail ( " Use of static column in a MV primary key should fail " ) ; 
 } 
 catch ( InvalidQueryException e ) 
 { 
 } 
 
 - createView ( " mv _ static " , " CREATE MATERIALIZED VIEW % s AS SELECT * FROM % % s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( val , k , c ) " ) ; 
 + try 
 + { 
 + createView ( " mv _ static " , " CREATE MATERIALIZED VIEW % % s AS SELECT val , sval FROM % s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( val , k , c ) " ) ; 
 + Assert . fail ( " Explicit select of static column in MV should fail " ) ; 
 + } 
 + catch ( InvalidQueryException e ) 
 + { 
 + } 
 + 
 + try 
 + { 
 + createView ( " mv _ static " , " CREATE MATERIALIZED VIEW % s AS SELECT * FROM % % s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( val , k , c ) " ) ; 
 + Assert . fail ( " Implicit select of static column in MV should fail " ) ; 
 + } 
 + catch ( InvalidQueryException e ) 
 + { 
 + } 
 + 
 + createView ( " mv _ static " , " CREATE MATERIALIZED VIEW % s AS SELECT val , k , c FROM % % s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY ( val , k , c ) " ) ; 
 
 for ( int i = 0 ; i < 100 ; i + + ) 
 updateView ( " INSERT into % s ( k , c , sval , val ) VALUES ( ? , ? , ? , ? ) " , 0 , i % 2 , " bar " + i , " baz " ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
