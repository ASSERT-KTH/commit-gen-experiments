BLEU SCORE: 0.05604233375480576

TEST MSG: nija : fix cqlsh completion for full ( ) collection indexes
GENERATED MSG: ( cqlsh ) Tab completeion for indexes on map keys .

TEST DIFF (one line): diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py <nl> index 31f0de2 . . f089cd7 100644 <nl> - - - a / pylib / cqlshlib / cql3handling . py <nl> + + + b / pylib / cqlshlib / cql3handling . py <nl> @ @ - 1001 , 7 + 1001 , 7 @ @ syntax _ rules + = r ' ' ' <nl> cf = < columnFamilyName > " ( " ( <nl> col = < cident > | <nl> " keys ( " col = < cident > " ) " | <nl> - " fullCollection ( " col = < cident > " ) " <nl> + " full ( " col = < cident > " ) " <nl> ) " ) " <nl> ( " USING " < stringLiteral > ( " WITH " " OPTIONS " " = " < mapLiteral > ) ? ) ? <nl> ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py 
 index 31f0de2 . . f089cd7 100644 
 - - - a / pylib / cqlshlib / cql3handling . py 
 + + + b / pylib / cqlshlib / cql3handling . py 
 @ @ - 1001 , 7 + 1001 , 7 @ @ syntax _ rules + = r ' ' ' 
 cf = < columnFamilyName > " ( " ( 
 col = < cident > | 
 " keys ( " col = < cident > " ) " | 
 - " fullCollection ( " col = < cident > " ) " 
 + " full ( " col = < cident > " ) " 
 ) " ) " 
 ( " USING " < stringLiteral > ( " WITH " " OPTIONS " " = " < mapLiteral > ) ? ) ? 
 ;

NEAREST DIFF:
ELIMINATEDSENTENCE
