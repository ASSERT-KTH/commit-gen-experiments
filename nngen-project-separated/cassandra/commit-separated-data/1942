BLEU SCORE: 0.03416211359799979

TEST MSG: Run major compactions for repaired / unrepaired in parallel
GENERATED MSG: Add five - minute delay before starting compactions on a restarted server

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index bdfa397 . . e5a8f05 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 3 <nl> + * Run major compactions for repaired / unrepaired in parallel ( CASSANDRA - 8510 ) <nl> * ( cqlsh ) Fix compression options in DESCRIBE TABLE output when compression <nl> is disabled ( CASSANDRA - 8288 ) <nl> * ( cqlsh ) Fix DESCRIBE output after keyspaces are altered ( CASSANDRA - 7623 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> index 3977d9c . . 9f5951c 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> @ @ - 450 , 26 + 450 , 33 @ @ public class CompactionManager implements CompactionManagerMBean <nl> <nl> public void performMaximal ( final ColumnFamilyStore cfStore ) throws InterruptedException , ExecutionException <nl> { <nl> - submitMaximal ( cfStore , getDefaultGcBefore ( cfStore ) ) . get ( ) ; <nl> + FBUtilities . waitOnFutures ( submitMaximal ( cfStore , getDefaultGcBefore ( cfStore ) ) ) ; <nl> } <nl> <nl> - public Future < ? > submitMaximal ( final ColumnFamilyStore cfStore , final int gcBefore ) <nl> + public List < Future < ? > > submitMaximal ( final ColumnFamilyStore cfStore , final int gcBefore ) <nl> { <nl> / / here we compute the task off the compaction executor , so having that present doesn ' t <nl> / / confuse runWithCompactionsDisabled - - i . e . , we don ' t want to deadlock ourselves , waiting <nl> / / for ourselves to finish / acknowledge cancellation before continuing . <nl> final Collection < AbstractCompactionTask > tasks = cfStore . getCompactionStrategy ( ) . getMaximalTask ( gcBefore ) ; <nl> - Runnable runnable = new WrappedRunnable ( ) <nl> + <nl> + if ( tasks = = null ) <nl> + return Collections . emptyList ( ) ; <nl> + <nl> + List < Future < ? > > futures = new ArrayList < > ( ) ; <nl> + <nl> + for ( final AbstractCompactionTask task : tasks ) <nl> { <nl> - protected void runMayThrow ( ) throws IOException <nl> + Runnable runnable = new WrappedRunnable ( ) <nl> { <nl> - if ( tasks = = null ) <nl> - return ; <nl> - for ( AbstractCompactionTask task : tasks ) <nl> + protected void runMayThrow ( ) throws IOException <nl> + { <nl> task . execute ( metrics ) ; <nl> - } <nl> - } ; <nl> - return executor . submit ( runnable ) ; <nl> + } <nl> + } ; <nl> + futures . add ( executor . submit ( runnable ) ) ; <nl> + } <nl> + return futures ; <nl> } <nl> <nl> public void forceUserDefinedCompaction ( String dataFiles ) <nl> diff - - git a / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java b / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java <nl> index 912c7f1 . . c6e9445 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java <nl> @ @ - 20 , 7 + 20 , 6 @ @ package org . apache . cassandra . db . compaction ; <nl> <nl> import java . util . Collection ; <nl> import java . util . concurrent . ExecutionException ; <nl> - import java . util . concurrent . Future ; <nl> <nl> import org . apache . cassandra . db . * ; <nl> <nl> @ @ - 41 , 6 + 40 , 7 @ @ import static org . apache . cassandra . cql3 . QueryProcessor . executeInternal ; <nl> <nl> import static org . apache . cassandra . Util . cellname ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> + import org . apache . cassandra . utils . FBUtilities ; <nl> <nl> <nl> public class CompactionsPurgeTest extends SchemaLoader <nl> @ @ - 85 , 7 + 85 , 7 @ @ public class CompactionsPurgeTest extends SchemaLoader <nl> cfs . forceBlockingFlush ( ) ; <nl> <nl> / / major compact and test that all columns but the resurrected one is completely gone <nl> - CompactionManager . instance . submitMaximal ( cfs , Integer . MAX _ VALUE ) . get ( ) ; <nl> + FBUtilities . waitOnFutures ( CompactionManager . instance . submitMaximal ( cfs , Integer . MAX _ VALUE ) ) ; <nl> cfs . invalidateCachedRow ( key ) ; <nl> ColumnFamily cf = cfs . getColumnFamily ( QueryFilter . getIdentityFilter ( key , cfName , System . currentTimeMillis ( ) ) ) ; <nl> assertColumns ( cf , " 5 " ) ; <nl> @ @ - 346 , 8 + 346 , 7 @ @ public class CompactionsPurgeTest extends SchemaLoader <nl> assertEquals ( 0 , result . size ( ) ) ; <nl> <nl> / / compact the two sstables with a gcBefore that does * not * allow the row tombstone to be purged <nl> - Future < ? > future = CompactionManager . instance . submitMaximal ( cfs , ( int ) ( System . currentTimeMillis ( ) / 1000 ) - 10000 ) ; <nl> - future . get ( ) ; <nl> + FBUtilities . waitOnFutures ( CompactionManager . instance . submitMaximal ( cfs , ( int ) ( System . currentTimeMillis ( ) / 1000 ) - 10000 ) ) ; <nl> <nl> / / the data should be gone , but the tombstone should still exist <nl> assertEquals ( 1 , cfs . getSSTables ( ) . size ( ) ) ; <nl> @ @ - 367 , 8 + 366 , 7 @ @ public class CompactionsPurgeTest extends SchemaLoader <nl> cfs . forceBlockingFlush ( ) ; <nl> <nl> / / compact the two sstables with a gcBefore that * does * allow the row tombstone to be purged <nl> - future = CompactionManager . instance . submitMaximal ( cfs , ( int ) ( System . currentTimeMillis ( ) / 1000 ) + 10000 ) ; <nl> - future . get ( ) ; <nl> + FBUtilities . waitOnFutures ( CompactionManager . instance . submitMaximal ( cfs , ( int ) ( System . currentTimeMillis ( ) / 1000 ) + 10000 ) ) ; <nl> <nl> / / both the data and the tombstone should be gone this time <nl> assertEquals ( 0 , cfs . getSSTables ( ) . size ( ) ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index fce741b . . da14eee 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - 1 . 0 <nl> + 1 . 0 . 0 - beta1 <nl> * removed binarymemtable ( CASSANDRA - 2692 ) <nl> * add commitlog _ total _ space _ in _ mb to prevent fragmented logs ( CASSANDRA - 2427 ) <nl> * removed commitlog _ rotation _ threshold _ in _ mb configuration ( CASSANDRA - 2771 ) <nl> diff - - git a / build . xml b / build . xml <nl> index c9aceb6 . . 823617d 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 25 , 7 + 25 , 7 @ @ <nl> < property name = " debuglevel " value = " source , lines , vars " / > <nl> <nl> < ! - - default version and SCM information ( we need the default SCM info as people may checkout with git - svn ) - - > <nl> - < property name = " base . version " value = " 1 . 0 " / > <nl> + < property name = " base . version " value = " 1 . 0 . 0 - beta1 " / > <nl> < property name = " scm . default . path " value = " cassandra / branches / cassandra - 1 . 0 . 0 " / > <nl> < property name = " scm . default . connection " value = " scm : svn : http : / / svn . apache . org / repos / asf / $ { scm . default . path } " / > <nl> < property name = " scm . default . developerConnection " value = " scm : svn : https : / / svn . apache . org / repos / asf / $ { scm . default . path } " / > <nl> diff - - git a / debian / changelog b / debian / changelog <nl> index 9bdd0cf . . 12e2c1a 100644 <nl> - - - a / debian / changelog <nl> + + + b / debian / changelog <nl> @ @ - 1 , 3 + 1 , 9 @ @ <nl> + cassandra ( 1 . 0 . 0 - beta1 ) unstable ; urgency = low <nl> + <nl> + * New beta release <nl> + <nl> + - - Sylvain Lebresne < slebresne @ apache . org > Wed , 14 Sep 2011 11 : 07 : 47 + 0200 <nl> + <nl> cassandra ( 0 . 8 . 1 ) unstable ; urgency = low <nl> <nl> * New release

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index bdfa397 . . e5a8f05 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 3 
 + * Run major compactions for repaired / unrepaired in parallel ( CASSANDRA - 8510 ) 
 * ( cqlsh ) Fix compression options in DESCRIBE TABLE output when compression 
 is disabled ( CASSANDRA - 8288 ) 
 * ( cqlsh ) Fix DESCRIBE output after keyspaces are altered ( CASSANDRA - 7623 ) 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 index 3977d9c . . 9f5951c 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 @ @ - 450 , 26 + 450 , 33 @ @ public class CompactionManager implements CompactionManagerMBean 
 
 public void performMaximal ( final ColumnFamilyStore cfStore ) throws InterruptedException , ExecutionException 
 { 
 - submitMaximal ( cfStore , getDefaultGcBefore ( cfStore ) ) . get ( ) ; 
 + FBUtilities . waitOnFutures ( submitMaximal ( cfStore , getDefaultGcBefore ( cfStore ) ) ) ; 
 } 
 
 - public Future < ? > submitMaximal ( final ColumnFamilyStore cfStore , final int gcBefore ) 
 + public List < Future < ? > > submitMaximal ( final ColumnFamilyStore cfStore , final int gcBefore ) 
 { 
 / / here we compute the task off the compaction executor , so having that present doesn ' t 
 / / confuse runWithCompactionsDisabled - - i . e . , we don ' t want to deadlock ourselves , waiting 
 / / for ourselves to finish / acknowledge cancellation before continuing . 
 final Collection < AbstractCompactionTask > tasks = cfStore . getCompactionStrategy ( ) . getMaximalTask ( gcBefore ) ; 
 - Runnable runnable = new WrappedRunnable ( ) 
 + 
 + if ( tasks = = null ) 
 + return Collections . emptyList ( ) ; 
 + 
 + List < Future < ? > > futures = new ArrayList < > ( ) ; 
 + 
 + for ( final AbstractCompactionTask task : tasks ) 
 { 
 - protected void runMayThrow ( ) throws IOException 
 + Runnable runnable = new WrappedRunnable ( ) 
 { 
 - if ( tasks = = null ) 
 - return ; 
 - for ( AbstractCompactionTask task : tasks ) 
 + protected void runMayThrow ( ) throws IOException 
 + { 
 task . execute ( metrics ) ; 
 - } 
 - } ; 
 - return executor . submit ( runnable ) ; 
 + } 
 + } ; 
 + futures . add ( executor . submit ( runnable ) ) ; 
 + } 
 + return futures ; 
 } 
 
 public void forceUserDefinedCompaction ( String dataFiles ) 
 diff - - git a / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java b / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java 
 index 912c7f1 . . c6e9445 100644 
 - - - a / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java 
 + + + b / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java 
 @ @ - 20 , 7 + 20 , 6 @ @ package org . apache . cassandra . db . compaction ; 
 
 import java . util . Collection ; 
 import java . util . concurrent . ExecutionException ; 
 - import java . util . concurrent . Future ; 
 
 import org . apache . cassandra . db . * ; 
 
 @ @ - 41 , 6 + 40 , 7 @ @ import static org . apache . cassandra . cql3 . QueryProcessor . executeInternal ; 
 
 import static org . apache . cassandra . Util . cellname ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 + import org . apache . cassandra . utils . FBUtilities ; 
 
 
 public class CompactionsPurgeTest extends SchemaLoader 
 @ @ - 85 , 7 + 85 , 7 @ @ public class CompactionsPurgeTest extends SchemaLoader 
 cfs . forceBlockingFlush ( ) ; 
 
 / / major compact and test that all columns but the resurrected one is completely gone 
 - CompactionManager . instance . submitMaximal ( cfs , Integer . MAX _ VALUE ) . get ( ) ; 
 + FBUtilities . waitOnFutures ( CompactionManager . instance . submitMaximal ( cfs , Integer . MAX _ VALUE ) ) ; 
 cfs . invalidateCachedRow ( key ) ; 
 ColumnFamily cf = cfs . getColumnFamily ( QueryFilter . getIdentityFilter ( key , cfName , System . currentTimeMillis ( ) ) ) ; 
 assertColumns ( cf , " 5 " ) ; 
 @ @ - 346 , 8 + 346 , 7 @ @ public class CompactionsPurgeTest extends SchemaLoader 
 assertEquals ( 0 , result . size ( ) ) ; 
 
 / / compact the two sstables with a gcBefore that does * not * allow the row tombstone to be purged 
 - Future < ? > future = CompactionManager . instance . submitMaximal ( cfs , ( int ) ( System . currentTimeMillis ( ) / 1000 ) - 10000 ) ; 
 - future . get ( ) ; 
 + FBUtilities . waitOnFutures ( CompactionManager . instance . submitMaximal ( cfs , ( int ) ( System . currentTimeMillis ( ) / 1000 ) - 10000 ) ) ; 
 
 / / the data should be gone , but the tombstone should still exist 
 assertEquals ( 1 , cfs . getSSTables ( ) . size ( ) ) ; 
 @ @ - 367 , 8 + 366 , 7 @ @ public class CompactionsPurgeTest extends SchemaLoader 
 cfs . forceBlockingFlush ( ) ; 
 
 / / compact the two sstables with a gcBefore that * does * allow the row tombstone to be purged 
 - future = CompactionManager . instance . submitMaximal ( cfs , ( int ) ( System . currentTimeMillis ( ) / 1000 ) + 10000 ) ; 
 - future . get ( ) ; 
 + FBUtilities . waitOnFutures ( CompactionManager . instance . submitMaximal ( cfs , ( int ) ( System . currentTimeMillis ( ) / 1000 ) + 10000 ) ) ; 
 
 / / both the data and the tombstone should be gone this time 
 assertEquals ( 0 , cfs . getSSTables ( ) . size ( ) ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index fce741b . . da14eee 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 - 1 . 0 
 + 1 . 0 . 0 - beta1 
 * removed binarymemtable ( CASSANDRA - 2692 ) 
 * add commitlog _ total _ space _ in _ mb to prevent fragmented logs ( CASSANDRA - 2427 ) 
 * removed commitlog _ rotation _ threshold _ in _ mb configuration ( CASSANDRA - 2771 ) 
 diff - - git a / build . xml b / build . xml 
 index c9aceb6 . . 823617d 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 25 , 7 + 25 , 7 @ @ 
 < property name = " debuglevel " value = " source , lines , vars " / > 
 
 < ! - - default version and SCM information ( we need the default SCM info as people may checkout with git - svn ) - - > 
 - < property name = " base . version " value = " 1 . 0 " / > 
 + < property name = " base . version " value = " 1 . 0 . 0 - beta1 " / > 
 < property name = " scm . default . path " value = " cassandra / branches / cassandra - 1 . 0 . 0 " / > 
 < property name = " scm . default . connection " value = " scm : svn : http : / / svn . apache . org / repos / asf / $ { scm . default . path } " / > 
 < property name = " scm . default . developerConnection " value = " scm : svn : https : / / svn . apache . org / repos / asf / $ { scm . default . path } " / > 
 diff - - git a / debian / changelog b / debian / changelog 
 index 9bdd0cf . . 12e2c1a 100644 
 - - - a / debian / changelog 
 + + + b / debian / changelog 
 @ @ - 1 , 3 + 1 , 9 @ @ 
 + cassandra ( 1 . 0 . 0 - beta1 ) unstable ; urgency = low 
 + 
 + * New beta release 
 + 
 + - - Sylvain Lebresne < slebresne @ apache . org > Wed , 14 Sep 2011 11 : 07 : 47 + 0200 
 + 
 cassandra ( 0 . 8 . 1 ) unstable ; urgency = low 
 
 * New release
