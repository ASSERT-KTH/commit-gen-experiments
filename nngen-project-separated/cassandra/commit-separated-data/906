BLEU SCORE: 0.6407117598241613

TEST MSG: Change order of directory searching for cassandra . in . sh
GENERATED MSG: Change order of directory searching for c * . in . sh

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 53945d6 . . 4f6a4db 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 15 <nl> + * Change order of directory searching for cassandra . in . sh to favor local one ( CASSANDRA - 11628 ) <nl> * cqlsh COPY FROM fails with [ ] { } chars in UDT / tuple fields / values ( CASSANDRA - 11633 ) <nl> * clqsh : COPY FROM throws TypeError with Cython extensions enabled ( CASSANDRA - 11574 ) <nl> * cqlsh : COPY FROM ignores NULL values in conversion ( CASSANDRA - 11549 ) <nl> diff - - git a / bin / debug - cql b / bin / debug - cql <nl> index b4ebb82 . . ae9bfe4 100755 <nl> - - - a / bin / debug - cql <nl> + + + b / bin / debug - cql <nl> @ @ - 17 , 11 + 17 , 11 @ @ <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> # Locations ( in order ) to use when searching for an include file . <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname $ 0 ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / bin / nodetool b / bin / nodetool <nl> index 0ea078f . . b6a6fbf 100755 <nl> - - - a / bin / nodetool <nl> + + + b / bin / nodetool <nl> @ @ - 23 , 11 + 23 , 12 @ @ if [ " ` basename " $ 0 " ` " = ' nodeprobe ' ] ; then <nl> fi <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / bin / sstablekeys b / bin / sstablekeys <nl> index 55b72d9 . . c0967ef 100755 <nl> - - - a / bin / sstablekeys <nl> + + + b / bin / sstablekeys <nl> @ @ - 17 , 11 + 17 , 12 @ @ <nl> # limitations under the License . <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / bin / sstableloader b / bin / sstableloader <nl> index b6a6d83 . . 03ab4f9 100755 <nl> - - - a / bin / sstableloader <nl> + + + b / bin / sstableloader <nl> @ @ - 17 , 11 + 17 , 12 @ @ <nl> # limitations under the License . <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / bin / sstablescrub b / bin / sstablescrub <nl> index 58bd21b . . 366a2b7 100755 <nl> - - - a / bin / sstablescrub <nl> + + + b / bin / sstablescrub <nl> @ @ - 17 , 11 + 17 , 12 @ @ <nl> # limitations under the License . <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / bin / sstableupgrade b / bin / sstableupgrade <nl> index a722cdc . . 7b307eb 100755 <nl> - - - a / bin / sstableupgrade <nl> + + + b / bin / sstableupgrade <nl> @ @ - 17 , 11 + 17 , 12 @ @ <nl> # limitations under the License . <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / tools / bin / cassandra - stress b / tools / bin / cassandra - stress <nl> index 1ffb598 . . 82a3eb5 100755 <nl> - - - a / tools / bin / cassandra - stress <nl> + + + b / tools / bin / cassandra - stress <nl> @ @ - 17 , 11 + 17 , 12 @ @ <nl> # limitations under the License . <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / tools / bin / cassandra - stressd b / tools / bin / cassandra - stressd <nl> index 229ba0b . . 48fbef6 100755 <nl> - - - a / tools / bin / cassandra - stressd <nl> + + + b / tools / bin / cassandra - stressd <nl> @ @ - 18 , 11 + 18 , 12 @ @ <nl> <nl> DESC = " Cassandra Stress Test Daemon " <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / tools / bin / json2sstable b / tools / bin / json2sstable <nl> index a58a785 . . 1bed544 100755 <nl> - - - a / tools / bin / json2sstable <nl> + + + b / tools / bin / json2sstable <nl> @ @ - 17 , 11 + 17 , 12 @ @ <nl> # limitations under the License . <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / tools / bin / sstable2json b / tools / bin / sstable2json <nl> index 6bbbfc6 . . 92ad5c5 100755 <nl> - - - a / tools / bin / sstable2json <nl> + + + b / tools / bin / sstable2json <nl> @ @ - 17 , 11 + 17 , 12 @ @ <nl> # limitations under the License . <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / tools / bin / sstableexpiredblockers b / tools / bin / sstableexpiredblockers <nl> index cefdfe3 . . c1c7e41 100755 <nl> - - - a / tools / bin / sstableexpiredblockers <nl> + + + b / tools / bin / sstableexpiredblockers <nl> @ @ - 17 , 11 + 17 , 12 @ @ <nl> # limitations under the License . <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / tools / bin / sstablelevelreset b / tools / bin / sstablelevelreset <nl> index 8191f3d . . ec602fd 100755 <nl> - - - a / tools / bin / sstablelevelreset <nl> + + + b / tools / bin / sstablelevelreset <nl> @ @ - 17 , 11 + 17 , 12 @ @ <nl> # limitations under the License . <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / tools / bin / sstablemetadata b / tools / bin / sstablemetadata <nl> index 5316869 . . addf39b 100755 <nl> - - - a / tools / bin / sstablemetadata <nl> + + + b / tools / bin / sstablemetadata <nl> @ @ - 17 , 11 + 17 , 12 @ @ <nl> # limitations under the License . <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / tools / bin / sstableofflinerelevel b / tools / bin / sstableofflinerelevel <nl> index a4ba6cb . . 4e34515 100755 <nl> - - - a / tools / bin / sstableofflinerelevel <nl> + + + b / tools / bin / sstableofflinerelevel <nl> @ @ - 17 , 11 + 17 , 12 @ @ <nl> # limitations under the License . <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / tools / bin / sstablerepairedset b / tools / bin / sstablerepairedset <nl> index efb8a70 . . 225cd11 100755 <nl> - - - a / tools / bin / sstablerepairedset <nl> + + + b / tools / bin / sstablerepairedset <nl> @ @ - 17 , 11 + 17 , 12 @ @ <nl> # limitations under the License . <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break <nl> diff - - git a / tools / bin / sstablesplit b / tools / bin / sstablesplit <nl> index 90d91ce . . 037cb63 100755 <nl> - - - a / tools / bin / sstablesplit <nl> + + + b / tools / bin / sstablesplit <nl> @ @ - 17 , 11 + 17 , 12 @ @ <nl> # limitations under the License . <nl> <nl> if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then <nl> - for include in / usr / share / cassandra / cassandra . in . sh \ <nl> - / usr / local / share / cassandra / cassandra . in . sh \ <nl> - / opt / cassandra / cassandra . in . sh \ <nl> + # Locations ( in order ) to use when searching for an include file . <nl> + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ <nl> " $ HOME / . cassandra . in . sh " \ <nl> - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do <nl> + / usr / share / cassandra / cassandra . in . sh \ <nl> + / usr / local / share / cassandra / cassandra . in . sh \ <nl> + / opt / cassandra / cassandra . in . sh ; do <nl> if [ - r " $ include " ] ; then <nl> . " $ include " <nl> break
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 4e1db62 . . 1fe1160 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> 1 . 1 . 11 <nl> * cli : Add JMX authentication support ( CASSANDRA - 5080 ) <nl> + * nodetool : ability to repair specific range ( CASSANDRA - 5280 ) <nl> <nl> <nl> 1 . 1 . 10 <nl> diff - - git a / src / java / org / apache / cassandra / service / AntiEntropyService . java b / src / java / org / apache / cassandra / service / AntiEntropyService . java <nl> index f3ca1c2 . . 5c59954 100644 <nl> - - - a / src / java / org / apache / cassandra / service / AntiEntropyService . java <nl> + + + b / src / java / org / apache / cassandra / service / AntiEntropyService . java <nl> @ @ - 169 , 7 + 169 , 7 @ @ public class AntiEntropyService <nl> throw new IllegalArgumentException ( " Requested range intersects a local range but is not fully contained in one ; this would lead to imprecise repair " ) ; <nl> } <nl> } <nl> - if ( rangeSuperSet = = null | | ! replicaSets . containsKey ( toRepair ) ) <nl> + if ( rangeSuperSet = = null | | ! replicaSets . containsKey ( rangeSuperSet ) ) <nl> return Collections . emptySet ( ) ; <nl> <nl> Set < InetAddress > neighbors = new HashSet < InetAddress > ( replicaSets . get ( rangeSuperSet ) ) ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 54d1c0b . . 05401e0 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 1854 , 11 + 1854 , 16 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> <nl> public int forceRepairAsync ( final String tableName , final boolean isSequential , final boolean primaryRange , final String . . . columnFamilies ) <nl> { <nl> + final Collection < Range < Token > > ranges = primaryRange ? Collections . singletonList ( getLocalPrimaryRange ( ) ) : getLocalRanges ( tableName ) ; <nl> + return forceRepairAsync ( tableName , isSequential , ranges , columnFamilies ) ; <nl> + } <nl> + <nl> + public int forceRepairAsync ( final String tableName , final boolean isSequential , final Collection < Range < Token > > ranges , final String . . . columnFamilies ) <nl> + { <nl> if ( Table . SYSTEM _ TABLE . equals ( tableName ) ) <nl> return 0 ; <nl> <nl> final int cmd = nextRepairCommand . incrementAndGet ( ) ; <nl> - final Collection < Range < Token > > ranges = primaryRange ? Collections . singletonList ( getLocalPrimaryRange ( ) ) : getLocalRanges ( tableName ) ; <nl> if ( ranges . size ( ) > 0 ) <nl> { <nl> new Thread ( new WrappedRunnable ( ) <nl> @ @ - 1872 , 7 + 1877 , 17 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> List < AntiEntropyService . RepairFuture > futures = new ArrayList < AntiEntropyService . RepairFuture > ( ranges . size ( ) ) ; <nl> for ( Range < Token > range : ranges ) <nl> { <nl> - AntiEntropyService . RepairFuture future = forceTableRepair ( range , tableName , isSequential , columnFamilies ) ; <nl> + AntiEntropyService . RepairFuture future ; <nl> + try <nl> + { <nl> + future = forceTableRepair ( range , tableName , isSequential , columnFamilies ) ; <nl> + } <nl> + catch ( IllegalArgumentException e ) <nl> + { <nl> + message = String . format ( " Repair session failed with error : % s " , e ) ; <nl> + sendNotification ( " repair " , message , new int [ ] { cmd , AntiEntropyService . Status . SESSION _ FAILED . ordinal ( ) } ) ; <nl> + continue ; <nl> + } <nl> if ( future = = null ) <nl> continue ; <nl> futures . add ( future ) ; <nl> @ @ - 1914 , 6 + 1929 , 17 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> return cmd ; <nl> } <nl> <nl> + public int forceRepairRangeAsync ( String beginToken , String endToken , final String tableName , boolean isSequential , final String . . . columnFamilies ) <nl> + { <nl> + Token parsedBeginToken = getPartitioner ( ) . getTokenFactory ( ) . fromString ( beginToken ) ; <nl> + Token parsedEndToken = getPartitioner ( ) . getTokenFactory ( ) . fromString ( endToken ) ; <nl> + <nl> + logger _ . info ( " starting user - requested repair of range ( { } , { } ] for keyspace { } and column families { } " , <nl> + new Object [ ] { parsedBeginToken , parsedEndToken , tableName , columnFamilies } ) ; <nl> + return forceRepairAsync ( tableName , isSequential , Collections . singleton ( new Range < Token > ( parsedBeginToken , parsedEndToken ) ) , columnFamilies ) ; <nl> + } <nl> + <nl> + <nl> / * * <nl> * Trigger proactive repair for a table and column families . <nl> * @ param tableName <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> index c34faf3 . . 1261d2a 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> @ @ - 256 , 6 + 256 , 11 @ @ public interface StorageServiceMBean extends NotificationEmitter <nl> public int forceRepairAsync ( String tableName , boolean isSequential , boolean primaryRange , String . . . columnFamilies ) ; <nl> <nl> / * * <nl> + * Same as forceRepairAsync , but handles a specified range <nl> + * / <nl> + public int forceRepairRangeAsync ( String beginToken , String endToken , final String tableName , boolean isSequential , final String . . . columnFamilies ) ; <nl> + <nl> + / * * <nl> * Triggers proactive repair for given column families , or all columnfamilies for the given table <nl> * if none are explicitly listed . <nl> * @ param tableName <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> index 723bdf8 . . 99cbab1 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> @ @ - 55 , 6 + 55 , 8 @ @ public class NodeCmd <nl> private static final Pair < String , String > PASSWORD _ OPT = new Pair < String , String > ( " pw " , " password " ) ; <nl> private static final Pair < String , String > TAG _ OPT = new Pair < String , String > ( " t " , " tag " ) ; <nl> private static final Pair < String , String > PRIMARY _ RANGE _ OPT = new Pair < String , String > ( " pr " , " partitioner - range " ) ; <nl> + private static final Pair < String , String > START _ TOKEN _ OPT = new Pair < String , String > ( " st " , " start - token " ) ; <nl> + private static final Pair < String , String > END _ TOKEN _ OPT = new Pair < String , String > ( " et " , " end - token " ) ; <nl> private static final Pair < String , String > SNAPSHOT _ REPAIR _ OPT = new Pair < String , String > ( " snapshot " , " with - snapshot " ) ; <nl> <nl> private static final String DEFAULT _ HOST = " 127 . 0 . 0 . 1 " ; <nl> @ @ - 76 , 6 + 78 , 8 @ @ public class NodeCmd <nl> options . addOption ( TAG _ OPT , true , " optional name to give a snapshot " ) ; <nl> options . addOption ( PRIMARY _ RANGE _ OPT , false , " only repair the first range returned by the partitioner for the node " ) ; <nl> options . addOption ( SNAPSHOT _ REPAIR _ OPT , false , " repair one node at a time using snapshots " ) ; <nl> + options . addOption ( START _ TOKEN _ OPT , true , " token at which repair range starts " ) ; <nl> + options . addOption ( END _ TOKEN _ OPT , true , " token at which repair range ends " ) ; <nl> } <nl> <nl> public NodeCmd ( NodeProbe probe ) <nl> @ @ - 1041 , 7 + 1045 , 10 @ @ public class NodeCmd <nl> case REPAIR : <nl> boolean snapshot = cmd . hasOption ( SNAPSHOT _ REPAIR _ OPT . left ) ; <nl> boolean primaryRange = cmd . hasOption ( PRIMARY _ RANGE _ OPT . left ) ; <nl> - probe . forceRepairAsync ( System . out , keyspace , snapshot , primaryRange , columnFamilies ) ; <nl> + if ( cmd . hasOption ( START _ TOKEN _ OPT . left ) | | cmd . hasOption ( END _ TOKEN _ OPT . left ) ) <nl> + probe . forceRepairRangeAsync ( System . out , keyspace , snapshot , cmd . getOptionValue ( START _ TOKEN _ OPT . left ) , cmd . getOptionValue ( END _ TOKEN _ OPT . left ) , columnFamilies ) ; <nl> + else <nl> + probe . forceRepairAsync ( System . out , keyspace , snapshot , primaryRange , columnFamilies ) ; <nl> break ; <nl> case FLUSH : <nl> try { probe . forceTableFlush ( keyspace , columnFamilies ) ; } <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> index 036d653 . . 44e64c4 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> @ @ - 231 , 6 + 231 , 29 @ @ public class NodeProbe <nl> } <nl> } <nl> <nl> + public void forceRepairRangeAsync ( final PrintStream out , final String tableName , boolean isSequential , final String startToken , final String endToken , String . . . columnFamilies ) throws IOException <nl> + { <nl> + RepairRunner runner = new RepairRunner ( out , tableName , columnFamilies ) ; <nl> + try <nl> + { <nl> + ssProxy . addNotificationListener ( runner , null , null ) ; <nl> + if ( ! runner . repairRangeAndWait ( ssProxy , isSequential , startToken , endToken ) ) <nl> + failed = true ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + throw new IOException ( e ) ; <nl> + } <nl> + finally <nl> + { <nl> + try <nl> + { <nl> + ssProxy . removeNotificationListener ( runner ) ; <nl> + } <nl> + catch ( ListenerNotFoundException ignored ) { } <nl> + } <nl> + } <nl> + <nl> public void forceTableRepairPrimaryRange ( String tableName , boolean isSequential , String . . . columnFamilies ) throws IOException <nl> { <nl> ssProxy . forceTableRepairPrimaryRange ( tableName , isSequential , columnFamilies ) ; <nl> @ @ - 835 , 6 + 858 , 21 @ @ class RepairRunner implements NotificationListener <nl> return success ; <nl> } <nl> <nl> + public boolean repairRangeAndWait ( StorageServiceMBean ssProxy , boolean isSequential , String startToken , String endToken ) throws InterruptedException <nl> + { <nl> + cmd = ssProxy . forceRepairRangeAsync ( startToken , endToken , keyspace , isSequential , columnFamilies ) ; <nl> + if ( cmd > 0 ) <nl> + { <nl> + condition . await ( ) ; <nl> + } <nl> + else <nl> + { <nl> + String message = String . format ( " [ % s ] Nothing to repair for keyspace ' % s ' " , format . format ( System . currentTimeMillis ( ) ) , keyspace ) ; <nl> + out . println ( message ) ; <nl> + } <nl> + return success ; <nl> + } <nl> + <nl> public void handleNotification ( Notification notification , Object handback ) <nl> { <nl> if ( " repair " . equals ( notification . getType ( ) ) )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 53945d6 . . 4f6a4db 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 15 
 + * Change order of directory searching for cassandra . in . sh to favor local one ( CASSANDRA - 11628 ) 
 * cqlsh COPY FROM fails with [ ] { } chars in UDT / tuple fields / values ( CASSANDRA - 11633 ) 
 * clqsh : COPY FROM throws TypeError with Cython extensions enabled ( CASSANDRA - 11574 ) 
 * cqlsh : COPY FROM ignores NULL values in conversion ( CASSANDRA - 11549 ) 
 diff - - git a / bin / debug - cql b / bin / debug - cql 
 index b4ebb82 . . ae9bfe4 100755 
 - - - a / bin / debug - cql 
 + + + b / bin / debug - cql 
 @ @ - 17 , 11 + 17 , 11 @ @ 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 # Locations ( in order ) to use when searching for an include file . 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname $ 0 ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / bin / nodetool b / bin / nodetool 
 index 0ea078f . . b6a6fbf 100755 
 - - - a / bin / nodetool 
 + + + b / bin / nodetool 
 @ @ - 23 , 11 + 23 , 12 @ @ if [ " ` basename " $ 0 " ` " = ' nodeprobe ' ] ; then 
 fi 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / bin / sstablekeys b / bin / sstablekeys 
 index 55b72d9 . . c0967ef 100755 
 - - - a / bin / sstablekeys 
 + + + b / bin / sstablekeys 
 @ @ - 17 , 11 + 17 , 12 @ @ 
 # limitations under the License . 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / bin / sstableloader b / bin / sstableloader 
 index b6a6d83 . . 03ab4f9 100755 
 - - - a / bin / sstableloader 
 + + + b / bin / sstableloader 
 @ @ - 17 , 11 + 17 , 12 @ @ 
 # limitations under the License . 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / bin / sstablescrub b / bin / sstablescrub 
 index 58bd21b . . 366a2b7 100755 
 - - - a / bin / sstablescrub 
 + + + b / bin / sstablescrub 
 @ @ - 17 , 11 + 17 , 12 @ @ 
 # limitations under the License . 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / bin / sstableupgrade b / bin / sstableupgrade 
 index a722cdc . . 7b307eb 100755 
 - - - a / bin / sstableupgrade 
 + + + b / bin / sstableupgrade 
 @ @ - 17 , 11 + 17 , 12 @ @ 
 # limitations under the License . 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / tools / bin / cassandra - stress b / tools / bin / cassandra - stress 
 index 1ffb598 . . 82a3eb5 100755 
 - - - a / tools / bin / cassandra - stress 
 + + + b / tools / bin / cassandra - stress 
 @ @ - 17 , 11 + 17 , 12 @ @ 
 # limitations under the License . 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / tools / bin / cassandra - stressd b / tools / bin / cassandra - stressd 
 index 229ba0b . . 48fbef6 100755 
 - - - a / tools / bin / cassandra - stressd 
 + + + b / tools / bin / cassandra - stressd 
 @ @ - 18 , 11 + 18 , 12 @ @ 
 
 DESC = " Cassandra Stress Test Daemon " 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / tools / bin / json2sstable b / tools / bin / json2sstable 
 index a58a785 . . 1bed544 100755 
 - - - a / tools / bin / json2sstable 
 + + + b / tools / bin / json2sstable 
 @ @ - 17 , 11 + 17 , 12 @ @ 
 # limitations under the License . 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / tools / bin / sstable2json b / tools / bin / sstable2json 
 index 6bbbfc6 . . 92ad5c5 100755 
 - - - a / tools / bin / sstable2json 
 + + + b / tools / bin / sstable2json 
 @ @ - 17 , 11 + 17 , 12 @ @ 
 # limitations under the License . 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / tools / bin / sstableexpiredblockers b / tools / bin / sstableexpiredblockers 
 index cefdfe3 . . c1c7e41 100755 
 - - - a / tools / bin / sstableexpiredblockers 
 + + + b / tools / bin / sstableexpiredblockers 
 @ @ - 17 , 11 + 17 , 12 @ @ 
 # limitations under the License . 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / tools / bin / sstablelevelreset b / tools / bin / sstablelevelreset 
 index 8191f3d . . ec602fd 100755 
 - - - a / tools / bin / sstablelevelreset 
 + + + b / tools / bin / sstablelevelreset 
 @ @ - 17 , 11 + 17 , 12 @ @ 
 # limitations under the License . 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / tools / bin / sstablemetadata b / tools / bin / sstablemetadata 
 index 5316869 . . addf39b 100755 
 - - - a / tools / bin / sstablemetadata 
 + + + b / tools / bin / sstablemetadata 
 @ @ - 17 , 11 + 17 , 12 @ @ 
 # limitations under the License . 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / tools / bin / sstableofflinerelevel b / tools / bin / sstableofflinerelevel 
 index a4ba6cb . . 4e34515 100755 
 - - - a / tools / bin / sstableofflinerelevel 
 + + + b / tools / bin / sstableofflinerelevel 
 @ @ - 17 , 11 + 17 , 12 @ @ 
 # limitations under the License . 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / tools / bin / sstablerepairedset b / tools / bin / sstablerepairedset 
 index efb8a70 . . 225cd11 100755 
 - - - a / tools / bin / sstablerepairedset 
 + + + b / tools / bin / sstablerepairedset 
 @ @ - 17 , 11 + 17 , 12 @ @ 
 # limitations under the License . 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break 
 diff - - git a / tools / bin / sstablesplit b / tools / bin / sstablesplit 
 index 90d91ce . . 037cb63 100755 
 - - - a / tools / bin / sstablesplit 
 + + + b / tools / bin / sstablesplit 
 @ @ - 17 , 11 + 17 , 12 @ @ 
 # limitations under the License . 
 
 if [ " x $ CASSANDRA _ INCLUDE " = " x " ] ; then 
 - for include in / usr / share / cassandra / cassandra . in . sh \ 
 - / usr / local / share / cassandra / cassandra . in . sh \ 
 - / opt / cassandra / cassandra . in . sh \ 
 + # Locations ( in order ) to use when searching for an include file . 
 + for include in " ` dirname " $ 0 " ` / cassandra . in . sh " \ 
 " $ HOME / . cassandra . in . sh " \ 
 - " ` dirname " $ 0 " ` / cassandra . in . sh " ; do 
 + / usr / share / cassandra / cassandra . in . sh \ 
 + / usr / local / share / cassandra / cassandra . in . sh \ 
 + / opt / cassandra / cassandra . in . sh ; do 
 if [ - r " $ include " ] ; then 
 . " $ include " 
 break

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 4e1db62 . . 1fe1160 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 1 . 1 . 11 
 * cli : Add JMX authentication support ( CASSANDRA - 5080 ) 
 + * nodetool : ability to repair specific range ( CASSANDRA - 5280 ) 
 
 
 1 . 1 . 10 
 diff - - git a / src / java / org / apache / cassandra / service / AntiEntropyService . java b / src / java / org / apache / cassandra / service / AntiEntropyService . java 
 index f3ca1c2 . . 5c59954 100644 
 - - - a / src / java / org / apache / cassandra / service / AntiEntropyService . java 
 + + + b / src / java / org / apache / cassandra / service / AntiEntropyService . java 
 @ @ - 169 , 7 + 169 , 7 @ @ public class AntiEntropyService 
 throw new IllegalArgumentException ( " Requested range intersects a local range but is not fully contained in one ; this would lead to imprecise repair " ) ; 
 } 
 } 
 - if ( rangeSuperSet = = null | | ! replicaSets . containsKey ( toRepair ) ) 
 + if ( rangeSuperSet = = null | | ! replicaSets . containsKey ( rangeSuperSet ) ) 
 return Collections . emptySet ( ) ; 
 
 Set < InetAddress > neighbors = new HashSet < InetAddress > ( replicaSets . get ( rangeSuperSet ) ) ; 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 54d1c0b . . 05401e0 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 1854 , 11 + 1854 , 16 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 
 public int forceRepairAsync ( final String tableName , final boolean isSequential , final boolean primaryRange , final String . . . columnFamilies ) 
 { 
 + final Collection < Range < Token > > ranges = primaryRange ? Collections . singletonList ( getLocalPrimaryRange ( ) ) : getLocalRanges ( tableName ) ; 
 + return forceRepairAsync ( tableName , isSequential , ranges , columnFamilies ) ; 
 + } 
 + 
 + public int forceRepairAsync ( final String tableName , final boolean isSequential , final Collection < Range < Token > > ranges , final String . . . columnFamilies ) 
 + { 
 if ( Table . SYSTEM _ TABLE . equals ( tableName ) ) 
 return 0 ; 
 
 final int cmd = nextRepairCommand . incrementAndGet ( ) ; 
 - final Collection < Range < Token > > ranges = primaryRange ? Collections . singletonList ( getLocalPrimaryRange ( ) ) : getLocalRanges ( tableName ) ; 
 if ( ranges . size ( ) > 0 ) 
 { 
 new Thread ( new WrappedRunnable ( ) 
 @ @ - 1872 , 7 + 1877 , 17 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 List < AntiEntropyService . RepairFuture > futures = new ArrayList < AntiEntropyService . RepairFuture > ( ranges . size ( ) ) ; 
 for ( Range < Token > range : ranges ) 
 { 
 - AntiEntropyService . RepairFuture future = forceTableRepair ( range , tableName , isSequential , columnFamilies ) ; 
 + AntiEntropyService . RepairFuture future ; 
 + try 
 + { 
 + future = forceTableRepair ( range , tableName , isSequential , columnFamilies ) ; 
 + } 
 + catch ( IllegalArgumentException e ) 
 + { 
 + message = String . format ( " Repair session failed with error : % s " , e ) ; 
 + sendNotification ( " repair " , message , new int [ ] { cmd , AntiEntropyService . Status . SESSION _ FAILED . ordinal ( ) } ) ; 
 + continue ; 
 + } 
 if ( future = = null ) 
 continue ; 
 futures . add ( future ) ; 
 @ @ - 1914 , 6 + 1929 , 17 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 return cmd ; 
 } 
 
 + public int forceRepairRangeAsync ( String beginToken , String endToken , final String tableName , boolean isSequential , final String . . . columnFamilies ) 
 + { 
 + Token parsedBeginToken = getPartitioner ( ) . getTokenFactory ( ) . fromString ( beginToken ) ; 
 + Token parsedEndToken = getPartitioner ( ) . getTokenFactory ( ) . fromString ( endToken ) ; 
 + 
 + logger _ . info ( " starting user - requested repair of range ( { } , { } ] for keyspace { } and column families { } " , 
 + new Object [ ] { parsedBeginToken , parsedEndToken , tableName , columnFamilies } ) ; 
 + return forceRepairAsync ( tableName , isSequential , Collections . singleton ( new Range < Token > ( parsedBeginToken , parsedEndToken ) ) , columnFamilies ) ; 
 + } 
 + 
 + 
 / * * 
 * Trigger proactive repair for a table and column families . 
 * @ param tableName 
 diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 index c34faf3 . . 1261d2a 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 @ @ - 256 , 6 + 256 , 11 @ @ public interface StorageServiceMBean extends NotificationEmitter 
 public int forceRepairAsync ( String tableName , boolean isSequential , boolean primaryRange , String . . . columnFamilies ) ; 
 
 / * * 
 + * Same as forceRepairAsync , but handles a specified range 
 + * / 
 + public int forceRepairRangeAsync ( String beginToken , String endToken , final String tableName , boolean isSequential , final String . . . columnFamilies ) ; 
 + 
 + / * * 
 * Triggers proactive repair for given column families , or all columnfamilies for the given table 
 * if none are explicitly listed . 
 * @ param tableName 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 index 723bdf8 . . 99cbab1 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 @ @ - 55 , 6 + 55 , 8 @ @ public class NodeCmd 
 private static final Pair < String , String > PASSWORD _ OPT = new Pair < String , String > ( " pw " , " password " ) ; 
 private static final Pair < String , String > TAG _ OPT = new Pair < String , String > ( " t " , " tag " ) ; 
 private static final Pair < String , String > PRIMARY _ RANGE _ OPT = new Pair < String , String > ( " pr " , " partitioner - range " ) ; 
 + private static final Pair < String , String > START _ TOKEN _ OPT = new Pair < String , String > ( " st " , " start - token " ) ; 
 + private static final Pair < String , String > END _ TOKEN _ OPT = new Pair < String , String > ( " et " , " end - token " ) ; 
 private static final Pair < String , String > SNAPSHOT _ REPAIR _ OPT = new Pair < String , String > ( " snapshot " , " with - snapshot " ) ; 
 
 private static final String DEFAULT _ HOST = " 127 . 0 . 0 . 1 " ; 
 @ @ - 76 , 6 + 78 , 8 @ @ public class NodeCmd 
 options . addOption ( TAG _ OPT , true , " optional name to give a snapshot " ) ; 
 options . addOption ( PRIMARY _ RANGE _ OPT , false , " only repair the first range returned by the partitioner for the node " ) ; 
 options . addOption ( SNAPSHOT _ REPAIR _ OPT , false , " repair one node at a time using snapshots " ) ; 
 + options . addOption ( START _ TOKEN _ OPT , true , " token at which repair range starts " ) ; 
 + options . addOption ( END _ TOKEN _ OPT , true , " token at which repair range ends " ) ; 
 } 
 
 public NodeCmd ( NodeProbe probe ) 
 @ @ - 1041 , 7 + 1045 , 10 @ @ public class NodeCmd 
 case REPAIR : 
 boolean snapshot = cmd . hasOption ( SNAPSHOT _ REPAIR _ OPT . left ) ; 
 boolean primaryRange = cmd . hasOption ( PRIMARY _ RANGE _ OPT . left ) ; 
 - probe . forceRepairAsync ( System . out , keyspace , snapshot , primaryRange , columnFamilies ) ; 
 + if ( cmd . hasOption ( START _ TOKEN _ OPT . left ) | | cmd . hasOption ( END _ TOKEN _ OPT . left ) ) 
 + probe . forceRepairRangeAsync ( System . out , keyspace , snapshot , cmd . getOptionValue ( START _ TOKEN _ OPT . left ) , cmd . getOptionValue ( END _ TOKEN _ OPT . left ) , columnFamilies ) ; 
 + else 
 + probe . forceRepairAsync ( System . out , keyspace , snapshot , primaryRange , columnFamilies ) ; 
 break ; 
 case FLUSH : 
 try { probe . forceTableFlush ( keyspace , columnFamilies ) ; } 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 index 036d653 . . 44e64c4 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 @ @ - 231 , 6 + 231 , 29 @ @ public class NodeProbe 
 } 
 } 
 
 + public void forceRepairRangeAsync ( final PrintStream out , final String tableName , boolean isSequential , final String startToken , final String endToken , String . . . columnFamilies ) throws IOException 
 + { 
 + RepairRunner runner = new RepairRunner ( out , tableName , columnFamilies ) ; 
 + try 
 + { 
 + ssProxy . addNotificationListener ( runner , null , null ) ; 
 + if ( ! runner . repairRangeAndWait ( ssProxy , isSequential , startToken , endToken ) ) 
 + failed = true ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + throw new IOException ( e ) ; 
 + } 
 + finally 
 + { 
 + try 
 + { 
 + ssProxy . removeNotificationListener ( runner ) ; 
 + } 
 + catch ( ListenerNotFoundException ignored ) { } 
 + } 
 + } 
 + 
 public void forceTableRepairPrimaryRange ( String tableName , boolean isSequential , String . . . columnFamilies ) throws IOException 
 { 
 ssProxy . forceTableRepairPrimaryRange ( tableName , isSequential , columnFamilies ) ; 
 @ @ - 835 , 6 + 858 , 21 @ @ class RepairRunner implements NotificationListener 
 return success ; 
 } 
 
 + public boolean repairRangeAndWait ( StorageServiceMBean ssProxy , boolean isSequential , String startToken , String endToken ) throws InterruptedException 
 + { 
 + cmd = ssProxy . forceRepairRangeAsync ( startToken , endToken , keyspace , isSequential , columnFamilies ) ; 
 + if ( cmd > 0 ) 
 + { 
 + condition . await ( ) ; 
 + } 
 + else 
 + { 
 + String message = String . format ( " [ % s ] Nothing to repair for keyspace ' % s ' " , format . format ( System . currentTimeMillis ( ) ) , keyspace ) ; 
 + out . println ( message ) ; 
 + } 
 + return success ; 
 + } 
 + 
 public void handleNotification ( Notification notification , Object handback ) 
 { 
 if ( " repair " . equals ( notification . getType ( ) ) )
