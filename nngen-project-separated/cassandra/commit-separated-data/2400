BLEU SCORE: 0.06220117374063391

TEST MSG: Support auth in CqlRecordWriter
GENERATED MSG: Allow BRW to authenticate .

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java b / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java <nl> index 96ca65d . . f4963fb 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java <nl> @ @ - 124 , 18 + 124 , 24 @ @ public abstract class AbstractColumnFamilyOutputFormat < K , Y > extends OutputForma <nl> TProtocol binaryProtocol = new TBinaryProtocol ( transport , true , true ) ; <nl> Cassandra . Client client = new Cassandra . Client ( binaryProtocol ) ; <nl> client . set _ keyspace ( ConfigHelper . getOutputKeyspace ( conf ) ) ; <nl> - if ( ( ConfigHelper . getOutputKeyspaceUserName ( conf ) ! = null ) & & ( ConfigHelper . getOutputKeyspacePassword ( conf ) ! = null ) ) <nl> - { <nl> - Map < String , String > creds = new HashMap < String , String > ( ) ; <nl> - creds . put ( IAuthenticator . USERNAME _ KEY , ConfigHelper . getOutputKeyspaceUserName ( conf ) ) ; <nl> - creds . put ( IAuthenticator . PASSWORD _ KEY , ConfigHelper . getOutputKeyspacePassword ( conf ) ) ; <nl> - AuthenticationRequest authRequest = new AuthenticationRequest ( creds ) ; <nl> - client . login ( authRequest ) ; <nl> - } <nl> + String user = ConfigHelper . getOutputKeyspaceUserName ( conf ) ; <nl> + String password = ConfigHelper . getOutputKeyspacePassword ( conf ) ; <nl> + if ( ( user ! = null ) & & ( password ! = null ) ) <nl> + login ( user , password , client ) ; <nl> + <nl> logger . debug ( " Authenticated client for CF output format created successfully " ) ; <nl> return client ; <nl> } <nl> <nl> + public static void login ( String user , String password , Cassandra . Client client ) throws Exception <nl> + { <nl> + Map < String , String > creds = new HashMap < String , String > ( ) ; <nl> + creds . put ( IAuthenticator . USERNAME _ KEY , user ) ; <nl> + creds . put ( IAuthenticator . PASSWORD _ KEY , password ) ; <nl> + AuthenticationRequest authRequest = new AuthenticationRequest ( creds ) ; <nl> + client . login ( authRequest ) ; <nl> + } <nl> + <nl> / * * <nl> * An { @ link OutputCommitter } that does nothing . <nl> * / <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java <nl> index 9c2e156 . . ee7aabf 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java <nl> @ @ - 27 , 7 + 27 , 6 @ @ import org . apache . cassandra . hadoop . HadoopCompat ; <nl> import org . apache . hadoop . util . Progressable ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> - <nl> import org . apache . cassandra . db . marshal . AbstractType ; <nl> import org . apache . cassandra . db . marshal . CompositeType ; <nl> import org . apache . cassandra . db . marshal . LongType ; <nl> @ @ - 36 , 6 + 35 , 7 @ @ import org . apache . cassandra . dht . Range ; <nl> import org . apache . cassandra . dht . Token ; <nl> import org . apache . cassandra . exceptions . ConfigurationException ; <nl> import org . apache . cassandra . exceptions . SyntaxException ; <nl> + import org . apache . cassandra . hadoop . AbstractColumnFamilyOutputFormat ; <nl> import org . apache . cassandra . hadoop . AbstractColumnFamilyRecordWriter ; <nl> import org . apache . cassandra . hadoop . ConfigHelper ; <nl> import org . apache . cassandra . thrift . * ; <nl> @ @ - 103 , 6 + 103 , 11 @ @ final class CqlRecordWriter extends AbstractColumnFamilyRecordWriter < Map < String , <nl> try <nl> { <nl> Cassandra . Client client = ConfigHelper . getClientFromOutputAddressList ( conf ) ; <nl> + client . set _ keyspace ( ConfigHelper . getOutputKeyspace ( conf ) ) ; <nl> + String user = ConfigHelper . getOutputKeyspaceUserName ( conf ) ; <nl> + String password = ConfigHelper . getOutputKeyspacePassword ( conf ) ; <nl> + if ( ( user ! = null ) & & ( password ! = null ) ) <nl> + AbstractColumnFamilyOutputFormat . login ( user , password , client ) ; <nl> retrievePartitionKeyValidator ( client ) ; <nl> String cqlQuery = CqlConfigHelper . getOutputCql ( conf ) . trim ( ) ; <nl> if ( cqlQuery . toLowerCase ( ) . startsWith ( " insert " ) )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / hadoop / BulkRecordWriter . java b / src / java / org / apache / cassandra / hadoop / BulkRecordWriter . java <nl> index ec72038 . . 42bb07e 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / BulkRecordWriter . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / BulkRecordWriter . java <nl> @ @ - 27 , 6 + 27 , 7 @ @ import java . util . * ; <nl> import java . util . concurrent . TimeUnit ; <nl> import java . util . concurrent . TimeoutException ; <nl> <nl> + import org . apache . cassandra . auth . IAuthenticator ; <nl> import org . apache . cassandra . config . Config ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . db . marshal . AbstractType ; <nl> @ @ - 131 , 8 + 132 , 13 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < Mutation > > <nl> if ( writer = = null ) <nl> { <nl> AbstractType < ? > subcomparator = null ; <nl> + ExternalClient externalClient = null ; <nl> + String username = ConfigHelper . getOutputKeyspaceUserName ( conf ) ; <nl> + String password = ConfigHelper . getOutputKeyspacePassword ( conf ) ; <nl> + <nl> if ( cfType = = CFType . SUPER ) <nl> subcomparator = BytesType . instance ; <nl> + <nl> this . writer = new SSTableSimpleUnsortedWriter ( <nl> outputdir , <nl> ConfigHelper . getOutputPartitioner ( conf ) , <nl> @ @ - 142 , 7 + 148 , 13 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < Mutation > > <nl> subcomparator , <nl> Integer . valueOf ( conf . get ( BUFFER _ SIZE _ IN _ MB , " 64 " ) ) , <nl> ConfigHelper . getOutputCompressionParamaters ( conf ) ) ; <nl> - this . loader = new SSTableLoader ( outputdir , new ExternalClient ( ConfigHelper . getOutputInitialAddress ( conf ) , ConfigHelper . getOutputRpcPort ( conf ) ) , new NullOutputHandler ( ) ) ; <nl> + <nl> + externalClient = new ExternalClient ( ConfigHelper . getOutputInitialAddress ( conf ) , <nl> + ConfigHelper . getOutputRpcPort ( conf ) , <nl> + username , <nl> + password ) ; <nl> + <nl> + this . loader = new SSTableLoader ( outputdir , externalClient , new NullOutputHandler ( ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 236 , 12 + 248 , 16 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < Mutation > > <nl> private final Map < String , Set < String > > knownCfs = new HashMap < String , Set < String > > ( ) ; <nl> private final String hostlist ; <nl> private final int rpcPort ; <nl> + private final String username ; <nl> + private final String password ; <nl> <nl> - public ExternalClient ( String hostlist , int port ) <nl> + public ExternalClient ( String hostlist , int port , String username , String password ) <nl> { <nl> super ( ) ; <nl> this . hostlist = hostlist ; <nl> this . rpcPort = port ; <nl> + this . username = username ; <nl> + this . password = password ; <nl> } <nl> <nl> public void init ( String keyspace ) <nl> @ @ - 266 , 6 + 282 , 18 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < Mutation > > <nl> { <nl> InetAddress host = hostiter . next ( ) ; <nl> Cassandra . Client client = createThriftClient ( host . getHostAddress ( ) , rpcPort ) ; <nl> + <nl> + / / log in <nl> + client . set _ keyspace ( keyspace ) ; <nl> + if ( username ! = null ) <nl> + { <nl> + Map < String , String > creds = new HashMap < String , String > ( ) ; <nl> + creds . put ( IAuthenticator . USERNAME _ KEY , username ) ; <nl> + creds . put ( IAuthenticator . PASSWORD _ KEY , password ) ; <nl> + AuthenticationRequest authRequest = new AuthenticationRequest ( creds ) ; <nl> + client . login ( authRequest ) ; <nl> + } <nl> + <nl> List < TokenRange > tokenRanges = client . describe _ ring ( keyspace ) ; <nl> List < KsDef > ksDefs = client . describe _ keyspaces ( ) ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / ConfigHelper . java b / src / java / org / apache / cassandra / hadoop / ConfigHelper . java <nl> index 8ec215e . . ea0ba79 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / ConfigHelper . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / ConfigHelper . java <nl> @ @ - 299 , 11 + 299 , 21 @ @ public class ConfigHelper <nl> return conf . get ( INPUT _ KEYSPACE _ PASSWD _ CONFIG ) ; <nl> } <nl> <nl> + public static void setOutputKeyspaceUserName ( Configuration conf , String username ) <nl> + { <nl> + conf . set ( OUTPUT _ KEYSPACE _ USERNAME _ CONFIG , username ) ; <nl> + } <nl> + <nl> public static String getOutputKeyspaceUserName ( Configuration conf ) <nl> { <nl> return conf . get ( OUTPUT _ KEYSPACE _ USERNAME _ CONFIG ) ; <nl> } <nl> <nl> + public static void setOutputKeyspacePassword ( Configuration conf , String password ) <nl> + { <nl> + conf . set ( OUTPUT _ KEYSPACE _ PASSWD _ CONFIG , password ) ; <nl> + } <nl> + <nl> public static String getOutputKeyspacePassword ( Configuration conf ) <nl> { <nl> return conf . get ( OUTPUT _ KEYSPACE _ PASSWD _ CONFIG ) ;

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java b / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java 
 index 96ca65d . . f4963fb 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java 
 + + + b / src / java / org / apache / cassandra / hadoop / AbstractColumnFamilyOutputFormat . java 
 @ @ - 124 , 18 + 124 , 24 @ @ public abstract class AbstractColumnFamilyOutputFormat < K , Y > extends OutputForma 
 TProtocol binaryProtocol = new TBinaryProtocol ( transport , true , true ) ; 
 Cassandra . Client client = new Cassandra . Client ( binaryProtocol ) ; 
 client . set _ keyspace ( ConfigHelper . getOutputKeyspace ( conf ) ) ; 
 - if ( ( ConfigHelper . getOutputKeyspaceUserName ( conf ) ! = null ) & & ( ConfigHelper . getOutputKeyspacePassword ( conf ) ! = null ) ) 
 - { 
 - Map < String , String > creds = new HashMap < String , String > ( ) ; 
 - creds . put ( IAuthenticator . USERNAME _ KEY , ConfigHelper . getOutputKeyspaceUserName ( conf ) ) ; 
 - creds . put ( IAuthenticator . PASSWORD _ KEY , ConfigHelper . getOutputKeyspacePassword ( conf ) ) ; 
 - AuthenticationRequest authRequest = new AuthenticationRequest ( creds ) ; 
 - client . login ( authRequest ) ; 
 - } 
 + String user = ConfigHelper . getOutputKeyspaceUserName ( conf ) ; 
 + String password = ConfigHelper . getOutputKeyspacePassword ( conf ) ; 
 + if ( ( user ! = null ) & & ( password ! = null ) ) 
 + login ( user , password , client ) ; 
 + 
 logger . debug ( " Authenticated client for CF output format created successfully " ) ; 
 return client ; 
 } 
 
 + public static void login ( String user , String password , Cassandra . Client client ) throws Exception 
 + { 
 + Map < String , String > creds = new HashMap < String , String > ( ) ; 
 + creds . put ( IAuthenticator . USERNAME _ KEY , user ) ; 
 + creds . put ( IAuthenticator . PASSWORD _ KEY , password ) ; 
 + AuthenticationRequest authRequest = new AuthenticationRequest ( creds ) ; 
 + client . login ( authRequest ) ; 
 + } 
 + 
 / * * 
 * An { @ link OutputCommitter } that does nothing . 
 * / 
 diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java 
 index 9c2e156 . . ee7aabf 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java 
 + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlRecordWriter . java 
 @ @ - 27 , 7 + 27 , 6 @ @ import org . apache . cassandra . hadoop . HadoopCompat ; 
 import org . apache . hadoop . util . Progressable ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 - 
 import org . apache . cassandra . db . marshal . AbstractType ; 
 import org . apache . cassandra . db . marshal . CompositeType ; 
 import org . apache . cassandra . db . marshal . LongType ; 
 @ @ - 36 , 6 + 35 , 7 @ @ import org . apache . cassandra . dht . Range ; 
 import org . apache . cassandra . dht . Token ; 
 import org . apache . cassandra . exceptions . ConfigurationException ; 
 import org . apache . cassandra . exceptions . SyntaxException ; 
 + import org . apache . cassandra . hadoop . AbstractColumnFamilyOutputFormat ; 
 import org . apache . cassandra . hadoop . AbstractColumnFamilyRecordWriter ; 
 import org . apache . cassandra . hadoop . ConfigHelper ; 
 import org . apache . cassandra . thrift . * ; 
 @ @ - 103 , 6 + 103 , 11 @ @ final class CqlRecordWriter extends AbstractColumnFamilyRecordWriter < Map < String , 
 try 
 { 
 Cassandra . Client client = ConfigHelper . getClientFromOutputAddressList ( conf ) ; 
 + client . set _ keyspace ( ConfigHelper . getOutputKeyspace ( conf ) ) ; 
 + String user = ConfigHelper . getOutputKeyspaceUserName ( conf ) ; 
 + String password = ConfigHelper . getOutputKeyspacePassword ( conf ) ; 
 + if ( ( user ! = null ) & & ( password ! = null ) ) 
 + AbstractColumnFamilyOutputFormat . login ( user , password , client ) ; 
 retrievePartitionKeyValidator ( client ) ; 
 String cqlQuery = CqlConfigHelper . getOutputCql ( conf ) . trim ( ) ; 
 if ( cqlQuery . toLowerCase ( ) . startsWith ( " insert " ) )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / hadoop / BulkRecordWriter . java b / src / java / org / apache / cassandra / hadoop / BulkRecordWriter . java 
 index ec72038 . . 42bb07e 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / BulkRecordWriter . java 
 + + + b / src / java / org / apache / cassandra / hadoop / BulkRecordWriter . java 
 @ @ - 27 , 6 + 27 , 7 @ @ import java . util . * ; 
 import java . util . concurrent . TimeUnit ; 
 import java . util . concurrent . TimeoutException ; 
 
 + import org . apache . cassandra . auth . IAuthenticator ; 
 import org . apache . cassandra . config . Config ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . db . marshal . AbstractType ; 
 @ @ - 131 , 8 + 132 , 13 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < Mutation > > 
 if ( writer = = null ) 
 { 
 AbstractType < ? > subcomparator = null ; 
 + ExternalClient externalClient = null ; 
 + String username = ConfigHelper . getOutputKeyspaceUserName ( conf ) ; 
 + String password = ConfigHelper . getOutputKeyspacePassword ( conf ) ; 
 + 
 if ( cfType = = CFType . SUPER ) 
 subcomparator = BytesType . instance ; 
 + 
 this . writer = new SSTableSimpleUnsortedWriter ( 
 outputdir , 
 ConfigHelper . getOutputPartitioner ( conf ) , 
 @ @ - 142 , 7 + 148 , 13 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < Mutation > > 
 subcomparator , 
 Integer . valueOf ( conf . get ( BUFFER _ SIZE _ IN _ MB , " 64 " ) ) , 
 ConfigHelper . getOutputCompressionParamaters ( conf ) ) ; 
 - this . loader = new SSTableLoader ( outputdir , new ExternalClient ( ConfigHelper . getOutputInitialAddress ( conf ) , ConfigHelper . getOutputRpcPort ( conf ) ) , new NullOutputHandler ( ) ) ; 
 + 
 + externalClient = new ExternalClient ( ConfigHelper . getOutputInitialAddress ( conf ) , 
 + ConfigHelper . getOutputRpcPort ( conf ) , 
 + username , 
 + password ) ; 
 + 
 + this . loader = new SSTableLoader ( outputdir , externalClient , new NullOutputHandler ( ) ) ; 
 } 
 } 
 
 @ @ - 236 , 12 + 248 , 16 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < Mutation > > 
 private final Map < String , Set < String > > knownCfs = new HashMap < String , Set < String > > ( ) ; 
 private final String hostlist ; 
 private final int rpcPort ; 
 + private final String username ; 
 + private final String password ; 
 
 - public ExternalClient ( String hostlist , int port ) 
 + public ExternalClient ( String hostlist , int port , String username , String password ) 
 { 
 super ( ) ; 
 this . hostlist = hostlist ; 
 this . rpcPort = port ; 
 + this . username = username ; 
 + this . password = password ; 
 } 
 
 public void init ( String keyspace ) 
 @ @ - 266 , 6 + 282 , 18 @ @ implements org . apache . hadoop . mapred . RecordWriter < ByteBuffer , List < Mutation > > 
 { 
 InetAddress host = hostiter . next ( ) ; 
 Cassandra . Client client = createThriftClient ( host . getHostAddress ( ) , rpcPort ) ; 
 + 
 + / / log in 
 + client . set _ keyspace ( keyspace ) ; 
 + if ( username ! = null ) 
 + { 
 + Map < String , String > creds = new HashMap < String , String > ( ) ; 
 + creds . put ( IAuthenticator . USERNAME _ KEY , username ) ; 
 + creds . put ( IAuthenticator . PASSWORD _ KEY , password ) ; 
 + AuthenticationRequest authRequest = new AuthenticationRequest ( creds ) ; 
 + client . login ( authRequest ) ; 
 + } 
 + 
 List < TokenRange > tokenRanges = client . describe _ ring ( keyspace ) ; 
 List < KsDef > ksDefs = client . describe _ keyspaces ( ) ; 
 
 diff - - git a / src / java / org / apache / cassandra / hadoop / ConfigHelper . java b / src / java / org / apache / cassandra / hadoop / ConfigHelper . java 
 index 8ec215e . . ea0ba79 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / ConfigHelper . java 
 + + + b / src / java / org / apache / cassandra / hadoop / ConfigHelper . java 
 @ @ - 299 , 11 + 299 , 21 @ @ public class ConfigHelper 
 return conf . get ( INPUT _ KEYSPACE _ PASSWD _ CONFIG ) ; 
 } 
 
 + public static void setOutputKeyspaceUserName ( Configuration conf , String username ) 
 + { 
 + conf . set ( OUTPUT _ KEYSPACE _ USERNAME _ CONFIG , username ) ; 
 + } 
 + 
 public static String getOutputKeyspaceUserName ( Configuration conf ) 
 { 
 return conf . get ( OUTPUT _ KEYSPACE _ USERNAME _ CONFIG ) ; 
 } 
 
 + public static void setOutputKeyspacePassword ( Configuration conf , String password ) 
 + { 
 + conf . set ( OUTPUT _ KEYSPACE _ PASSWD _ CONFIG , password ) ; 
 + } 
 + 
 public static String getOutputKeyspacePassword ( Configuration conf ) 
 { 
 return conf . get ( OUTPUT _ KEYSPACE _ PASSWD _ CONFIG ) ;
