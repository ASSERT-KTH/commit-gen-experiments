BLEU SCORE: 0.07986788803078405

TEST MSG: Fix nodetool compactionstats NPE
GENERATED MSG: make NetworkTopologyStrategy the default

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index a65a147 . . 4d8bb3a 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 11 <nl> + * Nodetool compactionstats fails with NullPointerException ( CASSANDRA - 13021 ) <nl> * Thread local pools never cleaned up ( CASSANDRA - 13033 ) <nl> * Set RPC _ READY to false when draining or if a node is marked as shutdown ( CASSANDRA - 12781 ) <nl> * CQL often queries static columns unnecessarily ( CASSANDRA - 12768 ) <nl> diff - - git a / src / java / org / apache / cassandra / tools / nodetool / CompactionStats . java b / src / java / org / apache / cassandra / tools / nodetool / CompactionStats . java <nl> index e57d2ee . . bac23c2 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / nodetool / CompactionStats . java <nl> + + + b / src / java / org / apache / cassandra / tools / nodetool / CompactionStats . java <nl> @ @ - 30 , 7 + 30 , 6 @ @ import org . apache . cassandra . db . compaction . CompactionManagerMBean ; <nl> import org . apache . cassandra . db . compaction . OperationType ; <nl> import org . apache . cassandra . io . util . FileUtils ; <nl> import org . apache . cassandra . tools . NodeProbe ; <nl> - import org . apache . cassandra . tools . NodeTool ; <nl> import org . apache . cassandra . tools . NodeTool . NodeToolCmd ; <nl> <nl> @ Command ( name = " compactionstats " , description = " Print statistics on compactions " ) <nl> @ @ - 96 , 10 + 95 , 14 @ @ public class CompactionStats extends NodeToolCmd <nl> } <nl> } <nl> <nl> - private void addLine ( List < String [ ] > lines , int [ ] columnSizes , String . . . columns ) { <nl> - lines . add ( columns ) ; <nl> - for ( int i = 0 ; i < columns . length ; i + + ) { <nl> - columnSizes [ i ] = Math . max ( columnSizes [ i ] , columns [ i ] . length ( ) ) ; <nl> + private void addLine ( List < String [ ] > lines , int [ ] columnSizes , String . . . columns ) <nl> + { <nl> + String [ ] newColumns = new String [ columns . length ] ; <nl> + for ( int i = 0 ; i < columns . length ; i + + ) <nl> + { <nl> + columnSizes [ i ] = Math . max ( columnSizes [ i ] , columns [ i ] ! = null ? columns [ i ] . length ( ) : 1 ) ; <nl> + newColumns [ i ] = columns [ i ] ! = null ? columns [ i ] : " " ; <nl> } <nl> + lines . add ( newColumns ) ; <nl> } <nl> - } <nl> \ No newline at end of file <nl> + }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 6f30f7a . . c9c8150 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 6 + 1 , 7 @ @ <nl> 0 . 8 - dev <nl> * avoid double RowMutation serialization on write path ( CASSANDRA - 1800 ) <nl> * adds support for columns that act as incr / decr counters ( CASSANDRA - 1072 ) <nl> + * make NetworkTopologyStrategy the default ( CASSANDRA - 1960 ) <nl> <nl> <nl> 0 . 7 . 1 - dev <nl> diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml <nl> index 66cda46 . . 4bdf966 100644 <nl> - - - a / conf / cassandra . yaml <nl> + + + b / conf / cassandra . yaml <nl> @ @ - 314 , 8 + 314 , 7 @ @ index _ interval : 128 <nl> # With NetworkTopologyStrategy , <nl> # for each datacenter , you can specify how many replicas you want <nl> # on a per - keyspace basis . Replicas are placed on different racks <nl> - # within each DC , if possible . This strategy also requires rack aware <nl> - # snitch , such as RackInferringSnitch or PropertyFileSnitch . <nl> + # within each DC , if possible . <nl> # An example : <nl> # - name : Keyspace1 <nl> # replica _ placement _ strategy : org . apache . cassandra . locator . NetworkTopologyStrategy <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java <nl> index 0d5d014 . . de31e11 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliClient . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliClient . java <nl> @ @ - 18 , 6 + 18 , 8 @ @ <nl> package org . apache . cassandra . cli ; <nl> <nl> import java . io . IOException ; <nl> + import java . net . InetAddress ; <nl> + import java . net . UnknownHostException ; <nl> import java . nio . ByteBuffer ; <nl> import java . util . * ; <nl> <nl> @ @ - 29 , 6 + 31 , 7 @ @ import org . apache . cassandra . config . ConfigurationException ; <nl> import org . apache . cassandra . db . ColumnFamilyStoreMBean ; <nl> import org . apache . cassandra . db . CompactionManagerMBean ; <nl> import org . apache . cassandra . db . marshal . * ; <nl> + import org . apache . cassandra . locator . SimpleSnitch ; <nl> import org . apache . cassandra . thrift . * ; <nl> import org . apache . cassandra . tools . NodeProbe ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> @ @ - 92 , 7 + 95 , 8 @ @ public class CliClient extends CliUserHelp <nl> PLACEMENT _ STRATEGY , <nl> STRATEGY _ OPTIONS <nl> } <nl> - private static final String DEFAULT _ PLACEMENT _ STRATEGY = " org . apache . cassandra . locator . SimpleStrategy " ; <nl> + <nl> + private static final String DEFAULT _ PLACEMENT _ STRATEGY = " org . apache . cassandra . locator . NetworkTopologyStrategy " ; <nl> <nl> private Cassandra . Client thriftClient = null ; <nl> private CliSessionState sessionState = null ; <nl> @ @ - 803 , 6 + 807 , 30 @ @ public class CliClient extends CliUserHelp <nl> } <nl> } <nl> <nl> + / / using default snitch options if strategy is NetworkTopologyStrategy and no options were set . <nl> + if ( ksDef . getStrategy _ class ( ) . contains ( " . NetworkTopologyStrategy " ) ) <nl> + { <nl> + Map < String , String > currentStrategyOptions = ksDef . getStrategy _ options ( ) ; <nl> + <nl> + / / adding default data center from SimpleSnitch <nl> + if ( currentStrategyOptions = = null | | currentStrategyOptions . isEmpty ( ) ) <nl> + { <nl> + SimpleSnitch snitch = new SimpleSnitch ( ) ; <nl> + Map < String , String > options = new HashMap < String , String > ( ) ; <nl> + <nl> + try <nl> + { <nl> + options . put ( snitch . getDatacenter ( InetAddress . getLocalHost ( ) ) , " 1 " ) ; <nl> + } <nl> + catch ( UnknownHostException e ) <nl> + { <nl> + throw new RuntimeException ( e . getMessage ( ) ) ; <nl> + } <nl> + <nl> + ksDef . setStrategy _ options ( options ) ; <nl> + } <nl> + } <nl> + <nl> return ksDef ; <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / config / KSMetaData . java b / src / java / org / apache / cassandra / config / KSMetaData . java <nl> index ca6e732 . . 753a974 100644 <nl> - - - a / src / java / org / apache / cassandra / config / KSMetaData . java <nl> + + + b / src / java / org / apache / cassandra / config / KSMetaData . java <nl> @ @ - 28 , 7 + 28 , 7 @ @ import org . apache . commons . lang . ObjectUtils ; <nl> import org . apache . avro . util . Utf8 ; <nl> import org . apache . cassandra . io . SerDeUtils ; <nl> import org . apache . cassandra . locator . AbstractReplicationStrategy ; <nl> - import org . apache . cassandra . locator . SimpleStrategy ; <nl> + import org . apache . cassandra . locator . NetworkTopologyStrategy ; <nl> <nl> public final class KSMetaData <nl> { <nl> @ @ - 41 , 7 + 41 , 7 @ @ public final class KSMetaData <nl> public KSMetaData ( String name , Class < ? extends AbstractReplicationStrategy > strategyClass , Map < String , String > strategyOptions , int replicationFactor , CFMetaData . . . cfDefs ) <nl> { <nl> this . name = name ; <nl> - this . strategyClass = strategyClass = = null ? SimpleStrategy . class : strategyClass ; <nl> + this . strategyClass = strategyClass = = null ? NetworkTopologyStrategy . class : strategyClass ; <nl> this . strategyOptions = strategyOptions ; <nl> this . replicationFactor = replicationFactor ; <nl> Map < String , CFMetaData > cfmap = new HashMap < String , CFMetaData > ( ) ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index a65a147 . . 4d8bb3a 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 11 
 + * Nodetool compactionstats fails with NullPointerException ( CASSANDRA - 13021 ) 
 * Thread local pools never cleaned up ( CASSANDRA - 13033 ) 
 * Set RPC _ READY to false when draining or if a node is marked as shutdown ( CASSANDRA - 12781 ) 
 * CQL often queries static columns unnecessarily ( CASSANDRA - 12768 ) 
 diff - - git a / src / java / org / apache / cassandra / tools / nodetool / CompactionStats . java b / src / java / org / apache / cassandra / tools / nodetool / CompactionStats . java 
 index e57d2ee . . bac23c2 100644 
 - - - a / src / java / org / apache / cassandra / tools / nodetool / CompactionStats . java 
 + + + b / src / java / org / apache / cassandra / tools / nodetool / CompactionStats . java 
 @ @ - 30 , 7 + 30 , 6 @ @ import org . apache . cassandra . db . compaction . CompactionManagerMBean ; 
 import org . apache . cassandra . db . compaction . OperationType ; 
 import org . apache . cassandra . io . util . FileUtils ; 
 import org . apache . cassandra . tools . NodeProbe ; 
 - import org . apache . cassandra . tools . NodeTool ; 
 import org . apache . cassandra . tools . NodeTool . NodeToolCmd ; 
 
 @ Command ( name = " compactionstats " , description = " Print statistics on compactions " ) 
 @ @ - 96 , 10 + 95 , 14 @ @ public class CompactionStats extends NodeToolCmd 
 } 
 } 
 
 - private void addLine ( List < String [ ] > lines , int [ ] columnSizes , String . . . columns ) { 
 - lines . add ( columns ) ; 
 - for ( int i = 0 ; i < columns . length ; i + + ) { 
 - columnSizes [ i ] = Math . max ( columnSizes [ i ] , columns [ i ] . length ( ) ) ; 
 + private void addLine ( List < String [ ] > lines , int [ ] columnSizes , String . . . columns ) 
 + { 
 + String [ ] newColumns = new String [ columns . length ] ; 
 + for ( int i = 0 ; i < columns . length ; i + + ) 
 + { 
 + columnSizes [ i ] = Math . max ( columnSizes [ i ] , columns [ i ] ! = null ? columns [ i ] . length ( ) : 1 ) ; 
 + newColumns [ i ] = columns [ i ] ! = null ? columns [ i ] : " " ; 
 } 
 + lines . add ( newColumns ) ; 
 } 
 - } 
 \ No newline at end of file 
 + }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 6f30f7a . . c9c8150 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 0 . 8 - dev 
 * avoid double RowMutation serialization on write path ( CASSANDRA - 1800 ) 
 * adds support for columns that act as incr / decr counters ( CASSANDRA - 1072 ) 
 + * make NetworkTopologyStrategy the default ( CASSANDRA - 1960 ) 
 
 
 0 . 7 . 1 - dev 
 diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml 
 index 66cda46 . . 4bdf966 100644 
 - - - a / conf / cassandra . yaml 
 + + + b / conf / cassandra . yaml 
 @ @ - 314 , 8 + 314 , 7 @ @ index _ interval : 128 
 # With NetworkTopologyStrategy , 
 # for each datacenter , you can specify how many replicas you want 
 # on a per - keyspace basis . Replicas are placed on different racks 
 - # within each DC , if possible . This strategy also requires rack aware 
 - # snitch , such as RackInferringSnitch or PropertyFileSnitch . 
 + # within each DC , if possible . 
 # An example : 
 # - name : Keyspace1 
 # replica _ placement _ strategy : org . apache . cassandra . locator . NetworkTopologyStrategy 
 diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java 
 index 0d5d014 . . de31e11 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliClient . java 
 + + + b / src / java / org / apache / cassandra / cli / CliClient . java 
 @ @ - 18 , 6 + 18 , 8 @ @ 
 package org . apache . cassandra . cli ; 
 
 import java . io . IOException ; 
 + import java . net . InetAddress ; 
 + import java . net . UnknownHostException ; 
 import java . nio . ByteBuffer ; 
 import java . util . * ; 
 
 @ @ - 29 , 6 + 31 , 7 @ @ import org . apache . cassandra . config . ConfigurationException ; 
 import org . apache . cassandra . db . ColumnFamilyStoreMBean ; 
 import org . apache . cassandra . db . CompactionManagerMBean ; 
 import org . apache . cassandra . db . marshal . * ; 
 + import org . apache . cassandra . locator . SimpleSnitch ; 
 import org . apache . cassandra . thrift . * ; 
 import org . apache . cassandra . tools . NodeProbe ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 @ @ - 92 , 7 + 95 , 8 @ @ public class CliClient extends CliUserHelp 
 PLACEMENT _ STRATEGY , 
 STRATEGY _ OPTIONS 
 } 
 - private static final String DEFAULT _ PLACEMENT _ STRATEGY = " org . apache . cassandra . locator . SimpleStrategy " ; 
 + 
 + private static final String DEFAULT _ PLACEMENT _ STRATEGY = " org . apache . cassandra . locator . NetworkTopologyStrategy " ; 
 
 private Cassandra . Client thriftClient = null ; 
 private CliSessionState sessionState = null ; 
 @ @ - 803 , 6 + 807 , 30 @ @ public class CliClient extends CliUserHelp 
 } 
 } 
 
 + / / using default snitch options if strategy is NetworkTopologyStrategy and no options were set . 
 + if ( ksDef . getStrategy _ class ( ) . contains ( " . NetworkTopologyStrategy " ) ) 
 + { 
 + Map < String , String > currentStrategyOptions = ksDef . getStrategy _ options ( ) ; 
 + 
 + / / adding default data center from SimpleSnitch 
 + if ( currentStrategyOptions = = null | | currentStrategyOptions . isEmpty ( ) ) 
 + { 
 + SimpleSnitch snitch = new SimpleSnitch ( ) ; 
 + Map < String , String > options = new HashMap < String , String > ( ) ; 
 + 
 + try 
 + { 
 + options . put ( snitch . getDatacenter ( InetAddress . getLocalHost ( ) ) , " 1 " ) ; 
 + } 
 + catch ( UnknownHostException e ) 
 + { 
 + throw new RuntimeException ( e . getMessage ( ) ) ; 
 + } 
 + 
 + ksDef . setStrategy _ options ( options ) ; 
 + } 
 + } 
 + 
 return ksDef ; 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / config / KSMetaData . java b / src / java / org / apache / cassandra / config / KSMetaData . java 
 index ca6e732 . . 753a974 100644 
 - - - a / src / java / org / apache / cassandra / config / KSMetaData . java 
 + + + b / src / java / org / apache / cassandra / config / KSMetaData . java 
 @ @ - 28 , 7 + 28 , 7 @ @ import org . apache . commons . lang . ObjectUtils ; 
 import org . apache . avro . util . Utf8 ; 
 import org . apache . cassandra . io . SerDeUtils ; 
 import org . apache . cassandra . locator . AbstractReplicationStrategy ; 
 - import org . apache . cassandra . locator . SimpleStrategy ; 
 + import org . apache . cassandra . locator . NetworkTopologyStrategy ; 
 
 public final class KSMetaData 
 { 
 @ @ - 41 , 7 + 41 , 7 @ @ public final class KSMetaData 
 public KSMetaData ( String name , Class < ? extends AbstractReplicationStrategy > strategyClass , Map < String , String > strategyOptions , int replicationFactor , CFMetaData . . . cfDefs ) 
 { 
 this . name = name ; 
 - this . strategyClass = strategyClass = = null ? SimpleStrategy . class : strategyClass ; 
 + this . strategyClass = strategyClass = = null ? NetworkTopologyStrategy . class : strategyClass ; 
 this . strategyOptions = strategyOptions ; 
 this . replicationFactor = replicationFactor ; 
 Map < String , CFMetaData > cfmap = new HashMap < String , CFMetaData > ( ) ;
