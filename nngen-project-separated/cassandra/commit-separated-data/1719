BLEU SCORE: 0.020980574531482755

TEST MSG: follow up to CASSANDRA - 8670 , further optimising writeUTF
GENERATED MSG: fix BufferedRandomAccessFile bugs

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java b / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java <nl> index 6e33e60 . . 70435a1 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java <nl> + + + b / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java <nl> @ @ - 253 , 15 + 253 , 16 @ @ public abstract class UnbufferedDataOutputStreamPlus extends DataOutputStreamPlu <nl> { <nl> int length = str . length ( ) ; <nl> int utfCount = 0 ; <nl> + int maxSize = 2 ; <nl> for ( int i = 0 ; i < length ; i + + ) <nl> { <nl> int ch = str . charAt ( i ) ; <nl> - if ( ( ch > 0 ) & & ( ch < = 127 ) ) <nl> + if ( ( ch > 0 ) & ( ch < = 127 ) ) <nl> utfCount + = 1 ; <nl> else if ( ch < = 2047 ) <nl> utfCount + = 2 ; <nl> else <nl> - utfCount + = 3 ; <nl> + utfCount + = maxSize = 3 ; <nl> } <nl> <nl> if ( utfCount > 65535 ) <nl> @ @ - 289 , 33 + 290 , 45 @ @ public abstract class UnbufferedDataOutputStreamPlus extends DataOutputStreamPlu <nl> else <nl> { <nl> int utfIndex = 2 ; <nl> + int offset = 0 ; <nl> utfBytes [ 0 ] = ( byte ) ( utfCount > > 8 ) ; <nl> utfBytes [ 1 ] = ( byte ) utfCount ; <nl> - for ( int charIndex = 0 ; charIndex < length ; charIndex + + ) <nl> + <nl> + while ( length > 0 ) <nl> { <nl> - if ( utfIndex + 3 > bufferLength ) <nl> + int charRunLength = ( utfBytes . length - utfIndex ) / maxSize ; <nl> + if ( charRunLength < 128 & & charRunLength < length ) <nl> { <nl> out . write ( utfBytes , 0 , utfIndex ) ; <nl> utfIndex = 0 ; <nl> } <nl> + if ( charRunLength > length ) <nl> + charRunLength = length ; <nl> <nl> - char ch = str . charAt ( charIndex ) ; <nl> - if ( ( ch > 0 ) & & ( ch < = 127 ) ) <nl> - { <nl> - utfBytes [ utfIndex + + ] = ( byte ) ch ; <nl> - } <nl> - else if ( ch < = 2047 ) <nl> + for ( int i = 0 ; i < charRunLength ; i + + ) <nl> { <nl> - utfBytes [ utfIndex + + ] = ( byte ) ( 0xc0 | ( 0x1f & ( ch > > 6 ) ) ) ; <nl> - utfBytes [ utfIndex + + ] = ( byte ) ( 0x80 | ( 0x3f & ch ) ) ; <nl> - } <nl> - else <nl> - { <nl> - utfBytes [ utfIndex + + ] = ( byte ) ( 0xe0 | ( 0x0f & ( ch > > 12 ) ) ) ; <nl> - utfBytes [ utfIndex + + ] = ( byte ) ( 0x80 | ( 0x3f & ( ch > > 6 ) ) ) ; <nl> - utfBytes [ utfIndex + + ] = ( byte ) ( 0x80 | ( 0x3f & ch ) ) ; <nl> + char ch = str . charAt ( offset + i ) ; <nl> + if ( ( ch > 0 ) & ( ch < = 127 ) ) <nl> + { <nl> + utfBytes [ utfIndex + + ] = ( byte ) ch ; <nl> + } <nl> + else if ( ch < = 2047 ) <nl> + { <nl> + utfBytes [ utfIndex + + ] = ( byte ) ( 0xc0 | ( 0x1f & ( ch > > 6 ) ) ) ; <nl> + utfBytes [ utfIndex + + ] = ( byte ) ( 0x80 | ( 0x3f & ch ) ) ; <nl> + } <nl> + else <nl> + { <nl> + utfBytes [ utfIndex + + ] = ( byte ) ( 0xe0 | ( 0x0f & ( ch > > 12 ) ) ) ; <nl> + utfBytes [ utfIndex + + ] = ( byte ) ( 0x80 | ( 0x3f & ( ch > > 6 ) ) ) ; <nl> + utfBytes [ utfIndex + + ] = ( byte ) ( 0x80 | ( 0x3f & ch ) ) ; <nl> + } <nl> } <nl> + <nl> + offset + = charRunLength ; <nl> + length - = charRunLength ; <nl> } <nl> + <nl> out . write ( utfBytes , 0 , utfIndex ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 6a81863 . . 9431ac3 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 673 , 6 + 673 , 7 @ @ <nl> < javadoc destdir = " $ { javadoc . dir } " author = " true " version = " true " use = " true " <nl> windowtitle = " $ { ant . project . name } API " classpathref = " cassandra . classpath " <nl> bottom = " Copyright & amp ; copy ; $ { YEAR } The Apache Software Foundation " <nl> + useexternalfile = " yes " <nl> maxmemory = " 256m " > <nl> <nl> < fileset dir = " $ { build . src . java } " defaultexcludes = " yes " >

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java b / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java 
 index 6e33e60 . . 70435a1 100644 
 - - - a / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java 
 + + + b / src / java / org / apache / cassandra / io / util / UnbufferedDataOutputStreamPlus . java 
 @ @ - 253 , 15 + 253 , 16 @ @ public abstract class UnbufferedDataOutputStreamPlus extends DataOutputStreamPlu 
 { 
 int length = str . length ( ) ; 
 int utfCount = 0 ; 
 + int maxSize = 2 ; 
 for ( int i = 0 ; i < length ; i + + ) 
 { 
 int ch = str . charAt ( i ) ; 
 - if ( ( ch > 0 ) & & ( ch < = 127 ) ) 
 + if ( ( ch > 0 ) & ( ch < = 127 ) ) 
 utfCount + = 1 ; 
 else if ( ch < = 2047 ) 
 utfCount + = 2 ; 
 else 
 - utfCount + = 3 ; 
 + utfCount + = maxSize = 3 ; 
 } 
 
 if ( utfCount > 65535 ) 
 @ @ - 289 , 33 + 290 , 45 @ @ public abstract class UnbufferedDataOutputStreamPlus extends DataOutputStreamPlu 
 else 
 { 
 int utfIndex = 2 ; 
 + int offset = 0 ; 
 utfBytes [ 0 ] = ( byte ) ( utfCount > > 8 ) ; 
 utfBytes [ 1 ] = ( byte ) utfCount ; 
 - for ( int charIndex = 0 ; charIndex < length ; charIndex + + ) 
 + 
 + while ( length > 0 ) 
 { 
 - if ( utfIndex + 3 > bufferLength ) 
 + int charRunLength = ( utfBytes . length - utfIndex ) / maxSize ; 
 + if ( charRunLength < 128 & & charRunLength < length ) 
 { 
 out . write ( utfBytes , 0 , utfIndex ) ; 
 utfIndex = 0 ; 
 } 
 + if ( charRunLength > length ) 
 + charRunLength = length ; 
 
 - char ch = str . charAt ( charIndex ) ; 
 - if ( ( ch > 0 ) & & ( ch < = 127 ) ) 
 - { 
 - utfBytes [ utfIndex + + ] = ( byte ) ch ; 
 - } 
 - else if ( ch < = 2047 ) 
 + for ( int i = 0 ; i < charRunLength ; i + + ) 
 { 
 - utfBytes [ utfIndex + + ] = ( byte ) ( 0xc0 | ( 0x1f & ( ch > > 6 ) ) ) ; 
 - utfBytes [ utfIndex + + ] = ( byte ) ( 0x80 | ( 0x3f & ch ) ) ; 
 - } 
 - else 
 - { 
 - utfBytes [ utfIndex + + ] = ( byte ) ( 0xe0 | ( 0x0f & ( ch > > 12 ) ) ) ; 
 - utfBytes [ utfIndex + + ] = ( byte ) ( 0x80 | ( 0x3f & ( ch > > 6 ) ) ) ; 
 - utfBytes [ utfIndex + + ] = ( byte ) ( 0x80 | ( 0x3f & ch ) ) ; 
 + char ch = str . charAt ( offset + i ) ; 
 + if ( ( ch > 0 ) & ( ch < = 127 ) ) 
 + { 
 + utfBytes [ utfIndex + + ] = ( byte ) ch ; 
 + } 
 + else if ( ch < = 2047 ) 
 + { 
 + utfBytes [ utfIndex + + ] = ( byte ) ( 0xc0 | ( 0x1f & ( ch > > 6 ) ) ) ; 
 + utfBytes [ utfIndex + + ] = ( byte ) ( 0x80 | ( 0x3f & ch ) ) ; 
 + } 
 + else 
 + { 
 + utfBytes [ utfIndex + + ] = ( byte ) ( 0xe0 | ( 0x0f & ( ch > > 12 ) ) ) ; 
 + utfBytes [ utfIndex + + ] = ( byte ) ( 0x80 | ( 0x3f & ( ch > > 6 ) ) ) ; 
 + utfBytes [ utfIndex + + ] = ( byte ) ( 0x80 | ( 0x3f & ch ) ) ; 
 + } 
 } 
 + 
 + offset + = charRunLength ; 
 + length - = charRunLength ; 
 } 
 + 
 out . write ( utfBytes , 0 , utfIndex ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / build . xml b / build . xml 
 index 6a81863 . . 9431ac3 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 673 , 6 + 673 , 7 @ @ 
 < javadoc destdir = " $ { javadoc . dir } " author = " true " version = " true " use = " true " 
 windowtitle = " $ { ant . project . name } API " classpathref = " cassandra . classpath " 
 bottom = " Copyright & amp ; copy ; $ { YEAR } The Apache Software Foundation " 
 + useexternalfile = " yes " 
 maxmemory = " 256m " > 
 
 < fileset dir = " $ { build . src . java } " defaultexcludes = " yes " >
