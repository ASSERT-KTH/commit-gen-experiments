BLEU SCORE: 0.018738883683389617

TEST MSG: Make ' static final boolean ' easier to optimize for Hotspot
GENERATED MSG: add disk _ failure _ policy

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index d74d4ad . . 15aee59 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 1920 , 7 + 1920 , 7 @ @ public class DatabaseDescriptor <nl> <nl> public static int getSSTablePreempiveOpenIntervalInMB ( ) <nl> { <nl> - return FBUtilities . isWindows ( ) ? - 1 : conf . sstable _ preemptive _ open _ interval _ in _ mb ; <nl> + return FBUtilities . isWindows ? - 1 : conf . sstable _ preemptive _ open _ interval _ in _ mb ; <nl> } <nl> public static void setSSTablePreempiveOpenIntervalInMB ( int mb ) <nl> { <nl> @ @ - 2075 , 7 + 2075 , 7 @ @ public class DatabaseDescriptor <nl> case heap _ buffers : <nl> return new SlabPool ( heapLimit , 0 , conf . memtable _ cleanup _ threshold , new ColumnFamilyStore . FlushLargestColumnFamily ( ) ) ; <nl> case offheap _ buffers : <nl> - if ( ! FileUtils . isCleanerAvailable ( ) ) <nl> + if ( ! FileUtils . isCleanerAvailable ) <nl> { <nl> throw new IllegalStateException ( " Could not free direct byte buffer : offheap _ buffers is not a safe memtable _ allocation _ type without this ability , please adjust your config . This feature is only guaranteed to work on an Oracle JVM . Refusing to start . " ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / Directories . java b / src / java / org / apache / cassandra / db / Directories . java <nl> index 3533dbc . . 2f141fc 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Directories . java <nl> + + + b / src / java / org / apache / cassandra / db / Directories . java <nl> @ @ - 889 , 7 + 889 , 7 @ @ public class Directories <nl> } <nl> catch ( FSWriteError e ) <nl> { <nl> - if ( FBUtilities . isWindows ( ) ) <nl> + if ( FBUtilities . isWindows ) <nl> SnapshotDeletingTask . addFailedSnapshot ( snapshotDir ) ; <nl> else <nl> throw e ; <nl> diff - - git a / src / java / org / apache / cassandra / db / commitlog / MemoryMappedSegment . java b / src / java / org / apache / cassandra / db / commitlog / MemoryMappedSegment . java <nl> index 2bbd12d . . 94e45e0 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / MemoryMappedSegment . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / MemoryMappedSegment . java <nl> @ @ - 110 , 7 + 110 , 7 @ @ public class MemoryMappedSegment extends CommitLogSegment <nl> @ Override <nl> protected void internalClose ( ) <nl> { <nl> - if ( FileUtils . isCleanerAvailable ( ) ) <nl> + if ( FileUtils . isCleanerAvailable ) <nl> FileUtils . clean ( buffer ) ; <nl> super . internalClose ( ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionController . java b / src / java / org / apache / cassandra / db / compaction / CompactionController . java <nl> index 08ad0c0 . . 7d4b8aa 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionController . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionController . java <nl> @ @ - 152 , 7 + 152 , 7 @ @ public class CompactionController implements AutoCloseable <nl> { <nl> logger . trace ( " Checking droppable sstables in { } " , cfStore ) ; <nl> <nl> - if ( compacting = = null | | NEVER _ PURGE _ TOMBSTONES ) <nl> + if ( NEVER _ PURGE _ TOMBSTONES | | compacting = = null ) <nl> return Collections . < SSTableReader > emptySet ( ) ; <nl> <nl> if ( cfStore . getCompactionStrategyManager ( ) . onlyPurgeRepairedTombstones ( ) & & ! Iterables . all ( compacting , SSTableReader : : isRepaired ) ) <nl> @ @ - 222 , 7 + 222 , 7 @ @ public class CompactionController implements AutoCloseable <nl> * / <nl> public long maxPurgeableTimestamp ( DecoratedKey key ) <nl> { <nl> - if ( ! compactingRepaired ( ) | | NEVER _ PURGE _ TOMBSTONES ) <nl> + if ( NEVER _ PURGE _ TOMBSTONES | | ! compactingRepaired ( ) ) <nl> return Long . MIN _ VALUE ; <nl> <nl> long min = Long . MAX _ VALUE ; <nl> diff - - git a / src / java / org / apache / cassandra / db / view / ViewManager . java b / src / java / org / apache / cassandra / db / view / ViewManager . java <nl> index 14bcd58 . . b30ad2a 100644 <nl> - - - a / src / java / org / apache / cassandra / db / view / ViewManager . java <nl> + + + b / src / java / org / apache / cassandra / db / view / ViewManager . java <nl> @ @ - 68 , 7 + 68 , 7 @ @ public class ViewManager <nl> <nl> public boolean updatesAffectView ( Collection < ? extends IMutation > mutations , boolean coordinatorBatchlog ) <nl> { <nl> - if ( coordinatorBatchlog & & ! enableCoordinatorBatchlog ) <nl> + if ( ! enableCoordinatorBatchlog & & coordinatorBatchlog ) <nl> return false ; <nl> <nl> for ( IMutation mutation : mutations ) <nl> diff - - git a / src / java / org / apache / cassandra / index / sasi / utils / MappedBuffer . java b / src / java / org / apache / cassandra / index / sasi / utils / MappedBuffer . java <nl> index 37ab1be . . efabe7b 100644 <nl> - - - a / src / java / org / apache / cassandra / index / sasi / utils / MappedBuffer . java <nl> + + + b / src / java / org / apache / cassandra / index / sasi / utils / MappedBuffer . java <nl> @ @ - 217 , 7 + 217 , 7 @ @ public class MappedBuffer implements Closeable <nl> <nl> public void close ( ) <nl> { <nl> - if ( ! FileUtils . isCleanerAvailable ( ) ) <nl> + if ( ! FileUtils . isCleanerAvailable ) <nl> return ; <nl> <nl> / * <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / metadata / MetadataSerializer . java b / src / java / org / apache / cassandra / io / sstable / metadata / MetadataSerializer . java <nl> index abc6eaa . . e6e0953 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / metadata / MetadataSerializer . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / metadata / MetadataSerializer . java <nl> @ @ - 155 , 7 + 155 , 7 @ @ public class MetadataSerializer implements IMetadataSerializer <nl> out . flush ( ) ; <nl> } <nl> / / we cant move a file on top of another file in windows : <nl> - if ( FBUtilities . isWindows ( ) ) <nl> + if ( FBUtilities . isWindows ) <nl> FileUtils . delete ( descriptor . filenameFor ( Component . STATS ) ) ; <nl> FileUtils . renameWithConfirm ( filePath , descriptor . filenameFor ( Component . STATS ) ) ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / io / util / FileUtils . java b / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> index 39c7800 . . abb39d3 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> + + + b / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> @ @ - 57 , 7 + 57 , 7 @ @ public final class FileUtils <nl> private static final double TB = 1024 * 1024 * 1024 * 1024d ; <nl> <nl> private static final DecimalFormat df = new DecimalFormat ( " # . # # " ) ; <nl> - private static final boolean canCleanDirectBuffers ; <nl> + public static final boolean isCleanerAvailable ; <nl> private static final AtomicReference < Optional < FSErrorHandler > > fsErrorHandler = new AtomicReference < > ( Optional . empty ( ) ) ; <nl> <nl> static <nl> @ @ - 74 , 7 + 74 , 7 @ @ public final class FileUtils <nl> JVMStabilityInspector . inspectThrowable ( t ) ; <nl> logger . info ( " Cannot initialize un - mmaper . ( Are you using a non - Oracle JVM ? ) Compacted data files will not be removed promptly . Consider using an Oracle JVM or using standard disk access mode " ) ; <nl> } <nl> - canCleanDirectBuffers = canClean ; <nl> + isCleanerAvailable = canClean ; <nl> } <nl> <nl> public static void createHardLink ( String from , String to ) <nl> @ @ - 334 , 16 + 334 , 11 @ @ public final class FileUtils <nl> } <nl> } <nl> <nl> - public static boolean isCleanerAvailable ( ) <nl> - { <nl> - return canCleanDirectBuffers ; <nl> - } <nl> - <nl> public static void clean ( ByteBuffer buffer ) <nl> { <nl> if ( buffer = = null ) <nl> return ; <nl> - if ( isCleanerAvailable ( ) & & buffer . isDirect ( ) ) <nl> + if ( isCleanerAvailable & & buffer . isDirect ( ) ) <nl> { <nl> DirectBuffer db = ( DirectBuffer ) buffer ; <nl> if ( db . cleaner ( ) ! = null ) <nl> diff - - git a / src / java / org / apache / cassandra / io / util / MmappedRegions . java b / src / java / org / apache / cassandra / io / util / MmappedRegions . java <nl> index 9ab8abf . . 13b476a 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / MmappedRegions . java <nl> + + + b / src / java / org / apache / cassandra / io / util / MmappedRegions . java <nl> @ @ - 330 , 7 + 330 , 7 @ @ public class MmappedRegions extends SharedCloseableImpl <nl> * If this fails ( non Sun JVM ) , we ' ll have to wait for the GC to finalize the mapping . <nl> * If this works and a thread tries to access any segment , hell will unleash on earth . <nl> * / <nl> - if ( ! FileUtils . isCleanerAvailable ( ) ) <nl> + if ( ! FileUtils . isCleanerAvailable ) <nl> return accumulate ; <nl> <nl> return perform ( accumulate , channel . filePath ( ) , Throwables . FileOpType . READ , <nl> diff - - git a / src / java / org / apache / cassandra / repair / messages / RepairOption . java b / src / java / org / apache / cassandra / repair / messages / RepairOption . java <nl> index 843efde . . 82dd181 100644 <nl> - - - a / src / java / org / apache / cassandra / repair / messages / RepairOption . java <nl> + + + b / src / java / org / apache / cassandra / repair / messages / RepairOption . java <nl> @ @ - 231 , 7 + 231 , 7 @ @ public class RepairOption <nl> <nl> public RepairOption ( RepairParallelism parallelism , boolean primaryRange , boolean incremental , boolean trace , int jobThreads , Collection < Range < Token > > ranges , boolean isSubrangeRepair ) <nl> { <nl> - if ( FBUtilities . isWindows ( ) & & <nl> + if ( FBUtilities . isWindows & & <nl> ( DatabaseDescriptor . getDiskAccessMode ( ) ! = Config . DiskAccessMode . standard | | DatabaseDescriptor . getIndexAccessMode ( ) ! = Config . DiskAccessMode . standard ) & & <nl> parallelism = = RepairParallelism . SEQUENTIAL ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> index 7d82cc7 . . e9b0df3 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> @ @ - 175 , 7 + 175 , 7 @ @ public class CassandraDaemon <nl> FileUtils . setFSErrorHandler ( new DefaultFSErrorHandler ( ) ) ; <nl> <nl> / / Delete any failed snapshot deletions on Windows - see CASSANDRA - 9658 <nl> - if ( FBUtilities . isWindows ( ) ) <nl> + if ( FBUtilities . isWindows ) <nl> WindowsFailedSnapshotTracker . deleteOldSnapshots ( ) ; <nl> <nl> ThreadAwareSecurityManager . install ( ) ; <nl> @ @ - 529 , 7 + 529 , 7 @ @ public class CassandraDaemon <nl> <nl> / / On windows , we need to stop the entire system as prunsrv doesn ' t have the jsvc hooks <nl> / / We rely on the shutdown hook to drain the node <nl> - if ( FBUtilities . isWindows ( ) ) <nl> + if ( FBUtilities . isWindows ) <nl> System . exit ( 0 ) ; <nl> <nl> if ( jmxServer ! = null ) <nl> @ @ - 581 , 7 + 581 , 7 @ @ public class CassandraDaemon <nl> / / Allow the server to start even if the bean can ' t be registered <nl> } <nl> <nl> - if ( FBUtilities . isWindows ( ) ) <nl> + if ( FBUtilities . isWindows ) <nl> { <nl> / / We need to adjust the system timer on windows from the default 15ms down to the minimum of 1ms as this <nl> / / impacts timer intervals , thread scheduling , driver interrupts , etc . <nl> diff - - git a / src / java / org / apache / cassandra / service / StartupChecks . java b / src / java / org / apache / cassandra / service / StartupChecks . java <nl> index 223da51 . . edb63ce 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StartupChecks . java <nl> + + + b / src / java / org / apache / cassandra / service / StartupChecks . java <nl> @ @ - 116 , 7 + 116 , 7 @ @ public class StartupChecks <nl> { <nl> public void execute ( ) <nl> { <nl> - if ( FBUtilities . isWindows ( ) ) <nl> + if ( FBUtilities . isWindows ) <nl> return ; <nl> String jemalloc = System . getProperty ( " cassandra . libjemalloc " ) ; <nl> if ( jemalloc = = null ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 7701a3e . . 6373df2 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 195 , 7 + 195 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> private Collection < Token > bootstrapTokens = null ; <nl> <nl> / / true when keeping strict consistency while bootstrapping <nl> - private boolean useStrictConsistency = Boolean . parseBoolean ( System . getProperty ( " cassandra . consistent . rangemovement " , " true " ) ) ; <nl> + private static final boolean useStrictConsistency = Boolean . parseBoolean ( System . getProperty ( " cassandra . consistent . rangemovement " , " true " ) ) ; <nl> private static final boolean allowSimultaneousMoves = Boolean . parseBoolean ( System . getProperty ( " cassandra . consistent . simultaneousmoves . allow " , " false " ) ) ; <nl> private boolean replacing ; <nl> <nl> @ @ - 620 , 7 + 620 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> <nl> CommitLog . instance . shutdownBlocking ( ) ; <nl> <nl> - if ( FBUtilities . isWindows ( ) ) <nl> + if ( FBUtilities . isWindows ) <nl> WindowsTimer . endTimerPeriod ( DatabaseDescriptor . getWindowsTimerInterval ( ) ) ; <nl> <nl> HintsService . instance . shutdownBlocking ( ) ; <nl> @ @ - 711 , 7 + 711 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> if ( drainOnShutdown ! = null ) <nl> Runtime . getRuntime ( ) . removeShutdownHook ( drainOnShutdown ) ; <nl> <nl> - if ( FBUtilities . isWindows ( ) ) <nl> + if ( FBUtilities . isWindows ) <nl> WindowsTimer . endTimerPeriod ( DatabaseDescriptor . getWindowsTimerInterval ( ) ) ; <nl> } <nl> <nl> @ @ - 1129 , 7 + 1129 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> null , <nl> FBUtilities . getBroadcastAddress ( ) , <nl> " Rebuild " , <nl> - ! replacing & & useStrictConsistency , <nl> + useStrictConsistency & & ! replacing , <nl> DatabaseDescriptor . getEndpointSnitch ( ) , <nl> streamStateStore , <nl> false ) ; <nl> @ @ - 1376 , 7 + 1376 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> setMode ( Mode . JOINING , " Starting to bootstrap . . . " , true ) ; <nl> BootStrapper bootstrapper = new BootStrapper ( FBUtilities . getBroadcastAddress ( ) , tokens , tokenMetadata ) ; <nl> bootstrapper . addProgressListener ( progressSupport ) ; <nl> - ListenableFuture < StreamState > bootstrapStream = bootstrapper . bootstrap ( streamStateStore , ! replacing & & useStrictConsistency ) ; / / handles token update <nl> + ListenableFuture < StreamState > bootstrapStream = bootstrapper . bootstrap ( streamStateStore , useStrictConsistency & & ! replacing ) ; / / handles token update <nl> Futures . addCallback ( bootstrapStream , new FutureCallback < StreamState > ( ) <nl> { <nl> @ Override <nl> @ @ - 1415 , 7 + 1415 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> / / already bootstrapped ranges are filtered during bootstrap <nl> BootStrapper bootstrapper = new BootStrapper ( FBUtilities . getBroadcastAddress ( ) , tokens , tokenMetadata ) ; <nl> bootstrapper . addProgressListener ( progressSupport ) ; <nl> - ListenableFuture < StreamState > bootstrapStream = bootstrapper . bootstrap ( streamStateStore , ! replacing & & useStrictConsistency ) ; / / handles token update <nl> + ListenableFuture < StreamState > bootstrapStream = bootstrapper . bootstrap ( streamStateStore , useStrictConsistency & & ! replacing ) ; / / handles token update <nl> Futures . addCallback ( bootstrapStream , new FutureCallback < StreamState > ( ) <nl> { <nl> @ Override <nl> @ @ - 3155 , 7 + 3155 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> throw new IllegalArgumentException ( " Invalid parallelism degree specified : " + parallelismDegree ) ; <nl> } <nl> RepairParallelism parallelism = RepairParallelism . values ( ) [ parallelismDegree ] ; <nl> - if ( FBUtilities . isWindows ( ) & & parallelism ! = RepairParallelism . PARALLEL ) <nl> + if ( FBUtilities . isWindows & & parallelism ! = RepairParallelism . PARALLEL ) <nl> { <nl> logger . warn ( " Snapshot - based repair is not yet supported on Windows . Reverting to parallel repair . " ) ; <nl> parallelism = RepairParallelism . PARALLEL ; <nl> @ @ - 3241 , 7 + 3241 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> throw new IllegalArgumentException ( " Invalid parallelism degree specified : " + parallelismDegree ) ; <nl> } <nl> RepairParallelism parallelism = RepairParallelism . values ( ) [ parallelismDegree ] ; <nl> - if ( FBUtilities . isWindows ( ) & & parallelism ! = RepairParallelism . PARALLEL ) <nl> + if ( FBUtilities . isWindows & & parallelism ! = RepairParallelism . PARALLEL ) <nl> { <nl> logger . warn ( " Snapshot - based repair is not yet supported on Windows . Reverting to parallel repair . " ) ; <nl> parallelism = RepairParallelism . PARALLEL ; <nl> diff - - git a / src / java / org / apache / cassandra / utils / FBUtilities . java b / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> index af2cb1b . . deff245 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> + + + b / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> @ @ - 74 , 8 + 74 , 7 @ @ public class FBUtilities <nl> private static final String DEFAULT _ TRIGGER _ DIR = " triggers " ; <nl> <nl> private static final String OPERATING _ SYSTEM = System . getProperty ( " os . name " ) . toLowerCase ( ) ; <nl> - private static final boolean IS _ WINDOWS = OPERATING _ SYSTEM . contains ( " windows " ) ; <nl> - private static final boolean HAS _ PROCFS = ! IS _ WINDOWS & & ( new File ( File . separator + " proc " ) ) . exists ( ) ; <nl> + public static final boolean isWindows = OPERATING _ SYSTEM . contains ( " windows " ) ; <nl> <nl> private static volatile InetAddress localInetAddress ; <nl> private static volatile InetAddress broadcastInetAddress ; <nl> @ @ - 810 , 16 + 809 , 6 @ @ public class FBUtilities <nl> return historyDir ; <nl> } <nl> <nl> - public static boolean isWindows ( ) <nl> - { <nl> - return IS _ WINDOWS ; <nl> - } <nl> - <nl> - public static boolean hasProcFS ( ) <nl> - { <nl> - return HAS _ PROCFS ; <nl> - } <nl> - <nl> public static void updateWithShort ( MessageDigest digest , int val ) <nl> { <nl> digest . update ( ( byte ) ( ( val > > 8 ) & 0xFF ) ) ; <nl> diff - - git a / src / java / org / apache / cassandra / utils / SigarLibrary . java b / src / java / org / apache / cassandra / utils / SigarLibrary . java <nl> index 0312204 . . 246a9c8 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / SigarLibrary . java <nl> + + + b / src / java / org / apache / cassandra / utils / SigarLibrary . java <nl> @ @ - 112 , 7 + 112 , 7 @ @ public class SigarLibrary <nl> private boolean hasAcceptableAddressSpace ( ) <nl> { <nl> / / Check is invalid on Windows <nl> - if ( FBUtilities . isWindows ( ) ) <nl> + if ( FBUtilities . isWindows ) <nl> return true ; <nl> <nl> try <nl> diff - - git a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java <nl> index 5d01886 . . 8463a1f 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java <nl> @ @ - 306 , 7 + 306 , 7 @ @ public class ColumnFamilyStoreTest <nl> / / We don ' t do snapshot - based repair on Windows so we don ' t have ephemeral snapshots from repair that need clearing . <nl> / / This test will fail as we ' ll revert to the WindowsFailedSnapshotTracker and counts will be off , but since we <nl> / / don ' t do snapshot - based repair on Windows , we just skip this test . <nl> - Assume . assumeTrue ( ! FBUtilities . isWindows ( ) ) ; <nl> + Assume . assumeTrue ( ! FBUtilities . isWindows ) ; <nl> <nl> ColumnFamilyStore cfs = Keyspace . open ( KEYSPACE1 ) . getColumnFamilyStore ( CF _ INDEX1 ) ; <nl> <nl> diff - - git a / test / unit / org / apache / cassandra / db / SystemKeyspaceTest . java b / test / unit / org / apache / cassandra / db / SystemKeyspaceTest . java <nl> index d770610 . . 0bbf56f 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / SystemKeyspaceTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / SystemKeyspaceTest . java <nl> @ @ - 49 , 7 + 49 , 7 @ @ public class SystemKeyspaceTest <nl> @ BeforeClass <nl> public static void prepSnapshotTracker ( ) <nl> { <nl> - if ( FBUtilities . isWindows ( ) ) <nl> + if ( FBUtilities . isWindows ) <nl> WindowsFailedSnapshotTracker . deleteOldSnapshots ( ) ; <nl> } <nl> <nl> @ @ - 95 , 7 + 95 , 7 @ @ public class SystemKeyspaceTest <nl> <nl> private void assertDeletedOrDeferred ( int expectedCount ) <nl> { <nl> - if ( FBUtilities . isWindows ( ) ) <nl> + if ( FBUtilities . isWindows ) <nl> assertEquals ( expectedCount , getDeferredDeletionCount ( ) ) ; <nl> else <nl> assertTrue ( getSystemSnapshotFiles ( ) . isEmpty ( ) ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / db / commitlog / SnapshotDeletingTest . java b / test / unit / org / apache / cassandra / db / commitlog / SnapshotDeletingTest . java <nl> index 1fae80d . . e6ac60d 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / commitlog / SnapshotDeletingTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / commitlog / SnapshotDeletingTest . java <nl> @ @ - 57 , 7 + 57 , 7 @ @ public class SnapshotDeletingTest <nl> @ Test <nl> public void testCompactionHook ( ) throws Exception <nl> { <nl> - Assume . assumeTrue ( FBUtilities . isWindows ( ) ) ; <nl> + Assume . assumeTrue ( FBUtilities . isWindows ) ; <nl> <nl> Keyspace keyspace = Keyspace . open ( KEYSPACE1 ) ; <nl> ColumnFamilyStore store = keyspace . getColumnFamilyStore ( CF _ STANDARD1 ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTest . java <nl> index 91843d9 . . 1c7d61f 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTest . java <nl> + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTest . java <nl> @ @ - 79 , 7 + 79 , 7 @ @ public class SSTableWriterTest extends SSTableWriterTestBase <nl> <nl> / / These checks don ' t work on Windows because the writer has the channel still <nl> / / open till . abort ( ) is called ( via the builder ) <nl> - if ( ! FBUtilities . isWindows ( ) ) <nl> + if ( ! FBUtilities . isWindows ) <nl> { <nl> LifecycleTransaction . waitForDeletions ( ) ; <nl> assertFileCounts ( dir . list ( ) ) ; <nl> @ @ - 128 , 7 + 128 , 7 @ @ public class SSTableWriterTest extends SSTableWriterTestBase <nl> sstable . selfRef ( ) . release ( ) ; <nl> / / These checks don ' t work on Windows because the writer has the channel still <nl> / / open till . abort ( ) is called ( via the builder ) <nl> - if ( ! FBUtilities . isWindows ( ) ) <nl> + if ( ! FBUtilities . isWindows ) <nl> { <nl> LifecycleTransaction . waitForDeletions ( ) ; <nl> assertFileCounts ( dir . list ( ) ) ; <nl> @ @ - 182 , 7 + 182 , 7 @ @ public class SSTableWriterTest extends SSTableWriterTestBase <nl> <nl> / / These checks don ' t work on Windows because the writer has the channel still <nl> / / open till . abort ( ) is called ( via the builder ) <nl> - if ( ! FBUtilities . isWindows ( ) ) <nl> + if ( ! FBUtilities . isWindows ) <nl> { <nl> LifecycleTransaction . waitForDeletions ( ) ; <nl> assertFileCounts ( dir . list ( ) ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTestBase . java b / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTestBase . java <nl> index c399e7f . . 0abd7bc 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTestBase . java <nl> + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTestBase . java <nl> @ @ - 64 , 7 + 64 , 7 @ @ public class SSTableWriterTestBase extends SchemaLoader <nl> @ BeforeClass <nl> public static void defineSchema ( ) throws ConfigurationException <nl> { <nl> - if ( FBUtilities . isWindows ( ) ) <nl> + if ( FBUtilities . isWindows ) <nl> { <nl> standardMode = DatabaseDescriptor . getDiskAccessMode ( ) ; <nl> indexMode = DatabaseDescriptor . getIndexAccessMode ( ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / repair / messages / RepairOptionTest . java b / test / unit / org / apache / cassandra / repair / messages / RepairOptionTest . java <nl> index 21e5d9b . . a564cff 100644 <nl> - - - a / test / unit / org / apache / cassandra / repair / messages / RepairOptionTest . java <nl> + + + b / test / unit / org / apache / cassandra / repair / messages / RepairOptionTest . java <nl> @ @ - 51 , 7 + 51 , 7 @ @ public class RepairOptionTest <nl> / / parse with empty options <nl> RepairOption option = RepairOption . parse ( new HashMap < String , String > ( ) , partitioner ) ; <nl> <nl> - if ( FBUtilities . isWindows ( ) & & ( DatabaseDescriptor . getDiskAccessMode ( ) ! = Config . DiskAccessMode . standard | | DatabaseDescriptor . getIndexAccessMode ( ) ! = Config . DiskAccessMode . standard ) ) <nl> + if ( FBUtilities . isWindows & & ( DatabaseDescriptor . getDiskAccessMode ( ) ! = Config . DiskAccessMode . standard | | DatabaseDescriptor . getIndexAccessMode ( ) ! = Config . DiskAccessMode . standard ) ) <nl> assertTrue ( option . getParallelism ( ) = = RepairParallelism . PARALLEL ) ; <nl> else <nl> assertTrue ( option . getParallelism ( ) = = RepairParallelism . SEQUENTIAL ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java b / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java <nl> index e438a6b . . 498fc73 100644 <nl> - - - a / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java <nl> + + + b / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java <nl> @ @ - 117 , 7 + 117 , 7 @ @ public class StorageServiceServerTest <nl> @ Test <nl> public void testSnapshotFailureHandler ( ) throws IOException <nl> { <nl> - assumeTrue ( FBUtilities . isWindows ( ) ) ; <nl> + assumeTrue ( FBUtilities . isWindows ) ; <nl> <nl> / / Initial " run " of Cassandra , nothing in failed snapshot file <nl> WindowsFailedSnapshotTracker . deleteOldSnapshots ( ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / utils / NanoTimeToCurrentTimeMillisTest . java b / test / unit / org / apache / cassandra / utils / NanoTimeToCurrentTimeMillisTest . java <nl> index b3dfad3 . . 25aeada 100644 <nl> - - - a / test / unit / org / apache / cassandra / utils / NanoTimeToCurrentTimeMillisTest . java <nl> + + + b / test / unit / org / apache / cassandra / utils / NanoTimeToCurrentTimeMillisTest . java <nl> @ @ - 41 , 11 + 41 , 11 @ @ public class NanoTimeToCurrentTimeMillisTest <nl> nowNanos = Math . max ( nowNanos , System . nanoTime ( ) ) ; <nl> long convertedNow = NanoTimeToCurrentTimeMillis . convert ( nowNanos ) ; <nl> <nl> - int maxDiff = FBUtilities . isWindows ( ) ? 15 : 1 ; <nl> + int maxDiff = FBUtilities . isWindows ? 15 : 1 ; <nl> assertTrue ( " convertedNow = " + convertedNow + " lastConverted = " + lastConverted + " in iteration " + ii , <nl> convertedNow > = ( lastConverted - maxDiff ) ) ; <nl> <nl> - maxDiff = FBUtilities . isWindows ( ) ? 25 : 2 ; <nl> + maxDiff = FBUtilities . isWindows ? 25 : 2 ; <nl> assertTrue ( " now = " + now + " convertedNow = " + convertedNow + " in iteration " + ii , <nl> ( maxDiff - 2 ) < = convertedNow ) ; <nl> <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / Stress . java b / tools / stress / src / org / apache / cassandra / stress / Stress . java <nl> index daa7303 . . 50b1b81 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / Stress . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / Stress . java <nl> @ @ - 55 , 12 + 55 , 12 @ @ public final class Stress <nl> <nl> public static void main ( String [ ] arguments ) throws Exception <nl> { <nl> - if ( FBUtilities . isWindows ( ) ) <nl> + if ( FBUtilities . isWindows ) <nl> WindowsTimer . startTimerPeriod ( 1 ) ; <nl> <nl> int exitCode = run ( arguments ) ; <nl> <nl> - if ( FBUtilities . isWindows ( ) ) <nl> + if ( FBUtilities . isWindows ) <nl> WindowsTimer . endTimerPeriod ( 1 ) ; <nl> <nl> System . exit ( exitCode ) ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / BlacklistedDirectories . java b / src / java / org / apache / cassandra / db / BlacklistedDirectories . java <nl> new file mode 100644 <nl> index 0000000 . . 5ca7d1f <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / db / BlacklistedDirectories . java <nl> @ @ - 0 , 0 + 1 , 100 @ @ <nl> + / * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + package org . apache . cassandra . db ; <nl> + <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + <nl> + import java . io . File ; <nl> + import java . util . Set ; <nl> + import java . util . concurrent . CopyOnWriteArraySet ; <nl> + <nl> + public class BlacklistedDirectories <nl> + { <nl> + private static final Logger logger = LoggerFactory . getLogger ( BlacklistedDirectories . class ) ; <nl> + <nl> + private static Set < File > unreadableDirectories = new CopyOnWriteArraySet < File > ( ) ; <nl> + private static Set < File > unwritableDirectories = new CopyOnWriteArraySet < File > ( ) ; <nl> + <nl> + / * * <nl> + * Adds parent directory of the file ( or the file itself , if it is a directory ) <nl> + * to the set of unreadable directories . <nl> + * <nl> + * @ return the blacklisted directory or null if nothing has been added to the list . <nl> + * / <nl> + public static File maybeMarkUnreadable ( File path ) <nl> + { <nl> + File directory = getDirectory ( path ) ; <nl> + if ( unreadableDirectories . add ( directory ) ) <nl> + { <nl> + logger . warn ( " Blacklisting { } for reads " , directory ) ; <nl> + return directory ; <nl> + } <nl> + return null ; <nl> + } <nl> + <nl> + / * * <nl> + * Adds parent directory of the file ( or the file itself , if it is a directory ) <nl> + * to the set of unwritable directories . <nl> + * <nl> + * @ return the blacklisted directory or null if nothing has been added to the list . <nl> + * / <nl> + public static File maybeMarkUnwritable ( File path ) <nl> + { <nl> + File directory = getDirectory ( path ) ; <nl> + if ( unwritableDirectories . add ( directory ) ) <nl> + { <nl> + logger . warn ( " Blacklisting { } for writes " , directory ) ; <nl> + return directory ; <nl> + } <nl> + return null ; <nl> + } <nl> + <nl> + / * * <nl> + * Tells whether or not the directory is blacklisted for reads . <nl> + * @ return whether or not the directory is blacklisted for reads . <nl> + * / <nl> + public static boolean isUnreadable ( File directory ) <nl> + { <nl> + return unreadableDirectories . contains ( directory ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Tells whether or not the directory is blacklisted for writes . <nl> + * @ return whether or not the directory is blacklisted for reads . <nl> + * / <nl> + public static boolean isUnwritable ( File directory ) <nl> + { <nl> + return unwritableDirectories . contains ( directory ) ; <nl> + } <nl> + <nl> + private static File getDirectory ( File file ) <nl> + { <nl> + if ( file . isDirectory ( ) ) <nl> + return file ; <nl> + <nl> + if ( file . isFile ( ) ) <nl> + return file . getParentFile ( ) ; <nl> + <nl> + / / the file with path cannot be read - try determining the directory manually . <nl> + if ( file . getPath ( ) . endsWith ( " . db " ) ) <nl> + return file . getParentFile ( ) ; <nl> + <nl> + throw new IllegalStateException ( " Unable to parse directory from path " + file ) ; <nl> + } <nl> + }

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index d74d4ad . . 15aee59 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 1920 , 7 + 1920 , 7 @ @ public class DatabaseDescriptor 
 
 public static int getSSTablePreempiveOpenIntervalInMB ( ) 
 { 
 - return FBUtilities . isWindows ( ) ? - 1 : conf . sstable _ preemptive _ open _ interval _ in _ mb ; 
 + return FBUtilities . isWindows ? - 1 : conf . sstable _ preemptive _ open _ interval _ in _ mb ; 
 } 
 public static void setSSTablePreempiveOpenIntervalInMB ( int mb ) 
 { 
 @ @ - 2075 , 7 + 2075 , 7 @ @ public class DatabaseDescriptor 
 case heap _ buffers : 
 return new SlabPool ( heapLimit , 0 , conf . memtable _ cleanup _ threshold , new ColumnFamilyStore . FlushLargestColumnFamily ( ) ) ; 
 case offheap _ buffers : 
 - if ( ! FileUtils . isCleanerAvailable ( ) ) 
 + if ( ! FileUtils . isCleanerAvailable ) 
 { 
 throw new IllegalStateException ( " Could not free direct byte buffer : offheap _ buffers is not a safe memtable _ allocation _ type without this ability , please adjust your config . This feature is only guaranteed to work on an Oracle JVM . Refusing to start . " ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / Directories . java b / src / java / org / apache / cassandra / db / Directories . java 
 index 3533dbc . . 2f141fc 100644 
 - - - a / src / java / org / apache / cassandra / db / Directories . java 
 + + + b / src / java / org / apache / cassandra / db / Directories . java 
 @ @ - 889 , 7 + 889 , 7 @ @ public class Directories 
 } 
 catch ( FSWriteError e ) 
 { 
 - if ( FBUtilities . isWindows ( ) ) 
 + if ( FBUtilities . isWindows ) 
 SnapshotDeletingTask . addFailedSnapshot ( snapshotDir ) ; 
 else 
 throw e ; 
 diff - - git a / src / java / org / apache / cassandra / db / commitlog / MemoryMappedSegment . java b / src / java / org / apache / cassandra / db / commitlog / MemoryMappedSegment . java 
 index 2bbd12d . . 94e45e0 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / MemoryMappedSegment . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / MemoryMappedSegment . java 
 @ @ - 110 , 7 + 110 , 7 @ @ public class MemoryMappedSegment extends CommitLogSegment 
 @ Override 
 protected void internalClose ( ) 
 { 
 - if ( FileUtils . isCleanerAvailable ( ) ) 
 + if ( FileUtils . isCleanerAvailable ) 
 FileUtils . clean ( buffer ) ; 
 super . internalClose ( ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionController . java b / src / java / org / apache / cassandra / db / compaction / CompactionController . java 
 index 08ad0c0 . . 7d4b8aa 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionController . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionController . java 
 @ @ - 152 , 7 + 152 , 7 @ @ public class CompactionController implements AutoCloseable 
 { 
 logger . trace ( " Checking droppable sstables in { } " , cfStore ) ; 
 
 - if ( compacting = = null | | NEVER _ PURGE _ TOMBSTONES ) 
 + if ( NEVER _ PURGE _ TOMBSTONES | | compacting = = null ) 
 return Collections . < SSTableReader > emptySet ( ) ; 
 
 if ( cfStore . getCompactionStrategyManager ( ) . onlyPurgeRepairedTombstones ( ) & & ! Iterables . all ( compacting , SSTableReader : : isRepaired ) ) 
 @ @ - 222 , 7 + 222 , 7 @ @ public class CompactionController implements AutoCloseable 
 * / 
 public long maxPurgeableTimestamp ( DecoratedKey key ) 
 { 
 - if ( ! compactingRepaired ( ) | | NEVER _ PURGE _ TOMBSTONES ) 
 + if ( NEVER _ PURGE _ TOMBSTONES | | ! compactingRepaired ( ) ) 
 return Long . MIN _ VALUE ; 
 
 long min = Long . MAX _ VALUE ; 
 diff - - git a / src / java / org / apache / cassandra / db / view / ViewManager . java b / src / java / org / apache / cassandra / db / view / ViewManager . java 
 index 14bcd58 . . b30ad2a 100644 
 - - - a / src / java / org / apache / cassandra / db / view / ViewManager . java 
 + + + b / src / java / org / apache / cassandra / db / view / ViewManager . java 
 @ @ - 68 , 7 + 68 , 7 @ @ public class ViewManager 
 
 public boolean updatesAffectView ( Collection < ? extends IMutation > mutations , boolean coordinatorBatchlog ) 
 { 
 - if ( coordinatorBatchlog & & ! enableCoordinatorBatchlog ) 
 + if ( ! enableCoordinatorBatchlog & & coordinatorBatchlog ) 
 return false ; 
 
 for ( IMutation mutation : mutations ) 
 diff - - git a / src / java / org / apache / cassandra / index / sasi / utils / MappedBuffer . java b / src / java / org / apache / cassandra / index / sasi / utils / MappedBuffer . java 
 index 37ab1be . . efabe7b 100644 
 - - - a / src / java / org / apache / cassandra / index / sasi / utils / MappedBuffer . java 
 + + + b / src / java / org / apache / cassandra / index / sasi / utils / MappedBuffer . java 
 @ @ - 217 , 7 + 217 , 7 @ @ public class MappedBuffer implements Closeable 
 
 public void close ( ) 
 { 
 - if ( ! FileUtils . isCleanerAvailable ( ) ) 
 + if ( ! FileUtils . isCleanerAvailable ) 
 return ; 
 
 / * 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / metadata / MetadataSerializer . java b / src / java / org / apache / cassandra / io / sstable / metadata / MetadataSerializer . java 
 index abc6eaa . . e6e0953 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / metadata / MetadataSerializer . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / metadata / MetadataSerializer . java 
 @ @ - 155 , 7 + 155 , 7 @ @ public class MetadataSerializer implements IMetadataSerializer 
 out . flush ( ) ; 
 } 
 / / we cant move a file on top of another file in windows : 
 - if ( FBUtilities . isWindows ( ) ) 
 + if ( FBUtilities . isWindows ) 
 FileUtils . delete ( descriptor . filenameFor ( Component . STATS ) ) ; 
 FileUtils . renameWithConfirm ( filePath , descriptor . filenameFor ( Component . STATS ) ) ; 
 
 diff - - git a / src / java / org / apache / cassandra / io / util / FileUtils . java b / src / java / org / apache / cassandra / io / util / FileUtils . java 
 index 39c7800 . . abb39d3 100644 
 - - - a / src / java / org / apache / cassandra / io / util / FileUtils . java 
 + + + b / src / java / org / apache / cassandra / io / util / FileUtils . java 
 @ @ - 57 , 7 + 57 , 7 @ @ public final class FileUtils 
 private static final double TB = 1024 * 1024 * 1024 * 1024d ; 
 
 private static final DecimalFormat df = new DecimalFormat ( " # . # # " ) ; 
 - private static final boolean canCleanDirectBuffers ; 
 + public static final boolean isCleanerAvailable ; 
 private static final AtomicReference < Optional < FSErrorHandler > > fsErrorHandler = new AtomicReference < > ( Optional . empty ( ) ) ; 
 
 static 
 @ @ - 74 , 7 + 74 , 7 @ @ public final class FileUtils 
 JVMStabilityInspector . inspectThrowable ( t ) ; 
 logger . info ( " Cannot initialize un - mmaper . ( Are you using a non - Oracle JVM ? ) Compacted data files will not be removed promptly . Consider using an Oracle JVM or using standard disk access mode " ) ; 
 } 
 - canCleanDirectBuffers = canClean ; 
 + isCleanerAvailable = canClean ; 
 } 
 
 public static void createHardLink ( String from , String to ) 
 @ @ - 334 , 16 + 334 , 11 @ @ public final class FileUtils 
 } 
 } 
 
 - public static boolean isCleanerAvailable ( ) 
 - { 
 - return canCleanDirectBuffers ; 
 - } 
 - 
 public static void clean ( ByteBuffer buffer ) 
 { 
 if ( buffer = = null ) 
 return ; 
 - if ( isCleanerAvailable ( ) & & buffer . isDirect ( ) ) 
 + if ( isCleanerAvailable & & buffer . isDirect ( ) ) 
 { 
 DirectBuffer db = ( DirectBuffer ) buffer ; 
 if ( db . cleaner ( ) ! = null ) 
 diff - - git a / src / java / org / apache / cassandra / io / util / MmappedRegions . java b / src / java / org / apache / cassandra / io / util / MmappedRegions . java 
 index 9ab8abf . . 13b476a 100644 
 - - - a / src / java / org / apache / cassandra / io / util / MmappedRegions . java 
 + + + b / src / java / org / apache / cassandra / io / util / MmappedRegions . java 
 @ @ - 330 , 7 + 330 , 7 @ @ public class MmappedRegions extends SharedCloseableImpl 
 * If this fails ( non Sun JVM ) , we ' ll have to wait for the GC to finalize the mapping . 
 * If this works and a thread tries to access any segment , hell will unleash on earth . 
 * / 
 - if ( ! FileUtils . isCleanerAvailable ( ) ) 
 + if ( ! FileUtils . isCleanerAvailable ) 
 return accumulate ; 
 
 return perform ( accumulate , channel . filePath ( ) , Throwables . FileOpType . READ , 
 diff - - git a / src / java / org / apache / cassandra / repair / messages / RepairOption . java b / src / java / org / apache / cassandra / repair / messages / RepairOption . java 
 index 843efde . . 82dd181 100644 
 - - - a / src / java / org / apache / cassandra / repair / messages / RepairOption . java 
 + + + b / src / java / org / apache / cassandra / repair / messages / RepairOption . java 
 @ @ - 231 , 7 + 231 , 7 @ @ public class RepairOption 
 
 public RepairOption ( RepairParallelism parallelism , boolean primaryRange , boolean incremental , boolean trace , int jobThreads , Collection < Range < Token > > ranges , boolean isSubrangeRepair ) 
 { 
 - if ( FBUtilities . isWindows ( ) & & 
 + if ( FBUtilities . isWindows & & 
 ( DatabaseDescriptor . getDiskAccessMode ( ) ! = Config . DiskAccessMode . standard | | DatabaseDescriptor . getIndexAccessMode ( ) ! = Config . DiskAccessMode . standard ) & & 
 parallelism = = RepairParallelism . SEQUENTIAL ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 index 7d82cc7 . . e9b0df3 100644 
 - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 @ @ - 175 , 7 + 175 , 7 @ @ public class CassandraDaemon 
 FileUtils . setFSErrorHandler ( new DefaultFSErrorHandler ( ) ) ; 
 
 / / Delete any failed snapshot deletions on Windows - see CASSANDRA - 9658 
 - if ( FBUtilities . isWindows ( ) ) 
 + if ( FBUtilities . isWindows ) 
 WindowsFailedSnapshotTracker . deleteOldSnapshots ( ) ; 
 
 ThreadAwareSecurityManager . install ( ) ; 
 @ @ - 529 , 7 + 529 , 7 @ @ public class CassandraDaemon 
 
 / / On windows , we need to stop the entire system as prunsrv doesn ' t have the jsvc hooks 
 / / We rely on the shutdown hook to drain the node 
 - if ( FBUtilities . isWindows ( ) ) 
 + if ( FBUtilities . isWindows ) 
 System . exit ( 0 ) ; 
 
 if ( jmxServer ! = null ) 
 @ @ - 581 , 7 + 581 , 7 @ @ public class CassandraDaemon 
 / / Allow the server to start even if the bean can ' t be registered 
 } 
 
 - if ( FBUtilities . isWindows ( ) ) 
 + if ( FBUtilities . isWindows ) 
 { 
 / / We need to adjust the system timer on windows from the default 15ms down to the minimum of 1ms as this 
 / / impacts timer intervals , thread scheduling , driver interrupts , etc . 
 diff - - git a / src / java / org / apache / cassandra / service / StartupChecks . java b / src / java / org / apache / cassandra / service / StartupChecks . java 
 index 223da51 . . edb63ce 100644 
 - - - a / src / java / org / apache / cassandra / service / StartupChecks . java 
 + + + b / src / java / org / apache / cassandra / service / StartupChecks . java 
 @ @ - 116 , 7 + 116 , 7 @ @ public class StartupChecks 
 { 
 public void execute ( ) 
 { 
 - if ( FBUtilities . isWindows ( ) ) 
 + if ( FBUtilities . isWindows ) 
 return ; 
 String jemalloc = System . getProperty ( " cassandra . libjemalloc " ) ; 
 if ( jemalloc = = null ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 7701a3e . . 6373df2 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 195 , 7 + 195 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 private Collection < Token > bootstrapTokens = null ; 
 
 / / true when keeping strict consistency while bootstrapping 
 - private boolean useStrictConsistency = Boolean . parseBoolean ( System . getProperty ( " cassandra . consistent . rangemovement " , " true " ) ) ; 
 + private static final boolean useStrictConsistency = Boolean . parseBoolean ( System . getProperty ( " cassandra . consistent . rangemovement " , " true " ) ) ; 
 private static final boolean allowSimultaneousMoves = Boolean . parseBoolean ( System . getProperty ( " cassandra . consistent . simultaneousmoves . allow " , " false " ) ) ; 
 private boolean replacing ; 
 
 @ @ - 620 , 7 + 620 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 
 CommitLog . instance . shutdownBlocking ( ) ; 
 
 - if ( FBUtilities . isWindows ( ) ) 
 + if ( FBUtilities . isWindows ) 
 WindowsTimer . endTimerPeriod ( DatabaseDescriptor . getWindowsTimerInterval ( ) ) ; 
 
 HintsService . instance . shutdownBlocking ( ) ; 
 @ @ - 711 , 7 + 711 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 if ( drainOnShutdown ! = null ) 
 Runtime . getRuntime ( ) . removeShutdownHook ( drainOnShutdown ) ; 
 
 - if ( FBUtilities . isWindows ( ) ) 
 + if ( FBUtilities . isWindows ) 
 WindowsTimer . endTimerPeriod ( DatabaseDescriptor . getWindowsTimerInterval ( ) ) ; 
 } 
 
 @ @ - 1129 , 7 + 1129 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 null , 
 FBUtilities . getBroadcastAddress ( ) , 
 " Rebuild " , 
 - ! replacing & & useStrictConsistency , 
 + useStrictConsistency & & ! replacing , 
 DatabaseDescriptor . getEndpointSnitch ( ) , 
 streamStateStore , 
 false ) ; 
 @ @ - 1376 , 7 + 1376 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 setMode ( Mode . JOINING , " Starting to bootstrap . . . " , true ) ; 
 BootStrapper bootstrapper = new BootStrapper ( FBUtilities . getBroadcastAddress ( ) , tokens , tokenMetadata ) ; 
 bootstrapper . addProgressListener ( progressSupport ) ; 
 - ListenableFuture < StreamState > bootstrapStream = bootstrapper . bootstrap ( streamStateStore , ! replacing & & useStrictConsistency ) ; / / handles token update 
 + ListenableFuture < StreamState > bootstrapStream = bootstrapper . bootstrap ( streamStateStore , useStrictConsistency & & ! replacing ) ; / / handles token update 
 Futures . addCallback ( bootstrapStream , new FutureCallback < StreamState > ( ) 
 { 
 @ Override 
 @ @ - 1415 , 7 + 1415 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 / / already bootstrapped ranges are filtered during bootstrap 
 BootStrapper bootstrapper = new BootStrapper ( FBUtilities . getBroadcastAddress ( ) , tokens , tokenMetadata ) ; 
 bootstrapper . addProgressListener ( progressSupport ) ; 
 - ListenableFuture < StreamState > bootstrapStream = bootstrapper . bootstrap ( streamStateStore , ! replacing & & useStrictConsistency ) ; / / handles token update 
 + ListenableFuture < StreamState > bootstrapStream = bootstrapper . bootstrap ( streamStateStore , useStrictConsistency & & ! replacing ) ; / / handles token update 
 Futures . addCallback ( bootstrapStream , new FutureCallback < StreamState > ( ) 
 { 
 @ Override 
 @ @ - 3155 , 7 + 3155 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 throw new IllegalArgumentException ( " Invalid parallelism degree specified : " + parallelismDegree ) ; 
 } 
 RepairParallelism parallelism = RepairParallelism . values ( ) [ parallelismDegree ] ; 
 - if ( FBUtilities . isWindows ( ) & & parallelism ! = RepairParallelism . PARALLEL ) 
 + if ( FBUtilities . isWindows & & parallelism ! = RepairParallelism . PARALLEL ) 
 { 
 logger . warn ( " Snapshot - based repair is not yet supported on Windows . Reverting to parallel repair . " ) ; 
 parallelism = RepairParallelism . PARALLEL ; 
 @ @ - 3241 , 7 + 3241 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 throw new IllegalArgumentException ( " Invalid parallelism degree specified : " + parallelismDegree ) ; 
 } 
 RepairParallelism parallelism = RepairParallelism . values ( ) [ parallelismDegree ] ; 
 - if ( FBUtilities . isWindows ( ) & & parallelism ! = RepairParallelism . PARALLEL ) 
 + if ( FBUtilities . isWindows & & parallelism ! = RepairParallelism . PARALLEL ) 
 { 
 logger . warn ( " Snapshot - based repair is not yet supported on Windows . Reverting to parallel repair . " ) ; 
 parallelism = RepairParallelism . PARALLEL ; 
 diff - - git a / src / java / org / apache / cassandra / utils / FBUtilities . java b / src / java / org / apache / cassandra / utils / FBUtilities . java 
 index af2cb1b . . deff245 100644 
 - - - a / src / java / org / apache / cassandra / utils / FBUtilities . java 
 + + + b / src / java / org / apache / cassandra / utils / FBUtilities . java 
 @ @ - 74 , 8 + 74 , 7 @ @ public class FBUtilities 
 private static final String DEFAULT _ TRIGGER _ DIR = " triggers " ; 
 
 private static final String OPERATING _ SYSTEM = System . getProperty ( " os . name " ) . toLowerCase ( ) ; 
 - private static final boolean IS _ WINDOWS = OPERATING _ SYSTEM . contains ( " windows " ) ; 
 - private static final boolean HAS _ PROCFS = ! IS _ WINDOWS & & ( new File ( File . separator + " proc " ) ) . exists ( ) ; 
 + public static final boolean isWindows = OPERATING _ SYSTEM . contains ( " windows " ) ; 
 
 private static volatile InetAddress localInetAddress ; 
 private static volatile InetAddress broadcastInetAddress ; 
 @ @ - 810 , 16 + 809 , 6 @ @ public class FBUtilities 
 return historyDir ; 
 } 
 
 - public static boolean isWindows ( ) 
 - { 
 - return IS _ WINDOWS ; 
 - } 
 - 
 - public static boolean hasProcFS ( ) 
 - { 
 - return HAS _ PROCFS ; 
 - } 
 - 
 public static void updateWithShort ( MessageDigest digest , int val ) 
 { 
 digest . update ( ( byte ) ( ( val > > 8 ) & 0xFF ) ) ; 
 diff - - git a / src / java / org / apache / cassandra / utils / SigarLibrary . java b / src / java / org / apache / cassandra / utils / SigarLibrary . java 
 index 0312204 . . 246a9c8 100644 
 - - - a / src / java / org / apache / cassandra / utils / SigarLibrary . java 
 + + + b / src / java / org / apache / cassandra / utils / SigarLibrary . java 
 @ @ - 112 , 7 + 112 , 7 @ @ public class SigarLibrary 
 private boolean hasAcceptableAddressSpace ( ) 
 { 
 / / Check is invalid on Windows 
 - if ( FBUtilities . isWindows ( ) ) 
 + if ( FBUtilities . isWindows ) 
 return true ; 
 
 try 
 diff - - git a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java 
 index 5d01886 . . 8463a1f 100644 
 - - - a / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java 
 + + + b / test / unit / org / apache / cassandra / db / ColumnFamilyStoreTest . java 
 @ @ - 306 , 7 + 306 , 7 @ @ public class ColumnFamilyStoreTest 
 / / We don ' t do snapshot - based repair on Windows so we don ' t have ephemeral snapshots from repair that need clearing . 
 / / This test will fail as we ' ll revert to the WindowsFailedSnapshotTracker and counts will be off , but since we 
 / / don ' t do snapshot - based repair on Windows , we just skip this test . 
 - Assume . assumeTrue ( ! FBUtilities . isWindows ( ) ) ; 
 + Assume . assumeTrue ( ! FBUtilities . isWindows ) ; 
 
 ColumnFamilyStore cfs = Keyspace . open ( KEYSPACE1 ) . getColumnFamilyStore ( CF _ INDEX1 ) ; 
 
 diff - - git a / test / unit / org / apache / cassandra / db / SystemKeyspaceTest . java b / test / unit / org / apache / cassandra / db / SystemKeyspaceTest . java 
 index d770610 . . 0bbf56f 100644 
 - - - a / test / unit / org / apache / cassandra / db / SystemKeyspaceTest . java 
 + + + b / test / unit / org / apache / cassandra / db / SystemKeyspaceTest . java 
 @ @ - 49 , 7 + 49 , 7 @ @ public class SystemKeyspaceTest 
 @ BeforeClass 
 public static void prepSnapshotTracker ( ) 
 { 
 - if ( FBUtilities . isWindows ( ) ) 
 + if ( FBUtilities . isWindows ) 
 WindowsFailedSnapshotTracker . deleteOldSnapshots ( ) ; 
 } 
 
 @ @ - 95 , 7 + 95 , 7 @ @ public class SystemKeyspaceTest 
 
 private void assertDeletedOrDeferred ( int expectedCount ) 
 { 
 - if ( FBUtilities . isWindows ( ) ) 
 + if ( FBUtilities . isWindows ) 
 assertEquals ( expectedCount , getDeferredDeletionCount ( ) ) ; 
 else 
 assertTrue ( getSystemSnapshotFiles ( ) . isEmpty ( ) ) ; 
 diff - - git a / test / unit / org / apache / cassandra / db / commitlog / SnapshotDeletingTest . java b / test / unit / org / apache / cassandra / db / commitlog / SnapshotDeletingTest . java 
 index 1fae80d . . e6ac60d 100644 
 - - - a / test / unit / org / apache / cassandra / db / commitlog / SnapshotDeletingTest . java 
 + + + b / test / unit / org / apache / cassandra / db / commitlog / SnapshotDeletingTest . java 
 @ @ - 57 , 7 + 57 , 7 @ @ public class SnapshotDeletingTest 
 @ Test 
 public void testCompactionHook ( ) throws Exception 
 { 
 - Assume . assumeTrue ( FBUtilities . isWindows ( ) ) ; 
 + Assume . assumeTrue ( FBUtilities . isWindows ) ; 
 
 Keyspace keyspace = Keyspace . open ( KEYSPACE1 ) ; 
 ColumnFamilyStore store = keyspace . getColumnFamilyStore ( CF _ STANDARD1 ) ; 
 diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTest . java 
 index 91843d9 . . 1c7d61f 100644 
 - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTest . java 
 + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTest . java 
 @ @ - 79 , 7 + 79 , 7 @ @ public class SSTableWriterTest extends SSTableWriterTestBase 
 
 / / These checks don ' t work on Windows because the writer has the channel still 
 / / open till . abort ( ) is called ( via the builder ) 
 - if ( ! FBUtilities . isWindows ( ) ) 
 + if ( ! FBUtilities . isWindows ) 
 { 
 LifecycleTransaction . waitForDeletions ( ) ; 
 assertFileCounts ( dir . list ( ) ) ; 
 @ @ - 128 , 7 + 128 , 7 @ @ public class SSTableWriterTest extends SSTableWriterTestBase 
 sstable . selfRef ( ) . release ( ) ; 
 / / These checks don ' t work on Windows because the writer has the channel still 
 / / open till . abort ( ) is called ( via the builder ) 
 - if ( ! FBUtilities . isWindows ( ) ) 
 + if ( ! FBUtilities . isWindows ) 
 { 
 LifecycleTransaction . waitForDeletions ( ) ; 
 assertFileCounts ( dir . list ( ) ) ; 
 @ @ - 182 , 7 + 182 , 7 @ @ public class SSTableWriterTest extends SSTableWriterTestBase 
 
 / / These checks don ' t work on Windows because the writer has the channel still 
 / / open till . abort ( ) is called ( via the builder ) 
 - if ( ! FBUtilities . isWindows ( ) ) 
 + if ( ! FBUtilities . isWindows ) 
 { 
 LifecycleTransaction . waitForDeletions ( ) ; 
 assertFileCounts ( dir . list ( ) ) ; 
 diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTestBase . java b / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTestBase . java 
 index c399e7f . . 0abd7bc 100644 
 - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTestBase . java 
 + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableWriterTestBase . java 
 @ @ - 64 , 7 + 64 , 7 @ @ public class SSTableWriterTestBase extends SchemaLoader 
 @ BeforeClass 
 public static void defineSchema ( ) throws ConfigurationException 
 { 
 - if ( FBUtilities . isWindows ( ) ) 
 + if ( FBUtilities . isWindows ) 
 { 
 standardMode = DatabaseDescriptor . getDiskAccessMode ( ) ; 
 indexMode = DatabaseDescriptor . getIndexAccessMode ( ) ; 
 diff - - git a / test / unit / org / apache / cassandra / repair / messages / RepairOptionTest . java b / test / unit / org / apache / cassandra / repair / messages / RepairOptionTest . java 
 index 21e5d9b . . a564cff 100644 
 - - - a / test / unit / org / apache / cassandra / repair / messages / RepairOptionTest . java 
 + + + b / test / unit / org / apache / cassandra / repair / messages / RepairOptionTest . java 
 @ @ - 51 , 7 + 51 , 7 @ @ public class RepairOptionTest 
 / / parse with empty options 
 RepairOption option = RepairOption . parse ( new HashMap < String , String > ( ) , partitioner ) ; 
 
 - if ( FBUtilities . isWindows ( ) & & ( DatabaseDescriptor . getDiskAccessMode ( ) ! = Config . DiskAccessMode . standard | | DatabaseDescriptor . getIndexAccessMode ( ) ! = Config . DiskAccessMode . standard ) ) 
 + if ( FBUtilities . isWindows & & ( DatabaseDescriptor . getDiskAccessMode ( ) ! = Config . DiskAccessMode . standard | | DatabaseDescriptor . getIndexAccessMode ( ) ! = Config . DiskAccessMode . standard ) ) 
 assertTrue ( option . getParallelism ( ) = = RepairParallelism . PARALLEL ) ; 
 else 
 assertTrue ( option . getParallelism ( ) = = RepairParallelism . SEQUENTIAL ) ; 
 diff - - git a / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java b / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java 
 index e438a6b . . 498fc73 100644 
 - - - a / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java 
 + + + b / test / unit / org / apache / cassandra / service / StorageServiceServerTest . java 
 @ @ - 117 , 7 + 117 , 7 @ @ public class StorageServiceServerTest 
 @ Test 
 public void testSnapshotFailureHandler ( ) throws IOException 
 { 
 - assumeTrue ( FBUtilities . isWindows ( ) ) ; 
 + assumeTrue ( FBUtilities . isWindows ) ; 
 
 / / Initial " run " of Cassandra , nothing in failed snapshot file 
 WindowsFailedSnapshotTracker . deleteOldSnapshots ( ) ; 
 diff - - git a / test / unit / org / apache / cassandra / utils / NanoTimeToCurrentTimeMillisTest . java b / test / unit / org / apache / cassandra / utils / NanoTimeToCurrentTimeMillisTest . java 
 index b3dfad3 . . 25aeada 100644 
 - - - a / test / unit / org / apache / cassandra / utils / NanoTimeToCurrentTimeMillisTest . java 
 + + + b / test / unit / org / apache / cassandra / utils / NanoTimeToCurrentTimeMillisTest . java 
 @ @ - 41 , 11 + 41 , 11 @ @ public class NanoTimeToCurrentTimeMillisTest 
 nowNanos = Math . max ( nowNanos , System . nanoTime ( ) ) ; 
 long convertedNow = NanoTimeToCurrentTimeMillis . convert ( nowNanos ) ; 
 
 - int maxDiff = FBUtilities . isWindows ( ) ? 15 : 1 ; 
 + int maxDiff = FBUtilities . isWindows ? 15 : 1 ; 
 assertTrue ( " convertedNow = " + convertedNow + " lastConverted = " + lastConverted + " in iteration " + ii , 
 convertedNow > = ( lastConverted - maxDiff ) ) ; 
 
 - maxDiff = FBUtilities . isWindows ( ) ? 25 : 2 ; 
 + maxDiff = FBUtilities . isWindows ? 25 : 2 ; 
 assertTrue ( " now = " + now + " convertedNow = " + convertedNow + " in iteration " + ii , 
 ( maxDiff - 2 ) < = convertedNow ) ; 
 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / Stress . java b / tools / stress / src / org / apache / cassandra / stress / Stress . java 
 index daa7303 . . 50b1b81 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / Stress . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / Stress . java 
 @ @ - 55 , 12 + 55 , 12 @ @ public final class Stress 
 
 public static void main ( String [ ] arguments ) throws Exception 
 { 
 - if ( FBUtilities . isWindows ( ) ) 
 + if ( FBUtilities . isWindows ) 
 WindowsTimer . startTimerPeriod ( 1 ) ; 
 
 int exitCode = run ( arguments ) ; 
 
 - if ( FBUtilities . isWindows ( ) ) 
 + if ( FBUtilities . isWindows ) 
 WindowsTimer . endTimerPeriod ( 1 ) ; 
 
 System . exit ( exitCode ) ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / BlacklistedDirectories . java b / src / java / org / apache / cassandra / db / BlacklistedDirectories . java 
 new file mode 100644 
 index 0000000 . . 5ca7d1f 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / db / BlacklistedDirectories . java 
 @ @ - 0 , 0 + 1 , 100 @ @ 
 + / * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + package org . apache . cassandra . db ; 
 + 
 + import org . slf4j . Logger ; 
 + import org . slf4j . LoggerFactory ; 
 + 
 + import java . io . File ; 
 + import java . util . Set ; 
 + import java . util . concurrent . CopyOnWriteArraySet ; 
 + 
 + public class BlacklistedDirectories 
 + { 
 + private static final Logger logger = LoggerFactory . getLogger ( BlacklistedDirectories . class ) ; 
 + 
 + private static Set < File > unreadableDirectories = new CopyOnWriteArraySet < File > ( ) ; 
 + private static Set < File > unwritableDirectories = new CopyOnWriteArraySet < File > ( ) ; 
 + 
 + / * * 
 + * Adds parent directory of the file ( or the file itself , if it is a directory ) 
 + * to the set of unreadable directories . 
 + * 
 + * @ return the blacklisted directory or null if nothing has been added to the list . 
 + * / 
 + public static File maybeMarkUnreadable ( File path ) 
 + { 
 + File directory = getDirectory ( path ) ; 
 + if ( unreadableDirectories . add ( directory ) ) 
 + { 
 + logger . warn ( " Blacklisting { } for reads " , directory ) ; 
 + return directory ; 
 + } 
 + return null ; 
 + } 
 + 
 + / * * 
 + * Adds parent directory of the file ( or the file itself , if it is a directory ) 
 + * to the set of unwritable directories . 
 + * 
 + * @ return the blacklisted directory or null if nothing has been added to the list . 
 + * / 
 + public static File maybeMarkUnwritable ( File path ) 
 + { 
 + File directory = getDirectory ( path ) ; 
 + if ( unwritableDirectories . add ( directory ) ) 
 + { 
 + logger . warn ( " Blacklisting { } for writes " , directory ) ; 
 + return directory ; 
 + } 
 + return null ; 
 + } 
 + 
 + / * * 
 + * Tells whether or not the directory is blacklisted for reads . 
 + * @ return whether or not the directory is blacklisted for reads . 
 + * / 
 + public static boolean isUnreadable ( File directory ) 
 + { 
 + return unreadableDirectories . contains ( directory ) ; 
 + } 
 + 
 + / * * 
 + * Tells whether or not the directory is blacklisted for writes . 
 + * @ return whether or not the directory is blacklisted for reads . 
 + * / 
 + public static boolean isUnwritable ( File directory ) 
 + { 
 + return unwritableDirectories . contains ( directory ) ; 
 + } 
 + 
 + private static File getDirectory ( File file ) 
 + { 
 + if ( file . isDirectory ( ) ) 
 + return file ; 
 + 
 + if ( file . isFile ( ) ) 
 + return file . getParentFile ( ) ; 
 + 
 + / / the file with path cannot be read - try determining the directory manually . 
 + if ( file . getPath ( ) . endsWith ( " . db " ) ) 
 + return file . getParentFile ( ) ; 
 + 
 + throw new IllegalStateException ( " Unable to parse directory from path " + file ) ; 
 + } 
 + }
