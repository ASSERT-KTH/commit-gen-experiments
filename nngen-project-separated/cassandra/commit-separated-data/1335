BLEU SCORE: 0.024367494694068095

TEST MSG: 3 . 0 patch for CASSANDRA - 10222
GENERATED MSG: Retry snapshot deletion after compaction and gc on Windows

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c1f6992 . . fccaf11 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 15 , 6 + 15 , 7 @ @ <nl> * Validate gc _ grace _ seconds for batchlog writes and MVs ( CASSANDRA - 9917 ) <nl> * Fix sstablerepairedset ( CASSANDRA - 10132 ) <nl> Merged from 2 . 2 : <nl> + * Retry snapshot deletion after compaction and gc on Windows ( CASSANDRA - 10222 ) <nl> * Fix failure to start with space in directory path on Windows ( CASSANDRA - 10239 ) <nl> * Fix repair hang when snapshot failed ( CASSANDRA - 10057 ) <nl> * Fall back to 1 / 4 commitlog volume for commitlog _ total _ space on small disks <nl> diff - - git a / src / java / org / apache / cassandra / db / Directories . java b / src / java / org / apache / cassandra / db / Directories . java <nl> index 90d2085 . . c17b1fd 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Directories . java <nl> + + + b / src / java / org / apache / cassandra / db / Directories . java <nl> @ @ - 800 , 14 + 800 , 9 @ @ public class Directories <nl> catch ( FSWriteError e ) <nl> { <nl> if ( FBUtilities . isWindows ( ) ) <nl> - { <nl> - logger . warn ( " Failed to delete snapshot directory [ { } ] . Folder will be deleted on JVM shutdown or next node restart on crash . You can safely attempt to delete this folder but it will fail so long as readers are open on the files . " , snapshotDir ) ; <nl> - WindowsFailedSnapshotTracker . handleFailedSnapshot ( snapshotDir ) ; <nl> - } <nl> + SnapshotDeletingTask . addFailedSnapshot ( snapshotDir ) ; <nl> else <nl> - { <nl> throw e ; <nl> - } <nl> } <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / WindowsFailedSnapshotTracker . java b / src / java / org / apache / cassandra / db / WindowsFailedSnapshotTracker . java <nl> index ce89823 . . 9e6bb47 100644 <nl> - - - a / src / java / org / apache / cassandra / db / WindowsFailedSnapshotTracker . java <nl> + + + b / src / java / org / apache / cassandra / db / WindowsFailedSnapshotTracker . java <nl> @ @ - 101 , 7 + 101 , 7 @ @ public class WindowsFailedSnapshotTracker <nl> <nl> public static synchronized void handleFailedSnapshot ( File dir ) <nl> { <nl> - assert ( _ failedSnapshotFile ! = null ) ; <nl> + assert _ failedSnapshotFile ! = null : " _ failedSnapshotFile not initialized within WindowsFailedSnapshotTracker " ; <nl> FileUtils . deleteRecursiveOnExit ( dir ) ; <nl> _ failedSnapshotFile . println ( dir . toString ( ) ) ; <nl> _ failedSnapshotFile . flush ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> index 0890341 . . 07678b5 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> @ @ - 54 , 6 + 54 , 7 @ @ import org . apache . cassandra . index . SecondaryIndexBuilder ; <nl> import org . apache . cassandra . io . sstable . Descriptor ; <nl> import org . apache . cassandra . io . sstable . ISSTableScanner ; <nl> import org . apache . cassandra . io . sstable . SSTableRewriter ; <nl> + import org . apache . cassandra . io . sstable . SnapshotDeletingTask ; <nl> import org . apache . cassandra . io . sstable . format . SSTableReader ; <nl> import org . apache . cassandra . io . sstable . format . SSTableWriter ; <nl> import org . apache . cassandra . io . sstable . metadata . MetadataCollector ; <nl> @ @ - 1421 , 6 + 1422 , 10 @ @ public class CompactionManager implements CompactionManagerMBean <nl> DebuggableThreadPoolExecutor . handleOrLog ( t ) ; <nl> } <nl> } <nl> + <nl> + / / Snapshots cannot be deleted on Windows while segments of the root element are mapped in NTFS . Compactions <nl> + / / unmap those segments which could free up a snapshot for successful deletion . <nl> + SnapshotDeletingTask . rescheduleFailedTasks ( ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / db / lifecycle / TransactionLog . java b / src / java / org / apache / cassandra / db / lifecycle / TransactionLog . java <nl> index 8f83f2c . . 69de370 100644 <nl> - - - a / src / java / org / apache / cassandra / db / lifecycle / TransactionLog . java <nl> + + + b / src / java / org / apache / cassandra / db / lifecycle / TransactionLog . java <nl> @ @ - 49 , 6 + 49 , 7 @ @ import org . apache . cassandra . db . compaction . OperationType ; <nl> import org . apache . cassandra . io . sstable . Component ; <nl> import org . apache . cassandra . io . sstable . Descriptor ; <nl> import org . apache . cassandra . io . sstable . SSTable ; <nl> + import org . apache . cassandra . io . sstable . SnapshotDeletingTask ; <nl> import org . apache . cassandra . io . sstable . format . SSTableReader ; <nl> import org . apache . cassandra . io . sstable . format . big . BigFormat ; <nl> import org . apache . cassandra . io . util . FileUtils ; <nl> @ @ - 927 , 6 + 928 , 9 @ @ public class TransactionLog extends Transactional . AbstractTransactional implemen <nl> Runnable task ; <nl> while ( null ! = ( task = failedDeletions . poll ( ) ) ) <nl> ScheduledExecutors . nonPeriodicTasks . submit ( task ) ; <nl> + <nl> + / / On Windows , snapshots cannot be deleted so long as a segment of the root element is memory - mapped in NTFS . <nl> + SnapshotDeletingTask . rescheduleFailedTasks ( ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SnapshotDeletingTask . java b / src / java / org / apache / cassandra / io / sstable / SnapshotDeletingTask . java <nl> new file mode 100644 <nl> index 0000000 . . 7ab1f11 <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SnapshotDeletingTask . java <nl> @ @ - 0 , 0 + 1 , 83 @ @ <nl> + / * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package org . apache . cassandra . io . sstable ; <nl> + <nl> + import java . io . File ; <nl> + import java . util . Set ; <nl> + import java . util . concurrent . CopyOnWriteArraySet ; <nl> + <nl> + import com . google . common . annotations . VisibleForTesting ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + <nl> + import org . apache . cassandra . concurrent . ScheduledExecutors ; <nl> + import org . apache . cassandra . db . WindowsFailedSnapshotTracker ; <nl> + import org . apache . cassandra . io . FSWriteError ; <nl> + import org . apache . cassandra . io . util . FileUtils ; <nl> + <nl> + public class SnapshotDeletingTask implements Runnable <nl> + { <nl> + private static final Logger logger = LoggerFactory . getLogger ( SnapshotDeletingTask . class ) ; <nl> + <nl> + public final File path ; <nl> + private static final Set < SnapshotDeletingTask > failedTasks = new CopyOnWriteArraySet < > ( ) ; <nl> + <nl> + public static void addFailedSnapshot ( File path ) <nl> + { <nl> + logger . warn ( " Failed to delete snapshot [ { } ] . Will retry after further sstable deletions . Folder will be deleted on JVM shutdown or next node restart on crash . " , path ) ; <nl> + WindowsFailedSnapshotTracker . handleFailedSnapshot ( path ) ; <nl> + failedTasks . add ( new SnapshotDeletingTask ( path ) ) ; <nl> + } <nl> + <nl> + private SnapshotDeletingTask ( File path ) <nl> + { <nl> + this . path = path ; <nl> + } <nl> + <nl> + public void run ( ) <nl> + { <nl> + try <nl> + { <nl> + FileUtils . deleteRecursive ( path ) ; <nl> + logger . info ( " Successfully deleted snapshot { } . " , path ) ; <nl> + } <nl> + catch ( FSWriteError e ) <nl> + { <nl> + failedTasks . add ( this ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Retry all failed deletions . <nl> + * / <nl> + public static void rescheduleFailedTasks ( ) <nl> + { <nl> + for ( SnapshotDeletingTask task : failedTasks ) <nl> + { <nl> + failedTasks . remove ( task ) ; <nl> + ScheduledExecutors . nonPeriodicTasks . submit ( task ) ; <nl> + } <nl> + } <nl> + <nl> + @ VisibleForTesting <nl> + public static int pendingDeletionCount ( ) <nl> + { <nl> + return failedTasks . size ( ) ; <nl> + } <nl> + } <nl> diff - - git a / test / unit / org / apache / cassandra / db / commitlog / SnapshotDeletingTest . java b / test / unit / org / apache / cassandra / db / commitlog / SnapshotDeletingTest . java <nl> new file mode 100644 <nl> index 0000000 . . 37f1731 <nl> - - - / dev / null <nl> + + + b / test / unit / org / apache / cassandra / db / commitlog / SnapshotDeletingTest . java <nl> @ @ - 0 , 0 + 1 , 106 @ @ <nl> + / * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package org . apache . cassandra . db . commitlog ; <nl> + <nl> + import org . junit . Assume ; <nl> + import org . junit . BeforeClass ; <nl> + import org . junit . Test ; <nl> + import static org . junit . Assert . * ; <nl> + <nl> + import org . apache . cassandra . SchemaLoader ; <nl> + import org . apache . cassandra . Util ; <nl> + import org . apache . cassandra . config . CFMetaData ; <nl> + import org . apache . cassandra . db . ColumnFamilyStore ; <nl> + import org . apache . cassandra . db . DecoratedKey ; <nl> + import org . apache . cassandra . db . Keyspace ; <nl> + import org . apache . cassandra . db . RowUpdateBuilder ; <nl> + import org . apache . cassandra . db . WindowsFailedSnapshotTracker ; <nl> + import org . apache . cassandra . exceptions . ConfigurationException ; <nl> + import org . apache . cassandra . io . sstable . SnapshotDeletingTask ; <nl> + import org . apache . cassandra . schema . KeyspaceParams ; <nl> + import org . apache . cassandra . service . GCInspector ; <nl> + import org . apache . cassandra . utils . ByteBufferUtil ; <nl> + import org . apache . cassandra . utils . FBUtilities ; <nl> + <nl> + public class SnapshotDeletingTest <nl> + { <nl> + private static final String KEYSPACE1 = " Keyspace1 " ; <nl> + private static final String CF _ STANDARD1 = " CF _ STANDARD1 " ; <nl> + <nl> + @ BeforeClass <nl> + public static void defineSchema ( ) throws Exception <nl> + { <nl> + GCInspector . register ( ) ; <nl> + / / Needed to init the output file where we print failed snapshots . This is called on node startup . <nl> + WindowsFailedSnapshotTracker . deleteOldSnapshots ( ) ; <nl> + SchemaLoader . prepareServer ( ) ; <nl> + SchemaLoader . createKeyspace ( KEYSPACE1 , <nl> + KeyspaceParams . simple ( 1 ) , <nl> + SchemaLoader . standardCFMD ( KEYSPACE1 , CF _ STANDARD1 ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testCompactionHook ( ) throws Exception <nl> + { <nl> + Assume . assumeTrue ( FBUtilities . isWindows ( ) ) ; <nl> + <nl> + Keyspace keyspace = Keyspace . open ( KEYSPACE1 ) ; <nl> + ColumnFamilyStore store = keyspace . getColumnFamilyStore ( CF _ STANDARD1 ) ; <nl> + store . clearUnsafe ( ) ; <nl> + <nl> + populate ( 10000 ) ; <nl> + store . snapshot ( " snapshot1 " ) ; <nl> + <nl> + / / Confirm snapshot deletion fails . Sleep for a bit just to make sure the SnapshotDeletingTask has <nl> + / / time to run and fail . <nl> + Thread . sleep ( 500 ) ; <nl> + store . clearSnapshot ( " snapshot1 " ) ; <nl> + assertEquals ( 1 , SnapshotDeletingTask . pendingDeletionCount ( ) ) ; <nl> + <nl> + / / Compact the cf and confirm that the executor ' s after hook calls rescheduleDeletion <nl> + populate ( 20000 ) ; <nl> + store . forceBlockingFlush ( ) ; <nl> + store . forceMajorCompaction ( ) ; <nl> + <nl> + long start = System . currentTimeMillis ( ) ; <nl> + while ( System . currentTimeMillis ( ) - start < 1000 & & SnapshotDeletingTask . pendingDeletionCount ( ) > 0 ) <nl> + { <nl> + Thread . yield ( ) ; <nl> + } <nl> + <nl> + assertEquals ( 0 , SnapshotDeletingTask . pendingDeletionCount ( ) ) ; <nl> + } <nl> + <nl> + private void populate ( int rowCount ) { <nl> + long timestamp = System . currentTimeMillis ( ) ; <nl> + CFMetaData cfm = Keyspace . open ( KEYSPACE1 ) . getColumnFamilyStore ( CF _ STANDARD1 ) . metadata ; <nl> + for ( int i = 0 ; i < = rowCount ; i + + ) <nl> + { <nl> + DecoratedKey key = Util . dk ( Integer . toString ( i ) ) ; <nl> + for ( int j = 0 ; j < 10 ; j + + ) <nl> + { <nl> + new RowUpdateBuilder ( cfm , timestamp , 0 , key . getKey ( ) ) <nl> + . clustering ( Integer . toString ( j ) ) <nl> + . add ( " val " , ByteBufferUtil . EMPTY _ BYTE _ BUFFER ) <nl> + . build ( ) <nl> + . applyUnsafe ( ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> diff - - git a / test / unit / org / apache / cassandra / db / compaction / CompactionsTest . java b / test / unit / org / apache / cassandra / db / compaction / CompactionsTest . java <nl> index 091bc03 . . 198b01b 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / compaction / CompactionsTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / compaction / CompactionsTest . java <nl> @ @ - 115 , 7 + 115 , 8 @ @ public class CompactionsTest <nl> return store ; <nl> } <nl> <nl> - private long populate ( String ks , String cf , int startRowKey , int endRowKey , int ttl ) { <nl> + private long populate ( String ks , String cf , int startRowKey , int endRowKey , int ttl ) <nl> + { <nl> long timestamp = System . currentTimeMillis ( ) ; <nl> CFMetaData cfm = Keyspace . open ( ks ) . getColumnFamilyStore ( cf ) . metadata ; <nl> for ( int i = startRowKey ; i < = endRowKey ; i + + )
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c1f6992 . . fccaf11 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 15 , 6 + 15 , 7 @ @ 
 * Validate gc _ grace _ seconds for batchlog writes and MVs ( CASSANDRA - 9917 ) 
 * Fix sstablerepairedset ( CASSANDRA - 10132 ) 
 Merged from 2 . 2 : 
 + * Retry snapshot deletion after compaction and gc on Windows ( CASSANDRA - 10222 ) 
 * Fix failure to start with space in directory path on Windows ( CASSANDRA - 10239 ) 
 * Fix repair hang when snapshot failed ( CASSANDRA - 10057 ) 
 * Fall back to 1 / 4 commitlog volume for commitlog _ total _ space on small disks 
 diff - - git a / src / java / org / apache / cassandra / db / Directories . java b / src / java / org / apache / cassandra / db / Directories . java 
 index 90d2085 . . c17b1fd 100644 
 - - - a / src / java / org / apache / cassandra / db / Directories . java 
 + + + b / src / java / org / apache / cassandra / db / Directories . java 
 @ @ - 800 , 14 + 800 , 9 @ @ public class Directories 
 catch ( FSWriteError e ) 
 { 
 if ( FBUtilities . isWindows ( ) ) 
 - { 
 - logger . warn ( " Failed to delete snapshot directory [ { } ] . Folder will be deleted on JVM shutdown or next node restart on crash . You can safely attempt to delete this folder but it will fail so long as readers are open on the files . " , snapshotDir ) ; 
 - WindowsFailedSnapshotTracker . handleFailedSnapshot ( snapshotDir ) ; 
 - } 
 + SnapshotDeletingTask . addFailedSnapshot ( snapshotDir ) ; 
 else 
 - { 
 throw e ; 
 - } 
 } 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / WindowsFailedSnapshotTracker . java b / src / java / org / apache / cassandra / db / WindowsFailedSnapshotTracker . java 
 index ce89823 . . 9e6bb47 100644 
 - - - a / src / java / org / apache / cassandra / db / WindowsFailedSnapshotTracker . java 
 + + + b / src / java / org / apache / cassandra / db / WindowsFailedSnapshotTracker . java 
 @ @ - 101 , 7 + 101 , 7 @ @ public class WindowsFailedSnapshotTracker 
 
 public static synchronized void handleFailedSnapshot ( File dir ) 
 { 
 - assert ( _ failedSnapshotFile ! = null ) ; 
 + assert _ failedSnapshotFile ! = null : " _ failedSnapshotFile not initialized within WindowsFailedSnapshotTracker " ; 
 FileUtils . deleteRecursiveOnExit ( dir ) ; 
 _ failedSnapshotFile . println ( dir . toString ( ) ) ; 
 _ failedSnapshotFile . flush ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 index 0890341 . . 07678b5 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 @ @ - 54 , 6 + 54 , 7 @ @ import org . apache . cassandra . index . SecondaryIndexBuilder ; 
 import org . apache . cassandra . io . sstable . Descriptor ; 
 import org . apache . cassandra . io . sstable . ISSTableScanner ; 
 import org . apache . cassandra . io . sstable . SSTableRewriter ; 
 + import org . apache . cassandra . io . sstable . SnapshotDeletingTask ; 
 import org . apache . cassandra . io . sstable . format . SSTableReader ; 
 import org . apache . cassandra . io . sstable . format . SSTableWriter ; 
 import org . apache . cassandra . io . sstable . metadata . MetadataCollector ; 
 @ @ - 1421 , 6 + 1422 , 10 @ @ public class CompactionManager implements CompactionManagerMBean 
 DebuggableThreadPoolExecutor . handleOrLog ( t ) ; 
 } 
 } 
 + 
 + / / Snapshots cannot be deleted on Windows while segments of the root element are mapped in NTFS . Compactions 
 + / / unmap those segments which could free up a snapshot for successful deletion . 
 + SnapshotDeletingTask . rescheduleFailedTasks ( ) ; 
 } 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / db / lifecycle / TransactionLog . java b / src / java / org / apache / cassandra / db / lifecycle / TransactionLog . java 
 index 8f83f2c . . 69de370 100644 
 - - - a / src / java / org / apache / cassandra / db / lifecycle / TransactionLog . java 
 + + + b / src / java / org / apache / cassandra / db / lifecycle / TransactionLog . java 
 @ @ - 49 , 6 + 49 , 7 @ @ import org . apache . cassandra . db . compaction . OperationType ; 
 import org . apache . cassandra . io . sstable . Component ; 
 import org . apache . cassandra . io . sstable . Descriptor ; 
 import org . apache . cassandra . io . sstable . SSTable ; 
 + import org . apache . cassandra . io . sstable . SnapshotDeletingTask ; 
 import org . apache . cassandra . io . sstable . format . SSTableReader ; 
 import org . apache . cassandra . io . sstable . format . big . BigFormat ; 
 import org . apache . cassandra . io . util . FileUtils ; 
 @ @ - 927 , 6 + 928 , 9 @ @ public class TransactionLog extends Transactional . AbstractTransactional implemen 
 Runnable task ; 
 while ( null ! = ( task = failedDeletions . poll ( ) ) ) 
 ScheduledExecutors . nonPeriodicTasks . submit ( task ) ; 
 + 
 + / / On Windows , snapshots cannot be deleted so long as a segment of the root element is memory - mapped in NTFS . 
 + SnapshotDeletingTask . rescheduleFailedTasks ( ) ; 
 } 
 
 / * * 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SnapshotDeletingTask . java b / src / java / org / apache / cassandra / io / sstable / SnapshotDeletingTask . java 
 new file mode 100644 
 index 0000000 . . 7ab1f11 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / io / sstable / SnapshotDeletingTask . java 
 @ @ - 0 , 0 + 1 , 83 @ @ 
 + / * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package org . apache . cassandra . io . sstable ; 
 + 
 + import java . io . File ; 
 + import java . util . Set ; 
 + import java . util . concurrent . CopyOnWriteArraySet ; 
 + 
 + import com . google . common . annotations . VisibleForTesting ; 
 + import org . slf4j . Logger ; 
 + import org . slf4j . LoggerFactory ; 
 + 
 + import org . apache . cassandra . concurrent . ScheduledExecutors ; 
 + import org . apache . cassandra . db . WindowsFailedSnapshotTracker ; 
 + import org . apache . cassandra . io . FSWriteError ; 
 + import org . apache . cassandra . io . util . FileUtils ; 
 + 
 + public class SnapshotDeletingTask implements Runnable 
 + { 
 + private static final Logger logger = LoggerFactory . getLogger ( SnapshotDeletingTask . class ) ; 
 + 
 + public final File path ; 
 + private static final Set < SnapshotDeletingTask > failedTasks = new CopyOnWriteArraySet < > ( ) ; 
 + 
 + public static void addFailedSnapshot ( File path ) 
 + { 
 + logger . warn ( " Failed to delete snapshot [ { } ] . Will retry after further sstable deletions . Folder will be deleted on JVM shutdown or next node restart on crash . " , path ) ; 
 + WindowsFailedSnapshotTracker . handleFailedSnapshot ( path ) ; 
 + failedTasks . add ( new SnapshotDeletingTask ( path ) ) ; 
 + } 
 + 
 + private SnapshotDeletingTask ( File path ) 
 + { 
 + this . path = path ; 
 + } 
 + 
 + public void run ( ) 
 + { 
 + try 
 + { 
 + FileUtils . deleteRecursive ( path ) ; 
 + logger . info ( " Successfully deleted snapshot { } . " , path ) ; 
 + } 
 + catch ( FSWriteError e ) 
 + { 
 + failedTasks . add ( this ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * Retry all failed deletions . 
 + * / 
 + public static void rescheduleFailedTasks ( ) 
 + { 
 + for ( SnapshotDeletingTask task : failedTasks ) 
 + { 
 + failedTasks . remove ( task ) ; 
 + ScheduledExecutors . nonPeriodicTasks . submit ( task ) ; 
 + } 
 + } 
 + 
 + @ VisibleForTesting 
 + public static int pendingDeletionCount ( ) 
 + { 
 + return failedTasks . size ( ) ; 
 + } 
 + } 
 diff - - git a / test / unit / org / apache / cassandra / db / commitlog / SnapshotDeletingTest . java b / test / unit / org / apache / cassandra / db / commitlog / SnapshotDeletingTest . java 
 new file mode 100644 
 index 0000000 . . 37f1731 
 - - - / dev / null 
 + + + b / test / unit / org / apache / cassandra / db / commitlog / SnapshotDeletingTest . java 
 @ @ - 0 , 0 + 1 , 106 @ @ 
 + / * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package org . apache . cassandra . db . commitlog ; 
 + 
 + import org . junit . Assume ; 
 + import org . junit . BeforeClass ; 
 + import org . junit . Test ; 
 + import static org . junit . Assert . * ; 
 + 
 + import org . apache . cassandra . SchemaLoader ; 
 + import org . apache . cassandra . Util ; 
 + import org . apache . cassandra . config . CFMetaData ; 
 + import org . apache . cassandra . db . ColumnFamilyStore ; 
 + import org . apache . cassandra . db . DecoratedKey ; 
 + import org . apache . cassandra . db . Keyspace ; 
 + import org . apache . cassandra . db . RowUpdateBuilder ; 
 + import org . apache . cassandra . db . WindowsFailedSnapshotTracker ; 
 + import org . apache . cassandra . exceptions . ConfigurationException ; 
 + import org . apache . cassandra . io . sstable . SnapshotDeletingTask ; 
 + import org . apache . cassandra . schema . KeyspaceParams ; 
 + import org . apache . cassandra . service . GCInspector ; 
 + import org . apache . cassandra . utils . ByteBufferUtil ; 
 + import org . apache . cassandra . utils . FBUtilities ; 
 + 
 + public class SnapshotDeletingTest 
 + { 
 + private static final String KEYSPACE1 = " Keyspace1 " ; 
 + private static final String CF _ STANDARD1 = " CF _ STANDARD1 " ; 
 + 
 + @ BeforeClass 
 + public static void defineSchema ( ) throws Exception 
 + { 
 + GCInspector . register ( ) ; 
 + / / Needed to init the output file where we print failed snapshots . This is called on node startup . 
 + WindowsFailedSnapshotTracker . deleteOldSnapshots ( ) ; 
 + SchemaLoader . prepareServer ( ) ; 
 + SchemaLoader . createKeyspace ( KEYSPACE1 , 
 + KeyspaceParams . simple ( 1 ) , 
 + SchemaLoader . standardCFMD ( KEYSPACE1 , CF _ STANDARD1 ) ) ; 
 + } 
 + 
 + @ Test 
 + public void testCompactionHook ( ) throws Exception 
 + { 
 + Assume . assumeTrue ( FBUtilities . isWindows ( ) ) ; 
 + 
 + Keyspace keyspace = Keyspace . open ( KEYSPACE1 ) ; 
 + ColumnFamilyStore store = keyspace . getColumnFamilyStore ( CF _ STANDARD1 ) ; 
 + store . clearUnsafe ( ) ; 
 + 
 + populate ( 10000 ) ; 
 + store . snapshot ( " snapshot1 " ) ; 
 + 
 + / / Confirm snapshot deletion fails . Sleep for a bit just to make sure the SnapshotDeletingTask has 
 + / / time to run and fail . 
 + Thread . sleep ( 500 ) ; 
 + store . clearSnapshot ( " snapshot1 " ) ; 
 + assertEquals ( 1 , SnapshotDeletingTask . pendingDeletionCount ( ) ) ; 
 + 
 + / / Compact the cf and confirm that the executor ' s after hook calls rescheduleDeletion 
 + populate ( 20000 ) ; 
 + store . forceBlockingFlush ( ) ; 
 + store . forceMajorCompaction ( ) ; 
 + 
 + long start = System . currentTimeMillis ( ) ; 
 + while ( System . currentTimeMillis ( ) - start < 1000 & & SnapshotDeletingTask . pendingDeletionCount ( ) > 0 ) 
 + { 
 + Thread . yield ( ) ; 
 + } 
 + 
 + assertEquals ( 0 , SnapshotDeletingTask . pendingDeletionCount ( ) ) ; 
 + } 
 + 
 + private void populate ( int rowCount ) { 
 + long timestamp = System . currentTimeMillis ( ) ; 
 + CFMetaData cfm = Keyspace . open ( KEYSPACE1 ) . getColumnFamilyStore ( CF _ STANDARD1 ) . metadata ; 
 + for ( int i = 0 ; i < = rowCount ; i + + ) 
 + { 
 + DecoratedKey key = Util . dk ( Integer . toString ( i ) ) ; 
 + for ( int j = 0 ; j < 10 ; j + + ) 
 + { 
 + new RowUpdateBuilder ( cfm , timestamp , 0 , key . getKey ( ) ) 
 + . clustering ( Integer . toString ( j ) ) 
 + . add ( " val " , ByteBufferUtil . EMPTY _ BYTE _ BUFFER ) 
 + . build ( ) 
 + . applyUnsafe ( ) ; 
 + } 
 + } 
 + } 
 + } 
 diff - - git a / test / unit / org / apache / cassandra / db / compaction / CompactionsTest . java b / test / unit / org / apache / cassandra / db / compaction / CompactionsTest . java 
 index 091bc03 . . 198b01b 100644 
 - - - a / test / unit / org / apache / cassandra / db / compaction / CompactionsTest . java 
 + + + b / test / unit / org / apache / cassandra / db / compaction / CompactionsTest . java 
 @ @ - 115 , 7 + 115 , 8 @ @ public class CompactionsTest 
 return store ; 
 } 
 
 - private long populate ( String ks , String cf , int startRowKey , int endRowKey , int ttl ) { 
 + private long populate ( String ks , String cf , int startRowKey , int endRowKey , int ttl ) 
 + { 
 long timestamp = System . currentTimeMillis ( ) ; 
 CFMetaData cfm = Keyspace . open ( ks ) . getColumnFamilyStore ( cf ) . metadata ; 
 for ( int i = startRowKey ; i < = endRowKey ; i + + )

NEAREST DIFF:
ELIMINATEDSENTENCE
