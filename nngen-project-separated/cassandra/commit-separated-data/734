BLEU SCORE: 0.16784459625186196

TEST MSG: Disable RR and speculative retry with EACH _ QUORUM reads
GENERATED MSG: Allow EACH _ QUORUM for reads

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 342382e . . 3c485dd 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 9 <nl> + * Disable RR and speculative retry with EACH _ QUORUM reads ( CASSANDRA - 11980 ) <nl> * Add option to override compaction space check ( CASSANDRA - 12180 ) <nl> * Faster startup by only scanning each directory for temporary files once ( CASSANDRA - 12114 ) <nl> * Respond with v1 / v2 protocol header when responding to driver that attempts <nl> diff - - git a / src / java / org / apache / cassandra / service / AbstractReadExecutor . java b / src / java / org / apache / cassandra / service / AbstractReadExecutor . java <nl> index 05fa437 . . cae1f1a 100644 <nl> - - - a / src / java / org / apache / cassandra / service / AbstractReadExecutor . java <nl> + + + b / src / java / org / apache / cassandra / service / AbstractReadExecutor . java <nl> @ @ - 152 , 7 + 152 , 10 @ @ public abstract class AbstractReadExecutor <nl> { <nl> Keyspace keyspace = Keyspace . open ( command . metadata ( ) . ksName ) ; <nl> List < InetAddress > allReplicas = StorageProxy . getLiveSortedEndpoints ( keyspace , command . partitionKey ( ) ) ; <nl> - ReadRepairDecision repairDecision = command . metadata ( ) . newReadRepairDecision ( ) ; <nl> + / / 11980 : Excluding EACH _ QUORUM reads from potential RR , so that we do not miscount DC responses <nl> + ReadRepairDecision repairDecision = consistencyLevel = = ConsistencyLevel . EACH _ QUORUM <nl> + ? ReadRepairDecision . NONE <nl> + : command . metadata ( ) . newReadRepairDecision ( ) ; <nl> List < InetAddress > targetReplicas = consistencyLevel . filterForQuery ( keyspace , allReplicas , repairDecision ) ; <nl> <nl> / / Throw UAE early if we don ' t have enough replicas . <nl> @ @ - 168 , 7 + 171 , 10 @ @ public abstract class AbstractReadExecutor <nl> SpeculativeRetryParam retry = cfs . metadata . params . speculativeRetry ; <nl> <nl> / / Speculative retry is disabled * OR * there are simply no extra replicas to speculate . <nl> - if ( retry . equals ( SpeculativeRetryParam . NONE ) | | consistencyLevel . blockFor ( keyspace ) = = allReplicas . size ( ) ) <nl> + / / 11980 : Disable speculative retry if using EACH _ QUORUM in order to prevent miscounting DC responses <nl> + if ( retry . equals ( SpeculativeRetryParam . NONE ) <nl> + | | consistencyLevel = = ConsistencyLevel . EACH _ QUORUM <nl> + | | consistencyLevel . blockFor ( keyspace ) = = allReplicas . size ( ) ) <nl> return new NeverSpeculatingReadExecutor ( keyspace , command , consistencyLevel , targetReplicas ) ; <nl> <nl> if ( targetReplicas . size ( ) = = allReplicas . size ( ) )
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 342382e . . 3c485dd 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 9 
 + * Disable RR and speculative retry with EACH _ QUORUM reads ( CASSANDRA - 11980 ) 
 * Add option to override compaction space check ( CASSANDRA - 12180 ) 
 * Faster startup by only scanning each directory for temporary files once ( CASSANDRA - 12114 ) 
 * Respond with v1 / v2 protocol header when responding to driver that attempts 
 diff - - git a / src / java / org / apache / cassandra / service / AbstractReadExecutor . java b / src / java / org / apache / cassandra / service / AbstractReadExecutor . java 
 index 05fa437 . . cae1f1a 100644 
 - - - a / src / java / org / apache / cassandra / service / AbstractReadExecutor . java 
 + + + b / src / java / org / apache / cassandra / service / AbstractReadExecutor . java 
 @ @ - 152 , 7 + 152 , 10 @ @ public abstract class AbstractReadExecutor 
 { 
 Keyspace keyspace = Keyspace . open ( command . metadata ( ) . ksName ) ; 
 List < InetAddress > allReplicas = StorageProxy . getLiveSortedEndpoints ( keyspace , command . partitionKey ( ) ) ; 
 - ReadRepairDecision repairDecision = command . metadata ( ) . newReadRepairDecision ( ) ; 
 + / / 11980 : Excluding EACH _ QUORUM reads from potential RR , so that we do not miscount DC responses 
 + ReadRepairDecision repairDecision = consistencyLevel = = ConsistencyLevel . EACH _ QUORUM 
 + ? ReadRepairDecision . NONE 
 + : command . metadata ( ) . newReadRepairDecision ( ) ; 
 List < InetAddress > targetReplicas = consistencyLevel . filterForQuery ( keyspace , allReplicas , repairDecision ) ; 
 
 / / Throw UAE early if we don ' t have enough replicas . 
 @ @ - 168 , 7 + 171 , 10 @ @ public abstract class AbstractReadExecutor 
 SpeculativeRetryParam retry = cfs . metadata . params . speculativeRetry ; 
 
 / / Speculative retry is disabled * OR * there are simply no extra replicas to speculate . 
 - if ( retry . equals ( SpeculativeRetryParam . NONE ) | | consistencyLevel . blockFor ( keyspace ) = = allReplicas . size ( ) ) 
 + / / 11980 : Disable speculative retry if using EACH _ QUORUM in order to prevent miscounting DC responses 
 + if ( retry . equals ( SpeculativeRetryParam . NONE ) 
 + | | consistencyLevel = = ConsistencyLevel . EACH _ QUORUM 
 + | | consistencyLevel . blockFor ( keyspace ) = = allReplicas . size ( ) ) 
 return new NeverSpeculatingReadExecutor ( keyspace , command , consistencyLevel , targetReplicas ) ; 
 
 if ( targetReplicas . size ( ) = = allReplicas . size ( ) )

NEAREST DIFF:
ELIMINATEDSENTENCE
