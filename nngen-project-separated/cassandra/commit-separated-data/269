BLEU SCORE: 0.02378850384826639

TEST MSG: revert CBUtil . writeValue as pre discussion on CASSANDRA - 13789
GENERATED MSG: use size of sstables as load , instead of naively counting everything in the data directories

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 6e91a48 . . ea73fcd 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> 4 . 0 <nl> - * Update lz4 to 1 . 4 . 0 ( 13741 ) <nl> + * Update lz4 to 1 . 4 . 0 ( CASSANDRA - 13741 ) <nl> * Optimize Paxos prepare and propose stage for local requests ( CASSANDRA - 13862 ) <nl> * Throttle base partitions during MV repair streaming to prevent OOM ( CASSANDRA - 13299 ) <nl> * Use compaction threshold for STCS in L0 ( CASSANDRA - 13861 ) <nl> diff - - git a / src / java / org / apache / cassandra / transport / CBUtil . java b / src / java / org / apache / cassandra / transport / CBUtil . java <nl> index 52217a9 . . 80b80b4 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / CBUtil . java <nl> + + + b / src / java / org / apache / cassandra / transport / CBUtil . java <nl> @ @ - 444 , 12 + 444 , 7 @ @ public abstract class CBUtil <nl> cb . writeInt ( remaining ) ; <nl> <nl> if ( remaining > 0 ) <nl> - { <nl> - / / write and reset original position so we not need to create a duplicate . <nl> - int position = bytes . position ( ) ; <nl> - cb . writeBytes ( bytes ) ; <nl> - bytes . position ( position ) ; <nl> - } <nl> + cb . writeBytes ( bytes . duplicate ( ) ) ; <nl> } <nl> <nl> public static int sizeOfValue ( byte [ ] bytes )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index fb26977 . . d4d27f1 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 5 , 6 + 5 , 7 @ @ <nl> * fix NPE in get _ range _ slice when no data is found ( CASSANDRA - 578 ) <nl> * fix potential NPE in hinted handoff ( CASSANDRA - 585 ) <nl> * fix cleanup of local " system " keyspace ( CASSANDRA - 576 ) <nl> + * improve computation of cluster load balance ( CASSANDRA - 554 ) <nl> <nl> <nl> 0 . 5 . 0 beta <nl> diff - - git a / src / java / org / apache / cassandra / db / Table . java b / src / java / org / apache / cassandra / db / Table . java <nl> index 23231e6 . . 6d2fe48 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Table . java <nl> + + + b / src / java / org / apache / cassandra / db / Table . java <nl> @ @ - 504 , 4 + 504 , 9 @ @ public class Table <nl> { <nl> return dataDirPath + File . separator + tableName + File . separator + SNAPSHOT _ SUBDIR _ NAME + File . separator + snapshotName ; <nl> } <nl> + <nl> + public static Set < String > getAllTableNames ( ) <nl> + { <nl> + return DatabaseDescriptor . getTableToColumnFamilyMap ( ) . keySet ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / io / SSTable . java b / src / java / org / apache / cassandra / io / SSTable . java <nl> index 43d41ca . . 4384457 100644 <nl> - - - a / src / java / org / apache / cassandra / io / SSTable . java <nl> + + + b / src / java / org / apache / cassandra / io / SSTable . java <nl> @ @ - 183 , 6 + 183 , 16 @ @ public abstract class SSTable <nl> } <nl> } <nl> <nl> + public long bytesOnDisk ( ) <nl> + { <nl> + long bytes = 0 ; <nl> + for ( String fname : getAllFilenames ( ) ) <nl> + { <nl> + bytes + = new File ( fname ) . length ( ) ; <nl> + } <nl> + return bytes ; <nl> + } <nl> + <nl> @ Override <nl> public String toString ( ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> index 5468a9f . . dff649e 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> @ @ - 77 , 7 + 77 , 7 @ @ public class CassandraDaemon <nl> } ) ; <nl> <nl> / / initialize stuff <nl> - for ( String table : DatabaseDescriptor . getTableToColumnFamilyMap ( ) . keySet ( ) ) <nl> + for ( String table : Table . getAllTableNames ( ) ) <nl> { <nl> if ( logger . isDebugEnabled ( ) ) <nl> logger . debug ( " opening keyspace " + table ) ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 1d1f082 . . 73bf9dd 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 507 , 12 + 507 , 33 @ @ public final class StorageService implements IEndPointStateChangeSubscriber , Sto <nl> / * * raw load value * / <nl> public double getLoad ( ) <nl> { <nl> - return FileUtils . getUsedDiskSpace ( ) ; <nl> + double bytes = 0 ; <nl> + for ( String tableName : Table . getAllTableNames ( ) ) <nl> + { <nl> + Table table ; <nl> + try <nl> + { <nl> + table = Table . open ( tableName ) ; <nl> + } <nl> + catch ( IOException e ) <nl> + { <nl> + throw new IOError ( e ) ; <nl> + } <nl> + for ( String cfName : table . getColumnFamilies ( ) ) <nl> + { <nl> + ColumnFamilyStore cfs = table . getColumnFamilyStore ( cfName ) ; <nl> + for ( SSTableReader sstable : cfs . getSSTables ( ) ) <nl> + { <nl> + bytes + = sstable . bytesOnDisk ( ) ; <nl> + } <nl> + } <nl> + } <nl> + return bytes ; <nl> } <nl> <nl> public String getLoadString ( ) <nl> { <nl> - return FileUtils . stringifyFileSize ( FileUtils . getUsedDiskSpace ( ) ) ; <nl> + return FileUtils . stringifyFileSize ( getLoad ( ) ) ; <nl> } <nl> <nl> public Map < String , String > getLoadMap ( ) <nl> diff - - git a / src / java / org / apache / cassandra / utils / FileUtils . java b / src / java / org / apache / cassandra / utils / FileUtils . java <nl> index fe6c649 . . 7b8b02e 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / FileUtils . java <nl> + + + b / src / java / org / apache / cassandra / utils / FileUtils . java <nl> @ @ - 201 , 20 + 201 , 7 @ @ public class FileUtils <nl> } <nl> return diskSpace ; <nl> } <nl> - <nl> - public static long getUsedDiskSpace ( ) <nl> - { <nl> - long diskSpace = 0L ; <nl> - String [ ] directories = DatabaseDescriptor . getAllDataFileLocations ( ) ; <nl> - for ( String directory : directories ) <nl> - { <nl> - diskSpace + = getUsedDiskSpaceForPath ( directory ) ; <nl> - } <nl> <nl> - String value = df _ . format ( diskSpace ) ; <nl> - return Long . parseLong ( value ) ; <nl> - } <nl> - <nl> / * * <nl> * Deletes all files and subdirectories under " dir " . <nl> * @ param dir Directory to be deleted

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 6e91a48 . . ea73fcd 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 4 . 0 
 - * Update lz4 to 1 . 4 . 0 ( 13741 ) 
 + * Update lz4 to 1 . 4 . 0 ( CASSANDRA - 13741 ) 
 * Optimize Paxos prepare and propose stage for local requests ( CASSANDRA - 13862 ) 
 * Throttle base partitions during MV repair streaming to prevent OOM ( CASSANDRA - 13299 ) 
 * Use compaction threshold for STCS in L0 ( CASSANDRA - 13861 ) 
 diff - - git a / src / java / org / apache / cassandra / transport / CBUtil . java b / src / java / org / apache / cassandra / transport / CBUtil . java 
 index 52217a9 . . 80b80b4 100644 
 - - - a / src / java / org / apache / cassandra / transport / CBUtil . java 
 + + + b / src / java / org / apache / cassandra / transport / CBUtil . java 
 @ @ - 444 , 12 + 444 , 7 @ @ public abstract class CBUtil 
 cb . writeInt ( remaining ) ; 
 
 if ( remaining > 0 ) 
 - { 
 - / / write and reset original position so we not need to create a duplicate . 
 - int position = bytes . position ( ) ; 
 - cb . writeBytes ( bytes ) ; 
 - bytes . position ( position ) ; 
 - } 
 + cb . writeBytes ( bytes . duplicate ( ) ) ; 
 } 
 
 public static int sizeOfValue ( byte [ ] bytes )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index fb26977 . . d4d27f1 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 5 , 6 + 5 , 7 @ @ 
 * fix NPE in get _ range _ slice when no data is found ( CASSANDRA - 578 ) 
 * fix potential NPE in hinted handoff ( CASSANDRA - 585 ) 
 * fix cleanup of local " system " keyspace ( CASSANDRA - 576 ) 
 + * improve computation of cluster load balance ( CASSANDRA - 554 ) 
 
 
 0 . 5 . 0 beta 
 diff - - git a / src / java / org / apache / cassandra / db / Table . java b / src / java / org / apache / cassandra / db / Table . java 
 index 23231e6 . . 6d2fe48 100644 
 - - - a / src / java / org / apache / cassandra / db / Table . java 
 + + + b / src / java / org / apache / cassandra / db / Table . java 
 @ @ - 504 , 4 + 504 , 9 @ @ public class Table 
 { 
 return dataDirPath + File . separator + tableName + File . separator + SNAPSHOT _ SUBDIR _ NAME + File . separator + snapshotName ; 
 } 
 + 
 + public static Set < String > getAllTableNames ( ) 
 + { 
 + return DatabaseDescriptor . getTableToColumnFamilyMap ( ) . keySet ( ) ; 
 + } 
 } 
 diff - - git a / src / java / org / apache / cassandra / io / SSTable . java b / src / java / org / apache / cassandra / io / SSTable . java 
 index 43d41ca . . 4384457 100644 
 - - - a / src / java / org / apache / cassandra / io / SSTable . java 
 + + + b / src / java / org / apache / cassandra / io / SSTable . java 
 @ @ - 183 , 6 + 183 , 16 @ @ public abstract class SSTable 
 } 
 } 
 
 + public long bytesOnDisk ( ) 
 + { 
 + long bytes = 0 ; 
 + for ( String fname : getAllFilenames ( ) ) 
 + { 
 + bytes + = new File ( fname ) . length ( ) ; 
 + } 
 + return bytes ; 
 + } 
 + 
 @ Override 
 public String toString ( ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 index 5468a9f . . dff649e 100644 
 - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 @ @ - 77 , 7 + 77 , 7 @ @ public class CassandraDaemon 
 } ) ; 
 
 / / initialize stuff 
 - for ( String table : DatabaseDescriptor . getTableToColumnFamilyMap ( ) . keySet ( ) ) 
 + for ( String table : Table . getAllTableNames ( ) ) 
 { 
 if ( logger . isDebugEnabled ( ) ) 
 logger . debug ( " opening keyspace " + table ) ; 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 1d1f082 . . 73bf9dd 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 507 , 12 + 507 , 33 @ @ public final class StorageService implements IEndPointStateChangeSubscriber , Sto 
 / * * raw load value * / 
 public double getLoad ( ) 
 { 
 - return FileUtils . getUsedDiskSpace ( ) ; 
 + double bytes = 0 ; 
 + for ( String tableName : Table . getAllTableNames ( ) ) 
 + { 
 + Table table ; 
 + try 
 + { 
 + table = Table . open ( tableName ) ; 
 + } 
 + catch ( IOException e ) 
 + { 
 + throw new IOError ( e ) ; 
 + } 
 + for ( String cfName : table . getColumnFamilies ( ) ) 
 + { 
 + ColumnFamilyStore cfs = table . getColumnFamilyStore ( cfName ) ; 
 + for ( SSTableReader sstable : cfs . getSSTables ( ) ) 
 + { 
 + bytes + = sstable . bytesOnDisk ( ) ; 
 + } 
 + } 
 + } 
 + return bytes ; 
 } 
 
 public String getLoadString ( ) 
 { 
 - return FileUtils . stringifyFileSize ( FileUtils . getUsedDiskSpace ( ) ) ; 
 + return FileUtils . stringifyFileSize ( getLoad ( ) ) ; 
 } 
 
 public Map < String , String > getLoadMap ( ) 
 diff - - git a / src / java / org / apache / cassandra / utils / FileUtils . java b / src / java / org / apache / cassandra / utils / FileUtils . java 
 index fe6c649 . . 7b8b02e 100644 
 - - - a / src / java / org / apache / cassandra / utils / FileUtils . java 
 + + + b / src / java / org / apache / cassandra / utils / FileUtils . java 
 @ @ - 201 , 20 + 201 , 7 @ @ public class FileUtils 
 } 
 return diskSpace ; 
 } 
 - 
 - public static long getUsedDiskSpace ( ) 
 - { 
 - long diskSpace = 0L ; 
 - String [ ] directories = DatabaseDescriptor . getAllDataFileLocations ( ) ; 
 - for ( String directory : directories ) 
 - { 
 - diskSpace + = getUsedDiskSpaceForPath ( directory ) ; 
 - } 
 
 - String value = df _ . format ( diskSpace ) ; 
 - return Long . parseLong ( value ) ; 
 - } 
 - 
 / * * 
 * Deletes all files and subdirectories under " dir " . 
 * @ param dir Directory to be deleted
