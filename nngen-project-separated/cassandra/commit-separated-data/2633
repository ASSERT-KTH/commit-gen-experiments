BLEU SCORE: 0.07986788803078405

TEST MSG: prefer assertEquals to assertTrue
GENERATED MSG: cleanup

TEST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java b / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java <nl> index 89f8b2a . . d8d3b60 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java <nl> @ @ - 299 , 7 + 299 , 7 @ @ public class RangeTombstoneTest extends SchemaLoader <nl> <nl> assertFalse ( cf . isEmpty ( ) ) ; <nl> int last = i ( cf . getSortedColumns ( ) . iterator ( ) . next ( ) . name ( ) ) ; <nl> - assertTrue ( " Last column should be column 1 since column 2 has been deleted " , last = = 1 ) ; <nl> + assertEquals ( " Last column should be column 1 since column 2 has been deleted " , 1 , last ) ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / test / unit / org / apache / cassandra / utils / CounterIdTest . java b / test / unit / org / apache / cassandra / utils / CounterIdTest . java <nl> index 2b6cb32 . . 9dd999e 100644 <nl> - - - a / test / unit / org / apache / cassandra / utils / CounterIdTest . java <nl> + + + b / test / unit / org / apache / cassandra / utils / CounterIdTest . java <nl> @ @ - 23 , 7 + 23 , 6 @ @ import org . apache . cassandra . SchemaLoader ; <nl> import org . apache . cassandra . db . SystemKeyspace ; <nl> <nl> import static org . junit . Assert . assertEquals ; <nl> - import static org . junit . Assert . assertTrue ; <nl> <nl> public class CounterIdTest extends SchemaLoader <nl> { <nl> @ @ - 38 , 12 + 37 , 12 @ @ public class CounterIdTest extends SchemaLoader <nl> CounterId . renewLocalId ( ) ; <nl> CounterId id1 = CounterId . getLocalId ( ) ; <nl> assertEquals ( id1 , SystemKeyspace . getCurrentLocalCounterId ( ) ) ; <nl> - assertTrue ( id1 . compareTo ( id0 ) = = 1 ) ; <nl> + assertEquals ( 1 , id1 . compareTo ( id0 ) ) ; <nl> <nl> CounterId . renewLocalId ( ) ; <nl> CounterId id2 = CounterId . getLocalId ( ) ; <nl> assertEquals ( id2 , SystemKeyspace . getCurrentLocalCounterId ( ) ) ; <nl> - assertTrue ( id2 . compareTo ( id1 ) = = 1 ) ; <nl> + assertEquals ( 1 , id2 . compareTo ( id1 ) ) ; <nl> } <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / CassandraServer . java b / src / java / org / apache / cassandra / service / CassandraServer . java <nl> index 1708b75 . . 1d14676 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CassandraServer . java <nl> + + + b / src / java / org / apache / cassandra / service / CassandraServer . java <nl> @ @ - 618 , 7 + 618 , 7 @ @ public class CassandraServer implements Cassandra . Iface <nl> } <nl> <nl> public List < KeySlice > get _ range _ slice ( String keyspace , ColumnParent column _ parent , SlicePredicate predicate , String start _ key , String finish _ key , int maxRows , ConsistencyLevel consistency _ level ) <nl> - throws InvalidRequestException , UnavailableException , TException , TimedOutException <nl> + throws InvalidRequestException , UnavailableException , TException , TimedOutException <nl> { <nl> if ( logger . isDebugEnabled ( ) ) <nl> logger . debug ( " range _ slice " ) ; <nl> @ @ - 664 , 7 + 664 , 6 @ @ public class CassandraServer implements Cassandra . Iface <nl> return keySlices ; <nl> } <nl> <nl> - @ Override <nl> public void login ( String keyspace , AuthenticationRequest auth _ request ) throws AuthenticationException , AuthorizationException , TException <nl> { <nl> DatabaseDescriptor . getAuthenticator ( ) . login ( keyspace , auth _ request ) ;

TEST DIFF:
diff - - git a / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java b / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java 
 index 89f8b2a . . d8d3b60 100644 
 - - - a / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java 
 + + + b / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java 
 @ @ - 299 , 7 + 299 , 7 @ @ public class RangeTombstoneTest extends SchemaLoader 
 
 assertFalse ( cf . isEmpty ( ) ) ; 
 int last = i ( cf . getSortedColumns ( ) . iterator ( ) . next ( ) . name ( ) ) ; 
 - assertTrue ( " Last column should be column 1 since column 2 has been deleted " , last = = 1 ) ; 
 + assertEquals ( " Last column should be column 1 since column 2 has been deleted " , 1 , last ) ; 
 } 
 
 @ Test 
 diff - - git a / test / unit / org / apache / cassandra / utils / CounterIdTest . java b / test / unit / org / apache / cassandra / utils / CounterIdTest . java 
 index 2b6cb32 . . 9dd999e 100644 
 - - - a / test / unit / org / apache / cassandra / utils / CounterIdTest . java 
 + + + b / test / unit / org / apache / cassandra / utils / CounterIdTest . java 
 @ @ - 23 , 7 + 23 , 6 @ @ import org . apache . cassandra . SchemaLoader ; 
 import org . apache . cassandra . db . SystemKeyspace ; 
 
 import static org . junit . Assert . assertEquals ; 
 - import static org . junit . Assert . assertTrue ; 
 
 public class CounterIdTest extends SchemaLoader 
 { 
 @ @ - 38 , 12 + 37 , 12 @ @ public class CounterIdTest extends SchemaLoader 
 CounterId . renewLocalId ( ) ; 
 CounterId id1 = CounterId . getLocalId ( ) ; 
 assertEquals ( id1 , SystemKeyspace . getCurrentLocalCounterId ( ) ) ; 
 - assertTrue ( id1 . compareTo ( id0 ) = = 1 ) ; 
 + assertEquals ( 1 , id1 . compareTo ( id0 ) ) ; 
 
 CounterId . renewLocalId ( ) ; 
 CounterId id2 = CounterId . getLocalId ( ) ; 
 assertEquals ( id2 , SystemKeyspace . getCurrentLocalCounterId ( ) ) ; 
 - assertTrue ( id2 . compareTo ( id1 ) = = 1 ) ; 
 + assertEquals ( 1 , id2 . compareTo ( id1 ) ) ; 
 } 
 } 


NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / CassandraServer . java b / src / java / org / apache / cassandra / service / CassandraServer . java 
 index 1708b75 . . 1d14676 100644 
 - - - a / src / java / org / apache / cassandra / service / CassandraServer . java 
 + + + b / src / java / org / apache / cassandra / service / CassandraServer . java 
 @ @ - 618 , 7 + 618 , 7 @ @ public class CassandraServer implements Cassandra . Iface 
 } 
 
 public List < KeySlice > get _ range _ slice ( String keyspace , ColumnParent column _ parent , SlicePredicate predicate , String start _ key , String finish _ key , int maxRows , ConsistencyLevel consistency _ level ) 
 - throws InvalidRequestException , UnavailableException , TException , TimedOutException 
 + throws InvalidRequestException , UnavailableException , TException , TimedOutException 
 { 
 if ( logger . isDebugEnabled ( ) ) 
 logger . debug ( " range _ slice " ) ; 
 @ @ - 664 , 7 + 664 , 6 @ @ public class CassandraServer implements Cassandra . Iface 
 return keySlices ; 
 } 
 
 - @ Override 
 public void login ( String keyspace , AuthenticationRequest auth _ request ) throws AuthenticationException , AuthorizationException , TException 
 { 
 DatabaseDescriptor . getAuthenticator ( ) . login ( keyspace , auth _ request ) ;
