BLEU SCORE: 0.012513575976832112

TEST MSG: Lower default chunk _ length _ in _ kb from 64kb to 16kb
GENERATED MSG: Add more testing of uncompressed chunks ( CASSANDRA - 10520 ) , fix problem with min _ compress _ ratio : 1 and disallow ratio < 1

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index aaea773 . . 5fd28bc 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 4 . 0 <nl> + * Lower default chunk _ length _ in _ kb from 64kb to 16kb ( CASSANDRA - 13241 ) <nl> * Startup checker should wait for count rather than percentage ( CASSANDRA - 14297 ) <nl> * Fix incorrect sorting of replicas in SimpleStrategy . calculateNaturalReplicas ( CASSANDRA - 14862 ) <nl> * Partitioned outbound internode TCP connections can occur when nodes restart ( CASSANDRA - 14358 ) <nl> diff - - git a / NEWS . txt b / NEWS . txt <nl> index 63c4a47 . . af28b6e 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 108 , 6 + 108 , 9 @ @ New features <nl> <nl> Upgrading <nl> - - - - - - - - - <nl> + - CASSANDRA - 13241 lowered the default chunk _ lengh _ in _ kb for compresesd tables from <nl> + 64kb to 16kb . For highly compressible data this can have a noticeable impact <nl> + on space utilization . You may want to consider manually specifying this value . <nl> - Additional columns have been added to system _ distributed . repair _ history , <nl> system _ traces . sessions and system _ traces . events . As a result select * queries <nl> againsts these tables will fail and generate an error in the log <nl> diff - - git a / src / java / org / apache / cassandra / schema / CompressionParams . java b / src / java / org / apache / cassandra / schema / CompressionParams . java <nl> index d644c56 . . 2563111 100644 <nl> - - - a / src / java / org / apache / cassandra / schema / CompressionParams . java <nl> + + + b / src / java / org / apache / cassandra / schema / CompressionParams . java <nl> @ @ - 55 , 7 + 55 , 7 @ @ public final class CompressionParams <nl> private static volatile boolean hasLoggedChunkLengthWarning ; <nl> private static volatile boolean hasLoggedCrcCheckChanceWarning ; <nl> <nl> - public static final int DEFAULT _ CHUNK _ LENGTH = 65536 ; <nl> + public static final int DEFAULT _ CHUNK _ LENGTH = 1024 * 16 ; <nl> public static final double DEFAULT _ MIN _ COMPRESS _ RATIO = 0 . 0 ; / / Since pre - 4 . 0 versions do not understand the <nl> / / new compression parameter we can ' t use a <nl> / / different default value . <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java <nl> index a792bcb . . 79db6f2 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java <nl> @ @ - 347 , 7 + 347 , 7 @ @ public class AlterTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; <nl> <nl> execute ( " ALTER TABLE % s WITH compression = { ' class ' : ' SnappyCompressor ' , ' chunk _ length _ in _ kb ' : 32 } ; " ) ; <nl> <nl> @ @ - 374 , 7 + 374 , 7 @ @ public class AlterTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 2 . 0 " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 2 . 0 " ) ) ) ; <nl> <nl> execute ( " ALTER TABLE % s WITH compression = { ' class ' : ' LZ4Compressor ' , ' min _ compress _ ratio ' : 1 } ; " ) ; <nl> <nl> @ @ - 383 , 7 + 383 , 7 @ @ public class AlterTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 1 . 0 " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 1 . 0 " ) ) ) ; <nl> <nl> execute ( " ALTER TABLE % s WITH compression = { ' class ' : ' LZ4Compressor ' , ' min _ compress _ ratio ' : 0 } ; " ) ; <nl> <nl> @ @ - 392 , 7 + 392 , 7 @ @ public class AlterTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; <nl> <nl> execute ( " ALTER TABLE % s WITH compression = { ' class ' : ' SnappyCompressor ' , ' chunk _ length _ in _ kb ' : 32 } ; " ) ; <nl> execute ( " ALTER TABLE % s WITH compression = { ' enabled ' : ' false ' } ; " ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java <nl> index 37605d6 . . 1c3b449 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java <nl> @ @ - 564 , 7 + 564 , 7 @ @ public class CreateTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; <nl> <nl> createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " <nl> + " WITH compression = { ' class ' : ' SnappyCompressor ' , ' chunk _ length _ in _ kb ' : 32 } ; " ) ; <nl> @ @ - 604 , 7 + 604 , 7 @ @ public class CreateTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 2 . 0 " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 2 . 0 " ) ) ) ; <nl> <nl> createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " <nl> + " WITH compression = { ' sstable _ compression ' : ' SnappyCompressor ' , ' min _ compress _ ratio ' : 1 } ; " ) ; <nl> @ @ - 614 , 7 + 614 , 7 @ @ public class CreateTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 1 . 0 " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 1 . 0 " ) ) ) ; <nl> <nl> createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " <nl> + " WITH compression = { ' sstable _ compression ' : ' SnappyCompressor ' , ' min _ compress _ ratio ' : 0 } ; " ) ; <nl> @ @ - 624 , 7 + 624 , 7 @ @ public class CreateTest extends CQLTester <nl> SchemaKeyspace . TABLES ) , <nl> KEYSPACE , <nl> currentTable ( ) ) , <nl> - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " ) ) ) ; <nl> + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " ) ) ) ; <nl> <nl> createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " <nl> + " WITH compression = { ' sstable _ compression ' : ' ' , ' chunk _ length _ kb ' : 32 } ; " ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index aaea773 . . 5fd28bc 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 4 . 0 
 + * Lower default chunk _ length _ in _ kb from 64kb to 16kb ( CASSANDRA - 13241 ) 
 * Startup checker should wait for count rather than percentage ( CASSANDRA - 14297 ) 
 * Fix incorrect sorting of replicas in SimpleStrategy . calculateNaturalReplicas ( CASSANDRA - 14862 ) 
 * Partitioned outbound internode TCP connections can occur when nodes restart ( CASSANDRA - 14358 ) 
 diff - - git a / NEWS . txt b / NEWS . txt 
 index 63c4a47 . . af28b6e 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 108 , 6 + 108 , 9 @ @ New features 
 
 Upgrading 
 - - - - - - - - - 
 + - CASSANDRA - 13241 lowered the default chunk _ lengh _ in _ kb for compresesd tables from 
 + 64kb to 16kb . For highly compressible data this can have a noticeable impact 
 + on space utilization . You may want to consider manually specifying this value . 
 - Additional columns have been added to system _ distributed . repair _ history , 
 system _ traces . sessions and system _ traces . events . As a result select * queries 
 againsts these tables will fail and generate an error in the log 
 diff - - git a / src / java / org / apache / cassandra / schema / CompressionParams . java b / src / java / org / apache / cassandra / schema / CompressionParams . java 
 index d644c56 . . 2563111 100644 
 - - - a / src / java / org / apache / cassandra / schema / CompressionParams . java 
 + + + b / src / java / org / apache / cassandra / schema / CompressionParams . java 
 @ @ - 55 , 7 + 55 , 7 @ @ public final class CompressionParams 
 private static volatile boolean hasLoggedChunkLengthWarning ; 
 private static volatile boolean hasLoggedCrcCheckChanceWarning ; 
 
 - public static final int DEFAULT _ CHUNK _ LENGTH = 65536 ; 
 + public static final int DEFAULT _ CHUNK _ LENGTH = 1024 * 16 ; 
 public static final double DEFAULT _ MIN _ COMPRESS _ RATIO = 0 . 0 ; / / Since pre - 4 . 0 versions do not understand the 
 / / new compression parameter we can ' t use a 
 / / different default value . 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java 
 index a792bcb . . 79db6f2 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / AlterTest . java 
 @ @ - 347 , 7 + 347 , 7 @ @ public class AlterTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; 
 
 execute ( " ALTER TABLE % s WITH compression = { ' class ' : ' SnappyCompressor ' , ' chunk _ length _ in _ kb ' : 32 } ; " ) ; 
 
 @ @ - 374 , 7 + 374 , 7 @ @ public class AlterTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 2 . 0 " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 2 . 0 " ) ) ) ; 
 
 execute ( " ALTER TABLE % s WITH compression = { ' class ' : ' LZ4Compressor ' , ' min _ compress _ ratio ' : 1 } ; " ) ; 
 
 @ @ - 383 , 7 + 383 , 7 @ @ public class AlterTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 1 . 0 " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " , " min _ compress _ ratio " , " 1 . 0 " ) ) ) ; 
 
 execute ( " ALTER TABLE % s WITH compression = { ' class ' : ' LZ4Compressor ' , ' min _ compress _ ratio ' : 0 } ; " ) ; 
 
 @ @ - 392 , 7 + 392 , 7 @ @ public class AlterTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; 
 
 execute ( " ALTER TABLE % s WITH compression = { ' class ' : ' SnappyCompressor ' , ' chunk _ length _ in _ kb ' : 32 } ; " ) ; 
 execute ( " ALTER TABLE % s WITH compression = { ' enabled ' : ' false ' } ; " ) ; 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java 
 index 37605d6 . . 1c3b449 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / CreateTest . java 
 @ @ - 564 , 7 + 564 , 7 @ @ public class CreateTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . LZ4Compressor " ) ) ) ; 
 
 createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " 
 + " WITH compression = { ' class ' : ' SnappyCompressor ' , ' chunk _ length _ in _ kb ' : 32 } ; " ) ; 
 @ @ - 604 , 7 + 604 , 7 @ @ public class CreateTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 2 . 0 " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 2 . 0 " ) ) ) ; 
 
 createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " 
 + " WITH compression = { ' sstable _ compression ' : ' SnappyCompressor ' , ' min _ compress _ ratio ' : 1 } ; " ) ; 
 @ @ - 614 , 7 + 614 , 7 @ @ public class CreateTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 1 . 0 " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " , " min _ compress _ ratio " , " 1 . 0 " ) ) ) ; 
 
 createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " 
 + " WITH compression = { ' sstable _ compression ' : ' SnappyCompressor ' , ' min _ compress _ ratio ' : 0 } ; " ) ; 
 @ @ - 624 , 7 + 624 , 7 @ @ public class CreateTest extends CQLTester 
 SchemaKeyspace . TABLES ) , 
 KEYSPACE , 
 currentTable ( ) ) , 
 - row ( map ( " chunk _ length _ in _ kb " , " 64 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " ) ) ) ; 
 + row ( map ( " chunk _ length _ in _ kb " , " 16 " , " class " , " org . apache . cassandra . io . compress . SnappyCompressor " ) ) ) ; 
 
 createTable ( " CREATE TABLE % s ( a text , b int , c int , primary key ( a , b ) ) " 
 + " WITH compression = { ' sstable _ compression ' : ' ' , ' chunk _ length _ kb ' : 32 } ; " ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
