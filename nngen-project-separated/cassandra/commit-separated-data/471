BLEU SCORE: 0.018543295278285157

TEST MSG: Log full stack trace of uncaught exceptions
GENERATED MSG: Kill server on wrapped OOME such as from FileChannel . map

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 2266771 . . f3de538 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> 2 . 1 . 18 <nl> - * <nl> + * Log stacktrace of uncaught exceptions ( CASSANDRA - 13108 ) <nl> <nl> 2 . 1 . 17 <nl> * Use portable stderr for java error in startup ( CASSANDRA - 13211 ) <nl> diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> index 5a1fb14 . . dc22834 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> @ @ - 228 , 7 + 228 , 7 @ @ public class CassandraDaemon <nl> public void uncaughtException ( Thread t , Throwable e ) <nl> { <nl> StorageMetrics . exceptions . inc ( ) ; <nl> - logger . error ( " Exception in thread { } " , t , e ) ; <nl> + logger . error ( " Exception in thread " + t , e ) ; <nl> Tracing . trace ( " Exception in thread { } " , t , e ) ; <nl> for ( Throwable e2 = e ; e2 ! = null ; e2 = e2 . getCause ( ) ) <nl> { <nl> @ @ - 237 , 7 + 237 , 7 @ @ public class CassandraDaemon <nl> if ( e2 instanceof FSError ) <nl> { <nl> if ( e2 ! = e ) / / make sure FSError gets logged exactly once . <nl> - logger . error ( " Exception in thread { } " , t , e2 ) ; <nl> + logger . error ( " Exception in thread " + t , e2 ) ; <nl> FileUtils . handleFSError ( ( FSError ) e2 ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 66c9e99 . . a2e3ec0 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> 1 . 0 . 0 - rc1 <nl> * Fix counting CFMetadata towards Memtable liveRatio ( CASSANDRA - 3023 ) <nl> + * Kill server on wrapped OOME such as from FileChannel . map ( CASSANDRA - 3201 ) <nl> <nl> <nl> 1 . 0 . 0 - beta1 <nl> @ @ - 103 , 9 + 104 , 12 @ @ <nl> * Fix using read _ repair _ chance instead of merge _ shard _ change ( CASSANDRA - 3202 ) <nl> * Avoid streaming data to nodes that already have it , on move as well as <nl> decommission ( CASSANDRA - 3041 ) <nl> - * Fix divide by zero error in GCInspector <nl> + * Fix divide by zero error in GCInspector ( CASSANDRA - 3164 ) <nl> * allow quoting of the ColumnFamily name in CLI ` create column family ` <nl> statement ( CASSANDRA - 3195 ) <nl> + * Fix rolling upgrade from 0 . 7 to 0 . 8 problem ( CASANDRA - 3166 ) <nl> + * Accomodate missing encryption _ options in IncomingTcpConnection . stream <nl> + ( CASSANDRA - 3212 ) <nl> <nl> <nl> 0 . 8 . 5 <nl> diff - - git a / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java b / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java <nl> index 09ad3d5 . . c26ed94 100644 <nl> - - - a / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java <nl> + + + b / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java <nl> @ @ - 131 , 9 + 131 , 11 @ @ public abstract class AbstractCassandraDaemon implements CassandraDaemon <nl> { <nl> exceptions . incrementAndGet ( ) ; <nl> logger . error ( " Fatal exception in thread " + t , e ) ; <nl> - if ( e instanceof OutOfMemoryError ) <nl> + for ( Throwable e2 = e ; e2 ! = null ; e2 = e2 . getCause ( ) ) <nl> { <nl> - System . exit ( 100 ) ; <nl> + / / some code , like FileChannel . map , will wrap an OutOfMemoryError in another exception <nl> + if ( e2 instanceof OutOfMemoryError ) <nl> + System . exit ( 100 ) ; <nl> } <nl> } <nl> } ) ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 2266771 . . f3de538 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 2 . 1 . 18 
 - * 
 + * Log stacktrace of uncaught exceptions ( CASSANDRA - 13108 ) 
 
 2 . 1 . 17 
 * Use portable stderr for java error in startup ( CASSANDRA - 13211 ) 
 diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 index 5a1fb14 . . dc22834 100644 
 - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 @ @ - 228 , 7 + 228 , 7 @ @ public class CassandraDaemon 
 public void uncaughtException ( Thread t , Throwable e ) 
 { 
 StorageMetrics . exceptions . inc ( ) ; 
 - logger . error ( " Exception in thread { } " , t , e ) ; 
 + logger . error ( " Exception in thread " + t , e ) ; 
 Tracing . trace ( " Exception in thread { } " , t , e ) ; 
 for ( Throwable e2 = e ; e2 ! = null ; e2 = e2 . getCause ( ) ) 
 { 
 @ @ - 237 , 7 + 237 , 7 @ @ public class CassandraDaemon 
 if ( e2 instanceof FSError ) 
 { 
 if ( e2 ! = e ) / / make sure FSError gets logged exactly once . 
 - logger . error ( " Exception in thread { } " , t , e2 ) ; 
 + logger . error ( " Exception in thread " + t , e2 ) ; 
 FileUtils . handleFSError ( ( FSError ) e2 ) ; 
 } 


NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 66c9e99 . . a2e3ec0 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 1 . 0 . 0 - rc1 
 * Fix counting CFMetadata towards Memtable liveRatio ( CASSANDRA - 3023 ) 
 + * Kill server on wrapped OOME such as from FileChannel . map ( CASSANDRA - 3201 ) 
 
 
 1 . 0 . 0 - beta1 
 @ @ - 103 , 9 + 104 , 12 @ @ 
 * Fix using read _ repair _ chance instead of merge _ shard _ change ( CASSANDRA - 3202 ) 
 * Avoid streaming data to nodes that already have it , on move as well as 
 decommission ( CASSANDRA - 3041 ) 
 - * Fix divide by zero error in GCInspector 
 + * Fix divide by zero error in GCInspector ( CASSANDRA - 3164 ) 
 * allow quoting of the ColumnFamily name in CLI ` create column family ` 
 statement ( CASSANDRA - 3195 ) 
 + * Fix rolling upgrade from 0 . 7 to 0 . 8 problem ( CASANDRA - 3166 ) 
 + * Accomodate missing encryption _ options in IncomingTcpConnection . stream 
 + ( CASSANDRA - 3212 ) 
 
 
 0 . 8 . 5 
 diff - - git a / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java b / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java 
 index 09ad3d5 . . c26ed94 100644 
 - - - a / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java 
 + + + b / src / java / org / apache / cassandra / service / AbstractCassandraDaemon . java 
 @ @ - 131 , 9 + 131 , 11 @ @ public abstract class AbstractCassandraDaemon implements CassandraDaemon 
 { 
 exceptions . incrementAndGet ( ) ; 
 logger . error ( " Fatal exception in thread " + t , e ) ; 
 - if ( e instanceof OutOfMemoryError ) 
 + for ( Throwable e2 = e ; e2 ! = null ; e2 = e2 . getCause ( ) ) 
 { 
 - System . exit ( 100 ) ; 
 + / / some code , like FileChannel . map , will wrap an OutOfMemoryError in another exception 
 + if ( e2 instanceof OutOfMemoryError ) 
 + System . exit ( 100 ) ; 
 } 
 } 
 } ) ;
