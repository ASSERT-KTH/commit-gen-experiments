BLEU SCORE: 0.0321858262703621

TEST MSG: Add option to state current gc _ grace _ seconds to tools / bin / sstablemetadata
GENERATED MSG: Add 3 . 0 metadata to sstablemetadata output

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 5349c14 . . 4b77e4d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 9 <nl> + * Add option to state current gc _ grace _ seconds to tools / bin / sstablemetadata ( CASSANDRA - 12208 ) <nl> * Fix file system race condition that may cause LogAwareFileLister to fail to classify files ( CASSANDRA - 11889 ) <nl> * Fix file handle leaks due to simultaneous compaction / repair and <nl> listing snapshots , calculating snapshot sizes , or making schema <nl> diff - - git a / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java b / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java <nl> index 5f7513f . . 6076e32 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java <nl> + + + b / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java <nl> @ @ - 23 , 6 + 23 , 15 @ @ import java . io . PrintStream ; <nl> import java . util . EnumSet ; <nl> import java . util . Map ; <nl> <nl> + import org . apache . commons . cli . CommandLine ; <nl> + import org . apache . commons . cli . CommandLineParser ; <nl> + import org . apache . commons . cli . HelpFormatter ; <nl> + import org . apache . commons . cli . Option ; <nl> + import org . apache . commons . cli . OptionBuilder ; <nl> + import org . apache . commons . cli . Options ; <nl> + import org . apache . commons . cli . ParseException ; <nl> + import org . apache . commons . cli . PosixParser ; <nl> + <nl> import org . apache . cassandra . io . sstable . Descriptor ; <nl> import org . apache . cassandra . io . sstable . metadata . * ; <nl> <nl> @ @ - 31 , 21 + 40 , 37 @ @ import org . apache . cassandra . io . sstable . metadata . * ; <nl> * / <nl> public class SSTableMetadataViewer <nl> { <nl> + private static final String GCGS _ KEY = " gc _ grace _ seconds " ; <nl> + <nl> / * * <nl> * @ param args a list of sstables whose metadata we ' re interested in <nl> * / <nl> public static void main ( String [ ] args ) throws IOException <nl> { <nl> PrintStream out = System . out ; <nl> - if ( args . length = = 0 ) <nl> + Option optGcgs = new Option ( null , GCGS _ KEY , true , " The " + GCGS _ KEY + " to use when calculating droppable tombstones " ) ; <nl> + <nl> + Options options = new Options ( ) ; <nl> + options . addOption ( optGcgs ) ; <nl> + CommandLine cmd = null ; <nl> + CommandLineParser parser = new PosixParser ( ) ; <nl> + try <nl> + { <nl> + cmd = parser . parse ( options , args ) ; <nl> + } <nl> + catch ( ParseException e ) <nl> { <nl> - out . println ( " Usage : sstablemetadata < sstable filenames > " ) ; <nl> - System . exit ( 1 ) ; <nl> + printHelp ( options , out ) ; <nl> } <nl> <nl> + if ( cmd . getArgs ( ) . length = = 0 ) <nl> + { <nl> + printHelp ( options , out ) ; <nl> + } <nl> + int gcgs = Integer . parseInt ( cmd . getOptionValue ( GCGS _ KEY , " 0 " ) ) ; <nl> Util . initDatabaseDescriptor ( ) ; <nl> <nl> - for ( String fname : args ) <nl> + for ( String fname : cmd . getArgs ( ) ) <nl> { <nl> if ( new File ( fname ) . exists ( ) ) <nl> { <nl> @ @ - 67 , 7 + 92 , 7 @ @ public class SSTableMetadataViewer <nl> out . printf ( " Maximum timestamp : % s % n " , stats . maxTimestamp ) ; <nl> out . printf ( " SSTable max local deletion time : % s % n " , stats . maxLocalDeletionTime ) ; <nl> out . printf ( " Compression ratio : % s % n " , stats . compressionRatio ) ; <nl> - out . printf ( " Estimated droppable tombstones : % s % n " , stats . getEstimatedDroppableTombstoneRatio ( ( int ) ( System . currentTimeMillis ( ) / 1000 ) ) ) ; <nl> + out . printf ( " Estimated droppable tombstones : % s % n " , stats . getEstimatedDroppableTombstoneRatio ( ( int ) ( System . currentTimeMillis ( ) / 1000 ) - gcgs ) ) ; <nl> out . printf ( " SSTable Level : % d % n " , stats . sstableLevel ) ; <nl> out . printf ( " Repaired at : % d % n " , stats . repairedAt ) ; <nl> out . printf ( " Replay positions covered : % s \ n " , stats . commitLogIntervals ) ; <nl> @ @ - 90 , 6 + 115 , 13 @ @ public class SSTableMetadataViewer <nl> } <nl> } <nl> <nl> + private static void printHelp ( Options options , PrintStream out ) <nl> + { <nl> + out . println ( ) ; <nl> + new HelpFormatter ( ) . printHelp ( " Usage : sstablemetadata [ - - " + GCGS _ KEY + " n ] < sstable filenames > " , " Dump contents of given SSTable to standard output in JSON format . " , options , " " ) ; <nl> + System . exit ( 1 ) ; <nl> + } <nl> + <nl> private static void printHistograms ( StatsMetadata metadata , PrintStream out ) <nl> { <nl> long [ ] offsets = metadata . estimatedPartitionSize . getBucketOffsets ( ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 5349c14 . . 4b77e4d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 9 
 + * Add option to state current gc _ grace _ seconds to tools / bin / sstablemetadata ( CASSANDRA - 12208 ) 
 * Fix file system race condition that may cause LogAwareFileLister to fail to classify files ( CASSANDRA - 11889 ) 
 * Fix file handle leaks due to simultaneous compaction / repair and 
 listing snapshots , calculating snapshot sizes , or making schema 
 diff - - git a / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java b / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java 
 index 5f7513f . . 6076e32 100644 
 - - - a / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java 
 + + + b / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java 
 @ @ - 23 , 6 + 23 , 15 @ @ import java . io . PrintStream ; 
 import java . util . EnumSet ; 
 import java . util . Map ; 
 
 + import org . apache . commons . cli . CommandLine ; 
 + import org . apache . commons . cli . CommandLineParser ; 
 + import org . apache . commons . cli . HelpFormatter ; 
 + import org . apache . commons . cli . Option ; 
 + import org . apache . commons . cli . OptionBuilder ; 
 + import org . apache . commons . cli . Options ; 
 + import org . apache . commons . cli . ParseException ; 
 + import org . apache . commons . cli . PosixParser ; 
 + 
 import org . apache . cassandra . io . sstable . Descriptor ; 
 import org . apache . cassandra . io . sstable . metadata . * ; 
 
 @ @ - 31 , 21 + 40 , 37 @ @ import org . apache . cassandra . io . sstable . metadata . * ; 
 * / 
 public class SSTableMetadataViewer 
 { 
 + private static final String GCGS _ KEY = " gc _ grace _ seconds " ; 
 + 
 / * * 
 * @ param args a list of sstables whose metadata we ' re interested in 
 * / 
 public static void main ( String [ ] args ) throws IOException 
 { 
 PrintStream out = System . out ; 
 - if ( args . length = = 0 ) 
 + Option optGcgs = new Option ( null , GCGS _ KEY , true , " The " + GCGS _ KEY + " to use when calculating droppable tombstones " ) ; 
 + 
 + Options options = new Options ( ) ; 
 + options . addOption ( optGcgs ) ; 
 + CommandLine cmd = null ; 
 + CommandLineParser parser = new PosixParser ( ) ; 
 + try 
 + { 
 + cmd = parser . parse ( options , args ) ; 
 + } 
 + catch ( ParseException e ) 
 { 
 - out . println ( " Usage : sstablemetadata < sstable filenames > " ) ; 
 - System . exit ( 1 ) ; 
 + printHelp ( options , out ) ; 
 } 
 
 + if ( cmd . getArgs ( ) . length = = 0 ) 
 + { 
 + printHelp ( options , out ) ; 
 + } 
 + int gcgs = Integer . parseInt ( cmd . getOptionValue ( GCGS _ KEY , " 0 " ) ) ; 
 Util . initDatabaseDescriptor ( ) ; 
 
 - for ( String fname : args ) 
 + for ( String fname : cmd . getArgs ( ) ) 
 { 
 if ( new File ( fname ) . exists ( ) ) 
 { 
 @ @ - 67 , 7 + 92 , 7 @ @ public class SSTableMetadataViewer 
 out . printf ( " Maximum timestamp : % s % n " , stats . maxTimestamp ) ; 
 out . printf ( " SSTable max local deletion time : % s % n " , stats . maxLocalDeletionTime ) ; 
 out . printf ( " Compression ratio : % s % n " , stats . compressionRatio ) ; 
 - out . printf ( " Estimated droppable tombstones : % s % n " , stats . getEstimatedDroppableTombstoneRatio ( ( int ) ( System . currentTimeMillis ( ) / 1000 ) ) ) ; 
 + out . printf ( " Estimated droppable tombstones : % s % n " , stats . getEstimatedDroppableTombstoneRatio ( ( int ) ( System . currentTimeMillis ( ) / 1000 ) - gcgs ) ) ; 
 out . printf ( " SSTable Level : % d % n " , stats . sstableLevel ) ; 
 out . printf ( " Repaired at : % d % n " , stats . repairedAt ) ; 
 out . printf ( " Replay positions covered : % s \ n " , stats . commitLogIntervals ) ; 
 @ @ - 90 , 6 + 115 , 13 @ @ public class SSTableMetadataViewer 
 } 
 } 
 
 + private static void printHelp ( Options options , PrintStream out ) 
 + { 
 + out . println ( ) ; 
 + new HelpFormatter ( ) . printHelp ( " Usage : sstablemetadata [ - - " + GCGS _ KEY + " n ] < sstable filenames > " , " Dump contents of given SSTable to standard output in JSON format . " , options , " " ) ; 
 + System . exit ( 1 ) ; 
 + } 
 + 
 private static void printHistograms ( StatsMetadata metadata , PrintStream out ) 
 { 
 long [ ] offsets = metadata . estimatedPartitionSize . getBucketOffsets ( ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
