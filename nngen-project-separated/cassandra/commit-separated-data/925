BLEU SCORE: 0.033864985683445356

TEST MSG: CqlConfigHelper no longer requires both a keystore and truststore to work .
GENERATED MSG: merge # 3257 from 0 . 8

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 419ed21 . . 54013a3 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 2 . 6 <nl> + * CqlConfigHelper no longer requires both a keystore and truststore to work ( CASSANDRA - 11532 ) <nl> * Make deprecated repair methods backward - compatible with previous notification service ( CASSANDRA - 11430 ) <nl> * IncomingStreamingConnection version check message wrong ( CASSANDRA - 11462 ) <nl> * DatabaseDescriptor should log stacktrace in case of Eception during seed provider creation ( CASSANDRA - 11312 ) <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java <nl> index fe62ea7 . . 35cdca8 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java <nl> @ @ - 517 , 13 + 517 , 13 @ @ public class CqlConfigHelper <nl> Optional < String > truststorePassword = getInputNativeSSLTruststorePassword ( conf ) ; <nl> Optional < String > keystorePassword = getInputNativeSSLKeystorePassword ( conf ) ; <nl> Optional < String > cipherSuites = getInputNativeSSLCipherSuites ( conf ) ; <nl> - <nl> - if ( truststorePath . isPresent ( ) & & keystorePath . isPresent ( ) & & truststorePassword . isPresent ( ) & & keystorePassword . isPresent ( ) ) <nl> + <nl> + if ( truststorePath . isPresent ( ) ) <nl> { <nl> SSLContext context ; <nl> try <nl> { <nl> - context = getSSLContext ( truststorePath . get ( ) , truststorePassword . get ( ) , keystorePath . get ( ) , keystorePassword . get ( ) ) ; <nl> + context = getSSLContext ( truststorePath , truststorePassword , keystorePath , keystorePassword ) ; <nl> } <nl> catch ( UnrecoverableKeyException | KeyManagementException | <nl> NoSuchAlgorithmException | KeyStoreException | CertificateException | IOException e ) <nl> @ @ - 585 , 26 + 585 , 46 @ @ public class CqlConfigHelper <nl> } <nl> } <nl> <nl> - private static SSLContext getSSLContext ( String truststorePath , String truststorePassword , String keystorePath , String keystorePassword ) <nl> - throws NoSuchAlgorithmException , KeyStoreException , CertificateException , IOException , UnrecoverableKeyException , KeyManagementException <nl> + private static SSLContext getSSLContext ( Optional < String > truststorePath , <nl> + Optional < String > truststorePassword , <nl> + Optional < String > keystorePath , <nl> + Optional < String > keystorePassword ) <nl> + throws NoSuchAlgorithmException , <nl> + KeyStoreException , <nl> + CertificateException , <nl> + IOException , <nl> + UnrecoverableKeyException , <nl> + KeyManagementException <nl> { <nl> - SSLContext ctx ; <nl> - try ( FileInputStream tsf = new FileInputStream ( truststorePath ) ; FileInputStream ksf = new FileInputStream ( keystorePath ) ) <nl> - { <nl> - ctx = SSLContext . getInstance ( " SSL " ) ; <nl> + SSLContext ctx = SSLContext . getInstance ( " SSL " ) ; <nl> <nl> - KeyStore ts = KeyStore . getInstance ( " JKS " ) ; <nl> - ts . load ( tsf , truststorePassword . toCharArray ( ) ) ; <nl> - TrustManagerFactory tmf = TrustManagerFactory . getInstance ( TrustManagerFactory . getDefaultAlgorithm ( ) ) ; <nl> - tmf . init ( ts ) ; <nl> - <nl> - KeyStore ks = KeyStore . getInstance ( " JKS " ) ; <nl> - ks . load ( ksf , keystorePassword . toCharArray ( ) ) ; <nl> - KeyManagerFactory kmf = KeyManagerFactory . getInstance ( KeyManagerFactory . getDefaultAlgorithm ( ) ) ; <nl> - kmf . init ( ks , keystorePassword . toCharArray ( ) ) ; <nl> + TrustManagerFactory tmf = null ; <nl> + if ( truststorePath . isPresent ( ) ) <nl> + { <nl> + try ( FileInputStream tsf = new FileInputStream ( truststorePath . get ( ) ) ) <nl> + { <nl> + KeyStore ts = KeyStore . getInstance ( " JKS " ) ; <nl> + ts . load ( tsf , truststorePassword . isPresent ( ) ? truststorePassword . get ( ) . toCharArray ( ) : null ) ; <nl> + tmf = TrustManagerFactory . getInstance ( TrustManagerFactory . getDefaultAlgorithm ( ) ) ; <nl> + tmf . init ( ts ) ; <nl> + } <nl> + } <nl> <nl> - ctx . init ( kmf . getKeyManagers ( ) , tmf . getTrustManagers ( ) , new SecureRandom ( ) ) ; <nl> + KeyManagerFactory kmf = null ; <nl> + if ( keystorePath . isPresent ( ) ) <nl> + { <nl> + try ( FileInputStream ksf = new FileInputStream ( keystorePath . get ( ) ) ) <nl> + { <nl> + KeyStore ks = KeyStore . getInstance ( " JKS " ) ; <nl> + ks . load ( ksf , keystorePassword . isPresent ( ) ? keystorePassword . get ( ) . toCharArray ( ) : null ) ; <nl> + kmf = KeyManagerFactory . getInstance ( KeyManagerFactory . getDefaultAlgorithm ( ) ) ; <nl> + kmf . init ( ks , keystorePassword . isPresent ( ) ? keystorePassword . get ( ) . toCharArray ( ) : null ) ; <nl> + } <nl> } <nl> + <nl> + ctx . init ( kmf ! = null ? kmf . getKeyManagers ( ) : null , <nl> + tmf ! = null ? tmf . getTrustManagers ( ) : null , <nl> + new SecureRandom ( ) ) ; <nl> return ctx ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 9bc3eb1 . . 4add520 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 2 , 6 + 2 , 7 @ @ <nl> * Log a miningfull warning when a node receive a message for a repair session <nl> that don ' t exist anymore ( CASSANDRA - 3256 ) <nl> * test for NUMA policy support as well as numactl presence ( CASSANDRA - 3245 ) <nl> + * Fix FD leak when internode encryption is enabled ( CASSANDRA - 3257 ) <nl> <nl> <nl> 1 . 0 . 0 - rc1 <nl> @ @ - 25 , 8 + 26 , 7 @ @ <nl> * Fix sstableloader - - ignores option ( CASSANDRA - 3247 ) <nl> * File descriptor limit increased in packaging ( CASSANDRA - 3206 ) <nl> * Fix deadlock in commit log during flush ( CASSANDRA - 3253 ) <nl> - * Fix FD leak when internode encryption is enabled ( CASSANDRA - 3257 ) <nl> - <nl> + <nl> <nl> 1 . 0 . 0 - beta1 <nl> * removed binarymemtable ( CASSANDRA - 2692 )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 419ed21 . . 54013a3 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 2 . 6 
 + * CqlConfigHelper no longer requires both a keystore and truststore to work ( CASSANDRA - 11532 ) 
 * Make deprecated repair methods backward - compatible with previous notification service ( CASSANDRA - 11430 ) 
 * IncomingStreamingConnection version check message wrong ( CASSANDRA - 11462 ) 
 * DatabaseDescriptor should log stacktrace in case of Eception during seed provider creation ( CASSANDRA - 11312 ) 
 diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java 
 index fe62ea7 . . 35cdca8 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java 
 + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlConfigHelper . java 
 @ @ - 517 , 13 + 517 , 13 @ @ public class CqlConfigHelper 
 Optional < String > truststorePassword = getInputNativeSSLTruststorePassword ( conf ) ; 
 Optional < String > keystorePassword = getInputNativeSSLKeystorePassword ( conf ) ; 
 Optional < String > cipherSuites = getInputNativeSSLCipherSuites ( conf ) ; 
 - 
 - if ( truststorePath . isPresent ( ) & & keystorePath . isPresent ( ) & & truststorePassword . isPresent ( ) & & keystorePassword . isPresent ( ) ) 
 + 
 + if ( truststorePath . isPresent ( ) ) 
 { 
 SSLContext context ; 
 try 
 { 
 - context = getSSLContext ( truststorePath . get ( ) , truststorePassword . get ( ) , keystorePath . get ( ) , keystorePassword . get ( ) ) ; 
 + context = getSSLContext ( truststorePath , truststorePassword , keystorePath , keystorePassword ) ; 
 } 
 catch ( UnrecoverableKeyException | KeyManagementException | 
 NoSuchAlgorithmException | KeyStoreException | CertificateException | IOException e ) 
 @ @ - 585 , 26 + 585 , 46 @ @ public class CqlConfigHelper 
 } 
 } 
 
 - private static SSLContext getSSLContext ( String truststorePath , String truststorePassword , String keystorePath , String keystorePassword ) 
 - throws NoSuchAlgorithmException , KeyStoreException , CertificateException , IOException , UnrecoverableKeyException , KeyManagementException 
 + private static SSLContext getSSLContext ( Optional < String > truststorePath , 
 + Optional < String > truststorePassword , 
 + Optional < String > keystorePath , 
 + Optional < String > keystorePassword ) 
 + throws NoSuchAlgorithmException , 
 + KeyStoreException , 
 + CertificateException , 
 + IOException , 
 + UnrecoverableKeyException , 
 + KeyManagementException 
 { 
 - SSLContext ctx ; 
 - try ( FileInputStream tsf = new FileInputStream ( truststorePath ) ; FileInputStream ksf = new FileInputStream ( keystorePath ) ) 
 - { 
 - ctx = SSLContext . getInstance ( " SSL " ) ; 
 + SSLContext ctx = SSLContext . getInstance ( " SSL " ) ; 
 
 - KeyStore ts = KeyStore . getInstance ( " JKS " ) ; 
 - ts . load ( tsf , truststorePassword . toCharArray ( ) ) ; 
 - TrustManagerFactory tmf = TrustManagerFactory . getInstance ( TrustManagerFactory . getDefaultAlgorithm ( ) ) ; 
 - tmf . init ( ts ) ; 
 - 
 - KeyStore ks = KeyStore . getInstance ( " JKS " ) ; 
 - ks . load ( ksf , keystorePassword . toCharArray ( ) ) ; 
 - KeyManagerFactory kmf = KeyManagerFactory . getInstance ( KeyManagerFactory . getDefaultAlgorithm ( ) ) ; 
 - kmf . init ( ks , keystorePassword . toCharArray ( ) ) ; 
 + TrustManagerFactory tmf = null ; 
 + if ( truststorePath . isPresent ( ) ) 
 + { 
 + try ( FileInputStream tsf = new FileInputStream ( truststorePath . get ( ) ) ) 
 + { 
 + KeyStore ts = KeyStore . getInstance ( " JKS " ) ; 
 + ts . load ( tsf , truststorePassword . isPresent ( ) ? truststorePassword . get ( ) . toCharArray ( ) : null ) ; 
 + tmf = TrustManagerFactory . getInstance ( TrustManagerFactory . getDefaultAlgorithm ( ) ) ; 
 + tmf . init ( ts ) ; 
 + } 
 + } 
 
 - ctx . init ( kmf . getKeyManagers ( ) , tmf . getTrustManagers ( ) , new SecureRandom ( ) ) ; 
 + KeyManagerFactory kmf = null ; 
 + if ( keystorePath . isPresent ( ) ) 
 + { 
 + try ( FileInputStream ksf = new FileInputStream ( keystorePath . get ( ) ) ) 
 + { 
 + KeyStore ks = KeyStore . getInstance ( " JKS " ) ; 
 + ks . load ( ksf , keystorePassword . isPresent ( ) ? keystorePassword . get ( ) . toCharArray ( ) : null ) ; 
 + kmf = KeyManagerFactory . getInstance ( KeyManagerFactory . getDefaultAlgorithm ( ) ) ; 
 + kmf . init ( ks , keystorePassword . isPresent ( ) ? keystorePassword . get ( ) . toCharArray ( ) : null ) ; 
 + } 
 } 
 + 
 + ctx . init ( kmf ! = null ? kmf . getKeyManagers ( ) : null , 
 + tmf ! = null ? tmf . getTrustManagers ( ) : null , 
 + new SecureRandom ( ) ) ; 
 return ctx ; 
 } 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 9bc3eb1 . . 4add520 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 2 , 6 + 2 , 7 @ @ 
 * Log a miningfull warning when a node receive a message for a repair session 
 that don ' t exist anymore ( CASSANDRA - 3256 ) 
 * test for NUMA policy support as well as numactl presence ( CASSANDRA - 3245 ) 
 + * Fix FD leak when internode encryption is enabled ( CASSANDRA - 3257 ) 
 
 
 1 . 0 . 0 - rc1 
 @ @ - 25 , 8 + 26 , 7 @ @ 
 * Fix sstableloader - - ignores option ( CASSANDRA - 3247 ) 
 * File descriptor limit increased in packaging ( CASSANDRA - 3206 ) 
 * Fix deadlock in commit log during flush ( CASSANDRA - 3253 ) 
 - * Fix FD leak when internode encryption is enabled ( CASSANDRA - 3257 ) 
 - 
 + 
 
 1 . 0 . 0 - beta1 
 * removed binarymemtable ( CASSANDRA - 2692 )
