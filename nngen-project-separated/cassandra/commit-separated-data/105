BLEU SCORE: 0.041961149062965476

TEST MSG: Fix reading columns with non - UTF names from schema
GENERATED MSG: Fix ColumnFamilyStoreTest failure

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 47e5cd0 . . d2ca759 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 3 + 1 , 7 @ @ <nl> + 3 . 0 . 18 <nl> + * Fix reading columns with non - UTF names from schema ( CASSANDRA - 14468 ) <nl> + <nl> + <nl> 3 . 0 . 17 <nl> * Fix corrupted static collection deletions in 3 . 0 - > 2 . { 1 , 2 } messages ( CASSANDRA - 14568 ) <nl> * Fix potential IndexOutOfBoundsException with counters ( CASSANDRA - 14167 ) <nl> diff - - git a / src / java / org / apache / cassandra / config / ColumnDefinition . java b / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> index 6a0f530 . . 6f7f749 100644 <nl> - - - a / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> + + + b / src / java / org / apache / cassandra / config / ColumnDefinition . java <nl> @ @ - 153 , 7 + 153 , 6 @ @ public class ColumnDefinition extends ColumnSpecification implements Comparable < <nl> { <nl> super ( ksName , cfName , name , type ) ; <nl> assert name ! = null & & type ! = null & & kind ! = null ; <nl> - assert name . isInterned ( ) ; <nl> assert ( position = = NO _ POSITION ) = = ! kind . isPrimaryKeyKind ( ) ; / / The position really only make sense for partition and clustering columns ( and those must have one ) , <nl> / / so make sure we don ' t sneak it for something else since it ' d breaks equals ( ) <nl> this . kind = kind ; <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java b / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java <nl> index 9b9ec4a . . 71e7b9a 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java <nl> @ @ - 124 , 6 + 124 , 11 @ @ public class ColumnIdentifier extends Selectable implements IMeasurableMemory , C <nl> this ( bytes , type . getString ( bytes ) , false ) ; <nl> } <nl> <nl> + public ColumnIdentifier ( ByteBuffer bytes , String text ) <nl> + { <nl> + this ( bytes , text , false ) ; <nl> + } <nl> + <nl> private ColumnIdentifier ( ByteBuffer bytes , String text , boolean interned ) <nl> { <nl> this . bytes = bytes ; <nl> diff - - git a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> index 81cc2e1 . . 94832ed 100644 <nl> - - - a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> + + + b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> @ @ - 1075 , 9 + 1075 , 7 @ @ public final class SchemaKeyspace <nl> if ( order = = ClusteringOrder . DESC ) <nl> type = ReversedType . getInstance ( type ) ; <nl> <nl> - ColumnIdentifier name = ColumnIdentifier . getInterned ( type , <nl> - row . getBytes ( " column _ name _ bytes " ) , <nl> - row . getString ( " column _ name " ) ) ; <nl> + ColumnIdentifier name = new ColumnIdentifier ( row . getBytes ( " column _ name _ bytes " ) , row . getString ( " column _ name " ) ) ; <nl> <nl> return new ColumnDefinition ( keyspace , table , name , type , position , kind ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java <nl> index 97237d0 . . 3e0d97b 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java <nl> + + + b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java <nl> @ @ - 218 , 9 + 218 , 7 @ @ public class NativeSSTableLoaderClient extends SSTableLoader . Client <nl> if ( order = = ClusteringOrder . DESC ) <nl> type = ReversedType . getInstance ( type ) ; <nl> <nl> - ColumnIdentifier name = ColumnIdentifier . getInterned ( type , <nl> - row . getBytes ( " column _ name _ bytes " ) , <nl> - row . getString ( " column _ name " ) ) ; <nl> + ColumnIdentifier name = new ColumnIdentifier ( row . getBytes ( " column _ name _ bytes " ) , row . getString ( " column _ name " ) ) ; <nl> <nl> int position = row . getInt ( " position " ) ; <nl> ColumnDefinition . Kind kind = ColumnDefinition . Kind . valueOf ( row . getString ( " kind " ) . toUpperCase ( ) ) ;
NEAREST DIFF (one line): diff - - git a / bin / cqlsh b / bin / cqlsh <nl> index 4e93db7 . . f984618 100755 <nl> - - - a / bin / cqlsh <nl> + + + b / bin / cqlsh <nl> @ @ - 1884 , 7 + 1884 , 7 @ @ class Shell ( cmd . Cmd ) : <nl> return names <nl> <nl> def columnize ( self , slist , * a , * * kw ) : <nl> - return cmd . Cmd . columnize ( self , [ u . upper ( ) for u in slist ] , * a , * * kw ) <nl> + return cmd . Cmd . columnize ( self , sorted ( [ u . upper ( ) for u in slist ] ) , * a , * * kw ) <nl> <nl> def do _ help ( self , parsed ) : <nl> " " "

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 47e5cd0 . . d2ca759 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 3 + 1 , 7 @ @ 
 + 3 . 0 . 18 
 + * Fix reading columns with non - UTF names from schema ( CASSANDRA - 14468 ) 
 + 
 + 
 3 . 0 . 17 
 * Fix corrupted static collection deletions in 3 . 0 - > 2 . { 1 , 2 } messages ( CASSANDRA - 14568 ) 
 * Fix potential IndexOutOfBoundsException with counters ( CASSANDRA - 14167 ) 
 diff - - git a / src / java / org / apache / cassandra / config / ColumnDefinition . java b / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 index 6a0f530 . . 6f7f749 100644 
 - - - a / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 + + + b / src / java / org / apache / cassandra / config / ColumnDefinition . java 
 @ @ - 153 , 7 + 153 , 6 @ @ public class ColumnDefinition extends ColumnSpecification implements Comparable < 
 { 
 super ( ksName , cfName , name , type ) ; 
 assert name ! = null & & type ! = null & & kind ! = null ; 
 - assert name . isInterned ( ) ; 
 assert ( position = = NO _ POSITION ) = = ! kind . isPrimaryKeyKind ( ) ; / / The position really only make sense for partition and clustering columns ( and those must have one ) , 
 / / so make sure we don ' t sneak it for something else since it ' d breaks equals ( ) 
 this . kind = kind ; 
 diff - - git a / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java b / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java 
 index 9b9ec4a . . 71e7b9a 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java 
 + + + b / src / java / org / apache / cassandra / cql3 / ColumnIdentifier . java 
 @ @ - 124 , 6 + 124 , 11 @ @ public class ColumnIdentifier extends Selectable implements IMeasurableMemory , C 
 this ( bytes , type . getString ( bytes ) , false ) ; 
 } 
 
 + public ColumnIdentifier ( ByteBuffer bytes , String text ) 
 + { 
 + this ( bytes , text , false ) ; 
 + } 
 + 
 private ColumnIdentifier ( ByteBuffer bytes , String text , boolean interned ) 
 { 
 this . bytes = bytes ; 
 diff - - git a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 index 81cc2e1 . . 94832ed 100644 
 - - - a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 + + + b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 @ @ - 1075 , 9 + 1075 , 7 @ @ public final class SchemaKeyspace 
 if ( order = = ClusteringOrder . DESC ) 
 type = ReversedType . getInstance ( type ) ; 
 
 - ColumnIdentifier name = ColumnIdentifier . getInterned ( type , 
 - row . getBytes ( " column _ name _ bytes " ) , 
 - row . getString ( " column _ name " ) ) ; 
 + ColumnIdentifier name = new ColumnIdentifier ( row . getBytes ( " column _ name _ bytes " ) , row . getString ( " column _ name " ) ) ; 
 
 return new ColumnDefinition ( keyspace , table , name , type , position , kind ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java 
 index 97237d0 . . 3e0d97b 100644 
 - - - a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java 
 + + + b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java 
 @ @ - 218 , 9 + 218 , 7 @ @ public class NativeSSTableLoaderClient extends SSTableLoader . Client 
 if ( order = = ClusteringOrder . DESC ) 
 type = ReversedType . getInstance ( type ) ; 
 
 - ColumnIdentifier name = ColumnIdentifier . getInterned ( type , 
 - row . getBytes ( " column _ name _ bytes " ) , 
 - row . getString ( " column _ name " ) ) ; 
 + ColumnIdentifier name = new ColumnIdentifier ( row . getBytes ( " column _ name _ bytes " ) , row . getString ( " column _ name " ) ) ; 
 
 int position = row . getInt ( " position " ) ; 
 ColumnDefinition . Kind kind = ColumnDefinition . Kind . valueOf ( row . getString ( " kind " ) . toUpperCase ( ) ) ;

NEAREST DIFF:
diff - - git a / bin / cqlsh b / bin / cqlsh 
 index 4e93db7 . . f984618 100755 
 - - - a / bin / cqlsh 
 + + + b / bin / cqlsh 
 @ @ - 1884 , 7 + 1884 , 7 @ @ class Shell ( cmd . Cmd ) : 
 return names 
 
 def columnize ( self , slist , * a , * * kw ) : 
 - return cmd . Cmd . columnize ( self , [ u . upper ( ) for u in slist ] , * a , * * kw ) 
 + return cmd . Cmd . columnize ( self , sorted ( [ u . upper ( ) for u in slist ] ) , * a , * * kw ) 
 
 def do _ help ( self , parsed ) : 
 " " "
