BLEU SCORE: 0.06567274736060397

TEST MSG: Fix sstable read rate tracking for NamesQueryFilters
GENERATED MSG: Fix SSTableScanner potentially skipping rows during cleanup

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 8dd2613 . . 37b3f83 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 2 <nl> + * Fix read - rate tracking of sstables for some queries ( CASSANDRA - 8239 ) <nl> * Fix default timestamp in QueryOptions ( CASSANDRA - 8246 ) <nl> * Set socket timeout when reading remote version ( CASSANDRA - 8188 ) <nl> * Refactor how we track live size ( CASSANDRA - 7852 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / CollationController . java b / src / java / org / apache / cassandra / db / CollationController . java <nl> index 1bc421d . . f9d5daa 100644 <nl> - - - a / src / java / org / apache / cassandra / db / CollationController . java <nl> + + + b / src / java / org / apache / cassandra / db / CollationController . java <nl> @ @ - 123 , 6 + 123 , 7 @ @ public class CollationController <nl> break ; <nl> <nl> Tracing . trace ( " Merging data from sstable { } " , sstable . descriptor . generation ) ; <nl> + sstable . incrementReadCount ( ) ; <nl> OnDiskAtomIterator iter = reducedFilter . getSSTableColumnIterator ( sstable ) ; <nl> iterators . add ( iter ) ; <nl> isEmpty = false ; <nl> diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java <nl> index 6f8ab62 . . ef6b14a 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java <nl> + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java <nl> @ @ - 188 , 6 + 188 , 34 @ @ public class SSTableReaderTest extends SchemaLoader <nl> } <nl> <nl> @ Test <nl> + public void testReadRateTracking ( ) <nl> + { <nl> + / / try to make sure CASSANDRA - 8239 never happens again <nl> + Keyspace keyspace = Keyspace . open ( " Keyspace1 " ) ; <nl> + ColumnFamilyStore store = keyspace . getColumnFamilyStore ( " Standard1 " ) ; <nl> + <nl> + for ( int j = 0 ; j < 10 ; j + + ) <nl> + { <nl> + ByteBuffer key = ByteBufferUtil . bytes ( String . valueOf ( j ) ) ; <nl> + Mutation rm = new Mutation ( " Keyspace1 " , key ) ; <nl> + rm . add ( " Standard1 " , cellname ( " 0 " ) , ByteBufferUtil . EMPTY _ BYTE _ BUFFER , j ) ; <nl> + rm . apply ( ) ; <nl> + } <nl> + store . forceBlockingFlush ( ) ; <nl> + <nl> + SSTableReader sstable = store . getSSTables ( ) . iterator ( ) . next ( ) ; <nl> + assertEquals ( 0 , sstable . readMeter . count ( ) ) ; <nl> + <nl> + DecoratedKey key = sstable . partitioner . decorateKey ( ByteBufferUtil . bytes ( " 4 " ) ) ; <nl> + store . getColumnFamily ( key , Composites . EMPTY , Composites . EMPTY , false , 100 , 100 ) ; <nl> + assertEquals ( 1 , sstable . readMeter . count ( ) ) ; <nl> + store . getColumnFamily ( key , cellname ( " 0 " ) , cellname ( " 0 " ) , false , 100 , 100 ) ; <nl> + assertEquals ( 2 , sstable . readMeter . count ( ) ) ; <nl> + store . getColumnFamily ( Util . namesQueryFilter ( store , key , cellname ( " 0 " ) ) ) ; <nl> + assertEquals ( 3 , sstable . readMeter . count ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testGetPositionsForRangesWithKeyCache ( ) throws ExecutionException , InterruptedException <nl> { <nl> Keyspace keyspace = Keyspace . open ( " Keyspace1 " ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 8dd2613 . . 37b3f83 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 2 
 + * Fix read - rate tracking of sstables for some queries ( CASSANDRA - 8239 ) 
 * Fix default timestamp in QueryOptions ( CASSANDRA - 8246 ) 
 * Set socket timeout when reading remote version ( CASSANDRA - 8188 ) 
 * Refactor how we track live size ( CASSANDRA - 7852 ) 
 diff - - git a / src / java / org / apache / cassandra / db / CollationController . java b / src / java / org / apache / cassandra / db / CollationController . java 
 index 1bc421d . . f9d5daa 100644 
 - - - a / src / java / org / apache / cassandra / db / CollationController . java 
 + + + b / src / java / org / apache / cassandra / db / CollationController . java 
 @ @ - 123 , 6 + 123 , 7 @ @ public class CollationController 
 break ; 
 
 Tracing . trace ( " Merging data from sstable { } " , sstable . descriptor . generation ) ; 
 + sstable . incrementReadCount ( ) ; 
 OnDiskAtomIterator iter = reducedFilter . getSSTableColumnIterator ( sstable ) ; 
 iterators . add ( iter ) ; 
 isEmpty = false ; 
 diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java 
 index 6f8ab62 . . ef6b14a 100644 
 - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java 
 + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java 
 @ @ - 188 , 6 + 188 , 34 @ @ public class SSTableReaderTest extends SchemaLoader 
 } 
 
 @ Test 
 + public void testReadRateTracking ( ) 
 + { 
 + / / try to make sure CASSANDRA - 8239 never happens again 
 + Keyspace keyspace = Keyspace . open ( " Keyspace1 " ) ; 
 + ColumnFamilyStore store = keyspace . getColumnFamilyStore ( " Standard1 " ) ; 
 + 
 + for ( int j = 0 ; j < 10 ; j + + ) 
 + { 
 + ByteBuffer key = ByteBufferUtil . bytes ( String . valueOf ( j ) ) ; 
 + Mutation rm = new Mutation ( " Keyspace1 " , key ) ; 
 + rm . add ( " Standard1 " , cellname ( " 0 " ) , ByteBufferUtil . EMPTY _ BYTE _ BUFFER , j ) ; 
 + rm . apply ( ) ; 
 + } 
 + store . forceBlockingFlush ( ) ; 
 + 
 + SSTableReader sstable = store . getSSTables ( ) . iterator ( ) . next ( ) ; 
 + assertEquals ( 0 , sstable . readMeter . count ( ) ) ; 
 + 
 + DecoratedKey key = sstable . partitioner . decorateKey ( ByteBufferUtil . bytes ( " 4 " ) ) ; 
 + store . getColumnFamily ( key , Composites . EMPTY , Composites . EMPTY , false , 100 , 100 ) ; 
 + assertEquals ( 1 , sstable . readMeter . count ( ) ) ; 
 + store . getColumnFamily ( key , cellname ( " 0 " ) , cellname ( " 0 " ) , false , 100 , 100 ) ; 
 + assertEquals ( 2 , sstable . readMeter . count ( ) ) ; 
 + store . getColumnFamily ( Util . namesQueryFilter ( store , key , cellname ( " 0 " ) ) ) ; 
 + assertEquals ( 3 , sstable . readMeter . count ( ) ) ; 
 + } 
 + 
 + @ Test 
 public void testGetPositionsForRangesWithKeyCache ( ) throws ExecutionException , InterruptedException 
 { 
 Keyspace keyspace = Keyspace . open ( " Keyspace1 " ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
