BLEU SCORE: 0.015401555084618098

TEST MSG: fix
GENERATED MSG: merge from 1 . 2

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / view / MaterializedViewUtils . java b / src / java / org / apache / cassandra / db / view / MaterializedViewUtils . java <nl> index 4dfea75 . . ea81750 100644 <nl> - - - a / src / java / org / apache / cassandra / db / view / MaterializedViewUtils . java <nl> + + + b / src / java / org / apache / cassandra / db / view / MaterializedViewUtils . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . db . Keyspace ; <nl> import org . apache . cassandra . dht . Token ; <nl> import org . apache . cassandra . locator . AbstractReplicationStrategy ; <nl> + import org . apache . cassandra . service . StorageService ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> <nl> public final class MaterializedViewUtils <nl> @ @ - 87 , 8 + 88 , 21 @ @ public final class MaterializedViewUtils <nl> / / number of replicas for all of the tokens in the ring . <nl> assert localBaseEndpoints . size ( ) = = localViewEndpoints . size ( ) : " Replication strategy should have the same number of endpoints for the base and the view " ; <nl> int baseIdx = localBaseEndpoints . indexOf ( FBUtilities . getBroadcastAddress ( ) ) ; <nl> + <nl> if ( baseIdx < 0 ) <nl> + { <nl> + <nl> + if ( StorageService . instance . getTokenMetadata ( ) . pendingEndpointsFor ( viewToken , keyspaceName ) . size ( ) > 0 ) <nl> + { <nl> + / / Since there are pending endpoints we are going to store hints this in the batchlog regardless . <nl> + / / So we can pretend we are the views endpoint . <nl> + <nl> + return FBUtilities . getBroadcastAddress ( ) ; <nl> + } <nl> + <nl> throw new RuntimeException ( " Trying to get the view natural endpoint on a non - data replica " ) ; <nl> + } <nl> + <nl> <nl> return localViewEndpoints . get ( baseIdx ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b935425 . . 7f5a487 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 2 - rc1 <nl> + * fix cqlsh rendering of blob fields ( CASSANDRA - 4970 ) <nl> * fix cqlsh DESCRIBE command ( CASSANDRA - 4913 ) <nl> * save truncation position in system table ( CASSANDRA - 4906 ) <nl> * Move CompressionMetadata off - heap ( CASSANDRA - 4937 ) <nl> diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py <nl> index d15c083 . . bab3506 100644 <nl> - - - a / pylib / cqlshlib / formatting . py <nl> + + + b / pylib / cqlshlib / formatting . py <nl> @ @ - 88 , 8 + 88 , 8 @ @ def formatter _ for ( typname ) : <nl> return f <nl> return registrator <nl> <nl> - @ formatter _ for ( ' bytes ' ) <nl> - def format _ value _ bytes ( val , colormap , * * _ ) : <nl> + @ formatter _ for ( ' blob ' ) <nl> + def format _ value _ blob ( val , colormap , * * _ ) : <nl> bval = ' ' . join ( ' % 02x ' % ord ( c ) for c in val ) <nl> return colorme ( bval , colormap , ' hex ' ) <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / view / MaterializedViewUtils . java b / src / java / org / apache / cassandra / db / view / MaterializedViewUtils . java 
 index 4dfea75 . . ea81750 100644 
 - - - a / src / java / org / apache / cassandra / db / view / MaterializedViewUtils . java 
 + + + b / src / java / org / apache / cassandra / db / view / MaterializedViewUtils . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . db . Keyspace ; 
 import org . apache . cassandra . dht . Token ; 
 import org . apache . cassandra . locator . AbstractReplicationStrategy ; 
 + import org . apache . cassandra . service . StorageService ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 
 public final class MaterializedViewUtils 
 @ @ - 87 , 8 + 88 , 21 @ @ public final class MaterializedViewUtils 
 / / number of replicas for all of the tokens in the ring . 
 assert localBaseEndpoints . size ( ) = = localViewEndpoints . size ( ) : " Replication strategy should have the same number of endpoints for the base and the view " ; 
 int baseIdx = localBaseEndpoints . indexOf ( FBUtilities . getBroadcastAddress ( ) ) ; 
 + 
 if ( baseIdx < 0 ) 
 + { 
 + 
 + if ( StorageService . instance . getTokenMetadata ( ) . pendingEndpointsFor ( viewToken , keyspaceName ) . size ( ) > 0 ) 
 + { 
 + / / Since there are pending endpoints we are going to store hints this in the batchlog regardless . 
 + / / So we can pretend we are the views endpoint . 
 + 
 + return FBUtilities . getBroadcastAddress ( ) ; 
 + } 
 + 
 throw new RuntimeException ( " Trying to get the view natural endpoint on a non - data replica " ) ; 
 + } 
 + 
 
 return localViewEndpoints . get ( baseIdx ) ; 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b935425 . . 7f5a487 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 2 - rc1 
 + * fix cqlsh rendering of blob fields ( CASSANDRA - 4970 ) 
 * fix cqlsh DESCRIBE command ( CASSANDRA - 4913 ) 
 * save truncation position in system table ( CASSANDRA - 4906 ) 
 * Move CompressionMetadata off - heap ( CASSANDRA - 4937 ) 
 diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py 
 index d15c083 . . bab3506 100644 
 - - - a / pylib / cqlshlib / formatting . py 
 + + + b / pylib / cqlshlib / formatting . py 
 @ @ - 88 , 8 + 88 , 8 @ @ def formatter _ for ( typname ) : 
 return f 
 return registrator 
 
 - @ formatter _ for ( ' bytes ' ) 
 - def format _ value _ bytes ( val , colormap , * * _ ) : 
 + @ formatter _ for ( ' blob ' ) 
 + def format _ value _ blob ( val , colormap , * * _ ) : 
 bval = ' ' . join ( ' % 02x ' % ord ( c ) for c in val ) 
 return colorme ( bval , colormap , ' hex ' ) 

