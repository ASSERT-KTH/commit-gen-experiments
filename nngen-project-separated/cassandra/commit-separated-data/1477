BLEU SCORE: 0.029083177105737566

TEST MSG: JDK bug prevents clean shutdown on OSX with Java 1 . 8 . 0 _ 20
GENERATED MSG: r / m unused TC . inUse _ field

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java <nl> index 83bc337 . . dec7550 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessagingService . java <nl> + + + b / src / java / org / apache / cassandra / net / MessagingService . java <nl> @ @ - 934 , 8 + 934 , 21 @ @ public final class MessagingService implements MessagingServiceMBean <nl> void close ( ) throws IOException <nl> { <nl> logger . debug ( " Closing accept ( ) thread " ) ; <nl> - server . close ( ) ; <nl> - for ( Closeable connection : connections ) <nl> + <nl> + try <nl> + { <nl> + server . close ( ) ; <nl> + } <nl> + catch ( IOException e ) <nl> + { <nl> + / / dirty hack for clean shutdown on OSX w / Java > = 1 . 8 . 0 _ 20 <nl> + / / see https : / / issues . apache . org / jira / browse / CASSANDRA - 8220 <nl> + / / see https : / / bugs . openjdk . java . net / browse / JDK - 8050499 <nl> + if ( ! " Unknown error : 316 " . equals ( e . getMessage ( ) ) | | ! " Mac OS X " . equals ( System . getProperty ( " os . name " ) ) ) <nl> + throw e ; <nl> + } <nl> + <nl> + for ( Closeable connection : connections ) <nl> { <nl> connection . close ( ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java <nl> index bd804fb . . 5555580 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessagingService . java <nl> + + + b / src / java / org / apache / cassandra / net / MessagingService . java <nl> @ @ - 427 , 13 + 427 , 6 @ @ public class MessagingService implements IFailureDetectionEventListener <nl> } <nl> logger _ . error ( " unexpected error writing " + message , e ) ; <nl> } <nl> - finally <nl> - { <nl> - if ( connection ! = null ) <nl> - { <nl> - connection . close ( ) ; <nl> - } <nl> - } <nl> } <nl> <nl> public IAsyncResult sendRR ( Message message , InetAddress to ) <nl> diff - - git a / src / java / org / apache / cassandra / net / TcpConnection . java b / src / java / org / apache / cassandra / net / TcpConnection . java <nl> index 4e36730 . . 21c5728 100644 <nl> - - - a / src / java / org / apache / cassandra / net / TcpConnection . java <nl> + + + b / src / java / org / apache / cassandra / net / TcpConnection . java <nl> @ @ - 55 , 8 + 55 , 7 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable <nl> private Queue < ByteBuffer > pendingWrites _ = new ConcurrentLinkedQueue < ByteBuffer > ( ) ; <nl> private InetAddress localEp _ ; <nl> private InetAddress remoteEp _ ; <nl> - boolean inUse _ = false ; <nl> - <nl> + <nl> / * <nl> * Added for streaming support . We need the boolean <nl> * to indicate that this connection is used for <nl> @ @ - 272 , 11 + 271 , 6 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable <nl> } <nl> } <nl> <nl> - public void close ( ) <nl> - { <nl> - inUse _ = false ; <nl> - } <nl> - <nl> public boolean isConnected ( ) <nl> { <nl> return socketChannel _ . isConnected ( ) ; <nl> @ @ - 304 , 7 + 298 , 7 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable <nl> void closeSocket ( ) <nl> { <nl> if ( pendingWrites _ . size ( ) > 0 ) <nl> - logger _ . error ( " Closing down connection " + socketChannel _ + " with " + pendingWrites _ . size ( ) + " writes remaining . " ) ; <nl> + logger _ . warn ( " Closing down connection " + socketChannel _ + " with " + pendingWrites _ . size ( ) + " writes remaining . " ) ; <nl> cancel ( key _ ) ; <nl> pendingWrites _ . clear ( ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / net / TcpConnectionManager . java b / src / java / org / apache / cassandra / net / TcpConnectionManager . java <nl> index 377abed . . bcd8383 100644 <nl> - - - a / src / java / org / apache / cassandra / net / TcpConnectionManager . java <nl> + + + b / src / java / org / apache / cassandra / net / TcpConnectionManager . java <nl> @ @ - 41 , 7 + 41 , 6 @ @ class TcpConnectionManager <nl> private TcpConnection newCon ( ) throws IOException <nl> { <nl> TcpConnection con = new TcpConnection ( this , localEp _ , remoteEp _ ) ; <nl> - con . inUse _ = true ; <nl> return con ; <nl> } <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java 
 index 83bc337 . . dec7550 100644 
 - - - a / src / java / org / apache / cassandra / net / MessagingService . java 
 + + + b / src / java / org / apache / cassandra / net / MessagingService . java 
 @ @ - 934 , 8 + 934 , 21 @ @ public final class MessagingService implements MessagingServiceMBean 
 void close ( ) throws IOException 
 { 
 logger . debug ( " Closing accept ( ) thread " ) ; 
 - server . close ( ) ; 
 - for ( Closeable connection : connections ) 
 + 
 + try 
 + { 
 + server . close ( ) ; 
 + } 
 + catch ( IOException e ) 
 + { 
 + / / dirty hack for clean shutdown on OSX w / Java > = 1 . 8 . 0 _ 20 
 + / / see https : / / issues . apache . org / jira / browse / CASSANDRA - 8220 
 + / / see https : / / bugs . openjdk . java . net / browse / JDK - 8050499 
 + if ( ! " Unknown error : 316 " . equals ( e . getMessage ( ) ) | | ! " Mac OS X " . equals ( System . getProperty ( " os . name " ) ) ) 
 + throw e ; 
 + } 
 + 
 + for ( Closeable connection : connections ) 
 { 
 connection . close ( ) ; 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java 
 index bd804fb . . 5555580 100644 
 - - - a / src / java / org / apache / cassandra / net / MessagingService . java 
 + + + b / src / java / org / apache / cassandra / net / MessagingService . java 
 @ @ - 427 , 13 + 427 , 6 @ @ public class MessagingService implements IFailureDetectionEventListener 
 } 
 logger _ . error ( " unexpected error writing " + message , e ) ; 
 } 
 - finally 
 - { 
 - if ( connection ! = null ) 
 - { 
 - connection . close ( ) ; 
 - } 
 - } 
 } 
 
 public IAsyncResult sendRR ( Message message , InetAddress to ) 
 diff - - git a / src / java / org / apache / cassandra / net / TcpConnection . java b / src / java / org / apache / cassandra / net / TcpConnection . java 
 index 4e36730 . . 21c5728 100644 
 - - - a / src / java / org / apache / cassandra / net / TcpConnection . java 
 + + + b / src / java / org / apache / cassandra / net / TcpConnection . java 
 @ @ - 55 , 8 + 55 , 7 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable 
 private Queue < ByteBuffer > pendingWrites _ = new ConcurrentLinkedQueue < ByteBuffer > ( ) ; 
 private InetAddress localEp _ ; 
 private InetAddress remoteEp _ ; 
 - boolean inUse _ = false ; 
 - 
 + 
 / * 
 * Added for streaming support . We need the boolean 
 * to indicate that this connection is used for 
 @ @ - 272 , 11 + 271 , 6 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable 
 } 
 } 
 
 - public void close ( ) 
 - { 
 - inUse _ = false ; 
 - } 
 - 
 public boolean isConnected ( ) 
 { 
 return socketChannel _ . isConnected ( ) ; 
 @ @ - 304 , 7 + 298 , 7 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable 
 void closeSocket ( ) 
 { 
 if ( pendingWrites _ . size ( ) > 0 ) 
 - logger _ . error ( " Closing down connection " + socketChannel _ + " with " + pendingWrites _ . size ( ) + " writes remaining . " ) ; 
 + logger _ . warn ( " Closing down connection " + socketChannel _ + " with " + pendingWrites _ . size ( ) + " writes remaining . " ) ; 
 cancel ( key _ ) ; 
 pendingWrites _ . clear ( ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / net / TcpConnectionManager . java b / src / java / org / apache / cassandra / net / TcpConnectionManager . java 
 index 377abed . . bcd8383 100644 
 - - - a / src / java / org / apache / cassandra / net / TcpConnectionManager . java 
 + + + b / src / java / org / apache / cassandra / net / TcpConnectionManager . java 
 @ @ - 41 , 7 + 41 , 6 @ @ class TcpConnectionManager 
 private TcpConnection newCon ( ) throws IOException 
 { 
 TcpConnection con = new TcpConnection ( this , localEp _ , remoteEp _ ) ; 
 - con . inUse _ = true ; 
 return con ; 
 } 

