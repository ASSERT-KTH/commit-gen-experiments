BLEU SCORE: 0.014199193612838947

TEST MSG: Don ' t add localhost to the graph when calculating where to stream from
GENERATED MSG: Do not consider local node a valid source during replace

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 087bacc . . 0be0e39 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 4 . 0 <nl> + * Don ' t add localhost to the graph when calculating where to stream from ( CASSANDRA - 13583 ) <nl> * Allow skipping equality - restricted clustering columns in ORDER BY clause ( CASSANDRA - 10271 ) <nl> * Use common nowInSec for validation compactions ( CASSANDRA - 13671 ) <nl> * Improve handling of IR prepare failures ( CASSANDRA - 13672 ) <nl> diff - - git a / src / java / org / apache / cassandra / dht / RangeFetchMapCalculator . java b / src / java / org / apache / cassandra / dht / RangeFetchMapCalculator . java <nl> index 355d7a9 . . 1186eab 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / RangeFetchMapCalculator . java <nl> + + + b / src / java / org / apache / cassandra / dht / RangeFetchMapCalculator . java <nl> @ @ - 251 , 8 + 251 , 7 @ @ public class RangeFetchMapCalculator <nl> sourceFound = addEndpoints ( capacityGraph , rangeVertex , false ) ; <nl> } <nl> <nl> - / / We could not find any source for this range which passed the filters . Ignore if localhost is part of the endpoints for this range <nl> - if ( ! sourceFound & & ! rangesWithSources . get ( range ) . contains ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> + if ( ! sourceFound ) <nl> throw new IllegalStateException ( " Unable to find sufficient sources for streaming range " + range + " in keyspace " + keyspace ) ; <nl> <nl> } <nl> @ @ - 275 , 6 + 274 , 9 @ @ public class RangeFetchMapCalculator <nl> if ( passFilters ( endpoint , localDCCheck ) ) <nl> { <nl> sourceFound = true ; <nl> + / / if we pass filters , it means that we don ' t filter away localhost and we can count it as a source : <nl> + if ( endpoint . equals ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> + continue ; / / but don ' t add localhost to the graph to avoid streaming locally <nl> final Vertex endpointVertex = new EndpointVertex ( endpoint ) ; <nl> capacityGraph . insertVertex ( rangeVertex ) ; <nl> capacityGraph . insertVertex ( endpointVertex ) ; <nl> @ @ - 303 , 9 + 305 , 6 @ @ public class RangeFetchMapCalculator <nl> return false ; <nl> } <nl> <nl> - if ( endpoint . equals ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> - return false ; <nl> - <nl> return ! localDCCheck | | isInLocalDC ( endpoint ) ; <nl> } <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 087bacc . . 0be0e39 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 4 . 0 
 + * Don ' t add localhost to the graph when calculating where to stream from ( CASSANDRA - 13583 ) 
 * Allow skipping equality - restricted clustering columns in ORDER BY clause ( CASSANDRA - 10271 ) 
 * Use common nowInSec for validation compactions ( CASSANDRA - 13671 ) 
 * Improve handling of IR prepare failures ( CASSANDRA - 13672 ) 
 diff - - git a / src / java / org / apache / cassandra / dht / RangeFetchMapCalculator . java b / src / java / org / apache / cassandra / dht / RangeFetchMapCalculator . java 
 index 355d7a9 . . 1186eab 100644 
 - - - a / src / java / org / apache / cassandra / dht / RangeFetchMapCalculator . java 
 + + + b / src / java / org / apache / cassandra / dht / RangeFetchMapCalculator . java 
 @ @ - 251 , 8 + 251 , 7 @ @ public class RangeFetchMapCalculator 
 sourceFound = addEndpoints ( capacityGraph , rangeVertex , false ) ; 
 } 
 
 - / / We could not find any source for this range which passed the filters . Ignore if localhost is part of the endpoints for this range 
 - if ( ! sourceFound & & ! rangesWithSources . get ( range ) . contains ( FBUtilities . getBroadcastAddress ( ) ) ) 
 + if ( ! sourceFound ) 
 throw new IllegalStateException ( " Unable to find sufficient sources for streaming range " + range + " in keyspace " + keyspace ) ; 
 
 } 
 @ @ - 275 , 6 + 274 , 9 @ @ public class RangeFetchMapCalculator 
 if ( passFilters ( endpoint , localDCCheck ) ) 
 { 
 sourceFound = true ; 
 + / / if we pass filters , it means that we don ' t filter away localhost and we can count it as a source : 
 + if ( endpoint . equals ( FBUtilities . getBroadcastAddress ( ) ) ) 
 + continue ; / / but don ' t add localhost to the graph to avoid streaming locally 
 final Vertex endpointVertex = new EndpointVertex ( endpoint ) ; 
 capacityGraph . insertVertex ( rangeVertex ) ; 
 capacityGraph . insertVertex ( endpointVertex ) ; 
 @ @ - 303 , 9 + 305 , 6 @ @ public class RangeFetchMapCalculator 
 return false ; 
 } 
 
 - if ( endpoint . equals ( FBUtilities . getBroadcastAddress ( ) ) ) 
 - return false ; 
 - 
 return ! localDCCheck | | isInLocalDC ( endpoint ) ; 
 } 


NEAREST DIFF:
ELIMINATEDSENTENCE
