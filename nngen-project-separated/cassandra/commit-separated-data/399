BLEU SCORE: 0.016932492841722675

TEST MSG: Write schema tables with timestamp = 0 to avoid excess schema migrations
GENERATED MSG: Fix transposed arguments in AlreadyExistsException ( CASSANDRA - 5362 )

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 7a860fe . . 19cd39c 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 4 , 6 + 4 , 7 @ @ <nl> * Avoid name clashes in CassandraIndexTest ( CASSANDRA - 13427 ) <nl> * Handling partially written hint files ( CASSANDRA - 12728 ) <nl> * Interrupt replaying hints on decommission ( CASSANDRA - 13308 ) <nl> + * Fix schema version calculation for rolling upgrades ( CASSANDRA - 13441 ) <nl> <nl> 3 . 0 . 13 <nl> * Make reading of range tombstones more reliable ( CASSANDRA - 12811 ) <nl> diff - - git a / src / java / org / apache / cassandra / service / MigrationManager . java b / src / java / org / apache / cassandra / service / MigrationManager . java <nl> index 7c929e7 . . aacb769 100644 <nl> - - - a / src / java / org / apache / cassandra / service / MigrationManager . java <nl> + + + b / src / java / org / apache / cassandra / service / MigrationManager . java <nl> @ @ - 325 , 11 + 325 , 16 @ @ public class MigrationManager <nl> * / <nl> public static void forceAnnounceNewColumnFamily ( CFMetaData cfm ) throws ConfigurationException <nl> { <nl> - announceNewColumnFamily ( cfm , false , false ) ; <nl> + announceNewColumnFamily ( cfm , false , false , 0 ) ; <nl> } <nl> <nl> private static void announceNewColumnFamily ( CFMetaData cfm , boolean announceLocally , boolean throwOnDuplicate ) throws ConfigurationException <nl> { <nl> + announceNewColumnFamily ( cfm , announceLocally , throwOnDuplicate , FBUtilities . timestampMicros ( ) ) ; <nl> + } <nl> + <nl> + private static void announceNewColumnFamily ( CFMetaData cfm , boolean announceLocally , boolean throwOnDuplicate , long timestamp ) throws ConfigurationException <nl> + { <nl> cfm . validate ( ) ; <nl> <nl> KeyspaceMetadata ksm = Schema . instance . getKSMetaData ( cfm . ksName ) ; <nl> @ @ - 340 , 7 + 345 , 7 @ @ public class MigrationManager <nl> throw new AlreadyExistsException ( cfm . ksName , cfm . cfName ) ; <nl> <nl> logger . info ( String . format ( " Create new table : % s " , cfm ) ) ; <nl> - announce ( SchemaKeyspace . makeCreateTableMutation ( ksm , cfm , FBUtilities . timestampMicros ( ) ) , announceLocally ) ; <nl> + announce ( SchemaKeyspace . makeCreateTableMutation ( ksm , cfm , timestamp ) , announceLocally ) ; <nl> } <nl> <nl> public static void announceNewView ( ViewDefinition view , boolean announceLocally ) throws ConfigurationException
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> index 8cd8b56 . . 9d113a6 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> @ @ - 212 , 7 + 212 , 16 @ @ public class NodeCmd <nl> for ( Map . Entry < String , String > entry : tokensToEndpoints . entrySet ( ) ) <nl> endpointsToTokens . put ( entry . getValue ( ) , entry . getKey ( ) ) ; <nl> <nl> - String format = " % - 16s % - 12s % - 7s % - 8s % - 16s % - 20s % - 44s % n " ; <nl> + int maxAddressLength = Collections . max ( endpointsToTokens . keys ( ) , new Comparator < String > ( ) { <nl> + @ Override <nl> + public int compare ( String first , String second ) <nl> + { <nl> + return ( ( Integer ) first . length ( ) ) . compareTo ( ( Integer ) second . length ( ) ) ; <nl> + } <nl> + } ) . length ( ) ; <nl> + <nl> + String formatPlaceholder = " % % - % ds % % - 12s % % - 7s % % - 8s % % - 16s % % - 20s % % - 44s % % n " ; <nl> + String format = String . format ( formatPlaceholder , maxAddressLength ) ; <nl> <nl> / / Calculate per - token ownership of the ring <nl> Map < InetAddress , Float > ownerships ; <nl> @ @ - 328 , 6 + 337 , 7 @ @ public class NodeCmd <nl> private class ClusterStatus <nl> { <nl> String kSpace = null , format = null ; <nl> + int maxAddressLength ; <nl> Collection < String > joiningNodes , leavingNodes , movingNodes , liveNodes , unreachableNodes ; <nl> Map < String , String > loadMap , hostIDMap , tokensToEndpoints ; <nl> EndpointSnitchInfoMBean epSnitchInfo ; <nl> @ @ - 376 , 7 + 386 , 10 @ @ public class NodeCmd <nl> if ( format = = null ) <nl> { <nl> StringBuffer buf = new StringBuffer ( ) ; <nl> - buf . append ( " % s % s % - 16s % - 9s " ) ; / / status , address , and load <nl> + String addressPlaceholder = String . format ( " % % - % ds " , maxAddressLength ) ; <nl> + buf . append ( " % s % s " ) ; / / status <nl> + buf . append ( addressPlaceholder ) ; / / address <nl> + buf . append ( " % - 9s " ) ; / / load <nl> if ( ! isTokenPerNode ) buf . append ( " % - 6s " ) ; / / " Tokens " <nl> if ( hasEffectiveOwns ) buf . append ( " % - 16s " ) ; / / " Owns ( effective ) " <nl> else buf . append ( " % - 5s " ) ; / / " Owns <nl> @ @ - 435 , 6 + 448 , 7 @ @ public class NodeCmd <nl> { <nl> Map < InetAddress , Float > ownerships ; <nl> boolean hasEffectiveOwns = false , isTokenPerNode = true ; <nl> + <nl> try <nl> { <nl> ownerships = probe . effectiveOwnership ( kSpace ) ; <nl> @ @ - 449 , 6 + 463 , 21 @ @ public class NodeCmd <nl> if ( new HashSet < String > ( tokensToEndpoints . values ( ) ) . size ( ) < tokensToEndpoints . keySet ( ) . size ( ) ) <nl> isTokenPerNode = false ; <nl> <nl> + maxAddressLength = 0 ; <nl> + for ( Map . Entry < String , Map < InetAddress , Float > > dc : getOwnershipByDc ( ownerships ) . entrySet ( ) ) <nl> + { <nl> + int dcMaxAddressLength = Collections . max ( dc . getValue ( ) . keySet ( ) , new Comparator < InetAddress > ( ) { <nl> + @ Override <nl> + public int compare ( InetAddress first , InetAddress second ) <nl> + { <nl> + return ( ( Integer ) first . getHostAddress ( ) . length ( ) ) . compareTo ( ( Integer ) second . getHostAddress ( ) . length ( ) ) ; <nl> + } <nl> + } ) . getHostAddress ( ) . length ( ) ; <nl> + <nl> + if ( dcMaxAddressLength > maxAddressLength ) <nl> + maxAddressLength = dcMaxAddressLength ; <nl> + } <nl> + <nl> / / Datacenters <nl> for ( Map . Entry < String , Map < InetAddress , Float > > dc : getOwnershipByDc ( ownerships ) . entrySet ( ) ) <nl> {

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 7a860fe . . 19cd39c 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 4 , 6 + 4 , 7 @ @ 
 * Avoid name clashes in CassandraIndexTest ( CASSANDRA - 13427 ) 
 * Handling partially written hint files ( CASSANDRA - 12728 ) 
 * Interrupt replaying hints on decommission ( CASSANDRA - 13308 ) 
 + * Fix schema version calculation for rolling upgrades ( CASSANDRA - 13441 ) 
 
 3 . 0 . 13 
 * Make reading of range tombstones more reliable ( CASSANDRA - 12811 ) 
 diff - - git a / src / java / org / apache / cassandra / service / MigrationManager . java b / src / java / org / apache / cassandra / service / MigrationManager . java 
 index 7c929e7 . . aacb769 100644 
 - - - a / src / java / org / apache / cassandra / service / MigrationManager . java 
 + + + b / src / java / org / apache / cassandra / service / MigrationManager . java 
 @ @ - 325 , 11 + 325 , 16 @ @ public class MigrationManager 
 * / 
 public static void forceAnnounceNewColumnFamily ( CFMetaData cfm ) throws ConfigurationException 
 { 
 - announceNewColumnFamily ( cfm , false , false ) ; 
 + announceNewColumnFamily ( cfm , false , false , 0 ) ; 
 } 
 
 private static void announceNewColumnFamily ( CFMetaData cfm , boolean announceLocally , boolean throwOnDuplicate ) throws ConfigurationException 
 { 
 + announceNewColumnFamily ( cfm , announceLocally , throwOnDuplicate , FBUtilities . timestampMicros ( ) ) ; 
 + } 
 + 
 + private static void announceNewColumnFamily ( CFMetaData cfm , boolean announceLocally , boolean throwOnDuplicate , long timestamp ) throws ConfigurationException 
 + { 
 cfm . validate ( ) ; 
 
 KeyspaceMetadata ksm = Schema . instance . getKSMetaData ( cfm . ksName ) ; 
 @ @ - 340 , 7 + 345 , 7 @ @ public class MigrationManager 
 throw new AlreadyExistsException ( cfm . ksName , cfm . cfName ) ; 
 
 logger . info ( String . format ( " Create new table : % s " , cfm ) ) ; 
 - announce ( SchemaKeyspace . makeCreateTableMutation ( ksm , cfm , FBUtilities . timestampMicros ( ) ) , announceLocally ) ; 
 + announce ( SchemaKeyspace . makeCreateTableMutation ( ksm , cfm , timestamp ) , announceLocally ) ; 
 } 
 
 public static void announceNewView ( ViewDefinition view , boolean announceLocally ) throws ConfigurationException

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 index 8cd8b56 . . 9d113a6 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 @ @ - 212 , 7 + 212 , 16 @ @ public class NodeCmd 
 for ( Map . Entry < String , String > entry : tokensToEndpoints . entrySet ( ) ) 
 endpointsToTokens . put ( entry . getValue ( ) , entry . getKey ( ) ) ; 
 
 - String format = " % - 16s % - 12s % - 7s % - 8s % - 16s % - 20s % - 44s % n " ; 
 + int maxAddressLength = Collections . max ( endpointsToTokens . keys ( ) , new Comparator < String > ( ) { 
 + @ Override 
 + public int compare ( String first , String second ) 
 + { 
 + return ( ( Integer ) first . length ( ) ) . compareTo ( ( Integer ) second . length ( ) ) ; 
 + } 
 + } ) . length ( ) ; 
 + 
 + String formatPlaceholder = " % % - % ds % % - 12s % % - 7s % % - 8s % % - 16s % % - 20s % % - 44s % % n " ; 
 + String format = String . format ( formatPlaceholder , maxAddressLength ) ; 
 
 / / Calculate per - token ownership of the ring 
 Map < InetAddress , Float > ownerships ; 
 @ @ - 328 , 6 + 337 , 7 @ @ public class NodeCmd 
 private class ClusterStatus 
 { 
 String kSpace = null , format = null ; 
 + int maxAddressLength ; 
 Collection < String > joiningNodes , leavingNodes , movingNodes , liveNodes , unreachableNodes ; 
 Map < String , String > loadMap , hostIDMap , tokensToEndpoints ; 
 EndpointSnitchInfoMBean epSnitchInfo ; 
 @ @ - 376 , 7 + 386 , 10 @ @ public class NodeCmd 
 if ( format = = null ) 
 { 
 StringBuffer buf = new StringBuffer ( ) ; 
 - buf . append ( " % s % s % - 16s % - 9s " ) ; / / status , address , and load 
 + String addressPlaceholder = String . format ( " % % - % ds " , maxAddressLength ) ; 
 + buf . append ( " % s % s " ) ; / / status 
 + buf . append ( addressPlaceholder ) ; / / address 
 + buf . append ( " % - 9s " ) ; / / load 
 if ( ! isTokenPerNode ) buf . append ( " % - 6s " ) ; / / " Tokens " 
 if ( hasEffectiveOwns ) buf . append ( " % - 16s " ) ; / / " Owns ( effective ) " 
 else buf . append ( " % - 5s " ) ; / / " Owns 
 @ @ - 435 , 6 + 448 , 7 @ @ public class NodeCmd 
 { 
 Map < InetAddress , Float > ownerships ; 
 boolean hasEffectiveOwns = false , isTokenPerNode = true ; 
 + 
 try 
 { 
 ownerships = probe . effectiveOwnership ( kSpace ) ; 
 @ @ - 449 , 6 + 463 , 21 @ @ public class NodeCmd 
 if ( new HashSet < String > ( tokensToEndpoints . values ( ) ) . size ( ) < tokensToEndpoints . keySet ( ) . size ( ) ) 
 isTokenPerNode = false ; 
 
 + maxAddressLength = 0 ; 
 + for ( Map . Entry < String , Map < InetAddress , Float > > dc : getOwnershipByDc ( ownerships ) . entrySet ( ) ) 
 + { 
 + int dcMaxAddressLength = Collections . max ( dc . getValue ( ) . keySet ( ) , new Comparator < InetAddress > ( ) { 
 + @ Override 
 + public int compare ( InetAddress first , InetAddress second ) 
 + { 
 + return ( ( Integer ) first . getHostAddress ( ) . length ( ) ) . compareTo ( ( Integer ) second . getHostAddress ( ) . length ( ) ) ; 
 + } 
 + } ) . getHostAddress ( ) . length ( ) ; 
 + 
 + if ( dcMaxAddressLength > maxAddressLength ) 
 + maxAddressLength = dcMaxAddressLength ; 
 + } 
 + 
 / / Datacenters 
 for ( Map . Entry < String , Map < InetAddress , Float > > dc : getOwnershipByDc ( ownerships ) . entrySet ( ) ) 
 {
