BLEU SCORE: 0.014199193612838947

TEST MSG: Don ' t let users drop or generally break tables in system _ distributed
GENERATED MSG: Filter out all LocalStrat keyspaces for streaming

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index db3f502 . . 75f2c29 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 16 <nl> + * Don ' t let user drop or generally break tables in system _ distributed ( CASSANDRA - 13813 ) <nl> * Provide a JMX call to sync schema with local storage ( CASSANDRA - 13954 ) <nl> * Mishandling of cells for removed / dropped columns when reading legacy files ( CASSANDRA - 13939 ) <nl> * Deserialise sstable metadata in nodetool verify ( CASSANDRA - 13922 ) <nl> diff - - git a / src / java / org / apache / cassandra / config / Schema . java b / src / java / org / apache / cassandra / config / Schema . java <nl> index cc24e1e . . 6d91d8d 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Schema . java <nl> + + + b / src / java / org / apache / cassandra / config / Schema . java <nl> @ @ - 55 , 12 + 55 , 12 @ @ public class Schema <nl> public static final Schema instance = new Schema ( ) ; <nl> <nl> / * system keyspace names ( the ones with LocalStrategy replication strategy ) * / <nl> - public static final Set < String > SYSTEM _ KEYSPACE _ NAMES = ImmutableSet . of ( SystemKeyspace . NAME , SchemaKeyspace . NAME ) ; <nl> + public static final Set < String > LOCAL _ SYSTEM _ KEYSPACE _ NAMES = <nl> + ImmutableSet . of ( SystemKeyspace . NAME , SchemaKeyspace . NAME ) ; <nl> <nl> / * replicate system keyspace names ( the ones with a " true " replication strategy ) * / <nl> - public static final Set < String > REPLICATED _ SYSTEM _ KEYSPACE _ NAMES = ImmutableSet . of ( TraceKeyspace . NAME , <nl> - AuthKeyspace . NAME , <nl> - SystemDistributedKeyspace . NAME ) ; <nl> + public static final Set < String > REPLICATED _ SYSTEM _ KEYSPACE _ NAMES = <nl> + ImmutableSet . of ( TraceKeyspace . NAME , AuthKeyspace . NAME , SystemDistributedKeyspace . NAME ) ; <nl> <nl> / * * <nl> * longest permissible KS or CF name . Our main concern is that filename not be more than 255 characters ; <nl> @ @ - 112 , 9 + 112 , 17 @ @ public class Schema <nl> / * * <nl> * @ return whether or not the keyspace is a really system one ( w / LocalStrategy , unmodifiable , hardcoded ) <nl> * / <nl> - public static boolean isSystemKeyspace ( String keyspaceName ) <nl> + public static boolean isLocalSystemKeyspace ( String keyspaceName ) <nl> { <nl> - return SYSTEM _ KEYSPACE _ NAMES . contains ( keyspaceName . toLowerCase ( ) ) ; <nl> + return LOCAL _ SYSTEM _ KEYSPACE _ NAMES . contains ( keyspaceName . toLowerCase ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return whether or not the keyspace is a replicated system keyspace ( trace , auth , sys - ditributed ) <nl> + * / <nl> + public static boolean isReplicatedSystemKeyspace ( String keyspaceName ) <nl> + { <nl> + return REPLICATED _ SYSTEM _ KEYSPACE _ NAMES . contains ( keyspaceName . toLowerCase ( ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 336 , 7 + 344 , 7 @ @ public class Schema <nl> <nl> private Set < String > getNonSystemKeyspacesSet ( ) <nl> { <nl> - return Sets . difference ( keyspaces . keySet ( ) , SYSTEM _ KEYSPACE _ NAMES ) ; <nl> + return Sets . difference ( keyspaces . keySet ( ) , LOCAL _ SYSTEM _ KEYSPACE _ NAMES ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 374 , 7 + 382 , 7 @ @ public class Schema <nl> <nl> keyspaces . values ( ) <nl> . stream ( ) <nl> - . filter ( k - > ! Schema . isSystemKeyspace ( k . name ) ) <nl> + . filter ( k - > ! Schema . isLocalSystemKeyspace ( k . name ) ) <nl> . forEach ( builder : : add ) ; <nl> <nl> return builder . build ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / AlterKeyspaceStatement . java b / src / java / org / apache / cassandra / cql3 / statements / AlterKeyspaceStatement . java <nl> index be85fef . . 3ca4d72 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / AlterKeyspaceStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / AlterKeyspaceStatement . java <nl> @ @ - 56 , 7 + 56 , 7 @ @ public class AlterKeyspaceStatement extends SchemaAlteringStatement <nl> KeyspaceMetadata ksm = Schema . instance . getKSMetaData ( name ) ; <nl> if ( ksm = = null ) <nl> throw new InvalidRequestException ( " Unknown keyspace " + name ) ; <nl> - if ( Schema . isSystemKeyspace ( ksm . name ) ) <nl> + if ( Schema . isLocalSystemKeyspace ( ksm . name ) ) <nl> throw new InvalidRequestException ( " Cannot alter system keyspace " ) ; <nl> <nl> attrs . validate ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 0d19856 . . 536681f 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 1651 , 7 + 1651 , 8 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> } <nl> <nl> writeSnapshotManifest ( filesJSONArr , snapshotName ) ; <nl> - if ( ! Schema . SYSTEM _ KEYSPACE _ NAMES . contains ( metadata . ksName ) & & ! Schema . REPLICATED _ SYSTEM _ KEYSPACE _ NAMES . contains ( metadata . ksName ) ) <nl> + <nl> + if ( ! Schema . isLocalSystemKeyspace ( metadata . ksName ) & & ! Schema . isReplicatedSystemKeyspace ( metadata . ksName ) ) <nl> writeSnapshotSchema ( snapshotName ) ; <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / Keyspace . java b / src / java / org / apache / cassandra / db / Keyspace . java <nl> index 7349f42 . . 3d3e037 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Keyspace . java <nl> + + + b / src / java / org / apache / cassandra / db / Keyspace . java <nl> @ @ - 102 , 7 + 102 , 7 @ @ public class Keyspace <nl> <nl> public static Keyspace open ( String keyspaceName ) <nl> { <nl> - assert initialized | | Schema . isSystemKeyspace ( keyspaceName ) ; <nl> + assert initialized | | Schema . isLocalSystemKeyspace ( keyspaceName ) ; <nl> return open ( keyspaceName , Schema . instance , true ) ; <nl> } <nl> <nl> @ @ - 681 , 7 + 681 , 7 @ @ public class Keyspace <nl> <nl> public static Iterable < Keyspace > system ( ) <nl> { <nl> - return Iterables . transform ( Schema . SYSTEM _ KEYSPACE _ NAMES , keyspaceTransformer ) ; <nl> + return Iterables . transform ( Schema . LOCAL _ SYSTEM _ KEYSPACE _ NAMES , keyspaceTransformer ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / java / org / apache / cassandra / db / ReadCommand . java b / src / java / org / apache / cassandra / db / ReadCommand . java <nl> index 2d399d8 . . c93692a 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ReadCommand . java <nl> + + + b / src / java / org / apache / cassandra / db / ReadCommand . java <nl> @ @ - 451 , 7 + 451 , 7 @ @ public abstract class ReadCommand implements ReadQuery <nl> private final int failureThreshold = DatabaseDescriptor . getTombstoneFailureThreshold ( ) ; <nl> private final int warningThreshold = DatabaseDescriptor . getTombstoneWarnThreshold ( ) ; <nl> <nl> - private final boolean respectTombstoneThresholds = ! Schema . isSystemKeyspace ( ReadCommand . this . metadata ( ) . ksName ) ; <nl> + private final boolean respectTombstoneThresholds = ! Schema . isLocalSystemKeyspace ( ReadCommand . this . metadata ( ) . ksName ) ; <nl> private final boolean enforceStrictLiveness = metadata . enforceStrictLiveness ( ) ; <nl> <nl> private int liveRows = 0 ; <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java <nl> index 25ba212 . . fb9343f 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java <nl> @ @ - 2213 , 7 + 2213 , 7 @ @ public abstract class SSTableReader extends SSTable implements SelfRefCounted < SS <nl> <nl> / / Don ' t track read rates for tables in the system keyspace and don ' t bother trying to load or persist <nl> / / the read meter when in client mode . <nl> - if ( Schema . isSystemKeyspace ( desc . ksname ) | | ! DatabaseDescriptor . isDaemonInitialized ( ) ) <nl> + if ( Schema . isLocalSystemKeyspace ( desc . ksname ) | | ! DatabaseDescriptor . isDaemonInitialized ( ) ) <nl> { <nl> readMeter = null ; <nl> readMeterSyncFuture = NULL ; <nl> diff - - git a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java <nl> index 01c5e3e . . 184effc 100644 <nl> - - - a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java <nl> + + + b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java <nl> @ @ - 173 , 7 + 173 , 7 @ @ public final class LegacySchemaMigrator <nl> String query = format ( " SELECT keyspace _ name FROM % s . % s " , SystemKeyspace . NAME , SystemKeyspace . LEGACY _ KEYSPACES ) ; <nl> Collection < String > keyspaceNames = new ArrayList < > ( ) ; <nl> query ( query ) . forEach ( row - > keyspaceNames . add ( row . getString ( " keyspace _ name " ) ) ) ; <nl> - keyspaceNames . removeAll ( Schema . SYSTEM _ KEYSPACE _ NAMES ) ; <nl> + keyspaceNames . removeAll ( Schema . LOCAL _ SYSTEM _ KEYSPACE _ NAMES ) ; <nl> <nl> Collection < Keyspace > keyspaces = new ArrayList < > ( ) ; <nl> keyspaceNames . forEach ( name - > keyspaces . add ( readKeyspace ( name ) ) ) ; <nl> diff - - git a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> index b6bf415 . . 578f501 100644 <nl> - - - a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> + + + b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> @ @ - 280 , 7 + 280 , 7 @ @ public final class SchemaKeyspace <nl> for ( String schemaTable : ALL ) <nl> { <nl> String query = String . format ( " DELETE FROM % s . % s USING TIMESTAMP ? WHERE keyspace _ name = ? " , NAME , schemaTable ) ; <nl> - for ( String systemKeyspace : Schema . SYSTEM _ KEYSPACE _ NAMES ) <nl> + for ( String systemKeyspace : Schema . LOCAL _ SYSTEM _ KEYSPACE _ NAMES ) <nl> executeOnceInternal ( query , timestamp , systemKeyspace ) ; <nl> } <nl> <nl> @ @ - 402 , 7 + 402 , 7 @ @ public final class SchemaKeyspace <nl> <nl> private static boolean isSystemKeyspaceSchemaPartition ( DecoratedKey partitionKey ) <nl> { <nl> - return Schema . isSystemKeyspace ( UTF8Type . instance . compose ( partitionKey . getKey ( ) ) ) ; <nl> + return Schema . isLocalSystemKeyspace ( UTF8Type . instance . compose ( partitionKey . getKey ( ) ) ) ; <nl> } <nl> <nl> / * <nl> @ @ - 880 , 7 + 880 , 7 @ @ public final class SchemaKeyspace <nl> <nl> public static Keyspaces fetchNonSystemKeyspaces ( ) <nl> { <nl> - return fetchKeyspacesWithout ( Schema . SYSTEM _ KEYSPACE _ NAMES ) ; <nl> + return fetchKeyspacesWithout ( Schema . LOCAL _ SYSTEM _ KEYSPACE _ NAMES ) ; <nl> } <nl> <nl> private static Keyspaces fetchKeyspacesWithout ( Set < String > excludedKeyspaceNames ) <nl> diff - - git a / src / java / org / apache / cassandra / service / ClientState . java b / src / java / org / apache / cassandra / service / ClientState . java <nl> index 43002d2 . . 32849bc 100644 <nl> - - - a / src / java / org / apache / cassandra / service / ClientState . java <nl> + + + b / src / java / org / apache / cassandra / service / ClientState . java <nl> @ @ - 40 , 7 + 40 , 6 @ @ import org . apache . cassandra . exceptions . InvalidRequestException ; <nl> import org . apache . cassandra . exceptions . UnauthorizedException ; <nl> import org . apache . cassandra . schema . SchemaKeyspace ; <nl> import org . apache . cassandra . thrift . ThriftValidation ; <nl> - import org . apache . cassandra . tracing . TraceKeyspace ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> import org . apache . cassandra . utils . JVMStabilityInspector ; <nl> import org . apache . cassandra . utils . CassandraVersion ; <nl> @ @ - 55 , 8 + 54 , 7 @ @ public class ClientState <nl> <nl> private static final Set < IResource > READABLE _ SYSTEM _ RESOURCES = new HashSet < > ( ) ; <nl> private static final Set < IResource > PROTECTED _ AUTH _ RESOURCES = new HashSet < > ( ) ; <nl> - private static final Set < String > ALTERABLE _ SYSTEM _ KEYSPACES = new HashSet < > ( ) ; <nl> - private static final Set < IResource > DROPPABLE _ SYSTEM _ TABLES = new HashSet < > ( ) ; <nl> + private static final Set < IResource > DROPPABLE _ SYSTEM _ AUTH _ TABLES = new HashSet < > ( ) ; <nl> static <nl> { <nl> / / We want these system cfs to be always readable to authenticated users since many tools rely on them <nl> @ @ - 73 , 14 + 71 , 10 @ @ public class ClientState <nl> PROTECTED _ AUTH _ RESOURCES . addAll ( DatabaseDescriptor . getRoleManager ( ) . protectedResources ( ) ) ; <nl> } <nl> <nl> - / / allow users with sufficient privileges to alter KS level options on AUTH _ KS and <nl> - / / TRACING _ KS , and also to drop legacy tables ( users , credentials , permissions ) from <nl> - / / AUTH _ KS <nl> - ALTERABLE _ SYSTEM _ KEYSPACES . add ( AuthKeyspace . NAME ) ; <nl> - ALTERABLE _ SYSTEM _ KEYSPACES . add ( TraceKeyspace . NAME ) ; <nl> - DROPPABLE _ SYSTEM _ TABLES . add ( DataResource . table ( AuthKeyspace . NAME , PasswordAuthenticator . LEGACY _ CREDENTIALS _ TABLE ) ) ; <nl> - DROPPABLE _ SYSTEM _ TABLES . add ( DataResource . table ( AuthKeyspace . NAME , CassandraRoleManager . LEGACY _ USERS _ TABLE ) ) ; <nl> - DROPPABLE _ SYSTEM _ TABLES . add ( DataResource . table ( AuthKeyspace . NAME , CassandraAuthorizer . USER _ PERMISSIONS ) ) ; <nl> + / / allow users with sufficient privileges to drop legacy tables ( users , credentials , permissions ) from AUTH _ KS <nl> + DROPPABLE _ SYSTEM _ AUTH _ TABLES . add ( DataResource . table ( AuthKeyspace . NAME , PasswordAuthenticator . LEGACY _ CREDENTIALS _ TABLE ) ) ; <nl> + DROPPABLE _ SYSTEM _ AUTH _ TABLES . add ( DataResource . table ( AuthKeyspace . NAME , CassandraRoleManager . LEGACY _ USERS _ TABLE ) ) ; <nl> + DROPPABLE _ SYSTEM _ AUTH _ TABLES . add ( DataResource . table ( AuthKeyspace . NAME , CassandraAuthorizer . USER _ PERMISSIONS ) ) ; <nl> } <nl> <nl> / / Current user for the session <nl> @ @ - 297 , 15 + 291 , 21 @ @ public class ClientState <nl> throws UnauthorizedException , InvalidRequestException <nl> { <nl> validateKeyspace ( keyspace ) ; <nl> + <nl> if ( isInternal ) <nl> return ; <nl> + <nl> validateLogin ( ) ; <nl> + <nl> preventSystemKSSchemaModification ( keyspace , resource , perm ) ; <nl> + <nl> if ( ( perm = = Permission . SELECT ) & & READABLE _ SYSTEM _ RESOURCES . contains ( resource ) ) <nl> return ; <nl> + <nl> if ( PROTECTED _ AUTH _ RESOURCES . contains ( resource ) ) <nl> if ( ( perm = = Permission . CREATE ) | | ( perm = = Permission . ALTER ) | | ( perm = = Permission . DROP ) ) <nl> throw new UnauthorizedException ( String . format ( " % s schema is protected " , resource ) ) ; <nl> + <nl> ensureHasPermission ( perm , resource ) ; <nl> } <nl> <nl> @ @ - 353 , 21 + 353 , 25 @ @ public class ClientState <nl> <nl> private void preventSystemKSSchemaModification ( String keyspace , DataResource resource , Permission perm ) throws UnauthorizedException <nl> { <nl> - / / we only care about schema modification . <nl> - if ( ! ( ( perm = = Permission . ALTER ) | | ( perm = = Permission . DROP ) | | ( perm = = Permission . CREATE ) ) ) <nl> + / / we only care about DDL statements <nl> + if ( perm ! = Permission . ALTER & & perm ! = Permission . DROP & & perm ! = Permission . CREATE ) <nl> return ; <nl> <nl> - / / prevent system keyspace modification <nl> - if ( Schema . isSystemKeyspace ( keyspace ) ) <nl> + / / prevent ALL local system keyspace modification <nl> + if ( Schema . isLocalSystemKeyspace ( keyspace ) ) <nl> throw new UnauthorizedException ( keyspace + " keyspace is not user - modifiable . " ) ; <nl> <nl> - / / allow users with sufficient privileges to alter KS level options on AUTH _ KS and <nl> - / / TRACING _ KS , and also to drop legacy tables ( users , credentials , permissions ) from <nl> - / / AUTH _ KS <nl> - if ( ALTERABLE _ SYSTEM _ KEYSPACES . contains ( resource . getKeyspace ( ) . toLowerCase ( ) ) <nl> - & & ( ( perm = = Permission . ALTER & & ! resource . isKeyspaceLevel ( ) ) <nl> - | | ( perm = = Permission . DROP & & ! DROPPABLE _ SYSTEM _ TABLES . contains ( resource ) ) ) ) <nl> + if ( Schema . isReplicatedSystemKeyspace ( keyspace ) ) <nl> { <nl> + / / allow users with sufficient privileges to alter replication params of replicated system keyspaces <nl> + if ( perm = = Permission . ALTER & & resource . isKeyspaceLevel ( ) ) <nl> + return ; <nl> + <nl> + / / allow users with sufficient privileges to drop legacy tables in replicated system keyspaces <nl> + if ( perm = = Permission . DROP & & DROPPABLE _ SYSTEM _ AUTH _ TABLES . contains ( resource ) ) <nl> + return ; <nl> + <nl> + / / prevent all other modifications of replicated system keyspaces <nl> throw new UnauthorizedException ( String . format ( " Cannot % s % s " , perm , resource ) ) ; <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> index 5af2ad0 . . e380a3f 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageProxy . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> @ @ - 1476 , 7 + 1476 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> private static boolean systemKeyspaceQuery ( List < ? extends ReadCommand > cmds ) <nl> { <nl> for ( ReadCommand cmd : cmds ) <nl> - if ( ! Schema . isSystemKeyspace ( cmd . metadata ( ) . ksName ) ) <nl> + if ( ! Schema . isLocalSystemKeyspace ( cmd . metadata ( ) . ksName ) ) <nl> return false ; <nl> return true ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 743ed24 . . e5a50dd 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 1014 , 6 + 1014 , 16 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> { <nl> try <nl> { <nl> + / * <nl> + * We use timestamp of 0 , intentionally , so that varying timestamps wouldn ' t cause schema mismatches on <nl> + * newly added nodes . <nl> + * <nl> + * Having the initial / default timestamp as 0 also allows users to make and persist changes to replication <nl> + * of our replicated system keyspaces . <nl> + * <nl> + * In case that we need to make incompatible changes to those kesypaces / tables , we ' d need to bump the timestamp <nl> + * on per - keyspace / per - table basis . So far we ' ve never needed to . <nl> + * / <nl> MigrationManager . announceNewKeyspace ( ksm , 0 , false ) ; <nl> } <nl> catch ( AlreadyExistsException e ) <nl> @ @ - 2682 , 7 + 2692 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> <nl> public int forceKeyspaceCleanup ( int jobs , String keyspaceName , String . . . tables ) throws IOException , ExecutionException , InterruptedException <nl> { <nl> - if ( Schema . isSystemKeyspace ( keyspaceName ) ) <nl> + if ( Schema . isLocalSystemKeyspace ( keyspaceName ) ) <nl> throw new RuntimeException ( " Cleanup of the system keyspace is neither necessary nor wise " ) ; <nl> <nl> CompactionManager . AllSSTableOpStatus status = CompactionManager . AllSSTableOpStatus . SUCCESSFUL ; <nl> @ @ - 2926 , 7 + 2936 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> Map < String , TabularData > snapshotMap = new HashMap < > ( ) ; <nl> for ( Keyspace keyspace : Keyspace . all ( ) ) <nl> { <nl> - if ( Schema . isSystemKeyspace ( keyspace . getName ( ) ) ) <nl> + if ( Schema . isLocalSystemKeyspace ( keyspace . getName ( ) ) ) <nl> continue ; <nl> <nl> for ( ColumnFamilyStore cfStore : keyspace . getColumnFamilyStores ( ) ) <nl> @ @ - 2952 , 7 + 2962 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> long total = 0 ; <nl> for ( Keyspace keyspace : Keyspace . all ( ) ) <nl> { <nl> - if ( Schema . isSystemKeyspace ( keyspace . getName ( ) ) ) <nl> + if ( Schema . isLocalSystemKeyspace ( keyspace . getName ( ) ) ) <nl> continue ; <nl> <nl> for ( ColumnFamilyStore cfStore : keyspace . getColumnFamilyStores ( ) ) <nl> diff - - git a / src / java / org / apache / cassandra / thrift / ThriftValidation . java b / src / java / org / apache / cassandra / thrift / ThriftValidation . java <nl> index 5e46459 . . 99aed05 100644 <nl> - - - a / src / java / org / apache / cassandra / thrift / ThriftValidation . java <nl> + + + b / src / java / org / apache / cassandra / thrift / ThriftValidation . java <nl> @ @ - 636 , 7 + 636 , 7 @ @ public class ThriftValidation <nl> <nl> public static void validateKeyspaceNotSystem ( String modifiedKeyspace ) throws org . apache . cassandra . exceptions . InvalidRequestException <nl> { <nl> - if ( Schema . isSystemKeyspace ( modifiedKeyspace ) ) <nl> + if ( Schema . isLocalSystemKeyspace ( modifiedKeyspace ) ) <nl> throw new org . apache . cassandra . exceptions . InvalidRequestException ( String . format ( " % s keyspace is not user - modifiable " , modifiedKeyspace ) ) ; <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / tools / nodetool / Cleanup . java b / src / java / org / apache / cassandra / tools / nodetool / Cleanup . java <nl> index 41e9b01 . . 47c65c8 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / nodetool / Cleanup . java <nl> + + + b / src / java / org / apache / cassandra / tools / nodetool / Cleanup . java <nl> @ @ - 47 , 7 + 47 , 7 @ @ public class Cleanup extends NodeToolCmd <nl> <nl> for ( String keyspace : keyspaces ) <nl> { <nl> - if ( Schema . isSystemKeyspace ( keyspace ) ) <nl> + if ( Schema . isLocalSystemKeyspace ( keyspace ) ) <nl> continue ; <nl> <nl> try
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index db3f502 . . 75f2c29 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 16 
 + * Don ' t let user drop or generally break tables in system _ distributed ( CASSANDRA - 13813 ) 
 * Provide a JMX call to sync schema with local storage ( CASSANDRA - 13954 ) 
 * Mishandling of cells for removed / dropped columns when reading legacy files ( CASSANDRA - 13939 ) 
 * Deserialise sstable metadata in nodetool verify ( CASSANDRA - 13922 ) 
 diff - - git a / src / java / org / apache / cassandra / config / Schema . java b / src / java / org / apache / cassandra / config / Schema . java 
 index cc24e1e . . 6d91d8d 100644 
 - - - a / src / java / org / apache / cassandra / config / Schema . java 
 + + + b / src / java / org / apache / cassandra / config / Schema . java 
 @ @ - 55 , 12 + 55 , 12 @ @ public class Schema 
 public static final Schema instance = new Schema ( ) ; 
 
 / * system keyspace names ( the ones with LocalStrategy replication strategy ) * / 
 - public static final Set < String > SYSTEM _ KEYSPACE _ NAMES = ImmutableSet . of ( SystemKeyspace . NAME , SchemaKeyspace . NAME ) ; 
 + public static final Set < String > LOCAL _ SYSTEM _ KEYSPACE _ NAMES = 
 + ImmutableSet . of ( SystemKeyspace . NAME , SchemaKeyspace . NAME ) ; 
 
 / * replicate system keyspace names ( the ones with a " true " replication strategy ) * / 
 - public static final Set < String > REPLICATED _ SYSTEM _ KEYSPACE _ NAMES = ImmutableSet . of ( TraceKeyspace . NAME , 
 - AuthKeyspace . NAME , 
 - SystemDistributedKeyspace . NAME ) ; 
 + public static final Set < String > REPLICATED _ SYSTEM _ KEYSPACE _ NAMES = 
 + ImmutableSet . of ( TraceKeyspace . NAME , AuthKeyspace . NAME , SystemDistributedKeyspace . NAME ) ; 
 
 / * * 
 * longest permissible KS or CF name . Our main concern is that filename not be more than 255 characters ; 
 @ @ - 112 , 9 + 112 , 17 @ @ public class Schema 
 / * * 
 * @ return whether or not the keyspace is a really system one ( w / LocalStrategy , unmodifiable , hardcoded ) 
 * / 
 - public static boolean isSystemKeyspace ( String keyspaceName ) 
 + public static boolean isLocalSystemKeyspace ( String keyspaceName ) 
 { 
 - return SYSTEM _ KEYSPACE _ NAMES . contains ( keyspaceName . toLowerCase ( ) ) ; 
 + return LOCAL _ SYSTEM _ KEYSPACE _ NAMES . contains ( keyspaceName . toLowerCase ( ) ) ; 
 + } 
 + 
 + / * * 
 + * @ return whether or not the keyspace is a replicated system keyspace ( trace , auth , sys - ditributed ) 
 + * / 
 + public static boolean isReplicatedSystemKeyspace ( String keyspaceName ) 
 + { 
 + return REPLICATED _ SYSTEM _ KEYSPACE _ NAMES . contains ( keyspaceName . toLowerCase ( ) ) ; 
 } 
 
 / * * 
 @ @ - 336 , 7 + 344 , 7 @ @ public class Schema 
 
 private Set < String > getNonSystemKeyspacesSet ( ) 
 { 
 - return Sets . difference ( keyspaces . keySet ( ) , SYSTEM _ KEYSPACE _ NAMES ) ; 
 + return Sets . difference ( keyspaces . keySet ( ) , LOCAL _ SYSTEM _ KEYSPACE _ NAMES ) ; 
 } 
 
 / * * 
 @ @ - 374 , 7 + 382 , 7 @ @ public class Schema 
 
 keyspaces . values ( ) 
 . stream ( ) 
 - . filter ( k - > ! Schema . isSystemKeyspace ( k . name ) ) 
 + . filter ( k - > ! Schema . isLocalSystemKeyspace ( k . name ) ) 
 . forEach ( builder : : add ) ; 
 
 return builder . build ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / AlterKeyspaceStatement . java b / src / java / org / apache / cassandra / cql3 / statements / AlterKeyspaceStatement . java 
 index be85fef . . 3ca4d72 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / AlterKeyspaceStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / AlterKeyspaceStatement . java 
 @ @ - 56 , 7 + 56 , 7 @ @ public class AlterKeyspaceStatement extends SchemaAlteringStatement 
 KeyspaceMetadata ksm = Schema . instance . getKSMetaData ( name ) ; 
 if ( ksm = = null ) 
 throw new InvalidRequestException ( " Unknown keyspace " + name ) ; 
 - if ( Schema . isSystemKeyspace ( ksm . name ) ) 
 + if ( Schema . isLocalSystemKeyspace ( ksm . name ) ) 
 throw new InvalidRequestException ( " Cannot alter system keyspace " ) ; 
 
 attrs . validate ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 0d19856 . . 536681f 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 1651 , 7 + 1651 , 8 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 } 
 
 writeSnapshotManifest ( filesJSONArr , snapshotName ) ; 
 - if ( ! Schema . SYSTEM _ KEYSPACE _ NAMES . contains ( metadata . ksName ) & & ! Schema . REPLICATED _ SYSTEM _ KEYSPACE _ NAMES . contains ( metadata . ksName ) ) 
 + 
 + if ( ! Schema . isLocalSystemKeyspace ( metadata . ksName ) & & ! Schema . isReplicatedSystemKeyspace ( metadata . ksName ) ) 
 writeSnapshotSchema ( snapshotName ) ; 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / Keyspace . java b / src / java / org / apache / cassandra / db / Keyspace . java 
 index 7349f42 . . 3d3e037 100644 
 - - - a / src / java / org / apache / cassandra / db / Keyspace . java 
 + + + b / src / java / org / apache / cassandra / db / Keyspace . java 
 @ @ - 102 , 7 + 102 , 7 @ @ public class Keyspace 
 
 public static Keyspace open ( String keyspaceName ) 
 { 
 - assert initialized | | Schema . isSystemKeyspace ( keyspaceName ) ; 
 + assert initialized | | Schema . isLocalSystemKeyspace ( keyspaceName ) ; 
 return open ( keyspaceName , Schema . instance , true ) ; 
 } 
 
 @ @ - 681 , 7 + 681 , 7 @ @ public class Keyspace 
 
 public static Iterable < Keyspace > system ( ) 
 { 
 - return Iterables . transform ( Schema . SYSTEM _ KEYSPACE _ NAMES , keyspaceTransformer ) ; 
 + return Iterables . transform ( Schema . LOCAL _ SYSTEM _ KEYSPACE _ NAMES , keyspaceTransformer ) ; 
 } 
 
 @ Override 
 diff - - git a / src / java / org / apache / cassandra / db / ReadCommand . java b / src / java / org / apache / cassandra / db / ReadCommand . java 
 index 2d399d8 . . c93692a 100644 
 - - - a / src / java / org / apache / cassandra / db / ReadCommand . java 
 + + + b / src / java / org / apache / cassandra / db / ReadCommand . java 
 @ @ - 451 , 7 + 451 , 7 @ @ public abstract class ReadCommand implements ReadQuery 
 private final int failureThreshold = DatabaseDescriptor . getTombstoneFailureThreshold ( ) ; 
 private final int warningThreshold = DatabaseDescriptor . getTombstoneWarnThreshold ( ) ; 
 
 - private final boolean respectTombstoneThresholds = ! Schema . isSystemKeyspace ( ReadCommand . this . metadata ( ) . ksName ) ; 
 + private final boolean respectTombstoneThresholds = ! Schema . isLocalSystemKeyspace ( ReadCommand . this . metadata ( ) . ksName ) ; 
 private final boolean enforceStrictLiveness = metadata . enforceStrictLiveness ( ) ; 
 
 private int liveRows = 0 ; 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java 
 index 25ba212 . . fb9343f 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / format / SSTableReader . java 
 @ @ - 2213 , 7 + 2213 , 7 @ @ public abstract class SSTableReader extends SSTable implements SelfRefCounted < SS 
 
 / / Don ' t track read rates for tables in the system keyspace and don ' t bother trying to load or persist 
 / / the read meter when in client mode . 
 - if ( Schema . isSystemKeyspace ( desc . ksname ) | | ! DatabaseDescriptor . isDaemonInitialized ( ) ) 
 + if ( Schema . isLocalSystemKeyspace ( desc . ksname ) | | ! DatabaseDescriptor . isDaemonInitialized ( ) ) 
 { 
 readMeter = null ; 
 readMeterSyncFuture = NULL ; 
 diff - - git a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java 
 index 01c5e3e . . 184effc 100644 
 - - - a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java 
 + + + b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java 
 @ @ - 173 , 7 + 173 , 7 @ @ public final class LegacySchemaMigrator 
 String query = format ( " SELECT keyspace _ name FROM % s . % s " , SystemKeyspace . NAME , SystemKeyspace . LEGACY _ KEYSPACES ) ; 
 Collection < String > keyspaceNames = new ArrayList < > ( ) ; 
 query ( query ) . forEach ( row - > keyspaceNames . add ( row . getString ( " keyspace _ name " ) ) ) ; 
 - keyspaceNames . removeAll ( Schema . SYSTEM _ KEYSPACE _ NAMES ) ; 
 + keyspaceNames . removeAll ( Schema . LOCAL _ SYSTEM _ KEYSPACE _ NAMES ) ; 
 
 Collection < Keyspace > keyspaces = new ArrayList < > ( ) ; 
 keyspaceNames . forEach ( name - > keyspaces . add ( readKeyspace ( name ) ) ) ; 
 diff - - git a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 index b6bf415 . . 578f501 100644 
 - - - a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 + + + b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 @ @ - 280 , 7 + 280 , 7 @ @ public final class SchemaKeyspace 
 for ( String schemaTable : ALL ) 
 { 
 String query = String . format ( " DELETE FROM % s . % s USING TIMESTAMP ? WHERE keyspace _ name = ? " , NAME , schemaTable ) ; 
 - for ( String systemKeyspace : Schema . SYSTEM _ KEYSPACE _ NAMES ) 
 + for ( String systemKeyspace : Schema . LOCAL _ SYSTEM _ KEYSPACE _ NAMES ) 
 executeOnceInternal ( query , timestamp , systemKeyspace ) ; 
 } 
 
 @ @ - 402 , 7 + 402 , 7 @ @ public final class SchemaKeyspace 
 
 private static boolean isSystemKeyspaceSchemaPartition ( DecoratedKey partitionKey ) 
 { 
 - return Schema . isSystemKeyspace ( UTF8Type . instance . compose ( partitionKey . getKey ( ) ) ) ; 
 + return Schema . isLocalSystemKeyspace ( UTF8Type . instance . compose ( partitionKey . getKey ( ) ) ) ; 
 } 
 
 / * 
 @ @ - 880 , 7 + 880 , 7 @ @ public final class SchemaKeyspace 
 
 public static Keyspaces fetchNonSystemKeyspaces ( ) 
 { 
 - return fetchKeyspacesWithout ( Schema . SYSTEM _ KEYSPACE _ NAMES ) ; 
 + return fetchKeyspacesWithout ( Schema . LOCAL _ SYSTEM _ KEYSPACE _ NAMES ) ; 
 } 
 
 private static Keyspaces fetchKeyspacesWithout ( Set < String > excludedKeyspaceNames ) 
 diff - - git a / src / java / org / apache / cassandra / service / ClientState . java b / src / java / org / apache / cassandra / service / ClientState . java 
 index 43002d2 . . 32849bc 100644 
 - - - a / src / java / org / apache / cassandra / service / ClientState . java 
 + + + b / src / java / org / apache / cassandra / service / ClientState . java 
 @ @ - 40 , 7 + 40 , 6 @ @ import org . apache . cassandra . exceptions . InvalidRequestException ; 
 import org . apache . cassandra . exceptions . UnauthorizedException ; 
 import org . apache . cassandra . schema . SchemaKeyspace ; 
 import org . apache . cassandra . thrift . ThriftValidation ; 
 - import org . apache . cassandra . tracing . TraceKeyspace ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 import org . apache . cassandra . utils . JVMStabilityInspector ; 
 import org . apache . cassandra . utils . CassandraVersion ; 
 @ @ - 55 , 8 + 54 , 7 @ @ public class ClientState 
 
 private static final Set < IResource > READABLE _ SYSTEM _ RESOURCES = new HashSet < > ( ) ; 
 private static final Set < IResource > PROTECTED _ AUTH _ RESOURCES = new HashSet < > ( ) ; 
 - private static final Set < String > ALTERABLE _ SYSTEM _ KEYSPACES = new HashSet < > ( ) ; 
 - private static final Set < IResource > DROPPABLE _ SYSTEM _ TABLES = new HashSet < > ( ) ; 
 + private static final Set < IResource > DROPPABLE _ SYSTEM _ AUTH _ TABLES = new HashSet < > ( ) ; 
 static 
 { 
 / / We want these system cfs to be always readable to authenticated users since many tools rely on them 
 @ @ - 73 , 14 + 71 , 10 @ @ public class ClientState 
 PROTECTED _ AUTH _ RESOURCES . addAll ( DatabaseDescriptor . getRoleManager ( ) . protectedResources ( ) ) ; 
 } 
 
 - / / allow users with sufficient privileges to alter KS level options on AUTH _ KS and 
 - / / TRACING _ KS , and also to drop legacy tables ( users , credentials , permissions ) from 
 - / / AUTH _ KS 
 - ALTERABLE _ SYSTEM _ KEYSPACES . add ( AuthKeyspace . NAME ) ; 
 - ALTERABLE _ SYSTEM _ KEYSPACES . add ( TraceKeyspace . NAME ) ; 
 - DROPPABLE _ SYSTEM _ TABLES . add ( DataResource . table ( AuthKeyspace . NAME , PasswordAuthenticator . LEGACY _ CREDENTIALS _ TABLE ) ) ; 
 - DROPPABLE _ SYSTEM _ TABLES . add ( DataResource . table ( AuthKeyspace . NAME , CassandraRoleManager . LEGACY _ USERS _ TABLE ) ) ; 
 - DROPPABLE _ SYSTEM _ TABLES . add ( DataResource . table ( AuthKeyspace . NAME , CassandraAuthorizer . USER _ PERMISSIONS ) ) ; 
 + / / allow users with sufficient privileges to drop legacy tables ( users , credentials , permissions ) from AUTH _ KS 
 + DROPPABLE _ SYSTEM _ AUTH _ TABLES . add ( DataResource . table ( AuthKeyspace . NAME , PasswordAuthenticator . LEGACY _ CREDENTIALS _ TABLE ) ) ; 
 + DROPPABLE _ SYSTEM _ AUTH _ TABLES . add ( DataResource . table ( AuthKeyspace . NAME , CassandraRoleManager . LEGACY _ USERS _ TABLE ) ) ; 
 + DROPPABLE _ SYSTEM _ AUTH _ TABLES . add ( DataResource . table ( AuthKeyspace . NAME , CassandraAuthorizer . USER _ PERMISSIONS ) ) ; 
 } 
 
 / / Current user for the session 
 @ @ - 297 , 15 + 291 , 21 @ @ public class ClientState 
 throws UnauthorizedException , InvalidRequestException 
 { 
 validateKeyspace ( keyspace ) ; 
 + 
 if ( isInternal ) 
 return ; 
 + 
 validateLogin ( ) ; 
 + 
 preventSystemKSSchemaModification ( keyspace , resource , perm ) ; 
 + 
 if ( ( perm = = Permission . SELECT ) & & READABLE _ SYSTEM _ RESOURCES . contains ( resource ) ) 
 return ; 
 + 
 if ( PROTECTED _ AUTH _ RESOURCES . contains ( resource ) ) 
 if ( ( perm = = Permission . CREATE ) | | ( perm = = Permission . ALTER ) | | ( perm = = Permission . DROP ) ) 
 throw new UnauthorizedException ( String . format ( " % s schema is protected " , resource ) ) ; 
 + 
 ensureHasPermission ( perm , resource ) ; 
 } 
 
 @ @ - 353 , 21 + 353 , 25 @ @ public class ClientState 
 
 private void preventSystemKSSchemaModification ( String keyspace , DataResource resource , Permission perm ) throws UnauthorizedException 
 { 
 - / / we only care about schema modification . 
 - if ( ! ( ( perm = = Permission . ALTER ) | | ( perm = = Permission . DROP ) | | ( perm = = Permission . CREATE ) ) ) 
 + / / we only care about DDL statements 
 + if ( perm ! = Permission . ALTER & & perm ! = Permission . DROP & & perm ! = Permission . CREATE ) 
 return ; 
 
 - / / prevent system keyspace modification 
 - if ( Schema . isSystemKeyspace ( keyspace ) ) 
 + / / prevent ALL local system keyspace modification 
 + if ( Schema . isLocalSystemKeyspace ( keyspace ) ) 
 throw new UnauthorizedException ( keyspace + " keyspace is not user - modifiable . " ) ; 
 
 - / / allow users with sufficient privileges to alter KS level options on AUTH _ KS and 
 - / / TRACING _ KS , and also to drop legacy tables ( users , credentials , permissions ) from 
 - / / AUTH _ KS 
 - if ( ALTERABLE _ SYSTEM _ KEYSPACES . contains ( resource . getKeyspace ( ) . toLowerCase ( ) ) 
 - & & ( ( perm = = Permission . ALTER & & ! resource . isKeyspaceLevel ( ) ) 
 - | | ( perm = = Permission . DROP & & ! DROPPABLE _ SYSTEM _ TABLES . contains ( resource ) ) ) ) 
 + if ( Schema . isReplicatedSystemKeyspace ( keyspace ) ) 
 { 
 + / / allow users with sufficient privileges to alter replication params of replicated system keyspaces 
 + if ( perm = = Permission . ALTER & & resource . isKeyspaceLevel ( ) ) 
 + return ; 
 + 
 + / / allow users with sufficient privileges to drop legacy tables in replicated system keyspaces 
 + if ( perm = = Permission . DROP & & DROPPABLE _ SYSTEM _ AUTH _ TABLES . contains ( resource ) ) 
 + return ; 
 + 
 + / / prevent all other modifications of replicated system keyspaces 
 throw new UnauthorizedException ( String . format ( " Cannot % s % s " , perm , resource ) ) ; 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java 
 index 5af2ad0 . . e380a3f 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageProxy . java 
 + + + b / src / java / org / apache / cassandra / service / StorageProxy . java 
 @ @ - 1476 , 7 + 1476 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 private static boolean systemKeyspaceQuery ( List < ? extends ReadCommand > cmds ) 
 { 
 for ( ReadCommand cmd : cmds ) 
 - if ( ! Schema . isSystemKeyspace ( cmd . metadata ( ) . ksName ) ) 
 + if ( ! Schema . isLocalSystemKeyspace ( cmd . metadata ( ) . ksName ) ) 
 return false ; 
 return true ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 743ed24 . . e5a50dd 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 1014 , 6 + 1014 , 16 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 { 
 try 
 { 
 + / * 
 + * We use timestamp of 0 , intentionally , so that varying timestamps wouldn ' t cause schema mismatches on 
 + * newly added nodes . 
 + * 
 + * Having the initial / default timestamp as 0 also allows users to make and persist changes to replication 
 + * of our replicated system keyspaces . 
 + * 
 + * In case that we need to make incompatible changes to those kesypaces / tables , we ' d need to bump the timestamp 
 + * on per - keyspace / per - table basis . So far we ' ve never needed to . 
 + * / 
 MigrationManager . announceNewKeyspace ( ksm , 0 , false ) ; 
 } 
 catch ( AlreadyExistsException e ) 
 @ @ - 2682 , 7 + 2692 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 
 public int forceKeyspaceCleanup ( int jobs , String keyspaceName , String . . . tables ) throws IOException , ExecutionException , InterruptedException 
 { 
 - if ( Schema . isSystemKeyspace ( keyspaceName ) ) 
 + if ( Schema . isLocalSystemKeyspace ( keyspaceName ) ) 
 throw new RuntimeException ( " Cleanup of the system keyspace is neither necessary nor wise " ) ; 
 
 CompactionManager . AllSSTableOpStatus status = CompactionManager . AllSSTableOpStatus . SUCCESSFUL ; 
 @ @ - 2926 , 7 + 2936 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 Map < String , TabularData > snapshotMap = new HashMap < > ( ) ; 
 for ( Keyspace keyspace : Keyspace . all ( ) ) 
 { 
 - if ( Schema . isSystemKeyspace ( keyspace . getName ( ) ) ) 
 + if ( Schema . isLocalSystemKeyspace ( keyspace . getName ( ) ) ) 
 continue ; 
 
 for ( ColumnFamilyStore cfStore : keyspace . getColumnFamilyStores ( ) ) 
 @ @ - 2952 , 7 + 2962 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 long total = 0 ; 
 for ( Keyspace keyspace : Keyspace . all ( ) ) 
 { 
 - if ( Schema . isSystemKeyspace ( keyspace . getName ( ) ) ) 
 + if ( Schema . isLocalSystemKeyspace ( keyspace . getName ( ) ) ) 
 continue ; 
 
 for ( ColumnFamilyStore cfStore : keyspace . getColumnFamilyStores ( ) ) 
 diff - - git a / src / java / org / apache / cassandra / thrift / ThriftValidation . java b / src / java / org / apache / cassandra / thrift / ThriftValidation . java 
 index 5e46459 . . 99aed05 100644 
 - - - a / src / java / org / apache / cassandra / thrift / ThriftValidation . java 
 + + + b / src / java / org / apache / cassandra / thrift / ThriftValidation . java 
 @ @ - 636 , 7 + 636 , 7 @ @ public class ThriftValidation 
 
 public static void validateKeyspaceNotSystem ( String modifiedKeyspace ) throws org . apache . cassandra . exceptions . InvalidRequestException 
 { 
 - if ( Schema . isSystemKeyspace ( modifiedKeyspace ) ) 
 + if ( Schema . isLocalSystemKeyspace ( modifiedKeyspace ) ) 
 throw new org . apache . cassandra . exceptions . InvalidRequestException ( String . format ( " % s keyspace is not user - modifiable " , modifiedKeyspace ) ) ; 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / tools / nodetool / Cleanup . java b / src / java / org / apache / cassandra / tools / nodetool / Cleanup . java 
 index 41e9b01 . . 47c65c8 100644 
 - - - a / src / java / org / apache / cassandra / tools / nodetool / Cleanup . java 
 + + + b / src / java / org / apache / cassandra / tools / nodetool / Cleanup . java 
 @ @ - 47 , 7 + 47 , 7 @ @ public class Cleanup extends NodeToolCmd 
 
 for ( String keyspace : keyspaces ) 
 { 
 - if ( Schema . isSystemKeyspace ( keyspace ) ) 
 + if ( Schema . isLocalSystemKeyspace ( keyspace ) ) 
 continue ; 
 
 try

NEAREST DIFF:
ELIMINATEDSENTENCE
