BLEU SCORE: 0.0208362582256928

TEST MSG: Accept empty selections in ColumnFilter builder
GENERATED MSG: Fix writetime / ttl functions on columns with null values

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 6bdaa04 . . a53a299 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 - rc2 <nl> + * Support empty ColumnFilter for backward compatility on empty IN ( CASSANDRA - 10471 ) <nl> * Remove Pig support ( CASSANDRA - 10542 ) <nl> * Fix LogFile throws Exception when assertion is disabled ( CASSANDRA - 10522 ) <nl> * Revert CASSANDRA - 7486 , make CMS default GC , move GC config to <nl> diff - - git a / src / java / org / apache / cassandra / db / filter / ColumnFilter . java b / src / java / org / apache / cassandra / db / filter / ColumnFilter . java <nl> index 1a4573e . . 62329ab 100644 <nl> - - - a / src / java / org / apache / cassandra / db / filter / ColumnFilter . java <nl> + + + b / src / java / org / apache / cassandra / db / filter / ColumnFilter . java <nl> @ @ - 289 , 7 + 289 , 12 @ @ public class ColumnFilter <nl> public ColumnFilter build ( ) <nl> { <nl> boolean isFetchAll = metadata ! = null ; <nl> - assert isFetchAll | | selection ! = null ; <nl> + <nl> + PartitionColumns selectedColumns = selection = = null ? null : selection . build ( ) ; <nl> + / / It ' s only ok to have selection = = null in ColumnFilter if isFetchAll . So deal with the case of a " selection " builder <nl> + / / with nothing selected ( we can at least happen on some backward compatible queries - CASSANDRA - 10471 ) . <nl> + if ( ! isFetchAll & & selectedColumns = = null ) <nl> + selectedColumns = PartitionColumns . NONE ; <nl> <nl> SortedSetMultimap < ColumnIdentifier , ColumnSubselection > s = null ; <nl> if ( subSelections ! = null ) <nl> @ @ - 299 , 7 + 304 , 7 @ @ public class ColumnFilter <nl> s . put ( subSelection . column ( ) . name , subSelection ) ; <nl> } <nl> <nl> - return new ColumnFilter ( isFetchAll , metadata , selection = = null ? null : selection . build ( ) , s ) ; <nl> + return new ColumnFilter ( isFetchAll , metadata , selectedColumns , s ) ; <nl> } <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cql3 / statements / Selection . java b / src / java / org / apache / cassandra / cql3 / statements / Selection . java <nl> index 6a70130 . . 2f5b948 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / Selection . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / Selection . java <nl> @ @ - 262 , 7 + 262 , 7 @ @ public abstract class Selection <nl> } <nl> } <nl> <nl> - private boolean isDead ( IColumn c ) <nl> + private boolean isDead ( Column c ) <nl> { <nl> return c = = null | | c . isMarkedForDelete ( ) ; <nl> }

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 6bdaa04 . . a53a299 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 - rc2 
 + * Support empty ColumnFilter for backward compatility on empty IN ( CASSANDRA - 10471 ) 
 * Remove Pig support ( CASSANDRA - 10542 ) 
 * Fix LogFile throws Exception when assertion is disabled ( CASSANDRA - 10522 ) 
 * Revert CASSANDRA - 7486 , make CMS default GC , move GC config to 
 diff - - git a / src / java / org / apache / cassandra / db / filter / ColumnFilter . java b / src / java / org / apache / cassandra / db / filter / ColumnFilter . java 
 index 1a4573e . . 62329ab 100644 
 - - - a / src / java / org / apache / cassandra / db / filter / ColumnFilter . java 
 + + + b / src / java / org / apache / cassandra / db / filter / ColumnFilter . java 
 @ @ - 289 , 7 + 289 , 12 @ @ public class ColumnFilter 
 public ColumnFilter build ( ) 
 { 
 boolean isFetchAll = metadata ! = null ; 
 - assert isFetchAll | | selection ! = null ; 
 + 
 + PartitionColumns selectedColumns = selection = = null ? null : selection . build ( ) ; 
 + / / It ' s only ok to have selection = = null in ColumnFilter if isFetchAll . So deal with the case of a " selection " builder 
 + / / with nothing selected ( we can at least happen on some backward compatible queries - CASSANDRA - 10471 ) . 
 + if ( ! isFetchAll & & selectedColumns = = null ) 
 + selectedColumns = PartitionColumns . NONE ; 
 
 SortedSetMultimap < ColumnIdentifier , ColumnSubselection > s = null ; 
 if ( subSelections ! = null ) 
 @ @ - 299 , 7 + 304 , 7 @ @ public class ColumnFilter 
 s . put ( subSelection . column ( ) . name , subSelection ) ; 
 } 
 
 - return new ColumnFilter ( isFetchAll , metadata , selection = = null ? null : selection . build ( ) , s ) ; 
 + return new ColumnFilter ( isFetchAll , metadata , selectedColumns , s ) ; 
 } 
 } 


NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / cql3 / statements / Selection . java b / src / java / org / apache / cassandra / cql3 / statements / Selection . java 
 index 6a70130 . . 2f5b948 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / Selection . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / Selection . java 
 @ @ - 262 , 7 + 262 , 7 @ @ public abstract class Selection 
 } 
 } 
 
 - private boolean isDead ( IColumn c ) 
 + private boolean isDead ( Column c ) 
 { 
 return c = = null | | c . isMarkedForDelete ( ) ; 
 }
