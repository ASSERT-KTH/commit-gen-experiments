BLEU SCORE: 0.018738883683389617

TEST MSG: Better handle missing partition columns in system _ schema . columns
GENERATED MSG: Log warn message until legacy auth tables have been migrated

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 9992802 . . 39edeb1 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 17 <nl> + * Better handle missing partition columns in system _ schema . columns ( CASSANDRA - 14379 ) <nl> * Delay hints store excise by write timeout to avoid race with decommission ( CASSANDRA - 13740 ) <nl> * Deprecate background repair and probablistic read _ repair _ chance table options <nl> ( CASSANDRA - 13910 ) <nl> diff - - git a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> index 578f501 . . 81cc2e1 100644 <nl> - - - a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> + + + b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> @ @ - 25 , 6 + 25 , 7 @ @ import java . util . * ; <nl> import java . util . concurrent . TimeUnit ; <nl> import java . util . stream . Collectors ; <nl> <nl> + import com . google . common . annotations . VisibleForTesting ; <nl> import com . google . common . collect . * ; <nl> import com . google . common . collect . Maps ; <nl> import org . slf4j . Logger ; <nl> @ @ - 960 , 14 + 961 , 24 @ @ public final class SchemaKeyspace <nl> } <nl> catch ( MissingColumns exc ) <nl> { <nl> - if ( ! IGNORE _ CORRUPTED _ SCHEMA _ TABLES ) <nl> + String errorMsg = String . format ( " No partition columns found for table % s . % s in % s . % s . This may be due to " + <nl> + " corruption or concurrent dropping and altering of a table . If this table is supposed " + <nl> + " to be dropped , { } run the following query to cleanup : " + <nl> + " \ " DELETE FROM % s . % s WHERE keyspace _ name = ' % s ' AND table _ name = ' % s ' ; " + <nl> + " DELETE FROM % s . % s WHERE keyspace _ name = ' % s ' AND table _ name = ' % s ' ; \ " " + <nl> + " If the table is not supposed to be dropped , restore % s . % s sstables from backups . " , <nl> + keyspaceName , tableName , NAME , COLUMNS , <nl> + NAME , TABLES , keyspaceName , tableName , <nl> + NAME , COLUMNS , keyspaceName , tableName , <nl> + NAME , COLUMNS ) ; <nl> + <nl> + if ( IGNORE _ CORRUPTED _ SCHEMA _ TABLES ) <nl> { <nl> - logger . error ( " No columns found for table { } . { } in { } . { } . This may be due to " + <nl> - " corruption or concurrent dropping and altering of a table . If this table " + <nl> - " is supposed to be dropped , restart cassandra with - Dcassandra . ignore _ corrupted _ schema _ tables = true " + <nl> - " and run the following query : \ " DELETE FROM { } . { } WHERE keyspace _ name = ' { } ' AND table _ name = ' { } ' ; \ " . " + <nl> - " If the table is not supposed to be dropped , restore { } . { } sstables from backups . " , <nl> - keyspaceName , tableName , NAME , COLUMNS , NAME , TABLES , keyspaceName , tableName , NAME , COLUMNS ) ; <nl> + logger . error ( errorMsg , " " , exc ) ; <nl> + } <nl> + else <nl> + { <nl> + logger . error ( errorMsg , " restart cassandra with - Dcassandra . ignore _ corrupted _ schema _ tables = true and " ) ; <nl> throw exc ; <nl> } <nl> } <nl> @ @ - 1043 , 6 + 1054 , 10 @ @ public final class SchemaKeyspace <nl> <nl> List < ColumnDefinition > columns = new ArrayList < > ( ) ; <nl> columnRows . forEach ( row - > columns . add ( createColumnFromRow ( row , types ) ) ) ; <nl> + <nl> + if ( columns . stream ( ) . noneMatch ( ColumnDefinition : : isPartitionKey ) ) <nl> + throw new MissingColumns ( " No partition key columns found in schema table for " + keyspace + " . " + table ) ; <nl> + <nl> return columns ; <nl> } <nl> <nl> @ @ - 1466 , 7 + 1481 , 8 @ @ public final class SchemaKeyspace <nl> . collect ( toList ( ) ) ; <nl> } <nl> <nl> - private static class MissingColumns extends RuntimeException <nl> + @ VisibleForTesting <nl> + static class MissingColumns extends RuntimeException <nl> { <nl> MissingColumns ( String message ) <nl> { <nl> diff - - git a / test / unit / org / apache / cassandra / schema / SchemaKeyspaceTest . java b / test / unit / org / apache / cassandra / schema / SchemaKeyspaceTest . java <nl> index b2e3535 . . f76fc4f 100644 <nl> - - - a / test / unit / org / apache / cassandra / schema / SchemaKeyspaceTest . java <nl> + + + b / test / unit / org / apache / cassandra / schema / SchemaKeyspaceTest . java <nl> @ @ - 52 , 6 + 52 , 7 @ @ import org . apache . cassandra . thrift . ThriftConversion ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> <nl> + import static org . apache . cassandra . cql3 . QueryProcessor . executeOnceInternal ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> <nl> @ @ - 205 , 4 + 206 , 32 @ @ public class SchemaKeyspaceTest <nl> assertEquals ( cfm . params , params ) ; <nl> assertEquals ( new HashSet < > ( cfm . allColumns ( ) ) , columns ) ; <nl> } <nl> + <nl> + @ Test ( expected = SchemaKeyspace . MissingColumns . class ) <nl> + public void testSchemaNoPartition ( ) <nl> + { <nl> + String testKS = " test _ schema _ no _ partition " ; <nl> + String testTable = " invalid _ table " ; <nl> + SchemaLoader . createKeyspace ( testKS , <nl> + KeyspaceParams . simple ( 1 ) , <nl> + SchemaLoader . standardCFMD ( testKS , testTable ) ) ; <nl> + / / Delete partition column in the schema <nl> + String query = String . format ( " DELETE FROM % s . % s WHERE keyspace _ name = ? and table _ name = ? and column _ name = ? " , SchemaKeyspace . NAME , SchemaKeyspace . COLUMNS ) ; <nl> + executeOnceInternal ( query , testKS , testTable , " key " ) ; <nl> + SchemaKeyspace . fetchNonSystemKeyspaces ( ) ; <nl> + } <nl> + <nl> + @ Test ( expected = SchemaKeyspace . MissingColumns . class ) <nl> + public void testSchemaNoColumn ( ) <nl> + { <nl> + String testKS = " test _ schema _ no _ Column " ; <nl> + String testTable = " invalid _ table " ; <nl> + SchemaLoader . createKeyspace ( testKS , <nl> + KeyspaceParams . simple ( 1 ) , <nl> + SchemaLoader . standardCFMD ( testKS , testTable ) ) ; <nl> + / / Delete all colmns in the schema <nl> + String query = String . format ( " DELETE FROM % s . % s WHERE keyspace _ name = ? and table _ name = ? " , SchemaKeyspace . NAME , SchemaKeyspace . COLUMNS ) ; <nl> + executeOnceInternal ( query , testKS , testTable ) ; <nl> + SchemaKeyspace . fetchNonSystemKeyspaces ( ) ; <nl> + } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 9992802 . . 39edeb1 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 17 
 + * Better handle missing partition columns in system _ schema . columns ( CASSANDRA - 14379 ) 
 * Delay hints store excise by write timeout to avoid race with decommission ( CASSANDRA - 13740 ) 
 * Deprecate background repair and probablistic read _ repair _ chance table options 
 ( CASSANDRA - 13910 ) 
 diff - - git a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 index 578f501 . . 81cc2e1 100644 
 - - - a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 + + + b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 @ @ - 25 , 6 + 25 , 7 @ @ import java . util . * ; 
 import java . util . concurrent . TimeUnit ; 
 import java . util . stream . Collectors ; 
 
 + import com . google . common . annotations . VisibleForTesting ; 
 import com . google . common . collect . * ; 
 import com . google . common . collect . Maps ; 
 import org . slf4j . Logger ; 
 @ @ - 960 , 14 + 961 , 24 @ @ public final class SchemaKeyspace 
 } 
 catch ( MissingColumns exc ) 
 { 
 - if ( ! IGNORE _ CORRUPTED _ SCHEMA _ TABLES ) 
 + String errorMsg = String . format ( " No partition columns found for table % s . % s in % s . % s . This may be due to " + 
 + " corruption or concurrent dropping and altering of a table . If this table is supposed " + 
 + " to be dropped , { } run the following query to cleanup : " + 
 + " \ " DELETE FROM % s . % s WHERE keyspace _ name = ' % s ' AND table _ name = ' % s ' ; " + 
 + " DELETE FROM % s . % s WHERE keyspace _ name = ' % s ' AND table _ name = ' % s ' ; \ " " + 
 + " If the table is not supposed to be dropped , restore % s . % s sstables from backups . " , 
 + keyspaceName , tableName , NAME , COLUMNS , 
 + NAME , TABLES , keyspaceName , tableName , 
 + NAME , COLUMNS , keyspaceName , tableName , 
 + NAME , COLUMNS ) ; 
 + 
 + if ( IGNORE _ CORRUPTED _ SCHEMA _ TABLES ) 
 { 
 - logger . error ( " No columns found for table { } . { } in { } . { } . This may be due to " + 
 - " corruption or concurrent dropping and altering of a table . If this table " + 
 - " is supposed to be dropped , restart cassandra with - Dcassandra . ignore _ corrupted _ schema _ tables = true " + 
 - " and run the following query : \ " DELETE FROM { } . { } WHERE keyspace _ name = ' { } ' AND table _ name = ' { } ' ; \ " . " + 
 - " If the table is not supposed to be dropped , restore { } . { } sstables from backups . " , 
 - keyspaceName , tableName , NAME , COLUMNS , NAME , TABLES , keyspaceName , tableName , NAME , COLUMNS ) ; 
 + logger . error ( errorMsg , " " , exc ) ; 
 + } 
 + else 
 + { 
 + logger . error ( errorMsg , " restart cassandra with - Dcassandra . ignore _ corrupted _ schema _ tables = true and " ) ; 
 throw exc ; 
 } 
 } 
 @ @ - 1043 , 6 + 1054 , 10 @ @ public final class SchemaKeyspace 
 
 List < ColumnDefinition > columns = new ArrayList < > ( ) ; 
 columnRows . forEach ( row - > columns . add ( createColumnFromRow ( row , types ) ) ) ; 
 + 
 + if ( columns . stream ( ) . noneMatch ( ColumnDefinition : : isPartitionKey ) ) 
 + throw new MissingColumns ( " No partition key columns found in schema table for " + keyspace + " . " + table ) ; 
 + 
 return columns ; 
 } 
 
 @ @ - 1466 , 7 + 1481 , 8 @ @ public final class SchemaKeyspace 
 . collect ( toList ( ) ) ; 
 } 
 
 - private static class MissingColumns extends RuntimeException 
 + @ VisibleForTesting 
 + static class MissingColumns extends RuntimeException 
 { 
 MissingColumns ( String message ) 
 { 
 diff - - git a / test / unit / org / apache / cassandra / schema / SchemaKeyspaceTest . java b / test / unit / org / apache / cassandra / schema / SchemaKeyspaceTest . java 
 index b2e3535 . . f76fc4f 100644 
 - - - a / test / unit / org / apache / cassandra / schema / SchemaKeyspaceTest . java 
 + + + b / test / unit / org / apache / cassandra / schema / SchemaKeyspaceTest . java 
 @ @ - 52 , 6 + 52 , 7 @ @ import org . apache . cassandra . thrift . ThriftConversion ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 
 + import static org . apache . cassandra . cql3 . QueryProcessor . executeOnceInternal ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertTrue ; 
 
 @ @ - 205 , 4 + 206 , 32 @ @ public class SchemaKeyspaceTest 
 assertEquals ( cfm . params , params ) ; 
 assertEquals ( new HashSet < > ( cfm . allColumns ( ) ) , columns ) ; 
 } 
 + 
 + @ Test ( expected = SchemaKeyspace . MissingColumns . class ) 
 + public void testSchemaNoPartition ( ) 
 + { 
 + String testKS = " test _ schema _ no _ partition " ; 
 + String testTable = " invalid _ table " ; 
 + SchemaLoader . createKeyspace ( testKS , 
 + KeyspaceParams . simple ( 1 ) , 
 + SchemaLoader . standardCFMD ( testKS , testTable ) ) ; 
 + / / Delete partition column in the schema 
 + String query = String . format ( " DELETE FROM % s . % s WHERE keyspace _ name = ? and table _ name = ? and column _ name = ? " , SchemaKeyspace . NAME , SchemaKeyspace . COLUMNS ) ; 
 + executeOnceInternal ( query , testKS , testTable , " key " ) ; 
 + SchemaKeyspace . fetchNonSystemKeyspaces ( ) ; 
 + } 
 + 
 + @ Test ( expected = SchemaKeyspace . MissingColumns . class ) 
 + public void testSchemaNoColumn ( ) 
 + { 
 + String testKS = " test _ schema _ no _ Column " ; 
 + String testTable = " invalid _ table " ; 
 + SchemaLoader . createKeyspace ( testKS , 
 + KeyspaceParams . simple ( 1 ) , 
 + SchemaLoader . standardCFMD ( testKS , testTable ) ) ; 
 + / / Delete all colmns in the schema 
 + String query = String . format ( " DELETE FROM % s . % s WHERE keyspace _ name = ? and table _ name = ? " , SchemaKeyspace . NAME , SchemaKeyspace . COLUMNS ) ; 
 + executeOnceInternal ( query , testKS , testTable ) ; 
 + SchemaKeyspace . fetchNonSystemKeyspaces ( ) ; 
 + } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
