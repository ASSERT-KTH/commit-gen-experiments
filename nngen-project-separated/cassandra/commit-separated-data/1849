BLEU SCORE: 0.03089055318156698

TEST MSG: Fix memory leak in SSTableSimple * Writer and SSTableReader . validate ( )
GENERATED MSG: re - clone slab - allocated keys in indexsummary

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index d2ecccc . . 096e630 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 0 . 13 : <nl> + * Fix memory leak in SSTableSimple * Writer and SSTableReader . validate ( ) ( CASSANDRA - 8748 ) <nl> * Throw OOM if allocating memory fails to return a valid pointer ( CASSANDRA - 8726 ) <nl> * Fix SSTableSimpleUnsortedWriter ConcurrentModificationException ( CASSANDRA - 8619 ) <nl> * Round up time deltas lower than 1ms in BulkLoader ( CASSANDRA - 8645 ) <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> index 803c7fa . . 15808e8 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> @ @ - 593 , 7 + 593 , 10 @ @ public class SSTableReader extends SSTable implements Closeable <nl> private void validate ( ) <nl> { <nl> if ( this . first . compareTo ( this . last ) > 0 ) <nl> + { <nl> + releaseReference ( ) ; <nl> throw new IllegalStateException ( String . format ( " SSTable first key % s > last key % s " , this . first , this . last ) ) ; <nl> + } <nl> } <nl> <nl> / * * get the position in the index file to start scanning to find the given key ( at most indexInterval keys away ) * / <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableSimpleUnsortedWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableSimpleUnsortedWriter . java <nl> index db03ea1 . . 614ca7d 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableSimpleUnsortedWriter . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableSimpleUnsortedWriter . java <nl> @ @ - 227 , 7 + 227 , 7 @ @ public class SSTableSimpleUnsortedWriter extends AbstractSSTableSimpleWriter <nl> throw new AssertionError ( " Empty partition " ) ; <nl> first = false ; <nl> } <nl> - writer . close ( ) ; <nl> + writer . close ( true ) ; <nl> } <nl> } <nl> catch ( Throwable e ) <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableSimpleWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableSimpleWriter . java <nl> index 9b584f0 . . bef78b3 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableSimpleWriter . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableSimpleWriter . java <nl> @ @ - 72 , 7 + 72 , 7 @ @ public class SSTableSimpleWriter extends AbstractSSTableSimpleWriter <nl> { <nl> if ( currentKey ! = null ) <nl> writeRow ( currentKey , columnFamily ) ; <nl> - writer . close ( ) ; <nl> + writer . close ( true ) ; <nl> } <nl> catch ( FSError e ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> index 08e5527 . . 300b0f3 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> @ @ - 363 , 11 + 363 , 18 @ @ public class SSTableWriter extends SSTable <nl> return sstable ; <nl> } <nl> <nl> - / / Close the writer and return the descriptor to the new sstable and it ' s metadata <nl> public Pair < Descriptor , SSTableMetadata > close ( ) <nl> { <nl> + return close ( false ) ; <nl> + } <nl> + <nl> + / / Close the writer and return the descriptor to the new sstable and it ' s metadata <nl> + public Pair < Descriptor , SSTableMetadata > close ( boolean closeBf ) <nl> + { <nl> / / index and filter <nl> iwriter . close ( ) ; <nl> + if ( closeBf ) <nl> + iwriter . bf . close ( ) ; <nl> / / main data , close will truncate if necessary <nl> dataFile . close ( ) ; <nl> / / write sstable statistics
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 0dae2d4 . . 92b023e 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 70 , 7 + 70 , 7 @ @ <nl> * fix inconsistency of the CLI syntax when { } should be used instead of [ { } ] <nl> ( CASSANDRA - 3119 ) <nl> * rename CQL type names to match expected SQL behavior ( CASSANDRA - 3149 , 3031 ) <nl> - * Arena - based allocation for memtables ( CASSANDRA - 2252 , 3162 ) <nl> + * Arena - based allocation for memtables ( CASSANDRA - 2252 , 3162 , 3163 ) <nl> <nl> <nl> 0 . 8 . 6 <nl> diff - - git a / src / java / org / apache / cassandra / db / MeteredFlusher . java b / src / java / org / apache / cassandra / db / MeteredFlusher . java <nl> index 62f270b . . 3960cd7 100644 <nl> - - - a / src / java / org / apache / cassandra / db / MeteredFlusher . java <nl> + + + b / src / java / org / apache / cassandra / db / MeteredFlusher . java <nl> @ @ - 59 , 7 + 59 , 7 @ @ class MeteredFlusher implements Runnable <nl> / ( 1 + cfs . indexManager . getIndexedColumns ( ) . size ( ) ) ) ; <nl> if ( size > ( DatabaseDescriptor . getTotalMemtableSpaceInMB ( ) * 1048576L - flushingBytes ) / maxInFlight ) <nl> { <nl> - logger . info ( " flushing high - traffic column family { } " , cfs ) ; <nl> + logger . info ( " flushing high - traffic column family { } ( estimated { } bytes ) " , cfs , size ) ; <nl> cfs . forceFlush ( ) ; <nl> } <nl> else <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / IndexSummary . java b / src / java / org / apache / cassandra / io / sstable / IndexSummary . java <nl> index ee354f9 . . c5bacdb 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / IndexSummary . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / IndexSummary . java <nl> @ @ - 56 , 9 + 56 , 9 @ @ public class IndexSummary <nl> return keysWritten % DatabaseDescriptor . getIndexInterval ( ) = = 0 ; <nl> } <nl> <nl> - public void addEntry ( DecoratedKey < ? > decoratedKey , long indexPosition ) <nl> + public void addEntry ( DecoratedKey < ? > key , long indexPosition ) <nl> { <nl> - indexPositions . add ( new KeyPosition ( decoratedKey , indexPosition ) ) ; <nl> + indexPositions . add ( new KeyPosition ( SSTable . getMinimalKey ( key ) , indexPosition ) ) ; <nl> } <nl> <nl> public void maybeAddEntry ( DecoratedKey < ? > decoratedKey , long indexPosition ) <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTable . java b / src / java / org / apache / cassandra / io / sstable / SSTable . java <nl> index bbe8f30 . . 5b7576b 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTable . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTable . java <nl> @ @ - 34 , 6 + 34 , 7 @ @ import org . apache . cassandra . dht . IPartitioner ; <nl> import org . apache . cassandra . io . util . FileUtils ; <nl> import org . apache . cassandra . io . util . RandomAccessReader ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> + import org . apache . cassandra . utils . HeapAllocator ; <nl> import org . apache . cassandra . utils . Pair ; <nl> <nl> / * * <nl> @ @ - 143 , 6 + 144 , 17 @ @ public abstract class SSTable <nl> return true ; <nl> } <nl> <nl> + / * * <nl> + * If the given @ param key occupies only part of a larger buffer , allocate a new buffer that is only <nl> + * as large as necessary . <nl> + * / <nl> + public static DecoratedKey < ? > getMinimalKey ( DecoratedKey < ? > key ) <nl> + { <nl> + return key . key . position ( ) > 0 | | key . key . hasRemaining ( ) <nl> + ? new DecoratedKey ( key . token , HeapAllocator . instance . clone ( key . key ) ) <nl> + : key ; <nl> + } <nl> + <nl> public String getFilename ( ) <nl> { <nl> return descriptor . filenameFor ( COMPONENT _ DATA ) ; <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> index f5082df . . cdd763d 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> @ @ - 127 , 7 + 127 , 7 @ @ public class SSTableReader extends SSTable <nl> assert components . contains ( Component . PRIMARY _ INDEX ) ; <nl> <nl> long start = System . currentTimeMillis ( ) ; <nl> - logger . info ( " Opening " + descriptor ) ; <nl> + logger . info ( " Opening { } ( { } bytes ) " , descriptor , new File ( descriptor . filenameFor ( COMPONENT _ DATA ) ) . length ( ) ) ; <nl> <nl> SSTableMetadata sstableMetadata = components . contains ( Component . STATS ) <nl> ? SSTableMetadata . serializer . deserialize ( descriptor ) <nl> @ @ - 315 , 8 + 315 , 8 @ @ public class SSTableReader extends SSTable <nl> { <nl> FileUtils . closeQuietly ( input ) ; <nl> } <nl> - this . first = left ; <nl> - this . last = right ; <nl> + this . first = getMinimalKey ( left ) ; <nl> + this . last = getMinimalKey ( right ) ; <nl> <nl> / / finalize the state of the reader <nl> ifile = ibuilder . complete ( descriptor . filenameFor ( Component . PRIMARY _ INDEX ) ) ; <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> index c2b72ff . . ff2e2df 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> @ @ - 316 , 8 + 316 , 8 @ @ public class SSTableWriter extends SSTable <nl> iwriter . bf , <nl> maxDataAge , <nl> sstableMetadata ) ; <nl> - sstable . first = this . first ; <nl> - sstable . last = this . last ; <nl> + sstable . first = getMinimalKey ( first ) ; <nl> + sstable . last = getMinimalKey ( last ) ; <nl> iwriter = null ; <nl> dbuilder = null ; <nl> return sstable ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index d2ecccc . . 096e630 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 0 . 13 : 
 + * Fix memory leak in SSTableSimple * Writer and SSTableReader . validate ( ) ( CASSANDRA - 8748 ) 
 * Throw OOM if allocating memory fails to return a valid pointer ( CASSANDRA - 8726 ) 
 * Fix SSTableSimpleUnsortedWriter ConcurrentModificationException ( CASSANDRA - 8619 ) 
 * Round up time deltas lower than 1ms in BulkLoader ( CASSANDRA - 8645 ) 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 index 803c7fa . . 15808e8 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 @ @ - 593 , 7 + 593 , 10 @ @ public class SSTableReader extends SSTable implements Closeable 
 private void validate ( ) 
 { 
 if ( this . first . compareTo ( this . last ) > 0 ) 
 + { 
 + releaseReference ( ) ; 
 throw new IllegalStateException ( String . format ( " SSTable first key % s > last key % s " , this . first , this . last ) ) ; 
 + } 
 } 
 
 / * * get the position in the index file to start scanning to find the given key ( at most indexInterval keys away ) * / 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableSimpleUnsortedWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableSimpleUnsortedWriter . java 
 index db03ea1 . . 614ca7d 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableSimpleUnsortedWriter . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableSimpleUnsortedWriter . java 
 @ @ - 227 , 7 + 227 , 7 @ @ public class SSTableSimpleUnsortedWriter extends AbstractSSTableSimpleWriter 
 throw new AssertionError ( " Empty partition " ) ; 
 first = false ; 
 } 
 - writer . close ( ) ; 
 + writer . close ( true ) ; 
 } 
 } 
 catch ( Throwable e ) 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableSimpleWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableSimpleWriter . java 
 index 9b584f0 . . bef78b3 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableSimpleWriter . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableSimpleWriter . java 
 @ @ - 72 , 7 + 72 , 7 @ @ public class SSTableSimpleWriter extends AbstractSSTableSimpleWriter 
 { 
 if ( currentKey ! = null ) 
 writeRow ( currentKey , columnFamily ) ; 
 - writer . close ( ) ; 
 + writer . close ( true ) ; 
 } 
 catch ( FSError e ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 index 08e5527 . . 300b0f3 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 @ @ - 363 , 11 + 363 , 18 @ @ public class SSTableWriter extends SSTable 
 return sstable ; 
 } 
 
 - / / Close the writer and return the descriptor to the new sstable and it ' s metadata 
 public Pair < Descriptor , SSTableMetadata > close ( ) 
 { 
 + return close ( false ) ; 
 + } 
 + 
 + / / Close the writer and return the descriptor to the new sstable and it ' s metadata 
 + public Pair < Descriptor , SSTableMetadata > close ( boolean closeBf ) 
 + { 
 / / index and filter 
 iwriter . close ( ) ; 
 + if ( closeBf ) 
 + iwriter . bf . close ( ) ; 
 / / main data , close will truncate if necessary 
 dataFile . close ( ) ; 
 / / write sstable statistics

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 0dae2d4 . . 92b023e 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 70 , 7 + 70 , 7 @ @ 
 * fix inconsistency of the CLI syntax when { } should be used instead of [ { } ] 
 ( CASSANDRA - 3119 ) 
 * rename CQL type names to match expected SQL behavior ( CASSANDRA - 3149 , 3031 ) 
 - * Arena - based allocation for memtables ( CASSANDRA - 2252 , 3162 ) 
 + * Arena - based allocation for memtables ( CASSANDRA - 2252 , 3162 , 3163 ) 
 
 
 0 . 8 . 6 
 diff - - git a / src / java / org / apache / cassandra / db / MeteredFlusher . java b / src / java / org / apache / cassandra / db / MeteredFlusher . java 
 index 62f270b . . 3960cd7 100644 
 - - - a / src / java / org / apache / cassandra / db / MeteredFlusher . java 
 + + + b / src / java / org / apache / cassandra / db / MeteredFlusher . java 
 @ @ - 59 , 7 + 59 , 7 @ @ class MeteredFlusher implements Runnable 
 / ( 1 + cfs . indexManager . getIndexedColumns ( ) . size ( ) ) ) ; 
 if ( size > ( DatabaseDescriptor . getTotalMemtableSpaceInMB ( ) * 1048576L - flushingBytes ) / maxInFlight ) 
 { 
 - logger . info ( " flushing high - traffic column family { } " , cfs ) ; 
 + logger . info ( " flushing high - traffic column family { } ( estimated { } bytes ) " , cfs , size ) ; 
 cfs . forceFlush ( ) ; 
 } 
 else 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / IndexSummary . java b / src / java / org / apache / cassandra / io / sstable / IndexSummary . java 
 index ee354f9 . . c5bacdb 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / IndexSummary . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / IndexSummary . java 
 @ @ - 56 , 9 + 56 , 9 @ @ public class IndexSummary 
 return keysWritten % DatabaseDescriptor . getIndexInterval ( ) = = 0 ; 
 } 
 
 - public void addEntry ( DecoratedKey < ? > decoratedKey , long indexPosition ) 
 + public void addEntry ( DecoratedKey < ? > key , long indexPosition ) 
 { 
 - indexPositions . add ( new KeyPosition ( decoratedKey , indexPosition ) ) ; 
 + indexPositions . add ( new KeyPosition ( SSTable . getMinimalKey ( key ) , indexPosition ) ) ; 
 } 
 
 public void maybeAddEntry ( DecoratedKey < ? > decoratedKey , long indexPosition ) 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTable . java b / src / java / org / apache / cassandra / io / sstable / SSTable . java 
 index bbe8f30 . . 5b7576b 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTable . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTable . java 
 @ @ - 34 , 6 + 34 , 7 @ @ import org . apache . cassandra . dht . IPartitioner ; 
 import org . apache . cassandra . io . util . FileUtils ; 
 import org . apache . cassandra . io . util . RandomAccessReader ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 + import org . apache . cassandra . utils . HeapAllocator ; 
 import org . apache . cassandra . utils . Pair ; 
 
 / * * 
 @ @ - 143 , 6 + 144 , 17 @ @ public abstract class SSTable 
 return true ; 
 } 
 
 + / * * 
 + * If the given @ param key occupies only part of a larger buffer , allocate a new buffer that is only 
 + * as large as necessary . 
 + * / 
 + public static DecoratedKey < ? > getMinimalKey ( DecoratedKey < ? > key ) 
 + { 
 + return key . key . position ( ) > 0 | | key . key . hasRemaining ( ) 
 + ? new DecoratedKey ( key . token , HeapAllocator . instance . clone ( key . key ) ) 
 + : key ; 
 + } 
 + 
 public String getFilename ( ) 
 { 
 return descriptor . filenameFor ( COMPONENT _ DATA ) ; 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 index f5082df . . cdd763d 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 @ @ - 127 , 7 + 127 , 7 @ @ public class SSTableReader extends SSTable 
 assert components . contains ( Component . PRIMARY _ INDEX ) ; 
 
 long start = System . currentTimeMillis ( ) ; 
 - logger . info ( " Opening " + descriptor ) ; 
 + logger . info ( " Opening { } ( { } bytes ) " , descriptor , new File ( descriptor . filenameFor ( COMPONENT _ DATA ) ) . length ( ) ) ; 
 
 SSTableMetadata sstableMetadata = components . contains ( Component . STATS ) 
 ? SSTableMetadata . serializer . deserialize ( descriptor ) 
 @ @ - 315 , 8 + 315 , 8 @ @ public class SSTableReader extends SSTable 
 { 
 FileUtils . closeQuietly ( input ) ; 
 } 
 - this . first = left ; 
 - this . last = right ; 
 + this . first = getMinimalKey ( left ) ; 
 + this . last = getMinimalKey ( right ) ; 
 
 / / finalize the state of the reader 
 ifile = ibuilder . complete ( descriptor . filenameFor ( Component . PRIMARY _ INDEX ) ) ; 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 index c2b72ff . . ff2e2df 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 @ @ - 316 , 8 + 316 , 8 @ @ public class SSTableWriter extends SSTable 
 iwriter . bf , 
 maxDataAge , 
 sstableMetadata ) ; 
 - sstable . first = this . first ; 
 - sstable . last = this . last ; 
 + sstable . first = getMinimalKey ( first ) ; 
 + sstable . last = getMinimalKey ( last ) ; 
 iwriter = null ; 
 dbuilder = null ; 
 return sstable ;
