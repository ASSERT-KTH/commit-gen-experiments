BLEU SCORE: 0.017386863385674488

TEST MSG: memtable _ cleanup _ threshold and memtable _ flush _ writers defaults
GENERATED MSG: make CFS . flushWriter _ size configurable . patch by Brandon Williams ; reviewed by jbellis for CASSANDRA - 1099

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index e6ded2a . . b20c465 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 6 @ @ <nl> 2 . 1 . 0 - final <nl> + * Updated memtable _ cleanup _ threshold and memtable _ flush _ writers defaults <nl> + ( CASSANDRA - 7551 ) <nl> * ( Windows ) fix startup when WMI memory query fails ( CASSANDRA - 7505 ) <nl> * Anti - compaction proceeds if any part of the repair failed ( CASANDRA - 7521 ) <nl> * Add missing table name to DROP INDEX responses and notifications ( CASSANDRA - 7539 ) <nl> diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml <nl> index f1e5576 . . 4ce69fe 100644 <nl> - - - a / conf / cassandra . yaml <nl> + + + b / conf / cassandra . yaml <nl> @ @ - 282 , 8 + 282 , 13 @ @ concurrent _ counter _ writes : 32 <nl> # memtable _ total _ space _ in _ mb : 2048 <nl> <nl> # Ratio of occupied non - flushing memtable size to total permitted size <nl> - # that will trigger a flush of the largest memtable . <nl> - memtable _ cleanup _ threshold : 0 . 4 <nl> + # that will trigger a flush of the largest memtable . Lager mct will <nl> + # mean larger flushes and hence less compaction , but also less concurrent <nl> + # flush activity which can make it difficult to keep your disks fed <nl> + # under heavy write load . <nl> + # <nl> + # memtable _ cleanup _ threshold defaults to 1 / ( memtable _ flush _ writers + 1 ) <nl> + # memtable _ cleanup _ threshold : 0 . 11 <nl> <nl> # Specify the way Cassandra allocates and manages memtable memory . <nl> # Options are : <nl> @ @ - 304 , 9 + 309 , 14 @ @ memtable _ allocation _ type : heap _ buffers <nl> <nl> # This sets the amount of memtable flush writer threads . These will <nl> # be blocked by disk io , and each one will hold a memtable in memory <nl> - # while blocked . If your flush directory is backed by SSD , you may <nl> - # want to increase this . <nl> - memtable _ flush _ writers : 2 <nl> + # while blocked . <nl> + # <nl> + # memtable _ flush _ writers defaults to the smaller of ( number of disks , <nl> + # number of cores ) , with a minimum of 2 and a maximum of 8 . <nl> + # <nl> + # If your data directories are backed by SSD , you should increase this <nl> + # to the number of cores . <nl> + # memtable _ flush _ writers : 8 <nl> <nl> # A fixed memory pool size in MB for for SSTable index summaries . If left <nl> # empty , this will default to 5 % of the heap size . If the memory usage of <nl> @ @ - 503 , 6 + 513 , 9 @ @ batch _ size _ warn _ threshold _ in _ kb : 5 <nl> # <nl> # concurrent _ compactors defaults to the smaller of ( number of disks , <nl> # number of cores ) , with a minimum of 2 and a maximum of 8 . <nl> + # <nl> + # If your data directories are backed by SSD , you should increase this <nl> + # to the number of cores . <nl> # concurrent _ compactors : 1 <nl> <nl> # Throttles compaction to the given total throughput across the entire <nl> diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java <nl> index 4d4a95b . . 2438e09 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Config . java <nl> + + + b / src / java / org / apache / cassandra / config / Config . java <nl> @ @ - 90 , 12 + 90 , 10 @ @ public class Config <nl> @ Deprecated <nl> public Integer concurrent _ replicates = null ; <nl> <nl> - / / we don ' t want a lot of contention , but we also don ' t want to starve all other tables <nl> - / / if a big one flushes . OS buffering should be able to minimize contention with 2 threads . <nl> - public int memtable _ flush _ writers = 2 ; <nl> + public Integer memtable _ flush _ writers = null ; <nl> public Integer memtable _ heap _ space _ in _ mb ; <nl> public Integer memtable _ offheap _ space _ in _ mb ; <nl> - public float memtable _ cleanup _ threshold = 0 . 4f ; <nl> + public Double memtable _ cleanup _ threshold = null ; <nl> <nl> public Integer storage _ port = 7000 ; <nl> public Integer ssl _ storage _ port = 7001 ; <nl> diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index 5a2f26f . . 6730cb5 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 483 , 6 + 483 , 12 @ @ public class DatabaseDescriptor <nl> if ( conf . commitlog _ directory . equals ( conf . saved _ caches _ directory ) ) <nl> throw new ConfigurationException ( " saved _ caches _ directory must not be the same as the commitlog _ directory " ) ; <nl> <nl> + if ( conf . memtable _ flush _ writers = = null ) <nl> + conf . memtable _ flush _ writers = Math . min ( 8 , Math . max ( 2 , Math . min ( FBUtilities . getAvailableProcessors ( ) , conf . data _ file _ directories . length ) ) ) ; <nl> + <nl> + if ( conf . memtable _ cleanup _ threshold = = null ) <nl> + conf . memtable _ cleanup _ threshold = 1 . 0 / ( 1 + conf . memtable _ flush _ writers ) ; <nl> + <nl> if ( conf . concurrent _ compactors = = null ) <nl> conf . concurrent _ compactors = Math . min ( 8 , Math . max ( 2 , Math . min ( FBUtilities . getAvailableProcessors ( ) , conf . data _ file _ directories . length ) ) ) ; <nl>
NEAREST DIFF (one line): diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml <nl> index 0c69d35 . . 1c08499 100644 <nl> - - - a / conf / cassandra . yaml <nl> + + + b / conf / cassandra . yaml <nl> @ @ - 51 , 6 + 51 , 13 @ @ disk _ access _ mode : auto <nl> concurrent _ reads : 8 <nl> concurrent _ writes : 32 <nl> <nl> + # This sets the amount of memtable flush writer threads . These will <nl> + # be blocked by disk io , and each one will hold a memtable in memory <nl> + # while blocked . If you have a large heap and many data directories , <nl> + # you can increase this value for better flush performance . <nl> + # By default this will be set to the amount of data directories defined . <nl> + # memtable _ flush _ writers : 1 <nl> + <nl> # Buffer size to use when performing contiguous column slices . <nl> # Increase this to the size of the column slices you typically perform <nl> sliced _ buffer _ size _ in _ kb : 64 <nl> diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java <nl> index 91ade14 . . 53bb62e 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Config . java <nl> + + + b / src / java / org / apache / cassandra / config / Config . java <nl> @ @ - 34 , 6 + 34 , 7 @ @ public class Config { <nl> public Integer concurrent _ reads = 8 ; <nl> public Integer concurrent _ writes = 32 ; <nl> <nl> + public Integer memtable _ flush _ writers = null ; / / will get set to the length of data dirs in DatabaseDescriptor <nl> <nl> public Double flush _ data _ buffer _ size _ in _ mb = new Double ( 32 ) ; <nl> public Double flush _ index _ buffer _ size _ in _ mb = new Double ( 8 ) ; <nl> diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index 84d1213 . . a86d193 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 218 , 7 + 218 , 17 @ @ public class DatabaseDescriptor <nl> { <nl> throw new ConfigurationException ( " concurrent _ writes must be at least 2 " ) ; <nl> } <nl> - <nl> + <nl> + / * Memtable flush writer threads * / <nl> + if ( conf . memtable _ flush _ writers ! = null & & conf . memtable _ flush _ writers < 1 ) <nl> + { <nl> + throw new ConfigurationException ( " memtable _ flush _ writers must be at least 1 " ) ; <nl> + } <nl> + else if ( conf . memtable _ flush _ writers = = null ) <nl> + { <nl> + conf . memtable _ flush _ writers = conf . data _ file _ directories . length ; <nl> + } <nl> + <nl> / * Local IP or hostname to bind services to * / <nl> if ( conf . listen _ address ! = null ) <nl> { <nl> @ @ - 780 , 6 + 790 , 11 @ @ public class DatabaseDescriptor <nl> return conf . concurrent _ writes ; <nl> } <nl> <nl> + public static int getFlushWriters ( ) <nl> + { <nl> + return conf . memtable _ flush _ writers ; <nl> + } <nl> + <nl> public static long getRowWarningThreshold ( ) <nl> { <nl> return conf . row _ warning _ threshold _ in _ mb * 1024 * 1024 ; <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 79b00de . . 44129b3 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 87 , 10 + 87 , 10 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> new NamedThreadFactory ( " FLUSH - SORTER - POOL " ) ) ; <nl> private static ExecutorService flushWriter _ <nl> = new JMXEnabledThreadPoolExecutor ( 1 , <nl> - DatabaseDescriptor . getAllDataFileLocations ( ) . length , <nl> + DatabaseDescriptor . getFlushWriters ( ) , <nl> StageManager . KEEPALIVE , <nl> TimeUnit . SECONDS , <nl> - new LinkedBlockingQueue < Runnable > ( DatabaseDescriptor . getAllDataFileLocations ( ) . length ) , <nl> + new LinkedBlockingQueue < Runnable > ( DatabaseDescriptor . getFlushWriters ( ) ) , <nl> new NamedThreadFactory ( " FLUSH - WRITER - POOL " ) ) ; <nl> private static ExecutorService commitLogUpdater _ = new JMXEnabledThreadPoolExecutor ( " MEMTABLE - POST - FLUSHER " ) ; <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index e6ded2a . . b20c465 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 6 @ @ 
 2 . 1 . 0 - final 
 + * Updated memtable _ cleanup _ threshold and memtable _ flush _ writers defaults 
 + ( CASSANDRA - 7551 ) 
 * ( Windows ) fix startup when WMI memory query fails ( CASSANDRA - 7505 ) 
 * Anti - compaction proceeds if any part of the repair failed ( CASANDRA - 7521 ) 
 * Add missing table name to DROP INDEX responses and notifications ( CASSANDRA - 7539 ) 
 diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml 
 index f1e5576 . . 4ce69fe 100644 
 - - - a / conf / cassandra . yaml 
 + + + b / conf / cassandra . yaml 
 @ @ - 282 , 8 + 282 , 13 @ @ concurrent _ counter _ writes : 32 
 # memtable _ total _ space _ in _ mb : 2048 
 
 # Ratio of occupied non - flushing memtable size to total permitted size 
 - # that will trigger a flush of the largest memtable . 
 - memtable _ cleanup _ threshold : 0 . 4 
 + # that will trigger a flush of the largest memtable . Lager mct will 
 + # mean larger flushes and hence less compaction , but also less concurrent 
 + # flush activity which can make it difficult to keep your disks fed 
 + # under heavy write load . 
 + # 
 + # memtable _ cleanup _ threshold defaults to 1 / ( memtable _ flush _ writers + 1 ) 
 + # memtable _ cleanup _ threshold : 0 . 11 
 
 # Specify the way Cassandra allocates and manages memtable memory . 
 # Options are : 
 @ @ - 304 , 9 + 309 , 14 @ @ memtable _ allocation _ type : heap _ buffers 
 
 # This sets the amount of memtable flush writer threads . These will 
 # be blocked by disk io , and each one will hold a memtable in memory 
 - # while blocked . If your flush directory is backed by SSD , you may 
 - # want to increase this . 
 - memtable _ flush _ writers : 2 
 + # while blocked . 
 + # 
 + # memtable _ flush _ writers defaults to the smaller of ( number of disks , 
 + # number of cores ) , with a minimum of 2 and a maximum of 8 . 
 + # 
 + # If your data directories are backed by SSD , you should increase this 
 + # to the number of cores . 
 + # memtable _ flush _ writers : 8 
 
 # A fixed memory pool size in MB for for SSTable index summaries . If left 
 # empty , this will default to 5 % of the heap size . If the memory usage of 
 @ @ - 503 , 6 + 513 , 9 @ @ batch _ size _ warn _ threshold _ in _ kb : 5 
 # 
 # concurrent _ compactors defaults to the smaller of ( number of disks , 
 # number of cores ) , with a minimum of 2 and a maximum of 8 . 
 + # 
 + # If your data directories are backed by SSD , you should increase this 
 + # to the number of cores . 
 # concurrent _ compactors : 1 
 
 # Throttles compaction to the given total throughput across the entire 
 diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java 
 index 4d4a95b . . 2438e09 100644 
 - - - a / src / java / org / apache / cassandra / config / Config . java 
 + + + b / src / java / org / apache / cassandra / config / Config . java 
 @ @ - 90 , 12 + 90 , 10 @ @ public class Config 
 @ Deprecated 
 public Integer concurrent _ replicates = null ; 
 
 - / / we don ' t want a lot of contention , but we also don ' t want to starve all other tables 
 - / / if a big one flushes . OS buffering should be able to minimize contention with 2 threads . 
 - public int memtable _ flush _ writers = 2 ; 
 + public Integer memtable _ flush _ writers = null ; 
 public Integer memtable _ heap _ space _ in _ mb ; 
 public Integer memtable _ offheap _ space _ in _ mb ; 
 - public float memtable _ cleanup _ threshold = 0 . 4f ; 
 + public Double memtable _ cleanup _ threshold = null ; 
 
 public Integer storage _ port = 7000 ; 
 public Integer ssl _ storage _ port = 7001 ; 
 diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index 5a2f26f . . 6730cb5 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 483 , 6 + 483 , 12 @ @ public class DatabaseDescriptor 
 if ( conf . commitlog _ directory . equals ( conf . saved _ caches _ directory ) ) 
 throw new ConfigurationException ( " saved _ caches _ directory must not be the same as the commitlog _ directory " ) ; 
 
 + if ( conf . memtable _ flush _ writers = = null ) 
 + conf . memtable _ flush _ writers = Math . min ( 8 , Math . max ( 2 , Math . min ( FBUtilities . getAvailableProcessors ( ) , conf . data _ file _ directories . length ) ) ) ; 
 + 
 + if ( conf . memtable _ cleanup _ threshold = = null ) 
 + conf . memtable _ cleanup _ threshold = 1 . 0 / ( 1 + conf . memtable _ flush _ writers ) ; 
 + 
 if ( conf . concurrent _ compactors = = null ) 
 conf . concurrent _ compactors = Math . min ( 8 , Math . max ( 2 , Math . min ( FBUtilities . getAvailableProcessors ( ) , conf . data _ file _ directories . length ) ) ) ; 


NEAREST DIFF:
diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml 
 index 0c69d35 . . 1c08499 100644 
 - - - a / conf / cassandra . yaml 
 + + + b / conf / cassandra . yaml 
 @ @ - 51 , 6 + 51 , 13 @ @ disk _ access _ mode : auto 
 concurrent _ reads : 8 
 concurrent _ writes : 32 
 
 + # This sets the amount of memtable flush writer threads . These will 
 + # be blocked by disk io , and each one will hold a memtable in memory 
 + # while blocked . If you have a large heap and many data directories , 
 + # you can increase this value for better flush performance . 
 + # By default this will be set to the amount of data directories defined . 
 + # memtable _ flush _ writers : 1 
 + 
 # Buffer size to use when performing contiguous column slices . 
 # Increase this to the size of the column slices you typically perform 
 sliced _ buffer _ size _ in _ kb : 64 
 diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java 
 index 91ade14 . . 53bb62e 100644 
 - - - a / src / java / org / apache / cassandra / config / Config . java 
 + + + b / src / java / org / apache / cassandra / config / Config . java 
 @ @ - 34 , 6 + 34 , 7 @ @ public class Config { 
 public Integer concurrent _ reads = 8 ; 
 public Integer concurrent _ writes = 32 ; 
 
 + public Integer memtable _ flush _ writers = null ; / / will get set to the length of data dirs in DatabaseDescriptor 
 
 public Double flush _ data _ buffer _ size _ in _ mb = new Double ( 32 ) ; 
 public Double flush _ index _ buffer _ size _ in _ mb = new Double ( 8 ) ; 
 diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index 84d1213 . . a86d193 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 218 , 7 + 218 , 17 @ @ public class DatabaseDescriptor 
 { 
 throw new ConfigurationException ( " concurrent _ writes must be at least 2 " ) ; 
 } 
 - 
 + 
 + / * Memtable flush writer threads * / 
 + if ( conf . memtable _ flush _ writers ! = null & & conf . memtable _ flush _ writers < 1 ) 
 + { 
 + throw new ConfigurationException ( " memtable _ flush _ writers must be at least 1 " ) ; 
 + } 
 + else if ( conf . memtable _ flush _ writers = = null ) 
 + { 
 + conf . memtable _ flush _ writers = conf . data _ file _ directories . length ; 
 + } 
 + 
 / * Local IP or hostname to bind services to * / 
 if ( conf . listen _ address ! = null ) 
 { 
 @ @ - 780 , 6 + 790 , 11 @ @ public class DatabaseDescriptor 
 return conf . concurrent _ writes ; 
 } 
 
 + public static int getFlushWriters ( ) 
 + { 
 + return conf . memtable _ flush _ writers ; 
 + } 
 + 
 public static long getRowWarningThreshold ( ) 
 { 
 return conf . row _ warning _ threshold _ in _ mb * 1024 * 1024 ; 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 79b00de . . 44129b3 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 87 , 10 + 87 , 10 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 new NamedThreadFactory ( " FLUSH - SORTER - POOL " ) ) ; 
 private static ExecutorService flushWriter _ 
 = new JMXEnabledThreadPoolExecutor ( 1 , 
 - DatabaseDescriptor . getAllDataFileLocations ( ) . length , 
 + DatabaseDescriptor . getFlushWriters ( ) , 
 StageManager . KEEPALIVE , 
 TimeUnit . SECONDS , 
 - new LinkedBlockingQueue < Runnable > ( DatabaseDescriptor . getAllDataFileLocations ( ) . length ) , 
 + new LinkedBlockingQueue < Runnable > ( DatabaseDescriptor . getFlushWriters ( ) ) , 
 new NamedThreadFactory ( " FLUSH - WRITER - POOL " ) ) ; 
 private static ExecutorService commitLogUpdater _ = new JMXEnabledThreadPoolExecutor ( " MEMTABLE - POST - FLUSHER " ) ; 

