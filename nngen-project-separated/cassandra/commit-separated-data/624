BLEU SCORE: 0.0416725164513856

TEST MSG: Fix exceptions with new vnode allocation
GENERATED MSG: Fix wrong rack counting and invalid conditions check for TokenAllocation

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 21eec4b . . d38bf3e 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 10 <nl> + * Fix exceptions with new vnode allocation ( CASSANDRA - 12715 ) <nl> * Unify drain and shutdown processes ( CASSANDRA - 12509 ) <nl> * Fix NPE in ComponentOfSlice . isEQ ( ) ( CASSANDRA - 12706 ) <nl> * Fix failure in LogTransactionTest ( CASSANDRA - 12632 ) <nl> diff - - git a / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java b / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java <nl> index e715ff6 . . 971a120 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java <nl> + + + b / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java <nl> @ @ - 51 , 15 + 51 , 15 @ @ public class TokenAllocation <nl> final InetAddress endpoint , <nl> int numTokens ) <nl> { <nl> - StrategyAdapter strategy = getStrategy ( tokenMetadata , rs , endpoint ) ; <nl> + TokenMetadata tokenMetadataCopy = tokenMetadata . cloneOnlyTokenMap ( ) ; <nl> + StrategyAdapter strategy = getStrategy ( tokenMetadataCopy , rs , endpoint ) ; <nl> Collection < Token > tokens = create ( tokenMetadata , strategy ) . addUnit ( endpoint , numTokens ) ; <nl> tokens = adjustForCrossDatacenterClashes ( tokenMetadata , strategy , tokens ) ; <nl> <nl> if ( logger . isWarnEnabled ( ) ) <nl> { <nl> logger . warn ( " Selected tokens { } " , tokens ) ; <nl> - SummaryStatistics os = replicatedOwnershipStats ( tokenMetadata , rs , endpoint ) ; <nl> - TokenMetadata tokenMetadataCopy = tokenMetadata . cloneOnlyTokenMap ( ) ; <nl> + SummaryStatistics os = replicatedOwnershipStats ( tokenMetadataCopy , rs , endpoint ) ; <nl> tokenMetadataCopy . updateNormalTokens ( tokens , endpoint ) ; <nl> SummaryStatistics ns = replicatedOwnershipStats ( tokenMetadataCopy , rs , endpoint ) ; <nl> logger . warn ( " Replicated node load in datacentre before allocation " + statToString ( os ) ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java <nl> index 8974791 . . 3fbe106 100644 <nl> - - - a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java <nl> + + + b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java <nl> @ @ - 178 , 7 + 178 , 7 @ @ public class BootStrapperTest <nl> String ks = " BootStrapperTestNTSKeyspace " + rackCount + replicas ; <nl> String dc = " 1 " ; <nl> SchemaLoader . createKeyspace ( ks , KeyspaceParams . nts ( dc , replicas , " 15 " , 15 ) , SchemaLoader . standardCFMD ( ks , " Standard1 " ) ) ; <nl> - TokenMetadata tm = new TokenMetadata ( ) ; <nl> + TokenMetadata tm = StorageService . instance . getTokenMetadata ( ) ; <nl> tm . clearUnsafe ( ) ; <nl> for ( int i = 0 ; i < rackCount ; + + i ) <nl> generateFakeEndpoints ( tm , 10 , vn , dc , Integer . toString ( i ) ) ; <nl> @ @ - 222 , 11 + 222 , 11 @ @ public class BootStrapperTest <nl> <nl> private void allocateTokensForNode ( int vn , String ks , TokenMetadata tm , InetAddress addr ) <nl> { <nl> - SummaryStatistics os = TokenAllocation . replicatedOwnershipStats ( tm , Keyspace . open ( ks ) . getReplicationStrategy ( ) , addr ) ; <nl> + SummaryStatistics os = TokenAllocation . replicatedOwnershipStats ( tm . cloneOnlyTokenMap ( ) , Keyspace . open ( ks ) . getReplicationStrategy ( ) , addr ) ; <nl> Collection < Token > tokens = BootStrapper . allocateTokens ( tm , addr , ks , vn ) ; <nl> assertEquals ( vn , tokens . size ( ) ) ; <nl> tm . updateNormalTokens ( tokens , addr ) ; <nl> - SummaryStatistics ns = TokenAllocation . replicatedOwnershipStats ( tm , Keyspace . open ( ks ) . getReplicationStrategy ( ) , addr ) ; <nl> + SummaryStatistics ns = TokenAllocation . replicatedOwnershipStats ( tm . cloneOnlyTokenMap ( ) , Keyspace . open ( ks ) . getReplicationStrategy ( ) , addr ) ; <nl> verifyImprovement ( os , ns ) ; <nl> } <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 21eec4b . . d38bf3e 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 10 
 + * Fix exceptions with new vnode allocation ( CASSANDRA - 12715 ) 
 * Unify drain and shutdown processes ( CASSANDRA - 12509 ) 
 * Fix NPE in ComponentOfSlice . isEQ ( ) ( CASSANDRA - 12706 ) 
 * Fix failure in LogTransactionTest ( CASSANDRA - 12632 ) 
 diff - - git a / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java b / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java 
 index e715ff6 . . 971a120 100644 
 - - - a / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java 
 + + + b / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java 
 @ @ - 51 , 15 + 51 , 15 @ @ public class TokenAllocation 
 final InetAddress endpoint , 
 int numTokens ) 
 { 
 - StrategyAdapter strategy = getStrategy ( tokenMetadata , rs , endpoint ) ; 
 + TokenMetadata tokenMetadataCopy = tokenMetadata . cloneOnlyTokenMap ( ) ; 
 + StrategyAdapter strategy = getStrategy ( tokenMetadataCopy , rs , endpoint ) ; 
 Collection < Token > tokens = create ( tokenMetadata , strategy ) . addUnit ( endpoint , numTokens ) ; 
 tokens = adjustForCrossDatacenterClashes ( tokenMetadata , strategy , tokens ) ; 
 
 if ( logger . isWarnEnabled ( ) ) 
 { 
 logger . warn ( " Selected tokens { } " , tokens ) ; 
 - SummaryStatistics os = replicatedOwnershipStats ( tokenMetadata , rs , endpoint ) ; 
 - TokenMetadata tokenMetadataCopy = tokenMetadata . cloneOnlyTokenMap ( ) ; 
 + SummaryStatistics os = replicatedOwnershipStats ( tokenMetadataCopy , rs , endpoint ) ; 
 tokenMetadataCopy . updateNormalTokens ( tokens , endpoint ) ; 
 SummaryStatistics ns = replicatedOwnershipStats ( tokenMetadataCopy , rs , endpoint ) ; 
 logger . warn ( " Replicated node load in datacentre before allocation " + statToString ( os ) ) ; 
 diff - - git a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java 
 index 8974791 . . 3fbe106 100644 
 - - - a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java 
 + + + b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java 
 @ @ - 178 , 7 + 178 , 7 @ @ public class BootStrapperTest 
 String ks = " BootStrapperTestNTSKeyspace " + rackCount + replicas ; 
 String dc = " 1 " ; 
 SchemaLoader . createKeyspace ( ks , KeyspaceParams . nts ( dc , replicas , " 15 " , 15 ) , SchemaLoader . standardCFMD ( ks , " Standard1 " ) ) ; 
 - TokenMetadata tm = new TokenMetadata ( ) ; 
 + TokenMetadata tm = StorageService . instance . getTokenMetadata ( ) ; 
 tm . clearUnsafe ( ) ; 
 for ( int i = 0 ; i < rackCount ; + + i ) 
 generateFakeEndpoints ( tm , 10 , vn , dc , Integer . toString ( i ) ) ; 
 @ @ - 222 , 11 + 222 , 11 @ @ public class BootStrapperTest 
 
 private void allocateTokensForNode ( int vn , String ks , TokenMetadata tm , InetAddress addr ) 
 { 
 - SummaryStatistics os = TokenAllocation . replicatedOwnershipStats ( tm , Keyspace . open ( ks ) . getReplicationStrategy ( ) , addr ) ; 
 + SummaryStatistics os = TokenAllocation . replicatedOwnershipStats ( tm . cloneOnlyTokenMap ( ) , Keyspace . open ( ks ) . getReplicationStrategy ( ) , addr ) ; 
 Collection < Token > tokens = BootStrapper . allocateTokens ( tm , addr , ks , vn ) ; 
 assertEquals ( vn , tokens . size ( ) ) ; 
 tm . updateNormalTokens ( tokens , addr ) ; 
 - SummaryStatistics ns = TokenAllocation . replicatedOwnershipStats ( tm , Keyspace . open ( ks ) . getReplicationStrategy ( ) , addr ) ; 
 + SummaryStatistics ns = TokenAllocation . replicatedOwnershipStats ( tm . cloneOnlyTokenMap ( ) , Keyspace . open ( ks ) . getReplicationStrategy ( ) , addr ) ; 
 verifyImprovement ( os , ns ) ; 
 } 


NEAREST DIFF:
ELIMINATEDSENTENCE
