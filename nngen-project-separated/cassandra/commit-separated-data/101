BLEU SCORE: 0.056697911109760024

TEST MSG: Revert 4 . 0 GC alg back to CMS
GENERATED MSG: update GC settings in cassandra . bat

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b9fe48b . . 6a45f95 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 4 . 0 <nl> + * Revert 4 . 0 GC alg back to CMS ( CASANDRA - 14636 ) <nl> * Remove hardcoded java11 jvm args in idea workspace files ( CASSANDRA - 14627 ) <nl> * Update netty to 4 . 1 . 128 ( CASSANDRA - 14633 ) <nl> * Add a virtual table to expose thread pools ( CASSANDRA - 14523 ) <nl> diff - - git a / conf / jvm11 - server . options b / conf / jvm11 - server . options <nl> index 08a7f2e . . e6c2571 100644 <nl> - - - a / conf / jvm11 - server . options <nl> + + + b / conf / jvm11 - server . options <nl> @ @ - 11 , 35 + 11 , 34 @ @ <nl> <nl> <nl> # # # CMS Settings <nl> - # - XX : + UseParNewGC <nl> - # - XX : + UseConcMarkSweepGC <nl> - # - XX : + CMSParallelRemarkEnabled <nl> - # - XX : SurvivorRatio = 8 <nl> - # - XX : MaxTenuringThreshold = 1 <nl> - # - XX : CMSInitiatingOccupancyFraction = 75 <nl> - # - XX : + UseCMSInitiatingOccupancyOnly <nl> - # - XX : CMSWaitDuration = 10000 <nl> - # - XX : + CMSParallelInitialMarkEnabled <nl> - # - XX : + CMSEdenChunksRecordAlways <nl> + - XX : + UseConcMarkSweepGC <nl> + - XX : + CMSParallelRemarkEnabled <nl> + - XX : SurvivorRatio = 8 <nl> + - XX : MaxTenuringThreshold = 1 <nl> + - XX : CMSInitiatingOccupancyFraction = 75 <nl> + - XX : + UseCMSInitiatingOccupancyOnly <nl> + - XX : CMSWaitDuration = 10000 <nl> + - XX : + CMSParallelInitialMarkEnabled <nl> + - XX : + CMSEdenChunksRecordAlways <nl> # # some JVMs will fill up their heap when accessed via JMX , see CASSANDRA - 6541 <nl> - # - XX : + CMSClassUnloadingEnabled <nl> + - XX : + CMSClassUnloadingEnabled <nl> <nl> <nl> <nl> # # # G1 Settings <nl> # # Use the Hotspot garbage - first collector . <nl> - - XX : + UseG1GC <nl> - - XX : + ParallelRefProcEnabled <nl> + # - XX : + UseG1GC <nl> + # - XX : + ParallelRefProcEnabled <nl> <nl> # <nl> # # Have the JVM do less remembered set work during STW , instead <nl> # # preferring concurrent GC . Reduces p99 . 9 latency . <nl> - - XX : G1RSetUpdatingPauseTimePercent = 5 <nl> + # - XX : G1RSetUpdatingPauseTimePercent = 5 <nl> # <nl> # # Main G1GC tunable : lowering the pause target will lower throughput and vise versa . <nl> # # 200ms is the JVM default and lowest viable setting <nl> # # 1000ms increases throughput . Keep it smaller than the timeouts in cassandra . yaml . <nl> - - XX : MaxGCPauseMillis = 500 <nl> + # - XX : MaxGCPauseMillis = 500 <nl> <nl> # # Optional G1 Settings <nl> # Save CPU time on large ( > = 16GB ) heaps by delaying region scanning <nl> diff - - git a / conf / jvm8 - server . options b / conf / jvm8 - server . options <nl> index 14d0261 . . 6214669 100644 <nl> - - - a / conf / jvm8 - server . options <nl> + + + b / conf / jvm8 - server . options <nl> @ @ - 18 , 33 + 18 , 33 @ @ <nl> # # # # # # # # # # # # # # # # # <nl> <nl> # # # CMS Settings <nl> - # - XX : + UseParNewGC <nl> - # - XX : + UseConcMarkSweepGC <nl> - # - XX : + CMSParallelRemarkEnabled <nl> - # - XX : SurvivorRatio = 8 <nl> - # - XX : MaxTenuringThreshold = 1 <nl> - # - XX : CMSInitiatingOccupancyFraction = 75 <nl> - # - XX : + UseCMSInitiatingOccupancyOnly <nl> - # - XX : CMSWaitDuration = 10000 <nl> - # - XX : + CMSParallelInitialMarkEnabled <nl> - # - XX : + CMSEdenChunksRecordAlways <nl> + - XX : + UseParNewGC <nl> + - XX : + UseConcMarkSweepGC <nl> + - XX : + CMSParallelRemarkEnabled <nl> + - XX : SurvivorRatio = 8 <nl> + - XX : MaxTenuringThreshold = 1 <nl> + - XX : CMSInitiatingOccupancyFraction = 75 <nl> + - XX : + UseCMSInitiatingOccupancyOnly <nl> + - XX : CMSWaitDuration = 10000 <nl> + - XX : + CMSParallelInitialMarkEnabled <nl> + - XX : + CMSEdenChunksRecordAlways <nl> # # some JVMs will fill up their heap when accessed via JMX , see CASSANDRA - 6541 <nl> - # - XX : + CMSClassUnloadingEnabled <nl> + - XX : + CMSClassUnloadingEnabled <nl> <nl> # # # G1 Settings <nl> # # Use the Hotspot garbage - first collector . <nl> - - XX : + UseG1GC <nl> - - XX : + ParallelRefProcEnabled <nl> + # - XX : + UseG1GC <nl> + # - XX : + ParallelRefProcEnabled <nl> <nl> # <nl> # # Have the JVM do less remembered set work during STW , instead <nl> # # preferring concurrent GC . Reduces p99 . 9 latency . <nl> - - XX : G1RSetUpdatingPauseTimePercent = 5 <nl> + # - XX : G1RSetUpdatingPauseTimePercent = 5 <nl> # <nl> # # Main G1GC tunable : lowering the pause target will lower throughput and vise versa . <nl> # # 200ms is the JVM default and lowest viable setting <nl> # # 1000ms increases throughput . Keep it smaller than the timeouts in cassandra . yaml . <nl> - - XX : MaxGCPauseMillis = 500 <nl> + # - XX : MaxGCPauseMillis = 500 <nl> <nl> # # Optional G1 Settings <nl> # Save CPU time on large ( > = 16GB ) heaps by delaying region scanning
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 1e4de96 . . 7b5cc7c 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 48 , 6 + 48 , 7 @ @ dev <nl> * remove system _ rename _ column _ family and system _ rename _ keyspace from the <nl> client API until races can be fixed ( CASSANDRA - 1630 , CASSANDRA - 1585 ) <nl> * add cli sanity tests ( CASSANDRA - 1582 ) <nl> + * update GC settings in cassandra . bat ( CASSANDRA - 1636 ) <nl> <nl> <nl> 0 . 7 - beta2 <nl> diff - - git a / bin / cassandra . bat b / bin / cassandra . bat <nl> index 250c82c . . e2bf1cd 100644 <nl> - - - a / bin / cassandra . bat <nl> + + + b / bin / cassandra . bat <nl> @ @ - 25 , 18 + 25 , 16 @ @ if NOT DEFINED JAVA _ HOME goto err <nl> REM * * * * * JAVA options * * * * * <nl> set JAVA _ OPTS = ^ <nl> - ea ^ <nl> - - Xdebug ^ <nl> - - Xrunjdwp : transport = dt _ socket , server = y , address = 8888 , suspend = n ^ <nl> - - Xms128m ^ <nl> + - Xms1G ^ <nl> - Xmx1G ^ <nl> - - XX : TargetSurvivorRatio = 90 ^ <nl> - - XX : + AggressiveOpts ^ <nl> + - XX : + HeapDumpOnOutOfMemoryError ^ <nl> - XX : + UseParNewGC ^ <nl> - XX : + UseConcMarkSweepGC ^ <nl> - XX : + CMSParallelRemarkEnabled ^ <nl> - - XX : + HeapDumpOnOutOfMemoryError ^ <nl> - - XX : SurvivorRatio = 128 ^ <nl> - - XX : MaxTenuringThreshold = 0 ^ <nl> + - XX : SurvivorRatio = 8 ^ <nl> + - XX : MaxTenuringThreshold = 1 ^ <nl> + - XX : CMSInitiatingOccupancyFraction = 75 ^ <nl> + - XX : + UseCMSInitiatingOccupancyOnly ^ <nl> - Dcom . sun . management . jmxremote . port = 8080 ^ <nl> - Dcom . sun . management . jmxremote . ssl = false ^ <nl> - Dcom . sun . management . jmxremote . authenticate = false ^

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b9fe48b . . 6a45f95 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 4 . 0 
 + * Revert 4 . 0 GC alg back to CMS ( CASANDRA - 14636 ) 
 * Remove hardcoded java11 jvm args in idea workspace files ( CASSANDRA - 14627 ) 
 * Update netty to 4 . 1 . 128 ( CASSANDRA - 14633 ) 
 * Add a virtual table to expose thread pools ( CASSANDRA - 14523 ) 
 diff - - git a / conf / jvm11 - server . options b / conf / jvm11 - server . options 
 index 08a7f2e . . e6c2571 100644 
 - - - a / conf / jvm11 - server . options 
 + + + b / conf / jvm11 - server . options 
 @ @ - 11 , 35 + 11 , 34 @ @ 
 
 
 # # # CMS Settings 
 - # - XX : + UseParNewGC 
 - # - XX : + UseConcMarkSweepGC 
 - # - XX : + CMSParallelRemarkEnabled 
 - # - XX : SurvivorRatio = 8 
 - # - XX : MaxTenuringThreshold = 1 
 - # - XX : CMSInitiatingOccupancyFraction = 75 
 - # - XX : + UseCMSInitiatingOccupancyOnly 
 - # - XX : CMSWaitDuration = 10000 
 - # - XX : + CMSParallelInitialMarkEnabled 
 - # - XX : + CMSEdenChunksRecordAlways 
 + - XX : + UseConcMarkSweepGC 
 + - XX : + CMSParallelRemarkEnabled 
 + - XX : SurvivorRatio = 8 
 + - XX : MaxTenuringThreshold = 1 
 + - XX : CMSInitiatingOccupancyFraction = 75 
 + - XX : + UseCMSInitiatingOccupancyOnly 
 + - XX : CMSWaitDuration = 10000 
 + - XX : + CMSParallelInitialMarkEnabled 
 + - XX : + CMSEdenChunksRecordAlways 
 # # some JVMs will fill up their heap when accessed via JMX , see CASSANDRA - 6541 
 - # - XX : + CMSClassUnloadingEnabled 
 + - XX : + CMSClassUnloadingEnabled 
 
 
 
 # # # G1 Settings 
 # # Use the Hotspot garbage - first collector . 
 - - XX : + UseG1GC 
 - - XX : + ParallelRefProcEnabled 
 + # - XX : + UseG1GC 
 + # - XX : + ParallelRefProcEnabled 
 
 # 
 # # Have the JVM do less remembered set work during STW , instead 
 # # preferring concurrent GC . Reduces p99 . 9 latency . 
 - - XX : G1RSetUpdatingPauseTimePercent = 5 
 + # - XX : G1RSetUpdatingPauseTimePercent = 5 
 # 
 # # Main G1GC tunable : lowering the pause target will lower throughput and vise versa . 
 # # 200ms is the JVM default and lowest viable setting 
 # # 1000ms increases throughput . Keep it smaller than the timeouts in cassandra . yaml . 
 - - XX : MaxGCPauseMillis = 500 
 + # - XX : MaxGCPauseMillis = 500 
 
 # # Optional G1 Settings 
 # Save CPU time on large ( > = 16GB ) heaps by delaying region scanning 
 diff - - git a / conf / jvm8 - server . options b / conf / jvm8 - server . options 
 index 14d0261 . . 6214669 100644 
 - - - a / conf / jvm8 - server . options 
 + + + b / conf / jvm8 - server . options 
 @ @ - 18 , 33 + 18 , 33 @ @ 
 # # # # # # # # # # # # # # # # # 
 
 # # # CMS Settings 
 - # - XX : + UseParNewGC 
 - # - XX : + UseConcMarkSweepGC 
 - # - XX : + CMSParallelRemarkEnabled 
 - # - XX : SurvivorRatio = 8 
 - # - XX : MaxTenuringThreshold = 1 
 - # - XX : CMSInitiatingOccupancyFraction = 75 
 - # - XX : + UseCMSInitiatingOccupancyOnly 
 - # - XX : CMSWaitDuration = 10000 
 - # - XX : + CMSParallelInitialMarkEnabled 
 - # - XX : + CMSEdenChunksRecordAlways 
 + - XX : + UseParNewGC 
 + - XX : + UseConcMarkSweepGC 
 + - XX : + CMSParallelRemarkEnabled 
 + - XX : SurvivorRatio = 8 
 + - XX : MaxTenuringThreshold = 1 
 + - XX : CMSInitiatingOccupancyFraction = 75 
 + - XX : + UseCMSInitiatingOccupancyOnly 
 + - XX : CMSWaitDuration = 10000 
 + - XX : + CMSParallelInitialMarkEnabled 
 + - XX : + CMSEdenChunksRecordAlways 
 # # some JVMs will fill up their heap when accessed via JMX , see CASSANDRA - 6541 
 - # - XX : + CMSClassUnloadingEnabled 
 + - XX : + CMSClassUnloadingEnabled 
 
 # # # G1 Settings 
 # # Use the Hotspot garbage - first collector . 
 - - XX : + UseG1GC 
 - - XX : + ParallelRefProcEnabled 
 + # - XX : + UseG1GC 
 + # - XX : + ParallelRefProcEnabled 
 
 # 
 # # Have the JVM do less remembered set work during STW , instead 
 # # preferring concurrent GC . Reduces p99 . 9 latency . 
 - - XX : G1RSetUpdatingPauseTimePercent = 5 
 + # - XX : G1RSetUpdatingPauseTimePercent = 5 
 # 
 # # Main G1GC tunable : lowering the pause target will lower throughput and vise versa . 
 # # 200ms is the JVM default and lowest viable setting 
 # # 1000ms increases throughput . Keep it smaller than the timeouts in cassandra . yaml . 
 - - XX : MaxGCPauseMillis = 500 
 + # - XX : MaxGCPauseMillis = 500 
 
 # # Optional G1 Settings 
 # Save CPU time on large ( > = 16GB ) heaps by delaying region scanning

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 1e4de96 . . 7b5cc7c 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 48 , 6 + 48 , 7 @ @ dev 
 * remove system _ rename _ column _ family and system _ rename _ keyspace from the 
 client API until races can be fixed ( CASSANDRA - 1630 , CASSANDRA - 1585 ) 
 * add cli sanity tests ( CASSANDRA - 1582 ) 
 + * update GC settings in cassandra . bat ( CASSANDRA - 1636 ) 
 
 
 0 . 7 - beta2 
 diff - - git a / bin / cassandra . bat b / bin / cassandra . bat 
 index 250c82c . . e2bf1cd 100644 
 - - - a / bin / cassandra . bat 
 + + + b / bin / cassandra . bat 
 @ @ - 25 , 18 + 25 , 16 @ @ if NOT DEFINED JAVA _ HOME goto err 
 REM * * * * * JAVA options * * * * * 
 set JAVA _ OPTS = ^ 
 - ea ^ 
 - - Xdebug ^ 
 - - Xrunjdwp : transport = dt _ socket , server = y , address = 8888 , suspend = n ^ 
 - - Xms128m ^ 
 + - Xms1G ^ 
 - Xmx1G ^ 
 - - XX : TargetSurvivorRatio = 90 ^ 
 - - XX : + AggressiveOpts ^ 
 + - XX : + HeapDumpOnOutOfMemoryError ^ 
 - XX : + UseParNewGC ^ 
 - XX : + UseConcMarkSweepGC ^ 
 - XX : + CMSParallelRemarkEnabled ^ 
 - - XX : + HeapDumpOnOutOfMemoryError ^ 
 - - XX : SurvivorRatio = 128 ^ 
 - - XX : MaxTenuringThreshold = 0 ^ 
 + - XX : SurvivorRatio = 8 ^ 
 + - XX : MaxTenuringThreshold = 1 ^ 
 + - XX : CMSInitiatingOccupancyFraction = 75 ^ 
 + - XX : + UseCMSInitiatingOccupancyOnly ^ 
 - Dcom . sun . management . jmxremote . port = 8080 ^ 
 - Dcom . sun . management . jmxremote . ssl = false ^ 
 - Dcom . sun . management . jmxremote . authenticate = false ^
