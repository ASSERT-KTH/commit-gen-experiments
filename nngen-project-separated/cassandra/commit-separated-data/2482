BLEU SCORE: 0.040583489434387374

TEST MSG: Fix potential NumberFormatException when deserializing IntegerType
GENERATED MSG: replace valueOf with parse

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 0acf740 . . a6cbc18 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 4 , 6 + 4 , 7 @ @ <nl> * return all cpu values from BackgroundActivityMonitor . readAndCompute ( CASSANDRA - 7183 ) <nl> * fix c * launch issues on Russian os ' s due to output of linux ' free ' cmd ( CASSANDRA - 6162 ) <nl> * Fix disabling autocompaction ( CASSANDRA - 7187 ) <nl> + * Fix potential NumberFormatException when deserializing IntegerType ( CASSANDRA - 7088 ) <nl> <nl> 2 . 0 . 8 <nl> * Correctly delete scheduled range xfers ( CASSANDRA - 7143 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / marshal / AbstractType . java b / src / java / org / apache / cassandra / db / marshal / AbstractType . java <nl> index ffba918 . . a38733c 100644 <nl> - - - a / src / java / org / apache / cassandra / db / marshal / AbstractType . java <nl> + + + b / src / java / org / apache / cassandra / db / marshal / AbstractType . java <nl> @ @ - 153 , 8 + 153 , 7 @ @ public abstract class AbstractType < T > implements Comparator < ByteBuffer > <nl> TypeSerializer < T > serializer = getSerializer ( ) ; <nl> serializer . validate ( bytes ) ; <nl> <nl> - T value = serializer . deserialize ( bytes ) ; <nl> - return value = = null ? " null " : serializer . toString ( value ) ; <nl> + return serializer . toString ( serializer . deserialize ( bytes ) ) ; <nl> } <nl> <nl> / * * get a byte representation of the given string . * / <nl> diff - - git a / src / java / org / apache / cassandra / serializers / InetAddressSerializer . java b / src / java / org / apache / cassandra / serializers / InetAddressSerializer . java <nl> index f5406f2 . . 3014753 100644 <nl> - - - a / src / java / org / apache / cassandra / serializers / InetAddressSerializer . java <nl> + + + b / src / java / org / apache / cassandra / serializers / InetAddressSerializer . java <nl> @ @ - 65 , 7 + 65 , 7 @ @ public class InetAddressSerializer implements TypeSerializer < InetAddress > <nl> <nl> public String toString ( InetAddress value ) <nl> { <nl> - return value . getHostAddress ( ) ; <nl> + return value = = null ? " " : value . getHostAddress ( ) ; <nl> } <nl> <nl> public Class < InetAddress > getType ( ) <nl> diff - - git a / src / java / org / apache / cassandra / serializers / IntegerSerializer . java b / src / java / org / apache / cassandra / serializers / IntegerSerializer . java <nl> index b028cd4 . . 9d9505d 100644 <nl> - - - a / src / java / org / apache / cassandra / serializers / IntegerSerializer . java <nl> + + + b / src / java / org / apache / cassandra / serializers / IntegerSerializer . java <nl> @ @ - 29 , 12 + 29 , 12 @ @ public class IntegerSerializer implements TypeSerializer < BigInteger > <nl> <nl> public BigInteger deserialize ( ByteBuffer bytes ) <nl> { <nl> - return new BigInteger ( ByteBufferUtil . getArray ( bytes ) ) ; <nl> + return bytes . hasRemaining ( ) ? new BigInteger ( ByteBufferUtil . getArray ( bytes ) ) : null ; <nl> } <nl> <nl> public ByteBuffer serialize ( BigInteger value ) <nl> { <nl> - return ByteBuffer . wrap ( value . toByteArray ( ) ) ; <nl> + return value = = null ? ByteBufferUtil . EMPTY _ BYTE _ BUFFER : ByteBuffer . wrap ( value . toByteArray ( ) ) ; <nl> } <nl> <nl> public void validate ( ByteBuffer bytes ) throws MarshalException <nl> @ @ - 44 , 7 + 44 , 7 @ @ public class IntegerSerializer implements TypeSerializer < BigInteger > <nl> <nl> public String toString ( BigInteger value ) <nl> { <nl> - return value . toString ( 10 ) ; <nl> + return value = = null ? " " : value . toString ( 10 ) ; <nl> } <nl> <nl> public Class < BigInteger > getType ( ) <nl> diff - - git a / src / java / org / apache / cassandra / serializers / LongSerializer . java b / src / java / org / apache / cassandra / serializers / LongSerializer . java <nl> index 277c395 . . e5ab43a 100644 <nl> - - - a / src / java / org / apache / cassandra / serializers / LongSerializer . java <nl> + + + b / src / java / org / apache / cassandra / serializers / LongSerializer . java <nl> @ @ - 44 , 7 + 44 , 7 @ @ public class LongSerializer implements TypeSerializer < Long > <nl> <nl> public String toString ( Long value ) <nl> { <nl> - return String . valueOf ( value ) ; <nl> + return value = = null ? " " : String . valueOf ( value ) ; <nl> } <nl> <nl> public Class < Long > getType ( ) <nl> diff - - git a / src / java / org / apache / cassandra / serializers / TimestampSerializer . java b / src / java / org / apache / cassandra / serializers / TimestampSerializer . java <nl> index 6203427 . . f2a40f1 100644 <nl> - - - a / src / java / org / apache / cassandra / serializers / TimestampSerializer . java <nl> + + + b / src / java / org / apache / cassandra / serializers / TimestampSerializer . java <nl> @ @ - 72 , 7 + 72 , 7 @ @ public class TimestampSerializer implements TypeSerializer < Date > <nl> <nl> public String toString ( Date value ) <nl> { <nl> - return FORMATTER . get ( ) . format ( value ) ; <nl> + return value = = null ? " " : FORMATTER . get ( ) . format ( value ) ; <nl> } <nl> <nl> public Class < Date > getType ( ) <nl> diff - - git a / src / java / org / apache / cassandra / serializers / UUIDSerializer . java b / src / java / org / apache / cassandra / serializers / UUIDSerializer . java <nl> index 0e64fca . . f8e2582 100644 <nl> - - - a / src / java / org / apache / cassandra / serializers / UUIDSerializer . java <nl> + + + b / src / java / org / apache / cassandra / serializers / UUIDSerializer . java <nl> @ @ - 46 , 7 + 46 , 7 @ @ public class UUIDSerializer implements TypeSerializer < UUID > <nl> <nl> public String toString ( UUID value ) <nl> { <nl> - return value . toString ( ) ; <nl> + return value = = null ? " " : value . toString ( ) ; <nl> } <nl> <nl> public Class < UUID > getType ( )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java <nl> index 5501c3d . . bf59f39 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliClient . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliClient . java <nl> @ @ - 528 , 7 + 528 , 7 @ @ public class CliClient extends CliUserHelp <nl> if ( statement . getChildCount ( ) = = 3 ) <nl> { <nl> Tree limitNode = statement . getChild ( 2 ) ; <nl> - int limitValue = Integer . valueOf ( limitNode . getChild ( 0 ) . getText ( ) ) ; <nl> + int limitValue = Integer . parseInt ( limitNode . getChild ( 0 ) . getText ( ) ) ; <nl> <nl> if ( limitValue = = 0 ) <nl> { <nl> @ @ - 624 , 7 + 624 , 7 @ @ public class CliClient extends CliUserHelp <nl> <nl> try <nl> { <nl> - columnToInsert . setTtl ( Integer . valueOf ( ttl ) ) ; <nl> + columnToInsert . setTtl ( Integer . parseInt ( ttl ) ) ; <nl> } <nl> catch ( NumberFormatException e ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / db / marshal / LongType . java b / src / java / org / apache / cassandra / db / marshal / LongType . java <nl> index 43f9f91 . . 1f2805f 100644 <nl> - - - a / src / java / org / apache / cassandra / db / marshal / LongType . java <nl> + + + b / src / java / org / apache / cassandra / db / marshal / LongType . java <nl> @ @ - 72 , 7 + 72 , 7 @ @ public class LongType extends AbstractType <nl> <nl> try <nl> { <nl> - longType = Long . valueOf ( source ) ; <nl> + longType = Long . parseLong ( source ) ; <nl> } <nl> catch ( Exception e ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / ConfigHelper . java b / src / java / org / apache / cassandra / hadoop / ConfigHelper . java <nl> index f151f27 . . 25f6feb 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / ConfigHelper . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / ConfigHelper . java <nl> @ @ - 232 , 7 + 232 , 7 @ @ public class ConfigHelper <nl> <nl> public static int getRpcPort ( Configuration conf ) <nl> { <nl> - return Integer . valueOf ( conf . get ( THRIFT _ PORT ) ) ; <nl> + return Integer . parseInt ( conf . get ( THRIFT _ PORT ) ) ; <nl> } <nl> <nl> public static void setRpcPort ( Configuration conf , String port ) <nl> diff - - git a / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java b / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java <nl> index f345cd4 . . 372c298 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java <nl> + + + b / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java <nl> @ @ - 65 , 7 + 65 , 7 @ @ public class NetworkTopologyStrategy extends AbstractReplicationStrategy <nl> if ( configOptions ! = null ) <nl> { <nl> for ( Entry entry : configOptions . entrySet ( ) ) <nl> - newDatacenters . put ( ( String ) entry . getKey ( ) , Integer . parseInt ( ( String ) entry . getValue ( ) ) ) ; <nl> + newDatacenters . put ( ( String ) entry . getKey ( ) , Integer . valueOf ( ( String ) entry . getValue ( ) ) ) ; <nl> } <nl> <nl> datacenters = Collections . unmodifiableMap ( newDatacenters ) ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageLoadBalancer . java b / src / java / org / apache / cassandra / service / StorageLoadBalancer . java <nl> index 47a5e73 . . b4ac62d 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageLoadBalancer . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageLoadBalancer . java <nl> @ @ - 184 , 7 + 184 , 7 @ @ public class StorageLoadBalancer implements IEndpointStateChangeSubscriber <nl> { <nl> if ( state ! = ApplicationState . LOAD ) <nl> return ; <nl> - loadInfo _ . put ( endpoint , Double . parseDouble ( value . value ) ) ; <nl> + loadInfo _ . put ( endpoint , Double . valueOf ( value . value ) ) ; <nl> <nl> / * <nl> / / clone load information to perform calculations <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 9ff5eab . . 7058bfd 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 369 , 7 + 369 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> logger _ . warn ( " Unable to start GCInspector ( currently only supported on the Sun JVM ) " ) ; <nl> } <nl> <nl> - if ( Boolean . valueOf ( System . getProperty ( " cassandra . load _ ring _ state " , " true " ) ) ) <nl> + if ( Boolean . parseBoolean ( System . getProperty ( " cassandra . load _ ring _ state " , " true " ) ) ) <nl> { <nl> logger _ . info ( " Loading persisted ring state " ) ; <nl> for ( Map . Entry < Token , InetAddress > entry : SystemTable . loadTokens ( ) . entrySet ( ) ) <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> index edd432b . . 3191971 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> @ @ - 561 , 7 + 561 , 7 @ @ public class NodeCmd { <nl> <nl> case SETCACHECAPACITY : <nl> if ( arguments . length ! = 5 ) { badUse ( " setcachecapacity requires ks , cf , keycachecap , and rowcachecap args . " ) ; } <nl> - probe . setCacheCapacities ( arguments [ 1 ] , arguments [ 2 ] , Integer . valueOf ( arguments [ 3 ] ) , Integer . valueOf ( arguments [ 4 ] ) ) ; <nl> + probe . setCacheCapacities ( arguments [ 1 ] , arguments [ 2 ] , Integer . parseInt ( arguments [ 3 ] ) , Integer . parseInt ( arguments [ 4 ] ) ) ; <nl> break ; <nl> <nl> case SETCOMPACTIONTHRESHOLD : <nl> diff - - git a / src / java / org / apache / cassandra / utils / FBUtilities . java b / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> index 0b31067 . . be2bc73 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> + + + b / src / java / org / apache / cassandra / utils / FBUtilities . java <nl> @ @ - 76 , 11 + 76 , 11 @ @ public class FBUtilities <nl> { <nl> if ( value . endsWith ( " % " ) ) <nl> { <nl> - return Double . valueOf ( value . substring ( 0 , value . length ( ) - 1 ) ) / 100 ; <nl> + return Double . parseDouble ( value . substring ( 0 , value . length ( ) - 1 ) ) / 100 ; <nl> } <nl> else <nl> { <nl> - return Double . valueOf ( value ) ; <nl> + return Double . parseDouble ( value ) ; <nl> } <nl> } <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 0acf740 . . a6cbc18 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 4 , 6 + 4 , 7 @ @ 
 * return all cpu values from BackgroundActivityMonitor . readAndCompute ( CASSANDRA - 7183 ) 
 * fix c * launch issues on Russian os ' s due to output of linux ' free ' cmd ( CASSANDRA - 6162 ) 
 * Fix disabling autocompaction ( CASSANDRA - 7187 ) 
 + * Fix potential NumberFormatException when deserializing IntegerType ( CASSANDRA - 7088 ) 
 
 2 . 0 . 8 
 * Correctly delete scheduled range xfers ( CASSANDRA - 7143 ) 
 diff - - git a / src / java / org / apache / cassandra / db / marshal / AbstractType . java b / src / java / org / apache / cassandra / db / marshal / AbstractType . java 
 index ffba918 . . a38733c 100644 
 - - - a / src / java / org / apache / cassandra / db / marshal / AbstractType . java 
 + + + b / src / java / org / apache / cassandra / db / marshal / AbstractType . java 
 @ @ - 153 , 8 + 153 , 7 @ @ public abstract class AbstractType < T > implements Comparator < ByteBuffer > 
 TypeSerializer < T > serializer = getSerializer ( ) ; 
 serializer . validate ( bytes ) ; 
 
 - T value = serializer . deserialize ( bytes ) ; 
 - return value = = null ? " null " : serializer . toString ( value ) ; 
 + return serializer . toString ( serializer . deserialize ( bytes ) ) ; 
 } 
 
 / * * get a byte representation of the given string . * / 
 diff - - git a / src / java / org / apache / cassandra / serializers / InetAddressSerializer . java b / src / java / org / apache / cassandra / serializers / InetAddressSerializer . java 
 index f5406f2 . . 3014753 100644 
 - - - a / src / java / org / apache / cassandra / serializers / InetAddressSerializer . java 
 + + + b / src / java / org / apache / cassandra / serializers / InetAddressSerializer . java 
 @ @ - 65 , 7 + 65 , 7 @ @ public class InetAddressSerializer implements TypeSerializer < InetAddress > 
 
 public String toString ( InetAddress value ) 
 { 
 - return value . getHostAddress ( ) ; 
 + return value = = null ? " " : value . getHostAddress ( ) ; 
 } 
 
 public Class < InetAddress > getType ( ) 
 diff - - git a / src / java / org / apache / cassandra / serializers / IntegerSerializer . java b / src / java / org / apache / cassandra / serializers / IntegerSerializer . java 
 index b028cd4 . . 9d9505d 100644 
 - - - a / src / java / org / apache / cassandra / serializers / IntegerSerializer . java 
 + + + b / src / java / org / apache / cassandra / serializers / IntegerSerializer . java 
 @ @ - 29 , 12 + 29 , 12 @ @ public class IntegerSerializer implements TypeSerializer < BigInteger > 
 
 public BigInteger deserialize ( ByteBuffer bytes ) 
 { 
 - return new BigInteger ( ByteBufferUtil . getArray ( bytes ) ) ; 
 + return bytes . hasRemaining ( ) ? new BigInteger ( ByteBufferUtil . getArray ( bytes ) ) : null ; 
 } 
 
 public ByteBuffer serialize ( BigInteger value ) 
 { 
 - return ByteBuffer . wrap ( value . toByteArray ( ) ) ; 
 + return value = = null ? ByteBufferUtil . EMPTY _ BYTE _ BUFFER : ByteBuffer . wrap ( value . toByteArray ( ) ) ; 
 } 
 
 public void validate ( ByteBuffer bytes ) throws MarshalException 
 @ @ - 44 , 7 + 44 , 7 @ @ public class IntegerSerializer implements TypeSerializer < BigInteger > 
 
 public String toString ( BigInteger value ) 
 { 
 - return value . toString ( 10 ) ; 
 + return value = = null ? " " : value . toString ( 10 ) ; 
 } 
 
 public Class < BigInteger > getType ( ) 
 diff - - git a / src / java / org / apache / cassandra / serializers / LongSerializer . java b / src / java / org / apache / cassandra / serializers / LongSerializer . java 
 index 277c395 . . e5ab43a 100644 
 - - - a / src / java / org / apache / cassandra / serializers / LongSerializer . java 
 + + + b / src / java / org / apache / cassandra / serializers / LongSerializer . java 
 @ @ - 44 , 7 + 44 , 7 @ @ public class LongSerializer implements TypeSerializer < Long > 
 
 public String toString ( Long value ) 
 { 
 - return String . valueOf ( value ) ; 
 + return value = = null ? " " : String . valueOf ( value ) ; 
 } 
 
 public Class < Long > getType ( ) 
 diff - - git a / src / java / org / apache / cassandra / serializers / TimestampSerializer . java b / src / java / org / apache / cassandra / serializers / TimestampSerializer . java 
 index 6203427 . . f2a40f1 100644 
 - - - a / src / java / org / apache / cassandra / serializers / TimestampSerializer . java 
 + + + b / src / java / org / apache / cassandra / serializers / TimestampSerializer . java 
 @ @ - 72 , 7 + 72 , 7 @ @ public class TimestampSerializer implements TypeSerializer < Date > 
 
 public String toString ( Date value ) 
 { 
 - return FORMATTER . get ( ) . format ( value ) ; 
 + return value = = null ? " " : FORMATTER . get ( ) . format ( value ) ; 
 } 
 
 public Class < Date > getType ( ) 
 diff - - git a / src / java / org / apache / cassandra / serializers / UUIDSerializer . java b / src / java / org / apache / cassandra / serializers / UUIDSerializer . java 
 index 0e64fca . . f8e2582 100644 
 - - - a / src / java / org / apache / cassandra / serializers / UUIDSerializer . java 
 + + + b / src / java / org / apache / cassandra / serializers / UUIDSerializer . java 
 @ @ - 46 , 7 + 46 , 7 @ @ public class UUIDSerializer implements TypeSerializer < UUID > 
 
 public String toString ( UUID value ) 
 { 
 - return value . toString ( ) ; 
 + return value = = null ? " " : value . toString ( ) ; 
 } 
 
 public Class < UUID > getType ( )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java 
 index 5501c3d . . bf59f39 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliClient . java 
 + + + b / src / java / org / apache / cassandra / cli / CliClient . java 
 @ @ - 528 , 7 + 528 , 7 @ @ public class CliClient extends CliUserHelp 
 if ( statement . getChildCount ( ) = = 3 ) 
 { 
 Tree limitNode = statement . getChild ( 2 ) ; 
 - int limitValue = Integer . valueOf ( limitNode . getChild ( 0 ) . getText ( ) ) ; 
 + int limitValue = Integer . parseInt ( limitNode . getChild ( 0 ) . getText ( ) ) ; 
 
 if ( limitValue = = 0 ) 
 { 
 @ @ - 624 , 7 + 624 , 7 @ @ public class CliClient extends CliUserHelp 
 
 try 
 { 
 - columnToInsert . setTtl ( Integer . valueOf ( ttl ) ) ; 
 + columnToInsert . setTtl ( Integer . parseInt ( ttl ) ) ; 
 } 
 catch ( NumberFormatException e ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / db / marshal / LongType . java b / src / java / org / apache / cassandra / db / marshal / LongType . java 
 index 43f9f91 . . 1f2805f 100644 
 - - - a / src / java / org / apache / cassandra / db / marshal / LongType . java 
 + + + b / src / java / org / apache / cassandra / db / marshal / LongType . java 
 @ @ - 72 , 7 + 72 , 7 @ @ public class LongType extends AbstractType 
 
 try 
 { 
 - longType = Long . valueOf ( source ) ; 
 + longType = Long . parseLong ( source ) ; 
 } 
 catch ( Exception e ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / hadoop / ConfigHelper . java b / src / java / org / apache / cassandra / hadoop / ConfigHelper . java 
 index f151f27 . . 25f6feb 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / ConfigHelper . java 
 + + + b / src / java / org / apache / cassandra / hadoop / ConfigHelper . java 
 @ @ - 232 , 7 + 232 , 7 @ @ public class ConfigHelper 
 
 public static int getRpcPort ( Configuration conf ) 
 { 
 - return Integer . valueOf ( conf . get ( THRIFT _ PORT ) ) ; 
 + return Integer . parseInt ( conf . get ( THRIFT _ PORT ) ) ; 
 } 
 
 public static void setRpcPort ( Configuration conf , String port ) 
 diff - - git a / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java b / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java 
 index f345cd4 . . 372c298 100644 
 - - - a / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java 
 + + + b / src / java / org / apache / cassandra / locator / NetworkTopologyStrategy . java 
 @ @ - 65 , 7 + 65 , 7 @ @ public class NetworkTopologyStrategy extends AbstractReplicationStrategy 
 if ( configOptions ! = null ) 
 { 
 for ( Entry entry : configOptions . entrySet ( ) ) 
 - newDatacenters . put ( ( String ) entry . getKey ( ) , Integer . parseInt ( ( String ) entry . getValue ( ) ) ) ; 
 + newDatacenters . put ( ( String ) entry . getKey ( ) , Integer . valueOf ( ( String ) entry . getValue ( ) ) ) ; 
 } 
 
 datacenters = Collections . unmodifiableMap ( newDatacenters ) ; 
 diff - - git a / src / java / org / apache / cassandra / service / StorageLoadBalancer . java b / src / java / org / apache / cassandra / service / StorageLoadBalancer . java 
 index 47a5e73 . . b4ac62d 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageLoadBalancer . java 
 + + + b / src / java / org / apache / cassandra / service / StorageLoadBalancer . java 
 @ @ - 184 , 7 + 184 , 7 @ @ public class StorageLoadBalancer implements IEndpointStateChangeSubscriber 
 { 
 if ( state ! = ApplicationState . LOAD ) 
 return ; 
 - loadInfo _ . put ( endpoint , Double . parseDouble ( value . value ) ) ; 
 + loadInfo _ . put ( endpoint , Double . valueOf ( value . value ) ) ; 
 
 / * 
 / / clone load information to perform calculations 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 9ff5eab . . 7058bfd 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 369 , 7 + 369 , 7 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 logger _ . warn ( " Unable to start GCInspector ( currently only supported on the Sun JVM ) " ) ; 
 } 
 
 - if ( Boolean . valueOf ( System . getProperty ( " cassandra . load _ ring _ state " , " true " ) ) ) 
 + if ( Boolean . parseBoolean ( System . getProperty ( " cassandra . load _ ring _ state " , " true " ) ) ) 
 { 
 logger _ . info ( " Loading persisted ring state " ) ; 
 for ( Map . Entry < Token , InetAddress > entry : SystemTable . loadTokens ( ) . entrySet ( ) ) 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 index edd432b . . 3191971 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 @ @ - 561 , 7 + 561 , 7 @ @ public class NodeCmd { 
 
 case SETCACHECAPACITY : 
 if ( arguments . length ! = 5 ) { badUse ( " setcachecapacity requires ks , cf , keycachecap , and rowcachecap args . " ) ; } 
 - probe . setCacheCapacities ( arguments [ 1 ] , arguments [ 2 ] , Integer . valueOf ( arguments [ 3 ] ) , Integer . valueOf ( arguments [ 4 ] ) ) ; 
 + probe . setCacheCapacities ( arguments [ 1 ] , arguments [ 2 ] , Integer . parseInt ( arguments [ 3 ] ) , Integer . parseInt ( arguments [ 4 ] ) ) ; 
 break ; 
 
 case SETCOMPACTIONTHRESHOLD : 
 diff - - git a / src / java / org / apache / cassandra / utils / FBUtilities . java b / src / java / org / apache / cassandra / utils / FBUtilities . java 
 index 0b31067 . . be2bc73 100644 
 - - - a / src / java / org / apache / cassandra / utils / FBUtilities . java 
 + + + b / src / java / org / apache / cassandra / utils / FBUtilities . java 
 @ @ - 76 , 11 + 76 , 11 @ @ public class FBUtilities 
 { 
 if ( value . endsWith ( " % " ) ) 
 { 
 - return Double . valueOf ( value . substring ( 0 , value . length ( ) - 1 ) ) / 100 ; 
 + return Double . parseDouble ( value . substring ( 0 , value . length ( ) - 1 ) ) / 100 ; 
 } 
 else 
 { 
 - return Double . valueOf ( value ) ; 
 + return Double . parseDouble ( value ) ; 
 } 
 } 

