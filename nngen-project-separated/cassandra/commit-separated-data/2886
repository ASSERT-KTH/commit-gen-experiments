BLEU SCORE: 0.04844232281716619

TEST MSG: enhance assertion failure message
GENERATED MSG: Pig : fix duplicate schema alias

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / net / CallbackInfo . java b / src / java / org / apache / cassandra / net / CallbackInfo . java <nl> index 0edfee9 . . 3e584b4 100644 <nl> - - - a / src / java / org / apache / cassandra / net / CallbackInfo . java <nl> + + + b / src / java / org / apache / cassandra / net / CallbackInfo . java <nl> @ @ - 50 , 4 + 50 , 13 @ @ public class CallbackInfo <nl> { <nl> return false ; <nl> } <nl> + <nl> + public String toString ( ) <nl> + { <nl> + return " CallbackInfo ( " + <nl> + " target = " + target + <nl> + " , callback = " + callback + <nl> + " , serializer = " + serializer + <nl> + ' ) ' ; <nl> + } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java <nl> index 2259dbd . . 20cad82 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessagingService . java <nl> + + + b / src / java / org / apache / cassandra / net / MessagingService . java <nl> @ @ - 535 , 7 + 535 , 7 @ @ public final class MessagingService implements MessagingServiceMBean <nl> assert message . verb ! = Verb . MUTATION ; / / mutations need to call the overload with a ConsistencyLevel <nl> int messageId = nextId ( ) ; <nl> CallbackInfo previous = callbacks . put ( messageId , new CallbackInfo ( to , cb , callbackDeserializers . get ( message . verb ) ) , timeout ) ; <nl> - assert previous = = null ; <nl> + assert previous = = null : String . format ( " Callback already exists for id % d ! ( % s ) " , messageId , previous ) ; <nl> return messageId ; <nl> } <nl> <nl> @ @ - 544 , 7 + 544 , 7 @ @ public final class MessagingService implements MessagingServiceMBean <nl> assert message . verb = = Verb . MUTATION | | message . verb = = Verb . COUNTER _ MUTATION ; <nl> int messageId = nextId ( ) ; <nl> CallbackInfo previous = callbacks . put ( messageId , new WriteCallbackInfo ( to , cb , message , callbackDeserializers . get ( message . verb ) , consistencyLevel ) , timeout ) ; <nl> - assert previous = = null ; <nl> + assert previous = = null : String . format ( " Callback already exists for id % d ! ( % s ) " , messageId , previous ) ; <nl> return messageId ; <nl> } <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / net / CallbackInfo . java b / src / java / org / apache / cassandra / net / CallbackInfo . java 
 index 0edfee9 . . 3e584b4 100644 
 - - - a / src / java / org / apache / cassandra / net / CallbackInfo . java 
 + + + b / src / java / org / apache / cassandra / net / CallbackInfo . java 
 @ @ - 50 , 4 + 50 , 13 @ @ public class CallbackInfo 
 { 
 return false ; 
 } 
 + 
 + public String toString ( ) 
 + { 
 + return " CallbackInfo ( " + 
 + " target = " + target + 
 + " , callback = " + callback + 
 + " , serializer = " + serializer + 
 + ' ) ' ; 
 + } 
 } 
 diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java 
 index 2259dbd . . 20cad82 100644 
 - - - a / src / java / org / apache / cassandra / net / MessagingService . java 
 + + + b / src / java / org / apache / cassandra / net / MessagingService . java 
 @ @ - 535 , 7 + 535 , 7 @ @ public final class MessagingService implements MessagingServiceMBean 
 assert message . verb ! = Verb . MUTATION ; / / mutations need to call the overload with a ConsistencyLevel 
 int messageId = nextId ( ) ; 
 CallbackInfo previous = callbacks . put ( messageId , new CallbackInfo ( to , cb , callbackDeserializers . get ( message . verb ) ) , timeout ) ; 
 - assert previous = = null ; 
 + assert previous = = null : String . format ( " Callback already exists for id % d ! ( % s ) " , messageId , previous ) ; 
 return messageId ; 
 } 
 
 @ @ - 544 , 7 + 544 , 7 @ @ public final class MessagingService implements MessagingServiceMBean 
 assert message . verb = = Verb . MUTATION | | message . verb = = Verb . COUNTER _ MUTATION ; 
 int messageId = nextId ( ) ; 
 CallbackInfo previous = callbacks . put ( messageId , new WriteCallbackInfo ( to , cb , message , callbackDeserializers . get ( message . verb ) , consistencyLevel ) , timeout ) ; 
 - assert previous = = null ; 
 + assert previous = = null : String . format ( " Callback already exists for id % d ! ( % s ) " , messageId , previous ) ; 
 return messageId ; 
 } 


NEAREST DIFF:
ELIMINATEDSENTENCE
