BLEU SCORE: 0.0056659154777004925

TEST MSG: warnings
GENERATED MSG: Remove matching ancient cruft in Config

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java <nl> index e2df89f . . bb07449 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Config . java <nl> + + + b / src / java / org / apache / cassandra / config / Config . java <nl> @ @ - 263 , 8 + 263 , 10 @ @ public class Config <nl> <nl> public static List < String > parseHintedHandoffEnabledDCs ( final String dcNames ) throws IOException <nl> { <nl> - final CsvListReader csvListReader = new CsvListReader ( new StringReader ( dcNames ) , STANDARD _ SURROUNDING _ SPACES _ NEED _ QUOTES ) ; <nl> - return csvListReader . read ( ) ; <nl> + try ( final CsvListReader csvListReader = new CsvListReader ( new StringReader ( dcNames ) , STANDARD _ SURROUNDING _ SPACES _ NEED _ QUOTES ) ) <nl> + { <nl> + 	 return csvListReader . read ( ) ; <nl> + } <nl> } <nl> <nl> public static enum CommitLogSync
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> index eb82e0d . . 095e0c6 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> @ @ - 194 , 12 + 194 , 16 @ @ public class LeveledManifest <nl> for ( SSTableReader ssTableReader : added ) <nl> add ( ssTableReader , newLevel ) ; <nl> <nl> - DecoratedKey last = null ; <nl> - Collections . sort ( generations [ newLevel ] , SSTable . sstableComparator ) ; <nl> - for ( SSTableReader sstable : generations [ newLevel ] ) <nl> + if ( newLevel ! = 0 ) <nl> { <nl> - assert last = = null | | sstable . first . compareTo ( last ) > 0 ; <nl> - last = sstable . last ; <nl> + / / Integerity check <nl> + DecoratedKey last = null ; <nl> + Collections . sort ( generations [ newLevel ] , SSTable . sstableComparator ) ; <nl> + for ( SSTableReader sstable : generations [ newLevel ] ) <nl> + { <nl> + assert last = = null | | sstable . first . compareTo ( last ) > 0 ; <nl> + last = sstable . last ; <nl> + } <nl> } <nl> <nl> serialize ( ) ;

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java 
 index e2df89f . . bb07449 100644 
 - - - a / src / java / org / apache / cassandra / config / Config . java 
 + + + b / src / java / org / apache / cassandra / config / Config . java 
 @ @ - 263 , 8 + 263 , 10 @ @ public class Config 
 
 public static List < String > parseHintedHandoffEnabledDCs ( final String dcNames ) throws IOException 
 { 
 - final CsvListReader csvListReader = new CsvListReader ( new StringReader ( dcNames ) , STANDARD _ SURROUNDING _ SPACES _ NEED _ QUOTES ) ; 
 - return csvListReader . read ( ) ; 
 + try ( final CsvListReader csvListReader = new CsvListReader ( new StringReader ( dcNames ) , STANDARD _ SURROUNDING _ SPACES _ NEED _ QUOTES ) ) 
 + { 
 + 	 return csvListReader . read ( ) ; 
 + } 
 } 
 
 public static enum CommitLogSync

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 index eb82e0d . . 095e0c6 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 @ @ - 194 , 12 + 194 , 16 @ @ public class LeveledManifest 
 for ( SSTableReader ssTableReader : added ) 
 add ( ssTableReader , newLevel ) ; 
 
 - DecoratedKey last = null ; 
 - Collections . sort ( generations [ newLevel ] , SSTable . sstableComparator ) ; 
 - for ( SSTableReader sstable : generations [ newLevel ] ) 
 + if ( newLevel ! = 0 ) 
 { 
 - assert last = = null | | sstable . first . compareTo ( last ) > 0 ; 
 - last = sstable . last ; 
 + / / Integerity check 
 + DecoratedKey last = null ; 
 + Collections . sort ( generations [ newLevel ] , SSTable . sstableComparator ) ; 
 + for ( SSTableReader sstable : generations [ newLevel ] ) 
 + { 
 + assert last = = null | | sstable . first . compareTo ( last ) > 0 ; 
 + last = sstable . last ; 
 + } 
 } 
 
 serialize ( ) ;
