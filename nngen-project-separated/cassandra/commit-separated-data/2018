BLEU SCORE: 0.041961149062965476

TEST MSG: Fix repeating message when there are no hints to compact
GENERATED MSG: Fix build from variable rename

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> index a1920ae . . 0e68a71 100644 <nl> - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> @ @ - 260 , 6 + 260 , 9 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean <nl> for ( SSTable sstable : hintStore . getDataTracker ( ) . getUncompactingSSTables ( ) ) <nl> descriptors . add ( sstable . descriptor ) ; <nl> <nl> + if ( descriptors . isEmpty ( ) ) <nl> + return ; <nl> + <nl> try <nl> { <nl> CompactionManager . instance . submitUserDefined ( hintStore , descriptors , ( int ) ( System . currentTimeMillis ( ) / 1000 ) ) . get ( ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 31ae77d . . cb6c255 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 5 + 1 , 7 @ @ <nl> 1 . 0 . 9 <nl> * always compact away deleted hints immediately after handoff ( CASSANDRA - 3955 ) <nl> + * delete hints from dropped ColumnFamilies on handoff instead of <nl> + erroring out ( CASSANDRA - 3975 ) <nl> <nl> <nl> 1 . 0 . 8 <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilySerializer . java b / src / java / org / apache / cassandra / db / ColumnFamilySerializer . java <nl> index 7f11948 . . abfe76c 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilySerializer . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilySerializer . java <nl> @ @ - 24 , 17 + 24 , 14 @ @ package org . apache . cassandra . db ; <nl> import java . io . DataInput ; <nl> import java . io . DataOutput ; <nl> import java . io . IOException ; <nl> - import java . io . RandomAccessFile ; <nl> import java . util . Collection ; <nl> <nl> import org . apache . cassandra . config . Schema ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> - import org . apache . cassandra . config . CFMetaData ; <nl> import org . apache . cassandra . io . IColumnSerializer ; <nl> import org . apache . cassandra . io . ISerializer ; <nl> - import org . apache . cassandra . io . sstable . SSTableMetadata ; <nl> <nl> public class ColumnFamilySerializer implements ISerializer < ColumnFamily > <nl> { <nl> @ @ - 126 , 7 + 123 , 7 @ @ public class ColumnFamilySerializer implements ISerializer < ColumnFamily > <nl> / / create a ColumnFamily based on the cf id <nl> int cfId = dis . readInt ( ) ; <nl> if ( Schema . instance . getCF ( cfId ) = = null ) <nl> - throw new UnserializableColumnFamilyException ( " Couldn ' t find cfId = " + cfId , cfId ) ; <nl> + throw new UnknownColumnFamilyException ( " Couldn ' t find cfId = " + cfId , cfId ) ; <nl> ColumnFamily cf = ColumnFamily . create ( cfId , factory ) ; <nl> deserializeFromSSTableNoColumns ( cf , dis ) ; <nl> deserializeColumns ( dis , cf , flag ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> index ca416d7 . . a9f979f 100644 <nl> - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> @ @ - 349 , 13 + 349 , 25 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean <nl> assert keyColumn ! = null ; <nl> assert mutationColumn ! = null ; <nl> DataInputStream in = new DataInputStream ( ByteBufferUtil . inputStream ( mutationColumn . value ( ) ) ) ; <nl> - RowMutation rm = RowMutation . serializer ( ) . deserialize ( in , ByteBufferUtil . toInt ( versionColumn . value ( ) ) ) ; <nl> + RowMutation rm ; <nl> + try <nl> + { <nl> + rm = RowMutation . serializer ( ) . deserialize ( in , ByteBufferUtil . toInt ( versionColumn . value ( ) ) ) ; <nl> + } <nl> + catch ( UnknownColumnFamilyException e ) <nl> + { <nl> + logger _ . debug ( " Skipping delivery of hint for deleted columnfamily " , e ) ; <nl> + rm = null ; <nl> + } <nl> <nl> try <nl> { <nl> - sendMutation ( endpoint , rm ) ; <nl> + if ( rm ! = null ) <nl> + { <nl> + sendMutation ( endpoint , rm ) ; <nl> + rowsReplayed + + ; <nl> + } <nl> deleteHint ( tokenBytes , hint . name ( ) , hint . maxTimestamp ( ) ) ; <nl> - rowsReplayed + + ; <nl> } <nl> catch ( TimeoutException e ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / db / UnknownColumnFamilyException . java b / src / java / org / apache / cassandra / db / UnknownColumnFamilyException . java <nl> new file mode 100644 <nl> index 0000000 . . e371262 <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / db / UnknownColumnFamilyException . java <nl> @ @ - 0 , 0 + 1 , 33 @ @ <nl> + package org . apache . cassandra . db ; <nl> + <nl> + import java . io . IOException ; <nl> + <nl> + / * * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * < p / > <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * < p / > <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + <nl> + public class UnknownColumnFamilyException extends IOException <nl> + { <nl> + public final int cfId ; <nl> + <nl> + public UnknownColumnFamilyException ( String msg , int cfId ) <nl> + { <nl> + super ( msg ) ; <nl> + this . cfId = cfId ; <nl> + } <nl> + } <nl> diff - - git a / src / java / org / apache / cassandra / db / UnserializableColumnFamilyException . java b / src / java / org / apache / cassandra / db / UnserializableColumnFamilyException . java <nl> deleted file mode 100644 <nl> index df46b28 . . 0000000 <nl> - - - a / src / java / org / apache / cassandra / db / UnserializableColumnFamilyException . java <nl> + + + / dev / null <nl> @ @ - 1 , 33 + 0 , 0 @ @ <nl> - package org . apache . cassandra . db ; <nl> - <nl> - import java . io . IOException ; <nl> - <nl> - / * * <nl> - * Licensed to the Apache Software Foundation ( ASF ) under one <nl> - * or more contributor license agreements . See the NOTICE file <nl> - * distributed with this work for additional information <nl> - * regarding copyright ownership . The ASF licenses this file <nl> - * to you under the Apache License , Version 2 . 0 ( the <nl> - * " License " ) ; you may not use this file except in compliance <nl> - * with the License . You may obtain a copy of the License at <nl> - * < p / > <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * < p / > <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - <nl> - <nl> - public class UnserializableColumnFamilyException extends IOException <nl> - { <nl> - public final int cfId ; <nl> - <nl> - public UnserializableColumnFamilyException ( String msg , int cfId ) <nl> - { <nl> - super ( msg ) ; <nl> - this . cfId = cfId ; <nl> - } <nl> - } <nl> diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLog . java b / src / java / org / apache / cassandra / db / commitlog / CommitLog . java <nl> index c4942d2 . . 1a5509e 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLog . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLog . java <nl> @ @ - 285 , 7 + 285 , 7 @ @ public class CommitLog implements CommitLogMBean <nl> / / the current version . so do make sure the CL is drained prior to upgrading a node . <nl> rm = RowMutation . serializer ( ) . deserialize ( new DataInputStream ( bufIn ) , MessagingService . version _ , IColumnSerializer . Flag . LOCAL ) ; <nl> } <nl> - catch ( UnserializableColumnFamilyException ex ) <nl> + catch ( UnknownColumnFamilyException ex ) <nl> { <nl> AtomicInteger i = invalidMutations . get ( ex . cfId ) ; <nl> if ( i = = null )

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 index a1920ae . . 0e68a71 100644 
 - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 @ @ - 260 , 6 + 260 , 9 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean 
 for ( SSTable sstable : hintStore . getDataTracker ( ) . getUncompactingSSTables ( ) ) 
 descriptors . add ( sstable . descriptor ) ; 
 
 + if ( descriptors . isEmpty ( ) ) 
 + return ; 
 + 
 try 
 { 
 CompactionManager . instance . submitUserDefined ( hintStore , descriptors , ( int ) ( System . currentTimeMillis ( ) / 1000 ) ) . get ( ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 31ae77d . . cb6c255 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 5 + 1 , 7 @ @ 
 1 . 0 . 9 
 * always compact away deleted hints immediately after handoff ( CASSANDRA - 3955 ) 
 + * delete hints from dropped ColumnFamilies on handoff instead of 
 + erroring out ( CASSANDRA - 3975 ) 
 
 
 1 . 0 . 8 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilySerializer . java b / src / java / org / apache / cassandra / db / ColumnFamilySerializer . java 
 index 7f11948 . . abfe76c 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilySerializer . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilySerializer . java 
 @ @ - 24 , 17 + 24 , 14 @ @ package org . apache . cassandra . db ; 
 import java . io . DataInput ; 
 import java . io . DataOutput ; 
 import java . io . IOException ; 
 - import java . io . RandomAccessFile ; 
 import java . util . Collection ; 
 
 import org . apache . cassandra . config . Schema ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 - import org . apache . cassandra . config . CFMetaData ; 
 import org . apache . cassandra . io . IColumnSerializer ; 
 import org . apache . cassandra . io . ISerializer ; 
 - import org . apache . cassandra . io . sstable . SSTableMetadata ; 
 
 public class ColumnFamilySerializer implements ISerializer < ColumnFamily > 
 { 
 @ @ - 126 , 7 + 123 , 7 @ @ public class ColumnFamilySerializer implements ISerializer < ColumnFamily > 
 / / create a ColumnFamily based on the cf id 
 int cfId = dis . readInt ( ) ; 
 if ( Schema . instance . getCF ( cfId ) = = null ) 
 - throw new UnserializableColumnFamilyException ( " Couldn ' t find cfId = " + cfId , cfId ) ; 
 + throw new UnknownColumnFamilyException ( " Couldn ' t find cfId = " + cfId , cfId ) ; 
 ColumnFamily cf = ColumnFamily . create ( cfId , factory ) ; 
 deserializeFromSSTableNoColumns ( cf , dis ) ; 
 deserializeColumns ( dis , cf , flag ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 index ca416d7 . . a9f979f 100644 
 - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 @ @ - 349 , 13 + 349 , 25 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean 
 assert keyColumn ! = null ; 
 assert mutationColumn ! = null ; 
 DataInputStream in = new DataInputStream ( ByteBufferUtil . inputStream ( mutationColumn . value ( ) ) ) ; 
 - RowMutation rm = RowMutation . serializer ( ) . deserialize ( in , ByteBufferUtil . toInt ( versionColumn . value ( ) ) ) ; 
 + RowMutation rm ; 
 + try 
 + { 
 + rm = RowMutation . serializer ( ) . deserialize ( in , ByteBufferUtil . toInt ( versionColumn . value ( ) ) ) ; 
 + } 
 + catch ( UnknownColumnFamilyException e ) 
 + { 
 + logger _ . debug ( " Skipping delivery of hint for deleted columnfamily " , e ) ; 
 + rm = null ; 
 + } 
 
 try 
 { 
 - sendMutation ( endpoint , rm ) ; 
 + if ( rm ! = null ) 
 + { 
 + sendMutation ( endpoint , rm ) ; 
 + rowsReplayed + + ; 
 + } 
 deleteHint ( tokenBytes , hint . name ( ) , hint . maxTimestamp ( ) ) ; 
 - rowsReplayed + + ; 
 } 
 catch ( TimeoutException e ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / db / UnknownColumnFamilyException . java b / src / java / org / apache / cassandra / db / UnknownColumnFamilyException . java 
 new file mode 100644 
 index 0000000 . . e371262 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / db / UnknownColumnFamilyException . java 
 @ @ - 0 , 0 + 1 , 33 @ @ 
 + package org . apache . cassandra . db ; 
 + 
 + import java . io . IOException ; 
 + 
 + / * * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * < p / > 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * < p / > 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + 
 + public class UnknownColumnFamilyException extends IOException 
 + { 
 + public final int cfId ; 
 + 
 + public UnknownColumnFamilyException ( String msg , int cfId ) 
 + { 
 + super ( msg ) ; 
 + this . cfId = cfId ; 
 + } 
 + } 
 diff - - git a / src / java / org / apache / cassandra / db / UnserializableColumnFamilyException . java b / src / java / org / apache / cassandra / db / UnserializableColumnFamilyException . java 
 deleted file mode 100644 
 index df46b28 . . 0000000 
 - - - a / src / java / org / apache / cassandra / db / UnserializableColumnFamilyException . java 
 + + + / dev / null 
 @ @ - 1 , 33 + 0 , 0 @ @ 
 - package org . apache . cassandra . db ; 
 - 
 - import java . io . IOException ; 
 - 
 - / * * 
 - * Licensed to the Apache Software Foundation ( ASF ) under one 
 - * or more contributor license agreements . See the NOTICE file 
 - * distributed with this work for additional information 
 - * regarding copyright ownership . The ASF licenses this file 
 - * to you under the Apache License , Version 2 . 0 ( the 
 - * " License " ) ; you may not use this file except in compliance 
 - * with the License . You may obtain a copy of the License at 
 - * < p / > 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * < p / > 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - 
 - 
 - public class UnserializableColumnFamilyException extends IOException 
 - { 
 - public final int cfId ; 
 - 
 - public UnserializableColumnFamilyException ( String msg , int cfId ) 
 - { 
 - super ( msg ) ; 
 - this . cfId = cfId ; 
 - } 
 - } 
 diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLog . java b / src / java / org / apache / cassandra / db / commitlog / CommitLog . java 
 index c4942d2 . . 1a5509e 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLog . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLog . java 
 @ @ - 285 , 7 + 285 , 7 @ @ public class CommitLog implements CommitLogMBean 
 / / the current version . so do make sure the CL is drained prior to upgrading a node . 
 rm = RowMutation . serializer ( ) . deserialize ( new DataInputStream ( bufIn ) , MessagingService . version _ , IColumnSerializer . Flag . LOCAL ) ; 
 } 
 - catch ( UnserializableColumnFamilyException ex ) 
 + catch ( UnknownColumnFamilyException ex ) 
 { 
 AtomicInteger i = invalidMutations . get ( ex . cfId ) ; 
 if ( i = = null )
