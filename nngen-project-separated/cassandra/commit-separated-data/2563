BLEU SCORE: 0.001076291192960631

TEST MSG: Remove Closable from SSTableReader
GENERATED MSG: fix compaction bug - - only one of the SSTR constructors was adding to openedFiles . ( fixes regression from # 413 ) .

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> index bc5002f . . 47d31b6 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> @ @ - 18 , 7 + 18 , 6 @ @ <nl> package org . apache . cassandra . io . sstable ; <nl> <nl> import java . io . BufferedInputStream ; <nl> - import java . io . Closeable ; <nl> import java . io . DataInputStream ; <nl> import java . io . File ; <nl> import java . io . FileInputStream ; <nl> @ @ - 117 , 7 + 116 , 7 @ @ import static org . apache . cassandra . db . Directories . SECONDARY _ INDEX _ NAME _ SEPARATOR <nl> * SSTableReaders are open ( ) ed by Keyspace . onStart ; after that they are created by SSTableWriter . renameAndOpen . <nl> * Do not re - call open ( ) on existing SSTable files ; use the references kept by ColumnFamilyStore post - start instead . <nl> * / <nl> - public class SSTableReader extends SSTable implements Closeable <nl> + public class SSTableReader extends SSTable <nl> { <nl> private static final Logger logger = LoggerFactory . getLogger ( SSTableReader . class ) ; <nl> <nl> @ @ - 620 , 14 + 619 , 6 @ @ public class SSTableReader extends SSTable implements Closeable <nl> } <nl> } <nl> <nl> - / * * <nl> - * Schedule clean - up of resources <nl> - * / <nl> - public void close ( ) <nl> - { <nl> - tidy ( false ) ; <nl> - } <nl> - <nl> public String getFilename ( ) <nl> { <nl> return dfile . path ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / io / SSTableReader . java b / src / java / org / apache / cassandra / io / SSTableReader . java <nl> index efc0a47 . . ee4babd 100644 <nl> - - - a / src / java / org / apache / cassandra / io / SSTableReader . java <nl> + + + b / src / java / org / apache / cassandra / io / SSTableReader . java <nl> @ @ - 23 , 6 + 23 , 8 @ @ import java . util . * ; <nl> <nl> import org . apache . log4j . Logger ; <nl> <nl> + import org . apache . commons . lang . StringUtils ; <nl> + <nl> import org . apache . cassandra . dht . IPartitioner ; <nl> import org . apache . cassandra . utils . BloomFilter ; <nl> import org . apache . cassandra . utils . FileUtils ; <nl> @ @ - 108 , 7 + 110 , 7 @ @ public class SSTableReader extends SSTable <nl> public static SSTableReader get ( String dataFileName ) <nl> { <nl> SSTableReader sstable = openedFiles . get ( dataFileName ) ; <nl> - assert sstable ! = null ; <nl> + assert sstable ! = null : " No sstable opened for " + dataFileName + " : " + openedFiles ; <nl> return sstable ; <nl> } <nl> <nl> @ @ - 123 , 6 + 125 , 7 @ @ public class SSTableReader extends SSTable <nl> private SSTableReader ( String filename , IPartitioner partitioner ) <nl> { <nl> super ( filename , partitioner ) ; <nl> + openedFiles . put ( filename , this ) ; <nl> } <nl> <nl> public List < KeyPosition > getIndexPositions ( ) <nl> @ @ - 353 , 4 + 356 , 10 @ @ class FileSSTableMap <nl> { <nl> map . remove ( new File ( filename ) . getCanonicalPath ( ) ) ; <nl> } <nl> + <nl> + @ Override <nl> + public String toString ( ) <nl> + { <nl> + return " FileSSTableMap { " + StringUtils . join ( map . keySet ( ) , " , " ) + " } " ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 index bc5002f . . 47d31b6 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 @ @ - 18 , 7 + 18 , 6 @ @ 
 package org . apache . cassandra . io . sstable ; 
 
 import java . io . BufferedInputStream ; 
 - import java . io . Closeable ; 
 import java . io . DataInputStream ; 
 import java . io . File ; 
 import java . io . FileInputStream ; 
 @ @ - 117 , 7 + 116 , 7 @ @ import static org . apache . cassandra . db . Directories . SECONDARY _ INDEX _ NAME _ SEPARATOR 
 * SSTableReaders are open ( ) ed by Keyspace . onStart ; after that they are created by SSTableWriter . renameAndOpen . 
 * Do not re - call open ( ) on existing SSTable files ; use the references kept by ColumnFamilyStore post - start instead . 
 * / 
 - public class SSTableReader extends SSTable implements Closeable 
 + public class SSTableReader extends SSTable 
 { 
 private static final Logger logger = LoggerFactory . getLogger ( SSTableReader . class ) ; 
 
 @ @ - 620 , 14 + 619 , 6 @ @ public class SSTableReader extends SSTable implements Closeable 
 } 
 } 
 
 - / * * 
 - * Schedule clean - up of resources 
 - * / 
 - public void close ( ) 
 - { 
 - tidy ( false ) ; 
 - } 
 - 
 public String getFilename ( ) 
 { 
 return dfile . path ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / io / SSTableReader . java b / src / java / org / apache / cassandra / io / SSTableReader . java 
 index efc0a47 . . ee4babd 100644 
 - - - a / src / java / org / apache / cassandra / io / SSTableReader . java 
 + + + b / src / java / org / apache / cassandra / io / SSTableReader . java 
 @ @ - 23 , 6 + 23 , 8 @ @ import java . util . * ; 
 
 import org . apache . log4j . Logger ; 
 
 + import org . apache . commons . lang . StringUtils ; 
 + 
 import org . apache . cassandra . dht . IPartitioner ; 
 import org . apache . cassandra . utils . BloomFilter ; 
 import org . apache . cassandra . utils . FileUtils ; 
 @ @ - 108 , 7 + 110 , 7 @ @ public class SSTableReader extends SSTable 
 public static SSTableReader get ( String dataFileName ) 
 { 
 SSTableReader sstable = openedFiles . get ( dataFileName ) ; 
 - assert sstable ! = null ; 
 + assert sstable ! = null : " No sstable opened for " + dataFileName + " : " + openedFiles ; 
 return sstable ; 
 } 
 
 @ @ - 123 , 6 + 125 , 7 @ @ public class SSTableReader extends SSTable 
 private SSTableReader ( String filename , IPartitioner partitioner ) 
 { 
 super ( filename , partitioner ) ; 
 + openedFiles . put ( filename , this ) ; 
 } 
 
 public List < KeyPosition > getIndexPositions ( ) 
 @ @ - 353 , 4 + 356 , 10 @ @ class FileSSTableMap 
 { 
 map . remove ( new File ( filename ) . getCanonicalPath ( ) ) ; 
 } 
 + 
 + @ Override 
 + public String toString ( ) 
 + { 
 + return " FileSSTableMap { " + StringUtils . join ( map . keySet ( ) , " , " ) + " } " ; 
 + } 
 }
