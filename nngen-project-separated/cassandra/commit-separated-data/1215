BLEU SCORE: 0.10552670315936319

TEST MSG: Fix streaming to catch exception so retry not fail
GENERATED MSG: Fix streaming retry

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 3d22b91 . . 4c24b35 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 12 <nl> + * Fix streaming to catch exception so retry not fail ( CASSANDRA - 10557 ) <nl> * Add validation method to PerRowSecondaryIndex ( CASSANDRA - 10092 ) <nl> * Support encrypted and plain traffic on the same port ( CASSANDRA - 10559 ) <nl> * Do STCS in DTCS windows ( CASSANDRA - 10276 ) <nl> diff - - git a / src / java / org / apache / cassandra / streaming / StreamReader . java b / src / java / org / apache / cassandra / streaming / StreamReader . java <nl> index c96a925 . . 5389a80 100644 <nl> - - - a / src / java / org / apache / cassandra / streaming / StreamReader . java <nl> + + + b / src / java / org / apache / cassandra / streaming / StreamReader . java <nl> @ @ - 89 , 11 + 89 , 12 @ @ public class StreamReader <nl> } <nl> ColumnFamilyStore cfs = Keyspace . open ( kscf . left ) . getColumnFamilyStore ( kscf . right ) ; <nl> <nl> - SSTableWriter writer = createWriter ( cfs , totalSize , repairedAt ) ; <nl> DataInputStream dis = new DataInputStream ( new LZFInputStream ( Channels . newInputStream ( channel ) ) ) ; <nl> BytesReadTracker in = new BytesReadTracker ( dis ) ; <nl> + SSTableWriter writer = null ; <nl> try <nl> { <nl> + writer = createWriter ( cfs , totalSize , repairedAt ) ; <nl> while ( in . getBytesRead ( ) < totalSize ) <nl> { <nl> writeRow ( writer , in , cfs ) ; <nl> @ @ - 104 , 7 + 105 , 18 @ @ public class StreamReader <nl> } <nl> catch ( Throwable e ) <nl> { <nl> - writer . abort ( ) ; <nl> + if ( writer ! = null ) <nl> + { <nl> + try <nl> + { <nl> + writer . abort ( ) ; <nl> + } <nl> + catch ( Throwable e2 ) <nl> + { <nl> + / / add abort error to original and continue so we can drain unread stream <nl> + e . addSuppressed ( e2 ) ; <nl> + } <nl> + } <nl> drain ( dis , in . getBytesRead ( ) ) ; <nl> if ( e instanceof IOException ) <nl> throw ( IOException ) e ; <nl> diff - - git a / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java b / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java <nl> index fb2599f . . 0529496 100644 <nl> - - - a / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java <nl> + + + b / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java <nl> @ @ - 72 , 12 + 72 , 12 @ @ public class CompressedStreamReader extends StreamReader <nl> } <nl> ColumnFamilyStore cfs = Keyspace . open ( kscf . left ) . getColumnFamilyStore ( kscf . right ) ; <nl> <nl> - SSTableWriter writer = createWriter ( cfs , totalSize , repairedAt ) ; <nl> - <nl> CompressedInputStream cis = new CompressedInputStream ( Channels . newInputStream ( channel ) , compressionInfo , inputVersion . hasPostCompressionAdlerChecksums ) ; <nl> BytesReadTracker in = new BytesReadTracker ( new DataInputStream ( cis ) ) ; <nl> + SSTableWriter writer = null ; <nl> try <nl> { <nl> + writer = createWriter ( cfs , totalSize , repairedAt ) ; <nl> for ( Pair < Long , Long > section : sections ) <nl> { <nl> long length = section . right - section . left ; <nl> @ @ - 95 , 7 + 95 , 18 @ @ public class CompressedStreamReader extends StreamReader <nl> } <nl> catch ( Throwable e ) <nl> { <nl> - writer . abort ( ) ; <nl> + if ( writer ! = null ) <nl> + { <nl> + try <nl> + { <nl> + writer . abort ( ) ; <nl> + } <nl> + catch ( Throwable e2 ) <nl> + { <nl> + / / add abort error to original and continue so we can drain unread stream <nl> + e . addSuppressed ( e2 ) ; <nl> + } <nl> + } <nl> drain ( cis , in . getBytesRead ( ) ) ; <nl> if ( e instanceof IOException ) <nl> throw ( IOException ) e ;
NEAREST DIFF (one line): diff - - git a / . rat - excludes b / . rat - excludes <nl> index 329cea6 . . 8d2ead8 100644 <nl> - - - a / . rat - excludes <nl> + + + b / . rat - excludes <nl> @ @ - 23 , 5 + 23 , 7 @ @ doc / * * <nl> build . properties . default <nl> test / data / * * <nl> examples / pig / * * <nl> + examples / triggers / build . xml <nl> + examples / triggers / conf / * <nl> examples / hadoop _ word _ count / conf / log4j . properties <nl> pylib / cqlshlib / test / * * <nl> diff - - git a / build . xml b / build . xml <nl> index 04e58e3 . . da653c8 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 25 , 7 + 25 , 7 @ @ <nl> < property name = " debuglevel " value = " source , lines , vars " / > <nl> <nl> < ! - - default version and SCM information - - > <nl> - < property name = " base . version " value = " 2 . 0 . 0 - beta1 " / > <nl> + < property name = " base . version " value = " 2 . 0 . 0 - beta2 " / > <nl> < property name = " scm . connection " value = " scm : git : / / git . apache . org / cassandra . git " / > <nl> < property name = " scm . developerConnection " value = " scm : git : / / git . apache . org / cassandra . git " / > <nl> < property name = " scm . url " value = " http : / / git - wip - us . apache . org / repos / asf ? p = cassandra . git ; a = tree " / > <nl> diff - - git a / debian / changelog b / debian / changelog <nl> index 1d87846 . . fc418c7 100644 <nl> - - - a / debian / changelog <nl> + + + b / debian / changelog <nl> @ @ - 1 , 3 + 1 , 9 @ @ <nl> + cassandra ( 2 . 0 . 0 ~ beta2 ) unstable ; urgency = low <nl> + <nl> + * New beta release <nl> + <nl> + - - Sylvain Lebresne < slebresne @ apache . org > Mon , 22 Jul 2013 16 : 53 : 37 + 0200 <nl> + <nl> cassandra ( 2 . 0 . 0 ~ beta1 ) unstable ; urgency = low <nl> <nl> * New beta release <nl> diff - - git a / examples / triggers / src / org / apache / cassandra / triggers / InvertedIndex . java b / examples / triggers / src / org / apache / cassandra / triggers / InvertedIndex . java <nl> index 6eb0cbd . . 055e70e 100644 <nl> - - - a / examples / triggers / src / org / apache / cassandra / triggers / InvertedIndex . java <nl> + + + b / examples / triggers / src / org / apache / cassandra / triggers / InvertedIndex . java <nl> @ @ - 1 , 3 + 1 , 20 @ @ <nl> + / * * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> package org . apache . cassandra . triggers ; <nl> <nl> import java . io . InputStream ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 3d22b91 . . 4c24b35 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 12 
 + * Fix streaming to catch exception so retry not fail ( CASSANDRA - 10557 ) 
 * Add validation method to PerRowSecondaryIndex ( CASSANDRA - 10092 ) 
 * Support encrypted and plain traffic on the same port ( CASSANDRA - 10559 ) 
 * Do STCS in DTCS windows ( CASSANDRA - 10276 ) 
 diff - - git a / src / java / org / apache / cassandra / streaming / StreamReader . java b / src / java / org / apache / cassandra / streaming / StreamReader . java 
 index c96a925 . . 5389a80 100644 
 - - - a / src / java / org / apache / cassandra / streaming / StreamReader . java 
 + + + b / src / java / org / apache / cassandra / streaming / StreamReader . java 
 @ @ - 89 , 11 + 89 , 12 @ @ public class StreamReader 
 } 
 ColumnFamilyStore cfs = Keyspace . open ( kscf . left ) . getColumnFamilyStore ( kscf . right ) ; 
 
 - SSTableWriter writer = createWriter ( cfs , totalSize , repairedAt ) ; 
 DataInputStream dis = new DataInputStream ( new LZFInputStream ( Channels . newInputStream ( channel ) ) ) ; 
 BytesReadTracker in = new BytesReadTracker ( dis ) ; 
 + SSTableWriter writer = null ; 
 try 
 { 
 + writer = createWriter ( cfs , totalSize , repairedAt ) ; 
 while ( in . getBytesRead ( ) < totalSize ) 
 { 
 writeRow ( writer , in , cfs ) ; 
 @ @ - 104 , 7 + 105 , 18 @ @ public class StreamReader 
 } 
 catch ( Throwable e ) 
 { 
 - writer . abort ( ) ; 
 + if ( writer ! = null ) 
 + { 
 + try 
 + { 
 + writer . abort ( ) ; 
 + } 
 + catch ( Throwable e2 ) 
 + { 
 + / / add abort error to original and continue so we can drain unread stream 
 + e . addSuppressed ( e2 ) ; 
 + } 
 + } 
 drain ( dis , in . getBytesRead ( ) ) ; 
 if ( e instanceof IOException ) 
 throw ( IOException ) e ; 
 diff - - git a / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java b / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java 
 index fb2599f . . 0529496 100644 
 - - - a / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java 
 + + + b / src / java / org / apache / cassandra / streaming / compress / CompressedStreamReader . java 
 @ @ - 72 , 12 + 72 , 12 @ @ public class CompressedStreamReader extends StreamReader 
 } 
 ColumnFamilyStore cfs = Keyspace . open ( kscf . left ) . getColumnFamilyStore ( kscf . right ) ; 
 
 - SSTableWriter writer = createWriter ( cfs , totalSize , repairedAt ) ; 
 - 
 CompressedInputStream cis = new CompressedInputStream ( Channels . newInputStream ( channel ) , compressionInfo , inputVersion . hasPostCompressionAdlerChecksums ) ; 
 BytesReadTracker in = new BytesReadTracker ( new DataInputStream ( cis ) ) ; 
 + SSTableWriter writer = null ; 
 try 
 { 
 + writer = createWriter ( cfs , totalSize , repairedAt ) ; 
 for ( Pair < Long , Long > section : sections ) 
 { 
 long length = section . right - section . left ; 
 @ @ - 95 , 7 + 95 , 18 @ @ public class CompressedStreamReader extends StreamReader 
 } 
 catch ( Throwable e ) 
 { 
 - writer . abort ( ) ; 
 + if ( writer ! = null ) 
 + { 
 + try 
 + { 
 + writer . abort ( ) ; 
 + } 
 + catch ( Throwable e2 ) 
 + { 
 + / / add abort error to original and continue so we can drain unread stream 
 + e . addSuppressed ( e2 ) ; 
 + } 
 + } 
 drain ( cis , in . getBytesRead ( ) ) ; 
 if ( e instanceof IOException ) 
 throw ( IOException ) e ;

NEAREST DIFF:
diff - - git a / . rat - excludes b / . rat - excludes 
 index 329cea6 . . 8d2ead8 100644 
 - - - a / . rat - excludes 
 + + + b / . rat - excludes 
 @ @ - 23 , 5 + 23 , 7 @ @ doc / * * 
 build . properties . default 
 test / data / * * 
 examples / pig / * * 
 + examples / triggers / build . xml 
 + examples / triggers / conf / * 
 examples / hadoop _ word _ count / conf / log4j . properties 
 pylib / cqlshlib / test / * * 
 diff - - git a / build . xml b / build . xml 
 index 04e58e3 . . da653c8 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 25 , 7 + 25 , 7 @ @ 
 < property name = " debuglevel " value = " source , lines , vars " / > 
 
 < ! - - default version and SCM information - - > 
 - < property name = " base . version " value = " 2 . 0 . 0 - beta1 " / > 
 + < property name = " base . version " value = " 2 . 0 . 0 - beta2 " / > 
 < property name = " scm . connection " value = " scm : git : / / git . apache . org / cassandra . git " / > 
 < property name = " scm . developerConnection " value = " scm : git : / / git . apache . org / cassandra . git " / > 
 < property name = " scm . url " value = " http : / / git - wip - us . apache . org / repos / asf ? p = cassandra . git ; a = tree " / > 
 diff - - git a / debian / changelog b / debian / changelog 
 index 1d87846 . . fc418c7 100644 
 - - - a / debian / changelog 
 + + + b / debian / changelog 
 @ @ - 1 , 3 + 1 , 9 @ @ 
 + cassandra ( 2 . 0 . 0 ~ beta2 ) unstable ; urgency = low 
 + 
 + * New beta release 
 + 
 + - - Sylvain Lebresne < slebresne @ apache . org > Mon , 22 Jul 2013 16 : 53 : 37 + 0200 
 + 
 cassandra ( 2 . 0 . 0 ~ beta1 ) unstable ; urgency = low 
 
 * New beta release 
 diff - - git a / examples / triggers / src / org / apache / cassandra / triggers / InvertedIndex . java b / examples / triggers / src / org / apache / cassandra / triggers / InvertedIndex . java 
 index 6eb0cbd . . 055e70e 100644 
 - - - a / examples / triggers / src / org / apache / cassandra / triggers / InvertedIndex . java 
 + + + b / examples / triggers / src / org / apache / cassandra / triggers / InvertedIndex . java 
 @ @ - 1 , 3 + 1 , 20 @ @ 
 + / * * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 package org . apache . cassandra . triggers ; 
 
 import java . io . InputStream ;
