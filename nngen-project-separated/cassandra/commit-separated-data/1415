BLEU SCORE: 0.05341087579952926

TEST MSG: Write hints for paxos commits
GENERATED MSG: 6132

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 3b0241c . . 7151883 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 9 <nl> + * Write hints for paxos commits ( CASSANDRA - 7342 ) <nl> * ( cqlsh ) Fix timestamps before 1970 on Windows , always <nl> use UTC for timestamp display ( CASSANDRA - 10000 ) <nl> * ( cqlsh ) Avoid overwriting new config file with old config <nl> diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java <nl> index 1ad0e7c . . d7825d4 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessagingService . java <nl> + + + b / src / java / org / apache / cassandra / net / MessagingService . java <nl> @ @ - 379 , 8 + 379 , 7 @ @ public final class MessagingService implements MessagingServiceMBean <nl> <nl> if ( expiredCallbackInfo . shouldHint ( ) ) <nl> { <nl> - Mutation mutation = ( Mutation ) ( ( WriteCallbackInfo ) expiredCallbackInfo ) . sentMessage . payload ; <nl> - <nl> + Mutation mutation = ( ( WriteCallbackInfo ) expiredCallbackInfo ) . mutation ( ) ; <nl> return StorageProxy . submitHint ( mutation , expiredCallbackInfo . target , null ) ; <nl> } <nl> <nl> @ @ - 594 , 13 + 593 , 13 @ @ public final class MessagingService implements MessagingServiceMBean <nl> } <nl> <nl> public int addCallback ( IAsyncCallback cb , <nl> - MessageOut < ? extends IMutation > message , <nl> + MessageOut < ? > message , <nl> InetAddress to , <nl> long timeout , <nl> ConsistencyLevel consistencyLevel , <nl> boolean allowHints ) <nl> { <nl> - assert message . verb = = Verb . MUTATION | | message . verb = = Verb . COUNTER _ MUTATION ; <nl> + assert message . verb = = Verb . MUTATION | | message . verb = = Verb . COUNTER _ MUTATION | | message . verb = = Verb . PAXOS _ COMMIT ; <nl> int messageId = nextId ( ) ; <nl> <nl> CallbackInfo previous = callbacks . put ( messageId , <nl> @ @ - 651 , 7 + 650 , 7 @ @ public final class MessagingService implements MessagingServiceMBean <nl> } <nl> <nl> / * * <nl> - * Send a mutation message to a given endpoint . This method specifies a callback <nl> + * Send a mutation message or a Paxos Commit to a given endpoint . This method specifies a callback <nl> * which is invoked with the actual response . <nl> * Also holds the message ( only mutation messages ) to determine if it <nl> * needs to trigger a hint ( uses StorageProxy for that ) . <nl> @ @ - 662 , 7 + 661 , 7 @ @ public final class MessagingService implements MessagingServiceMBean <nl> * suggest that a timeout occurred to the invoker of the send ( ) . <nl> * @ return an reference to message id used to match with the result <nl> * / <nl> - public int sendRR ( MessageOut < ? extends IMutation > message , <nl> + public int sendRR ( MessageOut < ? > message , <nl> InetAddress to , <nl> AbstractWriteResponseHandler handler , <nl> boolean allowHints ) <nl> diff - - git a / src / java / org / apache / cassandra / net / WriteCallbackInfo . java b / src / java / org / apache / cassandra / net / WriteCallbackInfo . java <nl> index 987ec15 . . 0cf126f 100644 <nl> - - - a / src / java / org / apache / cassandra / net / WriteCallbackInfo . java <nl> + + + b / src / java / org / apache / cassandra / net / WriteCallbackInfo . java <nl> @ @ - 21 , 12 + 21 , 14 @ @ package org . apache . cassandra . net ; <nl> import java . net . InetAddress ; <nl> <nl> import org . apache . cassandra . db . ConsistencyLevel ; <nl> + import org . apache . cassandra . db . Mutation ; <nl> import org . apache . cassandra . io . IVersionedSerializer ; <nl> import org . apache . cassandra . service . StorageProxy ; <nl> + import org . apache . cassandra . service . paxos . Commit ; <nl> <nl> public class WriteCallbackInfo extends CallbackInfo <nl> { <nl> - public final MessageOut sentMessage ; <nl> + private final MessageOut sentMessage ; <nl> private final ConsistencyLevel consistencyLevel ; <nl> private final boolean allowHints ; <nl> <nl> @ @ - 44 , 6 + 46 , 13 @ @ public class WriteCallbackInfo extends CallbackInfo <nl> this . allowHints = allowHints ; <nl> } <nl> <nl> + Mutation mutation ( ) <nl> + { <nl> + return sentMessage . verb = = MessagingService . Verb . PAXOS _ COMMIT <nl> + ? ( ( Commit ) sentMessage . payload ) . makeMutation ( ) <nl> + : ( Mutation ) sentMessage . payload ; <nl> + } <nl> + <nl> public boolean shouldHint ( ) <nl> { <nl> return allowHints <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> index 0045006 . . 1536427 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageProxy . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> @ @ - 258 , 7 + 258 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> Tracing . trace ( " CAS precondition is met ; proposing client - requested updates for { } " , ballot ) ; <nl> if ( proposePaxos ( proposal , liveEndpoints , requiredParticipants , true , consistencyForPaxos ) ) <nl> { <nl> - commitPaxos ( proposal , consistencyForCommit ) ; <nl> + commitPaxos ( proposal , consistencyForCommit , true ) ; <nl> Tracing . trace ( " CAS successful " ) ; <nl> return null ; <nl> } <nl> @ @ - 394 , 7 + 394 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> { <nl> try <nl> { <nl> - commitPaxos ( refreshedInProgress , consistencyForCommit ) ; <nl> + commitPaxos ( refreshedInProgress , consistencyForCommit , false ) ; <nl> } <nl> catch ( WriteTimeoutException e ) <nl> { <nl> @ @ - 474 , 7 + 474 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> return false ; <nl> } <nl> <nl> - private static void commitPaxos ( Commit proposal , ConsistencyLevel consistencyLevel ) throws WriteTimeoutException <nl> + private static void commitPaxos ( Commit proposal , ConsistencyLevel consistencyLevel , boolean shouldHint ) throws WriteTimeoutException <nl> { <nl> boolean shouldBlock = consistencyLevel ! = ConsistencyLevel . ANY ; <nl> Keyspace keyspace = Keyspace . open ( proposal . update . metadata ( ) . ksName ) ; <nl> @ @ - 496 , 10 + 496 , 14 @ @ public class StorageProxy implements StorageProxyMBean <nl> if ( FailureDetector . instance . isAlive ( destination ) ) <nl> { <nl> if ( shouldBlock ) <nl> - MessagingService . instance ( ) . sendRR ( message , destination , responseHandler ) ; <nl> + MessagingService . instance ( ) . sendRR ( message , destination , responseHandler , shouldHint ) ; <nl> else <nl> MessagingService . instance ( ) . sendOneWay ( message , destination ) ; <nl> } <nl> + else if ( shouldHint ) <nl> + { <nl> + submitHint ( proposal . makeMutation ( ) , destination , null ) ; <nl> + } <nl> } <nl> <nl> if ( shouldBlock )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / tracing / Tracing . java b / src / java / org / apache / cassandra / tracing / Tracing . java <nl> index aef3816 . . c000af9 100644 <nl> - - - a / src / java / org / apache / cassandra / tracing / Tracing . java <nl> + + + b / src / java / org / apache / cassandra / tracing / Tracing . java <nl> @ @ - 170 , 16 + 170 , 7 @ @ public class Tracing <nl> CFMetaData cfMeta = CFMetaData . TraceSessionsCf ; <nl> ColumnFamily cf = ArrayBackedSortedColumns . factory . create ( cfMeta ) ; <nl> addColumn ( cf , buildName ( cfMeta , bytes ( " duration " ) ) , elapsed ) ; <nl> - < < < < < < < HEAD <nl> - RowMutation mutation = new RowMutation ( TRACE _ KS , sessionIdBytes , cf ) ; <nl> - StorageProxy . mutate ( Arrays . asList ( mutation ) , ConsistencyLevel . ANY ) ; <nl> - | | | | | | | merged common ancestors <nl> - RowMutation mutation = new RowMutation ( TRACE _ KS , sessionIdBytes ) ; <nl> - mutation . add ( cf ) ; <nl> - StorageProxy . mutate ( Arrays . asList ( mutation ) , ConsistencyLevel . ANY ) ; <nl> - = = = = = = = <nl> mutateWithCatch ( new RowMutation ( TRACE _ KS , sessionIdBytes , cf ) ) ; <nl> - > > > > > > > cassandra - 1 . 2 <nl> } <nl> } ) ; <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 3b0241c . . 7151883 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 9 
 + * Write hints for paxos commits ( CASSANDRA - 7342 ) 
 * ( cqlsh ) Fix timestamps before 1970 on Windows , always 
 use UTC for timestamp display ( CASSANDRA - 10000 ) 
 * ( cqlsh ) Avoid overwriting new config file with old config 
 diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java 
 index 1ad0e7c . . d7825d4 100644 
 - - - a / src / java / org / apache / cassandra / net / MessagingService . java 
 + + + b / src / java / org / apache / cassandra / net / MessagingService . java 
 @ @ - 379 , 8 + 379 , 7 @ @ public final class MessagingService implements MessagingServiceMBean 
 
 if ( expiredCallbackInfo . shouldHint ( ) ) 
 { 
 - Mutation mutation = ( Mutation ) ( ( WriteCallbackInfo ) expiredCallbackInfo ) . sentMessage . payload ; 
 - 
 + Mutation mutation = ( ( WriteCallbackInfo ) expiredCallbackInfo ) . mutation ( ) ; 
 return StorageProxy . submitHint ( mutation , expiredCallbackInfo . target , null ) ; 
 } 
 
 @ @ - 594 , 13 + 593 , 13 @ @ public final class MessagingService implements MessagingServiceMBean 
 } 
 
 public int addCallback ( IAsyncCallback cb , 
 - MessageOut < ? extends IMutation > message , 
 + MessageOut < ? > message , 
 InetAddress to , 
 long timeout , 
 ConsistencyLevel consistencyLevel , 
 boolean allowHints ) 
 { 
 - assert message . verb = = Verb . MUTATION | | message . verb = = Verb . COUNTER _ MUTATION ; 
 + assert message . verb = = Verb . MUTATION | | message . verb = = Verb . COUNTER _ MUTATION | | message . verb = = Verb . PAXOS _ COMMIT ; 
 int messageId = nextId ( ) ; 
 
 CallbackInfo previous = callbacks . put ( messageId , 
 @ @ - 651 , 7 + 650 , 7 @ @ public final class MessagingService implements MessagingServiceMBean 
 } 
 
 / * * 
 - * Send a mutation message to a given endpoint . This method specifies a callback 
 + * Send a mutation message or a Paxos Commit to a given endpoint . This method specifies a callback 
 * which is invoked with the actual response . 
 * Also holds the message ( only mutation messages ) to determine if it 
 * needs to trigger a hint ( uses StorageProxy for that ) . 
 @ @ - 662 , 7 + 661 , 7 @ @ public final class MessagingService implements MessagingServiceMBean 
 * suggest that a timeout occurred to the invoker of the send ( ) . 
 * @ return an reference to message id used to match with the result 
 * / 
 - public int sendRR ( MessageOut < ? extends IMutation > message , 
 + public int sendRR ( MessageOut < ? > message , 
 InetAddress to , 
 AbstractWriteResponseHandler handler , 
 boolean allowHints ) 
 diff - - git a / src / java / org / apache / cassandra / net / WriteCallbackInfo . java b / src / java / org / apache / cassandra / net / WriteCallbackInfo . java 
 index 987ec15 . . 0cf126f 100644 
 - - - a / src / java / org / apache / cassandra / net / WriteCallbackInfo . java 
 + + + b / src / java / org / apache / cassandra / net / WriteCallbackInfo . java 
 @ @ - 21 , 12 + 21 , 14 @ @ package org . apache . cassandra . net ; 
 import java . net . InetAddress ; 
 
 import org . apache . cassandra . db . ConsistencyLevel ; 
 + import org . apache . cassandra . db . Mutation ; 
 import org . apache . cassandra . io . IVersionedSerializer ; 
 import org . apache . cassandra . service . StorageProxy ; 
 + import org . apache . cassandra . service . paxos . Commit ; 
 
 public class WriteCallbackInfo extends CallbackInfo 
 { 
 - public final MessageOut sentMessage ; 
 + private final MessageOut sentMessage ; 
 private final ConsistencyLevel consistencyLevel ; 
 private final boolean allowHints ; 
 
 @ @ - 44 , 6 + 46 , 13 @ @ public class WriteCallbackInfo extends CallbackInfo 
 this . allowHints = allowHints ; 
 } 
 
 + Mutation mutation ( ) 
 + { 
 + return sentMessage . verb = = MessagingService . Verb . PAXOS _ COMMIT 
 + ? ( ( Commit ) sentMessage . payload ) . makeMutation ( ) 
 + : ( Mutation ) sentMessage . payload ; 
 + } 
 + 
 public boolean shouldHint ( ) 
 { 
 return allowHints 
 diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java 
 index 0045006 . . 1536427 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageProxy . java 
 + + + b / src / java / org / apache / cassandra / service / StorageProxy . java 
 @ @ - 258 , 7 + 258 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 Tracing . trace ( " CAS precondition is met ; proposing client - requested updates for { } " , ballot ) ; 
 if ( proposePaxos ( proposal , liveEndpoints , requiredParticipants , true , consistencyForPaxos ) ) 
 { 
 - commitPaxos ( proposal , consistencyForCommit ) ; 
 + commitPaxos ( proposal , consistencyForCommit , true ) ; 
 Tracing . trace ( " CAS successful " ) ; 
 return null ; 
 } 
 @ @ - 394 , 7 + 394 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 { 
 try 
 { 
 - commitPaxos ( refreshedInProgress , consistencyForCommit ) ; 
 + commitPaxos ( refreshedInProgress , consistencyForCommit , false ) ; 
 } 
 catch ( WriteTimeoutException e ) 
 { 
 @ @ - 474 , 7 + 474 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 return false ; 
 } 
 
 - private static void commitPaxos ( Commit proposal , ConsistencyLevel consistencyLevel ) throws WriteTimeoutException 
 + private static void commitPaxos ( Commit proposal , ConsistencyLevel consistencyLevel , boolean shouldHint ) throws WriteTimeoutException 
 { 
 boolean shouldBlock = consistencyLevel ! = ConsistencyLevel . ANY ; 
 Keyspace keyspace = Keyspace . open ( proposal . update . metadata ( ) . ksName ) ; 
 @ @ - 496 , 10 + 496 , 14 @ @ public class StorageProxy implements StorageProxyMBean 
 if ( FailureDetector . instance . isAlive ( destination ) ) 
 { 
 if ( shouldBlock ) 
 - MessagingService . instance ( ) . sendRR ( message , destination , responseHandler ) ; 
 + MessagingService . instance ( ) . sendRR ( message , destination , responseHandler , shouldHint ) ; 
 else 
 MessagingService . instance ( ) . sendOneWay ( message , destination ) ; 
 } 
 + else if ( shouldHint ) 
 + { 
 + submitHint ( proposal . makeMutation ( ) , destination , null ) ; 
 + } 
 } 
 
 if ( shouldBlock )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / tracing / Tracing . java b / src / java / org / apache / cassandra / tracing / Tracing . java 
 index aef3816 . . c000af9 100644 
 - - - a / src / java / org / apache / cassandra / tracing / Tracing . java 
 + + + b / src / java / org / apache / cassandra / tracing / Tracing . java 
 @ @ - 170 , 16 + 170 , 7 @ @ public class Tracing 
 CFMetaData cfMeta = CFMetaData . TraceSessionsCf ; 
 ColumnFamily cf = ArrayBackedSortedColumns . factory . create ( cfMeta ) ; 
 addColumn ( cf , buildName ( cfMeta , bytes ( " duration " ) ) , elapsed ) ; 
 - < < < < < < < HEAD 
 - RowMutation mutation = new RowMutation ( TRACE _ KS , sessionIdBytes , cf ) ; 
 - StorageProxy . mutate ( Arrays . asList ( mutation ) , ConsistencyLevel . ANY ) ; 
 - | | | | | | | merged common ancestors 
 - RowMutation mutation = new RowMutation ( TRACE _ KS , sessionIdBytes ) ; 
 - mutation . add ( cf ) ; 
 - StorageProxy . mutate ( Arrays . asList ( mutation ) , ConsistencyLevel . ANY ) ; 
 - = = = = = = = 
 mutateWithCatch ( new RowMutation ( TRACE _ KS , sessionIdBytes , cf ) ) ; 
 - > > > > > > > cassandra - 1 . 2 
 } 
 } ) ; 

