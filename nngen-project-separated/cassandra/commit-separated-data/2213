BLEU SCORE: 0.668740304976422

TEST MSG: merge from 2 . 1
GENERATED MSG: merge from 2 . 0

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index ba76fb7 . . b781604 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 51 , 6 + 51 , 7 @ @ Merged from 2 . 0 : <nl> * Fix UDT field selection with empty fields ( CASSANDRA - 7670 ) <nl> * Bogus deserialization of static cells from sstable ( CASSANDRA - 7684 ) <nl> Merged from 2 . 0 : <nl> + * Clone token map outside of hot gossip loops ( CASSANDRA - 7758 ) <nl> * Fix MS expiring map timeout for Paxos messages ( CASSANDRA - 7752 ) <nl> * Do not flush on truncate if durable _ writes is false ( CASSANDRA - 7750 ) <nl> * Give CRR a default input _ cql Statement ( CASSANDRA - 7226 ) <nl> @ @ - 178 , 6 + 179 , 13 @ @ Merged from 2 . 0 : <nl> * Backport CASSANDRA - 6747 ( CASSANDRA - 7560 ) <nl> * Track max / min timestamps for range tombstones ( CASSANDRA - 7647 ) <nl> * Fix NPE when listing saved caches dir ( CASSANDRA - 7632 ) <nl> + Merged from 1 . 2 : <nl> + * Add stop method to EmbeddedCassandraService ( CASSANDRA - 7595 ) <nl> + * Support connecting to ipv6 jmx with nodetool ( CASSANDRA - 7669 ) <nl> + * Set gc _ grace _ seconds to seven days for system schema tables ( CASSANDRA - 7668 ) <nl> + * SimpleSeedProvider no longer caches seeds forever ( CASSANDRA - 7663 ) <nl> + * Set correct stream ID on responses when non - Exception Throwables <nl> + are thrown while handling native protocol messages ( CASSANDRA - 7470 ) <nl> <nl> <nl> 2 . 1 . 0 - rc1 <nl> diff - - git a / src / java / org / apache / cassandra / locator / TokenMetadata . java b / src / java / org / apache / cassandra / locator / TokenMetadata . java <nl> index 2a6a624 . . a609c67 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / TokenMetadata . java <nl> + + + b / src / java / org / apache / cassandra / locator / TokenMetadata . java <nl> @ @ - 722 , 9 + 722 , 10 @ @ public class TokenMetadata <nl> <nl> / / for each of those ranges , find what new nodes will be responsible for the range when <nl> / / all leaving nodes are gone . <nl> + TokenMetadata metadata = cloneOnlyTokenMap ( ) ; / / don ' t do this in the loop ! # 7758 <nl> for ( Range < Token > range : affectedRanges ) <nl> { <nl> - Set < InetAddress > currentEndpoints = ImmutableSet . copyOf ( strategy . calculateNaturalEndpoints ( range . right , cloneOnlyTokenMap ( ) ) ) ; <nl> + Set < InetAddress > currentEndpoints = ImmutableSet . copyOf ( strategy . calculateNaturalEndpoints ( range . right , metadata ) ) ; <nl> Set < InetAddress > newEndpoints = ImmutableSet . copyOf ( strategy . calculateNaturalEndpoints ( range . right , allLeftMetadata ) ) ; <nl> newPendingRanges . putAll ( range , Sets . difference ( newEndpoints , currentEndpoints ) ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 689d652 . . 11757e9 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 1933 , 8 + 1933 , 9 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> Map < Range < Token > , List < InetAddress > > currentReplicaEndpoints = new HashMap < > ( ) ; <nl> <nl> / / Find ( for each range ) all nodes that store replicas for these ranges as well <nl> + TokenMetadata metadata = tokenMetadata . cloneOnlyTokenMap ( ) ; / / don ' t do this in the loop ! # 7758 <nl> for ( Range < Token > range : ranges ) <nl> - currentReplicaEndpoints . put ( range , Keyspace . open ( keyspaceName ) . getReplicationStrategy ( ) . calculateNaturalEndpoints ( range . right , tokenMetadata . cloneOnlyTokenMap ( ) ) ) ; <nl> + currentReplicaEndpoints . put ( range , Keyspace . open ( keyspaceName ) . getReplicationStrategy ( ) . calculateNaturalEndpoints ( range . right , metadata ) ) ; <nl> <nl> TokenMetadata temp = tokenMetadata . cloneAfterAllLeft ( ) ; <nl>
NEAREST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 4d8ae14 . . 254cc2d 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 340 , 7 + 340 , 7 @ @ <nl> < dependency groupId = " com . google . guava " artifactId = " guava " version = " 13 . 0 . 1 " / > <nl> < dependency groupId = " commons - cli " artifactId = " commons - cli " version = " 1 . 1 " / > <nl> < dependency groupId = " commons - codec " artifactId = " commons - codec " version = " 1 . 2 " / > <nl> - < dependency groupId = " commons - lang " artifactId = " commons - lang " version = " 3 . 1 " / > <nl> + < dependency groupId = " org . apache . commons " artifactId = " commons - lang3 " version = " 3 . 1 " / > <nl> < dependency groupId = " com . googlecode . concurrentlinkedhashmap " artifactId = " concurrentlinkedhashmap - lru " version = " 1 . 3 " / > <nl> < dependency groupId = " org . antlr " artifactId = " antlr " version = " 3 . 2 " / > <nl> < dependency groupId = " org . slf4j " artifactId = " slf4j - api " version = " 1 . 7 . 2 " / > <nl> @ @ - 438 , 7 + 438 , 7 @ @ <nl> < dependency groupId = " com . google . guava " artifactId = " guava " / > <nl> < dependency groupId = " commons - cli " artifactId = " commons - cli " / > <nl> < dependency groupId = " commons - codec " artifactId = " commons - codec " / > <nl> - < dependency groupId = " commons - lang " artifactId = " commons - lang " / > <nl> + < dependency groupId = " org . apache . commons " artifactId = " commons - lang3 " / > <nl> < dependency groupId = " com . googlecode . concurrentlinkedhashmap " artifactId = " concurrentlinkedhashmap - lru " / > <nl> < dependency groupId = " org . antlr " artifactId = " antlr " / > <nl> < dependency groupId = " org . slf4j " artifactId = " slf4j - api " / > <nl> @ @ - 479 , 7 + 479 , 7 @ @ <nl> artifactId = " cassandra - parent " <nl> version = " $ { version } " / > <nl> < scm connection = " $ { scm . connection } " developerConnection = " $ { scm . developerConnection } " url = " $ { scm . url } " / > <nl> - < dependency groupId = " commons - lang " artifactId = " commons - lang " / > <nl> + < dependency groupId = " org . apache . commons " artifactId = " commons - lang3 " / > <nl> < dependency groupId = " org . slf4j " artifactId = " slf4j - api " / > <nl> < dependency groupId = " org . apache . thrift " artifactId = " libthrift " / > <nl> < / artifact : pom >

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index ba76fb7 . . b781604 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 51 , 6 + 51 , 7 @ @ Merged from 2 . 0 : 
 * Fix UDT field selection with empty fields ( CASSANDRA - 7670 ) 
 * Bogus deserialization of static cells from sstable ( CASSANDRA - 7684 ) 
 Merged from 2 . 0 : 
 + * Clone token map outside of hot gossip loops ( CASSANDRA - 7758 ) 
 * Fix MS expiring map timeout for Paxos messages ( CASSANDRA - 7752 ) 
 * Do not flush on truncate if durable _ writes is false ( CASSANDRA - 7750 ) 
 * Give CRR a default input _ cql Statement ( CASSANDRA - 7226 ) 
 @ @ - 178 , 6 + 179 , 13 @ @ Merged from 2 . 0 : 
 * Backport CASSANDRA - 6747 ( CASSANDRA - 7560 ) 
 * Track max / min timestamps for range tombstones ( CASSANDRA - 7647 ) 
 * Fix NPE when listing saved caches dir ( CASSANDRA - 7632 ) 
 + Merged from 1 . 2 : 
 + * Add stop method to EmbeddedCassandraService ( CASSANDRA - 7595 ) 
 + * Support connecting to ipv6 jmx with nodetool ( CASSANDRA - 7669 ) 
 + * Set gc _ grace _ seconds to seven days for system schema tables ( CASSANDRA - 7668 ) 
 + * SimpleSeedProvider no longer caches seeds forever ( CASSANDRA - 7663 ) 
 + * Set correct stream ID on responses when non - Exception Throwables 
 + are thrown while handling native protocol messages ( CASSANDRA - 7470 ) 
 
 
 2 . 1 . 0 - rc1 
 diff - - git a / src / java / org / apache / cassandra / locator / TokenMetadata . java b / src / java / org / apache / cassandra / locator / TokenMetadata . java 
 index 2a6a624 . . a609c67 100644 
 - - - a / src / java / org / apache / cassandra / locator / TokenMetadata . java 
 + + + b / src / java / org / apache / cassandra / locator / TokenMetadata . java 
 @ @ - 722 , 9 + 722 , 10 @ @ public class TokenMetadata 
 
 / / for each of those ranges , find what new nodes will be responsible for the range when 
 / / all leaving nodes are gone . 
 + TokenMetadata metadata = cloneOnlyTokenMap ( ) ; / / don ' t do this in the loop ! # 7758 
 for ( Range < Token > range : affectedRanges ) 
 { 
 - Set < InetAddress > currentEndpoints = ImmutableSet . copyOf ( strategy . calculateNaturalEndpoints ( range . right , cloneOnlyTokenMap ( ) ) ) ; 
 + Set < InetAddress > currentEndpoints = ImmutableSet . copyOf ( strategy . calculateNaturalEndpoints ( range . right , metadata ) ) ; 
 Set < InetAddress > newEndpoints = ImmutableSet . copyOf ( strategy . calculateNaturalEndpoints ( range . right , allLeftMetadata ) ) ; 
 newPendingRanges . putAll ( range , Sets . difference ( newEndpoints , currentEndpoints ) ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 689d652 . . 11757e9 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 1933 , 8 + 1933 , 9 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 Map < Range < Token > , List < InetAddress > > currentReplicaEndpoints = new HashMap < > ( ) ; 
 
 / / Find ( for each range ) all nodes that store replicas for these ranges as well 
 + TokenMetadata metadata = tokenMetadata . cloneOnlyTokenMap ( ) ; / / don ' t do this in the loop ! # 7758 
 for ( Range < Token > range : ranges ) 
 - currentReplicaEndpoints . put ( range , Keyspace . open ( keyspaceName ) . getReplicationStrategy ( ) . calculateNaturalEndpoints ( range . right , tokenMetadata . cloneOnlyTokenMap ( ) ) ) ; 
 + currentReplicaEndpoints . put ( range , Keyspace . open ( keyspaceName ) . getReplicationStrategy ( ) . calculateNaturalEndpoints ( range . right , metadata ) ) ; 
 
 TokenMetadata temp = tokenMetadata . cloneAfterAllLeft ( ) ; 


NEAREST DIFF:
diff - - git a / build . xml b / build . xml 
 index 4d8ae14 . . 254cc2d 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 340 , 7 + 340 , 7 @ @ 
 < dependency groupId = " com . google . guava " artifactId = " guava " version = " 13 . 0 . 1 " / > 
 < dependency groupId = " commons - cli " artifactId = " commons - cli " version = " 1 . 1 " / > 
 < dependency groupId = " commons - codec " artifactId = " commons - codec " version = " 1 . 2 " / > 
 - < dependency groupId = " commons - lang " artifactId = " commons - lang " version = " 3 . 1 " / > 
 + < dependency groupId = " org . apache . commons " artifactId = " commons - lang3 " version = " 3 . 1 " / > 
 < dependency groupId = " com . googlecode . concurrentlinkedhashmap " artifactId = " concurrentlinkedhashmap - lru " version = " 1 . 3 " / > 
 < dependency groupId = " org . antlr " artifactId = " antlr " version = " 3 . 2 " / > 
 < dependency groupId = " org . slf4j " artifactId = " slf4j - api " version = " 1 . 7 . 2 " / > 
 @ @ - 438 , 7 + 438 , 7 @ @ 
 < dependency groupId = " com . google . guava " artifactId = " guava " / > 
 < dependency groupId = " commons - cli " artifactId = " commons - cli " / > 
 < dependency groupId = " commons - codec " artifactId = " commons - codec " / > 
 - < dependency groupId = " commons - lang " artifactId = " commons - lang " / > 
 + < dependency groupId = " org . apache . commons " artifactId = " commons - lang3 " / > 
 < dependency groupId = " com . googlecode . concurrentlinkedhashmap " artifactId = " concurrentlinkedhashmap - lru " / > 
 < dependency groupId = " org . antlr " artifactId = " antlr " / > 
 < dependency groupId = " org . slf4j " artifactId = " slf4j - api " / > 
 @ @ - 479 , 7 + 479 , 7 @ @ 
 artifactId = " cassandra - parent " 
 version = " $ { version } " / > 
 < scm connection = " $ { scm . connection } " developerConnection = " $ { scm . developerConnection } " url = " $ { scm . url } " / > 
 - < dependency groupId = " commons - lang " artifactId = " commons - lang " / > 
 + < dependency groupId = " org . apache . commons " artifactId = " commons - lang3 " / > 
 < dependency groupId = " org . slf4j " artifactId = " slf4j - api " / > 
 < dependency groupId = " org . apache . thrift " artifactId = " libthrift " / > 
 < / artifact : pom >
