BLEU SCORE: 0.01763751180315069

TEST MSG: Reduce contention getting instances of CompositeType
GENERATED MSG: Expose whether jna is enabled and memory is locked via JMX

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c02e2fa . . 9a0baaa 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 2 . 4 <nl> + * Reduce contention getting instances of CompositeType ( CASSANDRA - 10433 ) <nl> Merged from 2 . 1 : <nl> * ( cqlsh ) Distinguish negative and positive infinity in output ( CASSANDRA - 10523 ) <nl> * ( cqlsh ) allow custom time _ format for COPY TO ( CASSANDRA - 8970 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / marshal / CompositeType . java b / src / java / org / apache / cassandra / db / marshal / CompositeType . java <nl> index 0218411 . . 9892118 100644 <nl> - - - a / src / java / org / apache / cassandra / db / marshal / CompositeType . java <nl> + + + b / src / java / org / apache / cassandra / db / marshal / CompositeType . java <nl> @ @ - 19 , 18 + 19 , 18 @ @ package org . apache . cassandra . db . marshal ; <nl> <nl> import java . io . IOException ; <nl> import java . nio . ByteBuffer ; <nl> - import java . util . Arrays ; <nl> import java . util . ArrayList ; <nl> - import java . util . HashMap ; <nl> + import java . util . Arrays ; <nl> import java . util . List ; <nl> - import java . util . Map ; <nl> + import java . util . concurrent . ConcurrentHashMap ; <nl> + import java . util . concurrent . ConcurrentMap ; <nl> <nl> import com . google . common . collect . ImmutableList ; <nl> <nl> - import org . apache . cassandra . exceptions . ConfigurationException ; <nl> - import org . apache . cassandra . exceptions . SyntaxException ; <nl> import org . apache . cassandra . cql3 . ColumnIdentifier ; <nl> import org . apache . cassandra . cql3 . Operator ; <nl> + import org . apache . cassandra . exceptions . ConfigurationException ; <nl> + import org . apache . cassandra . exceptions . SyntaxException ; <nl> import org . apache . cassandra . io . util . DataOutputBuffer ; <nl> import org . apache . cassandra . io . util . DataOutputBufferFixed ; <nl> import org . apache . cassandra . serializers . MarshalException ; <nl> @ @ - 68 , 7 + 68 , 7 @ @ public class CompositeType extends AbstractCompositeType <nl> public final List < AbstractType < ? > > types ; <nl> <nl> / / interning instances <nl> - private static final Map < List < AbstractType < ? > > , CompositeType > instances = new HashMap < List < AbstractType < ? > > , CompositeType > ( ) ; <nl> + private static final ConcurrentMap < List < AbstractType < ? > > , CompositeType > instances = new ConcurrentHashMap < List < AbstractType < ? > > , CompositeType > ( ) ; <nl> <nl> public static CompositeType getInstance ( TypeParser parser ) throws ConfigurationException , SyntaxException <nl> { <nl> @ @ - 98 , 7 + 98 , 7 @ @ public class CompositeType extends AbstractCompositeType <nl> return true ; <nl> } <nl> <nl> - public static synchronized CompositeType getInstance ( List < AbstractType < ? > > types ) <nl> + public static CompositeType getInstance ( List < AbstractType < ? > > types ) <nl> { <nl> assert types ! = null & & ! types . isEmpty ( ) ; <nl> <nl> @ @ - 106 , 7 + 106 , 11 @ @ public class CompositeType extends AbstractCompositeType <nl> if ( ct = = null ) <nl> { <nl> ct = new CompositeType ( types ) ; <nl> - instances . put ( types , ct ) ; <nl> + CompositeType previous = instances . putIfAbsent ( types , ct ) ; <nl> + if ( previous ! = null ) <nl> + { <nl> + ct = previous ; <nl> + } <nl> } <nl> return ct ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / NativeAccessMBean . java b / src / java / org / apache / cassandra / service / NativeAccessMBean . java <nl> new file mode 100644 <nl> index 0000000 . . 39b96c5 <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / service / NativeAccessMBean . java <nl> @ @ - 0 , 0 + 1 , 9 @ @ <nl> + package org . apache . cassandra . service ; <nl> + <nl> + public interface NativeAccessMBean <nl> + { <nl> + boolean isAvailable ( ) ; <nl> + <nl> + boolean isMemoryLockable ( ) ; <nl> + } <nl> +

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c02e2fa . . 9a0baaa 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 2 . 4 
 + * Reduce contention getting instances of CompositeType ( CASSANDRA - 10433 ) 
 Merged from 2 . 1 : 
 * ( cqlsh ) Distinguish negative and positive infinity in output ( CASSANDRA - 10523 ) 
 * ( cqlsh ) allow custom time _ format for COPY TO ( CASSANDRA - 8970 ) 
 diff - - git a / src / java / org / apache / cassandra / db / marshal / CompositeType . java b / src / java / org / apache / cassandra / db / marshal / CompositeType . java 
 index 0218411 . . 9892118 100644 
 - - - a / src / java / org / apache / cassandra / db / marshal / CompositeType . java 
 + + + b / src / java / org / apache / cassandra / db / marshal / CompositeType . java 
 @ @ - 19 , 18 + 19 , 18 @ @ package org . apache . cassandra . db . marshal ; 
 
 import java . io . IOException ; 
 import java . nio . ByteBuffer ; 
 - import java . util . Arrays ; 
 import java . util . ArrayList ; 
 - import java . util . HashMap ; 
 + import java . util . Arrays ; 
 import java . util . List ; 
 - import java . util . Map ; 
 + import java . util . concurrent . ConcurrentHashMap ; 
 + import java . util . concurrent . ConcurrentMap ; 
 
 import com . google . common . collect . ImmutableList ; 
 
 - import org . apache . cassandra . exceptions . ConfigurationException ; 
 - import org . apache . cassandra . exceptions . SyntaxException ; 
 import org . apache . cassandra . cql3 . ColumnIdentifier ; 
 import org . apache . cassandra . cql3 . Operator ; 
 + import org . apache . cassandra . exceptions . ConfigurationException ; 
 + import org . apache . cassandra . exceptions . SyntaxException ; 
 import org . apache . cassandra . io . util . DataOutputBuffer ; 
 import org . apache . cassandra . io . util . DataOutputBufferFixed ; 
 import org . apache . cassandra . serializers . MarshalException ; 
 @ @ - 68 , 7 + 68 , 7 @ @ public class CompositeType extends AbstractCompositeType 
 public final List < AbstractType < ? > > types ; 
 
 / / interning instances 
 - private static final Map < List < AbstractType < ? > > , CompositeType > instances = new HashMap < List < AbstractType < ? > > , CompositeType > ( ) ; 
 + private static final ConcurrentMap < List < AbstractType < ? > > , CompositeType > instances = new ConcurrentHashMap < List < AbstractType < ? > > , CompositeType > ( ) ; 
 
 public static CompositeType getInstance ( TypeParser parser ) throws ConfigurationException , SyntaxException 
 { 
 @ @ - 98 , 7 + 98 , 7 @ @ public class CompositeType extends AbstractCompositeType 
 return true ; 
 } 
 
 - public static synchronized CompositeType getInstance ( List < AbstractType < ? > > types ) 
 + public static CompositeType getInstance ( List < AbstractType < ? > > types ) 
 { 
 assert types ! = null & & ! types . isEmpty ( ) ; 
 
 @ @ - 106 , 7 + 106 , 11 @ @ public class CompositeType extends AbstractCompositeType 
 if ( ct = = null ) 
 { 
 ct = new CompositeType ( types ) ; 
 - instances . put ( types , ct ) ; 
 + CompositeType previous = instances . putIfAbsent ( types , ct ) ; 
 + if ( previous ! = null ) 
 + { 
 + ct = previous ; 
 + } 
 } 
 return ct ; 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / NativeAccessMBean . java b / src / java / org / apache / cassandra / service / NativeAccessMBean . java 
 new file mode 100644 
 index 0000000 . . 39b96c5 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / service / NativeAccessMBean . java 
 @ @ - 0 , 0 + 1 , 9 @ @ 
 + package org . apache . cassandra . service ; 
 + 
 + public interface NativeAccessMBean 
 + { 
 + boolean isAvailable ( ) ; 
 + 
 + boolean isMemoryLockable ( ) ; 
 + } 
 +
