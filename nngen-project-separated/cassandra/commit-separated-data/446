BLEU SCORE: 0.02133165846478451

TEST MSG: Propagate row deletion info for 2i tables on upgrade
GENERATED MSG: Support multiple addComplexDeletion ( ) call in BTreeRow . Builder

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 7232d5e . . 2017b78 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 13 <nl> + * Propagate row deletions in 2i tables on upgrade ( CASSANDRA - 13320 ) <nl> * Slice . isEmpty ( ) returns false for some empty slices ( CASSANDRA - 13305 ) <nl> * Add formatted row output to assertEmpty in CQL Tester ( CASSANDRA - 13238 ) <nl> Merged from 2 . 2 : <nl> diff - - git a / src / java / org / apache / cassandra / db / LegacyLayout . java b / src / java / org / apache / cassandra / db / LegacyLayout . java <nl> index 972bb9f . . bfe3bff 100644 <nl> - - - a / src / java / org / apache / cassandra / db / LegacyLayout . java <nl> + + + b / src / java / org / apache / cassandra / db / LegacyLayout . java <nl> @ @ - 1196 , 8 + 1196 , 12 @ @ public abstract class LegacyLayout <nl> assert ! cell . value . hasRemaining ( ) ; <nl> / / In 2 . 1 , the row marker expired cell might have been converted into a deleted one by compaction . So , <nl> / / we need to set the primary key liveness info only if the cell is not a deleted one . <nl> + / / The only time in 2 . x that we actually delete a row marker is in 2i tables , so in that case we do <nl> + / / want to actually propagate the row deletion . ( CASSANDRA - 13320 ) <nl> if ( ! cell . isTombstone ( ) ) <nl> builder . addPrimaryKeyLivenessInfo ( LivenessInfo . create ( cell . timestamp , cell . ttl , cell . localDeletionTime ) ) ; <nl> + else if ( metadata . isIndex ( ) ) <nl> + builder . addRowDeletion ( Row . Deletion . regular ( new DeletionTime ( cell . timestamp , cell . localDeletionTime ) ) ) ; <nl> } <nl> else <nl> {
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 7232d5e . . 2017b78 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 13 
 + * Propagate row deletions in 2i tables on upgrade ( CASSANDRA - 13320 ) 
 * Slice . isEmpty ( ) returns false for some empty slices ( CASSANDRA - 13305 ) 
 * Add formatted row output to assertEmpty in CQL Tester ( CASSANDRA - 13238 ) 
 Merged from 2 . 2 : 
 diff - - git a / src / java / org / apache / cassandra / db / LegacyLayout . java b / src / java / org / apache / cassandra / db / LegacyLayout . java 
 index 972bb9f . . bfe3bff 100644 
 - - - a / src / java / org / apache / cassandra / db / LegacyLayout . java 
 + + + b / src / java / org / apache / cassandra / db / LegacyLayout . java 
 @ @ - 1196 , 8 + 1196 , 12 @ @ public abstract class LegacyLayout 
 assert ! cell . value . hasRemaining ( ) ; 
 / / In 2 . 1 , the row marker expired cell might have been converted into a deleted one by compaction . So , 
 / / we need to set the primary key liveness info only if the cell is not a deleted one . 
 + / / The only time in 2 . x that we actually delete a row marker is in 2i tables , so in that case we do 
 + / / want to actually propagate the row deletion . ( CASSANDRA - 13320 ) 
 if ( ! cell . isTombstone ( ) ) 
 builder . addPrimaryKeyLivenessInfo ( LivenessInfo . create ( cell . timestamp , cell . ttl , cell . localDeletionTime ) ) ; 
 + else if ( metadata . isIndex ( ) ) 
 + builder . addRowDeletion ( Row . Deletion . regular ( new DeletionTime ( cell . timestamp , cell . localDeletionTime ) ) ) ; 
 } 
 else 
 {

NEAREST DIFF:
ELIMINATEDSENTENCE
