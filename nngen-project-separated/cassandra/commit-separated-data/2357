BLEU SCORE: 0.05522397783539471

TEST MSG: Fix CC # collectTimeOrderedData ( ) tombstone optimisations
GENERATED MSG: Fix FD leak on slice read path

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 1ff5675 . . 84be96d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 0 . 9 <nl> + * Fix CC # collectTimeOrderedData ( ) tombstone optimisations ( CASSANDRA - 7394 ) <nl> * Fix assertion error in CL . ANY timeout handling ( CASSANDRA - 7364 ) <nl> * Handle empty CFs in Memtable # maybeUpdateLiveRatio ( ) ( CASSANDRA - 7401 ) <nl> * Fix native protocol CAS batches ( CASSANDRA - 7337 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / CollationController . java b / src / java / org / apache / cassandra / db / CollationController . java <nl> index 33d77ee . . 4a08a26 100644 <nl> - - - a / src / java / org / apache / cassandra / db / CollationController . java <nl> + + + b / src / java / org / apache / cassandra / db / CollationController . java <nl> @ @ - 77 , 6 + 77 , 7 @ @ public class CollationController <nl> try <nl> { <nl> Tracing . trace ( " Merging memtable contents " ) ; <nl> + long mostRecentRowTombstone = Long . MIN _ VALUE ; <nl> for ( Memtable memtable : view . memtables ) <nl> { <nl> OnDiskAtomIterator iter = filter . getMemtableColumnIterator ( memtable ) ; <nl> @ @ - 89 , 6 + 90 , 7 @ @ public class CollationController <nl> } <nl> <nl> container . addAll ( temp , HeapAllocator . instance ) ; <nl> + mostRecentRowTombstone = container . deletionInfo ( ) . getTopLevelDeletion ( ) . markedForDeleteAt ; <nl> temp . clear ( ) ; <nl> } <nl> <nl> @ @ - 102 , 7 + 104 , 6 @ @ public class CollationController <nl> Collections . sort ( view . sstables , SSTable . maxTimestampComparator ) ; <nl> <nl> / / read sorted sstables <nl> - long mostRecentRowTombstone = Long . MIN _ VALUE ; <nl> for ( SSTableReader sstable : view . sstables ) <nl> { <nl> / / if we ' ve already seen a row tombstone with a timestamp greater <nl> @ @ - 122 , 8 + 123 , 6 @ @ public class CollationController <nl> if ( iter . getColumnFamily ( ) ! = null ) <nl> { <nl> ColumnFamily cf = iter . getColumnFamily ( ) ; <nl> - if ( cf . isMarkedForDelete ( ) ) <nl> - mostRecentRowTombstone = cf . deletionInfo ( ) . getTopLevelDeletion ( ) . markedForDeleteAt ; <nl> temp . delete ( cf ) ; <nl> sstablesIterated + + ; <nl> while ( iter . hasNext ( ) ) <nl> @ @ - 131 , 6 + 130 , 7 @ @ public class CollationController <nl> } <nl> <nl> container . addAll ( temp , HeapAllocator . instance ) ; <nl> + mostRecentRowTombstone = container . deletionInfo ( ) . getTopLevelDeletion ( ) . markedForDeleteAt ; <nl> temp . clear ( ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 9c0bc6b . . dc56d90 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 3 + 1 , 7 @ @ <nl> + 1 . 2 . 13 <nl> + * Optimize FD phi calculation ( CASSANDRA - 6386 ) <nl> + <nl> + <nl> 1 . 2 . 12 <nl> * Invalidate row cache when dropping CF ( CASSANDRA - 6351 ) <nl> * add non - jamm path for cached statements ( CASSANDRA - 6293 ) <nl> diff - - git a / src / java / org / apache / cassandra / gms / FailureDetector . java b / src / java / org / apache / cassandra / gms / FailureDetector . java <nl> index 26d78ab . . e4ffb88 100644 <nl> - - - a / src / java / org / apache / cassandra / gms / FailureDetector . java <nl> + + + b / src / java / org / apache / cassandra / gms / FailureDetector . java <nl> @ @ - 177 , 13 + 177 , 6 @ @ public class FailureDetector implements IFailureDetector , FailureDetectorMBean <nl> return epState ! = null & & epState . isAlive ( ) ; <nl> } <nl> <nl> - public void clear ( InetAddress ep ) <nl> - { <nl> - ArrivalWindow heartbeatWindow = arrivalSamples . get ( ep ) ; <nl> - if ( heartbeatWindow ! = null ) <nl> - heartbeatWindow . clear ( ) ; <nl> - } <nl> - <nl> public void report ( InetAddress ep ) <nl> { <nl> if ( logger . isTraceEnabled ( ) ) <nl> @ @ - 312 , 11 + 305 , 6 @ @ class ArrivalWindow <nl> return arrivalIntervals . mean ( ) ; <nl> } <nl> <nl> - void clear ( ) <nl> - { <nl> - arrivalIntervals . clear ( ) ; <nl> - } <nl> - <nl> / / see CASSANDRA - 2597 for an explanation of the math at work here . <nl> double phi ( long tnow ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> index cbb7d80 . . 545d26b 100644 <nl> - - - a / src / java / org / apache / cassandra / gms / Gossiper . java <nl> + + + b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> @ @ - 775 , 7 + 775 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean <nl> if ( ! localEndpointState . isAlive ( ) ) <nl> { <nl> logger . debug ( " Clearing interval times for { } due to generation change " , endpoint ) ; <nl> - fd . clear ( endpoint ) ; <nl> + fd . remove ( endpoint ) ; <nl> } <nl> fd . report ( endpoint ) ; <nl> return ; <nl> diff - - git a / src / java / org / apache / cassandra / gms / IFailureDetector . java b / src / java / org / apache / cassandra / gms / IFailureDetector . java <nl> index 444c100 . . 4e9d528 100644 <nl> - - - a / src / java / org / apache / cassandra / gms / IFailureDetector . java <nl> + + + b / src / java / org / apache / cassandra / gms / IFailureDetector . java <nl> @ @ - 38 , 12 + 38 , 6 @ @ public interface IFailureDetector <nl> public boolean isAlive ( InetAddress ep ) ; <nl> <nl> / * * <nl> - * Clear any existing interval timings for this endpoint <nl> - * @ param ep <nl> - * / <nl> - public void clear ( InetAddress ep ) ; <nl> - <nl> - / * * <nl> * This method is invoked by any entity wanting to interrogate the status of an endpoint . <nl> * In our case it would be the Gossiper . The Failure Detector will then calculate Phi and <nl> * deem an endpoint as suspicious or alive as explained in the Hayashibara paper . <nl> diff - - git a / src / java / org / apache / cassandra / utils / BoundedStatsDeque . java b / src / java / org / apache / cassandra / utils / BoundedStatsDeque . java <nl> index 43d2ce4 . . c9aa028 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / BoundedStatsDeque . java <nl> + + + b / src / java / org / apache / cassandra / utils / BoundedStatsDeque . java <nl> @ @ - 20 , 17 + 20 , 22 @ @ package org . apache . cassandra . utils ; <nl> import java . util . Iterator ; <nl> import java . util . NoSuchElementException ; <nl> import java . util . concurrent . LinkedBlockingDeque ; <nl> + import java . util . concurrent . atomic . AtomicReference ; <nl> + <nl> + import com . google . common . util . concurrent . AtomicDouble ; <nl> <nl> / * * <nl> * bounded threadsafe deque <nl> * / <nl> public class BoundedStatsDeque implements Iterable < Double > <nl> { <nl> - protected final LinkedBlockingDeque < Double > deque ; <nl> + private final LinkedBlockingDeque < Double > deque ; <nl> + private final AtomicDouble sum ; <nl> <nl> public BoundedStatsDeque ( int size ) <nl> { <nl> deque = new LinkedBlockingDeque < Double > ( size ) ; <nl> + sum = new AtomicDouble ( 0 ) ; <nl> } <nl> <nl> public Iterator < Double > iterator ( ) <nl> @ @ - 43 , 35 + 48 , 20 @ @ public class BoundedStatsDeque implements Iterable < Double > <nl> return deque . size ( ) ; <nl> } <nl> <nl> - public void clear ( ) <nl> - { <nl> - deque . clear ( ) ; <nl> - } <nl> - <nl> public void add ( double i ) <nl> { <nl> if ( ! deque . offer ( i ) ) <nl> { <nl> - try <nl> - { <nl> - deque . remove ( ) ; <nl> - } <nl> - catch ( NoSuchElementException e ) <nl> - { <nl> - / / oops , clear ( ) beat us to it <nl> - } <nl> + Double removed = deque . remove ( ) ; <nl> + sum . addAndGet ( - removed ) ; <nl> deque . offer ( i ) ; <nl> } <nl> + sum . addAndGet ( i ) ; <nl> } <nl> <nl> public double sum ( ) <nl> { <nl> - double sum = 0d ; <nl> - for ( Double interval : deque ) <nl> - { <nl> - sum + = interval ; <nl> - } <nl> - return sum ; <nl> + return sum . get ( ) ; <nl> } <nl> <nl> public double mean ( ) <nl> diff - - git a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java <nl> index ae7e36c . . 9931e85 100644 <nl> - - - a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java <nl> + + + b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java <nl> @ @ - 198 , 7 + 198 , 6 @ @ public class BootStrapperTest extends SchemaLoader <nl> public void unregisterFailureDetectionEventListener ( IFailureDetectionEventListener listener ) { throw new UnsupportedOperationException ( ) ; } <nl> public void remove ( InetAddress ep ) { throw new UnsupportedOperationException ( ) ; } <nl> public void forceConviction ( InetAddress ep ) { throw new UnsupportedOperationException ( ) ; } <nl> - public void clear ( InetAddress ep ) { throw new UnsupportedOperationException ( ) ; } <nl> } ; <nl> s . addSourceFilter ( new RangeStreamer . FailureDetectorSourceFilter ( mockFailureDetector ) ) ; <nl> s . addRanges ( table , Table . open ( table ) . getReplicationStrategy ( ) . getPendingAddressRanges ( tmd , myToken , myEndpoint ) ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / utils / BoundedStatsDequeTest . java b / test / unit / org / apache / cassandra / utils / BoundedStatsDequeTest . java <nl> index 2f5b5d6 . . 7c4b9f2 100644 <nl> - - - a / test / unit / org / apache / cassandra / utils / BoundedStatsDequeTest . java <nl> + + + b / test / unit / org / apache / cassandra / utils / BoundedStatsDequeTest . java <nl> @ @ - 29 , 7 + 29 , 6 @ @ import org . junit . Test ; <nl> <nl> public class BoundedStatsDequeTest <nl> { <nl> - <nl> @ Test <nl> public void test ( ) <nl> { <nl> @ @ - 63 , 10 + 62 , 5 @ @ public class BoundedStatsDequeTest <nl> assertEquals ( size , bsd . size ( ) ) ; <nl> assertEquals ( 14 , bsd . sum ( ) , 0 . 001d ) ; <nl> assertEquals ( 3 . 5 , bsd . mean ( ) , 0 . 001d ) ; <nl> - <nl> - / / check that it clears properly <nl> - bsd . clear ( ) ; <nl> - assertFalse ( bsd . iterator ( ) . hasNext ( ) ) ; <nl> } <nl> - <nl> }

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 1ff5675 . . 84be96d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 0 . 9 
 + * Fix CC # collectTimeOrderedData ( ) tombstone optimisations ( CASSANDRA - 7394 ) 
 * Fix assertion error in CL . ANY timeout handling ( CASSANDRA - 7364 ) 
 * Handle empty CFs in Memtable # maybeUpdateLiveRatio ( ) ( CASSANDRA - 7401 ) 
 * Fix native protocol CAS batches ( CASSANDRA - 7337 ) 
 diff - - git a / src / java / org / apache / cassandra / db / CollationController . java b / src / java / org / apache / cassandra / db / CollationController . java 
 index 33d77ee . . 4a08a26 100644 
 - - - a / src / java / org / apache / cassandra / db / CollationController . java 
 + + + b / src / java / org / apache / cassandra / db / CollationController . java 
 @ @ - 77 , 6 + 77 , 7 @ @ public class CollationController 
 try 
 { 
 Tracing . trace ( " Merging memtable contents " ) ; 
 + long mostRecentRowTombstone = Long . MIN _ VALUE ; 
 for ( Memtable memtable : view . memtables ) 
 { 
 OnDiskAtomIterator iter = filter . getMemtableColumnIterator ( memtable ) ; 
 @ @ - 89 , 6 + 90 , 7 @ @ public class CollationController 
 } 
 
 container . addAll ( temp , HeapAllocator . instance ) ; 
 + mostRecentRowTombstone = container . deletionInfo ( ) . getTopLevelDeletion ( ) . markedForDeleteAt ; 
 temp . clear ( ) ; 
 } 
 
 @ @ - 102 , 7 + 104 , 6 @ @ public class CollationController 
 Collections . sort ( view . sstables , SSTable . maxTimestampComparator ) ; 
 
 / / read sorted sstables 
 - long mostRecentRowTombstone = Long . MIN _ VALUE ; 
 for ( SSTableReader sstable : view . sstables ) 
 { 
 / / if we ' ve already seen a row tombstone with a timestamp greater 
 @ @ - 122 , 8 + 123 , 6 @ @ public class CollationController 
 if ( iter . getColumnFamily ( ) ! = null ) 
 { 
 ColumnFamily cf = iter . getColumnFamily ( ) ; 
 - if ( cf . isMarkedForDelete ( ) ) 
 - mostRecentRowTombstone = cf . deletionInfo ( ) . getTopLevelDeletion ( ) . markedForDeleteAt ; 
 temp . delete ( cf ) ; 
 sstablesIterated + + ; 
 while ( iter . hasNext ( ) ) 
 @ @ - 131 , 6 + 130 , 7 @ @ public class CollationController 
 } 
 
 container . addAll ( temp , HeapAllocator . instance ) ; 
 + mostRecentRowTombstone = container . deletionInfo ( ) . getTopLevelDeletion ( ) . markedForDeleteAt ; 
 temp . clear ( ) ; 
 } 


NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 9c0bc6b . . dc56d90 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 3 + 1 , 7 @ @ 
 + 1 . 2 . 13 
 + * Optimize FD phi calculation ( CASSANDRA - 6386 ) 
 + 
 + 
 1 . 2 . 12 
 * Invalidate row cache when dropping CF ( CASSANDRA - 6351 ) 
 * add non - jamm path for cached statements ( CASSANDRA - 6293 ) 
 diff - - git a / src / java / org / apache / cassandra / gms / FailureDetector . java b / src / java / org / apache / cassandra / gms / FailureDetector . java 
 index 26d78ab . . e4ffb88 100644 
 - - - a / src / java / org / apache / cassandra / gms / FailureDetector . java 
 + + + b / src / java / org / apache / cassandra / gms / FailureDetector . java 
 @ @ - 177 , 13 + 177 , 6 @ @ public class FailureDetector implements IFailureDetector , FailureDetectorMBean 
 return epState ! = null & & epState . isAlive ( ) ; 
 } 
 
 - public void clear ( InetAddress ep ) 
 - { 
 - ArrivalWindow heartbeatWindow = arrivalSamples . get ( ep ) ; 
 - if ( heartbeatWindow ! = null ) 
 - heartbeatWindow . clear ( ) ; 
 - } 
 - 
 public void report ( InetAddress ep ) 
 { 
 if ( logger . isTraceEnabled ( ) ) 
 @ @ - 312 , 11 + 305 , 6 @ @ class ArrivalWindow 
 return arrivalIntervals . mean ( ) ; 
 } 
 
 - void clear ( ) 
 - { 
 - arrivalIntervals . clear ( ) ; 
 - } 
 - 
 / / see CASSANDRA - 2597 for an explanation of the math at work here . 
 double phi ( long tnow ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java 
 index cbb7d80 . . 545d26b 100644 
 - - - a / src / java / org / apache / cassandra / gms / Gossiper . java 
 + + + b / src / java / org / apache / cassandra / gms / Gossiper . java 
 @ @ - 775 , 7 + 775 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean 
 if ( ! localEndpointState . isAlive ( ) ) 
 { 
 logger . debug ( " Clearing interval times for { } due to generation change " , endpoint ) ; 
 - fd . clear ( endpoint ) ; 
 + fd . remove ( endpoint ) ; 
 } 
 fd . report ( endpoint ) ; 
 return ; 
 diff - - git a / src / java / org / apache / cassandra / gms / IFailureDetector . java b / src / java / org / apache / cassandra / gms / IFailureDetector . java 
 index 444c100 . . 4e9d528 100644 
 - - - a / src / java / org / apache / cassandra / gms / IFailureDetector . java 
 + + + b / src / java / org / apache / cassandra / gms / IFailureDetector . java 
 @ @ - 38 , 12 + 38 , 6 @ @ public interface IFailureDetector 
 public boolean isAlive ( InetAddress ep ) ; 
 
 / * * 
 - * Clear any existing interval timings for this endpoint 
 - * @ param ep 
 - * / 
 - public void clear ( InetAddress ep ) ; 
 - 
 - / * * 
 * This method is invoked by any entity wanting to interrogate the status of an endpoint . 
 * In our case it would be the Gossiper . The Failure Detector will then calculate Phi and 
 * deem an endpoint as suspicious or alive as explained in the Hayashibara paper . 
 diff - - git a / src / java / org / apache / cassandra / utils / BoundedStatsDeque . java b / src / java / org / apache / cassandra / utils / BoundedStatsDeque . java 
 index 43d2ce4 . . c9aa028 100644 
 - - - a / src / java / org / apache / cassandra / utils / BoundedStatsDeque . java 
 + + + b / src / java / org / apache / cassandra / utils / BoundedStatsDeque . java 
 @ @ - 20 , 17 + 20 , 22 @ @ package org . apache . cassandra . utils ; 
 import java . util . Iterator ; 
 import java . util . NoSuchElementException ; 
 import java . util . concurrent . LinkedBlockingDeque ; 
 + import java . util . concurrent . atomic . AtomicReference ; 
 + 
 + import com . google . common . util . concurrent . AtomicDouble ; 
 
 / * * 
 * bounded threadsafe deque 
 * / 
 public class BoundedStatsDeque implements Iterable < Double > 
 { 
 - protected final LinkedBlockingDeque < Double > deque ; 
 + private final LinkedBlockingDeque < Double > deque ; 
 + private final AtomicDouble sum ; 
 
 public BoundedStatsDeque ( int size ) 
 { 
 deque = new LinkedBlockingDeque < Double > ( size ) ; 
 + sum = new AtomicDouble ( 0 ) ; 
 } 
 
 public Iterator < Double > iterator ( ) 
 @ @ - 43 , 35 + 48 , 20 @ @ public class BoundedStatsDeque implements Iterable < Double > 
 return deque . size ( ) ; 
 } 
 
 - public void clear ( ) 
 - { 
 - deque . clear ( ) ; 
 - } 
 - 
 public void add ( double i ) 
 { 
 if ( ! deque . offer ( i ) ) 
 { 
 - try 
 - { 
 - deque . remove ( ) ; 
 - } 
 - catch ( NoSuchElementException e ) 
 - { 
 - / / oops , clear ( ) beat us to it 
 - } 
 + Double removed = deque . remove ( ) ; 
 + sum . addAndGet ( - removed ) ; 
 deque . offer ( i ) ; 
 } 
 + sum . addAndGet ( i ) ; 
 } 
 
 public double sum ( ) 
 { 
 - double sum = 0d ; 
 - for ( Double interval : deque ) 
 - { 
 - sum + = interval ; 
 - } 
 - return sum ; 
 + return sum . get ( ) ; 
 } 
 
 public double mean ( ) 
 diff - - git a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java 
 index ae7e36c . . 9931e85 100644 
 - - - a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java 
 + + + b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java 
 @ @ - 198 , 7 + 198 , 6 @ @ public class BootStrapperTest extends SchemaLoader 
 public void unregisterFailureDetectionEventListener ( IFailureDetectionEventListener listener ) { throw new UnsupportedOperationException ( ) ; } 
 public void remove ( InetAddress ep ) { throw new UnsupportedOperationException ( ) ; } 
 public void forceConviction ( InetAddress ep ) { throw new UnsupportedOperationException ( ) ; } 
 - public void clear ( InetAddress ep ) { throw new UnsupportedOperationException ( ) ; } 
 } ; 
 s . addSourceFilter ( new RangeStreamer . FailureDetectorSourceFilter ( mockFailureDetector ) ) ; 
 s . addRanges ( table , Table . open ( table ) . getReplicationStrategy ( ) . getPendingAddressRanges ( tmd , myToken , myEndpoint ) ) ; 
 diff - - git a / test / unit / org / apache / cassandra / utils / BoundedStatsDequeTest . java b / test / unit / org / apache / cassandra / utils / BoundedStatsDequeTest . java 
 index 2f5b5d6 . . 7c4b9f2 100644 
 - - - a / test / unit / org / apache / cassandra / utils / BoundedStatsDequeTest . java 
 + + + b / test / unit / org / apache / cassandra / utils / BoundedStatsDequeTest . java 
 @ @ - 29 , 7 + 29 , 6 @ @ import org . junit . Test ; 
 
 public class BoundedStatsDequeTest 
 { 
 - 
 @ Test 
 public void test ( ) 
 { 
 @ @ - 63 , 10 + 62 , 5 @ @ public class BoundedStatsDequeTest 
 assertEquals ( size , bsd . size ( ) ) ; 
 assertEquals ( 14 , bsd . sum ( ) , 0 . 001d ) ; 
 assertEquals ( 3 . 5 , bsd . mean ( ) , 0 . 001d ) ; 
 - 
 - / / check that it clears properly 
 - bsd . clear ( ) ; 
 - assertFalse ( bsd . iterator ( ) . hasNext ( ) ) ; 
 } 
 - 
 }
