BLEU SCORE: 0.037477767366779206

TEST MSG: Fix flaky unit tests SecondaryIndexManagerTest . assert [ Not ] MarkedAsBuilt
GENERATED MSG: merge from 1 . 2

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 6da2712 . . 81b3a6e 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 4 . 0 <nl> + * Fix flaky SecondaryIndexManagerTest . assert [ Not ] MarkedAsBuilt ( CASSANDRA - 13965 ) <nl> * Make LWTs send resultset metadata on every request ( CASSANDRA - 13992 ) <nl> * Fix flaky indexWithFailedInitializationIsNotQueryableAfterPartialRebuild ( CASSANDRA - 13963 ) <nl> * Introduce leaf - only iterator ( CASSANDRA - 9988 ) <nl> diff - - git a / test / unit / org / apache / cassandra / index / SecondaryIndexManagerTest . java b / test / unit / org / apache / cassandra / index / SecondaryIndexManagerTest . java <nl> index def96a4 . . 2207f48 100644 <nl> - - - a / test / unit / org / apache / cassandra / index / SecondaryIndexManagerTest . java <nl> + + + b / test / unit / org / apache / cassandra / index / SecondaryIndexManagerTest . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ import java . io . FileNotFoundException ; <nl> import java . net . SocketException ; <nl> import java . util . Collection ; <nl> import java . util . Collections ; <nl> + import java . util . List ; <nl> import java . util . Set ; <nl> import java . util . concurrent . Callable ; <nl> import java . util . concurrent . CountDownLatch ; <nl> @ @ - 37 , 7 + 38 , 6 @ @ import org . apache . cassandra . db . lifecycle . SSTableSet ; <nl> import org . apache . cassandra . io . sstable . format . SSTableReader ; <nl> import org . apache . cassandra . notifications . SSTableAddedNotification ; <nl> import org . apache . cassandra . schema . IndexMetadata ; <nl> - import org . apache . cassandra . schema . SchemaConstants ; <nl> import org . apache . cassandra . utils . JVMStabilityInspector ; <nl> import org . apache . cassandra . utils . KillerForTests ; <nl> import org . apache . cassandra . utils . concurrent . Refs ; <nl> @ @ - 50 , 10 + 50 , 6 @ @ import static org . junit . Assert . fail ; <nl> public class SecondaryIndexManagerTest extends CQLTester <nl> { <nl> <nl> - private static final String builtIndexesQuery = String . format ( " SELECT * FROM % s . \ " % s \ " " , <nl> - SchemaConstants . SYSTEM _ KEYSPACE _ NAME , <nl> - SystemKeyspace . BUILT _ INDEXES ) ; <nl> - <nl> @ After <nl> public void after ( ) <nl> { <nl> @ @ - 94 , 7 + 90 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester <nl> <nl> / / drop the index and verify that it has been removed from the built indexes table <nl> dropIndex ( " DROP INDEX % s . " + indexName ) ; <nl> - assertNotMarkedAsBuilt ( ) ; <nl> + assertNotMarkedAsBuilt ( indexName ) ; <nl> <nl> / / create the index again and verify that it ' s added to the built indexes table <nl> createIndex ( String . format ( " CREATE INDEX % s ON % % s ( c ) " , indexName ) ) ; <nl> @ @ - 113 , 7 + 109 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester <nl> <nl> ColumnFamilyStore cfs = getCurrentColumnFamilyStore ( ) ; <nl> cfs . indexManager . markAllIndexesRemoved ( ) ; <nl> - assertNotMarkedAsBuilt ( ) ; <nl> + assertNotMarkedAsBuilt ( indexName ) ; <nl> <nl> try ( Refs < SSTableReader > sstables = Refs . ref ( cfs . getSSTables ( SSTableSet . CANONICAL ) ) ) <nl> { <nl> @ @ - 132 , 7 + 128 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester <nl> <nl> / / try to rebuild the index before the index creation task has finished <nl> assertFalse ( tryRebuild ( indexName , false ) ) ; <nl> - assertNotMarkedAsBuilt ( ) ; <nl> + assertNotMarkedAsBuilt ( indexName ) ; <nl> <nl> / / check that the index is marked as built when the creation finishes <nl> TestingIndex . unblockCreate ( ) ; <nl> @ @ - 183 , 7 + 179 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester <nl> <nl> / / verify rebuilding the index before the previous index build task has finished fails <nl> assertFalse ( tryRebuild ( indexName , false ) ) ; <nl> - assertNotMarkedAsBuilt ( ) ; <nl> + assertNotMarkedAsBuilt ( indexName ) ; <nl> <nl> / / check that the index is marked as built when the build finishes <nl> TestingIndex . unblockBuild ( ) ; <nl> @ @ - 235 , 7 + 231 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester <nl> <nl> / / verify rebuilding the index before the previous index build task has finished fails <nl> assertFalse ( tryRebuild ( indexName , false ) ) ; <nl> - assertNotMarkedAsBuilt ( ) ; <nl> + assertNotMarkedAsBuilt ( indexName ) ; <nl> <nl> / / check that the index is marked as built when the build finishes <nl> TestingIndex . unblockBuild ( ) ; <nl> @ @ - 289 , 7 + 285 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester <nl> try ( Refs < SSTableReader > sstables = Refs . ref ( cfs . getSSTables ( SSTableSet . CANONICAL ) ) ) <nl> { <nl> cfs . indexManager . handleNotification ( new SSTableAddedNotification ( sstables , null ) , cfs . getTracker ( ) ) ; <nl> - assertNotMarkedAsBuilt ( ) ; <nl> + assertNotMarkedAsBuilt ( indexName ) ; <nl> } <nl> <nl> / / unblock the pending build : <nl> @ @ - 359 , 7 + 355 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester <nl> asyncBuild . join ( ) ; <nl> <nl> / / verify the index is * not * built due to the failing sstable build : <nl> - assertNotMarkedAsBuilt ( ) ; <nl> + assertNotMarkedAsBuilt ( indexName ) ; <nl> assertFalse ( error . get ( ) ) ; <nl> } <nl> <nl> @ @ - 382 , 7 + 378 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester <nl> { <nl> assertTrue ( ex . getMessage ( ) . contains ( " configured to fail " ) ) ; <nl> } <nl> - assertNotMarkedAsBuilt ( ) ; <nl> + assertNotMarkedAsBuilt ( indexName ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 553 , 14 + 549 , 17 @ @ public class SecondaryIndexManagerTest extends CQLTester <nl> } <nl> } <nl> <nl> - private void assertMarkedAsBuilt ( String indexName ) throws Throwable <nl> + private static void assertMarkedAsBuilt ( String indexName ) <nl> { <nl> - assertRows ( execute ( builtIndexesQuery ) , row ( KEYSPACE , indexName , null ) ) ; <nl> + List < String > indexes = SystemKeyspace . getBuiltIndexes ( KEYSPACE , Collections . singleton ( indexName ) ) ; <nl> + assertEquals ( 1 , indexes . size ( ) ) ; <nl> + assertEquals ( indexName , indexes . get ( 0 ) ) ; <nl> } <nl> <nl> - private void assertNotMarkedAsBuilt ( ) throws Throwable <nl> + private static void assertNotMarkedAsBuilt ( String indexName ) <nl> { <nl> - assertEmpty ( execute ( builtIndexesQuery ) ) ; <nl> + List < String > indexes = SystemKeyspace . getBuiltIndexes ( KEYSPACE , Collections . singleton ( indexName ) ) ; <nl> + assertTrue ( indexes . isEmpty ( ) ) ; <nl> } <nl> <nl> private boolean tryRebuild ( String indexName , boolean wait ) throws Throwable
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b935425 . . 7f5a487 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 2 - rc1 <nl> + * fix cqlsh rendering of blob fields ( CASSANDRA - 4970 ) <nl> * fix cqlsh DESCRIBE command ( CASSANDRA - 4913 ) <nl> * save truncation position in system table ( CASSANDRA - 4906 ) <nl> * Move CompressionMetadata off - heap ( CASSANDRA - 4937 ) <nl> diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py <nl> index d15c083 . . bab3506 100644 <nl> - - - a / pylib / cqlshlib / formatting . py <nl> + + + b / pylib / cqlshlib / formatting . py <nl> @ @ - 88 , 8 + 88 , 8 @ @ def formatter _ for ( typname ) : <nl> return f <nl> return registrator <nl> <nl> - @ formatter _ for ( ' bytes ' ) <nl> - def format _ value _ bytes ( val , colormap , * * _ ) : <nl> + @ formatter _ for ( ' blob ' ) <nl> + def format _ value _ blob ( val , colormap , * * _ ) : <nl> bval = ' ' . join ( ' % 02x ' % ord ( c ) for c in val ) <nl> return colorme ( bval , colormap , ' hex ' ) <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 6da2712 . . 81b3a6e 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 4 . 0 
 + * Fix flaky SecondaryIndexManagerTest . assert [ Not ] MarkedAsBuilt ( CASSANDRA - 13965 ) 
 * Make LWTs send resultset metadata on every request ( CASSANDRA - 13992 ) 
 * Fix flaky indexWithFailedInitializationIsNotQueryableAfterPartialRebuild ( CASSANDRA - 13963 ) 
 * Introduce leaf - only iterator ( CASSANDRA - 9988 ) 
 diff - - git a / test / unit / org / apache / cassandra / index / SecondaryIndexManagerTest . java b / test / unit / org / apache / cassandra / index / SecondaryIndexManagerTest . java 
 index def96a4 . . 2207f48 100644 
 - - - a / test / unit / org / apache / cassandra / index / SecondaryIndexManagerTest . java 
 + + + b / test / unit / org / apache / cassandra / index / SecondaryIndexManagerTest . java 
 @ @ - 21 , 6 + 21 , 7 @ @ import java . io . FileNotFoundException ; 
 import java . net . SocketException ; 
 import java . util . Collection ; 
 import java . util . Collections ; 
 + import java . util . List ; 
 import java . util . Set ; 
 import java . util . concurrent . Callable ; 
 import java . util . concurrent . CountDownLatch ; 
 @ @ - 37 , 7 + 38 , 6 @ @ import org . apache . cassandra . db . lifecycle . SSTableSet ; 
 import org . apache . cassandra . io . sstable . format . SSTableReader ; 
 import org . apache . cassandra . notifications . SSTableAddedNotification ; 
 import org . apache . cassandra . schema . IndexMetadata ; 
 - import org . apache . cassandra . schema . SchemaConstants ; 
 import org . apache . cassandra . utils . JVMStabilityInspector ; 
 import org . apache . cassandra . utils . KillerForTests ; 
 import org . apache . cassandra . utils . concurrent . Refs ; 
 @ @ - 50 , 10 + 50 , 6 @ @ import static org . junit . Assert . fail ; 
 public class SecondaryIndexManagerTest extends CQLTester 
 { 
 
 - private static final String builtIndexesQuery = String . format ( " SELECT * FROM % s . \ " % s \ " " , 
 - SchemaConstants . SYSTEM _ KEYSPACE _ NAME , 
 - SystemKeyspace . BUILT _ INDEXES ) ; 
 - 
 @ After 
 public void after ( ) 
 { 
 @ @ - 94 , 7 + 90 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester 
 
 / / drop the index and verify that it has been removed from the built indexes table 
 dropIndex ( " DROP INDEX % s . " + indexName ) ; 
 - assertNotMarkedAsBuilt ( ) ; 
 + assertNotMarkedAsBuilt ( indexName ) ; 
 
 / / create the index again and verify that it ' s added to the built indexes table 
 createIndex ( String . format ( " CREATE INDEX % s ON % % s ( c ) " , indexName ) ) ; 
 @ @ - 113 , 7 + 109 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester 
 
 ColumnFamilyStore cfs = getCurrentColumnFamilyStore ( ) ; 
 cfs . indexManager . markAllIndexesRemoved ( ) ; 
 - assertNotMarkedAsBuilt ( ) ; 
 + assertNotMarkedAsBuilt ( indexName ) ; 
 
 try ( Refs < SSTableReader > sstables = Refs . ref ( cfs . getSSTables ( SSTableSet . CANONICAL ) ) ) 
 { 
 @ @ - 132 , 7 + 128 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester 
 
 / / try to rebuild the index before the index creation task has finished 
 assertFalse ( tryRebuild ( indexName , false ) ) ; 
 - assertNotMarkedAsBuilt ( ) ; 
 + assertNotMarkedAsBuilt ( indexName ) ; 
 
 / / check that the index is marked as built when the creation finishes 
 TestingIndex . unblockCreate ( ) ; 
 @ @ - 183 , 7 + 179 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester 
 
 / / verify rebuilding the index before the previous index build task has finished fails 
 assertFalse ( tryRebuild ( indexName , false ) ) ; 
 - assertNotMarkedAsBuilt ( ) ; 
 + assertNotMarkedAsBuilt ( indexName ) ; 
 
 / / check that the index is marked as built when the build finishes 
 TestingIndex . unblockBuild ( ) ; 
 @ @ - 235 , 7 + 231 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester 
 
 / / verify rebuilding the index before the previous index build task has finished fails 
 assertFalse ( tryRebuild ( indexName , false ) ) ; 
 - assertNotMarkedAsBuilt ( ) ; 
 + assertNotMarkedAsBuilt ( indexName ) ; 
 
 / / check that the index is marked as built when the build finishes 
 TestingIndex . unblockBuild ( ) ; 
 @ @ - 289 , 7 + 285 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester 
 try ( Refs < SSTableReader > sstables = Refs . ref ( cfs . getSSTables ( SSTableSet . CANONICAL ) ) ) 
 { 
 cfs . indexManager . handleNotification ( new SSTableAddedNotification ( sstables , null ) , cfs . getTracker ( ) ) ; 
 - assertNotMarkedAsBuilt ( ) ; 
 + assertNotMarkedAsBuilt ( indexName ) ; 
 } 
 
 / / unblock the pending build : 
 @ @ - 359 , 7 + 355 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester 
 asyncBuild . join ( ) ; 
 
 / / verify the index is * not * built due to the failing sstable build : 
 - assertNotMarkedAsBuilt ( ) ; 
 + assertNotMarkedAsBuilt ( indexName ) ; 
 assertFalse ( error . get ( ) ) ; 
 } 
 
 @ @ - 382 , 7 + 378 , 7 @ @ public class SecondaryIndexManagerTest extends CQLTester 
 { 
 assertTrue ( ex . getMessage ( ) . contains ( " configured to fail " ) ) ; 
 } 
 - assertNotMarkedAsBuilt ( ) ; 
 + assertNotMarkedAsBuilt ( indexName ) ; 
 } 
 
 @ Test 
 @ @ - 553 , 14 + 549 , 17 @ @ public class SecondaryIndexManagerTest extends CQLTester 
 } 
 } 
 
 - private void assertMarkedAsBuilt ( String indexName ) throws Throwable 
 + private static void assertMarkedAsBuilt ( String indexName ) 
 { 
 - assertRows ( execute ( builtIndexesQuery ) , row ( KEYSPACE , indexName , null ) ) ; 
 + List < String > indexes = SystemKeyspace . getBuiltIndexes ( KEYSPACE , Collections . singleton ( indexName ) ) ; 
 + assertEquals ( 1 , indexes . size ( ) ) ; 
 + assertEquals ( indexName , indexes . get ( 0 ) ) ; 
 } 
 
 - private void assertNotMarkedAsBuilt ( ) throws Throwable 
 + private static void assertNotMarkedAsBuilt ( String indexName ) 
 { 
 - assertEmpty ( execute ( builtIndexesQuery ) ) ; 
 + List < String > indexes = SystemKeyspace . getBuiltIndexes ( KEYSPACE , Collections . singleton ( indexName ) ) ; 
 + assertTrue ( indexes . isEmpty ( ) ) ; 
 } 
 
 private boolean tryRebuild ( String indexName , boolean wait ) throws Throwable

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b935425 . . 7f5a487 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 2 - rc1 
 + * fix cqlsh rendering of blob fields ( CASSANDRA - 4970 ) 
 * fix cqlsh DESCRIBE command ( CASSANDRA - 4913 ) 
 * save truncation position in system table ( CASSANDRA - 4906 ) 
 * Move CompressionMetadata off - heap ( CASSANDRA - 4937 ) 
 diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py 
 index d15c083 . . bab3506 100644 
 - - - a / pylib / cqlshlib / formatting . py 
 + + + b / pylib / cqlshlib / formatting . py 
 @ @ - 88 , 8 + 88 , 8 @ @ def formatter _ for ( typname ) : 
 return f 
 return registrator 
 
 - @ formatter _ for ( ' bytes ' ) 
 - def format _ value _ bytes ( val , colormap , * * _ ) : 
 + @ formatter _ for ( ' blob ' ) 
 + def format _ value _ blob ( val , colormap , * * _ ) : 
 bval = ' ' . join ( ' % 02x ' % ord ( c ) for c in val ) 
 return colorme ( bval , colormap , ' hex ' ) 

