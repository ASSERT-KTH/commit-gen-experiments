BLEU SCORE: 0.035641869294051415

TEST MSG: Fix CHANGES . txt
GENERATED MSG: edit for 2 . 0 . 1 re - roll

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 6759897 . . 791f99c 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 6 + 1 , 8 @ @ <nl> 3 . 0 . 10 <nl> * Extend ColumnIdentifier . internedInstances key to include the type that generated the byte buffer ( CASSANDRA - 12516 ) <nl> * Backport CASSANDRA - 10756 ( race condition in NativeTransportService shutdown ) ( CASSANDRA - 12472 ) <nl> + Merged from 2 . 1 : <nl> + * Add system property to set the max number of native transport requests in queue ( CASSANDRA - 11363 ) <nl> <nl> <nl> 3 . 0 . 9 <nl> @ @ - 81 , 7 + 83 , 6 @ @ Merged from 2 . 2 : <nl> * Improve streaming synchronization and fault tolerance ( CASSANDRA - 11414 ) <nl> * MemoryUtil . getShort ( ) should return an unsigned short also for architectures not supporting unaligned memory accesses ( CASSANDRA - 11973 ) <nl> Merged from 2 . 1 : <nl> - * Add system property to set the max number of native transport requests in queue ( CASSANDRA - 11363 ) <nl> * Fix queries with empty ByteBuffer values in clustering column restrictions ( CASSANDRA - 12127 ) <nl> * Disable passing control to post - flush after flush failure to prevent data loss ( CASSANDRA - 11828 ) <nl> * Allow STCS - in - L0 compactions to reduce scope with LCS ( CASSANDRA - 12040 )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 2b5bf79 . . 578da35 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 6 , 15 + 6 , 10 @ @ <nl> * Remove leveled json manifest migration code ( CASSANDRA - 5996 ) <nl> <nl> <nl> - 2 . 0 . 2 <nl> + 2 . 0 . 1 <nl> * Improve memory use defaults ( CASSANDRA - 5069 ) <nl> * Make ThriftServer more easlly extensible ( CASSANDRA - 6058 ) <nl> * Remove Hadoop dependency from ITransportFactory ( CASSANDRA - 6062 ) <nl> - Merged from 1 . 2 : <nl> - * Allow cache - keys - to - save to be set at runtime ( CASSANDRA - 5980 ) <nl> - <nl> - <nl> - 2 . 0 . 1 <nl> * add file _ cache _ size _ in _ mb setting ( CASSANDRA - 5661 ) <nl> * Improve error message when yaml contains invalid properties ( CASSANDRA - 5958 ) <nl> * Improve leveled compaction ' s ability to find non - overlapping L0 compactions <nl> @ @ - 44 , 6 + 39 , 7 @ @ Merged from 1 . 2 : <nl> * Fix validation of IN clauses with 2ndary indexes ( CASSANDRA - 6050 ) <nl> * Support named bind variables in CQL ( CASSANDRA - 6033 ) <nl> Merged from 1 . 2 : <nl> + * Allow cache - keys - to - save to be set at runtime ( CASSANDRA - 5980 ) <nl> * Avoid second - guessing out - of - space state ( CASSANDRA - 5605 ) <nl> * Tuning knobs for dealing with large blobs and many CFs ( CASSANDRA - 5982 ) <nl> * ( Hadoop ) Fix CQLRW for thrift tables ( CASSANDRA - 6002 ) <nl> diff - - git a / build . xml b / build . xml <nl> index d0bb1c5 . . 5be37ca 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 355 , 7 + 355 , 7 @ @ <nl> < dependency groupId = " com . googlecode . json - simple " artifactId = " json - simple " version = " 1 . 1 " / > <nl> < dependency groupId = " com . github . stephenc . high - scale - lib " artifactId = " high - scale - lib " version = " 1 . 1 . 2 " / > <nl> < dependency groupId = " com . github . stephenc " artifactId = " jamm " version = " 0 . 2 . 5 " / > <nl> - 	 < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 3 . 0 " > <nl> + < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 3 . 2 " > <nl> 	 	 < exclusion groupId = " org . slf4j " artifactId = " slf4j - log4j12 " / > <nl> < / dependency > <nl> < dependency groupId = " org . yaml " artifactId = " snakeyaml " version = " 1 . 11 " / > <nl> @ @ - 456 , 7 + 456 , 7 @ @ <nl> < dependency groupId = " edu . stanford . ppl " artifactId = " snaptree " / > <nl> < dependency groupId = " org . mindrot " artifactId = " jbcrypt " / > <nl> < dependency groupId = " com . yammer . metrics " artifactId = " metrics - core " / > <nl> - < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 3 . 0 " / > <nl> + < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 3 . 2 " / > <nl> <nl> < dependency groupId = " ch . qos . logback " artifactId = " logback - core " / > <nl> < dependency groupId = " ch . qos . logback " artifactId = " logback - classic " / > <nl> diff - - git a / lib / thrift - server - 0 . 3 . 0 . jar b / lib / thrift - server - 0 . 3 . 0 . jar <nl> deleted file mode 100644 <nl> index 3c93bb9 . . 0000000 <nl> Binary files a / lib / thrift - server - 0 . 3 . 0 . jar and / dev / null differ <nl> diff - - git a / lib / thrift - server - 0 . 3 . 2 . jar b / lib / thrift - server - 0 . 3 . 2 . jar <nl> new file mode 100644 <nl> index 0000000 . . 5b03c4d <nl> Binary files / dev / null and b / lib / thrift - server - 0 . 3 . 2 . jar differ <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> index e0c096f . . 4da579c 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> @ @ - 160 , 8 + 160 , 17 @ @ public class SSTableReader extends SSTable implements Closeable <nl> partitioner , <nl> System . currentTimeMillis ( ) , <nl> sstableMetadata ) ; <nl> - / / don ' t save index summary to disk if we needed to build one <nl> - sstable . load ( false , false ) ; <nl> + <nl> + / / special implementation of load to use non - pooled SegmentedFile builders <nl> + SegmentedFile . Builder ibuilder = new BufferedSegmentedFile . Builder ( ) ; <nl> + SegmentedFile . Builder dbuilder = sstable . compression <nl> + ? new CompressedSegmentedFile . Builder ( ) <nl> + : new BufferedSegmentedFile . Builder ( ) ; <nl> + if ( ! loadSummary ( sstable , ibuilder , dbuilder , sstable . metadata ) ) <nl> + sstable . buildSummary ( false , ibuilder , dbuilder , false ) ; <nl> + sstable . ifile = ibuilder . complete ( sstable . descriptor . filenameFor ( Component . PRIMARY _ INDEX ) ) ; <nl> + sstable . dfile = dbuilder . complete ( sstable . descriptor . filenameFor ( Component . DATA ) ) ; <nl> + <nl> sstable . bf = FilterFactory . AlwaysPresent ; <nl> return sstable ; <nl> } <nl> @ @ - 411 , 7 + 420 , 6 @ @ public class SSTableReader extends SSTable implements Closeable <nl> ? SegmentedFile . getCompressedBuilder ( ) <nl> : SegmentedFile . getBuilder ( DatabaseDescriptor . getDiskAccessMode ( ) ) ; <nl> <nl> - <nl> boolean summaryLoaded = loadSummary ( this , ibuilder , dbuilder , metadata ) ; <nl> if ( recreateBloomFilter | | ! summaryLoaded ) <nl> buildSummary ( recreateBloomFilter , ibuilder , dbuilder , summaryLoaded ) ; <nl> diff - - git a / src / java / org / apache / cassandra / io / util / BufferedSegmentedFile . java b / src / java / org / apache / cassandra / io / util / BufferedSegmentedFile . java <nl> index 49972c8 . . 790b42b 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / BufferedSegmentedFile . java <nl> + + + b / src / java / org / apache / cassandra / io / util / BufferedSegmentedFile . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ package org . apache . cassandra . io . util ; <nl> <nl> import java . io . File ; <nl> <nl> - public class BufferedSegmentedFile extends PoolingSegmentedFile <nl> + public class BufferedSegmentedFile extends SegmentedFile <nl> { <nl> public BufferedSegmentedFile ( String path , long length ) <nl> { <nl> @ @ - 28 , 20 + 28 , 11 @ @ public class BufferedSegmentedFile extends PoolingSegmentedFile <nl> <nl> public static class Builder extends SegmentedFile . Builder <nl> { <nl> - / * * <nl> - * Adds a position that would be a safe place for a segment boundary in the file . For a block / row based file <nl> - * format , safe boundaries are block / row edges . <nl> - * @ param boundary The absolute position of the potential boundary in the file . <nl> - * / <nl> public void addPotentialBoundary ( long boundary ) <nl> { <nl> / / only one segment in a standard - io file <nl> } <nl> <nl> - / * * <nl> - * Called after all potential boundaries have been added to apply this Builder to a concrete file on disk . <nl> - * @ param path The file on disk . <nl> - * / <nl> public SegmentedFile complete ( String path ) <nl> { <nl> long length = new File ( path ) . length ( ) ; <nl> @ @ - 49 , 8 + 40 , 14 @ @ public class BufferedSegmentedFile extends PoolingSegmentedFile <nl> } <nl> } <nl> <nl> - protected RandomAccessReader createReader ( String path ) <nl> + public FileDataInput getSegment ( long position ) <nl> + { <nl> + RandomAccessReader reader = RandomAccessReader . open ( new File ( path ) ) ; <nl> + reader . seek ( position ) ; <nl> + return reader ; <nl> + } <nl> + <nl> + public void cleanup ( ) <nl> { <nl> - return RandomAccessReader . open ( new File ( path ) , this ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 6759897 . . 791f99c 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 6 + 1 , 8 @ @ 
 3 . 0 . 10 
 * Extend ColumnIdentifier . internedInstances key to include the type that generated the byte buffer ( CASSANDRA - 12516 ) 
 * Backport CASSANDRA - 10756 ( race condition in NativeTransportService shutdown ) ( CASSANDRA - 12472 ) 
 + Merged from 2 . 1 : 
 + * Add system property to set the max number of native transport requests in queue ( CASSANDRA - 11363 ) 
 
 
 3 . 0 . 9 
 @ @ - 81 , 7 + 83 , 6 @ @ Merged from 2 . 2 : 
 * Improve streaming synchronization and fault tolerance ( CASSANDRA - 11414 ) 
 * MemoryUtil . getShort ( ) should return an unsigned short also for architectures not supporting unaligned memory accesses ( CASSANDRA - 11973 ) 
 Merged from 2 . 1 : 
 - * Add system property to set the max number of native transport requests in queue ( CASSANDRA - 11363 ) 
 * Fix queries with empty ByteBuffer values in clustering column restrictions ( CASSANDRA - 12127 ) 
 * Disable passing control to post - flush after flush failure to prevent data loss ( CASSANDRA - 11828 ) 
 * Allow STCS - in - L0 compactions to reduce scope with LCS ( CASSANDRA - 12040 )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 2b5bf79 . . 578da35 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 6 , 15 + 6 , 10 @ @ 
 * Remove leveled json manifest migration code ( CASSANDRA - 5996 ) 
 
 
 - 2 . 0 . 2 
 + 2 . 0 . 1 
 * Improve memory use defaults ( CASSANDRA - 5069 ) 
 * Make ThriftServer more easlly extensible ( CASSANDRA - 6058 ) 
 * Remove Hadoop dependency from ITransportFactory ( CASSANDRA - 6062 ) 
 - Merged from 1 . 2 : 
 - * Allow cache - keys - to - save to be set at runtime ( CASSANDRA - 5980 ) 
 - 
 - 
 - 2 . 0 . 1 
 * add file _ cache _ size _ in _ mb setting ( CASSANDRA - 5661 ) 
 * Improve error message when yaml contains invalid properties ( CASSANDRA - 5958 ) 
 * Improve leveled compaction ' s ability to find non - overlapping L0 compactions 
 @ @ - 44 , 6 + 39 , 7 @ @ Merged from 1 . 2 : 
 * Fix validation of IN clauses with 2ndary indexes ( CASSANDRA - 6050 ) 
 * Support named bind variables in CQL ( CASSANDRA - 6033 ) 
 Merged from 1 . 2 : 
 + * Allow cache - keys - to - save to be set at runtime ( CASSANDRA - 5980 ) 
 * Avoid second - guessing out - of - space state ( CASSANDRA - 5605 ) 
 * Tuning knobs for dealing with large blobs and many CFs ( CASSANDRA - 5982 ) 
 * ( Hadoop ) Fix CQLRW for thrift tables ( CASSANDRA - 6002 ) 
 diff - - git a / build . xml b / build . xml 
 index d0bb1c5 . . 5be37ca 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 355 , 7 + 355 , 7 @ @ 
 < dependency groupId = " com . googlecode . json - simple " artifactId = " json - simple " version = " 1 . 1 " / > 
 < dependency groupId = " com . github . stephenc . high - scale - lib " artifactId = " high - scale - lib " version = " 1 . 1 . 2 " / > 
 < dependency groupId = " com . github . stephenc " artifactId = " jamm " version = " 0 . 2 . 5 " / > 
 - 	 < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 3 . 0 " > 
 + < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 3 . 2 " > 
 	 	 < exclusion groupId = " org . slf4j " artifactId = " slf4j - log4j12 " / > 
 < / dependency > 
 < dependency groupId = " org . yaml " artifactId = " snakeyaml " version = " 1 . 11 " / > 
 @ @ - 456 , 7 + 456 , 7 @ @ 
 < dependency groupId = " edu . stanford . ppl " artifactId = " snaptree " / > 
 < dependency groupId = " org . mindrot " artifactId = " jbcrypt " / > 
 < dependency groupId = " com . yammer . metrics " artifactId = " metrics - core " / > 
 - < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 3 . 0 " / > 
 + < dependency groupId = " com . thinkaurelius . thrift " artifactId = " thrift - server " version = " 0 . 3 . 2 " / > 
 
 < dependency groupId = " ch . qos . logback " artifactId = " logback - core " / > 
 < dependency groupId = " ch . qos . logback " artifactId = " logback - classic " / > 
 diff - - git a / lib / thrift - server - 0 . 3 . 0 . jar b / lib / thrift - server - 0 . 3 . 0 . jar 
 deleted file mode 100644 
 index 3c93bb9 . . 0000000 
 Binary files a / lib / thrift - server - 0 . 3 . 0 . jar and / dev / null differ 
 diff - - git a / lib / thrift - server - 0 . 3 . 2 . jar b / lib / thrift - server - 0 . 3 . 2 . jar 
 new file mode 100644 
 index 0000000 . . 5b03c4d 
 Binary files / dev / null and b / lib / thrift - server - 0 . 3 . 2 . jar differ 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 index e0c096f . . 4da579c 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 @ @ - 160 , 8 + 160 , 17 @ @ public class SSTableReader extends SSTable implements Closeable 
 partitioner , 
 System . currentTimeMillis ( ) , 
 sstableMetadata ) ; 
 - / / don ' t save index summary to disk if we needed to build one 
 - sstable . load ( false , false ) ; 
 + 
 + / / special implementation of load to use non - pooled SegmentedFile builders 
 + SegmentedFile . Builder ibuilder = new BufferedSegmentedFile . Builder ( ) ; 
 + SegmentedFile . Builder dbuilder = sstable . compression 
 + ? new CompressedSegmentedFile . Builder ( ) 
 + : new BufferedSegmentedFile . Builder ( ) ; 
 + if ( ! loadSummary ( sstable , ibuilder , dbuilder , sstable . metadata ) ) 
 + sstable . buildSummary ( false , ibuilder , dbuilder , false ) ; 
 + sstable . ifile = ibuilder . complete ( sstable . descriptor . filenameFor ( Component . PRIMARY _ INDEX ) ) ; 
 + sstable . dfile = dbuilder . complete ( sstable . descriptor . filenameFor ( Component . DATA ) ) ; 
 + 
 sstable . bf = FilterFactory . AlwaysPresent ; 
 return sstable ; 
 } 
 @ @ - 411 , 7 + 420 , 6 @ @ public class SSTableReader extends SSTable implements Closeable 
 ? SegmentedFile . getCompressedBuilder ( ) 
 : SegmentedFile . getBuilder ( DatabaseDescriptor . getDiskAccessMode ( ) ) ; 
 
 - 
 boolean summaryLoaded = loadSummary ( this , ibuilder , dbuilder , metadata ) ; 
 if ( recreateBloomFilter | | ! summaryLoaded ) 
 buildSummary ( recreateBloomFilter , ibuilder , dbuilder , summaryLoaded ) ; 
 diff - - git a / src / java / org / apache / cassandra / io / util / BufferedSegmentedFile . java b / src / java / org / apache / cassandra / io / util / BufferedSegmentedFile . java 
 index 49972c8 . . 790b42b 100644 
 - - - a / src / java / org / apache / cassandra / io / util / BufferedSegmentedFile . java 
 + + + b / src / java / org / apache / cassandra / io / util / BufferedSegmentedFile . java 
 @ @ - 19 , 7 + 19 , 7 @ @ package org . apache . cassandra . io . util ; 
 
 import java . io . File ; 
 
 - public class BufferedSegmentedFile extends PoolingSegmentedFile 
 + public class BufferedSegmentedFile extends SegmentedFile 
 { 
 public BufferedSegmentedFile ( String path , long length ) 
 { 
 @ @ - 28 , 20 + 28 , 11 @ @ public class BufferedSegmentedFile extends PoolingSegmentedFile 
 
 public static class Builder extends SegmentedFile . Builder 
 { 
 - / * * 
 - * Adds a position that would be a safe place for a segment boundary in the file . For a block / row based file 
 - * format , safe boundaries are block / row edges . 
 - * @ param boundary The absolute position of the potential boundary in the file . 
 - * / 
 public void addPotentialBoundary ( long boundary ) 
 { 
 / / only one segment in a standard - io file 
 } 
 
 - / * * 
 - * Called after all potential boundaries have been added to apply this Builder to a concrete file on disk . 
 - * @ param path The file on disk . 
 - * / 
 public SegmentedFile complete ( String path ) 
 { 
 long length = new File ( path ) . length ( ) ; 
 @ @ - 49 , 8 + 40 , 14 @ @ public class BufferedSegmentedFile extends PoolingSegmentedFile 
 } 
 } 
 
 - protected RandomAccessReader createReader ( String path ) 
 + public FileDataInput getSegment ( long position ) 
 + { 
 + RandomAccessReader reader = RandomAccessReader . open ( new File ( path ) ) ; 
 + reader . seek ( position ) ; 
 + return reader ; 
 + } 
 + 
 + public void cleanup ( ) 
 { 
 - return RandomAccessReader . open ( new File ( path ) , this ) ; 
 } 
 }
