BLEU SCORE: 0.06567274736060397

TEST MSG: cqlsh : Make SSL protocol version configurable
GENERATED MSG: Add ssl support to cqlsh .

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 2cbc7c4 . . 0fbadbc 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 6 @ @ <nl> 2 . 1 . 9 <nl> + * ( cqlsh ) Allow the SSL protocol version to be specified through the <nl> + config file or environment variables ( CASSANDRA - 9544 ) <nl> Merged from 2 . 0 : <nl> * Scrub ( recover ) sstables even when - Index . db is missing , ( CASSANDRA - 9591 ) <nl> <nl> diff - - git a / pylib / cqlshlib / sslhandling . py b / pylib / cqlshlib / sslhandling . py <nl> index 70dd759 . . 2a90e26 100644 <nl> - - - a / pylib / cqlshlib / sslhandling . py <nl> + + + b / pylib / cqlshlib / sslhandling . py <nl> @ @ - 19 , 6 + 19 , 7 @ @ import sys <nl> import ConfigParser <nl> import ssl <nl> <nl> + <nl> def ssl _ settings ( host , config _ file , env = os . environ ) : <nl> " " " <nl> Function wcich generates SSL setting for cassandra . Cluster <nl> @ @ - 51 , 6 + 52 , 17 @ @ def ssl _ settings ( host , config _ file , env = os . environ ) : <nl> ssl _ validate = get _ option ( ' ssl ' , ' validate ' ) <nl> ssl _ validate = ssl _ validate is None or ssl _ validate . lower ( ) ! = ' false ' <nl> <nl> + ssl _ version _ str = env . get ( ' SSL _ VERSION ' ) <nl> + if ssl _ version _ str is None : <nl> + ssl _ version _ str = get _ option ( ' ssl ' , ' version ' ) <nl> + if ssl _ version _ str is None : <nl> + ssl _ version _ str = " TLSv1 " <nl> + <nl> + ssl _ version = getattr ( ssl , " PROTOCOL _ % s " % ssl _ version _ str , None ) <nl> + if ssl _ version is None : <nl> + sys . exit ( " % s is not a valid SSL protocol , please use one of SSLv23 , " <nl> + " TLSv1 , TLSv1 . 1 , or TLSv1 . 2 " % ( ssl _ version _ str , ) ) <nl> + <nl> ssl _ certfile = env . get ( ' SSL _ CERTFILE ' ) <nl> if ssl _ certfile is None : <nl> ssl _ certfile = get _ option ( ' certfiles ' , host ) <nl> @ @ - 73 , 6 + 85 , 5 @ @ def ssl _ settings ( host , config _ file , env = os . environ ) : <nl> <nl> return dict ( ca _ certs = ssl _ certfile , <nl> cert _ reqs = ssl . CERT _ REQUIRED if ssl _ validate else ssl . CERT _ NONE , <nl> - ssl _ version = ssl . PROTOCOL _ TLSv1 , <nl> + ssl _ version = ssl _ version , <nl> keyfile = userkey , certfile = usercert ) <nl> -
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 5f326d5 . . fae37a2 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 1438 , 7 + 1438 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> <nl> public List < Row > getRangeSlice ( ByteBuffer superColumn , final AbstractBounds < RowPosition > range , int maxResults , IFilter columnFilter , List < IndexExpression > rowFilter , boolean maxIsColumns , boolean isPaging ) <nl> { <nl> - logger . debug ( " Executing seq scan " ) ; <nl> + logger . debug ( " Executing seq scan for { } . . { } " , range . left , range . right ) ; <nl> return filter ( getSequentialIterator ( superColumn , range , columnFilter ) , ExtendedFilter . create ( this , columnFilter , rowFilter , maxResults , maxIsColumns , isPaging ) ) ; <nl> } <nl> <nl> @ @ - 1449 , 7 + 1449 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> <nl> public List < Row > search ( List < IndexExpression > clause , AbstractBounds < RowPosition > range , int maxResults , IFilter dataFilter , boolean maxIsColumns ) <nl> { <nl> - logger . debug ( " Executing indexed scan " ) ; <nl> + logger . debug ( " Executing indexed scan for { } . . { } " , range . left , range . right ) ; <nl> return indexManager . search ( clause , range , maxResults , dataFilter , maxIsColumns ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 2cbc7c4 . . 0fbadbc 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 6 @ @ 
 2 . 1 . 9 
 + * ( cqlsh ) Allow the SSL protocol version to be specified through the 
 + config file or environment variables ( CASSANDRA - 9544 ) 
 Merged from 2 . 0 : 
 * Scrub ( recover ) sstables even when - Index . db is missing , ( CASSANDRA - 9591 ) 
 
 diff - - git a / pylib / cqlshlib / sslhandling . py b / pylib / cqlshlib / sslhandling . py 
 index 70dd759 . . 2a90e26 100644 
 - - - a / pylib / cqlshlib / sslhandling . py 
 + + + b / pylib / cqlshlib / sslhandling . py 
 @ @ - 19 , 6 + 19 , 7 @ @ import sys 
 import ConfigParser 
 import ssl 
 
 + 
 def ssl _ settings ( host , config _ file , env = os . environ ) : 
 " " " 
 Function wcich generates SSL setting for cassandra . Cluster 
 @ @ - 51 , 6 + 52 , 17 @ @ def ssl _ settings ( host , config _ file , env = os . environ ) : 
 ssl _ validate = get _ option ( ' ssl ' , ' validate ' ) 
 ssl _ validate = ssl _ validate is None or ssl _ validate . lower ( ) ! = ' false ' 
 
 + ssl _ version _ str = env . get ( ' SSL _ VERSION ' ) 
 + if ssl _ version _ str is None : 
 + ssl _ version _ str = get _ option ( ' ssl ' , ' version ' ) 
 + if ssl _ version _ str is None : 
 + ssl _ version _ str = " TLSv1 " 
 + 
 + ssl _ version = getattr ( ssl , " PROTOCOL _ % s " % ssl _ version _ str , None ) 
 + if ssl _ version is None : 
 + sys . exit ( " % s is not a valid SSL protocol , please use one of SSLv23 , " 
 + " TLSv1 , TLSv1 . 1 , or TLSv1 . 2 " % ( ssl _ version _ str , ) ) 
 + 
 ssl _ certfile = env . get ( ' SSL _ CERTFILE ' ) 
 if ssl _ certfile is None : 
 ssl _ certfile = get _ option ( ' certfiles ' , host ) 
 @ @ - 73 , 6 + 85 , 5 @ @ def ssl _ settings ( host , config _ file , env = os . environ ) : 
 
 return dict ( ca _ certs = ssl _ certfile , 
 cert _ reqs = ssl . CERT _ REQUIRED if ssl _ validate else ssl . CERT _ NONE , 
 - ssl _ version = ssl . PROTOCOL _ TLSv1 , 
 + ssl _ version = ssl _ version , 
 keyfile = userkey , certfile = usercert ) 
 -

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 5f326d5 . . fae37a2 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 1438 , 7 + 1438 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 
 public List < Row > getRangeSlice ( ByteBuffer superColumn , final AbstractBounds < RowPosition > range , int maxResults , IFilter columnFilter , List < IndexExpression > rowFilter , boolean maxIsColumns , boolean isPaging ) 
 { 
 - logger . debug ( " Executing seq scan " ) ; 
 + logger . debug ( " Executing seq scan for { } . . { } " , range . left , range . right ) ; 
 return filter ( getSequentialIterator ( superColumn , range , columnFilter ) , ExtendedFilter . create ( this , columnFilter , rowFilter , maxResults , maxIsColumns , isPaging ) ) ; 
 } 
 
 @ @ - 1449 , 7 + 1449 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 
 public List < Row > search ( List < IndexExpression > clause , AbstractBounds < RowPosition > range , int maxResults , IFilter dataFilter , boolean maxIsColumns ) 
 { 
 - logger . debug ( " Executing indexed scan " ) ; 
 + logger . debug ( " Executing indexed scan for { } . . { } " , range . left , range . right ) ; 
 return indexManager . search ( clause , range , maxResults , dataFilter , maxIsColumns ) ; 
 } 

