BLEU SCORE: 0.024367494694068095

TEST MSG: Don ' t use strict consistency when replacing
GENERATED MSG: Fix streaming from all replica during boostrap / rebuild

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index f6f30fa . . a8299c6 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 0 - final <nl> + * Don ' t use strict consistency when replacing ( CASSANDRA - 7568 ) <nl> * Fix min / max cell name collection on 2 . 0 SSTables with range <nl> tombstones ( CASSANDRA - 7593 ) <nl> * Tolerate min / max cell names of different lengths ( CASSANDRA - 7651 ) <nl> diff - - git a / src / java / org / apache / cassandra / dht / RangeStreamer . java b / src / java / org / apache / cassandra / dht / RangeStreamer . java <nl> index 2308d30 . . 14d24fc 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / RangeStreamer . java <nl> + + + b / src / java / org / apache / cassandra / dht / RangeStreamer . java <nl> @ @ - 128 , 7 + 128 , 7 @ @ public class RangeStreamer <nl> <nl> public void addRanges ( String keyspaceName , Collection < Range < Token > > ranges ) <nl> { <nl> - Multimap < Range < Token > , InetAddress > rangesForKeyspace = useStrictConsistency & & tokens ! = null <nl> + Multimap < Range < Token > , InetAddress > rangesForKeyspace = ! DatabaseDescriptor . isReplacing ( ) & & useStrictConsistency & & tokens ! = null <nl> ? getAllRangesWithStrictSourcesFor ( keyspaceName , ranges ) : getAllRangesWithSourcesFor ( keyspaceName , ranges ) ; <nl> <nl> if ( logger . isDebugEnabled ( ) )
NEAREST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableSimpleWriterTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableSimpleWriterTest . java <nl> index c9edd53 . . 9416432 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableSimpleWriterTest . java <nl> + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableSimpleWriterTest . java <nl> @ @ - 28 , 6 + 28 , 7 @ @ import org . apache . cassandra . CleanupHelper ; <nl> import org . apache . cassandra . Util ; <nl> import org . apache . cassandra . db . * ; <nl> import org . apache . cassandra . db . marshal . IntegerType ; <nl> + import org . apache . cassandra . service . StorageService ; <nl> import static org . apache . cassandra . utils . ByteBufferUtil . bytes ; <nl> import static org . apache . cassandra . utils . ByteBufferUtil . toInt ; <nl> <nl> @ @ - 46 , 7 + 47 , 7 @ @ public class SSTableSimpleWriterTest extends CleanupHelper <nl> File dir = Directories . create ( tablename , cfname ) . getDirectoryForNewSSTables ( 0 ) ; <nl> assert dir . exists ( ) ; <nl> <nl> - IPartitioner partitioner = new RandomPartitioner ( ) ; <nl> + IPartitioner partitioner = StorageService . getPartitioner ( ) ; <nl> SSTableSimpleUnsortedWriter writer = new SSTableSimpleUnsortedWriter ( dir , partitioner , tablename , cfname , IntegerType . instance , null , 16 ) ; <nl> <nl> int k = 0 ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index f6f30fa . . a8299c6 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 0 - final 
 + * Don ' t use strict consistency when replacing ( CASSANDRA - 7568 ) 
 * Fix min / max cell name collection on 2 . 0 SSTables with range 
 tombstones ( CASSANDRA - 7593 ) 
 * Tolerate min / max cell names of different lengths ( CASSANDRA - 7651 ) 
 diff - - git a / src / java / org / apache / cassandra / dht / RangeStreamer . java b / src / java / org / apache / cassandra / dht / RangeStreamer . java 
 index 2308d30 . . 14d24fc 100644 
 - - - a / src / java / org / apache / cassandra / dht / RangeStreamer . java 
 + + + b / src / java / org / apache / cassandra / dht / RangeStreamer . java 
 @ @ - 128 , 7 + 128 , 7 @ @ public class RangeStreamer 
 
 public void addRanges ( String keyspaceName , Collection < Range < Token > > ranges ) 
 { 
 - Multimap < Range < Token > , InetAddress > rangesForKeyspace = useStrictConsistency & & tokens ! = null 
 + Multimap < Range < Token > , InetAddress > rangesForKeyspace = ! DatabaseDescriptor . isReplacing ( ) & & useStrictConsistency & & tokens ! = null 
 ? getAllRangesWithStrictSourcesFor ( keyspaceName , ranges ) : getAllRangesWithSourcesFor ( keyspaceName , ranges ) ; 
 
 if ( logger . isDebugEnabled ( ) )

NEAREST DIFF:
diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableSimpleWriterTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableSimpleWriterTest . java 
 index c9edd53 . . 9416432 100644 
 - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableSimpleWriterTest . java 
 + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableSimpleWriterTest . java 
 @ @ - 28 , 6 + 28 , 7 @ @ import org . apache . cassandra . CleanupHelper ; 
 import org . apache . cassandra . Util ; 
 import org . apache . cassandra . db . * ; 
 import org . apache . cassandra . db . marshal . IntegerType ; 
 + import org . apache . cassandra . service . StorageService ; 
 import static org . apache . cassandra . utils . ByteBufferUtil . bytes ; 
 import static org . apache . cassandra . utils . ByteBufferUtil . toInt ; 
 
 @ @ - 46 , 7 + 47 , 7 @ @ public class SSTableSimpleWriterTest extends CleanupHelper 
 File dir = Directories . create ( tablename , cfname ) . getDirectoryForNewSSTables ( 0 ) ; 
 assert dir . exists ( ) ; 
 
 - IPartitioner partitioner = new RandomPartitioner ( ) ; 
 + IPartitioner partitioner = StorageService . getPartitioner ( ) ; 
 SSTableSimpleUnsortedWriter writer = new SSTableSimpleUnsortedWriter ( dir , partitioner , tablename , cfname , IntegerType . instance , null , 16 ) ; 
 
 int k = 0 ;
