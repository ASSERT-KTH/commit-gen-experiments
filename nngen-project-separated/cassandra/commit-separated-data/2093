BLEU SCORE: 1.0

TEST MSG: Ignore fat clients when checking for endpoint collision
GENERATED MSG: Ignore fat clients when checking for endpoint collision

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index fca7ccb . . 354cb5d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 1 <nl> + * Ignore fat clients when checking for endpoint collision ( CASSANDRA - 7939 ) <nl> * Make sstablerepairedset take a list of files ( CASSANDRA - 7995 ) <nl> * ( cqlsh ) Tab completeion for indexes on map keys ( CASSANDRA - 7972 ) <nl> * ( cqlsh ) Fix UDT field selection in select clause ( CASSANDRA - 7891 ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index a005c44 . . d2cb1ab 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 453 , 12 + 453 , 26 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; <nl> Gossiper . instance . doShadowRound ( ) ; <nl> EndpointState epState = Gossiper . instance . getEndpointStateForEndpoint ( FBUtilities . getBroadcastAddress ( ) ) ; <nl> - if ( epState ! = null & & ! Gossiper . instance . isDeadState ( epState ) ) <nl> + if ( epState ! = null & & ! Gossiper . instance . isDeadState ( epState ) & & ! Gossiper . instance . isFatClient ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> { <nl> throw new RuntimeException ( String . format ( " A node with address % s already exists , cancelling join . " + <nl> " Use cassandra . replace _ address if you want to replace this node . " , <nl> FBUtilities . getBroadcastAddress ( ) ) ) ; <nl> } <nl> + if ( RangeStreamer . useStrictConsistency ) <nl> + { <nl> + for ( Map . Entry < InetAddress , EndpointState > entry : Gossiper . instance . getEndpointStates ( ) ) <nl> + { <nl> + <nl> + if ( entry . getValue ( ) . getApplicationState ( ApplicationState . STATUS ) = = null ) <nl> + continue ; <nl> + String [ ] pieces = entry . getValue ( ) . getApplicationState ( ApplicationState . STATUS ) . value . split ( VersionedValue . DELIMITER _ STR , - 1 ) ; <nl> + assert ( pieces . length > 0 ) ; <nl> + String state = pieces [ 0 ] ; <nl> + if ( state . equals ( VersionedValue . STATUS _ BOOTSTRAPPING ) | | state . equals ( VersionedValue . STATUS _ LEAVING ) | | state . equals ( VersionedValue . STATUS _ MOVING ) ) <nl> + throw new UnsupportedOperationException ( " Other bootstrapping / leaving / moving nodes detected , cannot bootstrap while cassandra . consistent . rangemovement is true " ) ; <nl> + } <nl> + } <nl> Gossiper . instance . resetEndpointStateMap ( ) ; <nl> } <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index fca7ccb . . 354cb5d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 1 
 + * Ignore fat clients when checking for endpoint collision ( CASSANDRA - 7939 ) 
 * Make sstablerepairedset take a list of files ( CASSANDRA - 7995 ) 
 * ( cqlsh ) Tab completeion for indexes on map keys ( CASSANDRA - 7972 ) 
 * ( cqlsh ) Fix UDT field selection in select clause ( CASSANDRA - 7891 ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index a005c44 . . d2cb1ab 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 453 , 12 + 453 , 26 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; 
 Gossiper . instance . doShadowRound ( ) ; 
 EndpointState epState = Gossiper . instance . getEndpointStateForEndpoint ( FBUtilities . getBroadcastAddress ( ) ) ; 
 - if ( epState ! = null & & ! Gossiper . instance . isDeadState ( epState ) ) 
 + if ( epState ! = null & & ! Gossiper . instance . isDeadState ( epState ) & & ! Gossiper . instance . isFatClient ( FBUtilities . getBroadcastAddress ( ) ) ) 
 { 
 throw new RuntimeException ( String . format ( " A node with address % s already exists , cancelling join . " + 
 " Use cassandra . replace _ address if you want to replace this node . " , 
 FBUtilities . getBroadcastAddress ( ) ) ) ; 
 } 
 + if ( RangeStreamer . useStrictConsistency ) 
 + { 
 + for ( Map . Entry < InetAddress , EndpointState > entry : Gossiper . instance . getEndpointStates ( ) ) 
 + { 
 + 
 + if ( entry . getValue ( ) . getApplicationState ( ApplicationState . STATUS ) = = null ) 
 + continue ; 
 + String [ ] pieces = entry . getValue ( ) . getApplicationState ( ApplicationState . STATUS ) . value . split ( VersionedValue . DELIMITER _ STR , - 1 ) ; 
 + assert ( pieces . length > 0 ) ; 
 + String state = pieces [ 0 ] ; 
 + if ( state . equals ( VersionedValue . STATUS _ BOOTSTRAPPING ) | | state . equals ( VersionedValue . STATUS _ LEAVING ) | | state . equals ( VersionedValue . STATUS _ MOVING ) ) 
 + throw new UnsupportedOperationException ( " Other bootstrapping / leaving / moving nodes detected , cannot bootstrap while cassandra . consistent . rangemovement is true " ) ; 
 + } 
 + } 
 Gossiper . instance . resetEndpointStateMap ( ) ; 
 } 


NEAREST DIFF:
ELIMINATEDSENTENCE
