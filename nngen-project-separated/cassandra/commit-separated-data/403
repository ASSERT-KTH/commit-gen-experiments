BLEU SCORE: 0.035802380724744266

TEST MSG: Avoid name clashes in CassandraIndexTest
GENERATED MSG: Fix testLimitSSTables flake caused by concurrent flush

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index e55d4cb . . 11881e9 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 14 <nl> + * Avoid name clashes in CassandraIndexTest ( CASSANDRA - 13427 ) <nl> * Handling partially written hint files ( CASSANDRA - 12728 ) <nl> * Interrupt replaying hints on decommission ( CASSANDRA - 13308 ) <nl> <nl> diff - - git a / test / unit / org / apache / cassandra / index / internal / CassandraIndexTest . java b / test / unit / org / apache / cassandra / index / internal / CassandraIndexTest . java <nl> index 6c309ac . . 68fe42d 100644 <nl> - - - a / test / unit / org / apache / cassandra / index / internal / CassandraIndexTest . java <nl> + + + b / test / unit / org / apache / cassandra / index / internal / CassandraIndexTest . java <nl> @ @ - 60 , 7 + 60 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , v int , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " v " ) <nl> - . indexName ( " v _ index " ) <nl> . withFirstRow ( row ( 0 , 0 , 0 ) ) <nl> . withSecondRow ( row ( 1 , 1 , 1 ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 77 , 7 + 76 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> / / No update allowed on primary key columns , so this script has no update expression <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , v int , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " c " ) <nl> - . indexName ( " c _ index " ) <nl> . withFirstRow ( row ( 0 , 0 , 0 ) ) <nl> . withSecondRow ( row ( 1 , 1 , 1 ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 92 , 7 + 90 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> / / No update allowed on primary key columns , so this script has no update expression <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c1 int , c2 int , v int , PRIMARY KEY ( k , c1 , c2 ) ) ; " ) <nl> . target ( " c2 " ) <nl> - . indexName ( " c2 _ index " ) <nl> . withFirstRow ( row ( 0 , 0 , 0 , 0 ) ) <nl> . withSecondRow ( row ( 1 , 1 , 1 , 1 ) ) <nl> . missingIndexMessage ( String . format ( " PRIMARY KEY column \ " % s \ " cannot be restricted " + <nl> @ @ - 109 , 7 + 106 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> / / No update allowed on primary key columns , so this script has no update expression <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k1 int , k2 int , c1 int , c2 int , v int , PRIMARY KEY ( ( k1 , k2 ) , c1 , c2 ) ) ; " ) <nl> . target ( " k1 " ) <nl> - . indexName ( " k1 _ index " ) <nl> . withFirstRow ( row ( 0 , 0 , 0 , 0 , 0 ) ) <nl> . withSecondRow ( row ( 1 , 1 , 1 , 1 , 1 ) ) <nl> . missingIndexMessage ( " Partition key parts : k2 must be restricted as other parts are " ) <nl> @ @ - 124 , 7 + 120 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> / / No update allowed on primary key columns , so this script has no update expression <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k1 int , k2 int , c1 int , c2 int , v int , PRIMARY KEY ( ( k1 , k2 ) , c1 , c2 ) ) ; " ) <nl> . target ( " k2 " ) <nl> - . indexName ( " k2 _ index " ) <nl> . withFirstRow ( row ( 0 , 0 , 0 , 0 , 0 ) ) <nl> . withSecondRow ( row ( 1 , 1 , 1 , 1 , 1 ) ) <nl> . missingIndexMessage ( " Partition key parts : k1 must be restricted as other parts are " ) <nl> @ @ - 138 , 7 + 133 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , l list < int > , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " l " ) <nl> - . indexName ( " l _ index1 " ) <nl> . withFirstRow ( row ( 0 , 0 , Lists . newArrayList ( 10 , 20 , 30 ) ) ) <nl> . withSecondRow ( row ( 1 , 1 , Lists . newArrayList ( 11 , 21 , 31 ) ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 154 , 7 + 148 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , l list < int > , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " l " ) <nl> - . indexName ( " l _ index2 " ) <nl> . withFirstRow ( row ( 0 , 0 , Lists . newArrayList ( 10 , 20 , 30 ) ) ) <nl> . withSecondRow ( row ( 1 , 1 , Lists . newArrayList ( 11 , 21 , 31 ) ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 170 , 7 + 163 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , s set < int > , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " s " ) <nl> - . indexName ( " s _ index1 " ) <nl> . withFirstRow ( row ( 0 , 0 , Sets . newHashSet ( 10 , 20 , 30 ) ) ) <nl> . withSecondRow ( row ( 1 , 1 , Sets . newHashSet ( 11 , 21 , 31 ) ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 186 , 7 + 178 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , s set < int > , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " s " ) <nl> - . indexName ( " s _ index2 " ) <nl> . withFirstRow ( row ( 0 , 0 , Sets . newHashSet ( 10 , 20 , 30 ) ) ) <nl> . withSecondRow ( row ( 1 , 1 , Sets . newHashSet ( 11 , 21 , 31 ) ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 202 , 7 + 193 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , m map < text , int > , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " m " ) <nl> - . indexName ( " m _ index1 " ) <nl> . withFirstRow ( row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ) <nl> . withSecondRow ( row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 31 ) ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 218 , 7 + 208 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , m map < text , int > , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " m " ) <nl> - . indexName ( " m _ index2 " ) <nl> . withFirstRow ( row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ) <nl> . withSecondRow ( row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 31 ) ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 234 , 7 + 223 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , m map < text , int > , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " keys ( m ) " ) <nl> - . indexName ( " m _ index3 " ) <nl> . withFirstRow ( row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ) <nl> . withSecondRow ( row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 31 ) ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 250 , 7 + 238 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , m map < text , int > , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " keys ( m ) " ) <nl> - . indexName ( " m _ index4 " ) <nl> . withFirstRow ( row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ) <nl> . withSecondRow ( row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 31 ) ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 266 , 7 + 253 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , m map < text , int > , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " entries ( m ) " ) <nl> - . indexName ( " m _ index5 " ) <nl> . withFirstRow ( row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ) <nl> . withSecondRow ( row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 31 ) ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 282 , 7 + 268 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , m map < text , int > , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " entries ( m ) " ) <nl> - . indexName ( " m _ index6 " ) <nl> . withFirstRow ( row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ) <nl> . withSecondRow ( row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 31 ) ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 298 , 7 + 283 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , l frozen < list < int > > , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " full ( l ) " ) <nl> - . indexName ( " fl _ index " ) <nl> . withFirstRow ( row ( 0 , 0 , Lists . newArrayList ( 10 , 20 , 30 ) ) ) <nl> . withSecondRow ( row ( 1 , 1 , Lists . newArrayList ( 11 , 21 , 31 ) ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 314 , 7 + 298 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , s frozen < set < int > > , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " full ( s ) " ) <nl> - . indexName ( " fs _ index " ) <nl> . withFirstRow ( row ( 0 , 0 , Sets . newHashSet ( 10 , 20 , 30 ) ) ) <nl> . withSecondRow ( row ( 1 , 1 , Sets . newHashSet ( 11 , 21 , 31 ) ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 330 , 7 + 313 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , m frozen < map < text , int > > , PRIMARY KEY ( k , c ) ) ; " ) <nl> . target ( " full ( m ) " ) <nl> - . indexName ( " fm _ index " ) <nl> . withFirstRow ( row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ) <nl> . withSecondRow ( row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 31 ) ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 346 , 7 + 328 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> { <nl> new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , v int , PRIMARY KEY ( k ) ) WITH COMPACT STORAGE ; " ) <nl> . target ( " v " ) <nl> - . indexName ( " cv _ index " ) <nl> . withFirstRow ( row ( 0 , 0 ) ) <nl> . withSecondRow ( row ( 1 , 1 ) ) <nl> . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) <nl> @ @ - 391 , 8 + 372 , 8 @ @ public class CassandraIndexTest extends CQLTester <nl> Object [ ] row1 = row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ; <nl> Object [ ] row2 = row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 32 ) ) ; <nl> createTable ( " CREATE TABLE % s ( k int , c int , m map < text , int > , PRIMARY KEY ( k , c ) ) " ) ; <nl> - createIndex ( " CREATE INDEX mkey _ index on % s ( keys ( m ) ) " ) ; <nl> - createIndex ( " CREATE INDEX mval _ index on % s ( m ) " ) ; <nl> + createIndex ( " CREATE INDEX ON % s ( keys ( m ) ) " ) ; <nl> + createIndex ( " CREATE INDEX ON % s ( m ) " ) ; <nl> <nl> execute ( " INSERT INTO % s ( k , c , m ) VALUES ( ? , ? , ? ) " , row1 ) ; <nl> execute ( " INSERT INTO % s ( k , c , m ) VALUES ( ? , ? , ? ) " , row2 ) ; <nl> @ @ - 409 , 7 + 390 , 7 @ @ public class CassandraIndexTest extends CQLTester <nl> int key = 0 ; <nl> int indexedValue = 99 ; <nl> createTable ( " CREATE TABLE % s ( k int , v int , PRIMARY KEY ( k ) ) " ) ; <nl> - createIndex ( " CREATE INDEX v _ index on % s ( v ) " ) ; <nl> + createIndex ( " CREATE INDEX ON % s ( v ) " ) ; <nl> execute ( " INSERT INTO % s ( k , v ) VALUES ( ? , ? ) " , key , indexedValue ) ; <nl> <nl> assertRows ( execute ( " SELECT * FROM % s WHERE v = ? " , indexedValue ) , row ( key , indexedValue ) ) ; <nl> @ @ - 544 , 6 + 525 , 9 @ @ public class CassandraIndexTest extends CQLTester <nl> } <nl> } <nl> <nl> + / / Used in order to generate the unique names for indexes <nl> + private static int indexCounter ; <nl> + <nl> private class TestScript <nl> { <nl> String tableDefinition ; <nl> @ @ - 558 , 12 + 542 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> Object [ ] firstRow ; <nl> Object [ ] secondRow ; <nl> <nl> - TestScript indexName ( String indexName ) <nl> - { <nl> - this . indexName = indexName ; <nl> - return this ; <nl> - } <nl> - <nl> TestScript target ( String indexTarget ) <nl> { <nl> this . indexTarget = indexTarget ; <nl> @ @ - 621 , 7 + 599 , 6 @ @ public class CassandraIndexTest extends CQLTester <nl> void run ( ) throws Throwable <nl> { <nl> / / check minimum required setup <nl> - assertNotNull ( indexName ) ; <nl> assertNotNull ( indexTarget ) ; <nl> assertNotNull ( queryExpression1 ) ; <nl> assertNotNull ( queryExpression2 ) ; <nl> @ @ - 632 , 7 + 609 , 9 @ @ public class CassandraIndexTest extends CQLTester <nl> assertNotNull ( postUpdateQueryExpression ) ; <nl> <nl> / / first , create the table as we need the CFMetaData to build the other cql statements <nl> - createTable ( tableDefinition ) ; <nl> + String tableName = createTable ( tableDefinition ) ; <nl> + <nl> + indexName = String . format ( " index _ % s _ % d " , tableName , indexCounter + + ) ; <nl> <nl> / / now setup the cql statements the test will run through . Some are dependent on <nl> / / the table definition , others are not .
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index e55d4cb . . 11881e9 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 14 
 + * Avoid name clashes in CassandraIndexTest ( CASSANDRA - 13427 ) 
 * Handling partially written hint files ( CASSANDRA - 12728 ) 
 * Interrupt replaying hints on decommission ( CASSANDRA - 13308 ) 
 
 diff - - git a / test / unit / org / apache / cassandra / index / internal / CassandraIndexTest . java b / test / unit / org / apache / cassandra / index / internal / CassandraIndexTest . java 
 index 6c309ac . . 68fe42d 100644 
 - - - a / test / unit / org / apache / cassandra / index / internal / CassandraIndexTest . java 
 + + + b / test / unit / org / apache / cassandra / index / internal / CassandraIndexTest . java 
 @ @ - 60 , 7 + 60 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , v int , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " v " ) 
 - . indexName ( " v _ index " ) 
 . withFirstRow ( row ( 0 , 0 , 0 ) ) 
 . withSecondRow ( row ( 1 , 1 , 1 ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 77 , 7 + 76 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 / / No update allowed on primary key columns , so this script has no update expression 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , v int , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " c " ) 
 - . indexName ( " c _ index " ) 
 . withFirstRow ( row ( 0 , 0 , 0 ) ) 
 . withSecondRow ( row ( 1 , 1 , 1 ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 92 , 7 + 90 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 / / No update allowed on primary key columns , so this script has no update expression 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c1 int , c2 int , v int , PRIMARY KEY ( k , c1 , c2 ) ) ; " ) 
 . target ( " c2 " ) 
 - . indexName ( " c2 _ index " ) 
 . withFirstRow ( row ( 0 , 0 , 0 , 0 ) ) 
 . withSecondRow ( row ( 1 , 1 , 1 , 1 ) ) 
 . missingIndexMessage ( String . format ( " PRIMARY KEY column \ " % s \ " cannot be restricted " + 
 @ @ - 109 , 7 + 106 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 / / No update allowed on primary key columns , so this script has no update expression 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k1 int , k2 int , c1 int , c2 int , v int , PRIMARY KEY ( ( k1 , k2 ) , c1 , c2 ) ) ; " ) 
 . target ( " k1 " ) 
 - . indexName ( " k1 _ index " ) 
 . withFirstRow ( row ( 0 , 0 , 0 , 0 , 0 ) ) 
 . withSecondRow ( row ( 1 , 1 , 1 , 1 , 1 ) ) 
 . missingIndexMessage ( " Partition key parts : k2 must be restricted as other parts are " ) 
 @ @ - 124 , 7 + 120 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 / / No update allowed on primary key columns , so this script has no update expression 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k1 int , k2 int , c1 int , c2 int , v int , PRIMARY KEY ( ( k1 , k2 ) , c1 , c2 ) ) ; " ) 
 . target ( " k2 " ) 
 - . indexName ( " k2 _ index " ) 
 . withFirstRow ( row ( 0 , 0 , 0 , 0 , 0 ) ) 
 . withSecondRow ( row ( 1 , 1 , 1 , 1 , 1 ) ) 
 . missingIndexMessage ( " Partition key parts : k1 must be restricted as other parts are " ) 
 @ @ - 138 , 7 + 133 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , l list < int > , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " l " ) 
 - . indexName ( " l _ index1 " ) 
 . withFirstRow ( row ( 0 , 0 , Lists . newArrayList ( 10 , 20 , 30 ) ) ) 
 . withSecondRow ( row ( 1 , 1 , Lists . newArrayList ( 11 , 21 , 31 ) ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 154 , 7 + 148 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , l list < int > , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " l " ) 
 - . indexName ( " l _ index2 " ) 
 . withFirstRow ( row ( 0 , 0 , Lists . newArrayList ( 10 , 20 , 30 ) ) ) 
 . withSecondRow ( row ( 1 , 1 , Lists . newArrayList ( 11 , 21 , 31 ) ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 170 , 7 + 163 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , s set < int > , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " s " ) 
 - . indexName ( " s _ index1 " ) 
 . withFirstRow ( row ( 0 , 0 , Sets . newHashSet ( 10 , 20 , 30 ) ) ) 
 . withSecondRow ( row ( 1 , 1 , Sets . newHashSet ( 11 , 21 , 31 ) ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 186 , 7 + 178 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , s set < int > , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " s " ) 
 - . indexName ( " s _ index2 " ) 
 . withFirstRow ( row ( 0 , 0 , Sets . newHashSet ( 10 , 20 , 30 ) ) ) 
 . withSecondRow ( row ( 1 , 1 , Sets . newHashSet ( 11 , 21 , 31 ) ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 202 , 7 + 193 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , m map < text , int > , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " m " ) 
 - . indexName ( " m _ index1 " ) 
 . withFirstRow ( row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ) 
 . withSecondRow ( row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 31 ) ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 218 , 7 + 208 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , m map < text , int > , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " m " ) 
 - . indexName ( " m _ index2 " ) 
 . withFirstRow ( row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ) 
 . withSecondRow ( row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 31 ) ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 234 , 7 + 223 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , m map < text , int > , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " keys ( m ) " ) 
 - . indexName ( " m _ index3 " ) 
 . withFirstRow ( row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ) 
 . withSecondRow ( row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 31 ) ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 250 , 7 + 238 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , m map < text , int > , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " keys ( m ) " ) 
 - . indexName ( " m _ index4 " ) 
 . withFirstRow ( row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ) 
 . withSecondRow ( row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 31 ) ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 266 , 7 + 253 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , m map < text , int > , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " entries ( m ) " ) 
 - . indexName ( " m _ index5 " ) 
 . withFirstRow ( row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ) 
 . withSecondRow ( row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 31 ) ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 282 , 7 + 268 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , m map < text , int > , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " entries ( m ) " ) 
 - . indexName ( " m _ index6 " ) 
 . withFirstRow ( row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ) 
 . withSecondRow ( row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 31 ) ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 298 , 7 + 283 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , l frozen < list < int > > , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " full ( l ) " ) 
 - . indexName ( " fl _ index " ) 
 . withFirstRow ( row ( 0 , 0 , Lists . newArrayList ( 10 , 20 , 30 ) ) ) 
 . withSecondRow ( row ( 1 , 1 , Lists . newArrayList ( 11 , 21 , 31 ) ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 314 , 7 + 298 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , s frozen < set < int > > , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " full ( s ) " ) 
 - . indexName ( " fs _ index " ) 
 . withFirstRow ( row ( 0 , 0 , Sets . newHashSet ( 10 , 20 , 30 ) ) ) 
 . withSecondRow ( row ( 1 , 1 , Sets . newHashSet ( 11 , 21 , 31 ) ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 330 , 7 + 313 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , c int , m frozen < map < text , int > > , PRIMARY KEY ( k , c ) ) ; " ) 
 . target ( " full ( m ) " ) 
 - . indexName ( " fm _ index " ) 
 . withFirstRow ( row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ) 
 . withSecondRow ( row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 31 ) ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 346 , 7 + 328 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 { 
 new TestScript ( ) . tableDefinition ( " CREATE TABLE % s ( k int , v int , PRIMARY KEY ( k ) ) WITH COMPACT STORAGE ; " ) 
 . target ( " v " ) 
 - . indexName ( " cv _ index " ) 
 . withFirstRow ( row ( 0 , 0 ) ) 
 . withSecondRow ( row ( 1 , 1 ) ) 
 . missingIndexMessage ( StatementRestrictions . REQUIRES _ ALLOW _ FILTERING _ MESSAGE ) 
 @ @ - 391 , 8 + 372 , 8 @ @ public class CassandraIndexTest extends CQLTester 
 Object [ ] row1 = row ( 0 , 0 , ImmutableMap . of ( " a " , 10 , " b " , 20 , " c " , 30 ) ) ; 
 Object [ ] row2 = row ( 1 , 1 , ImmutableMap . of ( " d " , 11 , " e " , 21 , " f " , 32 ) ) ; 
 createTable ( " CREATE TABLE % s ( k int , c int , m map < text , int > , PRIMARY KEY ( k , c ) ) " ) ; 
 - createIndex ( " CREATE INDEX mkey _ index on % s ( keys ( m ) ) " ) ; 
 - createIndex ( " CREATE INDEX mval _ index on % s ( m ) " ) ; 
 + createIndex ( " CREATE INDEX ON % s ( keys ( m ) ) " ) ; 
 + createIndex ( " CREATE INDEX ON % s ( m ) " ) ; 
 
 execute ( " INSERT INTO % s ( k , c , m ) VALUES ( ? , ? , ? ) " , row1 ) ; 
 execute ( " INSERT INTO % s ( k , c , m ) VALUES ( ? , ? , ? ) " , row2 ) ; 
 @ @ - 409 , 7 + 390 , 7 @ @ public class CassandraIndexTest extends CQLTester 
 int key = 0 ; 
 int indexedValue = 99 ; 
 createTable ( " CREATE TABLE % s ( k int , v int , PRIMARY KEY ( k ) ) " ) ; 
 - createIndex ( " CREATE INDEX v _ index on % s ( v ) " ) ; 
 + createIndex ( " CREATE INDEX ON % s ( v ) " ) ; 
 execute ( " INSERT INTO % s ( k , v ) VALUES ( ? , ? ) " , key , indexedValue ) ; 
 
 assertRows ( execute ( " SELECT * FROM % s WHERE v = ? " , indexedValue ) , row ( key , indexedValue ) ) ; 
 @ @ - 544 , 6 + 525 , 9 @ @ public class CassandraIndexTest extends CQLTester 
 } 
 } 
 
 + / / Used in order to generate the unique names for indexes 
 + private static int indexCounter ; 
 + 
 private class TestScript 
 { 
 String tableDefinition ; 
 @ @ - 558 , 12 + 542 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 Object [ ] firstRow ; 
 Object [ ] secondRow ; 
 
 - TestScript indexName ( String indexName ) 
 - { 
 - this . indexName = indexName ; 
 - return this ; 
 - } 
 - 
 TestScript target ( String indexTarget ) 
 { 
 this . indexTarget = indexTarget ; 
 @ @ - 621 , 7 + 599 , 6 @ @ public class CassandraIndexTest extends CQLTester 
 void run ( ) throws Throwable 
 { 
 / / check minimum required setup 
 - assertNotNull ( indexName ) ; 
 assertNotNull ( indexTarget ) ; 
 assertNotNull ( queryExpression1 ) ; 
 assertNotNull ( queryExpression2 ) ; 
 @ @ - 632 , 7 + 609 , 9 @ @ public class CassandraIndexTest extends CQLTester 
 assertNotNull ( postUpdateQueryExpression ) ; 
 
 / / first , create the table as we need the CFMetaData to build the other cql statements 
 - createTable ( tableDefinition ) ; 
 + String tableName = createTable ( tableDefinition ) ; 
 + 
 + indexName = String . format ( " index _ % s _ % d " , tableName , indexCounter + + ) ; 
 
 / / now setup the cql statements the test will run through . Some are dependent on 
 / / the table definition , others are not .

NEAREST DIFF:
ELIMINATEDSENTENCE
