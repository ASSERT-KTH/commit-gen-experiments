BLEU SCORE: 0.034353182138500235

TEST MSG: NoReplicationTokenAllocator should support zero replication factor
GENERATED MSG: merge from 1 . 0 . 0

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 306412b . . 0f607db 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 12 <nl> + * NoReplicationTokenAllocator should work with zero replication factor ( CASSANDRA - 12983 ) <nl> * cqlsh auto completion : refactor definition of compaction strategy options ( CASSANDRA - 12946 ) <nl> * Add support for arithmetic operators ( CASSANDRA - 11935 ) <nl> <nl> diff - - git a / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocatorFactory . java b / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocatorFactory . java <nl> index f8c972d . . d20de8f 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocatorFactory . java <nl> + + + b / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocatorFactory . java <nl> @ @ - 21 , 17 + 21 , 25 @ @ package org . apache . cassandra . dht . tokenallocator ; <nl> import java . net . InetAddress ; <nl> import java . util . NavigableMap ; <nl> <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + <nl> import org . apache . cassandra . dht . IPartitioner ; <nl> import org . apache . cassandra . dht . Token ; <nl> <nl> public class TokenAllocatorFactory <nl> { <nl> + private static final Logger logger = LoggerFactory . getLogger ( TokenAllocatorFactory . class ) ; <nl> public static TokenAllocator < InetAddress > createTokenAllocator ( NavigableMap < Token , InetAddress > sortedTokens , <nl> ReplicationStrategy < InetAddress > strategy , <nl> IPartitioner partitioner ) <nl> { <nl> - if ( strategy . replicas ( ) = = 1 ) <nl> + if ( strategy . replicas ( ) = = 1 | | strategy . replicas ( ) = = 0 ) <nl> + { <nl> + logger . info ( " Using NoReplicationTokenAllocator . " ) ; <nl> return new NoReplicationTokenAllocator < > ( sortedTokens , strategy , partitioner ) ; <nl> + } <nl> + logger . info ( " Using ReplicationAwareTokenAllocator . " ) ; <nl> return new ReplicationAwareTokenAllocator < > ( sortedTokens , strategy , partitioner ) ; <nl> } <nl> } <nl> diff - - git a / test / long / org / apache / cassandra / dht / tokenallocator / NoReplicationTokenAllocatorTest . java b / test / long / org / apache / cassandra / dht / tokenallocator / NoReplicationTokenAllocatorTest . java <nl> index fdcc6b8 . . c53f788 100644 <nl> - - - a / test / long / org / apache / cassandra / dht / tokenallocator / NoReplicationTokenAllocatorTest . java <nl> + + + b / test / long / org / apache / cassandra / dht / tokenallocator / NoReplicationTokenAllocatorTest . java <nl> @ @ - 55 , 6 + 55 , 7 @ @ public class NoReplicationTokenAllocatorTest extends TokenAllocatorTestBase <nl> for ( int perUnitCount = 1 ; perUnitCount < = MAX _ VNODE _ COUNT ; perUnitCount * = 4 ) <nl> { <nl> testNewCluster ( perUnitCount , fixedTokenCount , new NoReplicationStrategy ( ) , partitioner ) ; <nl> + testNewCluster ( perUnitCount , fixedTokenCount , new ZeroReplicationStrategy ( ) , partitioner ) ; <nl> } <nl> } <nl> <nl> @ @ - 87 , 6 + 88 , 7 @ @ public class NoReplicationTokenAllocatorTest extends TokenAllocatorTestBase <nl> for ( int perUnitCount = 1 ; perUnitCount < = MAX _ VNODE _ COUNT ; perUnitCount * = 4 ) <nl> { <nl> testExistingCluster ( perUnitCount , fixedTokenCount , new NoReplicationStrategy ( ) , partitioner ) ; <nl> + testExistingCluster ( perUnitCount , fixedTokenCount , new ZeroReplicationStrategy ( ) , partitioner ) ; <nl> } <nl> } <nl> <nl> @ @ - 246 , 4 + 248 , 11 @ @ public class NoReplicationTokenAllocatorTest extends TokenAllocatorTestBase <nl> } <nl> } <nl> <nl> + static class ZeroReplicationStrategy extends NoReplicationStrategy <nl> + { <nl> + public int replicas ( ) <nl> + { <nl> + return 0 ; <nl> + } <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 630ee2e . . 1f0f0e9 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 10 @ @ <nl> - 1 . 0 - dev <nl> + 1 . 1 - dev <nl> + <nl> + <nl> + 1 . 0 . 1 <nl> + <nl> + <nl> + 1 . 0 <nl> * removed binarymemtable ( CASSANDRA - 2692 ) <nl> * add commitlog _ total _ space _ in _ mb to prevent fragmented logs ( CASSANDRA - 2427 ) <nl> * removed commitlog _ rotation _ threshold _ in _ mb configuration ( CASSANDRA - 2771 )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 306412b . . 0f607db 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 12 
 + * NoReplicationTokenAllocator should work with zero replication factor ( CASSANDRA - 12983 ) 
 * cqlsh auto completion : refactor definition of compaction strategy options ( CASSANDRA - 12946 ) 
 * Add support for arithmetic operators ( CASSANDRA - 11935 ) 
 
 diff - - git a / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocatorFactory . java b / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocatorFactory . java 
 index f8c972d . . d20de8f 100644 
 - - - a / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocatorFactory . java 
 + + + b / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocatorFactory . java 
 @ @ - 21 , 17 + 21 , 25 @ @ package org . apache . cassandra . dht . tokenallocator ; 
 import java . net . InetAddress ; 
 import java . util . NavigableMap ; 
 
 + import org . slf4j . Logger ; 
 + import org . slf4j . LoggerFactory ; 
 + 
 import org . apache . cassandra . dht . IPartitioner ; 
 import org . apache . cassandra . dht . Token ; 
 
 public class TokenAllocatorFactory 
 { 
 + private static final Logger logger = LoggerFactory . getLogger ( TokenAllocatorFactory . class ) ; 
 public static TokenAllocator < InetAddress > createTokenAllocator ( NavigableMap < Token , InetAddress > sortedTokens , 
 ReplicationStrategy < InetAddress > strategy , 
 IPartitioner partitioner ) 
 { 
 - if ( strategy . replicas ( ) = = 1 ) 
 + if ( strategy . replicas ( ) = = 1 | | strategy . replicas ( ) = = 0 ) 
 + { 
 + logger . info ( " Using NoReplicationTokenAllocator . " ) ; 
 return new NoReplicationTokenAllocator < > ( sortedTokens , strategy , partitioner ) ; 
 + } 
 + logger . info ( " Using ReplicationAwareTokenAllocator . " ) ; 
 return new ReplicationAwareTokenAllocator < > ( sortedTokens , strategy , partitioner ) ; 
 } 
 } 
 diff - - git a / test / long / org / apache / cassandra / dht / tokenallocator / NoReplicationTokenAllocatorTest . java b / test / long / org / apache / cassandra / dht / tokenallocator / NoReplicationTokenAllocatorTest . java 
 index fdcc6b8 . . c53f788 100644 
 - - - a / test / long / org / apache / cassandra / dht / tokenallocator / NoReplicationTokenAllocatorTest . java 
 + + + b / test / long / org / apache / cassandra / dht / tokenallocator / NoReplicationTokenAllocatorTest . java 
 @ @ - 55 , 6 + 55 , 7 @ @ public class NoReplicationTokenAllocatorTest extends TokenAllocatorTestBase 
 for ( int perUnitCount = 1 ; perUnitCount < = MAX _ VNODE _ COUNT ; perUnitCount * = 4 ) 
 { 
 testNewCluster ( perUnitCount , fixedTokenCount , new NoReplicationStrategy ( ) , partitioner ) ; 
 + testNewCluster ( perUnitCount , fixedTokenCount , new ZeroReplicationStrategy ( ) , partitioner ) ; 
 } 
 } 
 
 @ @ - 87 , 6 + 88 , 7 @ @ public class NoReplicationTokenAllocatorTest extends TokenAllocatorTestBase 
 for ( int perUnitCount = 1 ; perUnitCount < = MAX _ VNODE _ COUNT ; perUnitCount * = 4 ) 
 { 
 testExistingCluster ( perUnitCount , fixedTokenCount , new NoReplicationStrategy ( ) , partitioner ) ; 
 + testExistingCluster ( perUnitCount , fixedTokenCount , new ZeroReplicationStrategy ( ) , partitioner ) ; 
 } 
 } 
 
 @ @ - 246 , 4 + 248 , 11 @ @ public class NoReplicationTokenAllocatorTest extends TokenAllocatorTestBase 
 } 
 } 
 
 + static class ZeroReplicationStrategy extends NoReplicationStrategy 
 + { 
 + public int replicas ( ) 
 + { 
 + return 0 ; 
 + } 
 + } 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 630ee2e . . 1f0f0e9 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 10 @ @ 
 - 1 . 0 - dev 
 + 1 . 1 - dev 
 + 
 + 
 + 1 . 0 . 1 
 + 
 + 
 + 1 . 0 
 * removed binarymemtable ( CASSANDRA - 2692 ) 
 * add commitlog _ total _ space _ in _ mb to prevent fragmented logs ( CASSANDRA - 2427 ) 
 * removed commitlog _ rotation _ threshold _ in _ mb configuration ( CASSANDRA - 2771 )
