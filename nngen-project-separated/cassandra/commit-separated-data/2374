BLEU SCORE: 0.018738883683389617

TEST MSG: Remove rows _ per _ partition _ to _ cache keyword
GENERATED MSG: Correctly accept upper - case data type ( CQL3 )

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index fb74327 . . af6e8c0 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> * Fix heap size calculation on Windows ( CASSANDRA - 7352 , 7353 ) <nl> * RefCount native frames from netty ( CASSANDRA - 7245 ) <nl> * Use tarball dir instead of / var for default paths ( CASSANDRA - 7136 ) <nl> + * Remove rows _ per _ partition _ to _ cache keyword ( CASSANDRA - 7193 ) <nl> Merged from 2 . 0 : <nl> * Fix assertion error in CL . ANY timeout handling ( CASSANDRA - 7364 ) <nl> * Add per - CF range read request latency metrics ( CASSANDRA - 7338 ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / CFPropDefs . java b / src / java / org / apache / cassandra / cql3 / statements / CFPropDefs . java <nl> index 8df0106 . . f920e30 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / CFPropDefs . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / CFPropDefs . java <nl> @ @ - 63 , 7 + 63 , 6 @ @ public class CFPropDefs extends PropertyDefinitions <nl> keywords . add ( KW _ DCLOCALREADREPAIRCHANCE ) ; <nl> keywords . add ( KW _ GCGRACESECONDS ) ; <nl> keywords . add ( KW _ CACHING ) ; <nl> - keywords . add ( KW _ ROWS _ PER _ PARTITION _ TO _ CACHE ) ; <nl> keywords . add ( KW _ DEFAULT _ TIME _ TO _ LIVE ) ; <nl> keywords . add ( KW _ MIN _ INDEX _ INTERVAL ) ; <nl> keywords . add ( KW _ MAX _ INDEX _ INTERVAL ) ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> index ef25d2a . . 176d63a 100644 <nl> - - - a / src / java / org / apache / cassandra / config / CFMetaData . java <nl> + + + b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> @ @ - 160 , 7 + 160 , 7 @ @ public final class CFMetaData <nl> public static final CFMetaData PeersCf = compile ( 12 , " CREATE TABLE " + SystemTable . PEERS _ CF + " ( " <nl> + " peer inet PRIMARY KEY , " <nl> + " ring _ id uuid , " <nl> - + " tokens set < blob > , " <nl> + + " tokens set < varchar > , " <nl> + " schema _ version uuid , " <nl> + " release _ version text , " <nl> + " rpc _ address inet , " <nl> @ @ - 170 , 7 + 170 , 7 @ @ public final class CFMetaData <nl> <nl> public static final CFMetaData LocalCf = compile ( 13 , " CREATE TABLE " + SystemTable . LOCAL _ CF + " ( " <nl> + " key text PRIMARY KEY , " <nl> - + " tokens set < blob > , " <nl> + + " tokens set < varchar > , " <nl> + " cluster _ name text , " <nl> + " gossip _ generation int , " <nl> + " bootstrapped text , " <nl> diff - - git a / src / java / org / apache / cassandra / db / SystemTable . java b / src / java / org / apache / cassandra / db / SystemTable . java <nl> index ff7d81a . . 2883e0b 100644 <nl> - - - a / src / java / org / apache / cassandra / db / SystemTable . java <nl> + + + b / src / java / org / apache / cassandra / db / SystemTable . java <nl> @ @ - 41 , 6 + 41 , 7 @ @ import org . apache . cassandra . db . filter . QueryFilter ; <nl> import org . apache . cassandra . db . filter . QueryPath ; <nl> import org . apache . cassandra . db . marshal . AsciiType ; <nl> import org . apache . cassandra . db . marshal . BytesType ; <nl> + import org . apache . cassandra . db . marshal . UTF8Type ; <nl> import org . apache . cassandra . dht . IPartitioner ; <nl> import org . apache . cassandra . dht . Range ; <nl> import org . apache . cassandra . dht . Token ; <nl> @ @ - 208 , 7 + 209 , 7 @ @ public class SystemTable <nl> Iterator < Token > iter = tokens . iterator ( ) ; <nl> while ( iter . hasNext ( ) ) <nl> { <nl> - sb . append ( " ' " ) . append ( ByteBufferUtil . bytesToHex ( factory . toByteArray ( iter . next ( ) ) ) ) . append ( " ' " ) ; <nl> + sb . append ( " ' " ) . append ( factory . toString ( iter . next ( ) ) ) . append ( " ' " ) ; <nl> if ( iter . hasNext ( ) ) <nl> sb . append ( " , " ) ; <nl> } <nl> @ @ - 216 , 12 + 217 , 12 @ @ public class SystemTable <nl> return sb . toString ( ) ; <nl> } <nl> <nl> - private static Collection < Token > deserializeTokens ( Collection < ByteBuffer > tokensBytes ) <nl> + private static Collection < Token > deserializeTokens ( Collection < String > tokensStrings ) <nl> { <nl> Token . TokenFactory factory = StorageService . getPartitioner ( ) . getTokenFactory ( ) ; <nl> - List < Token > tokens = new ArrayList < Token > ( tokensBytes . size ( ) ) ; <nl> - for ( ByteBuffer tk : tokensBytes ) <nl> - tokens . add ( factory . fromByteArray ( tk ) ) ; <nl> + List < Token > tokens = new ArrayList < Token > ( tokensStrings . size ( ) ) ; <nl> + for ( String tk : tokensStrings ) <nl> + tokens . add ( factory . fromString ( tk ) ) ; <nl> return tokens ; <nl> } <nl> <nl> @ @ - 296 , 7 + 297 , 7 @ @ public class SystemTable <nl> { <nl> InetAddress peer = row . getInetAddress ( " peer " ) ; <nl> if ( row . has ( " tokens " ) ) <nl> - tokenMap . putAll ( peer , deserializeTokens ( row . getSet ( " tokens " , BytesType . instance ) ) ) ; <nl> + tokenMap . putAll ( peer , deserializeTokens ( row . getSet ( " tokens " , UTF8Type . instance ) ) ) ; <nl> } <nl> <nl> return tokenMap ; <nl> @ @ - 351 , 7 + 352 , 7 @ @ public class SystemTable <nl> UntypedResultSet result = processInternal ( String . format ( req , LOCAL _ CF , LOCAL _ KEY ) ) ; <nl> return result . isEmpty ( ) | | ! result . one ( ) . has ( " tokens " ) <nl> ? Collections . < Token > emptyList ( ) <nl> - : deserializeTokens ( result . one ( ) . < ByteBuffer > getSet ( " tokens " , BytesType . instance ) ) ; <nl> + : deserializeTokens ( result . one ( ) . < String > getSet ( " tokens " , UTF8Type . instance ) ) ; <nl> } <nl> <nl> public static int incrementAndGetGeneration ( )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index fb74327 . . af6e8c0 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 13 , 6 + 13 , 7 @ @ 
 * Fix heap size calculation on Windows ( CASSANDRA - 7352 , 7353 ) 
 * RefCount native frames from netty ( CASSANDRA - 7245 ) 
 * Use tarball dir instead of / var for default paths ( CASSANDRA - 7136 ) 
 + * Remove rows _ per _ partition _ to _ cache keyword ( CASSANDRA - 7193 ) 
 Merged from 2 . 0 : 
 * Fix assertion error in CL . ANY timeout handling ( CASSANDRA - 7364 ) 
 * Add per - CF range read request latency metrics ( CASSANDRA - 7338 ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / CFPropDefs . java b / src / java / org / apache / cassandra / cql3 / statements / CFPropDefs . java 
 index 8df0106 . . f920e30 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / CFPropDefs . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / CFPropDefs . java 
 @ @ - 63 , 7 + 63 , 6 @ @ public class CFPropDefs extends PropertyDefinitions 
 keywords . add ( KW _ DCLOCALREADREPAIRCHANCE ) ; 
 keywords . add ( KW _ GCGRACESECONDS ) ; 
 keywords . add ( KW _ CACHING ) ; 
 - keywords . add ( KW _ ROWS _ PER _ PARTITION _ TO _ CACHE ) ; 
 keywords . add ( KW _ DEFAULT _ TIME _ TO _ LIVE ) ; 
 keywords . add ( KW _ MIN _ INDEX _ INTERVAL ) ; 
 keywords . add ( KW _ MAX _ INDEX _ INTERVAL ) ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java 
 index ef25d2a . . 176d63a 100644 
 - - - a / src / java / org / apache / cassandra / config / CFMetaData . java 
 + + + b / src / java / org / apache / cassandra / config / CFMetaData . java 
 @ @ - 160 , 7 + 160 , 7 @ @ public final class CFMetaData 
 public static final CFMetaData PeersCf = compile ( 12 , " CREATE TABLE " + SystemTable . PEERS _ CF + " ( " 
 + " peer inet PRIMARY KEY , " 
 + " ring _ id uuid , " 
 - + " tokens set < blob > , " 
 + + " tokens set < varchar > , " 
 + " schema _ version uuid , " 
 + " release _ version text , " 
 + " rpc _ address inet , " 
 @ @ - 170 , 7 + 170 , 7 @ @ public final class CFMetaData 
 
 public static final CFMetaData LocalCf = compile ( 13 , " CREATE TABLE " + SystemTable . LOCAL _ CF + " ( " 
 + " key text PRIMARY KEY , " 
 - + " tokens set < blob > , " 
 + + " tokens set < varchar > , " 
 + " cluster _ name text , " 
 + " gossip _ generation int , " 
 + " bootstrapped text , " 
 diff - - git a / src / java / org / apache / cassandra / db / SystemTable . java b / src / java / org / apache / cassandra / db / SystemTable . java 
 index ff7d81a . . 2883e0b 100644 
 - - - a / src / java / org / apache / cassandra / db / SystemTable . java 
 + + + b / src / java / org / apache / cassandra / db / SystemTable . java 
 @ @ - 41 , 6 + 41 , 7 @ @ import org . apache . cassandra . db . filter . QueryFilter ; 
 import org . apache . cassandra . db . filter . QueryPath ; 
 import org . apache . cassandra . db . marshal . AsciiType ; 
 import org . apache . cassandra . db . marshal . BytesType ; 
 + import org . apache . cassandra . db . marshal . UTF8Type ; 
 import org . apache . cassandra . dht . IPartitioner ; 
 import org . apache . cassandra . dht . Range ; 
 import org . apache . cassandra . dht . Token ; 
 @ @ - 208 , 7 + 209 , 7 @ @ public class SystemTable 
 Iterator < Token > iter = tokens . iterator ( ) ; 
 while ( iter . hasNext ( ) ) 
 { 
 - sb . append ( " ' " ) . append ( ByteBufferUtil . bytesToHex ( factory . toByteArray ( iter . next ( ) ) ) ) . append ( " ' " ) ; 
 + sb . append ( " ' " ) . append ( factory . toString ( iter . next ( ) ) ) . append ( " ' " ) ; 
 if ( iter . hasNext ( ) ) 
 sb . append ( " , " ) ; 
 } 
 @ @ - 216 , 12 + 217 , 12 @ @ public class SystemTable 
 return sb . toString ( ) ; 
 } 
 
 - private static Collection < Token > deserializeTokens ( Collection < ByteBuffer > tokensBytes ) 
 + private static Collection < Token > deserializeTokens ( Collection < String > tokensStrings ) 
 { 
 Token . TokenFactory factory = StorageService . getPartitioner ( ) . getTokenFactory ( ) ; 
 - List < Token > tokens = new ArrayList < Token > ( tokensBytes . size ( ) ) ; 
 - for ( ByteBuffer tk : tokensBytes ) 
 - tokens . add ( factory . fromByteArray ( tk ) ) ; 
 + List < Token > tokens = new ArrayList < Token > ( tokensStrings . size ( ) ) ; 
 + for ( String tk : tokensStrings ) 
 + tokens . add ( factory . fromString ( tk ) ) ; 
 return tokens ; 
 } 
 
 @ @ - 296 , 7 + 297 , 7 @ @ public class SystemTable 
 { 
 InetAddress peer = row . getInetAddress ( " peer " ) ; 
 if ( row . has ( " tokens " ) ) 
 - tokenMap . putAll ( peer , deserializeTokens ( row . getSet ( " tokens " , BytesType . instance ) ) ) ; 
 + tokenMap . putAll ( peer , deserializeTokens ( row . getSet ( " tokens " , UTF8Type . instance ) ) ) ; 
 } 
 
 return tokenMap ; 
 @ @ - 351 , 7 + 352 , 7 @ @ public class SystemTable 
 UntypedResultSet result = processInternal ( String . format ( req , LOCAL _ CF , LOCAL _ KEY ) ) ; 
 return result . isEmpty ( ) | | ! result . one ( ) . has ( " tokens " ) 
 ? Collections . < Token > emptyList ( ) 
 - : deserializeTokens ( result . one ( ) . < ByteBuffer > getSet ( " tokens " , BytesType . instance ) ) ; 
 + : deserializeTokens ( result . one ( ) . < String > getSet ( " tokens " , UTF8Type . instance ) ) ; 
 } 
 
 public static int incrementAndGetGeneration ( )
