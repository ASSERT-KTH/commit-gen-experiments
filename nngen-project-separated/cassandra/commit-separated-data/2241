BLEU SCORE: 0.10682175159905853

TEST MSG: merge from 2 . 0
GENERATED MSG: Fix IncompatibleClassChangeError from hadoop2

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 1447e21 . . 78abb47 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 8 , 8 + 8 , 12 @ @ <nl> * Fix UDT field selection with empty fields ( CASSANDRA - 7670 ) <nl> * Bogus deserialization of static cells from sstable ( CASSANDRA - 7684 ) <nl> Merged from 2 . 0 : <nl> - * Update java driver ( for hadoop ) ( CASSANDRA - 7618 ) <nl> + * Add ' nodetool sethintedhandoffthrottlekb ' ( CASSANDRA - 7635 ) <nl> + * Add cassandra . auto _ bootstrap system property ( CASSANDRA - 7650 ) <nl> * Remove CqlPagingRecordReader / CqlPagingInputFormat ( CASSANDRA - 7570 ) <nl> + * Fix IncompatibleClassChangeError from hadoop2 ( CASSANDRA - 7229 ) <nl> + * Add ' nodetool sethintedhandoffthrottlekb ' ( CASSANDRA - 7635 ) <nl> + * Update java driver ( for hadoop ) ( CASSANDRA - 7618 ) <nl> * Support connecting to ipv6 jmx with nodetool ( CASSANDRA - 7669 ) <nl> <nl> <nl> diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index 9edeeaa . . 4e67c44 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 1230 , 7 + 1230 , 7 @ @ public class DatabaseDescriptor <nl> <nl> public static boolean isAutoBootstrap ( ) <nl> { <nl> - return conf . auto _ bootstrap ; <nl> + return Boolean . parseBoolean ( System . getProperty ( " cassandra . auto _ bootstrap " , conf . auto _ bootstrap . toString ( ) ) ) ; <nl> } <nl> <nl> public static void setHintedHandoffEnabled ( boolean hintedHandoffEnabled ) <nl> diff - - git a / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java b / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java <nl> index 13c0bd0 . . 8b6d635 100644 <nl> - - - a / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java <nl> + + + b / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java <nl> @ @ - 208 , 8 + 208 , 8 @ @ public class SliceQueryFilter implements IDiskAtomFilter <nl> <nl> if ( respectTombstoneThresholds ( ) & & columnCounter . ignored ( ) > DatabaseDescriptor . getTombstoneFailureThreshold ( ) ) <nl> { <nl> - Tracing . trace ( " Scanned over { } tombstones ; query aborted ( see tombstone _ fail _ threshold ) " , DatabaseDescriptor . getTombstoneFailureThreshold ( ) ) ; <nl> - logger . error ( " Scanned over { } tombstones in { } . { } ; query aborted ( see tombstone _ fail _ threshold ) " , <nl> + Tracing . trace ( " Scanned over { } tombstones ; query aborted ( see tombstone _ failure _ threshold ) " , DatabaseDescriptor . getTombstoneFailureThreshold ( ) ) ; <nl> + logger . error ( " Scanned over { } tombstones in { } . { } ; query aborted ( see tombstone _ failure _ threshold ) " , <nl> DatabaseDescriptor . getTombstoneFailureThreshold ( ) , container . metadata ( ) . ksName , container . metadata ( ) . cfName ) ; <nl> throw new TombstoneOverwhelmingException ( ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlInputFormat . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlInputFormat . java <nl> index e1cdf32 . . b08dbfa 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlInputFormat . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlInputFormat . java <nl> @ @ - 21 , 7 + 21 , 9 @ @ import java . io . IOException ; <nl> import java . nio . ByteBuffer ; <nl> import java . util . Map ; <nl> <nl> + import org . apache . cassandra . hadoop . HadoopCompat ; <nl> import org . apache . cassandra . hadoop . AbstractColumnFamilyInputFormat ; <nl> + import org . apache . cassandra . hadoop . ReporterWrapper ; <nl> import org . apache . hadoop . mapred . InputSplit ; <nl> import org . apache . hadoop . mapred . JobConf ; <nl> import org . apache . hadoop . mapred . RecordReader ; <nl> @ @ - 55 , 14 + 57 , 15 @ @ public class CqlInputFormat extends AbstractColumnFamilyInputFormat < Long , Row > <nl> public RecordReader < Long , Row > getRecordReader ( InputSplit split , JobConf jobConf , final Reporter reporter ) <nl> throws IOException <nl> { <nl> - TaskAttemptContext tac = new TaskAttemptContext ( jobConf , TaskAttemptID . forName ( jobConf . get ( MAPRED _ TASK _ ID ) ) ) <nl> - { <nl> - @ Override <nl> - public void progress ( ) <nl> - { <nl> - reporter . progress ( ) ; <nl> - } <nl> - } ; <nl> + TaskAttemptContext tac = HadoopCompat . newMapContext ( <nl> + jobConf , <nl> + TaskAttemptID . forName ( jobConf . get ( MAPRED _ TASK _ ID ) ) , <nl> + null , <nl> + null , <nl> + null , <nl> + new ReporterWrapper ( reporter ) , <nl> + null ) ; <nl> + <nl> <nl> CqlRecordReader recordReader = new CqlRecordReader ( ) ; <nl> recordReader . initialize ( ( org . apache . hadoop . mapreduce . InputSplit ) split , tac ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 1447e21 . . 78abb47 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 8 , 8 + 8 , 12 @ @ 
 * Fix UDT field selection with empty fields ( CASSANDRA - 7670 ) 
 * Bogus deserialization of static cells from sstable ( CASSANDRA - 7684 ) 
 Merged from 2 . 0 : 
 - * Update java driver ( for hadoop ) ( CASSANDRA - 7618 ) 
 + * Add ' nodetool sethintedhandoffthrottlekb ' ( CASSANDRA - 7635 ) 
 + * Add cassandra . auto _ bootstrap system property ( CASSANDRA - 7650 ) 
 * Remove CqlPagingRecordReader / CqlPagingInputFormat ( CASSANDRA - 7570 ) 
 + * Fix IncompatibleClassChangeError from hadoop2 ( CASSANDRA - 7229 ) 
 + * Add ' nodetool sethintedhandoffthrottlekb ' ( CASSANDRA - 7635 ) 
 + * Update java driver ( for hadoop ) ( CASSANDRA - 7618 ) 
 * Support connecting to ipv6 jmx with nodetool ( CASSANDRA - 7669 ) 
 
 
 diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index 9edeeaa . . 4e67c44 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 1230 , 7 + 1230 , 7 @ @ public class DatabaseDescriptor 
 
 public static boolean isAutoBootstrap ( ) 
 { 
 - return conf . auto _ bootstrap ; 
 + return Boolean . parseBoolean ( System . getProperty ( " cassandra . auto _ bootstrap " , conf . auto _ bootstrap . toString ( ) ) ) ; 
 } 
 
 public static void setHintedHandoffEnabled ( boolean hintedHandoffEnabled ) 
 diff - - git a / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java b / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java 
 index 13c0bd0 . . 8b6d635 100644 
 - - - a / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java 
 + + + b / src / java / org / apache / cassandra / db / filter / SliceQueryFilter . java 
 @ @ - 208 , 8 + 208 , 8 @ @ public class SliceQueryFilter implements IDiskAtomFilter 
 
 if ( respectTombstoneThresholds ( ) & & columnCounter . ignored ( ) > DatabaseDescriptor . getTombstoneFailureThreshold ( ) ) 
 { 
 - Tracing . trace ( " Scanned over { } tombstones ; query aborted ( see tombstone _ fail _ threshold ) " , DatabaseDescriptor . getTombstoneFailureThreshold ( ) ) ; 
 - logger . error ( " Scanned over { } tombstones in { } . { } ; query aborted ( see tombstone _ fail _ threshold ) " , 
 + Tracing . trace ( " Scanned over { } tombstones ; query aborted ( see tombstone _ failure _ threshold ) " , DatabaseDescriptor . getTombstoneFailureThreshold ( ) ) ; 
 + logger . error ( " Scanned over { } tombstones in { } . { } ; query aborted ( see tombstone _ failure _ threshold ) " , 
 DatabaseDescriptor . getTombstoneFailureThreshold ( ) , container . metadata ( ) . ksName , container . metadata ( ) . cfName ) ; 
 throw new TombstoneOverwhelmingException ( ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / hadoop / cql3 / CqlInputFormat . java b / src / java / org / apache / cassandra / hadoop / cql3 / CqlInputFormat . java 
 index e1cdf32 . . b08dbfa 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / cql3 / CqlInputFormat . java 
 + + + b / src / java / org / apache / cassandra / hadoop / cql3 / CqlInputFormat . java 
 @ @ - 21 , 7 + 21 , 9 @ @ import java . io . IOException ; 
 import java . nio . ByteBuffer ; 
 import java . util . Map ; 
 
 + import org . apache . cassandra . hadoop . HadoopCompat ; 
 import org . apache . cassandra . hadoop . AbstractColumnFamilyInputFormat ; 
 + import org . apache . cassandra . hadoop . ReporterWrapper ; 
 import org . apache . hadoop . mapred . InputSplit ; 
 import org . apache . hadoop . mapred . JobConf ; 
 import org . apache . hadoop . mapred . RecordReader ; 
 @ @ - 55 , 14 + 57 , 15 @ @ public class CqlInputFormat extends AbstractColumnFamilyInputFormat < Long , Row > 
 public RecordReader < Long , Row > getRecordReader ( InputSplit split , JobConf jobConf , final Reporter reporter ) 
 throws IOException 
 { 
 - TaskAttemptContext tac = new TaskAttemptContext ( jobConf , TaskAttemptID . forName ( jobConf . get ( MAPRED _ TASK _ ID ) ) ) 
 - { 
 - @ Override 
 - public void progress ( ) 
 - { 
 - reporter . progress ( ) ; 
 - } 
 - } ; 
 + TaskAttemptContext tac = HadoopCompat . newMapContext ( 
 + jobConf , 
 + TaskAttemptID . forName ( jobConf . get ( MAPRED _ TASK _ ID ) ) , 
 + null , 
 + null , 
 + null , 
 + new ReporterWrapper ( reporter ) , 
 + null ) ; 
 + 
 
 CqlRecordReader recordReader = new CqlRecordReader ( ) ; 
 recordReader . initialize ( ( org . apache . hadoop . mapreduce . InputSplit ) split , tac ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
