BLEU SCORE: 0.015445276590783498

TEST MSG: Fix Loss of digits when doing CAST from varint / bigint to decimal
GENERATED MSG: ArithmeticException in avgFunctionForDecimal

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 684f2a6 . . c2b907e 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 11 . 3 <nl> + * Fix Loss of digits when doing CAST from varint / bigint to decimal ( CASSANDRA - 14170 ) <nl> * RateBasedBackPressure unnecessarily invokes a lock on the Guava RateLimiter ( CASSANDRA - 14163 ) <nl> * Fix wildcard GROUP BY queries ( CASSANDRA - 14209 ) <nl> Merged from 3 . 0 : <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / functions / CastFcts . java b / src / java / org / apache / cassandra / cql3 / functions / CastFcts . java <nl> index 9e5c729 . . 9f825ee 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / functions / CastFcts . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / functions / CastFcts . java <nl> @ @ - 79 , 7 + 79 , 7 @ @ public final class CastFcts <nl> addFunctionIfNeeded ( functions , inputType , LongType . instance , Number : : longValue ) ; <nl> addFunctionIfNeeded ( functions , inputType , FloatType . instance , Number : : floatValue ) ; <nl> addFunctionIfNeeded ( functions , inputType , DoubleType . instance , Number : : doubleValue ) ; <nl> - addFunctionIfNeeded ( functions , inputType , DecimalType . instance , p - > BigDecimal . valueOf ( p . doubleValue ( ) ) ) ; <nl> + addFunctionIfNeeded ( functions , inputType , DecimalType . instance , getDecimalConversionFunction ( inputType ) ) ; <nl> addFunctionIfNeeded ( functions , inputType , IntegerType . instance , p - > BigInteger . valueOf ( p . longValue ( ) ) ) ; <nl> functions . add ( CastAsTextFunction . create ( inputType , AsciiType . instance ) ) ; <nl> functions . add ( CastAsTextFunction . create ( inputType , UTF8Type . instance ) ) ; <nl> @ @ - 113 , 6 + 113 , 23 @ @ public final class CastFcts <nl> } <nl> <nl> / * * <nl> + * Returns the conversion function to convert the specified type into a Decimal type <nl> + * <nl> + * @ param inputType the input type <nl> + * @ return the conversion function to convert the specified type into a Decimal type <nl> + * / <nl> + private static < I extends Number > java . util . function . Function < I , BigDecimal > getDecimalConversionFunction ( AbstractType < ? extends Number > inputType ) <nl> + { <nl> + if ( inputType = = FloatType . instance | | inputType = = DoubleType . instance ) <nl> + return p - > BigDecimal . valueOf ( p . doubleValue ( ) ) ; <nl> + <nl> + if ( inputType = = IntegerType . instance ) <nl> + return p - > new BigDecimal ( ( BigInteger ) p ) ; <nl> + <nl> + return p - > BigDecimal . valueOf ( p . longValue ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> * Creates the name of the cast function use to cast to the specified type . <nl> * <nl> * @ param outputType the output type <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / functions / CastFctsTest . java b / test / unit / org / apache / cassandra / cql3 / functions / CastFctsTest . java <nl> index 9b4b570 . . 2ffd8b4 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / functions / CastFctsTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / functions / CastFctsTest . java <nl> @ @ - 153 , 14 + 153 , 14 @ @ public class CastFctsTest extends CQLTester <nl> " CAST ( g AS decimal ) , " + <nl> " CAST ( h AS decimal ) , " + <nl> " CAST ( i AS decimal ) FROM % s " ) , <nl> - row ( BigDecimal . valueOf ( 1 . 0 ) , <nl> - BigDecimal . valueOf ( 2 . 0 ) , <nl> - BigDecimal . valueOf ( 3 . 0 ) , <nl> - BigDecimal . valueOf ( 4 . 0 ) , <nl> + row ( BigDecimal . valueOf ( 1 ) , <nl> + BigDecimal . valueOf ( 2 ) , <nl> + BigDecimal . valueOf ( 3 ) , <nl> + BigDecimal . valueOf ( 4 ) , <nl> BigDecimal . valueOf ( 5 . 2F ) , <nl> BigDecimal . valueOf ( 6 . 3 ) , <nl> BigDecimal . valueOf ( 6 . 3 ) , <nl> - BigDecimal . valueOf ( 4 . 0 ) , <nl> + BigDecimal . valueOf ( 4 ) , <nl> null ) ) ; <nl> <nl> assertRows ( execute ( " SELECT CAST ( a AS ascii ) , " + <nl> @ @ - 203 , 6 + 203 , 16 @ @ public class CastFctsTest extends CQLTester <nl> } <nl> <nl> @ Test <nl> + public void testNoLossOfPrecisionForCastToDecimal ( ) throws Throwable <nl> + { <nl> + createTable ( " CREATE TABLE % s ( k int PRIMARY KEY , bigint _ clmn bigint , varint _ clmn varint ) " ) ; <nl> + execute ( " INSERT INTO % s ( k , bigint _ clmn , varint _ clmn ) VALUES ( 2 , 9223372036854775807 , 1234567890123456789 ) " ) ; <nl> + <nl> + assertRows ( execute ( " SELECT CAST ( bigint _ clmn AS decimal ) , CAST ( varint _ clmn AS decimal ) FROM % s " ) , <nl> + row ( BigDecimal . valueOf ( 9223372036854775807L ) , BigDecimal . valueOf ( 1234567890123456789L ) ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testTimeCastsInSelectionClause ( ) throws Throwable <nl> { <nl> createTable ( " CREATE TABLE % s ( a timeuuid primary key , b timestamp , c date , d time ) " ) ; <nl> @ @ - 309 , 6 + 319 , 6 @ @ public class CastFctsTest extends CQLTester <nl> " CAST ( b AS decimal ) , " + <nl> " CAST ( b AS ascii ) , " + <nl> " CAST ( b AS text ) FROM % s " ) , <nl> - row ( ( byte ) 2 , ( short ) 2 , 2 , 2L , 2 . 0F , 2 . 0 , BigDecimal . valueOf ( 2 . 0 ) , " 2 " , " 2 " ) ) ; <nl> + row ( ( byte ) 2 , ( short ) 2 , 2 , 2L , 2 . 0F , 2 . 0 , BigDecimal . valueOf ( 2 ) , " 2 " , " 2 " ) ) ; <nl> } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 684f2a6 . . c2b907e 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 11 . 3 
 + * Fix Loss of digits when doing CAST from varint / bigint to decimal ( CASSANDRA - 14170 ) 
 * RateBasedBackPressure unnecessarily invokes a lock on the Guava RateLimiter ( CASSANDRA - 14163 ) 
 * Fix wildcard GROUP BY queries ( CASSANDRA - 14209 ) 
 Merged from 3 . 0 : 
 diff - - git a / src / java / org / apache / cassandra / cql3 / functions / CastFcts . java b / src / java / org / apache / cassandra / cql3 / functions / CastFcts . java 
 index 9e5c729 . . 9f825ee 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / functions / CastFcts . java 
 + + + b / src / java / org / apache / cassandra / cql3 / functions / CastFcts . java 
 @ @ - 79 , 7 + 79 , 7 @ @ public final class CastFcts 
 addFunctionIfNeeded ( functions , inputType , LongType . instance , Number : : longValue ) ; 
 addFunctionIfNeeded ( functions , inputType , FloatType . instance , Number : : floatValue ) ; 
 addFunctionIfNeeded ( functions , inputType , DoubleType . instance , Number : : doubleValue ) ; 
 - addFunctionIfNeeded ( functions , inputType , DecimalType . instance , p - > BigDecimal . valueOf ( p . doubleValue ( ) ) ) ; 
 + addFunctionIfNeeded ( functions , inputType , DecimalType . instance , getDecimalConversionFunction ( inputType ) ) ; 
 addFunctionIfNeeded ( functions , inputType , IntegerType . instance , p - > BigInteger . valueOf ( p . longValue ( ) ) ) ; 
 functions . add ( CastAsTextFunction . create ( inputType , AsciiType . instance ) ) ; 
 functions . add ( CastAsTextFunction . create ( inputType , UTF8Type . instance ) ) ; 
 @ @ - 113 , 6 + 113 , 23 @ @ public final class CastFcts 
 } 
 
 / * * 
 + * Returns the conversion function to convert the specified type into a Decimal type 
 + * 
 + * @ param inputType the input type 
 + * @ return the conversion function to convert the specified type into a Decimal type 
 + * / 
 + private static < I extends Number > java . util . function . Function < I , BigDecimal > getDecimalConversionFunction ( AbstractType < ? extends Number > inputType ) 
 + { 
 + if ( inputType = = FloatType . instance | | inputType = = DoubleType . instance ) 
 + return p - > BigDecimal . valueOf ( p . doubleValue ( ) ) ; 
 + 
 + if ( inputType = = IntegerType . instance ) 
 + return p - > new BigDecimal ( ( BigInteger ) p ) ; 
 + 
 + return p - > BigDecimal . valueOf ( p . longValue ( ) ) ; 
 + } 
 + 
 + / * * 
 * Creates the name of the cast function use to cast to the specified type . 
 * 
 * @ param outputType the output type 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / functions / CastFctsTest . java b / test / unit / org / apache / cassandra / cql3 / functions / CastFctsTest . java 
 index 9b4b570 . . 2ffd8b4 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / functions / CastFctsTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / functions / CastFctsTest . java 
 @ @ - 153 , 14 + 153 , 14 @ @ public class CastFctsTest extends CQLTester 
 " CAST ( g AS decimal ) , " + 
 " CAST ( h AS decimal ) , " + 
 " CAST ( i AS decimal ) FROM % s " ) , 
 - row ( BigDecimal . valueOf ( 1 . 0 ) , 
 - BigDecimal . valueOf ( 2 . 0 ) , 
 - BigDecimal . valueOf ( 3 . 0 ) , 
 - BigDecimal . valueOf ( 4 . 0 ) , 
 + row ( BigDecimal . valueOf ( 1 ) , 
 + BigDecimal . valueOf ( 2 ) , 
 + BigDecimal . valueOf ( 3 ) , 
 + BigDecimal . valueOf ( 4 ) , 
 BigDecimal . valueOf ( 5 . 2F ) , 
 BigDecimal . valueOf ( 6 . 3 ) , 
 BigDecimal . valueOf ( 6 . 3 ) , 
 - BigDecimal . valueOf ( 4 . 0 ) , 
 + BigDecimal . valueOf ( 4 ) , 
 null ) ) ; 
 
 assertRows ( execute ( " SELECT CAST ( a AS ascii ) , " + 
 @ @ - 203 , 6 + 203 , 16 @ @ public class CastFctsTest extends CQLTester 
 } 
 
 @ Test 
 + public void testNoLossOfPrecisionForCastToDecimal ( ) throws Throwable 
 + { 
 + createTable ( " CREATE TABLE % s ( k int PRIMARY KEY , bigint _ clmn bigint , varint _ clmn varint ) " ) ; 
 + execute ( " INSERT INTO % s ( k , bigint _ clmn , varint _ clmn ) VALUES ( 2 , 9223372036854775807 , 1234567890123456789 ) " ) ; 
 + 
 + assertRows ( execute ( " SELECT CAST ( bigint _ clmn AS decimal ) , CAST ( varint _ clmn AS decimal ) FROM % s " ) , 
 + row ( BigDecimal . valueOf ( 9223372036854775807L ) , BigDecimal . valueOf ( 1234567890123456789L ) ) ) ; 
 + } 
 + 
 + @ Test 
 public void testTimeCastsInSelectionClause ( ) throws Throwable 
 { 
 createTable ( " CREATE TABLE % s ( a timeuuid primary key , b timestamp , c date , d time ) " ) ; 
 @ @ - 309 , 6 + 319 , 6 @ @ public class CastFctsTest extends CQLTester 
 " CAST ( b AS decimal ) , " + 
 " CAST ( b AS ascii ) , " + 
 " CAST ( b AS text ) FROM % s " ) , 
 - row ( ( byte ) 2 , ( short ) 2 , 2 , 2L , 2 . 0F , 2 . 0 , BigDecimal . valueOf ( 2 . 0 ) , " 2 " , " 2 " ) ) ; 
 + row ( ( byte ) 2 , ( short ) 2 , 2 , 2L , 2 . 0F , 2 . 0 , BigDecimal . valueOf ( 2 ) , " 2 " , " 2 " ) ) ; 
 } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
