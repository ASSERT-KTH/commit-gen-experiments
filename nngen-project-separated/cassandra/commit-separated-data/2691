BLEU SCORE: 0.05341087579952926

TEST MSG: Fix compaction _ history timestamps
GENERATED MSG: make cache skipping optional

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 65de68d . . 389ee2b 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 6 + 1 , 7 @ @ <nl> 2 . 0 . 6 <nl> * Pool CqlRecordWriter clients by inetaddress rather than Range <nl> ( CASSANDRA - 6665 ) <nl> + * Fix compaction _ history timestamps ( CASSANDRA - 6784 ) <nl> * Compare scores of full replica ordering in DES ( CASSANDRA - 6883 ) <nl> * fix CME in SessionInfo updateProgress affecting netstats ( CASSANDRA - 6577 ) <nl> * Allow repairing between specific replicas ( CASSANDRA - 6440 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionTask . java b / src / java / org / apache / cassandra / db / compaction / CompactionTask . java <nl> index 2a23966 . . 10c26db 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionTask . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionTask . java <nl> @ @ - 271 , 7 + 271 , 7 @ @ public class CompactionTask extends AbstractCompactionTask <nl> mergedRows . put ( rows , count ) ; <nl> } <nl> <nl> - SystemKeyspace . updateCompactionHistory ( cfs . keyspace . getName ( ) , cfs . name , start , startsize , endsize , mergedRows ) ; <nl> + SystemKeyspace . updateCompactionHistory ( cfs . keyspace . getName ( ) , cfs . name , System . currentTimeMillis ( ) , startsize , endsize , mergedRows ) ; <nl> logger . info ( String . format ( " Compacted % d sstables to [ % s ] . % , d bytes to % , d ( ~ % d % % of original ) in % , dms = % fMB / s . % , d total partitions merged to % , d . Partition merge counts were { % s } " , <nl> toCompact . size ( ) , builder . toString ( ) , startsize , endsize , ( int ) ( ratio * 100 ) , dTime , mbps , totalSourceRows , totalkeysWritten , mergeSummary . toString ( ) ) ) ; <nl> logger . debug ( String . format ( " CF Total Bytes Compacted : % , d " , CompactionTask . addToTotalBytesCompacted ( endsize ) ) ) ;
NEAREST DIFF (one line): diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml <nl> index 0d94b0b . . 2f6a7da 100644 <nl> - - - a / conf / cassandra . yaml <nl> + + + b / conf / cassandra . yaml <nl> @ @ - 29 , 6 + 29 , 11 @ @ max _ hint _ window _ in _ ms : 3600000 # one hour <nl> # Sleep this long after delivering each hint <nl> hinted _ handoff _ throttle _ delay _ in _ ms : 1 <nl> <nl> + # The following setting populates the page cache on memtable flush and compaction <nl> + # WARNING : Enable this setting only when the whole node ' s data fits in memory . <nl> + # Defaults to : false <nl> + # populate _ buffer _ cache _ on _ flush : false <nl> + <nl> # authentication backend , implementing IAuthenticator ; used to identify users <nl> authenticator : org . apache . cassandra . auth . AllowAllAuthenticator <nl> <nl> diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java <nl> index 151c620 . . 52c1f96 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Config . java <nl> + + + b / src / java / org / apache / cassandra / config / Config . java <nl> @ @ - 133 , 6 + 133 , 7 @ @ public class Config <nl> public int row _ cache _ save _ period = 0 ; <nl> public int row _ cache _ keys _ to _ save = Integer . MAX _ VALUE ; <nl> public String row _ cache _ provider = ConcurrentLinkedHashCacheProvider . class . getSimpleName ( ) ; <nl> + public boolean populate _ io _ cache _ on _ flush = false ; <nl> <nl> private static boolean loadYaml = true ; <nl> private static boolean outboundBindAny = false ; <nl> diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index daae743 . . 8816733 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 193 , 6 + 193 , 8 @ @ public class DatabaseDescriptor <nl> if ( conf . disk _ access _ mode = = Config . DiskAccessMode . mmap ) <nl> MmappedSegmentedFile . initCleaner ( ) ; <nl> <nl> + 	 logger . debug ( " page _ cache _ hinting is " + conf . populate _ io _ cache _ on _ flush ) ; <nl> + <nl> / * Authentication and authorization backend , implementing IAuthenticator and IAuthority * / <nl> if ( conf . authenticator ! = null ) <nl> authenticator = FBUtilities . < IAuthenticator > construct ( conf . authenticator , " authenticator " ) ; <nl> @ @ - 1055 , 4 + 1057 , 9 @ @ public class DatabaseDescriptor <nl> { <nl> return conf . streaming _ socket _ timeout _ in _ ms ; <nl> } <nl> + <nl> + public static boolean populateIOCacheOnFlush ( ) <nl> + { <nl> + return conf . populate _ io _ cache _ on _ flush ; <nl> + } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> index 8f06f69 . . e46e407 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> @ @ - 88 , 14 + 88 , 15 @ @ public class SSTableWriter extends SSTable <nl> dbuilder = SegmentedFile . getCompressedBuilder ( ) ; <nl> dataFile = CompressedSequentialWriter . open ( getFilename ( ) , <nl> descriptor . filenameFor ( Component . COMPRESSION _ INFO ) , <nl> - true , <nl> + ! DatabaseDescriptor . populateIOCacheOnFlush ( ) , <nl> metadata . compressionParameters ( ) , <nl> sstableMetadataCollector ) ; <nl> } <nl> else <nl> { <nl> dbuilder = SegmentedFile . getBuilder ( DatabaseDescriptor . getDiskAccessMode ( ) ) ; <nl> - dataFile = SequentialWriter . open ( new File ( getFilename ( ) ) , true ) ; <nl> + dataFile = SequentialWriter . open ( new File ( getFilename ( ) ) , <nl> + 	 	 	 ! DatabaseDescriptor . populateIOCacheOnFlush ( ) ) ; <nl> dataFile . setComputeDigest ( ) ; <nl> } <nl> <nl> @ @ - 369 , 7 + 370 , 8 @ @ public class SSTableWriter extends SSTable <nl> <nl> IndexWriter ( long keyCount ) throws IOException <nl> { <nl> - indexFile = SequentialWriter . open ( new File ( descriptor . filenameFor ( SSTable . COMPONENT _ INDEX ) ) , true ) ; <nl> + indexFile = SequentialWriter . open ( new File ( descriptor . filenameFor ( SSTable . COMPONENT _ INDEX ) ) , <nl> + ! DatabaseDescriptor . populateIOCacheOnFlush ( ) ) ; <nl> builder = SegmentedFile . getBuilder ( DatabaseDescriptor . getIndexAccessMode ( ) ) ; <nl> summary = new IndexSummary ( keyCount ) ; <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 65de68d . . 389ee2b 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 6 + 1 , 7 @ @ 
 2 . 0 . 6 
 * Pool CqlRecordWriter clients by inetaddress rather than Range 
 ( CASSANDRA - 6665 ) 
 + * Fix compaction _ history timestamps ( CASSANDRA - 6784 ) 
 * Compare scores of full replica ordering in DES ( CASSANDRA - 6883 ) 
 * fix CME in SessionInfo updateProgress affecting netstats ( CASSANDRA - 6577 ) 
 * Allow repairing between specific replicas ( CASSANDRA - 6440 ) 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionTask . java b / src / java / org / apache / cassandra / db / compaction / CompactionTask . java 
 index 2a23966 . . 10c26db 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionTask . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionTask . java 
 @ @ - 271 , 7 + 271 , 7 @ @ public class CompactionTask extends AbstractCompactionTask 
 mergedRows . put ( rows , count ) ; 
 } 
 
 - SystemKeyspace . updateCompactionHistory ( cfs . keyspace . getName ( ) , cfs . name , start , startsize , endsize , mergedRows ) ; 
 + SystemKeyspace . updateCompactionHistory ( cfs . keyspace . getName ( ) , cfs . name , System . currentTimeMillis ( ) , startsize , endsize , mergedRows ) ; 
 logger . info ( String . format ( " Compacted % d sstables to [ % s ] . % , d bytes to % , d ( ~ % d % % of original ) in % , dms = % fMB / s . % , d total partitions merged to % , d . Partition merge counts were { % s } " , 
 toCompact . size ( ) , builder . toString ( ) , startsize , endsize , ( int ) ( ratio * 100 ) , dTime , mbps , totalSourceRows , totalkeysWritten , mergeSummary . toString ( ) ) ) ; 
 logger . debug ( String . format ( " CF Total Bytes Compacted : % , d " , CompactionTask . addToTotalBytesCompacted ( endsize ) ) ) ;

NEAREST DIFF:
diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml 
 index 0d94b0b . . 2f6a7da 100644 
 - - - a / conf / cassandra . yaml 
 + + + b / conf / cassandra . yaml 
 @ @ - 29 , 6 + 29 , 11 @ @ max _ hint _ window _ in _ ms : 3600000 # one hour 
 # Sleep this long after delivering each hint 
 hinted _ handoff _ throttle _ delay _ in _ ms : 1 
 
 + # The following setting populates the page cache on memtable flush and compaction 
 + # WARNING : Enable this setting only when the whole node ' s data fits in memory . 
 + # Defaults to : false 
 + # populate _ buffer _ cache _ on _ flush : false 
 + 
 # authentication backend , implementing IAuthenticator ; used to identify users 
 authenticator : org . apache . cassandra . auth . AllowAllAuthenticator 
 
 diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java 
 index 151c620 . . 52c1f96 100644 
 - - - a / src / java / org / apache / cassandra / config / Config . java 
 + + + b / src / java / org / apache / cassandra / config / Config . java 
 @ @ - 133 , 6 + 133 , 7 @ @ public class Config 
 public int row _ cache _ save _ period = 0 ; 
 public int row _ cache _ keys _ to _ save = Integer . MAX _ VALUE ; 
 public String row _ cache _ provider = ConcurrentLinkedHashCacheProvider . class . getSimpleName ( ) ; 
 + public boolean populate _ io _ cache _ on _ flush = false ; 
 
 private static boolean loadYaml = true ; 
 private static boolean outboundBindAny = false ; 
 diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index daae743 . . 8816733 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 193 , 6 + 193 , 8 @ @ public class DatabaseDescriptor 
 if ( conf . disk _ access _ mode = = Config . DiskAccessMode . mmap ) 
 MmappedSegmentedFile . initCleaner ( ) ; 
 
 + 	 logger . debug ( " page _ cache _ hinting is " + conf . populate _ io _ cache _ on _ flush ) ; 
 + 
 / * Authentication and authorization backend , implementing IAuthenticator and IAuthority * / 
 if ( conf . authenticator ! = null ) 
 authenticator = FBUtilities . < IAuthenticator > construct ( conf . authenticator , " authenticator " ) ; 
 @ @ - 1055 , 4 + 1057 , 9 @ @ public class DatabaseDescriptor 
 { 
 return conf . streaming _ socket _ timeout _ in _ ms ; 
 } 
 + 
 + public static boolean populateIOCacheOnFlush ( ) 
 + { 
 + return conf . populate _ io _ cache _ on _ flush ; 
 + } 
 } 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 index 8f06f69 . . e46e407 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 @ @ - 88 , 14 + 88 , 15 @ @ public class SSTableWriter extends SSTable 
 dbuilder = SegmentedFile . getCompressedBuilder ( ) ; 
 dataFile = CompressedSequentialWriter . open ( getFilename ( ) , 
 descriptor . filenameFor ( Component . COMPRESSION _ INFO ) , 
 - true , 
 + ! DatabaseDescriptor . populateIOCacheOnFlush ( ) , 
 metadata . compressionParameters ( ) , 
 sstableMetadataCollector ) ; 
 } 
 else 
 { 
 dbuilder = SegmentedFile . getBuilder ( DatabaseDescriptor . getDiskAccessMode ( ) ) ; 
 - dataFile = SequentialWriter . open ( new File ( getFilename ( ) ) , true ) ; 
 + dataFile = SequentialWriter . open ( new File ( getFilename ( ) ) , 
 + 	 	 	 ! DatabaseDescriptor . populateIOCacheOnFlush ( ) ) ; 
 dataFile . setComputeDigest ( ) ; 
 } 
 
 @ @ - 369 , 7 + 370 , 8 @ @ public class SSTableWriter extends SSTable 
 
 IndexWriter ( long keyCount ) throws IOException 
 { 
 - indexFile = SequentialWriter . open ( new File ( descriptor . filenameFor ( SSTable . COMPONENT _ INDEX ) ) , true ) ; 
 + indexFile = SequentialWriter . open ( new File ( descriptor . filenameFor ( SSTable . COMPONENT _ INDEX ) ) , 
 + ! DatabaseDescriptor . populateIOCacheOnFlush ( ) ) ; 
 builder = SegmentedFile . getBuilder ( DatabaseDescriptor . getIndexAccessMode ( ) ) ; 
 summary = new IndexSummary ( keyCount ) ; 

