BLEU SCORE: 0.018543295278285157

TEST MSG: Warn when evicting prepared statements from cache
GENERATED MSG: Expose whether jna is enabled and memory is locked via JMX

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index e7e1361 . . 527b4e9 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> 2 . 1 . 1 <nl> * ( cqlsh ) Add command line option for cqlshrc file path ( CASSANDRA - 7131 ) <nl> - * Provide visibility into prepared statements churn ( CASSANDRA - 7921 ) <nl> + * Provide visibility into prepared statements churn ( CASSANDRA - 7921 , CASSANDRA - 7930 ) <nl> * Invalidate prepared statements when their keyspace or table is <nl> dropped ( CASSANDRA - 7566 ) <nl> * cassandra - stress : fix support for NetworkTopologyStrategy ( CASSANDRA - 7945 ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / QueryProcessor . java b / src / java / org / apache / cassandra / cql3 / QueryProcessor . java <nl> index 8744db4 . . 9a09d42 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / QueryProcessor . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / QueryProcessor . java <nl> @ @ - 21 , 6 + 21 , 8 @ @ import java . nio . ByteBuffer ; <nl> import java . util . * ; <nl> import java . util . concurrent . ConcurrentMap ; <nl> import java . util . concurrent . ConcurrentHashMap ; <nl> + import java . util . concurrent . TimeUnit ; <nl> + import java . util . concurrent . atomic . AtomicInteger ; <nl> <nl> import com . google . common . annotations . VisibleForTesting ; <nl> import com . google . common . primitives . Ints ; <nl> @ @ - 29 , 8 + 31 , 6 @ @ import com . googlecode . concurrentlinkedhashmap . ConcurrentLinkedHashMap ; <nl> import com . googlecode . concurrentlinkedhashmap . EntryWeigher ; <nl> import com . googlecode . concurrentlinkedhashmap . EvictionListener ; <nl> import org . antlr . runtime . * ; <nl> - import org . apache . cassandra . service . IMigrationListener ; <nl> - import org . apache . cassandra . service . MigrationManager ; <nl> import org . github . jamm . MemoryMeter ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> @ @ - 41 , 8 + 41 , 7 @ @ import org . apache . cassandra . db . composites . * ; <nl> import org . apache . cassandra . db . marshal . AbstractType ; <nl> import org . apache . cassandra . exceptions . * ; <nl> import org . apache . cassandra . metrics . CQLMetrics ; <nl> - import org . apache . cassandra . service . ClientState ; <nl> - import org . apache . cassandra . service . QueryState ; <nl> + import org . apache . cassandra . service . * ; <nl> import org . apache . cassandra . service . pager . QueryPager ; <nl> import org . apache . cassandra . service . pager . QueryPagers ; <nl> import org . apache . cassandra . thrift . ThriftClientState ; <nl> @ @ - 90 , 6 + 89 , 8 @ @ public class QueryProcessor implements QueryHandler <nl> @ VisibleForTesting <nl> public static final CQLMetrics metrics = new CQLMetrics ( ) ; <nl> <nl> + private static AtomicInteger lastMinuteEvictionsCount = new AtomicInteger ( 0 ) ; <nl> + <nl> static <nl> { <nl> preparedStatements = new ConcurrentLinkedHashMap . Builder < MD5Digest , ParsedStatement . Prepared > ( ) <nl> @ @ - 100 , 6 + 101 , 7 @ @ public class QueryProcessor implements QueryHandler <nl> public void onEviction ( MD5Digest md5Digest , ParsedStatement . Prepared prepared ) <nl> { <nl> metrics . preparedStatementsEvicted . inc ( ) ; <nl> + lastMinuteEvictionsCount . incrementAndGet ( ) ; <nl> } <nl> } ) . build ( ) ; <nl> <nl> @ @ - 111 , 6 + 113 , 7 @ @ public class QueryProcessor implements QueryHandler <nl> public void onEviction ( Integer integer , CQLStatement cqlStatement ) <nl> { <nl> metrics . preparedStatementsEvicted . inc ( ) ; <nl> + lastMinuteEvictionsCount . incrementAndGet ( ) ; <nl> } <nl> } ) <nl> . build ( ) ; <nl> @ @ - 152 , 6 + 155 , 18 @ @ public class QueryProcessor implements QueryHandler <nl> private QueryProcessor ( ) <nl> { <nl> MigrationManager . instance . register ( new MigrationSubscriber ( ) ) ; <nl> + <nl> + StorageService . scheduledTasks . scheduleAtFixedRate ( new Runnable ( ) <nl> + { <nl> + public void run ( ) <nl> + { <nl> + long count = lastMinuteEvictionsCount . getAndSet ( 0 ) ; <nl> + if ( count > 0 ) <nl> + logger . info ( " { } prepared statements discarded in the last minute because cache limit reached ( { } bytes ) " , <nl> + count , <nl> + MAX _ CACHE _ PREPARED _ MEMORY ) ; <nl> + } <nl> + } , 1 , 1 , TimeUnit . MINUTES ) ; <nl> } <nl> <nl> public ParsedStatement . Prepared getPrepared ( MD5Digest id )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / NativeAccessMBean . java b / src / java / org / apache / cassandra / service / NativeAccessMBean . java <nl> new file mode 100644 <nl> index 0000000 . . 39b96c5 <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / service / NativeAccessMBean . java <nl> @ @ - 0 , 0 + 1 , 9 @ @ <nl> + package org . apache . cassandra . service ; <nl> + <nl> + public interface NativeAccessMBean <nl> + { <nl> + boolean isAvailable ( ) ; <nl> + <nl> + boolean isMemoryLockable ( ) ; <nl> + } <nl> +

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index e7e1361 . . 527b4e9 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 2 . 1 . 1 
 * ( cqlsh ) Add command line option for cqlshrc file path ( CASSANDRA - 7131 ) 
 - * Provide visibility into prepared statements churn ( CASSANDRA - 7921 ) 
 + * Provide visibility into prepared statements churn ( CASSANDRA - 7921 , CASSANDRA - 7930 ) 
 * Invalidate prepared statements when their keyspace or table is 
 dropped ( CASSANDRA - 7566 ) 
 * cassandra - stress : fix support for NetworkTopologyStrategy ( CASSANDRA - 7945 ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / QueryProcessor . java b / src / java / org / apache / cassandra / cql3 / QueryProcessor . java 
 index 8744db4 . . 9a09d42 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / QueryProcessor . java 
 + + + b / src / java / org / apache / cassandra / cql3 / QueryProcessor . java 
 @ @ - 21 , 6 + 21 , 8 @ @ import java . nio . ByteBuffer ; 
 import java . util . * ; 
 import java . util . concurrent . ConcurrentMap ; 
 import java . util . concurrent . ConcurrentHashMap ; 
 + import java . util . concurrent . TimeUnit ; 
 + import java . util . concurrent . atomic . AtomicInteger ; 
 
 import com . google . common . annotations . VisibleForTesting ; 
 import com . google . common . primitives . Ints ; 
 @ @ - 29 , 8 + 31 , 6 @ @ import com . googlecode . concurrentlinkedhashmap . ConcurrentLinkedHashMap ; 
 import com . googlecode . concurrentlinkedhashmap . EntryWeigher ; 
 import com . googlecode . concurrentlinkedhashmap . EvictionListener ; 
 import org . antlr . runtime . * ; 
 - import org . apache . cassandra . service . IMigrationListener ; 
 - import org . apache . cassandra . service . MigrationManager ; 
 import org . github . jamm . MemoryMeter ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 @ @ - 41 , 8 + 41 , 7 @ @ import org . apache . cassandra . db . composites . * ; 
 import org . apache . cassandra . db . marshal . AbstractType ; 
 import org . apache . cassandra . exceptions . * ; 
 import org . apache . cassandra . metrics . CQLMetrics ; 
 - import org . apache . cassandra . service . ClientState ; 
 - import org . apache . cassandra . service . QueryState ; 
 + import org . apache . cassandra . service . * ; 
 import org . apache . cassandra . service . pager . QueryPager ; 
 import org . apache . cassandra . service . pager . QueryPagers ; 
 import org . apache . cassandra . thrift . ThriftClientState ; 
 @ @ - 90 , 6 + 89 , 8 @ @ public class QueryProcessor implements QueryHandler 
 @ VisibleForTesting 
 public static final CQLMetrics metrics = new CQLMetrics ( ) ; 
 
 + private static AtomicInteger lastMinuteEvictionsCount = new AtomicInteger ( 0 ) ; 
 + 
 static 
 { 
 preparedStatements = new ConcurrentLinkedHashMap . Builder < MD5Digest , ParsedStatement . Prepared > ( ) 
 @ @ - 100 , 6 + 101 , 7 @ @ public class QueryProcessor implements QueryHandler 
 public void onEviction ( MD5Digest md5Digest , ParsedStatement . Prepared prepared ) 
 { 
 metrics . preparedStatementsEvicted . inc ( ) ; 
 + lastMinuteEvictionsCount . incrementAndGet ( ) ; 
 } 
 } ) . build ( ) ; 
 
 @ @ - 111 , 6 + 113 , 7 @ @ public class QueryProcessor implements QueryHandler 
 public void onEviction ( Integer integer , CQLStatement cqlStatement ) 
 { 
 metrics . preparedStatementsEvicted . inc ( ) ; 
 + lastMinuteEvictionsCount . incrementAndGet ( ) ; 
 } 
 } ) 
 . build ( ) ; 
 @ @ - 152 , 6 + 155 , 18 @ @ public class QueryProcessor implements QueryHandler 
 private QueryProcessor ( ) 
 { 
 MigrationManager . instance . register ( new MigrationSubscriber ( ) ) ; 
 + 
 + StorageService . scheduledTasks . scheduleAtFixedRate ( new Runnable ( ) 
 + { 
 + public void run ( ) 
 + { 
 + long count = lastMinuteEvictionsCount . getAndSet ( 0 ) ; 
 + if ( count > 0 ) 
 + logger . info ( " { } prepared statements discarded in the last minute because cache limit reached ( { } bytes ) " , 
 + count , 
 + MAX _ CACHE _ PREPARED _ MEMORY ) ; 
 + } 
 + } , 1 , 1 , TimeUnit . MINUTES ) ; 
 } 
 
 public ParsedStatement . Prepared getPrepared ( MD5Digest id )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / NativeAccessMBean . java b / src / java / org / apache / cassandra / service / NativeAccessMBean . java 
 new file mode 100644 
 index 0000000 . . 39b96c5 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / service / NativeAccessMBean . java 
 @ @ - 0 , 0 + 1 , 9 @ @ 
 + package org . apache . cassandra . service ; 
 + 
 + public interface NativeAccessMBean 
 + { 
 + boolean isAvailable ( ) ; 
 + 
 + boolean isMemoryLockable ( ) ; 
 + } 
 +
