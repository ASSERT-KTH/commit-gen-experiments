BLEU SCORE: 0.020980574531482755

TEST MSG: Fix Java Version check for versions > 100 on Windows
GENERATED MSG: Require java 8u40

TEST DIFF (one line): diff - - git a / conf / cassandra - env . ps1 b / conf / cassandra - env . ps1 <nl> index d7a4867 . . 31c7766 100644 <nl> - - - a / conf / cassandra - env . ps1 <nl> + + + b / conf / cassandra - env . ps1 <nl> @ @ - 281 , 7 + 281 , 14 @ @ Function ParseJVMInfo <nl> } <nl> <nl> $ pa = $ sa [ 1 ] . Split ( " _ " ) <nl> - $ env : JVM _ PATCH _ VERSION = $ pa [ 1 ] <nl> + $ subVersion = $ pa [ 1 ] <nl> + # Deal with - b ( build ) versions <nl> + if ( $ subVersion - contains ' - ' ) <nl> + { <nl> + $ patchAndBuild = $ subVersion . Split ( " - " ) <nl> + $ subVersion = $ patchAndBuild [ 0 ] <nl> + } <nl> + $ env : JVM _ PATCH _ VERSION = $ subVersion <nl> } <nl> <nl> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> @ @ - 413 , 7 + 420 , 7 @ @ Function SetCassandraEnvironment <nl> $ env : JVM _ OPTS = " $ env : JVM _ OPTS - javaagent : " " $ env : CASSANDRA _ HOME \ lib \ jamm - 0 . 3 . 0 . jar " " " <nl> } <nl> <nl> - if ( $ env : JVM _ VERSION . CompareTo ( " 1 . 8 . 0 _ 40 " ) - eq - 1 ) <nl> + if ( $ env : JVM _ VERSION . CompareTo ( " 1 . 8 . 0 " ) - eq - 1 - or [ convert ] : : ToInt32 ( $ env : JVM _ PATCH _ VERSION ) - lt 40 ) <nl> { <nl> echo " Cassandra 3 . 0 and later require Java 8u40 or later . " <nl> exit
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / conf / cassandra - env . ps1 b / conf / cassandra - env . ps1 
 index d7a4867 . . 31c7766 100644 
 - - - a / conf / cassandra - env . ps1 
 + + + b / conf / cassandra - env . ps1 
 @ @ - 281 , 7 + 281 , 14 @ @ Function ParseJVMInfo 
 } 
 
 $ pa = $ sa [ 1 ] . Split ( " _ " ) 
 - $ env : JVM _ PATCH _ VERSION = $ pa [ 1 ] 
 + $ subVersion = $ pa [ 1 ] 
 + # Deal with - b ( build ) versions 
 + if ( $ subVersion - contains ' - ' ) 
 + { 
 + $ patchAndBuild = $ subVersion . Split ( " - " ) 
 + $ subVersion = $ patchAndBuild [ 0 ] 
 + } 
 + $ env : JVM _ PATCH _ VERSION = $ subVersion 
 } 
 
 # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 @ @ - 413 , 7 + 420 , 7 @ @ Function SetCassandraEnvironment 
 $ env : JVM _ OPTS = " $ env : JVM _ OPTS - javaagent : " " $ env : CASSANDRA _ HOME \ lib \ jamm - 0 . 3 . 0 . jar " " " 
 } 
 
 - if ( $ env : JVM _ VERSION . CompareTo ( " 1 . 8 . 0 _ 40 " ) - eq - 1 ) 
 + if ( $ env : JVM _ VERSION . CompareTo ( " 1 . 8 . 0 " ) - eq - 1 - or [ convert ] : : ToInt32 ( $ env : JVM _ PATCH _ VERSION ) - lt 40 ) 
 { 
 echo " Cassandra 3 . 0 and later require Java 8u40 or later . " 
 exit

NEAREST DIFF:
ELIMINATEDSENTENCE
