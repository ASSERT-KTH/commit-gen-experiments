BLEU SCORE: 0.02931251013275449

TEST MSG: merge from 2 . 1
GENERATED MSG: Allow takeColumnFamilySnapshot to take a list of tables

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 9f89e3f . . 063a39b 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 94 , 7 + 94 , 12 @ @ <nl> * Save repair data to system table ( CASSANDRA - 5839 ) <nl> <nl> 2 . 1 . 5 <nl> + < < < < < < < HEAD <nl> * Add generate - idea - files target to build . xml ( CASSANDRA - 9123 ) <nl> + | | | | | | | merged common ancestors <nl> + = = = = = = = <nl> + * Allow takeColumnFamilySnapshot to take a list of tables ( CASSANDRA - 8348 ) <nl> + > > > > > > > cassandra - 2 . 1 <nl> * Limit major sstable operations to their canonical representation ( CASSANDRA - 8669 ) <nl> * cqlsh : Add tests for INSERT and UPDATE tab completion ( CASSANDRA - 9125 ) <nl> * cqlsh : quote column names when needed in COPY FROM inserts ( CASSANDRA - 9080 ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 045e7ac . . e0fb8b2 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 17 , 64 + 17 , 160 @ @ <nl> * / <nl> package org . apache . cassandra . service ; <nl> <nl> - import java . io . * ; <nl> + import static java . nio . charset . StandardCharsets . ISO _ 8859 _ 1 ; <nl> + <nl> + import java . io . ByteArrayInputStream ; <nl> + import java . io . DataInputStream ; <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> import java . lang . management . ManagementFactory ; <nl> import java . net . InetAddress ; <nl> import java . net . UnknownHostException ; <nl> import java . nio . ByteBuffer ; <nl> - import java . util . * ; <nl> - import java . util . concurrent . * ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> + import java . util . Collection ; <nl> + import java . util . Collections ; <nl> + import java . util . HashMap ; <nl> + import java . util . HashSet ; <nl> + import java . util . Iterator ; <nl> + import java . util . LinkedHashMap ; <nl> + import java . util . LinkedList ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + import java . util . Map . Entry ; <nl> + import java . util . Set ; <nl> + import java . util . SortedMap ; <nl> + import java . util . TreeMap ; <nl> + import java . util . UUID ; <nl> + import java . util . concurrent . CopyOnWriteArrayList ; <nl> + import java . util . concurrent . ExecutionException ; <nl> + import java . util . concurrent . ExecutorService ; <nl> + import java . util . concurrent . Future ; <nl> + import java . util . concurrent . FutureTask ; <nl> + import java . util . concurrent . TimeUnit ; <nl> + import java . util . concurrent . TimeoutException ; <nl> import java . util . concurrent . atomic . AtomicInteger ; <nl> - import javax . management . * ; <nl> + <nl> + import javax . management . JMX ; <nl> + import javax . management . MBeanServer ; <nl> + import javax . management . NotificationBroadcasterSupport ; <nl> + import javax . management . ObjectName ; <nl> import javax . management . openmbean . TabularData ; <nl> import javax . management . openmbean . TabularDataSupport ; <nl> <nl> - import com . google . common . annotations . VisibleForTesting ; <nl> - import com . google . common . base . Predicate ; <nl> - import com . google . common . collect . * ; <nl> - import com . google . common . util . concurrent . * ; <nl> - import org . apache . commons . lang3 . StringUtils ; <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> - <nl> - import ch . qos . logback . classic . LoggerContext ; <nl> - import ch . qos . logback . classic . jmx . JMXConfiguratorMBean ; <nl> - import ch . qos . logback . classic . spi . ILoggingEvent ; <nl> - import ch . qos . logback . core . Appender ; <nl> import org . apache . cassandra . auth . AuthKeyspace ; <nl> import org . apache . cassandra . auth . AuthMigrationListener ; <nl> - import org . apache . cassandra . concurrent . * ; <nl> - import org . apache . cassandra . config . * ; <nl> - import org . apache . cassandra . db . * ; <nl> + import org . apache . cassandra . concurrent . ScheduledExecutors ; <nl> + import org . apache . cassandra . concurrent . Stage ; <nl> + import org . apache . cassandra . concurrent . StageManager ; <nl> + import org . apache . cassandra . config . CFMetaData ; <nl> + import org . apache . cassandra . config . DatabaseDescriptor ; <nl> + import org . apache . cassandra . config . KSMetaData ; <nl> + import org . apache . cassandra . config . Schema ; <nl> + import org . apache . cassandra . db . BatchlogManager ; <nl> + import org . apache . cassandra . db . ColumnFamilyStore ; <nl> + import org . apache . cassandra . db . CounterMutationVerbHandler ; <nl> + import org . apache . cassandra . db . DecoratedKey ; <nl> + import org . apache . cassandra . db . DefinitionsUpdateVerbHandler ; <nl> + import org . apache . cassandra . db . HintedHandOffManager ; <nl> + import org . apache . cassandra . db . Keyspace ; <nl> + import org . apache . cassandra . db . MigrationRequestVerbHandler ; <nl> + import org . apache . cassandra . db . MutationVerbHandler ; <nl> + import org . apache . cassandra . db . ReadRepairVerbHandler ; <nl> + import org . apache . cassandra . db . ReadVerbHandler ; <nl> + import org . apache . cassandra . db . SchemaCheckVerbHandler ; <nl> + import org . apache . cassandra . db . SnapshotDetailsTabularData ; <nl> + import org . apache . cassandra . db . SystemKeyspace ; <nl> + import org . apache . cassandra . db . TruncateVerbHandler ; <nl> import org . apache . cassandra . db . commitlog . CommitLog ; <nl> import org . apache . cassandra . db . compaction . CompactionManager ; <nl> - import org . apache . cassandra . db . index . SecondaryIndex ; <nl> - import org . apache . cassandra . dht . * ; <nl> + import org . apache . cassandra . dht . BootStrapper ; <nl> + import org . apache . cassandra . dht . IPartitioner ; <nl> import org . apache . cassandra . dht . Range ; <nl> - import org . apache . cassandra . exceptions . * ; <nl> - import org . apache . cassandra . gms . * ; <nl> + import org . apache . cassandra . dht . RangeStreamer ; <nl> + import org . apache . cassandra . dht . RingPosition ; <nl> + import org . apache . cassandra . dht . StreamStateStore ; <nl> + import org . apache . cassandra . dht . Token ; <nl> + import org . apache . cassandra . exceptions . AlreadyExistsException ; <nl> + import org . apache . cassandra . exceptions . ConfigurationException ; <nl> + import org . apache . cassandra . exceptions . InvalidRequestException ; <nl> + import org . apache . cassandra . exceptions . UnavailableException ; <nl> + import org . apache . cassandra . gms . ApplicationState ; <nl> + import org . apache . cassandra . gms . EndpointState ; <nl> + import org . apache . cassandra . gms . FailureDetector ; <nl> + import org . apache . cassandra . gms . GossipDigestAck2VerbHandler ; <nl> + import org . apache . cassandra . gms . GossipDigestAckVerbHandler ; <nl> + import org . apache . cassandra . gms . GossipDigestSynVerbHandler ; <nl> + import org . apache . cassandra . gms . GossipShutdownVerbHandler ; <nl> + import org . apache . cassandra . gms . Gossiper ; <nl> + import org . apache . cassandra . gms . IEndpointStateChangeSubscriber ; <nl> + import org . apache . cassandra . gms . IFailureDetector ; <nl> + import org . apache . cassandra . gms . TokenSerializer ; <nl> + import org . apache . cassandra . gms . VersionedValue ; <nl> import org . apache . cassandra . io . sstable . SSTableDeletingTask ; <nl> import org . apache . cassandra . io . sstable . SSTableLoader ; <nl> import org . apache . cassandra . io . util . FileUtils ; <nl> - import org . apache . cassandra . locator . * ; <nl> + import org . apache . cassandra . locator . AbstractReplicationStrategy ; <nl> + import org . apache . cassandra . locator . DynamicEndpointSnitch ; <nl> + import org . apache . cassandra . locator . IEndpointSnitch ; <nl> + import org . apache . cassandra . locator . LocalStrategy ; <nl> + import org . apache . cassandra . locator . TokenMetadata ; <nl> import org . apache . cassandra . metrics . StorageMetrics ; <nl> - import org . apache . cassandra . net . * ; <nl> - import org . apache . cassandra . repair . * ; <nl> + import org . apache . cassandra . net . AsyncOneResponse ; <nl> + import org . apache . cassandra . net . MessageOut ; <nl> + import org . apache . cassandra . net . MessagingService ; <nl> + import org . apache . cassandra . net . ResponseVerbHandler ; <nl> + import org . apache . cassandra . repair . RepairMessageVerbHandler ; <nl> + import org . apache . cassandra . repair . RepairParallelism ; <nl> + import org . apache . cassandra . repair . RepairRunnable ; <nl> + import org . apache . cassandra . repair . SystemDistributedKeyspace ; <nl> import org . apache . cassandra . repair . messages . RepairOption ; <nl> import org . apache . cassandra . service . paxos . CommitVerbHandler ; <nl> import org . apache . cassandra . service . paxos . PrepareVerbHandler ; <nl> import org . apache . cassandra . service . paxos . ProposeVerbHandler ; <nl> - import org . apache . cassandra . streaming . * ; <nl> + import org . apache . cassandra . streaming . ReplicationFinishedVerbHandler ; <nl> + import org . apache . cassandra . streaming . StreamManager ; <nl> + import org . apache . cassandra . streaming . StreamPlan ; <nl> + import org . apache . cassandra . streaming . StreamResultFuture ; <nl> + import org . apache . cassandra . streaming . StreamState ; <nl> import org . apache . cassandra . thrift . EndpointDetails ; <nl> import org . apache . cassandra . thrift . TokenRange ; <nl> import org . apache . cassandra . thrift . cassandraConstants ; <nl> import org . apache . cassandra . tracing . TraceKeyspace ; <nl> - import org . apache . cassandra . utils . * ; <nl> + import org . apache . cassandra . utils . BackgroundActivityMonitor ; <nl> + import org . apache . cassandra . utils . FBUtilities ; <nl> + import org . apache . cassandra . utils . JVMStabilityInspector ; <nl> + import org . apache . cassandra . utils . OutputHandler ; <nl> + import org . apache . cassandra . utils . Pair ; <nl> + import org . apache . cassandra . utils . WrappedRunnable ; <nl> import org . apache . cassandra . utils . progress . ProgressEvent ; <nl> import org . apache . cassandra . utils . progress . ProgressEventType ; <nl> import org . apache . cassandra . utils . progress . jmx . JMXProgressSupport ; <nl> + import org . apache . commons . lang3 . StringUtils ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> <nl> - import static java . nio . charset . StandardCharsets . ISO _ 8859 _ 1 ; <nl> + import ch . qos . logback . classic . LoggerContext ; <nl> + import ch . qos . logback . classic . jmx . JMXConfiguratorMBean ; <nl> + import ch . qos . logback . classic . spi . ILoggingEvent ; <nl> + import ch . qos . logback . core . Appender ; <nl> + <nl> + import com . google . common . annotations . VisibleForTesting ; <nl> + import com . google . common . base . Predicate ; <nl> + import com . google . common . collect . ArrayListMultimap ; <nl> + import com . google . common . collect . Collections2 ; <nl> + import com . google . common . collect . HashMultimap ; <nl> + import com . google . common . collect . ImmutableSet ; <nl> + import com . google . common . collect . Iterables ; <nl> + import com . google . common . collect . Lists ; <nl> + import com . google . common . collect . Maps ; <nl> + import com . google . common . collect . Multimap ; <nl> + import com . google . common . collect . Sets ; <nl> + import com . google . common . util . concurrent . FutureCallback ; <nl> + import com . google . common . util . concurrent . Futures ; <nl> + import com . google . common . util . concurrent . ListenableFuture ; <nl> + import com . google . common . util . concurrent . Uninterruptibles ; <nl> <nl> / * * <nl> * This abstraction contains the token / identifier of this node <nl> @ @ - 2459 , 6 + 2555 , 70 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> columnFamilyStore . snapshot ( tag ) ; <nl> } <nl> <nl> + / * * <nl> + * Takes the snapshot of a multiple column family from different keyspaces . A snapshot name must be specified . <nl> + * <nl> + * <nl> + * @ param tag <nl> + * the tag given to the snapshot ; may not be null or empty <nl> + * @ param columnFamilyList <nl> + * list of columnfamily from different keyspace in the form of ks1 . cf1 ks2 . cf2 <nl> + * / <nl> + @ Override <nl> + public void takeMultipleColumnFamilySnapshot ( String tag , String . . . columnFamilyList ) <nl> + throws IOException <nl> + { <nl> + Map < Keyspace , List < String > > keyspaceColumnfamily = new HashMap < Keyspace , List < String > > ( ) ; <nl> + for ( String columnFamily : columnFamilyList ) <nl> + { <nl> + String splittedString [ ] = columnFamily . split ( " \ \ . " ) ; <nl> + if ( splittedString . length = = 2 ) <nl> + { <nl> + String keyspaceName = splittedString [ 0 ] ; <nl> + String columnFamilyName = splittedString [ 1 ] ; <nl> + <nl> + if ( keyspaceName = = null ) <nl> + throw new IOException ( " You must supply a keyspace name " ) ; <nl> + if ( operationMode . equals ( Mode . JOINING ) ) <nl> + throw new IOException ( " Cannot snapshot until bootstrap completes " ) ; <nl> + <nl> + if ( columnFamilyName = = null ) <nl> + throw new IOException ( " You must supply a column family name " ) ; <nl> + if ( tag = = null | | tag . equals ( " " ) ) <nl> + throw new IOException ( " You must supply a snapshot name . " ) ; <nl> + <nl> + Keyspace keyspace = getValidKeyspace ( keyspaceName ) ; <nl> + ColumnFamilyStore columnFamilyStore = keyspace . getColumnFamilyStore ( columnFamilyName ) ; <nl> + / / As there can be multiple column family from same keyspace check if snapshot exist for that specific <nl> + / / columnfamily and not for whole keyspace <nl> + <nl> + if ( columnFamilyStore . snapshotExists ( tag ) ) <nl> + throw new IOException ( " Snapshot " + tag + " already exists . " ) ; <nl> + if ( ! keyspaceColumnfamily . containsKey ( keyspace ) ) <nl> + { <nl> + keyspaceColumnfamily . put ( keyspace , new ArrayList < String > ( ) ) ; <nl> + } <nl> + <nl> + / / Add Keyspace columnfamily to map in order to support atomicity for snapshot process . <nl> + / / So no snapshot should happen if any one of the above conditions fail for any keyspace or columnfamily <nl> + keyspaceColumnfamily . get ( keyspace ) . add ( columnFamilyName ) ; <nl> + <nl> + } <nl> + else <nl> + { <nl> + throw new IllegalArgumentException ( <nl> + " Cannot take a snapshot on secondary index or invalid column family name . You must supply a column family name in the form of keyspace . columnfamily " ) ; <nl> + } <nl> + } <nl> + <nl> + for ( Entry < Keyspace , List < String > > entry : keyspaceColumnfamily . entrySet ( ) ) <nl> + { <nl> + for ( String columnFamily : entry . getValue ( ) ) <nl> + entry . getKey ( ) . snapshot ( tag , columnFamily ) ; <nl> + } <nl> + <nl> + } <nl> + <nl> private Keyspace getValidKeyspace ( String keyspaceName ) throws IOException <nl> { <nl> if ( ! Schema . instance . getKeyspaces ( ) . contains ( keyspaceName ) ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> index 3b7ac3e . . 01588c6 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> @ @ - 204 , 6 + 204 , 16 @ @ public interface StorageServiceMBean extends NotificationEmitter <nl> public void takeColumnFamilySnapshot ( String keyspaceName , String columnFamilyName , String tag ) throws IOException ; <nl> <nl> / * * <nl> + * Takes the snapshot of a multiple column family from different keyspaces . A snapshot name must be specified . <nl> + * <nl> + * @ param tag <nl> + * the tag given to the snapshot ; may not be null or empty <nl> + * @ param columnFamilyList <nl> + * list of columnfamily from different keyspace in the form of ks1 . cf1 ks2 . cf2 <nl> + * / <nl> + public void takeMultipleColumnFamilySnapshot ( String tag , String . . . columnFamilyList ) throws IOException ; <nl> + <nl> + / * * <nl> * Remove the snapshot with the given name from the given keyspaces . <nl> * If no tag is specified we will remove all snapshots . <nl> * / <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> index ecc5f57 . . c0c60e5 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> @ @ - 25 , 22 + 25 , 30 @ @ import java . lang . management . MemoryUsage ; <nl> import java . lang . management . RuntimeMXBean ; <nl> import java . net . InetAddress ; <nl> import java . net . UnknownHostException ; <nl> - import java . util . * ; <nl> + import java . util . AbstractMap ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Collections ; <nl> + import java . util . Comparator ; <nl> + import java . util . HashMap ; <nl> + import java . util . Iterator ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> import java . util . Map . Entry ; <nl> + import java . util . Set ; <nl> import java . util . concurrent . ExecutionException ; <nl> import java . util . concurrent . TimeUnit ; <nl> import java . util . concurrent . TimeoutException ; <nl> <nl> - import javax . management . * ; <nl> + import javax . management . JMX ; <nl> + import javax . management . MBeanServerConnection ; <nl> + import javax . management . MalformedObjectNameException ; <nl> + import javax . management . ObjectName ; <nl> import javax . management . openmbean . CompositeData ; <nl> + import javax . management . openmbean . OpenDataException ; <nl> + import javax . management . openmbean . TabularData ; <nl> import javax . management . remote . JMXConnector ; <nl> import javax . management . remote . JMXConnectorFactory ; <nl> import javax . management . remote . JMXServiceURL ; <nl> - import javax . management . openmbean . * ; <nl> - <nl> - import com . google . common . base . Function ; <nl> - import com . google . common . collect . * ; <nl> - import com . google . common . util . concurrent . Uninterruptibles ; <nl> <nl> import org . apache . cassandra . concurrent . Stage ; <nl> import org . apache . cassandra . db . ColumnFamilyStoreMBean ; <nl> @ @ - 54 , 16 + 62 , 27 @ @ import org . apache . cassandra . gms . Gossiper ; <nl> import org . apache . cassandra . gms . GossiperMBean ; <nl> import org . apache . cassandra . locator . EndpointSnitchInfoMBean ; <nl> import org . apache . cassandra . metrics . CassandraMetricsRegistry ; <nl> + import org . apache . cassandra . metrics . ColumnFamilyMetrics . Sampler ; <nl> import org . apache . cassandra . metrics . StorageMetrics ; <nl> import org . apache . cassandra . metrics . ThreadPoolMetrics ; <nl> import org . apache . cassandra . net . MessagingService ; <nl> import org . apache . cassandra . net . MessagingServiceMBean ; <nl> - import org . apache . cassandra . service . * ; <nl> - import org . apache . cassandra . streaming . StreamState ; <nl> + import org . apache . cassandra . service . CacheService ; <nl> + import org . apache . cassandra . service . CacheServiceMBean ; <nl> + import org . apache . cassandra . service . GCInspector ; <nl> + import org . apache . cassandra . service . GCInspectorMXBean ; <nl> + import org . apache . cassandra . service . StorageProxy ; <nl> + import org . apache . cassandra . service . StorageProxyMBean ; <nl> + import org . apache . cassandra . service . StorageServiceMBean ; <nl> import org . apache . cassandra . streaming . StreamManagerMBean ; <nl> + import org . apache . cassandra . streaming . StreamState ; <nl> import org . apache . cassandra . streaming . management . StreamStateCompositeData ; <nl> <nl> - import org . apache . cassandra . metrics . ColumnFamilyMetrics . Sampler ; <nl> + import com . google . common . base . Function ; <nl> + import com . google . common . collect . Iterables ; <nl> + import com . google . common . collect . Maps ; <nl> + import com . google . common . collect . Sets ; <nl> + import com . google . common . util . concurrent . Uninterruptibles ; <nl> <nl> / * * <nl> * JMX client operations for Cassandra . <nl> @ @ - 487 , 6 + 506 , 28 @ @ public class NodeProbe implements AutoCloseable <nl> } <nl> <nl> / * * <nl> + * Take a snapshot of all column family from different keyspaces . <nl> + * <nl> + * @ param snapshotName <nl> + * the name of the snapshot . <nl> + * @ param columnfamilylist <nl> + * list of columnfamily from different keyspace in the form of ks1 . cf1 ks2 . cf2 <nl> + * / <nl> + public void takeMultipleColumnFamilySnapshot ( String snapshotName , String . . . columnFamilyList ) <nl> + throws IOException <nl> + { <nl> + if ( null ! = columnFamilyList & & columnFamilyList . length ! = 0 ) <nl> + { <nl> + ssProxy . takeMultipleColumnFamilySnapshot ( snapshotName , columnFamilyList ) ; <nl> + } <nl> + else <nl> + { <nl> + throw new IOException ( " The column family List for a snapshot should not be empty or null " ) ; <nl> + } <nl> + <nl> + } <nl> + <nl> + / * * <nl> * Remove all the existing snapshots . <nl> * / <nl> public void clearSnapshot ( String tag , String . . . keyspaces ) throws IOException <nl> diff - - git a / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java b / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java <nl> index 22cc775 . . d2eab9a 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java <nl> + + + b / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java <nl> @ @ - 42 , 6 + 42 , 9 @ @ public class Snapshot extends NodeToolCmd <nl> @ Option ( title = " tag " , name = { " - t " , " - - tag " } , description = " The name of the snapshot " ) <nl> private String snapshotName = Long . toString ( System . currentTimeMillis ( ) ) ; <nl> <nl> + @ Option ( title = " kclist " , name = { " - kc " , " - - kc - list " } , description = " The list of Keyspace . Column family to take snapshot . ( you must not specify only keyspace ) " ) <nl> + private String kcList = null ; <nl> + <nl> @ Override <nl> public void execute ( NodeProbe probe ) <nl> { <nl> @ @ - 50 , 20 + 53 , 40 @ @ public class Snapshot extends NodeToolCmd <nl> StringBuilder sb = new StringBuilder ( ) ; <nl> <nl> sb . append ( " Requested creating snapshot ( s ) for " ) ; <nl> - <nl> - if ( keyspaces . isEmpty ( ) ) <nl> - sb . append ( " [ all keyspaces ] " ) ; <nl> + / / Create a separate path for kclist to avoid breaking of already existing scripts <nl> + if ( null ! = kcList & & ! kcList . isEmpty ( ) ) <nl> + { <nl> + kcList = kcList . replace ( " " , " " ) ; <nl> + if ( keyspaces . isEmpty ( ) & & null = = columnFamily ) <nl> + sb . append ( " [ " ) . append ( kcList ) . append ( " ] " ) ; <nl> + else <nl> + { <nl> + throw new IOException ( <nl> + " When specifying the Keyspace columfamily list for a snapshot , you should not specify columnfamily " ) ; <nl> + } <nl> + if ( ! snapshotName . isEmpty ( ) ) <nl> + sb . append ( " with snapshot name [ " ) . append ( snapshotName ) . append ( " ] " ) ; <nl> + System . out . println ( sb . toString ( ) ) ; <nl> + probe . takeMultipleColumnFamilySnapshot ( snapshotName , kcList . split ( " , " ) ) ; <nl> + System . out . println ( " Snapshot directory : " + snapshotName ) ; <nl> + } <nl> else <nl> - sb . append ( " [ " ) . append ( join ( keyspaces , " , " ) ) . append ( " ] " ) ; <nl> + { <nl> + if ( keyspaces . isEmpty ( ) ) <nl> + sb . append ( " [ all keyspaces ] " ) ; <nl> + else <nl> + sb . append ( " [ " ) . append ( join ( keyspaces , " , " ) ) . append ( " ] " ) ; <nl> <nl> - if ( ! snapshotName . isEmpty ( ) ) <nl> - sb . append ( " with snapshot name [ " ) . append ( snapshotName ) . append ( " ] " ) ; <nl> + if ( ! snapshotName . isEmpty ( ) ) <nl> + sb . append ( " with snapshot name [ " ) . append ( snapshotName ) . append ( " ] " ) ; <nl> <nl> - System . out . println ( sb . toString ( ) ) ; <nl> + System . out . println ( sb . toString ( ) ) ; <nl> <nl> - probe . takeSnapshot ( snapshotName , columnFamily , toArray ( keyspaces , String . class ) ) ; <nl> - System . out . println ( " Snapshot directory : " + snapshotName ) ; <nl> - } catch ( IOException e ) <nl> + probe . takeSnapshot ( snapshotName , columnFamily , toArray ( keyspaces , String . class ) ) ; <nl> + System . out . println ( " Snapshot directory : " + snapshotName ) ; <nl> + } <nl> + } <nl> + catch ( IOException e ) <nl> { <nl> throw new RuntimeException ( " Error during taking a snapshot " , e ) ; <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 9f89e3f . . 063a39b 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 94 , 7 + 94 , 12 @ @ 
 * Save repair data to system table ( CASSANDRA - 5839 ) 
 
 2 . 1 . 5 
 + < < < < < < < HEAD 
 * Add generate - idea - files target to build . xml ( CASSANDRA - 9123 ) 
 + | | | | | | | merged common ancestors 
 + = = = = = = = 
 + * Allow takeColumnFamilySnapshot to take a list of tables ( CASSANDRA - 8348 ) 
 + > > > > > > > cassandra - 2 . 1 
 * Limit major sstable operations to their canonical representation ( CASSANDRA - 8669 ) 
 * cqlsh : Add tests for INSERT and UPDATE tab completion ( CASSANDRA - 9125 ) 
 * cqlsh : quote column names when needed in COPY FROM inserts ( CASSANDRA - 9080 ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 045e7ac . . e0fb8b2 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 17 , 64 + 17 , 160 @ @ 
 * / 
 package org . apache . cassandra . service ; 
 
 - import java . io . * ; 
 + import static java . nio . charset . StandardCharsets . ISO _ 8859 _ 1 ; 
 + 
 + import java . io . ByteArrayInputStream ; 
 + import java . io . DataInputStream ; 
 + import java . io . File ; 
 + import java . io . IOException ; 
 import java . lang . management . ManagementFactory ; 
 import java . net . InetAddress ; 
 import java . net . UnknownHostException ; 
 import java . nio . ByteBuffer ; 
 - import java . util . * ; 
 - import java . util . concurrent . * ; 
 + import java . util . ArrayList ; 
 + import java . util . Arrays ; 
 + import java . util . Collection ; 
 + import java . util . Collections ; 
 + import java . util . HashMap ; 
 + import java . util . HashSet ; 
 + import java . util . Iterator ; 
 + import java . util . LinkedHashMap ; 
 + import java . util . LinkedList ; 
 + import java . util . List ; 
 + import java . util . Map ; 
 + import java . util . Map . Entry ; 
 + import java . util . Set ; 
 + import java . util . SortedMap ; 
 + import java . util . TreeMap ; 
 + import java . util . UUID ; 
 + import java . util . concurrent . CopyOnWriteArrayList ; 
 + import java . util . concurrent . ExecutionException ; 
 + import java . util . concurrent . ExecutorService ; 
 + import java . util . concurrent . Future ; 
 + import java . util . concurrent . FutureTask ; 
 + import java . util . concurrent . TimeUnit ; 
 + import java . util . concurrent . TimeoutException ; 
 import java . util . concurrent . atomic . AtomicInteger ; 
 - import javax . management . * ; 
 + 
 + import javax . management . JMX ; 
 + import javax . management . MBeanServer ; 
 + import javax . management . NotificationBroadcasterSupport ; 
 + import javax . management . ObjectName ; 
 import javax . management . openmbean . TabularData ; 
 import javax . management . openmbean . TabularDataSupport ; 
 
 - import com . google . common . annotations . VisibleForTesting ; 
 - import com . google . common . base . Predicate ; 
 - import com . google . common . collect . * ; 
 - import com . google . common . util . concurrent . * ; 
 - import org . apache . commons . lang3 . StringUtils ; 
 - import org . slf4j . Logger ; 
 - import org . slf4j . LoggerFactory ; 
 - 
 - import ch . qos . logback . classic . LoggerContext ; 
 - import ch . qos . logback . classic . jmx . JMXConfiguratorMBean ; 
 - import ch . qos . logback . classic . spi . ILoggingEvent ; 
 - import ch . qos . logback . core . Appender ; 
 import org . apache . cassandra . auth . AuthKeyspace ; 
 import org . apache . cassandra . auth . AuthMigrationListener ; 
 - import org . apache . cassandra . concurrent . * ; 
 - import org . apache . cassandra . config . * ; 
 - import org . apache . cassandra . db . * ; 
 + import org . apache . cassandra . concurrent . ScheduledExecutors ; 
 + import org . apache . cassandra . concurrent . Stage ; 
 + import org . apache . cassandra . concurrent . StageManager ; 
 + import org . apache . cassandra . config . CFMetaData ; 
 + import org . apache . cassandra . config . DatabaseDescriptor ; 
 + import org . apache . cassandra . config . KSMetaData ; 
 + import org . apache . cassandra . config . Schema ; 
 + import org . apache . cassandra . db . BatchlogManager ; 
 + import org . apache . cassandra . db . ColumnFamilyStore ; 
 + import org . apache . cassandra . db . CounterMutationVerbHandler ; 
 + import org . apache . cassandra . db . DecoratedKey ; 
 + import org . apache . cassandra . db . DefinitionsUpdateVerbHandler ; 
 + import org . apache . cassandra . db . HintedHandOffManager ; 
 + import org . apache . cassandra . db . Keyspace ; 
 + import org . apache . cassandra . db . MigrationRequestVerbHandler ; 
 + import org . apache . cassandra . db . MutationVerbHandler ; 
 + import org . apache . cassandra . db . ReadRepairVerbHandler ; 
 + import org . apache . cassandra . db . ReadVerbHandler ; 
 + import org . apache . cassandra . db . SchemaCheckVerbHandler ; 
 + import org . apache . cassandra . db . SnapshotDetailsTabularData ; 
 + import org . apache . cassandra . db . SystemKeyspace ; 
 + import org . apache . cassandra . db . TruncateVerbHandler ; 
 import org . apache . cassandra . db . commitlog . CommitLog ; 
 import org . apache . cassandra . db . compaction . CompactionManager ; 
 - import org . apache . cassandra . db . index . SecondaryIndex ; 
 - import org . apache . cassandra . dht . * ; 
 + import org . apache . cassandra . dht . BootStrapper ; 
 + import org . apache . cassandra . dht . IPartitioner ; 
 import org . apache . cassandra . dht . Range ; 
 - import org . apache . cassandra . exceptions . * ; 
 - import org . apache . cassandra . gms . * ; 
 + import org . apache . cassandra . dht . RangeStreamer ; 
 + import org . apache . cassandra . dht . RingPosition ; 
 + import org . apache . cassandra . dht . StreamStateStore ; 
 + import org . apache . cassandra . dht . Token ; 
 + import org . apache . cassandra . exceptions . AlreadyExistsException ; 
 + import org . apache . cassandra . exceptions . ConfigurationException ; 
 + import org . apache . cassandra . exceptions . InvalidRequestException ; 
 + import org . apache . cassandra . exceptions . UnavailableException ; 
 + import org . apache . cassandra . gms . ApplicationState ; 
 + import org . apache . cassandra . gms . EndpointState ; 
 + import org . apache . cassandra . gms . FailureDetector ; 
 + import org . apache . cassandra . gms . GossipDigestAck2VerbHandler ; 
 + import org . apache . cassandra . gms . GossipDigestAckVerbHandler ; 
 + import org . apache . cassandra . gms . GossipDigestSynVerbHandler ; 
 + import org . apache . cassandra . gms . GossipShutdownVerbHandler ; 
 + import org . apache . cassandra . gms . Gossiper ; 
 + import org . apache . cassandra . gms . IEndpointStateChangeSubscriber ; 
 + import org . apache . cassandra . gms . IFailureDetector ; 
 + import org . apache . cassandra . gms . TokenSerializer ; 
 + import org . apache . cassandra . gms . VersionedValue ; 
 import org . apache . cassandra . io . sstable . SSTableDeletingTask ; 
 import org . apache . cassandra . io . sstable . SSTableLoader ; 
 import org . apache . cassandra . io . util . FileUtils ; 
 - import org . apache . cassandra . locator . * ; 
 + import org . apache . cassandra . locator . AbstractReplicationStrategy ; 
 + import org . apache . cassandra . locator . DynamicEndpointSnitch ; 
 + import org . apache . cassandra . locator . IEndpointSnitch ; 
 + import org . apache . cassandra . locator . LocalStrategy ; 
 + import org . apache . cassandra . locator . TokenMetadata ; 
 import org . apache . cassandra . metrics . StorageMetrics ; 
 - import org . apache . cassandra . net . * ; 
 - import org . apache . cassandra . repair . * ; 
 + import org . apache . cassandra . net . AsyncOneResponse ; 
 + import org . apache . cassandra . net . MessageOut ; 
 + import org . apache . cassandra . net . MessagingService ; 
 + import org . apache . cassandra . net . ResponseVerbHandler ; 
 + import org . apache . cassandra . repair . RepairMessageVerbHandler ; 
 + import org . apache . cassandra . repair . RepairParallelism ; 
 + import org . apache . cassandra . repair . RepairRunnable ; 
 + import org . apache . cassandra . repair . SystemDistributedKeyspace ; 
 import org . apache . cassandra . repair . messages . RepairOption ; 
 import org . apache . cassandra . service . paxos . CommitVerbHandler ; 
 import org . apache . cassandra . service . paxos . PrepareVerbHandler ; 
 import org . apache . cassandra . service . paxos . ProposeVerbHandler ; 
 - import org . apache . cassandra . streaming . * ; 
 + import org . apache . cassandra . streaming . ReplicationFinishedVerbHandler ; 
 + import org . apache . cassandra . streaming . StreamManager ; 
 + import org . apache . cassandra . streaming . StreamPlan ; 
 + import org . apache . cassandra . streaming . StreamResultFuture ; 
 + import org . apache . cassandra . streaming . StreamState ; 
 import org . apache . cassandra . thrift . EndpointDetails ; 
 import org . apache . cassandra . thrift . TokenRange ; 
 import org . apache . cassandra . thrift . cassandraConstants ; 
 import org . apache . cassandra . tracing . TraceKeyspace ; 
 - import org . apache . cassandra . utils . * ; 
 + import org . apache . cassandra . utils . BackgroundActivityMonitor ; 
 + import org . apache . cassandra . utils . FBUtilities ; 
 + import org . apache . cassandra . utils . JVMStabilityInspector ; 
 + import org . apache . cassandra . utils . OutputHandler ; 
 + import org . apache . cassandra . utils . Pair ; 
 + import org . apache . cassandra . utils . WrappedRunnable ; 
 import org . apache . cassandra . utils . progress . ProgressEvent ; 
 import org . apache . cassandra . utils . progress . ProgressEventType ; 
 import org . apache . cassandra . utils . progress . jmx . JMXProgressSupport ; 
 + import org . apache . commons . lang3 . StringUtils ; 
 + import org . slf4j . Logger ; 
 + import org . slf4j . LoggerFactory ; 
 
 - import static java . nio . charset . StandardCharsets . ISO _ 8859 _ 1 ; 
 + import ch . qos . logback . classic . LoggerContext ; 
 + import ch . qos . logback . classic . jmx . JMXConfiguratorMBean ; 
 + import ch . qos . logback . classic . spi . ILoggingEvent ; 
 + import ch . qos . logback . core . Appender ; 
 + 
 + import com . google . common . annotations . VisibleForTesting ; 
 + import com . google . common . base . Predicate ; 
 + import com . google . common . collect . ArrayListMultimap ; 
 + import com . google . common . collect . Collections2 ; 
 + import com . google . common . collect . HashMultimap ; 
 + import com . google . common . collect . ImmutableSet ; 
 + import com . google . common . collect . Iterables ; 
 + import com . google . common . collect . Lists ; 
 + import com . google . common . collect . Maps ; 
 + import com . google . common . collect . Multimap ; 
 + import com . google . common . collect . Sets ; 
 + import com . google . common . util . concurrent . FutureCallback ; 
 + import com . google . common . util . concurrent . Futures ; 
 + import com . google . common . util . concurrent . ListenableFuture ; 
 + import com . google . common . util . concurrent . Uninterruptibles ; 
 
 / * * 
 * This abstraction contains the token / identifier of this node 
 @ @ - 2459 , 6 + 2555 , 70 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 columnFamilyStore . snapshot ( tag ) ; 
 } 
 
 + / * * 
 + * Takes the snapshot of a multiple column family from different keyspaces . A snapshot name must be specified . 
 + * 
 + * 
 + * @ param tag 
 + * the tag given to the snapshot ; may not be null or empty 
 + * @ param columnFamilyList 
 + * list of columnfamily from different keyspace in the form of ks1 . cf1 ks2 . cf2 
 + * / 
 + @ Override 
 + public void takeMultipleColumnFamilySnapshot ( String tag , String . . . columnFamilyList ) 
 + throws IOException 
 + { 
 + Map < Keyspace , List < String > > keyspaceColumnfamily = new HashMap < Keyspace , List < String > > ( ) ; 
 + for ( String columnFamily : columnFamilyList ) 
 + { 
 + String splittedString [ ] = columnFamily . split ( " \ \ . " ) ; 
 + if ( splittedString . length = = 2 ) 
 + { 
 + String keyspaceName = splittedString [ 0 ] ; 
 + String columnFamilyName = splittedString [ 1 ] ; 
 + 
 + if ( keyspaceName = = null ) 
 + throw new IOException ( " You must supply a keyspace name " ) ; 
 + if ( operationMode . equals ( Mode . JOINING ) ) 
 + throw new IOException ( " Cannot snapshot until bootstrap completes " ) ; 
 + 
 + if ( columnFamilyName = = null ) 
 + throw new IOException ( " You must supply a column family name " ) ; 
 + if ( tag = = null | | tag . equals ( " " ) ) 
 + throw new IOException ( " You must supply a snapshot name . " ) ; 
 + 
 + Keyspace keyspace = getValidKeyspace ( keyspaceName ) ; 
 + ColumnFamilyStore columnFamilyStore = keyspace . getColumnFamilyStore ( columnFamilyName ) ; 
 + / / As there can be multiple column family from same keyspace check if snapshot exist for that specific 
 + / / columnfamily and not for whole keyspace 
 + 
 + if ( columnFamilyStore . snapshotExists ( tag ) ) 
 + throw new IOException ( " Snapshot " + tag + " already exists . " ) ; 
 + if ( ! keyspaceColumnfamily . containsKey ( keyspace ) ) 
 + { 
 + keyspaceColumnfamily . put ( keyspace , new ArrayList < String > ( ) ) ; 
 + } 
 + 
 + / / Add Keyspace columnfamily to map in order to support atomicity for snapshot process . 
 + / / So no snapshot should happen if any one of the above conditions fail for any keyspace or columnfamily 
 + keyspaceColumnfamily . get ( keyspace ) . add ( columnFamilyName ) ; 
 + 
 + } 
 + else 
 + { 
 + throw new IllegalArgumentException ( 
 + " Cannot take a snapshot on secondary index or invalid column family name . You must supply a column family name in the form of keyspace . columnfamily " ) ; 
 + } 
 + } 
 + 
 + for ( Entry < Keyspace , List < String > > entry : keyspaceColumnfamily . entrySet ( ) ) 
 + { 
 + for ( String columnFamily : entry . getValue ( ) ) 
 + entry . getKey ( ) . snapshot ( tag , columnFamily ) ; 
 + } 
 + 
 + } 
 + 
 private Keyspace getValidKeyspace ( String keyspaceName ) throws IOException 
 { 
 if ( ! Schema . instance . getKeyspaces ( ) . contains ( keyspaceName ) ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 index 3b7ac3e . . 01588c6 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 @ @ - 204 , 6 + 204 , 16 @ @ public interface StorageServiceMBean extends NotificationEmitter 
 public void takeColumnFamilySnapshot ( String keyspaceName , String columnFamilyName , String tag ) throws IOException ; 
 
 / * * 
 + * Takes the snapshot of a multiple column family from different keyspaces . A snapshot name must be specified . 
 + * 
 + * @ param tag 
 + * the tag given to the snapshot ; may not be null or empty 
 + * @ param columnFamilyList 
 + * list of columnfamily from different keyspace in the form of ks1 . cf1 ks2 . cf2 
 + * / 
 + public void takeMultipleColumnFamilySnapshot ( String tag , String . . . columnFamilyList ) throws IOException ; 
 + 
 + / * * 
 * Remove the snapshot with the given name from the given keyspaces . 
 * If no tag is specified we will remove all snapshots . 
 * / 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 index ecc5f57 . . c0c60e5 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 @ @ - 25 , 22 + 25 , 30 @ @ import java . lang . management . MemoryUsage ; 
 import java . lang . management . RuntimeMXBean ; 
 import java . net . InetAddress ; 
 import java . net . UnknownHostException ; 
 - import java . util . * ; 
 + import java . util . AbstractMap ; 
 + import java . util . ArrayList ; 
 + import java . util . Collections ; 
 + import java . util . Comparator ; 
 + import java . util . HashMap ; 
 + import java . util . Iterator ; 
 + import java . util . List ; 
 + import java . util . Map ; 
 import java . util . Map . Entry ; 
 + import java . util . Set ; 
 import java . util . concurrent . ExecutionException ; 
 import java . util . concurrent . TimeUnit ; 
 import java . util . concurrent . TimeoutException ; 
 
 - import javax . management . * ; 
 + import javax . management . JMX ; 
 + import javax . management . MBeanServerConnection ; 
 + import javax . management . MalformedObjectNameException ; 
 + import javax . management . ObjectName ; 
 import javax . management . openmbean . CompositeData ; 
 + import javax . management . openmbean . OpenDataException ; 
 + import javax . management . openmbean . TabularData ; 
 import javax . management . remote . JMXConnector ; 
 import javax . management . remote . JMXConnectorFactory ; 
 import javax . management . remote . JMXServiceURL ; 
 - import javax . management . openmbean . * ; 
 - 
 - import com . google . common . base . Function ; 
 - import com . google . common . collect . * ; 
 - import com . google . common . util . concurrent . Uninterruptibles ; 
 
 import org . apache . cassandra . concurrent . Stage ; 
 import org . apache . cassandra . db . ColumnFamilyStoreMBean ; 
 @ @ - 54 , 16 + 62 , 27 @ @ import org . apache . cassandra . gms . Gossiper ; 
 import org . apache . cassandra . gms . GossiperMBean ; 
 import org . apache . cassandra . locator . EndpointSnitchInfoMBean ; 
 import org . apache . cassandra . metrics . CassandraMetricsRegistry ; 
 + import org . apache . cassandra . metrics . ColumnFamilyMetrics . Sampler ; 
 import org . apache . cassandra . metrics . StorageMetrics ; 
 import org . apache . cassandra . metrics . ThreadPoolMetrics ; 
 import org . apache . cassandra . net . MessagingService ; 
 import org . apache . cassandra . net . MessagingServiceMBean ; 
 - import org . apache . cassandra . service . * ; 
 - import org . apache . cassandra . streaming . StreamState ; 
 + import org . apache . cassandra . service . CacheService ; 
 + import org . apache . cassandra . service . CacheServiceMBean ; 
 + import org . apache . cassandra . service . GCInspector ; 
 + import org . apache . cassandra . service . GCInspectorMXBean ; 
 + import org . apache . cassandra . service . StorageProxy ; 
 + import org . apache . cassandra . service . StorageProxyMBean ; 
 + import org . apache . cassandra . service . StorageServiceMBean ; 
 import org . apache . cassandra . streaming . StreamManagerMBean ; 
 + import org . apache . cassandra . streaming . StreamState ; 
 import org . apache . cassandra . streaming . management . StreamStateCompositeData ; 
 
 - import org . apache . cassandra . metrics . ColumnFamilyMetrics . Sampler ; 
 + import com . google . common . base . Function ; 
 + import com . google . common . collect . Iterables ; 
 + import com . google . common . collect . Maps ; 
 + import com . google . common . collect . Sets ; 
 + import com . google . common . util . concurrent . Uninterruptibles ; 
 
 / * * 
 * JMX client operations for Cassandra . 
 @ @ - 487 , 6 + 506 , 28 @ @ public class NodeProbe implements AutoCloseable 
 } 
 
 / * * 
 + * Take a snapshot of all column family from different keyspaces . 
 + * 
 + * @ param snapshotName 
 + * the name of the snapshot . 
 + * @ param columnfamilylist 
 + * list of columnfamily from different keyspace in the form of ks1 . cf1 ks2 . cf2 
 + * / 
 + public void takeMultipleColumnFamilySnapshot ( String snapshotName , String . . . columnFamilyList ) 
 + throws IOException 
 + { 
 + if ( null ! = columnFamilyList & & columnFamilyList . length ! = 0 ) 
 + { 
 + ssProxy . takeMultipleColumnFamilySnapshot ( snapshotName , columnFamilyList ) ; 
 + } 
 + else 
 + { 
 + throw new IOException ( " The column family List for a snapshot should not be empty or null " ) ; 
 + } 
 + 
 + } 
 + 
 + / * * 
 * Remove all the existing snapshots . 
 * / 
 public void clearSnapshot ( String tag , String . . . keyspaces ) throws IOException 
 diff - - git a / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java b / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java 
 index 22cc775 . . d2eab9a 100644 
 - - - a / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java 
 + + + b / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java 
 @ @ - 42 , 6 + 42 , 9 @ @ public class Snapshot extends NodeToolCmd 
 @ Option ( title = " tag " , name = { " - t " , " - - tag " } , description = " The name of the snapshot " ) 
 private String snapshotName = Long . toString ( System . currentTimeMillis ( ) ) ; 
 
 + @ Option ( title = " kclist " , name = { " - kc " , " - - kc - list " } , description = " The list of Keyspace . Column family to take snapshot . ( you must not specify only keyspace ) " ) 
 + private String kcList = null ; 
 + 
 @ Override 
 public void execute ( NodeProbe probe ) 
 { 
 @ @ - 50 , 20 + 53 , 40 @ @ public class Snapshot extends NodeToolCmd 
 StringBuilder sb = new StringBuilder ( ) ; 
 
 sb . append ( " Requested creating snapshot ( s ) for " ) ; 
 - 
 - if ( keyspaces . isEmpty ( ) ) 
 - sb . append ( " [ all keyspaces ] " ) ; 
 + / / Create a separate path for kclist to avoid breaking of already existing scripts 
 + if ( null ! = kcList & & ! kcList . isEmpty ( ) ) 
 + { 
 + kcList = kcList . replace ( " " , " " ) ; 
 + if ( keyspaces . isEmpty ( ) & & null = = columnFamily ) 
 + sb . append ( " [ " ) . append ( kcList ) . append ( " ] " ) ; 
 + else 
 + { 
 + throw new IOException ( 
 + " When specifying the Keyspace columfamily list for a snapshot , you should not specify columnfamily " ) ; 
 + } 
 + if ( ! snapshotName . isEmpty ( ) ) 
 + sb . append ( " with snapshot name [ " ) . append ( snapshotName ) . append ( " ] " ) ; 
 + System . out . println ( sb . toString ( ) ) ; 
 + probe . takeMultipleColumnFamilySnapshot ( snapshotName , kcList . split ( " , " ) ) ; 
 + System . out . println ( " Snapshot directory : " + snapshotName ) ; 
 + } 
 else 
 - sb . append ( " [ " ) . append ( join ( keyspaces , " , " ) ) . append ( " ] " ) ; 
 + { 
 + if ( keyspaces . isEmpty ( ) ) 
 + sb . append ( " [ all keyspaces ] " ) ; 
 + else 
 + sb . append ( " [ " ) . append ( join ( keyspaces , " , " ) ) . append ( " ] " ) ; 
 
 - if ( ! snapshotName . isEmpty ( ) ) 
 - sb . append ( " with snapshot name [ " ) . append ( snapshotName ) . append ( " ] " ) ; 
 + if ( ! snapshotName . isEmpty ( ) ) 
 + sb . append ( " with snapshot name [ " ) . append ( snapshotName ) . append ( " ] " ) ; 
 
 - System . out . println ( sb . toString ( ) ) ; 
 + System . out . println ( sb . toString ( ) ) ; 
 
 - probe . takeSnapshot ( snapshotName , columnFamily , toArray ( keyspaces , String . class ) ) ; 
 - System . out . println ( " Snapshot directory : " + snapshotName ) ; 
 - } catch ( IOException e ) 
 + probe . takeSnapshot ( snapshotName , columnFamily , toArray ( keyspaces , String . class ) ) ; 
 + System . out . println ( " Snapshot directory : " + snapshotName ) ; 
 + } 
 + } 
 + catch ( IOException e ) 
 { 
 throw new RuntimeException ( " Error during taking a snapshot " , e ) ; 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
