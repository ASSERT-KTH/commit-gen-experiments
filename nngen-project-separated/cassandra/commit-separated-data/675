BLEU SCORE: 0.013139808552042212

TEST MSG: post - fix for : Provide option for cassandra - stress to dump all settings
GENERATED MSG: use platform agnostic new lines in printf statements

TEST DIFF (one line): diff - - git a / tools / stress / src / org / apache / cassandra / stress / StressProfile . java b / tools / stress / src / org / apache / cassandra / stress / StressProfile . java <nl> index 3a20215 . . 9e2783d 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / StressProfile . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / StressProfile . java <nl> @ @ - 106 , 14 + 106 , 26 @ @ public class StressProfile implements Serializable <nl> out . printf ( " Table Name : % s % n " , tableName ) ; <nl> out . printf ( " Table CQL : % n * * * % n % s * * * % n % n " , tableCql ) ; <nl> out . printf ( " Extra Schema Definitions : % s % n " , extraSchemaDefinitions ) ; <nl> - out . printf ( " Generator Configs : % n " ) ; <nl> - columnConfigs . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v . getConfigAsString ( ) ) ) ; <nl> - out . printf ( " Query Definitions : % n " ) ; <nl> - queries . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v . getConfigAsString ( ) ) ) ; <nl> - out . printf ( " Token Range Queries : % n " ) ; <nl> - tokenRangeQueries . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v . getConfigAsString ( ) ) ) ; <nl> - out . printf ( " Insert Settings : % n " ) ; <nl> - insert . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v ) ) ; <nl> + if ( columnConfigs ! = null ) <nl> + { <nl> + out . printf ( " Generator Configs : % n " ) ; <nl> + columnConfigs . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v . getConfigAsString ( ) ) ) ; <nl> + } <nl> + if ( queries ! = null ) <nl> + { <nl> + out . printf ( " Query Definitions : % n " ) ; <nl> + queries . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v . getConfigAsString ( ) ) ) ; <nl> + } <nl> + if ( tokenRangeQueries ! = null ) <nl> + { <nl> + out . printf ( " Token Range Queries : % n " ) ; <nl> + tokenRangeQueries . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v . getConfigAsString ( ) ) ) ; <nl> + } <nl> + if ( insert ! = null ) <nl> + { <nl> + out . printf ( " Insert Settings : % n " ) ; <nl> + insert . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v ) ) ; <nl> + } <nl> <nl> PartitionGenerator generator = newGenerator ( stressSettings ) ; <nl> Distribution visits = stressSettings . insert . visits . get ( ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index fe448f2 . . 6a00d41 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 1 . 1 - dev <nl> + * ( Hadoop ) fix split generation regression ( CASSANDRA - 4259 ) <nl> * ignore min / max compactions settings in LCS , while preserving <nl> behavior that min = max = 0 disables autocompaction ( CASSANDRA - 4233 ) <nl> * log number of rows read from saved cache ( CASSANDRA - 4249 ) <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> index 2482188 . . 98058e8 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> @ @ - 505 , 10 + 505 , 10 @ @ public class SSTableReader extends SSTable <nl> if ( samples . isEmpty ( ) ) <nl> return positions ; <nl> <nl> - for ( Range < Token > range : Range . < Token > normalize ( ranges ) ) <nl> + for ( Range < Token > range : Range . normalize ( ranges ) ) <nl> { <nl> RowPosition leftPosition = range . left . maxKeyBound ( ) ; <nl> - RowPosition rightPosition = range . left . maxKeyBound ( ) ; <nl> + RowPosition rightPosition = range . right . maxKeyBound ( ) ; <nl> <nl> int left = Collections . binarySearch ( samples , leftPosition ) ; <nl> if ( left < 0 )

TEST DIFF:
diff - - git a / tools / stress / src / org / apache / cassandra / stress / StressProfile . java b / tools / stress / src / org / apache / cassandra / stress / StressProfile . java 
 index 3a20215 . . 9e2783d 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / StressProfile . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / StressProfile . java 
 @ @ - 106 , 14 + 106 , 26 @ @ public class StressProfile implements Serializable 
 out . printf ( " Table Name : % s % n " , tableName ) ; 
 out . printf ( " Table CQL : % n * * * % n % s * * * % n % n " , tableCql ) ; 
 out . printf ( " Extra Schema Definitions : % s % n " , extraSchemaDefinitions ) ; 
 - out . printf ( " Generator Configs : % n " ) ; 
 - columnConfigs . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v . getConfigAsString ( ) ) ) ; 
 - out . printf ( " Query Definitions : % n " ) ; 
 - queries . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v . getConfigAsString ( ) ) ) ; 
 - out . printf ( " Token Range Queries : % n " ) ; 
 - tokenRangeQueries . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v . getConfigAsString ( ) ) ) ; 
 - out . printf ( " Insert Settings : % n " ) ; 
 - insert . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v ) ) ; 
 + if ( columnConfigs ! = null ) 
 + { 
 + out . printf ( " Generator Configs : % n " ) ; 
 + columnConfigs . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v . getConfigAsString ( ) ) ) ; 
 + } 
 + if ( queries ! = null ) 
 + { 
 + out . printf ( " Query Definitions : % n " ) ; 
 + queries . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v . getConfigAsString ( ) ) ) ; 
 + } 
 + if ( tokenRangeQueries ! = null ) 
 + { 
 + out . printf ( " Token Range Queries : % n " ) ; 
 + tokenRangeQueries . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v . getConfigAsString ( ) ) ) ; 
 + } 
 + if ( insert ! = null ) 
 + { 
 + out . printf ( " Insert Settings : % n " ) ; 
 + insert . forEach ( ( k , v ) - > out . printf ( " % s : % s % n " , k , v ) ) ; 
 + } 
 
 PartitionGenerator generator = newGenerator ( stressSettings ) ; 
 Distribution visits = stressSettings . insert . visits . get ( ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index fe448f2 . . 6a00d41 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 1 . 1 - dev 
 + * ( Hadoop ) fix split generation regression ( CASSANDRA - 4259 ) 
 * ignore min / max compactions settings in LCS , while preserving 
 behavior that min = max = 0 disables autocompaction ( CASSANDRA - 4233 ) 
 * log number of rows read from saved cache ( CASSANDRA - 4249 ) 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 index 2482188 . . 98058e8 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 @ @ - 505 , 10 + 505 , 10 @ @ public class SSTableReader extends SSTable 
 if ( samples . isEmpty ( ) ) 
 return positions ; 
 
 - for ( Range < Token > range : Range . < Token > normalize ( ranges ) ) 
 + for ( Range < Token > range : Range . normalize ( ranges ) ) 
 { 
 RowPosition leftPosition = range . left . maxKeyBound ( ) ; 
 - RowPosition rightPosition = range . left . maxKeyBound ( ) ; 
 + RowPosition rightPosition = range . right . maxKeyBound ( ) ; 
 
 int left = Collections . binarySearch ( samples , leftPosition ) ; 
 if ( left < 0 )
