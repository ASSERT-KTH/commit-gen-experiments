BLEU SCORE: 0.016932492841722675

TEST MSG: Get rid of redundant cfs arg in ABSC # cloneToHeap ( )
GENERATED MSG: fix problem with localCopy methods after CASSANDRA - 6689

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java <nl> index 4a83901 . . ba8f278 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java <nl> + + + b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java <nl> @ @ - 86 , 7 + 86 , 7 @ @ public class ArrayBackedSortedColumns extends ColumnFamily <nl> this . isSorted = original . isSorted ; <nl> } <nl> <nl> - public static ColumnFamily cloneToHeap ( ColumnFamily value , ColumnFamilyStore cfs ) <nl> + public static ColumnFamily cloneToHeap ( ColumnFamily value ) <nl> { <nl> if ( value . getColumnCount ( ) = = 0 ) <nl> return value ; <nl> @ @ - 95 , 7 + 95 , 7 @ @ public class ArrayBackedSortedColumns extends ColumnFamily <nl> int i = 0 ; <nl> for ( Cell cell : value ) <nl> cells [ i + + ] = cell . localCopy ( HeapAllocator . instance ) ; <nl> - ColumnFamily r = new ArrayBackedSortedColumns ( cfs . metadata , value . isInsertReversed ( ) , cells , i , i ) ; <nl> + ColumnFamily r = new ArrayBackedSortedColumns ( value . metadata , value . isInsertReversed ( ) , cells , i , i ) ; <nl> r . delete ( value ) ; <nl> return r ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / Memtable . java b / src / java / org / apache / cassandra / db / Memtable . java <nl> index 91dcf2d . . 415e3bc 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Memtable . java <nl> + + + b / src / java / org / apache / cassandra / db / Memtable . java <nl> @ @ - 259 , 7 + 259 , 7 @ @ public class Memtable <nl> { <nl> DecoratedKey key = ( DecoratedKey ) entry . getKey ( ) ; <nl> key = new DecoratedKey ( key . token , HeapAllocator . instance . clone ( key . key ) ) ; <nl> - ColumnFamily columns = ArrayBackedSortedColumns . cloneToHeap ( entry . getValue ( ) , cfs ) ; <nl> + ColumnFamily columns = ArrayBackedSortedColumns . cloneToHeap ( entry . getValue ( ) ) ; <nl> entry = new AbstractMap . SimpleImmutableEntry < > ( key , columns ) ; <nl> } <nl> / / Store the reference to the current entry so that remove ( ) can update the current size .
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java 
 index 4a83901 . . ba8f278 100644 
 - - - a / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java 
 + + + b / src / java / org / apache / cassandra / db / ArrayBackedSortedColumns . java 
 @ @ - 86 , 7 + 86 , 7 @ @ public class ArrayBackedSortedColumns extends ColumnFamily 
 this . isSorted = original . isSorted ; 
 } 
 
 - public static ColumnFamily cloneToHeap ( ColumnFamily value , ColumnFamilyStore cfs ) 
 + public static ColumnFamily cloneToHeap ( ColumnFamily value ) 
 { 
 if ( value . getColumnCount ( ) = = 0 ) 
 return value ; 
 @ @ - 95 , 7 + 95 , 7 @ @ public class ArrayBackedSortedColumns extends ColumnFamily 
 int i = 0 ; 
 for ( Cell cell : value ) 
 cells [ i + + ] = cell . localCopy ( HeapAllocator . instance ) ; 
 - ColumnFamily r = new ArrayBackedSortedColumns ( cfs . metadata , value . isInsertReversed ( ) , cells , i , i ) ; 
 + ColumnFamily r = new ArrayBackedSortedColumns ( value . metadata , value . isInsertReversed ( ) , cells , i , i ) ; 
 r . delete ( value ) ; 
 return r ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / Memtable . java b / src / java / org / apache / cassandra / db / Memtable . java 
 index 91dcf2d . . 415e3bc 100644 
 - - - a / src / java / org / apache / cassandra / db / Memtable . java 
 + + + b / src / java / org / apache / cassandra / db / Memtable . java 
 @ @ - 259 , 7 + 259 , 7 @ @ public class Memtable 
 { 
 DecoratedKey key = ( DecoratedKey ) entry . getKey ( ) ; 
 key = new DecoratedKey ( key . token , HeapAllocator . instance . clone ( key . key ) ) ; 
 - ColumnFamily columns = ArrayBackedSortedColumns . cloneToHeap ( entry . getValue ( ) , cfs ) ; 
 + ColumnFamily columns = ArrayBackedSortedColumns . cloneToHeap ( entry . getValue ( ) ) ; 
 entry = new AbstractMap . SimpleImmutableEntry < > ( key , columns ) ; 
 } 
 / / Store the reference to the current entry so that remove ( ) can update the current size .

NEAREST DIFF:
ELIMINATEDSENTENCE
