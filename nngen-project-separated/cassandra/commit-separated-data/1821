BLEU SCORE: 0.04372912656590315

TEST MSG: move strategy field to local
GENERATED MSG: Fix the consistencylevel during bootstrap fix

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / DatacenterSyncWriteResponseHandler . java b / src / java / org / apache / cassandra / service / DatacenterSyncWriteResponseHandler . java <nl> index 81ae1f3 . . 511a122 100644 <nl> - - - a / src / java / org / apache / cassandra / service / DatacenterSyncWriteResponseHandler . java <nl> + + + b / src / java / org / apache / cassandra / service / DatacenterSyncWriteResponseHandler . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ package org . apache . cassandra . service ; <nl> import java . net . InetAddress ; <nl> import java . util . Collection ; <nl> import java . util . HashMap ; <nl> + import java . util . Map ; <nl> import java . util . concurrent . atomic . AtomicInteger ; <nl> <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> @ @ - 37 , 8 + 38 , 7 @ @ public class DatacenterSyncWriteResponseHandler extends AbstractWriteResponseHan <nl> { <nl> private static final IEndpointSnitch snitch = DatabaseDescriptor . getEndpointSnitch ( ) ; <nl> <nl> - private final NetworkTopologyStrategy strategy ; <nl> - private final HashMap < String , AtomicInteger > responses = new HashMap < String , AtomicInteger > ( ) ; <nl> + private final Map < String , AtomicInteger > responses = new HashMap < String , AtomicInteger > ( ) ; <nl> private final AtomicInteger acks = new AtomicInteger ( 0 ) ; <nl> <nl> public DatacenterSyncWriteResponseHandler ( Collection < InetAddress > naturalEndpoints , <nl> @ @ - 52 , 7 + 52 , 7 @ @ public class DatacenterSyncWriteResponseHandler extends AbstractWriteResponseHan <nl> super ( keyspace , naturalEndpoints , pendingEndpoints , consistencyLevel , callback , writeType ) ; <nl> assert consistencyLevel = = ConsistencyLevel . EACH _ QUORUM ; <nl> <nl> - strategy = ( NetworkTopologyStrategy ) keyspace . getReplicationStrategy ( ) ; <nl> + NetworkTopologyStrategy strategy = ( NetworkTopologyStrategy ) keyspace . getReplicationStrategy ( ) ; <nl> <nl> for ( String dc : strategy . getDatacenters ( ) ) <nl> {
NEAREST DIFF (one line): diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml <nl> index b3ef2cd . . cab2e91 100644 <nl> - - - a / conf / cassandra . yaml <nl> + + + b / conf / cassandra . yaml <nl> @ @ - 480 , 8 + 480 , 10 @ @ truncate _ request _ timeout _ in _ ms : 60000 <nl> request _ timeout _ in _ ms : 10000 <nl> <nl> # Enable operation timeout information exchange between nodes to accurately <nl> - # measure request timeouts , If disabled cassandra will assuming the request <nl> - # was forwarded to the replica instantly by the coordinator <nl> + # measure request timeouts . If disabled , replicas will assume that requests <nl> + # were forwarded to them instantly by the coordinator , which means that <nl> + # under overload conditions we will waste that much extra time processing <nl> + # already - timed - out requests . <nl> # <nl> # Warning : before enabling this property make sure to ntp is installed <nl> # and the times are synchronized between the nodes .

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / DatacenterSyncWriteResponseHandler . java b / src / java / org / apache / cassandra / service / DatacenterSyncWriteResponseHandler . java 
 index 81ae1f3 . . 511a122 100644 
 - - - a / src / java / org / apache / cassandra / service / DatacenterSyncWriteResponseHandler . java 
 + + + b / src / java / org / apache / cassandra / service / DatacenterSyncWriteResponseHandler . java 
 @ @ - 20 , 6 + 20 , 7 @ @ package org . apache . cassandra . service ; 
 import java . net . InetAddress ; 
 import java . util . Collection ; 
 import java . util . HashMap ; 
 + import java . util . Map ; 
 import java . util . concurrent . atomic . AtomicInteger ; 
 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 @ @ - 37 , 8 + 38 , 7 @ @ public class DatacenterSyncWriteResponseHandler extends AbstractWriteResponseHan 
 { 
 private static final IEndpointSnitch snitch = DatabaseDescriptor . getEndpointSnitch ( ) ; 
 
 - private final NetworkTopologyStrategy strategy ; 
 - private final HashMap < String , AtomicInteger > responses = new HashMap < String , AtomicInteger > ( ) ; 
 + private final Map < String , AtomicInteger > responses = new HashMap < String , AtomicInteger > ( ) ; 
 private final AtomicInteger acks = new AtomicInteger ( 0 ) ; 
 
 public DatacenterSyncWriteResponseHandler ( Collection < InetAddress > naturalEndpoints , 
 @ @ - 52 , 7 + 52 , 7 @ @ public class DatacenterSyncWriteResponseHandler extends AbstractWriteResponseHan 
 super ( keyspace , naturalEndpoints , pendingEndpoints , consistencyLevel , callback , writeType ) ; 
 assert consistencyLevel = = ConsistencyLevel . EACH _ QUORUM ; 
 
 - strategy = ( NetworkTopologyStrategy ) keyspace . getReplicationStrategy ( ) ; 
 + NetworkTopologyStrategy strategy = ( NetworkTopologyStrategy ) keyspace . getReplicationStrategy ( ) ; 
 
 for ( String dc : strategy . getDatacenters ( ) ) 
 {

NEAREST DIFF:
diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml 
 index b3ef2cd . . cab2e91 100644 
 - - - a / conf / cassandra . yaml 
 + + + b / conf / cassandra . yaml 
 @ @ - 480 , 8 + 480 , 10 @ @ truncate _ request _ timeout _ in _ ms : 60000 
 request _ timeout _ in _ ms : 10000 
 
 # Enable operation timeout information exchange between nodes to accurately 
 - # measure request timeouts , If disabled cassandra will assuming the request 
 - # was forwarded to the replica instantly by the coordinator 
 + # measure request timeouts . If disabled , replicas will assume that requests 
 + # were forwarded to them instantly by the coordinator , which means that 
 + # under overload conditions we will waste that much extra time processing 
 + # already - timed - out requests . 
 # 
 # Warning : before enabling this property make sure to ntp is installed 
 # and the times are synchronized between the nodes .
