BLEU SCORE: 0.022882533035912193

TEST MSG: Fix BB relative get
GENERATED MSG: Correctly compare BooleanType values other than 0 and 1

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / marshal / BooleanType . java b / src / java / org / apache / cassandra / db / marshal / BooleanType . java <nl> index ca11cc2 . . d5f44ce 100644 <nl> - - - a / src / java / org / apache / cassandra / db / marshal / BooleanType . java <nl> + + + b / src / java / org / apache / cassandra / db / marshal / BooleanType . java <nl> @ @ - 24 , 8 + 24 , 13 @ @ import org . apache . cassandra . serializers . TypeSerializer ; <nl> import org . apache . cassandra . serializers . BooleanSerializer ; <nl> import org . apache . cassandra . serializers . MarshalException ; <nl> <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + <nl> public class BooleanType extends AbstractType < Boolean > <nl> { <nl> + private static final Logger logger = LoggerFactory . getLogger ( BooleanType . class ) ; <nl> + <nl> public static final BooleanType instance = new BooleanType ( ) ; <nl> <nl> BooleanType ( ) { } / / singleton <nl> @ @ - 38 , 8 + 43 , 8 @ @ public class BooleanType extends AbstractType < Boolean > <nl> return 1 ; <nl> <nl> / / False is 0 , True is anything else , makes False sort before True . <nl> - byte b1 = o1 . get ( ) ; <nl> - byte b2 = o2 . get ( ) ; <nl> + byte b1 = o1 . get ( o1 . position ( ) ) ; <nl> + byte b2 = o2 . get ( o2 . position ( ) ) ; <nl> if ( b1 = = 0 ) <nl> return b2 = = 0 ? 0 : - 1 ; <nl> return b2 = = 0 ? 1 : 0 ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / marshal / BooleanType . java b / src / java / org / apache / cassandra / db / marshal / BooleanType . java 
 index ca11cc2 . . d5f44ce 100644 
 - - - a / src / java / org / apache / cassandra / db / marshal / BooleanType . java 
 + + + b / src / java / org / apache / cassandra / db / marshal / BooleanType . java 
 @ @ - 24 , 8 + 24 , 13 @ @ import org . apache . cassandra . serializers . TypeSerializer ; 
 import org . apache . cassandra . serializers . BooleanSerializer ; 
 import org . apache . cassandra . serializers . MarshalException ; 
 
 + import org . slf4j . Logger ; 
 + import org . slf4j . LoggerFactory ; 
 + 
 public class BooleanType extends AbstractType < Boolean > 
 { 
 + private static final Logger logger = LoggerFactory . getLogger ( BooleanType . class ) ; 
 + 
 public static final BooleanType instance = new BooleanType ( ) ; 
 
 BooleanType ( ) { } / / singleton 
 @ @ - 38 , 8 + 43 , 8 @ @ public class BooleanType extends AbstractType < Boolean > 
 return 1 ; 
 
 / / False is 0 , True is anything else , makes False sort before True . 
 - byte b1 = o1 . get ( ) ; 
 - byte b2 = o2 . get ( ) ; 
 + byte b1 = o1 . get ( o1 . position ( ) ) ; 
 + byte b2 = o2 . get ( o2 . position ( ) ) ; 
 if ( b1 = = 0 ) 
 return b2 = = 0 ? 0 : - 1 ; 
 return b2 = = 0 ? 1 : 0 ;

NEAREST DIFF:
ELIMINATEDSENTENCE
