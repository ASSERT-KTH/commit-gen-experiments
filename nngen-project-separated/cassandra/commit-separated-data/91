BLEU SCORE: 0.026279617104084448

TEST MSG: ninja : fix fat finger regression between + 1 and commit for CASSANDRA - 14660
GENERATED MSG: merge from 1 . 2

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / utils / SortedBiMultiValMap . java b / src / java / org / apache / cassandra / utils / SortedBiMultiValMap . java <nl> index f628061 . . e8bcee1 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / SortedBiMultiValMap . java <nl> + + + b / src / java / org / apache / cassandra / utils / SortedBiMultiValMap . java <nl> @ @ - 65 , 7 + 65 , 7 @ @ public class SortedBiMultiValMap < K , V > extends BiMultiValMap < K , V > <nl> <nl> private static < K , V > void copy ( BiMultiValMap < K , V > map , BiMultiValMap < K , V > newMap ) <nl> { <nl> - newMap . forwardMap . putAll ( map ) ; <nl> + newMap . forwardMap . putAll ( map . forwardMap ) ; <nl> / / Put each individual TreeSet instead of Multimap # putAll ( Multimap ) to get linear complexity <nl> / / See CASSANDRA - 14660 <nl> for ( Entry < V , Collection < K > > entry : map . inverse ( ) . asMap ( ) . entrySet ( ) )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b935425 . . 7f5a487 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 2 - rc1 <nl> + * fix cqlsh rendering of blob fields ( CASSANDRA - 4970 ) <nl> * fix cqlsh DESCRIBE command ( CASSANDRA - 4913 ) <nl> * save truncation position in system table ( CASSANDRA - 4906 ) <nl> * Move CompressionMetadata off - heap ( CASSANDRA - 4937 ) <nl> diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py <nl> index d15c083 . . bab3506 100644 <nl> - - - a / pylib / cqlshlib / formatting . py <nl> + + + b / pylib / cqlshlib / formatting . py <nl> @ @ - 88 , 8 + 88 , 8 @ @ def formatter _ for ( typname ) : <nl> return f <nl> return registrator <nl> <nl> - @ formatter _ for ( ' bytes ' ) <nl> - def format _ value _ bytes ( val , colormap , * * _ ) : <nl> + @ formatter _ for ( ' blob ' ) <nl> + def format _ value _ blob ( val , colormap , * * _ ) : <nl> bval = ' ' . join ( ' % 02x ' % ord ( c ) for c in val ) <nl> return colorme ( bval , colormap , ' hex ' ) <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / utils / SortedBiMultiValMap . java b / src / java / org / apache / cassandra / utils / SortedBiMultiValMap . java 
 index f628061 . . e8bcee1 100644 
 - - - a / src / java / org / apache / cassandra / utils / SortedBiMultiValMap . java 
 + + + b / src / java / org / apache / cassandra / utils / SortedBiMultiValMap . java 
 @ @ - 65 , 7 + 65 , 7 @ @ public class SortedBiMultiValMap < K , V > extends BiMultiValMap < K , V > 
 
 private static < K , V > void copy ( BiMultiValMap < K , V > map , BiMultiValMap < K , V > newMap ) 
 { 
 - newMap . forwardMap . putAll ( map ) ; 
 + newMap . forwardMap . putAll ( map . forwardMap ) ; 
 / / Put each individual TreeSet instead of Multimap # putAll ( Multimap ) to get linear complexity 
 / / See CASSANDRA - 14660 
 for ( Entry < V , Collection < K > > entry : map . inverse ( ) . asMap ( ) . entrySet ( ) )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b935425 . . 7f5a487 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 2 - rc1 
 + * fix cqlsh rendering of blob fields ( CASSANDRA - 4970 ) 
 * fix cqlsh DESCRIBE command ( CASSANDRA - 4913 ) 
 * save truncation position in system table ( CASSANDRA - 4906 ) 
 * Move CompressionMetadata off - heap ( CASSANDRA - 4937 ) 
 diff - - git a / pylib / cqlshlib / formatting . py b / pylib / cqlshlib / formatting . py 
 index d15c083 . . bab3506 100644 
 - - - a / pylib / cqlshlib / formatting . py 
 + + + b / pylib / cqlshlib / formatting . py 
 @ @ - 88 , 8 + 88 , 8 @ @ def formatter _ for ( typname ) : 
 return f 
 return registrator 
 
 - @ formatter _ for ( ' bytes ' ) 
 - def format _ value _ bytes ( val , colormap , * * _ ) : 
 + @ formatter _ for ( ' blob ' ) 
 + def format _ value _ blob ( val , colormap , * * _ ) : 
 bval = ' ' . join ( ' % 02x ' % ord ( c ) for c in val ) 
 return colorme ( bval , colormap , ' hex ' ) 

