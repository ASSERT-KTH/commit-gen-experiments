BLEU SCORE: 0.013139808552042212

TEST MSG: Revert CASSANDRA - 11427 because of CASSANDRA - 12351 ( CASSANDRA - 12143 ) .
GENERATED MSG: Fix trying to load deleted row into row cache on startup

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c18bad7 . . 6f709f7 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 2 . 8 <nl> + * Revert CASSANDRA - 11427 ( CASSANDRA - 12351 ) <nl> * Wait for tracing events before returning response and query at same consistency level client side ( CASSANDRA - 11465 ) <nl> * cqlsh copyutil should get host metadata by connected address ( CASSANDRA - 11979 ) <nl> * Fixed cqlshlib . test . remove _ test _ db ( CASSANDRA - 12214 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index ff63163 . . d0cb200 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 2346 , 10 + 2346 , 6 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> removeDroppedColumns ( data ) ; <nl> } <nl> <nl> - / / remove purgable tombstones from result - see CASSANDRA - 11427 <nl> - if ( data ! = null ) <nl> - data . purgeTombstones ( gcBefore ( filter . timestamp ) ) ; <nl> - <nl> rows . add ( new Row ( rawRow . key , data ) ) ; <nl> if ( ! ignoreTombstonedPartitions | | ! data . hasOnlyTombstones ( filter . timestamp ) ) <nl> matched + + ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 32aba15 . . 66279f0 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 2 , 6 + 2 , 8 @ @ <nl> * Include fatal errors in trace events ( CASSANDRA - 5447 ) <nl> * Ensure that PerRowSecondaryIndex is notified of row - level deletes <nl> ( CASSANDRA - 5445 ) <nl> + Merged from 1 . 1 : <nl> + * Fix trying to load deleted row into row cache on startup ( CASSANDRA - 4463 ) <nl> <nl> <nl> 1 . 2 . 4 <nl> diff - - git a / src / java / org / apache / cassandra / service / CacheService . java b / src / java / org / apache / cassandra / service / CacheService . java <nl> index 21f007c . . bc218c4 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CacheService . java <nl> + + + b / src / java / org / apache / cassandra / service / CacheService . java <nl> @ @ - 352 , 7 + 352 , 8 @ @ public class CacheService implements CacheServiceMBean <nl> { <nl> DecoratedKey dk = cfs . partitioner . decorateKey ( key ) ; <nl> ColumnFamily data = cfs . getTopLevelColumns ( QueryFilter . getIdentityFilter ( dk , new QueryPath ( cfs . columnFamily ) ) , Integer . MIN _ VALUE , true ) ; <nl> - rowCache . put ( new RowCacheKey ( cfs . metadata . cfId , dk ) , data ) ; <nl> + if ( data ! = null ) <nl> + rowCache . put ( new RowCacheKey ( cfs . metadata . cfId , dk ) , data ) ; <nl> } <nl> } <nl> }

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c18bad7 . . 6f709f7 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 2 . 8 
 + * Revert CASSANDRA - 11427 ( CASSANDRA - 12351 ) 
 * Wait for tracing events before returning response and query at same consistency level client side ( CASSANDRA - 11465 ) 
 * cqlsh copyutil should get host metadata by connected address ( CASSANDRA - 11979 ) 
 * Fixed cqlshlib . test . remove _ test _ db ( CASSANDRA - 12214 ) 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index ff63163 . . d0cb200 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 2346 , 10 + 2346 , 6 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 removeDroppedColumns ( data ) ; 
 } 
 
 - / / remove purgable tombstones from result - see CASSANDRA - 11427 
 - if ( data ! = null ) 
 - data . purgeTombstones ( gcBefore ( filter . timestamp ) ) ; 
 - 
 rows . add ( new Row ( rawRow . key , data ) ) ; 
 if ( ! ignoreTombstonedPartitions | | ! data . hasOnlyTombstones ( filter . timestamp ) ) 
 matched + + ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 32aba15 . . 66279f0 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 2 , 6 + 2 , 8 @ @ 
 * Include fatal errors in trace events ( CASSANDRA - 5447 ) 
 * Ensure that PerRowSecondaryIndex is notified of row - level deletes 
 ( CASSANDRA - 5445 ) 
 + Merged from 1 . 1 : 
 + * Fix trying to load deleted row into row cache on startup ( CASSANDRA - 4463 ) 
 
 
 1 . 2 . 4 
 diff - - git a / src / java / org / apache / cassandra / service / CacheService . java b / src / java / org / apache / cassandra / service / CacheService . java 
 index 21f007c . . bc218c4 100644 
 - - - a / src / java / org / apache / cassandra / service / CacheService . java 
 + + + b / src / java / org / apache / cassandra / service / CacheService . java 
 @ @ - 352 , 7 + 352 , 8 @ @ public class CacheService implements CacheServiceMBean 
 { 
 DecoratedKey dk = cfs . partitioner . decorateKey ( key ) ; 
 ColumnFamily data = cfs . getTopLevelColumns ( QueryFilter . getIdentityFilter ( dk , new QueryPath ( cfs . columnFamily ) ) , Integer . MIN _ VALUE , true ) ; 
 - rowCache . put ( new RowCacheKey ( cfs . metadata . cfId , dk ) , data ) ; 
 + if ( data ! = null ) 
 + rowCache . put ( new RowCacheKey ( cfs . metadata . cfId , dk ) , data ) ; 
 } 
 } 
 }
