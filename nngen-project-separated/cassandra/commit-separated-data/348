BLEU SCORE: 0.03030756162746321

TEST MSG: Set test . runners based on cores and memory size
GENERATED MSG: create test dirs and separate test config xml . patch from johano . fixes # 22

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 8095e25 . . ce2324d 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 15 <nl> + * Set test . runners based on cores and memory size ( CASSANDRA - 13078 ) <nl> * Allow different NUMACTL _ ARGS to be passed in ( CASSANDRA - 13557 ) <nl> * Allow native function calls in CQLSSTableWriter ( CASSANDRA - 12606 ) <nl> * Fix secondary index queries on COMPACT tables ( CASSANDRA - 13627 ) <nl> diff - - git a / build . xml b / build . xml <nl> index 5eb6572 . . 53c2cea 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 59 , 7 + 59 , 6 @ @ <nl> < property name = " test . classlistfile " value = " testlist . txt " / > <nl> < property name = " benchmark . name " value = " " / > <nl> < property name = " test . methods " value = " " / > <nl> - < property name = " test . runners " value = " 1 " / > <nl> < property name = " test . unit . src " value = " $ { test . dir } / unit " / > <nl> < property name = " test . long . src " value = " $ { test . dir } / long " / > <nl> < property name = " test . burn . src " value = " $ { test . dir } / burn " / > <nl> @ @ - 1625 , 12 + 1624 , 25 @ @ <nl> < scriptdef name = " testparallelhelper " language = " javascript " > <nl> < attribute name = " testdelegate " / > <nl> < ! [ CDATA [ <nl> - var Integer = java . lang . Integer ; <nl> sep = project . getProperty ( " path . separator " ) ; <nl> all = project . getProperty ( " all - test - classes " ) . split ( sep ) ; <nl> - dir = project . getProperty ( " test . unit . src " ) ; <nl> + runners = project . getProperty ( " test . runners " ) <nl> + cores = project . getProperty ( " cores . count " ) <nl> + mem = project . getProperty ( " mem . size " ) <nl> <nl> - numRunners = parseInt ( project . getProperty ( " test . runners " ) ) ; <nl> + numRunners = 1 <nl> + if ( runners ! = null ) / / there ' s test . runners override <nl> + numRunners = parseInt ( runners ) | | 1 ; <nl> + else if ( cores ! = null & & mem ! = null ) / / only if cores and memory size is set <nl> + numRunners = Math . min ( Math . floor ( Math . sqrt ( parseInt ( cores ) | | 1 ) ) , <nl> + Math . floor ( ( parseInt ( mem ) | | 1 ) / ( 4 * 1024 * 1024 * 1024 ) ) ) ; <nl> + <nl> + if ( numRunners < 1 ) <nl> + numRunners = 1 <nl> + <nl> + var echo = project . createTask ( " echo " ) ; <nl> + echo . setMessage ( " Number of test runners : " + numRunners ) ; <nl> + echo . perform ( ) ; <nl> <nl> var p = project . createTask ( ' parallel ' ) ; <nl> p . setThreadCount ( numRunners ) ; <nl> @ @ - 1652 , 7 + 1664 , 42 @ @ <nl> ] ] > <nl> < / scriptdef > <nl> <nl> - < target name = " test " depends = " build - test " description = " Parallel Test Runner " > <nl> + < target name = " get - cores " > <nl> + < property environment = " env " / > <nl> + < ! - - support for Windows - - > <nl> + < condition property = " cores . count " value = " $ { env . NUMBER _ OF _ PROCESSORS } " > <nl> + < os family = " windows " / > <nl> + < / condition > <nl> + < ! - - support for Linux and Solaris ( package SUNWgnu - coreutils is required ) - - > <nl> + < exec executable = " nproc " outputproperty = " cores . count " os = " Linux , SunOS , Solaris " failifexecutionfails = " false " > <nl> + < arg value = " - - all " / > <nl> + < / exec > <nl> + < ! - - support for Mac OS X - - > <nl> + < exec executable = " sysctl " outputproperty = " cores . count " os = " Mac , Mac OS X , Darwin " failifexecutionfails = " false " > <nl> + < arg value = " - n " / > <nl> + < arg value = " hw . ncpu " / > <nl> + < / exec > <nl> + < echo message = " Number of cores : $ { cores . count } " / > <nl> + < / target > <nl> + <nl> + < target name = " get - mem " > <nl> + < condition property = " mem . size " value = " unknown " > <nl> + < os family = " windows " / > <nl> + < / condition > <nl> + < ! - - support for Linux and Solaris ( package SUNWgnu - coreutils is required ) - - > <nl> + < exec executable = " bash " outputproperty = " mem . size " os = " Linux , SunOS , Solaris " failifexecutionfails = " false " > <nl> + < arg value = " - c " / > <nl> + < arg value = " free - b | grep Mem : | awk ' { print $ 2 } ' " / > <nl> + < / exec > <nl> + < ! - - support for Mac OS X - - > <nl> + < exec executable = " sysctl " outputproperty = " mem . size " os = " Mac , Mac OS X , Darwin " failifexecutionfails = " false " > <nl> + < arg value = " - n " / > <nl> + < arg value = " hw . memsize " / > <nl> + < / exec > <nl> + < echo message = " Mem size : $ { mem . size } " / > <nl> + < / target > <nl> + <nl> + < target name = " test " depends = " build - test , get - cores , get - mem " description = " Parallel Test Runner " > <nl> < path id = " all - test - classes - path " > <nl> < fileset dir = " $ { test . unit . src } " includes = " * * / $ { test . name } . java " / > <nl> < / path > <nl> @ @ - 1933 , 4 + 1980 , 5 @ @ <nl> file = " $ { build . dir } / $ { final . name } - javadoc . jar " <nl> classifier = " javadoc " / > <nl> < / target > <nl> + <nl> < / project > <nl> diff - - git a / circle . yml b / circle . yml <nl> index 9d31277 . . f4801b7 100644 <nl> - - - a / circle . yml <nl> + + + b / circle . yml <nl> @ @ - 7 , 7 + 7 , 7 @ @ test : <nl> - sudo apt - get update ; sudo apt - get install wamerican : <nl> parallel : true <nl> override : <nl> - - case $ CIRCLE _ NODE _ INDEX in 0 ) ant eclipse - warnings ; ant test ; ; 1 ) ant long - test ; ; 2 ) ant test - compression ; ; 3 ) ant stress - test ; ; esac : <nl> + - case $ CIRCLE _ NODE _ INDEX in 0 ) ant eclipse - warnings ; ant test - Dtest . runners = 1 ; ; 1 ) ant long - test ; ; 2 ) ant test - compression ; ; 3 ) ant stress - test ; ; esac : <nl> parallel : true <nl> <nl> post :
NEAREST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 5ea91e1 . . bffb6fb 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 7 , 6 + 7 , 7 @ @ <nl> < property name = " build . src " value = " $ { basedir } / src " / > <nl> < property name = " build . lib " value = " $ { basedir } / lib " / > <nl> < property name = " build . dir " value = " $ { basedir } / build " / > <nl> + < property name = " build . test . dir " value = " $ { build . dir } / test " / > <nl> < property name = " build . classes " value = " $ { build . dir } / classes " / > <nl> < property name = " javadoc . dir " value = " $ { build . dir } / javadoc " / > <nl> < property name = " test . dir " value = " $ { basedir } / test " / > <nl> @ @ - 106 , 10 + 107 , 12 @ @ <nl> < taskdef resource = " testngtasks " classpath = " lib / testng - 5 . 8 - jdk15 . jar " / > <nl> < target name = " test " depends = " build - test " > <nl> < echo message = " running tests " / > <nl> + < mkdir dir = " $ { build . test . dir } / commitlog " / > <nl> + < mkdir dir = " $ { build . test . dir } / cassandra " / > <nl> < testng outputDir = " $ { build . dir } / test / output " <nl> haltOnFailure = " true " <nl> verbose = " 2 " > <nl> - < jvmarg value = " - Dstorage - config = conf " / > <nl> + < jvmarg value = " - Dstorage - config = test / conf " / > <nl> < classpath > <nl> < path refid = " cassandra . classpath " / > <nl> < pathelement location = " $ { test . classes } " / > <nl> diff - - git a / test / conf / storage - conf . xml b / test / conf / storage - conf . xml <nl> new file mode 100644 <nl> index 0000000 . . 81479f1 <nl> - - - / dev / null <nl> + + + b / test / conf / storage - conf . xml <nl> @ @ - 0 , 0 + 1 , 49 @ @ <nl> + < Storage > <nl> + < ClusterName > Test Cluster < / ClusterName > <nl> + < ! - - any IPartitioner may be used , including your own <nl> + as long as it is on the classpath . Out of the box , <nl> + Cassandra provides <nl> + org . apache . cassandra . dht . RandomPartitioner and <nl> + org . apache . cassandra . dht . OrderPreservingPartitioner . <nl> + Range queries require using OrderPreservingPartitioner or a subclass . - - > <nl> + < Partitioner > org . apache . cassandra . dht . RandomPartitioner < / Partitioner > <nl> + < RackAware > false < / RackAware > <nl> + < MulticastChannel > 230 . 0 . 0 . 1 < / MulticastChannel > <nl> + < ReplicationFactor > 1 < / ReplicationFactor > <nl> + < ZookeeperAddress > 127 . 0 . 0 . 1 < / ZookeeperAddress > <nl> + < RpcTimeoutInMillis > 5000 < / RpcTimeoutInMillis > <nl> + < JobTrackerHost > tdsearch001 . sf2p . facebook . com < / JobTrackerHost > <nl> + < JobJarFileLocation > C : \ Engagements \ Cassandra - Nexus < / JobJarFileLocation > <nl> + < StoragePort > 7000 < / StoragePort > <nl> + < ControlPort > 7001 < / ControlPort > <nl> + < ThriftPort > 7001 < / ThriftPort > <nl> + < ColumnIndexSizeInKB > 256 < / ColumnIndexSizeInKB > <nl> + < HttpPort > 7002 < / HttpPort > <nl> + < MetadataDirectory > build / test / cassandra / system < / MetadataDirectory > <nl> + < CommitLogDirectory > build / test / commitlog < / CommitLogDirectory > <nl> + < CommitLogRotationThresholdInMB > 128 < / CommitLogRotationThresholdInMB > <nl> + < GangliaServers > <nl> + < GangliaServer > 127 . 0 . 0 . 1 : 12000 < / GangliaServer > <nl> + < / GangliaServers > <nl> + < DataFileDirectories > <nl> + < DataFileDirectory > build / test / cassandra / data < / DataFileDirectory > <nl> + < / DataFileDirectories > <nl> + < CalloutLocation > build / test / cassandra / callouts < / CalloutLocation > <nl> + < BootstrapFileDirectory > build / test / cassandra / bootstrap < / BootstrapFileDirectory > <nl> + < StagingFileDirectory > build / test / cassandra / staging < / StagingFileDirectory > <nl> + < CommitLogFastSync > false < / CommitLogFastSync > <nl> + < Tables > <nl> + < Table Name = " Table1 " > <nl> + 	 < ColumnFamily Index = " Name " Name = " Standard1 " / > <nl> + 	 < ColumnFamily Index = " Name " Name = " Standard2 " / > <nl> + 	 < ColumnFamily Index = " Time " Name = " StandardByTime1 " / > <nl> + 	 < ColumnFamily Index = " Time " Name = " StandardByTime2 " / > <nl> + 	 < ColumnFamily ColumnType = " Super " Index = " Name " Name = " Super1 " / > <nl> + 	 < ColumnFamily ColumnType = " Super " Index = " Name " Name = " Super2 " / > <nl> + < / Table > <nl> + < / Tables > <nl> + < Seeds > <nl> + < ! - - Add names of hosts that are deemed contact points - - > <nl> + < Seed > 127 . 0 . 0 . 1 < / Seed > <nl> + < / Seeds > <nl> + < / Storage >

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 8095e25 . . ce2324d 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 15 
 + * Set test . runners based on cores and memory size ( CASSANDRA - 13078 ) 
 * Allow different NUMACTL _ ARGS to be passed in ( CASSANDRA - 13557 ) 
 * Allow native function calls in CQLSSTableWriter ( CASSANDRA - 12606 ) 
 * Fix secondary index queries on COMPACT tables ( CASSANDRA - 13627 ) 
 diff - - git a / build . xml b / build . xml 
 index 5eb6572 . . 53c2cea 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 59 , 7 + 59 , 6 @ @ 
 < property name = " test . classlistfile " value = " testlist . txt " / > 
 < property name = " benchmark . name " value = " " / > 
 < property name = " test . methods " value = " " / > 
 - < property name = " test . runners " value = " 1 " / > 
 < property name = " test . unit . src " value = " $ { test . dir } / unit " / > 
 < property name = " test . long . src " value = " $ { test . dir } / long " / > 
 < property name = " test . burn . src " value = " $ { test . dir } / burn " / > 
 @ @ - 1625 , 12 + 1624 , 25 @ @ 
 < scriptdef name = " testparallelhelper " language = " javascript " > 
 < attribute name = " testdelegate " / > 
 < ! [ CDATA [ 
 - var Integer = java . lang . Integer ; 
 sep = project . getProperty ( " path . separator " ) ; 
 all = project . getProperty ( " all - test - classes " ) . split ( sep ) ; 
 - dir = project . getProperty ( " test . unit . src " ) ; 
 + runners = project . getProperty ( " test . runners " ) 
 + cores = project . getProperty ( " cores . count " ) 
 + mem = project . getProperty ( " mem . size " ) 
 
 - numRunners = parseInt ( project . getProperty ( " test . runners " ) ) ; 
 + numRunners = 1 
 + if ( runners ! = null ) / / there ' s test . runners override 
 + numRunners = parseInt ( runners ) | | 1 ; 
 + else if ( cores ! = null & & mem ! = null ) / / only if cores and memory size is set 
 + numRunners = Math . min ( Math . floor ( Math . sqrt ( parseInt ( cores ) | | 1 ) ) , 
 + Math . floor ( ( parseInt ( mem ) | | 1 ) / ( 4 * 1024 * 1024 * 1024 ) ) ) ; 
 + 
 + if ( numRunners < 1 ) 
 + numRunners = 1 
 + 
 + var echo = project . createTask ( " echo " ) ; 
 + echo . setMessage ( " Number of test runners : " + numRunners ) ; 
 + echo . perform ( ) ; 
 
 var p = project . createTask ( ' parallel ' ) ; 
 p . setThreadCount ( numRunners ) ; 
 @ @ - 1652 , 7 + 1664 , 42 @ @ 
 ] ] > 
 < / scriptdef > 
 
 - < target name = " test " depends = " build - test " description = " Parallel Test Runner " > 
 + < target name = " get - cores " > 
 + < property environment = " env " / > 
 + < ! - - support for Windows - - > 
 + < condition property = " cores . count " value = " $ { env . NUMBER _ OF _ PROCESSORS } " > 
 + < os family = " windows " / > 
 + < / condition > 
 + < ! - - support for Linux and Solaris ( package SUNWgnu - coreutils is required ) - - > 
 + < exec executable = " nproc " outputproperty = " cores . count " os = " Linux , SunOS , Solaris " failifexecutionfails = " false " > 
 + < arg value = " - - all " / > 
 + < / exec > 
 + < ! - - support for Mac OS X - - > 
 + < exec executable = " sysctl " outputproperty = " cores . count " os = " Mac , Mac OS X , Darwin " failifexecutionfails = " false " > 
 + < arg value = " - n " / > 
 + < arg value = " hw . ncpu " / > 
 + < / exec > 
 + < echo message = " Number of cores : $ { cores . count } " / > 
 + < / target > 
 + 
 + < target name = " get - mem " > 
 + < condition property = " mem . size " value = " unknown " > 
 + < os family = " windows " / > 
 + < / condition > 
 + < ! - - support for Linux and Solaris ( package SUNWgnu - coreutils is required ) - - > 
 + < exec executable = " bash " outputproperty = " mem . size " os = " Linux , SunOS , Solaris " failifexecutionfails = " false " > 
 + < arg value = " - c " / > 
 + < arg value = " free - b | grep Mem : | awk ' { print $ 2 } ' " / > 
 + < / exec > 
 + < ! - - support for Mac OS X - - > 
 + < exec executable = " sysctl " outputproperty = " mem . size " os = " Mac , Mac OS X , Darwin " failifexecutionfails = " false " > 
 + < arg value = " - n " / > 
 + < arg value = " hw . memsize " / > 
 + < / exec > 
 + < echo message = " Mem size : $ { mem . size } " / > 
 + < / target > 
 + 
 + < target name = " test " depends = " build - test , get - cores , get - mem " description = " Parallel Test Runner " > 
 < path id = " all - test - classes - path " > 
 < fileset dir = " $ { test . unit . src } " includes = " * * / $ { test . name } . java " / > 
 < / path > 
 @ @ - 1933 , 4 + 1980 , 5 @ @ 
 file = " $ { build . dir } / $ { final . name } - javadoc . jar " 
 classifier = " javadoc " / > 
 < / target > 
 + 
 < / project > 
 diff - - git a / circle . yml b / circle . yml 
 index 9d31277 . . f4801b7 100644 
 - - - a / circle . yml 
 + + + b / circle . yml 
 @ @ - 7 , 7 + 7 , 7 @ @ test : 
 - sudo apt - get update ; sudo apt - get install wamerican : 
 parallel : true 
 override : 
 - - case $ CIRCLE _ NODE _ INDEX in 0 ) ant eclipse - warnings ; ant test ; ; 1 ) ant long - test ; ; 2 ) ant test - compression ; ; 3 ) ant stress - test ; ; esac : 
 + - case $ CIRCLE _ NODE _ INDEX in 0 ) ant eclipse - warnings ; ant test - Dtest . runners = 1 ; ; 1 ) ant long - test ; ; 2 ) ant test - compression ; ; 3 ) ant stress - test ; ; esac : 
 parallel : true 
 
 post :

NEAREST DIFF:
diff - - git a / build . xml b / build . xml 
 index 5ea91e1 . . bffb6fb 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 7 , 6 + 7 , 7 @ @ 
 < property name = " build . src " value = " $ { basedir } / src " / > 
 < property name = " build . lib " value = " $ { basedir } / lib " / > 
 < property name = " build . dir " value = " $ { basedir } / build " / > 
 + < property name = " build . test . dir " value = " $ { build . dir } / test " / > 
 < property name = " build . classes " value = " $ { build . dir } / classes " / > 
 < property name = " javadoc . dir " value = " $ { build . dir } / javadoc " / > 
 < property name = " test . dir " value = " $ { basedir } / test " / > 
 @ @ - 106 , 10 + 107 , 12 @ @ 
 < taskdef resource = " testngtasks " classpath = " lib / testng - 5 . 8 - jdk15 . jar " / > 
 < target name = " test " depends = " build - test " > 
 < echo message = " running tests " / > 
 + < mkdir dir = " $ { build . test . dir } / commitlog " / > 
 + < mkdir dir = " $ { build . test . dir } / cassandra " / > 
 < testng outputDir = " $ { build . dir } / test / output " 
 haltOnFailure = " true " 
 verbose = " 2 " > 
 - < jvmarg value = " - Dstorage - config = conf " / > 
 + < jvmarg value = " - Dstorage - config = test / conf " / > 
 < classpath > 
 < path refid = " cassandra . classpath " / > 
 < pathelement location = " $ { test . classes } " / > 
 diff - - git a / test / conf / storage - conf . xml b / test / conf / storage - conf . xml 
 new file mode 100644 
 index 0000000 . . 81479f1 
 - - - / dev / null 
 + + + b / test / conf / storage - conf . xml 
 @ @ - 0 , 0 + 1 , 49 @ @ 
 + < Storage > 
 + < ClusterName > Test Cluster < / ClusterName > 
 + < ! - - any IPartitioner may be used , including your own 
 + as long as it is on the classpath . Out of the box , 
 + Cassandra provides 
 + org . apache . cassandra . dht . RandomPartitioner and 
 + org . apache . cassandra . dht . OrderPreservingPartitioner . 
 + Range queries require using OrderPreservingPartitioner or a subclass . - - > 
 + < Partitioner > org . apache . cassandra . dht . RandomPartitioner < / Partitioner > 
 + < RackAware > false < / RackAware > 
 + < MulticastChannel > 230 . 0 . 0 . 1 < / MulticastChannel > 
 + < ReplicationFactor > 1 < / ReplicationFactor > 
 + < ZookeeperAddress > 127 . 0 . 0 . 1 < / ZookeeperAddress > 
 + < RpcTimeoutInMillis > 5000 < / RpcTimeoutInMillis > 
 + < JobTrackerHost > tdsearch001 . sf2p . facebook . com < / JobTrackerHost > 
 + < JobJarFileLocation > C : \ Engagements \ Cassandra - Nexus < / JobJarFileLocation > 
 + < StoragePort > 7000 < / StoragePort > 
 + < ControlPort > 7001 < / ControlPort > 
 + < ThriftPort > 7001 < / ThriftPort > 
 + < ColumnIndexSizeInKB > 256 < / ColumnIndexSizeInKB > 
 + < HttpPort > 7002 < / HttpPort > 
 + < MetadataDirectory > build / test / cassandra / system < / MetadataDirectory > 
 + < CommitLogDirectory > build / test / commitlog < / CommitLogDirectory > 
 + < CommitLogRotationThresholdInMB > 128 < / CommitLogRotationThresholdInMB > 
 + < GangliaServers > 
 + < GangliaServer > 127 . 0 . 0 . 1 : 12000 < / GangliaServer > 
 + < / GangliaServers > 
 + < DataFileDirectories > 
 + < DataFileDirectory > build / test / cassandra / data < / DataFileDirectory > 
 + < / DataFileDirectories > 
 + < CalloutLocation > build / test / cassandra / callouts < / CalloutLocation > 
 + < BootstrapFileDirectory > build / test / cassandra / bootstrap < / BootstrapFileDirectory > 
 + < StagingFileDirectory > build / test / cassandra / staging < / StagingFileDirectory > 
 + < CommitLogFastSync > false < / CommitLogFastSync > 
 + < Tables > 
 + < Table Name = " Table1 " > 
 + 	 < ColumnFamily Index = " Name " Name = " Standard1 " / > 
 + 	 < ColumnFamily Index = " Name " Name = " Standard2 " / > 
 + 	 < ColumnFamily Index = " Time " Name = " StandardByTime1 " / > 
 + 	 < ColumnFamily Index = " Time " Name = " StandardByTime2 " / > 
 + 	 < ColumnFamily ColumnType = " Super " Index = " Name " Name = " Super1 " / > 
 + 	 < ColumnFamily ColumnType = " Super " Index = " Name " Name = " Super2 " / > 
 + < / Table > 
 + < / Tables > 
 + < Seeds > 
 + < ! - - Add names of hosts that are deemed contact points - - > 
 + < Seed > 127 . 0 . 0 . 1 < / Seed > 
 + < / Seeds > 
 + < / Storage >
