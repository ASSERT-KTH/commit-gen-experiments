BLEU SCORE: 0.020980574531482755

TEST MSG: Secondary indexes which aren ' t registered are not initialized
GENERATED MSG: Give more control over building to 2i impls

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 9b81b6e . . dd7949e 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 <nl> + * Skip initialization of non - registered 2i instances , remove Index : : getIndexName ( CASSANDRA - 10595 ) <nl> * Fix batches on multiple tables ( CASSANDRA - 10554 ) <nl> * Ensure compaction options are validated when updating KeyspaceMetadata ( CASSANDRA - 10569 ) <nl> * Flatten Iterator Transformation Hierarchy ( CASSANDRA - 9975 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / ReadCommand . java b / src / java / org / apache / cassandra / db / ReadCommand . java <nl> index 4d9b65b . . 2eb1d1d 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ReadCommand . java <nl> + + + b / src / java / org / apache / cassandra / db / ReadCommand . java <nl> @ @ - 337 , 7 + 337 , 7 @ @ public abstract class ReadCommand implements ReadQuery <nl> Index . Searcher searcher = index = = null ? null : index . searcherFor ( this ) ; <nl> <nl> if ( index ! = null ) <nl> - Tracing . trace ( " Executing read on { } . { } using index { } " , cfs . metadata . ksName , cfs . metadata . cfName , index . getIndexName ( ) ) ; <nl> + Tracing . trace ( " Executing read on { } . { } using index { } " , cfs . metadata . ksName , cfs . metadata . cfName , index . getIndexMetadata ( ) . name ) ; <nl> <nl> UnfilteredPartitionIterator resultIterator = searcher = = null <nl> ? queryStorage ( cfs , orderGroup ) <nl> diff - - git a / src / java / org / apache / cassandra / index / Index . java b / src / java / org / apache / cassandra / index / Index . java <nl> index 3ceec13 . . 0f4ecbd 100644 <nl> - - - a / src / java / org / apache / cassandra / index / Index . java <nl> + + + b / src / java / org / apache / cassandra / index / Index . java <nl> @ @ - 144 , 12 + 144 , 6 @ @ public interface Index <nl> public void register ( IndexRegistry registry ) ; <nl> <nl> / * * <nl> - * Return an identifier for the index . This should be unique across all indexes on a given base table <nl> - * @ return the name of the index <nl> - * / <nl> - public String getIndexName ( ) ; <nl> - <nl> - / * * <nl> * If the index implementation uses a local table to store its index data this method should return a <nl> * handle to it . If not , an empty Optional should be returned . Typically , this is useful for the built - in <nl> * Index implementations . <nl> diff - - git a / src / java / org / apache / cassandra / index / SecondaryIndexManager . java b / src / java / org / apache / cassandra / index / SecondaryIndexManager . java <nl> index 87b47d9 . . 7d866df 100644 <nl> - - - a / src / java / org / apache / cassandra / index / SecondaryIndexManager . java <nl> + + + b / src / java / org / apache / cassandra / index / SecondaryIndexManager . java <nl> @ @ - 159 , 7 + 159 , 10 @ @ public class SecondaryIndexManager implements IndexRegistry <nl> { <nl> Index index = createInstance ( indexDef ) ; <nl> index . register ( this ) ; <nl> - final Callable < ? > initialBuildTask = index . getInitializationTask ( ) ; <nl> + / / if the index didn ' t register itself , we can probably assume that no initialization needs to happen <nl> + final Callable < ? > initialBuildTask = indexes . containsKey ( indexDef . name ) <nl> + ? index . getInitializationTask ( ) <nl> + : null ; <nl> return initialBuildTask = = null <nl> ? Futures . immediateFuture ( null ) <nl> : asyncExecutor . submit ( initialBuildTask ) ; <nl> @ @ - 223 , 7 + 226 , 7 @ @ public class SecondaryIndexManager implements IndexRegistry <nl> public void rebuildIndexesBlocking ( Collection < SSTableReader > sstables , Set < String > indexNames ) <nl> { <nl> Set < Index > toRebuild = indexes . values ( ) . stream ( ) <nl> - . filter ( index - > indexNames . contains ( index . getIndexName ( ) ) ) <nl> + . filter ( index - > indexNames . contains ( index . getIndexMetadata ( ) . name ) ) <nl> . filter ( Index : : shouldBuildBlocking ) <nl> . collect ( Collectors . toSet ( ) ) ; <nl> if ( toRebuild . isEmpty ( ) ) <nl> @ @ - 232 , 11 + 235 , 11 @ @ public class SecondaryIndexManager implements IndexRegistry <nl> return ; <nl> } <nl> <nl> - toRebuild . forEach ( indexer - > markIndexRemoved ( indexer . getIndexName ( ) ) ) ; <nl> + toRebuild . forEach ( indexer - > markIndexRemoved ( indexer . getIndexMetadata ( ) . name ) ) ; <nl> <nl> buildIndexesBlocking ( sstables , toRebuild ) ; <nl> <nl> - toRebuild . forEach ( indexer - > markIndexBuilt ( indexer . getIndexName ( ) ) ) ; <nl> + toRebuild . forEach ( indexer - > markIndexBuilt ( indexer . getIndexMetadata ( ) . name ) ) ; <nl> } <nl> <nl> public void buildAllIndexesBlocking ( Collection < SSTableReader > sstables ) <nl> @ @ - 256 , 7 + 259 , 7 @ @ public class SecondaryIndexManager implements IndexRegistry <nl> Refs < SSTableReader > sstables = viewFragment . refs ) <nl> { <nl> buildIndexesBlocking ( sstables , Collections . singleton ( index ) ) ; <nl> - markIndexBuilt ( index . getIndexName ( ) ) ; <nl> + markIndexBuilt ( index . getIndexMetadata ( ) . name ) ; <nl> } <nl> } <nl> } <nl> @ @ - 338 , 7 + 341 , 7 @ @ public class SecondaryIndexManager implements IndexRegistry <nl> return ; <nl> <nl> logger . info ( " Submitting index build of { } for data in { } " , <nl> - indexes . stream ( ) . map ( Index : : getIndexName ) . collect ( Collectors . joining ( " , " ) ) , <nl> + indexes . stream ( ) . map ( i - > i . getIndexMetadata ( ) . name ) . collect ( Collectors . joining ( " , " ) ) , <nl> sstables . stream ( ) . map ( SSTableReader : : toString ) . collect ( Collectors . joining ( " , " ) ) ) ; <nl> <nl> SecondaryIndexBuilder builder = new SecondaryIndexBuilder ( baseCfs , <nl> @ @ - 349 , 7 + 352 , 7 @ @ public class SecondaryIndexManager implements IndexRegistry <nl> <nl> flushIndexesBlocking ( indexes ) ; <nl> logger . info ( " Index build of { } complete " , <nl> - indexes . stream ( ) . map ( Index : : getIndexName ) . collect ( Collectors . joining ( " , " ) ) ) ; <nl> + indexes . stream ( ) . map ( i - > i . getIndexMetadata ( ) . name ) . collect ( Collectors . joining ( " , " ) ) ) ; <nl> } <nl> <nl> private void markIndexBuilt ( String indexName ) <nl> @ @ - 461 , 7 + 464 , 7 @ @ public class SecondaryIndexManager implements IndexRegistry <nl> { <nl> Set < String > allIndexNames = new HashSet < > ( ) ; <nl> indexes . values ( ) . stream ( ) <nl> - . map ( Index : : getIndexName ) <nl> + . map ( i - > i . getIndexMetadata ( ) . name ) <nl> . forEach ( allIndexNames : : add ) ; <nl> return SystemKeyspace . getBuiltIndexes ( baseCfs . keyspace . getName ( ) , allIndexNames ) ; <nl> } <nl> @ @ - 618 , 9 + 621 , 9 @ @ public class SecondaryIndexManager implements IndexRegistry <nl> if ( Tracing . isTracing ( ) ) <nl> { <nl> Tracing . trace ( " Index mean cardinalities are { } . Scanning with { } . " , <nl> - searchableIndexes . stream ( ) . map ( i - > i . getIndexName ( ) + ' : ' + i . getEstimatedResultRows ( ) ) <nl> + searchableIndexes . stream ( ) . map ( i - > i . getIndexMetadata ( ) . name + ' : ' + i . getEstimatedResultRows ( ) ) <nl> . collect ( Collectors . joining ( " , " ) ) , <nl> - selected . getIndexName ( ) ) ; <nl> + selected . getIndexMetadata ( ) . name ) ; <nl> } <nl> return selected ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / index / internal / CassandraIndex . java b / src / java / org / apache / cassandra / index / internal / CassandraIndex . java <nl> index 93f5d61 . . 7b9d18f 100644 <nl> - - - a / src / java / org / apache / cassandra / index / internal / CassandraIndex . java <nl> + + + b / src / java / org / apache / cassandra / index / internal / CassandraIndex . java <nl> @ @ - 160 , 11 + 160 , 6 @ @ public abstract class CassandraIndex implements Index <nl> return metadata ; <nl> } <nl> <nl> - public String getIndexName ( ) <nl> - { <nl> - return metadata . name ; <nl> - } <nl> - <nl> public Optional < ColumnFamilyStore > getBackingTable ( ) <nl> { <nl> return indexCfs = = null ? Optional . empty ( ) : Optional . of ( indexCfs ) ; <nl> @ @ - 583 , 7 + 578 , 7 @ @ public abstract class CassandraIndex implements Index <nl> throw new InvalidRequestException ( String . format ( <nl> " Cannot index value of size % d for index % s on % s . % s ( % s ) ( maximum allowed size = % d ) " , <nl> value . remaining ( ) , <nl> - getIndexName ( ) , <nl> + metadata . name , <nl> baseCfs . metadata . ksName , <nl> baseCfs . metadata . cfName , <nl> indexedColumn . name . toString ( ) , <nl> @ @ - 634 , 17 + 629 , 17 @ @ public abstract class CassandraIndex implements Index <nl> <nl> private boolean isBuilt ( ) <nl> { <nl> - return SystemKeyspace . isIndexBuilt ( baseCfs . keyspace . getName ( ) , getIndexName ( ) ) ; <nl> + return SystemKeyspace . isIndexBuilt ( baseCfs . keyspace . getName ( ) , metadata . name ) ; <nl> } <nl> <nl> private void markBuilt ( ) <nl> { <nl> - SystemKeyspace . setIndexBuilt ( baseCfs . keyspace . getName ( ) , getIndexName ( ) ) ; <nl> + SystemKeyspace . setIndexBuilt ( baseCfs . keyspace . getName ( ) , metadata . name ) ; <nl> } <nl> <nl> private void markRemoved ( ) <nl> { <nl> - SystemKeyspace . setIndexRemoved ( baseCfs . keyspace . getName ( ) , getIndexName ( ) ) ; <nl> + SystemKeyspace . setIndexRemoved ( baseCfs . keyspace . getName ( ) , metadata . name ) ; <nl> } <nl> <nl> private boolean isPrimaryKeyIndex ( ) <nl> @ @ - 672 , 13 + 667 , 13 @ @ public abstract class CassandraIndex implements Index <nl> logger . info ( " No SSTable data for { } . { } to build index { } from , marking empty index as built " , <nl> baseCfs . metadata . ksName , <nl> baseCfs . metadata . cfName , <nl> - getIndexName ( ) ) ; <nl> + metadata . name ) ; <nl> markBuilt ( ) ; <nl> return ; <nl> } <nl> <nl> logger . info ( " Submitting index build of { } for data in { } " , <nl> - getIndexName ( ) , <nl> + metadata . name , <nl> getSSTableNames ( sstables ) ) ; <nl> <nl> SecondaryIndexBuilder builder = new SecondaryIndexBuilder ( baseCfs , <nl> @ @ - 689 , 7 + 684 , 7 @ @ public abstract class CassandraIndex implements Index <nl> indexCfs . forceBlockingFlush ( ) ; <nl> markBuilt ( ) ; <nl> } <nl> - logger . info ( " Index build of { } complete " , getIndexName ( ) ) ; <nl> + logger . info ( " Index build of { } complete " , metadata . name ) ; <nl> } <nl> <nl> private static String getSSTableNames ( Collection < SSTableReader > sstables ) <nl> diff - - git a / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java b / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java <nl> index 95f38c1 . . a6ee48f 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java <nl> @ @ - 480 , 7 + 480 , 7 @ @ public class RangeTombstoneTest <nl> <nl> StubIndex index = ( StubIndex ) cfs . indexManager . listIndexes ( ) <nl> . stream ( ) <nl> - . filter ( i - > " test _ index " . equals ( i . getIndexName ( ) ) ) <nl> + . filter ( i - > " test _ index " . equals ( i . getIndexMetadata ( ) . name ) ) <nl> . findFirst ( ) <nl> . orElseThrow ( ( ) - > new RuntimeException ( new AssertionError ( " Index not found " ) ) ) ; <nl> index . reset ( ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / index / StubIndex . java b / test / unit / org / apache / cassandra / index / StubIndex . java <nl> index 05c860a . . 834ff87 100644 <nl> - - - a / test / unit / org / apache / cassandra / index / StubIndex . java <nl> + + + b / test / unit / org / apache / cassandra / index / StubIndex . java <nl> @ @ - 151 , 11 + 151 , 6 @ @ public class StubIndex implements Index <nl> return indexMetadata ; <nl> } <nl> <nl> - public String getIndexName ( ) <nl> - { <nl> - return indexMetadata ! = null ? indexMetadata . name : " default _ test _ index _ name " ; <nl> - } <nl> - <nl> public void register ( IndexRegistry registry ) { <nl> registry . registerIndex ( this ) ; <nl> } <nl> diff - - git a / test / unit / org / apache / cassandra / index / internal / CustomCassandraIndex . java b / test / unit / org / apache / cassandra / index / internal / CustomCassandraIndex . java <nl> index cbcf069 . . 2dc9535 100644 <nl> - - - a / test / unit / org / apache / cassandra / index / internal / CustomCassandraIndex . java <nl> + + + b / test / unit / org / apache / cassandra / index / internal / CustomCassandraIndex . java <nl> @ @ - 105 , 12 + 105 , 6 @ @ public class CustomCassandraIndex implements Index <nl> return metadata ; <nl> } <nl> <nl> - public String getIndexName ( ) <nl> - { <nl> - / / should return metadata . name , see CASSANDRA - 10127 <nl> - return indexCfs . name ; <nl> - } <nl> - <nl> public Optional < ColumnFamilyStore > getBackingTable ( ) <nl> { <nl> return indexCfs = = null ? Optional . empty ( ) : Optional . of ( indexCfs ) ; <nl> @ @ - 564 , 7 + 558 , 7 @ @ public class CustomCassandraIndex implements Index <nl> throw new InvalidRequestException ( String . format ( <nl> " Cannot index value of size % d for index % s on % s . % s ( % s ) ( maximum allowed size = % d ) " , <nl> value . remaining ( ) , <nl> - getIndexName ( ) , <nl> + metadata . name , <nl> baseCfs . metadata . ksName , <nl> baseCfs . metadata . cfName , <nl> indexedColumn . name . toString ( ) , <nl> @ @ - 615 , 17 + 609 , 17 @ @ public class CustomCassandraIndex implements Index <nl> <nl> private boolean isBuilt ( ) <nl> { <nl> - return SystemKeyspace . isIndexBuilt ( baseCfs . keyspace . getName ( ) , getIndexName ( ) ) ; <nl> + return SystemKeyspace . isIndexBuilt ( baseCfs . keyspace . getName ( ) , metadata . name ) ; <nl> } <nl> <nl> private void markBuilt ( ) <nl> { <nl> - SystemKeyspace . setIndexBuilt ( baseCfs . keyspace . getName ( ) , getIndexName ( ) ) ; <nl> + SystemKeyspace . setIndexBuilt ( baseCfs . keyspace . getName ( ) , metadata . name ) ; <nl> } <nl> <nl> private void markRemoved ( ) <nl> { <nl> - SystemKeyspace . setIndexRemoved ( baseCfs . keyspace . getName ( ) , getIndexName ( ) ) ; <nl> + SystemKeyspace . setIndexRemoved ( baseCfs . keyspace . getName ( ) , metadata . name ) ; <nl> } <nl> <nl> private boolean isPrimaryKeyIndex ( ) <nl> @ @ - 653 , 13 + 647 , 13 @ @ public class CustomCassandraIndex implements Index <nl> logger . info ( " No SSTable data for { } . { } to build index { } from , marking empty index as built " , <nl> baseCfs . metadata . ksName , <nl> baseCfs . metadata . cfName , <nl> - getIndexName ( ) ) ; <nl> + metadata . name ) ; <nl> markBuilt ( ) ; <nl> return ; <nl> } <nl> <nl> logger . info ( " Submitting index build of { } for data in { } " , <nl> - getIndexName ( ) , <nl> + metadata . name , <nl> getSSTableNames ( sstables ) ) ; <nl> <nl> SecondaryIndexBuilder builder = new SecondaryIndexBuilder ( baseCfs , <nl> @ @ - 670 , 7 + 664 , 7 @ @ public class CustomCassandraIndex implements Index <nl> indexCfs . forceBlockingFlush ( ) ; <nl> markBuilt ( ) ; <nl> } <nl> - logger . info ( " Index build of { } complete " , getIndexName ( ) ) ; <nl> + logger . info ( " Index build of { } complete " , metadata . name ) ; <nl> } <nl> <nl> private static String getSSTableNames ( Collection < SSTableReader > sstables )
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 9b81b6e . . dd7949e 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 
 + * Skip initialization of non - registered 2i instances , remove Index : : getIndexName ( CASSANDRA - 10595 ) 
 * Fix batches on multiple tables ( CASSANDRA - 10554 ) 
 * Ensure compaction options are validated when updating KeyspaceMetadata ( CASSANDRA - 10569 ) 
 * Flatten Iterator Transformation Hierarchy ( CASSANDRA - 9975 ) 
 diff - - git a / src / java / org / apache / cassandra / db / ReadCommand . java b / src / java / org / apache / cassandra / db / ReadCommand . java 
 index 4d9b65b . . 2eb1d1d 100644 
 - - - a / src / java / org / apache / cassandra / db / ReadCommand . java 
 + + + b / src / java / org / apache / cassandra / db / ReadCommand . java 
 @ @ - 337 , 7 + 337 , 7 @ @ public abstract class ReadCommand implements ReadQuery 
 Index . Searcher searcher = index = = null ? null : index . searcherFor ( this ) ; 
 
 if ( index ! = null ) 
 - Tracing . trace ( " Executing read on { } . { } using index { } " , cfs . metadata . ksName , cfs . metadata . cfName , index . getIndexName ( ) ) ; 
 + Tracing . trace ( " Executing read on { } . { } using index { } " , cfs . metadata . ksName , cfs . metadata . cfName , index . getIndexMetadata ( ) . name ) ; 
 
 UnfilteredPartitionIterator resultIterator = searcher = = null 
 ? queryStorage ( cfs , orderGroup ) 
 diff - - git a / src / java / org / apache / cassandra / index / Index . java b / src / java / org / apache / cassandra / index / Index . java 
 index 3ceec13 . . 0f4ecbd 100644 
 - - - a / src / java / org / apache / cassandra / index / Index . java 
 + + + b / src / java / org / apache / cassandra / index / Index . java 
 @ @ - 144 , 12 + 144 , 6 @ @ public interface Index 
 public void register ( IndexRegistry registry ) ; 
 
 / * * 
 - * Return an identifier for the index . This should be unique across all indexes on a given base table 
 - * @ return the name of the index 
 - * / 
 - public String getIndexName ( ) ; 
 - 
 - / * * 
 * If the index implementation uses a local table to store its index data this method should return a 
 * handle to it . If not , an empty Optional should be returned . Typically , this is useful for the built - in 
 * Index implementations . 
 diff - - git a / src / java / org / apache / cassandra / index / SecondaryIndexManager . java b / src / java / org / apache / cassandra / index / SecondaryIndexManager . java 
 index 87b47d9 . . 7d866df 100644 
 - - - a / src / java / org / apache / cassandra / index / SecondaryIndexManager . java 
 + + + b / src / java / org / apache / cassandra / index / SecondaryIndexManager . java 
 @ @ - 159 , 7 + 159 , 10 @ @ public class SecondaryIndexManager implements IndexRegistry 
 { 
 Index index = createInstance ( indexDef ) ; 
 index . register ( this ) ; 
 - final Callable < ? > initialBuildTask = index . getInitializationTask ( ) ; 
 + / / if the index didn ' t register itself , we can probably assume that no initialization needs to happen 
 + final Callable < ? > initialBuildTask = indexes . containsKey ( indexDef . name ) 
 + ? index . getInitializationTask ( ) 
 + : null ; 
 return initialBuildTask = = null 
 ? Futures . immediateFuture ( null ) 
 : asyncExecutor . submit ( initialBuildTask ) ; 
 @ @ - 223 , 7 + 226 , 7 @ @ public class SecondaryIndexManager implements IndexRegistry 
 public void rebuildIndexesBlocking ( Collection < SSTableReader > sstables , Set < String > indexNames ) 
 { 
 Set < Index > toRebuild = indexes . values ( ) . stream ( ) 
 - . filter ( index - > indexNames . contains ( index . getIndexName ( ) ) ) 
 + . filter ( index - > indexNames . contains ( index . getIndexMetadata ( ) . name ) ) 
 . filter ( Index : : shouldBuildBlocking ) 
 . collect ( Collectors . toSet ( ) ) ; 
 if ( toRebuild . isEmpty ( ) ) 
 @ @ - 232 , 11 + 235 , 11 @ @ public class SecondaryIndexManager implements IndexRegistry 
 return ; 
 } 
 
 - toRebuild . forEach ( indexer - > markIndexRemoved ( indexer . getIndexName ( ) ) ) ; 
 + toRebuild . forEach ( indexer - > markIndexRemoved ( indexer . getIndexMetadata ( ) . name ) ) ; 
 
 buildIndexesBlocking ( sstables , toRebuild ) ; 
 
 - toRebuild . forEach ( indexer - > markIndexBuilt ( indexer . getIndexName ( ) ) ) ; 
 + toRebuild . forEach ( indexer - > markIndexBuilt ( indexer . getIndexMetadata ( ) . name ) ) ; 
 } 
 
 public void buildAllIndexesBlocking ( Collection < SSTableReader > sstables ) 
 @ @ - 256 , 7 + 259 , 7 @ @ public class SecondaryIndexManager implements IndexRegistry 
 Refs < SSTableReader > sstables = viewFragment . refs ) 
 { 
 buildIndexesBlocking ( sstables , Collections . singleton ( index ) ) ; 
 - markIndexBuilt ( index . getIndexName ( ) ) ; 
 + markIndexBuilt ( index . getIndexMetadata ( ) . name ) ; 
 } 
 } 
 } 
 @ @ - 338 , 7 + 341 , 7 @ @ public class SecondaryIndexManager implements IndexRegistry 
 return ; 
 
 logger . info ( " Submitting index build of { } for data in { } " , 
 - indexes . stream ( ) . map ( Index : : getIndexName ) . collect ( Collectors . joining ( " , " ) ) , 
 + indexes . stream ( ) . map ( i - > i . getIndexMetadata ( ) . name ) . collect ( Collectors . joining ( " , " ) ) , 
 sstables . stream ( ) . map ( SSTableReader : : toString ) . collect ( Collectors . joining ( " , " ) ) ) ; 
 
 SecondaryIndexBuilder builder = new SecondaryIndexBuilder ( baseCfs , 
 @ @ - 349 , 7 + 352 , 7 @ @ public class SecondaryIndexManager implements IndexRegistry 
 
 flushIndexesBlocking ( indexes ) ; 
 logger . info ( " Index build of { } complete " , 
 - indexes . stream ( ) . map ( Index : : getIndexName ) . collect ( Collectors . joining ( " , " ) ) ) ; 
 + indexes . stream ( ) . map ( i - > i . getIndexMetadata ( ) . name ) . collect ( Collectors . joining ( " , " ) ) ) ; 
 } 
 
 private void markIndexBuilt ( String indexName ) 
 @ @ - 461 , 7 + 464 , 7 @ @ public class SecondaryIndexManager implements IndexRegistry 
 { 
 Set < String > allIndexNames = new HashSet < > ( ) ; 
 indexes . values ( ) . stream ( ) 
 - . map ( Index : : getIndexName ) 
 + . map ( i - > i . getIndexMetadata ( ) . name ) 
 . forEach ( allIndexNames : : add ) ; 
 return SystemKeyspace . getBuiltIndexes ( baseCfs . keyspace . getName ( ) , allIndexNames ) ; 
 } 
 @ @ - 618 , 9 + 621 , 9 @ @ public class SecondaryIndexManager implements IndexRegistry 
 if ( Tracing . isTracing ( ) ) 
 { 
 Tracing . trace ( " Index mean cardinalities are { } . Scanning with { } . " , 
 - searchableIndexes . stream ( ) . map ( i - > i . getIndexName ( ) + ' : ' + i . getEstimatedResultRows ( ) ) 
 + searchableIndexes . stream ( ) . map ( i - > i . getIndexMetadata ( ) . name + ' : ' + i . getEstimatedResultRows ( ) ) 
 . collect ( Collectors . joining ( " , " ) ) , 
 - selected . getIndexName ( ) ) ; 
 + selected . getIndexMetadata ( ) . name ) ; 
 } 
 return selected ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / index / internal / CassandraIndex . java b / src / java / org / apache / cassandra / index / internal / CassandraIndex . java 
 index 93f5d61 . . 7b9d18f 100644 
 - - - a / src / java / org / apache / cassandra / index / internal / CassandraIndex . java 
 + + + b / src / java / org / apache / cassandra / index / internal / CassandraIndex . java 
 @ @ - 160 , 11 + 160 , 6 @ @ public abstract class CassandraIndex implements Index 
 return metadata ; 
 } 
 
 - public String getIndexName ( ) 
 - { 
 - return metadata . name ; 
 - } 
 - 
 public Optional < ColumnFamilyStore > getBackingTable ( ) 
 { 
 return indexCfs = = null ? Optional . empty ( ) : Optional . of ( indexCfs ) ; 
 @ @ - 583 , 7 + 578 , 7 @ @ public abstract class CassandraIndex implements Index 
 throw new InvalidRequestException ( String . format ( 
 " Cannot index value of size % d for index % s on % s . % s ( % s ) ( maximum allowed size = % d ) " , 
 value . remaining ( ) , 
 - getIndexName ( ) , 
 + metadata . name , 
 baseCfs . metadata . ksName , 
 baseCfs . metadata . cfName , 
 indexedColumn . name . toString ( ) , 
 @ @ - 634 , 17 + 629 , 17 @ @ public abstract class CassandraIndex implements Index 
 
 private boolean isBuilt ( ) 
 { 
 - return SystemKeyspace . isIndexBuilt ( baseCfs . keyspace . getName ( ) , getIndexName ( ) ) ; 
 + return SystemKeyspace . isIndexBuilt ( baseCfs . keyspace . getName ( ) , metadata . name ) ; 
 } 
 
 private void markBuilt ( ) 
 { 
 - SystemKeyspace . setIndexBuilt ( baseCfs . keyspace . getName ( ) , getIndexName ( ) ) ; 
 + SystemKeyspace . setIndexBuilt ( baseCfs . keyspace . getName ( ) , metadata . name ) ; 
 } 
 
 private void markRemoved ( ) 
 { 
 - SystemKeyspace . setIndexRemoved ( baseCfs . keyspace . getName ( ) , getIndexName ( ) ) ; 
 + SystemKeyspace . setIndexRemoved ( baseCfs . keyspace . getName ( ) , metadata . name ) ; 
 } 
 
 private boolean isPrimaryKeyIndex ( ) 
 @ @ - 672 , 13 + 667 , 13 @ @ public abstract class CassandraIndex implements Index 
 logger . info ( " No SSTable data for { } . { } to build index { } from , marking empty index as built " , 
 baseCfs . metadata . ksName , 
 baseCfs . metadata . cfName , 
 - getIndexName ( ) ) ; 
 + metadata . name ) ; 
 markBuilt ( ) ; 
 return ; 
 } 
 
 logger . info ( " Submitting index build of { } for data in { } " , 
 - getIndexName ( ) , 
 + metadata . name , 
 getSSTableNames ( sstables ) ) ; 
 
 SecondaryIndexBuilder builder = new SecondaryIndexBuilder ( baseCfs , 
 @ @ - 689 , 7 + 684 , 7 @ @ public abstract class CassandraIndex implements Index 
 indexCfs . forceBlockingFlush ( ) ; 
 markBuilt ( ) ; 
 } 
 - logger . info ( " Index build of { } complete " , getIndexName ( ) ) ; 
 + logger . info ( " Index build of { } complete " , metadata . name ) ; 
 } 
 
 private static String getSSTableNames ( Collection < SSTableReader > sstables ) 
 diff - - git a / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java b / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java 
 index 95f38c1 . . a6ee48f 100644 
 - - - a / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java 
 + + + b / test / unit / org / apache / cassandra / db / RangeTombstoneTest . java 
 @ @ - 480 , 7 + 480 , 7 @ @ public class RangeTombstoneTest 
 
 StubIndex index = ( StubIndex ) cfs . indexManager . listIndexes ( ) 
 . stream ( ) 
 - . filter ( i - > " test _ index " . equals ( i . getIndexName ( ) ) ) 
 + . filter ( i - > " test _ index " . equals ( i . getIndexMetadata ( ) . name ) ) 
 . findFirst ( ) 
 . orElseThrow ( ( ) - > new RuntimeException ( new AssertionError ( " Index not found " ) ) ) ; 
 index . reset ( ) ; 
 diff - - git a / test / unit / org / apache / cassandra / index / StubIndex . java b / test / unit / org / apache / cassandra / index / StubIndex . java 
 index 05c860a . . 834ff87 100644 
 - - - a / test / unit / org / apache / cassandra / index / StubIndex . java 
 + + + b / test / unit / org / apache / cassandra / index / StubIndex . java 
 @ @ - 151 , 11 + 151 , 6 @ @ public class StubIndex implements Index 
 return indexMetadata ; 
 } 
 
 - public String getIndexName ( ) 
 - { 
 - return indexMetadata ! = null ? indexMetadata . name : " default _ test _ index _ name " ; 
 - } 
 - 
 public void register ( IndexRegistry registry ) { 
 registry . registerIndex ( this ) ; 
 } 
 diff - - git a / test / unit / org / apache / cassandra / index / internal / CustomCassandraIndex . java b / test / unit / org / apache / cassandra / index / internal / CustomCassandraIndex . java 
 index cbcf069 . . 2dc9535 100644 
 - - - a / test / unit / org / apache / cassandra / index / internal / CustomCassandraIndex . java 
 + + + b / test / unit / org / apache / cassandra / index / internal / CustomCassandraIndex . java 
 @ @ - 105 , 12 + 105 , 6 @ @ public class CustomCassandraIndex implements Index 
 return metadata ; 
 } 
 
 - public String getIndexName ( ) 
 - { 
 - / / should return metadata . name , see CASSANDRA - 10127 
 - return indexCfs . name ; 
 - } 
 - 
 public Optional < ColumnFamilyStore > getBackingTable ( ) 
 { 
 return indexCfs = = null ? Optional . empty ( ) : Optional . of ( indexCfs ) ; 
 @ @ - 564 , 7 + 558 , 7 @ @ public class CustomCassandraIndex implements Index 
 throw new InvalidRequestException ( String . format ( 
 " Cannot index value of size % d for index % s on % s . % s ( % s ) ( maximum allowed size = % d ) " , 
 value . remaining ( ) , 
 - getIndexName ( ) , 
 + metadata . name , 
 baseCfs . metadata . ksName , 
 baseCfs . metadata . cfName , 
 indexedColumn . name . toString ( ) , 
 @ @ - 615 , 17 + 609 , 17 @ @ public class CustomCassandraIndex implements Index 
 
 private boolean isBuilt ( ) 
 { 
 - return SystemKeyspace . isIndexBuilt ( baseCfs . keyspace . getName ( ) , getIndexName ( ) ) ; 
 + return SystemKeyspace . isIndexBuilt ( baseCfs . keyspace . getName ( ) , metadata . name ) ; 
 } 
 
 private void markBuilt ( ) 
 { 
 - SystemKeyspace . setIndexBuilt ( baseCfs . keyspace . getName ( ) , getIndexName ( ) ) ; 
 + SystemKeyspace . setIndexBuilt ( baseCfs . keyspace . getName ( ) , metadata . name ) ; 
 } 
 
 private void markRemoved ( ) 
 { 
 - SystemKeyspace . setIndexRemoved ( baseCfs . keyspace . getName ( ) , getIndexName ( ) ) ; 
 + SystemKeyspace . setIndexRemoved ( baseCfs . keyspace . getName ( ) , metadata . name ) ; 
 } 
 
 private boolean isPrimaryKeyIndex ( ) 
 @ @ - 653 , 13 + 647 , 13 @ @ public class CustomCassandraIndex implements Index 
 logger . info ( " No SSTable data for { } . { } to build index { } from , marking empty index as built " , 
 baseCfs . metadata . ksName , 
 baseCfs . metadata . cfName , 
 - getIndexName ( ) ) ; 
 + metadata . name ) ; 
 markBuilt ( ) ; 
 return ; 
 } 
 
 logger . info ( " Submitting index build of { } for data in { } " , 
 - getIndexName ( ) , 
 + metadata . name , 
 getSSTableNames ( sstables ) ) ; 
 
 SecondaryIndexBuilder builder = new SecondaryIndexBuilder ( baseCfs , 
 @ @ - 670 , 7 + 664 , 7 @ @ public class CustomCassandraIndex implements Index 
 indexCfs . forceBlockingFlush ( ) ; 
 markBuilt ( ) ; 
 } 
 - logger . info ( " Index build of { } complete " , getIndexName ( ) ) ; 
 + logger . info ( " Index build of { } complete " , metadata . name ) ; 
 } 
 
 private static String getSSTableNames ( Collection < SSTableReader > sstables )

NEAREST DIFF:
ELIMINATEDSENTENCE
