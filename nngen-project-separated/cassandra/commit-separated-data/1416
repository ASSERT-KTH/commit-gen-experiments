BLEU SCORE: 0.029079340872079116

TEST MSG: Makes AggregationTest . testAggregateWithWriteTimeOrTTL more robust
GENERATED MSG: Fix NPE in SelectStatement with empty IN values

TEST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java <nl> index 51e4a28 . . 120fc21 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java <nl> @ @ - 167 , 7 + 167 , 7 @ @ public class AggregationTest extends CQLTester <nl> } <nl> <nl> @ Test <nl> - public void testAggregateWithWithWriteTimeOrTTL ( ) throws Throwable <nl> + public void testAggregateWithWriteTimeOrTTL ( ) throws Throwable <nl> { <nl> createTable ( " CREATE TABLE % s ( a int primary key , b int , c int ) " ) ; <nl> <nl> @ @ - 180 , 8 + 180 , 9 @ @ public class AggregationTest extends CQLTester <nl> long today = System . currentTimeMillis ( ) * 1000 ; <nl> long yesterday = today - ( DateUtils . MILLIS _ PER _ DAY * 1000 ) ; <nl> <nl> - execute ( " INSERT INTO % s ( a , b , c ) VALUES ( 1 , 2 , null ) USING TTL 5 ; " ) ; <nl> - execute ( " INSERT INTO % s ( a , b , c ) VALUES ( 2 , 4 , 6 ) USING TTL 2 ; " ) ; <nl> + final int secondsPerMinute = 60 ; <nl> + execute ( " INSERT INTO % s ( a , b , c ) VALUES ( 1 , 2 , null ) USING TTL " + ( 20 * secondsPerMinute ) ) ; <nl> + execute ( " INSERT INTO % s ( a , b , c ) VALUES ( 2 , 4 , 6 ) USING TTL " + ( 10 * secondsPerMinute ) ) ; <nl> execute ( " INSERT INTO % s ( a , b , c ) VALUES ( 4 , 8 , 12 ) USING TIMESTAMP " + yesterday ) ; <nl> <nl> assertRows ( execute ( " SELECT count ( writetime ( b ) ) , count ( ttl ( b ) ) FROM % s " ) , <nl> @ @ - 190 , 8 + 191 , 8 @ @ public class AggregationTest extends CQLTester <nl> UntypedResultSet resultSet = execute ( " SELECT min ( ttl ( b ) ) , ttl ( b ) FROM % s " ) ; <nl> assertEquals ( 1 , resultSet . size ( ) ) ; <nl> Row row = resultSet . one ( ) ; <nl> - assertTrue ( row . getInt ( " ttl ( b ) " ) > 4 ) ; <nl> - assertTrue ( row . getInt ( " system . min ( ttl ( b ) ) " ) < = 2 ) ; <nl> + assertTrue ( row . getInt ( " ttl ( b ) " ) > ( 10 * secondsPerMinute ) ) ; <nl> + assertTrue ( row . getInt ( " system . min ( ttl ( b ) ) " ) < = ( 10 * secondsPerMinute ) ) ; <nl> <nl> resultSet = execute ( " SELECT min ( writetime ( b ) ) , writetime ( b ) FROM % s " ) ; <nl> assertEquals ( 1 , resultSet . size ( ) ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java 
 index 51e4a28 . . 120fc21 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java 
 @ @ - 167 , 7 + 167 , 7 @ @ public class AggregationTest extends CQLTester 
 } 
 
 @ Test 
 - public void testAggregateWithWithWriteTimeOrTTL ( ) throws Throwable 
 + public void testAggregateWithWriteTimeOrTTL ( ) throws Throwable 
 { 
 createTable ( " CREATE TABLE % s ( a int primary key , b int , c int ) " ) ; 
 
 @ @ - 180 , 8 + 180 , 9 @ @ public class AggregationTest extends CQLTester 
 long today = System . currentTimeMillis ( ) * 1000 ; 
 long yesterday = today - ( DateUtils . MILLIS _ PER _ DAY * 1000 ) ; 
 
 - execute ( " INSERT INTO % s ( a , b , c ) VALUES ( 1 , 2 , null ) USING TTL 5 ; " ) ; 
 - execute ( " INSERT INTO % s ( a , b , c ) VALUES ( 2 , 4 , 6 ) USING TTL 2 ; " ) ; 
 + final int secondsPerMinute = 60 ; 
 + execute ( " INSERT INTO % s ( a , b , c ) VALUES ( 1 , 2 , null ) USING TTL " + ( 20 * secondsPerMinute ) ) ; 
 + execute ( " INSERT INTO % s ( a , b , c ) VALUES ( 2 , 4 , 6 ) USING TTL " + ( 10 * secondsPerMinute ) ) ; 
 execute ( " INSERT INTO % s ( a , b , c ) VALUES ( 4 , 8 , 12 ) USING TIMESTAMP " + yesterday ) ; 
 
 assertRows ( execute ( " SELECT count ( writetime ( b ) ) , count ( ttl ( b ) ) FROM % s " ) , 
 @ @ - 190 , 8 + 191 , 8 @ @ public class AggregationTest extends CQLTester 
 UntypedResultSet resultSet = execute ( " SELECT min ( ttl ( b ) ) , ttl ( b ) FROM % s " ) ; 
 assertEquals ( 1 , resultSet . size ( ) ) ; 
 Row row = resultSet . one ( ) ; 
 - assertTrue ( row . getInt ( " ttl ( b ) " ) > 4 ) ; 
 - assertTrue ( row . getInt ( " system . min ( ttl ( b ) ) " ) < = 2 ) ; 
 + assertTrue ( row . getInt ( " ttl ( b ) " ) > ( 10 * secondsPerMinute ) ) ; 
 + assertTrue ( row . getInt ( " system . min ( ttl ( b ) ) " ) < = ( 10 * secondsPerMinute ) ) ; 
 
 resultSet = execute ( " SELECT min ( writetime ( b ) ) , writetime ( b ) FROM % s " ) ; 
 assertEquals ( 1 , resultSet . size ( ) ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
