BLEU SCORE: 0.04100530090638893

TEST MSG: Permit configurable timestamps with cassandra - stress ( CASSANDRA - 7416 )
GENERATED MSG: Add logging levels ( minimal , normal or verbose ) to stress tool

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 7124ec4 . . 3b14fbe 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 <nl> + * Permit configurable timestamps with cassandra - stress ( CASSANDRA - 7416 ) <nl> * Move sstable RandomAccessReader to nio2 , which allows using the <nl> FILE _ SHARE _ DELETE flag on Windows ( CASSANDRA - 4050 ) <nl> * Remove CQL2 ( CASSANDRA - 5918 ) <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java b / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java <nl> index 45e375b . . b459e04 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java <nl> @ @ - 41 , 6 + 41 , 8 @ @ public class CqlInserter extends CqlOperation < Integer > <nl> protected String buildQuery ( ) <nl> { <nl> StringBuilder query = new StringBuilder ( " UPDATE " ) . append ( wrapInQuotes ( state . type . table ) ) ; <nl> + if ( state . settings . columns . timestamp ! = null ) <nl> + query . append ( " USING TIMESTAMP " ) . append ( state . settings . columns . timestamp ) ; <nl> <nl> query . append ( " SET " ) ; <nl> <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / ThriftInserter . java b / tools / stress / src / org / apache / cassandra / stress / operations / ThriftInserter . java <nl> index 7077a95 . . 73515ae 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / operations / ThriftInserter . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / operations / ThriftInserter . java <nl> @ @ - 109 , 7 + 109 , 9 @ @ public final class ThriftInserter extends Operation <nl> for ( int i = 0 ; i < values . size ( ) ; i + + ) <nl> columns . get ( i ) <nl> . setValue ( values . get ( i ) ) <nl> - . setTimestamp ( FBUtilities . timestampMicros ( ) ) ; <nl> + . setTimestamp ( state . settings . columns . timestamp ! = null <nl> + ? Long . parseLong ( state . settings . columns . timestamp ) <nl> + : FBUtilities . timestampMicros ( ) ) ; <nl> <nl> return columns ; <nl> } <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsColumn . java b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsColumn . java <nl> index 7e20ec6 . . 4fac5d0 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsColumn . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsColumn . java <nl> @ @ - 42 , 6 + 42 , 7 @ @ public class SettingsColumn implements Serializable <nl> public final List < ByteBuffer > names ; <nl> public final List < String > namestrs ; <nl> public final String comparator ; <nl> + public final String timestamp ; <nl> public final boolean useTimeUUIDComparator ; <nl> public final int superColumns ; <nl> public final boolean useSuperColumns ; <nl> @ @ - 66 , 6 + 67 , 7 @ @ public class SettingsColumn implements Serializable <nl> dataGenFactory = options . generator . get ( ) ; <nl> useSuperColumns = superColumns > 0 ; <nl> { <nl> + timestamp = options . timestamp . value ( ) ; <nl> comparator = options . comparator . value ( ) ; <nl> AbstractType parsed = null ; <nl> <nl> @ @ - 149 , 6 + 151 , 7 @ @ public class SettingsColumn implements Serializable <nl> final OptionSimple superColumns = new OptionSimple ( " super = " , " [ 0 - 9 ] + " , " 0 " , " Number of super columns to use ( no super columns used if not specified ) " , false ) ; <nl> final OptionSimple comparator = new OptionSimple ( " comparator = " , " TimeUUIDType | AsciiType | UTF8Type " , " AsciiType " , " Column Comparator to use " , false ) ; <nl> final OptionSimple slice = new OptionSimple ( " slice " , " " , null , " If set , range slices will be used for reads , otherwise a names query will be " , false ) ; <nl> + final OptionSimple timestamp = new OptionSimple ( " timestamp = " , " [ 0 - 9 ] + " , null , " If set , all columns will be written with the given timestamp " , false ) ; <nl> final OptionDistribution size = new OptionDistribution ( " size = " , " FIXED ( 34 ) " , " Cell size distribution " ) ; <nl> final OptionDataGen generator = new OptionDataGen ( " data = " , " REPEAT ( 50 ) " ) ; <nl> } <nl> @ @ - 160 , 7 + 163 , 7 @ @ public class SettingsColumn implements Serializable <nl> @ Override <nl> public List < ? extends Option > options ( ) <nl> { <nl> - return Arrays . asList ( name , slice , superColumns , comparator , size , generator ) ; <nl> + return Arrays . asList ( name , slice , superColumns , comparator , timestamp , size , generator ) ; <nl> } <nl> } <nl> <nl> @ @ - 171 , 7 + 174 , 7 @ @ public class SettingsColumn implements Serializable <nl> @ Override <nl> public List < ? extends Option > options ( ) <nl> { <nl> - return Arrays . asList ( count , slice , superColumns , comparator , size , generator ) ; <nl> + return Arrays . asList ( count , slice , superColumns , comparator , timestamp , size , generator ) ; <nl> } <nl> } <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 7124ec4 . . 3b14fbe 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 
 + * Permit configurable timestamps with cassandra - stress ( CASSANDRA - 7416 ) 
 * Move sstable RandomAccessReader to nio2 , which allows using the 
 FILE _ SHARE _ DELETE flag on Windows ( CASSANDRA - 4050 ) 
 * Remove CQL2 ( CASSANDRA - 5918 ) 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java b / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java 
 index 45e375b . . b459e04 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / operations / CqlInserter . java 
 @ @ - 41 , 6 + 41 , 8 @ @ public class CqlInserter extends CqlOperation < Integer > 
 protected String buildQuery ( ) 
 { 
 StringBuilder query = new StringBuilder ( " UPDATE " ) . append ( wrapInQuotes ( state . type . table ) ) ; 
 + if ( state . settings . columns . timestamp ! = null ) 
 + query . append ( " USING TIMESTAMP " ) . append ( state . settings . columns . timestamp ) ; 
 
 query . append ( " SET " ) ; 
 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / ThriftInserter . java b / tools / stress / src / org / apache / cassandra / stress / operations / ThriftInserter . java 
 index 7077a95 . . 73515ae 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / operations / ThriftInserter . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / operations / ThriftInserter . java 
 @ @ - 109 , 7 + 109 , 9 @ @ public final class ThriftInserter extends Operation 
 for ( int i = 0 ; i < values . size ( ) ; i + + ) 
 columns . get ( i ) 
 . setValue ( values . get ( i ) ) 
 - . setTimestamp ( FBUtilities . timestampMicros ( ) ) ; 
 + . setTimestamp ( state . settings . columns . timestamp ! = null 
 + ? Long . parseLong ( state . settings . columns . timestamp ) 
 + : FBUtilities . timestampMicros ( ) ) ; 
 
 return columns ; 
 } 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsColumn . java b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsColumn . java 
 index 7e20ec6 . . 4fac5d0 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / settings / SettingsColumn . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / settings / SettingsColumn . java 
 @ @ - 42 , 6 + 42 , 7 @ @ public class SettingsColumn implements Serializable 
 public final List < ByteBuffer > names ; 
 public final List < String > namestrs ; 
 public final String comparator ; 
 + public final String timestamp ; 
 public final boolean useTimeUUIDComparator ; 
 public final int superColumns ; 
 public final boolean useSuperColumns ; 
 @ @ - 66 , 6 + 67 , 7 @ @ public class SettingsColumn implements Serializable 
 dataGenFactory = options . generator . get ( ) ; 
 useSuperColumns = superColumns > 0 ; 
 { 
 + timestamp = options . timestamp . value ( ) ; 
 comparator = options . comparator . value ( ) ; 
 AbstractType parsed = null ; 
 
 @ @ - 149 , 6 + 151 , 7 @ @ public class SettingsColumn implements Serializable 
 final OptionSimple superColumns = new OptionSimple ( " super = " , " [ 0 - 9 ] + " , " 0 " , " Number of super columns to use ( no super columns used if not specified ) " , false ) ; 
 final OptionSimple comparator = new OptionSimple ( " comparator = " , " TimeUUIDType | AsciiType | UTF8Type " , " AsciiType " , " Column Comparator to use " , false ) ; 
 final OptionSimple slice = new OptionSimple ( " slice " , " " , null , " If set , range slices will be used for reads , otherwise a names query will be " , false ) ; 
 + final OptionSimple timestamp = new OptionSimple ( " timestamp = " , " [ 0 - 9 ] + " , null , " If set , all columns will be written with the given timestamp " , false ) ; 
 final OptionDistribution size = new OptionDistribution ( " size = " , " FIXED ( 34 ) " , " Cell size distribution " ) ; 
 final OptionDataGen generator = new OptionDataGen ( " data = " , " REPEAT ( 50 ) " ) ; 
 } 
 @ @ - 160 , 7 + 163 , 7 @ @ public class SettingsColumn implements Serializable 
 @ Override 
 public List < ? extends Option > options ( ) 
 { 
 - return Arrays . asList ( name , slice , superColumns , comparator , size , generator ) ; 
 + return Arrays . asList ( name , slice , superColumns , comparator , timestamp , size , generator ) ; 
 } 
 } 
 
 @ @ - 171 , 7 + 174 , 7 @ @ public class SettingsColumn implements Serializable 
 @ Override 
 public List < ? extends Option > options ( ) 
 { 
 - return Arrays . asList ( count , slice , superColumns , comparator , size , generator ) ; 
 + return Arrays . asList ( count , slice , superColumns , comparator , timestamp , size , generator ) ; 
 } 
 } 


NEAREST DIFF:
ELIMINATEDSENTENCE
