BLEU SCORE: 0.0370865905565703

TEST MSG: Fix more stress bugs ( ninja )
GENERATED MSG: fix terminination of the stress . java when errors were encountered

TEST DIFF (one line): diff - - git a / tools / stress / src / org / apache / cassandra / stress / generate / Partition . java b / tools / stress / src / org / apache / cassandra / stress / generate / Partition . java <nl> index 18f5732 . . 66f8c1d 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / generate / Partition . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / generate / Partition . java <nl> @ @ - 271 , 10 + 271 , 13 @ @ public class Partition <nl> tosort . add ( ( Comparable ) generator . generate ( ) ) ; <nl> Collections . sort ( tosort ) ; <nl> for ( int i = 0 ; i < count ; i + + ) <nl> - if ( i = = 0 | | tosort . get ( i - 1 ) . compareTo ( i ) < 0 ) <nl> - queue . add ( tosort . get ( i ) ) ; <nl> + queue . add ( tosort . get ( i ) ) ; <nl> break ; <nl> } <nl> + else <nl> + { <nl> + throw new RuntimeException ( " Generator class is not comparable : " + generator . clazz ) ; <nl> + } <nl> case ARBITRARY : <nl> unique . clear ( ) ; <nl> for ( int i = 0 ; i < count ; i + + ) <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java b / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java <nl> index ffa965f . . 8e20ab3 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java <nl> @ @ - 84 , 7 + 84 , 7 @ @ public class SchemaInsert extends SchemaStatement <nl> / / 65535 is max number of stmts per batch , so if we have more , we need to manually batch them <nl> for ( int j = 0 ; j < stmts . size ( ) ; j + = 65535 ) <nl> { <nl> - List < BoundStatement > substmts = stmts . subList ( j , Math . min ( stmts . size ( ) , j + 65535 ) ) ; <nl> + List < BoundStatement > substmts = stmts . subList ( j , Math . min ( j + stmts . size ( ) , j + 65535 ) ) ; <nl> Statement stmt ; <nl> if ( stmts . size ( ) = = 1 ) <nl> { <nl> @ @ - 98 , 7 + 98 , 14 @ @ public class SchemaInsert extends SchemaStatement <nl> stmt = batch ; <nl> } <nl> <nl> - validate ( client . getSession ( ) . execute ( stmt ) ) ; <nl> + try <nl> + { <nl> + validate ( client . getSession ( ) . execute ( stmt ) ) ; <nl> + } <nl> + catch ( ClassCastException e ) <nl> + { <nl> + e . printStackTrace ( ) ; <nl> + } <nl> } <nl> <nl> for ( Partition . RowIterator iterator : iterators )
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 14dca80 . . 827a4ec 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 19 , 6 + 19 , 8 @ @ <nl> ( CASSANDRA - 4088 ) <nl> * relax path length requirement for sstable files when upgrading on <nl> non - Windows platforms ( CASSANDRA - 4110 ) <nl> + * fix terminination of the stress . java when errors were encountered <nl> + ( CASSANDRA - 4128 ) <nl> <nl> <nl> 1 . 1 - beta2 <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / Stress . java b / tools / stress / src / org / apache / cassandra / stress / Stress . java <nl> index 36f0410 . . c5e65f8 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / Stress . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / Stress . java <nl> @ @ - 88 , 7 + 88 , 7 @ @ public final class Stress <nl> } <nl> else <nl> { <nl> - new StressAction ( session , outStream ) . run ( ) ; <nl> + new StressAction ( session , outStream ) . start ( ) ; <nl> } <nl> } <nl> <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / StressAction . java b / tools / stress / src / org / apache / cassandra / stress / StressAction . java <nl> index 8d6a0f5 . . d175170 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / StressAction . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / StressAction . java <nl> @ @ - 137 , 6 + 137 , 9 @ @ public class StressAction extends Thread <nl> } <nl> } <nl> <nl> + if ( producer . isAlive ( ) ) <nl> + producer . interrupt ( ) ; / / if producer is still alive it means that we had errors in the consumers <nl> + <nl> / / marking an end of the output to the client <nl> output . println ( " END " ) ; <nl> } <nl> @ @ - 161 , 7 + 164 , 8 @ @ public class StressAction extends Thread <nl> } <nl> catch ( InterruptedException e ) <nl> { <nl> - System . err . println ( " Producer error - " + e . getMessage ( ) ) ; <nl> + if ( e . getMessage ( ) ! = null ) <nl> + System . err . println ( " Producer error - " + e . getMessage ( ) ) ; <nl> return ; <nl> } <nl> }

TEST DIFF:
diff - - git a / tools / stress / src / org / apache / cassandra / stress / generate / Partition . java b / tools / stress / src / org / apache / cassandra / stress / generate / Partition . java 
 index 18f5732 . . 66f8c1d 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / generate / Partition . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / generate / Partition . java 
 @ @ - 271 , 10 + 271 , 13 @ @ public class Partition 
 tosort . add ( ( Comparable ) generator . generate ( ) ) ; 
 Collections . sort ( tosort ) ; 
 for ( int i = 0 ; i < count ; i + + ) 
 - if ( i = = 0 | | tosort . get ( i - 1 ) . compareTo ( i ) < 0 ) 
 - queue . add ( tosort . get ( i ) ) ; 
 + queue . add ( tosort . get ( i ) ) ; 
 break ; 
 } 
 + else 
 + { 
 + throw new RuntimeException ( " Generator class is not comparable : " + generator . clazz ) ; 
 + } 
 case ARBITRARY : 
 unique . clear ( ) ; 
 for ( int i = 0 ; i < count ; i + + ) 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java b / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java 
 index ffa965f . . 8e20ab3 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / operations / userdefined / SchemaInsert . java 
 @ @ - 84 , 7 + 84 , 7 @ @ public class SchemaInsert extends SchemaStatement 
 / / 65535 is max number of stmts per batch , so if we have more , we need to manually batch them 
 for ( int j = 0 ; j < stmts . size ( ) ; j + = 65535 ) 
 { 
 - List < BoundStatement > substmts = stmts . subList ( j , Math . min ( stmts . size ( ) , j + 65535 ) ) ; 
 + List < BoundStatement > substmts = stmts . subList ( j , Math . min ( j + stmts . size ( ) , j + 65535 ) ) ; 
 Statement stmt ; 
 if ( stmts . size ( ) = = 1 ) 
 { 
 @ @ - 98 , 7 + 98 , 14 @ @ public class SchemaInsert extends SchemaStatement 
 stmt = batch ; 
 } 
 
 - validate ( client . getSession ( ) . execute ( stmt ) ) ; 
 + try 
 + { 
 + validate ( client . getSession ( ) . execute ( stmt ) ) ; 
 + } 
 + catch ( ClassCastException e ) 
 + { 
 + e . printStackTrace ( ) ; 
 + } 
 } 
 
 for ( Partition . RowIterator iterator : iterators )

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 14dca80 . . 827a4ec 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 19 , 6 + 19 , 8 @ @ 
 ( CASSANDRA - 4088 ) 
 * relax path length requirement for sstable files when upgrading on 
 non - Windows platforms ( CASSANDRA - 4110 ) 
 + * fix terminination of the stress . java when errors were encountered 
 + ( CASSANDRA - 4128 ) 
 
 
 1 . 1 - beta2 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / Stress . java b / tools / stress / src / org / apache / cassandra / stress / Stress . java 
 index 36f0410 . . c5e65f8 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / Stress . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / Stress . java 
 @ @ - 88 , 7 + 88 , 7 @ @ public final class Stress 
 } 
 else 
 { 
 - new StressAction ( session , outStream ) . run ( ) ; 
 + new StressAction ( session , outStream ) . start ( ) ; 
 } 
 } 
 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / StressAction . java b / tools / stress / src / org / apache / cassandra / stress / StressAction . java 
 index 8d6a0f5 . . d175170 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / StressAction . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / StressAction . java 
 @ @ - 137 , 6 + 137 , 9 @ @ public class StressAction extends Thread 
 } 
 } 
 
 + if ( producer . isAlive ( ) ) 
 + producer . interrupt ( ) ; / / if producer is still alive it means that we had errors in the consumers 
 + 
 / / marking an end of the output to the client 
 output . println ( " END " ) ; 
 } 
 @ @ - 161 , 7 + 164 , 8 @ @ public class StressAction extends Thread 
 } 
 catch ( InterruptedException e ) 
 { 
 - System . err . println ( " Producer error - " + e . getMessage ( ) ) ; 
 + if ( e . getMessage ( ) ! = null ) 
 + System . err . println ( " Producer error - " + e . getMessage ( ) ) ; 
 return ; 
 } 
 }
