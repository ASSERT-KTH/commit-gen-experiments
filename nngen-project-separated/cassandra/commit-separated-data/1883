BLEU SCORE: 0.06220117374063391

TEST MSG: Fix sstableupgrade throws exception
GENERATED MSG: Purge tombstone from row cache

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b976a16 . . 7a38735 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 75 , 6 + 75 , 7 @ @ <nl> * Improve JBOD disk utilization ( CASSANDRA - 7386 ) <nl> * Log failed host when preparing incremental repair ( CASSANDRA - 8228 ) <nl> * Force config client mode in CQLSSTableWriter ( CASSANDRA - 8281 ) <nl> + * Fix sstableupgrade throws exception ( CASSANDRA - 8688 ) <nl> Merged from 2 . 0 : <nl> * Add batch remove iterator to ABSC ( CASSANDRA - 8414 , 8666 ) <nl> * Round up time deltas lower than 1ms in BulkLoader ( CASSANDRA - 8645 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / Upgrader . java b / src / java / org / apache / cassandra / db / compaction / Upgrader . java <nl> index 39f668d . . 5d245ac 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / Upgrader . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / Upgrader . java <nl> @ @ - 18 , 7 + 18 , 6 @ @ <nl> package org . apache . cassandra . db . compaction ; <nl> <nl> import java . io . File ; <nl> - import java . io . IOException ; <nl> import java . util . * ; <nl> <nl> import com . google . common . base . Throwables ; <nl> @ @ - 28 , 8 + 27 , 6 @ @ import org . apache . cassandra . db . ColumnFamilyStore ; <nl> import org . apache . cassandra . db . DecoratedKey ; <nl> import org . apache . cassandra . io . sstable . * ; <nl> import org . apache . cassandra . io . sstable . metadata . MetadataCollector ; <nl> - import org . apache . cassandra . utils . CLibrary ; <nl> - import org . apache . cassandra . utils . CloseableIterator ; <nl> import org . apache . cassandra . utils . OutputHandler ; <nl> <nl> public class Upgrader <nl> @ @ - 92 , 8 + 89 , 7 @ @ public class Upgrader <nl> writer . append ( row ) ; <nl> } <nl> <nl> - List < SSTableReader > sstables = writer . finish ( ) ; <nl> - cfs . getDataTracker ( ) . markCompactedSSTablesReplaced ( toUpgrade , sstables , OperationType . UPGRADE _ SSTABLES ) ; <nl> + writer . finish ( ) ; <nl> outputHandler . output ( " Upgrade of " + sstable + " complete . " ) ; <nl> <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / io / CompactionIterator . java b / src / java / org / apache / cassandra / io / CompactionIterator . java <nl> index 6bfadb3 . . f9cab86 100644 <nl> - - - a / src / java / org / apache / cassandra / io / CompactionIterator . java <nl> + + + b / src / java / org / apache / cassandra / io / CompactionIterator . java <nl> @ @ - 32 , 6 + 32 , 7 @ @ import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> + import org . apache . cassandra . db . ColumnFamily ; <nl> import org . apache . cassandra . db . ColumnFamilyStore ; <nl> import org . apache . cassandra . io . sstable . SSTableIdentityIterator ; <nl> import org . apache . cassandra . io . sstable . SSTableReader ; <nl> @ @ - 112 , 10 + 113 , 15 @ @ implements Closeable , ICompactionInfo <nl> cfs . invalidateCachedRow ( compactedRow . key ) ; <nl> return null ; <nl> } <nl> - else <nl> - { <nl> - return compactedRow ; <nl> - } <nl> + <nl> + / / If the raw is cached , we call removeDeleted on it to have / coherent query returns . However it would look <nl> + / / like some deleted columns lived longer than gc _ grace + compaction . This can also free up big amount of <nl> + / / memory on long running instances <nl> + ColumnFamily cachedRow = cfs . getRawCachedRow ( compactedRow . key ) ; <nl> + if ( cachedRow ! = null ) <nl> + ColumnFamilyStore . removeDeleted ( cachedRow , gcBefore ) ; <nl> + <nl> + return compactedRow ; <nl> } <nl> finally <nl> {

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b976a16 . . 7a38735 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 75 , 6 + 75 , 7 @ @ 
 * Improve JBOD disk utilization ( CASSANDRA - 7386 ) 
 * Log failed host when preparing incremental repair ( CASSANDRA - 8228 ) 
 * Force config client mode in CQLSSTableWriter ( CASSANDRA - 8281 ) 
 + * Fix sstableupgrade throws exception ( CASSANDRA - 8688 ) 
 Merged from 2 . 0 : 
 * Add batch remove iterator to ABSC ( CASSANDRA - 8414 , 8666 ) 
 * Round up time deltas lower than 1ms in BulkLoader ( CASSANDRA - 8645 ) 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / Upgrader . java b / src / java / org / apache / cassandra / db / compaction / Upgrader . java 
 index 39f668d . . 5d245ac 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / Upgrader . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / Upgrader . java 
 @ @ - 18 , 7 + 18 , 6 @ @ 
 package org . apache . cassandra . db . compaction ; 
 
 import java . io . File ; 
 - import java . io . IOException ; 
 import java . util . * ; 
 
 import com . google . common . base . Throwables ; 
 @ @ - 28 , 8 + 27 , 6 @ @ import org . apache . cassandra . db . ColumnFamilyStore ; 
 import org . apache . cassandra . db . DecoratedKey ; 
 import org . apache . cassandra . io . sstable . * ; 
 import org . apache . cassandra . io . sstable . metadata . MetadataCollector ; 
 - import org . apache . cassandra . utils . CLibrary ; 
 - import org . apache . cassandra . utils . CloseableIterator ; 
 import org . apache . cassandra . utils . OutputHandler ; 
 
 public class Upgrader 
 @ @ - 92 , 8 + 89 , 7 @ @ public class Upgrader 
 writer . append ( row ) ; 
 } 
 
 - List < SSTableReader > sstables = writer . finish ( ) ; 
 - cfs . getDataTracker ( ) . markCompactedSSTablesReplaced ( toUpgrade , sstables , OperationType . UPGRADE _ SSTABLES ) ; 
 + writer . finish ( ) ; 
 outputHandler . output ( " Upgrade of " + sstable + " complete . " ) ; 
 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / io / CompactionIterator . java b / src / java / org / apache / cassandra / io / CompactionIterator . java 
 index 6bfadb3 . . f9cab86 100644 
 - - - a / src / java / org / apache / cassandra / io / CompactionIterator . java 
 + + + b / src / java / org / apache / cassandra / io / CompactionIterator . java 
 @ @ - 32 , 6 + 32 , 7 @ @ import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 + import org . apache . cassandra . db . ColumnFamily ; 
 import org . apache . cassandra . db . ColumnFamilyStore ; 
 import org . apache . cassandra . io . sstable . SSTableIdentityIterator ; 
 import org . apache . cassandra . io . sstable . SSTableReader ; 
 @ @ - 112 , 10 + 113 , 15 @ @ implements Closeable , ICompactionInfo 
 cfs . invalidateCachedRow ( compactedRow . key ) ; 
 return null ; 
 } 
 - else 
 - { 
 - return compactedRow ; 
 - } 
 + 
 + / / If the raw is cached , we call removeDeleted on it to have / coherent query returns . However it would look 
 + / / like some deleted columns lived longer than gc _ grace + compaction . This can also free up big amount of 
 + / / memory on long running instances 
 + ColumnFamily cachedRow = cfs . getRawCachedRow ( compactedRow . key ) ; 
 + if ( cachedRow ! = null ) 
 + ColumnFamilyStore . removeDeleted ( cachedRow , gcBefore ) ; 
 + 
 + return compactedRow ; 
 } 
 finally 
 {
