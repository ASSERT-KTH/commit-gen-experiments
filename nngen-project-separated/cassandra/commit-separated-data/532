BLEU SCORE: 0.040161384364076534

TEST MSG: cqlsh copy - from : encode column names to avoid primary key parsing errors
GENERATED MSG: cqlsh : allow COPY FROM to be interrupted with ctrl - c

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 1bed875 . . 8a7ae42 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 2 . 9 <nl> + * cqlsh copy - from : encode column names to avoid primary key parsing errors ( CASSANDRA - 12909 ) <nl> * Temporarily fix bug that creates commit log when running offline tools ( CASSANDRA - 8616 ) <nl> * Reduce granuality of OpOrder . Group during index build ( CASSANDRA - 12796 ) <nl> * Test bind parameters and unset parameters in InsertUpdateIfConditionTest ( CASSANDRA - 12980 ) <nl> diff - - git a / pylib / cqlshlib / copyutil . py b / pylib / cqlshlib / copyutil . py <nl> index 4bc76e9 . . d22f2fe 100644 <nl> - - - a / pylib / cqlshlib / copyutil . py <nl> + + + b / pylib / cqlshlib / copyutil . py <nl> @ @ - 1759 , 9 + 1759 , 10 @ @ class ImportConversion ( object ) : <nl> # these functions are used for non - prepared statements to protect values with quotes if required <nl> self . protectors = [ self . _ get _ protector ( t ) for t in self . coltypes ] <nl> <nl> - def _ get _ protector ( self , t ) : <nl> + @ staticmethod <nl> + def _ get _ protector ( t ) : <nl> if t in ( ' ascii ' , ' text ' , ' timestamp ' , ' date ' , ' time ' , ' inet ' ) : <nl> - return lambda v : unicode ( protect _ value ( v ) , self . encoding ) <nl> + return lambda v : protect _ value ( v ) <nl> else : <nl> return lambda v : v <nl> <nl> @ @ - 2136 , 7 + 2137 , 7 @ @ class ImportProcess ( ChildProcess ) : <nl> ChildProcess . _ _ init _ _ ( self , params = params , target = self . run ) <nl> <nl> self . skip _ columns = params [ ' skip _ columns ' ] <nl> - self . valid _ columns = params [ ' valid _ columns ' ] <nl> + self . valid _ columns = [ c . encode ( self . encoding ) for c in params [ ' valid _ columns ' ] ] <nl> self . skip _ column _ indexes = [ i for i , c in enumerate ( self . columns ) if c in self . skip _ columns ] <nl> <nl> options = params [ ' options ' ]
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 1bed875 . . 8a7ae42 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 2 . 9 
 + * cqlsh copy - from : encode column names to avoid primary key parsing errors ( CASSANDRA - 12909 ) 
 * Temporarily fix bug that creates commit log when running offline tools ( CASSANDRA - 8616 ) 
 * Reduce granuality of OpOrder . Group during index build ( CASSANDRA - 12796 ) 
 * Test bind parameters and unset parameters in InsertUpdateIfConditionTest ( CASSANDRA - 12980 ) 
 diff - - git a / pylib / cqlshlib / copyutil . py b / pylib / cqlshlib / copyutil . py 
 index 4bc76e9 . . d22f2fe 100644 
 - - - a / pylib / cqlshlib / copyutil . py 
 + + + b / pylib / cqlshlib / copyutil . py 
 @ @ - 1759 , 9 + 1759 , 10 @ @ class ImportConversion ( object ) : 
 # these functions are used for non - prepared statements to protect values with quotes if required 
 self . protectors = [ self . _ get _ protector ( t ) for t in self . coltypes ] 
 
 - def _ get _ protector ( self , t ) : 
 + @ staticmethod 
 + def _ get _ protector ( t ) : 
 if t in ( ' ascii ' , ' text ' , ' timestamp ' , ' date ' , ' time ' , ' inet ' ) : 
 - return lambda v : unicode ( protect _ value ( v ) , self . encoding ) 
 + return lambda v : protect _ value ( v ) 
 else : 
 return lambda v : v 
 
 @ @ - 2136 , 7 + 2137 , 7 @ @ class ImportProcess ( ChildProcess ) : 
 ChildProcess . _ _ init _ _ ( self , params = params , target = self . run ) 
 
 self . skip _ columns = params [ ' skip _ columns ' ] 
 - self . valid _ columns = params [ ' valid _ columns ' ] 
 + self . valid _ columns = [ c . encode ( self . encoding ) for c in params [ ' valid _ columns ' ] ] 
 self . skip _ column _ indexes = [ i for i , c in enumerate ( self . columns ) if c in self . skip _ columns ] 
 
 options = params [ ' options ' ]

NEAREST DIFF:
ELIMINATEDSENTENCE
