BLEU SCORE: 0.04935157841536379

TEST MSG: merge # 7063 from 1 . 2
GENERATED MSG: Make sure we clear out repair sessions from netstats

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / repair / RepairSession . java b / src / java / org / apache / cassandra / repair / RepairSession . java <nl> index ea31ff3 . . 942049b 100644 <nl> - - - a / src / java / org / apache / cassandra / repair / RepairSession . java <nl> + + + b / src / java / org / apache / cassandra / repair / RepairSession . java <nl> @ @ - 345 , 8 + 345 , 8 @ @ public class RepairSession extends WrappedRunnable implements IEndpointStateChan <nl> if ( ! endpoints . contains ( endpoint ) ) <nl> return ; <nl> <nl> - / / We want a higher confidence in the failure detection than usual because failing a repair wrongly has a high cost . <nl> - if ( phi < 2 * DatabaseDescriptor . getPhiConvictThreshold ( ) ) <nl> + / / We want a higher confidence in the failure detection than usual because failing a repair wrongly has a high cost ( CASSANDRA - 7063 ) <nl> + if ( phi < 100 * DatabaseDescriptor . getPhiConvictThreshold ( ) ) <nl> return ; <nl> <nl> / / Though unlikely , it is possible to arrive here multiple time and we <nl> diff - - git a / src / java / org / apache / cassandra / streaming / StreamSession . java b / src / java / org / apache / cassandra / streaming / StreamSession . java <nl> index 79ad487 . . 55e30f0 100644 <nl> - - - a / src / java / org / apache / cassandra / streaming / StreamSession . java <nl> + + + b / src / java / org / apache / cassandra / streaming / StreamSession . java <nl> @ @ - 616 , 8 + 616 , 8 @ @ public class StreamSession implements IEndpointStateChangeSubscriber , IFailureDe <nl> if ( ! endpoint . equals ( peer ) ) <nl> return ; <nl> <nl> - / / We want a higher confidence in the failure detection than usual because failing a streaming wrongly has a high cost . <nl> - if ( phi < 2 * DatabaseDescriptor . getPhiConvictThreshold ( ) ) <nl> + / / We want a higher confidence in the failure detection than usual because failing a streaming wrongly has a high cost ( CASSANDRA - 7063 ) <nl> + if ( phi < 100 * DatabaseDescriptor . getPhiConvictThreshold ( ) ) <nl> return ; <nl> <nl> closeSession ( State . FAILED ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / repair / RepairSession . java b / src / java / org / apache / cassandra / repair / RepairSession . java 
 index ea31ff3 . . 942049b 100644 
 - - - a / src / java / org / apache / cassandra / repair / RepairSession . java 
 + + + b / src / java / org / apache / cassandra / repair / RepairSession . java 
 @ @ - 345 , 8 + 345 , 8 @ @ public class RepairSession extends WrappedRunnable implements IEndpointStateChan 
 if ( ! endpoints . contains ( endpoint ) ) 
 return ; 
 
 - / / We want a higher confidence in the failure detection than usual because failing a repair wrongly has a high cost . 
 - if ( phi < 2 * DatabaseDescriptor . getPhiConvictThreshold ( ) ) 
 + / / We want a higher confidence in the failure detection than usual because failing a repair wrongly has a high cost ( CASSANDRA - 7063 ) 
 + if ( phi < 100 * DatabaseDescriptor . getPhiConvictThreshold ( ) ) 
 return ; 
 
 / / Though unlikely , it is possible to arrive here multiple time and we 
 diff - - git a / src / java / org / apache / cassandra / streaming / StreamSession . java b / src / java / org / apache / cassandra / streaming / StreamSession . java 
 index 79ad487 . . 55e30f0 100644 
 - - - a / src / java / org / apache / cassandra / streaming / StreamSession . java 
 + + + b / src / java / org / apache / cassandra / streaming / StreamSession . java 
 @ @ - 616 , 8 + 616 , 8 @ @ public class StreamSession implements IEndpointStateChangeSubscriber , IFailureDe 
 if ( ! endpoint . equals ( peer ) ) 
 return ; 
 
 - / / We want a higher confidence in the failure detection than usual because failing a streaming wrongly has a high cost . 
 - if ( phi < 2 * DatabaseDescriptor . getPhiConvictThreshold ( ) ) 
 + / / We want a higher confidence in the failure detection than usual because failing a streaming wrongly has a high cost ( CASSANDRA - 7063 ) 
 + if ( phi < 100 * DatabaseDescriptor . getPhiConvictThreshold ( ) ) 
 return ; 
 
 closeSession ( State . FAILED ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
