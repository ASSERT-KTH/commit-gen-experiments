BLEU SCORE: 0.08116697886877475

TEST MSG: ninja - clean up merge diff
GENERATED MSG: fix read - > readFully bug

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / io / compress / CompressedSequentialWriter . java b / src / java / org / apache / cassandra / io / compress / CompressedSequentialWriter . java <nl> index 50dca93 . . b4d9dcc 100644 <nl> - - - a / src / java / org / apache / cassandra / io / compress / CompressedSequentialWriter . java <nl> + + + b / src / java / org / apache / cassandra / io / compress / CompressedSequentialWriter . java <nl> @ @ - 255 , 9 + 255 , 6 @ @ public class CompressedSequentialWriter extends SequentialWriter <nl> bufferOffset = truncateTarget - buffer . position ( ) ; <nl> chunkCount = realMark . nextChunkIndex - 1 ; <nl> <nl> - / / mark as dirty so we don ' t lose the bytes on subsequent reBuffer calls <nl> - isDirty = true ; <nl> - <nl> / / truncate data and index file <nl> truncate ( chunkOffset ) ; <nl> metadataWriter . resetAndTruncate ( realMark . nextChunkIndex - 1 ) ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java <nl> index 424ddd8 . . 251aeb3 100644 <nl> - - - a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java <nl> + + + b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java <nl> @ @ - 139 , 9 + 139 , 9 @ @ public class IncomingTcpConnection extends Thread <nl> input . readFully ( body , offset , CHUNK _ SIZE ) ; <nl> input . readFully ( body , bodySize - remainder , remainder ) ; <nl> / / earlier versions would send unnecessary bytes left over at the end of a buffer , too <nl> - int remaining = totalSize - OutboundTcpConnection . messageLength ( header , id , body ) ; <nl> - if ( remaining > 0 ) <nl> - input . skip ( remaining ) ; <nl> + long remaining = totalSize - OutboundTcpConnection . messageLength ( header , id , body ) ; <nl> + while ( remaining > 0 ) <nl> + remaining - = input . skip ( remaining ) ; <nl> <nl> / / for non - streaming connections , continue to read the messages ( and ignore them ) until sender <nl> / / starts sending correct - version messages ( which it can do without reconnecting - - version is per - Message )

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / io / compress / CompressedSequentialWriter . java b / src / java / org / apache / cassandra / io / compress / CompressedSequentialWriter . java 
 index 50dca93 . . b4d9dcc 100644 
 - - - a / src / java / org / apache / cassandra / io / compress / CompressedSequentialWriter . java 
 + + + b / src / java / org / apache / cassandra / io / compress / CompressedSequentialWriter . java 
 @ @ - 255 , 9 + 255 , 6 @ @ public class CompressedSequentialWriter extends SequentialWriter 
 bufferOffset = truncateTarget - buffer . position ( ) ; 
 chunkCount = realMark . nextChunkIndex - 1 ; 
 
 - / / mark as dirty so we don ' t lose the bytes on subsequent reBuffer calls 
 - isDirty = true ; 
 - 
 / / truncate data and index file 
 truncate ( chunkOffset ) ; 
 metadataWriter . resetAndTruncate ( realMark . nextChunkIndex - 1 ) ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java 
 index 424ddd8 . . 251aeb3 100644 
 - - - a / src / java / org / apache / cassandra / net / IncomingTcpConnection . java 
 + + + b / src / java / org / apache / cassandra / net / IncomingTcpConnection . java 
 @ @ - 139 , 9 + 139 , 9 @ @ public class IncomingTcpConnection extends Thread 
 input . readFully ( body , offset , CHUNK _ SIZE ) ; 
 input . readFully ( body , bodySize - remainder , remainder ) ; 
 / / earlier versions would send unnecessary bytes left over at the end of a buffer , too 
 - int remaining = totalSize - OutboundTcpConnection . messageLength ( header , id , body ) ; 
 - if ( remaining > 0 ) 
 - input . skip ( remaining ) ; 
 + long remaining = totalSize - OutboundTcpConnection . messageLength ( header , id , body ) ; 
 + while ( remaining > 0 ) 
 + remaining - = input . skip ( remaining ) ; 
 
 / / for non - streaming connections , continue to read the messages ( and ignore them ) until sender 
 / / starts sending correct - version messages ( which it can do without reconnecting - - version is per - Message )
