BLEU SCORE: 0.03057230827292727

TEST MSG: Fix ABTC NPE
GENERATED MSG: Actually remove UnsortedColumns ( CASSANDRA - 6630 followup )

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index feece93 . . efc54f8 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 7 + 1 , 9 @ @ <nl> 2 . 1 . 0 - beta2 <nl> + * Fix ABTC NPE ( CASSANDRA - 6692 ) <nl> * Allow nodetool to use a file or prompt for password ( CASSANDRA - 6660 ) <nl> * Fix AIOOBE when concurrently accessing ABSC ( CASSANDRA - 6742 ) <nl> <nl> + <nl> 2 . 1 . 0 - beta1 <nl> * Add flush directory distinct from compaction directories ( CASSANDRA - 6357 ) <nl> * Require JNA by default ( CASSANDRA - 6575 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / AtomicBTreeColumns . java b / src / java / org / apache / cassandra / db / AtomicBTreeColumns . java <nl> index 5f56326 . . f75efd2 100644 <nl> - - - a / src / java / org / apache / cassandra / db / AtomicBTreeColumns . java <nl> + + + b / src / java / org / apache / cassandra / db / AtomicBTreeColumns . java <nl> @ @ - 230 , 25 + 230 , 29 @ @ public class AtomicBTreeColumns extends ColumnFamily <nl> Holder current = ref ; <nl> <nl> delta . reset ( ) ; <nl> - DeletionInfo deletionInfo = cm . deletionInfo ( ) ; <nl> - if ( deletionInfo . mayModify ( current . deletionInfo ) ) <nl> + DeletionInfo deletionInfo ; <nl> + if ( cm . deletionInfo ( ) . mayModify ( current . deletionInfo ) ) <nl> { <nl> - if ( deletionInfo . hasRanges ( ) ) <nl> + if ( cm . deletionInfo ( ) . hasRanges ( ) ) <nl> { <nl> for ( Iterator < Cell > iter : new Iterator [ ] { insert . iterator ( ) , BTree . < Cell > slice ( current . tree , true ) } ) <nl> { <nl> while ( iter . hasNext ( ) ) <nl> { <nl> Cell col = iter . next ( ) ; <nl> - if ( deletionInfo . isDeleted ( col ) ) <nl> + if ( cm . deletionInfo ( ) . isDeleted ( col ) ) <nl> indexer . remove ( col ) ; <nl> } <nl> } <nl> } <nl> <nl> - deletionInfo = current . deletionInfo . copy ( ) . add ( deletionInfo ) ; <nl> + deletionInfo = current . deletionInfo . copy ( ) . add ( cm . deletionInfo ( ) ) ; <nl> delta . addHeapSize ( deletionInfo . unsharedHeapSize ( ) - current . deletionInfo . unsharedHeapSize ( ) ) ; <nl> } <nl> + else <nl> + { <nl> + deletionInfo = current . deletionInfo ; <nl> + } <nl> <nl> ColumnUpdater updater = new ColumnUpdater ( this , current , allocator , transformation , indexer , delta ) ; <nl> Object [ ] tree = BTree . update ( current . tree , metadata . comparator . columnComparator ( ) , insert , true , updater ) ; <nl> diff - - git a / src / java / org / apache / cassandra / utils / btree / BTree . java b / src / java / org / apache / cassandra / utils / btree / BTree . java <nl> index 82f5574 . . 69cf145 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / btree / BTree . java <nl> + + + b / src / java / org / apache / cassandra / utils / btree / BTree . java <nl> @ @ - 18 , 9 + 18 , 11 @ @ <nl> * / <nl> package org . apache . cassandra . utils . btree ; <nl> <nl> + import java . util . ArrayDeque ; <nl> import java . util . Arrays ; <nl> import java . util . Collection ; <nl> import java . util . Comparator ; <nl> + import java . util . Queue ; <nl> <nl> import org . apache . cassandra . utils . ObjectSizes ; <nl> <nl> @ @ - 113 , 7 + 115 , 13 @ @ public class BTree <nl> if ( ! sorted ) <nl> source = sorted ( source , comparator , size ) ; <nl> <nl> - return modifier . get ( ) . build ( source , size ) ; <nl> + Queue < Builder > queue = modifier . get ( ) ; <nl> + Builder builder = queue . poll ( ) ; <nl> + if ( builder = = null ) <nl> + builder = new Builder ( ) ; <nl> + Object [ ] btree = builder . build ( source , size ) ; <nl> + queue . add ( builder ) ; <nl> + return btree ; <nl> } <nl> <nl> / * * <nl> @ @ - 154 , 7 + 162 , 13 @ @ public class BTree <nl> if ( ! updateWithIsSorted ) <nl> updateWith = sorted ( updateWith , comparator , updateWith . size ( ) ) ; <nl> <nl> - return modifier . get ( ) . update ( btree , comparator , updateWith , updateF ) ; <nl> + Queue < Builder > queue = modifier . get ( ) ; <nl> + Builder builder = queue . poll ( ) ; <nl> + if ( builder = = null ) <nl> + builder = new Builder ( ) ; <nl> + btree = builder . update ( btree , comparator , updateWith , updateF ) ; <nl> + queue . add ( builder ) ; <nl> + return btree ; <nl> } <nl> <nl> / * * <nl> @ @ - 319 , 12 + 333 , 12 @ @ public class BTree <nl> } <nl> } ; <nl> <nl> - private static final ThreadLocal < Builder > modifier = new ThreadLocal < Builder > ( ) <nl> + private static final ThreadLocal < Queue < Builder > > modifier = new ThreadLocal < Queue < Builder > > ( ) <nl> { <nl> @ Override <nl> - protected Builder initialValue ( ) <nl> + protected Queue < Builder > initialValue ( ) <nl> { <nl> - return new Builder ( ) ; <nl> + return new ArrayDeque < > ( ) ; <nl> } <nl> } ; <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index feece93 . . efc54f8 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 7 + 1 , 9 @ @ 
 2 . 1 . 0 - beta2 
 + * Fix ABTC NPE ( CASSANDRA - 6692 ) 
 * Allow nodetool to use a file or prompt for password ( CASSANDRA - 6660 ) 
 * Fix AIOOBE when concurrently accessing ABSC ( CASSANDRA - 6742 ) 
 
 + 
 2 . 1 . 0 - beta1 
 * Add flush directory distinct from compaction directories ( CASSANDRA - 6357 ) 
 * Require JNA by default ( CASSANDRA - 6575 ) 
 diff - - git a / src / java / org / apache / cassandra / db / AtomicBTreeColumns . java b / src / java / org / apache / cassandra / db / AtomicBTreeColumns . java 
 index 5f56326 . . f75efd2 100644 
 - - - a / src / java / org / apache / cassandra / db / AtomicBTreeColumns . java 
 + + + b / src / java / org / apache / cassandra / db / AtomicBTreeColumns . java 
 @ @ - 230 , 25 + 230 , 29 @ @ public class AtomicBTreeColumns extends ColumnFamily 
 Holder current = ref ; 
 
 delta . reset ( ) ; 
 - DeletionInfo deletionInfo = cm . deletionInfo ( ) ; 
 - if ( deletionInfo . mayModify ( current . deletionInfo ) ) 
 + DeletionInfo deletionInfo ; 
 + if ( cm . deletionInfo ( ) . mayModify ( current . deletionInfo ) ) 
 { 
 - if ( deletionInfo . hasRanges ( ) ) 
 + if ( cm . deletionInfo ( ) . hasRanges ( ) ) 
 { 
 for ( Iterator < Cell > iter : new Iterator [ ] { insert . iterator ( ) , BTree . < Cell > slice ( current . tree , true ) } ) 
 { 
 while ( iter . hasNext ( ) ) 
 { 
 Cell col = iter . next ( ) ; 
 - if ( deletionInfo . isDeleted ( col ) ) 
 + if ( cm . deletionInfo ( ) . isDeleted ( col ) ) 
 indexer . remove ( col ) ; 
 } 
 } 
 } 
 
 - deletionInfo = current . deletionInfo . copy ( ) . add ( deletionInfo ) ; 
 + deletionInfo = current . deletionInfo . copy ( ) . add ( cm . deletionInfo ( ) ) ; 
 delta . addHeapSize ( deletionInfo . unsharedHeapSize ( ) - current . deletionInfo . unsharedHeapSize ( ) ) ; 
 } 
 + else 
 + { 
 + deletionInfo = current . deletionInfo ; 
 + } 
 
 ColumnUpdater updater = new ColumnUpdater ( this , current , allocator , transformation , indexer , delta ) ; 
 Object [ ] tree = BTree . update ( current . tree , metadata . comparator . columnComparator ( ) , insert , true , updater ) ; 
 diff - - git a / src / java / org / apache / cassandra / utils / btree / BTree . java b / src / java / org / apache / cassandra / utils / btree / BTree . java 
 index 82f5574 . . 69cf145 100644 
 - - - a / src / java / org / apache / cassandra / utils / btree / BTree . java 
 + + + b / src / java / org / apache / cassandra / utils / btree / BTree . java 
 @ @ - 18 , 9 + 18 , 11 @ @ 
 * / 
 package org . apache . cassandra . utils . btree ; 
 
 + import java . util . ArrayDeque ; 
 import java . util . Arrays ; 
 import java . util . Collection ; 
 import java . util . Comparator ; 
 + import java . util . Queue ; 
 
 import org . apache . cassandra . utils . ObjectSizes ; 
 
 @ @ - 113 , 7 + 115 , 13 @ @ public class BTree 
 if ( ! sorted ) 
 source = sorted ( source , comparator , size ) ; 
 
 - return modifier . get ( ) . build ( source , size ) ; 
 + Queue < Builder > queue = modifier . get ( ) ; 
 + Builder builder = queue . poll ( ) ; 
 + if ( builder = = null ) 
 + builder = new Builder ( ) ; 
 + Object [ ] btree = builder . build ( source , size ) ; 
 + queue . add ( builder ) ; 
 + return btree ; 
 } 
 
 / * * 
 @ @ - 154 , 7 + 162 , 13 @ @ public class BTree 
 if ( ! updateWithIsSorted ) 
 updateWith = sorted ( updateWith , comparator , updateWith . size ( ) ) ; 
 
 - return modifier . get ( ) . update ( btree , comparator , updateWith , updateF ) ; 
 + Queue < Builder > queue = modifier . get ( ) ; 
 + Builder builder = queue . poll ( ) ; 
 + if ( builder = = null ) 
 + builder = new Builder ( ) ; 
 + btree = builder . update ( btree , comparator , updateWith , updateF ) ; 
 + queue . add ( builder ) ; 
 + return btree ; 
 } 
 
 / * * 
 @ @ - 319 , 12 + 333 , 12 @ @ public class BTree 
 } 
 } ; 
 
 - private static final ThreadLocal < Builder > modifier = new ThreadLocal < Builder > ( ) 
 + private static final ThreadLocal < Queue < Builder > > modifier = new ThreadLocal < Queue < Builder > > ( ) 
 { 
 @ Override 
 - protected Builder initialValue ( ) 
 + protected Queue < Builder > initialValue ( ) 
 { 
 - return new Builder ( ) ; 
 + return new ArrayDeque < > ( ) ; 
 } 
 } ; 


NEAREST DIFF:
ELIMINATEDSENTENCE
