BLEU SCORE: 0.014199193612838947

TEST MSG: checkForEndpointCollision fails for legitimate collisions , improved version after CR , CASSANDRA - 9765
GENERATED MSG: Reject bootstrapping endpoints that are already in the ring with

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> index 23eff82 . . 8eecc98 100644 <nl> - - - a / src / java / org / apache / cassandra / gms / Gossiper . java <nl> + + + b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> @ @ - 680 , 12 + 680 , 8 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean <nl> <nl> / * * <nl> * A fat client is a node that has not joined the ring , therefore acting as a coordinator only . <nl> - * It possesses no data . This method attempts to determine this property , except that for dead nodes <nl> - * we cannot tell . ( ? ? ) We should also check that the node is not shutdown ( and possibly other states ) <nl> - * but due to fear of breaking things I added a new method to do this , isLiveFatClient ( ) , see <nl> - * CASSANDRA - 9765 for more information . <nl> * <nl> - * @ param endpoint - the endpoint we need to check <nl> + * @ param endpoint - the endpoint to check <nl> * @ return true if it is a fat client <nl> * / <nl> public boolean isFatClient ( InetAddress endpoint ) <nl> @ @ - 698 , 9 + 694 , 29 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean <nl> return ! isDeadState ( epState ) & & ! StorageService . instance . getTokenMetadata ( ) . isMember ( endpoint ) ; <nl> } <nl> <nl> - public boolean isLiveFatClient ( InetAddress endpoint ) <nl> + / * * <nl> + * Check if this endpoint can safely bootstrap into the cluster . <nl> + * <nl> + * @ param endpoint - the endpoint to check <nl> + * @ return true if the endpoint can join the cluster <nl> + * / <nl> + public boolean isSafeForBootstrap ( InetAddress endpoint ) <nl> { <nl> - return isFatClient ( endpoint ) & & ! isShutdownState ( endpointStateMap . get ( endpoint ) ) ; <nl> + EndpointState epState = endpointStateMap . get ( endpoint ) ; <nl> + String state = getApplicationState ( epState ) ; <nl> + logger . info ( " { } state : { } " , endpoint , state ) ; <nl> + <nl> + / / if there ' s no previous state , or the node was previously removed from the cluster , we ' re good <nl> + if ( epState = = null | | isDeadState ( epState ) ) <nl> + return true ; <nl> + <nl> + / / these states are not allowed to join the cluster <nl> + List < String > states = new ArrayList < String > ( ) { { <nl> + add ( " " ) ; / / failed bootstrap but we did start gossiping <nl> + add ( VersionedValue . STATUS _ NORMAL ) ; / / node is legit in the cluster or was stopped kill - 9 <nl> + / / add ( VersionedValue . STATUS _ BOOTSTRAPPING ) ; / / failed bootstrap <nl> + add ( VersionedValue . SHUTDOWN ) ; } } ; / / node was shutdown <nl> + return ! states . contains ( state ) ; <nl> } <nl> <nl> private void doStatusCheck ( ) <nl> @ @ - 1047 , 11 + 1063 , 6 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean <nl> return false ; <nl> } <nl> <nl> - public boolean isShutdownState ( EndpointState epState ) <nl> - { <nl> - return getApplicationState ( epState ) . equals ( VersionedValue . SHUTDOWN ) ; <nl> - } <nl> - <nl> private static String getApplicationState ( EndpointState epState ) <nl> { <nl> if ( epState = = null | | epState . getApplicationState ( ApplicationState . STATUS ) = = null ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index d70fff2 . . 745fe4c 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 455 , 8 + 455 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> if ( ! MessagingService . instance ( ) . isListening ( ) ) <nl> MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; <nl> Gossiper . instance . doShadowRound ( ) ; <nl> - EndpointState epState = Gossiper . instance . getEndpointStateForEndpoint ( FBUtilities . getBroadcastAddress ( ) ) ; <nl> - if ( epState ! = null & & ! Gossiper . instance . isDeadState ( epState ) & & ! Gossiper . instance . isLiveFatClient ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> + if ( ! Gossiper . instance . isSafeForBootstrap ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> { <nl> throw new RuntimeException ( String . format ( " A node with address % s already exists , cancelling join . " + <nl> " Use cassandra . replace _ address if you want to replace this node . " ,
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index ac4c010 . . c01b4a8 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 3 + 1 , 7 @ @ <nl> + 2 . 0 . 3 <nl> + * Reject bootstrapping if the node already exists in gossip ( CASSANDRA - 5571 ) <nl> + <nl> + <nl> 2 . 0 . 2 <nl> * Update FailureDetector to use nanontime ( CASSANDRA - 4925 ) <nl> * Fix FileCacheService regressions ( CASSANDRA - 6149 )

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java 
 index 23eff82 . . 8eecc98 100644 
 - - - a / src / java / org / apache / cassandra / gms / Gossiper . java 
 + + + b / src / java / org / apache / cassandra / gms / Gossiper . java 
 @ @ - 680 , 12 + 680 , 8 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean 
 
 / * * 
 * A fat client is a node that has not joined the ring , therefore acting as a coordinator only . 
 - * It possesses no data . This method attempts to determine this property , except that for dead nodes 
 - * we cannot tell . ( ? ? ) We should also check that the node is not shutdown ( and possibly other states ) 
 - * but due to fear of breaking things I added a new method to do this , isLiveFatClient ( ) , see 
 - * CASSANDRA - 9765 for more information . 
 * 
 - * @ param endpoint - the endpoint we need to check 
 + * @ param endpoint - the endpoint to check 
 * @ return true if it is a fat client 
 * / 
 public boolean isFatClient ( InetAddress endpoint ) 
 @ @ - 698 , 9 + 694 , 29 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean 
 return ! isDeadState ( epState ) & & ! StorageService . instance . getTokenMetadata ( ) . isMember ( endpoint ) ; 
 } 
 
 - public boolean isLiveFatClient ( InetAddress endpoint ) 
 + / * * 
 + * Check if this endpoint can safely bootstrap into the cluster . 
 + * 
 + * @ param endpoint - the endpoint to check 
 + * @ return true if the endpoint can join the cluster 
 + * / 
 + public boolean isSafeForBootstrap ( InetAddress endpoint ) 
 { 
 - return isFatClient ( endpoint ) & & ! isShutdownState ( endpointStateMap . get ( endpoint ) ) ; 
 + EndpointState epState = endpointStateMap . get ( endpoint ) ; 
 + String state = getApplicationState ( epState ) ; 
 + logger . info ( " { } state : { } " , endpoint , state ) ; 
 + 
 + / / if there ' s no previous state , or the node was previously removed from the cluster , we ' re good 
 + if ( epState = = null | | isDeadState ( epState ) ) 
 + return true ; 
 + 
 + / / these states are not allowed to join the cluster 
 + List < String > states = new ArrayList < String > ( ) { { 
 + add ( " " ) ; / / failed bootstrap but we did start gossiping 
 + add ( VersionedValue . STATUS _ NORMAL ) ; / / node is legit in the cluster or was stopped kill - 9 
 + / / add ( VersionedValue . STATUS _ BOOTSTRAPPING ) ; / / failed bootstrap 
 + add ( VersionedValue . SHUTDOWN ) ; } } ; / / node was shutdown 
 + return ! states . contains ( state ) ; 
 } 
 
 private void doStatusCheck ( ) 
 @ @ - 1047 , 11 + 1063 , 6 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean 
 return false ; 
 } 
 
 - public boolean isShutdownState ( EndpointState epState ) 
 - { 
 - return getApplicationState ( epState ) . equals ( VersionedValue . SHUTDOWN ) ; 
 - } 
 - 
 private static String getApplicationState ( EndpointState epState ) 
 { 
 if ( epState = = null | | epState . getApplicationState ( ApplicationState . STATUS ) = = null ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index d70fff2 . . 745fe4c 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 455 , 8 + 455 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 if ( ! MessagingService . instance ( ) . isListening ( ) ) 
 MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; 
 Gossiper . instance . doShadowRound ( ) ; 
 - EndpointState epState = Gossiper . instance . getEndpointStateForEndpoint ( FBUtilities . getBroadcastAddress ( ) ) ; 
 - if ( epState ! = null & & ! Gossiper . instance . isDeadState ( epState ) & & ! Gossiper . instance . isLiveFatClient ( FBUtilities . getBroadcastAddress ( ) ) ) 
 + if ( ! Gossiper . instance . isSafeForBootstrap ( FBUtilities . getBroadcastAddress ( ) ) ) 
 { 
 throw new RuntimeException ( String . format ( " A node with address % s already exists , cancelling join . " + 
 " Use cassandra . replace _ address if you want to replace this node . " ,

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index ac4c010 . . c01b4a8 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 3 + 1 , 7 @ @ 
 + 2 . 0 . 3 
 + * Reject bootstrapping if the node already exists in gossip ( CASSANDRA - 5571 ) 
 + 
 + 
 2 . 0 . 2 
 * Update FailureDetector to use nanontime ( CASSANDRA - 4925 ) 
 * Fix FileCacheService regressions ( CASSANDRA - 6149 )
