BLEU SCORE: 0.043008477182523305

TEST MSG: Correct the messaging versions used in ThirdHandshakeMessage .
GENERATED MSG: r / m unused " listening " distinction in TcpConnection

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / net / async / HandshakeProtocol . java b / src / java / org / apache / cassandra / net / async / HandshakeProtocol . java <nl> index 327b20e . . ebf26bd 100644 <nl> - - - a / src / java / org / apache / cassandra / net / async / HandshakeProtocol . java <nl> + + + b / src / java / org / apache / cassandra / net / async / HandshakeProtocol . java <nl> @ @ - 214 , 6 + 214 , 7 @ @ public class HandshakeProtocol <nl> * The third message of the handshake , sent by the connection initiator on reception of { @ link SecondHandshakeMessage } . <nl> * This message contains : <nl> * 1 ) the connection initiator ' s messaging version ( 4 bytes ) - { @ link org . apache . cassandra . net . MessagingService # current _ version } . <nl> + * This indicates the max messaging version supported by this node . <nl> * 2 ) the connection initiator ' s broadcast address as encoded by { @ link org . apache . cassandra . net . CompactEndpointSerializationHelper } . <nl> * This can be either 5 bytes for an IPv4 address , or 17 bytes for an IPv6 one . <nl> * < p > <nl> @ @ - 230 , 6 + 231 , 9 @ @ public class HandshakeProtocol <nl> * / <nl> private static final int MIN _ LENGTH = 9 ; <nl> <nl> + / * * <nl> + * The internode messaging version of the peer ; used for serializing to a version the peer understands . <nl> + * / <nl> final int messagingVersion ; <nl> final InetAddressAndPort address ; <nl> <nl> @ @ - 245 , 7 + 249 , 9 @ @ public class HandshakeProtocol <nl> int bufLength = Ints . checkedCast ( Integer . BYTES + CompactEndpointSerializationHelper . instance . serializedSize ( address , messagingVersion ) ) ; <nl> ByteBuf buffer = allocator . directBuffer ( bufLength , bufLength ) ; <nl> buffer . writerIndex ( 0 ) ; <nl> - buffer . writeInt ( messagingVersion ) ; <nl> + <nl> + / / the max messaging version supported by the local node ( not # messagingVersion ) <nl> + buffer . writeInt ( MessagingService . current _ version ) ; <nl> try <nl> { <nl> DataOutputPlus dop = new ByteBufDataOutputPlus ( buffer ) ; <nl> diff - - git a / src / java / org / apache / cassandra / net / async / OutboundHandshakeHandler . java b / src / java / org / apache / cassandra / net / async / OutboundHandshakeHandler . java <nl> index c555bed . . 3ccbf49 100644 <nl> - - - a / src / java / org / apache / cassandra / net / async / OutboundHandshakeHandler . java <nl> + + + b / src / java / org / apache / cassandra / net / async / OutboundHandshakeHandler . java <nl> @ @ - 177 , 7 + 177 , 7 @ @ public class OutboundHandshakeHandler extends ByteToMessageDecoder <nl> <nl> try <nl> { <nl> - ctx . writeAndFlush ( new ThirdHandshakeMessage ( MessagingService . current _ version , connectionId . local ( ) ) . encode ( ctx . alloc ( ) ) ) ; <nl> + ctx . writeAndFlush ( new ThirdHandshakeMessage ( peerMessagingVersion , connectionId . local ( ) ) . encode ( ctx . alloc ( ) ) ) ; <nl> ChannelWriter channelWriter = setupPipeline ( ctx . channel ( ) , peerMessagingVersion ) ; <nl> callback . accept ( HandshakeResult . success ( channelWriter , peerMessagingVersion ) ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / net / EndPoint . java b / src / java / org / apache / cassandra / net / EndPoint . java <nl> index 7eceb84 . . 45f7749 100644 <nl> - - - a / src / java / org / apache / cassandra / net / EndPoint . java <nl> + + + b / src / java / org / apache / cassandra / net / EndPoint . java <nl> @ @ - 36 , 22 + 36 , 6 @ @ public class EndPoint implements Serializable , Comparable < EndPoint > <nl> private static final long serialVersionUID = - 4962625949179835907L ; <nl> private static Map < CharBuffer , String > hostNames _ = new HashMap < CharBuffer , String > ( ) ; <nl> <nl> - / / use as a kind of magic number to send ourselves a message indicating listening state <nl> - protected static final int sentinelPort _ = 5555 ; <nl> - protected static EndPoint sentinelLocalEndPoint _ ; <nl> - <nl> - static <nl> - { <nl> - try <nl> - { <nl> - sentinelLocalEndPoint _ = new EndPoint ( FBUtilities . getHostAddress ( ) , EndPoint . sentinelPort _ ) ; <nl> - } <nl> - catch ( UnknownHostException e ) <nl> - { <nl> - throw new AssertionError ( e ) ; <nl> - } <nl> - } <nl> - <nl> private String host _ ; <nl> private int port _ ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java <nl> index 57bc228 . . 47d3b2d 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessagingService . java <nl> + + + b / src / java / org / apache / cassandra / net / MessagingService . java <nl> @ @ - 564 , 7 + 564 , 7 @ @ public class MessagingService implements IMessagingService <nl> return n ; <nl> } <nl> <nl> - public static ByteBuffer packIt ( byte [ ] bytes , boolean compress , boolean stream , boolean listening ) <nl> + public static ByteBuffer packIt ( byte [ ] bytes , boolean compress , boolean stream ) <nl> { <nl> byte [ ] size = toByteArray ( bytes . length ) ; <nl> / * <nl> @ @ - 573 , 10 + 573 , 7 @ @ public class MessagingService implements IMessagingService <nl> the serializer type . The 3rd bit indicates if compression <nl> is turned on or off . It is turned off by default . The 4th <nl> bit indicates if we are in streaming mode . It is turned off <nl> - by default . The 5th bit is used to indicate that the sender <nl> - is not listening on any well defined port . This implies the <nl> - receiver needs to cache the connection using the port on the <nl> - socket . The following 3 bits are reserved for future use . <nl> + by default . The 5th - 8th bits are reserved for future use . <nl> The next 8 bits indicate a version number . Remaining 15 bits <nl> are not used currently . <nl> * / <nl> @ @ - 591 , 11 + 588 , 7 @ @ public class MessagingService implements IMessagingService <nl> if ( stream ) <nl> n | = 8 ; <nl> <nl> - / / set listening 5th bit <nl> - if ( listening ) <nl> - n | = 16 ; <nl> - <nl> - / / Setting up the version bit <nl> + / / Setting up the version bit <nl> n | = ( version _ < < 8 ) ; <nl> / * Finished the protocol header setup * / <nl> <nl> diff - - git a / src / java / org / apache / cassandra / net / ProtocolHeader . java b / src / java / org / apache / cassandra / net / ProtocolHeader . java <nl> index 5dd4aaa . . 8c88813 100644 <nl> - - - a / src / java / org / apache / cassandra / net / ProtocolHeader . java <nl> + + + b / src / java / org / apache / cassandra / net / ProtocolHeader . java <nl> @ @ - 27 , 6 + 27 , 5 @ @ public final class ProtocolHeader <nl> public int serializerType _ ; <nl> public boolean isCompressed _ ; <nl> public boolean isStreamingMode _ ; <nl> - public boolean isListening _ ; <nl> public int version _ ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / net / TcpConnection . java b / src / java / org / apache / cassandra / net / TcpConnection . java <nl> index 9a0f740 . . ae5325b 100644 <nl> - - - a / src / java / org / apache / cassandra / net / TcpConnection . java <nl> + + + b / src / java / org / apache / cassandra / net / TcpConnection . java <nl> @ @ - 164 , 8 + 164 , 7 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable <nl> byte [ ] data = serializer _ . serialize ( message ) ; <nl> if ( data . length > 0 ) <nl> { <nl> - boolean listening = ! message . getFrom ( ) . equals ( EndPoint . sentinelLocalEndPoint _ ) ; <nl> - ByteBuffer buffer = MessagingService . packIt ( data , false , false , listening ) ; <nl> + ByteBuffer buffer = MessagingService . packIt ( data , false , false ) ; <nl> synchronized ( this ) <nl> { <nl> if ( ! pendingWrites _ . isEmpty ( ) | | ! socketChannel _ . isConnected ( ) ) <nl> @ @ - 445 , 7 + 444 , 7 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable <nl> <nl> try <nl> { <nl> - byte [ ] bytes = new byte [ 0 ] ; <nl> + byte [ ] bytes ; <nl> while ( ( bytes = tcpReader _ . read ( ) ) . length > 0 ) <nl> { <nl> ProtocolHeader pH = tcpReader _ . getProtocolHeader ( ) ; <nl> @ @ - 453 , 9 + 452 , 8 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable <nl> { <nl> / * first message received * / <nl> if ( remoteEp _ = = null ) <nl> - { <nl> - int port = ( pH . isListening _ ) ? DatabaseDescriptor . getStoragePort ( ) : EndPoint . sentinelPort _ ; <nl> - remoteEp _ = new EndPoint ( socketChannel _ . socket ( ) . getInetAddress ( ) . getHostAddress ( ) , port ) ; <nl> + { <nl> + remoteEp _ = new EndPoint ( socketChannel _ . socket ( ) . getInetAddress ( ) . getHostAddress ( ) , DatabaseDescriptor . getStoragePort ( ) ) ; <nl> / / put connection into pool if possible <nl> pool _ = MessagingService . getConnectionPool ( localEp _ , remoteEp _ ) ; <nl> pool _ . addToPool ( TcpConnection . this ) ; <nl> diff - - git a / src / java / org / apache / cassandra / net / io / ProtocolHeaderState . java b / src / java / org / apache / cassandra / net / io / ProtocolHeaderState . java <nl> index 9a2708a . . 9fe6d60 100644 <nl> - - - a / src / java / org / apache / cassandra / net / io / ProtocolHeaderState . java <nl> + + + b / src / java / org / apache / cassandra / net / io / ProtocolHeaderState . java <nl> @ @ - 53 , 9 + 53 , 6 @ @ public class ProtocolHeaderState extends StartState <nl> if ( stream _ . getProtocolHeader ( ) . isStreamingMode _ ) <nl> MessagingService . setStreamingMode ( true ) ; <nl> <nl> - int listening = MessagingService . getBits ( pH , 4 , 1 ) ; <nl> - stream _ . getProtocolHeader ( ) . isListening _ = ( listening = = 1 ) ? true : false ; <nl> - <nl> int version = MessagingService . getBits ( pH , 15 , 8 ) ; <nl> stream _ . getProtocolHeader ( ) . version _ = version ; <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / net / async / HandshakeProtocol . java b / src / java / org / apache / cassandra / net / async / HandshakeProtocol . java 
 index 327b20e . . ebf26bd 100644 
 - - - a / src / java / org / apache / cassandra / net / async / HandshakeProtocol . java 
 + + + b / src / java / org / apache / cassandra / net / async / HandshakeProtocol . java 
 @ @ - 214 , 6 + 214 , 7 @ @ public class HandshakeProtocol 
 * The third message of the handshake , sent by the connection initiator on reception of { @ link SecondHandshakeMessage } . 
 * This message contains : 
 * 1 ) the connection initiator ' s messaging version ( 4 bytes ) - { @ link org . apache . cassandra . net . MessagingService # current _ version } . 
 + * This indicates the max messaging version supported by this node . 
 * 2 ) the connection initiator ' s broadcast address as encoded by { @ link org . apache . cassandra . net . CompactEndpointSerializationHelper } . 
 * This can be either 5 bytes for an IPv4 address , or 17 bytes for an IPv6 one . 
 * < p > 
 @ @ - 230 , 6 + 231 , 9 @ @ public class HandshakeProtocol 
 * / 
 private static final int MIN _ LENGTH = 9 ; 
 
 + / * * 
 + * The internode messaging version of the peer ; used for serializing to a version the peer understands . 
 + * / 
 final int messagingVersion ; 
 final InetAddressAndPort address ; 
 
 @ @ - 245 , 7 + 249 , 9 @ @ public class HandshakeProtocol 
 int bufLength = Ints . checkedCast ( Integer . BYTES + CompactEndpointSerializationHelper . instance . serializedSize ( address , messagingVersion ) ) ; 
 ByteBuf buffer = allocator . directBuffer ( bufLength , bufLength ) ; 
 buffer . writerIndex ( 0 ) ; 
 - buffer . writeInt ( messagingVersion ) ; 
 + 
 + / / the max messaging version supported by the local node ( not # messagingVersion ) 
 + buffer . writeInt ( MessagingService . current _ version ) ; 
 try 
 { 
 DataOutputPlus dop = new ByteBufDataOutputPlus ( buffer ) ; 
 diff - - git a / src / java / org / apache / cassandra / net / async / OutboundHandshakeHandler . java b / src / java / org / apache / cassandra / net / async / OutboundHandshakeHandler . java 
 index c555bed . . 3ccbf49 100644 
 - - - a / src / java / org / apache / cassandra / net / async / OutboundHandshakeHandler . java 
 + + + b / src / java / org / apache / cassandra / net / async / OutboundHandshakeHandler . java 
 @ @ - 177 , 7 + 177 , 7 @ @ public class OutboundHandshakeHandler extends ByteToMessageDecoder 
 
 try 
 { 
 - ctx . writeAndFlush ( new ThirdHandshakeMessage ( MessagingService . current _ version , connectionId . local ( ) ) . encode ( ctx . alloc ( ) ) ) ; 
 + ctx . writeAndFlush ( new ThirdHandshakeMessage ( peerMessagingVersion , connectionId . local ( ) ) . encode ( ctx . alloc ( ) ) ) ; 
 ChannelWriter channelWriter = setupPipeline ( ctx . channel ( ) , peerMessagingVersion ) ; 
 callback . accept ( HandshakeResult . success ( channelWriter , peerMessagingVersion ) ) ; 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / net / EndPoint . java b / src / java / org / apache / cassandra / net / EndPoint . java 
 index 7eceb84 . . 45f7749 100644 
 - - - a / src / java / org / apache / cassandra / net / EndPoint . java 
 + + + b / src / java / org / apache / cassandra / net / EndPoint . java 
 @ @ - 36 , 22 + 36 , 6 @ @ public class EndPoint implements Serializable , Comparable < EndPoint > 
 private static final long serialVersionUID = - 4962625949179835907L ; 
 private static Map < CharBuffer , String > hostNames _ = new HashMap < CharBuffer , String > ( ) ; 
 
 - / / use as a kind of magic number to send ourselves a message indicating listening state 
 - protected static final int sentinelPort _ = 5555 ; 
 - protected static EndPoint sentinelLocalEndPoint _ ; 
 - 
 - static 
 - { 
 - try 
 - { 
 - sentinelLocalEndPoint _ = new EndPoint ( FBUtilities . getHostAddress ( ) , EndPoint . sentinelPort _ ) ; 
 - } 
 - catch ( UnknownHostException e ) 
 - { 
 - throw new AssertionError ( e ) ; 
 - } 
 - } 
 - 
 private String host _ ; 
 private int port _ ; 
 
 diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java 
 index 57bc228 . . 47d3b2d 100644 
 - - - a / src / java / org / apache / cassandra / net / MessagingService . java 
 + + + b / src / java / org / apache / cassandra / net / MessagingService . java 
 @ @ - 564 , 7 + 564 , 7 @ @ public class MessagingService implements IMessagingService 
 return n ; 
 } 
 
 - public static ByteBuffer packIt ( byte [ ] bytes , boolean compress , boolean stream , boolean listening ) 
 + public static ByteBuffer packIt ( byte [ ] bytes , boolean compress , boolean stream ) 
 { 
 byte [ ] size = toByteArray ( bytes . length ) ; 
 / * 
 @ @ - 573 , 10 + 573 , 7 @ @ public class MessagingService implements IMessagingService 
 the serializer type . The 3rd bit indicates if compression 
 is turned on or off . It is turned off by default . The 4th 
 bit indicates if we are in streaming mode . It is turned off 
 - by default . The 5th bit is used to indicate that the sender 
 - is not listening on any well defined port . This implies the 
 - receiver needs to cache the connection using the port on the 
 - socket . The following 3 bits are reserved for future use . 
 + by default . The 5th - 8th bits are reserved for future use . 
 The next 8 bits indicate a version number . Remaining 15 bits 
 are not used currently . 
 * / 
 @ @ - 591 , 11 + 588 , 7 @ @ public class MessagingService implements IMessagingService 
 if ( stream ) 
 n | = 8 ; 
 
 - / / set listening 5th bit 
 - if ( listening ) 
 - n | = 16 ; 
 - 
 - / / Setting up the version bit 
 + / / Setting up the version bit 
 n | = ( version _ < < 8 ) ; 
 / * Finished the protocol header setup * / 
 
 diff - - git a / src / java / org / apache / cassandra / net / ProtocolHeader . java b / src / java / org / apache / cassandra / net / ProtocolHeader . java 
 index 5dd4aaa . . 8c88813 100644 
 - - - a / src / java / org / apache / cassandra / net / ProtocolHeader . java 
 + + + b / src / java / org / apache / cassandra / net / ProtocolHeader . java 
 @ @ - 27 , 6 + 27 , 5 @ @ public final class ProtocolHeader 
 public int serializerType _ ; 
 public boolean isCompressed _ ; 
 public boolean isStreamingMode _ ; 
 - public boolean isListening _ ; 
 public int version _ ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / net / TcpConnection . java b / src / java / org / apache / cassandra / net / TcpConnection . java 
 index 9a0f740 . . ae5325b 100644 
 - - - a / src / java / org / apache / cassandra / net / TcpConnection . java 
 + + + b / src / java / org / apache / cassandra / net / TcpConnection . java 
 @ @ - 164 , 8 + 164 , 7 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable 
 byte [ ] data = serializer _ . serialize ( message ) ; 
 if ( data . length > 0 ) 
 { 
 - boolean listening = ! message . getFrom ( ) . equals ( EndPoint . sentinelLocalEndPoint _ ) ; 
 - ByteBuffer buffer = MessagingService . packIt ( data , false , false , listening ) ; 
 + ByteBuffer buffer = MessagingService . packIt ( data , false , false ) ; 
 synchronized ( this ) 
 { 
 if ( ! pendingWrites _ . isEmpty ( ) | | ! socketChannel _ . isConnected ( ) ) 
 @ @ - 445 , 7 + 444 , 7 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable 
 
 try 
 { 
 - byte [ ] bytes = new byte [ 0 ] ; 
 + byte [ ] bytes ; 
 while ( ( bytes = tcpReader _ . read ( ) ) . length > 0 ) 
 { 
 ProtocolHeader pH = tcpReader _ . getProtocolHeader ( ) ; 
 @ @ - 453 , 9 + 452 , 8 @ @ public class TcpConnection extends SelectionKeyHandler implements Comparable 
 { 
 / * first message received * / 
 if ( remoteEp _ = = null ) 
 - { 
 - int port = ( pH . isListening _ ) ? DatabaseDescriptor . getStoragePort ( ) : EndPoint . sentinelPort _ ; 
 - remoteEp _ = new EndPoint ( socketChannel _ . socket ( ) . getInetAddress ( ) . getHostAddress ( ) , port ) ; 
 + { 
 + remoteEp _ = new EndPoint ( socketChannel _ . socket ( ) . getInetAddress ( ) . getHostAddress ( ) , DatabaseDescriptor . getStoragePort ( ) ) ; 
 / / put connection into pool if possible 
 pool _ = MessagingService . getConnectionPool ( localEp _ , remoteEp _ ) ; 
 pool _ . addToPool ( TcpConnection . this ) ; 
 diff - - git a / src / java / org / apache / cassandra / net / io / ProtocolHeaderState . java b / src / java / org / apache / cassandra / net / io / ProtocolHeaderState . java 
 index 9a2708a . . 9fe6d60 100644 
 - - - a / src / java / org / apache / cassandra / net / io / ProtocolHeaderState . java 
 + + + b / src / java / org / apache / cassandra / net / io / ProtocolHeaderState . java 
 @ @ - 53 , 9 + 53 , 6 @ @ public class ProtocolHeaderState extends StartState 
 if ( stream _ . getProtocolHeader ( ) . isStreamingMode _ ) 
 MessagingService . setStreamingMode ( true ) ; 
 
 - int listening = MessagingService . getBits ( pH , 4 , 1 ) ; 
 - stream _ . getProtocolHeader ( ) . isListening _ = ( listening = = 1 ) ? true : false ; 
 - 
 int version = MessagingService . getBits ( pH , 15 , 8 ) ; 
 stream _ . getProtocolHeader ( ) . version _ = version ; 

