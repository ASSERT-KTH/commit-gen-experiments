BLEU SCORE: 0.014199193612838947

TEST MSG: Remove usage of suitename that is causing some tasks to silently fail in cassci
GENERATED MSG: unify test timeouts , exclude pig

TEST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 82ec33e . . d5e3869 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 1206 , 7 + 1206 , 7 @ @ <nl> < / target > <nl> <nl> < target name = " testold " depends = " build - test " description = " Execute unit tests " > <nl> - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " exclude = " * * / pig / * . java " timeout = " $ { test . timeout } " > <nl> + < testmacro inputdir = " $ { test . unit . src } " exclude = " * * / pig / * . java " timeout = " $ { test . timeout } " > <nl> < jvmarg value = " - Dlegacy - sstable - root = $ { test . data } / legacy - sstables " / > <nl> < jvmarg value = " - Dinvalid - legacy - sstable - root = $ { test . data } / invalid - legacy - sstables " / > <nl> < jvmarg value = " - Dcorrupt - sstable - root = $ { test . data } / corrupt - sstables " / > <nl> @ @ - 1279 , 7 + 1279 , 7 @ @ <nl> ant testsome - Dtest . name = org . apache . cassandra . service . StorageServiceServerTest - Dtest . methods = testRegularMode , testGetAllRangesEmpty <nl> - - > <nl> < target name = " testsome " depends = " build - test " description = " Execute specific unit tests " > <nl> - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " exclude = " * * / pig / * . java " timeout = " $ { test . timeout } " > <nl> + < testmacro inputdir = " $ { test . unit . src } " exclude = " * * / pig / * . java " timeout = " $ { test . timeout } " > <nl> < test name = " $ { test . name } " methods = " $ { test . methods } " / > <nl> < jvmarg value = " - Dlegacy - sstable - root = $ { test . data } / legacy - sstables " / > <nl> < jvmarg value = " - Dinvalid - legacy - sstable - root = $ { test . data } / invalid - legacy - sstables " / > <nl> @ @ - 1305 , 39 + 1305 , 39 @ @ <nl> < / target > <nl> <nl> < target name = " msg - ser - gen - test " depends = " build - test " description = " Generates message serializations " > <nl> - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " <nl> + < testmacro inputdir = " $ { test . unit . src } " <nl> timeout = " $ { test . timeout } " filter = " * * / SerializationsTest . java " > <nl> < jvmarg value = " - Dcassandra . test - serialization - writes = True " / > <nl> < / testmacro > <nl> < / target > <nl> <nl> < target name = " msg - ser - test " depends = " build - test " description = " Tests message serializations " > <nl> - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " timeout = " $ { test . timeout } " <nl> + < testmacro inputdir = " $ { test . unit . src } " timeout = " $ { test . timeout } " <nl> filter = " * * / SerializationsTest . java " / > <nl> < / target > <nl> <nl> < target name = " msg - ser - test - 7 " depends = " build - test " description = " Generates message serializations " > <nl> - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " <nl> + < testmacro inputdir = " $ { test . unit . src } " <nl> timeout = " $ { test . timeout } " filter = " * * / SerializationsTest . java " > <nl> < jvmarg value = " - Dcassandra . version = 0 . 7 " / > <nl> < / testmacro > <nl> < / target > <nl> <nl> < target name = " msg - ser - test - 10 " depends = " build - test " description = " Tests message serializations on 1 . 0 messages " > <nl> - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " <nl> + < testmacro inputdir = " $ { test . unit . src } " <nl> timeout = " $ { test . timeout } " filter = " * * / SerializationsTest . java " > <nl> < jvmarg value = " - Dcassandra . version = 1 . 0 " / > <nl> < / testmacro > <nl> < / target > <nl> <nl> < target name = " test - burn " depends = " build - test " description = " Execute functional tests " > <nl> - < testmacro suitename = " burn " inputdir = " $ { test . burn . src } " <nl> + < testmacro inputdir = " $ { test . burn . src } " <nl> timeout = " $ { test . burn . timeout } " > <nl> < / testmacro > <nl> < / target > <nl> <nl> < target name = " long - test " depends = " build - test " description = " Execute functional tests " > <nl> - < testmacro suitename = " long " inputdir = " $ { test . long . src } " <nl> + < testmacro inputdir = " $ { test . long . src } " <nl> timeout = " $ { test . long . timeout } " > <nl> < jvmarg value = " - Dcassandra . ring _ delay _ ms = 1000 " / > <nl> < jvmarg value = " - Dcassandra . tolerate _ sstable _ size = true " / > <nl> @ @ - 1418 , 7 + 1418 , 7 @ @ <nl> < / target > <nl> <nl> < target name = " pig - test " depends = " build - test , maven - ant - tasks - retrieve - pig - test " description = " Excute Pig tests " > <nl> - < testmacro suitename = " pig " inputdir = " $ { test . pig . src } " <nl> + < testmacro inputdir = " $ { test . pig . src } " <nl> timeout = " 1200000 " > <nl> < / testmacro > <nl> < / target > <nl> @ @ - 1549 , 7 + 1549 , 6 @ @ <nl> <nl> < ! - - Run tests not in parallel and reports errors and generates a junit report after - - > <nl> < macrodef name = " testmacro " > <nl> - < attribute name = " suitename " / > <nl> < attribute name = " inputdir " / > <nl> < attribute name = " timeout " default = " $ { test . timeout } " / > <nl> < attribute name = " forkmode " default = " perTest " / > <nl> @ @ - 1561 , 7 + 1560 , 7 @ @ <nl> < attribute name = " testtag " default = " " / > <nl> <nl> < sequential > <nl> - < testmacrohelper suitename = " @ { suitename } " inputdir = " @ { inputdir } " timeout = " @ { timeout } " <nl> + < testmacrohelper inputdir = " @ { inputdir } " timeout = " @ { timeout } " <nl> forkmode = " @ { forkmode } " filter = " @ { filter } " <nl> exclude = " @ { exclude } " filelist = " @ { filelist } " poffset = " @ { poffset } " <nl> testtag = " @ { testtag } " >
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / build . xml b / build . xml 
 index 82ec33e . . d5e3869 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 1206 , 7 + 1206 , 7 @ @ 
 < / target > 
 
 < target name = " testold " depends = " build - test " description = " Execute unit tests " > 
 - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " exclude = " * * / pig / * . java " timeout = " $ { test . timeout } " > 
 + < testmacro inputdir = " $ { test . unit . src } " exclude = " * * / pig / * . java " timeout = " $ { test . timeout } " > 
 < jvmarg value = " - Dlegacy - sstable - root = $ { test . data } / legacy - sstables " / > 
 < jvmarg value = " - Dinvalid - legacy - sstable - root = $ { test . data } / invalid - legacy - sstables " / > 
 < jvmarg value = " - Dcorrupt - sstable - root = $ { test . data } / corrupt - sstables " / > 
 @ @ - 1279 , 7 + 1279 , 7 @ @ 
 ant testsome - Dtest . name = org . apache . cassandra . service . StorageServiceServerTest - Dtest . methods = testRegularMode , testGetAllRangesEmpty 
 - - > 
 < target name = " testsome " depends = " build - test " description = " Execute specific unit tests " > 
 - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " exclude = " * * / pig / * . java " timeout = " $ { test . timeout } " > 
 + < testmacro inputdir = " $ { test . unit . src } " exclude = " * * / pig / * . java " timeout = " $ { test . timeout } " > 
 < test name = " $ { test . name } " methods = " $ { test . methods } " / > 
 < jvmarg value = " - Dlegacy - sstable - root = $ { test . data } / legacy - sstables " / > 
 < jvmarg value = " - Dinvalid - legacy - sstable - root = $ { test . data } / invalid - legacy - sstables " / > 
 @ @ - 1305 , 39 + 1305 , 39 @ @ 
 < / target > 
 
 < target name = " msg - ser - gen - test " depends = " build - test " description = " Generates message serializations " > 
 - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " 
 + < testmacro inputdir = " $ { test . unit . src } " 
 timeout = " $ { test . timeout } " filter = " * * / SerializationsTest . java " > 
 < jvmarg value = " - Dcassandra . test - serialization - writes = True " / > 
 < / testmacro > 
 < / target > 
 
 < target name = " msg - ser - test " depends = " build - test " description = " Tests message serializations " > 
 - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " timeout = " $ { test . timeout } " 
 + < testmacro inputdir = " $ { test . unit . src } " timeout = " $ { test . timeout } " 
 filter = " * * / SerializationsTest . java " / > 
 < / target > 
 
 < target name = " msg - ser - test - 7 " depends = " build - test " description = " Generates message serializations " > 
 - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " 
 + < testmacro inputdir = " $ { test . unit . src } " 
 timeout = " $ { test . timeout } " filter = " * * / SerializationsTest . java " > 
 < jvmarg value = " - Dcassandra . version = 0 . 7 " / > 
 < / testmacro > 
 < / target > 
 
 < target name = " msg - ser - test - 10 " depends = " build - test " description = " Tests message serializations on 1 . 0 messages " > 
 - < testmacro suitename = " unit " inputdir = " $ { test . unit . src } " 
 + < testmacro inputdir = " $ { test . unit . src } " 
 timeout = " $ { test . timeout } " filter = " * * / SerializationsTest . java " > 
 < jvmarg value = " - Dcassandra . version = 1 . 0 " / > 
 < / testmacro > 
 < / target > 
 
 < target name = " test - burn " depends = " build - test " description = " Execute functional tests " > 
 - < testmacro suitename = " burn " inputdir = " $ { test . burn . src } " 
 + < testmacro inputdir = " $ { test . burn . src } " 
 timeout = " $ { test . burn . timeout } " > 
 < / testmacro > 
 < / target > 
 
 < target name = " long - test " depends = " build - test " description = " Execute functional tests " > 
 - < testmacro suitename = " long " inputdir = " $ { test . long . src } " 
 + < testmacro inputdir = " $ { test . long . src } " 
 timeout = " $ { test . long . timeout } " > 
 < jvmarg value = " - Dcassandra . ring _ delay _ ms = 1000 " / > 
 < jvmarg value = " - Dcassandra . tolerate _ sstable _ size = true " / > 
 @ @ - 1418 , 7 + 1418 , 7 @ @ 
 < / target > 
 
 < target name = " pig - test " depends = " build - test , maven - ant - tasks - retrieve - pig - test " description = " Excute Pig tests " > 
 - < testmacro suitename = " pig " inputdir = " $ { test . pig . src } " 
 + < testmacro inputdir = " $ { test . pig . src } " 
 timeout = " 1200000 " > 
 < / testmacro > 
 < / target > 
 @ @ - 1549 , 7 + 1549 , 6 @ @ 
 
 < ! - - Run tests not in parallel and reports errors and generates a junit report after - - > 
 < macrodef name = " testmacro " > 
 - < attribute name = " suitename " / > 
 < attribute name = " inputdir " / > 
 < attribute name = " timeout " default = " $ { test . timeout } " / > 
 < attribute name = " forkmode " default = " perTest " / > 
 @ @ - 1561 , 7 + 1560 , 7 @ @ 
 < attribute name = " testtag " default = " " / > 
 
 < sequential > 
 - < testmacrohelper suitename = " @ { suitename } " inputdir = " @ { inputdir } " timeout = " @ { timeout } " 
 + < testmacrohelper inputdir = " @ { inputdir } " timeout = " @ { timeout } " 
 forkmode = " @ { forkmode } " filter = " @ { filter } " 
 exclude = " @ { exclude } " filelist = " @ { filelist } " poffset = " @ { poffset } " 
 testtag = " @ { testtag } " >

NEAREST DIFF:
ELIMINATEDSENTENCE
