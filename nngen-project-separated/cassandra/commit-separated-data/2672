BLEU SCORE: 0.033864985683445356

TEST MSG: simply : no need for iterator to get first item in List
GENERATED MSG: Allow nodetool to optionally resolve hostnames .

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java b / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java <nl> index 85ca069 . . b0c7db8 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java <nl> @ @ - 71 , 7 + 71 , 7 @ @ public class UpdateStatement extends ModificationStatement <nl> if ( cfm . comparator . isDense ( ) ) <nl> { <nl> if ( prefix . isEmpty ( ) ) <nl> - throw new InvalidRequestException ( String . format ( " Missing PRIMARY KEY part % s " , cfm . clusteringColumns ( ) . iterator ( ) . next ( ) ) ) ; <nl> + throw new InvalidRequestException ( String . format ( " Missing PRIMARY KEY part % s " , cfm . clusteringColumns ( ) . get ( 0 ) ) ) ; <nl> <nl> / / An empty name for the compact value is what we use to recognize the case where there is not column <nl> / / outside the PK , see CreateStatement . <nl> diff - - git a / test / unit / org / apache / cassandra / db / RowIterationTest . java b / test / unit / org / apache / cassandra / db / RowIterationTest . java <nl> index bfba858 . . 34fbf82 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / RowIterationTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / RowIterationTest . java <nl> @ @ - 82 , 7 + 82 , 7 @ @ public class RowIterationTest extends SchemaLoader <nl> rm . apply ( ) ; <nl> store . forceBlockingFlush ( ) ; <nl> <nl> - ColumnFamily cf = Util . getRangeSlice ( store ) . iterator ( ) . next ( ) . cf ; <nl> + ColumnFamily cf = Util . getRangeSlice ( store ) . get ( 0 ) . cf ; <nl> assert cf . deletionInfo ( ) . equals ( delInfo2 ) ; <nl> } <nl> <nl> @ @ - 100 , 7 + 100 , 7 @ @ public class RowIterationTest extends SchemaLoader <nl> rm . apply ( ) ; <nl> store . forceBlockingFlush ( ) ; <nl> <nl> - ColumnFamily cf = Util . getRangeSlice ( store ) . iterator ( ) . next ( ) . cf ; <nl> + ColumnFamily cf = Util . getRangeSlice ( store ) . get ( 0 ) . cf ; <nl> assert cf ! = null ; <nl> } <nl> } <nl> diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java <nl> index bd50538 . . ecaa276 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java <nl> + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java <nl> @ @ - 201 , 7 + 201 , 7 @ @ public class SSTableReaderTest extends SchemaLoader <nl> long p6 = sstable . getPosition ( k ( 6 ) , SSTableReader . Operator . EQ ) . position ; <nl> long p7 = sstable . getPosition ( k ( 7 ) , SSTableReader . Operator . EQ ) . position ; <nl> <nl> - Pair < Long , Long > p = sstable . getPositionsForRanges ( makeRanges ( t ( 2 ) , t ( 6 ) ) ) . iterator ( ) . next ( ) ; <nl> + Pair < Long , Long > p = sstable . getPositionsForRanges ( makeRanges ( t ( 2 ) , t ( 6 ) ) ) . get ( 0 ) ; <nl> <nl> / / range are start exclusive so we should start at 3 <nl> assert p . left = = p3 ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java b / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java 
 index 85ca069 . . b0c7db8 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / UpdateStatement . java 
 @ @ - 71 , 7 + 71 , 7 @ @ public class UpdateStatement extends ModificationStatement 
 if ( cfm . comparator . isDense ( ) ) 
 { 
 if ( prefix . isEmpty ( ) ) 
 - throw new InvalidRequestException ( String . format ( " Missing PRIMARY KEY part % s " , cfm . clusteringColumns ( ) . iterator ( ) . next ( ) ) ) ; 
 + throw new InvalidRequestException ( String . format ( " Missing PRIMARY KEY part % s " , cfm . clusteringColumns ( ) . get ( 0 ) ) ) ; 
 
 / / An empty name for the compact value is what we use to recognize the case where there is not column 
 / / outside the PK , see CreateStatement . 
 diff - - git a / test / unit / org / apache / cassandra / db / RowIterationTest . java b / test / unit / org / apache / cassandra / db / RowIterationTest . java 
 index bfba858 . . 34fbf82 100644 
 - - - a / test / unit / org / apache / cassandra / db / RowIterationTest . java 
 + + + b / test / unit / org / apache / cassandra / db / RowIterationTest . java 
 @ @ - 82 , 7 + 82 , 7 @ @ public class RowIterationTest extends SchemaLoader 
 rm . apply ( ) ; 
 store . forceBlockingFlush ( ) ; 
 
 - ColumnFamily cf = Util . getRangeSlice ( store ) . iterator ( ) . next ( ) . cf ; 
 + ColumnFamily cf = Util . getRangeSlice ( store ) . get ( 0 ) . cf ; 
 assert cf . deletionInfo ( ) . equals ( delInfo2 ) ; 
 } 
 
 @ @ - 100 , 7 + 100 , 7 @ @ public class RowIterationTest extends SchemaLoader 
 rm . apply ( ) ; 
 store . forceBlockingFlush ( ) ; 
 
 - ColumnFamily cf = Util . getRangeSlice ( store ) . iterator ( ) . next ( ) . cf ; 
 + ColumnFamily cf = Util . getRangeSlice ( store ) . get ( 0 ) . cf ; 
 assert cf ! = null ; 
 } 
 } 
 diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java 
 index bd50538 . . ecaa276 100644 
 - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java 
 + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java 
 @ @ - 201 , 7 + 201 , 7 @ @ public class SSTableReaderTest extends SchemaLoader 
 long p6 = sstable . getPosition ( k ( 6 ) , SSTableReader . Operator . EQ ) . position ; 
 long p7 = sstable . getPosition ( k ( 7 ) , SSTableReader . Operator . EQ ) . position ; 
 
 - Pair < Long , Long > p = sstable . getPositionsForRanges ( makeRanges ( t ( 2 ) , t ( 6 ) ) ) . iterator ( ) . next ( ) ; 
 + Pair < Long , Long > p = sstable . getPositionsForRanges ( makeRanges ( t ( 2 ) , t ( 6 ) ) ) . get ( 0 ) ; 
 
 / / range are start exclusive so we should start at 3 
 assert p . left = = p3 ;

NEAREST DIFF:
ELIMINATEDSENTENCE
