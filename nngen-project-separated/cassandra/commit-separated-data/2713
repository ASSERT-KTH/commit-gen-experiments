BLEU SCORE: 0.23643540225079396

TEST MSG: merge from 2 . 0
GENERATED MSG: merge from 1 . 1

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 0b14ee7 . . 23a5173 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 67 , 6 + 67 , 7 @ @ Merged from 1 . 2 : <nl> * IN on the last clustering columns + ORDER BY DESC yield no results ( CASSANDRA - 6701 ) <nl> * Fix SecondaryIndexManager # deleteFromIndexes ( ) ( CASSANDRA - 6711 ) <nl> * Fix snapshot repair not snapshotting coordinator itself ( CASSANDRA - 6713 ) <nl> + * Support negative timestamps for CQL3 dates in query string ( CASSANDRA - 6718 ) <nl> <nl> <nl> 2 . 0 . 5 <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index ca4ff0a . . 76160ea 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 1734 , 17 + 1734 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> return repairedSSTables ; <nl> } <nl> <nl> - abstract class AbstractViewSSTableFinder <nl> - { <nl> - abstract List < SSTableReader > findSSTables ( DataTracker . View view ) ; <nl> - protected List < SSTableReader > sstablesForRowBounds ( AbstractBounds < RowPosition > rowBounds , DataTracker . View view ) <nl> - { <nl> - RowPosition stopInTree = rowBounds . right . isMinimum ( ) ? view . intervalTree . max ( ) : rowBounds . right ; <nl> - return view . intervalTree . search ( Interval . < RowPosition , SSTableReader > create ( rowBounds . left , stopInTree ) ) ; <nl> - } <nl> - } <nl> - <nl> - private ViewFragment markReferenced ( AbstractViewSSTableFinder finder ) <nl> + private ViewFragment markReferenced ( Function < DataTracker . View , List < SSTableReader > > filter ) <nl> { <nl> List < SSTableReader > sstables ; <nl> DataTracker . View view ; <nl> @ @ - 1759 , 7 + 1749 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> break ; <nl> } <nl> <nl> - sstables = finder . findSSTables ( view ) ; <nl> + sstables = filter . apply ( view ) ; <nl> if ( SSTableReader . acquireReferences ( sstables ) ) <nl> break ; <nl> / / retry w / new view <nl> @ @ - 1775 , 9 + 1765 , 9 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> public ViewFragment markReferenced ( final DecoratedKey key ) <nl> { <nl> assert ! key . isMinimum ( ) ; <nl> - return markReferenced ( new AbstractViewSSTableFinder ( ) <nl> + return markReferenced ( new Function < DataTracker . View , List < SSTableReader > > ( ) <nl> { <nl> - List < SSTableReader > findSSTables ( DataTracker . View view ) <nl> + public List < SSTableReader > apply ( DataTracker . View view ) <nl> { <nl> return compactionStrategy . filterSSTablesForReads ( view . intervalTree . search ( key ) ) ; <nl> } <nl> @ @ - 1790 , 11 + 1780 , 11 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> * / <nl> public ViewFragment markReferenced ( final AbstractBounds < RowPosition > rowBounds ) <nl> { <nl> - return markReferenced ( new AbstractViewSSTableFinder ( ) <nl> + return markReferenced ( new Function < DataTracker . View , List < SSTableReader > > ( ) <nl> { <nl> - List < SSTableReader > findSSTables ( DataTracker . View view ) <nl> + public List < SSTableReader > apply ( DataTracker . View view ) <nl> { <nl> - return compactionStrategy . filterSSTablesForReads ( sstablesForRowBounds ( rowBounds , view ) ) ; <nl> + return compactionStrategy . filterSSTablesForReads ( view . sstablesInBounds ( rowBounds ) ) ; <nl> } <nl> } ) ; <nl> } <nl> @ @ - 1805 , 13 + 1795 , 13 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> * / <nl> public ViewFragment markReferenced ( final Collection < AbstractBounds < RowPosition > > rowBoundsCollection ) <nl> { <nl> - return markReferenced ( new AbstractViewSSTableFinder ( ) <nl> + return markReferenced ( new Function < DataTracker . View , List < SSTableReader > > ( ) <nl> { <nl> - List < SSTableReader > findSSTables ( DataTracker . View view ) <nl> + public List < SSTableReader > apply ( DataTracker . View view ) <nl> { <nl> Set < SSTableReader > sstables = Sets . newHashSet ( ) ; <nl> for ( AbstractBounds < RowPosition > rowBounds : rowBoundsCollection ) <nl> - sstables . addAll ( sstablesForRowBounds ( rowBounds , view ) ) ; <nl> + sstables . addAll ( view . sstablesInBounds ( rowBounds ) ) ; <nl> <nl> return ImmutableList . copyOf ( sstables ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / DataTracker . java b / src / java / org / apache / cassandra / db / DataTracker . java <nl> index e51f380 . . 30bd360 100644 <nl> - - - a / src / java / org / apache / cassandra / db / DataTracker . java <nl> + + + b / src / java / org / apache / cassandra / db / DataTracker . java <nl> @ @ - 24 , 20 + 24 , 19 @ @ import java . util . concurrent . atomic . AtomicReference ; <nl> <nl> import com . google . common . base . Predicate ; <nl> import com . google . common . collect . * ; <nl> - <nl> - import org . apache . cassandra . utils . concurrent . OpOrder ; <nl> - <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . db . compaction . OperationType ; <nl> + import org . apache . cassandra . dht . AbstractBounds ; <nl> import org . apache . cassandra . io . sstable . SSTableReader ; <nl> import org . apache . cassandra . io . util . FileUtils ; <nl> import org . apache . cassandra . metrics . StorageMetrics ; <nl> import org . apache . cassandra . notifications . * ; <nl> import org . apache . cassandra . utils . Interval ; <nl> import org . apache . cassandra . utils . IntervalTree ; <nl> + import org . apache . cassandra . utils . concurrent . OpOrder ; <nl> <nl> public class DataTracker <nl> { <nl> @ @ - 318 , 11 + 317 , 11 @ @ public class DataTracker <nl> void init ( ) <nl> { <nl> view . set ( new View ( <nl> - ImmutableList . of ( new Memtable ( cfstore ) ) , <nl> - ImmutableList . < Memtable > of ( ) , <nl> - Collections . < SSTableReader > emptySet ( ) , <nl> - Collections . < SSTableReader > emptySet ( ) , <nl> - SSTableIntervalTree . empty ( ) ) ) ; <nl> + ImmutableList . of ( new Memtable ( cfstore ) ) , <nl> + ImmutableList . < Memtable > of ( ) , <nl> + Collections . < SSTableReader > emptySet ( ) , <nl> + Collections . < SSTableReader > emptySet ( ) , <nl> + SSTableIntervalTree . empty ( ) ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 692 , 5 + 691 , 11 @ @ public class DataTracker <nl> { <nl> return String . format ( " View ( pending _ count = % d , sstables = % s , compacting = % s ) " , liveMemtables . size ( ) + flushingMemtables . size ( ) - 1 , sstables , compacting ) ; <nl> } <nl> + <nl> + public List < SSTableReader > sstablesInBounds ( AbstractBounds < RowPosition > rowBounds ) <nl> + { <nl> + RowPosition stopInTree = rowBounds . right . isMinimum ( liveMemtables . get ( 0 ) . cfs . partitioner ) ? intervalTree . max ( ) : rowBounds . right ; <nl> + return intervalTree . search ( Interval . < RowPosition , SSTableReader > create ( rowBounds . left , stopInTree ) ) ; <nl> + } <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / marshal / DateType . java b / src / java / org / apache / cassandra / db / marshal / DateType . java <nl> index 1ec6a8f . . 1ca5fa8 100644 <nl> - - - a / src / java / org / apache / cassandra / db / marshal / DateType . java <nl> + + + b / src / java / org / apache / cassandra / db / marshal / DateType . java <nl> @ @ - 71 , 7 + 71 , 7 @ @ public class DateType extends AbstractType < Date > <nl> millis = System . currentTimeMillis ( ) ; <nl> } <nl> / / Milliseconds since epoch ? <nl> - else if ( source . matches ( " ^ \ \ d + $ " ) ) <nl> + else if ( source . matches ( " ^ - ? \ \ d + $ " ) ) <nl> { <nl> try <nl> {
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> index a83fbab . . e2dc046 100644 <nl> - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> @ @ - 391 , 7 + 391 , 9 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean <nl> { <nl> Token < ? > token = StorageService . getPartitioner ( ) . getTokenFactory ( ) . fromByteArray ( row . key . key ) ; <nl> InetAddress target = StorageService . instance . getTokenMetadata ( ) . getEndpoint ( token ) ; <nl> - scheduleHintDelivery ( target ) ; <nl> + / / token may have since been removed ( in which case we have just read back a tombstone ) <nl> + if ( target ! = null ) <nl> + scheduleHintDelivery ( target ) ; <nl> } <nl> <nl> if ( logger _ . isDebugEnabled ( ) )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 0b14ee7 . . 23a5173 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 67 , 6 + 67 , 7 @ @ Merged from 1 . 2 : 
 * IN on the last clustering columns + ORDER BY DESC yield no results ( CASSANDRA - 6701 ) 
 * Fix SecondaryIndexManager # deleteFromIndexes ( ) ( CASSANDRA - 6711 ) 
 * Fix snapshot repair not snapshotting coordinator itself ( CASSANDRA - 6713 ) 
 + * Support negative timestamps for CQL3 dates in query string ( CASSANDRA - 6718 ) 
 
 
 2 . 0 . 5 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index ca4ff0a . . 76160ea 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 1734 , 17 + 1734 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 return repairedSSTables ; 
 } 
 
 - abstract class AbstractViewSSTableFinder 
 - { 
 - abstract List < SSTableReader > findSSTables ( DataTracker . View view ) ; 
 - protected List < SSTableReader > sstablesForRowBounds ( AbstractBounds < RowPosition > rowBounds , DataTracker . View view ) 
 - { 
 - RowPosition stopInTree = rowBounds . right . isMinimum ( ) ? view . intervalTree . max ( ) : rowBounds . right ; 
 - return view . intervalTree . search ( Interval . < RowPosition , SSTableReader > create ( rowBounds . left , stopInTree ) ) ; 
 - } 
 - } 
 - 
 - private ViewFragment markReferenced ( AbstractViewSSTableFinder finder ) 
 + private ViewFragment markReferenced ( Function < DataTracker . View , List < SSTableReader > > filter ) 
 { 
 List < SSTableReader > sstables ; 
 DataTracker . View view ; 
 @ @ - 1759 , 7 + 1749 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 break ; 
 } 
 
 - sstables = finder . findSSTables ( view ) ; 
 + sstables = filter . apply ( view ) ; 
 if ( SSTableReader . acquireReferences ( sstables ) ) 
 break ; 
 / / retry w / new view 
 @ @ - 1775 , 9 + 1765 , 9 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 public ViewFragment markReferenced ( final DecoratedKey key ) 
 { 
 assert ! key . isMinimum ( ) ; 
 - return markReferenced ( new AbstractViewSSTableFinder ( ) 
 + return markReferenced ( new Function < DataTracker . View , List < SSTableReader > > ( ) 
 { 
 - List < SSTableReader > findSSTables ( DataTracker . View view ) 
 + public List < SSTableReader > apply ( DataTracker . View view ) 
 { 
 return compactionStrategy . filterSSTablesForReads ( view . intervalTree . search ( key ) ) ; 
 } 
 @ @ - 1790 , 11 + 1780 , 11 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 * / 
 public ViewFragment markReferenced ( final AbstractBounds < RowPosition > rowBounds ) 
 { 
 - return markReferenced ( new AbstractViewSSTableFinder ( ) 
 + return markReferenced ( new Function < DataTracker . View , List < SSTableReader > > ( ) 
 { 
 - List < SSTableReader > findSSTables ( DataTracker . View view ) 
 + public List < SSTableReader > apply ( DataTracker . View view ) 
 { 
 - return compactionStrategy . filterSSTablesForReads ( sstablesForRowBounds ( rowBounds , view ) ) ; 
 + return compactionStrategy . filterSSTablesForReads ( view . sstablesInBounds ( rowBounds ) ) ; 
 } 
 } ) ; 
 } 
 @ @ - 1805 , 13 + 1795 , 13 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 * / 
 public ViewFragment markReferenced ( final Collection < AbstractBounds < RowPosition > > rowBoundsCollection ) 
 { 
 - return markReferenced ( new AbstractViewSSTableFinder ( ) 
 + return markReferenced ( new Function < DataTracker . View , List < SSTableReader > > ( ) 
 { 
 - List < SSTableReader > findSSTables ( DataTracker . View view ) 
 + public List < SSTableReader > apply ( DataTracker . View view ) 
 { 
 Set < SSTableReader > sstables = Sets . newHashSet ( ) ; 
 for ( AbstractBounds < RowPosition > rowBounds : rowBoundsCollection ) 
 - sstables . addAll ( sstablesForRowBounds ( rowBounds , view ) ) ; 
 + sstables . addAll ( view . sstablesInBounds ( rowBounds ) ) ; 
 
 return ImmutableList . copyOf ( sstables ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / DataTracker . java b / src / java / org / apache / cassandra / db / DataTracker . java 
 index e51f380 . . 30bd360 100644 
 - - - a / src / java / org / apache / cassandra / db / DataTracker . java 
 + + + b / src / java / org / apache / cassandra / db / DataTracker . java 
 @ @ - 24 , 20 + 24 , 19 @ @ import java . util . concurrent . atomic . AtomicReference ; 
 
 import com . google . common . base . Predicate ; 
 import com . google . common . collect . * ; 
 - 
 - import org . apache . cassandra . utils . concurrent . OpOrder ; 
 - 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . db . compaction . OperationType ; 
 + import org . apache . cassandra . dht . AbstractBounds ; 
 import org . apache . cassandra . io . sstable . SSTableReader ; 
 import org . apache . cassandra . io . util . FileUtils ; 
 import org . apache . cassandra . metrics . StorageMetrics ; 
 import org . apache . cassandra . notifications . * ; 
 import org . apache . cassandra . utils . Interval ; 
 import org . apache . cassandra . utils . IntervalTree ; 
 + import org . apache . cassandra . utils . concurrent . OpOrder ; 
 
 public class DataTracker 
 { 
 @ @ - 318 , 11 + 317 , 11 @ @ public class DataTracker 
 void init ( ) 
 { 
 view . set ( new View ( 
 - ImmutableList . of ( new Memtable ( cfstore ) ) , 
 - ImmutableList . < Memtable > of ( ) , 
 - Collections . < SSTableReader > emptySet ( ) , 
 - Collections . < SSTableReader > emptySet ( ) , 
 - SSTableIntervalTree . empty ( ) ) ) ; 
 + ImmutableList . of ( new Memtable ( cfstore ) ) , 
 + ImmutableList . < Memtable > of ( ) , 
 + Collections . < SSTableReader > emptySet ( ) , 
 + Collections . < SSTableReader > emptySet ( ) , 
 + SSTableIntervalTree . empty ( ) ) ) ; 
 } 
 
 / * * 
 @ @ - 692 , 5 + 691 , 11 @ @ public class DataTracker 
 { 
 return String . format ( " View ( pending _ count = % d , sstables = % s , compacting = % s ) " , liveMemtables . size ( ) + flushingMemtables . size ( ) - 1 , sstables , compacting ) ; 
 } 
 + 
 + public List < SSTableReader > sstablesInBounds ( AbstractBounds < RowPosition > rowBounds ) 
 + { 
 + RowPosition stopInTree = rowBounds . right . isMinimum ( liveMemtables . get ( 0 ) . cfs . partitioner ) ? intervalTree . max ( ) : rowBounds . right ; 
 + return intervalTree . search ( Interval . < RowPosition , SSTableReader > create ( rowBounds . left , stopInTree ) ) ; 
 + } 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / marshal / DateType . java b / src / java / org / apache / cassandra / db / marshal / DateType . java 
 index 1ec6a8f . . 1ca5fa8 100644 
 - - - a / src / java / org / apache / cassandra / db / marshal / DateType . java 
 + + + b / src / java / org / apache / cassandra / db / marshal / DateType . java 
 @ @ - 71 , 7 + 71 , 7 @ @ public class DateType extends AbstractType < Date > 
 millis = System . currentTimeMillis ( ) ; 
 } 
 / / Milliseconds since epoch ? 
 - else if ( source . matches ( " ^ \ \ d + $ " ) ) 
 + else if ( source . matches ( " ^ - ? \ \ d + $ " ) ) 
 { 
 try 
 {

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 index a83fbab . . e2dc046 100644 
 - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 @ @ - 391 , 7 + 391 , 9 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean 
 { 
 Token < ? > token = StorageService . getPartitioner ( ) . getTokenFactory ( ) . fromByteArray ( row . key . key ) ; 
 InetAddress target = StorageService . instance . getTokenMetadata ( ) . getEndpoint ( token ) ; 
 - scheduleHintDelivery ( target ) ; 
 + / / token may have since been removed ( in which case we have just read back a tombstone ) 
 + if ( target ! = null ) 
 + scheduleHintDelivery ( target ) ; 
 } 
 
 if ( logger _ . isDebugEnabled ( ) )
