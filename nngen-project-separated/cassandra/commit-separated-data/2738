BLEU SCORE: 0.024893534183931972

TEST MSG: Fix stress
GENERATED MSG: handleStateLeft no longer needs the version - removed

TEST DIFF (one line): diff - - git a / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc2 - SNAPSHOT - jar - with - dependencies . jar b / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc2 - SNAPSHOT - jar - with - dependencies . jar <nl> deleted file mode 100644 <nl> index 1f4dafd . . 0000000 <nl> Binary files a / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc2 - SNAPSHOT - jar - with - dependencies . jar and / dev / null differ <nl> diff - - git a / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc2 - SNAPSHOT . jar b / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc2 - SNAPSHOT . jar <nl> deleted file mode 100644 <nl> index c0d4242 . . 0000000 <nl> Binary files a / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc2 - SNAPSHOT . jar and / dev / null differ <nl> diff - - git a / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc3 - SNAPSHOT . jar b / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc3 - SNAPSHOT . jar <nl> new file mode 100644 <nl> index 0000000 . . 54a175f <nl> Binary files / dev / null and b / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc3 - SNAPSHOT . jar differ <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java b / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java <nl> index cf37040 . . 7bde900 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java <nl> @ @ - 62 , 7 + 62 , 9 @ @ public class JavaDriverClient <nl> public void connect ( ProtocolOptions . Compression compression ) throws Exception <nl> { <nl> Cluster . Builder clusterBuilder = Cluster . builder ( ) <nl> - . addContactPoint ( host ) . withPort ( port ) ; <nl> + . addContactPoint ( host ) <nl> + . withPort ( port ) <nl> + . withoutMetrics ( ) ; / / The driver uses metrics 3 with conflict with our version <nl> clusterBuilder . withCompression ( compression ) ; <nl> if ( encryptionOptions . enabled ) <nl> { <nl> @ @ - 142 , 7 + 144 , 6 @ @ public class JavaDriverClient <nl> <nl> public void disconnect ( ) <nl> { <nl> - FBUtilities . waitOnFuture ( cluster . shutdown ( ) ) ; <nl> + cluster . close ( ) ; <nl> } <nl> - <nl> - } <nl> \ No newline at end of file <nl> + }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 31054e3 . . f73349a 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 38 , 6 + 38 , 7 @ @ <nl> * Add an official way to disable compactions ( CASSANDRA - 5074 ) <nl> * Reenable ALTER TABLE DROP with new semantics ( CASSANDRA - 3919 ) <nl> * Add binary protocol versioning ( CASSANDRA - 5436 ) <nl> + * Swap THshaServer for TThreadedSelectorServer ( CASSANDRA - 5530 ) <nl> <nl> 1 . 2 . 5 <nl> * fix compaction throttling bursty - ness ( CASSANDRA - 4316 ) <nl> diff - - git a / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java b / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java <nl> index 557a5d8 . . 411e082 100644 <nl> - - - a / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java <nl> + + + b / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import java . util . concurrent . ExecutorService ; <nl> import java . util . concurrent . SynchronousQueue ; <nl> import java . util . concurrent . TimeUnit ; <nl> <nl> + import org . apache . thrift . server . TThreadedSelectorServer ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> @ @ - 41 , 7 + 42 , 7 @ @ import org . apache . thrift . transport . TTransportException ; <nl> * it is spread across multiple threads . Number of selector thread can be the <nl> * number of CPU available . <nl> * / <nl> - public class CustomTHsHaServer extends THsHaServer <nl> + public class CustomTHsHaServer extends TThreadedSelectorServer <nl> { <nl> private static final Logger LOGGER = LoggerFactory . getLogger ( CustomTHsHaServer . class . getName ( ) ) ; <nl> <nl> @ @ - 89 , 11 + 90 , 12 @ @ public class CustomTHsHaServer extends THsHaServer <nl> TimeUnit . SECONDS , <nl> new SynchronousQueue < Runnable > ( ) , <nl> new NamedThreadFactory ( " RPC - Thread " ) , " RPC - THREAD - POOL " ) ; <nl> - THsHaServer . Args serverArgs = new THsHaServer . Args ( serverTransport ) . inputTransportFactory ( args . inTransportFactory ) <nl> + TThreadedSelectorServer . Args serverArgs = new TThreadedSelectorServer . Args ( serverTransport ) . inputTransportFactory ( args . inTransportFactory ) <nl> . outputTransportFactory ( args . outTransportFactory ) <nl> . inputProtocolFactory ( args . tProtocolFactory ) <nl> . outputProtocolFactory ( args . tProtocolFactory ) <nl> . processor ( args . processor ) <nl> + . selectorThreads ( Runtime . getRuntime ( ) . availableProcessors ( ) ) <nl> . executorService ( executorService ) ; <nl> / / Check for available processors in the system which will be equal to the IO Threads . <nl> return new CustomTHsHaServer ( serverArgs ) ;

TEST DIFF:
diff - - git a / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc2 - SNAPSHOT - jar - with - dependencies . jar b / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc2 - SNAPSHOT - jar - with - dependencies . jar 
 deleted file mode 100644 
 index 1f4dafd . . 0000000 
 Binary files a / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc2 - SNAPSHOT - jar - with - dependencies . jar and / dev / null differ 
 diff - - git a / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc2 - SNAPSHOT . jar b / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc2 - SNAPSHOT . jar 
 deleted file mode 100644 
 index c0d4242 . . 0000000 
 Binary files a / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc2 - SNAPSHOT . jar and / dev / null differ 
 diff - - git a / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc3 - SNAPSHOT . jar b / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc3 - SNAPSHOT . jar 
 new file mode 100644 
 index 0000000 . . 54a175f 
 Binary files / dev / null and b / tools / lib / cassandra - driver - core - 2 . 0 . 0 - rc3 - SNAPSHOT . jar differ 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java b / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java 
 index cf37040 . . 7bde900 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java 
 @ @ - 62 , 7 + 62 , 9 @ @ public class JavaDriverClient 
 public void connect ( ProtocolOptions . Compression compression ) throws Exception 
 { 
 Cluster . Builder clusterBuilder = Cluster . builder ( ) 
 - . addContactPoint ( host ) . withPort ( port ) ; 
 + . addContactPoint ( host ) 
 + . withPort ( port ) 
 + . withoutMetrics ( ) ; / / The driver uses metrics 3 with conflict with our version 
 clusterBuilder . withCompression ( compression ) ; 
 if ( encryptionOptions . enabled ) 
 { 
 @ @ - 142 , 7 + 144 , 6 @ @ public class JavaDriverClient 
 
 public void disconnect ( ) 
 { 
 - FBUtilities . waitOnFuture ( cluster . shutdown ( ) ) ; 
 + cluster . close ( ) ; 
 } 
 - 
 - } 
 \ No newline at end of file 
 + }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 31054e3 . . f73349a 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 38 , 6 + 38 , 7 @ @ 
 * Add an official way to disable compactions ( CASSANDRA - 5074 ) 
 * Reenable ALTER TABLE DROP with new semantics ( CASSANDRA - 3919 ) 
 * Add binary protocol versioning ( CASSANDRA - 5436 ) 
 + * Swap THshaServer for TThreadedSelectorServer ( CASSANDRA - 5530 ) 
 
 1 . 2 . 5 
 * fix compaction throttling bursty - ness ( CASSANDRA - 4316 ) 
 diff - - git a / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java b / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java 
 index 557a5d8 . . 411e082 100644 
 - - - a / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java 
 + + + b / src / java / org / apache / cassandra / thrift / CustomTHsHaServer . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import java . util . concurrent . ExecutorService ; 
 import java . util . concurrent . SynchronousQueue ; 
 import java . util . concurrent . TimeUnit ; 
 
 + import org . apache . thrift . server . TThreadedSelectorServer ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 @ @ - 41 , 7 + 42 , 7 @ @ import org . apache . thrift . transport . TTransportException ; 
 * it is spread across multiple threads . Number of selector thread can be the 
 * number of CPU available . 
 * / 
 - public class CustomTHsHaServer extends THsHaServer 
 + public class CustomTHsHaServer extends TThreadedSelectorServer 
 { 
 private static final Logger LOGGER = LoggerFactory . getLogger ( CustomTHsHaServer . class . getName ( ) ) ; 
 
 @ @ - 89 , 11 + 90 , 12 @ @ public class CustomTHsHaServer extends THsHaServer 
 TimeUnit . SECONDS , 
 new SynchronousQueue < Runnable > ( ) , 
 new NamedThreadFactory ( " RPC - Thread " ) , " RPC - THREAD - POOL " ) ; 
 - THsHaServer . Args serverArgs = new THsHaServer . Args ( serverTransport ) . inputTransportFactory ( args . inTransportFactory ) 
 + TThreadedSelectorServer . Args serverArgs = new TThreadedSelectorServer . Args ( serverTransport ) . inputTransportFactory ( args . inTransportFactory ) 
 . outputTransportFactory ( args . outTransportFactory ) 
 . inputProtocolFactory ( args . tProtocolFactory ) 
 . outputProtocolFactory ( args . tProtocolFactory ) 
 . processor ( args . processor ) 
 + . selectorThreads ( Runtime . getRuntime ( ) . availableProcessors ( ) ) 
 . executorService ( executorService ) ; 
 / / Check for available processors in the system which will be equal to the IO Threads . 
 return new CustomTHsHaServer ( serverArgs ) ;
