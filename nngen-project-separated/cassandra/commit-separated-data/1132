BLEU SCORE: 0.018738883683389617

TEST MSG: Warn if system _ traces not available for CASSANDRA - 9628
GENERATED MSG: Don ' t output nonsense ownership without a keyspace

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 0d9e9ef . . 0698d11 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 4004 , 28 + 4004 , 32 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> <nl> 	 if ( keyspace ! = null ) <nl> 	 { <nl> - 	 	 Keyspace keyspaceInstance = Schema . instance . getKeyspaceInstance ( keyspace ) ; <nl> - 	 	 	 if ( keyspaceInstance = = null ) <nl> - 	 	 	 	 throw new IllegalArgumentException ( " The keyspace " + keyspace + " , does not exist " ) ; <nl> + Keyspace keyspaceInstance = Schema . instance . getKeyspaceInstance ( keyspace ) ; <nl> + if ( keyspaceInstance = = null ) <nl> + throw new IllegalArgumentException ( " The keyspace " + keyspace + " , does not exist " ) ; <nl> <nl> - 	 	 if ( keyspaceInstance . getReplicationStrategy ( ) instanceof LocalStrategy ) <nl> - 	 	 	 	 throw new IllegalStateException ( " Ownership values for keyspaces with LocalStrategy are meaningless " ) ; <nl> + if ( keyspaceInstance . getReplicationStrategy ( ) instanceof LocalStrategy ) <nl> + throw new IllegalStateException ( " Ownership values for keyspaces with LocalStrategy are meaningless " ) ; <nl> 	 } <nl> 	 else <nl> 	 { <nl> - 	 List < String > nonSystemKeyspaces = Schema . instance . getNonSystemKeyspaces ( ) ; <nl> - <nl> - 	 / / system _ traces is a non - system keyspace however it needs to be counted as one for this process <nl> - 	 int specialTableCount = 0 ; <nl> - 	 if ( nonSystemKeyspaces . contains ( " system _ traces " ) ) <nl> - 	 	 	 { <nl> - 	 	 specialTableCount + = 1 ; <nl> - 	 	 	 } <nl> - 	 if ( nonSystemKeyspaces . size ( ) > specialTableCount ) <nl> - 	 	 throw new IllegalStateException ( " Non - system keyspaces don ' t have the same replication settings , effective ownership information is meaningless " ) ; <nl> - <nl> - 	 keyspace = " system _ traces " ; <nl> - 	 } <nl> + List < String > nonSystemKeyspaces = Schema . instance . getNonSystemKeyspaces ( ) ; <nl> + <nl> + / / system _ traces is a non - system keyspace however it needs to be counted as one for this process <nl> + int specialTableCount = 0 ; <nl> + if ( nonSystemKeyspaces . contains ( " system _ traces " ) ) <nl> + { <nl> + specialTableCount + = 1 ; <nl> + } <nl> + if ( nonSystemKeyspaces . size ( ) > specialTableCount ) <nl> + throw new IllegalStateException ( " Non - system keyspaces don ' t have the same replication settings , effective ownership information is meaningless " ) ; <nl> + <nl> + keyspace = " system _ traces " ; <nl> + <nl> + Keyspace keyspaceInstance = Schema . instance . getKeyspaceInstance ( keyspace ) ; <nl> + if ( keyspaceInstance = = null ) <nl> + throw new IllegalArgumentException ( " The node does not have " + keyspace + " yet , probably still bootstrapping " ) ; <nl> + } <nl> <nl> TokenMetadata metadata = tokenMetadata . cloneOnlyTokenMap ( ) ; <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 0d9e9ef . . 0698d11 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 4004 , 28 + 4004 , 32 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 
 	 if ( keyspace ! = null ) 
 	 { 
 - 	 	 Keyspace keyspaceInstance = Schema . instance . getKeyspaceInstance ( keyspace ) ; 
 - 	 	 	 if ( keyspaceInstance = = null ) 
 - 	 	 	 	 throw new IllegalArgumentException ( " The keyspace " + keyspace + " , does not exist " ) ; 
 + Keyspace keyspaceInstance = Schema . instance . getKeyspaceInstance ( keyspace ) ; 
 + if ( keyspaceInstance = = null ) 
 + throw new IllegalArgumentException ( " The keyspace " + keyspace + " , does not exist " ) ; 
 
 - 	 	 if ( keyspaceInstance . getReplicationStrategy ( ) instanceof LocalStrategy ) 
 - 	 	 	 	 throw new IllegalStateException ( " Ownership values for keyspaces with LocalStrategy are meaningless " ) ; 
 + if ( keyspaceInstance . getReplicationStrategy ( ) instanceof LocalStrategy ) 
 + throw new IllegalStateException ( " Ownership values for keyspaces with LocalStrategy are meaningless " ) ; 
 	 } 
 	 else 
 	 { 
 - 	 List < String > nonSystemKeyspaces = Schema . instance . getNonSystemKeyspaces ( ) ; 
 - 
 - 	 / / system _ traces is a non - system keyspace however it needs to be counted as one for this process 
 - 	 int specialTableCount = 0 ; 
 - 	 if ( nonSystemKeyspaces . contains ( " system _ traces " ) ) 
 - 	 	 	 { 
 - 	 	 specialTableCount + = 1 ; 
 - 	 	 	 } 
 - 	 if ( nonSystemKeyspaces . size ( ) > specialTableCount ) 
 - 	 	 throw new IllegalStateException ( " Non - system keyspaces don ' t have the same replication settings , effective ownership information is meaningless " ) ; 
 - 
 - 	 keyspace = " system _ traces " ; 
 - 	 } 
 + List < String > nonSystemKeyspaces = Schema . instance . getNonSystemKeyspaces ( ) ; 
 + 
 + / / system _ traces is a non - system keyspace however it needs to be counted as one for this process 
 + int specialTableCount = 0 ; 
 + if ( nonSystemKeyspaces . contains ( " system _ traces " ) ) 
 + { 
 + specialTableCount + = 1 ; 
 + } 
 + if ( nonSystemKeyspaces . size ( ) > specialTableCount ) 
 + throw new IllegalStateException ( " Non - system keyspaces don ' t have the same replication settings , effective ownership information is meaningless " ) ; 
 + 
 + keyspace = " system _ traces " ; 
 + 
 + Keyspace keyspaceInstance = Schema . instance . getKeyspaceInstance ( keyspace ) ; 
 + if ( keyspaceInstance = = null ) 
 + throw new IllegalArgumentException ( " The node does not have " + keyspace + " yet , probably still bootstrapping " ) ; 
 + } 
 
 TokenMetadata metadata = tokenMetadata . cloneOnlyTokenMap ( ) ; 


NEAREST DIFF:
ELIMINATEDSENTENCE
