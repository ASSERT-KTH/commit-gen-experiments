BLEU SCORE: 0.2259005009024612

TEST MSG: add missing file
GENERATED MSG: Add forgotten test

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / metrics / CASClientRequestMetrics . java b / src / java / org / apache / cassandra / metrics / CASClientRequestMetrics . java <nl> new file mode 100644 <nl> index 0000000 . . 3210d45 <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / metrics / CASClientRequestMetrics . java <nl> @ @ - 0 , 0 + 1 , 47 @ @ <nl> + / * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , <nl> + * software distributed under the License is distributed on an <nl> + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY <nl> + * KIND , either express or implied . See the License for the <nl> + * specific language governing permissions and limitations <nl> + * under the License . <nl> + * / <nl> + package org . apache . cassandra . metrics ; <nl> + <nl> + import com . yammer . metrics . * ; <nl> + import com . yammer . metrics . core . * ; <nl> + <nl> + public class CASClientRequestMetrics extends ClientRequestMetrics <nl> + { <nl> + <nl> + public final Histogram contention ; <nl> + / * Used only for write * / <nl> + public final Counter conditionNotMet ; <nl> + <nl> + public final Counter unfinishedCommit ; <nl> + <nl> + public CASClientRequestMetrics ( String scope ) { <nl> + super ( scope ) ; <nl> + contention = Metrics . newHistogram ( factory . createMetricName ( " ContentionHistogram " ) , true ) ; <nl> + conditionNotMet = Metrics . newCounter ( factory . createMetricName ( " ConditionNotMet " ) ) ; <nl> + unfinishedCommit = Metrics . newCounter ( factory . createMetricName ( " UnfinishedCommit " ) ) ; <nl> + } <nl> + <nl> + public void release ( ) <nl> + { <nl> + super . release ( ) ; <nl> + Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " ContentionHistogram " ) ) ; <nl> + Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " ConditionNotMet " ) ) ; <nl> + Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " UnfinishedCommit " ) ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / metrics / CASClientRequestMetrics . java b / src / java / org / apache / cassandra / metrics / CASClientRequestMetrics . java 
 new file mode 100644 
 index 0000000 . . 3210d45 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / metrics / CASClientRequestMetrics . java 
 @ @ - 0 , 0 + 1 , 47 @ @ 
 + / * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , 
 + * software distributed under the License is distributed on an 
 + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 + * KIND , either express or implied . See the License for the 
 + * specific language governing permissions and limitations 
 + * under the License . 
 + * / 
 + package org . apache . cassandra . metrics ; 
 + 
 + import com . yammer . metrics . * ; 
 + import com . yammer . metrics . core . * ; 
 + 
 + public class CASClientRequestMetrics extends ClientRequestMetrics 
 + { 
 + 
 + public final Histogram contention ; 
 + / * Used only for write * / 
 + public final Counter conditionNotMet ; 
 + 
 + public final Counter unfinishedCommit ; 
 + 
 + public CASClientRequestMetrics ( String scope ) { 
 + super ( scope ) ; 
 + contention = Metrics . newHistogram ( factory . createMetricName ( " ContentionHistogram " ) , true ) ; 
 + conditionNotMet = Metrics . newCounter ( factory . createMetricName ( " ConditionNotMet " ) ) ; 
 + unfinishedCommit = Metrics . newCounter ( factory . createMetricName ( " UnfinishedCommit " ) ) ; 
 + } 
 + 
 + public void release ( ) 
 + { 
 + super . release ( ) ; 
 + Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " ContentionHistogram " ) ) ; 
 + Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " ConditionNotMet " ) ) ; 
 + Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " UnfinishedCommit " ) ) ; 
 + } 
 + }

NEAREST DIFF:
ELIMINATEDSENTENCE
