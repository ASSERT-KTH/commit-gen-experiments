BLEU SCORE: 0.053001566897562975

TEST MSG: Add ' die ' policy for commit log and disk failure
GENERATED MSG: Add commit _ failure _ policy .

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index c136c5e . . 4ed07a9 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 2 <nl> + * Add ' die ' policy for commit log and disk failure ( CASSANDRA - 7927 ) <nl> * Fix installing as service on Windows ( CASSANDRA - 8115 ) <nl> * Fix CREATE TABLE for CQL2 ( CASSANDRA - 8144 ) <nl> * Avoid boxing in ColumnStats min / max trackers ( CASSANDRA - 8109 ) <nl> diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml <nl> index c95c68c . . 74a8cfb 100644 <nl> - - - a / conf / cassandra . yaml <nl> + + + b / conf / cassandra . yaml <nl> @ @ - 104 , 6 + 104 , 8 @ @ partitioner : org . apache . cassandra . dht . Murmur3Partitioner <nl> # commitlog _ directory : / var / lib / cassandra / commitlog <nl> <nl> # policy for data disk failures : <nl> + # die : shut down gossip and Thrift and kill the JVM for any fs errors or <nl> + # single - sstable errors , so the node can be replaced . <nl> # stop _ paranoid : shut down gossip and Thrift even for single - sstable errors . <nl> # stop : shut down gossip and Thrift , leaving the node effectively dead , but <nl> # can still be inspected via JMX . <nl> @ @ - 114 , 9 + 116 , 10 @ @ partitioner : org . apache . cassandra . dht . Murmur3Partitioner <nl> disk _ failure _ policy : stop <nl> <nl> # policy for commit disk failures : <nl> + # die : shut down gossip and Thrift and kill the JVM , so the node can be replaced . <nl> # stop : shut down gossip and Thrift , leaving the node effectively dead , but <nl> # can still be inspected via JMX . <nl> - # stop _ commit : shutdown the commit log , letting writes collect but <nl> + # stop _ commit : shutdown the commit log , letting writes collect but <nl> # continuing to service reads , as in pre - 2 . 0 . 5 Cassandra <nl> # ignore : ignore fatal errors and let the batches fail <nl> commit _ failure _ policy : stop <nl> diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java <nl> index e2df89f . . 5f16239 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Config . java <nl> + + + b / src / java / org / apache / cassandra / config / Config . java <nl> @ @ - 299 , 6 + 299 , 7 @ @ public class Config <nl> stop , <nl> ignore , <nl> stop _ paranoid , <nl> + die <nl> } <nl> <nl> public static enum CommitFailurePolicy <nl> @ @ - 306 , 6 + 307 , 7 @ @ public class Config <nl> stop , <nl> stop _ commit , <nl> ignore , <nl> + die , <nl> } <nl> <nl> public static enum RequestSchedulerId <nl> diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLog . java b / src / java / org / apache / cassandra / db / commitlog / CommitLog . java <nl> index d38c4ed . . ee9ca14 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLog . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLog . java <nl> @ @ - 25 , 9 + 25 , 12 @ @ import java . util . * ; <nl> import javax . management . MBeanServer ; <nl> import javax . management . ObjectName ; <nl> <nl> - import org . apache . commons . lang3 . StringUtils ; <nl> + import com . google . common . annotations . VisibleForTesting ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> + <nl> + import org . apache . commons . lang3 . StringUtils ; <nl> + <nl> import org . apache . cassandra . config . Config ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . db . * ; <nl> @ @ - 36 , 6 + 39 , 7 @ @ import org . apache . cassandra . io . util . DataOutputByteBuffer ; <nl> import org . apache . cassandra . metrics . CommitLogMetrics ; <nl> import org . apache . cassandra . net . MessagingService ; <nl> import org . apache . cassandra . service . StorageService ; <nl> + import org . apache . cassandra . utils . JVMStabilityInspector ; <nl> import org . apache . cassandra . utils . PureJavaCrc32 ; <nl> <nl> import static org . apache . cassandra . db . commitlog . CommitLogSegment . * ; <nl> @ @ - 349 , 10 + 353 , 14 @ @ public class CommitLog implements CommitLogMBean <nl> return allocator . getActiveSegments ( ) . size ( ) ; <nl> } <nl> <nl> - static boolean handleCommitError ( String message , Throwable t ) <nl> + @ VisibleForTesting <nl> + public static boolean handleCommitError ( String message , Throwable t ) <nl> { <nl> + JVMStabilityInspector . inspectCommitLogThrowable ( t ) ; <nl> switch ( DatabaseDescriptor . getCommitFailurePolicy ( ) ) <nl> { <nl> + / / Needed here for unit tests to not fail on default assertion <nl> + case die : <nl> case stop : <nl> StorageService . instance . stopTransports ( ) ; <nl> case stop _ commit : <nl> diff - - git a / src / java / org / apache / cassandra / io / util / FileUtils . java b / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> index e590918 . . 295679e 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> + + + b / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> @ @ - 395 , 12 + 395 , 18 @ @ public class FileUtils <nl> <nl> public static void handleCorruptSSTable ( CorruptSSTableException e ) <nl> { <nl> - if ( DatabaseDescriptor . getDiskFailurePolicy ( ) = = Config . DiskFailurePolicy . stop _ paranoid ) <nl> - StorageService . instance . stopTransports ( ) ; <nl> + JVMStabilityInspector . inspectThrowable ( e ) ; <nl> + switch ( DatabaseDescriptor . getDiskFailurePolicy ( ) ) <nl> + { <nl> + case stop _ paranoid : <nl> + StorageService . instance . stopTransports ( ) ; <nl> + break ; <nl> + } <nl> } <nl> <nl> public static void handleFSError ( FSError e ) <nl> { <nl> + JVMStabilityInspector . inspectThrowable ( e ) ; <nl> switch ( DatabaseDescriptor . getDiskFailurePolicy ( ) ) <nl> { <nl> case stop _ paranoid : <nl> diff - - git a / src / java / org / apache / cassandra / utils / JVMStabilityInspector . java b / src / java / org / apache / cassandra / utils / JVMStabilityInspector . java <nl> index 9fdc5ea . . bcff172 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / JVMStabilityInspector . java <nl> + + + b / src / java / org / apache / cassandra / utils / JVMStabilityInspector . java <nl> @ @ - 17 , 15 + 17 , 28 @ @ <nl> * / <nl> package org . apache . cassandra . utils ; <nl> <nl> + import com . google . common . annotations . VisibleForTesting ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> + <nl> + import org . apache . cassandra . config . Config ; <nl> + import org . apache . cassandra . config . DatabaseDescriptor ; <nl> + import org . apache . cassandra . io . FSError ; <nl> + import org . apache . cassandra . io . sstable . CorruptSSTableException ; <nl> import org . apache . cassandra . service . StorageService ; <nl> <nl> - public class JVMStabilityInspector <nl> + / * * <nl> + * Responsible for deciding whether to kill the JVM if it gets in an " unstable " state ( think OOM ) . <nl> + * / <nl> + public final class JVMStabilityInspector <nl> { <nl> private static final Logger logger = LoggerFactory . getLogger ( JVMStabilityInspector . class ) ; <nl> + private static Killer killer = new Killer ( ) ; <nl> + <nl> + private JVMStabilityInspector ( ) { } <nl> + <nl> / * * <nl> - * Certain Throwables and Exceptions represent " Stop " conditions for the server . <nl> + * Certain Throwables and Exceptions represent " Die " conditions for the server . <nl> * @ param t <nl> * The Throwable to check for server - stop conditions <nl> * / <nl> @ @ - 34 , 7 + 47 , 40 @ @ public class JVMStabilityInspector <nl> boolean isUnstable = false ; <nl> if ( t instanceof OutOfMemoryError ) <nl> isUnstable = true ; <nl> + <nl> + if ( DatabaseDescriptor . getDiskFailurePolicy ( ) = = Config . DiskFailurePolicy . die ) <nl> + if ( t instanceof FSError | | t instanceof CorruptSSTableException ) <nl> + isUnstable = true ; <nl> + <nl> if ( isUnstable ) <nl> + killer . killCurrentJVM ( t ) ; <nl> + } <nl> + <nl> + public static void inspectCommitLogThrowable ( Throwable t ) <nl> + { <nl> + if ( DatabaseDescriptor . getCommitFailurePolicy ( ) = = Config . CommitFailurePolicy . die ) <nl> + killer . killCurrentJVM ( t ) ; <nl> + else <nl> + inspectThrowable ( t ) ; <nl> + } <nl> + <nl> + @ VisibleForTesting <nl> + public static Killer replaceKiller ( Killer newKiller ) { <nl> + Killer oldKiller = JVMStabilityInspector . killer ; <nl> + JVMStabilityInspector . killer = newKiller ; <nl> + return oldKiller ; <nl> + } <nl> + <nl> + @ VisibleForTesting <nl> + public static class Killer <nl> + { <nl> + / * * <nl> + * Certain situations represent " Die " conditions for the server , and if so , the reason is logged and the current JVM is killed . <nl> + * <nl> + * @ param t <nl> + * The Throwable to log before killing the current JVM <nl> + * / <nl> + protected void killCurrentJVM ( Throwable t ) <nl> { <nl> t . printStackTrace ( System . err ) ; <nl> logger . error ( " JVM state determined to be unstable . Exiting forcefully due to : " , t ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / db / CommitLogTest . java b / test / unit / org / apache / cassandra / db / CommitLogTest . java <nl> index ed9601d . . 8a1bb0c 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / CommitLogTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / CommitLogTest . java <nl> @ @ - 23 , 11 + 23 , 9 @ @ import java . io . * ; <nl> import java . nio . ByteBuffer ; <nl> import java . util . UUID ; <nl> import java . util . concurrent . ExecutionException ; <nl> - import java . util . concurrent . TimeUnit ; <nl> import java . util . zip . CRC32 ; <nl> import java . util . zip . Checksum ; <nl> <nl> - import com . google . common . util . concurrent . Uninterruptibles ; <nl> import org . junit . Assert ; <nl> import org . junit . Test ; <nl> <nl> @ @ - 42 , 10 + 40 , 14 @ @ import org . apache . cassandra . db . commitlog . CommitLogSegment ; <nl> import org . apache . cassandra . db . composites . CellName ; <nl> import org . apache . cassandra . db . composites . CellNameType ; <nl> import org . apache . cassandra . db . filter . NamesQueryFilter ; <nl> + import org . apache . cassandra . exceptions . ConfigurationException ; <nl> + import org . apache . cassandra . gms . Gossiper ; <nl> import org . apache . cassandra . net . MessagingService ; <nl> import org . apache . cassandra . service . StorageService ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> + import org . apache . cassandra . utils . JVMStabilityInspector ; <nl> + import org . apache . cassandra . utils . KillerForTests ; <nl> <nl> import static org . apache . cassandra . utils . ByteBufferUtil . bytes ; <nl> <nl> @ @ - 275 , 29 + 277 , 42 @ @ public class CommitLogTest extends SchemaLoader <nl> } <nl> <nl> @ Test <nl> - public void testCommitFailurePolicy _ stop ( ) <nl> + public void testCommitFailurePolicy _ stop ( ) throws ConfigurationException <nl> { <nl> - File commitDir = new File ( DatabaseDescriptor . getCommitLogLocation ( ) ) ; <nl> + / / Need storage service active so stop policy can shutdown gossip <nl> + StorageService . instance . initServer ( ) ; <nl> + Assert . assertTrue ( Gossiper . instance . isEnabled ( ) ) ; <nl> <nl> + Config . CommitFailurePolicy oldPolicy = DatabaseDescriptor . getCommitFailurePolicy ( ) ; <nl> try <nl> { <nl> - <nl> DatabaseDescriptor . setCommitFailurePolicy ( Config . CommitFailurePolicy . stop ) ; <nl> - commitDir . setWritable ( false ) ; <nl> - Mutation rm = new Mutation ( " Keyspace1 " , bytes ( " k " ) ) ; <nl> - rm . add ( " Standard1 " , Util . cellname ( " c1 " ) , ByteBuffer . allocate ( 100 ) , 0 ) ; <nl> + CommitLog . handleCommitError ( " Test stop error " , new Throwable ( ) ) ; <nl> + Assert . assertFalse ( Gossiper . instance . isEnabled ( ) ) ; <nl> + } <nl> + finally <nl> + { <nl> + DatabaseDescriptor . setCommitFailurePolicy ( oldPolicy ) ; <nl> + } <nl> + } <nl> <nl> - / / Adding it twice ( won ' t change segment ) <nl> - CommitLog . instance . add ( rm ) ; <nl> - Uninterruptibles . sleepUninterruptibly ( ( int ) DatabaseDescriptor . getCommitLogSyncBatchWindow ( ) , TimeUnit . MILLISECONDS ) ; <nl> - Assert . assertFalse ( StorageService . instance . isRPCServerRunning ( ) ) ; <nl> - Assert . assertFalse ( StorageService . instance . isNativeTransportRunning ( ) ) ; <nl> - Assert . assertFalse ( StorageService . instance . isInitialized ( ) ) ; <nl> + @ Test <nl> + public void testCommitFailurePolicy _ die ( ) <nl> + { <nl> + KillerForTests killerForTests = new KillerForTests ( ) ; <nl> + JVMStabilityInspector . Killer originalKiller = JVMStabilityInspector . replaceKiller ( killerForTests ) ; <nl> + Config . CommitFailurePolicy oldPolicy = DatabaseDescriptor . getCommitFailurePolicy ( ) ; <nl> <nl> + try <nl> + { <nl> + DatabaseDescriptor . setCommitFailurePolicy ( Config . CommitFailurePolicy . die ) ; <nl> + CommitLog . handleCommitError ( " Testing die policy " , new Throwable ( ) ) ; <nl> + Assert . assertTrue ( killerForTests . wasKilled ( ) ) ; <nl> } <nl> finally <nl> { <nl> - commitDir . setWritable ( true ) ; <nl> + DatabaseDescriptor . setCommitFailurePolicy ( oldPolicy ) ; <nl> + JVMStabilityInspector . replaceKiller ( originalKiller ) ; <nl> } <nl> } <nl> <nl> diff - - git a / test / unit / org / apache / cassandra / utils / JVMStabilityInspectorTest . java b / test / unit / org / apache / cassandra / utils / JVMStabilityInspectorTest . java <nl> new file mode 100644 <nl> index 0000000 . . e2a5107 <nl> - - - / dev / null <nl> + + + b / test / unit / org / apache / cassandra / utils / JVMStabilityInspectorTest . java <nl> @ @ - 0 , 0 + 1 , 51 @ @ <nl> + package org . apache . cassandra . utils ; <nl> + <nl> + import org . apache . cassandra . config . Config ; <nl> + import org . apache . cassandra . config . DatabaseDescriptor ; <nl> + import org . apache . cassandra . io . FSReadError ; <nl> + import org . junit . Test ; <nl> + <nl> + import java . io . IOException ; <nl> + <nl> + import static org . junit . Assert . assertFalse ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + <nl> + public class JVMStabilityInspectorTest <nl> + { <nl> + @ Test <nl> + public void testKill ( ) throws Exception <nl> + { <nl> + KillerForTests killerForTests = new KillerForTests ( ) ; <nl> + JVMStabilityInspector . Killer originalKiller = JVMStabilityInspector . replaceKiller ( killerForTests ) ; <nl> + <nl> + Config . DiskFailurePolicy oldPolicy = DatabaseDescriptor . getDiskFailurePolicy ( ) ; <nl> + Config . CommitFailurePolicy oldCommitPolicy = DatabaseDescriptor . getCommitFailurePolicy ( ) ; <nl> + try <nl> + { <nl> + killerForTests . reset ( ) ; <nl> + JVMStabilityInspector . inspectThrowable ( new IOException ( ) ) ; <nl> + assertFalse ( killerForTests . wasKilled ( ) ) ; <nl> + <nl> + killerForTests . reset ( ) ; <nl> + JVMStabilityInspector . inspectThrowable ( new OutOfMemoryError ( ) ) ; <nl> + assertTrue ( killerForTests . wasKilled ( ) ) ; <nl> + <nl> + DatabaseDescriptor . setDiskFailurePolicy ( Config . DiskFailurePolicy . die ) ; <nl> + killerForTests . reset ( ) ; <nl> + JVMStabilityInspector . inspectThrowable ( new FSReadError ( new IOException ( ) , " blah " ) ) ; <nl> + assertTrue ( killerForTests . wasKilled ( ) ) ; <nl> + <nl> + DatabaseDescriptor . setCommitFailurePolicy ( Config . CommitFailurePolicy . die ) ; <nl> + killerForTests . reset ( ) ; <nl> + JVMStabilityInspector . inspectCommitLogThrowable ( new Throwable ( ) ) ; <nl> + assertTrue ( killerForTests . wasKilled ( ) ) ; <nl> + } <nl> + finally <nl> + { <nl> + JVMStabilityInspector . replaceKiller ( originalKiller ) ; <nl> + DatabaseDescriptor . setDiskFailurePolicy ( oldPolicy ) ; <nl> + DatabaseDescriptor . setCommitFailurePolicy ( oldCommitPolicy ) ; <nl> + } <nl> + } <nl> + <nl> + } <nl> diff - - git a / test / unit / org / apache / cassandra / utils / KillerForTests . java b / test / unit / org / apache / cassandra / utils / KillerForTests . java <nl> new file mode 100644 <nl> index 0000000 . . 83cd7fc <nl> - - - / dev / null <nl> + + + b / test / unit / org / apache / cassandra / utils / KillerForTests . java <nl> @ @ - 0 , 0 + 1 , 43 @ @ <nl> + / * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package org . apache . cassandra . utils ; <nl> + <nl> + / * * <nl> + * Responsible for stubbing out the System . exit ( ) logic during unit tests . <nl> + * / <nl> + public class KillerForTests extends JVMStabilityInspector . Killer <nl> + { <nl> + private boolean killed = false ; <nl> + <nl> + @ Override <nl> + protected void killCurrentJVM ( Throwable t ) <nl> + { <nl> + killed = true ; <nl> + } <nl> + <nl> + public boolean wasKilled ( ) <nl> + { <nl> + return killed ; <nl> + } <nl> + <nl> + public void reset ( ) <nl> + { <nl> + killed = false ; <nl> + } <nl> + }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index c136c5e . . 4ed07a9 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 2 
 + * Add ' die ' policy for commit log and disk failure ( CASSANDRA - 7927 ) 
 * Fix installing as service on Windows ( CASSANDRA - 8115 ) 
 * Fix CREATE TABLE for CQL2 ( CASSANDRA - 8144 ) 
 * Avoid boxing in ColumnStats min / max trackers ( CASSANDRA - 8109 ) 
 diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml 
 index c95c68c . . 74a8cfb 100644 
 - - - a / conf / cassandra . yaml 
 + + + b / conf / cassandra . yaml 
 @ @ - 104 , 6 + 104 , 8 @ @ partitioner : org . apache . cassandra . dht . Murmur3Partitioner 
 # commitlog _ directory : / var / lib / cassandra / commitlog 
 
 # policy for data disk failures : 
 + # die : shut down gossip and Thrift and kill the JVM for any fs errors or 
 + # single - sstable errors , so the node can be replaced . 
 # stop _ paranoid : shut down gossip and Thrift even for single - sstable errors . 
 # stop : shut down gossip and Thrift , leaving the node effectively dead , but 
 # can still be inspected via JMX . 
 @ @ - 114 , 9 + 116 , 10 @ @ partitioner : org . apache . cassandra . dht . Murmur3Partitioner 
 disk _ failure _ policy : stop 
 
 # policy for commit disk failures : 
 + # die : shut down gossip and Thrift and kill the JVM , so the node can be replaced . 
 # stop : shut down gossip and Thrift , leaving the node effectively dead , but 
 # can still be inspected via JMX . 
 - # stop _ commit : shutdown the commit log , letting writes collect but 
 + # stop _ commit : shutdown the commit log , letting writes collect but 
 # continuing to service reads , as in pre - 2 . 0 . 5 Cassandra 
 # ignore : ignore fatal errors and let the batches fail 
 commit _ failure _ policy : stop 
 diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java 
 index e2df89f . . 5f16239 100644 
 - - - a / src / java / org / apache / cassandra / config / Config . java 
 + + + b / src / java / org / apache / cassandra / config / Config . java 
 @ @ - 299 , 6 + 299 , 7 @ @ public class Config 
 stop , 
 ignore , 
 stop _ paranoid , 
 + die 
 } 
 
 public static enum CommitFailurePolicy 
 @ @ - 306 , 6 + 307 , 7 @ @ public class Config 
 stop , 
 stop _ commit , 
 ignore , 
 + die , 
 } 
 
 public static enum RequestSchedulerId 
 diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLog . java b / src / java / org / apache / cassandra / db / commitlog / CommitLog . java 
 index d38c4ed . . ee9ca14 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLog . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLog . java 
 @ @ - 25 , 9 + 25 , 12 @ @ import java . util . * ; 
 import javax . management . MBeanServer ; 
 import javax . management . ObjectName ; 
 
 - import org . apache . commons . lang3 . StringUtils ; 
 + import com . google . common . annotations . VisibleForTesting ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 + 
 + import org . apache . commons . lang3 . StringUtils ; 
 + 
 import org . apache . cassandra . config . Config ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . db . * ; 
 @ @ - 36 , 6 + 39 , 7 @ @ import org . apache . cassandra . io . util . DataOutputByteBuffer ; 
 import org . apache . cassandra . metrics . CommitLogMetrics ; 
 import org . apache . cassandra . net . MessagingService ; 
 import org . apache . cassandra . service . StorageService ; 
 + import org . apache . cassandra . utils . JVMStabilityInspector ; 
 import org . apache . cassandra . utils . PureJavaCrc32 ; 
 
 import static org . apache . cassandra . db . commitlog . CommitLogSegment . * ; 
 @ @ - 349 , 10 + 353 , 14 @ @ public class CommitLog implements CommitLogMBean 
 return allocator . getActiveSegments ( ) . size ( ) ; 
 } 
 
 - static boolean handleCommitError ( String message , Throwable t ) 
 + @ VisibleForTesting 
 + public static boolean handleCommitError ( String message , Throwable t ) 
 { 
 + JVMStabilityInspector . inspectCommitLogThrowable ( t ) ; 
 switch ( DatabaseDescriptor . getCommitFailurePolicy ( ) ) 
 { 
 + / / Needed here for unit tests to not fail on default assertion 
 + case die : 
 case stop : 
 StorageService . instance . stopTransports ( ) ; 
 case stop _ commit : 
 diff - - git a / src / java / org / apache / cassandra / io / util / FileUtils . java b / src / java / org / apache / cassandra / io / util / FileUtils . java 
 index e590918 . . 295679e 100644 
 - - - a / src / java / org / apache / cassandra / io / util / FileUtils . java 
 + + + b / src / java / org / apache / cassandra / io / util / FileUtils . java 
 @ @ - 395 , 12 + 395 , 18 @ @ public class FileUtils 
 
 public static void handleCorruptSSTable ( CorruptSSTableException e ) 
 { 
 - if ( DatabaseDescriptor . getDiskFailurePolicy ( ) = = Config . DiskFailurePolicy . stop _ paranoid ) 
 - StorageService . instance . stopTransports ( ) ; 
 + JVMStabilityInspector . inspectThrowable ( e ) ; 
 + switch ( DatabaseDescriptor . getDiskFailurePolicy ( ) ) 
 + { 
 + case stop _ paranoid : 
 + StorageService . instance . stopTransports ( ) ; 
 + break ; 
 + } 
 } 
 
 public static void handleFSError ( FSError e ) 
 { 
 + JVMStabilityInspector . inspectThrowable ( e ) ; 
 switch ( DatabaseDescriptor . getDiskFailurePolicy ( ) ) 
 { 
 case stop _ paranoid : 
 diff - - git a / src / java / org / apache / cassandra / utils / JVMStabilityInspector . java b / src / java / org / apache / cassandra / utils / JVMStabilityInspector . java 
 index 9fdc5ea . . bcff172 100644 
 - - - a / src / java / org / apache / cassandra / utils / JVMStabilityInspector . java 
 + + + b / src / java / org / apache / cassandra / utils / JVMStabilityInspector . java 
 @ @ - 17 , 15 + 17 , 28 @ @ 
 * / 
 package org . apache . cassandra . utils ; 
 
 + import com . google . common . annotations . VisibleForTesting ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 + 
 + import org . apache . cassandra . config . Config ; 
 + import org . apache . cassandra . config . DatabaseDescriptor ; 
 + import org . apache . cassandra . io . FSError ; 
 + import org . apache . cassandra . io . sstable . CorruptSSTableException ; 
 import org . apache . cassandra . service . StorageService ; 
 
 - public class JVMStabilityInspector 
 + / * * 
 + * Responsible for deciding whether to kill the JVM if it gets in an " unstable " state ( think OOM ) . 
 + * / 
 + public final class JVMStabilityInspector 
 { 
 private static final Logger logger = LoggerFactory . getLogger ( JVMStabilityInspector . class ) ; 
 + private static Killer killer = new Killer ( ) ; 
 + 
 + private JVMStabilityInspector ( ) { } 
 + 
 / * * 
 - * Certain Throwables and Exceptions represent " Stop " conditions for the server . 
 + * Certain Throwables and Exceptions represent " Die " conditions for the server . 
 * @ param t 
 * The Throwable to check for server - stop conditions 
 * / 
 @ @ - 34 , 7 + 47 , 40 @ @ public class JVMStabilityInspector 
 boolean isUnstable = false ; 
 if ( t instanceof OutOfMemoryError ) 
 isUnstable = true ; 
 + 
 + if ( DatabaseDescriptor . getDiskFailurePolicy ( ) = = Config . DiskFailurePolicy . die ) 
 + if ( t instanceof FSError | | t instanceof CorruptSSTableException ) 
 + isUnstable = true ; 
 + 
 if ( isUnstable ) 
 + killer . killCurrentJVM ( t ) ; 
 + } 
 + 
 + public static void inspectCommitLogThrowable ( Throwable t ) 
 + { 
 + if ( DatabaseDescriptor . getCommitFailurePolicy ( ) = = Config . CommitFailurePolicy . die ) 
 + killer . killCurrentJVM ( t ) ; 
 + else 
 + inspectThrowable ( t ) ; 
 + } 
 + 
 + @ VisibleForTesting 
 + public static Killer replaceKiller ( Killer newKiller ) { 
 + Killer oldKiller = JVMStabilityInspector . killer ; 
 + JVMStabilityInspector . killer = newKiller ; 
 + return oldKiller ; 
 + } 
 + 
 + @ VisibleForTesting 
 + public static class Killer 
 + { 
 + / * * 
 + * Certain situations represent " Die " conditions for the server , and if so , the reason is logged and the current JVM is killed . 
 + * 
 + * @ param t 
 + * The Throwable to log before killing the current JVM 
 + * / 
 + protected void killCurrentJVM ( Throwable t ) 
 { 
 t . printStackTrace ( System . err ) ; 
 logger . error ( " JVM state determined to be unstable . Exiting forcefully due to : " , t ) ; 
 diff - - git a / test / unit / org / apache / cassandra / db / CommitLogTest . java b / test / unit / org / apache / cassandra / db / CommitLogTest . java 
 index ed9601d . . 8a1bb0c 100644 
 - - - a / test / unit / org / apache / cassandra / db / CommitLogTest . java 
 + + + b / test / unit / org / apache / cassandra / db / CommitLogTest . java 
 @ @ - 23 , 11 + 23 , 9 @ @ import java . io . * ; 
 import java . nio . ByteBuffer ; 
 import java . util . UUID ; 
 import java . util . concurrent . ExecutionException ; 
 - import java . util . concurrent . TimeUnit ; 
 import java . util . zip . CRC32 ; 
 import java . util . zip . Checksum ; 
 
 - import com . google . common . util . concurrent . Uninterruptibles ; 
 import org . junit . Assert ; 
 import org . junit . Test ; 
 
 @ @ - 42 , 10 + 40 , 14 @ @ import org . apache . cassandra . db . commitlog . CommitLogSegment ; 
 import org . apache . cassandra . db . composites . CellName ; 
 import org . apache . cassandra . db . composites . CellNameType ; 
 import org . apache . cassandra . db . filter . NamesQueryFilter ; 
 + import org . apache . cassandra . exceptions . ConfigurationException ; 
 + import org . apache . cassandra . gms . Gossiper ; 
 import org . apache . cassandra . net . MessagingService ; 
 import org . apache . cassandra . service . StorageService ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 + import org . apache . cassandra . utils . JVMStabilityInspector ; 
 + import org . apache . cassandra . utils . KillerForTests ; 
 
 import static org . apache . cassandra . utils . ByteBufferUtil . bytes ; 
 
 @ @ - 275 , 29 + 277 , 42 @ @ public class CommitLogTest extends SchemaLoader 
 } 
 
 @ Test 
 - public void testCommitFailurePolicy _ stop ( ) 
 + public void testCommitFailurePolicy _ stop ( ) throws ConfigurationException 
 { 
 - File commitDir = new File ( DatabaseDescriptor . getCommitLogLocation ( ) ) ; 
 + / / Need storage service active so stop policy can shutdown gossip 
 + StorageService . instance . initServer ( ) ; 
 + Assert . assertTrue ( Gossiper . instance . isEnabled ( ) ) ; 
 
 + Config . CommitFailurePolicy oldPolicy = DatabaseDescriptor . getCommitFailurePolicy ( ) ; 
 try 
 { 
 - 
 DatabaseDescriptor . setCommitFailurePolicy ( Config . CommitFailurePolicy . stop ) ; 
 - commitDir . setWritable ( false ) ; 
 - Mutation rm = new Mutation ( " Keyspace1 " , bytes ( " k " ) ) ; 
 - rm . add ( " Standard1 " , Util . cellname ( " c1 " ) , ByteBuffer . allocate ( 100 ) , 0 ) ; 
 + CommitLog . handleCommitError ( " Test stop error " , new Throwable ( ) ) ; 
 + Assert . assertFalse ( Gossiper . instance . isEnabled ( ) ) ; 
 + } 
 + finally 
 + { 
 + DatabaseDescriptor . setCommitFailurePolicy ( oldPolicy ) ; 
 + } 
 + } 
 
 - / / Adding it twice ( won ' t change segment ) 
 - CommitLog . instance . add ( rm ) ; 
 - Uninterruptibles . sleepUninterruptibly ( ( int ) DatabaseDescriptor . getCommitLogSyncBatchWindow ( ) , TimeUnit . MILLISECONDS ) ; 
 - Assert . assertFalse ( StorageService . instance . isRPCServerRunning ( ) ) ; 
 - Assert . assertFalse ( StorageService . instance . isNativeTransportRunning ( ) ) ; 
 - Assert . assertFalse ( StorageService . instance . isInitialized ( ) ) ; 
 + @ Test 
 + public void testCommitFailurePolicy _ die ( ) 
 + { 
 + KillerForTests killerForTests = new KillerForTests ( ) ; 
 + JVMStabilityInspector . Killer originalKiller = JVMStabilityInspector . replaceKiller ( killerForTests ) ; 
 + Config . CommitFailurePolicy oldPolicy = DatabaseDescriptor . getCommitFailurePolicy ( ) ; 
 
 + try 
 + { 
 + DatabaseDescriptor . setCommitFailurePolicy ( Config . CommitFailurePolicy . die ) ; 
 + CommitLog . handleCommitError ( " Testing die policy " , new Throwable ( ) ) ; 
 + Assert . assertTrue ( killerForTests . wasKilled ( ) ) ; 
 } 
 finally 
 { 
 - commitDir . setWritable ( true ) ; 
 + DatabaseDescriptor . setCommitFailurePolicy ( oldPolicy ) ; 
 + JVMStabilityInspector . replaceKiller ( originalKiller ) ; 
 } 
 } 
 
 diff - - git a / test / unit / org / apache / cassandra / utils / JVMStabilityInspectorTest . java b / test / unit / org / apache / cassandra / utils / JVMStabilityInspectorTest . java 
 new file mode 100644 
 index 0000000 . . e2a5107 
 - - - / dev / null 
 + + + b / test / unit / org / apache / cassandra / utils / JVMStabilityInspectorTest . java 
 @ @ - 0 , 0 + 1 , 51 @ @ 
 + package org . apache . cassandra . utils ; 
 + 
 + import org . apache . cassandra . config . Config ; 
 + import org . apache . cassandra . config . DatabaseDescriptor ; 
 + import org . apache . cassandra . io . FSReadError ; 
 + import org . junit . Test ; 
 + 
 + import java . io . IOException ; 
 + 
 + import static org . junit . Assert . assertFalse ; 
 + import static org . junit . Assert . assertTrue ; 
 + 
 + public class JVMStabilityInspectorTest 
 + { 
 + @ Test 
 + public void testKill ( ) throws Exception 
 + { 
 + KillerForTests killerForTests = new KillerForTests ( ) ; 
 + JVMStabilityInspector . Killer originalKiller = JVMStabilityInspector . replaceKiller ( killerForTests ) ; 
 + 
 + Config . DiskFailurePolicy oldPolicy = DatabaseDescriptor . getDiskFailurePolicy ( ) ; 
 + Config . CommitFailurePolicy oldCommitPolicy = DatabaseDescriptor . getCommitFailurePolicy ( ) ; 
 + try 
 + { 
 + killerForTests . reset ( ) ; 
 + JVMStabilityInspector . inspectThrowable ( new IOException ( ) ) ; 
 + assertFalse ( killerForTests . wasKilled ( ) ) ; 
 + 
 + killerForTests . reset ( ) ; 
 + JVMStabilityInspector . inspectThrowable ( new OutOfMemoryError ( ) ) ; 
 + assertTrue ( killerForTests . wasKilled ( ) ) ; 
 + 
 + DatabaseDescriptor . setDiskFailurePolicy ( Config . DiskFailurePolicy . die ) ; 
 + killerForTests . reset ( ) ; 
 + JVMStabilityInspector . inspectThrowable ( new FSReadError ( new IOException ( ) , " blah " ) ) ; 
 + assertTrue ( killerForTests . wasKilled ( ) ) ; 
 + 
 + DatabaseDescriptor . setCommitFailurePolicy ( Config . CommitFailurePolicy . die ) ; 
 + killerForTests . reset ( ) ; 
 + JVMStabilityInspector . inspectCommitLogThrowable ( new Throwable ( ) ) ; 
 + assertTrue ( killerForTests . wasKilled ( ) ) ; 
 + } 
 + finally 
 + { 
 + JVMStabilityInspector . replaceKiller ( originalKiller ) ; 
 + DatabaseDescriptor . setDiskFailurePolicy ( oldPolicy ) ; 
 + DatabaseDescriptor . setCommitFailurePolicy ( oldCommitPolicy ) ; 
 + } 
 + } 
 + 
 + } 
 diff - - git a / test / unit / org / apache / cassandra / utils / KillerForTests . java b / test / unit / org / apache / cassandra / utils / KillerForTests . java 
 new file mode 100644 
 index 0000000 . . 83cd7fc 
 - - - / dev / null 
 + + + b / test / unit / org / apache / cassandra / utils / KillerForTests . java 
 @ @ - 0 , 0 + 1 , 43 @ @ 
 + / * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package org . apache . cassandra . utils ; 
 + 
 + / * * 
 + * Responsible for stubbing out the System . exit ( ) logic during unit tests . 
 + * / 
 + public class KillerForTests extends JVMStabilityInspector . Killer 
 + { 
 + private boolean killed = false ; 
 + 
 + @ Override 
 + protected void killCurrentJVM ( Throwable t ) 
 + { 
 + killed = true ; 
 + } 
 + 
 + public boolean wasKilled ( ) 
 + { 
 + return killed ; 
 + } 
 + 
 + public void reset ( ) 
 + { 
 + killed = false ; 
 + } 
 + }

NEAREST DIFF:
ELIMINATEDSENTENCE
