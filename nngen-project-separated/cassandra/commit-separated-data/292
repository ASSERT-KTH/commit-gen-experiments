BLEU SCORE: 0.0370865905565703

TEST MSG: NettyFactoryTest is failing in trunk on MacOS
GENERATED MSG: Expose whether jna is enabled and memory is locked via JMX

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 0a38e6f . . 0175992 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 11 + 1 , 12 @ @ <nl> 4 . 0 <nl> + * NettyFactoryTest is failing in trunk on macOS ( CASSANDRA - 13831 ) <nl> * Allow changing log levels via nodetool for related classes ( CASSANDRA - 12696 ) <nl> * Add stress profile yaml with LWT ( CASSANDRA - 7960 ) <nl> * Reduce memory copies and object creations when acting on ByteBufs ( CASSANDRA - 13789 ) <nl> - * simplify mx4j configuration ( Cassandra - 13578 ) <nl> + * Simplify mx4j configuration ( Cassandra - 13578 ) <nl> * Fix trigger example on 4 . 0 ( CASSANDRA - 13796 ) <nl> - * force minumum timeout value ( CASSANDRA - 9375 ) <nl> - * use netty for streaming ( CASSANDRA - 12229 ) <nl> + * Force minumum timeout value ( CASSANDRA - 9375 ) <nl> + * Use netty for streaming ( CASSANDRA - 12229 ) <nl> * Use netty for internode messaging ( CASSANDRA - 8457 ) <nl> * Add bytes repaired / unrepaired to nodetool tablestats ( CASSANDRA - 13774 ) <nl> * Don ' t delete incremental repair sessions if they still have sstables ( CASSANDRA - 13758 ) <nl> diff - - git a / src / java / org / apache / cassandra / net / async / NettyFactory . java b / src / java / org / apache / cassandra / net / async / NettyFactory . java <nl> index 762c39b . . cb4bd22 100644 <nl> - - - a / src / java / org / apache / cassandra / net / async / NettyFactory . java <nl> + + + b / src / java / org / apache / cassandra / net / async / NettyFactory . java <nl> @ @ - 19 , 7 + 19 , 6 @ @ import io . netty . channel . ChannelOption ; <nl> import io . netty . channel . ChannelPipeline ; <nl> import io . netty . channel . EventLoopGroup ; <nl> import io . netty . channel . ServerChannel ; <nl> - import io . netty . channel . epoll . Epoll ; <nl> import io . netty . channel . epoll . EpollEventLoopGroup ; <nl> import io . netty . channel . epoll . EpollServerSocketChannel ; <nl> import io . netty . channel . epoll . EpollSocketChannel ; <nl> @ @ - 54 , 6 + 53 , 7 @ @ import org . apache . cassandra . service . NativeTransportService ; <nl> import org . apache . cassandra . utils . ChecksumType ; <nl> import org . apache . cassandra . utils . CoalescingStrategies ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> + import org . apache . cassandra . utils . NativeLibrary ; <nl> <nl> / * * <nl> * A factory for building Netty { @ link Channel } s . Channels here are setup with a pipeline to participate <nl> @ @ - 92 , 11 + 92 , 6 @ @ public final class NettyFactory <nl> } <nl> <nl> private static final boolean DEFAULT _ USE _ EPOLL = NativeTransportService . useEpoll ( ) ; <nl> - static <nl> - { <nl> - if ( ! DEFAULT _ USE _ EPOLL ) <nl> - logger . warn ( " epoll not availble { } " , Epoll . unavailabilityCause ( ) ) ; <nl> - } <nl> <nl> / * * <nl> * The size of the receive queue for the outbound channels . As outbound channels do not receive data <nl> diff - - git a / src / java / org / apache / cassandra / service / NativeTransportService . java b / src / java / org / apache / cassandra / service / NativeTransportService . java <nl> index 28e7dac . . b184442 100644 <nl> - - - a / src / java / org / apache / cassandra / service / NativeTransportService . java <nl> + + + b / src / java / org / apache / cassandra / service / NativeTransportService . java <nl> @ @ - 37 , 6 + 37 , 7 @ @ import org . apache . cassandra . metrics . AuthMetrics ; <nl> import org . apache . cassandra . metrics . ClientMetrics ; <nl> import org . apache . cassandra . transport . RequestThreadPoolExecutor ; <nl> import org . apache . cassandra . transport . Server ; <nl> + import org . apache . cassandra . utils . NativeLibrary ; <nl> <nl> / * * <nl> * Handles native transport server lifecycle and associated resources . Lazily initialized . <nl> @ @ - 159 , 6 + 160 , 10 @ @ public class NativeTransportService <nl> public static boolean useEpoll ( ) <nl> { <nl> final boolean enableEpoll = Boolean . parseBoolean ( System . getProperty ( " cassandra . native . epoll . enabled " , " true " ) ) ; <nl> + <nl> + if ( enableEpoll & & ! Epoll . isAvailable ( ) & & NativeLibrary . osType = = NativeLibrary . OSType . LINUX ) <nl> + logger . warn ( " epoll not availble { } " , Epoll . unavailabilityCause ( ) ) ; <nl> + <nl> return enableEpoll & & Epoll . isAvailable ( ) ; <nl> } <nl> <nl> diff - - git a / test / unit / org / apache / cassandra / net / async / NettyFactoryTest . java b / test / unit / org / apache / cassandra / net / async / NettyFactoryTest . java <nl> index c4cc7e6 . . 67b221a 100644 <nl> - - - a / test / unit / org / apache / cassandra / net / async / NettyFactoryTest . java <nl> + + + b / test / unit / org / apache / cassandra / net / async / NettyFactoryTest . java <nl> @ @ - 52 , 6 + 52 , 7 @ @ import org . apache . cassandra . exceptions . ConfigurationException ; <nl> import org . apache . cassandra . net . MessagingService ; <nl> import org . apache . cassandra . net . async . NettyFactory . InboundInitializer ; <nl> import org . apache . cassandra . net . async . NettyFactory . OutboundInitializer ; <nl> + import org . apache . cassandra . service . NativeTransportService ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> import org . apache . cassandra . utils . NativeLibrary ; <nl> <nl> @ @ - 61 , 6 + 62 , 7 @ @ public class NettyFactoryTest <nl> private static final InetSocketAddress REMOTE _ ADDR = new InetSocketAddress ( " 127 . 0 . 0 . 2 " , 9876 ) ; <nl> private static final int receiveBufferSize = 1 < < 16 ; <nl> private static final IInternodeAuthenticator AUTHENTICATOR = new AllowAllInternodeAuthenticator ( ) ; <nl> + private static final boolean EPOLL _ AVAILABLE = NativeTransportService . useEpoll ( ) ; <nl> <nl> private ChannelGroup channelGroup ; <nl> private NettyFactory factory ; <nl> @ @ - 87 , 6 + 89 , 8 @ @ public class NettyFactoryTest <nl> @ Test <nl> public void createServerChannel _ Epoll ( ) <nl> { <nl> + if ( ! EPOLL _ AVAILABLE ) <nl> + return ; <nl> Channel inboundChannel = createServerChannel ( true ) ; <nl> if ( inboundChannel = = null ) <nl> return ; <nl> @ @ - 176 , 6 + 180 , 8 @ @ public class NettyFactoryTest <nl> @ Test <nl> public void getEventLoopGroup _ EpollWithIoRatioBoost ( ) <nl> { <nl> + if ( ! EPOLL _ AVAILABLE ) <nl> + return ; <nl> getEventLoopGroup _ Epoll ( true ) ; <nl> } <nl> <nl> @ @ - 202 , 6 + 208 , 8 @ @ public class NettyFactoryTest <nl> @ Test <nl> public void getEventLoopGroup _ EpollWithoutIoRatioBoost ( ) <nl> { <nl> + if ( ! EPOLL _ AVAILABLE ) <nl> + return ; <nl> getEventLoopGroup _ Epoll ( false ) ; <nl> } <nl> <nl> @ @ - 227 , 6 + 235 , 8 @ @ public class NettyFactoryTest <nl> @ Test <nl> public void createOutboundBootstrap _ Epoll ( ) <nl> { <nl> + if ( ! EPOLL _ AVAILABLE ) <nl> + return ; <nl> Bootstrap bootstrap = createOutboundBootstrap ( true ) ; <nl> Assert . assertEquals ( EpollEventLoopGroup . class , bootstrap . config ( ) . group ( ) . getClass ( ) ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / NativeAccessMBean . java b / src / java / org / apache / cassandra / service / NativeAccessMBean . java <nl> new file mode 100644 <nl> index 0000000 . . 39b96c5 <nl> - - - / dev / null <nl> + + + b / src / java / org / apache / cassandra / service / NativeAccessMBean . java <nl> @ @ - 0 , 0 + 1 , 9 @ @ <nl> + package org . apache . cassandra . service ; <nl> + <nl> + public interface NativeAccessMBean <nl> + { <nl> + boolean isAvailable ( ) ; <nl> + <nl> + boolean isMemoryLockable ( ) ; <nl> + } <nl> +

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 0a38e6f . . 0175992 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 11 + 1 , 12 @ @ 
 4 . 0 
 + * NettyFactoryTest is failing in trunk on macOS ( CASSANDRA - 13831 ) 
 * Allow changing log levels via nodetool for related classes ( CASSANDRA - 12696 ) 
 * Add stress profile yaml with LWT ( CASSANDRA - 7960 ) 
 * Reduce memory copies and object creations when acting on ByteBufs ( CASSANDRA - 13789 ) 
 - * simplify mx4j configuration ( Cassandra - 13578 ) 
 + * Simplify mx4j configuration ( Cassandra - 13578 ) 
 * Fix trigger example on 4 . 0 ( CASSANDRA - 13796 ) 
 - * force minumum timeout value ( CASSANDRA - 9375 ) 
 - * use netty for streaming ( CASSANDRA - 12229 ) 
 + * Force minumum timeout value ( CASSANDRA - 9375 ) 
 + * Use netty for streaming ( CASSANDRA - 12229 ) 
 * Use netty for internode messaging ( CASSANDRA - 8457 ) 
 * Add bytes repaired / unrepaired to nodetool tablestats ( CASSANDRA - 13774 ) 
 * Don ' t delete incremental repair sessions if they still have sstables ( CASSANDRA - 13758 ) 
 diff - - git a / src / java / org / apache / cassandra / net / async / NettyFactory . java b / src / java / org / apache / cassandra / net / async / NettyFactory . java 
 index 762c39b . . cb4bd22 100644 
 - - - a / src / java / org / apache / cassandra / net / async / NettyFactory . java 
 + + + b / src / java / org / apache / cassandra / net / async / NettyFactory . java 
 @ @ - 19 , 7 + 19 , 6 @ @ import io . netty . channel . ChannelOption ; 
 import io . netty . channel . ChannelPipeline ; 
 import io . netty . channel . EventLoopGroup ; 
 import io . netty . channel . ServerChannel ; 
 - import io . netty . channel . epoll . Epoll ; 
 import io . netty . channel . epoll . EpollEventLoopGroup ; 
 import io . netty . channel . epoll . EpollServerSocketChannel ; 
 import io . netty . channel . epoll . EpollSocketChannel ; 
 @ @ - 54 , 6 + 53 , 7 @ @ import org . apache . cassandra . service . NativeTransportService ; 
 import org . apache . cassandra . utils . ChecksumType ; 
 import org . apache . cassandra . utils . CoalescingStrategies ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 + import org . apache . cassandra . utils . NativeLibrary ; 
 
 / * * 
 * A factory for building Netty { @ link Channel } s . Channels here are setup with a pipeline to participate 
 @ @ - 92 , 11 + 92 , 6 @ @ public final class NettyFactory 
 } 
 
 private static final boolean DEFAULT _ USE _ EPOLL = NativeTransportService . useEpoll ( ) ; 
 - static 
 - { 
 - if ( ! DEFAULT _ USE _ EPOLL ) 
 - logger . warn ( " epoll not availble { } " , Epoll . unavailabilityCause ( ) ) ; 
 - } 
 
 / * * 
 * The size of the receive queue for the outbound channels . As outbound channels do not receive data 
 diff - - git a / src / java / org / apache / cassandra / service / NativeTransportService . java b / src / java / org / apache / cassandra / service / NativeTransportService . java 
 index 28e7dac . . b184442 100644 
 - - - a / src / java / org / apache / cassandra / service / NativeTransportService . java 
 + + + b / src / java / org / apache / cassandra / service / NativeTransportService . java 
 @ @ - 37 , 6 + 37 , 7 @ @ import org . apache . cassandra . metrics . AuthMetrics ; 
 import org . apache . cassandra . metrics . ClientMetrics ; 
 import org . apache . cassandra . transport . RequestThreadPoolExecutor ; 
 import org . apache . cassandra . transport . Server ; 
 + import org . apache . cassandra . utils . NativeLibrary ; 
 
 / * * 
 * Handles native transport server lifecycle and associated resources . Lazily initialized . 
 @ @ - 159 , 6 + 160 , 10 @ @ public class NativeTransportService 
 public static boolean useEpoll ( ) 
 { 
 final boolean enableEpoll = Boolean . parseBoolean ( System . getProperty ( " cassandra . native . epoll . enabled " , " true " ) ) ; 
 + 
 + if ( enableEpoll & & ! Epoll . isAvailable ( ) & & NativeLibrary . osType = = NativeLibrary . OSType . LINUX ) 
 + logger . warn ( " epoll not availble { } " , Epoll . unavailabilityCause ( ) ) ; 
 + 
 return enableEpoll & & Epoll . isAvailable ( ) ; 
 } 
 
 diff - - git a / test / unit / org / apache / cassandra / net / async / NettyFactoryTest . java b / test / unit / org / apache / cassandra / net / async / NettyFactoryTest . java 
 index c4cc7e6 . . 67b221a 100644 
 - - - a / test / unit / org / apache / cassandra / net / async / NettyFactoryTest . java 
 + + + b / test / unit / org / apache / cassandra / net / async / NettyFactoryTest . java 
 @ @ - 52 , 6 + 52 , 7 @ @ import org . apache . cassandra . exceptions . ConfigurationException ; 
 import org . apache . cassandra . net . MessagingService ; 
 import org . apache . cassandra . net . async . NettyFactory . InboundInitializer ; 
 import org . apache . cassandra . net . async . NettyFactory . OutboundInitializer ; 
 + import org . apache . cassandra . service . NativeTransportService ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 import org . apache . cassandra . utils . NativeLibrary ; 
 
 @ @ - 61 , 6 + 62 , 7 @ @ public class NettyFactoryTest 
 private static final InetSocketAddress REMOTE _ ADDR = new InetSocketAddress ( " 127 . 0 . 0 . 2 " , 9876 ) ; 
 private static final int receiveBufferSize = 1 < < 16 ; 
 private static final IInternodeAuthenticator AUTHENTICATOR = new AllowAllInternodeAuthenticator ( ) ; 
 + private static final boolean EPOLL _ AVAILABLE = NativeTransportService . useEpoll ( ) ; 
 
 private ChannelGroup channelGroup ; 
 private NettyFactory factory ; 
 @ @ - 87 , 6 + 89 , 8 @ @ public class NettyFactoryTest 
 @ Test 
 public void createServerChannel _ Epoll ( ) 
 { 
 + if ( ! EPOLL _ AVAILABLE ) 
 + return ; 
 Channel inboundChannel = createServerChannel ( true ) ; 
 if ( inboundChannel = = null ) 
 return ; 
 @ @ - 176 , 6 + 180 , 8 @ @ public class NettyFactoryTest 
 @ Test 
 public void getEventLoopGroup _ EpollWithIoRatioBoost ( ) 
 { 
 + if ( ! EPOLL _ AVAILABLE ) 
 + return ; 
 getEventLoopGroup _ Epoll ( true ) ; 
 } 
 
 @ @ - 202 , 6 + 208 , 8 @ @ public class NettyFactoryTest 
 @ Test 
 public void getEventLoopGroup _ EpollWithoutIoRatioBoost ( ) 
 { 
 + if ( ! EPOLL _ AVAILABLE ) 
 + return ; 
 getEventLoopGroup _ Epoll ( false ) ; 
 } 
 
 @ @ - 227 , 6 + 235 , 8 @ @ public class NettyFactoryTest 
 @ Test 
 public void createOutboundBootstrap _ Epoll ( ) 
 { 
 + if ( ! EPOLL _ AVAILABLE ) 
 + return ; 
 Bootstrap bootstrap = createOutboundBootstrap ( true ) ; 
 Assert . assertEquals ( EpollEventLoopGroup . class , bootstrap . config ( ) . group ( ) . getClass ( ) ) ; 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / NativeAccessMBean . java b / src / java / org / apache / cassandra / service / NativeAccessMBean . java 
 new file mode 100644 
 index 0000000 . . 39b96c5 
 - - - / dev / null 
 + + + b / src / java / org / apache / cassandra / service / NativeAccessMBean . java 
 @ @ - 0 , 0 + 1 , 9 @ @ 
 + package org . apache . cassandra . service ; 
 + 
 + public interface NativeAccessMBean 
 + { 
 + boolean isAvailable ( ) ; 
 + 
 + boolean isMemoryLockable ( ) ; 
 + } 
 +
