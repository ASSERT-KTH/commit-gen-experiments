BLEU SCORE: 0.016932492841722675

TEST MSG: shutdown ( ) the compaction strategy in CFS . invalidate ( )
GENERATED MSG: fix merge

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index eaadbdd . . 3841397 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 289 , 26 + 289 , 27 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> / * * call when dropping or renaming a CF . Performs mbean housekeeping and invalidates CFS to other operations * / <nl> public void invalidate ( ) <nl> { <nl> + valid = false ; <nl> + <nl> try <nl> { <nl> - valid = false ; <nl> unregisterMBean ( ) ; <nl> - <nl> - SystemTable . removeTruncationRecord ( metadata . cfId ) ; <nl> - data . unreferenceSSTables ( ) ; <nl> - indexManager . invalidate ( ) ; <nl> - <nl> - for ( RowCacheKey key : CacheService . instance . rowCache . getKeySet ( ) ) <nl> - { <nl> - if ( key . cfId = = metadata . cfId ) <nl> - invalidateCachedRow ( key ) ; <nl> - } <nl> } <nl> catch ( Exception e ) <nl> { <nl> / / this shouldn ' t block anything . <nl> logger . warn ( " Failed unregistering mbean : " + mbeanName , e ) ; <nl> } <nl> + <nl> + compactionStrategy . shutdown ( ) ; <nl> + <nl> + SystemTable . removeTruncationRecord ( metadata . cfId ) ; <nl> + data . unreferenceSSTables ( ) ; <nl> + indexManager . invalidate ( ) ; <nl> + <nl> + for ( RowCacheKey key : CacheService . instance . rowCache . getKeySet ( ) ) <nl> + if ( key . cfId = = metadata . cfId ) <nl> + invalidateCachedRow ( key ) ; <nl> } <nl> <nl> / * *
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / ConsistencyChecker . java b / src / java / org / apache / cassandra / service / ConsistencyChecker . java <nl> index cf6c5d1 . . 983f73f 100644 <nl> - - - a / src / java / org / apache / cassandra / service / ConsistencyChecker . java <nl> + + + b / src / java / org / apache / cassandra / service / ConsistencyChecker . java <nl> @ @ - 49 , 7 + 49 , 7 @ @ import org . slf4j . LoggerFactory ; <nl> <nl> class ConsistencyChecker implements Runnable <nl> { <nl> - private static Logger logger _ = LoggerFactory . getLogger ( ConsistencyManager . class ) ; <nl> + private static Logger logger _ = LoggerFactory . getLogger ( ConsistencyChecker . class ) ; <nl> private static ExpiringMap < String , String > readRepairTable _ = new ExpiringMap < String , String > ( DatabaseDescriptor . getRpcTimeout ( ) ) ; <nl> <nl> private final String table _ ;

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index eaadbdd . . 3841397 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 289 , 26 + 289 , 27 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 / * * call when dropping or renaming a CF . Performs mbean housekeeping and invalidates CFS to other operations * / 
 public void invalidate ( ) 
 { 
 + valid = false ; 
 + 
 try 
 { 
 - valid = false ; 
 unregisterMBean ( ) ; 
 - 
 - SystemTable . removeTruncationRecord ( metadata . cfId ) ; 
 - data . unreferenceSSTables ( ) ; 
 - indexManager . invalidate ( ) ; 
 - 
 - for ( RowCacheKey key : CacheService . instance . rowCache . getKeySet ( ) ) 
 - { 
 - if ( key . cfId = = metadata . cfId ) 
 - invalidateCachedRow ( key ) ; 
 - } 
 } 
 catch ( Exception e ) 
 { 
 / / this shouldn ' t block anything . 
 logger . warn ( " Failed unregistering mbean : " + mbeanName , e ) ; 
 } 
 + 
 + compactionStrategy . shutdown ( ) ; 
 + 
 + SystemTable . removeTruncationRecord ( metadata . cfId ) ; 
 + data . unreferenceSSTables ( ) ; 
 + indexManager . invalidate ( ) ; 
 + 
 + for ( RowCacheKey key : CacheService . instance . rowCache . getKeySet ( ) ) 
 + if ( key . cfId = = metadata . cfId ) 
 + invalidateCachedRow ( key ) ; 
 } 
 
 / * *

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / ConsistencyChecker . java b / src / java / org / apache / cassandra / service / ConsistencyChecker . java 
 index cf6c5d1 . . 983f73f 100644 
 - - - a / src / java / org / apache / cassandra / service / ConsistencyChecker . java 
 + + + b / src / java / org / apache / cassandra / service / ConsistencyChecker . java 
 @ @ - 49 , 7 + 49 , 7 @ @ import org . slf4j . LoggerFactory ; 
 
 class ConsistencyChecker implements Runnable 
 { 
 - private static Logger logger _ = LoggerFactory . getLogger ( ConsistencyManager . class ) ; 
 + private static Logger logger _ = LoggerFactory . getLogger ( ConsistencyChecker . class ) ; 
 private static ExpiringMap < String , String > readRepairTable _ = new ExpiringMap < String , String > ( DatabaseDescriptor . getRpcTimeout ( ) ) ; 
 
 private final String table _ ;
