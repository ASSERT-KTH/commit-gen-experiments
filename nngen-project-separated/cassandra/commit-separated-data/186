BLEU SCORE: 0.05954672553679791

TEST MSG: Backport circleci yaml
GENERATED MSG: Migrate dtests to use pytest and python3

TEST DIFF (one line): diff - - git a / . circleci / config . yml b / . circleci / config . yml <nl> new file mode 100644 <nl> index 0000000 . . f881b70 <nl> - - - / dev / null <nl> + + + b / . circleci / config . yml <nl> @ @ - 0 , 0 + 1 , 339 @ @ <nl> + default _ env _ vars : & default _ env _ vars <nl> + JAVA _ HOME : / usr / local / openjdk8u154 - cassandra - b02 <nl> + ANT _ HOME : / usr / local / apache - ant - 1 . 10 . 1 <nl> + LANG : en _ US . UTF - 8 <nl> + JDK _ HOME : / usr / local / openjdk8u154 - cassandra - b02 <nl> + JAVA8 _ HOME : / usr / local / openjdk8u154 - cassandra - b02 <nl> + JAVA7 _ HOME : / usr / local / openjdk7u82 - cassandra - b02 <nl> + KEEP _ TEST _ DIR : true <nl> + DEFAULT _ DIR : / home / cassandra / cassandra - dtest <nl> + PYTHONIOENCODING : utf - 8 <nl> + PYTHONUNBUFFERED : true <nl> + CASS _ DRIVER _ NO _ EXTENSIONS : true <nl> + CASS _ DRIVER _ NO _ CYTHON : true <nl> + # For environments with xlarge instances , use more memory <nl> + high _ capacity _ env _ vars : & high _ capacity _ env _ vars <nl> + < < : * default _ env _ vars <nl> + CCM _ MAX _ HEAP _ SIZE : 2048M <nl> + CCM _ HEAP _ NEWSIZE : 512M <nl> + # For environments with limited memory ( e . g the free OSS CircleCI Tier ) <nl> + resource _ constrained _ env _ vars : & resource _ constrained _ env _ vars <nl> + < < : * default _ env _ vars <nl> + CCM _ MAX _ HEAP _ SIZE : 1024M <nl> + CCM _ HEAP _ NEWSIZE : 256M <nl> + # Settings for users who do not have a paid CircleCI account <nl> + default _ env _ settings : & default _ env _ settings <nl> + resource _ class : medium <nl> + parallelism : 4 <nl> + # Settings for users with high - capacity , paid CircleCI account <nl> + high _ capacity _ env _ settings : & high _ capacity _ env _ settings <nl> + resource _ class : xlarge <nl> + parallelism : 100 <nl> + default _ jobs : & default _ jobs <nl> + jobs : <nl> + - build <nl> + - unit _ tests : <nl> + requires : <nl> + - build <nl> + with _ dtests _ jobs : & with _ dtest _ jobs <nl> + jobs : <nl> + - build <nl> + - unit _ tests : <nl> + requires : <nl> + - build <nl> + - dtests - with - vnodes : <nl> + requires : <nl> + - build <nl> + - dtests - no - vnodes : <nl> + requires : <nl> + - build <nl> + with _ dtest _ jobs _ only : & with _ dtest _ jobs _ only <nl> + jobs : <nl> + - build <nl> + - dtests - with - vnodes : <nl> + requires : <nl> + - build <nl> + - dtests - no - vnodes : <nl> + requires : <nl> + - build <nl> + # Set env _ settings , env _ vars , and workflows / build _ and _ run _ tests based on environment <nl> + env _ settings : & env _ settings <nl> + < < : * default _ env _ settings <nl> + # < < : * high _ capacity _ env _ settings <nl> + env _ vars : & env _ vars <nl> + < < : * resource _ constrained _ env _ vars <nl> + # < < : * high _ capacity _ env _ vars <nl> + workflows : <nl> + version : 2 <nl> + build _ and _ run _ tests : * default _ jobs <nl> + # build _ and _ run _ tests : * with _ dtest _ jobs _ only <nl> + # build _ and _ run _ tests : * with _ dtest _ jobs <nl> + docker _ image : & docker _ image kjellman / cassandra - test : 0 . 4 . 3 <nl> + version : 2 <nl> + jobs : <nl> + build : <nl> + < < : * env _ settings <nl> + parallelism : 1 # This job doesn ' t benefit from parallelism <nl> + working _ directory : ~ / <nl> + shell : / bin / bash - eo pipefail - l <nl> + docker : <nl> + - image : * docker _ image <nl> + environment : <nl> + < < : * env _ vars <nl> + steps : <nl> + - run : <nl> + name : Log Environment Information <nl> + command : | <nl> + echo ' * * * id * * * ' <nl> + id <nl> + echo ' * * * cat / proc / cpuinfo * * * ' <nl> + cat / proc / cpuinfo <nl> + echo ' * * * free - m * * * ' <nl> + free - m <nl> + echo ' * * * df - m * * * ' <nl> + df - m <nl> + echo ' * * * ifconfig - a * * * ' <nl> + ifconfig - a <nl> + echo ' * * * uname - a * * * ' <nl> + uname - a <nl> + echo ' * * * mount * * * ' <nl> + mount <nl> + echo ' * * * env * * * ' <nl> + env <nl> + - run : <nl> + name : Clone Cassandra Repository ( via git ) <nl> + command : | <nl> + export LANG = en _ US . UTF - 8 <nl> + git clone - - single - branch - - depth 1 - - branch $ CIRCLE _ BRANCH git : / / github . com / $ CIRCLE _ PROJECT _ USERNAME / $ CIRCLE _ PROJECT _ REPONAME . git ~ / cassandra <nl> + - run : <nl> + name : Build Cassandra <nl> + command : | <nl> + export LANG = en _ US . UTF - 8 <nl> + export JAVA _ TOOL _ OPTIONS = " - Dfile . encoding = UTF8 " <nl> + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> + cd ~ / cassandra <nl> + # Loop to prevent failure due to maven - ant - tasks not downloading a jar . . <nl> + for x in $ ( seq 1 3 ) ; do <nl> + $ { ANT _ HOME } / bin / ant clean jar <nl> + RETURN = " $ ? " <nl> + if [ " $ { RETURN } " - eq " 0 " ] ; then <nl> + break <nl> + fi <nl> + done <nl> + # Exit , if we didn ' t build successfully <nl> + if [ " $ { RETURN } " - ne " 0 " ] ; then <nl> + echo " Build failed with exit code : $ { RETURN } " <nl> + exit $ { RETURN } <nl> + fi <nl> + no _ output _ timeout : 15m <nl> + - persist _ to _ workspace : <nl> + root : / home / cassandra <nl> + paths : <nl> + - cassandra <nl> + - . m2 <nl> + unit _ tests : <nl> + < < : * env _ settings <nl> + working _ directory : ~ / <nl> + shell : / bin / bash - eo pipefail - l <nl> + docker : <nl> + - image : * docker _ image <nl> + environment : <nl> + < < : * env _ vars <nl> + steps : <nl> + - attach _ workspace : <nl> + at : / home / cassandra <nl> + - run : <nl> + name : Determine Tests to Run <nl> + no _ output _ timeout : 15m <nl> + command : | <nl> + # reminder : this code ( along with all the steps ) is independently executed on every circle container <nl> + # so the goal here is to get the circleci script to return the tests * this * container will run <nl> + # which we do via the ` circleci ` cli tool . <nl> + <nl> + export LANG = en _ US . UTF - 8 <nl> + rm - fr ~ / cassandra - dtest / upgrade _ tests <nl> + echo " * * * java tests * * * " <nl> + <nl> + # get all of our unit test filenames <nl> + set - eo pipefail & & circleci tests glob " $ HOME / cassandra / test / unit / * * / * . java " > / tmp / all _ java _ unit _ tests . txt <nl> + <nl> + # split up the unit tests into groups based on the number of containers we have <nl> + set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = filename - - index = $ { CIRCLE _ NODE _ INDEX } - - total = $ { CIRCLE _ NODE _ TOTAL } / tmp / all _ java _ unit _ tests . txt > / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } . txt <nl> + set - eo pipefail & & cat / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } . txt | cut - c 37 - 1000000 | grep " Test \ . java $ " > / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt <nl> + echo " * * / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt " <nl> + cat / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt <nl> + - run : <nl> + name : Run Unit Tests <nl> + command : | <nl> + export LANG = en _ US . UTF - 8 <nl> + export JAVA _ TOOL _ OPTIONS = " - Dfile . encoding = UTF8 " <nl> + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> + # Skip all syncing to disk to avoid performance issues in flaky CI environments <nl> + export CASSANDRA _ SKIP _ SYNC = true <nl> + <nl> + time mv ~ / cassandra / tmp <nl> + cd / tmp / cassandra <nl> + ant testclasslist - Dtest . classlistfile = / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt <nl> + no _ output _ timeout : 15m <nl> + - store _ test _ results : <nl> + path : / tmp / cassandra / build / test / output / <nl> + - store _ artifacts : <nl> + path : / tmp / cassandra / build / test / output <nl> + destination : junitxml <nl> + - store _ artifacts : <nl> + path : / tmp / cassandra / build / test / logs <nl> + destination : logs <nl> + dtests - with - vnodes : <nl> + < < : * env _ settings <nl> + working _ directory : ~ / <nl> + shell : / bin / bash - eo pipefail - l <nl> + docker : <nl> + - image : * docker _ image <nl> + environment : <nl> + < < : * env _ vars <nl> + steps : <nl> + - attach _ workspace : <nl> + at : / home / cassandra <nl> + - run : <nl> + name : Clone Cassandra dtest Repository ( via git ) <nl> + command : | <nl> + export LANG = en _ US . UTF - 8 <nl> + git clone - - single - branch - - branch master - - depth 1 git : / / github . com / apache / cassandra - dtest . git ~ / cassandra - dtest <nl> + - run : <nl> + name : Configure virtualenv and python Dependencies <nl> + command : | <nl> + # note , this should be super quick as all dependencies should be pre - installed in the docker image <nl> + # if additional dependencies were added to requirmeents . txt and the docker image hasn ' t been updated <nl> + # we ' d have to install it here at runtime - - which will make things slow , so do yourself a favor and <nl> + # rebuild the docker image ! ( it automatically pulls the latest requirements . txt on build ) <nl> + export LANG = en _ US . UTF - 8 <nl> + source ~ / env / bin / activate <nl> + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> + export CASS _ DRIVER _ NO _ EXTENSIONS = true <nl> + export CASS _ DRIVER _ NO _ CYTHON = true <nl> + pip3 install - - exists - action w - r ~ / cassandra - dtest / requirements . txt <nl> + pip3 freeze <nl> + - run : <nl> + name : Determine Tests to Run <nl> + no _ output _ timeout : 5m <nl> + command : | <nl> + # reminder : this code ( along with all the steps ) is independently executed on every circle container <nl> + # so the goal here is to get the circleci script to return the tests * this * container will run <nl> + # which we do via the ` circleci ` cli tool . <nl> + <nl> + export LANG = en _ US . UTF - 8 <nl> + cd cassandra - dtest <nl> + source ~ / env / bin / activate <nl> + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> + <nl> + echo " * * * Collected DTests ( with vnodes ) * * * " <nl> + set - eo pipefail & & . / run _ dtests . py - - use - vnodes - - dtest - print - tests - only - - skip - resource - intensive - tests - - dtest - print - tests - output = / tmp / all _ dtest _ tests _ with _ vnodes <nl> + set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = classname / tmp / all _ dtest _ tests _ with _ vnodes > / tmp / split _ dtest _ tests _ with _ vnodes . txt <nl> + cat / tmp / split _ dtest _ tests _ with _ vnodes . txt | tr ' \ n ' ' ' > / tmp / split _ dtest _ tests _ with _ vnodes _ final . txt <nl> + # cat / tmp / split _ dtest _ tests _ with _ vnodes . txt <nl> + cat / tmp / split _ dtest _ tests _ with _ vnodes _ final . txt <nl> + - run : <nl> + name : Run dtests ( with vnodes ) <nl> + no _ output _ timeout : 15m <nl> + command : | <nl> + echo " cat / tmp / split _ dtest _ tests _ with _ vnodes _ final . txt " <nl> + cat / tmp / split _ dtest _ tests _ with _ vnodes _ final . txt <nl> + <nl> + source ~ / env / bin / activate <nl> + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> + <nl> + cd ~ / cassandra - dtest <nl> + mkdir - p / tmp / dtest <nl> + <nl> + echo " env : $ ( env ) " <nl> + echo " * * done env " <nl> + mkdir - p / tmp / results / dtests <nl> + # we need the " set - o pipefail " here so that the exit code that circleci will actually use is from pytest and not the exit code from tee <nl> + export SPLIT _ TESTS = ` cat / tmp / split _ dtest _ tests _ with _ vnodes _ final . txt ` <nl> + # Skip all syncing to disk to avoid performance issues in flaky CI environments <nl> + export CASSANDRA _ SKIP _ SYNC = true <nl> + set - o pipefail & & cd ~ / cassandra - dtest & & pytest - - log - level = " INFO " - - use - vnodes - - num - tokens = 32 - - junit - xml = / tmp / results / dtests / pytest _ result _ with _ vnodes . xml - s - - cassandra - dir = / home / cassandra / cassandra - - skip - resource - intensive - tests - - keep - test - dir $ SPLIT _ TESTS 2 > & 1 | tee / tmp / dtest / stdout . txt <nl> + - store _ test _ results : <nl> + path : / tmp / results <nl> + - store _ artifacts : <nl> + path : / tmp / dtest <nl> + destination : dtest _ with _ vnodes <nl> + - store _ artifacts : <nl> + path : ~ / cassandra - dtest / logs <nl> + destination : dtest _ with _ vnodes _ logs <nl> + dtests - no - vnodes : <nl> + < < : * env _ settings <nl> + working _ directory : ~ / <nl> + shell : / bin / bash - eo pipefail - l <nl> + docker : <nl> + - image : * docker _ image <nl> + environment : <nl> + < < : * env _ vars <nl> + steps : <nl> + - attach _ workspace : <nl> + at : / home / cassandra <nl> + - run : <nl> + name : Clone Cassandra dtest Repository ( via git ) <nl> + command : | <nl> + export LANG = en _ US . UTF - 8 <nl> + git clone - - single - branch - - branch master - - depth 1 git : / / github . com / apache / cassandra - dtest . git ~ / cassandra - dtest <nl> + - run : <nl> + name : Configure virtualenv and python Dependencies <nl> + command : | <nl> + # note , this should be super quick as all dependencies should be pre - installed in the docker image <nl> + # if additional dependencies were added to requirmeents . txt and the docker image hasn ' t been updated <nl> + # we ' d have to install it here at runtime - - which will make things slow , so do yourself a favor and <nl> + # rebuild the docker image ! ( it automatically pulls the latest requirements . txt on build ) <nl> + export LANG = en _ US . UTF - 8 <nl> + source ~ / env / bin / activate <nl> + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> + export CASS _ DRIVER _ NO _ EXTENSIONS = true <nl> + export CASS _ DRIVER _ NO _ CYTHON = true <nl> + pip3 install - - exists - action w - r ~ / cassandra - dtest / requirements . txt <nl> + pip3 freeze <nl> + - run : <nl> + name : Determine Tests to Run <nl> + no _ output _ timeout : 5m <nl> + command : | <nl> + # reminder : this code ( along with all the steps ) is independently executed on every circle container <nl> + # so the goal here is to get the circleci script to return the tests * this * container will run <nl> + # which we do via the ` circleci ` cli tool . <nl> + <nl> + export LANG = en _ US . UTF - 8 <nl> + cd cassandra - dtest <nl> + source ~ / env / bin / activate <nl> + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> + <nl> + echo " * * * Collected DTests ( without vnodes ) * * * " <nl> + . / run _ dtests . py - - dtest - print - tests - only - - skip - resource - intensive - tests - - dtest - print - tests - output = / tmp / all _ dtest _ tests _ without _ vnodes <nl> + set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = classname / tmp / all _ dtest _ tests _ without _ vnodes > / tmp / split _ dtest _ tests _ without _ vnodes . txt <nl> + cat / tmp / split _ dtest _ tests _ without _ vnodes . txt | tr ' \ n ' ' ' > / tmp / split _ dtest _ tests _ without _ vnodes _ final . txt <nl> + # cat / tmp / split _ dtest _ tests _ without _ vnodes . txt <nl> + cat / tmp / split _ dtest _ tests _ without _ vnodes _ final . txt <nl> + - run : <nl> + name : Run dtests ( without vnodes ) <nl> + no _ output _ timeout : 15m <nl> + command : | <nl> + # for now require at least 50 circleci containers to run the dtests ( with less resources the tests won ' t produce reliable results or will fail to complete ) <nl> + if [ $ CIRCLE _ NODE _ TOTAL - gt 0 ] ; then <nl> + source ~ / env / bin / activate <nl> + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin <nl> + <nl> + cd ~ / cassandra - dtest <nl> + mkdir - p / tmp / dtest <nl> + <nl> + mkdir - p / tmp / results / dtests <nl> + # we need the " set - o pipefail " here so that the exit code that circleci will actually use is from pytest and not the exit code from tee <nl> + export SPLIT _ TESTS = ` cat / tmp / split _ dtest _ tests _ without _ vnodes _ final . txt ` <nl> + # Skip all syncing to disk to avoid performance issues in flaky CI environments <nl> + export CASSANDRA _ SKIP _ SYNC = true <nl> + set - o pipefail & & cd ~ / cassandra - dtest & & pytest - - log - level = " INFO " - - junit - xml = / tmp / results / dtests / pytest _ result _ novnodes . xml - s - - cassandra - dir = / home / cassandra / cassandra - - skip - resource - intensive - tests - - keep - test - dir $ SPLIT _ TESTS 2 > & 1 | tee / tmp / dtest / stdout - novnodes . txt <nl> + fi <nl> + - store _ test _ results : <nl> + path : / tmp / results <nl> + - store _ artifacts : <nl> + path : / tmp / dtest <nl> + destination : dtest _ no _ vnodes <nl> + - store _ artifacts : <nl> + path : ~ / cassandra - dtest / logs <nl> + destination : dtest _ no _ vnodes _ logs <nl> diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 09930ce . . 2e45b85 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 2 . 13 <nl> + * Backport circleci yaml ( CASSANDRA - 14240 ) <nl> Merged from 2 . 1 : <nl> * CVE - 2017 - 5929 Security vulnerability in Logback warning in NEWS . txt ( CASSANDRA - 14183 ) <nl> <nl> diff - - git a / circle . yml b / circle . yml <nl> deleted file mode 100644 <nl> index 02a1664 . . 0000000 <nl> - - - a / circle . yml <nl> + + + / dev / null <nl> @ @ - 1 , 18 + 0 , 0 @ @ <nl> - machine : <nl> - java : <nl> - version : ' oraclejdk8 ' <nl> - <nl> - test : <nl> - pre : <nl> - - sudo apt - get update ; sudo apt - get install wamerican : <nl> - parallel : true <nl> - override : <nl> - - case $ CIRCLE _ NODE _ INDEX in 0 ) ant test ; ; 1 ) ant long - test ; ; 2 ) ant test - compression ; ; 3 ) ant eclipse - warnings ; ; esac : <nl> - parallel : true <nl> - <nl> - post : <nl> - - mkdir - p $ CIRCLE _ TEST _ REPORTS / junit / : <nl> - parallel : true <nl> - - case $ CIRCLE _ NODE _ INDEX in [ 012 ] ) find . / build / test / output / - iname " * . xml " - exec cp { } $ CIRCLE _ TEST _ REPORTS / junit / \ ; ; ; esac : <nl> - parallel : true <nl> -
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / . circleci / config . yml b / . circleci / config . yml 
 new file mode 100644 
 index 0000000 . . f881b70 
 - - - / dev / null 
 + + + b / . circleci / config . yml 
 @ @ - 0 , 0 + 1 , 339 @ @ 
 + default _ env _ vars : & default _ env _ vars 
 + JAVA _ HOME : / usr / local / openjdk8u154 - cassandra - b02 
 + ANT _ HOME : / usr / local / apache - ant - 1 . 10 . 1 
 + LANG : en _ US . UTF - 8 
 + JDK _ HOME : / usr / local / openjdk8u154 - cassandra - b02 
 + JAVA8 _ HOME : / usr / local / openjdk8u154 - cassandra - b02 
 + JAVA7 _ HOME : / usr / local / openjdk7u82 - cassandra - b02 
 + KEEP _ TEST _ DIR : true 
 + DEFAULT _ DIR : / home / cassandra / cassandra - dtest 
 + PYTHONIOENCODING : utf - 8 
 + PYTHONUNBUFFERED : true 
 + CASS _ DRIVER _ NO _ EXTENSIONS : true 
 + CASS _ DRIVER _ NO _ CYTHON : true 
 + # For environments with xlarge instances , use more memory 
 + high _ capacity _ env _ vars : & high _ capacity _ env _ vars 
 + < < : * default _ env _ vars 
 + CCM _ MAX _ HEAP _ SIZE : 2048M 
 + CCM _ HEAP _ NEWSIZE : 512M 
 + # For environments with limited memory ( e . g the free OSS CircleCI Tier ) 
 + resource _ constrained _ env _ vars : & resource _ constrained _ env _ vars 
 + < < : * default _ env _ vars 
 + CCM _ MAX _ HEAP _ SIZE : 1024M 
 + CCM _ HEAP _ NEWSIZE : 256M 
 + # Settings for users who do not have a paid CircleCI account 
 + default _ env _ settings : & default _ env _ settings 
 + resource _ class : medium 
 + parallelism : 4 
 + # Settings for users with high - capacity , paid CircleCI account 
 + high _ capacity _ env _ settings : & high _ capacity _ env _ settings 
 + resource _ class : xlarge 
 + parallelism : 100 
 + default _ jobs : & default _ jobs 
 + jobs : 
 + - build 
 + - unit _ tests : 
 + requires : 
 + - build 
 + with _ dtests _ jobs : & with _ dtest _ jobs 
 + jobs : 
 + - build 
 + - unit _ tests : 
 + requires : 
 + - build 
 + - dtests - with - vnodes : 
 + requires : 
 + - build 
 + - dtests - no - vnodes : 
 + requires : 
 + - build 
 + with _ dtest _ jobs _ only : & with _ dtest _ jobs _ only 
 + jobs : 
 + - build 
 + - dtests - with - vnodes : 
 + requires : 
 + - build 
 + - dtests - no - vnodes : 
 + requires : 
 + - build 
 + # Set env _ settings , env _ vars , and workflows / build _ and _ run _ tests based on environment 
 + env _ settings : & env _ settings 
 + < < : * default _ env _ settings 
 + # < < : * high _ capacity _ env _ settings 
 + env _ vars : & env _ vars 
 + < < : * resource _ constrained _ env _ vars 
 + # < < : * high _ capacity _ env _ vars 
 + workflows : 
 + version : 2 
 + build _ and _ run _ tests : * default _ jobs 
 + # build _ and _ run _ tests : * with _ dtest _ jobs _ only 
 + # build _ and _ run _ tests : * with _ dtest _ jobs 
 + docker _ image : & docker _ image kjellman / cassandra - test : 0 . 4 . 3 
 + version : 2 
 + jobs : 
 + build : 
 + < < : * env _ settings 
 + parallelism : 1 # This job doesn ' t benefit from parallelism 
 + working _ directory : ~ / 
 + shell : / bin / bash - eo pipefail - l 
 + docker : 
 + - image : * docker _ image 
 + environment : 
 + < < : * env _ vars 
 + steps : 
 + - run : 
 + name : Log Environment Information 
 + command : | 
 + echo ' * * * id * * * ' 
 + id 
 + echo ' * * * cat / proc / cpuinfo * * * ' 
 + cat / proc / cpuinfo 
 + echo ' * * * free - m * * * ' 
 + free - m 
 + echo ' * * * df - m * * * ' 
 + df - m 
 + echo ' * * * ifconfig - a * * * ' 
 + ifconfig - a 
 + echo ' * * * uname - a * * * ' 
 + uname - a 
 + echo ' * * * mount * * * ' 
 + mount 
 + echo ' * * * env * * * ' 
 + env 
 + - run : 
 + name : Clone Cassandra Repository ( via git ) 
 + command : | 
 + export LANG = en _ US . UTF - 8 
 + git clone - - single - branch - - depth 1 - - branch $ CIRCLE _ BRANCH git : / / github . com / $ CIRCLE _ PROJECT _ USERNAME / $ CIRCLE _ PROJECT _ REPONAME . git ~ / cassandra 
 + - run : 
 + name : Build Cassandra 
 + command : | 
 + export LANG = en _ US . UTF - 8 
 + export JAVA _ TOOL _ OPTIONS = " - Dfile . encoding = UTF8 " 
 + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 + cd ~ / cassandra 
 + # Loop to prevent failure due to maven - ant - tasks not downloading a jar . . 
 + for x in $ ( seq 1 3 ) ; do 
 + $ { ANT _ HOME } / bin / ant clean jar 
 + RETURN = " $ ? " 
 + if [ " $ { RETURN } " - eq " 0 " ] ; then 
 + break 
 + fi 
 + done 
 + # Exit , if we didn ' t build successfully 
 + if [ " $ { RETURN } " - ne " 0 " ] ; then 
 + echo " Build failed with exit code : $ { RETURN } " 
 + exit $ { RETURN } 
 + fi 
 + no _ output _ timeout : 15m 
 + - persist _ to _ workspace : 
 + root : / home / cassandra 
 + paths : 
 + - cassandra 
 + - . m2 
 + unit _ tests : 
 + < < : * env _ settings 
 + working _ directory : ~ / 
 + shell : / bin / bash - eo pipefail - l 
 + docker : 
 + - image : * docker _ image 
 + environment : 
 + < < : * env _ vars 
 + steps : 
 + - attach _ workspace : 
 + at : / home / cassandra 
 + - run : 
 + name : Determine Tests to Run 
 + no _ output _ timeout : 15m 
 + command : | 
 + # reminder : this code ( along with all the steps ) is independently executed on every circle container 
 + # so the goal here is to get the circleci script to return the tests * this * container will run 
 + # which we do via the ` circleci ` cli tool . 
 + 
 + export LANG = en _ US . UTF - 8 
 + rm - fr ~ / cassandra - dtest / upgrade _ tests 
 + echo " * * * java tests * * * " 
 + 
 + # get all of our unit test filenames 
 + set - eo pipefail & & circleci tests glob " $ HOME / cassandra / test / unit / * * / * . java " > / tmp / all _ java _ unit _ tests . txt 
 + 
 + # split up the unit tests into groups based on the number of containers we have 
 + set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = filename - - index = $ { CIRCLE _ NODE _ INDEX } - - total = $ { CIRCLE _ NODE _ TOTAL } / tmp / all _ java _ unit _ tests . txt > / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } . txt 
 + set - eo pipefail & & cat / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } . txt | cut - c 37 - 1000000 | grep " Test \ . java $ " > / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt 
 + echo " * * / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt " 
 + cat / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt 
 + - run : 
 + name : Run Unit Tests 
 + command : | 
 + export LANG = en _ US . UTF - 8 
 + export JAVA _ TOOL _ OPTIONS = " - Dfile . encoding = UTF8 " 
 + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 + # Skip all syncing to disk to avoid performance issues in flaky CI environments 
 + export CASSANDRA _ SKIP _ SYNC = true 
 + 
 + time mv ~ / cassandra / tmp 
 + cd / tmp / cassandra 
 + ant testclasslist - Dtest . classlistfile = / tmp / java _ tests _ $ { CIRCLE _ NODE _ INDEX } _ final . txt 
 + no _ output _ timeout : 15m 
 + - store _ test _ results : 
 + path : / tmp / cassandra / build / test / output / 
 + - store _ artifacts : 
 + path : / tmp / cassandra / build / test / output 
 + destination : junitxml 
 + - store _ artifacts : 
 + path : / tmp / cassandra / build / test / logs 
 + destination : logs 
 + dtests - with - vnodes : 
 + < < : * env _ settings 
 + working _ directory : ~ / 
 + shell : / bin / bash - eo pipefail - l 
 + docker : 
 + - image : * docker _ image 
 + environment : 
 + < < : * env _ vars 
 + steps : 
 + - attach _ workspace : 
 + at : / home / cassandra 
 + - run : 
 + name : Clone Cassandra dtest Repository ( via git ) 
 + command : | 
 + export LANG = en _ US . UTF - 8 
 + git clone - - single - branch - - branch master - - depth 1 git : / / github . com / apache / cassandra - dtest . git ~ / cassandra - dtest 
 + - run : 
 + name : Configure virtualenv and python Dependencies 
 + command : | 
 + # note , this should be super quick as all dependencies should be pre - installed in the docker image 
 + # if additional dependencies were added to requirmeents . txt and the docker image hasn ' t been updated 
 + # we ' d have to install it here at runtime - - which will make things slow , so do yourself a favor and 
 + # rebuild the docker image ! ( it automatically pulls the latest requirements . txt on build ) 
 + export LANG = en _ US . UTF - 8 
 + source ~ / env / bin / activate 
 + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 + export CASS _ DRIVER _ NO _ EXTENSIONS = true 
 + export CASS _ DRIVER _ NO _ CYTHON = true 
 + pip3 install - - exists - action w - r ~ / cassandra - dtest / requirements . txt 
 + pip3 freeze 
 + - run : 
 + name : Determine Tests to Run 
 + no _ output _ timeout : 5m 
 + command : | 
 + # reminder : this code ( along with all the steps ) is independently executed on every circle container 
 + # so the goal here is to get the circleci script to return the tests * this * container will run 
 + # which we do via the ` circleci ` cli tool . 
 + 
 + export LANG = en _ US . UTF - 8 
 + cd cassandra - dtest 
 + source ~ / env / bin / activate 
 + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 + 
 + echo " * * * Collected DTests ( with vnodes ) * * * " 
 + set - eo pipefail & & . / run _ dtests . py - - use - vnodes - - dtest - print - tests - only - - skip - resource - intensive - tests - - dtest - print - tests - output = / tmp / all _ dtest _ tests _ with _ vnodes 
 + set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = classname / tmp / all _ dtest _ tests _ with _ vnodes > / tmp / split _ dtest _ tests _ with _ vnodes . txt 
 + cat / tmp / split _ dtest _ tests _ with _ vnodes . txt | tr ' \ n ' ' ' > / tmp / split _ dtest _ tests _ with _ vnodes _ final . txt 
 + # cat / tmp / split _ dtest _ tests _ with _ vnodes . txt 
 + cat / tmp / split _ dtest _ tests _ with _ vnodes _ final . txt 
 + - run : 
 + name : Run dtests ( with vnodes ) 
 + no _ output _ timeout : 15m 
 + command : | 
 + echo " cat / tmp / split _ dtest _ tests _ with _ vnodes _ final . txt " 
 + cat / tmp / split _ dtest _ tests _ with _ vnodes _ final . txt 
 + 
 + source ~ / env / bin / activate 
 + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 + 
 + cd ~ / cassandra - dtest 
 + mkdir - p / tmp / dtest 
 + 
 + echo " env : $ ( env ) " 
 + echo " * * done env " 
 + mkdir - p / tmp / results / dtests 
 + # we need the " set - o pipefail " here so that the exit code that circleci will actually use is from pytest and not the exit code from tee 
 + export SPLIT _ TESTS = ` cat / tmp / split _ dtest _ tests _ with _ vnodes _ final . txt ` 
 + # Skip all syncing to disk to avoid performance issues in flaky CI environments 
 + export CASSANDRA _ SKIP _ SYNC = true 
 + set - o pipefail & & cd ~ / cassandra - dtest & & pytest - - log - level = " INFO " - - use - vnodes - - num - tokens = 32 - - junit - xml = / tmp / results / dtests / pytest _ result _ with _ vnodes . xml - s - - cassandra - dir = / home / cassandra / cassandra - - skip - resource - intensive - tests - - keep - test - dir $ SPLIT _ TESTS 2 > & 1 | tee / tmp / dtest / stdout . txt 
 + - store _ test _ results : 
 + path : / tmp / results 
 + - store _ artifacts : 
 + path : / tmp / dtest 
 + destination : dtest _ with _ vnodes 
 + - store _ artifacts : 
 + path : ~ / cassandra - dtest / logs 
 + destination : dtest _ with _ vnodes _ logs 
 + dtests - no - vnodes : 
 + < < : * env _ settings 
 + working _ directory : ~ / 
 + shell : / bin / bash - eo pipefail - l 
 + docker : 
 + - image : * docker _ image 
 + environment : 
 + < < : * env _ vars 
 + steps : 
 + - attach _ workspace : 
 + at : / home / cassandra 
 + - run : 
 + name : Clone Cassandra dtest Repository ( via git ) 
 + command : | 
 + export LANG = en _ US . UTF - 8 
 + git clone - - single - branch - - branch master - - depth 1 git : / / github . com / apache / cassandra - dtest . git ~ / cassandra - dtest 
 + - run : 
 + name : Configure virtualenv and python Dependencies 
 + command : | 
 + # note , this should be super quick as all dependencies should be pre - installed in the docker image 
 + # if additional dependencies were added to requirmeents . txt and the docker image hasn ' t been updated 
 + # we ' d have to install it here at runtime - - which will make things slow , so do yourself a favor and 
 + # rebuild the docker image ! ( it automatically pulls the latest requirements . txt on build ) 
 + export LANG = en _ US . UTF - 8 
 + source ~ / env / bin / activate 
 + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 + export CASS _ DRIVER _ NO _ EXTENSIONS = true 
 + export CASS _ DRIVER _ NO _ CYTHON = true 
 + pip3 install - - exists - action w - r ~ / cassandra - dtest / requirements . txt 
 + pip3 freeze 
 + - run : 
 + name : Determine Tests to Run 
 + no _ output _ timeout : 5m 
 + command : | 
 + # reminder : this code ( along with all the steps ) is independently executed on every circle container 
 + # so the goal here is to get the circleci script to return the tests * this * container will run 
 + # which we do via the ` circleci ` cli tool . 
 + 
 + export LANG = en _ US . UTF - 8 
 + cd cassandra - dtest 
 + source ~ / env / bin / activate 
 + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 + 
 + echo " * * * Collected DTests ( without vnodes ) * * * " 
 + . / run _ dtests . py - - dtest - print - tests - only - - skip - resource - intensive - tests - - dtest - print - tests - output = / tmp / all _ dtest _ tests _ without _ vnodes 
 + set - eo pipefail & & circleci tests split - - split - by = timings - - timings - type = classname / tmp / all _ dtest _ tests _ without _ vnodes > / tmp / split _ dtest _ tests _ without _ vnodes . txt 
 + cat / tmp / split _ dtest _ tests _ without _ vnodes . txt | tr ' \ n ' ' ' > / tmp / split _ dtest _ tests _ without _ vnodes _ final . txt 
 + # cat / tmp / split _ dtest _ tests _ without _ vnodes . txt 
 + cat / tmp / split _ dtest _ tests _ without _ vnodes _ final . txt 
 + - run : 
 + name : Run dtests ( without vnodes ) 
 + no _ output _ timeout : 15m 
 + command : | 
 + # for now require at least 50 circleci containers to run the dtests ( with less resources the tests won ' t produce reliable results or will fail to complete ) 
 + if [ $ CIRCLE _ NODE _ TOTAL - gt 0 ] ; then 
 + source ~ / env / bin / activate 
 + export PATH = $ PATH : $ ANT _ HOME / bin : $ JAVA _ HOME / bin 
 + 
 + cd ~ / cassandra - dtest 
 + mkdir - p / tmp / dtest 
 + 
 + mkdir - p / tmp / results / dtests 
 + # we need the " set - o pipefail " here so that the exit code that circleci will actually use is from pytest and not the exit code from tee 
 + export SPLIT _ TESTS = ` cat / tmp / split _ dtest _ tests _ without _ vnodes _ final . txt ` 
 + # Skip all syncing to disk to avoid performance issues in flaky CI environments 
 + export CASSANDRA _ SKIP _ SYNC = true 
 + set - o pipefail & & cd ~ / cassandra - dtest & & pytest - - log - level = " INFO " - - junit - xml = / tmp / results / dtests / pytest _ result _ novnodes . xml - s - - cassandra - dir = / home / cassandra / cassandra - - skip - resource - intensive - tests - - keep - test - dir $ SPLIT _ TESTS 2 > & 1 | tee / tmp / dtest / stdout - novnodes . txt 
 + fi 
 + - store _ test _ results : 
 + path : / tmp / results 
 + - store _ artifacts : 
 + path : / tmp / dtest 
 + destination : dtest _ no _ vnodes 
 + - store _ artifacts : 
 + path : ~ / cassandra - dtest / logs 
 + destination : dtest _ no _ vnodes _ logs 
 diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 09930ce . . 2e45b85 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 2 . 13 
 + * Backport circleci yaml ( CASSANDRA - 14240 ) 
 Merged from 2 . 1 : 
 * CVE - 2017 - 5929 Security vulnerability in Logback warning in NEWS . txt ( CASSANDRA - 14183 ) 
 
 diff - - git a / circle . yml b / circle . yml 
 deleted file mode 100644 
 index 02a1664 . . 0000000 
 - - - a / circle . yml 
 + + + / dev / null 
 @ @ - 1 , 18 + 0 , 0 @ @ 
 - machine : 
 - java : 
 - version : ' oraclejdk8 ' 
 - 
 - test : 
 - pre : 
 - - sudo apt - get update ; sudo apt - get install wamerican : 
 - parallel : true 
 - override : 
 - - case $ CIRCLE _ NODE _ INDEX in 0 ) ant test ; ; 1 ) ant long - test ; ; 2 ) ant test - compression ; ; 3 ) ant eclipse - warnings ; ; esac : 
 - parallel : true 
 - 
 - post : 
 - - mkdir - p $ CIRCLE _ TEST _ REPORTS / junit / : 
 - parallel : true 
 - - case $ CIRCLE _ NODE _ INDEX in [ 012 ] ) find . / build / test / output / - iname " * . xml " - exec cp { } $ CIRCLE _ TEST _ REPORTS / junit / \ ; ; ; esac : 
 - parallel : true 
 -

NEAREST DIFF:
ELIMINATEDSENTENCE
