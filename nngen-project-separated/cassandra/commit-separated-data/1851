BLEU SCORE: 0.03283637368030199

TEST MSG: Re - enable getSSTablePreempiveOpenIntervalInMB ( ninja )
GENERATED MSG: fix build

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index 1ee74e9 . . 1dd1688 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 1463 , 8 + 1463 , 7 @ @ public class DatabaseDescriptor <nl> <nl> public static int getSSTablePreempiveOpenIntervalInMB ( ) <nl> { <nl> - / / return conf . sstable _ preemptive _ open _ interval _ in _ mb ; <nl> - return - 1 ; <nl> + return conf . sstable _ preemptive _ open _ interval _ in _ mb ; <nl> } <nl> <nl> public static boolean getTrickleFsync ( )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> index 7e0b199 . . b8e290c 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java <nl> @ @ - 57 , 7 + 57 , 7 @ @ public class SSTableWriter extends SSTable <nl> { <nl> super ( filename , metadata , partitioner ) ; <nl> iwriter = new IndexWriter ( desc , partitioner , keyCount ) ; <nl> - dbuilder = SegmentedFile . getBuilder ( ) ; <nl> + dbuilder = SegmentedFile . getBuilder ( DatabaseDescriptor . getDiskAccessMode ( ) ) ; <nl> dataFile = new BufferedRandomAccessFile ( getFilename ( ) , " rw " , DatabaseDescriptor . getInMemoryCompactionLimit ( ) ) ; <nl> } <nl> <nl> @ @ - 344 , 7 + 344 , 7 @ @ public class SSTableWriter extends SSTable <nl> this . desc = desc ; <nl> this . partitioner = part ; <nl> indexFile = new BufferedRandomAccessFile ( desc . filenameFor ( SSTable . COMPONENT _ INDEX ) , " rw " , 8 * 1024 * 1024 ) ; <nl> - builder = SegmentedFile . getBuilder ( ) ; <nl> + builder = SegmentedFile . getBuilder ( DatabaseDescriptor . getIndexAccessMode ( ) ) ; <nl> summary = new IndexSummary ( ) ; <nl> bf = BloomFilter . getFilter ( keyCount , 15 ) ; <nl> }

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index 1ee74e9 . . 1dd1688 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 1463 , 8 + 1463 , 7 @ @ public class DatabaseDescriptor 
 
 public static int getSSTablePreempiveOpenIntervalInMB ( ) 
 { 
 - / / return conf . sstable _ preemptive _ open _ interval _ in _ mb ; 
 - return - 1 ; 
 + return conf . sstable _ preemptive _ open _ interval _ in _ mb ; 
 } 
 
 public static boolean getTrickleFsync ( )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 index 7e0b199 . . b8e290c 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableWriter . java 
 @ @ - 57 , 7 + 57 , 7 @ @ public class SSTableWriter extends SSTable 
 { 
 super ( filename , metadata , partitioner ) ; 
 iwriter = new IndexWriter ( desc , partitioner , keyCount ) ; 
 - dbuilder = SegmentedFile . getBuilder ( ) ; 
 + dbuilder = SegmentedFile . getBuilder ( DatabaseDescriptor . getDiskAccessMode ( ) ) ; 
 dataFile = new BufferedRandomAccessFile ( getFilename ( ) , " rw " , DatabaseDescriptor . getInMemoryCompactionLimit ( ) ) ; 
 } 
 
 @ @ - 344 , 7 + 344 , 7 @ @ public class SSTableWriter extends SSTable 
 this . desc = desc ; 
 this . partitioner = part ; 
 indexFile = new BufferedRandomAccessFile ( desc . filenameFor ( SSTable . COMPONENT _ INDEX ) , " rw " , 8 * 1024 * 1024 ) ; 
 - builder = SegmentedFile . getBuilder ( ) ; 
 + builder = SegmentedFile . getBuilder ( DatabaseDescriptor . getIndexAccessMode ( ) ) ; 
 summary = new IndexSummary ( ) ; 
 bf = BloomFilter . getFilter ( keyCount , 15 ) ; 
 }
