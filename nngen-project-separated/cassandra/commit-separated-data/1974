BLEU SCORE: 0.00915781944436709

TEST MSG: Fixed typo
GENERATED MSG: ninja NodeProbe compactionHistory ( ) - > getCompactionHistory ( )

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java b / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java <nl> index b37d3b4 . . de1d91d 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java <nl> + + + b / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java <nl> @ @ - 58 , 7 + 58 , 7 @ @ public class SSTableRepairedAtSetter <nl> { <nl> out . println ( " This command should be run with Cassandra stopped , otherwise you will get very strange behavior " ) ; <nl> out . println ( " Verify that Cassandra is not running and then execute the command like this : " ) ; <nl> - out . println ( " Usage : sstablelevelreset - - really - set [ - - is - repaired | - - is - unrepaired ] [ - f < sstable - list > | < sstables > ] " ) ; <nl> + out . println ( " Usage : sstablerepairedset - - really - set [ - - is - repaired | - - is - unrepaired ] [ - f < sstable - list > | < sstables > ] " ) ; <nl> System . exit ( 1 ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 02bbc1d . . 895ffcc 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 25 , 6 + 25 , 7 @ @ <nl> * Fix NPE if StorageService . getOperationMode ( ) is executed before full startup ( CASSANDRA - 6166 ) <nl> * CQL3 : support pre - epoch longs for TimestampType ( CASSANDRA - 6212 ) <nl> * Add reloadtriggers command to nodetool ( CASSANDRA - 4949 ) <nl> + * cqlsh : ignore empty ' value alias ' in DESCRIBE ( CASSANDRA - 6139 ) <nl> Merged from 1 . 2 : <nl> * ( Hadoop ) Require CFRR batchSize to be at least 2 ( CASSANDRA - 6114 ) <nl> * Add a warning for small LCS sstable size ( CASSANDRA - 6191 ) <nl> diff - - git a / bin / cqlsh b / bin / cqlsh <nl> index a062dcd . . 82c9906 100755 <nl> - - - a / bin / cqlsh <nl> + + + b / bin / cqlsh <nl> @ @ - 32 , 7 + 32 , 7 @ @ exit 1 <nl> from _ _ future _ _ import with _ statement <nl> <nl> description = " CQL Shell for Apache Cassandra " <nl> - version = " 4 . 0 . 1 " <nl> + version = " 4 . 0 . 2 " <nl> <nl> from StringIO import StringIO <nl> from itertools import groupby <nl> diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py <nl> index 3b50cc9 . . 8ec3573 100644 <nl> - - - a / pylib / cqlshlib / cql3handling . py <nl> + + + b / pylib / cqlshlib / cql3handling . py <nl> @ @ - 1186 , 8 + 1186 , 8 @ @ class CqlTableDef : <nl> for attr in ( ' compaction _ strategy _ options ' , ' compression _ parameters ' ) : <nl> setattr ( cf , attr , json . loads ( getattr ( cf , attr ) ) ) <nl> <nl> - # deal with columns <nl> - columns = map ( CqlColumnDef . from _ layout , coldefs ) <nl> + # deal with columns , filter out empty column names ( see CASSANDRA - 6139 ) <nl> + columns = filter ( lambda c : c . name , map ( CqlColumnDef . from _ layout , coldefs ) ) <nl> <nl> partition _ key _ cols = filter ( lambda c : c . component _ type = = u ' partition _ key ' , columns ) <nl> partition _ key _ cols . sort ( key = lambda c : c . component _ index )

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java b / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java 
 index b37d3b4 . . de1d91d 100644 
 - - - a / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java 
 + + + b / src / java / org / apache / cassandra / tools / SSTableRepairedAtSetter . java 
 @ @ - 58 , 7 + 58 , 7 @ @ public class SSTableRepairedAtSetter 
 { 
 out . println ( " This command should be run with Cassandra stopped , otherwise you will get very strange behavior " ) ; 
 out . println ( " Verify that Cassandra is not running and then execute the command like this : " ) ; 
 - out . println ( " Usage : sstablelevelreset - - really - set [ - - is - repaired | - - is - unrepaired ] [ - f < sstable - list > | < sstables > ] " ) ; 
 + out . println ( " Usage : sstablerepairedset - - really - set [ - - is - repaired | - - is - unrepaired ] [ - f < sstable - list > | < sstables > ] " ) ; 
 System . exit ( 1 ) ; 
 } 


NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 02bbc1d . . 895ffcc 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 25 , 6 + 25 , 7 @ @ 
 * Fix NPE if StorageService . getOperationMode ( ) is executed before full startup ( CASSANDRA - 6166 ) 
 * CQL3 : support pre - epoch longs for TimestampType ( CASSANDRA - 6212 ) 
 * Add reloadtriggers command to nodetool ( CASSANDRA - 4949 ) 
 + * cqlsh : ignore empty ' value alias ' in DESCRIBE ( CASSANDRA - 6139 ) 
 Merged from 1 . 2 : 
 * ( Hadoop ) Require CFRR batchSize to be at least 2 ( CASSANDRA - 6114 ) 
 * Add a warning for small LCS sstable size ( CASSANDRA - 6191 ) 
 diff - - git a / bin / cqlsh b / bin / cqlsh 
 index a062dcd . . 82c9906 100755 
 - - - a / bin / cqlsh 
 + + + b / bin / cqlsh 
 @ @ - 32 , 7 + 32 , 7 @ @ exit 1 
 from _ _ future _ _ import with _ statement 
 
 description = " CQL Shell for Apache Cassandra " 
 - version = " 4 . 0 . 1 " 
 + version = " 4 . 0 . 2 " 
 
 from StringIO import StringIO 
 from itertools import groupby 
 diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py 
 index 3b50cc9 . . 8ec3573 100644 
 - - - a / pylib / cqlshlib / cql3handling . py 
 + + + b / pylib / cqlshlib / cql3handling . py 
 @ @ - 1186 , 8 + 1186 , 8 @ @ class CqlTableDef : 
 for attr in ( ' compaction _ strategy _ options ' , ' compression _ parameters ' ) : 
 setattr ( cf , attr , json . loads ( getattr ( cf , attr ) ) ) 
 
 - # deal with columns 
 - columns = map ( CqlColumnDef . from _ layout , coldefs ) 
 + # deal with columns , filter out empty column names ( see CASSANDRA - 6139 ) 
 + columns = filter ( lambda c : c . name , map ( CqlColumnDef . from _ layout , coldefs ) ) 
 
 partition _ key _ cols = filter ( lambda c : c . component _ type = = u ' partition _ key ' , columns ) 
 partition _ key _ cols . sort ( key = lambda c : c . component _ index )
