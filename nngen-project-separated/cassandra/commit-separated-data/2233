BLEU SCORE: 0.02383853510228548

TEST MSG: Better messaging on URI failure on cassandra . config
GENERATED MSG: clean up temporary for - streaming files when done

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / YamlConfigurationLoader . java b / src / java / org / apache / cassandra / config / YamlConfigurationLoader . java <nl> index 4a1280c . . 78621f2 100644 <nl> - - - a / src / java / org / apache / cassandra / config / YamlConfigurationLoader . java <nl> + + + b / src / java / org / apache / cassandra / config / YamlConfigurationLoader . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ package org . apache . cassandra . config ; <nl> <nl> import java . beans . IntrospectionException ; <nl> import java . io . ByteArrayInputStream ; <nl> + import java . io . File ; <nl> import java . io . InputStream ; <nl> import java . io . IOException ; <nl> import java . net . URL ; <nl> @ @ - 66 , 7 + 67 , 13 @ @ public class YamlConfigurationLoader implements ConfigurationLoader <nl> ClassLoader loader = DatabaseDescriptor . class . getClassLoader ( ) ; <nl> url = loader . getResource ( configUrl ) ; <nl> if ( url = = null ) <nl> - throw new ConfigurationException ( " Cannot locate " + configUrl ) ; <nl> + { <nl> + String required = " file : " + File . separator + File . separator ; <nl> + if ( ! configUrl . startsWith ( required ) ) <nl> + throw new ConfigurationException ( " Expecting URI in variable : [ cassandra . config ] . Please prefix the file with " + required + File . separator + <nl> + " for local files or " + required + " < server > " + File . separator + " for remote files . Aborting . " ) ; <nl> + throw new ConfigurationException ( " Cannot locate " + configUrl + " . If this is a local file , please confirm you ' ve provided " + required + File . separator + " as a URI prefix . " ) ; <nl> + } <nl> } <nl> <nl> return url ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index f4a6328 . . ec5a1cb 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 41 , 6 + 41 , 7 @ @ import java . net . InetAddress ; <nl> public class DatabaseDescriptor <nl> { <nl> private static Logger logger _ = Logger . getLogger ( DatabaseDescriptor . class ) ; <nl> + public static final String STREAMING _ SUBDIR = " stream " ; <nl> <nl> / / don ' t capitalize these ; we need them to match what ' s in the config file for CLS . valueOf to parse <nl> public static enum CommitLogSync { <nl> @ @ - 599 , 7 + 600 , 11 @ @ public class DatabaseDescriptor <nl> FileUtils . createDirectory ( dataFile + File . separator + Table . SYSTEM _ TABLE ) ; <nl> for ( String table : tables _ ) <nl> { <nl> - FileUtils . createDirectory ( dataFile + File . separator + table ) ; <nl> + String oneDir = dataFile + File . separator + table ; <nl> + FileUtils . createDirectory ( oneDir ) ; <nl> + File streamingDir = new File ( oneDir , STREAMING _ SUBDIR ) ; <nl> + if ( streamingDir . exists ( ) ) <nl> + FileUtils . deleteDir ( streamingDir ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 8339089 . . 36eb4bd 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 822 , 7 + 822 , 7 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> { <nl> if ( target ! = null ) <nl> { <nl> - compactionFileLocation = compactionFileLocation + File . separator + " stream " ; <nl> + compactionFileLocation = compactionFileLocation + File . separator + DatabaseDescriptor . STREAMING _ SUBDIR ; <nl> } <nl> FileUtils . createDirectory ( compactionFileLocation ) ; <nl> String newFilename = new File ( compactionFileLocation , getTempSSTableFileName ( ) ) . getAbsolutePath ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / io / Streaming . java b / src / java / org / apache / cassandra / io / Streaming . java <nl> index cb22649 . . ffd6899 100644 <nl> - - - a / src / java / org / apache / cassandra / io / Streaming . java <nl> + + + b / src / java / org / apache / cassandra / io / Streaming . java <nl> @ @ - 94 , 9 + 94 , 12 @ @ public class Streaming <nl> if ( logger . isDebugEnabled ( ) ) <nl> logger . debug ( " Waiting for transfer to " + target + " to complete " ) ; <nl> StreamManager . instance ( target ) . waitForStreamCompletion ( ) ; <nl> - / / reference sstables one more time to make sure it doesn ' t get GC ' d early ( causing delete of its files ) <nl> + for ( SSTableReader sstable : sstables ) <nl> + { <nl> + sstable . markCompacted ( ) ; <nl> + } <nl> if ( logger . isDebugEnabled ( ) ) <nl> - logger . debug ( " Done with transfer to " + target + " of " + StringUtils . join ( sstables , " , " ) ) ; <nl> + logger . debug ( " Done with transfer to " + target ) ; <nl> } <nl> } <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / YamlConfigurationLoader . java b / src / java / org / apache / cassandra / config / YamlConfigurationLoader . java 
 index 4a1280c . . 78621f2 100644 
 - - - a / src / java / org / apache / cassandra / config / YamlConfigurationLoader . java 
 + + + b / src / java / org / apache / cassandra / config / YamlConfigurationLoader . java 
 @ @ - 19 , 6 + 19 , 7 @ @ package org . apache . cassandra . config ; 
 
 import java . beans . IntrospectionException ; 
 import java . io . ByteArrayInputStream ; 
 + import java . io . File ; 
 import java . io . InputStream ; 
 import java . io . IOException ; 
 import java . net . URL ; 
 @ @ - 66 , 7 + 67 , 13 @ @ public class YamlConfigurationLoader implements ConfigurationLoader 
 ClassLoader loader = DatabaseDescriptor . class . getClassLoader ( ) ; 
 url = loader . getResource ( configUrl ) ; 
 if ( url = = null ) 
 - throw new ConfigurationException ( " Cannot locate " + configUrl ) ; 
 + { 
 + String required = " file : " + File . separator + File . separator ; 
 + if ( ! configUrl . startsWith ( required ) ) 
 + throw new ConfigurationException ( " Expecting URI in variable : [ cassandra . config ] . Please prefix the file with " + required + File . separator + 
 + " for local files or " + required + " < server > " + File . separator + " for remote files . Aborting . " ) ; 
 + throw new ConfigurationException ( " Cannot locate " + configUrl + " . If this is a local file , please confirm you ' ve provided " + required + File . separator + " as a URI prefix . " ) ; 
 + } 
 } 
 
 return url ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index f4a6328 . . ec5a1cb 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 41 , 6 + 41 , 7 @ @ import java . net . InetAddress ; 
 public class DatabaseDescriptor 
 { 
 private static Logger logger _ = Logger . getLogger ( DatabaseDescriptor . class ) ; 
 + public static final String STREAMING _ SUBDIR = " stream " ; 
 
 / / don ' t capitalize these ; we need them to match what ' s in the config file for CLS . valueOf to parse 
 public static enum CommitLogSync { 
 @ @ - 599 , 7 + 600 , 11 @ @ public class DatabaseDescriptor 
 FileUtils . createDirectory ( dataFile + File . separator + Table . SYSTEM _ TABLE ) ; 
 for ( String table : tables _ ) 
 { 
 - FileUtils . createDirectory ( dataFile + File . separator + table ) ; 
 + String oneDir = dataFile + File . separator + table ; 
 + FileUtils . createDirectory ( oneDir ) ; 
 + File streamingDir = new File ( oneDir , STREAMING _ SUBDIR ) ; 
 + if ( streamingDir . exists ( ) ) 
 + FileUtils . deleteDir ( streamingDir ) ; 
 } 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 8339089 . . 36eb4bd 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 822 , 7 + 822 , 7 @ @ public final class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 { 
 if ( target ! = null ) 
 { 
 - compactionFileLocation = compactionFileLocation + File . separator + " stream " ; 
 + compactionFileLocation = compactionFileLocation + File . separator + DatabaseDescriptor . STREAMING _ SUBDIR ; 
 } 
 FileUtils . createDirectory ( compactionFileLocation ) ; 
 String newFilename = new File ( compactionFileLocation , getTempSSTableFileName ( ) ) . getAbsolutePath ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / io / Streaming . java b / src / java / org / apache / cassandra / io / Streaming . java 
 index cb22649 . . ffd6899 100644 
 - - - a / src / java / org / apache / cassandra / io / Streaming . java 
 + + + b / src / java / org / apache / cassandra / io / Streaming . java 
 @ @ - 94 , 9 + 94 , 12 @ @ public class Streaming 
 if ( logger . isDebugEnabled ( ) ) 
 logger . debug ( " Waiting for transfer to " + target + " to complete " ) ; 
 StreamManager . instance ( target ) . waitForStreamCompletion ( ) ; 
 - / / reference sstables one more time to make sure it doesn ' t get GC ' d early ( causing delete of its files ) 
 + for ( SSTableReader sstable : sstables ) 
 + { 
 + sstable . markCompacted ( ) ; 
 + } 
 if ( logger . isDebugEnabled ( ) ) 
 - logger . debug ( " Done with transfer to " + target + " of " + StringUtils . join ( sstables , " , " ) ) ; 
 + logger . debug ( " Done with transfer to " + target ) ; 
 } 
 } 

