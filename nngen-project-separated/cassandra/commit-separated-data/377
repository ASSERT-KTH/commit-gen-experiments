BLEU SCORE: 0.05522397783539471

TEST MSG: Add configurable upper bound for validation executor threads
GENERATED MSG: Add option to override compaction space check

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 9d1323d . . a5afb86 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 4 . 0 <nl> + * Add configurable upper bound for validation executor threads ( CASSANDRA - 13521 ) <nl> * Bring back maxHintTTL propery ( CASSANDRA - 12982 ) <nl> * Add testing guidelines ( CASSANDRA - 13497 ) <nl> * Add more repair metrics ( CASSANDRA - 13531 ) <nl> diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml <nl> index e968b0c . . bdc68d1 100644 <nl> - - - a / conf / cassandra . yaml <nl> + + + b / conf / cassandra . yaml <nl> @ @ - 748 , 6 + 748 , 10 @ @ column _ index _ cache _ size _ in _ kb : 2 <nl> # to the number of cores . <nl> # concurrent _ compactors : 1 <nl> <nl> + # Number of simultaneous repair validations to allow . Default is unbounded <nl> + # Values less than one are interpreted as unbounded ( the default ) <nl> + # concurrent _ validations : 0 <nl> + <nl> # Throttles compaction to the given total throughput across the entire <nl> # system . The faster you insert data , the faster you need to compact in <nl> # order to keep the sstable count down , but in general , setting this to <nl> diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java <nl> index e76284d . . b7bacde 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Config . java <nl> + + + b / src / java / org / apache / cassandra / config / Config . java <nl> @ @ - 171 , 6 + 171 , 8 @ @ public class Config <nl> public volatile int compaction _ large _ partition _ warning _ threshold _ mb = 100 ; <nl> public int min _ free _ space _ per _ drive _ in _ mb = 50 ; <nl> <nl> + public volatile int concurrent _ validations = Integer . MAX _ VALUE ; <nl> + <nl> / * * <nl> * @ deprecated retry support removed on CASSANDRA - 10992 <nl> * / <nl> diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index 85f070f . . 2d4f191 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 562 , 6 + 562 , 9 @ @ public class DatabaseDescriptor <nl> if ( conf . concurrent _ compactors = = null ) <nl> conf . concurrent _ compactors = Math . min ( 8 , Math . max ( 2 , Math . min ( FBUtilities . getAvailableProcessors ( ) , conf . data _ file _ directories . length ) ) ) ; <nl> <nl> + if ( conf . concurrent _ validations < 1 ) <nl> + conf . concurrent _ validations = Integer . MAX _ VALUE ; <nl> + <nl> if ( conf . concurrent _ compactors < = 0 ) <nl> throw new ConfigurationException ( " concurrent _ compactors should be strictly greater than 0 , but was " + conf . concurrent _ compactors , false ) ; <nl> <nl> @ @ - 1400 , 6 + 1403 , 17 @ @ public class DatabaseDescriptor <nl> <nl> public static int getCompactionLargePartitionWarningThreshold ( ) { return conf . compaction _ large _ partition _ warning _ threshold _ mb * 1024 * 1024 ; } <nl> <nl> + public static int getConcurrentValidations ( ) <nl> + { <nl> + return conf . concurrent _ validations ; <nl> + } <nl> + <nl> + public static void setConcurrentValidations ( int value ) <nl> + { <nl> + value = value > 0 ? value : Integer . MAX _ VALUE ; <nl> + conf . concurrent _ validations = value ; <nl> + } <nl> + <nl> public static long getMinFreeSpacePerDriveInBytes ( ) <nl> { <nl> return conf . min _ free _ space _ per _ drive _ in _ mb * 1024L * 1024L ; <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> index 8efeeb0 . . 71417b6 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> @ @ - 1854 , 7 + 1854 , 7 @ @ public class CompactionManager implements CompactionManagerMBean <nl> { <nl> public ValidationExecutor ( ) <nl> { <nl> - super ( 1 , Integer . MAX _ VALUE , " ValidationExecutor " , new SynchronousQueue < Runnable > ( ) ) ; <nl> + super ( 1 , DatabaseDescriptor . getConcurrentValidations ( ) , " ValidationExecutor " , new SynchronousQueue < Runnable > ( ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 1975 , 6 + 1975 , 12 @ @ public class CompactionManager implements CompactionManagerMBean <nl> } <nl> } <nl> <nl> + public void setConcurrentValidations ( int value ) <nl> + { <nl> + value = value > 0 ? value : Integer . MAX _ VALUE ; <nl> + validationExecutor . setMaximumPoolSize ( value ) ; <nl> + } <nl> + <nl> public int getCoreCompactorThreads ( ) <nl> { <nl> return executor . getCorePoolSize ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index b8bbea0 . . 8914440 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 1363 , 6 + 1363 , 17 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> CompactionManager . instance . setConcurrentCompactors ( value ) ; <nl> } <nl> <nl> + public int getConcurrentValidators ( ) <nl> + { <nl> + return DatabaseDescriptor . getConcurrentValidations ( ) ; <nl> + } <nl> + <nl> + public void setConcurrentValidators ( int value ) <nl> + { <nl> + DatabaseDescriptor . setConcurrentValidations ( value ) ; <nl> + CompactionManager . instance . setConcurrentValidations ( DatabaseDescriptor . getConcurrentValidations ( ) ) ; <nl> + } <nl> + <nl> public boolean isIncrementalBackupsEnabled ( ) <nl> { <nl> return DatabaseDescriptor . isIncrementalBackupsEnabled ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> index 348610a . . d94c263 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> @ @ - 508 , 6 + 508 , 9 @ @ public interface StorageServiceMBean extends NotificationEmitter <nl> public int getConcurrentCompactors ( ) ; <nl> public void setConcurrentCompactors ( int value ) ; <nl> <nl> + public int getConcurrentValidators ( ) ; <nl> + public void setConcurrentValidators ( int value ) ; <nl> + <nl> public boolean isIncrementalBackupsEnabled ( ) ; <nl> public void setIncrementalBackupsEnabled ( boolean value ) ; <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 9d1323d . . a5afb86 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 4 . 0 
 + * Add configurable upper bound for validation executor threads ( CASSANDRA - 13521 ) 
 * Bring back maxHintTTL propery ( CASSANDRA - 12982 ) 
 * Add testing guidelines ( CASSANDRA - 13497 ) 
 * Add more repair metrics ( CASSANDRA - 13531 ) 
 diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml 
 index e968b0c . . bdc68d1 100644 
 - - - a / conf / cassandra . yaml 
 + + + b / conf / cassandra . yaml 
 @ @ - 748 , 6 + 748 , 10 @ @ column _ index _ cache _ size _ in _ kb : 2 
 # to the number of cores . 
 # concurrent _ compactors : 1 
 
 + # Number of simultaneous repair validations to allow . Default is unbounded 
 + # Values less than one are interpreted as unbounded ( the default ) 
 + # concurrent _ validations : 0 
 + 
 # Throttles compaction to the given total throughput across the entire 
 # system . The faster you insert data , the faster you need to compact in 
 # order to keep the sstable count down , but in general , setting this to 
 diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java 
 index e76284d . . b7bacde 100644 
 - - - a / src / java / org / apache / cassandra / config / Config . java 
 + + + b / src / java / org / apache / cassandra / config / Config . java 
 @ @ - 171 , 6 + 171 , 8 @ @ public class Config 
 public volatile int compaction _ large _ partition _ warning _ threshold _ mb = 100 ; 
 public int min _ free _ space _ per _ drive _ in _ mb = 50 ; 
 
 + public volatile int concurrent _ validations = Integer . MAX _ VALUE ; 
 + 
 / * * 
 * @ deprecated retry support removed on CASSANDRA - 10992 
 * / 
 diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index 85f070f . . 2d4f191 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 562 , 6 + 562 , 9 @ @ public class DatabaseDescriptor 
 if ( conf . concurrent _ compactors = = null ) 
 conf . concurrent _ compactors = Math . min ( 8 , Math . max ( 2 , Math . min ( FBUtilities . getAvailableProcessors ( ) , conf . data _ file _ directories . length ) ) ) ; 
 
 + if ( conf . concurrent _ validations < 1 ) 
 + conf . concurrent _ validations = Integer . MAX _ VALUE ; 
 + 
 if ( conf . concurrent _ compactors < = 0 ) 
 throw new ConfigurationException ( " concurrent _ compactors should be strictly greater than 0 , but was " + conf . concurrent _ compactors , false ) ; 
 
 @ @ - 1400 , 6 + 1403 , 17 @ @ public class DatabaseDescriptor 
 
 public static int getCompactionLargePartitionWarningThreshold ( ) { return conf . compaction _ large _ partition _ warning _ threshold _ mb * 1024 * 1024 ; } 
 
 + public static int getConcurrentValidations ( ) 
 + { 
 + return conf . concurrent _ validations ; 
 + } 
 + 
 + public static void setConcurrentValidations ( int value ) 
 + { 
 + value = value > 0 ? value : Integer . MAX _ VALUE ; 
 + conf . concurrent _ validations = value ; 
 + } 
 + 
 public static long getMinFreeSpacePerDriveInBytes ( ) 
 { 
 return conf . min _ free _ space _ per _ drive _ in _ mb * 1024L * 1024L ; 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 index 8efeeb0 . . 71417b6 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 @ @ - 1854 , 7 + 1854 , 7 @ @ public class CompactionManager implements CompactionManagerMBean 
 { 
 public ValidationExecutor ( ) 
 { 
 - super ( 1 , Integer . MAX _ VALUE , " ValidationExecutor " , new SynchronousQueue < Runnable > ( ) ) ; 
 + super ( 1 , DatabaseDescriptor . getConcurrentValidations ( ) , " ValidationExecutor " , new SynchronousQueue < Runnable > ( ) ) ; 
 } 
 } 
 
 @ @ - 1975 , 6 + 1975 , 12 @ @ public class CompactionManager implements CompactionManagerMBean 
 } 
 } 
 
 + public void setConcurrentValidations ( int value ) 
 + { 
 + value = value > 0 ? value : Integer . MAX _ VALUE ; 
 + validationExecutor . setMaximumPoolSize ( value ) ; 
 + } 
 + 
 public int getCoreCompactorThreads ( ) 
 { 
 return executor . getCorePoolSize ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index b8bbea0 . . 8914440 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 1363 , 6 + 1363 , 17 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 CompactionManager . instance . setConcurrentCompactors ( value ) ; 
 } 
 
 + public int getConcurrentValidators ( ) 
 + { 
 + return DatabaseDescriptor . getConcurrentValidations ( ) ; 
 + } 
 + 
 + public void setConcurrentValidators ( int value ) 
 + { 
 + DatabaseDescriptor . setConcurrentValidations ( value ) ; 
 + CompactionManager . instance . setConcurrentValidations ( DatabaseDescriptor . getConcurrentValidations ( ) ) ; 
 + } 
 + 
 public boolean isIncrementalBackupsEnabled ( ) 
 { 
 return DatabaseDescriptor . isIncrementalBackupsEnabled ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 index 348610a . . d94c263 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 @ @ - 508 , 6 + 508 , 9 @ @ public interface StorageServiceMBean extends NotificationEmitter 
 public int getConcurrentCompactors ( ) ; 
 public void setConcurrentCompactors ( int value ) ; 
 
 + public int getConcurrentValidators ( ) ; 
 + public void setConcurrentValidators ( int value ) ; 
 + 
 public boolean isIncrementalBackupsEnabled ( ) ; 
 public void setIncrementalBackupsEnabled ( boolean value ) ; 


NEAREST DIFF:
ELIMINATEDSENTENCE
