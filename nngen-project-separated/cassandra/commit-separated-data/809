BLEU SCORE: 0.06567274736060397

TEST MSG: Fix CompressorTest on non - x86 environment
GENERATED MSG: Fix OutOfBounds with compression

TEST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / io / compress / CompressorTest . java b / test / unit / org / apache / cassandra / io / compress / CompressorTest . java <nl> index 6018cc7 . . 1d285ea4 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / compress / CompressorTest . java <nl> + + + b / test / unit / org / apache / cassandra / io / compress / CompressorTest . java <nl> @ @ - 80 , 7 + 80 , 7 @ @ public class CompressorTest <nl> <nl> / / need byte [ ] representation which direct buffers don ' t have <nl> byte [ ] compressedBytes = new byte [ compressed . capacity ( ) ] ; <nl> - ByteBufferUtil . arrayCopy ( compressed , outOffset , compressedBytes , outOffset , compressed . capacity ( ) - outOffset ) ; <nl> + ByteBufferUtil . arrayCopy ( compressed , outOffset , compressedBytes , outOffset , compressed . limit ( ) - outOffset ) ; <nl> <nl> final int decompressedLength = compressor . uncompress ( compressedBytes , outOffset , compressed . remaining ( ) , restored , restoreOffset ) ; <nl>
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cli / Cli . g b / src / java / org / apache / cassandra / cli / Cli . g <nl> index 66f199f . . 9ab556d 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / Cli . g <nl> + + + b / src / java / org / apache / cassandra / cli / Cli . g <nl> @ @ - 44 , 6 + 44 , 7 @ @ tokens { <nl> NODE _ SHOW _ CLUSTER _ NAME ; <nl> NODE _ SHOW _ VERSION ; <nl> NODE _ SHOW _ KEYSPACES ; <nl> + NODE _ SHOW _ SCHEMA ; <nl> NODE _ THRIFT _ GET ; <nl> NODE _ THRIFT _ GET _ WITH _ CONDITIONS ; <nl> NODE _ THRIFT _ SET ; <nl> @ @ - 191 , 6 + 192 , 8 @ @ helpStatement <nl> - > ^ ( NODE _ HELP NODE _ SHOW _ CLUSTER _ NAME ) <nl> | HELP SHOW KEYSPACES <nl> - > ^ ( NODE _ HELP NODE _ SHOW _ KEYSPACES ) <nl> + | HELP SHOW SCHEMA <nl> + - > ^ ( NODE _ HELP NODE _ SHOW _ SCHEMA ) <nl> | HELP SHOW API _ VERSION <nl> - > ^ ( NODE _ HELP NODE _ SHOW _ VERSION ) <nl> | HELP CREATE KEYSPACE <nl> @ @ - 284 , 6 + 287 , 7 @ @ showStatement <nl> : showClusterName <nl> | showVersion <nl> | showKeyspaces <nl> + | showSchema <nl> ; <nl> <nl> listStatement <nl> @ @ - 356 , 6 + 360 , 11 @ @ showKeyspaces <nl> - > ^ ( NODE _ SHOW _ KEYSPACES ) <nl> ; <nl> <nl> + showSchema <nl> + : SHOW SCHEMA ( keyspace ) ? <nl> + - > ^ ( NODE _ SHOW _ SCHEMA ( keyspace ) ? ) <nl> + ; <nl> + <nl> describeTable <nl> : DESCRIBE KEYSPACE ( keyspace ) ? <nl> - > ^ ( NODE _ DESCRIBE _ TABLE ( keyspace ) ? ) <nl> @ @ - 573 , 6 + 582 , 7 @ @ TTL : ' TTL ' ; <nl> CONSISTENCYLEVEL : ' CONSISTENCYLEVEL ' ; <nl> INDEX : ' INDEX ' ; <nl> ON : ' ON ' ; <nl> + SCHEMA : ' SCHEMA ' ; <nl> <nl> IP _ ADDRESS <nl> : IntegerPositiveLiteral ' . ' IntegerPositiveLiteral ' . ' IntegerPositiveLiteral ' . ' IntegerPositiveLiteral <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java <nl> index a11bfad . . 8ec4b67 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliClient . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliClient . java <nl> @ @ - 26 , 6 + 26 , 9 @ @ import java . nio . ByteBuffer ; <nl> import java . nio . charset . CharacterCodingException ; <nl> import java . util . * ; <nl> <nl> + import com . google . common . base . Predicate ; <nl> + import com . google . common . collect . Collections2 ; <nl> + import org . apache . commons . lang . StringUtils ; <nl> import com . google . common . base . Charsets ; <nl> import com . google . common . base . Joiner ; <nl> <nl> @ @ - 71 , 7 + 74 , 7 @ @ public class CliClient <nl> COUNTERCOLUMN ( CounterColumnType . instance ) ; <nl> <nl> private AbstractType validator ; <nl> - <nl> + <nl> Function ( AbstractType validator ) <nl> { <nl> this . validator = validator ; <nl> @ @ - 136 , 6 + 139 , 8 @ @ public class CliClient <nl> } <nl> <nl> private static final String DEFAULT _ PLACEMENT _ STRATEGY = " org . apache . cassandra . locator . NetworkTopologyStrategy " ; <nl> + private final String NEWLINE = System . getProperty ( " line . separator " ) ; <nl> + private final String TAB = " " ; <nl> <nl> private Cassandra . Client thriftClient = null ; <nl> private CliSessionState sessionState = null ; <nl> @ @ - 241 , 6 + 246 , 9 @ @ public class CliClient <nl> case CliParser . NODE _ SHOW _ KEYSPACES : <nl> executeShowKeySpaces ( ) ; <nl> break ; <nl> + case CliParser . NODE _ SHOW _ SCHEMA : <nl> + executeShowSchema ( tree ) ; <nl> + break ; <nl> case CliParser . NODE _ DESCRIBE _ TABLE : <nl> executeDescribeKeySpace ( tree ) ; <nl> break ; <nl> @ @ - 1246 , 7 + 1254 , 7 @ @ public class CliClient <nl> cfDef . setReplicate _ on _ write ( Boolean . parseBoolean ( mValue ) ) ; <nl> break ; <nl> case ROW _ CACHE _ PROVIDER : <nl> - cfDef . setRow _ cache _ provider ( mValue ) ; <nl> + cfDef . setRow _ cache _ provider ( CliUtils . unescapeSQLString ( mValue ) ) ; <nl> break ; <nl> case KEY _ VALIDATION _ CLASS : <nl> cfDef . setKey _ validation _ class ( CliUtils . unescapeSQLString ( mValue ) ) ; <nl> @ @ - 1560 , 6 + 1568 , 187 @ @ public class CliClient <nl> } <nl> } <nl> <nl> + / / SHOW SCHEMA <nl> + private void executeShowSchema ( Tree statement ) throws TException , InvalidRequestException <nl> + { <nl> + if ( ! CliMain . isConnected ( ) ) <nl> + return ; <nl> + <nl> + final List < KsDef > keyspaces = thriftClient . describe _ keyspaces ( ) ; <nl> + Collections . sort ( keyspaces , new KsDefNamesComparator ( ) ) ; <nl> + final String keyspaceName = ( statement . getChildCount ( ) = = 0 ) <nl> + ? keySpace <nl> + : CliCompiler . getKeySpace ( statement , keyspaces ) ; <nl> + <nl> + Iterator < KsDef > ksIter ; <nl> + if ( keyspaceName ! = null ) <nl> + ksIter = Collections2 . filter ( keyspaces , new Predicate < KsDef > ( ) <nl> + { <nl> + public boolean apply ( KsDef ksDef ) <nl> + { <nl> + return keyspaceName . equals ( ksDef . name ) ; <nl> + } <nl> + } ) . iterator ( ) ; <nl> + else <nl> + ksIter = keyspaces . iterator ( ) ; <nl> + <nl> + <nl> + final StringBuilder sb = new StringBuilder ( ) ; <nl> + while ( ksIter . hasNext ( ) ) <nl> + showKeyspace ( sb , ksIter . next ( ) ) ; <nl> + <nl> + sessionState . out . printf ( sb . toString ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Creates a CLI script to create the Keyspace it ' s Column Families <nl> + * @ param sb StringBuilder to write to . <nl> + * @ param ksDef KsDef to create the cli script for . <nl> + * / <nl> + private void showKeyspace ( StringBuilder sb , KsDef ksDef ) <nl> + { <nl> + <nl> + sb . append ( " create keyspace " + ksDef . name ) ; <nl> + if ( ksDef . isSetReplication _ factor ( ) ) <nl> + writeAttr ( sb , false , " replication _ factor " , ksDef . getReplication _ factor ( ) ) ; <nl> + writeAttr ( sb , true , " placement _ strategy " , normaliseType ( ksDef . strategy _ class , " org . apache . cassandra . locator " ) ) ; <nl> + if ( ksDef . strategy _ options ! = null & & ! ksDef . strategy _ options . isEmpty ( ) ) <nl> + { <nl> + final StringBuilder opts = new StringBuilder ( ) ; <nl> + opts . append ( " [ { " ) ; <nl> + String prefix = " " ; <nl> + for ( Map . Entry < String , String > opt : ksDef . strategy _ options . entrySet ( ) ) <nl> + { <nl> + opts . append ( prefix + CliUtils . escapeSQLString ( opt . getKey ( ) ) + " : " + CliUtils . escapeSQLString ( opt . getValue ( ) ) ) ; <nl> + prefix = " , " ; <nl> + } <nl> + opts . append ( " } ] " ) ; <nl> + writeAttrRaw ( sb , false , " strategy _ options " , opts . toString ( ) ) ; <nl> + } <nl> + sb . append ( " ; " + NEWLINE ) ; <nl> + sb . append ( NEWLINE ) ; <nl> + <nl> + sb . append ( " use " + ksDef . name + " ; " ) ; <nl> + sb . append ( NEWLINE ) ; <nl> + sb . append ( NEWLINE ) ; <nl> + <nl> + Collections . sort ( ksDef . cf _ defs , new CfDefNamesComparator ( ) ) ; <nl> + for ( CfDef cfDef : ksDef . cf _ defs ) <nl> + showColumnFamily ( sb , cfDef ) ; <nl> + sb . append ( NEWLINE ) ; <nl> + sb . append ( NEWLINE ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Creates a CLI script for the CfDef including meta data to the supplied StringBuilder . <nl> + * @ param sb <nl> + * @ param cfDef <nl> + * / <nl> + private void showColumnFamily ( StringBuilder sb , CfDef cfDef ) <nl> + { <nl> + sb . append ( " create column family " + CliUtils . escapeSQLString ( cfDef . name ) ) ; <nl> + <nl> + writeAttr ( sb , true , " column _ type " , cfDef . column _ type ) ; <nl> + writeAttr ( sb , false , " comparator " , normaliseType ( cfDef . comparator _ type , " org . apache . cassandra . db . marshal " ) ) ; <nl> + if ( cfDef . column _ type = = " Super " ) <nl> + writeAttr ( sb , false , " subcomparator " , normaliseType ( cfDef . subcomparator _ type , " org . apache . cassandra . db . marshal " ) ) ; <nl> + if ( ! StringUtils . isEmpty ( cfDef . default _ validation _ class ) ) <nl> + writeAttr ( sb , false , " default _ validation _ class " , <nl> + normaliseType ( cfDef . default _ validation _ class , " org . apache . cassandra . db . marshal " ) ) ; <nl> + writeAttr ( sb , false , " key _ validation _ class " , <nl> + normaliseType ( cfDef . key _ validation _ class , " org . apache . cassandra . db . marshal " ) ) ; <nl> + writeAttr ( sb , false , " memtable _ operations " , cfDef . memtable _ operations _ in _ millions ) ; <nl> + writeAttr ( sb , false , " memtable _ throughput " , cfDef . memtable _ throughput _ in _ mb ) ; <nl> + writeAttr ( sb , false , " memtable _ flush _ after " , cfDef . memtable _ flush _ after _ mins ) ; <nl> + writeAttr ( sb , false , " rows _ cached " , cfDef . row _ cache _ size ) ; <nl> + writeAttr ( sb , false , " row _ cache _ save _ period " , cfDef . row _ cache _ save _ period _ in _ seconds ) ; <nl> + writeAttr ( sb , false , " keys _ cached " , cfDef . key _ cache _ size ) ; <nl> + writeAttr ( sb , false , " key _ cache _ save _ period " , cfDef . key _ cache _ save _ period _ in _ seconds ) ; <nl> + writeAttr ( sb , false , " read _ repair _ chance " , cfDef . read _ repair _ chance ) ; <nl> + writeAttr ( sb , false , " gc _ grace " , cfDef . gc _ grace _ seconds ) ; <nl> + writeAttr ( sb , false , " min _ compaction _ threshold " , cfDef . min _ compaction _ threshold ) ; <nl> + writeAttr ( sb , false , " max _ compaction _ threshold " , cfDef . max _ compaction _ threshold ) ; <nl> + writeAttr ( sb , false , " replicate _ on _ write " , cfDef . replicate _ on _ write ) ; <nl> + writeAttr ( sb , false , " row _ cache _ provider " , normaliseType ( cfDef . row _ cache _ provider , " org . apache . cassandra . cache " ) ) ; <nl> + <nl> + if ( ! StringUtils . isEmpty ( cfDef . comment ) ) <nl> + writeAttr ( sb , false , " comment " , cfDef . comment ) ; <nl> + <nl> + if ( ! cfDef . column _ metadata . isEmpty ( ) ) <nl> + { <nl> + StringBuilder colSb = new StringBuilder ( ) ; <nl> + colSb . append ( " [ " ) ; <nl> + boolean first = true ; <nl> + for ( ColumnDef colDef : cfDef . column _ metadata ) <nl> + { <nl> + if ( ! first ) <nl> + colSb . append ( " , " ) ; <nl> + first = false ; <nl> + showColumnMeta ( colSb , cfDef , colDef ) ; <nl> + } <nl> + colSb . append ( " ] " ) ; <nl> + writeAttrRaw ( sb , false , " column _ metadata " , colSb . toString ( ) ) ; <nl> + } <nl> + sb . append ( " ; " ) ; <nl> + sb . append ( NEWLINE ) ; <nl> + sb . append ( NEWLINE ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Writes the supplied ColumnDef to the StringBuilder as a cli script . <nl> + * @ param sb <nl> + * @ param cfDef <nl> + * @ param colDef <nl> + * / <nl> + private void showColumnMeta ( StringBuilder sb , CfDef cfDef , ColumnDef colDef ) <nl> + { <nl> + sb . append ( NEWLINE + TAB + TAB + " { " ) ; <nl> + <nl> + final AbstractType comparator = getFormatType ( ( cfDef . column _ type = = " Super " ) <nl> + ? cfDef . subcomparator _ type <nl> + : cfDef . comparator _ type ) ; <nl> + sb . append ( " column _ name : ' " + CliUtils . escapeSQLString ( comparator . getString ( colDef . name ) ) + " ' , " + NEWLINE ) ; <nl> + String validationClass = normaliseType ( colDef . validation _ class , " org . apache . cassandra . db . marshal " ) ; <nl> + sb . append ( TAB + TAB + " validation _ class : " + CliUtils . escapeSQLString ( validationClass ) ) ; <nl> + if ( colDef . isSetIndex _ name ( ) ) <nl> + { <nl> + sb . append ( " , " + NEWLINE ) ; <nl> + sb . append ( TAB + TAB + " index _ name : ' " + CliUtils . escapeSQLString ( colDef . index _ name ) + " ' , " + NEWLINE ) ; <nl> + sb . append ( TAB + TAB + " index _ type : " + CliUtils . escapeSQLString ( Integer . toString ( colDef . index _ type . getValue ( ) ) ) ) ; <nl> + <nl> + } <nl> + sb . append ( " } " ) ; <nl> + } <nl> + <nl> + private String normaliseType ( String path , String expectedPackage ) <nl> + { <nl> + if ( path . startsWith ( expectedPackage ) ) <nl> + return path . substring ( expectedPackage . length ( ) + 1 ) ; <nl> + <nl> + return path ; <nl> + } <nl> + <nl> + private void writeAttr ( StringBuilder sb , boolean first , String name , Boolean value ) <nl> + { <nl> + writeAttrRaw ( sb , first , name , value . toString ( ) ) ; <nl> + } <nl> + private void writeAttr ( StringBuilder sb , boolean first , String name , Number value ) <nl> + { <nl> + writeAttrRaw ( sb , first , name , value . toString ( ) ) ; <nl> + } <nl> + <nl> + private void writeAttr ( StringBuilder sb , boolean first , String name , String value ) <nl> + { <nl> + writeAttrRaw ( sb , first , name , " ' " + CliUtils . escapeSQLString ( value ) + " ' " ) ; <nl> + } <nl> + <nl> + private void writeAttrRaw ( StringBuilder sb , boolean first , String name , String value ) <nl> + { <nl> + sb . append ( NEWLINE + TAB ) ; <nl> + sb . append ( first ? " with " : " and " ) ; <nl> + sb . append ( name + " = " ) ; <nl> + sb . append ( value ) ; <nl> + } <nl> / * * <nl> * Returns true if this . keySpace is set , false otherwise <nl> * @ return boolean <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliCompleter . java b / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> index 19a0820 . . 6f4e583 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> @ @ - 29 , 6 + 29 , 7 @ @ public class CliCompleter extends SimpleCompletor <nl> " quit " , <nl> " show cluster name " , <nl> " show keyspaces " , <nl> + " show schema " , <nl> " show api version " , <nl> " create keyspace " , <nl> " create column family " , <nl> @ @ - 45 , 6 + 46 , 7 @ @ public class CliCompleter extends SimpleCompletor <nl> " help quit " , <nl> " help show cluster name " , <nl> " help show keyspaces " , <nl> + " help show schema " , <nl> " help show api version " , <nl> " help create keyspace " , <nl> " help create column family " , <nl> diff - - git a / src / resources / org / apache / cassandra / cli / CliHelp . yaml b / src / resources / org / apache / cassandra / cli / CliHelp . yaml <nl> index 7278e36 . . b6ea6e3 100644 <nl> - - - a / src / resources / org / apache / cassandra / cli / CliHelp . yaml <nl> + + + b / src / resources / org / apache / cassandra / cli / CliHelp . yaml <nl> @ @ - 52 , 6 + 52 , 7 @ @ help : | <nl> show api version Show the server API version . <nl> show cluster name Show the cluster name . <nl> show keyspaces Show all keyspaces and their column families . <nl> + show schema Show a cli script to create keyspaces and column families . <nl> truncate Drop the data in a column family . <nl> update column family Update the settings for a column family . <nl> update keyspace Update the settings for a keyspace . <nl> @ @ - 116 , 7 + 117 , 8 @ @ commands : <nl> use Keyspace1 user ' badpasswd ' ; <nl> - name : NODE _ DESCRIBE _ TABLE <nl> help : | <nl> - describe keyspace ( < keyspace > ) ? ; <nl> + describe keyspace ; <nl> + describe keyspace < keyspace > ; <nl> <nl> Describes the settings for the current or named keyspace , and the settings <nl> for all column families in the keyspace . <nl> @ @ - 126 , 7 + 128 , 7 @ @ commands : <nl> <nl> Examples : <nl> describe keyspace ; <nl> - describe keyspace system ; <nl> + describe keyspace Keyspace1 ; <nl> - name : NODE _ DESCRIBE _ CLUSTER <nl> help : | <nl> describe cluster ; <nl> @ @ - 177 , 6 + 179 , 22 @ @ commands : <nl> <nl> Examples : <nl> show keyspaces ; <nl> + - name : NODE _ SHOW _ SCHEMA <nl> + help : | <nl> + show schema ; <nl> + show schema < keyspace > ; <nl> + <nl> + Creates a CLI script to create the current , specified or all keyspaces <nl> + and their column families . <nl> + <nl> + Optional Parameters : <nl> + - keyspace : Name of the keyspace to create the script for . If omitted <nl> + the current keyspace is used , if there is no current keyspace all <nl> + keyspaces are considered . <nl> + <nl> + Examples : <nl> + show schema ; <nl> + show schema Keyspace1 ; <nl> - name : NODE _ ADD _ KEYSPACE <nl> help : | <nl> create keyspace < keyspace > ; <nl> diff - - git a / test / unit / org / apache / cassandra / cli / CliTest . java b / test / unit / org / apache / cassandra / cli / CliTest . java <nl> index d71145d . . 3d294b9 100644 <nl> - - - a / test / unit / org / apache / cassandra / cli / CliTest . java <nl> + + + b / test / unit / org / apache / cassandra / cli / CliTest . java <nl> @ @ - 166 , 6 + 166 , 7 @ @ public class CliTest extends CleanupHelper <nl> " help QUIT " , <nl> " help show cluster name " , <nl> " help show keyspaces " , <nl> + " help show schema " , <nl> " help show api version " , <nl> " help create keyspace " , <nl> " HELP update KEYSPACE " , <nl> @ @ - 181 , 7 + 182 , 9 @ @ public class CliTest extends CleanupHelper <nl> " HELP TRUNCATE " , <nl> " help assume " , <nl> " HELP " , <nl> - " ? " <nl> + " ? " , <nl> + " show schema " , <nl> + " show schema TestKeySpace " <nl> } ; <nl> <nl> @ Test <nl> @ @ - 270 , 4 + 273 , 4 @ @ public class CliTest extends CleanupHelper <nl> assertEquals ( unescaped , CliUtils . unescapeSQLString ( " ' " + escaped + " ' " ) ) ; <nl> assertEquals ( escaped , CliUtils . escapeSQLString ( unescaped ) ) ; <nl> } <nl> - } <nl> \ No newline at end of file <nl> + }

TEST DIFF:
diff - - git a / test / unit / org / apache / cassandra / io / compress / CompressorTest . java b / test / unit / org / apache / cassandra / io / compress / CompressorTest . java 
 index 6018cc7 . . 1d285ea4 100644 
 - - - a / test / unit / org / apache / cassandra / io / compress / CompressorTest . java 
 + + + b / test / unit / org / apache / cassandra / io / compress / CompressorTest . java 
 @ @ - 80 , 7 + 80 , 7 @ @ public class CompressorTest 
 
 / / need byte [ ] representation which direct buffers don ' t have 
 byte [ ] compressedBytes = new byte [ compressed . capacity ( ) ] ; 
 - ByteBufferUtil . arrayCopy ( compressed , outOffset , compressedBytes , outOffset , compressed . capacity ( ) - outOffset ) ; 
 + ByteBufferUtil . arrayCopy ( compressed , outOffset , compressedBytes , outOffset , compressed . limit ( ) - outOffset ) ; 
 
 final int decompressedLength = compressor . uncompress ( compressedBytes , outOffset , compressed . remaining ( ) , restored , restoreOffset ) ; 


NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / cli / Cli . g b / src / java / org / apache / cassandra / cli / Cli . g 
 index 66f199f . . 9ab556d 100644 
 - - - a / src / java / org / apache / cassandra / cli / Cli . g 
 + + + b / src / java / org / apache / cassandra / cli / Cli . g 
 @ @ - 44 , 6 + 44 , 7 @ @ tokens { 
 NODE _ SHOW _ CLUSTER _ NAME ; 
 NODE _ SHOW _ VERSION ; 
 NODE _ SHOW _ KEYSPACES ; 
 + NODE _ SHOW _ SCHEMA ; 
 NODE _ THRIFT _ GET ; 
 NODE _ THRIFT _ GET _ WITH _ CONDITIONS ; 
 NODE _ THRIFT _ SET ; 
 @ @ - 191 , 6 + 192 , 8 @ @ helpStatement 
 - > ^ ( NODE _ HELP NODE _ SHOW _ CLUSTER _ NAME ) 
 | HELP SHOW KEYSPACES 
 - > ^ ( NODE _ HELP NODE _ SHOW _ KEYSPACES ) 
 + | HELP SHOW SCHEMA 
 + - > ^ ( NODE _ HELP NODE _ SHOW _ SCHEMA ) 
 | HELP SHOW API _ VERSION 
 - > ^ ( NODE _ HELP NODE _ SHOW _ VERSION ) 
 | HELP CREATE KEYSPACE 
 @ @ - 284 , 6 + 287 , 7 @ @ showStatement 
 : showClusterName 
 | showVersion 
 | showKeyspaces 
 + | showSchema 
 ; 
 
 listStatement 
 @ @ - 356 , 6 + 360 , 11 @ @ showKeyspaces 
 - > ^ ( NODE _ SHOW _ KEYSPACES ) 
 ; 
 
 + showSchema 
 + : SHOW SCHEMA ( keyspace ) ? 
 + - > ^ ( NODE _ SHOW _ SCHEMA ( keyspace ) ? ) 
 + ; 
 + 
 describeTable 
 : DESCRIBE KEYSPACE ( keyspace ) ? 
 - > ^ ( NODE _ DESCRIBE _ TABLE ( keyspace ) ? ) 
 @ @ - 573 , 6 + 582 , 7 @ @ TTL : ' TTL ' ; 
 CONSISTENCYLEVEL : ' CONSISTENCYLEVEL ' ; 
 INDEX : ' INDEX ' ; 
 ON : ' ON ' ; 
 + SCHEMA : ' SCHEMA ' ; 
 
 IP _ ADDRESS 
 : IntegerPositiveLiteral ' . ' IntegerPositiveLiteral ' . ' IntegerPositiveLiteral ' . ' IntegerPositiveLiteral 
 diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java 
 index a11bfad . . 8ec4b67 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliClient . java 
 + + + b / src / java / org / apache / cassandra / cli / CliClient . java 
 @ @ - 26 , 6 + 26 , 9 @ @ import java . nio . ByteBuffer ; 
 import java . nio . charset . CharacterCodingException ; 
 import java . util . * ; 
 
 + import com . google . common . base . Predicate ; 
 + import com . google . common . collect . Collections2 ; 
 + import org . apache . commons . lang . StringUtils ; 
 import com . google . common . base . Charsets ; 
 import com . google . common . base . Joiner ; 
 
 @ @ - 71 , 7 + 74 , 7 @ @ public class CliClient 
 COUNTERCOLUMN ( CounterColumnType . instance ) ; 
 
 private AbstractType validator ; 
 - 
 + 
 Function ( AbstractType validator ) 
 { 
 this . validator = validator ; 
 @ @ - 136 , 6 + 139 , 8 @ @ public class CliClient 
 } 
 
 private static final String DEFAULT _ PLACEMENT _ STRATEGY = " org . apache . cassandra . locator . NetworkTopologyStrategy " ; 
 + private final String NEWLINE = System . getProperty ( " line . separator " ) ; 
 + private final String TAB = " " ; 
 
 private Cassandra . Client thriftClient = null ; 
 private CliSessionState sessionState = null ; 
 @ @ - 241 , 6 + 246 , 9 @ @ public class CliClient 
 case CliParser . NODE _ SHOW _ KEYSPACES : 
 executeShowKeySpaces ( ) ; 
 break ; 
 + case CliParser . NODE _ SHOW _ SCHEMA : 
 + executeShowSchema ( tree ) ; 
 + break ; 
 case CliParser . NODE _ DESCRIBE _ TABLE : 
 executeDescribeKeySpace ( tree ) ; 
 break ; 
 @ @ - 1246 , 7 + 1254 , 7 @ @ public class CliClient 
 cfDef . setReplicate _ on _ write ( Boolean . parseBoolean ( mValue ) ) ; 
 break ; 
 case ROW _ CACHE _ PROVIDER : 
 - cfDef . setRow _ cache _ provider ( mValue ) ; 
 + cfDef . setRow _ cache _ provider ( CliUtils . unescapeSQLString ( mValue ) ) ; 
 break ; 
 case KEY _ VALIDATION _ CLASS : 
 cfDef . setKey _ validation _ class ( CliUtils . unescapeSQLString ( mValue ) ) ; 
 @ @ - 1560 , 6 + 1568 , 187 @ @ public class CliClient 
 } 
 } 
 
 + / / SHOW SCHEMA 
 + private void executeShowSchema ( Tree statement ) throws TException , InvalidRequestException 
 + { 
 + if ( ! CliMain . isConnected ( ) ) 
 + return ; 
 + 
 + final List < KsDef > keyspaces = thriftClient . describe _ keyspaces ( ) ; 
 + Collections . sort ( keyspaces , new KsDefNamesComparator ( ) ) ; 
 + final String keyspaceName = ( statement . getChildCount ( ) = = 0 ) 
 + ? keySpace 
 + : CliCompiler . getKeySpace ( statement , keyspaces ) ; 
 + 
 + Iterator < KsDef > ksIter ; 
 + if ( keyspaceName ! = null ) 
 + ksIter = Collections2 . filter ( keyspaces , new Predicate < KsDef > ( ) 
 + { 
 + public boolean apply ( KsDef ksDef ) 
 + { 
 + return keyspaceName . equals ( ksDef . name ) ; 
 + } 
 + } ) . iterator ( ) ; 
 + else 
 + ksIter = keyspaces . iterator ( ) ; 
 + 
 + 
 + final StringBuilder sb = new StringBuilder ( ) ; 
 + while ( ksIter . hasNext ( ) ) 
 + showKeyspace ( sb , ksIter . next ( ) ) ; 
 + 
 + sessionState . out . printf ( sb . toString ( ) ) ; 
 + } 
 + 
 + / * * 
 + * Creates a CLI script to create the Keyspace it ' s Column Families 
 + * @ param sb StringBuilder to write to . 
 + * @ param ksDef KsDef to create the cli script for . 
 + * / 
 + private void showKeyspace ( StringBuilder sb , KsDef ksDef ) 
 + { 
 + 
 + sb . append ( " create keyspace " + ksDef . name ) ; 
 + if ( ksDef . isSetReplication _ factor ( ) ) 
 + writeAttr ( sb , false , " replication _ factor " , ksDef . getReplication _ factor ( ) ) ; 
 + writeAttr ( sb , true , " placement _ strategy " , normaliseType ( ksDef . strategy _ class , " org . apache . cassandra . locator " ) ) ; 
 + if ( ksDef . strategy _ options ! = null & & ! ksDef . strategy _ options . isEmpty ( ) ) 
 + { 
 + final StringBuilder opts = new StringBuilder ( ) ; 
 + opts . append ( " [ { " ) ; 
 + String prefix = " " ; 
 + for ( Map . Entry < String , String > opt : ksDef . strategy _ options . entrySet ( ) ) 
 + { 
 + opts . append ( prefix + CliUtils . escapeSQLString ( opt . getKey ( ) ) + " : " + CliUtils . escapeSQLString ( opt . getValue ( ) ) ) ; 
 + prefix = " , " ; 
 + } 
 + opts . append ( " } ] " ) ; 
 + writeAttrRaw ( sb , false , " strategy _ options " , opts . toString ( ) ) ; 
 + } 
 + sb . append ( " ; " + NEWLINE ) ; 
 + sb . append ( NEWLINE ) ; 
 + 
 + sb . append ( " use " + ksDef . name + " ; " ) ; 
 + sb . append ( NEWLINE ) ; 
 + sb . append ( NEWLINE ) ; 
 + 
 + Collections . sort ( ksDef . cf _ defs , new CfDefNamesComparator ( ) ) ; 
 + for ( CfDef cfDef : ksDef . cf _ defs ) 
 + showColumnFamily ( sb , cfDef ) ; 
 + sb . append ( NEWLINE ) ; 
 + sb . append ( NEWLINE ) ; 
 + } 
 + 
 + / * * 
 + * Creates a CLI script for the CfDef including meta data to the supplied StringBuilder . 
 + * @ param sb 
 + * @ param cfDef 
 + * / 
 + private void showColumnFamily ( StringBuilder sb , CfDef cfDef ) 
 + { 
 + sb . append ( " create column family " + CliUtils . escapeSQLString ( cfDef . name ) ) ; 
 + 
 + writeAttr ( sb , true , " column _ type " , cfDef . column _ type ) ; 
 + writeAttr ( sb , false , " comparator " , normaliseType ( cfDef . comparator _ type , " org . apache . cassandra . db . marshal " ) ) ; 
 + if ( cfDef . column _ type = = " Super " ) 
 + writeAttr ( sb , false , " subcomparator " , normaliseType ( cfDef . subcomparator _ type , " org . apache . cassandra . db . marshal " ) ) ; 
 + if ( ! StringUtils . isEmpty ( cfDef . default _ validation _ class ) ) 
 + writeAttr ( sb , false , " default _ validation _ class " , 
 + normaliseType ( cfDef . default _ validation _ class , " org . apache . cassandra . db . marshal " ) ) ; 
 + writeAttr ( sb , false , " key _ validation _ class " , 
 + normaliseType ( cfDef . key _ validation _ class , " org . apache . cassandra . db . marshal " ) ) ; 
 + writeAttr ( sb , false , " memtable _ operations " , cfDef . memtable _ operations _ in _ millions ) ; 
 + writeAttr ( sb , false , " memtable _ throughput " , cfDef . memtable _ throughput _ in _ mb ) ; 
 + writeAttr ( sb , false , " memtable _ flush _ after " , cfDef . memtable _ flush _ after _ mins ) ; 
 + writeAttr ( sb , false , " rows _ cached " , cfDef . row _ cache _ size ) ; 
 + writeAttr ( sb , false , " row _ cache _ save _ period " , cfDef . row _ cache _ save _ period _ in _ seconds ) ; 
 + writeAttr ( sb , false , " keys _ cached " , cfDef . key _ cache _ size ) ; 
 + writeAttr ( sb , false , " key _ cache _ save _ period " , cfDef . key _ cache _ save _ period _ in _ seconds ) ; 
 + writeAttr ( sb , false , " read _ repair _ chance " , cfDef . read _ repair _ chance ) ; 
 + writeAttr ( sb , false , " gc _ grace " , cfDef . gc _ grace _ seconds ) ; 
 + writeAttr ( sb , false , " min _ compaction _ threshold " , cfDef . min _ compaction _ threshold ) ; 
 + writeAttr ( sb , false , " max _ compaction _ threshold " , cfDef . max _ compaction _ threshold ) ; 
 + writeAttr ( sb , false , " replicate _ on _ write " , cfDef . replicate _ on _ write ) ; 
 + writeAttr ( sb , false , " row _ cache _ provider " , normaliseType ( cfDef . row _ cache _ provider , " org . apache . cassandra . cache " ) ) ; 
 + 
 + if ( ! StringUtils . isEmpty ( cfDef . comment ) ) 
 + writeAttr ( sb , false , " comment " , cfDef . comment ) ; 
 + 
 + if ( ! cfDef . column _ metadata . isEmpty ( ) ) 
 + { 
 + StringBuilder colSb = new StringBuilder ( ) ; 
 + colSb . append ( " [ " ) ; 
 + boolean first = true ; 
 + for ( ColumnDef colDef : cfDef . column _ metadata ) 
 + { 
 + if ( ! first ) 
 + colSb . append ( " , " ) ; 
 + first = false ; 
 + showColumnMeta ( colSb , cfDef , colDef ) ; 
 + } 
 + colSb . append ( " ] " ) ; 
 + writeAttrRaw ( sb , false , " column _ metadata " , colSb . toString ( ) ) ; 
 + } 
 + sb . append ( " ; " ) ; 
 + sb . append ( NEWLINE ) ; 
 + sb . append ( NEWLINE ) ; 
 + } 
 + 
 + / * * 
 + * Writes the supplied ColumnDef to the StringBuilder as a cli script . 
 + * @ param sb 
 + * @ param cfDef 
 + * @ param colDef 
 + * / 
 + private void showColumnMeta ( StringBuilder sb , CfDef cfDef , ColumnDef colDef ) 
 + { 
 + sb . append ( NEWLINE + TAB + TAB + " { " ) ; 
 + 
 + final AbstractType comparator = getFormatType ( ( cfDef . column _ type = = " Super " ) 
 + ? cfDef . subcomparator _ type 
 + : cfDef . comparator _ type ) ; 
 + sb . append ( " column _ name : ' " + CliUtils . escapeSQLString ( comparator . getString ( colDef . name ) ) + " ' , " + NEWLINE ) ; 
 + String validationClass = normaliseType ( colDef . validation _ class , " org . apache . cassandra . db . marshal " ) ; 
 + sb . append ( TAB + TAB + " validation _ class : " + CliUtils . escapeSQLString ( validationClass ) ) ; 
 + if ( colDef . isSetIndex _ name ( ) ) 
 + { 
 + sb . append ( " , " + NEWLINE ) ; 
 + sb . append ( TAB + TAB + " index _ name : ' " + CliUtils . escapeSQLString ( colDef . index _ name ) + " ' , " + NEWLINE ) ; 
 + sb . append ( TAB + TAB + " index _ type : " + CliUtils . escapeSQLString ( Integer . toString ( colDef . index _ type . getValue ( ) ) ) ) ; 
 + 
 + } 
 + sb . append ( " } " ) ; 
 + } 
 + 
 + private String normaliseType ( String path , String expectedPackage ) 
 + { 
 + if ( path . startsWith ( expectedPackage ) ) 
 + return path . substring ( expectedPackage . length ( ) + 1 ) ; 
 + 
 + return path ; 
 + } 
 + 
 + private void writeAttr ( StringBuilder sb , boolean first , String name , Boolean value ) 
 + { 
 + writeAttrRaw ( sb , first , name , value . toString ( ) ) ; 
 + } 
 + private void writeAttr ( StringBuilder sb , boolean first , String name , Number value ) 
 + { 
 + writeAttrRaw ( sb , first , name , value . toString ( ) ) ; 
 + } 
 + 
 + private void writeAttr ( StringBuilder sb , boolean first , String name , String value ) 
 + { 
 + writeAttrRaw ( sb , first , name , " ' " + CliUtils . escapeSQLString ( value ) + " ' " ) ; 
 + } 
 + 
 + private void writeAttrRaw ( StringBuilder sb , boolean first , String name , String value ) 
 + { 
 + sb . append ( NEWLINE + TAB ) ; 
 + sb . append ( first ? " with " : " and " ) ; 
 + sb . append ( name + " = " ) ; 
 + sb . append ( value ) ; 
 + } 
 / * * 
 * Returns true if this . keySpace is set , false otherwise 
 * @ return boolean 
 diff - - git a / src / java / org / apache / cassandra / cli / CliCompleter . java b / src / java / org / apache / cassandra / cli / CliCompleter . java 
 index 19a0820 . . 6f4e583 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliCompleter . java 
 + + + b / src / java / org / apache / cassandra / cli / CliCompleter . java 
 @ @ - 29 , 6 + 29 , 7 @ @ public class CliCompleter extends SimpleCompletor 
 " quit " , 
 " show cluster name " , 
 " show keyspaces " , 
 + " show schema " , 
 " show api version " , 
 " create keyspace " , 
 " create column family " , 
 @ @ - 45 , 6 + 46 , 7 @ @ public class CliCompleter extends SimpleCompletor 
 " help quit " , 
 " help show cluster name " , 
 " help show keyspaces " , 
 + " help show schema " , 
 " help show api version " , 
 " help create keyspace " , 
 " help create column family " , 
 diff - - git a / src / resources / org / apache / cassandra / cli / CliHelp . yaml b / src / resources / org / apache / cassandra / cli / CliHelp . yaml 
 index 7278e36 . . b6ea6e3 100644 
 - - - a / src / resources / org / apache / cassandra / cli / CliHelp . yaml 
 + + + b / src / resources / org / apache / cassandra / cli / CliHelp . yaml 
 @ @ - 52 , 6 + 52 , 7 @ @ help : | 
 show api version Show the server API version . 
 show cluster name Show the cluster name . 
 show keyspaces Show all keyspaces and their column families . 
 + show schema Show a cli script to create keyspaces and column families . 
 truncate Drop the data in a column family . 
 update column family Update the settings for a column family . 
 update keyspace Update the settings for a keyspace . 
 @ @ - 116 , 7 + 117 , 8 @ @ commands : 
 use Keyspace1 user ' badpasswd ' ; 
 - name : NODE _ DESCRIBE _ TABLE 
 help : | 
 - describe keyspace ( < keyspace > ) ? ; 
 + describe keyspace ; 
 + describe keyspace < keyspace > ; 
 
 Describes the settings for the current or named keyspace , and the settings 
 for all column families in the keyspace . 
 @ @ - 126 , 7 + 128 , 7 @ @ commands : 
 
 Examples : 
 describe keyspace ; 
 - describe keyspace system ; 
 + describe keyspace Keyspace1 ; 
 - name : NODE _ DESCRIBE _ CLUSTER 
 help : | 
 describe cluster ; 
 @ @ - 177 , 6 + 179 , 22 @ @ commands : 
 
 Examples : 
 show keyspaces ; 
 + - name : NODE _ SHOW _ SCHEMA 
 + help : | 
 + show schema ; 
 + show schema < keyspace > ; 
 + 
 + Creates a CLI script to create the current , specified or all keyspaces 
 + and their column families . 
 + 
 + Optional Parameters : 
 + - keyspace : Name of the keyspace to create the script for . If omitted 
 + the current keyspace is used , if there is no current keyspace all 
 + keyspaces are considered . 
 + 
 + Examples : 
 + show schema ; 
 + show schema Keyspace1 ; 
 - name : NODE _ ADD _ KEYSPACE 
 help : | 
 create keyspace < keyspace > ; 
 diff - - git a / test / unit / org / apache / cassandra / cli / CliTest . java b / test / unit / org / apache / cassandra / cli / CliTest . java 
 index d71145d . . 3d294b9 100644 
 - - - a / test / unit / org / apache / cassandra / cli / CliTest . java 
 + + + b / test / unit / org / apache / cassandra / cli / CliTest . java 
 @ @ - 166 , 6 + 166 , 7 @ @ public class CliTest extends CleanupHelper 
 " help QUIT " , 
 " help show cluster name " , 
 " help show keyspaces " , 
 + " help show schema " , 
 " help show api version " , 
 " help create keyspace " , 
 " HELP update KEYSPACE " , 
 @ @ - 181 , 7 + 182 , 9 @ @ public class CliTest extends CleanupHelper 
 " HELP TRUNCATE " , 
 " help assume " , 
 " HELP " , 
 - " ? " 
 + " ? " , 
 + " show schema " , 
 + " show schema TestKeySpace " 
 } ; 
 
 @ Test 
 @ @ - 270 , 4 + 273 , 4 @ @ public class CliTest extends CleanupHelper 
 assertEquals ( unescaped , CliUtils . unescapeSQLString ( " ' " + escaped + " ' " ) ) ; 
 assertEquals ( escaped , CliUtils . escapeSQLString ( unescaped ) ) ; 
 } 
 - } 
 \ No newline at end of file 
 + }
