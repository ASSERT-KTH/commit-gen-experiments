BLEU SCORE: 0.11156508007421491

TEST MSG: fix build
GENERATED MSG: merge from 2 . 1

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / AbstractRowResolver . java b / src / java / org / apache / cassandra / service / AbstractRowResolver . java <nl> index 1fbb92b . . a84a6b6 100644 <nl> - - - a / src / java / org / apache / cassandra / service / AbstractRowResolver . java <nl> + + + b / src / java / org / apache / cassandra / service / AbstractRowResolver . java <nl> @ @ - 18 , 7 + 18 , 9 @ @ <nl> package org . apache . cassandra . service ; <nl> <nl> import java . nio . ByteBuffer ; <nl> + import java . util . ArrayList ; <nl> import java . util . Collection ; <nl> + import java . util . Collections ; <nl> import java . util . concurrent . ConcurrentLinkedQueue ; <nl> <nl> import org . slf4j . Logger ; <nl> @ @ - 34 , 8 + 36 , 8 @ @ public abstract class AbstractRowResolver implements IResponseResolver < ReadRespo <nl> protected static final Logger logger = LoggerFactory . getLogger ( AbstractRowResolver . class ) ; <nl> <nl> protected final String keyspaceName ; <nl> - / / CLQ gives us thread - safety without the overhead of guaranteeing uniqueness like a Set would <nl> - protected final Collection < MessageIn < ReadResponse > > replies = new ConcurrentLinkedQueue < > ( ) ; <nl> + / / synchronizedList gives us thread - safety without the overhead of guaranteeing uniqueness like a Set would <nl> + protected final Collection < MessageIn < ReadResponse > > replies = Collections . synchronizedList ( new ArrayList < MessageIn < ReadResponse > > ( ) ) ; <nl> protected final DecoratedKey key ; <nl> <nl> public AbstractRowResolver ( ByteBuffer key , String keyspaceName )
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / AbstractRowResolver . java b / src / java / org / apache / cassandra / service / AbstractRowResolver . java 
 index 1fbb92b . . a84a6b6 100644 
 - - - a / src / java / org / apache / cassandra / service / AbstractRowResolver . java 
 + + + b / src / java / org / apache / cassandra / service / AbstractRowResolver . java 
 @ @ - 18 , 7 + 18 , 9 @ @ 
 package org . apache . cassandra . service ; 
 
 import java . nio . ByteBuffer ; 
 + import java . util . ArrayList ; 
 import java . util . Collection ; 
 + import java . util . Collections ; 
 import java . util . concurrent . ConcurrentLinkedQueue ; 
 
 import org . slf4j . Logger ; 
 @ @ - 34 , 8 + 36 , 8 @ @ public abstract class AbstractRowResolver implements IResponseResolver < ReadRespo 
 protected static final Logger logger = LoggerFactory . getLogger ( AbstractRowResolver . class ) ; 
 
 protected final String keyspaceName ; 
 - / / CLQ gives us thread - safety without the overhead of guaranteeing uniqueness like a Set would 
 - protected final Collection < MessageIn < ReadResponse > > replies = new ConcurrentLinkedQueue < > ( ) ; 
 + / / synchronizedList gives us thread - safety without the overhead of guaranteeing uniqueness like a Set would 
 + protected final Collection < MessageIn < ReadResponse > > replies = Collections . synchronizedList ( new ArrayList < MessageIn < ReadResponse > > ( ) ) ; 
 protected final DecoratedKey key ; 
 
 public AbstractRowResolver ( ByteBuffer key , String keyspaceName )

NEAREST DIFF:
ELIMINATEDSENTENCE
