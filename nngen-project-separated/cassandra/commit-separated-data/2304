BLEU SCORE: 0.11731175160263997

TEST MSG: update versioning for 2 . 1 . 0 - rc4 release
GENERATED MSG: Update versions for 1 . 2 . 7 release

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index ff417b1 . . 5ba30cc 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - 2 . 1 . 0 - final <nl> + 2 . 1 . 0 - rc4 <nl> * Updated memtable _ cleanup _ threshold and memtable _ flush _ writers defaults <nl> ( CASSANDRA - 7551 ) <nl> * ( Windows ) fix startup when WMI memory query fails ( CASSANDRA - 7505 ) <nl> diff - - git a / build . xml b / build . xml <nl> index fd0c72b . . ca973cc 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 25 , 7 + 25 , 7 @ @ <nl> < property name = " debuglevel " value = " source , lines , vars " / > <nl> <nl> < ! - - default version and SCM information - - > <nl> - < property name = " base . version " value = " 2 . 1 . 0 - rc3 " / > <nl> + < property name = " base . version " value = " 2 . 1 . 0 - rc4 " / > <nl> < property name = " scm . connection " value = " scm : git : / / git . apache . org / cassandra . git " / > <nl> < property name = " scm . developerConnection " value = " scm : git : / / git . apache . org / cassandra . git " / > <nl> < property name = " scm . url " value = " http : / / git - wip - us . apache . org / repos / asf ? p = cassandra . git ; a = tree " / > <nl> diff - - git a / debian / changelog b / debian / changelog <nl> index 6f8e3ec . . 7a38d2d 100644 <nl> - - - a / debian / changelog <nl> + + + b / debian / changelog <nl> @ @ - 1 , 3 + 1 , 9 @ @ <nl> + cassandra ( 2 . 1 . 0 ~ rc4 ) unstable ; urgency = medium <nl> + <nl> + * New RC release <nl> + <nl> + - - Eric Evans < eevans @ apache . org > Fri , 18 Jul 2014 13 : 40 : 48 - 0500 <nl> + <nl> cassandra ( 2 . 1 . 0 ~ rc3 ) unstable ; urgency = medium <nl> <nl> * New RC release
NEAREST DIFF (one line): diff - - git a / doc / cql3 / CQL . textile b / doc / cql3 / CQL . textile <nl> index 34a0c12 . . 9a24ec0 100644 <nl> - - - a / doc / cql3 / CQL . textile <nl> + + + b / doc / cql3 / CQL . textile <nl> @ @ - 409 , 7 + 409 , 7 @ @ CREATE INDEX userIndex ON NerdMovies ( user ) ; <nl> CREATE INDEX ON Mutants ( abilityId ) ; <nl> CREATE CUSTOM INDEX ON users ( email ) USING ' path . to . the . IndexClass ' ; <nl> <nl> - The @ CREATE INDEX @ statement is used to create a new ( automatic ) secondary index for a given ( existing ) column in a given table . A name for the index itself can be specified before the @ ON @ keyword , if desired . If data already exists for the column , it will be indexed during the execution of this statement . After the index is created , new data for the column is indexed automatically at insertion time . <nl> + The @ CREATE INDEX @ statement is used to create a new ( automatic ) secondary index for a given ( existing ) column in a given table . A name for the index itself can be specified before the @ ON @ keyword , if desired . If data already exists for the column , it will be indexed asynchronously . After the index is created , new data for the column is indexed automatically at insertion time . <nl> <nl> Attempting to create an already existing index will return an error unless the @ IF NOT EXISTS @ option is used . If it is used , the statement will be a no - op if the index already exists . <nl> <nl> @ @ - 437 , 6 + 437 , 7 @ @ bc ( syntax ) . . <nl> < insertStatement > : : = INSERT INTO < tablename > <nl> ' ( ' < identifier > ( ' , ' < identifier > ) * ' ) ' <nl> VALUES ' ( ' < term - or - literal > ( ' , ' < term - or - literal > ) * ' ) ' <nl> + ( IF NOT EXISTS ) ? <nl> ( USING < option > ( AND < option > ) * ) ? <nl> <nl> < term - or - literal > : : = < term > <nl> @ @ - 454 , 7 + 455 , 9 @ @ USING TTL 86400 ; <nl> <nl> The @ INSERT @ statement writes one or more columns for a given row in a table . Note that since a row is identified by its @ PRIMARY KEY @ , the columns that compose it must be specified . Also , since a row only exists when it contains one value for a column not part of the @ PRIMARY KEY @ , one such value must be specified too . <nl> <nl> - Note that unlike in SQL , @ INSERT @ does not check the prior existence of the row : the row is created if none existed before , and updated otherwise . Furthermore , there is no mean to know which of creation or update happened . In fact , the semantic of @ INSERT @ and @ UPDATE @ are identical . <nl> + Note that unlike in SQL , @ INSERT @ does not check the prior existence of the row by default : the row is created if none existed before , and updated otherwise . Furthermore , there is no mean to know which of creation or update happened . <nl> + <nl> + It is however possible to use the @ IF NOT EXISTS @ condition to only insert if the row does not exist prior to the insertion . But please note that using @ IF NOT EXISTS @ will incur a non negligible performance cost ( internally , Paxos will be used ) so this should be used sparingly . <nl> <nl> All updates for an @ INSERT @ are applied atomically and in isolation . <nl> <nl> @ @ - 469 , 6 + 472 , 7 @ @ bc ( syntax ) . . <nl> ( USING < option > ( AND < option > ) * ) ? <nl> SET < assignment > ( ' , ' < assignment > ) * <nl> WHERE < where - clause > <nl> + ( IF < identifier > ' = ' < term > ( AND < identifier > ' = ' < term > ) * ) ? <nl> <nl> < assignment > : : = < identifier > ' = ' < term > <nl> | < identifier > ' = ' < identifier > ( ' + ' | ' - ' ) ( < int - term > | < set - literal > | < list - literal > ) <nl> @ @ - 494 , 7 + 498 , 9 @ @ UPDATE UserActions SET total = total + 2 WHERE user = B70DE1D0 - 9908 - 4AE3 - BE34 - 55 <nl> p . <nl> The @ UPDATE @ statement writes one or more columns for a given row in a table . The @ < where - clause > @ is used to select the row to update and must include all columns composing the @ PRIMARY KEY @ . Other columns values are specified through @ < assignment > @ after the @ SET @ keyword . <nl> <nl> - Note that unlike in SQL , @ UPDATE @ does not check the prior existence of the row : the row is created if none existed before , and updated otherwise . Furthermore , there is no mean to know which of creation or update happened . In fact , the semantic of @ INSERT @ and @ UPDATE @ are identical . <nl> + Note that unlike in SQL , @ UPDATE @ does not check the prior existence of the row by default : the row is created if none existed before , and updated otherwise . Furthermore , there is no mean to know which of creation or update happened . <nl> + <nl> + It is however possible to use the conditions on some columns through @ IF @ , in which case the row will not be updated unless such condition are met . But please note that using @ IF @ conditions will incur a non negligible performance cost ( internally , Paxos will be used ) so this should be used sparingly . <nl> <nl> In an @ UPDATE @ statement , all updates within the same partition key are applied atomically and in isolation . <nl> <nl> @ @ - 1072 , 6 + 1078 , 7 @ @ h3 . 3 . 1 . 0 <nl> * " ALTER TABLE " : # alterTableStmt @ DROP @ option has been reenabled for CQL3 tables and has new semantics now : the space formerly used by dropped columns will now be eventually reclaimed ( post - compaction ) . You should not readd previously dropped columns unless you use timestamps with microsecond precision ( see " CASSANDRA - 3919 " : https : / / issues . apache . org / jira / browse / CASSANDRA - 3919 for more details ) . <nl> * @ SELECT @ statement now supports aliases in select clause . Aliases in WHERE and ORDER BY clauses are not supported . See the " section on select " # selectStmt for details . <nl> * @ CREATE @ statements for @ KEYSPACE @ , @ TABLE @ and @ INDEX @ now supports an @ IF NOT EXISTS @ condition . Similarly , @ DROP @ statements support a @ IF EXISTS @ condition . <nl> + * @ INSERT @ statements optionally supports a @ IF NOT EXISTS @ condition and @ UDPATE @ supports @ IF @ conditions . <nl> <nl> h3 . 3 . 0 . 4 <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index ff417b1 . . 5ba30cc 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 - 2 . 1 . 0 - final 
 + 2 . 1 . 0 - rc4 
 * Updated memtable _ cleanup _ threshold and memtable _ flush _ writers defaults 
 ( CASSANDRA - 7551 ) 
 * ( Windows ) fix startup when WMI memory query fails ( CASSANDRA - 7505 ) 
 diff - - git a / build . xml b / build . xml 
 index fd0c72b . . ca973cc 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 25 , 7 + 25 , 7 @ @ 
 < property name = " debuglevel " value = " source , lines , vars " / > 
 
 < ! - - default version and SCM information - - > 
 - < property name = " base . version " value = " 2 . 1 . 0 - rc3 " / > 
 + < property name = " base . version " value = " 2 . 1 . 0 - rc4 " / > 
 < property name = " scm . connection " value = " scm : git : / / git . apache . org / cassandra . git " / > 
 < property name = " scm . developerConnection " value = " scm : git : / / git . apache . org / cassandra . git " / > 
 < property name = " scm . url " value = " http : / / git - wip - us . apache . org / repos / asf ? p = cassandra . git ; a = tree " / > 
 diff - - git a / debian / changelog b / debian / changelog 
 index 6f8e3ec . . 7a38d2d 100644 
 - - - a / debian / changelog 
 + + + b / debian / changelog 
 @ @ - 1 , 3 + 1 , 9 @ @ 
 + cassandra ( 2 . 1 . 0 ~ rc4 ) unstable ; urgency = medium 
 + 
 + * New RC release 
 + 
 + - - Eric Evans < eevans @ apache . org > Fri , 18 Jul 2014 13 : 40 : 48 - 0500 
 + 
 cassandra ( 2 . 1 . 0 ~ rc3 ) unstable ; urgency = medium 
 
 * New RC release

NEAREST DIFF:
diff - - git a / doc / cql3 / CQL . textile b / doc / cql3 / CQL . textile 
 index 34a0c12 . . 9a24ec0 100644 
 - - - a / doc / cql3 / CQL . textile 
 + + + b / doc / cql3 / CQL . textile 
 @ @ - 409 , 7 + 409 , 7 @ @ CREATE INDEX userIndex ON NerdMovies ( user ) ; 
 CREATE INDEX ON Mutants ( abilityId ) ; 
 CREATE CUSTOM INDEX ON users ( email ) USING ' path . to . the . IndexClass ' ; 
 
 - The @ CREATE INDEX @ statement is used to create a new ( automatic ) secondary index for a given ( existing ) column in a given table . A name for the index itself can be specified before the @ ON @ keyword , if desired . If data already exists for the column , it will be indexed during the execution of this statement . After the index is created , new data for the column is indexed automatically at insertion time . 
 + The @ CREATE INDEX @ statement is used to create a new ( automatic ) secondary index for a given ( existing ) column in a given table . A name for the index itself can be specified before the @ ON @ keyword , if desired . If data already exists for the column , it will be indexed asynchronously . After the index is created , new data for the column is indexed automatically at insertion time . 
 
 Attempting to create an already existing index will return an error unless the @ IF NOT EXISTS @ option is used . If it is used , the statement will be a no - op if the index already exists . 
 
 @ @ - 437 , 6 + 437 , 7 @ @ bc ( syntax ) . . 
 < insertStatement > : : = INSERT INTO < tablename > 
 ' ( ' < identifier > ( ' , ' < identifier > ) * ' ) ' 
 VALUES ' ( ' < term - or - literal > ( ' , ' < term - or - literal > ) * ' ) ' 
 + ( IF NOT EXISTS ) ? 
 ( USING < option > ( AND < option > ) * ) ? 
 
 < term - or - literal > : : = < term > 
 @ @ - 454 , 7 + 455 , 9 @ @ USING TTL 86400 ; 
 
 The @ INSERT @ statement writes one or more columns for a given row in a table . Note that since a row is identified by its @ PRIMARY KEY @ , the columns that compose it must be specified . Also , since a row only exists when it contains one value for a column not part of the @ PRIMARY KEY @ , one such value must be specified too . 
 
 - Note that unlike in SQL , @ INSERT @ does not check the prior existence of the row : the row is created if none existed before , and updated otherwise . Furthermore , there is no mean to know which of creation or update happened . In fact , the semantic of @ INSERT @ and @ UPDATE @ are identical . 
 + Note that unlike in SQL , @ INSERT @ does not check the prior existence of the row by default : the row is created if none existed before , and updated otherwise . Furthermore , there is no mean to know which of creation or update happened . 
 + 
 + It is however possible to use the @ IF NOT EXISTS @ condition to only insert if the row does not exist prior to the insertion . But please note that using @ IF NOT EXISTS @ will incur a non negligible performance cost ( internally , Paxos will be used ) so this should be used sparingly . 
 
 All updates for an @ INSERT @ are applied atomically and in isolation . 
 
 @ @ - 469 , 6 + 472 , 7 @ @ bc ( syntax ) . . 
 ( USING < option > ( AND < option > ) * ) ? 
 SET < assignment > ( ' , ' < assignment > ) * 
 WHERE < where - clause > 
 + ( IF < identifier > ' = ' < term > ( AND < identifier > ' = ' < term > ) * ) ? 
 
 < assignment > : : = < identifier > ' = ' < term > 
 | < identifier > ' = ' < identifier > ( ' + ' | ' - ' ) ( < int - term > | < set - literal > | < list - literal > ) 
 @ @ - 494 , 7 + 498 , 9 @ @ UPDATE UserActions SET total = total + 2 WHERE user = B70DE1D0 - 9908 - 4AE3 - BE34 - 55 
 p . 
 The @ UPDATE @ statement writes one or more columns for a given row in a table . The @ < where - clause > @ is used to select the row to update and must include all columns composing the @ PRIMARY KEY @ . Other columns values are specified through @ < assignment > @ after the @ SET @ keyword . 
 
 - Note that unlike in SQL , @ UPDATE @ does not check the prior existence of the row : the row is created if none existed before , and updated otherwise . Furthermore , there is no mean to know which of creation or update happened . In fact , the semantic of @ INSERT @ and @ UPDATE @ are identical . 
 + Note that unlike in SQL , @ UPDATE @ does not check the prior existence of the row by default : the row is created if none existed before , and updated otherwise . Furthermore , there is no mean to know which of creation or update happened . 
 + 
 + It is however possible to use the conditions on some columns through @ IF @ , in which case the row will not be updated unless such condition are met . But please note that using @ IF @ conditions will incur a non negligible performance cost ( internally , Paxos will be used ) so this should be used sparingly . 
 
 In an @ UPDATE @ statement , all updates within the same partition key are applied atomically and in isolation . 
 
 @ @ - 1072 , 6 + 1078 , 7 @ @ h3 . 3 . 1 . 0 
 * " ALTER TABLE " : # alterTableStmt @ DROP @ option has been reenabled for CQL3 tables and has new semantics now : the space formerly used by dropped columns will now be eventually reclaimed ( post - compaction ) . You should not readd previously dropped columns unless you use timestamps with microsecond precision ( see " CASSANDRA - 3919 " : https : / / issues . apache . org / jira / browse / CASSANDRA - 3919 for more details ) . 
 * @ SELECT @ statement now supports aliases in select clause . Aliases in WHERE and ORDER BY clauses are not supported . See the " section on select " # selectStmt for details . 
 * @ CREATE @ statements for @ KEYSPACE @ , @ TABLE @ and @ INDEX @ now supports an @ IF NOT EXISTS @ condition . Similarly , @ DROP @ statements support a @ IF EXISTS @ condition . 
 + * @ INSERT @ statements optionally supports a @ IF NOT EXISTS @ condition and @ UDPATE @ supports @ IF @ conditions . 
 
 h3 . 3 . 0 . 4 

