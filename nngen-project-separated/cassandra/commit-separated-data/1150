BLEU SCORE: 0.032530620447891706

TEST MSG: Revert changes to names of public methods on Gossiper
GENERATED MSG: Add a configurable maximum amount of time to hint for a dead host .

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> index 09851b2 . . 130b531 100644 <nl> - - - a / src / java / org / apache / cassandra / gms / Gossiper . java <nl> + + + b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> @ @ - 256 , 12 + 256 , 23 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean <nl> subscribers . remove ( subscriber ) ; <nl> } <nl> <nl> - public Set < InetAddress > getLiveEndpoints ( ) <nl> + / * * <nl> + * @ return a list of live gossip participants , including fat clients <nl> + * / <nl> + public Set < InetAddress > getLiveMembers ( ) <nl> + { <nl> + Set < InetAddress > liveMembers = new HashSet < > ( liveEndpoints ) ; <nl> + if ( ! liveMembers . contains ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> + liveMembers . add ( FBUtilities . getBroadcastAddress ( ) ) ; <nl> + return liveMembers ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return a list of live ring members . <nl> + * / <nl> + public Set < InetAddress > getLiveTokenOwners ( ) <nl> { <nl> - Set < InetAddress > liveEndpoints = new HashSet < InetAddress > ( this . liveEndpoints ) ; <nl> - if ( ! liveEndpoints . contains ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> - liveEndpoints . add ( FBUtilities . getBroadcastAddress ( ) ) ; <nl> - return liveEndpoints ; <nl> + return StorageService . instance . getLiveRingMembers ( true ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / java / org / apache / cassandra / locator / PropertyFileSnitch . java b / src / java / org / apache / cassandra / locator / PropertyFileSnitch . java <nl> index 6115572 . . dc9a3b8 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / PropertyFileSnitch . java <nl> + + + b / src / java / org / apache / cassandra / locator / PropertyFileSnitch . java <nl> @ @ - 23 , 7 + 23 , 6 @ @ import java . net . UnknownHostException ; <nl> import java . util . Arrays ; <nl> import java . util . HashMap ; <nl> import java . util . Map ; <nl> - import java . util . Objects ; <nl> import java . util . Properties ; <nl> import java . util . Set ; <nl> <nl> @ @ - 32 , 7 + 31 , 6 @ @ import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> import org . apache . cassandra . exceptions . ConfigurationException ; <nl> - import org . apache . cassandra . gms . Gossiper ; <nl> import org . apache . cassandra . io . util . FileUtils ; <nl> import org . apache . cassandra . service . StorageService ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> @ @ - 238 , 9 + 236 , 9 @ @ public class PropertyFileSnitch extends AbstractNetworkTopologySnitch <nl> / / host quickly and interrupt the loop . Otherwise we only check the live hosts that were either <nl> / / in the old set or in the new set <nl> Set < InetAddress > hosts = Arrays . equals ( defaultDCRack , reloadedDefaultDCRack ) <nl> - ? Sets . intersection ( StorageService . instance . getLiveMembers ( ) , / / same default <nl> + ? Sets . intersection ( StorageService . instance . getLiveRingMembers ( ) , / / same default <nl> Sets . union ( endpointMap . keySet ( ) , reloadedMap . keySet ( ) ) ) <nl> - : StorageService . instance . getLiveMembers ( ) ; / / default updated <nl> + : StorageService . instance . getLiveRingMembers ( ) ; / / default updated <nl> <nl> for ( InetAddress host : hosts ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / locator / YamlFileNetworkTopologySnitch . java b / src / java / org / apache / cassandra / locator / YamlFileNetworkTopologySnitch . java <nl> index 870eea8 . . 0279e9f 100644 <nl> - - - a / src / java / org / apache / cassandra / locator / YamlFileNetworkTopologySnitch . java <nl> + + + b / src / java / org / apache / cassandra / locator / YamlFileNetworkTopologySnitch . java <nl> @ @ - 386 , 9 + 386 , 9 @ @ public class YamlFileNetworkTopologySnitch <nl> / / host quickly and interrupt the loop . Otherwise we only check the live hosts that were either <nl> / / in the old set or in the new set <nl> Set < InetAddress > hosts = NodeData . isSameDcRack ( defaultNodeData , reloadedDefaultData ) <nl> - ? Sets . intersection ( StorageService . instance . getLiveMembers ( ) , / / same default <nl> + ? Sets . intersection ( StorageService . instance . getLiveRingMembers ( ) , / / same default <nl> Sets . union ( nodeDataMap . keySet ( ) , reloadedMap . keySet ( ) ) ) <nl> - : StorageService . instance . getLiveMembers ( ) ; / / default updated <nl> + : StorageService . instance . getLiveRingMembers ( ) ; / / default updated <nl> <nl> for ( InetAddress host : hosts ) <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / service / MigrationManager . java b / src / java / org / apache / cassandra / service / MigrationManager . java <nl> index 3539602 . . bebfa43 100644 <nl> - - - a / src / java / org / apache / cassandra / service / MigrationManager . java <nl> + + + b / src / java / org / apache / cassandra / service / MigrationManager . java <nl> @ @ - 395 , 7 + 395 , 7 @ @ public class MigrationManager <nl> } <nl> } ) ; <nl> <nl> - for ( InetAddress endpoint : Gossiper . instance . getLiveEndpoints ( ) ) <nl> + for ( InetAddress endpoint : Gossiper . instance . getLiveMembers ( ) ) <nl> { <nl> / / only push schema to nodes with known and equal versions <nl> if ( ! endpoint . equals ( FBUtilities . getBroadcastAddress ( ) ) & & <nl> @ @ - 439 , 7 + 439 , 7 @ @ public class MigrationManager <nl> <nl> Schema . instance . clear ( ) ; <nl> <nl> - Set < InetAddress > liveEndpoints = Gossiper . instance . getLiveEndpoints ( ) ; <nl> + Set < InetAddress > liveEndpoints = Gossiper . instance . getLiveMembers ( ) ; <nl> liveEndpoints . remove ( FBUtilities . getBroadcastAddress ( ) ) ; <nl> <nl> / / force migration if there are nodes around <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> index 0e90ea6 . . fedcf3a 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageProxy . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> @ @ - 1863 , 7 + 1863 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> { <nl> final String myVersion = Schema . instance . getVersion ( ) . toString ( ) ; <nl> final Map < InetAddress , UUID > versions = new ConcurrentHashMap < InetAddress , UUID > ( ) ; <nl> - final Set < InetAddress > liveHosts = Gossiper . instance . getLiveEndpoints ( ) ; <nl> + final Set < InetAddress > liveHosts = Gossiper . instance . getLiveMembers ( ) ; <nl> final CountDownLatch latch = new CountDownLatch ( liveHosts . size ( ) ) ; <nl> <nl> IAsyncCallback < UUID > cb = new IAsyncCallback < UUID > ( ) <nl> @ @ - 1897 , 7 + 1897 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> <nl> / / maps versions to hosts that are on that version . <nl> Map < String , List < String > > results = new HashMap < String , List < String > > ( ) ; <nl> - Iterable < InetAddress > allHosts = Iterables . concat ( Gossiper . instance . getLiveEndpoints ( ) , Gossiper . instance . getUnreachableMembers ( ) ) ; <nl> + Iterable < InetAddress > allHosts = Iterables . concat ( Gossiper . instance . getLiveMembers ( ) , Gossiper . instance . getUnreachableMembers ( ) ) ; <nl> for ( InetAddress host : allHosts ) <nl> { <nl> UUID version = versions . get ( host ) ; <nl> @ @ - 2125 , 11 + 2125 , 11 @ @ public class StorageProxy implements StorageProxyMBean <nl> / / Since the truncate operation is so aggressive and is typically only <nl> / / invoked by an admin , for simplicity we require that all nodes are up <nl> / / to perform the operation . <nl> - int liveMembers = Gossiper . instance . getLiveEndpoints ( ) . size ( ) ; <nl> + int liveMembers = Gossiper . instance . getLiveMembers ( ) . size ( ) ; <nl> throw new UnavailableException ( ConsistencyLevel . ALL , liveMembers + Gossiper . instance . getUnreachableMembers ( ) . size ( ) , liveMembers ) ; <nl> } <nl> <nl> - Set < InetAddress > allEndpoints = StorageService . instance . getLiveMembers ( true ) ; <nl> + Set < InetAddress > allEndpoints = StorageService . instance . getLiveRingMembers ( true ) ; <nl> <nl> int blockFor = allEndpoints . size ( ) ; <nl> final TruncateResponseHandler responseHandler = new TruncateResponseHandler ( blockFor ) ; <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 5503123 . . 0d9e9ef 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 572 , 7 + 572 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> while ( true ) <nl> { <nl> Uninterruptibles . sleepUninterruptibly ( 1 , TimeUnit . SECONDS ) ; <nl> - for ( InetAddress address : Gossiper . instance . getLiveEndpoints ( ) ) <nl> + for ( InetAddress address : Gossiper . instance . getLiveMembers ( ) ) <nl> { <nl> if ( ! Gossiper . instance . isFatClient ( address ) ) <nl> break outer ; <nl> @ @ - 2301 , 18 + 2301 , 18 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> <nl> public List < String > getLiveNodes ( ) <nl> { <nl> - return stringify ( Gossiper . instance . getLiveEndpoints ( ) ) ; <nl> + return stringify ( Gossiper . instance . getLiveMembers ( ) ) ; <nl> } <nl> <nl> - public Set < InetAddress > getLiveMembers ( ) <nl> + public Set < InetAddress > getLiveRingMembers ( ) <nl> { <nl> - return getLiveMembers ( false ) ; <nl> + return getLiveRingMembers ( false ) ; <nl> } <nl> <nl> - public Set < InetAddress > getLiveMembers ( boolean excludeDeadStates ) <nl> + public Set < InetAddress > getLiveRingMembers ( boolean excludeDeadStates ) <nl> { <nl> Set < InetAddress > ret = new HashSet < > ( ) ; <nl> - for ( InetAddress ep : Gossiper . instance . getLiveEndpoints ( ) ) <nl> + for ( InetAddress ep : Gossiper . instance . getLiveMembers ( ) ) <nl> { <nl> if ( excludeDeadStates ) <nl> { <nl> @ @ - 3768 , 7 + 3768 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> if ( endpoint . equals ( myAddress ) ) <nl> throw new UnsupportedOperationException ( " Cannot remove self " ) ; <nl> <nl> - if ( Gossiper . instance . getLiveEndpoints ( ) . contains ( endpoint ) ) <nl> + if ( Gossiper . instance . getLiveMembers ( ) . contains ( endpoint ) ) <nl> throw new UnsupportedOperationException ( " Node " + endpoint + " is alive and owns this ID . Use decommission command to remove it from the ring " ) ; <nl> <nl> / / A leaving endpoint that is dead is already being removed .
NEAREST DIFF (one line): diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml <nl> index ca5495d . . 5f43843 100644 <nl> - - - a / conf / cassandra . yaml <nl> + + + b / conf / cassandra . yaml <nl> @ @ - 33 , 8 + 33 , 7 @ @ auto _ bootstrap : false <nl> hinted _ handoff _ enabled : true <nl> # this defines the maximum amount of time a dead host will have hints <nl> # generated . After it has been dead this long , hints will be dropped . <nl> - # Maximum is approximately 50 days <nl> - max _ hint _ window _ in _ ms : 2147483647 <nl> + max _ hint _ window _ in _ ms : 3600000 # one hour <nl> <nl> # authentication backend , implementing IAuthenticator ; used to identify users <nl> authenticator : org . apache . cassandra . auth . AllowAllAuthenticator

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java 
 index 09851b2 . . 130b531 100644 
 - - - a / src / java / org / apache / cassandra / gms / Gossiper . java 
 + + + b / src / java / org / apache / cassandra / gms / Gossiper . java 
 @ @ - 256 , 12 + 256 , 23 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean 
 subscribers . remove ( subscriber ) ; 
 } 
 
 - public Set < InetAddress > getLiveEndpoints ( ) 
 + / * * 
 + * @ return a list of live gossip participants , including fat clients 
 + * / 
 + public Set < InetAddress > getLiveMembers ( ) 
 + { 
 + Set < InetAddress > liveMembers = new HashSet < > ( liveEndpoints ) ; 
 + if ( ! liveMembers . contains ( FBUtilities . getBroadcastAddress ( ) ) ) 
 + liveMembers . add ( FBUtilities . getBroadcastAddress ( ) ) ; 
 + return liveMembers ; 
 + } 
 + 
 + / * * 
 + * @ return a list of live ring members . 
 + * / 
 + public Set < InetAddress > getLiveTokenOwners ( ) 
 { 
 - Set < InetAddress > liveEndpoints = new HashSet < InetAddress > ( this . liveEndpoints ) ; 
 - if ( ! liveEndpoints . contains ( FBUtilities . getBroadcastAddress ( ) ) ) 
 - liveEndpoints . add ( FBUtilities . getBroadcastAddress ( ) ) ; 
 - return liveEndpoints ; 
 + return StorageService . instance . getLiveRingMembers ( true ) ; 
 } 
 
 / * * 
 diff - - git a / src / java / org / apache / cassandra / locator / PropertyFileSnitch . java b / src / java / org / apache / cassandra / locator / PropertyFileSnitch . java 
 index 6115572 . . dc9a3b8 100644 
 - - - a / src / java / org / apache / cassandra / locator / PropertyFileSnitch . java 
 + + + b / src / java / org / apache / cassandra / locator / PropertyFileSnitch . java 
 @ @ - 23 , 7 + 23 , 6 @ @ import java . net . UnknownHostException ; 
 import java . util . Arrays ; 
 import java . util . HashMap ; 
 import java . util . Map ; 
 - import java . util . Objects ; 
 import java . util . Properties ; 
 import java . util . Set ; 
 
 @ @ - 32 , 7 + 31 , 6 @ @ import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 import org . apache . cassandra . exceptions . ConfigurationException ; 
 - import org . apache . cassandra . gms . Gossiper ; 
 import org . apache . cassandra . io . util . FileUtils ; 
 import org . apache . cassandra . service . StorageService ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 @ @ - 238 , 9 + 236 , 9 @ @ public class PropertyFileSnitch extends AbstractNetworkTopologySnitch 
 / / host quickly and interrupt the loop . Otherwise we only check the live hosts that were either 
 / / in the old set or in the new set 
 Set < InetAddress > hosts = Arrays . equals ( defaultDCRack , reloadedDefaultDCRack ) 
 - ? Sets . intersection ( StorageService . instance . getLiveMembers ( ) , / / same default 
 + ? Sets . intersection ( StorageService . instance . getLiveRingMembers ( ) , / / same default 
 Sets . union ( endpointMap . keySet ( ) , reloadedMap . keySet ( ) ) ) 
 - : StorageService . instance . getLiveMembers ( ) ; / / default updated 
 + : StorageService . instance . getLiveRingMembers ( ) ; / / default updated 
 
 for ( InetAddress host : hosts ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / locator / YamlFileNetworkTopologySnitch . java b / src / java / org / apache / cassandra / locator / YamlFileNetworkTopologySnitch . java 
 index 870eea8 . . 0279e9f 100644 
 - - - a / src / java / org / apache / cassandra / locator / YamlFileNetworkTopologySnitch . java 
 + + + b / src / java / org / apache / cassandra / locator / YamlFileNetworkTopologySnitch . java 
 @ @ - 386 , 9 + 386 , 9 @ @ public class YamlFileNetworkTopologySnitch 
 / / host quickly and interrupt the loop . Otherwise we only check the live hosts that were either 
 / / in the old set or in the new set 
 Set < InetAddress > hosts = NodeData . isSameDcRack ( defaultNodeData , reloadedDefaultData ) 
 - ? Sets . intersection ( StorageService . instance . getLiveMembers ( ) , / / same default 
 + ? Sets . intersection ( StorageService . instance . getLiveRingMembers ( ) , / / same default 
 Sets . union ( nodeDataMap . keySet ( ) , reloadedMap . keySet ( ) ) ) 
 - : StorageService . instance . getLiveMembers ( ) ; / / default updated 
 + : StorageService . instance . getLiveRingMembers ( ) ; / / default updated 
 
 for ( InetAddress host : hosts ) 
 { 
 diff - - git a / src / java / org / apache / cassandra / service / MigrationManager . java b / src / java / org / apache / cassandra / service / MigrationManager . java 
 index 3539602 . . bebfa43 100644 
 - - - a / src / java / org / apache / cassandra / service / MigrationManager . java 
 + + + b / src / java / org / apache / cassandra / service / MigrationManager . java 
 @ @ - 395 , 7 + 395 , 7 @ @ public class MigrationManager 
 } 
 } ) ; 
 
 - for ( InetAddress endpoint : Gossiper . instance . getLiveEndpoints ( ) ) 
 + for ( InetAddress endpoint : Gossiper . instance . getLiveMembers ( ) ) 
 { 
 / / only push schema to nodes with known and equal versions 
 if ( ! endpoint . equals ( FBUtilities . getBroadcastAddress ( ) ) & & 
 @ @ - 439 , 7 + 439 , 7 @ @ public class MigrationManager 
 
 Schema . instance . clear ( ) ; 
 
 - Set < InetAddress > liveEndpoints = Gossiper . instance . getLiveEndpoints ( ) ; 
 + Set < InetAddress > liveEndpoints = Gossiper . instance . getLiveMembers ( ) ; 
 liveEndpoints . remove ( FBUtilities . getBroadcastAddress ( ) ) ; 
 
 / / force migration if there are nodes around 
 diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java 
 index 0e90ea6 . . fedcf3a 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageProxy . java 
 + + + b / src / java / org / apache / cassandra / service / StorageProxy . java 
 @ @ - 1863 , 7 + 1863 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 { 
 final String myVersion = Schema . instance . getVersion ( ) . toString ( ) ; 
 final Map < InetAddress , UUID > versions = new ConcurrentHashMap < InetAddress , UUID > ( ) ; 
 - final Set < InetAddress > liveHosts = Gossiper . instance . getLiveEndpoints ( ) ; 
 + final Set < InetAddress > liveHosts = Gossiper . instance . getLiveMembers ( ) ; 
 final CountDownLatch latch = new CountDownLatch ( liveHosts . size ( ) ) ; 
 
 IAsyncCallback < UUID > cb = new IAsyncCallback < UUID > ( ) 
 @ @ - 1897 , 7 + 1897 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 
 / / maps versions to hosts that are on that version . 
 Map < String , List < String > > results = new HashMap < String , List < String > > ( ) ; 
 - Iterable < InetAddress > allHosts = Iterables . concat ( Gossiper . instance . getLiveEndpoints ( ) , Gossiper . instance . getUnreachableMembers ( ) ) ; 
 + Iterable < InetAddress > allHosts = Iterables . concat ( Gossiper . instance . getLiveMembers ( ) , Gossiper . instance . getUnreachableMembers ( ) ) ; 
 for ( InetAddress host : allHosts ) 
 { 
 UUID version = versions . get ( host ) ; 
 @ @ - 2125 , 11 + 2125 , 11 @ @ public class StorageProxy implements StorageProxyMBean 
 / / Since the truncate operation is so aggressive and is typically only 
 / / invoked by an admin , for simplicity we require that all nodes are up 
 / / to perform the operation . 
 - int liveMembers = Gossiper . instance . getLiveEndpoints ( ) . size ( ) ; 
 + int liveMembers = Gossiper . instance . getLiveMembers ( ) . size ( ) ; 
 throw new UnavailableException ( ConsistencyLevel . ALL , liveMembers + Gossiper . instance . getUnreachableMembers ( ) . size ( ) , liveMembers ) ; 
 } 
 
 - Set < InetAddress > allEndpoints = StorageService . instance . getLiveMembers ( true ) ; 
 + Set < InetAddress > allEndpoints = StorageService . instance . getLiveRingMembers ( true ) ; 
 
 int blockFor = allEndpoints . size ( ) ; 
 final TruncateResponseHandler responseHandler = new TruncateResponseHandler ( blockFor ) ; 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 5503123 . . 0d9e9ef 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 572 , 7 + 572 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 while ( true ) 
 { 
 Uninterruptibles . sleepUninterruptibly ( 1 , TimeUnit . SECONDS ) ; 
 - for ( InetAddress address : Gossiper . instance . getLiveEndpoints ( ) ) 
 + for ( InetAddress address : Gossiper . instance . getLiveMembers ( ) ) 
 { 
 if ( ! Gossiper . instance . isFatClient ( address ) ) 
 break outer ; 
 @ @ - 2301 , 18 + 2301 , 18 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 
 public List < String > getLiveNodes ( ) 
 { 
 - return stringify ( Gossiper . instance . getLiveEndpoints ( ) ) ; 
 + return stringify ( Gossiper . instance . getLiveMembers ( ) ) ; 
 } 
 
 - public Set < InetAddress > getLiveMembers ( ) 
 + public Set < InetAddress > getLiveRingMembers ( ) 
 { 
 - return getLiveMembers ( false ) ; 
 + return getLiveRingMembers ( false ) ; 
 } 
 
 - public Set < InetAddress > getLiveMembers ( boolean excludeDeadStates ) 
 + public Set < InetAddress > getLiveRingMembers ( boolean excludeDeadStates ) 
 { 
 Set < InetAddress > ret = new HashSet < > ( ) ; 
 - for ( InetAddress ep : Gossiper . instance . getLiveEndpoints ( ) ) 
 + for ( InetAddress ep : Gossiper . instance . getLiveMembers ( ) ) 
 { 
 if ( excludeDeadStates ) 
 { 
 @ @ - 3768 , 7 + 3768 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 if ( endpoint . equals ( myAddress ) ) 
 throw new UnsupportedOperationException ( " Cannot remove self " ) ; 
 
 - if ( Gossiper . instance . getLiveEndpoints ( ) . contains ( endpoint ) ) 
 + if ( Gossiper . instance . getLiveMembers ( ) . contains ( endpoint ) ) 
 throw new UnsupportedOperationException ( " Node " + endpoint + " is alive and owns this ID . Use decommission command to remove it from the ring " ) ; 
 
 / / A leaving endpoint that is dead is already being removed .

NEAREST DIFF:
diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml 
 index ca5495d . . 5f43843 100644 
 - - - a / conf / cassandra . yaml 
 + + + b / conf / cassandra . yaml 
 @ @ - 33 , 8 + 33 , 7 @ @ auto _ bootstrap : false 
 hinted _ handoff _ enabled : true 
 # this defines the maximum amount of time a dead host will have hints 
 # generated . After it has been dead this long , hints will be dropped . 
 - # Maximum is approximately 50 days 
 - max _ hint _ window _ in _ ms : 2147483647 
 + max _ hint _ window _ in _ ms : 3600000 # one hour 
 
 # authentication backend , implementing IAuthenticator ; used to identify users 
 authenticator : org . apache . cassandra . auth . AllowAllAuthenticator
