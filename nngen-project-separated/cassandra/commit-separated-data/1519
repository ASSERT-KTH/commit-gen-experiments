BLEU SCORE: 0.062183610425584915

TEST MSG: Delete lib / super - csv - 2 . 1 . 0 . jar ( follow up to CASSANDRA - 9035 )
GENERATED MSG: add jamm - 0 . 2 . 5 . jar

TEST DIFF (one line): diff - - git a / lib / super - csv - 2 . 1 . 0 . jar b / lib / super - csv - 2 . 1 . 0 . jar <nl> deleted file mode 100644 <nl> index 6a85716 . . 0000000 <nl> Binary files a / lib / super - csv - 2 . 1 . 0 . jar and / dev / null differ
NEAREST DIFF (one line): diff - - git a / lib / jamm - 0 . 2 . 5 . jar b / lib / jamm - 0 . 2 . 5 . jar <nl> new file mode 100644 <nl> index 0000000 . . ef8750d <nl> Binary files / dev / null and b / lib / jamm - 0 . 2 . 5 . jar differ <nl> diff - - git a / src / java / org / apache / cassandra / db / Table . java b / src / java / org / apache / cassandra / db / Table . java <nl> index 45aafcc . . 0716d2d 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Table . java <nl> + + + b / src / java / org / apache / cassandra / db / Table . java <nl> @ @ - 396 , 7 + 396 , 6 @ @ public class Table <nl> * / <nl> public void apply ( RowMutation mutation , boolean writeCommitLog ) throws IOException <nl> { <nl> - List < Memtable > memtablesToFlush = Collections . emptyList ( ) ; <nl> if ( logger . isDebugEnabled ( ) ) <nl> logger . debug ( " applying mutation of row { } " , ByteBufferUtil . bytesToHex ( mutation . key ( ) ) ) ; <nl> <nl> @ @ - 465 , 10 + 464 , 6 @ @ public class Table <nl> switchLock . readLock ( ) . unlock ( ) ; <nl> } <nl> <nl> - / / flush memtables that got filled up outside the readlock ( maybeSwitchMemtable acquires writeLock ) . <nl> - / / usually mTF will be empty and this will be a no - op . <nl> - for ( Memtable memtable : memtablesToFlush ) <nl> - memtable . cfs . maybeSwitchMemtable ( memtable , writeCommitLog ) ; <nl> } <nl> <nl> private static void ignoreObsoleteMutations ( ColumnFamily cf , SortedSet < ByteBuffer > mutatedIndexedColumns , ColumnFamily oldIndexedColumns )

TEST DIFF:
diff - - git a / lib / super - csv - 2 . 1 . 0 . jar b / lib / super - csv - 2 . 1 . 0 . jar 
 deleted file mode 100644 
 index 6a85716 . . 0000000 
 Binary files a / lib / super - csv - 2 . 1 . 0 . jar and / dev / null differ

NEAREST DIFF:
diff - - git a / lib / jamm - 0 . 2 . 5 . jar b / lib / jamm - 0 . 2 . 5 . jar 
 new file mode 100644 
 index 0000000 . . ef8750d 
 Binary files / dev / null and b / lib / jamm - 0 . 2 . 5 . jar differ 
 diff - - git a / src / java / org / apache / cassandra / db / Table . java b / src / java / org / apache / cassandra / db / Table . java 
 index 45aafcc . . 0716d2d 100644 
 - - - a / src / java / org / apache / cassandra / db / Table . java 
 + + + b / src / java / org / apache / cassandra / db / Table . java 
 @ @ - 396 , 7 + 396 , 6 @ @ public class Table 
 * / 
 public void apply ( RowMutation mutation , boolean writeCommitLog ) throws IOException 
 { 
 - List < Memtable > memtablesToFlush = Collections . emptyList ( ) ; 
 if ( logger . isDebugEnabled ( ) ) 
 logger . debug ( " applying mutation of row { } " , ByteBufferUtil . bytesToHex ( mutation . key ( ) ) ) ; 
 
 @ @ - 465 , 10 + 464 , 6 @ @ public class Table 
 switchLock . readLock ( ) . unlock ( ) ; 
 } 
 
 - / / flush memtables that got filled up outside the readlock ( maybeSwitchMemtable acquires writeLock ) . 
 - / / usually mTF will be empty and this will be a no - op . 
 - for ( Memtable memtable : memtablesToFlush ) 
 - memtable . cfs . maybeSwitchMemtable ( memtable , writeCommitLog ) ; 
 } 
 
 private static void ignoreObsoleteMutations ( ColumnFamily cf , SortedSet < ByteBuffer > mutatedIndexedColumns , ColumnFamily oldIndexedColumns )
