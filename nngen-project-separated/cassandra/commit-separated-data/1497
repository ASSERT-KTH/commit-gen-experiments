BLEU SCORE: 0.034353182138500235

TEST MSG: Fix TTL unit test and dtests
GENERATED MSG: Handle queries on multiple secondary index types

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / rows / TombstoneFilteringRow . java b / src / java / org / apache / cassandra / db / rows / TombstoneFilteringRow . java <nl> index a1c0ddc . . a6167ea 100644 <nl> - - - a / src / java / org / apache / cassandra / db / rows / TombstoneFilteringRow . java <nl> + + + b / src / java / org / apache / cassandra / db / rows / TombstoneFilteringRow . java <nl> @ @ - 30 , 6 + 30 , 12 @ @ public class TombstoneFilteringRow extends FilteringRow <nl> } <nl> <nl> @ Override <nl> + protected boolean include ( LivenessInfo info ) <nl> + { <nl> + return info . isLive ( nowInSec ) ; <nl> + } <nl> + <nl> + @ Override <nl> protected boolean include ( DeletionTime dt ) <nl> { <nl> return false ; <nl> diff - - git a / src / java / org / apache / cassandra / service / DataResolver . java b / src / java / org / apache / cassandra / service / DataResolver . java <nl> index b2d1954 . . f164a60 100644 <nl> - - - a / src / java / org / apache / cassandra / service / DataResolver . java <nl> + + + b / src / java / org / apache / cassandra / service / DataResolver . java <nl> @ @ - 123 , 9 + 123 , 17 @ @ public class DataResolver extends ResponseResolver <nl> <nl> private boolean isReversed ( List < UnfilteredRowIterator > versions ) <nl> { <nl> - assert ! versions . isEmpty ( ) ; <nl> - / / Everything will be in the same order <nl> - return versions . get ( 0 ) . isReverseOrder ( ) ; <nl> + for ( UnfilteredRowIterator iter : versions ) <nl> + { <nl> + if ( iter = = null ) <nl> + continue ; <nl> + <nl> + / / Everything will be in the same order <nl> + return iter . isReverseOrder ( ) ; <nl> + } <nl> + <nl> + assert false : " Expected at least one iterator " ; <nl> + return false ; <nl> } <nl> <nl> public void close ( ) <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / InsertUpdateIfConditionTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / InsertUpdateIfConditionTest . java <nl> index 522495c . . 055c9d9 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / InsertUpdateIfConditionTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / InsertUpdateIfConditionTest . java <nl> @ @ - 166 , 6 + 166 , 13 @ @ public class InsertUpdateIfConditionTest extends CQLTester <nl> assertRows ( execute ( " DELETE v1 FROM % s WHERE k = 3 IF EXISTS " ) , row ( true ) ) ; <nl> assertRows ( execute ( " DELETE FROM % s WHERE k = 3 IF EXISTS " ) , row ( true ) ) ; <nl> <nl> + execute ( " INSERT INTO % s ( k , v1 ) VALUES ( 4 , 2 ) " ) ; <nl> + execute ( " UPDATE % s USING TTL 1 SET v1 = 2 WHERE k = 4 " ) ; <nl> + Thread . sleep ( 1001 ) ; <nl> + assertRows ( execute ( " SELECT * FROM % s WHERE k = 4 " ) , row ( 4 , null ) ) ; <nl> + assertRows ( execute ( " DELETE FROM % s WHERE k = 4 IF EXISTS " ) , row ( true ) ) ; <nl> + assertEmpty ( execute ( " SELECT * FROM % s WHERE k = 4 " ) ) ; <nl> + <nl> / / static columns <nl> createTable ( " CREATE TABLE % s ( k text , s text static , i int , v text , PRIMARY KEY ( k , i ) ) " ) ; <nl>
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / rows / TombstoneFilteringRow . java b / src / java / org / apache / cassandra / db / rows / TombstoneFilteringRow . java 
 index a1c0ddc . . a6167ea 100644 
 - - - a / src / java / org / apache / cassandra / db / rows / TombstoneFilteringRow . java 
 + + + b / src / java / org / apache / cassandra / db / rows / TombstoneFilteringRow . java 
 @ @ - 30 , 6 + 30 , 12 @ @ public class TombstoneFilteringRow extends FilteringRow 
 } 
 
 @ Override 
 + protected boolean include ( LivenessInfo info ) 
 + { 
 + return info . isLive ( nowInSec ) ; 
 + } 
 + 
 + @ Override 
 protected boolean include ( DeletionTime dt ) 
 { 
 return false ; 
 diff - - git a / src / java / org / apache / cassandra / service / DataResolver . java b / src / java / org / apache / cassandra / service / DataResolver . java 
 index b2d1954 . . f164a60 100644 
 - - - a / src / java / org / apache / cassandra / service / DataResolver . java 
 + + + b / src / java / org / apache / cassandra / service / DataResolver . java 
 @ @ - 123 , 9 + 123 , 17 @ @ public class DataResolver extends ResponseResolver 
 
 private boolean isReversed ( List < UnfilteredRowIterator > versions ) 
 { 
 - assert ! versions . isEmpty ( ) ; 
 - / / Everything will be in the same order 
 - return versions . get ( 0 ) . isReverseOrder ( ) ; 
 + for ( UnfilteredRowIterator iter : versions ) 
 + { 
 + if ( iter = = null ) 
 + continue ; 
 + 
 + / / Everything will be in the same order 
 + return iter . isReverseOrder ( ) ; 
 + } 
 + 
 + assert false : " Expected at least one iterator " ; 
 + return false ; 
 } 
 
 public void close ( ) 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / InsertUpdateIfConditionTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / InsertUpdateIfConditionTest . java 
 index 522495c . . 055c9d9 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / InsertUpdateIfConditionTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / InsertUpdateIfConditionTest . java 
 @ @ - 166 , 6 + 166 , 13 @ @ public class InsertUpdateIfConditionTest extends CQLTester 
 assertRows ( execute ( " DELETE v1 FROM % s WHERE k = 3 IF EXISTS " ) , row ( true ) ) ; 
 assertRows ( execute ( " DELETE FROM % s WHERE k = 3 IF EXISTS " ) , row ( true ) ) ; 
 
 + execute ( " INSERT INTO % s ( k , v1 ) VALUES ( 4 , 2 ) " ) ; 
 + execute ( " UPDATE % s USING TTL 1 SET v1 = 2 WHERE k = 4 " ) ; 
 + Thread . sleep ( 1001 ) ; 
 + assertRows ( execute ( " SELECT * FROM % s WHERE k = 4 " ) , row ( 4 , null ) ) ; 
 + assertRows ( execute ( " DELETE FROM % s WHERE k = 4 IF EXISTS " ) , row ( true ) ) ; 
 + assertEmpty ( execute ( " SELECT * FROM % s WHERE k = 4 " ) ) ; 
 + 
 / / static columns 
 createTable ( " CREATE TABLE % s ( k text , s text static , i int , v text , PRIMARY KEY ( k , i ) ) " ) ; 


NEAREST DIFF:
ELIMINATEDSENTENCE
