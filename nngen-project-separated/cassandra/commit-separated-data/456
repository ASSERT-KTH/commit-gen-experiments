BLEU SCORE: 0.011827156917279504

TEST MSG: Consider removing Config . index _ interval
GENERATED MSG: ninja - remove ' authority ' from cassandra . yaml ( deprecated in 1 . 2 . 0 )

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b00a141 . . 6cf571a 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 4 . 0 <nl> + * Remove config option index _ interval ( CASSANDRA - 10671 ) <nl> * Reduce lock contention for collection types and serializers ( CASSANDRA - 13271 ) <nl> * Make it possible to override MessagingService . Verb ids ( CASSANDRA - 13283 ) <nl> * Avoid synchronized on prepareForRepair in ActiveRepairService ( CASSANDRA - 9292 ) <nl> diff - - git a / NEWS . txt b / NEWS . txt <nl> index d53d069 . . 027786d7 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 43 , 6 + 43 , 7 @ @ Upgrading <nl> full and incremental repairs . For full repairs , data is no longer marked <nl> repaired . For incremental repairs , anticompaction is run at the beginning <nl> of the repair , instead of at the end . <nl> + - Config option index _ interval has been removed ( it was deprecated since 2 . 0 ) <nl> <nl> 3 . 11 . 0 <nl> = = = = = = <nl> diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java <nl> index dbad65e . . 36ce576 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Config . java <nl> + + + b / src / java / org / apache / cassandra / config / Config . java <nl> @ @ - 217 , 9 + 217 , 6 @ @ public class Config <nl> <nl> public InternodeCompression internode _ compression = InternodeCompression . none ; <nl> <nl> - @ Deprecated <nl> - public Integer index _ interval = null ; <nl> - <nl> public int hinted _ handoff _ throttle _ in _ kb = 1024 ; <nl> public int batchlog _ replay _ throttle _ in _ kb = 1024 ; <nl> public int max _ hints _ delivery _ threads = 2 ; <nl> diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index e5d59fc . . 4fb742c 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 622 , 9 + 622 , 6 @ @ public class DatabaseDescriptor <nl> throw new ConfigurationException ( " index _ summary _ capacity _ in _ mb option was set incorrectly to ' " <nl> + conf . index _ summary _ capacity _ in _ mb + " ' , it should be a non - negative integer . " , false ) ; <nl> <nl> - if ( conf . index _ interval ! = null ) <nl> - logger . warn ( " index _ interval has been deprecated and should be removed from cassandra . yaml " ) ; <nl> - <nl> if ( conf . encryption _ options ! = null ) <nl> { <nl> logger . warn ( " Please rename encryption _ options as server _ encryption _ options in the yaml " ) ;
NEAREST DIFF (one line): diff - - git a / pylib / cqlshlib / test / test _ cqlsh _ output . py b / pylib / cqlshlib / test / test _ cqlsh _ output . py <nl> index dbce527 . . 8127adf 100644 <nl> - - - a / pylib / cqlshlib / test / test _ cqlsh _ output . py <nl> + + + b / pylib / cqlshlib / test / test _ cqlsh _ output . py <nl> @ @ - 275 , 7 + 275 , 7 @ @ class TestCqlshOutput ( BaseTestCase ) : <nl> <nl> def test _ static _ cf _ output ( self ) : <nl> self . assertCqlverQueriesGiveColoredOutput ( ( <nl> - ( ' select a , b from twenty _ rows _ table where a in ( 1 , 13 , 2 ) ; ' , " " " <nl> + ( " select a , b from twenty _ rows _ table where a in ( ' 1 ' , ' 13 ' , ' 2 ' ) ; " , " " " <nl> a | b <nl> MM MM <nl> - - - - + - - - - <nl> @ @ - 336 , 7 + 336 , 7 @ @ class TestCqlshOutput ( BaseTestCase ) : <nl> ) , cqlver = 3 ) <nl> <nl> def test _ columnless _ key _ output ( self ) : <nl> - q = ' select a from twenty _ rows _ table where a in ( 1 , 2 , - 9192 ) ; ' <nl> + q = " select a from twenty _ rows _ table where a in ( ' 1 ' , ' 2 ' , ' - 9192 ' ) ; " <nl> self . assertQueriesGiveColoredOutput ( ( <nl> ( q , " " " <nl> a <nl> @ @ - 580 , 16 + 580 , 16 @ @ class TestCqlshOutput ( BaseTestCase ) : <nl> ( " select num , blobcol from has _ all _ types where num in ( 0 , 1 , 2 , 3 ) ; " , r " " " <nl> num | blobcol <nl> MMM MMMMMMM <nl> - - - - - - + - - - - - - - - - - - - - - - - - - - - <nl> + - - - - - + - - - - - - - - - - - - - - - - - - - - - - <nl> <nl> - 0 | 000102030405fffefd <nl> - G mmmmmmmmmmmmmmmmmm <nl> - 1 | ffffffffffffffffff <nl> - G mmmmmmmmmmmmmmmmmm <nl> - 2 | <nl> - G mmmmmmmmmmmmmmmmmm <nl> - 3 | 80 <nl> - G mmmmmmmmmmmmmmmmmm <nl> + 0 | 0x000102030405fffefd <nl> + G mmmmmmmmmmmmmmmmmmmm <nl> + 1 | 0xffffffffffffffffff <nl> + G mmmmmmmmmmmmmmmmmmmm <nl> + 2 | 0x <nl> + G mmmmmmmmmmmmmmmmmmmm <nl> + 3 | 0x80 <nl> + G mmmmmmmmmmmmmmmmmmmm <nl> <nl> " " " ) , <nl> ) , cqlver = ( 2 , 3 ) ) <nl> @ @ - 749 , 7 + 749 , 7 @ @ class TestCqlshOutput ( BaseTestCase ) : <nl> max _ compaction _ threshold = 32 AND <nl> replicate _ on _ write = ' true ' AND <nl> compaction _ strategy _ class = ' SizeTieredCompactionStrategy ' AND <nl> - compression _ parameters : sstable _ compression = ' SnappyCompressor ' ; <nl> + compression _ parameters : sstable _ compression = ' LZ4Compressor ' ; <nl> <nl> " " " ) <nl> <nl> @ @ - 779 , 8 + 779 , 9 @ @ class TestCqlshOutput ( BaseTestCase ) : <nl> gc _ grace _ seconds = 864000 AND <nl> read _ repair _ chance = 0 . 100000 AND <nl> replicate _ on _ write = ' true ' AND <nl> + populate _ io _ cache _ on _ flush = ' false ' AND <nl> compaction = { ' class ' : ' SizeTieredCompactionStrategy ' } AND <nl> - compression = { ' sstable _ compression ' : ' SnappyCompressor ' } ; <nl> + compression = { ' sstable _ compression ' : ' LZ4Compressor ' } ; <nl> <nl> " " " ) <nl> <nl> diff - - git a / pylib / cqlshlib / test / test _ keyspace _ init2 . cql b / pylib / cqlshlib / test / test _ keyspace _ init2 . cql <nl> index 415becc . . ca5f4a4 100644 <nl> - - - a / pylib / cqlshlib / test / test _ keyspace _ init2 . cql <nl> + + + b / pylib / cqlshlib / test / test _ keyspace _ init2 . cql <nl> @ @ - 13 , 7 + 13 , 7 @ @ CREATE TABLE has _ all _ types ( <nl> uuidcol uuid , <nl> varcharcol varchar , <nl> varintcol varint <nl> - ) ; <nl> + ) WITH compression _ parameters : sstable _ compression = ' LZ4Compressor ' ; <nl> <nl> INSERT INTO has _ all _ types ( num , intcol , asciicol , bigintcol , blobcol , booleancol , <nl> decimalcol , doublecol , floatcol , textcol , <nl> diff - - git a / pylib / cqlshlib / test / test _ keyspace _ init3 . cql b / pylib / cqlshlib / test / test _ keyspace _ init3 . cql <nl> index 8c5e4be . . b801c55 100644 <nl> - - - a / pylib / cqlshlib / test / test _ keyspace _ init3 . cql <nl> + + + b / pylib / cqlshlib / test / test _ keyspace _ init3 . cql <nl> @ @ - 14 , 23 + 14 , 23 @ @ CREATE TABLE twenty _ rows _ composite _ table ( <nl> <nl> - - all in the same storage engine row : <nl> <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 1 , 1 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 2 , 2 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 3 , 3 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 4 , 4 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 5 , 5 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 6 , 6 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 7 , 7 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 8 , 8 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 9 , 9 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 10 , 10 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 11 , 11 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 12 , 12 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 13 , 13 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 14 , 14 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 15 , 15 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 16 , 16 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 17 , 17 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 18 , 18 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 19 , 19 ) ; <nl> - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 20 , 20 ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 1 ' , ' 1 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 2 ' , ' 2 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 3 ' , ' 3 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 4 ' , ' 4 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 5 ' , ' 5 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 6 ' , ' 6 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 7 ' , ' 7 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 8 ' , ' 8 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 9 ' , ' 9 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 10 ' , ' 10 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 11 ' , ' 11 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 12 ' , ' 12 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 13 ' , ' 13 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 14 ' , ' 14 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 15 ' , ' 15 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 16 ' , ' 16 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 17 ' , ' 17 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 18 ' , ' 18 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 19 ' , ' 19 ' ) ; <nl> + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 20 ' , ' 20 ' ) ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b00a141 . . 6cf571a 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 4 . 0 
 + * Remove config option index _ interval ( CASSANDRA - 10671 ) 
 * Reduce lock contention for collection types and serializers ( CASSANDRA - 13271 ) 
 * Make it possible to override MessagingService . Verb ids ( CASSANDRA - 13283 ) 
 * Avoid synchronized on prepareForRepair in ActiveRepairService ( CASSANDRA - 9292 ) 
 diff - - git a / NEWS . txt b / NEWS . txt 
 index d53d069 . . 027786d7 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 43 , 6 + 43 , 7 @ @ Upgrading 
 full and incremental repairs . For full repairs , data is no longer marked 
 repaired . For incremental repairs , anticompaction is run at the beginning 
 of the repair , instead of at the end . 
 + - Config option index _ interval has been removed ( it was deprecated since 2 . 0 ) 
 
 3 . 11 . 0 
 = = = = = = 
 diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java 
 index dbad65e . . 36ce576 100644 
 - - - a / src / java / org / apache / cassandra / config / Config . java 
 + + + b / src / java / org / apache / cassandra / config / Config . java 
 @ @ - 217 , 9 + 217 , 6 @ @ public class Config 
 
 public InternodeCompression internode _ compression = InternodeCompression . none ; 
 
 - @ Deprecated 
 - public Integer index _ interval = null ; 
 - 
 public int hinted _ handoff _ throttle _ in _ kb = 1024 ; 
 public int batchlog _ replay _ throttle _ in _ kb = 1024 ; 
 public int max _ hints _ delivery _ threads = 2 ; 
 diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index e5d59fc . . 4fb742c 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 622 , 9 + 622 , 6 @ @ public class DatabaseDescriptor 
 throw new ConfigurationException ( " index _ summary _ capacity _ in _ mb option was set incorrectly to ' " 
 + conf . index _ summary _ capacity _ in _ mb + " ' , it should be a non - negative integer . " , false ) ; 
 
 - if ( conf . index _ interval ! = null ) 
 - logger . warn ( " index _ interval has been deprecated and should be removed from cassandra . yaml " ) ; 
 - 
 if ( conf . encryption _ options ! = null ) 
 { 
 logger . warn ( " Please rename encryption _ options as server _ encryption _ options in the yaml " ) ;

NEAREST DIFF:
diff - - git a / pylib / cqlshlib / test / test _ cqlsh _ output . py b / pylib / cqlshlib / test / test _ cqlsh _ output . py 
 index dbce527 . . 8127adf 100644 
 - - - a / pylib / cqlshlib / test / test _ cqlsh _ output . py 
 + + + b / pylib / cqlshlib / test / test _ cqlsh _ output . py 
 @ @ - 275 , 7 + 275 , 7 @ @ class TestCqlshOutput ( BaseTestCase ) : 
 
 def test _ static _ cf _ output ( self ) : 
 self . assertCqlverQueriesGiveColoredOutput ( ( 
 - ( ' select a , b from twenty _ rows _ table where a in ( 1 , 13 , 2 ) ; ' , " " " 
 + ( " select a , b from twenty _ rows _ table where a in ( ' 1 ' , ' 13 ' , ' 2 ' ) ; " , " " " 
 a | b 
 MM MM 
 - - - - + - - - - 
 @ @ - 336 , 7 + 336 , 7 @ @ class TestCqlshOutput ( BaseTestCase ) : 
 ) , cqlver = 3 ) 
 
 def test _ columnless _ key _ output ( self ) : 
 - q = ' select a from twenty _ rows _ table where a in ( 1 , 2 , - 9192 ) ; ' 
 + q = " select a from twenty _ rows _ table where a in ( ' 1 ' , ' 2 ' , ' - 9192 ' ) ; " 
 self . assertQueriesGiveColoredOutput ( ( 
 ( q , " " " 
 a 
 @ @ - 580 , 16 + 580 , 16 @ @ class TestCqlshOutput ( BaseTestCase ) : 
 ( " select num , blobcol from has _ all _ types where num in ( 0 , 1 , 2 , 3 ) ; " , r " " " 
 num | blobcol 
 MMM MMMMMMM 
 - - - - - - + - - - - - - - - - - - - - - - - - - - - 
 + - - - - - + - - - - - - - - - - - - - - - - - - - - - - 
 
 - 0 | 000102030405fffefd 
 - G mmmmmmmmmmmmmmmmmm 
 - 1 | ffffffffffffffffff 
 - G mmmmmmmmmmmmmmmmmm 
 - 2 | 
 - G mmmmmmmmmmmmmmmmmm 
 - 3 | 80 
 - G mmmmmmmmmmmmmmmmmm 
 + 0 | 0x000102030405fffefd 
 + G mmmmmmmmmmmmmmmmmmmm 
 + 1 | 0xffffffffffffffffff 
 + G mmmmmmmmmmmmmmmmmmmm 
 + 2 | 0x 
 + G mmmmmmmmmmmmmmmmmmmm 
 + 3 | 0x80 
 + G mmmmmmmmmmmmmmmmmmmm 
 
 " " " ) , 
 ) , cqlver = ( 2 , 3 ) ) 
 @ @ - 749 , 7 + 749 , 7 @ @ class TestCqlshOutput ( BaseTestCase ) : 
 max _ compaction _ threshold = 32 AND 
 replicate _ on _ write = ' true ' AND 
 compaction _ strategy _ class = ' SizeTieredCompactionStrategy ' AND 
 - compression _ parameters : sstable _ compression = ' SnappyCompressor ' ; 
 + compression _ parameters : sstable _ compression = ' LZ4Compressor ' ; 
 
 " " " ) 
 
 @ @ - 779 , 8 + 779 , 9 @ @ class TestCqlshOutput ( BaseTestCase ) : 
 gc _ grace _ seconds = 864000 AND 
 read _ repair _ chance = 0 . 100000 AND 
 replicate _ on _ write = ' true ' AND 
 + populate _ io _ cache _ on _ flush = ' false ' AND 
 compaction = { ' class ' : ' SizeTieredCompactionStrategy ' } AND 
 - compression = { ' sstable _ compression ' : ' SnappyCompressor ' } ; 
 + compression = { ' sstable _ compression ' : ' LZ4Compressor ' } ; 
 
 " " " ) 
 
 diff - - git a / pylib / cqlshlib / test / test _ keyspace _ init2 . cql b / pylib / cqlshlib / test / test _ keyspace _ init2 . cql 
 index 415becc . . ca5f4a4 100644 
 - - - a / pylib / cqlshlib / test / test _ keyspace _ init2 . cql 
 + + + b / pylib / cqlshlib / test / test _ keyspace _ init2 . cql 
 @ @ - 13 , 7 + 13 , 7 @ @ CREATE TABLE has _ all _ types ( 
 uuidcol uuid , 
 varcharcol varchar , 
 varintcol varint 
 - ) ; 
 + ) WITH compression _ parameters : sstable _ compression = ' LZ4Compressor ' ; 
 
 INSERT INTO has _ all _ types ( num , intcol , asciicol , bigintcol , blobcol , booleancol , 
 decimalcol , doublecol , floatcol , textcol , 
 diff - - git a / pylib / cqlshlib / test / test _ keyspace _ init3 . cql b / pylib / cqlshlib / test / test _ keyspace _ init3 . cql 
 index 8c5e4be . . b801c55 100644 
 - - - a / pylib / cqlshlib / test / test _ keyspace _ init3 . cql 
 + + + b / pylib / cqlshlib / test / test _ keyspace _ init3 . cql 
 @ @ - 14 , 23 + 14 , 23 @ @ CREATE TABLE twenty _ rows _ composite _ table ( 
 
 - - all in the same storage engine row : 
 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 1 , 1 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 2 , 2 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 3 , 3 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 4 , 4 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 5 , 5 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 6 , 6 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 7 , 7 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 8 , 8 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 9 , 9 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 10 , 10 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 11 , 11 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 12 , 12 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 13 , 13 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 14 , 14 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 15 , 15 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 16 , 16 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 17 , 17 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 18 , 18 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 19 , 19 ) ; 
 - INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , 20 , 20 ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 1 ' , ' 1 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 2 ' , ' 2 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 3 ' , ' 3 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 4 ' , ' 4 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 5 ' , ' 5 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 6 ' , ' 6 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 7 ' , ' 7 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 8 ' , ' 8 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 9 ' , ' 9 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 10 ' , ' 10 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 11 ' , ' 11 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 12 ' , ' 12 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 13 ' , ' 13 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 14 ' , ' 14 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 15 ' , ' 15 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 16 ' , ' 16 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 17 ' , ' 17 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 18 ' , ' 18 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 19 ' , ' 19 ' ) ; 
 + INSERT INTO twenty _ rows _ composite _ table ( a , b , c ) VALUES ( ' A ' , ' 20 ' , ' 20 ' ) ;
