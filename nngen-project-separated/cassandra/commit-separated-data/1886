BLEU SCORE: 0.010738456044579523

TEST MSG: rpc _ interface and listen _ interface generate NPE on startup when specified interface doesn ' t exist
GENERATED MSG: more informative error messages for configuration problems

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index db33dcc . . 1dd1688 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 158 , 6 + 158 , 27 @ @ public class DatabaseDescriptor <nl> return loader . loadConfig ( ) ; <nl> } <nl> <nl> + private static InetAddress getNetworkInterfaceAddress ( String intf , String configName ) throws ConfigurationException <nl> + { <nl> + try <nl> + { <nl> + NetworkInterface ni = NetworkInterface . getByName ( intf ) ; <nl> + if ( ni = = null ) <nl> + throw new ConfigurationException ( " Configured " + configName + " \ " " + intf + " \ " could not be found " ) ; <nl> + Enumeration < InetAddress > addrs = ni . getInetAddresses ( ) ; <nl> + if ( ! addrs . hasMoreElements ( ) ) <nl> + throw new ConfigurationException ( " Configured " + configName + " \ " " + intf + " \ " was found , but had no addresses " ) ; <nl> + InetAddress retval = listenAddress = addrs . nextElement ( ) ; <nl> + if ( addrs . hasMoreElements ( ) ) <nl> + throw new ConfigurationException ( " Configured " + configName + " \ " " + intf + " \ " can ' t have more than one address " ) ; <nl> + return retval ; <nl> + } <nl> + catch ( SocketException e ) <nl> + { <nl> + throw new ConfigurationException ( " Configured " + configName + " \ " " + intf + " \ " caused an exception " , e ) ; <nl> + } <nl> + } <nl> + <nl> private static void applyConfig ( Config config ) throws ConfigurationException <nl> { <nl> conf = config ; <nl> @ @ - 326 , 18 + 347 , 7 @ @ public class DatabaseDescriptor <nl> } <nl> else if ( conf . listen _ interface ! = null ) <nl> { <nl> - try <nl> - { <nl> - Enumeration < InetAddress > addrs = NetworkInterface . getByName ( conf . listen _ interface ) . getInetAddresses ( ) ; <nl> - listenAddress = addrs . nextElement ( ) ; <nl> - if ( addrs . hasMoreElements ( ) ) <nl> - throw new ConfigurationException ( " Interface " + conf . listen _ interface + " can ' t have more than one address " ) ; <nl> - } <nl> - catch ( SocketException e ) <nl> - { <nl> - throw new ConfigurationException ( " Unknown network interface in listen _ interface " + conf . listen _ interface ) ; <nl> - } <nl> - <nl> + listenAddress = getNetworkInterfaceAddress ( conf . listen _ interface , " listen _ interface " ) ; <nl> } <nl> <nl> / * Gossip Address to broadcast * / <nl> @ @ - 374 , 17 + 384 , 7 @ @ public class DatabaseDescriptor <nl> } <nl> else if ( conf . rpc _ interface ! = null ) <nl> { <nl> - try <nl> - { <nl> - Enumeration < InetAddress > addrs = NetworkInterface . getByName ( conf . rpc _ interface ) . getInetAddresses ( ) ; <nl> - rpcAddress = addrs . nextElement ( ) ; <nl> - if ( addrs . hasMoreElements ( ) ) <nl> - throw new ConfigurationException ( " Interface " + conf . rpc _ interface + " can ' t have more than one address " ) ; <nl> - } <nl> - catch ( SocketException e ) <nl> - { <nl> - throw new ConfigurationException ( " Unknown network interface in rpc _ interface " + conf . rpc _ interface ) ; <nl> - } <nl> + listenAddress = getNetworkInterfaceAddress ( conf . rpc _ interface , " rpc _ interface " ) ; <nl> } <nl> else <nl> {
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 608fd4d . . 8ee0b66 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 48 , 6 + 48 , 7 @ @ <nl> ( CASSANDRA - 2058 ) <nl> * fix math in RandomPartitioner . describeOwnership ( CASSANDRA - 2071 ) <nl> * fix deletion of sstable non - data components ( CASSANDRA - 2059 ) <nl> + * avoid blocking gossip while deleting handoff hints ( CASSANDRA - 2073 ) <nl> <nl> <nl> 0 . 7 . 0 - final <nl> diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> index f4c0084 . . 4ee820d 100644 <nl> - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> @ @ - 144 , 21 + 144 , 31 @ @ public class HintedHandOffManager <nl> rm . apply ( ) ; <nl> } <nl> <nl> - public static void deleteHintsForEndPoint ( InetAddress endpoint ) <nl> + public static void deleteHintsForEndPoint ( final InetAddress endpoint ) <nl> { <nl> - ColumnFamilyStore hintStore = Table . open ( Table . SYSTEM _ TABLE ) . getColumnFamilyStore ( HINTS _ CF ) ; <nl> - RowMutation rm = new RowMutation ( Table . SYSTEM _ TABLE , ByteBuffer . wrap ( endpoint . getAddress ( ) ) ) ; <nl> + final ColumnFamilyStore hintStore = Table . open ( Table . SYSTEM _ TABLE ) . getColumnFamilyStore ( HINTS _ CF ) ; <nl> + final RowMutation rm = new RowMutation ( Table . SYSTEM _ TABLE , ByteBuffer . wrap ( endpoint . getAddress ( ) ) ) ; <nl> rm . delete ( new QueryPath ( HINTS _ CF ) , System . currentTimeMillis ( ) ) ; <nl> - try { <nl> - logger _ . info ( " Deleting any stored hints for " + endpoint ) ; <nl> - rm . apply ( ) ; <nl> - hintStore . forceFlush ( ) ; <nl> - CompactionManager . instance . submitMajor ( hintStore , 0 , Integer . MAX _ VALUE ) . get ( ) ; <nl> - } <nl> - catch ( Exception e ) <nl> + <nl> + / / execute asynchronously to avoid blocking caller ( which may be processing gossip ) <nl> + Runnable runnable = new Runnable ( ) <nl> { <nl> - logger _ . warn ( " Could not delete hints for " + endpoint + " : " + e ) ; <nl> - } <nl> + public void run ( ) <nl> + { <nl> + try <nl> + { <nl> + logger _ . info ( " Deleting any stored hints for " + endpoint ) ; <nl> + rm . apply ( ) ; <nl> + hintStore . forceFlush ( ) ; <nl> + CompactionManager . instance . submitMajor ( hintStore , 0 , Integer . MAX _ VALUE ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + logger _ . warn ( " Could not delete hints for " + endpoint + " : " + e ) ; <nl> + } <nl> + } <nl> + } ; <nl> + StorageService . scheduledTasks . execute ( runnable ) ; <nl> } <nl> <nl> private static boolean pagingFinished ( ColumnFamily hintColumnFamily , ByteBuffer startColumn )

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index db33dcc . . 1dd1688 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 158 , 6 + 158 , 27 @ @ public class DatabaseDescriptor 
 return loader . loadConfig ( ) ; 
 } 
 
 + private static InetAddress getNetworkInterfaceAddress ( String intf , String configName ) throws ConfigurationException 
 + { 
 + try 
 + { 
 + NetworkInterface ni = NetworkInterface . getByName ( intf ) ; 
 + if ( ni = = null ) 
 + throw new ConfigurationException ( " Configured " + configName + " \ " " + intf + " \ " could not be found " ) ; 
 + Enumeration < InetAddress > addrs = ni . getInetAddresses ( ) ; 
 + if ( ! addrs . hasMoreElements ( ) ) 
 + throw new ConfigurationException ( " Configured " + configName + " \ " " + intf + " \ " was found , but had no addresses " ) ; 
 + InetAddress retval = listenAddress = addrs . nextElement ( ) ; 
 + if ( addrs . hasMoreElements ( ) ) 
 + throw new ConfigurationException ( " Configured " + configName + " \ " " + intf + " \ " can ' t have more than one address " ) ; 
 + return retval ; 
 + } 
 + catch ( SocketException e ) 
 + { 
 + throw new ConfigurationException ( " Configured " + configName + " \ " " + intf + " \ " caused an exception " , e ) ; 
 + } 
 + } 
 + 
 private static void applyConfig ( Config config ) throws ConfigurationException 
 { 
 conf = config ; 
 @ @ - 326 , 18 + 347 , 7 @ @ public class DatabaseDescriptor 
 } 
 else if ( conf . listen _ interface ! = null ) 
 { 
 - try 
 - { 
 - Enumeration < InetAddress > addrs = NetworkInterface . getByName ( conf . listen _ interface ) . getInetAddresses ( ) ; 
 - listenAddress = addrs . nextElement ( ) ; 
 - if ( addrs . hasMoreElements ( ) ) 
 - throw new ConfigurationException ( " Interface " + conf . listen _ interface + " can ' t have more than one address " ) ; 
 - } 
 - catch ( SocketException e ) 
 - { 
 - throw new ConfigurationException ( " Unknown network interface in listen _ interface " + conf . listen _ interface ) ; 
 - } 
 - 
 + listenAddress = getNetworkInterfaceAddress ( conf . listen _ interface , " listen _ interface " ) ; 
 } 
 
 / * Gossip Address to broadcast * / 
 @ @ - 374 , 17 + 384 , 7 @ @ public class DatabaseDescriptor 
 } 
 else if ( conf . rpc _ interface ! = null ) 
 { 
 - try 
 - { 
 - Enumeration < InetAddress > addrs = NetworkInterface . getByName ( conf . rpc _ interface ) . getInetAddresses ( ) ; 
 - rpcAddress = addrs . nextElement ( ) ; 
 - if ( addrs . hasMoreElements ( ) ) 
 - throw new ConfigurationException ( " Interface " + conf . rpc _ interface + " can ' t have more than one address " ) ; 
 - } 
 - catch ( SocketException e ) 
 - { 
 - throw new ConfigurationException ( " Unknown network interface in rpc _ interface " + conf . rpc _ interface ) ; 
 - } 
 + listenAddress = getNetworkInterfaceAddress ( conf . rpc _ interface , " rpc _ interface " ) ; 
 } 
 else 
 {

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 608fd4d . . 8ee0b66 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 48 , 6 + 48 , 7 @ @ 
 ( CASSANDRA - 2058 ) 
 * fix math in RandomPartitioner . describeOwnership ( CASSANDRA - 2071 ) 
 * fix deletion of sstable non - data components ( CASSANDRA - 2059 ) 
 + * avoid blocking gossip while deleting handoff hints ( CASSANDRA - 2073 ) 
 
 
 0 . 7 . 0 - final 
 diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 index f4c0084 . . 4ee820d 100644 
 - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 @ @ - 144 , 21 + 144 , 31 @ @ public class HintedHandOffManager 
 rm . apply ( ) ; 
 } 
 
 - public static void deleteHintsForEndPoint ( InetAddress endpoint ) 
 + public static void deleteHintsForEndPoint ( final InetAddress endpoint ) 
 { 
 - ColumnFamilyStore hintStore = Table . open ( Table . SYSTEM _ TABLE ) . getColumnFamilyStore ( HINTS _ CF ) ; 
 - RowMutation rm = new RowMutation ( Table . SYSTEM _ TABLE , ByteBuffer . wrap ( endpoint . getAddress ( ) ) ) ; 
 + final ColumnFamilyStore hintStore = Table . open ( Table . SYSTEM _ TABLE ) . getColumnFamilyStore ( HINTS _ CF ) ; 
 + final RowMutation rm = new RowMutation ( Table . SYSTEM _ TABLE , ByteBuffer . wrap ( endpoint . getAddress ( ) ) ) ; 
 rm . delete ( new QueryPath ( HINTS _ CF ) , System . currentTimeMillis ( ) ) ; 
 - try { 
 - logger _ . info ( " Deleting any stored hints for " + endpoint ) ; 
 - rm . apply ( ) ; 
 - hintStore . forceFlush ( ) ; 
 - CompactionManager . instance . submitMajor ( hintStore , 0 , Integer . MAX _ VALUE ) . get ( ) ; 
 - } 
 - catch ( Exception e ) 
 + 
 + / / execute asynchronously to avoid blocking caller ( which may be processing gossip ) 
 + Runnable runnable = new Runnable ( ) 
 { 
 - logger _ . warn ( " Could not delete hints for " + endpoint + " : " + e ) ; 
 - } 
 + public void run ( ) 
 + { 
 + try 
 + { 
 + logger _ . info ( " Deleting any stored hints for " + endpoint ) ; 
 + rm . apply ( ) ; 
 + hintStore . forceFlush ( ) ; 
 + CompactionManager . instance . submitMajor ( hintStore , 0 , Integer . MAX _ VALUE ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + logger _ . warn ( " Could not delete hints for " + endpoint + " : " + e ) ; 
 + } 
 + } 
 + } ; 
 + StorageService . scheduledTasks . execute ( runnable ) ; 
 } 
 
 private static boolean pagingFinished ( ColumnFamily hintColumnFamily , ByteBuffer startColumn )
