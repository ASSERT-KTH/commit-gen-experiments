BLEU SCORE: 0.06567274736060397

TEST MSG: Fix broken paging state with prepared statement
GENERATED MSG: Fix bugs in the native protocol v2

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 7ab411b . . 6c26d84 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 22 , 6 + 22 , 7 @ @ <nl> * Fix nodetool netstats ( CASSANDRA - 7270 ) <nl> * Fix potential ClassCastException in HintedHandoffManager ( CASSANDRA - 7284 ) <nl> * Use prepared statements internally ( CASSANDRA - 6975 ) <nl> + * Fix broken paging state with prepared statement ( CASSANDRA - 7120 ) <nl> Merged from 2 . 0 : <nl> * Always reallocate buffers in HSHA ( CASSANDRA - 6285 ) <nl> * ( Hadoop ) support authentication in CqlRecordReader ( CASSANDRA - 7221 ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / ResultSet . java b / src / java / org / apache / cassandra / cql3 / ResultSet . java <nl> index eea0475 . . 25635fa 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / ResultSet . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / ResultSet . java <nl> @ @ - 92 , 6 + 92 , 16 @ @ public class ResultSet <nl> } <nl> } <nl> <nl> + public ResultSet withPagingState ( PagingState state ) <nl> + { <nl> + if ( state = = null ) <nl> + return this ; <nl> + <nl> + / / The metadata is shared by all execution of a given statement . So if there is a paging state <nl> + / / we need to copy the metadata <nl> + return new ResultSet ( metadata . withPagingState ( state ) , rows ) ; <nl> + } <nl> + <nl> public ResultSet makeCountResult ( ColumnIdentifier alias ) <nl> { <nl> assert metadata . names ! = null ; <nl> @ @ - 238 , 7 + 248 , 7 @ @ public class ResultSet <nl> { <nl> public static final CBCodec < Metadata > codec = new Codec ( ) ; <nl> <nl> - public static final Metadata EMPTY = new Metadata ( EnumSet . of ( Flag . NO _ METADATA ) , 0 ) ; <nl> + public static final Metadata EMPTY = new Metadata ( EnumSet . of ( Flag . NO _ METADATA ) , null , 0 , null ) ; <nl> <nl> public final EnumSet < Flag > flags ; <nl> / / Please note that columnCount can actually be smaller than names , even if names is not null . This is <nl> @ @ - 247 , 27 + 257 , 21 @ @ public class ResultSet <nl> / / ( CASSANDRA - 4911 ) . So the serialization code will exclude any columns in name whose index is > = columnCount . <nl> public final List < ColumnSpecification > names ; <nl> public final int columnCount ; <nl> - public PagingState pagingState ; <nl> + public final PagingState pagingState ; <nl> <nl> public Metadata ( List < ColumnSpecification > names ) <nl> { <nl> - this ( EnumSet . noneOf ( Flag . class ) , names ) ; <nl> + this ( EnumSet . noneOf ( Flag . class ) , names , names . size ( ) , null ) ; <nl> if ( ! names . isEmpty ( ) & & allInSameCF ( ) ) <nl> flags . add ( Flag . GLOBAL _ TABLES _ SPEC ) ; <nl> } <nl> <nl> - private Metadata ( EnumSet < Flag > flags , List < ColumnSpecification > names ) <nl> + private Metadata ( EnumSet < Flag > flags , List < ColumnSpecification > names , int columnCount , PagingState pagingState ) <nl> { <nl> this . flags = flags ; <nl> this . names = names ; <nl> - this . columnCount = names . size ( ) ; <nl> - } <nl> - <nl> - private Metadata ( EnumSet < Flag > flags , int columnCount ) <nl> - { <nl> - this . flags = flags ; <nl> - this . names = null ; <nl> this . columnCount = columnCount ; <nl> + this . pagingState = pagingState ; <nl> } <nl> <nl> / / The maximum number of values that the ResultSet can hold . This can be bigger than columnCount due to CASSANDRA - 4911 <nl> @ @ - 301 , 14 + 305 , 14 @ @ public class ResultSet <nl> return true ; <nl> } <nl> <nl> - public Metadata setHasMorePages ( PagingState pagingState ) <nl> + public Metadata withPagingState ( PagingState pagingState ) <nl> { <nl> if ( pagingState = = null ) <nl> return this ; <nl> <nl> - flags . add ( Flag . HAS _ MORE _ PAGES ) ; <nl> - this . pagingState = pagingState ; <nl> - return this ; <nl> + EnumSet < Flag > newFlags = EnumSet . copyOf ( flags ) ; <nl> + newFlags . add ( Flag . HAS _ MORE _ PAGES ) ; <nl> + return new Metadata ( newFlags , names , columnCount , pagingState ) ; <nl> } <nl> <nl> public void setSkipMetadata ( ) <nl> @ @ - 354 , 7 + 358 , 7 @ @ public class ResultSet <nl> state = PagingState . deserialize ( CBUtil . readValue ( body ) ) ; <nl> <nl> if ( flags . contains ( Flag . NO _ METADATA ) ) <nl> - return new Metadata ( flags , columnCount ) . setHasMorePages ( state ) ; <nl> + return new Metadata ( flags , null , columnCount , state ) ; <nl> <nl> boolean globalTablesSpec = flags . contains ( Flag . GLOBAL _ TABLES _ SPEC ) ; <nl> <nl> @ @ - 376 , 7 + 380 , 7 @ @ public class ResultSet <nl> AbstractType type = DataType . toType ( DataType . codec . decodeOne ( body , version ) ) ; <nl> names . add ( new ColumnSpecification ( ksName , cfName , colName , type ) ) ; <nl> } <nl> - return new Metadata ( flags , names ) . setHasMorePages ( state ) ; <nl> + return new Metadata ( flags , names , names . size ( ) , state ) ; <nl> } <nl> <nl> public void encode ( Metadata m , ByteBuf dest , int version ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> index 1f9688a . . 765cbac 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java <nl> @ @ - 223 , 9 + 223 , 8 @ @ public class SelectStatement implements CQLStatement , MeasurableForPreparedCache <nl> <nl> List < Row > page = pager . fetchPage ( pageSize ) ; <nl> ResultMessage . Rows msg = processResults ( page , options , limit , now ) ; <nl> - if ( ! pager . isExhausted ( ) ) <nl> - msg . result . metadata . setHasMorePages ( pager . state ( ) ) ; <nl> - return msg ; <nl> + <nl> + return pager . isExhausted ( ) ? msg : msg . withPagingState ( pager . state ( ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / service / pager / PagingState . java b / src / java / org / apache / cassandra / service / pager / PagingState . java <nl> index 9d42d5c . . bbae921 100644 <nl> - - - a / src / java / org / apache / cassandra / service / pager / PagingState . java <nl> + + + b / src / java / org / apache / cassandra / service / pager / PagingState . java <nl> @ @ - 79 , 4 + 79 , 10 @ @ public class PagingState <nl> + 2 + cellName . remaining ( ) <nl> + 4 ; <nl> } <nl> + <nl> + @ Override <nl> + public String toString ( ) <nl> + { <nl> + return String . format ( " PagingState ( key = % s , cellname = % s , remaining = % d " , ByteBufferUtil . bytesToHex ( partitionKey ) , ByteBufferUtil . bytesToHex ( cellName ) , remaining ) ; <nl> + } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / transport / messages / ResultMessage . java b / src / java / org / apache / cassandra / transport / messages / ResultMessage . java <nl> index 7ca9251 . . 9fe1d40 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / messages / ResultMessage . java <nl> + + + b / src / java / org / apache / cassandra / transport / messages / ResultMessage . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import org . apache . cassandra . cql3 . CQLStatement ; <nl> import org . apache . cassandra . cql3 . ResultSet ; <nl> import org . apache . cassandra . cql3 . statements . SelectStatement ; <nl> import org . apache . cassandra . cql3 . statements . ParsedStatement ; <nl> + import org . apache . cassandra . service . pager . PagingState ; <nl> import org . apache . cassandra . transport . * ; <nl> import org . apache . cassandra . thrift . CqlPreparedResult ; <nl> import org . apache . cassandra . thrift . CqlResult ; <nl> @ @ - 219 , 6 + 220 , 11 @ @ public abstract class ResultMessage extends Message . Response <nl> this . result = result ; <nl> } <nl> <nl> + public Rows withPagingState ( PagingState state ) <nl> + { <nl> + return new Rows ( result . withPagingState ( state ) ) ; <nl> + } <nl> + <nl> public CqlResult toThriftResult ( ) <nl> { <nl> return result . toThriftResult ( ) ; <nl> @ @ - 229 , 7 + 235 , 6 @ @ public abstract class ResultMessage extends Message . Response <nl> { <nl> return " ROWS " + result ; <nl> } <nl> - <nl> } <nl> <nl> public static class Prepared extends ResultMessage <nl> @ @ - 276 , 7 + 281 , 11 @ @ public abstract class ResultMessage extends Message . Response <nl> } ; <nl> <nl> public final MD5Digest statementId ; <nl> + <nl> + / * * Describes the variables to be bound in the prepared statement * / <nl> public final ResultSet . Metadata metadata ; <nl> + <nl> + / * * Describes the results of executing this prepared statement * / <nl> public final ResultSet . Metadata resultMetadata ; <nl> <nl> / / statement id for CQL - over - thrift compatibility . The binary protocol ignore that .
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 80b73f4 . . f8a3f09 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 21 , 6 + 21 , 7 @ @ <nl> * cqlsh : handle CUSTOM 2i in DESCRIBE output ( CASSANDRA - 5760 ) <nl> * Fix minor bug in Range . intersects ( Bound ) ( CASSANDRA - 5771 ) <nl> * cqlsh : handle disabled compression in DESCRIBE output ( CASSANDRA - 5766 ) <nl> + * Ensure all UP events are notified on the native protocol ( CASSANDRA - 5769 ) <nl> <nl> <nl> 1 . 2 . 6 <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index d166553 . . 26c4d1c 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 1351 , 21 + 1351 , 8 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> logger . debug ( " Node " + endpoint + " state normal , token " + tokens ) ; <nl> <nl> if ( tokenMetadata . isMember ( endpoint ) ) <nl> - { <nl> logger . info ( " Node " + endpoint + " state jump to normal " ) ; <nl> <nl> - if ( ! isClientMode ) <nl> - { <nl> - for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) <nl> - subscriber . onUp ( endpoint ) ; <nl> - } <nl> - } <nl> - else if ( ! isClientMode ) <nl> - { <nl> - for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) <nl> - subscriber . onJoinCluster ( endpoint ) ; <nl> - } <nl> - <nl> / / Order Matters , TM . updateHostID ( ) should be called before TM . updateNormalToken ( ) , ( see CASSANDRA - 4300 ) . <nl> if ( Gossiper . instance . usesHostId ( endpoint ) ) <nl> tokenMetadata . updateHostId ( Gossiper . instance . getHostId ( endpoint ) , endpoint ) ; <nl> @ @ - 1976 , 8 + 1963 , 20 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> <nl> public void onAlive ( InetAddress endpoint , EndpointState state ) <nl> { <nl> - if ( ! isClientMode & & getTokenMetadata ( ) . isMember ( endpoint ) ) <nl> + if ( isClientMode ) <nl> + return ; <nl> + <nl> + if ( tokenMetadata . isMember ( endpoint ) ) <nl> + { <nl> HintedHandOffManager . instance . scheduleHintDelivery ( endpoint ) ; <nl> + for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) <nl> + subscriber . onUp ( endpoint ) ; <nl> + } <nl> + else <nl> + { <nl> + for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) <nl> + subscriber . onJoinCluster ( endpoint ) ; <nl> + } <nl> } <nl> <nl> public void onRemove ( InetAddress endpoint )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 7ab411b . . 6c26d84 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 22 , 6 + 22 , 7 @ @ 
 * Fix nodetool netstats ( CASSANDRA - 7270 ) 
 * Fix potential ClassCastException in HintedHandoffManager ( CASSANDRA - 7284 ) 
 * Use prepared statements internally ( CASSANDRA - 6975 ) 
 + * Fix broken paging state with prepared statement ( CASSANDRA - 7120 ) 
 Merged from 2 . 0 : 
 * Always reallocate buffers in HSHA ( CASSANDRA - 6285 ) 
 * ( Hadoop ) support authentication in CqlRecordReader ( CASSANDRA - 7221 ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / ResultSet . java b / src / java / org / apache / cassandra / cql3 / ResultSet . java 
 index eea0475 . . 25635fa 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / ResultSet . java 
 + + + b / src / java / org / apache / cassandra / cql3 / ResultSet . java 
 @ @ - 92 , 6 + 92 , 16 @ @ public class ResultSet 
 } 
 } 
 
 + public ResultSet withPagingState ( PagingState state ) 
 + { 
 + if ( state = = null ) 
 + return this ; 
 + 
 + / / The metadata is shared by all execution of a given statement . So if there is a paging state 
 + / / we need to copy the metadata 
 + return new ResultSet ( metadata . withPagingState ( state ) , rows ) ; 
 + } 
 + 
 public ResultSet makeCountResult ( ColumnIdentifier alias ) 
 { 
 assert metadata . names ! = null ; 
 @ @ - 238 , 7 + 248 , 7 @ @ public class ResultSet 
 { 
 public static final CBCodec < Metadata > codec = new Codec ( ) ; 
 
 - public static final Metadata EMPTY = new Metadata ( EnumSet . of ( Flag . NO _ METADATA ) , 0 ) ; 
 + public static final Metadata EMPTY = new Metadata ( EnumSet . of ( Flag . NO _ METADATA ) , null , 0 , null ) ; 
 
 public final EnumSet < Flag > flags ; 
 / / Please note that columnCount can actually be smaller than names , even if names is not null . This is 
 @ @ - 247 , 27 + 257 , 21 @ @ public class ResultSet 
 / / ( CASSANDRA - 4911 ) . So the serialization code will exclude any columns in name whose index is > = columnCount . 
 public final List < ColumnSpecification > names ; 
 public final int columnCount ; 
 - public PagingState pagingState ; 
 + public final PagingState pagingState ; 
 
 public Metadata ( List < ColumnSpecification > names ) 
 { 
 - this ( EnumSet . noneOf ( Flag . class ) , names ) ; 
 + this ( EnumSet . noneOf ( Flag . class ) , names , names . size ( ) , null ) ; 
 if ( ! names . isEmpty ( ) & & allInSameCF ( ) ) 
 flags . add ( Flag . GLOBAL _ TABLES _ SPEC ) ; 
 } 
 
 - private Metadata ( EnumSet < Flag > flags , List < ColumnSpecification > names ) 
 + private Metadata ( EnumSet < Flag > flags , List < ColumnSpecification > names , int columnCount , PagingState pagingState ) 
 { 
 this . flags = flags ; 
 this . names = names ; 
 - this . columnCount = names . size ( ) ; 
 - } 
 - 
 - private Metadata ( EnumSet < Flag > flags , int columnCount ) 
 - { 
 - this . flags = flags ; 
 - this . names = null ; 
 this . columnCount = columnCount ; 
 + this . pagingState = pagingState ; 
 } 
 
 / / The maximum number of values that the ResultSet can hold . This can be bigger than columnCount due to CASSANDRA - 4911 
 @ @ - 301 , 14 + 305 , 14 @ @ public class ResultSet 
 return true ; 
 } 
 
 - public Metadata setHasMorePages ( PagingState pagingState ) 
 + public Metadata withPagingState ( PagingState pagingState ) 
 { 
 if ( pagingState = = null ) 
 return this ; 
 
 - flags . add ( Flag . HAS _ MORE _ PAGES ) ; 
 - this . pagingState = pagingState ; 
 - return this ; 
 + EnumSet < Flag > newFlags = EnumSet . copyOf ( flags ) ; 
 + newFlags . add ( Flag . HAS _ MORE _ PAGES ) ; 
 + return new Metadata ( newFlags , names , columnCount , pagingState ) ; 
 } 
 
 public void setSkipMetadata ( ) 
 @ @ - 354 , 7 + 358 , 7 @ @ public class ResultSet 
 state = PagingState . deserialize ( CBUtil . readValue ( body ) ) ; 
 
 if ( flags . contains ( Flag . NO _ METADATA ) ) 
 - return new Metadata ( flags , columnCount ) . setHasMorePages ( state ) ; 
 + return new Metadata ( flags , null , columnCount , state ) ; 
 
 boolean globalTablesSpec = flags . contains ( Flag . GLOBAL _ TABLES _ SPEC ) ; 
 
 @ @ - 376 , 7 + 380 , 7 @ @ public class ResultSet 
 AbstractType type = DataType . toType ( DataType . codec . decodeOne ( body , version ) ) ; 
 names . add ( new ColumnSpecification ( ksName , cfName , colName , type ) ) ; 
 } 
 - return new Metadata ( flags , names ) . setHasMorePages ( state ) ; 
 + return new Metadata ( flags , names , names . size ( ) , state ) ; 
 } 
 
 public void encode ( Metadata m , ByteBuf dest , int version ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 index 1f9688a . . 765cbac 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / SelectStatement . java 
 @ @ - 223 , 9 + 223 , 8 @ @ public class SelectStatement implements CQLStatement , MeasurableForPreparedCache 
 
 List < Row > page = pager . fetchPage ( pageSize ) ; 
 ResultMessage . Rows msg = processResults ( page , options , limit , now ) ; 
 - if ( ! pager . isExhausted ( ) ) 
 - msg . result . metadata . setHasMorePages ( pager . state ( ) ) ; 
 - return msg ; 
 + 
 + return pager . isExhausted ( ) ? msg : msg . withPagingState ( pager . state ( ) ) ; 
 } 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / service / pager / PagingState . java b / src / java / org / apache / cassandra / service / pager / PagingState . java 
 index 9d42d5c . . bbae921 100644 
 - - - a / src / java / org / apache / cassandra / service / pager / PagingState . java 
 + + + b / src / java / org / apache / cassandra / service / pager / PagingState . java 
 @ @ - 79 , 4 + 79 , 10 @ @ public class PagingState 
 + 2 + cellName . remaining ( ) 
 + 4 ; 
 } 
 + 
 + @ Override 
 + public String toString ( ) 
 + { 
 + return String . format ( " PagingState ( key = % s , cellname = % s , remaining = % d " , ByteBufferUtil . bytesToHex ( partitionKey ) , ByteBufferUtil . bytesToHex ( cellName ) , remaining ) ; 
 + } 
 } 
 diff - - git a / src / java / org / apache / cassandra / transport / messages / ResultMessage . java b / src / java / org / apache / cassandra / transport / messages / ResultMessage . java 
 index 7ca9251 . . 9fe1d40 100644 
 - - - a / src / java / org / apache / cassandra / transport / messages / ResultMessage . java 
 + + + b / src / java / org / apache / cassandra / transport / messages / ResultMessage . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import org . apache . cassandra . cql3 . CQLStatement ; 
 import org . apache . cassandra . cql3 . ResultSet ; 
 import org . apache . cassandra . cql3 . statements . SelectStatement ; 
 import org . apache . cassandra . cql3 . statements . ParsedStatement ; 
 + import org . apache . cassandra . service . pager . PagingState ; 
 import org . apache . cassandra . transport . * ; 
 import org . apache . cassandra . thrift . CqlPreparedResult ; 
 import org . apache . cassandra . thrift . CqlResult ; 
 @ @ - 219 , 6 + 220 , 11 @ @ public abstract class ResultMessage extends Message . Response 
 this . result = result ; 
 } 
 
 + public Rows withPagingState ( PagingState state ) 
 + { 
 + return new Rows ( result . withPagingState ( state ) ) ; 
 + } 
 + 
 public CqlResult toThriftResult ( ) 
 { 
 return result . toThriftResult ( ) ; 
 @ @ - 229 , 7 + 235 , 6 @ @ public abstract class ResultMessage extends Message . Response 
 { 
 return " ROWS " + result ; 
 } 
 - 
 } 
 
 public static class Prepared extends ResultMessage 
 @ @ - 276 , 7 + 281 , 11 @ @ public abstract class ResultMessage extends Message . Response 
 } ; 
 
 public final MD5Digest statementId ; 
 + 
 + / * * Describes the variables to be bound in the prepared statement * / 
 public final ResultSet . Metadata metadata ; 
 + 
 + / * * Describes the results of executing this prepared statement * / 
 public final ResultSet . Metadata resultMetadata ; 
 
 / / statement id for CQL - over - thrift compatibility . The binary protocol ignore that .

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 80b73f4 . . f8a3f09 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 21 , 6 + 21 , 7 @ @ 
 * cqlsh : handle CUSTOM 2i in DESCRIBE output ( CASSANDRA - 5760 ) 
 * Fix minor bug in Range . intersects ( Bound ) ( CASSANDRA - 5771 ) 
 * cqlsh : handle disabled compression in DESCRIBE output ( CASSANDRA - 5766 ) 
 + * Ensure all UP events are notified on the native protocol ( CASSANDRA - 5769 ) 
 
 
 1 . 2 . 6 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index d166553 . . 26c4d1c 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 1351 , 21 + 1351 , 8 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 logger . debug ( " Node " + endpoint + " state normal , token " + tokens ) ; 
 
 if ( tokenMetadata . isMember ( endpoint ) ) 
 - { 
 logger . info ( " Node " + endpoint + " state jump to normal " ) ; 
 
 - if ( ! isClientMode ) 
 - { 
 - for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) 
 - subscriber . onUp ( endpoint ) ; 
 - } 
 - } 
 - else if ( ! isClientMode ) 
 - { 
 - for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) 
 - subscriber . onJoinCluster ( endpoint ) ; 
 - } 
 - 
 / / Order Matters , TM . updateHostID ( ) should be called before TM . updateNormalToken ( ) , ( see CASSANDRA - 4300 ) . 
 if ( Gossiper . instance . usesHostId ( endpoint ) ) 
 tokenMetadata . updateHostId ( Gossiper . instance . getHostId ( endpoint ) , endpoint ) ; 
 @ @ - 1976 , 8 + 1963 , 20 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 
 public void onAlive ( InetAddress endpoint , EndpointState state ) 
 { 
 - if ( ! isClientMode & & getTokenMetadata ( ) . isMember ( endpoint ) ) 
 + if ( isClientMode ) 
 + return ; 
 + 
 + if ( tokenMetadata . isMember ( endpoint ) ) 
 + { 
 HintedHandOffManager . instance . scheduleHintDelivery ( endpoint ) ; 
 + for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) 
 + subscriber . onUp ( endpoint ) ; 
 + } 
 + else 
 + { 
 + for ( IEndpointLifecycleSubscriber subscriber : lifecycleSubscribers ) 
 + subscriber . onJoinCluster ( endpoint ) ; 
 + } 
 } 
 
 public void onRemove ( InetAddress endpoint )
