BLEU SCORE: 0.11080315836233387

TEST MSG: checkForEndpointCollision fails for legitimate collisions
GENERATED MSG: checkForEndpointCollision fails for legitimate collisions , finalized list of statuses and nits , CASSANDRA - 9765

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> index b77064d . . 8c36223 100644 <nl> - - - a / src / java / org / apache / cassandra / gms / Gossiper . java <nl> + + + b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> @ @ - 678 , 6 + 678 , 12 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean <nl> } <nl> } <nl> <nl> + / * * <nl> + * A fat client is a node that has not joined the ring , therefore acting as a coordinator only . <nl> + * <nl> + * @ param endpoint - the endpoint to check <nl> + * @ return true if it is a fat client <nl> + * / <nl> public boolean isFatClient ( InetAddress endpoint ) <nl> { <nl> EndpointState epState = endpointStateMap . get ( endpoint ) ; <nl> @ @ - 688 , 6 + 694 , 30 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean <nl> return ! isDeadState ( epState ) & & ! StorageService . instance . getTokenMetadata ( ) . isMember ( endpoint ) ; <nl> } <nl> <nl> + / * * <nl> + * Check if this endpoint can safely bootstrap into the cluster . <nl> + * <nl> + * @ param endpoint - the endpoint to check <nl> + * @ return true if the endpoint can join the cluster <nl> + * / <nl> + public boolean isSafeForBootstrap ( InetAddress endpoint ) <nl> + { <nl> + EndpointState epState = endpointStateMap . get ( endpoint ) ; <nl> + <nl> + / / if there ' s no previous state , or the node was previously removed from the cluster , we ' re good <nl> + if ( epState = = null | | isDeadState ( epState ) ) <nl> + return true ; <nl> + <nl> + String status = getGossipStatus ( epState ) ; <nl> + <nl> + / / these states are not allowed to join the cluster as it would not be safe <nl> + final List < String > unsafeStatuses = new ArrayList < String > ( ) { { <nl> + add ( " " ) ; / / failed bootstrap but we did start gossiping <nl> + add ( VersionedValue . STATUS _ NORMAL ) ; / / node is legit in the cluster or it was stopped with kill - 9 <nl> + add ( VersionedValue . SHUTDOWN ) ; } } ; / / node was shutdown <nl> + return ! unsafeStatuses . contains ( status ) ; <nl> + } <nl> + <nl> private void doStatusCheck ( ) <nl> { <nl> if ( logger . isTraceEnabled ( ) ) <nl> @ @ - 1008 , 34 + 1038 , 31 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean <nl> <nl> public boolean isDeadState ( EndpointState epState ) <nl> { <nl> - if ( epState . getApplicationState ( ApplicationState . STATUS ) = = null ) <nl> + String status = getGossipStatus ( epState ) ; <nl> + if ( status . isEmpty ( ) ) <nl> return false ; <nl> - String value = epState . getApplicationState ( ApplicationState . STATUS ) . value ; <nl> - String [ ] pieces = value . split ( VersionedValue . DELIMITER _ STR , - 1 ) ; <nl> - assert ( pieces . length > 0 ) ; <nl> - String state = pieces [ 0 ] ; <nl> - for ( String deadstate : DEAD _ STATES ) <nl> - { <nl> - if ( state . equals ( deadstate ) ) <nl> - return true ; <nl> - } <nl> - return false ; <nl> + <nl> + return DEAD _ STATES . contains ( status ) ; <nl> } <nl> <nl> public boolean isSilentShutdownState ( EndpointState epState ) <nl> { <nl> - if ( epState . getApplicationState ( ApplicationState . STATUS ) = = null ) <nl> + String status = getGossipStatus ( epState ) ; <nl> + if ( status . isEmpty ( ) ) <nl> return false ; <nl> + <nl> + return SILENT _ SHUTDOWN _ STATES . contains ( status ) ; <nl> + } <nl> + <nl> + private static String getGossipStatus ( EndpointState epState ) <nl> + { <nl> + if ( epState = = null | | epState . getApplicationState ( ApplicationState . STATUS ) = = null ) <nl> + return " " ; <nl> + <nl> String value = epState . getApplicationState ( ApplicationState . STATUS ) . value ; <nl> String [ ] pieces = value . split ( VersionedValue . DELIMITER _ STR , - 1 ) ; <nl> assert ( pieces . length > 0 ) ; <nl> - String state = pieces [ 0 ] ; <nl> - for ( String deadstate : SILENT _ SHUTDOWN _ STATES ) <nl> - { <nl> - if ( state . equals ( deadstate ) ) <nl> - return true ; <nl> - } <nl> - return false ; <nl> + return pieces [ 0 ] ; <nl> } <nl> <nl> void applyStateLocally ( Map < InetAddress , EndpointState > epStateMap ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index a256ce7 . . 745fe4c 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 455 , 8 + 455 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> if ( ! MessagingService . instance ( ) . isListening ( ) ) <nl> MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; <nl> Gossiper . instance . doShadowRound ( ) ; <nl> - EndpointState epState = Gossiper . instance . getEndpointStateForEndpoint ( FBUtilities . getBroadcastAddress ( ) ) ; <nl> - if ( epState ! = null & & ! Gossiper . instance . isDeadState ( epState ) & & ! Gossiper . instance . isFatClient ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> + if ( ! Gossiper . instance . isSafeForBootstrap ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> { <nl> throw new RuntimeException ( String . format ( " A node with address % s already exists , cancelling join . " + <nl> " Use cassandra . replace _ address if you want to replace this node . " ,
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java 
 index b77064d . . 8c36223 100644 
 - - - a / src / java / org / apache / cassandra / gms / Gossiper . java 
 + + + b / src / java / org / apache / cassandra / gms / Gossiper . java 
 @ @ - 678 , 6 + 678 , 12 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean 
 } 
 } 
 
 + / * * 
 + * A fat client is a node that has not joined the ring , therefore acting as a coordinator only . 
 + * 
 + * @ param endpoint - the endpoint to check 
 + * @ return true if it is a fat client 
 + * / 
 public boolean isFatClient ( InetAddress endpoint ) 
 { 
 EndpointState epState = endpointStateMap . get ( endpoint ) ; 
 @ @ - 688 , 6 + 694 , 30 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean 
 return ! isDeadState ( epState ) & & ! StorageService . instance . getTokenMetadata ( ) . isMember ( endpoint ) ; 
 } 
 
 + / * * 
 + * Check if this endpoint can safely bootstrap into the cluster . 
 + * 
 + * @ param endpoint - the endpoint to check 
 + * @ return true if the endpoint can join the cluster 
 + * / 
 + public boolean isSafeForBootstrap ( InetAddress endpoint ) 
 + { 
 + EndpointState epState = endpointStateMap . get ( endpoint ) ; 
 + 
 + / / if there ' s no previous state , or the node was previously removed from the cluster , we ' re good 
 + if ( epState = = null | | isDeadState ( epState ) ) 
 + return true ; 
 + 
 + String status = getGossipStatus ( epState ) ; 
 + 
 + / / these states are not allowed to join the cluster as it would not be safe 
 + final List < String > unsafeStatuses = new ArrayList < String > ( ) { { 
 + add ( " " ) ; / / failed bootstrap but we did start gossiping 
 + add ( VersionedValue . STATUS _ NORMAL ) ; / / node is legit in the cluster or it was stopped with kill - 9 
 + add ( VersionedValue . SHUTDOWN ) ; } } ; / / node was shutdown 
 + return ! unsafeStatuses . contains ( status ) ; 
 + } 
 + 
 private void doStatusCheck ( ) 
 { 
 if ( logger . isTraceEnabled ( ) ) 
 @ @ - 1008 , 34 + 1038 , 31 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean 
 
 public boolean isDeadState ( EndpointState epState ) 
 { 
 - if ( epState . getApplicationState ( ApplicationState . STATUS ) = = null ) 
 + String status = getGossipStatus ( epState ) ; 
 + if ( status . isEmpty ( ) ) 
 return false ; 
 - String value = epState . getApplicationState ( ApplicationState . STATUS ) . value ; 
 - String [ ] pieces = value . split ( VersionedValue . DELIMITER _ STR , - 1 ) ; 
 - assert ( pieces . length > 0 ) ; 
 - String state = pieces [ 0 ] ; 
 - for ( String deadstate : DEAD _ STATES ) 
 - { 
 - if ( state . equals ( deadstate ) ) 
 - return true ; 
 - } 
 - return false ; 
 + 
 + return DEAD _ STATES . contains ( status ) ; 
 } 
 
 public boolean isSilentShutdownState ( EndpointState epState ) 
 { 
 - if ( epState . getApplicationState ( ApplicationState . STATUS ) = = null ) 
 + String status = getGossipStatus ( epState ) ; 
 + if ( status . isEmpty ( ) ) 
 return false ; 
 + 
 + return SILENT _ SHUTDOWN _ STATES . contains ( status ) ; 
 + } 
 + 
 + private static String getGossipStatus ( EndpointState epState ) 
 + { 
 + if ( epState = = null | | epState . getApplicationState ( ApplicationState . STATUS ) = = null ) 
 + return " " ; 
 + 
 String value = epState . getApplicationState ( ApplicationState . STATUS ) . value ; 
 String [ ] pieces = value . split ( VersionedValue . DELIMITER _ STR , - 1 ) ; 
 assert ( pieces . length > 0 ) ; 
 - String state = pieces [ 0 ] ; 
 - for ( String deadstate : SILENT _ SHUTDOWN _ STATES ) 
 - { 
 - if ( state . equals ( deadstate ) ) 
 - return true ; 
 - } 
 - return false ; 
 + return pieces [ 0 ] ; 
 } 
 
 void applyStateLocally ( Map < InetAddress , EndpointState > epStateMap ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index a256ce7 . . 745fe4c 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 455 , 8 + 455 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 if ( ! MessagingService . instance ( ) . isListening ( ) ) 
 MessagingService . instance ( ) . listen ( FBUtilities . getLocalAddress ( ) ) ; 
 Gossiper . instance . doShadowRound ( ) ; 
 - EndpointState epState = Gossiper . instance . getEndpointStateForEndpoint ( FBUtilities . getBroadcastAddress ( ) ) ; 
 - if ( epState ! = null & & ! Gossiper . instance . isDeadState ( epState ) & & ! Gossiper . instance . isFatClient ( FBUtilities . getBroadcastAddress ( ) ) ) 
 + if ( ! Gossiper . instance . isSafeForBootstrap ( FBUtilities . getBroadcastAddress ( ) ) ) 
 { 
 throw new RuntimeException ( String . format ( " A node with address % s already exists , cancelling join . " + 
 " Use cassandra . replace _ address if you want to replace this node . " ,

NEAREST DIFF:
ELIMINATEDSENTENCE
