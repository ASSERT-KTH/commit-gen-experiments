BLEU SCORE: 0.02399905349559606

TEST MSG: Avoid using DatabaseDescriptor in ProtocolVersion
GENERATED MSG: ninja commit the minor updates for CASSANDRA - 14335

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / transport / Client . java b / src / java / org / apache / cassandra / transport / Client . java <nl> index f7ed272 . . eacd5a9 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / Client . java <nl> + + + b / src / java / org / apache / cassandra / transport / Client . java <nl> @ @ - 292 , 7 + 292 , 7 @ @ public class Client extends SimpleClient <nl> / / Parse options . <nl> String host = args [ 0 ] ; <nl> int port = Integer . parseInt ( args [ 1 ] ) ; <nl> - ProtocolVersion version = args . length = = 3 ? ProtocolVersion . decode ( Integer . parseInt ( args [ 2 ] ) ) : ProtocolVersion . CURRENT ; <nl> + ProtocolVersion version = args . length = = 3 ? ProtocolVersion . decode ( Integer . parseInt ( args [ 2 ] ) , DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) ) : ProtocolVersion . CURRENT ; <nl> <nl> EncryptionOptions encryptionOptions = new EncryptionOptions ( ) ; <nl> System . out . println ( " CQL binary protocol console " + host + " @ " + port + " using native protocol version " + version ) ; <nl> diff - - git a / src / java / org / apache / cassandra / transport / Frame . java b / src / java / org / apache / cassandra / transport / Frame . java <nl> index d6a1cbc . . d3c810b 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / Frame . java <nl> + + + b / src / java / org / apache / cassandra / transport / Frame . java <nl> @ @ - 174 , 7 + 174 , 7 @ @ public class Frame <nl> int firstByte = buffer . getByte ( idx + + ) ; <nl> Message . Direction direction = Message . Direction . extractFromVersion ( firstByte ) ; <nl> int versionNum = firstByte & PROTOCOL _ VERSION _ MASK ; <nl> - ProtocolVersion version = ProtocolVersion . decode ( versionNum ) ; <nl> + ProtocolVersion version = ProtocolVersion . decode ( versionNum , DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) ) ; <nl> <nl> / / Wait until we have the complete header <nl> if ( readableBytes < Header . LENGTH ) <nl> diff - - git a / src / java / org / apache / cassandra / transport / ProtocolVersion . java b / src / java / org / apache / cassandra / transport / ProtocolVersion . java <nl> index e1f634c . . 546983f 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / ProtocolVersion . java <nl> + + + b / src / java / org / apache / cassandra / transport / ProtocolVersion . java <nl> @ @ - 26 , 8 + 26 , 6 @ @ import java . util . Optional ; <nl> <nl> import org . apache . commons . lang3 . ArrayUtils ; <nl> <nl> - import org . apache . cassandra . config . DatabaseDescriptor ; <nl> - <nl> / * * <nl> * The native ( CQL binary ) protocol version . <nl> * <nl> @ @ - 95 , 7 + 93 , 7 @ @ public enum ProtocolVersion implements Comparable < ProtocolVersion > <nl> return versions ; <nl> } <nl> <nl> - public static ProtocolVersion decode ( int versionNum ) <nl> + public static ProtocolVersion decode ( int versionNum , boolean allowOlderProtocols ) <nl> { <nl> ProtocolVersion ret = versionNum > = MIN _ SUPPORTED _ VERSION . num & & versionNum < = MAX _ SUPPORTED _ VERSION . num <nl> ? SUPPORTED _ VERSIONS [ versionNum - MIN _ SUPPORTED _ VERSION . num ] <nl> @ @ - 116 , 7 + 114 , 7 @ @ public enum ProtocolVersion implements Comparable < ProtocolVersion > <nl> throw new ProtocolException ( invalidVersionMessage ( versionNum ) , MAX _ SUPPORTED _ VERSION ) ; <nl> } <nl> <nl> - if ( ! DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) & & ret . isSmallerThan ( CURRENT ) ) <nl> + if ( ! allowOlderProtocols & & ret . isSmallerThan ( CURRENT ) ) <nl> throw new ProtocolException ( String . format ( " Rejecting Protocol Version % s < % s . " , ret , ProtocolVersion . CURRENT ) ) ; <nl> <nl> return ret ; <nl> diff - - git a / test / unit / org / apache / cassandra / audit / FullQueryLoggerTest . java b / test / unit / org / apache / cassandra / audit / FullQueryLoggerTest . java <nl> index 376bde5 . . 5fe078a 100644 <nl> - - - a / test / unit / org / apache / cassandra / audit / FullQueryLoggerTest . java <nl> + + + b / test / unit / org / apache / cassandra / audit / FullQueryLoggerTest . java <nl> @ @ - 443 , 7 + 443 , 7 @ @ public class FullQueryLoggerTest extends CQLTester <nl> <nl> assertEquals ( 1L , wire . read ( QUERY _ START _ TIME ) . int64 ( ) ) ; <nl> <nl> - ProtocolVersion protocolVersion = ProtocolVersion . decode ( wire . read ( PROTOCOL _ VERSION ) . int32 ( ) ) ; <nl> + ProtocolVersion protocolVersion = ProtocolVersion . decode ( wire . read ( PROTOCOL _ VERSION ) . int32 ( ) , true ) ; <nl> assertEquals ( ProtocolVersion . CURRENT , protocolVersion ) ; <nl> <nl> QueryOptions queryOptions = QueryOptions . codec . decode ( Unpooled . wrappedBuffer ( wire . read ( QUERY _ OPTIONS ) . bytes ( ) ) , protocolVersion ) ; <nl> @ @ - 517 , 7 + 517 , 7 @ @ public class FullQueryLoggerTest extends CQLTester <nl> <nl> assertEquals ( 1L , wire . read ( QUERY _ START _ TIME ) . int64 ( ) ) ; <nl> <nl> - ProtocolVersion protocolVersion = ProtocolVersion . decode ( wire . read ( PROTOCOL _ VERSION ) . int32 ( ) ) ; <nl> + ProtocolVersion protocolVersion = ProtocolVersion . decode ( wire . read ( PROTOCOL _ VERSION ) . int32 ( ) , true ) ; <nl> assertEquals ( ProtocolVersion . CURRENT , protocolVersion ) ; <nl> <nl> QueryOptions queryOptions = QueryOptions . codec . decode ( Unpooled . wrappedBuffer ( wire . read ( QUERY _ OPTIONS ) . bytes ( ) ) , protocolVersion ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / transport / ProtocolVersionTest . java b / test / unit / org / apache / cassandra / transport / ProtocolVersionTest . java <nl> index 2057998 . . 74bc407 100644 <nl> - - - a / test / unit / org / apache / cassandra / transport / ProtocolVersionTest . java <nl> + + + b / test / unit / org / apache / cassandra / transport / ProtocolVersionTest . java <nl> @ @ - 46 , 13 + 46 , 13 @ @ public class ProtocolVersionTest <nl> public void testDecode ( ) <nl> { <nl> for ( ProtocolVersion version : ProtocolVersion . SUPPORTED ) <nl> - Assert . assertEquals ( version , ProtocolVersion . decode ( version . asInt ( ) ) ) ; <nl> + Assert . assertEquals ( version , ProtocolVersion . decode ( version . asInt ( ) , DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) ) ) ; <nl> <nl> for ( ProtocolVersion version : ProtocolVersion . UNSUPPORTED ) <nl> { / / unsupported old versions <nl> try <nl> { <nl> - Assert . assertEquals ( version , ProtocolVersion . decode ( version . asInt ( ) ) ) ; <nl> + Assert . assertEquals ( version , ProtocolVersion . decode ( version . asInt ( ) , DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) ) ) ; <nl> Assert . fail ( " Expected invalid protocol exception " ) ; <nl> } <nl> catch ( ProtocolException ex ) <nl> @ @ - 64 , 7 + 64 , 7 @ @ public class ProtocolVersionTest <nl> <nl> try <nl> { / / unsupported newer version <nl> - Assert . assertEquals ( null , ProtocolVersion . decode ( 63 ) ) ; <nl> + Assert . assertEquals ( null , ProtocolVersion . decode ( 63 , DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) ) ) ; <nl> Assert . fail ( " Expected invalid protocol exception " ) ; <nl> } <nl> catch ( ProtocolException ex ) <nl> @ @ - 133 , 7 + 133 , 7 @ @ public class ProtocolVersionTest <nl> { <nl> try <nl> { <nl> - ProtocolVersion . decode ( version . asInt ( ) ) ; <nl> + ProtocolVersion . decode ( version . asInt ( ) , DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) ) ; <nl> Assert . fail ( " Expected invalid protocol exception " ) ; <nl> } <nl> catch ( ProtocolException ex ) <nl> @ @ - 141 , 6 + 141 , 6 @ @ public class ProtocolVersionTest <nl> } <nl> } <nl> <nl> - Assert . assertEquals ( ProtocolVersion . CURRENT , ProtocolVersion . decode ( ProtocolVersion . CURRENT . asInt ( ) ) ) ; <nl> + Assert . assertEquals ( ProtocolVersion . CURRENT , ProtocolVersion . decode ( ProtocolVersion . CURRENT . asInt ( ) , DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) ) ) ; <nl> } <nl> } <nl> diff - - git a / tools / fqltool / src / org / apache / cassandra / fqltool / FQLQueryReader . java b / tools / fqltool / src / org / apache / cassandra / fqltool / FQLQueryReader . java <nl> index fd5073c . . 0c18b79 100644 <nl> - - - a / tools / fqltool / src / org / apache / cassandra / fqltool / FQLQueryReader . java <nl> + + + b / tools / fqltool / src / org / apache / cassandra / fqltool / FQLQueryReader . java <nl> @ @ - 57 , 7 + 57 , 7 @ @ public class FQLQueryReader implements ReadMarshallable <nl> String type = wireIn . read ( TYPE ) . text ( ) ; <nl> long queryStartTime = wireIn . read ( QUERY _ START _ TIME ) . int64 ( ) ; <nl> int protocolVersion = wireIn . read ( PROTOCOL _ VERSION ) . int32 ( ) ; <nl> - QueryOptions queryOptions = QueryOptions . codec . decode ( Unpooled . wrappedBuffer ( wireIn . read ( QUERY _ OPTIONS ) . bytes ( ) ) , ProtocolVersion . decode ( protocolVersion ) ) ; <nl> + QueryOptions queryOptions = QueryOptions . codec . decode ( Unpooled . wrappedBuffer ( wireIn . read ( QUERY _ OPTIONS ) . bytes ( ) ) , ProtocolVersion . decode ( protocolVersion , true ) ) ; <nl> long generatedTimestamp = wireIn . read ( GENERATED _ TIMESTAMP ) . int64 ( ) ; <nl> int generatedNowInSeconds = wireIn . read ( GENERATED _ NOW _ IN _ SECONDS ) . int32 ( ) ; <nl> String keyspace = wireIn . read ( KEYSPACE ) . text ( ) ; <nl> diff - - git a / tools / fqltool / src / org / apache / cassandra / fqltool / commands / Dump . java b / tools / fqltool / src / org / apache / cassandra / fqltool / commands / Dump . java <nl> index 1263a11 . . b3e1f22 100644 <nl> - - - a / tools / fqltool / src / org / apache / cassandra / fqltool / commands / Dump . java <nl> + + + b / tools / fqltool / src / org / apache / cassandra / fqltool / commands / Dump . java <nl> @ @ - 94 , 7 + 94 , 7 @ @ public class Dump implements Runnable <nl> <nl> QueryOptions options = <nl> QueryOptions . codec . decode ( Unpooled . wrappedBuffer ( wireIn . read ( FullQueryLogger . QUERY _ OPTIONS ) . bytes ( ) ) , <nl> - ProtocolVersion . decode ( protocolVersion ) ) ; <nl> + ProtocolVersion . decode ( protocolVersion , true ) ) ; <nl> <nl> long generatedTimestamp = wireIn . read ( FullQueryLogger . GENERATED _ TIMESTAMP ) . int64 ( ) ; <nl> sb . append ( " Generated timestamp : " )
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / transport / Client . java b / src / java / org / apache / cassandra / transport / Client . java 
 index f7ed272 . . eacd5a9 100644 
 - - - a / src / java / org / apache / cassandra / transport / Client . java 
 + + + b / src / java / org / apache / cassandra / transport / Client . java 
 @ @ - 292 , 7 + 292 , 7 @ @ public class Client extends SimpleClient 
 / / Parse options . 
 String host = args [ 0 ] ; 
 int port = Integer . parseInt ( args [ 1 ] ) ; 
 - ProtocolVersion version = args . length = = 3 ? ProtocolVersion . decode ( Integer . parseInt ( args [ 2 ] ) ) : ProtocolVersion . CURRENT ; 
 + ProtocolVersion version = args . length = = 3 ? ProtocolVersion . decode ( Integer . parseInt ( args [ 2 ] ) , DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) ) : ProtocolVersion . CURRENT ; 
 
 EncryptionOptions encryptionOptions = new EncryptionOptions ( ) ; 
 System . out . println ( " CQL binary protocol console " + host + " @ " + port + " using native protocol version " + version ) ; 
 diff - - git a / src / java / org / apache / cassandra / transport / Frame . java b / src / java / org / apache / cassandra / transport / Frame . java 
 index d6a1cbc . . d3c810b 100644 
 - - - a / src / java / org / apache / cassandra / transport / Frame . java 
 + + + b / src / java / org / apache / cassandra / transport / Frame . java 
 @ @ - 174 , 7 + 174 , 7 @ @ public class Frame 
 int firstByte = buffer . getByte ( idx + + ) ; 
 Message . Direction direction = Message . Direction . extractFromVersion ( firstByte ) ; 
 int versionNum = firstByte & PROTOCOL _ VERSION _ MASK ; 
 - ProtocolVersion version = ProtocolVersion . decode ( versionNum ) ; 
 + ProtocolVersion version = ProtocolVersion . decode ( versionNum , DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) ) ; 
 
 / / Wait until we have the complete header 
 if ( readableBytes < Header . LENGTH ) 
 diff - - git a / src / java / org / apache / cassandra / transport / ProtocolVersion . java b / src / java / org / apache / cassandra / transport / ProtocolVersion . java 
 index e1f634c . . 546983f 100644 
 - - - a / src / java / org / apache / cassandra / transport / ProtocolVersion . java 
 + + + b / src / java / org / apache / cassandra / transport / ProtocolVersion . java 
 @ @ - 26 , 8 + 26 , 6 @ @ import java . util . Optional ; 
 
 import org . apache . commons . lang3 . ArrayUtils ; 
 
 - import org . apache . cassandra . config . DatabaseDescriptor ; 
 - 
 / * * 
 * The native ( CQL binary ) protocol version . 
 * 
 @ @ - 95 , 7 + 93 , 7 @ @ public enum ProtocolVersion implements Comparable < ProtocolVersion > 
 return versions ; 
 } 
 
 - public static ProtocolVersion decode ( int versionNum ) 
 + public static ProtocolVersion decode ( int versionNum , boolean allowOlderProtocols ) 
 { 
 ProtocolVersion ret = versionNum > = MIN _ SUPPORTED _ VERSION . num & & versionNum < = MAX _ SUPPORTED _ VERSION . num 
 ? SUPPORTED _ VERSIONS [ versionNum - MIN _ SUPPORTED _ VERSION . num ] 
 @ @ - 116 , 7 + 114 , 7 @ @ public enum ProtocolVersion implements Comparable < ProtocolVersion > 
 throw new ProtocolException ( invalidVersionMessage ( versionNum ) , MAX _ SUPPORTED _ VERSION ) ; 
 } 
 
 - if ( ! DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) & & ret . isSmallerThan ( CURRENT ) ) 
 + if ( ! allowOlderProtocols & & ret . isSmallerThan ( CURRENT ) ) 
 throw new ProtocolException ( String . format ( " Rejecting Protocol Version % s < % s . " , ret , ProtocolVersion . CURRENT ) ) ; 
 
 return ret ; 
 diff - - git a / test / unit / org / apache / cassandra / audit / FullQueryLoggerTest . java b / test / unit / org / apache / cassandra / audit / FullQueryLoggerTest . java 
 index 376bde5 . . 5fe078a 100644 
 - - - a / test / unit / org / apache / cassandra / audit / FullQueryLoggerTest . java 
 + + + b / test / unit / org / apache / cassandra / audit / FullQueryLoggerTest . java 
 @ @ - 443 , 7 + 443 , 7 @ @ public class FullQueryLoggerTest extends CQLTester 
 
 assertEquals ( 1L , wire . read ( QUERY _ START _ TIME ) . int64 ( ) ) ; 
 
 - ProtocolVersion protocolVersion = ProtocolVersion . decode ( wire . read ( PROTOCOL _ VERSION ) . int32 ( ) ) ; 
 + ProtocolVersion protocolVersion = ProtocolVersion . decode ( wire . read ( PROTOCOL _ VERSION ) . int32 ( ) , true ) ; 
 assertEquals ( ProtocolVersion . CURRENT , protocolVersion ) ; 
 
 QueryOptions queryOptions = QueryOptions . codec . decode ( Unpooled . wrappedBuffer ( wire . read ( QUERY _ OPTIONS ) . bytes ( ) ) , protocolVersion ) ; 
 @ @ - 517 , 7 + 517 , 7 @ @ public class FullQueryLoggerTest extends CQLTester 
 
 assertEquals ( 1L , wire . read ( QUERY _ START _ TIME ) . int64 ( ) ) ; 
 
 - ProtocolVersion protocolVersion = ProtocolVersion . decode ( wire . read ( PROTOCOL _ VERSION ) . int32 ( ) ) ; 
 + ProtocolVersion protocolVersion = ProtocolVersion . decode ( wire . read ( PROTOCOL _ VERSION ) . int32 ( ) , true ) ; 
 assertEquals ( ProtocolVersion . CURRENT , protocolVersion ) ; 
 
 QueryOptions queryOptions = QueryOptions . codec . decode ( Unpooled . wrappedBuffer ( wire . read ( QUERY _ OPTIONS ) . bytes ( ) ) , protocolVersion ) ; 
 diff - - git a / test / unit / org / apache / cassandra / transport / ProtocolVersionTest . java b / test / unit / org / apache / cassandra / transport / ProtocolVersionTest . java 
 index 2057998 . . 74bc407 100644 
 - - - a / test / unit / org / apache / cassandra / transport / ProtocolVersionTest . java 
 + + + b / test / unit / org / apache / cassandra / transport / ProtocolVersionTest . java 
 @ @ - 46 , 13 + 46 , 13 @ @ public class ProtocolVersionTest 
 public void testDecode ( ) 
 { 
 for ( ProtocolVersion version : ProtocolVersion . SUPPORTED ) 
 - Assert . assertEquals ( version , ProtocolVersion . decode ( version . asInt ( ) ) ) ; 
 + Assert . assertEquals ( version , ProtocolVersion . decode ( version . asInt ( ) , DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) ) ) ; 
 
 for ( ProtocolVersion version : ProtocolVersion . UNSUPPORTED ) 
 { / / unsupported old versions 
 try 
 { 
 - Assert . assertEquals ( version , ProtocolVersion . decode ( version . asInt ( ) ) ) ; 
 + Assert . assertEquals ( version , ProtocolVersion . decode ( version . asInt ( ) , DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) ) ) ; 
 Assert . fail ( " Expected invalid protocol exception " ) ; 
 } 
 catch ( ProtocolException ex ) 
 @ @ - 64 , 7 + 64 , 7 @ @ public class ProtocolVersionTest 
 
 try 
 { / / unsupported newer version 
 - Assert . assertEquals ( null , ProtocolVersion . decode ( 63 ) ) ; 
 + Assert . assertEquals ( null , ProtocolVersion . decode ( 63 , DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) ) ) ; 
 Assert . fail ( " Expected invalid protocol exception " ) ; 
 } 
 catch ( ProtocolException ex ) 
 @ @ - 133 , 7 + 133 , 7 @ @ public class ProtocolVersionTest 
 { 
 try 
 { 
 - ProtocolVersion . decode ( version . asInt ( ) ) ; 
 + ProtocolVersion . decode ( version . asInt ( ) , DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) ) ; 
 Assert . fail ( " Expected invalid protocol exception " ) ; 
 } 
 catch ( ProtocolException ex ) 
 @ @ - 141 , 6 + 141 , 6 @ @ public class ProtocolVersionTest 
 } 
 } 
 
 - Assert . assertEquals ( ProtocolVersion . CURRENT , ProtocolVersion . decode ( ProtocolVersion . CURRENT . asInt ( ) ) ) ; 
 + Assert . assertEquals ( ProtocolVersion . CURRENT , ProtocolVersion . decode ( ProtocolVersion . CURRENT . asInt ( ) , DatabaseDescriptor . getNativeTransportAllowOlderProtocols ( ) ) ) ; 
 } 
 } 
 diff - - git a / tools / fqltool / src / org / apache / cassandra / fqltool / FQLQueryReader . java b / tools / fqltool / src / org / apache / cassandra / fqltool / FQLQueryReader . java 
 index fd5073c . . 0c18b79 100644 
 - - - a / tools / fqltool / src / org / apache / cassandra / fqltool / FQLQueryReader . java 
 + + + b / tools / fqltool / src / org / apache / cassandra / fqltool / FQLQueryReader . java 
 @ @ - 57 , 7 + 57 , 7 @ @ public class FQLQueryReader implements ReadMarshallable 
 String type = wireIn . read ( TYPE ) . text ( ) ; 
 long queryStartTime = wireIn . read ( QUERY _ START _ TIME ) . int64 ( ) ; 
 int protocolVersion = wireIn . read ( PROTOCOL _ VERSION ) . int32 ( ) ; 
 - QueryOptions queryOptions = QueryOptions . codec . decode ( Unpooled . wrappedBuffer ( wireIn . read ( QUERY _ OPTIONS ) . bytes ( ) ) , ProtocolVersion . decode ( protocolVersion ) ) ; 
 + QueryOptions queryOptions = QueryOptions . codec . decode ( Unpooled . wrappedBuffer ( wireIn . read ( QUERY _ OPTIONS ) . bytes ( ) ) , ProtocolVersion . decode ( protocolVersion , true ) ) ; 
 long generatedTimestamp = wireIn . read ( GENERATED _ TIMESTAMP ) . int64 ( ) ; 
 int generatedNowInSeconds = wireIn . read ( GENERATED _ NOW _ IN _ SECONDS ) . int32 ( ) ; 
 String keyspace = wireIn . read ( KEYSPACE ) . text ( ) ; 
 diff - - git a / tools / fqltool / src / org / apache / cassandra / fqltool / commands / Dump . java b / tools / fqltool / src / org / apache / cassandra / fqltool / commands / Dump . java 
 index 1263a11 . . b3e1f22 100644 
 - - - a / tools / fqltool / src / org / apache / cassandra / fqltool / commands / Dump . java 
 + + + b / tools / fqltool / src / org / apache / cassandra / fqltool / commands / Dump . java 
 @ @ - 94 , 7 + 94 , 7 @ @ public class Dump implements Runnable 
 
 QueryOptions options = 
 QueryOptions . codec . decode ( Unpooled . wrappedBuffer ( wireIn . read ( FullQueryLogger . QUERY _ OPTIONS ) . bytes ( ) ) , 
 - ProtocolVersion . decode ( protocolVersion ) ) ; 
 + ProtocolVersion . decode ( protocolVersion , true ) ) ; 
 
 long generatedTimestamp = wireIn . read ( FullQueryLogger . GENERATED _ TIMESTAMP ) . int64 ( ) ; 
 sb . append ( " Generated timestamp : " )

NEAREST DIFF:
ELIMINATEDSENTENCE
