BLEU SCORE: 0.015445276590783498

TEST MSG: Make sure compaction throughput values doesn ' t overflow because of int math
GENERATED MSG: Update versions , news and changes for 1 . 0 . 11 release

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b2e892e . . 75c7104 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 5 + 1 , 6 @ @ <nl> 1 . 2 . 15 <nl> * Move handling of migration event source to solve bootstrap race ( CASSANDRA - 6648 ) <nl> + * Make sure compaction throughput value doesn ' t overflow with int math ( CASSANDRA - 6647 ) <nl> <nl> 1 . 2 . 14 <nl> * Reverted code to limit CQL prepared statement cache by size ( CASSANDRA - 6592 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> index d26a072 . . 471fd82 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> @ @ - 127 , 7 + 127 , 7 @ @ public class CompactionManager implements CompactionManagerMBean <nl> * / <nl> public RateLimiter getRateLimiter ( ) <nl> { <nl> - double currentThroughput = DatabaseDescriptor . getCompactionThroughputMbPerSec ( ) * 1024 * 1024 ; <nl> + double currentThroughput = DatabaseDescriptor . getCompactionThroughputMbPerSec ( ) * 1024 . 0 * 1024 . 0 ; <nl> / / if throughput is set to 0 , throttling is disabled <nl> if ( currentThroughput = = 0 | | StorageService . instance . isBootstrapMode ( ) ) <nl> currentThroughput = Double . MAX _ VALUE ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / CounterColumn . java b / src / java / org / apache / cassandra / db / CounterColumn . java <nl> index ecfe2f1 . . 0aa22ec 100644 <nl> - - - a / src / java / org / apache / cassandra / db / CounterColumn . java <nl> + + + b / src / java / org / apache / cassandra / db / CounterColumn . java <nl> @ @ - 24 , 7 + 24 , 8 @ @ import java . security . MessageDigest ; <nl> import java . util . concurrent . TimeoutException ; <nl> import java . util . Collection ; <nl> <nl> - import org . apache . log4j . Logger ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> <nl> import org . apache . cassandra . config . CFMetaData ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> @ @ - 46 , 7 + 47 , 7 @ @ import org . apache . cassandra . utils . * ; <nl> * / <nl> public class CounterColumn extends Column <nl> { <nl> - private static final Logger logger = Logger . getLogger ( CounterColumn . class ) ; <nl> + private static final Logger logger = LoggerFactory . getLogger ( CounterColumn . class ) ; <nl> <nl> protected static final CounterContext contextManager = CounterContext . instance ( ) ; <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b2e892e . . 75c7104 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 5 + 1 , 6 @ @ 
 1 . 2 . 15 
 * Move handling of migration event source to solve bootstrap race ( CASSANDRA - 6648 ) 
 + * Make sure compaction throughput value doesn ' t overflow with int math ( CASSANDRA - 6647 ) 
 
 1 . 2 . 14 
 * Reverted code to limit CQL prepared statement cache by size ( CASSANDRA - 6592 ) 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 index d26a072 . . 471fd82 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 @ @ - 127 , 7 + 127 , 7 @ @ public class CompactionManager implements CompactionManagerMBean 
 * / 
 public RateLimiter getRateLimiter ( ) 
 { 
 - double currentThroughput = DatabaseDescriptor . getCompactionThroughputMbPerSec ( ) * 1024 * 1024 ; 
 + double currentThroughput = DatabaseDescriptor . getCompactionThroughputMbPerSec ( ) * 1024 . 0 * 1024 . 0 ; 
 / / if throughput is set to 0 , throttling is disabled 
 if ( currentThroughput = = 0 | | StorageService . instance . isBootstrapMode ( ) ) 
 currentThroughput = Double . MAX _ VALUE ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / CounterColumn . java b / src / java / org / apache / cassandra / db / CounterColumn . java 
 index ecfe2f1 . . 0aa22ec 100644 
 - - - a / src / java / org / apache / cassandra / db / CounterColumn . java 
 + + + b / src / java / org / apache / cassandra / db / CounterColumn . java 
 @ @ - 24 , 7 + 24 , 8 @ @ import java . security . MessageDigest ; 
 import java . util . concurrent . TimeoutException ; 
 import java . util . Collection ; 
 
 - import org . apache . log4j . Logger ; 
 + import org . slf4j . Logger ; 
 + import org . slf4j . LoggerFactory ; 
 
 import org . apache . cassandra . config . CFMetaData ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 @ @ - 46 , 7 + 47 , 7 @ @ import org . apache . cassandra . utils . * ; 
 * / 
 public class CounterColumn extends Column 
 { 
 - private static final Logger logger = Logger . getLogger ( CounterColumn . class ) ; 
 + private static final Logger logger = LoggerFactory . getLogger ( CounterColumn . class ) ; 
 
 protected static final CounterContext contextManager = CounterContext . instance ( ) ; 

