BLEU SCORE: 0.041961149062965476

TEST MSG: fix : show CQL help in cqlsh in web browser
GENERATED MSG: python CQL driver result decoding

TEST DIFF (one line): diff - - git a / bin / cqlsh . py b / bin / cqlsh . py <nl> index e7dc121 . . 027a45e 100644 <nl> - - - a / bin / cqlsh . py <nl> + + + b / bin / cqlsh . py <nl> @ @ - 71 , 6 + 71 , 7 @ @ except ImportError : <nl> CQL _ LIB _ PREFIX = ' cassandra - driver - internal - only - ' <nl> <nl> CASSANDRA _ PATH = os . path . join ( os . path . dirname ( os . path . realpath ( _ _ file _ _ ) ) , ' . . ' ) <nl> + CASSANDRA _ CQL _ HTML _ FALLBACK = ' https : / / cassandra . apache . org / doc / cql3 / CQL - 2 . 2 . html ' <nl> <nl> if os . path . exists ( CASSANDRA _ PATH + ' / doc / cql3 / CQL . html ' ) : <nl> # default location of local CQL . html <nl> @ @ - 80 , 7 + 81 , 7 @ @ elif os . path . exists ( ' / usr / share / doc / cassandra / CQL . html ' ) : <nl> CASSANDRA _ CQL _ HTML = ' file : / / / usr / share / doc / cassandra / CQL . html ' <nl> else : <nl> # fallback to online version <nl> - CASSANDRA _ CQL _ HTML = ' https : / / cassandra . apache . org / doc / cql3 / CQL - 2 . 2 . html ' <nl> + CASSANDRA _ CQL _ HTML = CASSANDRA _ CQL _ HTML _ FALLBACK <nl> <nl> # On Linux , the Python webbrowser module uses the ' xdg - open ' executable <nl> # to open a file / URL . But that only works , if the current session has been <nl> @ @ - 92 , 7 + 93 , 9 @ @ else : <nl> # > > > webbrowser . _ tryorder <nl> # > > > webbrowser . _ browser <nl> # <nl> - if webbrowser . _ tryorder [ 0 ] = = ' xdg - open ' and os . environ . get ( ' XDG _ DATA _ DIRS ' , ' ' ) = = ' ' : <nl> + if len ( webbrowser . _ tryorder ) = = 0 : <nl> + CASSANDRA _ CQL _ HTML = CASSANDRA _ CQL _ HTML _ FALLBACK <nl> + elif webbrowser . _ tryorder [ 0 ] = = ' xdg - open ' and os . environ . get ( ' XDG _ DATA _ DIRS ' , ' ' ) = = ' ' : <nl> # only on Linux ( some OS with xdg - open ) <nl> webbrowser . _ tryorder . remove ( ' xdg - open ' ) <nl> webbrowser . _ tryorder . append ( ' xdg - open ' ) <nl> @ @ - 2213 , 7 + 2216 , 9 @ @ class Shell ( cmd . Cmd ) : <nl> urlpart = cqldocs . get _ help _ topic ( t ) <nl> if urlpart is not None : <nl> url = " % s # % s " % ( CASSANDRA _ CQL _ HTML , urlpart ) <nl> - if self . browser is not None : <nl> + if len ( webbrowser . _ tryorder ) = = 0 : <nl> + self . printerr ( " * * * No browser to display CQL help . URL for help topic % s : % s " % ( t , url ) ) <nl> + elif self . browser is not None : <nl> webbrowser . get ( self . browser ) . open _ new _ tab ( url ) <nl> else : <nl> webbrowser . open _ new _ tab ( url ) <nl> diff - - git a / pylib / cqlshlib / helptopics . py b / pylib / cqlshlib / helptopics . py <nl> index c2eebe3 . . 279063b 100644 <nl> - - - a / pylib / cqlshlib / helptopics . py <nl> + + + b / pylib / cqlshlib / helptopics . py <nl> @ @ - 14 , 8 + 14 , 6 @ @ <nl> # See the License for the specific language governing permissions and <nl> # limitations under the License . <nl> <nl> - from . cql3handling import simple _ cql _ types <nl> - <nl> <nl> class CQL3HelpTopics ( object ) : <nl> <nl> @ @ - 73 , 8 + 71 , 10 @ @ class CQL3HelpTopics ( object ) : <nl> <nl> def help _ json ( self ) : <nl> return ' json ' <nl> + <nl> def help _ select _ json ( self ) : <nl> return ' selectJson ' <nl> + <nl> def help _ insert _ json ( self ) : <nl> return ' insertJson ' <nl> <nl> @ @ - 85 , 21 + 85 , 27 @ @ class CQL3HelpTopics ( object ) : <nl> <nl> def help _ create _ keyspace ( self ) : <nl> return ' createKeyspaceStmt ' <nl> + <nl> def help _ alter _ keyspace ( self ) : <nl> return ' alterKeyspaceStmt ' <nl> + <nl> def help _ drop _ keyspace ( self ) : <nl> return ' dropKeyspaceStmt ' <nl> <nl> def help _ create _ table ( self ) : <nl> return ' createTableStmt ' <nl> help _ create _ columnfamily = help _ create _ table <nl> + <nl> def help _ alter _ table ( self ) : <nl> return ' alterTableStmt ' <nl> + <nl> def help _ drop _ table ( self ) : <nl> return ' dropTableStmt ' <nl> help _ drop _ columnfamily = help _ drop _ table <nl> + <nl> def help _ create _ index ( self ) : <nl> return ' createIndexStmt ' <nl> + <nl> def help _ drop _ index ( self ) : <nl> return ' dropIndexStmt ' <nl> <nl> @ @ - 108 , 27 + 114 , 34 @ @ class CQL3HelpTopics ( object ) : <nl> <nl> def help _ create _ type ( self ) : <nl> return ' createTypeStmt ' <nl> + <nl> def help _ alter _ type ( self ) : <nl> return ' alterTypeStmt ' <nl> + <nl> def help _ drop _ type ( self ) : <nl> return ' dropTypeStmt ' <nl> <nl> def help _ create _ function ( self ) : <nl> return ' createFunctionStmt ' <nl> + <nl> def help _ drop _ function ( self ) : <nl> return ' dropFunctionStmt ' <nl> + <nl> def help _ functions ( self ) : <nl> return ' functions ' <nl> <nl> def help _ create _ aggregate ( self ) : <nl> return ' createAggregateStmt ' <nl> + <nl> def help _ drop _ aggregate ( self ) : <nl> return ' dropAggregateStmt ' <nl> + <nl> def help _ aggregates ( self ) : <nl> return ' aggregates ' <nl> <nl> def help _ create _ trigger ( self ) : <nl> return ' createTriggerStmt ' <nl> + <nl> def help _ drop _ trigger ( self ) : <nl> return ' dropTriggerStmt ' <nl> <nl> @ @ - 137 , 19 + 150 , 24 @ @ class CQL3HelpTopics ( object ) : <nl> <nl> def help _ create _ user ( self ) : <nl> return ' createUserStmt ' <nl> + <nl> def help _ alter _ user ( self ) : <nl> return ' alterUserStmt ' <nl> + <nl> def help _ drop _ user ( self ) : <nl> return ' dropUserStmt ' <nl> + <nl> def help _ list _ users ( self ) : <nl> return ' listUsersStmt ' <nl> <nl> def help _ permissions ( self ) : <nl> return ' permissions ' <nl> + <nl> def help _ list _ permissions ( self ) : <nl> return ' listPermissionsStmt ' <nl> <nl> def help _ grant ( self ) : <nl> return ' grantRoleStmt ' <nl> + <nl> def help _ revoke ( self ) : <nl> return ' revokeRoleStmt '
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 7cfd8ac . . 649c843 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 12 , 6 + 12 , 8 @ @ <nl> * validate index names for \ w + ( CASSANDRA - 2196 ) <nl> * Fix Cassandra cli to respect timeout if schema does not settle ( CASSANDRA - 2187 ) <nl> * update memtable _ throughput to be a long ( CASSANDRA - 2158 ) <nl> + * fix for cleanup writing old - format data into new - version sstable <nl> + ( CASSANRDRA - 2211 ) <nl> <nl> <nl> 0 . 7 . 2 <nl> diff - - git a / src / java / org / apache / cassandra / db / CompactionManager . java b / src / java / org / apache / cassandra / db / CompactionManager . java <nl> index b730b9c . . 8ded7e9 100644 <nl> - - - a / src / java / org / apache / cassandra / db / CompactionManager . java <nl> + + + b / src / java / org / apache / cassandra / db / CompactionManager . java <nl> @ @ - 41 , 9 + 41 , 7 @ @ import org . slf4j . LoggerFactory ; <nl> import org . apache . cassandra . concurrent . DebuggableThreadPoolExecutor ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . dht . Range ; <nl> - import org . apache . cassandra . io . AbstractCompactedRow ; <nl> - import org . apache . cassandra . io . CompactionIterator ; <nl> - import org . apache . cassandra . io . ICompactionInfo ; <nl> + import org . apache . cassandra . io . * ; <nl> import org . apache . cassandra . io . sstable . * ; <nl> import org . apache . cassandra . io . util . FileUtils ; <nl> import org . apache . cassandra . service . AntiEntropyService ; <nl> @ @ - 119 , 7 + 117 , 7 @ @ public class CompactionManager implements CompactionManagerMBean <nl> Collections . sort ( sstables ) ; <nl> int gcBefore = cfs . isIndex ( ) <nl> ? Integer . MAX _ VALUE <nl> - : ( int ) ( System . currentTimeMillis ( ) / 1000 ) - cfs . metadata . getGcGraceSeconds ( ) ; <nl> + : getDefaultGcBefore ( cfs ) ; <nl> return doCompaction ( cfs , <nl> sstables . subList ( 0 , Math . min ( sstables . size ( ) , maxThreshold ) ) , <nl> gcBefore ) ; <nl> @ @ - 183 , 7 + 181 , 7 @ @ public class CompactionManager implements CompactionManagerMBean <nl> <nl> public void performMajor ( final ColumnFamilyStore cfStore ) throws InterruptedException , ExecutionException <nl> { <nl> - submitMajor ( cfStore , 0 , ( int ) ( System . currentTimeMillis ( ) / 1000 ) - cfStore . metadata . getGcGraceSeconds ( ) ) . get ( ) ; <nl> + submitMajor ( cfStore , 0 , getDefaultGcBefore ( cfStore ) ) . get ( ) ; <nl> } <nl> <nl> public Future < Object > submitMajor ( final ColumnFamilyStore cfStore , final long skip , final int gcBefore ) <nl> @ @ - 256 , 7 + 254 , 7 @ @ public class CompactionManager implements CompactionManagerMBean <nl> } <nl> <nl> ColumnFamilyStore cfs = Table . open ( ksname ) . getColumnFamilyStore ( cfname ) ; <nl> - submitUserDefined ( cfs , descriptors , ( int ) ( System . currentTimeMillis ( ) / 1000 ) - cfs . metadata . getGcGraceSeconds ( ) ) ; <nl> + submitUserDefined ( cfs , descriptors , getDefaultGcBefore ( cfs ) ) ; <nl> } <nl> <nl> private Future < Object > submitUserDefined ( final ColumnFamilyStore cfs , final Collection < Descriptor > dataFiles , final int gcBefore ) <nl> @ @ - 515 , 7 + 513 , 7 @ @ public class CompactionManager implements CompactionManagerMBean <nl> if ( Range . isTokenInRanges ( row . getKey ( ) . token , ranges ) ) <nl> { <nl> writer = maybeCreateWriter ( cfs , compactionFileLocation , expectedBloomFilterSize , writer ) ; <nl> - writer . append ( new EchoedRow ( row ) ) ; <nl> + writer . append ( getCompactedRow ( row , cfs , sstable . descriptor ) ) ; <nl> totalkeysWritten + + ; <nl> } <nl> else <nl> @ @ - 568 , 6 + 566 , 21 @ @ public class CompactionManager implements CompactionManagerMBean <nl> } <nl> } <nl> <nl> + / * * <nl> + * @ return an AbstractCompactedRow implementation to write the row in question . <nl> + * If the data is from a current - version sstable , write it unchanged . Otherwise , <nl> + * re - serialize it in the latest version . <nl> + * / <nl> + private AbstractCompactedRow getCompactedRow ( SSTableIdentityIterator row , ColumnFamilyStore cfs , Descriptor descriptor ) <nl> + { <nl> + if ( descriptor . isLatestVersion ) <nl> + return new EchoedRow ( row ) ; <nl> + <nl> + return row . dataSize > DatabaseDescriptor . getInMemoryCompactionLimit ( ) <nl> + ? new LazilyCompactedRow ( cfs , Arrays . asList ( row ) , false , getDefaultGcBefore ( cfs ) ) <nl> + : new PrecompactedRow ( cfs , Arrays . asList ( row ) , false , getDefaultGcBefore ( cfs ) ) ; <nl> + } <nl> + <nl> private SSTableWriter maybeCreateWriter ( ColumnFamilyStore cfs , String compactionFileLocation , int expectedBloomFilterSize , SSTableWriter writer ) <nl> throws IOException <nl> { <nl> @ @ - 752 , 11 + 765 , 16 @ @ public class CompactionManager implements CompactionManagerMBean <nl> return executor . submit ( runnable ) ; <nl> } <nl> <nl> + private static int getDefaultGcBefore ( ColumnFamilyStore cfs ) <nl> + { <nl> + return ( int ) ( System . currentTimeMillis ( ) / 1000 ) - cfs . metadata . getGcGraceSeconds ( ) ; <nl> + } <nl> + <nl> private static class ValidationCompactionIterator extends CompactionIterator <nl> { <nl> public ValidationCompactionIterator ( ColumnFamilyStore cfs ) throws IOException <nl> { <nl> - super ( cfs , cfs . getSSTables ( ) , ( int ) ( System . currentTimeMillis ( ) / 1000 ) - cfs . metadata . getGcGraceSeconds ( ) , true ) ; <nl> + super ( cfs , cfs . getSSTables ( ) , getDefaultGcBefore ( cfs ) , true ) ; <nl> } <nl> <nl> @ Override

TEST DIFF:
diff - - git a / bin / cqlsh . py b / bin / cqlsh . py 
 index e7dc121 . . 027a45e 100644 
 - - - a / bin / cqlsh . py 
 + + + b / bin / cqlsh . py 
 @ @ - 71 , 6 + 71 , 7 @ @ except ImportError : 
 CQL _ LIB _ PREFIX = ' cassandra - driver - internal - only - ' 
 
 CASSANDRA _ PATH = os . path . join ( os . path . dirname ( os . path . realpath ( _ _ file _ _ ) ) , ' . . ' ) 
 + CASSANDRA _ CQL _ HTML _ FALLBACK = ' https : / / cassandra . apache . org / doc / cql3 / CQL - 2 . 2 . html ' 
 
 if os . path . exists ( CASSANDRA _ PATH + ' / doc / cql3 / CQL . html ' ) : 
 # default location of local CQL . html 
 @ @ - 80 , 7 + 81 , 7 @ @ elif os . path . exists ( ' / usr / share / doc / cassandra / CQL . html ' ) : 
 CASSANDRA _ CQL _ HTML = ' file : / / / usr / share / doc / cassandra / CQL . html ' 
 else : 
 # fallback to online version 
 - CASSANDRA _ CQL _ HTML = ' https : / / cassandra . apache . org / doc / cql3 / CQL - 2 . 2 . html ' 
 + CASSANDRA _ CQL _ HTML = CASSANDRA _ CQL _ HTML _ FALLBACK 
 
 # On Linux , the Python webbrowser module uses the ' xdg - open ' executable 
 # to open a file / URL . But that only works , if the current session has been 
 @ @ - 92 , 7 + 93 , 9 @ @ else : 
 # > > > webbrowser . _ tryorder 
 # > > > webbrowser . _ browser 
 # 
 - if webbrowser . _ tryorder [ 0 ] = = ' xdg - open ' and os . environ . get ( ' XDG _ DATA _ DIRS ' , ' ' ) = = ' ' : 
 + if len ( webbrowser . _ tryorder ) = = 0 : 
 + CASSANDRA _ CQL _ HTML = CASSANDRA _ CQL _ HTML _ FALLBACK 
 + elif webbrowser . _ tryorder [ 0 ] = = ' xdg - open ' and os . environ . get ( ' XDG _ DATA _ DIRS ' , ' ' ) = = ' ' : 
 # only on Linux ( some OS with xdg - open ) 
 webbrowser . _ tryorder . remove ( ' xdg - open ' ) 
 webbrowser . _ tryorder . append ( ' xdg - open ' ) 
 @ @ - 2213 , 7 + 2216 , 9 @ @ class Shell ( cmd . Cmd ) : 
 urlpart = cqldocs . get _ help _ topic ( t ) 
 if urlpart is not None : 
 url = " % s # % s " % ( CASSANDRA _ CQL _ HTML , urlpart ) 
 - if self . browser is not None : 
 + if len ( webbrowser . _ tryorder ) = = 0 : 
 + self . printerr ( " * * * No browser to display CQL help . URL for help topic % s : % s " % ( t , url ) ) 
 + elif self . browser is not None : 
 webbrowser . get ( self . browser ) . open _ new _ tab ( url ) 
 else : 
 webbrowser . open _ new _ tab ( url ) 
 diff - - git a / pylib / cqlshlib / helptopics . py b / pylib / cqlshlib / helptopics . py 
 index c2eebe3 . . 279063b 100644 
 - - - a / pylib / cqlshlib / helptopics . py 
 + + + b / pylib / cqlshlib / helptopics . py 
 @ @ - 14 , 8 + 14 , 6 @ @ 
 # See the License for the specific language governing permissions and 
 # limitations under the License . 
 
 - from . cql3handling import simple _ cql _ types 
 - 
 
 class CQL3HelpTopics ( object ) : 
 
 @ @ - 73 , 8 + 71 , 10 @ @ class CQL3HelpTopics ( object ) : 
 
 def help _ json ( self ) : 
 return ' json ' 
 + 
 def help _ select _ json ( self ) : 
 return ' selectJson ' 
 + 
 def help _ insert _ json ( self ) : 
 return ' insertJson ' 
 
 @ @ - 85 , 21 + 85 , 27 @ @ class CQL3HelpTopics ( object ) : 
 
 def help _ create _ keyspace ( self ) : 
 return ' createKeyspaceStmt ' 
 + 
 def help _ alter _ keyspace ( self ) : 
 return ' alterKeyspaceStmt ' 
 + 
 def help _ drop _ keyspace ( self ) : 
 return ' dropKeyspaceStmt ' 
 
 def help _ create _ table ( self ) : 
 return ' createTableStmt ' 
 help _ create _ columnfamily = help _ create _ table 
 + 
 def help _ alter _ table ( self ) : 
 return ' alterTableStmt ' 
 + 
 def help _ drop _ table ( self ) : 
 return ' dropTableStmt ' 
 help _ drop _ columnfamily = help _ drop _ table 
 + 
 def help _ create _ index ( self ) : 
 return ' createIndexStmt ' 
 + 
 def help _ drop _ index ( self ) : 
 return ' dropIndexStmt ' 
 
 @ @ - 108 , 27 + 114 , 34 @ @ class CQL3HelpTopics ( object ) : 
 
 def help _ create _ type ( self ) : 
 return ' createTypeStmt ' 
 + 
 def help _ alter _ type ( self ) : 
 return ' alterTypeStmt ' 
 + 
 def help _ drop _ type ( self ) : 
 return ' dropTypeStmt ' 
 
 def help _ create _ function ( self ) : 
 return ' createFunctionStmt ' 
 + 
 def help _ drop _ function ( self ) : 
 return ' dropFunctionStmt ' 
 + 
 def help _ functions ( self ) : 
 return ' functions ' 
 
 def help _ create _ aggregate ( self ) : 
 return ' createAggregateStmt ' 
 + 
 def help _ drop _ aggregate ( self ) : 
 return ' dropAggregateStmt ' 
 + 
 def help _ aggregates ( self ) : 
 return ' aggregates ' 
 
 def help _ create _ trigger ( self ) : 
 return ' createTriggerStmt ' 
 + 
 def help _ drop _ trigger ( self ) : 
 return ' dropTriggerStmt ' 
 
 @ @ - 137 , 19 + 150 , 24 @ @ class CQL3HelpTopics ( object ) : 
 
 def help _ create _ user ( self ) : 
 return ' createUserStmt ' 
 + 
 def help _ alter _ user ( self ) : 
 return ' alterUserStmt ' 
 + 
 def help _ drop _ user ( self ) : 
 return ' dropUserStmt ' 
 + 
 def help _ list _ users ( self ) : 
 return ' listUsersStmt ' 
 
 def help _ permissions ( self ) : 
 return ' permissions ' 
 + 
 def help _ list _ permissions ( self ) : 
 return ' listPermissionsStmt ' 
 
 def help _ grant ( self ) : 
 return ' grantRoleStmt ' 
 + 
 def help _ revoke ( self ) : 
 return ' revokeRoleStmt '

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 7cfd8ac . . 649c843 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 12 , 6 + 12 , 8 @ @ 
 * validate index names for \ w + ( CASSANDRA - 2196 ) 
 * Fix Cassandra cli to respect timeout if schema does not settle ( CASSANDRA - 2187 ) 
 * update memtable _ throughput to be a long ( CASSANDRA - 2158 ) 
 + * fix for cleanup writing old - format data into new - version sstable 
 + ( CASSANRDRA - 2211 ) 
 
 
 0 . 7 . 2 
 diff - - git a / src / java / org / apache / cassandra / db / CompactionManager . java b / src / java / org / apache / cassandra / db / CompactionManager . java 
 index b730b9c . . 8ded7e9 100644 
 - - - a / src / java / org / apache / cassandra / db / CompactionManager . java 
 + + + b / src / java / org / apache / cassandra / db / CompactionManager . java 
 @ @ - 41 , 9 + 41 , 7 @ @ import org . slf4j . LoggerFactory ; 
 import org . apache . cassandra . concurrent . DebuggableThreadPoolExecutor ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . dht . Range ; 
 - import org . apache . cassandra . io . AbstractCompactedRow ; 
 - import org . apache . cassandra . io . CompactionIterator ; 
 - import org . apache . cassandra . io . ICompactionInfo ; 
 + import org . apache . cassandra . io . * ; 
 import org . apache . cassandra . io . sstable . * ; 
 import org . apache . cassandra . io . util . FileUtils ; 
 import org . apache . cassandra . service . AntiEntropyService ; 
 @ @ - 119 , 7 + 117 , 7 @ @ public class CompactionManager implements CompactionManagerMBean 
 Collections . sort ( sstables ) ; 
 int gcBefore = cfs . isIndex ( ) 
 ? Integer . MAX _ VALUE 
 - : ( int ) ( System . currentTimeMillis ( ) / 1000 ) - cfs . metadata . getGcGraceSeconds ( ) ; 
 + : getDefaultGcBefore ( cfs ) ; 
 return doCompaction ( cfs , 
 sstables . subList ( 0 , Math . min ( sstables . size ( ) , maxThreshold ) ) , 
 gcBefore ) ; 
 @ @ - 183 , 7 + 181 , 7 @ @ public class CompactionManager implements CompactionManagerMBean 
 
 public void performMajor ( final ColumnFamilyStore cfStore ) throws InterruptedException , ExecutionException 
 { 
 - submitMajor ( cfStore , 0 , ( int ) ( System . currentTimeMillis ( ) / 1000 ) - cfStore . metadata . getGcGraceSeconds ( ) ) . get ( ) ; 
 + submitMajor ( cfStore , 0 , getDefaultGcBefore ( cfStore ) ) . get ( ) ; 
 } 
 
 public Future < Object > submitMajor ( final ColumnFamilyStore cfStore , final long skip , final int gcBefore ) 
 @ @ - 256 , 7 + 254 , 7 @ @ public class CompactionManager implements CompactionManagerMBean 
 } 
 
 ColumnFamilyStore cfs = Table . open ( ksname ) . getColumnFamilyStore ( cfname ) ; 
 - submitUserDefined ( cfs , descriptors , ( int ) ( System . currentTimeMillis ( ) / 1000 ) - cfs . metadata . getGcGraceSeconds ( ) ) ; 
 + submitUserDefined ( cfs , descriptors , getDefaultGcBefore ( cfs ) ) ; 
 } 
 
 private Future < Object > submitUserDefined ( final ColumnFamilyStore cfs , final Collection < Descriptor > dataFiles , final int gcBefore ) 
 @ @ - 515 , 7 + 513 , 7 @ @ public class CompactionManager implements CompactionManagerMBean 
 if ( Range . isTokenInRanges ( row . getKey ( ) . token , ranges ) ) 
 { 
 writer = maybeCreateWriter ( cfs , compactionFileLocation , expectedBloomFilterSize , writer ) ; 
 - writer . append ( new EchoedRow ( row ) ) ; 
 + writer . append ( getCompactedRow ( row , cfs , sstable . descriptor ) ) ; 
 totalkeysWritten + + ; 
 } 
 else 
 @ @ - 568 , 6 + 566 , 21 @ @ public class CompactionManager implements CompactionManagerMBean 
 } 
 } 
 
 + / * * 
 + * @ return an AbstractCompactedRow implementation to write the row in question . 
 + * If the data is from a current - version sstable , write it unchanged . Otherwise , 
 + * re - serialize it in the latest version . 
 + * / 
 + private AbstractCompactedRow getCompactedRow ( SSTableIdentityIterator row , ColumnFamilyStore cfs , Descriptor descriptor ) 
 + { 
 + if ( descriptor . isLatestVersion ) 
 + return new EchoedRow ( row ) ; 
 + 
 + return row . dataSize > DatabaseDescriptor . getInMemoryCompactionLimit ( ) 
 + ? new LazilyCompactedRow ( cfs , Arrays . asList ( row ) , false , getDefaultGcBefore ( cfs ) ) 
 + : new PrecompactedRow ( cfs , Arrays . asList ( row ) , false , getDefaultGcBefore ( cfs ) ) ; 
 + } 
 + 
 private SSTableWriter maybeCreateWriter ( ColumnFamilyStore cfs , String compactionFileLocation , int expectedBloomFilterSize , SSTableWriter writer ) 
 throws IOException 
 { 
 @ @ - 752 , 11 + 765 , 16 @ @ public class CompactionManager implements CompactionManagerMBean 
 return executor . submit ( runnable ) ; 
 } 
 
 + private static int getDefaultGcBefore ( ColumnFamilyStore cfs ) 
 + { 
 + return ( int ) ( System . currentTimeMillis ( ) / 1000 ) - cfs . metadata . getGcGraceSeconds ( ) ; 
 + } 
 + 
 private static class ValidationCompactionIterator extends CompactionIterator 
 { 
 public ValidationCompactionIterator ( ColumnFamilyStore cfs ) throws IOException 
 { 
 - super ( cfs , cfs . getSSTables ( ) , ( int ) ( System . currentTimeMillis ( ) / 1000 ) - cfs . metadata . getGcGraceSeconds ( ) , true ) ; 
 + super ( cfs , cfs . getSSTables ( ) , getDefaultGcBefore ( cfs ) , true ) ; 
 } 
 
 @ Override
