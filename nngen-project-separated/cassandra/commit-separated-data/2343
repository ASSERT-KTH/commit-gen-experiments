BLEU SCORE: 0.014199193612838947

TEST MSG: ninja fix : raise default concurrent compactors to 4 to avoid LCS test timeout
GENERATED MSG: column families of expected type ( JDBC tests )

TEST DIFF (one line): diff - - git a / test / conf / cassandra . yaml b / test / conf / cassandra . yaml <nl> index 26d0ee5 . . 43995e6 100644 <nl> - - - a / test / conf / cassandra . yaml <nl> + + + b / test / conf / cassandra . yaml <nl> @ @ - 33 , 4 + 33 , 5 @ @ server _ encryption _ options : <nl> truststore : conf / . truststore <nl> truststore _ password : cassandra <nl> incremental _ backups : true <nl> + concurrent _ compactors : 4 <nl> compaction _ throughput _ mb _ per _ sec : 0
NEAREST DIFF (one line): diff - - git a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraResultSet . java b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraResultSet . java <nl> index 9770689 . . 91c0300 100644 <nl> - - - a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraResultSet . java <nl> + + + b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraResultSet . java <nl> @ @ - 25 , 6 + 25 , 7 @ @ import java . io . Reader ; <nl> import java . math . BigDecimal ; <nl> import java . math . BigInteger ; <nl> import java . net . URL ; <nl> + import java . nio . ByteBuffer ; <nl> import java . sql . Array ; <nl> import java . sql . Blob ; <nl> import java . sql . Clob ; <nl> @ @ - 360 , 7 + 361 , 7 @ @ class CassandraResultSet implements ResultSet <nl> * / <nl> public byte [ ] getBytes ( int index ) throws SQLException <nl> { <nl> - return values . get ( index ) ! = null ? ( byte [ ] ) values . get ( index ) . getValue ( ) : null ; <nl> + return values . get ( index ) ! = null ? ( ( ByteBuffer ) values . get ( index ) . getValue ( ) ) . array ( ) : null ; <nl> } <nl> <nl> / * * <nl> @ @ - 371 , 7 + 372 , 7 @ @ class CassandraResultSet implements ResultSet <nl> public byte [ ] getBytes ( String name ) throws SQLException <nl> { <nl> String nameAsString = decoder . colNameAsString ( keyspace , columnFamily , name ) ; <nl> - return valueMap . get ( nameAsString ) ! = null ? ( byte [ ] ) valueMap . get ( nameAsString ) : null ; <nl> + return valueMap . get ( nameAsString ) ! = null ? ( ( ByteBuffer ) valueMap . get ( nameAsString ) ) . array ( ) : null ; <nl> } <nl> <nl> / * * <nl> diff - - git a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraStatement . java b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraStatement . java <nl> index 2979b4e . . 5ae3a46 100644 <nl> - - - a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraStatement . java <nl> + + + b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraStatement . java <nl> @ @ - 248 , 7 + 248 , 7 @ @ class CassandraStatement implements PreparedStatement <nl> } <nl> catch ( InvalidRequestException e ) <nl> { <nl> - throw new SQLException ( e . getMessage ( ) ) ; <nl> + throw new SQLException ( e . getWhy ( ) ) ; <nl> } <nl> catch ( UnavailableException e ) <nl> { <nl> diff - - git a / drivers / java / test / org / apache / cassandra / cql / JdbcDriverTest . java b / drivers / java / test / org / apache / cassandra / cql / JdbcDriverTest . java <nl> index 5e01890 . . a072442 100644 <nl> - - - a / drivers / java / test / org / apache / cassandra / cql / JdbcDriverTest . java <nl> + + + b / drivers / java / test / org / apache / cassandra / cql / JdbcDriverTest . java <nl> @ @ - 55 , 13 + 55 , 13 @ @ public class JdbcDriverTest extends EmbeddedServiceBase <nl> con = DriverManager . getConnection ( " jdbc : cassandra : root / root @ localhost : 9170 / Keyspace1 " ) ; <nl> String [ ] inserts = <nl> { <nl> - / / String . format ( " UPDATE Standard1 SET \ " % s \ " = \ " % s \ " , \ " % s \ " = \ " % s \ " WHERE KEY = \ " jsmith \ " " , first , firstrec , last , lastrec ) , <nl> - " UPDATE JdbcInteger SET 1 = 11 , 2 = 22 WHERE KEY = \ " jsmith \ " " , <nl> - " UPDATE JdbcInteger SET 3 = 33 , 4 = 44 WHERE KEY = \ " jsmith \ " " , <nl> - " UPDATE JdbcLong SET 1L = 11L , 2L = 22L WHERE KEY = \ " jsmith \ " " , <nl> - " UPDATE JdbcAscii SET \ " first \ " = \ " firstrec \ " , \ " last \ " = \ " lastrec \ " WHERE key = \ " jsmith \ " " , <nl> - / / String . format ( " UPDATE JdbcBytes SET \ " % s \ " = \ " % s \ " , \ " % s \ " = \ " % s \ " WHERE key = \ " jsmith \ " " , first , firstrec , last , lastrec ) , <nl> - " UPDATE JdbcUtf8 SET \ " first \ " = \ " firstrec \ " , \ " last \ " = \ " lastrec \ " WHERE key = \ " jsmith \ " " , <nl> + String . format ( " UPDATE Standard1 SET ' % s ' = ' % s ' , ' % s ' = ' % s ' WHERE KEY = ' jsmith ' " , first , firstrec , last , lastrec ) , <nl> + " UPDATE JdbcInteger SET 1 = 11 , 2 = 22 WHERE KEY = ' jsmith ' " , <nl> + " UPDATE JdbcInteger SET 3 = 33 , 4 = 44 WHERE KEY = ' jsmith ' " , <nl> + " UPDATE JdbcLong SET 1 = 11 , 2 = 22 WHERE KEY = ' jsmith ' " , <nl> + " UPDATE JdbcAscii SET ' first ' = ' firstrec ' , ' last ' = ' lastrec ' WHERE key = ' jsmith ' " , <nl> + String . format ( " UPDATE JdbcBytes SET ' % s ' = ' % s ' , ' % s ' = ' % s ' WHERE key = ' jsmith ' " , first , firstrec , last , lastrec ) , <nl> + " UPDATE JdbcUtf8 SET ' first ' = ' firstrec ' , ' last ' = ' lastrec ' WHERE key = ' jsmith ' " , <nl> } ; <nl> for ( String q : inserts ) <nl> executeNoResults ( con , q ) ; <nl> @ @ - 73 , 28 + 73 , 28 @ @ public class JdbcDriverTest extends EmbeddedServiceBase <nl> { <nl> Statement stmt = con . createStatement ( ) ; <nl> <nl> - / / String selectQ = String . format ( " SELECT \ " % s \ " , \ " % s \ " FROM Standard1 WHERE KEY = \ " jsmith \ " " , first , last ) ; <nl> + / / String selectQ = String . format ( " SELECT ' % s ' , ' % s ' FROM Standard1 WHERE KEY = ' jsmith ' " , first , last ) ; <nl> / / checkResultSet ( stmt . executeQuery ( selectQ ) , " Bytes " , 1 , first , last ) ; <nl> <nl> - String selectQ = " SELECT 1 , 2 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " ; <nl> + String selectQ = " SELECT 1 , 2 FROM JdbcInteger WHERE KEY = ' jsmith ' " ; <nl> checkResultSet ( stmt . executeQuery ( selectQ ) , " Int " , 1 , " 1 " , " 2 " ) ; <nl> <nl> - selectQ = " SELECT 3 , 4 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " ; <nl> + selectQ = " SELECT 3 , 4 FROM JdbcInteger WHERE KEY = ' jsmith ' " ; <nl> checkResultSet ( stmt . executeQuery ( selectQ ) , " Int " , 1 , " 3 " , " 4 " ) ; <nl> <nl> - selectQ = " SELECT 1 , 2 , 3 , 4 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " ; <nl> + selectQ = " SELECT 1 , 2 , 3 , 4 FROM JdbcInteger WHERE KEY = ' jsmith ' " ; <nl> checkResultSet ( stmt . executeQuery ( selectQ ) , " Int " , 1 , " 1 " , " 2 " , " 3 " , " 4 " ) ; <nl> <nl> - selectQ = " SELECT 1L , 2L FROM JdbcLong WHERE KEY = \ " jsmith \ " " ; <nl> + selectQ = " SELECT 1 , 2 FROM JdbcLong WHERE KEY = ' jsmith ' " ; <nl> checkResultSet ( stmt . executeQuery ( selectQ ) , " Long " , 1 , " 1 " , " 2 " ) ; <nl> <nl> - selectQ = " SELECT \ " first \ " , \ " last \ " FROM JdbcAscii WHERE KEY = \ " jsmith \ " " ; <nl> + selectQ = " SELECT ' first ' , ' last ' FROM JdbcAscii WHERE KEY = ' jsmith ' " ; <nl> checkResultSet ( stmt . executeQuery ( selectQ ) , " String " , 1 , " first " , " last " ) ; <nl> <nl> - / / selectQ = String . format ( " SELECT \ " % s \ " , \ " % s \ " FROM JdbcBytes WHERE KEY = \ " jsmith \ " " , first , last ) ; <nl> + / / selectQ = String . format ( " SELECT ' % s ' , ' % s ' FROM JdbcBytes WHERE KEY = ' jsmith ' " , first , last ) ; <nl> / / checkResultSet ( stmt . executeQuery ( selectQ ) , " Bytes " , 1 , first , last ) ; <nl> <nl> - selectQ = " SELECT \ " first \ " , \ " last \ " FROM JdbcUtf8 WHERE KEY = \ " jsmith \ " " ; <nl> + selectQ = " SELECT ' first ' , ' last ' FROM JdbcUtf8 WHERE KEY = ' jsmith ' " ; <nl> checkResultSet ( stmt . executeQuery ( selectQ ) , " String " , 1 , " first " , " last " ) ; <nl> } <nl> <nl> @ @ - 102 , 28 + 102 , 28 @ @ public class JdbcDriverTest extends EmbeddedServiceBase <nl> @ Test <nl> public void testWithPreparedStatement ( ) throws SQLException <nl> { <nl> - / / String selectQ = " SELECT \ " first \ " , \ " last \ " FROM Standard1 WHERE KEY = \ " jsmith \ " " ; <nl> - / / checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Bytes " , 1 , " first " , " last " ) ; <nl> + String selectQ = String . format ( " SELECT ' % s ' , ' % s ' FROM Standard1 WHERE KEY = ' jsmith ' " , first , last ) ; <nl> + checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Bytes " , 1 , first , last ) ; <nl> <nl> - String selectQ = " SELECT 1 , 2 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " ; <nl> + selectQ = " SELECT 1 , 2 FROM JdbcInteger WHERE KEY = ' jsmith ' " ; <nl> checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Int " , 1 , " 1 " , " 2 " ) ; <nl> <nl> - selectQ = " SELECT 3 , 4 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " ; <nl> + selectQ = " SELECT 3 , 4 FROM JdbcInteger WHERE KEY = ' jsmith ' " ; <nl> checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Int " , 1 , " 3 " , " 4 " ) ; <nl> <nl> - selectQ = " SELECT 1 , 2 , 3 , 4 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " ; <nl> + selectQ = " SELECT 1 , 2 , 3 , 4 FROM JdbcInteger WHERE KEY = ' jsmith ' " ; <nl> checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Int " , 1 , " 1 " , " 2 " , " 3 " , " 4 " ) ; <nl> <nl> - selectQ = " SELECT 1L , 2L FROM JdbcLong WHERE KEY = \ " jsmith \ " " ; <nl> + selectQ = " SELECT 1 , 2 FROM JdbcLong WHERE KEY = ' jsmith ' " ; <nl> checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Long " , 1 , " 1 " , " 2 " ) ; <nl> <nl> - selectQ = " SELECT \ " first \ " , \ " last \ " FROM JdbcAscii WHERE KEY = \ " jsmith \ " " ; <nl> + selectQ = " SELECT ' first ' , ' last ' FROM JdbcAscii WHERE KEY = ' jsmith ' " ; <nl> checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " String " , 1 , " first " , " last " ) ; <nl> <nl> - / / selectQ = " SELECT \ " first \ " , \ " last \ " FROM JdbcBytes WHERE KEY = \ " jsmith \ " " ; <nl> - / / checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Bytes " , 1 , " first " , " last " ) ; <nl> + selectQ = String . format ( " SELECT ' % s ' , ' % s ' FROM JdbcBytes WHERE KEY = ' jsmith ' " , first , last ) ; <nl> + checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Bytes " , 1 , first , last ) ; <nl> <nl> - selectQ = " SELECT \ " first \ " , \ " last \ " FROM JdbcUtf8 WHERE KEY = \ " jsmith \ " " ; <nl> + selectQ = " SELECT ' first ' , ' last ' FROM JdbcUtf8 WHERE KEY = ' jsmith ' " ; <nl> checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " String " , 1 , " first " , " last " ) ; <nl> } <nl> <nl> @ @ - 134 , 29 + 134 , 34 @ @ public class JdbcDriverTest extends EmbeddedServiceBase <nl> / / the pattern : 0 ) a deltion , 1 ) ensure deletion 2 ) ensure deletion wasn ' t over - eager . <nl> String [ ] statements = <nl> { <nl> - / / " DELETE \ " firstN \ " , \ " lastN \ " FROM Standard1 WHERE KEY = \ " jsmith \ " " , <nl> - / / " SELECT \ " firstN \ " , \ " lastN \ " FROM Standard1 WHERE KEY = \ " jsmith \ " " , <nl> - / / " SELECT \ " first \ " FROM Standard1 WHERE KEY = \ " jsmith \ " " , <nl> + String . format ( " DELETE ' % s ' , ' % s ' FROM Standard1 WHERE KEY = ' jsmith ' " , <nl> + FBUtilities . bytesToHex ( " firstN " . getBytes ( ) ) , <nl> + FBUtilities . bytesToHex ( " lastN " . getBytes ( ) ) ) , <nl> + String . format ( " SELECT ' % s ' , ' % s ' FROM Standard1 WHERE KEY = ' jsmith ' " , <nl> + FBUtilities . bytesToHex ( " firstN " . getBytes ( ) ) , <nl> + FBUtilities . bytesToHex ( " lastN " . getBytes ( ) ) ) , <nl> + String . format ( " SELECT ' % s ' FROM Standard1 WHERE KEY = ' jsmith ' " , <nl> + first ) , <nl> <nl> - " DELETE 1 , 3 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " , <nl> - " SELECT 1 , 3 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " , / / fails . <nl> - " SELECT 2 , 4 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " , <nl> + " DELETE 1 , 3 FROM JdbcInteger WHERE KEY = ' jsmith ' " , <nl> + " SELECT 1 , 3 FROM JdbcInteger WHERE KEY = ' jsmith ' " , / / fails . <nl> + " SELECT 2 , 4 FROM JdbcInteger WHERE KEY = ' jsmith ' " , <nl> <nl> - " DELETE 1L FROM JdbcLong WHERE KEY = \ " jsmith \ " " , <nl> - " SELECT 1L FROM JdbcLong WHERE KEY = \ " jsmith \ " " , <nl> - " SELECT 2L FROM JdbcLong WHERE KEY = \ " jsmith \ " " , <nl> + " DELETE 1 FROM JdbcLong WHERE KEY = ' jsmith ' " , <nl> + " SELECT 1 FROM JdbcLong WHERE KEY = ' jsmith ' " , <nl> + " SELECT 2 FROM JdbcLong WHERE KEY = ' jsmith ' " , <nl> <nl> - " DELETE \ " first \ " FROM JdbcAscii WHERE KEY = \ " jsmith \ " " , <nl> - " SELECT \ " first \ " FROM JdbcAscii WHERE KEY = \ " jsmith \ " " , <nl> - " SELECT \ " last \ " FROM JdbcAscii WHERE KEY = \ " jsmith \ " " , <nl> + " DELETE ' first ' FROM JdbcAscii WHERE KEY = ' jsmith ' " , <nl> + " SELECT ' first ' FROM JdbcAscii WHERE KEY = ' jsmith ' " , <nl> + " SELECT ' last ' FROM JdbcAscii WHERE KEY = ' jsmith ' " , <nl> <nl> - / / " DELETE \ " first \ " FROM JdbcBytes WHERE KEY = \ " jsmith \ " " , <nl> - / / " SELECT \ " first \ " FROM JdbcBytes WHERE KEY = \ " jsmith \ " " , <nl> - / / " SELECT \ " last \ " FROM JdbcBytes WHERE KEY = \ " jsmith \ " " , <nl> + String . format ( " DELETE ' % s ' FROM JdbcBytes WHERE KEY = ' jsmith ' " , first ) , <nl> + String . format ( " SELECT ' % s ' FROM JdbcBytes WHERE KEY = ' jsmith ' " , first ) , <nl> + String . format ( " SELECT ' % s ' FROM JdbcBytes WHERE KEY = ' jsmith ' " , last ) , <nl> <nl> - " DELETE \ " first \ " FROM JdbcUtf8 WHERE KEY = \ " jsmith \ " " , <nl> - " SELECT \ " first \ " FROM JdbcUtf8 WHERE KEY = \ " jsmith \ " " , <nl> - " SELECT \ " last \ " FROM JdbcUtf8 WHERE KEY = \ " jsmith \ " " , <nl> + " DELETE ' first ' FROM JdbcUtf8 WHERE KEY = ' jsmith ' " , <nl> + " SELECT ' first ' FROM JdbcUtf8 WHERE KEY = ' jsmith ' " , <nl> + " SELECT ' last ' FROM JdbcUtf8 WHERE KEY = ' jsmith ' " , <nl> } ; <nl> <nl> for ( int i = 0 ; i < statements . length / 3 ; i + + ) <nl> @ @ - 243 , 7 + 248 , 7 @ @ public class JdbcDriverTest extends EmbeddedServiceBase <nl> } <nl> } <nl> <nl> - assert actualRows = = expectedRows ; <nl> + assert actualRows = = expectedRows : String . format ( " expected % d rows , got % d " , expectedRows , actualRows ) ; <nl> } <nl> <nl> / * * executes a prepared statement * / <nl> diff - - git a / test / conf / cassandra . yaml b / test / conf / cassandra . yaml <nl> index 53e62bd . . 9380042 100644 <nl> - - - a / test / conf / cassandra . yaml <nl> + + + b / test / conf / cassandra . yaml <nl> @ @ - 142 , 13 + 142 , 6 @ @ keyspaces : <nl> - name : JdbcAscii <nl> compare _ with : AsciiType <nl> default _ validation _ class : AsciiType <nl> - <nl> - <nl> - - name : Standard5 <nl> - rows _ cached : 0 <nl> - keys _ cached : 0 <nl> - compare _ with : AsciiType <nl> - default _ validation _ class : AsciiType <nl> <nl> - name : Keyspace2 <nl> replica _ placement _ strategy : org . apache . cassandra . locator . SimpleStrategy

TEST DIFF:
diff - - git a / test / conf / cassandra . yaml b / test / conf / cassandra . yaml 
 index 26d0ee5 . . 43995e6 100644 
 - - - a / test / conf / cassandra . yaml 
 + + + b / test / conf / cassandra . yaml 
 @ @ - 33 , 4 + 33 , 5 @ @ server _ encryption _ options : 
 truststore : conf / . truststore 
 truststore _ password : cassandra 
 incremental _ backups : true 
 + concurrent _ compactors : 4 
 compaction _ throughput _ mb _ per _ sec : 0

NEAREST DIFF:
diff - - git a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraResultSet . java b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraResultSet . java 
 index 9770689 . . 91c0300 100644 
 - - - a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraResultSet . java 
 + + + b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraResultSet . java 
 @ @ - 25 , 6 + 25 , 7 @ @ import java . io . Reader ; 
 import java . math . BigDecimal ; 
 import java . math . BigInteger ; 
 import java . net . URL ; 
 + import java . nio . ByteBuffer ; 
 import java . sql . Array ; 
 import java . sql . Blob ; 
 import java . sql . Clob ; 
 @ @ - 360 , 7 + 361 , 7 @ @ class CassandraResultSet implements ResultSet 
 * / 
 public byte [ ] getBytes ( int index ) throws SQLException 
 { 
 - return values . get ( index ) ! = null ? ( byte [ ] ) values . get ( index ) . getValue ( ) : null ; 
 + return values . get ( index ) ! = null ? ( ( ByteBuffer ) values . get ( index ) . getValue ( ) ) . array ( ) : null ; 
 } 
 
 / * * 
 @ @ - 371 , 7 + 372 , 7 @ @ class CassandraResultSet implements ResultSet 
 public byte [ ] getBytes ( String name ) throws SQLException 
 { 
 String nameAsString = decoder . colNameAsString ( keyspace , columnFamily , name ) ; 
 - return valueMap . get ( nameAsString ) ! = null ? ( byte [ ] ) valueMap . get ( nameAsString ) : null ; 
 + return valueMap . get ( nameAsString ) ! = null ? ( ( ByteBuffer ) valueMap . get ( nameAsString ) ) . array ( ) : null ; 
 } 
 
 / * * 
 diff - - git a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraStatement . java b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraStatement . java 
 index 2979b4e . . 5ae3a46 100644 
 - - - a / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraStatement . java 
 + + + b / drivers / java / src / org / apache / cassandra / cql / jdbc / CassandraStatement . java 
 @ @ - 248 , 7 + 248 , 7 @ @ class CassandraStatement implements PreparedStatement 
 } 
 catch ( InvalidRequestException e ) 
 { 
 - throw new SQLException ( e . getMessage ( ) ) ; 
 + throw new SQLException ( e . getWhy ( ) ) ; 
 } 
 catch ( UnavailableException e ) 
 { 
 diff - - git a / drivers / java / test / org / apache / cassandra / cql / JdbcDriverTest . java b / drivers / java / test / org / apache / cassandra / cql / JdbcDriverTest . java 
 index 5e01890 . . a072442 100644 
 - - - a / drivers / java / test / org / apache / cassandra / cql / JdbcDriverTest . java 
 + + + b / drivers / java / test / org / apache / cassandra / cql / JdbcDriverTest . java 
 @ @ - 55 , 13 + 55 , 13 @ @ public class JdbcDriverTest extends EmbeddedServiceBase 
 con = DriverManager . getConnection ( " jdbc : cassandra : root / root @ localhost : 9170 / Keyspace1 " ) ; 
 String [ ] inserts = 
 { 
 - / / String . format ( " UPDATE Standard1 SET \ " % s \ " = \ " % s \ " , \ " % s \ " = \ " % s \ " WHERE KEY = \ " jsmith \ " " , first , firstrec , last , lastrec ) , 
 - " UPDATE JdbcInteger SET 1 = 11 , 2 = 22 WHERE KEY = \ " jsmith \ " " , 
 - " UPDATE JdbcInteger SET 3 = 33 , 4 = 44 WHERE KEY = \ " jsmith \ " " , 
 - " UPDATE JdbcLong SET 1L = 11L , 2L = 22L WHERE KEY = \ " jsmith \ " " , 
 - " UPDATE JdbcAscii SET \ " first \ " = \ " firstrec \ " , \ " last \ " = \ " lastrec \ " WHERE key = \ " jsmith \ " " , 
 - / / String . format ( " UPDATE JdbcBytes SET \ " % s \ " = \ " % s \ " , \ " % s \ " = \ " % s \ " WHERE key = \ " jsmith \ " " , first , firstrec , last , lastrec ) , 
 - " UPDATE JdbcUtf8 SET \ " first \ " = \ " firstrec \ " , \ " last \ " = \ " lastrec \ " WHERE key = \ " jsmith \ " " , 
 + String . format ( " UPDATE Standard1 SET ' % s ' = ' % s ' , ' % s ' = ' % s ' WHERE KEY = ' jsmith ' " , first , firstrec , last , lastrec ) , 
 + " UPDATE JdbcInteger SET 1 = 11 , 2 = 22 WHERE KEY = ' jsmith ' " , 
 + " UPDATE JdbcInteger SET 3 = 33 , 4 = 44 WHERE KEY = ' jsmith ' " , 
 + " UPDATE JdbcLong SET 1 = 11 , 2 = 22 WHERE KEY = ' jsmith ' " , 
 + " UPDATE JdbcAscii SET ' first ' = ' firstrec ' , ' last ' = ' lastrec ' WHERE key = ' jsmith ' " , 
 + String . format ( " UPDATE JdbcBytes SET ' % s ' = ' % s ' , ' % s ' = ' % s ' WHERE key = ' jsmith ' " , first , firstrec , last , lastrec ) , 
 + " UPDATE JdbcUtf8 SET ' first ' = ' firstrec ' , ' last ' = ' lastrec ' WHERE key = ' jsmith ' " , 
 } ; 
 for ( String q : inserts ) 
 executeNoResults ( con , q ) ; 
 @ @ - 73 , 28 + 73 , 28 @ @ public class JdbcDriverTest extends EmbeddedServiceBase 
 { 
 Statement stmt = con . createStatement ( ) ; 
 
 - / / String selectQ = String . format ( " SELECT \ " % s \ " , \ " % s \ " FROM Standard1 WHERE KEY = \ " jsmith \ " " , first , last ) ; 
 + / / String selectQ = String . format ( " SELECT ' % s ' , ' % s ' FROM Standard1 WHERE KEY = ' jsmith ' " , first , last ) ; 
 / / checkResultSet ( stmt . executeQuery ( selectQ ) , " Bytes " , 1 , first , last ) ; 
 
 - String selectQ = " SELECT 1 , 2 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " ; 
 + String selectQ = " SELECT 1 , 2 FROM JdbcInteger WHERE KEY = ' jsmith ' " ; 
 checkResultSet ( stmt . executeQuery ( selectQ ) , " Int " , 1 , " 1 " , " 2 " ) ; 
 
 - selectQ = " SELECT 3 , 4 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " ; 
 + selectQ = " SELECT 3 , 4 FROM JdbcInteger WHERE KEY = ' jsmith ' " ; 
 checkResultSet ( stmt . executeQuery ( selectQ ) , " Int " , 1 , " 3 " , " 4 " ) ; 
 
 - selectQ = " SELECT 1 , 2 , 3 , 4 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " ; 
 + selectQ = " SELECT 1 , 2 , 3 , 4 FROM JdbcInteger WHERE KEY = ' jsmith ' " ; 
 checkResultSet ( stmt . executeQuery ( selectQ ) , " Int " , 1 , " 1 " , " 2 " , " 3 " , " 4 " ) ; 
 
 - selectQ = " SELECT 1L , 2L FROM JdbcLong WHERE KEY = \ " jsmith \ " " ; 
 + selectQ = " SELECT 1 , 2 FROM JdbcLong WHERE KEY = ' jsmith ' " ; 
 checkResultSet ( stmt . executeQuery ( selectQ ) , " Long " , 1 , " 1 " , " 2 " ) ; 
 
 - selectQ = " SELECT \ " first \ " , \ " last \ " FROM JdbcAscii WHERE KEY = \ " jsmith \ " " ; 
 + selectQ = " SELECT ' first ' , ' last ' FROM JdbcAscii WHERE KEY = ' jsmith ' " ; 
 checkResultSet ( stmt . executeQuery ( selectQ ) , " String " , 1 , " first " , " last " ) ; 
 
 - / / selectQ = String . format ( " SELECT \ " % s \ " , \ " % s \ " FROM JdbcBytes WHERE KEY = \ " jsmith \ " " , first , last ) ; 
 + / / selectQ = String . format ( " SELECT ' % s ' , ' % s ' FROM JdbcBytes WHERE KEY = ' jsmith ' " , first , last ) ; 
 / / checkResultSet ( stmt . executeQuery ( selectQ ) , " Bytes " , 1 , first , last ) ; 
 
 - selectQ = " SELECT \ " first \ " , \ " last \ " FROM JdbcUtf8 WHERE KEY = \ " jsmith \ " " ; 
 + selectQ = " SELECT ' first ' , ' last ' FROM JdbcUtf8 WHERE KEY = ' jsmith ' " ; 
 checkResultSet ( stmt . executeQuery ( selectQ ) , " String " , 1 , " first " , " last " ) ; 
 } 
 
 @ @ - 102 , 28 + 102 , 28 @ @ public class JdbcDriverTest extends EmbeddedServiceBase 
 @ Test 
 public void testWithPreparedStatement ( ) throws SQLException 
 { 
 - / / String selectQ = " SELECT \ " first \ " , \ " last \ " FROM Standard1 WHERE KEY = \ " jsmith \ " " ; 
 - / / checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Bytes " , 1 , " first " , " last " ) ; 
 + String selectQ = String . format ( " SELECT ' % s ' , ' % s ' FROM Standard1 WHERE KEY = ' jsmith ' " , first , last ) ; 
 + checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Bytes " , 1 , first , last ) ; 
 
 - String selectQ = " SELECT 1 , 2 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " ; 
 + selectQ = " SELECT 1 , 2 FROM JdbcInteger WHERE KEY = ' jsmith ' " ; 
 checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Int " , 1 , " 1 " , " 2 " ) ; 
 
 - selectQ = " SELECT 3 , 4 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " ; 
 + selectQ = " SELECT 3 , 4 FROM JdbcInteger WHERE KEY = ' jsmith ' " ; 
 checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Int " , 1 , " 3 " , " 4 " ) ; 
 
 - selectQ = " SELECT 1 , 2 , 3 , 4 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " ; 
 + selectQ = " SELECT 1 , 2 , 3 , 4 FROM JdbcInteger WHERE KEY = ' jsmith ' " ; 
 checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Int " , 1 , " 1 " , " 2 " , " 3 " , " 4 " ) ; 
 
 - selectQ = " SELECT 1L , 2L FROM JdbcLong WHERE KEY = \ " jsmith \ " " ; 
 + selectQ = " SELECT 1 , 2 FROM JdbcLong WHERE KEY = ' jsmith ' " ; 
 checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Long " , 1 , " 1 " , " 2 " ) ; 
 
 - selectQ = " SELECT \ " first \ " , \ " last \ " FROM JdbcAscii WHERE KEY = \ " jsmith \ " " ; 
 + selectQ = " SELECT ' first ' , ' last ' FROM JdbcAscii WHERE KEY = ' jsmith ' " ; 
 checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " String " , 1 , " first " , " last " ) ; 
 
 - / / selectQ = " SELECT \ " first \ " , \ " last \ " FROM JdbcBytes WHERE KEY = \ " jsmith \ " " ; 
 - / / checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Bytes " , 1 , " first " , " last " ) ; 
 + selectQ = String . format ( " SELECT ' % s ' , ' % s ' FROM JdbcBytes WHERE KEY = ' jsmith ' " , first , last ) ; 
 + checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " Bytes " , 1 , first , last ) ; 
 
 - selectQ = " SELECT \ " first \ " , \ " last \ " FROM JdbcUtf8 WHERE KEY = \ " jsmith \ " " ; 
 + selectQ = " SELECT ' first ' , ' last ' FROM JdbcUtf8 WHERE KEY = ' jsmith ' " ; 
 checkResultSet ( executePreparedStatementWithResults ( con , selectQ ) , " String " , 1 , " first " , " last " ) ; 
 } 
 
 @ @ - 134 , 29 + 134 , 34 @ @ public class JdbcDriverTest extends EmbeddedServiceBase 
 / / the pattern : 0 ) a deltion , 1 ) ensure deletion 2 ) ensure deletion wasn ' t over - eager . 
 String [ ] statements = 
 { 
 - / / " DELETE \ " firstN \ " , \ " lastN \ " FROM Standard1 WHERE KEY = \ " jsmith \ " " , 
 - / / " SELECT \ " firstN \ " , \ " lastN \ " FROM Standard1 WHERE KEY = \ " jsmith \ " " , 
 - / / " SELECT \ " first \ " FROM Standard1 WHERE KEY = \ " jsmith \ " " , 
 + String . format ( " DELETE ' % s ' , ' % s ' FROM Standard1 WHERE KEY = ' jsmith ' " , 
 + FBUtilities . bytesToHex ( " firstN " . getBytes ( ) ) , 
 + FBUtilities . bytesToHex ( " lastN " . getBytes ( ) ) ) , 
 + String . format ( " SELECT ' % s ' , ' % s ' FROM Standard1 WHERE KEY = ' jsmith ' " , 
 + FBUtilities . bytesToHex ( " firstN " . getBytes ( ) ) , 
 + FBUtilities . bytesToHex ( " lastN " . getBytes ( ) ) ) , 
 + String . format ( " SELECT ' % s ' FROM Standard1 WHERE KEY = ' jsmith ' " , 
 + first ) , 
 
 - " DELETE 1 , 3 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " , 
 - " SELECT 1 , 3 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " , / / fails . 
 - " SELECT 2 , 4 FROM JdbcInteger WHERE KEY = \ " jsmith \ " " , 
 + " DELETE 1 , 3 FROM JdbcInteger WHERE KEY = ' jsmith ' " , 
 + " SELECT 1 , 3 FROM JdbcInteger WHERE KEY = ' jsmith ' " , / / fails . 
 + " SELECT 2 , 4 FROM JdbcInteger WHERE KEY = ' jsmith ' " , 
 
 - " DELETE 1L FROM JdbcLong WHERE KEY = \ " jsmith \ " " , 
 - " SELECT 1L FROM JdbcLong WHERE KEY = \ " jsmith \ " " , 
 - " SELECT 2L FROM JdbcLong WHERE KEY = \ " jsmith \ " " , 
 + " DELETE 1 FROM JdbcLong WHERE KEY = ' jsmith ' " , 
 + " SELECT 1 FROM JdbcLong WHERE KEY = ' jsmith ' " , 
 + " SELECT 2 FROM JdbcLong WHERE KEY = ' jsmith ' " , 
 
 - " DELETE \ " first \ " FROM JdbcAscii WHERE KEY = \ " jsmith \ " " , 
 - " SELECT \ " first \ " FROM JdbcAscii WHERE KEY = \ " jsmith \ " " , 
 - " SELECT \ " last \ " FROM JdbcAscii WHERE KEY = \ " jsmith \ " " , 
 + " DELETE ' first ' FROM JdbcAscii WHERE KEY = ' jsmith ' " , 
 + " SELECT ' first ' FROM JdbcAscii WHERE KEY = ' jsmith ' " , 
 + " SELECT ' last ' FROM JdbcAscii WHERE KEY = ' jsmith ' " , 
 
 - / / " DELETE \ " first \ " FROM JdbcBytes WHERE KEY = \ " jsmith \ " " , 
 - / / " SELECT \ " first \ " FROM JdbcBytes WHERE KEY = \ " jsmith \ " " , 
 - / / " SELECT \ " last \ " FROM JdbcBytes WHERE KEY = \ " jsmith \ " " , 
 + String . format ( " DELETE ' % s ' FROM JdbcBytes WHERE KEY = ' jsmith ' " , first ) , 
 + String . format ( " SELECT ' % s ' FROM JdbcBytes WHERE KEY = ' jsmith ' " , first ) , 
 + String . format ( " SELECT ' % s ' FROM JdbcBytes WHERE KEY = ' jsmith ' " , last ) , 
 
 - " DELETE \ " first \ " FROM JdbcUtf8 WHERE KEY = \ " jsmith \ " " , 
 - " SELECT \ " first \ " FROM JdbcUtf8 WHERE KEY = \ " jsmith \ " " , 
 - " SELECT \ " last \ " FROM JdbcUtf8 WHERE KEY = \ " jsmith \ " " , 
 + " DELETE ' first ' FROM JdbcUtf8 WHERE KEY = ' jsmith ' " , 
 + " SELECT ' first ' FROM JdbcUtf8 WHERE KEY = ' jsmith ' " , 
 + " SELECT ' last ' FROM JdbcUtf8 WHERE KEY = ' jsmith ' " , 
 } ; 
 
 for ( int i = 0 ; i < statements . length / 3 ; i + + ) 
 @ @ - 243 , 7 + 248 , 7 @ @ public class JdbcDriverTest extends EmbeddedServiceBase 
 } 
 } 
 
 - assert actualRows = = expectedRows ; 
 + assert actualRows = = expectedRows : String . format ( " expected % d rows , got % d " , expectedRows , actualRows ) ; 
 } 
 
 / * * executes a prepared statement * / 
 diff - - git a / test / conf / cassandra . yaml b / test / conf / cassandra . yaml 
 index 53e62bd . . 9380042 100644 
 - - - a / test / conf / cassandra . yaml 
 + + + b / test / conf / cassandra . yaml 
 @ @ - 142 , 13 + 142 , 6 @ @ keyspaces : 
 - name : JdbcAscii 
 compare _ with : AsciiType 
 default _ validation _ class : AsciiType 
 - 
 - 
 - - name : Standard5 
 - rows _ cached : 0 
 - keys _ cached : 0 
 - compare _ with : AsciiType 
 - default _ validation _ class : AsciiType 
 
 - name : Keyspace2 
 replica _ placement _ strategy : org . apache . cassandra . locator . SimpleStrategy
