BLEU SCORE: 0.007870921666513668

TEST MSG: ninja : use commons - math3
GENERATED MSG: import and dead - code cleanup . Patch by Stu Hood , reviewed by Gary Dusbabek . CASSANDRA - 767

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java b / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java <nl> index f8a17dc . . dd3a02b 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java <nl> + + + b / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java <nl> @ @ - 28 , 7 + 28 , 7 @ @ import java . util . TreeMap ; <nl> import com . google . common . collect . Lists ; <nl> import com . google . common . collect . Maps ; <nl> <nl> - import org . apache . commons . math . stat . descriptive . SummaryStatistics ; <nl> + import org . apache . commons . math3 . stat . descriptive . SummaryStatistics ; <nl> <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> diff - - git a / test / long / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocatorTest . java b / test / long / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocatorTest . java <nl> index 996dfd4 . . 0a27e1c 100644 <nl> - - - a / test / long / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocatorTest . java <nl> + + + b / test / long / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocatorTest . java <nl> @ @ - 25 , 7 + 25 , 7 @ @ import com . google . common . collect . Iterables ; <nl> import com . google . common . collect . Maps ; <nl> import com . google . common . collect . Sets ; <nl> <nl> - import org . apache . commons . math . stat . descriptive . SummaryStatistics ; <nl> + import org . apache . commons . math3 . stat . descriptive . SummaryStatistics ; <nl> <nl> import org . junit . Test ; <nl> <nl> diff - - git a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java <nl> index 3185376 . . a1ea0e4 100644 <nl> - - - a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java <nl> + + + b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java <nl> @ @ - 30 , 7 + 30 , 7 @ @ import java . util . Set ; <nl> <nl> import com . google . common . collect . Lists ; <nl> <nl> - import org . apache . commons . math . stat . descriptive . SummaryStatistics ; <nl> + import org . apache . commons . math3 . stat . descriptive . SummaryStatistics ; <nl> <nl> import org . junit . AfterClass ; <nl> import org . junit . BeforeClass ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 2d87992 . . b350893 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 6 , 6 + 6 , 7 @ @ dev <nl> * access levels for authentication / authorization ( CASSANDRA - 900 ) <nl> * add ReadRepairChance to CF definition ( CASSANDRA - 930 ) <nl> * fix heisenbug in system tests , especially common on OS X ( CASSANDRA - 944 ) <nl> + * convert to byte [ ] keys internally and all public APIs ( CASSANDRA - 767 ) <nl> <nl> <nl> 0 . 6 . 1 <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 886c299 . . 815f5b1 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 862 , 8 + 862 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> try <nl> { <nl> / / pull rows out of the iterator <nl> - boolean first = true ; <nl> - IPartitioner partitioner = StorageService . getPartitioner ( ) ; <nl> + boolean first = true ; <nl> while ( iterator . hasNext ( ) ) <nl> { <nl> Row current = iterator . next ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / DecoratedKey . java b / src / java / org / apache / cassandra / db / DecoratedKey . java <nl> index 65067bf . . d1442ec 100644 <nl> - - - a / src / java / org / apache / cassandra / db / DecoratedKey . java <nl> + + + b / src / java / org / apache / cassandra / db / DecoratedKey . java <nl> @ @ - 18 , 15 + 18 , 10 @ @ <nl> <nl> package org . apache . cassandra . db ; <nl> <nl> - import java . io . DataOutput ; <nl> - import java . io . IOException ; <nl> - import java . io . DataInput ; <nl> import java . util . Comparator ; <nl> <nl> import org . apache . cassandra . dht . IPartitioner ; <nl> import org . apache . cassandra . dht . Token ; <nl> - import org . apache . cassandra . io . ICompactSerializer2 ; <nl> - import org . apache . cassandra . io . util . DataOutputBuffer ; <nl> import org . apache . cassandra . service . StorageService ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> <nl> @ @ - 54 , 15 + 49 , 6 @ @ public class DecoratedKey < T extends Token > implements Comparable < DecoratedKey > <nl> public final T token ; <nl> public final byte [ ] key ; <nl> <nl> - @ Deprecated <nl> - public DecoratedKey ( T token , String key ) <nl> - { <nl> - super ( ) ; <nl> - assert token ! = null ; <nl> - this . token = token ; <nl> - this . key = key = = null ? null : key . getBytes ( FBUtilities . UTF8 ) ; <nl> - } <nl> - <nl> public DecoratedKey ( T token , byte [ ] key ) <nl> { <nl> super ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / filter / IdentityQueryFilter . java b / src / java / org / apache / cassandra / db / filter / IdentityQueryFilter . java <nl> index 8185bfa . . 6fcc5d9 100644 <nl> - - - a / src / java / org / apache / cassandra / db / filter / IdentityQueryFilter . java <nl> + + + b / src / java / org / apache / cassandra / db / filter / IdentityQueryFilter . java <nl> @ @ - 23 , 7 + 23 , 6 @ @ package org . apache . cassandra . db . filter ; <nl> <nl> import org . apache . commons . lang . ArrayUtils ; <nl> <nl> - import org . apache . cassandra . db . DecoratedKey ; <nl> import org . apache . cassandra . db . SuperColumn ; <nl> <nl> class IdentityQueryFilter extends SliceQueryFilter <nl> diff - - git a / src / java / org / apache / cassandra / db / filter / QueryFilter . java b / src / java / org / apache / cassandra / db / filter / QueryFilter . java <nl> index fa23ce8 . . 9854d2e 100644 <nl> - - - a / src / java / org / apache / cassandra / db / filter / QueryFilter . java <nl> + + + b / src / java / org / apache / cassandra / db / filter / QueryFilter . java <nl> @ @ - 25 , 7 + 25 , 6 @ @ import java . util . * ; <nl> <nl> import org . apache . cassandra . io . sstable . SSTableReader ; <nl> import org . apache . cassandra . io . util . FileDataInput ; <nl> - import org . apache . cassandra . service . StorageService ; <nl> import org . apache . cassandra . utils . ReducingIterator ; <nl> import org . apache . cassandra . db . * ; <nl> import org . apache . cassandra . db . marshal . AbstractType ; <nl> diff - - git a / src / java / org / apache / cassandra / dht / ByteOrderedPartitioner . java b / src / java / org / apache / cassandra / dht / ByteOrderedPartitioner . java <nl> index 92b4e19 . . d5f45b0 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / ByteOrderedPartitioner . java <nl> + + + b / src / java / org / apache / cassandra / dht / ByteOrderedPartitioner . java <nl> @ @ - 18 , 19 + 18 , 6 @ @ <nl> <nl> package org . apache . cassandra . dht ; <nl> <nl> - import java . math . BigInteger ; <nl> - import java . text . Collator ; <nl> - import java . util . Arrays ; <nl> - import java . util . Comparator ; <nl> - import java . util . Locale ; <nl> - import java . util . Random ; <nl> - <nl> - import org . apache . commons . lang . ArrayUtils ; <nl> - <nl> - import org . apache . cassandra . db . DecoratedKey ; <nl> - import org . apache . cassandra . utils . FBUtilities ; <nl> - import org . apache . cassandra . utils . Pair ; <nl> - <nl> public class ByteOrderedPartitioner extends AbstractByteOrderedPartitioner <nl> { <nl> public BytesToken getToken ( byte [ ] key ) <nl> diff - - git a / src / java / org / apache / cassandra / dht / IPartitioner . java b / src / java / org / apache / cassandra / dht / IPartitioner . java <nl> index d87b8e2 . . f28d578 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / IPartitioner . java <nl> + + + b / src / java / org / apache / cassandra / dht / IPartitioner . java <nl> @ @ - 66 , 7 + 66 , 6 @ @ public interface IPartitioner < T extends Token > <nl> * ( This is NOT a method to create a Token from its string representation ; <nl> * for that , use TokenFactory . fromString . ) <nl> * / <nl> - @ Deprecated <nl> public T getToken ( byte [ ] key ) ; <nl> <nl> / * * <nl> diff - - git a / test / unit / org / apache / cassandra / Util . java b / test / unit / org / apache / cassandra / Util . java <nl> index 3371197 . . 302b579 100644 <nl> - - - a / test / unit / org / apache / cassandra / Util . java <nl> + + + b / test / unit / org / apache / cassandra / Util . java <nl> @ @ - 98 , 11 + 98 , 6 @ @ public class Util <nl> store . forceBlockingFlush ( ) ; <nl> return store ; <nl> } <nl> - <nl> - public static ColumnFamily getColumnFamily ( Table table , String key , String cfName ) throws IOException <nl> - { <nl> - return getColumnFamily ( table , dk ( key ) , cfName ) ; <nl> - } <nl> <nl> public static ColumnFamily getColumnFamily ( Table table , DecoratedKey key , String cfName ) throws IOException <nl> { <nl> diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java <nl> index 37462cf . . bc2244c 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java <nl> + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java <nl> @ @ - 1 , 8 + 1 , 6 @ @ <nl> package org . apache . cassandra . io . sstable ; <nl> <nl> import java . io . IOException ; <nl> - import java . util . HashSet ; <nl> - import java . util . Set ; <nl> import java . util . concurrent . ExecutionException ; <nl> <nl> import org . junit . Test ; <nl> @ @ - 12 , 7 + 10 , 6 @ @ import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . db . * ; <nl> import org . apache . cassandra . db . filter . QueryPath ; <nl> import org . apache . cassandra . io . util . FileDataInput ; <nl> - import org . apache . cassandra . service . StorageService ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> <nl> import org . apache . cassandra . Util ; <nl> diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableTest . java <nl> index 7bfd5f4 . . 269dc59 100644 <nl> - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableTest . java <nl> + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableTest . java <nl> @ @ - 19 , 21 + 19 , 15 @ @ <nl> <nl> package org . apache . cassandra . io . sstable ; <nl> <nl> - import java . io . File ; <nl> import java . io . IOException ; <nl> import java . util . * ; <nl> <nl> import org . junit . Test ; <nl> - import static org . junit . Assert . * ; <nl> <nl> import org . apache . cassandra . CleanupHelper ; <nl> import org . apache . cassandra . io . util . BufferedRandomAccessFile ; <nl> - import org . apache . cassandra . db . DecoratedKey ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> <nl> - import com . google . common . base . Predicate ; <nl> - import com . google . common . base . Predicates ; <nl> - <nl> public class SSTableTest extends CleanupHelper <nl> { <nl> @ Test <nl> diff - - git a / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java b / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java <nl> index 831e873 . . 95c2672 100644 <nl> - - - a / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java <nl> + + + b / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java <nl> @ @ - 145 , 11 + 145 , 11 @ @ public class AntiEntropyServiceTest extends CleanupHelper <nl> validator . prepare ( ) ; <nl> <nl> / / add a row with the minimum token <nl> - validator . add ( new CompactedRow ( new DecoratedKey ( min , " nonsense ! " ) , <nl> + validator . add ( new CompactedRow ( new DecoratedKey ( min , " nonsense ! " . getBytes ( FBUtilities . UTF8 ) ) , <nl> new DataOutputBuffer ( ) ) ) ; <nl> <nl> / / and a row after it <nl> - validator . add ( new CompactedRow ( new DecoratedKey ( mid , " inconceivable ! " ) , <nl> + validator . add ( new CompactedRow ( new DecoratedKey ( mid , " inconceivable ! " . getBytes ( FBUtilities . UTF8 ) ) , <nl> new DataOutputBuffer ( ) ) ) ; <nl> validator . complete ( ) ; <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java b / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java 
 index f8a17dc . . dd3a02b 100644 
 - - - a / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java 
 + + + b / src / java / org / apache / cassandra / dht / tokenallocator / TokenAllocation . java 
 @ @ - 28 , 7 + 28 , 7 @ @ import java . util . TreeMap ; 
 import com . google . common . collect . Lists ; 
 import com . google . common . collect . Maps ; 
 
 - import org . apache . commons . math . stat . descriptive . SummaryStatistics ; 
 + import org . apache . commons . math3 . stat . descriptive . SummaryStatistics ; 
 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 diff - - git a / test / long / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocatorTest . java b / test / long / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocatorTest . java 
 index 996dfd4 . . 0a27e1c 100644 
 - - - a / test / long / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocatorTest . java 
 + + + b / test / long / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocatorTest . java 
 @ @ - 25 , 7 + 25 , 7 @ @ import com . google . common . collect . Iterables ; 
 import com . google . common . collect . Maps ; 
 import com . google . common . collect . Sets ; 
 
 - import org . apache . commons . math . stat . descriptive . SummaryStatistics ; 
 + import org . apache . commons . math3 . stat . descriptive . SummaryStatistics ; 
 
 import org . junit . Test ; 
 
 diff - - git a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java 
 index 3185376 . . a1ea0e4 100644 
 - - - a / test / unit / org / apache / cassandra / dht / BootStrapperTest . java 
 + + + b / test / unit / org / apache / cassandra / dht / BootStrapperTest . java 
 @ @ - 30 , 7 + 30 , 7 @ @ import java . util . Set ; 
 
 import com . google . common . collect . Lists ; 
 
 - import org . apache . commons . math . stat . descriptive . SummaryStatistics ; 
 + import org . apache . commons . math3 . stat . descriptive . SummaryStatistics ; 
 
 import org . junit . AfterClass ; 
 import org . junit . BeforeClass ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 2d87992 . . b350893 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 6 , 6 + 6 , 7 @ @ dev 
 * access levels for authentication / authorization ( CASSANDRA - 900 ) 
 * add ReadRepairChance to CF definition ( CASSANDRA - 930 ) 
 * fix heisenbug in system tests , especially common on OS X ( CASSANDRA - 944 ) 
 + * convert to byte [ ] keys internally and all public APIs ( CASSANDRA - 767 ) 
 
 
 0 . 6 . 1 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 886c299 . . 815f5b1 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 862 , 8 + 862 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 try 
 { 
 / / pull rows out of the iterator 
 - boolean first = true ; 
 - IPartitioner partitioner = StorageService . getPartitioner ( ) ; 
 + boolean first = true ; 
 while ( iterator . hasNext ( ) ) 
 { 
 Row current = iterator . next ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / DecoratedKey . java b / src / java / org / apache / cassandra / db / DecoratedKey . java 
 index 65067bf . . d1442ec 100644 
 - - - a / src / java / org / apache / cassandra / db / DecoratedKey . java 
 + + + b / src / java / org / apache / cassandra / db / DecoratedKey . java 
 @ @ - 18 , 15 + 18 , 10 @ @ 
 
 package org . apache . cassandra . db ; 
 
 - import java . io . DataOutput ; 
 - import java . io . IOException ; 
 - import java . io . DataInput ; 
 import java . util . Comparator ; 
 
 import org . apache . cassandra . dht . IPartitioner ; 
 import org . apache . cassandra . dht . Token ; 
 - import org . apache . cassandra . io . ICompactSerializer2 ; 
 - import org . apache . cassandra . io . util . DataOutputBuffer ; 
 import org . apache . cassandra . service . StorageService ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 
 @ @ - 54 , 15 + 49 , 6 @ @ public class DecoratedKey < T extends Token > implements Comparable < DecoratedKey > 
 public final T token ; 
 public final byte [ ] key ; 
 
 - @ Deprecated 
 - public DecoratedKey ( T token , String key ) 
 - { 
 - super ( ) ; 
 - assert token ! = null ; 
 - this . token = token ; 
 - this . key = key = = null ? null : key . getBytes ( FBUtilities . UTF8 ) ; 
 - } 
 - 
 public DecoratedKey ( T token , byte [ ] key ) 
 { 
 super ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / filter / IdentityQueryFilter . java b / src / java / org / apache / cassandra / db / filter / IdentityQueryFilter . java 
 index 8185bfa . . 6fcc5d9 100644 
 - - - a / src / java / org / apache / cassandra / db / filter / IdentityQueryFilter . java 
 + + + b / src / java / org / apache / cassandra / db / filter / IdentityQueryFilter . java 
 @ @ - 23 , 7 + 23 , 6 @ @ package org . apache . cassandra . db . filter ; 
 
 import org . apache . commons . lang . ArrayUtils ; 
 
 - import org . apache . cassandra . db . DecoratedKey ; 
 import org . apache . cassandra . db . SuperColumn ; 
 
 class IdentityQueryFilter extends SliceQueryFilter 
 diff - - git a / src / java / org / apache / cassandra / db / filter / QueryFilter . java b / src / java / org / apache / cassandra / db / filter / QueryFilter . java 
 index fa23ce8 . . 9854d2e 100644 
 - - - a / src / java / org / apache / cassandra / db / filter / QueryFilter . java 
 + + + b / src / java / org / apache / cassandra / db / filter / QueryFilter . java 
 @ @ - 25 , 7 + 25 , 6 @ @ import java . util . * ; 
 
 import org . apache . cassandra . io . sstable . SSTableReader ; 
 import org . apache . cassandra . io . util . FileDataInput ; 
 - import org . apache . cassandra . service . StorageService ; 
 import org . apache . cassandra . utils . ReducingIterator ; 
 import org . apache . cassandra . db . * ; 
 import org . apache . cassandra . db . marshal . AbstractType ; 
 diff - - git a / src / java / org / apache / cassandra / dht / ByteOrderedPartitioner . java b / src / java / org / apache / cassandra / dht / ByteOrderedPartitioner . java 
 index 92b4e19 . . d5f45b0 100644 
 - - - a / src / java / org / apache / cassandra / dht / ByteOrderedPartitioner . java 
 + + + b / src / java / org / apache / cassandra / dht / ByteOrderedPartitioner . java 
 @ @ - 18 , 19 + 18 , 6 @ @ 
 
 package org . apache . cassandra . dht ; 
 
 - import java . math . BigInteger ; 
 - import java . text . Collator ; 
 - import java . util . Arrays ; 
 - import java . util . Comparator ; 
 - import java . util . Locale ; 
 - import java . util . Random ; 
 - 
 - import org . apache . commons . lang . ArrayUtils ; 
 - 
 - import org . apache . cassandra . db . DecoratedKey ; 
 - import org . apache . cassandra . utils . FBUtilities ; 
 - import org . apache . cassandra . utils . Pair ; 
 - 
 public class ByteOrderedPartitioner extends AbstractByteOrderedPartitioner 
 { 
 public BytesToken getToken ( byte [ ] key ) 
 diff - - git a / src / java / org / apache / cassandra / dht / IPartitioner . java b / src / java / org / apache / cassandra / dht / IPartitioner . java 
 index d87b8e2 . . f28d578 100644 
 - - - a / src / java / org / apache / cassandra / dht / IPartitioner . java 
 + + + b / src / java / org / apache / cassandra / dht / IPartitioner . java 
 @ @ - 66 , 7 + 66 , 6 @ @ public interface IPartitioner < T extends Token > 
 * ( This is NOT a method to create a Token from its string representation ; 
 * for that , use TokenFactory . fromString . ) 
 * / 
 - @ Deprecated 
 public T getToken ( byte [ ] key ) ; 
 
 / * * 
 diff - - git a / test / unit / org / apache / cassandra / Util . java b / test / unit / org / apache / cassandra / Util . java 
 index 3371197 . . 302b579 100644 
 - - - a / test / unit / org / apache / cassandra / Util . java 
 + + + b / test / unit / org / apache / cassandra / Util . java 
 @ @ - 98 , 11 + 98 , 6 @ @ public class Util 
 store . forceBlockingFlush ( ) ; 
 return store ; 
 } 
 - 
 - public static ColumnFamily getColumnFamily ( Table table , String key , String cfName ) throws IOException 
 - { 
 - return getColumnFamily ( table , dk ( key ) , cfName ) ; 
 - } 
 
 public static ColumnFamily getColumnFamily ( Table table , DecoratedKey key , String cfName ) throws IOException 
 { 
 diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java 
 index 37462cf . . bc2244c 100644 
 - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java 
 + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableReaderTest . java 
 @ @ - 1 , 8 + 1 , 6 @ @ 
 package org . apache . cassandra . io . sstable ; 
 
 import java . io . IOException ; 
 - import java . util . HashSet ; 
 - import java . util . Set ; 
 import java . util . concurrent . ExecutionException ; 
 
 import org . junit . Test ; 
 @ @ - 12 , 7 + 10 , 6 @ @ import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . db . * ; 
 import org . apache . cassandra . db . filter . QueryPath ; 
 import org . apache . cassandra . io . util . FileDataInput ; 
 - import org . apache . cassandra . service . StorageService ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 
 import org . apache . cassandra . Util ; 
 diff - - git a / test / unit / org / apache / cassandra / io / sstable / SSTableTest . java b / test / unit / org / apache / cassandra / io / sstable / SSTableTest . java 
 index 7bfd5f4 . . 269dc59 100644 
 - - - a / test / unit / org / apache / cassandra / io / sstable / SSTableTest . java 
 + + + b / test / unit / org / apache / cassandra / io / sstable / SSTableTest . java 
 @ @ - 19 , 21 + 19 , 15 @ @ 
 
 package org . apache . cassandra . io . sstable ; 
 
 - import java . io . File ; 
 import java . io . IOException ; 
 import java . util . * ; 
 
 import org . junit . Test ; 
 - import static org . junit . Assert . * ; 
 
 import org . apache . cassandra . CleanupHelper ; 
 import org . apache . cassandra . io . util . BufferedRandomAccessFile ; 
 - import org . apache . cassandra . db . DecoratedKey ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 
 - import com . google . common . base . Predicate ; 
 - import com . google . common . base . Predicates ; 
 - 
 public class SSTableTest extends CleanupHelper 
 { 
 @ Test 
 diff - - git a / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java b / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java 
 index 831e873 . . 95c2672 100644 
 - - - a / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java 
 + + + b / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java 
 @ @ - 145 , 11 + 145 , 11 @ @ public class AntiEntropyServiceTest extends CleanupHelper 
 validator . prepare ( ) ; 
 
 / / add a row with the minimum token 
 - validator . add ( new CompactedRow ( new DecoratedKey ( min , " nonsense ! " ) , 
 + validator . add ( new CompactedRow ( new DecoratedKey ( min , " nonsense ! " . getBytes ( FBUtilities . UTF8 ) ) , 
 new DataOutputBuffer ( ) ) ) ; 
 
 / / and a row after it 
 - validator . add ( new CompactedRow ( new DecoratedKey ( mid , " inconceivable ! " ) , 
 + validator . add ( new CompactedRow ( new DecoratedKey ( mid , " inconceivable ! " . getBytes ( FBUtilities . UTF8 ) ) , 
 new DataOutputBuffer ( ) ) ) ; 
 validator . complete ( ) ; 

