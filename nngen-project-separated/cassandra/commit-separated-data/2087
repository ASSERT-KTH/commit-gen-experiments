BLEU SCORE: 0.05341087579952926

TEST MSG: Better validation of collection values
GENERATED MSG: use StringBuilder vs . StringBuffer

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 0e5a0d0 . . 3454928 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 0 . 11 : <nl> + * Better validation of collection values ( CASSANDRA - 7833 ) <nl> * Fix possible overflow while sorting CL segments for replay ( CASSANDRA - 7992 ) <nl> * Increase nodetool Xmx ( CASSANDRA - 7956 ) <nl> * Archive any commitlog segments present at startup ( CASSANDRA - 6904 ) <nl> diff - - git a / src / java / org / apache / cassandra / serializers / ListSerializer . java b / src / java / org / apache / cassandra / serializers / ListSerializer . java <nl> index 59f25d2 . . 74cab7e 100644 <nl> - - - a / src / java / org / apache / cassandra / serializers / ListSerializer . java <nl> + + + b / src / java / org / apache / cassandra / serializers / ListSerializer . java <nl> @ @ - 60 , 6 + 60 , 8 @ @ public class ListSerializer < T > extends CollectionSerializer < List < T > > <nl> elements . validate ( databb ) ; <nl> l . add ( elements . deserialize ( databb ) ) ; <nl> } <nl> + if ( input . hasRemaining ( ) ) <nl> + throw new MarshalException ( " Unexpected extraneous bytes after list value " ) ; <nl> return l ; <nl> } <nl> catch ( BufferUnderflowException e ) <nl> diff - - git a / src / java / org / apache / cassandra / serializers / MapSerializer . java b / src / java / org / apache / cassandra / serializers / MapSerializer . java <nl> index f79d07f . . 47515a1 100644 <nl> - - - a / src / java / org / apache / cassandra / serializers / MapSerializer . java <nl> + + + b / src / java / org / apache / cassandra / serializers / MapSerializer . java <nl> @ @ - 68 , 6 + 68 , 8 @ @ public class MapSerializer < K , V > extends CollectionSerializer < Map < K , V > > <nl> <nl> m . put ( keys . deserialize ( kbb ) , values . deserialize ( vbb ) ) ; <nl> } <nl> + if ( input . hasRemaining ( ) ) <nl> + throw new MarshalException ( " Unexpected extraneous bytes after map value " ) ; <nl> return m ; <nl> } <nl> catch ( BufferUnderflowException e ) <nl> diff - - git a / src / java / org / apache / cassandra / serializers / SetSerializer . java b / src / java / org / apache / cassandra / serializers / SetSerializer . java <nl> index d6d7062 . . a6df281 100644 <nl> - - - a / src / java / org / apache / cassandra / serializers / SetSerializer . java <nl> + + + b / src / java / org / apache / cassandra / serializers / SetSerializer . java <nl> @ @ - 60 , 6 + 60 , 8 @ @ public class SetSerializer < T > extends CollectionSerializer < Set < T > > <nl> elements . validate ( databb ) ; <nl> l . add ( elements . deserialize ( databb ) ) ; <nl> } <nl> + if ( input . hasRemaining ( ) ) <nl> + throw new MarshalException ( " Unexpected extraneous bytes after set value " ) ; <nl> return l ; <nl> } <nl> catch ( BufferUnderflowException e )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java <nl> index e04b015 . . f1999a5 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliClient . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliClient . java <nl> @ @ - 146 , 8 + 146 , 8 @ @ public class CliClient <nl> } <nl> <nl> private static final String DEFAULT _ PLACEMENT _ STRATEGY = " org . apache . cassandra . locator . NetworkTopologyStrategy " ; <nl> - private final String NEWLINE = System . getProperty ( " line . separator " ) ; <nl> - private final String TAB = " " ; <nl> + private static final String NEWLINE = System . getProperty ( " line . separator " ) ; <nl> + private static final String TAB = " " ; <nl> <nl> private final Cassandra . Client thriftClient ; <nl> private final CliSessionState sessionState ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 0e5a0d0 . . 3454928 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 0 . 11 : 
 + * Better validation of collection values ( CASSANDRA - 7833 ) 
 * Fix possible overflow while sorting CL segments for replay ( CASSANDRA - 7992 ) 
 * Increase nodetool Xmx ( CASSANDRA - 7956 ) 
 * Archive any commitlog segments present at startup ( CASSANDRA - 6904 ) 
 diff - - git a / src / java / org / apache / cassandra / serializers / ListSerializer . java b / src / java / org / apache / cassandra / serializers / ListSerializer . java 
 index 59f25d2 . . 74cab7e 100644 
 - - - a / src / java / org / apache / cassandra / serializers / ListSerializer . java 
 + + + b / src / java / org / apache / cassandra / serializers / ListSerializer . java 
 @ @ - 60 , 6 + 60 , 8 @ @ public class ListSerializer < T > extends CollectionSerializer < List < T > > 
 elements . validate ( databb ) ; 
 l . add ( elements . deserialize ( databb ) ) ; 
 } 
 + if ( input . hasRemaining ( ) ) 
 + throw new MarshalException ( " Unexpected extraneous bytes after list value " ) ; 
 return l ; 
 } 
 catch ( BufferUnderflowException e ) 
 diff - - git a / src / java / org / apache / cassandra / serializers / MapSerializer . java b / src / java / org / apache / cassandra / serializers / MapSerializer . java 
 index f79d07f . . 47515a1 100644 
 - - - a / src / java / org / apache / cassandra / serializers / MapSerializer . java 
 + + + b / src / java / org / apache / cassandra / serializers / MapSerializer . java 
 @ @ - 68 , 6 + 68 , 8 @ @ public class MapSerializer < K , V > extends CollectionSerializer < Map < K , V > > 
 
 m . put ( keys . deserialize ( kbb ) , values . deserialize ( vbb ) ) ; 
 } 
 + if ( input . hasRemaining ( ) ) 
 + throw new MarshalException ( " Unexpected extraneous bytes after map value " ) ; 
 return m ; 
 } 
 catch ( BufferUnderflowException e ) 
 diff - - git a / src / java / org / apache / cassandra / serializers / SetSerializer . java b / src / java / org / apache / cassandra / serializers / SetSerializer . java 
 index d6d7062 . . a6df281 100644 
 - - - a / src / java / org / apache / cassandra / serializers / SetSerializer . java 
 + + + b / src / java / org / apache / cassandra / serializers / SetSerializer . java 
 @ @ - 60 , 6 + 60 , 8 @ @ public class SetSerializer < T > extends CollectionSerializer < Set < T > > 
 elements . validate ( databb ) ; 
 l . add ( elements . deserialize ( databb ) ) ; 
 } 
 + if ( input . hasRemaining ( ) ) 
 + throw new MarshalException ( " Unexpected extraneous bytes after set value " ) ; 
 return l ; 
 } 
 catch ( BufferUnderflowException e )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java 
 index e04b015 . . f1999a5 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliClient . java 
 + + + b / src / java / org / apache / cassandra / cli / CliClient . java 
 @ @ - 146 , 8 + 146 , 8 @ @ public class CliClient 
 } 
 
 private static final String DEFAULT _ PLACEMENT _ STRATEGY = " org . apache . cassandra . locator . NetworkTopologyStrategy " ; 
 - private final String NEWLINE = System . getProperty ( " line . separator " ) ; 
 - private final String TAB = " " ; 
 + private static final String NEWLINE = System . getProperty ( " line . separator " ) ; 
 + private static final String TAB = " " ; 
 
 private final Cassandra . Client thriftClient ; 
 private final CliSessionState sessionState ;
