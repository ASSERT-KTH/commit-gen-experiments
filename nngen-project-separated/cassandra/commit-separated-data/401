BLEU SCORE: 1.0

TEST MSG: Fix SSTableLoader fail when the loaded table contains dropped columns ( CASSANDRA - 13276 )
GENERATED MSG: Fix SSTableLoader fail when the loaded table contains dropped columns ( CASSANDRA - 13276 )

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index d462ed1 . . db863e1 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 81 , 6 + 81 , 7 @ @ <nl> * Address message coalescing regression ( CASSANDRA - 12676 ) <nl> * Delete illegal character from StandardTokenizerImpl . jflex ( CASSANDRA - 13417 ) <nl> Merged from 3 . 0 : <nl> + * Fix SSTableLoader fail when the loaded table contains dropped columns ( CASSANDRA - 13276 ) <nl> * Avoid name clashes in CassandraIndexTest ( CASSANDRA - 13427 ) <nl> * Handling partially written hint files ( CASSANDRA - 12728 ) <nl> * Interrupt replaying hints on decommission ( CASSANDRA - 13308 ) <nl> diff - - git a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java <nl> index ba702dd . . 84a4c32 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java <nl> + + + b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ <nl> package org . apache . cassandra . utils ; <nl> <nl> import java . net . InetAddress ; <nl> + import java . nio . ByteBuffer ; <nl> import java . util . * ; <nl> <nl> import com . datastax . driver . core . * ; <nl> @ @ - 176 , 6 + 177 , 17 @ @ public class NativeSSTableLoaderClient extends SSTableLoader . Client <nl> for ( Row colRow : session . execute ( columnsQuery , keyspace , name ) ) <nl> builder . addColumn ( createDefinitionFromRow ( colRow , keyspace , name , types ) ) ; <nl> <nl> + String droppedColumnsQuery = String . format ( " SELECT * FROM % s . % s WHERE keyspace _ name = ? AND table _ name = ? " , <nl> + SchemaConstants . SCHEMA _ KEYSPACE _ NAME , <nl> + SchemaKeyspace . DROPPED _ COLUMNS ) ; <nl> + Map < ByteBuffer , DroppedColumn > droppedColumns = new HashMap < > ( ) ; <nl> + for ( Row colRow : session . execute ( droppedColumnsQuery , keyspace , name ) ) <nl> + { <nl> + DroppedColumn droppedColumn = createDroppedColumnFromRow ( colRow , keyspace , name ) ; <nl> + droppedColumns . put ( droppedColumn . column . name . bytes , droppedColumn ) ; <nl> + } <nl> + builder . droppedColumns ( droppedColumns ) ; <nl> + <nl> return TableMetadataRef . forOfflineTools ( builder . build ( ) ) ; <nl> } <nl> <nl> @ @ - 194 , 4 + 206 , 14 @ @ public class NativeSSTableLoaderClient extends SSTableLoader . Client <nl> org . apache . cassandra . schema . ColumnMetadata . Kind kind = ColumnMetadata . Kind . valueOf ( row . getString ( " kind " ) . toUpperCase ( ) ) ; <nl> return new ColumnMetadata ( keyspace , table , name , type , position , kind ) ; <nl> } <nl> + <nl> + private static DroppedColumn createDroppedColumnFromRow ( Row row , String keyspace , String table ) <nl> + { <nl> + String name = row . getString ( " column _ name " ) ; <nl> + AbstractType < ? > type = CQLTypeParser . parse ( keyspace , row . getString ( " type " ) , Types . none ( ) ) ; <nl> + ColumnMetadata . Kind kind = ColumnMetadata . Kind . valueOf ( row . getString ( " kind " ) . toUpperCase ( ) ) ; <nl> + ColumnMetadata column = new ColumnMetadata ( keyspace , table , ColumnIdentifier . getInterned ( name , true ) , type , ColumnMetadata . NO _ POSITION , kind ) ; <nl> + long droppedTime = row . getTimestamp ( " dropped _ time " ) . getTime ( ) ; <nl> + return new DroppedColumn ( column , droppedTime ) ; <nl> + } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index d462ed1 . . db863e1 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 81 , 6 + 81 , 7 @ @ 
 * Address message coalescing regression ( CASSANDRA - 12676 ) 
 * Delete illegal character from StandardTokenizerImpl . jflex ( CASSANDRA - 13417 ) 
 Merged from 3 . 0 : 
 + * Fix SSTableLoader fail when the loaded table contains dropped columns ( CASSANDRA - 13276 ) 
 * Avoid name clashes in CassandraIndexTest ( CASSANDRA - 13427 ) 
 * Handling partially written hint files ( CASSANDRA - 12728 ) 
 * Interrupt replaying hints on decommission ( CASSANDRA - 13308 ) 
 diff - - git a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java 
 index ba702dd . . 84a4c32 100644 
 - - - a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java 
 + + + b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java 
 @ @ - 18 , 6 + 18 , 7 @ @ 
 package org . apache . cassandra . utils ; 
 
 import java . net . InetAddress ; 
 + import java . nio . ByteBuffer ; 
 import java . util . * ; 
 
 import com . datastax . driver . core . * ; 
 @ @ - 176 , 6 + 177 , 17 @ @ public class NativeSSTableLoaderClient extends SSTableLoader . Client 
 for ( Row colRow : session . execute ( columnsQuery , keyspace , name ) ) 
 builder . addColumn ( createDefinitionFromRow ( colRow , keyspace , name , types ) ) ; 
 
 + String droppedColumnsQuery = String . format ( " SELECT * FROM % s . % s WHERE keyspace _ name = ? AND table _ name = ? " , 
 + SchemaConstants . SCHEMA _ KEYSPACE _ NAME , 
 + SchemaKeyspace . DROPPED _ COLUMNS ) ; 
 + Map < ByteBuffer , DroppedColumn > droppedColumns = new HashMap < > ( ) ; 
 + for ( Row colRow : session . execute ( droppedColumnsQuery , keyspace , name ) ) 
 + { 
 + DroppedColumn droppedColumn = createDroppedColumnFromRow ( colRow , keyspace , name ) ; 
 + droppedColumns . put ( droppedColumn . column . name . bytes , droppedColumn ) ; 
 + } 
 + builder . droppedColumns ( droppedColumns ) ; 
 + 
 return TableMetadataRef . forOfflineTools ( builder . build ( ) ) ; 
 } 
 
 @ @ - 194 , 4 + 206 , 14 @ @ public class NativeSSTableLoaderClient extends SSTableLoader . Client 
 org . apache . cassandra . schema . ColumnMetadata . Kind kind = ColumnMetadata . Kind . valueOf ( row . getString ( " kind " ) . toUpperCase ( ) ) ; 
 return new ColumnMetadata ( keyspace , table , name , type , position , kind ) ; 
 } 
 + 
 + private static DroppedColumn createDroppedColumnFromRow ( Row row , String keyspace , String table ) 
 + { 
 + String name = row . getString ( " column _ name " ) ; 
 + AbstractType < ? > type = CQLTypeParser . parse ( keyspace , row . getString ( " type " ) , Types . none ( ) ) ; 
 + ColumnMetadata . Kind kind = ColumnMetadata . Kind . valueOf ( row . getString ( " kind " ) . toUpperCase ( ) ) ; 
 + ColumnMetadata column = new ColumnMetadata ( keyspace , table , ColumnIdentifier . getInterned ( name , true ) , type , ColumnMetadata . NO _ POSITION , kind ) ; 
 + long droppedTime = row . getTimestamp ( " dropped _ time " ) . getTime ( ) ; 
 + return new DroppedColumn ( column , droppedTime ) ; 
 + } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
