BLEU SCORE: 0.049900497019368314

TEST MSG: Add missing MOVED _ NODE event to native protocol spec
GENERATED MSG: Added lines for BATCH response to v2 spec

TEST DIFF (one line): diff - - git a / doc / native _ protocol _ v1 . spec b / doc / native _ protocol _ v1 . spec <nl> index bc2bb78 . . 41146f9 100644 <nl> - - - a / doc / native _ protocol _ v1 . spec <nl> + + + b / doc / native _ protocol _ v1 . spec <nl> @ @ - 486 , 8 + 486 , 8 @ @ Table of Contents <nl> Currently , events are sent when new nodes are added to the cluster , and <nl> when nodes are removed . The body of the message ( after the event type ) <nl> consists of a [ string ] and an [ inet ] , corresponding respectively to the <nl> - type of change ( " NEW _ NODE " or " REMOVED _ NODE " ) followed by the address of <nl> - the new / removed node . <nl> + type of change ( " NEW _ NODE " , " REMOVED _ NODE " , or " MOVED _ NODE " ) followed <nl> + by the address of the new / removed / moved node . <nl> - " STATUS _ CHANGE " : events related to change of node status . Currently , <nl> up / down events are sent . The body of the message ( after the event type ) <nl> consists of a [ string ] and an [ inet ] , corresponding respectively to the <nl> @ @ - 509 , 6 + 509 , 9 @ @ Table of Contents <nl> should be enough ) , otherwise they may experience a connection refusal at <nl> first . <nl> <nl> + It is possible for the same event to be sent multiple times . Therefore , <nl> + a client library should ignore the same event if it has already been notified <nl> + of a change . <nl> <nl> 5 . Compression <nl> <nl> diff - - git a / doc / native _ protocol _ v2 . spec b / doc / native _ protocol _ v2 . spec <nl> index ef54099 . . 584ae2f 100644 <nl> - - - a / doc / native _ protocol _ v2 . spec <nl> + + + b / doc / native _ protocol _ v2 . spec <nl> @ @ - 604 , 8 + 604 , 8 @ @ Table of Contents <nl> Currently , events are sent when new nodes are added to the cluster , and <nl> when nodes are removed . The body of the message ( after the event type ) <nl> consists of a [ string ] and an [ inet ] , corresponding respectively to the <nl> - type of change ( " NEW _ NODE " or " REMOVED _ NODE " ) followed by the address of <nl> - the new / removed node . <nl> + type of change ( " NEW _ NODE " , " REMOVED _ NODE " , or " MOVED _ NODE " ) followed <nl> + by the address of the new / removed / moved node . <nl> - " STATUS _ CHANGE " : events related to change of node status . Currently , <nl> up / down events are sent . The body of the message ( after the event type ) <nl> consists of a [ string ] and an [ inet ] , corresponding respectively to the <nl> @ @ - 627 , 6 + 627 , 10 @ @ Table of Contents <nl> should be enough ) , otherwise they may experience a connection refusal at <nl> first . <nl> <nl> + It is possible for the same event to be sent multiple times . Therefore , <nl> + a client library should ignore the same event if it has already been notified <nl> + of a change . <nl> + <nl> 4 . 2 . 7 . AUTH _ CHALLENGE <nl> <nl> A server authentication challenge ( see AUTH _ RESPONSE ( Section 4 . 1 . 2 ) for more
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / metrics / CassandraMetricRegistry . java b / src / java / org / apache / cassandra / metrics / CassandraMetricRegistry . java <nl> index 2f2a855 . . c69e8af 100644 <nl> - - - a / src / java / org / apache / cassandra / metrics / CassandraMetricRegistry . java <nl> + + + b / src / java / org / apache / cassandra / metrics / CassandraMetricRegistry . java <nl> @ @ - 17 , 12 + 17 , 18 @ @ <nl> * / <nl> package org . apache . cassandra . metrics ; <nl> <nl> + import com . codahale . metrics . JmxReporter ; <nl> import com . codahale . metrics . Metric ; <nl> import com . codahale . metrics . MetricRegistry ; <nl> <nl> public class CassandraMetricRegistry <nl> { <nl> private static MetricRegistry defaultRegistry = new MetricRegistry ( ) ; <nl> + static <nl> + { <nl> + JmxReporter reporter = JmxReporter . forRegistry ( defaultRegistry ) . build ( ) ; <nl> + reporter . start ( ) ; <nl> + } <nl> <nl> private CassandraMetricRegistry ( ) <nl> { <nl> diff - - git a / test / unit / org / apache / cassandra / db / RowIterationTest . java b / test / unit / org / apache / cassandra / db / RowIterationTest . java <nl> index c083b19 . . 084be2d 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / RowIterationTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / RowIterationTest . java <nl> @ @ - 85 , 7 + 85 , 7 @ @ public class RowIterationTest extends SchemaLoader <nl> rm . apply ( ) ; <nl> store . forceBlockingFlush ( ) ; <nl> <nl> - ColumnFamily cf = Util . getRangeSlice ( store ) . iterator ( ) . next ( ) . cf ; <nl> + ColumnFamily cf = Util . getRangeSlice ( store ) . get ( 0 ) . cf ; <nl> assert cf . deletionInfo ( ) . equals ( delInfo2 ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / doc / native _ protocol _ v1 . spec b / doc / native _ protocol _ v1 . spec 
 index bc2bb78 . . 41146f9 100644 
 - - - a / doc / native _ protocol _ v1 . spec 
 + + + b / doc / native _ protocol _ v1 . spec 
 @ @ - 486 , 8 + 486 , 8 @ @ Table of Contents 
 Currently , events are sent when new nodes are added to the cluster , and 
 when nodes are removed . The body of the message ( after the event type ) 
 consists of a [ string ] and an [ inet ] , corresponding respectively to the 
 - type of change ( " NEW _ NODE " or " REMOVED _ NODE " ) followed by the address of 
 - the new / removed node . 
 + type of change ( " NEW _ NODE " , " REMOVED _ NODE " , or " MOVED _ NODE " ) followed 
 + by the address of the new / removed / moved node . 
 - " STATUS _ CHANGE " : events related to change of node status . Currently , 
 up / down events are sent . The body of the message ( after the event type ) 
 consists of a [ string ] and an [ inet ] , corresponding respectively to the 
 @ @ - 509 , 6 + 509 , 9 @ @ Table of Contents 
 should be enough ) , otherwise they may experience a connection refusal at 
 first . 
 
 + It is possible for the same event to be sent multiple times . Therefore , 
 + a client library should ignore the same event if it has already been notified 
 + of a change . 
 
 5 . Compression 
 
 diff - - git a / doc / native _ protocol _ v2 . spec b / doc / native _ protocol _ v2 . spec 
 index ef54099 . . 584ae2f 100644 
 - - - a / doc / native _ protocol _ v2 . spec 
 + + + b / doc / native _ protocol _ v2 . spec 
 @ @ - 604 , 8 + 604 , 8 @ @ Table of Contents 
 Currently , events are sent when new nodes are added to the cluster , and 
 when nodes are removed . The body of the message ( after the event type ) 
 consists of a [ string ] and an [ inet ] , corresponding respectively to the 
 - type of change ( " NEW _ NODE " or " REMOVED _ NODE " ) followed by the address of 
 - the new / removed node . 
 + type of change ( " NEW _ NODE " , " REMOVED _ NODE " , or " MOVED _ NODE " ) followed 
 + by the address of the new / removed / moved node . 
 - " STATUS _ CHANGE " : events related to change of node status . Currently , 
 up / down events are sent . The body of the message ( after the event type ) 
 consists of a [ string ] and an [ inet ] , corresponding respectively to the 
 @ @ - 627 , 6 + 627 , 10 @ @ Table of Contents 
 should be enough ) , otherwise they may experience a connection refusal at 
 first . 
 
 + It is possible for the same event to be sent multiple times . Therefore , 
 + a client library should ignore the same event if it has already been notified 
 + of a change . 
 + 
 4 . 2 . 7 . AUTH _ CHALLENGE 
 
 A server authentication challenge ( see AUTH _ RESPONSE ( Section 4 . 1 . 2 ) for more

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / metrics / CassandraMetricRegistry . java b / src / java / org / apache / cassandra / metrics / CassandraMetricRegistry . java 
 index 2f2a855 . . c69e8af 100644 
 - - - a / src / java / org / apache / cassandra / metrics / CassandraMetricRegistry . java 
 + + + b / src / java / org / apache / cassandra / metrics / CassandraMetricRegistry . java 
 @ @ - 17 , 12 + 17 , 18 @ @ 
 * / 
 package org . apache . cassandra . metrics ; 
 
 + import com . codahale . metrics . JmxReporter ; 
 import com . codahale . metrics . Metric ; 
 import com . codahale . metrics . MetricRegistry ; 
 
 public class CassandraMetricRegistry 
 { 
 private static MetricRegistry defaultRegistry = new MetricRegistry ( ) ; 
 + static 
 + { 
 + JmxReporter reporter = JmxReporter . forRegistry ( defaultRegistry ) . build ( ) ; 
 + reporter . start ( ) ; 
 + } 
 
 private CassandraMetricRegistry ( ) 
 { 
 diff - - git a / test / unit / org / apache / cassandra / db / RowIterationTest . java b / test / unit / org / apache / cassandra / db / RowIterationTest . java 
 index c083b19 . . 084be2d 100644 
 - - - a / test / unit / org / apache / cassandra / db / RowIterationTest . java 
 + + + b / test / unit / org / apache / cassandra / db / RowIterationTest . java 
 @ @ - 85 , 7 + 85 , 7 @ @ public class RowIterationTest extends SchemaLoader 
 rm . apply ( ) ; 
 store . forceBlockingFlush ( ) ; 
 
 - ColumnFamily cf = Util . getRangeSlice ( store ) . iterator ( ) . next ( ) . cf ; 
 + ColumnFamily cf = Util . getRangeSlice ( store ) . get ( 0 ) . cf ; 
 assert cf . deletionInfo ( ) . equals ( delInfo2 ) ; 
 } 

