BLEU SCORE: 0.01898400888797787

TEST MSG: Update peer information when a node jumps to normal .
GENERATED MSG: Fix bug preventing the use of efficient cross - DC writes

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index bfca642 . . ed6d031 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 1383 , 6 + 1383 , 35 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> } <nl> } <nl> <nl> + private void updatePeerInfo ( InetAddress endpoint ) <nl> + { <nl> + EndpointState epState = Gossiper . instance . getEndpointStateForEndpoint ( endpoint ) ; <nl> + for ( Map . Entry < ApplicationState , VersionedValue > entry : epState . getApplicationStateMap ( ) . entrySet ( ) ) <nl> + { <nl> + switch ( entry . getKey ( ) ) <nl> + { <nl> + case RELEASE _ VERSION : <nl> + SystemTable . updatePeerInfo ( endpoint , " release _ version " , quote ( entry . getValue ( ) . value ) ) ; <nl> + break ; <nl> + case DC : <nl> + SystemTable . updatePeerInfo ( endpoint , " data _ center " , quote ( entry . getValue ( ) . value ) ) ; <nl> + break ; <nl> + case RACK : <nl> + SystemTable . updatePeerInfo ( endpoint , " rack " , quote ( entry . getValue ( ) . value ) ) ; <nl> + break ; <nl> + case RPC _ ADDRESS : <nl> + SystemTable . updatePeerInfo ( endpoint , " rpc _ address " , quote ( entry . getValue ( ) . value ) ) ; <nl> + break ; <nl> + case SCHEMA : <nl> + SystemTable . updatePeerInfo ( endpoint , " schema _ version " , entry . getValue ( ) . value ) ; <nl> + break ; <nl> + case HOST _ ID : <nl> + SystemTable . updatePeerInfo ( endpoint , " host _ id " , entry . getValue ( ) . value ) ; <nl> + break ; <nl> + } <nl> + } <nl> + } <nl> + <nl> private String quote ( String value ) <nl> { <nl> return " ' " + value + " ' " ; <nl> @ @ - 1484 , 6 + 1513 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE <nl> if ( tokenMetadata . isMember ( endpoint ) ) <nl> logger . info ( " Node " + endpoint + " state jump to normal " ) ; <nl> <nl> + updatePeerInfo ( endpoint ) ; <nl> / / Order Matters , TM . updateHostID ( ) should be called before TM . updateNormalToken ( ) , ( see CASSANDRA - 4300 ) . <nl> if ( Gossiper . instance . usesHostId ( endpoint ) ) <nl> {
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 9c38702 . . 90c1650 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 10 , 6 + 10 , 7 @ @ Merged from 0 . 8 : <nl> * fix displaying cfdef entries for super columnfamilies ( CASSANDRA - 3415 ) <nl> * Make counter shard merging thread safe ( CASSANDRA - 3178 ) <nl> * Revert CASSANDRA - 2855 <nl> + * Fix bug preventing the use of efficient cross - DC writes ( CASSANDRA - 3472 ) <nl> <nl> 1 . 0 . 2 <nl> * " defragment " rows for name - based queries under STCS ( CASSANDRA - 2503 ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> index 82eb3bd . . ce22cbf 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageProxy . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageProxy . java <nl> @ @ - 393 , 7 + 393 , 7 @ @ public class StorageProxy implements StorageProxyMBean <nl> / / from previous loop iterations <nl> message . removeHeader ( RowMutation . FORWARD _ HEADER ) ; <nl> <nl> - if ( dataCenter . equals ( localDataCenter ) | | StorageService . instance . useEfficientCrossDCWrites ( ) ) <nl> + if ( dataCenter . equals ( localDataCenter ) ) <nl> { <nl> / / direct writes to local DC or old Cassadra versions <nl> for ( InetAddress destination : messages . getValue ( ) ) <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index d040723 . . 0da6824 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 205 , 7 + 205 , 6 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> private static enum Mode { NORMAL , CLIENT , JOINING , LEAVING , DECOMMISSIONED , MOVING , DRAINING , DRAINED } <nl> private Mode operationMode ; <nl> <nl> - private volatile boolean efficientCrossDCWrites ; <nl> private MigrationManager migrationManager = new MigrationManager ( ) ; <nl> <nl> / * Used for tracking drain progress * / <nl> @ @ - 798 , 9 + 797 , 6 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> { <nl> switch ( state ) <nl> { <nl> - case RELEASE _ VERSION : <nl> - updateEfficientCrossDCWriteMode ( ) ; <nl> - break ; <nl> case STATUS : <nl> String apStateValue = value . value ; <nl> String [ ] pieces = apStateValue . split ( VersionedValue . DELIMITER _ STR , - 1 ) ; <nl> @ @ - 824 , 25 + 820 , 6 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> } <nl> <nl> / * * <nl> - * We can remove this in 0 . 8 , since mixing 0 . 7 . 0 with 0 . 8 is not supported ( 0 . 7 . 1 is required ) <nl> - * / <nl> - private void updateEfficientCrossDCWriteMode ( ) <nl> - { <nl> - for ( Map . Entry < InetAddress , EndpointState > entry : Gossiper . instance . getEndpointStates ( ) ) <nl> - { <nl> - VersionedValue version = entry . getValue ( ) . getApplicationState ( ApplicationState . RELEASE _ VERSION ) ; <nl> - <nl> - / / no version means it ' s old code that doesn ' t gossip version , < 0 . 7 . 1 . <nl> - if ( version = = null ) <nl> - { <nl> - efficientCrossDCWrites = false ; <nl> - return ; <nl> - } <nl> - } <nl> - efficientCrossDCWrites = true ; <nl> - } <nl> - <nl> - / * * <nl> * Handle node bootstrap <nl> * <nl> * @ param endpoint bootstrapping node <nl> @ @ - 2509 , 11 + 2486 , 6 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> ( ( DynamicEndpointSnitch ) oldSnitch ) . unregisterMBean ( ) ; <nl> } <nl> <nl> - public boolean useEfficientCrossDCWrites ( ) <nl> - { <nl> - return efficientCrossDCWrites ; <nl> - } <nl> - <nl> / * * <nl> * Flushes the two largest memtables by ops and by throughput <nl> * /

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index bfca642 . . ed6d031 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 1383 , 6 + 1383 , 35 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 } 
 } 
 
 + private void updatePeerInfo ( InetAddress endpoint ) 
 + { 
 + EndpointState epState = Gossiper . instance . getEndpointStateForEndpoint ( endpoint ) ; 
 + for ( Map . Entry < ApplicationState , VersionedValue > entry : epState . getApplicationStateMap ( ) . entrySet ( ) ) 
 + { 
 + switch ( entry . getKey ( ) ) 
 + { 
 + case RELEASE _ VERSION : 
 + SystemTable . updatePeerInfo ( endpoint , " release _ version " , quote ( entry . getValue ( ) . value ) ) ; 
 + break ; 
 + case DC : 
 + SystemTable . updatePeerInfo ( endpoint , " data _ center " , quote ( entry . getValue ( ) . value ) ) ; 
 + break ; 
 + case RACK : 
 + SystemTable . updatePeerInfo ( endpoint , " rack " , quote ( entry . getValue ( ) . value ) ) ; 
 + break ; 
 + case RPC _ ADDRESS : 
 + SystemTable . updatePeerInfo ( endpoint , " rpc _ address " , quote ( entry . getValue ( ) . value ) ) ; 
 + break ; 
 + case SCHEMA : 
 + SystemTable . updatePeerInfo ( endpoint , " schema _ version " , entry . getValue ( ) . value ) ; 
 + break ; 
 + case HOST _ ID : 
 + SystemTable . updatePeerInfo ( endpoint , " host _ id " , entry . getValue ( ) . value ) ; 
 + break ; 
 + } 
 + } 
 + } 
 + 
 private String quote ( String value ) 
 { 
 return " ' " + value + " ' " ; 
 @ @ - 1484 , 6 + 1513 , 7 @ @ public class StorageService extends NotificationBroadcasterSupport implements IE 
 if ( tokenMetadata . isMember ( endpoint ) ) 
 logger . info ( " Node " + endpoint + " state jump to normal " ) ; 
 
 + updatePeerInfo ( endpoint ) ; 
 / / Order Matters , TM . updateHostID ( ) should be called before TM . updateNormalToken ( ) , ( see CASSANDRA - 4300 ) . 
 if ( Gossiper . instance . usesHostId ( endpoint ) ) 
 {

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 9c38702 . . 90c1650 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 10 , 6 + 10 , 7 @ @ Merged from 0 . 8 : 
 * fix displaying cfdef entries for super columnfamilies ( CASSANDRA - 3415 ) 
 * Make counter shard merging thread safe ( CASSANDRA - 3178 ) 
 * Revert CASSANDRA - 2855 
 + * Fix bug preventing the use of efficient cross - DC writes ( CASSANDRA - 3472 ) 
 
 1 . 0 . 2 
 * " defragment " rows for name - based queries under STCS ( CASSANDRA - 2503 ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageProxy . java b / src / java / org / apache / cassandra / service / StorageProxy . java 
 index 82eb3bd . . ce22cbf 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageProxy . java 
 + + + b / src / java / org / apache / cassandra / service / StorageProxy . java 
 @ @ - 393 , 7 + 393 , 7 @ @ public class StorageProxy implements StorageProxyMBean 
 / / from previous loop iterations 
 message . removeHeader ( RowMutation . FORWARD _ HEADER ) ; 
 
 - if ( dataCenter . equals ( localDataCenter ) | | StorageService . instance . useEfficientCrossDCWrites ( ) ) 
 + if ( dataCenter . equals ( localDataCenter ) ) 
 { 
 / / direct writes to local DC or old Cassadra versions 
 for ( InetAddress destination : messages . getValue ( ) ) 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index d040723 . . 0da6824 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 205 , 7 + 205 , 6 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 private static enum Mode { NORMAL , CLIENT , JOINING , LEAVING , DECOMMISSIONED , MOVING , DRAINING , DRAINED } 
 private Mode operationMode ; 
 
 - private volatile boolean efficientCrossDCWrites ; 
 private MigrationManager migrationManager = new MigrationManager ( ) ; 
 
 / * Used for tracking drain progress * / 
 @ @ - 798 , 9 + 797 , 6 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 { 
 switch ( state ) 
 { 
 - case RELEASE _ VERSION : 
 - updateEfficientCrossDCWriteMode ( ) ; 
 - break ; 
 case STATUS : 
 String apStateValue = value . value ; 
 String [ ] pieces = apStateValue . split ( VersionedValue . DELIMITER _ STR , - 1 ) ; 
 @ @ - 824 , 25 + 820 , 6 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 } 
 
 / * * 
 - * We can remove this in 0 . 8 , since mixing 0 . 7 . 0 with 0 . 8 is not supported ( 0 . 7 . 1 is required ) 
 - * / 
 - private void updateEfficientCrossDCWriteMode ( ) 
 - { 
 - for ( Map . Entry < InetAddress , EndpointState > entry : Gossiper . instance . getEndpointStates ( ) ) 
 - { 
 - VersionedValue version = entry . getValue ( ) . getApplicationState ( ApplicationState . RELEASE _ VERSION ) ; 
 - 
 - / / no version means it ' s old code that doesn ' t gossip version , < 0 . 7 . 1 . 
 - if ( version = = null ) 
 - { 
 - efficientCrossDCWrites = false ; 
 - return ; 
 - } 
 - } 
 - efficientCrossDCWrites = true ; 
 - } 
 - 
 - / * * 
 * Handle node bootstrap 
 * 
 * @ param endpoint bootstrapping node 
 @ @ - 2509 , 11 + 2486 , 6 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 ( ( DynamicEndpointSnitch ) oldSnitch ) . unregisterMBean ( ) ; 
 } 
 
 - public boolean useEfficientCrossDCWrites ( ) 
 - { 
 - return efficientCrossDCWrites ; 
 - } 
 - 
 / * * 
 * Flushes the two largest memtables by ops and by throughput 
 * /
