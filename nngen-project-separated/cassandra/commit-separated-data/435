BLEU SCORE: 0.04873498938813619

TEST MSG: Fix NPEs in original CASSANDRA - 13324 commit
GENERATED MSG: Starting threads in the OutboundTcpConnectionPool constructor causes race conditions

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java <nl> index 55604d0 . . b7d4329 100644 <nl> - - - a / src / java / org / apache / cassandra / net / MessagingService . java <nl> + + + b / src / java / org / apache / cassandra / net / MessagingService . java <nl> @ @ - 536 , 8 + 536 , 6 @ @ public final class MessagingService implements MessagingServiceMBean <nl> if ( cp ! = null ) <nl> cp . incrementTimeout ( ) ; <nl> <nl> - getConnectionPool ( expiredCallbackInfo . target ) . incrementTimeout ( ) ; <nl> - <nl> if ( expiredCallbackInfo . callback . supportsBackPressure ( ) ) <nl> { <nl> updateBackPressureOnReceive ( expiredCallbackInfo . target , expiredCallbackInfo . callback , true ) ; <nl> @ @ - 607 , 8 + 605 , 12 @ @ public final class MessagingService implements MessagingServiceMBean <nl> { <nl> if ( DatabaseDescriptor . backPressureEnabled ( ) & & callback . supportsBackPressure ( ) ) <nl> { <nl> - BackPressureState backPressureState = getConnectionPool ( host ) . getBackPressureState ( ) ; <nl> - backPressureState . onMessageSent ( message ) ; <nl> + OutboundTcpConnectionPool cp = getConnectionPool ( host ) ; <nl> + if ( cp ! = null ) <nl> + { <nl> + BackPressureState backPressureState = cp . getBackPressureState ( ) ; <nl> + backPressureState . onMessageSent ( message ) ; <nl> + } <nl> } <nl> } <nl> <nl> @ @ - 623 , 11 + 625 , 15 @ @ public final class MessagingService implements MessagingServiceMBean <nl> { <nl> if ( DatabaseDescriptor . backPressureEnabled ( ) & & callback . supportsBackPressure ( ) ) <nl> { <nl> - BackPressureState backPressureState = getConnectionPool ( host ) . getBackPressureState ( ) ; <nl> - if ( ! timeout ) <nl> - backPressureState . onResponseReceived ( ) ; <nl> - else <nl> - backPressureState . onResponseTimeout ( ) ; <nl> + OutboundTcpConnectionPool cp = getConnectionPool ( host ) ; <nl> + if ( cp ! = null ) <nl> + { <nl> + BackPressureState backPressureState = cp . getBackPressureState ( ) ; <nl> + if ( ! timeout ) <nl> + backPressureState . onResponseReceived ( ) ; <nl> + else <nl> + backPressureState . onResponseTimeout ( ) ; <nl> + } <nl> } <nl> } <nl> <nl> @ @ - 644 , 10 + 650 , 16 @ @ public final class MessagingService implements MessagingServiceMBean <nl> { <nl> if ( DatabaseDescriptor . backPressureEnabled ( ) ) <nl> { <nl> - backPressure . apply ( StreamSupport . stream ( hosts . spliterator ( ) , false ) <nl> - . filter ( h - > ! h . equals ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> - . map ( h - > getConnectionPool ( h ) . getBackPressureState ( ) ) <nl> - . collect ( Collectors . toSet ( ) ) , timeoutInNanos , TimeUnit . NANOSECONDS ) ; <nl> + Set < BackPressureState > states = new HashSet < BackPressureState > ( ) ; <nl> + for ( InetAddress host : hosts ) <nl> + { <nl> + if ( host . equals ( FBUtilities . getBroadcastAddress ( ) ) ) <nl> + continue ; <nl> + OutboundTcpConnectionPool cp = getConnectionPool ( host ) ; <nl> + if ( cp ! = null ) <nl> + states . add ( cp . getBackPressureState ( ) ) ; <nl> + } <nl> + backPressure . apply ( states , timeoutInNanos , TimeUnit . NANOSECONDS ) ; <nl> } <nl> } <nl> <nl> @ @ - 679 , 7 + 691 , 7 @ @ public final class MessagingService implements MessagingServiceMBean <nl> if ( cp ! = null ) <nl> { <nl> logger . trace ( " Resetting pool for { } " , ep ) ; <nl> - getConnectionPool ( ep ) . reset ( ) ; <nl> + cp . reset ( ) ; <nl> } <nl> else <nl> {
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / net / MessagingService . java b / src / java / org / apache / cassandra / net / MessagingService . java 
 index 55604d0 . . b7d4329 100644 
 - - - a / src / java / org / apache / cassandra / net / MessagingService . java 
 + + + b / src / java / org / apache / cassandra / net / MessagingService . java 
 @ @ - 536 , 8 + 536 , 6 @ @ public final class MessagingService implements MessagingServiceMBean 
 if ( cp ! = null ) 
 cp . incrementTimeout ( ) ; 
 
 - getConnectionPool ( expiredCallbackInfo . target ) . incrementTimeout ( ) ; 
 - 
 if ( expiredCallbackInfo . callback . supportsBackPressure ( ) ) 
 { 
 updateBackPressureOnReceive ( expiredCallbackInfo . target , expiredCallbackInfo . callback , true ) ; 
 @ @ - 607 , 8 + 605 , 12 @ @ public final class MessagingService implements MessagingServiceMBean 
 { 
 if ( DatabaseDescriptor . backPressureEnabled ( ) & & callback . supportsBackPressure ( ) ) 
 { 
 - BackPressureState backPressureState = getConnectionPool ( host ) . getBackPressureState ( ) ; 
 - backPressureState . onMessageSent ( message ) ; 
 + OutboundTcpConnectionPool cp = getConnectionPool ( host ) ; 
 + if ( cp ! = null ) 
 + { 
 + BackPressureState backPressureState = cp . getBackPressureState ( ) ; 
 + backPressureState . onMessageSent ( message ) ; 
 + } 
 } 
 } 
 
 @ @ - 623 , 11 + 625 , 15 @ @ public final class MessagingService implements MessagingServiceMBean 
 { 
 if ( DatabaseDescriptor . backPressureEnabled ( ) & & callback . supportsBackPressure ( ) ) 
 { 
 - BackPressureState backPressureState = getConnectionPool ( host ) . getBackPressureState ( ) ; 
 - if ( ! timeout ) 
 - backPressureState . onResponseReceived ( ) ; 
 - else 
 - backPressureState . onResponseTimeout ( ) ; 
 + OutboundTcpConnectionPool cp = getConnectionPool ( host ) ; 
 + if ( cp ! = null ) 
 + { 
 + BackPressureState backPressureState = cp . getBackPressureState ( ) ; 
 + if ( ! timeout ) 
 + backPressureState . onResponseReceived ( ) ; 
 + else 
 + backPressureState . onResponseTimeout ( ) ; 
 + } 
 } 
 } 
 
 @ @ - 644 , 10 + 650 , 16 @ @ public final class MessagingService implements MessagingServiceMBean 
 { 
 if ( DatabaseDescriptor . backPressureEnabled ( ) ) 
 { 
 - backPressure . apply ( StreamSupport . stream ( hosts . spliterator ( ) , false ) 
 - . filter ( h - > ! h . equals ( FBUtilities . getBroadcastAddress ( ) ) ) 
 - . map ( h - > getConnectionPool ( h ) . getBackPressureState ( ) ) 
 - . collect ( Collectors . toSet ( ) ) , timeoutInNanos , TimeUnit . NANOSECONDS ) ; 
 + Set < BackPressureState > states = new HashSet < BackPressureState > ( ) ; 
 + for ( InetAddress host : hosts ) 
 + { 
 + if ( host . equals ( FBUtilities . getBroadcastAddress ( ) ) ) 
 + continue ; 
 + OutboundTcpConnectionPool cp = getConnectionPool ( host ) ; 
 + if ( cp ! = null ) 
 + states . add ( cp . getBackPressureState ( ) ) ; 
 + } 
 + backPressure . apply ( states , timeoutInNanos , TimeUnit . NANOSECONDS ) ; 
 } 
 } 
 
 @ @ - 679 , 7 + 691 , 7 @ @ public final class MessagingService implements MessagingServiceMBean 
 if ( cp ! = null ) 
 { 
 logger . trace ( " Resetting pool for { } " , ep ) ; 
 - getConnectionPool ( ep ) . reset ( ) ; 
 + cp . reset ( ) ; 
 } 
 else 
 {

NEAREST DIFF:
ELIMINATEDSENTENCE
