BLEU SCORE: 0.05073552004225952

TEST MSG: Fix hardcoded overhead size in commit log test .
GENERATED MSG: Fix License headers and add assert which was missed .

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java <nl> index 2120d3e . . c87b328 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java <nl> @ @ - 74 , 7 + 74 , 7 @ @ public class CommitLogSegment <nl> } <nl> <nl> / / The commit log entry overhead in bytes ( int : length + int : head checksum + int : tail checksum ) <nl> - static final int ENTRY _ OVERHEAD _ SIZE = 4 + 4 + 4 ; <nl> + public static final int ENTRY _ OVERHEAD _ SIZE = 4 + 4 + 4 ; <nl> <nl> / / The commit log ( chained ) sync marker / header size in bytes ( int : length + int : checksum [ segmentId , position ] ) <nl> static final int SYNC _ MARKER _ SIZE = 4 + 4 ; <nl> diff - - git a / test / unit / org / apache / cassandra / db / CommitLogTest . java b / test / unit / org / apache / cassandra / db / CommitLogTest . java <nl> index ddab9ea . . 660e91e 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / CommitLogTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / CommitLogTest . java <nl> @ @ - 34 , 6 + 34 , 7 @ @ import org . apache . cassandra . config . Config ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . db . commitlog . CommitLog ; <nl> import org . apache . cassandra . db . commitlog . CommitLogDescriptor ; <nl> + import org . apache . cassandra . db . commitlog . CommitLogSegment ; <nl> import org . apache . cassandra . db . composites . CellName ; <nl> import org . apache . cassandra . net . MessagingService ; <nl> <nl> @ @ - 174 , 7 + 175 , 7 @ @ public class CommitLogTest extends SchemaLoader <nl> rm . add ( " Standard1 " , Util . cellname ( " c1 " ) , ByteBuffer . allocate ( 0 ) , 0 ) ; <nl> <nl> int max = ( DatabaseDescriptor . getCommitLogSegmentSize ( ) / 2 ) ; <nl> - max - = ( 4 + 8 + 8 ) ; / / log entry overhead <nl> + max - = CommitLogSegment . ENTRY _ OVERHEAD _ SIZE ; / / log entry overhead <nl> return max - ( int ) Mutation . serializer . serializedSize ( rm , MessagingService . current _ version ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLog . java b / src / java / org / apache / cassandra / db / commitlog / CommitLog . java <nl> index a490569 . . 0b0aa27 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLog . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLog . java <nl> @ @ - 329 , 6 + 329 , 7 @ @ public class CommitLog implements CommitLogMBean <nl> private void activateNextSegment ( ) throws IOException <nl> { <nl> activeSegment = allocator . fetchSegment ( ) ; <nl> + logger . debug ( " Active segment is now { } " , activeSegment ) ; <nl> } <nl> <nl> public List < String > getActiveSegmentNames ( ) <nl> diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogAllocator . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogAllocator . java <nl> index 5d8636d . . 0634fa3 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogAllocator . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogAllocator . java <nl> @ @ - 330 , 7 + 330 , 7 @ @ public class CommitLogAllocator <nl> while ( ! queue . isEmpty ( ) ) <nl> Thread . yield ( ) ; <nl> <nl> - for ( CommitLogSegment segment : activeSegments ) <nl> + for ( CommitLogSegment segment : Iterables . concat ( activeSegments , availableSegments ) ) <nl> segment . close ( ) ; <nl> <nl> activeSegments . clear ( ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java <nl> index 0371d8b . . e12e5ba 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java <nl> @ @ - 119 , 9 + 119 , 9 @ @ private final AtomicInteger replayedCount ; <nl> logger . info ( " Replaying " + file . getPath ( ) ) ; <nl> final long segment = CommitLogSegment . idFromFilename ( file . getName ( ) ) ; <nl> RandomAccessReader reader = RandomAccessReader . open ( new File ( file . getAbsolutePath ( ) ) , true ) ; <nl> - assert reader . length ( ) < = Integer . MAX _ VALUE ; <nl> try <nl> { <nl> + assert reader . length ( ) < = Integer . MAX _ VALUE ; <nl> int replayPosition ; <nl> if ( globalPosition . segment < segment ) <nl> replayPosition = 0 ;

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java 
 index 2120d3e . . c87b328 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java 
 @ @ - 74 , 7 + 74 , 7 @ @ public class CommitLogSegment 
 } 
 
 / / The commit log entry overhead in bytes ( int : length + int : head checksum + int : tail checksum ) 
 - static final int ENTRY _ OVERHEAD _ SIZE = 4 + 4 + 4 ; 
 + public static final int ENTRY _ OVERHEAD _ SIZE = 4 + 4 + 4 ; 
 
 / / The commit log ( chained ) sync marker / header size in bytes ( int : length + int : checksum [ segmentId , position ] ) 
 static final int SYNC _ MARKER _ SIZE = 4 + 4 ; 
 diff - - git a / test / unit / org / apache / cassandra / db / CommitLogTest . java b / test / unit / org / apache / cassandra / db / CommitLogTest . java 
 index ddab9ea . . 660e91e 100644 
 - - - a / test / unit / org / apache / cassandra / db / CommitLogTest . java 
 + + + b / test / unit / org / apache / cassandra / db / CommitLogTest . java 
 @ @ - 34 , 6 + 34 , 7 @ @ import org . apache . cassandra . config . Config ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . db . commitlog . CommitLog ; 
 import org . apache . cassandra . db . commitlog . CommitLogDescriptor ; 
 + import org . apache . cassandra . db . commitlog . CommitLogSegment ; 
 import org . apache . cassandra . db . composites . CellName ; 
 import org . apache . cassandra . net . MessagingService ; 
 
 @ @ - 174 , 7 + 175 , 7 @ @ public class CommitLogTest extends SchemaLoader 
 rm . add ( " Standard1 " , Util . cellname ( " c1 " ) , ByteBuffer . allocate ( 0 ) , 0 ) ; 
 
 int max = ( DatabaseDescriptor . getCommitLogSegmentSize ( ) / 2 ) ; 
 - max - = ( 4 + 8 + 8 ) ; / / log entry overhead 
 + max - = CommitLogSegment . ENTRY _ OVERHEAD _ SIZE ; / / log entry overhead 
 return max - ( int ) Mutation . serializer . serializedSize ( rm , MessagingService . current _ version ) ; 
 } 


NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLog . java b / src / java / org / apache / cassandra / db / commitlog / CommitLog . java 
 index a490569 . . 0b0aa27 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLog . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLog . java 
 @ @ - 329 , 6 + 329 , 7 @ @ public class CommitLog implements CommitLogMBean 
 private void activateNextSegment ( ) throws IOException 
 { 
 activeSegment = allocator . fetchSegment ( ) ; 
 + logger . debug ( " Active segment is now { } " , activeSegment ) ; 
 } 
 
 public List < String > getActiveSegmentNames ( ) 
 diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogAllocator . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogAllocator . java 
 index 5d8636d . . 0634fa3 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogAllocator . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogAllocator . java 
 @ @ - 330 , 7 + 330 , 7 @ @ public class CommitLogAllocator 
 while ( ! queue . isEmpty ( ) ) 
 Thread . yield ( ) ; 
 
 - for ( CommitLogSegment segment : activeSegments ) 
 + for ( CommitLogSegment segment : Iterables . concat ( activeSegments , availableSegments ) ) 
 segment . close ( ) ; 
 
 activeSegments . clear ( ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java 
 index 0371d8b . . e12e5ba 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogReplayer . java 
 @ @ - 119 , 9 + 119 , 9 @ @ private final AtomicInteger replayedCount ; 
 logger . info ( " Replaying " + file . getPath ( ) ) ; 
 final long segment = CommitLogSegment . idFromFilename ( file . getName ( ) ) ; 
 RandomAccessReader reader = RandomAccessReader . open ( new File ( file . getAbsolutePath ( ) ) , true ) ; 
 - assert reader . length ( ) < = Integer . MAX _ VALUE ; 
 try 
 { 
 + assert reader . length ( ) < = Integer . MAX _ VALUE ; 
 int replayPosition ; 
 if ( globalPosition . segment < segment ) 
 replayPosition = 0 ;
