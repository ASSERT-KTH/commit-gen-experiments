BLEU SCORE: 0.030718556915387486

TEST MSG: Add back support for 3rd party auth providers to bulk loader
GENERATED MSG: add auth support to sstableloader ; patch by Alexis , reviewed by yukim for CASSANDRA - 4712

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index e6ab5dd . . 199e374 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 . 3 <nl> + * Add back support for 3rd party auth providers to bulk loader ( CASSANDRA - 10873 ) <nl> * Eliminate the dependency on jgrapht for UDT resolution ( CASSANDRA - 10653 ) <nl> * ( Hadoop ) Close Clusters and Sessions in Hadoop Input / Output classes ( CASSANDRA - 1837 ) <nl> * Fix sstableloader not working with upper case keyspace name ( CASSANDRA - 10806 ) <nl> diff - - git a / src / java / org / apache / cassandra / tools / BulkLoader . java b / src / java / org / apache / cassandra / tools / BulkLoader . java <nl> index 73194a1 . . 2b94a68 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / BulkLoader . java <nl> + + + b / src / java / org / apache / cassandra / tools / BulkLoader . java <nl> @ @ - 19 , 6 + 19 , 8 @ @ package org . apache . cassandra . tools ; <nl> <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> + import java . lang . reflect . Constructor ; <nl> + import java . lang . reflect . InvocationTargetException ; <nl> import java . net . InetAddress ; <nl> import java . net . MalformedURLException ; <nl> import java . net . UnknownHostException ; <nl> @ @ - 28 , 6 + 30 , 8 @ @ import com . google . common . collect . HashMultimap ; <nl> import com . google . common . collect . Multimap ; <nl> import org . apache . commons . cli . * ; <nl> <nl> + import com . datastax . driver . core . AuthProvider ; <nl> + import com . datastax . driver . core . PlainTextAuthProvider ; <nl> import com . datastax . driver . core . SSLOptions ; <nl> import javax . net . ssl . SSLContext ; <nl> import org . apache . cassandra . config . * ; <nl> @ @ - 50 , 6 + 54 , 7 @ @ public class BulkLoader <nl> private static final String NATIVE _ PORT _ OPTION = " port " ; <nl> private static final String USER _ OPTION = " username " ; <nl> private static final String PASSWD _ OPTION = " password " ; <nl> + private static final String AUTH _ PROVIDER _ OPTION = " auth - provider " ; <nl> private static final String THROTTLE _ MBITS = " throttle " ; <nl> <nl> / * client encryption options * / <nl> @ @ - 67 , 15 + 72 , 14 @ @ public class BulkLoader <nl> public static void main ( String args [ ] ) <nl> { <nl> Config . setClientMode ( true ) ; <nl> - LoaderOptions options = LoaderOptions . parseArgs ( args ) ; <nl> + LoaderOptions options = LoaderOptions . parseArgs ( args ) . validateArguments ( ) ; <nl> OutputHandler handler = new OutputHandler . SystemOutput ( options . verbose , options . debug ) ; <nl> SSTableLoader loader = new SSTableLoader ( <nl> options . directory , <nl> new ExternalClient ( <nl> options . hosts , <nl> options . nativePort , <nl> - options . user , <nl> - options . passwd , <nl> + options . authProvider , <nl> options . storagePort , <nl> options . sslStoragePort , <nl> options . serverEncOptions , <nl> @ @ - 277 , 14 + 281 , 13 @ @ public class BulkLoader <nl> <nl> public ExternalClient ( Set < InetAddress > hosts , <nl> int port , <nl> - String user , <nl> - String passwd , <nl> + AuthProvider authProvider , <nl> int storagePort , <nl> int sslStoragePort , <nl> EncryptionOptions . ServerEncryptionOptions serverEncryptionOptions , <nl> SSLOptions sslOptions ) <nl> { <nl> - super ( hosts , port , user , passwd , sslOptions ) ; <nl> + super ( hosts , port , authProvider , sslOptions ) ; <nl> this . storagePort = storagePort ; <nl> this . sslStoragePort = sslStoragePort ; <nl> this . serverEncOptions = serverEncryptionOptions ; <nl> @ @ - 307 , 6 + 310 , 8 @ @ public class BulkLoader <nl> public int nativePort = 9042 ; <nl> public String user ; <nl> public String passwd ; <nl> + public String authProviderName ; <nl> + public AuthProvider authProvider ; <nl> public int throttle = 0 ; <nl> public int storagePort ; <nl> public int sslStoragePort ; <nl> @ @ - 374 , 6 + 379 , 9 @ @ public class BulkLoader <nl> if ( cmd . hasOption ( PASSWD _ OPTION ) ) <nl> opts . passwd = cmd . getOptionValue ( PASSWD _ OPTION ) ; <nl> <nl> + if ( cmd . hasOption ( AUTH _ PROVIDER _ OPTION ) ) <nl> + opts . authProviderName = cmd . getOptionValue ( AUTH _ PROVIDER _ OPTION ) ; <nl> + <nl> if ( cmd . hasOption ( INITIAL _ HOST _ ADDRESS _ OPTION ) ) <nl> { <nl> String [ ] nodes = cmd . getOptionValue ( INITIAL _ HOST _ ADDRESS _ OPTION ) . split ( " , " ) ; <nl> @ @ - 494 , 6 + 502 , 64 @ @ public class BulkLoader <nl> } <nl> } <nl> <nl> + public LoaderOptions validateArguments ( ) <nl> + { <nl> + / / Both username and password need to be provided <nl> + if ( ( user ! = null ) ! = ( passwd ! = null ) ) <nl> + errorMsg ( " Username and password must both be provided " , getCmdLineOptions ( ) ) ; <nl> + <nl> + if ( user ! = null ) <nl> + { <nl> + / / Support for 3rd party auth providers that support plain text credentials . <nl> + / / In this case the auth provider must provide a constructor of the form : <nl> + / / <nl> + / / public MyAuthProvider ( String username , String password ) <nl> + if ( authProviderName ! = null ) <nl> + { <nl> + try <nl> + { <nl> + Class authProviderClass = Class . forName ( authProviderName ) ; <nl> + Constructor constructor = authProviderClass . getConstructor ( String . class , String . class ) ; <nl> + authProvider = ( AuthProvider ) constructor . newInstance ( user , passwd ) ; <nl> + } <nl> + catch ( ClassNotFoundException e ) <nl> + { <nl> + errorMsg ( " Unknown auth provider : " + e . getMessage ( ) , getCmdLineOptions ( ) ) ; <nl> + } <nl> + catch ( NoSuchMethodException e ) <nl> + { <nl> + errorMsg ( " Auth provider does not support plain text credentials : " + e . getMessage ( ) , getCmdLineOptions ( ) ) ; <nl> + } <nl> + catch ( InstantiationException | IllegalAccessException | IllegalArgumentException | InvocationTargetException e ) <nl> + { <nl> + errorMsg ( " Could not create auth provider with plain text credentials : " + e . getMessage ( ) , getCmdLineOptions ( ) ) ; <nl> + } <nl> + } <nl> + else <nl> + { <nl> + / / If a 3rd party auth provider wasn ' t provided use the driver plain text provider <nl> + authProvider = new PlainTextAuthProvider ( user , passwd ) ; <nl> + } <nl> + } <nl> + / / Alternate support for 3rd party auth providers that don ' t use plain text credentials . <nl> + / / In this case the auth provider must provide a nullary constructor of the form : <nl> + / / <nl> + / / public MyAuthProvider ( ) <nl> + else if ( authProviderName ! = null ) <nl> + { <nl> + try <nl> + { <nl> + authProvider = ( AuthProvider ) Class . forName ( authProviderName ) . newInstance ( ) ; <nl> + } <nl> + catch ( ClassNotFoundException | InstantiationException | IllegalAccessException e ) <nl> + { <nl> + errorMsg ( " Unknown auth provider " + e . getMessage ( ) , getCmdLineOptions ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + return this ; <nl> + } <nl> + <nl> private static void errorMsg ( String msg , CmdLineOptions options ) <nl> { <nl> System . err . println ( msg ) ; <nl> @ @ - 513 , 6 + 579 , 7 @ @ public class BulkLoader <nl> options . addOption ( " t " , THROTTLE _ MBITS , " throttle " , " throttle speed in Mbits ( default unlimited ) " ) ; <nl> options . addOption ( " u " , USER _ OPTION , " username " , " username for cassandra authentication " ) ; <nl> options . addOption ( " pw " , PASSWD _ OPTION , " password " , " password for cassandra authentication " ) ; <nl> + options . addOption ( " ap " , AUTH _ PROVIDER _ OPTION , " auth provider " , " custom AuthProvider class name for cassandra authentication " ) ; <nl> options . addOption ( " cph " , CONNECTIONS _ PER _ HOST , " connectionsPerHost " , " number of concurrent connections - per - host . " ) ; <nl> / / ssl connection - related options <nl> options . addOption ( " ts " , SSL _ TRUSTSTORE , " TRUSTSTORE " , " Client SSL : full path to truststore " ) ; <nl> diff - - git a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java <nl> index bb927fc . . 225e453 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java <nl> + + + b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java <nl> @ @ - 40 , 18 + 40 , 22 @ @ public class NativeSSTableLoaderClient extends SSTableLoader . Client <nl> protected final Map < String , CFMetaData > tables ; <nl> private final Collection < InetAddress > hosts ; <nl> private final int port ; <nl> - private final String username ; <nl> - private final String password ; <nl> + private final AuthProvider authProvider ; <nl> private final SSLOptions sslOptions ; <nl> <nl> + <nl> public NativeSSTableLoaderClient ( Collection < InetAddress > hosts , int port , String username , String password , SSLOptions sslOptions ) <nl> { <nl> + this ( hosts , port , new PlainTextAuthProvider ( username , password ) , sslOptions ) ; <nl> + } <nl> + <nl> + public NativeSSTableLoaderClient ( Collection < InetAddress > hosts , int port , AuthProvider authProvider , SSLOptions sslOptions ) <nl> + { <nl> super ( ) ; <nl> this . tables = new HashMap < > ( ) ; <nl> this . hosts = hosts ; <nl> this . port = port ; <nl> - this . username = username ; <nl> - this . password = password ; <nl> + this . authProvider = authProvider ; <nl> this . sslOptions = sslOptions ; <nl> } <nl> <nl> @ @ - 60 , 8 + 64 , 8 @ @ public class NativeSSTableLoaderClient extends SSTableLoader . Client <nl> Cluster . Builder builder = Cluster . builder ( ) . addContactPoints ( hosts ) . withPort ( port ) ; <nl> if ( sslOptions ! = null ) <nl> builder . withSSL ( sslOptions ) ; <nl> - if ( username ! = null & & password ! = null ) <nl> - builder = builder . withCredentials ( username , password ) ; <nl> + if ( authProvider ! = null ) <nl> + builder = builder . withAuthProvider ( authProvider ) ; <nl> <nl> try ( Cluster cluster = builder . build ( ) ; Session session = cluster . connect ( ) ) <nl> {
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index a7a7ca7 . . 7425111 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 11 , 8 + 11 , 7 @ @ <nl> * Fix scrubbing of CQL3 created tables ( CASSANDRA - 4685 ) <nl> * ( CQL3 ) Fix validation when using counter and regular columns in the same table <nl> ( CASSANDRA - 4706 ) <nl> - * Fix bug starting Cassandra with simple authentication ( CASSANDRA - 4648 <nl> - * ) <nl> + * Fix bug starting Cassandra with simple authentication ( CASSANDRA - 4648 ) <nl> <nl> 1 . 2 - beta1 <nl> * add atomic _ batch _ mutate ( CASSANDRA - 4542 , - 4635 )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index e6ab5dd . . 199e374 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 . 3 
 + * Add back support for 3rd party auth providers to bulk loader ( CASSANDRA - 10873 ) 
 * Eliminate the dependency on jgrapht for UDT resolution ( CASSANDRA - 10653 ) 
 * ( Hadoop ) Close Clusters and Sessions in Hadoop Input / Output classes ( CASSANDRA - 1837 ) 
 * Fix sstableloader not working with upper case keyspace name ( CASSANDRA - 10806 ) 
 diff - - git a / src / java / org / apache / cassandra / tools / BulkLoader . java b / src / java / org / apache / cassandra / tools / BulkLoader . java 
 index 73194a1 . . 2b94a68 100644 
 - - - a / src / java / org / apache / cassandra / tools / BulkLoader . java 
 + + + b / src / java / org / apache / cassandra / tools / BulkLoader . java 
 @ @ - 19 , 6 + 19 , 8 @ @ package org . apache . cassandra . tools ; 
 
 import java . io . File ; 
 import java . io . IOException ; 
 + import java . lang . reflect . Constructor ; 
 + import java . lang . reflect . InvocationTargetException ; 
 import java . net . InetAddress ; 
 import java . net . MalformedURLException ; 
 import java . net . UnknownHostException ; 
 @ @ - 28 , 6 + 30 , 8 @ @ import com . google . common . collect . HashMultimap ; 
 import com . google . common . collect . Multimap ; 
 import org . apache . commons . cli . * ; 
 
 + import com . datastax . driver . core . AuthProvider ; 
 + import com . datastax . driver . core . PlainTextAuthProvider ; 
 import com . datastax . driver . core . SSLOptions ; 
 import javax . net . ssl . SSLContext ; 
 import org . apache . cassandra . config . * ; 
 @ @ - 50 , 6 + 54 , 7 @ @ public class BulkLoader 
 private static final String NATIVE _ PORT _ OPTION = " port " ; 
 private static final String USER _ OPTION = " username " ; 
 private static final String PASSWD _ OPTION = " password " ; 
 + private static final String AUTH _ PROVIDER _ OPTION = " auth - provider " ; 
 private static final String THROTTLE _ MBITS = " throttle " ; 
 
 / * client encryption options * / 
 @ @ - 67 , 15 + 72 , 14 @ @ public class BulkLoader 
 public static void main ( String args [ ] ) 
 { 
 Config . setClientMode ( true ) ; 
 - LoaderOptions options = LoaderOptions . parseArgs ( args ) ; 
 + LoaderOptions options = LoaderOptions . parseArgs ( args ) . validateArguments ( ) ; 
 OutputHandler handler = new OutputHandler . SystemOutput ( options . verbose , options . debug ) ; 
 SSTableLoader loader = new SSTableLoader ( 
 options . directory , 
 new ExternalClient ( 
 options . hosts , 
 options . nativePort , 
 - options . user , 
 - options . passwd , 
 + options . authProvider , 
 options . storagePort , 
 options . sslStoragePort , 
 options . serverEncOptions , 
 @ @ - 277 , 14 + 281 , 13 @ @ public class BulkLoader 
 
 public ExternalClient ( Set < InetAddress > hosts , 
 int port , 
 - String user , 
 - String passwd , 
 + AuthProvider authProvider , 
 int storagePort , 
 int sslStoragePort , 
 EncryptionOptions . ServerEncryptionOptions serverEncryptionOptions , 
 SSLOptions sslOptions ) 
 { 
 - super ( hosts , port , user , passwd , sslOptions ) ; 
 + super ( hosts , port , authProvider , sslOptions ) ; 
 this . storagePort = storagePort ; 
 this . sslStoragePort = sslStoragePort ; 
 this . serverEncOptions = serverEncryptionOptions ; 
 @ @ - 307 , 6 + 310 , 8 @ @ public class BulkLoader 
 public int nativePort = 9042 ; 
 public String user ; 
 public String passwd ; 
 + public String authProviderName ; 
 + public AuthProvider authProvider ; 
 public int throttle = 0 ; 
 public int storagePort ; 
 public int sslStoragePort ; 
 @ @ - 374 , 6 + 379 , 9 @ @ public class BulkLoader 
 if ( cmd . hasOption ( PASSWD _ OPTION ) ) 
 opts . passwd = cmd . getOptionValue ( PASSWD _ OPTION ) ; 
 
 + if ( cmd . hasOption ( AUTH _ PROVIDER _ OPTION ) ) 
 + opts . authProviderName = cmd . getOptionValue ( AUTH _ PROVIDER _ OPTION ) ; 
 + 
 if ( cmd . hasOption ( INITIAL _ HOST _ ADDRESS _ OPTION ) ) 
 { 
 String [ ] nodes = cmd . getOptionValue ( INITIAL _ HOST _ ADDRESS _ OPTION ) . split ( " , " ) ; 
 @ @ - 494 , 6 + 502 , 64 @ @ public class BulkLoader 
 } 
 } 
 
 + public LoaderOptions validateArguments ( ) 
 + { 
 + / / Both username and password need to be provided 
 + if ( ( user ! = null ) ! = ( passwd ! = null ) ) 
 + errorMsg ( " Username and password must both be provided " , getCmdLineOptions ( ) ) ; 
 + 
 + if ( user ! = null ) 
 + { 
 + / / Support for 3rd party auth providers that support plain text credentials . 
 + / / In this case the auth provider must provide a constructor of the form : 
 + / / 
 + / / public MyAuthProvider ( String username , String password ) 
 + if ( authProviderName ! = null ) 
 + { 
 + try 
 + { 
 + Class authProviderClass = Class . forName ( authProviderName ) ; 
 + Constructor constructor = authProviderClass . getConstructor ( String . class , String . class ) ; 
 + authProvider = ( AuthProvider ) constructor . newInstance ( user , passwd ) ; 
 + } 
 + catch ( ClassNotFoundException e ) 
 + { 
 + errorMsg ( " Unknown auth provider : " + e . getMessage ( ) , getCmdLineOptions ( ) ) ; 
 + } 
 + catch ( NoSuchMethodException e ) 
 + { 
 + errorMsg ( " Auth provider does not support plain text credentials : " + e . getMessage ( ) , getCmdLineOptions ( ) ) ; 
 + } 
 + catch ( InstantiationException | IllegalAccessException | IllegalArgumentException | InvocationTargetException e ) 
 + { 
 + errorMsg ( " Could not create auth provider with plain text credentials : " + e . getMessage ( ) , getCmdLineOptions ( ) ) ; 
 + } 
 + } 
 + else 
 + { 
 + / / If a 3rd party auth provider wasn ' t provided use the driver plain text provider 
 + authProvider = new PlainTextAuthProvider ( user , passwd ) ; 
 + } 
 + } 
 + / / Alternate support for 3rd party auth providers that don ' t use plain text credentials . 
 + / / In this case the auth provider must provide a nullary constructor of the form : 
 + / / 
 + / / public MyAuthProvider ( ) 
 + else if ( authProviderName ! = null ) 
 + { 
 + try 
 + { 
 + authProvider = ( AuthProvider ) Class . forName ( authProviderName ) . newInstance ( ) ; 
 + } 
 + catch ( ClassNotFoundException | InstantiationException | IllegalAccessException e ) 
 + { 
 + errorMsg ( " Unknown auth provider " + e . getMessage ( ) , getCmdLineOptions ( ) ) ; 
 + } 
 + } 
 + 
 + return this ; 
 + } 
 + 
 private static void errorMsg ( String msg , CmdLineOptions options ) 
 { 
 System . err . println ( msg ) ; 
 @ @ - 513 , 6 + 579 , 7 @ @ public class BulkLoader 
 options . addOption ( " t " , THROTTLE _ MBITS , " throttle " , " throttle speed in Mbits ( default unlimited ) " ) ; 
 options . addOption ( " u " , USER _ OPTION , " username " , " username for cassandra authentication " ) ; 
 options . addOption ( " pw " , PASSWD _ OPTION , " password " , " password for cassandra authentication " ) ; 
 + options . addOption ( " ap " , AUTH _ PROVIDER _ OPTION , " auth provider " , " custom AuthProvider class name for cassandra authentication " ) ; 
 options . addOption ( " cph " , CONNECTIONS _ PER _ HOST , " connectionsPerHost " , " number of concurrent connections - per - host . " ) ; 
 / / ssl connection - related options 
 options . addOption ( " ts " , SSL _ TRUSTSTORE , " TRUSTSTORE " , " Client SSL : full path to truststore " ) ; 
 diff - - git a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java 
 index bb927fc . . 225e453 100644 
 - - - a / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java 
 + + + b / src / java / org / apache / cassandra / utils / NativeSSTableLoaderClient . java 
 @ @ - 40 , 18 + 40 , 22 @ @ public class NativeSSTableLoaderClient extends SSTableLoader . Client 
 protected final Map < String , CFMetaData > tables ; 
 private final Collection < InetAddress > hosts ; 
 private final int port ; 
 - private final String username ; 
 - private final String password ; 
 + private final AuthProvider authProvider ; 
 private final SSLOptions sslOptions ; 
 
 + 
 public NativeSSTableLoaderClient ( Collection < InetAddress > hosts , int port , String username , String password , SSLOptions sslOptions ) 
 { 
 + this ( hosts , port , new PlainTextAuthProvider ( username , password ) , sslOptions ) ; 
 + } 
 + 
 + public NativeSSTableLoaderClient ( Collection < InetAddress > hosts , int port , AuthProvider authProvider , SSLOptions sslOptions ) 
 + { 
 super ( ) ; 
 this . tables = new HashMap < > ( ) ; 
 this . hosts = hosts ; 
 this . port = port ; 
 - this . username = username ; 
 - this . password = password ; 
 + this . authProvider = authProvider ; 
 this . sslOptions = sslOptions ; 
 } 
 
 @ @ - 60 , 8 + 64 , 8 @ @ public class NativeSSTableLoaderClient extends SSTableLoader . Client 
 Cluster . Builder builder = Cluster . builder ( ) . addContactPoints ( hosts ) . withPort ( port ) ; 
 if ( sslOptions ! = null ) 
 builder . withSSL ( sslOptions ) ; 
 - if ( username ! = null & & password ! = null ) 
 - builder = builder . withCredentials ( username , password ) ; 
 + if ( authProvider ! = null ) 
 + builder = builder . withAuthProvider ( authProvider ) ; 
 
 try ( Cluster cluster = builder . build ( ) ; Session session = cluster . connect ( ) ) 
 {

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index a7a7ca7 . . 7425111 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 11 , 8 + 11 , 7 @ @ 
 * Fix scrubbing of CQL3 created tables ( CASSANDRA - 4685 ) 
 * ( CQL3 ) Fix validation when using counter and regular columns in the same table 
 ( CASSANDRA - 4706 ) 
 - * Fix bug starting Cassandra with simple authentication ( CASSANDRA - 4648 
 - * ) 
 + * Fix bug starting Cassandra with simple authentication ( CASSANDRA - 4648 ) 
 
 1 . 2 - beta1 
 * add atomic _ batch _ mutate ( CASSANDRA - 4542 , - 4635 )
