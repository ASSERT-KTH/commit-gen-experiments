BLEU SCORE: 0.06971729121692201

TEST MSG: Fix possible ClassCastException during paging
GENERATED MSG: Fix paging with multi - partition IN queries

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index f629050 . . deec093 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 10 <nl> + * Fix potential ClassCastException during paging ( CASSANDRA - 10352 ) <nl> * Prevent ALTER TYPE from creating circular references ( CASSANDRA - 10339 ) <nl> * Fix cache handling of 2i and base tables ( CASSANDRA - 10155 , 10359 ) <nl> * Fix NPE in nodetool compactionhistory ( CASSANDRA - 9758 ) <nl> diff - - git a / src / java / org / apache / cassandra / service / pager / SliceQueryPager . java b / src / java / org / apache / cassandra / service / pager / SliceQueryPager . java <nl> index 520fc34 . . c8572d4 100644 <nl> - - - a / src / java / org / apache / cassandra / service / pager / SliceQueryPager . java <nl> + + + b / src / java / org / apache / cassandra / service / pager / SliceQueryPager . java <nl> @ @ - 59 , 9 + 59 , 10 @ @ public class SliceQueryPager extends AbstractQueryPager implements SinglePartiti <nl> <nl> if ( state ! = null ) <nl> { <nl> - / / The only case where this could be a non - CellName Composite is if it ' s Composites . EMPTY , but that ' s not <nl> - / / valid for PagingState . cellName , so we can safely cast to CellName . <nl> - lastReturned = ( CellName ) cfm . comparator . fromByteBuffer ( state . cellName ) ; <nl> + / / The cellname can be empty if this is used in a MultiPartitionPager and we ' re supposed to start reading this row <nl> + / / ( because the previous page has exhausted the previous pager ) . See # 10352 for details . <nl> + if ( state . cellName . hasRemaining ( ) ) <nl> + lastReturned = ( CellName ) cfm . comparator . fromByteBuffer ( state . cellName ) ; <nl> restoreState ( state . remaining , true ) ; <nl> } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index f629050 . . deec093 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 10 
 + * Fix potential ClassCastException during paging ( CASSANDRA - 10352 ) 
 * Prevent ALTER TYPE from creating circular references ( CASSANDRA - 10339 ) 
 * Fix cache handling of 2i and base tables ( CASSANDRA - 10155 , 10359 ) 
 * Fix NPE in nodetool compactionhistory ( CASSANDRA - 9758 ) 
 diff - - git a / src / java / org / apache / cassandra / service / pager / SliceQueryPager . java b / src / java / org / apache / cassandra / service / pager / SliceQueryPager . java 
 index 520fc34 . . c8572d4 100644 
 - - - a / src / java / org / apache / cassandra / service / pager / SliceQueryPager . java 
 + + + b / src / java / org / apache / cassandra / service / pager / SliceQueryPager . java 
 @ @ - 59 , 9 + 59 , 10 @ @ public class SliceQueryPager extends AbstractQueryPager implements SinglePartiti 
 
 if ( state ! = null ) 
 { 
 - / / The only case where this could be a non - CellName Composite is if it ' s Composites . EMPTY , but that ' s not 
 - / / valid for PagingState . cellName , so we can safely cast to CellName . 
 - lastReturned = ( CellName ) cfm . comparator . fromByteBuffer ( state . cellName ) ; 
 + / / The cellname can be empty if this is used in a MultiPartitionPager and we ' re supposed to start reading this row 
 + / / ( because the previous page has exhausted the previous pager ) . See # 10352 for details . 
 + if ( state . cellName . hasRemaining ( ) ) 
 + lastReturned = ( CellName ) cfm . comparator . fromByteBuffer ( state . cellName ) ; 
 restoreState ( state . remaining , true ) ; 
 } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
