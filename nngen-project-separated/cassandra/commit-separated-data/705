BLEU SCORE: 0.025275658895144486

TEST MSG: Fix value skipping with counter columns
GENERATED MSG: Fix AssertionError while flushing memtable due to materialized views incorrectly inserting empty rows

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 2c5c221 . . b7bbf72 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 9 <nl> + * Fix value skipping with counter columns ( CASSANDRA - 11726 ) <nl> * Fix nodetool tablestats miss SSTable count ( CASSANDRA - 12205 ) <nl> * Fixed flacky SSTablesIteratedTest ( CASSANDRA - 12282 ) <nl> * Fixed flacky SSTableRewriterTest : check file counts before calling validateCFS ( CASSANDRA - 12348 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / Conflicts . java b / src / java / org / apache / cassandra / db / Conflicts . java <nl> index fa0e819 . . 9e8bd9a 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Conflicts . java <nl> + + + b / src / java / org / apache / cassandra / db / Conflicts . java <nl> @ @ - 68 , 6 + 68 , 15 @ @ public abstract class Conflicts <nl> if ( ! rightLive ) <nl> return Resolution . RIGHT _ WINS ; <nl> <nl> + / / Handle empty values . Counters can ' t truly have empty values , but we can have a counter cell that temporarily <nl> + / / has one on read if the column for the cell is not queried by the user due to the optimization of # 10657 . We <nl> + / / thus need to handle this ( see # 11726 too ) . <nl> + if ( ! leftValue . hasRemaining ( ) ) <nl> + return rightValue . hasRemaining ( ) | | leftTimestamp > rightTimestamp ? Resolution . LEFT _ WINS : Resolution . RIGHT _ WINS ; <nl> + <nl> + if ( ! rightValue . hasRemaining ( ) ) <nl> + return Resolution . RIGHT _ WINS ; <nl> + <nl> return Resolution . MERGE ; <nl> } <nl> <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / entities / CountersTest . java b / test / unit / org / apache / cassandra / cql3 / validation / entities / CountersTest . java <nl> index 33b4a4f . . b1cd0bb 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / validation / entities / CountersTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / validation / entities / CountersTest . java <nl> @ @ - 196 , 4 + 196 , 31 @ @ public class CountersTest extends CQLTester <nl> assertInvalidThrowMessage ( " counter type is not supported for PRIMARY KEY part a " , <nl> InvalidRequestException . class , String . format ( " CREATE TABLE % s . % s ( a counter , b int , PRIMARY KEY ( b , a ) ) WITH CLUSTERING ORDER BY ( a desc ) ; " , KEYSPACE , createTableName ( ) ) ) ; <nl> } <nl> + <nl> + / * * <nl> + * Test for the bug of # 11726 . <nl> + * / <nl> + @ Test <nl> + public void testCounterAndColumnSelection ( ) throws Throwable <nl> + { <nl> + for ( String compactStorageClause : new String [ ] { " " , " WITH COMPACT STORAGE " } ) <nl> + { <nl> + createTable ( " CREATE TABLE % s ( k int PRIMARY KEY , c counter ) " + compactStorageClause ) ; <nl> + <nl> + / / Flush 2 updates in different sstable so that the following select does a merge , which is what triggers <nl> + / / the problem from # 11726 <nl> + <nl> + execute ( " UPDATE % s SET c = c + ? WHERE k = ? " , 1L , 0 ) ; <nl> + <nl> + flush ( ) ; <nl> + <nl> + execute ( " UPDATE % s SET c = c + ? WHERE k = ? " , 1L , 0 ) ; <nl> + <nl> + flush ( ) ; <nl> + <nl> + / / Querying , but not including the counter . Pre - CASSANDRA - 11726 , this made us query the counter but include <nl> + / / it ' s value , which broke at merge ( post - CASSANDRA - 11726 are special cases to never skip values ) . <nl> + assertRows ( execute ( " SELECT k FROM % s " ) , row ( 0 ) ) ; <nl> + } <nl> + } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 2c5c221 . . b7bbf72 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 9 
 + * Fix value skipping with counter columns ( CASSANDRA - 11726 ) 
 * Fix nodetool tablestats miss SSTable count ( CASSANDRA - 12205 ) 
 * Fixed flacky SSTablesIteratedTest ( CASSANDRA - 12282 ) 
 * Fixed flacky SSTableRewriterTest : check file counts before calling validateCFS ( CASSANDRA - 12348 ) 
 diff - - git a / src / java / org / apache / cassandra / db / Conflicts . java b / src / java / org / apache / cassandra / db / Conflicts . java 
 index fa0e819 . . 9e8bd9a 100644 
 - - - a / src / java / org / apache / cassandra / db / Conflicts . java 
 + + + b / src / java / org / apache / cassandra / db / Conflicts . java 
 @ @ - 68 , 6 + 68 , 15 @ @ public abstract class Conflicts 
 if ( ! rightLive ) 
 return Resolution . RIGHT _ WINS ; 
 
 + / / Handle empty values . Counters can ' t truly have empty values , but we can have a counter cell that temporarily 
 + / / has one on read if the column for the cell is not queried by the user due to the optimization of # 10657 . We 
 + / / thus need to handle this ( see # 11726 too ) . 
 + if ( ! leftValue . hasRemaining ( ) ) 
 + return rightValue . hasRemaining ( ) | | leftTimestamp > rightTimestamp ? Resolution . LEFT _ WINS : Resolution . RIGHT _ WINS ; 
 + 
 + if ( ! rightValue . hasRemaining ( ) ) 
 + return Resolution . RIGHT _ WINS ; 
 + 
 return Resolution . MERGE ; 
 } 
 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / entities / CountersTest . java b / test / unit / org / apache / cassandra / cql3 / validation / entities / CountersTest . java 
 index 33b4a4f . . b1cd0bb 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / validation / entities / CountersTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / validation / entities / CountersTest . java 
 @ @ - 196 , 4 + 196 , 31 @ @ public class CountersTest extends CQLTester 
 assertInvalidThrowMessage ( " counter type is not supported for PRIMARY KEY part a " , 
 InvalidRequestException . class , String . format ( " CREATE TABLE % s . % s ( a counter , b int , PRIMARY KEY ( b , a ) ) WITH CLUSTERING ORDER BY ( a desc ) ; " , KEYSPACE , createTableName ( ) ) ) ; 
 } 
 + 
 + / * * 
 + * Test for the bug of # 11726 . 
 + * / 
 + @ Test 
 + public void testCounterAndColumnSelection ( ) throws Throwable 
 + { 
 + for ( String compactStorageClause : new String [ ] { " " , " WITH COMPACT STORAGE " } ) 
 + { 
 + createTable ( " CREATE TABLE % s ( k int PRIMARY KEY , c counter ) " + compactStorageClause ) ; 
 + 
 + / / Flush 2 updates in different sstable so that the following select does a merge , which is what triggers 
 + / / the problem from # 11726 
 + 
 + execute ( " UPDATE % s SET c = c + ? WHERE k = ? " , 1L , 0 ) ; 
 + 
 + flush ( ) ; 
 + 
 + execute ( " UPDATE % s SET c = c + ? WHERE k = ? " , 1L , 0 ) ; 
 + 
 + flush ( ) ; 
 + 
 + / / Querying , but not including the counter . Pre - CASSANDRA - 11726 , this made us query the counter but include 
 + / / it ' s value , which broke at merge ( post - CASSANDRA - 11726 are special cases to never skip values ) . 
 + assertRows ( execute ( " SELECT k FROM % s " ) , row ( 0 ) ) ; 
 + } 
 + } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
