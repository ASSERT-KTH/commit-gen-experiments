BLEU SCORE: 0.015445276590783498

TEST MSG: only fetch the bound end type if the slice has an end bound
GENERATED MSG: fix broadcastAddress and Ec2MultiRegionSnitch . reconnect

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cql3 / restrictions / TokenFilter . java b / src / java / org / apache / cassandra / cql3 / restrictions / TokenFilter . java <nl> index 4b5383b . . bd04610 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / restrictions / TokenFilter . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / restrictions / TokenFilter . java <nl> @ @ - 192 , 10 + 192 , 10 @ @ final class TokenFilter extends ForwardingPrimaryKeyRestrictions <nl> Token start = deserializeToken ( slice . bounds ( START , options ) . get ( 0 ) ) ; <nl> <nl> BoundType startBoundType = toBoundType ( slice . isInclusive ( START ) ) ; <nl> - BoundType endBoundType = toBoundType ( slice . isInclusive ( END ) ) ; <nl> <nl> if ( slice . hasBound ( END ) ) <nl> { <nl> + BoundType endBoundType = toBoundType ( slice . isInclusive ( END ) ) ; <nl> Token end = deserializeToken ( slice . bounds ( END , options ) . get ( 0 ) ) ; <nl> <nl> if ( start . equals ( end ) & & ( BoundType . OPEN = = startBoundType | | BoundType . OPEN = = endBoundType ) )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java <nl> index 4ffa3e9 . . 3f6fa9d 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliClient . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliClient . java <nl> @ @ - 1150 , 15 + 1150 , 7 @ @ public class CliClient <nl> { <nl> SimpleSnitch snitch = new SimpleSnitch ( ) ; <nl> Map < String , String > options = new HashMap < String , String > ( ) ; <nl> - <nl> - try <nl> - { <nl> - options . put ( snitch . getDatacenter ( InetAddress . getLocalHost ( ) ) , " 1 " ) ; <nl> - } <nl> - catch ( UnknownHostException e ) <nl> - { <nl> - throw new RuntimeException ( e ) ; <nl> - } <nl> + options . put ( snitch . getDatacenter ( FBUtilities . getBroadcastAddress ( ) ) , " 1 " ) ; <nl> <nl> ksDef . setStrategy _ options ( options ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / SystemTable . java b / src / java / org / apache / cassandra / db / SystemTable . java <nl> index 58ff41e . . b0b5c60 100644 <nl> - - - a / src / java / org / apache / cassandra / db / SystemTable . java <nl> + + + b / src / java / org / apache / cassandra / db / SystemTable . java <nl> @ @ - 143 , 7 + 143 , 7 @ @ public class SystemTable <nl> * / <nl> public static synchronized void updateToken ( InetAddress ep , Token token ) <nl> { <nl> - if ( ep = = FBUtilities . getLocalAddress ( ) ) <nl> + if ( ep = = FBUtilities . getBroadcastAddress ( ) ) <nl> { <nl> removeToken ( token ) ; <nl> return ; <nl> diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> index 27a1ba7 . . 9f73717 100644 <nl> - - - a / src / java / org / apache / cassandra / gms / Gossiper . java <nl> + + + b / src / java / org / apache / cassandra / gms / Gossiper . java <nl> @ @ - 1090 , 7 + 1090 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean <nl> * / <nl> public void addSavedEndpoint ( InetAddress ep ) <nl> { <nl> - if ( ep = = FBUtilities . getLocalAddress ( ) ) <nl> + if ( ep = = FBUtilities . getBroadcastAddress ( ) ) <nl> { <nl> logger . debug ( " Attempt to add self as saved endpoint " ) ; <nl> return ; <nl> diff - - git a / src / java / org / apache / cassandra / net / OutboundTcpConnection . java b / src / java / org / apache / cassandra / net / OutboundTcpConnection . java <nl> index e920aae . . f9d866d 100644 <nl> - - - a / src / java / org / apache / cassandra / net / OutboundTcpConnection . java <nl> + + + b / src / java / org / apache / cassandra / net / OutboundTcpConnection . java <nl> @ @ - 86 , 6 + 86 , 11 @ @ public class OutboundTcpConnection extends Thread <nl> enqueue ( CLOSE _ SENTINEL , null ) ; <nl> } <nl> <nl> + void softCloseSocket ( ) <nl> + { <nl> + enqueue ( CLOSE _ SENTINEL , null ) ; <nl> + } <nl> + <nl> public void run ( ) <nl> { <nl> while ( true ) <nl> diff - - git a / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java b / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java <nl> index c7acd9e . . a75dafe 100644 <nl> - - - a / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java <nl> + + + b / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java <nl> @ @ - 68 , 7 + 68 , 8 @ @ public class OutboundTcpConnectionPool <nl> public void reset ( InetAddress remoteEP ) <nl> { <nl> resetedEndpoint = remoteEP ; <nl> - reset ( ) ; <nl> + for ( OutboundTcpConnection con : new OutboundTcpConnection [ ] { cmdCon , ackCon } ) <nl> + con . softCloseSocket ( ) ; <nl> } <nl> <nl> public Socket newSocket ( ) throws IOException <nl> @ @ - 78 , 7 + 79 , 8 @ @ public class OutboundTcpConnectionPool <nl> { <nl> return SSLFactory . getSocket ( DatabaseDescriptor . getEncryptionOptions ( ) , endPoint ( ) , DatabaseDescriptor . getSSLStoragePort ( ) , FBUtilities . getLocalAddress ( ) , 0 ) ; <nl> } <nl> - else { <nl> + else <nl> + { <nl> return new Socket ( endPoint ( ) , DatabaseDescriptor . getStoragePort ( ) , FBUtilities . getLocalAddress ( ) , 0 ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / cql3 / restrictions / TokenFilter . java b / src / java / org / apache / cassandra / cql3 / restrictions / TokenFilter . java 
 index 4b5383b . . bd04610 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / restrictions / TokenFilter . java 
 + + + b / src / java / org / apache / cassandra / cql3 / restrictions / TokenFilter . java 
 @ @ - 192 , 10 + 192 , 10 @ @ final class TokenFilter extends ForwardingPrimaryKeyRestrictions 
 Token start = deserializeToken ( slice . bounds ( START , options ) . get ( 0 ) ) ; 
 
 BoundType startBoundType = toBoundType ( slice . isInclusive ( START ) ) ; 
 - BoundType endBoundType = toBoundType ( slice . isInclusive ( END ) ) ; 
 
 if ( slice . hasBound ( END ) ) 
 { 
 + BoundType endBoundType = toBoundType ( slice . isInclusive ( END ) ) ; 
 Token end = deserializeToken ( slice . bounds ( END , options ) . get ( 0 ) ) ; 
 
 if ( start . equals ( end ) & & ( BoundType . OPEN = = startBoundType | | BoundType . OPEN = = endBoundType ) )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java 
 index 4ffa3e9 . . 3f6fa9d 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliClient . java 
 + + + b / src / java / org / apache / cassandra / cli / CliClient . java 
 @ @ - 1150 , 15 + 1150 , 7 @ @ public class CliClient 
 { 
 SimpleSnitch snitch = new SimpleSnitch ( ) ; 
 Map < String , String > options = new HashMap < String , String > ( ) ; 
 - 
 - try 
 - { 
 - options . put ( snitch . getDatacenter ( InetAddress . getLocalHost ( ) ) , " 1 " ) ; 
 - } 
 - catch ( UnknownHostException e ) 
 - { 
 - throw new RuntimeException ( e ) ; 
 - } 
 + options . put ( snitch . getDatacenter ( FBUtilities . getBroadcastAddress ( ) ) , " 1 " ) ; 
 
 ksDef . setStrategy _ options ( options ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / SystemTable . java b / src / java / org / apache / cassandra / db / SystemTable . java 
 index 58ff41e . . b0b5c60 100644 
 - - - a / src / java / org / apache / cassandra / db / SystemTable . java 
 + + + b / src / java / org / apache / cassandra / db / SystemTable . java 
 @ @ - 143 , 7 + 143 , 7 @ @ public class SystemTable 
 * / 
 public static synchronized void updateToken ( InetAddress ep , Token token ) 
 { 
 - if ( ep = = FBUtilities . getLocalAddress ( ) ) 
 + if ( ep = = FBUtilities . getBroadcastAddress ( ) ) 
 { 
 removeToken ( token ) ; 
 return ; 
 diff - - git a / src / java / org / apache / cassandra / gms / Gossiper . java b / src / java / org / apache / cassandra / gms / Gossiper . java 
 index 27a1ba7 . . 9f73717 100644 
 - - - a / src / java / org / apache / cassandra / gms / Gossiper . java 
 + + + b / src / java / org / apache / cassandra / gms / Gossiper . java 
 @ @ - 1090 , 7 + 1090 , 7 @ @ public class Gossiper implements IFailureDetectionEventListener , GossiperMBean 
 * / 
 public void addSavedEndpoint ( InetAddress ep ) 
 { 
 - if ( ep = = FBUtilities . getLocalAddress ( ) ) 
 + if ( ep = = FBUtilities . getBroadcastAddress ( ) ) 
 { 
 logger . debug ( " Attempt to add self as saved endpoint " ) ; 
 return ; 
 diff - - git a / src / java / org / apache / cassandra / net / OutboundTcpConnection . java b / src / java / org / apache / cassandra / net / OutboundTcpConnection . java 
 index e920aae . . f9d866d 100644 
 - - - a / src / java / org / apache / cassandra / net / OutboundTcpConnection . java 
 + + + b / src / java / org / apache / cassandra / net / OutboundTcpConnection . java 
 @ @ - 86 , 6 + 86 , 11 @ @ public class OutboundTcpConnection extends Thread 
 enqueue ( CLOSE _ SENTINEL , null ) ; 
 } 
 
 + void softCloseSocket ( ) 
 + { 
 + enqueue ( CLOSE _ SENTINEL , null ) ; 
 + } 
 + 
 public void run ( ) 
 { 
 while ( true ) 
 diff - - git a / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java b / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java 
 index c7acd9e . . a75dafe 100644 
 - - - a / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java 
 + + + b / src / java / org / apache / cassandra / net / OutboundTcpConnectionPool . java 
 @ @ - 68 , 7 + 68 , 8 @ @ public class OutboundTcpConnectionPool 
 public void reset ( InetAddress remoteEP ) 
 { 
 resetedEndpoint = remoteEP ; 
 - reset ( ) ; 
 + for ( OutboundTcpConnection con : new OutboundTcpConnection [ ] { cmdCon , ackCon } ) 
 + con . softCloseSocket ( ) ; 
 } 
 
 public Socket newSocket ( ) throws IOException 
 @ @ - 78 , 7 + 79 , 8 @ @ public class OutboundTcpConnectionPool 
 { 
 return SSLFactory . getSocket ( DatabaseDescriptor . getEncryptionOptions ( ) , endPoint ( ) , DatabaseDescriptor . getSSLStoragePort ( ) , FBUtilities . getLocalAddress ( ) , 0 ) ; 
 } 
 - else { 
 + else 
 + { 
 return new Socket ( endPoint ( ) , DatabaseDescriptor . getStoragePort ( ) , FBUtilities . getLocalAddress ( ) , 0 ) ; 
 } 
 }
