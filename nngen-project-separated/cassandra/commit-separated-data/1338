BLEU SCORE: 0.7102992180127422

TEST MSG: Revert " Defer initialization of default RoleManager until IAuthenticator is set "
GENERATED MSG: Defer initialization of default RoleManager until IAuthenticator is set

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index 9cf3959 . . b7e3eaa 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 87 , 9 + 87 , 7 @ @ public class DatabaseDescriptor <nl> <nl> private static IAuthenticator authenticator = new AllowAllAuthenticator ( ) ; <nl> private static IAuthorizer authorizer = new AllowAllAuthorizer ( ) ; <nl> - / / Don ' t initialize the role manager until applying config . The options supported by CassandraRoleManager <nl> - / / depend on the configured IAuthenticator , so defer creating it until that ' s been set . <nl> - private static IRoleManager roleManager ; <nl> + private static IRoleManager roleManager = new CassandraRoleManager ( ) ; <nl> <nl> private static IRequestScheduler requestScheduler ; <nl> private static RequestSchedulerId requestSchedulerId ; <nl> @ @ - 325 , 9 + 323 , 8 @ @ public class DatabaseDescriptor <nl> if ( authenticator instanceof AllowAllAuthenticator & & ! ( authorizer instanceof AllowAllAuthorizer ) ) <nl> throw new ConfigurationException ( " AllowAllAuthenticator can ' t be used with " + conf . authorizer , false ) ; <nl> <nl> - roleManager = conf . role _ manager = = null <nl> - ? new CassandraRoleManager ( ) <nl> - : FBUtilities . newRoleManager ( conf . role _ manager ) ; <nl> + if ( conf . role _ manager ! = null ) <nl> + roleManager = FBUtilities . newRoleManager ( conf . role _ manager ) ; <nl> <nl> if ( authenticator instanceof PasswordAuthenticator & & ! ( roleManager instanceof CassandraRoleManager ) ) <nl> throw new ConfigurationException ( " CassandraRoleManager must be used with PasswordAuthenticator " , false ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index 9cf3959 . . b7e3eaa 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 87 , 9 + 87 , 7 @ @ public class DatabaseDescriptor 
 
 private static IAuthenticator authenticator = new AllowAllAuthenticator ( ) ; 
 private static IAuthorizer authorizer = new AllowAllAuthorizer ( ) ; 
 - / / Don ' t initialize the role manager until applying config . The options supported by CassandraRoleManager 
 - / / depend on the configured IAuthenticator , so defer creating it until that ' s been set . 
 - private static IRoleManager roleManager ; 
 + private static IRoleManager roleManager = new CassandraRoleManager ( ) ; 
 
 private static IRequestScheduler requestScheduler ; 
 private static RequestSchedulerId requestSchedulerId ; 
 @ @ - 325 , 9 + 323 , 8 @ @ public class DatabaseDescriptor 
 if ( authenticator instanceof AllowAllAuthenticator & & ! ( authorizer instanceof AllowAllAuthorizer ) ) 
 throw new ConfigurationException ( " AllowAllAuthenticator can ' t be used with " + conf . authorizer , false ) ; 
 
 - roleManager = conf . role _ manager = = null 
 - ? new CassandraRoleManager ( ) 
 - : FBUtilities . newRoleManager ( conf . role _ manager ) ; 
 + if ( conf . role _ manager ! = null ) 
 + roleManager = FBUtilities . newRoleManager ( conf . role _ manager ) ; 
 
 if ( authenticator instanceof PasswordAuthenticator & & ! ( roleManager instanceof CassandraRoleManager ) ) 
 throw new ConfigurationException ( " CassandraRoleManager must be used with PasswordAuthenticator " , false ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
