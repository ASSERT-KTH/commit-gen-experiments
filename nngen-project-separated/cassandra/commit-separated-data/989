BLEU SCORE: 0.041961149062965476

TEST MSG: InvalidateKeys should have a weak ref to the key cache
GENERATED MSG: Add KeyCacheHitRate metric to CF metrics

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 82ee99e . . eed9035 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 14 <nl> + * InvalidateKeys should have a weak ref to key cache ( CASSANDRA - 11176 ) <nl> * Don ' t remove FailureDetector history on removeEndpoint ( CASSANDRA - 10371 ) <nl> * Only notify if repair status changed ( CASSANDRA - 11172 ) <nl> * Add partition key to TombstoneOverwhelmingException error message ( CASSANDRA - 10888 ) <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java <nl> index af5d1d3 . . b56a5dc 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ <nl> * / <nl> package org . apache . cassandra . io . sstable ; <nl> <nl> + import java . lang . ref . WeakReference ; <nl> import java . util . * ; <nl> <nl> import com . google . common . annotations . VisibleForTesting ; <nl> @ @ - 339 , 12 + 340 , 12 @ @ public class SSTableRewriter <nl> private static final class InvalidateKeys implements Runnable <nl> { <nl> final List < KeyCacheKey > cacheKeys = new ArrayList < > ( ) ; <nl> - final InstrumentingCache < KeyCacheKey , ? > cache ; <nl> + final WeakReference < InstrumentingCache < KeyCacheKey , ? > > cacheRef ; <nl> <nl> private InvalidateKeys ( SSTableReader reader , Collection < DecoratedKey > invalidate ) <nl> { <nl> - this . cache = reader . getKeyCache ( ) ; <nl> - if ( cache ! = null ) <nl> + this . cacheRef = new WeakReference < InstrumentingCache < KeyCacheKey , ? > > ( reader . getKeyCache ( ) ) ; <nl> + if ( cacheRef . get ( ) ! = null ) <nl> { <nl> for ( DecoratedKey key : invalidate ) <nl> cacheKeys . add ( reader . getCacheKey ( key ) ) ; <nl> @ @ - 354 , 7 + 355 , 11 @ @ public class SSTableRewriter <nl> public void run ( ) <nl> { <nl> for ( KeyCacheKey key : cacheKeys ) <nl> - cache . remove ( key ) ; <nl> + { <nl> + InstrumentingCache < KeyCacheKey , ? > cache = cacheRef . get ( ) ; <nl> + if ( cache ! = null ) <nl> + cache . remove ( key ) ; <nl> + } <nl> } <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index f8c472c . . 7630084 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 6 @ @ <nl> 1 . 2 . 9 <nl> + * migrate 1 . 1 schema _ columnfamilies . key _ alias column to key _ aliases <nl> + ( CASSANDRA - 5800 ) <nl> * add - - migrate option to sstableupgrade and sstablescrub ( CASSANDRA - 5831 ) <nl> * fix bulk - loading compressed sstables ( CASSANDRA - 5820 ) <nl> * ( Hadoop ) fix quoting in CqlPagingRecordReader and CqlRecordWriter <nl> diff - - git a / src / java / org / apache / cassandra / db / SystemTable . java b / src / java / org / apache / cassandra / db / SystemTable . java <nl> index 318b34d . . 32f5fe0 100644 <nl> - - - a / src / java / org / apache / cassandra / db / SystemTable . java <nl> + + + b / src / java / org / apache / cassandra / db / SystemTable . java <nl> @ @ - 180 , 6 + 180 , 44 @ @ public class SystemTable <nl> logger . info ( " Possible old - format hints found . Truncating " ) ; <nl> oldHintsCfs . truncate ( ) ; <nl> } <nl> + <nl> + migrateKeyAliases ( ) ; <nl> + } <nl> + <nl> + <nl> + / * * <nl> + * 1 . 1 used a key _ alias column ; 1 . 2 changed that to key _ aliases as part of CQL3 <nl> + * / <nl> + private static void migrateKeyAliases ( ) <nl> + { <nl> + for ( UntypedResultSet . Row row : processInternal ( " SELECT keyspace _ name , columnfamily _ name , key _ aliases , key _ alias FROM system . schema _ columnfamilies " ) ) <nl> + { <nl> + String key _ alias = null ; <nl> + String key _ aliases = null ; <nl> + try <nl> + { <nl> + key _ alias = row . getString ( " key _ alias " ) ; <nl> + } <nl> + catch ( NullPointerException e ) <nl> + { <nl> + / / column value is null <nl> + } <nl> + try <nl> + { <nl> + key _ aliases = row . getString ( " key _ aliases " ) ; <nl> + } <nl> + catch ( NullPointerException e ) <nl> + { <nl> + / / column value is null <nl> + } <nl> + if ( key _ alias ! = null & & key _ aliases = = null ) <nl> + { <nl> + String keyspace = row . getString ( " keyspace _ name " ) ; <nl> + String columnfamily = row . getString ( " columnfamily _ name " ) ; <nl> + processInternal ( String . format ( " UPDATE system . schema _ columnfamilies set key _ aliases = ' [ \ " % s \ " ] ' , key _ alias = null where keyspace _ name = ' % s ' and columnfamily _ name = ' % s ' " , <nl> + key _ alias , keyspace , columnfamily ) ) ; <nl> + } <nl> + } <nl> } <nl> <nl> public static void saveTruncationRecord ( ColumnFamilyStore cfs , long truncatedAt , ReplayPosition position )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 82ee99e . . eed9035 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 14 
 + * InvalidateKeys should have a weak ref to key cache ( CASSANDRA - 11176 ) 
 * Don ' t remove FailureDetector history on removeEndpoint ( CASSANDRA - 10371 ) 
 * Only notify if repair status changed ( CASSANDRA - 11172 ) 
 * Add partition key to TombstoneOverwhelmingException error message ( CASSANDRA - 10888 ) 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java b / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java 
 index af5d1d3 . . b56a5dc 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableRewriter . java 
 @ @ - 17 , 6 + 17 , 7 @ @ 
 * / 
 package org . apache . cassandra . io . sstable ; 
 
 + import java . lang . ref . WeakReference ; 
 import java . util . * ; 
 
 import com . google . common . annotations . VisibleForTesting ; 
 @ @ - 339 , 12 + 340 , 12 @ @ public class SSTableRewriter 
 private static final class InvalidateKeys implements Runnable 
 { 
 final List < KeyCacheKey > cacheKeys = new ArrayList < > ( ) ; 
 - final InstrumentingCache < KeyCacheKey , ? > cache ; 
 + final WeakReference < InstrumentingCache < KeyCacheKey , ? > > cacheRef ; 
 
 private InvalidateKeys ( SSTableReader reader , Collection < DecoratedKey > invalidate ) 
 { 
 - this . cache = reader . getKeyCache ( ) ; 
 - if ( cache ! = null ) 
 + this . cacheRef = new WeakReference < InstrumentingCache < KeyCacheKey , ? > > ( reader . getKeyCache ( ) ) ; 
 + if ( cacheRef . get ( ) ! = null ) 
 { 
 for ( DecoratedKey key : invalidate ) 
 cacheKeys . add ( reader . getCacheKey ( key ) ) ; 
 @ @ - 354 , 7 + 355 , 11 @ @ public class SSTableRewriter 
 public void run ( ) 
 { 
 for ( KeyCacheKey key : cacheKeys ) 
 - cache . remove ( key ) ; 
 + { 
 + InstrumentingCache < KeyCacheKey , ? > cache = cacheRef . get ( ) ; 
 + if ( cache ! = null ) 
 + cache . remove ( key ) ; 
 + } 
 } 
 } 


NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index f8c472c . . 7630084 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 6 @ @ 
 1 . 2 . 9 
 + * migrate 1 . 1 schema _ columnfamilies . key _ alias column to key _ aliases 
 + ( CASSANDRA - 5800 ) 
 * add - - migrate option to sstableupgrade and sstablescrub ( CASSANDRA - 5831 ) 
 * fix bulk - loading compressed sstables ( CASSANDRA - 5820 ) 
 * ( Hadoop ) fix quoting in CqlPagingRecordReader and CqlRecordWriter 
 diff - - git a / src / java / org / apache / cassandra / db / SystemTable . java b / src / java / org / apache / cassandra / db / SystemTable . java 
 index 318b34d . . 32f5fe0 100644 
 - - - a / src / java / org / apache / cassandra / db / SystemTable . java 
 + + + b / src / java / org / apache / cassandra / db / SystemTable . java 
 @ @ - 180 , 6 + 180 , 44 @ @ public class SystemTable 
 logger . info ( " Possible old - format hints found . Truncating " ) ; 
 oldHintsCfs . truncate ( ) ; 
 } 
 + 
 + migrateKeyAliases ( ) ; 
 + } 
 + 
 + 
 + / * * 
 + * 1 . 1 used a key _ alias column ; 1 . 2 changed that to key _ aliases as part of CQL3 
 + * / 
 + private static void migrateKeyAliases ( ) 
 + { 
 + for ( UntypedResultSet . Row row : processInternal ( " SELECT keyspace _ name , columnfamily _ name , key _ aliases , key _ alias FROM system . schema _ columnfamilies " ) ) 
 + { 
 + String key _ alias = null ; 
 + String key _ aliases = null ; 
 + try 
 + { 
 + key _ alias = row . getString ( " key _ alias " ) ; 
 + } 
 + catch ( NullPointerException e ) 
 + { 
 + / / column value is null 
 + } 
 + try 
 + { 
 + key _ aliases = row . getString ( " key _ aliases " ) ; 
 + } 
 + catch ( NullPointerException e ) 
 + { 
 + / / column value is null 
 + } 
 + if ( key _ alias ! = null & & key _ aliases = = null ) 
 + { 
 + String keyspace = row . getString ( " keyspace _ name " ) ; 
 + String columnfamily = row . getString ( " columnfamily _ name " ) ; 
 + processInternal ( String . format ( " UPDATE system . schema _ columnfamilies set key _ aliases = ' [ \ " % s \ " ] ' , key _ alias = null where keyspace _ name = ' % s ' and columnfamily _ name = ' % s ' " , 
 + key _ alias , keyspace , columnfamily ) ) ; 
 + } 
 + } 
 } 
 
 public static void saveTruncationRecord ( ColumnFamilyStore cfs , long truncatedAt , ReplayPosition position )
