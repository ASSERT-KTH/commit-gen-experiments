BLEU SCORE: 0.040583489434387374

TEST MSG: Apply DONTNEED fadvise to commitlog segments
GENERATED MSG: optimize AtomicBTree

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 1ef2b93 . . d346499 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 0 - beta2 <nl> + * Apply DONTNEED fadvise to commitlog segments ( CASSANDRA - 6759 ) <nl> * Switch CRC component to Adler and include it for compressed sstables <nl> ( CASSANDRA - 4165 ) <nl> * Allow cassandra - stress to set compaction strategy options ( CASSANDRA - 6451 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java <nl> index a47fcc0 . . 9caba6d 100644 <nl> - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java <nl> + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ <nl> package org . apache . cassandra . db . commitlog ; <nl> <nl> import java . io . File ; <nl> + import java . io . FileDescriptor ; <nl> import java . io . IOException ; <nl> import java . io . RandomAccessFile ; <nl> import java . nio . ByteBuffer ; <nl> @ @ - 34 , 6 + 35 , 7 @ @ import java . util . concurrent . ConcurrentHashMap ; <nl> import java . util . concurrent . ConcurrentMap ; <nl> import java . util . concurrent . atomic . AtomicInteger ; <nl> <nl> + import org . apache . cassandra . utils . CLibrary ; <nl> import org . apache . cassandra . utils . concurrent . OpOrder ; <nl> <nl> import org . cliffc . high _ scale _ lib . NonBlockingHashMap ; <nl> @ @ - 95 , 6 + 97 , 7 @ @ public class CommitLogSegment <nl> <nl> private final File logFile ; <nl> private final RandomAccessFile logFileAccessor ; <nl> + private final int fd ; <nl> <nl> private final MappedByteBuffer buffer ; <nl> <nl> @ @ - 150 , 6 + 153 , 7 @ @ public class CommitLogSegment <nl> / / ( We may have restarted after a segment size configuration change , leaving " incorrectly " <nl> / / sized segments on disk . ) <nl> logFileAccessor . setLength ( DatabaseDescriptor . getCommitLogSegmentSize ( ) ) ; <nl> + fd = CLibrary . getfd ( logFileAccessor . getFD ( ) ) ; <nl> <nl> buffer = logFileAccessor . getChannel ( ) . map ( FileChannel . MapMode . READ _ WRITE , 0 , DatabaseDescriptor . getCommitLogSegmentSize ( ) ) ; <nl> / / mark the initial header as uninitialised <nl> @ @ - 317 , 6 + 321 , 7 @ @ public class CommitLogSegment <nl> close ( ) ; <nl> nextMarker = buffer . capacity ( ) ; <nl> } <nl> + CLibrary . trySkipCache ( fd , offset , nextMarker ) ; <nl> <nl> lastSyncedOffset = nextMarker ; <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 1ef2b93 . . d346499 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 0 - beta2 
 + * Apply DONTNEED fadvise to commitlog segments ( CASSANDRA - 6759 ) 
 * Switch CRC component to Adler and include it for compressed sstables 
 ( CASSANDRA - 4165 ) 
 * Allow cassandra - stress to set compaction strategy options ( CASSANDRA - 6451 ) 
 diff - - git a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java 
 index a47fcc0 . . 9caba6d 100644 
 - - - a / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java 
 + + + b / src / java / org / apache / cassandra / db / commitlog / CommitLogSegment . java 
 @ @ - 18 , 6 + 18 , 7 @ @ 
 package org . apache . cassandra . db . commitlog ; 
 
 import java . io . File ; 
 + import java . io . FileDescriptor ; 
 import java . io . IOException ; 
 import java . io . RandomAccessFile ; 
 import java . nio . ByteBuffer ; 
 @ @ - 34 , 6 + 35 , 7 @ @ import java . util . concurrent . ConcurrentHashMap ; 
 import java . util . concurrent . ConcurrentMap ; 
 import java . util . concurrent . atomic . AtomicInteger ; 
 
 + import org . apache . cassandra . utils . CLibrary ; 
 import org . apache . cassandra . utils . concurrent . OpOrder ; 
 
 import org . cliffc . high _ scale _ lib . NonBlockingHashMap ; 
 @ @ - 95 , 6 + 97 , 7 @ @ public class CommitLogSegment 
 
 private final File logFile ; 
 private final RandomAccessFile logFileAccessor ; 
 + private final int fd ; 
 
 private final MappedByteBuffer buffer ; 
 
 @ @ - 150 , 6 + 153 , 7 @ @ public class CommitLogSegment 
 / / ( We may have restarted after a segment size configuration change , leaving " incorrectly " 
 / / sized segments on disk . ) 
 logFileAccessor . setLength ( DatabaseDescriptor . getCommitLogSegmentSize ( ) ) ; 
 + fd = CLibrary . getfd ( logFileAccessor . getFD ( ) ) ; 
 
 buffer = logFileAccessor . getChannel ( ) . map ( FileChannel . MapMode . READ _ WRITE , 0 , DatabaseDescriptor . getCommitLogSegmentSize ( ) ) ; 
 / / mark the initial header as uninitialised 
 @ @ - 317 , 6 + 321 , 7 @ @ public class CommitLogSegment 
 close ( ) ; 
 nextMarker = buffer . capacity ( ) ; 
 } 
 + CLibrary . trySkipCache ( fd , offset , nextMarker ) ; 
 
 lastSyncedOffset = nextMarker ; 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
