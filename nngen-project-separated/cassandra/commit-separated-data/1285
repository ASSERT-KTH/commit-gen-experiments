BLEU SCORE: 0.015445276590783498

TEST MSG: Add a NEWS . txt entry about LIMIT behavior change and unit tests
GENERATED MSG: Make " truncate table X " an alias for " truncate X "

TEST DIFF (one line): diff - - git a / NEWS . txt b / NEWS . txt <nl> index 924c35f . . 67398cf 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 44 , 6 + 44 , 9 @ @ New features <nl> <nl> Upgrading <nl> - - - - - - - - - <nl> + - The LIMIT clause applies now only to the number of rows returned to the user , <nl> + not to the number of row queried . By consequence , queries using aggregates will not <nl> + be impacted by the LIMIT clause anymore . <nl> - The native protocol versions 1 and 2 are not supported anymore . <nl> - Max mutation size is now configurable via max _ mutation _ size _ in _ kb setting in <nl> cassandra . yaml ; the default is half the size commitlog _ segment _ size _ in _ mb * 1024 . <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java <nl> index a1d0aab . . 7b3f12c 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java <nl> @ @ - 91 , 6 + 91 , 8 @ @ public class AggregationTest extends CQLTester <nl> assertRows ( execute ( " SELECT COUNT ( * ) FROM % s " ) , row ( 4L ) ) ; <nl> assertRows ( execute ( " SELECT COUNT ( 1 ) FROM % s " ) , row ( 4L ) ) ; <nl> assertRows ( execute ( " SELECT COUNT ( b ) , count ( c ) , count ( e ) , count ( f ) FROM % s " ) , row ( 4L , 3L , 3L , 3L ) ) ; <nl> + / / Makes sure that LIMIT does not affect the result of aggregates <nl> + assertRows ( execute ( " SELECT COUNT ( b ) , count ( c ) , count ( e ) , count ( f ) FROM % s LIMIT 2 " ) , row ( 4L , 3L , 3L , 3L ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 130 , 6 + 132 , 8 @ @ public class AggregationTest extends CQLTester <nl> assertRows ( execute ( " SELECT COUNT ( 1 ) FROM % s " ) , row ( 4L ) ) ; <nl> assertRows ( execute ( " SELECT max ( b ) , b , COUNT ( * ) FROM % s " ) , row ( 5 , 1 , 4L ) ) ; <nl> assertRows ( execute ( " SELECT max ( b ) , COUNT ( 1 ) , b FROM % s " ) , row ( 5 , 4L , 1 ) ) ; <nl> + / / Makes sure that LIMIT does not affect the result of aggregates <nl> + assertRows ( execute ( " SELECT max ( b ) , COUNT ( 1 ) , b FROM % s LIMIT 2 " ) , row ( 5 , 4L , 1 ) ) ; <nl> } <nl> <nl> @ Test
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / NEWS . txt b / NEWS . txt 
 index 924c35f . . 67398cf 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 44 , 6 + 44 , 9 @ @ New features 
 
 Upgrading 
 - - - - - - - - - 
 + - The LIMIT clause applies now only to the number of rows returned to the user , 
 + not to the number of row queried . By consequence , queries using aggregates will not 
 + be impacted by the LIMIT clause anymore . 
 - The native protocol versions 1 and 2 are not supported anymore . 
 - Max mutation size is now configurable via max _ mutation _ size _ in _ kb setting in 
 cassandra . yaml ; the default is half the size commitlog _ segment _ size _ in _ mb * 1024 . 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java 
 index a1d0aab . . 7b3f12c 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / AggregationTest . java 
 @ @ - 91 , 6 + 91 , 8 @ @ public class AggregationTest extends CQLTester 
 assertRows ( execute ( " SELECT COUNT ( * ) FROM % s " ) , row ( 4L ) ) ; 
 assertRows ( execute ( " SELECT COUNT ( 1 ) FROM % s " ) , row ( 4L ) ) ; 
 assertRows ( execute ( " SELECT COUNT ( b ) , count ( c ) , count ( e ) , count ( f ) FROM % s " ) , row ( 4L , 3L , 3L , 3L ) ) ; 
 + / / Makes sure that LIMIT does not affect the result of aggregates 
 + assertRows ( execute ( " SELECT COUNT ( b ) , count ( c ) , count ( e ) , count ( f ) FROM % s LIMIT 2 " ) , row ( 4L , 3L , 3L , 3L ) ) ; 
 } 
 
 @ Test 
 @ @ - 130 , 6 + 132 , 8 @ @ public class AggregationTest extends CQLTester 
 assertRows ( execute ( " SELECT COUNT ( 1 ) FROM % s " ) , row ( 4L ) ) ; 
 assertRows ( execute ( " SELECT max ( b ) , b , COUNT ( * ) FROM % s " ) , row ( 5 , 1 , 4L ) ) ; 
 assertRows ( execute ( " SELECT max ( b ) , COUNT ( 1 ) , b FROM % s " ) , row ( 5 , 4L , 1 ) ) ; 
 + / / Makes sure that LIMIT does not affect the result of aggregates 
 + assertRows ( execute ( " SELECT max ( b ) , COUNT ( 1 ) , b FROM % s LIMIT 2 " ) , row ( 5 , 4L , 1 ) ) ; 
 } 
 
 @ Test

NEAREST DIFF:
ELIMINATEDSENTENCE
