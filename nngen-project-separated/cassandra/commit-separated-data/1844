BLEU SCORE: 0.041961149062965476

TEST MSG: AssertionError : " Memory was freed " when running cleanup
GENERATED MSG: Fix cleanup not deleting index entries

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 2052f70 . . 24f70a3 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 0 . 13 : <nl> + * AssertionError : " Memory was freed " when running cleanup ( CASSANDRA - 8716 ) <nl> * Make it possible to set max _ sstable _ age to fractional days ( CASSANDRA - 8406 ) <nl> * Fix memory leak in SSTableSimple * Writer and SSTableReader . validate ( ) ( CASSANDRA - 8748 ) <nl> * Fix some multi - column relations with indexes on some clustering <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> index 62599e3 . . 0978ae6 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java <nl> @ @ - 539 , 9 + 539 , 10 @ @ public class CompactionManager implements CompactionManagerMBean <nl> <nl> for ( SSTableReader sstable : sstables ) <nl> { <nl> + Set < SSTableReader > sstableAsSet = Collections . singleton ( sstable ) ; <nl> if ( ! hasIndexes & & ! new Bounds < Token > ( sstable . first . token , sstable . last . token ) . intersects ( ranges ) ) <nl> { <nl> - cfs . replaceCompactedSSTables ( Arrays . asList ( sstable ) , Collections . < SSTableReader > emptyList ( ) , OperationType . CLEANUP ) ; <nl> + cfs . replaceCompactedSSTables ( sstableAsSet , Collections . < SSTableReader > emptyList ( ) , OperationType . CLEANUP ) ; <nl> continue ; <nl> } <nl> if ( ! needsCleanup ( sstable , ranges ) ) <nl> @ @ - 550 , 18 + 551 , 18 @ @ public class CompactionManager implements CompactionManagerMBean <nl> continue ; <nl> } <nl> <nl> - CompactionController controller = new CompactionController ( cfs , Collections . singleton ( sstable ) , getDefaultGcBefore ( cfs ) ) ; <nl> + CompactionController controller = new CompactionController ( cfs , sstableAsSet , getDefaultGcBefore ( cfs ) ) ; <nl> long start = System . nanoTime ( ) ; <nl> <nl> long totalkeysWritten = 0 ; <nl> <nl> int expectedBloomFilterSize = Math . max ( cfs . metadata . getIndexInterval ( ) , <nl> - ( int ) ( SSTableReader . getApproximateKeyCount ( Arrays . asList ( sstable ) , cfs . metadata ) ) ) ; <nl> + ( int ) ( SSTableReader . getApproximateKeyCount ( sstableAsSet , cfs . metadata ) ) ) ; <nl> if ( logger . isDebugEnabled ( ) ) <nl> logger . debug ( " Expected bloom filter size : " + expectedBloomFilterSize ) ; <nl> <nl> logger . info ( " Cleaning up " + sstable ) ; <nl> - File compactionFileLocation = cfs . directories . getWriteableLocationAsFile ( cfs . getExpectedCompactedFileSize ( sstables , OperationType . CLEANUP ) ) ; <nl> + File compactionFileLocation = cfs . directories . getWriteableLocationAsFile ( cfs . getExpectedCompactedFileSize ( sstableAsSet , OperationType . CLEANUP ) ) ; <nl> if ( compactionFileLocation = = null ) <nl> throw new IOException ( " disk full " ) ; <nl>
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index 12f5a4d . . a4f1354 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 639 , 11 + 639 , 6 @ @ public class DatabaseDescriptor <nl> return requestSchedulerId ; <nl> } <nl> <nl> - public static String getJobTrackerAddress ( ) <nl> - { <nl> - return conf . job _ tracker _ host ; <nl> - } <nl> - <nl> public static int getColumnIndexSize ( ) <nl> { <nl> return conf . column _ index _ size _ in _ kb * 1024 ; <nl> @ @ - 669 , 11 + 664 , 6 @ @ public class DatabaseDescriptor <nl> return conf . max _ streaming _ retries ; <nl> } <nl> <nl> - public static String getJobJarLocation ( ) <nl> - { <nl> - return conf . job _ jar _ file _ location ; <nl> - } <nl> - <nl> public static int getStoragePort ( ) <nl> { <nl> return Integer . parseInt ( System . getProperty ( " cassandra . storage _ port " , conf . storage _ port . toString ( ) ) ) ;

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 2052f70 . . 24f70a3 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 0 . 13 : 
 + * AssertionError : " Memory was freed " when running cleanup ( CASSANDRA - 8716 ) 
 * Make it possible to set max _ sstable _ age to fractional days ( CASSANDRA - 8406 ) 
 * Fix memory leak in SSTableSimple * Writer and SSTableReader . validate ( ) ( CASSANDRA - 8748 ) 
 * Fix some multi - column relations with indexes on some clustering 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 index 62599e3 . . 0978ae6 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / CompactionManager . java 
 @ @ - 539 , 9 + 539 , 10 @ @ public class CompactionManager implements CompactionManagerMBean 
 
 for ( SSTableReader sstable : sstables ) 
 { 
 + Set < SSTableReader > sstableAsSet = Collections . singleton ( sstable ) ; 
 if ( ! hasIndexes & & ! new Bounds < Token > ( sstable . first . token , sstable . last . token ) . intersects ( ranges ) ) 
 { 
 - cfs . replaceCompactedSSTables ( Arrays . asList ( sstable ) , Collections . < SSTableReader > emptyList ( ) , OperationType . CLEANUP ) ; 
 + cfs . replaceCompactedSSTables ( sstableAsSet , Collections . < SSTableReader > emptyList ( ) , OperationType . CLEANUP ) ; 
 continue ; 
 } 
 if ( ! needsCleanup ( sstable , ranges ) ) 
 @ @ - 550 , 18 + 551 , 18 @ @ public class CompactionManager implements CompactionManagerMBean 
 continue ; 
 } 
 
 - CompactionController controller = new CompactionController ( cfs , Collections . singleton ( sstable ) , getDefaultGcBefore ( cfs ) ) ; 
 + CompactionController controller = new CompactionController ( cfs , sstableAsSet , getDefaultGcBefore ( cfs ) ) ; 
 long start = System . nanoTime ( ) ; 
 
 long totalkeysWritten = 0 ; 
 
 int expectedBloomFilterSize = Math . max ( cfs . metadata . getIndexInterval ( ) , 
 - ( int ) ( SSTableReader . getApproximateKeyCount ( Arrays . asList ( sstable ) , cfs . metadata ) ) ) ; 
 + ( int ) ( SSTableReader . getApproximateKeyCount ( sstableAsSet , cfs . metadata ) ) ) ; 
 if ( logger . isDebugEnabled ( ) ) 
 logger . debug ( " Expected bloom filter size : " + expectedBloomFilterSize ) ; 
 
 logger . info ( " Cleaning up " + sstable ) ; 
 - File compactionFileLocation = cfs . directories . getWriteableLocationAsFile ( cfs . getExpectedCompactedFileSize ( sstables , OperationType . CLEANUP ) ) ; 
 + File compactionFileLocation = cfs . directories . getWriteableLocationAsFile ( cfs . getExpectedCompactedFileSize ( sstableAsSet , OperationType . CLEANUP ) ) ; 
 if ( compactionFileLocation = = null ) 
 throw new IOException ( " disk full " ) ; 


NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index 12f5a4d . . a4f1354 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 639 , 11 + 639 , 6 @ @ public class DatabaseDescriptor 
 return requestSchedulerId ; 
 } 
 
 - public static String getJobTrackerAddress ( ) 
 - { 
 - return conf . job _ tracker _ host ; 
 - } 
 - 
 public static int getColumnIndexSize ( ) 
 { 
 return conf . column _ index _ size _ in _ kb * 1024 ; 
 @ @ - 669 , 11 + 664 , 6 @ @ public class DatabaseDescriptor 
 return conf . max _ streaming _ retries ; 
 } 
 
 - public static String getJobJarLocation ( ) 
 - { 
 - return conf . job _ jar _ file _ location ; 
 - } 
 - 
 public static int getStoragePort ( ) 
 { 
 return Integer . parseInt ( System . getProperty ( " cassandra . storage _ port " , conf . storage _ port . toString ( ) ) ) ;
