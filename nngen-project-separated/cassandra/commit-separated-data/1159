BLEU SCORE: 0.01222796968620182

TEST MSG: Some DROP . . . IF EXISTS incorrectly result in exceptions on non - existing KS
GENERATED MSG: Don ' t advance reader if column name not found

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 48f4e89 . . 4adcf4f 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 12 <nl> + * Some DROP . . . IF EXISTS incorrectly result in exceptions on non - existing KS ( CASSANDRA - 10658 ) <nl> * DeletionTime . compareTo wrong in rare cases ( CASSANDRA - 10749 ) <nl> * Force encoding when computing statement ids ( CASSANDRA - 10755 ) <nl> * Properly reject counters as map keys ( CASSANDRA - 10760 ) <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java b / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java <nl> index 94edd01 . . bc6005d 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java <nl> @ @ - 54 , 7 + 54 , 12 @ @ public class DropTypeStatement extends SchemaAlteringStatement <nl> { <nl> KSMetaData ksm = Schema . instance . getKSMetaData ( name . getKeyspace ( ) ) ; <nl> if ( ksm = = null ) <nl> - throw new InvalidRequestException ( String . format ( " Cannot drop type in unknown keyspace % s " , name . getKeyspace ( ) ) ) ; <nl> + { <nl> + if ( ifExists ) <nl> + return ; <nl> + else <nl> + throw new InvalidRequestException ( String . format ( " Cannot drop type in unknown keyspace % s " , name . getKeyspace ( ) ) ) ; <nl> + } <nl> <nl> UserType old = ksm . userTypes . getType ( name . getUserTypeName ( ) ) ; <nl> if ( old = = null ) <nl> @ @ - 140 , 7 + 145 , 8 @ @ public class DropTypeStatement extends SchemaAlteringStatement <nl> public boolean announceMigration ( boolean isLocalOnly ) throws InvalidRequestException , ConfigurationException <nl> { <nl> KSMetaData ksm = Schema . instance . getKSMetaData ( name . getKeyspace ( ) ) ; <nl> - assert ksm ! = null ; <nl> + if ( ksm = = null ) <nl> + return false ; / / do not assert ( otherwise IF EXISTS case fails ) <nl> <nl> UserType toDrop = ksm . userTypes . getType ( name . getUserTypeName ( ) ) ; <nl> / / Can be null with ifExists <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / entities / TypeTest . java b / test / unit / org / apache / cassandra / cql3 / validation / entities / TypeTest . java <nl> index f27cca8 . . f23ce35 100644 <nl> - - - a / test / unit / org / apache / cassandra / cql3 / validation / entities / TypeTest . java <nl> + + + b / test / unit / org / apache / cassandra / cql3 / validation / entities / TypeTest . java <nl> @ @ - 28 , 6 + 28 , 16 @ @ import static org . junit . Assert . fail ; <nl> public class TypeTest extends CQLTester <nl> { <nl> @ Test <nl> + public void testNonExistingOnes ( ) throws Throwable <nl> + { <nl> + assertInvalidMessage ( " No user type named " , " DROP TYPE " + KEYSPACE + " . type _ does _ not _ exist " ) ; <nl> + assertInvalidMessage ( " Cannot drop type in unknown keyspace " , " DROP TYPE keyspace _ does _ not _ exist . type _ does _ not _ exist " ) ; <nl> + <nl> + execute ( " DROP TYPE IF EXISTS " + KEYSPACE + " . type _ does _ not _ exist " ) ; <nl> + execute ( " DROP TYPE IF EXISTS keyspace _ does _ not _ exist . type _ does _ not _ exist " ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testNowToUUIDCompatibility ( ) throws Throwable <nl> { <nl> createTable ( " CREATE TABLE % s ( a int , b uuid , PRIMARY KEY ( a , b ) ) " ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / DropTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / DropTest . java <nl> new file mode 100644 <nl> index 0000000 . . b0c0809 <nl> - - - / dev / null <nl> + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / DropTest . java <nl> @ @ - 0 , 0 + 1 , 37 @ @ <nl> + / * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , software <nl> + * distributed under the License is distributed on an " AS IS " BASIS , <nl> + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + * See the License for the specific language governing permissions and <nl> + * limitations under the License . <nl> + * / <nl> + <nl> + package org . apache . cassandra . cql3 . validation . operations ; <nl> + <nl> + import org . junit . Test ; <nl> + <nl> + import org . apache . cassandra . cql3 . CQLTester ; <nl> + <nl> + public class DropTest extends CQLTester <nl> + { <nl> + @ Test <nl> + public void testNonExistingOnes ( ) throws Throwable <nl> + { <nl> + assertInvalidMessage ( " Cannot drop non existing column family " , " DROP TABLE " + KEYSPACE + " . table _ does _ not _ exist " ) ; <nl> + assertInvalidMessage ( " Cannot drop non existing column family " , " DROP TABLE keyspace _ does _ not _ exist . table _ does _ not _ exist " ) ; <nl> + <nl> + execute ( " DROP TABLE IF EXISTS " + KEYSPACE + " . table _ does _ not _ exist " ) ; <nl> + execute ( " DROP TABLE IF EXISTS keyspace _ does _ not _ exist . table _ does _ not _ exist " ) ; <nl> + } <nl> + <nl> + }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 48f4e89 . . 4adcf4f 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 12 
 + * Some DROP . . . IF EXISTS incorrectly result in exceptions on non - existing KS ( CASSANDRA - 10658 ) 
 * DeletionTime . compareTo wrong in rare cases ( CASSANDRA - 10749 ) 
 * Force encoding when computing statement ids ( CASSANDRA - 10755 ) 
 * Properly reject counters as map keys ( CASSANDRA - 10760 ) 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java b / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java 
 index 94edd01 . . bc6005d 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java 
 @ @ - 54 , 7 + 54 , 12 @ @ public class DropTypeStatement extends SchemaAlteringStatement 
 { 
 KSMetaData ksm = Schema . instance . getKSMetaData ( name . getKeyspace ( ) ) ; 
 if ( ksm = = null ) 
 - throw new InvalidRequestException ( String . format ( " Cannot drop type in unknown keyspace % s " , name . getKeyspace ( ) ) ) ; 
 + { 
 + if ( ifExists ) 
 + return ; 
 + else 
 + throw new InvalidRequestException ( String . format ( " Cannot drop type in unknown keyspace % s " , name . getKeyspace ( ) ) ) ; 
 + } 
 
 UserType old = ksm . userTypes . getType ( name . getUserTypeName ( ) ) ; 
 if ( old = = null ) 
 @ @ - 140 , 7 + 145 , 8 @ @ public class DropTypeStatement extends SchemaAlteringStatement 
 public boolean announceMigration ( boolean isLocalOnly ) throws InvalidRequestException , ConfigurationException 
 { 
 KSMetaData ksm = Schema . instance . getKSMetaData ( name . getKeyspace ( ) ) ; 
 - assert ksm ! = null ; 
 + if ( ksm = = null ) 
 + return false ; / / do not assert ( otherwise IF EXISTS case fails ) 
 
 UserType toDrop = ksm . userTypes . getType ( name . getUserTypeName ( ) ) ; 
 / / Can be null with ifExists 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / entities / TypeTest . java b / test / unit / org / apache / cassandra / cql3 / validation / entities / TypeTest . java 
 index f27cca8 . . f23ce35 100644 
 - - - a / test / unit / org / apache / cassandra / cql3 / validation / entities / TypeTest . java 
 + + + b / test / unit / org / apache / cassandra / cql3 / validation / entities / TypeTest . java 
 @ @ - 28 , 6 + 28 , 16 @ @ import static org . junit . Assert . fail ; 
 public class TypeTest extends CQLTester 
 { 
 @ Test 
 + public void testNonExistingOnes ( ) throws Throwable 
 + { 
 + assertInvalidMessage ( " No user type named " , " DROP TYPE " + KEYSPACE + " . type _ does _ not _ exist " ) ; 
 + assertInvalidMessage ( " Cannot drop type in unknown keyspace " , " DROP TYPE keyspace _ does _ not _ exist . type _ does _ not _ exist " ) ; 
 + 
 + execute ( " DROP TYPE IF EXISTS " + KEYSPACE + " . type _ does _ not _ exist " ) ; 
 + execute ( " DROP TYPE IF EXISTS keyspace _ does _ not _ exist . type _ does _ not _ exist " ) ; 
 + } 
 + 
 + @ Test 
 public void testNowToUUIDCompatibility ( ) throws Throwable 
 { 
 createTable ( " CREATE TABLE % s ( a int , b uuid , PRIMARY KEY ( a , b ) ) " ) ; 
 diff - - git a / test / unit / org / apache / cassandra / cql3 / validation / operations / DropTest . java b / test / unit / org / apache / cassandra / cql3 / validation / operations / DropTest . java 
 new file mode 100644 
 index 0000000 . . b0c0809 
 - - - / dev / null 
 + + + b / test / unit / org / apache / cassandra / cql3 / validation / operations / DropTest . java 
 @ @ - 0 , 0 + 1 , 37 @ @ 
 + / * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , software 
 + * distributed under the License is distributed on an " AS IS " BASIS , 
 + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + * See the License for the specific language governing permissions and 
 + * limitations under the License . 
 + * / 
 + 
 + package org . apache . cassandra . cql3 . validation . operations ; 
 + 
 + import org . junit . Test ; 
 + 
 + import org . apache . cassandra . cql3 . CQLTester ; 
 + 
 + public class DropTest extends CQLTester 
 + { 
 + @ Test 
 + public void testNonExistingOnes ( ) throws Throwable 
 + { 
 + assertInvalidMessage ( " Cannot drop non existing column family " , " DROP TABLE " + KEYSPACE + " . table _ does _ not _ exist " ) ; 
 + assertInvalidMessage ( " Cannot drop non existing column family " , " DROP TABLE keyspace _ does _ not _ exist . table _ does _ not _ exist " ) ; 
 + 
 + execute ( " DROP TABLE IF EXISTS " + KEYSPACE + " . table _ does _ not _ exist " ) ; 
 + execute ( " DROP TABLE IF EXISTS keyspace _ does _ not _ exist . table _ does _ not _ exist " ) ; 
 + } 
 + 
 + }

NEAREST DIFF:
ELIMINATEDSENTENCE
