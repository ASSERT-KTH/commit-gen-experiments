BLEU SCORE: 0.0410424993119494

TEST MSG: fix build
GENERATED MSG: merge # 3440 from 1 . 0

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index 4acae0b . . 210ae17 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 387 , 12 + 387 , 12 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> return data . getMeanColumns ( ) ; <nl> } <nl> <nl> - public static ColumnFamilyStore createColumnFamilyStore ( Keyspace keyspace , String columnFamily , boolean loadSSTables ) throws ConfigurationException <nl> + public static ColumnFamilyStore createColumnFamilyStore ( Keyspace keyspace , String columnFamily , boolean loadSSTables ) <nl> { <nl> return createColumnFamilyStore ( keyspace , columnFamily , StorageService . getPartitioner ( ) , Schema . instance . getCFMetaData ( keyspace . getName ( ) , columnFamily ) , loadSSTables ) ; <nl> } <nl> <nl> - public static ColumnFamilyStore createColumnFamilyStore ( Keyspace keyspace , String columnFamily , IPartitioner partitioner , CFMetaData metadata ) throws ConfigurationException <nl> + public static ColumnFamilyStore createColumnFamilyStore ( Keyspace keyspace , String columnFamily , IPartitioner partitioner , CFMetaData metadata ) <nl> { <nl> return createColumnFamilyStore ( keyspace , columnFamily , partitioner , metadata , true ) ; <nl> } <nl> @ @ - 401 , 7 + 401 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> String columnFamily , <nl> IPartitioner partitioner , <nl> CFMetaData metadata , <nl> - boolean loadSSTables ) throws ConfigurationException <nl> + boolean loadSSTables ) <nl> { <nl> / / get the max generation number , to prevent generation conflicts <nl> Directories directories = Directories . create ( keyspace . getName ( ) , columnFamily ) ; <nl> @ @ - 412 , 8 + 412 , 8 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> Descriptor desc = entry . getKey ( ) ; <nl> generations . add ( desc . generation ) ; <nl> if ( ! desc . isCompatible ( ) ) <nl> - throw new ConfigurationException ( String . format ( " Incompatible SSTable found . Current version % s is unable to read file : % s . Please run upgradesstables . " , <nl> - Descriptor . Version . CURRENT , desc ) ) ; <nl> + throw new RuntimeException ( String . format ( " Incompatible SSTable found . Current version % s is unable to read file : % s . Please run upgradesstables . " , <nl> + Descriptor . Version . CURRENT , desc ) ) ; <nl> } <nl> Collections . sort ( generations ) ; <nl> int value = ( generations . size ( ) > 0 ) ? ( generations . get ( generations . size ( ) - 1 ) ) : 0 ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 6ef1317 . . 2bd02c4 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 15 , 7 + 15 , 7 @ @ Merged from 0 . 8 : <nl> * fix array out of bounds error in counter shard removal ( CASSANDRA - 3514 ) <nl> * avoid dropping tombstones when they might still be needed to shadow <nl> data in a different sstable ( CASSANDRA - 2786 ) <nl> - <nl> + * fix ConcurrentModificationException in Table . all ( ) ( CASSANDRA - 3529 ) <nl> <nl> 1 . 0 . 3 <nl> * revert name - based query defragmentation aka CASSANDRA - 2503 ( CASSANDRA - 3491 ) <nl> diff - - git a / src / java / org / apache / cassandra / config / Schema . java b / src / java / org / apache / cassandra / config / Schema . java <nl> index 924d1be . . 99ca791 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Schema . java <nl> + + + b / src / java / org / apache / cassandra / config / Schema . java <nl> @ @ - 49 , 13 + 49 , 13 @ @ public class Schema <nl> private final AtomicInteger cfIdGen = new AtomicInteger ( MIN _ CF _ ID ) ; <nl> <nl> / * metadata map for faster table lookup * / <nl> - private final Map < String , KSMetaData > tables ; <nl> + private final Map < String , KSMetaData > tables = new NonBlockingHashMap < String , KSMetaData > ( ) ; <nl> <nl> / * Table objects , one per keyspace . Only one instance should ever exist for any given keyspace . * / <nl> - private final Map < String , Table > tableInstances ; <nl> + private final Map < String , Table > tableInstances = new NonBlockingHashMap < String , Table > ( ) ; <nl> <nl> / * metadata map for faster ColumnFamily lookup * / <nl> - private final BiMap < Pair < String , String > , Integer > cfIdMap ; <nl> + private final BiMap < Pair < String , String > , Integer > cfIdMap = HashBiMap . create ( ) ; <nl> <nl> private volatile UUID version ; <nl> <nl> @ @ - 65 , 9 + 65 , 6 @ @ public class Schema <nl> * / <nl> public Schema ( UUID initialVersion ) <nl> { <nl> - tables = new HashMap < String , KSMetaData > ( ) ; <nl> - tableInstances = new NonBlockingHashMap < String , Table > ( ) ; <nl> - cfIdMap = HashBiMap . create ( ) ; <nl> version = initialVersion ; <nl> } <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index 4acae0b . . 210ae17 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 387 , 12 + 387 , 12 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 return data . getMeanColumns ( ) ; 
 } 
 
 - public static ColumnFamilyStore createColumnFamilyStore ( Keyspace keyspace , String columnFamily , boolean loadSSTables ) throws ConfigurationException 
 + public static ColumnFamilyStore createColumnFamilyStore ( Keyspace keyspace , String columnFamily , boolean loadSSTables ) 
 { 
 return createColumnFamilyStore ( keyspace , columnFamily , StorageService . getPartitioner ( ) , Schema . instance . getCFMetaData ( keyspace . getName ( ) , columnFamily ) , loadSSTables ) ; 
 } 
 
 - public static ColumnFamilyStore createColumnFamilyStore ( Keyspace keyspace , String columnFamily , IPartitioner partitioner , CFMetaData metadata ) throws ConfigurationException 
 + public static ColumnFamilyStore createColumnFamilyStore ( Keyspace keyspace , String columnFamily , IPartitioner partitioner , CFMetaData metadata ) 
 { 
 return createColumnFamilyStore ( keyspace , columnFamily , partitioner , metadata , true ) ; 
 } 
 @ @ - 401 , 7 + 401 , 7 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 String columnFamily , 
 IPartitioner partitioner , 
 CFMetaData metadata , 
 - boolean loadSSTables ) throws ConfigurationException 
 + boolean loadSSTables ) 
 { 
 / / get the max generation number , to prevent generation conflicts 
 Directories directories = Directories . create ( keyspace . getName ( ) , columnFamily ) ; 
 @ @ - 412 , 8 + 412 , 8 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 Descriptor desc = entry . getKey ( ) ; 
 generations . add ( desc . generation ) ; 
 if ( ! desc . isCompatible ( ) ) 
 - throw new ConfigurationException ( String . format ( " Incompatible SSTable found . Current version % s is unable to read file : % s . Please run upgradesstables . " , 
 - Descriptor . Version . CURRENT , desc ) ) ; 
 + throw new RuntimeException ( String . format ( " Incompatible SSTable found . Current version % s is unable to read file : % s . Please run upgradesstables . " , 
 + Descriptor . Version . CURRENT , desc ) ) ; 
 } 
 Collections . sort ( generations ) ; 
 int value = ( generations . size ( ) > 0 ) ? ( generations . get ( generations . size ( ) - 1 ) ) : 0 ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 6ef1317 . . 2bd02c4 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 15 , 7 + 15 , 7 @ @ Merged from 0 . 8 : 
 * fix array out of bounds error in counter shard removal ( CASSANDRA - 3514 ) 
 * avoid dropping tombstones when they might still be needed to shadow 
 data in a different sstable ( CASSANDRA - 2786 ) 
 - 
 + * fix ConcurrentModificationException in Table . all ( ) ( CASSANDRA - 3529 ) 
 
 1 . 0 . 3 
 * revert name - based query defragmentation aka CASSANDRA - 2503 ( CASSANDRA - 3491 ) 
 diff - - git a / src / java / org / apache / cassandra / config / Schema . java b / src / java / org / apache / cassandra / config / Schema . java 
 index 924d1be . . 99ca791 100644 
 - - - a / src / java / org / apache / cassandra / config / Schema . java 
 + + + b / src / java / org / apache / cassandra / config / Schema . java 
 @ @ - 49 , 13 + 49 , 13 @ @ public class Schema 
 private final AtomicInteger cfIdGen = new AtomicInteger ( MIN _ CF _ ID ) ; 
 
 / * metadata map for faster table lookup * / 
 - private final Map < String , KSMetaData > tables ; 
 + private final Map < String , KSMetaData > tables = new NonBlockingHashMap < String , KSMetaData > ( ) ; 
 
 / * Table objects , one per keyspace . Only one instance should ever exist for any given keyspace . * / 
 - private final Map < String , Table > tableInstances ; 
 + private final Map < String , Table > tableInstances = new NonBlockingHashMap < String , Table > ( ) ; 
 
 / * metadata map for faster ColumnFamily lookup * / 
 - private final BiMap < Pair < String , String > , Integer > cfIdMap ; 
 + private final BiMap < Pair < String , String > , Integer > cfIdMap = HashBiMap . create ( ) ; 
 
 private volatile UUID version ; 
 
 @ @ - 65 , 9 + 65 , 6 @ @ public class Schema 
 * / 
 public Schema ( UUID initialVersion ) 
 { 
 - tables = new HashMap < String , KSMetaData > ( ) ; 
 - tableInstances = new NonBlockingHashMap < String , Table > ( ) ; 
 - cfIdMap = HashBiMap . create ( ) ; 
 version = initialVersion ; 
 } 

