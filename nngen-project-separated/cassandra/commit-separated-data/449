BLEU SCORE: 0.05876350803261633

TEST MSG: Initial docs for stress
GENERATED MSG: Update tools / stress / README . txt

TEST DIFF (one line): diff - - git a / doc / source / development / testing . rst b / doc / source / development / testing . rst <nl> index f95ec1d . . e11989a 100644 <nl> - - - a / doc / source / development / testing . rst <nl> + + + b / doc / source / development / testing . rst <nl> @ @ - 76 , 7 + 76 , 7 @ @ Performance tests for Cassandra are a special breed of tests that are not part o <nl> Cassandra Stress Tool <nl> - - - - - - - - - - - - - - - - - - - - - <nl> <nl> - TODO : ` CASSANDRA - 12365 < https : / / issues . apache . org / jira / browse / CASSANDRA - 12365 > ` _ <nl> + See : ref : ` cassandra _ stress ` <nl> <nl> cstar _ perf <nl> - - - - - - - - - - <nl> diff - - git a / doc / source / tools / cassandra _ stress . rst b / doc / source / tools / cassandra _ stress . rst <nl> new file mode 100644 <nl> index 0000000 . . 417288f <nl> - - - / dev / null <nl> + + + b / doc / source / tools / cassandra _ stress . rst <nl> @ @ - 0 , 0 + 1 , 240 @ @ <nl> + . . Licensed to the Apache Software Foundation ( ASF ) under one <nl> + . . or more contributor license agreements . See the NOTICE file <nl> + . . distributed with this work for additional information <nl> + . . regarding copyright ownership . The ASF licenses this file <nl> + . . to you under the Apache License , Version 2 . 0 ( the <nl> + . . " License " ) ; you may not use this file except in compliance <nl> + . . with the License . You may obtain a copy of the License at <nl> + . . <nl> + . . http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + . . <nl> + . . Unless required by applicable law or agreed to in writing , software <nl> + . . distributed under the License is distributed on an " AS IS " BASIS , <nl> + . . WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + . . See the License for the specific language governing permissions and <nl> + . . limitations under the License . <nl> + <nl> + . . highlight : : yaml <nl> + <nl> + . . _ cassandra _ stress : <nl> + <nl> + Cassandra Stress <nl> + - - - - - - - - - - - - - - - - <nl> + <nl> + cassandra - stress is a tool for benchmarking and load testing a Cassandra <nl> + cluster . cassandra - stress supports testing arbitrary CQL tables and queries <nl> + to allow users to benchmark their data model . <nl> + <nl> + This documentation focuses on user mode as this allows the testing of your <nl> + actual schema . <nl> + <nl> + Usage <nl> + ^ ^ ^ ^ ^ <nl> + There are several operation types : <nl> + <nl> + * write - only , read - only , and mixed workloads of standard data <nl> + * write - only and read - only workloads for counter columns <nl> + * user configured workloads , running custom queries on custom schemas <nl> + <nl> + The syntax is ` cassandra - stress < command > [ options ] ` . If you want more information on a given command <nl> + or options , just run ` cassandra - stress help < command | option > ` . <nl> + <nl> + Commands : <nl> + read : <nl> + Multiple concurrent reads - the cluster must first be populated by a write test <nl> + write : <nl> + Multiple concurrent writes against the cluster <nl> + mixed : <nl> + Interleaving of any basic commands , with configurable ratio and distribution - the cluster must first be populated by a write test <nl> + counter _ write : <nl> + Multiple concurrent updates of counters . <nl> + counter _ read : <nl> + Multiple concurrent reads of counters . The cluster must first be populated by a counterwrite test . <nl> + user : <nl> + Interleaving of user provided queries , with configurable ratio and distribution . <nl> + help : <nl> + Print help for a command or option <nl> + print : <nl> + Inspect the output of a distribution definition <nl> + legacy : <nl> + Legacy support mode <nl> + <nl> + Primary Options : <nl> + - pop : <nl> + Population distribution and intra - partition visit order <nl> + - insert : <nl> + Insert specific options relating to various methods for batching and splitting partition updates <nl> + - col : <nl> + Column details such as size and count distribution , data generator , names , comparator and if super columns should be used <nl> + - rate : <nl> + Thread count , rate limit or automatic mode ( default is auto ) <nl> + - mode : <nl> + Thrift or CQL with options <nl> + - errors : <nl> + How to handle errors when encountered during stress <nl> + - sample : <nl> + Specify the number of samples to collect for measuring latency <nl> + - schema : <nl> + Replication settings , compression , compaction , etc . <nl> + - node : <nl> + Nodes to connect to <nl> + - log : <nl> + Where to log progress to , and the interval at which to do it <nl> + - transport : <nl> + Custom transport factories <nl> + - port : <nl> + The port to connect to cassandra nodes on <nl> + - sendto : <nl> + Specify a stress server to send this command to <nl> + - graph : <nl> + Graph recorded metrics <nl> + - tokenrange : <nl> + Token range settings <nl> + <nl> + <nl> + Suboptions : <nl> + Every command and primary option has its own collection of suboptions . These are too numerous to list here . <nl> + For information on the suboptions for each command or option , please use the help command , <nl> + ` cassandra - stress help < command | option > ` . <nl> + <nl> + User mode <nl> + ^ ^ ^ ^ ^ ^ ^ ^ ^ <nl> + <nl> + User mode allows you to use your stress your own schemas . This can save time in <nl> + the long run rather than building an application and then realising your schema <nl> + doesn ' t scale . <nl> + <nl> + Profile <nl> + + + + + + + + <nl> + <nl> + User mode requires a profile defined in YAML . <nl> + <nl> + The keyspace for the test : : <nl> + <nl> + keyspace : staff <nl> + <nl> + CQL for the keyspace . Optional if the keyspace already exists : : <nl> + <nl> + keyspace _ definition : | <nl> + CREATE KEYSPACE stresscql WITH replication = { ' class ' : ' SimpleStrategy ' , ' replication _ factor ' : 3 } ; <nl> + <nl> + The table to be stressed : : <nl> + <nl> + table : staff _ activities <nl> + <nl> + CQL for the table . Optional if the table already exists : : <nl> + <nl> + table _ definition : | <nl> + CREATE TABLE staff _ activities ( <nl> + name text , <nl> + when timeuuid , <nl> + what text , <nl> + PRIMARY KEY ( name , when , what ) <nl> + ) <nl> + <nl> + <nl> + Optional meta information on the generated columns in the above table . <nl> + The min and max only apply to text and blob types . <nl> + The distribution field represents the total unique population <nl> + distribution of that column across rows : : <nl> + <nl> + columnspec : <nl> + - name : name <nl> + size : uniform ( 5 . . 10 ) # The names of the staff members are between 5 - 10 characters <nl> + population : uniform ( 1 . . 10 ) # 10 possible staff members to pick from <nl> + - name : when <nl> + cluster : uniform ( 20 . . 500 ) # Staff members do between 20 and 500 events <nl> + - name : what <nl> + size : normal ( 10 . . 100 , 50 ) <nl> + <nl> + Supported types are : <nl> + <nl> + An exponential distribution over the range [ min . . max ] : : <nl> + <nl> + EXP ( min . . max ) <nl> + <nl> + An extreme value ( Weibull ) distribution over the range [ min . . max ] : : <nl> + <nl> + EXTREME ( min . . max , shape ) <nl> + <nl> + A gaussian / normal distribution , where mean = ( min + max ) / 2 , and stdev is ( mean - min ) / stdvrng : : <nl> + <nl> + GAUSSIAN ( min . . max , stdvrng ) <nl> + <nl> + A gaussian / normal distribution , with explicitly defined mean and stdev : : <nl> + <nl> + GAUSSIAN ( min . . max , mean , stdev ) <nl> + <nl> + A uniform distribution over the range [ min , max ] : : <nl> + <nl> + UNIFORM ( min . . max ) <nl> + <nl> + A fixed distribution , always returning the same value : : <nl> + <nl> + FIXED ( val ) <nl> + <nl> + If preceded by ~ , the distribution is inverted <nl> + <nl> + Defaults for all columns are size : uniform ( 4 . . 8 ) , population : uniform ( 1 . . 100B ) , cluster : fixed ( 1 ) <nl> + <nl> + Insert distributions : : <nl> + <nl> + insert : <nl> + # How many partition to insert per batch <nl> + partitions : fixed ( 1 ) <nl> + # How many rows to update per partition <nl> + select : fixed ( 1 ) / 500 <nl> + # UNLOGGED or LOGGED batch for insert <nl> + batchtype : UNLOGGED <nl> + <nl> + <nl> + Currently all inserts are done inside batches . <nl> + <nl> + Read statements to use during the test : : <nl> + <nl> + queries : <nl> + events : <nl> + cql : select * from staff _ activities where name = ? <nl> + fields : samerow <nl> + latest _ event : <nl> + cql : select * from staff _ activities where name = ? LIMIT 1 <nl> + fields : samerow <nl> + <nl> + Running a user mode test : : <nl> + <nl> + cassandra - stress user profile = . / example . yaml duration = 1m " ops ( insert = 1 , latest _ event = 1 , events = 1 ) " truncate = once <nl> + <nl> + This will create the schema then run tests for 1 minute with an equal number of inserts , latest _ event queries and events <nl> + queries . Additionally the table will be truncated once before the test . <nl> + <nl> + The full example can be found here : download : ` yaml < . / stress - example . yaml > ` <nl> + <nl> + Graphing <nl> + ^ ^ ^ ^ ^ ^ ^ ^ <nl> + <nl> + Graphs can be generated for each run of stress . <nl> + <nl> + . . image : : example - stress - graph . png <nl> + <nl> + To create a new graph : : <nl> + <nl> + cassandra - stress user profile = . / stress - example . yaml " ops ( insert = 1 , latest _ event = 1 , events = 1 ) " - graph file = graph . html title = " Awesome graph " <nl> + <nl> + To add a new run to an existing graph point to an existing file and add a revision name : : <nl> + <nl> + cassandra - stress user profile = . / stress - example . yaml duration = 1m " ops ( insert = 1 , latest _ event = 1 , events = 1 ) " - graph file = graph . html title = " Awesome graph " revision = " Second run " <nl> + <nl> + FAQ <nl> + ^ ^ ^ ^ <nl> + <nl> + * * How do you use NetworkTopologyStrategy for the keyspace ? * * <nl> + <nl> + Use the schema option making sure to either escape the parenthesis or enclose in quotes : : <nl> + <nl> + cassandra - stress write - schema " replication ( strategy = NetworkTopologyStrategy , datacenter1 = 3 ) " <nl> + <nl> + * * How do you use SSL ? * * <nl> + <nl> + Use the transport option : : <nl> + <nl> + cassandra - stress " write n = 100k cl = ONE no - warmup " - transport " truststore = $ HOME / jks / truststore . jks truststore - password = cassandra " <nl> \ No newline at end of file <nl> diff - - git a / doc / source / tools / example - stress - graph . png b / doc / source / tools / example - stress - graph . png <nl> new file mode 100644 <nl> index 0000000 . . a65b08b <nl> Binary files / dev / null and b / doc / source / tools / example - stress - graph . png differ <nl> diff - - git a / doc / source / tools / index . rst b / doc / source / tools / index . rst <nl> index bdb98fd . . 20a5383 100644 <nl> - - - a / doc / source / tools / index . rst <nl> + + + b / doc / source / tools / index . rst <nl> @ @ - 24 , 3 + 24 , 4 @ @ This section describes the command line tools provided with Apache Cassandra . <nl> <nl> cqlsh <nl> nodetool / nodetool <nl> + cassandra _ stress <nl> diff - - git a / doc / source / tools / stress - example . yaml b / doc / source / tools / stress - example . yaml <nl> new file mode 100644 <nl> index 0000000 . . 0384de2 <nl> - - - / dev / null <nl> + + + b / doc / source / tools / stress - example . yaml <nl> @ @ - 0 , 0 + 1 , 43 @ @ <nl> + keyspace : example <nl> + <nl> + # Would almost always be network topology unless running something locally <nl> + keyspace _ definition : | <nl> + CREATE KEYSPACE example WITH replication = { ' class ' : ' SimpleStrategy ' , ' replication _ factor ' : 3 } ; <nl> + <nl> + table : staff _ activities <nl> + <nl> + # The table under test . Start with a partition per staff member <nl> + # Is this a good idea ? <nl> + table _ definition : | <nl> + CREATE TABLE staff _ activities ( <nl> + name text , <nl> + when timeuuid , <nl> + what text , <nl> + PRIMARY KEY ( name , when ) <nl> + ) <nl> + <nl> + columnspec : <nl> + - name : name <nl> + size : uniform ( 5 . . 10 ) # The names of the staff members are between 5 - 10 characters <nl> + population : uniform ( 1 . . 10 ) # 10 possible staff members to pick from <nl> + - name : when <nl> + cluster : uniform ( 20 . . 500 ) # Staff members do between 20 and 500 events <nl> + - name : what <nl> + size : normal ( 10 . . 100 , 50 ) <nl> + <nl> + insert : <nl> + # we only update a single partition in any given insert <nl> + partitions : fixed ( 1 ) <nl> + # we want to insert a single row per partition and we have between 20 and 500 <nl> + # rows per partition <nl> + select : fixed ( 1 ) / 500 <nl> + batchtype : UNLOGGED # Single partition unlogged batches are essentially noops <nl> + <nl> + queries : <nl> + events : <nl> + cql : select * from staff _ activities where name = ? <nl> + fields : samerow <nl> + latest _ event : <nl> + cql : select * from staff _ activities where name = ? LIMIT 1 <nl> + fields : samerow <nl> + <nl> diff - - git a / tools / stress / README . txt b / tools / stress / README . txt <nl> index 585409e . . 355415b 100644 <nl> - - - a / tools / stress / README . txt <nl> + + + b / tools / stress / README . txt <nl> @ @ - 1 , 92 + 1 , 13 @ @ <nl> cassandra - stress <nl> = = = = = = <nl> <nl> - Description <nl> - - - - - - - - - - - - <nl> - cassandra - stress is a tool for benchmarking and load testing a Cassandra <nl> - cluster . cassandra - stress supports testing arbitrary CQL tables and queries <nl> - to allow users to benchmark their data model . <nl> - <nl> Setup <nl> - - - - - <nl> Run ` ant ` from the Cassandra source directory , then cassandra - stress can be invoked from tools / bin / cassandra - stress . <nl> cassandra - stress supports benchmarking any Cassandra cluster of version 2 . 0 + . <nl> <nl> - Usage <nl> - - - - - - <nl> - There are several operation types : <nl> - <nl> - * write - only , read - only , and mixed workloads of standard data <nl> - * write - only and read - only workloads for counter columns <nl> - * user configured workloads , running custom queries on custom schemas <nl> - * support for legacy cassandra - stress operations <nl> - <nl> - The syntax is ` cassandra - stress < command > [ options ] ` . If you want more information on a given command <nl> - or options , just run ` cassandra - stress help < command | option > ` . <nl> - <nl> - Commands : <nl> - read : <nl> - Multiple concurrent reads - the cluster must first be populated by a write test <nl> - write : <nl> - Multiple concurrent writes against the cluster <nl> - mixed : <nl> - Interleaving of any basic commands , with configurable ratio and distribution - the cluster must first be populated by a write test <nl> - counter _ write : <nl> - Multiple concurrent updates of counters . <nl> - counter _ read : <nl> - Multiple concurrent reads of counters . The cluster must first be populated by a counterwrite test . <nl> - user : <nl> - Interleaving of user provided queries , with configurable ratio and distribution . <nl> - See http : / / www . datastax . com / dev / blog / improved - cassandra - 2 - 1 - stress - tool - benchmark - any - schema <nl> - help : <nl> - Print help for a command or option <nl> - print : <nl> - Inspect the output of a distribution definition <nl> - legacy : <nl> - Legacy support mode <nl> - <nl> - Primary Options : <nl> - - pop : <nl> - Population distribution and intra - partition visit order <nl> - - insert : <nl> - Insert specific options relating to various methods for batching and splitting partition updates <nl> - - col : <nl> - Column details such as size and count distribution , data generator , names , comparator and if super columns should be used <nl> - - rate : <nl> - Thread count , rate limit or automatic mode ( default is auto ) <nl> - - mode : <nl> - CQL transport options <nl> - - errors : <nl> - How to handle errors when encountered during stress <nl> - - sample : <nl> - Specify the number of samples to collect for measuring latency <nl> - - schema : <nl> - Replication settings , compression , compaction , etc . <nl> - - node : <nl> - Nodes to connect to <nl> - - log : <nl> - Where to log progress to , and the interval at which to do it <nl> - - transport : <nl> - Custom transport factories <nl> - - port : <nl> - The port to connect to cassandra nodes on <nl> - - sendto : <nl> - Specify a stress server to send this command to <nl> - - graph : <nl> - Graph recorded metrics <nl> - - tokenrange : <nl> - Token range settings <nl> - <nl> - <nl> - Suboptions : <nl> - Every command and primary option has its own collection of suboptions . These are too numerous to list here . <nl> - For information on the suboptions for each command or option , please use the help command , <nl> - ` cassandra - stress help < command | option > ` . <nl> + Usage & Examples <nl> + - - - - - - - - - - - - - - - - <nl> <nl> - Examples <nl> - - - - - - - - - <nl> + See : https : / / cassandra . apache . org / doc / latest / tools / cassandra _ stress . html <nl> <nl> - * tools / bin / cassandra - stress write n = 1000000 - node 192 . 168 . 1 . 101 # 1M inserts to given host <nl> - * tools / bin / cassandra - stress read n = 10000000 - node 192 . 168 . 1 . 101 - o read # 1M reads <nl> - * tools / bin / cassandra - stress write - node 192 . 168 . 1 . 101 , 192 . 168 . 1 . 102 n = 10000000 # 10M inserts spread across two nodes <nl> - * tools / bin / cassandra - stress help - pop # Print help for population distribution option
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / doc / source / development / testing . rst b / doc / source / development / testing . rst 
 index f95ec1d . . e11989a 100644 
 - - - a / doc / source / development / testing . rst 
 + + + b / doc / source / development / testing . rst 
 @ @ - 76 , 7 + 76 , 7 @ @ Performance tests for Cassandra are a special breed of tests that are not part o 
 Cassandra Stress Tool 
 - - - - - - - - - - - - - - - - - - - - - 
 
 - TODO : ` CASSANDRA - 12365 < https : / / issues . apache . org / jira / browse / CASSANDRA - 12365 > ` _ 
 + See : ref : ` cassandra _ stress ` 
 
 cstar _ perf 
 - - - - - - - - - - 
 diff - - git a / doc / source / tools / cassandra _ stress . rst b / doc / source / tools / cassandra _ stress . rst 
 new file mode 100644 
 index 0000000 . . 417288f 
 - - - / dev / null 
 + + + b / doc / source / tools / cassandra _ stress . rst 
 @ @ - 0 , 0 + 1 , 240 @ @ 
 + . . Licensed to the Apache Software Foundation ( ASF ) under one 
 + . . or more contributor license agreements . See the NOTICE file 
 + . . distributed with this work for additional information 
 + . . regarding copyright ownership . The ASF licenses this file 
 + . . to you under the Apache License , Version 2 . 0 ( the 
 + . . " License " ) ; you may not use this file except in compliance 
 + . . with the License . You may obtain a copy of the License at 
 + . . 
 + . . http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + . . 
 + . . Unless required by applicable law or agreed to in writing , software 
 + . . distributed under the License is distributed on an " AS IS " BASIS , 
 + . . WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + . . See the License for the specific language governing permissions and 
 + . . limitations under the License . 
 + 
 + . . highlight : : yaml 
 + 
 + . . _ cassandra _ stress : 
 + 
 + Cassandra Stress 
 + - - - - - - - - - - - - - - - - 
 + 
 + cassandra - stress is a tool for benchmarking and load testing a Cassandra 
 + cluster . cassandra - stress supports testing arbitrary CQL tables and queries 
 + to allow users to benchmark their data model . 
 + 
 + This documentation focuses on user mode as this allows the testing of your 
 + actual schema . 
 + 
 + Usage 
 + ^ ^ ^ ^ ^ 
 + There are several operation types : 
 + 
 + * write - only , read - only , and mixed workloads of standard data 
 + * write - only and read - only workloads for counter columns 
 + * user configured workloads , running custom queries on custom schemas 
 + 
 + The syntax is ` cassandra - stress < command > [ options ] ` . If you want more information on a given command 
 + or options , just run ` cassandra - stress help < command | option > ` . 
 + 
 + Commands : 
 + read : 
 + Multiple concurrent reads - the cluster must first be populated by a write test 
 + write : 
 + Multiple concurrent writes against the cluster 
 + mixed : 
 + Interleaving of any basic commands , with configurable ratio and distribution - the cluster must first be populated by a write test 
 + counter _ write : 
 + Multiple concurrent updates of counters . 
 + counter _ read : 
 + Multiple concurrent reads of counters . The cluster must first be populated by a counterwrite test . 
 + user : 
 + Interleaving of user provided queries , with configurable ratio and distribution . 
 + help : 
 + Print help for a command or option 
 + print : 
 + Inspect the output of a distribution definition 
 + legacy : 
 + Legacy support mode 
 + 
 + Primary Options : 
 + - pop : 
 + Population distribution and intra - partition visit order 
 + - insert : 
 + Insert specific options relating to various methods for batching and splitting partition updates 
 + - col : 
 + Column details such as size and count distribution , data generator , names , comparator and if super columns should be used 
 + - rate : 
 + Thread count , rate limit or automatic mode ( default is auto ) 
 + - mode : 
 + Thrift or CQL with options 
 + - errors : 
 + How to handle errors when encountered during stress 
 + - sample : 
 + Specify the number of samples to collect for measuring latency 
 + - schema : 
 + Replication settings , compression , compaction , etc . 
 + - node : 
 + Nodes to connect to 
 + - log : 
 + Where to log progress to , and the interval at which to do it 
 + - transport : 
 + Custom transport factories 
 + - port : 
 + The port to connect to cassandra nodes on 
 + - sendto : 
 + Specify a stress server to send this command to 
 + - graph : 
 + Graph recorded metrics 
 + - tokenrange : 
 + Token range settings 
 + 
 + 
 + Suboptions : 
 + Every command and primary option has its own collection of suboptions . These are too numerous to list here . 
 + For information on the suboptions for each command or option , please use the help command , 
 + ` cassandra - stress help < command | option > ` . 
 + 
 + User mode 
 + ^ ^ ^ ^ ^ ^ ^ ^ ^ 
 + 
 + User mode allows you to use your stress your own schemas . This can save time in 
 + the long run rather than building an application and then realising your schema 
 + doesn ' t scale . 
 + 
 + Profile 
 + + + + + + + + 
 + 
 + User mode requires a profile defined in YAML . 
 + 
 + The keyspace for the test : : 
 + 
 + keyspace : staff 
 + 
 + CQL for the keyspace . Optional if the keyspace already exists : : 
 + 
 + keyspace _ definition : | 
 + CREATE KEYSPACE stresscql WITH replication = { ' class ' : ' SimpleStrategy ' , ' replication _ factor ' : 3 } ; 
 + 
 + The table to be stressed : : 
 + 
 + table : staff _ activities 
 + 
 + CQL for the table . Optional if the table already exists : : 
 + 
 + table _ definition : | 
 + CREATE TABLE staff _ activities ( 
 + name text , 
 + when timeuuid , 
 + what text , 
 + PRIMARY KEY ( name , when , what ) 
 + ) 
 + 
 + 
 + Optional meta information on the generated columns in the above table . 
 + The min and max only apply to text and blob types . 
 + The distribution field represents the total unique population 
 + distribution of that column across rows : : 
 + 
 + columnspec : 
 + - name : name 
 + size : uniform ( 5 . . 10 ) # The names of the staff members are between 5 - 10 characters 
 + population : uniform ( 1 . . 10 ) # 10 possible staff members to pick from 
 + - name : when 
 + cluster : uniform ( 20 . . 500 ) # Staff members do between 20 and 500 events 
 + - name : what 
 + size : normal ( 10 . . 100 , 50 ) 
 + 
 + Supported types are : 
 + 
 + An exponential distribution over the range [ min . . max ] : : 
 + 
 + EXP ( min . . max ) 
 + 
 + An extreme value ( Weibull ) distribution over the range [ min . . max ] : : 
 + 
 + EXTREME ( min . . max , shape ) 
 + 
 + A gaussian / normal distribution , where mean = ( min + max ) / 2 , and stdev is ( mean - min ) / stdvrng : : 
 + 
 + GAUSSIAN ( min . . max , stdvrng ) 
 + 
 + A gaussian / normal distribution , with explicitly defined mean and stdev : : 
 + 
 + GAUSSIAN ( min . . max , mean , stdev ) 
 + 
 + A uniform distribution over the range [ min , max ] : : 
 + 
 + UNIFORM ( min . . max ) 
 + 
 + A fixed distribution , always returning the same value : : 
 + 
 + FIXED ( val ) 
 + 
 + If preceded by ~ , the distribution is inverted 
 + 
 + Defaults for all columns are size : uniform ( 4 . . 8 ) , population : uniform ( 1 . . 100B ) , cluster : fixed ( 1 ) 
 + 
 + Insert distributions : : 
 + 
 + insert : 
 + # How many partition to insert per batch 
 + partitions : fixed ( 1 ) 
 + # How many rows to update per partition 
 + select : fixed ( 1 ) / 500 
 + # UNLOGGED or LOGGED batch for insert 
 + batchtype : UNLOGGED 
 + 
 + 
 + Currently all inserts are done inside batches . 
 + 
 + Read statements to use during the test : : 
 + 
 + queries : 
 + events : 
 + cql : select * from staff _ activities where name = ? 
 + fields : samerow 
 + latest _ event : 
 + cql : select * from staff _ activities where name = ? LIMIT 1 
 + fields : samerow 
 + 
 + Running a user mode test : : 
 + 
 + cassandra - stress user profile = . / example . yaml duration = 1m " ops ( insert = 1 , latest _ event = 1 , events = 1 ) " truncate = once 
 + 
 + This will create the schema then run tests for 1 minute with an equal number of inserts , latest _ event queries and events 
 + queries . Additionally the table will be truncated once before the test . 
 + 
 + The full example can be found here : download : ` yaml < . / stress - example . yaml > ` 
 + 
 + Graphing 
 + ^ ^ ^ ^ ^ ^ ^ ^ 
 + 
 + Graphs can be generated for each run of stress . 
 + 
 + . . image : : example - stress - graph . png 
 + 
 + To create a new graph : : 
 + 
 + cassandra - stress user profile = . / stress - example . yaml " ops ( insert = 1 , latest _ event = 1 , events = 1 ) " - graph file = graph . html title = " Awesome graph " 
 + 
 + To add a new run to an existing graph point to an existing file and add a revision name : : 
 + 
 + cassandra - stress user profile = . / stress - example . yaml duration = 1m " ops ( insert = 1 , latest _ event = 1 , events = 1 ) " - graph file = graph . html title = " Awesome graph " revision = " Second run " 
 + 
 + FAQ 
 + ^ ^ ^ ^ 
 + 
 + * * How do you use NetworkTopologyStrategy for the keyspace ? * * 
 + 
 + Use the schema option making sure to either escape the parenthesis or enclose in quotes : : 
 + 
 + cassandra - stress write - schema " replication ( strategy = NetworkTopologyStrategy , datacenter1 = 3 ) " 
 + 
 + * * How do you use SSL ? * * 
 + 
 + Use the transport option : : 
 + 
 + cassandra - stress " write n = 100k cl = ONE no - warmup " - transport " truststore = $ HOME / jks / truststore . jks truststore - password = cassandra " 
 \ No newline at end of file 
 diff - - git a / doc / source / tools / example - stress - graph . png b / doc / source / tools / example - stress - graph . png 
 new file mode 100644 
 index 0000000 . . a65b08b 
 Binary files / dev / null and b / doc / source / tools / example - stress - graph . png differ 
 diff - - git a / doc / source / tools / index . rst b / doc / source / tools / index . rst 
 index bdb98fd . . 20a5383 100644 
 - - - a / doc / source / tools / index . rst 
 + + + b / doc / source / tools / index . rst 
 @ @ - 24 , 3 + 24 , 4 @ @ This section describes the command line tools provided with Apache Cassandra . 
 
 cqlsh 
 nodetool / nodetool 
 + cassandra _ stress 
 diff - - git a / doc / source / tools / stress - example . yaml b / doc / source / tools / stress - example . yaml 
 new file mode 100644 
 index 0000000 . . 0384de2 
 - - - / dev / null 
 + + + b / doc / source / tools / stress - example . yaml 
 @ @ - 0 , 0 + 1 , 43 @ @ 
 + keyspace : example 
 + 
 + # Would almost always be network topology unless running something locally 
 + keyspace _ definition : | 
 + CREATE KEYSPACE example WITH replication = { ' class ' : ' SimpleStrategy ' , ' replication _ factor ' : 3 } ; 
 + 
 + table : staff _ activities 
 + 
 + # The table under test . Start with a partition per staff member 
 + # Is this a good idea ? 
 + table _ definition : | 
 + CREATE TABLE staff _ activities ( 
 + name text , 
 + when timeuuid , 
 + what text , 
 + PRIMARY KEY ( name , when ) 
 + ) 
 + 
 + columnspec : 
 + - name : name 
 + size : uniform ( 5 . . 10 ) # The names of the staff members are between 5 - 10 characters 
 + population : uniform ( 1 . . 10 ) # 10 possible staff members to pick from 
 + - name : when 
 + cluster : uniform ( 20 . . 500 ) # Staff members do between 20 and 500 events 
 + - name : what 
 + size : normal ( 10 . . 100 , 50 ) 
 + 
 + insert : 
 + # we only update a single partition in any given insert 
 + partitions : fixed ( 1 ) 
 + # we want to insert a single row per partition and we have between 20 and 500 
 + # rows per partition 
 + select : fixed ( 1 ) / 500 
 + batchtype : UNLOGGED # Single partition unlogged batches are essentially noops 
 + 
 + queries : 
 + events : 
 + cql : select * from staff _ activities where name = ? 
 + fields : samerow 
 + latest _ event : 
 + cql : select * from staff _ activities where name = ? LIMIT 1 
 + fields : samerow 
 + 
 diff - - git a / tools / stress / README . txt b / tools / stress / README . txt 
 index 585409e . . 355415b 100644 
 - - - a / tools / stress / README . txt 
 + + + b / tools / stress / README . txt 
 @ @ - 1 , 92 + 1 , 13 @ @ 
 cassandra - stress 
 = = = = = = 
 
 - Description 
 - - - - - - - - - - - - 
 - cassandra - stress is a tool for benchmarking and load testing a Cassandra 
 - cluster . cassandra - stress supports testing arbitrary CQL tables and queries 
 - to allow users to benchmark their data model . 
 - 
 Setup 
 - - - - - 
 Run ` ant ` from the Cassandra source directory , then cassandra - stress can be invoked from tools / bin / cassandra - stress . 
 cassandra - stress supports benchmarking any Cassandra cluster of version 2 . 0 + . 
 
 - Usage 
 - - - - - - 
 - There are several operation types : 
 - 
 - * write - only , read - only , and mixed workloads of standard data 
 - * write - only and read - only workloads for counter columns 
 - * user configured workloads , running custom queries on custom schemas 
 - * support for legacy cassandra - stress operations 
 - 
 - The syntax is ` cassandra - stress < command > [ options ] ` . If you want more information on a given command 
 - or options , just run ` cassandra - stress help < command | option > ` . 
 - 
 - Commands : 
 - read : 
 - Multiple concurrent reads - the cluster must first be populated by a write test 
 - write : 
 - Multiple concurrent writes against the cluster 
 - mixed : 
 - Interleaving of any basic commands , with configurable ratio and distribution - the cluster must first be populated by a write test 
 - counter _ write : 
 - Multiple concurrent updates of counters . 
 - counter _ read : 
 - Multiple concurrent reads of counters . The cluster must first be populated by a counterwrite test . 
 - user : 
 - Interleaving of user provided queries , with configurable ratio and distribution . 
 - See http : / / www . datastax . com / dev / blog / improved - cassandra - 2 - 1 - stress - tool - benchmark - any - schema 
 - help : 
 - Print help for a command or option 
 - print : 
 - Inspect the output of a distribution definition 
 - legacy : 
 - Legacy support mode 
 - 
 - Primary Options : 
 - - pop : 
 - Population distribution and intra - partition visit order 
 - - insert : 
 - Insert specific options relating to various methods for batching and splitting partition updates 
 - - col : 
 - Column details such as size and count distribution , data generator , names , comparator and if super columns should be used 
 - - rate : 
 - Thread count , rate limit or automatic mode ( default is auto ) 
 - - mode : 
 - CQL transport options 
 - - errors : 
 - How to handle errors when encountered during stress 
 - - sample : 
 - Specify the number of samples to collect for measuring latency 
 - - schema : 
 - Replication settings , compression , compaction , etc . 
 - - node : 
 - Nodes to connect to 
 - - log : 
 - Where to log progress to , and the interval at which to do it 
 - - transport : 
 - Custom transport factories 
 - - port : 
 - The port to connect to cassandra nodes on 
 - - sendto : 
 - Specify a stress server to send this command to 
 - - graph : 
 - Graph recorded metrics 
 - - tokenrange : 
 - Token range settings 
 - 
 - 
 - Suboptions : 
 - Every command and primary option has its own collection of suboptions . These are too numerous to list here . 
 - For information on the suboptions for each command or option , please use the help command , 
 - ` cassandra - stress help < command | option > ` . 
 + Usage & Examples 
 + - - - - - - - - - - - - - - - - 
 
 - Examples 
 - - - - - - - - - 
 + See : https : / / cassandra . apache . org / doc / latest / tools / cassandra _ stress . html 
 
 - * tools / bin / cassandra - stress write n = 1000000 - node 192 . 168 . 1 . 101 # 1M inserts to given host 
 - * tools / bin / cassandra - stress read n = 10000000 - node 192 . 168 . 1 . 101 - o read # 1M reads 
 - * tools / bin / cassandra - stress write - node 192 . 168 . 1 . 101 , 192 . 168 . 1 . 102 n = 10000000 # 10M inserts spread across two nodes 
 - * tools / bin / cassandra - stress help - pop # Print help for population distribution option

NEAREST DIFF:
ELIMINATEDSENTENCE
