BLEU SCORE: 0.05341087579952926

TEST MSG: Remove some dead thrift code
GENERATED MSG: inline AbstractColumnIterator

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cql3 / statements / CreateTableStatement . java b / src / java / org / apache / cassandra / cql3 / statements / CreateTableStatement . java <nl> index efaf36d . . 5160d6f 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / CreateTableStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / CreateTableStatement . java <nl> @ @ - 36 , 7 + 36 , 6 @ @ import org . apache . cassandra . exceptions . AlreadyExistsException ; <nl> import org . apache . cassandra . io . compress . CompressionParameters ; <nl> import org . apache . cassandra . service . ClientState ; <nl> import org . apache . cassandra . service . MigrationManager ; <nl> - import org . apache . cassandra . thrift . CqlResult ; <nl> import org . apache . cassandra . transport . messages . ResultMessage ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> <nl> @ @ - 432 , 15 + 431 , 5 @ @ public class CreateTableStatement extends SchemaAlteringStatement <nl> { <nl> useCompactStorage = true ; <nl> } <nl> - <nl> - public void checkAccess ( ClientState state ) <nl> - { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - public CqlResult execute ( ClientState state , List < ByteBuffer > variables ) <nl> - { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyNotDefinedException . java b / src / java / org / apache / cassandra / db / ColumnFamilyNotDefinedException . java <nl> deleted file mode 100644 <nl> index 54a0e4e . . 0000000 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyNotDefinedException . java <nl> + + + / dev / null <nl> @ @ - 1 , 28 + 0 , 0 @ @ <nl> - / * <nl> - * Licensed to the Apache Software Foundation ( ASF ) under one <nl> - * or more contributor license agreements . See the NOTICE file <nl> - * distributed with this work for additional information <nl> - * regarding copyright ownership . The ASF licenses this file <nl> - * to you under the Apache License , Version 2 . 0 ( the <nl> - * " License " ) ; you may not use this file except in compliance <nl> - * with the License . You may obtain a copy of the License at <nl> - * <nl> - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> - * <nl> - * Unless required by applicable law or agreed to in writing , software <nl> - * distributed under the License is distributed on an " AS IS " BASIS , <nl> - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> - * See the License for the specific language governing permissions and <nl> - * limitations under the License . <nl> - * / <nl> - package org . apache . cassandra . db ; <nl> - <nl> - import org . apache . cassandra . thrift . InvalidRequestException ; <nl> - <nl> - public class ColumnFamilyNotDefinedException extends InvalidRequestException <nl> - { <nl> - public ColumnFamilyNotDefinedException ( String message ) <nl> - { <nl> - super ( message ) ; <nl> - } <nl> - } <nl> diff - - git a / test / unit / org / apache / cassandra / db / ReadMessageTest . java b / test / unit / org / apache / cassandra / db / ReadMessageTest . java <nl> index 94928c0 . . cdd561f 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / ReadMessageTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / ReadMessageTest . java <nl> @ @ - 84 , 7 + 84 , 7 @ @ public class ReadMessageTest extends SchemaLoader <nl> } <nl> <nl> @ Test <nl> - public void testGetColumn ( ) throws IOException , ColumnFamilyNotDefinedException <nl> + public void testGetColumn ( ) <nl> { <nl> Keyspace keyspace = Keyspace . open ( " Keyspace1 " ) ; <nl> ColumnFamilyStore cfs = keyspace . getColumnFamilyStore ( " Standard1 " ) ;
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / CollationController . java b / src / java / org / apache / cassandra / db / CollationController . java <nl> index 1bb09ce . . f1f560e 100644 <nl> - - - a / src / java / org / apache / cassandra / db / CollationController . java <nl> + + + b / src / java / org / apache / cassandra / db / CollationController . java <nl> @ @ - 25 , 7 + 25 , 6 @ @ import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> import org . apache . cassandra . db . columniterator . OnDiskAtomIterator ; <nl> - import org . apache . cassandra . db . columniterator . SimpleAbstractColumnIterator ; <nl> import org . apache . cassandra . db . compaction . SizeTieredCompactionStrategy ; <nl> import org . apache . cassandra . db . filter . NamesQueryFilter ; <nl> import org . apache . cassandra . db . filter . QueryFilter ; <nl> @ @ - 34 , 7 + 33 , 6 @ @ import org . apache . cassandra . io . sstable . SSTable ; <nl> import org . apache . cassandra . io . sstable . SSTableReader ; <nl> import org . apache . cassandra . io . util . FileUtils ; <nl> import org . apache . cassandra . tracing . Tracing ; <nl> - import org . apache . cassandra . utils . CloseableIterator ; <nl> import org . apache . cassandra . utils . HeapAllocator ; <nl> <nl> public class CollationController <nl> diff - - git a / src / java / org / apache / cassandra / db / Memtable . java b / src / java / org / apache / cassandra / db / Memtable . java <nl> index df5f6d7 . . 0874829 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Memtable . java <nl> + + + b / src / java / org / apache / cassandra / db / Memtable . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import java . util . concurrent . atomic . AtomicLong ; <nl> <nl> import com . google . common . base . Function ; <nl> import com . google . common . base . Throwables ; <nl> + import com . google . common . collect . AbstractIterator ; <nl> <nl> import org . apache . cassandra . concurrent . JMXEnabledThreadPoolExecutor ; <nl> import org . apache . cassandra . concurrent . StageManager ; <nl> @ @ - 379 , 32 + 380 , 7 @ @ public class Memtable <nl> { <nl> assert cf ! = null ; <nl> <nl> - return new SimpleAbstractColumnIterator ( ) <nl> - { <nl> - private Iterator < ByteBuffer > iter = filter . columns . iterator ( ) ; <nl> - <nl> - public ColumnFamily getColumnFamily ( ) <nl> - { <nl> - return cf ; <nl> - } <nl> - <nl> - public DecoratedKey getKey ( ) <nl> - { <nl> - return key ; <nl> - } <nl> - <nl> - protected OnDiskAtom computeNext ( ) <nl> - { <nl> - while ( iter . hasNext ( ) ) <nl> - { <nl> - ByteBuffer current = iter . next ( ) ; <nl> - Column column = cf . getColumn ( current ) ; <nl> - if ( column ! = null ) <nl> - return column ; <nl> - } <nl> - return endOfData ( ) ; <nl> - } <nl> - } ; <nl> + return new ByNameColumnIterator ( filter . columns . iterator ( ) , cf , key ) ; <nl> } <nl> <nl> public ColumnFamily getColumnFamily ( DecoratedKey key ) <nl> @ @ - 417 , 6 + 393 , 44 @ @ public class Memtable <nl> return creationTime ; <nl> } <nl> <nl> + private static class ByNameColumnIterator extends AbstractIterator < OnDiskAtom > implements OnDiskAtomIterator <nl> + { <nl> + private final ColumnFamily cf ; <nl> + private final DecoratedKey key ; <nl> + private final Iterator < ByteBuffer > iter ; <nl> + <nl> + public ByNameColumnIterator ( Iterator < ByteBuffer > iter , ColumnFamily cf , DecoratedKey key ) <nl> + { <nl> + this . iter = iter ; <nl> + this . cf = cf ; <nl> + this . key = key ; <nl> + } <nl> + <nl> + public ColumnFamily getColumnFamily ( ) <nl> + { <nl> + return cf ; <nl> + } <nl> + <nl> + public DecoratedKey getKey ( ) <nl> + { <nl> + return key ; <nl> + } <nl> + <nl> + protected OnDiskAtom computeNext ( ) <nl> + { <nl> + while ( iter . hasNext ( ) ) <nl> + { <nl> + ByteBuffer current = iter . next ( ) ; <nl> + Column column = cf . getColumn ( current ) ; <nl> + if ( column ! = null ) <nl> + return column ; <nl> + } <nl> + return endOfData ( ) ; <nl> + } <nl> + <nl> + public void close ( ) throws IOException { } <nl> + } <nl> + <nl> class FlushRunnable extends DiskAwareRunnable <nl> { <nl> private final CountDownLatch latch ; <nl> diff - - git a / src / java / org / apache / cassandra / db / columniterator / SSTableNamesIterator . java b / src / java / org / apache / cassandra / db / columniterator / SSTableNamesIterator . java <nl> index 36f240d . . 20ca0cb 100644 <nl> - - - a / src / java / org / apache / cassandra / db / columniterator / SSTableNamesIterator . java <nl> + + + b / src / java / org / apache / cassandra / db / columniterator / SSTableNamesIterator . java <nl> @ @ - 24 , 6 + 24 , 8 @ @ import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . SortedSet ; <nl> <nl> + import com . google . common . collect . AbstractIterator ; <nl> + <nl> import org . apache . cassandra . config . CFMetaData ; <nl> import org . apache . cassandra . db . * ; <nl> import org . apache . cassandra . db . marshal . AbstractType ; <nl> @ @ - 35 , 7 + 37 , 7 @ @ import org . apache . cassandra . io . util . FileMark ; <nl> import org . apache . cassandra . io . util . FileUtils ; <nl> import org . apache . cassandra . utils . ByteBufferUtil ; <nl> <nl> - public class SSTableNamesIterator extends SimpleAbstractColumnIterator implements OnDiskAtomIterator <nl> + public class SSTableNamesIterator extends AbstractIterator < OnDiskAtom > implements OnDiskAtomIterator <nl> { <nl> private ColumnFamily cf ; <nl> private final SSTableReader sstable ; <nl> @ @ - 240 , 4 + 242 , 6 @ @ public class SSTableNamesIterator extends SimpleAbstractColumnIterator implement <nl> return endOfData ( ) ; <nl> return iter . next ( ) ; <nl> } <nl> + <nl> + public void close ( ) throws IOException { } <nl> }

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / cql3 / statements / CreateTableStatement . java b / src / java / org / apache / cassandra / cql3 / statements / CreateTableStatement . java 
 index efaf36d . . 5160d6f 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / CreateTableStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / CreateTableStatement . java 
 @ @ - 36 , 7 + 36 , 6 @ @ import org . apache . cassandra . exceptions . AlreadyExistsException ; 
 import org . apache . cassandra . io . compress . CompressionParameters ; 
 import org . apache . cassandra . service . ClientState ; 
 import org . apache . cassandra . service . MigrationManager ; 
 - import org . apache . cassandra . thrift . CqlResult ; 
 import org . apache . cassandra . transport . messages . ResultMessage ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 
 @ @ - 432 , 15 + 431 , 5 @ @ public class CreateTableStatement extends SchemaAlteringStatement 
 { 
 useCompactStorage = true ; 
 } 
 - 
 - public void checkAccess ( ClientState state ) 
 - { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 - 
 - public CqlResult execute ( ClientState state , List < ByteBuffer > variables ) 
 - { 
 - throw new UnsupportedOperationException ( ) ; 
 - } 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyNotDefinedException . java b / src / java / org / apache / cassandra / db / ColumnFamilyNotDefinedException . java 
 deleted file mode 100644 
 index 54a0e4e . . 0000000 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyNotDefinedException . java 
 + + + / dev / null 
 @ @ - 1 , 28 + 0 , 0 @ @ 
 - / * 
 - * Licensed to the Apache Software Foundation ( ASF ) under one 
 - * or more contributor license agreements . See the NOTICE file 
 - * distributed with this work for additional information 
 - * regarding copyright ownership . The ASF licenses this file 
 - * to you under the Apache License , Version 2 . 0 ( the 
 - * " License " ) ; you may not use this file except in compliance 
 - * with the License . You may obtain a copy of the License at 
 - * 
 - * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 - * 
 - * Unless required by applicable law or agreed to in writing , software 
 - * distributed under the License is distributed on an " AS IS " BASIS , 
 - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 - * See the License for the specific language governing permissions and 
 - * limitations under the License . 
 - * / 
 - package org . apache . cassandra . db ; 
 - 
 - import org . apache . cassandra . thrift . InvalidRequestException ; 
 - 
 - public class ColumnFamilyNotDefinedException extends InvalidRequestException 
 - { 
 - public ColumnFamilyNotDefinedException ( String message ) 
 - { 
 - super ( message ) ; 
 - } 
 - } 
 diff - - git a / test / unit / org / apache / cassandra / db / ReadMessageTest . java b / test / unit / org / apache / cassandra / db / ReadMessageTest . java 
 index 94928c0 . . cdd561f 100644 
 - - - a / test / unit / org / apache / cassandra / db / ReadMessageTest . java 
 + + + b / test / unit / org / apache / cassandra / db / ReadMessageTest . java 
 @ @ - 84 , 7 + 84 , 7 @ @ public class ReadMessageTest extends SchemaLoader 
 } 
 
 @ Test 
 - public void testGetColumn ( ) throws IOException , ColumnFamilyNotDefinedException 
 + public void testGetColumn ( ) 
 { 
 Keyspace keyspace = Keyspace . open ( " Keyspace1 " ) ; 
 ColumnFamilyStore cfs = keyspace . getColumnFamilyStore ( " Standard1 " ) ;

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / CollationController . java b / src / java / org / apache / cassandra / db / CollationController . java 
 index 1bb09ce . . f1f560e 100644 
 - - - a / src / java / org / apache / cassandra / db / CollationController . java 
 + + + b / src / java / org / apache / cassandra / db / CollationController . java 
 @ @ - 25 , 7 + 25 , 6 @ @ import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 import org . apache . cassandra . db . columniterator . OnDiskAtomIterator ; 
 - import org . apache . cassandra . db . columniterator . SimpleAbstractColumnIterator ; 
 import org . apache . cassandra . db . compaction . SizeTieredCompactionStrategy ; 
 import org . apache . cassandra . db . filter . NamesQueryFilter ; 
 import org . apache . cassandra . db . filter . QueryFilter ; 
 @ @ - 34 , 7 + 33 , 6 @ @ import org . apache . cassandra . io . sstable . SSTable ; 
 import org . apache . cassandra . io . sstable . SSTableReader ; 
 import org . apache . cassandra . io . util . FileUtils ; 
 import org . apache . cassandra . tracing . Tracing ; 
 - import org . apache . cassandra . utils . CloseableIterator ; 
 import org . apache . cassandra . utils . HeapAllocator ; 
 
 public class CollationController 
 diff - - git a / src / java / org / apache / cassandra / db / Memtable . java b / src / java / org / apache / cassandra / db / Memtable . java 
 index df5f6d7 . . 0874829 100644 
 - - - a / src / java / org / apache / cassandra / db / Memtable . java 
 + + + b / src / java / org / apache / cassandra / db / Memtable . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import java . util . concurrent . atomic . AtomicLong ; 
 
 import com . google . common . base . Function ; 
 import com . google . common . base . Throwables ; 
 + import com . google . common . collect . AbstractIterator ; 
 
 import org . apache . cassandra . concurrent . JMXEnabledThreadPoolExecutor ; 
 import org . apache . cassandra . concurrent . StageManager ; 
 @ @ - 379 , 32 + 380 , 7 @ @ public class Memtable 
 { 
 assert cf ! = null ; 
 
 - return new SimpleAbstractColumnIterator ( ) 
 - { 
 - private Iterator < ByteBuffer > iter = filter . columns . iterator ( ) ; 
 - 
 - public ColumnFamily getColumnFamily ( ) 
 - { 
 - return cf ; 
 - } 
 - 
 - public DecoratedKey getKey ( ) 
 - { 
 - return key ; 
 - } 
 - 
 - protected OnDiskAtom computeNext ( ) 
 - { 
 - while ( iter . hasNext ( ) ) 
 - { 
 - ByteBuffer current = iter . next ( ) ; 
 - Column column = cf . getColumn ( current ) ; 
 - if ( column ! = null ) 
 - return column ; 
 - } 
 - return endOfData ( ) ; 
 - } 
 - } ; 
 + return new ByNameColumnIterator ( filter . columns . iterator ( ) , cf , key ) ; 
 } 
 
 public ColumnFamily getColumnFamily ( DecoratedKey key ) 
 @ @ - 417 , 6 + 393 , 44 @ @ public class Memtable 
 return creationTime ; 
 } 
 
 + private static class ByNameColumnIterator extends AbstractIterator < OnDiskAtom > implements OnDiskAtomIterator 
 + { 
 + private final ColumnFamily cf ; 
 + private final DecoratedKey key ; 
 + private final Iterator < ByteBuffer > iter ; 
 + 
 + public ByNameColumnIterator ( Iterator < ByteBuffer > iter , ColumnFamily cf , DecoratedKey key ) 
 + { 
 + this . iter = iter ; 
 + this . cf = cf ; 
 + this . key = key ; 
 + } 
 + 
 + public ColumnFamily getColumnFamily ( ) 
 + { 
 + return cf ; 
 + } 
 + 
 + public DecoratedKey getKey ( ) 
 + { 
 + return key ; 
 + } 
 + 
 + protected OnDiskAtom computeNext ( ) 
 + { 
 + while ( iter . hasNext ( ) ) 
 + { 
 + ByteBuffer current = iter . next ( ) ; 
 + Column column = cf . getColumn ( current ) ; 
 + if ( column ! = null ) 
 + return column ; 
 + } 
 + return endOfData ( ) ; 
 + } 
 + 
 + public void close ( ) throws IOException { } 
 + } 
 + 
 class FlushRunnable extends DiskAwareRunnable 
 { 
 private final CountDownLatch latch ; 
 diff - - git a / src / java / org / apache / cassandra / db / columniterator / SSTableNamesIterator . java b / src / java / org / apache / cassandra / db / columniterator / SSTableNamesIterator . java 
 index 36f240d . . 20ca0cb 100644 
 - - - a / src / java / org / apache / cassandra / db / columniterator / SSTableNamesIterator . java 
 + + + b / src / java / org / apache / cassandra / db / columniterator / SSTableNamesIterator . java 
 @ @ - 24 , 6 + 24 , 8 @ @ import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . SortedSet ; 
 
 + import com . google . common . collect . AbstractIterator ; 
 + 
 import org . apache . cassandra . config . CFMetaData ; 
 import org . apache . cassandra . db . * ; 
 import org . apache . cassandra . db . marshal . AbstractType ; 
 @ @ - 35 , 7 + 37 , 7 @ @ import org . apache . cassandra . io . util . FileMark ; 
 import org . apache . cassandra . io . util . FileUtils ; 
 import org . apache . cassandra . utils . ByteBufferUtil ; 
 
 - public class SSTableNamesIterator extends SimpleAbstractColumnIterator implements OnDiskAtomIterator 
 + public class SSTableNamesIterator extends AbstractIterator < OnDiskAtom > implements OnDiskAtomIterator 
 { 
 private ColumnFamily cf ; 
 private final SSTableReader sstable ; 
 @ @ - 240 , 4 + 242 , 6 @ @ public class SSTableNamesIterator extends SimpleAbstractColumnIterator implement 
 return endOfData ( ) ; 
 return iter . next ( ) ; 
 } 
 + 
 + public void close ( ) throws IOException { } 
 }
