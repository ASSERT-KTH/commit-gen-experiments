BLEU SCORE: 0.13950796967929133

TEST MSG: fix duplicate classes between cassandra - all and cassandra - thrift
GENERATED MSG: Add ITransportFactory to cassandra - thrift jar

TEST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 3e25e25 . . 74878da 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 717 , 8 + 717 , 8 @ @ <nl> < jar jarfile = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } . jar " <nl> basedir = " $ { build . classes . thrift } " > <nl> < fileset dir = " $ { build . classes . main } " > <nl> - < include name = " org / apache / cassandra / thrift / ITransportFactory . class " / > <nl> - < include name = " org / apache / cassandra / thrift / TFramedTransportFactory . class " / > <nl> + < include name = " org / apache / cassandra / thrift / ITransportFactory * . class " / > <nl> + < include name = " org / apache / cassandra / thrift / TFramedTransportFactory * . class " / > <nl> < / fileset > <nl> < manifest > <nl> < attribute name = " Implementation - Title " value = " Cassandra " / > <nl> @ @ - 728 , 8 + 728 , 11 @ @ <nl> < / jar > <nl> <nl> < ! - - Main Jar - - > <nl> - < jar jarfile = " $ { build . dir } / $ { final . name } . jar " <nl> - basedir = " $ { build . classes . main } " > <nl> + < jar jarfile = " $ { build . dir } / $ { final . name } . jar " > <nl> + < fileset dir = " $ { build . classes . main } " > <nl> + < exclude name = " org / apache / cassandra / thrift / ITransportFactory * . class " / > <nl> + < exclude name = " org / apache / cassandra / thrift / TFramedTransportFactory * . class " / > <nl> + < / fileset > <nl> < manifest > <nl> < ! - - < section name = " org / apache / cassandra / infrastructure " > - - > <nl> < attribute name = " Implementation - Title " value = " Cassandra " / >
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 7098320 . . 0530134 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 3 , 6 + 3 , 7 @ @ <nl> access permissions and grant / revoke commands ( CASSANDRA - 4490 ) <nl> * fix assumption error in CLI when updating / describing keyspace ( CASSANDRA - 4322 ) <nl> * Adds offline sstablescrub to debian packaging ( CASSANDRA - 4642 ) <nl> + * Automatic fixing of overlapping leveled sstables ( CASSANDRA - 4644 ) <nl> <nl> <nl> 1 . 1 . 5 <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> index b54fe93 . . 493fd9f 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> @ @ - 204 , 19 + 204 , 38 @ @ public class LeveledManifest <nl> for ( SSTableReader ssTableReader : added ) <nl> add ( ssTableReader , newLevel ) ; <nl> <nl> + / / Fix overlapping sstables from CASSANDRA - 4321 / 4411 <nl> if ( newLevel ! = 0 ) <nl> + repairOverlappingSSTables ( newLevel ) ; <nl> + <nl> + serialize ( ) ; <nl> + } <nl> + <nl> + public synchronized void repairOverlappingSSTables ( int level ) <nl> + { <nl> + SSTableReader previous = null ; <nl> + Collections . sort ( generations [ level ] , SSTable . sstableComparator ) ; <nl> + List < SSTableReader > outOfOrderSSTables = new ArrayList < SSTableReader > ( ) ; <nl> + for ( SSTableReader current : generations [ level ] ) <nl> { <nl> - / / Integerity check <nl> - DecoratedKey last = null ; <nl> - Collections . sort ( generations [ newLevel ] , SSTable . sstableComparator ) ; <nl> - for ( SSTableReader sstable : generations [ newLevel ] ) <nl> + if ( previous ! = null & & current . first . compareTo ( previous . last ) < = 0 ) <nl> + { <nl> + logger . error ( String . format ( " At level % d , % s [ % s , % s ] overlaps % s [ % s , % s ] . This is caused by a bug in Cassandra 1 . 1 . 0 . . 1 . 1 . 3 . Sending back to L0 . If you have not yet run scrub , you should do so since you may also have rows out - of - order within an sstable " , <nl> + level , previous , previous . first , previous . last , current , current . first , current . last ) ) ; <nl> + outOfOrderSSTables . add ( current ) ; <nl> + } <nl> + else <nl> { <nl> - assert last = = null | | sstable . first . compareTo ( last ) > 0 ; <nl> - last = sstable . last ; <nl> + previous = current ; <nl> } <nl> } <nl> <nl> - serialize ( ) ; <nl> + if ( ! outOfOrderSSTables . isEmpty ( ) ) <nl> + { <nl> + for ( SSTableReader sstable : outOfOrderSSTables ) <nl> + sendBackToL0 ( sstable ) ; <nl> + serialize ( ) ; <nl> + } <nl> } <nl> <nl> public synchronized void replace ( Iterable < SSTableReader > removed , Iterable < SSTableReader > added ) <nl> @ @ - 235 , 12 + 254 , 10 @ @ public class LeveledManifest <nl> serialize ( ) ; <nl> } <nl> <nl> - public synchronized void sendBackToL0 ( SSTableReader sstable ) <nl> + private synchronized void sendBackToL0 ( SSTableReader sstable ) <nl> { <nl> remove ( sstable ) ; <nl> add ( sstable , 0 ) ; <nl> - <nl> - serialize ( ) ; <nl> } <nl> <nl> private String toString ( Iterable < SSTableReader > sstables ) <nl> @ @ - 593 , 4 + 610 , 6 @ @ public class LeveledManifest <nl> new Object [ ] { Arrays . asList ( estimated ) , cfs . table . name , cfs . columnFamily } ) ; <nl> return Ints . checkedCast ( tasks ) ; <nl> } <nl> + <nl> + <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / tools / StandaloneScrubber . java b / src / java / org / apache / cassandra / tools / StandaloneScrubber . java <nl> index 10f9cd8 . . 439ee0d 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / StandaloneScrubber . java <nl> + + + b / src / java / org / apache / cassandra / tools / StandaloneScrubber . java <nl> @ @ - 169 , 32 + 169 , 7 @ @ public class StandaloneScrubber <nl> { <nl> System . out . println ( String . format ( " Checking leveled manifest " ) ) ; <nl> for ( int i = 1 ; i < = manifest . getLevelCount ( ) ; + + i ) <nl> - { <nl> - List < SSTableReader > sstables = new ArrayList < SSTableReader > ( manifest . getLevel ( i ) ) ; <nl> - Collections . sort ( sstables , SSTable . sstableComparator ) ; <nl> - if ( sstables . isEmpty ( ) ) <nl> - continue ; <nl> - <nl> - Iterator < SSTableReader > iter = sstables . iterator ( ) ; <nl> - SSTableReader previous = iter . next ( ) ; <nl> - while ( iter . hasNext ( ) ) <nl> - { <nl> - SSTableReader current = iter . next ( ) ; <nl> - <nl> - if ( previous . last . compareTo ( current . first ) > = 0 ) <nl> - { <nl> - System . err . println ( String . format ( " At level % d , % s [ % s , % s ] overlaps % s [ % s , % s ] " , i , <nl> - previous , previous . first , previous . last , <nl> - current , current . first , current . last ) ) ; <nl> - System . out . println ( String . format ( " Sending % s back to L0 to fix intra - level overlapping " , current ) ) ; <nl> - manifest . sendBackToL0 ( current ) ; <nl> - } <nl> - else <nl> - { <nl> - previous = current ; <nl> - } <nl> - } <nl> - } <nl> + manifest . repairOverlappingSSTables ( i ) ; <nl> } <nl> <nl> private static class Options

TEST DIFF:
diff - - git a / build . xml b / build . xml 
 index 3e25e25 . . 74878da 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 717 , 8 + 717 , 8 @ @ 
 < jar jarfile = " $ { build . dir } / $ { ant . project . name } - thrift - $ { version } . jar " 
 basedir = " $ { build . classes . thrift } " > 
 < fileset dir = " $ { build . classes . main } " > 
 - < include name = " org / apache / cassandra / thrift / ITransportFactory . class " / > 
 - < include name = " org / apache / cassandra / thrift / TFramedTransportFactory . class " / > 
 + < include name = " org / apache / cassandra / thrift / ITransportFactory * . class " / > 
 + < include name = " org / apache / cassandra / thrift / TFramedTransportFactory * . class " / > 
 < / fileset > 
 < manifest > 
 < attribute name = " Implementation - Title " value = " Cassandra " / > 
 @ @ - 728 , 8 + 728 , 11 @ @ 
 < / jar > 
 
 < ! - - Main Jar - - > 
 - < jar jarfile = " $ { build . dir } / $ { final . name } . jar " 
 - basedir = " $ { build . classes . main } " > 
 + < jar jarfile = " $ { build . dir } / $ { final . name } . jar " > 
 + < fileset dir = " $ { build . classes . main } " > 
 + < exclude name = " org / apache / cassandra / thrift / ITransportFactory * . class " / > 
 + < exclude name = " org / apache / cassandra / thrift / TFramedTransportFactory * . class " / > 
 + < / fileset > 
 < manifest > 
 < ! - - < section name = " org / apache / cassandra / infrastructure " > - - > 
 < attribute name = " Implementation - Title " value = " Cassandra " / >

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 7098320 . . 0530134 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 3 , 6 + 3 , 7 @ @ 
 access permissions and grant / revoke commands ( CASSANDRA - 4490 ) 
 * fix assumption error in CLI when updating / describing keyspace ( CASSANDRA - 4322 ) 
 * Adds offline sstablescrub to debian packaging ( CASSANDRA - 4642 ) 
 + * Automatic fixing of overlapping leveled sstables ( CASSANDRA - 4644 ) 
 
 
 1 . 1 . 5 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 index b54fe93 . . 493fd9f 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 @ @ - 204 , 19 + 204 , 38 @ @ public class LeveledManifest 
 for ( SSTableReader ssTableReader : added ) 
 add ( ssTableReader , newLevel ) ; 
 
 + / / Fix overlapping sstables from CASSANDRA - 4321 / 4411 
 if ( newLevel ! = 0 ) 
 + repairOverlappingSSTables ( newLevel ) ; 
 + 
 + serialize ( ) ; 
 + } 
 + 
 + public synchronized void repairOverlappingSSTables ( int level ) 
 + { 
 + SSTableReader previous = null ; 
 + Collections . sort ( generations [ level ] , SSTable . sstableComparator ) ; 
 + List < SSTableReader > outOfOrderSSTables = new ArrayList < SSTableReader > ( ) ; 
 + for ( SSTableReader current : generations [ level ] ) 
 { 
 - / / Integerity check 
 - DecoratedKey last = null ; 
 - Collections . sort ( generations [ newLevel ] , SSTable . sstableComparator ) ; 
 - for ( SSTableReader sstable : generations [ newLevel ] ) 
 + if ( previous ! = null & & current . first . compareTo ( previous . last ) < = 0 ) 
 + { 
 + logger . error ( String . format ( " At level % d , % s [ % s , % s ] overlaps % s [ % s , % s ] . This is caused by a bug in Cassandra 1 . 1 . 0 . . 1 . 1 . 3 . Sending back to L0 . If you have not yet run scrub , you should do so since you may also have rows out - of - order within an sstable " , 
 + level , previous , previous . first , previous . last , current , current . first , current . last ) ) ; 
 + outOfOrderSSTables . add ( current ) ; 
 + } 
 + else 
 { 
 - assert last = = null | | sstable . first . compareTo ( last ) > 0 ; 
 - last = sstable . last ; 
 + previous = current ; 
 } 
 } 
 
 - serialize ( ) ; 
 + if ( ! outOfOrderSSTables . isEmpty ( ) ) 
 + { 
 + for ( SSTableReader sstable : outOfOrderSSTables ) 
 + sendBackToL0 ( sstable ) ; 
 + serialize ( ) ; 
 + } 
 } 
 
 public synchronized void replace ( Iterable < SSTableReader > removed , Iterable < SSTableReader > added ) 
 @ @ - 235 , 12 + 254 , 10 @ @ public class LeveledManifest 
 serialize ( ) ; 
 } 
 
 - public synchronized void sendBackToL0 ( SSTableReader sstable ) 
 + private synchronized void sendBackToL0 ( SSTableReader sstable ) 
 { 
 remove ( sstable ) ; 
 add ( sstable , 0 ) ; 
 - 
 - serialize ( ) ; 
 } 
 
 private String toString ( Iterable < SSTableReader > sstables ) 
 @ @ - 593 , 4 + 610 , 6 @ @ public class LeveledManifest 
 new Object [ ] { Arrays . asList ( estimated ) , cfs . table . name , cfs . columnFamily } ) ; 
 return Ints . checkedCast ( tasks ) ; 
 } 
 + 
 + 
 } 
 diff - - git a / src / java / org / apache / cassandra / tools / StandaloneScrubber . java b / src / java / org / apache / cassandra / tools / StandaloneScrubber . java 
 index 10f9cd8 . . 439ee0d 100644 
 - - - a / src / java / org / apache / cassandra / tools / StandaloneScrubber . java 
 + + + b / src / java / org / apache / cassandra / tools / StandaloneScrubber . java 
 @ @ - 169 , 32 + 169 , 7 @ @ public class StandaloneScrubber 
 { 
 System . out . println ( String . format ( " Checking leveled manifest " ) ) ; 
 for ( int i = 1 ; i < = manifest . getLevelCount ( ) ; + + i ) 
 - { 
 - List < SSTableReader > sstables = new ArrayList < SSTableReader > ( manifest . getLevel ( i ) ) ; 
 - Collections . sort ( sstables , SSTable . sstableComparator ) ; 
 - if ( sstables . isEmpty ( ) ) 
 - continue ; 
 - 
 - Iterator < SSTableReader > iter = sstables . iterator ( ) ; 
 - SSTableReader previous = iter . next ( ) ; 
 - while ( iter . hasNext ( ) ) 
 - { 
 - SSTableReader current = iter . next ( ) ; 
 - 
 - if ( previous . last . compareTo ( current . first ) > = 0 ) 
 - { 
 - System . err . println ( String . format ( " At level % d , % s [ % s , % s ] overlaps % s [ % s , % s ] " , i , 
 - previous , previous . first , previous . last , 
 - current , current . first , current . last ) ) ; 
 - System . out . println ( String . format ( " Sending % s back to L0 to fix intra - level overlapping " , current ) ) ; 
 - manifest . sendBackToL0 ( current ) ; 
 - } 
 - else 
 - { 
 - previous = current ; 
 - } 
 - } 
 - } 
 + manifest . repairOverlappingSSTables ( i ) ; 
 } 
 
 private static class Options
