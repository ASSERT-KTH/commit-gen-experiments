BLEU SCORE: 0.2626909894424158

TEST MSG: use platform agnostic new line chars ( % n )
GENERATED MSG: use platform agnostic new lines in printf statements

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocator . java b / src / java / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocator . java <nl> index 054a90e . . a60be94 100644 <nl> - - - a / src / java / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocator . java <nl> + + + b / src / java / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocator . java <nl> @ @ - 772 , 7 + 772 , 7 @ @ class ReplicationAwareTokenAllocator < Unit > implements TokenAllocator < Unit > <nl> BaseTokenInfo < ? , ? > token = tokens ; <nl> do <nl> { <nl> - System . out . format ( " % s % s : rs % s rt % s size % . 2e \ n " , lead , token , token . replicationStart , token . replicationThreshold , token . replicatedOwnership ) ; <nl> + System . out . format ( " % s % s : rs % s rt % s size % . 2e % n " , lead , token , token . replicationStart , token . replicationThreshold , token . replicatedOwnership ) ; <nl> token = token . next ; <nl> } while ( token ! = null & & token ! = tokens ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java b / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java <nl> index 3c8ba64 . . b455ad7 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java <nl> + + + b / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java <nl> @ @ - 112 , 8 + 112 , 8 @ @ public class SSTableMetadataViewer <nl> out . printf ( " Estimated droppable tombstones : % s % n " , stats . getEstimatedDroppableTombstoneRatio ( ( int ) ( System . currentTimeMillis ( ) / 1000 ) ) ) ; <nl> out . printf ( " SSTable Level : % d % n " , stats . sstableLevel ) ; <nl> out . printf ( " Repaired at : % d % n " , stats . repairedAt ) ; <nl> - out . printf ( " Minimum replay position : % s \ n " , stats . commitLogLowerBound ) ; <nl> - out . printf ( " Maximum replay position : % s \ n " , stats . commitLogUpperBound ) ; <nl> + out . printf ( " Minimum replay position : % s % n " , stats . commitLogLowerBound ) ; <nl> + out . printf ( " Maximum replay position : % s % n " , stats . commitLogUpperBound ) ; <nl> out . printf ( " totalColumnsSet : % s % n " , stats . totalColumnsSet ) ; <nl> out . printf ( " totalRows : % s % n " , stats . totalRows ) ; <nl> out . println ( " Estimated tombstone drop times : " ) ; <nl> diff - - git a / tools / stress / src / org / apache / cassandra / stress / Stress . java b / tools / stress / src / org / apache / cassandra / stress / Stress . java <nl> index 874f515 . . daa7303 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / Stress . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / Stress . java <nl> @ @ - 80 , 7 + 80 , 7 @ @ public final class Stress <nl> } <nl> catch ( IllegalArgumentException e ) <nl> { <nl> - System . out . printf ( " % s \ n " , e . getMessage ( ) ) ; <nl> + System . out . printf ( " % s % n " , e . getMessage ( ) ) ; <nl> printHelpMessage ( ) ; <nl> return 1 ; <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index fe448f2 . . 6a00d41 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 1 . 1 - dev <nl> + * ( Hadoop ) fix split generation regression ( CASSANDRA - 4259 ) <nl> * ignore min / max compactions settings in LCS , while preserving <nl> behavior that min = max = 0 disables autocompaction ( CASSANDRA - 4233 ) <nl> * log number of rows read from saved cache ( CASSANDRA - 4249 ) <nl> diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> index 2482188 . . 98058e8 100644 <nl> - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java <nl> @ @ - 505 , 10 + 505 , 10 @ @ public class SSTableReader extends SSTable <nl> if ( samples . isEmpty ( ) ) <nl> return positions ; <nl> <nl> - for ( Range < Token > range : Range . < Token > normalize ( ranges ) ) <nl> + for ( Range < Token > range : Range . normalize ( ranges ) ) <nl> { <nl> RowPosition leftPosition = range . left . maxKeyBound ( ) ; <nl> - RowPosition rightPosition = range . left . maxKeyBound ( ) ; <nl> + RowPosition rightPosition = range . right . maxKeyBound ( ) ; <nl> <nl> int left = Collections . binarySearch ( samples , leftPosition ) ; <nl> if ( left < 0 )

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocator . java b / src / java / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocator . java 
 index 054a90e . . a60be94 100644 
 - - - a / src / java / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocator . java 
 + + + b / src / java / org / apache / cassandra / dht / tokenallocator / ReplicationAwareTokenAllocator . java 
 @ @ - 772 , 7 + 772 , 7 @ @ class ReplicationAwareTokenAllocator < Unit > implements TokenAllocator < Unit > 
 BaseTokenInfo < ? , ? > token = tokens ; 
 do 
 { 
 - System . out . format ( " % s % s : rs % s rt % s size % . 2e \ n " , lead , token , token . replicationStart , token . replicationThreshold , token . replicatedOwnership ) ; 
 + System . out . format ( " % s % s : rs % s rt % s size % . 2e % n " , lead , token , token . replicationStart , token . replicationThreshold , token . replicatedOwnership ) ; 
 token = token . next ; 
 } while ( token ! = null & & token ! = tokens ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java b / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java 
 index 3c8ba64 . . b455ad7 100644 
 - - - a / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java 
 + + + b / src / java / org / apache / cassandra / tools / SSTableMetadataViewer . java 
 @ @ - 112 , 8 + 112 , 8 @ @ public class SSTableMetadataViewer 
 out . printf ( " Estimated droppable tombstones : % s % n " , stats . getEstimatedDroppableTombstoneRatio ( ( int ) ( System . currentTimeMillis ( ) / 1000 ) ) ) ; 
 out . printf ( " SSTable Level : % d % n " , stats . sstableLevel ) ; 
 out . printf ( " Repaired at : % d % n " , stats . repairedAt ) ; 
 - out . printf ( " Minimum replay position : % s \ n " , stats . commitLogLowerBound ) ; 
 - out . printf ( " Maximum replay position : % s \ n " , stats . commitLogUpperBound ) ; 
 + out . printf ( " Minimum replay position : % s % n " , stats . commitLogLowerBound ) ; 
 + out . printf ( " Maximum replay position : % s % n " , stats . commitLogUpperBound ) ; 
 out . printf ( " totalColumnsSet : % s % n " , stats . totalColumnsSet ) ; 
 out . printf ( " totalRows : % s % n " , stats . totalRows ) ; 
 out . println ( " Estimated tombstone drop times : " ) ; 
 diff - - git a / tools / stress / src / org / apache / cassandra / stress / Stress . java b / tools / stress / src / org / apache / cassandra / stress / Stress . java 
 index 874f515 . . daa7303 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / Stress . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / Stress . java 
 @ @ - 80 , 7 + 80 , 7 @ @ public final class Stress 
 } 
 catch ( IllegalArgumentException e ) 
 { 
 - System . out . printf ( " % s \ n " , e . getMessage ( ) ) ; 
 + System . out . printf ( " % s % n " , e . getMessage ( ) ) ; 
 printHelpMessage ( ) ; 
 return 1 ; 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index fe448f2 . . 6a00d41 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 1 . 1 - dev 
 + * ( Hadoop ) fix split generation regression ( CASSANDRA - 4259 ) 
 * ignore min / max compactions settings in LCS , while preserving 
 behavior that min = max = 0 disables autocompaction ( CASSANDRA - 4233 ) 
 * log number of rows read from saved cache ( CASSANDRA - 4249 ) 
 diff - - git a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 index 2482188 . . 98058e8 100644 
 - - - a / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 + + + b / src / java / org / apache / cassandra / io / sstable / SSTableReader . java 
 @ @ - 505 , 10 + 505 , 10 @ @ public class SSTableReader extends SSTable 
 if ( samples . isEmpty ( ) ) 
 return positions ; 
 
 - for ( Range < Token > range : Range . < Token > normalize ( ranges ) ) 
 + for ( Range < Token > range : Range . normalize ( ranges ) ) 
 { 
 RowPosition leftPosition = range . left . maxKeyBound ( ) ; 
 - RowPosition rightPosition = range . left . maxKeyBound ( ) ; 
 + RowPosition rightPosition = range . right . maxKeyBound ( ) ; 
 
 int left = Collections . binarySearch ( samples , leftPosition ) ; 
 if ( left < 0 )
