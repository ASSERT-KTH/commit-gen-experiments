BLEU SCORE: 0.11598118436136108

TEST MSG: Fix column dropping
GENERATED MSG: merge from 0 . 7

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index bdc30d7 . . f484748 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 7 + 1 , 7 @ @ <nl> 3 . 0 <nl> * Change CREATE / ALTER TABLE syntax for compression ( CASSANDRA - 8384 ) <nl> * Cleanup crc and adler code for java 8 ( CASSANDRA - 9650 ) <nl> - * Storage engine refactor ( CASSANDRA - 8099 , 9743 , 9746 , 9759 ) <nl> + * Storage engine refactor ( CASSANDRA - 8099 , 9743 , 9746 , 9759 , 9781 ) <nl> * Update Guava to 18 . 0 ( CASSANDRA - 9653 ) <nl> * Bloom filter false positive ratio is not honoured ( CASSANDRA - 8413 ) <nl> * New option for cassandra - stress to leave a ratio of columns null ( CASSANDRA - 9522 ) <nl> diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> index 8ae5e93 . . 1219952 100644 <nl> - - - a / src / java / org / apache / cassandra / config / CFMetaData . java <nl> + + + b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> @ @ - 191 , 7 + 191 , 7 @ @ public final class CFMetaData <nl> private volatile int memtableFlushPeriod = 0 ; <nl> private volatile int defaultTimeToLive = DEFAULT _ DEFAULT _ TIME _ TO _ LIVE ; <nl> private volatile SpeculativeRetry speculativeRetry = DEFAULT _ SPECULATIVE _ RETRY ; <nl> - private volatile Map < ColumnIdentifier , DroppedColumn > droppedColumns = new HashMap < > ( ) ; <nl> + private volatile Map < ByteBuffer , DroppedColumn > droppedColumns = new HashMap < > ( ) ; <nl> private volatile Triggers triggers = Triggers . none ( ) ; <nl> <nl> / * <nl> @ @ - 236 , 7 + 236 , 7 @ @ public final class CFMetaData <nl> public CFMetaData memtableFlushPeriod ( int prop ) { memtableFlushPeriod = prop ; return this ; } <nl> public CFMetaData defaultTimeToLive ( int prop ) { defaultTimeToLive = prop ; return this ; } <nl> public CFMetaData speculativeRetry ( SpeculativeRetry prop ) { speculativeRetry = prop ; return this ; } <nl> - public CFMetaData droppedColumns ( Map < ColumnIdentifier , DroppedColumn > cols ) { droppedColumns = cols ; return this ; } <nl> + public CFMetaData droppedColumns ( Map < ByteBuffer , DroppedColumn > cols ) { droppedColumns = cols ; return this ; } <nl> public CFMetaData triggers ( Triggers prop ) { triggers = prop ; return this ; } <nl> <nl> private CFMetaData ( String keyspace , <nl> @ @ - 687 , 7 + 687 , 7 @ @ public final class CFMetaData <nl> return defaultTimeToLive ; <nl> } <nl> <nl> - public Map < ColumnIdentifier , DroppedColumn > getDroppedColumns ( ) <nl> + public Map < ByteBuffer , DroppedColumn > getDroppedColumns ( ) <nl> { <nl> return droppedColumns ; <nl> } <nl> @ @ - 1190 , 7 + 1190 , 7 @ @ public final class CFMetaData <nl> <nl> public void recordColumnDrop ( ColumnDefinition def ) <nl> { <nl> - droppedColumns . put ( def . name , new DroppedColumn ( def . type , FBUtilities . timestampMicros ( ) ) ) ; <nl> + droppedColumns . put ( def . name . bytes , new DroppedColumn ( def . type , FBUtilities . timestampMicros ( ) ) ) ; <nl> } <nl> <nl> public void renameColumn ( ColumnIdentifier from , ColumnIdentifier to ) throws InvalidRequestException <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / statements / AlterTableStatement . java b / src / java / org / apache / cassandra / cql3 / statements / AlterTableStatement . java <nl> index b6937af . . 2cd3f68 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / AlterTableStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / AlterTableStatement . java <nl> @ @ - 116 , 7 + 116 , 7 @ @ public class AlterTableStatement extends SchemaAlteringStatement <nl> } <nl> <nl> / / Cannot re - add a dropped counter column . See # 7831 . <nl> - if ( meta . isCounter ( ) & & meta . getDroppedColumns ( ) . containsKey ( columnName ) ) <nl> + if ( meta . isCounter ( ) & & meta . getDroppedColumns ( ) . containsKey ( columnName . bytes ) ) <nl> throw new InvalidRequestException ( String . format ( " Cannot re - add previously dropped counter column % s " , columnName ) ) ; <nl> <nl> AbstractType < ? > type = validator . getType ( ) ; <nl> @ @ - 130 , 7 + 130 , 7 @ @ public class AlterTableStatement extends SchemaAlteringStatement <nl> / / If there used to be a collection column with the same name ( that has been dropped ) , we could still have <nl> / / some data using the old type , and so we can ' t allow adding a collection with the same name unless <nl> / / the types are compatible ( see # 6276 ) . <nl> - CFMetaData . DroppedColumn dropped = cfm . getDroppedColumns ( ) . get ( columnName ) ; <nl> + CFMetaData . DroppedColumn dropped = cfm . getDroppedColumns ( ) . get ( columnName . bytes ) ; <nl> / / We could have type = = null for old dropped columns , in which case we play it safe and refuse <nl> if ( dropped ! = null & & ( dropped . type = = null | | ( dropped . type instanceof CollectionType & & ! type . isCompatibleWith ( dropped . type ) ) ) ) <nl> throw new InvalidRequestException ( String . format ( " Cannot add a collection with the name % s " + <nl> diff - - git a / src / java / org / apache / cassandra / db / partitions / UnfilteredPartitionIterators . java b / src / java / org / apache / cassandra / db / partitions / UnfilteredPartitionIterators . java <nl> index f66ec11 . . 8b2ef03 100644 <nl> - - - a / src / java / org / apache / cassandra / db / partitions / UnfilteredPartitionIterators . java <nl> + + + b / src / java / org / apache / cassandra / db / partitions / UnfilteredPartitionIterators . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ package org . apache . cassandra . db . partitions ; <nl> import java . io . DataInput ; <nl> import java . io . IOError ; <nl> import java . io . IOException ; <nl> + import java . nio . ByteBuffer ; <nl> import java . security . MessageDigest ; <nl> import java . util . * ; <nl> <nl> @ @ - 329 , 7 + 330 , 7 @ @ public abstract class UnfilteredPartitionIterators <nl> } ; <nl> } <nl> <nl> - public static UnfilteredPartitionIterator removeDroppedColumns ( UnfilteredPartitionIterator iterator , final Map < ColumnIdentifier , CFMetaData . DroppedColumn > droppedColumns ) <nl> + public static UnfilteredPartitionIterator removeDroppedColumns ( UnfilteredPartitionIterator iterator , final Map < ByteBuffer , CFMetaData . DroppedColumn > droppedColumns ) <nl> { <nl> return new FilteringPartitionIterator ( iterator ) <nl> { <nl> @ @ - 352 , 7 + 353 , 7 @ @ public abstract class UnfilteredPartitionIterators <nl> <nl> private boolean include ( ColumnDefinition column , long timestamp ) <nl> { <nl> - CFMetaData . DroppedColumn dropped = droppedColumns . get ( column . name ) ; <nl> + CFMetaData . DroppedColumn dropped = droppedColumns . get ( column . name . bytes ) ; <nl> return dropped = = null | | timestamp > dropped . droppedTime ; <nl> } <nl> } ; <nl> @ @ - 367 , 7 + 368 , 7 @ @ public abstract class UnfilteredPartitionIterators <nl> <nl> / / If none of the dropped columns is part of the columns that the iterator actually returns , there is nothing to do ; <nl> for ( ColumnDefinition c : iterator . columns ( ) ) <nl> - if ( droppedColumns . containsKey ( c . name ) ) <nl> + if ( droppedColumns . containsKey ( c . name . bytes ) ) <nl> return true ; <nl> <nl> return false ; <nl> diff - - git a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java <nl> index 79243f4 . . 8e374d6 100644 <nl> - - - a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java <nl> + + + b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java <nl> @ @ - 403 , 7 + 403 , 7 @ @ public final class LegacySchemaMigrator <nl> String name = entry . getKey ( ) ; <nl> long time = entry . getValue ( ) ; <nl> AbstractType < ? > type = types . containsKey ( name ) ? TypeParser . parse ( types . get ( name ) ) : null ; <nl> - cfm . getDroppedColumns ( ) . put ( ColumnIdentifier . getInterned ( name , true ) , new CFMetaData . DroppedColumn ( type , time ) ) ; <nl> + cfm . getDroppedColumns ( ) . put ( UTF8Type . instance . decompose ( name ) , new CFMetaData . DroppedColumn ( type , time ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> index 979f973 . . d17b794 100644 <nl> - - - a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> + + + b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java <nl> @ @ - 841 , 9 + 841 , 9 @ @ public final class SchemaKeyspace <nl> . add ( " read _ repair _ chance " , table . getReadRepairChance ( ) ) <nl> . add ( " speculative _ retry " , table . getSpeculativeRetry ( ) . toString ( ) ) ; <nl> <nl> - for ( Map . Entry < ColumnIdentifier , CFMetaData . DroppedColumn > entry : table . getDroppedColumns ( ) . entrySet ( ) ) <nl> + for ( Map . Entry < ByteBuffer , CFMetaData . DroppedColumn > entry : table . getDroppedColumns ( ) . entrySet ( ) ) <nl> { <nl> - String name = entry . getKey ( ) . toString ( ) ; <nl> + String name = UTF8Type . instance . getString ( entry . getKey ( ) ) ; <nl> CFMetaData . DroppedColumn column = entry . getValue ( ) ; <nl> adder . addMapEntry ( " dropped _ columns " , name , column . droppedTime ) ; <nl> if ( column . type ! = null ) <nl> @ @ - 1073 , 7 + 1073 , 7 @ @ public final class SchemaKeyspace <nl> String name = entry . getKey ( ) ; <nl> long time = entry . getValue ( ) ; <nl> AbstractType < ? > type = types . containsKey ( name ) ? TypeParser . parse ( types . get ( name ) ) : null ; <nl> - cfm . getDroppedColumns ( ) . put ( ColumnIdentifier . getInterned ( name , true ) , new CFMetaData . DroppedColumn ( type , time ) ) ; <nl> + cfm . getDroppedColumns ( ) . put ( UTF8Type . instance . decompose ( name ) , new CFMetaData . DroppedColumn ( type , time ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / test / unit / org / apache / cassandra / schema / LegacySchemaMigratorTest . java b / test / unit / org / apache / cassandra / schema / LegacySchemaMigratorTest . java <nl> index 4a6bb01 . . c94681e 100644 <nl> - - - a / test / unit / org / apache / cassandra / schema / LegacySchemaMigratorTest . java <nl> + + + b / test / unit / org / apache / cassandra / schema / LegacySchemaMigratorTest . java <nl> @ @ - 403 , 9 + 403 , 9 @ @ public class LegacySchemaMigratorTest <nl> . add ( " read _ repair _ chance " , table . getReadRepairChance ( ) ) <nl> . add ( " speculative _ retry " , table . getSpeculativeRetry ( ) . toString ( ) ) ; <nl> <nl> - for ( Map . Entry < ColumnIdentifier , CFMetaData . DroppedColumn > entry : table . getDroppedColumns ( ) . entrySet ( ) ) <nl> + for ( Map . Entry < ByteBuffer , CFMetaData . DroppedColumn > entry : table . getDroppedColumns ( ) . entrySet ( ) ) <nl> { <nl> - String name = entry . getKey ( ) . toString ( ) ; <nl> + String name = UTF8Type . instance . getString ( entry . getKey ( ) ) ; <nl> CFMetaData . DroppedColumn column = entry . getValue ( ) ; <nl> adder . addMapEntry ( " dropped _ columns " , name , column . droppedTime ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index eec904a . . 982454c 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 59 , 6 + 59 , 8 @ @ <nl> the old ones ( CASSANDRA - 1644 ) <nl> * upgrade to Thrift 0 . 5 ( CASSANDRA - 1367 ) <nl> * renamed CL . DCQUORUM to LOCAL _ QUORUM and DCQUORUMSYNC to EACH _ QUORUM <nl> + * cli truncate support ( CASSANDRA - 1653 ) <nl> + * update GC settings in cassandra . bat ( CASSANDRA - 1636 ) <nl> <nl> <nl> 0 . 7 - beta2 <nl> diff - - git a / src / java / org / apache / cassandra / cli / Cli . g b / src / java / org / apache / cassandra / cli / Cli . g <nl> index e59c608 . . a9229ee 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / Cli . g <nl> + + + b / src / java / org / apache / cassandra / cli / Cli . g <nl> @ @ - 55 , 6 + 55 , 7 @ @ tokens { <nl> NODE _ UPDATE _ KEYSPACE ; <nl> NODE _ UPDATE _ COLUMN _ FAMILY ; <nl> NODE _ LIST ; <nl> + NODE _ TRUNCATE ; <nl> <nl> / / Internal Nodes . <nl> NODE _ COLUMN _ ACCESS ; <nl> @ @ - 123 , 6 + 124 , 7 @ @ statement <nl> | setStatement <nl> | showStatement <nl> | listStatement <nl> + | truncateStatement <nl> | - > ^ ( NODE _ NO _ OP ) <nl> ; <nl> <nl> @ @ - 174 , 6 + 176 , 8 @ @ helpStatement <nl> - > ^ ( NODE _ HELP NODE _ THRIFT _ COUNT ) <nl> | K _ HELP K _ LIST <nl> - > ^ ( NODE _ HELP NODE _ LIST ) <nl> + | K _ HELP K _ TRUNCATE <nl> + - > ^ ( NODE _ HELP NODE _ TRUNCATE ) <nl> | K _ HELP <nl> - > ^ ( NODE _ HELP ) <nl> | ' ? ' <nl> @ @ - 231 , 6 + 235 , 11 @ @ listStatement <nl> - > ^ ( NODE _ LIST columnFamily keyRangeExpr ? ^ ( NODE _ LIMIT $ limit ) ? ) <nl> ; <nl> <nl> + truncateStatement <nl> + : K _ TRUNCATE columnFamily <nl> + - > ^ ( NODE _ TRUNCATE columnFamily ) <nl> + ; <nl> + <nl> showClusterName <nl> : K _ SHOW K _ CLUSTER K _ NAME <nl> - > ^ ( NODE _ SHOW _ CLUSTER _ NAME ) <nl> @ @ - 430 , 6 + 439 , 7 @ @ K _ AND : ' AND ' ; <nl> K _ UPDATE : ' UPDATE ' ; <nl> K _ LIST : ' LIST ' ; <nl> K _ LIMIT : ' LIMIT ' ; <nl> + K _ TRUNCATE : ' TRUNCATE ' ; <nl> <nl> / / private syntactic rules <nl> fragment <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java <nl> index b6ace98 . . b63105a 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliClient . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliClient . java <nl> @ @ - 171 , 6 + 171 , 9 @ @ public class CliClient extends CliUserHelp <nl> case CliParser . NODE _ LIST : <nl> executeList ( tree ) ; <nl> break ; <nl> + case CliParser . NODE _ TRUNCATE : <nl> + executeTruncate ( tree . getChild ( 0 ) . getText ( ) ) ; <nl> + break ; <nl> case CliParser . NODE _ NO _ OP : <nl> / / comment lines come here ; they are treated as no ops . <nl> break ; <nl> @ @ - 943 , 6 + 946 , 30 @ @ public class CliClient extends CliUserHelp <nl> printSliceList ( columnFamilyDef , keySlices ) ; <nl> } <nl> <nl> + / / TRUNCATE < columnFamily > <nl> + private void executeTruncate ( String columnFamily ) <nl> + { <nl> + if ( ! CliMain . isConnected ( ) | | ! hasKeySpace ( ) ) <nl> + return ; <nl> + <nl> + / / getting CfDef , it will fail if there is no such column family in current keySpace . <nl> + CfDef cfDef = getCfDef ( columnFamily ) ; <nl> + <nl> + try <nl> + { <nl> + thriftClient . truncate ( cfDef . getName ( ) ) ; <nl> + sessionState . out . println ( columnFamily + " truncated . " ) ; <nl> + } <nl> + catch ( InvalidRequestException e ) <nl> + { <nl> + throw new RuntimeException ( e . getWhy ( ) ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + throw new RuntimeException ( e . getMessage ( ) ) ; <nl> + } <nl> + } <nl> + <nl> / / SHOW API VERSION <nl> private void executeShowVersion ( ) throws TException <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliCompleter . java b / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> index f541fe5 . . b033d8f 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> @ @ - 55 , 12 + 55 , 16 @ @ public class CliCompleter extends SimpleCompletor <nl> " help set " , <nl> " help del " , <nl> " help count " , <nl> + " help list " , <nl> + " help truncate " <nl> } ; <nl> private static String [ ] keyspaceCommands = { <nl> " get " , <nl> " set " , <nl> " count " , <nl> - " del " <nl> + " del " , <nl> + " list " , <nl> + " truncate " <nl> } ; <nl> <nl> public CliCompleter ( ) <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliUserHelp . java b / src / java / org / apache / cassandra / cli / CliUserHelp . java <nl> index 7c512e2 . . db6a779 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliUserHelp . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliUserHelp . java <nl> @ @ - 281 , 6 + 281 , 13 @ @ public class CliUserHelp { <nl> state . out . println ( " list Users [ j : ] limit 40 " ) ; <nl> break ; <nl> <nl> + case CliParser . NODE _ TRUNCATE : <nl> + state . out . println ( " truncate < column _ family > " ) ; <nl> + state . out . println ( " Truncate specified column family . \ n " ) ; <nl> + state . out . println ( " example : " ) ; <nl> + state . out . println ( " truncate Category " ) ; <nl> + break ; <nl> + <nl> default : <nl> state . out . println ( " ? " ) ; <nl> break ; <nl> @ @ - 324 , 7 + 331 , 8 @ @ public class CliUserHelp { <nl> state . out . println ( " del < cf > [ ' < key > ' ] [ ' < super > ' ] [ ' < col > ' ] Delete sub column . " ) ; <nl> state . out . println ( " count < cf > [ ' < key > ' ] Count columns in record . " ) ; <nl> state . out . println ( " count < cf > [ ' < key > ' ] [ ' < super > ' ] Count columns in a super column . " ) ; <nl> - state . out . println ( " list < cf > List all rows in the column family . " ) ; <nl> + state . out . println ( " truncate < column _ family > Truncate specified column family . " ) ; <nl> + state . out . println ( " list < cf > List all rows in the column family . " ) ; <nl> state . out . println ( " list < cf > [ < startKey > : ] " ) ; <nl> state . out . println ( " List rows in the column family beginning with < startKey > . " ) ; <nl> state . out . println ( " list < cf > [ < startKey > : < endKey > ] " ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / cli / CliTest . java b / test / unit / org / apache / cassandra / cli / CliTest . java <nl> index 24a3de0 . . eddcafd 100644 <nl> - - - a / test / unit / org / apache / cassandra / cli / CliTest . java <nl> + + + b / test / unit / org / apache / cassandra / cli / CliTest . java <nl> @ @ - 52 , 6 + 52 , 7 @ @ public class CliTest extends TestCase <nl> " list CF3 [ h : ] " , <nl> " list CF3 limit 10 " , <nl> " list CF3 [ h : g ] limit 10 " , <nl> + " truncate CF1 " , <nl> " update keyspace TestKeySpace with placement _ strategy = ' org . apache . cassandra . locator . LocalStrategy ' " , <nl> " update keyspace TestKeySpace with replication _ factor = 1 and strategy _ options = [ { DC1 : 3 , DC2 : 4 , DC5 : 1 } ] " <nl> } ; <nl> @ @ - 101 , 6 + 102 , 10 @ @ public class CliTest extends TestCase <nl> assertTrue ( result . startsWith ( " = > ( column = " ) ) ; <nl> } <nl> } <nl> + else if ( statement . startsWith ( " truncate " ) ) <nl> + { <nl> + assertTrue ( result . contains ( " truncated . " ) ) ; <nl> + } <nl> <nl> outStream . reset ( ) ; / / reset stream so we have only output from next statement all the time <nl> errStream . reset ( ) ; / / no errors to the end user .

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index bdc30d7 . . f484748 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 7 + 1 , 7 @ @ 
 3 . 0 
 * Change CREATE / ALTER TABLE syntax for compression ( CASSANDRA - 8384 ) 
 * Cleanup crc and adler code for java 8 ( CASSANDRA - 9650 ) 
 - * Storage engine refactor ( CASSANDRA - 8099 , 9743 , 9746 , 9759 ) 
 + * Storage engine refactor ( CASSANDRA - 8099 , 9743 , 9746 , 9759 , 9781 ) 
 * Update Guava to 18 . 0 ( CASSANDRA - 9653 ) 
 * Bloom filter false positive ratio is not honoured ( CASSANDRA - 8413 ) 
 * New option for cassandra - stress to leave a ratio of columns null ( CASSANDRA - 9522 ) 
 diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java 
 index 8ae5e93 . . 1219952 100644 
 - - - a / src / java / org / apache / cassandra / config / CFMetaData . java 
 + + + b / src / java / org / apache / cassandra / config / CFMetaData . java 
 @ @ - 191 , 7 + 191 , 7 @ @ public final class CFMetaData 
 private volatile int memtableFlushPeriod = 0 ; 
 private volatile int defaultTimeToLive = DEFAULT _ DEFAULT _ TIME _ TO _ LIVE ; 
 private volatile SpeculativeRetry speculativeRetry = DEFAULT _ SPECULATIVE _ RETRY ; 
 - private volatile Map < ColumnIdentifier , DroppedColumn > droppedColumns = new HashMap < > ( ) ; 
 + private volatile Map < ByteBuffer , DroppedColumn > droppedColumns = new HashMap < > ( ) ; 
 private volatile Triggers triggers = Triggers . none ( ) ; 
 
 / * 
 @ @ - 236 , 7 + 236 , 7 @ @ public final class CFMetaData 
 public CFMetaData memtableFlushPeriod ( int prop ) { memtableFlushPeriod = prop ; return this ; } 
 public CFMetaData defaultTimeToLive ( int prop ) { defaultTimeToLive = prop ; return this ; } 
 public CFMetaData speculativeRetry ( SpeculativeRetry prop ) { speculativeRetry = prop ; return this ; } 
 - public CFMetaData droppedColumns ( Map < ColumnIdentifier , DroppedColumn > cols ) { droppedColumns = cols ; return this ; } 
 + public CFMetaData droppedColumns ( Map < ByteBuffer , DroppedColumn > cols ) { droppedColumns = cols ; return this ; } 
 public CFMetaData triggers ( Triggers prop ) { triggers = prop ; return this ; } 
 
 private CFMetaData ( String keyspace , 
 @ @ - 687 , 7 + 687 , 7 @ @ public final class CFMetaData 
 return defaultTimeToLive ; 
 } 
 
 - public Map < ColumnIdentifier , DroppedColumn > getDroppedColumns ( ) 
 + public Map < ByteBuffer , DroppedColumn > getDroppedColumns ( ) 
 { 
 return droppedColumns ; 
 } 
 @ @ - 1190 , 7 + 1190 , 7 @ @ public final class CFMetaData 
 
 public void recordColumnDrop ( ColumnDefinition def ) 
 { 
 - droppedColumns . put ( def . name , new DroppedColumn ( def . type , FBUtilities . timestampMicros ( ) ) ) ; 
 + droppedColumns . put ( def . name . bytes , new DroppedColumn ( def . type , FBUtilities . timestampMicros ( ) ) ) ; 
 } 
 
 public void renameColumn ( ColumnIdentifier from , ColumnIdentifier to ) throws InvalidRequestException 
 diff - - git a / src / java / org / apache / cassandra / cql3 / statements / AlterTableStatement . java b / src / java / org / apache / cassandra / cql3 / statements / AlterTableStatement . java 
 index b6937af . . 2cd3f68 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / AlterTableStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / AlterTableStatement . java 
 @ @ - 116 , 7 + 116 , 7 @ @ public class AlterTableStatement extends SchemaAlteringStatement 
 } 
 
 / / Cannot re - add a dropped counter column . See # 7831 . 
 - if ( meta . isCounter ( ) & & meta . getDroppedColumns ( ) . containsKey ( columnName ) ) 
 + if ( meta . isCounter ( ) & & meta . getDroppedColumns ( ) . containsKey ( columnName . bytes ) ) 
 throw new InvalidRequestException ( String . format ( " Cannot re - add previously dropped counter column % s " , columnName ) ) ; 
 
 AbstractType < ? > type = validator . getType ( ) ; 
 @ @ - 130 , 7 + 130 , 7 @ @ public class AlterTableStatement extends SchemaAlteringStatement 
 / / If there used to be a collection column with the same name ( that has been dropped ) , we could still have 
 / / some data using the old type , and so we can ' t allow adding a collection with the same name unless 
 / / the types are compatible ( see # 6276 ) . 
 - CFMetaData . DroppedColumn dropped = cfm . getDroppedColumns ( ) . get ( columnName ) ; 
 + CFMetaData . DroppedColumn dropped = cfm . getDroppedColumns ( ) . get ( columnName . bytes ) ; 
 / / We could have type = = null for old dropped columns , in which case we play it safe and refuse 
 if ( dropped ! = null & & ( dropped . type = = null | | ( dropped . type instanceof CollectionType & & ! type . isCompatibleWith ( dropped . type ) ) ) ) 
 throw new InvalidRequestException ( String . format ( " Cannot add a collection with the name % s " + 
 diff - - git a / src / java / org / apache / cassandra / db / partitions / UnfilteredPartitionIterators . java b / src / java / org / apache / cassandra / db / partitions / UnfilteredPartitionIterators . java 
 index f66ec11 . . 8b2ef03 100644 
 - - - a / src / java / org / apache / cassandra / db / partitions / UnfilteredPartitionIterators . java 
 + + + b / src / java / org / apache / cassandra / db / partitions / UnfilteredPartitionIterators . java 
 @ @ - 20 , 6 + 20 , 7 @ @ package org . apache . cassandra . db . partitions ; 
 import java . io . DataInput ; 
 import java . io . IOError ; 
 import java . io . IOException ; 
 + import java . nio . ByteBuffer ; 
 import java . security . MessageDigest ; 
 import java . util . * ; 
 
 @ @ - 329 , 7 + 330 , 7 @ @ public abstract class UnfilteredPartitionIterators 
 } ; 
 } 
 
 - public static UnfilteredPartitionIterator removeDroppedColumns ( UnfilteredPartitionIterator iterator , final Map < ColumnIdentifier , CFMetaData . DroppedColumn > droppedColumns ) 
 + public static UnfilteredPartitionIterator removeDroppedColumns ( UnfilteredPartitionIterator iterator , final Map < ByteBuffer , CFMetaData . DroppedColumn > droppedColumns ) 
 { 
 return new FilteringPartitionIterator ( iterator ) 
 { 
 @ @ - 352 , 7 + 353 , 7 @ @ public abstract class UnfilteredPartitionIterators 
 
 private boolean include ( ColumnDefinition column , long timestamp ) 
 { 
 - CFMetaData . DroppedColumn dropped = droppedColumns . get ( column . name ) ; 
 + CFMetaData . DroppedColumn dropped = droppedColumns . get ( column . name . bytes ) ; 
 return dropped = = null | | timestamp > dropped . droppedTime ; 
 } 
 } ; 
 @ @ - 367 , 7 + 368 , 7 @ @ public abstract class UnfilteredPartitionIterators 
 
 / / If none of the dropped columns is part of the columns that the iterator actually returns , there is nothing to do ; 
 for ( ColumnDefinition c : iterator . columns ( ) ) 
 - if ( droppedColumns . containsKey ( c . name ) ) 
 + if ( droppedColumns . containsKey ( c . name . bytes ) ) 
 return true ; 
 
 return false ; 
 diff - - git a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java 
 index 79243f4 . . 8e374d6 100644 
 - - - a / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java 
 + + + b / src / java / org / apache / cassandra / schema / LegacySchemaMigrator . java 
 @ @ - 403 , 7 + 403 , 7 @ @ public final class LegacySchemaMigrator 
 String name = entry . getKey ( ) ; 
 long time = entry . getValue ( ) ; 
 AbstractType < ? > type = types . containsKey ( name ) ? TypeParser . parse ( types . get ( name ) ) : null ; 
 - cfm . getDroppedColumns ( ) . put ( ColumnIdentifier . getInterned ( name , true ) , new CFMetaData . DroppedColumn ( type , time ) ) ; 
 + cfm . getDroppedColumns ( ) . put ( UTF8Type . instance . decompose ( name ) , new CFMetaData . DroppedColumn ( type , time ) ) ; 
 } 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 index 979f973 . . d17b794 100644 
 - - - a / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 + + + b / src / java / org / apache / cassandra / schema / SchemaKeyspace . java 
 @ @ - 841 , 9 + 841 , 9 @ @ public final class SchemaKeyspace 
 . add ( " read _ repair _ chance " , table . getReadRepairChance ( ) ) 
 . add ( " speculative _ retry " , table . getSpeculativeRetry ( ) . toString ( ) ) ; 
 
 - for ( Map . Entry < ColumnIdentifier , CFMetaData . DroppedColumn > entry : table . getDroppedColumns ( ) . entrySet ( ) ) 
 + for ( Map . Entry < ByteBuffer , CFMetaData . DroppedColumn > entry : table . getDroppedColumns ( ) . entrySet ( ) ) 
 { 
 - String name = entry . getKey ( ) . toString ( ) ; 
 + String name = UTF8Type . instance . getString ( entry . getKey ( ) ) ; 
 CFMetaData . DroppedColumn column = entry . getValue ( ) ; 
 adder . addMapEntry ( " dropped _ columns " , name , column . droppedTime ) ; 
 if ( column . type ! = null ) 
 @ @ - 1073 , 7 + 1073 , 7 @ @ public final class SchemaKeyspace 
 String name = entry . getKey ( ) ; 
 long time = entry . getValue ( ) ; 
 AbstractType < ? > type = types . containsKey ( name ) ? TypeParser . parse ( types . get ( name ) ) : null ; 
 - cfm . getDroppedColumns ( ) . put ( ColumnIdentifier . getInterned ( name , true ) , new CFMetaData . DroppedColumn ( type , time ) ) ; 
 + cfm . getDroppedColumns ( ) . put ( UTF8Type . instance . decompose ( name ) , new CFMetaData . DroppedColumn ( type , time ) ) ; 
 } 
 } 
 
 diff - - git a / test / unit / org / apache / cassandra / schema / LegacySchemaMigratorTest . java b / test / unit / org / apache / cassandra / schema / LegacySchemaMigratorTest . java 
 index 4a6bb01 . . c94681e 100644 
 - - - a / test / unit / org / apache / cassandra / schema / LegacySchemaMigratorTest . java 
 + + + b / test / unit / org / apache / cassandra / schema / LegacySchemaMigratorTest . java 
 @ @ - 403 , 9 + 403 , 9 @ @ public class LegacySchemaMigratorTest 
 . add ( " read _ repair _ chance " , table . getReadRepairChance ( ) ) 
 . add ( " speculative _ retry " , table . getSpeculativeRetry ( ) . toString ( ) ) ; 
 
 - for ( Map . Entry < ColumnIdentifier , CFMetaData . DroppedColumn > entry : table . getDroppedColumns ( ) . entrySet ( ) ) 
 + for ( Map . Entry < ByteBuffer , CFMetaData . DroppedColumn > entry : table . getDroppedColumns ( ) . entrySet ( ) ) 
 { 
 - String name = entry . getKey ( ) . toString ( ) ; 
 + String name = UTF8Type . instance . getString ( entry . getKey ( ) ) ; 
 CFMetaData . DroppedColumn column = entry . getValue ( ) ; 
 adder . addMapEntry ( " dropped _ columns " , name , column . droppedTime ) ; 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index eec904a . . 982454c 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 59 , 6 + 59 , 8 @ @ 
 the old ones ( CASSANDRA - 1644 ) 
 * upgrade to Thrift 0 . 5 ( CASSANDRA - 1367 ) 
 * renamed CL . DCQUORUM to LOCAL _ QUORUM and DCQUORUMSYNC to EACH _ QUORUM 
 + * cli truncate support ( CASSANDRA - 1653 ) 
 + * update GC settings in cassandra . bat ( CASSANDRA - 1636 ) 
 
 
 0 . 7 - beta2 
 diff - - git a / src / java / org / apache / cassandra / cli / Cli . g b / src / java / org / apache / cassandra / cli / Cli . g 
 index e59c608 . . a9229ee 100644 
 - - - a / src / java / org / apache / cassandra / cli / Cli . g 
 + + + b / src / java / org / apache / cassandra / cli / Cli . g 
 @ @ - 55 , 6 + 55 , 7 @ @ tokens { 
 NODE _ UPDATE _ KEYSPACE ; 
 NODE _ UPDATE _ COLUMN _ FAMILY ; 
 NODE _ LIST ; 
 + NODE _ TRUNCATE ; 
 
 / / Internal Nodes . 
 NODE _ COLUMN _ ACCESS ; 
 @ @ - 123 , 6 + 124 , 7 @ @ statement 
 | setStatement 
 | showStatement 
 | listStatement 
 + | truncateStatement 
 | - > ^ ( NODE _ NO _ OP ) 
 ; 
 
 @ @ - 174 , 6 + 176 , 8 @ @ helpStatement 
 - > ^ ( NODE _ HELP NODE _ THRIFT _ COUNT ) 
 | K _ HELP K _ LIST 
 - > ^ ( NODE _ HELP NODE _ LIST ) 
 + | K _ HELP K _ TRUNCATE 
 + - > ^ ( NODE _ HELP NODE _ TRUNCATE ) 
 | K _ HELP 
 - > ^ ( NODE _ HELP ) 
 | ' ? ' 
 @ @ - 231 , 6 + 235 , 11 @ @ listStatement 
 - > ^ ( NODE _ LIST columnFamily keyRangeExpr ? ^ ( NODE _ LIMIT $ limit ) ? ) 
 ; 
 
 + truncateStatement 
 + : K _ TRUNCATE columnFamily 
 + - > ^ ( NODE _ TRUNCATE columnFamily ) 
 + ; 
 + 
 showClusterName 
 : K _ SHOW K _ CLUSTER K _ NAME 
 - > ^ ( NODE _ SHOW _ CLUSTER _ NAME ) 
 @ @ - 430 , 6 + 439 , 7 @ @ K _ AND : ' AND ' ; 
 K _ UPDATE : ' UPDATE ' ; 
 K _ LIST : ' LIST ' ; 
 K _ LIMIT : ' LIMIT ' ; 
 + K _ TRUNCATE : ' TRUNCATE ' ; 
 
 / / private syntactic rules 
 fragment 
 diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java 
 index b6ace98 . . b63105a 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliClient . java 
 + + + b / src / java / org / apache / cassandra / cli / CliClient . java 
 @ @ - 171 , 6 + 171 , 9 @ @ public class CliClient extends CliUserHelp 
 case CliParser . NODE _ LIST : 
 executeList ( tree ) ; 
 break ; 
 + case CliParser . NODE _ TRUNCATE : 
 + executeTruncate ( tree . getChild ( 0 ) . getText ( ) ) ; 
 + break ; 
 case CliParser . NODE _ NO _ OP : 
 / / comment lines come here ; they are treated as no ops . 
 break ; 
 @ @ - 943 , 6 + 946 , 30 @ @ public class CliClient extends CliUserHelp 
 printSliceList ( columnFamilyDef , keySlices ) ; 
 } 
 
 + / / TRUNCATE < columnFamily > 
 + private void executeTruncate ( String columnFamily ) 
 + { 
 + if ( ! CliMain . isConnected ( ) | | ! hasKeySpace ( ) ) 
 + return ; 
 + 
 + / / getting CfDef , it will fail if there is no such column family in current keySpace . 
 + CfDef cfDef = getCfDef ( columnFamily ) ; 
 + 
 + try 
 + { 
 + thriftClient . truncate ( cfDef . getName ( ) ) ; 
 + sessionState . out . println ( columnFamily + " truncated . " ) ; 
 + } 
 + catch ( InvalidRequestException e ) 
 + { 
 + throw new RuntimeException ( e . getWhy ( ) ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + throw new RuntimeException ( e . getMessage ( ) ) ; 
 + } 
 + } 
 + 
 / / SHOW API VERSION 
 private void executeShowVersion ( ) throws TException 
 { 
 diff - - git a / src / java / org / apache / cassandra / cli / CliCompleter . java b / src / java / org / apache / cassandra / cli / CliCompleter . java 
 index f541fe5 . . b033d8f 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliCompleter . java 
 + + + b / src / java / org / apache / cassandra / cli / CliCompleter . java 
 @ @ - 55 , 12 + 55 , 16 @ @ public class CliCompleter extends SimpleCompletor 
 " help set " , 
 " help del " , 
 " help count " , 
 + " help list " , 
 + " help truncate " 
 } ; 
 private static String [ ] keyspaceCommands = { 
 " get " , 
 " set " , 
 " count " , 
 - " del " 
 + " del " , 
 + " list " , 
 + " truncate " 
 } ; 
 
 public CliCompleter ( ) 
 diff - - git a / src / java / org / apache / cassandra / cli / CliUserHelp . java b / src / java / org / apache / cassandra / cli / CliUserHelp . java 
 index 7c512e2 . . db6a779 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliUserHelp . java 
 + + + b / src / java / org / apache / cassandra / cli / CliUserHelp . java 
 @ @ - 281 , 6 + 281 , 13 @ @ public class CliUserHelp { 
 state . out . println ( " list Users [ j : ] limit 40 " ) ; 
 break ; 
 
 + case CliParser . NODE _ TRUNCATE : 
 + state . out . println ( " truncate < column _ family > " ) ; 
 + state . out . println ( " Truncate specified column family . \ n " ) ; 
 + state . out . println ( " example : " ) ; 
 + state . out . println ( " truncate Category " ) ; 
 + break ; 
 + 
 default : 
 state . out . println ( " ? " ) ; 
 break ; 
 @ @ - 324 , 7 + 331 , 8 @ @ public class CliUserHelp { 
 state . out . println ( " del < cf > [ ' < key > ' ] [ ' < super > ' ] [ ' < col > ' ] Delete sub column . " ) ; 
 state . out . println ( " count < cf > [ ' < key > ' ] Count columns in record . " ) ; 
 state . out . println ( " count < cf > [ ' < key > ' ] [ ' < super > ' ] Count columns in a super column . " ) ; 
 - state . out . println ( " list < cf > List all rows in the column family . " ) ; 
 + state . out . println ( " truncate < column _ family > Truncate specified column family . " ) ; 
 + state . out . println ( " list < cf > List all rows in the column family . " ) ; 
 state . out . println ( " list < cf > [ < startKey > : ] " ) ; 
 state . out . println ( " List rows in the column family beginning with < startKey > . " ) ; 
 state . out . println ( " list < cf > [ < startKey > : < endKey > ] " ) ; 
 diff - - git a / test / unit / org / apache / cassandra / cli / CliTest . java b / test / unit / org / apache / cassandra / cli / CliTest . java 
 index 24a3de0 . . eddcafd 100644 
 - - - a / test / unit / org / apache / cassandra / cli / CliTest . java 
 + + + b / test / unit / org / apache / cassandra / cli / CliTest . java 
 @ @ - 52 , 6 + 52 , 7 @ @ public class CliTest extends TestCase 
 " list CF3 [ h : ] " , 
 " list CF3 limit 10 " , 
 " list CF3 [ h : g ] limit 10 " , 
 + " truncate CF1 " , 
 " update keyspace TestKeySpace with placement _ strategy = ' org . apache . cassandra . locator . LocalStrategy ' " , 
 " update keyspace TestKeySpace with replication _ factor = 1 and strategy _ options = [ { DC1 : 3 , DC2 : 4 , DC5 : 1 } ] " 
 } ; 
 @ @ - 101 , 6 + 102 , 10 @ @ public class CliTest extends TestCase 
 assertTrue ( result . startsWith ( " = > ( column = " ) ) ; 
 } 
 } 
 + else if ( statement . startsWith ( " truncate " ) ) 
 + { 
 + assertTrue ( result . contains ( " truncated . " ) ) ; 
 + } 
 
 outStream . reset ( ) ; / / reset stream so we have only output from next statement all the time 
 errStream . reset ( ) ; / / no errors to the end user .
