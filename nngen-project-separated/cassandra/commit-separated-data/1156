BLEU SCORE: 0.02383853510228548

TEST MSG: Add deprecation messages to StorageServiceMBean . forceRepair * methods
GENERATED MSG: improve lazy lookup of keyspace / column family metadata

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> index 00060ae . . b7784d6 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java <nl> @ @ - 299 , 8 + 299 , 11 @ @ public interface StorageServiceMBean extends NotificationEmitter <nl> * / <nl> public int repairAsync ( String keyspace , Map < String , String > options ) ; <nl> <nl> + / * * <nl> + * @ deprecated use { @ link # repairAsync ( String keyspace , Map options ) } instead . <nl> + * / <nl> @ Deprecated <nl> - public int forceRepairAsync ( String keyspace , boolean isSequential , Collection < String > dataCenters , Collection < String > hosts , boolean primaryRange , boolean repairedAt , String . . . columnFamilies ) throws IOException ; <nl> + public int forceRepairAsync ( String keyspace , boolean isSequential , Collection < String > dataCenters , Collection < String > hosts , boolean primaryRange , boolean fullRepair , String . . . columnFamilies ) throws IOException ; <nl> <nl> / * * <nl> * Invoke repair asynchronously . <nl> @ @ - 309 , 28 + 312 , 41 @ @ public interface StorageServiceMBean extends NotificationEmitter <nl> * type : " repair " <nl> * userObject : int array of length 2 , [ 0 ] = command number , [ 1 ] = ordinal of ActiveRepairService . Status <nl> * <nl> + * @ deprecated use { @ link # repairAsync ( String keyspace , Map options ) } instead . <nl> + * <nl> * @ param parallelismDegree 0 : sequential , 1 : parallel , 2 : DC parallel <nl> * @ return Repair command number , or 0 if nothing to repair <nl> * / <nl> @ Deprecated <nl> public int forceRepairAsync ( String keyspace , int parallelismDegree , Collection < String > dataCenters , Collection < String > hosts , boolean primaryRange , boolean fullRepair , String . . . columnFamilies ) ; <nl> <nl> + / * * <nl> + * @ deprecated use { @ link # repairAsync ( String keyspace , Map options ) } instead . <nl> + * / <nl> @ Deprecated <nl> - public int forceRepairRangeAsync ( String beginToken , String endToken , String keyspaceName , boolean isSequential , Collection < String > dataCenters , Collection < String > hosts , boolean repairedAt , String . . . columnFamilies ) throws IOException ; <nl> + public int forceRepairRangeAsync ( String beginToken , String endToken , String keyspaceName , boolean isSequential , Collection < String > dataCenters , Collection < String > hosts , boolean fullRepair , String . . . columnFamilies ) throws IOException ; <nl> <nl> / * * <nl> * Same as forceRepairAsync , but handles a specified range <nl> * <nl> + * @ deprecated use { @ link # repairAsync ( String keyspace , Map options ) } instead . <nl> + * <nl> * @ param parallelismDegree 0 : sequential , 1 : parallel , 2 : DC parallel <nl> * / <nl> @ Deprecated <nl> public int forceRepairRangeAsync ( String beginToken , String endToken , String keyspaceName , int parallelismDegree , Collection < String > dataCenters , Collection < String > hosts , boolean fullRepair , String . . . columnFamilies ) ; <nl> <nl> + / * * <nl> + * @ deprecated use { @ link # repairAsync ( String keyspace , Map options ) } instead . <nl> + * / <nl> @ Deprecated <nl> public int forceRepairAsync ( String keyspace , boolean isSequential , boolean isLocal , boolean primaryRange , boolean fullRepair , String . . . columnFamilies ) ; <nl> <nl> + / * * <nl> + * @ deprecated use { @ link # repairAsync ( String keyspace , Map options ) } instead . <nl> + * / <nl> @ Deprecated <nl> - public int forceRepairRangeAsync ( String beginToken , String endToken , String keyspaceName , boolean isSequential , boolean isLocal , boolean repairedAt , String . . . columnFamilies ) ; <nl> + public int forceRepairRangeAsync ( String beginToken , String endToken , String keyspaceName , boolean isSequential , boolean isLocal , boolean fullRepair , String . . . columnFamilies ) ; <nl> <nl> public void forceTerminateAllRepairSessions ( ) ; <nl>
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java <nl> index 967da55 . . 9adb9df 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliClient . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliClient . java <nl> @ @ - 32 , 7 + 32 , 7 @ @ public class CliClient <nl> { <nl> private Cassandra . Client thriftClient _ = null ; <nl> private CliSessionState css _ = null ; <nl> - Map < String , Map < String , String > > columnFamiliesMap ; <nl> + private Map < String , Map < String , Map < String , String > > > keyspacesMap = new HashMap < String , Map < String , Map < String , String > > > ( ) ; <nl> <nl> public CliClient ( CliSessionState css , Cassandra . Client thriftClient ) <nl> { <nl> @ @ - 126 , 6 + 126 , 15 @ @ public class CliClient <nl> CliMain . disconnect ( ) ; <nl> System . exit ( 0 ) ; <nl> } <nl> + <nl> + Map < String , Map < String , String > > getCFMetaData ( String keyspace ) throws NotFoundException , TException <nl> + { <nl> + / / Lazily lookup column family meta - data . <nl> + if ( ! ( keyspacesMap . containsKey ( keyspace ) ) ) <nl> + keyspacesMap . put ( keyspace , thriftClient _ . describe _ keyspace ( keyspace ) ) ; <nl> + return keyspacesMap . get ( keyspace ) ; <nl> + } <nl> + <nl> private void executeCount ( CommonTree ast ) throws TException , InvalidRequestException , UnavailableException , TimedOutException <nl> { <nl> if ( ! CliMain . isConnected ( ) ) <nl> @ @ - 238 , 13 + 247 , 15 @ @ public class CliClient <nl> String tableName = CliCompiler . getTableName ( columnFamilySpec ) ; <nl> String key = CliCompiler . getKey ( columnFamilySpec ) ; <nl> String columnFamily = CliCompiler . getColumnFamily ( columnFamilySpec ) ; <nl> - int columnSpecCnt = CliCompiler . numColumnSpecifiers ( columnFamilySpec ) ; <nl> + int columnSpecCnt = CliCompiler . numColumnSpecifiers ( columnFamilySpec ) ; <nl> <nl> - / / Lazily lookup column family meta - data . <nl> - if ( columnFamiliesMap = = null ) <nl> - columnFamiliesMap = thriftClient _ . describe _ keyspace ( tableName ) ; <nl> + if ( ! ( getCFMetaData ( tableName ) . containsKey ( columnFamily ) ) ) <nl> + { <nl> + css _ . out . println ( " No such column family : " + columnFamily ) ; <nl> + return ; <nl> + } <nl> <nl> - boolean isSuper = columnFamiliesMap . get ( columnFamily ) . get ( " Type " ) . equals ( " Super " ) ? true : false ; <nl> + boolean isSuper = getCFMetaData ( tableName ) . get ( columnFamily ) . get ( " Type " ) . equals ( " Super " ) ? true : false ; <nl> <nl> byte [ ] superColumnName = null ; <nl> byte [ ] columnName = null ;

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / StorageServiceMBean . java b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 index 00060ae . . b7784d6 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 + + + b / src / java / org / apache / cassandra / service / StorageServiceMBean . java 
 @ @ - 299 , 8 + 299 , 11 @ @ public interface StorageServiceMBean extends NotificationEmitter 
 * / 
 public int repairAsync ( String keyspace , Map < String , String > options ) ; 
 
 + / * * 
 + * @ deprecated use { @ link # repairAsync ( String keyspace , Map options ) } instead . 
 + * / 
 @ Deprecated 
 - public int forceRepairAsync ( String keyspace , boolean isSequential , Collection < String > dataCenters , Collection < String > hosts , boolean primaryRange , boolean repairedAt , String . . . columnFamilies ) throws IOException ; 
 + public int forceRepairAsync ( String keyspace , boolean isSequential , Collection < String > dataCenters , Collection < String > hosts , boolean primaryRange , boolean fullRepair , String . . . columnFamilies ) throws IOException ; 
 
 / * * 
 * Invoke repair asynchronously . 
 @ @ - 309 , 28 + 312 , 41 @ @ public interface StorageServiceMBean extends NotificationEmitter 
 * type : " repair " 
 * userObject : int array of length 2 , [ 0 ] = command number , [ 1 ] = ordinal of ActiveRepairService . Status 
 * 
 + * @ deprecated use { @ link # repairAsync ( String keyspace , Map options ) } instead . 
 + * 
 * @ param parallelismDegree 0 : sequential , 1 : parallel , 2 : DC parallel 
 * @ return Repair command number , or 0 if nothing to repair 
 * / 
 @ Deprecated 
 public int forceRepairAsync ( String keyspace , int parallelismDegree , Collection < String > dataCenters , Collection < String > hosts , boolean primaryRange , boolean fullRepair , String . . . columnFamilies ) ; 
 
 + / * * 
 + * @ deprecated use { @ link # repairAsync ( String keyspace , Map options ) } instead . 
 + * / 
 @ Deprecated 
 - public int forceRepairRangeAsync ( String beginToken , String endToken , String keyspaceName , boolean isSequential , Collection < String > dataCenters , Collection < String > hosts , boolean repairedAt , String . . . columnFamilies ) throws IOException ; 
 + public int forceRepairRangeAsync ( String beginToken , String endToken , String keyspaceName , boolean isSequential , Collection < String > dataCenters , Collection < String > hosts , boolean fullRepair , String . . . columnFamilies ) throws IOException ; 
 
 / * * 
 * Same as forceRepairAsync , but handles a specified range 
 * 
 + * @ deprecated use { @ link # repairAsync ( String keyspace , Map options ) } instead . 
 + * 
 * @ param parallelismDegree 0 : sequential , 1 : parallel , 2 : DC parallel 
 * / 
 @ Deprecated 
 public int forceRepairRangeAsync ( String beginToken , String endToken , String keyspaceName , int parallelismDegree , Collection < String > dataCenters , Collection < String > hosts , boolean fullRepair , String . . . columnFamilies ) ; 
 
 + / * * 
 + * @ deprecated use { @ link # repairAsync ( String keyspace , Map options ) } instead . 
 + * / 
 @ Deprecated 
 public int forceRepairAsync ( String keyspace , boolean isSequential , boolean isLocal , boolean primaryRange , boolean fullRepair , String . . . columnFamilies ) ; 
 
 + / * * 
 + * @ deprecated use { @ link # repairAsync ( String keyspace , Map options ) } instead . 
 + * / 
 @ Deprecated 
 - public int forceRepairRangeAsync ( String beginToken , String endToken , String keyspaceName , boolean isSequential , boolean isLocal , boolean repairedAt , String . . . columnFamilies ) ; 
 + public int forceRepairRangeAsync ( String beginToken , String endToken , String keyspaceName , boolean isSequential , boolean isLocal , boolean fullRepair , String . . . columnFamilies ) ; 
 
 public void forceTerminateAllRepairSessions ( ) ; 


NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java 
 index 967da55 . . 9adb9df 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliClient . java 
 + + + b / src / java / org / apache / cassandra / cli / CliClient . java 
 @ @ - 32 , 7 + 32 , 7 @ @ public class CliClient 
 { 
 private Cassandra . Client thriftClient _ = null ; 
 private CliSessionState css _ = null ; 
 - Map < String , Map < String , String > > columnFamiliesMap ; 
 + private Map < String , Map < String , Map < String , String > > > keyspacesMap = new HashMap < String , Map < String , Map < String , String > > > ( ) ; 
 
 public CliClient ( CliSessionState css , Cassandra . Client thriftClient ) 
 { 
 @ @ - 126 , 6 + 126 , 15 @ @ public class CliClient 
 CliMain . disconnect ( ) ; 
 System . exit ( 0 ) ; 
 } 
 + 
 + Map < String , Map < String , String > > getCFMetaData ( String keyspace ) throws NotFoundException , TException 
 + { 
 + / / Lazily lookup column family meta - data . 
 + if ( ! ( keyspacesMap . containsKey ( keyspace ) ) ) 
 + keyspacesMap . put ( keyspace , thriftClient _ . describe _ keyspace ( keyspace ) ) ; 
 + return keyspacesMap . get ( keyspace ) ; 
 + } 
 + 
 private void executeCount ( CommonTree ast ) throws TException , InvalidRequestException , UnavailableException , TimedOutException 
 { 
 if ( ! CliMain . isConnected ( ) ) 
 @ @ - 238 , 13 + 247 , 15 @ @ public class CliClient 
 String tableName = CliCompiler . getTableName ( columnFamilySpec ) ; 
 String key = CliCompiler . getKey ( columnFamilySpec ) ; 
 String columnFamily = CliCompiler . getColumnFamily ( columnFamilySpec ) ; 
 - int columnSpecCnt = CliCompiler . numColumnSpecifiers ( columnFamilySpec ) ; 
 + int columnSpecCnt = CliCompiler . numColumnSpecifiers ( columnFamilySpec ) ; 
 
 - / / Lazily lookup column family meta - data . 
 - if ( columnFamiliesMap = = null ) 
 - columnFamiliesMap = thriftClient _ . describe _ keyspace ( tableName ) ; 
 + if ( ! ( getCFMetaData ( tableName ) . containsKey ( columnFamily ) ) ) 
 + { 
 + css _ . out . println ( " No such column family : " + columnFamily ) ; 
 + return ; 
 + } 
 
 - boolean isSuper = columnFamiliesMap . get ( columnFamily ) . get ( " Type " ) . equals ( " Super " ) ? true : false ; 
 + boolean isSuper = getCFMetaData ( tableName ) . get ( columnFamily ) . get ( " Type " ) . equals ( " Super " ) ? true : false ; 
 
 byte [ ] superColumnName = null ; 
 byte [ ] columnName = null ;
