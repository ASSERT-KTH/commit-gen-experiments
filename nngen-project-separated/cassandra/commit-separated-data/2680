BLEU SCORE: 0.11598118436136108

TEST MSG: use junit assertions
GENERATED MSG: Add hadoop progressable compatibility .

TEST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java b / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java <nl> index 42445b5 . . 11c4402 100644 <nl> - - - a / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java <nl> + + + b / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java <nl> @ @ - 36 , 6 + 36 , 8 @ @ import static org . junit . Assert . assertEquals ; <nl> import static org . apache . cassandra . db . KeyspaceTest . assertColumns ; <nl> import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertTrue ; <nl> + import static org . junit . Assert . assertNotNull ; <nl> + import static org . junit . Assert . assertNull ; <nl> <nl> import static org . apache . cassandra . cql3 . QueryProcessor . processInternal ; <nl> <nl> @ @ - 89 , 7 + 91 , 7 @ @ public class CompactionsPurgeTest extends SchemaLoader <nl> cfs . invalidateCachedRow ( key ) ; <nl> ColumnFamily cf = cfs . getColumnFamily ( QueryFilter . getIdentityFilter ( key , cfName , System . currentTimeMillis ( ) ) ) ; <nl> assertColumns ( cf , " 5 " ) ; <nl> - assert cf . getColumn ( cellname ( String . valueOf ( 5 ) ) ) ! = null ; <nl> + assertNotNull ( cf . getColumn ( cellname ( String . valueOf ( 5 ) ) ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 140 , 7 + 142 , 7 @ @ public class CompactionsPurgeTest extends SchemaLoader <nl> / / verify that minor compaction does GC when key is provably not <nl> / / present in a non - compacted sstable <nl> ColumnFamily cf = cfs . getColumnFamily ( QueryFilter . getIdentityFilter ( key2 , cfName , System . currentTimeMillis ( ) ) ) ; <nl> - assert cf = = null ; <nl> + assertNull ( cf ) ; <nl> <nl> / / verify that minor compaction still GC when key is present <nl> / / in a non - compacted sstable but the timestamp ensures we won ' t miss anything <nl> @ @ - 219 , 13 + 221 , 13 @ @ public class CompactionsPurgeTest extends SchemaLoader <nl> rm . apply ( ) ; <nl> } <nl> cfs . forceBlockingFlush ( ) ; <nl> - assert cfs . getSSTables ( ) . size ( ) = = 1 : cfs . getSSTables ( ) ; / / inserts & deletes were in the same memtable - > only deletes in sstable <nl> + assertEquals ( String . valueOf ( cfs . getSSTables ( ) ) , 1 , cfs . getSSTables ( ) . size ( ) ) ; / / inserts & deletes were in the same memtable - > only deletes in sstable <nl> <nl> / / compact and test that the row is completely gone <nl> Util . compactAll ( cfs , Integer . MAX _ VALUE ) . get ( ) ; <nl> - assert cfs . getSSTables ( ) . isEmpty ( ) ; <nl> + assertTrue ( cfs . getSSTables ( ) . isEmpty ( ) ) ; <nl> ColumnFamily cf = keyspace . getColumnFamilyStore ( cfName ) . getColumnFamily ( QueryFilter . getIdentityFilter ( key , cfName , System . currentTimeMillis ( ) ) ) ; <nl> - assert cf = = null : cf ; <nl> + assertNull ( String . valueOf ( cf ) , cf ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 273 , 7 + 275 , 7 @ @ public class CompactionsPurgeTest extends SchemaLoader <nl> ColumnFamily cf = cfs . getColumnFamily ( QueryFilter . getIdentityFilter ( key , cfName , System . currentTimeMillis ( ) ) ) ; <nl> assertEquals ( 10 , cf . getColumnCount ( ) ) ; <nl> for ( Cell c : cf ) <nl> - assert ! c . isMarkedForDelete ( System . currentTimeMillis ( ) ) ; <nl> + assertFalse ( c . isMarkedForDelete ( System . currentTimeMillis ( ) ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 317 , 7 + 319 , 7 @ @ public class CompactionsPurgeTest extends SchemaLoader <nl> cf = cfs . getColumnFamily ( filter ) ; <nl> assertEquals ( 10 , cf . getColumnCount ( ) ) ; <nl> for ( Cell c : cf ) <nl> - assert ! c . isMarkedForDelete ( System . currentTimeMillis ( ) ) ; <nl> + assertFalse ( c . isMarkedForDelete ( System . currentTimeMillis ( ) ) ) ; <nl> } <nl> <nl> @ Test
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java b / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java 
 index 42445b5 . . 11c4402 100644 
 - - - a / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java 
 + + + b / test / unit / org / apache / cassandra / db / compaction / CompactionsPurgeTest . java 
 @ @ - 36 , 6 + 36 , 8 @ @ import static org . junit . Assert . assertEquals ; 
 import static org . apache . cassandra . db . KeyspaceTest . assertColumns ; 
 import static org . junit . Assert . assertFalse ; 
 import static org . junit . Assert . assertTrue ; 
 + import static org . junit . Assert . assertNotNull ; 
 + import static org . junit . Assert . assertNull ; 
 
 import static org . apache . cassandra . cql3 . QueryProcessor . processInternal ; 
 
 @ @ - 89 , 7 + 91 , 7 @ @ public class CompactionsPurgeTest extends SchemaLoader 
 cfs . invalidateCachedRow ( key ) ; 
 ColumnFamily cf = cfs . getColumnFamily ( QueryFilter . getIdentityFilter ( key , cfName , System . currentTimeMillis ( ) ) ) ; 
 assertColumns ( cf , " 5 " ) ; 
 - assert cf . getColumn ( cellname ( String . valueOf ( 5 ) ) ) ! = null ; 
 + assertNotNull ( cf . getColumn ( cellname ( String . valueOf ( 5 ) ) ) ) ; 
 } 
 
 @ Test 
 @ @ - 140 , 7 + 142 , 7 @ @ public class CompactionsPurgeTest extends SchemaLoader 
 / / verify that minor compaction does GC when key is provably not 
 / / present in a non - compacted sstable 
 ColumnFamily cf = cfs . getColumnFamily ( QueryFilter . getIdentityFilter ( key2 , cfName , System . currentTimeMillis ( ) ) ) ; 
 - assert cf = = null ; 
 + assertNull ( cf ) ; 
 
 / / verify that minor compaction still GC when key is present 
 / / in a non - compacted sstable but the timestamp ensures we won ' t miss anything 
 @ @ - 219 , 13 + 221 , 13 @ @ public class CompactionsPurgeTest extends SchemaLoader 
 rm . apply ( ) ; 
 } 
 cfs . forceBlockingFlush ( ) ; 
 - assert cfs . getSSTables ( ) . size ( ) = = 1 : cfs . getSSTables ( ) ; / / inserts & deletes were in the same memtable - > only deletes in sstable 
 + assertEquals ( String . valueOf ( cfs . getSSTables ( ) ) , 1 , cfs . getSSTables ( ) . size ( ) ) ; / / inserts & deletes were in the same memtable - > only deletes in sstable 
 
 / / compact and test that the row is completely gone 
 Util . compactAll ( cfs , Integer . MAX _ VALUE ) . get ( ) ; 
 - assert cfs . getSSTables ( ) . isEmpty ( ) ; 
 + assertTrue ( cfs . getSSTables ( ) . isEmpty ( ) ) ; 
 ColumnFamily cf = keyspace . getColumnFamilyStore ( cfName ) . getColumnFamily ( QueryFilter . getIdentityFilter ( key , cfName , System . currentTimeMillis ( ) ) ) ; 
 - assert cf = = null : cf ; 
 + assertNull ( String . valueOf ( cf ) , cf ) ; 
 } 
 
 @ Test 
 @ @ - 273 , 7 + 275 , 7 @ @ public class CompactionsPurgeTest extends SchemaLoader 
 ColumnFamily cf = cfs . getColumnFamily ( QueryFilter . getIdentityFilter ( key , cfName , System . currentTimeMillis ( ) ) ) ; 
 assertEquals ( 10 , cf . getColumnCount ( ) ) ; 
 for ( Cell c : cf ) 
 - assert ! c . isMarkedForDelete ( System . currentTimeMillis ( ) ) ; 
 + assertFalse ( c . isMarkedForDelete ( System . currentTimeMillis ( ) ) ) ; 
 } 
 
 @ Test 
 @ @ - 317 , 7 + 319 , 7 @ @ public class CompactionsPurgeTest extends SchemaLoader 
 cf = cfs . getColumnFamily ( filter ) ; 
 assertEquals ( 10 , cf . getColumnCount ( ) ) ; 
 for ( Cell c : cf ) 
 - assert ! c . isMarkedForDelete ( System . currentTimeMillis ( ) ) ; 
 + assertFalse ( c . isMarkedForDelete ( System . currentTimeMillis ( ) ) ) ; 
 } 
 
 @ Test

NEAREST DIFF:
ELIMINATEDSENTENCE
