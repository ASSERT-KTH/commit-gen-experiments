BLEU SCORE: 0.02383853510228548

TEST MSG: Adjust nodetool for changes from CASSANDRA - 5549 .
GENERATED MSG: optimize AtomicBTree

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / metrics / ColumnFamilyMetrics . java b / src / java / org / apache / cassandra / metrics / ColumnFamilyMetrics . java <nl> index fbc2730 . . 288bec9 100644 <nl> - - - a / src / java / org / apache / cassandra / metrics / ColumnFamilyMetrics . java <nl> + + + b / src / java / org / apache / cassandra / metrics / ColumnFamilyMetrics . java <nl> @ @ - 382 , 7 + 382 , 7 @ @ public class ColumnFamilyMetrics <nl> Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " EstimatedRowSizeHistogram " ) ) ; <nl> Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " EstimatedColumnCountHistogram " ) ) ; <nl> Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " SSTablesPerReadHistogram " ) ) ; <nl> - Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " PendingTasks " ) ) ; <nl> + Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " PendingFlushes " ) ) ; <nl> Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " LiveSSTableCount " ) ) ; <nl> Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " LiveDiskSpaceUsed " ) ) ; <nl> Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " TotalDiskSpaceUsed " ) ) ; <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> index 2288953 . . dc5e8e7 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java <nl> @ @ - 991 , 9 + 991 , 8 @ @ public class NodeProbe implements AutoCloseable <nl> case " MaxRowSize " : <nl> case " MeanRowSize " : <nl> case " MemtableColumnsCount " : <nl> - case " MemtableDataSize " : <nl> + case " MemtableLiveDataSize " : <nl> case " MinRowSize " : <nl> - case " PendingTasks " : <nl> case " RecentBloomFilterFalsePositives " : <nl> case " RecentBloomFilterFalseRatio " : <nl> case " SnapshotsSize " : <nl> @ @ - 1004 , 6 + 1003 , 7 @ @ public class NodeProbe implements AutoCloseable <nl> case " TotalDiskSpaceUsed " : <nl> case " WriteTotalLatency " : <nl> case " ReadTotalLatency " : <nl> + case " PendingFlushes " : <nl> return JMX . newMBeanProxy ( mbeanServerConn , oName , JmxReporter . CounterMBean . class ) . getCount ( ) ; <nl> case " ReadLatency " : <nl> case " CoordinatorReadLatency " : <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeTool . java b / src / java / org / apache / cassandra / tools / NodeTool . java <nl> index fedf2c1 . . d24e013 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeTool . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeTool . java <nl> @ @ - 656 , 7 + 656 , 7 @ @ public class NodeTool <nl> List < ColumnFamilyStoreMBean > columnFamilies = entry . getValue ( ) ; <nl> long keyspaceReadCount = 0 ; <nl> long keyspaceWriteCount = 0 ; <nl> - int keyspacePendingTasks = 0 ; <nl> + int keyspacePendingFlushes = 0 ; <nl> double keyspaceTotalReadTime = 0 . 0f ; <nl> double keyspaceTotalWriteTime = 0 . 0f ; <nl> <nl> @ @ - 677 , 7 + 677 , 7 @ @ public class NodeTool <nl> keyspaceWriteCount + = writeCount ; <nl> keyspaceTotalWriteTime + = ( long ) probe . getColumnFamilyMetric ( keyspaceName , cfName , " WriteTotalLatency " ) ; <nl> } <nl> - keyspacePendingTasks + = ( int ) probe . getColumnFamilyMetric ( keyspaceName , cfName , " PendingTasks " ) ; <nl> + keyspacePendingFlushes + = ( long ) probe . getColumnFamilyMetric ( keyspaceName , cfName , " PendingFlushes " ) ; <nl> } <nl> <nl> double keyspaceReadLatency = keyspaceReadCount > 0 <nl> @ @ - 691 , 7 + 691 , 7 @ @ public class NodeTool <nl> System . out . println ( " \ tRead Latency : " + format ( " % s " , keyspaceReadLatency ) + " ms . " ) ; <nl> System . out . println ( " \ tWrite Count : " + keyspaceWriteCount ) ; <nl> System . out . println ( " \ tWrite Latency : " + format ( " % s " , keyspaceWriteLatency ) + " ms . " ) ; <nl> - System . out . println ( " \ tPending Tasks : " + keyspacePendingTasks ) ; <nl> + System . out . println ( " \ tPending Flushes : " + keyspacePendingFlushes ) ; <nl> <nl> / / print out column family statistics for this keyspace <nl> for ( ColumnFamilyStoreMBean cfstore : columnFamilies ) <nl> @ @ - 730 , 7 + 730 , 7 @ @ public class NodeTool <nl> System . out . println ( " \ t \ tSpace used by snapshots ( total ) , bytes : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " SnapshotsSize " ) ) ; <nl> System . out . println ( " \ t \ tSSTable Compression Ratio : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " CompressionRatio " ) ) ; <nl> System . out . println ( " \ t \ tMemtable cell count : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " MemtableColumnsCount " ) ) ; <nl> - System . out . println ( " \ t \ tMemtable data size , bytes : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " MemtableDataSize " ) ) ; <nl> + System . out . println ( " \ t \ tMemtable data size , bytes : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " MemtableLiveDataSize " ) ) ; <nl> System . out . println ( " \ t \ tMemtable switch count : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " MemtableSwitchCount " ) ) ; <nl> System . out . println ( " \ t \ tLocal read count : " + ( ( JmxReporter . TimerMBean ) probe . getColumnFamilyMetric ( keyspaceName , cfName , " ReadLatency " ) ) . getCount ( ) ) ; <nl> double localReadLatency = ( ( JmxReporter . TimerMBean ) probe . getColumnFamilyMetric ( keyspaceName , cfName , " ReadLatency " ) ) . getMean ( ) / 1000 ; <nl> @ @ - 740 , 7 + 740 , 7 @ @ public class NodeTool <nl> double localWriteLatency = ( ( JmxReporter . TimerMBean ) probe . getColumnFamilyMetric ( keyspaceName , cfName , " WriteLatency " ) ) . getMean ( ) / 1000 ; <nl> double localWLatency = localWriteLatency > 0 ? localWriteLatency : Double . NaN ; <nl> System . out . printf ( " \ t \ tLocal write latency : % 01 . 3f ms % n " , localWLatency ) ; <nl> - System . out . println ( " \ t \ tPending tasks : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " PendingTasks " ) ) ; <nl> + System . out . println ( " \ t \ tPending flushes : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " PendingFlushes " ) ) ; <nl> System . out . println ( " \ t \ tBloom filter false positives : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " BloomFilterFalsePositives " ) ) ; <nl> System . out . println ( " \ t \ tBloom filter false ratio : " + format ( " % 01 . 5f " , probe . getColumnFamilyMetric ( keyspaceName , cfName , " RecentBloomFilterFalseRatio " ) ) ) ; <nl> System . out . println ( " \ t \ tBloom filter space used , bytes : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " BloomFilterDiskSpaceUsed " ) ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / metrics / ColumnFamilyMetrics . java b / src / java / org / apache / cassandra / metrics / ColumnFamilyMetrics . java 
 index fbc2730 . . 288bec9 100644 
 - - - a / src / java / org / apache / cassandra / metrics / ColumnFamilyMetrics . java 
 + + + b / src / java / org / apache / cassandra / metrics / ColumnFamilyMetrics . java 
 @ @ - 382 , 7 + 382 , 7 @ @ public class ColumnFamilyMetrics 
 Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " EstimatedRowSizeHistogram " ) ) ; 
 Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " EstimatedColumnCountHistogram " ) ) ; 
 Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " SSTablesPerReadHistogram " ) ) ; 
 - Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " PendingTasks " ) ) ; 
 + Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " PendingFlushes " ) ) ; 
 Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " LiveSSTableCount " ) ) ; 
 Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " LiveDiskSpaceUsed " ) ) ; 
 Metrics . defaultRegistry ( ) . removeMetric ( factory . createMetricName ( " TotalDiskSpaceUsed " ) ) ; 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeProbe . java b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 index 2288953 . . dc5e8e7 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeProbe . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeProbe . java 
 @ @ - 991 , 9 + 991 , 8 @ @ public class NodeProbe implements AutoCloseable 
 case " MaxRowSize " : 
 case " MeanRowSize " : 
 case " MemtableColumnsCount " : 
 - case " MemtableDataSize " : 
 + case " MemtableLiveDataSize " : 
 case " MinRowSize " : 
 - case " PendingTasks " : 
 case " RecentBloomFilterFalsePositives " : 
 case " RecentBloomFilterFalseRatio " : 
 case " SnapshotsSize " : 
 @ @ - 1004 , 6 + 1003 , 7 @ @ public class NodeProbe implements AutoCloseable 
 case " TotalDiskSpaceUsed " : 
 case " WriteTotalLatency " : 
 case " ReadTotalLatency " : 
 + case " PendingFlushes " : 
 return JMX . newMBeanProxy ( mbeanServerConn , oName , JmxReporter . CounterMBean . class ) . getCount ( ) ; 
 case " ReadLatency " : 
 case " CoordinatorReadLatency " : 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeTool . java b / src / java / org / apache / cassandra / tools / NodeTool . java 
 index fedf2c1 . . d24e013 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeTool . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeTool . java 
 @ @ - 656 , 7 + 656 , 7 @ @ public class NodeTool 
 List < ColumnFamilyStoreMBean > columnFamilies = entry . getValue ( ) ; 
 long keyspaceReadCount = 0 ; 
 long keyspaceWriteCount = 0 ; 
 - int keyspacePendingTasks = 0 ; 
 + int keyspacePendingFlushes = 0 ; 
 double keyspaceTotalReadTime = 0 . 0f ; 
 double keyspaceTotalWriteTime = 0 . 0f ; 
 
 @ @ - 677 , 7 + 677 , 7 @ @ public class NodeTool 
 keyspaceWriteCount + = writeCount ; 
 keyspaceTotalWriteTime + = ( long ) probe . getColumnFamilyMetric ( keyspaceName , cfName , " WriteTotalLatency " ) ; 
 } 
 - keyspacePendingTasks + = ( int ) probe . getColumnFamilyMetric ( keyspaceName , cfName , " PendingTasks " ) ; 
 + keyspacePendingFlushes + = ( long ) probe . getColumnFamilyMetric ( keyspaceName , cfName , " PendingFlushes " ) ; 
 } 
 
 double keyspaceReadLatency = keyspaceReadCount > 0 
 @ @ - 691 , 7 + 691 , 7 @ @ public class NodeTool 
 System . out . println ( " \ tRead Latency : " + format ( " % s " , keyspaceReadLatency ) + " ms . " ) ; 
 System . out . println ( " \ tWrite Count : " + keyspaceWriteCount ) ; 
 System . out . println ( " \ tWrite Latency : " + format ( " % s " , keyspaceWriteLatency ) + " ms . " ) ; 
 - System . out . println ( " \ tPending Tasks : " + keyspacePendingTasks ) ; 
 + System . out . println ( " \ tPending Flushes : " + keyspacePendingFlushes ) ; 
 
 / / print out column family statistics for this keyspace 
 for ( ColumnFamilyStoreMBean cfstore : columnFamilies ) 
 @ @ - 730 , 7 + 730 , 7 @ @ public class NodeTool 
 System . out . println ( " \ t \ tSpace used by snapshots ( total ) , bytes : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " SnapshotsSize " ) ) ; 
 System . out . println ( " \ t \ tSSTable Compression Ratio : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " CompressionRatio " ) ) ; 
 System . out . println ( " \ t \ tMemtable cell count : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " MemtableColumnsCount " ) ) ; 
 - System . out . println ( " \ t \ tMemtable data size , bytes : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " MemtableDataSize " ) ) ; 
 + System . out . println ( " \ t \ tMemtable data size , bytes : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " MemtableLiveDataSize " ) ) ; 
 System . out . println ( " \ t \ tMemtable switch count : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " MemtableSwitchCount " ) ) ; 
 System . out . println ( " \ t \ tLocal read count : " + ( ( JmxReporter . TimerMBean ) probe . getColumnFamilyMetric ( keyspaceName , cfName , " ReadLatency " ) ) . getCount ( ) ) ; 
 double localReadLatency = ( ( JmxReporter . TimerMBean ) probe . getColumnFamilyMetric ( keyspaceName , cfName , " ReadLatency " ) ) . getMean ( ) / 1000 ; 
 @ @ - 740 , 7 + 740 , 7 @ @ public class NodeTool 
 double localWriteLatency = ( ( JmxReporter . TimerMBean ) probe . getColumnFamilyMetric ( keyspaceName , cfName , " WriteLatency " ) ) . getMean ( ) / 1000 ; 
 double localWLatency = localWriteLatency > 0 ? localWriteLatency : Double . NaN ; 
 System . out . printf ( " \ t \ tLocal write latency : % 01 . 3f ms % n " , localWLatency ) ; 
 - System . out . println ( " \ t \ tPending tasks : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " PendingTasks " ) ) ; 
 + System . out . println ( " \ t \ tPending flushes : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " PendingFlushes " ) ) ; 
 System . out . println ( " \ t \ tBloom filter false positives : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " BloomFilterFalsePositives " ) ) ; 
 System . out . println ( " \ t \ tBloom filter false ratio : " + format ( " % 01 . 5f " , probe . getColumnFamilyMetric ( keyspaceName , cfName , " RecentBloomFilterFalseRatio " ) ) ) ; 
 System . out . println ( " \ t \ tBloom filter space used , bytes : " + probe . getColumnFamilyMetric ( keyspaceName , cfName , " BloomFilterDiskSpaceUsed " ) ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
