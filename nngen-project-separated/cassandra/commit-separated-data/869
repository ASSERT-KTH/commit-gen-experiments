BLEU SCORE: 0.020980574531482755

TEST MSG: Allow service to startup if jmx remote port configured directly
GENERATED MSG: merge from 1 . 0 . 0

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b7715ba . . 1690e09 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 6 <nl> + * Allow server startup if JMX is configured directly ( CASSANDRA - 11725 ) <nl> * Prevent direct memory OOM on buffer pool allocations ( CASSANDRA - 11710 ) <nl> * Enhanced Compaction Logging ( CASSANDRA - 10805 ) <nl> * Make prepared statement cache size configurable ( CASSANDRA - 11555 ) <nl> diff - - git a / NEWS . txt b / NEWS . txt <nl> index 7a29924 . . ac33a60 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 25 , 6 + 25 , 8 @ @ New features <nl> connections are permitted . For more details on how to enable the new options , see the <nl> comments in cassandra - env . sh . A new class of IResource , JMXResource , is provided for <nl> the purposes of GRANT / REVOKE via CQL . See CASSANDRA - 10091 for more details . <nl> + Also , directly setting JMX remote port via the com . sun . management . jmxremote . port system <nl> + property at startup is deprecated . See CASSANDRA - 11725 for more details . <nl> - JSON timestamps are now in UTC and contain the timezone information , see CASSANDRA - 11137 for more details . <nl> - Collision checks are performed when joining the token ring , regardless of whether <nl> the node should bootstrap . Additionally , replace _ address can legitimately be used <nl> diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> index 2b797fe . . 2bf4931 100644 <nl> - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java <nl> @ @ - 97 , 6 + 97 , 19 @ @ public class CassandraDaemon <nl> <nl> private void maybeInitJmx ( ) <nl> { <nl> + / / If the standard com . sun . management . jmxremote . port property has been set <nl> + / / then the JVM agent will have already started up a default JMX connector <nl> + / / server . This behaviour is deprecated , but some clients may be relying <nl> + / / on it , so log a warning and skip setting up the server with the settings <nl> + / / as configured in cassandra - env . ( sh | ps1 ) <nl> + / / See : CASSANDRA - 11540 & CASSANDRA - 11725 <nl> + if ( System . getProperty ( " com . sun . management . jmxremote . port " ) ! = null ) <nl> + { <nl> + logger . warn ( " JMX settings in cassandra - env . sh have been bypassed as the JMX connector server is " + <nl> + " already initialized . Please refer to cassandra - env . ( sh | ps1 ) for JMX configuration info " ) ; <nl> + return ; <nl> + } <nl> + <nl> System . setProperty ( " java . rmi . server . randomIDs " , " true " ) ; <nl> <nl> / / If a remote port has been specified then use that to set up a JMX <nl> diff - - git a / src / java / org / apache / cassandra / service / StartupChecks . java b / src / java / org / apache / cassandra / service / StartupChecks . java <nl> index d1c1943 . . d837921 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StartupChecks . java <nl> + + + b / src / java / org / apache / cassandra / service / StartupChecks . java <nl> @ @ - 32 , 12 + 32 , 16 @ @ import org . slf4j . LoggerFactory ; <nl> import org . apache . cassandra . config . CFMetaData ; <nl> import org . apache . cassandra . config . DatabaseDescriptor ; <nl> import org . apache . cassandra . config . Schema ; <nl> - import org . apache . cassandra . db . * ; <nl> + import org . apache . cassandra . db . ColumnFamilyStore ; <nl> + import org . apache . cassandra . db . Directories ; <nl> + import org . apache . cassandra . db . SystemKeyspace ; <nl> import org . apache . cassandra . exceptions . ConfigurationException ; <nl> import org . apache . cassandra . exceptions . StartupException ; <nl> import org . apache . cassandra . io . sstable . Descriptor ; <nl> import org . apache . cassandra . io . util . FileUtils ; <nl> - import org . apache . cassandra . utils . * ; <nl> + import org . apache . cassandra . utils . CLibrary ; <nl> + import org . apache . cassandra . utils . FBUtilities ; <nl> + import org . apache . cassandra . utils . SigarLibrary ; <nl> <nl> / * * <nl> * Verifies that the system and environment is in a fit state to be started . <nl> @ @ - 71 , 6 + 75 , 7 @ @ public class StartupChecks <nl> private final List < StartupCheck > DEFAULT _ TESTS = ImmutableList . of ( checkJemalloc , <nl> checkValidLaunchDate , <nl> checkJMXPorts , <nl> + checkJMXProperties , <nl> inspectJvmOptions , <nl> checkJnaInitialization , <nl> initSigarLibrary , <nl> @ @ - 160 , 6 + 165 , 18 @ @ public class StartupChecks <nl> } <nl> } ; <nl> <nl> + public static final StartupCheck checkJMXProperties = new StartupCheck ( ) <nl> + { <nl> + public void execute ( ) <nl> + { <nl> + if ( System . getProperty ( " com . sun . management . jmxremote . port " ) ! = null ) <nl> + { <nl> + logger . warn ( " Use of com . sun . management . jmxremote . port at startup is deprecated . " + <nl> + " Please use cassandra . jmx . remote . port instead . " ) ; <nl> + } <nl> + } <nl> + } ; <nl> + <nl> public static final StartupCheck inspectJvmOptions = new StartupCheck ( ) <nl> { <nl> public void execute ( ) <nl> diff - - git a / src / java / org / apache / cassandra / utils / JMXServerUtils . java b / src / java / org / apache / cassandra / utils / JMXServerUtils . java <nl> index b0e44a2 . . ad87efd 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / JMXServerUtils . java <nl> + + + b / src / java / org / apache / cassandra / utils / JMXServerUtils . java <nl> @ @ - 66 , 31 + 66 , 17 @ @ public class JMXServerUtils <nl> Map < String , Object > env = new HashMap < > ( ) ; <nl> <nl> String urlTemplate = " service : jmx : rmi : / / % 1 $ s / jndi / rmi : / / % 1 $ s : % 2 $ d / jmxrmi " ; <nl> - String url ; <nl> - String host ; <nl> - InetAddress serverAddress ; <nl> + InetAddress serverAddress = null ; <nl> if ( local ) <nl> { <nl> serverAddress = InetAddress . getLoopbackAddress ( ) ; <nl> - host = serverAddress . getHostAddress ( ) ; <nl> - System . setProperty ( " java . rmi . server . hostname " , host ) ; <nl> - } <nl> - else <nl> - { <nl> - / / if the java . rmi . server . hostname property is set , we ' ll take its value <nl> - / / and use that when creating the RMIServerSocket to which we bind the RMI <nl> - / / registry . This allows us to effectively restrict to a single interface <nl> - / / if required . See http : / / bugs . java . com / bugdatabase / view _ bug . do ? bug _ id = 4880793 <nl> - / / for more detail . If the hostname property is not set , the registry will <nl> - / / be bound to the wildcard address <nl> - host = System . getProperty ( " java . rmi . server . hostname " ) ; <nl> - serverAddress = host = = null ? null : InetAddress . getByName ( host ) ; <nl> + System . setProperty ( " java . rmi . server . hostname " , serverAddress . getHostAddress ( ) ) ; <nl> } <nl> <nl> / / Configure the RMI client & server socket factories , including SSL config . <nl> env . putAll ( configureJmxSocketFactories ( serverAddress ) ) ; <nl> <nl> - url = String . format ( urlTemplate , ( host = = null ? " 0 . 0 . 0 . 0 " : serverAddress . getHostAddress ( ) ) , port ) ; <nl> + String url = String . format ( urlTemplate , ( serverAddress ! = null ? serverAddress . getHostAddress ( ) : " 0 . 0 . 0 . 0 " ) , port ) ; <nl> LocateRegistry . createRegistry ( port , <nl> ( RMIClientSocketFactory ) env . get ( RMIConnectorServer . RMI _ CLIENT _ SOCKET _ FACTORY _ ATTRIBUTE ) , <nl> ( RMIServerSocketFactory ) env . get ( RMIConnectorServer . RMI _ SERVER _ SOCKET _ FACTORY _ ATTRIBUTE ) ) ;
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 630ee2e . . 1f0f0e9 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 10 @ @ <nl> - 1 . 0 - dev <nl> + 1 . 1 - dev <nl> + <nl> + <nl> + 1 . 0 . 1 <nl> + <nl> + <nl> + 1 . 0 <nl> * removed binarymemtable ( CASSANDRA - 2692 ) <nl> * add commitlog _ total _ space _ in _ mb to prevent fragmented logs ( CASSANDRA - 2427 ) <nl> * removed commitlog _ rotation _ threshold _ in _ mb configuration ( CASSANDRA - 2771 )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b7715ba . . 1690e09 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 6 
 + * Allow server startup if JMX is configured directly ( CASSANDRA - 11725 ) 
 * Prevent direct memory OOM on buffer pool allocations ( CASSANDRA - 11710 ) 
 * Enhanced Compaction Logging ( CASSANDRA - 10805 ) 
 * Make prepared statement cache size configurable ( CASSANDRA - 11555 ) 
 diff - - git a / NEWS . txt b / NEWS . txt 
 index 7a29924 . . ac33a60 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 25 , 6 + 25 , 8 @ @ New features 
 connections are permitted . For more details on how to enable the new options , see the 
 comments in cassandra - env . sh . A new class of IResource , JMXResource , is provided for 
 the purposes of GRANT / REVOKE via CQL . See CASSANDRA - 10091 for more details . 
 + Also , directly setting JMX remote port via the com . sun . management . jmxremote . port system 
 + property at startup is deprecated . See CASSANDRA - 11725 for more details . 
 - JSON timestamps are now in UTC and contain the timezone information , see CASSANDRA - 11137 for more details . 
 - Collision checks are performed when joining the token ring , regardless of whether 
 the node should bootstrap . Additionally , replace _ address can legitimately be used 
 diff - - git a / src / java / org / apache / cassandra / service / CassandraDaemon . java b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 index 2b797fe . . 2bf4931 100644 
 - - - a / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 + + + b / src / java / org / apache / cassandra / service / CassandraDaemon . java 
 @ @ - 97 , 6 + 97 , 19 @ @ public class CassandraDaemon 
 
 private void maybeInitJmx ( ) 
 { 
 + / / If the standard com . sun . management . jmxremote . port property has been set 
 + / / then the JVM agent will have already started up a default JMX connector 
 + / / server . This behaviour is deprecated , but some clients may be relying 
 + / / on it , so log a warning and skip setting up the server with the settings 
 + / / as configured in cassandra - env . ( sh | ps1 ) 
 + / / See : CASSANDRA - 11540 & CASSANDRA - 11725 
 + if ( System . getProperty ( " com . sun . management . jmxremote . port " ) ! = null ) 
 + { 
 + logger . warn ( " JMX settings in cassandra - env . sh have been bypassed as the JMX connector server is " + 
 + " already initialized . Please refer to cassandra - env . ( sh | ps1 ) for JMX configuration info " ) ; 
 + return ; 
 + } 
 + 
 System . setProperty ( " java . rmi . server . randomIDs " , " true " ) ; 
 
 / / If a remote port has been specified then use that to set up a JMX 
 diff - - git a / src / java / org / apache / cassandra / service / StartupChecks . java b / src / java / org / apache / cassandra / service / StartupChecks . java 
 index d1c1943 . . d837921 100644 
 - - - a / src / java / org / apache / cassandra / service / StartupChecks . java 
 + + + b / src / java / org / apache / cassandra / service / StartupChecks . java 
 @ @ - 32 , 12 + 32 , 16 @ @ import org . slf4j . LoggerFactory ; 
 import org . apache . cassandra . config . CFMetaData ; 
 import org . apache . cassandra . config . DatabaseDescriptor ; 
 import org . apache . cassandra . config . Schema ; 
 - import org . apache . cassandra . db . * ; 
 + import org . apache . cassandra . db . ColumnFamilyStore ; 
 + import org . apache . cassandra . db . Directories ; 
 + import org . apache . cassandra . db . SystemKeyspace ; 
 import org . apache . cassandra . exceptions . ConfigurationException ; 
 import org . apache . cassandra . exceptions . StartupException ; 
 import org . apache . cassandra . io . sstable . Descriptor ; 
 import org . apache . cassandra . io . util . FileUtils ; 
 - import org . apache . cassandra . utils . * ; 
 + import org . apache . cassandra . utils . CLibrary ; 
 + import org . apache . cassandra . utils . FBUtilities ; 
 + import org . apache . cassandra . utils . SigarLibrary ; 
 
 / * * 
 * Verifies that the system and environment is in a fit state to be started . 
 @ @ - 71 , 6 + 75 , 7 @ @ public class StartupChecks 
 private final List < StartupCheck > DEFAULT _ TESTS = ImmutableList . of ( checkJemalloc , 
 checkValidLaunchDate , 
 checkJMXPorts , 
 + checkJMXProperties , 
 inspectJvmOptions , 
 checkJnaInitialization , 
 initSigarLibrary , 
 @ @ - 160 , 6 + 165 , 18 @ @ public class StartupChecks 
 } 
 } ; 
 
 + public static final StartupCheck checkJMXProperties = new StartupCheck ( ) 
 + { 
 + public void execute ( ) 
 + { 
 + if ( System . getProperty ( " com . sun . management . jmxremote . port " ) ! = null ) 
 + { 
 + logger . warn ( " Use of com . sun . management . jmxremote . port at startup is deprecated . " + 
 + " Please use cassandra . jmx . remote . port instead . " ) ; 
 + } 
 + } 
 + } ; 
 + 
 public static final StartupCheck inspectJvmOptions = new StartupCheck ( ) 
 { 
 public void execute ( ) 
 diff - - git a / src / java / org / apache / cassandra / utils / JMXServerUtils . java b / src / java / org / apache / cassandra / utils / JMXServerUtils . java 
 index b0e44a2 . . ad87efd 100644 
 - - - a / src / java / org / apache / cassandra / utils / JMXServerUtils . java 
 + + + b / src / java / org / apache / cassandra / utils / JMXServerUtils . java 
 @ @ - 66 , 31 + 66 , 17 @ @ public class JMXServerUtils 
 Map < String , Object > env = new HashMap < > ( ) ; 
 
 String urlTemplate = " service : jmx : rmi : / / % 1 $ s / jndi / rmi : / / % 1 $ s : % 2 $ d / jmxrmi " ; 
 - String url ; 
 - String host ; 
 - InetAddress serverAddress ; 
 + InetAddress serverAddress = null ; 
 if ( local ) 
 { 
 serverAddress = InetAddress . getLoopbackAddress ( ) ; 
 - host = serverAddress . getHostAddress ( ) ; 
 - System . setProperty ( " java . rmi . server . hostname " , host ) ; 
 - } 
 - else 
 - { 
 - / / if the java . rmi . server . hostname property is set , we ' ll take its value 
 - / / and use that when creating the RMIServerSocket to which we bind the RMI 
 - / / registry . This allows us to effectively restrict to a single interface 
 - / / if required . See http : / / bugs . java . com / bugdatabase / view _ bug . do ? bug _ id = 4880793 
 - / / for more detail . If the hostname property is not set , the registry will 
 - / / be bound to the wildcard address 
 - host = System . getProperty ( " java . rmi . server . hostname " ) ; 
 - serverAddress = host = = null ? null : InetAddress . getByName ( host ) ; 
 + System . setProperty ( " java . rmi . server . hostname " , serverAddress . getHostAddress ( ) ) ; 
 } 
 
 / / Configure the RMI client & server socket factories , including SSL config . 
 env . putAll ( configureJmxSocketFactories ( serverAddress ) ) ; 
 
 - url = String . format ( urlTemplate , ( host = = null ? " 0 . 0 . 0 . 0 " : serverAddress . getHostAddress ( ) ) , port ) ; 
 + String url = String . format ( urlTemplate , ( serverAddress ! = null ? serverAddress . getHostAddress ( ) : " 0 . 0 . 0 . 0 " ) , port ) ; 
 LocateRegistry . createRegistry ( port , 
 ( RMIClientSocketFactory ) env . get ( RMIConnectorServer . RMI _ CLIENT _ SOCKET _ FACTORY _ ATTRIBUTE ) , 
 ( RMIServerSocketFactory ) env . get ( RMIConnectorServer . RMI _ SERVER _ SOCKET _ FACTORY _ ATTRIBUTE ) ) ;

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 630ee2e . . 1f0f0e9 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 10 @ @ 
 - 1 . 0 - dev 
 + 1 . 1 - dev 
 + 
 + 
 + 1 . 0 . 1 
 + 
 + 
 + 1 . 0 
 * removed binarymemtable ( CASSANDRA - 2692 ) 
 * add commitlog _ total _ space _ in _ mb to prevent fragmented logs ( CASSANDRA - 2427 ) 
 * removed commitlog _ rotation _ threshold _ in _ mb configuration ( CASSANDRA - 2771 )
