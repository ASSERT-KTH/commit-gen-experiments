BLEU SCORE: 0.2259005009024612

TEST MSG: Fix word count
GENERATED MSG: add log4j properties

TEST DIFF (one line): diff - - git a / examples / hadoop _ cql3 _ word _ count / README . txt b / examples / hadoop _ cql3 _ word _ count / README . txt <nl> index f984b02 . . e01632b 100644 <nl> - - - a / examples / hadoop _ cql3 _ word _ count / README . txt <nl> + + + b / examples / hadoop _ cql3 _ word _ count / README . txt <nl> @ @ - 36 , 8 + 36 , 10 @ @ Read the code in src / for more details . <nl> The word _ count _ counters example sums the counter columns for a row . The output <nl> is written to a text file in / tmp / word _ count _ counters . <nl> <nl> - * If you want to point wordcount at a real cluster , modify the seed <nl> - and listenaddress settings accordingly . <nl> + * It is recommended to turn off vnodes when running Cassandra with hadoop . <nl> + This is done by setting " num _ tokens : 1 " in cassandra . yaml . If you want to <nl> + point wordcount at a real cluster , modify the seed and listenaddress <nl> + settings accordingly . <nl> <nl> <nl> Troubleshooting <nl> diff - - git a / examples / hadoop _ cql3 _ word _ count / conf / log4j . properties b / examples / hadoop _ cql3 _ word _ count / conf / log4j . properties <nl> index 70f7657 . . 508d60f 100644 <nl> - - - a / examples / hadoop _ cql3 _ word _ count / conf / log4j . properties <nl> + + + b / examples / hadoop _ cql3 _ word _ count / conf / log4j . properties <nl> @ @ - 15 , 7 + 15 , 7 @ @ <nl> # specific language governing permissions and limitations <nl> # under the License . <nl> <nl> - log4j . rootLogger = DEBUG , stdout , F <nl> + log4j . rootLogger = INFO , stdout , F <nl> <nl> # stdout <nl> log4j . appender . stdout = org . apache . log4j . ConsoleAppender <nl> diff - - git a / examples / hadoop _ cql3 _ word _ count / src / WordCountSetup . java b / examples / hadoop _ cql3 _ word _ count / src / WordCountSetup . java <nl> index ebf7485 . . cffe272 100644 <nl> - - - a / examples / hadoop _ cql3 _ word _ count / src / WordCountSetup . java <nl> + + + b / examples / hadoop _ cql3 _ word _ count / src / WordCountSetup . java <nl> @ @ - 70 , 7 + 70 , 10 @ @ public class WordCountSetup <nl> <nl> client . execute _ cql3 _ query ( ByteBufferUtil . bytes ( query ) , Compression . NONE , ConsistencyLevel . ONE ) ; <nl> <nl> - int magnitude = client . describe _ ring ( WordCount . KEYSPACE ) . size ( ) ; <nl> + 	 String verifyQuery = " select count ( * ) from system . peers " ; <nl> + CqlResult result = client . execute _ cql3 _ query ( ByteBufferUtil . bytes ( verifyQuery ) , Compression . NONE , ConsistencyLevel . ONE ) ; <nl> + <nl> + long magnitude = ByteBufferUtil . toLong ( result . rows . get ( 0 ) . columns . get ( 0 ) . value ) ; <nl> try <nl> { <nl> Thread . sleep ( 1000 * magnitude ) ; <nl> diff - - git a / examples / hadoop _ word _ count / README . txt b / examples / hadoop _ word _ count / README . txt <nl> index cf8a344 . . 9a93908 100644 <nl> - - - a / examples / hadoop _ word _ count / README . txt <nl> + + + b / examples / hadoop _ word _ count / README . txt <nl> @ @ - 37 , 8 + 37 , 10 @ @ Read the code in src / for more details . <nl> The word _ count _ counters example sums the counter columns for a row . The output <nl> is written to a text file in / tmp / word _ count _ counters . <nl> <nl> - * If you want to point wordcount at a real cluster , modify the seed <nl> - and listenaddress settings accordingly . <nl> + * It is recommended to turn off vnodes when running Cassandra with hadoop . <nl> + This is done by setting " num _ tokens : 1 " in cassandra . yaml . If you want to <nl> + point wordcount at a real cluster , modify the seed and listenaddress <nl> + settings accordingly . <nl> <nl> <nl> Troubleshooting <nl> diff - - git a / examples / hadoop _ word _ count / conf / log4j . properties b / examples / hadoop _ word _ count / conf / log4j . properties <nl> index 70f7657 . . 508d60f 100644 <nl> - - - a / examples / hadoop _ word _ count / conf / log4j . properties <nl> + + + b / examples / hadoop _ word _ count / conf / log4j . properties <nl> @ @ - 15 , 7 + 15 , 7 @ @ <nl> # specific language governing permissions and limitations <nl> # under the License . <nl> <nl> - log4j . rootLogger = DEBUG , stdout , F <nl> + log4j . rootLogger = INFO , stdout , F <nl> <nl> # stdout <nl> log4j . appender . stdout = org . apache . log4j . ConsoleAppender <nl> diff - - git a / examples / hadoop _ word _ count / src / WordCountSetup . java b / examples / hadoop _ word _ count / src / WordCountSetup . java <nl> index e222327 . . 6dd2ba7 100644 <nl> - - - a / examples / hadoop _ word _ count / src / WordCountSetup . java <nl> + + + b / examples / hadoop _ word _ count / src / WordCountSetup . java <nl> @ @ - 176 , 10 + 176 , 33 @ @ public class WordCountSetup <nl> KsDef ksDef = new KsDef ( WordCount . KEYSPACE , " org . apache . cassandra . locator . SimpleStrategy " , cfDefList ) ; <nl> ksDef . putToStrategy _ options ( " replication _ factor " , " 1 " ) ; <nl> client . system _ add _ keyspace ( ksDef ) ; <nl> - int magnitude = client . describe _ ring ( WordCount . KEYSPACE ) . size ( ) ; <nl> + <nl> + 	 int magnitude = getNumberOfHosts ( client ) ; <nl> Uninterruptibles . sleepUninterruptibly ( magnitude , TimeUnit . SECONDS ) ; <nl> } <nl> <nl> + private static int getNumberOfHosts ( Cassandra . Iface client ) <nl> + throws InvalidRequestException , UnavailableException , TimedOutException , TException <nl> + { <nl> + client . set _ keyspace ( " system " ) ; <nl> + SlicePredicate predicate = new SlicePredicate ( ) ; <nl> + SliceRange sliceRange = new SliceRange ( ) ; <nl> + sliceRange . setStart ( new byte [ 0 ] ) ; <nl> + sliceRange . setFinish ( new byte [ 0 ] ) ; <nl> + predicate . setSlice _ range ( sliceRange ) ; <nl> + <nl> + KeyRange keyrRange = new KeyRange ( ) ; <nl> + keyrRange . setStart _ key ( new byte [ 0 ] ) ; <nl> + keyrRange . setEnd _ key ( new byte [ 0 ] ) ; <nl> + / / keyrRange . setCount ( 100 ) ; <nl> + <nl> + ColumnParent parent = new ColumnParent ( " peers " ) ; <nl> + <nl> + List < KeySlice > ls = client . get _ range _ slices ( parent , predicate , keyrRange , ConsistencyLevel . ONE ) ; <nl> + <nl> + return ls . size ( ) ; <nl> + } <nl> + <nl> private static Cassandra . Iface createConnection ( ) throws TTransportException <nl> { <nl> if ( System . getProperty ( " cassandra . host " ) = = null | | System . getProperty ( " cassandra . port " ) = = null )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / hadoop / ColumnFamilySplit . java b / src / java / org / apache / cassandra / hadoop / ColumnFamilySplit . java <nl> index 71a1c34 . . bd2e487 100644 <nl> - - - a / src / java / org / apache / cassandra / hadoop / ColumnFamilySplit . java <nl> + + + b / src / java / org / apache / cassandra / hadoop / ColumnFamilySplit . java <nl> @ @ - 100 , 11 + 100 , 10 @ @ public class ColumnFamilySplit extends InputSplit implements Writable , org . apach <nl> @ Override <nl> public String toString ( ) <nl> { <nl> - return " ColumnFamilySplit { " + <nl> - " startToken = ' " + startToken + ' \ ' ' + <nl> - " , endToken = ' " + endToken + ' \ ' ' + <nl> - " , dataNodes = " + ( dataNodes = = null ? null : Arrays . asList ( dataNodes ) ) + <nl> - ' } ' ; <nl> + return " ColumnFamilySplit ( " + <nl> + " ( " + startToken <nl> + + " , ' " + endToken + ' ] ' <nl> + + " @ " + ( dataNodes = = null ? null : Arrays . asList ( dataNodes ) ) + ' ) ' ; <nl> } <nl> <nl> public static ColumnFamilySplit read ( DataInput in ) throws IOException

TEST DIFF:
diff - - git a / examples / hadoop _ cql3 _ word _ count / README . txt b / examples / hadoop _ cql3 _ word _ count / README . txt 
 index f984b02 . . e01632b 100644 
 - - - a / examples / hadoop _ cql3 _ word _ count / README . txt 
 + + + b / examples / hadoop _ cql3 _ word _ count / README . txt 
 @ @ - 36 , 8 + 36 , 10 @ @ Read the code in src / for more details . 
 The word _ count _ counters example sums the counter columns for a row . The output 
 is written to a text file in / tmp / word _ count _ counters . 
 
 - * If you want to point wordcount at a real cluster , modify the seed 
 - and listenaddress settings accordingly . 
 + * It is recommended to turn off vnodes when running Cassandra with hadoop . 
 + This is done by setting " num _ tokens : 1 " in cassandra . yaml . If you want to 
 + point wordcount at a real cluster , modify the seed and listenaddress 
 + settings accordingly . 
 
 
 Troubleshooting 
 diff - - git a / examples / hadoop _ cql3 _ word _ count / conf / log4j . properties b / examples / hadoop _ cql3 _ word _ count / conf / log4j . properties 
 index 70f7657 . . 508d60f 100644 
 - - - a / examples / hadoop _ cql3 _ word _ count / conf / log4j . properties 
 + + + b / examples / hadoop _ cql3 _ word _ count / conf / log4j . properties 
 @ @ - 15 , 7 + 15 , 7 @ @ 
 # specific language governing permissions and limitations 
 # under the License . 
 
 - log4j . rootLogger = DEBUG , stdout , F 
 + log4j . rootLogger = INFO , stdout , F 
 
 # stdout 
 log4j . appender . stdout = org . apache . log4j . ConsoleAppender 
 diff - - git a / examples / hadoop _ cql3 _ word _ count / src / WordCountSetup . java b / examples / hadoop _ cql3 _ word _ count / src / WordCountSetup . java 
 index ebf7485 . . cffe272 100644 
 - - - a / examples / hadoop _ cql3 _ word _ count / src / WordCountSetup . java 
 + + + b / examples / hadoop _ cql3 _ word _ count / src / WordCountSetup . java 
 @ @ - 70 , 7 + 70 , 10 @ @ public class WordCountSetup 
 
 client . execute _ cql3 _ query ( ByteBufferUtil . bytes ( query ) , Compression . NONE , ConsistencyLevel . ONE ) ; 
 
 - int magnitude = client . describe _ ring ( WordCount . KEYSPACE ) . size ( ) ; 
 + 	 String verifyQuery = " select count ( * ) from system . peers " ; 
 + CqlResult result = client . execute _ cql3 _ query ( ByteBufferUtil . bytes ( verifyQuery ) , Compression . NONE , ConsistencyLevel . ONE ) ; 
 + 
 + long magnitude = ByteBufferUtil . toLong ( result . rows . get ( 0 ) . columns . get ( 0 ) . value ) ; 
 try 
 { 
 Thread . sleep ( 1000 * magnitude ) ; 
 diff - - git a / examples / hadoop _ word _ count / README . txt b / examples / hadoop _ word _ count / README . txt 
 index cf8a344 . . 9a93908 100644 
 - - - a / examples / hadoop _ word _ count / README . txt 
 + + + b / examples / hadoop _ word _ count / README . txt 
 @ @ - 37 , 8 + 37 , 10 @ @ Read the code in src / for more details . 
 The word _ count _ counters example sums the counter columns for a row . The output 
 is written to a text file in / tmp / word _ count _ counters . 
 
 - * If you want to point wordcount at a real cluster , modify the seed 
 - and listenaddress settings accordingly . 
 + * It is recommended to turn off vnodes when running Cassandra with hadoop . 
 + This is done by setting " num _ tokens : 1 " in cassandra . yaml . If you want to 
 + point wordcount at a real cluster , modify the seed and listenaddress 
 + settings accordingly . 
 
 
 Troubleshooting 
 diff - - git a / examples / hadoop _ word _ count / conf / log4j . properties b / examples / hadoop _ word _ count / conf / log4j . properties 
 index 70f7657 . . 508d60f 100644 
 - - - a / examples / hadoop _ word _ count / conf / log4j . properties 
 + + + b / examples / hadoop _ word _ count / conf / log4j . properties 
 @ @ - 15 , 7 + 15 , 7 @ @ 
 # specific language governing permissions and limitations 
 # under the License . 
 
 - log4j . rootLogger = DEBUG , stdout , F 
 + log4j . rootLogger = INFO , stdout , F 
 
 # stdout 
 log4j . appender . stdout = org . apache . log4j . ConsoleAppender 
 diff - - git a / examples / hadoop _ word _ count / src / WordCountSetup . java b / examples / hadoop _ word _ count / src / WordCountSetup . java 
 index e222327 . . 6dd2ba7 100644 
 - - - a / examples / hadoop _ word _ count / src / WordCountSetup . java 
 + + + b / examples / hadoop _ word _ count / src / WordCountSetup . java 
 @ @ - 176 , 10 + 176 , 33 @ @ public class WordCountSetup 
 KsDef ksDef = new KsDef ( WordCount . KEYSPACE , " org . apache . cassandra . locator . SimpleStrategy " , cfDefList ) ; 
 ksDef . putToStrategy _ options ( " replication _ factor " , " 1 " ) ; 
 client . system _ add _ keyspace ( ksDef ) ; 
 - int magnitude = client . describe _ ring ( WordCount . KEYSPACE ) . size ( ) ; 
 + 
 + 	 int magnitude = getNumberOfHosts ( client ) ; 
 Uninterruptibles . sleepUninterruptibly ( magnitude , TimeUnit . SECONDS ) ; 
 } 
 
 + private static int getNumberOfHosts ( Cassandra . Iface client ) 
 + throws InvalidRequestException , UnavailableException , TimedOutException , TException 
 + { 
 + client . set _ keyspace ( " system " ) ; 
 + SlicePredicate predicate = new SlicePredicate ( ) ; 
 + SliceRange sliceRange = new SliceRange ( ) ; 
 + sliceRange . setStart ( new byte [ 0 ] ) ; 
 + sliceRange . setFinish ( new byte [ 0 ] ) ; 
 + predicate . setSlice _ range ( sliceRange ) ; 
 + 
 + KeyRange keyrRange = new KeyRange ( ) ; 
 + keyrRange . setStart _ key ( new byte [ 0 ] ) ; 
 + keyrRange . setEnd _ key ( new byte [ 0 ] ) ; 
 + / / keyrRange . setCount ( 100 ) ; 
 + 
 + ColumnParent parent = new ColumnParent ( " peers " ) ; 
 + 
 + List < KeySlice > ls = client . get _ range _ slices ( parent , predicate , keyrRange , ConsistencyLevel . ONE ) ; 
 + 
 + return ls . size ( ) ; 
 + } 
 + 
 private static Cassandra . Iface createConnection ( ) throws TTransportException 
 { 
 if ( System . getProperty ( " cassandra . host " ) = = null | | System . getProperty ( " cassandra . port " ) = = null )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / hadoop / ColumnFamilySplit . java b / src / java / org / apache / cassandra / hadoop / ColumnFamilySplit . java 
 index 71a1c34 . . bd2e487 100644 
 - - - a / src / java / org / apache / cassandra / hadoop / ColumnFamilySplit . java 
 + + + b / src / java / org / apache / cassandra / hadoop / ColumnFamilySplit . java 
 @ @ - 100 , 11 + 100 , 10 @ @ public class ColumnFamilySplit extends InputSplit implements Writable , org . apach 
 @ Override 
 public String toString ( ) 
 { 
 - return " ColumnFamilySplit { " + 
 - " startToken = ' " + startToken + ' \ ' ' + 
 - " , endToken = ' " + endToken + ' \ ' ' + 
 - " , dataNodes = " + ( dataNodes = = null ? null : Arrays . asList ( dataNodes ) ) + 
 - ' } ' ; 
 + return " ColumnFamilySplit ( " + 
 + " ( " + startToken 
 + + " , ' " + endToken + ' ] ' 
 + + " @ " + ( dataNodes = = null ? null : Arrays . asList ( dataNodes ) ) + ' ) ' ; 
 } 
 
 public static ColumnFamilySplit read ( DataInput in ) throws IOException
