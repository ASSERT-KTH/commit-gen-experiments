BLEU SCORE: 0.015284801196484512

TEST MSG: make it clear that varargs in are in effect
GENERATED MSG: Don ' t stutter exception message when failing to unregister CFS mbean .

TEST DIFF (one line): diff - - git a / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java b / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java <nl> index 7f2ab16 . . cf37040 100644 <nl> - - - a / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java <nl> + + + b / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java <nl> @ @ - 105 , 7 + 105 , 7 @ @ public class JavaDriverClient <nl> { <nl> <nl> stmt . setConsistencyLevel ( from ( consistency ) ) ; <nl> - BoundStatement bstmt = stmt . bind ( queryParams . toArray ( new ByteBuffer [ queryParams . size ( ) ] ) ) ; <nl> + BoundStatement bstmt = stmt . bind ( ( Object [ ] ) queryParams . toArray ( new ByteBuffer [ queryParams . size ( ) ] ) ) ; <nl> return getSession ( ) . execute ( bstmt ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index f54c1fe . . b570eff 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 16 , 6 + 16 , 7 @ @ <nl> * Only count compaction as active ( for throttling ) when they have <nl> successfully acquired the compaction lock ( CASSANDRA - 3344 ) <nl> * Fix CLI ` show schema ` to include " compression _ options " ( CASSANDRA - 3368 ) <nl> + * Snapshot to include manifest under LeveledCompactionStrategy ( CASSANDRA - 3359 ) <nl> <nl> 1 . 0 . 0 - final <nl> * close scrubbed sstable fd before deleting it ( CASSANDRA - 3318 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> index a27ee94 . . ecd5421 100644 <nl> - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java <nl> @ @ - 32 , 6 + 32 , 7 @ @ import javax . management . MBeanServer ; <nl> import javax . management . ObjectName ; <nl> <nl> import com . google . common . collect . Iterables ; <nl> + import org . apache . cassandra . db . compaction . LeveledManifest ; <nl> import org . slf4j . Logger ; <nl> import org . slf4j . LoggerFactory ; <nl> <nl> @ @ - 1394 , 29 + 1395 , 40 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean <nl> for ( ColumnFamilyStore cfs : concatWithIndexes ( ) ) <nl> { <nl> DataTracker . View currentView = cfs . markCurrentViewReferenced ( ) ; <nl> + <nl> try <nl> { <nl> for ( SSTableReader ssTable : currentView . sstables ) <nl> { <nl> - try <nl> - { <nl> - / / mkdir <nl> - File dataDirectory = ssTable . descriptor . directory . getParentFile ( ) ; <nl> - String snapshotDirectoryPath = Table . getSnapshotPath ( dataDirectory . getAbsolutePath ( ) , table . name , snapshotName ) ; <nl> - FileUtils . createDirectory ( snapshotDirectoryPath ) ; <nl> + / / mkdir <nl> + File dataDirectory = ssTable . descriptor . directory . getParentFile ( ) ; <nl> + String snapshotDirectoryPath = Table . getSnapshotPath ( dataDirectory . getAbsolutePath ( ) , table . name , snapshotName ) ; <nl> + FileUtils . createDirectory ( snapshotDirectoryPath ) ; <nl> + <nl> + / / hard links <nl> + ssTable . createLinks ( snapshotDirectoryPath ) ; <nl> + if ( logger . isDebugEnabled ( ) ) <nl> + logger . debug ( " Snapshot for " + table + " keyspace data file " + ssTable . getFilename ( ) + <nl> + " created in " + snapshotDirectoryPath ) ; <nl> + } <nl> <nl> - / / hard links <nl> - ssTable . createLinks ( snapshotDirectoryPath ) ; <nl> - if ( logger . isDebugEnabled ( ) ) <nl> - logger . debug ( " Snapshot for " + table + " keyspace data file " + ssTable . getFilename ( ) + <nl> - " created in " + snapshotDirectoryPath ) ; <nl> - } <nl> - catch ( IOException e ) <nl> + if ( compactionStrategy instanceof LeveledCompactionStrategy ) <nl> + { <nl> + File manifest = LeveledManifest . tryGetManifest ( cfs ) ; <nl> + <nl> + if ( manifest ! = null ) <nl> { <nl> - throw new IOError ( e ) ; <nl> + File snapshotDirectory = new File ( Table . getSnapshotPath ( manifest . getParent ( ) , snapshotName ) ) ; <nl> + FileUtils . createDirectory ( snapshotDirectory ) ; <nl> + <nl> + CLibrary . createHardLink ( manifest , new File ( snapshotDirectory , manifest . getName ( ) ) ) ; <nl> } <nl> } <nl> } <nl> + catch ( IOException e ) <nl> + { <nl> + throw new IOError ( e ) ; <nl> + } <nl> finally <nl> { <nl> SSTableReader . releaseReferences ( currentView . sstables ) ; <nl> diff - - git a / src / java / org / apache / cassandra / db / Table . java b / src / java / org / apache / cassandra / db / Table . java <nl> index 0716d2d . . 1569049 100644 <nl> - - - a / src / java / org / apache / cassandra / db / Table . java <nl> + + + b / src / java / org / apache / cassandra / db / Table . java <nl> @ @ - 589 , 7 + 589 , 12 @ @ public class Table <nl> <nl> public static String getSnapshotPath ( String dataDirPath , String tableName , String snapshotName ) <nl> { <nl> - return dataDirPath + File . separator + tableName + File . separator + SNAPSHOT _ SUBDIR _ NAME + File . separator + snapshotName ; <nl> + return getSnapshotPath ( dataDirPath + File . separator + tableName , snapshotName ) ; <nl> + } <nl> + <nl> + public static String getSnapshotPath ( String tableDirectory , String snapshotName ) <nl> + { <nl> + return tableDirectory + File . separator + SNAPSHOT _ SUBDIR _ NAME + File . separator + snapshotName ; <nl> } <nl> <nl> public static Iterable < Table > all ( ) <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> index af75ae6 . . 6d1477d 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> @ @ - 47 , 6 + 47 , 8 @ @ public class LeveledManifest <nl> { <nl> private static final Logger logger = LoggerFactory . getLogger ( LeveledCompactionStrategy . class ) ; <nl> <nl> + public static final String EXTENSION = " . json " ; <nl> + <nl> / * * <nl> * limit the number of L0 sstables we do at once , because compaction bloom filter creation <nl> * uses a pessimistic estimate of how many keys overlap ( none ) , so we risk wasting memory <nl> @ @ - 344 , 8 + 346 , 8 @ @ public class LeveledManifest <nl> File manifestFile = tryGetManifest ( cfs ) ; <nl> if ( manifestFile = = null ) <nl> manifestFile = new File ( new File ( DatabaseDescriptor . getAllDataFileLocations ( ) [ 0 ] , cfs . table . name ) , cfs . columnFamily + " . json " ) ; <nl> - File oldFile = new File ( manifestFile . getPath ( ) . replace ( " . json " , " - old . json " ) ) ; <nl> - File tmpFile = new File ( manifestFile . getPath ( ) . replace ( " . json " , " - tmp . json " ) ) ; <nl> + File oldFile = new File ( manifestFile . getPath ( ) . replace ( EXTENSION , " - old . json " ) ) ; <nl> + File tmpFile = new File ( manifestFile . getPath ( ) . replace ( EXTENSION , " - tmp . json " ) ) ; <nl> <nl> JsonFactory f = new JsonFactory ( ) ; <nl> try <nl> @ @ - 387 , 7 + 389 , 7 @ @ public class LeveledManifest <nl> { <nl> for ( String dir : DatabaseDescriptor . getAllDataFileLocations ( ) ) <nl> { <nl> - File manifestFile = new File ( new File ( dir , cfs . table . name ) , cfs . columnFamily + " . json " ) ; <nl> + File manifestFile = new File ( new File ( dir , cfs . table . name ) , cfs . columnFamily + EXTENSION ) ; <nl> if ( manifestFile . exists ( ) ) <nl> { <nl> logger . debug ( " Found manifest at { } " , manifestFile ) ; <nl> diff - - git a / src / java / org / apache / cassandra / io / util / FileUtils . java b / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> index bc0a75d . . ff8544f 100644 <nl> - - - a / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> + + + b / src / java / org / apache / cassandra / io / util / FileUtils . java <nl> @ @ - 128 , 10 + 128 , 14 @ @ public class FileUtils <nl> <nl> public static void createDirectory ( String directory ) throws IOException <nl> { <nl> - File file = new File ( directory ) ; <nl> - if ( ! file . exists ( ) ) <nl> + createDirectory ( new File ( directory ) ) ; <nl> + } <nl> + <nl> + public static void createDirectory ( File directory ) throws IOException <nl> + { <nl> + if ( ! directory . exists ( ) ) <nl> { <nl> - if ( ! file . mkdirs ( ) ) <nl> + if ( ! directory . mkdirs ( ) ) <nl> { <nl> throw new IOException ( " unable to mkdirs " + directory ) ; <nl> }

TEST DIFF:
diff - - git a / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java b / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java 
 index 7f2ab16 . . cf37040 100644 
 - - - a / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java 
 + + + b / tools / stress / src / org / apache / cassandra / stress / util / JavaDriverClient . java 
 @ @ - 105 , 7 + 105 , 7 @ @ public class JavaDriverClient 
 { 
 
 stmt . setConsistencyLevel ( from ( consistency ) ) ; 
 - BoundStatement bstmt = stmt . bind ( queryParams . toArray ( new ByteBuffer [ queryParams . size ( ) ] ) ) ; 
 + BoundStatement bstmt = stmt . bind ( ( Object [ ] ) queryParams . toArray ( new ByteBuffer [ queryParams . size ( ) ] ) ) ; 
 return getSession ( ) . execute ( bstmt ) ; 
 } 


NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index f54c1fe . . b570eff 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 16 , 6 + 16 , 7 @ @ 
 * Only count compaction as active ( for throttling ) when they have 
 successfully acquired the compaction lock ( CASSANDRA - 3344 ) 
 * Fix CLI ` show schema ` to include " compression _ options " ( CASSANDRA - 3368 ) 
 + * Snapshot to include manifest under LeveledCompactionStrategy ( CASSANDRA - 3359 ) 
 
 1 . 0 . 0 - final 
 * close scrubbed sstable fd before deleting it ( CASSANDRA - 3318 ) 
 diff - - git a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 index a27ee94 . . ecd5421 100644 
 - - - a / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 + + + b / src / java / org / apache / cassandra / db / ColumnFamilyStore . java 
 @ @ - 32 , 6 + 32 , 7 @ @ import javax . management . MBeanServer ; 
 import javax . management . ObjectName ; 
 
 import com . google . common . collect . Iterables ; 
 + import org . apache . cassandra . db . compaction . LeveledManifest ; 
 import org . slf4j . Logger ; 
 import org . slf4j . LoggerFactory ; 
 
 @ @ - 1394 , 29 + 1395 , 40 @ @ public class ColumnFamilyStore implements ColumnFamilyStoreMBean 
 for ( ColumnFamilyStore cfs : concatWithIndexes ( ) ) 
 { 
 DataTracker . View currentView = cfs . markCurrentViewReferenced ( ) ; 
 + 
 try 
 { 
 for ( SSTableReader ssTable : currentView . sstables ) 
 { 
 - try 
 - { 
 - / / mkdir 
 - File dataDirectory = ssTable . descriptor . directory . getParentFile ( ) ; 
 - String snapshotDirectoryPath = Table . getSnapshotPath ( dataDirectory . getAbsolutePath ( ) , table . name , snapshotName ) ; 
 - FileUtils . createDirectory ( snapshotDirectoryPath ) ; 
 + / / mkdir 
 + File dataDirectory = ssTable . descriptor . directory . getParentFile ( ) ; 
 + String snapshotDirectoryPath = Table . getSnapshotPath ( dataDirectory . getAbsolutePath ( ) , table . name , snapshotName ) ; 
 + FileUtils . createDirectory ( snapshotDirectoryPath ) ; 
 + 
 + / / hard links 
 + ssTable . createLinks ( snapshotDirectoryPath ) ; 
 + if ( logger . isDebugEnabled ( ) ) 
 + logger . debug ( " Snapshot for " + table + " keyspace data file " + ssTable . getFilename ( ) + 
 + " created in " + snapshotDirectoryPath ) ; 
 + } 
 
 - / / hard links 
 - ssTable . createLinks ( snapshotDirectoryPath ) ; 
 - if ( logger . isDebugEnabled ( ) ) 
 - logger . debug ( " Snapshot for " + table + " keyspace data file " + ssTable . getFilename ( ) + 
 - " created in " + snapshotDirectoryPath ) ; 
 - } 
 - catch ( IOException e ) 
 + if ( compactionStrategy instanceof LeveledCompactionStrategy ) 
 + { 
 + File manifest = LeveledManifest . tryGetManifest ( cfs ) ; 
 + 
 + if ( manifest ! = null ) 
 { 
 - throw new IOError ( e ) ; 
 + File snapshotDirectory = new File ( Table . getSnapshotPath ( manifest . getParent ( ) , snapshotName ) ) ; 
 + FileUtils . createDirectory ( snapshotDirectory ) ; 
 + 
 + CLibrary . createHardLink ( manifest , new File ( snapshotDirectory , manifest . getName ( ) ) ) ; 
 } 
 } 
 } 
 + catch ( IOException e ) 
 + { 
 + throw new IOError ( e ) ; 
 + } 
 finally 
 { 
 SSTableReader . releaseReferences ( currentView . sstables ) ; 
 diff - - git a / src / java / org / apache / cassandra / db / Table . java b / src / java / org / apache / cassandra / db / Table . java 
 index 0716d2d . . 1569049 100644 
 - - - a / src / java / org / apache / cassandra / db / Table . java 
 + + + b / src / java / org / apache / cassandra / db / Table . java 
 @ @ - 589 , 7 + 589 , 12 @ @ public class Table 
 
 public static String getSnapshotPath ( String dataDirPath , String tableName , String snapshotName ) 
 { 
 - return dataDirPath + File . separator + tableName + File . separator + SNAPSHOT _ SUBDIR _ NAME + File . separator + snapshotName ; 
 + return getSnapshotPath ( dataDirPath + File . separator + tableName , snapshotName ) ; 
 + } 
 + 
 + public static String getSnapshotPath ( String tableDirectory , String snapshotName ) 
 + { 
 + return tableDirectory + File . separator + SNAPSHOT _ SUBDIR _ NAME + File . separator + snapshotName ; 
 } 
 
 public static Iterable < Table > all ( ) 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 index af75ae6 . . 6d1477d 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 @ @ - 47 , 6 + 47 , 8 @ @ public class LeveledManifest 
 { 
 private static final Logger logger = LoggerFactory . getLogger ( LeveledCompactionStrategy . class ) ; 
 
 + public static final String EXTENSION = " . json " ; 
 + 
 / * * 
 * limit the number of L0 sstables we do at once , because compaction bloom filter creation 
 * uses a pessimistic estimate of how many keys overlap ( none ) , so we risk wasting memory 
 @ @ - 344 , 8 + 346 , 8 @ @ public class LeveledManifest 
 File manifestFile = tryGetManifest ( cfs ) ; 
 if ( manifestFile = = null ) 
 manifestFile = new File ( new File ( DatabaseDescriptor . getAllDataFileLocations ( ) [ 0 ] , cfs . table . name ) , cfs . columnFamily + " . json " ) ; 
 - File oldFile = new File ( manifestFile . getPath ( ) . replace ( " . json " , " - old . json " ) ) ; 
 - File tmpFile = new File ( manifestFile . getPath ( ) . replace ( " . json " , " - tmp . json " ) ) ; 
 + File oldFile = new File ( manifestFile . getPath ( ) . replace ( EXTENSION , " - old . json " ) ) ; 
 + File tmpFile = new File ( manifestFile . getPath ( ) . replace ( EXTENSION , " - tmp . json " ) ) ; 
 
 JsonFactory f = new JsonFactory ( ) ; 
 try 
 @ @ - 387 , 7 + 389 , 7 @ @ public class LeveledManifest 
 { 
 for ( String dir : DatabaseDescriptor . getAllDataFileLocations ( ) ) 
 { 
 - File manifestFile = new File ( new File ( dir , cfs . table . name ) , cfs . columnFamily + " . json " ) ; 
 + File manifestFile = new File ( new File ( dir , cfs . table . name ) , cfs . columnFamily + EXTENSION ) ; 
 if ( manifestFile . exists ( ) ) 
 { 
 logger . debug ( " Found manifest at { } " , manifestFile ) ; 
 diff - - git a / src / java / org / apache / cassandra / io / util / FileUtils . java b / src / java / org / apache / cassandra / io / util / FileUtils . java 
 index bc0a75d . . ff8544f 100644 
 - - - a / src / java / org / apache / cassandra / io / util / FileUtils . java 
 + + + b / src / java / org / apache / cassandra / io / util / FileUtils . java 
 @ @ - 128 , 10 + 128 , 14 @ @ public class FileUtils 
 
 public static void createDirectory ( String directory ) throws IOException 
 { 
 - File file = new File ( directory ) ; 
 - if ( ! file . exists ( ) ) 
 + createDirectory ( new File ( directory ) ) ; 
 + } 
 + 
 + public static void createDirectory ( File directory ) throws IOException 
 + { 
 + if ( ! directory . exists ( ) ) 
 { 
 - if ( ! file . mkdirs ( ) ) 
 + if ( ! directory . mkdirs ( ) ) 
 { 
 throw new IOException ( " unable to mkdirs " + directory ) ; 
 }
