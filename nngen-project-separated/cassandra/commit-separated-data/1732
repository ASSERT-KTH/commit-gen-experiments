BLEU SCORE: 0.020980574531482755

TEST MSG: Don ' t execute any functions at prepare - time
GENERATED MSG: Properly reject unknown UDT fields

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index e8cb20b . . 92c09b1 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 3 . 0 <nl> + * Don ' t execute any functions at prepare - time ( CASSANDRA - 9037 ) <nl> * Share file handles between all instances of a SegmentedFile ( CASSANDRA - 8893 ) <nl> * Make it possible to major compact LCS ( CASSANDRA - 7272 ) <nl> * Make FunctionExecutionException extend RequestExecutionException <nl> diff - - git a / src / java / org / apache / cassandra / cql3 / functions / FunctionCall . java b / src / java / org / apache / cassandra / cql3 / functions / FunctionCall . java <nl> index 90ebaaf . . a3bd669 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / functions / FunctionCall . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / functions / FunctionCall . java <nl> @ @ - 140 , 33 + 140 , 13 @ @ public class FunctionCall extends Term . NonTerminal <nl> fun , fun . argTypes ( ) . size ( ) , terms . size ( ) ) ) ; <nl> <nl> List < Term > parameters = new ArrayList < > ( terms . size ( ) ) ; <nl> - boolean allTerminal = true ; <nl> for ( int i = 0 ; i < terms . size ( ) ; i + + ) <nl> { <nl> Term t = terms . get ( i ) . prepare ( keyspace , Functions . makeArgSpec ( receiver . ksName , receiver . cfName , scalarFun , i ) ) ; <nl> - if ( t instanceof NonTerminal ) <nl> - allTerminal = false ; <nl> parameters . add ( t ) ; <nl> } <nl> <nl> - / / If all parameters are terminal and the function is pure , we can <nl> - / / evaluate it now , otherwise we ' d have to wait execution time <nl> - return allTerminal & & scalarFun . isPure ( ) <nl> - ? makeTerminal ( scalarFun , execute ( scalarFun , parameters ) , QueryOptions . DEFAULT . getProtocolVersion ( ) ) <nl> - : new FunctionCall ( scalarFun , parameters ) ; <nl> - } <nl> - <nl> - / / All parameters must be terminal <nl> - private static ByteBuffer execute ( ScalarFunction fun , List < Term > parameters ) throws InvalidRequestException <nl> - { <nl> - List < ByteBuffer > buffers = new ArrayList < > ( parameters . size ( ) ) ; <nl> - for ( Term t : parameters ) <nl> - { <nl> - assert t instanceof Term . Terminal ; <nl> - buffers . add ( ( ( Term . Terminal ) t ) . get ( QueryOptions . DEFAULT . getProtocolVersion ( ) ) ) ; <nl> - } <nl> - <nl> - return executeInternal ( Server . CURRENT _ VERSION , fun , buffers ) ; <nl> + return new FunctionCall ( scalarFun , parameters ) ; <nl> } <nl> <nl> public AssignmentTestable . TestResult testAssignment ( String keyspace , ColumnSpecification receiver )
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index e8cb20b . . 92c09b1 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 3 . 0 
 + * Don ' t execute any functions at prepare - time ( CASSANDRA - 9037 ) 
 * Share file handles between all instances of a SegmentedFile ( CASSANDRA - 8893 ) 
 * Make it possible to major compact LCS ( CASSANDRA - 7272 ) 
 * Make FunctionExecutionException extend RequestExecutionException 
 diff - - git a / src / java / org / apache / cassandra / cql3 / functions / FunctionCall . java b / src / java / org / apache / cassandra / cql3 / functions / FunctionCall . java 
 index 90ebaaf . . a3bd669 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / functions / FunctionCall . java 
 + + + b / src / java / org / apache / cassandra / cql3 / functions / FunctionCall . java 
 @ @ - 140 , 33 + 140 , 13 @ @ public class FunctionCall extends Term . NonTerminal 
 fun , fun . argTypes ( ) . size ( ) , terms . size ( ) ) ) ; 
 
 List < Term > parameters = new ArrayList < > ( terms . size ( ) ) ; 
 - boolean allTerminal = true ; 
 for ( int i = 0 ; i < terms . size ( ) ; i + + ) 
 { 
 Term t = terms . get ( i ) . prepare ( keyspace , Functions . makeArgSpec ( receiver . ksName , receiver . cfName , scalarFun , i ) ) ; 
 - if ( t instanceof NonTerminal ) 
 - allTerminal = false ; 
 parameters . add ( t ) ; 
 } 
 
 - / / If all parameters are terminal and the function is pure , we can 
 - / / evaluate it now , otherwise we ' d have to wait execution time 
 - return allTerminal & & scalarFun . isPure ( ) 
 - ? makeTerminal ( scalarFun , execute ( scalarFun , parameters ) , QueryOptions . DEFAULT . getProtocolVersion ( ) ) 
 - : new FunctionCall ( scalarFun , parameters ) ; 
 - } 
 - 
 - / / All parameters must be terminal 
 - private static ByteBuffer execute ( ScalarFunction fun , List < Term > parameters ) throws InvalidRequestException 
 - { 
 - List < ByteBuffer > buffers = new ArrayList < > ( parameters . size ( ) ) ; 
 - for ( Term t : parameters ) 
 - { 
 - assert t instanceof Term . Terminal ; 
 - buffers . add ( ( ( Term . Terminal ) t ) . get ( QueryOptions . DEFAULT . getProtocolVersion ( ) ) ) ; 
 - } 
 - 
 - return executeInternal ( Server . CURRENT _ VERSION , fun , buffers ) ; 
 + return new FunctionCall ( scalarFun , parameters ) ; 
 } 
 
 public AssignmentTestable . TestResult testAssignment ( String keyspace , ColumnSpecification receiver )

NEAREST DIFF:
ELIMINATEDSENTENCE
