BLEU SCORE: 0.10682175159905853

TEST MSG: Add PowerShell Windows launch scripts
GENERATED MSG: Add standalone sstableupgrade utility .

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 953e778 . . 504064c 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 2 . 1 . 0 - rc1 <nl> + * Add PowerShell Windows launch scripts ( CASSANDRA - 7001 ) <nl> * Make commitlog archive + restore more robust ( CASSANDRA - 6974 ) <nl> * Fix marking commitlogsegments clean ( CASSANDRA - 6959 ) <nl> * Add snapshot " manifest " describing files included ( CASSANDRA - 6326 ) <nl> diff - - git a / bin / cassandra . bat b / bin / cassandra . bat <nl> index ddbb45e . . 172ca8e 100644 <nl> - - - a / bin / cassandra . bat <nl> + + + b / bin / cassandra . bat <nl> @ @ - 18 , 6 + 18 , 7 @ @ <nl> if " % OS % " = = " Windows _ NT " setlocal <nl> <nl> set ARG = % 1 <nl> + if / i " % ARG % " = = " LEGACY " goto runLegacy <nl> set INSTALL = " INSTALL " <nl> set UNINSTALL = " UNINSTALL " <nl> <nl> @ @ - 25 , 14 + 26 , 36 @ @ pushd % ~ dp0 . . <nl> if NOT DEFINED CASSANDRA _ HOME set CASSANDRA _ HOME = % CD % <nl> popd <nl> <nl> + REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + REM See if we have access to run unsigned powershell scripts <nl> + for / F " delims = " % % i in ( ' powershell Get - ExecutionPolicy ' ) do set PERMISSION = % % i <nl> + if " % PERMISSION % " = = " Unrestricted " goto runPowerShell <nl> + goto runLegacy <nl> + <nl> + REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + : runPowerShell <nl> + echo Detected powershell execution permissions . Running with enhanced startup scripts . <nl> + echo starting ps1 : % CASSANDRA _ HOME % / bin / cassandra . ps1 <nl> + powershell / file % CASSANDRA _ HOME % / bin / cassandra . ps1 % * <nl> + goto finally <nl> + <nl> + REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + : runLegacy <nl> + echo WARNING ! Powershell script execution unavailable . <nl> + echo Please use ' powershell Set - ExecutionPolicy Unrestricted ' <nl> + echo on this user - account to run cassandra with fully featured <nl> + echo functionality on this platform . <nl> + <nl> + echo Starting with legacy startup options <nl> + <nl> if NOT DEFINED CASSANDRA _ MAIN set CASSANDRA _ MAIN = org . apache . cassandra . service . CassandraDaemon <nl> if NOT DEFINED JAVA _ HOME goto : err <nl> <nl> REM * * * * * JAVA options * * * * * <nl> set JAVA _ OPTS = - ea ^ <nl> - javaagent : " % CASSANDRA _ HOME % \ lib \ jamm - 0 . 2 . 6 . jar " ^ <nl> - - Xms1G ^ <nl> - - Xmx1G ^ <nl> + - Xms2G ^ <nl> + - Xmx2G ^ <nl> - XX : + HeapDumpOnOutOfMemoryError ^ <nl> - XX : + UseParNewGC ^ <nl> - XX : + UseConcMarkSweepGC ^ <nl> @ @ - 102 , 7 + 125 , 7 @ @ rem set PR _ CLASSPATH = % CASSANDRA _ CLASSPATH % <nl> - - StopMode = jvm - - StopClass = % CASSANDRA _ MAIN % - - StopMethod = stop ^ <nl> + + JvmOptions = % JAVA _ OPTS _ DELM % + + JvmOptions = - DCassandra ^ <nl> - - PidFile pid . txt <nl> - <nl> + <nl> echo Installation of % SERVICE _ JVM % is complete <nl> goto finally <nl> <nl> diff - - git a / bin / cassandra . ps1 b / bin / cassandra . ps1 <nl> new file mode 100644 <nl> index 0000000 . . 19d831a <nl> - - - / dev / null <nl> + + + b / bin / cassandra . ps1 <nl> @ @ - 0 , 0 + 1 , 281 @ @ <nl> + # <nl> + # Licensed to the Apache Software Foundation ( ASF ) under one or more <nl> + # contributor license agreements . See the NOTICE file distributed with <nl> + # this work for additional information regarding copyright ownership . <nl> + # The ASF licenses this file to You under the Apache License , Version 2 . 0 <nl> + # ( the " License " ) ; you may not use this file except in compliance with <nl> + # the License . You may obtain a copy of the License at <nl> + # <nl> + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + # <nl> + # Unless required by applicable law or agreed to in writing , software <nl> + # distributed under the License is distributed on an " AS IS " BASIS , <nl> + # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + # See the License for the specific language governing permissions and <nl> + # limitations under the License . <nl> + param ( <nl> + [ switch ] $ install , <nl> + [ switch ] $ uninstall , <nl> + [ switch ] $ help , <nl> + [ switch ] $ verbose , <nl> + [ switch ] $ f , <nl> + [ string ] $ p , <nl> + [ string ] $ H , <nl> + [ string ] $ E <nl> + ) <nl> + <nl> + $ pidfile = " pid . txt " <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Function ValidateArguments <nl> + { <nl> + if ( $ install - and $ uninstall ) <nl> + { <nl> + exit <nl> + } <nl> + if ( $ help ) <nl> + { <nl> + PrintUsage <nl> + } <nl> + } <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Function PrintUsage <nl> + { <nl> + echo @ " <nl> + usage : cassandra . ps1 [ - f ] [ - h ] [ - p pidfile ] [ - H dumpfile ] [ - E errorfile ] [ - install | - uninstall ] [ - help ] <nl> + - f Run cassandra in foreground <nl> + - install install cassandra as a service <nl> + - uninstall remove cassandra service <nl> + - p pidfile tracked by server and removed on close <nl> + - H change JVM HeapDumpPath <nl> + - E change JVM ErrorFile <nl> + - help print this message <nl> + - verbose Show detailed command - line parameters for cassandra run <nl> + <nl> + NOTE : installing cassandra as a service requires Commons Daemon Service Runner <nl> + available at http : / / commons . apache . org / proper / commons - daemon / " <nl> + " @ <nl> + exit <nl> + } <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + # Note : throughout these scripts we ' re replacing \ with / . This allows clean <nl> + # operation on both command - prompt and cygwin - based environments . <nl> + Function Main <nl> + { <nl> + ValidateArguments <nl> + <nl> + . " $ env : CASSANDRA _ HOME / bin / source - conf . ps1 " <nl> + $ conf = Find - Conf <nl> + if ( $ verbose ) <nl> + { <nl> + echo " Sourcing cassandra config file : $ conf " <nl> + } <nl> + . $ conf <nl> + <nl> + SetCassandraEnvironment <nl> + $ pidfile = " $ env : CASSANDRA _ HOME / $ pidfile " <nl> + <nl> + # Other command line params <nl> + if ( $ H ) <nl> + { <nl> + $ env : JVM _ OPTS = $ env : JVM _ OPTS + " - XX : HeapDumpPath = $ H " <nl> + } <nl> + if ( $ E ) <nl> + { <nl> + $ env : JVM _ OPTS = $ env : JVM _ OPTS + " - XX : ErrorFile = $ E " <nl> + } <nl> + if ( $ p ) <nl> + { <nl> + $ pidfile = " $ p " <nl> + $ env : CASSANDRA _ PARAMS = $ env : CASSANDRA _ PARAMS + " - Dcassandra - pidfile = $ pidfile " <nl> + } <nl> + <nl> + if ( $ install - or $ uninstall ) <nl> + { <nl> + HandleInstallation <nl> + } <nl> + else <nl> + { <nl> + CleanOldRun <nl> + RunCassandra ( $ f ) <nl> + } <nl> + } <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Function HandleInstallation <nl> + { <nl> + $ SERVICE _ JVM = " cassandra " <nl> + $ PATH _ PRUNSRV = " $ env : CASSANDRA _ HOME / bin / daemon / " <nl> + $ PR _ LOGPATH = $ serverPath <nl> + <nl> + if ( ! $ env : PRUNSRV ) <nl> + { <nl> + $ env : PRUNSRV = " $ PATH _ PRUNSRV / prunsrv " <nl> + } <nl> + <nl> + echo " Attempting to delete existing $ SERVICE _ JVM service . . . " <nl> + Start - Sleep - s 2 <nl> + $ proc = Start - Process - FilePath " $ env : PRUNSRV " - ArgumentList " / / DS / / $ SERVICE _ JVM " - PassThru - WindowStyle Hidden <nl> + <nl> + # Quit out if this is uninstall only <nl> + if ( $ uninstall ) <nl> + { <nl> + return <nl> + } <nl> + <nl> + echo " Installing [ $ SERVICE _ JVM ] . If you get registry warnings , re - run as an Administrator " <nl> + Start - Sleep - s 2 <nl> + $ proc = Start - Process - FilePath " $ env : PRUNSRV " - ArgumentList " / / IS / / $ SERVICE _ JVM " - PassThru - WindowStyle Hidden <nl> + <nl> + echo " Setting the parameters for [ $ SERVICE _ JVM ] " <nl> + Start - Sleep - s 2 <nl> + <nl> + # Broken multi - line for convenience - glued back together in a bit <nl> + $ args = @ " <nl> + / / US / / $ SERVICE _ JVM <nl> + - - Jvm = auto - - StdOutput auto - - StdError auto <nl> + - - Classpath = $ env : CLASSPATH <nl> + - - StartMode = jvm - - StartClass = $ env : CASSANDRA _ MAIN - - StartMethod = main <nl> + - - StopMode = jvm - - StopClass = $ env : CASSANDRA _ MAIN - - StopMethod = stop <nl> + + + JvmOptions = $ env : JVM _ OPTS + + JvmOptions = - DCassandra <nl> + - - PidFile $ pidfile <nl> + " @ <nl> + $ args = $ args - replace [ Environment ] : : NewLine , " " <nl> + $ proc = Start - Process - FilePath " $ env : PRUNSRV " - ArgumentList $ args - PassThru - WindowStyle Hidden <nl> + <nl> + echo " Installation of [ $ SERVICE _ JVM ] is complete " <nl> + } <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Function CleanOldRun <nl> + { <nl> + # see if we already have an instance of cassandra running from this folder <nl> + if ( Test - Path $ pidfile ) <nl> + { <nl> + $ a = Get - Content $ pidfile <nl> + <nl> + # file is there but empty <nl> + if ( $ a - eq $ null ) <nl> + { <nl> + Remove - Item $ pidfile <nl> + return <nl> + } <nl> + <nl> + $ proc = Get - Process - Id $ a - ErrorAction SilentlyContinue <nl> + if ( $ proc ) <nl> + { <nl> + echo " ERROR ! There is already an instance of cassandra running from this folder with pid : $ a . Please use stop - server . bat to stop this instance before starting cassandra . " <nl> + exit <nl> + } <nl> + else <nl> + { <nl> + Remove - Item $ pidfile <nl> + } <nl> + } <nl> + } <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Function RunCassandra ( [ string ] $ foreground ) <nl> + { <nl> + echo " Starting cassandra server " <nl> + $ cmd = @ " <nl> + $ env : JAVA _ BIN <nl> + " @ <nl> + $ arg1 = $ env : JVM _ OPTS <nl> + $ arg2 = $ env : CASSANDRA _ PARAMS <nl> + $ arg3 = " - cp $ env : CLASSPATH " <nl> + $ arg4 = @ " <nl> + " $ env : CASSANDRA _ MAIN " <nl> + " @ <nl> + <nl> + $ proc = $ null <nl> + <nl> + if ( $ verbose ) <nl> + { <nl> + echo " Running cassandra with : [ $ cmd $ arg1 $ arg2 $ arg3 $ arg4 ] " <nl> + } <nl> + <nl> + if ( $ foreground - ne " False " ) <nl> + { <nl> + $ cygwin = $ false <nl> + try <nl> + { <nl> + $ uname = uname - o <nl> + $ cygwin = $ true <nl> + } <nl> + catch <nl> + { <nl> + # Failed at uname call , not in cygwin <nl> + } <nl> + <nl> + if ( $ cygwin ) <nl> + { <nl> + # if running on cygwin , we cannot capture ctrl + c signals as mintty traps them and then <nl> + # SIGKILLs processes , so we ' ll need to record our $ pidfile file for future <nl> + # stop - server usage <nl> + if ( ! $ p ) <nl> + { <nl> + $ arg2 = $ arg2 + " - Dcassandra - pidfile = $ pidfile " <nl> + } <nl> + echo @ " <nl> + * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * <nl> + * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * <nl> + Warning ! Running cassandra . bat - f on cygwin usually breaks control + c <nl> + functionality . You ' ll need to use : <nl> + stop - server . bat - p $ pidfile <nl> + to stop your server or kill the java . exe instance . <nl> + * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * <nl> + * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * " <nl> + " @ <nl> + # Note : we can ' t pause here and force user confirmation for a similar reason as there ' s a <nl> + # layer of indirection between powershell and stdin . <nl> + } <nl> + <nl> + $ arg2 = $ arg2 + " - Dcassandra - foreground = yes " <nl> + <nl> + $ pinfo = New - Object System . Diagnostics . ProcessStartInfo <nl> + $ pinfo . FileName = " $ env : JAVA _ BIN " <nl> + $ pinfo . RedirectStandardInput = $ true <nl> + $ pinfo . UseShellExecute = $ false <nl> + $ pinfo . Arguments = $ arg1 , $ arg2 , $ arg3 , $ arg4 <nl> + $ p = New - Object System . Diagnostics . Process <nl> + $ p . StartInfo = $ pinfo <nl> + $ p . Start ( ) | Out - Null <nl> + echo $ p . Id > $ pidfile <nl> + $ p . WaitForExit ( ) <nl> + } <nl> + else <nl> + { <nl> + $ proc = Start - Process - FilePath " $ cmd " - ArgumentList $ arg1 , $ arg2 , $ arg3 , $ arg4 - PassThru - WindowStyle Hidden <nl> + <nl> + # Always store the pid , even if we ' re not registering it with the server <nl> + # The startup script uses this pid file as a protection against duplicate startup from the same folder <nl> + try <nl> + { <nl> + echo $ proc . Id > $ pidfile <nl> + } <nl> + catch <nl> + { <nl> + echo @ " <nl> + WARNING ! Failed to write pidfile to $ pidfile . stop - server . bat and <nl> + startup protection will not be available . <nl> + " @ <nl> + } <nl> + <nl> + $ cassPid = $ proc . Id <nl> + if ( - Not ( $ proc ) - or $ cassPid - eq " " ) <nl> + { <nl> + echo " Error starting cassandra . " <nl> + echo " Run with - verbose for more information about runtime environment " <nl> + } <nl> + elseif ( $ foreground - eq " False " ) <nl> + { <nl> + echo " Started cassandra successfully with pid : $ cassPid " <nl> + } <nl> + } <nl> + } <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Main <nl> diff - - git a / bin / source - conf . ps1 b / bin / source - conf . ps1 <nl> new file mode 100644 <nl> index 0000000 . . 21d1383 <nl> - - - / dev / null <nl> + + + b / bin / source - conf . ps1 <nl> @ @ - 0 , 0 + 1 , 57 @ @ <nl> + # <nl> + # Licensed to the Apache Software Foundation ( ASF ) under one or more <nl> + # contributor license agreements . See the NOTICE file distributed with <nl> + # this work for additional information regarding copyright ownership . <nl> + # The ASF licenses this file to You under the Apache License , Version 2 . 0 <nl> + # ( the " License " ) ; you may not use this file except in compliance with <nl> + # the License . You may obtain a copy of the License at <nl> + # <nl> + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + # <nl> + # Unless required by applicable law or agreed to in writing , software <nl> + # distributed under the License is distributed on an " AS IS " BASIS , <nl> + # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + # See the License for the specific language governing permissions and <nl> + # limitations under the License . <nl> + <nl> + Function Find - Conf <nl> + { <nl> + $ file = " " ; <nl> + # Order of preference on grabbing environment settings : <nl> + # 1 : % CASSANDRA _ INCLUDE % <nl> + # 2a : % USERPROFILE % / cassandra - env . ps1 ( cmd - prompt ) <nl> + # 2b : $ HOME / cassandra - env . ps1 ( cygwin ) <nl> + # 3 : % CASSANDRA _ HOME % / conf / cassandra - env . ps1 <nl> + # 4 : Relative to current working directory ( . . / conf ) <nl> + if ( Test - Path Env : \ CASSANDRA _ INCLUDE ) <nl> + { <nl> + $ file = " $ env : CASSANDRA _ INCLUDE " <nl> + } <nl> + elseif ( Test - Path " $ env : USERPROFILE / cassandra - env . ps1 " ) <nl> + { <nl> + $ file = " $ env : USERPROFILE / cassandra - env . ps1 " <nl> + } <nl> + elseif ( Test - Path " $ env : HOME / cassandra - env . ps1 " ) <nl> + { <nl> + $ file = " $ env : HOME / cassandra - env . ps1 " <nl> + } <nl> + elseif ( Test - Path Env : \ CASSANDRA _ HOME ) <nl> + { <nl> + $ file = " $ env : CASSANDRA _ HOME / conf / cassandra - env . ps1 " <nl> + } <nl> + else <nl> + { <nl> + $ file = [ System . IO . Directory ] : : GetCurrentDirectory ( ) + " / . . / conf / cassandra - env . ps1 " <nl> + } <nl> + $ file = $ file - replace " \ \ " , " / " <nl> + <nl> + if ( Test - Path $ file ) <nl> + { <nl> + return $ file <nl> + } <nl> + else <nl> + { <nl> + echo " Error with environment file resolution . Path : [ $ file ] not found . " <nl> + exit <nl> + } <nl> + } <nl> diff - - git a / bin / stop - server . bat b / bin / stop - server . bat <nl> new file mode 100644 <nl> index 0000000 . . f4b25de <nl> - - - / dev / null <nl> + + + b / bin / stop - server . bat <nl> @ @ - 0 , 0 + 1 , 55 @ @ <nl> + @ REM <nl> + @ REM Licensed to the Apache Software Foundation ( ASF ) under one or more <nl> + @ REM contributor license agreements . See the NOTICE file distributed with <nl> + @ REM this work for additional information regarding copyright ownership . <nl> + @ REM The ASF licenses this file to You under the Apache License , Version 2 . 0 <nl> + @ REM ( the " License " ) ; you may not use this file except in compliance with <nl> + @ REM the License . You may obtain a copy of the License at <nl> + @ REM <nl> + @ REM http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + @ REM <nl> + @ REM Unless required by applicable law or agreed to in writing , software <nl> + @ REM distributed under the License is distributed on an " AS IS " BASIS , <nl> + @ REM WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + @ REM See the License for the specific language governing permissions and <nl> + @ REM limitations under the License . <nl> + <nl> + @ echo off <nl> + if " % OS % " = = " Windows _ NT " setlocal <nl> + <nl> + pushd % ~ dp0 . . <nl> + if NOT DEFINED CASSANDRA _ HOME set CASSANDRA _ HOME = % CD % <nl> + popd <nl> + <nl> + REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + REM See if we have the capabilities of running the powershell scripts <nl> + for / F " delims = " % % i in ( ' powershell Get - ExecutionPolicy ' ) do set PERMISSION = % % i <nl> + if " % PERMISSION % " = = " Unrestricted " goto runPowerShell <nl> + goto runLegacy <nl> + <nl> + REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + : runPowerShell <nl> + REM Need to generate a random title for this command - prompt to determine its pid . <nl> + REM We detach and re - attach the console in stop - server . ps1 to send ctrl + c to the <nl> + REM running cassandra process and need to re - attach here to print results . <nl> + set / A rand = % random % % % ( 100000 - 1 + 1 ) + 1 <nl> + TITLE % rand % <nl> + FOR / F " tokens = 2 delims = " % % A IN ( ' TASKLIST / FI ^ " WINDOWTITLE eq % rand % ^ " / NH ' ) DO set PID = % % A <nl> + <nl> + REM Start with / B - > the control + c event we generate in stop - server . ps1 percolates <nl> + REM up and hits this external batch file if we call powershell directly . <nl> + start / B powershell / file % CASSANDRA _ HOME % / bin / stop - server . ps1 - batchpid % PID % % * <nl> + goto finally <nl> + <nl> + REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + : runLegacy <nl> + echo WARNING ! Powershell script execution unavailable . <nl> + echo Please use ' powershell Set - ExecutionPolicy Unrestricted ' <nl> + echo on this user - account to run cassandra with fully featured <nl> + echo functionality on this platform . <nl> + <nl> + echo Cannot stop server without powershell access . <nl> + goto finally <nl> + <nl> + : finally <nl> + ENDLOCAL <nl> diff - - git a / bin / stop - server . ps1 b / bin / stop - server . ps1 <nl> new file mode 100644 <nl> index 0000000 . . 7c334e8 <nl> - - - / dev / null <nl> + + + b / bin / stop - server . ps1 <nl> @ @ - 0 , 0 + 1 , 178 @ @ <nl> + # <nl> + # Licensed to the Apache Software Foundation ( ASF ) under one or more <nl> + # contributor license agreements . See the NOTICE file distributed with <nl> + # this work for additional information regarding copyright ownership . <nl> + # The ASF licenses this file to You under the Apache License , Version 2 . 0 <nl> + # ( the " License " ) ; you may not use this file except in compliance with <nl> + # the License . You may obtain a copy of the License at <nl> + # <nl> + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + # <nl> + # Unless required by applicable law or agreed to in writing , software <nl> + # distributed under the License is distributed on an " AS IS " BASIS , <nl> + # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + # See the License for the specific language governing permissions and <nl> + # limitations under the License . <nl> + param ( <nl> + [ string ] $ p , <nl> + [ string ] $ batchpid , <nl> + [ switch ] $ f , <nl> + [ switch ] $ silent , <nl> + [ switch ] $ help <nl> + ) <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Function ValidateArguments <nl> + { <nl> + if ( ! $ p ) <nl> + { <nl> + PrintUsage <nl> + } <nl> + if ( $ help ) <nl> + { <nl> + PrintUsage <nl> + } <nl> + } <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Function PrintUsage <nl> + { <nl> + echo @ " <nl> + <nl> + usage : stop - server . ps1 - p pidfile - f [ - help ] <nl> + - p pidfile tracked by server and removed on close . <nl> + - s Silent . Don ' t print success / failure data . <nl> + - f force kill . <nl> + " @ <nl> + exit <nl> + } <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Function KillProcess <nl> + { <nl> + if ( - Not ( Test - Path $ p ) ) <nl> + { <nl> + if ( - Not ( $ silent ) ) <nl> + { <nl> + echo " Error - pidfile not found . Aborting . " <nl> + } <nl> + exit <nl> + } <nl> + <nl> + $ t = @ " <nl> + using System ; <nl> + using System . Diagnostics ; <nl> + using System . IO ; <nl> + using System . Runtime . InteropServices ; <nl> + using System . Threading ; <nl> + <nl> + namespace PowerStopper <nl> + { <nl> + public static class Stopper <nl> + { <nl> + delegate bool ConsoleCtrlDelegate ( CtrlTypes CtrlType ) ; <nl> + <nl> + [ DllImport ( " kernel32 . dll " , SetLastError = true ) ] <nl> + static extern bool AttachConsole ( uint dwProcessId ) ; <nl> + <nl> + [ DllImport ( " kernel32 . dll " , SetLastError = true , ExactSpelling = true ) ] <nl> + static extern bool FreeConsole ( ) ; <nl> + <nl> + enum CtrlTypes : uint <nl> + { <nl> + CTRL _ C _ EVENT = 0 , <nl> + CTRL _ BREAK _ EVENT , <nl> + CTRL _ CLOSE _ EVENT , <nl> + CTRL _ LOGOFF _ EVENT = 5 , <nl> + CTRL _ SHUTDOWN _ EVENT <nl> + } <nl> + <nl> + [ DllImport ( " kernel32 . dll " ) ] <nl> + [ return : MarshalAs ( UnmanagedType . Bool ) ] <nl> + private static extern bool GenerateConsoleCtrlEvent ( CtrlTypes dwCtrlEvent , uint dwProcessGroupId ) ; <nl> + <nl> + [ DllImport ( " kernel32 . dll " ) ] <nl> + static extern bool SetConsoleCtrlHandler ( ConsoleCtrlDelegate HandlerRoutine , bool Add ) ; <nl> + <nl> + / / Our output gets swallowed on ms - dos as we can ' t re - attach our console to the output of the cmd <nl> + / / running the batch file . <nl> + public static void StopProgram ( int pidToKill , int consolePid , bool silent ) <nl> + { <nl> + Process proc = null ; <nl> + try <nl> + { <nl> + proc = Process . GetProcessById ( pidToKill ) ; <nl> + } <nl> + catch ( ArgumentException ) <nl> + { <nl> + if ( ! silent ) <nl> + System . Console . WriteLine ( " Process " + pidToKill + " not found . Aborting . " ) ; <nl> + return ; <nl> + } <nl> + <nl> + if ( ! FreeConsole ( ) ) <nl> + { <nl> + if ( ! silent ) <nl> + System . Console . WriteLine ( " Failed to FreeConsole to attach to running cassandra process . Aborting . " ) ; <nl> + return ; <nl> + } <nl> + <nl> + if ( AttachConsole ( ( uint ) pidToKill ) ) <nl> + { <nl> + / / Disable Ctrl - C handling for our program <nl> + SetConsoleCtrlHandler ( null , true ) ; <nl> + GenerateConsoleCtrlEvent ( CtrlTypes . CTRL _ C _ EVENT , 0 ) ; <nl> + <nl> + / / Must wait here . If we don ' t and re - enable Ctrl - C <nl> + / / handling below too fast , we might terminate ourselves . <nl> + proc . WaitForExit ( 2000 ) ; <nl> + FreeConsole ( ) ; <nl> + <nl> + / / Re - attach to current console to write output <nl> + if ( consolePid > = 0 ) <nl> + AttachConsole ( ( uint ) consolePid ) ; <nl> + <nl> + / / Re - enable Ctrl - C handling or any subsequently started <nl> + / / programs will inherit the disabled state . <nl> + SetConsoleCtrlHandler ( null , false ) ; <nl> + <nl> + if ( ! silent ) <nl> + System . Console . WriteLine ( " Successfully sent ctrl + c to process with id : " + pidToKill + " . " ) ; <nl> + } <nl> + else <nl> + { <nl> + if ( ! silent ) <nl> + { <nl> + string errorMsg = new System . ComponentModel . Win32Exception ( Marshal . GetLastWin32Error ( ) ) . Message ; <nl> + System . Console . WriteLine ( " Error attaching to pid : " + pidToKill + " : " + Marshal . GetLastWin32Error ( ) + " - " + errorMsg ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + " @ <nl> + # cygwin assumes environment variables are case sensitive which causes problems when <nl> + # the type dictionary references ' tmp ' or ' temp ' and throws a System . ArgumentException <nl> + $ oldTmp = $ env : TMP <nl> + $ oldTemp = $ env : Temp <nl> + $ env : TMP = ' ' <nl> + $ env : TEMP = ' ' <nl> + Add - Type - TypeDefinition $ t <nl> + $ env : TMP = $ oldTmp <nl> + $ env : TEMP = $ oldTemp <nl> + <nl> + $ a = Get - Content $ p <nl> + # If run in cygwin , we don ' t get the TITLE / pid combo in stop - server . bat but also don ' t need <nl> + # to worry about reattaching console output as it gets stderr / stdout even after the C # / C + + <nl> + # FreeConsole calls . <nl> + if ( $ batchpid - eq " No " ) <nl> + { <nl> + $ batchpid = - 1 <nl> + } <nl> + <nl> + [ PowerStopper . Stopper ] : : StopProgram ( $ a , $ batchpid , $ silent ) <nl> + } <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + ValidateArguments <nl> + KillProcess <nl> diff - - git a / conf / cassandra - env . ps1 b / conf / cassandra - env . ps1 <nl> new file mode 100644 <nl> index 0000000 . . b3f773f <nl> - - - / dev / null <nl> + + + b / conf / cassandra - env . ps1 <nl> @ @ - 0 , 0 + 1 , 316 @ @ <nl> + # <nl> + # Licensed to the Apache Software Foundation ( ASF ) under one or more <nl> + # contributor license agreements . See the NOTICE file distributed with <nl> + # this work for additional information regarding copyright ownership . <nl> + # The ASF licenses this file to You under the Apache License , Version 2 . 0 <nl> + # ( the " License " ) ; you may not use this file except in compliance with <nl> + # the License . You may obtain a copy of the License at <nl> + # <nl> + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + # <nl> + # Unless required by applicable law or agreed to in writing , software <nl> + # distributed under the License is distributed on an " AS IS " BASIS , <nl> + # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . <nl> + # See the License for the specific language governing permissions and <nl> + # limitations under the License . <nl> + <nl> + # NOTE : All param tuning can be done in the SetCassandraEnvironment Function below <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Function SetCassandraHome ( ) <nl> + { <nl> + if ( ! $ env : CASSANDRA _ HOME ) <nl> + { <nl> + $ cwd = [ System . IO . Directory ] : : GetCurrentDirectory ( ) <nl> + $ cwd = Split - Path $ cwd - parent <nl> + $ env : CASSANDRA _ HOME = $ cwd - replace " \ \ " , " / " <nl> + } <nl> + } <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Function SetCassandraMain ( ) <nl> + { <nl> + if ( ! $ env : CASSANDRA _ MAIN ) <nl> + { <nl> + $ env : CASSANDRA _ MAIN = " org . apache . cassandra . service . CassandraDaemon " <nl> + } <nl> + } <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Function BuildClassPath <nl> + { <nl> + $ cp = " $ env : CASSANDRA _ HOME / conf " <nl> + foreach ( $ file in Get - ChildItem " $ env : CASSANDRA _ HOME / lib / * . jar " ) <nl> + { <nl> + $ file = $ file - replace " \ \ " , " / " <nl> + $ cp = $ cp + " ; " + " $ file " <nl> + } <nl> + <nl> + # Add build / classes / main so it works in development <nl> + $ cp = $ cp + " ; " + " $ env : CASSANDRA _ HOME / build / classes / main ; $ env : CASSANDRA _ HOME / build / classes / thrift " <nl> + $ env : CLASSPATH = $ cp <nl> + } <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Function CalculateHeapSizes <nl> + { <nl> + # Validate that we need to run this function and that our config is good <nl> + if ( $ env : MAX _ HEAP _ SIZE - and $ env : HEAP _ NEWSIZE ) <nl> + { <nl> + return <nl> + } <nl> + if ( ( $ env : MAX _ HEAP _ SIZE - and ! $ env : HEAP _ NEWSIZE ) - or ( ! $ env : MAX _ HEAP _ SIZE - and $ env : HEAP _ NEWSIZE ) ) <nl> + { <nl> + echo " please set or unset MAX _ HEAP _ SIZE and HEAP _ NEWSIZE in pairs " <nl> + exit 1 <nl> + } <nl> + <nl> + $ memObject = Get - WMIObject - class win32 _ physicalmemory <nl> + $ memory = ( $ memObject | Measure - Object Capacity - Sum ) . sum <nl> + $ memoryMB = $ memory / ( 1024 * 1024 ) <nl> + <nl> + $ cpu = gwmi Win32 _ ComputerSystem | Select - Object NumberOfLogicalProcessors <nl> + $ systemCores = $ cpu . NumberOfLogicalProcessors <nl> + <nl> + # set max heap size based on the following <nl> + # max ( min ( 1 / 2 ram , 1024MB ) , min ( 1 / 4 ram , 8GB ) ) <nl> + # calculate 1 / 2 ram and cap to 1024MB <nl> + # calculate 1 / 4 ram and cap to 8192MB <nl> + # pick the max <nl> + $ halfMem = $ memoryMB / 2 <nl> + $ quarterMem = $ halfMem / 2 <nl> + <nl> + if ( $ halfMem - gt 1024 ) <nl> + { <nl> + $ halfMem = 1024 <nl> + } <nl> + if ( $ quarterMem - gt 8192 ) <nl> + { <nl> + $ quarterMem = 8192 <nl> + } <nl> + <nl> + $ maxHeapMB = " " <nl> + if ( $ halfMem - gt $ quarterMem ) <nl> + { <nl> + $ maxHeapMB = $ halfMem <nl> + } <nl> + else <nl> + { <nl> + $ maxHeapMB = $ quarterMem <nl> + } <nl> + $ env : MAX _ HEAP _ SIZE = [ System . Convert ] : : ToString ( $ maxHeapMB ) + " M " <nl> + <nl> + # Young gen : min ( max _ sensible _ per _ modern _ cpu _ core * num _ cores , 1 / 4 <nl> + $ maxYGPerCore = 100 <nl> + $ maxYGTotal = $ maxYGPerCore * $ systemCores <nl> + $ desiredYG = $ maxHeapMB / 4 <nl> + <nl> + if ( $ desiredYG - gt $ maxYGTotal ) <nl> + { <nl> + $ env : HEAP _ NEWSIZE = [ System . Convert ] : : ToString ( $ maxYGTotal ) + " M " <nl> + } <nl> + else <nl> + { <nl> + $ env : HEAP _ NEWSIZE = [ System . Convert ] : : ToString ( $ desiredYG ) + " M " <nl> + } <nl> + } <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Function ParseJVMInfo <nl> + { <nl> + # grab info about the JVM <nl> + $ pinfo = New - Object System . Diagnostics . ProcessStartInfo <nl> + $ pinfo . FileName = " $ env : JAVA _ BIN " <nl> + $ pinfo . RedirectStandardError = $ true <nl> + $ pinfo . RedirectStandardOutput = $ true <nl> + $ pinfo . UseShellExecute = $ false <nl> + $ pinfo . Arguments = " - version " <nl> + $ p = New - Object System . Diagnostics . Process <nl> + $ p . StartInfo = $ pinfo <nl> + $ p . Start ( ) | Out - Null <nl> + $ p . WaitForExit ( ) <nl> + $ stderr = $ p . StandardError . ReadToEnd ( ) <nl> + <nl> + $ sa = $ stderr . Split ( " " " " ) <nl> + $ env : JVM _ VERSION = $ sa [ 1 ] <nl> + <nl> + if ( $ stderr . Contains ( " OpenJDK " ) ) <nl> + { <nl> + $ env : JVM _ VENDOR = " OpenJDK " <nl> + } <nl> + elseif ( $ stderr . Contains ( " Java ( TM ) " ) ) <nl> + { <nl> + $ env : JVM _ VENDOR = " Oracle " <nl> + } <nl> + else <nl> + { <nl> + $ JVM _ VENDOR = " other " <nl> + } <nl> + <nl> + $ pa = $ sa [ 1 ] . Split ( " _ " ) <nl> + $ env : JVM _ PATCH _ VERSION = $ pa [ 1 ] <nl> + <nl> + # get 64 - bit vs . 32 - bit <nl> + $ pinfo . Arguments = " - d64 - version " <nl> + $ pArch = New - Object System . Diagnostics . Process <nl> + $ p . StartInfo = $ pinfo <nl> + $ p . Start ( ) | Out - Null <nl> + $ p . WaitForExit ( ) <nl> + $ stderr = $ p . StandardError . ReadToEnd ( ) <nl> + <nl> + if ( $ stderr . Contains ( " Error " ) ) <nl> + { <nl> + $ env : JVM _ ARCH = " 32 - bit " <nl> + } <nl> + else <nl> + { <nl> + $ env : JVM _ ARCH = " 64 - bit " <nl> + } <nl> + } <nl> + <nl> + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Function SetCassandraEnvironment <nl> + { <nl> + echo " Setting up Cassandra environment " <nl> + if ( Test - Path Env : \ JAVA _ HOME ) <nl> + { <nl> + $ env : JAVA _ BIN = " $ env : JAVA _ HOME / bin / java . exe " <nl> + } <nl> + elseif ( Get - Command " java . exe " ) <nl> + { <nl> + $ env : JAVA _ BIN = " java . exe " <nl> + } <nl> + else <nl> + { <nl> + echo " ERROR ! No JAVA _ HOME set and could not find java . exe in the path . " <nl> + exit <nl> + } <nl> + SetCassandraHome <nl> + $ env : CASSANDRA _ CONF = " $ env : CASSANDRA _ HOME / conf " <nl> + $ env : CASSANDRA _ PARAMS = " - Dcassandra - Dlogback . configurationFile = logback . xml " <nl> + SetCassandraMain <nl> + BuildClassPath <nl> + <nl> + # Override these to set the amount of memory to allocate to the JVM at <nl> + # start - up . For production use you may wish to adjust this for your <nl> + # environment . MAX _ HEAP _ SIZE is the total amount of memory dedicated <nl> + # to the Java heap ; HEAP _ NEWSIZE refers to the size of the young <nl> + # generation . Both MAX _ HEAP _ SIZE and HEAP _ NEWSIZE should be either set <nl> + # or not ( if you set one , set the other ) . <nl> + # <nl> + # The main trade - off for the young generation is that the larger it <nl> + # is , the longer GC pause times will be . The shorter it is , the more <nl> + # expensive GC will be ( usually ) . <nl> + # <nl> + # The example HEAP _ NEWSIZE assumes a modern 8 - core + machine for decent <nl> + # times . If in doubt , and if you do not particularly want to tweak , go <nl> + # 100 MB per physical CPU core . <nl> + <nl> + # $ env : MAX _ HEAP _ SIZE = " 4G " <nl> + # $ env : HEAP _ NEWSIZE = " 800M " <nl> + CalculateHeapSizes <nl> + <nl> + ParseJVMInfo <nl> + # add the jamm javaagent <nl> + if ( ( $ env : JVM _ VENDOR - ne " OpenJDK " ) - or ( $ env : JVM _ VERSION . CompareTo ( " 1 . 6 . 0 " ) - eq 1 ) - or <nl> + ( ( $ env : JVM _ VERSION - eq " 1 . 6 . 0 " ) - and ( $ env : JVM _ PATCH _ VERSION . CompareTo ( " 22 " ) - eq 1 ) ) ) <nl> + { <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - javaagent : $ env : CASSANDRA _ HOME / lib / jamm - 0 . 2 . 6 . jar " <nl> + } <nl> + <nl> + # enable assertions . disabling this in production will give a modest <nl> + # performance benefit ( around 5 % ) . <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - ea " <nl> + <nl> + # Specifies the default port over which Cassandra will be available for <nl> + # JMX connections . <nl> + $ JMX _ PORT = " 7199 " <nl> + <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Dlog4j . defaultInitOverride = true " <nl> + <nl> + # some JVMs will fill up their heap when accessed via JMX , see CASSANDRA - 6541 <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + CMSClassUnloadingEnabled " <nl> + <nl> + # enable thread priorities , primarily so we can give periodic tasks <nl> + # a lower priority to avoid interfering with client workload <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + UseThreadPriorities " <nl> + # allows lowering thread priority without being root . see <nl> + # http : / / tech . stolsvik . com / 2010 / 01 / linux - java - thread - priorities - workar <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : ThreadPriorityPolicy = 42 " <nl> + <nl> + # min and max heap sizes should be set to the same value to avoid <nl> + # stop - the - world GC pauses during resize , and so that we can lock the <nl> + # heap in memory on startup to prevent any of it from being swapped <nl> + # out . <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Xms $ env : MAX _ HEAP _ SIZE " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Xmx $ env : MAX _ HEAP _ SIZE " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Xmn $ env : HEAP _ NEWSIZE " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + HeapDumpOnOutOfMemoryError " <nl> + <nl> + # Per - thread stack size . <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Xss256k " <nl> + <nl> + # Larger interned string table , for gossip ' s benefit ( CASSANDRA - 6410 ) <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : StringTableSize = 1000003 " <nl> + <nl> + # GC tuning options <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + UseParNewGC " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + UseConcMarkSweepGC " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + CMSParallelRemarkEnabled " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : SurvivorRatio = 8 " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : MaxTenuringThreshold = 1 " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : CMSInitiatingOccupancyFraction = 75 " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + UseCMSInitiatingOccupancyOnly " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + UseTLAB " <nl> + if ( ( $ env : JVM _ VERSION . CompareTo ( " 1 . 7 " ) - eq 1 ) - and ( $ env : JVM _ ARCH - eq " 64 - Bit " ) ) <nl> + { <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + UseCondCardMark " <nl> + } <nl> + <nl> + # GC logging options - - uncomment to enable <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + PrintGCDetails " <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + PrintGCDateStamps " <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + PrintHeapAtGC " <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + PrintTenuringDistribution " <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + PrintGCApplicationStoppedTime " <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + PrintPromotionFailure " <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : PrintFLSStatistics = 1 " <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Xloggc : / var / log / cassandra / gc - ` date + % s ` . log " <nl> + <nl> + # If you are using JDK 6u34 7u2 or later you can enable GC log rotation <nl> + # don ' t stick the date in the log name if rotation is on . <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Xloggc : / var / log / cassandra / gc . log " <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + UseGCLogFileRotation " <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : NumberOfGCLogFiles = 10 " <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : GCLogFileSize = 10M " <nl> + <nl> + # Configure the following for JEMallocAllocator and if jemalloc is not available in the system <nl> + # library path ( Example : / usr / local / lib / ) . Usually " make install " will do the right thing . <nl> + # set LD _ LIBRARY _ PATH = < JEMALLOC _ HOME > / lib / <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Djava . library . path = < JEMALLOC _ HOME > / lib / " <nl> + <nl> + # uncomment to have Cassandra JVM listen for remote debuggers / profilers on port 1414 <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Xdebug - Xnoagent - Xrunjdwp : transport = dt _ socket , server = y , suspend = n , address = 1414 " <nl> + <nl> + # Prefer binding to IPv4 network intefaces ( when net . ipv6 . bindv6only = 1 ) . See <nl> + # http : / / bugs . sun . com / bugdatabase / view _ bug . do ? bug _ id = 6342561 ( short version : <nl> + # comment out this entry to enable IPv6 support ) . <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Djava . net . preferIPv4Stack = true " <nl> + <nl> + # jmx : metrics and administration interface <nl> + # <nl> + # add this if you ' re having trouble connecting : <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Djava . rmi . server . hostname = < public name > " <nl> + # <nl> + # see <nl> + # https : / / blogs . oracle . com / jmxetc / entry / troubleshooting _ connection _ problems _ in _ jconsole <nl> + # for more on configuring JMX through firewalls , etc . ( Short version : <nl> + # get it working with no firewall first . ) <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Dcom . sun . management . jmxremote . port = $ JMX _ PORT " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Dcom . sun . management . jmxremote . ssl = false " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Dcom . sun . management . jmxremote . authenticate = false " <nl> + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Dcom . sun . management . jmxremote . password . file = / etc / cassandra / jmxremote . password " <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS $ JVM _ EXTRA _ OPTS " <nl> + <nl> + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Dlog4j . configuration = log4j - server . properties " <nl> + }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / metrics / ReadRepairMetrics . java b / src / java / org / apache / cassandra / metrics / ReadRepairMetrics . java <nl> index 3f48fee . . 5b61e42 100644 <nl> - - - a / src / java / org / apache / cassandra / metrics / ReadRepairMetrics . java <nl> + + + b / src / java / org / apache / cassandra / metrics / ReadRepairMetrics . java <nl> @ @ - 1 , 4 + 1 , 25 @ @ <nl> package org . apache . cassandra . metrics ; <nl> + / * <nl> + * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , <nl> + * software distributed under the License is distributed on an <nl> + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY <nl> + * KIND , either express or implied . See the License for the <nl> + * specific language governing permissions and limitations <nl> + * under the License . <nl> + * <nl> + * / <nl> + <nl> <nl> import java . util . concurrent . TimeUnit ; <nl>

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 953e778 . . 504064c 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 2 . 1 . 0 - rc1 
 + * Add PowerShell Windows launch scripts ( CASSANDRA - 7001 ) 
 * Make commitlog archive + restore more robust ( CASSANDRA - 6974 ) 
 * Fix marking commitlogsegments clean ( CASSANDRA - 6959 ) 
 * Add snapshot " manifest " describing files included ( CASSANDRA - 6326 ) 
 diff - - git a / bin / cassandra . bat b / bin / cassandra . bat 
 index ddbb45e . . 172ca8e 100644 
 - - - a / bin / cassandra . bat 
 + + + b / bin / cassandra . bat 
 @ @ - 18 , 6 + 18 , 7 @ @ 
 if " % OS % " = = " Windows _ NT " setlocal 
 
 set ARG = % 1 
 + if / i " % ARG % " = = " LEGACY " goto runLegacy 
 set INSTALL = " INSTALL " 
 set UNINSTALL = " UNINSTALL " 
 
 @ @ - 25 , 14 + 26 , 36 @ @ pushd % ~ dp0 . . 
 if NOT DEFINED CASSANDRA _ HOME set CASSANDRA _ HOME = % CD % 
 popd 
 
 + REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + REM See if we have access to run unsigned powershell scripts 
 + for / F " delims = " % % i in ( ' powershell Get - ExecutionPolicy ' ) do set PERMISSION = % % i 
 + if " % PERMISSION % " = = " Unrestricted " goto runPowerShell 
 + goto runLegacy 
 + 
 + REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + : runPowerShell 
 + echo Detected powershell execution permissions . Running with enhanced startup scripts . 
 + echo starting ps1 : % CASSANDRA _ HOME % / bin / cassandra . ps1 
 + powershell / file % CASSANDRA _ HOME % / bin / cassandra . ps1 % * 
 + goto finally 
 + 
 + REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + : runLegacy 
 + echo WARNING ! Powershell script execution unavailable . 
 + echo Please use ' powershell Set - ExecutionPolicy Unrestricted ' 
 + echo on this user - account to run cassandra with fully featured 
 + echo functionality on this platform . 
 + 
 + echo Starting with legacy startup options 
 + 
 if NOT DEFINED CASSANDRA _ MAIN set CASSANDRA _ MAIN = org . apache . cassandra . service . CassandraDaemon 
 if NOT DEFINED JAVA _ HOME goto : err 
 
 REM * * * * * JAVA options * * * * * 
 set JAVA _ OPTS = - ea ^ 
 - javaagent : " % CASSANDRA _ HOME % \ lib \ jamm - 0 . 2 . 6 . jar " ^ 
 - - Xms1G ^ 
 - - Xmx1G ^ 
 + - Xms2G ^ 
 + - Xmx2G ^ 
 - XX : + HeapDumpOnOutOfMemoryError ^ 
 - XX : + UseParNewGC ^ 
 - XX : + UseConcMarkSweepGC ^ 
 @ @ - 102 , 7 + 125 , 7 @ @ rem set PR _ CLASSPATH = % CASSANDRA _ CLASSPATH % 
 - - StopMode = jvm - - StopClass = % CASSANDRA _ MAIN % - - StopMethod = stop ^ 
 + + JvmOptions = % JAVA _ OPTS _ DELM % + + JvmOptions = - DCassandra ^ 
 - - PidFile pid . txt 
 - 
 + 
 echo Installation of % SERVICE _ JVM % is complete 
 goto finally 
 
 diff - - git a / bin / cassandra . ps1 b / bin / cassandra . ps1 
 new file mode 100644 
 index 0000000 . . 19d831a 
 - - - / dev / null 
 + + + b / bin / cassandra . ps1 
 @ @ - 0 , 0 + 1 , 281 @ @ 
 + # 
 + # Licensed to the Apache Software Foundation ( ASF ) under one or more 
 + # contributor license agreements . See the NOTICE file distributed with 
 + # this work for additional information regarding copyright ownership . 
 + # The ASF licenses this file to You under the Apache License , Version 2 . 0 
 + # ( the " License " ) ; you may not use this file except in compliance with 
 + # the License . You may obtain a copy of the License at 
 + # 
 + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + # 
 + # Unless required by applicable law or agreed to in writing , software 
 + # distributed under the License is distributed on an " AS IS " BASIS , 
 + # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + # See the License for the specific language governing permissions and 
 + # limitations under the License . 
 + param ( 
 + [ switch ] $ install , 
 + [ switch ] $ uninstall , 
 + [ switch ] $ help , 
 + [ switch ] $ verbose , 
 + [ switch ] $ f , 
 + [ string ] $ p , 
 + [ string ] $ H , 
 + [ string ] $ E 
 + ) 
 + 
 + $ pidfile = " pid . txt " 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Function ValidateArguments 
 + { 
 + if ( $ install - and $ uninstall ) 
 + { 
 + exit 
 + } 
 + if ( $ help ) 
 + { 
 + PrintUsage 
 + } 
 + } 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Function PrintUsage 
 + { 
 + echo @ " 
 + usage : cassandra . ps1 [ - f ] [ - h ] [ - p pidfile ] [ - H dumpfile ] [ - E errorfile ] [ - install | - uninstall ] [ - help ] 
 + - f Run cassandra in foreground 
 + - install install cassandra as a service 
 + - uninstall remove cassandra service 
 + - p pidfile tracked by server and removed on close 
 + - H change JVM HeapDumpPath 
 + - E change JVM ErrorFile 
 + - help print this message 
 + - verbose Show detailed command - line parameters for cassandra run 
 + 
 + NOTE : installing cassandra as a service requires Commons Daemon Service Runner 
 + available at http : / / commons . apache . org / proper / commons - daemon / " 
 + " @ 
 + exit 
 + } 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + # Note : throughout these scripts we ' re replacing \ with / . This allows clean 
 + # operation on both command - prompt and cygwin - based environments . 
 + Function Main 
 + { 
 + ValidateArguments 
 + 
 + . " $ env : CASSANDRA _ HOME / bin / source - conf . ps1 " 
 + $ conf = Find - Conf 
 + if ( $ verbose ) 
 + { 
 + echo " Sourcing cassandra config file : $ conf " 
 + } 
 + . $ conf 
 + 
 + SetCassandraEnvironment 
 + $ pidfile = " $ env : CASSANDRA _ HOME / $ pidfile " 
 + 
 + # Other command line params 
 + if ( $ H ) 
 + { 
 + $ env : JVM _ OPTS = $ env : JVM _ OPTS + " - XX : HeapDumpPath = $ H " 
 + } 
 + if ( $ E ) 
 + { 
 + $ env : JVM _ OPTS = $ env : JVM _ OPTS + " - XX : ErrorFile = $ E " 
 + } 
 + if ( $ p ) 
 + { 
 + $ pidfile = " $ p " 
 + $ env : CASSANDRA _ PARAMS = $ env : CASSANDRA _ PARAMS + " - Dcassandra - pidfile = $ pidfile " 
 + } 
 + 
 + if ( $ install - or $ uninstall ) 
 + { 
 + HandleInstallation 
 + } 
 + else 
 + { 
 + CleanOldRun 
 + RunCassandra ( $ f ) 
 + } 
 + } 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Function HandleInstallation 
 + { 
 + $ SERVICE _ JVM = " cassandra " 
 + $ PATH _ PRUNSRV = " $ env : CASSANDRA _ HOME / bin / daemon / " 
 + $ PR _ LOGPATH = $ serverPath 
 + 
 + if ( ! $ env : PRUNSRV ) 
 + { 
 + $ env : PRUNSRV = " $ PATH _ PRUNSRV / prunsrv " 
 + } 
 + 
 + echo " Attempting to delete existing $ SERVICE _ JVM service . . . " 
 + Start - Sleep - s 2 
 + $ proc = Start - Process - FilePath " $ env : PRUNSRV " - ArgumentList " / / DS / / $ SERVICE _ JVM " - PassThru - WindowStyle Hidden 
 + 
 + # Quit out if this is uninstall only 
 + if ( $ uninstall ) 
 + { 
 + return 
 + } 
 + 
 + echo " Installing [ $ SERVICE _ JVM ] . If you get registry warnings , re - run as an Administrator " 
 + Start - Sleep - s 2 
 + $ proc = Start - Process - FilePath " $ env : PRUNSRV " - ArgumentList " / / IS / / $ SERVICE _ JVM " - PassThru - WindowStyle Hidden 
 + 
 + echo " Setting the parameters for [ $ SERVICE _ JVM ] " 
 + Start - Sleep - s 2 
 + 
 + # Broken multi - line for convenience - glued back together in a bit 
 + $ args = @ " 
 + / / US / / $ SERVICE _ JVM 
 + - - Jvm = auto - - StdOutput auto - - StdError auto 
 + - - Classpath = $ env : CLASSPATH 
 + - - StartMode = jvm - - StartClass = $ env : CASSANDRA _ MAIN - - StartMethod = main 
 + - - StopMode = jvm - - StopClass = $ env : CASSANDRA _ MAIN - - StopMethod = stop 
 + + + JvmOptions = $ env : JVM _ OPTS + + JvmOptions = - DCassandra 
 + - - PidFile $ pidfile 
 + " @ 
 + $ args = $ args - replace [ Environment ] : : NewLine , " " 
 + $ proc = Start - Process - FilePath " $ env : PRUNSRV " - ArgumentList $ args - PassThru - WindowStyle Hidden 
 + 
 + echo " Installation of [ $ SERVICE _ JVM ] is complete " 
 + } 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Function CleanOldRun 
 + { 
 + # see if we already have an instance of cassandra running from this folder 
 + if ( Test - Path $ pidfile ) 
 + { 
 + $ a = Get - Content $ pidfile 
 + 
 + # file is there but empty 
 + if ( $ a - eq $ null ) 
 + { 
 + Remove - Item $ pidfile 
 + return 
 + } 
 + 
 + $ proc = Get - Process - Id $ a - ErrorAction SilentlyContinue 
 + if ( $ proc ) 
 + { 
 + echo " ERROR ! There is already an instance of cassandra running from this folder with pid : $ a . Please use stop - server . bat to stop this instance before starting cassandra . " 
 + exit 
 + } 
 + else 
 + { 
 + Remove - Item $ pidfile 
 + } 
 + } 
 + } 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Function RunCassandra ( [ string ] $ foreground ) 
 + { 
 + echo " Starting cassandra server " 
 + $ cmd = @ " 
 + $ env : JAVA _ BIN 
 + " @ 
 + $ arg1 = $ env : JVM _ OPTS 
 + $ arg2 = $ env : CASSANDRA _ PARAMS 
 + $ arg3 = " - cp $ env : CLASSPATH " 
 + $ arg4 = @ " 
 + " $ env : CASSANDRA _ MAIN " 
 + " @ 
 + 
 + $ proc = $ null 
 + 
 + if ( $ verbose ) 
 + { 
 + echo " Running cassandra with : [ $ cmd $ arg1 $ arg2 $ arg3 $ arg4 ] " 
 + } 
 + 
 + if ( $ foreground - ne " False " ) 
 + { 
 + $ cygwin = $ false 
 + try 
 + { 
 + $ uname = uname - o 
 + $ cygwin = $ true 
 + } 
 + catch 
 + { 
 + # Failed at uname call , not in cygwin 
 + } 
 + 
 + if ( $ cygwin ) 
 + { 
 + # if running on cygwin , we cannot capture ctrl + c signals as mintty traps them and then 
 + # SIGKILLs processes , so we ' ll need to record our $ pidfile file for future 
 + # stop - server usage 
 + if ( ! $ p ) 
 + { 
 + $ arg2 = $ arg2 + " - Dcassandra - pidfile = $ pidfile " 
 + } 
 + echo @ " 
 + * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 + * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 + Warning ! Running cassandra . bat - f on cygwin usually breaks control + c 
 + functionality . You ' ll need to use : 
 + stop - server . bat - p $ pidfile 
 + to stop your server or kill the java . exe instance . 
 + * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 + * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * " 
 + " @ 
 + # Note : we can ' t pause here and force user confirmation for a similar reason as there ' s a 
 + # layer of indirection between powershell and stdin . 
 + } 
 + 
 + $ arg2 = $ arg2 + " - Dcassandra - foreground = yes " 
 + 
 + $ pinfo = New - Object System . Diagnostics . ProcessStartInfo 
 + $ pinfo . FileName = " $ env : JAVA _ BIN " 
 + $ pinfo . RedirectStandardInput = $ true 
 + $ pinfo . UseShellExecute = $ false 
 + $ pinfo . Arguments = $ arg1 , $ arg2 , $ arg3 , $ arg4 
 + $ p = New - Object System . Diagnostics . Process 
 + $ p . StartInfo = $ pinfo 
 + $ p . Start ( ) | Out - Null 
 + echo $ p . Id > $ pidfile 
 + $ p . WaitForExit ( ) 
 + } 
 + else 
 + { 
 + $ proc = Start - Process - FilePath " $ cmd " - ArgumentList $ arg1 , $ arg2 , $ arg3 , $ arg4 - PassThru - WindowStyle Hidden 
 + 
 + # Always store the pid , even if we ' re not registering it with the server 
 + # The startup script uses this pid file as a protection against duplicate startup from the same folder 
 + try 
 + { 
 + echo $ proc . Id > $ pidfile 
 + } 
 + catch 
 + { 
 + echo @ " 
 + WARNING ! Failed to write pidfile to $ pidfile . stop - server . bat and 
 + startup protection will not be available . 
 + " @ 
 + } 
 + 
 + $ cassPid = $ proc . Id 
 + if ( - Not ( $ proc ) - or $ cassPid - eq " " ) 
 + { 
 + echo " Error starting cassandra . " 
 + echo " Run with - verbose for more information about runtime environment " 
 + } 
 + elseif ( $ foreground - eq " False " ) 
 + { 
 + echo " Started cassandra successfully with pid : $ cassPid " 
 + } 
 + } 
 + } 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Main 
 diff - - git a / bin / source - conf . ps1 b / bin / source - conf . ps1 
 new file mode 100644 
 index 0000000 . . 21d1383 
 - - - / dev / null 
 + + + b / bin / source - conf . ps1 
 @ @ - 0 , 0 + 1 , 57 @ @ 
 + # 
 + # Licensed to the Apache Software Foundation ( ASF ) under one or more 
 + # contributor license agreements . See the NOTICE file distributed with 
 + # this work for additional information regarding copyright ownership . 
 + # The ASF licenses this file to You under the Apache License , Version 2 . 0 
 + # ( the " License " ) ; you may not use this file except in compliance with 
 + # the License . You may obtain a copy of the License at 
 + # 
 + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + # 
 + # Unless required by applicable law or agreed to in writing , software 
 + # distributed under the License is distributed on an " AS IS " BASIS , 
 + # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + # See the License for the specific language governing permissions and 
 + # limitations under the License . 
 + 
 + Function Find - Conf 
 + { 
 + $ file = " " ; 
 + # Order of preference on grabbing environment settings : 
 + # 1 : % CASSANDRA _ INCLUDE % 
 + # 2a : % USERPROFILE % / cassandra - env . ps1 ( cmd - prompt ) 
 + # 2b : $ HOME / cassandra - env . ps1 ( cygwin ) 
 + # 3 : % CASSANDRA _ HOME % / conf / cassandra - env . ps1 
 + # 4 : Relative to current working directory ( . . / conf ) 
 + if ( Test - Path Env : \ CASSANDRA _ INCLUDE ) 
 + { 
 + $ file = " $ env : CASSANDRA _ INCLUDE " 
 + } 
 + elseif ( Test - Path " $ env : USERPROFILE / cassandra - env . ps1 " ) 
 + { 
 + $ file = " $ env : USERPROFILE / cassandra - env . ps1 " 
 + } 
 + elseif ( Test - Path " $ env : HOME / cassandra - env . ps1 " ) 
 + { 
 + $ file = " $ env : HOME / cassandra - env . ps1 " 
 + } 
 + elseif ( Test - Path Env : \ CASSANDRA _ HOME ) 
 + { 
 + $ file = " $ env : CASSANDRA _ HOME / conf / cassandra - env . ps1 " 
 + } 
 + else 
 + { 
 + $ file = [ System . IO . Directory ] : : GetCurrentDirectory ( ) + " / . . / conf / cassandra - env . ps1 " 
 + } 
 + $ file = $ file - replace " \ \ " , " / " 
 + 
 + if ( Test - Path $ file ) 
 + { 
 + return $ file 
 + } 
 + else 
 + { 
 + echo " Error with environment file resolution . Path : [ $ file ] not found . " 
 + exit 
 + } 
 + } 
 diff - - git a / bin / stop - server . bat b / bin / stop - server . bat 
 new file mode 100644 
 index 0000000 . . f4b25de 
 - - - / dev / null 
 + + + b / bin / stop - server . bat 
 @ @ - 0 , 0 + 1 , 55 @ @ 
 + @ REM 
 + @ REM Licensed to the Apache Software Foundation ( ASF ) under one or more 
 + @ REM contributor license agreements . See the NOTICE file distributed with 
 + @ REM this work for additional information regarding copyright ownership . 
 + @ REM The ASF licenses this file to You under the Apache License , Version 2 . 0 
 + @ REM ( the " License " ) ; you may not use this file except in compliance with 
 + @ REM the License . You may obtain a copy of the License at 
 + @ REM 
 + @ REM http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + @ REM 
 + @ REM Unless required by applicable law or agreed to in writing , software 
 + @ REM distributed under the License is distributed on an " AS IS " BASIS , 
 + @ REM WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + @ REM See the License for the specific language governing permissions and 
 + @ REM limitations under the License . 
 + 
 + @ echo off 
 + if " % OS % " = = " Windows _ NT " setlocal 
 + 
 + pushd % ~ dp0 . . 
 + if NOT DEFINED CASSANDRA _ HOME set CASSANDRA _ HOME = % CD % 
 + popd 
 + 
 + REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + REM See if we have the capabilities of running the powershell scripts 
 + for / F " delims = " % % i in ( ' powershell Get - ExecutionPolicy ' ) do set PERMISSION = % % i 
 + if " % PERMISSION % " = = " Unrestricted " goto runPowerShell 
 + goto runLegacy 
 + 
 + REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + : runPowerShell 
 + REM Need to generate a random title for this command - prompt to determine its pid . 
 + REM We detach and re - attach the console in stop - server . ps1 to send ctrl + c to the 
 + REM running cassandra process and need to re - attach here to print results . 
 + set / A rand = % random % % % ( 100000 - 1 + 1 ) + 1 
 + TITLE % rand % 
 + FOR / F " tokens = 2 delims = " % % A IN ( ' TASKLIST / FI ^ " WINDOWTITLE eq % rand % ^ " / NH ' ) DO set PID = % % A 
 + 
 + REM Start with / B - > the control + c event we generate in stop - server . ps1 percolates 
 + REM up and hits this external batch file if we call powershell directly . 
 + start / B powershell / file % CASSANDRA _ HOME % / bin / stop - server . ps1 - batchpid % PID % % * 
 + goto finally 
 + 
 + REM - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + : runLegacy 
 + echo WARNING ! Powershell script execution unavailable . 
 + echo Please use ' powershell Set - ExecutionPolicy Unrestricted ' 
 + echo on this user - account to run cassandra with fully featured 
 + echo functionality on this platform . 
 + 
 + echo Cannot stop server without powershell access . 
 + goto finally 
 + 
 + : finally 
 + ENDLOCAL 
 diff - - git a / bin / stop - server . ps1 b / bin / stop - server . ps1 
 new file mode 100644 
 index 0000000 . . 7c334e8 
 - - - / dev / null 
 + + + b / bin / stop - server . ps1 
 @ @ - 0 , 0 + 1 , 178 @ @ 
 + # 
 + # Licensed to the Apache Software Foundation ( ASF ) under one or more 
 + # contributor license agreements . See the NOTICE file distributed with 
 + # this work for additional information regarding copyright ownership . 
 + # The ASF licenses this file to You under the Apache License , Version 2 . 0 
 + # ( the " License " ) ; you may not use this file except in compliance with 
 + # the License . You may obtain a copy of the License at 
 + # 
 + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + # 
 + # Unless required by applicable law or agreed to in writing , software 
 + # distributed under the License is distributed on an " AS IS " BASIS , 
 + # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + # See the License for the specific language governing permissions and 
 + # limitations under the License . 
 + param ( 
 + [ string ] $ p , 
 + [ string ] $ batchpid , 
 + [ switch ] $ f , 
 + [ switch ] $ silent , 
 + [ switch ] $ help 
 + ) 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Function ValidateArguments 
 + { 
 + if ( ! $ p ) 
 + { 
 + PrintUsage 
 + } 
 + if ( $ help ) 
 + { 
 + PrintUsage 
 + } 
 + } 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Function PrintUsage 
 + { 
 + echo @ " 
 + 
 + usage : stop - server . ps1 - p pidfile - f [ - help ] 
 + - p pidfile tracked by server and removed on close . 
 + - s Silent . Don ' t print success / failure data . 
 + - f force kill . 
 + " @ 
 + exit 
 + } 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Function KillProcess 
 + { 
 + if ( - Not ( Test - Path $ p ) ) 
 + { 
 + if ( - Not ( $ silent ) ) 
 + { 
 + echo " Error - pidfile not found . Aborting . " 
 + } 
 + exit 
 + } 
 + 
 + $ t = @ " 
 + using System ; 
 + using System . Diagnostics ; 
 + using System . IO ; 
 + using System . Runtime . InteropServices ; 
 + using System . Threading ; 
 + 
 + namespace PowerStopper 
 + { 
 + public static class Stopper 
 + { 
 + delegate bool ConsoleCtrlDelegate ( CtrlTypes CtrlType ) ; 
 + 
 + [ DllImport ( " kernel32 . dll " , SetLastError = true ) ] 
 + static extern bool AttachConsole ( uint dwProcessId ) ; 
 + 
 + [ DllImport ( " kernel32 . dll " , SetLastError = true , ExactSpelling = true ) ] 
 + static extern bool FreeConsole ( ) ; 
 + 
 + enum CtrlTypes : uint 
 + { 
 + CTRL _ C _ EVENT = 0 , 
 + CTRL _ BREAK _ EVENT , 
 + CTRL _ CLOSE _ EVENT , 
 + CTRL _ LOGOFF _ EVENT = 5 , 
 + CTRL _ SHUTDOWN _ EVENT 
 + } 
 + 
 + [ DllImport ( " kernel32 . dll " ) ] 
 + [ return : MarshalAs ( UnmanagedType . Bool ) ] 
 + private static extern bool GenerateConsoleCtrlEvent ( CtrlTypes dwCtrlEvent , uint dwProcessGroupId ) ; 
 + 
 + [ DllImport ( " kernel32 . dll " ) ] 
 + static extern bool SetConsoleCtrlHandler ( ConsoleCtrlDelegate HandlerRoutine , bool Add ) ; 
 + 
 + / / Our output gets swallowed on ms - dos as we can ' t re - attach our console to the output of the cmd 
 + / / running the batch file . 
 + public static void StopProgram ( int pidToKill , int consolePid , bool silent ) 
 + { 
 + Process proc = null ; 
 + try 
 + { 
 + proc = Process . GetProcessById ( pidToKill ) ; 
 + } 
 + catch ( ArgumentException ) 
 + { 
 + if ( ! silent ) 
 + System . Console . WriteLine ( " Process " + pidToKill + " not found . Aborting . " ) ; 
 + return ; 
 + } 
 + 
 + if ( ! FreeConsole ( ) ) 
 + { 
 + if ( ! silent ) 
 + System . Console . WriteLine ( " Failed to FreeConsole to attach to running cassandra process . Aborting . " ) ; 
 + return ; 
 + } 
 + 
 + if ( AttachConsole ( ( uint ) pidToKill ) ) 
 + { 
 + / / Disable Ctrl - C handling for our program 
 + SetConsoleCtrlHandler ( null , true ) ; 
 + GenerateConsoleCtrlEvent ( CtrlTypes . CTRL _ C _ EVENT , 0 ) ; 
 + 
 + / / Must wait here . If we don ' t and re - enable Ctrl - C 
 + / / handling below too fast , we might terminate ourselves . 
 + proc . WaitForExit ( 2000 ) ; 
 + FreeConsole ( ) ; 
 + 
 + / / Re - attach to current console to write output 
 + if ( consolePid > = 0 ) 
 + AttachConsole ( ( uint ) consolePid ) ; 
 + 
 + / / Re - enable Ctrl - C handling or any subsequently started 
 + / / programs will inherit the disabled state . 
 + SetConsoleCtrlHandler ( null , false ) ; 
 + 
 + if ( ! silent ) 
 + System . Console . WriteLine ( " Successfully sent ctrl + c to process with id : " + pidToKill + " . " ) ; 
 + } 
 + else 
 + { 
 + if ( ! silent ) 
 + { 
 + string errorMsg = new System . ComponentModel . Win32Exception ( Marshal . GetLastWin32Error ( ) ) . Message ; 
 + System . Console . WriteLine ( " Error attaching to pid : " + pidToKill + " : " + Marshal . GetLastWin32Error ( ) + " - " + errorMsg ) ; 
 + } 
 + } 
 + } 
 + } 
 + } 
 + " @ 
 + # cygwin assumes environment variables are case sensitive which causes problems when 
 + # the type dictionary references ' tmp ' or ' temp ' and throws a System . ArgumentException 
 + $ oldTmp = $ env : TMP 
 + $ oldTemp = $ env : Temp 
 + $ env : TMP = ' ' 
 + $ env : TEMP = ' ' 
 + Add - Type - TypeDefinition $ t 
 + $ env : TMP = $ oldTmp 
 + $ env : TEMP = $ oldTemp 
 + 
 + $ a = Get - Content $ p 
 + # If run in cygwin , we don ' t get the TITLE / pid combo in stop - server . bat but also don ' t need 
 + # to worry about reattaching console output as it gets stderr / stdout even after the C # / C + + 
 + # FreeConsole calls . 
 + if ( $ batchpid - eq " No " ) 
 + { 
 + $ batchpid = - 1 
 + } 
 + 
 + [ PowerStopper . Stopper ] : : StopProgram ( $ a , $ batchpid , $ silent ) 
 + } 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + ValidateArguments 
 + KillProcess 
 diff - - git a / conf / cassandra - env . ps1 b / conf / cassandra - env . ps1 
 new file mode 100644 
 index 0000000 . . b3f773f 
 - - - / dev / null 
 + + + b / conf / cassandra - env . ps1 
 @ @ - 0 , 0 + 1 , 316 @ @ 
 + # 
 + # Licensed to the Apache Software Foundation ( ASF ) under one or more 
 + # contributor license agreements . See the NOTICE file distributed with 
 + # this work for additional information regarding copyright ownership . 
 + # The ASF licenses this file to You under the Apache License , Version 2 . 0 
 + # ( the " License " ) ; you may not use this file except in compliance with 
 + # the License . You may obtain a copy of the License at 
 + # 
 + # http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + # 
 + # Unless required by applicable law or agreed to in writing , software 
 + # distributed under the License is distributed on an " AS IS " BASIS , 
 + # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or implied . 
 + # See the License for the specific language governing permissions and 
 + # limitations under the License . 
 + 
 + # NOTE : All param tuning can be done in the SetCassandraEnvironment Function below 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Function SetCassandraHome ( ) 
 + { 
 + if ( ! $ env : CASSANDRA _ HOME ) 
 + { 
 + $ cwd = [ System . IO . Directory ] : : GetCurrentDirectory ( ) 
 + $ cwd = Split - Path $ cwd - parent 
 + $ env : CASSANDRA _ HOME = $ cwd - replace " \ \ " , " / " 
 + } 
 + } 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Function SetCassandraMain ( ) 
 + { 
 + if ( ! $ env : CASSANDRA _ MAIN ) 
 + { 
 + $ env : CASSANDRA _ MAIN = " org . apache . cassandra . service . CassandraDaemon " 
 + } 
 + } 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Function BuildClassPath 
 + { 
 + $ cp = " $ env : CASSANDRA _ HOME / conf " 
 + foreach ( $ file in Get - ChildItem " $ env : CASSANDRA _ HOME / lib / * . jar " ) 
 + { 
 + $ file = $ file - replace " \ \ " , " / " 
 + $ cp = $ cp + " ; " + " $ file " 
 + } 
 + 
 + # Add build / classes / main so it works in development 
 + $ cp = $ cp + " ; " + " $ env : CASSANDRA _ HOME / build / classes / main ; $ env : CASSANDRA _ HOME / build / classes / thrift " 
 + $ env : CLASSPATH = $ cp 
 + } 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Function CalculateHeapSizes 
 + { 
 + # Validate that we need to run this function and that our config is good 
 + if ( $ env : MAX _ HEAP _ SIZE - and $ env : HEAP _ NEWSIZE ) 
 + { 
 + return 
 + } 
 + if ( ( $ env : MAX _ HEAP _ SIZE - and ! $ env : HEAP _ NEWSIZE ) - or ( ! $ env : MAX _ HEAP _ SIZE - and $ env : HEAP _ NEWSIZE ) ) 
 + { 
 + echo " please set or unset MAX _ HEAP _ SIZE and HEAP _ NEWSIZE in pairs " 
 + exit 1 
 + } 
 + 
 + $ memObject = Get - WMIObject - class win32 _ physicalmemory 
 + $ memory = ( $ memObject | Measure - Object Capacity - Sum ) . sum 
 + $ memoryMB = $ memory / ( 1024 * 1024 ) 
 + 
 + $ cpu = gwmi Win32 _ ComputerSystem | Select - Object NumberOfLogicalProcessors 
 + $ systemCores = $ cpu . NumberOfLogicalProcessors 
 + 
 + # set max heap size based on the following 
 + # max ( min ( 1 / 2 ram , 1024MB ) , min ( 1 / 4 ram , 8GB ) ) 
 + # calculate 1 / 2 ram and cap to 1024MB 
 + # calculate 1 / 4 ram and cap to 8192MB 
 + # pick the max 
 + $ halfMem = $ memoryMB / 2 
 + $ quarterMem = $ halfMem / 2 
 + 
 + if ( $ halfMem - gt 1024 ) 
 + { 
 + $ halfMem = 1024 
 + } 
 + if ( $ quarterMem - gt 8192 ) 
 + { 
 + $ quarterMem = 8192 
 + } 
 + 
 + $ maxHeapMB = " " 
 + if ( $ halfMem - gt $ quarterMem ) 
 + { 
 + $ maxHeapMB = $ halfMem 
 + } 
 + else 
 + { 
 + $ maxHeapMB = $ quarterMem 
 + } 
 + $ env : MAX _ HEAP _ SIZE = [ System . Convert ] : : ToString ( $ maxHeapMB ) + " M " 
 + 
 + # Young gen : min ( max _ sensible _ per _ modern _ cpu _ core * num _ cores , 1 / 4 
 + $ maxYGPerCore = 100 
 + $ maxYGTotal = $ maxYGPerCore * $ systemCores 
 + $ desiredYG = $ maxHeapMB / 4 
 + 
 + if ( $ desiredYG - gt $ maxYGTotal ) 
 + { 
 + $ env : HEAP _ NEWSIZE = [ System . Convert ] : : ToString ( $ maxYGTotal ) + " M " 
 + } 
 + else 
 + { 
 + $ env : HEAP _ NEWSIZE = [ System . Convert ] : : ToString ( $ desiredYG ) + " M " 
 + } 
 + } 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Function ParseJVMInfo 
 + { 
 + # grab info about the JVM 
 + $ pinfo = New - Object System . Diagnostics . ProcessStartInfo 
 + $ pinfo . FileName = " $ env : JAVA _ BIN " 
 + $ pinfo . RedirectStandardError = $ true 
 + $ pinfo . RedirectStandardOutput = $ true 
 + $ pinfo . UseShellExecute = $ false 
 + $ pinfo . Arguments = " - version " 
 + $ p = New - Object System . Diagnostics . Process 
 + $ p . StartInfo = $ pinfo 
 + $ p . Start ( ) | Out - Null 
 + $ p . WaitForExit ( ) 
 + $ stderr = $ p . StandardError . ReadToEnd ( ) 
 + 
 + $ sa = $ stderr . Split ( " " " " ) 
 + $ env : JVM _ VERSION = $ sa [ 1 ] 
 + 
 + if ( $ stderr . Contains ( " OpenJDK " ) ) 
 + { 
 + $ env : JVM _ VENDOR = " OpenJDK " 
 + } 
 + elseif ( $ stderr . Contains ( " Java ( TM ) " ) ) 
 + { 
 + $ env : JVM _ VENDOR = " Oracle " 
 + } 
 + else 
 + { 
 + $ JVM _ VENDOR = " other " 
 + } 
 + 
 + $ pa = $ sa [ 1 ] . Split ( " _ " ) 
 + $ env : JVM _ PATCH _ VERSION = $ pa [ 1 ] 
 + 
 + # get 64 - bit vs . 32 - bit 
 + $ pinfo . Arguments = " - d64 - version " 
 + $ pArch = New - Object System . Diagnostics . Process 
 + $ p . StartInfo = $ pinfo 
 + $ p . Start ( ) | Out - Null 
 + $ p . WaitForExit ( ) 
 + $ stderr = $ p . StandardError . ReadToEnd ( ) 
 + 
 + if ( $ stderr . Contains ( " Error " ) ) 
 + { 
 + $ env : JVM _ ARCH = " 32 - bit " 
 + } 
 + else 
 + { 
 + $ env : JVM _ ARCH = " 64 - bit " 
 + } 
 + } 
 + 
 + # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 + Function SetCassandraEnvironment 
 + { 
 + echo " Setting up Cassandra environment " 
 + if ( Test - Path Env : \ JAVA _ HOME ) 
 + { 
 + $ env : JAVA _ BIN = " $ env : JAVA _ HOME / bin / java . exe " 
 + } 
 + elseif ( Get - Command " java . exe " ) 
 + { 
 + $ env : JAVA _ BIN = " java . exe " 
 + } 
 + else 
 + { 
 + echo " ERROR ! No JAVA _ HOME set and could not find java . exe in the path . " 
 + exit 
 + } 
 + SetCassandraHome 
 + $ env : CASSANDRA _ CONF = " $ env : CASSANDRA _ HOME / conf " 
 + $ env : CASSANDRA _ PARAMS = " - Dcassandra - Dlogback . configurationFile = logback . xml " 
 + SetCassandraMain 
 + BuildClassPath 
 + 
 + # Override these to set the amount of memory to allocate to the JVM at 
 + # start - up . For production use you may wish to adjust this for your 
 + # environment . MAX _ HEAP _ SIZE is the total amount of memory dedicated 
 + # to the Java heap ; HEAP _ NEWSIZE refers to the size of the young 
 + # generation . Both MAX _ HEAP _ SIZE and HEAP _ NEWSIZE should be either set 
 + # or not ( if you set one , set the other ) . 
 + # 
 + # The main trade - off for the young generation is that the larger it 
 + # is , the longer GC pause times will be . The shorter it is , the more 
 + # expensive GC will be ( usually ) . 
 + # 
 + # The example HEAP _ NEWSIZE assumes a modern 8 - core + machine for decent 
 + # times . If in doubt , and if you do not particularly want to tweak , go 
 + # 100 MB per physical CPU core . 
 + 
 + # $ env : MAX _ HEAP _ SIZE = " 4G " 
 + # $ env : HEAP _ NEWSIZE = " 800M " 
 + CalculateHeapSizes 
 + 
 + ParseJVMInfo 
 + # add the jamm javaagent 
 + if ( ( $ env : JVM _ VENDOR - ne " OpenJDK " ) - or ( $ env : JVM _ VERSION . CompareTo ( " 1 . 6 . 0 " ) - eq 1 ) - or 
 + ( ( $ env : JVM _ VERSION - eq " 1 . 6 . 0 " ) - and ( $ env : JVM _ PATCH _ VERSION . CompareTo ( " 22 " ) - eq 1 ) ) ) 
 + { 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - javaagent : $ env : CASSANDRA _ HOME / lib / jamm - 0 . 2 . 6 . jar " 
 + } 
 + 
 + # enable assertions . disabling this in production will give a modest 
 + # performance benefit ( around 5 % ) . 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - ea " 
 + 
 + # Specifies the default port over which Cassandra will be available for 
 + # JMX connections . 
 + $ JMX _ PORT = " 7199 " 
 + 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Dlog4j . defaultInitOverride = true " 
 + 
 + # some JVMs will fill up their heap when accessed via JMX , see CASSANDRA - 6541 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + CMSClassUnloadingEnabled " 
 + 
 + # enable thread priorities , primarily so we can give periodic tasks 
 + # a lower priority to avoid interfering with client workload 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + UseThreadPriorities " 
 + # allows lowering thread priority without being root . see 
 + # http : / / tech . stolsvik . com / 2010 / 01 / linux - java - thread - priorities - workar 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : ThreadPriorityPolicy = 42 " 
 + 
 + # min and max heap sizes should be set to the same value to avoid 
 + # stop - the - world GC pauses during resize , and so that we can lock the 
 + # heap in memory on startup to prevent any of it from being swapped 
 + # out . 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Xms $ env : MAX _ HEAP _ SIZE " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Xmx $ env : MAX _ HEAP _ SIZE " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Xmn $ env : HEAP _ NEWSIZE " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + HeapDumpOnOutOfMemoryError " 
 + 
 + # Per - thread stack size . 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Xss256k " 
 + 
 + # Larger interned string table , for gossip ' s benefit ( CASSANDRA - 6410 ) 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : StringTableSize = 1000003 " 
 + 
 + # GC tuning options 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + UseParNewGC " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + UseConcMarkSweepGC " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + CMSParallelRemarkEnabled " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : SurvivorRatio = 8 " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : MaxTenuringThreshold = 1 " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : CMSInitiatingOccupancyFraction = 75 " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + UseCMSInitiatingOccupancyOnly " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + UseTLAB " 
 + if ( ( $ env : JVM _ VERSION . CompareTo ( " 1 . 7 " ) - eq 1 ) - and ( $ env : JVM _ ARCH - eq " 64 - Bit " ) ) 
 + { 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + UseCondCardMark " 
 + } 
 + 
 + # GC logging options - - uncomment to enable 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + PrintGCDetails " 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + PrintGCDateStamps " 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + PrintHeapAtGC " 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + PrintTenuringDistribution " 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + PrintGCApplicationStoppedTime " 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + PrintPromotionFailure " 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : PrintFLSStatistics = 1 " 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Xloggc : / var / log / cassandra / gc - ` date + % s ` . log " 
 + 
 + # If you are using JDK 6u34 7u2 or later you can enable GC log rotation 
 + # don ' t stick the date in the log name if rotation is on . 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Xloggc : / var / log / cassandra / gc . log " 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : + UseGCLogFileRotation " 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : NumberOfGCLogFiles = 10 " 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - XX : GCLogFileSize = 10M " 
 + 
 + # Configure the following for JEMallocAllocator and if jemalloc is not available in the system 
 + # library path ( Example : / usr / local / lib / ) . Usually " make install " will do the right thing . 
 + # set LD _ LIBRARY _ PATH = < JEMALLOC _ HOME > / lib / 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Djava . library . path = < JEMALLOC _ HOME > / lib / " 
 + 
 + # uncomment to have Cassandra JVM listen for remote debuggers / profilers on port 1414 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Xdebug - Xnoagent - Xrunjdwp : transport = dt _ socket , server = y , suspend = n , address = 1414 " 
 + 
 + # Prefer binding to IPv4 network intefaces ( when net . ipv6 . bindv6only = 1 ) . See 
 + # http : / / bugs . sun . com / bugdatabase / view _ bug . do ? bug _ id = 6342561 ( short version : 
 + # comment out this entry to enable IPv6 support ) . 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Djava . net . preferIPv4Stack = true " 
 + 
 + # jmx : metrics and administration interface 
 + # 
 + # add this if you ' re having trouble connecting : 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Djava . rmi . server . hostname = < public name > " 
 + # 
 + # see 
 + # https : / / blogs . oracle . com / jmxetc / entry / troubleshooting _ connection _ problems _ in _ jconsole 
 + # for more on configuring JMX through firewalls , etc . ( Short version : 
 + # get it working with no firewall first . ) 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Dcom . sun . management . jmxremote . port = $ JMX _ PORT " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Dcom . sun . management . jmxremote . ssl = false " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Dcom . sun . management . jmxremote . authenticate = false " 
 + # $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Dcom . sun . management . jmxremote . password . file = / etc / cassandra / jmxremote . password " 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS $ JVM _ EXTRA _ OPTS " 
 + 
 + $ env : JVM _ OPTS = " $ env : JVM _ OPTS - Dlog4j . configuration = log4j - server . properties " 
 + }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / metrics / ReadRepairMetrics . java b / src / java / org / apache / cassandra / metrics / ReadRepairMetrics . java 
 index 3f48fee . . 5b61e42 100644 
 - - - a / src / java / org / apache / cassandra / metrics / ReadRepairMetrics . java 
 + + + b / src / java / org / apache / cassandra / metrics / ReadRepairMetrics . java 
 @ @ - 1 , 4 + 1 , 25 @ @ 
 package org . apache . cassandra . metrics ; 
 + / * 
 + * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , 
 + * software distributed under the License is distributed on an 
 + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 + * KIND , either express or implied . See the License for the 
 + * specific language governing permissions and limitations 
 + * under the License . 
 + * 
 + * / 
 + 
 
 import java . util . concurrent . TimeUnit ; 

