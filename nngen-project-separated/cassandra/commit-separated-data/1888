BLEU SCORE: 0.027611988917697356

TEST MSG: cleanup test : close OffHeapBitSets , use junit
GENERATED MSG: merge from 0 . 7

TEST DIFF (one line): diff - - git a / test / unit / org / apache / cassandra / utils / SerializationsTest . java b / test / unit / org / apache / cassandra / utils / SerializationsTest . java <nl> index 46fa017 . . d5b45d1 100644 <nl> - - - a / test / unit / org / apache / cassandra / utils / SerializationsTest . java <nl> + + + b / test / unit / org / apache / cassandra / utils / SerializationsTest . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import org . apache . cassandra . AbstractSerializationsTester ; <nl> import org . apache . cassandra . io . util . DataOutputStreamAndChannel ; <nl> import org . apache . cassandra . service . StorageService ; <nl> <nl> + import org . junit . Assert ; <nl> import org . junit . Test ; <nl> <nl> import java . io . DataInputStream ; <nl> @ @ - 32 , 12 + 33 , 15 @ @ public class SerializationsTest extends AbstractSerializationsTester <nl> <nl> private void testBloomFilterWrite ( boolean offheap ) throws IOException <nl> { <nl> - IFilter bf = FilterFactory . getFilter ( 1000000 , 0 . 0001 , offheap ) ; <nl> - for ( int i = 0 ; i < 100 ; i + + ) <nl> - bf . add ( StorageService . getPartitioner ( ) . getTokenFactory ( ) . toByteArray ( StorageService . getPartitioner ( ) . getRandomToken ( ) ) ) ; <nl> - DataOutputStreamAndChannel out = getOutput ( " utils . BloomFilter . bin " ) ; <nl> - FilterFactory . serialize ( bf , out ) ; <nl> - out . close ( ) ; <nl> + try ( IFilter bf = FilterFactory . getFilter ( 1000000 , 0 . 0001 , offheap ) ) <nl> + { <nl> + for ( int i = 0 ; i < 100 ; i + + ) <nl> + bf . add ( StorageService . getPartitioner ( ) . getTokenFactory ( ) . toByteArray ( StorageService . getPartitioner ( ) . getRandomToken ( ) ) ) ; <nl> + try ( DataOutputStreamAndChannel out = getOutput ( " utils . BloomFilter . bin " ) ) <nl> + { <nl> + FilterFactory . serialize ( bf , out ) ; <nl> + } <nl> + } <nl> } <nl> <nl> @ Test <nl> @ @ - 46 , 9 + 50 , 11 @ @ public class SerializationsTest extends AbstractSerializationsTester <nl> if ( EXECUTE _ WRITES ) <nl> testBloomFilterWrite ( true ) ; <nl> <nl> - DataInputStream in = getInput ( " utils . BloomFilter . bin " ) ; <nl> - assert FilterFactory . deserialize ( in , true ) ! = null ; <nl> - in . close ( ) ; <nl> + try ( DataInputStream in = getInput ( " utils . BloomFilter . bin " ) ; <nl> + IFilter filter = FilterFactory . deserialize ( in , true ) ) <nl> + { <nl> + Assert . assertNotNull ( filter ) ; <nl> + } <nl> } <nl> <nl> private void testEstimatedHistogramWrite ( ) throws IOException <nl> @ @ - 65 , 11 + 71 , 12 @ @ public class SerializationsTest extends AbstractSerializationsTester <nl> data [ offsets . length ] = 100000 ; <nl> EstimatedHistogram hist2 = new EstimatedHistogram ( offsets , data ) ; <nl> <nl> - DataOutputStreamAndChannel out = getOutput ( " utils . EstimatedHistogram . bin " ) ; <nl> - EstimatedHistogram . serializer . serialize ( hist0 , out ) ; <nl> - EstimatedHistogram . serializer . serialize ( hist1 , out ) ; <nl> - EstimatedHistogram . serializer . serialize ( hist2 , out ) ; <nl> - out . close ( ) ; <nl> + try ( DataOutputStreamAndChannel out = getOutput ( " utils . EstimatedHistogram . bin " ) ) <nl> + { <nl> + EstimatedHistogram . serializer . serialize ( hist0 , out ) ; <nl> + EstimatedHistogram . serializer . serialize ( hist1 , out ) ; <nl> + EstimatedHistogram . serializer . serialize ( hist2 , out ) ; <nl> + } <nl> } <nl> <nl> @ Test <nl> @ @ - 78 , 10 + 85 , 11 @ @ public class SerializationsTest extends AbstractSerializationsTester <nl> if ( EXECUTE _ WRITES ) <nl> testEstimatedHistogramWrite ( ) ; <nl> <nl> - DataInputStream in = getInput ( " utils . EstimatedHistogram . bin " ) ; <nl> - assert EstimatedHistogram . serializer . deserialize ( in ) ! = null ; <nl> - assert EstimatedHistogram . serializer . deserialize ( in ) ! = null ; <nl> - assert EstimatedHistogram . serializer . deserialize ( in ) ! = null ; <nl> - in . close ( ) ; <nl> + try ( DataInputStream in = getInput ( " utils . EstimatedHistogram . bin " ) ) <nl> + { <nl> + Assert . assertNotNull ( EstimatedHistogram . serializer . deserialize ( in ) ) ; <nl> + Assert . assertNotNull ( EstimatedHistogram . serializer . deserialize ( in ) ) ; <nl> + Assert . assertNotNull ( EstimatedHistogram . serializer . deserialize ( in ) ) ; <nl> + } <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index eec904a . . 982454c 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 59 , 6 + 59 , 8 @ @ <nl> the old ones ( CASSANDRA - 1644 ) <nl> * upgrade to Thrift 0 . 5 ( CASSANDRA - 1367 ) <nl> * renamed CL . DCQUORUM to LOCAL _ QUORUM and DCQUORUMSYNC to EACH _ QUORUM <nl> + * cli truncate support ( CASSANDRA - 1653 ) <nl> + * update GC settings in cassandra . bat ( CASSANDRA - 1636 ) <nl> <nl> <nl> 0 . 7 - beta2 <nl> diff - - git a / src / java / org / apache / cassandra / cli / Cli . g b / src / java / org / apache / cassandra / cli / Cli . g <nl> index e59c608 . . a9229ee 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / Cli . g <nl> + + + b / src / java / org / apache / cassandra / cli / Cli . g <nl> @ @ - 55 , 6 + 55 , 7 @ @ tokens { <nl> NODE _ UPDATE _ KEYSPACE ; <nl> NODE _ UPDATE _ COLUMN _ FAMILY ; <nl> NODE _ LIST ; <nl> + NODE _ TRUNCATE ; <nl> <nl> / / Internal Nodes . <nl> NODE _ COLUMN _ ACCESS ; <nl> @ @ - 123 , 6 + 124 , 7 @ @ statement <nl> | setStatement <nl> | showStatement <nl> | listStatement <nl> + | truncateStatement <nl> | - > ^ ( NODE _ NO _ OP ) <nl> ; <nl> <nl> @ @ - 174 , 6 + 176 , 8 @ @ helpStatement <nl> - > ^ ( NODE _ HELP NODE _ THRIFT _ COUNT ) <nl> | K _ HELP K _ LIST <nl> - > ^ ( NODE _ HELP NODE _ LIST ) <nl> + | K _ HELP K _ TRUNCATE <nl> + - > ^ ( NODE _ HELP NODE _ TRUNCATE ) <nl> | K _ HELP <nl> - > ^ ( NODE _ HELP ) <nl> | ' ? ' <nl> @ @ - 231 , 6 + 235 , 11 @ @ listStatement <nl> - > ^ ( NODE _ LIST columnFamily keyRangeExpr ? ^ ( NODE _ LIMIT $ limit ) ? ) <nl> ; <nl> <nl> + truncateStatement <nl> + : K _ TRUNCATE columnFamily <nl> + - > ^ ( NODE _ TRUNCATE columnFamily ) <nl> + ; <nl> + <nl> showClusterName <nl> : K _ SHOW K _ CLUSTER K _ NAME <nl> - > ^ ( NODE _ SHOW _ CLUSTER _ NAME ) <nl> @ @ - 430 , 6 + 439 , 7 @ @ K _ AND : ' AND ' ; <nl> K _ UPDATE : ' UPDATE ' ; <nl> K _ LIST : ' LIST ' ; <nl> K _ LIMIT : ' LIMIT ' ; <nl> + K _ TRUNCATE : ' TRUNCATE ' ; <nl> <nl> / / private syntactic rules <nl> fragment <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java <nl> index b6ace98 . . b63105a 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliClient . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliClient . java <nl> @ @ - 171 , 6 + 171 , 9 @ @ public class CliClient extends CliUserHelp <nl> case CliParser . NODE _ LIST : <nl> executeList ( tree ) ; <nl> break ; <nl> + case CliParser . NODE _ TRUNCATE : <nl> + executeTruncate ( tree . getChild ( 0 ) . getText ( ) ) ; <nl> + break ; <nl> case CliParser . NODE _ NO _ OP : <nl> / / comment lines come here ; they are treated as no ops . <nl> break ; <nl> @ @ - 943 , 6 + 946 , 30 @ @ public class CliClient extends CliUserHelp <nl> printSliceList ( columnFamilyDef , keySlices ) ; <nl> } <nl> <nl> + / / TRUNCATE < columnFamily > <nl> + private void executeTruncate ( String columnFamily ) <nl> + { <nl> + if ( ! CliMain . isConnected ( ) | | ! hasKeySpace ( ) ) <nl> + return ; <nl> + <nl> + / / getting CfDef , it will fail if there is no such column family in current keySpace . <nl> + CfDef cfDef = getCfDef ( columnFamily ) ; <nl> + <nl> + try <nl> + { <nl> + thriftClient . truncate ( cfDef . getName ( ) ) ; <nl> + sessionState . out . println ( columnFamily + " truncated . " ) ; <nl> + } <nl> + catch ( InvalidRequestException e ) <nl> + { <nl> + throw new RuntimeException ( e . getWhy ( ) ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + throw new RuntimeException ( e . getMessage ( ) ) ; <nl> + } <nl> + } <nl> + <nl> / / SHOW API VERSION <nl> private void executeShowVersion ( ) throws TException <nl> { <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliCompleter . java b / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> index f541fe5 . . b033d8f 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliCompleter . java <nl> @ @ - 55 , 12 + 55 , 16 @ @ public class CliCompleter extends SimpleCompletor <nl> " help set " , <nl> " help del " , <nl> " help count " , <nl> + " help list " , <nl> + " help truncate " <nl> } ; <nl> private static String [ ] keyspaceCommands = { <nl> " get " , <nl> " set " , <nl> " count " , <nl> - " del " <nl> + " del " , <nl> + " list " , <nl> + " truncate " <nl> } ; <nl> <nl> public CliCompleter ( ) <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliUserHelp . java b / src / java / org / apache / cassandra / cli / CliUserHelp . java <nl> index 7c512e2 . . db6a779 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliUserHelp . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliUserHelp . java <nl> @ @ - 281 , 6 + 281 , 13 @ @ public class CliUserHelp { <nl> state . out . println ( " list Users [ j : ] limit 40 " ) ; <nl> break ; <nl> <nl> + case CliParser . NODE _ TRUNCATE : <nl> + state . out . println ( " truncate < column _ family > " ) ; <nl> + state . out . println ( " Truncate specified column family . \ n " ) ; <nl> + state . out . println ( " example : " ) ; <nl> + state . out . println ( " truncate Category " ) ; <nl> + break ; <nl> + <nl> default : <nl> state . out . println ( " ? " ) ; <nl> break ; <nl> @ @ - 324 , 7 + 331 , 8 @ @ public class CliUserHelp { <nl> state . out . println ( " del < cf > [ ' < key > ' ] [ ' < super > ' ] [ ' < col > ' ] Delete sub column . " ) ; <nl> state . out . println ( " count < cf > [ ' < key > ' ] Count columns in record . " ) ; <nl> state . out . println ( " count < cf > [ ' < key > ' ] [ ' < super > ' ] Count columns in a super column . " ) ; <nl> - state . out . println ( " list < cf > List all rows in the column family . " ) ; <nl> + state . out . println ( " truncate < column _ family > Truncate specified column family . " ) ; <nl> + state . out . println ( " list < cf > List all rows in the column family . " ) ; <nl> state . out . println ( " list < cf > [ < startKey > : ] " ) ; <nl> state . out . println ( " List rows in the column family beginning with < startKey > . " ) ; <nl> state . out . println ( " list < cf > [ < startKey > : < endKey > ] " ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / cli / CliTest . java b / test / unit / org / apache / cassandra / cli / CliTest . java <nl> index 24a3de0 . . eddcafd 100644 <nl> - - - a / test / unit / org / apache / cassandra / cli / CliTest . java <nl> + + + b / test / unit / org / apache / cassandra / cli / CliTest . java <nl> @ @ - 52 , 6 + 52 , 7 @ @ public class CliTest extends TestCase <nl> " list CF3 [ h : ] " , <nl> " list CF3 limit 10 " , <nl> " list CF3 [ h : g ] limit 10 " , <nl> + " truncate CF1 " , <nl> " update keyspace TestKeySpace with placement _ strategy = ' org . apache . cassandra . locator . LocalStrategy ' " , <nl> " update keyspace TestKeySpace with replication _ factor = 1 and strategy _ options = [ { DC1 : 3 , DC2 : 4 , DC5 : 1 } ] " <nl> } ; <nl> @ @ - 101 , 6 + 102 , 10 @ @ public class CliTest extends TestCase <nl> assertTrue ( result . startsWith ( " = > ( column = " ) ) ; <nl> } <nl> } <nl> + else if ( statement . startsWith ( " truncate " ) ) <nl> + { <nl> + assertTrue ( result . contains ( " truncated . " ) ) ; <nl> + } <nl> <nl> outStream . reset ( ) ; / / reset stream so we have only output from next statement all the time <nl> errStream . reset ( ) ; / / no errors to the end user .

TEST DIFF:
diff - - git a / test / unit / org / apache / cassandra / utils / SerializationsTest . java b / test / unit / org / apache / cassandra / utils / SerializationsTest . java 
 index 46fa017 . . d5b45d1 100644 
 - - - a / test / unit / org / apache / cassandra / utils / SerializationsTest . java 
 + + + b / test / unit / org / apache / cassandra / utils / SerializationsTest . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import org . apache . cassandra . AbstractSerializationsTester ; 
 import org . apache . cassandra . io . util . DataOutputStreamAndChannel ; 
 import org . apache . cassandra . service . StorageService ; 
 
 + import org . junit . Assert ; 
 import org . junit . Test ; 
 
 import java . io . DataInputStream ; 
 @ @ - 32 , 12 + 33 , 15 @ @ public class SerializationsTest extends AbstractSerializationsTester 
 
 private void testBloomFilterWrite ( boolean offheap ) throws IOException 
 { 
 - IFilter bf = FilterFactory . getFilter ( 1000000 , 0 . 0001 , offheap ) ; 
 - for ( int i = 0 ; i < 100 ; i + + ) 
 - bf . add ( StorageService . getPartitioner ( ) . getTokenFactory ( ) . toByteArray ( StorageService . getPartitioner ( ) . getRandomToken ( ) ) ) ; 
 - DataOutputStreamAndChannel out = getOutput ( " utils . BloomFilter . bin " ) ; 
 - FilterFactory . serialize ( bf , out ) ; 
 - out . close ( ) ; 
 + try ( IFilter bf = FilterFactory . getFilter ( 1000000 , 0 . 0001 , offheap ) ) 
 + { 
 + for ( int i = 0 ; i < 100 ; i + + ) 
 + bf . add ( StorageService . getPartitioner ( ) . getTokenFactory ( ) . toByteArray ( StorageService . getPartitioner ( ) . getRandomToken ( ) ) ) ; 
 + try ( DataOutputStreamAndChannel out = getOutput ( " utils . BloomFilter . bin " ) ) 
 + { 
 + FilterFactory . serialize ( bf , out ) ; 
 + } 
 + } 
 } 
 
 @ Test 
 @ @ - 46 , 9 + 50 , 11 @ @ public class SerializationsTest extends AbstractSerializationsTester 
 if ( EXECUTE _ WRITES ) 
 testBloomFilterWrite ( true ) ; 
 
 - DataInputStream in = getInput ( " utils . BloomFilter . bin " ) ; 
 - assert FilterFactory . deserialize ( in , true ) ! = null ; 
 - in . close ( ) ; 
 + try ( DataInputStream in = getInput ( " utils . BloomFilter . bin " ) ; 
 + IFilter filter = FilterFactory . deserialize ( in , true ) ) 
 + { 
 + Assert . assertNotNull ( filter ) ; 
 + } 
 } 
 
 private void testEstimatedHistogramWrite ( ) throws IOException 
 @ @ - 65 , 11 + 71 , 12 @ @ public class SerializationsTest extends AbstractSerializationsTester 
 data [ offsets . length ] = 100000 ; 
 EstimatedHistogram hist2 = new EstimatedHistogram ( offsets , data ) ; 
 
 - DataOutputStreamAndChannel out = getOutput ( " utils . EstimatedHistogram . bin " ) ; 
 - EstimatedHistogram . serializer . serialize ( hist0 , out ) ; 
 - EstimatedHistogram . serializer . serialize ( hist1 , out ) ; 
 - EstimatedHistogram . serializer . serialize ( hist2 , out ) ; 
 - out . close ( ) ; 
 + try ( DataOutputStreamAndChannel out = getOutput ( " utils . EstimatedHistogram . bin " ) ) 
 + { 
 + EstimatedHistogram . serializer . serialize ( hist0 , out ) ; 
 + EstimatedHistogram . serializer . serialize ( hist1 , out ) ; 
 + EstimatedHistogram . serializer . serialize ( hist2 , out ) ; 
 + } 
 } 
 
 @ Test 
 @ @ - 78 , 10 + 85 , 11 @ @ public class SerializationsTest extends AbstractSerializationsTester 
 if ( EXECUTE _ WRITES ) 
 testEstimatedHistogramWrite ( ) ; 
 
 - DataInputStream in = getInput ( " utils . EstimatedHistogram . bin " ) ; 
 - assert EstimatedHistogram . serializer . deserialize ( in ) ! = null ; 
 - assert EstimatedHistogram . serializer . deserialize ( in ) ! = null ; 
 - assert EstimatedHistogram . serializer . deserialize ( in ) ! = null ; 
 - in . close ( ) ; 
 + try ( DataInputStream in = getInput ( " utils . EstimatedHistogram . bin " ) ) 
 + { 
 + Assert . assertNotNull ( EstimatedHistogram . serializer . deserialize ( in ) ) ; 
 + Assert . assertNotNull ( EstimatedHistogram . serializer . deserialize ( in ) ) ; 
 + Assert . assertNotNull ( EstimatedHistogram . serializer . deserialize ( in ) ) ; 
 + } 
 } 
 }

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index eec904a . . 982454c 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 59 , 6 + 59 , 8 @ @ 
 the old ones ( CASSANDRA - 1644 ) 
 * upgrade to Thrift 0 . 5 ( CASSANDRA - 1367 ) 
 * renamed CL . DCQUORUM to LOCAL _ QUORUM and DCQUORUMSYNC to EACH _ QUORUM 
 + * cli truncate support ( CASSANDRA - 1653 ) 
 + * update GC settings in cassandra . bat ( CASSANDRA - 1636 ) 
 
 
 0 . 7 - beta2 
 diff - - git a / src / java / org / apache / cassandra / cli / Cli . g b / src / java / org / apache / cassandra / cli / Cli . g 
 index e59c608 . . a9229ee 100644 
 - - - a / src / java / org / apache / cassandra / cli / Cli . g 
 + + + b / src / java / org / apache / cassandra / cli / Cli . g 
 @ @ - 55 , 6 + 55 , 7 @ @ tokens { 
 NODE _ UPDATE _ KEYSPACE ; 
 NODE _ UPDATE _ COLUMN _ FAMILY ; 
 NODE _ LIST ; 
 + NODE _ TRUNCATE ; 
 
 / / Internal Nodes . 
 NODE _ COLUMN _ ACCESS ; 
 @ @ - 123 , 6 + 124 , 7 @ @ statement 
 | setStatement 
 | showStatement 
 | listStatement 
 + | truncateStatement 
 | - > ^ ( NODE _ NO _ OP ) 
 ; 
 
 @ @ - 174 , 6 + 176 , 8 @ @ helpStatement 
 - > ^ ( NODE _ HELP NODE _ THRIFT _ COUNT ) 
 | K _ HELP K _ LIST 
 - > ^ ( NODE _ HELP NODE _ LIST ) 
 + | K _ HELP K _ TRUNCATE 
 + - > ^ ( NODE _ HELP NODE _ TRUNCATE ) 
 | K _ HELP 
 - > ^ ( NODE _ HELP ) 
 | ' ? ' 
 @ @ - 231 , 6 + 235 , 11 @ @ listStatement 
 - > ^ ( NODE _ LIST columnFamily keyRangeExpr ? ^ ( NODE _ LIMIT $ limit ) ? ) 
 ; 
 
 + truncateStatement 
 + : K _ TRUNCATE columnFamily 
 + - > ^ ( NODE _ TRUNCATE columnFamily ) 
 + ; 
 + 
 showClusterName 
 : K _ SHOW K _ CLUSTER K _ NAME 
 - > ^ ( NODE _ SHOW _ CLUSTER _ NAME ) 
 @ @ - 430 , 6 + 439 , 7 @ @ K _ AND : ' AND ' ; 
 K _ UPDATE : ' UPDATE ' ; 
 K _ LIST : ' LIST ' ; 
 K _ LIMIT : ' LIMIT ' ; 
 + K _ TRUNCATE : ' TRUNCATE ' ; 
 
 / / private syntactic rules 
 fragment 
 diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java 
 index b6ace98 . . b63105a 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliClient . java 
 + + + b / src / java / org / apache / cassandra / cli / CliClient . java 
 @ @ - 171 , 6 + 171 , 9 @ @ public class CliClient extends CliUserHelp 
 case CliParser . NODE _ LIST : 
 executeList ( tree ) ; 
 break ; 
 + case CliParser . NODE _ TRUNCATE : 
 + executeTruncate ( tree . getChild ( 0 ) . getText ( ) ) ; 
 + break ; 
 case CliParser . NODE _ NO _ OP : 
 / / comment lines come here ; they are treated as no ops . 
 break ; 
 @ @ - 943 , 6 + 946 , 30 @ @ public class CliClient extends CliUserHelp 
 printSliceList ( columnFamilyDef , keySlices ) ; 
 } 
 
 + / / TRUNCATE < columnFamily > 
 + private void executeTruncate ( String columnFamily ) 
 + { 
 + if ( ! CliMain . isConnected ( ) | | ! hasKeySpace ( ) ) 
 + return ; 
 + 
 + / / getting CfDef , it will fail if there is no such column family in current keySpace . 
 + CfDef cfDef = getCfDef ( columnFamily ) ; 
 + 
 + try 
 + { 
 + thriftClient . truncate ( cfDef . getName ( ) ) ; 
 + sessionState . out . println ( columnFamily + " truncated . " ) ; 
 + } 
 + catch ( InvalidRequestException e ) 
 + { 
 + throw new RuntimeException ( e . getWhy ( ) ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + throw new RuntimeException ( e . getMessage ( ) ) ; 
 + } 
 + } 
 + 
 / / SHOW API VERSION 
 private void executeShowVersion ( ) throws TException 
 { 
 diff - - git a / src / java / org / apache / cassandra / cli / CliCompleter . java b / src / java / org / apache / cassandra / cli / CliCompleter . java 
 index f541fe5 . . b033d8f 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliCompleter . java 
 + + + b / src / java / org / apache / cassandra / cli / CliCompleter . java 
 @ @ - 55 , 12 + 55 , 16 @ @ public class CliCompleter extends SimpleCompletor 
 " help set " , 
 " help del " , 
 " help count " , 
 + " help list " , 
 + " help truncate " 
 } ; 
 private static String [ ] keyspaceCommands = { 
 " get " , 
 " set " , 
 " count " , 
 - " del " 
 + " del " , 
 + " list " , 
 + " truncate " 
 } ; 
 
 public CliCompleter ( ) 
 diff - - git a / src / java / org / apache / cassandra / cli / CliUserHelp . java b / src / java / org / apache / cassandra / cli / CliUserHelp . java 
 index 7c512e2 . . db6a779 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliUserHelp . java 
 + + + b / src / java / org / apache / cassandra / cli / CliUserHelp . java 
 @ @ - 281 , 6 + 281 , 13 @ @ public class CliUserHelp { 
 state . out . println ( " list Users [ j : ] limit 40 " ) ; 
 break ; 
 
 + case CliParser . NODE _ TRUNCATE : 
 + state . out . println ( " truncate < column _ family > " ) ; 
 + state . out . println ( " Truncate specified column family . \ n " ) ; 
 + state . out . println ( " example : " ) ; 
 + state . out . println ( " truncate Category " ) ; 
 + break ; 
 + 
 default : 
 state . out . println ( " ? " ) ; 
 break ; 
 @ @ - 324 , 7 + 331 , 8 @ @ public class CliUserHelp { 
 state . out . println ( " del < cf > [ ' < key > ' ] [ ' < super > ' ] [ ' < col > ' ] Delete sub column . " ) ; 
 state . out . println ( " count < cf > [ ' < key > ' ] Count columns in record . " ) ; 
 state . out . println ( " count < cf > [ ' < key > ' ] [ ' < super > ' ] Count columns in a super column . " ) ; 
 - state . out . println ( " list < cf > List all rows in the column family . " ) ; 
 + state . out . println ( " truncate < column _ family > Truncate specified column family . " ) ; 
 + state . out . println ( " list < cf > List all rows in the column family . " ) ; 
 state . out . println ( " list < cf > [ < startKey > : ] " ) ; 
 state . out . println ( " List rows in the column family beginning with < startKey > . " ) ; 
 state . out . println ( " list < cf > [ < startKey > : < endKey > ] " ) ; 
 diff - - git a / test / unit / org / apache / cassandra / cli / CliTest . java b / test / unit / org / apache / cassandra / cli / CliTest . java 
 index 24a3de0 . . eddcafd 100644 
 - - - a / test / unit / org / apache / cassandra / cli / CliTest . java 
 + + + b / test / unit / org / apache / cassandra / cli / CliTest . java 
 @ @ - 52 , 6 + 52 , 7 @ @ public class CliTest extends TestCase 
 " list CF3 [ h : ] " , 
 " list CF3 limit 10 " , 
 " list CF3 [ h : g ] limit 10 " , 
 + " truncate CF1 " , 
 " update keyspace TestKeySpace with placement _ strategy = ' org . apache . cassandra . locator . LocalStrategy ' " , 
 " update keyspace TestKeySpace with replication _ factor = 1 and strategy _ options = [ { DC1 : 3 , DC2 : 4 , DC5 : 1 } ] " 
 } ; 
 @ @ - 101 , 6 + 102 , 10 @ @ public class CliTest extends TestCase 
 assertTrue ( result . startsWith ( " = > ( column = " ) ) ; 
 } 
 } 
 + else if ( statement . startsWith ( " truncate " ) ) 
 + { 
 + assertTrue ( result . contains ( " truncated . " ) ) ; 
 + } 
 
 outStream . reset ( ) ; / / reset stream so we have only output from next statement all the time 
 errStream . reset ( ) ; / / no errors to the end user .
