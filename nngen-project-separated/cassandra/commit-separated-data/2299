BLEU SCORE: 0.041961149062965476

TEST MSG: Add ALLOW FILTERING and CONTAINS to cqlsh post - 6910
GENERATED MSG: ninja very slightly tweak cqlsh completion

TEST DIFF (one line): diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py <nl> index 3d489d3 . . a676319 100644 <nl> - - - a / pylib / cqlshlib / cql3handling . py <nl> + + + b / pylib / cqlshlib / cql3handling . py <nl> @ @ - 595 , 13 + 595 , 14 @ @ syntax _ rules + = r ' ' ' <nl> ( " WHERE " < whereClause > ) ? <nl> ( " ORDER " " BY " < orderByClause > ( " , " < orderByClause > ) * ) ? <nl> ( " LIMIT " limit = < wholenumber > ) ? <nl> + ( " ALLOW " " FILTERING " ) ? <nl> ; <nl> < whereClause > : : = < relation > ( " AND " < relation > ) * <nl> ; <nl> - < relation > : : = [ rel _ lhs ] = < cident > ( " = " | " < " | " > " | " < = " | " > = " ) < term > <nl> + < relation > : : = [ rel _ lhs ] = < cident > ( " = " | " < " | " > " | " < = " | " > = " | " CONTAINS " ) < term > <nl> | token = " TOKEN " " ( " [ rel _ tokname ] = < cident > <nl> ( " , " [ rel _ tokname ] = < cident > ) * <nl> - " ) " ( " = " | " < " | " > " | " < = " | " > = " ) < tokenDefinition > <nl> + " ) " ( " = " | " < " | " > " | " < = " | " > = " | " CONTAINS " ) < tokenDefinition > <nl> | [ rel _ lhs ] = < cident > " IN " " ( " < term > ( " , " < term > ) * " ) " <nl> ; <nl> < selectClause > : : = " DISTINCT " ? < selector > ( " AS " < cident > ) ? ( " , " < selector > ( " AS " < cident > ) ? ) *
NEAREST DIFF (one line): diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml <nl> index a79e150 . . e077efe 100644 <nl> - - - a / conf / cassandra . yaml <nl> + + + b / conf / cassandra . yaml <nl> @ @ - 310 , 9 + 310 , 12 @ @ listen _ address : localhost <nl> start _ native _ transport : false <nl> # port for the CQL native transport to listen for clients on <nl> native _ transport _ port : 9042 <nl> - # The maximum of thread handling requests . The meaning is the same than <nl> - # rpc _ max _ threads . The default is unlimited . <nl> - # native _ transport _ max _ threads : 2048 <nl> + # The minimum and maximum threads for handling requests when the native <nl> + # transport is used . The meaning is those is similar to the one of <nl> + # rpc _ min _ threads and rpc _ max _ threads , though the default differ slightly and <nl> + # are the ones below : <nl> + # native _ transport _ min _ threads : 16 <nl> + # native _ transport _ max _ threads : 128 <nl> <nl> <nl> # Whether to start the thrift rpc server . <nl> diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java <nl> index c605a3a . . 7de852d 100644 <nl> - - - a / src / java / org / apache / cassandra / config / Config . java <nl> + + + b / src / java / org / apache / cassandra / config / Config . java <nl> @ @ - 86 , 7 + 86 , 8 @ @ public class Config <nl> <nl> public Boolean start _ native _ transport = false ; <nl> public Integer native _ transport _ port = 8000 ; <nl> - public Integer native _ transport _ max _ threads = Integer . MAX _ VALUE ; <nl> + public Integer native _ transport _ min _ threads = 16 ; <nl> + public Integer native _ transport _ max _ threads = 128 ; <nl> <nl> public Integer thrift _ max _ message _ length _ in _ mb = 16 ; <nl> public Integer thrift _ framed _ transport _ size _ in _ mb = 15 ; <nl> diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> index e615887 . . cb5ade0 100644 <nl> - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java <nl> @ @ - 986 , 6 + 986 , 11 @ @ public class DatabaseDescriptor <nl> return Integer . parseInt ( System . getProperty ( " cassandra . native _ transport _ port " , conf . native _ transport _ port . toString ( ) ) ) ; <nl> } <nl> <nl> + public static Integer getNativeTransportMinThreads ( ) <nl> + { <nl> + return conf . native _ transport _ min _ threads ; <nl> + } <nl> + <nl> public static Integer getNativeTransportMaxThreads ( ) <nl> { <nl> return conf . native _ transport _ max _ threads ; <nl> diff - - git a / src / java / org / apache / cassandra / transport / RequestThreadPoolExecutor . java b / src / java / org / apache / cassandra / transport / RequestThreadPoolExecutor . java <nl> index 21ce926 . . 83c7c29 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / RequestThreadPoolExecutor . java <nl> + + + b / src / java / org / apache / cassandra / transport / RequestThreadPoolExecutor . java <nl> @ @ - 17 , 22 + 17 , 23 @ @ <nl> * / <nl> package org . apache . cassandra . transport ; <nl> <nl> + import java . util . concurrent . ArrayBlockingQueue ; <nl> import java . util . concurrent . TimeUnit ; <nl> <nl> - import org . jboss . netty . handler . execution . OrderedMemoryAwareThreadPoolExecutor ; <nl> - <nl> - import org . apache . cassandra . config . DatabaseDescriptor ; <nl> + import org . apache . cassandra . concurrent . DebuggableThreadPoolExecutor ; <nl> import org . apache . cassandra . concurrent . NamedThreadFactory ; <nl> + import org . apache . cassandra . config . DatabaseDescriptor ; <nl> <nl> - public class RequestThreadPoolExecutor extends OrderedMemoryAwareThreadPoolExecutor <nl> + public class RequestThreadPoolExecutor extends DebuggableThreadPoolExecutor <nl> { <nl> private final static int CORE _ THREAD _ TIMEOUT _ SEC = 30 ; <nl> <nl> public RequestThreadPoolExecutor ( ) <nl> { <nl> - super ( DatabaseDescriptor . getNativeTransportMaxThreads ( ) , <nl> - 0 , 0 , <nl> + super ( DatabaseDescriptor . getNativeTransportMinThreads ( ) , <nl> + DatabaseDescriptor . getNativeTransportMaxThreads ( ) , <nl> CORE _ THREAD _ TIMEOUT _ SEC , TimeUnit . SECONDS , <nl> + new ArrayBlockingQueue ( 32 ) , / / Seems to help smooth latency compared to SynchronousQueue . <nl> new NamedThreadFactory ( " Native - Transport - Requests " ) ) ; <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / transport / Server . java b / src / java / org / apache / cassandra / transport / Server . java <nl> index e629ca4 . . c3fabfb 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / Server . java <nl> + + + b / src / java / org / apache / cassandra / transport / Server . java <nl> @ @ - 106 , 6 + 106 , 8 @ @ public class Server implements CassandraDaemon . Server <nl> factory = new NioServerSocketChannelFactory ( Executors . newCachedThreadPool ( ) , Executors . newCachedThreadPool ( ) ) ; <nl> ServerBootstrap bootstrap = new ServerBootstrap ( factory ) ; <nl> <nl> + bootstrap . setOption ( " child . tcpNoDelay " , true ) ; <nl> + <nl> / / Set up the event pipeline factory . <nl> bootstrap . setPipelineFactory ( new PipelineFactory ( this ) ) ; <nl> <nl> diff - - git a / src / java / org / apache / cassandra / transport / SimpleClient . java b / src / java / org / apache / cassandra / transport / SimpleClient . java <nl> index 7118bc1 . . 580a3a0 100644 <nl> - - - a / src / java / org / apache / cassandra / transport / SimpleClient . java <nl> + + + b / src / java / org / apache / cassandra / transport / SimpleClient . java <nl> @ @ - 92 , 6 + 92 , 8 @ @ public class SimpleClient <nl> Executors . newCachedThreadPool ( ) , <nl> Executors . newCachedThreadPool ( ) ) ) ; <nl> <nl> + bootstrap . setOption ( " tcpNoDelay " , true ) ; <nl> + <nl> / / Configure the pipeline factory . <nl> bootstrap . setPipelineFactory ( new PipelineFactory ( ) ) ; <nl> ChannelFuture future = bootstrap . connect ( new InetSocketAddress ( host , port ) ) ;

TEST DIFF:
diff - - git a / pylib / cqlshlib / cql3handling . py b / pylib / cqlshlib / cql3handling . py 
 index 3d489d3 . . a676319 100644 
 - - - a / pylib / cqlshlib / cql3handling . py 
 + + + b / pylib / cqlshlib / cql3handling . py 
 @ @ - 595 , 13 + 595 , 14 @ @ syntax _ rules + = r ' ' ' 
 ( " WHERE " < whereClause > ) ? 
 ( " ORDER " " BY " < orderByClause > ( " , " < orderByClause > ) * ) ? 
 ( " LIMIT " limit = < wholenumber > ) ? 
 + ( " ALLOW " " FILTERING " ) ? 
 ; 
 < whereClause > : : = < relation > ( " AND " < relation > ) * 
 ; 
 - < relation > : : = [ rel _ lhs ] = < cident > ( " = " | " < " | " > " | " < = " | " > = " ) < term > 
 + < relation > : : = [ rel _ lhs ] = < cident > ( " = " | " < " | " > " | " < = " | " > = " | " CONTAINS " ) < term > 
 | token = " TOKEN " " ( " [ rel _ tokname ] = < cident > 
 ( " , " [ rel _ tokname ] = < cident > ) * 
 - " ) " ( " = " | " < " | " > " | " < = " | " > = " ) < tokenDefinition > 
 + " ) " ( " = " | " < " | " > " | " < = " | " > = " | " CONTAINS " ) < tokenDefinition > 
 | [ rel _ lhs ] = < cident > " IN " " ( " < term > ( " , " < term > ) * " ) " 
 ; 
 < selectClause > : : = " DISTINCT " ? < selector > ( " AS " < cident > ) ? ( " , " < selector > ( " AS " < cident > ) ? ) *

NEAREST DIFF:
diff - - git a / conf / cassandra . yaml b / conf / cassandra . yaml 
 index a79e150 . . e077efe 100644 
 - - - a / conf / cassandra . yaml 
 + + + b / conf / cassandra . yaml 
 @ @ - 310 , 9 + 310 , 12 @ @ listen _ address : localhost 
 start _ native _ transport : false 
 # port for the CQL native transport to listen for clients on 
 native _ transport _ port : 9042 
 - # The maximum of thread handling requests . The meaning is the same than 
 - # rpc _ max _ threads . The default is unlimited . 
 - # native _ transport _ max _ threads : 2048 
 + # The minimum and maximum threads for handling requests when the native 
 + # transport is used . The meaning is those is similar to the one of 
 + # rpc _ min _ threads and rpc _ max _ threads , though the default differ slightly and 
 + # are the ones below : 
 + # native _ transport _ min _ threads : 16 
 + # native _ transport _ max _ threads : 128 
 
 
 # Whether to start the thrift rpc server . 
 diff - - git a / src / java / org / apache / cassandra / config / Config . java b / src / java / org / apache / cassandra / config / Config . java 
 index c605a3a . . 7de852d 100644 
 - - - a / src / java / org / apache / cassandra / config / Config . java 
 + + + b / src / java / org / apache / cassandra / config / Config . java 
 @ @ - 86 , 7 + 86 , 8 @ @ public class Config 
 
 public Boolean start _ native _ transport = false ; 
 public Integer native _ transport _ port = 8000 ; 
 - public Integer native _ transport _ max _ threads = Integer . MAX _ VALUE ; 
 + public Integer native _ transport _ min _ threads = 16 ; 
 + public Integer native _ transport _ max _ threads = 128 ; 
 
 public Integer thrift _ max _ message _ length _ in _ mb = 16 ; 
 public Integer thrift _ framed _ transport _ size _ in _ mb = 15 ; 
 diff - - git a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 index e615887 . . cb5ade0 100644 
 - - - a / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 + + + b / src / java / org / apache / cassandra / config / DatabaseDescriptor . java 
 @ @ - 986 , 6 + 986 , 11 @ @ public class DatabaseDescriptor 
 return Integer . parseInt ( System . getProperty ( " cassandra . native _ transport _ port " , conf . native _ transport _ port . toString ( ) ) ) ; 
 } 
 
 + public static Integer getNativeTransportMinThreads ( ) 
 + { 
 + return conf . native _ transport _ min _ threads ; 
 + } 
 + 
 public static Integer getNativeTransportMaxThreads ( ) 
 { 
 return conf . native _ transport _ max _ threads ; 
 diff - - git a / src / java / org / apache / cassandra / transport / RequestThreadPoolExecutor . java b / src / java / org / apache / cassandra / transport / RequestThreadPoolExecutor . java 
 index 21ce926 . . 83c7c29 100644 
 - - - a / src / java / org / apache / cassandra / transport / RequestThreadPoolExecutor . java 
 + + + b / src / java / org / apache / cassandra / transport / RequestThreadPoolExecutor . java 
 @ @ - 17 , 22 + 17 , 23 @ @ 
 * / 
 package org . apache . cassandra . transport ; 
 
 + import java . util . concurrent . ArrayBlockingQueue ; 
 import java . util . concurrent . TimeUnit ; 
 
 - import org . jboss . netty . handler . execution . OrderedMemoryAwareThreadPoolExecutor ; 
 - 
 - import org . apache . cassandra . config . DatabaseDescriptor ; 
 + import org . apache . cassandra . concurrent . DebuggableThreadPoolExecutor ; 
 import org . apache . cassandra . concurrent . NamedThreadFactory ; 
 + import org . apache . cassandra . config . DatabaseDescriptor ; 
 
 - public class RequestThreadPoolExecutor extends OrderedMemoryAwareThreadPoolExecutor 
 + public class RequestThreadPoolExecutor extends DebuggableThreadPoolExecutor 
 { 
 private final static int CORE _ THREAD _ TIMEOUT _ SEC = 30 ; 
 
 public RequestThreadPoolExecutor ( ) 
 { 
 - super ( DatabaseDescriptor . getNativeTransportMaxThreads ( ) , 
 - 0 , 0 , 
 + super ( DatabaseDescriptor . getNativeTransportMinThreads ( ) , 
 + DatabaseDescriptor . getNativeTransportMaxThreads ( ) , 
 CORE _ THREAD _ TIMEOUT _ SEC , TimeUnit . SECONDS , 
 + new ArrayBlockingQueue ( 32 ) , / / Seems to help smooth latency compared to SynchronousQueue . 
 new NamedThreadFactory ( " Native - Transport - Requests " ) ) ; 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / transport / Server . java b / src / java / org / apache / cassandra / transport / Server . java 
 index e629ca4 . . c3fabfb 100644 
 - - - a / src / java / org / apache / cassandra / transport / Server . java 
 + + + b / src / java / org / apache / cassandra / transport / Server . java 
 @ @ - 106 , 6 + 106 , 8 @ @ public class Server implements CassandraDaemon . Server 
 factory = new NioServerSocketChannelFactory ( Executors . newCachedThreadPool ( ) , Executors . newCachedThreadPool ( ) ) ; 
 ServerBootstrap bootstrap = new ServerBootstrap ( factory ) ; 
 
 + bootstrap . setOption ( " child . tcpNoDelay " , true ) ; 
 + 
 / / Set up the event pipeline factory . 
 bootstrap . setPipelineFactory ( new PipelineFactory ( this ) ) ; 
 
 diff - - git a / src / java / org / apache / cassandra / transport / SimpleClient . java b / src / java / org / apache / cassandra / transport / SimpleClient . java 
 index 7118bc1 . . 580a3a0 100644 
 - - - a / src / java / org / apache / cassandra / transport / SimpleClient . java 
 + + + b / src / java / org / apache / cassandra / transport / SimpleClient . java 
 @ @ - 92 , 6 + 92 , 8 @ @ public class SimpleClient 
 Executors . newCachedThreadPool ( ) , 
 Executors . newCachedThreadPool ( ) ) ) ; 
 
 + bootstrap . setOption ( " tcpNoDelay " , true ) ; 
 + 
 / / Configure the pipeline factory . 
 bootstrap . setPipelineFactory ( new PipelineFactory ( ) ) ; 
 ChannelFuture future = bootstrap . connect ( new InetSocketAddress ( host , port ) ) ;
