BLEU SCORE: 0.05522397783539471

TEST MSG: Correct IRE message in DropTypeStatement : : validate
GENERATED MSG: Ninja - fix a typo in DropUserStatement

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java b / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java <nl> index 74c8c36 . . d104b73 100644 <nl> - - - a / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java <nl> + + + b / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java <nl> @ @ - 85 , 7 + 85 , 7 @ @ public class DropTypeStatement extends SchemaAlteringStatement <nl> <nl> for ( UserType ut : ksm . types ) <nl> if ( ! ut . name . equals ( name . getUserTypeName ( ) ) & & isUsedBy ( ut ) ) <nl> - throw new InvalidRequestException ( String . format ( " Cannot drop user type % s as it is still used by user type % s " , name , ut . asCQL3Type ( ) ) ) ; <nl> + throw new InvalidRequestException ( String . format ( " Cannot drop user type % s as it is still used by user type % s " , name , ut . getNameAsString ( ) ) ) ; <nl> <nl> for ( CFMetaData cfm : ksm . tablesAndViews ( ) ) <nl> for ( ColumnDefinition def : cfm . allColumns ( ) )
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> index 99cbab1 . . 3582f6b 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> @ @ - 1052 , 24 + 1052 , 24 @ @ public class NodeCmd <nl> break ; <nl> case FLUSH : <nl> try { probe . forceTableFlush ( keyspace , columnFamilies ) ; } <nl> - catch ( ExecutionException ee ) { err ( ee , " Error occured during flushing " ) ; } <nl> + catch ( ExecutionException ee ) { err ( ee , " Error occurred during flushing " ) ; } <nl> break ; <nl> case COMPACT : <nl> try { probe . forceTableCompaction ( keyspace , columnFamilies ) ; } <nl> - catch ( ExecutionException ee ) { err ( ee , " Error occured during compaction " ) ; } <nl> + catch ( ExecutionException ee ) { err ( ee , " Error occurred during compaction " ) ; } <nl> break ; <nl> case CLEANUP : <nl> if ( keyspace . equals ( " system " ) ) { break ; } / / Skip cleanup on system cfs . <nl> try { probe . forceTableCleanup ( keyspace , columnFamilies ) ; } <nl> - catch ( ExecutionException ee ) { err ( ee , " Error occured during cleanup " ) ; } <nl> + catch ( ExecutionException ee ) { err ( ee , " Error occurred during cleanup " ) ; } <nl> break ; <nl> case SCRUB : <nl> try { probe . scrub ( keyspace , columnFamilies ) ; } <nl> - catch ( ExecutionException ee ) { err ( ee , " Error occured while scrubbing keyspace " + keyspace ) ; } <nl> + catch ( ExecutionException ee ) { err ( ee , " Error occurred while scrubbing keyspace " + keyspace ) ; } <nl> break ; <nl> case UPGRADESSTABLES : <nl> try { probe . upgradeSSTables ( keyspace , columnFamilies ) ; } <nl> - catch ( ExecutionException ee ) { err ( ee , " Error occured while upgrading the sstables for keyspace " + keyspace ) ; } <nl> + catch ( ExecutionException ee ) { err ( ee , " Error occurred while upgrading the sstables for keyspace " + keyspace ) ; } <nl> break ; <nl> default : <nl> throw new RuntimeException ( " Unreachable code . " ) ;

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java b / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java 
 index 74c8c36 . . d104b73 100644 
 - - - a / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java 
 + + + b / src / java / org / apache / cassandra / cql3 / statements / DropTypeStatement . java 
 @ @ - 85 , 7 + 85 , 7 @ @ public class DropTypeStatement extends SchemaAlteringStatement 
 
 for ( UserType ut : ksm . types ) 
 if ( ! ut . name . equals ( name . getUserTypeName ( ) ) & & isUsedBy ( ut ) ) 
 - throw new InvalidRequestException ( String . format ( " Cannot drop user type % s as it is still used by user type % s " , name , ut . asCQL3Type ( ) ) ) ; 
 + throw new InvalidRequestException ( String . format ( " Cannot drop user type % s as it is still used by user type % s " , name , ut . getNameAsString ( ) ) ) ; 
 
 for ( CFMetaData cfm : ksm . tablesAndViews ( ) ) 
 for ( ColumnDefinition def : cfm . allColumns ( ) )

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 index 99cbab1 . . 3582f6b 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 @ @ - 1052 , 24 + 1052 , 24 @ @ public class NodeCmd 
 break ; 
 case FLUSH : 
 try { probe . forceTableFlush ( keyspace , columnFamilies ) ; } 
 - catch ( ExecutionException ee ) { err ( ee , " Error occured during flushing " ) ; } 
 + catch ( ExecutionException ee ) { err ( ee , " Error occurred during flushing " ) ; } 
 break ; 
 case COMPACT : 
 try { probe . forceTableCompaction ( keyspace , columnFamilies ) ; } 
 - catch ( ExecutionException ee ) { err ( ee , " Error occured during compaction " ) ; } 
 + catch ( ExecutionException ee ) { err ( ee , " Error occurred during compaction " ) ; } 
 break ; 
 case CLEANUP : 
 if ( keyspace . equals ( " system " ) ) { break ; } / / Skip cleanup on system cfs . 
 try { probe . forceTableCleanup ( keyspace , columnFamilies ) ; } 
 - catch ( ExecutionException ee ) { err ( ee , " Error occured during cleanup " ) ; } 
 + catch ( ExecutionException ee ) { err ( ee , " Error occurred during cleanup " ) ; } 
 break ; 
 case SCRUB : 
 try { probe . scrub ( keyspace , columnFamilies ) ; } 
 - catch ( ExecutionException ee ) { err ( ee , " Error occured while scrubbing keyspace " + keyspace ) ; } 
 + catch ( ExecutionException ee ) { err ( ee , " Error occurred while scrubbing keyspace " + keyspace ) ; } 
 break ; 
 case UPGRADESSTABLES : 
 try { probe . upgradeSSTables ( keyspace , columnFamilies ) ; } 
 - catch ( ExecutionException ee ) { err ( ee , " Error occured while upgrading the sstables for keyspace " + keyspace ) ; } 
 + catch ( ExecutionException ee ) { err ( ee , " Error occurred while upgrading the sstables for keyspace " + keyspace ) ; } 
 break ; 
 default : 
 throw new RuntimeException ( " Unreachable code . " ) ;
