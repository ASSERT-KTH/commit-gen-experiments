BLEU SCORE: 0.08116697886877475

TEST MSG: Fix nodetool display with vnodes .
GENERATED MSG: remove RF from nodetool ring output

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index b3470bf . . aad3721 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> 1 . 2 . 17 <nl> + * Fix nodetool display with vnodes ( CASSANDRA - 7082 ) <nl> * Fix schema concurrency exceptions ( CASSANDRA - 6841 ) <nl> * Fix BatchlogManager # deleteBatch ( ) use of millisecond timsestamps <nl> ( CASSANDRA - 6822 ) <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> index 4901806 . . d7517cc 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> @ @ - 476 , 12 + 476 , 12 @ @ public class NodeCmd <nl> outs . printf ( " Note : Ownership information does not include topology ; for complete information , specify a keyspace % n " ) ; <nl> } <nl> <nl> - / / More tokens then nodes ( aka vnodes ) ? <nl> - if ( tokensToEndpoints . values ( ) . size ( ) < tokensToEndpoints . keySet ( ) . size ( ) ) <nl> - isTokenPerNode = false ; <nl> - <nl> Map < String , SetHostStat > dcs = getOwnershipByDc ( resolveIp , tokensToEndpoints , ownerships ) ; <nl> <nl> + / / More tokens than nodes ( aka vnodes ) ? <nl> + if ( dcs . values ( ) . size ( ) < tokensToEndpoints . keySet ( ) . size ( ) ) <nl> + isTokenPerNode = false ; <nl> + <nl> findMaxAddressLength ( dcs ) ; <nl> <nl> / / Datacenters
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index a67f521 . . e220d78 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 12 , 6 + 12 , 10 @ @ <nl> * Use of o . a . c . metrics in nodetool ( CASSANDRA - 5871 ) <nl> <nl> <nl> + 2 . 0 . 4 <nl> + * remove RF from nodetool ring output ( CASSANDRA - 6289 ) <nl> + <nl> + <nl> 2 . 0 . 3 <nl> * Fix FD leak on slice read path ( CASSANDRA - 6275 ) <nl> * Cancel read meter task when closing SSTR ( CASSANDRA - 6358 ) <nl> @ @ - 44 , 6 + 48 , 7 @ @ <nl> Merged from 1 . 2 : <nl> * Optimize FD phi calculation ( CASSANDRA - 6386 ) <nl> * Improve initial FD phi estimate when starting up ( CASSANDRA - 6385 ) <nl> + * Don ' t list CQL3 table in CLI describe even if named explicitely ( CASSANDRA - 5750 ) <nl> * Invalidate row cache when dropping CF ( CASSANDRA - 6351 ) <nl> * add non - jamm path for cached statements ( CASSANDRA - 6293 ) <nl> * ( Hadoop ) Require CFRR batchSize to be at least 2 ( CASSANDRA - 6114 ) <nl> diff - - git a / debian / changelog b / debian / changelog <nl> index f27c0e1 . . 571503e 100644 <nl> - - - a / debian / changelog <nl> + + + b / debian / changelog <nl> @ @ - 1 , 3 + 1 , 9 @ @ <nl> + cassandra ( 2 . 0 . 3 ) unstable ; urgency = low <nl> + <nl> + * New release <nl> + <nl> + - - Sylvain Lebresne < slebresne @ apache . org > Thu , 21 Nov 2013 10 : 04 : 45 + 0100 <nl> + <nl> cassandra ( 2 . 0 . 2 ) unstable ; urgency = low <nl> <nl> * New release <nl> diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java <nl> index a159607 . . e842636 100644 <nl> - - - a / src / java / org / apache / cassandra / cli / CliClient . java <nl> + + + b / src / java / org / apache / cassandra / cli / CliClient . java <nl> @ @ - 1167 , 8 + 1167 , 10 @ @ public class CliClient <nl> <nl> try <nl> { <nl> - / / request correct cfDef from the server <nl> - CfDef cfDef = getCfDef ( thriftClient . describe _ keyspace ( this . keySpace ) , cfName ) ; <nl> + / / request correct cfDef from the server ( we let that call include CQL3 cf even though <nl> + / / they can ' t be modified by thrift because the error message that will be thrown by <nl> + / / system _ update _ column _ family will be more useful ) <nl> + CfDef cfDef = getCfDef ( thriftClient . describe _ keyspace ( this . keySpace ) , cfName , true ) ; <nl> <nl> if ( cfDef = = null ) <nl> throw new RuntimeException ( " Column Family " + cfName + " was not found in the current keyspace . " ) ; <nl> @ @ - 2301 , 7 + 2303 , 7 @ @ public class CliClient <nl> " of the keyspaces first . " , entityName ) ) ; <nl> <nl> CfDef inputCfDef = ( inputKsDef = = null ) <nl> - ? getCfDef ( currentKeySpace , entityName ) <nl> + ? getCfDef ( currentKeySpace , entityName , false ) <nl> : null ; / / no need to lookup CfDef if we know that it was keyspace <nl> <nl> if ( inputKsDef ! = null ) <nl> @ @ - 2326 , 7 + 2328 , 7 @ @ public class CliClient <nl> } <nl> else <nl> { <nl> - sessionState . out . println ( " Sorry , no Keyspace nor ColumnFamily was found with name : " + entityName ) ; <nl> + sessionState . out . println ( " Sorry , no Keyspace nor ( non - CQL3 ) ColumnFamily was found with name : " + entityName + " ( if this is a CQL3 table , you should use cqlsh instead ) " ) ; <nl> } <nl> } <nl> } <nl> @ @ - 2399 , 7 + 2401 , 7 @ @ public class CliClient <nl> private CfDef getCfDef ( String keySpaceName , String columnFamilyName ) <nl> { <nl> KsDef ksDef = keyspacesMap . get ( keySpaceName ) ; <nl> - CfDef cfDef = getCfDef ( ksDef , columnFamilyName ) ; <nl> + CfDef cfDef = getCfDef ( ksDef , columnFamilyName , true ) ; <nl> if ( cfDef = = null ) <nl> throw new RuntimeException ( " No such column family : " + columnFamilyName ) ; <nl> return cfDef ; <nl> @ @ - 2415 , 7 + 2417 , 7 @ @ public class CliClient <nl> return getCfDef ( this . keySpace , columnFamilyName ) ; <nl> } <nl> <nl> - private CfDef getCfDef ( KsDef keyspace , String columnFamilyName ) <nl> + private CfDef getCfDef ( KsDef keyspace , String columnFamilyName , boolean includeCQL3 ) <nl> { <nl> for ( CfDef cfDef : keyspace . cf _ defs ) <nl> { <nl> @ @ - 2423 , 7 + 2425 , 7 @ @ public class CliClient <nl> return cfDef ; <nl> } <nl> <nl> - return cql3KeyspacesMap . get ( keyspace . name ) . get ( columnFamilyName ) ; <nl> + return includeCQL3 ? cql3KeyspacesMap . get ( keyspace . name ) . get ( columnFamilyName ) : null ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> index c629e0d . . d415f06 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java <nl> @ @ - 306 , 20 + 306 , 15 @ @ public class NodeCmd <nl> <nl> / / get the total amount of replicas for this dc and the last token in this dc ' s ring <nl> List < String > tokens = new ArrayList < String > ( ) ; <nl> - float totalReplicas = 0f ; <nl> String lastToken = " " ; <nl> <nl> for ( Map . Entry < InetAddress , Float > entry : filteredOwnerships . entrySet ( ) ) <nl> { <nl> tokens . addAll ( endpointsToTokens . get ( entry . getKey ( ) . getHostAddress ( ) ) ) ; <nl> lastToken = tokens . get ( tokens . size ( ) - 1 ) ; <nl> - totalReplicas + = entry . getValue ( ) ; <nl> } <nl> <nl> <nl> - if ( keyspaceSelected ) <nl> - outs . print ( " Replicas : " + ( int ) totalReplicas + " \ n \ n " ) ; <nl> - <nl> outs . printf ( format , " Address " , " Rack " , " Status " , " State " , " Load " , " Owns " , " Token " ) ; <nl> <nl> if ( filteredOwnerships . size ( ) > 1 )

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index b3470bf . . aad3721 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 5 @ @ 
 1 . 2 . 17 
 + * Fix nodetool display with vnodes ( CASSANDRA - 7082 ) 
 * Fix schema concurrency exceptions ( CASSANDRA - 6841 ) 
 * Fix BatchlogManager # deleteBatch ( ) use of millisecond timsestamps 
 ( CASSANDRA - 6822 ) 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 index 4901806 . . d7517cc 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 @ @ - 476 , 12 + 476 , 12 @ @ public class NodeCmd 
 outs . printf ( " Note : Ownership information does not include topology ; for complete information , specify a keyspace % n " ) ; 
 } 
 
 - / / More tokens then nodes ( aka vnodes ) ? 
 - if ( tokensToEndpoints . values ( ) . size ( ) < tokensToEndpoints . keySet ( ) . size ( ) ) 
 - isTokenPerNode = false ; 
 - 
 Map < String , SetHostStat > dcs = getOwnershipByDc ( resolveIp , tokensToEndpoints , ownerships ) ; 
 
 + / / More tokens than nodes ( aka vnodes ) ? 
 + if ( dcs . values ( ) . size ( ) < tokensToEndpoints . keySet ( ) . size ( ) ) 
 + isTokenPerNode = false ; 
 + 
 findMaxAddressLength ( dcs ) ; 
 
 / / Datacenters

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index a67f521 . . e220d78 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 12 , 6 + 12 , 10 @ @ 
 * Use of o . a . c . metrics in nodetool ( CASSANDRA - 5871 ) 
 
 
 + 2 . 0 . 4 
 + * remove RF from nodetool ring output ( CASSANDRA - 6289 ) 
 + 
 + 
 2 . 0 . 3 
 * Fix FD leak on slice read path ( CASSANDRA - 6275 ) 
 * Cancel read meter task when closing SSTR ( CASSANDRA - 6358 ) 
 @ @ - 44 , 6 + 48 , 7 @ @ 
 Merged from 1 . 2 : 
 * Optimize FD phi calculation ( CASSANDRA - 6386 ) 
 * Improve initial FD phi estimate when starting up ( CASSANDRA - 6385 ) 
 + * Don ' t list CQL3 table in CLI describe even if named explicitely ( CASSANDRA - 5750 ) 
 * Invalidate row cache when dropping CF ( CASSANDRA - 6351 ) 
 * add non - jamm path for cached statements ( CASSANDRA - 6293 ) 
 * ( Hadoop ) Require CFRR batchSize to be at least 2 ( CASSANDRA - 6114 ) 
 diff - - git a / debian / changelog b / debian / changelog 
 index f27c0e1 . . 571503e 100644 
 - - - a / debian / changelog 
 + + + b / debian / changelog 
 @ @ - 1 , 3 + 1 , 9 @ @ 
 + cassandra ( 2 . 0 . 3 ) unstable ; urgency = low 
 + 
 + * New release 
 + 
 + - - Sylvain Lebresne < slebresne @ apache . org > Thu , 21 Nov 2013 10 : 04 : 45 + 0100 
 + 
 cassandra ( 2 . 0 . 2 ) unstable ; urgency = low 
 
 * New release 
 diff - - git a / src / java / org / apache / cassandra / cli / CliClient . java b / src / java / org / apache / cassandra / cli / CliClient . java 
 index a159607 . . e842636 100644 
 - - - a / src / java / org / apache / cassandra / cli / CliClient . java 
 + + + b / src / java / org / apache / cassandra / cli / CliClient . java 
 @ @ - 1167 , 8 + 1167 , 10 @ @ public class CliClient 
 
 try 
 { 
 - / / request correct cfDef from the server 
 - CfDef cfDef = getCfDef ( thriftClient . describe _ keyspace ( this . keySpace ) , cfName ) ; 
 + / / request correct cfDef from the server ( we let that call include CQL3 cf even though 
 + / / they can ' t be modified by thrift because the error message that will be thrown by 
 + / / system _ update _ column _ family will be more useful ) 
 + CfDef cfDef = getCfDef ( thriftClient . describe _ keyspace ( this . keySpace ) , cfName , true ) ; 
 
 if ( cfDef = = null ) 
 throw new RuntimeException ( " Column Family " + cfName + " was not found in the current keyspace . " ) ; 
 @ @ - 2301 , 7 + 2303 , 7 @ @ public class CliClient 
 " of the keyspaces first . " , entityName ) ) ; 
 
 CfDef inputCfDef = ( inputKsDef = = null ) 
 - ? getCfDef ( currentKeySpace , entityName ) 
 + ? getCfDef ( currentKeySpace , entityName , false ) 
 : null ; / / no need to lookup CfDef if we know that it was keyspace 
 
 if ( inputKsDef ! = null ) 
 @ @ - 2326 , 7 + 2328 , 7 @ @ public class CliClient 
 } 
 else 
 { 
 - sessionState . out . println ( " Sorry , no Keyspace nor ColumnFamily was found with name : " + entityName ) ; 
 + sessionState . out . println ( " Sorry , no Keyspace nor ( non - CQL3 ) ColumnFamily was found with name : " + entityName + " ( if this is a CQL3 table , you should use cqlsh instead ) " ) ; 
 } 
 } 
 } 
 @ @ - 2399 , 7 + 2401 , 7 @ @ public class CliClient 
 private CfDef getCfDef ( String keySpaceName , String columnFamilyName ) 
 { 
 KsDef ksDef = keyspacesMap . get ( keySpaceName ) ; 
 - CfDef cfDef = getCfDef ( ksDef , columnFamilyName ) ; 
 + CfDef cfDef = getCfDef ( ksDef , columnFamilyName , true ) ; 
 if ( cfDef = = null ) 
 throw new RuntimeException ( " No such column family : " + columnFamilyName ) ; 
 return cfDef ; 
 @ @ - 2415 , 7 + 2417 , 7 @ @ public class CliClient 
 return getCfDef ( this . keySpace , columnFamilyName ) ; 
 } 
 
 - private CfDef getCfDef ( KsDef keyspace , String columnFamilyName ) 
 + private CfDef getCfDef ( KsDef keyspace , String columnFamilyName , boolean includeCQL3 ) 
 { 
 for ( CfDef cfDef : keyspace . cf _ defs ) 
 { 
 @ @ - 2423 , 7 + 2425 , 7 @ @ public class CliClient 
 return cfDef ; 
 } 
 
 - return cql3KeyspacesMap . get ( keyspace . name ) . get ( columnFamilyName ) ; 
 + return includeCQL3 ? cql3KeyspacesMap . get ( keyspace . name ) . get ( columnFamilyName ) : null ; 
 } 
 
 / * * 
 diff - - git a / src / java / org / apache / cassandra / tools / NodeCmd . java b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 index c629e0d . . d415f06 100644 
 - - - a / src / java / org / apache / cassandra / tools / NodeCmd . java 
 + + + b / src / java / org / apache / cassandra / tools / NodeCmd . java 
 @ @ - 306 , 20 + 306 , 15 @ @ public class NodeCmd 
 
 / / get the total amount of replicas for this dc and the last token in this dc ' s ring 
 List < String > tokens = new ArrayList < String > ( ) ; 
 - float totalReplicas = 0f ; 
 String lastToken = " " ; 
 
 for ( Map . Entry < InetAddress , Float > entry : filteredOwnerships . entrySet ( ) ) 
 { 
 tokens . addAll ( endpointsToTokens . get ( entry . getKey ( ) . getHostAddress ( ) ) ) ; 
 lastToken = tokens . get ( tokens . size ( ) - 1 ) ; 
 - totalReplicas + = entry . getValue ( ) ; 
 } 
 
 
 - if ( keyspaceSelected ) 
 - outs . print ( " Replicas : " + ( int ) totalReplicas + " \ n \ n " ) ; 
 - 
 outs . printf ( format , " Address " , " Rack " , " Status " , " State " , " Load " , " Owns " , " Token " ) ; 
 
 if ( filteredOwnerships . size ( ) > 1 )
