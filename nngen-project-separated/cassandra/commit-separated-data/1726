BLEU SCORE: 0.017820934647025707

TEST MSG: Fix ThreadPool metrics logging
GENERATED MSG: fix capitalization , underscores in AE , request JMX names

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / metrics / ThreadPoolMetrics . java b / src / java / org / apache / cassandra / metrics / ThreadPoolMetrics . java <nl> index 992e676 . . fba92c4 100644 <nl> - - - a / src / java / org / apache / cassandra / metrics / ThreadPoolMetrics . java <nl> + + + b / src / java / org / apache / cassandra / metrics / ThreadPoolMetrics . java <nl> @ @ - 114 , 6 + 114 , 10 @ @ public class ThreadPoolMetrics <nl> try <nl> { <nl> ObjectName oName = new ObjectName ( name ) ; <nl> + if ( ! mbeanServerConn . isRegistered ( oName ) ) <nl> + { <nl> + return " N / A " ; <nl> + } <nl> <nl> switch ( metricName ) <nl> { <nl> @ @ - 127 , 9 + 131 , 8 @ @ public class ThreadPoolMetrics <nl> default : <nl> throw new AssertionError ( " Unknown metric name " + metricName ) ; <nl> } <nl> - <nl> } <nl> - catch ( Throwable e ) <nl> + catch ( Exception e ) <nl> { <nl> throw new RuntimeException ( " Error reading : " + name , e ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / utils / StatusLogger . java b / src / java / org / apache / cassandra / utils / StatusLogger . java <nl> index 32470e8 . . 5f4eaf2 100644 <nl> - - - a / src / java / org / apache / cassandra / utils / StatusLogger . java <nl> + + + b / src / java / org / apache / cassandra / utils / StatusLogger . java <nl> @ @ - 52 , 13 + 52 , 13 @ @ public class StatusLogger <nl> <nl> for ( Stage stage : Stage . jmxEnabledStages ( ) ) <nl> { <nl> - System . out . printf ( " % - 25s % 10s % 10s % 15s % 10s % 18s % n " , <nl> + logger . info ( String . format ( " % - 25s % 10s % 10s % 15s % 10s % 18s % n " , <nl> stage . getJmxName ( ) , <nl> ThreadPoolMetrics . getJmxMetric ( server , stage . getJmxType ( ) , stage . getJmxName ( ) , " ActiveTasks " ) , <nl> ThreadPoolMetrics . getJmxMetric ( server , stage . getJmxType ( ) , stage . getJmxName ( ) , " PendingTasks " ) , <nl> ThreadPoolMetrics . getJmxMetric ( server , stage . getJmxType ( ) , stage . getJmxName ( ) , " CompletedTasks " ) , <nl> ThreadPoolMetrics . getJmxMetric ( server , stage . getJmxType ( ) , stage . getJmxName ( ) , " CurrentlyBlockedTasks " ) , <nl> - ThreadPoolMetrics . getJmxMetric ( server , stage . getJmxType ( ) , stage . getJmxName ( ) , " TotalBlockedTasks " ) ) ; <nl> + ThreadPoolMetrics . getJmxMetric ( server , stage . getJmxType ( ) , stage . getJmxName ( ) , " TotalBlockedTasks " ) ) ) ; <nl> } <nl> <nl> / / one offs
NEAREST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 8b509bb . . 7765252 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 6 + 1 , 9 @ @ <nl> dev <nl> * fix live - column - count of slice ranges including tombstoned supercolumn <nl> with live subcolumn ( CASSANDRA - 1591 ) <nl> + * rename o . a . c . internal . AntientropyStage - > AntiEntropyStage , <nl> + o . a . c . request . Request _ responseStage - > RequestResponseStage , <nl> + o . a . c . internal . Internal _ responseStage - > InternalResponseStage <nl> <nl> <nl> 0 . 7 . 0 - rc1 <nl> diff - - git a / src / java / org / apache / cassandra / concurrent / Stage . java b / src / java / org / apache / cassandra / concurrent / Stage . java <nl> index e3506fd . . 924f413 100644 <nl> - - - a / src / java / org / apache / cassandra / concurrent / Stage . java <nl> + + + b / src / java / org / apache / cassandra / concurrent / Stage . java <nl> @ @ - 28 , 7 + 28 , 7 @ @ public enum Stage <nl> STREAM , <nl> GOSSIP , <nl> REQUEST _ RESPONSE , <nl> - ANTIENTROPY , <nl> + ANTI _ ENTROPY , <nl> MIGRATION , <nl> MISC , <nl> INTERNAL _ RESPONSE ; <nl> @ @ - 37 , 7 + 37 , 7 @ @ public enum Stage <nl> { <nl> switch ( this ) <nl> { <nl> - case ANTIENTROPY : <nl> + case ANTI _ ENTROPY : <nl> case GOSSIP : <nl> case MIGRATION : <nl> case MISC : <nl> @ @ - 55 , 6 + 55 , 11 @ @ public enum Stage <nl> <nl> public String getJmxName ( ) <nl> { <nl> - return toString ( ) . substring ( 0 , 1 ) + toString ( ) . substring ( 1 ) . toLowerCase ( ) + " Stage " ; <nl> + String name = " " ; <nl> + for ( String word : toString ( ) . split ( " _ " ) ) <nl> + { <nl> + name + = word . substring ( 0 , 1 ) + word . substring ( 1 ) . toLowerCase ( ) ; <nl> + } <nl> + return name + " Stage " ; <nl> } <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / concurrent / StageManager . java b / src / java / org / apache / cassandra / concurrent / StageManager . java <nl> index c720b3e . . e4a0a7d 100644 <nl> - - - a / src / java / org / apache / cassandra / concurrent / StageManager . java <nl> + + + b / src / java / org / apache / cassandra / concurrent / StageManager . java <nl> @ @ - 47 , 7 + 47 , 7 @ @ public class StageManager <nl> / / the rest are all single - threaded <nl> stages . put ( Stage . STREAM , new JMXEnabledThreadPoolExecutor ( Stage . STREAM ) ) ; <nl> stages . put ( Stage . GOSSIP , new JMXEnabledThreadPoolExecutor ( Stage . GOSSIP ) ) ; <nl> - stages . put ( Stage . ANTIENTROPY , new JMXEnabledThreadPoolExecutor ( Stage . ANTIENTROPY ) ) ; <nl> + stages . put ( Stage . ANTI _ ENTROPY , new JMXEnabledThreadPoolExecutor ( Stage . ANTI _ ENTROPY ) ) ; <nl> stages . put ( Stage . MIGRATION , new JMXEnabledThreadPoolExecutor ( Stage . MIGRATION ) ) ; <nl> stages . put ( Stage . MISC , new JMXEnabledThreadPoolExecutor ( Stage . MISC ) ) ; <nl> } <nl> diff - - git a / src / java / org / apache / cassandra / service / AntiEntropyService . java b / src / java / org / apache / cassandra / service / AntiEntropyService . java <nl> index 261cc83 . . 85dea09 100644 <nl> - - - a / src / java / org / apache / cassandra / service / AntiEntropyService . java <nl> + + + b / src / java / org / apache / cassandra / service / AntiEntropyService . java <nl> @ @ - 216 , 7 + 216 , 7 @ @ public class AntiEntropyService <nl> for ( Differencer differencer : differencers ) <nl> { <nl> logger . info ( " Queueing comparison " + differencer ) ; <nl> - StageManager . getStage ( Stage . ANTIENTROPY ) . execute ( differencer ) ; <nl> + StageManager . getStage ( Stage . ANTI _ ENTROPY ) . execute ( differencer ) ; <nl> } <nl> } <nl> <nl> @ @ - 406 , 7 + 406 , 7 @ @ public class AntiEntropyService <nl> for ( MerkleTree . RowHash minrow : minrows ) <nl> range . addHash ( minrow ) ; <nl> <nl> - StageManager . getStage ( Stage . ANTIENTROPY ) . submit ( this ) ; <nl> + StageManager . getStage ( Stage . ANTI _ ENTROPY ) . submit ( this ) ; <nl> logger . debug ( " Validated " + validated + " rows into AEService tree for " + request ) ; <nl> } <nl> <nl> diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java <nl> index 19eef45 . . fa40425 100644 <nl> - - - a / src / java / org / apache / cassandra / service / StorageService . java <nl> + + + b / src / java / org / apache / cassandra / service / StorageService . java <nl> @ @ - 181 , 8 + 181 , 8 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe <nl> put ( Verb . STREAM _ REQUEST , Stage . STREAM ) ; <nl> put ( Verb . RANGE _ SLICE , Stage . READ ) ; <nl> put ( Verb . BOOTSTRAP _ TOKEN , Stage . MISC ) ; <nl> - put ( Verb . TREE _ REQUEST , Stage . ANTIENTROPY ) ; <nl> - put ( Verb . TREE _ RESPONSE , Stage . ANTIENTROPY ) ; <nl> + put ( Verb . TREE _ REQUEST , Stage . ANTI _ ENTROPY ) ; <nl> + put ( Verb . TREE _ RESPONSE , Stage . ANTI _ ENTROPY ) ; <nl> put ( Verb . GOSSIP _ DIGEST _ ACK , Stage . GOSSIP ) ; <nl> put ( Verb . GOSSIP _ DIGEST _ ACK2 , Stage . GOSSIP ) ; <nl> put ( Verb . GOSSIP _ DIGEST _ SYN , Stage . GOSSIP ) ; <nl> diff - - git a / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java b / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java <nl> index 36c68ae . . 27fb331 100644 <nl> - - - a / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java <nl> + + + b / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java <nl> @ @ - 19 , 7 + 19 , 6 @ @ <nl> package org . apache . cassandra . service ; <nl> <nl> import java . net . InetAddress ; <nl> - import java . nio . ByteBuffer ; <nl> import java . util . * ; <nl> import java . util . concurrent . Callable ; <nl> import java . util . concurrent . TimeUnit ; <nl> @ @ - 47 , 7 + 46 , 6 @ @ import org . apache . cassandra . locator . TokenMetadata ; <nl> import org . apache . cassandra . utils . FBUtilities ; <nl> import org . apache . cassandra . utils . MerkleTree ; <nl> <nl> - import static com . google . common . base . Charsets . UTF _ 8 ; <nl> import static org . apache . cassandra . service . AntiEntropyService . * ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertTrue ; <nl> @ @ - 244 , 7 + 242 , 7 @ @ public class AntiEntropyServiceTest extends CleanupHelper <nl> <nl> void flushAES ( ) throws Exception <nl> { <nl> - final ThreadPoolExecutor stage = StageManager . getStage ( Stage . ANTIENTROPY ) ; <nl> + final ThreadPoolExecutor stage = StageManager . getStage ( Stage . ANTI _ ENTROPY ) ; <nl> final Callable noop = new Callable < Object > ( ) <nl> { <nl> public Boolean call ( )

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / metrics / ThreadPoolMetrics . java b / src / java / org / apache / cassandra / metrics / ThreadPoolMetrics . java 
 index 992e676 . . fba92c4 100644 
 - - - a / src / java / org / apache / cassandra / metrics / ThreadPoolMetrics . java 
 + + + b / src / java / org / apache / cassandra / metrics / ThreadPoolMetrics . java 
 @ @ - 114 , 6 + 114 , 10 @ @ public class ThreadPoolMetrics 
 try 
 { 
 ObjectName oName = new ObjectName ( name ) ; 
 + if ( ! mbeanServerConn . isRegistered ( oName ) ) 
 + { 
 + return " N / A " ; 
 + } 
 
 switch ( metricName ) 
 { 
 @ @ - 127 , 9 + 131 , 8 @ @ public class ThreadPoolMetrics 
 default : 
 throw new AssertionError ( " Unknown metric name " + metricName ) ; 
 } 
 - 
 } 
 - catch ( Throwable e ) 
 + catch ( Exception e ) 
 { 
 throw new RuntimeException ( " Error reading : " + name , e ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / utils / StatusLogger . java b / src / java / org / apache / cassandra / utils / StatusLogger . java 
 index 32470e8 . . 5f4eaf2 100644 
 - - - a / src / java / org / apache / cassandra / utils / StatusLogger . java 
 + + + b / src / java / org / apache / cassandra / utils / StatusLogger . java 
 @ @ - 52 , 13 + 52 , 13 @ @ public class StatusLogger 
 
 for ( Stage stage : Stage . jmxEnabledStages ( ) ) 
 { 
 - System . out . printf ( " % - 25s % 10s % 10s % 15s % 10s % 18s % n " , 
 + logger . info ( String . format ( " % - 25s % 10s % 10s % 15s % 10s % 18s % n " , 
 stage . getJmxName ( ) , 
 ThreadPoolMetrics . getJmxMetric ( server , stage . getJmxType ( ) , stage . getJmxName ( ) , " ActiveTasks " ) , 
 ThreadPoolMetrics . getJmxMetric ( server , stage . getJmxType ( ) , stage . getJmxName ( ) , " PendingTasks " ) , 
 ThreadPoolMetrics . getJmxMetric ( server , stage . getJmxType ( ) , stage . getJmxName ( ) , " CompletedTasks " ) , 
 ThreadPoolMetrics . getJmxMetric ( server , stage . getJmxType ( ) , stage . getJmxName ( ) , " CurrentlyBlockedTasks " ) , 
 - ThreadPoolMetrics . getJmxMetric ( server , stage . getJmxType ( ) , stage . getJmxName ( ) , " TotalBlockedTasks " ) ) ; 
 + ThreadPoolMetrics . getJmxMetric ( server , stage . getJmxType ( ) , stage . getJmxName ( ) , " TotalBlockedTasks " ) ) ) ; 
 } 
 
 / / one offs

NEAREST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 8b509bb . . 7765252 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 6 + 1 , 9 @ @ 
 dev 
 * fix live - column - count of slice ranges including tombstoned supercolumn 
 with live subcolumn ( CASSANDRA - 1591 ) 
 + * rename o . a . c . internal . AntientropyStage - > AntiEntropyStage , 
 + o . a . c . request . Request _ responseStage - > RequestResponseStage , 
 + o . a . c . internal . Internal _ responseStage - > InternalResponseStage 
 
 
 0 . 7 . 0 - rc1 
 diff - - git a / src / java / org / apache / cassandra / concurrent / Stage . java b / src / java / org / apache / cassandra / concurrent / Stage . java 
 index e3506fd . . 924f413 100644 
 - - - a / src / java / org / apache / cassandra / concurrent / Stage . java 
 + + + b / src / java / org / apache / cassandra / concurrent / Stage . java 
 @ @ - 28 , 7 + 28 , 7 @ @ public enum Stage 
 STREAM , 
 GOSSIP , 
 REQUEST _ RESPONSE , 
 - ANTIENTROPY , 
 + ANTI _ ENTROPY , 
 MIGRATION , 
 MISC , 
 INTERNAL _ RESPONSE ; 
 @ @ - 37 , 7 + 37 , 7 @ @ public enum Stage 
 { 
 switch ( this ) 
 { 
 - case ANTIENTROPY : 
 + case ANTI _ ENTROPY : 
 case GOSSIP : 
 case MIGRATION : 
 case MISC : 
 @ @ - 55 , 6 + 55 , 11 @ @ public enum Stage 
 
 public String getJmxName ( ) 
 { 
 - return toString ( ) . substring ( 0 , 1 ) + toString ( ) . substring ( 1 ) . toLowerCase ( ) + " Stage " ; 
 + String name = " " ; 
 + for ( String word : toString ( ) . split ( " _ " ) ) 
 + { 
 + name + = word . substring ( 0 , 1 ) + word . substring ( 1 ) . toLowerCase ( ) ; 
 + } 
 + return name + " Stage " ; 
 } 
 } 
 diff - - git a / src / java / org / apache / cassandra / concurrent / StageManager . java b / src / java / org / apache / cassandra / concurrent / StageManager . java 
 index c720b3e . . e4a0a7d 100644 
 - - - a / src / java / org / apache / cassandra / concurrent / StageManager . java 
 + + + b / src / java / org / apache / cassandra / concurrent / StageManager . java 
 @ @ - 47 , 7 + 47 , 7 @ @ public class StageManager 
 / / the rest are all single - threaded 
 stages . put ( Stage . STREAM , new JMXEnabledThreadPoolExecutor ( Stage . STREAM ) ) ; 
 stages . put ( Stage . GOSSIP , new JMXEnabledThreadPoolExecutor ( Stage . GOSSIP ) ) ; 
 - stages . put ( Stage . ANTIENTROPY , new JMXEnabledThreadPoolExecutor ( Stage . ANTIENTROPY ) ) ; 
 + stages . put ( Stage . ANTI _ ENTROPY , new JMXEnabledThreadPoolExecutor ( Stage . ANTI _ ENTROPY ) ) ; 
 stages . put ( Stage . MIGRATION , new JMXEnabledThreadPoolExecutor ( Stage . MIGRATION ) ) ; 
 stages . put ( Stage . MISC , new JMXEnabledThreadPoolExecutor ( Stage . MISC ) ) ; 
 } 
 diff - - git a / src / java / org / apache / cassandra / service / AntiEntropyService . java b / src / java / org / apache / cassandra / service / AntiEntropyService . java 
 index 261cc83 . . 85dea09 100644 
 - - - a / src / java / org / apache / cassandra / service / AntiEntropyService . java 
 + + + b / src / java / org / apache / cassandra / service / AntiEntropyService . java 
 @ @ - 216 , 7 + 216 , 7 @ @ public class AntiEntropyService 
 for ( Differencer differencer : differencers ) 
 { 
 logger . info ( " Queueing comparison " + differencer ) ; 
 - StageManager . getStage ( Stage . ANTIENTROPY ) . execute ( differencer ) ; 
 + StageManager . getStage ( Stage . ANTI _ ENTROPY ) . execute ( differencer ) ; 
 } 
 } 
 
 @ @ - 406 , 7 + 406 , 7 @ @ public class AntiEntropyService 
 for ( MerkleTree . RowHash minrow : minrows ) 
 range . addHash ( minrow ) ; 
 
 - StageManager . getStage ( Stage . ANTIENTROPY ) . submit ( this ) ; 
 + StageManager . getStage ( Stage . ANTI _ ENTROPY ) . submit ( this ) ; 
 logger . debug ( " Validated " + validated + " rows into AEService tree for " + request ) ; 
 } 
 
 diff - - git a / src / java / org / apache / cassandra / service / StorageService . java b / src / java / org / apache / cassandra / service / StorageService . java 
 index 19eef45 . . fa40425 100644 
 - - - a / src / java / org / apache / cassandra / service / StorageService . java 
 + + + b / src / java / org / apache / cassandra / service / StorageService . java 
 @ @ - 181 , 8 + 181 , 8 @ @ public class StorageService implements IEndpointStateChangeSubscriber , StorageSe 
 put ( Verb . STREAM _ REQUEST , Stage . STREAM ) ; 
 put ( Verb . RANGE _ SLICE , Stage . READ ) ; 
 put ( Verb . BOOTSTRAP _ TOKEN , Stage . MISC ) ; 
 - put ( Verb . TREE _ REQUEST , Stage . ANTIENTROPY ) ; 
 - put ( Verb . TREE _ RESPONSE , Stage . ANTIENTROPY ) ; 
 + put ( Verb . TREE _ REQUEST , Stage . ANTI _ ENTROPY ) ; 
 + put ( Verb . TREE _ RESPONSE , Stage . ANTI _ ENTROPY ) ; 
 put ( Verb . GOSSIP _ DIGEST _ ACK , Stage . GOSSIP ) ; 
 put ( Verb . GOSSIP _ DIGEST _ ACK2 , Stage . GOSSIP ) ; 
 put ( Verb . GOSSIP _ DIGEST _ SYN , Stage . GOSSIP ) ; 
 diff - - git a / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java b / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java 
 index 36c68ae . . 27fb331 100644 
 - - - a / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java 
 + + + b / test / unit / org / apache / cassandra / service / AntiEntropyServiceTest . java 
 @ @ - 19 , 7 + 19 , 6 @ @ 
 package org . apache . cassandra . service ; 
 
 import java . net . InetAddress ; 
 - import java . nio . ByteBuffer ; 
 import java . util . * ; 
 import java . util . concurrent . Callable ; 
 import java . util . concurrent . TimeUnit ; 
 @ @ - 47 , 7 + 46 , 6 @ @ import org . apache . cassandra . locator . TokenMetadata ; 
 import org . apache . cassandra . utils . FBUtilities ; 
 import org . apache . cassandra . utils . MerkleTree ; 
 
 - import static com . google . common . base . Charsets . UTF _ 8 ; 
 import static org . apache . cassandra . service . AntiEntropyService . * ; 
 import static org . junit . Assert . assertEquals ; 
 import static org . junit . Assert . assertTrue ; 
 @ @ - 244 , 7 + 242 , 7 @ @ public class AntiEntropyServiceTest extends CleanupHelper 
 
 void flushAES ( ) throws Exception 
 { 
 - final ThreadPoolExecutor stage = StageManager . getStage ( Stage . ANTIENTROPY ) ; 
 + final ThreadPoolExecutor stage = StageManager . getStage ( Stage . ANTI _ ENTROPY ) ; 
 final Callable noop = new Callable < Object > ( ) 
 { 
 public Boolean call ( )
