BLEU SCORE: 0.016932492841722675

TEST MSG: Avoid overlap in L1 when L0 contains many non - overlapping sstables
GENERATED MSG: merge from 2 . 0

TEST DIFF (one line): diff - - git a / CHANGES . txt b / CHANGES . txt <nl> index 8a7697b . . 2b3bd3c 100644 <nl> - - - a / CHANGES . txt <nl> + + + b / CHANGES . txt <nl> @ @ - 1 , 4 + 1 , 6 @ @ <nl> 2 . 0 . 12 : <nl> + * Avoid overlap in L1 when L0 contains many nonoverlapping <nl> + sstables ( CASSANDRA - 8211 ) <nl> * Improve PropertyFileSnitch logging ( CASSANDRA - 8183 ) <nl> * Abort liveRatio calculation if the memtable is flushed ( CASSANDRA - 8164 ) <nl> * Correctly handle non - text column names in cql3 ( CASSANDRA - 8178 ) <nl> diff - - git a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> index b704523 . . aefd573 100644 <nl> - - - a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> + + + b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java <nl> @ @ - 486 , 6 + 486 , 16 @ @ public class LeveledManifest <nl> { <nl> Set < SSTableReader > compactingL0 = ImmutableSet . copyOf ( Iterables . filter ( generations [ 0 ] , Predicates . in ( compacting ) ) ) ; <nl> <nl> + RowPosition lastCompactingKey = null ; <nl> + RowPosition firstCompactingKey = null ; <nl> + for ( SSTableReader candidate : compactingL0 ) <nl> + { <nl> + if ( firstCompactingKey = = null | | candidate . first . compareTo ( firstCompactingKey ) < 0 ) <nl> + firstCompactingKey = candidate . first ; <nl> + if ( lastCompactingKey = = null | | candidate . last . compareTo ( lastCompactingKey ) > 0 ) <nl> + lastCompactingKey = candidate . last ; <nl> + } <nl> + <nl> / / L0 is the dumping ground for new sstables which thus may overlap each other . <nl> / / <nl> / / We treat L0 compactions specially : <nl> @ @ - 513 , 9 + 523 , 7 @ @ public class LeveledManifest <nl> <nl> for ( SSTableReader newCandidate : overlappedL0 ) <nl> { <nl> - / / overlappedL0 could contain sstables that are not in compactingL0 , but do overlap <nl> - / / other sstables that are <nl> - if ( overlapping ( newCandidate , compactingL0 ) . isEmpty ( ) ) <nl> + if ( firstCompactingKey = = null | | lastCompactingKey = = null | | overlapping ( firstCompactingKey . getToken ( ) , lastCompactingKey . getToken ( ) , Arrays . asList ( newCandidate ) ) . size ( ) = = 0 ) <nl> candidates . add ( newCandidate ) ; <nl> remaining . remove ( newCandidate ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 4d8ae14 . . 254cc2d 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 340 , 7 + 340 , 7 @ @ <nl> < dependency groupId = " com . google . guava " artifactId = " guava " version = " 13 . 0 . 1 " / > <nl> < dependency groupId = " commons - cli " artifactId = " commons - cli " version = " 1 . 1 " / > <nl> < dependency groupId = " commons - codec " artifactId = " commons - codec " version = " 1 . 2 " / > <nl> - < dependency groupId = " commons - lang " artifactId = " commons - lang " version = " 3 . 1 " / > <nl> + < dependency groupId = " org . apache . commons " artifactId = " commons - lang3 " version = " 3 . 1 " / > <nl> < dependency groupId = " com . googlecode . concurrentlinkedhashmap " artifactId = " concurrentlinkedhashmap - lru " version = " 1 . 3 " / > <nl> < dependency groupId = " org . antlr " artifactId = " antlr " version = " 3 . 2 " / > <nl> < dependency groupId = " org . slf4j " artifactId = " slf4j - api " version = " 1 . 7 . 2 " / > <nl> @ @ - 438 , 7 + 438 , 7 @ @ <nl> < dependency groupId = " com . google . guava " artifactId = " guava " / > <nl> < dependency groupId = " commons - cli " artifactId = " commons - cli " / > <nl> < dependency groupId = " commons - codec " artifactId = " commons - codec " / > <nl> - < dependency groupId = " commons - lang " artifactId = " commons - lang " / > <nl> + < dependency groupId = " org . apache . commons " artifactId = " commons - lang3 " / > <nl> < dependency groupId = " com . googlecode . concurrentlinkedhashmap " artifactId = " concurrentlinkedhashmap - lru " / > <nl> < dependency groupId = " org . antlr " artifactId = " antlr " / > <nl> < dependency groupId = " org . slf4j " artifactId = " slf4j - api " / > <nl> @ @ - 479 , 7 + 479 , 7 @ @ <nl> artifactId = " cassandra - parent " <nl> version = " $ { version } " / > <nl> < scm connection = " $ { scm . connection } " developerConnection = " $ { scm . developerConnection } " url = " $ { scm . url } " / > <nl> - < dependency groupId = " commons - lang " artifactId = " commons - lang " / > <nl> + < dependency groupId = " org . apache . commons " artifactId = " commons - lang3 " / > <nl> < dependency groupId = " org . slf4j " artifactId = " slf4j - api " / > <nl> < dependency groupId = " org . apache . thrift " artifactId = " libthrift " / > <nl> < / artifact : pom >

TEST DIFF:
diff - - git a / CHANGES . txt b / CHANGES . txt 
 index 8a7697b . . 2b3bd3c 100644 
 - - - a / CHANGES . txt 
 + + + b / CHANGES . txt 
 @ @ - 1 , 4 + 1 , 6 @ @ 
 2 . 0 . 12 : 
 + * Avoid overlap in L1 when L0 contains many nonoverlapping 
 + sstables ( CASSANDRA - 8211 ) 
 * Improve PropertyFileSnitch logging ( CASSANDRA - 8183 ) 
 * Abort liveRatio calculation if the memtable is flushed ( CASSANDRA - 8164 ) 
 * Correctly handle non - text column names in cql3 ( CASSANDRA - 8178 ) 
 diff - - git a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 index b704523 . . aefd573 100644 
 - - - a / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 + + + b / src / java / org / apache / cassandra / db / compaction / LeveledManifest . java 
 @ @ - 486 , 6 + 486 , 16 @ @ public class LeveledManifest 
 { 
 Set < SSTableReader > compactingL0 = ImmutableSet . copyOf ( Iterables . filter ( generations [ 0 ] , Predicates . in ( compacting ) ) ) ; 
 
 + RowPosition lastCompactingKey = null ; 
 + RowPosition firstCompactingKey = null ; 
 + for ( SSTableReader candidate : compactingL0 ) 
 + { 
 + if ( firstCompactingKey = = null | | candidate . first . compareTo ( firstCompactingKey ) < 0 ) 
 + firstCompactingKey = candidate . first ; 
 + if ( lastCompactingKey = = null | | candidate . last . compareTo ( lastCompactingKey ) > 0 ) 
 + lastCompactingKey = candidate . last ; 
 + } 
 + 
 / / L0 is the dumping ground for new sstables which thus may overlap each other . 
 / / 
 / / We treat L0 compactions specially : 
 @ @ - 513 , 9 + 523 , 7 @ @ public class LeveledManifest 
 
 for ( SSTableReader newCandidate : overlappedL0 ) 
 { 
 - / / overlappedL0 could contain sstables that are not in compactingL0 , but do overlap 
 - / / other sstables that are 
 - if ( overlapping ( newCandidate , compactingL0 ) . isEmpty ( ) ) 
 + if ( firstCompactingKey = = null | | lastCompactingKey = = null | | overlapping ( firstCompactingKey . getToken ( ) , lastCompactingKey . getToken ( ) , Arrays . asList ( newCandidate ) ) . size ( ) = = 0 ) 
 candidates . add ( newCandidate ) ; 
 remaining . remove ( newCandidate ) ; 
 }

NEAREST DIFF:
diff - - git a / build . xml b / build . xml 
 index 4d8ae14 . . 254cc2d 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 340 , 7 + 340 , 7 @ @ 
 < dependency groupId = " com . google . guava " artifactId = " guava " version = " 13 . 0 . 1 " / > 
 < dependency groupId = " commons - cli " artifactId = " commons - cli " version = " 1 . 1 " / > 
 < dependency groupId = " commons - codec " artifactId = " commons - codec " version = " 1 . 2 " / > 
 - < dependency groupId = " commons - lang " artifactId = " commons - lang " version = " 3 . 1 " / > 
 + < dependency groupId = " org . apache . commons " artifactId = " commons - lang3 " version = " 3 . 1 " / > 
 < dependency groupId = " com . googlecode . concurrentlinkedhashmap " artifactId = " concurrentlinkedhashmap - lru " version = " 1 . 3 " / > 
 < dependency groupId = " org . antlr " artifactId = " antlr " version = " 3 . 2 " / > 
 < dependency groupId = " org . slf4j " artifactId = " slf4j - api " version = " 1 . 7 . 2 " / > 
 @ @ - 438 , 7 + 438 , 7 @ @ 
 < dependency groupId = " com . google . guava " artifactId = " guava " / > 
 < dependency groupId = " commons - cli " artifactId = " commons - cli " / > 
 < dependency groupId = " commons - codec " artifactId = " commons - codec " / > 
 - < dependency groupId = " commons - lang " artifactId = " commons - lang " / > 
 + < dependency groupId = " org . apache . commons " artifactId = " commons - lang3 " / > 
 < dependency groupId = " com . googlecode . concurrentlinkedhashmap " artifactId = " concurrentlinkedhashmap - lru " / > 
 < dependency groupId = " org . antlr " artifactId = " antlr " / > 
 < dependency groupId = " org . slf4j " artifactId = " slf4j - api " / > 
 @ @ - 479 , 7 + 479 , 7 @ @ 
 artifactId = " cassandra - parent " 
 version = " $ { version } " / > 
 < scm connection = " $ { scm . connection } " developerConnection = " $ { scm . developerConnection } " url = " $ { scm . url } " / > 
 - < dependency groupId = " commons - lang " artifactId = " commons - lang " / > 
 + < dependency groupId = " org . apache . commons " artifactId = " commons - lang3 " / > 
 < dependency groupId = " org . slf4j " artifactId = " slf4j - api " / > 
 < dependency groupId = " org . apache . thrift " artifactId = " libthrift " / > 
 < / artifact : pom >
