BLEU SCORE: 0.03283637368030199

TEST MSG: use ' table ' naming in tools
GENERATED MSG: merge from 1 . 1

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / tools / nodetool / GetEndpoints . java b / src / java / org / apache / cassandra / tools / nodetool / GetEndpoints . java <nl> index 1da5108 . . 49d2148 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / nodetool / GetEndpoints . java <nl> + + + b / src / java / org / apache / cassandra / tools / nodetool / GetEndpoints . java <nl> @ @ - 37 , 12 + 37 , 12 @ @ public class GetEndpoints extends NodeToolCmd <nl> @ Override <nl> public void execute ( NodeProbe probe ) <nl> { <nl> - checkArgument ( args . size ( ) = = 3 , " getendpoints requires ks , cf and key args " ) ; <nl> + checkArgument ( args . size ( ) = = 3 , " getendpoints requires keyspace , table and partition key arguments " ) ; <nl> String ks = args . get ( 0 ) ; <nl> - String cf = args . get ( 1 ) ; <nl> + String table = args . get ( 1 ) ; <nl> String key = args . get ( 2 ) ; <nl> <nl> - List < InetAddress > endpoints = probe . getEndpoints ( ks , cf , key ) ; <nl> + List < InetAddress > endpoints = probe . getEndpoints ( ks , table , key ) ; <nl> for ( InetAddress endpoint : endpoints ) <nl> { <nl> System . out . println ( endpoint . getHostAddress ( ) ) ; <nl> diff - - git a / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java b / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java <nl> index 14c14ad . . 2318620 100644 <nl> - - - a / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java <nl> + + + b / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java <nl> @ @ - 37 , 13 + 37 , 13 @ @ public class Snapshot extends NodeToolCmd <nl> private List < String > keyspaces = new ArrayList < > ( ) ; <nl> <nl> @ Option ( title = " table " , name = { " - cf " , " - - column - family " , " - - table " } , description = " The table name ( you must specify one and only one keyspace for using this option ) " ) <nl> - private String columnFamily = null ; <nl> + private String table = null ; <nl> <nl> @ Option ( title = " tag " , name = { " - t " , " - - tag " } , description = " The name of the snapshot " ) <nl> private String snapshotName = Long . toString ( System . currentTimeMillis ( ) ) ; <nl> <nl> - @ Option ( title = " ktlist " , name = { " - kc " , " - - kc . list " , " - kt " , " - - kt - list " } , description = " The list of Keyspace . table to take snapshot . ( you must not specify only keyspace ) " ) <nl> - private String kcList = null ; <nl> + @ Option ( title = " ktlist " , name = { " - kt " , " - - kt - list " , " - kc " , " - - kc . list " } , description = " The list of Keyspace . table to take snapshot . ( you must not specify only keyspace ) " ) <nl> + private String ktList = null ; <nl> <nl> @ Override <nl> public void execute ( NodeProbe probe ) <nl> @ @ - 55 , 11 + 55 , 11 @ @ public class Snapshot extends NodeToolCmd <nl> sb . append ( " Requested creating snapshot ( s ) for " ) ; <nl> <nl> / / Create a separate path for kclist to avoid breaking of already existing scripts <nl> - if ( null ! = kcList & & ! kcList . isEmpty ( ) ) <nl> + if ( null ! = ktList & & ! ktList . isEmpty ( ) ) <nl> { <nl> - kcList = kcList . replace ( " " , " " ) ; <nl> - if ( keyspaces . isEmpty ( ) & & null = = columnFamily ) <nl> - sb . append ( " [ " ) . append ( kcList ) . append ( " ] " ) ; <nl> + ktList = ktList . replace ( " " , " " ) ; <nl> + if ( keyspaces . isEmpty ( ) & & null = = table ) <nl> + sb . append ( " [ " ) . append ( ktList ) . append ( " ] " ) ; <nl> else <nl> { <nl> throw new IOException ( <nl> @ @ - 68 , 7 + 68 , 7 @ @ public class Snapshot extends NodeToolCmd <nl> if ( ! snapshotName . isEmpty ( ) ) <nl> sb . append ( " with snapshot name [ " ) . append ( snapshotName ) . append ( " ] " ) ; <nl> System . out . println ( sb . toString ( ) ) ; <nl> - probe . takeMultipleColumnFamilySnapshot ( snapshotName , kcList . split ( " , " ) ) ; <nl> + probe . takeMultipleColumnFamilySnapshot ( snapshotName , ktList . split ( " , " ) ) ; <nl> System . out . println ( " Snapshot directory : " + snapshotName ) ; <nl> } <nl> else <nl> @ @ - 83 , 7 + 83 , 7 @ @ public class Snapshot extends NodeToolCmd <nl> <nl> System . out . println ( sb . toString ( ) ) ; <nl> <nl> - probe . takeSnapshot ( snapshotName , columnFamily , toArray ( keyspaces , String . class ) ) ; <nl> + probe . takeSnapshot ( snapshotName , table , toArray ( keyspaces , String . class ) ) ; <nl> System . out . println ( " Snapshot directory : " + snapshotName ) ; <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> index a83fbab . . e2dc046 100644 <nl> - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java <nl> @ @ - 391 , 7 + 391 , 9 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean <nl> { <nl> Token < ? > token = StorageService . getPartitioner ( ) . getTokenFactory ( ) . fromByteArray ( row . key . key ) ; <nl> InetAddress target = StorageService . instance . getTokenMetadata ( ) . getEndpoint ( token ) ; <nl> - scheduleHintDelivery ( target ) ; <nl> + / / token may have since been removed ( in which case we have just read back a tombstone ) <nl> + if ( target ! = null ) <nl> + scheduleHintDelivery ( target ) ; <nl> } <nl> <nl> if ( logger _ . isDebugEnabled ( ) )

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / tools / nodetool / GetEndpoints . java b / src / java / org / apache / cassandra / tools / nodetool / GetEndpoints . java 
 index 1da5108 . . 49d2148 100644 
 - - - a / src / java / org / apache / cassandra / tools / nodetool / GetEndpoints . java 
 + + + b / src / java / org / apache / cassandra / tools / nodetool / GetEndpoints . java 
 @ @ - 37 , 12 + 37 , 12 @ @ public class GetEndpoints extends NodeToolCmd 
 @ Override 
 public void execute ( NodeProbe probe ) 
 { 
 - checkArgument ( args . size ( ) = = 3 , " getendpoints requires ks , cf and key args " ) ; 
 + checkArgument ( args . size ( ) = = 3 , " getendpoints requires keyspace , table and partition key arguments " ) ; 
 String ks = args . get ( 0 ) ; 
 - String cf = args . get ( 1 ) ; 
 + String table = args . get ( 1 ) ; 
 String key = args . get ( 2 ) ; 
 
 - List < InetAddress > endpoints = probe . getEndpoints ( ks , cf , key ) ; 
 + List < InetAddress > endpoints = probe . getEndpoints ( ks , table , key ) ; 
 for ( InetAddress endpoint : endpoints ) 
 { 
 System . out . println ( endpoint . getHostAddress ( ) ) ; 
 diff - - git a / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java b / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java 
 index 14c14ad . . 2318620 100644 
 - - - a / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java 
 + + + b / src / java / org / apache / cassandra / tools / nodetool / Snapshot . java 
 @ @ - 37 , 13 + 37 , 13 @ @ public class Snapshot extends NodeToolCmd 
 private List < String > keyspaces = new ArrayList < > ( ) ; 
 
 @ Option ( title = " table " , name = { " - cf " , " - - column - family " , " - - table " } , description = " The table name ( you must specify one and only one keyspace for using this option ) " ) 
 - private String columnFamily = null ; 
 + private String table = null ; 
 
 @ Option ( title = " tag " , name = { " - t " , " - - tag " } , description = " The name of the snapshot " ) 
 private String snapshotName = Long . toString ( System . currentTimeMillis ( ) ) ; 
 
 - @ Option ( title = " ktlist " , name = { " - kc " , " - - kc . list " , " - kt " , " - - kt - list " } , description = " The list of Keyspace . table to take snapshot . ( you must not specify only keyspace ) " ) 
 - private String kcList = null ; 
 + @ Option ( title = " ktlist " , name = { " - kt " , " - - kt - list " , " - kc " , " - - kc . list " } , description = " The list of Keyspace . table to take snapshot . ( you must not specify only keyspace ) " ) 
 + private String ktList = null ; 
 
 @ Override 
 public void execute ( NodeProbe probe ) 
 @ @ - 55 , 11 + 55 , 11 @ @ public class Snapshot extends NodeToolCmd 
 sb . append ( " Requested creating snapshot ( s ) for " ) ; 
 
 / / Create a separate path for kclist to avoid breaking of already existing scripts 
 - if ( null ! = kcList & & ! kcList . isEmpty ( ) ) 
 + if ( null ! = ktList & & ! ktList . isEmpty ( ) ) 
 { 
 - kcList = kcList . replace ( " " , " " ) ; 
 - if ( keyspaces . isEmpty ( ) & & null = = columnFamily ) 
 - sb . append ( " [ " ) . append ( kcList ) . append ( " ] " ) ; 
 + ktList = ktList . replace ( " " , " " ) ; 
 + if ( keyspaces . isEmpty ( ) & & null = = table ) 
 + sb . append ( " [ " ) . append ( ktList ) . append ( " ] " ) ; 
 else 
 { 
 throw new IOException ( 
 @ @ - 68 , 7 + 68 , 7 @ @ public class Snapshot extends NodeToolCmd 
 if ( ! snapshotName . isEmpty ( ) ) 
 sb . append ( " with snapshot name [ " ) . append ( snapshotName ) . append ( " ] " ) ; 
 System . out . println ( sb . toString ( ) ) ; 
 - probe . takeMultipleColumnFamilySnapshot ( snapshotName , kcList . split ( " , " ) ) ; 
 + probe . takeMultipleColumnFamilySnapshot ( snapshotName , ktList . split ( " , " ) ) ; 
 System . out . println ( " Snapshot directory : " + snapshotName ) ; 
 } 
 else 
 @ @ - 83 , 7 + 83 , 7 @ @ public class Snapshot extends NodeToolCmd 
 
 System . out . println ( sb . toString ( ) ) ; 
 
 - probe . takeSnapshot ( snapshotName , columnFamily , toArray ( keyspaces , String . class ) ) ; 
 + probe . takeSnapshot ( snapshotName , table , toArray ( keyspaces , String . class ) ) ; 
 System . out . println ( " Snapshot directory : " + snapshotName ) ; 
 } 
 }

NEAREST DIFF:
diff - - git a / src / java / org / apache / cassandra / db / HintedHandOffManager . java b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 index a83fbab . . e2dc046 100644 
 - - - a / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 + + + b / src / java / org / apache / cassandra / db / HintedHandOffManager . java 
 @ @ - 391 , 7 + 391 , 9 @ @ public class HintedHandOffManager implements HintedHandOffManagerMBean 
 { 
 Token < ? > token = StorageService . getPartitioner ( ) . getTokenFactory ( ) . fromByteArray ( row . key . key ) ; 
 InetAddress target = StorageService . instance . getTokenMetadata ( ) . getEndpoint ( token ) ; 
 - scheduleHintDelivery ( target ) ; 
 + / / token may have since been removed ( in which case we have just read back a tombstone ) 
 + if ( target ! = null ) 
 + scheduleHintDelivery ( target ) ; 
 } 
 
 if ( logger _ . isDebugEnabled ( ) )
