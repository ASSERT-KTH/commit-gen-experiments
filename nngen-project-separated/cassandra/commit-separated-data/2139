BLEU SCORE: 0.012414943415352932

TEST MSG: In RowDataResolver , reduce calls to replies . size ( ) , and use replies . peek ( ) instead of replies . iterator ( ) . next ( )
GENERATED MSG: Fix AbstractRowResolver and RowDigestResolver for speculative retries

TEST DIFF (one line): diff - - git a / src / java / org / apache / cassandra / service / AbstractRowResolver . java b / src / java / org / apache / cassandra / service / AbstractRowResolver . java <nl> index 1fbb92b . . fbbf473 100644 <nl> - - - a / src / java / org / apache / cassandra / service / AbstractRowResolver . java <nl> + + + b / src / java / org / apache / cassandra / service / AbstractRowResolver . java <nl> @ @ - 18 , 7 + 18 , 7 @ @ <nl> package org . apache . cassandra . service ; <nl> <nl> import java . nio . ByteBuffer ; <nl> - import java . util . Collection ; <nl> + import java . util . Queue ; <nl> import java . util . concurrent . ConcurrentLinkedQueue ; <nl> <nl> import org . slf4j . Logger ; <nl> @ @ - 35 , 7 + 35 , 7 @ @ public abstract class AbstractRowResolver implements IResponseResolver < ReadRespo <nl> <nl> protected final String keyspaceName ; <nl> / / CLQ gives us thread - safety without the overhead of guaranteeing uniqueness like a Set would <nl> - protected final Collection < MessageIn < ReadResponse > > replies = new ConcurrentLinkedQueue < > ( ) ; <nl> + protected final Queue < MessageIn < ReadResponse > > replies = new ConcurrentLinkedQueue < > ( ) ; <nl> protected final DecoratedKey key ; <nl> <nl> public AbstractRowResolver ( ByteBuffer key , String keyspaceName ) <nl> diff - - git a / src / java / org / apache / cassandra / service / RowDataResolver . java b / src / java / org / apache / cassandra / service / RowDataResolver . java <nl> index f5eee40 . . 9c24776 100644 <nl> - - - a / src / java / org / apache / cassandra / service / RowDataResolver . java <nl> + + + b / src / java / org / apache / cassandra / service / RowDataResolver . java <nl> @ @ - 57 , 15 + 57 , 16 @ @ public class RowDataResolver extends AbstractRowResolver <nl> * / <nl> public Row resolve ( ) throws DigestMismatchException <nl> { <nl> + int replyCount = replies . size ( ) ; <nl> if ( logger . isDebugEnabled ( ) ) <nl> - logger . debug ( " resolving { } responses " , replies . size ( ) ) ; <nl> + logger . debug ( " resolving { } responses " , replyCount ) ; <nl> long start = System . nanoTime ( ) ; <nl> <nl> ColumnFamily resolved ; <nl> - if ( replies . size ( ) > 1 ) <nl> + if ( replyCount > 1 ) <nl> { <nl> - List < ColumnFamily > versions = new ArrayList < ColumnFamily > ( replies . size ( ) ) ; <nl> - List < InetAddress > endpoints = new ArrayList < InetAddress > ( replies . size ( ) ) ; <nl> + List < ColumnFamily > versions = new ArrayList < > ( replyCount ) ; <nl> + List < InetAddress > endpoints = new ArrayList < > ( replyCount ) ; <nl> <nl> for ( MessageIn < ReadResponse > message : replies ) <nl> { <nl> @ @ - 158 , 7 + 159 , 7 @ @ public class RowDataResolver extends AbstractRowResolver <nl> <nl> public Row getData ( ) <nl> { <nl> - return replies . iterator ( ) . next ( ) . payload . row ( ) ; <nl> + return replies . peek ( ) . payload . row ( ) ; <nl> } <nl> <nl> public boolean isDataPresent ( )
NEAREST DIFF (one line): diff - - git a / NEWS . txt b / NEWS . txt <nl> index e39d5cd . . 69ab4fd 100644 <nl> - - - a / NEWS . txt <nl> + + + b / NEWS . txt <nl> @ @ - 19 , 6 + 19 , 8 @ @ using the provided ' sstableupgrade ' tool . <nl> <nl> New features <nl> - - - - - - - - - - - - <nl> + - Speculative retry defaults to 99th percentile <nl> + ( See blog post at http : / / www . datastax . com / dev / blog / rapid - read - protection - in - cassandra - 2 - 0 - 2 ) <nl> - Configurable metrics reporting <nl> ( see conf / metrics - reporter - config - sample . yaml ) <nl> - Compaction history and stats are now saved to system keyspace <nl> diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> index 479dafc . . d63ee01 100644 <nl> - - - a / src / java / org / apache / cassandra / config / CFMetaData . java <nl> + + + b / src / java / org / apache / cassandra / config / CFMetaData . java <nl> @ @ - 83 , 7 + 83 , 7 @ @ public final class CFMetaData <nl> public final static Class < ? extends AbstractCompactionStrategy > DEFAULT _ COMPACTION _ STRATEGY _ CLASS = SizeTieredCompactionStrategy . class ; <nl> public final static Caching DEFAULT _ CACHING _ STRATEGY = Caching . KEYS _ ONLY ; <nl> public final static int DEFAULT _ DEFAULT _ TIME _ TO _ LIVE = 0 ; <nl> - public final static SpeculativeRetry DEFAULT _ SPECULATIVE _ RETRY = new SpeculativeRetry ( SpeculativeRetry . RetryType . NONE , 0 ) ; <nl> + public final static SpeculativeRetry DEFAULT _ SPECULATIVE _ RETRY = new SpeculativeRetry ( SpeculativeRetry . RetryType . PERCENTILE , 0 . 99 ) ; <nl> public final static int DEFAULT _ INDEX _ INTERVAL = 128 ; <nl> public final static boolean DEFAULT _ POPULATE _ IO _ CACHE _ ON _ FLUSH = false ; <nl>

TEST DIFF:
diff - - git a / src / java / org / apache / cassandra / service / AbstractRowResolver . java b / src / java / org / apache / cassandra / service / AbstractRowResolver . java 
 index 1fbb92b . . fbbf473 100644 
 - - - a / src / java / org / apache / cassandra / service / AbstractRowResolver . java 
 + + + b / src / java / org / apache / cassandra / service / AbstractRowResolver . java 
 @ @ - 18 , 7 + 18 , 7 @ @ 
 package org . apache . cassandra . service ; 
 
 import java . nio . ByteBuffer ; 
 - import java . util . Collection ; 
 + import java . util . Queue ; 
 import java . util . concurrent . ConcurrentLinkedQueue ; 
 
 import org . slf4j . Logger ; 
 @ @ - 35 , 7 + 35 , 7 @ @ public abstract class AbstractRowResolver implements IResponseResolver < ReadRespo 
 
 protected final String keyspaceName ; 
 / / CLQ gives us thread - safety without the overhead of guaranteeing uniqueness like a Set would 
 - protected final Collection < MessageIn < ReadResponse > > replies = new ConcurrentLinkedQueue < > ( ) ; 
 + protected final Queue < MessageIn < ReadResponse > > replies = new ConcurrentLinkedQueue < > ( ) ; 
 protected final DecoratedKey key ; 
 
 public AbstractRowResolver ( ByteBuffer key , String keyspaceName ) 
 diff - - git a / src / java / org / apache / cassandra / service / RowDataResolver . java b / src / java / org / apache / cassandra / service / RowDataResolver . java 
 index f5eee40 . . 9c24776 100644 
 - - - a / src / java / org / apache / cassandra / service / RowDataResolver . java 
 + + + b / src / java / org / apache / cassandra / service / RowDataResolver . java 
 @ @ - 57 , 15 + 57 , 16 @ @ public class RowDataResolver extends AbstractRowResolver 
 * / 
 public Row resolve ( ) throws DigestMismatchException 
 { 
 + int replyCount = replies . size ( ) ; 
 if ( logger . isDebugEnabled ( ) ) 
 - logger . debug ( " resolving { } responses " , replies . size ( ) ) ; 
 + logger . debug ( " resolving { } responses " , replyCount ) ; 
 long start = System . nanoTime ( ) ; 
 
 ColumnFamily resolved ; 
 - if ( replies . size ( ) > 1 ) 
 + if ( replyCount > 1 ) 
 { 
 - List < ColumnFamily > versions = new ArrayList < ColumnFamily > ( replies . size ( ) ) ; 
 - List < InetAddress > endpoints = new ArrayList < InetAddress > ( replies . size ( ) ) ; 
 + List < ColumnFamily > versions = new ArrayList < > ( replyCount ) ; 
 + List < InetAddress > endpoints = new ArrayList < > ( replyCount ) ; 
 
 for ( MessageIn < ReadResponse > message : replies ) 
 { 
 @ @ - 158 , 7 + 159 , 7 @ @ public class RowDataResolver extends AbstractRowResolver 
 
 public Row getData ( ) 
 { 
 - return replies . iterator ( ) . next ( ) . payload . row ( ) ; 
 + return replies . peek ( ) . payload . row ( ) ; 
 } 
 
 public boolean isDataPresent ( )

NEAREST DIFF:
diff - - git a / NEWS . txt b / NEWS . txt 
 index e39d5cd . . 69ab4fd 100644 
 - - - a / NEWS . txt 
 + + + b / NEWS . txt 
 @ @ - 19 , 6 + 19 , 8 @ @ using the provided ' sstableupgrade ' tool . 
 
 New features 
 - - - - - - - - - - - - 
 + - Speculative retry defaults to 99th percentile 
 + ( See blog post at http : / / www . datastax . com / dev / blog / rapid - read - protection - in - cassandra - 2 - 0 - 2 ) 
 - Configurable metrics reporting 
 ( see conf / metrics - reporter - config - sample . yaml ) 
 - Compaction history and stats are now saved to system keyspace 
 diff - - git a / src / java / org / apache / cassandra / config / CFMetaData . java b / src / java / org / apache / cassandra / config / CFMetaData . java 
 index 479dafc . . d63ee01 100644 
 - - - a / src / java / org / apache / cassandra / config / CFMetaData . java 
 + + + b / src / java / org / apache / cassandra / config / CFMetaData . java 
 @ @ - 83 , 7 + 83 , 7 @ @ public final class CFMetaData 
 public final static Class < ? extends AbstractCompactionStrategy > DEFAULT _ COMPACTION _ STRATEGY _ CLASS = SizeTieredCompactionStrategy . class ; 
 public final static Caching DEFAULT _ CACHING _ STRATEGY = Caching . KEYS _ ONLY ; 
 public final static int DEFAULT _ DEFAULT _ TIME _ TO _ LIVE = 0 ; 
 - public final static SpeculativeRetry DEFAULT _ SPECULATIVE _ RETRY = new SpeculativeRetry ( SpeculativeRetry . RetryType . NONE , 0 ) ; 
 + public final static SpeculativeRetry DEFAULT _ SPECULATIVE _ RETRY = new SpeculativeRetry ( SpeculativeRetry . RetryType . PERCENTILE , 0 . 99 ) ; 
 public final static int DEFAULT _ INDEX _ INTERVAL = 128 ; 
 public final static boolean DEFAULT _ POPULATE _ IO _ CACHE _ ON _ FLUSH = false ; 

