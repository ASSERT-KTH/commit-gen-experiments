diff - - git a / CHANGES . md b / CHANGES . md <nl> index f670670 . . bcef09d 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 2 , 6 + 2 , 15 @ @ NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and AL 2 . 0 ( see LICENSE <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> + Next release ( 5 . 4 . 0 ) <nl> + = = = = = = = = = = = = = = = = = = = = <nl> + <nl> + Features <nl> + - - - - - - - - <nl> + <nl> + Bug Fixes <nl> + - - - - - - - - - <nl> + <nl> Release 5 . 3 . 0 <nl> = = = = = = = = = = = = = <nl> <nl> diff - - git a / build . xml b / build . xml <nl> index b50328b . . aa62ff2 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 59 , 7 + 59 , 7 @ @ <nl> <nl> < ! - - JNA library release version - android versionCode is derived from mjar / minor / revision - - > <nl> < property name = " jna . major " value = " 5 " / > <nl> - < property name = " jna . minor " value = " 3 " / > <nl> + < property name = " jna . minor " value = " 4 " / > <nl> < property name = " jna . revision " value = " 0 " / > <nl> < property name = " jna . build " value = " 0 " / > < ! - - $ { build . number } - - > <nl> < condition property = " version . suffix " value = " " else = " - SNAPSHOT " >
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 40cd091 . . c0e4ae2 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 16 , 6 + 16 , 7 @ @ Features <nl> * [ # 1068 ] ( https : / / github . com / java - native - access / jna / pull / 1068 ) : ` c . s . j . p . win32 . Advapi32Util . getAccountBySid ( String systemName , PSID sid ) ` ignored parameter instead of passing it to the native function - [ @ nirud ] ( https : / / github . com / nirud ) . <nl> * [ # 813 ] ( https : / / github . com / java - native - access / jna / issues / 813 ) : Support for default methods on interfaces ( experimental ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 1073 ] ( https : / / github . com / java - native - access / jna / issues / 1073 ) : Support COM setters with multiple parameters using ` c . s . j . p . win32 . COM . util . ProxyObject ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 1083 ] ( https : / / github . com / java - native - access / jna / issues / 1083 ) : Prevent access to unsupported values in ` c . s . j . p . win32 . COM . WbemcliUtil # enumerateProperties ` and bind ` c . s . j . p . win32 . COM . Wbemcli . IWbemClassObject . GetNames ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / WbemcliUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / WbemcliUtil . java <nl> index 3589f9f . . 828361b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / WbemcliUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / WbemcliUtil . java <nl> @ @ - 41 , 6 + 41 , 10 @ @ import com . sun . jna . platform . win32 . COM . Wbemcli . IEnumWbemClassObject ; <nl> import com . sun . jna . platform . win32 . COM . Wbemcli . IWbemClassObject ; <nl> import com . sun . jna . platform . win32 . COM . Wbemcli . IWbemLocator ; <nl> import com . sun . jna . platform . win32 . COM . Wbemcli . IWbemServices ; <nl> + import static com . sun . jna . platform . win32 . Variant . VT _ ARRAY ; <nl> + import static com . sun . jna . platform . win32 . Variant . VT _ DISPATCH ; <nl> + import static com . sun . jna . platform . win32 . Variant . VT _ UNKNOWN ; <nl> + import static com . sun . jna . platform . win32 . Variant . VT _ VECTOR ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> <nl> / * * <nl> @ @ - 271 , 7 + 275 , 9 @ @ public class WbemcliUtil { <nl> * will always wait for results . <nl> * <nl> * @ return A WmiResult object encapsulating an EnumMap which will hold <nl> - * the results . <nl> + * the results . Values , that are not supported by this helper <nl> + * ( { @ code Dispatch } , { @ code Unknown } , { @ code SAFEARRAY } ) are <nl> + * not returned and reported as { @ code null } . <nl> * <nl> * @ throws TimeoutException <nl> * if the query times out before completion <nl> @ @ - 336 , 12 + 342 , 20 @ @ public class WbemcliUtil { <nl> case Variant . VT _ R8 : <nl> values . add ( vtType , cimType , property , pVal . doubleValue ( ) ) ; <nl> break ; <nl> + case Variant . VT _ EMPTY : <nl> case Variant . VT _ NULL : <nl> values . add ( vtType , cimType , property , null ) ; <nl> break ; <nl> / / Unimplemented type . User must cast <nl> default : <nl> - values . add ( vtType , cimType , property , pVal . getValue ( ) ) ; <nl> + if ( ( ( vtType & VT _ ARRAY ) = = VT _ ARRAY ) | | <nl> + ( ( vtType & VT _ UNKNOWN ) = = VT _ UNKNOWN ) | | <nl> + ( ( vtType & VT _ DISPATCH ) = = VT _ DISPATCH ) | | <nl> + ( ( vtType & VT _ VECTOR ) = = VT _ VECTOR ) ) { <nl> + values . add ( vtType , cimType , property , null ) ; <nl> + } else { <nl> + values . add ( vtType , cimType , property , pVal . getValue ( ) ) ; <nl> + } <nl> } <nl> OleAuto . INSTANCE . VariantClear ( pVal ) ; <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java <nl> index 763ba26 . . 9d6ae26 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java <nl> @ @ - 291 , 4 + 291 , 22 @ @ public class WbemcliTest { <nl> assertEquals ( Variant . VT _ BOOL , os . getVtType ( OperatingSystemProperty . PRIMARY ) ) ; <nl> assertNotNull ( os . getValue ( OperatingSystemProperty . PRIMARY , 0 ) ) ; <nl> } <nl> + <nl> + enum Win32 _ DiskDrive _ Values { <nl> + CAPTION , <nl> + CAPABILITIES <nl> + } <nl> + <nl> + @ Test <nl> + public void testUnsupportedValues ( ) { <nl> + WmiQuery < Win32 _ DiskDrive _ Values > serialNumberQuery = new WmiQuery < Win32 _ DiskDrive _ Values > ( " Win32 _ DiskDrive " , Win32 _ DiskDrive _ Values . class ) ; <nl> + WmiResult < Win32 _ DiskDrive _ Values > result = serialNumberQuery . execute ( ) ; <nl> + assertTrue ( result . getResultCount ( ) > 0 ) ; <nl> + for ( int i = 0 ; i < result . getResultCount ( ) ; i + + ) { <nl> + assertNotNull ( result . getValue ( Win32 _ DiskDrive _ Values . CAPTION , i ) ) ; <nl> + / / Capabilities are represented by a SAFEARRAY , this not supported <nl> + / / in the simplified API <nl> + assertNull ( result . getValue ( Win32 _ DiskDrive _ Values . CAPABILITIES , i ) ) ; <nl> + } <nl> + } <nl> }
diff - - git a / LICENSE . AL b / LICENSE . AL <nl> deleted file mode 100644 <nl> index a958a38 . . 0000000 <nl> - - - a / LICENSE . AL <nl> + + + / dev / null <nl> @ @ - 1 , 12 + 0 , 0 @ @ <nl> - This copy of JNA is licensed under the <nl> - Apache ( Software ) License , version 2 . 0 ( " the License " ) . <nl> - See the License for details about distribution rights , and the <nl> - specific rights regarding derivate works . <nl> - <nl> - You may obtain a copy of the License at : <nl> - <nl> - http : / / www . apache . org / licenses / <nl> - <nl> - A copy is also included in the downloadable source code package <nl> - containing JNA , in file " AL2 . 0 " , under the same directory <nl> - as this file . <nl> diff - - git a / LICENSE . LGPL b / LICENSE . LGPL <nl> deleted file mode 100644 <nl> index b4b063e . . 0000000 <nl> - - - a / LICENSE . LGPL <nl> + + + / dev / null <nl> @ @ - 1 , 13 + 0 , 0 @ @ <nl> - This copy of JNA is licensed under the <nl> - Lesser General Public License ( LGPL ) , version 2 . 1 ( " the License " ) . <nl> - See the License for details about distribution rights , and the <nl> - specific rights regarding derivate works . <nl> - <nl> - You may obtain a copy of the License at : <nl> - <nl> - http : / / www . gnu . org / licenses / licenses . html <nl> - <nl> - A copy is also included in the downloadable source code package <nl> - containing JNA , in file " LGPL2 . 1 " , under the same directory <nl> - as this file . <nl> - <nl> diff - - git a / build . xml b / build . xml <nl> index cd2feb7 . . 528aa4b 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 582 , 6 + 582 , 9 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < zipfileset src = " $ { lib . native } / w32ce - arm . jar " <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / w32ce - arm " / > <nl> + < zipfileset dir = " . " <nl> + includes = " LICENSE , LGPL2 . 1 , AL2 . 0 " <nl> + prefix = " META - INF " / > <nl> < / jar > <nl> < zip zipfile = " $ { build } / $ { minjar } " > <nl> < zipfileset src = " $ { build } / $ { jar } " excludes = " * * / * jnidispatch * " / > <nl> diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index 1de4a6d . . 6c4656b 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 150 , 6 + 150 , 11 @ @ com . sun . jna . platform . win32 . COM . tlb . imp ; version = $ { osgi . version } , <nl> com . sun . jna . platform . wince ; version = $ { osgi . version } <nl> " / > <nl> < / manifest > <nl> + < delete dir = " $ { build . classes . dir } / META - INF " / > <nl> + < mkdir dir = " $ { build . classes . dir } / META - INF " / > <nl> + < copy todir = " $ { build . classes . dir } / META - INF " > <nl> + < fileset dir = " . . / . . / " includes = " LICENSE , AL2 . 0 , LGPL2 . 1 " / > <nl> + < / copy > <nl> < / target > <nl> <nl> < condition property = " compatibility - check " value = " true " >
diff - - git a / contrib / platform / nbproject / project . properties b / contrib / platform / nbproject / project . properties <nl> index 0f17e61 . . fe6ceb7 100644 <nl> - - - a / contrib / platform / nbproject / project . properties <nl> + + + b / contrib / platform / nbproject / project . properties <nl> @ @ - 29 , 6 + 29 , 8 @ @ dist . jar = $ { dist . dir } / jna - platform . jar <nl> dist . javadoc . dir = $ { dist . dir } / javadoc <nl> endorsed . classpath = <nl> excludes = <nl> + file . reference . bcpkix - jdk15on - 161 . jar = . . / . . / lib / test / bcpkix - jdk15on - 161 . jar <nl> + file . reference . bcprov - jdk15on - 161 . jar = . . / . . / lib / test / bcprov - jdk15on - 161 . jar <nl> file . reference . hamcrest - core - 1 . 3 . jar = . . / . . / lib / hamcrest - core - 1 . 3 . jar <nl> file . reference . jna . jar = . . / . . / build / jna . jar <nl> file . reference . jna - test . jar = . . / . . / build / jna - test . jar <nl> @ @ - 57 , 7 + 59 , 9 @ @ javac . test . classpath = \ <nl> $ { file . reference . jna - test . jar } : \ <nl> $ { build . classes . dir } : \ <nl> $ { file . reference . junit . jar } : \ <nl> - $ { file . reference . hamcrest - core - 1 . 3 . jar } <nl> + $ { file . reference . hamcrest - core - 1 . 3 . jar } : \ <nl> + $ { file . reference . bcpkix - jdk15on - 161 . jar } : \ <nl> + $ { file . reference . bcprov - jdk15on - 161 . jar } <nl> javadoc . additionalparam = <nl> javadoc . author = false <nl> javadoc . encoding = <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Crypt32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Crypt32Test . java <nl> index d6f6ab2 . . 50f0b01 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Crypt32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Crypt32Test . java <nl> @ @ - 25 , 8 + 25 , 6 @ @ package com . sun . jna . platform . win32 ; <nl> import java . security . * ; <nl> import java . security . cert . X509Certificate ; <nl> <nl> - import sun . security . tools . keytool . * ; <nl> - import sun . security . x509 . X500Name ; <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . platform . win32 . WinCrypt . DATA _ BLOB ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> @ @ - 40 , 15 + 38 , 29 @ @ import com . sun . jna . platform . win32 . WinCryptUtil . MANAGED _ CRYPT _ SIGN _ MESSAGE _ PARA ; <nl> import java . io . ByteArrayOutputStream ; <nl> import java . io . IOException ; <nl> import java . io . InputStream ; <nl> + import java . math . BigInteger ; <nl> import java . util . Arrays ; <nl> + import java . util . Date ; <nl> import java . util . List ; <nl> + import java . util . logging . Level ; <nl> + import java . util . logging . Logger ; <nl> <nl> import junit . framework . TestCase ; <nl> + import org . bouncycastle . asn1 . x500 . X500Name ; <nl> + import org . bouncycastle . cert . X509v3CertificateBuilder ; <nl> + import org . bouncycastle . cert . jcajce . JcaX509CertificateConverter ; <nl> + import org . bouncycastle . cert . jcajce . JcaX509v3CertificateBuilder ; <nl> + import org . bouncycastle . jce . provider . BouncyCastleProvider ; <nl> + import org . bouncycastle . operator . ContentSigner ; <nl> + import org . bouncycastle . operator . jcajce . JcaContentSignerBuilder ; <nl> <nl> / * * <nl> * @ author dblock [ at ] dblock [ dot ] org <nl> * / <nl> public class Crypt32Test extends TestCase { <nl> + <nl> + private static final Logger LOG = Logger . getLogger ( Crypt32Test . class . getName ( ) ) ; <nl> + <nl> private static final String TESTCERT _ CN = " cryptsigntest " ; <nl> <nl> / * * <nl> @ @ - 391 , 14 + 403 , 30 @ @ public class Crypt32Test extends TestCase { <nl> KeyStore keyStore = KeyStore . getInstance ( " Windows - MY " , " SunMSCAPI " ) ; <nl> keyStore . load ( null , null ) ; <nl> <nl> - CertAndKeyGen certAndKeyGen = new CertAndKeyGen ( " RSA " , " SHA256WithRSA " , null ) ; <nl> - certAndKeyGen . generate ( 1024 ) ; <nl> + X500Name xx500Name = new X500Name ( " CN = cryptsigntest " ) ; <nl> + <nl> + KeyPairGenerator keyGen = KeyPairGenerator . getInstance ( " RSA " ) ; <nl> + keyGen . initialize ( 2048 ) ; <nl> + KeyPair key = keyGen . generateKeyPair ( ) ; <nl> + PrivateKey privKey = key . getPrivate ( ) ; <nl> + PublicKey pubKey = key . getPublic ( ) ; <nl> + <nl> + ContentSigner sigGen = new JcaContentSignerBuilder ( " SHA256withRSA " ) . build ( privKey ) ; <nl> + X509v3CertificateBuilder certGen = new JcaX509v3CertificateBuilder ( <nl> + xx500Name , <nl> + BigInteger . valueOf ( 1 ) , <nl> + new Date ( System . currentTimeMillis ( ) - 5 * 60 * 1000 ) , <nl> + new Date ( ( long ) ( System . currentTimeMillis ( ) + 24L * 60L * 60L * 1000L ) ) , <nl> + xx500Name , / / Subject <nl> + pubKey / / Publickey to be associated with the certificate <nl> + ) ; <nl> <nl> - X509Certificate certificate = certAndKeyGen . getSelfCertificate ( new X500Name ( " CN = cryptsigntest " ) , 24 * 60 * 60 ) ; <nl> + Provider BC = new BouncyCastleProvider ( ) ; <nl> + X509Certificate certificate = new JcaX509CertificateConverter ( ) . setProvider ( BC ) . getCertificate ( certGen . build ( sigGen ) ) ; <nl> <nl> - keyStore . setKeyEntry ( TESTCERT _ CN , certAndKeyGen . getPrivateKey ( ) , null , new X509Certificate [ ] { certificate } ) ; <nl> + keyStore . setKeyEntry ( TESTCERT _ CN , privKey , null , new X509Certificate [ ] { certificate } ) ; <nl> } catch ( Exception e ) { <nl> - System . out . println ( " Unable to complete test . Certificate creation failed . " ) ; <nl> + LOG . log ( Level . SEVERE , " Unable to complete test . Certificate creation failed . " , e ) ; <nl> return false ; <nl> } <nl> <nl> diff - - git a / lib / test / bcpkix - jdk15on - 161 . jar b / lib / test / bcpkix - jdk15on - 161 . jar <nl> new file mode 100644 <nl> index 0000000 . . c9657cd <nl> Binary files / dev / null and b / lib / test / bcpkix - jdk15on - 161 . jar differ <nl> diff - - git a / lib / test / bcprov - jdk15on - 161 . jar b / lib / test / bcprov - jdk15on - 161 . jar <nl> new file mode 100644 <nl> index 0000000 . . 1fdff38 <nl> Binary files / dev / null and b / lib / test / bcprov - jdk15on - 161 . jar differ
diff - - git a / build . xml b / build . xml <nl> index c66c318 . . f69e67e 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 156 , 8 + 156 , 6 @ @ <nl> < javac classpath = " lib / ant . jar " <nl> destdir = " $ { build } / ant - tools " <nl> includeantruntime = " false " <nl> - source = " 1 . 6 " <nl> - target = " 1 . 6 " <nl> encoding = " UTF - 8 " <nl> > <nl> < src path = " src " / > <nl> @ @ - 415 , 7 + 413 , 7 @ @ <nl> < attribute name = " Bundle - Description " value = " JNA Library " / > <nl> < attribute name = " Bundle - SymbolicName " value = " com . sun . jna " / > <nl> < attribute name = " Bundle - Version " value = " $ { jna . major } . $ { jna . minor } . $ { jna . revision } " / > <nl> - < attribute name = " Bundle - RequiredExecutionEnvironment " value = " J2SE - 1 . 4 " / > <nl> + < attribute name = " Bundle - RequiredExecutionEnvironment " value = " JavaSE - 1 . 6 " / > <nl> < attribute name = " Bundle - Vendor " value = " $ { vendor } " / > <nl> < attribute name = " Bundle - ActivationPolicy " value = " lazy " / > <nl> < attribute name = " Export - Package " value = " com . sun . jna ; version = $ { jna . major } . $ { jna . minor } . $ { jna . revision } , com . sun . jna . ptr ; version = $ { jna . major } . $ { jna . minor } . $ { jna . revision } , com . sun . jna . win32 ; version = $ { jna . major } . $ { jna . minor } . $ { jna . revision } " / >
diff - - git a / src / com / sun / jna / Pointer . java b / src / com / sun / jna / Pointer . java <nl> index 09caa94 . . 1f85885 100644 <nl> - - - a / src / com / sun / jna / Pointer . java <nl> + + + b / src / com / sun / jna / Pointer . java <nl> @ @ - 830 , 10 + 830 , 9 @ @ public class Pointer { <nl> } <nl> } else { <nl> while ( ( p = getPointer ( offset + addOffset ) ) ! = null ) { <nl> - String s = p = = null <nl> - ? null <nl> - : ( NativeString . WIDE _ STRING . equals ( encoding ) <nl> - ? p . getWideString ( 0 ) : p . getString ( 0 , encoding ) ) ; <nl> + String s = NativeString . WIDE _ STRING . equals ( encoding ) <nl> + ? p . getWideString ( 0 ) <nl> + : p . getString ( 0 , encoding ) ; <nl> strings . add ( s ) ; <nl> addOffset + = Native . POINTER _ SIZE ; <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 93ff868 . . 81a3187 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 14 , 7 + 14 , 8 @ @ Features <nl> * [ # 1065 ] ( https : / / github . com / java - native - access / jna / pull / 1065 ) : Add ` c . s . j . p . win32 . PowrProf # CallNTPowerInformation ` and supporting structures - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 1063 ] ( https : / / github . com / java - native - access / jna / pull / 1063 ) : Enhance ` c . s . j . p . win32 . User32 ` and associated classes to support keyboard related functionality . - [ @ kevemueller ] ( https : / / github . com / kevemueller ) . <nl> * [ # 1068 ] ( https : / / github . com / java - native - access / jna / pull / 1068 ) : ` c . s . j . p . win32 . Advapi32Util . getAccountBySid ( String systemName , PSID sid ) ` ignored parameter instead of passing it to the native function - [ @ nirud ] ( https : / / github . com / nirud ) . <nl> - * [ # 813 ] ( https : / / github . com / java - native - access / jna / issues / 813 ) : Support for default mehods on interfaces ( experimental ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 813 ] ( https : / / github . com / java - native - access / jna / issues / 813 ) : Support for default methods on interfaces ( experimental ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 1073 ] ( https : / / github . com / java - native - access / jna / issues / 1073 ) : Support COM setters with multiple parameters using ` c . s . j . p . win32 . COM . util . ProxyObject ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> index 57f6fa6 . . 5970a1c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> @ @ - 228 , 13 + 228 , 14 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> ComProperty prop = method . getAnnotation ( ComProperty . class ) ; <nl> if ( null ! = prop ) { <nl> int dispId = prop . dispId ( ) ; <nl> + Object [ ] fullLengthArgs = unfoldWhenVarargs ( method , args ) ; <nl> if ( isVoid ) { <nl> if ( dispId ! = - 1 ) { <nl> - this . setProperty ( new DISPID ( dispId ) , args [ 0 ] ) ; <nl> + this . setProperty ( new DISPID ( dispId ) , fullLengthArgs ) ; <nl> return null ; <nl> } else { <nl> String propName = this . getMutatorName ( method , prop ) ; <nl> - this . setProperty ( propName , args [ 0 ] ) ; <nl> + this . setProperty ( propName , fullLengthArgs ) ; <nl> return null ; <nl> } <nl> } else { <nl> @ @ - 368 , 6 + 369 , 35 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> COMUtils . checkRC ( hr ) ; <nl> } <nl> <nl> + private void setProperty ( String name , Object . . . args ) { <nl> + assert COMUtils . comIsInitialized ( ) : " COM not initialized " ; <nl> + DISPID dispID = resolveDispId ( this . getRawDispatch ( ) , name ) ; <nl> + setProperty ( dispID , args ) ; <nl> + } <nl> + <nl> + private void setProperty ( DISPID dispID , Object . . . args ) { <nl> + assert COMUtils . comIsInitialized ( ) : " COM not initialized " ; <nl> + <nl> + VARIANT [ ] vargs ; <nl> + if ( null = = args ) { <nl> + vargs = new VARIANT [ 0 ] ; <nl> + } else { <nl> + vargs = new VARIANT [ args . length ] ; <nl> + } <nl> + for ( int i = 0 ; i < vargs . length ; + + i ) { <nl> + vargs [ i ] = Convert . toVariant ( args [ i ] ) ; <nl> + } <nl> + Variant . VARIANT . ByReference result = new Variant . VARIANT . ByReference ( ) ; <nl> + WinNT . HRESULT hr = this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , this . getRawDispatch ( ) , dispID , vargs ) ; <nl> + <nl> + for ( int i = 0 ; i < vargs . length ; i + + ) { <nl> + / / Free value allocated by Convert # toVariant <nl> + Convert . free ( vargs [ i ] , args [ i ] ) ; <nl> + } <nl> + <nl> + COMUtils . checkRC ( hr ) ; <nl> + } <nl> + <nl> @ Override <nl> public < T > T getProperty ( Class < T > returnType , String name , Object . . . args ) { <nl> DISPID dispID = resolveDispId ( this . getRawDispatch ( ) , name ) ;
diff - - git a / . travis . yml b / . travis . yml <nl> index 3e1a8dc . . 671850d 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 12 , 6 + 12 , 7 @ @ install : <nl> script : <nl> - ant test <nl> - ant test - platform <nl> + - ant checkstyle <nl> - ant dist <nl> <nl> os : <nl> diff - - git a / build . xml b / build . xml <nl> index 9a050e6 . . c8a8803 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 1451 , 4 + 1451 , 12 @ @ cd . . <nl> < arg value = " - Dgpg . useagent = true " / > <nl> < / artifact : mvn > <nl> < / target > <nl> + <nl> + < target name = " checkstyle " > <nl> + < taskdef resource = " com / puppycrawl / tools / checkstyle / ant / checkstyle - ant - task . properties " <nl> + classpath = " lib / checkstyle - 8 . 17 - all . jar " / > <nl> + < checkstyle config = " checkstyle . xml " > <nl> + < fileset dir = " . " includes = " * * / * . java " / > <nl> + < / checkstyle > <nl> + < / target > <nl> < / project > <nl> diff - - git a / lib / checkstyle - 8 . 17 - all . jar b / lib / checkstyle - 8 . 17 - all . jar <nl> new file mode 100644 <nl> index 0000000 . . f1f720e <nl> Binary files / dev / null and b / lib / checkstyle - 8 . 17 - all . jar differ
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 00bbcf4 . . 8925f44 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 13 , 6 + 13 , 7 @ @ Features <nl> * [ # 1064 ] ( https : / / github . com / java - native - access / jna / pull / 1064 ) : Add ` c . s . j . p . win32 . Kernel32 . GetLogicalProcessorInformationEx ` function , convenience Util method and supporting structures - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 1065 ] ( https : / / github . com / java - native - access / jna / pull / 1065 ) : Add ` c . s . j . p . win32 . PowrProf # CallNTPowerInformation ` and supporting structures - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 1063 ] ( https : / / github . com / java - native - access / jna / pull / 1063 ) : Enhance ` c . s . j . p . win32 . User32 ` and associated classes to support keyboard related functionality . - [ @ kevemueller ] ( https : / / github . com / kevemueller ) . <nl> + * [ # 1068 ] ( https : / / github . com / java - native - access / jna / pull / 1068 ) : ` c . s . j . p . win32 . Advapi32Util . getAccountBySid ( String systemName , PSID sid ) ` ignored parameter instead of passing it to the native function - [ @ nirud ] ( https : / / github . com / nirud ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> index 3bbe7c1 . . 509b8ab 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 263 , 7 + 263 , 7 @ @ public abstract class Advapi32Util { <nl> 	 	 IntByReference cchDomainName = new IntByReference ( ) ; <nl> 	 	 PointerByReference peUse = new PointerByReference ( ) ; <nl> <nl> - 	 	 if ( Advapi32 . INSTANCE . LookupAccountSid ( null , sid , null , cchName , null , <nl> + 	 	 if ( Advapi32 . INSTANCE . LookupAccountSid ( systemName , sid , null , cchName , null , <nl> 	 	 	 	 cchDomainName , peUse ) ) { <nl> 	 	 	 throw new RuntimeException ( <nl> 	 	 	 	 	 " LookupAccountSidW was expected to fail with ERROR _ INSUFFICIENT _ BUFFER " ) ; <nl> @ @ - 278 , 7 + 278 , 7 @ @ public abstract class Advapi32Util { <nl> 	 	 char [ ] domainName = new char [ cchDomainName . getValue ( ) ] ; <nl> 	 	 char [ ] name = new char [ cchName . getValue ( ) ] ; <nl> <nl> - 	 	 if ( ! Advapi32 . INSTANCE . LookupAccountSid ( null , sid , name , cchName , <nl> + 	 	 if ( ! Advapi32 . INSTANCE . LookupAccountSid ( systemName , sid , name , cchName , <nl> 	 	 	 	 domainName , cchDomainName , peUse ) ) { <nl> 	 	 	 throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> 	 	 }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 4ad228d . . f5b209d 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 11 , 6 + 11 , 7 @ @ Features <nl> * [ # 1050 ] ( https : / / github . com / java - native - access / jna / pull / 1050 ) : Add ` c . s . j . p . win32 . VersionHelpers ` and supporting functions - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 1061 ] ( https : / / github . com / java - native - access / jna / pull / 1061 ) : replace toArray ( new T [ size ] ) with toArray ( new T [ 0 ] ) for better performance - [ @ hc - codersatlas ] ( https : / / github . com / hc - codersatlas ) . <nl> * [ # 1064 ] ( https : / / github . com / java - native - access / jna / pull / 1064 ) : Add ` c . s . j . p . win32 . Kernel32 . GetLogicalProcessorInformationEx ` function , convenience Util method and supporting structures - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> + * [ # 1065 ] ( https : / / github . com / java - native - access / jna / pull / 1065 ) : Add ` c . s . j . p . win32 . PowrProf # CallNTPowerInformation ` and supporting structures - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / NTStatus . java b / contrib / platform / src / com / sun / jna / platform / win32 / NTStatus . java <nl> index 3711179 . . dac8962 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / NTStatus . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / NTStatus . java <nl> @ @ - 105 , 5 + 105 , 14 @ @ public interface NTStatus { <nl> / / Indicates a particular Security ID may not be assigned as the owner of an object . <nl> / / <nl> int STATUS _ INVALID _ OWNER = 0xC000005A ; <nl> + <nl> + / / MessageId : STATUS _ ACCESS _ DENIED <nl> + / / <nl> + / / MessageText : <nl> + / / <nl> + / / A process has requested access to an object , but has not been granted <nl> + / / those access rights . <nl> + / / <nl> + int STATUS _ ACCESS _ DENIED = 0xC0000022 ; <nl> } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / PowrProf . java b / contrib / platform / src / com / sun / jna / platform / win32 / PowrProf . java <nl> new file mode 100644 <nl> index 0000000 . . 46f6ace <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / PowrProf . java <nl> @ @ - 0 , 0 + 1 , 231 @ @ <nl> + / * Copyright ( c ) 2019 Daniel Widdis , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Library ; <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + <nl> + / * * <nl> + * Functions used with power management . <nl> + * / <nl> + public interface PowrProf extends Library { <nl> + PowrProf INSTANCE = Native . load ( " PowrProf " , PowrProf . class ) ; <nl> + <nl> + / * * <nl> + * Enum which indicates the power information level requested from <nl> + * { @ link # CallNtPowerInformation ( ) } . This value indicates the specific <nl> + * power information to be set or retrieved . <nl> + * / <nl> + public interface POWER _ INFORMATION _ LEVEL { <nl> + / * * <nl> + * The { @ code lpInBuffer } parameter must be { @ code NULL } ; otherwise , the <nl> + * function returns { @ link WinError # ERROR _ INVALID _ PARAMETER } . <nl> + * < p > <nl> + * The { @ code lpOutputBuffer } buffer receives a { @ link WinDef # ULONGLONG } <nl> + * that specifies the interrupt - time count , in 100 - nanosecond units , at <nl> + * the last system sleep time . <nl> + * / <nl> + int LastSleepTime = 15 ; <nl> + <nl> + / * * <nl> + * The { @ code lpInBuffer } parameter must be { @ code NULL } ; otherwise , the <nl> + * function returns { @ link WinError # ERROR _ INVALID _ PARAMETER } . <nl> + * < p > <nl> + * The { @ code lpOutputBuffer } buffer receives a { @ link WinDef # ULONGLONG } <nl> + * that specifies the interrupt - time count , in 100 - nanosecond units , at <nl> + * the last system wake time . <nl> + * / <nl> + int LastWakeTime = 14 ; <nl> + <nl> + / * * <nl> + * The { @ code lpInBuffer } parameter must be { @ code NULL } ; otherwise , the <nl> + * function returns { @ link WinError # ERROR _ INVALID _ PARAMETER } . <nl> + * < p > <nl> + * The { @ code lpOutputBuffer } buffer receives one <nl> + * { @ link WinNT # PROCESSOR _ POWER _ INFORMATION } structure for each <nl> + * processor that is installed on the system . Use the <nl> + * { @ link Kernel32 # GetSystemInfo ( ) } function to retrieve the number of <nl> + * processors , which will be the number of logical processors on the <nl> + * current Processor Group . <nl> + * / <nl> + int ProcessorInformation = 11 ; <nl> + <nl> + / * * <nl> + * The { @ code lpInBuffer } parameter must be { @ code NULL } ; otherwise , the <nl> + * function returns { @ link WinError # ERROR _ INVALID _ PARAMETER } . <nl> + * < p > <nl> + * The { @ code lpOutputBuffer } buffer receives a <nl> + * { @ link WinNT # SYSTEM _ BATTERY _ STATE } structure containing information <nl> + * about the current system battery . <nl> + * / <nl> + int SystemBatteryState = 5 ; <nl> + <nl> + / * * <nl> + * The { @ code lpInBuffer } parameter must be { @ code NULL } ; otherwise , the <nl> + * function returns { @ link WinError # ERROR _ INVALID _ PARAMETER } . <nl> + * < p > <nl> + * The { @ code lpOutputBuffer } buffer receives a { @ link WinDef # ULONG } <nl> + * value containing the system execution state buffer . This value may <nl> + * contain any combination of the following values : <nl> + * { @ link WinBase # ES _ SYSTEM _ REQUIRED } , <nl> + * { @ link WinBase # ES _ DISPLAY _ REQUIRED } , or <nl> + * { @ link WinBase # ES _ USER _ PRESENT } . For more information , see the <nl> + * { @ link { @ link Kernel32 # SetThreadExecutionState ( ) } function . <nl> + * / <nl> + int SystemExecutionState = 16 ; <nl> + <nl> + / * * <nl> + * The { @ code lpInBuffer } parameter must be { @ code NULL } ; otherwise , the <nl> + * function returns { @ link WinError # ERROR _ INVALID _ PARAMETER } . <nl> + * < p > <nl> + * The { @ code lpOutputBuffer } buffer receives a <nl> + * { @ link WinNT # SYSTEM _ POWER _ CAPABILITIES } structure containing the <nl> + * current system power capabilities . <nl> + * < p > <nl> + * This information represents the currently supported power <nl> + * capabilities . It may change as drivers are installed in the system . <nl> + * For example , installation of legacy device drivers that do not <nl> + * support power management disables all system sleep states . <nl> + * / <nl> + int SystemPowerCapabilities = 4 ; <nl> + <nl> + / * * <nl> + * The { @ code lpInBuffer } parameter must be { @ code NULL } ; otherwise , the <nl> + * function returns { @ link WinError # ERROR _ INVALID _ PARAMETER } . <nl> + * < p > <nl> + * The { @ code lpOutputBuffer } buffer receives a <nl> + * { @ link WinNT # SYSTEM _ POWER _ INFORMATION } structure . <nl> + * < p > <nl> + * Applications can use this level to retrieve information about the <nl> + * idleness of the system . <nl> + * / <nl> + int SystemPowerInformation = 12 ; <nl> + <nl> + / * * <nl> + * If { @ code lpInBuffer } is not { @ code NULL } , the function applies the <nl> + * { @ link WinNT # SYSTEM _ POWER _ POLICY } values passed in { @ code lpInBuffer } <nl> + * to the current system power policy used while the system is running <nl> + * on AC ( utility ) power . <nl> + * < p > <nl> + * The { @ code lpOutputBuffer } buffer receives a <nl> + * { @ link WinNT # SYSTEM _ POWER _ POLICY } structure containing the current <nl> + * system power policy used while the system is running on AC ( utility ) <nl> + * power . <nl> + * / <nl> + int SystemPowerPolicyAc = 0 ; <nl> + <nl> + / * * <nl> + * The { @ code lpInBuffer } parameter must be { @ code NULL } ; otherwise , the <nl> + * function returns { @ link WinError # ERROR _ INVALID _ PARAMETER } . <nl> + * < p > <nl> + * The { @ code lpOutputBuffer } buffer receives a <nl> + * { @ link WinNT # SYSTEM _ POWER _ POLICY } structure containing the current <nl> + * system power policy used while the system is running on AC ( utility ) <nl> + * power . <nl> + * / <nl> + int SystemPowerPolicyCurrent = 8 ; <nl> + <nl> + / * * <nl> + * If { @ code lpInBuffer } is not { @ code NULL } , the function applies the <nl> + * { @ link WinNT # SYSTEM _ POWER _ POLICY } values passed in { @ code lpInBuffer } <nl> + * to the current system power policy used while the system is running <nl> + * on battery power . <nl> + * < p > <nl> + * The { @ code lpOutputBuffer } buffer receives a <nl> + * { @ link WinNT # SYSTEM _ POWER _ POLICY } structure containing the current <nl> + * system power policy used while the system is running on battery <nl> + * power . <nl> + * / <nl> + int SystemPowerPolicyDc = 1 ; <nl> + <nl> + / * * <nl> + * If { @ code lpInBuffer } is not { @ code NULL } and the current user has <nl> + * sufficient privileges , the function commits or decommits the storage <nl> + * required to hold the hibernation image on the boot volume . <nl> + * < p > <nl> + * The lpInBuffer parameter must point to a { @ code BOOLEAN } value <nl> + * indicating the desired request . If the value is { @ code TRUE } , the <nl> + * hibernation file is reserved ; if the value is { @ code FALSE } , the <nl> + * hibernation file is removed . <nl> + * / <nl> + int SystemReserveHiberFile = 10 ; <nl> + } <nl> + <nl> + / * * <nl> + * Sets or retrieves power information . <nl> + * < p > <nl> + * Changes made to the current system power policy using <nl> + * { @ link # CallNtPowerInformation ( ) } are immediate , but they are not <nl> + * persistent ; that is , the changes are not stored as part of a power <nl> + * scheme . Any changes to system power policy made with <nl> + * { @ link # CallNtPowerInformation ( ) } may be overwritten by changes to a <nl> + * policy scheme made by the user in the Power Options control panel <nl> + * program , or by subsequent calls to { @ code WritePwrScheme } , <nl> + * { @ code SetActivePwrScheme } , or other power scheme functions . <nl> + * <nl> + * @ param informationLevel <nl> + * The information level requested . This value indicates the <nl> + * specific power information to be set or retrieved . This <nl> + * parameter must be one of the following <nl> + * { @ link POWER _ INFORMATION _ LEVEL } enumeration type values : <nl> + * { @ link POWER _ INFORMATION _ LEVEL # LastSleepTime } , <nl> + * { @ link POWER _ INFORMATION _ LEVEL # LastWakeTime } , <nl> + * { @ link POWER _ INFORMATION _ LEVEL # ProcessorInformation } , <nl> + * { @ link POWER _ INFORMATION _ LEVEL # SystemBatteryState } , <nl> + * { @ link POWER _ INFORMATION _ LEVEL # SystemExecutionState } , <nl> + * { @ link POWER _ INFORMATION _ LEVEL # SystemPowerCapabilities } , <nl> + * { @ link POWER _ INFORMATION _ LEVEL # SystemPowerInformation } , <nl> + * { @ link POWER _ INFORMATION _ LEVEL # SystemPowerPolicyAc } , <nl> + * { @ link POWER _ INFORMATION _ LEVEL # SystemPowerPolicyCurrent } , <nl> + * { @ link POWER _ INFORMATION _ LEVEL # SystemPowerPolicyDc } , or <nl> + * { @ link POWER _ INFORMATION _ LEVEL # SystemReserveHiberFile } . <nl> + * @ param lpInputBuffer <nl> + * A pointer to an optional input buffer . The data type of this <nl> + * buffer depends on the information level requested in the <nl> + * { @ code informationLevel } parameter . <nl> + * @ param nInputBufferSize <nl> + * The size of the input buffer , in bytes . <nl> + * @ param lpOutputBuffer <nl> + * A pointer to an optional output buffer . The data type of this <nl> + * buffer depends on the information level requested in the <nl> + * { @ code informationLevel } parameter . If the buffer is too small <nl> + * to contain the information , the function returns <nl> + * { @ link NTStatus # STATUS _ BUFFER _ TOO _ SMALL } . <nl> + * @ param nOutputBufferSize <nl> + * The size of the output buffer , in bytes . Depending on the <nl> + * information level requested , this may be a variably sized <nl> + * buffer . <nl> + * @ return If the function succeeds , the return value is <nl> + * { @ link NTStatus # STATUS _ SUCCESS } . If the function fails , the <nl> + * return value can be one the following status codes : <nl> + * { @ link NTStatus # STATUS _ BUFFER _ TOO _ SMALL } if the output buffer is <nl> + * of insufficient size to contain the data to be returned . <nl> + * { @ link NTStatus # STATUS _ ACCESS _ DENIED } if the caller had <nl> + * insufficient access rights to perform the requested action . <nl> + * / <nl> + int CallNtPowerInformation ( int informationLevel , Pointer lpInputBuffer , int nInputBufferSize , <nl> + Pointer lpOutputBuffer , int nOutputBufferSize ) ; <nl> + } <nl> + <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index ab129b5 . . 5c9bef8 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 3396 , 7 + 3396 , 257 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> } <nl> <nl> / * * <nl> - * Indicates committed pages for which physical storage has been allocated , either in memory or in the paging file on disk . <nl> + * Defines values that are used to specify system power action types . <nl> + * / <nl> + public interface POWER _ ACTION { <nl> + int PowerActionNone = 0 ; <nl> + int PowerActionReserved = 1 ; <nl> + int PowerActionSleep = 2 ; <nl> + int PowerActionHibernate = 3 ; <nl> + int PowerActionShutdown = 4 ; <nl> + int PowerActionShutdownReset = 5 ; <nl> + int PowerActionShutdownOff = 6 ; <nl> + int PowerActionWarmEject = 7 ; <nl> + int PowerActionDisplayOff = 8 ; <nl> + } <nl> + <nl> + / * * <nl> + * Defines values that are used to specify system power states . <nl> + * / <nl> + public interface SYSTEM _ POWER _ STATE { <nl> + int PowerSystemUnspecified = 0 ; <nl> + int PowerSystemWorking = 1 ; <nl> + int PowerSystemSleeping1 = 2 ; <nl> + int PowerSystemSleeping2 = 3 ; <nl> + int PowerSystemSleeping3 = 4 ; <nl> + int PowerSystemHibernate = 5 ; / / S4 <nl> + int PowerSystemShutdown = 6 ; / / S5 <nl> + int PowerSystemMaximum = 7 ; <nl> + } <nl> + <nl> + / * * <nl> + * Contains information about the current state of the system battery . <nl> + * / <nl> + @ FieldOrder ( { " AcOnLine " , " BatteryPresent " , " Charging " , " Discharging " , " Spare1 " , " Tag " , " MaxCapacity " , <nl> + " RemainingCapacity " , " Rate " , " EstimatedTime " , " DefaultAlert1 " , " DefaultAlert2 " } ) <nl> + class SYSTEM _ BATTERY _ STATE extends Structure { <nl> + public byte AcOnLine ; <nl> + public byte BatteryPresent ; <nl> + public byte Charging ; <nl> + public byte Discharging ; <nl> + public byte [ ] Spare1 = new byte [ 3 ] ; <nl> + public byte Tag ; <nl> + public int MaxCapacity ; <nl> + public int RemainingCapacity ; <nl> + public int Rate ; <nl> + public int EstimatedTime ; <nl> + public int DefaultAlert1 ; <nl> + public int DefaultAlert2 ; <nl> + <nl> + public SYSTEM _ BATTERY _ STATE ( Pointer p ) { <nl> + super ( p ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public SYSTEM _ BATTERY _ STATE ( ) { <nl> + super ( ) ; <nl> + } <nl> + } <nl> + <nl> + <nl> + / * * <nl> + * Contains the granularity of the battery capacity . <nl> + * / <nl> + @ FieldOrder ( { " Granularity " , " Capacity " } ) <nl> + class BATTERY _ REPORTING _ SCALE extends Structure { <nl> + public int Granularity ; <nl> + public int Capacity ; <nl> + } <nl> + <nl> + / * * <nl> + * Contains information about a processor . <nl> + * / <nl> + @ FieldOrder ( { " Number " , " MaxMhz " , " CurrentMhz " , " MhzLimit " , " MaxIdleState " , " CurrentIdleState " } ) <nl> + class PROCESSOR _ POWER _ INFORMATION extends Structure { <nl> + public int Number ; <nl> + public int MaxMhz ; <nl> + public int CurrentMhz ; <nl> + public int MhzLimit ; <nl> + public int MaxIdleState ; <nl> + public int CurrentIdleState ; <nl> + <nl> + public PROCESSOR _ POWER _ INFORMATION ( Pointer p ) { <nl> + super ( p ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public PROCESSOR _ POWER _ INFORMATION ( ) { <nl> + super ( ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Contains information about the idleness of the system . <nl> + * / <nl> + @ FieldOrder ( { " MaxIdlenessAllowed " , " Idleness " , " TimeRemaining " , " CoolingMode " } ) <nl> + class SYSTEM _ POWER _ INFORMATION extends Structure { <nl> + public int MaxIdlenessAllowed ; <nl> + public int Idleness ; <nl> + public int TimeRemaining ; <nl> + public byte CoolingMode ; <nl> + <nl> + public SYSTEM _ POWER _ INFORMATION ( Pointer p ) { <nl> + super ( p ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public SYSTEM _ POWER _ INFORMATION ( ) { <nl> + super ( ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Contains information used to set the system power state . <nl> + * / <nl> + @ FieldOrder ( { " Action " , " Flags " , " EventCode " } ) <nl> + class POWER _ ACTION _ POLICY extends Structure { <nl> + public int / * POWER _ ACTION * / Action ; <nl> + public int Flags ; <nl> + public int EventCode ; <nl> + } <nl> + <nl> + / * * <nl> + * Contains information about system battery drain policy settings . <nl> + * / <nl> + @ FieldOrder ( { " Enable " , " Spare " , " BatteryLevel " , " PowerPolicy " , " MinSystemState " } ) <nl> + class SYSTEM _ POWER _ LEVEL extends Structure { <nl> + public byte Enable ; <nl> + public byte [ ] Spare = new byte [ 3 ] ; <nl> + public int BatteryLevel ; <nl> + public POWER _ ACTION _ POLICY PowerPolicy ; <nl> + public int / * SYSTEM _ POWER _ STATE * / MinSystemState ; <nl> + } <nl> + <nl> + int NUM _ DISCHARGE _ POLICIES = 4 ; <nl> + <nl> + / * * <nl> + * Contains information about the current system power policy . <nl> + * / <nl> + @ FieldOrder ( { " Revision " , " PowerButton " , " SleepButton " , " LidClose " , " LidOpenWake " , " Reserved " , " Idle " , <nl> + " IdleTimeout " , " IdleSensitivity " , " DynamicThrottle " , " Spare2 " , " MinSleep " , " MaxSleep " , <nl> + " ReducedLatencySleep " , " WinLogonFlags " , " Spare3 " , " DozeS4Timeout " , " BroadcastCapacityResolution " , <nl> + " DischargePolicy " , " VideoTimeout " , " VideoDimDisplay " , " VideoReserved " , " SpindownTimeout " , <nl> + " OptimizeForPower " , " FanThrottleTolerance " , " ForcedThrottle " , " MinThrottle " , " OverThrottled " } ) <nl> + class SYSTEM _ POWER _ POLICY extends Structure { <nl> + public int Revision ; <nl> + public POWER _ ACTION _ POLICY PowerButton ; <nl> + public POWER _ ACTION _ POLICY SleepButton ; <nl> + public POWER _ ACTION _ POLICY LidClose ; <nl> + public int / * SYSTEM _ POWER _ STATE * / LidOpenWake ; <nl> + public int Reserved ; <nl> + public POWER _ ACTION _ POLICY Idle ; <nl> + public int IdleTimeout ; <nl> + public byte IdleSensitivity ; <nl> + public byte DynamicThrottle ; <nl> + public byte [ ] Spare2 = new byte [ 2 ] ; <nl> + public int / * SYSTEM _ POWER _ STATE * / MinSleep ; <nl> + public int / * SYSTEM _ POWER _ STATE * / MaxSleep ; <nl> + public int / * SYSTEM _ POWER _ STATE * / ReducedLatencySleep ; <nl> + public int WinLogonFlags ; <nl> + public int Spare3 ; <nl> + public int DozeS4Timeout ; <nl> + public int BroadcastCapacityResolution ; <nl> + public SYSTEM _ POWER _ LEVEL [ ] DischargePolicy = new SYSTEM _ POWER _ LEVEL [ NUM _ DISCHARGE _ POLICIES ] ; <nl> + public int VideoTimeout ; <nl> + public byte VideoDimDisplay ; <nl> + public int [ ] VideoReserved = new int [ 3 ] ; <nl> + public int SpindownTimeout ; <nl> + public byte OptimizeForPower ; <nl> + public byte FanThrottleTolerance ; <nl> + public byte ForcedThrottle ; <nl> + public byte MinThrottle ; <nl> + public POWER _ ACTION _ POLICY OverThrottled ; <nl> + <nl> + public SYSTEM _ POWER _ POLICY ( Pointer p ) { <nl> + super ( p ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public SYSTEM _ POWER _ POLICY ( ) { <nl> + super ( ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Contains information about the power capabilities of the system . <nl> + * / <nl> + @ FieldOrder ( { " PowerButtonPresent " , " SleepButtonPresent " , " LidPresent " , " SystemS1 " , " SystemS2 " , " SystemS3 " , <nl> + " SystemS4 " , " SystemS5 " , " HiberFilePresent " , " FullWake " , " VideoDimPresent " , " ApmPresent " , " UpsPresent " , <nl> + " ThermalControl " , " ProcessorThrottle " , " ProcessorMinThrottle " , " ProcessorMaxThrottle " , " FastSystemS4 " , <nl> + " Hiberboot " , " WakeAlarmPresent " , " AoAc " , " DiskSpinDown " , " HiberFileType " , " AoAcConnectivitySupported " , <nl> + " spare3 " , " SystemBatteriesPresent " , " BatteriesAreShortTerm " , " BatteryScale " , " AcOnLineWake " , " SoftLidWake " , <nl> + " RtcWake " , " MinDeviceWakeState " , " DefaultLowLatencyWake " } ) <nl> + class SYSTEM _ POWER _ CAPABILITIES extends Structure { <nl> + / / Misc supported system features <nl> + public byte PowerButtonPresent ; <nl> + public byte SleepButtonPresent ; <nl> + public byte LidPresent ; <nl> + public byte SystemS1 ; <nl> + public byte SystemS2 ; <nl> + public byte SystemS3 ; <nl> + public byte SystemS4 ; / / hibernate <nl> + public byte SystemS5 ; / / off <nl> + public byte HiberFilePresent ; <nl> + public byte FullWake ; <nl> + public byte VideoDimPresent ; <nl> + public byte ApmPresent ; <nl> + public byte UpsPresent ; <nl> + <nl> + / / Processors <nl> + public byte ThermalControl ; <nl> + public byte ProcessorThrottle ; <nl> + public byte ProcessorMinThrottle ; <nl> + <nl> + / / Prior to WinXP , next 5 bytes are ProcessorThrottleScale <nl> + / / followed by 4 spare bytes <nl> + public byte ProcessorMaxThrottle ; <nl> + public byte FastSystemS4 ; <nl> + public byte Hiberboot ; <nl> + public byte WakeAlarmPresent ; <nl> + public byte AoAc ; <nl> + <nl> + / / Disk <nl> + public byte DiskSpinDown ; <nl> + <nl> + / / HiberFile ( Pre - Win10 next 2 bytes are spare ) <nl> + public byte HiberFileType ; <nl> + public byte AoAcConnectivitySupported ; <nl> + public byte [ ] spare3 = new byte [ 6 ] ; <nl> + <nl> + / / System Battery <nl> + public byte SystemBatteriesPresent ; <nl> + public byte BatteriesAreShortTerm ; <nl> + public BATTERY _ REPORTING _ SCALE [ ] BatteryScale = new BATTERY _ REPORTING _ SCALE [ 3 ] ; <nl> + <nl> + / / Wake <nl> + public int / * SYSTEM _ POWER _ STATE * / AcOnLineWake ; <nl> + public int / * SYSTEM _ POWER _ STATE * / SoftLidWake ; <nl> + public int / * SYSTEM _ POWER _ STATE * / RtcWake ; <nl> + public int / * SYSTEM _ POWER _ STATE * / MinDeviceWakeState ; <nl> + public int / * SYSTEM _ POWER _ STATE * / DefaultLowLatencyWake ; <nl> + <nl> + public SYSTEM _ POWER _ CAPABILITIES ( Pointer p ) { <nl> + super ( p ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public SYSTEM _ POWER _ CAPABILITIES ( ) { <nl> + super ( ) ; <nl> + } <nl> + } <nl> + / * * <nl> + * Indicates committed pages for which physical storage has been allocated , <nl> + * either in memory or in the paging file on disk . <nl> * / <nl> int MEM _ COMMIT = 0x1000 ; <nl> <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / PowrProfTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / PowrProfTest . java <nl> new file mode 100644 <nl> index 0000000 . . 6c3b6f3 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / PowrProfTest . java <nl> @ @ - 0 , 0 + 1 , 118 @ @ <nl> + / * Copyright ( c ) 2019 Daniel Widdis , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Memory ; <nl> + import com . sun . jna . platform . win32 . PowrProf . POWER _ INFORMATION _ LEVEL ; <nl> + import com . sun . jna . platform . win32 . WinBase . SYSTEM _ INFO ; <nl> + import com . sun . jna . platform . win32 . WinNT . POWER _ ACTION ; <nl> + import com . sun . jna . platform . win32 . WinNT . PROCESSOR _ POWER _ INFORMATION ; <nl> + import com . sun . jna . platform . win32 . WinNT . SYSTEM _ BATTERY _ STATE ; <nl> + import com . sun . jna . platform . win32 . WinNT . SYSTEM _ POWER _ CAPABILITIES ; <nl> + import com . sun . jna . platform . win32 . WinNT . SYSTEM _ POWER _ INFORMATION ; <nl> + import com . sun . jna . platform . win32 . WinNT . SYSTEM _ POWER _ POLICY ; <nl> + import com . sun . jna . platform . win32 . WinNT . SYSTEM _ POWER _ STATE ; <nl> + <nl> + import junit . framework . TestCase ; <nl> + <nl> + public class PowrProfTest extends TestCase { <nl> + <nl> + public void testProcessorPowerInformation ( ) { <nl> + / / MSDN docs for CallNTPowerInformation specify use of GetSystemInfo to <nl> + / / count logical processors for this InformationLevel . The GetSystemInfo <nl> + / / function and this function only count logical processors on the <nl> + / / current Processor Group , so the array will never have more than 64 <nl> + / / elements <nl> + SYSTEM _ INFO info = new SYSTEM _ INFO ( ) ; <nl> + Kernel32 . INSTANCE . GetSystemInfo ( info ) ; <nl> + int numProcs = info . dwNumberOfProcessors . intValue ( ) ; <nl> + <nl> + / / Try with too small buffer <nl> + int bufferSize = 1 ; <nl> + Memory mem = new Memory ( bufferSize ) ; <nl> + assertEquals ( NTStatus . STATUS _ BUFFER _ TOO _ SMALL , PowrProf . INSTANCE <nl> + . CallNtPowerInformation ( POWER _ INFORMATION _ LEVEL . ProcessorInformation , null , 0 , mem , bufferSize ) ) ; <nl> + <nl> + PROCESSOR _ POWER _ INFORMATION ppi = new PROCESSOR _ POWER _ INFORMATION ( ) ; <nl> + bufferSize = ppi . size ( ) * numProcs ; <nl> + mem = new Memory ( bufferSize ) ; <nl> + assertEquals ( NTStatus . STATUS _ SUCCESS , PowrProf . INSTANCE <nl> + . CallNtPowerInformation ( POWER _ INFORMATION _ LEVEL . ProcessorInformation , null , 0 , mem , bufferSize ) ) ; <nl> + <nl> + long [ ] freqs = new long [ numProcs ] ; <nl> + for ( int i = 0 ; i < freqs . length ; i + + ) { <nl> + ppi = new PROCESSOR _ POWER _ INFORMATION ( mem . share ( i * ( long ) ppi . size ( ) ) ) ; <nl> + assertTrue ( ppi . CurrentMhz < = ppi . MaxMhz ) ; <nl> + } <nl> + } <nl> + <nl> + public void testSystemBatteryStateAndPowerCapabilities ( ) { <nl> + int size = new SYSTEM _ BATTERY _ STATE ( ) . size ( ) ; <nl> + Memory mem = new Memory ( size ) ; <nl> + assertEquals ( NTStatus . STATUS _ SUCCESS , PowrProf . INSTANCE <nl> + . CallNtPowerInformation ( POWER _ INFORMATION _ LEVEL . SystemBatteryState , null , 0 , mem , size ) ) ; <nl> + SYSTEM _ BATTERY _ STATE batteryState = new SYSTEM _ BATTERY _ STATE ( mem ) ; <nl> + if ( batteryState . BatteryPresent > 0 ) { <nl> + if ( batteryState . AcOnLine = = 0 & & batteryState . Charging = = 0 & & batteryState . Discharging > 0 ) { <nl> + assertTrue ( batteryState . EstimatedTime > = 0 ) ; <nl> + } <nl> + assertTrue ( batteryState . RemainingCapacity < = batteryState . MaxCapacity ) ; <nl> + } <nl> + <nl> + size = new SYSTEM _ POWER _ CAPABILITIES ( ) . size ( ) ; <nl> + mem = new Memory ( size ) ; <nl> + assertEquals ( NTStatus . STATUS _ SUCCESS , PowrProf . INSTANCE <nl> + . CallNtPowerInformation ( POWER _ INFORMATION _ LEVEL . SystemPowerCapabilities , null , 0 , mem , size ) ) ; <nl> + SYSTEM _ POWER _ CAPABILITIES powerCapabilities = new SYSTEM _ POWER _ CAPABILITIES ( <nl> + mem ) ; <nl> + assertEquals ( powerCapabilities . SystemBatteriesPresent > 0 , batteryState . BatteryPresent > 0 ) ; <nl> + } <nl> + <nl> + public void testSystemPowerInformation ( ) { <nl> + int size = new SYSTEM _ POWER _ INFORMATION ( ) . size ( ) ; <nl> + Memory mem = new Memory ( size ) ; <nl> + assertEquals ( NTStatus . STATUS _ SUCCESS , PowrProf . INSTANCE <nl> + . CallNtPowerInformation ( POWER _ INFORMATION _ LEVEL . SystemPowerInformation , null , 0 , mem , size ) ) ; <nl> + SYSTEM _ POWER _ INFORMATION powerInfo = new SYSTEM _ POWER _ INFORMATION ( mem ) ; <nl> + assertTrue ( powerInfo . MaxIdlenessAllowed < = 100 ) ; <nl> + assertTrue ( powerInfo . Idleness < = 100 ) ; <nl> + assertTrue ( powerInfo . CoolingMode > = 0 ) ; / / must be 0 , 1 , 2 <nl> + assertTrue ( powerInfo . CoolingMode < = 2 ) ; <nl> + } <nl> + <nl> + public void testSystemPowerPolicy ( ) { <nl> + int size = new SYSTEM _ POWER _ POLICY ( ) . size ( ) ; <nl> + Memory mem = new Memory ( size ) ; <nl> + assertEquals ( NTStatus . STATUS _ SUCCESS , PowrProf . INSTANCE <nl> + . CallNtPowerInformation ( POWER _ INFORMATION _ LEVEL . SystemPowerPolicyCurrent , null , 0 , mem , size ) ) ; <nl> + SYSTEM _ POWER _ POLICY powerPolicy = new SYSTEM _ POWER _ POLICY ( mem ) ; <nl> + <nl> + / / Test selected elements including nested structures <nl> + assertTrue ( powerPolicy . PowerButton . Action > = 0 ) ; <nl> + assertTrue ( powerPolicy . PowerButton . Action < = POWER _ ACTION . PowerActionDisplayOff ) ; / / Max <nl> + assertTrue ( powerPolicy . MinSleep < = powerPolicy . MaxSleep ) ; <nl> + assertTrue ( powerPolicy . MaxSleep < = SYSTEM _ POWER _ STATE . PowerSystemMaximum ) ; <nl> + assertTrue ( powerPolicy . DischargePolicy [ 0 ] . BatteryLevel < = 100 ) ; / / percentage <nl> + } <nl> + }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 4ab7bcb . . 374d2c9 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 10 , 10 + 10 , 12 @ @ Features <nl> * [ # 1058 ] ( https : / / github . com / java - native - access / jna / pull / 1058 ) : Add selectable timeout to stopService ( ) and improve timeout handling - [ @ keithharp ] ( https : / / github . com / keithharp ) . <nl> * [ # 1050 ] ( https : / / github . com / java - native - access / jna / pull / 1050 ) : Add ` c . s . j . p . win32 . VersionHelpers ` and supporting functions - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 1061 ] ( https : / / github . com / java - native - access / jna / pull / 1061 ) : replace toArray ( new T [ size ] ) with toArray ( new T [ 0 ] ) for better performance - [ @ hc - codersatlas ] ( https : / / github . com / hc - codersatlas ) . <nl> + * [ # 1064 ] ( https : / / github . com / java - native - access / jna / pull / 1064 ) : Add ` c . s . j . p . win32 . Kernel32 . GetLogicalProcessorInformationEx ` function , convenience Util method and supporting structures - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> - * [ # 1052 ] ( https : / / github . com / java - native - access / jna / issues / 1052 ) , [ # 1053 ] ( https : / / github . com / java - native - access / jna / issues / 1053 ) : WinXP compatibility for ` c . s . j . p . win32 . PdhUtil ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> + * [ # 1052 ] ( https : / / github . com / java - native - access / jna / pull / 1052 ) , [ # 1053 ] ( https : / / github . com / java - native - access / jna / issues / 1053 ) : WinXP compatibility for ` c . s . j . p . win32 . PdhUtil ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> + * [ # 1055 ] ( https : / / github . com / java - native - access / jna / pull / 1055 ) : Include ` c . s . j . p . linux ` in OSGi bundle . - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> <nl> Release 5 . 2 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index e012b13 . . 4043616 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 24 , 6 + 24 , 7 @ @ <nl> package com . sun . jna . platform . win32 ; <nl> <nl> import com . sun . jna . LastErrorException ; <nl> + import com . sun . jna . Memory ; <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> @ @ - 1535 , 6 + 1536 , 45 @ @ public interface Kernel32 extends StdCallLibrary , WinNT , Wincon { <nl> DWORDByReference returnLength ) ; <nl> <nl> / * * <nl> + * Retrieves information about the relationships of logical processors and <nl> + * related hardware . <nl> + * <nl> + * @ param relationshipType <nl> + * The type of relationship to retrieve . This parameter can be <nl> + * one of the following values : <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationCache } , <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationGroup } , <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationNumaNode } , <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationProcessorCore } , <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationProcessorPackage } , <nl> + * or { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationAll } <nl> + * @ param buffer <nl> + * A pointer to a buffer that receives an array of <nl> + * { @ link WinNT . SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX } <nl> + * structures . If the function fails , the contents of this buffer <nl> + * are undefined . <nl> + * @ param returnedLength <nl> + * On input , specifies the length of the buffer pointed to by <nl> + * Buffer , in bytes . If the buffer is large enough to contain all <nl> + * of the data , this function succeeds and ReturnedLength is set <nl> + * to the number of bytes returned . If the buffer is not large <nl> + * enough to contain all of the data , the function fails , <nl> + * GetLastError returns <nl> + * { @ link WinError # ERROR _ INSUFFICIENT _ BUFFER } , and ReturnedLength <nl> + * is set to the buffer length required to contain all of the <nl> + * data . If the function fails with an error other than <nl> + * { @ link WinError # ERROR _ INSUFFICIENT _ BUFFER } , the value of <nl> + * ReturnedLength is undefined . <nl> + * @ return If the function succeeds , the return value is { @ code TRUE } and at <nl> + * least one { @ link WinNT . SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX } <nl> + * structure is written to the output buffer . <nl> + * < p > <nl> + * If the function fails , the return value is { @ code FALSE } . To get <nl> + * extended error information , call { @ link # GetLastError ( ) } . <nl> + * / <nl> + boolean GetLogicalProcessorInformationEx ( int relationshipType , Pointer buffer , DWORDByReference returnedLength ) ; <nl> + <nl> + / * * <nl> * Retrieves information about the system ' s current usage of both physical <nl> * and virtual memory . <nl> * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> index 991e60b . . a04e085 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> @ @ - 39 , 6 + 39 , 8 @ @ import com . sun . jna . Pointer ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLEByReference ; <nl> import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> + import com . sun . jna . platform . win32 . WinNT . LOGICAL _ PROCESSOR _ RELATIONSHIP ; <nl> + import com . sun . jna . platform . win32 . WinNT . SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> import com . sun . jna . win32 . W32APITypeMapper ; <nl> @ @ - 671 , 13 + 673 , 53 @ @ public abstract class Kernel32Util implements WinDef { <nl> } <nl> WinNT . SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION firstInformation = new WinNT . SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION ( <nl> memory ) ; <nl> - int returnedStructCount = bufferSize . getValue ( ) . intValue ( ) <nl> - / sizePerStruct ; <nl> return ( WinNT . SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION [ ] ) firstInformation <nl> . toArray ( new WinNT . SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION [ 0 ] ) ; <nl> } <nl> <nl> / * * <nl> + * Convenience method to get the processor information . Takes care of <nl> + * auto - growing the array and populating variable - length arrays in <nl> + * structures . <nl> + * <nl> + * @ param relationshipType <nl> + * The type of relationship to retrieve . This parameter can be <nl> + * one of the following values : <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationCache } , <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationGroup } , <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationNumaNode } , <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationProcessorCore } , <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationProcessorPackage } , <nl> + * or { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationAll } <nl> + * @ return the array of processor information . <nl> + * / <nl> + public static final SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX [ ] getLogicalProcessorInformationEx ( <nl> + int relationshipType ) { <nl> + WinDef . DWORDByReference bufferSize = new WinDef . DWORDByReference ( new WinDef . DWORD ( 1 ) ) ; <nl> + Memory memory ; <nl> + while ( true ) { <nl> + memory = new Memory ( bufferSize . getValue ( ) . intValue ( ) ) ; <nl> + if ( ! Kernel32 . INSTANCE . GetLogicalProcessorInformationEx ( relationshipType , memory , bufferSize ) ) { <nl> + int err = Kernel32 . INSTANCE . GetLastError ( ) ; <nl> + if ( err ! = WinError . ERROR _ INSUFFICIENT _ BUFFER ) <nl> + throw new Win32Exception ( err ) ; <nl> + } else { <nl> + break ; <nl> + } <nl> + } <nl> + / / Array elements have variable size ; iterate to populate array <nl> + List < SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX > procInfoList = new ArrayList < SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX > ( ) ; <nl> + int offset = 0 ; <nl> + while ( offset < bufferSize . getValue ( ) . intValue ( ) ) { <nl> + SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX information = SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX <nl> + . fromPointer ( memory . share ( offset ) ) ; <nl> + procInfoList . add ( information ) ; <nl> + offset + = information . size ; <nl> + } <nl> + return procInfoList . toArray ( new SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX [ 0 ] ) ; <nl> + } <nl> + <nl> + / * * <nl> * Retrieves all the keys and values for the specified section of an initialization file . <nl> * <nl> * < p > <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index 315f8e9 . . ab129b5 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 172 , 6 + 172 , 11 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> int THREAD _ ALL _ ACCESS = STANDARD _ RIGHTS _ REQUIRED | SYNCHRONIZE | 0x3FF ; <nl> <nl> / * * <nl> + * Flag identifying hyperthreading / simultaneous multithreading ( SMT ) <nl> + * / <nl> + int LTP _ PC _ SMT = 0x1 ; <nl> + <nl> + / * * <nl> * The SECURITY _ IMPERSONATION _ LEVEL enumeration type contains values that <nl> * specify security impersonation levels . Security impersonation levels <nl> * govern the degree to which a server process can act on behalf of a client <nl> @ @ - 2902 , 6 + 2907 , 387 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> } <nl> <nl> / * * <nl> + * Contains information about the relationships of logical processors and <nl> + * related hardware . The { @ link Kernel32 # GetLogicalProcessorInformationEx } <nl> + * function uses this structure . <nl> + * < p > <nl> + * The native structure contains a union , which is mapped to JNA as <nl> + * subclasses . <nl> + * / <nl> + @ FieldOrder ( { " relationship " , " size " } ) <nl> + public abstract class SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX extends Structure { <nl> + <nl> + / * * <nl> + * The type of relationship between the logical processors . This <nl> + * parameter can be one of the following values : <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationCache } , <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationGroup } , <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationNumaNode } , <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationProcessorCore } , or <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationProcessorPackage } . <nl> + * < p > <nl> + * This field identifies which subclass will be instantiated by the <nl> + * { @ link # fromPointer ( Pointer ) } method . <nl> + * / <nl> + public int / * LOGICAL _ PROCESSOR _ RELATIONSHIP * / relationship ; <nl> + <nl> + / * * <nl> + * The size of the structure , in bytes . <nl> + * / <nl> + public int size ; <nl> + <nl> + public SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX ( ) { <nl> + super ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * This constructor should only be called by a subclass to ensure memory <nl> + * is properly allocated to the subclass fields . <nl> + * <nl> + * @ param memory <nl> + * A pointer to the allocated native memory . <nl> + * / <nl> + protected SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Create a new instance of the appropriate subclass of <nl> + * { @ link SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX } from the provided <nl> + * { @ link Pointer } to native memory . Use this method rather than <nl> + * { @ link # SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX ( Pointer ) } to properly <nl> + * cast the Pointer to the appropriate subclass and populate variable <nl> + * length arrays . <nl> + * <nl> + * @ param memory <nl> + * A pointer to allocated memory to be cast to this class . <nl> + * @ return An instance of the appropriate subclass depending on the <nl> + * value of the { @ link # relationship } field . If the <nl> + * { @ link # relationship } member is <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationProcessorCore } <nl> + * or <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationProcessorPackage } , <nl> + * the return type will be { @ link PROCESSOR _ RELATIONSHIP } . If <nl> + * the { @ link # relationship } member is <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationNumaNode } , the <nl> + * return type will be { @ link NUMA _ NODE _ RELATIONSHIP } . If the <nl> + * { @ link # relationship } member is <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationCache } , the <nl> + * return type will be { @ link CACHE _ RELATIONSHIP } . If the <nl> + * { @ link # relationship } member is <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationGroup } , the <nl> + * return type will be { @ link GROUP _ RELATIONSHIP } . <nl> + * / <nl> + public static SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX fromPointer ( Pointer memory ) { <nl> + int relationship = memory . getInt ( 0 ) ; <nl> + SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX result ; <nl> + switch ( relationship ) { <nl> + case LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationProcessorCore : <nl> + case LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationProcessorPackage : <nl> + result = new PROCESSOR _ RELATIONSHIP ( memory ) ; <nl> + break ; <nl> + case LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationNumaNode : <nl> + result = new NUMA _ NODE _ RELATIONSHIP ( memory ) ; <nl> + break ; <nl> + case LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationCache : <nl> + result = new CACHE _ RELATIONSHIP ( memory ) ; <nl> + break ; <nl> + case LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationGroup : <nl> + result = new GROUP _ RELATIONSHIP ( memory ) ; <nl> + break ; <nl> + default : <nl> + throw new IllegalStateException ( " Unmapped relationship : " + relationship ) ; <nl> + } <nl> + result . read ( ) ; <nl> + return result ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Describes the logical processors associated with either a processor core <nl> + * or a processor package . <nl> + * / <nl> + @ FieldOrder ( { " flags " , " efficiencyClass " , " reserved " , " groupCount " , " groupMask " } ) <nl> + public static class PROCESSOR _ RELATIONSHIP extends SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX { <nl> + <nl> + / * * <nl> + * If the { @ link # relationship } member of the <nl> + * { @ link SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX } structure is <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationProcessorCore } , this <nl> + * member is { @ link # LTP _ PC _ SMT } if the core has more than one logical <nl> + * processor , or 0 if the core has one logical processor . <nl> + * < p > <nl> + * If the { @ link # relationship } member of the <nl> + * { @ link SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX } structure is <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationProcessorPackage } , this <nl> + * member is always 0 . <nl> + * / <nl> + public byte flags ; <nl> + <nl> + / * * <nl> + * If the { @ link # relationship } member of the <nl> + * { @ link SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX } structure is <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationProcessorCore } , <nl> + * EfficiencyClass specifies the intrinsic tradeoff between performance <nl> + * and power for the applicable core . A core with a higher value for the <nl> + * efficiency class has intrinsically greater performance and less <nl> + * efficiency than a core with a lower value for the efficiency class . <nl> + * EfficiencyClass is only nonzero on systems with a heterogeneous set <nl> + * of cores . <nl> + * < p > <nl> + * If the { @ link # relationship } member of the <nl> + * { @ link SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX } structure is <nl> + * { @ link LOGICAL _ PROCESSOR _ RELATIONSHIP # RelationProcessorPackage } , <nl> + * EfficiencyClass is always 0 . <nl> + * < p > <nl> + * The minimum operating system version that supports this member is <nl> + * Windows 10 . <nl> + * / <nl> + public byte efficiencyClass ; <nl> + <nl> + / * * <nl> + * This member is reserved . <nl> + * / <nl> + public byte [ ] reserved = new byte [ 20 ] ; <nl> + <nl> + / * * <nl> + * This member specifies the number of entries in the GroupMask array . <nl> + * < p > <nl> + * If the PROCESSOR _ RELATIONSHIP structure represents a processor core , <nl> + * the GroupCount member is always 1 . <nl> + * < p > <nl> + * If the { @ link PROCESSOR _ RELATIONSHIP } structure represents a <nl> + * processor package , the { @ link # groupCount } member is 1 only if all <nl> + * processors are in the same processor group . If the package contains <nl> + * more than one NUMA node , the system might assign different NUMA nodes <nl> + * to different processor groups . In this case , the { @ link # groupCount } <nl> + * member is the number of groups to which NUMA nodes in the package are <nl> + * assigned . <nl> + * / <nl> + public short groupCount ; <nl> + <nl> + / * * <nl> + * An array of { @ link GROUP _ AFFINITY } structures . The <nl> + * { @ link # groupCount } member specifies the number of structures in the <nl> + * array . Each structure in the array specifies a group number and <nl> + * processor affinity within the group . <nl> + * / <nl> + public GROUP _ AFFINITY [ ] groupMask = new GROUP _ AFFINITY [ 1 ] ; <nl> + <nl> + public PROCESSOR _ RELATIONSHIP ( ) { <nl> + } <nl> + <nl> + public PROCESSOR _ RELATIONSHIP ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void read ( ) { <nl> + readField ( " groupCount " ) ; <nl> + groupMask = new GROUP _ AFFINITY [ groupCount ] ; <nl> + super . read ( ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Represents information about a NUMA node in a processor group . <nl> + * / <nl> + @ FieldOrder ( { " nodeNumber " , " reserved " , " groupMask " } ) <nl> + public static class NUMA _ NODE _ RELATIONSHIP extends SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX { <nl> + <nl> + / * * <nl> + * Identifies the NUMA node . Valid values are { @ code 0 } to the highest <nl> + * NUMA node number inclusive . A non - NUMA multiprocessor system will <nl> + * report that all processors belong to one NUMA node . <nl> + * / <nl> + public int nodeNumber ; <nl> + <nl> + / * * <nl> + * This member is reserved . <nl> + * / <nl> + public byte [ ] reserved = new byte [ 20 ] ; <nl> + <nl> + / * * <nl> + * A { @ link GROUP _ AFFINITY } structure that specifies a group number and <nl> + * processor affinity within the group . <nl> + * / <nl> + public GROUP _ AFFINITY groupMask ; <nl> + <nl> + public NUMA _ NODE _ RELATIONSHIP ( ) { <nl> + } <nl> + <nl> + public NUMA _ NODE _ RELATIONSHIP ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Describes cache attributes . <nl> + * / <nl> + @ FieldOrder ( { " level " , " associativity " , " lineSize " , " cacheSize " , " type " , " reserved " , " groupMask " } ) <nl> + public static class CACHE _ RELATIONSHIP extends SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX { <nl> + <nl> + / * * <nl> + * The cache level . This member can be 1 ( L1 ) , 2 ( L2 ) , 3 ( L3 ) , or 4 <nl> + * ( L4 ) . <nl> + * / <nl> + public byte level ; <nl> + <nl> + / * * <nl> + * The cache associativity . If this member is <nl> + * { @ link # CACHE _ FULLY _ ASSOCIATIVE } , the cache is fully associative . <nl> + * / <nl> + public byte associativity ; <nl> + <nl> + / * * <nl> + * The cache line size , in bytes . <nl> + * / <nl> + public short lineSize ; <nl> + <nl> + / * * <nl> + * The cache size , in bytes . <nl> + * / <nl> + public int cacheSize ; <nl> + <nl> + / * * <nl> + * The cache type . This member is a { @ link PROCESSOR _ CACHE _ TYPE } value . <nl> + * / <nl> + public int / * PROCESSOR _ CACHE _ TYPE * / type ; <nl> + <nl> + / * * <nl> + * This member is reserved . <nl> + * / <nl> + public byte [ ] reserved = new byte [ 20 ] ; <nl> + <nl> + / * * <nl> + * A { @ link GROUP _ AFFINITY } structure that specifies a group number and <nl> + * processor affinity within the group . <nl> + * / <nl> + public GROUP _ AFFINITY groupMask ; <nl> + <nl> + public CACHE _ RELATIONSHIP ( ) { <nl> + } <nl> + <nl> + public CACHE _ RELATIONSHIP ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Represents information about processor groups . <nl> + * / <nl> + @ FieldOrder ( { " maximumGroupCount " , " activeGroupCount " , " reserved " , " groupInfo " } ) <nl> + public static class GROUP _ RELATIONSHIP extends SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX { <nl> + <nl> + / * * <nl> + * The maximum number of processor groups on the system . <nl> + * / <nl> + public short maximumGroupCount ; <nl> + <nl> + / * * <nl> + * The number of active groups on the system . This member indicates the <nl> + * number of { @ link PROCESSOR _ GROUP _ INFO } structures in the GroupInfo <nl> + * array . <nl> + * / <nl> + public short activeGroupCount ; <nl> + <nl> + / * * <nl> + * This member is reserved . <nl> + * / <nl> + public byte [ ] reserved = new byte [ 20 ] ; <nl> + <nl> + / * * <nl> + * An array of { @ link PROCESSOR _ GROUP _ INFO } structures . The <nl> + * { @ link # activeGroupCount } member specifies the number of structures <nl> + * in the array . Each structure in the array specifies the number and <nl> + * affinity of processors in an active group on the system . <nl> + * / <nl> + public PROCESSOR _ GROUP _ INFO [ ] groupInfo = new PROCESSOR _ GROUP _ INFO [ 1 ] ; <nl> + <nl> + public GROUP _ RELATIONSHIP ( ) { <nl> + } <nl> + <nl> + public GROUP _ RELATIONSHIP ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void read ( ) { <nl> + readField ( " activeGroupCount " ) ; <nl> + groupInfo = new PROCESSOR _ GROUP _ INFO [ activeGroupCount ] ; <nl> + super . read ( ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Represents a processor group - specific affinity , such as the affinity of a <nl> + * thread . <nl> + * / <nl> + @ FieldOrder ( { " mask " , " group " , " reserved " } ) <nl> + public static class GROUP _ AFFINITY extends Structure { <nl> + <nl> + / * * <nl> + * A bitmap that specifies the affinity for zero or more processors <nl> + * within the specified group . <nl> + * / <nl> + public ULONG _ PTR / * KAFFINITY * / mask ; <nl> + <nl> + / * * <nl> + * The processor group number . <nl> + * / <nl> + public short group ; <nl> + <nl> + / * * <nl> + * This member is reserved . <nl> + * / <nl> + public short [ ] reserved = new short [ 3 ] ; <nl> + <nl> + public GROUP _ AFFINITY ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + <nl> + public GROUP _ AFFINITY ( ) { <nl> + super ( ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Represents the number and affinity of processors in a processor group . <nl> + * / <nl> + @ FieldOrder ( { " maximumProcessorCount " , " activeProcessorCount " , " reserved " , " activeProcessorMask " } ) <nl> + public static class PROCESSOR _ GROUP _ INFO extends Structure { <nl> + <nl> + / * * <nl> + * The maximum number of processors in the group . <nl> + * / <nl> + public byte maximumProcessorCount ; <nl> + <nl> + / * * <nl> + * The number of active processors in the group . <nl> + * / <nl> + public byte activeProcessorCount ; <nl> + <nl> + / * * <nl> + * This member is reserved . <nl> + * / <nl> + public byte [ ] reserved = new byte [ 38 ] ; <nl> + <nl> + / * * <nl> + * A bitmap that specifies the affinity for zero or more active <nl> + * processors within the group . <nl> + * / <nl> + public ULONG _ PTR / * KAFFINITY * / activeProcessorMask ; <nl> + <nl> + public PROCESSOR _ GROUP _ INFO ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + <nl> + public PROCESSOR _ GROUP _ INFO ( ) { <nl> + super ( ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> * Represents the relationship between the processor set identified in the corresponding <nl> * { @ link SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION } or < code > SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX < / code > structure . <nl> * / <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32UtilTest . java <nl> index 45c33f0 . . 4c8a84c 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32UtilTest . java <nl> @ @ - 19 , 15 + 19 , 23 @ @ import java . io . FileReader ; <nl> import java . io . FileWriter ; <nl> import java . io . IOException ; <nl> import java . io . PrintWriter ; <nl> + import java . util . ArrayList ; <nl> import java . util . Collection ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . platform . win32 . Tlhelp32 . MODULEENTRY32W ; <nl> + import com . sun . jna . platform . win32 . WinNT . CACHE _ RELATIONSHIP ; <nl> + import com . sun . jna . platform . win32 . WinNT . GROUP _ RELATIONSHIP ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> import com . sun . jna . platform . win32 . WinNT . LARGE _ INTEGER ; <nl> + import com . sun . jna . platform . win32 . WinNT . LOGICAL _ PROCESSOR _ RELATIONSHIP ; <nl> + import com . sun . jna . platform . win32 . WinNT . NUMA _ NODE _ RELATIONSHIP ; <nl> + import com . sun . jna . platform . win32 . WinNT . PROCESSOR _ CACHE _ TYPE ; <nl> + import com . sun . jna . platform . win32 . WinNT . PROCESSOR _ RELATIONSHIP ; <nl> + import com . sun . jna . platform . win32 . WinNT . SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX ; <nl> <nl> import junit . framework . TestCase ; <nl> <nl> @ @ - 347 , 4 + 355 , 109 @ @ public class Kernel32UtilTest extends TestCase { <nl> Kernel32 . INSTANCE . SetEnvironmentVariable ( " DemoVariable " , " DemoValue " ) ; <nl> assertEquals ( " DemoValue " , Kernel32Util . expandEnvironmentStrings ( " % DemoVariable % " ) ) ; <nl> } <nl> + <nl> + public void testGetLogicalProcessorInformationEx ( ) { <nl> + SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION _ EX [ ] procInfo = Kernel32Util <nl> + . getLogicalProcessorInformationEx ( WinNT . LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationAll ) ; <nl> + List < GROUP _ RELATIONSHIP > groups = new ArrayList < GROUP _ RELATIONSHIP > ( ) ; <nl> + List < PROCESSOR _ RELATIONSHIP > packages = new ArrayList < PROCESSOR _ RELATIONSHIP > ( ) ; <nl> + List < NUMA _ NODE _ RELATIONSHIP > numaNodes = new ArrayList < NUMA _ NODE _ RELATIONSHIP > ( ) ; <nl> + List < CACHE _ RELATIONSHIP > caches = new ArrayList < CACHE _ RELATIONSHIP > ( ) ; <nl> + List < PROCESSOR _ RELATIONSHIP > cores = new ArrayList < PROCESSOR _ RELATIONSHIP > ( ) ; <nl> + <nl> + for ( int i = 0 ; i < procInfo . length ; i + + ) { <nl> + / / Build list from relationship <nl> + switch ( procInfo [ i ] . relationship ) { <nl> + case LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationGroup : <nl> + groups . add ( ( GROUP _ RELATIONSHIP ) procInfo [ i ] ) ; <nl> + break ; <nl> + case LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationProcessorPackage : <nl> + packages . add ( ( PROCESSOR _ RELATIONSHIP ) procInfo [ i ] ) ; <nl> + break ; <nl> + case LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationNumaNode : <nl> + numaNodes . add ( ( NUMA _ NODE _ RELATIONSHIP ) procInfo [ i ] ) ; <nl> + break ; <nl> + case LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationCache : <nl> + caches . add ( ( CACHE _ RELATIONSHIP ) procInfo [ i ] ) ; <nl> + break ; <nl> + case LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationProcessorCore : <nl> + cores . add ( ( PROCESSOR _ RELATIONSHIP ) procInfo [ i ] ) ; <nl> + break ; <nl> + default : <nl> + throw new IllegalStateException ( " Unmapped relationship . " ) ; <nl> + } <nl> + / / Test that native provided size matches JNA structure size <nl> + assertEquals ( procInfo [ i ] . size , procInfo [ i ] . size ( ) ) ; <nl> + } <nl> + <nl> + / / Test that getting all relations matches the same totals as <nl> + / / individuals . <nl> + assertEquals ( groups . size ( ) , Kernel32Util <nl> + . getLogicalProcessorInformationEx ( WinNT . LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationGroup ) . length ) ; <nl> + assertEquals ( packages . size ( ) , Kernel32Util . getLogicalProcessorInformationEx ( <nl> + WinNT . LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationProcessorPackage ) . length ) ; <nl> + assertEquals ( numaNodes . size ( ) , Kernel32Util <nl> + . getLogicalProcessorInformationEx ( WinNT . LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationNumaNode ) . length ) ; <nl> + assertEquals ( caches . size ( ) , Kernel32Util <nl> + . getLogicalProcessorInformationEx ( WinNT . LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationCache ) . length ) ; <nl> + assertEquals ( cores . size ( ) , Kernel32Util <nl> + . getLogicalProcessorInformationEx ( WinNT . LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationProcessorCore ) . length ) ; <nl> + <nl> + / / Test GROUP _ RELATIONSHIP <nl> + assertEquals ( 1 , groups . size ( ) ) ; / / Should only be one group structure <nl> + for ( GROUP _ RELATIONSHIP group : groups ) { <nl> + assertEquals ( LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationGroup , group . relationship ) ; <nl> + assertTrue ( group . activeGroupCount < = group . maximumGroupCount ) ; <nl> + assertEquals ( group . activeGroupCount , group . groupInfo . length ) ; <nl> + for ( int j = 0 ; j < group . activeGroupCount ; j + + ) { <nl> + assertTrue ( group . groupInfo [ j ] . activeProcessorCount < = group . groupInfo [ j ] . maximumProcessorCount ) ; <nl> + assertEquals ( group . groupInfo [ j ] . activeProcessorCount , <nl> + Long . bitCount ( group . groupInfo [ j ] . activeProcessorMask . longValue ( ) ) ) ; <nl> + assertTrue ( group . groupInfo [ j ] . maximumProcessorCount < = 64 ) ; <nl> + } <nl> + } <nl> + <nl> + / / Test PROCESSOR _ RELATIONSHIP packages <nl> + assertTrue ( cores . size ( ) > = packages . size ( ) ) ; <nl> + for ( PROCESSOR _ RELATIONSHIP pkg : packages ) { <nl> + assertEquals ( LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationProcessorPackage , pkg . relationship ) ; <nl> + assertEquals ( 0 , pkg . flags ) ; / / packages have 0 flags <nl> + assertEquals ( 0 , pkg . efficiencyClass ) ; / / packages have 0 efficiency <nl> + assertEquals ( pkg . groupCount , pkg . groupMask . length ) ; <nl> + } <nl> + <nl> + / / Test PROCESSOR _ RELATIONSHIP cores <nl> + for ( PROCESSOR _ RELATIONSHIP core : cores ) { <nl> + assertEquals ( LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationProcessorCore , core . relationship ) ; <nl> + / / Hyperthreading flag set if at least 2 logical processors <nl> + assertTrue ( Long . bitCount ( core . groupMask [ 0 ] . mask . longValue ( ) ) > 0 ) ; <nl> + if ( Long . bitCount ( core . groupMask [ 0 ] . mask . longValue ( ) ) > 1 ) { <nl> + assertEquals ( WinNT . LTP _ PC _ SMT , core . flags ) ; <nl> + } else { <nl> + assertEquals ( 0 , core . flags ) ; <nl> + } <nl> + / / Cores are always in one group <nl> + assertEquals ( 1 , core . groupCount ) ; <nl> + assertEquals ( 1 , core . groupMask . length ) ; <nl> + } <nl> + <nl> + / / Test NUMA _ NODE _ RELATIONSHIP <nl> + for ( NUMA _ NODE _ RELATIONSHIP numaNode : numaNodes ) { <nl> + assertEquals ( LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationNumaNode , numaNode . relationship ) ; <nl> + assertTrue ( numaNode . nodeNumber > = 0 ) ; <nl> + } <nl> + <nl> + / / Test CACHE _ RELATIONSHIP <nl> + for ( CACHE _ RELATIONSHIP cache : caches ) { <nl> + assertEquals ( LOGICAL _ PROCESSOR _ RELATIONSHIP . RelationCache , cache . relationship ) ; <nl> + assertTrue ( cache . level > = 1 ) ; <nl> + assertTrue ( cache . level < = 4 ) ; <nl> + assertTrue ( cache . cacheSize > 0 ) ; <nl> + assertTrue ( cache . lineSize > 0 ) ; <nl> + assertTrue ( cache . type = = PROCESSOR _ CACHE _ TYPE . CacheUnified <nl> + | | cache . type = = PROCESSOR _ CACHE _ TYPE . CacheInstruction <nl> + | | cache . type = = PROCESSOR _ CACHE _ TYPE . CacheData | | cache . type = = PROCESSOR _ CACHE _ TYPE . CacheTrace ) ; <nl> + assertTrue ( cache . associativity = = WinNT . CACHE _ FULLY _ ASSOCIATIVE | | cache . associativity > 0 ) ; <nl> + } <nl> + } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 3a8380a . . 4cdf34c 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 7 , 6 + 7 , 7 @ @ Next release ( 5 . 3 . 0 ) <nl> <nl> Features <nl> - - - - - - - - <nl> + * [ # 1058 ] ( https : / / github . com / java - native - access / jna / pull / 1058 ) : Add selectable timeout to stopService ( ) and improve timeout handling - [ @ keithharp ] ( https : / / github . com / keithharp ) . <nl> * [ # 1050 ] ( https : / / github . com / java - native - access / jna / pull / 1050 ) : Add ` c . s . j . p . win32 . VersionHelpers ` and supporting functions - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> <nl> Bug Fixes <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java b / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> index ab9d5c3 . . 8f0b091 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> @ @ - 221 , 7 + 221 , 7 @ @ public class W32Service implements Closeable { <nl> * @ param timeout timeout in ms until the service must report to be <nl> * stopped <nl> * / <nl> - 	 void stopService ( long timeout ) { <nl> + 	 public void stopService ( long timeout ) { <nl> long startTime = System . currentTimeMillis ( ) ; <nl> 	 	 waitForNonPendingState ( ) ; <nl> 	 	 / / If the service is already stopped - return <nl> @ @ - 236 , 22 + 236 , 23 @ @ public class W32Service implements Closeable { <nl> / / the previouos implementation queried the service status and <nl> / / failed if the application did not correctly update its state <nl> while ( status . dwCurrentState ! = Winsvc . SERVICE _ STOPPED ) { <nl> - try { <nl> - 	 	 	 	 Thread . sleep ( status . dwWaitHint ) ; <nl> + 	 	 	 long msRemainingBeforeTimeout = timeout - ( System . currentTimeMillis ( ) - startTime ) ; <nl> + <nl> + 	 	 	 if ( msRemainingBeforeTimeout < 0 ) { <nl> + 	 	 	 	 throw new RuntimeException ( String . format ( " Service stop exceeded timeout time of % d ms " , timeout ) ) ; <nl> + 	 	 	 } <nl> + <nl> + 	 	 	 long dwWaitTime = Math . min ( sanitizeWaitTime ( status . dwWaitHint ) , msRemainingBeforeTimeout ) ; <nl> + <nl> + 	 	 	 try { <nl> + 	 	 	 	 Thread . sleep ( dwWaitTime ) ; <nl> 	 	 	 } catch ( InterruptedException e ) { <nl> 	 	 	 	 throw new RuntimeException ( e ) ; <nl> 	 	 	 } <nl> if ( ! Advapi32 . INSTANCE . QueryServiceStatus ( _ handle , status ) ) { <nl> throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> } <nl> - if ( ( System . currentTimeMillis ( ) - startTime ) > timeout ) { <nl> - throw new RuntimeException ( String . format ( " Service stop exceeded timeout time of % d ms " , timeout ) ) ; <nl> - } <nl> } <nl> - 	 	 waitForNonPendingState ( ) ; <nl> - 	 	 if ( queryStatus ( ) . dwCurrentState ! = Winsvc . SERVICE _ STOPPED ) { <nl> - 	 	 	 throw new RuntimeException ( " Unable to stop the service " ) ; <nl> - 	 	 } <nl> 	 } <nl> <nl> 	 / * * <nl> @ @ - 292 , 7 + 293 , 22 @ @ public class W32Service implements Closeable { <nl> 	 	 } <nl> 	 } <nl> <nl> - / * * <nl> + 	 / * * <nl> + 	 * do not wait longer than the wait hint . A good interval is <nl> + 	 * one - tenth the wait hint , but no less than 1 second and no <nl> + 	 * more than 10 seconds . <nl> + 	 * / <nl> + 	 int sanitizeWaitTime ( int dwWaitHint ) { <nl> + 	 	 int dwWaitTime = dwWaitHint / 10 ; <nl> + <nl> + 	 	 if ( dwWaitTime < 1000 ) <nl> + 	 	 	 dwWaitTime = 1000 ; <nl> + 	 	 else if ( dwWaitTime > 10000 ) <nl> + 	 	 	 dwWaitTime = 10000 ; <nl> + 	 	 return dwWaitTime ; <nl> + 	 } <nl> + <nl> + 	 / * * <nl> * Wait for the state to change to something other than a pending state . <nl> * / <nl> 	 public void waitForNonPendingState ( ) { <nl> @ @ - 315 , 16 + 331 , 7 @ @ public class W32Service implements Closeable { <nl> 	 	 	 	 throw new RuntimeException ( " Timeout waiting for service to change to a non - pending state . " ) ; <nl> 	 	 	 } <nl> <nl> - 	 	 	 / / do not wait longer than the wait hint . A good interval is <nl> - 	 	 	 / / one - tenth the wait hint , but no less than 1 second and no <nl> - 	 	 	 / / more than 10 seconds . <nl> - <nl> - 	 	 	 int dwWaitTime = status . dwWaitHint / 10 ; <nl> - <nl> - 	 	 	 if ( dwWaitTime < 1000 ) <nl> - 	 	 	 	 dwWaitTime = 1000 ; <nl> - 	 	 	 else if ( dwWaitTime > 10000 ) <nl> - 	 	 	 	 dwWaitTime = 10000 ; <nl> + 	 	 	 int dwWaitTime = sanitizeWaitTime ( status . dwWaitHint ) ; <nl> <nl> 	 	 	 try { <nl> 	 	 	 	 Thread . sleep ( dwWaitTime ) ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java b / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java <nl> index 2280116 . . ae5b9ab 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java <nl> @ @ - 35 , 6 + 35 , 10 @ @ import com . sun . jna . platform . win32 . WinNT . OSVERSIONINFOEX ; <nl> * robust means to determine the operating system version . <nl> * / <nl> public class VersionHelpers { <nl> + / * <nl> + * Code in this class is an attempt to faithfully port the inline macros in <nl> + * the versionhelpers . h header file of the Windows 10 SDK . <nl> + * / <nl> <nl> / * * <nl> * This function is useful in confirming a version of Windows Server that <nl> @ @ - 70 , 6 + 74 , 15 @ @ public class VersionHelpers { <nl> WinNT . VER _ MAJORVERSION | WinNT . VER _ MINORVERSION | WinNT . VER _ SERVICEPACKMAJOR , dwlConditionMask ) ; <nl> } <nl> <nl> + / * <nl> + * The constants Kernel32 . WIN32 _ WINNT _ * are 2 - byte encodings of windows <nl> + * version numbers , for example Windows XP is version 5 . 1 and is encoded as <nl> + * 0x0501 . To pass to IsWindowsVersionOrGreater , we pass the HIBYTE ( e . g . , <nl> + * 0x05 ) as the first argument and LOBYTE ( e . g . , 0x01 ) as the second . To get <nl> + * the high byte of a short , we shift right 8 bits and cast to byte , e . g . , <nl> + * ( byte ) ( word > > > 8 ) ; to get the low byte wse simply cast to byte . <nl> + * / <nl> + <nl> / * * <nl> * @ return true if the current OS version matches , or is greater than , the <nl> * Windows XP version . <nl> @ @ - 189 , 6 + 202 , 9 @ @ public class VersionHelpers { <nl> * @ return true if the current OS is a Windows Server release . <nl> * / <nl> public static boolean IsWindowsServer ( ) { <nl> + / / This should properly be OSVERSIONINFOEXW which is not defined in JNA . <nl> + / / The OSVERSIONINFOEX structure in JNA is the ( W ) Unicode - compliant <nl> + / / version . <nl> OSVERSIONINFOEX osvi = new OSVERSIONINFOEX ( ) ; <nl> osvi . dwOSVersionInfoSize = new DWORD ( osvi . size ( ) ) ; <nl> osvi . wProductType = WinNT . VER _ NT _ WORKSTATION ; <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / VersionHelpersTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / VersionHelpersTest . java <nl> index 7665169 . . ccc93dd 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / VersionHelpersTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / VersionHelpersTest . java <nl> @ @ - 1 , 3 + 1 , 26 @ @ <nl> + / * Copyright ( c ) 2019 Daniel Widdis , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> import static org . junit . Assert . assertFalse ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index a3413c7 . . 8f650c1 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 10 , 7 + 10 , 7 @ @ Features <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> - * [ # 1052 ] ( https : / / github . com / java - native - access / jna / issues / 1052 ) : WinXP compatibility for ` c . s . j . p . win32 . PdhUtil ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> + * [ # 1052 ] ( https : / / github . com / java - native - access / jna / issues / 1052 ) , [ # 1053 ] ( https : / / github . com / java - native - access / jna / issues / 1053 ) : WinXP compatibility for ` c . s . j . p . win32 . PdhUtil ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> <nl> Release 5 . 2 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / PdhUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / PdhUtil . java <nl> index 28546c5 . . 4de9d57 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / PdhUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / PdhUtil . java <nl> @ @ - 62 , 25 + 62 , 33 @ @ public abstract class PdhUtil { <nl> / / Call once with null buffer to get required buffer size <nl> DWORDByReference pcchNameBufferSize = new DWORDByReference ( new DWORD ( 0 ) ) ; <nl> int result = Pdh . INSTANCE . PdhLookupPerfNameByIndex ( szMachineName , dwNameIndex , null , pcchNameBufferSize ) ; <nl> - / / Windows XP requires a non - null buffer <nl> - if ( result = = PdhMsg . PDH _ INVALID _ ARGUMENT ) { <nl> - pcchNameBufferSize = new DWORDByReference ( new DWORD ( 1 ) ) ; <nl> - result = Pdh . INSTANCE . PdhLookupPerfNameByIndex ( szMachineName , dwNameIndex , new Memory ( 1 ) , <nl> - pcchNameBufferSize ) ; <nl> - } <nl> - if ( result ! = WinError . ERROR _ SUCCESS & & result ! = Pdh . PDH _ MORE _ DATA & & result ! = Pdh . PDH _ INSUFFICIENT _ BUFFER ) { <nl> - throw new PdhException ( result ) ; <nl> - } <nl> - <nl> - / / Can ' t allocate 0 memory <nl> - if ( pcchNameBufferSize . getValue ( ) . intValue ( ) < 1 ) { <nl> - return " " ; <nl> + Memory mem = null ; <nl> + / / Windows XP requires a non - null buffer and nonzero buffer size and <nl> + / / will return PDH _ INVALID _ ARGUMENT . <nl> + if ( result ! = PdhMsg . PDH _ INVALID _ ARGUMENT ) { <nl> + / / Vista + branch : use returned buffer size for second query <nl> + if ( result ! = WinError . ERROR _ SUCCESS & & result ! = Pdh . PDH _ MORE _ DATA ) { <nl> + throw new PdhException ( result ) ; <nl> + } <nl> + / / Can ' t allocate 0 memory <nl> + if ( pcchNameBufferSize . getValue ( ) . intValue ( ) < 1 ) { <nl> + return " " ; <nl> + } <nl> + / / Allocate buffer and call again <nl> + mem = new Memory ( pcchNameBufferSize . getValue ( ) . intValue ( ) * CHAR _ TO _ BYTES ) ; <nl> + result = Pdh . INSTANCE . PdhLookupPerfNameByIndex ( szMachineName , dwNameIndex , mem , pcchNameBufferSize ) ; <nl> + } else { <nl> + / / XP branch : try increasing buffer sizes until successful <nl> + for ( int bufferSize = 32 ; bufferSize < = Pdh . PDH _ MAX _ COUNTER _ NAME ; bufferSize * = 2 ) { <nl> + pcchNameBufferSize = new DWORDByReference ( new DWORD ( bufferSize ) ) ; <nl> + mem = new Memory ( bufferSize * CHAR _ TO _ BYTES ) ; <nl> + result = Pdh . INSTANCE . PdhLookupPerfNameByIndex ( szMachineName , dwNameIndex , mem , pcchNameBufferSize ) ; <nl> + if ( result ! = PdhMsg . PDH _ INVALID _ ARGUMENT & & result ! = PdhMsg . PDH _ INSUFFICIENT _ BUFFER ) { <nl> + break ; <nl> + } <nl> + } <nl> } <nl> - / / Allocate buffer and call again <nl> - Memory mem = new Memory ( pcchNameBufferSize . getValue ( ) . intValue ( ) * CHAR _ TO _ BYTES ) ; <nl> - result = Pdh . INSTANCE . PdhLookupPerfNameByIndex ( szMachineName , dwNameIndex , mem , pcchNameBufferSize ) ; <nl> - <nl> - if ( result ! = WinError . ERROR _ SUCCESS ) { <nl> + if ( result ! = WinError . ERROR _ SUCCESS ) { <nl> throw new PdhException ( result ) ; <nl> } <nl>
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 9440de9 . . a9cd8f6 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 2 , 7 + 2 , 7 @ @ NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and AL 2 . 0 ( see LICENSE <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> - Next release ( 5 . 2 . 1 ) <nl> + Next release ( 5 . 3 . 0 ) <nl> = = = = = = = = = = = = = = = = = = = = <nl> <nl> Features <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index 9f60001 . . e012b13 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 1414 , 66 + 1414 , 68 @ @ public interface Kernel32 extends StdCallLibrary , WinNT , Wincon { <nl> boolean GetVersionEx ( OSVERSIONINFOEX lpVersionInfo ) ; <nl> <nl> / * * <nl> - * The VerifyVersionInfoW function compares a set of operating system <nl> - * version requirements to the corresponding values for the currently <nl> - * running version of the system . This function is subject to manifest - based <nl> - * behavior . <nl> + * Compares a set of operating system version requirements to the <nl> + * corresponding values for the currently running version of the system . <nl> + * This function is subject to manifest - based behavior . <nl> * <nl> * @ param lpVersionInformation <nl> - * A pointer to an OSVERSIONINFOEX structure containing the <nl> - * operating system version requirements to compare . The <nl> - * dwTypeMask parameter indicates the members of this structure <nl> - * that contain information to compare . <nl> - * <nl> - * You must set the dwOSVersionInfoSize member of this structure <nl> - * to sizeof ( OSVERSIONINFOEX ) . You must also specify valid data <nl> - * for the members indicated by dwTypeMask . The function ignores <nl> - * structure members for which the corresponding dwTypeMask bit <nl> - * is not set . <nl> + * A pointer to an { @ link WinNT # OSVERSIONINFOEX } structure <nl> + * containing the operating system version requirements to <nl> + * compare . The { @ code dwTypeMask } parameter indicates the <nl> + * members of this structure that contain information to compare . <nl> + * < p > <nl> + * You must set the { @ code dwOSVersionInfoSize } member of this <nl> + * structure to { @ code sizeof ( OSVERSIONINFOEX ) } . You must also <nl> + * specify valid data for the members indicated by <nl> + * { @ code dwTypeMask } . The function ignores structure members for <nl> + * which the corresponding { @ code dwTypeMask } bit is not set . <nl> * @ param dwTypeMask <nl> - * A mask that indicates the members of the OSVERSIONINFOEX <nl> - * structure to be tested . <nl> + * A mask that indicates the members of the <nl> + * { @ link WinNT # OSVERSIONINFOEX } structure to be tested . <nl> * @ param dwlConditionMask <nl> - * The type of comparison to be used for each lpVersionInfo <nl> - * member being compared . To build this value , call the <nl> - * VerSetConditionMask function once for each OSVERSIONINFOEX <nl> - * member being compared . <nl> + * The type of comparison to be used for each <nl> + * { @ code lpVersionInfo } member being compared . To build this <nl> + * value , call the { @ link # VerSetConditionMask } function once for <nl> + * each { @ link WinNT # OSVERSIONINFOEX } member being compared . <nl> * @ return If the currently running operating system satisfies the specified <nl> * requirements , the return value is a nonzero value . <nl> - * <nl> + * < p > <nl> * If the current system does not satisfy the requirements , the <nl> - * return value is zero and GetLastError returns <nl> - * ERROR _ OLD _ WIN _ VERSION . <nl> - * <nl> - * If the function fails , the return value is zero and GetLastError <nl> - * returns an error code other than ERROR _ OLD _ WIN _ VERSION . <nl> + * return value is zero and { @ link # GetLastError ( ) } returns <nl> + * { @ link WinError # ERROR _ OLD _ WIN _ VERSION } . <nl> + * < p > <nl> + * If the function fails , the return value is zero and <nl> + * { @ link # GetLastError ( ) } returns an error code other than <nl> + * { @ link WinError # ERROR _ OLD _ WIN _ VERSION } . <nl> * / <nl> boolean VerifyVersionInfoW ( OSVERSIONINFOEX lpVersionInformation , int dwTypeMask , long dwlConditionMask ) ; <nl> <nl> / * * <nl> - * The VerSetConditionMask function sets the bits of a 64 - bit value to <nl> - * indicate the comparison operator to use for a specified operating system <nl> - * version attribute . This function is used to build the dwlConditionMask <nl> - * parameter of the VerifyVersionInfo function . <nl> + * Sets the bits of a 64 - bit value to indicate the comparison operator to <nl> + * use for a specified operating system version attribute . This function is <nl> + * used to build the { @ code dwlConditionMask } parameter of the <nl> + * { @ link # VerifyVersionInfo } function . <nl> * <nl> * @ param conditionMask <nl> - * A value to be passed as the dwlConditionMask parameter of the <nl> - * VerifyVersionInfo function . The function stores the comparison <nl> - * information in the bits of this variable . <nl> - * <nl> - * Before the first call to VerSetCondition , initialize this <nl> - * variable to zero . For subsequent calls , pass in the variable <nl> - * used in the previous call . <nl> + * A value to be passed as the { @ code dwlConditionMask } parameter <nl> + * of the { @ link # VerifyVersionInfo } function . The function <nl> + * stores the comparison information in the bits of this <nl> + * variable . <nl> + * < p > <nl> + * Before the first call to { @ link # VerSetConditionMask } , <nl> + * initialize this variable to zero . For subsequent calls , pass <nl> + * in the variable used in the previous call . <nl> * @ param typeMask <nl> - * A mask that indicates the member of the OSVERSIONINFOEX <nl> - * structure whose comparison operator is being set . This value <nl> - * corresponds to one of the bits specified in the dwTypeMask <nl> - * parameter for the VerifyVersionInfo function . <nl> + * A mask that indicates the member of the <nl> + * { @ link WinNT # OSVERSIONINFOEX } structure whose comparison <nl> + * operator is being set . This value corresponds to one of the <nl> + * bits specified in the { @ code dwTypeMask } parameter for the <nl> + * { @ link # VerifyVersionInfo } function . <nl> * @ param condition <nl> * The operator to be used for the comparison . The <nl> - * VerifyVersionInfo function uses this operator to compare a <nl> - * specified attribute value to the corresponding value for the <nl> - * currently running system . <nl> + * { @ link # VerifyVersionInfo } function uses this operator to <nl> + * compare a specified attribute value to the corresponding value <nl> + * for the currently running system . <nl> * @ return The function returns the condition mask value . <nl> * / <nl> long VerSetConditionMask ( long conditionMask , int typeMask , byte condition ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java b / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java <nl> index 4d3b398 . . 2280116 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java <nl> @ @ - 60 , 11 + 60 , 11 @ @ public class VersionHelpers { <nl> <nl> long dwlConditionMask = 0 ; <nl> dwlConditionMask = Kernel32 . INSTANCE . VerSetConditionMask ( dwlConditionMask , WinNT . VER _ MAJORVERSION , <nl> - WinNT . VER _ GREATER _ EQUAL ) ; <nl> + ( byte ) WinNT . VER _ GREATER _ EQUAL ) ; <nl> dwlConditionMask = Kernel32 . INSTANCE . VerSetConditionMask ( dwlConditionMask , WinNT . VER _ MINORVERSION , <nl> - WinNT . VER _ GREATER _ EQUAL ) ; <nl> + ( byte ) WinNT . VER _ GREATER _ EQUAL ) ; <nl> dwlConditionMask = Kernel32 . INSTANCE . VerSetConditionMask ( dwlConditionMask , WinNT . VER _ SERVICEPACKMAJOR , <nl> - WinNT . VER _ GREATER _ EQUAL ) ; <nl> + ( byte ) WinNT . VER _ GREATER _ EQUAL ) ; <nl> <nl> return Kernel32 . INSTANCE . VerifyVersionInfoW ( osvi , <nl> WinNT . VER _ MAJORVERSION | WinNT . VER _ MINORVERSION | WinNT . VER _ SERVICEPACKMAJOR , dwlConditionMask ) ; <nl> @ @ - 75 , 7 + 75 , 8 @ @ public class VersionHelpers { <nl> * Windows XP version . <nl> * / <nl> public static boolean IsWindowsXPOrGreater ( ) { <nl> - return IsWindowsVersionOrGreater ( HIBYTE ( WinNT . WIN32 _ WINNT _ WINXP ) , LOBYTE ( WinNT . WIN32 _ WINNT _ WINXP ) , 0 ) ; <nl> + return IsWindowsVersionOrGreater ( ( byte ) ( Kernel32 . WIN32 _ WINNT _ WINXP > > > 8 ) , ( byte ) Kernel32 . WIN32 _ WINNT _ WINXP , <nl> + 0 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 83 , 7 + 84 , 8 @ @ public class VersionHelpers { <nl> * Windows XP with Service Pack 1 ( SP1 ) version . <nl> * / <nl> public static boolean IsWindowsXPSP1OrGreater ( ) { <nl> - return IsWindowsVersionOrGreater ( HIBYTE ( WinNT . WIN32 _ WINNT _ WINXP ) , LOBYTE ( WinNT . WIN32 _ WINNT _ WINXP ) , 1 ) ; <nl> + return IsWindowsVersionOrGreater ( ( byte ) ( Kernel32 . WIN32 _ WINNT _ WINXP > > > 8 ) , ( byte ) Kernel32 . WIN32 _ WINNT _ WINXP , <nl> + 1 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 91 , 7 + 93 , 8 @ @ public class VersionHelpers { <nl> * Windows XP with Service Pack 2 ( SP2 ) version . <nl> * / <nl> public static boolean IsWindowsXPSP2OrGreater ( ) { <nl> - return IsWindowsVersionOrGreater ( HIBYTE ( WinNT . WIN32 _ WINNT _ WINXP ) , LOBYTE ( WinNT . WIN32 _ WINNT _ WINXP ) , 2 ) ; <nl> + return IsWindowsVersionOrGreater ( ( byte ) ( Kernel32 . WIN32 _ WINNT _ WINXP > > > 8 ) , ( byte ) Kernel32 . WIN32 _ WINNT _ WINXP , <nl> + 2 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 99 , 7 + 102 , 8 @ @ public class VersionHelpers { <nl> * Windows XP with Service Pack 3 ( SP3 ) version . <nl> * / <nl> public static boolean IsWindowsXPSP3OrGreater ( ) { <nl> - return IsWindowsVersionOrGreater ( HIBYTE ( WinNT . WIN32 _ WINNT _ WINXP ) , LOBYTE ( WinNT . WIN32 _ WINNT _ WINXP ) , 3 ) ; <nl> + return IsWindowsVersionOrGreater ( ( byte ) ( Kernel32 . WIN32 _ WINNT _ WINXP > > > 8 ) , ( byte ) Kernel32 . WIN32 _ WINNT _ WINXP , <nl> + 3 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 107 , 7 + 111 , 8 @ @ public class VersionHelpers { <nl> * Windows Vista version . <nl> * / <nl> public static boolean IsWindowsVistaOrGreater ( ) { <nl> - return IsWindowsVersionOrGreater ( HIBYTE ( WinNT . WIN32 _ WINNT _ VISTA ) , LOBYTE ( WinNT . WIN32 _ WINNT _ VISTA ) , 0 ) ; <nl> + return IsWindowsVersionOrGreater ( ( byte ) ( Kernel32 . WIN32 _ WINNT _ VISTA > > > 8 ) , ( byte ) Kernel32 . WIN32 _ WINNT _ VISTA , <nl> + 0 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 115 , 7 + 120 , 8 @ @ public class VersionHelpers { <nl> * Windows Vista with Service Pack 1 ( SP1 ) version . <nl> * / <nl> public static boolean IsWindowsVistaSP1OrGreater ( ) { <nl> - return IsWindowsVersionOrGreater ( HIBYTE ( WinNT . WIN32 _ WINNT _ VISTA ) , LOBYTE ( WinNT . WIN32 _ WINNT _ VISTA ) , 1 ) ; <nl> + return IsWindowsVersionOrGreater ( ( byte ) ( Kernel32 . WIN32 _ WINNT _ VISTA > > > 8 ) , ( byte ) Kernel32 . WIN32 _ WINNT _ VISTA , <nl> + 1 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 123 , 7 + 129 , 8 @ @ public class VersionHelpers { <nl> * Windows Vista with Service Pack 2 ( SP2 ) version . <nl> * / <nl> public static boolean IsWindowsVistaSP2OrGreater ( ) { <nl> - return IsWindowsVersionOrGreater ( HIBYTE ( WinNT . WIN32 _ WINNT _ VISTA ) , LOBYTE ( WinNT . WIN32 _ WINNT _ VISTA ) , 2 ) ; <nl> + return IsWindowsVersionOrGreater ( ( byte ) ( Kernel32 . WIN32 _ WINNT _ VISTA > > > 8 ) , ( byte ) Kernel32 . WIN32 _ WINNT _ VISTA , <nl> + 2 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 131 , 7 + 138 , 7 @ @ public class VersionHelpers { <nl> * Windows 7 version . <nl> * / <nl> public static boolean IsWindows7OrGreater ( ) { <nl> - return IsWindowsVersionOrGreater ( HIBYTE ( WinNT . WIN32 _ WINNT _ WIN7 ) , LOBYTE ( WinNT . WIN32 _ WINNT _ WIN7 ) , 0 ) ; <nl> + return IsWindowsVersionOrGreater ( ( byte ) ( Kernel32 . WIN32 _ WINNT _ WIN7 > > > 8 ) , ( byte ) Kernel32 . WIN32 _ WINNT _ WIN7 , 0 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 139 , 7 + 146 , 7 @ @ public class VersionHelpers { <nl> * Windows 7 with Service Pack 1 ( SP1 ) version . <nl> * / <nl> public static boolean IsWindows7SP1OrGreater ( ) { <nl> - return IsWindowsVersionOrGreater ( HIBYTE ( WinNT . WIN32 _ WINNT _ WIN7 ) , LOBYTE ( WinNT . WIN32 _ WINNT _ WIN7 ) , 1 ) ; <nl> + return IsWindowsVersionOrGreater ( ( byte ) ( Kernel32 . WIN32 _ WINNT _ WIN7 > > > 8 ) , ( byte ) Kernel32 . WIN32 _ WINNT _ WIN7 , 1 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 147 , 29 + 154 , 32 @ @ public class VersionHelpers { <nl> * Windows 8 version . <nl> * / <nl> public static boolean IsWindows8OrGreater ( ) { <nl> - return IsWindowsVersionOrGreater ( HIBYTE ( WinNT . WIN32 _ WINNT _ WIN8 ) , LOBYTE ( WinNT . WIN32 _ WINNT _ WIN8 ) , 0 ) ; <nl> + return IsWindowsVersionOrGreater ( ( byte ) ( Kernel32 . WIN32 _ WINNT _ WIN8 > > > 8 ) , ( byte ) Kernel32 . WIN32 _ WINNT _ WIN8 , 0 ) ; <nl> } <nl> <nl> / * * <nl> * @ return true if the current OS version matches , or is greater than , the <nl> - * Windows 8 . 1 version . For Windows 10 , IsWindows8Point1OrGreater <nl> - * returns false unless the application contains a manifest that <nl> - * includes a compatibility section that contains the GUIDs that <nl> - * designate Windows 8 . 1 and / or Windows 10 . <nl> + * Windows 8 . 1 version . For Windows 8 . 1 and / or Windows 10 , <nl> + * { @ link # IsWindows8Point1OrGreater } returns false unless the <nl> + * application contains a manifest that includes a compatibility <nl> + * section that contains the GUIDs that designate Windows 8 . 1 and / or <nl> + * Windows 10 . <nl> * / <nl> public static boolean IsWindows8Point1OrGreater ( ) { <nl> - return IsWindowsVersionOrGreater ( HIBYTE ( WinNT . WIN32 _ WINNT _ WINBLUE ) , LOBYTE ( WinNT . WIN32 _ WINNT _ WINBLUE ) , 0 ) ; <nl> + return IsWindowsVersionOrGreater ( ( byte ) ( Kernel32 . WIN32 _ WINNT _ WINBLUE > > > 8 ) , <nl> + ( byte ) Kernel32 . WIN32 _ WINNT _ WINBLUE , 0 ) ; <nl> } <nl> <nl> / * * <nl> * @ return true if the current OS version matches , or is greater than , the <nl> - * Windows 10 version . For Windows 10 , IsWindows10OrGreater returns <nl> - * false unless the application contains a manifest that includes a <nl> - * compatibility section that contains the GUID that designates <nl> - * Windows 10 . <nl> + * Windows 10 version . For Windows 10 , <nl> + * { @ link # IsWindows8Point1OrGreater } returns false unless the <nl> + * application contains a manifest that includes a compatibility <nl> + * section that contains the GUID that designates Windows 10 . <nl> * / <nl> public static boolean IsWindows10OrGreater ( ) { <nl> - return IsWindowsVersionOrGreater ( HIBYTE ( WinNT . WIN32 _ WINNT _ WIN10 ) , LOBYTE ( WinNT . WIN32 _ WINNT _ WIN10 ) , 0 ) ; <nl> + return IsWindowsVersionOrGreater ( ( byte ) ( Kernel32 . WIN32 _ WINNT _ WIN10 > > > 8 ) , ( byte ) Kernel32 . WIN32 _ WINNT _ WIN10 , <nl> + 0 ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 183 , 31 + 193 , 10 @ @ public class VersionHelpers { <nl> osvi . dwOSVersionInfoSize = new DWORD ( osvi . size ( ) ) ; <nl> osvi . wProductType = WinNT . VER _ NT _ WORKSTATION ; <nl> <nl> - long dwlConditionMask = Kernel32 . INSTANCE . VerSetConditionMask ( 0 , WinNT . VER _ PRODUCT _ TYPE , WinNT . VER _ EQUAL ) ; <nl> + long dwlConditionMask = Kernel32 . INSTANCE . VerSetConditionMask ( 0 , WinNT . VER _ PRODUCT _ TYPE , <nl> + ( byte ) WinNT . VER _ EQUAL ) ; <nl> <nl> return ! Kernel32 . INSTANCE . VerifyVersionInfoW ( osvi , WinNT . VER _ PRODUCT _ TYPE , dwlConditionMask ) ; <nl> } <nl> - <nl> - / * * <nl> - * Get the high byte <nl> - * <nl> - * @ param word <nl> - * a two - byte value <nl> - * @ return The most significant byte <nl> - * / <nl> - private static byte HIBYTE ( short word ) { <nl> - return ( byte ) ( ( word > > 8 ) & 0xFF ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Get the low byte <nl> - * <nl> - * @ param word <nl> - * a two - byte value <nl> - * @ return The least significant byte <nl> - * / <nl> - private static byte LOBYTE ( short word ) { <nl> - return ( byte ) word ; <nl> - } <nl> } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index 860d95a . . 315f8e9 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 1988 , 13 + 1988 , 13 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> } <nl> } <nl> <nl> - byte VER _ EQUAL = 1 ; <nl> - byte VER _ GREATER = 2 ; <nl> - byte VER _ GREATER _ EQUAL = 3 ; <nl> - byte VER _ LESS = 4 ; <nl> - byte VER _ LESS _ EQUAL = 5 ; <nl> - byte VER _ AND = 6 ; <nl> - byte VER _ OR = 7 ; <nl> + int VER _ EQUAL = 1 ; <nl> + int VER _ GREATER = 2 ; <nl> + int VER _ GREATER _ EQUAL = 3 ; <nl> + int VER _ LESS = 4 ; <nl> + int VER _ LESS _ EQUAL = 5 ; <nl> + int VER _ AND = 6 ; <nl> + int VER _ OR = 7 ; <nl> <nl> int VER _ CONDITION _ MASK = 7 ; <nl> int VER _ NUM _ BITS _ PER _ CONDITION _ MASK = 3 ;
diff - - git a / www / ReleasingJNA . md b / www / ReleasingJNA . md <nl> index 71d29dd . . 2b22e09 100644 <nl> - - - a / www / ReleasingJNA . md <nl> + + + b / www / ReleasingJNA . md <nl> @ @ - 1 , 37 + 1 , 36 @ @ <nl> JNA Release Process <nl> = = = = = = = = = = = = = = = = = = = <nl> <nl> - * Bump version in CHANGES . md and build . xml , if not already . <nl> - * Change JNI version in build . xml * only * if JNA ' s native API has been changed ( i . e . md5 changed ) . <nl> + * Bump version in CHANGES . md and build . xml , if not already . <nl> + * Change JNI version in build . xml * only * if JNA ' s native API has been changed ( i . e . md5 changed ) . <nl> * Bump JNA minor version if its Java API has changed significantly or incompatibly . <nl> <nl> * If native changes have been made , run ` ant native ` target on each target <nl> platform , pushing the resulting target - specific jar ( in lib / native ) file to master . <nl> <nl> - * Run ` ant - Drelease = true clean dist ` target on a fully up - to - date checkout with no modifications . Commit generated files in ` dist ` . <nl> - * You will also see differences in the pom - * . xml files and src / . . . / Native . java . Do not commit these files . <nl> + * Run ` ant - Drelease = true clean dist ` target on a fully up - to - date checkout with no modifications . <nl> <nl> - * Update Javadoc <nl> - * Check out gh - pages branch <nl> - * Copy latest doc / javadoc into { version } / javadoc <nl> - * Commit and push <nl> + * Update versioned links in ` README . md ` ( search for old version and replace with new version ) <nl> <nl> - * Update versioned links <nl> - * Switch back to master branch <nl> - * Update links in README . md ( download and javadoc ) <nl> - * Commit and push <nl> + * Update ` CHANGES . md ` : remove the ` Next release ` label and replace it with the final version number . While doing this also check if the version number matches the release : major version should incremented when API incompatible changes are made , minor version should be incremented when features are added , revision should be updated when bugfixes are done . <nl> + <nl> + * Commit and push generated files in ` dist ` , ` pom - * . xml ` , ` CHANGES . md ` , ` README . md ` and ` src / com / sun / jna / Version . java ` . <nl> <nl> * Tag <nl> * Tag using the new version number ( e . g . ` git tag 4 . 2 . 1 ` ) <nl> * Push new tag to origin ( ` git push - - tags ` ) <nl> <nl> + * Update Javadoc <nl> + * Check out gh - pages branch <nl> + * Copy latest doc / javadoc into { version } / javadoc <nl> + * Commit and push <nl> + <nl> * [ Release to Maven Central ] ( PublishingToMavenCentral . md ) <nl> <nl> * Email release notice to [ jna - users Google group ] ( http : / / groups . google . com / group / jna - users ) . <nl> <nl> * Increment the version in build . xml for the next development iteration <nl> * Increment " jna . revision " in build . xml by one <nl> - * Increment " android . versionCode " in build . xml by one <nl> * Create a new section in CHANGES . md for ' Next Release ( x . y . z ) ' <nl> * Commit and push <nl>
diff - - git a / CHANGES . md b / CHANGES . md <nl> index cd93d5d . . bea9f4e 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 2 , 8 + 2 , 8 @ @ NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and AL 2 . 0 ( see LICENSE <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> - Release 5 . 2 . 0 ( Next release ) <nl> - = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> + Release 5 . 2 . 0 <nl> + = = = = = = = = = = = = = <nl> <nl> Features <nl> - - - - - - - - <nl> diff - - git a / README . md b / README . md <nl> index 0142cd7 . . 3a933b4 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 6 , 7 + 6 , 7 @ @ <nl> Java Native Access ( JNA ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / java - native - access . github . io / jna / 5 . 1 . 0 / javadoc / ) . Please read the [ overview ] ( http : / / java - native - access . github . io / jna / 5 . 1 . 0 / javadoc / overview - summary . html # overview _ description ) . Questions , comments , or exploratory conversations should begin on the [ mailing list ] ( http : / / groups . google . com / group / jna - users ) , although you may find it easier to find answers to already - solved problems on [ StackOverflow ] ( http : / / stackoverflow . com / questions / tagged / jna ) . <nl> + The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / java - native - access . github . io / jna / 5 . 2 . 0 / javadoc / ) . Please read the [ overview ] ( http : / / java - native - access . github . io / jna / 5 . 2 . 0 / javadoc / overview - summary . html # overview _ description ) . Questions , comments , or exploratory conversations should begin on the [ mailing list ] ( http : / / groups . google . com / group / jna - users ) , although you may find it easier to find answers to already - solved problems on [ StackOverflow ] ( http : / / stackoverflow . com / questions / tagged / jna ) . <nl> <nl> JNA provides Java programs easy access to native shared libraries without writing anything but Java code - no JNI or native code is required . This functionality is comparable to Windows ' Platform / Invoke and Python ' s ctypes . <nl> <nl> @ @ - 59 , 12 + 59 , 12 @ @ Pre - built platform support may be found [ here ] ( https : / / github . com / java - native - ac <nl> Download <nl> = = = = = = = = <nl> <nl> - Version 5 . 1 . 0 <nl> + Version 5 . 2 . 0 <nl> <nl> JNA <nl> - - - <nl> <nl> - [ ! [ Maven Central ] ( https : / / img . shields . io / maven - central / v / net . java . dev . jna / jna . svg ? label = Maven % 20Central ) ] ( https : / / search . maven . org / artifact / net . java . dev . jna / jna / 5 . 1 . 0 / jar ) & nbsp ; [ jna - 5 . 1 . 0 . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna / 5 . 1 . 0 / jna - 5 . 1 . 0 . jar ) <nl> + [ ! [ Maven Central ] ( https : / / img . shields . io / maven - central / v / net . java . dev . jna / jna . svg ? label = Maven % 20Central ) ] ( https : / / search . maven . org / artifact / net . java . dev . jna / jna / 5 . 2 . 0 / jar ) & nbsp ; [ jna - 5 . 2 . 0 . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna / 5 . 2 . 0 / jna - 5 . 2 . 0 . jar ) <nl> <nl> This is the core artifact of JNA and contains only the binding library and the <nl> core helper classes . <nl> @ @ - 72 , 7 + 72 , 7 @ @ core helper classes . <nl> JNA Platform <nl> - - - - - - - - - - - - <nl> <nl> - [ ! [ Maven Central ] ( https : / / img . shields . io / maven - central / v / net . java . dev . jna / jna - platform . svg ? label = Maven % 20Central ) ] ( https : / / search . maven . org / artifact / net . java . dev . jna / jna - platform / 5 . 1 . 0 / jar ) & nbsp ; [ jna - platform - 5 . 1 . 0 . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna - platform / 5 . 1 . 0 / jna - platform - 5 . 1 . 0 . jar ) <nl> + [ ! [ Maven Central ] ( https : / / img . shields . io / maven - central / v / net . java . dev . jna / jna - platform . svg ? label = Maven % 20Central ) ] ( https : / / search . maven . org / artifact / net . java . dev . jna / jna - platform / 5 . 2 . 0 / jar ) & nbsp ; [ jna - platform - 5 . 2 . 0 . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna - platform / 5 . 2 . 0 / jna - platform - 5 . 2 . 0 . jar ) <nl> <nl> This artifact holds cross - platform mappings and mappings for a number of commonly used platform <nl> functions , including a large number of Win32 mappings as well as a set of utility classes <nl> @ @ - 140 , 12 + 140 , 12 @ @ Using the Library <nl> * [ Platform Library ] ( https : / / github . com / java - native - access / jna / blob / master / www / PlatformLibrary . md ) <nl> * [ Direct Method Mapping ] ( https : / / github . com / java - native - access / jna / blob / master / www / DirectMapping . md ) ( Optimization ) <nl> * [ Frequently Asked Questions ( FAQ ) ] ( https : / / github . com / java - native - access / jna / blob / master / www / FrequentlyAskedQuestions . md ) <nl> - * [ Avoiding Crashes ] ( http : / / java - native - access . github . io / jna / 5 . 1 . 0 / javadoc / overview - summary . html # crash - protection ) <nl> + * [ Avoiding Crashes ] ( http : / / java - native - access . github . io / jna / 5 . 2 . 0 / javadoc / overview - summary . html # crash - protection ) <nl> <nl> Primary Documentation ( JavaDoc ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference is in the [ JavaDoc ] ( http : / / java - native - access . github . io / jna / 5 . 1 . 0 / javadoc / ) . <nl> + The definitive JNA reference is in the [ JavaDoc ] ( http : / / java - native - access . github . io / jna / 5 . 2 . 0 / javadoc / ) . <nl> <nl> Developers <nl> = = = = = = = = = = <nl> diff - - git a / dist / doc . zip b / dist / doc . zip <nl> index 12f3ccc . . 051e412 100644 <nl> Binary files a / dist / doc . zip and b / dist / doc . zip differ <nl> diff - - git a / dist / jna - min . jar b / dist / jna - min . jar <nl> index aa88572 . . 6c4aa6d 100644 <nl> Binary files a / dist / jna - min . jar and b / dist / jna - min . jar differ <nl> diff - - git a / dist / jna - platform . jar b / dist / jna - platform . jar <nl> index 457f04e . . ab24562 100644 <nl> Binary files a / dist / jna - platform . jar and b / dist / jna - platform . jar differ <nl> diff - - git a / dist / jna . aar b / dist / jna . aar <nl> index 9b188fd . . f52c784 100644 <nl> Binary files a / dist / jna . aar and b / dist / jna . aar differ <nl> diff - - git a / dist / jna . jar b / dist / jna . jar <nl> index 00ae472 . . 2c3c6f2 100644 <nl> Binary files a / dist / jna . jar and b / dist / jna . jar differ <nl> diff - - git a / dist / jnacontrib / demo - alphamask . jar b / dist / jnacontrib / demo - alphamask . jar <nl> index d1ca6bf . . fd97568 100644 <nl> Binary files a / dist / jnacontrib / demo - alphamask . jar and b / dist / jnacontrib / demo - alphamask . jar differ <nl> diff - - git a / dist / jnacontrib / demo - balloonmanager . jar b / dist / jnacontrib / demo - balloonmanager . jar <nl> index 8bb235a . . 90e67b5 100644 <nl> Binary files a / dist / jnacontrib / demo - balloonmanager . jar and b / dist / jnacontrib / demo - balloonmanager . jar differ <nl> diff - - git a / dist / jnacontrib / demo - balloontips . jar b / dist / jnacontrib / demo - balloontips . jar <nl> index a4bc674 . . fa07817 100644 <nl> Binary files a / dist / jnacontrib / demo - balloontips . jar and b / dist / jnacontrib / demo - balloontips . jar differ <nl> diff - - git a / dist / jnacontrib / demo - dnd . jar b / dist / jnacontrib / demo - dnd . jar <nl> index 83fa682 . . 57ff49e 100644 <nl> Binary files a / dist / jnacontrib / demo - dnd . jar and b / dist / jnacontrib / demo - dnd . jar differ <nl> diff - - git a / dist / jnacontrib / demo - monitordemo . jar b / dist / jnacontrib / demo - monitordemo . jar <nl> index 94ff946 . . 0af27ff 100644 <nl> Binary files a / dist / jnacontrib / demo - monitordemo . jar and b / dist / jnacontrib / demo - monitordemo . jar differ <nl> diff - - git a / dist / jnacontrib / demo - msoffice . jar b / dist / jnacontrib / demo - msoffice . jar <nl> index 4b59b83 . . d6d752b 100644 <nl> Binary files a / dist / jnacontrib / demo - msoffice . jar and b / dist / jnacontrib / demo - msoffice . jar differ <nl> diff - - git a / dist / jnacontrib / demo - nativewindowmsg . jar b / dist / jnacontrib / demo - nativewindowmsg . jar <nl> index 51e42d8 . . cd5ffc2 100644 <nl> Binary files a / dist / jnacontrib / demo - nativewindowmsg . jar and b / dist / jnacontrib / demo - nativewindowmsg . jar differ <nl> diff - - git a / dist / jnacontrib / demo - shapedwindow . jar b / dist / jnacontrib / demo - shapedwindow . jar <nl> index 9c91fa7 . . 026b329 100644 <nl> Binary files a / dist / jnacontrib / demo - shapedwindow . jar and b / dist / jnacontrib / demo - shapedwindow . jar differ <nl> diff - - git a / dist / jnacontrib / demo - w32keyhook . jar b / dist / jnacontrib / demo - w32keyhook . jar <nl> index b5376f5 . . e9014b4 100644 <nl> Binary files a / dist / jnacontrib / demo - w32keyhook . jar and b / dist / jnacontrib / demo - w32keyhook . jar differ <nl> diff - - git a / dist / jnacontrib / demo - w32printing . jar b / dist / jnacontrib / demo - w32printing . jar <nl> index 806c259 . . 7c063c4 100644 <nl> Binary files a / dist / jnacontrib / demo - w32printing . jar and b / dist / jnacontrib / demo - w32printing . jar differ <nl> diff - - git a / dist / jnacontrib / demo - x11 . jar b / dist / jnacontrib / demo - x11 . jar <nl> index fa7f8b7 . . 64d3982 100644 <nl> Binary files a / dist / jnacontrib / demo - x11 . jar and b / dist / jnacontrib / demo - x11 . jar differ <nl> diff - - git a / dist / src - full . zip b / dist / src - full . zip <nl> index 9a59622 . . 4607a3b 100644 <nl> Binary files a / dist / src - full . zip and b / dist / src - full . zip differ <nl> diff - - git a / dist / src . zip b / dist / src . zip <nl> index c003c53 . . 9357fd4 100644 <nl> Binary files a / dist / src . zip and b / dist / src . zip differ <nl> diff - - git a / pom - jna - platform . xml b / pom - jna - platform . xml <nl> index 398f6c9 . . aa6a5b9 100644 <nl> - - - a / pom - jna - platform . xml <nl> + + + b / pom - jna - platform . xml <nl> @ @ - 6 , 7 + 6 , 7 @ @ <nl> <nl> < groupId > net . java . dev . jna < / groupId > <nl> < artifactId > jna - platform < / artifactId > <nl> - < version > 5 . 1 . 0 < / version > <nl> + < version > 5 . 2 . 0 < / version > <nl> < packaging > jar < / packaging > <nl> <nl> < name > Java Native Access Platform < / name > <nl> @ @ - 54 , 7 + 54 , 7 @ @ <nl> < dependency > <nl> < groupId > net . java . dev . jna < / groupId > <nl> < artifactId > jna < / artifactId > <nl> - < version > 5 . 1 . 0 < / version > <nl> + < version > 5 . 2 . 0 < / version > <nl> < / dependency > <nl> < / dependencies > <nl> <nl> diff - - git a / pom - jna . xml b / pom - jna . xml <nl> index f8c996b . . d70270b 100644 <nl> - - - a / pom - jna . xml <nl> + + + b / pom - jna . xml <nl> @ @ - 6 , 7 + 6 , 7 @ @ <nl> <nl> < groupId > net . java . dev . jna < / groupId > <nl> < artifactId > jna < / artifactId > <nl> - < version > 5 . 1 . 0 < / version > <nl> + < version > 5 . 2 . 0 < / version > <nl> < packaging > jar < / packaging > <nl> <nl> < name > Java Native Access < / name > <nl> diff - - git a / src / com / sun / jna / Version . java b / src / com / sun / jna / Version . java <nl> index 842e0e3 . . be1e00a 100644 <nl> - - - a / src / com / sun / jna / Version . java <nl> + + + b / src / com / sun / jna / Version . java <nl> @ @ - 23 , 6 + 23 , 6 @ @ <nl> * / <nl> package com . sun . jna ; <nl> interface Version { <nl> - String VERSION = " 5 . 1 . 0 " ; <nl> + String VERSION = " 5 . 2 . 0 " ; <nl> String VERSION _ NATIVE = " 6 . 0 . 0 " ; <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index d85df89 . . d82b441 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 15 , 8 + 15 , 8 @ @ Bug Fixes <nl> * [ # 1036 ] ( https : / / github . com / java - native - access / jna / issues / 1036 ) : ` Advapi32Util . registryValueExists ` called on non existing key raises exception instead of returning ` false ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 384 ] ( https : / / github . com / java - native - access / jna / issues / 384 ) : Android only supports loading libraries through the JVM ` System # loadLibrary ` mechanism , defaulting ` jna . nosys ` to ` true ` disabled that code path - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 1041 ] ( https : / / github . com / java - native - access / jna / pull / 1041 ) : Avoid IllegalArgumentException when reading xattrs with zero length - [ @ jrobhoward ] ( https : / / github . com / jrobhoward ) . <nl> - * [ # 1042 ] ( https : / / github . com / java - native - access / jna / issues / 1042 ) : ` com . sun . jna . platform . WindowUtils . W32WindowUtils . getProcessFilePath ( HWND ) ` does not close process handle - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> - * [ # 1044 ] ( https : / / github . com / java - native - access / jna / issues / 1044 ) : ` com . sun . jna . platform . WindowUtils . W32WindowUtils . getProcessFilePath ( HWND ) ` does not close process handle - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 1042 ] ( https : / / github . com / java - native - access / jna / issues / 1042 ) : ` c . s . j . p . WindowUtils . W32WindowUtils . getProcessFilePath ( HWND ) ` does not close process handle - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 1044 ] ( https : / / github . com / java - native - access / jna / issues / 1044 ) : Fix field order for ` c . s . j . p . unix . X11 . XResizeRequestEvent ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 5 . 1 . 0 <nl> = = = = = = = = = = = = =
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 9b978ba . . d85df89 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 16 , 6 + 16 , 7 @ @ Bug Fixes <nl> * [ # 384 ] ( https : / / github . com / java - native - access / jna / issues / 384 ) : Android only supports loading libraries through the JVM ` System # loadLibrary ` mechanism , defaulting ` jna . nosys ` to ` true ` disabled that code path - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 1041 ] ( https : / / github . com / java - native - access / jna / pull / 1041 ) : Avoid IllegalArgumentException when reading xattrs with zero length - [ @ jrobhoward ] ( https : / / github . com / jrobhoward ) . <nl> * [ # 1042 ] ( https : / / github . com / java - native - access / jna / issues / 1042 ) : ` com . sun . jna . platform . WindowUtils . W32WindowUtils . getProcessFilePath ( HWND ) ` does not close process handle - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 1044 ] ( https : / / github . com / java - native - access / jna / issues / 1044 ) : ` com . sun . jna . platform . WindowUtils . W32WindowUtils . getProcessFilePath ( HWND ) ` does not close process handle - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 5 . 1 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index 0761e3e . . e489986 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 218 , 8 + 218 , 7 @ @ com . sun . jna . platform . wince ; version = $ { osgi . version } <nl> < batchtest todir = " $ { results . junit } " > <nl> < fileset dir = " $ { test . src . dir } " excludes = " $ { tests . exclude - patterns } " > <nl> < ! - - Until StructureFieldOrderTest gets fixed up a little - - > <nl> - < exclude name = " * * / StructureFieldOrderTest . java " / > <nl> - < exclude name = " com / sun / jna / platform / AbstractWin32TestSupport . java " / > <nl> + < include name = " com / sun / jna / platform / * Test . java " / > <nl> < include name = " $ { tests . platform . mac } " / > <nl> < include name = " $ { tests . platform . windows } " / > <nl> < include name = " $ { tests . platform . linux } " / > <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> index 6c20edf . . 43123cd 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> @ @ - 1752 , 7 + 1752 , 7 @ @ public interface X11 extends Library { <nl> public int x , y ; <nl> } <nl> <nl> - @ FieldOrder ( { " type " , " serial " , " send _ event " , " display " , " parent " , " window " , " x " , " y " , " width " , " height " , " border _ width " , " above " , " detail " , " value _ mask " } ) <nl> + @ FieldOrder ( { " type " , " serial " , " send _ event " , " display " , " window " , " width " , " height " } ) <nl> class XResizeRequestEvent extends Structure { <nl> public int type ; <nl> public NativeLong serial ; / / # of last request processed by server <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java b / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java <nl> deleted file mode 100644 <nl> index ebdd8b2 . . 0000000 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java <nl> + + + / dev / null <nl> @ @ - 1 , 76 + 0 , 0 @ @ <nl> - / * Copyright ( c ) 2007 - 2008 Timothy Wall , All Rights Reserved <nl> - * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> - * / <nl> - package com . sun . jna . platform ; <nl> - <nl> - <nl> - import com . sun . jna . Platform ; <nl> - import com . sun . jna . platform . unix . X11 ; <nl> - import com . sun . jna . platform . win32 . DBT ; <nl> - import junit . framework . TestCase ; <nl> - <nl> - import com . sun . jna . StructureFieldOrderInspector ; <nl> - <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - <nl> - public class StructureFieldOrderTest extends TestCase { <nl> - <nl> - private String origPropJNANoSys ; <nl> - <nl> - protected void setUp ( ) { <nl> - origPropJNANoSys = System . getProperty ( " jna . nosys " ) ; <nl> - System . setProperty ( " jna . nosys " , " true " ) ; / / would be set by ant script , set here for IDE usage <nl> - } <nl> - <nl> - protected void tearDown ( ) { <nl> - if ( origPropJNANoSys = = null ) { <nl> - System . getProperties ( ) . remove ( " jna . nosys " ) ; <nl> - } else { <nl> - System . setProperty ( " jna . nosys " , origPropJNANoSys ) ; <nl> - } <nl> - } <nl> - <nl> - <nl> - public void testMethodGetFieldOrder ( ) { <nl> - final List < String > ignoreConstructorError = new ArrayList < String > ( ) ; <nl> - <nl> - if ( Platform . isWindows ( ) ) { <nl> - ignoreConstructorError . add ( X11 . class . getName ( ) + " $ " ) ; <nl> - } else { <nl> - ignoreConstructorError . add ( com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 1 . class . getName ( ) ) ; <nl> - ignoreConstructorError . add ( com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 4 . class . getName ( ) ) ; <nl> - ignoreConstructorError . add ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVICE _ INTERFACE _ DATA . class . getName ( ) ) ; <nl> - ignoreConstructorError . add ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVINFO _ DATA . class . getName ( ) ) ; <nl> - } <nl> - <nl> - ignoreConstructorError . add ( DBT . DEV _ BROADCAST _ HANDLE . class . getName ( ) ) ; / / manually validated by wolftobias <nl> - ignoreConstructorError . add ( DBT . DEV _ BROADCAST _ PORT . class . getName ( ) ) ; / / manually validated by wolftobias <nl> - <nl> - StructureFieldOrderInspector . batchCheckStructureGetFieldOrder ( FileUtils . class , ignoreConstructorError ) ; <nl> - } <nl> - <nl> - / / test below is helpful when investigating failure cause of a specific Structure class , it shows full causes and traces . <nl> - / * <nl> - public void testMethodGetFieldOrderSingleClass ( ) { <nl> - final List < String > ignoreConstructorError = new ArrayList < String > ( ) ; <nl> - <nl> - if ( Platform . isWindows ( ) ) { <nl> - ignoreConstructorError . add ( X11 . class . getName ( ) + " $ " ) ; <nl> - } <nl> - <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVICE _ INTERFACE _ DATA . class , ignoreConstructorError ) ; <nl> - } <nl> - / / * / <nl> - <nl> - <nl> - } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java b / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> index 9b36717 . . 7981573 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna . platform . unix ; <nl> <nl> + import com . sun . jna . StructureFieldOrderInspector ; <nl> import java . awt . GraphicsEnvironment ; <nl> <nl> import com . sun . jna . ptr . PointerByReference ; <nl> @ @ - 104 , 6 + 105 , 10 @ @ public class X11Test extends TestCase { <nl> Assert . assertArrayEquals ( " Sent protocols were not equal to returned procols for XGetWMProtocols " , sentAtoms , receivedAtoms ) ; <nl> } <nl> <nl> + public void testStructureFieldOrder ( ) { <nl> + StructureFieldOrderInspector . batchCheckStructureGetFieldOrder ( X11 . class , null , true ) ; <nl> + } <nl> + <nl> public static void main ( java . lang . String [ ] argList ) { <nl> junit . textui . TestRunner . run ( X11Test . class ) ; <nl> } <nl> diff - - git a / test / com / sun / jna / StructureFieldOrderInspector . java b / test / com / sun / jna / StructureFieldOrderInspector . java <nl> index 4c4566f . . 463ac7c 100644 <nl> - - - a / test / com / sun / jna / StructureFieldOrderInspector . java <nl> + + + b / test / com / sun / jna / StructureFieldOrderInspector . java <nl> @ @ - 30 , 6 + 30 , 8 @ @ import org . reflections . util . ConfigurationBuilder ; <nl> <nl> import java . lang . reflect . * ; <nl> import java . util . ArrayList ; <nl> + import java . util . HashSet ; <nl> + import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Set ; <nl> <nl> @ @ - 56 , 7 + 58 , 21 @ @ public final class StructureFieldOrderInspector { <nl> * / <nl> public static void batchCheckStructureGetFieldOrder ( final Class < ? > classDeclaredInSourceTreeToSearch , <nl> final List < String > ignoreConstructorError ) { <nl> - final Set < Class < ? extends Structure > > classes = StructureFieldOrderInspector . findSubTypesOfStructure ( classDeclaredInSourceTreeToSearch ) ; <nl> + batchCheckStructureGetFieldOrder ( classDeclaredInSourceTreeToSearch , ignoreConstructorError , false ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Search for Structure sub types in the source tree of the given class , and validate the getFieldOrder ( ) method , <nl> + * and collects all errors into one exception . <nl> + * <nl> + * @ param classDeclaredInSourceTreeToSearch a class who ' s source tree will be searched for Structure sub types . <nl> + * @ param ignoreConstructorError list of classname prefixes for which to ignore construction errors . <nl> + * @ param onlyInnerClasses limit scan to inner classes of the supplied class <nl> + * / <nl> + public static void batchCheckStructureGetFieldOrder ( final Class < ? > classDeclaredInSourceTreeToSearch , <nl> + final List < String > ignoreConstructorError , <nl> + final boolean onlyInnerClasses ) { <nl> + final Set < Class < ? extends Structure > > classes = StructureFieldOrderInspector . findSubTypesOfStructure ( classDeclaredInSourceTreeToSearch , onlyInnerClasses ) ; <nl> <nl> final List < Throwable > problems = new ArrayList < Throwable > ( ) ; <nl> <nl> @ @ - 96 , 7 + 112 , 7 @ @ public final class StructureFieldOrderInspector { <nl> / * * <nl> * Find all classes that extend { @ link Structure } . <nl> * / <nl> - public static Set < Class < ? extends Structure > > findSubTypesOfStructure ( final Class < ? > classDeclaredInSourceTreeToSearch ) { <nl> + public static Set < Class < ? extends Structure > > findSubTypesOfStructure ( final Class < ? > classDeclaredInSourceTreeToSearch , boolean onlyInnerClasses ) { <nl> <nl> / / use : http : / / code . google . com / p / reflections / <nl> <nl> @ @ - 105 , 9 + 121 , 24 @ @ public final class StructureFieldOrderInspector { <nl> . setUrls ( ClasspathHelper . forClass ( classDeclaredInSourceTreeToSearch ) ) <nl> ) ; <nl> <nl> - return reflections . getSubTypesOf ( Structure . class ) ; <nl> + Set < Class < ? extends Structure > > types = new HashSet < Class < ? extends Structure > > ( reflections . getSubTypesOf ( Structure . class ) ) ; <nl> + if ( onlyInnerClasses ) { <nl> + Iterator < Class < ? extends Structure > > it = types . iterator ( ) ; <nl> + while ( it . hasNext ( ) ) { <nl> + if ( ! ( it . next ( ) . getEnclosingClass ( ) = = classDeclaredInSourceTreeToSearch ) ) { <nl> + it . remove ( ) ; <nl> + } <nl> + } <nl> + } <nl> + return types ; <nl> } <nl> <nl> + / * * <nl> + * Find all classes that extend { @ link Structure } . <nl> + * / <nl> + public static Set < Class < ? extends Structure > > findSubTypesOfStructure ( final Class < ? > classDeclaredInSourceTreeToSearch ) { <nl> + return findSubTypesOfStructure ( classDeclaredInSourceTreeToSearch , false ) ; <nl> + } <nl> <nl> public static void checkMethodGetFieldOrder ( final Class < ? extends Structure > structureSubType , <nl> final List < String > ignoreConstructorError ) { <nl> @ @ - 119 , 9 + 150 , 6 @ @ public final class StructureFieldOrderInspector { <nl> return ; <nl> } <nl> <nl> - final Method methodGetFieldOrder = getMethodGetFieldOrder ( structureSubType ) ; <nl> - <nl> - <nl> if ( Modifier . isAbstract ( structureSubType . getModifiers ( ) ) ) { <nl> / / do not try to construct abstract Structure sub types <nl> return ; <nl> @ @ - 161 , 58 + 189 , 27 @ @ public final class StructureFieldOrderInspector { <nl> throw new RuntimeException ( " Could not instantiate Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> } <nl> <nl> - if ( ! methodGetFieldOrder . isAccessible ( ) ) { <nl> - methodGetFieldOrder . setAccessible ( true ) ; <nl> - } <nl> - final List < ? > methodCallFieldList ; <nl> - try { <nl> - methodCallFieldList = ( List < ? > ) methodGetFieldOrder . invoke ( structure ) ; <nl> - } catch ( IllegalAccessException e ) { <nl> - throw new RuntimeException ( " Could not invoke getFieldOrder ( ) on Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> - } catch ( InvocationTargetException e ) { <nl> - throw new RuntimeException ( " Could not invoke getFieldOrder ( ) on Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> - } <nl> + final List < String > methodCallFieldOrder = structure . getFieldOrder ( ) ; <nl> <nl> - final Field [ ] actualFields = structureSubType . getFields ( ) ; / / include fields from super classes <nl> - final List < String > actualFieldNames = new ArrayList < String > ( actualFields . length ) ; <nl> + final List < Field > actualFields = structure . getFieldList ( ) ; <nl> + final List < String > actualFieldNames = new ArrayList < String > ( actualFields . size ( ) ) ; <nl> for ( final Field field : actualFields ) { <nl> / / ignore static fields <nl> if ( ! Modifier . isStatic ( field . getModifiers ( ) ) ) { <nl> final String actualFieldName = field . getName ( ) ; <nl> - if ( ! methodCallFieldList . contains ( actualFieldName ) ) { <nl> - throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldList <nl> + if ( ! methodCallFieldOrder . contains ( actualFieldName ) ) { <nl> + throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldOrder <nl> + " ] does not include declared field : " + actualFieldName ) ; <nl> } <nl> actualFieldNames . add ( actualFieldName ) ; <nl> } <nl> } <nl> <nl> - for ( final Object methodCallField : methodCallFieldList ) { <nl> + for ( final String methodCallField : methodCallFieldOrder ) { <nl> if ( ! actualFieldNames . contains ( methodCallField ) ) { <nl> - throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldList <nl> + throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldOrder <nl> + " ] includes undeclared field : " + methodCallField ) ; <nl> } <nl> } <nl> } <nl> - <nl> - / * * <nl> - * Find the getFieldOrder ( ) method in the given class , or any of it ' s parents . <nl> - * @ param structureSubType a structure sub type <nl> - * @ return the getFieldOrder ( ) method found in the given class , or any of it ' s parents . <nl> - * / <nl> - private static Method getMethodGetFieldOrder ( Class < ? extends Structure > structureSubType ) { <nl> - final Method methodGetFieldOrder ; <nl> - try { <nl> - methodGetFieldOrder = structureSubType . getDeclaredMethod ( " getFieldOrder " , new Class [ ] { } ) ; <nl> - } catch ( NoSuchMethodException e ) { <nl> - if ( structureSubType . getSuperclass ( ) ! = null ) { <nl> - / / look for method in parent <nl> - return getMethodGetFieldOrder ( ( Class < ? extends Structure > ) structureSubType . getSuperclass ( ) ) ; <nl> - } <nl> - throw new IllegalArgumentException ( " The Structure sub type : " + structureSubType . getName ( ) <nl> - + " must define the method : getFieldOrder ( ) . " <nl> - + " See the javadoc for Structure . getFieldOrder ( ) for details . " , e ) ; <nl> - } <nl> - return methodGetFieldOrder ; <nl> - } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index c481730 . . fb14f67 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 14 , 6 + 14 , 7 @ @ Bug Fixes <nl> - - - - - - - - - <nl> * [ # 1036 ] ( https : / / github . com / java - native - access / jna / issues / 1036 ) : ` Advapi32Util . registryValueExists ` called on non existing key raises exception instead of returning ` false ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 384 ] ( https : / / github . com / java - native - access / jna / issues / 384 ) : Android only supports loading libraries through the JVM ` System # loadLibrary ` mechanism , defaulting ` jna . nosys ` to ` true ` disabled that code path - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 1041 ] ( https : / / github . com / java - native - access / jna / pull / 1041 ) : Avoid IllegalArgumentException when reading xattrs with zero length - [ @ jrobhoward ] ( https : / / github . com / jrobhoward ) . <nl> <nl> Release 5 . 1 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / linux / XAttrUtil . java b / contrib / platform / src / com / sun / jna / platform / linux / XAttrUtil . java <nl> index b9f7f75 . . 3176a49 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / linux / XAttrUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / linux / XAttrUtil . java <nl> @ @ - 255 , 6 + 255 , 10 @ @ public abstract class XAttrUtil { <nl> throw new IOException ( " errno : " + eno ) ; <nl> } <nl> <nl> + if ( retval . longValue ( ) = = 0 ) { <nl> + return null ; <nl> + } <nl> + <nl> valueMem = new Memory ( retval . longValue ( ) ) ; <nl> retval = XAttr . INSTANCE . getxattr ( path , name , valueMem , new size _ t ( valueMem . size ( ) ) ) ; <nl> if ( retval . longValue ( ) < 0 ) { <nl> @ @ - 352 , 6 + 356 , 10 @ @ public abstract class XAttrUtil { <nl> throw new IOException ( " errno : " + eno ) ; <nl> } <nl> <nl> + if ( retval . longValue ( ) = = 0 ) { <nl> + return null ; <nl> + } <nl> + <nl> valueMem = new Memory ( retval . longValue ( ) ) ; <nl> retval = XAttr . INSTANCE . lgetxattr ( path , name , valueMem , new size _ t ( valueMem . size ( ) ) ) ; <nl> if ( retval . longValue ( ) < 0 ) { <nl> @ @ - 445 , 6 + 453 , 10 @ @ public abstract class XAttrUtil { <nl> throw new IOException ( " errno : " + eno ) ; <nl> } <nl> <nl> + if ( retval . longValue ( ) = = 0 ) { <nl> + return null ; <nl> + } <nl> + <nl> valueMem = new Memory ( retval . longValue ( ) ) ; <nl> retval = XAttr . INSTANCE . fgetxattr ( fd , name , valueMem , new size _ t ( valueMem . size ( ) ) ) ; <nl> if ( retval . longValue ( ) < 0 ) { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / mac / XAttrUtil . java b / contrib / platform / src / com / sun / jna / platform / mac / XAttrUtil . java <nl> index e6a0559 . . 150c3d9 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / mac / XAttrUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / mac / XAttrUtil . java <nl> @ @ - 58 , 6 + 58 , 9 @ @ public class XAttrUtil { <nl> 	 	 if ( bufferLength < 0 ) <nl> 	 	 	 return null ; <nl> <nl> + 	 	 if ( bufferLength = = 0 ) <nl> + 	 	 	 return " " ; <nl> + <nl> 	 	 Memory valueBuffer = new Memory ( bufferLength ) ; <nl> 	 	 long valueLength = XAttr . INSTANCE . getxattr ( path , name , valueBuffer , bufferLength , 0 , 0 ) ; <nl> <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / linux / XAttrUtilTest . java b / contrib / platform / test / com / sun / jna / platform / linux / XAttrUtilTest . java <nl> index c4a074b . . bd1f14f 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / linux / XAttrUtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / linux / XAttrUtilTest . java <nl> @ @ - 24 , 6 + 24 , 7 @ @ <nl> * / <nl> package com . sun . jna . platform . linux ; <nl> <nl> + import com . sun . jna . Memory ; <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> import java . util . Collection ; <nl> @ @ - 33 , 12 + 34 , 16 @ @ import org . junit . Test ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertFalse ; <nl> import static org . junit . Assert . assertTrue ; <nl> + import static org . junit . Assert . assertNull ; <nl> + import static org . junit . Assert . assertNotNull ; <nl> <nl> public class XAttrUtilTest { <nl> private static final String TEST _ STRING = " Ž lu ť ou č k ý k ů ň ú p ě l nebo tak n ě co . " ; <nl> private static final String TEST _ STRING _ 2 = " P ř í li š ž lu ť ou č k ý k ů ň ú p ě l ď á belsk é ó dy . " ; <nl> + private static final String TEST _ EMPTY _ STRING = " " ; <nl> private static final String TEST _ ATTRIBUTE = " user . test " ; <nl> private static final String TEST _ ATTRIBUTE _ FOO = TEST _ ATTRIBUTE + " . foo " ; <nl> + private static final String TEST _ ATTRIBUTE _ EMPTY = TEST _ ATTRIBUTE + " . empty " ; <nl> <nl> @ Test <nl> public void setXAttr ( ) throws IOException { <nl> @ @ - 66 , 5 + 71 , 26 @ @ public class XAttrUtilTest { <nl> xattrs = XAttrUtil . lListXAttr ( file . getAbsolutePath ( ) ) ; <nl> assertFalse ( xattrs . contains ( TEST _ ATTRIBUTE ) ) ; <nl> assertTrue ( xattrs . contains ( TEST _ ATTRIBUTE _ FOO ) ) ; <nl> + <nl> + file . delete ( ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testGetXAttr ( ) throws IOException { <nl> + File file = File . createTempFile ( " xattr " , " test " ) ; <nl> + file . deleteOnExit ( ) ; <nl> + <nl> + XAttrUtil . setXAttr ( file . getAbsolutePath ( ) , TEST _ ATTRIBUTE _ EMPTY , TEST _ EMPTY _ STRING ) ; <nl> + <nl> + Memory memoryReadMissing = XAttrUtil . getXAttrAsMemory ( file . getAbsolutePath ( ) , TEST _ ATTRIBUTE _ EMPTY ) ; <nl> + byte [ ] byteReadMissing = XAttrUtil . getXAttrBytes ( file . getAbsolutePath ( ) , TEST _ ATTRIBUTE _ EMPTY ) ; <nl> + String stringReadMissing = XAttrUtil . getXAttr ( file . getAbsolutePath ( ) , TEST _ ATTRIBUTE _ EMPTY ) ; <nl> + assertNull ( memoryReadMissing ) ; <nl> + assertNotNull ( byteReadMissing ) ; <nl> + assertEquals ( 0 , byteReadMissing . length ) ; <nl> + assertNotNull ( stringReadMissing ) ; <nl> + assertTrue ( stringReadMissing . isEmpty ( ) ) ; <nl> + <nl> + file . delete ( ) ; <nl> } <nl> } <nl> \ No newline at end of file <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / mac / XAttrUtilTest . java b / contrib / platform / test / com / sun / jna / platform / mac / XAttrUtilTest . java <nl> index 6abd401 . . 53abd3f 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / mac / XAttrUtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / mac / XAttrUtilTest . java <nl> @ @ - 12 , 6 + 12 , 8 @ @ <nl> * / <nl> package com . sun . jna . platform . mac ; <nl> <nl> + import com . sun . jna . Memory ; <nl> + import com . sun . jna . Pointer ; <nl> import java . io . File ; <nl> import java . util . Arrays ; <nl> import java . util . List ; <nl> @ @ - 58 , 6 + 60 , 10 @ @ public class XAttrUtilTest extends TestCase { <nl> 	 	 value = XAttrUtil . getXAttr ( testPath , " JNA " ) ; <nl> <nl> 	 	 assertEquals ( Arrays . toString ( " Java Native Access " . getBytes ( ) ) , Arrays . toString ( value . getBytes ( ) ) ) ; <nl> + <nl> + XAttr . INSTANCE . setxattr ( testPath , " JNA . empty " , Pointer . NULL , 0 , 0 , 0 ) ; <nl> + value = XAttrUtil . getXAttr ( testPath , " JNA . empty " ) ; <nl> + assertEquals ( " " , value ) ; <nl> 	 } <nl> <nl> 	 public void testSetXAttr ( ) {
diff - - git a / CHANGES . md b / CHANGES . md <nl> index d54bfbf . . b6eaa10 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 13 , 6 + 13 , 7 @ @ Features <nl> Bug Fixes <nl> - - - - - - - - - <nl> * [ # 1036 ] ( https : / / github . com / java - native - access / jna / issues / 1036 ) : ` Advapi32Util . registryValueExists ` called on non existing key raises exception instead of returning ` false ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 384 ] ( https : / / github . com / java - native - access / jna / issues / 384 ) : Android only supports loading libraries through the JVM ` System # loadLibrary ` mechanism , defaulting ` jna . nosys ` to ` true ` disabled that code path - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 5 . 1 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index b55b5bc . . eae060f 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 974 , 7 + 974 , 7 @ @ public final class Native implements Version { <nl> } <nl> } <nl> String jnaNosys = System . getProperty ( " jna . nosys " , " true " ) ; <nl> - if ( ! Boolean . parseBoolean ( jnaNosys ) ) { <nl> + if ( ( ! Boolean . parseBoolean ( jnaNosys ) ) | | Platform . isAndroid ( ) ) { <nl> try { <nl> LOG . log ( DEBUG _ JNA _ LOAD _ LEVEL , " Trying ( via loadLibrary ) { 0 } " , libName ) ; <nl> System . loadLibrary ( libName ) ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 08e4f90 . . 0d184ae 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 10 , 7 + 10 , 7 @ @ Features <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> - * [ # 1036 ] ( https : / / github . com / java - native - access / jna / issues / 1036 ) : ` Advapi32Util . registryValueExists ` called on non existig key raises exception instead of returning ` false ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 1036 ] ( https : / / github . com / java - native - access / jna / issues / 1036 ) : ` Advapi32Util . registryValueExists ` called on non existing key raises exception instead of returning ` false ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 5 . 1 . 0 <nl> = = = = = = = = = = = = =
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> index 8f28651 . . e016fb8 100755 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> @ @ - 468 , 8 + 468 , 8 @ @ public class Advapi32Test extends TestCase { <nl> 	 	 try { <nl> 	 	 	 HANDLEByReference phUser = new HANDLEByReference ( ) ; <nl> 	 	 	 try { <nl> - 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , <nl> - 	 	 	 	 	 	 null , userInfo . usri1 _ password . toString ( ) , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> + 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name , <nl> + 	 	 	 	 	 	 null , userInfo . usri1 _ password , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> 	 	 	 	 	 	 WinBase . LOGON32 _ PROVIDER _ DEFAULT , phUser ) ) ; <nl> 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . ImpersonateLoggedOnUser ( phUser . getValue ( ) ) ) ; <nl> 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . RevertToSelf ( ) ) ; <nl> @ @ - 481 , 7 + 481 , 7 @ @ public class Advapi32Test extends TestCase { <nl> 	 	 	 } <nl> 	 	 } finally { <nl> 	 	 assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( <nl> - 	 	 	 	 null , userInfo . usri1 _ name . toString ( ) ) ) ; <nl> + 	 	 	 	 null , userInfo . usri1 _ name ) ) ; <nl> 	 	 } <nl> } <nl> <nl> @ @ - 777 , 19 + 777 , 17 @ @ public class Advapi32Test extends TestCase { <nl> SECURITY _ DESCRIPTOR sd = new SECURITY _ DESCRIPTOR ( 64 * 1024 ) ; <nl> assertTrue ( Advapi32 . INSTANCE . InitializeSecurityDescriptor ( sd , WinNT . SECURITY _ DESCRIPTOR _ REVISION ) ) ; <nl> <nl> - ACL pAcl ; <nl> - int cbAcl = 0 ; <nl> PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> assertTrue ( " Failed to create well - known SID " , <nl> Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> <nl> int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> - cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; <nl> cbAcl + = ( sidLength - DWORD . SIZE ) ; <nl> cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> - pAcl = new ACL ( cbAcl ) ; <nl> + ACL pAcl = new ACL ( cbAcl ) ; <nl> assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAce ( pAcl , WinNT . ACL _ REVISION , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; <nl> assertTrue ( Advapi32 . INSTANCE . SetSecurityDescriptorDacl ( sd , true , pAcl , false ) ) ; <nl> @ @ - 805 , 36 + 803 , 32 @ @ public class Advapi32Test extends TestCase { <nl> } <nl> <nl> public void testInitializeAcl ( ) throws IOException { <nl> - ACL pAcl ; <nl> - int cbAcl = 0 ; <nl> PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> assertTrue ( " Failed to create well - known SID " , <nl> Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> <nl> int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> - cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; <nl> cbAcl + = ( sidLength - DWORD . SIZE ) ; <nl> cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> - pAcl = new ACL ( cbAcl ) ; <nl> + ACL pAcl = new ACL ( cbAcl ) ; <nl> assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> } <nl> <nl> public void testGetAce ( ) throws IOException { <nl> - ACL pAcl ; <nl> - int cbAcl = 0 ; <nl> PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> assertTrue ( " Failed to create well - known SID " , <nl> Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> <nl> int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> - cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; <nl> cbAcl + = ( sidLength - DWORD . SIZE ) ; <nl> cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> - pAcl = new ACL ( cbAcl ) ; <nl> + ACL pAcl = new ACL ( cbAcl ) ; <nl> assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAce ( pAcl , WinNT . ACL _ REVISION , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; <nl> <nl> @ @ - 846 , 18 + 840 , 16 @ @ public class Advapi32Test extends TestCase { <nl> } <nl> <nl> public void testAddAce ( ) throws IOException { <nl> - ACL pAcl ; <nl> - int cbAcl = 0 ; <nl> PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> assertTrue ( " Failed to create well - known SID " , <nl> Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> <nl> int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> - cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> cbAcl + = Advapi32Util . getAceSize ( sidLength ) ; <nl> cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> - pAcl = new ACL ( cbAcl ) ; <nl> + ACL pAcl = new ACL ( cbAcl ) ; <nl> ACCESS _ ALLOWED _ ACE pace = new ACCESS _ ALLOWED _ ACE ( WinNT . STANDARD _ RIGHTS _ ALL , <nl> WinNT . INHERITED _ ACE , <nl> pSid ) ; <nl> @ @ - 873 , 18 + 865 , 16 @ @ public class Advapi32Test extends TestCase { <nl> } <nl> <nl> public void testAddAccessAllowedAce ( ) throws IOException { <nl> - ACL pAcl ; <nl> - int cbAcl = 0 ; <nl> PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> assertTrue ( " Failed to create well - known SID " , <nl> Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> <nl> int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> - cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> cbAcl + = Advapi32Util . getAceSize ( sidLength ) ; <nl> cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> - pAcl = new ACL ( cbAcl ) ; <nl> + ACL pAcl = new ACL ( cbAcl ) ; <nl> assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAce ( pAcl , WinNT . ACL _ REVISION , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; <nl> <nl> @ @ - 896 , 18 + 886 , 16 @ @ public class Advapi32Test extends TestCase { <nl> } <nl> <nl> public void testAddAccessAllowedAceEx ( ) throws IOException { <nl> - ACL pAcl ; <nl> - int cbAcl = 0 ; <nl> PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> assertTrue ( " Failed to create well - known SID " , <nl> Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> <nl> int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> - cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> cbAcl + = Advapi32Util . getAceSize ( sidLength ) ; <nl> cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> - pAcl = new ACL ( cbAcl ) ; <nl> + ACL pAcl = new ACL ( cbAcl ) ; <nl> assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAceEx ( pAcl , WinNT . ACL _ REVISION , WinNT . INHERIT _ ONLY _ ACE , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; <nl> <nl> @ @ - 1060 , 8 + 1048 , 8 @ @ public class Advapi32Test extends TestCase { <nl> pevlr = pevlr . share ( record . Length . intValue ( ) ) ; <nl> } <nl> 	 } <nl> - assertTrue ( " Unexpected error after reading event log : " <nl> - + new Win32Exception ( rc ) , <nl> + assertTrue ( String . format ( " Unexpected error after reading event log : 0x % 08X ( % s ) " <nl> + , rc , Kernel32Util . formatMessage ( rc ) ) , <nl> rc = = W32Errors . ERROR _ HANDLE _ EOF | | rc = = 0 ) ; <nl> assertTrue ( " Error closing event log " , <nl> Advapi32 . INSTANCE . CloseEventLog ( h ) ) ; <nl> @ @ - 2099 , 7 + 2087 , 7 @ @ public class Advapi32Test extends TestCase { <nl> Advapi32 . INSTANCE . CloseEncryptedFileRaw ( pvContext2 . getValue ( ) ) ; <nl> <nl> file . delete ( ) ; <nl> - new File ( lbFileName2 . toString ( ) ) . delete ( ) ; <nl> + new File ( lbFileName2 ) . delete ( ) ; <nl> } <nl> <nl> private File createTempFile ( ) throws Exception { <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> index f333426 . . 3903a5b 100755 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> @ @ - 160 , 8 + 160 , 8 @ @ public class Advapi32UtilTest extends TestCase { <nl> try { <nl> HANDLEByReference phUser = new HANDLEByReference ( ) ; <nl> try { <nl> - assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , <nl> - null , userInfo . usri1 _ password . toString ( ) , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> + assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name , <nl> + null , userInfo . usri1 _ password , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> WinBase . LOGON32 _ PROVIDER _ DEFAULT , phUser ) ) ; <nl> Account [ ] groups = Advapi32Util . getTokenGroups ( phUser . getValue ( ) ) ; <nl> assertTrue ( groups . length > 0 ) ; <nl> @ @ - 179 , 7 + 179 , 7 @ @ public class Advapi32UtilTest extends TestCase { <nl> } finally { <nl> assertEquals ( " Error in NetUserDel " , <nl> LMErr . NERR _ Success , <nl> - Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name . toString ( ) ) ) ; <nl> + Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 195 , 12 + 195 , 12 @ @ public class Advapi32UtilTest extends TestCase { <nl> try { <nl> HANDLEByReference phUser = new HANDLEByReference ( ) ; <nl> try { <nl> - assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , <nl> - null , userInfo . usri1 _ password . toString ( ) , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> + assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name , <nl> + null , userInfo . usri1 _ password , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> WinBase . LOGON32 _ PROVIDER _ DEFAULT , phUser ) ) ; <nl> Advapi32Util . Account account = Advapi32Util . getTokenAccount ( phUser . getValue ( ) ) ; <nl> assertTrue ( account . name . length ( ) > 0 ) ; <nl> - assertEquals ( userInfo . usri1 _ name . toString ( ) , account . name ) ; <nl> + assertEquals ( userInfo . usri1 _ name , account . name ) ; <nl> } finally { <nl> HANDLE hUser = phUser . getValue ( ) ; <nl> if ( ! WinBase . INVALID _ HANDLE _ VALUE . equals ( hUser ) ) { <nl> @ @ - 208 , 7 + 208 , 7 @ @ public class Advapi32UtilTest extends TestCase { <nl> } <nl> } <nl> } finally { <nl> - assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name . toString ( ) ) ) ; <nl> + assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 585 , 7 + 585 , 7 @ @ public class Advapi32UtilTest extends TestCase { <nl> } <nl> <nl> public void testRegistryGetValues ( ) { <nl> - String uu = new String ( " A " + " \ \ u00ea " + " \ \ u00f1 " + " \ \ u00fc " + " C " ) ; <nl> + String uu = " A \ \ u00ea \ \ u00f1 \ \ u00fcC " ; <nl> Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> Advapi32Util . registrySetIntValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " FourtyTwo " + uu , 42 ) ; <nl> Advapi32Util . registrySetStringValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " 42 " + uu , " FourtyTwo " + uu ) ; <nl> @ @ - 620 , 7 + 620 , 7 @ @ public class Advapi32UtilTest extends TestCase { <nl> public void testRegistryGetValuesSamExtra ( ) { <nl> if ( ! is64bitWindows ( ) ) return ; <nl> <nl> - String uu = new String ( " A " + " \ \ u00ea " + " \ \ u00f1 " + " \ \ u00fc " + " C " ) ; <nl> + String uu = " A \ \ u00ea \ \ u00f1 \ \ u00fcC " ; <nl> Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ Classes \ \ CLSID " , " JNA " , WinNT . KEY _ WOW64 _ 64KEY ) ; <nl> Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ Classes \ \ CLSID " , " JNA " , WinNT . KEY _ WOW64 _ 32KEY ) ; <nl> Advapi32Util . registrySetIntValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ Classes \ \ CLSID \ \ JNA " , " Number " + uu , 64 , WinNT . KEY _ WOW64 _ 64KEY ) ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 81cf8bd . . b5b14b2 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 2 , 6 + 2 , 15 @ @ NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and AL 2 . 0 ( see LICENSE <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> + Release 5 . 1 . 1 ( Next release ) <nl> + = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> + <nl> + Features <nl> + - - - - - - - - <nl> + <nl> + Bug Fixes <nl> + - - - - - - - - - <nl> + <nl> Release 5 . 1 . 0 <nl> = = = = = = = = = = = = = <nl> <nl> diff - - git a / build . xml b / build . xml <nl> index 4fa582f . . 01749c6 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 60 , 7 + 60 , 7 @ @ <nl> < ! - - JNA library release version - android versionCode is derived from mjar / minor / revision - - > <nl> < property name = " jna . major " value = " 5 " / > <nl> < property name = " jna . minor " value = " 1 " / > <nl> - < property name = " jna . revision " value = " 0 " / > <nl> + < property name = " jna . revision " value = " 1 " / > <nl> < property name = " jna . build " value = " 0 " / > < ! - - $ { build . number } - - > <nl> < condition property = " version . suffix " value = " " else = " - SNAPSHOT " > <nl> < or >
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> index a6a6cab . . 7b325d0 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> @ @ - 272 , 8 + 272 , 6 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> * the n type <nl> * @ param pvResult <nl> * the pv result <nl> - * @ param pDisp <nl> - * the disp <nl> * @ param name <nl> * the name <nl> * @ param pArg <nl> @ @ - 301 , 8 + 299 , 6 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> * the n type <nl> * @ param pvResult <nl> * the pv result <nl> - * @ param pDisp <nl> - * the disp <nl> * @ param name <nl> * the name <nl> * @ return the hresult <nl> @ @ - 427 , 7 + 423 , 7 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> } <nl> <nl> / * * <nl> - * @ deprecated Use { @ link # oleMethod ( int , com . sun . jna . platform . win32 . Variant . VARIANT . ByReference , java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT ) <nl> + * @ deprecated Use { @ link # oleMethod ( int , com . sun . jna . platform . win32 . Variant . VARIANT . ByReference , java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT ) } <nl> * / <nl> @ Deprecated <nl> protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> @ @ - 438 , 7 + 434 , 7 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> } <nl> <nl> / * * <nl> - * @ deprecated Use { @ link # oleMethod ( int , com . sun . jna . platform . win32 . Variant . VARIANT . ByReference , com . sun . jna . platform . win32 . OaIdl . DISPID , com . sun . jna . platform . win32 . Variant . VARIANT ) <nl> + * @ deprecated Use { @ link # oleMethod ( int , com . sun . jna . platform . win32 . Variant . VARIANT . ByReference , com . sun . jna . platform . win32 . OaIdl . DISPID , com . sun . jna . platform . win32 . Variant . VARIANT ) } <nl> * / <nl> @ Deprecated <nl> protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> @ @ - 449 , 7 + 445 , 7 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> } <nl> <nl> / * * <nl> - * @ deprecated Use { @ link # oleMethod ( int , com . sun . jna . platform . win32 . Variant . VARIANT . ByReference , java . lang . String ) <nl> + * @ deprecated Use { @ link # oleMethod ( int , com . sun . jna . platform . win32 . Variant . VARIANT . ByReference , java . lang . String ) } <nl> * / <nl> @ Deprecated <nl> protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> @ @ - 473 , 7 + 469 , 7 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> * <nl> * @ param hr <nl> * the hr <nl> - * @ deprecated Use { @ link COMUtils # checkRC ( com . sun . jna . platform . win32 . WinNT . HRESULT ) <nl> + * @ deprecated Use { @ link COMUtils # checkRC ( com . sun . jna . platform . win32 . WinNT . HRESULT ) } <nl> * / <nl> @ Deprecated <nl> protected void checkFailed ( HRESULT hr ) { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java <nl> index 6738691 . . 86e6cab 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java <nl> @ @ - 315 , 7 + 315 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> } <nl> <nl> / * * <nl> - * @ deprecated Use { @ link # invokeNoReply ( java . lang . String ) <nl> + * @ deprecated Use { @ link # invokeNoReply ( java . lang . String ) } <nl> * / <nl> @ Deprecated <nl> protected void invokeNoReply ( String methodName , IDispatch dispatch ) { <nl> @ @ - 323 , 7 + 323 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> } <nl> <nl> / * * <nl> - * @ deprecated Use { @ link # invokeNoReply ( java . lang . String ) <nl> + * @ deprecated Use { @ link # invokeNoReply ( java . lang . String ) } <nl> * / <nl> @ Deprecated <nl> protected void invokeNoReply ( String methodName , COMLateBindingObject comObject ) { <nl> @ @ - 344 , 7 + 344 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> } <nl> <nl> / * * <nl> - * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT ) <nl> + * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT ) } <nl> * / <nl> @ Deprecated <nl> protected void invokeNoReply ( String methodName , IDispatch dispatch , <nl> @ @ - 353 , 7 + 353 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> } <nl> <nl> / * * <nl> - * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT [ ] ) <nl> + * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT [ ] ) } <nl> * / <nl> @ Deprecated <nl> protected void invokeNoReply ( String methodName , IDispatch dispatch , <nl> @ @ - 363 , 7 + 363 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> } <nl> <nl> / * * <nl> - * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT [ ] ) <nl> + * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT [ ] ) } <nl> * / <nl> @ Deprecated <nl> protected void invokeNoReply ( String methodName , COMLateBindingObject comObject , <nl> @ @ - 373 , 7 + 373 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> } <nl> <nl> / * * <nl> - * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT ) <nl> + * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT ) } <nl> * / <nl> protected void invokeNoReply ( String methodName , <nl> COMLateBindingObject comObject , VARIANT arg ) { <nl> @ @ - 383 , 7 + 383 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> <nl> <nl> / * * <nl> - * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT [ ] ) <nl> + * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT [ ] ) } <nl> * / <nl> @ Deprecated <nl> protected void invokeNoReply ( String methodName , IDispatch dispatch , <nl> @ @ - 503 , 7 + 503 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> } <nl> <nl> / * * <nl> - * @ deprecated Use { @ link # setProperty ( java . lang . String , com . sun . jna . platform . win32 . COM . Dispatch ) <nl> + * @ deprecated Use { @ link # setProperty ( java . lang . String , com . sun . jna . platform . win32 . COM . Dispatch ) } <nl> * / <nl> @ Deprecated <nl> protected void setProperty ( String propertyName , IDispatch value ) { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> index d5975ad . . a4447a0 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> @ @ - 285 , 7 + 285 , 7 @ @ public interface Variant { <nl> } <nl> <nl> / * * <nl> - * @ deprecated Use { @ link # VARIANT ( com . sun . jna . platform . win32 . COM . Dispatch ) <nl> + * @ deprecated Use { @ link # VARIANT ( com . sun . jna . platform . win32 . COM . Dispatch ) } <nl> * / <nl> @ Deprecated <nl> public VARIANT ( IDispatch value ) {
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java <nl> index 079361a . . 6738691 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java <nl> @ @ - 498 , 6 + 498 , 14 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * @ param value <nl> * the value <nl> * / <nl> + protected void setProperty ( String propertyName , Dispatch value ) { <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , propertyName , new VARIANT ( value ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ deprecated Use { @ link # setProperty ( java . lang . String , com . sun . jna . platform . win32 . COM . Dispatch ) <nl> + * / <nl> + @ Deprecated <nl> protected void setProperty ( String propertyName , IDispatch value ) { <nl> this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , propertyName , new VARIANT ( value ) ) ; <nl> }
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> index e8dc4fc . . a6a6cab 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> @ @ - 175 , 32 + 175 , 26 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> } <nl> <nl> protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> - IDispatch pDisp , String name , VARIANT [ ] pArgs ) throws COMException { <nl> - <nl> - if ( pDisp = = null ) <nl> - throw new COMException ( " pDisp ( IDispatch ) parameter is null ! " ) ; <nl> + String name , VARIANT [ ] pArgs ) throws COMException { <nl> <nl> / / variable declaration <nl> WString [ ] ptName = new WString [ ] { new WString ( name ) } ; <nl> DISPIDByReference pdispID = new DISPIDByReference ( ) ; <nl> <nl> / / Get DISPID for name passed . . . <nl> - HRESULT hr = pDisp . GetIDsOfNames ( new REFIID ( Guid . IID _ NULL ) , ptName , 1 , <nl> + HRESULT hr = iDispatch . GetIDsOfNames ( new REFIID ( Guid . IID _ NULL ) , ptName , 1 , <nl> LOCALE _ USER _ DEFAULT , pdispID ) ; <nl> <nl> COMUtils . checkRC ( hr ) ; <nl> <nl> return this <nl> - . oleMethod ( nType , pvResult , pDisp , pdispID . getValue ( ) , pArgs ) ; <nl> + . oleMethod ( nType , pvResult , iDispatch , pdispID . getValue ( ) , pArgs ) ; <nl> } <nl> <nl> protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> - IDispatch pDisp , DISPID dispId , VARIANT [ ] pArgs ) <nl> + DISPID dispId , VARIANT [ ] pArgs ) <nl> throws COMException { <nl> <nl> - if ( pDisp = = null ) <nl> - throw new COMException ( " pDisp ( IDispatch ) parameter is null ! " ) ; <nl> - <nl> / / variable declaration <nl> int _ argsLen = 0 ; <nl> VARIANT [ ] _ args = null ; <nl> @ @ - 244 , 12 + 238 , 12 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> / / need to be compatible with VisualBasic which does not distingish methods <nl> / / and property getters and will set both flags always . <nl> / / <nl> - / / The MSDN article advises this behaviour : " [ . . . ] Some languages cannot <nl> - / / distinguish between retrieving a property and calling a method . In this <nl> + / / The MSDN article advises this behaviour : " [ . . . ] Some languages cannot <nl> + / / distinguish between retrieving a property and calling a method . In this <nl> / / case , you should set the flags DISPATCH _ PROPERTYGET and DISPATCH _ METHOD . <nl> / / [ . . . ] " ) ) <nl> / / <nl> - / / This was found when trying to bind InchesToPoints from the _ Application <nl> + / / This was found when trying to bind InchesToPoints from the _ Application <nl> / / dispatch interface of the MS Word 15 type library <nl> / / <nl> / / The signature according the ITypeLib Viewer ( OLE / COM Object Viewer ) : <nl> @ @ - 264 , 7 + 258 , 7 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> } <nl> <nl> / / Make the call ! <nl> - HRESULT hr = pDisp . Invoke ( dispId , new REFIID ( Guid . IID _ NULL ) , LOCALE _ SYSTEM _ DEFAULT , <nl> + HRESULT hr = iDispatch . Invoke ( dispId , new REFIID ( Guid . IID _ NULL ) , LOCALE _ SYSTEM _ DEFAULT , <nl> new WinDef . WORD ( finalNType ) , dp , pvResult , pExcepInfo , puArgErr ) ; <nl> <nl> COMUtils . checkRC ( hr , pExcepInfo , puArgErr ) ; <nl> @ @ - 289 , 17 + 283 , 15 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> * the cOM exception <nl> * / <nl> protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> - IDispatch pDisp , String name , VARIANT pArg ) throws COMException { <nl> + String name , VARIANT pArg ) throws COMException { <nl> <nl> - return this . oleMethod ( nType , pvResult , pDisp , name , <nl> - new VARIANT [ ] { pArg } ) ; <nl> + return this . oleMethod ( nType , pvResult , name , new VARIANT [ ] { pArg } ) ; <nl> } <nl> <nl> protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> - IDispatch pDisp , DISPID dispId , VARIANT pArg ) throws COMException { <nl> + DISPID dispId , VARIANT pArg ) throws COMException { <nl> <nl> - return this . oleMethod ( nType , pvResult , pDisp , dispId , <nl> - new VARIANT [ ] { pArg } ) ; <nl> + return this . oleMethod ( nType , pvResult , dispId , new VARIANT [ ] { pArg } ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 318 , 11 + 310 , 158 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> * the cOM exception <nl> * / <nl> protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> + String name ) throws COMException { <nl> + <nl> + return this . oleMethod ( nType , pvResult , name , ( VARIANT [ ] ) null ) ; <nl> + } <nl> + <nl> + protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> + DISPID dispId ) throws COMException { <nl> + <nl> + return this . oleMethod ( nType , pvResult , dispId , ( VARIANT [ ] ) null ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ deprecated { @ link COMBindingBaseObject # oleMethod ( int , com . sun . jna . platform . win32 . Variant . VARIANT . ByReference , java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT [ ] ) } <nl> + * / <nl> + @ Deprecated <nl> + protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> + IDispatch pDisp , String name , VARIANT [ ] pArgs ) throws COMException { <nl> + <nl> + if ( pDisp = = null ) <nl> + throw new COMException ( " pDisp ( IDispatch ) parameter is null ! " ) ; <nl> + <nl> + / / variable declaration <nl> + WString [ ] ptName = new WString [ ] { new WString ( name ) } ; <nl> + DISPIDByReference pdispID = new DISPIDByReference ( ) ; <nl> + <nl> + / / Get DISPID for name passed . . . <nl> + HRESULT hr = pDisp . GetIDsOfNames ( new REFIID ( Guid . IID _ NULL ) , ptName , 1 , <nl> + LOCALE _ USER _ DEFAULT , pdispID ) ; <nl> + <nl> + COMUtils . checkRC ( hr ) ; <nl> + <nl> + return this <nl> + . oleMethod ( nType , pvResult , pDisp , pdispID . getValue ( ) , pArgs ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ deprecated { @ link COMBindingBaseObject # oleMethod ( int , com . sun . jna . platform . win32 . Variant . VARIANT . ByReference , com . sun . jna . platform . win32 . OaIdl . DISPID , com . sun . jna . platform . win32 . Variant . VARIANT [ ] ) } <nl> + * / <nl> + @ Deprecated <nl> + protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> + IDispatch pDisp , DISPID dispId , VARIANT [ ] pArgs ) <nl> + throws COMException { <nl> + <nl> + if ( pDisp = = null ) <nl> + throw new COMException ( " pDisp ( IDispatch ) parameter is null ! " ) ; <nl> + <nl> + / / variable declaration <nl> + int _ argsLen = 0 ; <nl> + VARIANT [ ] _ args = null ; <nl> + DISPPARAMS . ByReference dp = new DISPPARAMS . ByReference ( ) ; <nl> + EXCEPINFO . ByReference pExcepInfo = new EXCEPINFO . ByReference ( ) ; <nl> + IntByReference puArgErr = new IntByReference ( ) ; <nl> + <nl> + / / make parameter reverse ordering as expected by COM runtime <nl> + if ( ( pArgs ! = null ) & & ( pArgs . length > 0 ) ) { <nl> + _ argsLen = pArgs . length ; <nl> + _ args = new VARIANT [ _ argsLen ] ; <nl> + <nl> + int revCount = _ argsLen ; <nl> + for ( int i = 0 ; i < _ argsLen ; i + + ) { <nl> + _ args [ i ] = pArgs [ - - revCount ] ; <nl> + } <nl> + } <nl> + <nl> + / / Handle special - case for property - puts ! <nl> + if ( nType = = OleAuto . DISPATCH _ PROPERTYPUT ) { <nl> + dp . setRgdispidNamedArgs ( new DISPID [ ] { OaIdl . DISPID _ PROPERTYPUT } ) ; <nl> + } <nl> + <nl> + / / Build DISPPARAMS <nl> + if ( _ argsLen > 0 ) { <nl> + dp . setArgs ( _ args ) ; <nl> + <nl> + / / write ' DISPPARAMS ' structure to memory <nl> + dp . write ( ) ; <nl> + } <nl> + <nl> + / / Apply " fix " according to <nl> + / / https : / / www . delphitools . info / 2013 / 04 / 30 / gaining - visual - basic - ole - super - powers / <nl> + / / https : / / msdn . microsoft . com / en - us / library / windows / desktop / ms221486 ( v = vs . 85 ) . aspx <nl> + / / <nl> + / / Summary : there are methods in the word typelibrary that require both <nl> + / / PROPERTYGET _ and _ METHOD to be set . With only one of these set the call <nl> + / / fails . <nl> + / / <nl> + / / The article from delphitools argues , that automation compatible libraries <nl> + / / need to be compatible with VisualBasic which does not distingish methods <nl> + / / and property getters and will set both flags always . <nl> + / / <nl> + / / The MSDN article advises this behaviour : " [ . . . ] Some languages cannot <nl> + / / distinguish between retrieving a property and calling a method . In this <nl> + / / case , you should set the flags DISPATCH _ PROPERTYGET and DISPATCH _ METHOD . <nl> + / / [ . . . ] " ) ) <nl> + / / <nl> + / / This was found when trying to bind InchesToPoints from the _ Application <nl> + / / dispatch interface of the MS Word 15 type library <nl> + / / <nl> + / / The signature according the ITypeLib Viewer ( OLE / COM Object Viewer ) : <nl> + / / [ id ( 0x00000172 ) , helpcontext ( 0x09700172 ) ] <nl> + / / single InchesToPoints ( [ in ] single Inches ) ; <nl> + <nl> + final int finalNType ; <nl> + if ( nType = = OleAuto . DISPATCH _ METHOD | | nType = = OleAuto . DISPATCH _ PROPERTYGET ) { <nl> + finalNType = OleAuto . DISPATCH _ METHOD | OleAuto . DISPATCH _ PROPERTYGET ; <nl> + } else { <nl> + finalNType = nType ; <nl> + } <nl> + <nl> + / / Make the call ! <nl> + HRESULT hr = pDisp . Invoke ( dispId , new REFIID ( Guid . IID _ NULL ) , LOCALE _ SYSTEM _ DEFAULT , <nl> + new WinDef . WORD ( finalNType ) , dp , pvResult , pExcepInfo , puArgErr ) ; <nl> + <nl> + COMUtils . checkRC ( hr , pExcepInfo , puArgErr ) ; <nl> + return hr ; <nl> + } <nl> + <nl> + / * * <nl> + * @ deprecated Use { @ link # oleMethod ( int , com . sun . jna . platform . win32 . Variant . VARIANT . ByReference , java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT ) <nl> + * / <nl> + @ Deprecated <nl> + protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> + IDispatch pDisp , String name , VARIANT pArg ) throws COMException { <nl> + <nl> + return this . oleMethod ( nType , pvResult , pDisp , name , <nl> + new VARIANT [ ] { pArg } ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ deprecated Use { @ link # oleMethod ( int , com . sun . jna . platform . win32 . Variant . VARIANT . ByReference , com . sun . jna . platform . win32 . OaIdl . DISPID , com . sun . jna . platform . win32 . Variant . VARIANT ) <nl> + * / <nl> + @ Deprecated <nl> + protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> + IDispatch pDisp , DISPID dispId , VARIANT pArg ) throws COMException { <nl> + <nl> + return this . oleMethod ( nType , pvResult , pDisp , dispId , <nl> + new VARIANT [ ] { pArg } ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ deprecated Use { @ link # oleMethod ( int , com . sun . jna . platform . win32 . Variant . VARIANT . ByReference , java . lang . String ) <nl> + * / <nl> + @ Deprecated <nl> + protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> IDispatch pDisp , String name ) throws COMException { <nl> <nl> return this . oleMethod ( nType , pvResult , pDisp , name , ( VARIANT [ ] ) null ) ; <nl> } <nl> <nl> + / * * <nl> + * @ deprecated Use { @ link # oleMethod ( int , com . sun . jna . platform . win32 . Variant . VARIANT . ByReference , com . sun . jna . platform . win32 . OaIdl . DISPID ) } <nl> + * / <nl> + @ Deprecated <nl> protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , <nl> IDispatch pDisp , DISPID dispId ) throws COMException { <nl> <nl> @ @ - 334 , 7 + 473 , 9 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> * <nl> * @ param hr <nl> * the hr <nl> + * @ deprecated Use { @ link COMUtils # checkRC ( com . sun . jna . platform . win32 . WinNT . HRESULT ) <nl> * / <nl> + @ Deprecated <nl> protected void checkFailed ( HRESULT hr ) { <nl> COMUtils . checkRC ( hr ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> index 3e5f64d . . ee94a94 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> @ @ - 56 , 15 + 56 , 13 @ @ public class COMEarlyBindingObject extends COMBindingBaseObject implements <nl> <nl> protected String getStringProperty ( DISPID dispId ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , <nl> - this . getIDispatch ( ) , dispId ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , dispId ) ; <nl> <nl> return result . getValue ( ) . toString ( ) ; <nl> } <nl> <nl> protected void setProperty ( DISPID dispId , boolean value ) { <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , this . getIDispatch ( ) , <nl> - dispId , new VARIANT ( value ) ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , dispId , new VARIANT ( value ) ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java <nl> index 5d15e44 . . 079361a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java <nl> @ @ - 83 , 8 + 83 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * / <nl> protected IDispatch getAutomationProperty ( String propertyName ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , <nl> - this . getIDispatch ( ) , propertyName ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , propertyName ) ; <nl> <nl> return ( ( IDispatch ) result . getValue ( ) ) ; <nl> } <nl> @ @ - 101 , 8 + 100 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> protected IDispatch getAutomationProperty ( String propertyName , <nl> COMLateBindingObject comObject ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , <nl> - comObject . getIDispatch ( ) , propertyName ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , propertyName ) ; <nl> <nl> return ( ( IDispatch ) result . getValue ( ) ) ; <nl> } <nl> @ @ - 121 , 8 + 119 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> protected IDispatch getAutomationProperty ( String propertyName , <nl> COMLateBindingObject comObject , VARIANT value ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , <nl> - comObject . getIDispatch ( ) , propertyName , value ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , propertyName , value ) ; <nl> <nl> return ( ( IDispatch ) result . getValue ( ) ) ; <nl> } <nl> @ @ - 139 , 8 + 136 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> protected IDispatch getAutomationProperty ( String propertyName , <nl> IDispatch iDispatch ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , <nl> - iDispatch , propertyName ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , propertyName ) ; <nl> <nl> return ( ( IDispatch ) result . getValue ( ) ) ; <nl> } <nl> @ @ - 154 , 8 + 150 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * / <nl> protected boolean getBooleanProperty ( String propertyName ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , <nl> - this . getIDispatch ( ) , propertyName ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , propertyName ) ; <nl> <nl> return result . booleanValue ( ) ; <nl> } <nl> @ @ - 169 , 8 + 164 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * / <nl> protected Date getDateProperty ( String propertyName ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , <nl> - this . getIDispatch ( ) , propertyName ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , propertyName ) ; <nl> <nl> return result . dateValue ( ) ; <nl> } <nl> @ @ - 184 , 8 + 178 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * / <nl> protected int getIntProperty ( String propertyName ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , <nl> - this . getIDispatch ( ) , propertyName ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , propertyName ) ; <nl> <nl> return result . intValue ( ) ; <nl> } <nl> @ @ - 199 , 8 + 192 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * / <nl> protected short getShortProperty ( String propertyName ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , <nl> - this . getIDispatch ( ) , propertyName ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , propertyName ) ; <nl> <nl> return result . shortValue ( ) ; <nl> } <nl> @ @ - 214 , 13 + 206 , 12 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * / <nl> protected String getStringProperty ( String propertyName ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , <nl> - this . getIDispatch ( ) , propertyName ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , propertyName ) ; <nl> <nl> String res = result . stringValue ( ) ; <nl> - <nl> + <nl> OleAuto . INSTANCE . VariantClear ( result ) ; <nl> - <nl> + <nl> return res ; <nl> } <nl> <nl> @ @ - 233 , 8 + 224 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * / <nl> protected VARIANT invoke ( String methodName ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ METHOD , result , this . getIDispatch ( ) , <nl> - methodName ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ METHOD , result , methodName ) ; <nl> <nl> return result ; <nl> } <nl> @ @ - 250 , 8 + 240 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * / <nl> protected VARIANT invoke ( String methodName , VARIANT arg ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ METHOD , result , this . getIDispatch ( ) , <nl> - methodName , arg ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ METHOD , result , methodName , arg ) ; <nl> <nl> return result ; <nl> } <nl> @ @ - 267 , 8 + 256 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * / <nl> protected VARIANT invoke ( String methodName , VARIANT [ ] args ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ METHOD , result , this . getIDispatch ( ) , <nl> - methodName , args ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ METHOD , result , methodName , args ) ; <nl> <nl> return result ; <nl> } <nl> @ @ - 327 , 27 + 315 , 18 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> } <nl> <nl> / * * <nl> - * Invoke no reply . <nl> - * <nl> - * @ param methodName <nl> - * the method name <nl> - * @ param dispatch <nl> - * the dispatch <nl> + * @ deprecated Use { @ link # invokeNoReply ( java . lang . String ) <nl> * / <nl> + @ Deprecated <nl> protected void invokeNoReply ( String methodName , IDispatch dispatch ) { <nl> this . oleMethod ( OleAuto . DISPATCH _ METHOD , null , dispatch , methodName ) ; <nl> } <nl> <nl> / * * <nl> - * Invoke no reply . <nl> - * <nl> - * @ param methodName <nl> - * the method name <nl> - * @ param comObject <nl> - * the com object <nl> + * @ deprecated Use { @ link # invokeNoReply ( java . lang . String ) <nl> * / <nl> - protected void invokeNoReply ( String methodName , <nl> - COMLateBindingObject comObject ) { <nl> + @ Deprecated <nl> + protected void invokeNoReply ( String methodName , COMLateBindingObject comObject ) { <nl> this . oleMethod ( OleAuto . DISPATCH _ METHOD , null , comObject . getIDispatch ( ) , <nl> methodName ) ; <nl> } <nl> @ @ - 357 , 34 + 336 , 36 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * <nl> * @ param methodName <nl> * the method name <nl> - * @ param dispatch <nl> - * the dispatch <nl> * @ param arg <nl> * the arg <nl> * / <nl> + protected void invokeNoReply ( String methodName , VARIANT arg ) { <nl> + this . oleMethod ( OleAuto . DISPATCH _ METHOD , null , methodName , arg ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT ) <nl> + * / <nl> + @ Deprecated <nl> protected void invokeNoReply ( String methodName , IDispatch dispatch , <nl> VARIANT arg ) { <nl> this . oleMethod ( OleAuto . DISPATCH _ METHOD , null , dispatch , methodName , arg ) ; <nl> } <nl> <nl> / * * <nl> - * Invoke no reply . <nl> - * <nl> - * @ param methodName <nl> - * the method name <nl> - * @ param dispatch <nl> - * the dispatch <nl> - * @ param arg1 <nl> - * the arg1 <nl> - * @ param arg2 <nl> - * the arg2 <nl> + * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT [ ] ) <nl> * / <nl> + @ Deprecated <nl> protected void invokeNoReply ( String methodName , IDispatch dispatch , <nl> VARIANT arg1 , VARIANT arg2 ) { <nl> this . oleMethod ( OleAuto . DISPATCH _ METHOD , null , dispatch , methodName , <nl> new VARIANT [ ] { arg1 , arg2 } ) ; <nl> } <nl> <nl> + / * * <nl> + * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT [ ] ) <nl> + * / <nl> + @ Deprecated <nl> protected void invokeNoReply ( String methodName , COMLateBindingObject comObject , <nl> VARIANT arg1 , VARIANT arg2 ) { <nl> this . oleMethod ( OleAuto . DISPATCH _ METHOD , null , comObject . getIDispatch ( ) , methodName , <nl> @ @ - 392 , 14 + 373 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> } <nl> <nl> / * * <nl> - * Invoke no reply . <nl> - * <nl> - * @ param methodName <nl> - * the method name <nl> - * @ param comObject <nl> - * the com object <nl> - * @ param arg <nl> - * the arg <nl> + * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT ) <nl> * / <nl> protected void invokeNoReply ( String methodName , <nl> COMLateBindingObject comObject , VARIANT arg ) { <nl> @ @ - 407 , 16 + 381 , 11 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> methodName , arg ) ; <nl> } <nl> <nl> + <nl> / * * <nl> - * Invoke no reply . <nl> - * <nl> - * @ param methodName <nl> - * the method name <nl> - * @ param dispatch <nl> - * the dispatch <nl> - * @ param args <nl> - * the args <nl> + * @ deprecated Use { @ link # invokeNoReply ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT [ ] ) <nl> * / <nl> + @ Deprecated <nl> protected void invokeNoReply ( String methodName , IDispatch dispatch , <nl> VARIANT [ ] args ) { <nl> this . oleMethod ( OleAuto . DISPATCH _ METHOD , null , dispatch , methodName , <nl> @ @ - 431 , 22 + 400 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * / <nl> protected void invokeNoReply ( String methodName ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ METHOD , result , this . getIDispatch ( ) , <nl> - methodName ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Invoke no reply . <nl> - * <nl> - * @ param methodName <nl> - * the method name <nl> - * @ param arg <nl> - * the arg <nl> - * / <nl> - protected void invokeNoReply ( String methodName , VARIANT arg ) { <nl> - VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ METHOD , result , this . getIDispatch ( ) , <nl> - methodName , arg ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ METHOD , result , methodName ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 459 , 8 + 413 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * / <nl> protected void invokeNoReply ( String methodName , VARIANT [ ] args ) { <nl> VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ METHOD , result , this . getIDispatch ( ) , <nl> - methodName , args ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ METHOD , result , methodName , args ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 522 , 8 + 475 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * the value <nl> * / <nl> protected void setProperty ( String propertyName , boolean value ) { <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , this . getIDispatch ( ) , <nl> - propertyName , new VARIANT ( value ) ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , propertyName , new VARIANT ( value ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 535 , 8 + 487 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * the value <nl> * / <nl> protected void setProperty ( String propertyName , Date value ) { <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , this . getIDispatch ( ) , <nl> - propertyName , new VARIANT ( value ) ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , propertyName , new VARIANT ( value ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 548 , 8 + 499 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * the value <nl> * / <nl> protected void setProperty ( String propertyName , IDispatch value ) { <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , this . getIDispatch ( ) , <nl> - propertyName , new VARIANT ( value ) ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , propertyName , new VARIANT ( value ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 561 , 8 + 511 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * the value <nl> * / <nl> protected void setProperty ( String propertyName , int value ) { <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , this . getIDispatch ( ) , <nl> - propertyName , new VARIANT ( value ) ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , propertyName , new VARIANT ( value ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 574 , 8 + 523 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * the value <nl> * / <nl> protected void setProperty ( String propertyName , short value ) { <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , this . getIDispatch ( ) , <nl> - propertyName , new VARIANT ( value ) ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , propertyName , new VARIANT ( value ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 587 , 8 + 535 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * the value <nl> * / <nl> protected void setProperty ( String propertyName , String value ) { <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , this . getIDispatch ( ) , <nl> - propertyName , new VARIANT ( value ) ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , propertyName , new VARIANT ( value ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 596 , 11 + 543 , 17 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> * <nl> * @ param propertyName <nl> * the property name <nl> - * @ param iDispatch <nl> - * the i dispatch <nl> * @ param value <nl> * the value <nl> * / <nl> + protected void setProperty ( String propertyName , VARIANT value ) { <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , propertyName , value ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ deprecated Use { @ link # setProperty ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT ) } <nl> + * / <nl> + @ Deprecated <nl> protected void setProperty ( String propertyName , IDispatch iDispatch , <nl> VARIANT value ) { <nl> this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , iDispatch , <nl> @ @ - 608 , 15 + 561 , 9 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> } <nl> <nl> / * * <nl> - * Sets the property . <nl> - * <nl> - * @ param propertyName <nl> - * the property name <nl> - * @ param comObject <nl> - * the com object <nl> - * @ param value <nl> - * the value <nl> + * @ deprecated Use { @ link # setProperty ( java . lang . String , com . sun . jna . platform . win32 . Variant . VARIANT ) } <nl> * / <nl> + @ Deprecated <nl> protected void setProperty ( String propertyName , <nl> COMLateBindingObject comObject , VARIANT value ) { <nl> this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null ,
diff - - git a / contrib / platform / src / com / sun / jna / platform / linux / XAttr . java b / contrib / platform / src / com / sun / jna / platform / linux / XAttr . java <nl> index 8d36dae . . 27337c5 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / linux / XAttr . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / linux / XAttr . java <nl> @ @ - 69 , 16 + 69 , 25 @ @ public interface XAttr extends Library { <nl> int EDQUOT = 122 ; <nl> <nl> int setxattr ( String path , String name , Pointer value , size _ t size , int flags ) ; <nl> + int setxattr ( String path , String name , byte [ ] value , size _ t size , int flags ) ; <nl> int lsetxattr ( String path , String name , Pointer value , size _ t size , int flags ) ; <nl> + int lsetxattr ( String path , String name , byte [ ] value , size _ t size , int flags ) ; <nl> int fsetxattr ( int fd , String name , Pointer value , size _ t size , int flags ) ; <nl> + int fsetxattr ( int fd , String name , byte [ ] value , size _ t size , int flags ) ; <nl> <nl> ssize _ t getxattr ( String path , String name , Pointer value , size _ t size ) ; <nl> + ssize _ t getxattr ( String path , String name , byte [ ] value , size _ t size ) ; <nl> ssize _ t lgetxattr ( String path , String name , Pointer value , size _ t size ) ; <nl> + ssize _ t lgetxattr ( String path , String name , byte [ ] value , size _ t size ) ; <nl> ssize _ t fgetxattr ( int fd , String name , Pointer value , size _ t size ) ; <nl> + ssize _ t fgetxattr ( int fd , String name , byte [ ] value , size _ t size ) ; <nl> <nl> ssize _ t listxattr ( String path , Pointer list , size _ t size ) ; <nl> + ssize _ t listxattr ( String path , byte [ ] list , size _ t size ) ; <nl> ssize _ t llistxattr ( String path , Pointer list , size _ t size ) ; <nl> + ssize _ t llistxattr ( String path , byte [ ] list , size _ t size ) ; <nl> ssize _ t flistxattr ( int fd , Pointer list , size _ t size ) ; <nl> + ssize _ t flistxattr ( int fd , byte [ ] list , size _ t size ) ; <nl> <nl> int removexattr ( String path , String name ) ; <nl> int lremovexattr ( String path , String name ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / linux / XAttrUtil . java b / contrib / platform / src / com / sun / jna / platform / linux / XAttrUtil . java <nl> index b5154ad . . b9f7f75 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / linux / XAttrUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / linux / XAttrUtil . java <nl> @ @ - 79 , 8 + 79 , 7 @ @ public abstract class XAttrUtil { <nl> * @ throws IOException on any error <nl> * / <nl> public static void setXAttr ( String path , String name , byte [ ] value ) throws IOException { <nl> - Memory valueMem = bytesToMemory ( value ) ; <nl> - int retval = XAttr . INSTANCE . setxattr ( path , name , valueMem , new size _ t ( valueMem . size ( ) ) , 0 ) ; <nl> + int retval = XAttr . INSTANCE . setxattr ( path , name , value , new size _ t ( value . length ) , 0 ) ; <nl> if ( retval ! = 0 ) { <nl> final int eno = Native . getLastError ( ) ; <nl> throw new IOException ( " errno : " + eno ) ; <nl> @ @ - 126 , 9 + 125 , 7 @ @ public abstract class XAttrUtil { <nl> * @ throws IOException on any error <nl> * / <nl> public static void lSetXAttr ( String path , String name , byte [ ] value ) throws IOException { <nl> - Memory valueMem = bytesToMemory ( value ) ; <nl> - final int retval = XAttr . INSTANCE . lsetxattr ( path , name , valueMem , <nl> - new size _ t ( valueMem . size ( ) ) , 0 ) ; <nl> + final int retval = XAttr . INSTANCE . lsetxattr ( path , name , value , new size _ t ( value . length ) , 0 ) ; <nl> if ( retval ! = 0 ) { <nl> final int eno = Native . getLastError ( ) ; <nl> throw new IOException ( " errno : " + eno ) ; <nl> @ @ - 171 , 9 + 168 , 7 @ @ public abstract class XAttrUtil { <nl> * @ throws IOException on any error <nl> * / <nl> public static void fSetXAttr ( int fd , String name , byte [ ] value ) throws IOException { <nl> - Memory valueMem = bytesToMemory ( value ) ; <nl> - final int retval = XAttr . INSTANCE . fsetxattr ( fd , name , valueMem , new size _ t ( valueMem . size ( ) ) , <nl> - 0 ) ; <nl> + final int retval = XAttr . INSTANCE . fsetxattr ( fd , name , value , new size _ t ( value . length ) , 0 ) ; <nl> if ( retval ! = 0 ) { <nl> final int eno = Native . getLastError ( ) ; <nl> throw new IOException ( " errno : " + eno ) ; <nl> @ @ - 203 , 10 + 198 , 8 @ @ public abstract class XAttrUtil { <nl> * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> * / <nl> public static String getXAttr ( String path , String name , String encoding ) throws IOException { <nl> - Memory valueMem = getXAttrAsMemory ( path , name ) ; <nl> - return Charset . forName ( encoding ) <nl> - . decode ( valueMem . getByteBuffer ( 0 , valueMem . size ( ) ) ) <nl> - . toString ( ) ; <nl> + byte [ ] valueMem = getXAttrBytes ( path , name ) ; <nl> + return new String ( valueMem , Charset . forName ( encoding ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 218 , 8 + 211 , 28 @ @ public abstract class XAttrUtil { <nl> * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> * / <nl> public static byte [ ] getXAttrBytes ( String path , String name ) throws IOException { <nl> - Memory valueMem = getXAttrAsMemory ( path , name ) ; <nl> - return valueMem . getByteArray ( 0 , ( int ) valueMem . size ( ) ) ; <nl> + ssize _ t retval ; <nl> + byte [ ] valueMem ; <nl> + int eno = 0 ; <nl> + <nl> + do { <nl> + retval = XAttr . INSTANCE . getxattr ( path , name , ( byte [ ] ) null , size _ t . ZERO ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + <nl> + valueMem = new byte [ retval . intValue ( ) ] ; <nl> + retval = XAttr . INSTANCE . getxattr ( path , name , valueMem , new size _ t ( valueMem . length ) ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + if ( eno ! = XAttr . ERANGE ) { <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + } while ( retval . longValue ( ) < 0 & & eno = = XAttr . ERANGE ) ; <nl> + <nl> + return valueMem ; <nl> } <nl> <nl> / * * <nl> @ @ - 236 , 7 + 249 , 7 @ @ public abstract class XAttrUtil { <nl> int eno = 0 ; <nl> <nl> do { <nl> - retval = XAttr . INSTANCE . getxattr ( path , name , null , size _ t . ZERO ) ; <nl> + retval = XAttr . INSTANCE . getxattr ( path , name , ( Memory ) null , size _ t . ZERO ) ; <nl> if ( retval . longValue ( ) < 0 ) { <nl> eno = Native . getLastError ( ) ; <nl> throw new IOException ( " errno : " + eno ) ; <nl> @ @ - 280 , 10 + 293 , 8 @ @ public abstract class XAttrUtil { <nl> * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> * / <nl> public static String lGetXAttr ( String path , String name , String encoding ) throws IOException { <nl> - Memory valueMem = lGetXAttrAsMemory ( path , name ) ; <nl> - return Charset . forName ( encoding ) <nl> - . decode ( valueMem . getByteBuffer ( 0 , valueMem . size ( ) ) ) <nl> - . toString ( ) ; <nl> + byte [ ] valueMem = lGetXAttrBytes ( path , name ) ; <nl> + return new String ( valueMem , Charset . forName ( encoding ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 296 , 8 + 307 , 28 @ @ public abstract class XAttrUtil { <nl> * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> * / <nl> public static byte [ ] lGetXAttrBytes ( String path , String name ) throws IOException { <nl> - Memory valueMem = lGetXAttrAsMemory ( path , name ) ; <nl> - return valueMem . getByteArray ( 0 , ( int ) valueMem . size ( ) ) ; <nl> + ssize _ t retval ; <nl> + byte [ ] valueMem ; <nl> + int eno = 0 ; <nl> + <nl> + do { <nl> + retval = XAttr . INSTANCE . lgetxattr ( path , name , ( byte [ ] ) null , size _ t . ZERO ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + <nl> + valueMem = new byte [ retval . intValue ( ) ] ; <nl> + retval = XAttr . INSTANCE . lgetxattr ( path , name , valueMem , new size _ t ( valueMem . length ) ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + if ( eno ! = XAttr . ERANGE ) { <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + } while ( retval . longValue ( ) < 0 & & eno = = XAttr . ERANGE ) ; <nl> + <nl> + return valueMem ; <nl> } <nl> <nl> / * * <nl> @ @ - 315 , 7 + 346 , 7 @ @ public abstract class XAttrUtil { <nl> int eno = 0 ; <nl> <nl> do { <nl> - retval = XAttr . INSTANCE . lgetxattr ( path , name , null , size _ t . ZERO ) ; <nl> + retval = XAttr . INSTANCE . lgetxattr ( path , name , ( Memory ) null , size _ t . ZERO ) ; <nl> if ( retval . longValue ( ) < 0 ) { <nl> eno = Native . getLastError ( ) ; <nl> throw new IOException ( " errno : " + eno ) ; <nl> @ @ - 357 , 10 + 388 , 8 @ @ public abstract class XAttrUtil { <nl> * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> * / <nl> public static String fGetXAttr ( int fd , String name , String encoding ) throws IOException { <nl> - Memory valueMem = fGetXAttrAsMemory ( fd , name ) ; <nl> - return Charset . forName ( encoding ) <nl> - . decode ( valueMem . getByteBuffer ( 0 , valueMem . size ( ) ) ) <nl> - . toString ( ) ; <nl> + byte [ ] valueMem = fGetXAttrBytes ( fd , name ) ; <nl> + return new String ( valueMem , Charset . forName ( encoding ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 372 , 8 + 401 , 28 @ @ public abstract class XAttrUtil { <nl> * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> * / <nl> public static byte [ ] fGetXAttrBytes ( int fd , String name ) throws IOException { <nl> - Memory valueMem = fGetXAttrAsMemory ( fd , name ) ; <nl> - return valueMem . getByteArray ( 0 , ( int ) valueMem . size ( ) ) ; <nl> + ssize _ t retval ; <nl> + byte [ ] valueMem ; <nl> + int eno = 0 ; <nl> + <nl> + do { <nl> + retval = XAttr . INSTANCE . fgetxattr ( fd , name , ( byte [ ] ) null , size _ t . ZERO ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + <nl> + valueMem = new byte [ retval . intValue ( ) ] ; <nl> + retval = XAttr . INSTANCE . fgetxattr ( fd , name , valueMem , new size _ t ( valueMem . length ) ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + if ( eno ! = XAttr . ERANGE ) { <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + } while ( retval . longValue ( ) < 0 & & eno = = XAttr . ERANGE ) ; <nl> + <nl> + return valueMem ; <nl> } <nl> <nl> / * * <nl> @ @ - 390 , 7 + 439 , 7 @ @ public abstract class XAttrUtil { <nl> int eno = 0 ; <nl> <nl> do { <nl> - retval = XAttr . INSTANCE . fgetxattr ( fd , name , null , size _ t . ZERO ) ; <nl> + retval = XAttr . INSTANCE . fgetxattr ( fd , name , ( Memory ) null , size _ t . ZERO ) ; <nl> if ( retval . longValue ( ) < 0 ) { <nl> eno = Native . getLastError ( ) ; <nl> throw new IOException ( " errno : " + eno ) ; <nl> @ @ - 431 , 18 + 480 , 18 @ @ public abstract class XAttrUtil { <nl> * / <nl> public static Collection < String > listXAttr ( String path , String encoding ) throws IOException { <nl> ssize _ t retval ; <nl> - Memory listMem ; <nl> + byte [ ] listMem ; <nl> int eno = 0 ; <nl> <nl> do { <nl> - retval = XAttr . INSTANCE . listxattr ( path , null , size _ t . ZERO ) ; <nl> + retval = XAttr . INSTANCE . listxattr ( path , ( byte [ ] ) null , size _ t . ZERO ) ; <nl> if ( retval . longValue ( ) < 0 ) { <nl> eno = Native . getLastError ( ) ; <nl> throw new IOException ( " errno : " + eno ) ; <nl> } <nl> <nl> - listMem = new Memory ( retval . longValue ( ) ) ; <nl> - retval = XAttr . INSTANCE . listxattr ( path , listMem , new size _ t ( listMem . size ( ) ) ) ; <nl> + listMem = new byte [ retval . intValue ( ) ] ; <nl> + retval = XAttr . INSTANCE . listxattr ( path , listMem , new size _ t ( listMem . length ) ) ; <nl> if ( retval . longValue ( ) < 0 ) { <nl> eno = Native . getLastError ( ) ; <nl> if ( eno ! = XAttr . ERANGE ) { <nl> @ @ - 478 , 18 + 527 , 18 @ @ public abstract class XAttrUtil { <nl> * / <nl> public static Collection < String > lListXAttr ( String path , String encoding ) throws IOException { <nl> ssize _ t retval ; <nl> - Memory listMem ; <nl> + byte [ ] listMem ; <nl> int eno = 0 ; <nl> <nl> do { <nl> - retval = XAttr . INSTANCE . llistxattr ( path , null , size _ t . ZERO ) ; <nl> + retval = XAttr . INSTANCE . llistxattr ( path , ( byte [ ] ) null , size _ t . ZERO ) ; <nl> if ( retval . longValue ( ) < 0 ) { <nl> eno = Native . getLastError ( ) ; <nl> throw new IOException ( " errno : " + eno ) ; <nl> } <nl> <nl> - listMem = new Memory ( retval . longValue ( ) ) ; <nl> - retval = XAttr . INSTANCE . llistxattr ( path , listMem , new size _ t ( listMem . size ( ) ) ) ; <nl> + listMem = new byte [ retval . intValue ( ) ] ; <nl> + retval = XAttr . INSTANCE . llistxattr ( path , listMem , new size _ t ( listMem . length ) ) ; <nl> if ( retval . longValue ( ) < 0 ) { <nl> eno = Native . getLastError ( ) ; <nl> if ( eno ! = XAttr . ERANGE ) { <nl> @ @ - 523 , 18 + 572 , 18 @ @ public abstract class XAttrUtil { <nl> * / <nl> public static Collection < String > fListXAttr ( int fd , String encoding ) throws IOException { <nl> ssize _ t retval ; <nl> - Memory listMem ; <nl> + byte [ ] listMem ; <nl> int eno = 0 ; <nl> <nl> do { <nl> - retval = XAttr . INSTANCE . flistxattr ( fd , null , size _ t . ZERO ) ; <nl> + retval = XAttr . INSTANCE . flistxattr ( fd , ( byte [ ] ) null , size _ t . ZERO ) ; <nl> if ( retval . longValue ( ) < 0 ) { <nl> eno = Native . getLastError ( ) ; <nl> throw new IOException ( " errno : " + eno ) ; <nl> } <nl> <nl> - listMem = new Memory ( retval . longValue ( ) ) ; <nl> - retval = XAttr . INSTANCE . flistxattr ( fd , listMem , new size _ t ( listMem . size ( ) ) ) ; <nl> + listMem = new byte [ retval . intValue ( ) ] ; <nl> + retval = XAttr . INSTANCE . flistxattr ( fd , listMem , new size _ t ( listMem . length ) ) ; <nl> if ( retval . longValue ( ) < 0 ) { <nl> eno = Native . getLastError ( ) ; <nl> if ( eno ! = XAttr . ERANGE ) { <nl> @ @ - 593 , 33 + 642 , 19 @ @ public abstract class XAttrUtil { <nl> } <nl> } <nl> <nl> - private static Memory bytesToMemory ( byte [ ] value ) { <nl> - Memory valueMem = new Memory ( value . length ) ; <nl> - valueMem . write ( 0 , value , 0 , value . length ) ; <nl> - return valueMem ; <nl> - } <nl> - <nl> - private static Collection < String > splitBufferToStrings ( Memory valueMem , String encoding ) <nl> + private static Collection < String > splitBufferToStrings ( byte [ ] valueMem , String encoding ) <nl> throws IOException { <nl> final Charset charset = Charset . forName ( encoding ) ; <nl> final Set < String > attributesList = new LinkedHashSet < String > ( 1 ) ; <nl> - long offset = 0 ; <nl> - while ( offset ! = valueMem . size ( ) ) { <nl> - / / Find terminating NUL character . <nl> - long nulOffset = valueMem . indexOf ( offset , ( byte ) 0 ) ; <nl> - if ( nulOffset = = - 1 ) { <nl> - throw new IOException ( " Expected NUL character not found . " ) ; <nl> + int offset = 0 ; <nl> + for ( int i = 0 ; i < valueMem . length ; i + + ) { <nl> + / / each entry is terminated by a single \ 0 byte <nl> + if ( valueMem [ i ] = = 0 ) { <nl> + / / Convert bytes of the name to String . <nl> + final String name = new String ( valueMem , offset , i - offset , charset ) ; <nl> + attributesList . add ( name ) ; <nl> + offset = i + 1 ; <nl> } <nl> - <nl> - / / Duplicate buffer with limit at end of name . <nl> - final ByteBuffer nameBuffer = valueMem . getByteBuffer ( offset , nulOffset ) ; <nl> - <nl> - / / Convert bytes of the name to String . <nl> - final String name = charset . decode ( nameBuffer ) . toString ( ) ; <nl> - attributesList . add ( name ) ; <nl> - <nl> - / / Move past NUL . <nl> - offset + = nulOffset + 1 ; <nl> } <nl> return attributesList ; <nl> }
diff - - git a / contrib / platform / src / com / sun / jna / platform / linux / XAttr . java b / contrib / platform / src / com / sun / jna / platform / linux / XAttr . java <nl> new file mode 100644 <nl> index 0000000 . . 8d36dae <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / linux / XAttr . java <nl> @ @ - 0 , 0 + 1 , 86 @ @ <nl> + / * <nl> + * Copyright ( c ) 2018 V á clav Haisman , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> + package com . sun . jna . platform . linux ; <nl> + <nl> + import com . sun . jna . IntegerType ; <nl> + import com . sun . jna . Library ; <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + <nl> + public interface XAttr extends Library { <nl> + XAttr INSTANCE = Native . load ( XAttr . class ) ; <nl> + <nl> + class size _ t extends IntegerType { <nl> + public static final size _ t ZERO = new size _ t ( ) ; <nl> + <nl> + private static final long serialVersionUID = 1L ; <nl> + <nl> + public size _ t ( ) { this ( 0 ) ; } <nl> + public size _ t ( long value ) { super ( Native . SIZE _ T _ SIZE , value , true ) ; } <nl> + } <nl> + <nl> + class ssize _ t extends IntegerType { <nl> + public static final ssize _ t ZERO = new ssize _ t ( ) ; <nl> + <nl> + private static final long serialVersionUID = 1L ; <nl> + <nl> + public ssize _ t ( ) { <nl> + this ( 0 ) ; <nl> + } <nl> + <nl> + public ssize _ t ( long value ) { <nl> + super ( Native . SIZE _ T _ SIZE , value , false ) ; <nl> + } <nl> + } <nl> + <nl> + int XATTR _ CREATE = 1 ; <nl> + int XATTR _ REPLACE = 2 ; <nl> + <nl> + int EPERM = 1 ; <nl> + int E2BIG = 7 ; <nl> + int EEXIST = 17 ; <nl> + int ENOSPC = 28 ; <nl> + int ERANGE = 34 ; <nl> + int ENODATA = 61 ; <nl> + int ENOATTR = ENODATA ; <nl> + int ENOTSUP = 95 ; <nl> + int EDQUOT = 122 ; <nl> + <nl> + int setxattr ( String path , String name , Pointer value , size _ t size , int flags ) ; <nl> + int lsetxattr ( String path , String name , Pointer value , size _ t size , int flags ) ; <nl> + int fsetxattr ( int fd , String name , Pointer value , size _ t size , int flags ) ; <nl> + <nl> + ssize _ t getxattr ( String path , String name , Pointer value , size _ t size ) ; <nl> + ssize _ t lgetxattr ( String path , String name , Pointer value , size _ t size ) ; <nl> + ssize _ t fgetxattr ( int fd , String name , Pointer value , size _ t size ) ; <nl> + <nl> + ssize _ t listxattr ( String path , Pointer list , size _ t size ) ; <nl> + ssize _ t llistxattr ( String path , Pointer list , size _ t size ) ; <nl> + ssize _ t flistxattr ( int fd , Pointer list , size _ t size ) ; <nl> + <nl> + int removexattr ( String path , String name ) ; <nl> + int lremovexattr ( String path , String name ) ; <nl> + int fremovexattr ( int fd , String name ) ; <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / linux / XAttrUtil . java b / contrib / platform / src / com / sun / jna / platform / linux / XAttrUtil . java <nl> new file mode 100644 <nl> index 0000000 . . b5154ad <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / linux / XAttrUtil . java <nl> @ @ - 0 , 0 + 1 , 626 @ @ <nl> + / * <nl> + * Copyright ( c ) 2018 V á clav Haisman , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> + package com . sun . jna . platform . linux ; <nl> + <nl> + import com . sun . jna . Memory ; <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . platform . linux . XAttr . size _ t ; <nl> + import com . sun . jna . platform . linux . XAttr . ssize _ t ; <nl> + <nl> + import java . io . IOException ; <nl> + import java . nio . ByteBuffer ; <nl> + import java . nio . charset . Charset ; <nl> + import java . util . Collection ; <nl> + import java . util . LinkedHashSet ; <nl> + import java . util . Set ; <nl> + <nl> + / * * <nl> + * Utility functions class for handling file extended attributes on Linux . <nl> + * / <nl> + public abstract class XAttrUtil { <nl> + <nl> + private XAttrUtil ( ) { <nl> + } <nl> + <nl> + / * * <nl> + * Set or replace value of extended attribute . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ param value value to set <nl> + * @ throws IOException on any error <nl> + * / <nl> + public static void setXAttr ( String path , String name , String value ) throws IOException { <nl> + setXAttr ( path , name , value , Native . getDefaultStringEncoding ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Set or replace value of extended attribute . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ param value value to set <nl> + * @ param encoding character encoding to be used for stored value <nl> + * @ throws IOException on any error <nl> + * / <nl> + public static void setXAttr ( String path , String name , String value , String encoding ) <nl> + throws IOException { <nl> + setXAttr ( path , name , value . getBytes ( encoding ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Set or replace value of extended attribute . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ param value value to set <nl> + * @ throws IOException on any error <nl> + * / <nl> + public static void setXAttr ( String path , String name , byte [ ] value ) throws IOException { <nl> + Memory valueMem = bytesToMemory ( value ) ; <nl> + int retval = XAttr . INSTANCE . setxattr ( path , name , valueMem , new size _ t ( valueMem . size ( ) ) , 0 ) ; <nl> + if ( retval ! = 0 ) { <nl> + final int eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + <nl> + <nl> + / * * <nl> + * Set or replace value of extended attribute but in case of symbolic link set the extended <nl> + * attribute on the link itself instead linked file . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ param value value to set <nl> + * @ throws IOException on any error <nl> + * / <nl> + public static void lSetXAttr ( String path , String name , String value ) throws IOException { <nl> + lSetXAttr ( path , name , value , Native . getDefaultStringEncoding ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Set or replace value of extended attribute but in case of symbolic link set the extended <nl> + * attribute on the link itself instead linked file . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ param value value to set <nl> + * @ param encoding character encoding to be used for stored value <nl> + * @ throws IOException on any error <nl> + * / <nl> + public static void lSetXAttr ( String path , String name , String value , String encoding ) <nl> + throws IOException { <nl> + lSetXAttr ( path , name , value . getBytes ( encoding ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Set or replace value of extended attribute but in case of symbolic link set the extended <nl> + * attribute on the link itself instead linked file . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ param value value to set <nl> + * @ throws IOException on any error <nl> + * / <nl> + public static void lSetXAttr ( String path , String name , byte [ ] value ) throws IOException { <nl> + Memory valueMem = bytesToMemory ( value ) ; <nl> + final int retval = XAttr . INSTANCE . lsetxattr ( path , name , valueMem , <nl> + new size _ t ( valueMem . size ( ) ) , 0 ) ; <nl> + if ( retval ! = 0 ) { <nl> + final int eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + <nl> + <nl> + / * * <nl> + * Set or replace value of extended attribute . <nl> + * <nl> + * @ param fd file handle <nl> + * @ param name extended attribute name <nl> + * @ param value value to set <nl> + * @ throws IOException on any error <nl> + * / <nl> + public static void fSetXAttr ( int fd , String name , String value ) throws IOException { <nl> + fSetXAttr ( fd , name , value , Native . getDefaultStringEncoding ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Set or replace value of extended attribute . <nl> + * <nl> + * @ param fd file handle <nl> + * @ param name extended attribute name <nl> + * @ param value value to set <nl> + * @ param encoding character encoding to be used for stored value <nl> + * @ throws IOException on any error <nl> + * / <nl> + public static void fSetXAttr ( int fd , String name , String value , String encoding ) <nl> + throws IOException { <nl> + fSetXAttr ( fd , name , value . getBytes ( encoding ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Set or replace value of extended attribute . <nl> + * <nl> + * @ param fd file handle <nl> + * @ param name extended attribute name <nl> + * @ param value value to set <nl> + * @ throws IOException on any error <nl> + * / <nl> + public static void fSetXAttr ( int fd , String name , byte [ ] value ) throws IOException { <nl> + Memory valueMem = bytesToMemory ( value ) ; <nl> + final int retval = XAttr . INSTANCE . fsetxattr ( fd , name , valueMem , new size _ t ( valueMem . size ( ) ) , <nl> + 0 ) ; <nl> + if ( retval ! = 0 ) { <nl> + final int eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + <nl> + <nl> + / * * <nl> + * Get extended attribute value . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ return extended attribute value <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static String getXAttr ( String path , String name ) throws IOException { <nl> + return getXAttr ( path , name , Native . getDefaultStringEncoding ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Get extended attribute value . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ param encoding character encoding to be used to decode stored extended attribute value <nl> + * @ return extended attribute value <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static String getXAttr ( String path , String name , String encoding ) throws IOException { <nl> + Memory valueMem = getXAttrAsMemory ( path , name ) ; <nl> + return Charset . forName ( encoding ) <nl> + . decode ( valueMem . getByteBuffer ( 0 , valueMem . size ( ) ) ) <nl> + . toString ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Get extended attribute value . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ return extended attribute value <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static byte [ ] getXAttrBytes ( String path , String name ) throws IOException { <nl> + Memory valueMem = getXAttrAsMemory ( path , name ) ; <nl> + return valueMem . getByteArray ( 0 , ( int ) valueMem . size ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Get extended attribute value . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ return extended attribute value <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static Memory getXAttrAsMemory ( String path , String name ) throws IOException { <nl> + ssize _ t retval ; <nl> + Memory valueMem ; <nl> + int eno = 0 ; <nl> + <nl> + do { <nl> + retval = XAttr . INSTANCE . getxattr ( path , name , null , size _ t . ZERO ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + <nl> + valueMem = new Memory ( retval . longValue ( ) ) ; <nl> + retval = XAttr . INSTANCE . getxattr ( path , name , valueMem , new size _ t ( valueMem . size ( ) ) ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + if ( eno ! = XAttr . ERANGE ) { <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + } while ( retval . longValue ( ) < 0 & & eno = = XAttr . ERANGE ) ; <nl> + <nl> + return valueMem ; <nl> + } <nl> + <nl> + <nl> + / * * <nl> + * Get extended attribute value but in case of symbolic link get the value from the link <nl> + * itself instead of linked file . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ return extended attribute value <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static String lGetXAttr ( String path , String name ) throws IOException { <nl> + return lGetXAttr ( path , name , Native . getDefaultStringEncoding ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Get extended attribute value but in case of symbolic link get the value from the link <nl> + * itself instead of linked file . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ param encoding character encoding to be used to decode stored extended attribute value <nl> + * @ return extended attribute value <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static String lGetXAttr ( String path , String name , String encoding ) throws IOException { <nl> + Memory valueMem = lGetXAttrAsMemory ( path , name ) ; <nl> + return Charset . forName ( encoding ) <nl> + . decode ( valueMem . getByteBuffer ( 0 , valueMem . size ( ) ) ) <nl> + . toString ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Get extended attribute value but in case of symbolic link get the value from the link <nl> + * itself instead of linked file . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ return extended attribute value <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static byte [ ] lGetXAttrBytes ( String path , String name ) throws IOException { <nl> + Memory valueMem = lGetXAttrAsMemory ( path , name ) ; <nl> + return valueMem . getByteArray ( 0 , ( int ) valueMem . size ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Get extended attribute value but in case of symbolic link get the value from the link <nl> + * itself instead of linked file . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ return extended attribute value <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static Memory lGetXAttrAsMemory ( String path , String name ) throws IOException { <nl> + ssize _ t retval ; <nl> + Memory valueMem ; <nl> + int eno = 0 ; <nl> + <nl> + do { <nl> + retval = XAttr . INSTANCE . lgetxattr ( path , name , null , size _ t . ZERO ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + <nl> + valueMem = new Memory ( retval . longValue ( ) ) ; <nl> + retval = XAttr . INSTANCE . lgetxattr ( path , name , valueMem , new size _ t ( valueMem . size ( ) ) ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + if ( eno ! = XAttr . ERANGE ) { <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + } while ( retval . longValue ( ) < 0 & & eno = = XAttr . ERANGE ) ; <nl> + <nl> + return valueMem ; <nl> + } <nl> + <nl> + <nl> + / * * <nl> + * Get extended attribute value . <nl> + * <nl> + * @ param fd file handle <nl> + * @ param name extended attribute name <nl> + * @ return extended attribute value <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static String fGetXAttr ( int fd , String name ) throws IOException { <nl> + return fGetXAttr ( fd , name , Native . getDefaultStringEncoding ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Get extended attribute value . <nl> + * <nl> + * @ param fd file handle <nl> + * @ param name extended attribute name <nl> + * @ param encoding character encoding to be used to decode stored extended attribute value <nl> + * @ return extended attribute value <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static String fGetXAttr ( int fd , String name , String encoding ) throws IOException { <nl> + Memory valueMem = fGetXAttrAsMemory ( fd , name ) ; <nl> + return Charset . forName ( encoding ) <nl> + . decode ( valueMem . getByteBuffer ( 0 , valueMem . size ( ) ) ) <nl> + . toString ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Get extended attribute value . <nl> + * <nl> + * @ param fd file handle <nl> + * @ param name extended attribute name <nl> + * @ return extended attribute value <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static byte [ ] fGetXAttrBytes ( int fd , String name ) throws IOException { <nl> + Memory valueMem = fGetXAttrAsMemory ( fd , name ) ; <nl> + return valueMem . getByteArray ( 0 , ( int ) valueMem . size ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Get extended attribute value . <nl> + * <nl> + * @ param fd file handle <nl> + * @ param name extended attribute name <nl> + * @ return extended attribute value <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static Memory fGetXAttrAsMemory ( int fd , String name ) throws IOException { <nl> + ssize _ t retval ; <nl> + Memory valueMem ; <nl> + int eno = 0 ; <nl> + <nl> + do { <nl> + retval = XAttr . INSTANCE . fgetxattr ( fd , name , null , size _ t . ZERO ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + <nl> + valueMem = new Memory ( retval . longValue ( ) ) ; <nl> + retval = XAttr . INSTANCE . fgetxattr ( fd , name , valueMem , new size _ t ( valueMem . size ( ) ) ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + if ( eno ! = XAttr . ERANGE ) { <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + } while ( retval . longValue ( ) < 0 & & eno = = XAttr . ERANGE ) ; <nl> + <nl> + return valueMem ; <nl> + } <nl> + <nl> + <nl> + / * * <nl> + * List extended attributes on file . <nl> + * <nl> + * @ param path file path <nl> + * @ return collection of extended attributes ' names <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static Collection < String > listXAttr ( String path ) throws IOException { <nl> + return listXAttr ( path , Native . getDefaultStringEncoding ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * List extended attributes on file . <nl> + * <nl> + * @ param path file path <nl> + * @ param encoding character encoding use to decode extended attributes ' names <nl> + * @ return collection of extended attributes ' names <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static Collection < String > listXAttr ( String path , String encoding ) throws IOException { <nl> + ssize _ t retval ; <nl> + Memory listMem ; <nl> + int eno = 0 ; <nl> + <nl> + do { <nl> + retval = XAttr . INSTANCE . listxattr ( path , null , size _ t . ZERO ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + <nl> + listMem = new Memory ( retval . longValue ( ) ) ; <nl> + retval = XAttr . INSTANCE . listxattr ( path , listMem , new size _ t ( listMem . size ( ) ) ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + if ( eno ! = XAttr . ERANGE ) { <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + } while ( retval . longValue ( ) < 0 & & eno = = XAttr . ERANGE ) ; <nl> + <nl> + return splitBufferToStrings ( listMem , encoding ) ; <nl> + } <nl> + <nl> + <nl> + / * * <nl> + * List extended attributes on file but in case of symbolic link get extended attributes of <nl> + * the link itself instead of linked file . <nl> + * <nl> + * @ param path file path <nl> + * @ return collection of extended attributes ' names <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static Collection < String > lListXAttr ( String path ) throws IOException { <nl> + return lListXAttr ( path , Native . getDefaultStringEncoding ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * List extended attributes on file but in case of symbolic link get extended attributes of <nl> + * the link itself instead of linked file . <nl> + * <nl> + * @ param path file path <nl> + * @ param encoding character encoding use to decode extended attributes ' names <nl> + * @ return collection of extended attributes ' names <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static Collection < String > lListXAttr ( String path , String encoding ) throws IOException { <nl> + ssize _ t retval ; <nl> + Memory listMem ; <nl> + int eno = 0 ; <nl> + <nl> + do { <nl> + retval = XAttr . INSTANCE . llistxattr ( path , null , size _ t . ZERO ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + <nl> + listMem = new Memory ( retval . longValue ( ) ) ; <nl> + retval = XAttr . INSTANCE . llistxattr ( path , listMem , new size _ t ( listMem . size ( ) ) ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + if ( eno ! = XAttr . ERANGE ) { <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + } while ( retval . longValue ( ) < 0 & & eno = = XAttr . ERANGE ) ; <nl> + <nl> + return splitBufferToStrings ( listMem , encoding ) ; <nl> + } <nl> + <nl> + <nl> + / * * <nl> + * List extended attributes on file . <nl> + * <nl> + * @ param fd file handle <nl> + * @ return collection of extended attributes ' names <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static Collection < String > fListXAttr ( int fd ) throws IOException { <nl> + return fListXAttr ( fd , Native . getDefaultStringEncoding ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * List extended attributes on file . <nl> + * <nl> + * @ param fd file handle <nl> + * @ param encoding character encoding use to decode extended attributes ' names <nl> + * @ return collection of extended attributes ' names <nl> + * @ throws IOException on any error except < code > ERANGE < / code > which handled internally <nl> + * / <nl> + public static Collection < String > fListXAttr ( int fd , String encoding ) throws IOException { <nl> + ssize _ t retval ; <nl> + Memory listMem ; <nl> + int eno = 0 ; <nl> + <nl> + do { <nl> + retval = XAttr . INSTANCE . flistxattr ( fd , null , size _ t . ZERO ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + <nl> + listMem = new Memory ( retval . longValue ( ) ) ; <nl> + retval = XAttr . INSTANCE . flistxattr ( fd , listMem , new size _ t ( listMem . size ( ) ) ) ; <nl> + if ( retval . longValue ( ) < 0 ) { <nl> + eno = Native . getLastError ( ) ; <nl> + if ( eno ! = XAttr . ERANGE ) { <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + } while ( retval . longValue ( ) < 0 & & eno = = XAttr . ERANGE ) ; <nl> + <nl> + return splitBufferToStrings ( listMem , encoding ) ; <nl> + } <nl> + <nl> + <nl> + / * * <nl> + * Remove extended attribute from file . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ throws IOException on any error <nl> + * / <nl> + public static void removeXAttr ( String path , String name ) throws IOException { <nl> + final int retval = XAttr . INSTANCE . removexattr ( path , name ) ; <nl> + if ( retval ! = 0 ) { <nl> + final int eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Remove extended attribute from file but in case of symbolic link remove extended attribute <nl> + * from the link itself instead of linked file . <nl> + * <nl> + * @ param path file path <nl> + * @ param name extended attribute name <nl> + * @ throws IOException on any error <nl> + * / <nl> + public static void lRemoveXAttr ( String path , String name ) throws IOException { <nl> + final int retval = XAttr . INSTANCE . lremovexattr ( path , name ) ; <nl> + if ( retval ! = 0 ) { <nl> + final int eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Remove extended attribute from file . <nl> + * <nl> + * @ param fd file handle <nl> + * @ param name extended attribute name <nl> + * @ throws IOException on any error <nl> + * / <nl> + public static void fRemoveXAttr ( int fd , String name ) throws IOException { <nl> + final int retval = XAttr . INSTANCE . fremovexattr ( fd , name ) ; <nl> + if ( retval ! = 0 ) { <nl> + final int eno = Native . getLastError ( ) ; <nl> + throw new IOException ( " errno : " + eno ) ; <nl> + } <nl> + } <nl> + <nl> + private static Memory bytesToMemory ( byte [ ] value ) { <nl> + Memory valueMem = new Memory ( value . length ) ; <nl> + valueMem . write ( 0 , value , 0 , value . length ) ; <nl> + return valueMem ; <nl> + } <nl> + <nl> + private static Collection < String > splitBufferToStrings ( Memory valueMem , String encoding ) <nl> + throws IOException { <nl> + final Charset charset = Charset . forName ( encoding ) ; <nl> + final Set < String > attributesList = new LinkedHashSet < String > ( 1 ) ; <nl> + long offset = 0 ; <nl> + while ( offset ! = valueMem . size ( ) ) { <nl> + / / Find terminating NUL character . <nl> + long nulOffset = valueMem . indexOf ( offset , ( byte ) 0 ) ; <nl> + if ( nulOffset = = - 1 ) { <nl> + throw new IOException ( " Expected NUL character not found . " ) ; <nl> + } <nl> + <nl> + / / Duplicate buffer with limit at end of name . <nl> + final ByteBuffer nameBuffer = valueMem . getByteBuffer ( offset , nulOffset ) ; <nl> + <nl> + / / Convert bytes of the name to String . <nl> + final String name = charset . decode ( nameBuffer ) . toString ( ) ; <nl> + attributesList . add ( name ) ; <nl> + <nl> + / / Move past NUL . <nl> + offset + = nulOffset + 1 ; <nl> + } <nl> + return attributesList ; <nl> + } <nl> + } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / linux / XAttrUtilTest . java b / contrib / platform / test / com / sun / jna / platform / linux / XAttrUtilTest . java <nl> new file mode 100644 <nl> index 0000000 . . c4a074b <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / linux / XAttrUtilTest . java <nl> @ @ - 0 , 0 + 1 , 70 @ @ <nl> + / * <nl> + * Copyright ( c ) 2018 V á clav Haisman , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> + package com . sun . jna . platform . linux ; <nl> + <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + import java . util . Collection ; <nl> + <nl> + import org . junit . Test ; <nl> + <nl> + import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertFalse ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + <nl> + public class XAttrUtilTest { <nl> + private static final String TEST _ STRING = " Ž lu ť ou č k ý k ů ň ú p ě l nebo tak n ě co . " ; <nl> + private static final String TEST _ STRING _ 2 = " P ř í li š ž lu ť ou č k ý k ů ň ú p ě l ď á belsk é ó dy . " ; <nl> + private static final String TEST _ ATTRIBUTE = " user . test " ; <nl> + private static final String TEST _ ATTRIBUTE _ FOO = TEST _ ATTRIBUTE + " . foo " ; <nl> + <nl> + @ Test <nl> + public void setXAttr ( ) throws IOException { <nl> + File file = File . createTempFile ( " xattr " , " test " ) ; <nl> + file . deleteOnExit ( ) ; <nl> + <nl> + XAttrUtil . setXAttr ( file . getAbsolutePath ( ) , TEST _ ATTRIBUTE , TEST _ STRING ) ; <nl> + XAttrUtil . setXAttr ( file . getAbsolutePath ( ) , TEST _ ATTRIBUTE _ FOO , TEST _ STRING _ 2 ) ; <nl> + <nl> + String retrievedValue = XAttrUtil . getXAttr ( file . getAbsolutePath ( ) , TEST _ ATTRIBUTE ) ; <nl> + assertEquals ( TEST _ STRING , retrievedValue ) ; <nl> + <nl> + retrievedValue = XAttrUtil . getXAttr ( file . getAbsolutePath ( ) , TEST _ ATTRIBUTE _ FOO ) ; <nl> + assertEquals ( TEST _ STRING _ 2 , retrievedValue ) ; <nl> + <nl> + XAttrUtil . setXAttr ( file . getAbsolutePath ( ) , TEST _ ATTRIBUTE , TEST _ STRING _ 2 ) ; <nl> + retrievedValue = XAttrUtil . lGetXAttr ( file . getAbsolutePath ( ) , TEST _ ATTRIBUTE ) ; <nl> + assertEquals ( TEST _ STRING _ 2 , retrievedValue ) ; <nl> + <nl> + Collection < String > xattrs = XAttrUtil . listXAttr ( file . getAbsolutePath ( ) ) ; <nl> + assertTrue ( xattrs . contains ( TEST _ ATTRIBUTE ) ) ; <nl> + assertTrue ( xattrs . contains ( TEST _ ATTRIBUTE _ FOO ) ) ; <nl> + <nl> + XAttrUtil . removeXAttr ( file . getAbsolutePath ( ) , TEST _ ATTRIBUTE ) ; <nl> + xattrs = XAttrUtil . lListXAttr ( file . getAbsolutePath ( ) ) ; <nl> + assertFalse ( xattrs . contains ( TEST _ ATTRIBUTE ) ) ; <nl> + assertTrue ( xattrs . contains ( TEST _ ATTRIBUTE _ FOO ) ) ; <nl> + } <nl> + } <nl> \ No newline at end of file
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java <nl> index 7422e5b . . 5a62765 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java <nl> @ @ - 238 , 7 + 238 , 7 @ @ public class WbemcliTest { <nl> assertTrue ( year > 1970 ) ; <nl> assertTrue ( month > = 1 & & month < = 12 ) ; <nl> assertTrue ( day > = 1 & & day < = 31 ) ; <nl> - assertTrue ( hour > = 0 & & day < = 23 ) ; <nl> + assertTrue ( hour > = 0 & & hour < = 23 ) ; <nl> assertTrue ( minute > = 0 & & minute < = 59 ) ; <nl> assertTrue ( second > = 0 & & second < = 59 ) ; <nl> OleAuto . INSTANCE . VariantClear ( pVal ) ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 0606d94 . . 07951e8 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 2 , 11 + 2 , 12 @ @ NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and AL 2 . 0 ( see LICENSE <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> - Release 5 . 0 . 1 ( Next release ) <nl> + Release 5 . 1 . 0 ( Next release ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> Features <nl> - - - - - - - - <nl> + * [ # 1029 ] ( https : / / github . com / java - native - access / jna / issues / 1029 ) : Add ` statvfs ` to ` c . s . j . platform . linux . LibC ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / build . xml b / build . xml <nl> index a4923b8 . . 4fa582f 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 59 , 8 + 59 , 8 @ @ <nl> <nl> < ! - - JNA library release version - android versionCode is derived from mjar / minor / revision - - > <nl> < property name = " jna . major " value = " 5 " / > <nl> - < property name = " jna . minor " value = " 0 " / > <nl> - < property name = " jna . revision " value = " 1 " / > <nl> + < property name = " jna . minor " value = " 1 " / > <nl> + < property name = " jna . revision " value = " 0 " / > <nl> < property name = " jna . build " value = " 0 " / > < ! - - $ { build . number } - - > <nl> < condition property = " version . suffix " value = " " else = " - SNAPSHOT " > <nl> < or > <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / linux / LibC . java b / contrib / platform / src / com / sun / jna / platform / linux / LibC . java <nl> index 0d2d8e6 . . e4fa98a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / linux / LibC . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / linux / LibC . java <nl> @ @ - 96 , 6 + 96 , 55 @ @ public interface LibC extends LibCAPI , Library { <nl> } <nl> } <nl> <nl> + @ FieldOrder ( { " f _ bsize " , " f _ frsize " , " f _ blocks " , " f _ bfree " , " f _ bavail " , <nl> + " f _ files " , " f _ ffree " , " f _ favail " , " f _ fsid " , " _ f _ unused " , " f _ flag " , <nl> + " f _ namemax " , " _ f _ spare " } ) <nl> + class Statvfs extends Structure { <nl> + public NativeLong f _ bsize ; <nl> + public NativeLong f _ frsize ; <nl> + public NativeLong f _ blocks ; <nl> + public NativeLong f _ bfree ; <nl> + public NativeLong f _ bavail ; <nl> + public NativeLong f _ files ; <nl> + public NativeLong f _ ffree ; <nl> + public NativeLong f _ favail ; <nl> + public NativeLong f _ fsid ; <nl> + public int _ f _ unused ; / / Only in 32 - bit <nl> + public NativeLong f _ flag ; <nl> + public NativeLong f _ namemax ; <nl> + public int [ ] _ f _ spare = new int [ 6 ] ; <nl> + <nl> + / * <nl> + * getFieldList and getFieldOrder are overridden because _ f _ unused is <nl> + * only present in 32 - bit wordsize . The dummy field in the structure is <nl> + * just padding and so if the field is the zero length array , it is <nl> + * stripped from the fields and field order . <nl> + * / <nl> + @ Override <nl> + protected List < Field > getFieldList ( ) { <nl> + List < Field > fields = new ArrayList < Field > ( super . getFieldList ( ) ) ; <nl> + if ( NativeLong . SIZE > 4 ) { <nl> + Iterator < Field > fieldIterator = fields . iterator ( ) ; <nl> + while ( fieldIterator . hasNext ( ) ) { <nl> + Field field = fieldIterator . next ( ) ; <nl> + if ( " _ f _ unused " . equals ( field . getName ( ) ) ) { <nl> + fieldIterator . remove ( ) ; <nl> + } <nl> + } <nl> + } <nl> + return fields ; <nl> + } <nl> + <nl> + @ Override <nl> + protected List < String > getFieldOrder ( ) { <nl> + List < String > fieldOrder = new ArrayList < String > ( super . getFieldOrder ( ) ) ; <nl> + if ( NativeLong . SIZE > 4 ) { <nl> + fieldOrder . remove ( " _ f _ unused " ) ; <nl> + } <nl> + return fieldOrder ; <nl> + } <nl> + } <nl> + <nl> / * * <nl> * sysinfo ( ) provides a simple way of getting overall system statistics . <nl> * This is more portable than reading / dev / kmem . <nl> @ @ - 106 , 4 + 155 , 16 @ @ public interface LibC extends LibCAPI , Library { <nl> * is set appropriately . <nl> * / <nl> int sysinfo ( Sysinfo info ) ; <nl> + <nl> + / * * <nl> + * The function statvfs ( ) returns information about a mounted filesystem . <nl> + * <nl> + * @ param path <nl> + * the pathname of any file within the mounted filesystem . <nl> + * @ param buf <nl> + * a pointer to a statvfs structure <nl> + * @ return On success , zero is returned . On error , - 1 is returned , and errno <nl> + * is set appropriately . <nl> + * / <nl> + int statvfs ( String path , Statvfs buf ) ; <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / linux / LibCTest . java b / contrib / platform / test / com / sun / jna / platform / linux / LibCTest . java <nl> index f834fc0 . . a418cf3 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / linux / LibCTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / linux / LibCTest . java <nl> @ @ - 23 , 8 + 23 , 16 @ @ <nl> * / <nl> package com . sun . jna . platform . linux ; <nl> <nl> + import java . io . BufferedReader ; <nl> + import java . io . File ; <nl> + import java . io . IOException ; <nl> + import java . io . InputStreamReader ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + <nl> import org . junit . Test ; <nl> <nl> + import com . sun . jna . platform . linux . LibC . Statvfs ; <nl> import com . sun . jna . platform . linux . LibC . Sysinfo ; <nl> <nl> import junit . framework . TestCase ; <nl> @ @ - 51 , 4 + 59 , 43 @ @ public class LibCTest extends TestCase { <nl> assertTrue ( info . freeram . longValue ( ) < = info . totalram . longValue ( ) ) ; <nl> assertTrue ( info . freeswap . longValue ( ) < = info . totalswap . longValue ( ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testStatvfs ( ) throws IOException , InterruptedException { <nl> + Statvfs vfs = new Statvfs ( ) ; <nl> + <nl> + / / Iterate ' mounts ' for mounted file systems <nl> + List < String > mountList = mounts ( ) ; <nl> + for ( String mount : mountList ) { <nl> + / / Skip proc , etc . <nl> + if ( ! mount . startsWith ( " / " ) ) { <nl> + continue ; <nl> + } <nl> + String fs = mount . split ( " " ) [ 0 ] ; <nl> + <nl> + vfs . clear ( ) ; <nl> + assertEquals ( 0 , LibC . INSTANCE . statvfs ( fs , vfs ) ) ; <nl> + File f = new File ( fs ) ; <nl> + assertEquals ( f . getTotalSpace ( ) , vfs . f _ blocks . longValue ( ) * vfs . f _ bsize . longValue ( ) ) ; <nl> + assertEquals ( f . getUsableSpace ( ) , vfs . f _ bavail . longValue ( ) * vfs . f _ bsize . longValue ( ) ) ; <nl> + assertTrue ( vfs . f _ bsize . longValue ( ) > 0 ) ; <nl> + assertTrue ( vfs . f _ bfree . longValue ( ) < = vfs . f _ blocks . longValue ( ) ) ; <nl> + assertTrue ( vfs . f _ ffree . longValue ( ) < = vfs . f _ files . longValue ( ) ) ; <nl> + assertTrue ( vfs . f _ namemax . longValue ( ) > 0 ) ; <nl> + } <nl> + } <nl> + <nl> + private static List < String > mounts ( ) throws IOException , InterruptedException { <nl> + Process p = Runtime . getRuntime ( ) . exec ( " mount " ) ; <nl> + <nl> + ArrayList < String > mounts = new ArrayList < String > ( ) ; <nl> + BufferedReader reader = new BufferedReader ( new InputStreamReader ( p . getInputStream ( ) ) ) ; <nl> + String line ; <nl> + while ( ( line = reader . readLine ( ) ) ! = null ) { <nl> + mounts . add ( line ) ; <nl> + } <nl> + p . waitFor ( ) ; <nl> + reader . close ( ) ; <nl> + return mounts ; <nl> + } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 0b1f89b . . b1d5b0c 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 11 , 6 + 11 , 7 @ @ Features <nl> Bug Fixes <nl> - - - - - - - - - <nl> * [ # 1025 ] ( https : / / github . com / java - native - access / jna / pull / 1025 ) : Restore java 6 compatibility and introduce animal - sniffer to prevent regressions - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 1028 ] ( https : / / github . com / java - native - access / jna / pull / 1028 ) : Fix Linux LibC . Sysinfo FieldOrder - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> <nl> Release 5 . 0 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / linux / LibC . java b / contrib / platform / src / com / sun / jna / platform / linux / LibC . java <nl> index 52f4c4e . . 0d2d8e6 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / linux / LibC . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / linux / LibC . java <nl> @ @ - 89 , 8 + 89 , 8 @ @ public interface LibC extends LibCAPI , Library { <nl> @ Override <nl> protected List < String > getFieldOrder ( ) { <nl> List < String > fieldOrder = new ArrayList < String > ( super . getFieldOrder ( ) ) ; <nl> - if ( PADDING _ SIZE > 0 ) { <nl> - fieldOrder . add ( " _ f " ) ; <nl> + if ( PADDING _ SIZE = = 0 ) { <nl> + fieldOrder . remove ( " _ f " ) ; <nl> } <nl> return fieldOrder ; <nl> } <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index e53fd4e . . eee919f 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 1061 , 7 + 1061 , 10 @ @ public abstract class Structure { <nl> if ( fieldOrder . size ( ) ! = flist . size ( ) & & flist . size ( ) > 1 ) { <nl> if ( force ) { <nl> throw new Error ( " Structure . getFieldOrder ( ) on " + getClass ( ) <nl> - + " does not provide enough names [ " + fieldOrder . size ( ) <nl> + + ( fieldOrder . size ( ) < flist . size ( ) <nl> + ? " does not provide enough " <nl> + : " provides too many " ) <nl> + + " names [ " + fieldOrder . size ( ) <nl> + " ] ( " <nl> + sort ( fieldOrder ) <nl> + " ) to match declared fields [ " + flist . size ( )
diff - - git a / . gitignore b / . gitignore <nl> index a9352f6 . . 21f5581 100644 <nl> - - - a / . gitignore <nl> + + + b / . gitignore <nl> @ @ - 29 , 4 + 29 , 5 @ @ pom - jna - platform . xml . asc <nl> * . iml <nl> / contrib / platform / $ { build . generated . sources . dir } / <nl> / contrib / platform / $ { build } / <nl> - / contrib / platform / nbproject / private / <nl> \ No newline at end of file <nl> + / contrib / platform / nbproject / private / <nl> + / nbproject / private / <nl> \ No newline at end of file <nl> diff - - git a / CHANGES . md b / CHANGES . md <nl> index 7dff5f7 . . 0b1f89b 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 10 , 7 + 10 , 7 @ @ Features <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> - <nl> + * [ # 1025 ] ( https : / / github . com / java - native - access / jna / pull / 1025 ) : Restore java 6 compatibility and introduce animal - sniffer to prevent regressions - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 5 . 0 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / build . xml b / build . xml <nl> index c680c17 . . a4923b8 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 1 , 5 + 1 , 8 @ @ <nl> < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> - < project name = " JNA " default = " default " basedir = " . " xmlns : artifact = " antlib : org . apache . maven . artifact . ant " xmlns : if = " ant : if " > <nl> + < project name = " JNA " default = " default " basedir = " . " <nl> + xmlns : artifact = " antlib : org . apache . maven . artifact . ant " <nl> + xmlns : as = " antlib : org . codehaus . mojo . animal _ sniffer " <nl> + xmlns : if = " ant : if " > <nl> < description > Builds and tests JNA < / description > <nl> <nl> < ! - - Default build compiles all platform - independent stuff as well <nl> @ @ - 136 , 6 + 139 , 18 @ @ <nl> < target name = " compile - test - single " depends = " compile - tests " / > <nl> < target name = " compile - single " depends = " compile " / > <nl> <nl> + < ! - - Prepare additional ant task - - > <nl> + < path id = " maven - ant - tasks . classpath " > <nl> + < pathelement location = " lib / animal - sniffer - ant - tasks - 1 . 17 . jar " / > <nl> + < pathelement location = " lib / maven - ant - tasks - 2 . 1 . 3 . jar " / > <nl> + < / path > <nl> + < typedef resource = " org / apache / maven / artifact / ant / antlib . xml " <nl> + uri = " antlib : org . apache . maven . artifact . ant " <nl> + classpathref = " maven - ant - tasks . classpath " / > <nl> + < typedef resource = " org / codehaus / mojo / animal _ sniffer / antlib . xml " <nl> + uri = " antlib : org . codehaus . mojo . animal _ sniffer " <nl> + classpathref = " maven - ant - tasks . classpath " / > <nl> + <nl> < target name = " - prepare - anttools " > <nl> < mkdir dir = " $ { build } / ant - tools " / > <nl> < javac classpath = " lib / ant . jar " <nl> @ @ - 1127 , 6 + 1142 , 17 @ @ cd . . <nl> < ! - - to where the test library ( testlib ) is found . - - > <nl> < target name = " test " depends = " - enable - native , jar , compile - tests " unless = " cross - compile " <nl> description = " Run all unit tests " > <nl> + <nl> + < echo > Checking JDK compatibility 1 . 6 < / echo > <nl> + <nl> + < echo > < / echo > <nl> + <nl> + < as : check - signature signature = " lib / java16 - 1 . 1 . signature " > <nl> + < path path = " $ { classes } " / > <nl> + < / as : check - signature > <nl> + <nl> + < echo > < / echo > <nl> + <nl> < property name = " test . fork " value = " yes " / > <nl> < property name = " test . forkmode " value = " perTest " / > <nl> <nl> @ @ - 1370 , 12 + 1396 , 6 @ @ cd . . <nl> < / artifact : mvn > <nl> < / target > <nl> <nl> - <nl> - < path id = " maven - ant - tasks . classpath " path = " lib / maven - ant - tasks - 2 . 1 . 3 . jar " / > <nl> - < typedef resource = " org / apache / maven / artifact / ant / antlib . xml " <nl> - uri = " antlib : org . apache . maven . artifact . ant " <nl> - classpathref = " maven - ant - tasks . classpath " / > <nl> - <nl> < ! - - NOTE : The ' deploy ' target works only if the version ( jna . version in build . xml ) ends in ' - SNAPSHOT ' . - - > <nl> < target name = " deploy " depends = " dist " description = " deploy snapshot version to Maven snapshot repository " > <nl> < artifact : mvn failonerror = " true " > <nl> diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index 2d2f654 . . 2b771e7 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 1 , 5 + 1 , 8 @ @ <nl> < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> - < project name = " platform " default = " default " basedir = " . " > <nl> + < project name = " platform " <nl> + default = " default " <nl> + basedir = " . " <nl> + xmlns : as = " antlib : org . codehaus . mojo . animal _ sniffer " > <nl> < description > Builds and tests platform - specific code . < / description > <nl> < import file = " nbproject / build - impl . xml " / > <nl> < ! - - <nl> @ @ - 63 , 7 + 66 , 16 @ @ <nl> nbproject / build - impl . xml file . <nl> <nl> - - > <nl> - <nl> + <nl> + < ! - - Prepare additional ant task - - > <nl> + < path id = " maven - ant - tasks . classpath " > <nl> + < pathelement location = " . . / . . / lib / animal - sniffer - ant - tasks - 1 . 17 . jar " / > <nl> + < pathelement location = " . . / . . / lib / maven - ant - tasks - 2 . 1 . 3 . jar " / > <nl> + < / path > <nl> + < typedef resource = " org / codehaus / mojo / animal _ sniffer / antlib . xml " <nl> + uri = " antlib : org . codehaus . mojo . animal _ sniffer " <nl> + classpathref = " maven - ant - tasks . classpath " / > <nl> + <nl> < ! - - the - init - macrodef - copylibs target superseeds the target defined in <nl> build - impl . xml . The classpath that the base copylibs target adds to the <nl> MANIFEST . MF interferes with spring - boot and tomcat - - > <nl> @ @ - 98 , 7 + 110 , 7 @ @ <nl> < / sequential > <nl> < / macrodef > <nl> < / target > <nl> - <nl> + <nl> < target name = " - pre - jar " > <nl> < tempfile deleteonexit = " true " destdir = " $ { build . dir } " property = " tmp . manifest . file " / > <nl> < manifest file = " $ { tmp . manifest . file } " mode = " replace " > <nl> @ @ - 140 , 6 + 152 , 17 @ @ com . sun . jna . platform . wince ; version = $ { osgi . version } <nl> < / target > <nl> <nl> < target name = " test " depends = " init , compile , compile - test , - pre - test - run " description = " Run platform unit tests . " > <nl> + <nl> + < echo > Checking JDK compatibility 1 . 6 < / echo > <nl> + <nl> + < echo > < / echo > <nl> + <nl> + < as : check - signature signature = " . . / . . / lib / java16 - 1 . 1 . signature " classpath = " $ { javac . classpath } " > <nl> + < path path = " $ { build . classes . dir } " / > <nl> + < / as : check - signature > <nl> + <nl> + < echo > < / echo > <nl> + <nl> < echo > Running platform tests : $ { test . src . dir } < / echo > <nl> < property name = " test . fork " value = " yes " / > <nl> < property name = " reports . junit " location = " $ { build } / reports / junit / $ { os . prefix } " / > <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java <nl> index 32d4d91 . . 88f1968 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java <nl> @ @ - 120 , 8 + 120 , 9 @ @ class Convert { <nl> Constructor < VARIANT > constructor = null ; <nl> if ( value ! = null ) { <nl> for ( Constructor < VARIANT > m : ( Constructor < VARIANT > [ ] ) VARIANT . class . getConstructors ( ) ) { <nl> - if ( m . getParameterCount ( ) > 0 <nl> - & & m . getParameterTypes ( ) [ 0 ] . isAssignableFrom ( value . getClass ( ) ) ) { <nl> + Class < ? > [ ] parameters = m . getParameterTypes ( ) ; <nl> + if ( parameters . length = = 1 <nl> + & & parameters [ 0 ] . isAssignableFrom ( value . getClass ( ) ) ) { <nl> constructor = m ; <nl> } <nl> } <nl> diff - - git a / lib / animal - sniffer - ant - tasks - 1 . 17 . jar b / lib / animal - sniffer - ant - tasks - 1 . 17 . jar <nl> new file mode 100644 <nl> index 0000000 . . 06e7d7d <nl> Binary files / dev / null and b / lib / animal - sniffer - ant - tasks - 1 . 17 . jar differ <nl> diff - - git a / lib / java16 - 1 . 1 . signature b / lib / java16 - 1 . 1 . signature <nl> new file mode 100644 <nl> index 0000000 . . c31bed6 <nl> Binary files / dev / null and b / lib / java16 - 1 . 1 . signature differ <nl> diff - - git a / src / com / sun / jna / NativeString . java b / src / com / sun / jna / NativeString . java <nl> index 675470a . . a8c6d55 100644 <nl> - - - a / src / com / sun / jna / NativeString . java <nl> + + + b / src / com / sun / jna / NativeString . java <nl> @ @ - 21 , 9 + 21 , 6 @ @ <nl> * / <nl> package com . sun . jna ; <nl> <nl> - import java . nio . CharBuffer ; <nl> - <nl> - <nl> / * * Provides a temporary allocation of an immutable C string <nl> * ( < code > const char * < / code > or < code > const wchar _ t * < / code > ) for use when <nl> * converting a Java String into a native memory function argument . <nl> @ @ - 111 , 9 + 108 , 7 @ @ class NativeString implements CharSequence , Comparable { <nl> @ Override <nl> public String toString ( ) { <nl> boolean wide = WIDE _ STRING . equals ( encoding ) ; <nl> - String s = wide ? " const wchar _ t * " : " const char * " ; <nl> - s + = " ( " + ( wide ? pointer . getWideString ( 0 ) : pointer . getString ( 0 , encoding ) ) + " ) " ; <nl> - return s ; <nl> + return ( wide ? pointer . getWideString ( 0 ) : pointer . getString ( 0 , encoding ) ) ; <nl> } <nl> <nl> public Pointer getPointer ( ) { <nl> @ @ - 132 , 7 + 127 , 7 @ @ class NativeString implements CharSequence , Comparable { <nl> <nl> @ Override <nl> public CharSequence subSequence ( int start , int end ) { <nl> - return CharBuffer . wrap ( toString ( ) ) . subSequence ( start , end ) ; <nl> + return toString ( ) . subSequence ( start , end ) ; <nl> } <nl> <nl> @ Override
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 34503b6 . . 7dff5f7 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 2 , 6 + 2 , 16 @ @ NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and AL 2 . 0 ( see LICENSE <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> + Release 5 . 0 . 1 ( Next release ) <nl> + = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> + <nl> + Features <nl> + - - - - - - - - <nl> + <nl> + Bug Fixes <nl> + - - - - - - - - - <nl> + <nl> + <nl> Release 5 . 0 . 0 <nl> = = = = = = = = = = = = = <nl> <nl> diff - - git a / build . xml b / build . xml <nl> index 48d3516 . . c680c17 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 57 , 7 + 57 , 7 @ @ <nl> < ! - - JNA library release version - android versionCode is derived from mjar / minor / revision - - > <nl> < property name = " jna . major " value = " 5 " / > <nl> < property name = " jna . minor " value = " 0 " / > <nl> - < property name = " jna . revision " value = " 0 " / > <nl> + < property name = " jna . revision " value = " 1 " / > <nl> < property name = " jna . build " value = " 0 " / > < ! - - $ { build . number } - - > <nl> < condition property = " version . suffix " value = " " else = " - SNAPSHOT " > <nl> < or >
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> index b55c3f2 . . 511ecfb 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> @ @ - 1932 , 7 + 1932 , 7 @ @ public interface Advapi32 extends StdCallLibrary { <nl> * <nl> * @ param hSCManager A handle to the service control manager <nl> * database . This handle is returned by the <nl> - * { @ link OpenSCManager } function , and must have <nl> + * { @ link # OpenSCManager } function , and must have <nl> * the { @ link Winsvc # SC _ MANAGER _ ENUMERATE _ SERVICE } <nl> * access right . For more information , see Service <nl> * Security and Access Rights . <nl> @ @ - 2006 , 14 + 2006 , 14 @ @ public interface Advapi32 extends StdCallLibrary { <nl> * @ param lpResumeHandle A pointer to a variable that , on input , <nl> * specifies the starting point of enumeration . <nl> * You must set this value to zero the first time <nl> - * the { @ link EnumServicesStatusEx } function is <nl> + * the { @ link # EnumServicesStatusEx } function is <nl> * called . On output , this value is zero if the <nl> * function succeeds . However , if the function <nl> * returns zero and the <nl> * { @ link Kernel32 # GetLastError } function returns <nl> * { @ link WinError # ERROR _ MORE _ DATA } , this value <nl> * indicates the next service entry to be read <nl> - * when the { @ link EnumServicesStatusEx } function <nl> + * when the { @ link # EnumServicesStatusEx } function <nl> * is called to retrieve the additional data . <nl> * @ param pszGroupName The load - order group name . If this parameter is <nl> * a string , the only services enumerated are <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> index d8d410b . . 7c7abfc 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 2575 , 7 + 2575 , 7 @ @ public abstract class Advapi32Util { <nl> / * * <nl> * @ param fileName path to the file <nl> * @ param compact if true compatible ACEs are merged if possible <nl> - * @ return <nl> + * @ return list of ACEs in the DACL of the referenced file <nl> * / <nl> 	 public static ACE _ HEADER [ ] getFileSecurity ( String fileName , <nl> 	 	 	 boolean compact ) { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinCrypt . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinCrypt . java <nl> index 10d5e55 . . 6e2e599 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinCrypt . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinCrypt . java <nl> @ @ - 1029 , 7 + 1029 , 8 @ @ public interface WinCrypt { <nl> * signer . <nl> * @ param hMsgCertStore A handle to the certificate store containing all <nl> * the certificates and CRLs in the signed message . <nl> - * @ return <nl> + * @ return Pointer to a read - only { @ link com . sun . jna . platform . win32 . WinCrypt . CERT _ CONTEXT } <nl> + * if a signer certificate is found , { @ code null } if the function fails . <nl> * / <nl> public CERT _ CONTEXT . ByReference callback ( Pointer pvGetArg , int dwCertEncodingType , <nl> CERT _ INFO pSignerId , <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java b / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> index 1bf9277 . . 42a999f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> @ @ - 842 , 7 + 842 , 7 @ @ public interface Winsvc { <nl> * / <nl> public String lpDisplayName ; <nl> / * * <nl> - * A { @ link Winsvc # SERVICE _ STATUS } structure that contains status <nl> + * A { @ link com . sun . jna . platform . win32 . Winsvc . SERVICE _ STATUS } structure that contains status <nl> * information for the lpServiceName service . <nl> * / <nl> public SERVICE _ STATUS ServiceStatus ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 999ab4e . . 61d2d78 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 35 , 6 + 35 , 7 @ @ Features <nl> * [ # 994 ] ( https : / / github . com / java - native - access / jna / issues / 994 ) : Added ` CoInitializeSecurity ` and ` CoSetProxyBlanket ` to ` c . s . j . platform . win32 . Ole32 ` , added new ` c . s . j . platform . win32 . Wbemcli ` classes needed to query WMI , and added a ` WbemcliUtil ` class implementing WMI queries . - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 1013 ] ( https : / / github . com / java - native - access / jna / pull / 1013 ) : Add automatic module name entries to manifest of jna and jna - platform - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 985 ] ( https : / / github . com / java - native - access / jna / issues / 985 ) : Improve handling of dynamicaly extracted native library . On Mac OS X systems ` ~ / Library / Application Support / JNA / temp ` and on other Unix like systems ` $ XDG _ CACHE _ DIR / JNA / temp ` ( Default value is : ` ~ / . cache / JNA / temp ` ) is used - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * Bind ` com . sun . jna . platform . win32 . Kernel32 # ExitProcess ` - [ @ Groostav ] ( https : / / github . com / Groostav ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index a409fea . . ccb9fde 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 3780 , 4 + 3780 , 12 @ @ public interface Kernel32 extends StdCallLibrary , WinNT , Wincon { <nl> * information , call { @ link com . sun . jna . Native # getLastError ( ) } . < / p > <nl> * / <nl> boolean ReleaseMutex ( HANDLE handle ) ; <nl> + 	 <nl> + / * * <nl> + * Ends the calling process ( this process ) and all its threads . <nl> + * <nl> + * From Java , this will will cause the process to terminate without <nl> + * execution of any shutdown hooks <nl> + * / <nl> + void ExitProcess ( int exitCode ) ; <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 0d5d5c0 . . 1110239 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 62 , 7 + 62 , 8 @ @ Bug Fixes <nl> < / ol > - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 958 ] ( https : / / github . com / java - native - access / jna / issues / 958 ) : Update for PR 863 : Old toolchains produce binaries without hard - / softfloat markers . Rasbian is missinng the markers and the oracle JDK is also affected . For hardfloat detection now also the Arm EABI section is also considered - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 974 ] ( https : / / github . com / java - native - access / jna / issues / 974 ) : If the callback code failed to attach to the JVM , this lead to a segfault . The success of attaching to the JVM was checked to late and an invalid ` JNIEnv ` pointer was used to access the JVM - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> - * [ # 1010 ] ( https : / / github . com / java - native - access / jna / issues / 1010 ) : Fix binding of ` lpAccessName ` parameter of ` com . sun . jna . platform . win32 . Mpr # WNetUseConnection ` <nl> + * [ # 1010 ] ( https : / / github . com / java - native - access / jna / issues / 1010 ) : Fix binding of ` lpAccessName ` parameter of ` com . sun . jna . platform . win32 . Mpr # WNetUseConnection ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 384 ] ( https : / / github . com / java - native - access / jna / issues / 384 ) : Switch default value for ` jna . nosys ` to ` true ` . By default then the embedded native library is used - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Breaking Changes <nl> - - - - - - - - - - - - - - - - <nl> diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index f9887a5 . . 2d2f654 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 178 , 7 + 178 , 6 @ @ com . sun . jna . platform . wince ; version = $ { osgi . version } <nl> < ! - - avoid VM conflicts with JNA protected mode - - > <nl> < env key = " $ { ld . preload . name } " file = " $ { libjsig } " / > <nl> < ! - - Ignore any system install of JNA - - > <nl> - < sysproperty key = " jna . nosys " value = " true " / > <nl> < sysproperty key = " jna . builddir " file = " $ { file . reference . jna . build } " / > <nl> < jvmarg value = " $ { vmopt . arch } " / > <nl> < classpath > < path path = " $ { run . test . classpath } " / > < path path = " $ { file . reference . jna . build } / test - classes " / > < / classpath > <nl> @ @ - 206 , 7 + 205 , 6 @ @ com . sun . jna . platform . wince ; version = $ { osgi . version } <nl> <nl> < ! - - One - off test to check field order definitions - - > <nl> < target name = " test - field - order " depends = " - pre - test - run - single " > <nl> - < ! - - @ todo How to ensure sys prop : jna . nosys = true is seen in tests ? - - > <nl> < ! - - < property name = " test . includes " value = " com / sun / jna / platform / * * / * . java " / > - - > <nl> < property name = " test . includes " value = " com / sun / jna / platform / StructureFieldOrderTest . java " / > <nl> < property name = " javac . includes " value = " * * / * " / > <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index e1e4d3d . . 5d38b0f 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 980 , 7 + 980 , 8 @ @ public final class Native implements Version { <nl> } <nl> } <nl> } <nl> - if ( ! Boolean . getBoolean ( " jna . nosys " ) ) { <nl> + String jnaNosys = System . getProperty ( " jna . nosys " , " true " ) ; <nl> + if ( ! Boolean . parseBoolean ( jnaNosys ) ) { <nl> try { <nl> if ( DEBUG _ JNA _ LOAD ) { <nl> System . out . println ( " Trying ( via loadLibrary ) " + libName ) ; <nl> diff - - git a / src / com / sun / jna / overview . html b / src / com / sun / jna / overview . html <nl> index 55ad03e . . 5453d44 100644 <nl> - - - a / src / com / sun / jna / overview . html <nl> + + + b / src / com / sun / jna / overview . html <nl> @ @ - 59 , 19 + 59 , 19 @ @ additional JNI or native code . <nl> JNA includes a small , platform - specific shared library which enables all <nl> native access . When the { @ link com . sun . jna . Native } class is first accessed , <nl> JNA will first attempt to load this library from the directories specified <nl> - in < code > jna . boot . library . path < / code > . If that fails , it will fall back to <nl> - loading from the system library paths . Finally it will attempt to extract the <nl> - stub library from from the JNA jar file , and load it . <nl> + in < code > jna . boot . library . path < / code > . If that fails and < code > jna . nosys = false < / code > <nl> + is set , it will fall back to loading from the system library paths . Finally it <nl> + will attempt to extract the stub library from from the JNA jar file , and load it . <nl> < p / > <nl> The < code > jna . boot . library . path < / code > property is mainly to support <nl> jna . jar being included in - Xbootclasspath , where <nl> < code > java . library . path < / code > and LD _ LIBRARY _ PATH are ignored . It is also <nl> useful for designating a version of the library to use in preference to any <nl> - which may already be installed on the system . <nl> + which may already be installed on the system . <nl> < p / > <nl> - Loading from the system may be disabled by < code > jna . nosys = true < / code > , <nl> + Loading from the system may be enabled by < code > jna . nosys = false < / code > , <nl> and unpacking from the jar file may be disabled by <nl> - < code > jna . nounpack = true < / code > . <nl> + < code > jna . nounpack = true < / code > . <nl> < p / > <nl> The library name used to search for JNA ' s native library may be altered <nl> by setting < code > jna . boot . library . name < / code > , which defaults to
diff - - git a / native / jnidispatch . rc b / native / jnidispatch . rc <nl> index bb388c3 . . 2e8f890 100644 <nl> - - - a / native / jnidispatch . rc <nl> + + + b / native / jnidispatch . rc <nl> @ @ - 1 , 6 + 1 , 30 @ @ <nl> + <nl> / / Resource file to generate version information for jnidispatch . dll <nl> - / / Copyright ( c ) 2008 - 2013 Timothy Wall <nl> / / Type : version <nl> + / / @ ( # ) jnidispatch . rc 1 . 1 2018 / 09 / 19 <nl> + / / Copyright ( c ) 2008 - 2018 Timothy Wall <nl> + / / <nl> + / / The contents of this file is dual - licensed under 2 <nl> + / / alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + / / Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + / / <nl> + / / You can freely decide which license you want to apply to <nl> + / / the project . <nl> + / / <nl> + / / You may obtain a copy of the LGPL License at : <nl> + / / <nl> + / / http : / / www . gnu . org / licenses / licenses . html <nl> + / / <nl> + / / A copy is also included in the downloadable source code package <nl> + / / containing JNA , in file " LGPL2 . 1 " . <nl> + / / <nl> + / / You may obtain a copy of the Apache License at : <nl> + / / <nl> + / / http : / / www . apache . org / licenses / <nl> + / / <nl> + / / A copy is also included in the downloadable source code package <nl> + / / containing JNA , in file " AL2 . 0 " . <nl> + / / <nl> <nl> / / Name : 1 <nl> LANGUAGE 0 , 0
diff - - git a / README . md b / README . md <nl> index 2096826 . . 9823ca1 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 64 , 15 + 64 , 15 @ @ Version 4 . 5 . 2 <nl> JNA <nl> - - - <nl> <nl> - [ ! [ Maven Central ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna / badge . svg ) ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna ) & nbsp ; [ jna . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna / 4 . 5 . 2 / jna - 4 . 5 . 2 . jar ) <nl> - <nl> + [ ! [ Maven Central ] ( https : / / img . shields . io / maven - central / v / net . java . dev . jna / jna . svg ? label = Maven % 20Central ) ] ( https : / / search . maven . org / artifact / net . java . dev . jna / jna / 4 . 5 . 2 / jar ) & nbsp ; [ jna - 4 . 5 . 2 . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna / 4 . 5 . 2 / jna - 4 . 5 . 2 . jar ) <nl> + <nl> This is the core artifact of JNA and contains only the binding library and the <nl> core helper classes . <nl> <nl> JNA Platform <nl> - - - - - - - - - - - - <nl> <nl> - [ ! [ Maven Central ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna - platform / badge . svg ) ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna - platform ) & nbsp ; [ jna - platform . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna - platform / 4 . 5 . 2 / jna - platform - 4 . 5 . 2 . jar ) <nl> + [ ! [ Maven Central ] ( https : / / img . shields . io / maven - central / v / net . java . dev . jna / jna - platform . svg ? label = Maven % 20Central ) ] ( https : / / search . maven . org / artifact / net . java . dev . jna / jna - platform / 4 . 5 . 2 / jar ) & nbsp ; [ jna - platform - 4 . 5 . 2 . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna - platform / 4 . 5 . 2 / jna - platform - 4 . 5 . 2 . jar ) <nl> <nl> This artifact holds cross - platform mappings and mappings for a number of commonly used platform <nl> functions , including a large number of Win32 mappings as well as a set of utility classes
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 2467a54 . . bfa1bba 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 31 , 10 + 31 , 10 @ @ Features <nl> * [ # 997 ] ( https : / / github . com / java - native - access / jna / issues / 997 ) : Added ` Sysinfo ` structure and function to ` c . s . j . platform . linux . LibC ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 1001 ] ( https : / / github . com / java - native - access / jna / pull / 1001 ) : Added overloads to ` c . s . j . platform . win32 . Advapi32Util ` methods which allow the caller to specify ` samDesiredExtra ` to request additional registry key security and access rights - [ @ camw ] ( https : / / github . com / camw ) . <nl> * [ # 1007 ] ( https : / / github . com / java - native - access / jna / pull / 1007 ) : Added OSGi export of Solaris package - [ @ swimmesberger ] ( https : / / github . com / swimmesberger ) . <nl> + * [ # 1003 ] ( https : / / github . com / java - native - access / jna / pull / 1003 ) : Allow ` NativeMapped ` to be used with enums - [ @ koraktor ] ( https : / / github . com / koraktor ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> - * [ # 1003 ] ( https : / / github . com / java - native - access / jna / pull / 1003 ) : Allow ` NativeMapped ` to be used with enums - [ @ koraktor ] ( https : / / github . com / koraktor ) <nl> * [ # 652 ] ( https : / / github . com / java - native - access / jna / issues / 652 ) : Dead Lock in class initialization - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 843 ] ( https : / / github . com / java - native - access / jna / pull / 843 ) : Correctly bind ` com . sun . jna . platform . win32 . SecBufferDesc ` and add convenience binding as ` com . sun . jna . platform . win32 . SspiUtil . ManagedSecBufferDesc ` . Bind SSPI functions ` InitializeSecurityContext ` , ` AcceptSecurityContext ` , ` QueryCredentialsAttributes ` , ` QuerySecurityPackageInfo ` , ` EncryptMessage ` , ` DecryptMessage ` , ` MakeSignature ` , ` VerifySignature ` in ` com . sun . jna . platform . win32 . Secur32 ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 863 ] ( https : / / github . com / java - native - access / jna / pull / 863 ) : Fix ARM softfloat / hardfloat detection by modifying armSoftFloat condition in ELFAnalyser . Before this fix a softfloat binary could be misdetected as hardfloat . - [ @ kunkun26 ] ( https : / / github . com / kunkun26 ) . <nl> diff - - git a / test / com / sun / jna / NativeMappedTestClass . java b / test / com / sun / jna / NativeMappedTestClass . java <nl> deleted file mode 100644 <nl> index 74e12f9 . . 0000000 <nl> - - - a / test / com / sun / jna / NativeMappedTestClass . java <nl> + + + / dev / null <nl> @ @ - 1 , 26 + 0 , 0 @ @ <nl> - package com . sun . jna ; <nl> - <nl> - class NativeMappedTestClass implements NativeMapped { <nl> - <nl> - private String name ; <nl> - <nl> - public NativeMappedTestClass ( ) { } <nl> - <nl> - @ Override <nl> - public Object fromNative ( Object nativeValue , FromNativeContext context ) { <nl> - NativeMappedTestClass object = new NativeMappedTestClass ( ) ; <nl> - object . name = ( String ) nativeValue ; <nl> - <nl> - return object ; <nl> - } <nl> - <nl> - @ Override <nl> - public Object toNative ( ) { <nl> - return name ; <nl> - } <nl> - <nl> - @ Override <nl> - public Class < ? > nativeType ( ) { <nl> - return String . class ; <nl> - } <nl> - } <nl> diff - - git a / test / com / sun / jna / NativedMappedConverterTest . java b / test / com / sun / jna / NativedMappedConverterTest . java <nl> deleted file mode 100644 <nl> index 0f72b2f . . 0000000 <nl> - - - a / test / com / sun / jna / NativedMappedConverterTest . java <nl> + + + / dev / null <nl> @ @ - 1 , 37 + 0 , 0 @ @ <nl> - package com . sun . jna ; <nl> - <nl> - import junit . framework . TestCase ; <nl> - <nl> - public class NativedMappedConverterTest extends TestCase { <nl> - <nl> - public void testDefaultValueForClass ( ) { <nl> - NativeMappedConverter converter = new NativeMappedConverter ( NativeMappedTestClass . class ) ; <nl> - <nl> - assertTrue ( converter . defaultValue ( ) instanceof NativeMappedTestClass ) ; <nl> - } <nl> - <nl> - public void testDefaultValueForEnum ( ) { <nl> - NativeMappedConverter converter = new NativeMappedConverter ( TestEnum . class ) ; <nl> - <nl> - assertSame ( converter . defaultValue ( ) , TestEnum . VALUE1 ) ; <nl> - } <nl> - <nl> - private enum TestEnum implements NativeMapped { VALUE1 , VALUE2 ; <nl> - <nl> - @ Override <nl> - public Object fromNative ( Object nativeValue , FromNativeContext context ) { <nl> - return values ( ) [ ( Integer ) nativeValue ] ; <nl> - } <nl> - <nl> - @ Override <nl> - public Object toNative ( ) { <nl> - return ordinal ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public Class < ? > nativeType ( ) { <nl> - return Integer . class ; <nl> - } <nl> - } <nl> - <nl> - } <nl> diff - - git a / test / com / sun / jna / NativedMappedTest . java b / test / com / sun / jna / NativedMappedTest . java <nl> new file mode 100644 <nl> index 0000000 . . 357f6b1 <nl> - - - / dev / null <nl> + + + b / test / com / sun / jna / NativedMappedTest . java <nl> @ @ - 0 , 0 + 1 , 108 @ @ <nl> + / * Copyright ( c ) 2018 Sebastian Staudt , Matthias Bl ä sing , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> + package com . sun . jna ; <nl> + <nl> + import junit . framework . TestCase ; <nl> + import static junit . framework . TestCase . assertEquals ; <nl> + <nl> + public class NativedMappedTest extends TestCase { <nl> + <nl> + public void testDefaultValueForClass ( ) { <nl> + NativeMappedConverter converter = new NativeMappedConverter ( NativeMappedTestClass . class ) ; <nl> + <nl> + assertTrue ( converter . defaultValue ( ) instanceof NativeMappedTestClass ) ; <nl> + } <nl> + <nl> + public void testDefaultValueForEnum ( ) { <nl> + NativeMappedConverter converter = new NativeMappedConverter ( TestEnum . class ) ; <nl> + <nl> + assertSame ( converter . defaultValue ( ) , TestEnum . VALUE1 ) ; <nl> + } <nl> + <nl> + public static interface EnumerationTestLibrary extends Library { <nl> + TestEnum returnInt32Argument ( TestEnum arg ) ; <nl> + <nl> + @ Structure . FieldOrder ( { " field " } ) <nl> + class MinTestStructure extends Structure { <nl> + public TestEnum field ; <nl> + } <nl> + MinTestStructure testStructurePointerArgument ( MinTestStructure s ) ; <nl> + } <nl> + <nl> + public void testEnumConversion ( ) throws Exception { <nl> + EnumerationTestLibrary lib = Native . load ( " testlib " , EnumerationTestLibrary . class ) ; <nl> + assertEquals ( " Enumeration improperly converted " , TestEnum . VALUE1 , lib . returnInt32Argument ( TestEnum . VALUE1 ) ) ; <nl> + assertEquals ( " Enumeration improperly converted " , TestEnum . VALUE2 , lib . returnInt32Argument ( TestEnum . VALUE2 ) ) ; <nl> + EnumerationTestLibrary . MinTestStructure struct = new EnumerationTestLibrary . MinTestStructure ( ) ; <nl> + struct . field = TestEnum . VALUE1 ; <nl> + assertEquals ( " Enumeration in structure improperly converted " , TestEnum . VALUE1 , lib . testStructurePointerArgument ( struct ) . field ) ; <nl> + struct . field = TestEnum . VALUE2 ; <nl> + assertEquals ( " Enumeration in structure improperly converted " , TestEnum . VALUE2 , lib . testStructurePointerArgument ( struct ) . field ) ; <nl> + } <nl> + <nl> + public enum TestEnum implements NativeMapped { <nl> + VALUE1 , VALUE2 ; <nl> + <nl> + @ Override <nl> + public Object fromNative ( Object nativeValue , FromNativeContext context ) { <nl> + return values ( ) [ ( Integer ) nativeValue ] ; <nl> + } <nl> + <nl> + @ Override <nl> + public Object toNative ( ) { <nl> + return ordinal ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public Class < ? > nativeType ( ) { <nl> + return Integer . class ; <nl> + } <nl> + } <nl> + <nl> + public static class NativeMappedTestClass implements NativeMapped { <nl> + <nl> + private String name ; <nl> + <nl> + public NativeMappedTestClass ( ) { <nl> + } <nl> + <nl> + @ Override <nl> + public Object fromNative ( Object nativeValue , FromNativeContext context ) { <nl> + NativeMappedTestClass object = new NativeMappedTestClass ( ) ; <nl> + object . name = ( String ) nativeValue ; <nl> + <nl> + return object ; <nl> + } <nl> + <nl> + @ Override <nl> + public Object toNative ( ) { <nl> + return name ; <nl> + } <nl> + <nl> + @ Override <nl> + public Class < ? > nativeType ( ) { <nl> + return String . class ; <nl> + } <nl> + } <nl> + }
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> index abe114c . . d8d410b 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 214 , 7 + 214 , 6 @ @ public abstract class Advapi32Util { <nl> <nl> 	 	 Account account = new Account ( ) ; <nl> 	 	 account . accountType = peUse . getPointer ( ) . getInt ( 0 ) ; <nl> - 	 	 account . name = accountName ; <nl> <nl> 	 	 String [ ] accountNamePartsBs = accountName . split ( " \ \ \ \ " , 2 ) ; <nl> 	 	 String [ ] accountNamePartsAt = accountName . split ( " @ " , 2 ) ; <nl> @ @ - 459 , 7 + 458 , 7 @ @ public abstract class Advapi32Util { <nl> 	 	 ArrayList < Account > userGroups = new ArrayList < Account > ( ) ; <nl> 	 	 / / make array of names <nl> 	 	 for ( SID _ AND _ ATTRIBUTES sidAndAttribute : groups . getGroups ( ) ) { <nl> - 	 	 	 Account group = null ; <nl> + 	 	 	 Account group ; <nl> 	 	 	 try { <nl> 	 	 	 	 group = Advapi32Util . getAccountBySid ( sidAndAttribute . Sid ) ; <nl> 	 	 	 } catch ( Exception e ) { <nl> @ @ - 2329 , 7 + 2328 , 7 @ @ public abstract class Advapi32Util { <nl> 	 * An event log record . <nl> 	 * / <nl> 	 public static class EventLogRecord { <nl> - 	 	 private EVENTLOGRECORD _ record = null ; <nl> + 	 	 private EVENTLOGRECORD _ record ; <nl> 	 	 private String _ source ; <nl> 	 	 private byte [ ] _ data ; <nl> 	 	 private String [ ] _ strings ; <nl> @ @ - 2463 , 14 + 2462 , 14 @ @ public abstract class Advapi32Util { <nl> 	 public static class EventLogIterator implements Iterable < EventLogRecord > , <nl> 	 	 	 Iterator < EventLogRecord > { <nl> <nl> - 	 	 private HANDLE _ h = null ; <nl> + 	 	 private HANDLE _ h ; <nl> 	 	 private Memory _ buffer = new Memory ( 1024 * 64 ) ; / / memory buffer to <nl> 	 	 	 	 	 	 	 	 	 	 	 	 	 	 / / store events <nl> 	 	 private boolean _ done = false ; / / no more events <nl> 	 	 private int _ dwRead = 0 ; / / number of bytes remaining in the current <nl> 	 	 	 	 	 	 	 	 	 / / buffer <nl> 	 	 private Pointer _ pevlr = null ; / / pointer to the current record <nl> - 	 	 private int _ flags = WinNT . EVENTLOG _ FORWARDS _ READ ; <nl> + 	 	 private int _ flags ; <nl> <nl> 	 	 public EventLogIterator ( String sourceName ) { <nl> 	 	 	 this ( null , sourceName , WinNT . EVENTLOG _ FORWARDS _ READ ) ; <nl> @ @ - 2582 , 8 + 2581 , 8 @ @ public abstract class Advapi32Util { <nl> 	 	 	 boolean compact ) { <nl> 	 	 int infoType = WinNT . DACL _ SECURITY _ INFORMATION ; <nl> 	 	 int nLength = 1024 ; <nl> - 	 	 boolean repeat = false ; <nl> - 	 	 Memory memory = null ; <nl> + 	 	 boolean repeat ; <nl> + 	 	 Memory memory ; <nl> <nl> 	 	 do { <nl> 	 	 	 repeat = false ; <nl> @ @ - 2934 , 7 + 2933 , 7 @ @ public abstract class Advapi32Util { <nl> * / <nl> public static SECURITY _ DESCRIPTOR _ RELATIVE getFileSecurityDescriptor ( File file , boolean getSACL ) <nl> { <nl> - 	 SECURITY _ DESCRIPTOR _ RELATIVE sdr = null ; <nl> + 	 SECURITY _ DESCRIPTOR _ RELATIVE sdr ; <nl> 	 Memory securityDesc = getSecurityDescriptorForObject ( file . getAbsolutePath ( ) . replaceAll ( " / " , " \ \ " ) , AccCtrl . SE _ OBJECT _ TYPE . SE _ FILE _ OBJECT , getSACL ) ; <nl> 	 sdr = new SECURITY _ DESCRIPTOR _ RELATIVE ( securityDesc ) ; <nl> 	 return sdr ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 5af6d5f . . c564ed4 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 467 , 7 + 467 , 7 @ @ Release 3 . 5 . 0 <nl> <nl> Features <nl> - - - - - - - - <nl> - * [ # 62 ] ( https : / / github . com / java - native - access / jna / issues / 62 ) If a callback is required to reside in a DLL , use [ ` DLLCallback ` ] ( http : / / twall . github . com / jna / 3 . 5 . 1 / javadoc / com / sun / jna / win32 / DLLCallback . html ) to tag your Callback object - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ # 62 ] ( https : / / github . com / java - native - access / jna / issues / 62 ) If a callback is required to reside in a DLL , use [ ` DLLCallback ` ] ( https : / / java - native - access . github . io / jna / 3 . 5 . 1 / javadoc / com / sun / jna / win32 / DLLCallback . html ) to tag your Callback object - [ @ twall ] ( https : / / github . com / twall ) . <nl> * ` Structure . getFieldOrder ( ) ` supersedes ` Structure . setFieldOrder ( ) ` and is now required - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Search ` ~ / Library / Frameworks ` and ` / Library / Frameworks ` on OSX - [ @ shaneholloway ] ( https : / / github . com / shaneholloway ) . <nl> * Automatic cleanup of native threads ( based on suggestions from neil smith ) - [ @ twall ] ( https : / / github . com / twall ) .
diff - - git a / build . xml b / build . xml <nl> index 1c0969a . . 11ac583 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> - < project name = " JNA " default = " default " basedir = " . " xmlns : artifact = " antlib : org . apache . maven . artifact . ant " > <nl> + < project name = " JNA " default = " default " basedir = " . " xmlns : artifact = " antlib : org . apache . maven . artifact . ant " xmlns : if = " ant : if " > <nl> < description > Builds and tests JNA < / description > <nl> <nl> < ! - - Default build compiles all platform - independent stuff as well <nl> @ @ - 1127 , 6 + 1127 , 12 @ @ cd . . <nl> < target name = " test " depends = " - enable - native , jar , compile - tests " unless = " cross - compile " <nl> description = " Run all unit tests " > <nl> < property name = " test . fork " value = " yes " / > <nl> + < property name = " test . forkmode " value = " perTest " / > <nl> + <nl> + < condition property = " test . jdwp " value = " - Xrunjdwp : transport = dt _ socket , address = $ { test . debugport } , server = y , suspend = y " > <nl> + < isset property = " test . debugport " / > <nl> + < / condition > <nl> + <nl> < property name = " reports . junit " location = " $ { reports } / junit / $ { os . prefix } " / > <nl> < property name = " results . junit " location = " $ { build } / junit - results / $ { os . prefix } " / > <nl> < mkdir dir = " $ { results . junit } " / > <nl> @ @ - 1148 , 6 + 1154 , 7 @ @ cd . . <nl> < / and > <nl> < / condition > <nl> < property name = " tests . platform " value = " " / > <nl> + < property name = " tests . include " value = " com / sun / jna / * Test . java " / > <nl> < property name = " tests . exclude " value = " " / > <nl> < property name = " tests . exclude - patterns " value = " " / > <nl> < condition property = " java . awt . headless " value = " true " > <nl> @ @ - 1156 , 8 + 1163 , 8 @ @ cd . . <nl> < propertyset id = " headless " > <nl> < propertyref prefix = " java . awt . headless " / > <nl> < / propertyset > <nl> - < junit fork = " $ { test . fork } " failureproperty = " testfailure " tempdir = " $ { build } " > <nl> - < ! - - < jvmarg value = " - Xrunjdwp : transport = dt _ socket , address = 8787 , server = y , suspend = y " / > - - > <nl> + < junit fork = " $ { test . fork } " forkmode = " $ { test . forkmode } " failureproperty = " testfailure " tempdir = " $ { build } " > <nl> + < jvmarg if : set = " test . jdwp " value = " $ { test . jdwp } " / > <nl> < ! - - optionally run headless - - > <nl> < syspropertyset refid = " headless " / > <nl> < ! - - avoid VM conflicts with JNA protected mode - - > <nl> @ @ - 1173 , 7 + 1180 , 7 @ @ cd . . <nl> < formatter type = " xml " / > <nl> < batchtest todir = " $ { results . junit } " > <nl> < fileset dir = " $ { test . src } " excludes = " $ { tests . exclude - patterns } " > <nl> - < include name = " com / sun / jna / * Test . java " / > <nl> + < include name = " $ { tests . include } " / > <nl> < include name = " $ { tests . platform } " / > <nl> < exclude name = " $ { tests . exclude } " / > <nl> < / fileset >
diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 072aed4 . . 6cee809 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 653 , 7 + 653 , 7 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray args , <nl> int err = GET _ LAST _ ERROR ( ) ; <nl> JNA _ set _ last _ error ( env , err ) ; <nl> if ( ( flags & THROW _ LAST _ ERROR ) & & err ) { <nl> - char emsg [ MSG _ SIZE ] ; <nl> + char emsg [ MSG _ SIZE - 3 / * literal characters * / - 10 / * max length of % d * / ] ; <nl> snprintf ( msg , sizeof ( msg ) , " [ % d ] % s " , err , STR _ ERROR ( err , emsg , sizeof ( emsg ) ) ) ; <nl> throw _ type = ELastError ; <nl> throw _ msg = msg ; <nl> @ @ - 1896 , 7 + 1896 , 7 @ @ dispatch _ direct ( ffi _ cif * cif , void * volatile resp , void * * argp , void * cdata ) { <nl> int err = GET _ LAST _ ERROR ( ) ; <nl> JNA _ set _ last _ error ( env , err ) ; <nl> if ( data - > throw _ last _ error & & err ) { <nl> - char emsg [ MSG _ SIZE ] ; <nl> + char emsg [ MSG _ SIZE - 3 / * literal characters * / - 10 / * max length of % d * / ] ; <nl> snprintf ( msg , sizeof ( msg ) , " [ % d ] % s " , err , STR _ ERROR ( err , emsg , sizeof ( emsg ) ) ) ; <nl> throw _ type = ELastError ; <nl> throw _ msg = msg ; <nl> @ @ - 3096 , 7 + 3096 , 7 @ @ Java _ com _ sun _ jna _ Native _ getWindowHandle0 ( JNIEnv * UNUSED _ JAWT ( env ) , jclass UNUSED <nl> return - 1 ; <nl> } <nl> if ( ( pJAWT _ GetAWT = ( void * ) FIND _ ENTRY ( jawt _ handle , METHOD _ NAME ) ) = = NULL ) { <nl> - char msg [ MSG _ SIZE ] , buf [ MSG _ SIZE ] ; <nl> + char msg [ MSG _ SIZE ] , buf [ MSG _ SIZE - 31 / * literal characters * / - sizeof ( METHOD _ NAME ) ] ; <nl> snprintf ( msg , sizeof ( msg ) , " Error looking up JAWT method % s : % s " , <nl> METHOD _ NAME , LOAD _ ERROR ( buf , sizeof ( buf ) ) ) ; <nl> throwByName ( env , EUnsatisfiedLink , msg ) ; <nl> diff - - git a / native / testlib . c b / native / testlib . c <nl> index 575cf01 . . 609ed75 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 805 , 7 + 805 , 7 @ @ callCallbackWithStructByValue ( TestStructureByValue ( * func ) ( TestStructureByValue ) <nl> <nl> EXPORT callback _ t <nl> callCallbackWithCallback ( cb _ callback _ t cb ) { <nl> - return ( * cb ) ( ( callback _ t ) cb ) ; <nl> + return ( * cb ) ( ( callback _ t ) ( void * ) cb ) ; <nl> } <nl> <nl> static int32 _ t
diff - - git a / build . xml b / build . xml <nl> index bc20259 . . 1c0969a 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 12 , 7 + 12 , 7 @ @ <nl> ( cross - compile currently only configured / tested on w32ce - arm and <nl> android targets ) <nl> <nl> - Use ANT _ OPTS = - Dskip - native = false to build native parts , or directly <nl> + Use ANT _ OPTS = - D - native = true to build native parts , or directly <nl> invoke the native or test targets <nl> Use ANT _ OPTS = - Dheadless to run tests headless <nl> Use ANT _ OPTS = - Drelease to stage a final , non - snapshot version <nl> diff - - git a / www / Contributing . md b / www / Contributing . md <nl> index c0735dc . . e934a8e 100644 <nl> - - - a / www / Contributing . md <nl> + + + b / www / Contributing . md <nl> @ @ - 17 , 7 + 17 , 8 @ @ gcc , autotools ( for libffi ) , ant ( 1 . 8 + ) , a JDK ( 1 . 4 + ) , and a few other typical <nl> command - line utilities available . Feel free to report any issues , we ' ll <nl> generally pull build fixes immediately . <nl> <nl> - Native bits are built by passing ` - Dskip - native = false ` to ` ant ` . It ' s <nl> + Native bits are built by invoking ` ant native ` . The build system is configured <nl> + to rebuild the native library automaticly if necessary . It ' s <nl> safe to skip the native build as long as your modifications are restricted to <nl> Java code . <nl>
diff - - git a / CHANGES . md b / CHANGES . md <nl> index c9d585b . . dfedc76 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 26 , 6 + 26 , 7 @ @ Features <nl> * [ # 983 ] ( https : / / github . com / java - native - access / jna / issues / 983 ) : Added ` GetIfEntry ` , ` GetIfEntry2 ` , and ` GetNetworkParams ` and supporting structures ` MIB _ IFROW ` , ` MIB _ IF _ ROW2 ` , and ` FIXED _ INFO ` to ` c . s . j . platform . win32 . IPHlpAPI . java ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 984 ] ( https : / / github . com / java - native - access / jna / issues / 984 ) : Added ` CM _ Locate _ DevNode ` , ` CM _ Get _ Parent ` , ` CM _ Get _ Child ` , ` CM _ Get _ Sibling ` , ` CM _ Get _ Device _ ID ` , and ` CM _ Get _ Device _ ID _ Size ` to ` c . s . j . platform . win32 . Cfgmgr32 . java ` and a ` c . s . j . platform . win32 . Cfgmgr32Util ` class for ` CM _ Get _ Device _ ID ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 988 ] ( https : / / github . com / java - native - access / jna / issues / 988 ) : Added ` PdhLookupPerfIndexByEnglishName ` to ` c . s . j . platform . win32 . PdhUtil ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> + * [ # 992 ] ( https : / / github . com / java - native - access / jna / pull / 992 ) : Improve stability of windows tests and add appveyor configuration for windows CI builds - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / README . md b / README . md <nl> index cf4e61e . . 2096826 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 1 , 6 + 1 , 7 @ @ <nl> ! [ Java Native Access - JNA ] ( https : / / github . com / java - native - access / jna / raw / master / www / images / jnalogo . jpg " Java Native Access - JNA " ) <nl> <nl> [ ! [ Build Status ] ( https : / / travis - ci . org / java - native - access / jna . svg ? branch = master ) ] ( https : / / travis - ci . org / java - native - access / jna ) <nl> + [ ! [ Build status ] ( https : / / ci . appveyor . com / api / projects / status / j6vmpjrw5iktb8iu / branch / master ? svg = true ) ] ( https : / / ci . appveyor . com / project / dblock / jna - gsxuq / branch / master ) <nl> <nl> Java Native Access ( JNA ) <nl> = = = = = = = = = = = = = = = = = = = = = = = =
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Pdh . java b / contrib / platform / src / com / sun / jna / platform / win32 / Pdh . java <nl> index f63fae7 . . 82d13a8 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Pdh . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Pdh . java <nl> @ @ - 23 , 8 + 23 , 6 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> - import java . util . List ; <nl> - <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> @ @ - 55 , 6 + 53 , 12 @ @ public interface Pdh extends StdCallLibrary { <nl> / * * Maximum full counter log name length . * / <nl> int PDH _ MAX _ DATASOURCE _ PATH = 1024 ; <nl> <nl> + int PDH _ MORE _ DATA = 0x800007D2 ; <nl> + int PDH _ INVALID _ ARGUMENT = 0xC0000BBD ; <nl> + int PDH _ MEMORY _ ALLOCATION _ FAILURE = 0xC0000BBB ; <nl> + int PDH _ CSTATUS _ NO _ MACHINE = 0x800007D0 ; <nl> + int PDH _ CSTATUS _ NO _ OBJECT = 0xC0000BB8 ; <nl> + <nl> / * TODO <nl> * LPVOID CALLBACK AllocateMemory ( _ In _ SIZE _ T AllocSize , _ In _ LPVOID pContext ) <nl> * void CALLBACK FreeMemory ( LPVOID pBuffer , LPVOID pContext ) <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / PdhUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / PdhUtil . java <nl> index 4143e41 . . b246874 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / PdhUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / PdhUtil . java <nl> @ @ - 30 , 6 + 30 , 7 @ @ import com . sun . jna . Memory ; <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> + import java . util . Collections ; <nl> <nl> / * * <nl> * Pdh utility API . <nl> @ @ - 61 , 16 + 62 , 23 @ @ public abstract class PdhUtil { <nl> public static String PdhLookupPerfNameByIndex ( String szMachineName , int dwNameIndex ) { <nl> / / Call once to get required buffer size <nl> DWORDByReference pcchNameBufferSize = new DWORDByReference ( new DWORD ( 0 ) ) ; <nl> - Pdh . INSTANCE . PdhLookupPerfNameByIndex ( szMachineName , dwNameIndex , null , pcchNameBufferSize ) ; <nl> - <nl> + int result = Pdh . INSTANCE . PdhLookupPerfNameByIndex ( szMachineName , dwNameIndex , null , pcchNameBufferSize ) ; <nl> + if ( result ! = WinError . ERROR _ SUCCESS & & result ! = Pdh . PDH _ MORE _ DATA ) { <nl> + throw new PdhException ( result ) ; <nl> + } <nl> + <nl> / / Can ' t allocate 0 memory <nl> if ( pcchNameBufferSize . getValue ( ) . intValue ( ) < 1 ) { <nl> return " " ; <nl> } <nl> / / Allocate buffer and call again <nl> Memory mem = new Memory ( pcchNameBufferSize . getValue ( ) . intValue ( ) * CHAR _ TO _ BYTES ) ; <nl> - Pdh . INSTANCE . PdhLookupPerfNameByIndex ( szMachineName , dwNameIndex , mem , pcchNameBufferSize ) ; <nl> + result = Pdh . INSTANCE . PdhLookupPerfNameByIndex ( szMachineName , dwNameIndex , mem , pcchNameBufferSize ) ; <nl> <nl> + if ( result ! = WinError . ERROR _ SUCCESS ) { <nl> + throw new PdhException ( result ) ; <nl> + } <nl> + <nl> / / Convert buffer to Java String <nl> if ( CHAR _ TO _ BYTES = = 1 ) { <nl> return mem . getString ( 0 ) ; <nl> @ @ - 113 , 9 + 121 , 8 @ @ public abstract class PdhUtil { <nl> <nl> / * * <nl> * Utility method to call Pdh ' s PdhEnumObjectItems that allocates the <nl> - * required memory for the mszCounterList parameter based on the type <nl> - * mapping used , calls to PdhEnumObjectItems , and returns the received lists <nl> - * of strings . <nl> + * required memory for the lists parameters based on the type mapping used , <nl> + * calls to PdhEnumObjectItems , and returns the received lists of strings . <nl> * <nl> * @ param szDataSource <nl> * String that specifies the name of the log file used to <nl> @ @ - 137 , 113 + 144 , 135 @ @ public abstract class PdhUtil { <nl> * returned . <nl> * @ return Returns a List of Strings of the counters for the object . <nl> * / <nl> - public static List < String > PdhEnumObjectItemCounters ( String szDataSource , String szMachineName , String szObjectName , <nl> + public static PdhEnumObjectItems PdhEnumObjectItems ( String szDataSource , String szMachineName , String szObjectName , <nl> int dwDetailLevel ) { <nl> List < String > counters = new ArrayList < String > ( ) ; <nl> + List < String > instances = new ArrayList < String > ( ) ; <nl> <nl> / / Call once to get string lengths <nl> DWORDByReference pcchCounterListLength = new DWORDByReference ( new DWORD ( 0 ) ) ; <nl> DWORDByReference pcchInstanceListLength = new DWORDByReference ( new DWORD ( 0 ) ) ; <nl> - Pdh . INSTANCE . PdhEnumObjectItems ( szDataSource , szMachineName , szObjectName , null , pcchCounterListLength , null , <nl> + int result = Pdh . INSTANCE . PdhEnumObjectItems ( szDataSource , szMachineName , szObjectName , null , pcchCounterListLength , null , <nl> pcchInstanceListLength , dwDetailLevel , 0 ) ; <nl> + if ( result ! = WinError . ERROR _ SUCCESS & & result ! = Pdh . PDH _ MORE _ DATA ) { <nl> + throw new PdhException ( result ) ; <nl> + } <nl> <nl> - / / Can ' t allocate 0 memory if no counters <nl> - if ( pcchCounterListLength . getValue ( ) . intValue ( ) < 1 ) { <nl> - return counters ; <nl> + Memory mszCounterList = null ; <nl> + Memory mszInstanceList = null ; <nl> + <nl> + if ( pcchCounterListLength . getValue ( ) . intValue ( ) > 0 ) { <nl> + mszCounterList = new Memory ( pcchCounterListLength . getValue ( ) . intValue ( ) * CHAR _ TO _ BYTES ) ; <nl> + } <nl> + <nl> + if ( pcchInstanceListLength . getValue ( ) . intValue ( ) > 0 ) { <nl> + mszInstanceList = new Memory ( pcchInstanceListLength . getValue ( ) . intValue ( ) * CHAR _ TO _ BYTES ) ; <nl> + } <nl> + <nl> + result = Pdh . INSTANCE . PdhEnumObjectItems ( szDataSource , szMachineName , szObjectName , mszCounterList , <nl> + pcchCounterListLength , mszInstanceList , pcchInstanceListLength , dwDetailLevel , 0 ) ; <nl> + <nl> + if ( result ! = WinError . ERROR _ SUCCESS ) { <nl> + throw new PdhException ( result ) ; <nl> } <nl> - / / Allocate memory and call again to populate strings <nl> - Memory mszCounterList = new Memory ( pcchCounterListLength . getValue ( ) . intValue ( ) * CHAR _ TO _ BYTES ) ; <nl> - / / Don ' t need the instances <nl> - pcchInstanceListLength . getValue ( ) . setValue ( 0 ) ; <nl> - Pdh . INSTANCE . PdhEnumObjectItems ( szDataSource , szMachineName , szObjectName , mszCounterList , <nl> - pcchCounterListLength , null , pcchInstanceListLength , dwDetailLevel , 0 ) ; <nl> <nl> / / Fetch counters <nl> - int offset = 0 ; <nl> - while ( offset < mszCounterList . size ( ) ) { <nl> - String s = null ; <nl> - if ( CHAR _ TO _ BYTES = = 1 ) { <nl> - s = mszCounterList . getString ( offset ) ; <nl> - } else { <nl> - s = mszCounterList . getWideString ( offset ) ; <nl> + if ( mszCounterList ! = null ) { <nl> + int offset = 0 ; <nl> + while ( offset < mszCounterList . size ( ) ) { <nl> + String s = null ; <nl> + if ( CHAR _ TO _ BYTES = = 1 ) { <nl> + s = mszCounterList . getString ( offset ) ; <nl> + } else { <nl> + s = mszCounterList . getWideString ( offset ) ; <nl> + } <nl> + / / list ends with double null <nl> + if ( s . isEmpty ( ) ) { <nl> + break ; <nl> + } <nl> + counters . add ( s ) ; <nl> + / / Increment for string + null terminator <nl> + offset + = ( s . length ( ) + 1 ) * CHAR _ TO _ BYTES ; <nl> } <nl> - / / list ends with double null <nl> - if ( s . isEmpty ( ) ) { <nl> - break ; <nl> + } <nl> + <nl> + if ( mszInstanceList ! = null ) { <nl> + int offset = 0 ; <nl> + while ( offset < mszInstanceList . size ( ) ) { <nl> + String s = null ; <nl> + if ( CHAR _ TO _ BYTES = = 1 ) { <nl> + s = mszInstanceList . getString ( offset ) ; <nl> + } else { <nl> + s = mszInstanceList . getWideString ( offset ) ; <nl> + } <nl> + / / list ends with double null <nl> + if ( s . isEmpty ( ) ) { <nl> + break ; <nl> + } <nl> + instances . add ( s ) ; <nl> + / / Increment for string + null terminator <nl> + offset + = ( s . length ( ) + 1 ) * CHAR _ TO _ BYTES ; <nl> } <nl> - counters . add ( s ) ; <nl> - / / Increment for string + null terminator <nl> - offset + = ( s . length ( ) + 1 ) * CHAR _ TO _ BYTES ; <nl> } <nl> <nl> - return counters ; <nl> + return new PdhEnumObjectItems ( counters , instances ) ; <nl> } <nl> <nl> + <nl> / * * <nl> - * Utility method to call Pdh ' s PdhEnumObjectItems that allocates the <nl> - * required memory for the mszInstanceList parameters based on the type <nl> - * mapping used , calls to PdhEnumObjectItems , and returns the received lists <nl> - * of strings . <nl> - * <nl> - * @ param szDataSource <nl> - * String that specifies the name of the log file used to <nl> - * enumerate the counter and instance names . If NULL , the <nl> - * function uses the computer specified in the szMachineName <nl> - * parameter to enumerate the names . <nl> - * @ param szMachineName <nl> - * String that specifies the name of the computer that contains <nl> - * the counter and instance names that you want to enumerate . <nl> - * Include the leading slashes in the computer name , for example , <nl> - * \ \ computername . If the szDataSource parameter is NULL , you can <nl> - * set szMachineName to NULL to specify the local computer . <nl> - * @ param szObjectName <nl> - * String that specifies the name of the object whose counter and <nl> - * instance names you want to enumerate . <nl> - * @ param dwDetailLevel <nl> - * Detail level of the performance items to return . All items <nl> - * that are of the specified detail level or less will be <nl> - * returned . <nl> - * @ return Returns a Lists of Strings of the instances of the object . <nl> + * Holder Object for PdhEnumObjectsItems . The embedded lists are modifiable <nl> + * lists and can be accessed through the { @ link # getCounters ( ) } and <nl> + * { @ link # getInstances ( ) } accessors . <nl> * / <nl> - public static List < String > PdhEnumObjectItemInstances ( String szDataSource , String szMachineName , <nl> - String szObjectName , int dwDetailLevel ) { <nl> - List < String > instances = new ArrayList < String > ( ) ; <nl> + public static class PdhEnumObjectItems { <nl> + private final List < String > counters ; <nl> + private final List < String > instances ; <nl> <nl> - / / Call once to get string lengths <nl> - DWORDByReference pcchCounterListLength = new DWORDByReference ( new DWORD ( 0 ) ) ; <nl> - DWORDByReference pcchInstanceListLength = new DWORDByReference ( new DWORD ( 0 ) ) ; <nl> - Pdh . INSTANCE . PdhEnumObjectItems ( szDataSource , szMachineName , szObjectName , null , pcchCounterListLength , null , <nl> - pcchInstanceListLength , dwDetailLevel , 0 ) ; <nl> + public PdhEnumObjectItems ( List < String > counters , List < String > instances ) { <nl> + this . counters = copyAndEmptyListForNullList ( counters ) ; <nl> + this . instances = copyAndEmptyListForNullList ( instances ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return the embedded counters list , all calls to this function receive <nl> + * the same list and thus share modifications <nl> + * / <nl> + public List < String > getCounters ( ) { <nl> + return counters ; <nl> + } <nl> <nl> - / / Can ' t allocate 0 memory if no instances <nl> - if ( pcchInstanceListLength . getValue ( ) . intValue ( ) < 1 ) { <nl> + / * * <nl> + * @ return the embedded instances list , all calls to this function receive <nl> + * the same list and thus share modifications <nl> + * / <nl> + public List < String > getInstances ( ) { <nl> return instances ; <nl> } <nl> - / / Allocate memory and call again to populate strings <nl> - Memory mszInstanceList = new Memory ( pcchInstanceListLength . getValue ( ) . intValue ( ) * CHAR _ TO _ BYTES ) ; <nl> - / / Don ' t need the counters <nl> - pcchCounterListLength . getValue ( ) . setValue ( 0 ) ; <nl> - Pdh . INSTANCE . PdhEnumObjectItems ( szDataSource , szMachineName , szObjectName , null , pcchCounterListLength , <nl> - mszInstanceList , pcchInstanceListLength , dwDetailLevel , 0 ) ; <nl> - <nl> - / / Fetch instances <nl> - int offset = 0 ; <nl> - while ( offset < mszInstanceList . size ( ) ) { <nl> - String s = null ; <nl> - if ( CHAR _ TO _ BYTES = = 1 ) { <nl> - s = mszInstanceList . getString ( offset ) ; <nl> + <nl> + private List < String > copyAndEmptyListForNullList ( List < String > inputList ) { <nl> + if ( inputList = = null ) { <nl> + return new ArrayList < String > ( ) ; <nl> } else { <nl> - s = mszInstanceList . getWideString ( offset ) ; <nl> - } <nl> - / / list ends with double null <nl> - if ( s . isEmpty ( ) ) { <nl> - break ; <nl> + return new ArrayList < String > ( inputList ) ; <nl> } <nl> - instances . add ( s ) ; <nl> - / / Increment for string + null terminator <nl> - offset + = ( s . length ( ) + 1 ) * CHAR _ TO _ BYTES ; <nl> } <nl> <nl> - return instances ; <nl> + @ Override <nl> + public String toString ( ) { <nl> + return " PdhEnumObjectItems { " + " counters = " + counters + " , instances = " + instances + ' } ' ; <nl> + } <nl> + } <nl> + <nl> + public static final class PdhException extends RuntimeException { <nl> + private final int errorCode ; <nl> + <nl> + public PdhException ( int errorCode ) { <nl> + super ( String . format ( " Pdh call failed with error code 0x % 08X " , errorCode ) ) ; <nl> + this . errorCode = errorCode ; <nl> + } <nl> + <nl> + public int getErrorCode ( ) { <nl> + return errorCode ; <nl> + } <nl> } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / PdhTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / PdhTest . java <nl> index a3462c7 . . e78f632 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / PdhTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / PdhTest . java <nl> @ @ - 16 , 7 + 16 , 6 @ @ import java . io . PrintStream ; <nl> import java . util . Collection ; <nl> import java . util . HashMap ; <nl> import java . util . LinkedList ; <nl> - import java . util . List ; <nl> import java . util . Map ; <nl> <nl> import org . junit . Test ; <nl> @ @ - 24 , 6 + 23 , 8 @ @ import org . junit . Test ; <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . platform . win32 . Pdh . PDH _ COUNTER _ PATH _ ELEMENTS ; <nl> import com . sun . jna . platform . win32 . Pdh . PDH _ RAW _ COUNTER ; <nl> + import com . sun . jna . platform . win32 . PdhUtil . PdhEnumObjectItems ; <nl> + import com . sun . jna . platform . win32 . PdhUtil . PdhException ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> @ @ - 182 , 21 + 183 , 32 @ @ public class PdhTest extends AbstractWin32TestSupport { <nl> @ Test <nl> public void testEnumObjectItems ( ) { <nl> if ( AbstractWin32TestSupport . isEnglishLocale ) { <nl> - 	 	 	 String processorStr = " Processor " ; <nl> + String processorStr = " Processor " ; <nl> String processorTimeStr = " % Processor Time " ; <nl> <nl> / / Fetch the counter and instance names <nl> - 	 	 	 List < String > instances = PdhUtil . PdhEnumObjectItemInstances ( null , null , processorStr , 100 ) ; <nl> + PdhEnumObjectItems objects = PdhUtil . PdhEnumObjectItems ( null , null , processorStr , 100 ) ; <nl> <nl> - / / Should have at least one processor and total instance <nl> - 	 	 	 assertTrue ( instances . contains ( " 0 " ) ) ; <nl> - 	 	 	 assertTrue ( instances . contains ( " _ Total " ) ) ; <nl> + assertTrue ( objects . getInstances ( ) . contains ( " 0 " ) ) ; <nl> + assertTrue ( objects . getInstances ( ) . contains ( " _ Total " ) ) ; <nl> <nl> / / Should have a " % Processor Time " counter <nl> - 	 	 	 List < String > counters = PdhUtil . PdhEnumObjectItemCounters ( null , null , processorStr , 100 ) ; <nl> - 	 	 	 assertTrue ( counters . contains ( processorTimeStr ) ) ; <nl> + assertTrue ( objects . getCounters ( ) . contains ( processorTimeStr ) ) ; <nl> } else { <nl> System . err . println ( " testEnumObjectItems test can only be run with english locale . " ) ; <nl> } <nl> } <nl> + <nl> + @ Test <nl> + public void testEnumObjectItemsNonExisting ( ) { <nl> + Exception caughtException = null ; <nl> + try { <nl> + PdhUtil . PdhEnumObjectItems ( null , null , " Unknown counter " , 100 ) ; <nl> + } catch ( Exception ex ) { <nl> + caughtException = ex ; <nl> + } <nl> + assertNotNull ( caughtException ) ; <nl> + assertTrue ( caughtException instanceof PdhException ) ; <nl> + assertEquals ( Pdh . PDH _ CSTATUS _ NO _ OBJECT , ( ( PdhException ) caughtException ) . getErrorCode ( ) ) ; <nl> + } <nl> }
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> index ebd371e . . 74f6b78 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> @ @ - 379 , 13 + 379 , 18 @ @ public class User32Test extends AbstractWin32TestSupport { <nl> assertTrue ( " GetCursorPos should return true " , result ) ; <nl> assertTrue ( " X coordinate in POINT should be > = 0 " , cursorPos . x > = 0 ) ; <nl> <nl> - boolean scpResult = User32 . INSTANCE . SetCursorPos ( cursorPos . x - 20 , cursorPos . y ) ; <nl> + boolean scpResult = User32 . INSTANCE . SetCursorPos ( cursorPos . x + 20 , cursorPos . y ) ; <nl> assertTrue ( " SetCursorPos should return true " , scpResult ) ; <nl> <nl> POINT cursorPos2 = new POINT ( ) ; <nl> boolean result2 = User32 . INSTANCE . GetCursorPos ( cursorPos2 ) ; <nl> assertTrue ( " GetCursorPos should return true " , result2 ) ; <nl> - assertTrue ( " X coordinate in POINT should be original cursor position - 20 " , cursorPos2 . x = = cursorPos . x - 20 ) ; <nl> + assertTrue ( String . format ( <nl> + " X coordinate in POINT should be original cursor position - 20 ( Old : % dx % d , New : % dx % d ) " , <nl> + cursorPos . x , cursorPos . y , cursorPos2 . x , cursorPos2 . y <nl> + ) , <nl> + cursorPos2 . x = = cursorPos . x + 20 <nl> + ) ; <nl> } <nl> <nl> @ Test
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index e0bfe5c . . 9f3ba65 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 335 , 8 + 335 , 6 @ @ public class Kernel32Test extends TestCase { <nl> HANDLE h = Kernel32 . INSTANCE . GetCurrentThread ( ) ; <nl> assertNotNull ( " No current thread handle " , h ) ; <nl> assertFalse ( " Null current thread handle " , h . equals ( 0 ) ) ; <nl> - / / Calling the CloseHandle function with this handle has no effect <nl> - Kernel32Util . closeHandle ( h ) ; <nl> } <nl> <nl> public void testOpenThread ( ) { <nl> @ @ - 355 , 8 + 353 , 6 @ @ public class Kernel32Test extends TestCase { <nl> HANDLE h = Kernel32 . INSTANCE . GetCurrentProcess ( ) ; <nl> assertNotNull ( " No current process handle " , h ) ; <nl> assertFalse ( " Null current process handle " , h . equals ( 0 ) ) ; <nl> - / / Calling the CloseHandle function with a pseudo handle has no effect <nl> - Kernel32Util . closeHandle ( h ) ; <nl> } <nl> <nl> public void testOpenProcess ( ) {
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / AbstractWin32TestSupport . java b / contrib / platform / test / com / sun / jna / platform / win32 / AbstractWin32TestSupport . java <nl> index f59b5a9 . . 87535cf 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / AbstractWin32TestSupport . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / AbstractWin32TestSupport . java <nl> @ @ - 145 , 4 + 145 , 38 @ @ public abstract class AbstractWin32TestSupport extends AbstractPlatformTestSuppo <nl> } <nl> Kernel32 . INSTANCE . CloseHandle ( hSnapShot ) ; <nl> } <nl> + <nl> + / * * <nl> + * Return true if the supplied uuid can be found in the registry . <nl> + * <nl> + * @ param uuid Format : { & lt ; UID & gt ; } <nl> + * / <nl> + public static boolean checkCOMRegistered ( String uuid ) { <nl> + WinReg . HKEYByReference phkKey = null ; <nl> + try { <nl> + phkKey = Advapi32Util . registryGetKey ( WinReg . HKEY _ CLASSES _ ROOT , " Interface \ \ " + uuid , WinNT . KEY _ READ ) ; <nl> + if ( phkKey ! = null ) { <nl> + return true ; <nl> + } <nl> + } catch ( Win32Exception ex ) { <nl> + / / Ok - failed . . . <nl> + } finally { <nl> + if ( phkKey ! = null & & phkKey . getValue ( ) ! = null ) { <nl> + Advapi32Util . registryCloseKey ( phkKey . getValue ( ) ) ; <nl> + } <nl> + } <nl> + try { <nl> + phkKey = Advapi32Util . registryGetKey ( WinReg . HKEY _ CLASSES _ ROOT , " CLSID \ \ " + uuid , WinNT . KEY _ READ ) ; <nl> + if ( phkKey ! = null ) { <nl> + return true ; <nl> + } <nl> + } catch ( Win32Exception ex ) { <nl> + / / Ok - failed . . . <nl> + } finally { <nl> + if ( phkKey ! = null & & phkKey . getValue ( ) ! = null ) { <nl> + Advapi32Util . registryCloseKey ( phkKey . getValue ( ) ) ; <nl> + } <nl> + } <nl> + return false ; <nl> + } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / EnumMoniker _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / EnumMoniker _ Test . java <nl> index c2e4d1a . . 0cff45c 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / EnumMoniker _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / EnumMoniker _ Test . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> package com . sun . jna . platform . win32 . COM ; <nl> <nl> import com . sun . jna . Pointer ; <nl> + import static com . sun . jna . platform . win32 . AbstractWin32TestSupport . checkCOMRegistered ; <nl> import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertNotEquals ; <nl> <nl> @ @ - 32 , 6 + 33 , 7 @ @ import com . sun . jna . platform . win32 . COM . util . annotation . ComMethod ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComObject ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComProperty ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> + import org . junit . Assume ; <nl> <nl> public class EnumMoniker _ Test { <nl> static { <nl> @ @ - 54 , 15 + 56 , 17 @ @ public class EnumMoniker _ Test { <nl> 	 interface MsWordApp extends Application { <nl> 	 } <nl> 	 <nl> - 	 ObjectFactory factory ; <nl> - 	 MsWordApp ob1 ; <nl> - 	 MsWordApp ob2 ; <nl> + 	 private ObjectFactory factory ; <nl> + 	 private MsWordApp ob1 ; <nl> + 	 private MsWordApp ob2 ; <nl> + private boolean initialized = false ; <nl> <nl> 	 @ Before <nl> 	 public void before ( ) { <nl> - WinNT . HRESULT hr = Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ; <nl> - COMUtils . checkRC ( hr ) ; <nl> - <nl> + / / Check Existence of Word Application <nl> + Assume . assumeTrue ( " Could not find registration " , checkCOMRegistered ( " { 00020970 - 0000 - 0000 - C000 - 000000000046 } " ) ) ; <nl> + COMUtils . checkRC ( Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ) ; <nl> + initialized = true ; <nl> 	 	 this . factory = new ObjectFactory ( ) ; <nl> 	 	 / / Two COM objects are require to be running for these tests to work <nl> 	 	 this . ob1 = this . factory . createObject ( MsWordApp . class ) ; <nl> @ @ - 77 , 7 + 81 , 12 @ @ public class EnumMoniker _ Test { <nl> if ( ob2 ! = null ) { <nl> ob2 . Quit ( ) ; <nl> } <nl> - 	 	 Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + if ( factory ! = null ) { <nl> + factory . disposeAll ( ) ; <nl> + } <nl> + if ( initialized ) { <nl> + Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + } <nl> 	 } <nl> <nl> 	 @ Test <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks2 _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks2 _ Test . java <nl> index d47406e . . 0603465 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks2 _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks2 _ Test . java <nl> @ @ - 1 , 6 + 1 , 8 @ @ <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> import com . sun . jna . Pointer ; <nl> + import static com . sun . jna . platform . win32 . AbstractWin32TestSupport . checkCOMRegistered ; <nl> + import com . sun . jna . platform . win32 . COM . COMUtils ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComEventCallback ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComInterface ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComObject ; <nl> @ @ - 8 , 6 + 10 , 7 @ @ import com . sun . jna . platform . win32 . Ole32 ; <nl> import com . sun . jna . platform . win32 . Variant ; <nl> import org . junit . After ; <nl> import org . junit . Assert ; <nl> + import org . junit . Assume ; <nl> import org . junit . Before ; <nl> import org . junit . Test ; <nl> <nl> @ @ - 17 , 18 + 20 , 26 @ @ public class ComEventCallbacks2 _ Test { <nl> ClassLoader . getSystemClassLoader ( ) . setDefaultAssertionStatus ( true ) ; <nl> } <nl> <nl> - Factory factory ; <nl> + private boolean initialized = false ; <nl> + private Factory factory ; <nl> <nl> @ Before <nl> public void before ( ) { <nl> - Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ; <nl> + / / Check if Word is registered in the registry <nl> + Assume . assumeTrue ( " Could not find registration " , checkCOMRegistered ( " { 000209FF - 0000 - 0000 - C000 - 000000000046 } " ) ) ; <nl> + COMUtils . checkRC ( Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ) ; <nl> + initialized = true ; <nl> this . factory = new Factory ( ) ; <nl> } <nl> <nl> @ After <nl> public void after ( ) { <nl> - this . factory . disposeAll ( ) ; <nl> - Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + if ( this . factory ! = null ) { <nl> + this . factory . disposeAll ( ) ; <nl> + } <nl> + if ( initialized ) { <nl> + Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + } <nl> } <nl> <nl> @ Test <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacksFactory _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacksFactory _ Test . java <nl> index 8169036 . . 7f88981 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacksFactory _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacksFactory _ Test . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> import com . sun . jna . platform . win32 . AbstractWin32TestSupport ; <nl> + import static com . sun . jna . platform . win32 . AbstractWin32TestSupport . checkCOMRegistered ; <nl> import com . sun . jna . platform . win32 . COM . COMUtils ; <nl> import org . junit . After ; <nl> import org . junit . Assert ; <nl> @ @ - 36 , 6 + 37 , 7 @ @ import org . hamcrest . CoreMatchers ; <nl> import static com . sun . jna . platform . win32 . COM . IUnknown . IID _ IUNKNOWN ; <nl> import static com . sun . jna . platform . win32 . COM . IDispatch . IID _ IDISPATCH ; <nl> import static org . junit . Assert . * ; <nl> + import org . junit . Assume ; <nl> <nl> public class ComEventCallbacksFactory _ Test { <nl> <nl> @ @ - 47 , 6 + 49 , 8 @ @ public class ComEventCallbacksFactory _ Test { <nl> 	 <nl> 	 @ Before <nl> 	 public void before ( ) { <nl> + / / Check that Internet Explorer is registered in the registry <nl> + Assume . assumeTrue ( " Could not find registration " , checkCOMRegistered ( " { 0002DF01 - 0000 - 0000 - C000 - 000000000046 } " ) ) ; <nl> AbstractWin32TestSupport . killProcessByName ( " iexplore . exe " ) ; <nl> try { <nl> Thread . sleep ( 5 * 1000 ) ; <nl> @ @ - 63 , 8 + 67 , 10 @ @ public class ComEventCallbacksFactory _ Test { <nl> <nl> 	 @ After <nl> 	 public void after ( ) { <nl> - 	 	 this . factory . disposeAll ( ) ; <nl> - this . factory . getComThread ( ) . terminate ( 10000 ) ; <nl> + if ( this . factory ! = null ) { <nl> + this . factory . disposeAll ( ) ; <nl> + this . factory . getComThread ( ) . terminate ( 10000 ) ; <nl> + } <nl> } <nl> 	 <nl> 	 <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacksObjectFactory _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacksObjectFactory _ Test . java <nl> index 405e0ea . . 5babe87 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacksObjectFactory _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacksObjectFactory _ Test . java <nl> @ @ - 14 , 6 + 14 , 7 @ @ package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . platform . win32 . AbstractWin32TestSupport ; <nl> + import static com . sun . jna . platform . win32 . AbstractWin32TestSupport . checkCOMRegistered ; <nl> import com . sun . jna . platform . win32 . COM . COMUtils ; <nl> import org . junit . After ; <nl> import org . junit . Assert ; <nl> @ @ - 38 , 6 + 39 , 7 @ @ import org . hamcrest . CoreMatchers ; <nl> import static com . sun . jna . platform . win32 . COM . IUnknown . IID _ IUNKNOWN ; <nl> import static com . sun . jna . platform . win32 . COM . IDispatch . IID _ IDISPATCH ; <nl> import static org . junit . Assert . * ; <nl> + import org . junit . Assume ; <nl> <nl> public class ComEventCallbacksObjectFactory _ Test { <nl> <nl> @ @ - 45 , 22 + 47 , 30 @ @ public class ComEventCallbacksObjectFactory _ Test { <nl> ClassLoader . getSystemClassLoader ( ) . setDefaultAssertionStatus ( true ) ; <nl> } <nl> <nl> - 	 ObjectFactory factory ; <nl> + private boolean initialized = false ; <nl> + 	 private ObjectFactory factory ; <nl> 	 <nl> 	 @ Before <nl> 	 public void before ( ) { <nl> + / / Check that Internet Explorer is registered in the registry <nl> + Assume . assumeTrue ( " Could not find registration " , checkCOMRegistered ( " { 0002DF01 - 0000 - 0000 - C000 - 000000000046 } " ) ) ; <nl> AbstractWin32TestSupport . killProcessByName ( " iexplore . exe " ) ; <nl> try { <nl> Thread . sleep ( 5 * 1000 ) ; <nl> } catch ( InterruptedException ex ) { } <nl> - Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ; <nl> + COMUtils . checkRC ( Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ) ; <nl> + initialized = true ; <nl> 	 	 this . factory = new ObjectFactory ( ) ; <nl> 	 } <nl> <nl> 	 @ After <nl> 	 public void after ( ) { <nl> - 	 	 this . factory . disposeAll ( ) ; <nl> - Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + if ( this . factory ! = null ) { <nl> + this . factory . disposeAll ( ) ; <nl> + } <nl> + if ( initialized ) { <nl> + Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + } <nl> 	 } <nl> 	 <nl> 	 <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ConfigurateLCID _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ConfigurateLCID _ Test . java <nl> index 098247f . . e237be1 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ConfigurateLCID _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ConfigurateLCID _ Test . java <nl> @ @ - 1 , 12 + 1 , 15 @ @ <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> import com . sun . jna . Pointer ; <nl> + import static com . sun . jna . platform . win32 . AbstractWin32TestSupport . checkCOMRegistered ; <nl> + import com . sun . jna . platform . win32 . COM . COMUtils ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComInterface ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComObject ; <nl> import com . sun . jna . platform . win32 . Ole32 ; <nl> import com . sun . jna . platform . win32 . WinDef . LCID ; <nl> import org . junit . After ; <nl> import org . junit . Assert ; <nl> + import org . junit . Assume ; <nl> import org . junit . Before ; <nl> import org . junit . Ignore ; <nl> import org . junit . Test ; <nl> @ @ - 14 , 11 + 17 , 15 @ @ import org . junit . Test ; <nl> <nl> public class ConfigurateLCID _ Test { <nl> <nl> + private boolean initialized = false ; <nl> private Factory factory ; <nl> <nl> @ Before <nl> public void before ( ) { <nl> - Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ; <nl> + / / Check that Excel is registered in the registry <nl> + Assume . assumeTrue ( " Could not find registration " , checkCOMRegistered ( " { 0002DF01 - 0000 - 0000 - C000 - 000000000046 } " ) ) ; <nl> + COMUtils . checkRC ( Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ) ; <nl> + initialized = true ; <nl> this . factory = new Factory ( ) ; <nl> / / switch to english locale ( the test is only valid if office is <nl> / / installed in a non - english locale <nl> @ @ - 27 , 8 + 34 , 12 @ @ public class ConfigurateLCID _ Test { <nl> <nl> @ After <nl> public void after ( ) { <nl> - this . factory . disposeAll ( ) ; <nl> - Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + if ( this . factory ! = null ) { <nl> + this . factory . disposeAll ( ) ; <nl> + } <nl> + if ( initialized ) { <nl> + Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + } <nl> } <nl> <nl> @ Test <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ConvertTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ConvertTest . java <nl> index bc1971b . . 8f2ed02 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ConvertTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ConvertTest . java <nl> @ @ - 1 , 10 + 1 , 11 @ @ <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> import com . sun . jna . Pointer ; <nl> + import static com . sun . jna . platform . win32 . AbstractWin32TestSupport . checkCOMRegistered ; <nl> + import com . sun . jna . platform . win32 . COM . COMUtils ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComInterface ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComMethod ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComObject ; <nl> - import com . sun . jna . platform . win32 . COM . util . annotation . ComProperty ; <nl> import com . sun . jna . platform . win32 . OaIdl . DATE ; <nl> import com . sun . jna . platform . win32 . OaIdl . VARIANT _ BOOL ; <nl> import com . sun . jna . platform . win32 . Ole32 ; <nl> @ @ - 20 , 25 + 21 , 34 @ @ import java . util . Date ; <nl> import org . junit . AfterClass ; <nl> import org . junit . Test ; <nl> import static org . junit . Assert . * ; <nl> + import org . junit . Assume ; <nl> import org . junit . BeforeClass ; <nl> <nl> / / Untested : IDispatch <nl> / / Untested : Proxy <nl> public class ConvertTest { <nl> <nl> + private static boolean initialized = false ; <nl> private static ObjectFactory fact ; <nl> <nl> @ BeforeClass <nl> public static void init ( ) { <nl> - Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ; <nl> + / / Check that FileSystemObject is registered in the registry <nl> + Assume . assumeTrue ( " Could not find registration " , checkCOMRegistered ( " { 0D43FE01 - F093 - 11CF - 8940 - 00A0C9054228 } " ) ) ; <nl> + COMUtils . checkRC ( Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ) ; <nl> + initialized = true ; <nl> fact = new ObjectFactory ( ) ; <nl> } <nl> <nl> @ AfterClass <nl> public static void destruct ( ) { <nl> - fact . disposeAll ( ) ; <nl> + if ( fact ! = null ) { <nl> + fact . disposeAll ( ) ; <nl> + } <nl> fact = null ; <nl> - Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + if ( initialized ) { <nl> + Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + } <nl> } <nl> <nl> @ Test <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / HybdridCOMInvocationTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / HybdridCOMInvocationTest . java <nl> index f55a0b6 . . 353d80a 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / HybdridCOMInvocationTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / HybdridCOMInvocationTest . java <nl> @ @ - 1 , 6 + 1 , 7 @ @ <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> import com . sun . jna . Pointer ; <nl> + import static com . sun . jna . platform . win32 . AbstractWin32TestSupport . checkCOMRegistered ; <nl> import com . sun . jna . platform . win32 . COM . COMException ; <nl> import com . sun . jna . platform . win32 . COM . COMLateBindingObject ; <nl> import com . sun . jna . platform . win32 . COM . COMUtils ; <nl> @ @ - 33 , 6 + 34 , 7 @ @ import static org . hamcrest . CoreMatchers . is ; <nl> import org . junit . After ; <nl> import org . junit . Test ; <nl> import static org . junit . Assert . * ; <nl> + import org . junit . Assume ; <nl> import org . junit . Before ; <nl> <nl> / * * <nl> @ @ - 59 , 15 + 61 , 23 @ @ public class HybdridCOMInvocationTest { <nl> private static final GUID CLSID _ WORD = new GUID ( CLSID _ WORD _ STRING ) ; <nl> private static final IID IID _ APPLICATION = new IID ( new GUID ( IID _ APPLICATION _ STRING ) ) ; <nl> <nl> + private boolean initialized = false ; <nl> + <nl> @ After <nl> public void tearDown ( ) throws Exception { <nl> - Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + if ( initialized ) { <nl> + Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + initialized = false ; <nl> + } <nl> } <nl> <nl> @ Before <nl> public void setUp ( ) throws Exception { <nl> / / Initialize COM for this thread . . . <nl> - Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ; <nl> + / / Check that FileSystemObject is registered in the registry <nl> + Assume . assumeTrue ( " Could not find registration " , checkCOMRegistered ( CLSID _ WORD _ STRING ) ) ; <nl> + COMUtils . checkRC ( Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ) ; <nl> + initialized = true ; <nl> } <nl> <nl> @ Test <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / IDispatchTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / IDispatchTest . java <nl> index 11c123f . . 3c188d2 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / IDispatchTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / IDispatchTest . java <nl> @ @ - 2 , 6 + 2 , 8 @ @ package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . platform . win32 . AbstractWin32TestSupport ; <nl> + import static com . sun . jna . platform . win32 . AbstractWin32TestSupport . checkCOMRegistered ; <nl> + import com . sun . jna . platform . win32 . COM . COMUtils ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComEventCallback ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComInterface ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComMethod ; <nl> @ @ - 14 , 25 + 16 , 34 @ @ import org . junit . Before ; <nl> import org . junit . Test ; <nl> <nl> import static org . junit . Assert . * ; <nl> + import org . junit . Assume ; <nl> <nl> public class IDispatchTest { <nl> - <nl> - ObjectFactory factory ; <nl> + private boolean initialized = false ; <nl> + private ObjectFactory factory ; <nl> <nl> @ Before <nl> public void before ( ) { <nl> + Assume . assumeTrue ( " Could not find registration " , checkCOMRegistered ( " { 0002DF01 - 0000 - 0000 - C000 - 000000000046 } " ) ) ; <nl> + <nl> AbstractWin32TestSupport . killProcessByName ( " iexplore . exe " ) ; <nl> try { <nl> Thread . sleep ( 5 * 1000 ) ; <nl> } catch ( InterruptedException ex ) { } <nl> - Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ; <nl> + COMUtils . checkRC ( Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ) ; <nl> + initialized = true ; <nl> this . factory = new ObjectFactory ( ) ; <nl> } <nl> <nl> @ After <nl> public void after ( ) { <nl> - this . factory . disposeAll ( ) ; <nl> - Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + if ( this . factory ! = null ) { <nl> + this . factory . disposeAll ( ) ; <nl> + } <nl> + if ( initialized ) { <nl> + Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + initialized = false ; <nl> + } <nl> } <nl> <nl> @ Test <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectFactory _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectFactory _ Test . java <nl> index d543bc7 . . 639a8b5 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectFactory _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectFactory _ Test . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> + import static com . sun . jna . platform . win32 . AbstractWin32TestSupport . checkCOMRegistered ; <nl> import com . sun . jna . platform . win32 . COM . COMException ; <nl> import com . sun . jna . platform . win32 . COM . COMInvokeException ; <nl> import static org . junit . Assert . * ; <nl> @ @ - 29 , 6 + 30 , 7 @ @ import com . sun . jna . platform . win32 . COM . util . annotation . ComObject ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComMethod ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComProperty ; <nl> import com . sun . jna . platform . win32 . WinError ; <nl> + import org . junit . Assume ; <nl> <nl> public class ProxyObjectFactory _ Test { <nl> private static final Logger LOG = Logger . getLogger ( ProxyObjectFactory _ Test . class . getName ( ) ) ; <nl> @ @ - 98 , 10 + 100 , 13 @ @ public class ProxyObjectFactory _ Test { <nl> 	 interface MsWordApp extends Application { <nl> 	 } <nl> <nl> - 	 Factory factory ; <nl> + 	 private Factory factory ; <nl> <nl> 	 @ Before <nl> 	 public void before ( ) { <nl> + / / Check Existence of Word Application <nl> + Assume . assumeTrue ( " Could not find registration " , checkCOMRegistered ( " { 00020970 - 0000 - 0000 - C000 - 000000000046 } " ) ) ; <nl> + <nl> 	 	 this . factory = new Factory ( ) ; <nl> 	 	 / / ensure there are no word applications running . <nl> 	 	 while ( true ) { <nl> @ @ - 139 , 8 + 144 , 11 @ @ public class ProxyObjectFactory _ Test { <nl> <nl> 	 @ After <nl> 	 public void after ( ) { <nl> + if ( factory ! = null ) { <nl> factory . disposeAll ( ) ; <nl> factory . getComThread ( ) . terminate ( 10000 ) ; <nl> + factory = null ; <nl> + } <nl> 	 } <nl> <nl> 	 @ Test <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectObjectFactory _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectObjectFactory _ Test . java <nl> index f1753a0 . . 56ff0ff 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectObjectFactory _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectObjectFactory _ Test . java <nl> @ @ - 13 , 8 + 13 , 10 @ @ <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> import com . sun . jna . Pointer ; <nl> + import static com . sun . jna . platform . win32 . AbstractWin32TestSupport . checkCOMRegistered ; <nl> import com . sun . jna . platform . win32 . COM . COMException ; <nl> import com . sun . jna . platform . win32 . COM . COMInvokeException ; <nl> + import com . sun . jna . platform . win32 . COM . COMUtils ; <nl> import static org . junit . Assert . * ; <nl> <nl> import java . lang . reflect . Proxy ; <nl> @ @ - 32 , 6 + 34 , 7 @ @ import com . sun . jna . platform . win32 . COM . util . annotation . ComMethod ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComProperty ; <nl> import com . sun . jna . platform . win32 . Ole32 ; <nl> import com . sun . jna . platform . win32 . WinError ; <nl> + import org . junit . Assume ; <nl> <nl> public class ProxyObjectObjectFactory _ Test { <nl> private static final Logger LOG = Logger . getLogger ( ProxyObjectObjectFactory _ Test . class . getName ( ) ) ; <nl> @ @ - 101 , 11 + 104 , 15 @ @ public class ProxyObjectObjectFactory _ Test { <nl> 	 interface MsWordApp extends Application { <nl> 	 } <nl> <nl> - 	 ObjectFactory factory ; <nl> + 	 private ObjectFactory factory ; <nl> + private boolean initialized = false ; <nl> <nl> 	 @ Before <nl> 	 public void before ( ) { <nl> - Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ; <nl> + / / Check Existence of Word Application <nl> + Assume . assumeTrue ( " Could not find registration " , checkCOMRegistered ( " { 00020970 - 0000 - 0000 - C000 - 000000000046 } " ) ) ; <nl> + COMUtils . checkRC ( Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ) ; <nl> + initialized = true ; <nl> 	 	 this . factory = new ObjectFactory ( ) ; <nl> 	 	 / / ensure there are no word applications running . <nl> 	 	 while ( true ) { <nl> @ @ - 143 , 8 + 150 , 12 @ @ public class ProxyObjectObjectFactory _ Test { <nl> <nl> 	 @ After <nl> 	 public void after ( ) { <nl> + if ( factory ! = null ) { <nl> factory . disposeAll ( ) ; <nl> + } <nl> + if ( initialized ) { <nl> 	 	 Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + } <nl> 	 } <nl> <nl> 	 @ Test <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / RunningObjectTable _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / RunningObjectTable _ Test . java <nl> index c95784d . . 58e91a2 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / RunningObjectTable _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / RunningObjectTable _ Test . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> import com . sun . jna . Pointer ; <nl> + import static com . sun . jna . platform . win32 . AbstractWin32TestSupport . checkCOMRegistered ; <nl> import static org . junit . Assert . * ; <nl> <nl> import java . util . List ; <nl> @ @ - 22 , 11 + 23 , 13 @ @ import org . junit . Before ; <nl> import org . junit . Test ; <nl> <nl> import com . sun . jna . platform . win32 . COM . COMException ; <nl> + import com . sun . jna . platform . win32 . COM . COMUtils ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComInterface ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComObject ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComMethod ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComProperty ; <nl> import com . sun . jna . platform . win32 . Ole32 ; <nl> + import org . junit . Assume ; <nl> <nl> public class RunningObjectTable _ Test { <nl> <nl> @ @ - 50 , 12 + 53 , 18 @ @ public class RunningObjectTable _ Test { <nl> 	 interface MsWordApp extends Application { <nl> 	 } <nl> 	 <nl> - 	 ObjectFactory factory ; <nl> - 	 MsWordApp msWord ; <nl> + 	 private ObjectFactory factory ; <nl> + 	 private MsWordApp msWord ; <nl> + private boolean initialized = false ; <nl> <nl> 	 @ Before <nl> 	 public void before ( ) { <nl> - Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ; <nl> + / / Check Existence of Word Application <nl> + Assume . assumeTrue ( " Could not find registration " , checkCOMRegistered ( " { 00020970 - 0000 - 0000 - C000 - 000000000046 } " ) ) ; <nl> + <nl> + COMUtils . checkRC ( Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ) ; <nl> + initialized = true ; <nl> + <nl> 	 	 this . factory = new ObjectFactory ( ) ; <nl> 	 	 / / ensure there is only one word application running . <nl> 	 	 while ( true ) { <nl> @ @ - 85 , 15 + 94 , 21 @ @ public class RunningObjectTable _ Test { <nl> 	 <nl> 	 @ After <nl> 	 public void after ( ) { <nl> - 	 	 this . msWord . Quit ( true , null , null ) ; <nl> - 	 	 try { <nl> - 	 	 	 / / wait for it to quit <nl> - 	 	 	 Thread . sleep ( 100 ) ; <nl> - 	 	 } catch ( InterruptedException e ) { <nl> - 	 	 	 e . printStackTrace ( ) ; <nl> - 	 	 } <nl> + if ( this . msWord ! = null ) { <nl> + this . msWord . Quit ( true , null , null ) ; <nl> + } <nl> + try { <nl> + / / wait for it to quit <nl> + Thread . sleep ( 100 ) ; <nl> + } catch ( InterruptedException e ) { <nl> + e . printStackTrace ( ) ; <nl> + } <nl> + if ( factory ! = null ) { <nl> factory . disposeAll ( ) ; <nl> + } <nl> + if ( initialized ) { <nl> Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + } <nl> 	 } <nl> 	 <nl> 	 @ Test <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / SAFEARRAYTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / SAFEARRAYTest . java <nl> index 164f783 . . 4e63a88 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / SAFEARRAYTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / SAFEARRAYTest . java <nl> @ @ - 14 , 6 + 14 , 7 @ @ package com . sun . jna . platform . win32 ; <nl> <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> + import static com . sun . jna . platform . win32 . AbstractWin32TestSupport . checkCOMRegistered ; <nl> import com . sun . jna . platform . win32 . COM . COMException ; <nl> import com . sun . jna . platform . win32 . COM . COMUtils ; <nl> import com . sun . jna . platform . win32 . COM . util . ObjectFactory ; <nl> @ @ - 63 , 6 + 64 , 7 @ @ import static com . sun . jna . platform . win32 . OaIdlUtil . toPrimitiveArray ; <nl> import com . sun . jna . platform . win32 . WTypes . VARTYPE ; <nl> import com . sun . jna . platform . win32 . WinDef . LONG ; <nl> import java . lang . reflect . Field ; <nl> + import org . junit . Assume ; <nl> <nl> public class SAFEARRAYTest { <nl> static { <nl> @ @ - 492 , 7 + 494 , 11 @ @ public class SAFEARRAYTest { <nl> / / Open a record set with a sample search ( basicly get the first five <nl> / / entries from the search index <nl> Connection conn = fact . createObject ( Connection . class ) ; <nl> - conn . Open ( " Provider = Search . CollatorDSO ; Extended Properties = ' Application = Windows ' ; " , " " , " " , - 1 ) ; <nl> + try { <nl> + conn . Open ( " Provider = Search . CollatorDSO ; Extended Properties = ' Application = Windows ' ; " , " " , " " , - 1 ) ; <nl> + } catch ( COMException ex ) { <nl> + Assume . assumeNoException ( ex ) ; <nl> + } <nl> <nl> Recordset recordset = fact . createObject ( Recordset . class ) ; <nl> recordset . Open ( " SELECT TOP 5 System . ItemPathDisplay , System . ItemName , System . ItemUrl , System . DateCreated FROM SYSTEMINDEX ORDER BY System . ItemUrl " , conn , CursorTypeEnum . adOpenUnspecified , LockTypeEnum . adLockUnspecified , - 1 ) ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8707a27 . . c9d585b 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 24 , 6 + 24 , 7 @ @ Features <nl> * [ # 980 ] ( https : / / github . com / java - native - access / jna / issues / 980 ) : Added ` PERF _ OBJECT _ TYPE ` , ` PERF _ COUNTER _ BLOCK ` , and ` PERF _ COUNTER _ DEFINITION ` to ` c . s . j . platform . win32 . WinPerf ` and added ` Pointer ` constructors to ` ` PERF _ INSTANCE _ DEFINITION ` and ` PERF _ DATA _ BLOCK ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 981 ] ( https : / / github . com / java - native - access / jna / issues / 981 ) : Added ` WTS _ PROCESS _ INFO _ EX ` , ` WTSEnumerateProcessesEx ` , and ` WTSFreeMemoryEx ` to ` c . s . j . platform . win32 . Wtsapi32 ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 983 ] ( https : / / github . com / java - native - access / jna / issues / 983 ) : Added ` GetIfEntry ` , ` GetIfEntry2 ` , and ` GetNetworkParams ` and supporting structures ` MIB _ IFROW ` , ` MIB _ IF _ ROW2 ` , and ` FIXED _ INFO ` to ` c . s . j . platform . win32 . IPHlpAPI . java ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> + * [ # 984 ] ( https : / / github . com / java - native - access / jna / issues / 984 ) : Added ` CM _ Locate _ DevNode ` , ` CM _ Get _ Parent ` , ` CM _ Get _ Child ` , ` CM _ Get _ Sibling ` , ` CM _ Get _ Device _ ID ` , and ` CM _ Get _ Device _ ID _ Size ` to ` c . s . j . platform . win32 . Cfgmgr32 . java ` and a ` c . s . j . platform . win32 . Cfgmgr32Util ` class for ` CM _ Get _ Device _ ID ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 988 ] ( https : / / github . com / java - native - access / jna / issues / 988 ) : Added ` PdhLookupPerfIndexByEnglishName ` to ` c . s . j . platform . win32 . PdhUtil ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> <nl> Bug Fixes <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Cfgmgr32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Cfgmgr32 . java <nl> new file mode 100644 <nl> index 0000000 . . b857c66 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Cfgmgr32 . java <nl> @ @ - 0 , 0 + 1 , 192 @ @ <nl> + / * Copyright ( c ) 2018 Daniel Widdis , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Library ; <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . ptr . IntByReference ; <nl> + import com . sun . jna . win32 . W32APIOptions ; <nl> + <nl> + / * * <nl> + * Windows Cfgmgr32 . <nl> + * <nl> + * @ author widdis [ at ] gmail [ dot ] com <nl> + * / <nl> + public interface Cfgmgr32 extends Library { <nl> + Cfgmgr32 INSTANCE = Native . load ( " Cfgmgr32 " , Cfgmgr32 . class , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> + <nl> + public final static int CR _ SUCCESS = 0 ; <nl> + public final static int CR _ BUFFER _ SMALL = 0x0000001A ; <nl> + <nl> + public final static int CM _ LOCATE _ DEVNODE _ NORMAL = 0 ; <nl> + public final static int CM _ LOCATE _ DEVNODE _ PHANTOM = 1 ; <nl> + public final static int CM _ LOCATE _ DEVNODE _ CANCELREMOVE = 2 ; <nl> + public final static int CM _ LOCATE _ DEVNODE _ NOVALIDATION = 4 ; <nl> + public final static int CM _ LOCATE _ DEVNODE _ BITS = 7 ; <nl> + <nl> + / * * <nl> + * The CM _ Locate _ DevNode function obtains a device instance handle to the <nl> + * device node that is associated with a specified device instance ID on the <nl> + * local machine . <nl> + * <nl> + * @ param pdnDevInst <nl> + * A pointer to a device instance handle that CM _ Locate _ DevNode <nl> + * retrieves . The retrieved handle is bound to the local machine . <nl> + * @ param pDeviceID <nl> + * A pointer to a NULL - terminated string representing a device <nl> + * instance ID . If this value is NULL , or if it points to a <nl> + * zero - length string , the function retrieves a device instance <nl> + * handle to the device at the root of the device tree . * <nl> + * @ param ulFlags <nl> + * A variable of ULONG type that supplies one of the following <nl> + * flag values that apply if the caller supplies a device <nl> + * instance identifier : CM _ LOCATE _ DEVNODE _ NORMAL , <nl> + * CM _ LOCATE _ DEVNODE _ PHANTOM , CM _ LOCATE _ DEVNODE _ CANCELREMOVE , or <nl> + * CM _ LOCATE _ DEVNODE _ NOVALIDATION <nl> + * @ return If the operation succeeds , CM _ Locate _ DevNode returns CR _ SUCCESS . <nl> + * Otherwise , the function returns one of the CR _ Xxx error codes <nl> + * that are defined in Cfgmgr32 . h . <nl> + * @ see < A HREF = <nl> + * " https : / / docs . microsoft . com / en - us / windows / desktop / api / cfgmgr32 / nf - cfgmgr32 - cm _ locate _ devnodea " > <nl> + * CM _ Locate _ DevNode < / A > <nl> + * / <nl> + int CM _ Locate _ DevNode ( IntByReference pdnDevInst , String pDeviceID , int ulFlags ) ; <nl> + <nl> + / * * <nl> + * The CM _ Get _ Parent function obtains a device instance handle to the parent <nl> + * node of a specified device node ( devnode ) in the local machine ' s device <nl> + * tree . <nl> + * <nl> + * @ param pdnDevInst <nl> + * Caller - supplied pointer to the device instance handle to the <nl> + * parent node that this function retrieves . The retrieved handle <nl> + * is bound to the local machine . <nl> + * @ param dnDevInst <nl> + * Caller - supplied device instance handle that is bound to the <nl> + * local machine . <nl> + * @ param ulFlags <nl> + * Not used , must be zero . <nl> + * @ return If the operation succeeds , the function returns CR _ SUCCESS . <nl> + * Otherwise , it returns one of the CR _ - prefixed error codes defined <nl> + * in Cfgmgr32 . h . <nl> + * @ see < A HREF = <nl> + * " https : / / docs . microsoft . com / en - us / windows / desktop / api / cfgmgr32 / nf - cfgmgr32 - cm _ get _ parent " > <nl> + * CM _ Get _ Parent < / A > <nl> + * / <nl> + int CM _ Get _ Parent ( IntByReference pdnDevInst , int dnDevInst , int ulFlags ) ; <nl> + <nl> + / * * <nl> + * The CM _ Get _ Child function is used to retrieve a device instance handle to <nl> + * the first child node of a specified device node ( devnode ) in the local <nl> + * machine ' s device tree . <nl> + * <nl> + * @ param pdnDevInst <nl> + * Caller - supplied pointer to the device instance handle to the <nl> + * child node that this function retrieves . The retrieved handle <nl> + * is bound to the local machine . <nl> + * @ param dnDevInst <nl> + * Caller - supplied device instance handle that is bound to the <nl> + * local machine . <nl> + * @ param ulFlags <nl> + * Not used , must be zero . <nl> + * @ return If the operation succeeds , the function returns CR _ SUCCESS . <nl> + * Otherwise , it returns one of the CR _ - prefixed error codes defined <nl> + * in Cfgmgr32 . h . <nl> + * @ see < A HREF = <nl> + * " https : / / docs . microsoft . com / en - us / windows / desktop / api / cfgmgr32 / nf - cfgmgr32 - cm _ get _ child " > <nl> + * CM _ Get _ Child < / A > <nl> + * / <nl> + int CM _ Get _ Child ( IntByReference pdnDevInst , int dnDevInst , int ulFlags ) ; <nl> + <nl> + / * * <nl> + * The CM _ Get _ Sibling function obtains a device instance handle to the next <nl> + * sibling node of a specified device node ( devnode ) in the local machine ' s <nl> + * device tree . <nl> + * <nl> + * @ param pdnDevInst <nl> + * Caller - supplied pointer to the device instance handle to the <nl> + * sibling node that this function retrieves . The retrieved <nl> + * handle is bound to the local machine . <nl> + * @ param dnDevInst <nl> + * Caller - supplied device instance handle that is bound to the <nl> + * local machine . <nl> + * @ param ulFlags <nl> + * Not used , must be zero . <nl> + * @ return If the operation succeeds , the function returns CR _ SUCCESS . <nl> + * Otherwise , it returns one of the CR _ - prefixed error codes defined <nl> + * in Cfgmgr32 . h . <nl> + * @ see < A HREF = <nl> + * " https : / / docs . microsoft . com / en - us / windows / desktop / api / cfgmgr32 / nf - cfgmgr32 - cm _ get _ sibling " > <nl> + * CM _ Get _ Sibling < / A > <nl> + * / <nl> + int CM _ Get _ Sibling ( IntByReference pdnDevInst , int dnDevInst , int ulFlags ) ; <nl> + <nl> + / * * <nl> + * The CM _ Get _ Device _ ID function retrieves the device instance ID for a <nl> + * specified device instance on the local machine . <nl> + * <nl> + * @ param devInst <nl> + * Caller - supplied device instance handle that is bound to the <nl> + * local machine . <nl> + * @ param Buffer <nl> + * Address of a buffer to receive a device instance ID string . <nl> + * The required buffer size can be obtained by calling <nl> + * CM _ Get _ Device _ ID _ Size , then incrementing the received value to <nl> + * allow room for the string ' s terminating NULL . <nl> + * @ param BufferLen <nl> + * Caller - supplied length , in characters , of the buffer specified <nl> + * by Buffer . <nl> + * @ param ulFlags <nl> + * Not used , must be zero . <nl> + * @ return If the operation succeeds , the function returns CR _ SUCCESS . <nl> + * Otherwise , it returns one of the CR _ - prefixed error codes defined <nl> + * in Cfgmgr32 . h . <nl> + * @ see < A HREF = <nl> + * " https : / / docs . microsoft . com / en - us / windows / desktop / api / cfgmgr32 / nf - cfgmgr32 - cm _ get _ device _ idw " > <nl> + * CM _ Get _ Device _ ID < / A > <nl> + * / <nl> + int CM _ Get _ Device _ ID ( int devInst , Pointer Buffer , int BufferLen , int ulFlags ) ; <nl> + <nl> + / * * <nl> + * The CM _ Get _ Device _ ID _ Size function retrieves the buffer size required to <nl> + * hold a device instance ID for a device instance on the local machine . <nl> + * <nl> + * @ param pulLen <nl> + * Receives a value representing the required buffer size , in <nl> + * characters . <nl> + * @ param dnDevInst <nl> + * Caller - supplied device instance handle that is bound to the <nl> + * local machine . <nl> + * @ param ulFlags <nl> + * Not used , must be zero . <nl> + * @ return If the operation succeeds , the function returns CR _ SUCCESS . <nl> + * Otherwise , it returns one of the CR _ - prefixed error codes defined <nl> + * in Cfgmgr32 . h . <nl> + * @ see < A HREF = <nl> + * " https : / / docs . microsoft . com / en - us / windows / desktop / api / cfgmgr32 / nf - cfgmgr32 - cm _ get _ device _ id _ size " > <nl> + * CM _ Get _ Device _ ID _ Size < / A > <nl> + * / <nl> + int CM _ Get _ Device _ ID _ Size ( IntByReference pulLen , int dnDevInst , int ulFlags ) ; <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Cfgmgr32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Cfgmgr32Util . java <nl> new file mode 100644 <nl> index 0000000 . . 935cbf8 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Cfgmgr32Util . java <nl> @ @ - 0 , 0 + 1 , 99 @ @ <nl> + / * Copyright ( c ) 2018 Daniel Widdis , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Memory ; <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . ptr . IntByReference ; <nl> + <nl> + / * * <nl> + * Cfgmgr32 utility API . <nl> + * <nl> + * @ author widdis [ at ] gmail [ dot ] com <nl> + * / <nl> + public abstract class Cfgmgr32Util { <nl> + @ SuppressWarnings ( " serial " ) <nl> + public static class Cfgmgr32Exception extends RuntimeException { <nl> + private final int errorCode ; <nl> + <nl> + public Cfgmgr32Exception ( int errorCode ) { <nl> + this . errorCode = errorCode ; <nl> + } <nl> + <nl> + public int getErrorCode ( ) { <nl> + return errorCode ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Utility method to call Cfgmgr32 ' s CM _ Get _ Device _ ID that allocates the <nl> + * required memory for the Buffer parameter based on the type mapping used , <nl> + * calls to CM _ Get _ Device _ ID , and returns the received string . <nl> + * <nl> + * @ param devInst <nl> + * Caller - supplied device instance handle that is bound to the <nl> + * local machine . <nl> + * @ return The device instance ID string . <nl> + * @ throws Cfgmgr32Exception <nl> + * / <nl> + public static String CM _ Get _ Device _ ID ( int devInst ) throws Cfgmgr32Exception { <nl> + int charToBytes = Boolean . getBoolean ( " w32 . ascii " ) ? 1 : Native . WCHAR _ SIZE ; <nl> + <nl> + / / Get Device ID character count <nl> + IntByReference pulLen = new IntByReference ( ) ; <nl> + int ret = Cfgmgr32 . INSTANCE . CM _ Get _ Device _ ID _ Size ( pulLen , devInst , 0 ) ; <nl> + if ( ret ! = Cfgmgr32 . CR _ SUCCESS ) { <nl> + throw new Cfgmgr32Exception ( ret ) ; <nl> + } <nl> + <nl> + / / Add one to length to allow null terminator <nl> + Memory buffer = new Memory ( ( pulLen . getValue ( ) + 1 ) * charToBytes ) ; <nl> + / / Zero the buffer ( including the extra character ) <nl> + buffer . clear ( ) ; <nl> + / / Fetch the buffer specifying only the current length <nl> + ret = Cfgmgr32 . INSTANCE . CM _ Get _ Device _ ID ( devInst , buffer , pulLen . getValue ( ) , 0 ) ; <nl> + / / In the unlikely event the device id changes this might not be big <nl> + / / enough , try again . This happens rarely enough one retry should be <nl> + / / sufficient . <nl> + if ( ret = = Cfgmgr32 . CR _ BUFFER _ SMALL ) { <nl> + ret = Cfgmgr32 . INSTANCE . CM _ Get _ Device _ ID _ Size ( pulLen , devInst , 0 ) ; <nl> + if ( ret ! = Cfgmgr32 . CR _ SUCCESS ) { <nl> + throw new Cfgmgr32Exception ( ret ) ; <nl> + } <nl> + buffer = new Memory ( ( pulLen . getValue ( ) + 1 ) * charToBytes ) ; <nl> + buffer . clear ( ) ; <nl> + ret = Cfgmgr32 . INSTANCE . CM _ Get _ Device _ ID ( devInst , buffer , pulLen . getValue ( ) , 0 ) ; <nl> + } <nl> + / / If we still aren ' t successful throw an exception <nl> + if ( ret ! = Cfgmgr32 . CR _ SUCCESS ) { <nl> + throw new Cfgmgr32Exception ( ret ) ; <nl> + } <nl> + / / Convert buffer to Java String <nl> + if ( charToBytes = = 1 ) { <nl> + return buffer . getString ( 0 ) ; <nl> + } else { <nl> + return buffer . getWideString ( 0 ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Cfgmgr32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Cfgmgr32Test . java <nl> new file mode 100644 <nl> index 0000000 . . 885bd4b <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Cfgmgr32Test . java <nl> @ @ - 0 , 0 + 1 , 90 @ @ <nl> + / * Copyright ( c ) 2018 Daniel Widdis , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import static org . junit . Assert . assertEquals ; <nl> + import static org . junit . Assert . assertTrue ; <nl> + <nl> + import java . io . UnsupportedEncodingException ; <nl> + <nl> + import org . junit . Test ; <nl> + <nl> + import com . sun . jna . ptr . IntByReference ; <nl> + <nl> + / * * <nl> + * Tests methods in Cfgmgr32 <nl> + * <nl> + * @ author widdis [ at ] gmail [ dot ] com <nl> + * / <nl> + public class Cfgmgr32Test { <nl> + / * * <nl> + * Tests CM _ Locate _ DevNode , CM _ Get _ Parent , CM _ Get _ Child , CM _ Get _ Sibling <nl> + * / <nl> + @ Test <nl> + public void testDevNode ( ) { <nl> + / / Fetch the root node <nl> + IntByReference outputNode = new IntByReference ( ) ; <nl> + assertEquals ( Cfgmgr32 . CR _ SUCCESS , <nl> + Cfgmgr32 . INSTANCE . CM _ Locate _ DevNode ( outputNode , null , Cfgmgr32 . CM _ LOCATE _ DEVNODE _ NORMAL ) ) ; <nl> + / / Get first child <nl> + int rootNode = outputNode . getValue ( ) ; <nl> + int inputNode = rootNode ; <nl> + assertEquals ( Cfgmgr32 . CR _ SUCCESS , Cfgmgr32 . INSTANCE . CM _ Get _ Child ( outputNode , inputNode , 0 ) ) ; <nl> + / / Iterate this child and its siblings <nl> + do { <nl> + inputNode = outputNode . getValue ( ) ; <nl> + / / Get parent , confirm it matches root <nl> + assertEquals ( Cfgmgr32 . CR _ SUCCESS , Cfgmgr32 . INSTANCE . CM _ Get _ Parent ( outputNode , inputNode , 0 ) ) ; <nl> + assertEquals ( rootNode , outputNode . getValue ( ) ) ; <nl> + } while ( Cfgmgr32 . CR _ SUCCESS = = Cfgmgr32 . INSTANCE . CM _ Get _ Sibling ( outputNode , inputNode , 0 ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Tests CM _ Locate _ DevNode , CM _ Get _ Device _ ID _ Size , CM _ Get _ Device _ ID <nl> + * <nl> + * @ throws UnsupportedEncodingException <nl> + * / <nl> + @ Test <nl> + public void testDeviceID ( ) { <nl> + / / Fetch the root node <nl> + IntByReference outputNode = new IntByReference ( ) ; <nl> + assertEquals ( Cfgmgr32 . CR _ SUCCESS , <nl> + Cfgmgr32 . INSTANCE . CM _ Locate _ DevNode ( outputNode , null , Cfgmgr32 . CM _ LOCATE _ DEVNODE _ NORMAL ) ) ; <nl> + int rootNode = outputNode . getValue ( ) ; <nl> + <nl> + / / Get Device ID character count <nl> + IntByReference pulLen = new IntByReference ( ) ; <nl> + Cfgmgr32 . INSTANCE . CM _ Get _ Device _ ID _ Size ( pulLen , rootNode , 0 ) ; <nl> + assertTrue ( pulLen . getValue ( ) > 0 ) ; <nl> + <nl> + / / Get Device ID from util <nl> + String deviceId = Cfgmgr32Util . CM _ Get _ Device _ ID ( rootNode ) ; <nl> + assertEquals ( pulLen . getValue ( ) , deviceId . length ( ) ) ; <nl> + <nl> + / / Look up node from device ID <nl> + assertEquals ( Cfgmgr32 . CR _ SUCCESS , <nl> + Cfgmgr32 . INSTANCE . CM _ Locate _ DevNode ( outputNode , deviceId , Cfgmgr32 . CM _ LOCATE _ DEVNODE _ NORMAL ) ) ; <nl> + assertEquals ( rootNode , outputNode . getValue ( ) ) ; <nl> + } <nl> + }
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / IPHlpAPI . java b / contrib / platform / src / com / sun / jna / platform / win32 / IPHlpAPI . java <nl> index 4e4e4e7 . . 1009533 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / IPHlpAPI . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / IPHlpAPI . java <nl> @ @ - 1 , 278 + 1 , 278 @ @ <nl> - / * Copyright ( c ) 2018 Daniel Widdis , All Rights Reserved <nl> - * <nl> - * The contents of this file is dual - licensed under 2 <nl> - * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> - * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> - * <nl> - * You can freely decide which license you want to apply to <nl> - * the project . <nl> - * <nl> - * You may obtain a copy of the LGPL License at : <nl> - * <nl> - * http : / / www . gnu . org / licenses / licenses . html <nl> - * <nl> - * A copy is also included in the downloadable source code package <nl> - * containing JNA , in file " LGPL2 . 1 " . <nl> - * <nl> - * You may obtain a copy of the Apache License at : <nl> - * <nl> - * http : / / www . apache . org / licenses / <nl> - * <nl> - * A copy is also included in the downloadable source code package <nl> - * containing JNA , in file " AL2 . 0 " . <nl> - * / <nl> - package com . sun . jna . platform . win32 ; <nl> - <nl> - import com . sun . jna . Library ; <nl> - import com . sun . jna . Native ; <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . Structure ; <nl> - import com . sun . jna . Structure . FieldOrder ; <nl> - import com . sun . jna . platform . win32 . Guid . GUID ; <nl> - import com . sun . jna . ptr . IntByReference ; <nl> - import com . sun . jna . win32 . W32APIOptions ; <nl> - <nl> - / * * <nl> - * Windows IP Helper API <nl> - * <nl> - * @ see < A HREF = <nl> - * " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa373083 ( v = vs . 85 ) . aspx " > IP <nl> - * Helper Reference < / A > <nl> - * / <nl> - public interface IPHlpAPI extends Library { <nl> - IPHlpAPI INSTANCE = Native . load ( " IPHlpAPI " , IPHlpAPI . class , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> - <nl> - int IF _ MAX _ STRING _ SIZE = 256 ; <nl> - int IF _ MAX _ PHYS _ ADDRESS _ LENGTH = 32 ; <nl> - int MAX _ INTERFACE _ NAME _ LEN = 256 ; <nl> - int MAXLEN _ IFDESCR = 256 ; <nl> - int MAXLEN _ PHYSADDR = 8 ; <nl> - int MAX _ HOSTNAME _ LEN = 128 ; <nl> - int MAX _ DOMAIN _ NAME _ LEN = 128 ; <nl> - int MAX _ SCOPE _ ID _ LEN = 256 ; <nl> - <nl> - / * * <nl> - * The MIB _ IFROW structure stores information about a particular interface . <nl> - * <nl> - * @ see < A HREF = <nl> - * " https : / / docs . microsoft . com / en - us / previous - versions / windows / desktop / api / ifmib / ns - ifmib - _ mib _ ifrow " > MIB _ IFROW < / A > <nl> - * / <nl> - @ FieldOrder ( { " wszName " , " dwIndex " , " dwType " , " dwMtu " , " dwSpeed " , " dwPhysAddrLen " , " bPhysAddr " , " dwAdminStatus " , <nl> - " dwOperStatus " , " dwLastChange " , " dwInOctets " , " dwInUcastPkts " , " dwInNUcastPkts " , " dwInDiscards " , <nl> - " dwInErrors " , " dwInUnknownProtos " , " dwOutOctets " , " dwOutUcastPkts " , " dwOutNUcastPkts " , " dwOutDiscards " , <nl> - " dwOutErrors " , " dwOutQLen " , " dwDescrLen " , " bDescr " } ) <nl> - class MIB _ IFROW extends Structure { <nl> - public char [ ] wszName = new char [ MAX _ INTERFACE _ NAME _ LEN ] ; <nl> - public int dwIndex ; <nl> - public int dwType ; <nl> - public int dwMtu ; <nl> - public int dwSpeed ; <nl> - public int dwPhysAddrLen ; <nl> - public byte [ ] bPhysAddr = new byte [ MAXLEN _ PHYSADDR ] ; <nl> - public int dwAdminStatus ; <nl> - public int dwOperStatus ; <nl> - public int dwLastChange ; <nl> - public int dwInOctets ; <nl> - public int dwInUcastPkts ; <nl> - public int dwInNUcastPkts ; <nl> - public int dwInDiscards ; <nl> - public int dwInErrors ; <nl> - public int dwInUnknownProtos ; <nl> - public int dwOutOctets ; <nl> - public int dwOutUcastPkts ; <nl> - public int dwOutNUcastPkts ; <nl> - public int dwOutDiscards ; <nl> - public int dwOutErrors ; <nl> - public int dwOutQLen ; <nl> - public int dwDescrLen ; <nl> - public byte [ ] bDescr = new byte [ MAXLEN _ IFDESCR ] ; <nl> - } <nl> - <nl> - / * * <nl> - * The MIB _ IF _ ROW2 structure stores information about a particular <nl> - * interface . <nl> - * <nl> - * @ see < A HREF = <nl> - * " https : / / msdn . microsoft . com / library / windows / hardware / ff559214 " > MIB _ IF _ ROW2 < / A > <nl> - * / <nl> - @ FieldOrder ( { " InterfaceLuid " , " InterfaceIndex " , " InterfaceGuid " , " Alias " , " Description " , " PhysicalAddressLength " , <nl> - " PhysicalAddress " , " PermanentPhysicalAddress " , " Mtu " , " Type " , " TunnelType " , " MediaType " , <nl> - " PhysicalMediumType " , " AccessType " , " DirectionType " , " InterfaceAndOperStatusFlags " , " OperStatus " , <nl> - " AdminStatus " , " MediaConnectState " , " NetworkGuid " , " ConnectionType " , " TransmitLinkSpeed " , <nl> - " ReceiveLinkSpeed " , " InOctets " , " InUcastPkts " , " InNUcastPkts " , " InDiscards " , " InErrors " , " InUnknownProtos " , <nl> - " InUcastOctets " , " InMulticastOctets " , " InBroadcastOctets " , " OutOctets " , " OutUcastPkts " , " OutNUcastPkts " , <nl> - " OutDiscards " , " OutErrors " , " OutUcastOctets " , " OutMulticastOctets " , " OutBroadcastOctets " , " OutQLen " } ) <nl> - class MIB _ IF _ ROW2 extends Structure { <nl> - public long InterfaceLuid ; / / 64 - bit union NET _ LUID <nl> - public int InterfaceIndex ; <nl> - public GUID InterfaceGuid ; <nl> - public char [ ] Alias = new char [ IF _ MAX _ STRING _ SIZE + 1 ] ; <nl> - public char [ ] Description = new char [ IF _ MAX _ STRING _ SIZE + 1 ] ; <nl> - public int PhysicalAddressLength ; <nl> - public byte [ ] PhysicalAddress = new byte [ IF _ MAX _ PHYS _ ADDRESS _ LENGTH ] ; <nl> - public byte [ ] PermanentPhysicalAddress = new byte [ IF _ MAX _ PHYS _ ADDRESS _ LENGTH ] ; <nl> - public int Mtu ; <nl> - public int Type ; <nl> - / / enums <nl> - public int TunnelType ; <nl> - public int MediaType ; <nl> - public int PhysicalMediumType ; <nl> - public int AccessType ; <nl> - public int DirectionType ; <nl> - / / 8 - bit structure <nl> - public byte InterfaceAndOperStatusFlags ; <nl> - / / enums <nl> - public int OperStatus ; <nl> - public int AdminStatus ; <nl> - public int MediaConnectState ; <nl> - public GUID NetworkGuid ; <nl> - public int ConnectionType ; <nl> - public long TransmitLinkSpeed ; <nl> - public long ReceiveLinkSpeed ; <nl> - public long InOctets ; <nl> - public long InUcastPkts ; <nl> - public long InNUcastPkts ; <nl> - public long InDiscards ; <nl> - public long InErrors ; <nl> - public long InUnknownProtos ; <nl> - public long InUcastOctets ; <nl> - public long InMulticastOctets ; <nl> - public long InBroadcastOctets ; <nl> - public long OutOctets ; <nl> - public long OutUcastPkts ; <nl> - public long OutNUcastPkts ; <nl> - public long OutDiscards ; <nl> - public long OutErrors ; <nl> - public long OutUcastOctets ; <nl> - public long OutMulticastOctets ; <nl> - public long OutBroadcastOctets ; <nl> - public long OutQLen ; <nl> - } <nl> - <nl> - / * * <nl> - * The IP _ ADDRESS _ STRING structure stores an IPv4 address in dotted decimal <nl> - * notation . The IP _ ADDRESS _ STRING structure definition is also the type <nl> - * definition for the IP _ MASK _ STRING structure . <nl> - * <nl> - * @ see < A HREF = <nl> - * " https : / / docs . microsoft . com / en - us / windows / desktop / api / iptypes / ns - iptypes - ip _ address _ string " > IP _ ADDRESS _ STRING < / A > <nl> - * / <nl> - @ FieldOrder ( { " String " } ) <nl> - class IP _ ADDRESS _ STRING extends Structure { <nl> - / / Null terminated string <nl> - / / up to 3 chars ( decimal 0 - 255 ) and dot <nl> - / / ending with null <nl> - public byte [ ] String = new byte [ 16 ] ; <nl> - } <nl> - <nl> - / * * <nl> - * The IP _ ADDR _ STRING structure represents a node in a linked - list of IPv4 <nl> - * addresses . <nl> - * <nl> - * @ see < A HREF = <nl> - * " https : / / docs . microsoft . com / en - us / windows / desktop / api / iptypes / ns - iptypes - _ ip _ addr _ string " > IP _ ADDR _ STRING < / A > <nl> - * / <nl> - @ FieldOrder ( { " Next " , " IpAddress " , " IpMask " , " Context " } ) <nl> - class IP _ ADDR _ STRING extends Structure { <nl> - public IP _ ADDR _ STRING . ByReference Next ; <nl> - public IP _ ADDRESS _ STRING IpAddress ; <nl> - public IP _ ADDRESS _ STRING IpMask ; <nl> - public int Context ; <nl> - <nl> - public static class ByReference extends IP _ ADDR _ STRING implements Structure . ByReference { <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * The FIXED _ INFO structure contains information that is the same across all <nl> - * the interfaces on a computer . <nl> - * <nl> - * @ see < A HREF = <nl> - * " https : / / docs . microsoft . com / en - us / windows / desktop / api / iptypes / ns - iptypes - fixed _ info _ w2ksp1 " > FIXED _ INFO < / A > <nl> - * / <nl> - @ FieldOrder ( { " HostName " , " DomainName " , " CurrentDnsServer " , " DnsServerList " , " NodeType " , " ScopeId " , " EnableRouting " , <nl> - " EnableProxy " , " EnableDns " } ) <nl> - class FIXED _ INFO extends Structure { <nl> - public byte [ ] HostName = new byte [ MAX _ HOSTNAME _ LEN + 4 ] ; <nl> - public byte [ ] DomainName = new byte [ MAX _ DOMAIN _ NAME _ LEN + 4 ] ; <nl> - public IP _ ADDR _ STRING . ByReference CurrentDnsServer ; / / IP _ ADDR _ STRING <nl> - public IP _ ADDR _ STRING DnsServerList ; <nl> - public int NodeType ; <nl> - public byte [ ] ScopeId = new byte [ MAX _ SCOPE _ ID _ LEN + 4 ] ; <nl> - public int EnableRouting ; <nl> - public int EnableProxy ; <nl> - public int EnableDns ; <nl> - <nl> - public FIXED _ INFO ( Pointer p ) { <nl> - super ( p ) ; <nl> - read ( ) ; <nl> - } <nl> - <nl> - public FIXED _ INFO ( ) { <nl> - super ( ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * The GetIfEntry function retrieves information for the specified interface <nl> - * on the local computer . <nl> - * <nl> - * The dwIndex member in the MIB _ IFROW structure pointed to by the pIfRow <nl> - * parameter must be initialized to a valid network interface index <nl> - * retrieved by a previous call to the GetIfTable , GetIfTable2 , or <nl> - * GetIfTable2Ex function . The GetIfEntry function will fail if the dwIndex <nl> - * member of the MIB _ IFROW pointed to by the pIfRow parameter does not match <nl> - * an existing interface index on the local computer . <nl> - * <nl> - * @ param pIfRow <nl> - * A pointer to a MIB _ IFROW structure that , on successful return , <nl> - * receives information for an interface on the local computer . <nl> - * On input , set the dwIndex member of MIB _ IFROW to the index of <nl> - * the interface for which to retrieve information . <nl> - * @ return If the function succeeds , the return value is NO _ ERROR . <nl> - * / <nl> - int GetIfEntry ( MIB _ IFROW pIfRow ) ; <nl> - <nl> - / * * <nl> - * The GetIfEntry2 function retrieves information for the specified <nl> - * interface on the local computer . <nl> - * <nl> - * On input , at least one of the following members in the MIB _ IF _ ROW2 <nl> - * structure passed in the Row parameter must be initialized : InterfaceLuid <nl> - * or InterfaceIndex . The fields are used in the order listed above . So if <nl> - * the InterfaceLuid is specified , then this member is used to determine the <nl> - * interface . If no value was set for the InterfaceLuid member ( the value of <nl> - * this member was set to zero ) , then the InterfaceIndex member is next used <nl> - * to determine the interface . On output , the remaining fields of the <nl> - * MIB _ IF _ ROW2 structure pointed to by the Row parameter are filled in . <nl> - * <nl> - * @ param pIfRow2 <nl> - * A pointer to a MIB _ IF _ ROW2 structure that , on successful <nl> - * return , receives information for an interface on the local <nl> - * computer . On input , the InterfaceLuid or the InterfaceIndex <nl> - * member of the MIB _ IF _ ROW2 must be set to the interface for <nl> - * which to retrieve information . <nl> - * @ return If the function succeeds , the return value is NO _ ERROR . <nl> - * / <nl> - int GetIfEntry2 ( MIB _ IF _ ROW2 pIfRow2 ) ; <nl> - <nl> - / * * <nl> - * The GetNetworkParams function retrieves network parameters for the local <nl> - * computer . <nl> - * <nl> - * @ param pFixedInfo <nl> - * A pointer to a buffer that contains a FIXED _ INFO structure <nl> - * that receives the network parameters for the local computer , <nl> - * if the function was successful . This buffer must be allocated <nl> - * by the caller prior to calling the GetNetworkParams function . <nl> - * @ param pOutBufLen <nl> - * A pointer to a ULONG variable that specifies the size of the <nl> - * FIXED _ INFO structure . If this size is insufficient to hold the <nl> - * information , GetNetworkParams fills in this variable with the <nl> - * required size , and returns an error code of <nl> - * ERROR _ BUFFER _ OVERFLOW . <nl> - * @ return If the function succeeds , the return value is ERROR _ SUCCESS . <nl> - * / <nl> - int GetNetworkParams ( FIXED _ INFO pFixedInfo , IntByReference pOutBufLen ) ; <nl> - } <nl> - <nl> + / * Copyright ( c ) 2018 Daniel Widdis , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Library ; <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . Structure ; <nl> + import com . sun . jna . Structure . FieldOrder ; <nl> + import com . sun . jna . platform . win32 . Guid . GUID ; <nl> + import com . sun . jna . ptr . IntByReference ; <nl> + import com . sun . jna . win32 . W32APIOptions ; <nl> + <nl> + / * * <nl> + * Windows IP Helper API <nl> + * <nl> + * @ see < A HREF = <nl> + * " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa373083 ( v = vs . 85 ) . aspx " > IP <nl> + * Helper Reference < / A > <nl> + * / <nl> + public interface IPHlpAPI extends Library { <nl> + IPHlpAPI INSTANCE = Native . load ( " IPHlpAPI " , IPHlpAPI . class , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> + <nl> + int IF _ MAX _ STRING _ SIZE = 256 ; <nl> + int IF _ MAX _ PHYS _ ADDRESS _ LENGTH = 32 ; <nl> + int MAX _ INTERFACE _ NAME _ LEN = 256 ; <nl> + int MAXLEN _ IFDESCR = 256 ; <nl> + int MAXLEN _ PHYSADDR = 8 ; <nl> + int MAX _ HOSTNAME _ LEN = 128 ; <nl> + int MAX _ DOMAIN _ NAME _ LEN = 128 ; <nl> + int MAX _ SCOPE _ ID _ LEN = 256 ; <nl> + <nl> + / * * <nl> + * The MIB _ IFROW structure stores information about a particular interface . <nl> + * <nl> + * @ see < A HREF = <nl> + * " https : / / docs . microsoft . com / en - us / previous - versions / windows / desktop / api / ifmib / ns - ifmib - _ mib _ ifrow " > MIB _ IFROW < / A > <nl> + * / <nl> + @ FieldOrder ( { " wszName " , " dwIndex " , " dwType " , " dwMtu " , " dwSpeed " , " dwPhysAddrLen " , " bPhysAddr " , " dwAdminStatus " , <nl> + " dwOperStatus " , " dwLastChange " , " dwInOctets " , " dwInUcastPkts " , " dwInNUcastPkts " , " dwInDiscards " , <nl> + " dwInErrors " , " dwInUnknownProtos " , " dwOutOctets " , " dwOutUcastPkts " , " dwOutNUcastPkts " , " dwOutDiscards " , <nl> + " dwOutErrors " , " dwOutQLen " , " dwDescrLen " , " bDescr " } ) <nl> + class MIB _ IFROW extends Structure { <nl> + public char [ ] wszName = new char [ MAX _ INTERFACE _ NAME _ LEN ] ; <nl> + public int dwIndex ; <nl> + public int dwType ; <nl> + public int dwMtu ; <nl> + public int dwSpeed ; <nl> + public int dwPhysAddrLen ; <nl> + public byte [ ] bPhysAddr = new byte [ MAXLEN _ PHYSADDR ] ; <nl> + public int dwAdminStatus ; <nl> + public int dwOperStatus ; <nl> + public int dwLastChange ; <nl> + public int dwInOctets ; <nl> + public int dwInUcastPkts ; <nl> + public int dwInNUcastPkts ; <nl> + public int dwInDiscards ; <nl> + public int dwInErrors ; <nl> + public int dwInUnknownProtos ; <nl> + public int dwOutOctets ; <nl> + public int dwOutUcastPkts ; <nl> + public int dwOutNUcastPkts ; <nl> + public int dwOutDiscards ; <nl> + public int dwOutErrors ; <nl> + public int dwOutQLen ; <nl> + public int dwDescrLen ; <nl> + public byte [ ] bDescr = new byte [ MAXLEN _ IFDESCR ] ; <nl> + } <nl> + <nl> + / * * <nl> + * The MIB _ IF _ ROW2 structure stores information about a particular <nl> + * interface . <nl> + * <nl> + * @ see < A HREF = <nl> + * " https : / / msdn . microsoft . com / library / windows / hardware / ff559214 " > MIB _ IF _ ROW2 < / A > <nl> + * / <nl> + @ FieldOrder ( { " InterfaceLuid " , " InterfaceIndex " , " InterfaceGuid " , " Alias " , " Description " , " PhysicalAddressLength " , <nl> + " PhysicalAddress " , " PermanentPhysicalAddress " , " Mtu " , " Type " , " TunnelType " , " MediaType " , <nl> + " PhysicalMediumType " , " AccessType " , " DirectionType " , " InterfaceAndOperStatusFlags " , " OperStatus " , <nl> + " AdminStatus " , " MediaConnectState " , " NetworkGuid " , " ConnectionType " , " TransmitLinkSpeed " , <nl> + " ReceiveLinkSpeed " , " InOctets " , " InUcastPkts " , " InNUcastPkts " , " InDiscards " , " InErrors " , " InUnknownProtos " , <nl> + " InUcastOctets " , " InMulticastOctets " , " InBroadcastOctets " , " OutOctets " , " OutUcastPkts " , " OutNUcastPkts " , <nl> + " OutDiscards " , " OutErrors " , " OutUcastOctets " , " OutMulticastOctets " , " OutBroadcastOctets " , " OutQLen " } ) <nl> + class MIB _ IF _ ROW2 extends Structure { <nl> + public long InterfaceLuid ; / / 64 - bit union NET _ LUID <nl> + public int InterfaceIndex ; <nl> + public GUID InterfaceGuid ; <nl> + public char [ ] Alias = new char [ IF _ MAX _ STRING _ SIZE + 1 ] ; <nl> + public char [ ] Description = new char [ IF _ MAX _ STRING _ SIZE + 1 ] ; <nl> + public int PhysicalAddressLength ; <nl> + public byte [ ] PhysicalAddress = new byte [ IF _ MAX _ PHYS _ ADDRESS _ LENGTH ] ; <nl> + public byte [ ] PermanentPhysicalAddress = new byte [ IF _ MAX _ PHYS _ ADDRESS _ LENGTH ] ; <nl> + public int Mtu ; <nl> + public int Type ; <nl> + / / enums <nl> + public int TunnelType ; <nl> + public int MediaType ; <nl> + public int PhysicalMediumType ; <nl> + public int AccessType ; <nl> + public int DirectionType ; <nl> + / / 8 - bit structure <nl> + public byte InterfaceAndOperStatusFlags ; <nl> + / / enums <nl> + public int OperStatus ; <nl> + public int AdminStatus ; <nl> + public int MediaConnectState ; <nl> + public GUID NetworkGuid ; <nl> + public int ConnectionType ; <nl> + public long TransmitLinkSpeed ; <nl> + public long ReceiveLinkSpeed ; <nl> + public long InOctets ; <nl> + public long InUcastPkts ; <nl> + public long InNUcastPkts ; <nl> + public long InDiscards ; <nl> + public long InErrors ; <nl> + public long InUnknownProtos ; <nl> + public long InUcastOctets ; <nl> + public long InMulticastOctets ; <nl> + public long InBroadcastOctets ; <nl> + public long OutOctets ; <nl> + public long OutUcastPkts ; <nl> + public long OutNUcastPkts ; <nl> + public long OutDiscards ; <nl> + public long OutErrors ; <nl> + public long OutUcastOctets ; <nl> + public long OutMulticastOctets ; <nl> + public long OutBroadcastOctets ; <nl> + public long OutQLen ; <nl> + } <nl> + <nl> + / * * <nl> + * The IP _ ADDRESS _ STRING structure stores an IPv4 address in dotted decimal <nl> + * notation . The IP _ ADDRESS _ STRING structure definition is also the type <nl> + * definition for the IP _ MASK _ STRING structure . <nl> + * <nl> + * @ see < A HREF = <nl> + * " https : / / docs . microsoft . com / en - us / windows / desktop / api / iptypes / ns - iptypes - ip _ address _ string " > IP _ ADDRESS _ STRING < / A > <nl> + * / <nl> + @ FieldOrder ( { " String " } ) <nl> + class IP _ ADDRESS _ STRING extends Structure { <nl> + / / Null terminated string <nl> + / / up to 3 chars ( decimal 0 - 255 ) and dot <nl> + / / ending with null <nl> + public byte [ ] String = new byte [ 16 ] ; <nl> + } <nl> + <nl> + / * * <nl> + * The IP _ ADDR _ STRING structure represents a node in a linked - list of IPv4 <nl> + * addresses . <nl> + * <nl> + * @ see < A HREF = <nl> + * " https : / / docs . microsoft . com / en - us / windows / desktop / api / iptypes / ns - iptypes - _ ip _ addr _ string " > IP _ ADDR _ STRING < / A > <nl> + * / <nl> + @ FieldOrder ( { " Next " , " IpAddress " , " IpMask " , " Context " } ) <nl> + class IP _ ADDR _ STRING extends Structure { <nl> + public IP _ ADDR _ STRING . ByReference Next ; <nl> + public IP _ ADDRESS _ STRING IpAddress ; <nl> + public IP _ ADDRESS _ STRING IpMask ; <nl> + public int Context ; <nl> + <nl> + public static class ByReference extends IP _ ADDR _ STRING implements Structure . ByReference { <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * The FIXED _ INFO structure contains information that is the same across all <nl> + * the interfaces on a computer . <nl> + * <nl> + * @ see < A HREF = <nl> + * " https : / / docs . microsoft . com / en - us / windows / desktop / api / iptypes / ns - iptypes - fixed _ info _ w2ksp1 " > FIXED _ INFO < / A > <nl> + * / <nl> + @ FieldOrder ( { " HostName " , " DomainName " , " CurrentDnsServer " , " DnsServerList " , " NodeType " , " ScopeId " , " EnableRouting " , <nl> + " EnableProxy " , " EnableDns " } ) <nl> + class FIXED _ INFO extends Structure { <nl> + public byte [ ] HostName = new byte [ MAX _ HOSTNAME _ LEN + 4 ] ; <nl> + public byte [ ] DomainName = new byte [ MAX _ DOMAIN _ NAME _ LEN + 4 ] ; <nl> + public IP _ ADDR _ STRING . ByReference CurrentDnsServer ; <nl> + public IP _ ADDR _ STRING DnsServerList ; <nl> + public int NodeType ; <nl> + public byte [ ] ScopeId = new byte [ MAX _ SCOPE _ ID _ LEN + 4 ] ; <nl> + public int EnableRouting ; <nl> + public int EnableProxy ; <nl> + public int EnableDns ; <nl> + <nl> + public FIXED _ INFO ( Pointer p ) { <nl> + super ( p ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public FIXED _ INFO ( ) { <nl> + super ( ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * The GetIfEntry function retrieves information for the specified interface <nl> + * on the local computer . <nl> + * <nl> + * The dwIndex member in the MIB _ IFROW structure pointed to by the pIfRow <nl> + * parameter must be initialized to a valid network interface index <nl> + * retrieved by a previous call to the GetIfTable , GetIfTable2 , or <nl> + * GetIfTable2Ex function . The GetIfEntry function will fail if the dwIndex <nl> + * member of the MIB _ IFROW pointed to by the pIfRow parameter does not match <nl> + * an existing interface index on the local computer . <nl> + * <nl> + * @ param pIfRow <nl> + * A pointer to a MIB _ IFROW structure that , on successful return , <nl> + * receives information for an interface on the local computer . <nl> + * On input , set the dwIndex member of MIB _ IFROW to the index of <nl> + * the interface for which to retrieve information . <nl> + * @ return If the function succeeds , the return value is NO _ ERROR . <nl> + * / <nl> + int GetIfEntry ( MIB _ IFROW pIfRow ) ; <nl> + <nl> + / * * <nl> + * The GetIfEntry2 function retrieves information for the specified <nl> + * interface on the local computer . <nl> + * <nl> + * On input , at least one of the following members in the MIB _ IF _ ROW2 <nl> + * structure passed in the Row parameter must be initialized : InterfaceLuid <nl> + * or InterfaceIndex . The fields are used in the order listed above . So if <nl> + * the InterfaceLuid is specified , then this member is used to determine the <nl> + * interface . If no value was set for the InterfaceLuid member ( the value of <nl> + * this member was set to zero ) , then the InterfaceIndex member is next used <nl> + * to determine the interface . On output , the remaining fields of the <nl> + * MIB _ IF _ ROW2 structure pointed to by the Row parameter are filled in . <nl> + * <nl> + * @ param pIfRow2 <nl> + * A pointer to a MIB _ IF _ ROW2 structure that , on successful <nl> + * return , receives information for an interface on the local <nl> + * computer . On input , the InterfaceLuid or the InterfaceIndex <nl> + * member of the MIB _ IF _ ROW2 must be set to the interface for <nl> + * which to retrieve information . <nl> + * @ return If the function succeeds , the return value is NO _ ERROR . <nl> + * / <nl> + int GetIfEntry2 ( MIB _ IF _ ROW2 pIfRow2 ) ; <nl> + <nl> + / * * <nl> + * The GetNetworkParams function retrieves network parameters for the local <nl> + * computer . <nl> + * <nl> + * @ param pFixedInfo <nl> + * A pointer to a buffer that contains a FIXED _ INFO structure <nl> + * that receives the network parameters for the local computer , <nl> + * if the function was successful . This buffer must be allocated <nl> + * by the caller prior to calling the GetNetworkParams function . <nl> + * @ param pOutBufLen <nl> + * A pointer to a ULONG variable that specifies the size of the <nl> + * FIXED _ INFO structure . If this size is insufficient to hold the <nl> + * information , GetNetworkParams fills in this variable with the <nl> + * required size , and returns an error code of <nl> + * ERROR _ BUFFER _ OVERFLOW . <nl> + * @ return If the function succeeds , the return value is ERROR _ SUCCESS . <nl> + * / <nl> + int GetNetworkParams ( Pointer pFixedInfo , IntByReference pOutBufLen ) ; <nl> + } <nl> + <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / IPHlpAPITest . java b / contrib / platform / test / com / sun / jna / platform / win32 / IPHlpAPITest . java <nl> index e59ec5c . . 731fbaf 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / IPHlpAPITest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / IPHlpAPITest . java <nl> @ @ - 116 , 11 + 116 , 12 @ @ public class IPHlpAPITest { <nl> <nl> IntByReference bufferSize = new IntByReference ( ) ; <nl> assertEquals ( WinError . ERROR _ BUFFER _ OVERFLOW , IPHlpAPI . INSTANCE . GetNetworkParams ( null , bufferSize ) ) ; <nl> - FIXED _ INFO buffer = new FIXED _ INFO ( new Memory ( bufferSize . getValue ( ) ) ) ; <nl> + Memory buffer = new Memory ( bufferSize . getValue ( ) ) ; <nl> assertEquals ( WinError . ERROR _ SUCCESS , IPHlpAPI . INSTANCE . GetNetworkParams ( buffer , bufferSize ) ) ; <nl> + FIXED _ INFO fixedInfo = new FIXED _ INFO ( buffer ) ; <nl> <nl> / / Check all DNS servers are valid IPs <nl> - IPHlpAPI . IP _ ADDR _ STRING dns = buffer . DnsServerList ; <nl> + IPHlpAPI . IP _ ADDR _ STRING dns = fixedInfo . DnsServerList ; <nl> while ( dns ! = null ) { <nl> / / Start with 16 - char byte array <nl> String addr = new String ( dns . IpAddress . String ) ;
diff - - git a / lib / native / aix - ppc . jar b / lib / native / aix - ppc . jar <nl> index ef00675 . . 066b646 100644 <nl> Binary files a / lib / native / aix - ppc . jar and b / lib / native / aix - ppc . jar differ <nl> diff - - git a / lib / native / aix - ppc64 . jar b / lib / native / aix - ppc64 . jar <nl> index c91d0b4 . . aeb97a5 100644 <nl> Binary files a / lib / native / aix - ppc64 . jar and b / lib / native / aix - ppc64 . jar differ <nl> diff - - git a / lib / native / android - aarch64 . jar b / lib / native / android - aarch64 . jar <nl> index 6716399 . . 3119e5e 100644 <nl> Binary files a / lib / native / android - aarch64 . jar and b / lib / native / android - aarch64 . jar differ <nl> diff - - git a / lib / native / android - arm . jar b / lib / native / android - arm . jar <nl> index 6716399 . . 67b0652 100755 <nl> Binary files a / lib / native / android - arm . jar and b / lib / native / android - arm . jar differ <nl> diff - - git a / lib / native / android - armv7 . jar b / lib / native / android - armv7 . jar <nl> index 6716399 . . c9a99a5 100644 <nl> Binary files a / lib / native / android - armv7 . jar and b / lib / native / android - armv7 . jar differ <nl> diff - - git a / lib / native / android - mips . jar b / lib / native / android - mips . jar <nl> index 6716399 . . 117ab71 100644 <nl> Binary files a / lib / native / android - mips . jar and b / lib / native / android - mips . jar differ <nl> diff - - git a / lib / native / android - mips64 . jar b / lib / native / android - mips64 . jar <nl> index 6716399 . . 94badad 100644 <nl> Binary files a / lib / native / android - mips64 . jar and b / lib / native / android - mips64 . jar differ <nl> diff - - git a / lib / native / android - x86 - 64 . jar b / lib / native / android - x86 - 64 . jar <nl> index 6716399 . . 0e813dd 100644 <nl> Binary files a / lib / native / android - x86 - 64 . jar and b / lib / native / android - x86 - 64 . jar differ <nl> diff - - git a / lib / native / android - x86 . jar b / lib / native / android - x86 . jar <nl> index 6716399 . . f2eb234 100755 <nl> Binary files a / lib / native / android - x86 . jar and b / lib / native / android - x86 . jar differ <nl> diff - - git a / lib / native / darwin . jar b / lib / native / darwin . jar <nl> index 6716399 . . a14e43c 100644 <nl> Binary files a / lib / native / darwin . jar and b / lib / native / darwin . jar differ <nl> diff - - git a / lib / native / freebsd - x86 - 64 . jar b / lib / native / freebsd - x86 - 64 . jar <nl> index 6716399 . . fab5143 100755 <nl> Binary files a / lib / native / freebsd - x86 - 64 . jar and b / lib / native / freebsd - x86 - 64 . jar differ <nl> diff - - git a / lib / native / freebsd - x86 . jar b / lib / native / freebsd - x86 . jar <nl> index 6716399 . . 46f7cde 100755 <nl> Binary files a / lib / native / freebsd - x86 . jar and b / lib / native / freebsd - x86 . jar differ <nl> diff - - git a / lib / native / linux - aarch64 . jar b / lib / native / linux - aarch64 . jar <nl> index 6716399 . . d049a77 100644 <nl> Binary files a / lib / native / linux - aarch64 . jar and b / lib / native / linux - aarch64 . jar differ <nl> diff - - git a / lib / native / linux - arm . jar b / lib / native / linux - arm . jar <nl> index 6716399 . . ffbdb7f 100755 <nl> Binary files a / lib / native / linux - arm . jar and b / lib / native / linux - arm . jar differ <nl> diff - - git a / lib / native / linux - armel . jar b / lib / native / linux - armel . jar <nl> index 6716399 . . 694bfaf 100644 <nl> Binary files a / lib / native / linux - armel . jar and b / lib / native / linux - armel . jar differ <nl> diff - - git a / lib / native / linux - mips64el . jar b / lib / native / linux - mips64el . jar <nl> index 6716399 . . 2c92cc9 100644 <nl> Binary files a / lib / native / linux - mips64el . jar and b / lib / native / linux - mips64el . jar differ <nl> diff - - git a / lib / native / linux - ppc . jar b / lib / native / linux - ppc . jar <nl> index 6716399 . . 8021a2c 100755 <nl> Binary files a / lib / native / linux - ppc . jar and b / lib / native / linux - ppc . jar differ <nl> diff - - git a / lib / native / linux - ppc64le . jar b / lib / native / linux - ppc64le . jar <nl> index 6716399 . . 5ea56a0 100644 <nl> Binary files a / lib / native / linux - ppc64le . jar and b / lib / native / linux - ppc64le . jar differ <nl> diff - - git a / lib / native / linux - s390x . jar b / lib / native / linux - s390x . jar <nl> index 6716399 . . a01425f 100644 <nl> Binary files a / lib / native / linux - s390x . jar and b / lib / native / linux - s390x . jar differ <nl> diff - - git a / lib / native / linux - x86 - 64 . jar b / lib / native / linux - x86 - 64 . jar <nl> index 7438d97 . . 7f5b94e 100644 <nl> Binary files a / lib / native / linux - x86 - 64 . jar and b / lib / native / linux - x86 - 64 . jar differ <nl> diff - - git a / lib / native / linux - x86 . jar b / lib / native / linux - x86 . jar <nl> index 6716399 . . 0feff42 100755 <nl> Binary files a / lib / native / linux - x86 . jar and b / lib / native / linux - x86 . jar differ <nl> diff - - git a / lib / native / openbsd - x86 - 64 . jar b / lib / native / openbsd - x86 - 64 . jar <nl> index 6716399 . . 932a04a 100755 <nl> Binary files a / lib / native / openbsd - x86 - 64 . jar and b / lib / native / openbsd - x86 - 64 . jar differ <nl> diff - - git a / lib / native / openbsd - x86 . jar b / lib / native / openbsd - x86 . jar <nl> index 6716399 . . 78a10c7 100755 <nl> Binary files a / lib / native / openbsd - x86 . jar and b / lib / native / openbsd - x86 . jar differ <nl> diff - - git a / lib / native / sunos - sparc . jar b / lib / native / sunos - sparc . jar <nl> index 6716399 . . bc3381a 100644 <nl> Binary files a / lib / native / sunos - sparc . jar and b / lib / native / sunos - sparc . jar differ <nl> diff - - git a / lib / native / sunos - sparcv9 . jar b / lib / native / sunos - sparcv9 . jar <nl> index 6716399 . . 7c871f7 100755 <nl> Binary files a / lib / native / sunos - sparcv9 . jar and b / lib / native / sunos - sparcv9 . jar differ <nl> diff - - git a / lib / native / sunos - x86 - 64 . jar b / lib / native / sunos - x86 - 64 . jar <nl> index 6716399 . . 8e94471 100755 <nl> Binary files a / lib / native / sunos - x86 - 64 . jar and b / lib / native / sunos - x86 - 64 . jar differ <nl> diff - - git a / lib / native / sunos - x86 . jar b / lib / native / sunos - x86 . jar <nl> index 6716399 . . 12debb6 100755 <nl> Binary files a / lib / native / sunos - x86 . jar and b / lib / native / sunos - x86 . jar differ <nl> diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index 6716399 . . 4ea5feb 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ <nl> diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index 6716399 . . 4e2c56d 100644 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 34f0559 . . 34e5431 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 51 , 6 + 51 , 7 @ @ Bug Fixes <nl> < li > The resulting ` sunos - x86 . jar ` is copied back to the original build system to ` lib / native / sunos - x86 . jar ` < / li > <nl> < / ol > - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 958 ] ( https : / / github . com / java - native - access / jna / issues / 958 ) : Update for PR 863 : Old toolchains produce binaries without hard - / softfloat markers . Rasbian is missinng the markers and the oracle JDK is also affected . For hardfloat detection now also the Arm EABI section is also considered - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 974 ] ( https : / / github . com / java - native - access / jna / issues / 974 ) : If the callback code failed to attach to the JVM , this lead to a segfault . The success of attaching to the JVM was checked to late and an invalid ` JNIEnv ` pointer was used to access the JVM - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Breaking Changes <nl> - - - - - - - - - - - - - - - - <nl> diff - - git a / native / callback . c b / native / callback . c <nl> index 52c6165 . . a3881fa 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 686 , 6 + 686 , 14 @ @ dispatch _ callback ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> else { <nl> attach _ status = ( * jvm ) - > AttachCurrentThread ( jvm , ( void * ) & env , & args ) ; <nl> } <nl> + if ( attach _ status ! = JNI _ OK ) { <nl> + free ( ( void * ) args . name ) ; <nl> + if ( args . group ) { <nl> + ( * env ) - > DeleteWeakGlobalRef ( env , args . group ) ; <nl> + } <nl> + fprintf ( stderr , " JNA : Can ' t attach native thread to VM for callback : % d ( check stacksize for callbacks ) \ n " , attach _ status ) ; <nl> + return ; <nl> + } <nl> tls = get _ thread _ storage ( env ) ; <nl> if ( tls ) { <nl> snprintf ( tls - > name , sizeof ( tls - > name ) , " % s " , args . name ? args . name : " < unconfigured native thread > " ) ; <nl> @ @ - 694 , 15 + 702 , 11 @ @ dispatch _ callback ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> } <nl> / / Dispose of allocated memory <nl> free ( ( void * ) args . name ) ; <nl> - if ( attach _ status ! = JNI _ OK ) { <nl> - fprintf ( stderr , " JNA : Can ' t attach native thread to VM for callback : % d \ n " , attach _ status ) ; <nl> - return ; <nl> - } <nl> if ( args . group ) { <nl> ( * env ) - > DeleteWeakGlobalRef ( env , args . group ) ; <nl> } <nl> } <nl> - 	 	 	 	 	 	 <nl> + <nl> if ( ! tls ) { <nl> fprintf ( stderr , " JNA : couldn ' t obtain thread - local storage \ n " ) ; <nl> return ; <nl> diff - - git a / native / testlib . c b / native / testlib . c <nl> index 4c8387f . . 575cf01 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 54 , 7 + 54 , 7 @ @ typedef _ _ int64 int64 _ t ; <nl> # define EXPORT _ _ declspec ( dllexport ) <nl> # define SLEEP ( MS ) Sleep ( MS ) <nl> # define THREAD _ T DWORD <nl> - # define THREAD _ CREATE ( TP , FN , DATA ) CreateThread ( NULL , 0 , FN , DATA , 0 , TP ) <nl> + # define THREAD _ CREATE ( TP , FN , DATA , STACKSIZE ) CreateThread ( NULL , STACKSIZE , FN , DATA , 0 , TP ) <nl> # define THREAD _ EXIT ( ) ExitThread ( 0 ) <nl> # define THREAD _ FUNC ( FN , ARG ) DWORD WINAPI FN ( LPVOID ARG ) <nl> # define THREAD _ CURRENT ( ) GetCurrentThreadId ( ) <nl> @ @ - 69 , 7 + 69 , 15 @ @ typedef _ _ int64 int64 _ t ; <nl> # include < pthread . h > <nl> # define SLEEP ( MS ) usleep ( MS * 1000 ) <nl> # define THREAD _ T pthread _ t <nl> - # define THREAD _ CREATE ( TP , FN , DATA ) pthread _ create ( TP , NULL , FN , DATA ) <nl> + # define THREAD _ CREATE ( TP , FN , DATA , STACKSIZE ) { \ <nl> + pthread _ attr _ t attr ; \ <nl> + pthread _ attr _ init ( & attr ) ; \ <nl> + if ( STACKSIZE > 0 ) { \ <nl> + pthread _ attr _ setstacksize ( & attr , STACKSIZE ) ; \ <nl> + } \ <nl> + pthread _ create ( TP , & attr , FN , DATA ) ; \ <nl> + pthread _ attr _ destroy ( & attr ) ; \ <nl> + } <nl> # define THREAD _ EXIT ( ) pthread _ exit ( NULL ) <nl> # define THREAD _ FUNC ( FN , ARG ) void * FN ( void * ARG ) <nl> # define THREAD _ RETURN return NULL <nl> @ @ - 676 , 7 + 684 , 7 @ @ static THREAD _ FUNC ( thread _ function , arg ) { <nl> } <nl> <nl> EXPORT void <nl> - callVoidCallbackThreaded ( void ( * func ) ( void ) , int n , int ms , const char * name ) { <nl> + callVoidCallbackThreaded ( void ( * func ) ( void ) , int n , int ms , const char * name , int stacksize ) { <nl> THREAD _ T thread ; <nl> thread _ data * data = ( thread _ data * ) malloc ( sizeof ( thread _ data ) ) ; <nl> <nl> @ @ - 684 , 7 + 692 , 7 @ @ callVoidCallbackThreaded ( void ( * func ) ( void ) , int n , int ms , const char * name ) { <nl> data - > sleep _ time = ms ; <nl> data - > func = func ; <nl> snprintf ( data - > name , sizeof ( data - > name ) , " % s " , name ) ; <nl> - THREAD _ CREATE ( & thread , & thread _ function , data ) ; <nl> + THREAD _ CREATE ( & thread , & thread _ function , data , stacksize ) ; <nl> } <nl> <nl> EXPORT int <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index 9aa97fe . . 9348d26 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 127 , 7 + 127 , 7 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> void callback ( ) ; <nl> } <nl> void callVoidCallback ( VoidCallback c ) ; <nl> - void callVoidCallbackThreaded ( VoidCallback c , int count , int ms , String name ) ; <nl> + void callVoidCallbackThreaded ( VoidCallback c , int count , int ms , String name , int stacksize ) ; <nl> interface VoidCallbackCustom extends Callback { <nl> void customMethodName ( ) ; <nl> } <nl> @ @ - 1215 , 7 + 1215 , 7 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> if ( cti ! = null ) { <nl> Native . setCallbackThreadInitializer ( cb , cti ) ; <nl> } <nl> - lib . callVoidCallbackThreaded ( cb , repeat , sleepms , getName ( ) ) ; <nl> + lib . callVoidCallbackThreaded ( cb , repeat , sleepms , getName ( ) , 0 ) ; <nl> <nl> long start = System . currentTimeMillis ( ) ; <nl> while ( called [ 0 ] < returnAfter ) { <nl> @ @ - 1304 , 6 + 1304 , 25 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> waitFor ( t [ 0 ] ) ; <nl> } <nl> <nl> + public void testSmallStackCallback ( ) throws Exception { <nl> + / / This test runs the callback in a thread , that is allocated a very <nl> + / / small size . It was observed on linux amd64 , that a library allocated <nl> + / / a stack size of 64kB , this prevented the JVM to attach to that <nl> + / / thread . The JNIEnv pointer was not checked and this lead to a <nl> + / / hard crash of the JVM . <nl> + TestLibrary . VoidCallback cb = new TestLibrary . VoidCallback ( ) { <nl> + @ Override <nl> + public void callback ( ) { <nl> + System . out . println ( " Callback called " ) ; <nl> + } <nl> + } ; <nl> + <nl> + lib . callVoidCallbackThreaded ( cb , 1 , 0 , " Test Callback " , 64 * 1024 ) ; <nl> + <nl> + / / Give the JVM enough time to run the call back <nl> + Thread . sleep ( 1 * 1000 ) ; <nl> + } <nl> + <nl> / / Detach preference is indicated by the initializer . Thread is attached <nl> / / as daemon to avoid VM having to wait for it . <nl> public void testCallbackThreadPersistence ( ) throws Exception { <nl> diff - - git a / test / com / sun / jna / DirectCallbacksTest . java b / test / com / sun / jna / DirectCallbacksTest . java <nl> index d15e338 . . ec2d277 100644 <nl> - - - a / test / com / sun / jna / DirectCallbacksTest . java <nl> + + + b / test / com / sun / jna / DirectCallbacksTest . java <nl> @ @ - 73 , 7 + 73 , 7 @ @ public class DirectCallbacksTest extends CallbacksTest { <nl> @ Override <nl> public native void callVoidCallback ( VoidCallback c ) ; <nl> @ Override <nl> - public native void callVoidCallbackThreaded ( VoidCallback c , int count , int ms , String name ) ; <nl> + public native void callVoidCallbackThreaded ( VoidCallback c , int count , int ms , String name , int stacksize ) ; <nl> <nl> @ Override <nl> public native int callInt32Callback ( CustomCallback cb , int arg1 , int arg2 ) ;
diff - - git a / README . md b / README . md <nl> index 956ec95 . . cf4e61e 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 5 , 7 + 5 , 7 @ @ <nl> Java Native Access ( JNA ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / java - native - access . github . io / jna / 4 . 5 . 1 / javadoc / ) . Please read the [ overview ] ( http : / / java - native - access . github . io / jna / 4 . 5 . 1 / javadoc / overview - summary . html # overview _ description ) . Questions , comments , or exploratory conversations should begin on the [ mailing list ] ( http : / / groups . google . com / group / jna - users ) , although you may find it easier to find answers to already - solved problems on [ StackOverflow ] ( http : / / stackoverflow . com / questions / tagged / jna ) . <nl> + The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / java - native - access . github . io / jna / 4 . 5 . 2 / javadoc / ) . Please read the [ overview ] ( http : / / java - native - access . github . io / jna / 4 . 5 . 2 / javadoc / overview - summary . html # overview _ description ) . Questions , comments , or exploratory conversations should begin on the [ mailing list ] ( http : / / groups . google . com / group / jna - users ) , although you may find it easier to find answers to already - solved problems on [ StackOverflow ] ( http : / / stackoverflow . com / questions / tagged / jna ) . <nl> <nl> JNA provides Java programs easy access to native shared libraries without writing anything but Java code - no JNI or native code is required . This functionality is comparable to Windows ' Platform / Invoke and Python ' s ctypes . <nl> <nl> @ @ - 58 , 12 + 58 , 12 @ @ Pre - built platform support may be found [ here ] ( https : / / github . com / java - native - ac <nl> Download <nl> = = = = = = = = <nl> <nl> - Version 4 . 5 . 1 <nl> + Version 4 . 5 . 2 <nl> <nl> JNA <nl> - - - <nl> <nl> - [ ! [ Maven Central ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna / badge . svg ) ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna ) & nbsp ; [ jna . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna / 4 . 5 . 1 / jna - 4 . 5 . 1 . jar ) <nl> + [ ! [ Maven Central ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna / badge . svg ) ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna ) & nbsp ; [ jna . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna / 4 . 5 . 2 / jna - 4 . 5 . 2 . jar ) <nl> <nl> This is the core artifact of JNA and contains only the binding library and the <nl> core helper classes . <nl> @ @ - 71 , 7 + 71 , 7 @ @ core helper classes . <nl> JNA Platform <nl> - - - - - - - - - - - - <nl> <nl> - [ ! [ Maven Central ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna - platform / badge . svg ) ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna - platform ) & nbsp ; [ jna - platform . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna - platform / 4 . 5 . 1 / jna - platform - 4 . 5 . 1 . jar ) <nl> + [ ! [ Maven Central ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna - platform / badge . svg ) ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna - platform ) & nbsp ; [ jna - platform . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna - platform / 4 . 5 . 2 / jna - platform - 4 . 5 . 2 . jar ) <nl> <nl> This artifact holds cross - platform mappings and mappings for a number of commonly used platform <nl> functions , including a large number of Win32 mappings as well as a set of utility classes <nl> @ @ - 139 , 12 + 139 , 12 @ @ Using the Library <nl> * [ Platform Library ] ( https : / / github . com / java - native - access / jna / blob / master / www / PlatformLibrary . md ) <nl> * [ Direct Method Mapping ] ( https : / / github . com / java - native - access / jna / blob / master / www / DirectMapping . md ) ( Optimization ) <nl> * [ Frequently Asked Questions ( FAQ ) ] ( https : / / github . com / java - native - access / jna / blob / master / www / FrequentlyAskedQuestions . md ) <nl> - * [ Avoiding Crashes ] ( http : / / java - native - access . github . io / jna / 4 . 5 . 1 / javadoc / overview - summary . html # crash - protection ) <nl> + * [ Avoiding Crashes ] ( http : / / java - native - access . github . io / jna / 4 . 5 . 2 / javadoc / overview - summary . html # crash - protection ) <nl> <nl> Primary Documentation ( JavaDoc ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference is in the [ JavaDoc ] ( http : / / java - native - access . github . io / jna / 4 . 5 . 1 / javadoc / ) . <nl> + The definitive JNA reference is in the [ JavaDoc ] ( http : / / java - native - access . github . io / jna / 4 . 5 . 2 / javadoc / ) . <nl> <nl> Developers <nl> = = = = = = = = = =
diff - - git a / CHANGES . md b / CHANGES . md <nl> index acc7d76 . . b3debb0 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 7 , 6 + 7 , 7 @ @ Release 5 . 0 . 0 ( Next release ) <nl> <nl> Features <nl> - - - - - - - - <nl> + * [ # 975 ] ( https : / / github . com / java - native - access / jna / pull / 982 ) : Add package versions to OSGi metadata . - [ @ io7m ] ( https : / / github . com / io7m ) . <nl> * [ # 915 ] ( https : / / github . com / java - native - access / jna / pull / 915 ) : Adding interfaces to call to Cryptui and Crypt32 windows libraries and adding related structures to Wincrypt . - [ @ rosh89 ] ( https : / / github . com / rosh89 ) . <nl> * [ # 903 ] ( https : / / github . com / java - native - access / jna / pull / 903 ) : Carry ` HRESULT ` in ` c . s . j . p . win32 . COM . COMException ` , introduce ` c . s . j . p . win32 . COM . COMInvokeException ` as subclass of ` COMException ` for exception as the result of a ` IDispatch # Invoke ` . The ` EXECPINFO ` is unwrapped into fields in the ` COMInvokeException ` and correctly freed . - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 822 ] ( https : / / github . com / java - native - access / jna / issues / 822 ) : ` Native # loadLibrary ` requires that the interface class passed in is an instance of Library . The runtime check can be enhanced by using a constraint generic . This breaks binary compatibility ( see notes below ) - [ @ d - noll ] ( https : / / github . com / d - noll ) . < br / > < br / > In a followup , the original ` loadLibrary ` methods were deprecated and ` Native # load ` methods were introduced , that hold the new generic definitions . So this change is now binary compatible . <nl> diff - - git a / build . xml b / build . xml <nl> index e70b59f . . 60ccf9f 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 402 , 7 + 402 , 7 @ @ <nl> < attribute name = " Bundle - RequiredExecutionEnvironment " value = " J2SE - 1 . 4 " / > <nl> < attribute name = " Bundle - Vendor " value = " $ { vendor } " / > <nl> < attribute name = " Bundle - ActivationPolicy " value = " lazy " / > <nl> - < attribute name = " Export - Package " value = " com . sun . jna , com . sun . jna . ptr , com . sun . jna . win32 " / > <nl> + < attribute name = " Export - Package " value = " com . sun . jna ; version = $ { jna . major } . $ { jna . minor } . $ { jna . revision } , com . sun . jna . ptr ; version = $ { jna . major } . $ { jna . minor } . $ { jna . revision } , com . sun . jna . win32 ; version = $ { jna . major } . $ { jna . minor } . $ { jna . revision } " / > <nl> < ! - - Note that no terminal " * " is included in this list , <nl> which will force failure on unsupported platforms . <nl> - - > <nl> diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index 3153da5 . . 63f25c1 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 124 , 15 + 124 , 15 @ @ <nl> < attribute name = " Require - Bundle " value = " com . sun . jna ; bundle - version = & quot ; $ { osgi . version } & quot ; " / > <nl> < attribute name = " Export - Package " <nl> value = " <nl> - com . sun . jna . platform , <nl> - com . sun . jna . platform . dnd , <nl> - com . sun . jna . platform . mac , <nl> - com . sun . jna . platform . unix , <nl> - com . sun . jna . platform . win32 , <nl> - com . sun . jna . platform . win32 . COM , <nl> - com . sun . jna . platform . win32 . COM . tlb , <nl> - com . sun . jna . platform . win32 . COM . tlb . imp , <nl> - com . sun . jna . platform . wince <nl> + com . sun . jna . platform ; version = $ { osgi . version } , <nl> + com . sun . jna . platform . dnd ; version = $ { osgi . version } , <nl> + com . sun . jna . platform . mac ; version = $ { osgi . version } , <nl> + com . sun . jna . platform . unix ; version = $ { osgi . version } , <nl> + com . sun . jna . platform . win32 ; version = $ { osgi . version } , <nl> + com . sun . jna . platform . win32 . COM ; version = $ { osgi . version } , <nl> + com . sun . jna . platform . win32 . COM . tlb ; version = $ { osgi . version } , <nl> + com . sun . jna . platform . win32 . COM . tlb . imp ; version = $ { osgi . version } , <nl> + com . sun . jna . platform . wince ; version = $ { osgi . version } <nl> " / > <nl> < / manifest > <nl> < / target >
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 3f6bb3d . . 610bf7b 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 21 , 6 + 21 , 7 @ @ Features <nl> * [ # 952 ] ( https : / / github . com / java - native - access / jna / issues / 952 ) : Added ` CreateMutex ` , ` OpenMutex ` and ` ReleaseMutex ` to ` com . sun . jna . platform . win32 . Kernel32 ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 973 ] ( https : / / github . com / java - native - access / jna / issues / 973 ) : Added ` PdhLookupPerfNameByIndex ` , ` PdhLookupPerfIndexByName ` , and ` PdhEnumObjectItems ` to ` c . s . j . platform . win32 . Pdh ` and a ` c . s . j . platform . win32 . PdhUtil ` class to access them - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 980 ] ( https : / / github . com / java - native - access / jna / issues / 980 ) : Added ` PERF _ OBJECT _ TYPE ` , ` PERF _ COUNTER _ BLOCK ` , and ` PERF _ COUNTER _ DEFINITION ` to ` c . s . j . platform . win32 . WinPerf ` and added ` Pointer ` constructors to ` ` PERF _ INSTANCE _ DEFINITION ` and ` PERF _ DATA _ BLOCK ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> + * [ # 981 ] ( https : / / github . com / java - native - access / jna / issues / 981 ) : Added ` WTS _ PROCESS _ INFO _ EX ` , ` WTSEnumerateProcessesEx ` , and ` WTSFreeMemoryEx ` to ` c . s . j . platform . win32 . Wtsapi32 ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Wtsapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Wtsapi32 . java <nl> index 902083c . . afe3d02 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Wtsapi32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Wtsapi32 . java <nl> @ @ - 24 , 9 + 24 , 18 @ @ <nl> package com . sun . jna . platform . win32 ; <nl> <nl> import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . Structure ; <nl> + import com . sun . jna . Structure . FieldOrder ; <nl> import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> + import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> + import com . sun . jna . platform . win32 . WinNT . LARGE _ INTEGER ; <nl> + import com . sun . jna . platform . win32 . WinNT . PSID ; <nl> + import com . sun . jna . ptr . IntByReference ; <nl> + import com . sun . jna . ptr . PointerByReference ; <nl> import com . sun . jna . win32 . StdCallLibrary ; <nl> import com . sun . jna . win32 . W32APIOptions ; <nl> + import com . sun . jna . win32 . W32APITypeMapper ; <nl> <nl> public interface Wtsapi32 extends StdCallLibrary { <nl> <nl> @ @ - 86 , 6 + 95 , 61 @ @ public interface Wtsapi32 extends StdCallLibrary { <nl> 	 * / <nl> 	 int WTS _ SESSION _ REMOTE _ CONTROL = 0x9 ; <nl> <nl> + / * * <nl> + * Specifies the current server <nl> + * / <nl> + HANDLE WTS _ CURRENT _ SERVER _ HANDLE = new HANDLE ( null ) ; <nl> + <nl> + / * * <nl> + * Specifies the current session ( SessionId ) <nl> + * / <nl> + int WTS _ CURRENT _ SESSION = - 1 ; <nl> + <nl> + / * * <nl> + * Specifies any - session ( SessionId ) <nl> + * / <nl> + int WTS _ ANY _ SESSION = - 2 ; <nl> + <nl> + int WTS _ PROCESS _ INFO _ LEVEL _ 0 = 0 ; <nl> + int WTS _ PROCESS _ INFO _ LEVEL _ 1 = 1 ; <nl> + <nl> + / * * <nl> + * Contains extended information about a process running on a Remote Desktop <nl> + * Session Host ( RD Session Host ) server . This structure is returned by the <nl> + * WTSEnumerateProcessesEx function when you set the pLevel parameter to <nl> + * one . <nl> + * <nl> + * @ see < A HREF = <nl> + * " https : / / docs . microsoft . com / en - us / windows / desktop / api / wtsapi32 / ns - wtsapi32 - _ wts _ process _ info _ exa " > WTS _ PROCESS _ INFO _ EXA < / A > <nl> + * @ see < A HREF = <nl> + * " https : / / docs . microsoft . com / en - us / windows / desktop / api / wtsapi32 / ns - wtsapi32 - _ wts _ process _ info _ exw " > WTS _ PROCESS _ INFO _ EXW < / A > <nl> + * / <nl> + @ FieldOrder ( { " SessionId " , " ProcessId " , " pProcessName " , " pUserSid " , " NumberOfThreads " , " HandleCount " , <nl> + " PagefileUsage " , " PeakPagefileUsage " , " WorkingSetSize " , " PeakWorkingSetSize " , " UserTime " , " KernelTime " } ) <nl> + class WTS _ PROCESS _ INFO _ EX extends Structure { <nl> + public int SessionId ; <nl> + public int ProcessId ; <nl> + public String pProcessName ; / / Either LPSTR or LPWSTR <nl> + public PSID pUserSid ; <nl> + public int NumberOfThreads ; <nl> + public int HandleCount ; <nl> + public int PagefileUsage ; <nl> + public int PeakPagefileUsage ; <nl> + public int WorkingSetSize ; <nl> + public int PeakWorkingSetSize ; <nl> + public LARGE _ INTEGER UserTime ; <nl> + public LARGE _ INTEGER KernelTime ; <nl> + <nl> + public WTS _ PROCESS _ INFO _ EX ( ) { <nl> + super ( W32APITypeMapper . DEFAULT ) ; <nl> + } <nl> + <nl> + public WTS _ PROCESS _ INFO _ EX ( Pointer p ) { <nl> + super ( p , Structure . ALIGN _ DEFAULT , W32APITypeMapper . DEFAULT ) ; <nl> + read ( ) ; <nl> + } <nl> + } <nl> + <nl> 	 / * * <nl> 	 * Registers the specified window to receive session change notifications . <nl> 	 * <nl> @ @ - 114 , 4 + 178 , 65 @ @ public interface Wtsapi32 extends StdCallLibrary { <nl> 	 * is FALSE . To get extended error information , call GetLastError . <nl> 	 * / <nl> 	 boolean WTSUnRegisterSessionNotification ( HWND hWnd ) ; <nl> + <nl> + / * * <nl> + * Retrieves information about the active processes on the specified Remote <nl> + * Desktop Session Host ( RD Session Host ) server or Remote Desktop <nl> + * Virtualization Host ( RD Virtualization Host ) server . <nl> + * <nl> + * @ param hServer <nl> + * A handle to an RD Session Host server . Specify a handle opened <nl> + * by the WTSOpenServer function , or specify <nl> + * WTS _ CURRENT _ SERVER _ HANDLE to indicate the server on which your <nl> + * application is running . <nl> + * @ param pLevel <nl> + * A pointer to a DWORD variable that , on input , specifies the <nl> + * type of information to return . To return an array of <nl> + * WTS _ PROCESS _ INFO structures , specify zero . To return an array <nl> + * of WTS _ PROCESS _ INFO _ EX structures , specify one . If you do not <nl> + * specify a valid value for this parameter , on output , <nl> + * WTSEnumerateProcessesEx sets this parameter to one and returns <nl> + * an error . Otherwise , on output , WTSEnumerateProcessesEx does <nl> + * not change the value of this parameter . <nl> + * @ param SessionID <nl> + * The session for which to enumerate processes . To enumerate <nl> + * processes for all sessions on the server , specify <nl> + * WTS _ ANY _ SESSION . <nl> + * @ param ppProcessInfo <nl> + * A pointer to a variable that receives a pointer to an array of <nl> + * WTS _ PROCESS _ INFO or WTS _ PROCESS _ INFO _ EX structures . The type <nl> + * of structure is determined by the value passed to the pLevel <nl> + * parameter . Each structure in the array contains information <nl> + * about an active process . When you have finished using the <nl> + * array , free it by calling the WTSFreeMemoryEx function . You <nl> + * should also set the pointer to NULL . <nl> + * @ param pCount <nl> + * A pointer to a variable that receives the number of structures <nl> + * returned in the buffer referenced by the ppProcessInfo <nl> + * parameter . <nl> + * @ return If the function succeeds , the return value is a nonzero value . If <nl> + * the function fails , the return value is zero . To get extended <nl> + * error information , call the GetLastError function . <nl> + * / <nl> + boolean WTSEnumerateProcessesEx ( HANDLE hServer , IntByReference pLevel , int SessionID , <nl> + PointerByReference ppProcessInfo , IntByReference pCount ) ; <nl> + <nl> + / * * <nl> + * Frees memory that contains WTS _ PROCESS _ INFO _ EX or WTS _ SESSION _ INFO _ 1 <nl> + * structures allocated by a Remote Desktop Services function . <nl> + * <nl> + * @ param WTSTypeClass <nl> + * A value of the WTS _ TYPE _ CLASS enumeration type that specifies <nl> + * the type of structures contained in the buffer referenced by <nl> + * the pMemory parameter . <nl> + * @ param pMemory <nl> + * A pointer to the buffer to free . <nl> + * @ param NumberOfEntries <nl> + * The number of elements in the buffer referenced by the pMemory <nl> + * parameter . <nl> + * @ return If the function succeeds , the return value is a nonzero value . If <nl> + * the function fails , the return value is zero . To get extended <nl> + * error information , call the GetLastError function . <nl> + * / <nl> + boolean WTSFreeMemoryEx ( int WTSTypeClass , Pointer pMemory , int NumberOfEntries ) ; <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Wtsapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Wtsapi32Test . java <nl> index d8daffc . . 5bc516f 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Wtsapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Wtsapi32Test . java <nl> @ @ - 1 , 11 + 1 , 17 @ @ <nl> package com . sun . jna . platform . win32 ; <nl> <nl> import java . awt . Frame ; <nl> + import java . util . HashSet ; <nl> + import java . util . Set ; <nl> <nl> import com . sun . jna . Native ; <nl> - import junit . framework . TestCase ; <nl> - <nl> + import com . sun . jna . Pointer ; <nl> import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> + import com . sun . jna . platform . win32 . Wtsapi32 . WTS _ PROCESS _ INFO _ EX ; <nl> + import com . sun . jna . ptr . IntByReference ; <nl> + import com . sun . jna . ptr . PointerByReference ; <nl> + <nl> + import junit . framework . TestCase ; <nl> <nl> public class Wtsapi32Test extends TestCase { <nl> <nl> @ @ - 35 , 4 + 41 , 41 @ @ public class Wtsapi32Test extends TestCase { <nl> <nl> 	 	 assertEquals ( true , result ) ; <nl> 	 } <nl> + 	 <nl> + public void testWTSEnumerateProcessesEx ( ) { <nl> + / / Get processes from WTS <nl> + PointerByReference ppProcessInfo = new PointerByReference ( ) ; <nl> + IntByReference pCount = new IntByReference ( 0 ) ; <nl> + assertTrue ( Wtsapi32 . INSTANCE . WTSEnumerateProcessesEx ( Wtsapi32 . WTS _ CURRENT _ SERVER _ HANDLE , <nl> + new IntByReference ( Wtsapi32 . WTS _ PROCESS _ INFO _ LEVEL _ 1 ) , Wtsapi32 . WTS _ ANY _ SESSION , ppProcessInfo , <nl> + pCount ) ) ; <nl> + / / extract the pointed - to pointer and create array <nl> + Pointer pProcessInfo = ppProcessInfo . getValue ( ) ; <nl> + WTS _ PROCESS _ INFO _ EX processInfoRef = new WTS _ PROCESS _ INFO _ EX ( pProcessInfo ) ; <nl> + WTS _ PROCESS _ INFO _ EX [ ] processInfo = ( WTS _ PROCESS _ INFO _ EX [ ] ) processInfoRef . toArray ( pCount . getValue ( ) ) ; <nl> + <nl> + Set < Integer > pidSet = new HashSet < Integer > ( ) ; <nl> + for ( WTS _ PROCESS _ INFO _ EX procInfo : processInfo ) { <nl> + / / PIDs should be unique <nl> + if ( procInfo . ProcessId ! = 0 ) { <nl> + assertFalse ( pidSet . contains ( procInfo . ProcessId ) ) ; <nl> + pidSet . add ( procInfo . ProcessId ) ; <nl> + } <nl> + <nl> + / / A process cannot time travel and use negative CPU ticks <nl> + assertTrue ( procInfo . KernelTime . getValue ( ) > = 0 ) ; <nl> + assertTrue ( procInfo . UserTime . getValue ( ) > = 0 ) ; <nl> + <nl> + / / Process name should be nonempty except for the Idle process <nl> + String name = procInfo . pProcessName ; <nl> + if ( procInfo . ProcessId ! = 0 ) { <nl> + assertFalse ( name . isEmpty ( ) ) ; <nl> + } <nl> + <nl> + } <nl> + / / Clean up memory allocated in C <nl> + assertTrue ( <nl> + Wtsapi32 . INSTANCE . WTSFreeMemoryEx ( Wtsapi32 . WTS _ PROCESS _ INFO _ LEVEL _ 1 , pProcessInfo , pCount . getValue ( ) ) ) ; <nl> + <nl> + } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 0df3208 . . c03c1be 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 19 , 6 + 19 , 7 @ @ Features <nl> * [ # 954 ] ( https : / / github . com / java - native - access / jna / pull / 954 ) : Add ` c . s . j . Structure . FieldOrder ` annotation to define the field order of a structures without implementing ` Structure # getFieldOrder ( ) ` - [ @ idosu ] ( https : / / github . com / idosu ) . <nl> * [ # 959 ] ( https : / / github . com / java - native - access / jna / pull / 959 ) : Added ` GetProcessTimes ` and ` GetProcessIoCounters ` to ` com . sun . jna . platform . win32 . Kernel32 ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 952 ] ( https : / / github . com / java - native - access / jna / issues / 952 ) : Added ` CreateMutex ` , ` OpenMutex ` and ` ReleaseMutex ` to ` com . sun . jna . platform . win32 . Kernel32 ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 973 ] ( https : / / github . com / java - native - access / jna / issues / 973 ) : Added ` PdhLookupPerfNameByIndex ` , ` PdhLookupPerfIndexByName ` , and ` PdhEnumObjectItems ` to ` c . s . j . platform . win32 . Pdh ` and a ` c . s . j . platform . win32 . PdhUtil ` class to access them - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Pdh . java b / contrib / platform / src / com / sun / jna / platform / win32 / Pdh . java <nl> index d6bafb0 . . 88a2b7d 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Pdh . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Pdh . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ package com . sun . jna . platform . win32 ; <nl> import java . util . List ; <nl> <nl> import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> import com . sun . jna . Structure . FieldOrder ; <nl> import com . sun . jna . platform . win32 . BaseTSD . DWORD _ PTR ; <nl> @ @ - 277 , 4 + 278 , 126 @ @ public interface Pdh extends StdCallLibrary { <nl> * @ see < A HREF = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa372677 ( v = vs . 85 ) . aspx " > PdhSetQueryTimeRange < / A > <nl> * / <nl> int PdhSetQueryTimeRange ( HANDLE hQuery , PDH _ TIME _ INFO pInfo ) ; <nl> + <nl> + 	 / * * <nl> + 	 * Returns the specified object ' s counter and instance names that exist on <nl> + 	 * the specified computer or in the specified log file . <nl> + 	 * <nl> + 	 * @ param szDataSource <nl> + 	 * String that specifies the name of the log file used to <nl> + 	 * enumerate the counter and instance names . If NULL , the <nl> + 	 * function uses the computer specified in the szMachineName <nl> + 	 * parameter to enumerate the names . <nl> + 	 * @ param szMachineName <nl> + 	 * String that specifies the name of the computer that contains <nl> + 	 * the counter and instance names that you want to enumerate . <nl> + 	 * Include the leading slashes in the computer name , for example , <nl> + 	 * \ \ computername . If the szDataSource parameter is NULL , you can <nl> + 	 * set szMachineName to NULL to specify the local computer . <nl> + 	 * @ param szObjectName <nl> + 	 * String that specifies the name of the object whose counter and <nl> + 	 * instance names you want to enumerate . <nl> + 	 * @ param mszCounterList <nl> + 	 * Caller - allocated buffer that receives a list of <nl> + 	 * null - terminated counter names provided by the specified <nl> + 	 * object . The list contains unique counter names . The list is <nl> + 	 * terminated by two NULL characters . Set to NULL if the <nl> + 	 * pcchCounterListLengthparameter is zero . <nl> + 	 * @ param pcchCounterListLength <nl> + 	 * Size of the mszCounterList buffer , in TCHARs . If zero on input <nl> + 	 * and the object exists , the function returns PDH _ MORE _ DATA and <nl> + 	 * sets this parameter to the required buffer size . If the buffer <nl> + 	 * is larger than the required size , the function sets this <nl> + 	 * parameter to the actual size of the buffer that was used . If <nl> + 	 * the specified size on input is greater than zero but less than <nl> + 	 * the required size , you should not rely on the returned size to <nl> + 	 * reallocate the buffer . <nl> + 	 * @ param mszInstanceList <nl> + 	 * Caller - allocated buffer that receives a list of <nl> + 	 * null - terminated instance names provided by the specified <nl> + 	 * object . The list contains unique instance names . The list is <nl> + 	 * terminated by two NULL characters . Set to NULL if <nl> + 	 * pcchInstanceListLength is zero . <nl> + 	 * @ param pcchInstanceListLength <nl> + 	 * Size of the mszInstanceList buffer , in TCHARs . If zero on <nl> + 	 * input and the object exists , the function returns <nl> + 	 * PDH _ MORE _ DATA and sets this parameter to the required buffer <nl> + 	 * size . If the buffer is larger than the required size , the <nl> + 	 * function sets this parameter to the actual size of the buffer <nl> + 	 * that was used . If the specified size on input is greater than <nl> + 	 * zero but less than the required size , you should not rely on <nl> + 	 * the returned size to reallocate the buffer . If the specified <nl> + 	 * object does not support variable instances , then the returned <nl> + 	 * value will be zero . If the specified object does support <nl> + 	 * variable instances , but does not currently have any instances , <nl> + 	 * then the value returned is 2 , which is the size of an empty <nl> + 	 * MULTI _ SZ list string . <nl> + 	 * @ param dwDetailLevel <nl> + 	 * Detail level of the performance items to return . All items <nl> + 	 * that are of the specified detail level or less will be <nl> + 	 * returned . <nl> + 	 * @ param dwFlags <nl> + 	 * This parameter must be zero . <nl> + 	 * @ return If the function succeeds , it returns ERROR _ SUCCESS . If the <nl> + 	 * function fails , the return value is a system error code or a PDH <nl> + 	 * error code . <nl> + 	 * @ see < A HREF = <nl> + 	 * " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa372677 ( v = vs . 85 ) . aspx " > PdhEnumObjectItems < / A > <nl> + 	 * / <nl> + 	 int PdhEnumObjectItems ( String szDataSource , String szMachineName , String szObjectName , Pointer mszCounterList , <nl> + 	 	 	 DWORDByReference pcchCounterListLength , Pointer mszInstanceList , DWORDByReference pcchInstanceListLength , <nl> + 	 	 	 int dwDetailLevel , int dwFlags ) ; <nl> + <nl> + 	 / * * <nl> + 	 * Returns the counter index corresponding to the specified counter name . <nl> + 	 * <nl> + 	 * @ param szMachineName <nl> + 	 * Null - terminated string that specifies the name of the computer <nl> + 	 * where the specified counter is located . The computer name can <nl> + 	 * be specified by the DNS name or the IP address . If NULL , the <nl> + 	 * function uses the local computer . <nl> + 	 * @ param szNameBuffer <nl> + 	 * Null - terminated string that contains the counter name . <nl> + 	 * @ param pdwIndex <nl> + 	 * Index of the counter . <nl> + 	 * @ return If the function succeeds , it returns ERROR _ SUCCESS . If the <nl> + 	 * function fails , the return value is a system error code or a PDH <nl> + 	 * error code . <nl> + 	 * @ see < A HREF = <nl> + 	 * " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa372647 ( v = vs . 85 ) . aspx " > PdhLookupPerfIndexByName < / A > <nl> + 	 * / <nl> + 	 int PdhLookupPerfIndexByName ( String szMachineName , String szNameBuffer , DWORDByReference pdwIndex ) ; <nl> + <nl> + 	 / * * <nl> + 	 * Returns the performance object name or counter name corresponding to the <nl> + 	 * specified index . <nl> + 	 * <nl> + 	 * @ param szMachineName <nl> + 	 * Null - terminated string that specifies the name of the computer <nl> + 	 * where the specified performance object or counter is located . <nl> + 	 * The computer name can be specified by the DNS name or the IP <nl> + 	 * address . If NULL , the function uses the local computer . <nl> + 	 * @ param dwNameIndex <nl> + 	 * Index of the performance object or counter . <nl> + 	 * @ param szNameBuffer <nl> + 	 * Caller - allocated buffer that receives the null - terminated name <nl> + 	 * of the performance object or counter . Set to NULL if <nl> + 	 * pcchNameBufferSize is zero . <nl> + 	 * @ param pcchNameBufferSize <nl> + 	 * Size of the szNameBuffer buffer , in TCHARs . If zero on input , <nl> + 	 * the function returns PDH _ MORE _ DATA and sets this parameter to <nl> + 	 * the required buffer size . If the buffer is larger than the <nl> + 	 * required size , the function sets this parameter to the actual <nl> + 	 * size of the buffer that was used . If the specified size on <nl> + 	 * input is greater than zero but less than the required size , <nl> + 	 * you should not rely on the returned size to reallocate the <nl> + 	 * buffer . <nl> + 	 * @ return If the function succeeds , it returns ERROR _ SUCCESS . If the <nl> + 	 * function fails , the return value is a system error code or a PDH <nl> + 	 * error code . <nl> + 	 * @ see < A HREF = <nl> + 	 * " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa372648 ( v = vs . 85 ) . aspx " > PdhLookupPerfNameByIndex < / A > <nl> + 	 * / <nl> + 	 int PdhLookupPerfNameByIndex ( String szMachineName , int dwNameIndex , Pointer szNameBuffer , <nl> + 	 	 	 DWORDByReference pcchNameBufferSize ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / PdhUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / PdhUtil . java <nl> new file mode 100644 <nl> index 0000000 . . 7b8788d <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / PdhUtil . java <nl> @ @ - 0 , 0 + 1 , 200 @ @ <nl> + / * Copyright ( c ) 2018 Daniel Widdis , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + <nl> + import com . sun . jna . Memory ; <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> + import com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> + <nl> + / * * <nl> + * Pdh utility API . <nl> + * <nl> + * @ author widdis [ at ] gmail [ dot ] com <nl> + * / <nl> + public abstract class PdhUtil { <nl> + <nl> + / * * <nl> + * Utility method to call Pdh ' s PdhLookupPerfNameByIndex that allocates the <nl> + * required memory for the szNameBuffer parameter based on the type mapping <nl> + * used , calls to PdhLookupPerfNameByIndex , and returns the received string . <nl> + * <nl> + * @ param szMachineName <nl> + * Null - terminated string that specifies the name of the computer <nl> + * where the specified performance object or counter is located . <nl> + * The computer name can be specified by the DNS name or the IP <nl> + * address . If NULL , the function uses the local computer . <nl> + * @ param dwNameIndex <nl> + * Index of the performance object or counter . <nl> + * @ return Returns the name of the performance object or counter . <nl> + * / <nl> + public static String PdhLookupPerfNameByIndex ( String szMachineName , int dwNameIndex ) { <nl> + int charToBytes = Boolean . getBoolean ( " w32 . ascii " ) ? 1 : Native . WCHAR _ SIZE ; <nl> + <nl> + / / Call once to get required buffer size <nl> + DWORDByReference pcchNameBufferSize = new DWORDByReference ( new DWORD ( 0 ) ) ; <nl> + Pdh . INSTANCE . PdhLookupPerfNameByIndex ( null , dwNameIndex , null , pcchNameBufferSize ) ; <nl> + <nl> + / / Allocate buffer and call again <nl> + Memory mem = new Memory ( pcchNameBufferSize . getValue ( ) . intValue ( ) * charToBytes ) ; <nl> + Pdh . INSTANCE . PdhLookupPerfNameByIndex ( null , dwNameIndex , mem , pcchNameBufferSize ) ; <nl> + <nl> + / / Convert buffer to Java String <nl> + if ( charToBytes = = 1 ) { <nl> + return mem . getString ( 0 ) ; <nl> + } else { <nl> + return mem . getWideString ( 0 ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Utility method to call Pdh ' s PdhEnumObjectItems that allocates the <nl> + * required memory for the mszCounterList parameter based on the type <nl> + * mapping used , calls to PdhEnumObjectItems , and returns the received lists <nl> + * of strings . <nl> + * <nl> + * @ param szDataSource <nl> + * String that specifies the name of the log file used to <nl> + * enumerate the counter and instance names . If NULL , the <nl> + * function uses the computer specified in the szMachineName <nl> + * parameter to enumerate the names . <nl> + * @ param szMachineName <nl> + * String that specifies the name of the computer that contains <nl> + * the counter and instance names that you want to enumerate . <nl> + * Include the leading slashes in the computer name , for example , <nl> + * \ \ computername . If the szDataSource parameter is NULL , you can <nl> + * set szMachineName to NULL to specify the local computer . <nl> + * @ param szObjectName <nl> + * String that specifies the name of the object whose counter and <nl> + * instance names you want to enumerate . <nl> + * @ param dwDetailLevel <nl> + * Detail level of the performance items to return . All items <nl> + * that are of the specified detail level or less will be <nl> + * returned . <nl> + * @ return Returns a List of Strings of the counters for the object . <nl> + * / <nl> + public static List < String > PdhEnumObjectItemCounters ( String szDataSource , String szMachineName , String szObjectName , <nl> + int dwDetailLevel ) { <nl> + int charToBytes = Boolean . getBoolean ( " w32 . ascii " ) ? 1 : Native . WCHAR _ SIZE ; <nl> + <nl> + / / Call once to get string lengths <nl> + DWORDByReference pcchCounterListLength = new DWORDByReference ( new DWORD ( 0 ) ) ; <nl> + DWORDByReference pcchInstanceListLength = new DWORDByReference ( new DWORD ( 0 ) ) ; <nl> + Pdh . INSTANCE . PdhEnumObjectItems ( szDataSource , szMachineName , szObjectName , null , pcchCounterListLength , null , <nl> + pcchInstanceListLength , dwDetailLevel , 0 ) ; <nl> + <nl> + / / Allocate memory and call again to populate strings <nl> + Memory mszCounterList = new Memory ( pcchCounterListLength . getValue ( ) . intValue ( ) * charToBytes ) ; <nl> + Memory mszInstanceList = new Memory ( pcchInstanceListLength . getValue ( ) . intValue ( ) * charToBytes ) ; <nl> + Pdh . INSTANCE . PdhEnumObjectItems ( szDataSource , szMachineName , szObjectName , mszCounterList , <nl> + pcchCounterListLength , mszInstanceList , pcchInstanceListLength , dwDetailLevel , 0 ) ; <nl> + <nl> + / / Fetch counters <nl> + List < String > counters = new ArrayList < String > ( ) ; <nl> + int offset = 0 ; <nl> + while ( offset < mszCounterList . size ( ) ) { <nl> + String s = null ; <nl> + if ( charToBytes = = 1 ) { <nl> + s = mszCounterList . getString ( offset ) ; <nl> + } else { <nl> + s = mszCounterList . getWideString ( offset ) ; <nl> + } <nl> + / / list ends with double null <nl> + if ( s . isEmpty ( ) ) { <nl> + break ; <nl> + } <nl> + counters . add ( s ) ; <nl> + / / Increment for string + null terminator <nl> + offset + = ( s . length ( ) + 1 ) * charToBytes ; <nl> + } <nl> + <nl> + return counters ; <nl> + } <nl> + <nl> + / * * <nl> + * Utility method to call Pdh ' s PdhEnumObjectItems that allocates the <nl> + * required memory for the mszInstanceList parameters based on the type <nl> + * mapping used , calls to PdhEnumObjectItems , and returns the received lists <nl> + * of strings . <nl> + * <nl> + * @ param szDataSource <nl> + * String that specifies the name of the log file used to <nl> + * enumerate the counter and instance names . If NULL , the <nl> + * function uses the computer specified in the szMachineName <nl> + * parameter to enumerate the names . <nl> + * @ param szMachineName <nl> + * String that specifies the name of the computer that contains <nl> + * the counter and instance names that you want to enumerate . <nl> + * Include the leading slashes in the computer name , for example , <nl> + * \ \ computername . If the szDataSource parameter is NULL , you can <nl> + * set szMachineName to NULL to specify the local computer . <nl> + * @ param szObjectName <nl> + * String that specifies the name of the object whose counter and <nl> + * instance names you want to enumerate . <nl> + * @ param dwDetailLevel <nl> + * Detail level of the performance items to return . All items <nl> + * that are of the specified detail level or less will be <nl> + * returned . <nl> + * @ return Returns a Lists of Strings of the instances of the object . <nl> + * / <nl> + public static List < String > PdhEnumObjectItemInstances ( String szDataSource , String szMachineName , <nl> + String szObjectName , int dwDetailLevel ) { <nl> + int charToBytes = Boolean . getBoolean ( " w32 . ascii " ) ? 1 : Native . WCHAR _ SIZE ; <nl> + <nl> + / / Call once to get string lengths <nl> + DWORDByReference pcchCounterListLength = new DWORDByReference ( new DWORD ( 0 ) ) ; <nl> + DWORDByReference pcchInstanceListLength = new DWORDByReference ( new DWORD ( 0 ) ) ; <nl> + Pdh . INSTANCE . PdhEnumObjectItems ( szDataSource , szMachineName , szObjectName , null , pcchCounterListLength , null , <nl> + pcchInstanceListLength , dwDetailLevel , 0 ) ; <nl> + <nl> + / / Allocate memory and call again to populate strings <nl> + Memory mszCounterList = new Memory ( pcchCounterListLength . getValue ( ) . intValue ( ) * charToBytes ) ; <nl> + Memory mszInstanceList = new Memory ( pcchInstanceListLength . getValue ( ) . intValue ( ) * charToBytes ) ; <nl> + Pdh . INSTANCE . PdhEnumObjectItems ( szDataSource , szMachineName , szObjectName , mszCounterList , <nl> + pcchCounterListLength , mszInstanceList , pcchInstanceListLength , dwDetailLevel , 0 ) ; <nl> + <nl> + List < String > instances = new ArrayList < String > ( ) ; <nl> + int offset = 0 ; <nl> + while ( offset < mszInstanceList . size ( ) ) { <nl> + String s = null ; <nl> + if ( charToBytes = = 1 ) { <nl> + s = mszInstanceList . getString ( offset ) ; <nl> + } else { <nl> + s = mszInstanceList . getWideString ( offset ) ; <nl> + } <nl> + / / list ends with double null <nl> + if ( s . isEmpty ( ) ) { <nl> + break ; <nl> + } <nl> + instances . add ( s ) ; <nl> + / / Increment for string + null terminator <nl> + offset + = ( s . length ( ) + 1 ) * charToBytes ; <nl> + } <nl> + <nl> + return instances ; <nl> + } <nl> + } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / PdhTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / PdhTest . java <nl> index 9a073f5 . . 04013eb 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / PdhTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / PdhTest . java <nl> @ @ - 16 , 6 + 16 , 7 @ @ import java . io . PrintStream ; <nl> import java . util . Collection ; <nl> import java . util . HashMap ; <nl> import java . util . LinkedList ; <nl> + import java . util . List ; <nl> import java . util . Map ; <nl> <nl> import org . junit . Test ; <nl> @ @ - 155 , 4 + 156 , 44 @ @ public class PdhTest extends AbstractWin32TestSupport { <nl> <nl> return Native . toString ( szFullPathBuffer ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testLookupPerfIndex ( ) { <nl> + int processorIndex = 238 ; <nl> + String processorStr = " Processor " ; / / English locale <nl> + <nl> + / / Test index - to - name <nl> + String testStr = PdhUtil . PdhLookupPerfNameByIndex ( null , processorIndex ) ; <nl> + if ( AbstractWin32TestSupport . isEnglishLocale ) { <nl> + assertEquals ( processorStr , testStr ) ; <nl> + } else { <nl> + assertTrue ( testStr . length ( ) > 0 ) ; <nl> + } <nl> + <nl> + / / Test name - to - index <nl> + DWORDByReference pdwIndex = new DWORDByReference ( ) ; <nl> + Pdh . INSTANCE . PdhLookupPerfIndexByName ( null , testStr , pdwIndex ) ; <nl> + assertEquals ( processorIndex , pdwIndex . getValue ( ) . intValue ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testEnumObjectItems ( ) { <nl> + if ( AbstractWin32TestSupport . isEnglishLocale ) { <nl> + 	 	 	 String processorStr = " Processor " ; <nl> + String processorTimeStr = " % Processor Time " ; <nl> + <nl> + / / Fetch the counter and instance names <nl> + 	 	 	 List < String > instances = PdhUtil . PdhEnumObjectItemInstances ( null , null , processorStr , 100 ) ; <nl> + <nl> + / / Should have at least one processor and total instance <nl> + 	 	 	 assertTrue ( instances . contains ( " 0 " ) ) ; <nl> + 	 	 	 assertTrue ( instances . contains ( " _ Total " ) ) ; <nl> + <nl> + / / Should have a " % Processor Time " counter <nl> + 	 	 	 List < String > counters = PdhUtil . PdhEnumObjectItemCounters ( null , null , processorStr , 100 ) ; <nl> + 	 	 	 assertTrue ( counters . contains ( processorTimeStr ) ) ; <nl> + } else { <nl> + System . err . println ( " testEnumObjectItems test can only be run with english locale . " ) ; <nl> + } <nl> + } <nl> }
diff - - git a / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java b / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java <nl> index 372aa0d . . 71fd8fb 100644 <nl> - - - a / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java <nl> + + + b / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java <nl> @ @ - 78 , 7 + 78 , 7 @ @ public class MSOfficeDemo { <nl> Helper . sleep ( 10 ) ; <nl> / / save in different formats <nl> / / pdf format is only supported in MSWord 2007 and above <nl> - System . out . println ( " Wrinting files to : " + Helper . tempDir ) ; <nl> + System . out . println ( " Writing files to : " + Helper . tempDir ) ; <nl> msWord . SaveAs ( new File ( Helper . tempDir , " jnatestSaveAs . doc " ) . getAbsolutePath ( ) , wdFormatDocument ) ; <nl> msWord . SaveAs ( new File ( Helper . tempDir , " jnatestSaveAs . pdf " ) . getAbsolutePath ( ) , wdFormatPDF ) ; <nl> msWord . SaveAs ( new File ( Helper . tempDir , " jnatestSaveAs . rtf " ) . getAbsolutePath ( ) , wdFormatRTF ) ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index 0e9d1b1 . . 9016a16 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 3648 , 4 + 3648 , 136 @ @ public interface Kernel32 extends StdCallLibrary , WinNT , Wincon { <nl> * information , call GetLastError . <nl> * / <nl> boolean GetProcessIoCounters ( HANDLE hProcess , WinNT . IO _ COUNTERS lpIoCounters ) ; <nl> + <nl> + / * * <nl> + * Creates or opens a named or unnamed mutex object . <nl> + * <nl> + * @ param lpMutexAttributes <nl> + * <nl> + * A pointer to a { @ link WinBase . SECURITY _ ATTRIBUTES } structure . If this <nl> + * parameter is NULL , the mutex handle cannot be inherited by child <nl> + * processes . <nl> + * <nl> + * < p > <nl> + * The lpSecurityDescriptor member of the structure specifies a security <nl> + * descriptor for the new mutex . If lpMutexAttributes is NULL , the mutex <nl> + * gets a default security descriptor . The ACLs in the default security <nl> + * descriptor for a mutex come from the primary or impersonation token of <nl> + * the creator . < / p > <nl> + * <nl> + * @ param bInitialOwner <nl> + * <nl> + * If this value is TRUE and the caller created the mutex , the calling <nl> + * thread obtains initial ownership of the mutex object . Otherwise , the <nl> + * calling thread does not obtain ownership of the mutex . To determine if <nl> + * the caller created the mutex , see the Return Values section . <nl> + * <nl> + * @ param lpName <nl> + * <nl> + * The name of the mutex object . The name is limited to <nl> + * { @ link WinDef # MAX _ PATH } characters . Name comparison is case sensitive . <nl> + * <nl> + * < p > <nl> + * If lpName matches the name of an existing named mutex object , this <nl> + * function requests the { @ link WinBase # MUTEX _ ALL _ ACCESS } access right . In <nl> + * this case , the bInitialOwner parameter is ignored because it has already <nl> + * been set by the creating process . If the lpMutexAttributes parameter is <nl> + * not NULL , it determines whether the handle can be inherited , but its <nl> + * security - descriptor member is ignored . < / p > <nl> + * <nl> + * < p > <nl> + * If lpName is NULL , the mutex object is created without a name . < / p > <nl> + * <nl> + * < p > <nl> + * If lpName matches the name of an existing event , semaphore , waitable <nl> + * timer , job , or file - mapping object , the function fails and the <nl> + * { @ link com . sun . jna . Native # getLastError ( ) } function returns <nl> + * { @ link WinError # ERROR _ INVALID _ HANDLE } . This occurs because these objects <nl> + * share the same namespace . < / p > <nl> + * <nl> + * < p > <nl> + * The name can have a " Global \ " or " Local \ " prefix to explicitly create the <nl> + * object in the global or session namespace . The remainder of the name can <nl> + * contain any character except the backslash character ( \ ) . < / p > <nl> + * <nl> + * @ return <nl> + * <nl> + * If the function succeeds , the return value is a handle to the newly <nl> + * created mutex object . <nl> + * <nl> + * < p > <nl> + * If the function fails , the return value is NULL . To get extended error <nl> + * information , call { @ link com . sun . jna . Native # getLastError ( ) } . < / p > <nl> + * <nl> + * < p > If the mutex is a named mutex and the object existed before this function <nl> + * call , the return value is a handle to the existing object , <nl> + * { @ link com . sun . jna . Native # getLastError ( ) } returns <nl> + * { @ link WinError # ERROR _ ALREADY _ EXISTS } , bInitialOwner is ignored , and the <nl> + * calling thread is not granted ownership . However , if the caller has <nl> + * limited access rights , the function will fail with <nl> + * { @ link WinError # ERROR _ ACCESS _ DENIED } and the caller should use the <nl> + * { @ link # OpenMutex } function . < / p > <nl> + * / <nl> + HANDLE CreateMutex ( SECURITY _ ATTRIBUTES lpMutexAttributes , <nl> + boolean bInitialOwner , <nl> + String lpName ) ; <nl> + <nl> + / * * <nl> + * Opens an existing named mutex object . <nl> + * <nl> + * @ param dwDesiredAccess <nl> + * <nl> + * The access to the mutex object . Only the { @ link WinNT # SYNCHRONIZE } access <nl> + * right is required to use a mutex ; to change the mutex ' s security , specify <nl> + * { @ link WinBase # MUTEX _ ALL _ ACCESS } . <nl> + * <nl> + * @ param bInheritHandle <nl> + * <nl> + * If this value is TRUE , processes created by this process will inherit the <nl> + * handle . Otherwise , the processes do not inherit this handle . <nl> + * <nl> + * @ param lpName <nl> + * <nl> + * The name of the mutex to be opened . Name comparisons are case sensitive . <nl> + * <nl> + * < p > <nl> + * This function can open objects in a private namespace . < / p > <nl> + * <nl> + * < p > <nl> + * Terminal Services : The name can have a " Global \ " or " Local \ " prefix to <nl> + * explicitly open an object in the global or session namespace . The <nl> + * remainder of the name can contain any character except the backslash <nl> + * character ( \ ) . < / p > <nl> + * <nl> + * @ return <nl> + * <nl> + * If the function succeeds , the return value is a handle to the mutex object . <nl> + * <nl> + * < p > If the function fails , the return value is NULL . To get extended error <nl> + * information , call { @ link com . sun . jna . Native # getLastError ( ) } . < / p > <nl> + * <nl> + * < p > If a named mutex does not exist , the function fails and <nl> + * { @ link com . sun . jna . Native # getLastError ( ) } returns <nl> + * ERROR _ FILE _ NOT _ FOUND . < / p > <nl> + * / <nl> + HANDLE OpenMutex ( int dwDesiredAccess , <nl> + boolean bInheritHandle , <nl> + String lpName ) ; <nl> + <nl> + / * * <nl> + * Releases ownership of the specified mutex object . <nl> + * <nl> + * @ param handle <nl> + * <nl> + * A handle to the mutex object . The CreateMutex or OpenMutex function <nl> + * returns this handle . <nl> + * <nl> + * @ return <nl> + * <nl> + * If the function succeeds , the return value is nonzero . <nl> + * <nl> + * < p > If the function fails , the return value is zero . To get extended error <nl> + * information , call { @ link com . sun . jna . Native # getLastError ( ) } . < / p > <nl> + * / <nl> + boolean ReleaseMutex ( HANDLE handle ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> index da3a694 . . 027567a 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> @ @ - 2557 , 4 + 2557 , 8 @ @ public interface WinBase extends WinDef , BaseTSD { <nl> * be set . <nl> * / <nl> int ES _ USER _ PRESENT = 0x00000004 ; <nl> + <nl> + <nl> + int MUTEX _ MODIFY _ STATE = WinNT . MUTANT _ QUERY _ STATE ; <nl> + int MUTEX _ ALL _ ACCESS = WinNT . MUTANT _ ALL _ ACCESS ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index d2a7224 . . 920d327 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 76 , 6 + 76 , 10 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> <nl> int SPECIFIC _ RIGHTS _ ALL = 0x0000FFFF ; <nl> <nl> + int MUTANT _ QUERY _ STATE = 0x0001 ; <nl> + int MUTANT _ ALL _ ACCESS = STANDARD _ RIGHTS _ REQUIRED | SYNCHRONIZE <nl> + | MUTANT _ QUERY _ STATE ; <nl> + <nl> / / <nl> / / Token Specific Access Rights . <nl> / / <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index bc9a485 . . e0bfe5c 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 67 , 6 + 67 , 8 @ @ import com . sun . jna . platform . win32 . WinNT . OSVERSIONINFO ; <nl> import com . sun . jna . platform . win32 . WinNT . OSVERSIONINFOEX ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . ShortByReference ; <nl> + import java . util . concurrent . CountDownLatch ; <nl> + import java . util . concurrent . TimeUnit ; <nl> <nl> import junit . framework . TestCase ; <nl> <nl> @ @ - 1696 , 4 + 1698 , 55 @ @ public class Kernel32Test extends TestCase { <nl> <nl> Kernel32 . INSTANCE . SetThreadExecutionState ( originalExecutionState ) ; <nl> } <nl> + <nl> + public void testMutex ( ) throws InterruptedException { <nl> + HANDLE mutexHandle = Kernel32 . INSTANCE . CreateMutex ( null , true , " JNA - Test - Mutex " ) ; <nl> + <nl> + assertNotNull ( mutexHandle ) ; <nl> + <nl> + final CountDownLatch preWait = new CountDownLatch ( 1 ) ; <nl> + final CountDownLatch postWait = new CountDownLatch ( 1 ) ; <nl> + final CountDownLatch postRelease = new CountDownLatch ( 1 ) ; <nl> + <nl> + final Exception [ ] exceptions = new Exception [ 1 ] ; <nl> + Thread t = new Thread ( ) { <nl> + @ Override <nl> + public void run ( ) { <nl> + try { <nl> + HANDLE mutexHandle2 = Kernel32 . INSTANCE . OpenMutex ( WinNT . SYNCHRONIZE , false , " JNA - Test - Mutex " ) ; <nl> + try { <nl> + assertNotNull ( mutexHandle2 ) ; <nl> + preWait . countDown ( ) ; <nl> + int result = Kernel32 . INSTANCE . WaitForSingleObject ( mutexHandle2 , WinBase . INFINITE ) ; <nl> + assertEquals ( result , WinBase . WAIT _ OBJECT _ 0 ) ; <nl> + postWait . countDown ( ) ; <nl> + } finally { <nl> + Kernel32 . INSTANCE . ReleaseMutex ( mutexHandle2 ) ; <nl> + Kernel32 . INSTANCE . CloseHandle ( mutexHandle2 ) ; <nl> + postRelease . countDown ( ) ; <nl> + } <nl> + } catch ( Exception ex ) { <nl> + exceptions [ 0 ] = ex ; <nl> + } <nl> + } <nl> + } ; <nl> + <nl> + t . start ( ) ; <nl> + <nl> + assertTrue ( preWait . await ( 2 , TimeUnit . SECONDS ) ) ; <nl> + <nl> + Kernel32 . INSTANCE . ReleaseMutex ( mutexHandle ) ; <nl> + <nl> + assertTrue ( postWait . await ( 2 , TimeUnit . SECONDS ) ) ; <nl> + <nl> + Kernel32 . INSTANCE . CloseHandle ( mutexHandle ) ; <nl> + <nl> + assertTrue ( postRelease . await ( 2 , TimeUnit . SECONDS ) ) ; <nl> + <nl> + assertNull ( exceptions [ 0 ] ) ; <nl> + <nl> + mutexHandle = Kernel32 . INSTANCE . OpenMutex ( WinNT . SYNCHRONIZE , false , " JNA - Test - Mutex " ) ; <nl> + <nl> + assertNull ( mutexHandle ) ; <nl> + } <nl> }
diff - - git a / www / FrequentlyAskedQuestions . md b / www / FrequentlyAskedQuestions . md <nl> index 0f8ea87 . . f16291e 100644 <nl> - - - a / www / FrequentlyAskedQuestions . md <nl> + + + b / www / FrequentlyAskedQuestions . md <nl> @ @ - 3 , 7 + 3 , 7 @ @ Frequently Asked Questions <nl> <nl> I ' m having trouble generating correct library mappings <nl> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> - Make sure you ' ve read [ this page ] ( https : / / github . com / java - native - access / jna / blob / master / www / Mappings . md ) and [ this one ] ( http : / / java - native - access . github . io / jna / 4 . 2 . 1 / overview - summary . html # overview . description ) . Try [ JNAerator ] ( http : / / code . google . com / p / jnaerator / ) . If you find its output too verbose , delete the mappings you don ' t need , or copy out the ones you do need . <nl> + Make sure you ' ve read [ this page ] ( https : / / github . com / java - native - access / jna / blob / master / www / Mappings . md ) and [ this one ] ( http : / / java - native - access . github . io / jna / 4 . 2 . 1 / overview - summary . html # overview . description ) . Try [ JNAerator ] ( https : / / github . com / nativelibs4java / JNAerator ) . If you find its output too verbose , delete the mappings you don ' t need , or copy out the ones you do need . <nl> <nl> JNA is missing function XXX in its platform library mappings <nl> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> @ @ - 236 , 4 + 236 , 4 @ @ JNA won ' t automatically resolve one or the other variant . You should use a <nl> a combination of TypeMapper and FunctionMapper ( see <nl> ` com . sun . jna . win32 . W32APIOptions . DEFAULT _ OPTIONS ` ) so that you can leave off the <nl> “ - A ” or “ - W ” suffix ( you never need to use both simultaneously ) and use <nl> - “ String ” rather than explicit “ WString ” . <nl> \ No newline at end of file <nl> + “ String ” rather than explicit “ WString ” .
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java <nl> index bbd3d18 . . 32d4d91 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java <nl> @ @ - 23 , 8 + 23 , 6 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> - import com . sun . jna . platform . win32 . OaIdl . DATE ; <nl> - import com . sun . jna . platform . win32 . OaIdl . VARIANT _ BOOL ; <nl> import com . sun . jna . platform . win32 . OleAuto ; <nl> import com . sun . jna . platform . win32 . Variant ; <nl> import java . lang . reflect . InvocationHandler ; <nl> @ @ - 36 , 13 + 34 , 7 @ @ import java . util . Date ; <nl> import com . sun . jna . platform . win32 . WinDef ; <nl> import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> import com . sun . jna . platform . win32 . WTypes . BSTR ; <nl> - import com . sun . jna . platform . win32 . WinDef . BOOL ; <nl> - import com . sun . jna . platform . win32 . WinDef . BYTE ; <nl> - import com . sun . jna . platform . win32 . WinDef . CHAR ; <nl> - import com . sun . jna . platform . win32 . WinDef . LONG ; <nl> - import com . sun . jna . platform . win32 . WinDef . SHORT ; <nl> import com . sun . jna . platform . win32 . OaIdl ; <nl> - import com . sun . jna . platform . win32 . OaIdl . SAFEARRAY ; <nl> import static com . sun . jna . platform . win32 . Variant . VT _ ARRAY ; <nl> import static com . sun . jna . platform . win32 . Variant . VT _ BOOL ; <nl> import static com . sun . jna . platform . win32 . Variant . VT _ BSTR ; <nl> @ @ - 70 , 6 + 62 , 7 @ @ import static com . sun . jna . platform . win32 . Variant . VT _ UINT ; <nl> import static com . sun . jna . platform . win32 . Variant . VT _ UNKNOWN ; <nl> import static com . sun . jna . platform . win32 . Variant . VT _ VARIANT ; <nl> import com . sun . jna . platform . win32 . WinDef . PVOID ; <nl> + import java . lang . reflect . Constructor ; <nl> <nl> / * * <nl> * This class is considered internal to the package . <nl> @ @ - 78 , 42 + 71 , 26 @ @ class Convert { <nl> / * * <nl> * Convert a java value into a VARIANT suitable for passing in a COM <nl> * invocation . <nl> - * <nl> + * <nl> * < p > < i > Implementation notes < / i > < / p > <nl> - * <nl> + * <nl> * < ul > <nl> * < li > VARIANTs are not rewrapped , but passed through unmodified < / li > <nl> * < li > A string is wrapped into a BSTR , that is wrapped into the VARIANT . <nl> * The string is allocated as native memory by the VARIANT constructor . <nl> * The BSTR needs to be freed by { @ link com . sun . jna . platform . win32 . OleAuto # SysFreeString } . < / li > <nl> * < / ul > <nl> - * <nl> + * <nl> * @ param value to be wrapped <nl> * @ return wrapped VARIANT <nl> * / <nl> 	 public static VARIANT toVariant ( Object value ) { <nl> - if ( value instanceof VARIANT ) { <nl> + if ( value instanceof VARIANT ) { <nl> return ( VARIANT ) value ; <nl> - } else if ( value instanceof BSTR ) { <nl> - return new VARIANT ( ( BSTR ) value ) ; <nl> - } else if ( value instanceof VARIANT _ BOOL ) { <nl> - return new VARIANT ( ( VARIANT _ BOOL ) value ) ; <nl> - } else if ( value instanceof BOOL ) { <nl> - return new VARIANT ( ( BOOL ) value ) ; <nl> - } else if ( value instanceof LONG ) { <nl> - return new VARIANT ( ( LONG ) value ) ; <nl> - } else if ( value instanceof SHORT ) { <nl> - return new VARIANT ( ( SHORT ) value ) ; <nl> - } else if ( value instanceof DATE ) { <nl> - return new VARIANT ( ( DATE ) value ) ; <nl> - } else if ( value instanceof BYTE ) { <nl> - return new VARIANT ( ( BYTE ) value ) ; <nl> } else if ( value instanceof Byte ) { <nl> return new VARIANT ( ( Byte ) value ) ; <nl> } else if ( value instanceof Character ) { <nl> return new VARIANT ( ( Character ) value ) ; <nl> - } else if ( value instanceof CHAR ) { <nl> - return new VARIANT ( ( CHAR ) value ) ; <nl> 	 	 } else if ( value instanceof Short ) { <nl> 	 	 	 return new VARIANT ( ( Short ) value ) ; <nl> 	 	 } else if ( value instanceof Integer ) { <nl> @ @ - 132 , 27 + 109 , 42 @ @ class Convert { <nl> 	 	 	 return new VARIANT ( ( com . sun . jna . platform . win32 . COM . IDispatch ) value ) ; <nl> 	 	 } else if ( value instanceof Date ) { <nl> 	 	 	 return new VARIANT ( ( Date ) value ) ; <nl> - 	 	 } else if ( value instanceof Proxy ) { <nl> + } else if ( value instanceof Proxy ) { <nl> 	 	 	 InvocationHandler ih = Proxy . getInvocationHandler ( value ) ; <nl> 	 	 	 ProxyObject pobj = ( ProxyObject ) ih ; <nl> 	 	 	 return new VARIANT ( pobj . getRawDispatch ( ) ) ; <nl> 	 	 } else if ( value instanceof IComEnum ) { <nl> 	 	 	 IComEnum enm = ( IComEnum ) value ; <nl> 	 	 	 return new VARIANT ( new WinDef . LONG ( enm . getValue ( ) ) ) ; <nl> - } else if ( value instanceof SAFEARRAY ) { <nl> - return new VARIANT ( ( SAFEARRAY ) value ) ; <nl> - 	 	 } else { <nl> - 	 	 	 return null ; <nl> - 	 	 } <nl> - 	 } <nl> - 	 <nl> + } else { <nl> + Constructor < VARIANT > constructor = null ; <nl> + if ( value ! = null ) { <nl> + for ( Constructor < VARIANT > m : ( Constructor < VARIANT > [ ] ) VARIANT . class . getConstructors ( ) ) { <nl> + if ( m . getParameterCount ( ) > 0 <nl> + & & m . getParameterTypes ( ) [ 0 ] . isAssignableFrom ( value . getClass ( ) ) ) { <nl> + constructor = m ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + if ( constructor ! = null ) { <nl> + try { <nl> + return constructor . newInstance ( value ) ; <nl> + } catch ( Exception ex ) { <nl> + throw new RuntimeException ( ex ) ; <nl> + } <nl> + } <nl> + return null ; <nl> + } <nl> + } <nl> + <nl> 	 public static Object toJavaObject ( VARIANT value , Class < ? > targetClass , ObjectFactory factory , boolean addReference , boolean freeValue ) { <nl> - 	 	 if ( null = = value <nl> - | | value . getVarType ( ) . intValue ( ) = = VT _ EMPTY <nl> + 	 	 if ( null = = value <nl> + | | value . getVarType ( ) . intValue ( ) = = VT _ EMPTY <nl> | | value . getVarType ( ) . intValue ( ) = = VT _ NULL ) { <nl> return null ; <nl> } <nl> - <nl> + <nl> if ( targetClass ! = null & & ( ! targetClass . isAssignableFrom ( Object . class ) ) ) { <nl> if ( targetClass . isAssignableFrom ( value . getClass ( ) ) ) { <nl> return value ; <nl> @ @ - 163 , 86 + 155 , 67 @ @ class Convert { <nl> return vobj ; <nl> } <nl> } <nl> - <nl> + <nl> VARIANT inputValue = value ; <nl> - <nl> + <nl> if ( value . getVarType ( ) . intValue ( ) = = ( VT _ BYREF | VT _ VARIANT ) ) { <nl> value = ( VARIANT ) value . getValue ( ) ; <nl> } <nl> - <nl> + <nl> / / Passing null or Object . class as targetClass switch to default <nl> / / handling <nl> if ( targetClass = = null | | ( targetClass . isAssignableFrom ( Object . class ) ) ) { <nl> - <nl> + <nl> targetClass = null ; <nl> - <nl> + <nl> int varType = value . getVarType ( ) . intValue ( ) ; <nl> - <nl> + <nl> switch ( value . getVarType ( ) . intValue ( ) ) { <nl> case VT _ UI1 : <nl> case VT _ I1 : <nl> - case VT _ BYREF | VT _ UI1 : <nl> - case VT _ BYREF | VT _ I1 : <nl> targetClass = Byte . class ; <nl> break ; <nl> case VT _ I2 : <nl> - case VT _ BYREF | VT _ I2 : <nl> targetClass = Short . class ; <nl> break ; <nl> case VT _ UI2 : <nl> - case VT _ BYREF | VT _ UI2 : <nl> targetClass = Character . class ; <nl> break ; <nl> case VT _ INT : <nl> case VT _ UINT : <nl> case VT _ UI4 : <nl> case VT _ I4 : <nl> - case VT _ BYREF | VT _ I4 : <nl> - case VT _ BYREF | VT _ UI4 : <nl> - case VT _ BYREF | VT _ INT : <nl> - case VT _ BYREF | VT _ UINT : <nl> targetClass = Integer . class ; <nl> break ; <nl> case VT _ UI8 : <nl> case VT _ I8 : <nl> - case VT _ BYREF | VT _ I8 : <nl> - case VT _ BYREF | VT _ UI8 : <nl> targetClass = Long . class ; <nl> break ; <nl> case VT _ R4 : <nl> - case VT _ BYREF | VT _ R4 : <nl> targetClass = Float . class ; <nl> break ; <nl> case VT _ R8 : <nl> - case VT _ BYREF | VT _ R8 : <nl> targetClass = Double . class ; <nl> break ; <nl> case VT _ BOOL : <nl> - case VT _ BYREF | VT _ BOOL : <nl> targetClass = Boolean . class ; <nl> break ; <nl> case VT _ ERROR : <nl> - case VT _ BYREF | VT _ ERROR : <nl> targetClass = WinDef . SCODE . class ; <nl> break ; <nl> case VT _ CY : <nl> - case VT _ BYREF | VT _ CY : <nl> targetClass = OaIdl . CURRENCY . class ; <nl> break ; <nl> case VT _ DATE : <nl> - case VT _ BYREF | VT _ DATE : <nl> targetClass = Date . class ; <nl> break ; <nl> case VT _ BSTR : <nl> - case VT _ BYREF | VT _ BSTR : <nl> targetClass = String . class ; <nl> break ; <nl> case VT _ UNKNOWN : <nl> - case VT _ BYREF | VT _ UNKNOWN : <nl> targetClass = com . sun . jna . platform . win32 . COM . IUnknown . class ; <nl> break ; <nl> case VT _ DISPATCH : <nl> - case VT _ BYREF | VT _ DISPATCH : <nl> targetClass = IDispatch . class ; <nl> break ; <nl> case VT _ BYREF | VT _ VARIANT : <nl> @ @ - 261 , 7 + 234 , 7 @ @ class Convert { <nl> } <nl> } <nl> } <nl> - <nl> + <nl> Object result ; <nl> if ( Byte . class . equals ( targetClass ) | | byte . class . equals ( targetClass ) ) { <nl> result = value . byteValue ( ) ; <nl> @ @ - 308 , 14 + 281 , 14 @ @ class Convert { <nl> if ( IComEnum . class . isAssignableFrom ( targetClass ) ) { <nl> result = targetClass . cast ( Convert . toComEnum ( ( Class < ? extends IComEnum > ) targetClass , result ) ) ; <nl> } <nl> - <nl> + <nl> if ( freeValue ) { <nl> free ( inputValue , result ) ; <nl> } <nl> - <nl> + <nl> return result ; <nl> 	 } <nl> - 	 <nl> + <nl> 	 public static < T extends IComEnum > T toComEnum ( Class < T > enumType , Object value ) { <nl> 	 	 try { <nl> 	 	 	 Method m = enumType . getMethod ( " values " ) ; <nl> @ @ - 332 , 13 + 305 , 13 @ @ class Convert { <nl> 	 	 } <nl> 	 	 return null ; <nl> 	 } <nl> - <nl> + <nl> / * * <nl> * Free the contents of the supplied VARIANT . <nl> - * <nl> + * <nl> * < p > This method is a companion to { @ link # toVariant } . Primary usage is <nl> * to free BSTRs contained in VARIANTs . < / p > <nl> - * <nl> + * <nl> * @ param variant to be cleared <nl> * @ param javaType type before / after conversion <nl> * / <nl> @ @ - 352 , 13 + 325 , 13 @ @ class Convert { <nl> } <nl> } <nl> } <nl> - <nl> + <nl> / * * <nl> * Free the contents of the supplied VARIANT . <nl> - * <nl> + * <nl> * < p > This method is a companion to { @ link # toVariant } . Primary usage is <nl> * to free BSTRs contained in VARIANTs . < / p > <nl> - * <nl> + * <nl> * @ param variant to be cleared <nl> * @ param value value before / after conversion <nl> * / <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> index 908010c . . 2991c57 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import java . util . List ; <nl> <nl> import com . sun . jna . IntegerType ; <nl> import com . sun . jna . Memory ; <nl> + import com . sun . jna . Native ; <nl> import com . sun . jna . NativeLong ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> @ @ - 288 , 7 + 289 , 7 @ @ public interface OaIdl { <nl> return FIELDS ; <nl> } <nl> } <nl> - <nl> + <nl> / * * <nl> * The Class DISPID . <nl> * / <nl> @ @ - 631 , 7 + 632 , 7 @ @ public interface OaIdl { <nl> * @ param size array of dimension size <nl> * @ return SAFEARRAYWrapper or { @ code NULL } if creation fails . <nl> * / <nl> - public static SAFEARRAY createSafeArray ( int . . . size ) { <nl> + public static SAFEARRAY . ByReference createSafeArray ( int . . . size ) { <nl> return createSafeArray ( new WTypes . VARTYPE ( Variant . VT _ VARIANT ) , size ) ; <nl> } <nl> <nl> @ @ - 647 , 7 + 648 , 7 @ @ public interface OaIdl { <nl> * @ param size array of dimension size <nl> * @ return SAFEARRAYWrapper or { @ code NULL } if creation fails . <nl> * / <nl> - public static SAFEARRAY createSafeArray ( VARTYPE vartype , int . . . size ) { <nl> + public static SAFEARRAY . ByReference createSafeArray ( VARTYPE vartype , int . . . size ) { <nl> OaIdl . SAFEARRAYBOUND [ ] rgsabound = ( OaIdl . SAFEARRAYBOUND [ ] ) new OaIdl . SAFEARRAYBOUND ( ) . toArray ( size . length ) ; <nl> for ( int i = 0 ; i < size . length ; i + + ) { <nl> rgsabound [ i ] . lLbound = new WinDef . LONG ( 0 ) ; <nl> @ @ - 1042 , 6 + 1043 , 30 @ @ public interface OaIdl { <nl> } <nl> } <nl> <nl> + public static class SAFEARRAYByReference extends Structure implements Structure . ByReference { <nl> + <nl> + public SAFEARRAYByReference ( ) { <nl> + } <nl> + <nl> + public SAFEARRAYByReference ( Pointer p ) { <nl> + super ( p ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public SAFEARRAYByReference ( SAFEARRAY . ByReference safeArray ) { <nl> + pSAFEARRAY = safeArray ; <nl> + } <nl> + <nl> + public static final List < String > FIELDS = createFieldsOrder ( " pSAFEARRAY " ) ; <nl> + <nl> + public SAFEARRAY . ByReference pSAFEARRAY ; <nl> + <nl> + @ Override <nl> + protected List < String > getFieldOrder ( ) { <nl> + return FIELDS ; <nl> + } <nl> + } <nl> + <nl> public static class SAFEARRAYBOUND extends Structure { <nl> public static class ByReference extends SAFEARRAYBOUND implements <nl> Structure . ByReference { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> index baf43ce . . c45d426 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> @ @ - 36 , 7 + 36 , 6 @ @ import com . sun . jna . platform . win32 . OaIdl . VARIANT _ BOOL ; <nl> import com . sun . jna . platform . win32 . OaIdl . VARIANT _ BOOLByReference ; <nl> import com . sun . jna . platform . win32 . OaIdl . _ VARIANT _ BOOLByReference ; <nl> import com . sun . jna . platform . win32 . WTypes . BSTR ; <nl> - import com . sun . jna . platform . win32 . WTypes . BSTRByReference ; <nl> import com . sun . jna . platform . win32 . WTypes . VARTYPE ; <nl> import com . sun . jna . platform . win32 . WinDef . BOOL ; <nl> import com . sun . jna . platform . win32 . WinDef . BYTE ; <nl> @ @ - 61 , 6 + 60 , 8 @ @ import com . sun . jna . platform . win32 . WinDef . USHORTByReference ; <nl> import com . sun . jna . platform . win32 . COM . Dispatch ; <nl> import com . sun . jna . platform . win32 . COM . IDispatch ; <nl> import com . sun . jna . platform . win32 . COM . Unknown ; <nl> + import com . sun . jna . platform . win32 . OaIdl . SAFEARRAYByReference ; <nl> + import com . sun . jna . platform . win32 . WTypes . BSTRByReference ; <nl> import com . sun . jna . ptr . ByteByReference ; <nl> import com . sun . jna . ptr . DoubleByReference ; <nl> import com . sun . jna . ptr . FloatByReference ; <nl> @ @ - 186 , 7 + 187 , 7 @ @ public interface Variant { <nl> <nl> public VARIANT ( BSTRByReference value ) { <nl> this ( ) ; <nl> - this . setValue ( VT _ BYREF | VT _ BSTR , value ) ; <nl> + this . setValue ( VT _ BSTR | VT _ BYREF , value ) ; <nl> } <nl> <nl> public VARIANT ( VARIANT _ BOOL value ) { <nl> @ @ - 226 , 7 + 227 , 7 @ @ public interface Variant { <nl> this ( ) ; <nl> this . setValue ( VT _ UI2 , new USHORT ( value ) ) ; <nl> } <nl> - <nl> + <nl> public VARIANT ( CHAR value ) { <nl> this ( ) ; <nl> this . setValue ( Variant . VT _ I1 , value ) ; <nl> @ @ - 236 , 12 + 237 , 17 @ @ public interface Variant { <nl> this ( ) ; <nl> this . setValue ( VT _ I2 , new SHORT ( value ) ) ; <nl> } <nl> - <nl> + <nl> public VARIANT ( int value ) { <nl> this ( ) ; <nl> this . setValue ( VT _ I4 , new LONG ( value ) ) ; <nl> } <nl> <nl> + public VARIANT ( IntByReference value ) { <nl> + this ( ) ; <nl> + this . setValue ( VT _ INT | VT _ BYREF , value ) ; <nl> + } <nl> + <nl> public VARIANT ( long value ) { <nl> this ( ) ; <nl> this . setValue ( VT _ I8 , new LONGLONG ( value ) ) ; <nl> @ @ - 292 , 7 + 298 , 12 @ @ public interface Variant { <nl> this ( ) ; <nl> this . setValue ( array ) ; <nl> } <nl> - <nl> + <nl> + public VARIANT ( SAFEARRAYByReference array ) { <nl> + this ( ) ; <nl> + this . setValue ( array ) ; <nl> + } <nl> + <nl> public VARTYPE getVarType ( ) { <nl> this . read ( ) ; <nl> return _ variant . vt ; <nl> @ @ - 305 , 11 + 316 , 15 @ @ public interface Variant { <nl> public void setValue ( int vt , Object value ) { <nl> this . setValue ( new VARTYPE ( vt ) , value ) ; <nl> } <nl> - <nl> + <nl> public void setValue ( SAFEARRAY array ) { <nl> this . setValue ( array . getVarType ( ) . intValue ( ) | VT _ ARRAY , array ) ; <nl> } <nl> <nl> + public void setValue ( SAFEARRAYByReference array ) { <nl> + this . setValue ( array . pSAFEARRAY . getVarType ( ) . intValue ( ) | VT _ ARRAY | VT _ BYREF , array ) ; <nl> + } <nl> + <nl> public void setValue ( VARTYPE vt , Object value ) { <nl> int varType = vt . intValue ( ) ; <nl> switch ( varType ) { <nl> @ @ - 556 , 7 + 571 , 7 @ @ public interface Variant { <nl> public byte byteValue ( ) { <nl> return ( ( Number ) this . getValue ( ) ) . byteValue ( ) ; <nl> } <nl> - <nl> + <nl> public short shortValue ( ) { <nl> return ( ( Number ) this . getValue ( ) ) . shortValue ( ) ; <nl> } <nl> @ @ - 680 , 13 + 695 , 13 @ @ public interface Variant { <nl> / / DATE * VT _ BYREF | VT _ DATE <nl> public DATE . ByReference pdate ; <nl> / / BSTR * VT _ BYREF | VT _ BSTR <nl> - public BSTR . ByReference pbstrVal ; <nl> + public BSTRByReference pbstrVal ; <nl> / / IUnknown * * VT _ BYREF | VT _ UNKNOWN <nl> public Unknown . ByReference ppunkVal ; <nl> / / IDispatch * * VT _ BYREF | VT _ DISPATCH <nl> public Dispatch . ByReference ppdispVal ; <nl> / / SAFEARRAY * * VT _ BYREF | VT _ ARRAY <nl> - public SAFEARRAY . ByReference pparray ; <nl> + public SAFEARRAYByReference pparray ; <nl> / / VARIANT * VT _ BYREF | VT _ VARIANT <nl> public VARIANT . ByReference pvarVal ; <nl> / / PVOID VT _ BYREF ( Generic ByRef ) <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> index a36a05d . . b5e3b76 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> @ @ - 101 , 10 + 101 , 6 @ @ public interface WTypes { <nl> * as a string containing zero characters . < / p > <nl> * / <nl> public static class BSTR extends PointerType { <nl> - public static class ByReference extends BSTR implements <nl> - Structure . ByReference { <nl> - } <nl> - <nl> public BSTR ( ) { <nl> super ( Pointer . NULL ) ; <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index e46a394 . . c8767e1 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 44 , 6 + 44 , 7 @ @ Bug Fixes <nl> < li > Change into the expanded directory and run ` bash build . sh ` . < / li > <nl> < li > The resulting ` sunos - x86 . jar ` is copied back to the original build system to ` lib / native / sunos - x86 . jar ` < / li > <nl> < / ol > - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 958 ] ( https : / / github . com / java - native - access / jna / issues / 958 ) : Update for PR 863 : Old toolchains produce binaries without hard - / softfloat markers . Rasbian is missinng the markers and the oracle JDK is also affected . For hardfloat detection now also the Arm EABI section is also considered - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Breaking Changes <nl> - - - - - - - - - - - - - - - - <nl> diff - - git a / ant - tools - src / com / sun / jna / BuildArmSoftFloatDetector . java b / ant - tools - src / com / sun / jna / BuildArmSoftFloatDetector . java <nl> index 6fa141d . . fa851e9 100644 <nl> - - - a / ant - tools - src / com / sun / jna / BuildArmSoftFloatDetector . java <nl> + + + b / ant - tools - src / com / sun / jna / BuildArmSoftFloatDetector . java <nl> @ @ - 60 , 7 + 60 , 7 @ @ public class BuildArmSoftFloatDetector { <nl> / / The self . getCanonicalPath ( ) resolves the symblink to the backing <nl> / / realfile and passes that to the detection routines <nl> ELFAnalyser ahfd = ELFAnalyser . analyse ( self . getCanonicalPath ( ) ) ; <nl> - result = ahfd . isArmSoftFloat ( ) ; <nl> + result = ! ahfd . isArmHardFloat ( ) ; <nl> } catch ( IOException ex ) { <nl> result = false ; <nl> } <nl> diff - - git a / src / com / sun / jna / ELFAnalyser . java b / src / com / sun / jna / ELFAnalyser . java <nl> index ba84382 . . 85f4ace 100644 <nl> - - - a / src / com / sun / jna / ELFAnalyser . java <nl> + + + b / src / com / sun / jna / ELFAnalyser . java <nl> @ @ - 1 , 15 + 1 , 25 @ @ <nl> <nl> package com . sun . jna ; <nl> <nl> + import java . io . ByteArrayOutputStream ; <nl> import java . io . IOException ; <nl> import java . io . RandomAccessFile ; <nl> + import java . io . UnsupportedEncodingException ; <nl> + import java . math . BigInteger ; <nl> + import java . nio . Buffer ; <nl> import java . nio . ByteBuffer ; <nl> import java . nio . ByteOrder ; <nl> + import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> + import java . util . Collections ; <nl> + import java . util . HashMap ; <nl> + import java . util . LinkedList ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> <nl> / * * <nl> * Analyse an ELF file for platform specific attributes . <nl> - * <nl> + * <nl> * < p > Primary use - case : Detect whether the java binary is arm hardfloat or softfloat . < / p > <nl> * / <nl> class ELFAnalyser { <nl> @ @ - 30 , 19 + 40 , 20 @ @ class ELFAnalyser { <nl> private static final int EI _ DATA _ BIG _ ENDIAN = 2 ; <nl> private static final int E _ MACHINE _ ARM = 0x28 ; <nl> private static final int EI _ CLASS _ 64BIT = 2 ; <nl> - <nl> + <nl> public static ELFAnalyser analyse ( String filename ) throws IOException { <nl> ELFAnalyser res = new ELFAnalyser ( filename ) ; <nl> res . runDetection ( ) ; <nl> return res ; <nl> } <nl> - <nl> + <nl> private final String filename ; <nl> private boolean ELF = false ; <nl> private boolean _ 64Bit = false ; <nl> private boolean bigEndian = false ; <nl> - private boolean armHardFloat = false ; <nl> - private boolean armSoftFloat = false ; <nl> + private boolean armHardFloatFlag = false ; <nl> + private boolean armSoftFloatFlag = false ; <nl> + private boolean armEabiAapcsVfp = false ; <nl> private boolean arm = false ; <nl> <nl> / * * <nl> @ @ - 75 , 20 + 86 , 32 @ @ class ELFAnalyser { <nl> return filename ; <nl> } <nl> <nl> + public boolean isArmHardFloat ( ) { <nl> + return isArmEabiAapcsVfp ( ) | | isArmHardFloatFlag ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return true if file was detected to specify , that FP parameters / result <nl> + * passing conforms to AAPCS , VFP variant ( hardfloat ) <nl> + * / <nl> + public boolean isArmEabiAapcsVfp ( ) { <nl> + return armEabiAapcsVfp ; <nl> + } <nl> + <nl> / * * <nl> * @ return true if file was detected to conform to the hardware floating - point <nl> - * procedure - call standard <nl> + * procedure - call standard via ELF flags <nl> * / <nl> - public boolean isArmHardFloat ( ) { <nl> - return armHardFloat ; <nl> + public boolean isArmHardFloatFlag ( ) { <nl> + return armHardFloatFlag ; <nl> } <nl> <nl> / * * <nl> * @ return true if file was detected to conform to the software floating - point <nl> - * procedure - call standard <nl> + * procedure - call standard via ELF flags <nl> * / <nl> - public boolean isArmSoftFloat ( ) { <nl> - return armSoftFloat ; <nl> + public boolean isArmSoftFloatFlag ( ) { <nl> + return armSoftFloatFlag ; <nl> } <nl> <nl> / * * <nl> @ @ - 123 , 26 + 146 , 423 @ @ class ELFAnalyser { <nl> / / The total header size depends on the pointer size of the platform <nl> / / so before the header is loaded the pointer size has to be determined <nl> byte sizeIndicator = raf . readByte ( ) ; <nl> + byte endianessIndicator = raf . readByte ( ) ; <nl> _ 64Bit = sizeIndicator = = EI _ CLASS _ 64BIT ; <nl> + bigEndian = endianessIndicator = = EI _ DATA _ BIG _ ENDIAN ; <nl> raf . seek ( 0 ) ; <nl> + / / header length <nl> ByteBuffer headerData = ByteBuffer . allocate ( _ 64Bit ? 64 : 52 ) ; <nl> raf . getChannel ( ) . read ( headerData , 0 ) ; <nl> - bigEndian = headerData . get ( 5 ) = = EI _ DATA _ BIG _ ENDIAN ; <nl> + <nl> headerData . order ( bigEndian ? ByteOrder . BIG _ ENDIAN : ByteOrder . LITTLE _ ENDIAN ) ; <nl> <nl> + / / e _ machine <nl> arm = headerData . get ( 0x12 ) = = E _ MACHINE _ ARM ; <nl> <nl> if ( arm ) { <nl> + / / e _ flags <nl> int flags = headerData . getInt ( _ 64Bit ? 0x30 : 0x24 ) ; <nl> - armHardFloat = ( flags & EF _ ARM _ ABI _ FLOAT _ HARD ) = = EF _ ARM _ ABI _ FLOAT _ HARD ; <nl> - armSoftFloat = ! armHardFloat ; <nl> + armHardFloatFlag = ( flags & EF _ ARM _ ABI _ FLOAT _ HARD ) = = EF _ ARM _ ABI _ FLOAT _ HARD ; <nl> + armSoftFloatFlag = ( flags & EF _ ARM _ ABI _ FLOAT _ SOFT ) = = EF _ ARM _ ABI _ FLOAT _ SOFT ; <nl> + <nl> + parseEabiAapcsVfp ( headerData , raf ) ; <nl> } <nl> } finally { <nl> try { <nl> raf . close ( ) ; <nl> } catch ( IOException ex ) { <nl> - / / Swallow - closing <nl> + / / Swallow - closing <nl> + } <nl> + } <nl> + } <nl> + <nl> + private void parseEabiAapcsVfp ( ByteBuffer headerData , RandomAccessFile raf ) throws IOException { <nl> + ELFSectionHeaders sectionHeaders = new ELFSectionHeaders ( _ 64Bit , bigEndian , headerData , raf ) ; <nl> + <nl> + for ( ELFSectionHeaderEntry eshe : sectionHeaders . getEntries ( ) ) { <nl> + if ( " . ARM . attributes " . equals ( eshe . getName ( ) ) ) { <nl> + ByteBuffer armAttributesBuffer = ByteBuffer . allocate ( eshe . getSize ( ) ) ; <nl> + armAttributesBuffer . order ( bigEndian ? ByteOrder . BIG _ ENDIAN : ByteOrder . LITTLE _ ENDIAN ) ; <nl> + raf . getChannel ( ) . read ( armAttributesBuffer , eshe . getOffset ( ) ) ; <nl> + armAttributesBuffer . rewind ( ) ; <nl> + Map < Integer , Map < ArmAeabiAttributesTag , Object > > armAttributes = parseArmAttributes ( armAttributesBuffer ) ; <nl> + Map < ArmAeabiAttributesTag , Object > fileAttributes = armAttributes . get ( 1 ) ; <nl> + if ( fileAttributes = = null ) { <nl> + continue ; <nl> + } <nl> + / * * <nl> + * Tag _ ABI _ VFP _ args , ( = 28 ) , uleb128 <nl> + * 0 The user intended FP parameter / result passing to conform to AAPCS , base variant <nl> + * 1 The user intended FP parameter / result passing to conform to AAPCS , VFP variant <nl> + * 2 The user intended FP parameter / result passing to conform to tool chain - specific conventions <nl> + * 3 Code is compatible with both the base and VFP variants ; the non - variadic functions to pass FP parameters / results <nl> + * / <nl> + Object abiVFPargValue = fileAttributes . get ( ArmAeabiAttributesTag . ABI _ VFP _ args ) ; <nl> + if ( abiVFPargValue instanceof Integer & & ( ( Integer ) abiVFPargValue ) . equals ( 1 ) ) { <nl> + armEabiAapcsVfp = true ; <nl> + } else if ( abiVFPargValue instanceof BigInteger & & ( ( BigInteger ) abiVFPargValue ) . intValue ( ) = = 1 ) { <nl> + armEabiAapcsVfp = true ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + static class ELFSectionHeaders { <nl> + private final List < ELFSectionHeaderEntry > entries = new ArrayList < ELFSectionHeaderEntry > ( ) ; <nl> + <nl> + public ELFSectionHeaders ( boolean _ 64bit , boolean bigEndian , ByteBuffer headerData , RandomAccessFile raf ) throws IOException { <nl> + long shoff ; <nl> + int shentsize ; <nl> + int shnum ; <nl> + short shstrndx ; <nl> + if ( _ 64bit ) { <nl> + shoff = headerData . getLong ( 0x28 ) ; <nl> + shentsize = headerData . getShort ( 0x3A ) ; <nl> + shnum = headerData . getShort ( 0x3C ) ; <nl> + shstrndx = headerData . getShort ( 0x3E ) ; <nl> + } else { <nl> + shoff = headerData . getInt ( 0x20 ) ; <nl> + shentsize = headerData . getShort ( 0x2E ) ; <nl> + shnum = headerData . getShort ( 0x30 ) ; <nl> + shstrndx = headerData . getShort ( 0x32 ) ; <nl> + } <nl> + <nl> + int tableLength = shnum * shentsize ; <nl> + <nl> + ByteBuffer data = ByteBuffer . allocate ( tableLength ) ; <nl> + data . order ( bigEndian ? ByteOrder . BIG _ ENDIAN : ByteOrder . LITTLE _ ENDIAN ) ; <nl> + raf . getChannel ( ) . read ( data , shoff ) ; <nl> + <nl> + for ( int i = 0 ; i < shnum ; i + + ) { <nl> + data . position ( i * shentsize ) ; <nl> + ByteBuffer header = data . slice ( ) ; <nl> + header . order ( data . order ( ) ) ; <nl> + header . limit ( shentsize ) ; <nl> + entries . add ( new ELFSectionHeaderEntry ( _ 64bit , header ) ) ; <nl> + } <nl> + <nl> + ELFSectionHeaderEntry stringTable = entries . get ( shstrndx ) ; <nl> + ByteBuffer stringBuffer = ByteBuffer . allocate ( stringTable . getSize ( ) ) ; <nl> + stringBuffer . order ( bigEndian ? ByteOrder . BIG _ ENDIAN : ByteOrder . LITTLE _ ENDIAN ) ; <nl> + raf . getChannel ( ) . read ( stringBuffer , stringTable . getOffset ( ) ) ; <nl> + stringBuffer . rewind ( ) ; <nl> + <nl> + ByteArrayOutputStream baos = new ByteArrayOutputStream ( 20 ) ; <nl> + for ( ELFSectionHeaderEntry eshe : entries ) { <nl> + baos . reset ( ) ; <nl> + <nl> + ( ( Buffer ) stringBuffer ) . position ( eshe . getNameOffset ( ) ) ; <nl> + <nl> + while ( stringBuffer . position ( ) < stringBuffer . limit ( ) ) { <nl> + byte b = stringBuffer . get ( ) ; <nl> + if ( b = = 0 ) { <nl> + break ; <nl> + } else { <nl> + baos . write ( b ) ; <nl> + } <nl> + } <nl> + <nl> + eshe . setName ( baos . toString ( " ASCII " ) ) ; <nl> + } <nl> + } <nl> + <nl> + public List < ELFSectionHeaderEntry > getEntries ( ) { <nl> + return entries ; <nl> + } <nl> + } <nl> + <nl> + static class ELFSectionHeaderEntry { <nl> + private final int nameOffset ; <nl> + private String name ; <nl> + private final int type ; <nl> + private final int flags ; <nl> + private final int offset ; <nl> + private final int size ; <nl> + <nl> + public ELFSectionHeaderEntry ( boolean _ 64bit , ByteBuffer sectionHeaderData ) { <nl> + this . nameOffset = sectionHeaderData . getInt ( 0x0 ) ; <nl> + this . type = sectionHeaderData . getInt ( 0x4 ) ; <nl> + this . flags = ( int ) ( _ 64bit ? sectionHeaderData . getLong ( 0x8 ) : sectionHeaderData . getInt ( 0x8 ) ) ; <nl> + this . offset = ( int ) ( _ 64bit ? sectionHeaderData . getLong ( 0x18 ) : sectionHeaderData . getInt ( 0x10 ) ) ; <nl> + this . size = ( int ) ( _ 64bit ? sectionHeaderData . getLong ( 0x20 ) : sectionHeaderData . getInt ( 0x14 ) ) ; <nl> + } <nl> + <nl> + public String getName ( ) { <nl> + return name ; <nl> + } <nl> + <nl> + public void setName ( String name ) { <nl> + this . name = name ; <nl> + } <nl> + <nl> + public int getNameOffset ( ) { <nl> + return nameOffset ; <nl> + } <nl> + <nl> + public int getType ( ) { <nl> + return type ; <nl> + } <nl> + <nl> + public int getFlags ( ) { <nl> + return flags ; <nl> + } <nl> + <nl> + public int getOffset ( ) { <nl> + return offset ; <nl> + } <nl> + <nl> + public int getSize ( ) { <nl> + return size ; <nl> + } <nl> + <nl> + @ Override <nl> + public String toString ( ) { <nl> + return " ELFSectionHeaderEntry { " + " nameIdx = " + nameOffset + " , name = " + name + " , type = " + type + " , flags = " + flags + " , offset = " + offset + " , size = " + size + ' } ' ; <nl> + } <nl> + } <nl> + <nl> + static class ArmAeabiAttributesTag { <nl> + <nl> + public enum ParameterType { <nl> + UINT32 , NTBS , ULEB128 <nl> + } <nl> + <nl> + private final int value ; <nl> + private final String name ; <nl> + private final ParameterType parameterType ; <nl> + <nl> + public ArmAeabiAttributesTag ( int value , String name , ParameterType parameterType ) { <nl> + this . value = value ; <nl> + this . name = name ; <nl> + this . parameterType = parameterType ; <nl> + } <nl> + <nl> + public int getValue ( ) { <nl> + return value ; <nl> + } <nl> + <nl> + public String getName ( ) { <nl> + return name ; <nl> + } <nl> + <nl> + public ParameterType getParameterType ( ) { <nl> + return parameterType ; <nl> + } <nl> + <nl> + @ Override <nl> + public String toString ( ) { <nl> + return name + " ( " + value + " ) " ; <nl> + } <nl> + <nl> + @ Override <nl> + public int hashCode ( ) { <nl> + int hash = 7 ; <nl> + hash = 67 * hash + this . value ; <nl> + return hash ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean equals ( Object obj ) { <nl> + if ( this = = obj ) { <nl> + return true ; <nl> + } <nl> + if ( obj = = null ) { <nl> + return false ; <nl> + } <nl> + if ( getClass ( ) ! = obj . getClass ( ) ) { <nl> + return false ; <nl> + } <nl> + final ArmAeabiAttributesTag other = ( ArmAeabiAttributesTag ) obj ; <nl> + if ( this . value ! = other . value ) { <nl> + return false ; <nl> + } <nl> + return true ; <nl> + } <nl> + <nl> + private static final List < ArmAeabiAttributesTag > tags = new LinkedList < ArmAeabiAttributesTag > ( ) ; <nl> + private static final Map < Integer , ArmAeabiAttributesTag > valueMap = new HashMap < Integer , ArmAeabiAttributesTag > ( ) ; <nl> + private static final Map < String , ArmAeabiAttributesTag > nameMap = new HashMap < String , ArmAeabiAttributesTag > ( ) ; <nl> + <nl> + / / Enumerated from ARM IHI 0045E , 2 . 5 Attributes summary and history <nl> + public static final ArmAeabiAttributesTag File = addTag ( 1 , " File " , ParameterType . UINT32 ) ; <nl> + public static final ArmAeabiAttributesTag Section = addTag ( 2 , " Section " , ParameterType . UINT32 ) ; <nl> + public static final ArmAeabiAttributesTag Symbol = addTag ( 3 , " Symbol " , ParameterType . UINT32 ) ; <nl> + public static final ArmAeabiAttributesTag CPU _ raw _ name = addTag ( 4 , " CPU _ raw _ name " , ParameterType . NTBS ) ; <nl> + public static final ArmAeabiAttributesTag CPU _ name = addTag ( 5 , " CPU _ name " , ParameterType . NTBS ) ; <nl> + public static final ArmAeabiAttributesTag CPU _ arch = addTag ( 6 , " CPU _ arch " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag CPU _ arch _ profile = addTag ( 7 , " CPU _ arch _ profile " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ARM _ ISA _ use = addTag ( 8 , " ARM _ ISA _ use " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag THUMB _ ISA _ use = addTag ( 9 , " THUMB _ ISA _ use " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag FP _ arch = addTag ( 10 , " FP _ arch " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag WMMX _ arch = addTag ( 11 , " WMMX _ arch " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag Advanced _ SIMD _ arch = addTag ( 12 , " Advanced _ SIMD _ arch " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag PCS _ config = addTag ( 13 , " PCS _ config " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ PCS _ R9 _ use = addTag ( 14 , " ABI _ PCS _ R9 _ use " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ PCS _ RW _ data = addTag ( 15 , " ABI _ PCS _ RW _ data " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ PCS _ RO _ data = addTag ( 16 , " ABI _ PCS _ RO _ data " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ PCS _ GOT _ use = addTag ( 17 , " ABI _ PCS _ GOT _ use " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ PCS _ wchar _ t = addTag ( 18 , " ABI _ PCS _ wchar _ t " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ FP _ rounding = addTag ( 19 , " ABI _ FP _ rounding " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ FP _ denormal = addTag ( 20 , " ABI _ FP _ denormal " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ FP _ exceptions = addTag ( 21 , " ABI _ FP _ exceptions " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ FP _ user _ exceptions = addTag ( 22 , " ABI _ FP _ user _ exceptions " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ FP _ number _ model = addTag ( 23 , " ABI _ FP _ number _ model " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ align _ needed = addTag ( 24 , " ABI _ align _ needed " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ align8 _ preserved = addTag ( 25 , " ABI _ align8 _ preserved " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ enum _ size = addTag ( 26 , " ABI _ enum _ size " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ HardFP _ use = addTag ( 27 , " ABI _ HardFP _ use " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ VFP _ args = addTag ( 28 , " ABI _ VFP _ args " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ WMMX _ args = addTag ( 29 , " ABI _ WMMX _ args " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ optimization _ goals = addTag ( 30 , " ABI _ optimization _ goals " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ FP _ optimization _ goals = addTag ( 31 , " ABI _ FP _ optimization _ goals " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag compatibility = addTag ( 32 , " compatibility " , ParameterType . NTBS ) ; <nl> + public static final ArmAeabiAttributesTag CPU _ unaligned _ access = addTag ( 34 , " CPU _ unaligned _ access " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag FP _ HP _ extension = addTag ( 36 , " FP _ HP _ extension " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag ABI _ FP _ 16bit _ format = addTag ( 38 , " ABI _ FP _ 16bit _ format " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag MPextension _ use = addTag ( 42 , " MPextension _ use " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag DIV _ use = addTag ( 44 , " DIV _ use " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag nodefaults = addTag ( 64 , " nodefaults " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag also _ compatible _ with = addTag ( 65 , " also _ compatible _ with " , ParameterType . NTBS ) ; <nl> + public static final ArmAeabiAttributesTag conformance = addTag ( 67 , " conformance " , ParameterType . NTBS ) ; <nl> + public static final ArmAeabiAttributesTag T2EE _ use = addTag ( 66 , " T2EE _ use " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag Virtualization _ use = addTag ( 68 , " Virtualization _ use " , ParameterType . ULEB128 ) ; <nl> + public static final ArmAeabiAttributesTag MPextension _ use2 = addTag ( 70 , " MPextension _ use " , ParameterType . ULEB128 ) ; <nl> + <nl> + private static ArmAeabiAttributesTag addTag ( int value , String name , ArmAeabiAttributesTag . ParameterType type ) { <nl> + ArmAeabiAttributesTag tag = new ArmAeabiAttributesTag ( value , name , type ) ; <nl> + <nl> + if ( ! valueMap . containsKey ( tag . getValue ( ) ) ) { <nl> + valueMap . put ( tag . getValue ( ) , tag ) ; <nl> + } <nl> + if ( ! nameMap . containsKey ( tag . getName ( ) ) ) { <nl> + nameMap . put ( tag . getName ( ) , tag ) ; <nl> + } <nl> + tags . add ( tag ) ; <nl> + return tag ; <nl> + } <nl> + <nl> + public static List < ArmAeabiAttributesTag > getTags ( ) { <nl> + return Collections . unmodifiableList ( tags ) ; <nl> + } <nl> + <nl> + public static ArmAeabiAttributesTag getByName ( String name ) { <nl> + return nameMap . get ( name ) ; <nl> + } <nl> + <nl> + public static ArmAeabiAttributesTag getByValue ( int value ) { <nl> + if ( valueMap . containsKey ( value ) ) { <nl> + return valueMap . get ( value ) ; <nl> + } else { <nl> + ArmAeabiAttributesTag pseudoTag = new ArmAeabiAttributesTag ( value , " Unknown " + value , getParameterType ( value ) ) ; <nl> + return pseudoTag ; <nl> + } <nl> + } <nl> + <nl> + private static ArmAeabiAttributesTag . ParameterType getParameterType ( int value ) { <nl> + / / ARM IHI 0045E , 2 . 2 . 6 Coding extensibility and compatibility <nl> + ArmAeabiAttributesTag tag = getByValue ( value ) ; <nl> + if ( tag = = null ) { <nl> + if ( ( value % 2 ) = = 0 ) { <nl> + return ArmAeabiAttributesTag . ParameterType . ULEB128 ; <nl> + } else { <nl> + return ArmAeabiAttributesTag . ParameterType . NTBS ; <nl> + } <nl> + } else { <nl> + return tag . getParameterType ( ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + <nl> + private static Map < Integer , Map < ArmAeabiAttributesTag , Object > > parseArmAttributes ( ByteBuffer bb ) { <nl> + byte format = bb . get ( ) ; <nl> + if ( format ! = 0x41 ) { <nl> + / / Version A <nl> + / / Not supported <nl> + return Collections . EMPTY _ MAP ; <nl> + } <nl> + while ( bb . position ( ) < bb . limit ( ) ) { <nl> + int posSectionStart = bb . position ( ) ; <nl> + int sectionLength = bb . getInt ( ) ; <nl> + if ( sectionLength < = 0 ) { <nl> + / / Fail ! <nl> + break ; <nl> + } <nl> + String vendorName = readNTBS ( bb , null ) ; <nl> + if ( " aeabi " . equals ( vendorName ) ) { <nl> + return parseAEABI ( bb ) ; <nl> + } <nl> + ( ( Buffer ) bb ) . position ( posSectionStart + sectionLength ) ; <nl> + } <nl> + return Collections . EMPTY _ MAP ; <nl> + } <nl> + <nl> + private static Map < Integer , Map < ArmAeabiAttributesTag , Object > > parseAEABI ( ByteBuffer buffer ) { <nl> + Map < Integer , Map < ArmAeabiAttributesTag , Object > > data = new HashMap < Integer , Map < ArmAeabiAttributesTag , Object > > ( ) ; <nl> + while ( buffer . position ( ) < buffer . limit ( ) ) { <nl> + int pos = buffer . position ( ) ; <nl> + int subsectionTag = readULEB128 ( buffer ) . intValue ( ) ; <nl> + int length = buffer . getInt ( ) ; <nl> + if ( subsectionTag = = ( byte ) 1 ) { <nl> + data . put ( subsectionTag , parseFileAttribute ( buffer ) ) ; <nl> + } <nl> + ( ( Buffer ) buffer ) . position ( pos + length ) ; <nl> + } <nl> + return data ; <nl> + } <nl> + <nl> + private static Map < ArmAeabiAttributesTag , Object > parseFileAttribute ( ByteBuffer bb ) { <nl> + Map < ArmAeabiAttributesTag , Object > result = new HashMap < ArmAeabiAttributesTag , Object > ( ) ; <nl> + while ( bb . position ( ) < bb . limit ( ) ) { <nl> + int tagValue = readULEB128 ( bb ) . intValue ( ) ; <nl> + ArmAeabiAttributesTag tag = ArmAeabiAttributesTag . getByValue ( tagValue ) ; <nl> + switch ( tag . getParameterType ( ) ) { <nl> + case UINT32 : <nl> + result . put ( tag , bb . getInt ( ) ) ; <nl> + break ; <nl> + case NTBS : <nl> + result . put ( tag , readNTBS ( bb , null ) ) ; <nl> + break ; <nl> + case ULEB128 : <nl> + result . put ( tag , readULEB128 ( bb ) ) ; <nl> + break ; <nl> + } <nl> + } <nl> + return result ; <nl> + } <nl> + <nl> + private static String readNTBS ( ByteBuffer buffer , Integer position ) { <nl> + if ( position ! = null ) { <nl> + ( ( Buffer ) buffer ) . position ( position ) ; <nl> + } <nl> + int startingPos = buffer . position ( ) ; <nl> + byte currentByte ; <nl> + do { <nl> + currentByte = buffer . get ( ) ; <nl> + } while ( currentByte ! = ' \ 0 ' & & buffer . position ( ) < = buffer . limit ( ) ) ; <nl> + int terminatingPosition = buffer . position ( ) ; <nl> + byte [ ] data = new byte [ terminatingPosition - startingPos - 1 ] ; <nl> + ( ( Buffer ) buffer ) . position ( startingPos ) ; <nl> + buffer . get ( data ) ; <nl> + ( ( Buffer ) buffer ) . position ( buffer . position ( ) + 1 ) ; <nl> + try { <nl> + return new String ( data , " ASCII " ) ; <nl> + } catch ( UnsupportedEncodingException ex ) { <nl> + throw new RuntimeException ( ex ) ; <nl> + } <nl> + } <nl> + <nl> + private static BigInteger readULEB128 ( ByteBuffer buffer ) { <nl> + BigInteger result = BigInteger . ZERO ; <nl> + int shift = 0 ; <nl> + while ( true ) { <nl> + byte b = buffer . get ( ) ; <nl> + result = result . or ( BigInteger . valueOf ( b & 127 ) . shiftLeft ( shift ) ) ; <nl> + if ( ( b & 128 ) = = 0 ) { <nl> + break ; <nl> } <nl> + shift + = 7 ; <nl> } <nl> + return result ; <nl> } <nl> } <nl> diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java <nl> index 7a5a29c . . 7bd9479 100644 <nl> - - - a / src / com / sun / jna / Platform . java <nl> + + + b / src / com / sun / jna / Platform . java <nl> @ @ - 268 , 7 + 268 , 7 @ @ public final class Platform { <nl> File self = new File ( " / proc / self / exe " ) ; <nl> if ( self . exists ( ) ) { <nl> ELFAnalyser ahfd = ELFAnalyser . analyse ( self . getCanonicalPath ( ) ) ; <nl> - return ahfd . isArmSoftFloat ( ) ; <nl> + return ! ahfd . isArmHardFloat ( ) ; <nl> } <nl> } catch ( IOException ex ) { <nl> / / asume hardfloat <nl> diff - - git a / test / com / sun / jna / ELFAnalyserTest . java b / test / com / sun / jna / ELFAnalyserTest . java <nl> index 18c74da . . 29c47bb 100644 <nl> - - - a / test / com / sun / jna / ELFAnalyserTest . java <nl> + + + b / test / com / sun / jna / ELFAnalyserTest . java <nl> @ @ - 10 , 31 + 10 , 33 @ @ import org . junit . Test ; <nl> <nl> <nl> public class ELFAnalyserTest { <nl> - <nl> + <nl> private static final File TEST _ RESOURCES = new File ( " build / test - resources " ) ; <nl> private static final File WIN32 _ LIB = new File ( TEST _ RESOURCES , " win32 - x86 - 64 . dll " ) ; <nl> private static final File LINUX _ ARMEL _ LIB = new File ( TEST _ RESOURCES , " linux - armel . so " ) ; <nl> private static final File LINUX _ ARMEL _ NOFLAG _ LIG = new File ( TEST _ RESOURCES , " linux - armel - noflag . so " ) ; <nl> + private static final File LINUX _ ARMHF _ NOFLAG _ LIG = new File ( TEST _ RESOURCES , " linux - armhf - noflag . so " ) ; <nl> private static final File LINUX _ ARMHF _ LIB = new File ( TEST _ RESOURCES , " linux - armhf . so " ) ; <nl> private static final File LINUX _ AMD64 _ LIB = new File ( TEST _ RESOURCES , " linux - amd64 . so " ) ; <nl> - <nl> + <nl> @ BeforeClass <nl> public static void initClass ( ) throws IOException { <nl> TEST _ RESOURCES . mkdirs ( ) ; <nl> - <nl> + <nl> extractTestFile ( WIN32 _ LIB ) ; <nl> extractTestFile ( LINUX _ ARMEL _ LIB ) ; <nl> extractTestFile ( LINUX _ ARMHF _ LIB ) ; <nl> extractTestFile ( LINUX _ AMD64 _ LIB ) ; <nl> - makeLinuxArmelNoflagLib ( LINUX _ ARMEL _ LIB , LINUX _ ARMEL _ NOFLAG _ LIG ) ; <nl> + makeLinuxArmNoflagLib ( LINUX _ ARMEL _ LIB , LINUX _ ARMEL _ NOFLAG _ LIG ) ; <nl> + makeLinuxArmNoflagLib ( LINUX _ ARMHF _ LIB , LINUX _ ARMHF _ NOFLAG _ LIG ) ; <nl> } <nl> - <nl> + <nl> @ Test <nl> public void testNonELF ( ) throws IOException { <nl> ELFAnalyser ahfd = ELFAnalyser . analyse ( WIN32 _ LIB . getAbsolutePath ( ) ) ; <nl> assertFalse ( ahfd . isELF ( ) ) ; <nl> } <nl> - <nl> + <nl> @ Test <nl> public void testNonArm ( ) throws IOException { <nl> ELFAnalyser ahfd = ELFAnalyser . analyse ( LINUX _ AMD64 _ LIB . getAbsolutePath ( ) ) ; <nl> @ @ - 42 , 24 + 44 , 28 @ @ public class ELFAnalyserTest { <nl> assertFalse ( ahfd . isArm ( ) ) ; <nl> assertTrue ( ahfd . is64Bit ( ) ) ; <nl> } <nl> - <nl> + <nl> @ Test <nl> public void testArmhf ( ) throws IOException { <nl> ELFAnalyser ahfd = ELFAnalyser . analyse ( LINUX _ ARMHF _ LIB . getAbsolutePath ( ) ) ; <nl> assertTrue ( ahfd . isELF ( ) ) ; <nl> assertTrue ( ahfd . isArm ( ) ) ; <nl> assertFalse ( ahfd . is64Bit ( ) ) ; <nl> - assertFalse ( ahfd . isArmSoftFloat ( ) ) ; <nl> + assertFalse ( ahfd . isArmSoftFloatFlag ( ) ) ; <nl> + assertTrue ( ahfd . isArmHardFloatFlag ( ) ) ; <nl> + assertTrue ( ahfd . isArmEabiAapcsVfp ( ) ) ; <nl> assertTrue ( ahfd . isArmHardFloat ( ) ) ; <nl> } <nl> - <nl> + <nl> @ Test <nl> public void testArmel ( ) throws IOException { <nl> ELFAnalyser ahfd = ELFAnalyser . analyse ( LINUX _ ARMEL _ LIB . getAbsolutePath ( ) ) ; <nl> assertTrue ( ahfd . isELF ( ) ) ; <nl> assertTrue ( ahfd . isArm ( ) ) ; <nl> assertFalse ( ahfd . is64Bit ( ) ) ; <nl> - assertTrue ( ahfd . isArmSoftFloat ( ) ) ; <nl> + assertTrue ( ahfd . isArmSoftFloatFlag ( ) ) ; <nl> + assertFalse ( ahfd . isArmHardFloatFlag ( ) ) ; <nl> + assertFalse ( ahfd . isArmEabiAapcsVfp ( ) ) ; <nl> assertFalse ( ahfd . isArmHardFloat ( ) ) ; <nl> } <nl> <nl> @ @ - 69 , 10 + 75 , 24 @ @ public class ELFAnalyserTest { <nl> assertTrue ( ahfd . isELF ( ) ) ; <nl> assertTrue ( ahfd . isArm ( ) ) ; <nl> assertFalse ( ahfd . is64Bit ( ) ) ; <nl> - assertTrue ( ahfd . isArmSoftFloat ( ) ) ; <nl> + assertFalse ( ahfd . isArmSoftFloatFlag ( ) ) ; <nl> + assertFalse ( ahfd . isArmHardFloatFlag ( ) ) ; <nl> + assertFalse ( ahfd . isArmEabiAapcsVfp ( ) ) ; <nl> assertFalse ( ahfd . isArmHardFloat ( ) ) ; <nl> } <nl> - <nl> + <nl> + @ Test <nl> + public void testArmhfNoflag ( ) throws IOException { <nl> + ELFAnalyser ahfd = ELFAnalyser . analyse ( LINUX _ ARMHF _ NOFLAG _ LIG . getAbsolutePath ( ) ) ; <nl> + assertTrue ( ahfd . isELF ( ) ) ; <nl> + assertTrue ( ahfd . isArm ( ) ) ; <nl> + assertFalse ( ahfd . is64Bit ( ) ) ; <nl> + assertFalse ( ahfd . isArmSoftFloatFlag ( ) ) ; <nl> + assertFalse ( ahfd . isArmHardFloatFlag ( ) ) ; <nl> + assertTrue ( ahfd . isArmEabiAapcsVfp ( ) ) ; <nl> + assertTrue ( ahfd . isArmHardFloat ( ) ) ; <nl> + } <nl> + <nl> @ AfterClass <nl> public static void afterClass ( ) throws IOException { <nl> LINUX _ AMD64 _ LIB . delete ( ) ; <nl> @ @ - 80 , 9 + 100 , 10 @ @ public class ELFAnalyserTest { <nl> LINUX _ ARMEL _ LIB . delete ( ) ; <nl> WIN32 _ LIB . delete ( ) ; <nl> LINUX _ ARMEL _ NOFLAG _ LIG . delete ( ) ; <nl> + LINUX _ ARMHF _ NOFLAG _ LIG . delete ( ) ; <nl> TEST _ RESOURCES . delete ( ) ; <nl> } <nl> - <nl> + <nl> private static void extractTestFile ( File outputFile ) throws IOException { <nl> String inputPath = " / com / sun / jna / data / " + outputFile . getName ( ) ; <nl> InputStream is = ELFAnalyserTest . class . getResourceAsStream ( inputPath ) ; <nl> @ @ - 100 , 10 + 121 , 10 @ @ public class ELFAnalyserTest { <nl> <nl> / / The e _ flags for elf arm binaries begin at an offset of 0x24 bytes . <nl> / / The procedure call standard is coded on the second byte . <nl> - private static void makeLinuxArmelNoflagLib ( File sourceFile , File outputFile ) throws IOException { <nl> + private static void makeLinuxArmNoflagLib ( File sourceFile , File outputFile ) throws IOException { <nl> final int POS _ ABI _ FLOAT _ BIT = ( byte ) 0x25 ; <nl> copyFile ( sourceFile , outputFile ) ; <nl> - <nl> + <nl> RandomAccessFile out = new RandomAccessFile ( outputFile , " rw " ) ; <nl> <nl> out . seek ( POS _ ABI _ FLOAT _ BIT ) ; <nl> @ @ - 111 , 7 + 132 , 7 @ @ public class ELFAnalyserTest { <nl> <nl> out . close ( ) ; <nl> } <nl> - <nl> + <nl> private static void copyFile ( File sourceFile , File outputFile ) throws IOException { <nl> InputStream inputStream = null ; <nl> OutputStream outputStream = null ; <nl> @ @ - 124 , 7 + 145 , 7 @ @ public class ELFAnalyserTest { <nl> closeSilently ( outputStream ) ; <nl> } <nl> } <nl> - <nl> + <nl> private static void copyStream ( InputStream is , OutputStream os ) throws IOException { <nl> int read ; <nl> byte [ ] buffer = new byte [ 1024 * 1024 ] ; <nl> @ @ - 132 , 7 + 153 , 7 @ @ public class ELFAnalyserTest { <nl> os . write ( buffer , 0 , read ) ; <nl> } <nl> } <nl> - <nl> + <nl> private static void closeSilently ( Closeable closeable ) { <nl> if ( closeable = = null ) { <nl> return ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index ac1f85e . . 32e187c 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 16 , 7 + 16 , 7 @ @ Features <nl> * Bind ` com . sun . jna . platform . win32 . Kernel32 . ExpandEnvironmentStrings ` and add helper method for it as ` Kernel32Util # expandEnvironmentStrings ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 935 ] ( https : / / github . com / java - native - access / jna / pull / 935 ) : Add RegConnectRegistry to Advapi32 mappings . - [ @ cxcorp ] ( https : / / github . com / cxcorp ) . <nl> * [ # 947 ] ( https : / / github . com / java - native - access / jna / pull / 947 ) : Allow retrieval of ` ACEs ` from ` com . sun . jna . platform . win32 . WinNT . ACL ` even if the contained ` ACE ` is not currently supported - [ @ jrobhoward ] ( https : / / github . com / jrobhoward ) . <nl> - * Add ` c . s . j . Structure . FieldOrder ` annotation to define the field order of a structures without implementing ` Structure # getFieldOrder ( ) ` - [ @ idosu ] ( https : / / github . com / idosu ) . <nl> + * [ # 954 ] ( https : / / github . com / java - native - access / jna / pull / 954 ) : Add ` c . s . j . Structure . FieldOrder ` annotation to define the field order of a structures without implementing ` Structure # getFieldOrder ( ) ` - [ @ idosu ] ( https : / / github . com / idosu ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - -
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index 658240e . . 2b19d7b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 2802 , 6 + 2802 , 9 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> <nl> @ Override <nl> public void read ( ) { <nl> + if ( SidStart = = null ) { <nl> + SidStart = new byte [ 4 ] ; <nl> + } <nl> super . read ( ) ; <nl> int offsetOfSID = super . fieldOffset ( " SidStart " ) ; <nl> int sizeOfSID = super . AceSize - super . fieldOffset ( " SidStart " ) ; <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> index 7069d97 . . ebd371e 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> @ @ - 59 , 12 + 59 , 12 @ @ public class User32Test extends AbstractWin32TestSupport { <nl> public static void main ( String [ ] args ) { <nl> JUnitCore . runClasses ( User32Test . class ) ; <nl> } <nl> - <nl> + <nl> @ Before <nl> public void setUp ( ) { <nl> Native . setLastError ( 0 ) ; <nl> } <nl> - <nl> + <nl> / * * <nl> * Iterates over all currently available Desktop windows and searches for <nl> * the window with the associated process whose full PE file path ends with
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> index a124243 . . 7069d97 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> @ @ - 49 , 6 + 49 , 7 @ @ import com . sun . jna . platform . win32 . WinUser . LASTINPUTINFO ; <nl> import com . sun . jna . platform . win32 . WinUser . MONITORENUMPROC ; <nl> import com . sun . jna . platform . win32 . WinUser . MONITORINFO ; <nl> import com . sun . jna . platform . win32 . WinUser . MONITORINFOEX ; <nl> + import org . junit . Before ; <nl> <nl> / * * <nl> * @ author dblock [ at ] dblock [ dot ] org <nl> @ @ - 58 , 7 + 59 , 12 @ @ public class User32Test extends AbstractWin32TestSupport { <nl> public static void main ( String [ ] args ) { <nl> JUnitCore . runClasses ( User32Test . class ) ; <nl> } <nl> - <nl> + <nl> + @ Before <nl> + public void setUp ( ) { <nl> + Native . setLastError ( 0 ) ; <nl> + } <nl> + <nl> / * * <nl> * Iterates over all currently available Desktop windows and searches for <nl> * the window with the associated process whose full PE file path ends with <nl> @ @ - 339 , 7 + 345 , 6 @ @ public class User32Test extends AbstractWin32TestSupport { <nl> public void testIsWindow ( ) { <nl> boolean iwResult = User32 . INSTANCE . IsWindow ( null ) ; <nl> assertFalse ( " IsWindow result should be false " , iwResult ) ; <nl> - assertEquals ( " GetLastError should be ERROR _ SUCCESS . " , WinError . ERROR _ SUCCESS , Native . getLastError ( ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 356 , 7 + 361 , 6 @ @ public class User32Test extends AbstractWin32TestSupport { <nl> <nl> HWND result = User32 . INSTANCE . GetAncestor ( desktopWindow , WinUser . GA _ PARENT ) ; <nl> assertNull ( " GetAncestor result should be null " , result ) ; <nl> - assertEquals ( " GetLastError should be ERROR _ SUCCESS . " , WinError . ERROR _ SUCCESS , Native . getLastError ( ) ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 414 , 10 + 418 , 8 @ @ public class User32Test extends AbstractWin32TestSupport { <nl> <nl> @ Test <nl> public void testGetActiveWindow ( ) { <nl> - <nl> HWND result = User32 . INSTANCE . GetActiveWindow ( ) ; <nl> - assertNull ( " GetActiveWindow result should be null " , result ) ; <nl> - assertEquals ( " GetLastError should be ERROR _ SUCCESS . " , WinError . ERROR _ SUCCESS , Native . getLastError ( ) ) ; <nl> + assertNull ( " GetActiveWindow result should be null ( there is no active window ) " , result ) ; <nl> } <nl> <nl> @ Test
diff - - git a / lib / native / sunos - sparc . jar b / lib / native / sunos - sparc . jar <nl> index 6716399 . . 35fa23c 100644 <nl> Binary files a / lib / native / sunos - sparc . jar and b / lib / native / sunos - sparc . jar differ <nl> diff - - git a / lib / native / sunos - sparcv9 . jar b / lib / native / sunos - sparcv9 . jar <nl> index 6716399 . . 8280bb9 100755 <nl> Binary files a / lib / native / sunos - sparcv9 . jar and b / lib / native / sunos - sparcv9 . jar differ <nl> diff - - git a / lib / native / sunos - x86 . jar b / lib / native / sunos - x86 . jar <nl> index 6716399 . . 2263d1e 100755 <nl> Binary files a / lib / native / sunos - x86 . jar and b / lib / native / sunos - x86 . jar differ
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 0d71935 . . bafdaf5 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 30 , 6 + 30 , 18 @ @ Bug Fixes <nl> * [ # 894 ] ( https : / / github . com / java - native - access / jna / issues / 894 ) : NullPointerException can be caused by calling ` com . sun . jna . platform . win32 . COM . util . ProxyObject # dispose ` multiple times - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 925 ] ( https : / / github . com / java - native - access / jna / issues / 925 ) : Optimize ` Structure # validate ` and prevent ` ArrayIndexOutOfBoundsException ` in ` SAFEARRAY # read ` for zero dimensions - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 340 ] ( https : / / github . com / java - native - access / jna / issues / 340 ) : Guard registry handling against out - of - bounds reads by ensuring all read strings are NULL terminated - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 902 ] ( https : / / github . com / java - native - access / jna / issues / 902 ) : Allow building JNA on JDK 10 . ` javah ` <nl> + was removed from the JDK and ` javac ` is now used to create the necessary headers . <nl> + JNA now has JDK 8 as the minimum build version , at runtime Java 6 is the minimum version . < br / > <nl> + Native code for platforms with a JDK version lower than 8 can still be build by ( demonstrated for Solaris x86 ) : <nl> + < ol > <nl> + < li > Run ` ant - Dbuild . os . name = SunOS - Dbuild . os . arch = x86 native - build - package ` < / li > <nl> + < li > Transfer the ` build / build - package - sunos - x86 - 5 . 2 . 1 . zip ` file to the target system . The file holds the native sources , the necessary headers and and a shell script for the build . < / li > <nl> + < li > Expand the zip on the target system . < / li > <nl> + < li > Setup ` JAVA _ HOME ` to point to the JDK sources . < / li > <nl> + < li > Change into the expanded directory and run ` bash build . sh ` . < / li > <nl> + < li > The resulting ` sunos - x86 . jar ` is copied back to the original build system to ` lib / native / sunos - x86 . jar ` < / li > <nl> + < / ol > - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Breaking Changes <nl> - - - - - - - - - - - - - - - - <nl> diff - - git a / build . xml b / build . xml <nl> index 38ae002 . . e70b59f 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 156 , 6 + 156 , 20 @ @ <nl> < / target > <nl> <nl> < target name = " - dynamic - properties " depends = " - prepare - anttools " > <nl> + < property name = " build . os . name " value = " $ { os . name } " / > <nl> + < condition property = " build . os . family " value = " windows " > <nl> + < contains string = " $ { build . os . name } " substring = " windows " casesensitive = " false " / > <nl> + < / condition > <nl> + < condition property = " build . os . family " value = " mac " > <nl> + < or > <nl> + < contains string = " $ { build . os . name } " substring = " darwin " casesensitive = " false " / > <nl> + < contains string = " $ { build . os . name } " substring = " mac " casesensitive = " false " / > <nl> + < / or > <nl> + < / condition > <nl> + < property name = " build . os . family " value = " other " / > <nl> + < property name = " build . os . arch " value = " $ { os . arch } " / > <nl> + < property name = " build . os . endianess " value = " $ { sun . cpu . endian } " / > <nl> + <nl> < condition property = " - native " value = " true " > <nl> < not > < isset property = " build - native " / > < / not > <nl> < / condition > <nl> @ @ - 185 , 43 + 199 , 6 @ @ <nl> < condition property = " cross - compile " value = " true " > <nl> < isset property = " os . prefix " / > <nl> < / condition > <nl> - < ! - - Sun 1 . 6 VM for windows doesn ' t support - d32 / - d64 switch - - > <nl> - < condition property = " vm . 64 " value = " - d64 " else = " - Ddummy " > <nl> - < not > < os family = " windows " / > < / not > <nl> - < / condition > <nl> - < condition property = " vm . 32 " value = " - d32 " else = " - Ddummy " > <nl> - < not > < os family = " windows " / > < / not > <nl> - < / condition > <nl> - < condition property = " vmopt . arch " value = " $ { vm . 64 } " else = " $ { vm . 32 } " > <nl> - < and > <nl> - < not > <nl> - < and > <nl> - < matches pattern = " ^ android - " string = " $ { os . prefix } " / > <nl> - < not > < matches pattern = " 64 $ " string = " $ { os . prefix } " / > < / not > <nl> - < / and > <nl> - < / not > <nl> - < or > <nl> - < equals arg1 = " $ { sun . arch . data . model } " arg2 = " 64 " trim = " true " / > <nl> - < equals arg1 = " $ { com . ibm . vm . bitmode } " arg2 = " 64 " trim = " true " / > <nl> - < os arch = " x86 _ 64 " / > <nl> - < os arch = " amd64 " / > <nl> - < os arch = " em64t " / > <nl> - < os arch = " sparcv9 " / > <nl> - < os arch = " ppc64 " / > <nl> - < os arch = " ppc64le " / > <nl> - < os arch = " ia64 " / > <nl> - < os arch = " aarch64 " / > <nl> - < os arch = " mips64el " / > <nl> - < os arch = " s390x " / > <nl> - < / or > <nl> - < / and > <nl> - < / condition > <nl> - < condition property = " ld . preload " value = " LD _ PRELOAD _ 64 " else = " LD _ PRELOAD " > <nl> - < and > <nl> - < os name = " SunOS " / > <nl> - < equals arg1 = " $ { vmopt . arch } " arg2 = " $ { vm . 64 } " / > <nl> - < / and > <nl> - < / condition > <nl> <nl> < property name = " classes " location = " $ { build } / classes " / > <nl> < property name = " eclipse . classes " location = " build . eclipse / classes " / > <nl> @ @ - 239 , 62 + 216 , 62 @ @ <nl> <nl> < ! - - Add other supported platforms here - - > <nl> < condition property = " jre . arch " value = " x86 " > <nl> - < matches pattern = " ( i [ 3456 ] 86 | pentium ) " string = " $ { os . arch } " / > <nl> + < matches pattern = " ( i [ 3456 ] 86 | pentium ) " string = " $ { build . os . arch } " / > <nl> < / condition > <nl> < condition property = " jre . arch " value = " x86 - 64 " > <nl> - < matches pattern = " ( x86 _ 64 | amd64 | em64t ) " string = " $ { os . arch } " / > <nl> + < matches pattern = " ( x86 _ 64 | amd64 | em64t ) " string = " $ { build . os . arch } " / > <nl> < / condition > <nl> < condition property = " jre . arch " value = " ppc " > <nl> - < matches pattern = " ( powerpc | power ) " string = " $ { os . arch } " / > <nl> + < matches pattern = " ( powerpc | power ) " string = " $ { build . os . arch } " / > <nl> < / condition > <nl> < condition property = " jre . arch " value = " ppc64le " > <nl> < or > <nl> - 	 < matches pattern = " ( powerpc64le | power64le | ppc64le ) " string = " $ { os . arch } " / > <nl> + 	 < matches pattern = " ( powerpc64le | power64le | ppc64le ) " string = " $ { build . os . arch } " / > <nl> 	 < and > <nl> - 	 < matches pattern = " ( powerpc64 | power64 | ppc64 ) " string = " $ { os . arch } " / > <nl> - 	 < matches pattern = " little " string = " $ { sun . cpu . endian } " / > <nl> + 	 < matches pattern = " ( powerpc64 | power64 | ppc64 ) " string = " $ { build . os . arch } " / > <nl> + 	 < matches pattern = " little " string = " $ { build . os . endianess } " / > <nl> 	 < / and > <nl> < / or > <nl> < / condition > <nl> < condition property = " jre . arch " value = " ppc64 " > <nl> - < matches pattern = " ( powerpc64 | power64 ) " string = " $ { os . arch } " / > <nl> + < matches pattern = " ( powerpc64 | power64 ) " string = " $ { build . os . arch } " / > <nl> < / condition > <nl> < condition property = " jre . arch " value = " armel " > <nl> < and > <nl> - < matches pattern = " arm " string = " $ { os . arch } " / > <nl> + < matches pattern = " arm " string = " $ { build . os . arch } " / > <nl> < matches pattern = " true " string = " $ { build . isArmSoftFloat } " / > <nl> < / and > <nl> < / condition > <nl> <nl> - < property name = " jre . arch " value = " $ { os . arch } " / > <nl> + < property name = " jre . arch " value = " $ { build . os . arch } " / > <nl> <nl> < condition property = " os . prefix " value = " linux - $ { jre . arch } " > <nl> - < os name = " Linux " / > <nl> + < equals arg1 = " $ { build . os . name } " arg2 = " Linux " / > <nl> < / condition > <nl> < condition property = " os . prefix " value = " aix - $ { jre . arch } " > <nl> - < os name = " AIX " / > <nl> + < equals arg1 = " $ { build . os . name } " arg2 = " AIX " / > <nl> < / condition > <nl> < condition property = " os . prefix " value = " win32 - $ { jre . arch } " > <nl> - < os family = " windows " / > <nl> + < equals arg1 = " $ { build . os . family } " arg2 = " windows " / > <nl> < / condition > <nl> < ! - - Darwin builds are universal , no arch required - - > <nl> < condition property = " os . prefix " value = " darwin " > <nl> - < os family = " mac " / > <nl> + < equals arg1 = " $ { build . os . family } " arg2 = " mac " / > <nl> < / condition > <nl> < condition property = " os . prefix " value = " sunos - $ { jre . arch } " > <nl> - < os name = " SunOS " / > <nl> + < equals arg1 = " $ { build . os . name } " arg2 = " SunOS " / > <nl> < / condition > <nl> < condition property = " os . prefix " value = " freebsd - $ { jre . arch } " > <nl> - < os name = " FreeBSD " / > <nl> + < equals arg1 = " $ { build . os . name } " arg2 = " FreeBSD " / > <nl> < / condition > <nl> < condition property = " os . prefix " value = " openbsd - $ { jre . arch } " > <nl> - 	 < os name = " OpenBSD " / > <nl> + 	 < equals arg1 = " $ { build . os . name } " arg2 = " OpenBSD " / > <nl> < / condition > <nl> < condition property = " os . prefix " value = " netbsd - $ { jre . arch } " > <nl> - < os name = " NetBSD " / > <nl> + < equals arg1 = " $ { build . os . name } " arg2 = " NetBSD " / > <nl> < / condition > <nl> < condition property = " os . prefix " value = " kfreebsd - $ { jre . arch } " > <nl> - < os name = " GNU / kFreeBSD " / > <nl> + < equals arg1 = " $ { build . os . name } " arg2 = " GNU / kFreeBSD " / > <nl> < / condition > <nl> < fail unless = " os . prefix " message = " OS / arch not supported ( $ { os . name } / $ { jre . arch } ) , edit build . xml and native / Makefile to add it . " / > <nl> < ! - - Keep all natives separate - - > <nl> @ @ - 314 , 16 + 291 , 19 @ @ <nl> value = " $ { java . home } / lib / $ { libarch } / libjsig . so " else = " " > <nl> < available file = " $ { java . home } / lib / $ { libarch } / libjsig . so " / > <nl> < / condition > <nl> - < condition property = " ld . preload . name " value = " $ { ld . preload } " else = " IGNORE " > <nl> + < condition property = " ld . preload . name " value = " LD _ PRELOAD " else = " IGNORE " > <nl> < not > < equals arg1 = " $ { libjsig } " arg2 = " " / > < / not > <nl> < / condition > <nl> < property name = " native . jar " value = " $ { os . prefix } . jar " / > <nl> < property name = " build . native " location = " $ { build } / $ { native . subdir } " / > <nl> + < property name = " build . headers " location = " $ { build } / headers " / > <nl> < property name = " build . aar " location = " $ { build } / aar " / > <nl> - < property name = " md5 . file " location = " $ { build . native } / jni . checksum " / > <nl> + < property name = " md5 . file " location = " $ { build . headers } / jni . checksum " / > <nl> + < property name = " jni . info " location = " $ { build . headers } / jni . properties " / > <nl> <nl> < mkdir dir = " $ { build } " / > <nl> < mkdir dir = " $ { build . native } " / > <nl> + < mkdir dir = " $ { build . headers } " / > <nl> < mkdir dir = " $ { classes } " / > <nl> < mkdir dir = " $ { test . classes } " / > <nl> < mkdir dir = " $ { reports } " / > <nl> @ @ - 336 , 10 + 316 , 11 @ @ <nl> < echo > java . home = $ { java . home } < / echo > <nl> < echo > java . library . path = $ { java . library . path } < / echo > <nl> < echo > os . prefix = $ { os . prefix } < / echo > <nl> - < echo > os . name = $ { os . name } < / echo > <nl> - < echo > os . arch = $ { os . arch } ( $ { sun . cpu . endian } ) < / echo > <nl> + < echo > os . name = $ { build . os . name } < / echo > <nl> + < echo > os . arch = $ { build . os . arch } ( $ { build . os . endianess } ) < / echo > <nl> < echo > build = $ { build } < / echo > <nl> < echo > build . native = $ { build . native } < / echo > <nl> + < echo > build . headers = $ { build . headers } < / echo > <nl> < echo > build . aar = $ { build . aar } < / echo > <nl> <nl> < / target > <nl> @ @ - 377 , 7 + 358 , 8 @ @ <nl> includeantruntime = " false " <nl> deprecation = " on " <nl> debug = " $ { debug } " <nl> - encoding = " UTF - 8 " > <nl> + encoding = " UTF - 8 " <nl> + nativeheaderdir = " $ { build . headers } " > <nl> < src refid = " src . path " / > <nl> < / javac > <nl> < / target > <nl> @ @ - 665 , 11 + 647 , 6 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < / target > <nl> <nl> < target name = " javah " depends = " compile " unless = " - native " > <nl> - < javah classpath = " $ { classes } " destdir = " $ { build . native } " force = " yes " > <nl> - < class name = " com . sun . jna . Function " / > <nl> - < class name = " com . sun . jna . Native " / > <nl> - < class name = " com . sun . jna . win32 . DLLCallback " / > <nl> - < / javah > <nl> < condition property = " grep " value = " / usr / sfw / bin / ggrep " > <nl> < os name = " SunOS " / > <nl> < / condition > <nl> @ @ - 681 , 12 + 658 , 12 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < os name = " AIX " / > <nl> < / condition > <nl> < ! - - args are based on GNU grep , other versions may differ - - > <nl> - < apply dir = " $ { build . native } " executable = " $ { grep } " parallel = " true " <nl> + < apply dir = " $ { build . headers } " executable = " $ { grep } " parallel = " true " <nl> failonerror = " $ { grep . required } " relative = " true " output = " $ { md5 . file } " > <nl> < arg value = " - A " / > <nl> < arg value = " 1 " / > <nl> < arg value = " JNIEXPORT " / > <nl> - < fileset dir = " $ { build . native } " includes = " * . h " / > <nl> + < fileset dir = " $ { build . headers } " includes = " * . h " / > <nl> < / apply > <nl> < ! - - Clean up gcj javah output to match that of Sun ' s javah - - > <nl> < fixcrlf file = " $ { md5 . file } " eol = " unix " / > <nl> @ @ - 703 , 6 + 680 , 10 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> 	 	 flags = " m " <nl> file = " $ { md5 . file } " / > <nl> < checksum property = " md5 " file = " $ { md5 . file } " / > <nl> + < propertyfile file = " $ { jni . info } " > <nl> + < entry key = " checksum " value = " $ { md5 } " / > <nl> + < entry key = " version " value = " $ { jni . version } " / > <nl> + < / propertyfile > <nl> < condition property = " jni . valid " value = " true " > <nl> < or > <nl> < os name = " AIX " / > <nl> @ @ - 755 , 7 + 736 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < target name = " : rsrc " > <nl> < condition property = " - rsrc " > <nl> < and > <nl> - < not > < os family = " windows " / > < / not > <nl> + < not > < equals arg1 = " $ { build . os . family } " arg2 = " windows " / > < / not > <nl> < not > < equals arg1 = " $ { os . prefix } " arg2 = " w32ce - arm " / > < / not > <nl> < / and > <nl> < / condition > <nl> @ @ - 790 , 16 + 771 , 8 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> file = " $ { rsrc } " byline = " true " / > <nl> < / target > <nl> <nl> - < target name = " native " depends = " - enable - native , - setup , javah , - native - api - check , rsrc " unless = " - native " <nl> - description = " Build native libraries . Use ' ant - DCC = xxx ' to build using a compiler other than gcc " > <nl> + < target name = " - prepare - native " depends = " - setup , rsrc " > <nl> < property name = " comment " value = " # auto - generated by ant " / > <nl> - < replaceregexp match = " ^ JNA _ JNI _ VERSION = . * " <nl> - replace = " JNA _ JNI _ VERSION = $ { jni . version } $ { comment } " <nl> - file = " native / Makefile " byline = " true " / > <nl> - < replaceregexp match = " ^ CHECKSUM = . * " <nl> - replace = " CHECKSUM = $ { jni . md5 } $ { comment } " <nl> - file = " native / Makefile " byline = " true " / > <nl> - < ! - - Handle cross - compilation - - > <nl> < condition property = " make . OS " value = " OS = w32ce " > <nl> < equals arg1 = " $ { os . prefix } " arg2 = " w32ce - arm " / > <nl> < / condition > <nl> @ @ - 840 , 7 + 813 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < / condition > <nl> < ! - - ensure ARCH is set properly for 64 - bit capable platforms - - > <nl> < ! - - use ANT _ OPTS = - d64 / - d32 to build 64 - bit / 32 - bit if not the platform default - - > <nl> - < property name = " ARCH " value = " $ { os . arch } " / > <nl> + < property name = " ARCH " value = " $ { build . os . arch } " / > <nl> < condition property = " make . USE _ MSVC " value = " USE _ MSVC = $ { USE _ MSVC } " else = " IGNORE = " > <nl> < isset property = " USE _ MSVC " / > <nl> < / condition > <nl> @ @ - 899 , 24 + 872 , 24 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < ! - - Windows ' drive letters and spaces in absolute paths wreak havoc on <nl> make - - > <nl> < condition property = " make . BUILD " value = " BUILD = . . / $ { build } / $ { native . subdir } " else = " BUILD = $ { build . native } " > <nl> - < os family = " windows " / > <nl> + < equals arg1 = " $ { build . os . family } " arg2 = " windows " / > <nl> < / condition > <nl> < condition property = " make . PATH " value = " PATH = / opt / csw / bin : / usr / sfw / bin : / usr / bin : / usr / ccs / bin " else = " IGNORE = " > <nl> - < os name = " SunOS " / > <nl> + < equals arg1 = " $ { build . os . name } " arg2 = " SunOS " / > <nl> < / condition > <nl> < condition property = " make " value = " / usr / sfw / bin / gmake " > <nl> < and > <nl> - < os name = " SunOS " / > <nl> + < equals arg1 = " $ { build . os . name } " arg2 = " SunOS " / > <nl> < available file = " / usr / sfw / bin / gmake " / > <nl> < / and > <nl> < / condition > <nl> < condition property = " make " value = " gmake " > <nl> < or > <nl> - < os name = " FreeBSD " / > <nl> - < os name = " OpenBSD " / > <nl> - < os name = " NetBSD " / > <nl> - < os name = " SunOS " / > <nl> - < os name = " AIX " / > <nl> + < equals arg1 = " $ { build . os . name } " arg2 = " FreeBSD " / > <nl> + < equals arg1 = " $ { build . os . name } " arg2 = " OpenBSD " / > <nl> + < equals arg1 = " $ { build . os . name } " arg2 = " NetBSD " / > <nl> + < equals arg1 = " $ { build . os . name } " arg2 = " SunOS " / > <nl> + < equals arg1 = " $ { build . os . name } " arg2 = " AIX " / > <nl> < / or > <nl> < / condition > <nl> < ! - - Allow explicit override of make variables - - > <nl> @ @ - 928 , 10 + 901 , 73 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> <nl> < ! - - Default make program - - > <nl> < property name = " make " value = " make " / > <nl> + < / target > <nl> <nl> + < target name = " native - build - package " depends = " javah , - native - api - check , - prepare - native " > <nl> + < echo file = " $ { build } / build . sh " > # ! / bin / sh <nl> + cwd = $ ( pwd ) <nl> + if [ - z " $ JAVA _ HOME " ] ; then <nl> + echo " Please make sure JAVA _ HOME is set " <nl> + exit 1 <nl> + fi <nl> + cd native <nl> + $ { make } \ <nl> + JAVA _ HOME = $ JAVA _ HOME \ <nl> + JAVAH = $ cwd / headers \ <nl> + DEBUG = $ { debug . native } \ <nl> + CFLAGS _ EXTRA = $ { cflags _ extra . native } \ <nl> + DYNAMIC _ LIBFFI = $ { dynlink . native } \ <nl> + $ { make . CC } \ <nl> + $ { make . USE _ MSVC } \ <nl> + BUILD = . . / build \ <nl> + $ { make . SDKROOT } \ <nl> + $ { make . ARCH } \ <nl> + $ { make . PATH } \ <nl> + $ { make . OS } \ <nl> + $ { make . OPTS } \ <nl> + JNA _ JNI _ VERSION = $ { jni . version } \ <nl> + CHECKSUM = $ { jni . md5 } <nl> + cd . . <nl> + cd build <nl> + zip . . / $ { os . prefix } . jar libjnidispatch . so jnidispatch . dll <nl> + cd . . <nl> + < / echo > <nl> + < jar jarfile = " $ { build } / $ { os . prefix } . jar " > <nl> + < manifest > <nl> + < attribute name = " Implementation - Version " value = " $ { jni . version } b $ { jni . build } " / > <nl> + < attribute name = " Specification - Version " value = " $ { jni . version } " / > <nl> + < / manifest > <nl> + < / jar > <nl> + < zip destfile = " $ { build } / build - package - $ { os . prefix } - $ { jni . version } . zip " > <nl> + < zipfileset dir = " native " <nl> + prefix = " build - package - $ { os . prefix } - $ { jni . version } / native " <nl> + > <nl> + < ! - - Exclude generated files from the ZIP - - > <nl> + < exclude name = " libffi / autom4te . cache / * * " / > <nl> + < exclude name = " libffi / Makefile . in " / > <nl> + < exclude name = " libffi / aclocal . m4 " / > <nl> + < exclude name = " libffi / compile " / > <nl> + < exclude name = " libffi / config . guess " / > <nl> + < exclude name = " libffi / config . sub " / > <nl> + < exclude name = " libffi / configure " / > <nl> + < exclude name = " libffi / depcomp " / > <nl> + < exclude name = " libffi / fficonfig . h . in " / > <nl> + < exclude name = " libffi / install - sh " / > <nl> + < exclude name = " libffi / ltmain . sh " / > <nl> + < exclude name = " libffi / mdate - sh " / > <nl> + < exclude name = " libffi / missing " / > <nl> + < / zipfileset > <nl> + < zipfileset dir = " $ { build } " includes = " $ { os . prefix } . jar " prefix = " build - package - $ { os . prefix } - $ { jni . version } " / > <nl> + < zipfileset dir = " $ { build } " includes = " build . sh " prefix = " build - package - $ { os . prefix } - $ { jni . version } " / > <nl> + < zipfileset dir = " build / headers " prefix = " build - package - $ { os . prefix } - $ { jni . version } / headers " / > <nl> + < / zip > <nl> + < / target > <nl> + <nl> + < target name = " native " depends = " - enable - native , javah , - native - api - check , - prepare - native " unless = " - native " <nl> + description = " Build native libraries . Use ' ant - DCC = xxx ' to build using a compiler other than gcc " > <nl> < exec executable = " $ { make } " dir = " $ { native } " failonerror = " true " > <nl> < arg value = " JAVA _ HOME = $ { jdk . home } " / > <nl> - < arg value = " JAVAH = $ { build . native } " / > <nl> + < arg value = " JAVAH = $ { build . headers } " / > <nl> < arg value = " DEBUG = $ { debug . native } " / > <nl> < arg value = " CFLAGS _ EXTRA = $ { cflags _ extra . native } " / > <nl> < arg value = " DYNAMIC _ LIBFFI = $ { dynlink . native } " / > <nl> @ @ - 1132 , 7 + 1168 , 6 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < sysproperty key = " jna . nosys " value = " true " / > <nl> < sysproperty key = " jna . builddir " file = " $ { build } " / > <nl> < sysproperty key = " jna . nativedir " file = " $ { build . native } " / > <nl> - < jvmarg value = " $ { vmopt . arch } " / > <nl> < classpath > < path refid = " test . runpath " / > < / classpath > <nl> < formatter type = " brief " usefile = " false " / > <nl> < formatter type = " xml " / > <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index 6f9ad25 . . 1bea2dc 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 336 , 7 + 336 , 9 @ @ endif <nl> ifeq ( $ ( CC ) , gcc ) <nl> GCC _ MAJOR _ VERSION = $ ( shell gcc - dumpversion | cut - f 1 - d ' . ' ) <nl> ifneq ( $ ( GCC _ MAJOR _ VERSION ) , 4 ) <nl> - 	 LOC _ CC _ OPTS = - Wno - unknown - warning - option - Werror - Wno - clobbered - Wno - unused - variable <nl> + 	 ifneq ( $ ( GCC _ MAJOR _ VERSION ) , 3 ) <nl> + 	 LOC _ CC _ OPTS = - Wno - unknown - warning - option - Werror - Wno - clobbered - Wno - unused - variable <nl> + 	 endif <nl> endif <nl> else <nl> LOC _ CC _ OPTS = - Wno - unknown - warning - option - Werror - Wno - clobbered - Wno - unused - variable <nl> @ @ - 478 , 7 + 480 , 7 @ @ $ ( FFI _ LIB ) : <nl> 	 @ mkdir - p $ ( FFI _ BUILD ) <nl> 	 @ if [ ! - f $ ( FFI _ SRC ) / configure ] ; then \ <nl> 	 echo " Generating configure " ; \ <nl> - 	 ( cd $ ( FFI _ SRC ) ; . / autogen . sh ) ; \ <nl> + 	 ( cd $ ( FFI _ SRC ) ; / bin / sh autogen . sh ) ; \ <nl> 	 fi <nl> 	 @ if [ ! - f $ ( FFI _ BUILD ) / Makefile ] ; then \ <nl> 	 echo " Configuring libffi ( $ ( ARCH ) ) " ; \ <nl> diff - - git a / src / com / sun / jna / Function . java b / src / com / sun / jna / Function . java <nl> index 2d31827 . . 300a982 100644 <nl> - - - a / src / com / sun / jna / Function . java <nl> + + + b / src / com / sun / jna / Function . java <nl> @ @ - 60 , 17 + 60 , 23 @ @ public class Function extends Pointer { <nl> } <nl> <nl> / * * Maximum number of arguments supported by a JNA function call . * / <nl> + @ java . lang . annotation . Native <nl> public static final int MAX _ NARGS = 256 ; <nl> <nl> / * * Standard C calling convention . * / <nl> + @ java . lang . annotation . Native <nl> public static final int C _ CONVENTION = 0 ; <nl> / * * First alternate convention ( currently used only for w32 stdcall ) . * / <nl> + @ java . lang . annotation . Native <nl> public static final int ALT _ CONVENTION = 0x3F ; <nl> <nl> + @ java . lang . annotation . Native <nl> private static final int MASK _ CC = 0x3F ; <nl> / * * Whether to throw an exception if last error is non - zero after call . * / <nl> + @ java . lang . annotation . Native <nl> public static final int THROW _ LAST _ ERROR = 0x40 ; <nl> / * * Mask for number of fixed args ( 1 - 3 ) for varargs calls . * / <nl> + @ java . lang . annotation . Native <nl> public static final int USE _ VARARGS = 0x180 ; <nl> <nl> static final Integer INTEGER _ TRUE = Integer . valueOf ( - 1 ) ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8aac775 . . 0d71935 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 15 , 6 + 15 , 7 @ @ Features <nl> * [ # 797 ] ( https : / / github . com / java - native - access / jna / issues / 797 ) : Binding ` Advapi32 # EnumDependendServices ` , ` Advapi32 # EnumServicesStatusEx ` and ` Advapi32 # QueryServiceStatus ` . ` W32Service # stopService ` was modified to be more resilent when stopping service - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * Bind ` com . sun . jna . platform . win32 . Kernel32 . ExpandEnvironmentStrings ` and add helper method for it as ` Kernel32Util # expandEnvironmentStrings ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 935 ] ( https : / / github . com / java - native - access / jna / pull / 935 ) : Add RegConnectRegistry to Advapi32 mappings . - [ @ cxcorp ] ( https : / / github . com / cxcorp ) . <nl> + * [ # 947 ] ( https : / / github . com / java - native - access / jna / pull / 947 ) : Allow retrieval of ` ACEs ` from ` com . sun . jna . platform . win32 . WinNT . ACL ` even if the contained ` ACE ` is not currently supported - [ @ jrobhoward ] ( https : / / github . com / jrobhoward ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> @ @ - 84 , 6 + 85 , 14 @ @ Breaking Changes <nl> was changed from ` PointerByReference ` to ` STRRET ` and matching this , <nl> the first parameter of ` com . sun . jna . platform . win32 . Shlwapi . StrRetToStr ` was <nl> changed identically . <nl> + * ` ACE _ HEADER ` replaces ` ACEStructure ` as the base class for ` ACEs ` . <nl> + ` com . sun . jna . platform . win32 . WinNT . ACL ` was modified to support ACLS , that contain <nl> + ` ACEs ` other than ` ACCESS _ ALLOWED _ ACE _ TYPE ` and ` ACCESS _ DENIED _ ACE _ TYPE ` by <nl> + widening the return type of ` getACEStructures ` to ` ACE _ HEADER [ ] ` and renaming <nl> + the method to ` getACEs ` . In <nl> + consequence ` com . sun . jna . platform . win32 . Advapi32Util # getFileSecurity ` was <nl> + changed similarly . The SID accessors ` getSidString ` and ` getSID ` were moved <nl> + from ` ACEStructure ` to ` ACCESS _ ACEStructure ` . <nl> <nl> Release 4 . 5 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> index afa5985 . . 2c4eff7 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 72 , 6 + 72 , 7 @ @ import com . sun . jna . platform . win32 . WinDef . ULONG ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONGByReference ; <nl> import com . sun . jna . platform . win32 . WinNT . ACCESS _ ACEStructure ; <nl> import com . sun . jna . platform . win32 . WinNT . ACCESS _ ALLOWED _ ACE ; <nl> + import com . sun . jna . platform . win32 . WinNT . ACE _ HEADER ; <nl> import com . sun . jna . platform . win32 . WinNT . ACL ; <nl> import com . sun . jna . platform . win32 . WinNT . EVENTLOGRECORD ; <nl> import com . sun . jna . platform . win32 . WinNT . GENERIC _ MAPPING ; <nl> @ @ - 91 , 6 + 92 , 7 @ @ import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . LongByReference ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> import com . sun . jna . win32 . W32APITypeMapper ; <nl> + import java . util . List ; <nl> <nl> / * * <nl> * Advapi32 utility API . <nl> @ @ - 2200 , 7 + 2202 , 12 @ @ public abstract class Advapi32Util { <nl> 	 	 } <nl> 	 } <nl> <nl> - 	 public static ACCESS _ ACEStructure [ ] getFileSecurity ( String fileName , <nl> + / * * <nl> + * @ param fileName path to the file <nl> + * @ param compact if true compatible ACEs are merged if possible <nl> + * @ return <nl> + * / <nl> + 	 public static ACE _ HEADER [ ] getFileSecurity ( String fileName , <nl> 	 	 	 boolean compact ) { <nl> 	 	 int infoType = WinNT . DACL _ SECURITY _ INFORMATION ; <nl> 	 	 int nLength = 1024 ; <nl> @ @ - 2231 , 29 + 2238 , 35 @ @ public abstract class Advapi32Util { <nl> <nl> 	 	 SECURITY _ DESCRIPTOR _ RELATIVE sdr = new WinNT . SECURITY _ DESCRIPTOR _ RELATIVE ( <nl> 	 	 	 	 memory ) ; <nl> - 	 	 memory . clear ( ) ; <nl> 	 	 ACL dacl = sdr . getDiscretionaryACL ( ) ; <nl> - 	 	 ACCESS _ ACEStructure [ ] aceStructures = dacl . getACEStructures ( ) ; <nl> + 	 	 ACE _ HEADER [ ] aceStructures = dacl . getACEs ( ) ; <nl> <nl> 	 	 if ( compact ) { <nl> + List < ACE _ HEADER > result = new ArrayList < ACE _ HEADER > ( ) ; <nl> 	 	 	 Map < String , ACCESS _ ACEStructure > aceMap = new HashMap < String , ACCESS _ ACEStructure > ( ) ; <nl> - 	 	 	 for ( ACCESS _ ACEStructure aceStructure : aceStructures ) { <nl> - 	 	 	 	 boolean inherted = ( ( aceStructure . AceFlags & WinNT . VALID _ INHERIT _ FLAGS ) ! = 0 ) ; <nl> - 	 	 	 	 String key = aceStructure . getSidString ( ) + " / " + inherted + " / " <nl> - 	 	 	 	 	 	 + aceStructure . getClass ( ) . getName ( ) ; <nl> - 	 	 	 	 ACCESS _ ACEStructure aceStructure2 = aceMap . get ( key ) ; <nl> - 	 	 	 	 if ( aceStructure2 ! = null ) { <nl> - 	 	 	 	 	 int accessMask = aceStructure2 . Mask ; <nl> - 	 	 	 	 	 accessMask = accessMask | aceStructure . Mask ; <nl> - 	 	 	 	 	 aceStructure2 . Mask = accessMask ; <nl> - 	 	 	 	 } else { <nl> - 	 	 	 	 	 aceMap . put ( key , aceStructure ) ; <nl> - 	 	 	 	 } <nl> + 	 	 	 for ( ACE _ HEADER aceStructure : aceStructures ) { <nl> + if ( aceStructure instanceof ACCESS _ ACEStructure ) { <nl> + ACCESS _ ACEStructure accessACEStructure = ( ACCESS _ ACEStructure ) aceStructure ; <nl> + boolean inherted = ( ( aceStructure . AceFlags & WinNT . VALID _ INHERIT _ FLAGS ) ! = 0 ) ; <nl> + String key = accessACEStructure . getSidString ( ) + " / " + inherted + " / " <nl> + + aceStructure . getClass ( ) . getName ( ) ; <nl> + ACCESS _ ACEStructure aceStructure2 = aceMap . get ( key ) ; <nl> + if ( aceStructure2 ! = null ) { <nl> + int accessMask = aceStructure2 . Mask ; <nl> + accessMask = accessMask | accessACEStructure . Mask ; <nl> + aceStructure2 . Mask = accessMask ; <nl> + } else { <nl> + aceMap . put ( key , accessACEStructure ) ; <nl> + result . add ( aceStructure2 ) ; <nl> + } <nl> + } else { <nl> + result . add ( aceStructure ) ; <nl> + } <nl> 	 	 	 } <nl> - 	 	 	 return aceMap . values ( ) . toArray ( <nl> - 	 	 	 	 	 new ACCESS _ ACEStructure [ aceMap . size ( ) ] ) ; <nl> + 	 	 	 return result . toArray ( new ACE _ HEADER [ result . size ( ) ] ) ; <nl> 	 	 } <nl> - 	 	 return aceStructures ; <nl> + <nl> + return aceStructures ; <nl> 	 } <nl> <nl> public static enum AccessCheckPermission { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index fbfb929 . . 658240e 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 2568 , 40 + 2568 , 36 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> read ( ) ; <nl> } <nl> <nl> - public ACCESS _ ACEStructure [ ] getACEStructures ( ) { <nl> - return getACEStructures ( false ) ; <nl> - } <nl> - <nl> - public ACCESS _ ACEStructure [ ] getACEStructures ( boolean tolerateUnknownAceTypes ) { <nl> - final List < ACCESS _ ACEStructure > ACEs = new ArrayList < ACCESS _ ACEStructure > ( AceCount ) ; <nl> + / * * <nl> + * Extract the contained ACEs from the ACL . <nl> + * <nl> + * < p > ACE types as decoded to their native JNA counterparts . ACE types , <nl> + * that are currently unsupported by JNA are returned as <nl> + * { @ link WinNT . ACE _ HEADER } objects . < / p > <nl> + * <nl> + * @ return array holding the contained ACEs <nl> + * / <nl> + public ACE _ HEADER [ ] getACEs ( ) { <nl> + ACE _ HEADER [ ] ACEs = new ACE _ HEADER [ AceCount ] ; <nl> final Pointer pointer = this . getPointer ( ) ; <nl> int offset = size ( ) ; <nl> for ( int i = 0 ; i < AceCount ; i + + ) { <nl> final Pointer share = pointer . share ( offset ) ; <nl> final byte aceType = share . getByte ( 0 ) ; / / ACE _ HEADER . AceType <nl> - final short aceSize ; <nl> switch ( aceType ) { <nl> case ACCESS _ ALLOWED _ ACE _ TYPE : <nl> - final ACCESS _ ALLOWED _ ACE allowedAce = new ACCESS _ ALLOWED _ ACE ( share ) ; <nl> - aceSize = allowedAce . AceSize ; <nl> - ACEs . add ( allowedAce ) ; <nl> + ACEs [ i ] = new ACCESS _ ALLOWED _ ACE ( share ) ; <nl> break ; <nl> case ACCESS _ DENIED _ ACE _ TYPE : <nl> - final ACCESS _ DENIED _ ACE deniedAce = new ACCESS _ DENIED _ ACE ( share ) ; <nl> - aceSize = deniedAce . AceSize ; <nl> - ACEs . add ( deniedAce ) ; <nl> + ACEs [ i ] = new ACCESS _ DENIED _ ACE ( share ) ; <nl> break ; <nl> default : <nl> - if ( ! tolerateUnknownAceTypes ) { <nl> - throw new IllegalStateException ( " Unknown ACE type " + aceType ) ; <nl> - } <nl> - final ACE _ HEADER aceHeader = new ACE _ HEADER ( share ) ; <nl> - aceSize = aceHeader . AceSize ; <nl> + ACEs [ i ] = new ACE _ HEADER ( share ) ; <nl> break ; <nl> } <nl> - offset + = aceSize ; <nl> + offset + = ACEs [ i ] . AceSize ; <nl> } <nl> - return ACEs . toArray ( new ACCESS _ ACEStructure [ ACEs . size ( ) ] ) ; <nl> + return ACEs ; <nl> } <nl> <nl> @ Override <nl> @ @ - 2712 , 63 + 2708 , 41 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> } <nl> } <nl> <nl> - public static abstract class ACEStructure extends Structure { <nl> + public static class ACE _ HEADER extends Structure { <nl> public static final List < String > FIELDS = createFieldsOrder ( " AceType " , " AceFlags " , " AceSize " ) ; <nl> <nl> public byte AceType ; <nl> public byte AceFlags ; <nl> public short AceSize ; <nl> <nl> - PSID psid ; <nl> - <nl> - public ACEStructure ( ) { <nl> + public ACE _ HEADER ( ) { <nl> super ( ) ; <nl> } <nl> <nl> - public ACEStructure ( Pointer p ) { <nl> + public ACE _ HEADER ( Pointer p ) { <nl> super ( p ) ; <nl> + read ( ) ; <nl> } <nl> <nl> - public ACEStructure ( byte AceType , byte AceFlags , short AceSize , PSID psid ) { <nl> + public ACE _ HEADER ( byte AceType , byte AceFlags , short AceSize ) { <nl> super ( ) ; <nl> this . AceType = AceType ; <nl> this . AceFlags = AceFlags ; <nl> this . AceSize = AceSize ; <nl> - this . psid = psid ; <nl> write ( ) ; <nl> } <nl> <nl> - public String getSidString ( ) { <nl> - return Advapi32Util . convertSidToStringSid ( psid ) ; <nl> - } <nl> - <nl> - public PSID getSID ( ) { <nl> - return psid ; <nl> - } <nl> - <nl> @ Override <nl> protected List < String > getFieldOrder ( ) { <nl> return FIELDS ; <nl> } <nl> } <nl> - <nl> - / * ACE header * / <nl> - public static class ACE _ HEADER extends ACEStructure { <nl> - public ACE _ HEADER ( ) { <nl> - super ( ) ; <nl> - } <nl> - <nl> - public ACE _ HEADER ( Pointer p ) { <nl> - super ( p ) ; <nl> - read ( ) ; <nl> - } <nl> - } <nl> - <nl> + <nl> / * * <nl> * ACCESS _ ALLOWED _ ACE and ACCESS _ DENIED _ ACE have the same structure layout <nl> * / <nl> - public static abstract class ACCESS _ ACEStructure extends ACEStructure { <nl> - public static final List < String > FIELDS = createFieldsOrder ( ACEStructure . FIELDS , " Mask " , " SidStart " ) ; <nl> + public static abstract class ACCESS _ ACEStructure extends ACE _ HEADER { <nl> + public static final List < String > FIELDS = createFieldsOrder ( ACE _ HEADER . FIELDS , " Mask " , " SidStart " ) ; <nl> <nl> public int Mask ; <nl> / * * <nl> @ @ - 2777 , 6 + 2751 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> * / <nl> public byte [ ] SidStart = new byte [ 4 ] ; <nl> <nl> + PSID psid ; <nl> + <nl> public ACCESS _ ACEStructure ( ) { <nl> super ( ) ; <nl> } <nl> @ @ - 2799 , 6 + 2775 , 14 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> read ( ) ; <nl> } <nl> <nl> + public String getSidString ( ) { <nl> + return Advapi32Util . convertSidToStringSid ( psid ) ; <nl> + } <nl> + <nl> + public PSID getSID ( ) { <nl> + return psid ; <nl> + } <nl> + <nl> / * * <nl> * Write override due to psid not being a managed field <nl> * /
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Factory . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Factory . java <nl> index f65da63 . . f2c1c9a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Factory . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Factory . java <nl> @ @ - 177 , 10 + 177 , 12 @ @ public class Factory extends ObjectFactory { <nl> } catch ( ExecutionException ex ) { <nl> Throwable cause = ex . getCause ( ) ; <nl> if ( cause instanceof RuntimeException ) { <nl> + appendStacktrace ( ex , cause ) ; <nl> throw ( RuntimeException ) cause ; <nl> } else if ( cause instanceof InvocationTargetException ) { <nl> cause = ( ( InvocationTargetException ) cause ) . getTargetException ( ) ; <nl> if ( cause instanceof RuntimeException ) { <nl> + appendStacktrace ( ex , cause ) ; <nl> throw ( RuntimeException ) cause ; <nl> } <nl> } <nl> @ @ - 188 , 6 + 190 , 19 @ @ public class Factory extends ObjectFactory { <nl> } <nl> } <nl> <nl> + / * * <nl> + * Append the stack trace available via caughtException to the stack trace <nl> + * of toBeThrown . The combined stack trace is reassigned to toBeThrown <nl> + * / <nl> + private static void appendStacktrace ( Exception caughtException , Throwable toBeThrown ) { <nl> + StackTraceElement [ ] upperTrace = caughtException . getStackTrace ( ) ; <nl> + StackTraceElement [ ] lowerTrace = toBeThrown . getStackTrace ( ) ; <nl> + StackTraceElement [ ] trace = new StackTraceElement [ upperTrace . length + lowerTrace . length ] ; <nl> + System . arraycopy ( upperTrace , 0 , trace , lowerTrace . length , upperTrace . length ) ; <nl> + System . arraycopy ( lowerTrace , 0 , trace , 0 , lowerTrace . length ) ; <nl> + toBeThrown . setStackTrace ( trace ) ; <nl> + } <nl> + <nl> public ComThread getComThread ( ) { <nl> return comThread ; <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectFactory _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectFactory _ Test . java <nl> index 4c66f4d . . d543bc7 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectFactory _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectFactory _ Test . java <nl> @ @ - 154 , 8 + 154 , 17 @ @ public class ProxyObjectFactory _ Test { <nl> assertNotNull ( " fetchObject on a non - running Object must raise an exception " , exceptionRaised ) ; <nl> assertEquals ( " Unexpected error code " , exceptionRaised . getHresult ( ) . intValue ( ) , WinError . MK _ E _ UNAVAILABLE ) ; <nl> assertTrue ( " Error code not matched " , exceptionRaised . matchesErrorCode ( WinError . MK _ E _ UNAVAILABLE ) ) ; <nl> + boolean callingMethodPartOfStackTrace = false ; <nl> + for ( StackTraceElement ste : exceptionRaised . getStackTrace ( ) ) { <nl> + if ( " testFetchNotExistingObject " . equals ( ste . getMethodName ( ) ) <nl> + & & getClass ( ) . getName ( ) . equals ( ste . getClassName ( ) ) ) { <nl> + callingMethodPartOfStackTrace = true ; <nl> + break ; <nl> + } <nl> + } <nl> + assertTrue ( " The calling method must be part of the reported stack trace " , callingMethodPartOfStackTrace ) ; <nl> } <nl> - <nl> + <nl> 	 @ Test <nl> 	 public void equals ( ) { <nl> 	 	 MsWordApp comObj1 = this . factory . createObject ( MsWordApp . class ) ; <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectObjectFactory _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectObjectFactory _ Test . java <nl> index 3bb5106 . . f1753a0 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectObjectFactory _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectObjectFactory _ Test . java <nl> @ @ - 158 , 6 + 158 , 15 @ @ public class ProxyObjectObjectFactory _ Test { <nl> assertNotNull ( " fetchObject on a non - running Object must raise an exception " , exceptionRaised ) ; <nl> assertEquals ( " Unexpected error code " , exceptionRaised . getHresult ( ) . intValue ( ) , WinError . MK _ E _ UNAVAILABLE ) ; <nl> assertTrue ( " Error code not matched " , exceptionRaised . matchesErrorCode ( WinError . MK _ E _ UNAVAILABLE ) ) ; <nl> + boolean callingMethodPartOfStackTrace = false ; <nl> + for ( StackTraceElement ste : exceptionRaised . getStackTrace ( ) ) { <nl> + if ( " testFetchNotExistingObject " . equals ( ste . getMethodName ( ) ) <nl> + & & getClass ( ) . getName ( ) . equals ( ste . getClassName ( ) ) ) { <nl> + callingMethodPartOfStackTrace = true ; <nl> + break ; <nl> + } <nl> + } <nl> + assertTrue ( " The calling method must be part of the reported stack trace " , callingMethodPartOfStackTrace ) ; <nl> } <nl> <nl> 	 @ Test
diff - - git a / CHANGES . md b / CHANGES . md <nl> index a4dec9f . . 6af79b9 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 27 , 6 + 27 , 7 @ @ Bug Fixes <nl> * [ # 887 ] ( https : / / github . com / java - native - access / jna / issues / 887 ) : MacFileUtils . moveToTrash ( ) doesn ' t work in a sandboxed app fix suggested by [ @ sobakasu ] ( https : / / github . com / sobakasu ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 894 ] ( https : / / github . com / java - native - access / jna / issues / 894 ) : NullPointerException can be caused by calling ` com . sun . jna . platform . win32 . COM . util . ProxyObject # dispose ` multiple times - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 925 ] ( https : / / github . com / java - native - access / jna / issues / 925 ) : Optimize ` Structure # validate ` and prevent ` ArrayIndexOutOfBoundsException ` in ` SAFEARRAY # read ` for zero dimensions - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 340 ] ( https : / / github . com / java - native - access / jna / issues / 340 ) : Guard registry handling against out - of - bounds reads by ensuring all read strings are NULL terminated - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Breaking Changes <nl> - - - - - - - - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> index 9462087 . . f9905a8 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> @ @ - 976 , 11 + 976 , 20 @ @ public interface Advapi32 extends StdCallLibrary { <nl> * defined in Winerror . h . <nl> * / <nl> int RegSetValueEx ( HKEY hKey , String lpValueName , int Reserved , <nl> + int dwType , Pointer lpData , int cbData ) ; <nl> + <nl> + / * * <nl> + * See { @ link # RegSetValueEx ( com . sun . jna . platform . win32 . WinReg . HKEY , java . lang . String , int , int , com . sun . jna . Pointer , int ) } <nl> + * / <nl> + int RegSetValueEx ( HKEY hKey , String lpValueName , int Reserved , <nl> int dwType , char [ ] lpData , int cbData ) ; <nl> <nl> + / * * <nl> + * See { @ link # RegSetValueEx ( com . sun . jna . platform . win32 . WinReg . HKEY , java . lang . String , int , int , com . sun . jna . Pointer , int ) } <nl> + * / <nl> int RegSetValueEx ( HKEY hKey , String lpValueName , int Reserved , <nl> int dwType , byte [ ] lpData , int cbData ) ; <nl> - <nl> + <nl> / * * <nl> * <nl> * @ param hKey registry key <nl> @ @ - 1103 , 6 + 1112 , 13 @ @ public interface Advapi32 extends StdCallLibrary { <nl> * / <nl> int RegEnumValue ( HKEY hKey , int dwIndex , char [ ] lpValueName , <nl> IntByReference lpcchValueName , IntByReference reserved , <nl> + IntByReference lpType , Pointer lpData , IntByReference lpcbData ) ; <nl> + <nl> + / * * <nl> + * See { @ link # RegEnumValue ( com . sun . jna . platform . win32 . WinReg . HKEY , int , char [ ] , com . sun . jna . ptr . IntByReference , com . sun . jna . ptr . IntByReference , com . sun . jna . ptr . IntByReference , com . sun . jna . Pointer , com . sun . jna . ptr . IntByReference ) } . <nl> + * / <nl> + int RegEnumValue ( HKEY hKey , int dwIndex , char [ ] lpValueName , <nl> + IntByReference lpcchValueName , IntByReference reserved , <nl> IntByReference lpType , byte [ ] lpData , IntByReference lpcbData ) ; <nl> <nl> / * * <nl> @ @ - 1295 , 9 + 1311 , 16 @ @ public interface Advapi32 extends StdCallLibrary { <nl> * @ return status <nl> * / <nl> int RegGetValue ( HKEY hkey , String lpSubKey , String lpValue , <nl> + int dwFlags , IntByReference pdwType , Pointer pvData , <nl> + IntByReference pcbData ) ; <nl> + <nl> + / * * <nl> + * See { @ link # RegGetValue ( com . sun . jna . platform . win32 . WinReg . HKEY , java . lang . String , java . lang . String , int , com . sun . jna . ptr . IntByReference , com . sun . jna . Pointer , com . sun . jna . ptr . IntByReference ) } . <nl> + * / <nl> + int RegGetValue ( HKEY hkey , String lpSubKey , String lpValue , <nl> int dwFlags , IntByReference pdwType , byte [ ] pvData , <nl> IntByReference pcbData ) ; <nl> - <nl> + <nl> / * * <nl> * Retrieves a registered handle to the specified event log . <nl> * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> index 4640757 . . afa5985 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 90 , 7 + 90 , 7 @ @ import com . sun . jna . platform . win32 . WinReg . HKEYByReference ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . LongByReference ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> - <nl> + import com . sun . jna . win32 . W32APITypeMapper ; <nl> <nl> / * * <nl> * Advapi32 utility API . <nl> @ @ - 607 , 7 + 607 , 7 @ @ public abstract class Advapi32Util { <nl> 	 	 	 IntByReference lpcbData = new IntByReference ( ) ; <nl> 	 	 	 IntByReference lpType = new IntByReference ( ) ; <nl> 	 	 	 rc = Advapi32 . INSTANCE . RegQueryValueEx ( phkKey . getValue ( ) , value , 0 , <nl> - 	 	 	 	 	 lpType , ( char [ ] ) null , lpcbData ) ; <nl> + 	 	 	 	 	 lpType , ( Pointer ) null , lpcbData ) ; <nl> 	 	 	 switch ( rc ) { <nl> 	 	 	 case W32Errors . ERROR _ SUCCESS : <nl> 	 	 	 case W32Errors . ERROR _ MORE _ DATA : <nl> @ @ - 670 , 7 + 670 , 7 @ @ public abstract class Advapi32Util { <nl> 	 	 IntByReference lpcbData = new IntByReference ( ) ; <nl> 	 	 IntByReference lpType = new IntByReference ( ) ; <nl> 	 	 int rc = Advapi32 . INSTANCE . RegQueryValueEx ( hKey , value , 0 , <nl> - 	 	 	 	 lpType , ( char [ ] ) null , lpcbData ) ; <nl> + 	 	 	 	 lpType , ( Pointer ) null , lpcbData ) ; <nl> 	 	 if ( rc ! = W32Errors . ERROR _ SUCCESS <nl> 	 	 	 	 & & rc ! = W32Errors . ERROR _ INSUFFICIENT _ BUFFER ) { <nl> 	 	 	 throw new Win32Exception ( rc ) ; <nl> @ @ - 681 , 14 + 681 , 23 @ @ public abstract class Advapi32Util { <nl> 	 	 	 	 	 + lpType . getValue ( ) <nl> 	 	 	 	 	 + " , expected REG _ SZ or REG _ EXPAND _ SZ " ) ; <nl> 	 	 } <nl> - 	 	 char [ ] data = new char [ lpcbData . getValue ( ) ] ; <nl> + if ( lpcbData . getValue ( ) = = 0 ) { <nl> + return " " ; <nl> + } <nl> + / / See comment in # registryGetValue <nl> + Memory mem = new Memory ( lpcbData . getValue ( ) + Native . WCHAR _ SIZE ) ; <nl> + mem . clear ( ) ; <nl> 	 	 rc = Advapi32 . INSTANCE . RegQueryValueEx ( hKey , value , 0 , <nl> - 	 	 	 	 lpType , data , lpcbData ) ; <nl> + 	 	 	 	 lpType , mem , lpcbData ) ; <nl> 	 	 if ( rc ! = W32Errors . ERROR _ SUCCESS <nl> 	 	 	 	 & & rc ! = W32Errors . ERROR _ INSUFFICIENT _ BUFFER ) { <nl> 	 	 	 throw new Win32Exception ( rc ) ; <nl> 	 	 } <nl> - 	 	 return Native . toString ( data ) ; <nl> + if ( W32APITypeMapper . DEFAULT = = W32APITypeMapper . UNICODE ) { <nl> + return mem . getWideString ( 0 ) ; <nl> + } else { <nl> + return mem . getString ( 0 ) ; <nl> + } <nl> 	 } <nl> <nl> 	 / * * <nl> @ @ - 742 , 14 + 751 , 23 @ @ public abstract class Advapi32Util { <nl> 	 	 	 throw new RuntimeException ( " Unexpected registry type " <nl> 	 	 	 	 	 + lpType . getValue ( ) + " , expected REG _ SZ " ) ; <nl> 	 	 } <nl> - 	 	 char [ ] data = new char [ lpcbData . getValue ( ) ] ; <nl> + if ( lpcbData . getValue ( ) = = 0 ) { <nl> + return " " ; <nl> + } <nl> + / / See comment in # registryGetValue <nl> + Memory mem = new Memory ( lpcbData . getValue ( ) + Native . WCHAR _ SIZE ) ; <nl> + mem . clear ( ) ; <nl> 	 	 rc = Advapi32 . INSTANCE . RegQueryValueEx ( hKey , value , 0 , <nl> - 	 	 	 	 lpType , data , lpcbData ) ; <nl> + 	 	 	 	 lpType , mem , lpcbData ) ; <nl> 	 	 if ( rc ! = W32Errors . ERROR _ SUCCESS <nl> 	 	 	 	 & & rc ! = W32Errors . ERROR _ INSUFFICIENT _ BUFFER ) { <nl> 	 	 	 throw new Win32Exception ( rc ) ; <nl> 	 	 } <nl> - 	 	 return Native . toString ( data ) ; <nl> + if ( W32APITypeMapper . DEFAULT = = W32APITypeMapper . UNICODE ) { <nl> + return mem . getWideString ( 0 ) ; <nl> + } else { <nl> + return mem . getString ( 0 ) ; <nl> + } <nl> 	 } <nl> <nl> 	 / * * <nl> @ @ - 803 , 7 + 821 , 10 @ @ public abstract class Advapi32Util { <nl> 	 	 	 throw new RuntimeException ( " Unexpected registry type " <nl> 	 	 	 	 	 + lpType . getValue ( ) + " , expected REG _ SZ " ) ; <nl> 	 	 } <nl> - 	 	 Memory data = new Memory ( lpcbData . getValue ( ) ) ; <nl> + / / Allocate enougth memroy to hold value and ensure terminating <nl> + / / double NULL chars are present <nl> + 	 	 Memory data = new Memory ( lpcbData . getValue ( ) + 2 * Native . WCHAR _ SIZE ) ; <nl> + data . clear ( ) ; <nl> 	 	 rc = Advapi32 . INSTANCE . RegQueryValueEx ( hKey , value , 0 , <nl> 	 	 	 	 lpType , data , lpcbData ) ; <nl> 	 	 if ( rc ! = W32Errors . ERROR _ SUCCESS <nl> @ @ - 813 , 16 + 834 , 27 @ @ public abstract class Advapi32Util { <nl> 	 	 ArrayList < String > result = new ArrayList < String > ( ) ; <nl> 	 	 int offset = 0 ; <nl> 	 	 while ( offset < data . size ( ) ) { <nl> - 	 	 	 String s = data . getWideString ( offset ) ; <nl> - 	 	 	 offset + = s . length ( ) * Native . WCHAR _ SIZE ; <nl> - 	 	 	 offset + = Native . WCHAR _ SIZE ; <nl> - 	 	 	 if ( s . length ( ) = = 0 & & offset = = data . size ( ) ) { <nl> - 	 	 	 	 / / skip the final NULL <nl> + 	 	 	 String s ; <nl> + if ( W32APITypeMapper . DEFAULT = = W32APITypeMapper . UNICODE ) { <nl> + s = data . getWideString ( offset ) ; <nl> + offset + = s . length ( ) * Native . WCHAR _ SIZE ; <nl> + offset + = Native . WCHAR _ SIZE ; <nl> + } else { <nl> + s = data . getString ( offset ) ; <nl> + offset + = s . length ( ) ; <nl> + offset + = 1 ; <nl> + } <nl> + <nl> + 	 	 	 if ( s . length ( ) = = 0 ) { <nl> + / / A sequence of null - terminated strings , <nl> + / / terminated by an empty string ( \ 0 ) . <nl> + / / = > The first empty string terminates the <nl> + 	 	 	 	 break ; <nl> 	 	 	 } else { <nl> 	 	 	 	 result . add ( s ) ; <nl> 	 	 	 } <nl> 	 	 } <nl> - 	 	 return result . toArray ( new String [ 0 ] ) ; <nl> + 	 	 return result . toArray ( new String [ result . size ( ) ] ) ; <nl> 	 } <nl> <nl> 	 / * * <nl> @ @ - 867 , 7 + 899 , 7 @ @ public abstract class Advapi32Util { <nl> 	 	 IntByReference lpcbData = new IntByReference ( ) ; <nl> 	 	 IntByReference lpType = new IntByReference ( ) ; <nl> 	 	 int rc = Advapi32 . INSTANCE . RegQueryValueEx ( hKey , value , 0 , <nl> - 	 	 	 	 lpType , ( char [ ] ) null , lpcbData ) ; <nl> + 	 	 	 	 lpType , ( Pointer ) null , lpcbData ) ; <nl> 	 	 if ( rc ! = W32Errors . ERROR _ SUCCESS <nl> 	 	 	 	 & & rc ! = W32Errors . ERROR _ INSUFFICIENT _ BUFFER ) { <nl> 	 	 	 throw new Win32Exception ( rc ) ; <nl> @ @ - 1022 , 11 + 1054 , 10 @ @ public abstract class Advapi32Util { <nl> 	 	 	 String lpValueName ) { <nl> 	 	 Object result = null ; <nl> 	 	 IntByReference lpType = new IntByReference ( ) ; <nl> - 	 	 byte [ ] lpData = new byte [ Advapi32 . MAX _ VALUE _ NAME ] ; <nl> - 	 	 IntByReference lpcbData = new IntByReference ( Advapi32 . MAX _ VALUE _ NAME ) ; <nl> + 	 	 IntByReference lpcbData = new IntByReference ( ) ; <nl> <nl> 	 	 int rc = Advapi32 . INSTANCE . RegGetValue ( hkKey , subKey , lpValueName , <nl> - 	 	 	 	 Advapi32 . RRF _ RT _ ANY , lpType , lpData , lpcbData ) ; <nl> + 	 	 	 	 Advapi32 . RRF _ RT _ ANY , lpType , ( Pointer ) null , lpcbData ) ; <nl> <nl> 	 	 / / if lpType = = 0 then the value is empty ( REG _ NONE ) ! <nl> 	 	 if ( lpType . getValue ( ) = = WinNT . REG _ NONE ) <nl> @ @ - 1037 , 18 + 1068 , 33 @ @ public abstract class Advapi32Util { <nl> 	 	 	 throw new Win32Exception ( rc ) ; <nl> 	 	 } <nl> <nl> - 	 	 Memory byteData = new Memory ( lpcbData . getValue ( ) ) ; <nl> - 	 	 byteData . write ( 0 , lpData , 0 , lpcbData . getValue ( ) ) ; <nl> - <nl> + / / Buffer is intentionally allocated larger than <nl> + / / indicated , as function adds terminating NULL char , if it is <nl> + / / missing . WCHAR _ SIZE is added , as returning string can be <nl> + / / char [ ] or wchar [ ] depending on w32 . ascii <nl> + 	 	 Memory byteData = new Memory ( lpcbData . getValue ( ) + Native . WCHAR _ SIZE ) ; <nl> + byteData . clear ( ) ; <nl> + <nl> + 	 	 rc = Advapi32 . INSTANCE . RegGetValue ( hkKey , subKey , lpValueName , <nl> + 	 	 	 	 Advapi32 . RRF _ RT _ ANY , lpType , byteData , lpcbData ) ; <nl> + <nl> + if ( rc ! = W32Errors . ERROR _ SUCCESS ) { <nl> + throw new Win32Exception ( rc ) ; <nl> + } <nl> + <nl> 	 	 if ( lpType . getValue ( ) = = WinNT . REG _ DWORD ) { <nl> - 	 	 	 result = Integer . valueOf ( byteData . getInt ( 0 ) ) ; <nl> + 	 	 	 result = byteData . getInt ( 0 ) ; <nl> 	 	 } else if ( lpType . getValue ( ) = = WinNT . REG _ QWORD ) { <nl> - 	 	 	 result = Long . valueOf ( byteData . getLong ( 0 ) ) ; <nl> + 	 	 	 result = byteData . getLong ( 0 ) ; <nl> 	 	 } else if ( lpType . getValue ( ) = = WinNT . REG _ BINARY ) { <nl> 	 	 	 result = byteData . getByteArray ( 0 , lpcbData . getValue ( ) ) ; <nl> 	 	 } else if ( ( lpType . getValue ( ) = = WinNT . REG _ SZ ) <nl> 	 	 	 	 | | ( lpType . getValue ( ) = = WinNT . REG _ EXPAND _ SZ ) ) { <nl> - 	 	 	 result = byteData . getWideString ( 0 ) ; <nl> + if ( W32APITypeMapper . DEFAULT = = W32APITypeMapper . UNICODE ) { <nl> + result = byteData . getWideString ( 0 ) ; <nl> + } else { <nl> + result = byteData . getString ( 0 ) ; <nl> + } <nl> 	 	 } <nl> <nl> 	 	 return result ; <nl> @ @ - 1230 , 9 + 1276 , 19 @ @ public abstract class Advapi32Util { <nl> 	 * / <nl> 	 public static void registrySetStringValue ( HKEY hKey , String name , <nl> 	 	 	 String value ) { <nl> - 	 	 char [ ] data = Native . toCharArray ( value ) ; <nl> + if ( value = = null ) { <nl> + value = " " ; <nl> + } <nl> + Memory data ; <nl> + if ( W32APITypeMapper . DEFAULT = = W32APITypeMapper . UNICODE ) { <nl> + data = new Memory ( ( value . length ( ) + 1 ) * Native . WCHAR _ SIZE ) ; <nl> + data . setWideString ( 0 , value ) ; <nl> + } else { <nl> + data = new Memory ( ( value . length ( ) + 1 ) ) ; <nl> + data . setString ( 0 , value ) ; <nl> + } <nl> 	 	 int rc = Advapi32 . INSTANCE . RegSetValueEx ( hKey , name , 0 , WinNT . REG _ SZ , <nl> - 	 	 	 	 data , data . length * Native . WCHAR _ SIZE ) ; <nl> + 	 	 	 	 data , ( int ) data . size ( ) ) ; <nl> 	 	 if ( rc ! = W32Errors . ERROR _ SUCCESS ) { <nl> 	 	 	 throw new Win32Exception ( rc ) ; <nl> 	 	 } <nl> @ @ - 1280 , 9 + 1336 , 16 @ @ public abstract class Advapi32Util { <nl> 	 * / <nl> 	 public static void registrySetExpandableStringValue ( HKEY hKey , String name , <nl> 	 	 	 String value ) { <nl> - 	 	 char [ ] data = Native . toCharArray ( value ) ; <nl> + Memory data ; <nl> + if ( W32APITypeMapper . DEFAULT = = W32APITypeMapper . UNICODE ) { <nl> + data = new Memory ( ( value . length ( ) + 1 ) * Native . WCHAR _ SIZE ) ; <nl> + data . setWideString ( 0 , value ) ; <nl> + } else { <nl> + data = new Memory ( ( value . length ( ) + 1 ) ) ; <nl> + data . setString ( 0 , value ) ; <nl> + } <nl> 	 	 int rc = Advapi32 . INSTANCE . RegSetValueEx ( hKey , name , 0 , <nl> - 	 	 	 	 WinNT . REG _ EXPAND _ SZ , data , data . length * Native . WCHAR _ SIZE ) ; <nl> + 	 	 	 	 WinNT . REG _ EXPAND _ SZ , data , ( int ) data . size ( ) ) ; <nl> 	 	 if ( rc ! = W32Errors . ERROR _ SUCCESS ) { <nl> 	 	 	 throw new Win32Exception ( rc ) ; <nl> 	 	 } <nl> @ @ - 1330 , 26 + 1393 , 31 @ @ public abstract class Advapi32Util { <nl> 	 * / <nl> 	 public static void registrySetStringArray ( HKEY hKey , String name , <nl> 	 	 	 String [ ] arr ) { <nl> + <nl> + int charwidth = W32APITypeMapper . DEFAULT = = W32APITypeMapper . UNICODE ? Native . WCHAR _ SIZE : 1 ; <nl> + <nl> 	 	 int size = 0 ; <nl> 	 	 for ( String s : arr ) { <nl> - 	 	 	 size + = s . length ( ) * Native . WCHAR _ SIZE ; <nl> - 	 	 	 size + = Native . WCHAR _ SIZE ; <nl> + 	 	 	 size + = s . length ( ) * charwidth ; <nl> + 	 	 	 size + = charwidth ; <nl> 	 	 } <nl> - 	 	 size + = Native . WCHAR _ SIZE ; <nl> + 	 	 size + = charwidth ; <nl> <nl> 	 	 int offset = 0 ; <nl> 	 	 Memory data = new Memory ( size ) ; <nl> + data . clear ( ) ; <nl> 	 	 for ( String s : arr ) { <nl> - 	 	 	 data . setWideString ( offset , s ) ; <nl> - 	 	 	 offset + = s . length ( ) * Native . WCHAR _ SIZE ; <nl> - 	 	 	 offset + = Native . WCHAR _ SIZE ; <nl> - 	 	 } <nl> - 	 	 for ( int i = 0 ; i < Native . WCHAR _ SIZE ; i + + ) { <nl> - 	 	 	 data . setByte ( offset + + , ( byte ) 0 ) ; <nl> + if ( W32APITypeMapper . DEFAULT = = W32APITypeMapper . UNICODE ) { <nl> + data . setWideString ( offset , s ) ; <nl> + } else { <nl> + data . setString ( offset , s ) ; <nl> + } <nl> + 	 	 	 offset + = s . length ( ) * charwidth ; <nl> + 	 	 	 offset + = charwidth ; <nl> 	 	 } <nl> <nl> 	 	 int rc = Advapi32 . INSTANCE . RegSetValueEx ( hKey , name , 0 , <nl> - 	 	 	 	 WinNT . REG _ MULTI _ SZ , data . getByteArray ( 0 , size ) , size ) ; <nl> + 	 	 	 	 WinNT . REG _ MULTI _ SZ , data , size ) ; <nl> <nl> 	 	 if ( rc ! = W32Errors . ERROR _ SUCCESS ) { <nl> 	 	 	 throw new Win32Exception ( rc ) ; <nl> @ @ - 1635 , 15 + 1703 , 19 @ @ public abstract class Advapi32Util { <nl> 	 	 } <nl> 	 	 TreeMap < String , Object > keyValues = new TreeMap < String , Object > ( ) ; <nl> 	 	 char [ ] name = new char [ lpcMaxValueNameLen . getValue ( ) + 1 ] ; <nl> - 	 	 byte [ ] data = new byte [ lpcMaxValueLen . getValue ( ) ] ; <nl> + / / Allocate enough memory to hold largest value and two <nl> + / / terminating WCHARs - - the memory is zeroed so after <nl> + / / value request we should not overread when reading strings <nl> + 	 	 Memory byteData = new Memory ( lpcMaxValueLen . getValue ( ) + 2 * Native . WCHAR _ SIZE ) ; <nl> 	 	 for ( int i = 0 ; i < lpcValues . getValue ( ) ; i + + ) { <nl> + byteData . clear ( ) ; <nl> 	 	 	 IntByReference lpcchValueName = new IntByReference ( <nl> 	 	 	 	 	 lpcMaxValueNameLen . getValue ( ) + 1 ) ; <nl> 	 	 	 IntByReference lpcbData = new IntByReference ( <nl> 	 	 	 	 	 lpcMaxValueLen . getValue ( ) ) ; <nl> 	 	 	 IntByReference lpType = new IntByReference ( ) ; <nl> 	 	 	 rc = Advapi32 . INSTANCE . RegEnumValue ( hKey , i , name , lpcchValueName , <nl> - 	 	 	 	 	 null , lpType , data , lpcbData ) ; <nl> + 	 	 	 	 	 null , lpType , byteData , lpcbData ) ; <nl> 	 	 	 if ( rc ! = W32Errors . ERROR _ SUCCESS ) { <nl> 	 	 	 	 throw new Win32Exception ( rc ) ; <nl> 	 	 	 } <nl> @ @ - 1676 , 9 + 1748 , 6 @ @ public abstract class Advapi32Util { <nl> 	 	 	 	 continue ; <nl> 	 	 	 } <nl> <nl> - 	 	 	 Memory byteData = new Memory ( lpcbData . getValue ( ) ) ; <nl> - 	 	 	 byteData . write ( 0 , data , 0 , lpcbData . getValue ( ) ) ; <nl> - <nl> 	 	 	 switch ( lpType . getValue ( ) ) { <nl> 	 	 	 case WinNT . REG _ QWORD : { <nl> 	 	 	 	 keyValues . put ( nameString , byteData . getLong ( 0 ) ) ; <nl> @ @ - 1690 , 7 + 1759 , 11 @ @ public abstract class Advapi32Util { <nl> 	 	 	 } <nl> 	 	 	 case WinNT . REG _ SZ : <nl> 	 	 	 case WinNT . REG _ EXPAND _ SZ : { <nl> - 	 	 	 	 keyValues . put ( nameString , byteData . getWideString ( 0 ) ) ; <nl> + if ( W32APITypeMapper . DEFAULT = = W32APITypeMapper . UNICODE ) { <nl> + keyValues . put ( nameString , byteData . getWideString ( 0 ) ) ; <nl> + } else { <nl> + keyValues . put ( nameString , byteData . getString ( 0 ) ) ; <nl> + } <nl> 	 	 	 	 break ; <nl> 	 	 	 } <nl> 	 	 	 case WinNT . REG _ BINARY : { <nl> @ @ - 1699 , 20 + 1772 , 29 @ @ public abstract class Advapi32Util { <nl> 	 	 	 	 break ; <nl> 	 	 	 } <nl> 	 	 	 case WinNT . REG _ MULTI _ SZ : { <nl> - 	 	 	 	 Memory stringData = new Memory ( lpcbData . getValue ( ) ) ; <nl> - 	 	 	 	 stringData . write ( 0 , data , 0 , lpcbData . getValue ( ) ) ; <nl> - 	 	 	 	 ArrayList < String > result = new ArrayList < String > ( ) ; <nl> - 	 	 	 	 int offset = 0 ; <nl> - 	 	 	 	 while ( offset < stringData . size ( ) ) { <nl> - 	 	 	 	 	 String s = stringData . getWideString ( offset ) ; <nl> - 	 	 	 	 	 offset + = s . length ( ) * Native . WCHAR _ SIZE ; <nl> - 	 	 	 	 	 offset + = Native . WCHAR _ SIZE ; <nl> - 	 	 	 	 	 if ( s . length ( ) = = 0 & & offset = = stringData . size ( ) ) { <nl> - 	 	 	 	 	 	 / / skip the final NULL <nl> - 	 	 	 	 	 } else { <nl> - 	 	 	 	 	 	 result . add ( s ) ; <nl> - 	 	 	 	 	 } <nl> - 	 	 	 	 } <nl> + ArrayList < String > result = new ArrayList < String > ( ) ; <nl> + int offset = 0 ; <nl> + while ( offset < byteData . size ( ) ) { <nl> + String s ; <nl> + if ( W32APITypeMapper . DEFAULT = = W32APITypeMapper . UNICODE ) { <nl> + s = byteData . getWideString ( offset ) ; <nl> + offset + = s . length ( ) * Native . WCHAR _ SIZE ; <nl> + offset + = Native . WCHAR _ SIZE ; <nl> + } else { <nl> + s = byteData . getString ( offset ) ; <nl> + offset + = s . length ( ) ; <nl> + offset + = 1 ; <nl> + } <nl> + <nl> + if ( s . length ( ) = = 0 ) { <nl> + / / A sequence of null - terminated strings , <nl> + / / terminated by an empty string ( \ 0 ) . <nl> + / / = > The first empty string terminates the <nl> + break ; <nl> + } else { <nl> + result . add ( s ) ; <nl> + } <nl> + } <nl> 	 	 	 	 keyValues . put ( nameString , result . toArray ( new String [ 0 ] ) ) ; <nl> 	 	 	 	 break ; <nl> 	 	 	 } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> index 4a42285 . . bc37ecd 100755 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> @ @ - 100 , 10 + 100 , 11 @ @ public class Advapi32Test extends TestCase { <nl> Collection < String > dupSet = AbstractWin32TestSupport . detectDuplicateMethods ( Advapi32 . class ) ; <nl> if ( dupSet . size ( ) > 0 ) { <nl> for ( String name : new String [ ] { <nl> - / / has several overloads by design since the output value can be several types of data <nl> + / / these have several overloads by design since the input / output values can be several types of data <nl> " RegQueryValueEx " , <nl> - / / has several overloads by design since the input value can be several types of data <nl> - " RegSetValueEx " <nl> + " RegSetValueEx " , <nl> + " RegGetValue " , <nl> + " RegEnumValue " <nl> } ) { <nl> dupSet . remove ( name ) ; <nl> } <nl> @ @ - 640 , 7 + 641 , 7 @ @ public class Advapi32Test extends TestCase { <nl> 	 	 IntByReference lpType = new IntByReference ( ) ; <nl> 	 assertEquals ( W32Errors . ERROR _ SUCCESS , Advapi32 . INSTANCE . RegEnumValue ( <nl> 	 	 	 phKey . getValue ( ) , i , name , lpcchValueName , null , <nl> - 	 	 	 lpType , null , null ) ) ; <nl> + 	 	 	 lpType , ( Pointer ) null , null ) ) ; <nl> 	 assertEquals ( Native . toString ( name ) . length ( ) , lpcchValueName . getValue ( ) ) ; <nl> 	 } <nl> 	 assertEquals ( W32Errors . ERROR _ SUCCESS , Advapi32 . INSTANCE . RegCloseKey ( phKey . getValue ( ) ) ) ;
diff - - git a / README . md b / README . md <nl> index 40b4829 . . 70cd516 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 39 , 6 + 39 , 7 @ @ JNA is a mature library with dozens of contributors and hundreds of commercial a <nl> - [ leveldb - jna ] ( https : / / github . com / protonail / leveldb - jna ) : Cross - platform JNA based adapter for [ LevelDB ] ( https : / / github . com / google / leveldb ) ( used in [ Keylord ] ( http : / / protonail . com ) ) . <nl> - [ bolt - jna ] ( https : / / github . com / protonail / bolt - jna ) : Cross - platform JNA based adapter for [ Bolt ] ( https : / / github . com / boltdb / bolt ) ( used in [ Keylord ] ( http : / / protonail . com ) ) . It is show how to use JNA for binding to Go library . <nl> - [ JVM OpenVR Bindings ] ( https : / / github . com / kotlin - graphics / openvr ) . <nl> + - [ Apache Ignite ] ( https : / / ignite . apache . org / ) : Direct IO plugin <nl> <nl> * Interesting Investigations / Experiments * <nl>
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> index 43b8a5f . . 9462087 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> @ @ - 1624 , 6 + 1624 , 25 @ @ public interface Advapi32 extends StdCallLibrary { <nl> IntByReference pcbBytesNeeded ) ; <nl> <nl> / * * <nl> + * Retrieves the current status of the specified service based on the <nl> + * specified information level . <nl> + * <nl> + * @ param hService <nl> + * A handle to the service . This handle is returned by the <nl> + * OpenService ( SC _ HANDLE , String , int ) or CreateService ( ) <nl> + * function , and it must have the SERVICE _ QUERY _ STATUS access <nl> + * right . For more information , see < a <nl> + * href = " http : / / msdn . microsoft . com / en - us / library / ms685981 . aspx " <nl> + * > Service Security and Access Rights < / a > . <nl> + * @ param lpServiceStatus <nl> + * A pointer to a SERVICE _ STATUS structure that receives the status information . <nl> + * @ return If the function succeeds , the return value is true . If the <nl> + * function fails , the return value is false . To get extended error <nl> + * information , call GetLastError . <nl> + * / <nl> + boolean QueryServiceStatus ( SC _ HANDLE hService , SERVICE _ STATUS lpServiceStatus ) ; <nl> + <nl> + / * * <nl> * Sends a control code to a service . To specify additional information when <nl> * stopping a service , use the ControlServiceEx function . <nl> * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java b / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> index 919f9bf . . 1887505 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> @ @ - 38 , 8 + 38 , 10 @ @ import com . sun . jna . platform . win32 . Winsvc . ENUM _ SERVICE _ STATUS ; <nl> import com . sun . jna . platform . win32 . Winsvc . SC _ ACTION ; <nl> import com . sun . jna . platform . win32 . Winsvc . SC _ HANDLE ; <nl> import com . sun . jna . platform . win32 . Winsvc . SC _ STATUS _ TYPE ; <nl> + import static com . sun . jna . platform . win32 . Winsvc . SERVICE _ CONTROL _ STOP ; <nl> import com . sun . jna . platform . win32 . Winsvc . SERVICE _ FAILURE _ ACTIONS ; <nl> import com . sun . jna . platform . win32 . Winsvc . SERVICE _ FAILURE _ ACTIONS _ FLAG ; <nl> + import com . sun . jna . platform . win32 . Winsvc . SERVICE _ STATUS ; <nl> import com . sun . jna . platform . win32 . Winsvc . SERVICE _ STATUS _ PROCESS ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> <nl> @ @ - 204 , 19 + 206 , 46 @ @ public class W32Service { <nl> 	 	 } <nl> 	 } <nl> 	 <nl> + / * * <nl> + * Stop service . <nl> + * / <nl> + public void stopService ( ) { <nl> + stopService ( 30000 ) ; <nl> + } <nl> + <nl> 	 / * * <nl> 	 * Stop service . <nl> - 	 * / <nl> - 	 public void stopService ( ) { <nl> + * <nl> + * @ param timeout timeout in ms until the service must report to be <nl> + * stopped <nl> + * / <nl> + 	 void stopService ( long timeout ) { <nl> + long startTime = System . currentTimeMillis ( ) ; <nl> 	 	 waitForNonPendingState ( ) ; <nl> 	 	 / / If the service is already stopped - return <nl> 	 	 if ( queryStatus ( ) . dwCurrentState = = Winsvc . SERVICE _ STOPPED ) { <nl> 	 	 	 return ; <nl> 	 	 } <nl> - 	 	 if ( ! Advapi32 . INSTANCE . ControlService ( _ handle , Winsvc . SERVICE _ CONTROL _ STOP , <nl> - 	 	 	 	 new Winsvc . SERVICE _ STATUS ( ) ) ) { <nl> + SERVICE _ STATUS status = new SERVICE _ STATUS ( ) ; <nl> + 	 	 if ( ! Advapi32 . INSTANCE . ControlService ( _ handle , SERVICE _ CONTROL _ STOP , status ) ) { <nl> 	 	 	 throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> 	 	 } <nl> + / / This following the sample from the MSDN <nl> + / / the previouos implementation queried the service status and <nl> + / / failed if the application did not correctly update its state <nl> + while ( status . dwCurrentState ! = Winsvc . SERVICE _ STOPPED ) { <nl> + try { <nl> + 	 	 	 	 Thread . sleep ( status . dwWaitHint ) ; <nl> + 	 	 	 } catch ( InterruptedException e ) { <nl> + 	 	 	 	 throw new RuntimeException ( e ) ; <nl> + 	 	 	 } <nl> + if ( ! Advapi32 . INSTANCE . QueryServiceStatus ( _ handle , status ) ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + if ( ( System . currentTimeMillis ( ) - startTime ) > timeout ) { <nl> + throw new RuntimeException ( String . format ( " Service stop exceeded timeout time of % d ms " , timeout ) ) ; <nl> + } <nl> + } <nl> 	 	 waitForNonPendingState ( ) ; <nl> 	 	 if ( queryStatus ( ) . dwCurrentState ! = Winsvc . SERVICE _ STOPPED ) { <nl> 	 	 	 throw new RuntimeException ( " Unable to stop the service " ) ; <nl> @ @ - 269 , 7 + 298 , 7 @ @ public class W32Service { <nl> 	 	 SERVICE _ STATUS _ PROCESS status = queryStatus ( ) ; <nl> <nl> 	 	 int previousCheckPoint = status . dwCheckPoint ; <nl> - 	 	 int checkpointStartTickCount = Kernel32 . INSTANCE . GetTickCount ( ) ; ; <nl> + 	 	 int checkpointStartTickCount = Kernel32 . INSTANCE . GetTickCount ( ) ; <nl> <nl> 	 	 while ( isPendingState ( status . dwCurrentState ) ) { <nl>
diff - - git a / src / com / sun / jna / overview . html b / src / com / sun / jna / overview . html <nl> index 5ea4912 . . 2008f44 100644 <nl> - - - a / src / com / sun / jna / overview . html <nl> + + + b / src / com / sun / jna / overview . html <nl> @ @ - 200 , 9 + 200 , 9 @ @ Java types must be chosen to match native types of the same size . Following are <nl> < li > Java arrays of primitive type may be wrapped by { @ link java . nio . Buffer } in <nl> order to access a subset of the array ( changing the effective size and / or <nl> offest ) . <nl> - < li > Java arrays of primitive type are only valid for use within the scope of a <nl> + < li > Java arrays of primitive type and non - direct { @ link java . nio . Buffer } s are only valid for use within the scope of a <nl> single call . If the native code keeps a reference to the memory , use { @ link <nl> - com . sun . jna . Memory } or { @ link java . nio . Buffer } instead . <nl> + com . sun . jna . Memory } or direct { @ link java . nio . ByteBuffer } s instead . <nl> < li > Primitive arrays and structures as members of a structure are overlaid on the parent structure memory . <nl> < li > Bitfields must be manually packed into an integer type . <nl> < li > All other types must eventually be converted to one of the types in the this table . Methods with arguments or return values of types other than these must either use types deriving from { @ link com . sun . jna . NativeMapped } or supply type conversion information for the unsupported types . <nl> @ @ - 280 , 10 + 280 , 14 @ @ The { @ link com . sun . jna . WString } class is used to identify wide character strings <nl> <nl> < a name = " buffers " > < / a > <nl> < h3 > Buffers / Memory Blocks < / h3 > <nl> - Use arrays to represent buffers of primitive types passed to a function for use only during the function invocation . A native method cannot return a Java array , since there is no canonical way to indicate the intended length of the returned array . Instead , use one of the array access methods in the Pointer class , supplying the length of the returned array . < p > <nl> + Use arrays to represent buffers of primitive types passed to a function for use only during the function invocation . If the native code <nl> + keeps a pointer to the memory after the native function returns , use direct { @ link java . nio . ByteBuffer } s or { @ link com . sun . jna . Memory } instead . <nl> + < p > A native method cannot return a Java array , since there is no canonical way to indicate the intended length of the returned array . <nl> + Instead , use one of the array access methods in the Pointer class , supplying the length of the returned array . < p > <nl> { @ link java . nio . Buffer } s may also be used as a memory buffer input <nl> argument ; direct byte buffers can often provide much improved performance over <nl> - primitive arrays . A pointer provided by native code may be converted to a { @ link java . nio . Buffer } by calling { @ link com . sun . jna . Pointer # getByteBuffer } . <nl> + primitive arrays . <nl> + A pointer provided by native code may be converted to a { @ link java . nio . Buffer } by calling { @ link com . sun . jna . Pointer # getByteBuffer } . <nl> < p > <nl> If you need to pass in a subset of a primitive array , you can do so by <nl> wrapping it in a { @ link java . nio . Buffer } subclass , such as { @ link
diff - - git a / lib / native / aix - ppc . jar b / lib / native / aix - ppc . jar <nl> index 6716399 . . 5777bb2 100644 <nl> Binary files a / lib / native / aix - ppc . jar and b / lib / native / aix - ppc . jar differ <nl> diff - - git a / lib / native / aix - ppc64 . jar b / lib / native / aix - ppc64 . jar <nl> index 6716399 . . c91d0b4 100644 <nl> Binary files a / lib / native / aix - ppc64 . jar and b / lib / native / aix - ppc64 . jar differ <nl> diff - - git a / lib / native / darwin . jar b / lib / native / darwin . jar <nl> index 6716399 . . c67f849 100644 <nl> Binary files a / lib / native / darwin . jar and b / lib / native / darwin . jar differ <nl> diff - - git a / lib / native / linux - mips64el . jar b / lib / native / linux - mips64el . jar <nl> index fb6e418 . . c6f8bb9 100644 <nl> Binary files a / lib / native / linux - mips64el . jar and b / lib / native / linux - mips64el . jar differ
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> index e3b07ec . . 83f0d7b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> @ @ - 119 , 7 + 119 , 7 @ @ public interface IDispatch extends IUnknown { <nl> * @ param pDispParams Pointer to a DISPPARAMS structure containing an array of arguments , an array of argument DISPIDs for named arguments , and counts for the number of elements in the arrays . <nl> * @ param pVarResult Pointer to the location where the result is to be stored , or NULL if the caller expects no result . This argument is ignored if DISPATCH _ PROPERTYPUT or DISPATCH _ PROPERTYPUTREF is specified . <nl> * @ param pExcepInfo Pointer to a structure that contains exception information . This structure should be filled in if DISP _ E _ EXCEPTION is returned . Can be NULL . <nl> - * @ param puArgErr The index within rgvarg of the first argument that has an error . Arguments are stored in pDispParams - > rgvarg in reverse order , <nl> + * @ param puArgErr The index within rgvarg of the first argument that has an error . Arguments are stored in pDispParams - & gt ; rgvarg in reverse order , <nl> * so the first argument is the one with the highest index in the array . This parameter is returned only when the resulting return <nl> * value is DISP _ E _ TYPEMISMATCH or DISP _ E _ PARAMNOTFOUND . This argument can be set to null . For details , see Returning Errors . <nl> * @ return This method can return one of these values . <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IShellFolder . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IShellFolder . java <nl> index 0c91a34 . . eec0dd6 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IShellFolder . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IShellFolder . java <nl> @ @ - 295 , 13 + 295 , 13 @ @ public interface IShellFolder { <nl> * If this method is successful , the CODE field of the HRESULT contains one of the following values . For information regarding the extraction of <nl> * the CODE field from the returned HRESULT , see Remarks . If this method is unsuccessful , it returns a COM error code . <nl> * Negative <nl> - * A negative return value indicates that the first item should precede the second ( pidl1 < pidl2 ) . <nl> + * A negative return value indicates that the first item should precede the second ( pidl1 & lt ; pidl2 ) . <nl> * Positive <nl> - * A positive return value indicates that the first item should follow the second ( pidl1 > pidl2 ) . <nl> + * A positive return value indicates that the first item should follow the second ( pidl1 & gt ; pidl2 ) . <nl> * Zero <nl> * A return value of zero indicates that the two items are the same ( pidl1 = pidl2 ) . <nl> * Use the HRESULT _ CODE macro to extract the CODE field from the HRESULT , then cast the result as a short . <nl> - * # define HRESULT _ CODE ( hr ) ( ( hr ) & 0xFFFF ) <nl> + * # define HRESULT _ CODE ( hr ) ( ( hr ) & amp ; 0xFFFF ) <nl> * <nl> * / <nl> HRESULT CompareIDs ( <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Ddeml . java b / contrib / platform / src / com / sun / jna / platform / win32 / Ddeml . java <nl> index 8a921cd . . 6489a7f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Ddeml . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Ddeml . java <nl> @ @ - 725 , 7 + 725 , 7 @ @ public interface Ddeml extends StdCallLibrary { <nl> public int MSGF _ DDEMGR = 0x8001 ; <nl> <nl> / * codepage constants * / <nl> - / * * default codepage for windows & old DDE convs . * / <nl> + / * * default codepage for windows & amp ; old DDE convs . * / <nl> public int CP _ WINANSI = 1004 ; <nl> / * * default codepage for usage from java * / <nl> public int CP _ WINUNICODE = 1200 ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / GDI32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / GDI32 . java <nl> index 2326709 . . b1dc088 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / GDI32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / GDI32 . java <nl> @ @ - 517 , 7 + 517 , 7 @ @ public interface GDI32 extends StdCallLibrary { <nl> 	 * OR operator . < / td > <nl> 	 * < / tr > <nl> 	 * < tr > <nl> - 	 * < td > < strong > NOMIRRORBITMAP < / strong < / td > <nl> + 	 * < td > < strong > NOMIRRORBITMAP < / strong > < / td > <nl> 	 * < td > Prevents the bitmap from being mirrored . < / td > <nl> 	 * < / tr > <nl> 	 * < tr > <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java b / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java <nl> index 1e4b2d2 . . 4211b73 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java <nl> @ @ - 477 , 22 + 477 , 30 @ @ public interface Guid { <nl> <nl> / * * <nl> * REFIID is a pointer to an IID . <nl> - * <nl> + * <nl> + * < p > <nl> * This type needs to be seperate from IID , as the REFIID can be passed in <nl> - * from external code , that does not allow writes to memory . <nl> - * <nl> - * With the normal JNA behaviour a structure , that crosses the native < - > Java <nl> - * border will be autowritten , which causes a fault when written . <nl> - * Observed was this behaviour in COM - Callbacks , which get the REFIID passed <nl> - * into Invoke - method . <nl> - * <nl> - * So a IID can ' t be used directly , although the typedef of REFIID ( from MSDN ) : <nl> - * <nl> - * typedef IID * REFIID ; <nl> - * <nl> - * and the jna behaviour is described as : <nl> - * <nl> - * " When a function requires a pointer to a struct , a Java Structure should be used . " <nl> + * from external code , that does not allow writes to memory . < / p > <nl> + * <nl> + * < p > <nl> + * With the normal JNA behaviour a structure , that crosses the <nl> + * native & lt ; - % gt ; Java border will be autowritten , which causes a fault when <nl> + * written . Observed was this behaviour in COM - Callbacks , which get the <nl> + * REFIID passed into Invoke - method . < / p > <nl> + * <nl> + * < p > <nl> + * So a IID can ' t be used directly , although the typedef of REFIID ( from <nl> + * MSDN ) : < / p > <nl> + * <nl> + * < p > <nl> + * { @ code typedef IID * REFIID ; } < / p > <nl> + * <nl> + * < p > <nl> + * and the jna behaviour is described as : < / p > <nl> + * <nl> + * < p > <nl> + * " When a function requires a pointer to a struct , a Java Structure should <nl> + * be used . " < / p > <nl> * / <nl> public class REFIID extends PointerType { <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> index a06fcb1 . . 5ca1b98 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> @ @ - 924 , 7 + 924 , 7 @ @ public abstract class Kernel32Util implements WinDef { <nl> * <nl> * @ param path <nl> * The path to the executable file <nl> - * @ return A map of resource type name / ID = > resources . < br > <nl> + * @ return A map of resource type name / ID = & gt ; resources . < br > <nl> * A map key + a single list item + the path to the executable can <nl> * be handed off to getResource ( ) to actually get the resource . <nl> * / <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / ShTypes . java b / contrib / platform / src / com / sun / jna / platform / win32 / ShTypes . java <nl> index 26830c9 . . d53592c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / ShTypes . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / ShTypes . java <nl> @ @ - 57 , 9 + 57 , 9 @ @ public interface ShTypes { <nl> * indicate which union member to use : <nl> * <nl> * < table > <nl> - * < tr > < td > { @ link TYPE _ WSTR } < / td > < td > 0x0 < / td > < td > Use STRRET . pOleStr < / td > < td > must be freed by caller of GetDisplayNameOf < / td > < / tr > <nl> - * < tr > < td > { @ link TYPE _ OFFSET } < / td > < td > 0x1 < / td > < td > Use STRRET . uOffset < / td > < td > Offset into SHITEMID for ANSI string < / td > < / tr > <nl> - * < tr > < td > { @ link TYPE _ CSTR } < / td > < td > 0x0 < / td > < td > Use STRRET . cStr < / td > < td > ANSI Buffer < / td > < / tr > <nl> + * < tr > < td > { @ link # TYPE _ WSTR } < / td > < td > 0x0 < / td > < td > Use STRRET . pOleStr < / td > < td > must be freed by caller of GetDisplayNameOf < / td > < / tr > <nl> + * < tr > < td > { @ link # TYPE _ OFFSET } < / td > < td > 0x1 < / td > < td > Use STRRET . uOffset < / td > < td > Offset into SHITEMID for ANSI string < / td > < / tr > <nl> + * < tr > < td > { @ link # TYPE _ CSTR } < / td > < td > 0x0 < / td > < td > Use STRRET . cStr < / td > < td > ANSI Buffer < / td > < / tr > <nl> * < / table > <nl> * / <nl> public int uType ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> index 4416356 . . 40e9295 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> @ @ - 2391 , 7 + 2391 , 7 @ @ public interface User32 extends StdCallLibrary , WinUser , WinNT { <nl> * for example , if you specified 12 or more bytes of extra class <nl> * memory , a value of 8 would be an index to the third integer . <nl> * To retrieve any other value from the WNDCLASSEX structure , <nl> - * specify one of the following values . < br ? GCW _ ATOM : - 32 < br > <nl> + * specify one of the following values . < br > GCW _ ATOM : - 32 < br > <nl> * Retrieves an ATOM value that uniquely identifies the window <nl> * class . This is the same atom that the RegisterClassEx function <nl> * returns . < br > <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index 1e5d14a . . 884f7a4 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 3496 , 7 + 3496 , 7 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> * 15 10 9 0 bit <nl> * < / pre > <nl> * <nl> - * < p > WARNING : This pattern isn ' t always follows , Serbina , Bosnian & Croation for example . < / p > <nl> + * < p > WARNING : This pattern isn ' t always follows , Serbina , Bosnian & amp ; Croation for example . < / p > <nl> * <nl> * < p > It is recommended that applications test for locale names or actual LCIDs . < / p > <nl> * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Winevt . java b / contrib / platform / src / com / sun / jna / platform / win32 / Winevt . java <nl> index 71a46e0 . . bc9e009 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Winevt . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Winevt . java <nl> @ @ - 1549 , 7 + 1549 , 8 @ @ public interface Winevt { <nl> <nl> / * * <nl> * Defines the identifiers that identify the metadata properties of an event definition . <nl> - * https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa385517 % 28v = vs . 85 % 29 . aspx ? f = 255 & MSPPError = - 2147217396 <nl> + * <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa385517 % 28v = vs . 85 % 29 . aspx ? f = 255 & MSPPError = - 2147217396 " > MSDN < / a > <nl> * / <nl> public static interface EVT _ EVENT _ METADATA _ PROPERTY _ ID { <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WininetUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / WininetUtil . java <nl> index 7da5969 . . 376cd82 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WininetUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WininetUtil . java <nl> @ @ - 43 , 7 + 43 , 7 @ @ public class WininetUtil { <nl> * Some entries are cookies , some entries are history items , and some are <nl> * actual files . < br > <nl> * <nl> - * @ return A map of cache URL = > local file ( or URL = > empty string for <nl> + * @ return A map of cache URL = & gt ; local file ( or URL = & gt ; empty string for <nl> * cookie and history entries ) <nl> * / <nl> public static Map < String , String > getCache ( ) { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java b / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> index d8edf6f . . 77ceb0a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> @ @ - 765 , 7 + 765 , 7 @ @ public interface Winsvc { <nl> * request . < / li > <nl> * < li > If your service handles SERVICE _ CONTROL _ HARDWAREPROFILECHANGE , <nl> * return NO _ ERROR to grant the request and an error code to deny the <nl> - * request . < < / li > < li > If your service handles <nl> + * request . < / li > < li > If your service handles <nl> * SERVICE _ CONTROL _ POWEREVENT , return NO _ ERROR to grant the request and <nl> * an error code to deny the request . < / li > <nl> * < li > For all other control codes your service handles , return <nl> diff - - git a / src / com / sun / jna / Version . java b / src / com / sun / jna / Version . java <nl> index d711d68 . . 7a805e9 100644 <nl> - - - a / src / com / sun / jna / Version . java <nl> + + + b / src / com / sun / jna / Version . java <nl> @ @ - 12 , 6 + 12 , 6 @ @ <nl> * / <nl> package com . sun . jna ; <nl> interface Version { <nl> - String VERSION = " 4 . 2 . 0 " ; <nl> - String VERSION _ NATIVE = " 5 . 0 . 1 " ; <nl> + String VERSION = " 5 . 0 . 0 - SNAPSHOT " ; <nl> + String VERSION _ NATIVE = " 5 . 2 . 1 " ; <nl> } <nl> diff - - git a / src / com / sun / jna / overview . html b / src / com / sun / jna / overview . html <nl> index 4a3f556 . . 5ea4912 100644 <nl> - - - a / src / com / sun / jna / overview . html <nl> + + + b / src / com / sun / jna / overview . html <nl> @ @ - 5 , 12 + 5 , 11 @ @ <nl> Copyright 2007 Timothy Wall <nl> - - > <nl> < / head > <nl> - <nl> + < body bgcolor = " white " > <nl> < HR > <nl> < CENTER > <nl> < H1 > Java Native Access < / H1 > <nl> < / CENTER > <nl> - < body bgcolor = " white " > <nl> This document is the API specification for the <nl> < a href = http : / / github . com / twall / jna > JNA < / a > <nl> library for simplified native library access for Java . <nl> @ @ - 115 , 7 + 114 , 7 @ @ td { padding - left : 10px ; padding - right : 10px ; } <nl> blockquote { background - color : # EAEAEA ; } <nl> < / style > <nl> < table border = 1 borderColor = white class = styled > <nl> - < tr > < td > < b > OS < / b > < / td > < td > < b > Library Name < / b > < / td > < td > < b > String < / b > < / td > < / tr > <nl> + < tr > < th > < b > OS < / b > < / th > < th > < b > Library Name < / b > < / th > < th > < b > String < / b > < / th > < / tr > <nl> < tr > < td > Windows < / td > < td > user32 . dll < / td > < td > user32 < / td > < / tr > <nl> < tr > < td > Linux < / td > < td > libX11 . so < / td > < td > X11 < / td > < / tr > <nl> < tr > < td > Mac OS X < / td > < td > libm . dylib < / td > < td > m < / td > < / tr > <nl> @ @ - 164 , 7 + 163 , 7 @ @ An instance of the { @ link com . sun . jna . Function } class is obtained through the { @ <nl> Java types must be chosen to match native types of the same size . Following are the types supported by the JNA library . < p > <nl> < center > <nl> < table border = 1 borderColor = white class = styled width = " 100 % " > <nl> - < tr > < td > < b > C Type < / b > < / td > < td > < b > Native Representation < / b > < / td > < td > < b > Java Type < / b > < / td > < / tr > <nl> + < tr > < th > < b > C Type < / b > < / th > < th > < b > Native Representation < / b > < / th > < td > < b > Java Type < / b > < / th > < / tr > <nl> < tr > < td > char < / td > < td > 8 - bit integer < / td > < td > byte < / td > < / tr > <nl> < tr > < td > wchar _ t < / td > < td > platform - dependent < / td > < td > char < / td > < / tr > <nl> < tr > < td > short < / td > < td > 16 - bit integer < / td > < td > short < / td > < / tr > <nl> @ @ - 224 , 8 + 223 , 8 @ @ To map a native multi - dimensional array , use a single - dimensional Java array wit <nl> int array [ DIM0 ] [ DIM1 ] ; <nl> int i , j ; <nl> <nl> - for ( i = 0 ; i < DIM0 ; i + + ) { <nl> - for ( j = 0 ; j < DIM1 ; j + + ) { <nl> + for ( i = 0 ; i & lt ; DIM0 ; i + + ) { <nl> + for ( j = 0 ; j & lt ; DIM1 ; j + + ) { <nl> array [ i ] [ j ] = i * DIM1 + j ; <nl> } <nl> } <nl> @ @ - 234 , 8 + 233 , 8 @ @ for ( i = 0 ; i < DIM0 ; i + + ) { <nl> final int DIM0 = 2 ; <nl> final int DIM1 = 3 ; <nl> int [ ] array = new int [ 6 ] ; <nl> - for ( int i = 0 ; i < DIM0 ; i + + ) { <nl> - for ( int j = 0 ; j < DIM1 ; j + + ) { <nl> + for ( int i = 0 ; i & lt ; DIM0 ; i + + ) { <nl> + for ( int j = 0 ; j & lt ; DIM1 ; j + + ) { <nl> array [ i * DIM1 + j ] = i * DIM1 + j ; <nl> } <nl> } <nl> @ @ - 715 , 7 + 714 , 7 @ @ The method { @ link com . sun . jna . NativeLibrary # getGlobalVariableAddress } may be use <nl> < a href = " # toc " > Table of Contents < / a > <nl> < a name = " crash - protection " > < / a > <nl> < h2 > VM Crash Protection < / h2 > <nl> - It is not uncommon when defining a new library and writing tests to encounter memory access errors which crash the VM . These are often caused by improper mappings or invalid arguments passed to the native library . To generate Java errors instead of crashing the VM , call { @ link com . sun . jna . Native # setProtected Native . setProtected ( true ) } < / code > . Not all platforms support this protection ; if not , the value of { @ link com . sun . jna . Native # isProtected } will remain < code > false < / code > . < p > <nl> + It is not uncommon when defining a new library and writing tests to encounter memory access errors which crash the VM . These are often caused by improper mappings or invalid arguments passed to the native library . To generate Java errors instead of crashing the VM , call < code > { @ link com . sun . jna . Native # setProtected Native . setProtected ( true ) } < / code > . Not all platforms support this protection ; if not , the value of { @ link com . sun . jna . Native # isProtected } will remain < code > false < / code > . < p > <nl> NOTE : When protected mode is enabled , you should make use of the jsig library , if available ( see < a href = " http : / / download . oracle . com / javase / 6 / docs / technotes / guides / vm / signal - chaining . html " > Signal Chaining < / a > ) to avoid interfering with the JVM ' s use of signals . In short , set the environment variable < code > LD _ PRELOAD < / code > ( or < code > LD _ PRELOAD _ 64 < / code > ) to the path to < code > libjsig . so < / code > in your JRE lib directory ( usually $ { java . home } / lib / $ { os . arch } / libjsig . so ) before launching your Java application . <nl> <nl>
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 97b8615 . . 8c8edcd 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 23 , 6 + 23 , 7 @ @ Bug Fixes <nl> * [ # 882 ] ( https : / / github . com / java - native - access / jna / pull / 882 ) : Correctly close file in ` ELFAnalyser # runDetection ` , fix suggested by [ @ Sylvyrfysh ] ( https : / / github . com / Sylvyrfysh ) in [ # 880 ] ( https : / / github . com / java - native - access / jna / pull / 880 ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 887 ] ( https : / / github . com / java - native - access / jna / issues / 887 ) : MacFileUtils . moveToTrash ( ) doesn ' t work in a sandboxed app fix suggested by [ @ sobakasu ] ( https : / / github . com / sobakasu ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 894 ] ( https : / / github . com / java - native - access / jna / issues / 894 ) : NullPointerException can be caused by calling ` com . sun . jna . platform . win32 . COM . util . ProxyObject # dispose ` multiple times - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 925 ] ( https : / / github . com / java - native - access / jna / issues / 925 ) : Optimize ` Structure # validate ` and prevent ` ArrayIndexOutOfBoundsException ` in ` SAFEARRAY # read ` for zero dimensions - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Breaking Changes <nl> - - - - - - - - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> index 8480374 . . 908010c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> @ @ - 607 , 7 + 607 , 11 @ @ public interface OaIdl { <nl> @ Override <nl> public void read ( ) { <nl> super . read ( ) ; <nl> - rgsabound = ( SAFEARRAYBOUND [ ] ) rgsabound [ 0 ] . toArray ( cDims . intValue ( ) ) ; <nl> + if ( cDims . intValue ( ) > 0 ) { <nl> + rgsabound = ( SAFEARRAYBOUND [ ] ) rgsabound [ 0 ] . toArray ( cDims . intValue ( ) ) ; <nl> + } else { <nl> + rgsabound = new SAFEARRAYBOUND [ ] { new SAFEARRAYBOUND ( ) } ; <nl> + } <nl> } <nl> <nl> @ Override <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / SAFEARRAYTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / SAFEARRAYTest . java <nl> index 0caba84 . . 164f783 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / SAFEARRAYTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / SAFEARRAYTest . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> package com . sun . jna . platform . win32 ; <nl> <nl> import com . sun . jna . Pointer ; <nl> + import com . sun . jna . Structure ; <nl> import com . sun . jna . platform . win32 . COM . COMException ; <nl> import com . sun . jna . platform . win32 . COM . COMUtils ; <nl> import com . sun . jna . platform . win32 . COM . util . ObjectFactory ; <nl> @ @ - 61 , 6 + 62 , 7 @ @ import org . junit . Before ; <nl> import static com . sun . jna . platform . win32 . OaIdlUtil . toPrimitiveArray ; <nl> import com . sun . jna . platform . win32 . WTypes . VARTYPE ; <nl> import com . sun . jna . platform . win32 . WinDef . LONG ; <nl> + import java . lang . reflect . Field ; <nl> <nl> public class SAFEARRAYTest { <nl> static { <nl> @ @ - 82 , 6 + 84 , 15 @ @ public class SAFEARRAYTest { <nl> SAFEARRAY varArray = SAFEARRAY . createSafeArray ( 1 ) ; <nl> Assert . assertTrue ( varArray ! = null ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testCreateEmpty ( ) throws NoSuchFieldException , IllegalArgumentException , IllegalAccessException { <nl> + Field f = Structure . class . getDeclaredField ( " PLACEHOLDER _ MEMORY " ) ; <nl> + f . setAccessible ( true ) ; <nl> + Pointer PLACEHOLDER _ MEMORY = ( Pointer ) f . get ( null ) ; <nl> + SAFEARRAY sa = Structure . newInstance ( SAFEARRAY . class , PLACEHOLDER _ MEMORY ) ; <nl> + Assert . assertTrue ( sa ! = null ) ; <nl> + } <nl> <nl> @ Test <nl> public void testSafeArrayPutGetElement ( ) throws Exception { <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index 13f3c14 . . 42df030 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 2125 , 6 + 2125 , 13 @ @ public abstract class Structure { <nl> * @ param cls Structure subclass to check <nl> * / <nl> static void validate ( Class < ? extends Structure > cls ) { <nl> - Structure . newInstance ( cls , PLACEHOLDER _ MEMORY ) ; <nl> + try { <nl> + cls . getConstructor ( ) ; <nl> + return ; <nl> + } catch ( NoSuchMethodException e ) { <nl> + } <nl> + catch ( SecurityException e ) { <nl> + } <nl> + throw new IllegalArgumentException ( " No suitable constructor found for class : " + cls . getName ( ) ) ; <nl> } <nl> }
diff - - git a / www / WindowsDevelopmentEnvironment . md b / www / WindowsDevelopmentEnvironment . md <nl> index b94d2a5 . . e3fb5ef 100644 <nl> - - - a / www / WindowsDevelopmentEnvironment . md <nl> + + + b / www / WindowsDevelopmentEnvironment . md <nl> @ @ - 26 , 7 + 26 , 7 @ @ LIB environment variables are set properly ( as in VCVARS . BAT ) . <nl> <nl> Sample configuration setting up INCLUDE / LIB ( see an alternative below ) : <nl> <nl> - ` ` ` shell <nl> + ` ` ` shell <nl> export MSVC = " / c / Program Files ( x86 ) / Microsoft Visual Studio 10 . 0 / vc " <nl> export WSDK = " / c / Program Files ( x86 ) / Microsoft SDKs / Windows / v7 . 0A " <nl> export WSDK _ 64 = " / c / Program Files / Microsoft SDKs / Windows / v7 . 1 " <nl> @ @ - 83 , 6 + 83 , 8 @ @ This builds the library based on the Visual C + + compiler . <nl> - git <nl> 4 . Ensure ant , maven , cygwin ( 64 Bit ! ) are accessible from the PATH <nl> 5 . Run <nl> + set JAVA _ HOME = c : \ Program Files \ Java \ jdk1 . 8 . 0 _ 152 <nl> + set PATH = c : \ cygwin64 \ bin \ ; % PATH % <nl> 	 " C : \ Program Files ( x86 ) \ Microsoft Visual C + + Build Tools \ vcbuildtools . bat " x64 <nl> inside a windows command prompt <nl> 6 . Point JAVA _ HOME to the root of a 64 Bit JDK <nl> @ @ - 105 , 6 + 107 , 8 @ @ For 32bit : <nl> - git <nl> 4 . Ensure ant , maven , cygwin ( 32 Bit ! ) are accessible from the PATH <nl> 5 . Run <nl> + set JAVA _ HOME = c : \ Program Files ( x86 ) \ Java \ jdk1 . 8 . 0 _ 152 <nl> + set PATH = c : \ cygwin \ bin \ ; % PATH % <nl> 	 " C : \ Program Files ( x86 ) \ Microsoft Visual C + + Build Tools \ vcbuildtools . bat " x86 <nl> inside a windows command prompt <nl> 6 . Point JAVA _ HOME to the root of a 32 Bit JDK
diff - - git a / test / com / sun / jna / DirectTest . java b / test / com / sun / jna / DirectTest . java <nl> index 041f2f0 . . aa4943a 100644 <nl> - - - a / test / com / sun / jna / DirectTest . java <nl> + + + b / test / com / sun / jna / DirectTest . java <nl> @ @ - 36 , 7 + 36 , 7 @ @ import java . util . List ; <nl> import java . util . Map ; <nl> <nl> / / @ SuppressWarnings ( " unused " ) <nl> - public class DirectTest extends TestCase implements Paths , GCWaits { <nl> + public class DirectTest extends TestCase implements Paths { <nl> <nl> public static void main ( java . lang . String [ ] argList ) { <nl> junit . textui . TestRunner . run ( DirectTest . class ) ; <nl> diff - - git a / test / com / sun / jna / GCWaits . java b / test / com / sun / jna / GCWaits . java <nl> index 48453ea . . e941886 100644 <nl> - - - a / test / com / sun / jna / GCWaits . java <nl> + + + b / test / com / sun / jna / GCWaits . java <nl> @ @ - 24 , 11 + 24 , 24 @ @ <nl> <nl> package com . sun . jna ; <nl> <nl> - public interface GCWaits { <nl> + public class GCWaits { <nl> + private GCWaits ( ) { } <nl> + <nl> + public static void gcRun ( ) { <nl> + try { <nl> + Thread . sleep ( GC _ WAIT _ INTERVAL ) ; <nl> + } catch ( InterruptedException ex ) { <nl> + return ; <nl> + } <nl> + System . gc ( ) ; <nl> + System . runFinalization ( ) ; <nl> + Memory . purge ( ) ; <nl> + } <nl> + <nl> / * * Amount of time to wait for GC , in ms * / <nl> - int GC _ WAIT _ TIMEOUT = 5000 ; <nl> + public static final int GC _ WAIT _ TIMEOUT = 5000 ; <nl> / * * How long to sleep between GC * / <nl> - int GC _ WAIT _ INTERVAL = 10 ; <nl> + public static final int GC _ WAIT _ INTERVAL = 10 ; <nl> / * * Number of times to attempt GC * / <nl> - int GC _ WAITS = GC _ WAIT _ TIMEOUT / GC _ WAIT _ INTERVAL ; <nl> + public static final int GC _ WAITS = GC _ WAIT _ TIMEOUT / GC _ WAIT _ INTERVAL ; <nl> } <nl> \ No newline at end of file <nl> diff - - git a / test / com / sun / jna / JNALoadTest . java b / test / com / sun / jna / JNALoadTest . java <nl> index d953fc4 . . e64ccad 100644 <nl> - - - a / test / com / sun / jna / JNALoadTest . java <nl> + + + b / test / com / sun / jna / JNALoadTest . java <nl> @ @ - 37 , 7 + 37 , 7 @ @ import junit . framework . TestCase ; <nl> / * * Test loading and unloading native support from various locations . Note <nl> * that no JNI classes are directly referenced in these tests . <nl> * / <nl> - public class JNALoadTest extends TestCase implements Paths , GCWaits { <nl> + public class JNALoadTest extends TestCase implements Paths { <nl> <nl> private class TestLoader extends URLClassLoader { <nl> public TestLoader ( boolean fromJar ) throws MalformedURLException { <nl> @ @ - 133 , 19 + 133 , 16 @ @ public class JNALoadTest extends TestCase implements Paths , GCWaits { <nl> cls = null ; <nl> field = null ; <nl> System . gc ( ) ; <nl> - for ( int i = 0 ; i < GC _ WAITS & & ( ref . get ( ) ! = null | | clref . get ( ) ! = null ) ; i + + ) { <nl> - Thread . sleep ( GC _ WAIT _ INTERVAL ) ; <nl> - System . gc ( ) ; <nl> + for ( int i = 0 ; i < GCWaits . GC _ WAITS & & ( ref . get ( ) ! = null | | clref . get ( ) ! = null ) ; i + + ) { <nl> + GCWaits . gcRun ( ) ; <nl> } <nl> assertNull ( " Class not GC ' d : " + ref . get ( ) , ref . get ( ) ) ; <nl> assertNull ( " ClassLoader not GC ' d : " + clref . get ( ) , clref . get ( ) ) ; <nl> <nl> / / Check for temporary file deletion <nl> File f = new File ( path ) ; <nl> - for ( int i = 0 ; i < GC _ WAITS & & ( f . exists ( ) | | Boolean . getBoolean ( " jna . loaded " ) ) ; i + + ) { <nl> - System . gc ( ) ; / / attempt to fix intermittent test failures <nl> - Thread . sleep ( 4 * GC _ WAIT _ INTERVAL ) ; / / ' 4 * ' is attempt to fix intermittent test failures <nl> - System . gc ( ) ; <nl> + for ( int i = 0 ; i < GCWaits . GC _ WAITS & & ( f . exists ( ) | | Boolean . getBoolean ( " jna . loaded " ) ) ; i + + ) { <nl> + GCWaits . gcRun ( ) ; <nl> } <nl> <nl> if ( f . exists ( ) ) { <nl> @ @ - 186 , 9 + 183 , 8 @ @ public class JNALoadTest extends TestCase implements Paths , GCWaits { <nl> cls = null ; <nl> field = null ; <nl> System . gc ( ) ; <nl> - for ( int i = 0 ; i < GC _ WAITS & & ( ref . get ( ) ! = null | | clref . get ( ) ! = null | | Boolean . getBoolean ( " jna . loaded " ) ) ; i + + ) { <nl> - Thread . sleep ( 2 * GC _ WAIT _ INTERVAL ) ; / / ' 2 * ' is attempt to fix intermittent test failures <nl> - System . gc ( ) ; <nl> + for ( int i = 0 ; i < GCWaits . GC _ WAITS & & ( ref . get ( ) ! = null | | clref . get ( ) ! = null | | Boolean . getBoolean ( " jna . loaded " ) ) ; i + + ) { <nl> + GCWaits . gcRun ( ) ; <nl> } <nl> assertNull ( " Class not GC ' d : " + ref . get ( ) , ref . get ( ) ) ; <nl> assertNull ( " ClassLoader not GC ' d : " + clref . get ( ) , clref . get ( ) ) ; <nl> @ @ - 197 , 9 + 193 , 8 @ @ public class JNALoadTest extends TestCase implements Paths , GCWaits { <nl> Throwable throwable = null ; <nl> / / NOTE : IBM J9 needs some extra time to unload the native library , <nl> / / so try a few times before failing <nl> - for ( int i = 0 ; i < GC _ WAITS ; i + + ) { <nl> - System . gc ( ) ; <nl> - Thread . sleep ( GC _ WAIT _ INTERVAL ) ; <nl> + for ( int i = 0 ; i < GCWaits . GC _ WAITS ; i + + ) { <nl> + GCWaits . gcRun ( ) ; <nl> try { <nl> loader = new TestLoader ( false ) ; <nl> cls = Class . forName ( " com . sun . jna . Native " , true , loader ) ; <nl> diff - - git a / test / com / sun / jna / MemoryTest . java b / test / com / sun / jna / MemoryTest . java <nl> index a3d4d79 . . a340f99 100644 <nl> - - - a / test / com / sun / jna / MemoryTest . java <nl> + + + b / test / com / sun / jna / MemoryTest . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ import java . util . Map ; <nl> <nl> import junit . framework . TestCase ; <nl> <nl> - public class MemoryTest extends TestCase implements GCWaits { <nl> + public class MemoryTest extends TestCase { <nl> <nl> public void testAutoFreeMemory ( ) throws Exception { <nl> final boolean [ ] flag = { false } ; <nl> @ @ - 56 , 10 + 56 , 8 @ @ public class MemoryTest extends TestCase implements GCWaits { <nl> long start = System . currentTimeMillis ( ) ; <nl> System . gc ( ) ; <nl> Memory . purge ( ) ; <nl> - for ( int i = 0 ; i < GC _ WAITS & & ref . get ( ) ! = null ; i + + ) { <nl> - Thread . sleep ( GC _ WAIT _ INTERVAL ) ; <nl> - System . gc ( ) ; <nl> - Memory . purge ( ) ; <nl> + for ( int i = 0 ; i < GCWaits . GC _ WAITS & & ref . get ( ) ! = null ; i + + ) { <nl> + GCWaits . gcRun ( ) ; <nl> } <nl> long end = System . currentTimeMillis ( ) ; <nl> assertNull ( " Memory not GC ' d after " + ( end - start ) + " millis " , ref . get ( ) ) ; <nl> @ @ - 148 , 10 + 146 , 8 @ @ public class MemoryTest extends TestCase implements GCWaits { <nl> m = null ; <nl> System . gc ( ) ; <nl> Memory . purge ( ) ; <nl> - for ( int i = 0 ; i < GC _ WAITS & & ref . get ( ) ! = null ; i + + ) { <nl> - Thread . sleep ( GC _ WAIT _ INTERVAL ) ; <nl> - System . gc ( ) ; <nl> - Memory . purge ( ) ; <nl> + for ( int i = 0 ; i < GCWaits . GC _ WAITS & & ref . get ( ) ! = null ; i + + ) { <nl> + GCWaits . gcRun ( ) ; <nl> } <nl> assertNotNull ( " Memory GC ' d while NIO Buffer still exists " , ref . get ( ) ) ; <nl> <nl> @ @ - 161 , 10 + 157 , 8 @ @ public class MemoryTest extends TestCase implements GCWaits { <nl> b = null ; <nl> System . gc ( ) ; <nl> Memory . purge ( ) ; <nl> - for ( int i = 0 ; i < GC _ WAITS & & ( bref . get ( ) ! = null | | ref . get ( ) ! = null ) ; i + + ) { <nl> - Thread . sleep ( GC _ WAIT _ INTERVAL ) ; <nl> - System . gc ( ) ; <nl> - Memory . purge ( ) ; <nl> + for ( int i = 0 ; i < GCWaits . GC _ WAITS & & ( bref . get ( ) ! = null | | ref . get ( ) ! = null ) ; i + + ) { <nl> + GCWaits . gcRun ( ) ; <nl> } <nl> assertNull ( " Buffer not GC ' d \ n " , bref . get ( ) ) ; <nl> assertNull ( " Memory not GC ' d after buffer GC ' d \ n " , ref . get ( ) ) ;
diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index e857206 . . cd97041 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 1060 , 7 + 1060 , 11 @ @ get _ java _ type ( JNIEnv * env , jclass cls ) { <nl> <nl> jlong <nl> getIntegerTypeValue ( JNIEnv * env , jobject obj ) { <nl> - return ( * env ) - > GetLongField ( env , obj , FID _ IntegerType _ value ) ; <nl> + if ( obj = = NULL ) { <nl> + return 0 ; <nl> + } else { <nl> + return ( * env ) - > GetLongField ( env , obj , FID _ IntegerType _ value ) ; <nl> + } <nl> } <nl> <nl> void * <nl> diff - - git a / test / com / sun / jna / ArgumentsMarshalNullableTest . java b / test / com / sun / jna / ArgumentsMarshalNullableTest . java <nl> new file mode 100644 <nl> index 0000000 . . a55b9c5 <nl> - - - / dev / null <nl> + + + b / test / com / sun / jna / ArgumentsMarshalNullableTest . java <nl> @ @ - 0 , 0 + 1 , 227 @ @ <nl> + / * Copyright ( c ) 2018 Matthias Bl ä sing , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> + package com . sun . jna ; <nl> + <nl> + <nl> + import java . util . Collections ; <nl> + import junit . framework . TestCase ; <nl> + <nl> + / * * <nl> + * Test that all method call options for native calls work with NULL values <nl> + * and result in deterministic behaviour and not in a JVM crash . <nl> + * / <nl> + public class ArgumentsMarshalNullableTest extends TestCase { <nl> + public static class Int32Integer extends IntegerType { <nl> + <nl> + public Int32Integer ( ) { <nl> + super ( 4 ) ; <nl> + } <nl> + <nl> + public Int32Integer ( long value ) { <nl> + super ( 4 , value ) ; <nl> + } <nl> + <nl> + } <nl> + <nl> + <nl> + public static class Int32NativeMapped implements NativeMapped { <nl> + private int value ; <nl> + <nl> + public Int32NativeMapped ( ) { } ; <nl> + <nl> + public Int32NativeMapped ( int value ) { <nl> + this . value = value ; <nl> + } <nl> + <nl> + public Object fromNative ( Object nativeValue , FromNativeContext context ) { <nl> + if ( nativeValue instanceof Integer ) { <nl> + return new Int32NativeMapped ( ( Integer ) nativeValue ) ; <nl> + } else { <nl> + return null ; <nl> + } <nl> + } <nl> + <nl> + public Object toNative ( ) { <nl> + return value ; <nl> + } <nl> + <nl> + public Class < ? > nativeType ( ) { <nl> + return int . class ; <nl> + } <nl> + <nl> + @ Override <nl> + public String toString ( ) { <nl> + return " Int32NativeMapped { " + " value = " + value + ' } ' ; <nl> + } <nl> + <nl> + @ Override <nl> + public int hashCode ( ) { <nl> + int hash = 7 ; <nl> + hash = 59 * hash + this . value ; <nl> + return hash ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean equals ( Object obj ) { <nl> + if ( this = = obj ) { <nl> + return true ; <nl> + } <nl> + if ( obj = = null ) { <nl> + return false ; <nl> + } <nl> + if ( getClass ( ) ! = obj . getClass ( ) ) { <nl> + return false ; <nl> + } <nl> + final Int32NativeMapped other = ( Int32NativeMapped ) obj ; <nl> + if ( this . value ! = other . value ) { <nl> + return false ; <nl> + } <nl> + return true ; <nl> + } <nl> + } <nl> + <nl> + public static class Int32 { <nl> + public static final FromNativeConverter fromNative = new FromNativeConverter ( ) { <nl> + public Object fromNative ( Object nativeValue , FromNativeContext context ) { <nl> + if ( nativeValue instanceof Integer ) { <nl> + return new Int32 ( ( Integer ) nativeValue ) ; <nl> + } else { <nl> + return null ; <nl> + } <nl> + } <nl> + <nl> + public Class < ? > nativeType ( ) { <nl> + return int . class ; <nl> + } <nl> + } ; <nl> + <nl> + public static final ToNativeConverter toNative = new ToNativeConverter ( ) { <nl> + public Object toNative ( Object value , ToNativeContext context ) { <nl> + if ( value = = null ) { <nl> + return 0 ; <nl> + } else { <nl> + return ( ( Int32 ) value ) . value ; <nl> + } <nl> + } <nl> + <nl> + public Class < ? > nativeType ( ) { <nl> + return int . class ; <nl> + } <nl> + } ; <nl> + <nl> + private int value ; <nl> + <nl> + public Int32 ( ) { <nl> + } <nl> + <nl> + public Int32 ( int value ) { <nl> + this . value = value ; <nl> + } <nl> + <nl> + @ Override <nl> + public int hashCode ( ) { <nl> + int hash = 7 ; <nl> + hash = 53 * hash + this . value ; <nl> + return hash ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean equals ( Object obj ) { <nl> + if ( this = = obj ) { <nl> + return true ; <nl> + } <nl> + if ( obj = = null ) { <nl> + return false ; <nl> + } <nl> + if ( getClass ( ) ! = obj . getClass ( ) ) { <nl> + return false ; <nl> + } <nl> + final Int32 other = ( Int32 ) obj ; <nl> + if ( this . value ! = other . value ) { <nl> + return false ; <nl> + } <nl> + return true ; <nl> + } <nl> + <nl> + @ Override <nl> + public String toString ( ) { <nl> + return " Int32 { " + " value = " + value + ' } ' ; <nl> + } <nl> + } <nl> + <nl> + public static interface TestLibrary extends Library { <nl> + Int32NativeMapped returnInt32Argument ( Int32NativeMapped i ) ; <nl> + Int32Integer returnInt32Argument ( Int32Integer i ) ; <nl> + Int32 returnInt32Argument ( Int32 i ) ; <nl> + } <nl> + <nl> + TestLibrary lib ; <nl> + @ Override <nl> + protected void setUp ( ) { <nl> + lib = Native . loadLibrary ( " testlib " , TestLibrary . class , <nl> + Collections . singletonMap ( Library . OPTION _ TYPE _ MAPPER , new TypeMapper ( ) { <nl> + public FromNativeConverter getFromNativeConverter ( Class < ? > javaType ) { <nl> + if ( javaType = = Int32 . class ) { <nl> + return Int32 . fromNative ; <nl> + } else { <nl> + return null ; <nl> + } <nl> + } <nl> + <nl> + public ToNativeConverter getToNativeConverter ( Class < ? > javaType ) { <nl> + if ( javaType = = Int32 . class ) { <nl> + return Int32 . toNative ; <nl> + } else { <nl> + return null ; <nl> + } <nl> + } <nl> + } ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + protected void tearDown ( ) { <nl> + lib = null ; <nl> + } <nl> + <nl> + <nl> + public void testNativeMapped ( ) { <nl> + assertEquals ( " Basic non - null call " , new Int32NativeMapped ( 42 ) , lib . returnInt32Argument ( new Int32NativeMapped ( 42 ) ) ) ; <nl> + assertEquals ( " null call " , new Int32NativeMapped ( 0 ) , lib . returnInt32Argument ( ( Int32NativeMapped ) null ) ) ; <nl> + } <nl> + <nl> + public void testIntegerType ( ) { <nl> + assertEquals ( " Basic non - null call " , new Int32Integer ( 42 ) , lib . returnInt32Argument ( new Int32Integer ( 42 ) ) ) ; <nl> + assertEquals ( " null call " , new Int32Integer ( 0 ) , lib . returnInt32Argument ( ( Int32Integer ) null ) ) ; <nl> + } <nl> + <nl> + public void testTypeMapper ( ) { <nl> + assertEquals ( " Basic non - null call " , new Int32 ( 42 ) , lib . returnInt32Argument ( new Int32 ( 42 ) ) ) ; <nl> + assertEquals ( " null call " , new Int32 ( 0 ) , lib . returnInt32Argument ( ( Int32 ) null ) ) ; <nl> + } <nl> + <nl> + public static void main ( java . lang . String [ ] argList ) { <nl> + junit . textui . TestRunner . run ( ArgumentsMarshalNullableTest . class ) ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / test / com / sun / jna / DirectArgumentsMarshalNullableTest . java b / test / com / sun / jna / DirectArgumentsMarshalNullableTest . java <nl> new file mode 100644 <nl> index 0000000 . . bde6b42 <nl> - - - / dev / null <nl> + + + b / test / com / sun / jna / DirectArgumentsMarshalNullableTest . java <nl> @ @ - 0 , 0 + 1 , 73 @ @ <nl> + / * Copyright ( c ) 2018 Matthias Bl ä sing , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> + package com . sun . jna ; <nl> + <nl> + import java . util . Collections ; <nl> + <nl> + / * * <nl> + * Variant of { @ link ArgumentsMarshalNullableTest } for direct mapped interfaces . <nl> + * / <nl> + public class DirectArgumentsMarshalNullableTest extends ArgumentsMarshalNullableTest { <nl> + <nl> + public static class DirectTestLibrary implements TestLibrary { <nl> + <nl> + public native Int32NativeMapped returnInt32Argument ( Int32NativeMapped i ) ; <nl> + <nl> + public native Int32Integer returnInt32Argument ( Int32Integer i ) ; <nl> + <nl> + public native Int32 returnInt32Argument ( Int32 i ) ; <nl> + <nl> + static { <nl> + NativeLibrary library = NativeLibrary . getInstance ( " testlib " , Collections . singletonMap ( Library . OPTION _ TYPE _ MAPPER , new TypeMapper ( ) { <nl> + public FromNativeConverter getFromNativeConverter ( Class < ? > javaType ) { <nl> + if ( javaType = = Int32 . class ) { <nl> + return Int32 . fromNative ; <nl> + } else { <nl> + return null ; <nl> + } <nl> + } <nl> + <nl> + public ToNativeConverter getToNativeConverter ( Class < ? > javaType ) { <nl> + if ( javaType = = Int32 . class ) { <nl> + return Int32 . toNative ; <nl> + } else { <nl> + return null ; <nl> + } <nl> + } <nl> + } ) ) ; <nl> + Native . register ( library ) ; <nl> + } <nl> + } <nl> + <nl> + / * Override original . * / <nl> + @ Override <nl> + protected void setUp ( ) { <nl> + lib = new DirectTestLibrary ( ) ; <nl> + } <nl> + <nl> + public static void main ( java . lang . String [ ] argList ) { <nl> + junit . textui . TestRunner . run ( DirectArgumentsMarshalNullableTest . class ) ; <nl> + } <nl> + <nl> + }
diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index 22b9f84 . . a9734e2 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 959 , 22 + 959 , 29 @ @ public class NativeLibrary { <nl> * / <nl> private static ArrayList < String > getLinuxLdPaths ( ) { <nl> ArrayList < String > ldPaths = new ArrayList < String > ( ) ; <nl> + BufferedReader reader = null ; <nl> try { <nl> - Process process = Runtime . getRuntime ( ) . exec ( " / sbin / ldconfig - p " ) ; <nl> - BufferedReader reader = new BufferedReader ( new InputStreamReader ( process . getInputStream ( ) ) ) ; <nl> - String buffer = " " ; <nl> - while ( ( buffer = reader . readLine ( ) ) ! = null ) { <nl> - int startPath = buffer . indexOf ( " = > " ) ; <nl> - int endPath = buffer . lastIndexOf ( ' / ' ) ; <nl> - if ( startPath ! = - 1 & & endPath ! = - 1 & & startPath < endPath ) { <nl> - String path = buffer . substring ( startPath + 4 , endPath ) ; <nl> - if ( ldPaths . contains ( path ) = = false ) { <nl> - ldPaths . add ( path ) ; <nl> - } <nl> - } <nl> + Process process = Runtime . getRuntime ( ) . exec ( " / sbin / ldconfig - p " ) ; <nl> + reader = new BufferedReader ( new InputStreamReader ( process . getInputStream ( ) ) ) ; <nl> + String buffer ; <nl> + while ( ( buffer = reader . readLine ( ) ) ! = null ) { <nl> + int startPath = buffer . indexOf ( " = > " ) ; <nl> + int endPath = buffer . lastIndexOf ( ' / ' ) ; <nl> + if ( startPath ! = - 1 & & endPath ! = - 1 & & startPath < endPath ) { <nl> + String path = buffer . substring ( startPath + 4 , endPath ) ; <nl> + if ( ! ldPaths . contains ( path ) ) { <nl> + ldPaths . add ( path ) ; <nl> + } <nl> } <nl> - reader . close ( ) ; <nl> + } <nl> } catch ( Exception e ) { <nl> + } finally { <nl> + if ( reader ! = null ) { <nl> + try { <nl> + reader . close ( ) ; <nl> + } catch ( IOException e ) { <nl> + } <nl> + } <nl> } <nl> return ldPaths ; <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 7be5836 . . 2ed375e 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 7 , 6 + 7 , 7 @ @ Release 5 . 0 . 0 ( Next release ) <nl> <nl> Features <nl> - - - - - - - - <nl> + * [ # 903 ] ( https : / / github . com / java - native - access / jna / pull / 903 ) : Carry ` HRESULT ` in ` c . s . j . p . win32 . COM . COMException ` , introduce ` c . s . j . p . win32 . COM . COMInvokeException ` as subclass of ` COMException ` for exception as the result of a ` IDispatch # Invoke ` . The ` EXECPINFO ` is unwrapped into fields in the ` COMInvokeException ` and correctly freed . - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 822 ] ( https : / / github . com / java - native - access / jna / issues / 822 ) : ` Native # loadLibrary ` requires that the interface class passed in is an instance of Library . The runtime check can be enhanced by using a constraint generic . This breaks binary compatibility ( see notes below ) - [ @ d - noll ] ( https : / / github . com / d - noll ) . <nl> * [ # 889 ] ( https : / / github . com / java - native - access / jna / issues / 889 ) : The ` Structure # newInstance ` receive the target type as a parameter . This adds a limited generic type , so that the return type ist the target type and not a generic structure , removing the necessity to do an explizit cast - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> @ @ - 69 , 6 + 70 , 9 @ @ Breaking Changes <nl> * ` com . sun . jna . platform . win32 . Kernel32Util . formatMessageFromHR ( HRESULT ) ` <nl> was replaced by <nl> ` com . sun . jna . platform . win32 . Kernel32Util . formatMessage ( HRESULT ) ` <nl> + * ` com . sun . jna . platform . win32 . COM . COMException ` was structurally modified . The <nl> + ` pExcepInfo ` and ` puArgErr ` members were removed and ` hresult ` member was added . <nl> + The now missing information in ` COMException ` was moved to ` COMInvokeException ` . <nl> <nl> Release 4 . 5 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java b / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java <nl> index 3230182 . . 372aa0d 100644 <nl> - - - a / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java <nl> + + + b / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ package com . sun . jna . platform . win32 . COM . office ; <nl> import com . sun . jna . Pointer ; <nl> <nl> import com . sun . jna . platform . win32 . COM . COMException ; <nl> + import com . sun . jna . platform . win32 . COM . COMInvokeException ; <nl> import com . sun . jna . platform . win32 . COM . Helper ; <nl> import com . sun . jna . platform . win32 . Ole32 ; <nl> import com . sun . jna . platform . win32 . WinDef . LONG ; <nl> @ @ - 102 , 11 + 103 , 10 @ @ public class MSOfficeDemo { <nl> msWord . insertText ( " Hello some changes from JNA ! \ n " ) ; <nl> / / save the document and prompt the user <nl> msWord . Save ( false , wdPromptUser ) ; <nl> + } catch ( COMInvokeException e ) { <nl> + System . out . println ( " bstrSource : " + e . getSource ( ) ) ; <nl> + System . out . println ( " bstrDescription : " + e . getDescription ( ) ) ; <nl> } catch ( COMException e ) { <nl> - if ( e . getExcepInfo ( ) ! = null ) { <nl> - System . out . println ( " bstrSource : " + e . getExcepInfo ( ) . bstrSource ) ; <nl> - System . out . println ( " bstrDescription : " + e . getExcepInfo ( ) . bstrDescription ) ; <nl> - } <nl> } finally { <nl> if ( msWord ! = null ) { <nl> msWord . quit ( ) ;
diff - - git a / contrib / platform / nbproject / project . properties b / contrib / platform / nbproject / project . properties <nl> index 2a65ed9 . . 2f595ee 100644 <nl> - - - a / contrib / platform / nbproject / project . properties <nl> + + + b / contrib / platform / nbproject / project . properties <nl> @ @ - 1 , 40 + 1 , 63 @ @ <nl> + annotation . processing . enabled = true <nl> + annotation . processing . enabled . in . editor = false <nl> + annotation . processing . processors . list = <nl> + annotation . processing . run . all . processors = true <nl> application . args = <nl> + application . title = jna - platform <nl> + application . vendor = JNA project <nl> build . classes . dir = $ { build . dir } / classes <nl> build . classes . excludes = * * / * . java <nl> # This directory is removed when the project is cleaned : <nl> build . dir = build <nl> build . generated . dir = $ { build . dir } / generated <nl> + build . generated . sources . dir = $ { build . dir } / generated - sources <nl> # Only compile against the classpath explicitly listed here : <nl> build . sysclasspath = ignore <nl> build . test . classes . dir = $ { build . dir } / test / classes <nl> build . test . results . dir = $ { build . dir } / test / results <nl> debug . classpath = \ <nl> $ { run . classpath } <nl> + debug . modulepath = \ <nl> + $ { run . modulepath } <nl> debug . test . classpath = \ <nl> $ { run . test . classpath } <nl> + debug . test . modulepath = \ <nl> + $ { run . test . modulepath } <nl> # This directory is removed when the project is cleaned : <nl> dist . dir = dist <nl> dist . jar = $ { dist . dir } / jna - platform . jar <nl> dist . javadoc . dir = $ { dist . dir } / javadoc <nl> + endorsed . classpath = <nl> + excludes = <nl> + file . reference . hamcrest - core - 1 . 3 . jar = . . / . . / lib / hamcrest - core - 1 . 3 . jar <nl> file . reference . jna . jar = . . / . . / build / jna . jar <nl> file . reference . jna - test . jar = . . / . . / build / jna - test . jar <nl> - libs . junit . classpath = \ <nl> - 	 . . / . . / lib / junit . jar : \ <nl> - 	 . . / . . / lib / hamcrest - core - 1 . 3 . jar <nl> + file . reference . junit . jar = . . / . . / lib / junit . jar <nl> + includes = * * <nl> + javac . external . vm = false <nl> + javac . modulepath = <nl> + javac . processormodulepath = <nl> + javac . processorpath = \ <nl> + $ { javac . classpath } <nl> + javac . test . modulepath = \ <nl> + $ { javac . modulepath } <nl> + javadoc . html5 = false <nl> + jlink . launcher = false <nl> + jlink . launcher . name = platform <nl> jar . compress = false <nl> javac . classpath = \ <nl> - $ { file . reference . jna . jar } : \ <nl> - $ { file . reference . jna . build } / test - classes <nl> + $ { file . reference . jna . jar } <nl> # Space - separated list of extra javac options <nl> javac . compilerargs = <nl> javac . deprecation = false <nl> - javac . source = 1 . 5 <nl> - javac . target = 1 . 5 <nl> + javac . source = 1 . 6 <nl> + javac . target = 1 . 6 <nl> javac . test . classpath = \ <nl> $ { javac . classpath } : \ <nl> $ { file . reference . jna - test . jar } : \ <nl> $ { build . classes . dir } : \ <nl> - $ { libs . junit . classpath } <nl> + $ { file . reference . junit . jar } : \ <nl> + $ { file . reference . hamcrest - core - 1 . 3 . jar } <nl> javadoc . additionalparam = <nl> javadoc . author = false <nl> javadoc . encoding = <nl> @ @ - 49 , 6 + 72 , 7 @ @ javadoc . windowtitle = <nl> main . class = <nl> manifest . file = manifest . mf <nl> meta . inf . dir = $ { src . dir } / META - INF <nl> + mkdist . disabled = false <nl> platform . active = default _ platform <nl> run . classpath = \ <nl> $ { javac . classpath } : \ <nl> @ @ - 57 , 6 + 81 , 8 @ @ run . classpath = \ <nl> # ( you may also define separate properties like run - sys - prop . name = value instead of - Dname = value <nl> # or test - sys - prop . name = value to set system properties for unit tests ) : <nl> run . jvmargs = <nl> + run . modulepath = \ <nl> + $ { javac . modulepath } <nl> run . test . classpath = \ <nl> $ { javac . test . classpath } : \ <nl> . . / . . / lib / test / reflections - 0 . 9 . 8 . jar : \ <nl> @ @ - 65 , 7 + 91 , 9 @ @ run . test . classpath = \ <nl> . . / . . / lib / test / slf4j - api - 1 . 6 . 1 . jar : \ <nl> . . / . . / lib / test / dom4j - 1 . 6 . 1 . jar : \ <nl> $ { build . test . classes . dir } <nl> + run . test . modulepath = \ <nl> + $ { javac . test . modulepath } <nl> src . dir = src <nl> test . src . dir = test <nl> source . encoding = UTF - 8 <nl> - file . encoding = UTF - 8 <nl> \ No newline at end of file <nl> + file . encoding = UTF - 8
diff - - git a / README . md b / README . md <nl> index e0f0212 . . 40b4829 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 22 , 7 + 22 , 7 @ @ Projects Using JNA <nl> JNA is a mature library with dozens of contributors and hundreds of commercial and non - commercial projects that use it . If you ' re using JNA , feel free to [ tell us about it ] ( http : / / groups . google . com / group / jna - users ) . Include some details about your company , project name , purpose and size and tell us how you use the library . <nl> <nl> - [ Apache Cassandra ] ( http : / / cassandra . apache . org ) : Large - scale NoSQL data store . <nl> - - [ Rococoa ] ( http : / / rococoa . dev . java . net ) : Java bindings to the Mac OS X Cocoa framework , by Duncan McGregor . <nl> + - [ Rococoa ] ( https : / / github . com / iterate - ch / rococoa ) : Java bindings to the Mac OS X Cocoa framework , by Duncan McGregor . <nl> - [ jna - posix ] ( http : / / kenai . com / projects / jna - posix ) : Common POSIX Functions for Java . <nl> - [ JNAerator ] ( https : / / github . com / nativelibs4java / JNAerator ) : Pronounced " generator " , auto - generates JNA mappings from C headers , by Olivier Chafik . <nl> - [ Freedom for Media in Java ] ( http : / / fmj . sf . net ) by Ken Larson / Dieter Krachtus .
diff - - git a / CHANGES . md b / CHANGES . md <nl> index a8d0f98 . . 7be5836 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 7 , 6 + 7 , 8 @ @ Release 5 . 0 . 0 ( Next release ) <nl> <nl> Features <nl> - - - - - - - - <nl> + * [ # 822 ] ( https : / / github . com / java - native - access / jna / issues / 822 ) : ` Native # loadLibrary ` requires that the interface class passed in is an instance of Library . The runtime check can be enhanced by using a constraint generic . This breaks binary compatibility ( see notes below ) - [ @ d - noll ] ( https : / / github . com / d - noll ) . <nl> + * [ # 889 ] ( https : / / github . com / java - native - access / jna / issues / 889 ) : The ` Structure # newInstance ` receive the target type as a parameter . This adds a limited generic type , so that the return type ist the target type and not a generic structure , removing the necessity to do an explizit cast - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Winevt . java b / contrib / platform / src / com / sun / jna / platform / win32 / Winevt . java <nl> index 9ce7d5c . . 71a46e0 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Winevt . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Winevt . java <nl> @ @ - 488 , 7 + 488 , 7 @ @ public interface Winevt { <nl> return isArray ( ) ? field1 . getPointer ( ) . getPointer ( 0 ) . getWideStringArray ( 0 , Count ) : field1 . getPointer ( ) . getPointer ( 0 ) . getWideString ( 0 ) ; <nl> case EvtVarTypeFileTime : <nl> if ( isArray ( ) ) { <nl> - WinBase . FILETIME resultFirst = ( WinBase . FILETIME ) Structure . newInstance ( WinBase . FILETIME . class , field1 . getPointer ( ) . getPointer ( 0 ) ) ; <nl> + WinBase . FILETIME resultFirst = Structure . newInstance ( WinBase . FILETIME . class , field1 . getPointer ( ) . getPointer ( 0 ) ) ; <nl> resultFirst . read ( ) ; <nl> return resultFirst . toArray ( Count ) ; <nl> } else { <nl> @ @ - 498 , 11 + 498 , 11 @ @ public interface Winevt { <nl> } <nl> case EvtVarTypeSysTime : <nl> if ( isArray ( ) ) { <nl> - WinBase . SYSTEMTIME resultFirst = ( WinBase . SYSTEMTIME ) Structure . newInstance ( WinBase . SYSTEMTIME . class , field1 . getPointer ( ) . getPointer ( 0 ) ) ; <nl> + WinBase . SYSTEMTIME resultFirst = Structure . newInstance ( WinBase . SYSTEMTIME . class , field1 . getPointer ( ) . getPointer ( 0 ) ) ; <nl> resultFirst . read ( ) ; <nl> return resultFirst . toArray ( Count ) ; <nl> } else { <nl> - WinBase . SYSTEMTIME result = ( WinBase . SYSTEMTIME ) Structure . newInstance ( WinBase . SYSTEMTIME . class , field1 . getPointer ( ) . getPointer ( 0 ) ) ; <nl> + WinBase . SYSTEMTIME result = Structure . newInstance ( WinBase . SYSTEMTIME . class , field1 . getPointer ( ) . getPointer ( 0 ) ) ; <nl> result . read ( ) ; <nl> return result ; <nl> } <nl> @ @ - 531 , 21 + 531 , 21 @ @ public interface Winevt { <nl> return null ; <nl> case EvtVarTypeGuid : <nl> if ( isArray ( ) ) { <nl> - Guid . GUID resultFirst = ( Guid . GUID ) Structure . newInstance ( Guid . GUID . class , field1 . getPointer ( ) . getPointer ( 0 ) ) ; <nl> + Guid . GUID resultFirst = Structure . newInstance ( Guid . GUID . class , field1 . getPointer ( ) . getPointer ( 0 ) ) ; <nl> resultFirst . read ( ) ; <nl> return resultFirst . toArray ( Count ) ; <nl> } else { <nl> - Guid . GUID result = ( Guid . GUID ) Structure . newInstance ( Guid . GUID . class , field1 . getPointer ( ) . getPointer ( 0 ) ) ; <nl> + Guid . GUID result = Structure . newInstance ( Guid . GUID . class , field1 . getPointer ( ) . getPointer ( 0 ) ) ; <nl> result . read ( ) ; <nl> return result ; <nl> } <nl> case EvtVarTypeSid : <nl> if ( isArray ( ) ) { <nl> - WinNT . PSID resultFirst = ( WinNT . PSID ) Structure . newInstance ( WinNT . PSID . class , field1 . getPointer ( ) . getPointer ( 0 ) ) ; <nl> + WinNT . PSID resultFirst = Structure . newInstance ( WinNT . PSID . class , field1 . getPointer ( ) . getPointer ( 0 ) ) ; <nl> resultFirst . read ( ) ; <nl> return resultFirst . toArray ( Count ) ; <nl> } else { <nl> - WinNT . PSID result = ( WinNT . PSID ) Structure . newInstance ( WinNT . PSID . class , field1 . getPointer ( ) . getPointer ( 0 ) ) ; <nl> + WinNT . PSID result = Structure . newInstance ( WinNT . PSID . class , field1 . getPointer ( ) . getPointer ( 0 ) ) ; <nl> result . read ( ) ; <nl> return result ; <nl> } <nl> diff - - git a / src / com / sun / jna / CallbackReference . java b / src / com / sun / jna / CallbackReference . java <nl> index 5c9d62c . . 8fcb347 100644 <nl> - - - a / src / com / sun / jna / CallbackReference . java <nl> + + + b / src / com / sun / jna / CallbackReference . java <nl> @ @ - 272 , 7 + 272 , 7 @ @ public class CallbackReference extends WeakReference < Callback > { <nl> private Class < ? > getNativeType ( Class < ? > cls ) { <nl> if ( Structure . class . isAssignableFrom ( cls ) ) { <nl> / / Make sure we can instantiate an argument of this type <nl> - Structure . validate ( cls ) ; <nl> + Structure . validate ( ( Class < ? extends Structure > ) cls ) ; <nl> if ( ! Structure . ByValue . class . isAssignableFrom ( cls ) ) <nl> return Pointer . class ; <nl> } else if ( NativeMapped . class . isAssignableFrom ( cls ) ) { <nl> @ @ - 580 , 14 + 580 , 14 @ @ public class CallbackReference extends WeakReference < Callback > { <nl> / / If passed by value , don ' t hold onto the pointer , which <nl> / / is only valid for the duration of the callback call <nl> if ( Structure . ByValue . class . isAssignableFrom ( dstType ) ) { <nl> - Structure s = Structure . newInstance ( dstType ) ; <nl> + Structure s = Structure . newInstance ( ( Class < ? extends Structure > ) dstType ) ; <nl> byte [ ] buf = new byte [ s . size ( ) ] ; <nl> ( ( Pointer ) value ) . read ( 0 , buf , 0 , buf . length ) ; <nl> s . getPointer ( ) . write ( 0 , buf , 0 , buf . length ) ; <nl> s . read ( ) ; <nl> value = s ; <nl> } else { <nl> - Structure s = Structure . newInstance ( dstType , ( Pointer ) value ) ; <nl> + Structure s = Structure . newInstance ( ( Class < ? extends Structure > ) dstType , ( Pointer ) value ) ; <nl> s . conditionalAutoRead ( ) ; <nl> value = s ; <nl> } <nl> diff - - git a / src / com / sun / jna / Function . java b / src / com / sun / jna / Function . java <nl> index 795901d . . 2d31827 100644 <nl> - - - a / src / com / sun / jna / Function . java <nl> + + + b / src / com / sun / jna / Function . java <nl> @ @ - 378 , 11 + 378 , 11 @ @ public class Function extends Pointer { <nl> if ( args [ i ] instanceof PointerArray ) { <nl> PointerArray array = ( PointerArray ) args [ i ] ; <nl> if ( Structure . ByReference [ ] . class . isAssignableFrom ( inArg . getClass ( ) ) ) { <nl> - Class < ? > type = inArg . getClass ( ) . getComponentType ( ) ; <nl> + Class < ? extends Structure > type = ( Class < ? extends Structure > ) inArg . getClass ( ) . getComponentType ( ) ; <nl> Structure [ ] ss = ( Structure [ ] ) inArg ; <nl> for ( int si = 0 ; si < ss . length ; si + + ) { <nl> Pointer p = array . getPointer ( Native . POINTER _ SIZE * si ) ; <nl> - ss [ si ] = Structure . updateStructureByReference ( type , ss [ si ] , p ) ; <nl> + ss [ si ] = Structure . updateStructureByReference ( ( Class < Structure > ) type , ss [ si ] , p ) ; <nl> } <nl> } <nl> } <nl> @ @ - 436 , 13 + 436 , 13 @ @ public class Function extends Pointer { <nl> if ( Structure . ByValue . class . isAssignableFrom ( returnType ) ) { <nl> Structure s = <nl> Native . invokeStructure ( this , this . peer , callFlags , args , <nl> - Structure . newInstance ( returnType ) ) ; <nl> + Structure . newInstance ( ( Class < ? extends Structure > ) returnType ) ) ; <nl> s . autoRead ( ) ; <nl> result = s ; <nl> } else { <nl> result = invokePointer ( callFlags , args ) ; <nl> if ( result ! = null ) { <nl> - Structure s = Structure . newInstance ( returnType , ( Pointer ) result ) ; <nl> + Structure s = Structure . newInstance ( ( Class < ? extends Structure > ) returnType , ( Pointer ) result ) ; <nl> s . conditionalAutoRead ( ) ; <nl> result = s ; <nl> } <nl> @ @ - 604 , 7 + 604 , 7 @ @ public class Function extends Pointer { <nl> } else if ( ss . length = = 0 ) { <nl> throw new IllegalArgumentException ( " Structure array must have non - zero length " ) ; <nl> } else if ( ss [ 0 ] = = null ) { <nl> - Structure . newInstance ( type ) . toArray ( ss ) ; <nl> + Structure . newInstance ( ( Class < ? extends Structure > ) type ) . toArray ( ss ) ; <nl> return ss [ 0 ] . getPointer ( ) ; <nl> } else { <nl> Structure . autoWrite ( ss ) ; <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 33e8e56 . . ae80566 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 1241 , 7 + 1241 , 7 @ @ public final class Native implements Version { <nl> } <nl> if ( Structure . class . isAssignableFrom ( type ) <nl> & & ! Structure . ByReference . class . isAssignableFrom ( type ) ) { <nl> - return Structure . size ( type , ( Structure ) value ) ; <nl> + return Structure . size ( ( Class < Structure > ) type , ( Structure ) value ) ; <nl> } <nl> try { <nl> return getNativeSize ( type ) ; <nl> @ @ - 1276 , 7 + 1276 , 7 @ @ public final class Native implements Version { <nl> if ( cls = = double . class | | cls = = Double . class ) return 8 ; <nl> if ( Structure . class . isAssignableFrom ( cls ) ) { <nl> if ( Structure . ByValue . class . isAssignableFrom ( cls ) ) { <nl> - return Structure . size ( cls ) ; <nl> + return Structure . size ( ( Class < ? extends Structure > ) cls ) ; <nl> } <nl> return POINTER _ SIZE ; <nl> } <nl> diff - - git a / src / com / sun / jna / Pointer . java b / src / com / sun / jna / Pointer . java <nl> index 16ad03f . . c111f9a 100644 <nl> - - - a / src / com / sun / jna / Pointer . java <nl> + + + b / src / com / sun / jna / Pointer . java <nl> @ @ - 363 , 7 + 363 , 7 @ @ public class Pointer { <nl> if ( Structure . class . isAssignableFrom ( type ) ) { <nl> Structure s = ( Structure ) currentValue ; <nl> if ( Structure . ByReference . class . isAssignableFrom ( type ) ) { <nl> - s = Structure . updateStructureByReference ( type , s , getPointer ( offset ) ) ; <nl> + s = Structure . updateStructureByReference ( ( Class < Structure > ) type , s , getPointer ( offset ) ) ; <nl> } else { <nl> s . useMemory ( this , ( int ) offset , true ) ; <nl> s . read ( ) ; <nl> @ @ - 488 , 13 + 488 , 13 @ @ public class Pointer { <nl> if ( Structure . ByReference . class . isAssignableFrom ( cls ) ) { <nl> Pointer [ ] parray = getPointerArray ( offset , sarray . length ) ; <nl> for ( int i = 0 ; i < sarray . length ; i + + ) { <nl> - sarray [ i ] = Structure . updateStructureByReference ( cls , sarray [ i ] , parray [ i ] ) ; <nl> + sarray [ i ] = Structure . updateStructureByReference ( ( Class < Structure > ) cls , sarray [ i ] , parray [ i ] ) ; <nl> } <nl> } <nl> else { <nl> Structure first = sarray [ 0 ] ; <nl> if ( first = = null ) { <nl> - first = Structure . newInstance ( cls , share ( offset ) ) ; <nl> + first = Structure . newInstance ( ( Class < Structure > ) cls , share ( offset ) ) ; <nl> first . conditionalAutoRead ( ) ; <nl> sarray [ 0 ] = first ; <nl> } <nl> @ @ - 940 , 7 + 940 , 7 @ @ public class Pointer { <nl> } else { <nl> Structure first = sbuf [ 0 ] ; <nl> if ( first = = null ) { <nl> - first = Structure . newInstance ( cls , share ( offset ) ) ; <nl> + first = Structure . newInstance ( ( Class < Structure > ) cls , share ( offset ) ) ; <nl> sbuf [ 0 ] = first ; <nl> } else { <nl> first . useMemory ( this , ( int ) offset , true ) ; <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index 5e4b7f7 . . 13f3c14 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 662 , 7 + 662 , 7 @ @ public abstract class Structure { <nl> * @ param address the native < code > struct * < / code > <nl> * @ return Updated < code > Structure . ByReference < / code > object <nl> * / <nl> - static Structure updateStructureByReference ( Class < ? > type , Structure s , Pointer address ) { <nl> + static < T extends Structure > T updateStructureByReference ( Class < T > type , T s , Pointer address ) { <nl> if ( address = = null ) { <nl> s = null ; <nl> } <nl> @ @ - 670 , 7 + 670 , 7 @ @ public abstract class Structure { <nl> if ( s = = null | | ! address . equals ( s . getPointer ( ) ) ) { <nl> Structure s1 = reading ( ) . get ( address ) ; <nl> if ( s1 ! = null & & type . equals ( s1 . getClass ( ) ) ) { <nl> - s = s1 ; <nl> + s = ( T ) s1 ; <nl> s . autoRead ( ) ; <nl> } <nl> else { <nl> @ @ - 1042 , 7 + 1042 , 7 @ @ public abstract class Structure { <nl> * @ param type Structure subclass to check <nl> * @ return native size of the given Structure subclass <nl> * / <nl> - static int size ( Class < ? > type ) { <nl> + static int size ( Class < ? extends Structure > type ) { <nl> return size ( type , null ) ; <nl> } <nl> <nl> @ @ - 1051 , 7 + 1051 , 7 @ @ public abstract class Structure { <nl> * @ param value optional instance of the given class <nl> * @ return native size of the Structure subclass <nl> * / <nl> - static int size ( Class < ? > type , Structure value ) { <nl> + static < T extends Structure > int size ( Class < T > type , T value ) { <nl> LayoutInfo info ; <nl> synchronized ( layoutInfo ) { <nl> info = layoutInfo . get ( type ) ; <nl> @ @ - 1329 , 7 + 1329 , 7 @ @ public abstract class Structure { <nl> if ( Structure . class . isAssignableFrom ( type ) <nl> & & ! ( ByReference . class . isAssignableFrom ( type ) ) ) { <nl> try { <nl> - value = newInstance ( type , PLACEHOLDER _ MEMORY ) ; <nl> + value = newInstance ( ( Class < ? extends Structure > ) type , PLACEHOLDER _ MEMORY ) ; <nl> setFieldValue ( field , value ) ; <nl> } <nl> catch ( IllegalArgumentException e ) { <nl> @ @ - 1408 , 7 + 1408 , 7 @ @ public abstract class Structure { <nl> } <nl> else { <nl> if ( value = = null ) <nl> - value = newInstance ( type , PLACEHOLDER _ MEMORY ) ; <nl> + value = newInstance ( ( Class < ? extends Structure > ) type , PLACEHOLDER _ MEMORY ) ; <nl> alignment = ( ( Structure ) value ) . getStructAlignment ( ) ; <nl> } <nl> } <nl> @ @ - 1744 , 9 + 1744 , 9 @ @ public abstract class Structure { <nl> * # newInstance ( Class , Pointer ) } , except that it additionally calls <nl> * { @ link # conditionalAutoRead ( ) } . <nl> * / <nl> - private static Structure newInstance ( Class < ? > type , long init ) { <nl> + private static < T extends Structure > T newInstance ( Class < T > type , long init ) { <nl> try { <nl> - Structure s = newInstance ( type , init = = 0 ? PLACEHOLDER _ MEMORY : new Pointer ( init ) ) ; <nl> + T s = newInstance ( type , init = = 0 ? PLACEHOLDER _ MEMORY : new Pointer ( init ) ) ; <nl> if ( init ! = 0 ) { <nl> s . conditionalAutoRead ( ) ; <nl> } <nl> @ @ - 1765 , 10 + 1765 , 10 @ @ public abstract class Structure { <nl> * @ return the new instance <nl> * @ throws IllegalArgumentException if the instantiation fails <nl> * / <nl> - public static Structure newInstance ( Class < ? > type , Pointer init ) throws IllegalArgumentException { <nl> + public static < T extends Structure > T newInstance ( Class < T > type , Pointer init ) throws IllegalArgumentException { <nl> try { <nl> - Constructor < ? > ctor = type . getConstructor ( Pointer . class ) ; <nl> - return ( Structure ) ctor . newInstance ( init ) ; <nl> + Constructor < T > ctor = type . getConstructor ( Pointer . class ) ; <nl> + return ctor . newInstance ( init ) ; <nl> } <nl> catch ( NoSuchMethodException e ) { <nl> / / Not defined , fall back to the default <nl> @ @ - 1789 , 7 + 1789 , 7 @ @ public abstract class Structure { <nl> e . printStackTrace ( ) ; <nl> throw new IllegalArgumentException ( msg , e ) ; <nl> } <nl> - Structure s = newInstance ( type ) ; <nl> + T s = newInstance ( type ) ; <nl> if ( init ! = PLACEHOLDER _ MEMORY ) { <nl> s . useMemory ( init ) ; <nl> } <nl> @ @ - 1801 , 9 + 1801 , 9 @ @ public abstract class Structure { <nl> * @ return the new instance <nl> * @ throws IllegalArgumentException if the instantiation fails <nl> * / <nl> - public static Structure newInstance ( Class < ? > type ) throws IllegalArgumentException { <nl> + public static < T extends Structure > T newInstance ( Class < T > type ) throws IllegalArgumentException { <nl> try { <nl> - Structure s = ( Structure ) type . newInstance ( ) ; <nl> + T s = type . newInstance ( ) ; <nl> if ( s instanceof ByValue ) { <nl> s . allocateMemory ( ) ; <nl> } <nl> @ @ - 1993 , 7 + 1993 , 7 @ @ public abstract class Structure { <nl> return FFITypes . ffi _ type _ pointer ; <nl> } <nl> if ( Structure . class . isAssignableFrom ( cls ) ) { <nl> - if ( obj = = null ) obj = newInstance ( cls , PLACEHOLDER _ MEMORY ) ; <nl> + if ( obj = = null ) obj = newInstance ( ( Class < ? extends Structure > ) cls , PLACEHOLDER _ MEMORY ) ; <nl> if ( ByReference . class . isAssignableFrom ( cls ) ) { <nl> typeInfoMap . put ( cls , FFITypes . ffi _ type _ pointer ) ; <nl> return FFITypes . ffi _ type _ pointer ; <nl> @ @ - 2124 , 7 + 2124 , 7 @ @ public abstract class Structure { <nl> / * * Indicate whether the given Structure class can be created by JNA . <nl> * @ param cls Structure subclass to check <nl> * / <nl> - static void validate ( Class < ? > cls ) { <nl> + static void validate ( Class < ? extends Structure > cls ) { <nl> Structure . newInstance ( cls , PLACEHOLDER _ MEMORY ) ; <nl> } <nl> } <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index 21f80f6 . . 1752672 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 281 , 7 + 281 , 7 @ @ public class StructureTest extends TestCase { <nl> private void testStructureSize ( int index ) { <nl> try { <nl> SizeTest lib = Native . loadLibrary ( " testlib " , SizeTest . class ) ; <nl> - Class < ? > cls = Class . forName ( getClass ( ) . getName ( ) + " $ TestStructure " + index ) ; <nl> + Class < ? extends Structure > cls = ( Class < ? extends Structure > ) Class . forName ( getClass ( ) . getName ( ) + " $ TestStructure " + index ) ; <nl> Structure s = Structure . newInstance ( cls ) ; <nl> assertEquals ( " Incorrect size for structure " + index + " = > " + s . toString ( true ) , lib . getStructureSize ( index ) , s . size ( ) ) ; <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index f583b76 . . a8d0f98 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 18 , 6 + 18 , 7 @ @ Bug Fixes <nl> * [ # 876 ] ( https : / / github . com / java - native - access / jna / pull / 876 ) : Restore java 6 compatibility - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 882 ] ( https : / / github . com / java - native - access / jna / pull / 882 ) : Correctly close file in ` ELFAnalyser # runDetection ` , fix suggested by [ @ Sylvyrfysh ] ( https : / / github . com / Sylvyrfysh ) in [ # 880 ] ( https : / / github . com / java - native - access / jna / pull / 880 ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 887 ] ( https : / / github . com / java - native - access / jna / issues / 887 ) : MacFileUtils . moveToTrash ( ) doesn ' t work in a sandboxed app fix suggested by [ @ sobakasu ] ( https : / / github . com / sobakasu ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 894 ] ( https : / / github . com / java - native - access / jna / issues / 894 ) : NullPointerException can be caused by calling ` com . sun . jna . platform . win32 . COM . util . ProxyObject # dispose ` multiple times - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Breaking Changes <nl> - - - - - - - - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> index 40560a6 . . 9ffd41f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> @ @ - 34 , 7 + 34 , 6 @ @ import com . sun . jna . WString ; <nl> import com . sun . jna . platform . win32 . Guid ; <nl> import com . sun . jna . platform . win32 . Guid . IID ; <nl> import com . sun . jna . platform . win32 . Guid . REFIID ; <nl> - import com . sun . jna . platform . win32 . Kernel32 ; <nl> import com . sun . jna . platform . win32 . Kernel32Util ; <nl> import com . sun . jna . platform . win32 . OaIdl ; <nl> import com . sun . jna . platform . win32 . OaIdl . DISPID ; <nl> @ @ - 46 , 7 + 45 , 6 @ @ import com . sun . jna . platform . win32 . Variant ; <nl> import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> import com . sun . jna . platform . win32 . WinDef ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> - import com . sun . jna . platform . win32 . WinDef . LCID ; <nl> import com . sun . jna . platform . win32 . WinNT ; <nl> import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> import com . sun . jna . platform . win32 . COM . COMException ; <nl> @ @ - 134 , 7 + 132 , 7 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 } <nl> <nl> 	 public synchronized void dispose ( ) { <nl> - 	 	 if ( ! ( ( Dispatch ) this . rawDispatch ) . getPointer ( ) . equals ( Pointer . NULL ) ) { <nl> + 	 	 if ( ( ( Dispatch ) this . rawDispatch ) . getPointer ( ) ! = Pointer . NULL ) { <nl> 	 	 	 this . rawDispatch . Release ( ) ; <nl> ( ( Dispatch ) this . rawDispatch ) . setPointer ( Pointer . NULL ) ; <nl> factory . unregister ( this ) ; <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectFactory _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectFactory _ Test . java <nl> index 5ac09cf . . 65dc709 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectFactory _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectFactory _ Test . java <nl> @ @ - 12 , 7 + 12 , 6 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> - import com . sun . jna . Pointer ; <nl> import static org . junit . Assert . * ; <nl> <nl> import java . io . File ; <nl> @ @ - 25 , 7 + 24 , 6 @ @ import com . sun . jna . platform . win32 . COM . util . annotation . ComInterface ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComObject ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComMethod ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComProperty ; <nl> - import com . sun . jna . platform . win32 . Ole32 ; <nl> <nl> public class ProxyObjectFactory _ Test { <nl> <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectObjectFactory _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectObjectFactory _ Test . java <nl> index 4b6ccee . . 36f4ef6 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectObjectFactory _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObjectObjectFactory _ Test . java <nl> @ @ - 15 , 6 + 15 , 8 @ @ package com . sun . jna . platform . win32 . COM . util ; <nl> import com . sun . jna . Pointer ; <nl> import static org . junit . Assert . * ; <nl> <nl> + import java . lang . reflect . Proxy ; <nl> + <nl> import java . io . File ; <nl> <nl> import org . junit . After ; <nl> @ @ - 156 , 7 + 158 , 8 @ @ public class ProxyObjectObjectFactory _ Test { <nl> 	 @ Test <nl> 	 public void accessWhilstDisposing ( ) { <nl> 	 	 MsWordApp comObj1 = this . factory . createObject ( MsWordApp . class ) ; <nl> - 	 	 <nl> + 	 	 comObj1 . Quit ( ) ; <nl> + <nl> 	 	 / / TODO : how to test this ? <nl> 	 	 <nl> 	 	 this . factory . disposeAll ( ) ; <nl> @ @ - 186 , 4 + 189 , 13 @ @ public class ProxyObjectObjectFactory _ Test { <nl> 	 	 boolean wasDeleted = new File ( " abcdefg . pdf " ) . delete ( ) ; <nl> 	 	 assertTrue ( wasDeleted ) ; <nl> 	 } <nl> + <nl> + <nl> + 	 @ Test <nl> + 	 public void testDisposeMustBeCallableMultipleTimes ( ) { <nl> + 	 	 MsWordApp comObj = this . factory . createObject ( MsWordApp . class ) ; <nl> + comObj . Quit ( ) ; <nl> + ( ( ProxyObject ) Proxy . getInvocationHandler ( comObj ) ) . dispose ( ) ; <nl> + ( ( ProxyObject ) Proxy . getInvocationHandler ( comObj ) ) . dispose ( ) ; <nl> + 	 } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 6016125 . . 2c4e968 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 16 , 6 + 16 , 7 @ @ Bug Fixes <nl> * [ # 867 ] ( https : / / github . com / java - native - access / jna / issues / 867 ) : Fix memory leak in ` COMLateBindingObject # getStringProperty ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 871 ] ( https : / / github . com / java - native - access / jna / issues / 871 ) : Fix mapping of libc function ` gethostname ` , ` sethostname ` , ` getdomainname ` and ` setdomainname ` and bind ` com . sun . jna . platform . win32 . Winsock2 . gethostname ( byte [ ] , int ) ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 876 ] ( https : / / github . com / java - native - access / jna / pull / 876 ) : Restore java 6 compatibility - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 882 ] ( https : / / github . com / java - native - access / jna / pull / 882 ) : Correctly close file in ` ELFAnalyser # runDetection ` , fix suggested by [ @ Sylvyrfysh ] ( https : / / github . com / Sylvyrfysh ) in [ # 880 ] ( https : / / github . com / java - native - access / jna / pull / 880 ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Breaking Changes <nl> - - - - - - - - - - - - - - - - <nl> diff - - git a / src / com / sun / jna / ELFAnalyser . java b / src / com / sun / jna / ELFAnalyser . java <nl> index 6e7d990 . . ba84382 100644 <nl> - - - a / src / com / sun / jna / ELFAnalyser . java <nl> + + + b / src / com / sun / jna / ELFAnalyser . java <nl> @ @ - 104 , 37 + 104 , 45 @ @ class ELFAnalyser { <nl> } <nl> <nl> private void runDetection ( ) throws IOException { <nl> - / / run precheck - only of if the file at least hold an ELF header parsing <nl> - / / runs further . <nl> RandomAccessFile raf = new RandomAccessFile ( filename , " r " ) ; <nl> - if ( raf . length ( ) > 4 ) { <nl> - byte [ ] magic = new byte [ 4 ] ; <nl> - raf . seek ( 0 ) ; <nl> - raf . read ( magic ) ; <nl> - if ( Arrays . equals ( magic , ELF _ MAGIC ) ) { <nl> - ELF = true ; <nl> + try { <nl> + / / run precheck - only of if the file at least hold an ELF header parsing <nl> + / / runs further . <nl> + if ( raf . length ( ) > 4 ) { <nl> + byte [ ] magic = new byte [ 4 ] ; <nl> + raf . seek ( 0 ) ; <nl> + raf . read ( magic ) ; <nl> + if ( Arrays . equals ( magic , ELF _ MAGIC ) ) { <nl> + ELF = true ; <nl> + } <nl> } <nl> - } <nl> - if ( ! ELF ) { <nl> - return ; <nl> - } <nl> - raf . seek ( 4 ) ; <nl> - / / The total header size depends on the pointer size of the platform <nl> - / / so before the header is loaded the pointer size has to be determined <nl> - byte sizeIndicator = raf . readByte ( ) ; <nl> - _ 64Bit = sizeIndicator = = EI _ CLASS _ 64BIT ; <nl> - raf . seek ( 0 ) ; <nl> - ByteBuffer headerData = ByteBuffer . allocate ( _ 64Bit ? 64 : 52 ) ; <nl> - raf . getChannel ( ) . read ( headerData , 0 ) ; <nl> - bigEndian = headerData . get ( 5 ) = = EI _ DATA _ BIG _ ENDIAN ; <nl> - headerData . order ( bigEndian ? ByteOrder . BIG _ ENDIAN : ByteOrder . LITTLE _ ENDIAN ) ; <nl> + if ( ! ELF ) { <nl> + return ; <nl> + } <nl> + raf . seek ( 4 ) ; <nl> + / / The total header size depends on the pointer size of the platform <nl> + / / so before the header is loaded the pointer size has to be determined <nl> + byte sizeIndicator = raf . readByte ( ) ; <nl> + _ 64Bit = sizeIndicator = = EI _ CLASS _ 64BIT ; <nl> + raf . seek ( 0 ) ; <nl> + ByteBuffer headerData = ByteBuffer . allocate ( _ 64Bit ? 64 : 52 ) ; <nl> + raf . getChannel ( ) . read ( headerData , 0 ) ; <nl> + bigEndian = headerData . get ( 5 ) = = EI _ DATA _ BIG _ ENDIAN ; <nl> + headerData . order ( bigEndian ? ByteOrder . BIG _ ENDIAN : ByteOrder . LITTLE _ ENDIAN ) ; <nl> + <nl> + arm = headerData . get ( 0x12 ) = = E _ MACHINE _ ARM ; <nl> <nl> - arm = headerData . get ( 0x12 ) = = E _ MACHINE _ ARM ; <nl> - <nl> - if ( arm ) { <nl> - int flags = headerData . getInt ( _ 64Bit ? 0x30 : 0x24 ) ; <nl> - armHardFloat = ( flags & EF _ ARM _ ABI _ FLOAT _ HARD ) = = EF _ ARM _ ABI _ FLOAT _ HARD ; <nl> - armSoftFloat = ! armHardFloat ; <nl> + if ( arm ) { <nl> + int flags = headerData . getInt ( _ 64Bit ? 0x30 : 0x24 ) ; <nl> + armHardFloat = ( flags & EF _ ARM _ ABI _ FLOAT _ HARD ) = = EF _ ARM _ ABI _ FLOAT _ HARD ; <nl> + armSoftFloat = ! armHardFloat ; <nl> + } <nl> + } finally { <nl> + try { <nl> + raf . close ( ) ; <nl> + } catch ( IOException ex ) { <nl> + / / Swallow - closing <nl> + } <nl> } <nl> } <nl> }
diff - - git a / test / com / sun / jna / ELFAnalyserTest . java b / test / com / sun / jna / ELFAnalyserTest . java <nl> index b1ce5c6 . . fb65a21 100644 <nl> - - - a / test / com / sun / jna / ELFAnalyserTest . java <nl> + + + b / test / com / sun / jna / ELFAnalyserTest . java <nl> @ @ - 2 , 9 + 2 , 6 @ @ <nl> package com . sun . jna ; <nl> <nl> import java . io . * ; <nl> - import java . nio . file . CopyOption ; <nl> - import java . nio . file . Files ; <nl> - import java . nio . file . StandardCopyOption ; <nl> import java . util . zip . ZipEntry ; <nl> import java . util . zip . ZipFile ; <nl> import org . junit . AfterClass ; <nl> @ @ - 15 , 14 + 12 , 13 @ @ import org . junit . Test ; <nl> <nl> <nl> public class ELFAnalyserTest { <nl> - <nl> <nl> - private static File testResources = new File ( " build / test - resources " ) ; <nl> - private static File win32Lib = new File ( testResources , " win32 - x86 - 64 . dll " ) ; <nl> - private static File linuxArmelLib = new File ( testResources , " linux - armel . so " ) ; <nl> - private static File linuxArmelNoflagLib = new File ( testResources , " linux - armel - noflag . so " ) ; <nl> - private static File linuxArmhfLib = new File ( testResources , " linux - armhf . so " ) ; <nl> - private static File linuxAmd64Lib = new File ( testResources , " linux - amd64 . so " ) ; <nl> + private static final File TEST _ RESOURCES = new File ( " build / test - resources " ) ; <nl> + private static final File WIN32 _ LIB = new File ( TEST _ RESOURCES , " win32 - x86 - 64 . dll " ) ; <nl> + private static final File LINUX _ ARMEL _ LIB = new File ( TEST _ RESOURCES , " linux - armel . so " ) ; <nl> + private static final File LINUX _ ARMEL _ NOFLAG _ LIG = new File ( TEST _ RESOURCES , " linux - armel - noflag . so " ) ; <nl> + private static final File LINUX _ ARMHF _ LIB = new File ( TEST _ RESOURCES , " linux - armhf . so " ) ; <nl> + private static final File LINUX _ AMD64 _ LIB = new File ( TEST _ RESOURCES , " linux - amd64 . so " ) ; <nl> <nl> @ BeforeClass <nl> public static void initClass ( ) throws IOException { <nl> @ @ - 31 , 24 + 27 , 24 @ @ public class ELFAnalyserTest { <nl> File linuxArmhfZip = new File ( " dist / linux - arm . jar " ) ; <nl> File linuxAmd64Zip = new File ( " dist / linux - x86 - 64 . jar " ) ; <nl> <nl> - testResources . mkdirs ( ) ; <nl> + TEST _ RESOURCES . mkdirs ( ) ; <nl> <nl> - extractFileFromZip ( win32Zip , " jnidispatch . dll " , win32Lib ) ; <nl> - extractFileFromZip ( linuxArmelZip , " libjnidispatch . so " , linuxArmelLib ) ; <nl> - extractFileFromZip ( linuxArmhfZip , " libjnidispatch . so " , linuxArmhfLib ) ; <nl> - extractFileFromZip ( linuxAmd64Zip , " libjnidispatch . so " , linuxAmd64Lib ) ; <nl> - makeLinuxArmelNoflagLib ( linuxArmelLib , linuxArmelNoflagLib ) ; <nl> + extractFileFromZip ( win32Zip , " jnidispatch . dll " , WIN32 _ LIB ) ; <nl> + extractFileFromZip ( linuxArmelZip , " libjnidispatch . so " , LINUX _ ARMEL _ LIB ) ; <nl> + extractFileFromZip ( linuxArmhfZip , " libjnidispatch . so " , LINUX _ ARMHF _ LIB ) ; <nl> + extractFileFromZip ( linuxAmd64Zip , " libjnidispatch . so " , LINUX _ AMD64 _ LIB ) ; <nl> + makeLinuxArmelNoflagLib ( LINUX _ ARMEL _ LIB , LINUX _ ARMEL _ NOFLAG _ LIG ) ; <nl> } <nl> <nl> @ Test <nl> public void testNonELF ( ) throws IOException { <nl> - ELFAnalyser ahfd = ELFAnalyser . analyse ( win32Lib . getAbsolutePath ( ) ) ; <nl> + ELFAnalyser ahfd = ELFAnalyser . analyse ( WIN32 _ LIB . getAbsolutePath ( ) ) ; <nl> assertFalse ( ahfd . isELF ( ) ) ; <nl> } <nl> <nl> @ Test <nl> public void testNonArm ( ) throws IOException { <nl> - ELFAnalyser ahfd = ELFAnalyser . analyse ( linuxAmd64Lib . getAbsolutePath ( ) ) ; <nl> + ELFAnalyser ahfd = ELFAnalyser . analyse ( LINUX _ AMD64 _ LIB . getAbsolutePath ( ) ) ; <nl> assertTrue ( ahfd . isELF ( ) ) ; <nl> assertFalse ( ahfd . isArm ( ) ) ; <nl> assertTrue ( ahfd . is64Bit ( ) ) ; <nl> @ @ - 56 , 7 + 52 , 7 @ @ public class ELFAnalyserTest { <nl> <nl> @ Test <nl> public void testArmhf ( ) throws IOException { <nl> - ELFAnalyser ahfd = ELFAnalyser . analyse ( linuxArmhfLib . getAbsolutePath ( ) ) ; <nl> + ELFAnalyser ahfd = ELFAnalyser . analyse ( LINUX _ ARMHF _ LIB . getAbsolutePath ( ) ) ; <nl> assertTrue ( ahfd . isELF ( ) ) ; <nl> assertTrue ( ahfd . isArm ( ) ) ; <nl> assertFalse ( ahfd . is64Bit ( ) ) ; <nl> @ @ - 66 , 7 + 62 , 7 @ @ public class ELFAnalyserTest { <nl> <nl> @ Test <nl> public void testArmel ( ) throws IOException { <nl> - ELFAnalyser ahfd = ELFAnalyser . analyse ( linuxArmelLib . getAbsolutePath ( ) ) ; <nl> + ELFAnalyser ahfd = ELFAnalyser . analyse ( LINUX _ ARMEL _ LIB . getAbsolutePath ( ) ) ; <nl> assertTrue ( ahfd . isELF ( ) ) ; <nl> assertTrue ( ahfd . isArm ( ) ) ; <nl> assertFalse ( ahfd . is64Bit ( ) ) ; <nl> @ @ - 76 , 7 + 72 , 7 @ @ public class ELFAnalyserTest { <nl> <nl> @ Test <nl> public void testArmelNoflag ( ) throws IOException { <nl> - ELFAnalyser ahfd = ELFAnalyser . analyse ( linuxArmelNoflagLib . getAbsolutePath ( ) ) ; <nl> + ELFAnalyser ahfd = ELFAnalyser . analyse ( LINUX _ ARMEL _ NOFLAG _ LIG . getAbsolutePath ( ) ) ; <nl> assertTrue ( ahfd . isELF ( ) ) ; <nl> assertTrue ( ahfd . isArm ( ) ) ; <nl> assertFalse ( ahfd . is64Bit ( ) ) ; <nl> @ @ - 86 , 12 + 82 , 12 @ @ public class ELFAnalyserTest { <nl> <nl> @ AfterClass <nl> public static void afterClass ( ) throws IOException { <nl> - linuxAmd64Lib . delete ( ) ; <nl> - linuxArmhfLib . delete ( ) ; <nl> - linuxArmelLib . delete ( ) ; <nl> - win32Lib . delete ( ) ; <nl> - linuxArmelNoflagLib . delete ( ) ; <nl> - testResources . delete ( ) ; <nl> + LINUX _ AMD64 _ LIB . delete ( ) ; <nl> + LINUX _ ARMHF _ LIB . delete ( ) ; <nl> + LINUX _ ARMEL _ LIB . delete ( ) ; <nl> + WIN32 _ LIB . delete ( ) ; <nl> + LINUX _ ARMEL _ NOFLAG _ LIG . delete ( ) ; <nl> + TEST _ RESOURCES . delete ( ) ; <nl> } <nl> <nl> private static void extractFileFromZip ( File zipTarget , String zipEntryName , File outputFile ) throws IOException { <nl> @ @ - 104 , 11 + 100 , 7 @ @ public class ELFAnalyserTest { <nl> InputStream is = zip . getInputStream ( entry ) ; / / Implicitly closed by closing ZipFile <nl> OutputStream os = new FileOutputStream ( outputFile ) ; <nl> try { <nl> - int read ; <nl> - byte [ ] buffer = new byte [ 1024 * 1024 ] ; <nl> - while ( ( read = is . read ( buffer ) ) > 0 ) { <nl> - os . write ( buffer , 0 , read ) ; <nl> - } <nl> + copyStream ( is , os ) ; <nl> } finally { <nl> os . close ( ) ; <nl> } <nl> @ @ - 121 , 7 + 113 , 8 @ @ public class ELFAnalyserTest { <nl> / / The procedure call standard is coded on the second byte . <nl> private static void makeLinuxArmelNoflagLib ( File sourceFile , File outputFile ) throws IOException { <nl> final int POS _ ABI _ FLOAT _ BIT = ( byte ) 0x25 ; <nl> - Files . copy ( sourceFile . toPath ( ) , outputFile . toPath ( ) , StandardCopyOption . REPLACE _ EXISTING ) ; <nl> + copyFile ( sourceFile , outputFile ) ; <nl> + <nl> RandomAccessFile out = new RandomAccessFile ( outputFile , " rw " ) ; <nl> <nl> out . seek ( POS _ ABI _ FLOAT _ BIT ) ; <nl> @ @ - 129 , 5 + 122 , 35 @ @ public class ELFAnalyserTest { <nl> <nl> out . close ( ) ; <nl> } <nl> + <nl> + private static void copyFile ( File sourceFile , File outputFile ) throws IOException { <nl> + InputStream inputStream = null ; <nl> + OutputStream outputStream = null ; <nl> + try { <nl> + inputStream = new FileInputStream ( sourceFile ) ; <nl> + outputStream = new FileOutputStream ( outputFile ) ; <nl> + copyStream ( inputStream , outputStream ) ; <nl> + } finally { <nl> + closeSilently ( inputStream ) ; <nl> + closeSilently ( outputStream ) ; <nl> + } <nl> + } <nl> + <nl> + private static void copyStream ( InputStream is , OutputStream os ) throws IOException { <nl> + int read ; <nl> + byte [ ] buffer = new byte [ 1024 * 1024 ] ; <nl> + while ( ( read = is . read ( buffer ) ) > 0 ) { <nl> + os . write ( buffer , 0 , read ) ; <nl> + } <nl> + } <nl> + <nl> + private static void closeSilently ( Closeable closeable ) { <nl> + if ( closeable = = null ) { <nl> + return ; <nl> + } <nl> + try { <nl> + closeable . close ( ) ; <nl> + } catch ( IOException ex ) { } <nl> + } <nl> } <nl>
diff - - git a / www / WindowsDevelopmentEnvironment . md b / www / WindowsDevelopmentEnvironment . md <nl> index 57f49f3 . . b94d2a5 100644 <nl> - - - a / www / WindowsDevelopmentEnvironment . md <nl> + + + b / www / WindowsDevelopmentEnvironment . md <nl> @ @ - 1 , 16 + 1 , 16 @ @ <nl> - # # Setting up a Windows Development Environment <nl> + Setting up a Windows Development Environment <nl> + = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - # # # # Java <nl> + Java <nl> + - - - - <nl> <nl> For a 32 - bit build , set ` JAVA _ HOME ` to a 32 - bit JDK , eg . ` C : \ Program Files ( x86 ) \ java \ jdk1 . 6 . 0 _ 24 ` . <nl> For a 64 - bit build , set ` JAVA _ HOME ` to a 64 - bit JDK , eg . ` C : \ Program Files \ java \ jdk1 . 6 . 0 _ 24 ` . <nl> <nl> - # # # # Native <nl> - <nl> - MSVC <nl> - - - - - <nl> + Native <nl> + - - - - - - <nl> <nl> - # # # # Visual Studio <nl> + # # # MSVC / Visual Studio <nl> <nl> JNA uses the free MS Visual Studio C + + Express compiler to compile <nl> native bits if MSVC is set in the environment . The MS compiler provides <nl> @ @ - 38 , 7 + 38 , 7 @ @ export LIB = " $ ( cygpath - m " $ MSVC " ) / lib / amd64 ; $ ( cygpath - m " $ WSDK _ 64 " ) / lib / x64 " <nl> export LIB = " $ ( cygpath - m " $ MSVC " ) / lib ; $ ( cygpath - m " $ WSDK " ) / lib " <nl> ` ` ` <nl> <nl> - # # # # mingw <nl> + # # # mingw <nl> <nl> Install [ cygwin ] ( http : / / www . cygwin . com / ) . <nl> <nl> @ @ - 65 , 21 + 65 , 23 @ @ Recipe for building on windows <nl> This is the contents of a note I made for myself to be able to build JNA on <nl> windows . <nl> <nl> + This builds the library based on the Visual C + + compiler . <nl> + <nl> < pre > <nl> - 0 . Start - Point : A clean Windows 10 Installation with all patches as of 2016 - 06 - 10 <nl> + 0 . Start - Point : A clean Windows 10 Installation with all patches as of 2017 - 11 - 05 <nl> 1 . Install Visual C + + Build Tools 2015 ( http : / / landinghub . visualstudio . com / visual - cpp - build - tools ) ( the 8 . 1 SDK is enough ) <nl> - 2 . Install Oracle JDK 8u121 ( 64 bit ) <nl> - 3 . Install Cygwin ( https : / / cygwin . com / install . html ) <nl> + 2 . Install Oracle JDK 8u152 ( 64 bit ) <nl> + 3 . Install Cygwin 64 Bit ( https : / / cygwin . com / install . html ) <nl> 	 - make <nl> 	 - automake <nl> 	 - automake1 . 15 <nl> 	 - libtool <nl> - 	 - mingw64 - x86 _ 64 - gcc - g + + ( Version 5 . 4 . 0 - 3 ) <nl> - 	 - mingw64 - x86 _ 64 - gcc - core ( Version 5 . 4 . 0 - 2 ) <nl> + 	 - mingw64 - x86 _ 64 - gcc - g + + ( Version 5 . 4 . 0 - 4 ) <nl> + 	 - mingw64 - x86 _ 64 - gcc - core ( Version 5 . 4 . 0 - 4 ) <nl> 	 - gcc - g + + <nl> 	 - diffutils <nl> - git <nl> - 4 . Ensure ant , maven , cygwin are accessible from the PATH <nl> + 4 . Ensure ant , maven , cygwin ( 64 Bit ! ) are accessible from the PATH <nl> 5 . Run <nl> 	 " C : \ Program Files ( x86 ) \ Microsoft Visual C + + Build Tools \ vcbuildtools . bat " x64 <nl> inside a windows command prompt <nl> @ @ - 88 , 14 + 90 , 25 @ @ windows . <nl> <nl> For 32bit : <nl> <nl> - - Install : <nl> - - mingw64 - i686 - gcc - g + + ( Version 5 . 4 . 0 - 3 ) <nl> - - mingw64 - i686 - gcc - core ( Version 5 . 4 . 0 - 2 ) <nl> - - Modify the recipe : <nl> - - Step 2 : <nl> - Install JDK 8u121 ( 32 bit ) <nl> - - Step 5 : <nl> - " C : \ Program Files ( x86 ) \ Microsoft Visual C + + Build Tools \ vcbuildtools . bat " x86 <nl> - - Step 6 : <nl> - Point JAVA _ HOME to the root of a 32 Bit JDK <nl> - < / pre > <nl> \ No newline at end of file <nl> + 0 . Start - Point : A clean Windows 10 Installation with all patches as of 2017 - 11 - 05 <nl> + 1 . Install Visual C + + Build Tools 2015 ( http : / / landinghub . visualstudio . com / visual - cpp - build - tools ) ( the 8 . 1 SDK is enough ) <nl> + 2 . Install Oracle JDK 8u152 ( 32 bit ) <nl> + 3 . Install Cygwin 32 Bit ( https : / / cygwin . com / install . html ) <nl> + 	 - make <nl> + 	 - automake <nl> + 	 - automake1 . 15 <nl> + 	 - libtool <nl> + - mingw64 - i686 - gcc - g + + ( Version 5 . 4 . 0 - 4 ) <nl> + - mingw64 - i686 - gcc - core ( Version 5 . 4 . 0 - 4 ) <nl> + 	 - gcc - g + + <nl> + 	 - diffutils <nl> + - git <nl> + 4 . Ensure ant , maven , cygwin ( 32 Bit ! ) are accessible from the PATH <nl> + 5 . Run <nl> + 	 " C : \ Program Files ( x86 ) \ Microsoft Visual C + + Build Tools \ vcbuildtools . bat " x86 <nl> + inside a windows command prompt <nl> + 6 . Point JAVA _ HOME to the root of a 32 Bit JDK <nl> + 7 . Run native build <nl> + < / pre > <nl> + <nl> + To build without Visual C + + , using only Cygwin , just skip steps 1 and 5 . <nl> \ No newline at end of file
diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java <nl> index 483ecc6 . . 7a5a29c 100644 <nl> - - - a / src / com / sun / jna / Platform . java <nl> + + + b / src / com / sun / jna / Platform . java <nl> @ @ - 130 , 7 + 130 , 7 @ @ public final class Platform { <nl> C _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " c " ; <nl> MATH _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " m " ; <nl> HAS _ DLL _ CALLBACKS = osType = = WINDOWS ; <nl> - 	 ARCH = getCanonicalArchitecture ( System . getProperty ( " os . arch " ) ) ; <nl> + 	 ARCH = getCanonicalArchitecture ( System . getProperty ( " os . arch " ) , osType ) ; <nl> RESOURCE _ PREFIX = getNativeLibraryResourcePrefix ( ) ; <nl> } <nl> private Platform ( ) { } <nl> @ @ - 236 , 7 + 236 , 7 @ @ public final class Platform { <nl> return false ; <nl> } <nl> <nl> - static String getCanonicalArchitecture ( String arch ) { <nl> + static String getCanonicalArchitecture ( String arch , int platform ) { <nl> 	 arch = arch . toLowerCase ( ) . trim ( ) ; <nl> if ( " powerpc " . equals ( arch ) ) { <nl> arch = " ppc " ; <nl> @ @ - 256 , 7 + 256 , 7 @ @ public final class Platform { <nl> 	 arch = " ppc64le " ; <nl> 	 } <nl> / / Map arm to armel if the binary is running as softfloat build <nl> - if ( " arm " . equals ( arch ) & & isSoftFloat ( ) ) { <nl> + if ( " arm " . equals ( arch ) & & platform = = Platform . LINUX & & isSoftFloat ( ) ) { <nl> arch = " armel " ; <nl> } <nl> <nl> @ @ - 300 , 7 + 300 , 7 @ @ public final class Platform { <nl> * / <nl> static String getNativeLibraryResourcePrefix ( int osType , String arch , String name ) { <nl> String osPrefix ; <nl> - arch = getCanonicalArchitecture ( arch ) ; <nl> + arch = getCanonicalArchitecture ( arch , osType ) ; <nl> switch ( osType ) { <nl> case Platform . ANDROID : <nl> if ( arch . startsWith ( " arm " ) ) {
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 4388f98 . . 6c16a70 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 12 , 7 + 12 , 7 @ @ Bug Fixes <nl> - - - - - - - - - <nl> * [ # 652 ] ( https : / / github . com / java - native - access / jna / issues / 652 ) : Dead Lock in class initialization - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 843 ] ( https : / / github . com / java - native - access / jna / pull / 843 ) : Correctly bind ` com . sun . jna . platform . win32 . SecBufferDesc ` and add convenience binding as ` com . sun . jna . platform . win32 . SspiUtil . ManagedSecBufferDesc ` . Bind SSPI functions ` InitializeSecurityContext ` , ` AcceptSecurityContext ` , ` QueryCredentialsAttributes ` , ` QuerySecurityPackageInfo ` , ` EncryptMessage ` , ` DecryptMessage ` , ` MakeSignature ` , ` VerifySignature ` in ` com . sun . jna . platform . win32 . Secur32 ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> - <nl> + * [ # 863 ] ( https : / / github . com / java - native - access / jna / pull / 863 ) : change armSoftFloat condition in ELFAnalyser - [ @ kunkun26 ] ( https : / / github . com / kunkun26 ) . <nl> <nl> Breaking Changes <nl> - - - - - - - - - - - - - - - - <nl> diff - - git a / src / com / sun / jna / ELFAnalyser . java b / src / com / sun / jna / ELFAnalyser . java <nl> index c3eed79 . . 6e7d990 100644 <nl> - - - a / src / com / sun / jna / ELFAnalyser . java <nl> + + + b / src / com / sun / jna / ELFAnalyser . java <nl> @ @ - 133 , 8 + 133 , 8 @ @ class ELFAnalyser { <nl> <nl> if ( arm ) { <nl> int flags = headerData . getInt ( _ 64Bit ? 0x30 : 0x24 ) ; <nl> - armSoftFloat = ( flags & EF _ ARM _ ABI _ FLOAT _ SOFT ) = = EF _ ARM _ ABI _ FLOAT _ SOFT ; <nl> armHardFloat = ( flags & EF _ ARM _ ABI _ FLOAT _ HARD ) = = EF _ ARM _ ABI _ FLOAT _ HARD ; <nl> + armSoftFloat = ! armHardFloat ; <nl> } <nl> } <nl> } <nl> diff - - git a / test / com / sun / jna / ELFAnalyserTest . java b / test / com / sun / jna / ELFAnalyserTest . java <nl> index 9367cc9 . . b1ce5c6 100644 <nl> - - - a / test / com / sun / jna / ELFAnalyserTest . java <nl> + + + b / test / com / sun / jna / ELFAnalyserTest . java <nl> @ @ - 1 , 11 + 1 , 10 @ @ <nl> <nl> package com . sun . jna ; <nl> <nl> - import java . io . File ; <nl> - import java . io . FileOutputStream ; <nl> - import java . io . IOException ; <nl> - import java . io . InputStream ; <nl> - import java . io . OutputStream ; <nl> + import java . io . * ; <nl> + import java . nio . file . CopyOption ; <nl> + import java . nio . file . Files ; <nl> + import java . nio . file . StandardCopyOption ; <nl> import java . util . zip . ZipEntry ; <nl> import java . util . zip . ZipFile ; <nl> import org . junit . AfterClass ; <nl> @ @ - 21 , 6 + 20 , 7 @ @ public class ELFAnalyserTest { <nl> private static File testResources = new File ( " build / test - resources " ) ; <nl> private static File win32Lib = new File ( testResources , " win32 - x86 - 64 . dll " ) ; <nl> private static File linuxArmelLib = new File ( testResources , " linux - armel . so " ) ; <nl> + private static File linuxArmelNoflagLib = new File ( testResources , " linux - armel - noflag . so " ) ; <nl> private static File linuxArmhfLib = new File ( testResources , " linux - armhf . so " ) ; <nl> private static File linuxAmd64Lib = new File ( testResources , " linux - amd64 . so " ) ; <nl> <nl> @ @ - 37 , 6 + 37 , 7 @ @ public class ELFAnalyserTest { <nl> extractFileFromZip ( linuxArmelZip , " libjnidispatch . so " , linuxArmelLib ) ; <nl> extractFileFromZip ( linuxArmhfZip , " libjnidispatch . so " , linuxArmhfLib ) ; <nl> extractFileFromZip ( linuxAmd64Zip , " libjnidispatch . so " , linuxAmd64Lib ) ; <nl> + makeLinuxArmelNoflagLib ( linuxArmelLib , linuxArmelNoflagLib ) ; <nl> } <nl> <nl> @ Test <nl> @ @ - 72 , 6 + 73 , 16 @ @ public class ELFAnalyserTest { <nl> assertTrue ( ahfd . isArmSoftFloat ( ) ) ; <nl> assertFalse ( ahfd . isArmHardFloat ( ) ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testArmelNoflag ( ) throws IOException { <nl> + ELFAnalyser ahfd = ELFAnalyser . analyse ( linuxArmelNoflagLib . getAbsolutePath ( ) ) ; <nl> + assertTrue ( ahfd . isELF ( ) ) ; <nl> + assertTrue ( ahfd . isArm ( ) ) ; <nl> + assertFalse ( ahfd . is64Bit ( ) ) ; <nl> + assertTrue ( ahfd . isArmSoftFloat ( ) ) ; <nl> + assertFalse ( ahfd . isArmHardFloat ( ) ) ; <nl> + } <nl> <nl> @ AfterClass <nl> public static void afterClass ( ) throws IOException { <nl> @ @ - 79 , 6 + 90 , 7 @ @ public class ELFAnalyserTest { <nl> linuxArmhfLib . delete ( ) ; <nl> linuxArmelLib . delete ( ) ; <nl> win32Lib . delete ( ) ; <nl> + linuxArmelNoflagLib . delete ( ) ; <nl> testResources . delete ( ) ; <nl> } <nl> <nl> @ @ - 104 , 5 + 116 , 18 @ @ public class ELFAnalyserTest { <nl> zip . close ( ) ; <nl> } <nl> } <nl> + <nl> + / / The e _ flags for elf arm binaries begin at an offset of 0x24 bytes . <nl> + / / The procedure call standard is coded on the second byte . <nl> + private static void makeLinuxArmelNoflagLib ( File sourceFile , File outputFile ) throws IOException { <nl> + final int POS _ ABI _ FLOAT _ BIT = ( byte ) 0x25 ; <nl> + Files . copy ( sourceFile . toPath ( ) , outputFile . toPath ( ) , StandardCopyOption . REPLACE _ EXISTING ) ; <nl> + RandomAccessFile out = new RandomAccessFile ( outputFile , " rw " ) ; <nl> + <nl> + out . seek ( POS _ ABI _ FLOAT _ BIT ) ; <nl> + out . write ( 0 ) ; <nl> + <nl> + out . close ( ) ; <nl> + } <nl> } <nl>
diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 86e342e . . 7f54b1c 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 503 , 7 + 503 , 7 @ @ public final class Native implements Version { <nl> * @ throws UnsatisfiedLinkError if the library cannot be found or <nl> * dependent libraries are missing . <nl> * / <nl> - public static < T > T loadLibrary ( Class < T > interfaceClass ) { <nl> + public static < T extends Library > T loadLibrary ( Class < T > interfaceClass ) { <nl> return loadLibrary ( null , interfaceClass ) ; <nl> } <nl> <nl> @ @ - 522 , 7 + 522 , 7 @ @ public final class Native implements Version { <nl> * dependent libraries are missing . <nl> * @ see # loadLibrary ( String , Class , Map ) <nl> * / <nl> - public static < T > T loadLibrary ( Class < T > interfaceClass , Map < String , ? > options ) { <nl> + public static < T extends Library > T loadLibrary ( Class < T > interfaceClass , Map < String , ? > options ) { <nl> return loadLibrary ( null , interfaceClass , options ) ; <nl> } <nl> <nl> @ @ - 540 , 7 + 540 , 7 @ @ public final class Native implements Version { <nl> * dependent libraries are missing . <nl> * @ see # loadLibrary ( String , Class , Map ) <nl> * / <nl> - public static < T > T loadLibrary ( String name , Class < T > interfaceClass ) { <nl> + public static < T extends Library > T loadLibrary ( String name , Class < T > interfaceClass ) { <nl> return loadLibrary ( name , interfaceClass , Collections . < String , Object > emptyMap ( ) ) ; <nl> } <nl> <nl> @ @ - 560 , 8 + 560 , 9 @ @ public final class Native implements Version { <nl> * @ throws UnsatisfiedLinkError if the library cannot be found or <nl> * dependent libraries are missing . <nl> * / <nl> - public static < T > T loadLibrary ( String name , Class < T > interfaceClass , Map < String , ? > options ) { <nl> + public static < T extends Library > T loadLibrary ( String name , Class < T > interfaceClass , Map < String , ? > options ) { <nl> if ( ! Library . class . isAssignableFrom ( interfaceClass ) ) { <nl> + / / Maybe still possible if the caller is not using generics ? <nl> throw new IllegalArgumentException ( " Interface ( " + interfaceClass . getSimpleName ( ) + " ) " <nl> + " of library = " + name + " does not extend " + Library . class . getSimpleName ( ) ) ; <nl> } <nl> diff - - git a / test / com / sun / jna / NativeTest . java b / test / com / sun / jna / NativeTest . java <nl> index bb8c5fe . . 8345d0a 100644 <nl> - - - a / test / com / sun / jna / NativeTest . java <nl> + + + b / test / com / sun / jna / NativeTest . java <nl> @ @ - 61 , 7 + 61 , 7 @ @ public class NativeTest extends TestCase { <nl> Method m = Native . class . getMethod ( " loadLibrary " , paramTypes ) ; <nl> Class < ? > returnType = m . getReturnType ( ) ; <nl> signature . append ( Native . getSignature ( returnType ) ) ; <nl> - assertSame ( " Mismatched return type for signature = " + signature , Object . class , returnType ) ; <nl> + assertSame ( " Mismatched return type for signature = " + signature , Library . class , returnType ) ; <nl> / / System . out . println ( " = = = > " + m . getName ( ) + " : " + signature ) ; <nl> } catch ( NoSuchMethodError err ) { <nl> fail ( " No method for signature = " + signature ) ;
diff - - git a / build . xml b / build . xml <nl> index 7cd53fd . . 52cecd8 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 54 , 7 + 54 , 7 @ @ <nl> value = " Copyright & amp ; copy ; 2007 - $ { year } Timothy Wall . All Rights Reserved . " / > <nl> < buildnumber / > <nl> <nl> - < property name = " android . versionCode " value = " 2 " / > <nl> + < property name = " android . versionCode " value = " 3 " / > <nl> < ! - - JNA library release version - - > <nl> < property name = " jna . major " value = " 5 " / > <nl> < property name = " jna . minor " value = " 0 " / >
diff - - git a / native / Makefile b / native / Makefile <nl> index a465660 . . 6f9ad25 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 84 , 16 + 84 , 6 @ @ JNISFX = $ ( LIBSFX ) <nl> CC = gcc <nl> LD = $ ( CC ) <nl> LIBS = <nl> - # CC _ OPTS only applied to objects build for jnidispatch , not for libffi <nl> - # - Wno - unknown - warning - option <nl> - # = > Suppress warning for unknown warnings <nl> - # - Werror = > Treat warnings as errors <nl> - # - Wno - clobbered = > Silence GCC warning about clobbered automatic variables . <nl> - # The " longjmp " case only happens in protect . h in the logic <nl> - # that implements " protected " mode . In that case an exception <nl> - # is raised and the value of the potentially clobbered <nl> - # variables is ignored . <nl> - LOC _ CC _ OPTS = - Wno - unknown - warning - option - Werror - Wno - clobbered <nl> # Default to Sun recommendations for JNI compilation <nl> COPT = - O2 - fno - omit - frame - pointer - fno - strict - aliasing <nl> CASM = - S <nl> @ @ - 130 , 31 + 120 , 37 @ @ ifeq ( $ ( ARCH ) , arm ) <nl> PREFIX = arm - linux - androideabi - <nl> COPT + = - mthumb - interwork - march = armv5te - mtune = xscale - msoft - float - fstack - protector <nl> HOST = arm - linux - eabi <nl> - else ifeq ( $ ( ARCH ) , armv7 ) <nl> + else <nl> + ifeq ( $ ( ARCH ) , armv7 ) <nl> PREFIX = arm - linux - androideabi - <nl> COPT + = - march = armv7 - a - mfloat - abi = softfp - mfpu = vfpv3 - d16 - Wl , - - fix - cortex - a8 <nl> HOST = arm - linux - eabi <nl> AARCH = arm <nl> - else ifeq ( $ ( ARCH ) , aarch64 ) <nl> + else <nl> + ifeq ( $ ( ARCH ) , aarch64 ) <nl> PREFIX = aarch64 - linux - android - <nl> HOST = aarch64 - linux - android <nl> AARCH = arm64 <nl> ALIBDIR = / usr / lib64 <nl> - else ifeq ( $ ( ARCH ) , x86 ) <nl> + else <nl> + ifeq ( $ ( ARCH ) , x86 ) <nl> PREFIX = i686 - linux - android - <nl> COPT + = - march = i686 <nl> HOST = i686 - linux - android <nl> - else ifeq ( $ ( ARCH ) , x86 - 64 ) <nl> + else <nl> + ifeq ( $ ( ARCH ) , x86 - 64 ) <nl> PREFIX = x86 _ 64 - linux - android - <nl> COPT + = - m64 <nl> HOST = x86 _ 64 - linux - android <nl> AARCH = x86 _ 64 <nl> ALIBDIR = / usr / lib64 <nl> - else ifeq ( $ ( ARCH ) , mips ) <nl> + else <nl> + ifeq ( $ ( ARCH ) , mips ) <nl> PREFIX = mipsel - linux - android - <nl> HOST = mipsel - linux - android <nl> COPT + = <nl> - else ifeq ( $ ( ARCH ) , mips64 ) <nl> + else <nl> + ifeq ( $ ( ARCH ) , mips64 ) <nl> PREFIX = mips64el - linux - android - <nl> HOST = mips64el - linux - android <nl> COPT + = <nl> @ @ - 162 , 6 + 158 , 12 @ @ ALIBDIR = / usr / lib64 <nl> else <nl> ERROR = $ ( error " Unsupported android architecture ' $ ( ARCH ) ' " ) <nl> endif <nl> + endif <nl> + endif <nl> + endif <nl> + endif <nl> + endif <nl> + endif <nl> NDK ? = / Developer / Applications / android - ndk - r10e <nl> NDK _ PLATFORM ? = $ ( NDK ) / platforms / android - 21 <nl> SYSROOT = $ ( NDK _ PLATFORM ) / arch - $ ( AARCH ) <nl> @ @ - 318 , 6 + 320 , 27 @ @ ifeq ( $ ( ARCH ) , ppc ) <nl> endif <nl> endif <nl> <nl> + # CC _ OPTS only applied to objects build for jnidispatch , not for libffi <nl> + # - Wno - unknown - warning - option <nl> + # = > Suppress warning for unknown warnings <nl> + # - Werror = > Treat warnings as errors <nl> + # - Wno - clobbered = > Silence GCC warning about clobbered automatic variables . <nl> + # The " longjmp " case only happens in protect . h in the logic <nl> + # that implements " protected " mode . In that case an exception <nl> + # is raised and the value of the potentially clobbered <nl> + # variables is ignored . <nl> + # <nl> + # Enable this only on GCC versions , that can work with it . It is assumed , that <nl> + # GCC version 4 . X is the lower bound . That version is problematic , as it <nl> + # does not support - Wno - unknown - warning - option <nl> + ifeq ( $ ( CC ) , gcc ) <nl> + GCC _ MAJOR _ VERSION = $ ( shell gcc - dumpversion | cut - f 1 - d ' . ' ) <nl> + ifneq ( $ ( GCC _ MAJOR _ VERSION ) , 4 ) <nl> + 	 LOC _ CC _ OPTS = - Wno - unknown - warning - option - Werror - Wno - clobbered - Wno - unused - variable <nl> + endif <nl> + else <nl> + LOC _ CC _ OPTS = - Wno - unknown - warning - option - Werror - Wno - clobbered - Wno - unused - variable <nl> + endif <nl> <nl> # Enable 64 - bit builds if the arch demands it <nl> ifeq ( $ ( CC ) , gcc )
diff - - git a / lib / native / openbsd - x86 - 64 . jar b / lib / native / openbsd - x86 - 64 . jar <nl> index 6716399 . . 414bcbb 100755 <nl> Binary files a / lib / native / openbsd - x86 - 64 . jar and b / lib / native / openbsd - x86 - 64 . jar differ <nl> diff - - git a / lib / native / openbsd - x86 . jar b / lib / native / openbsd - x86 . jar <nl> index 6716399 . . 0e6226e 100755 <nl> Binary files a / lib / native / openbsd - x86 . jar and b / lib / native / openbsd - x86 . jar differ
diff - - git a / README . md b / README . md <nl> index 4def238 . . 5f4b6a2 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 36 , 7 + 36 , 8 @ @ JNA is a mature library with dozens of contributors and hundreds of commercial a <nl> - [ FileBot Media Renamer ] ( http : / / www . filebot . net ) by Reinhard Pointner . <nl> - [ USB for Java ] ( https : / / launchpad . net / libusb4j ) by Mario Boikov . <nl> - [ Waffle ] ( https : / / github . com / dblock / waffle ) : Enables SSO on Windows in Java applications , by Daniel Doubrovkine . <nl> - - [ leveldb - jna ] ( https : / / github . com / protonail / leveldb - jna ) : Cross - platform JNA based adapter for LevelDB ( used in [ Keylord ] ( http : / / protonail . com / products / keylord ) ) . <nl> + - [ leveldb - jna ] ( https : / / github . com / protonail / leveldb - jna ) : Cross - platform JNA based adapter for [ LevelDB ] ( https : / / github . com / google / leveldb ) ( used in [ Keylord ] ( http : / / protonail . com ) ) . <nl> + - [ bolt - jna ] ( https : / / github . com / protonail / bolt - jna ) : Cross - platform JNA based adapter for [ Bolt ] ( https : / / github . com / boltdb / bolt ) ( used in [ Keylord ] ( http : / / protonail . com ) ) . It is show how to use JNA for binding to Go library . <nl> - [ Java OpenVR Bindings ] ( https : / / github . com / java - graphics / openvr ) . <nl> <nl> * Interesting Investigations / Experiments *
diff - - git a / CHANGES . md b / CHANGES . md <nl> index d8859d4 . . 9f940e3 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 24 , 6 + 24 , 7 @ @ Bug Fixes <nl> * [ # 795 ] ( https : / / github . com / java - native - access / jna / issues / 795 ) : com . sun . jna . platform . win32 . WinDef . WORDByReference holds a WORD which is defined to 16 bit on windows , so it needs to be accessed as short ( getShort ( ) ) . Fix suggested by - [ @ kdeines ] ( https : / / github . com / kdeines ) . <nl> * [ # 804 ] ( https : / / github . com / java - native - access / jna / pull / 804 ) Main - Class in jna - platform . jar collides with java 9 module system - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 838 ] ( https : / / github . com / java - native - access / jna / pull / 838 ) : Fix binding of ` com . sun . jna . platform . win32 . User32 # MonitorFromPoint ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 834 ] ( https : / / github . com / java - native - access / jna / issues / 834 ) : Declare structure members of LPPRINTER _ DEFAULTS as public - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 4 . 4 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Winspool . java b / contrib / platform / src / com / sun / jna / platform / win32 / Winspool . java <nl> index 8f74cf5 . . 29f5748 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Winspool . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Winspool . java <nl> @ @ - 23 , 7 + 23 , 6 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> - import java . util . Arrays ; <nl> import java . util . List ; <nl> <nl> import com . sun . jna . Memory ; <nl> @ @ - 35 , 7 + 34 , 6 @ @ import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> import com . sun . jna . platform . win32 . WinDef . INT _ PTR ; <nl> import com . sun . jna . platform . win32 . WinDef . LPVOID ; <nl> - import com . sun . jna . platform . win32 . WinDef . PVOID ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLEByReference ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> @ @ - 500 , 37 + 498 , 35 @ @ public interface Winspool extends StdCallLibrary { <nl> } <nl> } <nl> <nl> - 	 / * * <nl> - 	 * The PRINTER _ DEFAULTS structure specifies the default data type , <nl> - 	 * environment , initialization data , and access rights for a printer . <nl> - 	 * <nl> - 	 * @ see < a href = <nl> - 	 * " https : / / msdn . microsoft . com / en - us / library / windows / desktop / dd162839 ( v = vs . 85 ) . aspx " > <nl> - 	 * PRINTER _ DEFAULTS structure < / a > <nl> - 	 * / <nl> - 	 public class LPPRINTER _ DEFAULTS extends Structure { <nl> - 	 	 <nl> - 	 	 public static final List < String > FIELDS = createFieldsOrder ( " pDatatype " , " pDevMode " , " DesiredAccess " ) ; <nl> - 	 	 <nl> - 	 	 / * * <nl> - 	 	 * Pointer to a null - terminated string that specifies the default data <nl> - 	 	 * type for a printer . <nl> - 	 	 * / <nl> - 	 	 public String pDatatype ; <nl> - 	 	 / * * <nl> - 	 	 * Pointer to a DEVMODE structure that identifies the default <nl> - 	 	 * environment and initialization data for a printer . <nl> - 	 	 * / <nl> - 	 	 PVOID pDevMode ; <nl> - 	 	 / * * <nl> - 	 	 * Specifies desired access rights for a printer . The OpenPrinter <nl> - 	 	 * function uses this member to set access rights to the printer . These <nl> - 	 	 * rights can affect the operation of the SetPrinter and DeletePrinter <nl> - 	 	 * functions . <nl> - 	 	 * / <nl> - 	 	 int DesiredAccess ; <nl> + / * * <nl> + * The PRINTER _ DEFAULTS structure specifies the default data type , <nl> + * environment , initialization data , and access rights for a printer . <nl> + * <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / dd162839 ( v = vs . 85 ) . aspx " > PRINTER _ DEFAULTS structure < / a > <nl> + * / <nl> + public class LPPRINTER _ DEFAULTS extends Structure { <nl> + <nl> + public static final List < String > FIELDS = createFieldsOrder ( " pDatatype " , " pDevMode " , " DesiredAccess " ) ; <nl> + <nl> + / * * <nl> + * Pointer to a null - terminated string that specifies the default data <nl> + * type for a printer . <nl> + * / <nl> + public String pDatatype ; <nl> + / * * <nl> + * Pointer to a DEVMODE structure that identifies the default <nl> + * environment and initialization data for a printer . <nl> + * / <nl> + public Pointer pDevMode ; <nl> + / * * <nl> + * Specifies desired access rights for a printer . The OpenPrinter <nl> + * function uses this member to set access rights to the printer . These <nl> + * rights can affect the operation of the SetPrinter and DeletePrinter <nl> + * functions . <nl> + * / <nl> + public int DesiredAccess ; <nl> <nl> - 	 	 @ Override <nl> + @ Override <nl> protected List < String > getFieldOrder ( ) { <nl> return FIELDS ; <nl> } <nl> @ @ - 560 , 10 + 556 , 8 @ @ public interface Winspool extends StdCallLibrary { <nl> * @ return If the function succeeds , the return value is a nonzero value . If <nl> * the function fails , the return value is zero . <nl> * <nl> - 	 * @ see < a href = <nl> - 	 * " http : / / msdn . microsoft . com / en - us / library / windows / desktop / dd162751 ( v = vs . 85 ) . aspx " > <nl> - 	 * OpenPrinter function < / a > <nl> - 	 * / <nl> + * @ see < a href = " http : / / msdn . microsoft . com / en - us / library / windows / desktop / dd162751 ( v = vs . 85 ) . aspx " > OpenPrinter function < / a > <nl> + * / <nl> boolean OpenPrinter ( <nl> 	 / / _ In _ <nl> String pPrinterName , <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / WinspoolTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / WinspoolTest . java <nl> index 0bc6f0e . . 02e14c2 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / WinspoolTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / WinspoolTest . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> package com . sun . jna . platform . win32 ; <nl> <nl> import com . sun . jna . Native ; <nl> + import com . sun . jna . Structure ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLEByReference ; <nl> import com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 1 ; <nl> import com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 2 ; <nl> @ @ - 94 , 4 + 95 , 21 @ @ public class WinspoolTest extends TestCase { <nl> assertFalse ( " ClosePrinter should return false on failure . " , result ) ; <nl> assertEquals ( " GetLastError ( ) should return ERROR _ INVALID _ HANDLE " , WinError . ERROR _ INVALID _ HANDLE , Native . getLastError ( ) ) ; <nl> } <nl> + <nl> + public void testCorrectDeclarationOfMembers ( ) throws InstantiationException , IllegalAccessException { <nl> + for ( Class klass : Winspool . class . getDeclaredClasses ( ) ) { <nl> + if ( Structure . class . isAssignableFrom ( klass ) ) { <nl> + boolean writeWorked = false ; <nl> + try { <nl> + Structure struct = ( Structure ) klass . newInstance ( ) ; <nl> + struct . write ( ) ; <nl> + writeWorked = true ; <nl> + } catch ( java . lang . Throwable ex ) { <nl> + System . err . println ( ex . getMessage ( ) ) ; <nl> + ex . printStackTrace ( System . err ) ; <nl> + } <nl> + assertTrue ( " Failed to write structure : " + klass . getName ( ) , writeWorked ) ; <nl> + } <nl> + } <nl> + } <nl> }
diff - - git a / . travis . yml b / . travis . yml <nl> index 41113a9 . . 7ea0e88 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 1 , 12 + 1 , 18 @ @ <nl> sudo : false <nl> + dist : trusty <nl> <nl> language : java <nl> <nl> + addons : <nl> + apt : <nl> + packages : <nl> + - ant - optional <nl> + <nl> install : <nl> - ' [ " $ { TRAVIS _ OS _ NAME } " = " osx " ] & & brew update | | true ' <nl> - ' [ " $ { TRAVIS _ OS _ NAME } " = " osx " ] & & brew uninstall libtool & & brew install libtool | | true ' <nl> - ' [ " $ { TRAVIS _ OS _ NAME } " = " osx " ] & & brew install ant | | true ' <nl> - <nl> + <nl> script : <nl> - ant test <nl> - ant test - platform
diff - - git a / build . xml b / build . xml <nl> index 00fe2b0 . . b00f350 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 215 , 6 + 215 , 7 @ @ <nl> includeantruntime = " false " <nl> source = " 1 . 6 " <nl> target = " 1 . 6 " <nl> + encoding = " UTF - 8 " <nl> > <nl> < src path = " src " / > <nl> < src path = " ant - elfanalyser - src " / > <nl> @ @ - 363 , 7 + 364 , 9 @ @ <nl> target = " $ { compatibility } " <nl> destdir = " $ { classes } " <nl> includeantruntime = " false " <nl> - deprecation = " on " debug = " $ { debug } " > <nl> + deprecation = " on " <nl> + debug = " $ { debug } " <nl> + encoding = " UTF - 8 " > <nl> < src refid = " src . path " / > <nl> < / javac > <nl> < / target > <nl> @ @ - 960 , 7 + 963 , 10 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> destdir = " $ { test . classes } " <nl> includeantruntime = " false " <nl> includes = " * * / StructureFieldOrderInspector . java " <nl> - deprecation = " on " debug = " $ { debug } " > <nl> + deprecation = " on " <nl> + debug = " $ { debug } " <nl> + encoding = " UTF - 8 " <nl> + > <nl> < src path = " $ { test . src } " / > <nl> < / javac > <nl> < / target > <nl> @ @ - 973 , 7 + 979 , 10 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> destdir = " $ { test . classes } " <nl> includeantruntime = " false " <nl> excludes = " $ { tests . exclude - patterns } " <nl> - deprecation = " on " debug = " $ { debug } " > <nl> + deprecation = " on " <nl> + debug = " $ { debug } " <nl> + encoding = " UTF - 8 " <nl> + > <nl> < src path = " $ { test . src } " / > <nl> < exclude name = " $ { tests . exclude } " / > <nl> < / javac >
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java <nl> index bbe28d2 . . e28021e 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java <nl> @ @ - 32 , 8 + 32 , 12 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> / * * <nl> * Wrapper class for the ITypeInfo interface <nl> * <nl> - * Method Name V - Table Offset IUnknown . QueryInterface 0 IUnknown . AddRef 4 <nl> - * IUnknown . Release 8 <nl> + * < table > <nl> + * < tr > < th > Method Name < / th > < th > V - Table Offset < / th > < / tr > <nl> + * < tr > < td > IUnknown . QueryInterface < / td > < td > 0 < / td > < / tr > <nl> + * < tr > < td > IUnknown . AddRef < / td > < td > 4 < / td > < / tr > <nl> + * < tr > < td > IUnknown . Release < / td > < td > 8 < / td > < / tr > <nl> + * < / table > <nl> * <nl> * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> * / <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java <nl> index bb3480a . . 7eaba39 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java <nl> @ @ - 447 , 7 + 447 , 7 @ @ public interface Ole32 extends StdCallLibrary { <nl> <nl> / * * <nl> * Puts an OLE compound document object into the running state . <nl> - * @ param pUnknown [ in ] Pointer to the { @ link IUnknown IUnknown } interface <nl> + * @ param pUnknown [ in ] Pointer to the { @ link com . sun . jna . platform . win32 . COM . IUnknown IUnknown } interface <nl> * on the object , with which it will query for a pointer to <nl> * the IRunnableObject interface , and then call its Run method . <nl> * @ return This function returns on success . <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index adc8111 . . f12dedc 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 3528 , 9 + 3528 , 9 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * construct the locale id from a language id and a sort id . <nl> * <nl> - * @ param lgid <nl> - * @ param srtid <nl> - * @ return <nl> + * @ param lgid language id <nl> + * @ param srtid sort id <nl> + * @ return locale id derived from ldig and srtid <nl> * / <nl> public static final LCID MAKELCID ( int lgid , int srtid ) { <nl> return new LCID ( _ MAKELCID ( lgid , srtid ) ) ; <nl> @ @ - 3539 , 10 + 3539 , 10 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * construct the locale id from a language id , sort id , and sort version . <nl> * <nl> - * @ param lgid <nl> - * @ param srtid <nl> - * @ param ver <nl> - * @ return <nl> + * @ param lgid locale id <nl> + * @ param srtid sort id <nl> + * @ param ver sort version <nl> + * @ return locale id derviced from a language id , sort id , and sort version . <nl> * / <nl> public static final LCID MAKESORTLCID ( int lgid , int srtid , int ver ) { <nl> return new LCID ( _ MAKELCID ( lgid , srtid ) | ( ver < < 20 ) ) ; <nl> @ @ - 3551 , 8 + 3551 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * extract the language id from a locale id . <nl> * <nl> - * @ param lcid <nl> - * @ return <nl> + * @ param lcid locale id <nl> + * @ return extracted language id <nl> * / <nl> public static final int LANGIDFROMLCID ( LCID lcid ) { <nl> return lcid . intValue ( ) & 0xFFFF ; <nl> @ @ - 3561 , 8 + 3561 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * extract the sort id from a locale id . <nl> * <nl> - * @ param lcid <nl> - * @ return <nl> + * @ param lcid locale id <nl> + * @ return extracted sort id <nl> * / <nl> public static final int SORTIDFROMLCID ( LCID lcid ) { <nl> return ( lcid . intValue ( ) > > > 16 ) & 0xf ; <nl> @ @ - 3571 , 8 + 3571 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * extract the sort version from a locale id . <nl> * <nl> - * @ param lcid <nl> - * @ return <nl> + * @ param lcid locale id <nl> + * @ return extracted sort version <nl> * / <nl> public static final int SORTVERSIONFROMLCID ( LCID lcid ) { <nl> return ( lcid . intValue ( ) > > > 20 ) & 0xf ; <nl> @ @ - 3581 , 9 + 3581 , 9 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * Construct language id from a primary language id and a sublanguage id . <nl> * <nl> - * @ param p Language ID <nl> - * @ param s Sublanguage ID <nl> - * @ return <nl> + * @ param p primary language ID <nl> + * @ param s sublanguage ID <nl> + * @ return constructed language id <nl> * / <nl> public static final int MAKELANGID ( int p , int s ) { <nl> return ( s < < 10 ) | ( p & 0xFFFF ) ; <nl> @ @ - 3592 , 8 + 3592 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * Extract primary language id from a language id . <nl> * <nl> - * @ param lgid Language ID <nl> - * @ return <nl> + * @ param lgid language ID <nl> + * @ return extracted primary language id <nl> * / <nl> public static final int PRIMARYLANGID ( int lgid ) { <nl> return lgid & 0x3ff ; <nl> @ @ - 3602 , 8 + 3602 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * Extract sublanguage id from a language id . <nl> * <nl> - * @ param lgid Language ID <nl> - * @ return <nl> + * @ param lgid language ID <nl> + * @ return extracted sublanguage id <nl> * / <nl> public static final int SUBLANGID ( int lgid ) { <nl> return ( lgid & 0xFFFF ) > > > 10 ;
diff - - git a / lib / native / sunos - sparc . jar b / lib / native / sunos - sparc . jar <nl> index 6716399 . . 71c510e 100644 <nl> Binary files a / lib / native / sunos - sparc . jar and b / lib / native / sunos - sparc . jar differ <nl> diff - - git a / lib / native / sunos - sparcv9 . jar b / lib / native / sunos - sparcv9 . jar <nl> index 6716399 . . 4b6303c 100755 <nl> Binary files a / lib / native / sunos - sparcv9 . jar and b / lib / native / sunos - sparcv9 . jar differ
diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java <nl> index bf534f0 . . 483ecc6 100644 <nl> - - - a / src / com / sun / jna / Platform . java <nl> + + + b / src / com / sun / jna / Platform . java <nl> @ @ - 130 , 7 + 130 , 7 @ @ public final class Platform { <nl> C _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " c " ; <nl> MATH _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " m " ; <nl> HAS _ DLL _ CALLBACKS = osType = = WINDOWS ; <nl> - 	 ARCH = getCanonicalArchitecture ( System . getProperty ( " os . arch " ) , isSoftFloat ( ) ) ; <nl> + 	 ARCH = getCanonicalArchitecture ( System . getProperty ( " os . arch " ) ) ; <nl> RESOURCE _ PREFIX = getNativeLibraryResourcePrefix ( ) ; <nl> } <nl> private Platform ( ) { } <nl> @ @ - 236 , 7 + 236 , 7 @ @ public final class Platform { <nl> return false ; <nl> } <nl> <nl> - static String getCanonicalArchitecture ( String arch , boolean softfloat ) { <nl> + static String getCanonicalArchitecture ( String arch ) { <nl> 	 arch = arch . toLowerCase ( ) . trim ( ) ; <nl> if ( " powerpc " . equals ( arch ) ) { <nl> arch = " ppc " ; <nl> @ @ - 256 , 22 + 256 , 26 @ @ public final class Platform { <nl> 	 arch = " ppc64le " ; <nl> 	 } <nl> / / Map arm to armel if the binary is running as softfloat build <nl> - if ( " arm " . equals ( arch ) & & softfloat ) { <nl> + if ( " arm " . equals ( arch ) & & isSoftFloat ( ) ) { <nl> arch = " armel " ; <nl> } <nl> <nl> - <nl> 	 return arch ; <nl> } <nl> <nl> - private static boolean isSoftFloat ( ) { <nl> + static boolean isSoftFloat ( ) { <nl> try { <nl> File self = new File ( " / proc / self / exe " ) ; <nl> - ELFAnalyser ahfd = ELFAnalyser . analyse ( self . getCanonicalPath ( ) ) ; <nl> - return ahfd . isArmSoftFloat ( ) ; <nl> + if ( self . exists ( ) ) { <nl> + ELFAnalyser ahfd = ELFAnalyser . analyse ( self . getCanonicalPath ( ) ) ; <nl> + return ahfd . isArmSoftFloat ( ) ; <nl> + } <nl> } catch ( IOException ex ) { <nl> / / asume hardfloat <nl> - Logger . getLogger ( Platform . class . getName ( ) ) . log ( Level . FINE , null , ex ) ; <nl> + Logger . getLogger ( Platform . class . getName ( ) ) . log ( Level . INFO , " Failed to read ' / proc / self / exe ' or the target binary . " , ex ) ; <nl> + } catch ( SecurityException ex ) { <nl> + / / asume hardfloat <nl> + Logger . getLogger ( Platform . class . getName ( ) ) . log ( Level . INFO , " SecurityException while analysing ' / proc / self / exe ' or the target binary . " , ex ) ; <nl> } <nl> return false ; <nl> } <nl> @ @ - 295 , 12 + 299 , 8 @ @ public final class Platform { <nl> @ param name from < code > os . name < / code > System property <nl> * / <nl> static String getNativeLibraryResourcePrefix ( int osType , String arch , String name ) { <nl> - return getNativeLibraryResourcePrefix ( osType , arch , name , isSoftFloat ( ) ) ; <nl> - } <nl> - <nl> - static String getNativeLibraryResourcePrefix ( int osType , String arch , String name , boolean isSoftfloat ) { <nl> String osPrefix ; <nl> - arch = getCanonicalArchitecture ( arch , isSoftfloat ) ; <nl> + arch = getCanonicalArchitecture ( arch ) ; <nl> switch ( osType ) { <nl> case Platform . ANDROID : <nl> if ( arch . startsWith ( " arm " ) ) { <nl> diff - - git a / test / com / sun / jna / PlatformTest . java b / test / com / sun / jna / PlatformTest . java <nl> index 1c11be7 . . 823c021 100644 <nl> - - - a / test / com / sun / jna / PlatformTest . java <nl> + + + b / test / com / sun / jna / PlatformTest . java <nl> @ @ - 31 , 71 + 31 , 73 @ @ public class PlatformTest extends TestCase { <nl> public void testOSPrefix ( ) { <nl> assertEquals ( " Wrong resource path " , " win32 - x86 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . WINDOWS , <nl> - " x86 " , " Windows " , false ) ) ; <nl> + " x86 " , " Windows " ) ) ; <nl> assertEquals ( " Wrong resource path Windows / i386 " , " win32 - x86 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . WINDOWS , <nl> - " i386 " , " Windows " , false ) ) ; <nl> + " i386 " , " Windows " ) ) ; <nl> assertEquals ( " Wrong resource path Windows CE / arm " , " w32ce - arm " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . WINDOWSCE , <nl> - " arm " , " Windows CE " , false ) ) ; <nl> + " arm " , " Windows CE " ) ) ; <nl> assertEquals ( " Wrong resource path Mac / x86 " , " darwin " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . MAC , <nl> - " x86 " , " Darwin " , false ) ) ; <nl> + " x86 " , " Darwin " ) ) ; <nl> assertEquals ( " Wrong resource path Mac / x86 " , " darwin " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . MAC , <nl> - " i386 " , " Darwin " , false ) ) ; <nl> + " i386 " , " Darwin " ) ) ; <nl> assertEquals ( " Wrong resource path Mac / x86 _ 64 " , " darwin " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . MAC , <nl> - " x86 _ 64 " , " Mac " , false ) ) ; <nl> + " x86 _ 64 " , " Mac " ) ) ; <nl> assertEquals ( " Wrong resource path Solaris / sparc " , " sunos - sparc " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . SOLARIS , <nl> - " sparc " , " Solaris " , false ) ) ; <nl> + " sparc " , " Solaris " ) ) ; <nl> assertEquals ( " Wrong resource path SunOS / sparcv9 " , " sunos - sparcv9 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . SOLARIS , <nl> - " sparcv9 " , " SunOS " , false ) ) ; <nl> + " sparcv9 " , " SunOS " ) ) ; <nl> assertEquals ( " Wrong resource path Linux / i386 " , " linux - x86 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> - " i386 " , " Linux / Gnu " , false ) ) ; <nl> + " i386 " , " Linux / Gnu " ) ) ; <nl> assertEquals ( " Wrong resource path Linux / x86 " , " linux - x86 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> - " x86 " , " Linux " , false ) ) ; <nl> + " x86 " , " Linux " ) ) ; <nl> assertEquals ( " Wrong resource path Linux / x86 " , " linux - x86 - 64 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> - " x86 _ 64 " , " Linux " , false ) ) ; <nl> + " x86 _ 64 " , " Linux " ) ) ; <nl> assertEquals ( " Wrong resource path Linux / x86 " , " linux - x86 - 64 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> - " amd64 " , " Linux " , false ) ) ; <nl> + " amd64 " , " Linux " ) ) ; <nl> assertEquals ( " Wrong resource path Linux / ppc " , " linux - ppc " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> - " powerpc " , " Linux " , false ) ) ; <nl> + " powerpc " , " Linux " ) ) ; <nl> assertEquals ( " Wrong resource path Linux / sparcv9 " , " linux - sparcv9 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> - " sparcv9 " , " Linux " , false ) ) ; <nl> - assertEquals ( " Wrong resource path Linux / arm ( hardfloat ) " , " linux - arm " , <nl> - Platform . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> - " arm " , " Linux / Gnu " , false ) ) ; <nl> - assertEquals ( " Wrong resource path Linux / arm ( softfloat ) " , " linux - armel " , <nl> - Platform . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> - " arm " , " Linux / Gnu " , true ) ) ; <nl> + " sparcv9 " , " Linux " ) ) ; <nl> + if ( Platform . isSoftFloat ( ) ) { <nl> + assertEquals ( " Wrong resource path Linux / arm ( softfloat ) " , " linux - armel " , <nl> + Platform . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> + " arm " , " Linux / Gnu " ) ) ; <nl> + } else { <nl> + assertEquals ( " Wrong resource path Linux / arm ( hardfloat ) " , " linux - arm " , <nl> + Platform . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> + " arm " , " Linux / Gnu " ) ) ; <nl> + } <nl> assertEquals ( " Wrong resource path OpenBSD / x86 " , " openbsd - x86 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . OPENBSD , <nl> - " x86 " , " OpenBSD " , false ) ) ; <nl> + " x86 " , " OpenBSD " ) ) ; <nl> assertEquals ( " Wrong resource path FreeBSD / x86 " , " freebsd - x86 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . FREEBSD , <nl> - " x86 " , " FreeBSD " , false ) ) ; <nl> + " x86 " , " FreeBSD " ) ) ; <nl> assertEquals ( " Wrong resource path GNU / kFreeBSD / x86 " , " kfreebsd - x86 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . KFREEBSD , <nl> - " x86 " , " GNU / kFreeBSD " , false ) ) ; <nl> + " x86 " , " GNU / kFreeBSD " ) ) ; <nl> assertEquals ( " Wrong resource path NetBSD / x86 " , " netbsd - x86 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . NETBSD , <nl> - " x86 " , " NetBSD " , false ) ) ; <nl> + " x86 " , " NetBSD " ) ) ; <nl> assertEquals ( " Wrong resource path Linux / armv7l ( android ) " , " android - arm " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . ANDROID , <nl> - " armv7l " , " Linux " , false ) ) ; <nl> - <nl> + " armv7l " , " Linux " ) ) ; <nl> assertEquals ( " Wrong resource path other / other " , " name - ppc " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . UNSPECIFIED , <nl> - " PowerPC " , " Name Of System " , false ) ) ; <nl> + " PowerPC " , " Name Of System " ) ) ; <nl> <nl> } <nl>
diff - - git a / build . xml b / build . xml <nl> index 92b0514 . . 00fe2b0 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 193 , 6 + 193 , 7 @ @ <nl> < os arch = " ppc64le " / > <nl> < os arch = " ia64 " / > <nl> < os arch = " aarch64 " / > <nl> + < os arch = " mips64el " / > <nl> < / or > <nl> < / and > <nl> < / condition > <nl> @ @ - 456 , 6 + 457 , 8 @ @ com / sun / jna / linux - ia64 / libjnidispatch . so ; <nl> processor = ia64 ; osname = linux , <nl> com / sun / jna / linux - sparcv9 / libjnidispatch . so ; <nl> processor = sparcv9 ; osname = linux , <nl> + com / sun / jna / linux - mips64el / libjnidispatch . so ; <nl> + processor = mips64el ; osname = linux , <nl> <nl> com / sun / jna / freebsd - x86 / libjnidispatch . so ; <nl> processor = x86 ; osname = freebsd , <nl> @ @ - 515 , 6 + 518 , 9 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < zipfileset src = " $ { lib . native } / linux - sparcv9 . jar " <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / linux - sparcv9 " / > <nl> + < zipfileset src = " $ { lib . native } / linux - mips64el . jar " <nl> + includes = " * jnidispatch * " <nl> + prefix = " com / sun / jna / linux - mips64el " / > <nl> < zipfileset src = " $ { lib . native } / sunos - x86 . jar " <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / sunos - x86 " / > <nl> @ @ - 704 , 6 + 710 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - ppc64 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - ppc64le . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - sparcv9 . jar " overwrite = " true " / > <nl> + < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - mips64el . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / freebsd - x86 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / freebsd - x86 - 64 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / openbsd - x86 . jar " overwrite = " true " / > <nl> diff - - git a / lib / native / linux - mips64el . jar b / lib / native / linux - mips64el . jar <nl> new file mode 100644 <nl> index 0000000 . . 9202631 <nl> Binary files / dev / null and b / lib / native / linux - mips64el . jar differ <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 7b7a7d4 . . 91b195f 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 218 , 7 + 218 , 7 @ @ public final class Native implements Version { <nl> setProtected ( true ) ; <nl> } <nl> MAX _ ALIGNMENT = Platform . isSPARC ( ) | | Platform . isWindows ( ) <nl> - | | ( Platform . isLinux ( ) & & ( Platform . isARM ( ) | | Platform . isPPC ( ) ) ) <nl> + | | ( Platform . isLinux ( ) & & ( Platform . isARM ( ) | | Platform . isPPC ( ) | | Platform . isMIPS ( ) ) ) <nl> | | Platform . isAIX ( ) <nl> | | Platform . isAndroid ( ) <nl> ? 8 : LONG _ SIZE ; <nl> diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index a1465d5 . . 1c06bd4 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 947 , 6 + 947 , 9 @ @ public class NativeLibrary { <nl> cpu = " arm " ; <nl> libc = " - gnueabi " ; <nl> } <nl> + else if ( Platform . ARCH . equals ( " mips64el " ) ) { <nl> + libc = " - gnuabi64 " ; <nl> + } <nl> <nl> return cpu + kernel + libc ; <nl> } <nl> diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java <nl> index 8cc7022 . . bf534f0 100644 <nl> - - - a / src / com / sun / jna / Platform . java <nl> + + + b / src / com / sun / jna / Platform . java <nl> @ @ - 197 , 6 + 197 , 7 @ @ public final class Platform { <nl> | | " ia64 " . equals ( ARCH ) <nl> | | " ppc64 " . equals ( ARCH ) | | " ppc64le " . equals ( ARCH ) <nl> | | " sparcv9 " . equals ( ARCH ) <nl> + | | " mips64 " . equals ( ARCH ) | | " mips64el " . equals ( ARCH ) <nl> | | " amd64 " . equals ( ARCH ) ) { <nl> return true ; <nl> } <nl> @ @ - 225 , 6 + 226 , 16 @ @ public final class Platform { <nl> return ARCH . startsWith ( " sparc " ) ; <nl> } <nl> <nl> + public static final boolean isMIPS ( ) { <nl> + if ( ARCH . equals ( " mips " ) <nl> + | | ARCH . equals ( " mips64 " ) <nl> + | | ARCH . equals ( " mipsel " ) <nl> + | | ARCH . equals ( " mips64el " ) ) { <nl> + return true ; <nl> + } <nl> + return false ; <nl> + } <nl> + <nl> static String getCanonicalArchitecture ( String arch , boolean softfloat ) { <nl> 	 arch = arch . toLowerCase ( ) . trim ( ) ; <nl> if ( " powerpc " . equals ( arch ) ) {
diff - - git a / test / com / sun / jna / JNALoadTest . java b / test / com / sun / jna / JNALoadTest . java <nl> index 69e352d . . d953fc4 100644 <nl> - - - a / test / com / sun / jna / JNALoadTest . java <nl> + + + b / test / com / sun / jna / JNALoadTest . java <nl> @ @ - 143 , 6 + 143 , 7 @ @ public class JNALoadTest extends TestCase implements Paths , GCWaits { <nl> / / Check for temporary file deletion <nl> File f = new File ( path ) ; <nl> for ( int i = 0 ; i < GC _ WAITS & & ( f . exists ( ) | | Boolean . getBoolean ( " jna . loaded " ) ) ; i + + ) { <nl> + System . gc ( ) ; / / attempt to fix intermittent test failures <nl> Thread . sleep ( 4 * GC _ WAIT _ INTERVAL ) ; / / ' 4 * ' is attempt to fix intermittent test failures <nl> System . gc ( ) ; <nl> }
diff - - git a / test / com / sun / jna / JNALoadTest . java b / test / com / sun / jna / JNALoadTest . java <nl> index f4ab040 . . 69e352d 100644 <nl> - - - a / test / com / sun / jna / JNALoadTest . java <nl> + + + b / test / com / sun / jna / JNALoadTest . java <nl> @ @ - 143 , 7 + 143 , 7 @ @ public class JNALoadTest extends TestCase implements Paths , GCWaits { <nl> / / Check for temporary file deletion <nl> File f = new File ( path ) ; <nl> for ( int i = 0 ; i < GC _ WAITS & & ( f . exists ( ) | | Boolean . getBoolean ( " jna . loaded " ) ) ; i + + ) { <nl> - Thread . sleep ( 2 * GC _ WAIT _ INTERVAL ) ; / / ' 2 * ' is attempt to fix intermittent test failures <nl> + Thread . sleep ( 4 * GC _ WAIT _ INTERVAL ) ; / / ' 4 * ' is attempt to fix intermittent test failures <nl> System . gc ( ) ; <nl> } <nl>
diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index f8797ad . . ff44e4e 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 485 , 7 + 485 , 7 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray args , <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , arg , classBoolean ) ) { <nl> c _ args [ i ] . i = ( * env ) - > GetBooleanField ( env , arg , FID _ Boolean _ value ) ; <nl> - arg _ types [ i ] = & ffi _ type _ sint32 ; <nl> + arg _ types [ i ] = & ffi _ type _ uint32 ; <nl> arg _ values [ i ] = & c _ args [ i ] . i ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , arg , classByte ) ) {
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 4489122 . . aa54304 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 10 , 6 + 10 , 7 @ @ Features <nl> * [ # 774 ] ( https : / / github . com / java - native - access / jna / pull / 774 ) : Addition win32 api : SendMessage , GetActiveWindow , COPYDATASTRUCT and a few constants + a demo application - [ @ cnico ] ( https : / / github . com / cnico ) . <nl> * [ # 783 ] ( https : / / github . com / java - native - access / jna / pull / 783 ) : Add Ole32 functions : ` OleBuildVersion ` , ` OleInitialize ` , ` OleUninitialize ` , ` OleFlushClipboard ` , ` OleRun ` , add VARIANT conversion functions to OleAuto , add default locale , LCID and LANG to WinNT - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 784 ] ( https : / / github . com / java - native - access / jna / issues / 784 ) : Added Solaris Kstat library - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> + * [ # 805 ] ( https : / / github . com / java - native - access / jna / issues / 805 ) : Provide a way to pass JNIEnv pointer to native method and support OPTION _ ALLOW _ OBJECTs for direct mapping - [ @ ncruces ] ( https : / / github . com / ncruces ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / build . xml b / build . xml <nl> index 580ceb0 . . 92b0514 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 49 , 7 + 49 , 7 @ @ <nl> < property name = " javadoc " location = " $ { doc } / javadoc " / > <nl> < property name = " stylesheet " location = " $ { javadoc } / doc / css / javadoc . css " / > <nl> < property name = " vendor " value = " JNA Development Team " / > <nl> - < property name = " year " value = " 2016 " / > <nl> + < property name = " year " value = " 2017 " / > <nl> < property name = " copyright " <nl> value = " Copyright & amp ; copy ; 2007 - $ { year } Timothy Wall . All Rights Reserved . " / > <nl> < buildnumber / > <nl> @ @ - 69 , 7 + 69 , 7 @ @ <nl> < property name = " jna . version " value = " $ { jna . major } . $ { jna . minor } . $ { jna . revision } $ { version . suffix } " / > <nl> < ! - - jnidispatch library release version - - > <nl> < property name = " jni . major " value = " 5 " / > <nl> - < property name = " jni . minor " value = " 1 " / > <nl> + < property name = " jni . minor " value = " 2 " / > <nl> < property name = " jni . revision " value = " 0 " / > <nl> < property name = " jni . build " value = " 0 " / > < ! - - $ { build . number } - - > <nl> < property name = " jni . version " value = " $ { jni . major } . $ { jni . minor } . $ { jni . revision } " / > <nl> diff - - git a / lib / native / aix - ppc . jar b / lib / native / aix - ppc . jar <nl> index 1d50b10 . . 6716399 100644 <nl> Binary files a / lib / native / aix - ppc . jar and b / lib / native / aix - ppc . jar differ <nl> diff - - git a / lib / native / aix - ppc64 . jar b / lib / native / aix - ppc64 . jar <nl> index f55d313 . . 6716399 100644 <nl> Binary files a / lib / native / aix - ppc64 . jar and b / lib / native / aix - ppc64 . jar differ <nl> diff - - git a / lib / native / android - aarch64 . jar b / lib / native / android - aarch64 . jar <nl> index 5d47db3 . . 6716399 100644 <nl> Binary files a / lib / native / android - aarch64 . jar and b / lib / native / android - aarch64 . jar differ <nl> diff - - git a / lib / native / android - arm . jar b / lib / native / android - arm . jar <nl> index 176bd69 . . 6716399 100755 <nl> Binary files a / lib / native / android - arm . jar and b / lib / native / android - arm . jar differ <nl> diff - - git a / lib / native / android - armv7 . jar b / lib / native / android - armv7 . jar <nl> index 95571ce . . 6716399 100644 <nl> Binary files a / lib / native / android - armv7 . jar and b / lib / native / android - armv7 . jar differ <nl> diff - - git a / lib / native / android - mips . jar b / lib / native / android - mips . jar <nl> index cd7686c . . 6716399 100644 <nl> Binary files a / lib / native / android - mips . jar and b / lib / native / android - mips . jar differ <nl> diff - - git a / lib / native / android - mips64 . jar b / lib / native / android - mips64 . jar <nl> index 9c247a1 . . 6716399 100644 <nl> Binary files a / lib / native / android - mips64 . jar and b / lib / native / android - mips64 . jar differ <nl> diff - - git a / lib / native / android - x86 - 64 . jar b / lib / native / android - x86 - 64 . jar <nl> index ab0ea2a . . 6716399 100644 <nl> Binary files a / lib / native / android - x86 - 64 . jar and b / lib / native / android - x86 - 64 . jar differ <nl> diff - - git a / lib / native / android - x86 . jar b / lib / native / android - x86 . jar <nl> index 70c7278 . . 6716399 100755 <nl> Binary files a / lib / native / android - x86 . jar and b / lib / native / android - x86 . jar differ <nl> diff - - git a / lib / native / darwin . jar b / lib / native / darwin . jar <nl> index 7ceb691 . . 6716399 100644 <nl> Binary files a / lib / native / darwin . jar and b / lib / native / darwin . jar differ <nl> diff - - git a / lib / native / linux - aarch64 . jar b / lib / native / linux - aarch64 . jar <nl> index 4607fd5 . . 6716399 100644 <nl> Binary files a / lib / native / linux - aarch64 . jar and b / lib / native / linux - aarch64 . jar differ <nl> diff - - git a / lib / native / linux - arm . jar b / lib / native / linux - arm . jar <nl> index 1dcdc9c . . 6716399 100755 <nl> Binary files a / lib / native / linux - arm . jar and b / lib / native / linux - arm . jar differ <nl> diff - - git a / lib / native / linux - armel . jar b / lib / native / linux - armel . jar <nl> index 1319f4e . . 6716399 100644 <nl> Binary files a / lib / native / linux - armel . jar and b / lib / native / linux - armel . jar differ <nl> diff - - git a / lib / native / linux - ppc . jar b / lib / native / linux - ppc . jar <nl> index 2202928 . . 6716399 100755 <nl> Binary files a / lib / native / linux - ppc . jar and b / lib / native / linux - ppc . jar differ <nl> diff - - git a / lib / native / linux - ppc64le . jar b / lib / native / linux - ppc64le . jar <nl> index 2d7fa03 . . 6716399 100644 <nl> Binary files a / lib / native / linux - ppc64le . jar and b / lib / native / linux - ppc64le . jar differ <nl> diff - - git a / lib / native / linux - x86 - 64 . jar b / lib / native / linux - x86 - 64 . jar <nl> index e7c16af . . 6716399 100644 <nl> Binary files a / lib / native / linux - x86 - 64 . jar and b / lib / native / linux - x86 - 64 . jar differ <nl> diff - - git a / lib / native / linux - x86 . jar b / lib / native / linux - x86 . jar <nl> index 928aef5 . . 6716399 100755 <nl> Binary files a / lib / native / linux - x86 . jar and b / lib / native / linux - x86 . jar differ <nl> diff - - git a / lib / native / sunos - x86 - 64 . jar b / lib / native / sunos - x86 - 64 . jar <nl> index 5ff8c92 . . 6716399 100755 <nl> Binary files a / lib / native / sunos - x86 - 64 . jar and b / lib / native / sunos - x86 - 64 . jar differ <nl> diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index 2fbf678 . . 6716399 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ <nl> diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index bab2a3b . . 6716399 100644 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ
diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 50bb49c . . f8797ad 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 169 , 6 + 169 , 7 @ @ static jclass classAttachOptions ; <nl> static jclass classNativeMapped ; <nl> static jclass classIntegerType ; <nl> static jclass classPointerType ; <nl> + static jclass classJNIEnv ; <nl> static jclass class _ ffi _ callback ; <nl> <nl> static jmethodID MID _ Class _ getComponentType ; <nl> @ @ - 540 , 6 + 541 , 11 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray args , <nl> arg _ types [ i ] = & ffi _ type _ pointer ; <nl> arg _ values [ i ] = & c _ args [ i ] . l ; <nl> } <nl> + else if ( ( * env ) - > IsInstanceOf ( env , arg , classJNIEnv ) ) { <nl> + c _ args [ i ] . l = ( void * ) env ; <nl> + arg _ types [ i ] = & ffi _ type _ pointer ; <nl> + arg _ values [ i ] = & c _ args [ i ] . l ; <nl> + } <nl> else if ( ( * env ) - > IsInstanceOf ( env , arg , classStructure ) ) { <nl> c _ args [ i ] . l = getStructureAddress ( env , arg ) ; <nl> arg _ types [ i ] = getStructureType ( env , arg ) ; <nl> @ @ - 1793 , 6 + 1799 , 9 @ @ dispatch _ direct ( ffi _ cif * cif , void * volatile resp , void * * argp , void * cdata ) { <nl> case CVT _ POINTER : <nl> * ( void * * ) args [ i ] = getNativeAddress ( env , * ( void * * ) args [ i ] ) ; <nl> break ; <nl> + case CVT _ JNIENV : <nl> + * ( void * * ) args [ i ] = ( void * ) env ; <nl> + break ; <nl> case CVT _ STRUCTURE : <nl> objects [ i ] = * ( void * * ) args [ i ] ; <nl> writeStructure ( env , * ( void * * ) args [ i ] ) ; <nl> @ @ - 2959 , 6 + 2968 , 10 @ @ Java _ com _ sun _ jna _ Native _ initIDs ( JNIEnv * env , jclass cls ) { <nl> throwByName ( env , EUnsatisfiedLink , <nl> " Can ' t obtain constructor for class com . sun . jna . WString " ) ; <nl> } <nl> + else if ( ! LOAD _ CREF ( env , JNIEnv , " com / sun / jna / JNIEnv " ) ) { <nl> + throwByName ( env , EUnsatisfiedLink , <nl> + " Can ' t obtain class com . sun . jna . JNIEnv " ) ; <nl> + } <nl> else if ( ! LOAD _ CREF ( env , _ ffi _ callback , " com / sun / jna / Native $ ffi _ callback " ) ) { <nl> throwByName ( env , EUnsatisfiedLink , <nl> " Can ' t obtain class com . sun . jna . Native $ ffi _ callback " ) ; <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index 91ddd27 . . aed8c89 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 116 , 6 + 116 , 7 @ @ enum { <nl> CVT _ TYPE _ MAPPER _ STRING = com _ sun _ jna _ Native _ CVT _ TYPE _ MAPPER _ STRING , <nl> CVT _ TYPE _ MAPPER _ WSTRING = com _ sun _ jna _ Native _ CVT _ TYPE _ MAPPER _ WSTRING , <nl> CVT _ OBJECT = com _ sun _ jna _ Native _ CVT _ OBJECT , <nl> + CVT _ JNIENV = com _ sun _ jna _ Native _ CVT _ JNIENV , <nl> } ; <nl> <nl> / * callback behavior flags * / <nl> diff - - git a / native / testlib . c b / native / testlib . c <nl> index 0747e45 . . 4c8387f 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 1026 , 6 + 1026 , 11 @ @ Java _ com _ sun _ jna _ PerformanceTest _ 00024JNILibrary _ getpid ( JNIEnv * UNUSED ( env ) , jcl <nl> # endif <nl> } <nl> <nl> + EXPORT jclass <nl> + returnClass ( JNIEnv * env , jobject arg ) { <nl> + return ( * env ) - > GetObjectClass ( env , arg ) ; <nl> + } <nl> + <nl> # ifdef _ _ cplusplus <nl> } <nl> # endif <nl> diff - - git a / src / com / sun / jna / JNIEnv . java b / src / com / sun / jna / JNIEnv . java <nl> new file mode 100644 <nl> index 0000000 . . e6205f5 <nl> - - - / dev / null <nl> + + + b / src / com / sun / jna / JNIEnv . java <nl> @ @ - 0 , 0 + 1 , 34 @ @ <nl> + / * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> + package com . sun . jna ; <nl> + <nl> + / * * Marker type for the JNIEnv pointer . <nl> + * Use this to wrap native methods that take a JNIEnv * parameter . <nl> + * Pass { @ link JNIEnv # CURRENT } as the argument . <nl> + * / <nl> + public final class JNIEnv { <nl> + / * * Marker object representing the current thread ' s JNIEnv pointer . * / <nl> + public static final JNIEnv CURRENT = new JNIEnv ( ) ; <nl> + <nl> + private JNIEnv ( ) { } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index cc28856 . . 7b7a7d4 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 1535 , 6 + 1535 , 7 @ @ public final class Native implements Version { <nl> private static final int CVT _ TYPE _ MAPPER _ STRING = 24 ; <nl> private static final int CVT _ TYPE _ MAPPER _ WSTRING = 25 ; <nl> private static final int CVT _ OBJECT = 26 ; <nl> + private static final int CVT _ JNIENV = 27 ; <nl> <nl> private static int getConversion ( Class < ? > type , TypeMapper mapper , boolean allowObjects ) { <nl> if ( type = = Boolean . class ) type = boolean . class ; <nl> @ @ - 1625 , 6 + 1626 , 9 @ @ public final class Native implements Version { <nl> } <nl> return CVT _ NATIVE _ MAPPED ; <nl> } <nl> + if ( JNIEnv . class = = type ) { <nl> + return CVT _ JNIENV ; <nl> + } <nl> return allowObjects ? CVT _ OBJECT : CVT _ UNSUPPORTED ; <nl> } <nl> <nl> diff - - git a / test / com / sun / jna / DirectReturnTypesTest . java b / test / com / sun / jna / DirectReturnTypesTest . java <nl> index 593b3d2 . . 69e9201 100644 <nl> - - - a / test / com / sun / jna / DirectReturnTypesTest . java <nl> + + + b / test / com / sun / jna / DirectReturnTypesTest . java <nl> @ @ - 42 , 6 + 42 , 10 @ @ public class DirectReturnTypesTest extends ReturnTypesTest { <nl> throw new IllegalArgumentException ( s . getClass ( ) . getName ( ) ) ; <nl> } <nl> @ Override <nl> + public Class returnClass ( JNIEnv env , Object arg ) { <nl> + throw new IllegalArgumentException ( arg . getClass ( ) . getName ( ) ) ; <nl> + } <nl> + @ Override <nl> public native boolean returnFalse ( ) ; <nl> @ Override <nl> public native boolean returnTrue ( ) ; <nl> @ @ - 95 , 6 + 99 , 8 @ @ public class DirectReturnTypesTest extends ReturnTypesTest { <nl> public native Object returnObjectArgument ( Object s ) ; <nl> @ Override <nl> public native TestObject returnObjectArgument ( TestObject s ) ; <nl> + @ Override <nl> + public native Class returnClass ( JNIEnv env , Object arg ) ; <nl> <nl> static { <nl> Native . register ( NativeLibrary . getInstance ( " testlib " , <nl> diff - - git a / test / com / sun / jna / ReturnTypesTest . java b / test / com / sun / jna / ReturnTypesTest . java <nl> index 0c98a9a . . f85288b 100644 <nl> - - - a / test / com / sun / jna / ReturnTypesTest . java <nl> + + + b / test / com / sun / jna / ReturnTypesTest . java <nl> @ @ - 107 , 6 + 107 , 7 @ @ public class ReturnTypesTest extends TestCase { <nl> class TestObject { } <nl> Object returnObjectArgument ( Object s ) ; <nl> TestObject returnObjectArgument ( TestObject s ) ; <nl> + Class returnClass ( JNIEnv env , Object arg ) ; <nl> boolean returnFalse ( ) ; <nl> boolean returnTrue ( ) ; <nl> int returnInt32Zero ( ) ; <nl> @ @ - 138 , 7 + 139 , 8 @ @ public class ReturnTypesTest extends TestCase { <nl> @ Override <nl> protected void setUp ( ) { <nl> lib = Native . loadLibrary ( " testlib " , TestLibrary . class ) ; <nl> - libSupportingObject = Native . loadLibrary ( " testlib " , TestLibrary . class , Collections . singletonMap ( Library . OPTION _ ALLOW _ OBJECTS , Boolean . TRUE ) ) ; <nl> + libSupportingObject = Native . loadLibrary ( " testlib " , TestLibrary . class , <nl> + Collections . singletonMap ( Library . OPTION _ ALLOW _ OBJECTS , Boolean . TRUE ) ) ; <nl> libNativeMapped = Native . loadLibrary ( " testlib " , NativeMappedLibrary . class ) ; <nl> } <nl> <nl> @ @ - 174 , 6 + 176 , 13 @ @ public class ReturnTypesTest extends TestCase { <nl> } <nl> } <nl> <nl> + public void testReturnClass ( ) throws Exception { <nl> + assertEquals ( " Wrong class returned " , Class . class , <nl> + libSupportingObject . returnClass ( JNIEnv . CURRENT , TestLibrary . class ) ) ; <nl> + assertEquals ( " Wrong class returned " , StringBuilder . class , <nl> + libSupportingObject . returnClass ( JNIEnv . CURRENT , new StringBuilder ( ) ) ) ; <nl> + } <nl> + <nl> public void testInvokeBoolean ( ) { <nl> assertFalse ( " Expect false " , lib . returnFalse ( ) ) ; <nl> assertTrue ( " Expect true " , lib . returnTrue ( ) ) ; <nl> @ @ - 349 , 4 + 358 , 4 @ @ public class ReturnTypesTest extends TestCase { <nl> junit . textui . TestRunner . run ( ReturnTypesTest . class ) ; <nl> } <nl> <nl> - } <nl> + } <nl> \ No newline at end of file
diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index ceb1813 . . 91ddd27 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 115 , 6 + 115 , 7 @ @ enum { <nl> CVT _ TYPE _ MAPPER = com _ sun _ jna _ Native _ CVT _ TYPE _ MAPPER , <nl> CVT _ TYPE _ MAPPER _ STRING = com _ sun _ jna _ Native _ CVT _ TYPE _ MAPPER _ STRING , <nl> CVT _ TYPE _ MAPPER _ WSTRING = com _ sun _ jna _ Native _ CVT _ TYPE _ MAPPER _ WSTRING , <nl> + CVT _ OBJECT = com _ sun _ jna _ Native _ CVT _ OBJECT , <nl> } ; <nl> <nl> / * callback behavior flags * / <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 274bb78 . . cc28856 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 1534 , 8 + 1534 , 9 @ @ public final class Native implements Version { <nl> private static final int CVT _ TYPE _ MAPPER = 23 ; <nl> private static final int CVT _ TYPE _ MAPPER _ STRING = 24 ; <nl> private static final int CVT _ TYPE _ MAPPER _ WSTRING = 25 ; <nl> + private static final int CVT _ OBJECT = 26 ; <nl> <nl> - private static int getConversion ( Class < ? > type , TypeMapper mapper ) { <nl> + private static int getConversion ( Class < ? > type , TypeMapper mapper , boolean allowObjects ) { <nl> if ( type = = Boolean . class ) type = boolean . class ; <nl> else if ( type = = Byte . class ) type = byte . class ; <nl> else if ( type = = Short . class ) type = short . class ; <nl> @ @ - 1624 , 7 + 1625 , 7 @ @ public final class Native implements Version { <nl> } <nl> return CVT _ NATIVE _ MAPPED ; <nl> } <nl> - return CVT _ UNSUPPORTED ; <nl> + return allowObjects ? CVT _ OBJECT : CVT _ UNSUPPORTED ; <nl> } <nl> <nl> / * * <nl> @ @ - 1657 , 6 + 1658 , 7 @ @ public final class Native implements Version { <nl> List < Method > mlist = new ArrayList < Method > ( ) ; <nl> Map < String , ? > options = lib . getOptions ( ) ; <nl> TypeMapper mapper = ( TypeMapper ) options . get ( Library . OPTION _ TYPE _ MAPPER ) ; <nl> + boolean allowObjects = Boolean . TRUE . equals ( options . get ( Library . OPTION _ ALLOW _ OBJECTS ) ) ; <nl> options = cacheOptions ( cls , options , null ) ; <nl> <nl> for ( Method m : methods ) { <nl> @ @ - 1677 , 7 + 1679 , 7 @ @ public final class Native implements Version { <nl> int [ ] cvt = new int [ ptypes . length ] ; <nl> ToNativeConverter [ ] toNative = new ToNativeConverter [ ptypes . length ] ; <nl> FromNativeConverter fromNative = null ; <nl> - int rcvt = getConversion ( rclass , mapper ) ; <nl> + int rcvt = getConversion ( rclass , mapper , allowObjects ) ; <nl> boolean throwLastError = false ; <nl> switch ( rcvt ) { <nl> case CVT _ UNSUPPORTED : <nl> @ @ - 1701 , 6 + 1703 , 7 @ @ public final class Native implements Version { <nl> rtype = FFIType . get ( NativeMappedConverter . getInstance ( rclass ) . nativeType ( ) ) . peer ; <nl> break ; <nl> case CVT _ STRUCTURE : <nl> + case CVT _ OBJECT : <nl> closure _ rtype = rtype = FFIType . get ( Pointer . class ) . peer ; <nl> break ; <nl> case CVT _ STRUCTURE _ BYVAL : <nl> @ @ - 1714 , 7 + 1717 , 7 @ @ public final class Native implements Version { <nl> for ( int t = 0 ; t < ptypes . length ; t + + ) { <nl> Class < ? > type = ptypes [ t ] ; <nl> sig + = getSignature ( type ) ; <nl> - int conversionType = getConversion ( type , mapper ) ; <nl> + int conversionType = getConversion ( type , mapper , allowObjects ) ; <nl> cvt [ t ] = conversionType ; <nl> if ( conversionType = = CVT _ UNSUPPORTED ) { <nl> throw new IllegalArgumentException ( type + " is not a supported argument type ( in method " + method . getName ( ) + " in " + cls + " ) " ) ; <nl> diff - - git a / test / com / sun / jna / DirectReturnTypesTest . java b / test / com / sun / jna / DirectReturnTypesTest . java <nl> index 087471b . . afe0778 100644 <nl> - - - a / test / com / sun / jna / DirectReturnTypesTest . java <nl> + + + b / test / com / sun / jna / DirectReturnTypesTest . java <nl> @ @ - 24 , 6 + 24 , 7 @ @ <nl> package com . sun . jna ; <nl> <nl> import java . util . Map ; <nl> + import java . util . Collections ; <nl> <nl> / * * Exercise a range of native methods . <nl> * <nl> @ @ - 96 , 8 + 97 , 13 @ @ public class DirectReturnTypesTest extends ReturnTypesTest { <nl> } <nl> <nl> public static class DirectObjectTestLibrary extends DirectTestLibrary { <nl> - public DirectObjectTestLibrary ( Map < String , ? > options ) { <nl> - Native . register ( getClass ( ) , NativeLibrary . getInstance ( " testlib " , options ) ) ; <nl> + @ Override <nl> + public native Object returnObjectArgument ( Object s ) ; <nl> + @ Override <nl> + public native TestObject returnObjectArgument ( TestObject s ) ; <nl> + public DirectObjectTestLibrary ( ) { <nl> + Native . register ( getClass ( ) , NativeLibrary . getInstance ( " testlib " , <nl> + Collections . singletonMap ( Library . OPTION _ ALLOW _ OBJECTS , Boolean . TRUE ) ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 117 , 9 + 123 , 13 @ @ public class DirectReturnTypesTest extends ReturnTypesTest { <nl> return new DirectNativeMappedLibrary ( ) ; <nl> } <nl> <nl> - / / Override not - yet - supported tests <nl> + <nl> @ Override <nl> - public void testReturnObject ( ) { } <nl> + public void testReturnObject ( ) { <nl> + lib = new DirectObjectTestLibrary ( ) ; <nl> + } <nl> + <nl> + / / Override not - yet - supported tests <nl> @ Override <nl> public void testReturnPointerArray ( ) { } <nl> @ Override
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 4489122 . . ae3a267 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 2 , 6 + 2 , 20 @ @ NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and AL 2 . 0 ( see LICENSE <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> + At this point development of 4 . 5 . 0 and 5 . 0 . 0 happens in parallel . All changes <nl> + committed to 4 . 5 . 0 will be pulled into 5 . 0 . 0 . 5 . 0 . 0 is used to hold API <nl> + breaks . <nl> + <nl> + Release 5 . 0 . 0 ( Development ) <nl> + = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> + <nl> + Features <nl> + - - - - - - - - <nl> + <nl> + Bug Fixes <nl> + - - - - - - - - - <nl> + * [ # 652 ] ( https : / / github . com / java - native - access / jna / issues / 652 ) : Dead Lock in class initialization - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + <nl> Release 4 . 5 . 0 ( Next release ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> diff - - git a / build . xml b / build . xml <nl> index 8249305 . . 458fe13 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 49 , 15 + 49 , 15 @ @ <nl> < property name = " javadoc " location = " $ { doc } / javadoc " / > <nl> < property name = " stylesheet " location = " $ { javadoc } / doc / css / javadoc . css " / > <nl> < property name = " vendor " value = " JNA Development Team " / > <nl> - < property name = " year " value = " 2016 " / > <nl> + < property name = " year " value = " 2017 " / > <nl> < property name = " copyright " <nl> value = " Copyright & amp ; copy ; 2007 - $ { year } Timothy Wall . All Rights Reserved . " / > <nl> < buildnumber / > <nl> <nl> < property name = " android . versionCode " value = " 2 " / > <nl> < ! - - JNA library release version - - > <nl> - < property name = " jna . major " value = " 4 " / > <nl> - < property name = " jna . minor " value = " 5 " / > <nl> + < property name = " jna . major " value = " 5 " / > <nl> + < property name = " jna . minor " value = " 0 " / > <nl> < property name = " jna . revision " value = " 0 " / > <nl> < property name = " jna . build " value = " 0 " / > < ! - - $ { build . number } - - > <nl> < condition property = " version . suffix " value = " " else = " - SNAPSHOT " >
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / BaseTSD . java b / contrib / platform / src / com / sun / jna / platform / win32 / BaseTSD . java <nl> index f2687d0 . . 8d4da0c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / BaseTSD . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / BaseTSD . java <nl> @ @ - 24 , 6 + 24 , 7 @ @ <nl> package com . sun . jna . platform . win32 ; <nl> <nl> import com . sun . jna . IntegerType ; <nl> + import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . ptr . ByReference ; <nl> <nl> @ @ - 44 , 7 + 45 , 7 @ @ public interface BaseTSD { <nl> } <nl> <nl> public LONG _ PTR ( long value ) { <nl> - super ( Pointer . SIZE , value ) ; <nl> + super ( Native . POINTER _ SIZE , value ) ; <nl> } <nl> <nl> public Pointer toPointer ( ) { <nl> @ @ - 74 , 7 + 75 , 7 @ @ public interface BaseTSD { <nl> } <nl> <nl> public ULONG _ PTR ( long value ) { <nl> - super ( Pointer . SIZE , value , true ) ; <nl> + super ( Native . POINTER _ SIZE , value , true ) ; <nl> } <nl> <nl> public Pointer toPointer ( ) { <nl> @ @ - 90 , 11 + 91 , 11 @ @ public interface BaseTSD { <nl> this ( new ULONG _ PTR ( 0 ) ) ; <nl> } <nl> public ULONG _ PTRByReference ( ULONG _ PTR value ) { <nl> - super ( Pointer . SIZE ) ; <nl> + super ( Native . POINTER _ SIZE ) ; <nl> setValue ( value ) ; <nl> } <nl> public void setValue ( ULONG _ PTR value ) { <nl> - if ( Pointer . SIZE = = 4 ) { <nl> + if ( Native . POINTER _ SIZE = = 4 ) { <nl> getPointer ( ) . setInt ( 0 , value . intValue ( ) ) ; <nl> } <nl> else { <nl> @ @ - 102 , 7 + 103 , 7 @ @ public interface BaseTSD { <nl> } <nl> } <nl> public ULONG _ PTR getValue ( ) { <nl> - return new ULONG _ PTR ( Pointer . SIZE = = 4 <nl> + return new ULONG _ PTR ( Native . POINTER _ SIZE = = 4 <nl> ? getPointer ( ) . getInt ( 0 ) <nl> : getPointer ( ) . getLong ( 0 ) ) ; <nl> } <nl> @ @ - 118 , 7 + 119 , 7 @ @ public interface BaseTSD { <nl> } <nl> <nl> public DWORD _ PTR ( long value ) { <nl> - super ( Pointer . SIZE , value ) ; <nl> + super ( Native . POINTER _ SIZE , value ) ; <nl> } <nl> } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMInvoker . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMInvoker . java <nl> index ea5fee1 . . f5ffcbc 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMInvoker . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMInvoker . java <nl> @ @ - 24 , 6 + 24 , 7 @ @ <nl> package com . sun . jna . platform . win32 . COM ; <nl> <nl> import com . sun . jna . Function ; <nl> + import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . PointerType ; <nl> <nl> @ @ - 34 , 7 + 35 , 7 @ @ public abstract class COMInvoker extends PointerType { <nl> / / we take the vtable id and multiply with the pointer size ( 4 bytes on <nl> / / 32bit OS ) <nl> Function func = Function . getFunction ( vptr . getPointer ( vtableId <nl> - * Pointer . SIZE ) ) ; <nl> + * Native . POINTER _ SIZE ) ) ; <nl> return func . invokeInt ( args ) ; <nl> } <nl> <nl> @ @ - 43 , 7 + 44 , 7 @ @ public abstract class COMInvoker extends PointerType { <nl> / / we take the vtable id and multiply with the pointer size ( 4 bytes on <nl> / / 32bit OS ) <nl> Function func = Function . getFunction ( vptr . getPointer ( vtableId <nl> - * Pointer . SIZE ) ) ; <nl> + * Native . POINTER _ SIZE ) ) ; <nl> return func . invoke ( returnType , args ) ; <nl> } <nl> <nl> @ @ - 52 , 7 + 53 , 7 @ @ public abstract class COMInvoker extends PointerType { <nl> / / we take the vtable id and multiply with the pointer size ( 4 bytes on <nl> / / 32bit OS ) <nl> Function func = Function . getFunction ( vptr . getPointer ( vtableId <nl> - * Pointer . SIZE ) ) ; <nl> + * Native . POINTER _ SIZE ) ) ; <nl> func . invokeVoid ( args ) ; <nl> } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> index e3b899a . . 1ae62a8 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> @ @ - 157 , 7 + 157 , 7 @ @ public interface WTypes { <nl> <nl> public class BSTRByReference extends ByReference { <nl> public BSTRByReference ( ) { <nl> - super ( Pointer . SIZE ) ; <nl> + super ( Native . POINTER _ SIZE ) ; <nl> } <nl> <nl> public BSTRByReference ( BSTR value ) { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> index ecb0e25 . . 32e111d 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> @ @ - 50 , 7 + 50 , 7 @ @ public interface WinBase extends WinDef , BaseTSD { <nl> <nl> / * * Constant value representing an invalid HANDLE . * / <nl> HANDLE INVALID _ HANDLE _ VALUE = <nl> - new HANDLE ( Pointer . createConstant ( Pointer . SIZE = = 8 <nl> + new HANDLE ( Pointer . createConstant ( Native . POINTER _ SIZE = = 8 <nl> ? - 1 : 0xFFFFFFFFL ) ) ; <nl> <nl> int WAIT _ FAILED = 0xFFFFFFFF ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java <nl> index 7029b85 . . d27b2bc 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java <nl> @ @ - 683 , 7 + 683 , 7 @ @ public interface WinDef { <nl> * Instantiates a new int ptr . <nl> * / <nl> public INT _ PTR ( ) { <nl> - super ( Pointer . SIZE ) ; <nl> + super ( Native . POINTER _ SIZE ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 693 , 7 + 693 , 7 @ @ public interface WinDef { <nl> * the value <nl> * / <nl> public INT _ PTR ( long value ) { <nl> - super ( Pointer . SIZE , value ) ; <nl> + super ( Native . POINTER _ SIZE , value ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 715 , 7 + 715 , 7 @ @ public interface WinDef { <nl> * Instantiates a new uint ptr . <nl> * / <nl> public UINT _ PTR ( ) { <nl> - super ( Pointer . SIZE ) ; <nl> + super ( Native . POINTER _ SIZE ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 725 , 7 + 725 , 7 @ @ public interface WinDef { <nl> * the value <nl> * / <nl> public UINT _ PTR ( long value ) { <nl> - super ( Pointer . SIZE , value , true ) ; <nl> + super ( Native . POINTER _ SIZE , value , true ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index adc8111 . . 0420d47 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 394 , 7 + 394 , 7 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> } <nl> <nl> public PSIDByReference ( PSID h ) { <nl> - super ( Pointer . SIZE ) ; <nl> + super ( Native . POINTER _ SIZE ) ; <nl> setValue ( h ) ; <nl> } <nl> <nl> @ @ - 1393 , 7 + 1393 , 7 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> } <nl> <nl> public HANDLEByReference ( HANDLE h ) { <nl> - super ( Pointer . SIZE ) ; <nl> + super ( Native . POINTER _ SIZE ) ; <nl> setValue ( h ) ; <nl> } <nl> <nl> @ @ - 2605 , 7 + 2605 , 7 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> } <nl> <nl> public PACLByReference ( ACL h ) { <nl> - super ( Pointer . SIZE ) ; <nl> + super ( Native . POINTER _ SIZE ) ; <nl> setValue ( h ) ; <nl> } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinReg . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinReg . java <nl> index b9794a6 . . b85447d 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinReg . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinReg . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> + import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . ptr . ByReference ; <nl> @ @ - 48 , 7 + 49 , 7 @ @ public interface WinReg { <nl> } <nl> <nl> public HKEYByReference ( HKEY h ) { <nl> - super ( Pointer . SIZE ) ; <nl> + super ( Native . POINTER _ SIZE ) ; <nl> setValue ( h ) ; <nl> } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> index f371d7f . . f1b6824 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> @ @ - 27 , 6 + 27 , 7 @ @ import java . util . Arrays ; <nl> import java . util . List ; <nl> <nl> import com . sun . jna . Callback ; <nl> + import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> import com . sun . jna . Union ; <nl> @ @ - 198 , 9 + 199 , 9 @ @ public interface WinUser extends WinDef { <nl> int GWL _ USERDATA = - 21 ; <nl> int GWL _ HWNDPARENT = - 8 ; <nl> <nl> - int DWL _ DLGPROC = Pointer . SIZE ; <nl> + int DWL _ DLGPROC = Native . POINTER _ SIZE ; <nl> int DWL _ MSGRESULT = 0 ; <nl> - int DWL _ USER = 2 * Pointer . SIZE ; <nl> + int DWL _ USER = 2 * Native . POINTER _ SIZE ; <nl> <nl> / * Window Styles * / <nl> <nl> diff - - git a / src / com / sun / jna / CallbackReference . java b / src / com / sun / jna / CallbackReference . java <nl> index 2a11ec0 . . 5c9d62c 100644 <nl> - - - a / src / com / sun / jna / CallbackReference . java <nl> + + + b / src / com / sun / jna / CallbackReference . java <nl> @ @ - 363 , 7 + 363 , 7 @ @ public class CallbackReference extends WeakReference < Callback > { <nl> <nl> / * * Set the behavioral options for this callback . * / <nl> private void setCallbackOptions ( int options ) { <nl> - cbstruct . setInt ( Pointer . SIZE , options ) ; <nl> + cbstruct . setInt ( Native . POINTER _ SIZE , options ) ; <nl> } <nl> <nl> / * * Obtain a pointer to the native glue code for this callback . * / <nl> diff - - git a / src / com / sun / jna / Function . java b / src / com / sun / jna / Function . java <nl> index 15e5b78 . . 795901d 100644 <nl> - - - a / src / com / sun / jna / Function . java <nl> + + + b / src / com / sun / jna / Function . java <nl> @ @ - 381 , 7 + 381 , 7 @ @ public class Function extends Pointer { <nl> Class < ? > type = inArg . getClass ( ) . getComponentType ( ) ; <nl> Structure [ ] ss = ( Structure [ ] ) inArg ; <nl> for ( int si = 0 ; si < ss . length ; si + + ) { <nl> - Pointer p = array . getPointer ( Pointer . SIZE * si ) ; <nl> + Pointer p = array . getPointer ( Native . POINTER _ SIZE * si ) ; <nl> ss [ si ] = Structure . updateStructureByReference ( type , ss [ si ] , p ) ; <nl> } <nl> } <nl> @ @ - 814 , 12 + 814 , 12 @ @ public class Function extends Pointer { <nl> private static class PointerArray extends Memory implements PostCallRead { <nl> private final Pointer [ ] original ; <nl> public PointerArray ( Pointer [ ] arg ) { <nl> - super ( Pointer . SIZE * ( arg . length + 1 ) ) ; <nl> + super ( Native . POINTER _ SIZE * ( arg . length + 1 ) ) ; <nl> this . original = arg ; <nl> for ( int i = 0 ; i < arg . length ; i + + ) { <nl> - setPointer ( i * Pointer . SIZE , arg [ i ] ) ; <nl> + setPointer ( i * Native . POINTER _ SIZE , arg [ i ] ) ; <nl> } <nl> - setPointer ( Pointer . SIZE * arg . length , null ) ; <nl> + setPointer ( Native . POINTER _ SIZE * arg . length , null ) ; <nl> } <nl> @ Override <nl> public void read ( ) { <nl> diff - - git a / src / com / sun / jna / Memory . java b / src / com / sun / jna / Memory . java <nl> index 632f08f . . 60dfd77 100644 <nl> - - - a / src / com / sun / jna / Memory . java <nl> + + + b / src / com / sun / jna / Memory . java <nl> @ @ - 537 , 7 + 537 , 7 @ @ public class Memory extends Pointer { <nl> * / <nl> @ Override <nl> public Pointer getPointer ( long offset ) { <nl> - boundsCheck ( offset , Pointer . SIZE ) ; <nl> + boundsCheck ( offset , Native . POINTER _ SIZE ) ; <nl> return super . getPointer ( offset ) ; <nl> } <nl> <nl> @ @ - 689 , 7 + 689 , 7 @ @ public class Memory extends Pointer { <nl> * / <nl> @ Override <nl> public void setPointer ( long offset , Pointer value ) { <nl> - boundsCheck ( offset , Pointer . SIZE ) ; <nl> + boundsCheck ( offset , Native . POINTER _ SIZE ) ; <nl> super . setPointer ( offset , value ) ; <nl> } <nl> <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 274bb78 . . e36df27 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 210 , 7 + 210 , 7 @ @ public final class Native implements Version { <nl> WCHAR _ SIZE = sizeof ( TYPE _ WCHAR _ T ) ; <nl> SIZE _ T _ SIZE = sizeof ( TYPE _ SIZE _ T ) ; <nl> BOOL _ SIZE = sizeof ( TYPE _ BOOL ) ; <nl> - <nl> + <nl> / / Perform initialization of other JNA classes until * after * <nl> / / initializing the above final fields <nl> initIDs ( ) ; <nl> diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index a1465d5 . . 7c86589 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 870 , 7 + 870 , 7 @ @ public class NativeLibrary { <nl> if ( Platform . isLinux ( ) | | Platform . isSolaris ( ) <nl> | | Platform . isFreeBSD ( ) | | Platform . iskFreeBSD ( ) ) { <nl> / / Linux & FreeBSD use / usr / lib32 , solaris uses / usr / lib / 32 <nl> - archPath = ( Platform . isSolaris ( ) ? " / " : " " ) + Pointer . SIZE * 8 ; <nl> + archPath = ( Platform . isSolaris ( ) ? " / " : " " ) + Native . POINTER _ SIZE * 8 ; <nl> } <nl> String [ ] paths = { <nl> " / usr / lib " + archPath , <nl> diff - - git a / src / com / sun / jna / Pointer . java b / src / com / sun / jna / Pointer . java <nl> index e201d92 . . 815f256 100644 <nl> - - - a / src / com / sun / jna / Pointer . java <nl> + + + b / src / com / sun / jna / Pointer . java <nl> @ @ - 46 , 16 + 46 , 6 @ @ import java . util . List ; <nl> * / <nl> public class Pointer { <nl> <nl> - / * * Size of a native pointer , in bytes . * / <nl> - public static final int SIZE ; <nl> - <nl> - static { <nl> - / / Force load of native library <nl> - if ( ( SIZE = Native . POINTER _ SIZE ) = = 0 ) { <nl> - throw new Error ( " Native library not initialized " ) ; <nl> - } <nl> - } <nl> - <nl> / * * Convenience constant , same as < code > null < / code > . * / <nl> public static final Pointer NULL = null ; <nl> <nl> @ @ - 238 , 7 + 228 , 7 @ @ public class Pointer { <nl> * / <nl> public void read ( long offset , Pointer [ ] buf , int index , int length ) { <nl> for ( int i = 0 ; i < length ; i + + ) { <nl> - Pointer p = getPointer ( offset + i * Pointer . SIZE ) ; <nl> + Pointer p = getPointer ( offset + i * Native . POINTER _ SIZE ) ; <nl> Pointer oldp = buf [ i + index ] ; <nl> / / Avoid replacing the original pointer if it hasn ' t changed <nl> if ( oldp = = null | | p = = null | | p . peer ! = oldp . peer ) { <nl> @ @ - 359 , 7 + 349 , 7 @ @ public class Pointer { <nl> * / <nl> public void write ( long bOff , Pointer [ ] buf , int index , int length ) { <nl> for ( int i = 0 ; i < length ; i + + ) { <nl> - setPointer ( bOff + i * Pointer . SIZE , buf [ index + i ] ) ; <nl> + setPointer ( bOff + i * Native . POINTER _ SIZE , buf [ index + i ] ) ; <nl> } <nl> } <nl> <nl> @ @ - 779 , 7 + 769 , 7 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> Pointer p = getPointer ( offset ) ; <nl> while ( p ! = null ) { <nl> array . add ( p ) ; <nl> - addOffset + = Pointer . SIZE ; <nl> + addOffset + = Native . POINTER _ SIZE ; <nl> p = getPointer ( offset + addOffset ) ; <nl> } <nl> return array . toArray ( new Pointer [ array . size ( ) ] ) ; <nl> @ @ - 875 , 7 + 865 , 7 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> ? p . getWideString ( 0 ) : p . getString ( 0 , encoding ) ) ; <nl> strings . add ( s ) ; <nl> if ( count < length ) { <nl> - addOffset + = SIZE ; <nl> + addOffset + = Native . POINTER _ SIZE ; <nl> p = getPointer ( offset + addOffset ) ; <nl> } <nl> } <nl> @ @ - 886 , 7 + 876 , 7 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> : ( NativeString . WIDE _ STRING . equals ( encoding ) <nl> ? p . getWideString ( 0 ) : p . getString ( 0 , encoding ) ) ; <nl> strings . add ( s ) ; <nl> - addOffset + = SIZE ; <nl> + addOffset + = Native . POINTER _ SIZE ; <nl> } <nl> } <nl> return strings . toArray ( new String [ strings . size ( ) ] ) ; <nl> diff - - git a / src / com / sun / jna / StringArray . java b / src / com / sun / jna / StringArray . java <nl> index 14145d0 . . 82f5d40 100644 <nl> - - - a / src / com / sun / jna / StringArray . java <nl> + + + b / src / com / sun / jna / StringArray . java <nl> @ @ - 53 , 7 + 53 , 7 @ @ public class StringArray extends Memory implements Function . PostCallRead { <nl> this ( strings , NativeString . WIDE _ STRING ) ; <nl> } <nl> private StringArray ( Object [ ] strings , String encoding ) { <nl> - super ( ( strings . length + 1 ) * Pointer . SIZE ) ; <nl> + super ( ( strings . length + 1 ) * Native . POINTER _ SIZE ) ; <nl> this . original = strings ; <nl> this . encoding = encoding ; <nl> for ( int i = 0 ; i < strings . length ; i + + ) { <nl> @ @ - 63 , 9 + 63 , 9 @ @ public class StringArray extends Memory implements Function . PostCallRead { <nl> natives . add ( ns ) ; <nl> p = ns . getPointer ( ) ; <nl> } <nl> - setPointer ( Pointer . SIZE * i , p ) ; <nl> + setPointer ( Native . POINTER _ SIZE * i , p ) ; <nl> } <nl> - setPointer ( Pointer . SIZE * strings . length , null ) ; <nl> + setPointer ( Native . POINTER _ SIZE * strings . length , null ) ; <nl> } <nl> / * * Read back from native memory . * / <nl> @ Override <nl> @ @ - 73 , 7 + 73 , 7 @ @ public class StringArray extends Memory implements Function . PostCallRead { <nl> boolean returnWide = original instanceof WString [ ] ; <nl> boolean wide = NativeString . WIDE _ STRING . equals ( encoding ) ; <nl> for ( int si = 0 ; si < original . length ; si + + ) { <nl> - Pointer p = getPointer ( si * Pointer . SIZE ) ; <nl> + Pointer p = getPointer ( si * Native . POINTER _ SIZE ) ; <nl> Object s = null ; <nl> if ( p ! = null ) { <nl> s = wide ? p . getWideString ( 0 ) : p . getString ( 0 , encoding ) ; <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index c929a45 . . be71f4e 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 1411 , 11 + 1411 , 11 @ @ public abstract class Structure { <nl> | | Callback . class . isAssignableFrom ( type ) <nl> | | WString . class = = type <nl> | | String . class = = type ) { <nl> - alignment = Pointer . SIZE ; <nl> + alignment = Native . POINTER _ SIZE ; <nl> } <nl> else if ( Structure . class . isAssignableFrom ( type ) ) { <nl> if ( ByReference . class . isAssignableFrom ( type ) ) { <nl> - alignment = Pointer . SIZE ; <nl> + alignment = Native . POINTER _ SIZE ; <nl> } <nl> else { <nl> if ( value = = null ) <nl> @ @ - 1968 , 7 + 1968 , 7 @ @ public abstract class Structure { <nl> return Arrays . asList ( new String [ ] { " size " , " alignment " , " type " , " elements " } ) ; <nl> } <nl> private void init ( Pointer [ ] els ) { <nl> - elements = new Memory ( Pointer . SIZE * els . length ) ; <nl> + elements = new Memory ( Native . POINTER _ SIZE * els . length ) ; <nl> elements . write ( 0 , els , 0 , els . length ) ; <nl> write ( ) ; <nl> } <nl> diff - - git a / src / com / sun / jna / ptr / PointerByReference . java b / src / com / sun / jna / ptr / PointerByReference . java <nl> index e3b2b23 . . 91a7727 100644 <nl> - - - a / src / com / sun / jna / ptr / PointerByReference . java <nl> + + + b / src / com / sun / jna / ptr / PointerByReference . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ <nl> * / <nl> package com . sun . jna . ptr ; <nl> <nl> + import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> <nl> / * * Represents a reference to a pointer to native data . <nl> @ @ - 36 , 7 + 37 , 7 @ @ public class PointerByReference extends ByReference { <nl> } <nl> <nl> public PointerByReference ( Pointer value ) { <nl> - super ( Pointer . SIZE ) ; <nl> + super ( Native . POINTER _ SIZE ) ; <nl> setValue ( value ) ; <nl> } <nl> <nl> diff - - git a / src / com / sun / jna / win32 / StdCallFunctionMapper . java b / src / com / sun / jna / win32 / StdCallFunctionMapper . java <nl> index 91fa147 . . 951c6de 100644 <nl> - - - a / src / com / sun / jna / win32 / StdCallFunctionMapper . java <nl> + + + b / src / com / sun / jna / win32 / StdCallFunctionMapper . java <nl> @ @ - 49 , 7 + 49 , 7 @ @ public class StdCallFunctionMapper implements FunctionMapper { <nl> cls = NativeMappedConverter . getInstance ( cls ) . nativeType ( ) ; <nl> } <nl> if ( cls . isArray ( ) ) { <nl> - return Pointer . SIZE ; <nl> + return Native . POINTER _ SIZE ; <nl> } <nl> try { <nl> return Native . getNativeSize ( cls ) ; <nl> diff - - git a / test / com / sun / jna / HeadlessLoadLibraryTest . java b / test / com / sun / jna / HeadlessLoadLibraryTest . java <nl> index 6ae2bb4 . . e602756 100644 <nl> - - - a / test / com / sun / jna / HeadlessLoadLibraryTest . java <nl> + + + b / test / com / sun / jna / HeadlessLoadLibraryTest . java <nl> @ @ - 28 , 7 + 28 , 7 @ @ public class HeadlessLoadLibraryTest extends TestCase { <nl> <nl> public void testLoadWhenHeadless ( ) { <nl> System . setProperty ( " java . awt . headless " , " true " ) ; <nl> - assertTrue ( " Pointer size must not be zero " , Pointer . SIZE > 0 ) ; <nl> + assertTrue ( " Pointer size must not be zero " , Native . POINTER _ SIZE > 0 ) ; <nl> } <nl> <nl> public static void main ( String [ ] args ) { <nl> diff - - git a / test / com / sun / jna / LibraryLoadTest . java b / test / com / sun / jna / LibraryLoadTest . java <nl> index a3c7f57 . . 6678b26 100644 <nl> - - - a / test / com / sun / jna / LibraryLoadTest . java <nl> + + + b / test / com / sun / jna / LibraryLoadTest . java <nl> @ @ - 47 , 7 + 47 , 7 @ @ public class LibraryLoadTest extends TestCase implements Paths { <nl> } <nl> <nl> public void testLoadJNALibrary ( ) { <nl> - assertTrue ( " Pointer size should never be zero " , Pointer . SIZE > 0 ) ; <nl> + assertTrue ( " Pointer size should never be zero " , Native . POINTER _ SIZE > 0 ) ; <nl> } <nl> <nl> public void testLoadJAWT ( ) { <nl> @ @ - 65 , 7 + 65 , 7 @ @ public class LibraryLoadTest extends TestCase implements Paths { <nl> <nl> if ( GraphicsEnvironment . isHeadless ( ) ) return ; <nl> <nl> - if ( Pointer . SIZE > 0 ) { <nl> + if ( Native . POINTER _ SIZE > 0 ) { <nl> Toolkit . getDefaultToolkit ( ) ; <nl> } <nl> } <nl> diff - - git a / test / com / sun / jna / PointerTest . java b / test / com / sun / jna / PointerTest . java <nl> index 8196257 . . a49d6af 100644 <nl> - - - a / test / com / sun / jna / PointerTest . java <nl> + + + b / test / com / sun / jna / PointerTest . java <nl> @ @ - 88 , 7 + 88 , 7 @ @ public class PointerTest extends TestCase { <nl> } <nl> <nl> public void testSetNativeMapped ( ) { <nl> - Pointer p = new Memory ( Pointer . SIZE ) ; <nl> + Pointer p = new Memory ( Native . POINTER _ SIZE ) ; <nl> TestPointerType tp = new TestPointerType ( p ) ; <nl> <nl> p . setValue ( 0 , tp , tp . getClass ( ) ) ; <nl> @ @ - 97 , 7 + 97 , 7 @ @ public class PointerTest extends TestCase { <nl> } <nl> <nl> public void testGetNativeMapped ( ) { <nl> - Pointer p = new Memory ( Pointer . SIZE ) ; <nl> + Pointer p = new Memory ( Native . POINTER _ SIZE ) ; <nl> p . setPointer ( 0 , null ) ; <nl> Object o = p . getValue ( 0 , TestPointerType . class , null ) ; <nl> assertNull ( " Wrong empty value : " + o , o ) ; <nl> @ @ - 107 , 14 + 107 , 14 @ @ public class PointerTest extends TestCase { <nl> } <nl> <nl> public void testGetStringArray ( ) { <nl> - Pointer p = new Memory ( Pointer . SIZE * 3 ) ; <nl> + Pointer p = new Memory ( Native . POINTER _ SIZE * 3 ) ; <nl> final String VALUE1 = getName ( ) + UNICODE ; <nl> final String VALUE2 = getName ( ) + " 2 " + UNICODE ; <nl> final String ENCODING = " utf8 " ; <nl> <nl> p . setPointer ( 0 , new NativeString ( VALUE1 , ENCODING ) . getPointer ( ) ) ; <nl> - p . setPointer ( Pointer . SIZE , new NativeString ( VALUE2 , ENCODING ) . getPointer ( ) ) ; <nl> - p . setPointer ( Pointer . SIZE * 2 , null ) ; <nl> + p . setPointer ( Native . POINTER _ SIZE , new NativeString ( VALUE2 , ENCODING ) . getPointer ( ) ) ; <nl> + p . setPointer ( Native . POINTER _ SIZE * 2 , null ) ; <nl> <nl> assertEquals ( " Wrong null - terminated String array " , <nl> Arrays . asList ( new String [ ] { VALUE1 , VALUE2 } ) , <nl> @ @ - 129 , 13 + 129 , 13 @ @ public class PointerTest extends TestCase { <nl> } <nl> <nl> public void testGetWideStringArray ( ) { <nl> - Pointer p = new Memory ( Pointer . SIZE * 3 ) ; <nl> + Pointer p = new Memory ( Native . POINTER _ SIZE * 3 ) ; <nl> final String VALUE1 = getName ( ) + UNICODE ; <nl> final String VALUE2 = getName ( ) + " 2 " + UNICODE ; <nl> <nl> p . setPointer ( 0 , new NativeString ( VALUE1 , true ) . getPointer ( ) ) ; <nl> - p . setPointer ( Pointer . SIZE , new NativeString ( VALUE2 , true ) . getPointer ( ) ) ; <nl> - p . setPointer ( Pointer . SIZE * 2 , null ) ; <nl> + p . setPointer ( Native . POINTER _ SIZE , new NativeString ( VALUE2 , true ) . getPointer ( ) ) ; <nl> + p . setPointer ( Native . POINTER _ SIZE * 2 , null ) ; <nl> <nl> assertEquals ( " Wrong null - terminated String array " , <nl> Arrays . asList ( new String [ ] { VALUE1 , VALUE2 } ) , <nl> @ @ - 150 , 7 + 150 , 7 @ @ public class PointerTest extends TestCase { <nl> } <nl> <nl> public void testReadPointerArray ( ) { <nl> - Pointer mem = new Memory ( Pointer . SIZE * 2 ) ; <nl> + Pointer mem = new Memory ( Native . POINTER _ SIZE * 2 ) ; <nl> Pointer [ ] p = new Pointer [ 2 ] ; <nl> String VALUE1 = getName ( ) ; <nl> <nl> @ @ - 166 , 7 + 166 , 7 @ @ public class PointerTest extends TestCase { <nl> assertSame ( " Pointer object not preserved [ 1 ] " , orig [ 1 ] , p [ 1 ] ) ; <nl> <nl> mem . setPointer ( 0 , null ) ; <nl> - mem . setPointer ( Pointer . SIZE , new Memory ( 1024 ) ) ; <nl> + mem . setPointer ( Native . POINTER _ SIZE , new Memory ( 1024 ) ) ; <nl> mem . read ( 0 , p , 0 , p . length ) ; <nl> assertNull ( " Pointer element not updated [ 0 ] " , p [ 0 ] ) ; <nl> assertNotSame ( " Pointer element not updated [ 1 ] " , orig [ 1 ] , p [ 1 ] ) ; <nl> @ @ - 181 , 7 + 181 , 7 @ @ public class PointerTest extends TestCase { <nl> } <nl> <nl> public void testReadStringArrayNULLElement ( ) { <nl> - Memory m = new Memory ( Pointer . SIZE ) ; <nl> + Memory m = new Memory ( Native . POINTER _ SIZE ) ; <nl> m . clear ( ) ; <nl> String [ ] arr = m . getStringArray ( 0 , 1 ) ; <nl> assertEquals ( " Wrong array size " , 1 , arr . length ) ; <nl> diff - - git a / test / com / sun / jna / StructureBufferFieldTest . java b / test / com / sun / jna / StructureBufferFieldTest . java <nl> index 9f89784 . . e66fabe 100644 <nl> - - - a / test / com / sun / jna / StructureBufferFieldTest . java <nl> + + + b / test / com / sun / jna / StructureBufferFieldTest . java <nl> @ @ - 74 , 7 + 74 , 7 @ @ public class StructureBufferFieldTest extends TestCase { <nl> public void testBufferFieldReadChanged ( ) { <nl> if ( ! Platform . HAS _ BUFFERS ) return ; <nl> BufferStructure bs = new BufferStructure ( ) ; <nl> - if ( Pointer . SIZE = = 4 ) { <nl> + if ( Native . POINTER _ SIZE = = 4 ) { <nl> bs . getPointer ( ) . setInt ( 0 , 0x1 ) ; <nl> } <nl> else { <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index 3adc2e8 . . 21f80f6 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 945 , 7 + 945 , 7 @ @ public class StructureTest extends TestCase { <nl> public void testPointerArrayField ( ) { <nl> ArrayOfPointerStructure s = new ArrayOfPointerStructure ( ) ; <nl> int size = s . size ( ) ; <nl> - assertEquals ( " Wrong size " , ArrayOfPointerStructure . SIZE * Pointer . SIZE , size ) ; <nl> + assertEquals ( " Wrong size " , ArrayOfPointerStructure . SIZE * Native . POINTER _ SIZE , size ) ; <nl> s . array [ 0 ] = s . getPointer ( ) ; <nl> s . write ( ) ; <nl> s . array [ 0 ] = null ; <nl> @ @ - 992 , 7 + 992 , 7 @ @ public class StructureTest extends TestCase { <nl> } <nl> public void testStructureByReferenceField ( ) { <nl> StructureWithPointers s = new StructureWithPointers ( ) ; <nl> - assertEquals ( " Wrong size for structure with structure references " , Pointer . SIZE * 2 , s . size ( ) ) ; <nl> + assertEquals ( " Wrong size for structure with structure references " , Native . POINTER _ SIZE * 2 , s . size ( ) ) ; <nl> assertNull ( " Initial refs should be null " , s . s1 ) ; <nl> } <nl> <nl> @ @ - 1060 , 14 + 1060 , 14 @ @ public class StructureTest extends TestCase { <nl> m2 . setString ( 0 , WVALUE ) ; <nl> <nl> s . getPointer ( ) . setPointer ( 0 , m ) ; <nl> - s . getPointer ( ) . setPointer ( Pointer . SIZE , m2 ) ; <nl> + s . getPointer ( ) . setPointer ( Native . POINTER _ SIZE , m2 ) ; <nl> s . read ( ) ; <nl> assertEquals ( " Wrong String field value " , VALUE , s . s ) ; <nl> assertEquals ( " Wrong WString field value " , WVALUE , s . ws ) ; <nl> <nl> s . write ( ) ; <nl> assertEquals ( " String field should not be overwritten : " + s , m , s . getPointer ( ) . getPointer ( 0 ) ) ; <nl> - assertEquals ( " WString field should not be overwritten : " + s , m2 , s . getPointer ( ) . getPointer ( Pointer . SIZE ) ) ; <nl> + assertEquals ( " WString field should not be overwritten : " + s , m2 , s . getPointer ( ) . getPointer ( Native . POINTER _ SIZE ) ) ; <nl> } <nl> <nl> / / Ensure string cacheing doesn ' t interfere with wrapped structure writes . <nl> @ @ - 1148 , 7 + 1148 , 7 @ @ public class StructureTest extends TestCase { <nl> } <nl> } <nl> TestStructure s = new TestStructure ( ) ; <nl> - assertEquals ( " Wrong structure size " , 2 * Pointer . SIZE , s . size ( ) ) ; <nl> + assertEquals ( " Wrong structure size " , 2 * Native . POINTER _ SIZE , s . size ( ) ) ; <nl> <nl> PublicTestStructure . ByReference ref = new PublicTestStructure . ByReference ( ) ; <nl> ref . x = 42 ; <nl> @ @ - 1256 , 9 + 1256 , 9 @ @ public class StructureTest extends TestCase { <nl> inner , els . getPointer ( 0 ) ) ; <nl> assertEquals ( " Wrong type information for integer field " , <nl> Structure . getTypeInfo ( Integer . valueOf ( 0 ) ) , <nl> - els . getPointer ( Pointer . SIZE ) ) ; <nl> + els . getPointer ( Native . POINTER _ SIZE ) ) ; <nl> assertNull ( " Type element list should be null - terminated " , <nl> - els . getPointer ( Pointer . SIZE * 2 ) ) ; <nl> + els . getPointer ( Native . POINTER _ SIZE * 2 ) ) ; <nl> } <nl> <nl> public void testInnerArrayTypeInfo ( ) { <nl> diff - - git a / test / com / sun / jna / UnionTest . java b / test / com / sun / jna / UnionTest . java <nl> index 43f69e0 . . de6a179 100644 <nl> - - - a / test / com / sun / jna / UnionTest . java <nl> + + + b / test / com / sun / jna / UnionTest . java <nl> @ @ - 92 , 7 + 92 , 7 @ @ public class UnionTest extends TestCase { <nl> <nl> public void testFieldOffsets ( ) { <nl> StructUnion u = new StructUnion ( ) ; <nl> - assertEquals ( " Wrong union size : " + u , Pointer . SIZE , u . size ( ) ) ; <nl> + assertEquals ( " Wrong union size : " + u , Native . POINTER _ SIZE , u . size ( ) ) ; <nl> u . setType ( u . testStruct . getClass ( ) ) ; <nl> u . write ( ) ; <nl> assertEquals ( " Wrong struct member base address " , <nl> @ @ - 132 , 7 + 132 , 7 @ @ public class UnionTest extends TestCase { <nl> final int VALUE = 0x12345678 ; <nl> / / write an instance of a direct union class to memory <nl> StructUnion u = new StructUnion ( ) ; <nl> - assertEquals ( " Wrong union size : " + u , Pointer . SIZE , u . size ( ) ) ; <nl> + assertEquals ( " Wrong union size : " + u , Native . POINTER _ SIZE , u . size ( ) ) ; <nl> IntStructure intStruct = new IntStructure ( ) ; <nl> intStruct . value = VALUE ; <nl> u . setTypedValue ( intStruct ) ; <nl> @ @ - 158 , 7 + 158 , 7 @ @ public class UnionTest extends TestCase { <nl> <nl> public void testReadTypedUnion ( ) { <nl> StructUnion u = new StructUnion ( ) ; <nl> - assertEquals ( " Wrong union size : " + u , Pointer . SIZE , u . size ( ) ) ; <nl> + assertEquals ( " Wrong union size : " + u , Native . POINTER _ SIZE , u . size ( ) ) ; <nl> final int VALUE = 0x12345678 ; <nl> u . getPointer ( ) . setInt ( 0 , VALUE ) ; <nl> assertEquals ( " int structure not read properly " , VALUE , ( ( IntStructure ) u . getTypedValue ( IntStructure . class ) ) . value ) ; <nl> diff - - git a / test / com / sun / jna / VMCrashProtectionTest . java b / test / com / sun / jna / VMCrashProtectionTest . java <nl> index 45474b0 . . 6c0fb6e 100644 <nl> - - - a / test / com / sun / jna / VMCrashProtectionTest . java <nl> + + + b / test / com / sun / jna / VMCrashProtectionTest . java <nl> @ @ - 40 , 8 + 40 , 8 @ @ public class VMCrashProtectionTest extends TestCase { <nl> if ( ! Native . isProtected ( ) ) <nl> return ; <nl> <nl> - Memory m = new Memory ( Pointer . SIZE ) ; <nl> - if ( Pointer . SIZE = = 4 ) <nl> + Memory m = new Memory ( Native . POINTER _ SIZE ) ; <nl> + if ( Native . POINTER _ SIZE = = 4 ) <nl> m . setInt ( 0 , 1 ) ; <nl> else <nl> m . setLong ( 0 , 1 ) ; <nl> diff - - git a / test / com / sun / jna / win32 / W32APIMapperTest . java b / test / com / sun / jna / win32 / W32APIMapperTest . java <nl> index 4f3d291 . . b5a5eb8 100644 <nl> - - - a / test / com / sun / jna / win32 / W32APIMapperTest . java <nl> + + + b / test / com / sun / jna / win32 / W32APIMapperTest . java <nl> @ @ - 96 , 10 + 96 , 10 @ @ public class W32APIMapperTest extends TestCase { <nl> <nl> public void testInvalidHandleValue ( ) { <nl> String EXPECTED = " @ 0xffffffff " ; <nl> - if ( Pointer . SIZE = = 8 ) { <nl> + if ( Native . POINTER _ SIZE = = 8 ) { <nl> EXPECTED + = " ffffffff " ; <nl> } <nl> - Pointer p = Pointer . createConstant ( Pointer . SIZE = = 8 ? - 1 : 0xFFFFFFFFL ) ; <nl> + Pointer p = Pointer . createConstant ( Native . POINTER _ SIZE = = 8 ? - 1 : 0xFFFFFFFFL ) ; <nl> assertTrue ( " Wrong value : " + p , p . toString ( ) . endsWith ( EXPECTED ) ) ; <nl> <nl> } <nl> @ @ - 133 , 41 + 133 , 41 @ @ public class W32APIMapperTest extends TestCase { <nl> public void testUnicodeStructureSize ( ) { <nl> UnicodeLibrary . TestStructure s = new UnicodeLibrary . TestStructure ( ) ; <nl> assertEquals ( " Wrong structure size " , <nl> - Pointer . SIZE * 2 + 8 , s . size ( ) ) ; <nl> + Native . POINTER _ SIZE * 2 + 8 , s . size ( ) ) ; <nl> } <nl> <nl> public void testASCIIStructureSize ( ) { <nl> ASCIILibrary . TestStructure s = new ASCIILibrary . TestStructure ( ) ; <nl> assertEquals ( " Wrong structure size " , <nl> - Pointer . SIZE * 2 + 8 , s . size ( ) ) ; <nl> + Native . POINTER _ SIZE * 2 + 8 , s . size ( ) ) ; <nl> } <nl> <nl> public void testUnicodeStructureWriteBoolean ( ) { <nl> UnicodeLibrary . TestStructure s = new UnicodeLibrary . TestStructure ( ) ; <nl> s . bool2 = true ; <nl> s . write ( ) ; <nl> - assertEquals ( " Wrong value written for FALSE " , 0 , s . getPointer ( ) . getInt ( Pointer . SIZE * 2 ) ) ; <nl> - assertEquals ( " Wrong value written for TRUE " , 1 , s . getPointer ( ) . getInt ( Pointer . SIZE * 2 + 4 ) ) ; <nl> + assertEquals ( " Wrong value written for FALSE " , 0 , s . getPointer ( ) . getInt ( Native . POINTER _ SIZE * 2 ) ) ; <nl> + assertEquals ( " Wrong value written for TRUE " , 1 , s . getPointer ( ) . getInt ( Native . POINTER _ SIZE * 2 + 4 ) ) ; <nl> } <nl> public void testASCIIStructureWriteBoolean ( ) { <nl> ASCIILibrary . TestStructure s = new ASCIILibrary . TestStructure ( ) ; <nl> s . bool2 = true ; <nl> s . write ( ) ; <nl> - assertEquals ( " Wrong value written for FALSE " , 0 , s . getPointer ( ) . getInt ( Pointer . SIZE * 2 ) ) ; <nl> - assertEquals ( " Wrong value written for TRUE " , 1 , s . getPointer ( ) . getInt ( Pointer . SIZE * 2 + 4 ) ) ; <nl> + assertEquals ( " Wrong value written for FALSE " , 0 , s . getPointer ( ) . getInt ( Native . POINTER _ SIZE * 2 ) ) ; <nl> + assertEquals ( " Wrong value written for TRUE " , 1 , s . getPointer ( ) . getInt ( Native . POINTER _ SIZE * 2 + 4 ) ) ; <nl> } <nl> public void testUnicodeStructureReadBoolean ( ) { <nl> UnicodeLibrary . TestStructure s = new UnicodeLibrary . TestStructure ( ) ; <nl> - s . getPointer ( ) . setInt ( Pointer . SIZE * 2 , 1 ) ; <nl> - s . getPointer ( ) . setInt ( Pointer . SIZE * 2 + 4 , 0 ) ; <nl> + s . getPointer ( ) . setInt ( Native . POINTER _ SIZE * 2 , 1 ) ; <nl> + s . getPointer ( ) . setInt ( Native . POINTER _ SIZE * 2 + 4 , 0 ) ; <nl> s . read ( ) ; <nl> assertTrue ( " Wrong value read for TRUE " , s . bool ) ; <nl> assertFalse ( " Wrong value read for FALSE " , s . bool2 ) ; <nl> } <nl> public void testASCIIStructureReadBoolean ( ) { <nl> ASCIILibrary . TestStructure s = new ASCIILibrary . TestStructure ( ) ; <nl> - s . getPointer ( ) . setInt ( Pointer . SIZE * 2 , 1 ) ; <nl> - s . getPointer ( ) . setInt ( Pointer . SIZE * 2 + 4 , 0 ) ; <nl> + s . getPointer ( ) . setInt ( Native . POINTER _ SIZE * 2 , 1 ) ; <nl> + s . getPointer ( ) . setInt ( Native . POINTER _ SIZE * 2 + 4 , 0 ) ; <nl> s . read ( ) ; <nl> assertTrue ( " Wrong value read for TRUE " , s . bool ) ; <nl> assertFalse ( " Wrong value read for FALSE " , s . bool2 ) ; <nl> @ @ - 178 , 7 + 178 , 7 @ @ public class W32APIMapperTest extends TestCase { <nl> s . string2 = MAGIC ; <nl> s . write ( ) ; <nl> assertEquals ( " Improper null write " , null , s . getPointer ( ) . getPointer ( 0 ) ) ; <nl> - assertEquals ( " Improper string write " , MAGIC , s . getPointer ( ) . getPointer ( Pointer . SIZE ) . getWideString ( 0 ) ) ; <nl> + assertEquals ( " Improper string write " , MAGIC , s . getPointer ( ) . getPointer ( Native . POINTER _ SIZE ) . getWideString ( 0 ) ) ; <nl> } <nl> public void testASCIIStructureWriteString ( ) { <nl> ASCIILibrary . TestStructure s = new ASCIILibrary . TestStructure ( ) ; <nl> @ @ - 186 , 7 + 186 , 7 @ @ public class W32APIMapperTest extends TestCase { <nl> s . string2 = MAGIC ; <nl> s . write ( ) ; <nl> assertEquals ( " Improper null write " , null , s . getPointer ( ) . getPointer ( 0 ) ) ; <nl> - assertEquals ( " Improper string write " , MAGIC , s . getPointer ( ) . getPointer ( Pointer . SIZE ) . getString ( 0 ) ) ; <nl> + assertEquals ( " Improper string write " , MAGIC , s . getPointer ( ) . getPointer ( Native . POINTER _ SIZE ) . getString ( 0 ) ) ; <nl> } <nl> public void testUnicodeStructureReadString ( ) { <nl> UnicodeLibrary . TestStructure s = new UnicodeLibrary . TestStructure ( ) ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / WindowUtils . java b / contrib / platform / src / com / sun / jna / platform / WindowUtils . java <nl> index 145b350 . . 532dc9c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / WindowUtils . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / WindowUtils . java <nl> @ @ - 1389 , 11 + 1389 , 13 @ @ public class WindowUtils { <nl> whenDisplayable ( w , new Runnable ( ) { <nl> 	 	 	 	 @ Override <nl> public void run ( ) { <nl> - Object peer = w . getPeer ( ) ; <nl> try { <nl> - Class < ? > cls = peer . getClass ( ) ; <nl> - Method m = cls . getMethod ( " setAlpha " , new Class [ ] { float . class } ) ; <nl> - m . invoke ( peer , Float . valueOf ( alpha ) ) ; <nl> + / / This will work with old Apple AWT implementations and <nl> + / / not with openjdk <nl> + Method getPeer = w . getClass ( ) . getMethod ( " getPeer " ) ; <nl> + Object peer = getPeer . invoke ( w ) ; <nl> + Method setAlpha = peer . getClass ( ) . getMethod ( " setAlpha " , new Class [ ] { float . class } ) ; <nl> + setAlpha . invoke ( peer , Float . valueOf ( alpha ) ) ; <nl> } <nl> catch ( Exception e ) { <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index ba676ab . . 4489122 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 16 , 6 + 16 , 7 @ @ Bug Fixes <nl> * [ # 776 ] ( https : / / github . com / java - native - access / jna / issues / 776 ) : Do not include ClassPath attribute in MANIFEST . MF of jna - platform . - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 785 ] ( https : / / github . com / java - native - access / jna / issues / 785 ) : OaIdlUtil # toPrimitiveArray fails if dimension bounds are not 0 - based - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 795 ] ( https : / / github . com / java - native - access / jna / issues / 795 ) : com . sun . jna . platform . win32 . WinDef . WORDByReference holds a WORD which is defined to 16 bit on windows , so it needs to be accessed as short ( getShort ( ) ) . Fix suggested by - [ @ kdeines ] ( https : / / github . com / kdeines ) . <nl> + * [ # 804 ] ( https : / / github . com / java - native - access / jna / pull / 804 ) Main - Class in jna - platform . jar collides with java 9 module system - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 4 . 4 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index 203e7ff . . 5a99455 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 102 , 7 + 102 , 6 @ @ <nl> < target name = " - pre - jar " > <nl> < tempfile deleteonexit = " true " destdir = " $ { build . dir } " property = " tmp . manifest . file " / > <nl> < manifest file = " $ { tmp . manifest . file } " mode = " replace " > <nl> - < attribute name = " Main - Class " value = " com . sun . jna . Native " / > <nl> < attribute name = " Manifest - Version " value = " 1 . 0 " / > <nl> < attribute name = " Implementation - Title " value = " $ { impl . title } " / > <nl> < attribute name = " Implementation - Vendor " value = " $ { vendor } " / >
diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index 78ae1af . . c929a45 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 1499 , 23 + 1499 , 22 @ @ public abstract class Structure { <nl> type = format ( sf . type . getComponentType ( ) ) ; <nl> index = " [ " + Array . getLength ( value ) + " ] " ; <nl> } <nl> - contents + = " " + type + " " <nl> - + sf . name + index + " @ " + Integer . toHexString ( sf . offset ) ; <nl> + contents + = String . format ( " % s % s % s @ 0x % X " , type , sf . name , index , sf . offset ) ; <nl> if ( value instanceof Structure ) { <nl> value = ( ( Structure ) value ) . toString ( indent + 1 , ! ( value instanceof Structure . ByReference ) , dumpMemory ) ; <nl> } <nl> contents + = " = " ; <nl> if ( value instanceof Long ) { <nl> - contents + = Long . toHexString ( ( ( Long ) value ) . longValue ( ) ) ; <nl> + contents + = String . format ( " 0x % 08X " , ( Long ) value ) ; <nl> } <nl> else if ( value instanceof Integer ) { <nl> - contents + = Integer . toHexString ( ( ( Integer ) value ) . intValue ( ) ) ; <nl> + contents + = String . format ( " 0x % 04X " , ( Integer ) value ) ; <nl> } <nl> else if ( value instanceof Short ) { <nl> - contents + = Integer . toHexString ( ( ( Short ) value ) . shortValue ( ) ) ; <nl> + contents + = String . format ( " 0x % 02X " , ( Short ) value ) ; <nl> } <nl> else if ( value instanceof Byte ) { <nl> - contents + = Integer . toHexString ( ( ( Byte ) value ) . byteValue ( ) ) ; <nl> + contents + = String . format ( " 0x % 01X " , ( Byte ) value ) ; <nl> } <nl> else { <nl> contents + = String . valueOf ( value ) . trim ( ) ; <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index d23abbc . . 3adc2e8 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 1299 , 10 + 1299 , 10 @ @ public class StructureTest extends TestCase { <nl> final String LS = System . getProperty ( " line . separator " ) ; <nl> System . setProperty ( " jna . dump _ memory " , " true " ) ; <nl> final String EXPECTED = " ( ? m ) . * " + s . size ( ) + " bytes . * \ \ { " + LS <nl> - + " int intField @ 0 = 0 " + LS <nl> - + " . * inner @ 4 = . * \ \ { " + LS <nl> - + " int x @ 0 = . * " + LS <nl> - + " int y @ 4 = . * " + LS <nl> + + " int intField @ 0x0 = 0x0000 " + LS <nl> + + " . * inner @ 0x4 = . * \ \ { " + LS <nl> + + " int x @ 0x0 = . * " + LS <nl> + + " int y @ 0x4 = . * " + LS <nl> + " \ \ } " + LS <nl> + " \ \ } " + LS <nl> + " memory dump " + LS
diff - - git a / www / FrequentlyAskedQuestions . md b / www / FrequentlyAskedQuestions . md <nl> index 13e55a6 . . af1a23b 100644 <nl> - - - a / www / FrequentlyAskedQuestions . md <nl> + + + b / www / FrequentlyAskedQuestions . md <nl> @ @ - 199 , 4 + 199 , 21 @ @ experience with the JNA COM support . <nl> <nl> Additional resource that should be checked are JACOB or com4j , both of which can <nl> parse a COM interface definition and generate a Java object to match it . <nl> - JNAerator is also working on generating COM bindings . <nl> \ No newline at end of file <nl> + JNAerator is also working on generating COM bindings . <nl> + <nl> + JNA on Android <nl> + - - - - - - - - - - - - - - <nl> + <nl> + To use JNA on Android add the following dependency to gradle ( note the ` @ aar ` ) : <nl> + <nl> + ` ` ` <nl> + compile ' net . java . dev . jna : jna : 4 . 4 . 0 @ aar ' <nl> + ` ` ` <nl> + <nl> + If you ' re using Proguard , you should also add the following to your Proguard rules : <nl> + <nl> + ` ` ` <nl> + - dontwarn java . awt . * <nl> + - keep class com . sun . jna . * { * ; } <nl> + - keepclassmembers class * extends com . sun . jna . * { public * ; } <nl> + ` ` `
diff - - git a / build . xml b / build . xml <nl> index 6389fb0 . . 8249305 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 562 , 6 + 562 , 8 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> package = " com . sun . jna " <nl> android : versionCode = " ] ] > $ { android . versionCode } < ! [ CDATA [ " <nl> android : versionName = " ] ] > $ { jna . version } < ! [ CDATA [ " > <nl> + <nl> + < uses - sdk android : targetSdkVersion = " 25 " / > <nl> < / manifest > <nl> ] ] > < / echo > <nl> < zip zipfile = " $ { build } / $ { aar } " >
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 7ed28ac . . 9c931c3 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 13 , 6 + 13 , 7 @ @ Features <nl> Bug Fixes <nl> - - - - - - - - - <nl> * [ # 776 ] ( https : / / github . com / java - native - access / jna / issues / 776 ) : Do not include ClassPath attribute in MANIFEST . MF of jna - platform . - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 785 ] ( https : / / github . com / java - native - access / jna / issues / 785 ) : OaIdlUtil # toPrimitiveArray fails if dimension bounds are not 0 - based - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 4 . 4 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdlUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdlUtil . java <nl> index 865397f . . 086262d 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdlUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdlUtil . java <nl> @ @ - 105 , 16 + 105 , 12 @ @ public abstract class OaIdlUtil { <nl> Pointer dataPointer = sa . accessData ( ) ; <nl> try { <nl> int dimensions = sa . getDimensionCount ( ) ; <nl> - int [ ] minIdx = new int [ dimensions ] ; <nl> - int [ ] maxIdx = new int [ dimensions ] ; <nl> int [ ] elements = new int [ dimensions ] ; <nl> int [ ] cumElements = new int [ dimensions ] ; <nl> int varType = sa . getVarType ( ) . intValue ( ) ; <nl> <nl> for ( int i = 0 ; i < dimensions ; i + + ) { <nl> - minIdx [ i ] = sa . getLBound ( i ) ; <nl> - maxIdx [ i ] = sa . getUBound ( i ) ; <nl> - elements [ i ] = maxIdx [ i ] - minIdx [ i ] + 1 ; <nl> + elements [ i ] = sa . getUBound ( i ) - sa . getLBound ( i ) + 1 ; <nl> } <nl> <nl> for ( int i = dimensions - 1 ; i > = 0 ; i - - ) { <nl> @ @ - 173 , 7 + 169 , 7 @ @ public abstract class OaIdlUtil { <nl> } <nl> <nl> Object targetArray = Array . newInstance ( Object . class , elements ) ; <nl> - toPrimitiveArray ( sourceArray , targetArray , minIdx , maxIdx , elements , cumElements , varType , new int [ 0 ] ) ; <nl> + toPrimitiveArray ( sourceArray , targetArray , elements , cumElements , varType , new int [ 0 ] ) ; <nl> return targetArray ; <nl> } finally { <nl> sa . unaccessData ( ) ; <nl> @ @ - 183 , 19 + 179 , 19 @ @ public abstract class OaIdlUtil { <nl> } <nl> } <nl> <nl> - private static void toPrimitiveArray ( Object dataArray , Object targetArray , int [ ] minIdx , int [ ] maxIdx , int [ ] elements , int [ ] cumElements , int varType , int [ ] currentIdx ) { <nl> + private static void toPrimitiveArray ( Object dataArray , Object targetArray , int [ ] elements , int [ ] cumElements , int varType , int [ ] currentIdx ) { <nl> int dimIdx = currentIdx . length ; <nl> int [ ] subIdx = new int [ currentIdx . length + 1 ] ; <nl> System . arraycopy ( currentIdx , 0 , subIdx , 0 , dimIdx ) ; <nl> - for ( int i = minIdx [ dimIdx ] ; i < = maxIdx [ dimIdx ] ; i + + ) { <nl> + for ( int i = 0 ; i < elements [ dimIdx ] ; i + + ) { <nl> subIdx [ dimIdx ] = i ; <nl> - if ( dimIdx = = ( minIdx . length - 1 ) ) { <nl> + if ( dimIdx = = ( elements . length - 1 ) ) { <nl> int offset = 0 ; <nl> for ( int j = 0 ; j < dimIdx ; j + + ) { <nl> offset + = cumElements [ j ] * currentIdx [ j ] ; <nl> } <nl> - offset + = subIdx [ dimIdx ] - minIdx [ dimIdx ] ; <nl> - int targetPos = subIdx [ dimIdx ] - minIdx [ dimIdx ] ; <nl> + offset + = subIdx [ dimIdx ] ; <nl> + int targetPos = subIdx [ dimIdx ] ; <nl> switch ( varType ) { <nl> case VT _ BOOL : <nl> Array . set ( targetArray , targetPos , Array . getShort ( dataArray , offset ) ! = 0 ) ; <nl> @ @ - 281 , 7 + 277 , 7 @ @ public abstract class OaIdlUtil { <nl> throw new IllegalStateException ( " Type not supported : " + varType ) ; <nl> } <nl> } else { <nl> - toPrimitiveArray ( dataArray , Array . get ( targetArray , i ) , minIdx , maxIdx , elements , cumElements , varType , subIdx ) ; <nl> + toPrimitiveArray ( dataArray , Array . get ( targetArray , i ) , elements , cumElements , varType , subIdx ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / SAFEARRAYTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / SAFEARRAYTest . java <nl> index 2af404f . . 0caba84 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / SAFEARRAYTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / SAFEARRAYTest . java <nl> @ @ - 25 , 7 + 25 , 6 @ @ import com . sun . jna . platform . win32 . COM . util . annotation . ComObject ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComProperty ; <nl> import com . sun . jna . platform . win32 . OaIdl . DATE ; <nl> import com . sun . jna . platform . win32 . OaIdl . SAFEARRAY ; <nl> - import static com . sun . jna . platform . win32 . OaIdlUtil . toPrimitiveArray ; <nl> import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> import static com . sun . jna . platform . win32 . Variant . VT _ BOOL ; <nl> import static com . sun . jna . platform . win32 . Variant . VT _ BSTR ; <nl> @ @ - 60 , 6 + 59 , 8 @ @ import static org . junit . Assert . assertEquals ; <nl> import static org . junit . Assert . assertThat ; <nl> import org . junit . Before ; <nl> import static com . sun . jna . platform . win32 . OaIdlUtil . toPrimitiveArray ; <nl> + import com . sun . jna . platform . win32 . WTypes . VARTYPE ; <nl> + import com . sun . jna . platform . win32 . WinDef . LONG ; <nl> <nl> public class SAFEARRAYTest { <nl> static { <nl> @ @ - 218 , 6 + 219 , 34 @ @ public class SAFEARRAYTest { <nl> } <nl> <nl> @ Test <nl> + public void testMultidimensionalNotNullBased ( ) { <nl> + / / create a basic SAFEARRAY <nl> + SAFEARRAY sa = SAFEARRAY . createSafeArray ( new VARTYPE ( VT _ I4 ) , 2 , 2 ) ; <nl> + sa . putElement ( 1 , 0 , 0 ) ; <nl> + sa . putElement ( 2 , 0 , 1 ) ; <nl> + sa . putElement ( 3 , 1 , 0 ) ; <nl> + sa . putElement ( 4 , 1 , 1 ) ; <nl> + <nl> + / / query the plain SAFEARRAY <nl> + Object [ ] [ ] basic = ( Object [ ] [ ] ) OaIdlUtil . toPrimitiveArray ( sa , false ) ; <nl> + <nl> + / / Virtually move the bounds <nl> + sa . rgsabound [ 0 ] . lLbound = new LONG ( 2 ) ; <nl> + sa . rgsabound [ 1 ] . lLbound = new LONG ( 5 ) ; <nl> + sa . write ( ) ; <nl> + <nl> + / / Validate new bounds <nl> + Assert . assertEquals ( 2 , sa . getLBound ( 0 ) ) ; <nl> + Assert . assertEquals ( 3 , sa . getUBound ( 0 ) ) ; <nl> + Assert . assertEquals ( 5 , sa . getLBound ( 1 ) ) ; <nl> + Assert . assertEquals ( 6 , sa . getUBound ( 1 ) ) ; <nl> + <nl> + / / requery the moved array and compare with basic array <nl> + Object [ ] [ ] relocated = ( Object [ ] [ ] ) OaIdlUtil . toPrimitiveArray ( sa , false ) ; <nl> + Assert . assertArrayEquals ( basic , relocated ) ; <nl> + } <nl> + <nl> + @ Test <nl> public void testDataTypes ( ) { <nl> int idx = 1 ; <nl> Pointer dataPointer ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / DdemlUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / DdemlUtil . java <nl> index 21f5cd3 . . cd7570f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / DdemlUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / DdemlUtil . java <nl> @ @ - 2109 , 11 + 2109 , 9 @ @ public abstract class DdemlUtil { <nl> * string . A value of - 1 indicates that pData is a data handle that <nl> * identifies the data being sent . <nl> * <nl> - * @ param item The data item for which data is being <nl> - * exchanged during the transaction . This handle must have been created <nl> - * by a previous call to the DdeCreateStringHandle function . This <nl> - * parameter is ignored ( and should be set to 0L ) if the wType parameter <nl> - * is XTYP _ EXECUTE . <nl> + * @ param item The data item for which data is being exchanged during <nl> + * the transaction . This parameter is ignored ( and should be set to NULL ) <nl> + * if the wType parameter is XTYP _ EXECUTE . <nl> * <nl> * @ param wFmt The standard clipboard format in which the data item is <nl> * being submitted or requested . <nl> @ @ - 2223 , 11 + 2221 , 9 @ @ public abstract class DdemlUtil { <nl> * function , and the application can use it only after establishing a <nl> * conversation with the server . <nl> * <nl> - * @ param item The data item for which data is being <nl> - * exchanged during the transaction . This handle must have been created <nl> - * by a previous call to the DdeCreateStringHandle function . This <nl> - * parameter is ignored ( and should be set to 0L ) if the wType parameter <nl> - * is XTYP _ EXECUTE . <nl> + * @ param item The data item for which data is being exchanged during <nl> + * the transaction . This parameter is ignored ( and should be set to NULL ) <nl> + * if the wType parameter is XTYP _ EXECUTE . <nl> * <nl> * @ param wFmt The standard clipboard format in which the data item is <nl> * being submitted or requested . <nl> @ @ - 2425 , 11 + 2421 , 9 @ @ public abstract class DdemlUtil { <nl> * string . A value of - 1 indicates that pData is a data handle that <nl> * identifies the data being sent . <nl> * <nl> - * @ param item The data item for which data is being <nl> - * exchanged during the transaction . This handle must have been created <nl> - * by a previous call to the DdeCreateStringHandle function . This <nl> - * parameter is ignored ( and should be set to 0L ) if the wType parameter <nl> - * is XTYP _ EXECUTE . <nl> + * @ param item The data item for which data is being exchanged during <nl> + * the transaction . This parameter is ignored ( and should be set to NULL ) <nl> + * if the wType parameter is XTYP _ EXECUTE . <nl> * <nl> * @ param wFmt The standard clipboard format in which the data item is <nl> * being submitted or requested . <nl> @ @ - 2573 , 9 + 2567 , 8 @ @ public abstract class DdemlUtil { <nl> * conversation with the server . <nl> * <nl> * @ param item The data item for which data is being exchanged during <nl> - * the transaction . This handle must have been created by a previous <nl> - * call to the DdeCreateStringHandle function . This parameter is ignored <nl> - * ( and should be set to 0L ) if the wType parameter is XTYP _ EXECUTE . <nl> + * the transaction . This parameter is ignored ( and should be set to NULL ) <nl> + * if the wType parameter is XTYP _ EXECUTE . <nl> * <nl> * @ param wFmt The standard clipboard format in which the data item is <nl> * being submitted or requested . <nl> @ @ - 2661 , 11 + 2654 , 9 @ @ public abstract class DdemlUtil { <nl> * DdeCallback , receives this transaction when a client specifies <nl> * XTYP _ ADVSTOP in the DdeClientTransaction function . <nl> * <nl> - * @ param item The data item for which data is being <nl> - * exchanged during the transaction . This handle must have been created <nl> - * by a previous call to the DdeCreateStringHandle function . This <nl> - * parameter is ignored ( and should be set to 0L ) if the wType parameter <nl> - * is XTYP _ EXECUTE . <nl> + * @ param item The data item for which data is being exchanged during <nl> + * the transaction . This parameter is ignored ( and should be set to NULL ) <nl> + * if the wType parameter is XTYP _ EXECUTE . <nl> * <nl> * @ param wFmt The standard clipboard format in which the data item is <nl> * being submitted or requested . <nl> @ @ - 3349 , 15 + 3340 , 12 @ @ public abstract class DdemlUtil { <nl> * server exists , the system selects only one . <nl> * <nl> * @ param service The service name of the server application with which <nl> - * a conversation is to be established . This handle must have been <nl> - * created by a previous call to the DdeCreateStringHandle function . If <nl> - * this parameter is 0L , a conversation is established with any <nl> - * available server . <nl> + * a conversation is to be established . If this parameter is NULL , a <nl> + * conversation is established with any available server . <nl> * <nl> * @ param topic The name of the topic on which a conversation is to be <nl> - * established . This handle must have been created by a previous call to <nl> - * DdeCreateStringHandle . If this parameter is 0L , a conversation on any <nl> - * topic supported by the selected server is established . <nl> + * established . If this parameter is NULL , a conversation on any topic <nl> + * supported by the selected server is established . <nl> * <nl> * @ param convcontext A pointer to the CONVCONTEXT structure that contains <nl> * conversation context information . If this parameter is NULL , the <nl> @ @ - 3699 , 14 + 3687 , 13 @ @ public abstract class DdemlUtil { <nl> * <nl> * @ param service A string that specifies the service name of the server <nl> * application with which a conversation is to be established . If this <nl> - * parameter is 0L , the system attempts to establish conversations with <nl> + * parameter is NULL , the system attempts to establish conversations with <nl> * all available servers that support the specified topic name . <nl> * <nl> * @ param topic A string that specifies the name of the topic on which a <nl> - * conversation is to be established . This handle must have been created <nl> - * by a previous call to the DdeCreateStringHandle function . If this <nl> - * parameter is 0L , the system will attempt to establish conversations <nl> - * on all topics supported by the selected server ( or servers ) . <nl> + * conversation is to be established . If this parameter is NULL , the <nl> + * system will attempt to establish conversations on all topics <nl> + * supported by the selected server ( or servers ) . <nl> * <nl> * @ param existingList An existinct conversation list to be enumerated . <nl> * This parameter should be NULL if a new conversation list is to be
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java <nl> index 7ce2eb1 . . bb3480a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java <nl> @ @ - 352 , 4 + 352 , 117 @ @ public interface Ole32 extends StdCallLibrary { <nl> * / <nl> boolean CoIsHandlerConnected ( Pointer pUnk ) ; <nl> <nl> + <nl> + / * * <nl> + * Initializes the COM library on the current apartment , identifies the <nl> + * concurrency model as single - thread apartment ( STA ) , and enables <nl> + * additional functionality described in the Remarks section below . <nl> + * Applications must initialize the COM library before they can call COM <nl> + * library functions other than CoGetMalloc and memory allocation functions . <nl> + * @ param pvReserved Reserved ; must be null . <nl> + * @ return { @ link WinError # S _ OK S _ OK } if the COM library and additional functionality were <nl> + * initialized successfully on this apartment . < p > <nl> + * { @ link WinError # S _ FALSE S _ FALSE } if the COM library is already initialized on this apartment . < p > <nl> + * { @ link WinError # OLE _ E _ WRONGCOMPOBJ OLE _ E _ WRONGCOMPOBJ } if the versions of COMPOBJ . DLL and OLE2 . DLL on <nl> + * your machine are incompatible with each other . < p > <nl> + * { @ link WinError # RPC _ E _ CHANGED _ MODE RPC _ E _ CHANGED _ MODE } if a previous call to CoInitializeEx specified <nl> + * the concurrency model for this apartment as <nl> + * multithread apartment ( MTA ) . If running <nl> + * Windows 2000 , this could also mean that a <nl> + * change from neutral threaded apartment to <nl> + * single threaded apartment occurred . <nl> + * / <nl> + HRESULT OleInitialize ( Pointer pvReserved ) ; <nl> + <nl> + / * * <nl> + * Closes the COM library on the apartment , releases any class factories , <nl> + * other COM objects , or servers held by the apartment , disables RPC on the <nl> + * apartment , and frees any resources the apartment maintains . <nl> + * <nl> + * Remarks : <nl> + * Call OleUninitialize on application shutdown , as the last COM library <nl> + * call , if the apartment was initialized with a call to <nl> + * { @ link # OleInitialize } . OleUninitialize calls the CoUninitialize function <nl> + * internally to shut down the OLE Component Object ( COM ) Library . <nl> + * <nl> + * If the COM library was initialized on the apartment with a call to <nl> + * CoInitialize or CoInitializeEx , it must be closed with a call to <nl> + * CoUninitialize . <nl> + * <nl> + * The { @ link # OleInitialize } and OleUninitialize calls must be balanced — <nl> + * if there are multiple calls to the { @ link # OleInitialize } function , there <nl> + * must be the same number of calls to OleUninitialize : Only the <nl> + * OleUninitialize call corresponding to the { @ link # OleInitialize } call <nl> + * that actually initialized the library can close it . <nl> + * / <nl> + void OleUninitialize ( ) ; <nl> + <nl> + / * * <nl> + * Carries out the clipboard shutdown sequence . It also releases the <nl> + * IDataObject pointer that was placed on the clipboard by the <nl> + * OleSetClipboard function . <nl> + * @ return { @ link WinError # S _ OK S _ OK } on success . < p > <nl> + * { @ link WinError # CLIPBRD _ E _ CANT _ OPEN CLIPBRD _ E _ CANT _ OPEN } The Windows OpenClipboard function used <nl> + * within OleFlushClipboard failed . < p > <nl> + * { @ link WinError # CLIPBRD _ E _ CANT _ CLOSE CLIPBRD _ E _ CANT _ CLOSE } The Windows CloseClipboard function used <nl> + * within OleFlushClipboard failed . < p > <nl> + * < b > Remarks < / b > < p > <nl> + * OleFlushClipboard renders the data from a data object onto the clipboard <nl> + * and releases the IDataObject pointer to the data object . While the <nl> + * application that put the data object on the clipboard is running , the <nl> + * clipboard holds only a pointer to the data object , thus saving memory . <nl> + * If you are writing an application that acts as the source of a clipboard <nl> + * operation , you can call the OleFlushClipboard function when your <nl> + * application is closed , such as when the user exits from your application . <nl> + * Calling OleFlushClipboard enables pasting and paste - linking of OLE <nl> + * objects after application shutdown . <nl> + * Before calling OleFlushClipboard , you can easily determine if your data <nl> + * is still on the clipboard with a call to the OleIsCurrentClipboard <nl> + * function . <nl> + * <nl> + * OleFlushClipboard leaves all formats offered by the data transfer object , <nl> + * including the OLE 1 compatibility formats , on the clipboard so they are <nl> + * available after application shutdown . In addition to OLE 1 compatibility <nl> + * formats , these include all formats offered on a global handle medium ( all <nl> + * except for TYMED _ FILE ) and formatted with a null target device . For <nl> + * example , if a data - source application offers a particular clipboard <nl> + * format ( say cfFOO ) on an IStorage object , and calls the OleFlushClipboard <nl> + * function , the storage object is copied into memory and the hglobal memory <nl> + * handle is put on the clipboard . <nl> + * <nl> + * To retrieve the information on the clipboard , you can call the <nl> + * OleGetClipboard function from another application , which creates a <nl> + * default data object , and the hglobal from the clipboard again becomes a <nl> + * storage object . Furthermore , the FORMATETC enumerator and the <nl> + * IDataObject : : QueryGetData method would all correctly indicate that the <nl> + * original clipboard format ( cfFOO ) is again available on a TYMED _ ISTORAGE . <nl> + * <nl> + * To empty the clipboard , call the OleSetClipboard function specifying a <nl> + * null value for its parameter . The application should call this when it <nl> + * closes if there is no need to leave data on the clipboard after shutdown , <nl> + * or if data will be placed on the clipboard using the standard Windows <nl> + * clipboard functions . <nl> + * / <nl> + HRESULT OleFlushClipboard ( ) ; <nl> + <nl> + / * * <nl> + * Puts an OLE compound document object into the running state . <nl> + * @ param pUnknown [ in ] Pointer to the { @ link IUnknown IUnknown } interface <nl> + * on the object , with which it will query for a pointer to <nl> + * the IRunnableObject interface , and then call its Run method . <nl> + * @ return This function returns on success . <nl> + * Other possible values include the following . < p > <nl> + * { @ link WinError # OLE _ E _ CLASSDIFF OLE _ E _ CLASSDIFF } The source of an <nl> + * OLE link has been converted to a different class . < p > <nl> + * < B > Remarks < / B > < p > <nl> + * The OleRun function puts an object in the running state . The <nl> + * implementation of OleRun was changed in OLE 2 . 01 to coincide with the <nl> + * publication of the IRunnableObject interface . You can use OleRun and <nl> + * IRunnableObject : : Run interchangeably . OleRun queries the object for a <nl> + * pointer to IRunnableObject . If successful , the function returns the <nl> + * results of calling the IRunnableObject : : Run method . < p > < p > <nl> + * For more information on using this function , see IRunnableObject : : Run . <nl> + * / <nl> + HRESULT OleRun ( Pointer pUnknown ) ; <nl> + <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Ole32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Ole32Test . java <nl> index 73ce524 . . 3cae808 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Ole32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Ole32Test . java <nl> @ @ - 126 , 4 + 126 , 16 @ @ public class Ole32Test extends TestCase { <nl> <nl> Ole32 . INSTANCE . CoTaskMemFree ( ptr ) ; <nl> } <nl> + <nl> + public void testOleFunctions ( ) { <nl> + HRESULT initResult = Ole32 . INSTANCE . OleInitialize ( Pointer . NULL ) ; <nl> + <nl> + assertTrue ( W32Errors . SUCCEEDED ( initResult ) ) ; <nl> + <nl> + / / For a real test , a test component will be needed <nl> + Ole32 . INSTANCE . OleFlushClipboard ( ) ; <nl> + Ole32 . INSTANCE . OleRun ( Pointer . NULL ) ; <nl> + <nl> + Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + } <nl> }
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index 26f432a . . adc8111 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 3272 , 4 + 3272 , 351 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> byte SECURITY _ STATIC _ TRACKING = ( byte ) 0 ; <nl> byte BOOLEAN _ TRUE = ( byte ) 1 ; <nl> byte BOOLEAN _ FALSE = ( byte ) 0 ; <nl> + <nl> + / * <nl> + * Primary language IDs . <nl> + * / <nl> + public static final int LANG _ NEUTRAL = 0x00 ; <nl> + public static final int LANG _ INVARIANT = 0x7f ; <nl> + <nl> + public static final int LANG _ AFRIKAANS = 0x36 ; <nl> + public static final int LANG _ ALBANIAN = 0x1c ; <nl> + public static final int LANG _ ARABIC = 0x01 ; <nl> + public static final int LANG _ ARMENIAN = 0x2b ; <nl> + public static final int LANG _ ASSAMESE = 0x4d ; <nl> + public static final int LANG _ AZERI = 0x2c ; <nl> + public static final int LANG _ BASQUE = 0x2d ; <nl> + public static final int LANG _ BELARUSIAN = 0x23 ; <nl> + public static final int LANG _ BENGALI = 0x45 ; <nl> + public static final int LANG _ BULGARIAN = 0x02 ; <nl> + public static final int LANG _ CATALAN = 0x03 ; <nl> + public static final int LANG _ CHINESE = 0x04 ; <nl> + public static final int LANG _ CROATIAN = 0x1a ; <nl> + public static final int LANG _ CZECH = 0x05 ; <nl> + public static final int LANG _ DANISH = 0x06 ; <nl> + public static final int LANG _ DIVEHI = 0x65 ; <nl> + public static final int LANG _ DUTCH = 0x13 ; <nl> + public static final int LANG _ ENGLISH = 0x09 ; <nl> + public static final int LANG _ ESTONIAN = 0x25 ; <nl> + public static final int LANG _ FAEROESE = 0x38 ; <nl> + public static final int LANG _ FARSI = 0x29 ; <nl> + public static final int LANG _ FINNISH = 0x0b ; <nl> + public static final int LANG _ FRENCH = 0x0c ; <nl> + public static final int LANG _ GALICIAN = 0x56 ; <nl> + public static final int LANG _ GEORGIAN = 0x37 ; <nl> + public static final int LANG _ GERMAN = 0x07 ; <nl> + public static final int LANG _ GREEK = 0x08 ; <nl> + public static final int LANG _ GUJARATI = 0x47 ; <nl> + public static final int LANG _ HEBREW = 0x0d ; <nl> + public static final int LANG _ HINDI = 0x39 ; <nl> + public static final int LANG _ HUNGARIAN = 0x0e ; <nl> + public static final int LANG _ ICELANDIC = 0x0f ; <nl> + public static final int LANG _ INDONESIAN = 0x21 ; <nl> + public static final int LANG _ ITALIAN = 0x10 ; <nl> + public static final int LANG _ JAPANESE = 0x11 ; <nl> + public static final int LANG _ KANNADA = 0x4b ; <nl> + public static final int LANG _ KASHMIRI = 0x60 ; <nl> + public static final int LANG _ KAZAK = 0x3f ; <nl> + public static final int LANG _ KONKANI = 0x57 ; <nl> + public static final int LANG _ KOREAN = 0x12 ; <nl> + public static final int LANG _ KYRGYZ = 0x40 ; <nl> + public static final int LANG _ LATVIAN = 0x26 ; <nl> + public static final int LANG _ LITHUANIAN = 0x27 ; <nl> + public static final int LANG _ MACEDONIAN = 0x2f ; / / the Former Yugoslav Republic of Macedonia <nl> + public static final int LANG _ MALAY = 0x3e ; <nl> + public static final int LANG _ MALAYALAM = 0x4c ; <nl> + public static final int LANG _ MANIPURI = 0x58 ; <nl> + public static final int LANG _ MARATHI = 0x4e ; <nl> + public static final int LANG _ MONGOLIAN = 0x50 ; <nl> + public static final int LANG _ NEPALI = 0x61 ; <nl> + public static final int LANG _ NORWEGIAN = 0x14 ; <nl> + public static final int LANG _ ORIYA = 0x48 ; <nl> + public static final int LANG _ POLISH = 0x15 ; <nl> + public static final int LANG _ PORTUGUESE = 0x16 ; <nl> + public static final int LANG _ PUNJABI = 0x46 ; <nl> + public static final int LANG _ ROMANIAN = 0x18 ; <nl> + public static final int LANG _ RUSSIAN = 0x19 ; <nl> + public static final int LANG _ SANSKRIT = 0x4f ; <nl> + public static final int LANG _ SERBIAN = 0x1a ; <nl> + public static final int LANG _ SINDHI = 0x59 ; <nl> + public static final int LANG _ SLOVAK = 0x1b ; <nl> + public static final int LANG _ SLOVENIAN = 0x24 ; <nl> + public static final int LANG _ SPANISH = 0x0a ; <nl> + public static final int LANG _ SWAHILI = 0x41 ; <nl> + public static final int LANG _ SWEDISH = 0x1d ; <nl> + public static final int LANG _ SYRIAC = 0x5a ; <nl> + public static final int LANG _ TAMIL = 0x49 ; <nl> + public static final int LANG _ TATAR = 0x44 ; <nl> + public static final int LANG _ TELUGU = 0x4a ; <nl> + public static final int LANG _ THAI = 0x1e ; <nl> + public static final int LANG _ TURKISH = 0x1f ; <nl> + public static final int LANG _ UKRAINIAN = 0x22 ; <nl> + public static final int LANG _ URDU = 0x20 ; <nl> + public static final int LANG _ UZBEK = 0x43 ; <nl> + public static final int LANG _ VIETNAMESE = 0x2a ; <nl> + <nl> + / * <nl> + * Sublanguage IDs . <nl> + * <nl> + * The name immediately following SUBLANG _ dictates which primary <nl> + * language ID that sublanguage ID can be combined with to form a <nl> + * valid language ID . <nl> + * / <nl> + public static final int SUBLANG _ NEUTRAL = 0x00 ; / / language neutral <nl> + public static final int SUBLANG _ DEFAULT = 0x01 ; / / user default <nl> + public static final int SUBLANG _ SYS _ DEFAULT = 0x02 ; / / system default <nl> + <nl> + public static final int SUBLANG _ ARABIC _ SAUDI _ ARABIA = 0x01 ; / / Arabic ( Saudi Arabia ) <nl> + public static final int SUBLANG _ ARABIC _ IRAQ = 0x02 ; / / Arabic ( Iraq ) <nl> + public static final int SUBLANG _ ARABIC _ EGYPT = 0x03 ; / / Arabic ( Egypt ) <nl> + public static final int SUBLANG _ ARABIC _ LIBYA = 0x04 ; / / Arabic ( Libya ) <nl> + public static final int SUBLANG _ ARABIC _ ALGERIA = 0x05 ; / / Arabic ( Algeria ) <nl> + public static final int SUBLANG _ ARABIC _ MOROCCO = 0x06 ; / / Arabic ( Morocco ) <nl> + public static final int SUBLANG _ ARABIC _ TUNISIA = 0x07 ; / / Arabic ( Tunisia ) <nl> + public static final int SUBLANG _ ARABIC _ OMAN = 0x08 ; / / Arabic ( Oman ) <nl> + public static final int SUBLANG _ ARABIC _ YEMEN = 0x09 ; / / Arabic ( Yemen ) <nl> + public static final int SUBLANG _ ARABIC _ SYRIA = 0x0a ; / / Arabic ( Syria ) <nl> + public static final int SUBLANG _ ARABIC _ JORDAN = 0x0b ; / / Arabic ( Jordan ) <nl> + public static final int SUBLANG _ ARABIC _ LEBANON = 0x0c ; / / Arabic ( Lebanon ) <nl> + public static final int SUBLANG _ ARABIC _ KUWAIT = 0x0d ; / / Arabic ( Kuwait ) <nl> + public static final int SUBLANG _ ARABIC _ UAE = 0x0e ; / / Arabic ( U . A . E ) <nl> + public static final int SUBLANG _ ARABIC _ BAHRAIN = 0x0f ; / / Arabic ( Bahrain ) <nl> + public static final int SUBLANG _ ARABIC _ QATAR = 0x10 ; / / Arabic ( Qatar ) <nl> + public static final int SUBLANG _ AZERI _ LATIN = 0x01 ; / / Azeri ( Latin ) <nl> + public static final int SUBLANG _ AZERI _ CYRILLIC = 0x02 ; / / Azeri ( Cyrillic ) <nl> + public static final int SUBLANG _ CHINESE _ TRADITIONAL = 0x01 ; / / Chinese ( Taiwan ) <nl> + public static final int SUBLANG _ CHINESE _ SIMPLIFIED = 0x02 ; / / Chinese ( PR China ) <nl> + public static final int SUBLANG _ CHINESE _ HONGKONG = 0x03 ; / / Chinese ( Hong Kong S . A . R . , P . R . C . ) <nl> + public static final int SUBLANG _ CHINESE _ SINGAPORE = 0x04 ; / / Chinese ( Singapore ) <nl> + public static final int SUBLANG _ CHINESE _ MACAU = 0x05 ; / / Chinese ( Macau S . A . R . ) <nl> + public static final int SUBLANG _ DUTCH = 0x01 ; / / Dutch <nl> + public static final int SUBLANG _ DUTCH _ BELGIAN = 0x02 ; / / Dutch ( Belgian ) <nl> + public static final int SUBLANG _ ENGLISH _ US = 0x01 ; / / English ( USA ) <nl> + public static final int SUBLANG _ ENGLISH _ UK = 0x02 ; / / English ( UK ) <nl> + public static final int SUBLANG _ ENGLISH _ AUS = 0x03 ; / / English ( Australian ) <nl> + public static final int SUBLANG _ ENGLISH _ CAN = 0x04 ; / / English ( Canadian ) <nl> + public static final int SUBLANG _ ENGLISH _ NZ = 0x05 ; / / English ( New Zealand ) <nl> + public static final int SUBLANG _ ENGLISH _ EIRE = 0x06 ; / / English ( Irish ) <nl> + public static final int SUBLANG _ ENGLISH _ SOUTH _ AFRICA = 0x07 ; / / English ( South Africa ) <nl> + public static final int SUBLANG _ ENGLISH _ JAMAICA = 0x08 ; / / English ( Jamaica ) <nl> + public static final int SUBLANG _ ENGLISH _ CARIBBEAN = 0x09 ; / / English ( Caribbean ) <nl> + public static final int SUBLANG _ ENGLISH _ BELIZE = 0x0a ; / / English ( Belize ) <nl> + public static final int SUBLANG _ ENGLISH _ TRINIDAD = 0x0b ; / / English ( Trinidad ) <nl> + public static final int SUBLANG _ ENGLISH _ ZIMBABWE = 0x0c ; / / English ( Zimbabwe ) <nl> + public static final int SUBLANG _ ENGLISH _ PHILIPPINES = 0x0d ; / / English ( Philippines ) <nl> + public static final int SUBLANG _ FRENCH = 0x01 ; / / French <nl> + public static final int SUBLANG _ FRENCH _ BELGIAN = 0x02 ; / / French ( Belgian ) <nl> + public static final int SUBLANG _ FRENCH _ CANADIAN = 0x03 ; / / French ( Canadian ) <nl> + public static final int SUBLANG _ FRENCH _ SWISS = 0x04 ; / / French ( Swiss ) <nl> + public static final int SUBLANG _ FRENCH _ LUXEMBOURG = 0x05 ; / / French ( Luxembourg ) <nl> + public static final int SUBLANG _ FRENCH _ MONACO = 0x06 ; / / French ( Monaco ) <nl> + public static final int SUBLANG _ GERMAN = 0x01 ; / / German <nl> + public static final int SUBLANG _ GERMAN _ SWISS = 0x02 ; / / German ( Swiss ) <nl> + public static final int SUBLANG _ GERMAN _ AUSTRIAN = 0x03 ; / / German ( Austrian ) <nl> + public static final int SUBLANG _ GERMAN _ LUXEMBOURG = 0x04 ; / / German ( Luxembourg ) <nl> + public static final int SUBLANG _ GERMAN _ LIECHTENSTEIN = 0x05 ; / / German ( Liechtenstein ) <nl> + public static final int SUBLANG _ ITALIAN = 0x01 ; / / Italian <nl> + public static final int SUBLANG _ ITALIAN _ SWISS = 0x02 ; / / Italian ( Swiss ) <nl> + public static final int SUBLANG _ KASHMIRI _ SASIA = 0x02 ; / / Kashmiri ( South Asia ) <nl> + public static final int SUBLANG _ KASHMIRI _ INDIA = 0x02 ; / / For app compatibility only <nl> + public static final int SUBLANG _ KOREAN = 0x01 ; / / Korean ( Extended Wansung ) <nl> + public static final int SUBLANG _ LITHUANIAN = 0x01 ; / / Lithuanian <nl> + public static final int SUBLANG _ MALAY _ MALAYSIA = 0x01 ; / / Malay ( Malaysia ) <nl> + public static final int SUBLANG _ MALAY _ BRUNEI _ DARUSSALAM = 0x02 ; / / Malay ( Brunei Darussalam ) <nl> + public static final int SUBLANG _ NEPALI _ INDIA = 0x02 ; / / Nepali ( India ) <nl> + public static final int SUBLANG _ NORWEGIAN _ BOKMAL = 0x01 ; / / Norwegian ( Bokmal ) <nl> + public static final int SUBLANG _ NORWEGIAN _ NYNORSK = 0x02 ; / / Norwegian ( Nynorsk ) <nl> + public static final int SUBLANG _ PORTUGUESE = 0x02 ; / / Portuguese <nl> + public static final int SUBLANG _ PORTUGUESE _ BRAZILIAN = 0x01 ; / / Portuguese ( Brazilian ) <nl> + public static final int SUBLANG _ SERBIAN _ LATIN = 0x02 ; / / Serbian ( Latin ) <nl> + public static final int SUBLANG _ SERBIAN _ CYRILLIC = 0x03 ; / / Serbian ( Cyrillic ) <nl> + public static final int SUBLANG _ SPANISH = 0x01 ; / / Spanish ( Castilian ) <nl> + public static final int SUBLANG _ SPANISH _ MEXICAN = 0x02 ; / / Spanish ( Mexican ) <nl> + public static final int SUBLANG _ SPANISH _ MODERN = 0x03 ; / / Spanish ( Spain ) <nl> + public static final int SUBLANG _ SPANISH _ GUATEMALA = 0x04 ; / / Spanish ( Guatemala ) <nl> + public static final int SUBLANG _ SPANISH _ COSTA _ RICA = 0x05 ; / / Spanish ( Costa Rica ) <nl> + public static final int SUBLANG _ SPANISH _ PANAMA = 0x06 ; / / Spanish ( Panama ) <nl> + public static final int SUBLANG _ SPANISH _ DOMINICAN _ REPUBLIC = 0x07 ; / / Spanish ( Dominican Republic ) <nl> + public static final int SUBLANG _ SPANISH _ VENEZUELA = 0x08 ; / / Spanish ( Venezuela ) <nl> + public static final int SUBLANG _ SPANISH _ COLOMBIA = 0x09 ; / / Spanish ( Colombia ) <nl> + public static final int SUBLANG _ SPANISH _ PERU = 0x0a ; / / Spanish ( Peru ) <nl> + public static final int SUBLANG _ SPANISH _ ARGENTINA = 0x0b ; / / Spanish ( Argentina ) <nl> + public static final int SUBLANG _ SPANISH _ ECUADOR = 0x0c ; / / Spanish ( Ecuador ) <nl> + public static final int SUBLANG _ SPANISH _ CHILE = 0x0d ; / / Spanish ( Chile ) <nl> + public static final int SUBLANG _ SPANISH _ URUGUAY = 0x0e ; / / Spanish ( Uruguay ) <nl> + public static final int SUBLANG _ SPANISH _ PARAGUAY = 0x0f ; / / Spanish ( Paraguay ) <nl> + public static final int SUBLANG _ SPANISH _ BOLIVIA = 0x10 ; / / Spanish ( Bolivia ) <nl> + public static final int SUBLANG _ SPANISH _ EL _ SALVADOR = 0x11 ; / / Spanish ( El Salvador ) <nl> + public static final int SUBLANG _ SPANISH _ HONDURAS = 0x12 ; / / Spanish ( Honduras ) <nl> + public static final int SUBLANG _ SPANISH _ NICARAGUA = 0x13 ; / / Spanish ( Nicaragua ) <nl> + public static final int SUBLANG _ SPANISH _ PUERTO _ RICO = 0x14 ; / / Spanish ( Puerto Rico ) <nl> + public static final int SUBLANG _ SWEDISH = 0x01 ; / / Swedish <nl> + public static final int SUBLANG _ SWEDISH _ FINLAND = 0x02 ; / / Swedish ( Finland ) <nl> + public static final int SUBLANG _ URDU _ PAKISTAN = 0x01 ; / / Urdu ( Pakistan ) <nl> + public static final int SUBLANG _ URDU _ INDIA = 0x02 ; / / Urdu ( India ) <nl> + public static final int SUBLANG _ UZBEK _ LATIN = 0x01 ; / / Uzbek ( Latin ) <nl> + public static final int SUBLANG _ UZBEK _ CYRILLIC = 0x02 ; / / Uzbek ( Cyrillic ) <nl> + <nl> + / * <nl> + * Sorting IDs . <nl> + * / <nl> + public static final int SORT _ DEFAULT = 0x0 ; / / sorting default <nl> + <nl> + public static final int SORT _ JAPANESE _ XJIS = 0x0 ; / / Japanese XJIS order <nl> + public static final int SORT _ JAPANESE _ UNICODE = 0x1 ; / / Japanese Unicode order <nl> + <nl> + public static final int SORT _ CHINESE _ BIG5 = 0x0 ; / / Chinese BIG5 order <nl> + public static final int SORT _ CHINESE _ PRCP = 0x0 ; / / PRC Chinese Phonetic order <nl> + public static final int SORT _ CHINESE _ UNICODE = 0x1 ; / / Chinese Unicode order <nl> + public static final int SORT _ CHINESE _ PRC = 0x2 ; / / PRC Chinese Stroke Count order <nl> + public static final int SORT _ CHINESE _ BOPOMOFO = 0x3 ; / / Traditional Chinese Bopomofo order <nl> + <nl> + public static final int SORT _ KOREAN _ KSC = 0x0 ; / / Korean KSC order <nl> + public static final int SORT _ KOREAN _ UNICODE = 0x1 ; / / Korean Unicode order <nl> + <nl> + public static final int SORT _ GERMAN _ PHONE _ BOOK = 0x1 ; / / German Phone Book order <nl> + <nl> + public static final int SORT _ HUNGARIAN _ DEFAULT = 0x0 ; / / Hungarian Default order <nl> + public static final int SORT _ HUNGARIAN _ TECHNICAL = 0x1 ; / / Hungarian Technical order <nl> + <nl> + public static final int SORT _ GEORGIAN _ TRADITIONAL = 0x0 ; / / Georgian Traditional order <nl> + public static final int SORT _ GEORGIAN _ MODERN = 0x1 ; / / Georgian Modern order <nl> + <nl> + public static final int NLS _ VALID _ LOCALE _ MASK = 0x000fffff ; <nl> + <nl> + / * * <nl> + * < p > A language ID is a 16 bit value which is the combination of a <nl> + * primary language ID and a secondary language ID . The bits are <nl> + * allocated as follows : < / p > <nl> + * <nl> + * < pre > <nl> + * + - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - + <nl> + * | Sublanguage ID | Primary Language ID | <nl> + * + - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - + <nl> + * 15 10 9 0 bit <nl> + * < / pre > <nl> + * <nl> + * < p > WARNING : This pattern isn ' t always follows , Serbina , Bosnian & Croation for example . < / p > <nl> + * <nl> + * < p > It is recommended that applications test for locale names or actual LCIDs . < / p > <nl> + * <nl> + * < p > Note that the LANG , SUBLANG construction is not always consistent . <nl> + * The named locale APIs ( eg GetLocaleInfoEx ) are recommended . < / p > <nl> + * <nl> + * < p > Language IDs do not exist for all locales < / p > <nl> + * <nl> + * < p > A locale ID is a 32 bit value which is the combination of a <nl> + * language ID , a sort ID , and a reserved area . The bits are <nl> + * allocated as follows : < / p > <nl> + * <nl> + * < pre > <nl> + * + - - - - - - - - - - - - - + - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - + <nl> + * | Reserved | Sort ID | Language ID | <nl> + * + - - - - - - - - - - - - - + - - - - - - - - - + - - - - - - - - - - - - - - - - - - - - - - - - - + <nl> + * 31 20 19 16 15 0 bit <nl> + * < / pre > <nl> + * <nl> + * < p > WARNING : This pattern isn ' t always followed ( es - ES _ tradnl vs es - ES for example ) < / p > <nl> + * <nl> + * < p > It is recommended that applications test for locale names or actual LCIDs . < / p > <nl> + * / <nl> + public static final class LocaleMacros { <nl> + private static final int _ MAKELCID ( int lgid , int srtid ) { <nl> + return ( srtid < < 16 ) | lgid ; <nl> + } <nl> + <nl> + / * * <nl> + * construct the locale id from a language id and a sort id . <nl> + * <nl> + * @ param lgid <nl> + * @ param srtid <nl> + * @ return <nl> + * / <nl> + public static final LCID MAKELCID ( int lgid , int srtid ) { <nl> + return new LCID ( _ MAKELCID ( lgid , srtid ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * construct the locale id from a language id , sort id , and sort version . <nl> + * <nl> + * @ param lgid <nl> + * @ param srtid <nl> + * @ param ver <nl> + * @ return <nl> + * / <nl> + public static final LCID MAKESORTLCID ( int lgid , int srtid , int ver ) { <nl> + return new LCID ( _ MAKELCID ( lgid , srtid ) | ( ver < < 20 ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * extract the language id from a locale id . <nl> + * <nl> + * @ param lcid <nl> + * @ return <nl> + * / <nl> + public static final int LANGIDFROMLCID ( LCID lcid ) { <nl> + return lcid . intValue ( ) & 0xFFFF ; <nl> + } <nl> + <nl> + / * * <nl> + * extract the sort id from a locale id . <nl> + * <nl> + * @ param lcid <nl> + * @ return <nl> + * / <nl> + public static final int SORTIDFROMLCID ( LCID lcid ) { <nl> + return ( lcid . intValue ( ) > > > 16 ) & 0xf ; <nl> + } <nl> + <nl> + / * * <nl> + * extract the sort version from a locale id . <nl> + * <nl> + * @ param lcid <nl> + * @ return <nl> + * / <nl> + public static final int SORTVERSIONFROMLCID ( LCID lcid ) { <nl> + return ( lcid . intValue ( ) > > > 20 ) & 0xf ; <nl> + } <nl> + <nl> + / * * <nl> + * Construct language id from a primary language id and a sublanguage id . <nl> + * <nl> + * @ param p Language ID <nl> + * @ param s Sublanguage ID <nl> + * @ return <nl> + * / <nl> + public static final int MAKELANGID ( int p , int s ) { <nl> + return ( s < < 10 ) | ( p & 0xFFFF ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Extract primary language id from a language id . <nl> + * <nl> + * @ param lgid Language ID <nl> + * @ return <nl> + * / <nl> + public static final int PRIMARYLANGID ( int lgid ) { <nl> + return lgid & 0x3ff ; <nl> + } <nl> + <nl> + / * * <nl> + * Extract sublanguage id from a language id . <nl> + * <nl> + * @ param lgid Language ID <nl> + * @ return <nl> + * / <nl> + public static final int SUBLANGID ( int lgid ) { <nl> + return ( lgid & 0xFFFF ) > > > 10 ; <nl> + } <nl> + } <nl> + <nl> + public static final int LANG _ SYSTEM _ DEFAULT = LocaleMacros . MAKELANGID ( LANG _ NEUTRAL , SUBLANG _ SYS _ DEFAULT ) ; <nl> + public static final int LANG _ USER _ DEFAULT = LocaleMacros . MAKELANGID ( LANG _ NEUTRAL , SUBLANG _ DEFAULT ) ; <nl> + <nl> + public static final LCID LOCALE _ SYSTEM _ DEFAULT = LocaleMacros . MAKELCID ( LANG _ SYSTEM _ DEFAULT , SORT _ DEFAULT ) ; <nl> + public static final LCID LOCALE _ USER _ DEFAULT = LocaleMacros . MAKELCID ( LANG _ USER _ DEFAULT , SORT _ DEFAULT ) ; <nl> + <nl> + public static final LCID LOCALE _ NEUTRAL = LocaleMacros . MAKELCID ( LocaleMacros . MAKELANGID ( LANG _ NEUTRAL , SUBLANG _ NEUTRAL ) , SORT _ DEFAULT ) ; <nl> + <nl> + public static final LCID LOCALE _ INVARIANT = LocaleMacros . MAKELCID ( LocaleMacros . MAKELANGID ( LANG _ INVARIANT , SUBLANG _ NEUTRAL ) , SORT _ DEFAULT ) ; <nl> }
diff - - git a / test / com / sun / jna / win32 / W32APIMapperTest . java b / test / com / sun / jna / win32 / W32APIMapperTest . java <nl> index 3d533be . . 4f3d291 100644 <nl> - - - a / test / com / sun / jna / win32 / W32APIMapperTest . java <nl> + + + b / test / com / sun / jna / win32 / W32APIMapperTest . java <nl> @ @ - 34 , 8 + 34 , 13 @ @ import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> <nl> public class W32APIMapperTest extends TestCase { <nl> - <nl> - final String UNICODE = " [ \ u0444 ] " ; <nl> + / / Unicode Character ' SINGLE RIGHT - POINTING ANGLE QUOTATION MARK ' : › <nl> + / / <nl> + / / byte encoding in CP1250 - CP1258 is 155 <nl> + / / <nl> + / / The requirement is , that the encoding is present in many native windows <nl> + / / encodings and outside the ASCII range <nl> + final String UNICODE = " [ \ u203a ] " ; <nl> final String MAGIC = " magic " + UNICODE ; <nl> <nl> public static void main ( String [ ] args ) {
diff - - git a / CHANGES . md b / CHANGES . md <nl> index ac47ef4 . . ff587d0 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 5 , 6 + 5 , 12 @ @ NOTE : JNI native support is typically incompatible between minor versions , and a <nl> Release 4 . 5 . 0 ( Next release ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> + Features <nl> + - - - - - - - - <nl> + <nl> + Bug Fixes <nl> + - - - - - - - - - <nl> + * [ # 776 ] ( https : / / github . com / java - native - access / jna / issues / 776 ) : Do not include ClassPath attribute in MANIFEST . MF of jna - platform . - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 4 . 4 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index 349e619 . . 203e7ff 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 63 , 7 + 63 , 42 @ @ <nl> nbproject / build - impl . xml file . <nl> <nl> - - > <nl> - <nl> + <nl> + < ! - - the - init - macrodef - copylibs target superseeds the target defined in <nl> + build - impl . xml . The classpath that the base copylibs target adds to the <nl> + MANIFEST . MF interferes with spring - boot and tomcat - - > <nl> + < target name = " - init - macrodef - copylibs " > <nl> + < macrodef name = " copylibs " uri = " http : / / www . netbeans . org / ns / j2se - project / 3 " > <nl> + < attribute default = " $ { manifest . file } " name = " manifest " / > <nl> + < element name = " customize " optional = " true " / > <nl> + < sequential > <nl> + < property location = " $ { build . classes . dir } " name = " build . classes . dir . resolved " / > <nl> + < pathconvert property = " run . classpath . without . build . classes . dir " > <nl> + < path path = " $ { run . classpath } " / > <nl> + < map from = " $ { build . classes . dir . resolved } " to = " " / > <nl> + < / pathconvert > <nl> + < pathconvert pathsep = " " property = " jar . classpath " > <nl> + < path path = " $ { run . classpath . without . build . classes . dir } " / > <nl> + < chainedmapper > <nl> + < flattenmapper / > <nl> + < filtermapper > <nl> + < replacestring from = " " to = " % 20 " / > <nl> + < / filtermapper > <nl> + < globmapper from = " * " to = " lib / * " / > <nl> + < / chainedmapper > <nl> + < / pathconvert > <nl> + < taskdef classname = " org . netbeans . modules . java . j2seproject . copylibstask . CopyLibs " classpath = " $ { libs . CopyLibs . classpath } " name = " copylibs " / > <nl> + < copylibs compress = " $ { jar . compress } " excludeFromCopy = " $ { copylibs . excludes } " index = " $ { jar . index } " indexMetaInf = " $ { jar . index . metainf } " jarfile = " $ { dist . jar } " manifest = " @ { manifest } " rebase = " $ { copylibs . rebase } " runtimeclasspath = " $ { run . classpath . without . build . classes . dir } " > <nl> + < fileset dir = " $ { build . classes . dir } " excludes = " $ { dist . archive . excludes } " / > <nl> + < manifest > <nl> + < ! - - < attribute name = " Class - Path " value = " $ { jar . classpath } " / > - - > <nl> + < customize / > <nl> + < / manifest > <nl> + < / copylibs > <nl> + < / sequential > <nl> + < / macrodef > <nl> + < / target > <nl> + <nl> < target name = " - pre - jar " > <nl> < tempfile deleteonexit = " true " destdir = " $ { build . dir } " property = " tmp . manifest . file " / > <nl> < manifest file = " $ { tmp . manifest . file } " mode = " replace " >
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 6718375 . . e1352b4 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 2 , 7 + 2 , 7 @ @ NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and AL 2 . 0 ( see LICENSE <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> - Release 4 . 4 . 0 ( Next release ) <nl> + Release 4 . 4 . 0 <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> Features <nl> diff - - git a / README . md b / README . md <nl> index fc550b1 . . 876d341 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 5 , 7 + 5 , 7 @ @ <nl> Java Native Access ( JNA ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / java - native - access . github . io / jna / 4 . 3 . 0 / javadoc / ) . Please read the [ overview ] ( http : / / java - native - access . github . io / jna / 4 . 3 . 0 / javadoc / overview - summary . html # overview _ description ) . Questions , comments , or exploratory conversations should begin on the [ mailing list ] ( http : / / groups . google . com / group / jna - users ) , although you may find it easier to find answers to already - solved problems on [ StackOverflow ] ( http : / / stackoverflow . com / questions / tagged / jna ) . <nl> + The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / java - native - access . github . io / jna / 4 . 4 . 0 / javadoc / ) . Please read the [ overview ] ( http : / / java - native - access . github . io / jna / 4 . 4 . 0 / javadoc / overview - summary . html # overview _ description ) . Questions , comments , or exploratory conversations should begin on the [ mailing list ] ( http : / / groups . google . com / group / jna - users ) , although you may find it easier to find answers to already - solved problems on [ StackOverflow ] ( http : / / stackoverflow . com / questions / tagged / jna ) . <nl> <nl> JNA provides Java programs easy access to native shared libraries without writing anything but Java code - no JNI or native code is required . This functionality is comparable to Windows ' Platform / Invoke and Python ' s ctypes . <nl> <nl> @ @ - 57 , 13 + 57 , 13 @ @ Pre - built platform support may be found [ here ] ( https : / / github . com / java - native - ac <nl> Download <nl> = = = = = = = = <nl> <nl> - Version 4 . 3 . 0 <nl> + Version 4 . 4 . 0 <nl> <nl> * [ ! [ Maven Central ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna / badge . svg ) ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna ) & nbsp ; <nl> - [ jna . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna / 4 . 3 . 0 / jna - 4 . 3 . 0 . jar ) <nl> + [ jna . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna / 4 . 4 . 0 / jna - 4 . 4 . 0 . jar ) <nl> <nl> * [ ! [ Maven Central ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna - platform / badge . svg ) ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna - platform ) & nbsp ; <nl> - [ jna - platform . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna - platform / 4 . 3 . 0 / jna - platform - 4 . 3 . 0 . jar ) <nl> + [ jna - platform . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna - platform / 4 . 4 . 0 / jna - platform - 4 . 4 . 0 . jar ) <nl> <nl> Features <nl> = = = = = = = = <nl> @ @ - 124 , 12 + 124 , 12 @ @ Using the Library <nl> * [ Platform Library ] ( https : / / github . com / java - native - access / jna / blob / master / www / PlatformLibrary . md ) <nl> * [ Direct Method Mapping ] ( https : / / github . com / java - native - access / jna / blob / master / www / DirectMapping . md ) ( Optimization ) <nl> * [ Frequently Asked Questions ( FAQ ) ] ( https : / / github . com / java - native - access / jna / blob / master / www / FrequentlyAskedQuestions . md ) <nl> - * [ Avoiding Crashes ] ( http : / / java - native - access . github . io / jna / 4 . 3 . 0 / javadoc / overview - summary . html # crash - protection ) <nl> + * [ Avoiding Crashes ] ( http : / / java - native - access . github . io / jna / 4 . 4 . 0 / javadoc / overview - summary . html # crash - protection ) <nl> <nl> Primary Documentation ( JavaDoc ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference is in the [ JavaDoc ] ( http : / / java - native - access . github . io / jna / 4 . 3 . 0 / javadoc / ) . <nl> + The definitive JNA reference is in the [ JavaDoc ] ( http : / / java - native - access . github . io / jna / 4 . 4 . 0 / javadoc / ) . <nl> <nl> Developers <nl> = = = = = = = = = = <nl> diff - - git a / dist / doc . zip b / dist / doc . zip <nl> index a89bf57 . . 2bd17b4 100644 <nl> Binary files a / dist / doc . zip and b / dist / doc . zip differ <nl> diff - - git a / dist / jna - min . jar b / dist / jna - min . jar <nl> index 2e20af0 . . ef7fa50 100644 <nl> Binary files a / dist / jna - min . jar and b / dist / jna - min . jar differ <nl> diff - - git a / dist / jna - platform . jar b / dist / jna - platform . jar <nl> index 16d3ae6 . . ce54d8f 100644 <nl> Binary files a / dist / jna - platform . jar and b / dist / jna - platform . jar differ <nl> diff - - git a / dist / jna . aar b / dist / jna . aar <nl> new file mode 100644 <nl> index 0000000 . . 12f6032 <nl> Binary files / dev / null and b / dist / jna . aar differ <nl> diff - - git a / dist / jna . jar b / dist / jna . jar <nl> index 713354e . . 521bd92 100644 <nl> Binary files a / dist / jna . jar and b / dist / jna . jar differ <nl> diff - - git a / dist / jnacontrib / demo - alphamask . jar b / dist / jnacontrib / demo - alphamask . jar <nl> index 0dd0281 . . 2ab10cd 100644 <nl> Binary files a / dist / jnacontrib / demo - alphamask . jar and b / dist / jnacontrib / demo - alphamask . jar differ <nl> diff - - git a / dist / jnacontrib / demo - balloonmanager . jar b / dist / jnacontrib / demo - balloonmanager . jar <nl> index cf74c96 . . 9d60e19 100644 <nl> Binary files a / dist / jnacontrib / demo - balloonmanager . jar and b / dist / jnacontrib / demo - balloonmanager . jar differ <nl> diff - - git a / dist / jnacontrib / demo - balloontips . jar b / dist / jnacontrib / demo - balloontips . jar <nl> index 62340a7 . . 55bdd65 100644 <nl> Binary files a / dist / jnacontrib / demo - balloontips . jar and b / dist / jnacontrib / demo - balloontips . jar differ <nl> diff - - git a / dist / jnacontrib / demo - dnd . jar b / dist / jnacontrib / demo - dnd . jar <nl> index 55d7c2c . . a905ec9 100644 <nl> Binary files a / dist / jnacontrib / demo - dnd . jar and b / dist / jnacontrib / demo - dnd . jar differ <nl> diff - - git a / dist / jnacontrib / demo - monitordemo . jar b / dist / jnacontrib / demo - monitordemo . jar <nl> index 66ec26f . . 6a0283e 100644 <nl> Binary files a / dist / jnacontrib / demo - monitordemo . jar and b / dist / jnacontrib / demo - monitordemo . jar differ <nl> diff - - git a / dist / jnacontrib / demo - msoffice . jar b / dist / jnacontrib / demo - msoffice . jar <nl> index 5fca363 . . 68df784 100644 <nl> Binary files a / dist / jnacontrib / demo - msoffice . jar and b / dist / jnacontrib / demo - msoffice . jar differ <nl> diff - - git a / dist / jnacontrib / demo - nativewindowmsg . jar b / dist / jnacontrib / demo - nativewindowmsg . jar <nl> index 21a4116 . . c252cb9 100644 <nl> Binary files a / dist / jnacontrib / demo - nativewindowmsg . jar and b / dist / jnacontrib / demo - nativewindowmsg . jar differ <nl> diff - - git a / dist / jnacontrib / demo - shapedwindow . jar b / dist / jnacontrib / demo - shapedwindow . jar <nl> index 98a2b67 . . 8183e20 100644 <nl> Binary files a / dist / jnacontrib / demo - shapedwindow . jar and b / dist / jnacontrib / demo - shapedwindow . jar differ <nl> diff - - git a / dist / jnacontrib / demo - w32keyhook . jar b / dist / jnacontrib / demo - w32keyhook . jar <nl> index b15df01 . . 522b377 100644 <nl> Binary files a / dist / jnacontrib / demo - w32keyhook . jar and b / dist / jnacontrib / demo - w32keyhook . jar differ <nl> diff - - git a / dist / jnacontrib / demo - w32printing . jar b / dist / jnacontrib / demo - w32printing . jar <nl> index 441006b . . 35e3691 100644 <nl> Binary files a / dist / jnacontrib / demo - w32printing . jar and b / dist / jnacontrib / demo - w32printing . jar differ <nl> diff - - git a / dist / jnacontrib / demo - x11 . jar b / dist / jnacontrib / demo - x11 . jar <nl> index 0cf7667 . . 5a6faa0 100644 <nl> Binary files a / dist / jnacontrib / demo - x11 . jar and b / dist / jnacontrib / demo - x11 . jar differ <nl> diff - - git a / dist / linux - armel . jar b / dist / linux - armel . jar <nl> new file mode 100644 <nl> index 0000000 . . 1319f4e <nl> Binary files / dev / null and b / dist / linux - armel . jar differ <nl> diff - - git a / dist / src - full . zip b / dist / src - full . zip <nl> index bb694b7 . . f4899a6 100644 <nl> Binary files a / dist / src - full . zip and b / dist / src - full . zip differ <nl> diff - - git a / dist / src . zip b / dist / src . zip <nl> index 2ef1927 . . 27e3151 100644 <nl> Binary files a / dist / src . zip and b / dist / src . zip differ <nl> diff - - git a / dist / sunos - x86 - 64 . jar b / dist / sunos - x86 - 64 . jar <nl> index 6716399 . . 5ff8c92 100644 <nl> Binary files a / dist / sunos - x86 - 64 . jar and b / dist / sunos - x86 - 64 . jar differ <nl> diff - - git a / dist / win32 - x86 - 64 . jar b / dist / win32 - x86 - 64 . jar <nl> index 94435e7 . . 2fbf678 100644 <nl> Binary files a / dist / win32 - x86 - 64 . jar and b / dist / win32 - x86 - 64 . jar differ <nl> diff - - git a / dist / win32 - x86 . jar b / dist / win32 - x86 . jar <nl> index 9c4cee6 . . bab2a3b 100644 <nl> Binary files a / dist / win32 - x86 . jar and b / dist / win32 - x86 . jar differ
diff - - git a / build . xml b / build . xml <nl> index b2c67b6 . . 051bdaa 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 57 , 8 + 57 , 8 @ @ <nl> < property name = " android . versionCode " value = " 1 " / > <nl> < ! - - JNA library release version - - > <nl> < property name = " jna . major " value = " 4 " / > <nl> - < property name = " jna . minor " value = " 3 " / > <nl> - < property name = " jna . revision " value = " 1 " / > <nl> + < property name = " jna . minor " value = " 4 " / > <nl> + < property name = " jna . revision " value = " 0 " / > <nl> < property name = " jna . build " value = " 0 " / > < ! - - $ { build . number } - - > <nl> < condition property = " version . suffix " value = " " else = " - SNAPSHOT " > <nl> < or >
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 3dba53a . . 3441a0c 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 9 , 6 + 9 , 7 @ @ Features <nl> - - - - - - - - <nl> * [ # 757 ] ( https : / / github . com / java - native - access / jna / issues / 757 ) : Build android archive ( AAR ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 767 ] ( https : / / github . com / java - native - access / jna / pull / 767 ) : Add Win32 API mapping for Shlwapi PathIsUNC - [ @ ivanwick ] ( https : / / github . com / ivanwick ) . <nl> + * [ # 772 ] ( https : / / github . com / java - native - access / jna / pull / 772 ) : Improved speed of GDIUtil . getScreenshot ( ) by ~ 30 % - [ @ sommd ] ( https : / / github . com / sommd ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / GDI32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / GDI32Util . java <nl> index 660914a . . 3a80762 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / GDI32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / GDI32Util . java <nl> @ @ - 25 , 13 + 25 , 23 @ @ package com . sun . jna . platform . win32 ; <nl> <nl> import java . awt . Rectangle ; <nl> import java . awt . image . BufferedImage ; <nl> + import java . awt . image . DataBuffer ; <nl> + import java . awt . image . DataBufferInt ; <nl> + import java . awt . image . DirectColorModel ; <nl> + import java . awt . image . Raster ; <nl> + import java . awt . image . WritableRaster ; <nl> <nl> import com . sun . jna . Memory ; <nl> import com . sun . jna . Native ; <nl> + import com . sun . jna . platform . win32 . GDI32 ; <nl> + import com . sun . jna . platform . win32 . User32 ; <nl> + import com . sun . jna . platform . win32 . Win32Exception ; <nl> import com . sun . jna . platform . win32 . WinDef . HBITMAP ; <nl> import com . sun . jna . platform . win32 . WinDef . HDC ; <nl> import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> import com . sun . jna . platform . win32 . WinDef . RECT ; <nl> + import com . sun . jna . platform . win32 . WinError ; <nl> + import com . sun . jna . platform . win32 . WinGDI ; <nl> import com . sun . jna . platform . win32 . WinGDI . BITMAPINFO ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> <nl> @ @ - 41 , 6 + 51 , 13 @ @ import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> * @ author mlfreeman [ at ] gmail . com <nl> * / <nl> public class GDI32Util { <nl> + 	 private static final DirectColorModel SCREENSHOT _ COLOR _ MODEL = new DirectColorModel ( 24 , 0x00FF0000 , 0xFF00 , 0xFF ) ; <nl> + 	 private static final int [ ] SCREENSHOT _ BAND _ MASKS = { <nl> + 	 SCREENSHOT _ COLOR _ MODEL . getRedMask ( ) , <nl> + SCREENSHOT _ COLOR _ MODEL . getGreenMask ( ) , <nl> + SCREENSHOT _ COLOR _ MODEL . getBlueMask ( ) <nl> + 	 } ; <nl> + <nl> 	 / * * <nl> 	 * Takes a screenshot of the given window <nl> 	 * <nl> @ @ - 86 , 8 + 103 , 6 @ @ public class GDI32Util { <nl> 	 	 BufferedImage image = null ; <nl> 	 	 <nl> 	 	 try { <nl> - 	 	 	 image = new BufferedImage ( windowWidth , windowHeight , BufferedImage . TYPE _ INT _ RGB ) ; <nl> - 	 	 	 <nl> 	 	 	 hdcTargetMem = GDI32 . INSTANCE . CreateCompatibleDC ( hdcTarget ) ; <nl> 	 	 	 if ( hdcTargetMem = = null ) { <nl> 	 	 	 	 throw new Win32Exception ( Native . getLastError ( ) ) ; <nl> @ @ - 122 , 8 + 137 , 11 @ @ public class GDI32Util { <nl> 	 	 	 	 throw new Win32Exception ( Native . getLastError ( ) ) ; <nl> 	 	 	 } <nl> <nl> - 	 	 	 image . setRGB ( 0 , 0 , windowWidth , windowHeight , buffer . getIntArray ( 0 , windowWidth * windowHeight ) , 0 , <nl> - 	 	 	 	 	 windowWidth ) ; <nl> + 	 	 	 int bufferSize = windowWidth * windowHeight ; <nl> + 	 	 	 DataBuffer dataBuffer = new DataBufferInt ( buffer . getIntArray ( 0 , bufferSize ) , bufferSize ) ; <nl> + 	 	 	 WritableRaster raster = Raster . createPackedRaster ( dataBuffer , windowWidth , windowHeight , windowWidth , <nl> + SCREENSHOT _ BAND _ MASKS , null ) ; <nl> + 	 	 	 image = new BufferedImage ( SCREENSHOT _ COLOR _ MODEL , raster , false , null ) ; <nl> <nl> 	 	 } catch ( Win32Exception e ) { <nl> 	 	 	 we = e ;
diff - - git a / native / testlib . c b / native / testlib . c <nl> index cbf8959 . . 0747e45 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 928 , 6 + 928 , 16 @ @ returnStringVarArgs ( const char * fmt , . . . ) { <nl> return cp ; <nl> } <nl> <nl> + EXPORT char * <nl> + returnStringVarArgs2 ( const char * fmt , . . . ) { <nl> + char * cp ; <nl> + va _ list ap ; <nl> + va _ start ( ap , fmt ) ; <nl> + cp = va _ arg ( ap , char * ) ; <nl> + va _ end ( ap ) ; <nl> + return cp ; <nl> + } <nl> + <nl> # if defined ( _ WIN32 ) & & ! defined ( _ WIN64 ) & & ! defined ( _ WIN32 _ WCE ) <nl> / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> / / stdcall tests <nl> diff - - git a / test / com / sun / jna / VarArgsTest . java b / test / com / sun / jna / VarArgsTest . java <nl> index aeb1473 . . a10938a 100644 <nl> - - - a / test / com / sun / jna / VarArgsTest . java <nl> + + + b / test / com / sun / jna / VarArgsTest . java <nl> @ @ - 43 , 7 + 43 , 7 @ @ public class VarArgsTest extends TestCase { <nl> public int addVarArgs ( String fmt , Number . . . args ) ; <nl> public String returnStringVarArgs ( String fmt , Object . . . args ) ; <nl> public void modifyStructureVarArgs ( String fmt , Object arg1 , Object . . . args ) ; <nl> - public String returnStringVarArgs ( String . . . args ) ; <nl> + public String returnStringVarArgs2 ( String . . . args ) ; <nl> } <nl> TestLibrary lib ; <nl> @ Override <nl> @ @ - 93 , 7 + 93 , 7 @ @ public class VarArgsTest extends TestCase { <nl> public void testStringVarArgsFull ( ) { <nl> Object [ ] args = new Object [ ] { " Test " } ; <nl> assertEquals ( " Did not return correct string " , args [ 0 ] , <nl> - lib . returnStringVarArgs ( " " , " Test " ) ) ; <nl> + lib . returnStringVarArgs2 ( " " , " Test " ) ) ; <nl> } <nl> <nl> public void testAppendNullToVarargs ( ) {
diff - - git a / CHANGES . md b / CHANGES . md <nl> index a9cc43c . . 2127301 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 14 , 6 + 14 , 7 @ @ Bug Fixes <nl> * [ # 754 ] ( https : / / github . com / java - native - access / jna / issues / 754 ) : Move MSVC build to standard stdbool . h and require Visual C + + 2015 ( sizeof ( bool ) = 1 is now also true on MSVC build ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 399 ] ( https : / / github . com / java - native - access / jna / issues / 399 ) : Check native version before attempting to call into native code - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 763 ] ( https : / / github . com / java - native - access / jna / issues / 763 ) : Fix vararg calls without fixed parts - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 770 ] ( https : / / github . com / java - native - access / jna / pull / 770 ) : Fix for free data handle in DdemlUtil . - [ @ stolarczykt ] ( https : / / github . com / stolarczykt ) . <nl> <nl> Release 4 . 3 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Ddeml . java b / contrib / platform / src / com / sun / jna / platform / win32 / Ddeml . java <nl> index 34d68f4 . . bac53f2 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Ddeml . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Ddeml . java <nl> @ @ - 2561 , 6 + 2561 , 7 @ @ public interface Ddeml extends StdCallLibrary { <nl> public int DdeGetData ( HDDEDATA hData , Pointer pDst , int cbMax , int cbOff ) ; <nl> <nl> / * * <nl> + * Provides access to the data in the specified Dynamic Data Exchange ( DDE ) object . <nl> * An application must call the DdeUnaccessData function when it has <nl> * finished accessing the data in the object . <nl> * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / DdemlUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / DdemlUtil . java <nl> index c5f5cf6 . . 21f5cd3 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / DdemlUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / DdemlUtil . java <nl> @ @ - 731 , 7 + 731 , 7 @ @ public abstract class DdemlUtil { <nl> } <nl> <nl> public void freeDataHandle ( Ddeml . HDDEDATA hData ) { <nl> - boolean result = Ddeml . INSTANCE . DdeUnaccessData ( hData ) ; <nl> + boolean result = Ddeml . INSTANCE . DdeFreeDataHandle ( hData ) ; <nl> if ( ! result ) { <nl> throw DdemlException . create ( getLastError ( ) ) ; <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index a9cc43c . . ed70d70 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 8 , 6 + 8 , 7 @ @ Release 4 . 3 . 1 ( Next release ) <nl> Features <nl> - - - - - - - - <nl> * [ # 757 ] ( https : / / github . com / java - native - access / jna / issues / 757 ) : Build android archive ( AAR ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 767 ] ( https : / / github . com / java - native - access / jna / pull / 767 ) : Add Win32 API mapping for Shlwapi PathIsUNC - [ @ ivanwick ] ( https : / / github . com / ivanwick ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shlwapi . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shlwapi . java <nl> index 73606bb . . edeb5ba 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shlwapi . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shlwapi . java <nl> @ @ - 55 , 4 + 55 , 15 @ @ public interface Shlwapi extends StdCallLibrary { <nl> * / <nl> <nl> HRESULT StrRetToStr ( PointerByReference pstr , Pointer pidl , PointerByReference ppszName ) ; <nl> + <nl> + / * * <nl> + * Determines if a path string is a valid Universal Naming Convention ( UNC ) path , as opposed to <nl> + * a path based on a drive letter . <nl> + * <nl> + * @ param path <nl> + * A string containing the path to validate . <nl> + * <nl> + * @ return TRUE if the string is a valid UNC path ; otherwise , FALSE . <nl> + * / <nl> + boolean PathIsUNC ( String path ) ; <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / ShlwapiTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / ShlwapiTest . java <nl> new file mode 100644 <nl> index 0000000 . . c987301 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / ShlwapiTest . java <nl> @ @ - 0 , 0 + 1 , 24 @ @ <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import junit . framework . TestCase ; <nl> + <nl> + public class ShlwapiTest extends TestCase { <nl> + <nl> + public static void main ( String [ ] args ) { <nl> + junit . textui . TestRunner . run ( ShlwapiTest . class ) ; <nl> + } <nl> + <nl> + public void testPathIsUNC ( ) { <nl> + assertEquals ( true , Shlwapi . INSTANCE . PathIsUNC ( " \ \ \ \ path1 \ \ path2 " ) ) ; <nl> + assertEquals ( true , Shlwapi . INSTANCE . PathIsUNC ( " \ \ \ \ path1 " ) ) ; <nl> + assertEquals ( false , Shlwapi . INSTANCE . PathIsUNC ( " acme \ \ \ \ path4 \ \ \ \ path5 " ) ) ; <nl> + assertEquals ( true , Shlwapi . INSTANCE . PathIsUNC ( " \ \ \ \ " ) ) ; <nl> + assertEquals ( true , Shlwapi . INSTANCE . PathIsUNC ( " \ \ \ \ ? \ \ UNC \ \ path1 \ \ path2 " ) ) ; <nl> + assertEquals ( true , Shlwapi . INSTANCE . PathIsUNC ( " \ \ \ \ ? \ \ UNC \ \ path1 " ) ) ; <nl> + assertEquals ( true , Shlwapi . INSTANCE . PathIsUNC ( " \ \ \ \ ? \ \ UNC \ \ " ) ) ; <nl> + assertEquals ( false , Shlwapi . INSTANCE . PathIsUNC ( " \ \ path1 " ) ) ; <nl> + assertEquals ( false , Shlwapi . INSTANCE . PathIsUNC ( " path1 " ) ) ; <nl> + assertEquals ( false , Shlwapi . INSTANCE . PathIsUNC ( " c : \ \ path1 " ) ) ; <nl> + assertEquals ( false , Shlwapi . INSTANCE . PathIsUNC ( " \ \ \ \ ? \ \ c : \ \ path1 " ) ) ; <nl> + } <nl> + }
diff - - git a / README . md b / README . md <nl> index f5c0438 . . fc550b1 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 60 , 10 + 60 , 10 @ @ Download <nl> Version 4 . 3 . 0 <nl> <nl> * [ ! [ Maven Central ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna / badge . svg ) ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna ) & nbsp ; <nl> - [ jna . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / jna / 4 . 3 . 0 / jna - 4 . 3 . 0 . jar ) <nl> + [ jna . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna / 4 . 3 . 0 / jna - 4 . 3 . 0 . jar ) <nl> <nl> * [ ! [ Maven Central ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna - platform / badge . svg ) ] ( https : / / maven - badges . herokuapp . com / maven - central / net . java . dev . jna / jna - platform ) & nbsp ; <nl> - [ jna - platform . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / jna - platform / 4 . 3 . 0 / jna - platform - 4 . 3 . 0 . jar ) <nl> + [ jna - platform . jar ] ( http : / / repo1 . maven . org / maven2 / net / java / dev / jna / jna - platform / 4 . 3 . 0 / jna - platform - 4 . 3 . 0 . jar ) <nl> <nl> Features <nl> = = = = = = = =
diff - - git a / www / Contributing . md b / www / Contributing . md <nl> index c0e3b6a . . 9ddd727 100644 <nl> - - - a / www / Contributing . md <nl> + + + b / www / Contributing . md <nl> @ @ - 132 , 7 + 132 , 7 @ @ Utilities that wrap Win32 functions into more user - friendly implementations are <nl> Javadoc Pages <nl> = = = = = = = = = = = = = <nl> <nl> - Javadoc pages are published with [ gh - pages ] ( http : / / pages . github . com / ) to a root branch . The official repository for JNA is [ here ] ( http : / / java - native - access . github . com / jna ) . Here ' s how to pull and push the root branch to your local environment . <nl> + Javadoc pages are published with [ gh - pages ] ( http : / / pages . github . com / ) to a root branch . The official repository for JNA is [ here ] ( https : / / github . com / java - native - access / jna ) . The pages are located in the gh - pages branch . Here ' s how to pull and push the root branch to your local environment . <nl> <nl> ` ` ` sh <nl> git fetch origin
diff - - git a / CHANGES . md b / CHANGES . md <nl> index fe770bc . . b213f22 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 11 , 6 + 11 , 7 @ @ Features <nl> Bug Fixes <nl> - - - - - - - - - <nl> * [ # 754 ] ( https : / / github . com / java - native - access / jna / issues / 754 ) : Move MSVC build to standard stdbool . h and require Visual C + + 2015 ( sizeof ( bool ) = 1 is now also true on MSVC build ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 399 ] ( https : / / github . com / java - native - access / jna / issues / 399 ) : Check native version before attempting to call into native code - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 4 . 3 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index f51a152 . . 14660af 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 148 , 29 + 148 , 53 @ @ public final class Native implements Version { <nl> static final int MAX _ ALIGNMENT ; <nl> static final int MAX _ PADDING ; <nl> <nl> + @ Deprecated <nl> public static float parseVersion ( String v ) { <nl> return Float . parseFloat ( v . substring ( 0 , v . lastIndexOf ( " . " ) ) ) ; <nl> } <nl> + <nl> + / * * <nl> + * Version string must have the structure < major > . < minor > . < revision > <nl> + * a bugfix change in the native code increments revision , the minor is <nl> + * incremented for backwards compatible changes and the major version <nl> + * is changed for backwards incompatbile changes . <nl> + * <nl> + * @ param expectedVersion <nl> + * @ param nativeVersion <nl> + * @ return <nl> + * / <nl> + static boolean isCompatibleVersion ( String expectedVersion , String nativeVersion ) { <nl> + String [ ] expectedVersionParts = expectedVersion . split ( " \ \ . " ) ; <nl> + String [ ] nativeVersionParts = nativeVersion . split ( " \ \ . " ) ; <nl> + if ( expectedVersionParts . length < 3 | | nativeVersionParts . length < 3 ) { <nl> + return false ; <nl> + } <nl> + <nl> + int expectedMajor = Integer . parseInt ( expectedVersionParts [ 0 ] ) ; <nl> + int nativeMajor = Integer . parseInt ( nativeVersionParts [ 0 ] ) ; <nl> + int expectedMinor = Integer . parseInt ( expectedVersionParts [ 1 ] ) ; <nl> + int nativeMinor = Integer . parseInt ( nativeVersionParts [ 1 ] ) ; <nl> + <nl> + if ( expectedMajor ! = nativeMajor ) { <nl> + return false ; <nl> + } <nl> + <nl> + if ( expectedMinor > nativeMinor ) { <nl> + return false ; <nl> + } <nl> + <nl> + return true ; <nl> + } <nl> <nl> static { <nl> loadNativeDispatchLibrary ( ) ; <nl> - POINTER _ SIZE = sizeof ( TYPE _ VOIDP ) ; <nl> - LONG _ SIZE = sizeof ( TYPE _ LONG ) ; <nl> - WCHAR _ SIZE = sizeof ( TYPE _ WCHAR _ T ) ; <nl> - SIZE _ T _ SIZE = sizeof ( TYPE _ SIZE _ T ) ; <nl> - BOOL _ SIZE = sizeof ( TYPE _ BOOL ) ; <nl> <nl> - / / Perform initialization of other JNA classes until * after * <nl> - / / initializing the above final fields <nl> - initIDs ( ) ; <nl> - if ( Boolean . getBoolean ( " jna . protected " ) ) { <nl> - setProtected ( true ) ; <nl> - } <nl> - float version = parseVersion ( getNativeVersion ( ) ) ; <nl> - if ( version ! = parseVersion ( VERSION _ NATIVE ) ) { <nl> + if ( ! isCompatibleVersion ( VERSION _ NATIVE , getNativeVersion ( ) ) ) { <nl> String LS = System . getProperty ( " line . separator " ) ; <nl> throw new Error ( LS + LS <nl> + " There is an incompatible JNA native library installed on this system " + LS <nl> + + " Expected : " + VERSION _ NATIVE + LS <nl> + + " Found : " + getNativeVersion ( ) + LS <nl> + ( jnidispatchPath ! = null <nl> ? " ( at " + jnidispatchPath + " ) " : System . getProperty ( " java . library . path " ) ) <nl> + " . " + LS <nl> @ @ - 180 , 6 + 204 , 19 @ @ public final class Native implements Version { <nl> + " - set jna . boot . library . path to include the path to the version of the " + LS <nl> + " jnidispatch library included with the JNA jar file you are using " + LS ) ; <nl> } <nl> + <nl> + POINTER _ SIZE = sizeof ( TYPE _ VOIDP ) ; <nl> + LONG _ SIZE = sizeof ( TYPE _ LONG ) ; <nl> + WCHAR _ SIZE = sizeof ( TYPE _ WCHAR _ T ) ; <nl> + SIZE _ T _ SIZE = sizeof ( TYPE _ SIZE _ T ) ; <nl> + BOOL _ SIZE = sizeof ( TYPE _ BOOL ) ; <nl> + <nl> + / / Perform initialization of other JNA classes until * after * <nl> + / / initializing the above final fields <nl> + initIDs ( ) ; <nl> + if ( Boolean . getBoolean ( " jna . protected " ) ) { <nl> + setProtected ( true ) ; <nl> + } <nl> MAX _ ALIGNMENT = Platform . isSPARC ( ) | | Platform . isWindows ( ) <nl> | | ( Platform . isLinux ( ) & & ( Platform . isARM ( ) | | Platform . isPPC ( ) ) ) <nl> | | Platform . isAIX ( ) <nl> diff - - git a / test / com / sun / jna / NativeTest . java b / test / com / sun / jna / NativeTest . java <nl> index eb30ba9 . . 0baf1d4 100644 <nl> - - - a / test / com / sun / jna / NativeTest . java <nl> + + + b / test / com / sun / jna / NativeTest . java <nl> @ @ - 523 , 4 + 523 , 13 @ @ public class NativeTest extends TestCase { <nl> try { Thread . sleep ( 300000 ) ; } catch ( Exception e ) { } <nl> } <nl> } <nl> + <nl> + public void testVersionComparison ( ) { <nl> + assertTrue ( " Equal version " , Native . isCompatibleVersion ( " 5 . 1 . 0 " , " 5 . 1 . 0 " ) ) ; <nl> + assertTrue ( " New revision " , Native . isCompatibleVersion ( " 5 . 2 . 0 " , " 5 . 2 . 1 " ) ) ; <nl> + assertTrue ( " New minor provided , older minor expected " , Native . isCompatibleVersion ( " 5 . 1 . 0 " , " 5 . 10 . 0 " ) ) ; <nl> + assertFalse ( " Old minor provided , new minor expected " , Native . isCompatibleVersion ( " 5 . 10 . 0 " , " 5 . 1 . 0 " ) ) ; <nl> + assertFalse ( " Different major ( expected < provided ) " , Native . isCompatibleVersion ( " 4 . 0 . 0 " , " 5 . 0 . 0 " ) ) ; <nl> + assertFalse ( " Different major ( expected > provided ) " , Native . isCompatibleVersion ( " 5 . 0 . 0 " , " 4 . 0 . 0 " ) ) ; <nl> + } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 04446e8 . . 3a9dd13 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 2 , 6 + 2 , 15 @ @ NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and AL 2 . 0 ( see LICENSE <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> + Release 4 . 3 . 1 ( Next release ) <nl> + = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> + <nl> + Features <nl> + - - - - - - - - <nl> + <nl> + Bug Fixes <nl> + - - - - - - - - - <nl> + <nl> Release 4 . 3 . 0 <nl> = = = = = = = = = = = = = <nl> <nl> diff - - git a / build . xml b / build . xml <nl> index 09aeac2 . . 2a755dd 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 55 , 7 + 55 , 7 @ @ <nl> < ! - - JNA library release version - - > <nl> < property name = " jna . major " value = " 4 " / > <nl> < property name = " jna . minor " value = " 3 " / > <nl> - < property name = " jna . revision " value = " 0 " / > <nl> + < property name = " jna . revision " value = " 1 " / > <nl> < property name = " jna . build " value = " 0 " / > < ! - - $ { build . number } - - > <nl> < condition property = " version . suffix " value = " " else = " - SNAPSHOT " > <nl> < or >
diff - - git a / dist / aix - ppc . jar b / dist / aix - ppc . jar <nl> index 6716399 . . 1d50b10 100644 <nl> Binary files a / dist / aix - ppc . jar and b / dist / aix - ppc . jar differ <nl> diff - - git a / dist / aix - ppc64 . jar b / dist / aix - ppc64 . jar <nl> index 6716399 . . f55d313 100644 <nl> Binary files a / dist / aix - ppc64 . jar and b / dist / aix - ppc64 . jar differ <nl> diff - - git a / dist / android - aarch64 . jar b / dist / android - aarch64 . jar <nl> index 09f856f . . 5d47db3 100644 <nl> Binary files a / dist / android - aarch64 . jar and b / dist / android - aarch64 . jar differ <nl> diff - - git a / dist / android - arm . jar b / dist / android - arm . jar <nl> index 1d7a358 . . 176bd69 100644 <nl> Binary files a / dist / android - arm . jar and b / dist / android - arm . jar differ <nl> diff - - git a / dist / android - armv7 . jar b / dist / android - armv7 . jar <nl> index 4a0b34b . . 95571ce 100644 <nl> Binary files a / dist / android - armv7 . jar and b / dist / android - armv7 . jar differ <nl> diff - - git a / dist / android - mips . jar b / dist / android - mips . jar <nl> index 9f61517 . . cd7686c 100644 <nl> Binary files a / dist / android - mips . jar and b / dist / android - mips . jar differ <nl> diff - - git a / dist / android - mips64 . jar b / dist / android - mips64 . jar <nl> index 7098eb9 . . 9c247a1 100644 <nl> Binary files a / dist / android - mips64 . jar and b / dist / android - mips64 . jar differ <nl> diff - - git a / dist / android - x86 - 64 . jar b / dist / android - x86 - 64 . jar <nl> index 450544c . . ab0ea2a 100644 <nl> Binary files a / dist / android - x86 - 64 . jar and b / dist / android - x86 - 64 . jar differ <nl> diff - - git a / dist / android - x86 . jar b / dist / android - x86 . jar <nl> index 87cdd35 . . 70c7278 100644 <nl> Binary files a / dist / android - x86 . jar and b / dist / android - x86 . jar differ <nl> diff - - git a / dist / darwin . jar b / dist / darwin . jar <nl> index d4cbc98 . . 7ceb691 100644 <nl> Binary files a / dist / darwin . jar and b / dist / darwin . jar differ <nl> diff - - git a / dist / doc . zip b / dist / doc . zip <nl> index 0edbb95 . . a89bf57 100644 <nl> Binary files a / dist / doc . zip and b / dist / doc . zip differ <nl> diff - - git a / dist / freebsd - x86 - 64 . jar b / dist / freebsd - x86 - 64 . jar <nl> index 8ed2aae . . 6716399 100644 <nl> Binary files a / dist / freebsd - x86 - 64 . jar and b / dist / freebsd - x86 - 64 . jar differ <nl> diff - - git a / dist / freebsd - x86 . jar b / dist / freebsd - x86 . jar <nl> index 3dbb368 . . 6716399 100644 <nl> Binary files a / dist / freebsd - x86 . jar and b / dist / freebsd - x86 . jar differ <nl> diff - - git a / dist / jna - min . jar b / dist / jna - min . jar <nl> index 2545efa . . 2e20af0 100644 <nl> Binary files a / dist / jna - min . jar and b / dist / jna - min . jar differ <nl> diff - - git a / dist / jna - platform . jar b / dist / jna - platform . jar <nl> index ca6ea47 . . 16d3ae6 100644 <nl> Binary files a / dist / jna - platform . jar and b / dist / jna - platform . jar differ <nl> diff - - git a / dist / jna . jar b / dist / jna . jar <nl> index 900a072 . . 713354e 100644 <nl> Binary files a / dist / jna . jar and b / dist / jna . jar differ <nl> diff - - git a / dist / jnacontrib / demo - alphamask . jar b / dist / jnacontrib / demo - alphamask . jar <nl> index 543460d . . 0dd0281 100644 <nl> Binary files a / dist / jnacontrib / demo - alphamask . jar and b / dist / jnacontrib / demo - alphamask . jar differ <nl> diff - - git a / dist / jnacontrib / demo - balloonmanager . jar b / dist / jnacontrib / demo - balloonmanager . jar <nl> index 4fc79ff . . cf74c96 100644 <nl> Binary files a / dist / jnacontrib / demo - balloonmanager . jar and b / dist / jnacontrib / demo - balloonmanager . jar differ <nl> diff - - git a / dist / jnacontrib / demo - balloontips . jar b / dist / jnacontrib / demo - balloontips . jar <nl> index 767039a . . 62340a7 100644 <nl> Binary files a / dist / jnacontrib / demo - balloontips . jar and b / dist / jnacontrib / demo - balloontips . jar differ <nl> diff - - git a / dist / jnacontrib / demo - dnd . jar b / dist / jnacontrib / demo - dnd . jar <nl> index 88eced1 . . 55d7c2c 100644 <nl> Binary files a / dist / jnacontrib / demo - dnd . jar and b / dist / jnacontrib / demo - dnd . jar differ <nl> diff - - git a / dist / jnacontrib / demo - monitordemo . jar b / dist / jnacontrib / demo - monitordemo . jar <nl> new file mode 100644 <nl> index 0000000 . . 66ec26f <nl> Binary files / dev / null and b / dist / jnacontrib / demo - monitordemo . jar differ <nl> diff - - git a / dist / jnacontrib / demo - msoffice . jar b / dist / jnacontrib / demo - msoffice . jar <nl> new file mode 100644 <nl> index 0000000 . . 5fca363 <nl> Binary files / dev / null and b / dist / jnacontrib / demo - msoffice . jar differ <nl> diff - - git a / dist / jnacontrib / demo - nativewindowmsg . jar b / dist / jnacontrib / demo - nativewindowmsg . jar <nl> new file mode 100644 <nl> index 0000000 . . 21a4116 <nl> Binary files / dev / null and b / dist / jnacontrib / demo - nativewindowmsg . jar differ <nl> diff - - git a / dist / jnacontrib / demo - shapedwindow . jar b / dist / jnacontrib / demo - shapedwindow . jar <nl> index 19cc5f2 . . 98a2b67 100644 <nl> Binary files a / dist / jnacontrib / demo - shapedwindow . jar and b / dist / jnacontrib / demo - shapedwindow . jar differ <nl> diff - - git a / dist / jnacontrib / demo - w32keyhook . jar b / dist / jnacontrib / demo - w32keyhook . jar <nl> index 6f31b3c . . b15df01 100644 <nl> Binary files a / dist / jnacontrib / demo - w32keyhook . jar and b / dist / jnacontrib / demo - w32keyhook . jar differ <nl> diff - - git a / dist / jnacontrib / demo - w32printing . jar b / dist / jnacontrib / demo - w32printing . jar <nl> new file mode 100644 <nl> index 0000000 . . 441006b <nl> Binary files / dev / null and b / dist / jnacontrib / demo - w32printing . jar differ <nl> diff - - git a / dist / jnacontrib / demo - x11 . jar b / dist / jnacontrib / demo - x11 . jar <nl> index fa37cd5 . . 0cf7667 100644 <nl> Binary files a / dist / jnacontrib / demo - x11 . jar and b / dist / jnacontrib / demo - x11 . jar differ <nl> diff - - git a / dist / linux - arm . jar b / dist / linux - arm . jar <nl> index 9a5cf70 . . 1dcdc9c 100644 <nl> Binary files a / dist / linux - arm . jar and b / dist / linux - arm . jar differ <nl> diff - - git a / dist / linux - ppc64le . jar b / dist / linux - ppc64le . jar <nl> index 0674eb0 . . 2d7fa03 100644 <nl> Binary files a / dist / linux - ppc64le . jar and b / dist / linux - ppc64le . jar differ <nl> diff - - git a / dist / linux - x86 - 64 . jar b / dist / linux - x86 - 64 . jar <nl> index 3081e6b . . e7c16af 100644 <nl> Binary files a / dist / linux - x86 - 64 . jar and b / dist / linux - x86 - 64 . jar differ <nl> diff - - git a / dist / linux - x86 . jar b / dist / linux - x86 . jar <nl> index 348f7ed . . 928aef5 100644 <nl> Binary files a / dist / linux - x86 . jar and b / dist / linux - x86 . jar differ <nl> diff - - git a / dist / openbsd - x86 - 64 . jar b / dist / openbsd - x86 - 64 . jar <nl> index 8d0007d . . 6716399 100644 <nl> Binary files a / dist / openbsd - x86 - 64 . jar and b / dist / openbsd - x86 - 64 . jar differ <nl> diff - - git a / dist / openbsd - x86 . jar b / dist / openbsd - x86 . jar <nl> index 5b61717 . . 6716399 100644 <nl> Binary files a / dist / openbsd - x86 . jar and b / dist / openbsd - x86 . jar differ <nl> diff - - git a / dist / src - full . zip b / dist / src - full . zip <nl> index 7ebbc9a . . bb694b7 100644 <nl> Binary files a / dist / src - full . zip and b / dist / src - full . zip differ <nl> diff - - git a / dist / src . zip b / dist / src . zip <nl> index 095dc3e . . 2ef1927 100644 <nl> Binary files a / dist / src . zip and b / dist / src . zip differ <nl> diff - - git a / dist / sunos - sparc . jar b / dist / sunos - sparc . jar <nl> index a86928d . . 6716399 100644 <nl> Binary files a / dist / sunos - sparc . jar and b / dist / sunos - sparc . jar differ <nl> diff - - git a / dist / sunos - sparcv9 . jar b / dist / sunos - sparcv9 . jar <nl> index 30b24c5 . . 6716399 100644 <nl> Binary files a / dist / sunos - sparcv9 . jar and b / dist / sunos - sparcv9 . jar differ <nl> diff - - git a / dist / sunos - x86 - 64 . jar b / dist / sunos - x86 - 64 . jar <nl> index 58a4153 . . 6716399 100644 <nl> Binary files a / dist / sunos - x86 - 64 . jar and b / dist / sunos - x86 - 64 . jar differ <nl> diff - - git a / dist / sunos - x86 . jar b / dist / sunos - x86 . jar <nl> index 7d36803 . . 6716399 100644 <nl> Binary files a / dist / sunos - x86 . jar and b / dist / sunos - x86 . jar differ <nl> diff - - git a / dist / w32ce - arm . jar b / dist / w32ce - arm . jar <nl> index a341b15 . . 6716399 100644 <nl> Binary files a / dist / w32ce - arm . jar and b / dist / w32ce - arm . jar differ <nl> diff - - git a / dist / win32 - x86 - 64 . jar b / dist / win32 - x86 - 64 . jar <nl> index 1dceea0 . . 94435e7 100644 <nl> Binary files a / dist / win32 - x86 - 64 . jar and b / dist / win32 - x86 - 64 . jar differ <nl> diff - - git a / dist / win32 - x86 . jar b / dist / win32 - x86 . jar <nl> index 215c8f9 . . 9c4cee6 100644 <nl> Binary files a / dist / win32 - x86 . jar and b / dist / win32 - x86 . jar differ
diff - - git a / build . xml b / build . xml <nl> index c79fb6d . . 3a62b55 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 1082 , 6 + 1082 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < / condition > <nl> < javadoc package = " true " <nl> windowtitle = " JNA API " <nl> + encoding = " UTF - 8 " <nl> sourcepathref = " javadoc . src . path " <nl> classpathref = " javadoc . compile . path " <nl> maxmemory = " 256m " <nl> diff - - git a / contrib / platform / nbproject / project . properties b / contrib / platform / nbproject / project . properties <nl> index 142637c . . 2a65ed9 100644 <nl> - - - a / contrib / platform / nbproject / project . properties <nl> + + + b / contrib / platform / nbproject / project . properties <nl> @ @ - 67 , 3 + 67 , 5 @ @ run . test . classpath = \ <nl> $ { build . test . classes . dir } <nl> src . dir = src <nl> test . src . dir = test <nl> + source . encoding = UTF - 8 <nl> + file . encoding = UTF - 8 <nl> \ No newline at end of file
diff - - git a / lib / native / linux - arm . jar b / lib / native / linux - arm . jar <nl> index 1bbdfc2 . . 1dcdc9c 100755 <nl> Binary files a / lib / native / linux - arm . jar and b / lib / native / linux - arm . jar differ
diff - - git a / www / AndroidDevelopmentEnvironment . md b / www / AndroidDevelopmentEnvironment . md <nl> index 3d5c9e6 . . 4ab86ff 100644 <nl> - - - a / www / AndroidDevelopmentEnvironment . md <nl> + + + b / www / AndroidDevelopmentEnvironment . md <nl> @ @ - 9 , 6 + 9 , 24 @ @ Android Development Environment <nl> * If you ' re using android - maven - plugin , ` jna . jar ` can be used as - is ( native libraries will be automatically copied into your project ) . <nl> * If you ' re using Google ' s Eclipse plugin then you must manually remove libjnidispatch . so from jna . jar / lib / armeabi and add it into your project ' s libs / armeabi directory . <nl> * See [ http : / / code . google . com / p / android / issues / detail ? id = 17861 ] ( http : / / code . google . com / p / android / issues / detail ? id = 17861 ) and [ http : / / developer . android . com / guide / practices / jni . html ] ( http : / / developer . android . com / guide / practices / jni . html ) for more information . <nl> + * The NDK can be downloaded from [ https : / / developer . android . com / ndk / index . html ] <nl> <nl> + Sample build <nl> + - - - - - - - - - - - - <nl> <nl> - <nl> + ` ` ` bash <nl> + export NDK _ PLATFORM = / home / matthias / bin / android - ndk - r12b / platforms / android - 21 <nl> + export PATH = $ NDK _ PLATFORM / . . / . . / toolchains / aarch64 - linux - android - 4 . 9 / prebuilt / linux - x86 _ 64 / bin / : $ PATH <nl> + export PATH = $ NDK _ PLATFORM / . . / . . / toolchains / arm - linux - androideabi - 4 . 9 / prebuilt / linux - x86 _ 64 / bin / : $ PATH <nl> + export PATH = $ NDK _ PLATFORM / . . / . . / toolchains / mips64el - linux - android - 4 . 9 / prebuilt / linux - x86 _ 64 / bin / : $ PATH <nl> + export PATH = $ NDK _ PLATFORM / . . / . . / toolchains / mipsel - linux - android - 4 . 9 / prebuilt / linux - x86 _ 64 / bin / : $ PATH <nl> + export PATH = $ NDK _ PLATFORM / . . / . . / toolchains / x86 - 4 . 9 / prebuilt / linux - x86 _ 64 / bin / : $ PATH <nl> + export PATH = $ NDK _ PLATFORM / . . / . . / toolchains / x86 _ 64 - 4 . 9 / prebuilt / linux - x86 _ 64 / bin / : $ PATH <nl> + ant - Dos . prefix = android - aarch64 <nl> + ant - Dos . prefix = android - armv7 <nl> + ant - Dos . prefix = android - arm <nl> + ant - Dos . prefix = android - mips64 <nl> + ant - Dos . prefix = android - mips <nl> + ant - Dos . prefix = android - x86 - 64 <nl> + ant - Dos . prefix = android - x86 <nl> + ` ` ` <nl> \ No newline at end of file <nl> diff - - git a / www / FrequentlyAskedQuestions . md b / www / FrequentlyAskedQuestions . md <nl> index dfe902e . . 76c6414 100644 <nl> - - - a / www / FrequentlyAskedQuestions . md <nl> + + + b / www / FrequentlyAskedQuestions . md <nl> @ @ - 3 , 7 + 3 , 7 @ @ Frequently Asked Questions <nl> <nl> I ' m having trouble generating correct library mappings <nl> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> - Make sure you ' ve read [ this page ] ( https : / / github . com / java - native - access / jna / blob / master / www / Mappings . md ) and [ this one ] ( http : / / java - native - access . github . io / jna / 4 . 2 . 0 / javadoc / overview - summary . html # overview _ description ) . Try [ JNAerator ] ( http : / / code . google . com / p / jnaerator / ) . If you find its output too verbose , delete the mappings you don ' t need , or copy out the ones you do need . <nl> + Make sure you ' ve read [ this page ] ( https : / / github . com / java - native - access / jna / blob / master / www / Mappings . md ) and [ this one ] ( http : / / java - native - access . github . io / jna / 4 . 2 . 1 / overview - summary . html # overview . description ) . Try [ JNAerator ] ( http : / / code . google . com / p / jnaerator / ) . If you find its output too verbose , delete the mappings you don ' t need , or copy out the ones you do need . <nl> <nl> JNA is missing function XXX in its platform library mappings <nl> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> @ @ - 157 , 11 + 157 , 6 @ @ Does JNA work with J2ME / Windows CE / Mobile ? <nl> <nl> There is an implementation included in the regular JNA distribution built with cegcc and tested against phoneME . <nl> <nl> - I need to use a COM / OCX / ActiveX object . Can JNA do that ? <nl> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> - <nl> - Not really . Try JACOB or com4j , both of which can parse a COM interface definition and generate a Java object to match it . JNAerator is also working on generating COM bindings . <nl> - <nl> Why does the VM sometimes crash in my shutdown hook on Windows ? <nl> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> <nl> @ @ - 187 , 4 + 182 , 11 @ @ You might expect a speedup of about an order of magnitude moving to JNA direct m <nl> <nl> JNA COM support <nl> - - - - - - - - - - - - - - - <nl> - There is a new implementation to support COM in conjunction with JNA directly . The development is relatively young , honestly the development has been finished just end of February ' 13 . Please note that fact if you use the COM support in JNA , there could be things missing or not absolutely tested or still not working . Please use the jna user group to report your experience with the JNA Com support . <nl> + There are two implementations to support COM in conjunction with JNA directly . <nl> + Please see the [ PlatformLibrary ] ( https : / / github . com / java - native - access / jna / blob / master / www / PlatformLibrary . md ) <nl> + documentation for more information and use the jna user group to report your <nl> + experience with the JNA COM support . <nl> + <nl> + Additional resource that should be checked are JACOB or com4j , both of which can <nl> + parse a COM interface definition and generate a Java object to match it . <nl> + JNAerator is also working on generating COM bindings . <nl> \ No newline at end of file <nl> diff - - git a / www / PlatformLibrary . md b / www / PlatformLibrary . md <nl> index 1c90d3f . . 8d72a6e 100644 <nl> - - - a / www / PlatformLibrary . md <nl> + + + b / www / PlatformLibrary . md <nl> @ @ - 18 , 20 + 18 , 37 @ @ Cross - platform functions and structures are implemented in ` com . sun . jna . platform <nl> COM support <nl> = = = = = = = = = = = <nl> <nl> - late - time - binding <nl> - - - - - - - - - - - - - - - - - - <nl> + JNA contains two different approaches to binding COM object for access from <nl> + java . Both mainly focus on late - time - binding / invoke usage . <nl> <nl> - JNA includes basic Microsoft COM support in the package ` com . sun . jna . platform . win32 . COM . * ` . <nl> - The COM support is being implemented with late - time - binding , vtable support is not yet available . <nl> - The straightforward approach is to extend the class ` COMObject . class ` as base class for all COM enabled java applications . <nl> + The first and older variant is found in the ` com . sun . jna . platform . win32 . COM ` <nl> + package . The straightforward approach is to extend the class ` COMBindingBaseObject ` <nl> + as base class for all COM enabled java applications . <nl> <nl> - * ` COMObject ( String progId , boolean useActiveInstance ) ` : first parameter describes the ` ProgID ` ( e . g . WinWord - > ` Word . Application ` ) , second parameter if a current running instance should be used . <nl> - <nl> - * ` COMObject . oleMethod ` : provides the possability to call any kind of COM method like ` Properties ` and ` Methods ` . The ' oleMethod ' should be used to create a COM method in the custom java wrapper , <nl> + * ` COMBindingBaseObject ( String clsid , boolean useActiveInstance ) ` : first parameter describes the ` ProgID ` ( e . g . WinWord - > ` Word . Application ` ) , second parameter if a current running instance should be used . <nl> + * ` COMBindingBaseObject # oleMethod ` : provides the possability to call any kind of COM method like ` Properties ` and ` Methods ` . The ' oleMethod ' should be used to create a COM method in the custom java wrapper , <nl> <nl> e . g . ( part of the MSWord sample ) <nl> ` this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , result , this . iDispatch , " Visible " , new VARIANT ( bVisible ) ) ; ` <nl> <nl> + The approach means , that each method that is to be called needs to be manually <nl> + wrapped and all potential parameters need to be marshalled and return values <nl> + need to be manually unmarshalled . <nl> + <nl> + While very flexible , the first approach has the drawback , that the same operation : <nl> + marshalling and unmarshalling needs to be done manually each time . Following <nl> + the example set by JNA itself , this approach is based on interfaces and using <nl> + a [ dynamic proxy ] ( https : / / docs . oracle . com / javase / 7 / docs / api / java / lang / reflect / Proxy . html ) and an [ InvocationHandler ] ( https : / / docs . oracle . com / javase / 7 / docs / api / java / lang / reflect / InvocationHandler . html ) <nl> + to centralize the marshalling and demarshalling . <nl> + <nl> + The support for the second approach is demonstrated in the ` com . sun . jna . platform . win32 . COM . util ` <nl> + package . <nl> + <nl> + Both approaches are demonstrated in the [ msoffice contrib project ] ( https : / / github . com / java - native - access / jna / tree / master / contrib / msoffice ) . <nl> + <nl> + A minimal VTable based call sample can be found in ` com . sun . jna . platform . win32 . COM . COMInvoker ` . <nl> + <nl> + <nl> * ` ITypeLib . java ` : a wrapper for a ` TypeLib ` definition <nl> * ` IUnknown . java ` : a wrapper for the ` IUnknown ` interface <nl> * COMException . java : used as exception <nl> @ @ - 46 , 3 + 63 , 32 @ @ e . g . ( part of the MSWord sample ) <nl> Typelib parsing <nl> - - - - - - - - - - - - - - - <nl> <nl> + For both above described approaches code generators exist . Included is a generator <nl> + for the first approach . Here is a sample call : <nl> + <nl> + ` ` ` <nl> + java - cp " dist / jna . jar ; dist / jna - platform . jar " com . sun . jna . platform . win32 . COM . tlb . TlbImp - tlb . id { 50A7E9B0 - 70EF - 11D1 - B75A - 00A0C90564FE } - tlb . major . version 1 - tlb . minor . version 0 - bind . mode dispId - output . dir outputdir <nl> + ` ` ` <nl> + <nl> + That call generates the bindings for the Microsoft Shell Controls . <nl> + <nl> + For the second approach a code generator exists out of tree : <nl> + <nl> + https : / / github . com / matthiasblaesing / TlbCodeGenerator <nl> + <nl> + That code generator is implemented as a maven plugin . <nl> + <nl> + That code generator was used to generate the bindings located in this repository : <nl> + <nl> + https : / / github . com / matthiasblaesing / COMTypelibraries <nl> + <nl> + There are bindings for : <nl> + <nl> + - Microsoft Excel <nl> + - Microsoft Outlook <nl> + - Microsoft Word <nl> + - Microsoft Visual Basic for Applications Extensibility ( vbide ) <nl> + - Microsoft Office 15 . 0 Object Library <nl> + - OLE Automation ( stdole ) <nl> + - Microsoft Internet Controls ( shdocvw ) <nl> + - Microsoft Windows Image Acquisition Library <nl> \ No newline at end of file <nl> diff - - git a / www / WindowsDevelopmentEnvironment . md b / www / WindowsDevelopmentEnvironment . md <nl> index 518ad96 . . b2c7017 100644 <nl> - - - a / www / WindowsDevelopmentEnvironment . md <nl> + + + b / www / WindowsDevelopmentEnvironment . md <nl> @ @ - 58 , 3 + 58 , 64 @ @ for each file that it ' s complaining about . <nl> # # # Building <nl> <nl> Type ` ant ` from the top to build the project . <nl> + <nl> + Recipe for building on windows <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + This is the contents of a note I made for myself to be able to build JNA on <nl> + windows . <nl> + <nl> + < pre > <nl> + 0 . Start - Point : A clean Windows 10 Installation with all patches as of 2016 - 06 - 10 <nl> + 1 . Install Windows SDK 7 . 1 : <nl> + <nl> + 	 Version registry key : <nl> + <nl> + 	 HKEY _ LOCAL _ MACHINE \ SOFTWARE \ Wow6432Node \ Microsoft \ NET Framework Setup \ NDP \ v4 \ Client <nl> + 	 HKEY _ LOCAL _ MACHINE \ SOFTWARE \ Wow6432Node \ Microsoft \ NET Framework Setup \ NDP \ v4 \ Full <nl> + <nl> + 	 Relevant attribute : VERSION <nl> + <nl> + 	 1 . Note down the values in the version value ( Windows 10 pure with patches as of 2016 - 06 - 10 : 4 . 6 . 01038 ) <nl> + 	 2 . Change ownership of the registry keys to your current user ( Open permissions for the key and choose " Extended " ) <nl> + 	 3 . Add full access righs for your current user to the permissions <nl> + 	 4 . Change both version attributes to 4 . 0 . 30319 <nl> + 	 5 . Download and Install Windows SDK 7 . 1 with defaults : http : / / www . microsoft . com / en - us / download / details . aspx ? id = 8279 <nl> + 	 6 . Restore Version from first item of this list <nl> + <nl> + <nl> + 2 . Install Oracle JDK 8u92 ( 64 bit ) <nl> + 3 . Install Cygwin ( https : / / cygwin . com / install . html ) <nl> + 	 - make <nl> + 	 - automake <nl> + 	 - automake1 . 15 <nl> + 	 - libtool <nl> + 	 - mingw64 - x86 _ 64 - gcc - g + + ( Version 5 . 3 . 0 - 1 ) <nl> + 	 - mingw64 - x86 _ 64 - gcc - core ( Version 5 . 3 . 0 - 1 ) <nl> + 	 - gcc - g + + <nl> + 	 - diffutils <nl> + 4 . Ensure ant , maven , cygwin are accessible from the PATH <nl> + 5 . Run <nl> + 	 C : \ Program Files \ Microsoft SDKs \ Windows \ v7 . 1 \ Bin \ SetEnv . Cmd / Release / x64 <nl> + inside a windows command prompt <nl> + 6 . Point JAVA _ HOME to the root of a 64 Bit JDK <nl> + 7 . Run native build <nl> + <nl> + <nl> + For 32bit : <nl> + <nl> + - Install : <nl> + - mingw64 - i686 - gcc - g + + ( Version 5 . 3 . 0 - 1 ) <nl> + - mingw64 - i686 - gcc - core ( Version 5 . 3 . 0 - 1 ) <nl> + - Modify the recipe : <nl> + - Step 5 : <nl> + C : \ Program Files \ Microsoft SDKs \ Windows \ v7 . 1 \ Bin \ SetEnv . Cmd / Release / x86 <nl> + - Step 6 : <nl> + Point JAVA _ HOME to the root of a 32 Bit JDK <nl> + <nl> + To build with Visual Studio 2015 : <nl> + - Instead of Step 5 start the build environments from start menu : <nl> + - VS2015 x86 Native Tools <nl> + - VS2015 x64 Native Tools <nl> + - Run steps 6 + 7 inside that environment <nl> + < / pre > <nl> \ No newline at end of file
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 277efb3 . . 33b917e 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 97 , 6 + 97 , 7 @ @ Bug Fixes <nl> * [ # 669 ] ( https : / / github . com / java - native - access / jna / pull / 669 ) : Ensure XSI - compliant strerror _ r is used , to prevent corrupted error messages on linux - [ @ DavidKeller ] ( https : / / github . com / DavidKeller ) . <nl> * [ # 697 ] ( https : / / github . com / java - native - access / jna / issues / 697 ) : Ensure disposed memory is removed from Memory # allocatedMemory map - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 731 ] ( https : / / github . com / java - native - access / jna / issues / 731 ) : Require mingw - w64 instead of mingw as the alternative to the MSVC build - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 747 ] ( https : / / github . com / java - native - access / jna / issues / 747 ) : - Call ` Native . toString ( ) ` in ` # getFileName ( ) ` and ` # getAlternateFileName ( ) ` in ` c . s . j . p . win32 . WinBase ` instead of custom NUL terminator logic - [ @ jhult ] ( https : / / github . com / jhult ) . <nl> <nl> Release 4 . 2 . 1 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> index 79f5bd0 . . ecb0e25 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> @ @ - 817 , 16 + 817 , 14 @ @ public interface WinBase extends WinDef , BaseTSD { <nl> * @ return String containing the file name <nl> * / <nl> public String getFileName ( ) { <nl> - String actualFileName = new String ( cFileName ) ; <nl> - return actualFileName . substring ( 0 , actualFileName . indexOf ( ' \ 0 ' ) ) ; <nl> + return Native . toString ( cFileName ) ; <nl> } <nl> <nl> / * * <nl> * @ return String containing the alternate file name <nl> * / <nl> public String getAlternateFileName ( ) { <nl> - String actualAlternateFileName = new String ( cAlternateFileName ) ; <nl> - return actualAlternateFileName . substring ( 0 , actualAlternateFileName . indexOf ( ' \ 0 ' ) ) ; <nl> + return Native . toString ( cAlternateFileName ) ; <nl> } <nl> } <nl>
diff - - git a / www / PublishingToMavenCentral . md b / www / PublishingToMavenCentral . md <nl> index 2119ff4 . . a037e36 100644 <nl> - - - a / www / PublishingToMavenCentral . md <nl> + + + b / www / PublishingToMavenCentral . md <nl> @ @ - 45 , 7 + 45 , 7 @ @ see : [ https : / / oss . sonatype . org / content / repositories / snapshots / net / java / dev / jna / ] <nl> To publish a development SNAPSHOT do the following : <nl> <nl> git checkout - - . <nl> - and clean <nl> + ant clean <nl> ant deploy <nl> <nl> Note : Unlike stable , unchanging releases , a SNAPSHOT may be re - published at any time ( and is typically deleted after a
diff - - git a / www / PublishingToMavenCentral . md b / www / PublishingToMavenCentral . md <nl> index 9c19a3e . . 2119ff4 100644 <nl> - - - a / www / PublishingToMavenCentral . md <nl> + + + b / www / PublishingToMavenCentral . md <nl> @ @ - 45 , 6 + 45 , 7 @ @ see : [ https : / / oss . sonatype . org / content / repositories / snapshots / net / java / dev / jna / ] <nl> To publish a development SNAPSHOT do the following : <nl> <nl> git checkout - - . <nl> + and clean <nl> ant deploy <nl> <nl> Note : Unlike stable , unchanging releases , a SNAPSHOT may be re - published at any time ( and is typically deleted after a
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index c058fb2 . . 26f432a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 2778 , 6 + 2778 , 7 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> this . AceSize = ( short ) ( super . fieldOffset ( " SidStart " ) + psid . getBytes ( ) . length ) ; <nl> this . psid = psid ; <nl> this . Mask = Mask ; <nl> + this . SidStart = psid . getPointer ( ) . getByteArray ( 0 , SidStart . length ) ; <nl> this . allocateMemory ( AceSize ) ; <nl> write ( ) ; <nl> } <nl> @ @ - 2792 , 6 + 2793 , 7 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> * / <nl> @ Override <nl> public void write ( ) { <nl> + super . write ( ) ; <nl> int offsetOfSID = super . fieldOffset ( " SidStart " ) ; <nl> int sizeOfSID = super . AceSize - super . fieldOffset ( " SidStart " ) ; <nl> if ( psid ! = null ) {
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index e992b50 . . 7870c9e 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 1605 , 35 + 1605 , 38 @ @ public class Kernel32Test extends TestCase { <nl> / / Restore to previous state ; 0x0001 is now " previous " <nl> assertEquals ( Kernel32 . INSTANCE . SetErrorMode ( previousMode ) , 0x0001 ) ; <nl> } <nl> - <nl> - / * * <nl> - * Test that a named function on win32 can be equally resolved by its ordinal <nl> - * value . <nl> - * <nl> - * From link . exe / dump / exports c : \ \ Windows \ \ System32 \ \ kernel32 . dll <nl> - * <nl> - * 746 2E9 0004FA20 GetTapeStatus <nl> - * 747 2EA 0002DB20 GetTempFileNameA <nl> - * 748 2EB 0002DB30 GetTempFileNameW <nl> - * 749 2EC 0002DB40 GetTempPathA <nl> - * 750 2ED 0002DB50 GetTempPathW <nl> - * 751 2EE 00026780 GetThreadContext <nl> - * <nl> - * The tested function is GetTempPathW which is mapped to the ordinal 750 . <nl> - * / <nl> - public void testGetProcAddress ( ) { <nl> - NativeLibrary kernel32Library = NativeLibrary . getInstance ( " kernel32 " ) ; <nl> - / / get module handle needed to resolve function pointer via GetProcAddress <nl> - HMODULE kernel32Module = Kernel32 . INSTANCE . GetModuleHandle ( " kernel32 " ) ; <nl> - <nl> - Function namedFunction = kernel32Library . getFunction ( " GetTempPathW " ) ; <nl> - long namedFunctionPointerValue = Pointer . nativeValue ( namedFunction ) ; <nl> - <nl> - Pointer ordinalFunction = Kernel32 . INSTANCE . GetProcAddress ( kernel32Module , 750 ) ; <nl> - long ordinalFunctionPointerValue = Pointer . nativeValue ( ordinalFunction ) ; <nl> - <nl> - assertEquals ( namedFunctionPointerValue , ordinalFunctionPointerValue ) ; <nl> - } <nl> + <nl> + / / Testcase is disabled , as kernel32 ordinal values are not stable . <nl> + / / a library with a stable function < - > ordinal value is needed . <nl> + / / <nl> + / / / * * <nl> + / / * Test that a named function on win32 can be equally resolved by its ordinal <nl> + / / * value . <nl> + / / * <nl> + / / * From link . exe / dump / exports c : \ \ Windows \ \ System32 \ \ kernel32 . dll <nl> + / / * <nl> + / / * 746 2E9 0004FA20 GetTapeStatus <nl> + / / * 747 2EA 0002DB20 GetTempFileNameA <nl> + / / * 748 2EB 0002DB30 GetTempFileNameW <nl> + / / * 749 2EC 0002DB40 GetTempPathA <nl> + / / * 750 2ED 0002DB50 GetTempPathW <nl> + / / * 751 2EE 00026780 GetThreadContext <nl> + / / * <nl> + / / * The tested function is GetTempPathW which is mapped to the ordinal 750 . <nl> + / / * / <nl> + / / public void testGetProcAddress ( ) { <nl> + / / NativeLibrary kernel32Library = NativeLibrary . getInstance ( " kernel32 " ) ; <nl> + / / / / get module handle needed to resolve function pointer via GetProcAddress <nl> + / / HMODULE kernel32Module = Kernel32 . INSTANCE . GetModuleHandle ( " kernel32 " ) ; <nl> + / / <nl> + / / Function namedFunction = kernel32Library . getFunction ( " GetTempPathW " ) ; <nl> + / / long namedFunctionPointerValue = Pointer . nativeValue ( namedFunction ) ; <nl> + / / <nl> + / / Pointer ordinalFunction = Kernel32 . INSTANCE . GetProcAddress ( kernel32Module , 750 ) ; <nl> + / / long ordinalFunctionPointerValue = Pointer . nativeValue ( ordinalFunction ) ; <nl> + / / <nl> + / / assertEquals ( namedFunctionPointerValue , ordinalFunctionPointerValue ) ; <nl> + / / } <nl> <nl> public void testSetThreadExecutionState ( ) { <nl> int originalExecutionState = Kernel32 . INSTANCE . SetThreadExecutionState (
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> index f6b30dc . . ecb23c5 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 2661 , 11 + 2661 , 10 @ @ public abstract class Advapi32Util { <nl> <nl> / * * <nl> * Construct and enable a set of privileges <nl> - * @ param privileges the name of the privileges in the form of SE _ * from Advapi32 . java <nl> - * @ enable if true , enable the privilege immediately . <nl> + * @ param privileges the names of the privileges in the form of SE _ * from Advapi32 . java <nl> * @ throws IllegalArgumentException <nl> * / <nl> - public Privilege ( String [ ] privileges , boolean enable ) throws IllegalArgumentException , Win32Exception { <nl> + public Privilege ( String . . . privileges ) throws IllegalArgumentException , Win32Exception { <nl> pLuids = new WinNT . LUID [ privileges . length ] ; <nl> int i = 0 ; <nl> for ( String p : privileges ) { <nl> @ @ - 2675 , 12 + 2674 , 10 @ @ public abstract class Advapi32Util { <nl> } <nl> i + + ; <nl> } <nl> - if ( enable ) <nl> - this . enable ( ) ; <nl> } <nl> <nl> / * * <nl> - * Calls { @ link # disable } to remove the privileges <nl> + * Calls disable ( ) to remove the privileges <nl> * @ see java . io . Closeable # close ( ) <nl> * / <nl> @ Override <nl> @ @ - 2695 , 10 + 2692 , 10 @ @ public abstract class Advapi32Util { <nl> * @ return pointer to self ( Privilege ) as a convenience for try with resources statements <nl> * @ throws Win32Exception <nl> * / <nl> - public void enable ( ) throws Win32Exception { <nl> + public Privilege enable ( ) throws Win32Exception { <nl> / / Ignore if already enabled . <nl> if ( privilegesEnabled ) <nl> - return ; <nl> + return this ; <nl> <nl> / / Get thread token <nl> final HANDLEByReference phThreadToken = new HANDLEByReference ( ) ; <nl> @ @ - 2740 , 6 + 2737 , 7 @ @ public abstract class Advapi32Util { <nl> phThreadToken . setValue ( null ) ; <nl> } <nl> } <nl> + return this ; <nl> } <nl> <nl> / * * <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> index 693e519 . . 6a60cde 100755 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> @ @ - 24 , 6 + 24 , 7 @ @ import java . util . TreeMap ; <nl> import com . sun . jna . platform . win32 . Advapi32Util . Account ; <nl> import com . sun . jna . platform . win32 . Advapi32Util . EventLogIterator ; <nl> import com . sun . jna . platform . win32 . Advapi32Util . EventLogRecord ; <nl> + import com . sun . jna . platform . win32 . Advapi32Util . Privilege ; <nl> import com . sun . jna . platform . win32 . LMAccess . USER _ INFO _ 1 ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLEByReference ; <nl> @ @ - 604 , 13 + 605 , 18 @ @ public class Advapi32UtilTest extends TestCase { <nl> * / <nl> public void testPrivilege ( ) { <nl> / / Test multiple known privileges <nl> - try ( Advapi32Util . Privilege p = new Advapi32Util . Privilege ( new String [ ] { WinNT . SE _ ASSIGNPRIMARYTOKEN _ NAME , WinNT . SE _ BACKUP _ NAME } , true ) ; ) { <nl> + Privilege privilege = new Privilege ( WinNT . SE _ ASSIGNPRIMARYTOKEN _ NAME , WinNT . SE _ BACKUP _ NAME ) ; <nl> + try { <nl> + privilege . enable ( ) ; <nl> / / Will throw if it fails p . enable ( ) fails <nl> } <nl> + finally { <nl> + privilege . close ( ) ; <nl> + } <nl> <nl> / / Test unknown privilege <nl> - try ( Advapi32Util . Privilege p = new Advapi32Util . Privilege ( new String [ ] { " NOT _ A _ PRIVILEGE " } , true ) ; ) { <nl> - / / Will throw if it fails p . enable ( ) fails <nl> + try { <nl> + privilege = new Privilege ( " NOT _ A _ PRIVILEGE " ) ; <nl> } <nl> catch ( IllegalArgumentException ex ) { <nl> / / Exception is expected <nl> @ @ - 618 , 6 + 624 , 9 @ @ public class Advapi32UtilTest extends TestCase { <nl> catch ( Exception ex ) { <nl> fail ( " Encountered unknown exception - " + ex . getMessage ( ) ) ; <nl> } <nl> + finally { <nl> + privilege . close ( ) ; <nl> + } <nl> } <nl> <nl> private File createTempFile ( ) throws Exception { <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index 18f9f8e . . b0ca34c 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 643 , 8 + 643 , 9 @ @ public class Kernel32Test extends TestCase { <nl> delLink . deleteOnExit ( ) ; <nl> <nl> / / Required for FSCTL _ SET _ REPARSE _ POINT <nl> - try ( Advapi32Util . Privilege restore = new Advapi32Util . Privilege ( new String [ ] { WinNT . SE _ RESTORE _ NAME } , true ) ) { <nl> - <nl> + Advapi32Util . Privilege restore = new Advapi32Util . Privilege ( WinNT . SE _ RESTORE _ NAME ) ; <nl> + try { <nl> + restore . enable ( ) ; <nl> HANDLE hFile = Kernel32 . INSTANCE . CreateFile ( link . toAbsolutePath ( ) . toString ( ) , <nl> WinNT . GENERIC _ READ | WinNT . FILE _ WRITE _ ATTRIBUTES | WinNT . FILE _ WRITE _ EA , <nl> WinNT . FILE _ SHARE _ READ | WinNT . FILE _ SHARE _ WRITE | WinNT . FILE _ SHARE _ DELETE , <nl> @ @ - 693 , 6 + 694 , 9 @ @ public class Kernel32Test extends TestCase { <nl> Kernel32Util . closeHandle ( hFile ) ; <nl> } <nl> } <nl> + finally { <nl> + restore . close ( ) ; <nl> + } <nl> } <nl> <nl> public void testCopyFile ( ) throws IOException {
diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index f17c675 . . 78ae1af 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 1712 , 7 + 1712 , 7 @ @ public abstract class Structure { <nl> setAutoWrite ( auto ) ; <nl> } <nl> <nl> - / * * Set whether the structure is read from native memory prior to <nl> + / * * Set whether the structure is read from native memory after <nl> * a native function call . <nl> * @ param auto whether to automatically synch from native memory . <nl> * / <nl> @ @ - 1720 , 7 + 1720 , 7 @ @ public abstract class Structure { <nl> this . autoRead = auto ; <nl> } <nl> <nl> - / * * Returns whether the structure is read from native memory prior to <nl> + / * * Returns whether the structure is read from native memory after <nl> * a native function call . <nl> * @ return whether automatic synch from native memory is enabled . <nl> * / <nl> @ @ - 1728 , 7 + 1728 , 7 @ @ public abstract class Structure { <nl> return this . autoRead ; <nl> } <nl> <nl> - / * * Set whether the structure is written to native memory after a native <nl> + / * * Set whether the structure is written to native memory prior to a native <nl> * function call . <nl> * @ param auto whether to automatically synch to native memory . <nl> * / <nl> @ @ - 1736 , 7 + 1736 , 7 @ @ public abstract class Structure { <nl> this . autoWrite = auto ; <nl> } <nl> <nl> - / * * Returns whether the structure is written to native memory after a native <nl> + / * * Returns whether the structure is written to native memory prior to a native <nl> * function call . <nl> * @ return whether automatic synch to native memory is enabled . <nl> * /
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 3fa61de . . 1b1dd87 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 63 , 6 + 63 , 8 @ @ Features <nl> * [ # 689 ] ( https : / / github . com / java - native - access / jna / pull / 689 ) : Add ` GetProcAddress ( HMODULE , int ) ` to ` com . sun . jna . platform . win32 . Kernel32 ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 723 ] ( https : / / github . com / java - native - access / jna / pull / 723 ) : Added ` com . sun . jna . platform . win32 . Wevtapi ` and ` com . sun . jna . platform . win32 . Winevt ` - [ @ sakamotodesu ] ( https : / / github . com / sakamotodesu ) . <nl> * [ # 720 ] ( https : / / github . com / java - native - access / jna / issues / 720 ) : Added ` SetThreadExecutionState ` to ` com . sun . jna . platform . win32 . Kernel32 ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 738 ] ( https : / / github . com / java - native - access / jna / pull / 738 ) : Added ` GetSecurityDescriptorOwner ` , ` SetSecurityDescriptorOwner ` , ` GetSecurityDescriptorGroup ` , ` SetSecurityDescriptorGroup ` , ` GetSecurityDescriptorControl ` , ` SetSecurityDescriptorControl ` , ` GetSecurityDescriptorDacl ` , ` SetSecurityDescriptorDacl ` , ` MakeSelfRelativeSD ` , ` MakeAbsoluteSD ` , ` EqualSid ` , ` InitializeSecurityDescriptor ` , ` InitializeAcl ` , ` AddAce ` , ` AddAccessAllowedAce ` , ` AddAccessAllowedAceEx ` , and ` GetAce ` to ` com . sun . jna . platform . win32 . Advapi32 - [ @ amarcionek ] ( https : / / github . com / amarcionek ) . <nl> + * [ # 738 ] ( https : / / github . com / java - native - access / jna / pull / 738 ) : Added ` RtlNtStatusToDosError ` to ` com . sun . jna . platform . win32 . NtDll - [ @ amarcionek ] ( https : / / github . com / amarcionek ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - -
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> index a43a2fa . . 6378a86 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> @ @ - 347 , 31 + 347 , 85 @ @ public interface Advapi32 extends StdCallLibrary { <nl> boolean SetSecurityDescriptorControl ( SECURITY _ DESCRIPTOR pSecurityDescriptor , int ControlBitsOfInterest , int ControlBitsToSet ) ; <nl> <nl> / * * <nl> - * The SetSecurityDescriptorDacl function sets information in a discretionary access control list ( DACL ) . <nl> - * If a DACL is already present in the security descriptor , the DACL is replaced . <nl> + * The GetSecurityDescriptorOwner function retrieves the owner information from a security descriptor . <nl> * @ param pSecurityDescriptor <nl> - * A pointer to the SECURITY _ DESCRIPTOR structure to which the function adds the DACL . This <nl> - * security descriptor must be in absolute format , meaning that its members must be pointers <nl> - * to other structures , rather than offsets to contiguous data . <nl> - * @ param bDaclPresent <nl> - * A flag that indicates the presence of a DACL in the security descriptor . If this parameter <nl> - * is TRUE , the function sets the SE _ DACL _ PRESENT flag in the SECURITY _ DESCRIPTOR _ CONTROL <nl> - * structure and uses the values in the pDacl and bDaclDefaulted parameters . If this parameter <nl> - * is FALSE , the function clears the SE _ DACL _ PRESENT flag , and pDacl and bDaclDefaulted are ignored . <nl> - * @ param pDacl <nl> - * A pointer to an ACL structure that specifies the DACL for the security descriptor . If this <nl> - * parameter is NULL , a NULL DACL is assigned to the security descriptor , which allows all access <nl> - * to the object . The DACL is referenced by , not copied into , the security descriptor . <nl> - * @ param bDaclDefaulted <nl> - * A flag that indicates the source of the DACL . If this flag is TRUE , the DACL has been retrieved <nl> - * by some default mechanism . If FALSE , the DACL has been explicitly specified by a user . The function <nl> - * stores this value in the SE _ DACL _ DEFAULTED flag of the SECURITY _ DESCRIPTOR _ CONTROL structure . If <nl> - * this parameter is not specified , the SE _ DACL _ DEFAULTED flag is cleared . <nl> + * A pointer to a SECURITY _ DESCRIPTOR structure whose owner information the function retrieves . <nl> + * @ param pOwner <nl> + * A pointer to a pointer to a security identifier ( SID ) that identifies the owner when the function returns . <nl> + * If the security descriptor does not contain an owner , the function sets the pointer pointed to by pOwner <nl> + * to NULL and ignores the remaining output parameter , lpbOwnerDefaulted . If the security descriptor contains an owner , <nl> + * the function sets the pointer pointed to by pOwner to the address of the security descriptor ' s owner SID <nl> + * and provides a valid value for the variable pointed to by lpbOwnerDefaulted . <nl> + * @ param lpbOwnerDefaulted <nl> + * A pointer to a flag that is set to the value of the SE _ OWNER _ DEFAULTED flag in the SECURITY _ DESCRIPTOR _ CONTROL <nl> + * structure when the function returns . If the value stored in the variable pointed to by the pOwner parameter is <nl> + * NULL , no value is set . <nl> * @ return If the function succeeds , the return value is nonzero . If the <nl> * function fails , the return value is zero . For extended error <nl> * information , call GetLastError . <nl> * / <nl> - boolean SetSecurityDescriptorDacl ( SECURITY _ DESCRIPTOR pSecurityDescriptor , boolean bDaclPresent , ACL pDacl , boolean bDaclDefaulted ) ; <nl> + boolean GetSecurityDescriptorOwner ( SECURITY _ DESCRIPTOR pSecurityDescriptor , PointerByReference pOwner , BOOLByReference lpbOwnerDefaulted ) ; <nl> + <nl> + / * * <nl> + * The SetSecurityDescriptorOwner function sets the owner information of an absolute - format security descriptor . It replaces <nl> + * any owner information already present in the security descriptor . <nl> + * @ param pSecurityDescriptor <nl> + * A pointer to the SECURITY _ DESCRIPTOR structure whose owner is set by this function . The function replaces any existing <nl> + * owner with the new owner . <nl> + * @ param pOwner <nl> + * A pointer to a SID structure for the security descriptor ' s new primary owner . The SID structure is referenced by , not <nl> + * copied into , the security descriptor . If this parameter is NULL , the function clears the security descriptor ' s owner <nl> + * information . This marks the security descriptor as having no owner . <nl> + * @ param bOwnerDefaulted <nl> + * Indicates whether the owner information is derived from a default mechanism . If this value is TRUE , it is default information . <nl> + * The function stores this value as the SE _ OWNER _ DEFAULTED flag in the SECURITY _ DESCRIPTOR _ CONTROL structure . If this parameter <nl> + * is zero , the SE _ OWNER _ DEFAULTED flag is cleared . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . For extended error <nl> + * information , call GetLastError . <nl> + * / <nl> + boolean SetSecurityDescriptorOwner ( SECURITY _ DESCRIPTOR pSecurityDescriptor , PSID pOwner , boolean bOwnerDefaulted ) ; <nl> + <nl> + / * * <nl> + * The GetSecurityDescriptorGroup function retrieves the primary group information from a security descriptor . <nl> + * @ param pSecurityDescriptor <nl> + * A pointer to a SECURITY _ DESCRIPTOR structure whose primary group information the function retrieves . <nl> + * @ param pGroup <nl> + * A pointer to a pointer to a security identifier ( SID ) that identifies the primary group when the function <nl> + * returns . If the security descriptor does not contain a primary group , the function sets the pointer <nl> + * pointed to by pGroup to NULL and ignores the remaining output parameter , lpbGroupDefaulted . If the <nl> + * security descriptor contains a primary group , the function sets the pointer pointed to by pGroup to the <nl> + * address of the security descriptor ' s group SID and provides a valid value for the variable pointed to <nl> + * by lpbGroupDefaulted . <nl> + * @ param lpbGroupDefaulted <nl> + * A pointer to a flag that is set to the value of the SE _ GROUP _ DEFAULTED flag in the <nl> + * SECURITY _ DESCRIPTOR _ CONTROL structure when the function returns . If the value stored in the variable <nl> + * pointed to by the pGroup parameter is NULL , no value is set . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . For extended error <nl> + * information , call GetLastError . <nl> + * / <nl> + boolean GetSecurityDescriptorGroup ( SECURITY _ DESCRIPTOR pSecurityDescriptor , PointerByReference pGroup , BOOLByReference lpbGroupDefaulted ) ; <nl> + <nl> + / * * <nl> + * The SetSecurityDescriptorGroup function sets the primary group information of an absolute - format security descriptor , replacing <nl> + * any primary group information already present in the security descriptor . <nl> + * @ param pSecurityDescriptor <nl> + * A pointer to the SECURITY _ DESCRIPTOR structure whose primary group is set by this function . The function replaces <nl> + * any existing primary group with the new primary group . <nl> + * @ param pGroup <nl> + * A pointer to a SID structure for the security descriptor ' s new primary group . The SID structure is referenced by , not copied <nl> + * into , the security descriptor . If this parameter is NULL , the function clears the security descriptor ' s primary group <nl> + * information . This marks the security descriptor as having no primary group . <nl> + * @ param bGroupDefaulted <nl> + * Indicates whether the primary group information was derived from a default mechanism . If this value is TRUE , it is default <nl> + * information , and the function stores this value as the SE _ GROUP _ DEFAULTED flag in the SECURITY _ DESCRIPTOR _ CONTROL structure . <nl> + * If this parameter is zero , the SE _ GROUP _ DEFAULTED flag is cleared . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . For extended error <nl> + * information , call GetLastError . <nl> + * / <nl> + boolean SetSecurityDescriptorGroup ( SECURITY _ DESCRIPTOR pSecurityDescriptor , PSID pGroup , boolean bGroupDefaulted ) ; <nl> <nl> / * * <nl> * The GetSecurityDescriptorDacl function retrieves a pointer to the discretionary access control list ( DACL ) in <nl> @ @ - 404 , 6 + 458 , 33 @ @ public interface Advapi32 extends StdCallLibrary { <nl> boolean GetSecurityDescriptorDacl ( SECURITY _ DESCRIPTOR pSecurityDescriptor , BOOLByReference bDaclPresent , PointerByReference pDacl , BOOLByReference bDaclDefaulted ) ; <nl> <nl> / * * <nl> + * The SetSecurityDescriptorDacl function sets information in a discretionary access control list ( DACL ) . <nl> + * If a DACL is already present in the security descriptor , the DACL is replaced . <nl> + * @ param pSecurityDescriptor <nl> + * A pointer to the SECURITY _ DESCRIPTOR structure to which the function adds the DACL . This <nl> + * security descriptor must be in absolute format , meaning that its members must be pointers <nl> + * to other structures , rather than offsets to contiguous data . <nl> + * @ param bDaclPresent <nl> + * A flag that indicates the presence of a DACL in the security descriptor . If this parameter <nl> + * is TRUE , the function sets the SE _ DACL _ PRESENT flag in the SECURITY _ DESCRIPTOR _ CONTROL <nl> + * structure and uses the values in the pDacl and bDaclDefaulted parameters . If this parameter <nl> + * is FALSE , the function clears the SE _ DACL _ PRESENT flag , and pDacl and bDaclDefaulted are ignored . <nl> + * @ param pDacl <nl> + * A pointer to an ACL structure that specifies the DACL for the security descriptor . If this <nl> + * parameter is NULL , a NULL DACL is assigned to the security descriptor , which allows all access <nl> + * to the object . The DACL is referenced by , not copied into , the security descriptor . <nl> + * @ param bDaclDefaulted <nl> + * A flag that indicates the source of the DACL . If this flag is TRUE , the DACL has been retrieved <nl> + * by some default mechanism . If FALSE , the DACL has been explicitly specified by a user . The function <nl> + * stores this value in the SE _ DACL _ DEFAULTED flag of the SECURITY _ DESCRIPTOR _ CONTROL structure . If <nl> + * this parameter is not specified , the SE _ DACL _ DEFAULTED flag is cleared . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . For extended error <nl> + * information , call GetLastError . <nl> + * / <nl> + boolean SetSecurityDescriptorDacl ( SECURITY _ DESCRIPTOR pSecurityDescriptor , boolean bDaclPresent , ACL pDacl , boolean bDaclDefaulted ) ; <nl> + <nl> + / * * <nl> * The InitializeAcl function initializes a new ACL structure . <nl> * @ param pAcl <nl> * A pointer to an ACL structure to be initialized by this function . <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> index 9df9a5c . . 8b59a3a 100755 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> @ @ - 712 , 6 + 712 , 44 @ @ public class Advapi32Test extends TestCase { <nl> assertTrue ( lpdwRevision . getValue ( ) = = WinNT . SECURITY _ DESCRIPTOR _ REVISION ) ; <nl> } <nl> <nl> + public void testSetGetSecurityDescriptorOwner ( ) { <nl> + SECURITY _ DESCRIPTOR sd = new SECURITY _ DESCRIPTOR ( 64 * 1024 ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . InitializeSecurityDescriptor ( sd , WinNT . SECURITY _ DESCRIPTOR _ REVISION ) ) ; <nl> + <nl> + PSID pSidPut = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + assertTrue ( " Failed to create well - known SID " , <nl> + Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSidPut , cbSid ) ) ; <nl> + <nl> + assertTrue ( Advapi32 . INSTANCE . SetSecurityDescriptorOwner ( sd , pSidPut , true ) ) ; <nl> + <nl> + BOOLByReference lpbOwnerDefaulted = new BOOLByReference ( ) ; <nl> + PointerByReference prSd = new PointerByReference ( new Memory ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . GetSecurityDescriptorOwner ( sd , prSd , lpbOwnerDefaulted ) ) ; <nl> + <nl> + PSID pSidGet = new PSID ( prSd . getValue ( ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . EqualSid ( pSidPut , pSidGet ) ) ; <nl> + } <nl> + <nl> + public void testSetGetSecurityDescriptorGroup ( ) { <nl> + SECURITY _ DESCRIPTOR sd = new SECURITY _ DESCRIPTOR ( 64 * 1024 ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . InitializeSecurityDescriptor ( sd , WinNT . SECURITY _ DESCRIPTOR _ REVISION ) ) ; <nl> + <nl> + PSID pSidPut = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + assertTrue ( " Failed to create well - known SID " , <nl> + Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSidPut , cbSid ) ) ; <nl> + <nl> + assertTrue ( Advapi32 . INSTANCE . SetSecurityDescriptorGroup ( sd , pSidPut , true ) ) ; <nl> + <nl> + BOOLByReference lpbOwnerDefaulted = new BOOLByReference ( ) ; <nl> + PointerByReference prSd = new PointerByReference ( new Memory ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . GetSecurityDescriptorGroup ( sd , prSd , lpbOwnerDefaulted ) ) ; <nl> + <nl> + PSID pSidGet = new PSID ( prSd . getValue ( ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . EqualSid ( pSidPut , pSidGet ) ) ; <nl> + } <nl> + <nl> public void testSetGetSecurityDescriptorDacl ( ) throws IOException { <nl> SECURITY _ DESCRIPTOR sd = new SECURITY _ DESCRIPTOR ( 64 * 1024 ) ; <nl> assertTrue ( Advapi32 . INSTANCE . InitializeSecurityDescriptor ( sd , WinNT . SECURITY _ DESCRIPTOR _ REVISION ) ) ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> index dd2c300 . . f18ea17 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> @ @ - 43 , 6 + 43 , 7 @ @ import com . sun . jna . platform . win32 . WinNT . PRIVILEGE _ SET ; <nl> import com . sun . jna . platform . win32 . WinNT . PSID ; <nl> import com . sun . jna . platform . win32 . WinNT . PSIDByReference ; <nl> import com . sun . jna . platform . win32 . WinNT . SECURITY _ DESCRIPTOR ; <nl> + import com . sun . jna . platform . win32 . WinNT . SECURITY _ DESCRIPTOR _ RELATIVE ; <nl> import com . sun . jna . platform . win32 . WinReg . HKEY ; <nl> import com . sun . jna . platform . win32 . WinReg . HKEYByReference ; <nl> import com . sun . jna . platform . win32 . Winsvc . ChangeServiceConfig2Info ; <nl> @ @ - 313 , 6 + 314 , 94 @ @ public interface Advapi32 extends StdCallLibrary { <nl> boolean InitializeSecurityDescriptor ( SECURITY _ DESCRIPTOR pSecurityDescriptor , int dwRevision ) ; <nl> <nl> / * * <nl> + * The GetSecurityDescriptorControl function retrieves a security descriptor control and revision information . <nl> + * @ param pSecurityDescriptor <nl> + * A pointer to a SECURITY _ DESCRIPTOR structure whose control and revision <nl> + * information the function retrieves . <nl> + * @ param pControl <nl> + * A pointer to a SECURITY _ DESCRIPTOR _ CONTROL structure that receives the security descriptor ' s <nl> + * control information . <nl> + * @ param lpdwRevision <nl> + * A pointer to a variable that receives the security descriptor ' s revision value . <nl> + * This value is always set , even when GetSecurityDescriptorControl returns an error . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . For extended error <nl> + * information , call GetLastError . <nl> + * / <nl> + boolean GetSecurityDescriptorControl ( SECURITY _ DESCRIPTOR pSecurityDescriptor , IntByReference pControl , IntByReference lpdwRevision ) ; <nl> + <nl> + / * * <nl> + * The SetSecurityDescriptorControl function sets the control bits of a security descriptor . The function can set only the control <nl> + * bits that relate to automatic inheritance of ACEs . To set the other control bits of a security descriptor , use the functions , <nl> + * such as SetSecurityDescriptorDacl , for modifying the components of a security descriptor . <nl> + * @ param pSecurityDescriptor <nl> + * A pointer to a SECURITY _ DESCRIPTOR structure whose control and revision information are set . <nl> + * @ param ControlBitsOfInterest <nl> + * A SECURITY _ DESCRIPTOR _ CONTROL mask that indicates the control bits to set . <nl> + * @ param ControlBitsToSet <nl> + * SECURITY _ DESCRIPTOR _ CONTROL mask that indicates the new values for the control bits specified by the ControlBitsOfInterest mask . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . For extended error <nl> + * information , call GetLastError . <nl> + * / <nl> + boolean SetSecurityDescriptorControl ( SECURITY _ DESCRIPTOR pSecurityDescriptor , int ControlBitsOfInterest , int ControlBitsToSet ) ; <nl> + <nl> + / * * <nl> + * The SetSecurityDescriptorDacl function sets information in a discretionary access control list ( DACL ) . <nl> + * If a DACL is already present in the security descriptor , the DACL is replaced . <nl> + * @ param pSecurityDescriptor <nl> + * A pointer to the SECURITY _ DESCRIPTOR structure to which the function adds the DACL . This <nl> + * security descriptor must be in absolute format , meaning that its members must be pointers <nl> + * to other structures , rather than offsets to contiguous data . <nl> + * @ param bDaclPresent <nl> + * A flag that indicates the presence of a DACL in the security descriptor . If this parameter <nl> + * is TRUE , the function sets the SE _ DACL _ PRESENT flag in the SECURITY _ DESCRIPTOR _ CONTROL <nl> + * structure and uses the values in the pDacl and bDaclDefaulted parameters . If this parameter <nl> + * is FALSE , the function clears the SE _ DACL _ PRESENT flag , and pDacl and bDaclDefaulted are ignored . <nl> + * @ param pAcl <nl> + * A pointer to an ACL structure that specifies the DACL for the security descriptor . If this <nl> + * parameter is NULL , a NULL DACL is assigned to the security descriptor , which allows all access <nl> + * to the object . The DACL is referenced by , not copied into , the security descriptor . <nl> + * @ param bDaclDefaulted <nl> + * A flag that indicates the source of the DACL . If this flag is TRUE , the DACL has been retrieved <nl> + * by some default mechanism . If FALSE , the DACL has been explicitly specified by a user . The function <nl> + * stores this value in the SE _ DACL _ DEFAULTED flag of the SECURITY _ DESCRIPTOR _ CONTROL structure . If <nl> + * this parameter is not specified , the SE _ DACL _ DEFAULTED flag is cleared . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . For extended error <nl> + * information , call GetLastError . <nl> + * / <nl> + boolean SetSecurityDescriptorDacl ( SECURITY _ DESCRIPTOR pSecurityDescriptor , boolean bDaclPresent , ACL pDacl , boolean bDaclDefaulted ) ; <nl> + <nl> + / * * <nl> + * The GetSecurityDescriptorDacl function retrieves a pointer to the discretionary access control list ( DACL ) in <nl> + * a specified security descriptor . <nl> + * @ param pSecurityDescriptor <nl> + * A pointer to the SECURITY _ DESCRIPTOR structure that contains the DACL . The function retrieves a pointer to it . <nl> + * @ param bDaclPresent <nl> + * A pointer to a value that indicates the presence of a DACL in the specified security descriptor . If <nl> + * lpbDaclPresent is TRUE , the security descriptor contains a DACL , and the remaining output parameters in this <nl> + * function receive valid values . If lpbDaclPresent is FALSE , the security descriptor does not contain a DACL , <nl> + * and the remaining output parameters do not receive valid values . A value of TRUE for lpbDaclPresent does not <nl> + * mean that pDacl is not NULL . That is , lpbDaclPresent can be TRUE while pDacl is NULL , meaning that a NULL <nl> + * DACL is in effect . A NULL DACL implicitly allows all access to an object and is not the same as an empty DACL . <nl> + * An empty DACL permits no access to an object . For information about creating a proper DACL , see Creating a DACL . <nl> + * @ param pDacl <nl> + * A pointer to a pointer to an access control list ( ACL ) . If a DACL exists , the function sets the pointer pointed <nl> + * to by pDacl to the address of the security descriptor ' s DACL . If a DACL does not exist , no value is stored . <nl> + * If the function stores a NULL value in the pointer pointed to by pDacl , the security descriptor has a NULL DACL . <nl> + * A NULL DACL implicitly allows all access to an object . <nl> + * If an application expects a non - NULL DACL but encounters a NULL DACL , the application should fail securely and <nl> + * not allow access . <nl> + * @ param bDaclDefaulted <nl> + * A pointer to a flag set to the value of the SE _ DACL _ DEFAULTED flag in the SECURITY _ DESCRIPTOR _ CONTROL structure <nl> + * if a DACL exists for the security descriptor . If this flag is TRUE , the DACL was retrieved by a default mechanism ; <nl> + * if FALSE , the DACL was explicitly specified by a user . <nl> + * @ return <nl> + * / <nl> + boolean GetSecurityDescriptorDacl ( SECURITY _ DESCRIPTOR pSecurityDescriptor , BOOLByReference bDaclPresent , PointerByReference pDacl , BOOLByReference bDaclDefaulted ) ; <nl> + <nl> + / * * <nl> * The InitializeAcl function initializes a new ACL structure . <nl> * @ param pAcl <nl> * A pointer to an ACL structure to be initialized by this function . <nl> @ @ - 2073 , 6 + 2162 , 85 @ @ public interface Advapi32 extends StdCallLibrary { <nl> boolean IsValidSecurityDescriptor ( Pointer ppSecurityDescriptor ) ; <nl> <nl> / * * <nl> + * A pointer to a SECURITY _ DESCRIPTOR structure in absolute format . The function creates a version of this security <nl> + * descriptor in self - relative format without modifying the original . <nl> + * @ param pAbsoluteSD <nl> + * A pointer to a SECURITY _ DESCRIPTOR structure in absolute format . The function creates a version of this <nl> + * security descriptor in self - relative format without modifying the original . <nl> + * @ param pSelfRelativeSD <nl> + * A pointer to a buffer the function fills with a security descriptor in self - relative format . <nl> + * @ param lpdwBufferLength <nl> + * A pointer to a variable specifying the size of the buffer pointed to by the pSelfRelativeSD parameter . <nl> + * If the buffer is not large enough for the security descriptor , the function fails and sets this variable <nl> + * to the minimum required size . <nl> + * @ return If the function succeeds , the function returns nonzero . If the function fails , it returns zero . To get <nl> + * extended error information , call GetLastError . Possible return codes include , but are not limited to , the following : <nl> + * ERROR _ INSUFFICIENT _ BUFFER - One or more of the buffers is too small . <nl> + * / <nl> + boolean MakeSelfRelativeSD ( SECURITY _ DESCRIPTOR pAbsoluteSD , <nl> + SECURITY _ DESCRIPTOR _ RELATIVE pSelfRelativeSD , <nl> + IntByReference lpdwBufferLength ) ; <nl> + <nl> + / * * <nl> + * The MakeAbsoluteSD function creates a security descriptor in absolute format by using a <nl> + * security descriptor in self - relative format as a template . <nl> + * @ param pSelfRelativeSD <nl> + * A pointer to a SECURITY _ DESCRIPTOR structure in self - relative format . The function creates an <nl> + * absolute - format version of this security descriptor without modifying the original security descriptor . <nl> + * @ param pAbsoluteSD <nl> + * A pointer to a buffer that the function fills with the main body of an absolute - format security <nl> + * descriptor . This information is formatted as a SECURITY _ DESCRIPTOR structure . <nl> + * @ param lpdwAbsoluteSDSize <nl> + * A pointer to a variable that specifies the size of the buffer pointed to by the pAbsoluteSD parameter . <nl> + * If the buffer is not large enough for the security descriptor , the function fails and sets this variable <nl> + * to the minimum required size . <nl> + * @ param pDacl <nl> + * A pointer to a buffer the function fills with the discretionary access control list ( DACL ) of the <nl> + * absolute - format security descriptor . The main body of the absolute - format security descriptor references <nl> + * this pointer . <nl> + * @ param lpdwDaclSize <nl> + * A pointer to a variable that specifies the size of the buffer pointed to by the pDacl parameter . If <nl> + * the buffer is not large enough for the access control list ( ACL ) , the function fails and sets this <nl> + * variable to the minimum required size . <nl> + * @ param pSacl <nl> + * A pointer to a buffer the function fills with the system access control list ( SACL ) of the absolute - format <nl> + * security descriptor . The main body of the absolute - format security descriptor references this pointer . <nl> + * @ param lpdwSaclSize <nl> + * A pointer to a variable that specifies the size of the buffer pointed to by the pSacl parameter . If the <nl> + * buffer is not large enough for the ACL , the function fails and sets this variable to the minimum required <nl> + * size . <nl> + * @ param pOwner <nl> + * A pointer to a buffer the function fills with the security identifier ( SID ) of the owner of the <nl> + * absolute - format security descriptor . The main body of the absolute - format security descriptor references <nl> + * this pointer . <nl> + * @ param lpdwOwnerSize <nl> + * A pointer to a variable that specifies the size of the buffer pointed to by the pOwner parameter . <nl> + * If the buffer is not large enough for the SID , the function fails and sets this variable to the minimum <nl> + * required size . <nl> + * @ param pPrimaryGroup <nl> + * A pointer to a buffer the function fills with the SID of the absolute - format security descriptor ' s <nl> + * primary group . The main body of the absolute - format security descriptor references this pointer . <nl> + * @ param lpdwPrimaryGroupSize <nl> + * A pointer to a variable that specifies the size of the buffer pointed to by the pPrimaryGroup parameter . <nl> + * If the buffer is not large enough for the SID , the function fails and sets this variable to the minimum <nl> + * required size . <nl> + * @ return If the function succeeds , the function returns nonzero . If the function fails , it returns zero . To get <nl> + * extended error information , call GetLastError . Possible return codes include , but are not limited to , the following : <nl> + * ERROR _ INSUFFICIENT _ BUFFER - One or more of the buffers is too small . <nl> + * / <nl> + boolean MakeAbsoluteSD ( SECURITY _ DESCRIPTOR _ RELATIVE pSelfRelativeSD , <nl> + SECURITY _ DESCRIPTOR pAbsoluteSD , <nl> + IntByReference lpdwAbsoluteSDSize , <nl> + ACL pDacl , <nl> + IntByReference lpdwDaclSize , <nl> + ACL pSacl , <nl> + IntByReference lpdwSaclSize , <nl> + PSID pOwner , <nl> + IntByReference lpdwOwnerSize , <nl> + PSID pPrimaryGroup , <nl> + IntByReference lpdwPrimaryGroupSize ) ; <nl> + <nl> + / * * <nl> * The IsValidAcl function validates an access control list ( ACL ) . <nl> * <nl> * @ param pAcl [ in ] <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index b09124c . . 51000ab 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 2486 , 6 + 2486 , 7 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> } <nl> <nl> public SECURITY _ DESCRIPTOR ( byte [ ] data ) { <nl> + super ( ) ; <nl> this . data = data ; <nl> useMemory ( new Memory ( data . length ) ) ; <nl> } <nl> @ @ - 2522 , 6 + 2523 , 12 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> public static class ACL extends Structure { <nl> public static final List < String > FIELDS = createFieldsOrder ( " AclRevision " , " Sbz1 " , " AclSize " , " AceCount " , " Sbz2 " ) ; <nl> <nl> + / * <nl> + * Maximum size chosen based on technet article : <nl> + * https : / / technet . microsoft . com / en - us / library / cc781716 . aspx <nl> + * / <nl> + public static int MAX _ ACL _ SIZE = 64 * 1024 ; <nl> + <nl> public byte AclRevision ; <nl> public byte Sbz1 ; <nl> public short AclSize ; <nl> @ @ - 2589 , 10 + 2596 , 10 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> public int Sacl ; <nl> public int Dacl ; <nl> <nl> - private ACL DACL ; <nl> private PSID OWNER ; <nl> private PSID GROUP ; <nl> private ACL SACL ; <nl> + private ACL DACL ; <nl> <nl> public SECURITY _ DESCRIPTOR _ RELATIVE ( ) { <nl> super ( ) ; <nl> @ @ - 2604 , 6 + 2611 , 10 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> setMembers ( ) ; <nl> } <nl> <nl> + public SECURITY _ DESCRIPTOR _ RELATIVE ( int length ) { <nl> + super ( new Memory ( length ) ) ; <nl> + } <nl> + <nl> public SECURITY _ DESCRIPTOR _ RELATIVE ( Pointer p ) { <nl> super ( p ) ; <nl> setMembers ( ) ; <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> index 78810d3 . . 9df9a5c 100755 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> @ @ - 50 , 12 + 50 , 12 @ @ import com . sun . jna . platform . win32 . WinBase . FE _ IMPORT _ FUNC ; <nl> import com . sun . jna . platform . win32 . WinBase . FILETIME ; <nl> import com . sun . jna . platform . win32 . WinBase . PROCESS _ INFORMATION ; <nl> import com . sun . jna . platform . win32 . WinBase . STARTUPINFO ; <nl> + import com . sun . jna . platform . win32 . WinDef . BOOL ; <nl> import com . sun . jna . platform . win32 . WinDef . BOOLByReference ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONG ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONGByReference ; <nl> - import com . sun . jna . platform . win32 . WinNT . ACCESS _ ACEStructure ; <nl> import com . sun . jna . platform . win32 . WinNT . ACCESS _ ALLOWED _ ACE ; <nl> import com . sun . jna . platform . win32 . WinNT . ACL ; <nl> import com . sun . jna . platform . win32 . WinNT . EVENTLOGRECORD ; <nl> @ @ - 66 , 6 + 66 , 7 @ @ import com . sun . jna . platform . win32 . WinNT . PRIVILEGE _ SET ; <nl> import com . sun . jna . platform . win32 . WinNT . PSID ; <nl> import com . sun . jna . platform . win32 . WinNT . PSIDByReference ; <nl> import com . sun . jna . platform . win32 . WinNT . SECURITY _ DESCRIPTOR ; <nl> + import com . sun . jna . platform . win32 . WinNT . SECURITY _ DESCRIPTOR _ RELATIVE ; <nl> import com . sun . jna . platform . win32 . WinNT . SECURITY _ IMPERSONATION _ LEVEL ; <nl> import com . sun . jna . platform . win32 . WinNT . SID _ AND _ ATTRIBUTES ; <nl> import com . sun . jna . platform . win32 . WinNT . SID _ NAME _ USE ; <nl> @ @ - 700 , 6 + 701 , 48 @ @ public class Advapi32Test extends TestCase { <nl> assertTrue ( Advapi32 . INSTANCE . InitializeSecurityDescriptor ( sd , WinNT . SECURITY _ DESCRIPTOR _ REVISION ) ) ; <nl> } <nl> <nl> + public void testSetGetSecurityDescriptorControl ( ) { <nl> + SECURITY _ DESCRIPTOR sd = new SECURITY _ DESCRIPTOR ( 64 * 1024 ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . InitializeSecurityDescriptor ( sd , WinNT . SECURITY _ DESCRIPTOR _ REVISION ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . SetSecurityDescriptorControl ( sd , WinNT . SE _ DACL _ PROTECTED , WinNT . SE _ DACL _ PROTECTED ) ) ; <nl> + IntByReference pControl = new IntByReference ( ) ; <nl> + IntByReference lpdwRevision = new IntByReference ( ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . GetSecurityDescriptorControl ( sd , pControl , lpdwRevision ) ) ; <nl> + assertTrue ( pControl . getValue ( ) = = WinNT . SE _ DACL _ PROTECTED ) ; <nl> + assertTrue ( lpdwRevision . getValue ( ) = = WinNT . SECURITY _ DESCRIPTOR _ REVISION ) ; <nl> + } <nl> + <nl> + public void testSetGetSecurityDescriptorDacl ( ) throws IOException { <nl> + SECURITY _ DESCRIPTOR sd = new SECURITY _ DESCRIPTOR ( 64 * 1024 ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . InitializeSecurityDescriptor ( sd , WinNT . SECURITY _ DESCRIPTOR _ REVISION ) ) ; <nl> + <nl> + ACL pAcl ; <nl> + int cbAcl = 0 ; <nl> + PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + assertTrue ( " Failed to create well - known SID " , <nl> + Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> + <nl> + int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> + cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; <nl> + cbAcl + = ( sidLength - DWORD . SIZE ) ; <nl> + cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> + pAcl = new ACL ( cbAcl ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAce ( pAcl , WinNT . ACL _ REVISION , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . SetSecurityDescriptorDacl ( sd , true , pAcl , false ) ) ; <nl> + BOOLByReference lpbDaclPresent = new BOOLByReference ( ) ; <nl> + BOOLByReference lpbDaclDefaulted = new BOOLByReference ( ) ; <nl> + PointerByReference pDacl = new PointerByReference ( ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . GetSecurityDescriptorDacl ( sd , lpbDaclPresent , pDacl , lpbDaclDefaulted ) ) ; <nl> + ACL pAclGet = new ACL ( pDacl . getValue ( ) ) ; <nl> + assertEquals ( new BOOL ( true ) , lpbDaclPresent . getValue ( ) ) ; <nl> + assertEquals ( new BOOL ( false ) , lpbDaclDefaulted . getValue ( ) ) ; <nl> + assertEquals ( 1 , pAclGet . AceCount ) ; <nl> + assertEquals ( WinNT . ACL _ REVISION , pAclGet . AclRevision ) ; <nl> + } <nl> + <nl> public void testInitializeAcl ( ) throws IOException { <nl> ACL pAcl ; <nl> int cbAcl = 0 ; <nl> @ @ - 1659 , 6 + 1702 , 60 @ @ public class Advapi32Test extends TestCase { <nl> } <nl> } <nl> <nl> + public void testMakeSelfRelativeSD ( ) { <nl> + SECURITY _ DESCRIPTOR absolute = new SECURITY _ DESCRIPTOR ( 64 * 1024 ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . InitializeSecurityDescriptor ( absolute , WinNT . SECURITY _ DESCRIPTOR _ REVISION ) ) ; <nl> + SECURITY _ DESCRIPTOR _ RELATIVE relative = new SECURITY _ DESCRIPTOR _ RELATIVE ( 64 * 1024 ) ; <nl> + IntByReference lpdwBufferLength = new IntByReference ( 64 * 1024 ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . MakeSelfRelativeSD ( absolute , relative , lpdwBufferLength ) ) ; <nl> + assertEquals ( WinNT . SECURITY _ DESCRIPTOR _ REVISION , relative . Revision ) ; <nl> + } <nl> + <nl> + public void testMakeAbsoluteSD ( ) throws Exception { <nl> + SECURITY _ DESCRIPTOR absolute = new SECURITY _ DESCRIPTOR ( 64 * 1024 ) ; <nl> + <nl> + / / Get a SD in self relative form <nl> + int infoType = OWNER _ SECURITY _ INFORMATION <nl> + | GROUP _ SECURITY _ INFORMATION <nl> + | DACL _ SECURITY _ INFORMATION ; <nl> + <nl> + PointerByReference relativeByReference = new PointerByReference ( ) ; <nl> + File file = createTempFile ( ) ; <nl> + try { <nl> + try { <nl> + assertEquals ( " GetNamedSecurityInfo ( " + file + " ) " , <nl> + Advapi32 . INSTANCE . GetNamedSecurityInfo ( <nl> + file . getAbsolutePath ( ) , <nl> + AccCtrl . SE _ OBJECT _ TYPE . SE _ FILE _ OBJECT , <nl> + infoType , <nl> + null , <nl> + null , <nl> + null , <nl> + null , <nl> + relativeByReference ) , 0 ) ; <nl> + <nl> + SECURITY _ DESCRIPTOR _ RELATIVE relative = new SECURITY _ DESCRIPTOR _ RELATIVE ( relativeByReference . getValue ( ) ) ; <nl> + <nl> + PSID pOwner = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + PSID pGroup = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + ACL pDacl = new ACL ( ACL . MAX _ ACL _ SIZE ) ; <nl> + ACL pSacl = new ACL ( ACL . MAX _ ACL _ SIZE ) ; <nl> + <nl> + IntByReference lpdwBufferLength = new IntByReference ( absolute . size ( ) ) ; <nl> + IntByReference lpdwDaclSize = new IntByReference ( ACL . MAX _ ACL _ SIZE ) ; <nl> + IntByReference lpdwSaclSize = new IntByReference ( ACL . MAX _ ACL _ SIZE ) ; <nl> + IntByReference lpdwOwnerSize = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + IntByReference lpdwPrimaryGroupSize = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + <nl> + assertTrue ( Advapi32 . INSTANCE . MakeAbsoluteSD ( relative , absolute , lpdwBufferLength , pDacl , lpdwDaclSize , pSacl , lpdwSaclSize , pOwner , lpdwOwnerSize , pGroup , lpdwPrimaryGroupSize ) ) ; <nl> + } finally { <nl> + file . delete ( ) ; <nl> + } <nl> + } finally { <nl> + Kernel32Util . freeLocalMemory ( relativeByReference . getValue ( ) ) ; <nl> + } <nl> + } <nl> + <nl> public void testMapGenericReadMask ( ) { <nl> final GENERIC _ MAPPING mapping = new GENERIC _ MAPPING ( ) ; <nl> mapping . genericRead = new DWORD ( FILE _ GENERIC _ READ ) ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> index fcbbad8 . . dd2c300 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> @ @ - 35 , 12 + 35 , 14 @ @ import com . sun . jna . platform . win32 . WinDef . BOOLByReference ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONG ; <nl> + import com . sun . jna . platform . win32 . WinNT . ACL ; <nl> import com . sun . jna . platform . win32 . WinNT . GENERIC _ MAPPING ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLEByReference ; <nl> import com . sun . jna . platform . win32 . WinNT . PRIVILEGE _ SET ; <nl> import com . sun . jna . platform . win32 . WinNT . PSID ; <nl> import com . sun . jna . platform . win32 . WinNT . PSIDByReference ; <nl> + import com . sun . jna . platform . win32 . WinNT . SECURITY _ DESCRIPTOR ; <nl> import com . sun . jna . platform . win32 . WinReg . HKEY ; <nl> import com . sun . jna . platform . win32 . WinReg . HKEYByReference ; <nl> import com . sun . jna . platform . win32 . Winsvc . ChangeServiceConfig2Info ; <nl> @ @ - 249 , 6 + 251 , 20 @ @ public interface Advapi32 extends StdCallLibrary { <nl> boolean IsValidSid ( PSID pSid ) ; <nl> <nl> / * * <nl> + * he EqualSid function tests two security identifier ( SID ) values for equality . <nl> + * Two SIDs must match exactly to be considered equal . <nl> + * @ param pSid1 <nl> + * A pointer to the first SID structure to compare . This structure is assumed to be valid . <nl> + * @ param pSid2 <nl> + * A pointer to the second SID structure to compare . This structure is assumed to be valid . <nl> + * @ return If the SID structures are equal , the return value is nonzero . <nl> + * If the SID structures are not equal , the return value is zero . To get extended error <nl> + * information , call GetLastError . <nl> + * If either SID structure is not valid , the return value is undefined . <nl> + * / <nl> + boolean EqualSid ( PSID pSid1 , PSID pSid2 ) ; <nl> + <nl> + / * * <nl> * Compares a SID to a well known SID and returns TRUE if they match . <nl> * <nl> * @ param pSid <nl> @ @ - 284 , 6 + 300 , 121 @ @ public interface Advapi32 extends StdCallLibrary { <nl> PSID pSid , IntByReference cbSid ) ; <nl> <nl> / * * <nl> + * The InitializeSecurityDescriptor function initializes a new security descriptor . <nl> + * @ param pSecurityDescriptor <nl> + * A pointer to a SECURITY _ DESCRIPTOR structure that the function initializes . <nl> + * @ param dwRevision <nl> + * The revision level to assign to the security descriptor . This parameter <nl> + * must be SECURITY _ DESCRIPTOR _ REVISION . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . For extended error <nl> + * information , call GetLastError . <nl> + * / <nl> + boolean InitializeSecurityDescriptor ( SECURITY _ DESCRIPTOR pSecurityDescriptor , int dwRevision ) ; <nl> + <nl> + / * * <nl> + * The InitializeAcl function initializes a new ACL structure . <nl> + * @ param pAcl <nl> + * A pointer to an ACL structure to be initialized by this function . <nl> + * Allocate memory for pAcl before calling this function . <nl> + * @ param nAclLength <nl> + * The length , in bytes , of the buffer pointed to by the pAcl parameter . This value <nl> + * must be large enough to contain the ACL header and all of the access control <nl> + * entries ( ACEs ) to be stored in the ACL . In addition , this value must be <nl> + * DWORD - aligned . For more information about calculating the size of an ACL , <nl> + * see Remarks . <nl> + * @ param dwAclRevision <nl> + * The revision level of the ACL structure being created . This value can be ACL _ REVISION <nl> + * or ACL _ REVISION _ DS . Use ACL _ REVISION _ DS if the access control list ( ACL ) supports <nl> + * object - specific ACEs . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . For extended error <nl> + * information , call GetLastError . <nl> + * / <nl> + boolean InitializeAcl ( ACL pAcl , int nAclLength , int dwAclRevision ) ; <nl> + <nl> + / * * <nl> + * The AddAce function adds one or more access control entries ( ACEs ) to a specified access control list ( ACL ) . <nl> + * @ param pAcl <nl> + * A pointer to an ACL . This function adds an ACE to this ACL . <nl> + * @ param dwAceRevision <nl> + * Specifies the revision level of the ACL being modified . This value can be ACL _ REVISION or <nl> + * ACL _ REVISION _ DS . Use ACL _ REVISION _ DS if the ACL contains object - specific ACEs . This value <nl> + * must be compatible with the AceType field of all ACEs in pAceList . Otherwise , the function <nl> + * will fail and set the last error to ERROR _ INVALID _ PARAMETER . <nl> + * @ param dwStartingAceIndex <nl> + * Specifies the position in the ACL ' s list of ACEs at which to add new ACEs . A value of zero <nl> + * inserts the ACEs at the beginning of the list . A value of MAXDWORD appends the ACEs to the end <nl> + * of the list . <nl> + * @ param pAceList <nl> + * A pointer to a list of one or more ACEs to be added to the specified ACL . The ACEs in the list <nl> + * must be stored contiguously . <nl> + * @ param nAceListLength <nl> + * Specifies the size , in bytes , of the input buffer pointed to by the pAceList parameter . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . For extended error <nl> + * information , call GetLastError . <nl> + * / <nl> + boolean AddAce ( ACL pAcl , int dwAceRevision , int dwStartingAceIndex , Pointer pAceList , int nAceListLength ) ; <nl> + <nl> + / * * <nl> + * The AddAce function adds one or more access control entries ( ACEs ) to a specified access control list ( ACL ) . <nl> + * @ param pAcl <nl> + * A pointer to an ACL . This function adds an access - allowed ACE to the end of this ACL . <nl> + * The ACE is in the form of an ACCESS _ ALLOWED _ ACE structure . <nl> + * @ param dwAceRevision <nl> + * Specifies the revision level of the ACL being modified . This value can be ACL _ REVISION or <nl> + * ACL _ REVISION _ DS . Use ACL _ REVISION _ DS if the ACL contains object - specific ACEs . <nl> + * @ param AccessMask <nl> + * Specifies the mask of access rights to be granted to the specified SID . <nl> + * @ param pSid <nl> + * A pointer to the SID representing a user , group , or logon account being granted access . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . For extended error <nl> + * information , call GetLastError . <nl> + * / <nl> + boolean AddAccessAllowedAce ( ACL pAcl , int dwAceRevision , int AccessMask , PSID pSid ) ; <nl> + <nl> + / * * <nl> + * The AddAce function adds one or more access control entries ( ACEs ) to a specified access control list ( ACL ) . <nl> + * @ param pAcl <nl> + * A pointer to an ACL . This function adds an access - allowed ACE to the end of this ACL . <nl> + * The ACE is in the form of an ACCESS _ ALLOWED _ ACE structure . <nl> + * @ param dwAceRevision <nl> + * Specifies the revision level of the ACL being modified . This value can be ACL _ REVISION or <nl> + * ACL _ REVISION _ DS . Use ACL _ REVISION _ DS if the ACL contains object - specific ACEs . <nl> + * @ param AceFlags <nl> + * A set of bit flags that control ACE inheritance . The function sets these flags in the AceFlags <nl> + * member of the ACE _ HEADER structure of the new ACE . This parameter can be a combination <nl> + * of the following values : CONTAINER _ INHERIT _ ACE , INHERIT _ ONLY _ ACE , INHERITED _ ACE , <nl> + * NO _ PROPAGATE _ INHERIT _ ACE , and OBJECT _ INHERIT _ ACE <nl> + * @ param AccessMask <nl> + * Specifies the mask of access rights to be granted to the specified SID . <nl> + * @ param pSid <nl> + * A pointer to the SID representing a user , group , or logon account being granted access . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . For extended error <nl> + * information , call GetLastError . <nl> + * / <nl> + boolean AddAccessAllowedAceEx ( ACL pAcl , int dwAceRevision , int AceFlags , int AccessMask , PSID pSid ) ; <nl> + <nl> + / * * <nl> + * The GetAce function obtains a pointer to an access control entry ( ACE ) in an access <nl> + * control list ( ACL ) . <nl> + * @ param pAcl <nl> + * A pointer to an ACL that contains the ACE to be retrieved . <nl> + * @ param dwAceIndex <nl> + * The index of the ACE to be retrieved . A value of zero corresponds to the first ACE in <nl> + * the ACL , a value of one to the second ACE , and so on . <nl> + * @ param pAce <nl> + * A pointer to a pointer that the function sets to the address of the ACE . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . For extended error <nl> + * information , call GetLastError . <nl> + * / <nl> + boolean GetAce ( ACL pAcl , int dwAceIndex , PointerByReference pAce ) ; <nl> + <nl> + / * * <nl> * The LogonUser function attempts to log a user on to the local computer . <nl> * The local computer is the computer from which LogonUser was called . You <nl> * cannot use LogonUser to log on to a remote computer . You specify the user <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> index 7715451 . . ff317e6 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 47 , 7 + 47 , 9 @ @ import static com . sun . jna . platform . win32 . WinNT . TOKEN _ QUERY ; <nl> import static com . sun . jna . platform . win32 . WinNT . UNPROTECTED _ DACL _ SECURITY _ INFORMATION ; <nl> import static com . sun . jna . platform . win32 . WinNT . UNPROTECTED _ SACL _ SECURITY _ INFORMATION ; <nl> <nl> + import java . io . ByteArrayInputStream ; <nl> import java . io . ByteArrayOutputStream ; <nl> + import java . io . DataInputStream ; <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> import java . util . ArrayList ; <nl> @ @ - 69 , 6 + 71 , 7 @ @ import com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONG ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONGByReference ; <nl> import com . sun . jna . platform . win32 . WinNT . ACCESS _ ACEStructure ; <nl> + import com . sun . jna . platform . win32 . WinNT . ACCESS _ ALLOWED _ ACE ; <nl> import com . sun . jna . platform . win32 . WinNT . ACL ; <nl> import com . sun . jna . platform . win32 . WinNT . EVENTLOGRECORD ; <nl> import com . sun . jna . platform . win32 . WinNT . GENERIC _ MAPPING ; <nl> @ @ - 377 , 6 + 380 , 38 @ @ public abstract class Advapi32Util { <nl> 	 	 return Advapi32 . INSTANCE . IsWellKnownSid ( pSID , wellKnownSidType ) ; <nl> 	 } <nl> <nl> + / * * <nl> + * Align cbAcl on a DWORD <nl> + * @ param cbAcl size to align <nl> + * @ return the aligned size <nl> + * / <nl> + public static int alignOnDWORD ( int cbAcl ) { <nl> + return ( cbAcl + ( DWORD . SIZE - 1 ) ) & 0xfffffffc ; <nl> + } <nl> + <nl> + 	 / * * <nl> + * Helper function to calculate the size of an ACE for a given PSID size <nl> + * @ param pSid the PSID <nl> + * @ return size of the ACE <nl> + * / <nl> + public static int getAceSize ( int sidLength ) { <nl> + return Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) <nl> + + sidLength <nl> + - DWORD . SIZE ; <nl> + } <nl> + <nl> + / * * <nl> + * Get the first 4 bytes of the PSID for a SidStart <nl> + * @ param psid the PSID <nl> + * @ return the SidStart <nl> + * @ throws IOException <nl> + * / <nl> + public static int getSidStart ( PSID psid ) throws IOException { <nl> + byte [ ] sidStart = psid . getBytes ( ) ; <nl> + DataInputStream dis = new DataInputStream ( new ByteArrayInputStream ( sidStart ) ) ; <nl> + return dis . readInt ( ) ; <nl> + } <nl> + <nl> 	 / * * <nl> 	 * Get an account name from a string SID on the local machine . <nl> 	 * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index 8290369 . . b09124c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 50 , 6 + 50 , 15 @ @ import com . sun . jna . win32 . StdCallLibrary . StdCallCallback ; <nl> @ SuppressWarnings ( " serial " ) <nl> public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> <nl> + int MINCHAR = 0x80 ; <nl> + int MAXCHAR = 0x7f ; <nl> + int MINSHORT = 0x8000 ; <nl> + int MAXSHORT = 0x7fff ; <nl> + int MINLONG = 0x80000000 ; <nl> + int MAXLONG = 0x7fffffff ; <nl> + int MAXBYTE = 0xff ; <nl> + int MAXWORD = 0xffff ; <nl> + int MAXDWORD = 0xffffffff ; <nl> / / <nl> / / The following are masks for the predefined standard access types <nl> / / <nl> @ @ - 2462 , 6 + 2471 , 7 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> int SE _ RM _ CONTROL _ VALID = 0x00004000 ; <nl> int SE _ SELF _ RELATIVE = 0x00008000 ; <nl> <nl> + int SECURITY _ DESCRIPTOR _ REVISION = 0x00000001 ; <nl> <nl> public static class SECURITY _ DESCRIPTOR extends Structure { <nl> public static class ByReference extends SECURITY _ DESCRIPTOR implements <nl> @ @ - 2480 , 6 + 2490 , 12 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> useMemory ( new Memory ( data . length ) ) ; <nl> } <nl> <nl> + public SECURITY _ DESCRIPTOR ( int size ) { <nl> + super ( ) ; <nl> + useMemory ( new Memory ( size ) ) ; <nl> + data = new byte [ size ] ; <nl> + } <nl> + <nl> public SECURITY _ DESCRIPTOR ( Pointer memory ) { <nl> super ( memory ) ; <nl> read ( ) ; <nl> @ @ - 2491 , 6 + 2507 , 18 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> } <nl> } <nl> <nl> + int ACL _ REVISION = 2 ; <nl> + int ACL _ REVISION _ DS = 4 ; <nl> + <nl> + / / This is the history of ACL revisions . Add a new one whenever <nl> + / / ACL _ REVISION is updated <nl> + int ACL _ REVISION1 = 1 ; <nl> + int ACL _ REVISION2 = 2 ; <nl> + int ACL _ REVISION3 = 3 ; <nl> + int ACL _ REVISION4 = 4 ; <nl> + int MIN _ ACL _ REVISION = ACL _ REVISION2 ; <nl> + int MAX _ ACL _ REVISION = ACL _ REVISION4 ; <nl> + <nl> public static class ACL extends Structure { <nl> public static final List < String > FIELDS = createFieldsOrder ( " AclRevision " , " Sbz1 " , " AclSize " , " AceCount " , " Sbz2 " ) ; <nl> <nl> @ @ - 2506 , 6 + 2534 , 11 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> super ( ) ; <nl> } <nl> <nl> + public ACL ( int size ) { <nl> + super ( ) ; <nl> + useMemory ( new Memory ( size ) ) ; <nl> + } <nl> + <nl> public ACL ( Pointer pointer ) { <nl> super ( pointer ) ; <nl> read ( ) ; <nl> @ @ - 2631 , 6 + 2664 , 15 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> super ( p ) ; <nl> } <nl> <nl> + public ACEStructure ( byte AceType , byte AceFlags , short AceSize , PSID psid ) { <nl> + super ( ) ; <nl> + this . AceType = AceType ; <nl> + this . AceFlags = AceFlags ; <nl> + this . AceSize = AceSize ; <nl> + this . psid = psid ; <nl> + write ( ) ; <nl> + } <nl> + <nl> public String getSidString ( ) { <nl> return Advapi32Util . convertSidToStringSid ( psid ) ; <nl> } <nl> @ @ - 2686 , 16 + 2728 , 49 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> super ( ) ; <nl> } <nl> <nl> + public ACCESS _ ACEStructure ( int Mask , int SidStart , byte AceType , byte AceFlags , short AceSize , PSID psid ) { <nl> + super ( ) ; <nl> + this . allocateMemory ( AceSize ) ; <nl> + this . AceType = AceType ; <nl> + this . AceFlags = AceFlags ; <nl> + this . AceSize = AceSize ; <nl> + this . psid = psid ; <nl> + this . Mask = Mask ; <nl> + this . SidStart = new DWORD ( SidStart ) ; <nl> + write ( ) ; <nl> + } <nl> + <nl> public ACCESS _ ACEStructure ( Pointer p ) { <nl> super ( p ) ; <nl> read ( ) ; <nl> - / / AceSize - size of public members of the structure + size of DWORD <nl> - / / ( SidStart ) <nl> + / / Check for AceSize being zero , can happen on empty memory <nl> + if ( AceSize ! = 0 ) { <nl> int sizeOfSID = super . AceSize - size ( ) + 4 ; <nl> - / / ACE _ HEADER + size of int ( Mask ) <nl> + / / ACE _ HEADER + size of int ( Mask ) <nl> + int offsetOfSID = 4 + 4 ; <nl> + byte [ ] data = p . getByteArray ( offsetOfSID , sizeOfSID ) ; <nl> + psid = new PSID ( data ) ; <nl> + } <nl> + else { <nl> + psid = null ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Write override due to psid not being a managed field <nl> + * / <nl> + @ Override <nl> + public void write ( ) { <nl> + int sizeOfSID = super . AceSize - 8 ; <nl> int offsetOfSID = 4 + 4 ; <nl> - byte [ ] data = p . getByteArray ( offsetOfSID , sizeOfSID ) ; <nl> - psid = new PSID ( data ) ; <nl> + super . writeField ( " AceType " ) ; <nl> + super . writeField ( " AceFlags " ) ; <nl> + super . writeField ( " AceSize " ) ; <nl> + super . writeField ( " Mask " ) ; <nl> + / / Get bytes from the PSID <nl> + byte [ ] psidWrite = psid . getPointer ( ) . getByteArray ( 0 , sizeOfSID ) ; <nl> + / / Write those bytes to native memory <nl> + super . getPointer ( ) . write ( offsetOfSID , psidWrite , 0 , sizeOfSID ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 2713 , 6 + 2788 , 10 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> public ACCESS _ ALLOWED _ ACE ( Pointer p ) { <nl> super ( p ) ; <nl> } <nl> + <nl> + public ACCESS _ ALLOWED _ ACE ( int Mask , int SidStart , byte AceFlags , short AceSize , PSID psid ) { <nl> + super ( Mask , SidStart , ACCESS _ ALLOWED _ ACE _ TYPE , AceFlags , AceSize , psid ) ; <nl> + } <nl> } <nl> <nl> / * Access denied ACE * / <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> index beaeef3 . . 78810d3 100755 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> @ @ - 55 , 6 + 55 , 9 @ @ import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONG ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONGByReference ; <nl> + import com . sun . jna . platform . win32 . WinNT . ACCESS _ ACEStructure ; <nl> + import com . sun . jna . platform . win32 . WinNT . ACCESS _ ALLOWED _ ACE ; <nl> + import com . sun . jna . platform . win32 . WinNT . ACL ; <nl> import com . sun . jna . platform . win32 . WinNT . EVENTLOGRECORD ; <nl> import com . sun . jna . platform . win32 . WinNT . GENERIC _ MAPPING ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> @ @ - 62 , 6 + 65 , 7 @ @ import com . sun . jna . platform . win32 . WinNT . HANDLEByReference ; <nl> import com . sun . jna . platform . win32 . WinNT . PRIVILEGE _ SET ; <nl> import com . sun . jna . platform . win32 . WinNT . PSID ; <nl> import com . sun . jna . platform . win32 . WinNT . PSIDByReference ; <nl> + import com . sun . jna . platform . win32 . WinNT . SECURITY _ DESCRIPTOR ; <nl> import com . sun . jna . platform . win32 . WinNT . SECURITY _ IMPERSONATION _ LEVEL ; <nl> import com . sun . jna . platform . win32 . WinNT . SID _ AND _ ATTRIBUTES ; <nl> import com . sun . jna . platform . win32 . WinNT . SID _ NAME _ USE ; <nl> @ @ - 149 , 6 + 153 , 23 @ @ public class Advapi32Test extends TestCase { <nl> 	 } <nl> } <nl> <nl> + public void testEqualSid ( ) { <nl> + String sidString = EVERYONE ; <nl> + PSIDByReference sid1 = new PSIDByReference ( ) ; <nl> + PSIDByReference sid2 = new PSIDByReference ( ) ; <nl> + assertTrue ( " SID1 conversion failed " , Advapi32 . INSTANCE . ConvertStringSidToSid ( sidString , sid1 ) ) ; <nl> + assertTrue ( " SID2 conversion failed " , Advapi32 . INSTANCE . ConvertStringSidToSid ( sidString , sid2 ) ) ; <nl> + <nl> + try { <nl> + assertTrue ( " Converted SID1 not valid " , Advapi32 . INSTANCE . IsValidSid ( sid1 . getValue ( ) ) ) ; <nl> + assertTrue ( " Converted SID2 not valid " , Advapi32 . INSTANCE . IsValidSid ( sid2 . getValue ( ) ) ) ; <nl> + assertTrue ( " Invalid sid " , Advapi32 . INSTANCE . EqualSid ( sid1 . getValue ( ) , sid2 . getValue ( ) ) ) ; <nl> + } finally { <nl> + Kernel32Util . freeLocalMemory ( sid1 . getValue ( ) . getPointer ( ) ) ; <nl> + Kernel32Util . freeLocalMemory ( sid2 . getValue ( ) . getPointer ( ) ) ; <nl> + } <nl> + } <nl> + <nl> public void testGetSidLength ( ) { <nl> 	 String sidString = EVERYONE ; <nl> 	 PSIDByReference sid = new PSIDByReference ( ) ; <nl> @ @ - 674 , 6 + 695 , 131 @ @ public class Advapi32Test extends TestCase { <nl> 	 } <nl> } <nl> <nl> + public void testInitializeSecurityDescriptor ( ) { <nl> + SECURITY _ DESCRIPTOR sd = new SECURITY _ DESCRIPTOR ( 64 * 1024 ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . InitializeSecurityDescriptor ( sd , WinNT . SECURITY _ DESCRIPTOR _ REVISION ) ) ; <nl> + } <nl> + <nl> + public void testInitializeAcl ( ) throws IOException { <nl> + ACL pAcl ; <nl> + int cbAcl = 0 ; <nl> + PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + assertTrue ( " Failed to create well - known SID " , <nl> + Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> + <nl> + int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> + cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; <nl> + cbAcl + = ( sidLength - DWORD . SIZE ) ; <nl> + cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> + pAcl = new ACL ( cbAcl ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> + } <nl> + <nl> + public void testGetAce ( ) throws IOException { <nl> + ACL pAcl ; <nl> + int cbAcl = 0 ; <nl> + PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + assertTrue ( " Failed to create well - known SID " , <nl> + Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> + <nl> + int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> + cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; <nl> + cbAcl + = ( sidLength - DWORD . SIZE ) ; <nl> + cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> + pAcl = new ACL ( cbAcl ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAce ( pAcl , WinNT . ACL _ REVISION , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; <nl> + <nl> + PointerByReference pAce = new PointerByReference ( new Memory ( 16 ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . GetAce ( pAcl , 0 , pAce ) ) ; <nl> + ACCESS _ ALLOWED _ ACE pAceGet = new ACCESS _ ALLOWED _ ACE ( pAce . getValue ( ) ) ; <nl> + assertTrue ( pAceGet . Mask = = WinNT . STANDARD _ RIGHTS _ ALL ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . EqualSid ( pAceGet . psid , pSid ) ) ; <nl> + } <nl> + <nl> + public void testAddAce ( ) throws IOException { <nl> + ACL pAcl ; <nl> + int cbAcl = 0 ; <nl> + PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + assertTrue ( " Failed to create well - known SID " , <nl> + Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> + <nl> + int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> + cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; <nl> + cbAcl + = ( sidLength - DWORD . SIZE ) ; <nl> + cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> + pAcl = new ACL ( cbAcl ) ; <nl> + int cbAce = Advapi32Util . getAceSize ( sidLength ) ; <nl> + ACCESS _ ALLOWED _ ACE pace = new ACCESS _ ALLOWED _ ACE ( WinNT . STANDARD _ RIGHTS _ ALL , <nl> + Advapi32Util . getSidStart ( pSid ) , <nl> + WinNT . INHERITED _ ACE , <nl> + ( short ) cbAce , <nl> + pSid ) ; <nl> + <nl> + assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . AddAce ( pAcl , WinNT . ACL _ REVISION , WinNT . MAXDWORD , pace . getPointer ( ) , cbAce ) ) ; <nl> + <nl> + PointerByReference pAce = new PointerByReference ( new Memory ( 16 ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . GetAce ( pAcl , 0 , pAce ) ) ; <nl> + ACCESS _ ALLOWED _ ACE pAceGet = new ACCESS _ ALLOWED _ ACE ( pAce . getValue ( ) ) ; <nl> + assertTrue ( pAceGet . Mask = = WinNT . STANDARD _ RIGHTS _ ALL ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . EqualSid ( pAceGet . psid , pSid ) ) ; <nl> + } <nl> + <nl> + public void testAddAccessAllowedAce ( ) throws IOException { <nl> + ACL pAcl ; <nl> + int cbAcl = 0 ; <nl> + PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + assertTrue ( " Failed to create well - known SID " , <nl> + Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> + <nl> + int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> + cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; <nl> + cbAcl + = ( sidLength - DWORD . SIZE ) ; <nl> + cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> + pAcl = new ACL ( cbAcl ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAce ( pAcl , WinNT . ACL _ REVISION , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; <nl> + <nl> + PointerByReference pAce = new PointerByReference ( new Memory ( 16 ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . GetAce ( pAcl , 0 , pAce ) ) ; <nl> + ACCESS _ ALLOWED _ ACE pAceGet = new ACCESS _ ALLOWED _ ACE ( pAce . getValue ( ) ) ; <nl> + assertTrue ( pAceGet . Mask = = WinNT . STANDARD _ RIGHTS _ ALL ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . EqualSid ( pAceGet . psid , pSid ) ) ; <nl> + } <nl> + <nl> + public void testAddAccessAllowedAceEx ( ) throws IOException { <nl> + ACL pAcl ; <nl> + int cbAcl = 0 ; <nl> + PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> + assertTrue ( " Failed to create well - known SID " , <nl> + Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> + <nl> + int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> + cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; <nl> + cbAcl + = ( sidLength - DWORD . SIZE ) ; <nl> + cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> + pAcl = new ACL ( cbAcl ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAceEx ( pAcl , WinNT . ACL _ REVISION , WinNT . INHERIT _ ONLY _ ACE , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; <nl> + <nl> + PointerByReference pAce = new PointerByReference ( new Memory ( 16 ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . GetAce ( pAcl , 0 , pAce ) ) ; <nl> + ACCESS _ ALLOWED _ ACE pAceGet = new ACCESS _ ALLOWED _ ACE ( pAce . getValue ( ) ) ; <nl> + assertTrue ( pAceGet . Mask = = WinNT . STANDARD _ RIGHTS _ ALL ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . EqualSid ( pAceGet . psid , pSid ) ) ; <nl> + } <nl> + <nl> public void testOpenEventLog ( ) { <nl> 	 HANDLE h = Advapi32 . INSTANCE . OpenEventLog ( null , " Application " ) ; <nl> 	 assertNotNull ( h ) ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / User32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / User32Util . java <nl> index a31e2e1 . . 91dab3a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / User32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / User32Util . java <nl> @ @ - 241 , 7 + 241 , 7 @ @ public final class User32Util { <nl> <nl> / * * <nl> * The method is called from the thread , that run the message dispatcher , <nl> - * when the call to { @ see com . sun . jna . platform . win32 . User32 # GetMessage } <nl> + * when the call to { @ link com . sun . jna . platform . win32 . User32 # GetMessage } <nl> * fails ( returns { @ code - 1 } ) . <nl> * <nl> * < p > If the method returns { @ code true } , the MainLoop is exitted , if it <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index 1aad5bb . . 8290369 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 3113 , 9 + 3113 , 9 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> * Specifies whether the server is to be given a snapshot of the <nl> * client ' s security context ( called static tracking ) , or is to be <nl> * continually updated to track changes to the client ' s security context <nl> - * ( called dynamic tracking ) . The { @ link WinNT . SECURITY _ STATIC _ TRACKING } <nl> + * ( called dynamic tracking ) . The { @ link WinNT # SECURITY _ STATIC _ TRACKING } <nl> * value specifies static tracking , and the <nl> - * { @ link WinNT . SECURITY _ DYNAMIC _ TRACKING } value specifies dynamic <nl> + * { @ link WinNT # SECURITY _ DYNAMIC _ TRACKING } value specifies dynamic <nl> * tracking . Not all communications mechanisms support dynamic tracking ; <nl> * those that do not will default to static tracking . <nl> * / <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> index bd1f76c . . 65b9123 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> @ @ - 1843 , 7 + 1843 , 7 @ @ public interface WinUser extends WinDef { <nl> * / <nl> public int CF _ GDIOBJFIRST = 0x0300 ; <nl> / * * <nl> - * @ see WinUser . CF _ GDIOBJFIRST <nl> + * @ see WinUser # CF _ GDIOBJFIRST <nl> * / <nl> public int CF _ GDIOBJLAST = 0x03FF ; <nl> / * * <nl> @ @ - 1920 , 7 + 1920 , 7 @ @ public interface WinUser extends WinDef { <nl> * / <nl> public int CF _ PRIVATEFIRST = 0x0200 ; <nl> / * * <nl> - * @ see WinDef . CF _ PRIVATEFIRST . <nl> + * @ see WinUser # CF _ PRIVATEFIRST <nl> * / <nl> public int CF _ PRIVATELAST = 0x02FF ; <nl> / * * <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 6910077 . . f51a152 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 1908 , 8 + 1908 , 6 @ @ public final class Native implements Version { <nl> * @ param fp function pointer <nl> * @ param callFlags calling convention to be used <nl> * @ param args Arguments to pass to the native function <nl> - * <nl> - * @ return The value returned by the target native function <nl> * / <nl> static native void invokeVoid ( Function function , long fp , int callFlags , Object [ ] args ) ; <nl>
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index 23d344d . . 6f0fd6d 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 3094 , 17 + 3094 , 21 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> * Specifies whether the server is to be given a snapshot of the <nl> * client ' s security context ( called static tracking ) , or is to be <nl> * continually updated to track changes to the client ' s security context <nl> - * ( called dynamic tracking ) . The SECURITY _ STATIC _ TRACKING value <nl> - * specifies static tracking , and the SECURITY _ DYNAMIC _ TRACKING value <nl> - * specifies dynamic tracking . Not all communications mechanisms support <nl> - * dynamic tracking ; those that do not will default to static tracking . <nl> + * ( called dynamic tracking ) . The { @ link WinNT . SECURITY _ STATIC _ TRACKING } <nl> + * value specifies static tracking , and the <nl> + * { @ link WinNT . SECURITY _ DYNAMIC _ TRACKING } value specifies dynamic <nl> + * tracking . Not all communications mechanisms support dynamic tracking ; <nl> + * those that do not will default to static tracking . <nl> * / <nl> - public short ContextTrackingMode ; <nl> + public byte ContextTrackingMode ; <nl> / * * <nl> * Specifies whether the server may enable or disable privileges and <nl> * groups that the client ' s security context may include . <nl> + * <nl> + * < p > This is a boolean value . See { @ link WinNT # BOOLEAN _ TRUE } and <nl> + * { @ link WinNT # BOOLEAN _ FALSE } . < / p > <nl> * / <nl> - public BOOL EffectiveOnly ; <nl> + public byte EffectiveOnly ; <nl> <nl> @ Override <nl> public void write ( ) { <nl> @ @ - 3117 , 4 + 3121 , 9 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> return FIELDS ; <nl> } <nl> } <nl> + <nl> + byte SECURITY _ DYNAMIC _ TRACKING = ( byte ) 1 ; <nl> + byte SECURITY _ STATIC _ TRACKING = ( byte ) 0 ; <nl> + byte BOOLEAN _ TRUE = ( byte ) 1 ; <nl> + byte BOOLEAN _ FALSE = ( byte ) 0 ; <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 2f59774 . . 6d17247 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 61 , 6 + 61 , 7 @ @ Features <nl> * [ # 693 ] ( https : / / github . com / java - native - access / jna / pull / 693 ) : Bind DDEML ( Dynamic Data Exchange Management Library ) , add a thread implementation that runs a windows message loop - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 702 ] ( https : / / github . com / java - native - access / jna / pull / 702 ) : Added ` GetClientRect ` to ` com / sun / jna / platform / win32 / User32 ` - [ @ Jonatino ] ( https : / / github . com / Jonatino ) . <nl> * [ # 689 ] ( https : / / github . com / java - native - access / jna / pull / 689 ) : Add ` GetProcAddress ( HMODULE , int ) ` to ` com . sun . jna . platform . win32 . Kernel32 ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 723 ] ( https : / / github . com / java - native - access / jna / pull / 723 ) : Added ` com . sun . jna . platform . win32 . Wevtapi ` and ` com . sun . jna . platform . win32 . Winevt ` - [ @ sakamotodesu ] ( https : / / github . com / sakamotodesu ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - -
diff - - git a / lib / native / aix - ppc . jar b / lib / native / aix - ppc . jar <nl> index 6716399 . . 1d50b10 100644 <nl> Binary files a / lib / native / aix - ppc . jar and b / lib / native / aix - ppc . jar differ <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index 2ce7485 . . 43620dc 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 36 , 7 + 36 , 9 @ @ <nl> # define GET _ LAST _ ERROR ( ) GetLastError ( ) <nl> # define SET _ LAST _ ERROR ( CODE ) SetLastError ( CODE ) <nl> # else <nl> + # ifndef _ XOPEN _ SOURCE / * AIX power - aix 1 7 00F84C0C4C00 defins 700 * / <nl> # define _ XOPEN _ SOURCE 600 <nl> + # endif <nl> # define GET _ LAST _ ERROR ( ) errno <nl> # define SET _ LAST _ ERROR ( CODE ) ( errno = ( CODE ) ) <nl> # endif / * _ WIN32 * /
diff - - git a / www / Contributing . md b / www / Contributing . md <nl> index 848fed0 . . 467f9c3 100644 <nl> - - - a / www / Contributing . md <nl> + + + b / www / Contributing . md <nl> @ @ - 47 , 19 + 47 , 31 @ @ If you ' re struggling with a mapping test , consider that it ' s not really necessar <nl> Copyright Headers in Files <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - If you ' re creating a new file , add a copyright notice and an LGPL license notice with your name or company on top of it . <nl> + If you ' re creating a new file , add a copyright notice and an LGPL 2 . 1 and AL2 . 0 <nl> + license notice with your name or company on top of it . <nl> <nl> / * Copyright ( c ) 2011 Timothy Wall , All Rights Reserved <nl> * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> * <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> * / <nl> <nl> If you ' re adding to an existing file , don ' t make any changes to the copyright .
diff - - git a / native / callback . c b / native / callback . c <nl> index f2b13f7 . . 108048b 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 1 , 15 + 1 , 26 @ @ <nl> / * Copyright ( c ) 2007 - 2013 Timothy Wall , All Rights Reserved <nl> * Copyright ( c ) 2007 Wayne Meissner , All Rights Reserved <nl> * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * < p / > <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> * / <nl> <nl> # include < stdio . h > <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index f87edab . . 0c941b5 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 5 , 15 + 5 , 26 @ @ <nl> * Copyright ( c ) 2007 - 2013 Timothy Wall . All Rights Reserved . <nl> * Copyright ( c ) 2007 Wayne Meissner . All Rights Reserved . <nl> * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * < p / > <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> * / <nl> <nl> # include " dispatch . h " <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index 2ce7485 . . b6ae267 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 1 , 14 + 1 , 25 @ @ <nl> / * Copyright ( c ) 2007 - 2013 Timothy Wall , All Rights Reserved <nl> * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * < p / > <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> * / <nl> # ifndef DISPATCH _ H <nl> # define DISPATCH _ H <nl> diff - - git a / native / dll - callback . c b / native / dll - callback . c <nl> index 7111160 . . dcdcca5 100644 <nl> - - - a / native / dll - callback . c <nl> + + + b / native / dll - callback . c <nl> @ @ - 1 , 14 + 1 , 25 @ @ <nl> / * Copyright ( c ) 2007 - 2012 Timothy Wall , All Rights Reserved <nl> * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * < p / > <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> * / <nl> / * Must use mingw64 to compile this assembly code . ml64 can ' t generate the <nl> RIP - relative jumps we need . <nl> diff - - git a / native / protect . h b / native / protect . h <nl> index 8e4ad64 . . fd3c883 100644 <nl> - - - a / native / protect . h <nl> + + + b / native / protect . h <nl> @ @ - 1 , 14 + 1 , 25 @ @ <nl> / * Copyright ( c ) 2007 Timothy Wall , All Rights Reserved <nl> * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * < p / > <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> * / <nl> # ifndef PROTECT _ H <nl> # define PROTECT _ H <nl> diff - - git a / native / testlib . c b / native / testlib . c <nl> index 5e640c0 . . 2eaaaba 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 1 , 14 + 1 , 25 @ @ <nl> / * Copyright ( c ) 2007 - 2013 Timothy Wall , All Rights Reserved <nl> * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * < p / > <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> * / <nl> <nl> / * Native library implementation to support JUnit tests . * / <nl> diff - - git a / native / testlib2 . c b / native / testlib2 . c <nl> index 3626a3c . . 068d856 100644 <nl> - - - a / native / testlib2 . c <nl> + + + b / native / testlib2 . c <nl> @ @ - 1 , 14 + 1 , 25 @ @ <nl> / * Copyright ( c ) 2007 - 2008 Timothy Wall , All Rights Reserved <nl> * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * < p / > <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> * / <nl> <nl> / * Simple library with a dependency . * /
diff - - git a / . github / ISSUE _ TEMPLATE . md b / . github / ISSUE _ TEMPLATE . md <nl> new file mode 100644 <nl> index 0000000 . . ef09ee0 <nl> - - - / dev / null <nl> + + + b / . github / ISSUE _ TEMPLATE . md <nl> @ @ - 0 , 0 + 1 , 14 @ @ <nl> + NOTE : Only file GitHub issues for bugs and feature requests . <nl> + <nl> + Before you post a new issue please check the <nl> + [ JNA users ' group ] ( https : / / groups . google . com / forum / # ! forum / jna - users ) and the <nl> + existing issues for duplicates . Please use the user group also for general <nl> + questions . <nl> + <nl> + # # # Provide complete information about the problem <nl> + 1 . Version of JNA and related jars <nl> + 2 . Version and vendor of the java virtual machine <nl> + 3 . Operating system <nl> + 4 . System architecture ( CPU type , bitness of the JVM ) <nl> + 5 . Complete description of the problem <nl> + 6 . Steps to reproduce <nl> \ No newline at end of file
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> index d0c3d8b . . b813b0f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> @ @ - 276 , 6 + 276 , 11 @ @ public interface Variant { <nl> this . setValue ( VT _ DATE , date ) ; <nl> } <nl> <nl> + public VARIANT ( SAFEARRAY array ) { <nl> + this ( ) ; <nl> + this . setValue ( array ) ; <nl> + } <nl> + <nl> public VARTYPE getVarType ( ) { <nl> this . read ( ) ; <nl> return _ variant . vt ; <nl> @ @ - 288 , 6 + 293 , 10 @ @ public interface Variant { <nl> public void setValue ( int vt , Object value ) { <nl> this . setValue ( new VARTYPE ( vt ) , value ) ; <nl> } <nl> + <nl> + public void setValue ( SAFEARRAY array ) { <nl> + this . setValue ( array . getVarType ( ) . intValue ( ) | VT _ SAFEARRAY , array ) ; <nl> + } <nl> <nl> public void setValue ( VARTYPE vt , Object value ) { <nl> int varType = vt . intValue ( ) ; <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java <nl> index 8cb9b34 . . ea06808 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java <nl> @ @ - 3 , 9 + 3 , 11 @ @ package com . sun . jna . platform . win32 ; <nl> import junit . framework . TestCase ; <nl> <nl> import com . sun . jna . platform . win32 . OaIdl . DATE ; <nl> + import com . sun . jna . platform . win32 . OaIdl . SAFEARRAY ; <nl> import com . sun . jna . platform . win32 . OaIdl . VARIANT _ BOOL ; <nl> import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> import com . sun . jna . platform . win32 . WTypes . BSTR ; <nl> + import com . sun . jna . platform . win32 . WTypes . VARTYPE ; <nl> import com . sun . jna . platform . win32 . WinBase . SYSTEMTIME ; <nl> import com . sun . jna . platform . win32 . WinDef . BOOL ; <nl> import com . sun . jna . platform . win32 . WinDef . BYTE ; <nl> @ @ - 20 , 6 + 22 , 7 @ @ import java . util . Date ; <nl> <nl> import static org . hamcrest . CoreMatchers . equalTo ; <nl> import static org . hamcrest . CoreMatchers . instanceOf ; <nl> + import static org . hamcrest . CoreMatchers . is ; <nl> import static org . junit . Assert . assertThat ; <nl> <nl> public class VariantTest extends TestCase { <nl> @ @ - 239 , 4 + 242 , 17 @ @ public class VariantTest extends TestCase { <nl> assertThat ( ( ( USHORT ) variant . getValue ( ) ) . intValue ( ) , equalTo ( ( int ) testChar ) ) ; <nl> assertThat ( variant . intValue ( ) , equalTo ( ( int ) testChar ) ) ; <nl> } <nl> + <nl> + public void testVariantSafearrayWrapping ( ) { <nl> + SAFEARRAY safearray = OaIdl . SAFEARRAY . createSafeArray ( new VARTYPE ( Variant . VT _ I1 ) , 5 ) ; <nl> + try { <nl> + VARIANT variant = new VARIANT ( safearray ) ; <nl> + assertThat ( variant . getVarType ( ) . intValue ( ) , equalTo ( ( int ) ( Variant . VT _ I1 | Variant . VT _ SAFEARRAY ) ) ) ; <nl> + Object wrappedValue = variant . getValue ( ) ; <nl> + assertThat ( wrappedValue , instanceOf ( SAFEARRAY . class ) ) ; <nl> + assertThat ( safearray . getUBound ( 0 ) , is ( 4 ) ) ; <nl> + } finally { <nl> + safearray . destroy ( ) ; <nl> + } <nl> + } <nl> }
diff - - git a / native / Makefile b / native / Makefile <nl> index 1cda1ec . . 8c41035 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 84 , 6 + 84 , 8 @ @ JNISFX = $ ( LIBSFX ) <nl> CC = gcc <nl> LD = $ ( CC ) <nl> LIBS = <nl> + # CC _ OPTS only applied to objects build for jnidispatch , not for libffi <nl> + LOC _ CC _ OPTS = - Wno - unknown - warning - option - Werror - Wno - clobbered <nl> # Default to Sun recommendations for JNI compilation <nl> COPT = - O2 - fno - omit - frame - pointer - fno - strict - aliasing <nl> CASM = - S <nl> @ @ - 402 , 13 + 404 , 13 @ @ endif <nl> $ ( BUILD ) / % . o : % . c dispatch . h protect . h $ ( FFI _ LIB ) <nl> 	 @ mkdir - p $ ( BUILD ) <nl> ifneq ( $ ( SDKROOT ) , ) <nl> - 	 $ ( CC ) - arch $ ( ARCH ) $ ( CFLAGS ) - c $ < - o $ @ . $ ( ARCH ) <nl> + 	 $ ( CC ) $ ( LOC _ CC _ OPTS ) - arch $ ( ARCH ) $ ( CFLAGS ) - c $ < - o $ @ . $ ( ARCH ) <nl> 	 for arch in $ ( ALT _ ARCHS ) ; do \ <nl> - 	 $ ( CC ) - arch $ $ arch - I $ ( BUILD ) / libffi . $ $ arch / include $ ( CFLAGS ) - c $ < - o $ @ . $ $ arch ; \ <nl> + 	 $ ( CC ) $ ( LOC _ CC _ OPTS ) - arch $ $ arch - I $ ( BUILD ) / libffi . $ $ arch / include $ ( CFLAGS ) - c $ < - o $ @ . $ $ arch ; \ <nl> 	 done <nl> 	 lipo - create - output $ @ $ @ . * <nl> else <nl> - 	 $ ( CC ) $ ( CFLAGS ) - c $ < $ ( COUT ) <nl> + 	 $ ( CC ) $ ( CFLAGS ) $ ( LOC _ CC _ OPTS ) - c $ < $ ( COUT ) <nl> endif <nl> <nl> all : $ ( LIBRARY ) $ ( TESTLIB ) $ ( TESTLIB2 ) $ ( TESTLIB _ JAR ) $ ( TESTLIB _ PATH ) $ ( TESTLIB _ TRUNC ) <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 141faf7 . . 549f057 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 2032 , 7 + 2032 , 7 @ @ closure _ handler ( ffi _ cif * cif , void * resp , void * * argp , void * cdata ) <nl> * / <nl> JNIEXPORT jlong JNICALL <nl> Java _ com _ sun _ jna _ Native _ invokePointer ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , <nl> + jobject UNUSED ( function ) , jlong fp , <nl> jint callconv , jobjectArray arr ) <nl> { <nl> jvalue result ; <nl> @ @ - 2048 , 7 + 2048 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokePointer ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * / <nl> JNIEXPORT jobject <nl> JNICALL Java _ com _ sun _ jna _ Native _ invokeObject ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , <nl> + jobject UNUSED ( function ) , jlong fp , <nl> jint callconv , jobjectArray arr ) <nl> { <nl> jvalue result ; <nl> @ @ - 2064 , 7 + 2064 , 7 @ @ JNICALL Java _ com _ sun _ jna _ Native _ invokeObject ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * / <nl> JNIEXPORT void JNICALL <nl> Java _ com _ sun _ jna _ Native _ invokeStructure ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , <nl> + jobject UNUSED ( function ) , jlong fp , <nl> jint callconv , jobjectArray arr , <nl> jlong memory , jlong type _ info ) <nl> { <nl> @ @ - 2084 , 7 + 2084 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeStructure ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * / <nl> JNIEXPORT jdouble JNICALL <nl> Java _ com _ sun _ jna _ Native _ invokeDouble ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , <nl> + jobject UNUSED ( function ) , jlong fp , <nl> jint callconv , jobjectArray arr ) <nl> { <nl> jvalue result ; <nl> @ @ - 2099 , 7 + 2099 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeDouble ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * / <nl> JNIEXPORT jfloat JNICALL <nl> Java _ com _ sun _ jna _ Native _ invokeFloat ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , <nl> + jobject UNUSED ( function ) , jlong fp , <nl> jint callconv , jobjectArray arr ) <nl> { <nl> jvalue result ; <nl> @ @ - 2114 , 7 + 2114 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeFloat ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * / <nl> JNIEXPORT jint JNICALL <nl> Java _ com _ sun _ jna _ Native _ invokeInt ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , jint callconv , <nl> + jobject UNUSED ( function ) , jlong fp , jint callconv , <nl> jobjectArray arr ) <nl> { <nl> ffi _ arg result ; <nl> @ @ - 2129 , 7 + 2129 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeInt ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * / <nl> JNIEXPORT jlong JNICALL <nl> Java _ com _ sun _ jna _ Native _ invokeLong ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , jint callconv , <nl> + jobject UNUSED ( function ) , jlong fp , jint callconv , <nl> jobjectArray arr ) <nl> { <nl> jvalue result ; <nl> @ @ - 2144 , 7 + 2144 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeLong ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * / <nl> JNIEXPORT void JNICALL <nl> Java _ com _ sun _ jna _ Native _ invokeVoid ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , jint callconv , <nl> + jobject UNUSED ( function ) , jlong fp , jint callconv , <nl> jobjectArray arr ) <nl> { <nl> jvalue result ; <nl> @ @ - 2262 , 7 + 2262 , 7 @ @ Java _ com _ sun _ jna _ Native _ findSymbol ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ BII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3BII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jbyteArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jbyteArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > GetByteArrayRegion ( env , arr , off , n , L2A ( addr + offset ) ) ; <nl> @ @ - 2275 , 7 + 2275 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ CII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3CII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jcharArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jcharArray arr , jint off , jint n ) <nl> { <nl> getChars ( env , ( wchar _ t * ) L2A ( addr + offset ) , arr , off , n ) ; <nl> } <nl> @ @ - 2286 , 7 + 2286 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ DII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3DII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jdoubleArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jdoubleArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > GetDoubleArrayRegion ( env , arr , off , n , ( jdouble * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2299 , 7 + 2299 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ FII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3FII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jfloatArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jfloatArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > GetFloatArrayRegion ( env , arr , off , n , ( jfloat * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2312 , 7 + 2312 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ III ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3III <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jintArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jintArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > GetIntArrayRegion ( env , arr , off , n , ( jint * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2325 , 7 + 2325 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ JII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3JII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlongArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlongArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > GetLongArrayRegion ( env , arr , off , n , ( jlong * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2338 , 7 + 2338 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ SII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3SII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jshortArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jshortArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > GetShortArrayRegion ( env , arr , off , n , ( jshort * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2351 , 7 + 2351 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJB ) J <nl> * / <nl> JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ indexOf <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jbyte value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jbyte value ) <nl> { <nl> jbyte * peer = ( jbyte * ) L2A ( addr + offset ) ; <nl> volatile jlong i = 0 ; <nl> @ @ - 2373 , 7 + 2373 , 7 @ @ JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ indexOf <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ BII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3BII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jbyteArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jbyteArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > SetByteArrayRegion ( env , arr , off , n , L2A ( addr + offset ) ) ; <nl> @ @ - 2386 , 7 + 2386 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3B <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ CII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3CII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jcharArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jcharArray arr , jint off , jint n ) <nl> { <nl> setChars ( env , ( wchar _ t * ) L2A ( addr + offset ) , arr , off , n ) ; <nl> } <nl> @ @ - 2397 , 7 + 2397 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3C <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ DII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3DII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jdoubleArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jdoubleArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > SetDoubleArrayRegion ( env , arr , off , n , ( jdouble * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2410 , 7 + 2410 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3D <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ FII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3FII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jfloatArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jfloatArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > SetFloatArrayRegion ( env , arr , off , n , ( jfloat * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2423 , 7 + 2423 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3F <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ III ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3III <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jintArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jintArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > SetIntArrayRegion ( env , arr , off , n , ( jint * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2436 , 7 + 2436 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3I <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ JII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3JII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlongArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlongArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > SetLongArrayRegion ( env , arr , off , n , ( jlong * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2449 , 7 + 2449 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3J <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ SII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3SII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jshortArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jshortArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > SetShortArrayRegion ( env , arr , off , n , ( jshort * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2462 , 7 + 2462 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3S <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) B <nl> * / <nl> JNIEXPORT jbyte JNICALL Java _ com _ sun _ jna _ Native _ getByte <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> jbyte res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; <nl> @ @ - 2475 , 7 + 2475 , 7 @ @ JNIEXPORT jbyte JNICALL Java _ com _ sun _ jna _ Native _ getByte <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) C <nl> * / <nl> JNIEXPORT jchar JNICALL Java _ com _ sun _ jna _ Native _ getChar <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> wchar _ t res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; <nl> @ @ - 2516 , 7 + 2516 , 7 @ @ JNIEXPORT jobject JNICALL Java _ com _ sun _ jna _ Native _ getDirectByteBuffer _ _ JJ <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJJ ) Ljava / nio / ByteBuffer ; <nl> * / <nl> JNIEXPORT jobject JNICALL Java _ com _ sun _ jna _ Native _ getDirectByteBuffer _ _ Lcom _ sun _ jna _ Pointer _ 2JJJ <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlong length ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlong length ) <nl> { <nl> # ifdef NO _ NIO _ BUFFERS <nl> return NULL ; <nl> @ @ - 2531 , 7 + 2531 , 7 @ @ JNIEXPORT jobject JNICALL Java _ com _ sun _ jna _ Native _ getDirectByteBuffer _ _ Lcom _ sun _ <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) D <nl> * / <nl> JNIEXPORT jdouble JNICALL Java _ com _ sun _ jna _ Native _ getDouble <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> jdouble res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; <nl> @ @ - 2544 , 7 + 2544 , 7 @ @ JNIEXPORT jdouble JNICALL Java _ com _ sun _ jna _ Native _ getDouble <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) F <nl> * / <nl> JNIEXPORT jfloat JNICALL Java _ com _ sun _ jna _ Native _ getFloat <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> jfloat res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; <nl> @ @ - 2557 , 7 + 2557 , 7 @ @ JNIEXPORT jfloat JNICALL Java _ com _ sun _ jna _ Native _ getFloat <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) I <nl> * / <nl> JNIEXPORT jint JNICALL Java _ com _ sun _ jna _ Native _ getInt <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> jint res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; <nl> @ @ - 2570 , 7 + 2570 , 7 @ @ JNIEXPORT jint JNICALL Java _ com _ sun _ jna _ Native _ getInt <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) J <nl> * / <nl> JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ getLong <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> jlong res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; <nl> @ @ - 2583 , 7 + 2583 , 7 @ @ JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ getLong <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) S <nl> * / <nl> JNIEXPORT jshort JNICALL Java _ com _ sun _ jna _ Native _ getShort <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> jshort res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; <nl> @ @ - 2596 , 7 + 2596 , 7 @ @ JNIEXPORT jshort JNICALL Java _ com _ sun _ jna _ Native _ getShort <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) Ljava / lang / String ; <nl> * / <nl> JNIEXPORT jstring JNICALL Java _ com _ sun _ jna _ Native _ getWideString <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> return newJavaString ( env , L2A ( addr + offset ) , NULL ) ; <nl> } <nl> @ @ - 2607 , 7 + 2607 , 7 @ @ JNIEXPORT jstring JNICALL Java _ com _ sun _ jna _ Native _ getWideString <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) [ B <nl> * / <nl> JNIEXPORT jbyteArray JNICALL Java _ com _ sun _ jna _ Native _ getStringBytes <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong baseaddr , jlong offset ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong baseaddr , jlong offset ) <nl> { <nl> volatile jbyteArray bytes = 0 ; <nl> PSTART ( ) ; <nl> @ @ - 2632 , 7 + 2632 , 7 @ @ JNIEXPORT jbyteArray JNICALL Java _ com _ sun _ jna _ Native _ getStringBytes <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJJB ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setMemory <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlong count , jbyte value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlong count , jbyte value ) <nl> { <nl> MEMSET ( env , L2A ( addr + offset ) , ( int ) value , ( size _ t ) count ) ; <nl> } <nl> @ @ - 2643 , 7 + 2643 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setMemory <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJB ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setByte <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jbyte value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jbyte value ) <nl> { <nl> MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2654 , 7 + 2654 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setByte <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJC ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setChar <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jchar value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jchar value ) <nl> { <nl> wchar _ t ch = value ; <nl> MEMCPY ( env , L2A ( addr + offset ) , & ch , sizeof ( ch ) ) ; <nl> @ @ - 2666 , 7 + 2666 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setChar <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJJ ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setPointer <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlong value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlong value ) <nl> { <nl> void * ptr = L2A ( value ) ; <nl> MEMCPY ( env , L2A ( addr + offset ) , & ptr , sizeof ( void * ) ) ; <nl> @ @ - 2678 , 7 + 2678 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setPointer <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJD ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setDouble <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jdouble value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jdouble value ) <nl> { <nl> MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2689 , 7 + 2689 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setDouble <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJF ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setFloat <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jfloat value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jfloat value ) <nl> { <nl> MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2700 , 7 + 2700 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setFloat <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJI ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setInt <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jint value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jint value ) <nl> { <nl> MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2711 , 7 + 2711 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setInt <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJJ ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setLong <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlong value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlong value ) <nl> { <nl> MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2722 , 7 + 2722 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setLong <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJS ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setShort <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jshort value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jshort value ) <nl> { <nl> MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2733 , 7 + 2733 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setShort <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJLjava / lang / String ; ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setWideString <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jstring value ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jstring value ) <nl> { <nl> int len = ( * env ) - > GetStringLength ( env , value ) ; <nl> const void * volatile str ; <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index 4e144cf . . 5fdfa9c 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 30 , 6 + 30 , 7 @ @ <nl> # pragma warning ( disable : 4204 ) / * structure initializer * / <nl> # pragma warning ( disable : 4710 ) / * swprintf not inlined * / <nl> # pragma warning ( disable : 4201 ) / * nameless struct / union ( jni _ md . h ) * / <nl> + # pragma warning ( disable : 4996 ) / * deprecated functions ( strdup ) * / <nl> # else <nl> # include < malloc . h > <nl> # endif / * _ MSC _ VER * / <nl> @ @ - 152 , 6 + 153 , 8 @ @ typedef struct _ callback { <nl> # define L2A ( X ) ( ( void * ) ( unsigned long ) ( X ) ) <nl> # define A2L ( X ) ( ( jlong ) ( unsigned long ) ( X ) ) <nl> # endif <nl> + # else <nl> + # include < stdio . h > <nl> # endif <nl> <nl> / * Convenience macros * / <nl> diff - - git a / native / testlib . c b / native / testlib . c <nl> index 6aafac2 . . 5e640c0 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 876 , 7 + 876 , 7 @ @ addVarArgs ( const char * fmt , . . . ) { <nl> break ; <nl> case ' f ' : / / float ( promoted to ‘ double ’ when passed through ‘ . . . ’ ) <nl> case ' g ' : / / double <nl> - sum + = va _ arg ( ap , double ) ; <nl> + sum + = ( int ) va _ arg ( ap , double ) ; <nl> break ; <nl> default : <nl> break ; <nl> diff - - git a / test / com / sun / jna / unix / XsiComplianceTest . java b / test / com / sun / jna / unix / XsiComplianceTest . java <nl> deleted file mode 100644 <nl> index 342e2f2 . . 0000000 <nl> - - - a / test / com / sun / jna / unix / XsiComplianceTest . java <nl> + + + / dev / null <nl> @ @ - 1 , 42 + 0 , 0 @ @ <nl> - package com . sun . jna . unix ; <nl> - <nl> - import com . sun . jna . LastErrorException ; <nl> - import com . sun . jna . Library ; <nl> - import com . sun . jna . Memory ; <nl> - import com . sun . jna . Native ; <nl> - import com . sun . jna . Pointer ; <nl> - import junit . framework . TestCase ; <nl> - <nl> - public final class XsiComplianceTest extends TestCase { <nl> - <nl> - public static void main ( String [ ] args ) { <nl> - junit . textui . TestRunner . run ( XsiComplianceTest . class ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Regression test for https : / / github . com / java - native - access / jna / issues / 392 <nl> - * <nl> - * Depending on the toolchain on GCC / GLIBC the wrong definition of <nl> - * strerror _ r was included . <nl> - * <nl> - * This leads to broken messages . <nl> - * / <nl> - public void testErrorReporting ( ) { <nl> - boolean exceptionWasCaught = false ; <nl> - try { <nl> - INSTANCE . read ( Integer . MAX _ VALUE , new Memory ( 1024 ) , 1024 ) ; <nl> - } catch ( LastErrorException ex ) { <nl> - exceptionWasCaught = true ; <nl> - assertEquals ( " [ 9 ] Bad file descriptor " , ex . getMessage ( ) ) ; <nl> - assertEquals ( 9 , ex . getErrorCode ( ) ) ; <nl> - } <nl> - assertEquals ( true , exceptionWasCaught ) ; <nl> - } <nl> - <nl> - static POSIX INSTANCE = ( POSIX ) Native . loadLibrary ( POSIX . class ) ; <nl> - <nl> - interface POSIX extends Library { <nl> - <nl> - long read ( int fildes , Pointer buf , long nbyte ) throws LastErrorException ; <nl> - } <nl> - } <nl> \ No newline at end of file
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 6bc61d0 . . f312c72 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 83 , 6 + 83 , 7 @ @ Bug Fixes <nl> * [ # 668 ] ( https : / / github . com / java - native - access / jna / issues / 668 ) : Correct typemapper used for structures defined in ` com . sun . jna . platform . win32 . DsGetDC ` , ` com . sun . jna . platform . win32 . LMAccess ` , ` com . sun . jna . platform . win32 . LMShare ` , ` com . sun . jna . platform . win32 . Sspi ` , ` com . sun . jna . platform . win32 . WinBase ` , ` com . sun . jna . platform . win32 . WinCrypt ` , ` com . sun . jna . platform . win32 . WinUser ` and ` com . sun . jna . platform . win32 . Winnetwk ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 696 ] ( https : / / github . com / java - native - access / jna / issues / 696 ) : COMLateBindingObject . getAutomationProperty method that takes iDispatch parameter doesn ' t use it - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 664 ] ( https : / / github . com / java - native - access / jna / issues / 664 ) : Prevent premature GC of Pointer and Function objects by passing whole object into JNI call in addition to the raw pointer value - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 669 ] ( https : / / github . com / java - native - access / jna / pull / 669 ) : Ensure XSI - compliant strerror _ r is used , to prevent corrupted error messages on linux - [ @ DavidKeller ] ( https : / / github . com / DavidKeller ) . <nl> <nl> Release 4 . 2 . 1 <nl> = = = = = = = = = = = = = <nl> diff - - git a / dist / linux - aarch64 . jar b / dist / linux - aarch64 . jar <nl> index a3e1001 . . 4607fd5 100644 <nl> Binary files a / dist / linux - aarch64 . jar and b / dist / linux - aarch64 . jar differ <nl> diff - - git a / dist / linux - ppc . jar b / dist / linux - ppc . jar <nl> index 6716399 . . 2202928 100644 <nl> Binary files a / dist / linux - ppc . jar and b / dist / linux - ppc . jar differ <nl> diff - - git a / dist / linux - sparcv9 . jar b / dist / linux - sparcv9 . jar <nl> index 61e5365 . . 6716399 100644 <nl> Binary files a / dist / linux - sparcv9 . jar and b / dist / linux - sparcv9 . jar differ
diff - - git a / build . xml b / build . xml <nl> index eed81b0 . . 877a9ce 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 1001 , 6 + 1001 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < syspropertyset refid = " headless " / > <nl> < ! - - avoid VM conflicts with JNA protected mode - - > <nl> < env key = " $ { ld . preload . name } " file = " $ { libjsig } " / > <nl> + < env key = " LC _ MESSAGES " value = " C " / > <nl> < sysproperty key = " jna . library . path " file = " $ { build . native } " / > <nl> < ! - - Ignore any system install of JNA - - > <nl> < sysproperty key = " jna . nosys " value = " true " / > <nl> diff - - git a / test / com / sun / jna / unix / XsiComplianceTest . java b / test / com / sun / jna / unix / XsiComplianceTest . java <nl> new file mode 100644 <nl> index 0000000 . . 342e2f2 <nl> - - - / dev / null <nl> + + + b / test / com / sun / jna / unix / XsiComplianceTest . java <nl> @ @ - 0 , 0 + 1 , 42 @ @ <nl> + package com . sun . jna . unix ; <nl> + <nl> + import com . sun . jna . LastErrorException ; <nl> + import com . sun . jna . Library ; <nl> + import com . sun . jna . Memory ; <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + import junit . framework . TestCase ; <nl> + <nl> + public final class XsiComplianceTest extends TestCase { <nl> + <nl> + public static void main ( String [ ] args ) { <nl> + junit . textui . TestRunner . run ( XsiComplianceTest . class ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Regression test for https : / / github . com / java - native - access / jna / issues / 392 <nl> + * <nl> + * Depending on the toolchain on GCC / GLIBC the wrong definition of <nl> + * strerror _ r was included . <nl> + * <nl> + * This leads to broken messages . <nl> + * / <nl> + public void testErrorReporting ( ) { <nl> + boolean exceptionWasCaught = false ; <nl> + try { <nl> + INSTANCE . read ( Integer . MAX _ VALUE , new Memory ( 1024 ) , 1024 ) ; <nl> + } catch ( LastErrorException ex ) { <nl> + exceptionWasCaught = true ; <nl> + assertEquals ( " [ 9 ] Bad file descriptor " , ex . getMessage ( ) ) ; <nl> + assertEquals ( 9 , ex . getErrorCode ( ) ) ; <nl> + } <nl> + assertEquals ( true , exceptionWasCaught ) ; <nl> + } <nl> + <nl> + static POSIX INSTANCE = ( POSIX ) Native . loadLibrary ( POSIX . class ) ; <nl> + <nl> + interface POSIX extends Library { <nl> + <nl> + long read ( int fildes , Pointer buf , long nbyte ) throws LastErrorException ; <nl> + } <nl> + } <nl> \ No newline at end of file
diff - - git a / CHANGES . md b / CHANGES . md <nl> index ec9a480 . . e6a9549 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 60 , 6 + 60 , 7 @ @ Features <nl> * [ # 680 ] ( https : / / github . com / java - native - access / jna / pull / 680 ) : Added ` SetCurrentProcessExplicitAppUserModelID ` and ` GetCurrentProcessExplicitAppUserModelID ` to ` com . sun . jna . platform . win32 . Shell32 ` for setting the [ System . AppUserModel . ID ] ( https : / / msdn . microsoft . com / en - us / library / windows / desktop / dd391569 . aspx ) of the host process - [ @ rednoah ] ( https : / / github . com / rednoah ) . <nl> * [ # 693 ] ( https : / / github . com / java - native - access / jna / pull / 693 ) : Bind DDEML ( Dynamic Data Exchange Management Library ) , add a thread implementation that runs a windows message loop - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 702 ] ( https : / / github . com / java - native - access / jna / pull / 702 ) : Added ` GetClientRect ` to ` com / sun / jna / platform / win32 / User32 ` - [ @ Jonatino ] ( https : / / github . com / Jonatino ) . <nl> + * [ # 689 ] ( https : / / github . com / java - native - access / jna / pull / 689 ) : Add ` GetProcAddress ( HMODULE , int ) ` to ` com . sun . jna . platform . win32 . Kernel32 ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index c9453fc . . c681116 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> + import com . sun . jna . LastErrorException ; <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> @ @ - 3353 , 4 + 3354 , 25 @ @ public interface Kernel32 extends StdCallLibrary , WinNT , Wincon { <nl> * flags . <nl> * / <nl> int SetErrorMode ( int umode ) ; <nl> + <nl> + / * * <nl> + * Retrieves the address of an exported function or variable from the <nl> + * specified dynamic - link library ( DLL ) . <nl> + * <nl> + * < p > <nl> + * This function is mapped to enable accessing function on win32 systems <nl> + * only accessible by their ordinal value . < / p > <nl> + * <nl> + * < p > <nl> + * To access functions by their name , please use <nl> + * NativeLibrary # getFunction . < / p > <nl> + * <nl> + * @ param hmodule A handle to the DLL module that contains the function or <nl> + * variable . The LoadLibrary , LoadLibraryEx , <nl> + * LoadPackagedLibrary , or GetModuleHandle function returns <nl> + * this handle . <nl> + * @ param ordinal ordinal value of the function export <nl> + * @ return address of the exported function <nl> + * / <nl> + Pointer GetProcAddress ( HMODULE hmodule , int ordinal ) throws LastErrorException ; <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index d8cd9cd . . f3a9ade 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> + import com . sun . jna . Function ; <nl> import java . io . BufferedReader ; <nl> import java . io . BufferedWriter ; <nl> import java . io . File ; <nl> @ @ - 30 , 6 + 31 , 7 @ @ import java . util . TimeZone ; <nl> <nl> import com . sun . jna . Memory ; <nl> import com . sun . jna . Native ; <nl> + import com . sun . jna . NativeLibrary ; <nl> import com . sun . jna . NativeMappedConverter ; <nl> import com . sun . jna . Platform ; <nl> import com . sun . jna . Pointer ; <nl> @ @ - 1158 , 4 + 1160 , 33 @ @ public class Kernel32Test extends TestCase { <nl> / / Restore to previous state ; 0x0001 is now " previous " <nl> assertEquals ( Kernel32 . INSTANCE . SetErrorMode ( previousMode ) , 0x0001 ) ; <nl> } <nl> + <nl> + / * * <nl> + * Test that a named function on win32 can be equally resolved by its ordinal <nl> + * value . <nl> + * <nl> + * From link . exe / dump / exports c : \ \ Windows \ \ System32 \ \ kernel32 . dll <nl> + * <nl> + * 746 2E9 0004FA20 GetTapeStatus <nl> + * 747 2EA 0002DB20 GetTempFileNameA <nl> + * 748 2EB 0002DB30 GetTempFileNameW <nl> + * 749 2EC 0002DB40 GetTempPathA <nl> + * 750 2ED 0002DB50 GetTempPathW <nl> + * 751 2EE 00026780 GetThreadContext <nl> + * <nl> + * The tested function is GetTempPathW which is mapped to the ordinal 750 . <nl> + * / <nl> + public void testGetProcAddress ( ) { <nl> + NativeLibrary kernel32Library = NativeLibrary . getInstance ( " kernel32 " ) ; <nl> + / / get module handle needed to resolve function pointer via GetProcAddress <nl> + HMODULE kernel32Module = Kernel32 . INSTANCE . GetModuleHandle ( " kernel32 " ) ; <nl> + <nl> + Function namedFunction = kernel32Library . getFunction ( " GetTempPathW " ) ; <nl> + long namedFunctionPointerValue = Pointer . nativeValue ( namedFunction ) ; <nl> + <nl> + Pointer ordinalFunction = Kernel32 . INSTANCE . GetProcAddress ( kernel32Module , 750 ) ; <nl> + long ordinalFunctionPointerValue = Pointer . nativeValue ( ordinalFunction ) ; <nl> + <nl> + assertEquals ( namedFunctionPointerValue , ordinalFunctionPointerValue ) ; <nl> + } <nl> } <nl> diff - - git a / src / com / sun / jna / Function . java b / src / com / sun / jna / Function . java <nl> index cb900a5 . . 17df489 100644 <nl> - - - a / src / com / sun / jna / Function . java <nl> + + + b / src / com / sun / jna / Function . java <nl> @ @ - 141 , 7 + 141 , 7 @ @ public class Function extends Pointer { <nl> * @ param p Native function pointer <nl> * / <nl> public static Function getFunction ( Pointer p ) { <nl> - return getFunction ( p , 0 ) ; <nl> + return getFunction ( p , 0 , null ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 159 , 7 + 159 , 28 @ @ public class Function extends Pointer { <nl> * Function < a href = " # callflags " > call flags < / a > <nl> * / <nl> public static Function getFunction ( Pointer p , int callFlags ) { <nl> - return new Function ( p , callFlags , null ) ; <nl> + return getFunction ( p , callFlags , null ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Obtain a < code > Function < / code > representing a native <nl> + * function pointer . In general , this function should be used by dynamic <nl> + * languages ; Java code should allow JNA to bind to a specific Callback <nl> + * interface instead by defining a return type or Structure field type . <nl> + * <nl> + * < p > The allocated instance represents a pointer to the native <nl> + * function pointer . <nl> + * <nl> + * @ param p <nl> + * Native function pointer <nl> + * @ param callFlags <nl> + * Function < a href = " # callflags " > call flags < / a > <nl> + * @ param encoding <nl> + * Encoding to use for conversion between Java and native <nl> + * strings . <nl> + * / <nl> + public static Function getFunction ( Pointer p , int callFlags , String encoding ) { <nl> + return new Function ( p , callFlags , encoding ) ; <nl> } <nl> <nl> / / Keep a reference to the NativeLibrary so it does not get garbage
diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 3712e12 . . 735370a 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 16 , 6 + 16 , 10 @ @ <nl> * Lesser General Public License for more details . <nl> * / <nl> <nl> + # include " dispatch . h " <nl> + <nl> + # include < string . h > <nl> + <nl> # if defined ( _ WIN32 ) <nl> # define WIN32 _ LEAN _ AND _ MEAN <nl> # include < windows . h > <nl> @ @ - 45 , 6 + 49 , 7 @ @ <nl> # else <nl> # include < dlfcn . h > <nl> # include < errno . h > <nl> + # include < assert . h > <nl> # define STRTYPE char * <nl> # ifdef USE _ DEFAULT _ LIBNAME _ ENCODING <nl> # define NAME2CSTR ( ENV , JSTR ) newCString ( ENV , JSTR ) <nl> @ @ - 53 , 8 + 58 , 21 @ @ <nl> # endif <nl> # define DEFAULT _ LOAD _ OPTS ( RTLD _ LAZY | RTLD _ GLOBAL ) <nl> # define LOAD _ LIBRARY ( NAME , OPTS ) dlopen ( NAME , OPTS ) <nl> - # define LOAD _ ERROR ( BUF , LEN ) ( snprintf ( BUF , LEN , " % s " , dlerror ( ) ) , BUF ) <nl> - # define STR _ ERROR ( CODE , BUF , LEN ) ( strerror _ r ( CODE , BUF , LEN ) , BUF ) <nl> + static inline char * LOAD _ ERROR ( char * buf , size _ t len ) { <nl> + const size _ t count = snprintf ( buf , len , " % s " , dlerror ( ) ) ; <nl> + assert ( count < = len & & " snprintf ( ) output has been truncated " ) ; <nl> + return buf ; <nl> + } <nl> + static inline char * STR _ ERROR ( int code , char * buf , size _ t len ) { <nl> + / / The conversion will fail if code is not a valid error code . <nl> + int err = strerror _ r ( code , buf , len ) ; <nl> + if ( err ) <nl> + / / Depending on glib version , " Unknown error " error code <nl> + / / may be returned or passed using errno . <nl> + err = strerror _ r ( err > 0 ? err : errno , buf , len ) ; <nl> + assert ( err = = 0 & & " strerror _ r ( ) conversion has failed " ) ; <nl> + return buf ; <nl> + } <nl> # define FREE _ LIBRARY ( HANDLE ) dlclose ( HANDLE ) <nl> # define FIND _ ENTRY ( HANDLE , NAME ) dlsym ( HANDLE , NAME ) <nl> # endif <nl> @ @ - 67 , 16 + 85 , 10 @ @ <nl> # endif <nl> <nl> # include < stdlib . h > <nl> - / / Force XSI - compliant strerror _ r ( http : / / unixhelp . ed . ac . uk / CGI / man - cgi ? strerror ) <nl> - # ifndef _ XOPEN _ SOURCE <nl> - # define _ XOPEN _ SOURCE 600 <nl> - # endif <nl> - # include < string . h > <nl> + # include < alloca . h > <nl> # include < wchar . h > <nl> # include < jni . h > <nl> <nl> - # include " dispatch . h " <nl> - <nl> # ifndef NO _ JAWT <nl> # include < jawt . h > <nl> # include < jawt _ md . h > <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index 824c3dd . . 9a5b9c0 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 36 , 6 + 36 , 7 @ @ <nl> # define GET _ LAST _ ERROR ( ) GetLastError ( ) <nl> # define SET _ LAST _ ERROR ( CODE ) SetLastError ( CODE ) <nl> # else <nl> + # define _ XOPEN _ SOURCE 600 <nl> # define GET _ LAST _ ERROR ( ) errno <nl> # define SET _ LAST _ ERROR ( CODE ) ( errno = ( CODE ) ) <nl> # endif / * _ WIN32 * /
diff - - git a / README . md b / README . md <nl> index 46253f5 . . e6fc025 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 37 , 6 + 37 , 7 @ @ JNA is a mature library with dozens of contributors and hundreds of commercial a <nl> - [ USB for Java ] ( https : / / launchpad . net / libusb4j ) by Mario Boikov . <nl> - [ Waffle ] ( https : / / github . com / dblock / waffle ) : Enables SSO on Windows in Java applications , by Daniel Doubrovkine . <nl> - [ leveldb - jna ] ( https : / / github . com / protonail / leveldb - jna ) : Cross - platform JNA based adapter for LevelDB ( used in [ Keylord ] ( http : / / protonail . com / products / keylord ) ) . <nl> + - [ Java OpenVR Bindings ] ( https : / / github . com / java - graphics / openvr ) . <nl> <nl> * Interesting Investigations / Experiments * <nl>
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> index 37dc3c8 . . 0f67e59 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> @ @ - 789 , 6 + 789 , 46 @ @ public interface User32 extends StdCallLibrary , WinUser , WinNT { <nl> void PostMessage ( HWND hWnd , int msg , WPARAM wParam , LPARAM lParam ) ; <nl> <nl> / * * <nl> + * Posts a message to the message queue of the specified thread . It returns <nl> + * without waiting for the thread to process the message . <nl> + * <nl> + * @ param idThread The identifier of the thread to which the message is to <nl> + * be posted . <nl> + * <nl> + * < p > The function fails if the specified thread does not have a <nl> + * message queue . The system creates a thread ' s message queue when the <nl> + * thread makes its first call to one of the User or GDI functions . < / p > <nl> + * <nl> + * < p > Message posting is subject to UIPI . The thread of a process can post <nl> + * messages only to posted - message queues of threads in processes of lesser <nl> + * or equal integrity level . < / p > <nl> + * <nl> + * < p > This thread must have the SE _ TCB _ NAME privilege to post a message to a <nl> + * thread that belongs to a process with the same locally unique identifier <nl> + * ( LUID ) but is in a different desktop . Otherwise , the function fails <nl> + * and returns ERROR _ INVALID _ THREAD _ ID . < / p > <nl> + * <nl> + * < p > This thread must either belong to the same desktop as the calling <nl> + * thread or to a process with the same LUID . Otherwise , the function <nl> + * fails and returns ERROR _ INVALID _ THREAD _ ID . < / p > <nl> + * <nl> + * @ param Msg The type of message to be posted . <nl> + * <nl> + * @ param wParam Additional message - specific information . <nl> + * <nl> + * @ param lParam Additional message - specific information . <nl> + * <nl> + * @ return If the function succeeds , the return value is nonzero . <nl> + * <nl> + * < p > If the function fails , the return value is zero . To get extended error <nl> + * information , call GetLastError . < / p > < p > GetLastError returns <nl> + * ERROR _ INVALID _ THREAD _ ID if idThread is not a valid thread identifier , or <nl> + * if the thread specified by idThread does not have a message queue . < / p > <nl> + * < p > GetLastError returns ERROR _ NOT _ ENOUGH _ QUOTA when the message limit is hit . < / p > <nl> + * / <nl> + int PostThreadMessage ( int idThread , int Msg , WPARAM wParam , LPARAM lParam ) ; <nl> + <nl> + / * * <nl> * This function indicates to Windows that a thread has made a request to <nl> * terminate ( quit ) . It is typically used in response to a WM _ DESTROY <nl> * message . <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / User32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / User32Util . java <nl> index ef43290 . . f0ebf67 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / User32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / User32Util . java <nl> @ @ - 16 , 8 + 16 , 20 @ @ import com . sun . jna . platform . win32 . WinDef . HINSTANCE ; <nl> import com . sun . jna . platform . win32 . WinDef . HMENU ; <nl> import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> import com . sun . jna . platform . win32 . WinDef . LPVOID ; <nl> + import com . sun . jna . platform . win32 . WinUser . MSG ; <nl> import com . sun . jna . platform . win32 . WinUser . RAWINPUTDEVICELIST ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> + import java . lang . reflect . InvocationHandler ; <nl> + import java . lang . reflect . InvocationTargetException ; <nl> + import java . lang . reflect . Method ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Collections ; <nl> + import java . util . concurrent . Callable ; <nl> + import java . util . concurrent . ExecutionException ; <nl> + import java . util . concurrent . Future ; <nl> + import java . util . concurrent . FutureTask ; <nl> + import java . util . logging . Level ; <nl> + import java . util . logging . Logger ; <nl> <nl> <nl> / * * <nl> @ @ - 76 , 4 + 88 , 131 @ @ public final class User32Util { <nl> <nl> return Arrays . asList ( records ) ; <nl> } <nl> + <nl> + / * * <nl> + * Helper class , that runs a windows message loop as a seperate thread . <nl> + * <nl> + * This is intended to be used in conjunction with APIs , that need a <nl> + * spinning message loop . One example for this are the DDE functions , that <nl> + * can only be used if a message loop is present . <nl> + * <nl> + * To enable interaction with the mainloop the MessageLoopThread allows to <nl> + * dispatch callables into the mainloop and let these Callables be invoked <nl> + * on the message thread . <nl> + * <nl> + * This implies , that the Callables should block the loop as short as possible . <nl> + * / <nl> + public static class MessageLoopThread extends Thread { <nl> + <nl> + public class Handler implements InvocationHandler { <nl> + <nl> + private final Object delegate ; <nl> + <nl> + public Handler ( Object delegate ) { <nl> + this . delegate = delegate ; <nl> + } <nl> + <nl> + public Object invoke ( final Object proxy , final Method method , final Object [ ] args ) throws Throwable { <nl> + try { <nl> + return MessageLoopThread . this . runOnThread ( new Callable < Object > ( ) { <nl> + public Object call ( ) throws Exception { <nl> + return method . invoke ( delegate , args ) ; <nl> + } <nl> + } ) ; <nl> + } catch ( InvocationTargetException ex ) { <nl> + Throwable cause = ex . getCause ( ) ; <nl> + if ( cause instanceof Exception ) { <nl> + StackTraceElement [ ] hiddenStack = cause . getStackTrace ( ) ; <nl> + cause . fillInStackTrace ( ) ; <nl> + StackTraceElement [ ] currentStack = cause . getStackTrace ( ) ; <nl> + StackTraceElement [ ] fullStack = new StackTraceElement [ currentStack . length + hiddenStack . length ] ; <nl> + System . arraycopy ( hiddenStack , 0 , fullStack , 0 , hiddenStack . length ) ; <nl> + System . arraycopy ( currentStack , 0 , fullStack , hiddenStack . length , currentStack . length ) ; <nl> + cause . setStackTrace ( fullStack ) ; <nl> + throw ( Exception ) cause ; <nl> + } else { <nl> + throw ex ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + private volatile int nativeThreadId = 0 ; <nl> + private volatile long javaThreadId = 0 ; <nl> + private final List < FutureTask > workQueue = Collections . synchronizedList ( new ArrayList < FutureTask > ( ) ) ; <nl> + <nl> + @ Override <nl> + public void run ( ) { <nl> + MSG msg = new WinUser . MSG ( ) ; <nl> + <nl> + / / Make sure message loop is prepared <nl> + User32 . INSTANCE . PeekMessage ( msg , null , 0 , 0 , 0 ) ; <nl> + javaThreadId = Thread . currentThread ( ) . getId ( ) ; <nl> + nativeThreadId = Kernel32 . INSTANCE . GetCurrentThreadId ( ) ; <nl> + <nl> + while ( User32 . INSTANCE . GetMessage ( msg , null , 0 , 0 ) ! = 0 ) { <nl> + while ( ! workQueue . isEmpty ( ) ) { <nl> + try { <nl> + FutureTask ft = workQueue . remove ( 0 ) ; <nl> + ft . run ( ) ; <nl> + } catch ( IndexOutOfBoundsException ex ) { <nl> + break ; <nl> + } <nl> + } <nl> + User32 . INSTANCE . TranslateMessage ( msg ) ; <nl> + User32 . INSTANCE . DispatchMessage ( msg ) ; <nl> + } <nl> + <nl> + while ( ! workQueue . isEmpty ( ) ) { <nl> + workQueue . remove ( 0 ) . cancel ( false ) ; <nl> + } <nl> + } <nl> + <nl> + public < V > Future < V > runAsync ( Callable < V > command ) { <nl> + while ( nativeThreadId = = 0 ) { <nl> + try { <nl> + Thread . sleep ( 20 ) ; <nl> + } catch ( InterruptedException ex ) { <nl> + Logger . getLogger ( MessageLoopThread . class . getName ( ) ) . log ( Level . SEVERE , null , ex ) ; <nl> + } <nl> + } <nl> + FutureTask < V > futureTask = new FutureTask < V > ( command ) ; <nl> + workQueue . add ( futureTask ) ; <nl> + User32 . INSTANCE . PostThreadMessage ( nativeThreadId , WinUser . WM _ USER , null , null ) ; <nl> + return futureTask ; <nl> + } <nl> + <nl> + public < V > V runOnThread ( Callable < V > callable ) throws Exception { <nl> + while ( javaThreadId = = 0 ) { <nl> + try { <nl> + Thread . sleep ( 20 ) ; <nl> + } catch ( InterruptedException ex ) { <nl> + Logger . getLogger ( MessageLoopThread . class . getName ( ) ) . log ( Level . SEVERE , null , ex ) ; <nl> + } <nl> + } <nl> + <nl> + if ( javaThreadId = = Thread . currentThread ( ) . getId ( ) ) { <nl> + return callable . call ( ) ; <nl> + } else { <nl> + <nl> + Future < V > ft = runAsync ( callable ) ; <nl> + try { <nl> + return ft . get ( ) ; <nl> + } catch ( InterruptedException ex ) { <nl> + throw ex ; <nl> + } catch ( ExecutionException ex ) { <nl> + Throwable cause = ex . getCause ( ) ; <nl> + if ( cause instanceof Exception ) { <nl> + throw ( Exception ) cause ; <nl> + } else { <nl> + throw ex ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + public void exit ( ) { <nl> + User32 . INSTANCE . PostThreadMessage ( nativeThreadId , WinUser . WM _ QUIT , null , null ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> index df254fd . . cbf0beb 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> @ @ - 543 , 6 + 543 , 12 @ @ public interface WinUser extends WinDef { <nl> * associated with the thread that registered the hot key . <nl> * / <nl> int WM _ HOTKEY = 0x0312 ; <nl> + <nl> + / * * <nl> + * Used to define private messages for use by private window classes , <nl> + * usually of the form WM _ USER + x , where x is an integer value . <nl> + * / <nl> + int WM _ USER = 0x0400 ; <nl> <nl> int WM _ KEYUP = 257 ; <nl> int WM _ SYSKEYDOWN = 260 ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8407152 . . 014fb52 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 55 , 6 + 55 , 8 @ @ Features <nl> * [ # 654 ] ( https : / / github . com / java - native - access / jna / pull / 654 ) : Support named arguments for ` com . sun . jna . platform . win32 . COM . util . CallbackProxy ` based callbacks - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 659 ] ( https : / / github . com / java - native - access / jna / issues / 659 ) : Enable LCID ( locale ) override for ` com . sun . jna . platform . win32 . COM . util . ProxyObject ` - based COM calls - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 665 ] ( https : / / github . com / java - native - access / jna / pull / 665 ) : Added ` XSetWMProtocols ` and ` XGetWMProtocols ` to ` com . sun . jna . platform . unix . X11 ` - [ @ zainab - ali ] ( https : / / github . com / zainab - ali ) . <nl> + * [ # 667 ] ( https : / / github . com / java - native - access / jna / pull / 667 ) : Added SetFileSecurity , GetSecurityInfo and SetSecurityInfo to ` com . sun . jna . platform . win32 . Advapi32 ` - [ @ amarcionek ] ( https : / / github . com / amarcionek ) . <nl> + * [ # 667 ] ( https : / / github . com / java - native - access / jna / pull / 667 ) : Added NtSetSecurityObject and NtQuerySecurityObject to ` com . sun . jna . platform . win32 . NtDll ` - [ @ amarcionek ] ( https : / / github . com / amarcionek ) . <nl> * [ # 680 ] ( https : / / github . com / java - native - access / jna / pull / 680 ) : Added ` SetCurrentProcessExplicitAppUserModelID ` and ` GetCurrentProcessExplicitAppUserModelID ` to ` com . sun . jna . platform . win32 . Shell32 ` for setting the [ System . AppUserModel . ID ] ( https : / / msdn . microsoft . com / en - us / library / windows / desktop / dd391569 . aspx ) of the host process - [ @ rednoah ] ( https : / / github . com / rednoah ) . <nl> <nl> Bug Fixes <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> index 520d2eb . . a086bb2 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> @ @ - 1635 , 6 + 1635 , 144 @ @ public interface Advapi32 extends StdCallLibrary { <nl> IntByReference lpnLengthNeeded ) ; <nl> <nl> / * * <nl> + * The SetFileSecurity function sets the security of a file or directory object . <nl> + * This function is obsolete . Use the SetNamedSecurityInfo function instead . <nl> + * <nl> + * @ param lpFileName <nl> + * A pointer to a null - terminated string that specifies the file or directory for which security is set . <nl> + * Note that security applied to a directory is not inherited by its children . <nl> + * @ param SecurityInformation <nl> + * Specifies a SECURITY _ INFORMATION structure that identifies the contents of the security descriptor <nl> + * pointed to by the pSecurityDescriptor parameter . <nl> + * @ param pSecurityDescriptor <nl> + * A pointer to a SECURITY _ DESCRIPTOR structure . <nl> + * @ return <nl> + * If the function succeeds , the function returns nonzero . If the function fails , it returns zero . To get <nl> + * extended error information , call GetLastError . <nl> + * / <nl> + boolean SetFileSecurity ( String lpFileName , int SecurityInformation , Pointer pSecurityDescriptor ) ; <nl> + <nl> + / * * <nl> + * The GetSecurityInfo function retrieves a copy of the security descriptor for an object specified by a handle . <nl> + * <nl> + * @ param handle [ in ] <nl> + * A handle to the object from which to retrieve security information . <nl> + * @ param ObjectType [ in ] <nl> + * SE _ OBJECT _ TYPE enumeration value that indicates the type of object . <nl> + * @ param SecurityInfo [ in ] <nl> + * A set of bit flags that indicate the type of security information to retrieve . See WinNT * _ SECURITY _ INFORMATION <nl> + * @ param ppsidOwner [ out , optional ] <nl> + * A pointer to a variable that receives a pointer to the owner SID in the security descriptor returned <nl> + * in ppSecurityDescriptor . The returned pointer is valid only if you set the OWNER _ SECURITY _ INFORMATION flag . <nl> + * This parameter can be NULL if you do not need the owner SID . <nl> + * @ param ppsidGroup [ in , optional ] <nl> + * A pointer to a variable that receives a pointer to the primary group SID in the returned security descriptor . <nl> + * The returned pointer is valid only if you set the GROUP _ SECURITY _ INFORMATION flag . This parameter can be NULL <nl> + * if you do not need the group SID . <nl> + * @ param ppDacl [ in , optional ] <nl> + * A pointer to a variable that receives a pointer to the DACL in the returned security descriptor . The returned <nl> + * pointer is valid only if you set the DACL _ SECURITY _ INFORMATION flag . This parameter can be NULL if you do not <nl> + * need the DACL . <nl> + * @ param ppSacl [ in , optional ] <nl> + * A pointer to a variable that receives a pointer to the SACL in the returned security descriptor . The returned <nl> + * pointer is valid only if you set the SACL _ SECURITY _ INFORMATION flag . This parameter can be NULL if you do not <nl> + * need the SACL . <nl> + * @ param ppSecurityDescriptor <nl> + * A pointer to a variable that receives a pointer to the security descriptor of the object . When you have finished <nl> + * using the pointer , free the returned buffer by calling the LocalFree function . <nl> + * This parameter is required if any one of the ppsidOwner , ppsidGroup , ppDacl , or ppSacl parameters is not NULL . <nl> + * @ return whether the call succeeded . A nonzero return is a failure . <nl> + * <nl> + * < p > < b > NOTES : < / b > < / p > <nl> + * < p > 1 . If the ppsidOwner , ppsidGroup , ppDacl , and ppSacl parameters are non - NULL , and the SecurityInfo parameter specifies <nl> + * that they be retrieved from the object , those parameters will point to the corresponding parameters in the security descriptor <nl> + * returned in ppSecurityDescriptor . < / p > <nl> + * < p > 2 . To read the owner , group , or DACL from the object ' s security descriptor , the calling process must have been granted <nl> + * READ _ CONTROL access when the handle was opened . To get READ _ CONTROL access , the caller must be the owner of the object or <nl> + * the object ' s DACL must grant the access . < / p > <nl> + * < p > 3 . To read the SACL from the security descriptor , the calling process must have been granted ACCESS _ SYSTEM _ SECURITY access <nl> + * when the handle was opened . The proper way to get this access is to enable the SE _ SECURITY _ NAME privilege in the caller ' s <nl> + * current token , open the handle for ACCESS _ SYSTEM _ SECURITY access , and then disable the privilege . < / p > <nl> + * < p > 4 . If the supplied handle was opened with an ACCESS _ MASK value of MAXIMUM _ ALLOWED , <nl> + * then the SetSecurityInfo function will not propagate ACEs to children . < / p > <nl> + * / <nl> + int GetSecurityInfo ( HANDLE handle , <nl> + int ObjectType , <nl> + int SecurityInfo , <nl> + PointerByReference ppsidOwner , <nl> + PointerByReference ppsidGroup , <nl> + PointerByReference ppDacl , <nl> + PointerByReference ppSacl , <nl> + PointerByReference ppSecurityDescriptor ) ; <nl> + <nl> + / * * <nl> + * The SetSecurityInfo function sets specified security information in <nl> + * the security descriptor of a specified object . The caller identifies the <nl> + * object by a handle . <nl> + * <nl> + * @ param handle [ in ] <nl> + * A handle to the object for which to set security information . <nl> + * @ param ObjectType [ in ] <nl> + * A value of the SE _ OBJECT _ TYPE enumeration that indicates the type <nl> + * of object named by the pObjectName parameter . <nl> + * @ param SecurityInfo [ in ] <nl> + * A set of bit flags that indicate the type of security <nl> + * information to set . See WinNT * _ SECURITY _ INFORMATION <nl> + * @ param ppsidOwner [ in , optional ] <nl> + * A pointer to a SID structure that identifies the owner of the object . <nl> + * If the caller does not have the SeRestorePrivilege constant <nl> + * ( see Privilege Constants ) , this SID must be contained in the <nl> + * caller ' s token , and must have the SE _ GROUP _ OWNER permission enabled . <nl> + * The SecurityInfo parameter must include the OWNER _ SECURITY _ INFORMATION <nl> + * flag . To set the owner , the caller must have WRITE _ OWNER access to <nl> + * the object or have the SE _ TAKE _ OWNERSHIP _ NAME privilege enabled . <nl> + * If you are not setting the owner SID , this parameter can be NULL . <nl> + * @ param ppsidGroup [ in , optional ] <nl> + * A pointer to a SID that identifies the primary group of the object . <nl> + * The SecurityInfo parameter must include the GROUP _ SECURITY _ INFORMATION <nl> + * flag . If you are not setting the primary group SID , this parameter <nl> + * can be NULL . <nl> + * @ param ppDacl [ in , optional ] <nl> + * A pointer to the new DACL for the object . The SecurityInfo parameter <nl> + * must include the DACL _ SECURITY _ INFORMATION flag . The caller must have <nl> + * WRITE _ DAC access to the object or be the owner of the object . If you <nl> + * are not setting the DACL , this parameter can be NULL . <nl> + * @ param ppSacl [ in , optional ] <nl> + * A pointer to the new SACL for the object . The SecurityInfo parameter <nl> + * must include any of the following flags : SACL _ SECURITY _ INFORMATION , <nl> + * LABEL _ SECURITY _ INFORMATION , ATTRIBUTE _ SECURITY _ INFORMATION , <nl> + * SCOPE _ SECURITY _ INFORMATION , or BACKUP _ SECURITY _ INFORMATION . <nl> + * If setting SACL _ SECURITY _ INFORMATION or SCOPE _ SECURITY _ INFORMATION , <nl> + * the caller must have the SE _ SECURITY _ NAME privilege enabled . If <nl> + * you are not setting the SACL , this parameter can be NULL . <nl> + * @ return whether the call succeeded . A nonzero return is a failure . <nl> + * <nl> + * < p > < b > NOTES : < / b > < / p > <nl> + * < p > 1 . If you are setting the discretionary access control list ( DACL ) or any elements <nl> + * in the system access control list ( SACL ) of an object , the system automatically <nl> + * propagates any inheritable access control entries ( ACEs ) to existing child objects , <nl> + * according to the ACE inheritance rules . < / p > <nl> + * < p > 2 . The SetSecurityInfo function does not reorder access - allowed or access - denied <nl> + * ACEs based on the preferred order . When propagating inheritable ACEs to existing <nl> + * child objects , SetSecurityInfo puts inherited ACEs in order after all of the <nl> + * noninherited ACEs in the DACLs of the child objects . < / p > <nl> + * < p > 3 . If share access to the children of the object is not available , this function <nl> + * will not propagate unprotected ACEs to the children . For example , if a directory <nl> + * is opened with exclusive access , the operating system will not propagate unprotected <nl> + * ACEs to the subdirectories or files of that directory when the security on the <nl> + * directory is changed . < / p > <nl> + * < p > 4 . If the supplied handle was opened with an ACCESS _ MASK value of MAXIMUM _ ALLOWED , <nl> + * then the SetSecurityInfo function will not propagate ACEs to children . < / p > <nl> + * / <nl> + int SetSecurityInfo ( HANDLE handle , <nl> + int ObjectType , <nl> + int SecurityInfo , <nl> + Pointer ppsidOwner , <nl> + Pointer ppsidGroup , <nl> + Pointer ppDacl , <nl> + Pointer ppSacl ) ; <nl> + <nl> + / * * <nl> * The GetNamedSecurityInfo function retrieves a copy of the security <nl> * descriptor for an object specified by name <nl> * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / NtDll . java b / contrib / platform / src / com / sun / jna / platform / win32 / NtDll . java <nl> index 26b74e1 . . 417f38b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / NtDll . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / NtDll . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> package com . sun . jna . platform . win32 ; <nl> <nl> import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> @ @ - 51 , 4 + 52 , 56 @ @ public interface NtDll extends StdCallLibrary { <nl> 	 * / <nl> 	 public int ZwQueryKey ( HANDLE KeyHandle , int KeyInformationClass , <nl> 	 	 	 Structure KeyInformation , int Length , IntByReference ResultLength ) ; <nl> + <nl> + / * * <nl> + * The NtSetSecurityObject routine sets an object ' s security state . <nl> + * @ param handle [ in ] <nl> + * Handle for the object whose security state is to be set . This handle must have the access <nl> + * specified in the Meaning column of the table shown in the description of the <nl> + * SecurityInformation parameter . <nl> + * @ param SecurityInformation [ in ] <nl> + * SECURITY _ INFORMATION value specifying the information to be set . Can be a combination of <nl> + * one or more of the following : <nl> + * DACL _ SECURITY _ INFORMATION <nl> + * Indicates the discretionary access control list ( DACL ) of the object is to be set . Requires WRITE _ DAC access . <nl> + * GROUP _ SECURITY _ INFORMATION <nl> + * Indicates the primary group identifier of the object is to be set . Requires WRITE _ OWNER access . <nl> + * OWNER _ SECURITY _ INFORMATION <nl> + * Indicates the owner identifier of the object is to be set . Requires WRITE _ OWNER access . <nl> + * SACL _ SECURITY _ INFORMATION <nl> + * Indicates the system ACL ( SACL ) of the object is to be set . Requires ACCESS _ SYSTEM _ SECURITY access . <nl> + * @ param pSecurityDescriptor [ in ] <nl> + * Pointer to the security descriptor to be set for the object . <nl> + * @ return <nl> + * NtSetSecurityObject returns STATUS _ SUCCESS or an appropriate error status . <nl> + * / <nl> + public int NtSetSecurityObject ( HANDLE handle , int SecurityInformation , Pointer pSecurityDescriptor ) ; <nl> + <nl> + / * * <nl> + * The NtQuerySecurityObject routine retrieves a copy of an object ' s security descriptor . <nl> + * <nl> + * @ param handle [ in ] <nl> + * Handle for the object whose security descriptor is to be queried . This handle must have the access specified <nl> + * in the Meaning column of the table shown in the description of the SecurityInformation parameter . <nl> + * @ param SecurityInformation [ in ] <nl> + * Pointer to a SECURITY _ INFORMATION value specifying the information to be queried . Can be a combination of <nl> + * one or more of the following : <nl> + * DACL _ SECURITY _ INFORMATION <nl> + * Indicates the discretionary access control list ( DACL ) of the object is to be set . Requires WRITE _ DAC access . <nl> + * GROUP _ SECURITY _ INFORMATION <nl> + * Indicates the primary group identifier of the object is to be set . Requires WRITE _ OWNER access . <nl> + * OWNER _ SECURITY _ INFORMATION <nl> + * Indicates the owner identifier of the object is to be set . Requires WRITE _ OWNER access . <nl> + * SACL _ SECURITY _ INFORMATION <nl> + * Indicates the system ACL ( SACL ) of the object is to be set . Requires ACCESS _ SYSTEM _ SECURITY access . <nl> + * @ param SecurityDescriptor [ out ] <nl> + * Pointer to the security descriptor to be set for the object . <nl> + * @ param Length [ in ] <nl> + * Size , in bytes , of the buffer pointed to by SecurityDescriptor . <nl> + * @ param LengthNeeded [ in ] <nl> + * Pointer to a caller - allocated variable that receives the number of bytes required to store the copied security descriptor . <nl> + * @ return <nl> + * NtQuerySecurityObject returns STATUS _ SUCCESS or an appropriate error status . <nl> + * / <nl> + public int NtQuerySecurityObject ( HANDLE handle , int SecurityInformation , Pointer SecurityDescriptor , int Length , IntByReference LengthNeeded ) ; <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> index 02bf241 . . beaeef3 100755 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> @ @ - 1005 , 6 + 1005 , 200 @ @ public class Advapi32Test extends TestCase { <nl> 	 assertTrue ( Advapi32 . INSTANCE . RevertToSelf ( ) ) ; <nl> } <nl> <nl> + public void testGetSetFileSecurityNoSACL ( ) throws Exception { <nl> + int infoType = OWNER _ SECURITY _ INFORMATION <nl> + | GROUP _ SECURITY _ INFORMATION <nl> + | DACL _ SECURITY _ INFORMATION ; <nl> + <nl> + int memSize = 64 * 1024 ; <nl> + Memory memorySecurity = new Memory ( memSize ) ; <nl> + IntByReference sizeNeeded = new IntByReference ( 0 ) ; <nl> + / / create a temp file <nl> + File file = createTempFile ( ) ; <nl> + String filePath = file . getAbsolutePath ( ) ; <nl> + <nl> + try { <nl> + <nl> + assertEquals ( " GetFileSecurity ( " + filePath + " ) " , true , <nl> + Advapi32 . INSTANCE . GetFileSecurity ( <nl> + filePath , <nl> + infoType , <nl> + memorySecurity , <nl> + memSize , <nl> + sizeNeeded ) ) ; <nl> + assertEquals ( " SetFileSecurity ( " + filePath + " ) " , true , <nl> + Advapi32 . INSTANCE . SetFileSecurity ( <nl> + filePath , <nl> + infoType , <nl> + memorySecurity ) ) ; <nl> + } finally { <nl> + file . delete ( ) ; <nl> + } <nl> + } <nl> + <nl> + public void testGetSetSecurityInfoNoSACL ( ) throws Exception { <nl> + int infoType = OWNER _ SECURITY _ INFORMATION <nl> + | GROUP _ SECURITY _ INFORMATION <nl> + | DACL _ SECURITY _ INFORMATION ; <nl> + <nl> + PointerByReference ppsidOwner = new PointerByReference ( ) ; <nl> + PointerByReference ppsidGroup = new PointerByReference ( ) ; <nl> + PointerByReference ppDacl = new PointerByReference ( ) ; <nl> + PointerByReference ppSecurityDescriptor = new PointerByReference ( ) ; <nl> + / / create a temp file <nl> + File file = createTempFile ( ) ; <nl> + String filePath = file . getAbsolutePath ( ) ; <nl> + <nl> + HANDLE hFile = Kernel32 . INSTANCE . CreateFile ( <nl> + filePath , <nl> + WinNT . GENERIC _ ALL | WinNT . WRITE _ OWNER | WinNT . WRITE _ DAC , <nl> + WinNT . FILE _ SHARE _ READ , <nl> + new WinBase . SECURITY _ ATTRIBUTES ( ) , <nl> + WinNT . OPEN _ EXISTING , <nl> + WinNT . FILE _ ATTRIBUTE _ NORMAL , <nl> + null ) ; <nl> + assertFalse ( " Failed to create file handle : " + filePath , WinBase . INVALID _ HANDLE _ VALUE . equals ( hFile ) ) ; <nl> + <nl> + try { <nl> + try { <nl> + <nl> + assertEquals ( " GetSecurityInfo ( " + filePath + " ) " , 0 , <nl> + Advapi32 . INSTANCE . GetSecurityInfo ( <nl> + hFile , <nl> + AccCtrl . SE _ OBJECT _ TYPE . SE _ FILE _ OBJECT , <nl> + infoType , <nl> + ppsidOwner , <nl> + ppsidGroup , <nl> + ppDacl , <nl> + null , <nl> + ppSecurityDescriptor ) ) ; <nl> + <nl> + assertEquals ( " SetSecurityInfo ( " + filePath + " ) " , 0 , <nl> + Advapi32 . INSTANCE . SetSecurityInfo ( <nl> + hFile , <nl> + AccCtrl . SE _ OBJECT _ TYPE . SE _ FILE _ OBJECT , <nl> + infoType , <nl> + ppsidOwner . getValue ( ) , <nl> + ppsidGroup . getValue ( ) , <nl> + ppDacl . getValue ( ) , <nl> + null ) ) ; <nl> + } finally { <nl> + Kernel32 . INSTANCE . CloseHandle ( hFile ) ; <nl> + file . delete ( ) ; <nl> + } <nl> + } finally { <nl> + Kernel32Util . freeLocalMemory ( ppSecurityDescriptor . getValue ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + public void testGetSetSecurityInfoForFileWithSACL ( ) throws Exception { <nl> + boolean impersontating = false ; <nl> + <nl> + HANDLEByReference phToken = new HANDLEByReference ( ) ; <nl> + HANDLEByReference phTokenDuplicate = new HANDLEByReference ( ) ; <nl> + try { <nl> + / / open thread or process token , elevate <nl> + if ( ! Advapi32 . INSTANCE . OpenThreadToken ( <nl> + Kernel32 . INSTANCE . GetCurrentThread ( ) , <nl> + TOKEN _ ADJUST _ PRIVILEGES , <nl> + false , <nl> + phToken ) ) <nl> + { <nl> + assertEquals ( W32Errors . ERROR _ NO _ TOKEN , Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + / / OpenThreadToken may fail with W32Errors . ERROR _ NO _ TOKEN if current thread is anonymous . When this happens , <nl> + / / we need to open the process token to duplicate it , then set our thread token . <nl> + assertTrue ( Advapi32 . INSTANCE . OpenProcessToken ( Kernel32 . INSTANCE . GetCurrentProcess ( ) , TOKEN _ DUPLICATE , phToken ) ) ; <nl> + / / Process token opened , now duplicate <nl> + assertTrue ( Advapi32 . INSTANCE . DuplicateTokenEx ( <nl> + phToken . getValue ( ) , <nl> + TOKEN _ ADJUST _ PRIVILEGES | TOKEN _ IMPERSONATE , <nl> + null , <nl> + SECURITY _ IMPERSONATION _ LEVEL . SecurityImpersonation , <nl> + TOKEN _ TYPE . TokenImpersonation , <nl> + phTokenDuplicate ) ) ; <nl> + / / And set thread token . <nl> + assertTrue ( Advapi32 . INSTANCE . SetThreadToken ( null , phTokenDuplicate . getValue ( ) ) ) ; <nl> + impersontating = true ; <nl> + } <nl> + <nl> + / / Which token to adjust depends on whether we had to impersonate or not . <nl> + HANDLE tokenAdjust = impersontating ? phTokenDuplicate . getValue ( ) : phToken . getValue ( ) ; <nl> + <nl> + WinNT . TOKEN _ PRIVILEGES tp = new WinNT . TOKEN _ PRIVILEGES ( 1 ) ; <nl> + WinNT . LUID pLuid = new WinNT . LUID ( ) ; <nl> + <nl> + assertTrue ( Advapi32 . INSTANCE . LookupPrivilegeValue ( null , SE _ SECURITY _ NAME , pLuid ) ) ; <nl> + tp . Privileges [ 0 ] = new WinNT . LUID _ AND _ ATTRIBUTES ( pLuid , new DWORD ( WinNT . SE _ PRIVILEGE _ ENABLED ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . AdjustTokenPrivileges ( tokenAdjust , false , tp , 0 , null , null ) ) ; <nl> + <nl> + assertTrue ( Advapi32 . INSTANCE . LookupPrivilegeValue ( null , SE _ RESTORE _ NAME , pLuid ) ) ; <nl> + tp . Privileges [ 0 ] = new WinNT . LUID _ AND _ ATTRIBUTES ( pLuid , new DWORD ( WinNT . SE _ PRIVILEGE _ ENABLED ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . AdjustTokenPrivileges ( tokenAdjust , false , tp , 0 , null , null ) ) ; <nl> + <nl> + / / create a temp file <nl> + File file = createTempFile ( ) ; <nl> + int infoType = OWNER _ SECURITY _ INFORMATION <nl> + | GROUP _ SECURITY _ INFORMATION <nl> + | DACL _ SECURITY _ INFORMATION <nl> + | SACL _ SECURITY _ INFORMATION ; <nl> + <nl> + PointerByReference ppsidOwner = new PointerByReference ( ) ; <nl> + PointerByReference ppsidGroup = new PointerByReference ( ) ; <nl> + PointerByReference ppDacl = new PointerByReference ( ) ; <nl> + PointerByReference ppSacl = new PointerByReference ( ) ; <nl> + PointerByReference ppSecurityDescriptor = new PointerByReference ( ) ; <nl> + String filePath = file . getAbsolutePath ( ) ; <nl> + HANDLE hFile = WinBase . INVALID _ HANDLE _ VALUE ; <nl> + <nl> + try { <nl> + try { <nl> + hFile = Kernel32 . INSTANCE . CreateFile ( <nl> + filePath , <nl> + WinNT . ACCESS _ SYSTEM _ SECURITY | WinNT . GENERIC _ WRITE | WinNT . WRITE _ OWNER | WinNT . WRITE _ DAC , <nl> + WinNT . FILE _ SHARE _ READ , <nl> + new WinBase . SECURITY _ ATTRIBUTES ( ) , <nl> + WinNT . OPEN _ EXISTING , <nl> + WinNT . FILE _ ATTRIBUTE _ NORMAL , <nl> + null ) ; <nl> + assertEquals ( " GetSecurityInfo ( " + filePath + " ) " , 0 , <nl> + Advapi32 . INSTANCE . GetSecurityInfo ( <nl> + hFile , <nl> + AccCtrl . SE _ OBJECT _ TYPE . SE _ FILE _ OBJECT , <nl> + infoType , <nl> + ppsidOwner , <nl> + ppsidGroup , <nl> + ppDacl , <nl> + ppSacl , <nl> + ppSecurityDescriptor ) ) ; <nl> + assertEquals ( " SetSecurityInfo ( " + filePath + " ) " , 0 , <nl> + Advapi32 . INSTANCE . SetSecurityInfo ( <nl> + hFile , <nl> + AccCtrl . SE _ OBJECT _ TYPE . SE _ FILE _ OBJECT , <nl> + infoType , <nl> + ppsidOwner . getValue ( ) , <nl> + ppsidGroup . getValue ( ) , <nl> + ppDacl . getValue ( ) , <nl> + ppSacl . getValue ( ) ) ) ; <nl> + } finally { <nl> + if ( hFile ! = WinBase . INVALID _ HANDLE _ VALUE ) <nl> + Kernel32 . INSTANCE . CloseHandle ( hFile ) ; <nl> + file . delete ( ) ; <nl> + } <nl> + } finally { <nl> + Kernel32Util . freeLocalMemory ( ppSecurityDescriptor . getValue ( ) ) ; <nl> + } <nl> + <nl> + if ( impersontating ) { <nl> + assertTrue ( " SetThreadToken " , Advapi32 . INSTANCE . SetThreadToken ( null , null ) ) ; <nl> + } <nl> + else { <nl> + tp . Privileges [ 0 ] = new WinNT . LUID _ AND _ ATTRIBUTES ( pLuid , new DWORD ( 0 ) ) ; <nl> + assertTrue ( " AdjustTokenPrivileges " , Advapi32 . INSTANCE . AdjustTokenPrivileges ( tokenAdjust , false , tp , 0 , null , null ) ) ; <nl> + } <nl> + } finally { <nl> + Kernel32Util . closeHandleRefs ( phToken , phTokenDuplicate ) ; <nl> + } <nl> + } <nl> <nl> public void testGetNamedSecurityInfoForFileNoSACL ( ) throws Exception { <nl> int infoType = OWNER _ SECURITY _ INFORMATION <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / NtDllTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / NtDllTest . java <nl> index bf832a2 . . 378e77a 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / NtDllTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / NtDllTest . java <nl> @ @ - 12 , 13 + 12 , 22 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> - import junit . framework . TestCase ; <nl> + import static com . sun . jna . platform . win32 . WinNT . DACL _ SECURITY _ INFORMATION ; <nl> + import static com . sun . jna . platform . win32 . WinNT . GROUP _ SECURITY _ INFORMATION ; <nl> + import static com . sun . jna . platform . win32 . WinNT . OWNER _ SECURITY _ INFORMATION ; <nl> + <nl> + import java . io . File ; <nl> + import java . io . FileWriter ; <nl> <nl> + import com . sun . jna . Memory ; <nl> import com . sun . jna . platform . win32 . Wdm . KEY _ BASIC _ INFORMATION ; <nl> import com . sun . jna . platform . win32 . Wdm . KEY _ INFORMATION _ CLASS ; <nl> + import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . platform . win32 . WinReg . HKEYByReference ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> <nl> + import junit . framework . TestCase ; <nl> + <nl> / * * <nl> * @ author dblock [ at ] dblock [ dot ] org <nl> * / <nl> @ @ - 49 , 4 + 58 , 63 @ @ public class NtDllTest extends TestCase { <nl> 	 / / close key <nl> 	 assertEquals ( W32Errors . ERROR _ SUCCESS , Advapi32 . INSTANCE . RegCloseKey ( phKey . getValue ( ) ) ) ; 	 	 	 	 <nl> } <nl> + <nl> + public void testNtQuerySetSecurityObjectNoSACL ( ) throws Exception { <nl> + int infoType = OWNER _ SECURITY _ INFORMATION <nl> + | GROUP _ SECURITY _ INFORMATION <nl> + | DACL _ SECURITY _ INFORMATION ; <nl> + <nl> + / / create a temp file <nl> + File file = createTempFile ( ) ; <nl> + String filePath = file . getAbsolutePath ( ) ; <nl> + HANDLE hFile = WinBase . INVALID _ HANDLE _ VALUE ; <nl> + <nl> + try { <nl> + hFile = Kernel32 . INSTANCE . CreateFile ( <nl> + filePath , <nl> + WinNT . GENERIC _ WRITE | WinNT . WRITE _ OWNER | WinNT . WRITE _ DAC , <nl> + WinNT . FILE _ SHARE _ READ , <nl> + new WinBase . SECURITY _ ATTRIBUTES ( ) , <nl> + WinNT . OPEN _ EXISTING , <nl> + WinNT . FILE _ ATTRIBUTE _ NORMAL , <nl> + null ) ; <nl> + assertFalse ( " Failed to create file handle : " + filePath , WinBase . INVALID _ HANDLE _ VALUE . equals ( hFile ) ) ; <nl> + <nl> + int Length = 64 * 1024 ; <nl> + Memory SecurityDescriptor = new Memory ( Length ) ; <nl> + IntByReference LengthNeeded = new IntByReference ( ) ; <nl> + <nl> + assertEquals ( " NtQuerySecurityObject ( " + filePath + " ) " , 0 , <nl> + NtDll . INSTANCE . NtQuerySecurityObject ( <nl> + hFile , <nl> + infoType , <nl> + SecurityDescriptor , <nl> + Length , <nl> + LengthNeeded ) ) ; <nl> + assertTrue ( LengthNeeded . getValue ( ) > 0 ) ; <nl> + assertTrue ( LengthNeeded . getValue ( ) < 64 * 1024 ) ; <nl> + assertEquals ( " NtSetSecurityObject ( " + filePath + " ) " , 0 , <nl> + NtDll . INSTANCE . NtSetSecurityObject ( <nl> + hFile , <nl> + infoType , <nl> + SecurityDescriptor ) ) ; <nl> + } finally { <nl> + if ( hFile ! = WinBase . INVALID _ HANDLE _ VALUE ) <nl> + Kernel32 . INSTANCE . CloseHandle ( hFile ) ; <nl> + file . delete ( ) ; <nl> + } <nl> + } <nl> + <nl> + private File createTempFile ( ) throws Exception { <nl> + String filePath = System . getProperty ( " java . io . tmpdir " ) + System . nanoTime ( ) <nl> + + " . text " ; <nl> + File file = new File ( filePath ) ; <nl> + file . createNewFile ( ) ; <nl> + FileWriter fileWriter = new FileWriter ( file ) ; <nl> + for ( int i = 0 ; i < 1000 ; i + + ) { <nl> + fileWriter . write ( " Sample text " + i + System . getProperty ( " line . separator " ) ) ; <nl> + } <nl> + fileWriter . close ( ) ; <nl> + return file ; <nl> + } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 1e01d5b . . 8407152 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 76 , 6 + 76 , 7 @ @ Bug Fixes <nl> * [ # 674 ] ( https : / / github . com / java - native - access / jna / pull / 674 ) : Update references to Apache License as requested by issue # 673 [ @ bhamail ] ( https : / / github . com / bhamail ) <nl> * [ # 636 ] ( https : / / github . com / java - native - access / jna / issues / 636 ) : Staticly link visual c + + runtime when building with MSVC - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 624 ] ( https : / / github . com / java - native - access / jna / issues / 624 ) : WinDef . DWORD getLow ( ) & getHigh ( ) using incorrect bit mask - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 668 ] ( https : / / github . com / java - native - access / jna / issues / 668 ) : Correct typemapper used for structures defined in ` com . sun . jna . platform . win32 . DsGetDC ` , ` com . sun . jna . platform . win32 . LMAccess ` , ` com . sun . jna . platform . win32 . LMShare ` , ` com . sun . jna . platform . win32 . Sspi ` , ` com . sun . jna . platform . win32 . WinBase ` , ` com . sun . jna . platform . win32 . WinCrypt ` , ` com . sun . jna . platform . win32 . WinUser ` and ` com . sun . jna . platform . win32 . Winnetwk ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 4 . 2 . 1 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / DsGetDC . java b / contrib / platform / src / com / sun / jna / platform / win32 / DsGetDC . java <nl> index cb2836a . . a979b41 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / DsGetDC . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / DsGetDC . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> import com . sun . jna . platform . win32 . Guid . GUID ; <nl> import com . sun . jna . platform . win32 . WinNT . PSID ; <nl> + import com . sun . jna . win32 . W32APITypeMapper ; <nl> <nl> / * * <nl> * Ported from DsGetDC . h . Windows SDK 6 . 0a <nl> @ @ - 107 , 11 + 108 , 11 @ @ public interface DsGetDC { <nl> public String ClientSiteName ; <nl> <nl> public DOMAIN _ CONTROLLER _ INFO ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . DEFAULT ) ; <nl> } <nl> <nl> public DOMAIN _ CONTROLLER _ INFO ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . DEFAULT ) ; <nl> read ( ) ; <nl> } <nl> <nl> @ @ - 235 , 11 + 236 , 11 @ @ public interface DsGetDC { <nl> } <nl> <nl> public DS _ DOMAIN _ TRUSTS ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . DEFAULT ) ; <nl> } <nl> <nl> public DS _ DOMAIN _ TRUSTS ( Pointer p ) { <nl> - super ( p ) ; <nl> + super ( p , Structure . ALIGN _ DEFAULT , W32APITypeMapper . DEFAULT ) ; <nl> read ( ) ; <nl> } <nl> } ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / LMAccess . java b / contrib / platform / src / com / sun / jna / platform / win32 / LMAccess . java <nl> index e0eb6ae . . dcaacf0 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / LMAccess . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / LMAccess . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ import java . util . List ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> import com . sun . jna . platform . win32 . WinNT . PSID ; <nl> + import com . sun . jna . win32 . W32APITypeMapper ; <nl> <nl> / * * <nl> * Ported from LMAccess . h . <nl> @ @ - 31 , 11 + 32 , 11 @ @ public interface LMAccess { <nl> public String lgrui0 _ name ; <nl> <nl> public LOCALGROUP _ INFO _ 0 ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . UNICODE ) ; <nl> } <nl> <nl> public LOCALGROUP _ INFO _ 0 ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . UNICODE ) ; <nl> read ( ) ; <nl> } <nl> <nl> @ @ - 52 , 11 + 53 , 11 @ @ public interface LMAccess { <nl> public String lgrui1 _ comment ; <nl> <nl> public LOCALGROUP _ INFO _ 1 ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . UNICODE ) ; <nl> } <nl> <nl> public LOCALGROUP _ INFO _ 1 ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . UNICODE ) ; <nl> read ( ) ; <nl> } <nl> <nl> @ @ - 88 , 11 + 89 , 11 @ @ public interface LMAccess { <nl> public String usri0 _ name ; <nl> <nl> public USER _ INFO _ 0 ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . UNICODE ) ; <nl> } <nl> <nl> public USER _ INFO _ 0 ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . UNICODE ) ; <nl> read ( ) ; <nl> } <nl> <nl> @ @ - 153 , 11 + 154 , 11 @ @ public interface LMAccess { <nl> public String usri1 _ script _ path ; <nl> <nl> public USER _ INFO _ 1 ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . UNICODE ) ; <nl> } <nl> <nl> public USER _ INFO _ 1 ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . UNICODE ) ; <nl> read ( ) ; <nl> } <nl> <nl> @ @ - 232 , 11 + 233 , 11 @ @ public interface LMAccess { <nl> public PSID . ByReference usri23 _ user _ sid ; <nl> <nl> public USER _ INFO _ 23 ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . UNICODE ) ; <nl> } <nl> <nl> public USER _ INFO _ 23 ( Pointer memory ) { <nl> - useMemory ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . UNICODE ) ; <nl> read ( ) ; <nl> } <nl> <nl> @ @ - 257 , 11 + 258 , 11 @ @ public interface LMAccess { <nl> public String grui0 _ name ; <nl> <nl> public GROUP _ USERS _ INFO _ 0 ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . UNICODE ) ; <nl> } <nl> <nl> public GROUP _ USERS _ INFO _ 0 ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . UNICODE ) ; <nl> read ( ) ; <nl> } <nl> <nl> @ @ - 282 , 11 + 283 , 11 @ @ public interface LMAccess { <nl> public String lgrui0 _ name ; <nl> <nl> public LOCALGROUP _ USERS _ INFO _ 0 ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . UNICODE ) ; <nl> } <nl> <nl> public LOCALGROUP _ USERS _ INFO _ 0 ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . UNICODE ) ; <nl> read ( ) ; <nl> } <nl> <nl> @ @ - 311 , 11 + 312 , 11 @ @ public interface LMAccess { <nl> public String grpi0 _ name ; <nl> <nl> public GROUP _ INFO _ 0 ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . UNICODE ) ; <nl> } <nl> <nl> public GROUP _ INFO _ 0 ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . UNICODE ) ; <nl> read ( ) ; <nl> } <nl> <nl> @ @ - 345 , 11 + 346 , 11 @ @ public interface LMAccess { <nl> public String grpi1 _ comment ; <nl> <nl> public GROUP _ INFO _ 1 ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . UNICODE ) ; <nl> } <nl> <nl> public GROUP _ INFO _ 1 ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . UNICODE ) ; <nl> read ( ) ; <nl> } <nl> <nl> @ @ - 390 , 11 + 391 , 11 @ @ public interface LMAccess { <nl> public int grpi2 _ attributes ; <nl> <nl> public GROUP _ INFO _ 2 ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . UNICODE ) ; <nl> } <nl> <nl> public GROUP _ INFO _ 2 ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . UNICODE ) ; <nl> read ( ) ; <nl> } <nl> <nl> @ @ - 435 , 11 + 436 , 11 @ @ public interface LMAccess { <nl> public int grpi3 _ attributes ; <nl> <nl> public GROUP _ INFO _ 3 ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . UNICODE ) ; <nl> } <nl> <nl> public GROUP _ INFO _ 3 ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . UNICODE ) ; <nl> read ( ) ; <nl> } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / LMShare . java b / contrib / platform / src / com / sun / jna / platform / win32 / LMShare . java <nl> index 650b3f6 . . 72b03a3 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / LMShare . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / LMShare . java <nl> @ @ - 16 , 6 + 16 , 7 @ @ import java . util . List ; <nl> <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> + import com . sun . jna . win32 . W32APITypeMapper ; <nl> <nl> / * * <nl> * Ported from LMShare . h . <nl> @ @ - 118 , 11 + 119 , 11 @ @ public interface LMShare { <nl> public String shi2 _ passwd ; <nl> <nl> public SHARE _ INFO _ 2 ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . UNICODE ) ; <nl> } <nl> <nl> public SHARE _ INFO _ 2 ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . UNICODE ) ; <nl> read ( ) ; <nl> } <nl> <nl> @ @ - 202 , 11 + 203 , 11 @ @ public interface LMShare { <nl> public Pointer shi502 _ security _ descriptor ; <nl> <nl> public SHARE _ INFO _ 502 ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . UNICODE ) ; <nl> } <nl> <nl> public SHARE _ INFO _ 502 ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . UNICODE ) ; <nl> read ( ) ; <nl> } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Sspi . java b / contrib / platform / src / com / sun / jna / platform / win32 / Sspi . java <nl> index be8ea16 . . 3ed3cb7 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Sspi . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Sspi . java <nl> @ @ - 17 , 6 + 17 , 8 @ @ import java . util . List ; <nl> import com . sun . jna . Memory ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> + import com . sun . jna . TypeMapper ; <nl> + import com . sun . jna . win32 . W32APITypeMapper ; <nl> <nl> / * * <nl> * Ported from Sspi . h . <nl> @ @ - 450 , 6 + 452 , 10 @ @ public interface Sspi { <nl> * / <nl> public String Comment ; <nl> <nl> + public SecPkgInfo ( ) { <nl> + super ( W32APITypeMapper . DEFAULT ) ; <nl> + } <nl> + <nl> @ Override <nl> protected List < String > getFieldOrder ( ) { <nl> return FIELDS ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> index 7d78ed6 . . 51a8009 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import com . sun . jna . Union ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . ptr . ByteByReference ; <nl> import com . sun . jna . win32 . StdCallLibrary . StdCallCallback ; <nl> + import com . sun . jna . win32 . W32APITypeMapper ; <nl> <nl> / * * <nl> * Ported from Winbase . h ( kernel32 . dll / kernel services ) . <nl> @ @ - 427 , 6 + 428 , 10 @ @ public interface WinBase extends WinDef , BaseTSD { <nl> public SYSTEMTIME DaylightDate ; <nl> public LONG DaylightBias ; <nl> <nl> + public TIME _ ZONE _ INFORMATION ( ) { <nl> + super ( W32APITypeMapper . DEFAULT ) ; <nl> + } <nl> + <nl> @ Override <nl> protected List < String > getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " Bias " , " StandardName " , " StandardDate " , " StandardBias " , " DaylightName " , " DaylightDate " , " DaylightBias " } ) ; <nl> @ @ - 902 , 6 + 907 , 7 @ @ public interface WinBase extends WinDef , BaseTSD { <nl> } <nl> <nl> public STARTUPINFO ( ) { <nl> + super ( W32APITypeMapper . DEFAULT ) ; <nl> cb = new DWORD ( size ( ) ) ; <nl> } <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinCrypt . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinCrypt . java <nl> index ba241dd . . 499d43b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinCrypt . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinCrypt . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> + import com . sun . jna . win32 . W32APITypeMapper ; <nl> <nl> / * * <nl> * Ported from WinCrypt . h . <nl> @ @ - 101 , 11 + 102 , 11 @ @ public interface WinCrypt { <nl> public String szPrompt ; <nl> <nl> public CRYPTPROTECT _ PROMPTSTRUCT ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . DEFAULT ) ; <nl> } <nl> <nl> public CRYPTPROTECT _ PROMPTSTRUCT ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . DEFAULT ) ; <nl> read ( ) ; <nl> } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> index 36ab452 . . e827d71 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import com . sun . jna . Union ; <nl> import com . sun . jna . platform . win32 . BaseTSD . ULONG _ PTR ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . win32 . StdCallLibrary . StdCallCallback ; <nl> + import com . sun . jna . win32 . W32APITypeMapper ; <nl> <nl> / * * <nl> * Ported from WinUser . h Microsoft Windows SDK 6 . 0A . <nl> @ @ - 1166 , 6 + 1167 , 7 @ @ public interface WinUser extends WinDef { <nl> * Instantiates a new wndclassex . <nl> * / <nl> public WNDCLASSEX ( ) { <nl> + super ( W32APITypeMapper . DEFAULT ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 1175 , 7 + 1177 , 7 @ @ public interface WinUser extends WinDef { <nl> * the memory <nl> * / <nl> public WNDCLASSEX ( Pointer memory ) { <nl> - super ( memory ) ; <nl> + super ( memory , Structure . ALIGN _ DEFAULT , W32APITypeMapper . DEFAULT ) ; <nl> read ( ) ; <nl> } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Winnetwk . java b / contrib / platform / src / com / sun / jna / platform / win32 / Winnetwk . java <nl> index 5a37ca6 . . 5efce2e 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Winnetwk . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Winnetwk . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ import java . util . List ; <nl> <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> + import com . sun . jna . win32 . W32APITypeMapper ; <nl> <nl> / * * <nl> * Ported from AccCtrl . h . Microsoft Windows SDK 7 . 1 <nl> @ @ - 346 , 11 + 347 , 11 @ @ public abstract class Winnetwk { <nl> public String lpProvider ; <nl> <nl> public NETRESOURCE ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . DEFAULT ) ; <nl> } <nl> <nl> public NETRESOURCE ( Pointer address ) { <nl> - super ( address ) ; <nl> + super ( address , Structure . ALIGN _ DEFAULT , W32APITypeMapper . DEFAULT ) ; <nl> read ( ) ; <nl> } <nl> <nl> @ @ - 391 , 11 + 392 , 11 @ @ public abstract class Winnetwk { <nl> public String lpUniversalName ; <nl> <nl> public UNIVERSAL _ NAME _ INFO ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . DEFAULT ) ; <nl> } <nl> <nl> public UNIVERSAL _ NAME _ INFO ( Pointer address ) { <nl> - super ( address ) ; <nl> + super ( address , Structure . ALIGN _ DEFAULT , W32APITypeMapper . DEFAULT ) ; <nl> read ( ) ; <nl> } <nl> <nl> @ @ - 444 , 11 + 445 , 11 @ @ public abstract class Winnetwk { <nl> public String lpRemainingPath ; <nl> <nl> public REMOTE _ NAME _ INFO ( ) { <nl> - super ( ) ; <nl> + super ( W32APITypeMapper . DEFAULT ) ; <nl> } <nl> <nl> public REMOTE _ NAME _ INFO ( Pointer address ) { <nl> - super ( address ) ; <nl> + super ( address , Structure . ALIGN _ DEFAULT , W32APITypeMapper . DEFAULT ) ; <nl> read ( ) ; <nl> } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java b / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> index e93481c . . dcccc64 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> @ @ - 18 , 7 + 18 , 6 @ @ import java . util . List ; <nl> import com . sun . jna . Memory ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> - import com . sun . jna . TypeMapper ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . win32 . W32APITypeMapper ; <nl> <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / MprTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / MprTest . java <nl> index c174136 . . 869eaf0 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / MprTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / MprTest . java <nl> @ @ - 39 , 6 + 39 , 12 @ @ public class MprTest extends TestCase { <nl> junit . textui . TestRunner . run ( MprTest . class ) ; <nl> } <nl> <nl> + public void testCreateLocalShare ( ) throws Exception { <nl> + File fileShareFolder = createTempFolder ( ) ; <nl> + String share = createLocalShare ( fileShareFolder ) ; <nl> + Netapi32 . INSTANCE . NetShareDel ( null , share , 0 ) ; <nl> + } <nl> + <nl> public void testWNetUseConnection ( ) throws Exception { <nl> / / First create a share on the local machine <nl> File fileShareFolder = createTempFolder ( ) ; <nl> @ @ - 262 , 10 + 268 , 11 @ @ public class MprTest extends TestCase { <nl> shi . write ( ) ; <nl> <nl> IntByReference parm _ err = new IntByReference ( 0 ) ; <nl> - assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetShareAdd ( null , / / Use <nl> - / / local <nl> - / / computer <nl> - 2 , shi . getPointer ( ) , parm _ err ) ) ; <nl> + int errorCode = Netapi32 . INSTANCE . NetShareAdd ( null , / / Use local computer <nl> + 2 , shi . getPointer ( ) , parm _ err ) ; <nl> + assertEquals ( <nl> + String . format ( " Failed to create share - errorCode : % d ( Param : % d ) " , errorCode , parm _ err . getValue ( ) ) , <nl> + LMErr . NERR _ Success , errorCode ) ; <nl> <nl> return shareFolder . getName ( ) ; <nl> } <nl> diff - - git a / src / com / sun / jna / win32 / W32APITypeMapper . java b / src / com / sun / jna / win32 / W32APITypeMapper . java <nl> index 98d193c . . 63b3e0d 100644 <nl> - - - a / src / com / sun / jna / win32 / W32APITypeMapper . java <nl> + + + b / src / com / sun / jna / win32 / W32APITypeMapper . java <nl> @ @ - 29 , 9 + 29 , 12 @ @ import com . sun . jna . WString ; <nl> * @ author twall <nl> * / <nl> public class W32APITypeMapper extends DefaultTypeMapper { <nl> - <nl> + / * * Standard TypeMapper to use the unicode version of a w32 API . * / <nl> public static final TypeMapper UNICODE = new W32APITypeMapper ( true ) ; <nl> + / * * Standard TypeMapper to use the ASCII / MBCS version of a w32 API . * / <nl> public static final TypeMapper ASCII = new W32APITypeMapper ( false ) ; <nl> + / * * Default TypeMapper to use - depends on the value of { @ code w32 . ascii } system property * / <nl> + public static final TypeMapper DEFAULT = Boolean . getBoolean ( " w32 . ascii " ) ? ASCII : UNICODE ; <nl> <nl> protected W32APITypeMapper ( boolean unicode ) { <nl> if ( unicode ) {
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index 1f42ef3 . . 61ba807 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 346 , 7 + 346 , 7 @ @ public class Kernel32Test extends TestCase { <nl> <nl> public void testQueryFullProcessImageName ( ) { <nl> int pid = Kernel32 . INSTANCE . GetCurrentProcessId ( ) ; <nl> - HANDLE h = Kernel32 . INSTANCE . OpenProcess ( 0 , false , pid ) ; <nl> + HANDLE h = Kernel32 . INSTANCE . OpenProcess ( WinNT . PROCESS _ QUERY _ INFORMATION , false , pid ) ; <nl> assertNotNull ( " Failed ( " + Kernel32 . INSTANCE . GetLastError ( ) + " ) to get process ID = " + pid + " handle " , h ) ; <nl> <nl> try {
diff - - git a / CHANGES . md b / CHANGES . md <nl> index b358010 . . 38d37a4 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 55 , 6 + 55 , 7 @ @ Features <nl> * [ # 654 ] ( https : / / github . com / java - native - access / jna / pull / 654 ) : Support named arguments for ` com . sun . jna . platform . win32 . COM . util . CallbackProxy ` based callbacks - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 659 ] ( https : / / github . com / java - native - access / jna / issues / 659 ) : Enable LCID ( locale ) override for ` com . sun . jna . platform . win32 . COM . util . ProxyObject ` - based COM calls - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 665 ] ( https : / / github . com / java - native - access / jna / pull / 665 ) : Added ` XSetWMProtocols ` and ` XGetWMProtocols ` to ` com . sun . jna . platform . unix . X11 ` - [ @ zainab - ali ] ( https : / / github . com / zainab - ali ) . <nl> + * [ # 680 ] ( https : / / github . com / java - native - access / jna / pull / 680 ) : Added ` SetCurrentProcessExplicitAppUserModelID ` and ` GetCurrentProcessExplicitAppUserModelID ` to ` com . sun . jna . platform . win32 . Shell32 ` for setting the [ System . AppUserModel . ID ] ( https : / / msdn . microsoft . com / en - us / library / windows / desktop / dd391569 . aspx ) of the host process - [ @ rednoah ] ( https : / / github . com / rednoah ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> index eb74a1d . . 48b9b4d 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> package com . sun . jna . platform . win32 ; <nl> <nl> import com . sun . jna . Native ; <nl> + import com . sun . jna . WString ; <nl> import com . sun . jna . platform . win32 . Guid . GUID ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> import com . sun . jna . platform . win32 . WinDef . HICON ; <nl> @ @ - 376 , 5 + 377 , 26 @ @ public interface Shell32 extends ShellAPI , StdCallLibrary { <nl> * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / ms648069 ( VS . 85 ) . aspx " > MSDN < / a > <nl> * / <nl> int ExtractIconEx ( String lpszFile , int nIconIndex , HICON [ ] phiconLarge , HICON [ ] phiconSmall , int nIcons ) ; <nl> + <nl> + / * * <nl> + * Retrieves the application - defined , explicit Application User Model ID ( AppUserModelID ) for the current process . <nl> + * <nl> + * @ param ppszAppID <nl> + * A pointer that receives the address of the AppUserModelID assigned to the process . The caller is responsible for freeing this string with { @ link Ole32 # CoTaskMemFree } when it is no longer needed . <nl> + * @ return If this function succeeds , it returns S _ OK . Otherwise , it returns an HRESULT error code . <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / dd378419 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + HRESULT GetCurrentProcessExplicitAppUserModelID ( PointerByReference ppszAppID ) ; <nl> + <nl> + / * * <nl> + * Specifies a unique application - defined Application User Model ID ( AppUserModelID ) that identifies the current process to the taskbar . This identifier allows an application to group its associated processes and windows under a single taskbar button . <nl> + * <nl> + * @ param appID <nl> + * The AppUserModelID to assign to the current process . <nl> + * @ return If this function succeeds , it returns S _ OK . Otherwise , it returns an HRESULT error code . <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / dd378422 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + HRESULT SetCurrentProcessExplicitAppUserModelID ( WString appID ) ; <nl> + <nl> } <nl> <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> index cf83e05 . . aecd257 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ import java . io . FileWriter ; <nl> import java . io . IOException ; <nl> <nl> import com . sun . jna . Native ; <nl> + import com . sun . jna . WString ; <nl> import com . sun . jna . platform . win32 . Guid . GUID ; <nl> import com . sun . jna . platform . win32 . ShellAPI . APPBARDATA ; <nl> import com . sun . jna . platform . win32 . ShellAPI . SHELLEXECUTEINFO ; <nl> @ @ - 232 , 4 + 233 , 20 @ @ public class Shell32Test extends TestCase { <nl> int iconCount = Shell32 . INSTANCE . ExtractIconEx ( new File ( winDir , " explorer . exe " ) . getAbsolutePath ( ) , - 1 , null , null , 1 ) ; <nl> assertTrue ( " Should be at least two icons in explorer . exe " , iconCount > 1 ) ; <nl> } <nl> + <nl> + public void testCurrentProcessExplicitAppUserModelID ( ) { <nl> + String appUserModelID = " com . sun . jna . platform . win32 . Shell32Test " ; <nl> + <nl> + HRESULT r1 = Shell32 . INSTANCE . SetCurrentProcessExplicitAppUserModelID ( new WString ( appUserModelID ) ) ; <nl> + assertEquals ( WinError . S _ OK , r1 ) ; <nl> + <nl> + PointerByReference ppszAppID = new PointerByReference ( ) ; <nl> + HRESULT r2 = Shell32 . INSTANCE . GetCurrentProcessExplicitAppUserModelID ( ppszAppID ) ; <nl> + assertEquals ( WinError . S _ OK , r2 ) ; <nl> + <nl> + assertEquals ( appUserModelID , ppszAppID . getValue ( ) . getWideString ( 0 ) ) ; <nl> + <nl> + Ole32 . INSTANCE . CoTaskMemFree ( ppszAppID . getValue ( ) ) ; <nl> + } <nl> + <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index ab7f468 . . 1dd0116 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and AL ( see LICENSE ) . <nl> + NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and AL 2 . 0 ( see LICENSE ) . <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> diff - - git a / LICENSE b / LICENSE <nl> index a2c4ca6 . . 7abf212 100644 <nl> - - - a / LICENSE <nl> + + + b / LICENSE <nl> @ @ - 13 , 7 + 13 , 7 @ @ A copy is also included in the downloadable source code package <nl> containing JNA , in file " LGPL2 . 1 " , under the same directory <nl> as this file . <nl> <nl> - You may obtain a copy of the AL License at : <nl> + You may obtain a copy of the Apache License at : <nl> <nl> http : / / www . apache . org / licenses / <nl> <nl> diff - - git a / parent / pom . xml b / parent / pom . xml <nl> index 026b398 . . 3cdfd88 100644 <nl> - - - a / parent / pom . xml <nl> + + + b / parent / pom . xml <nl> @ @ - 18 , 7 + 18 , 7 @ @ <nl> < distribution > repo < / distribution > <nl> < / license > <nl> < license > <nl> - < name > AL v2 . 0 < / name > <nl> + < name > Apache License v2 . 0 < / name > <nl> < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt < / url > <nl> < distribution > repo < / distribution > <nl> < / license > <nl> diff - - git a / pom - jna - platform . xml b / pom - jna - platform . xml <nl> index b61eea5 . . 31299d5 100644 <nl> - - - a / pom - jna - platform . xml <nl> + + + b / pom - jna - platform . xml <nl> @ @ - 20 , 7 + 20 , 7 @ @ <nl> < distribution > repo < / distribution > <nl> < / license > <nl> < license > <nl> - < name > AL v2 . 0 < / name > <nl> + < name > Apache License v2 . 0 < / name > <nl> < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt < / url > <nl> < distribution > repo < / distribution > <nl> < / license > <nl> diff - - git a / pom - jna . xml b / pom - jna . xml <nl> index 9da3a52 . . e52eccc 100644 <nl> - - - a / pom - jna . xml <nl> + + + b / pom - jna . xml <nl> @ @ - 20 , 7 + 20 , 7 @ @ <nl> < distribution > repo < / distribution > <nl> < / license > <nl> < license > <nl> - < name > AL v2 . 0 < / name > <nl> + < name > Apache License v2 . 0 < / name > <nl> < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt < / url > <nl> < distribution > repo < / distribution > <nl> < / license >
diff - - git a / AL2 . 0 b / AL2 . 0 <nl> new file mode 100644 <nl> index 0000000 . . f433b1a <nl> - - - / dev / null <nl> + + + b / AL2 . 0 <nl> @ @ - 0 , 0 + 1 , 177 @ @ <nl> + <nl> + Apache License <nl> + Version 2 . 0 , January 2004 <nl> + http : / / www . apache . org / licenses / <nl> + <nl> + TERMS AND CONDITIONS FOR USE , REPRODUCTION , AND DISTRIBUTION <nl> + <nl> + 1 . Definitions . <nl> + <nl> + " License " shall mean the terms and conditions for use , reproduction , <nl> + and distribution as defined by Sections 1 through 9 of this document . <nl> + <nl> + " Licensor " shall mean the copyright owner or entity authorized by <nl> + the copyright owner that is granting the License . <nl> + <nl> + " Legal Entity " shall mean the union of the acting entity and all <nl> + other entities that control , are controlled by , or are under common <nl> + control with that entity . For the purposes of this definition , <nl> + " control " means ( i ) the power , direct or indirect , to cause the <nl> + direction or management of such entity , whether by contract or <nl> + otherwise , or ( ii ) ownership of fifty percent ( 50 % ) or more of the <nl> + outstanding shares , or ( iii ) beneficial ownership of such entity . <nl> + <nl> + " You " ( or " Your " ) shall mean an individual or Legal Entity <nl> + exercising permissions granted by this License . <nl> + <nl> + " Source " form shall mean the preferred form for making modifications , <nl> + including but not limited to software source code , documentation <nl> + source , and configuration files . <nl> + <nl> + " Object " form shall mean any form resulting from mechanical <nl> + transformation or translation of a Source form , including but <nl> + not limited to compiled object code , generated documentation , <nl> + and conversions to other media types . <nl> + <nl> + " Work " shall mean the work of authorship , whether in Source or <nl> + Object form , made available under the License , as indicated by a <nl> + copyright notice that is included in or attached to the work <nl> + ( an example is provided in the Appendix below ) . <nl> + <nl> + " Derivative Works " shall mean any work , whether in Source or Object <nl> + form , that is based on ( or derived from ) the Work and for which the <nl> + editorial revisions , annotations , elaborations , or other modifications <nl> + represent , as a whole , an original work of authorship . For the purposes <nl> + of this License , Derivative Works shall not include works that remain <nl> + separable from , or merely link ( or bind by name ) to the interfaces of , <nl> + the Work and Derivative Works thereof . <nl> + <nl> + " Contribution " shall mean any work of authorship , including <nl> + the original version of the Work and any modifications or additions <nl> + to that Work or Derivative Works thereof , that is intentionally <nl> + submitted to Licensor for inclusion in the Work by the copyright owner <nl> + or by an individual or Legal Entity authorized to submit on behalf of <nl> + the copyright owner . For the purposes of this definition , " submitted " <nl> + means any form of electronic , verbal , or written communication sent <nl> + to the Licensor or its representatives , including but not limited to <nl> + communication on electronic mailing lists , source code control systems , <nl> + and issue tracking systems that are managed by , or on behalf of , the <nl> + Licensor for the purpose of discussing and improving the Work , but <nl> + excluding communication that is conspicuously marked or otherwise <nl> + designated in writing by the copyright owner as " Not a Contribution . " <nl> + <nl> + " Contributor " shall mean Licensor and any individual or Legal Entity <nl> + on behalf of whom a Contribution has been received by Licensor and <nl> + subsequently incorporated within the Work . <nl> + <nl> + 2 . Grant of Copyright License . Subject to the terms and conditions of <nl> + this License , each Contributor hereby grants to You a perpetual , <nl> + worldwide , non - exclusive , no - charge , royalty - free , irrevocable <nl> + copyright license to reproduce , prepare Derivative Works of , <nl> + publicly display , publicly perform , sublicense , and distribute the <nl> + Work and such Derivative Works in Source or Object form . <nl> + <nl> + 3 . Grant of Patent License . Subject to the terms and conditions of <nl> + this License , each Contributor hereby grants to You a perpetual , <nl> + worldwide , non - exclusive , no - charge , royalty - free , irrevocable <nl> + ( except as stated in this section ) patent license to make , have made , <nl> + use , offer to sell , sell , import , and otherwise transfer the Work , <nl> + where such license applies only to those patent claims licensable <nl> + by such Contributor that are necessarily infringed by their <nl> + Contribution ( s ) alone or by combination of their Contribution ( s ) <nl> + with the Work to which such Contribution ( s ) was submitted . If You <nl> + institute patent litigation against any entity ( including a <nl> + cross - claim or counterclaim in a lawsuit ) alleging that the Work <nl> + or a Contribution incorporated within the Work constitutes direct <nl> + or contributory patent infringement , then any patent licenses <nl> + granted to You under this License for that Work shall terminate <nl> + as of the date such litigation is filed . <nl> + <nl> + 4 . Redistribution . You may reproduce and distribute copies of the <nl> + Work or Derivative Works thereof in any medium , with or without <nl> + modifications , and in Source or Object form , provided that You <nl> + meet the following conditions : <nl> + <nl> + ( a ) You must give any other recipients of the Work or <nl> + Derivative Works a copy of this License ; and <nl> + <nl> + ( b ) You must cause any modified files to carry prominent notices <nl> + stating that You changed the files ; and <nl> + <nl> + ( c ) You must retain , in the Source form of any Derivative Works <nl> + that You distribute , all copyright , patent , trademark , and <nl> + attribution notices from the Source form of the Work , <nl> + excluding those notices that do not pertain to any part of <nl> + the Derivative Works ; and <nl> + <nl> + ( d ) If the Work includes a " NOTICE " text file as part of its <nl> + distribution , then any Derivative Works that You distribute must <nl> + include a readable copy of the attribution notices contained <nl> + within such NOTICE file , excluding those notices that do not <nl> + pertain to any part of the Derivative Works , in at least one <nl> + of the following places : within a NOTICE text file distributed <nl> + as part of the Derivative Works ; within the Source form or <nl> + documentation , if provided along with the Derivative Works ; or , <nl> + within a display generated by the Derivative Works , if and <nl> + wherever such third - party notices normally appear . The contents <nl> + of the NOTICE file are for informational purposes only and <nl> + do not modify the License . You may add Your own attribution <nl> + notices within Derivative Works that You distribute , alongside <nl> + or as an addendum to the NOTICE text from the Work , provided <nl> + that such additional attribution notices cannot be construed <nl> + as modifying the License . <nl> + <nl> + You may add Your own copyright statement to Your modifications and <nl> + may provide additional or different license terms and conditions <nl> + for use , reproduction , or distribution of Your modifications , or <nl> + for any such Derivative Works as a whole , provided Your use , <nl> + reproduction , and distribution of the Work otherwise complies with <nl> + the conditions stated in this License . <nl> + <nl> + 5 . Submission of Contributions . Unless You explicitly state otherwise , <nl> + any Contribution intentionally submitted for inclusion in the Work <nl> + by You to the Licensor shall be under the terms and conditions of <nl> + this License , without any additional terms or conditions . <nl> + Notwithstanding the above , nothing herein shall supersede or modify <nl> + the terms of any separate license agreement you may have executed <nl> + with Licensor regarding such Contributions . <nl> + <nl> + 6 . Trademarks . This License does not grant permission to use the trade <nl> + names , trademarks , service marks , or product names of the Licensor , <nl> + except as required for reasonable and customary use in describing the <nl> + origin of the Work and reproducing the content of the NOTICE file . <nl> + <nl> + 7 . Disclaimer of Warranty . Unless required by applicable law or <nl> + agreed to in writing , Licensor provides the Work ( and each <nl> + Contributor provides its Contributions ) on an " AS IS " BASIS , <nl> + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or <nl> + implied , including , without limitation , any warranties or conditions <nl> + of TITLE , NON - INFRINGEMENT , MERCHANTABILITY , or FITNESS FOR A <nl> + PARTICULAR PURPOSE . You are solely responsible for determining the <nl> + appropriateness of using or redistributing the Work and assume any <nl> + risks associated with Your exercise of permissions under this License . <nl> + <nl> + 8 . Limitation of Liability . In no event and under no legal theory , <nl> + whether in tort ( including negligence ) , contract , or otherwise , <nl> + unless required by applicable law ( such as deliberate and grossly <nl> + negligent acts ) or agreed to in writing , shall any Contributor be <nl> + liable to You for damages , including any direct , indirect , special , <nl> + incidental , or consequential damages of any character arising as a <nl> + result of this License or out of the use or inability to use the <nl> + Work ( including but not limited to damages for loss of goodwill , <nl> + work stoppage , computer failure or malfunction , or any and all <nl> + other commercial damages or losses ) , even if such Contributor <nl> + has been advised of the possibility of such damages . <nl> + <nl> + 9 . Accepting Warranty or Additional Liability . While redistributing <nl> + the Work or Derivative Works thereof , You may choose to offer , <nl> + and charge a fee for , acceptance of support , warranty , indemnity , <nl> + or other liability obligations and / or rights consistent with this <nl> + License . However , in accepting such obligations , You may act only <nl> + on Your own behalf and on Your sole responsibility , not on behalf <nl> + of any other Contributor , and only if You agree to indemnify , <nl> + defend , and hold each Contributor harmless for any liability <nl> + incurred by , or claims asserted against , such Contributor by reason <nl> + of your accepting any such warranty or additional liability . <nl> + <nl> + END OF TERMS AND CONDITIONS <nl> diff - - git a / ASL2 . 0 b / ASL2 . 0 <nl> deleted file mode 100644 <nl> index f433b1a . . 0000000 <nl> - - - a / ASL2 . 0 <nl> + + + / dev / null <nl> @ @ - 1 , 177 + 0 , 0 @ @ <nl> - <nl> - Apache License <nl> - Version 2 . 0 , January 2004 <nl> - http : / / www . apache . org / licenses / <nl> - <nl> - TERMS AND CONDITIONS FOR USE , REPRODUCTION , AND DISTRIBUTION <nl> - <nl> - 1 . Definitions . <nl> - <nl> - " License " shall mean the terms and conditions for use , reproduction , <nl> - and distribution as defined by Sections 1 through 9 of this document . <nl> - <nl> - " Licensor " shall mean the copyright owner or entity authorized by <nl> - the copyright owner that is granting the License . <nl> - <nl> - " Legal Entity " shall mean the union of the acting entity and all <nl> - other entities that control , are controlled by , or are under common <nl> - control with that entity . For the purposes of this definition , <nl> - " control " means ( i ) the power , direct or indirect , to cause the <nl> - direction or management of such entity , whether by contract or <nl> - otherwise , or ( ii ) ownership of fifty percent ( 50 % ) or more of the <nl> - outstanding shares , or ( iii ) beneficial ownership of such entity . <nl> - <nl> - " You " ( or " Your " ) shall mean an individual or Legal Entity <nl> - exercising permissions granted by this License . <nl> - <nl> - " Source " form shall mean the preferred form for making modifications , <nl> - including but not limited to software source code , documentation <nl> - source , and configuration files . <nl> - <nl> - " Object " form shall mean any form resulting from mechanical <nl> - transformation or translation of a Source form , including but <nl> - not limited to compiled object code , generated documentation , <nl> - and conversions to other media types . <nl> - <nl> - " Work " shall mean the work of authorship , whether in Source or <nl> - Object form , made available under the License , as indicated by a <nl> - copyright notice that is included in or attached to the work <nl> - ( an example is provided in the Appendix below ) . <nl> - <nl> - " Derivative Works " shall mean any work , whether in Source or Object <nl> - form , that is based on ( or derived from ) the Work and for which the <nl> - editorial revisions , annotations , elaborations , or other modifications <nl> - represent , as a whole , an original work of authorship . For the purposes <nl> - of this License , Derivative Works shall not include works that remain <nl> - separable from , or merely link ( or bind by name ) to the interfaces of , <nl> - the Work and Derivative Works thereof . <nl> - <nl> - " Contribution " shall mean any work of authorship , including <nl> - the original version of the Work and any modifications or additions <nl> - to that Work or Derivative Works thereof , that is intentionally <nl> - submitted to Licensor for inclusion in the Work by the copyright owner <nl> - or by an individual or Legal Entity authorized to submit on behalf of <nl> - the copyright owner . For the purposes of this definition , " submitted " <nl> - means any form of electronic , verbal , or written communication sent <nl> - to the Licensor or its representatives , including but not limited to <nl> - communication on electronic mailing lists , source code control systems , <nl> - and issue tracking systems that are managed by , or on behalf of , the <nl> - Licensor for the purpose of discussing and improving the Work , but <nl> - excluding communication that is conspicuously marked or otherwise <nl> - designated in writing by the copyright owner as " Not a Contribution . " <nl> - <nl> - " Contributor " shall mean Licensor and any individual or Legal Entity <nl> - on behalf of whom a Contribution has been received by Licensor and <nl> - subsequently incorporated within the Work . <nl> - <nl> - 2 . Grant of Copyright License . Subject to the terms and conditions of <nl> - this License , each Contributor hereby grants to You a perpetual , <nl> - worldwide , non - exclusive , no - charge , royalty - free , irrevocable <nl> - copyright license to reproduce , prepare Derivative Works of , <nl> - publicly display , publicly perform , sublicense , and distribute the <nl> - Work and such Derivative Works in Source or Object form . <nl> - <nl> - 3 . Grant of Patent License . Subject to the terms and conditions of <nl> - this License , each Contributor hereby grants to You a perpetual , <nl> - worldwide , non - exclusive , no - charge , royalty - free , irrevocable <nl> - ( except as stated in this section ) patent license to make , have made , <nl> - use , offer to sell , sell , import , and otherwise transfer the Work , <nl> - where such license applies only to those patent claims licensable <nl> - by such Contributor that are necessarily infringed by their <nl> - Contribution ( s ) alone or by combination of their Contribution ( s ) <nl> - with the Work to which such Contribution ( s ) was submitted . If You <nl> - institute patent litigation against any entity ( including a <nl> - cross - claim or counterclaim in a lawsuit ) alleging that the Work <nl> - or a Contribution incorporated within the Work constitutes direct <nl> - or contributory patent infringement , then any patent licenses <nl> - granted to You under this License for that Work shall terminate <nl> - as of the date such litigation is filed . <nl> - <nl> - 4 . Redistribution . You may reproduce and distribute copies of the <nl> - Work or Derivative Works thereof in any medium , with or without <nl> - modifications , and in Source or Object form , provided that You <nl> - meet the following conditions : <nl> - <nl> - ( a ) You must give any other recipients of the Work or <nl> - Derivative Works a copy of this License ; and <nl> - <nl> - ( b ) You must cause any modified files to carry prominent notices <nl> - stating that You changed the files ; and <nl> - <nl> - ( c ) You must retain , in the Source form of any Derivative Works <nl> - that You distribute , all copyright , patent , trademark , and <nl> - attribution notices from the Source form of the Work , <nl> - excluding those notices that do not pertain to any part of <nl> - the Derivative Works ; and <nl> - <nl> - ( d ) If the Work includes a " NOTICE " text file as part of its <nl> - distribution , then any Derivative Works that You distribute must <nl> - include a readable copy of the attribution notices contained <nl> - within such NOTICE file , excluding those notices that do not <nl> - pertain to any part of the Derivative Works , in at least one <nl> - of the following places : within a NOTICE text file distributed <nl> - as part of the Derivative Works ; within the Source form or <nl> - documentation , if provided along with the Derivative Works ; or , <nl> - within a display generated by the Derivative Works , if and <nl> - wherever such third - party notices normally appear . The contents <nl> - of the NOTICE file are for informational purposes only and <nl> - do not modify the License . You may add Your own attribution <nl> - notices within Derivative Works that You distribute , alongside <nl> - or as an addendum to the NOTICE text from the Work , provided <nl> - that such additional attribution notices cannot be construed <nl> - as modifying the License . <nl> - <nl> - You may add Your own copyright statement to Your modifications and <nl> - may provide additional or different license terms and conditions <nl> - for use , reproduction , or distribution of Your modifications , or <nl> - for any such Derivative Works as a whole , provided Your use , <nl> - reproduction , and distribution of the Work otherwise complies with <nl> - the conditions stated in this License . <nl> - <nl> - 5 . Submission of Contributions . Unless You explicitly state otherwise , <nl> - any Contribution intentionally submitted for inclusion in the Work <nl> - by You to the Licensor shall be under the terms and conditions of <nl> - this License , without any additional terms or conditions . <nl> - Notwithstanding the above , nothing herein shall supersede or modify <nl> - the terms of any separate license agreement you may have executed <nl> - with Licensor regarding such Contributions . <nl> - <nl> - 6 . Trademarks . This License does not grant permission to use the trade <nl> - names , trademarks , service marks , or product names of the Licensor , <nl> - except as required for reasonable and customary use in describing the <nl> - origin of the Work and reproducing the content of the NOTICE file . <nl> - <nl> - 7 . Disclaimer of Warranty . Unless required by applicable law or <nl> - agreed to in writing , Licensor provides the Work ( and each <nl> - Contributor provides its Contributions ) on an " AS IS " BASIS , <nl> - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or <nl> - implied , including , without limitation , any warranties or conditions <nl> - of TITLE , NON - INFRINGEMENT , MERCHANTABILITY , or FITNESS FOR A <nl> - PARTICULAR PURPOSE . You are solely responsible for determining the <nl> - appropriateness of using or redistributing the Work and assume any <nl> - risks associated with Your exercise of permissions under this License . <nl> - <nl> - 8 . Limitation of Liability . In no event and under no legal theory , <nl> - whether in tort ( including negligence ) , contract , or otherwise , <nl> - unless required by applicable law ( such as deliberate and grossly <nl> - negligent acts ) or agreed to in writing , shall any Contributor be <nl> - liable to You for damages , including any direct , indirect , special , <nl> - incidental , or consequential damages of any character arising as a <nl> - result of this License or out of the use or inability to use the <nl> - Work ( including but not limited to damages for loss of goodwill , <nl> - work stoppage , computer failure or malfunction , or any and all <nl> - other commercial damages or losses ) , even if such Contributor <nl> - has been advised of the possibility of such damages . <nl> - <nl> - 9 . Accepting Warranty or Additional Liability . While redistributing <nl> - the Work or Derivative Works thereof , You may choose to offer , <nl> - and charge a fee for , acceptance of support , warranty , indemnity , <nl> - or other liability obligations and / or rights consistent with this <nl> - License . However , in accepting such obligations , You may act only <nl> - on Your own behalf and on Your sole responsibility , not on behalf <nl> - of any other Contributor , and only if You agree to indemnify , <nl> - defend , and hold each Contributor harmless for any liability <nl> - incurred by , or claims asserted against , such Contributor by reason <nl> - of your accepting any such warranty or additional liability . <nl> - <nl> - END OF TERMS AND CONDITIONS <nl> diff - - git a / CHANGES . md b / CHANGES . md <nl> index ed99c47 . . c013b56 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and ASL ( see LICENSE ) . <nl> + NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and AL ( see LICENSE ) . <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> @ @ - 72 , 6 + 72 , 7 @ @ Bug Fixes <nl> * [ # 633 ] ( https : / / github . com / java - native - access / jna / pull / 633 ) : Restore default usage of platform native encoding for Java strings passed to native functions ( was hard - coded to UTF - 8 in 4 . 0 and later ) [ @ amake ] ( https : / / github . com / amake ) <nl> * [ # 634 ] ( https : / / github . com / java - native - access / jna / pull / 634 ) : Improve BSTR handling and add ` SysStringByteLen ` and ` SysStringLen ` to ` com . sun . jna . platform . win32 . OleAuto ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 646 ] ( https : / / github . com / java - native - access / jna / issues / 646 ) : ` platform . win32 . COM . COMBindingBaseObject ` swallows reason if instantiation fails - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 647 ] ( https : / / github . com / java - native - access / jna / pull / 647 ) : Update references to Apache License as requested by issue # 673 [ @ bhamail ] ( https : / / github . com / bhamail ) <nl> * [ # 636 ] ( https : / / github . com / java - native - access / jna / issues / 636 ) ; Staticly link visual c + + runtime when building with MSVC - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 4 . 2 . 1 <nl> diff - - git a / LICENSE b / LICENSE <nl> index 6de5f5d . . a2c4ca6 100644 <nl> - - - a / LICENSE <nl> + + + b / LICENSE <nl> @ @ - 13 , 10 + 13 , 10 @ @ A copy is also included in the downloadable source code package <nl> containing JNA , in file " LGPL2 . 1 " , under the same directory <nl> as this file . <nl> <nl> - You may obtain a copy of the ASL License at : <nl> + You may obtain a copy of the AL License at : <nl> <nl> http : / / www . apache . org / licenses / <nl> <nl> A copy is also included in the downloadable source code package <nl> - containing JNA , in file " ASL2 . 0 " , under the same directory <nl> + containing JNA , in file " AL2 . 0 " , under the same directory <nl> as this file . <nl> diff - - git a / LICENSE . AL b / LICENSE . AL <nl> new file mode 100644 <nl> index 0000000 . . a958a38 <nl> - - - / dev / null <nl> + + + b / LICENSE . AL <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + This copy of JNA is licensed under the <nl> + Apache ( Software ) License , version 2 . 0 ( " the License " ) . <nl> + See the License for details about distribution rights , and the <nl> + specific rights regarding derivate works . <nl> + <nl> + You may obtain a copy of the License at : <nl> + <nl> + http : / / www . apache . org / licenses / <nl> + <nl> + A copy is also included in the downloadable source code package <nl> + containing JNA , in file " AL2 . 0 " , under the same directory <nl> + as this file . <nl> diff - - git a / LICENSE . ASL b / LICENSE . ASL <nl> deleted file mode 100644 <nl> index 3f12dee . . 0000000 <nl> - - - a / LICENSE . ASL <nl> + + + / dev / null <nl> @ @ - 1 , 12 + 0 , 0 @ @ <nl> - This copy of JNA is licensed under the <nl> - Apache ( Software ) License , version 2 . 0 ( " the License " ) . <nl> - See the License for details about distribution rights , and the <nl> - specific rights regarding derivate works . <nl> - <nl> - You may obtain a copy of the License at : <nl> - <nl> - http : / / www . apache . org / licenses / <nl> - <nl> - A copy is also included in the downloadable source code package <nl> - containing JNA , in file " ASL2 . 0 " , under the same directory <nl> - as this file . <nl> diff - - git a / build . xml b / build . xml <nl> index daab651 . . c59d844 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 1143 , 7 + 1143 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < ! - - Javadoc - - > <nl> < ! - - JNA sources only , for use in Linux build from source / shared libffi - - > <nl> < zip zipfile = " $ { dist } / src . zip " > <nl> - < zipfileset dir = " . " includes = " build . xml , $ { pom } , LICENSE , LGPL2 . 1 , ASL2 . 0 " / > <nl> + < zipfileset dir = " . " includes = " build . xml , $ { pom } , LICENSE , LGPL2 . 1 , AL2 . 0 " / > <nl> < zipfileset dir = " $ { src } " includes = " * * / * . java " prefix = " src " / > <nl> < zipfileset dir = " $ { test . src } " includes = " * * / * . java " prefix = " test " / > <nl> < zipfileset dir = " $ { native } " excludes = " libffi , libffi / * * / * , build , build / * * / * " prefix = " native " / > <nl> diff - - git a / parent / pom . xml b / parent / pom . xml <nl> index b299ad1 . . 026b398 100644 <nl> - - - a / parent / pom . xml <nl> + + + b / parent / pom . xml <nl> @ @ - 18 , 7 + 18 , 7 @ @ <nl> < distribution > repo < / distribution > <nl> < / license > <nl> < license > <nl> - < name > ASL , version 2 < / name > <nl> + < name > AL v2 . 0 < / name > <nl> < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt < / url > <nl> < distribution > repo < / distribution > <nl> < / license > <nl> diff - - git a / pom - jna - platform . xml b / pom - jna - platform . xml <nl> index c4d29b6 . . b61eea5 100644 <nl> - - - a / pom - jna - platform . xml <nl> + + + b / pom - jna - platform . xml <nl> @ @ - 20 , 7 + 20 , 7 @ @ <nl> < distribution > repo < / distribution > <nl> < / license > <nl> < license > <nl> - < name > ASL , version 2 < / name > <nl> + < name > AL v2 . 0 < / name > <nl> < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt < / url > <nl> < distribution > repo < / distribution > <nl> < / license > <nl> diff - - git a / pom - jna . xml b / pom - jna . xml <nl> index 54d63ce . . 9da3a52 100644 <nl> - - - a / pom - jna . xml <nl> + + + b / pom - jna . xml <nl> @ @ - 20 , 7 + 20 , 7 @ @ <nl> < distribution > repo < / distribution > <nl> < / license > <nl> < license > <nl> - < name > ASL , version 2 < / name > <nl> + < name > AL v2 . 0 < / name > <nl> < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt < / url > <nl> < distribution > repo < / distribution > <nl> < / license > <nl> @ @ - 50 , 4 + 50 , 4 @ @ <nl> < / developer > <nl> < / developers > <nl> <nl> - < / project > <nl> \ No newline at end of file <nl> + < / project >
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 9af3bfa . . ed99c47 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 72 , 6 + 72 , 7 @ @ Bug Fixes <nl> * [ # 633 ] ( https : / / github . com / java - native - access / jna / pull / 633 ) : Restore default usage of platform native encoding for Java strings passed to native functions ( was hard - coded to UTF - 8 in 4 . 0 and later ) [ @ amake ] ( https : / / github . com / amake ) <nl> * [ # 634 ] ( https : / / github . com / java - native - access / jna / pull / 634 ) : Improve BSTR handling and add ` SysStringByteLen ` and ` SysStringLen ` to ` com . sun . jna . platform . win32 . OleAuto ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 646 ] ( https : / / github . com / java - native - access / jna / issues / 646 ) : ` platform . win32 . COM . COMBindingBaseObject ` swallows reason if instantiation fails - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 636 ] ( https : / / github . com / java - native - access / jna / issues / 636 ) ; Staticly link visual c + + runtime when building with MSVC - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 4 . 2 . 1 <nl> = = = = = = = = = = = = = <nl> diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index 60006d3 . . a287977 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ <nl> diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index 2270943 . . f3320ed 100644 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index 8e30e62 . . 54bbc39 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 207 , 19 + 207 , 24 @ @ STRIP = @ echo <nl> LIBPFX = <nl> LIBSFX = . dll <nl> TESTLIB _ TRUNC = $ ( BUILD ) / testlib - truncated . dll <nl> + <nl> ifeq ( $ ( ARCH ) , amd64 ) <nl> MINGW _ PREFIX ? = x86 _ 64 - w64 - mingw32 - <nl> FFI _ CONFIG + = - - host = x86 _ 64 - w64 - mingw32 <nl> - # Need windres from mingw distribution , even if building with MSVC <nl> - WINDRES = $ ( MINGW _ PREFIX ) windres <nl> - MINGW = $ ( MINGW _ PREFIX ) gcc <nl> else <nl> - MINGW _ PREFIX ? = i686 - pc - mingw32 - <nl> + FFI _ CONFIG + = - - host = i686 - w64 - mingw32 <nl> + MINGW _ PREFIX ? = i686 - w64 - mingw32 - <nl> endif <nl> + # Need windres from mingw distribution , even if building with MSVC <nl> + WINDRES = $ ( MINGW _ PREFIX ) windres <nl> + MINGW = $ ( MINGW _ PREFIX ) gcc <nl> <nl> ifeq ( $ ( USE _ MSVC ) , true ) <nl> # MS compiler <nl> CC = $ ( FFI _ SRC ) / msvcc . sh <nl> + ifneq ( $ ( DYNAMIC _ LIBFFI ) , true ) <nl> + CDEFINES + = - DUSE _ STATIC _ RTL <nl> + endif <nl> COPT = <nl> CPP = cl - nologo - EP <nl> LD = link
diff - - git a / AL2 . 0 b / AL2 . 0 <nl> new file mode 100644 <nl> index 0000000 . . f433b1a <nl> - - - / dev / null <nl> + + + b / AL2 . 0 <nl> @ @ - 0 , 0 + 1 , 177 @ @ <nl> + <nl> + Apache License <nl> + Version 2 . 0 , January 2004 <nl> + http : / / www . apache . org / licenses / <nl> + <nl> + TERMS AND CONDITIONS FOR USE , REPRODUCTION , AND DISTRIBUTION <nl> + <nl> + 1 . Definitions . <nl> + <nl> + " License " shall mean the terms and conditions for use , reproduction , <nl> + and distribution as defined by Sections 1 through 9 of this document . <nl> + <nl> + " Licensor " shall mean the copyright owner or entity authorized by <nl> + the copyright owner that is granting the License . <nl> + <nl> + " Legal Entity " shall mean the union of the acting entity and all <nl> + other entities that control , are controlled by , or are under common <nl> + control with that entity . For the purposes of this definition , <nl> + " control " means ( i ) the power , direct or indirect , to cause the <nl> + direction or management of such entity , whether by contract or <nl> + otherwise , or ( ii ) ownership of fifty percent ( 50 % ) or more of the <nl> + outstanding shares , or ( iii ) beneficial ownership of such entity . <nl> + <nl> + " You " ( or " Your " ) shall mean an individual or Legal Entity <nl> + exercising permissions granted by this License . <nl> + <nl> + " Source " form shall mean the preferred form for making modifications , <nl> + including but not limited to software source code , documentation <nl> + source , and configuration files . <nl> + <nl> + " Object " form shall mean any form resulting from mechanical <nl> + transformation or translation of a Source form , including but <nl> + not limited to compiled object code , generated documentation , <nl> + and conversions to other media types . <nl> + <nl> + " Work " shall mean the work of authorship , whether in Source or <nl> + Object form , made available under the License , as indicated by a <nl> + copyright notice that is included in or attached to the work <nl> + ( an example is provided in the Appendix below ) . <nl> + <nl> + " Derivative Works " shall mean any work , whether in Source or Object <nl> + form , that is based on ( or derived from ) the Work and for which the <nl> + editorial revisions , annotations , elaborations , or other modifications <nl> + represent , as a whole , an original work of authorship . For the purposes <nl> + of this License , Derivative Works shall not include works that remain <nl> + separable from , or merely link ( or bind by name ) to the interfaces of , <nl> + the Work and Derivative Works thereof . <nl> + <nl> + " Contribution " shall mean any work of authorship , including <nl> + the original version of the Work and any modifications or additions <nl> + to that Work or Derivative Works thereof , that is intentionally <nl> + submitted to Licensor for inclusion in the Work by the copyright owner <nl> + or by an individual or Legal Entity authorized to submit on behalf of <nl> + the copyright owner . For the purposes of this definition , " submitted " <nl> + means any form of electronic , verbal , or written communication sent <nl> + to the Licensor or its representatives , including but not limited to <nl> + communication on electronic mailing lists , source code control systems , <nl> + and issue tracking systems that are managed by , or on behalf of , the <nl> + Licensor for the purpose of discussing and improving the Work , but <nl> + excluding communication that is conspicuously marked or otherwise <nl> + designated in writing by the copyright owner as " Not a Contribution . " <nl> + <nl> + " Contributor " shall mean Licensor and any individual or Legal Entity <nl> + on behalf of whom a Contribution has been received by Licensor and <nl> + subsequently incorporated within the Work . <nl> + <nl> + 2 . Grant of Copyright License . Subject to the terms and conditions of <nl> + this License , each Contributor hereby grants to You a perpetual , <nl> + worldwide , non - exclusive , no - charge , royalty - free , irrevocable <nl> + copyright license to reproduce , prepare Derivative Works of , <nl> + publicly display , publicly perform , sublicense , and distribute the <nl> + Work and such Derivative Works in Source or Object form . <nl> + <nl> + 3 . Grant of Patent License . Subject to the terms and conditions of <nl> + this License , each Contributor hereby grants to You a perpetual , <nl> + worldwide , non - exclusive , no - charge , royalty - free , irrevocable <nl> + ( except as stated in this section ) patent license to make , have made , <nl> + use , offer to sell , sell , import , and otherwise transfer the Work , <nl> + where such license applies only to those patent claims licensable <nl> + by such Contributor that are necessarily infringed by their <nl> + Contribution ( s ) alone or by combination of their Contribution ( s ) <nl> + with the Work to which such Contribution ( s ) was submitted . If You <nl> + institute patent litigation against any entity ( including a <nl> + cross - claim or counterclaim in a lawsuit ) alleging that the Work <nl> + or a Contribution incorporated within the Work constitutes direct <nl> + or contributory patent infringement , then any patent licenses <nl> + granted to You under this License for that Work shall terminate <nl> + as of the date such litigation is filed . <nl> + <nl> + 4 . Redistribution . You may reproduce and distribute copies of the <nl> + Work or Derivative Works thereof in any medium , with or without <nl> + modifications , and in Source or Object form , provided that You <nl> + meet the following conditions : <nl> + <nl> + ( a ) You must give any other recipients of the Work or <nl> + Derivative Works a copy of this License ; and <nl> + <nl> + ( b ) You must cause any modified files to carry prominent notices <nl> + stating that You changed the files ; and <nl> + <nl> + ( c ) You must retain , in the Source form of any Derivative Works <nl> + that You distribute , all copyright , patent , trademark , and <nl> + attribution notices from the Source form of the Work , <nl> + excluding those notices that do not pertain to any part of <nl> + the Derivative Works ; and <nl> + <nl> + ( d ) If the Work includes a " NOTICE " text file as part of its <nl> + distribution , then any Derivative Works that You distribute must <nl> + include a readable copy of the attribution notices contained <nl> + within such NOTICE file , excluding those notices that do not <nl> + pertain to any part of the Derivative Works , in at least one <nl> + of the following places : within a NOTICE text file distributed <nl> + as part of the Derivative Works ; within the Source form or <nl> + documentation , if provided along with the Derivative Works ; or , <nl> + within a display generated by the Derivative Works , if and <nl> + wherever such third - party notices normally appear . The contents <nl> + of the NOTICE file are for informational purposes only and <nl> + do not modify the License . You may add Your own attribution <nl> + notices within Derivative Works that You distribute , alongside <nl> + or as an addendum to the NOTICE text from the Work , provided <nl> + that such additional attribution notices cannot be construed <nl> + as modifying the License . <nl> + <nl> + You may add Your own copyright statement to Your modifications and <nl> + may provide additional or different license terms and conditions <nl> + for use , reproduction , or distribution of Your modifications , or <nl> + for any such Derivative Works as a whole , provided Your use , <nl> + reproduction , and distribution of the Work otherwise complies with <nl> + the conditions stated in this License . <nl> + <nl> + 5 . Submission of Contributions . Unless You explicitly state otherwise , <nl> + any Contribution intentionally submitted for inclusion in the Work <nl> + by You to the Licensor shall be under the terms and conditions of <nl> + this License , without any additional terms or conditions . <nl> + Notwithstanding the above , nothing herein shall supersede or modify <nl> + the terms of any separate license agreement you may have executed <nl> + with Licensor regarding such Contributions . <nl> + <nl> + 6 . Trademarks . This License does not grant permission to use the trade <nl> + names , trademarks , service marks , or product names of the Licensor , <nl> + except as required for reasonable and customary use in describing the <nl> + origin of the Work and reproducing the content of the NOTICE file . <nl> + <nl> + 7 . Disclaimer of Warranty . Unless required by applicable law or <nl> + agreed to in writing , Licensor provides the Work ( and each <nl> + Contributor provides its Contributions ) on an " AS IS " BASIS , <nl> + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or <nl> + implied , including , without limitation , any warranties or conditions <nl> + of TITLE , NON - INFRINGEMENT , MERCHANTABILITY , or FITNESS FOR A <nl> + PARTICULAR PURPOSE . You are solely responsible for determining the <nl> + appropriateness of using or redistributing the Work and assume any <nl> + risks associated with Your exercise of permissions under this License . <nl> + <nl> + 8 . Limitation of Liability . In no event and under no legal theory , <nl> + whether in tort ( including negligence ) , contract , or otherwise , <nl> + unless required by applicable law ( such as deliberate and grossly <nl> + negligent acts ) or agreed to in writing , shall any Contributor be <nl> + liable to You for damages , including any direct , indirect , special , <nl> + incidental , or consequential damages of any character arising as a <nl> + result of this License or out of the use or inability to use the <nl> + Work ( including but not limited to damages for loss of goodwill , <nl> + work stoppage , computer failure or malfunction , or any and all <nl> + other commercial damages or losses ) , even if such Contributor <nl> + has been advised of the possibility of such damages . <nl> + <nl> + 9 . Accepting Warranty or Additional Liability . While redistributing <nl> + the Work or Derivative Works thereof , You may choose to offer , <nl> + and charge a fee for , acceptance of support , warranty , indemnity , <nl> + or other liability obligations and / or rights consistent with this <nl> + License . However , in accepting such obligations , You may act only <nl> + on Your own behalf and on Your sole responsibility , not on behalf <nl> + of any other Contributor , and only if You agree to indemnify , <nl> + defend , and hold each Contributor harmless for any liability <nl> + incurred by , or claims asserted against , such Contributor by reason <nl> + of your accepting any such warranty or additional liability . <nl> + <nl> + END OF TERMS AND CONDITIONS <nl> diff - - git a / ASL2 . 0 b / ASL2 . 0 <nl> deleted file mode 100644 <nl> index f433b1a . . 0000000 <nl> - - - a / ASL2 . 0 <nl> + + + / dev / null <nl> @ @ - 1 , 177 + 0 , 0 @ @ <nl> - <nl> - Apache License <nl> - Version 2 . 0 , January 2004 <nl> - http : / / www . apache . org / licenses / <nl> - <nl> - TERMS AND CONDITIONS FOR USE , REPRODUCTION , AND DISTRIBUTION <nl> - <nl> - 1 . Definitions . <nl> - <nl> - " License " shall mean the terms and conditions for use , reproduction , <nl> - and distribution as defined by Sections 1 through 9 of this document . <nl> - <nl> - " Licensor " shall mean the copyright owner or entity authorized by <nl> - the copyright owner that is granting the License . <nl> - <nl> - " Legal Entity " shall mean the union of the acting entity and all <nl> - other entities that control , are controlled by , or are under common <nl> - control with that entity . For the purposes of this definition , <nl> - " control " means ( i ) the power , direct or indirect , to cause the <nl> - direction or management of such entity , whether by contract or <nl> - otherwise , or ( ii ) ownership of fifty percent ( 50 % ) or more of the <nl> - outstanding shares , or ( iii ) beneficial ownership of such entity . <nl> - <nl> - " You " ( or " Your " ) shall mean an individual or Legal Entity <nl> - exercising permissions granted by this License . <nl> - <nl> - " Source " form shall mean the preferred form for making modifications , <nl> - including but not limited to software source code , documentation <nl> - source , and configuration files . <nl> - <nl> - " Object " form shall mean any form resulting from mechanical <nl> - transformation or translation of a Source form , including but <nl> - not limited to compiled object code , generated documentation , <nl> - and conversions to other media types . <nl> - <nl> - " Work " shall mean the work of authorship , whether in Source or <nl> - Object form , made available under the License , as indicated by a <nl> - copyright notice that is included in or attached to the work <nl> - ( an example is provided in the Appendix below ) . <nl> - <nl> - " Derivative Works " shall mean any work , whether in Source or Object <nl> - form , that is based on ( or derived from ) the Work and for which the <nl> - editorial revisions , annotations , elaborations , or other modifications <nl> - represent , as a whole , an original work of authorship . For the purposes <nl> - of this License , Derivative Works shall not include works that remain <nl> - separable from , or merely link ( or bind by name ) to the interfaces of , <nl> - the Work and Derivative Works thereof . <nl> - <nl> - " Contribution " shall mean any work of authorship , including <nl> - the original version of the Work and any modifications or additions <nl> - to that Work or Derivative Works thereof , that is intentionally <nl> - submitted to Licensor for inclusion in the Work by the copyright owner <nl> - or by an individual or Legal Entity authorized to submit on behalf of <nl> - the copyright owner . For the purposes of this definition , " submitted " <nl> - means any form of electronic , verbal , or written communication sent <nl> - to the Licensor or its representatives , including but not limited to <nl> - communication on electronic mailing lists , source code control systems , <nl> - and issue tracking systems that are managed by , or on behalf of , the <nl> - Licensor for the purpose of discussing and improving the Work , but <nl> - excluding communication that is conspicuously marked or otherwise <nl> - designated in writing by the copyright owner as " Not a Contribution . " <nl> - <nl> - " Contributor " shall mean Licensor and any individual or Legal Entity <nl> - on behalf of whom a Contribution has been received by Licensor and <nl> - subsequently incorporated within the Work . <nl> - <nl> - 2 . Grant of Copyright License . Subject to the terms and conditions of <nl> - this License , each Contributor hereby grants to You a perpetual , <nl> - worldwide , non - exclusive , no - charge , royalty - free , irrevocable <nl> - copyright license to reproduce , prepare Derivative Works of , <nl> - publicly display , publicly perform , sublicense , and distribute the <nl> - Work and such Derivative Works in Source or Object form . <nl> - <nl> - 3 . Grant of Patent License . Subject to the terms and conditions of <nl> - this License , each Contributor hereby grants to You a perpetual , <nl> - worldwide , non - exclusive , no - charge , royalty - free , irrevocable <nl> - ( except as stated in this section ) patent license to make , have made , <nl> - use , offer to sell , sell , import , and otherwise transfer the Work , <nl> - where such license applies only to those patent claims licensable <nl> - by such Contributor that are necessarily infringed by their <nl> - Contribution ( s ) alone or by combination of their Contribution ( s ) <nl> - with the Work to which such Contribution ( s ) was submitted . If You <nl> - institute patent litigation against any entity ( including a <nl> - cross - claim or counterclaim in a lawsuit ) alleging that the Work <nl> - or a Contribution incorporated within the Work constitutes direct <nl> - or contributory patent infringement , then any patent licenses <nl> - granted to You under this License for that Work shall terminate <nl> - as of the date such litigation is filed . <nl> - <nl> - 4 . Redistribution . You may reproduce and distribute copies of the <nl> - Work or Derivative Works thereof in any medium , with or without <nl> - modifications , and in Source or Object form , provided that You <nl> - meet the following conditions : <nl> - <nl> - ( a ) You must give any other recipients of the Work or <nl> - Derivative Works a copy of this License ; and <nl> - <nl> - ( b ) You must cause any modified files to carry prominent notices <nl> - stating that You changed the files ; and <nl> - <nl> - ( c ) You must retain , in the Source form of any Derivative Works <nl> - that You distribute , all copyright , patent , trademark , and <nl> - attribution notices from the Source form of the Work , <nl> - excluding those notices that do not pertain to any part of <nl> - the Derivative Works ; and <nl> - <nl> - ( d ) If the Work includes a " NOTICE " text file as part of its <nl> - distribution , then any Derivative Works that You distribute must <nl> - include a readable copy of the attribution notices contained <nl> - within such NOTICE file , excluding those notices that do not <nl> - pertain to any part of the Derivative Works , in at least one <nl> - of the following places : within a NOTICE text file distributed <nl> - as part of the Derivative Works ; within the Source form or <nl> - documentation , if provided along with the Derivative Works ; or , <nl> - within a display generated by the Derivative Works , if and <nl> - wherever such third - party notices normally appear . The contents <nl> - of the NOTICE file are for informational purposes only and <nl> - do not modify the License . You may add Your own attribution <nl> - notices within Derivative Works that You distribute , alongside <nl> - or as an addendum to the NOTICE text from the Work , provided <nl> - that such additional attribution notices cannot be construed <nl> - as modifying the License . <nl> - <nl> - You may add Your own copyright statement to Your modifications and <nl> - may provide additional or different license terms and conditions <nl> - for use , reproduction , or distribution of Your modifications , or <nl> - for any such Derivative Works as a whole , provided Your use , <nl> - reproduction , and distribution of the Work otherwise complies with <nl> - the conditions stated in this License . <nl> - <nl> - 5 . Submission of Contributions . Unless You explicitly state otherwise , <nl> - any Contribution intentionally submitted for inclusion in the Work <nl> - by You to the Licensor shall be under the terms and conditions of <nl> - this License , without any additional terms or conditions . <nl> - Notwithstanding the above , nothing herein shall supersede or modify <nl> - the terms of any separate license agreement you may have executed <nl> - with Licensor regarding such Contributions . <nl> - <nl> - 6 . Trademarks . This License does not grant permission to use the trade <nl> - names , trademarks , service marks , or product names of the Licensor , <nl> - except as required for reasonable and customary use in describing the <nl> - origin of the Work and reproducing the content of the NOTICE file . <nl> - <nl> - 7 . Disclaimer of Warranty . Unless required by applicable law or <nl> - agreed to in writing , Licensor provides the Work ( and each <nl> - Contributor provides its Contributions ) on an " AS IS " BASIS , <nl> - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND , either express or <nl> - implied , including , without limitation , any warranties or conditions <nl> - of TITLE , NON - INFRINGEMENT , MERCHANTABILITY , or FITNESS FOR A <nl> - PARTICULAR PURPOSE . You are solely responsible for determining the <nl> - appropriateness of using or redistributing the Work and assume any <nl> - risks associated with Your exercise of permissions under this License . <nl> - <nl> - 8 . Limitation of Liability . In no event and under no legal theory , <nl> - whether in tort ( including negligence ) , contract , or otherwise , <nl> - unless required by applicable law ( such as deliberate and grossly <nl> - negligent acts ) or agreed to in writing , shall any Contributor be <nl> - liable to You for damages , including any direct , indirect , special , <nl> - incidental , or consequential damages of any character arising as a <nl> - result of this License or out of the use or inability to use the <nl> - Work ( including but not limited to damages for loss of goodwill , <nl> - work stoppage , computer failure or malfunction , or any and all <nl> - other commercial damages or losses ) , even if such Contributor <nl> - has been advised of the possibility of such damages . <nl> - <nl> - 9 . Accepting Warranty or Additional Liability . While redistributing <nl> - the Work or Derivative Works thereof , You may choose to offer , <nl> - and charge a fee for , acceptance of support , warranty , indemnity , <nl> - or other liability obligations and / or rights consistent with this <nl> - License . However , in accepting such obligations , You may act only <nl> - on Your own behalf and on Your sole responsibility , not on behalf <nl> - of any other Contributor , and only if You agree to indemnify , <nl> - defend , and hold each Contributor harmless for any liability <nl> - incurred by , or claims asserted against , such Contributor by reason <nl> - of your accepting any such warranty or additional liability . <nl> - <nl> - END OF TERMS AND CONDITIONS <nl> diff - - git a / CHANGES . md b / CHANGES . md <nl> index 9af3bfa . . 1ea827a 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and ASL ( see LICENSE ) . <nl> + NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and AL ( see LICENSE ) . <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> @ @ - 72 , 6 + 72 , 7 @ @ Bug Fixes <nl> * [ # 633 ] ( https : / / github . com / java - native - access / jna / pull / 633 ) : Restore default usage of platform native encoding for Java strings passed to native functions ( was hard - coded to UTF - 8 in 4 . 0 and later ) [ @ amake ] ( https : / / github . com / amake ) <nl> * [ # 634 ] ( https : / / github . com / java - native - access / jna / pull / 634 ) : Improve BSTR handling and add ` SysStringByteLen ` and ` SysStringLen ` to ` com . sun . jna . platform . win32 . OleAuto ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 646 ] ( https : / / github . com / java - native - access / jna / issues / 646 ) : ` platform . win32 . COM . COMBindingBaseObject ` swallows reason if instantiation fails - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 647 ] ( https : / / github . com / java - native - access / jna / pull / 647 ) : Update references to Apache License as requested by issue # 673 [ @ bhamail ] ( https : / / github . com / bhamail ) <nl> <nl> Release 4 . 2 . 1 <nl> = = = = = = = = = = = = = <nl> diff - - git a / LICENSE b / LICENSE <nl> index 6de5f5d . . a2c4ca6 100644 <nl> - - - a / LICENSE <nl> + + + b / LICENSE <nl> @ @ - 13 , 10 + 13 , 10 @ @ A copy is also included in the downloadable source code package <nl> containing JNA , in file " LGPL2 . 1 " , under the same directory <nl> as this file . <nl> <nl> - You may obtain a copy of the ASL License at : <nl> + You may obtain a copy of the AL License at : <nl> <nl> http : / / www . apache . org / licenses / <nl> <nl> A copy is also included in the downloadable source code package <nl> - containing JNA , in file " ASL2 . 0 " , under the same directory <nl> + containing JNA , in file " AL2 . 0 " , under the same directory <nl> as this file . <nl> diff - - git a / LICENSE . AL b / LICENSE . AL <nl> new file mode 100644 <nl> index 0000000 . . a958a38 <nl> - - - / dev / null <nl> + + + b / LICENSE . AL <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + This copy of JNA is licensed under the <nl> + Apache ( Software ) License , version 2 . 0 ( " the License " ) . <nl> + See the License for details about distribution rights , and the <nl> + specific rights regarding derivate works . <nl> + <nl> + You may obtain a copy of the License at : <nl> + <nl> + http : / / www . apache . org / licenses / <nl> + <nl> + A copy is also included in the downloadable source code package <nl> + containing JNA , in file " AL2 . 0 " , under the same directory <nl> + as this file . <nl> diff - - git a / LICENSE . ASL b / LICENSE . ASL <nl> deleted file mode 100644 <nl> index 3f12dee . . 0000000 <nl> - - - a / LICENSE . ASL <nl> + + + / dev / null <nl> @ @ - 1 , 12 + 0 , 0 @ @ <nl> - This copy of JNA is licensed under the <nl> - Apache ( Software ) License , version 2 . 0 ( " the License " ) . <nl> - See the License for details about distribution rights , and the <nl> - specific rights regarding derivate works . <nl> - <nl> - You may obtain a copy of the License at : <nl> - <nl> - http : / / www . apache . org / licenses / <nl> - <nl> - A copy is also included in the downloadable source code package <nl> - containing JNA , in file " ASL2 . 0 " , under the same directory <nl> - as this file . <nl> diff - - git a / build . xml b / build . xml <nl> index daab651 . . c59d844 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 1143 , 7 + 1143 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < ! - - Javadoc - - > <nl> < ! - - JNA sources only , for use in Linux build from source / shared libffi - - > <nl> < zip zipfile = " $ { dist } / src . zip " > <nl> - < zipfileset dir = " . " includes = " build . xml , $ { pom } , LICENSE , LGPL2 . 1 , ASL2 . 0 " / > <nl> + < zipfileset dir = " . " includes = " build . xml , $ { pom } , LICENSE , LGPL2 . 1 , AL2 . 0 " / > <nl> < zipfileset dir = " $ { src } " includes = " * * / * . java " prefix = " src " / > <nl> < zipfileset dir = " $ { test . src } " includes = " * * / * . java " prefix = " test " / > <nl> < zipfileset dir = " $ { native } " excludes = " libffi , libffi / * * / * , build , build / * * / * " prefix = " native " / > <nl> diff - - git a / parent / pom . xml b / parent / pom . xml <nl> index b299ad1 . . 026b398 100644 <nl> - - - a / parent / pom . xml <nl> + + + b / parent / pom . xml <nl> @ @ - 18 , 7 + 18 , 7 @ @ <nl> < distribution > repo < / distribution > <nl> < / license > <nl> < license > <nl> - < name > ASL , version 2 < / name > <nl> + < name > AL v2 . 0 < / name > <nl> < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt < / url > <nl> < distribution > repo < / distribution > <nl> < / license > <nl> diff - - git a / pom - jna - platform . xml b / pom - jna - platform . xml <nl> index c4d29b6 . . b61eea5 100644 <nl> - - - a / pom - jna - platform . xml <nl> + + + b / pom - jna - platform . xml <nl> @ @ - 20 , 7 + 20 , 7 @ @ <nl> < distribution > repo < / distribution > <nl> < / license > <nl> < license > <nl> - < name > ASL , version 2 < / name > <nl> + < name > AL v2 . 0 < / name > <nl> < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt < / url > <nl> < distribution > repo < / distribution > <nl> < / license > <nl> diff - - git a / pom - jna . xml b / pom - jna . xml <nl> index 54d63ce . . 9da3a52 100644 <nl> - - - a / pom - jna . xml <nl> + + + b / pom - jna . xml <nl> @ @ - 20 , 7 + 20 , 7 @ @ <nl> < distribution > repo < / distribution > <nl> < / license > <nl> < license > <nl> - < name > ASL , version 2 < / name > <nl> + < name > AL v2 . 0 < / name > <nl> < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt < / url > <nl> < distribution > repo < / distribution > <nl> < / license > <nl> @ @ - 50 , 4 + 50 , 4 @ @ <nl> < / developer > <nl> < / developers > <nl> <nl> - < / project > <nl> \ No newline at end of file <nl> + < / project >
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 59f3b28 . . 9af3bfa 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 54 , 6 + 54 , 7 @ @ Features <nl> * [ # 649 ] ( https : / / github . com / java - native - access / jna / pull / 649 ) : Bugfix msoffice sample and add two samples taken from MSDN and translated from VisualBasic to Java - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 654 ] ( https : / / github . com / java - native - access / jna / pull / 654 ) : Support named arguments for ` com . sun . jna . platform . win32 . COM . util . CallbackProxy ` based callbacks - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 659 ] ( https : / / github . com / java - native - access / jna / issues / 659 ) : Enable LCID ( locale ) override for ` com . sun . jna . platform . win32 . COM . util . ProxyObject ` - based COM calls - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 665 ] ( https : / / github . com / java - native - access / jna / pull / 665 ) : Added ` XSetWMProtocols ` and ` XGetWMProtocols ` to ` com . sun . jna . platform . unix . X11 ` - [ @ zainab - ali ] ( https : / / github . com / zainab - ali ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> index 1b2e3ce . . 43c883f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> @ @ - 795 , 6 + 795 , 10 @ @ public interface X11 extends Library { <nl> String icon _ name , String [ ] argv , int argc , <nl> XSizeHints normal _ hints , Pointer wm _ hints , <nl> Pointer class _ hints ) ; <nl> + <nl> + int XSetWMProtocols ( Display display , Window window , Atom [ ] atom , int count ) ; <nl> + int XGetWMProtocols ( Display display , Window w , PointerByReference protocols _ return , IntByReference count _ return ) ; <nl> + <nl> int XFree ( Pointer data ) ; <nl> Window XCreateSimpleWindow ( Display display , Window parent , int x , int y , <nl> int width , int height , int border _ width , <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java b / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> index 30d1dc4 . . 9b36717 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> @ @ - 15 , 8 + 15 , 10 @ @ package com . sun . jna . platform . unix ; <nl> import java . awt . GraphicsEnvironment ; <nl> <nl> import com . sun . jna . ptr . PointerByReference ; <nl> + import com . sun . jna . ptr . IntByReference ; <nl> <nl> import junit . framework . TestCase ; <nl> + import org . junit . Assert ; <nl> <nl> / * * <nl> * Exercise the { @ link X11 } class . <nl> @ @ - 76 , 6 + 78 , 32 @ @ public class X11Test extends TestCase { <nl> } <nl> } <nl> <nl> + public void testXSetWMProtocols ( ) { <nl> + X11 . Atom [ ] atoms = new X11 . Atom [ ] { X11 . INSTANCE . XInternAtom ( display , " WM _ DELETE _ WINDOW " , false ) , X11 . INSTANCE . XInternAtom ( display , " WM _ TAKE _ FOCUS " , false ) } ; <nl> + int status = X11 . INSTANCE . XSetWMProtocols ( display , root , atoms , atoms . length ) ; <nl> + Assert . assertNotEquals ( " Bad status for XSetWMProtocols " , 0 , status ) ; <nl> + } <nl> + <nl> + public void testXGetWMProtocols ( ) { <nl> + X11 . Atom [ ] sentAtoms = new X11 . Atom [ ] { X11 . INSTANCE . XInternAtom ( display , " WM _ DELETE _ WINDOW " , false ) , X11 . INSTANCE . XInternAtom ( display , " WM _ TAKE _ FOCUS " , false ) } ; <nl> + X11 . INSTANCE . XSetWMProtocols ( display , root , sentAtoms , sentAtoms . length ) ; <nl> + <nl> + PointerByReference protocols = new PointerByReference ( ) ; <nl> + IntByReference count = new IntByReference ( ) ; <nl> + <nl> + int status = X11 . INSTANCE . XGetWMProtocols ( display , root , protocols , count ) ; <nl> + <nl> + X11 . Atom [ ] receivedAtoms = new X11 . Atom [ count . getValue ( ) ] ; <nl> + for ( int i = count . getValue ( ) - 1 ; i > = 0 ; i - - ) { <nl> + receivedAtoms [ i ] = new X11 . Atom ( protocols . getValue ( ) . getLong ( X11 . Atom . SIZE * i ) ) ; <nl> + } <nl> + X11 . INSTANCE . XFree ( protocols . getValue ( ) ) ; <nl> + <nl> + Assert . assertNotEquals ( " Bad status for XGetWMProtocols " , 0 , status ) ; <nl> + Assert . assertEquals ( " Wrong number of protocols returned for XGetWMProtocols " , sentAtoms . length , receivedAtoms . length ) ; <nl> + Assert . assertArrayEquals ( " Sent protocols were not equal to returned procols for XGetWMProtocols " , sentAtoms , receivedAtoms ) ; <nl> + } <nl> + <nl> public static void main ( java . lang . String [ ] argList ) { <nl> junit . textui . TestRunner . run ( X11Test . class ) ; <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 672f0aa . . b7c1e66 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 52 , 6 + 52 , 7 @ @ Features <nl> * [ # 642 ] ( https : / / github . com / java - native - access / jna / pull / 642 ) : COM calls with variable number of arguments ( varargs ) are now supported - [ @ SevenOf9Sleeper ] ( https : / / github . com / SevenOf9Sleeper ) . <nl> * [ # 644 ] ( https : / / github . com / java - native - access / jna / pull / 644 ) : New ant target ' install ' for installing JNA artifacts in local m2 - repository - [ @ SevenOf9Sleeper ] ( https : / / github . com / SevenOf9Sleeper ) . <nl> * [ # 649 ] ( https : / / github . com / java - native - access / jna / pull / 649 ) : Bugfix msoffice sample and add two samples taken from MSDN and translated from VisualBasic to Java - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 654 ] ( https : / / github . com / java - native - access / jna / pull / 654 ) : Support named arguments for ` com . sun . jna . platform . win32 . COM . util . CallbackProxy ` based callbacks - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> index 857ecd2 . . ddad2c2 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> @ @ - 236 , 16 + 236 , 12 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> <nl> / / Handle special - case for property - puts ! <nl> if ( nType = = OleAuto . DISPATCH _ PROPERTYPUT ) { <nl> - dp . cNamedArgs = new UINT ( _ argsLen ) ; <nl> - dp . rgdispidNamedArgs = new DISPIDByReference ( <nl> - OaIdl . DISPID _ PROPERTYPUT ) ; <nl> + dp . setRgdispidNamedArgs ( new DISPID [ ] { OaIdl . DISPID _ PROPERTYPUT } ) ; <nl> } <nl> <nl> / / Build DISPPARAMS <nl> if ( _ argsLen > 0 ) { <nl> - dp . cArgs = new UINT ( _ args . length ) ; <nl> - / / make pointer of variant array <nl> - dp . rgvarg = new VariantArg . ByReference ( _ args ) ; <nl> + dp . setArgs ( _ args ) ; <nl> <nl> / / write ' DISPPARAMS ' structure to memory <nl> dp . write ( ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> index 0504051 . . f675aaa 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> @ @ - 20 , 7 + 20 , 6 @ @ import java . util . Map ; <nl> <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . WString ; <nl> - import com . sun . jna . platform . win32 . Guid ; <nl> import com . sun . jna . platform . win32 . Guid . IID ; <nl> import com . sun . jna . platform . win32 . Guid . REFIID ; <nl> import com . sun . jna . platform . win32 . OaIdl . DISPID ; <nl> @ @ - 29 , 7 + 28 , 6 @ @ import com . sun . jna . platform . win32 . OaIdl . EXCEPINFO ; <nl> import com . sun . jna . platform . win32 . OleAuto . DISPPARAMS ; <nl> import com . sun . jna . platform . win32 . Variant ; <nl> import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> - import com . sun . jna . platform . win32 . Variant . VariantArg ; <nl> import com . sun . jna . platform . win32 . WinDef . LCID ; <nl> import com . sun . jna . platform . win32 . WinDef . UINT ; <nl> import com . sun . jna . platform . win32 . WinDef . UINTByReference ; <nl> @ @ - 40 , 7 + 38 , 6 @ @ import com . sun . jna . platform . win32 . COM . COMException ; <nl> import com . sun . jna . platform . win32 . COM . COMUtils ; <nl> import com . sun . jna . platform . win32 . COM . Dispatch ; <nl> import com . sun . jna . platform . win32 . COM . DispatchListener ; <nl> - import com . sun . jna . platform . win32 . COM . IDispatch ; <nl> import com . sun . jna . platform . win32 . COM . IDispatchCallback ; <nl> import com . sun . jna . platform . win32 . COM . Unknown ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComEventCallback ; <nl> @ @ - 49 , 7 + 46 , 15 @ @ import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> <nl> public class CallbackProxy implements IDispatchCallback { <nl> - <nl> + / / Helper declarations , initialized to default values by jvm <nl> + private static boolean DEFAULT _ BOOLEAN ; <nl> + private static byte DEFAULT _ BYTE ; <nl> + private static short DEFAULT _ SHORT ; <nl> + private static int DEFAULT _ INT ; <nl> + private static long DEFAULT _ LONG ; <nl> + private static float DEFAULT _ FLOAT ; <nl> + private static double DEFAULT _ DOUBLE ; <nl> + <nl> 	 public CallbackProxy ( Factory factory , Class < ? > comEventCallbackInterface , <nl> 	 	 	 IComEventCallbackListener comEventCallbackListener ) { <nl> 	 	 this . factory = factory ; <nl> @ @ - 90 , 6 + 95 , 11 @ @ public class CallbackProxy implements IDispatchCallback { <nl> 	 	 	 	 if ( - 1 = = dispId ) { <nl> 	 	 	 	 	 dispId = this . fetchDispIdFromName ( annotation ) ; <nl> 	 	 	 	 } <nl> + if ( dispId = = - 1 ) { <nl> + CallbackProxy . this . comEventCallbackListener . errorReceivingCallbackEvent ( <nl> + " DISPID for " + meth . getName ( ) + " not found " , <nl> + null ) ; <nl> + } <nl> 	 	 	 	 map . put ( new DISPID ( dispId ) , meth ) ; <nl> 	 	 	 } <nl> 	 	 } <nl> @ @ - 105 , 50 + 115 , 105 @ @ public class CallbackProxy implements IDispatchCallback { <nl> 	 void invokeOnThread ( final DISPID dispIdMember , final REFIID riid , LCID lcid , WORD wFlags , <nl> final DISPPARAMS . ByReference pDispParams ) { <nl> <nl> - final Method eventMethod ; <nl> - if ( CallbackProxy . this . dsipIdMap . containsKey ( dispIdMember ) ) { <nl> - eventMethod = CallbackProxy . this . dsipIdMap . get ( dispIdMember ) ; <nl> - if ( eventMethod . getParameterTypes ( ) . length ! = pDispParams . cArgs . intValue ( ) ) { <nl> - CallbackProxy . this . comEventCallbackListener . errorReceivingCallbackEvent ( <nl> - " Trying to invoke method " + eventMethod + " with " + pDispParams . cArgs . intValue ( ) + " arguments " , <nl> - null ) ; <nl> - return ; <nl> - } <nl> - } else { <nl> + VARIANT [ ] arguments = pDispParams . getArgs ( ) ; <nl> + <nl> + final Method eventMethod = CallbackProxy . this . dsipIdMap . get ( dispIdMember ) ; <nl> + if ( eventMethod = = null ) { <nl> CallbackProxy . this . comEventCallbackListener . errorReceivingCallbackEvent ( <nl> " No method found with dispId = " + dispIdMember , null ) ; <nl> return ; <nl> } <nl> <nl> + / * * <nl> + * DISPPARAMs provides two different ways to pass arguments . <nl> + * <nl> + * Arguments can be passed as a linear list with all arguments <nl> + * specified to a certain position ( positional ) or the position of <nl> + * an argument can be passed via the rgdispidNamedArgs array <nl> + * ( named ) . <nl> + * <nl> + * pDispParams . rgvarg ( length in pDispParams . cArgs ) contains all <nl> + * arguments ( named + position based ) <nl> + * <nl> + * pDispParams . rgdispidNamedArgs ( length in pDispParams . cNamedArgs ) <nl> + * contains the named parameters as DISPIDs - the DISPIDs are the <nl> + * target index in the method signature ( zero based ) . <nl> + * <nl> + * Each entry in pDispParams . rgvarg is either position based or name <nl> + * based and the position bases arguments are passed in reverse <nl> + * order , so getting this : <nl> + * <nl> + * rgvarg = [ " arg1 " , " arg2 " , " arg3 " , " arg4 " , " arg5 " ] <nl> + * rgdispidNamedArgs = [ 3 , 4 ] <nl> + * <nl> + * Would lead to this paramater array in the handler : <nl> + * <nl> + * [ " arg5 " , " arg4 " , " arg3 " , " arg1 " , " arg2 " ] <nl> + * <nl> + * See also : <nl> + * https : / / msdn . microsoft . com / de - de / library / windows / desktop / ms221653 % 28v = vs . 85 % 29 . aspx <nl> + * / <nl> + <nl> / / Arguments are converted to the JAVA side and IDispatch Interfaces <nl> / / are wrapped into an ProxyObject if so requested . <nl> / / <nl> / / Out - Parameter need to be specified as VARIANT , VARIANT args are <nl> / / not converted , so COM memory allocation rules apply . <nl> - final Class < ? > [ ] params = eventMethod . getParameterTypes ( ) ; <nl> - List < Object > rjargs = new ArrayList < Object > ( ) ; <nl> - if ( pDispParams . cArgs . intValue ( ) > 0 ) { <nl> - VariantArg vargs = pDispParams . rgvarg ; <nl> - vargs . setArraySize ( pDispParams . cArgs . intValue ( ) ) ; <nl> - for ( int i = 0 ; i < vargs . variantArg . length ; i + + ) { <nl> - Class targetClass = params [ vargs . variantArg . length - 1 - i ] ; <nl> - Variant . VARIANT varg = vargs . variantArg [ i ] ; <nl> - Object jarg = Convert . toJavaObject ( varg , targetClass , factory , true , false ) ; <nl> - rjargs . add ( jarg ) ; <nl> + <nl> + DISPID [ ] positionMap = pDispParams . getRgdispidNamedArgs ( ) ; <nl> + <nl> + final Class < ? > [ ] paramTypes = eventMethod . getParameterTypes ( ) ; <nl> + final Object [ ] params = new Object [ paramTypes . length ] ; <nl> + <nl> + / / Handle position based parameters first <nl> + for ( int i = 0 ; i < params . length & & ( arguments . length - positionMap . length - i ) > 0 ; i + + ) { <nl> + Class targetClass = paramTypes [ i ] ; <nl> + Variant . VARIANT varg = arguments [ arguments . length - i - 1 ] ; <nl> + params [ i ] = Convert . toJavaObject ( varg , targetClass , factory , true , false ) ; <nl> + } <nl> + <nl> + for ( int i = 0 ; i < positionMap . length ; i + + ) { <nl> + int targetPosition = positionMap [ i ] . intValue ( ) ; <nl> + if ( targetPosition > = params . length ) { <nl> + / / If less parameters are mapped then supplied , ignore <nl> + continue ; <nl> } <nl> + Class targetClass = paramTypes [ targetPosition ] ; <nl> + Variant . VARIANT varg = arguments [ i ] ; <nl> + params [ targetPosition ] = Convert . toJavaObject ( varg , targetClass , factory , true , false ) ; <nl> } <nl> <nl> - List < Object > margs = new ArrayList < Object > ( ) ; <nl> - try { <nl> - / / Reverse order from calling convention <nl> - int lastParamIdx = eventMethod . getParameterTypes ( ) . length - 1 ; <nl> - for ( int i = lastParamIdx ; i > = 0 ; i - - ) { <nl> - margs . add ( rjargs . get ( i ) ) ; <nl> + <nl> + / / Make sure the parameters are correctly initialized - - primitives <nl> + / / are initialized to their default value , else a NullPointer <nl> + / / exception occurs while doing the call into the target method <nl> + for ( int i = 0 ; i < params . length ; i + + ) { <nl> + if ( params [ i ] = = null & & paramTypes [ i ] . isPrimitive ( ) ) { <nl> + if ( paramTypes [ i ] . equals ( boolean . class ) ) { <nl> + params [ i ] = DEFAULT _ BOOLEAN ; <nl> + } else if ( paramTypes [ i ] . equals ( byte . class ) ) { <nl> + params [ i ] = DEFAULT _ BYTE ; <nl> + } else if ( paramTypes [ i ] . equals ( short . class ) ) { <nl> + params [ i ] = DEFAULT _ SHORT ; <nl> + } else if ( paramTypes [ i ] . equals ( int . class ) ) { <nl> + params [ i ] = DEFAULT _ INT ; <nl> + } else if ( paramTypes [ i ] . equals ( long . class ) ) { <nl> + params [ i ] = DEFAULT _ LONG ; <nl> + } else if ( paramTypes [ i ] . equals ( float . class ) ) { <nl> + params [ i ] = DEFAULT _ FLOAT ; <nl> + } else if ( paramTypes [ i ] . equals ( double . class ) ) { <nl> + params [ i ] = DEFAULT _ DOUBLE ; <nl> + } else { <nl> + throw new IllegalArgumentException ( " Class type " + paramTypes [ i ] . getName ( ) + " not mapped to primitive default value . " ) ; <nl> + } <nl> } <nl> - eventMethod . invoke ( comEventCallbackListener , margs . toArray ( ) ) ; <nl> + } <nl> + <nl> + try { <nl> + eventMethod . invoke ( comEventCallbackListener , params ) ; <nl> } catch ( Exception e ) { <nl> - List < String > decodedClassNames = new ArrayList < String > ( margs . size ( ) ) ; <nl> - for ( Object o : margs ) { <nl> + List < String > decodedClassNames = new ArrayList < String > ( params . length ) ; <nl> + for ( Object o : params ) { <nl> if ( o = = null ) { <nl> decodedClassNames . add ( " NULL " ) ; <nl> } else { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> index 62dfeb4 . . 9b01908 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> @ @ - 595 , 8 + 595 , 7 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> <nl> 	 	 / / Handle special - case for property - puts ! <nl> 	 	 if ( nType = = OleAuto . DISPATCH _ PROPERTYPUT ) { <nl> - 	 	 	 dp . cNamedArgs = new UINT ( _ argsLen ) ; <nl> - 	 	 	 dp . rgdispidNamedArgs = new DISPIDByReference ( OaIdl . DISPID _ PROPERTYPUT ) ; <nl> + 	 	 	 dp . setRgdispidNamedArgs ( new DISPID [ ] { OaIdl . DISPID _ PROPERTYPUT } ) ; <nl> 	 	 } <nl> <nl> / / Apply " fix " according to <nl> @ @ - 631 , 9 + 630 , 7 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> <nl> 	 	 / / Build DISPPARAMS <nl> 	 	 if ( _ argsLen > 0 ) { <nl> - 	 	 	 dp . cArgs = new UINT ( _ args . length ) ; <nl> - 	 	 	 / / make pointer of variant array <nl> - 	 	 	 dp . rgvarg = new VariantArg . ByReference ( _ args ) ; <nl> + 	 	 	 dp . setArgs ( _ args ) ; <nl> <nl> 	 	 	 / / write ' DISPPARAMS ' structure to memory <nl> 	 	 	 dp . write ( ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OleAuto . java b / contrib / platform / src / com / sun / jna / platform / win32 / OleAuto . java <nl> index a7af894 . . e93aebf 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OleAuto . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OleAuto . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> + import com . sun . jna . Memory ; <nl> import java . util . List ; <nl> <nl> import com . sun . jna . Native ; <nl> @ @ - 19 , 7 + 20 , 7 @ @ import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> import com . sun . jna . WString ; <nl> import com . sun . jna . platform . win32 . Guid . GUID ; <nl> - import com . sun . jna . platform . win32 . OaIdl . DISPIDByReference ; <nl> + import com . sun . jna . platform . win32 . OaIdl . DISPID ; <nl> import com . sun . jna . platform . win32 . OaIdl . SAFEARRAY ; <nl> import com . sun . jna . platform . win32 . OaIdl . SAFEARRAYBOUND ; <nl> import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> @ @ - 563 , 15 + 564 , 61 @ @ public interface OleAuto extends StdCallLibrary { <nl> 	 	 / * * The rgvarg . * / <nl> 	 	 public VariantArg . ByReference rgvarg ; <nl> <nl> - 	 	 / * * The rgdispid named args . * / <nl> - 	 	 public DISPIDByReference rgdispidNamedArgs ; <nl> - <nl> - 	 	 / * * The c args . * / <nl> - 	 	 public UINT cArgs ; <nl> - <nl> - 	 	 / * * The c named args . * / <nl> - 	 	 public UINT cNamedArgs ; <nl> - <nl> + / * * The rgdispid named args . * / <nl> + public Pointer rgdispidNamedArgs = Pointer . NULL ; <nl> + <nl> + 	 	 / * * The c args . - use setArgs to update arguments * / <nl> + 	 	 public UINT cArgs = new UINT ( 0 ) ; <nl> + <nl> + 	 	 / * * The c named args . - use setRgdispidNamedArgs to update named arguments map * / <nl> + 	 	 public UINT cNamedArgs = new UINT ( 0 ) ; <nl> + <nl> + public DISPID [ ] getRgdispidNamedArgs ( ) { <nl> + DISPID [ ] namedArgs = null ; <nl> + int count = cNamedArgs . intValue ( ) ; <nl> + if ( rgdispidNamedArgs ! = null & & count > 0 ) { <nl> + int [ ] rawData = rgdispidNamedArgs . getIntArray ( 0 , count ) ; <nl> + namedArgs = new DISPID [ count ] ; <nl> + for ( int i = 0 ; i < count ; i + + ) { <nl> + namedArgs [ i ] = new DISPID ( rawData [ i ] ) ; <nl> + } <nl> + } else { <nl> + namedArgs = new DISPID [ 0 ] ; <nl> + } <nl> + return namedArgs ; <nl> + } <nl> + <nl> + public void setRgdispidNamedArgs ( DISPID [ ] namedArgs ) { <nl> + if ( namedArgs = = null ) { <nl> + namedArgs = new DISPID [ 0 ] ; <nl> + } <nl> + cNamedArgs = new UINT ( namedArgs . length ) ; <nl> + rgdispidNamedArgs = new Memory ( DISPID . SIZE * namedArgs . length ) ; <nl> + int [ ] rawData = new int [ namedArgs . length ] ; <nl> + for ( int i = 0 ; i < rawData . length ; i + + ) { <nl> + rawData [ i ] = namedArgs [ i ] . intValue ( ) ; <nl> + } <nl> + rgdispidNamedArgs . write ( 0 , rawData , 0 , namedArgs . length ) ; <nl> + } <nl> + <nl> + public VARIANT [ ] getArgs ( ) { <nl> + if ( this . rgvarg ! = null ) { <nl> + this . rgvarg . setArraySize ( cArgs . intValue ( ) ) ; <nl> + return this . rgvarg . variantArg ; <nl> + } else { <nl> + return new VARIANT [ 0 ] ; <nl> + } <nl> + } <nl> + <nl> + public void setArgs ( VARIANT [ ] arguments ) { <nl> + if ( arguments = = null ) { <nl> + arguments = new VARIANT [ 0 ] ; <nl> + } <nl> + <nl> + rgvarg = new VariantArg . ByReference ( arguments ) ; <nl> + cArgs = new UINT ( arguments . length ) ; <nl> + } <nl> + <nl> 	 	 / * * <nl> 	 	 * Instantiates a new dispparams . <nl> 	 	 * / <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ComEventCallbacks _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ComEventCallbacks _ Test . java <nl> index 4652cb6 . . 7d54294 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ComEventCallbacks _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ComEventCallbacks _ Test . java <nl> @ @ - 92 , 9 + 92 , 6 @ @ public class ComEventCallbacks _ Test { <nl> public void after ( ) { <nl> / / Shutdown Internet Explorer <nl> DISPPARAMS . ByReference pDispParams = new DISPPARAMS . ByReference ( ) ; <nl> - pDispParams . cArgs = new UINT ( 0 ) ; <nl> - pDispParams . cNamedArgs = new UINT ( 0 ) ; <nl> - pDispParams . rgvarg = null ; <nl> VARIANT . ByReference pVarResult = new VARIANT . ByReference ( ) ; <nl> IntByReference puArgErr = new IntByReference ( ) ; <nl> EXCEPINFO . ByReference pExcepInfo = new EXCEPINFO . ByReference ( ) ; <nl> @ @ - 196 , 27 + 193 , 24 @ @ public class ComEventCallbacks _ Test { <nl> VARIANT . ByReference pVarResult , EXCEPINFO . ByReference pExcepInfo , <nl> IntByReference puArgErr ) { <nl> <nl> - / / @ toDo : Move setArraySize into invoke method <nl> - if ( pDispParams . rgvarg ! = null & & pDispParams . cArgs . intValue ( ) > 0 ) { <nl> - pDispParams . rgvarg . setArraySize ( pDispParams . cArgs . intValue ( ) ) ; <nl> - } <nl> + VARIANT [ ] arguments = pDispParams . getArgs ( ) ; <nl> <nl> try { <nl> switch ( dispIdMember . intValue ( ) ) { <nl> case DISPID _ NavigateComplete2 : <nl> navigateComplete2Called = true ; <nl> / / URL ist passed as VARIANT $ ByReference <nl> - VARIANT urlByRef = pDispParams . rgvarg . variantArg [ 0 ] ; <nl> + VARIANT urlByRef = arguments [ 0 ] ; <nl> navigateComplete2String = ( ( VARIANT ) urlByRef . getValue ( ) ) . stringValue ( ) ; <nl> break ; <nl> case DISPID _ BeforeNavigate2 : <nl> - VARIANT Cancel = pDispParams . rgvarg . variantArg [ 0 ] ; <nl> - VARIANT Headers = pDispParams . rgvarg . variantArg [ 1 ] ; <nl> - VARIANT PostData = pDispParams . rgvarg . variantArg [ 2 ] ; <nl> - VARIANT TargetFrameName = pDispParams . rgvarg . variantArg [ 3 ] ; <nl> - VARIANT Flags = pDispParams . rgvarg . variantArg [ 4 ] ; <nl> - VARIANT URL = pDispParams . rgvarg . variantArg [ 5 ] ; <nl> - VARIANT pDisp = pDispParams . rgvarg . variantArg [ 6 ] ; <nl> + VARIANT Cancel = arguments [ 0 ] ; <nl> + VARIANT Headers = arguments [ 1 ] ; <nl> + VARIANT PostData = arguments [ 2 ] ; <nl> + VARIANT TargetFrameName = arguments [ 3 ] ; <nl> + VARIANT Flags = arguments [ 4 ] ; <nl> + VARIANT URL = arguments [ 5 ] ; <nl> + VARIANT pDisp = arguments [ 6 ] ; <nl> VARIANT _ BOOLByReference cancelValue = ( ( VARIANT _ BOOLByReference ) Cancel . getValue ( ) ) ; <nl> if ( blockNavigation ) { <nl> cancelValue . setValue ( Variant . VARIANT _ TRUE ) ; <nl> @ @ - 280 , 11 + 274 , 8 @ @ public class ComEventCallbacks _ Test { <nl> DISPPARAMS . ByReference pDispParams ; <nl> <nl> pDispParams = new DISPPARAMS . ByReference ( ) ; <nl> - pDispParams . cArgs = new UINT ( 1 ) ; <nl> - pDispParams . cNamedArgs = new UINT ( 1 ) ; <nl> - pDispParams . rgvarg = new Variant . VariantArg . ByReference ( new VARIANT [ 1 ] ) ; <nl> - pDispParams . rgvarg . variantArg [ 0 ] = new VARIANT ( true ) ; <nl> - pDispParams . rgdispidNamedArgs = new DISPIDByReference ( new DISPID ( OaIdl . DISPID _ PROPERTYPUT . intValue ( ) ) ) ; <nl> + pDispParams . setArgs ( new VARIANT [ ] { new VARIANT ( true ) } ) ; <nl> + pDispParams . setRgdispidNamedArgs ( new DISPID [ ] { OaIdl . DISPID _ PROPERTYPUT } ) ; <nl> / / Visible - Prioperty <nl> hr = ieDispatch . Invoke ( dispIdVisible . getValue ( ) , niid , lcid , propertyPutFlags , pDispParams , null , null , null ) ; <nl> COMUtils . checkRC ( hr ) ; <nl> @ @ - 319 , 11 + 310 , 9 @ @ public class ComEventCallbacks _ Test { <nl> String navigateURL = " https : / / github . com / java - native - access / jna " ; <nl> String blockedURL = " http : / / www . google . de " ; <nl> <nl> + VARIANT [ ] arguments = new VARIANT [ ] { new VARIANT ( navigateURL ) } ; <nl> pDispParams = new DISPPARAMS . ByReference ( ) ; <nl> - pDispParams . cArgs = new UINT ( 1 ) ; <nl> - pDispParams . cNamedArgs = new UINT ( 0 ) ; <nl> - pDispParams . rgvarg = new Variant . VariantArg . ByReference ( new VARIANT [ 1 ] ) ; <nl> - pDispParams . rgvarg . variantArg [ 0 ] = new VARIANT ( navigateURL ) ; <nl> + pDispParams . setArgs ( arguments ) ; <nl> hr = ieDispatch . Invoke ( dispIdNavigate . getValue ( ) , niid , lcid , methodFlags , pDispParams , pVarResult , pExcepInfo , puArgErr ) ; <nl> COMUtils . checkRC ( hr , pExcepInfo , puArgErr ) ; <nl> <nl> @ @ - 343 , 11 + 332 , 9 @ @ public class ComEventCallbacks _ Test { <nl> listener . navigateComplete2String = null ; <nl> listener . blockNavigation = true ; <nl> <nl> + arguments = new VARIANT [ ] { new VARIANT ( blockedURL ) } ; <nl> pDispParams = new DISPPARAMS . ByReference ( ) ; <nl> - pDispParams . cArgs = new UINT ( 1 ) ; <nl> - pDispParams . cNamedArgs = new UINT ( 0 ) ; <nl> - pDispParams . rgvarg = new Variant . VariantArg . ByReference ( new VARIANT [ 1 ] ) ; <nl> - pDispParams . rgvarg . variantArg [ 0 ] = new VARIANT ( blockedURL ) ; <nl> + pDispParams . setArgs ( arguments ) ; <nl> hr = ieDispatch . Invoke ( dispIdNavigate . getValue ( ) , niid , lcid , methodFlags , pDispParams , pVarResult , pExcepInfo , puArgErr ) ; <nl> COMUtils . checkRC ( hr , pExcepInfo , puArgErr ) ; <nl> <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks2 _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks2 _ Test . java <nl> new file mode 100644 <nl> index 0000000 . . d47406e <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks2 _ Test . java <nl> @ @ - 0 , 0 + 1 , 287 @ @ <nl> + package com . sun . jna . platform . win32 . COM . util ; <nl> + <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . platform . win32 . COM . util . annotation . ComEventCallback ; <nl> + import com . sun . jna . platform . win32 . COM . util . annotation . ComInterface ; <nl> + import com . sun . jna . platform . win32 . COM . util . annotation . ComObject ; <nl> + import com . sun . jna . platform . win32 . Ole32 ; <nl> + import com . sun . jna . platform . win32 . Variant ; <nl> + import org . junit . After ; <nl> + import org . junit . Assert ; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> + <nl> + public class ComEventCallbacks2 _ Test { <nl> + <nl> + static { <nl> + ClassLoader . getSystemClassLoader ( ) . setDefaultAssertionStatus ( true ) ; <nl> + } <nl> + <nl> + Factory factory ; <nl> + <nl> + @ Before <nl> + public void before ( ) { <nl> + Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ; <nl> + this . factory = new Factory ( ) ; <nl> + } <nl> + <nl> + @ After <nl> + public void after ( ) { <nl> + this . factory . disposeAll ( ) ; <nl> + Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testFireCloseHandlerMatching ( ) throws InterruptedException { <nl> + <nl> + class ApplicatonEventsHandler extends AbstractComEventCallbackListener implements ApplicationEvents4ListenerMatching { <nl> + <nl> + public volatile boolean changed = false ; <nl> + public volatile boolean beforeClose = false ; <nl> + public volatile boolean error = false ; <nl> + <nl> + @ Override <nl> + public void errorReceivingCallbackEvent ( String string , Exception excptn ) { <nl> + if ( string . startsWith ( " No method found with " ) ) { <nl> + return ; / / Normal case <nl> + } <nl> + System . out . println ( " Error : " + string ) ; <nl> + error = true ; <nl> + } <nl> + <nl> + public void DocumentChange ( ) { <nl> + changed = true ; <nl> + } <nl> + <nl> + public void DocumentBeforeClose ( IDispatch Doc , Variant . VARIANT Cancel ) { <nl> + beforeClose = true ; <nl> + } <nl> + } <nl> + <nl> + ApplicatonEventsHandler handler = new ApplicatonEventsHandler ( ) ; <nl> + <nl> + Application appX = factory . createObject ( Application . class ) ; <nl> + <nl> + Thread . sleep ( 500 ) ; <nl> + <nl> + IComEventCallbackCookie cookie = appX . advise ( ApplicationEvents4ListenerMatching . class , handler ) ; <nl> + <nl> + IDispatch doc = appX . getProperty ( IDispatch . class , " Documents " ) . invokeMethod ( IDispatch . class , " Add " ) ; <nl> + <nl> + Thread . sleep ( 500 ) ; <nl> + <nl> + doc . getProperty ( IDispatch . class , " Paragraphs " ) <nl> + . invokeMethod ( IDispatch . class , " Item " , 1 ) <nl> + . getProperty ( IDispatch . class , " Range " ) <nl> + . setProperty ( " Text " , " Test text " ) ; <nl> + <nl> + Thread . sleep ( 500 ) ; <nl> + <nl> + doc . invokeMethod ( Void . class , " Close " , Boolean . FALSE ) ; <nl> + <nl> + Thread . sleep ( 500 ) ; <nl> + <nl> + appX . unadvise ( ApplicationEvents4ListenerMatching . class , cookie ) ; <nl> + <nl> + appX . invokeMethod ( Void . class , " Quit " , Boolean . FALSE ) ; <nl> + <nl> + Assert . assertTrue ( handler . changed ) ; <nl> + Assert . assertTrue ( handler . beforeClose ) ; <nl> + Assert . assertFalse ( handler . error ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testFireCloseHandlerLessArguments ( ) throws InterruptedException { <nl> + <nl> + class ApplicatonEventsHandler extends AbstractComEventCallbackListener implements ApplicationEvents4ListenerLessArguments { <nl> + <nl> + public volatile boolean changed = false ; <nl> + public volatile boolean beforeClose = false ; <nl> + public volatile boolean error = false ; <nl> + <nl> + @ Override <nl> + public void errorReceivingCallbackEvent ( String string , Exception excptn ) { <nl> + if ( string . startsWith ( " No method found with " ) ) { <nl> + return ; / / Normal case <nl> + } <nl> + System . out . println ( " Error : " + string ) ; <nl> + if ( excptn ! = null ) { <nl> + System . out . println ( excptn . getMessage ( ) ) ; <nl> + excptn . printStackTrace ( System . out ) ; <nl> + } <nl> + error = true ; <nl> + } <nl> + <nl> + public void DocumentChange ( ) { <nl> + changed = true ; <nl> + } <nl> + <nl> + public void DocumentBeforeClose ( ) { <nl> + beforeClose = true ; <nl> + } <nl> + } <nl> + <nl> + ApplicatonEventsHandler handler = new ApplicatonEventsHandler ( ) ; <nl> + <nl> + Application appX = factory . createObject ( Application . class ) ; <nl> + <nl> + Thread . sleep ( 500 ) ; <nl> + <nl> + IComEventCallbackCookie cookie = appX . advise ( ApplicationEvents4ListenerLessArguments . class , handler ) ; <nl> + <nl> + IDispatch doc = appX . getProperty ( IDispatch . class , " Documents " ) . invokeMethod ( IDispatch . class , " Add " ) ; <nl> + <nl> + Thread . sleep ( 500 ) ; <nl> + <nl> + doc . getProperty ( IDispatch . class , " Paragraphs " ) <nl> + . invokeMethod ( IDispatch . class , " Item " , 1 ) <nl> + . getProperty ( IDispatch . class , " Range " ) <nl> + . setProperty ( " Text " , " Test text " ) ; <nl> + <nl> + Thread . sleep ( 500 ) ; <nl> + <nl> + doc . invokeMethod ( Void . class , " Close " , Boolean . FALSE ) ; <nl> + <nl> + Thread . sleep ( 500 ) ; <nl> + <nl> + appX . unadvise ( ApplicationEvents4ListenerMatching . class , cookie ) ; <nl> + <nl> + appX . invokeMethod ( Void . class , " Quit " , Boolean . FALSE ) ; <nl> + <nl> + Assert . assertTrue ( handler . changed ) ; <nl> + Assert . assertTrue ( handler . beforeClose ) ; <nl> + Assert . assertFalse ( handler . error ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testFireCloseHandlerMoreArguments ( ) throws InterruptedException { <nl> + <nl> + class ApplicatonEventsHandler extends AbstractComEventCallbackListener implements ApplicationEvents4ListenerMoreArguments { <nl> + <nl> + public volatile boolean changed = false ; <nl> + public volatile boolean beforeClose = false ; <nl> + public volatile boolean error = false ; <nl> + public volatile boolean fakeArgumentObjectWasNull = false ; <nl> + public volatile boolean fakeArgumentIntWas0 = false ; <nl> + <nl> + @ Override <nl> + public void errorReceivingCallbackEvent ( String string , Exception excptn ) { <nl> + if ( string . startsWith ( " No method found with " ) ) { <nl> + return ; / / Normal case <nl> + } <nl> + System . out . println ( " Error : " + string ) ; <nl> + if ( excptn ! = null ) { <nl> + System . out . println ( excptn . getMessage ( ) ) ; <nl> + excptn . printStackTrace ( System . out ) ; <nl> + } <nl> + error = true ; <nl> + } <nl> + <nl> + public void DocumentChange ( ) { <nl> + changed = true ; <nl> + } <nl> + <nl> + public void DocumentBeforeClose ( IDispatch Doc , Variant . VARIANT Cancel , Boolean fakeArgumentObject , int fakeArgumentInt ) { <nl> + beforeClose = true ; <nl> + fakeArgumentObjectWasNull = fakeArgumentObject = = null ; <nl> + fakeArgumentIntWas0 = fakeArgumentInt = = 0 ; <nl> + } <nl> + } <nl> + <nl> + ApplicatonEventsHandler handler = new ApplicatonEventsHandler ( ) ; <nl> + <nl> + Application appX = factory . createObject ( Application . class ) ; <nl> + <nl> + Thread . sleep ( 500 ) ; <nl> + <nl> + IComEventCallbackCookie cookie = appX . advise ( ApplicationEvents4ListenerMoreArguments . class , handler ) ; <nl> + <nl> + IDispatch doc = appX . getProperty ( IDispatch . class , " Documents " ) . invokeMethod ( IDispatch . class , " Add " ) ; <nl> + <nl> + Thread . sleep ( 500 ) ; <nl> + <nl> + doc . getProperty ( IDispatch . class , " Paragraphs " ) <nl> + . invokeMethod ( IDispatch . class , " Item " , 1 ) <nl> + . getProperty ( IDispatch . class , " Range " ) <nl> + . setProperty ( " Text " , " Test text " ) ; <nl> + <nl> + Thread . sleep ( 500 ) ; <nl> + <nl> + doc . invokeMethod ( Void . class , " Close " , Boolean . FALSE ) ; <nl> + <nl> + Thread . sleep ( 500 ) ; <nl> + <nl> + appX . unadvise ( ApplicationEvents4ListenerMatching . class , cookie ) ; <nl> + <nl> + appX . invokeMethod ( Void . class , " Quit " , Boolean . FALSE ) ; <nl> + <nl> + Assert . assertTrue ( handler . changed ) ; <nl> + Assert . assertTrue ( handler . beforeClose ) ; <nl> + Assert . assertFalse ( handler . error ) ; <nl> + Assert . assertTrue ( handler . fakeArgumentIntWas0 ) ; <nl> + Assert . assertTrue ( handler . fakeArgumentObjectWasNull ) ; <nl> + } <nl> + <nl> + <nl> + @ ComInterface ( iid = " { 00020A01 - 0000 - 0000 - C000 - 000000000046 } " ) <nl> + interface ApplicationEvents4ListenerMatching { <nl> + <nl> + / * * <nl> + * < p > <nl> + * id ( 0x3 ) < / p > <nl> + * / <nl> + @ ComEventCallback ( dispid = 0x3 ) <nl> + void DocumentChange ( ) ; <nl> + <nl> + / * * <nl> + * < p > <nl> + * id ( 0x6 ) < / p > <nl> + * / <nl> + @ ComEventCallback ( dispid = 0x6 ) <nl> + void DocumentBeforeClose ( IDispatch Doc , Variant . VARIANT Cancel ) ; <nl> + } <nl> + <nl> + @ ComInterface ( iid = " { 00020A01 - 0000 - 0000 - C000 - 000000000046 } " ) <nl> + interface ApplicationEvents4ListenerLessArguments { <nl> + <nl> + / * * <nl> + * < p > <nl> + * id ( 0x3 ) < / p > <nl> + * / <nl> + @ ComEventCallback ( dispid = 0x3 ) <nl> + void DocumentChange ( ) ; <nl> + <nl> + / * * <nl> + * < p > <nl> + * id ( 0x6 ) < / p > <nl> + * / <nl> + @ ComEventCallback ( dispid = 0x6 ) <nl> + void DocumentBeforeClose ( ) ; <nl> + } <nl> + <nl> + @ ComInterface ( iid = " { 00020A01 - 0000 - 0000 - C000 - 000000000046 } " ) <nl> + interface ApplicationEvents4ListenerMoreArguments { <nl> + <nl> + / * * <nl> + * < p > <nl> + * id ( 0x3 ) < / p > <nl> + * / <nl> + @ ComEventCallback ( dispid = 0x3 ) <nl> + void DocumentChange ( ) ; <nl> + <nl> + / * * <nl> + * < p > <nl> + * id ( 0x6 ) < / p > <nl> + * / <nl> + @ ComEventCallback ( dispid = 0x6 ) <nl> + void DocumentBeforeClose ( IDispatch Doc , Variant . VARIANT Cancel , Boolean fakeArgumentObject , int fakeArgumentInt ) ; <nl> + } <nl> + <nl> + @ ComObject ( clsId = " { 000209FF - 0000 - 0000 - C000 - 000000000046 } " ) <nl> + public interface Application extends <nl> + IDispatch , <nl> + IConnectionPoint , <nl> + IUnknown { <nl> + <nl> + } <nl> + } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / HybdridCOMInvocationTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / HybdridCOMInvocationTest . java <nl> index 363cb7f . . b375a91 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / HybdridCOMInvocationTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / HybdridCOMInvocationTest . java <nl> @ @ - 129 , 12 + 129 , 8 @ @ public class HybdridCOMInvocationTest { <nl> WORD wFlagsCombined = new WinDef . WORD ( OleAuto . DISPATCH _ METHOD | OleAuto . DISPATCH _ PROPERTYGET ) ; <nl> <nl> OleAuto . DISPPARAMS . ByReference pDispParams = new OleAuto . DISPPARAMS . ByReference ( ) ; <nl> - VARIANT [ ] params = new VARIANT [ 1 ] ; <nl> - params [ 0 ] = new VARIANT ( 1f ) ; <nl> - pDispParams . cArgs = new UINT ( 1 ) ; <nl> - pDispParams . cNamedArgs = new UINT ( 0 ) ; <nl> - pDispParams . rgvarg = new Variant . VariantArg . ByReference ( params ) ; <nl> - pDispParams . rgdispidNamedArgs = new OaIdl . DISPIDByReference ( ) ; <nl> + VARIANT [ ] params = new VARIANT [ ] { new VARIANT ( 1f ) } ; <nl> + pDispParams . setArgs ( params ) ; <nl> <nl> / / Call InchesToPoints as a method <nl> hr = dp . Invoke ( dispId , new REFIID ( Guid . IID _ NULL ) , LOCALE _ SYSTEM _ DEFAULT , wFlagsMethod , pDispParams , result , pExcepInfo , puArgErr ) ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index e1ef7c1 . . 25050fd 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 49 , 6 + 49 , 7 @ @ Features <nl> * [ # 625 ] ( https : / / github . com / java - native - access / jna / pull / 625 ) : Make conversion to / from java to / from VARIANT in ` com . sun . jna . platform . win32 . COM . util . Convert ` more flexible and dependable - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 639 ] ( https : / / github . com / java - native - access / jna / pull / 639 ) : Add getloadavg ( ) to OS X and Unix - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 642 ] ( https : / / github . com / java - native - access / jna / pull / 642 ) : COM calls with variable number of arguments ( varargs ) are now supported - [ @ SevenOf9Sleeper ] ( https : / / github . com / SevenOf9Sleeper ) . <nl> + * [ # 644 ] ( https : / / github . com / java - native - access / jna / pull / 644 ) : New ant target ' install ' for installing JNA artifacts in local m2 - repository - [ @ SevenOf9Sleeper ] ( https : / / github . com / SevenOf9Sleeper ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / build . xml b / build . xml <nl> index f085062 . . cdf32da 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 1176 , 6 + 1176 , 24 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < / subant > <nl> < / target > <nl> <nl> + < target name = " install " depends = " dist " description = " Install jna and jna - platform artifacts into local maven repository " > <nl> + < artifact : mvn failonerror = " true " > <nl> + < arg value = " org . apache . maven . plugins : maven - install - plugin : 2 . 5 : install - file " / > <nl> + < arg value = " - DpomFile = $ { pom } " / > <nl> + < arg value = " - Dfile = $ { dist - jar } " / > <nl> + < arg value = " - Dsources = $ { maven - sources - jar } " / > <nl> + < arg value = " - Djavadoc = $ { maven - javadoc - jar } " / > <nl> + < / artifact : mvn > <nl> + <nl> + < artifact : mvn failonerror = " true " > <nl> + < arg value = " org . apache . maven . plugins : maven - install - plugin : 2 . 5 : install - file " / > <nl> + < arg value = " - DpomFile = $ { pom - platform } " / > <nl> + < arg value = " - Dfile = $ { platform - jar } " / > <nl> + < arg value = " - Dsources = $ { platform - sources - jar } " / > <nl> + < arg value = " - Djavadoc = $ { platform - javadoc - jar } " / > <nl> + < / artifact : mvn > <nl> + < / target > <nl> + <nl> <nl> < path id = " maven - ant - tasks . classpath " path = " lib / maven - ant - tasks - 2 . 1 . 3 . jar " / > <nl> < typedef resource = " org / apache / maven / artifact / ant / antlib . xml "
diff - - git a / CHANGES . md b / CHANGES . md <nl> index aaadbbd . . 227b495 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 48 , 7 + 48 , 7 @ @ Features <nl> * [ # 621 ] ( https : / / github . com / java - native - access / jna / pull / 621 ) : Added TYPEFLAGS - constants for ` wTypeFlags ` in ` com . sun . jna . platform . win32 . OaIdl . TYPEATTR ` - [ @ SevenOf9Sleeper ] ( https : / / github . com / SevenOf9Sleeper ) . <nl> * [ # 625 ] ( https : / / github . com / java - native - access / jna / pull / 625 ) : Make conversion to / from java to / from VARIANT in ` com . sun . jna . platform . win32 . COM . util . Convert ` more flexible and dependable - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 639 ] ( https : / / github . com / java - native - access / jna / pull / 639 ) : Add getloadavg ( ) to OS X and Unix - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> - * [ # 640 ] ( https : / / github . com / java - native - access / jna / pull / 640 ) : Add ` com . sun . jna . platform . win32 . Psapi . GetPerformanceInfo ( ) ` and ` com . sun . jna . platform . win32 . Kernel32 . GetTickCount64 ( ) ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> + * [ # 640 ] ( https : / / github . com / java - native - access / jna / pull / 640 ) : Add ` com . sun . jna . platform . win32 . Psapi . GetPerformanceInfo ( ) ` , ` com . sun . jna . platform . win32 . Kernel32 . GetTickCount64 ( ) ` , and ` com . sun . jna . platform . win32 . Kernel32 . SetErrorMode ( ) ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 642 ] ( https : / / github . com / java - native - access / jna / pull / 642 ) : COM calls with variable number of arguments ( varargs ) are now supported - [ @ SevenOf9Sleeper ] ( https : / / github . com / SevenOf9Sleeper ) . <nl> <nl> Bug Fixes <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index b365d9e . . 5ae4acb 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 3335 , 4 + 3335 , 16 @ @ public interface Kernel32 extends StdCallLibrary , WinNT , Wincon { <nl> * not contain module information . <nl> * / <nl> boolean Module32NextW ( HANDLE hSnapshot , Tlhelp32 . MODULEENTRY32W lpme ) ; <nl> + <nl> + / * * <nl> + * Controls whether the system will handle the specified types of serious <nl> + * errors or whether the process will handle them . <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / ms680621 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * <nl> + * @ param umode <nl> + * The process error mode . <nl> + * @ return The return value is the previous state of the error - mode bit <nl> + * flags . <nl> + * / <nl> + int SetErrorMode ( int umode ) ; <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index fcb5fd6 . . 1f42ef3 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 1151 , 4 + 1151 , 11 @ @ public class Kernel32Test extends TestCase { <nl> } <nl> } <nl> } <nl> + <nl> + public void testSetErrorMode ( ) { <nl> + / / Set bit flags to 0x0001 <nl> + int previousMode = Kernel32 . INSTANCE . SetErrorMode ( 0x0001 ) ; <nl> + / / Restore to previous state ; 0x0001 is now " previous " <nl> + assertEquals ( Kernel32 . INSTANCE . SetErrorMode ( previousMode ) , 0x0001 ) ; <nl> + } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index a0dbd74 . . e1ef7c1 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 48 , 6 + 48 , 7 @ @ Features <nl> * [ # 621 ] ( https : / / github . com / java - native - access / jna / pull / 621 ) : Added TYPEFLAGS - constants for ` wTypeFlags ` in ` com . sun . jna . platform . win32 . OaIdl . TYPEATTR ` - [ @ SevenOf9Sleeper ] ( https : / / github . com / SevenOf9Sleeper ) . <nl> * [ # 625 ] ( https : / / github . com / java - native - access / jna / pull / 625 ) : Make conversion to / from java to / from VARIANT in ` com . sun . jna . platform . win32 . COM . util . Convert ` more flexible and dependable - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 639 ] ( https : / / github . com / java - native - access / jna / pull / 639 ) : Add getloadavg ( ) to OS X and Unix - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> + * [ # 642 ] ( https : / / github . com / java - native - access / jna / pull / 642 ) : COM calls with variable number of arguments ( varargs ) are now supported - [ @ SevenOf9Sleeper ] ( https : / / github . com / SevenOf9Sleeper ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> index 14c5c63 . . 62dfeb4 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> import java . lang . reflect . InvocationHandler ; <nl> + import java . lang . reflect . InvocationTargetException ; <nl> import java . lang . reflect . Proxy ; <nl> import java . util . concurrent . ExecutionException ; <nl> import java . util . concurrent . TimeoutException ; <nl> @ @ - 51 , 7 + 52 , 6 @ @ import com . sun . jna . platform . win32 . COM . util . annotation . ComMethod ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComProperty ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> - import java . lang . reflect . InvocationTargetException ; <nl> <nl> / * * <nl> * This object acts as the invocation handler for interfaces annotated with <nl> @ @ - 232 , 12 + 232 , 13 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> <nl> 	 	 ComMethod meth = method . getAnnotation ( ComMethod . class ) ; <nl> 	 	 if ( null ! = meth ) { <nl> + Object [ ] fullLengthArgs = unfoldWhenVarargs ( method , args ) ; <nl> int dispId = meth . dispId ( ) ; <nl> if ( dispId ! = - 1 ) { <nl> - return this . invokeMethod ( returnType , new DISPID ( dispId ) , args ) ; <nl> + return this . invokeMethod ( returnType , new DISPID ( dispId ) , fullLengthArgs ) ; <nl> } else { <nl> String methName = this . getMethodName ( method , meth ) ; <nl> - return this . invokeMethod ( returnType , methName , args ) ; <nl> + return this . invokeMethod ( returnType , methName , fullLengthArgs ) ; <nl> } <nl> 	 	 } <nl> <nl> @ @ - 401 , 6 + 402 , 21 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> return ( T ) Convert . toJavaObject ( result , returnType , factory , false , true ) ; <nl> 	 } <nl> <nl> + 	 private Object [ ] unfoldWhenVarargs ( java . lang . reflect . Method method , Object [ ] argParams ) { <nl> + if ( null = = argParams ) { <nl> + return null ; <nl> + } <nl> + if ( argParams . length = = 0 | | ! method . isVarArgs ( ) | | ! ( argParams [ argParams . length - 1 ] instanceof Object [ ] ) ) { <nl> + return argParams ; <nl> + } <nl> + / / when last parameter is Object [ ] - > unfold the ellipsis : <nl> + Object [ ] varargs = ( Object [ ] ) argParams [ argParams . length - 1 ] ; <nl> + Object [ ] args = new Object [ argParams . length - 1 + varargs . length ] ; <nl> + System . arraycopy ( argParams , 0 , args , 0 , argParams . length - 1 ) ; <nl> + System . arraycopy ( varargs , 0 , args , argParams . length - 1 , varargs . length ) ; <nl> + return args ; <nl> + } <nl> + <nl> 	 @ Override <nl> 	 public < T > T queryInterface ( Class < T > comInterface ) throws COMException { <nl> assert COMUtils . comIsInitialized ( ) : " COM not initialized " ; <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObject _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObject _ Test . java <nl> index a3cd6bd . . 51bd2f3 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObject _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ProxyObject _ Test . java <nl> @ @ - 15 , 6 + 15 , 8 @ @ package com . sun . jna . platform . win32 . COM . util ; <nl> import com . sun . jna . Pointer ; <nl> import static org . junit . Assert . * ; <nl> <nl> + import java . io . File ; <nl> + <nl> import org . junit . After ; <nl> import org . junit . Before ; <nl> import org . junit . Test ; <nl> @ @ - 41 , 8 + 43 , 53 @ @ public class ProxyObject _ Test { <nl> 	 	 <nl> 	 	 @ ComMethod <nl> 	 	 void Quit ( boolean SaveChanges , Object OriginalFormat , Boolean RouteDocument ) ; <nl> + <nl> + 	 	 @ ComMethod <nl> + 	 	 public void Quit ( Object . . . someArgs ) ; <nl> + <nl> + 	 	 @ ComMethod ( dispId = 0x00000183 ) <nl> + 	 	 public float PointsToPixels ( float points , Object . . . someArgs ) ; <nl> + <nl> + 	 	 @ ComProperty ( dispId = 0x00000006 ) <nl> + 	 	 public Documents getDocuments ( ) ; <nl> 	 } 	 <nl> - 	 <nl> + <nl> + 	 @ ComInterface ( iid = " { 0002096C - 0000 - 0000 - C000 - 000000000046 } " ) <nl> + 	 public interface Documents extends IDispatch { <nl> + 	 	 @ ComMethod <nl> + 	 	 public _ Document Add ( Object template , Object newTemplate , Object documentType , Object visible ) ; <nl> + <nl> + 	 	 @ ComMethod <nl> + 	 	 public _ Document Add ( Object . . . someArgs ) ; <nl> + 	 } <nl> + <nl> + 	 @ ComInterface ( iid = " { 0002096B - 0000 - 0000 - C000 - 000000000046 } " ) <nl> + 	 public interface _ Document extends IDispatch { <nl> + 	 	 @ ComMethod <nl> + 	 	 public void SaveAs ( Object fileName , Object fileFormat , Object lockComments , Object password , <nl> + 	 	 Object addToRecentFiles , Object writePassword , Object readOnlyRecommended , Object embedTrueTypeFonts , <nl> + 	 	 Object saveNativePictureFormat , Object saveFormsData , Object saveAsAOCELetter , Object encoding , <nl> + 	 	 Object insertLineBreaks , Object allowSubstitutions , Object lineEnding , Object addBiDiMarks ) ; <nl> + <nl> + 	 	 @ ComMethod <nl> + 	 	 public void SaveAs ( Object . . . someArgs ) ; <nl> + 	 } <nl> + <nl> + 	 public enum WdSaveFormat implements IComEnum { <nl> + 	 	 wdFormatDocument ( 0 ) , wdFormatText ( 2 ) , wdFormatRTF ( 6 ) , wdFormatHTML ( 8 ) , wdFormatPDF ( 17 ) ; <nl> + <nl> + 	 	 private long _ value ; <nl> + <nl> + 	 	 private WdSaveFormat ( long value ) { <nl> + 	 	 	 _ value = value ; <nl> + 	 	 } <nl> + <nl> + 	 	 @ Override <nl> + 	 	 public long getValue ( ) { <nl> + 	 	 	 return _ value ; <nl> + 	 	 } <nl> + 	 } <nl> + <nl> 	 @ ComObject ( progId = " Word . Application " ) <nl> 	 interface MsWordApp extends Application { <nl> 	 } <nl> @ @ - 116 , 4 + 163 , 27 @ @ public class ProxyObject _ Test { <nl> 	 	 <nl> 	 } <nl> 	 <nl> + 	 @ Test <nl> + 	 public void testVarargsCallWithoutVarargParameter ( ) { <nl> + 	 	 MsWordApp comObj = this . factory . createObject ( MsWordApp . class ) ; <nl> + <nl> + 	 	 / / call must work without exception : <nl> + 	 	 float f = comObj . PointsToPixels ( 25 . 3f ) ; <nl> + 	 	 comObj . Quit ( ) ; <nl> + 	 } <nl> + <nl> + 	 @ Test <nl> + 	 public void testVarargsCallWithParameter ( ) { <nl> + 	 	 MsWordApp comObj = this . factory . createObject ( MsWordApp . class ) ; <nl> + <nl> + 	 	 Documents documents = comObj . getDocuments ( ) ; <nl> + 	 	 _ Document myDocument = documents . Add ( ) ; <nl> + <nl> + 	 	 String path = new File ( " . " ) . getAbsolutePath ( ) ; <nl> + 	 	 myDocument . SaveAs ( path + " \ \ abcdefg " , WdSaveFormat . wdFormatPDF ) ; <nl> + 	 	 comObj . Quit ( ) ; <nl> + <nl> + 	 	 boolean wasDeleted = new File ( " abcdefg . pdf " ) . delete ( ) ; <nl> + 	 	 assertTrue ( wasDeleted ) ; <nl> + 	 } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 5661442 . . a0dbd74 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 47 , 6 + 47 , 7 @ @ Features <nl> * [ # 616 ] ( https : / / github . com / java - native - access / jna / pull / 616 ) : Allow access to base interfaces ( most important IDispatch ) via ProxyObject and improve binding by allowing to use dispId for the call - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 621 ] ( https : / / github . com / java - native - access / jna / pull / 621 ) : Added TYPEFLAGS - constants for ` wTypeFlags ` in ` com . sun . jna . platform . win32 . OaIdl . TYPEATTR ` - [ @ SevenOf9Sleeper ] ( https : / / github . com / SevenOf9Sleeper ) . <nl> * [ # 625 ] ( https : / / github . com / java - native - access / jna / pull / 625 ) : Make conversion to / from java to / from VARIANT in ` com . sun . jna . platform . win32 . COM . util . Convert ` more flexible and dependable - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 639 ] ( https : / / github . com / java - native - access / jna / pull / 639 ) : Add getloadavg ( ) to OS X and Unix - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java b / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java <nl> index a1d6b68 . . c4dfd7c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java <nl> @ @ - 168 , 6 + 168 , 15 @ @ public interface SystemB extends Library { <nl> * @ return the host ' s name port <nl> * / <nl> int mach _ host _ self ( ) ; <nl> + <nl> + / * * <nl> + * The mach _ task _ self system call returns the calling thread ' s task _ self <nl> + * port . It has an effect equivalent to receiving a send right for the task ' s <nl> + * kernel port . <nl> + * <nl> + * @ return the task ' s kernel port <nl> + * / <nl> + int mach _ task _ self ( ) ; <nl> <nl> / * * <nl> * The host _ page _ size function returns the page size for the given host . <nl> @ @ - 333 , 4 + 342 , 20 @ @ public interface SystemB extends Library { <nl> * / <nl> int host _ processor _ info ( int machPort , int flavor , IntByReference procCount , <nl> PointerByReference procInfo , IntByReference procInfoCount ) ; <nl> + <nl> + / * * <nl> + * The getloadavg ( ) function returns the number of processes in the system <nl> + * run queue averaged over various periods of time . Up to nelem samples are <nl> + * retrieved and assigned to successive elements of loadavg [ ] . The system <nl> + * imposes a maximum of 3 samples , representing averages over the last 1 , 5 , <nl> + * and 15 minutes , respectively . <nl> + * @ param loadavg <nl> + * An array of doubles which will be filled with the results <nl> + * @ param nelem <nl> + * Number of samples to return <nl> + * @ return If the load average was unobtainable , - 1 is returned ; otherwise , <nl> + * the number of samples actually retrieved is returned . <nl> + * @ see < A HREF = " https : / / www . freebsd . org / cgi / man . cgi ? query = getloadavg & sektion = 3 " > getloadavg ( 3 ) < / A > <nl> + * / <nl> + int getloadavg ( double [ ] loadavg , int nelem ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / LibCAPI . java b / contrib / platform / src / com / sun / jna / platform / unix / LibCAPI . java <nl> index 9418aba . . 8887012 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / unix / LibCAPI . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / unix / LibCAPI . java <nl> @ @ - 73 , 4 + 73 , 18 @ @ public interface LibCAPI extends Reboot , Resource { <nl> * @ see < A HREF = " https : / / www . freebsd . org / cgi / man . cgi ? query = setenv & sektion = 3 " > getenv ( 3 ) < / A > <nl> * / <nl> int unsetenv ( String name ) ; <nl> + <nl> + / * * <nl> + * The getloadavg ( ) function returns the number of processes in the system <nl> + * run queue averaged over various periods of time . Up to nelem samples are <nl> + * retrieved and assigned to successive elements of loadavg [ ] . The system <nl> + * imposes a maximum of 3 samples , representing averages over the last 1 , 5 , <nl> + * and 15 minutes , respectively . <nl> + * @ param loadavg An array of doubles which will be filled with the results <nl> + * @ param nelem Number of samples to return <nl> + * @ return If the load average was unobtainable , - 1 is returned ; otherwise , <nl> + * the number of samples actually retrieved is returned . <nl> + * @ see < A HREF = " https : / / www . freebsd . org / cgi / man . cgi ? query = getloadavg & sektion = 3 " > getloadavg ( 3 ) < / A > <nl> + * / <nl> + int getloadavg ( double [ ] loadavg , int nelem ) ; <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java b / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java <nl> index 1b11b5c . . 0ac161e 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java <nl> @ @ - 152 , 7 + 152 , 23 @ @ public class SystemBTest extends TestCase { <nl> 	 	 assertEquals ( procCpuLoadInfo . getValue ( ) . getIntArray ( 0 , <nl> 	 	 	 	 procInfoCount . getValue ( ) ) . length , procInfoCount . getValue ( ) ) ; <nl> 	 } <nl> - <nl> + 	 <nl> + public void testMachPorts ( ) { <nl> + int machPort = SystemB . INSTANCE . mach _ host _ self ( ) ; <nl> + assertTrue ( machPort > 0 ) ; <nl> + machPort = SystemB . INSTANCE . mach _ task _ self ( ) ; <nl> + assertTrue ( machPort > 0 ) ; 	 <nl> + } <nl> + <nl> + public void testGetLoadAvg ( ) { <nl> + double [ ] loadavg = new double [ 3 ] ; <nl> + int retval = SystemB . INSTANCE . getloadavg ( loadavg , 3 ) ; <nl> + assertEquals ( retval , 3 ) ; <nl> + assertTrue ( loadavg [ 0 ] > = 0 ) ; <nl> + assertTrue ( loadavg [ 1 ] > = 0 ) ; <nl> + assertTrue ( loadavg [ 2 ] > = 0 ) ; <nl> + } <nl> + 	 <nl> 	 public static void main ( java . lang . String [ ] argList ) { <nl> 	 	 junit . textui . TestRunner . run ( SystemBTest . class ) ; <nl> 	 } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / unix / LibCTest . java b / contrib / platform / test / com / sun / jna / platform / unix / LibCTest . java <nl> index 6a7539a . . 5c5efa9 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / unix / LibCTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / unix / LibCTest . java <nl> @ @ - 48 , 4 + 48 , 14 @ @ public class LibCTest extends AbstractUnixTestSupport { <nl> LibC . INSTANCE . unsetenv ( name ) ; <nl> } <nl> } <nl> + <nl> + @ Test <nl> + public void testGetLoadAvg ( ) { <nl> + double [ ] loadavg = new double [ 3 ] ; <nl> + int retval = LibC . INSTANCE . getloadavg ( loadavg , 3 ) ; <nl> + assertEquals ( retval , 3 ) ; <nl> + assertTrue ( loadavg [ 0 ] > = 0 ) ; <nl> + assertTrue ( loadavg [ 1 ] > = 0 ) ; <nl> + assertTrue ( loadavg [ 2 ] > = 0 ) ; <nl> + } <nl> }
diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index 4bcc773 . . e5b3436 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 16 , 6 + 16 , 7 @ @ import java . io . ByteArrayOutputStream ; <nl> import java . io . PrintStream ; <nl> import java . lang . ref . Reference ; <nl> import java . lang . ref . WeakReference ; <nl> + import java . nio . charset . Charset ; <nl> import java . util . Arrays ; <nl> import java . util . Collections ; <nl> import java . util . HashSet ; <nl> @ @ - 652 , 8 + 653 , 9 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> return arg + arg2 ; <nl> } <nl> } ; <nl> - final String VALUE = " value " + UNICODE ; <nl> - final String VALUE2 = getName ( ) + UNICODE ; <nl> + Charset charset = Charset . forName ( Native . getDefaultStringEncoding ( ) ) ; <nl> + final String VALUE = " value " + charset . decode ( charset . encode ( UNICODE ) ) ; <nl> + final String VALUE2 = getName ( ) + charset . decode ( charset . encode ( UNICODE ) ) ; <nl> String value = lib . callStringCallback ( cb , VALUE , VALUE2 ) ; <nl> assertTrue ( " Callback not called " , called [ 0 ] ) ; <nl> assertEquals ( " Wrong String callback argument 0 " , VALUE , cbargs [ 0 ] ) ; <nl> @ @ - 673 , 8 + 675 , 9 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> Map < ? , ? > m = CallbackReference . allocations ; <nl> m . clear ( ) ; <nl> <nl> - String arg = getName ( ) + " 1 " + UNICODE ; <nl> - String arg2 = getName ( ) + " 2 " + UNICODE ; <nl> + Charset charset = Charset . forName ( Native . getDefaultStringEncoding ( ) ) ; <nl> + String arg = getName ( ) + " 1 " + charset . decode ( charset . encode ( UNICODE ) ) ; <nl> + String arg2 = getName ( ) + " 2 " + charset . decode ( charset . encode ( UNICODE ) ) ; <nl> String value = lib . callStringCallback ( cb , arg , arg2 ) ; <nl> WeakReference < Object > ref = new WeakReference < Object > ( value ) ; <nl> <nl> @ @ - 723 , 7 + 726 , 8 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> return arg ; <nl> } <nl> } ; <nl> - final String VALUE = " value " + UNICODE ; <nl> + Charset charset = Charset . forName ( Native . getDefaultStringEncoding ( ) ) ; <nl> + final String VALUE = " value " + charset . decode ( charset . encode ( UNICODE ) ) ; <nl> final String [ ] VALUE _ ARRAY = { VALUE , null } ; <nl> Pointer value = lib . callStringArrayCallback ( cb , VALUE _ ARRAY ) ; <nl> assertTrue ( " Callback not called " , called [ 0 ] ) ; <nl> @ @ - 795 , 7 + 799 , 8 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> public void testUnionByValueCallbackArgument ( ) throws Exception { <nl> TestLibrary . TestUnion arg = new TestLibrary . TestUnion ( ) ; <nl> arg . setType ( String . class ) ; <nl> - final String VALUE = getName ( ) + UNICODE ; <nl> + Charset charset = Charset . forName ( arg . getStringEncoding ( ) ) ; <nl> + final String VALUE = getName ( ) + charset . decode ( charset . encode ( UNICODE ) ) ; <nl> arg . f1 = VALUE ; <nl> final boolean [ ] called = { false } ; <nl> final TestLibrary . TestUnion [ ] cbvalue = { null } ; <nl> diff - - git a / test / com / sun / jna / ReturnTypesTest . java b / test / com / sun / jna / ReturnTypesTest . java <nl> index 646ee22 . . 6afbd58 100644 <nl> - - - a / test / com / sun / jna / ReturnTypesTest . java <nl> + + + b / test / com / sun / jna / ReturnTypesTest . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna ; <nl> <nl> + import java . nio . charset . Charset ; <nl> import java . util . Collections ; <nl> import java . util . List ; <nl> import junit . framework . TestCase ; <nl> @ @ - 314 , 7 + 315 , 8 @ @ public class ReturnTypesTest extends TestCase { <nl> } <nl> <nl> public void testReturnStringArray ( ) { <nl> - final String VALUE = getName ( ) + UNICODE ; <nl> + Charset charset = Charset . forName ( Native . getDefaultStringEncoding ( ) ) ; <nl> + final String VALUE = getName ( ) + charset . decode ( charset . encode ( UNICODE ) ) ; <nl> String [ ] input = { <nl> VALUE , null , <nl> } ; <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index f2ef9a3 . . 833d057 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna ; <nl> <nl> + import java . nio . charset . Charset ; <nl> import java . util . ArrayList ; <nl> import java . util . Arrays ; <nl> import java . util . Collections ; <nl> @ @ - 1084 , 9 + 1085 , 10 @ @ public class StructureTest extends TestCase { <nl> return Arrays . asList ( " inner " ) ; <nl> } <nl> } <nl> - final String VALUE = getName ( ) + UNICODE ; <nl> - final WString WVALUE = new WString ( VALUE ) ; <nl> StructureFromPointer o = new StructureFromPointer ( ) ; <nl> + Charset charset = Charset . forName ( o . getStringEncoding ( ) ) ; <nl> + final String VALUE = getName ( ) + charset . decode ( charset . encode ( UNICODE ) ) ; <nl> + final WString WVALUE = new WString ( VALUE ) ; <nl> o . s = VALUE ; <nl> o . ws = WVALUE ; <nl> o . write ( ) ;
diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 1b10bb3 . . b706837 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 36 , 6 + 36 , 7 @ @ import java . net . URL ; <nl> import java . net . URLClassLoader ; <nl> import java . nio . Buffer ; <nl> import java . nio . ByteBuffer ; <nl> + import java . nio . charset . Charset ; <nl> import java . security . AccessController ; <nl> import java . security . PrivilegedAction ; <nl> import java . util . ArrayList ; <nl> @ @ - 95 , 7 + 96 , 7 @ @ import com . sun . jna . Structure . FFIType ; <nl> * / <nl> public final class Native implements Version { <nl> <nl> - public static final String DEFAULT _ ENCODING = " utf8 " ; <nl> + public static final String DEFAULT _ ENCODING = Charset . defaultCharset ( ) . name ( ) ; <nl> public static boolean DEBUG _ LOAD = Boolean . getBoolean ( " jna . debug _ load " ) ; <nl> public static boolean DEBUG _ JNA _ LOAD = Boolean . getBoolean ( " jna . debug _ load . jna " ) ; <nl> <nl> diff - - git a / test / com / sun / jna / NativeTest . java b / test / com / sun / jna / NativeTest . java <nl> index 164d033 . . cfc5fa1 100644 <nl> - - - a / test / com / sun / jna / NativeTest . java <nl> + + + b / test / com / sun / jna / NativeTest . java <nl> @ @ - 131 , 18 + 131 , 23 @ @ public class NativeTest extends TestCase { <nl> public void testDefaultStringEncoding ( ) throws Exception { <nl> final String UNICODE = " \ u0444 \ u043b \ u0441 \ u0432 \ u0443 " ; <nl> final String UNICODEZ = UNICODE + " \ 0more stuff " ; <nl> - byte [ ] utf8 = Native . getBytes ( UNICODE ) ; <nl> + byte [ ] nativeEnc = Native . getBytes ( UNICODE ) ; <nl> byte [ ] expected = UNICODE . getBytes ( Native . DEFAULT _ ENCODING ) ; <nl> - for ( int i = 0 ; i < Math . min ( utf8 . length , expected . length ) ; i + + ) { <nl> + for ( int i = 0 ; i < Math . min ( nativeEnc . length , expected . length ) ; i + + ) { <nl> assertEquals ( " Improperly encoded at " + i , <nl> - expected [ i ] , utf8 [ i ] ) ; <nl> + expected [ i ] , nativeEnc [ i ] ) ; <nl> } <nl> - assertEquals ( " Wrong number of encoded characters " , expected . length , utf8 . length ) ; <nl> - String result = Native . toString ( utf8 ) ; <nl> - assertEquals ( " Improperly decoded " , UNICODE , result ) ; <nl> - <nl> + assertEquals ( " Wrong number of encoded characters " , expected . length , nativeEnc . length ) ; <nl> + String result = Native . toString ( nativeEnc ) ; <nl> + / / The native encoding might not support our test string ; the result <nl> + / / will then be all ' ? ' <nl> + if ( ! result . matches ( " ^ \ \ ? + $ " ) ) { <nl> + assertEquals ( " Improperly decoded " , UNICODE , result ) ; <nl> + } <nl> + / / When the native encoding doesn ' t support our test string , we can only <nl> + / / usefully compare the lengths . <nl> assertEquals ( " Should truncate bytes at NUL terminator " , <nl> - UNICODE , Native . toString ( UNICODEZ . getBytes ( Native . DEFAULT _ ENCODING ) ) ) ; <nl> + UNICODE . length ( ) , Native . toString ( UNICODEZ . getBytes ( Native . DEFAULT _ ENCODING ) ) . length ( ) ) ; <nl> } <nl> <nl> public void testCustomizeDefaultStringEncoding ( ) {
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java <nl> index cf7cc5e . . 2cddf3d 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java <nl> @ @ - 192 , 11 + 192 , 11 @ @ public abstract class COMUtils { <nl> } <nl> <nl> / * * <nl> - * Check is COM was initialized correctly . The initialization status is not changed ! <nl> + * Check if COM was initialized correctly . The initialization status is not changed ! <nl> * <nl> * < p > This is a debug function , not for normal usage ! < / p > <nl> * <nl> - * @ return <nl> + * @ return whether COM has been initialized <nl> * / <nl> public static boolean comIsInitialized ( ) { <nl> WinNT . HRESULT hr = Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java <nl> index 40b6207 . . adc1003 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java <nl> @ @ - 74 , 10 + 74 , 9 @ @ class Convert { <nl> * < li > VARIANTs are not rewrapped , but passed through unmodified < / li > <nl> * < li > A string is wrapped into a BSTR , that is wrapped into the VARIANT . <nl> * The string is allocated as native memory by the VARIANT constructor . <nl> - * The BSTR needs to be freed by { @ see com . sun . jna . platform . win32 . OleAuto # SysFreeString } . < / li > <nl> + * The BSTR needs to be freed by { @ link com . sun . jna . platform . win32 . OleAuto # SysFreeString } . < / li > <nl> * < / ul > <nl> * <nl> - * @ see com . sun . jna . platform . win32 . Variant . VARIANT # VARIANT ( java . lang . String ) <nl> * @ param value to be wrapped <nl> * @ return wrapped VARIANT <nl> * / <nl> @ @ - 325 , 7 + 324 , 7 @ @ class Convert { <nl> / * * <nl> * Free the contents of the supplied VARIANT . <nl> * <nl> - * < p > This method is a companion to { @ see # toVariant } . Primary usage is <nl> + * < p > This method is a companion to { @ link # toVariant } . Primary usage is <nl> * to free BSTRs contained in VARIANTs . < / p > <nl> * <nl> * @ param variant to be cleared <nl> @ @ - 345 , 7 + 344 , 7 @ @ class Convert { <nl> / * * <nl> * Free the contents of the supplied VARIANT . <nl> * <nl> - * < p > This method is a companion to { @ see # toVariant } . Primary usage is <nl> + * < p > This method is a companion to { @ link # toVariant } . Primary usage is <nl> * to free BSTRs contained in VARIANTs . < / p > <nl> * <nl> * @ param variant to be cleared <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> index 48ce652 . . abf8b4e 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> @ @ - 88 , 7 + 88 , 7 @ @ public abstract class Kernel32Util implements WinDef { <nl> * Once closed all handles , the accumulated exception ( if any ) is thrown <nl> * <nl> * @ param refs The references to close <nl> - * @ see # closeHandleRef ( HANDLEByReference ) <nl> + * @ see # closeHandleRef ( WinNT . HANDLEByReference ) <nl> * / <nl> public static void closeHandleRefs ( HANDLEByReference . . . refs ) { <nl> Win32Exception err = null ; <nl> @ @ - 112 , 14 + 112 , 14 @ @ public abstract class Kernel32Util implements WinDef { <nl> * Closes the handle in the reference <nl> * <nl> * @ param ref The handle reference - ignored if { @ code null } <nl> - * @ see # closeHandle ( HANDLE ) <nl> + * @ see # closeHandle ( WinNT . HANDLE ) <nl> * / <nl> public static void closeHandleRef ( HANDLEByReference ref ) { <nl> closeHandle ( ( ref = = null ) ? null : ref . getValue ( ) ) ; <nl> } <nl> <nl> / * * <nl> - * Invokes { @ link # closeHandle ( HANDLE ) } on each handle . If an exception <nl> + * Invokes { @ link # closeHandle ( WinNT . HANDLE ) } on each handle . If an exception <nl> * is thrown for a specific handle , then it is accumulated until all <nl> * handles have been closed . If more than one exception occurs , then it <nl> * is added as a suppressed exception to the first one . Once closed all <nl> @ @ - 148 , 7 + 148 , 7 @ @ public abstract class Kernel32Util implements WinDef { <nl> } <nl> <nl> / * * <nl> - * Invokes { @ link Kernel32 # CloseHandle ( HANDLE ) } and checks the success code . <nl> + * Invokes { @ link Kernel32 # CloseHandle ( WinNT . HANDLE ) } and checks the success code . <nl> * If not successful , then throws a { @ link Win32Exception } with the <nl> * { @ code GetLastError } value <nl> * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> index d223eb5 . . 4f83ed8 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> @ @ - 885 , 7 + 885 , 7 @ @ public interface OaIdl { <nl> * java conventions . < / p > <nl> * <nl> * @ param dimension zerobased index <nl> - * @ return <nl> + * @ return lower bound for the selected dimension <nl> * / <nl> public int getLBound ( int dimension ) { <nl> int targetDimension = getDimensionCount ( ) - dimension ; <nl> @ @ - 902 , 7 + 902 , 7 @ @ public interface OaIdl { <nl> * java conventions . < / p > <nl> * <nl> * @ param dimension zerobased index <nl> - * @ return <nl> + * @ return upper bound for the selected dimension <nl> * / <nl> public int getUBound ( int dimension ) { <nl> int targetDimension = getDimensionCount ( ) - dimension ; <nl> @ @ - 915 , 7 + 915 , 7 @ @ public interface OaIdl { <nl> / * * <nl> * Return number of dimensions of the SAFEARRAY <nl> * <nl> - * @ return <nl> + * @ return number of dimensions of the SAFEARRAY <nl> * / <nl> public int getDimensionCount ( ) { <nl> return OleAuto . INSTANCE . SafeArrayGetDim ( this ) . intValue ( ) ; <nl> @ @ - 974 , 7 + 974 , 7 @ @ public interface OaIdl { <nl> / * * <nl> * Return VARTYPE of the SAFEARRAY <nl> * <nl> - * @ return <nl> + * @ return VARTYPE of the SAFEARRAY <nl> * / <nl> public VARTYPE getVarType ( ) { <nl> WTypes . VARTYPEByReference resultHolder = new WTypes . VARTYPEByReference ( ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdlUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdlUtil . java <nl> index 1ce2dc7 . . 1a4d20c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdlUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdlUtil . java <nl> @ @ - 77 , 7 + 77 , 7 @ @ public abstract class OaIdlUtil { <nl> * @ param sa SAFEARRAY to convert <nl> * @ param destruct if true the supplied SAFEARRAY is destroyed , there must <nl> * not be additional locks on the array ! <nl> - * @ return <nl> + * @ return Java array corresponding to the given SAFEARRAY <nl> * / <nl> public static Object toPrimitiveArray ( SAFEARRAY sa , boolean destruct ) { <nl> Pointer dataPointer = sa . accessData ( ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> index bbfbeab . . d0c3d8b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> @ @ - 248 , 9 + 248 , 9 @ @ public interface Variant { <nl> * Create a new VARIANT wrapping the supplied string . <nl> * <nl> * < p > < i > Implementation note : < / i > the string is wrapped as a BSTR value , <nl> - * that is allocated using { @ see com . sun . jna . platform . win32 . OleAuto # SysAllocString } <nl> + * that is allocated using { @ link com . sun . jna . platform . win32 . OleAuto # SysAllocString } <nl> * and needs to be freed using <nl> - * { @ see com . sun . jna . platform . win32 . OleAuto # SysFreeString } by the user < / p > <nl> + * { @ link com . sun . jna . platform . win32 . OleAuto # SysFreeString } by the user < / p > <nl> * <nl> * @ param value to be wrapped <nl> * /
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> index 722278e . . 0504051 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> @ @ - 199 , 19 + 199 , 13 @ @ public class CallbackProxy implements IDispatchCallback { <nl> 	 public HRESULT QueryInterface ( REFIID refid , PointerByReference ppvObject ) { <nl> 	 	 if ( null = = ppvObject ) { <nl> 	 	 	 return new HRESULT ( WinError . E _ POINTER ) ; <nl> - 	 	 } <nl> - <nl> - 	 	 if ( refid . equals ( this . listenedToRiid ) ) { <nl> + 	 	 } else if ( refid . equals ( this . listenedToRiid ) ) { <nl> 	 	 	 ppvObject . setValue ( this . getPointer ( ) ) ; <nl> 	 	 	 return WinError . S _ OK ; <nl> - 	 	 } <nl> - <nl> - 	 	 if ( new Guid . IID ( refid . getPointer ( ) ) . equals ( Unknown . IID _ IUNKNOWN ) ) { <nl> + 	 	 } else if ( refid . getValue ( ) . equals ( Unknown . IID _ IUNKNOWN ) ) { <nl> 	 	 	 ppvObject . setValue ( this . getPointer ( ) ) ; <nl> 	 	 	 return WinError . S _ OK ; <nl> - 	 	 } <nl> - <nl> - 	 	 if ( new Guid . IID ( refid . getPointer ( ) ) . equals ( Dispatch . IID _ IDISPATCH ) ) { <nl> + 	 	 } else if ( refid . getValue ( ) . equals ( Dispatch . IID _ IDISPATCH ) ) { <nl> 	 	 	 ppvObject . setValue ( this . getPointer ( ) ) ; <nl> 	 	 	 return WinError . S _ OK ; <nl> 	 	 } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java b / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java <nl> index f6794ae . . d60e64c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java <nl> @ @ - 512 , 7 + 512 , 27 @ @ public interface Guid { <nl> public IID getValue ( ) { <nl> return new IID ( getPointer ( ) ) ; <nl> } <nl> - <nl> + <nl> + @ Override <nl> + public boolean equals ( Object o ) { <nl> + if ( o = = null ) { <nl> + return false ; <nl> + } <nl> + if ( this = = o ) { <nl> + return true ; <nl> + } <nl> + if ( getClass ( ) ! = o . getClass ( ) ) { <nl> + return false ; <nl> + } <nl> + <nl> + REFIID other = ( REFIID ) o ; <nl> + return getValue ( ) . equals ( other . getValue ( ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public int hashCode ( ) { <nl> + return getValue ( ) . hashCode ( ) ; <nl> + } <nl> } <nl> <nl> / * * <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks _ Test . java <nl> index 0280df0 . . 3488753 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks _ Test . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> import com . sun . jna . Pointer ; <nl> + import com . sun . jna . platform . win32 . COM . COMUtils ; <nl> import org . junit . After ; <nl> import org . junit . Assert ; <nl> import org . junit . Before ; <nl> @ @ - 23 , 12 + 24 , 20 @ @ import com . sun . jna . platform . win32 . COM . util . annotation . ComInterface ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComMethod ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComObject ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComProperty ; <nl> + import com . sun . jna . platform . win32 . Guid . IID ; <nl> + import com . sun . jna . platform . win32 . Guid . REFIID ; <nl> import com . sun . jna . platform . win32 . OaIdl ; <nl> import com . sun . jna . platform . win32 . Ole32 ; <nl> import com . sun . jna . platform . win32 . Variant ; <nl> import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> + import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> + import com . sun . jna . ptr . PointerByReference ; <nl> import org . hamcrest . CoreMatchers ; <nl> <nl> + import static com . sun . jna . platform . win32 . COM . IUnknown . IID _ IUNKNOWN ; <nl> + import static com . sun . jna . platform . win32 . COM . IDispatch . IID _ IDISPATCH ; <nl> + import static org . junit . Assert . * ; <nl> + <nl> public class ComEventCallbacks _ Test { <nl> <nl> static { <nl> @ @ - 88 , 8 + 97 , 10 @ @ public class ComEventCallbacks _ Test { <nl> 	 	 void Navigate ( String url , long flags , String targetFrameName , VARIANT postData , String headers ) ; <nl> 	 } <nl> <nl> - 	 @ ComInterface ( iid = " { 34A715A0 - 6587 - 11D0 - 924A - 0020AFC7AC4D } " ) <nl> + 	 @ ComInterface ( iid = DWebBrowserEvents2 . IID ) <nl> 	 interface DWebBrowserEvents2 { <nl> + public static final String IID = " { 34A715A0 - 6587 - 11D0 - 924A - 0020AFC7AC4D } " ; <nl> + <nl> 	 	 @ ComEventCallback ( dispid = 0x000000fd ) <nl> 	 	 void OnQuit ( ) ; <nl> 	 	 <nl> @ @ - 235 , 7 + 246 , 44 @ @ public class ComEventCallbacks _ Test { <nl> iWebBrowser2 . Quit ( ) ; <nl> <nl> / / NavigateComplete can ' t be called if access is blocked <nl> - Assert . assertFalse ( " Navigation to https : / / github . com / java - native - access / jna should be blocked " , listener . navigateComplete2Called ) ; <nl> - 	 	 <nl> + Assert . assertFalse ( " Navigation to https : / / github . com / java - native - access / jna should be blocked " , listener . navigateComplete2Called ) ; 	 <nl> 	 } <nl> + <nl> + @ Test <nl> + public void testComEventCallback ( ) { <nl> + DWebBrowserEvents2 _ Listener listener = new DWebBrowserEvents2 _ Listener ( ) ; <nl> + CallbackProxy proxy = new CallbackProxy ( factory , DWebBrowserEvents2 . class , listener ) ; <nl> + <nl> + REFIID refiid = new REFIID ( new IID ( DWebBrowserEvents2 . IID ) ) ; <nl> + <nl> + / / precondition : the structures for the listenedToRiid and <nl> + / / refiid have to be different ( else the PointerType # equals would <nl> + / / be enough <nl> + assertFalse ( proxy . listenedToRiid . getPointer ( ) . equals ( refiid . getPointer ( ) ) ) ; <nl> + <nl> + / / Neverthe less , the QueryInterface method has to return the <nl> + / / correct pointer ( the IID is relevant , not its wrapper <nl> + PointerByReference interfacePointer = new PointerByReference ( ) ; <nl> + <nl> + / / Check the " business " interface <nl> + HRESULT hr = proxy . QueryInterface ( refiid , interfacePointer ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + assertEquals ( interfacePointer . getValue ( ) , proxy . getPointer ( ) ) ; <nl> + <nl> + / / IUnknown must be implemented <nl> + hr = proxy . QueryInterface ( new REFIID ( IID _ IUNKNOWN ) , interfacePointer ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + assertEquals ( interfacePointer . getValue ( ) , proxy . getPointer ( ) ) ; <nl> + <nl> + / / Currently only Dispatch based callbacks are supported , <nl> + / / so this interface must be present to <nl> + hr = proxy . QueryInterface ( new REFIID ( IID _ IDISPATCH ) , interfacePointer ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + assertEquals ( interfacePointer . getValue ( ) , proxy . getPointer ( ) ) ; <nl> + <nl> + / / Negative check - - this has to fail , the IID should not be <nl> + / / assigned <nl> + hr = proxy . QueryInterface ( new REFIID ( new IID ( " { 00000000 - 0000 - 0000 - C000 - 000000000000 } " ) ) , interfacePointer ) ; <nl> + assertTrue ( COMUtils . FAILED ( hr ) ) ; <nl> + } <nl> }
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java <nl> index 553ce32 . . cf7cc5e 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 . COM ; <nl> <nl> + import com . sun . jna . LastErrorException ; <nl> import java . util . ArrayList ; <nl> <nl> import com . sun . jna . Native ; <nl> @ @ - 109 , 8 + 110 , 14 @ @ public abstract class COMUtils { <nl> public static void checkRC ( HRESULT hr , EXCEPINFO pExcepInfo , <nl> IntByReference puArgErr ) { <nl> if ( FAILED ( hr ) ) { <nl> - String formatMessageFromHR = Kernel32Util . formatMessage ( hr ) ; <nl> - throw new COMException ( formatMessageFromHR , pExcepInfo , puArgErr ) ; <nl> + String formatMessage ; <nl> + try { <nl> + formatMessage = Kernel32Util . formatMessage ( hr ) + " ( HRESULT : " + Integer . toHexString ( hr . intValue ( ) ) + " ) " ; <nl> + } catch ( LastErrorException ex ) { <nl> + / / throws if HRESULT can ' t be resolved <nl> + formatMessage = " ( HRESULT : " + Integer . toHexString ( hr . intValue ( ) ) + " ) " ; <nl> + } <nl> + throw new COMException ( formatMessage , pExcepInfo , puArgErr ) ; <nl> } <nl> } <nl> <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMUtilsTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMUtilsTest . java <nl> index 56aac85 . . 90395f5 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMUtilsTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMUtilsTest . java <nl> @ @ - 1 , 18 + 1 , 29 @ @ <nl> package com . sun . jna . platform . win32 . COM ; <nl> <nl> - import junit . framework . TestCase ; <nl> + import com . sun . jna . platform . win32 . WinNT ; <nl> + import org . junit . Test ; <nl> <nl> - public class COMUtilsTest extends TestCase { <nl> + import static org . junit . Assert . * ; <nl> <nl> + public class COMUtilsTest { <nl> + <nl> + @ Test <nl> public void testSUCCEEDED ( ) throws Exception { <nl> assertTrue ( COMUtils . SUCCEEDED ( COMUtils . S _ OK ) ) ; <nl> assertTrue ( COMUtils . SUCCEEDED ( COMUtils . S _ FALSE ) ) ; <nl> assertFalse ( COMUtils . SUCCEEDED ( COMUtils . E _ UNEXPECTED ) ) ; <nl> } <nl> <nl> + @ Test <nl> public void testFAILED ( ) throws Exception { <nl> assertFalse ( COMUtils . FAILED ( COMUtils . S _ OK ) ) ; <nl> assertFalse ( COMUtils . FAILED ( COMUtils . S _ FALSE ) ) ; <nl> assertTrue ( COMUtils . FAILED ( COMUtils . E _ UNEXPECTED ) ) ; <nl> } <nl> + <nl> + @ Test ( expected = COMException . class ) <nl> + public void testCreateCOMExceptionFromCustomHRESULT ( ) { <nl> + / / This resulted in a LastErrorException instead of COMException <nl> + COMUtils . checkRC ( new WinNT . HRESULT ( 0x80040200 ) ) ; <nl> + } <nl> } <nl> \ No newline at end of file
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 3cc8452 . . d57bae5 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 43 , 6 + 43 , 7 @ @ Features <nl> * [ # 608 ] ( https : / / github . com / java - native - access / jna / pull / 608 ) : Mavenize the build process - change parent and native pom artifactId / name to differentiate in IDE and build tools . - [ @ bhamail ] ( https : / / github . com / bhamail ) <nl> * [ # 613 ] ( https : / / github . com / java - native - access / jna / pull / 613 ) : Make ` com . sun . jna . platform . win32 . Win32Exception ` extend ` com . sun . jna . LastErrorException ` - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 614 ] ( https : / / github . com / java - native - access / jna / pull / 614 ) : Added standard ` com . sun . jna . platform . win32 . Kernel32Util . closeHandle ( ) ` method that throws a ` com . sun . jna . platform . win32 . Win32Exception ` if failed to close the handle - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 618 ] ( https : / / github . com / java - native - access / jna / pull / 618 ) : Implement SAFEARRAY access and bugfix VARIANT - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 616 ] ( https : / / github . com / java - native - access / jna / pull / 616 ) : Allow access to base interfaces ( most important IDispatch ) via ProxyObject and improve binding by allowing to use dispId for the call - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 621 ] ( https : / / github . com / java - native - access / jna / pull / 621 ) : Added TYPEFLAGS - constants for ` wTypeFlags ` in ` com . sun . jna . platform . win32 . OaIdl . TYPEATTR ` - [ @ SevenOf9Sleeper ] ( https : / / github . com / SevenOf9Sleeper ) . <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java <nl> index c54c94d . . d837159 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingObject . java <nl> @ @ - 149 , 7 + 149 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , <nl> this . getIDispatch ( ) , propertyName ) ; <nl> <nl> - return ( ( ( VARIANT _ BOOL ) result . getValue ( ) ) . intValue ( ) ! = 0 ) ; <nl> + return result . booleanValue ( ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 179 , 7 + 179 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , <nl> this . getIDispatch ( ) , propertyName ) ; <nl> <nl> - return ( ( LONG ) result . getValue ( ) ) . intValue ( ) ; <nl> + return result . intValue ( ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 194 , 7 + 194 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , <nl> this . getIDispatch ( ) , propertyName ) ; <nl> <nl> - return ( ( SHORT ) result . getValue ( ) ) . shortValue ( ) ; <nl> + return result . shortValue ( ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 209 , 7 + 209 , 7 @ @ public class COMLateBindingObject extends COMBindingBaseObject { <nl> this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , <nl> this . getIDispatch ( ) , propertyName ) ; <nl> <nl> - return result . getValue ( ) . toString ( ) ; <nl> + return result . stringValue ( ) ; <nl> } <nl> <nl> / * *
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 2b52c0b . . 3cc8452 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 35 , 15 + 35 , 16 @ @ Features <nl> * [ # 577 ] ( https : / / github . com / java - native - access / jna / pull / 577 ) : Apply generic definitions wherever applicable - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 569 ] ( https : / / github . com / java - native - access / jna / pull / 569 ) : Added ` com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 2 ` support . Added GetPrinter and ClosePrinter functions in ` com . sun . jna . platform . win32 . Winspool ` - [ @ IvanRF ] ( https : / / github . com / IvanRF ) . <nl> * [ # 583 ] ( https : / / github . com / java - native - access / jna / pull / 583 ) : Added printer attributes and status - [ @ IvanRF ] ( https : / / github . com / IvanRF ) . <nl> - * [ # 589 ] ( https : / / github . com / java - native - access / jna / pull / 589 ) : Use MethodResultContext in direct mapping ( as done in interface mapping ) - [ @ marco2357 ] ( https : / / github . com / marco2357 ) . <nl> + * [ # 589 ] ( https : / / github . com / java - native - access / jna / pull / 589 ) : Use ` com . sun . jna . MethodResultContext ` in direct mapping ( as done in interface mapping ) - [ @ marco2357 ] ( https : / / github . com / marco2357 ) . <nl> * [ # 595 ] ( https : / / github . com / java - native - access / jna / pull / 595 ) : Allow calling COM methods / getters requiring hybrid calling ( METHOD + PROPERTYGET ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> - * [ # 582 ] ( https : / / github . com / java - native - access / jna / pull / 582 ) : Mavenize the build process - Phase 1 : building the native code via Maven [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> - * [ # 606 ] ( https : / / github . com / java - native - access / jna / pull / 606 ) : Added Kerne32Util method to facilitate checking that calls to LocalFree / GlobalFree are successful [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> - * [ # 612 ] ( https : / / github . com / java - native - access / jna / pull / 612 ) : ' Kernel32Util # freeLocal / GlobalMemory ' always throws Win32Exception if failed [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> - * [ # 608 ] ( https : / / github . com / java - native - access / jna / pull / 608 ) : Mavenize the build process - change parent and native pom artifactId / name to differentiate in IDE and build tools . [ @ bhamail ] ( https : / / github . com / bhamail ) <nl> - * [ # 613 ] ( https : / / github . com / java - native - access / jna / pull / 613 ) : Make Win32Exception extend LastErrorException [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> - * [ # 613 ] ( https : / / github . com / java - native - access / jna / pull / 614 ) : Added standard ' Kernel32Util # closeHandle ' method that throws a Win32Exception if failed to close the handle [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 582 ] ( https : / / github . com / java - native - access / jna / pull / 582 ) : Mavenize the build process - Phase 1 : building the native code via Maven - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 606 ] ( https : / / github . com / java - native - access / jna / pull / 606 ) : Added Kernel32Util method to facilitate checking that calls to LocalFree / GlobalFree are successful - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 612 ] ( https : / / github . com / java - native - access / jna / pull / 612 ) : ` Kernel32Util . freeLocalMemory ( ) ` / ` Kernel32Util . freeGlobalMemory ( ) ` always throw ` com . sun . jna . platform . win32 . Win32Exception ` if failed - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 608 ] ( https : / / github . com / java - native - access / jna / pull / 608 ) : Mavenize the build process - change parent and native pom artifactId / name to differentiate in IDE and build tools . - [ @ bhamail ] ( https : / / github . com / bhamail ) <nl> + * [ # 613 ] ( https : / / github . com / java - native - access / jna / pull / 613 ) : Make ` com . sun . jna . platform . win32 . Win32Exception ` extend ` com . sun . jna . LastErrorException ` - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 614 ] ( https : / / github . com / java - native - access / jna / pull / 614 ) : Added standard ` com . sun . jna . platform . win32 . Kernel32Util . closeHandle ( ) ` method that throws a ` com . sun . jna . platform . win32 . Win32Exception ` if failed to close the handle - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 616 ] ( https : / / github . com / java - native - access / jna / pull / 616 ) : Allow access to base interfaces ( most important IDispatch ) via ProxyObject and improve binding by allowing to use dispId for the call - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 621 ] ( https : / / github . com / java - native - access / jna / pull / 621 ) : Added TYPEFLAGS - constants for ` wTypeFlags ` in ` com . sun . jna . platform . win32 . OaIdl . TYPEATTR ` - [ @ SevenOf9Sleeper ] ( https : / / github . com / SevenOf9Sleeper ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> index 5103050 . . 4547e95 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> @ @ - 1458 , 6 + 1458 , 7 @ @ public interface OaIdl { <nl> public WORD cImplTypes ; <nl> public WORD cbSizeVft ; <nl> public WORD cbAlignment ; <nl> + / / The type flags . See TYPEFLAGS _ . . . <nl> public WORD wTypeFlags ; <nl> public WORD wMajorVerNum ; <nl> public WORD wMinorVerNum ; <nl> @ @ - 1479 , 5 + 1480 , 87 @ @ public interface OaIdl { <nl> protected List < String > getFieldOrder ( ) { <nl> return FIELDS ; <nl> } <nl> + <nl> + / * * <nl> + * A type description that describes an Application object . <nl> + * / <nl> + public final static int TYPEFLAGS _ FAPPOBJECT = 0x1 ; <nl> + <nl> + / * * <nl> + * Instances of the type can be created by ITypeInfo : : CreateInstance . <nl> + * / <nl> + public final static int TYPEFLAGS _ FCANCREATE = 0x2 ; <nl> + <nl> + / * * <nl> + * The type is licensed . <nl> + * / <nl> + public final static int TYPEFLAGS _ FLICENSED = 0x4 ; <nl> + <nl> + / * * <nl> + * The type is predefined . The client application should automatically create a single instance of the object <nl> + * that has this attribute . The name of the variable that points to the object is the same as the class name of <nl> + * the object . <nl> + * / <nl> + public final static int TYPEFLAGS _ FPREDECLID = 0x8 ; <nl> + <nl> + / * * <nl> + * The type should not be displayed to browsers . <nl> + * / <nl> + public final static int TYPEFLAGS _ FHIDDEN = 0x10 ; <nl> + <nl> + / * * <nl> + * The type is a control from which other types will be derived , and should not be displayed to users . <nl> + * / <nl> + public final static int TYPEFLAGS _ FCONTROL = 0x20 ; <nl> + <nl> + / * * <nl> + * The interface supplies both IDispatch and VTBL binding . <nl> + * / <nl> + public final static int TYPEFLAGS _ FDUAL = 0x40 ; <nl> + <nl> + / * * <nl> + * The interface cannot add members at run time . <nl> + * / <nl> + public final static int TYPEFLAGS _ FNONEXTENSIBLE = 0x80 ; <nl> + <nl> + / * * <nl> + * The types used in the interface are fully compatible with Automation , including VTBL binding support . Setting <nl> + * dual on an interface sets this flag in addition to TYPEFLAG _ FDUAL . Not allowed on dispinterfaces . <nl> + * / <nl> + public final static int TYPEFLAGS _ FOLEAUTOMATION = 0x100 ; <nl> + <nl> + / * * <nl> + * Should not be accessible from macro languages . This flag is intended for system - level types or types that <nl> + * type browsers should not display . <nl> + * / <nl> + public final static int TYPEFLAGS _ FRESTRICTED = 0x200 ; <nl> + <nl> + / * * <nl> + * The class supports aggregation . <nl> + * / <nl> + public final static int TYPEFLAGS _ FAGGREGATABLE = 0x400 ; <nl> + <nl> + / * * <nl> + * The type is replaceable . <nl> + * / <nl> + public final static int TYPEFLAGS _ FREPLACEABLE = 0x800 ; <nl> + <nl> + / * * <nl> + * Indicates that the interface derives from IDispatch , either directly or indirectly . This flag is computed . <nl> + * There is no Object Description Language for the flag . <nl> + * / <nl> + public final static int TYPEFLAGS _ FDISPATCHABLE = 0x1000 ; <nl> + <nl> + / * * <nl> + * The type has reverse binding . <nl> + * / <nl> + public final static int TYPEFLAGS _ FREVERSEBIND = 0x2000 ; <nl> + <nl> + / * * <nl> + * Interfaces can be marked with this flag to indicate that they will be using a proxy / stub dynamic link <nl> + * library . This flag specifies that the typelib proxy should not be unregistered when the typelib is <nl> + * unregistered . <nl> + * / <nl> + public final static int TYPEFLAGS _ FPROXY = 0x4000 ; <nl> } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 6c7ef0a . . ec2f773 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 43 , 6 + 43 , 7 @ @ Features <nl> * [ # 608 ] ( https : / / github . com / java - native - access / jna / pull / 608 ) : Mavenize the build process - change parent and native pom artifactId / name to differentiate in IDE and build tools . [ @ bhamail ] ( https : / / github . com / bhamail ) <nl> * [ # 613 ] ( https : / / github . com / java - native - access / jna / pull / 613 ) : Make Win32Exception extend LastErrorException [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 613 ] ( https : / / github . com / java - native - access / jna / pull / 614 ) : Added standard ' Kernel32Util # closeHandle ' method that throws a Win32Exception if failed to close the handle [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 616 ] ( https : / / github . com / java - native - access / jna / pull / 616 ) : Allow access to base interfaces ( most important IDispatch ) via ProxyObject and improve binding by allowing to use dispId for the call - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> @ @ - 55 , 7 + 56 , 7 @ @ Bug Fixes <nl> * [ # 593 ] ( https : / / github . com / java - native - access / jna / pull / 593 ) : Improve binding of TypeLib bindings - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 578 ] ( https : / / github . com / java - native - access / jna / pull / 578 ) : Fix COM CallbackHandlers , allow usage of VARIANTs directly in c . s . j . p . w . COM . util . ProxyObject and fix native memory leak in c . s . j . p . w . COM . util . ProxyObject - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) <nl> * [ # 601 ] ( https : / / github . com / java - native - access / jna / pull / 601 ) : Remove COMThread and COM initialization from objects and require callers to initialize COM themselves . Asserts are added to guard correct usage . - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> - * [ # 602 ] https : / / github . com / java - native - access / jna / pull / 602 ) : Make sure SID related memory is properly released once no longer required [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 602 ] ( https : / / github . com / java - native - access / jna / pull / 602 ) : Make sure SID related memory is properly released once no longer required [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 610 ] ( https : / / github . com / java - native - access / jna / pull / 610 ) : Fixed issue # 604 : Kernel32 # GetLastError ( ) always returns ERROR _ SUCCESS [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> <nl> Release 4 . 2 . 1 <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> index 376c59c . . 5d2bda3 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> @ @ - 142 , 9 + 142 , 7 @ @ public class CallbackProxy implements IDispatchCallback { <nl> PointerByReference ppvObject = new PointerByReference ( ) ; <nl> IID iid = com . sun . jna . platform . win32 . COM . IUnknown . IID _ IUNKNOWN ; <nl> dispatch . QueryInterface ( new REFIID ( iid ) , ppvObject ) ; <nl> - Unknown rawUnk = new Unknown ( ppvObject . getValue ( ) ) ; <nl> - 	 	 	 	 	 long unknownId = Pointer . nativeValue ( rawUnk . getPointer ( ) ) ; <nl> - IUnknown unk = CallbackProxy . this . factory . createProxy ( IUnknown . class , unknownId , dispatch ) ; <nl> + IUnknown unk = CallbackProxy . this . factory . createProxy ( IUnknown . class , dispatch ) ; <nl> if ( targetClass . getAnnotation ( ComInterface . class ) ! = null ) { <nl> rjargs . add ( unk . queryInterface ( targetClass ) ) ; <nl> } else { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Factory . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Factory . java <nl> index 990e0da . . d572fb2 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Factory . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Factory . java <nl> @ @ - 38 , 11 + 38 , 9 @ @ import java . util . LinkedList ; <nl> import java . util . List ; <nl> <nl> public class Factory { <nl> - <nl> 	 / * * <nl> - 	 * Creates a utility COM Factory and a ComThread on which all COM calls are executed . <nl> - 	 * NOTE : Remember to call factory . getComThread ( ) . terminate ( ) at some appropriate point . <nl> - 	 * <nl> + 	 * Factory keeps track of COM objects - all objects created with this <nl> + * factory can be disposed by calling { @ link Factory # disposeAll ( ) } . <nl> 	 * / <nl> 	 public Factory ( ) { <nl> assert COMUtils . comIsInitialized ( ) : " COM not initialized " ; <nl> @ @ - 90 , 22 + 88 , 6 @ @ public class Factory { <nl> 	 	 T result = comInterface . cast ( proxy ) ; <nl> 	 	 return result ; <nl> 	 } <nl> - <nl> - 	 / * * only for use when creating ProxyObjects from Callbacks <nl> - 	 * <nl> - 	 * @ param comInterface <nl> - 	 * @ param unknownId <nl> - 	 * @ param dispatch <nl> - 	 * @ return proxy object <nl> - 	 * / <nl> - 	 < T > T createProxy ( Class < T > comInterface , long unknownId , IDispatch dispatch ) { <nl> - assert COMUtils . comIsInitialized ( ) : " COM not initialized " ; <nl> - <nl> - 	 	 ProxyObject jop = new ProxyObject ( comInterface , unknownId , dispatch , this ) ; <nl> - 	 	 Object proxy = Proxy . newProxyInstance ( comInterface . getClassLoader ( ) , new Class < ? > [ ] { comInterface } , jop ) ; <nl> - 	 	 T result = comInterface . cast ( proxy ) ; <nl> - 	 	 return result ; <nl> - 	 } <nl> 	 <nl> 	 / * * <nl> 	 * Creates a new COM object ( CoCreateInstance ) for the given progId and <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> index 9942afb . . decfc3b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> @ @ - 55 , 12 + 55 , 27 @ @ import java . lang . reflect . InvocationTargetException ; <nl> <nl> / * * <nl> * This object acts as the invocation handler for interfaces annotated with <nl> - * ComInterface . It wraps all ( necessary ) low level COM calls and executes them <nl> - * on a ' ComThread ' held by the Factory object . <nl> + * ComInterface . It wraps all ( necessary ) low level COM calls and dispatches <nl> + * them through the COM runtime . <nl> + * <nl> + * < p > The caller of the methods is responsible for correct initialization of the <nl> + * COM runtime and appropriate thread - handling - depending on the choosen <nl> + * handling model . < / p > <nl> + * <nl> + * @ see < a href = " https : / / msdn . microsoft . com / de - de / library / windows / desktop / ms693344 % 28v = vs . 85 % 29 . aspx " > MSDN - Processes , Threads , and Apartments < / a > <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / ms809971 . aspx " > MSDN - Understanding and Using COM Threading Models < / a > <nl> * / <nl> public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win32 . COM . util . IDispatch , <nl> 	 	 IRawDispatchHandle , IConnectionPoint { <nl> <nl> + 	 / / cached value of the IUnknown interface pointer <nl> + 	 / / Rules of COM state that querying for the IUnknown interface must return <nl> + 	 / / an identical pointer value <nl> + 	 private long unknownId ; <nl> + 	 private final Class < ? > theInterface ; <nl> + 	 private final Factory factory ; <nl> + 	 private final com . sun . jna . platform . win32 . COM . IDispatch rawDispatch ; <nl> + <nl> 	 public ProxyObject ( Class < ? > theInterface , IDispatch rawDispatch , Factory factory ) { <nl> 	 	 this . unknownId = - 1 ; <nl> 	 	 this . rawDispatch = rawDispatch ; <nl> @ @ - 73 , 38 + 88 , 11 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 	 factory . register ( this ) ; <nl> 	 } <nl> <nl> - 	 / * * when proxy is created for arguments on a call back , they are already on the <nl> - 	 * com thread , and hence calling ' getUnknownId ' will not work as it uses the ComThread <nl> - 	 * however , the unknown pointer value is passed in ; <nl> - 	 * <nl> - 	 * @ param theInterface <nl> - 	 * @ param unknownId <nl> - 	 * @ param rawDispatch <nl> - 	 * @ param factory <nl> - 	 * / <nl> - 	 ProxyObject ( Class < ? > theInterface , long unknownId , IDispatch rawDispatch , Factory factory ) { <nl> - 	 	 this . unknownId = unknownId ; <nl> - 	 	 this . rawDispatch = rawDispatch ; <nl> - 	 	 this . theInterface = theInterface ; <nl> - 	 	 this . factory = factory ; <nl> - 	 	 / / make sure dispatch object knows we have a reference to it <nl> - 	 	 / / ( for debug it is usefult to be able to see how many refs are present <nl> - 	 	 int n = this . rawDispatch . AddRef ( ) ; <nl> - 	 	 factory . register ( this ) ; <nl> - 	 } <nl> - <nl> - <nl> - 	 / / cached value of the IUnknown interface pointer <nl> - 	 / / Rules of COM state that querying for the IUnknown interface must return <nl> - 	 / / an identical pointer value <nl> - 	 long unknownId ; <nl> - <nl> - 	 long getUnknownId ( ) { <nl> + 	 private long getUnknownId ( ) { <nl> assert COMUtils . comIsInitialized ( ) : " COM not initialized " ; <nl> <nl> 	 	 if ( - 1 = = this . unknownId ) { <nl> 	 	 	 try { <nl> - <nl> 	 	 	 	 final PointerByReference ppvObject = new PointerByReference ( ) ; <nl> <nl> 	 	 	 	 Thread current = Thread . currentThread ( ) ; <nl> @ @ - 144 , 12 + 132 , 8 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 	 } <nl> 	 } <nl> <nl> - 	 Class < ? > theInterface ; <nl> - 	 Factory factory ; <nl> - 	 com . sun . jna . platform . win32 . COM . IDispatch rawDispatch ; <nl> - <nl> 	 @ Override <nl> - public com . sun . jna . platform . win32 . COM . IDispatch getRawDispatch ( ) { <nl> + public com . sun . jna . platform . win32 . COM . IDispatch getRawDispatch ( ) { <nl> 	 	 return this . rawDispatch ; <nl> 	 } <nl> <nl> @ @ - 164 , 7 + 148 , 7 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 * therefore we can compare the pointers <nl> 	 * / <nl> 	 @ Override <nl> - public boolean equals ( Object arg ) { <nl> + public boolean equals ( Object arg ) { <nl> 	 	 if ( null = = arg ) { <nl> 	 	 	 return false ; <nl> 	 	 } else if ( arg instanceof ProxyObject ) { <nl> @ @ - 261 , 7 + 245 , 7 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 } <nl> <nl> 	 / / - - - - - - - - - - - - - - - - - - - - - - IConnectionPoint - - - - - - - - - - - - - - - - - - - - - - <nl> - 	 ConnectionPoint fetchRawConnectionPoint ( IID iid ) throws InterruptedException , ExecutionException , TimeoutException { <nl> + 	 private ConnectionPoint fetchRawConnectionPoint ( IID iid ) throws InterruptedException , ExecutionException , TimeoutException { <nl> assert COMUtils . comIsInitialized ( ) : " COM not initialized " ; <nl> <nl> 	 	 / / query for ConnectionPointContainer <nl> @ @ - 466 , 7 + 450 , 7 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 	 } <nl> 	 } <nl> <nl> - 	 IID getIID ( ComInterface annotation ) { <nl> + 	 private IID getIID ( ComInterface annotation ) { <nl> 	 	 String iidStr = annotation . iid ( ) ; <nl> 	 	 if ( null ! = iidStr & & ! iidStr . isEmpty ( ) ) { <nl> 	 	 	 return new IID ( iidStr ) ; <nl> @ @ - 657 , 11 + 641 , 11 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 	 } <nl> <nl> <nl> - 	 	 	 HRESULT hr = pDisp . Invoke ( dispId , new REFIID ( Guid . IID _ NULL ) , LOCALE _ SYSTEM _ DEFAULT , <nl> - 	 	 	 	 	 	 	 new WinDef . WORD ( finalNType ) , dp , pvResult , pExcepInfo , puArgErr ) ; <nl> + HRESULT hr = pDisp . Invoke ( dispId , new REFIID ( Guid . IID _ NULL ) , LOCALE _ SYSTEM _ DEFAULT , <nl> + new WinDef . WORD ( finalNType ) , dp , pvResult , pExcepInfo , puArgErr ) ; <nl> <nl> <nl> - 	 	 	 COMUtils . checkRC ( hr , pExcepInfo , puArgErr ) ; <nl> - 	 	 	 return hr ; <nl> + COMUtils . checkRC ( hr , pExcepInfo , puArgErr ) ; <nl> + return hr ; <nl> 	 } <nl> }
diff - - git a / contrib / monitordemo / build . xml b / contrib / monitordemo / build . xml <nl> index 89bf8b4 . . 4af4dfd 100644 <nl> - - - a / contrib / monitordemo / build . xml <nl> + + + b / contrib / monitordemo / build . xml <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> < project name = " jnacontrib . monitordemo " default = " jar " basedir = " . " > <nl> - < description > Builds , tests , and runs the project jnacontrib . msoffice . < / description > <nl> + < description > Builds , tests , and runs the project jnacontrib . monitordemo . < / description > <nl> < ! - - Locations - - > <nl> < property name = " src " location = " . / src " / > <nl> < property name = " build " location = " build " / >
diff - - git a / contrib / monitordemo / build . xml b / contrib / monitordemo / build . xml <nl> new file mode 100644 <nl> index 0000000 . . 89bf8b4 <nl> - - - / dev / null <nl> + + + b / contrib / monitordemo / build . xml <nl> @ @ - 0 , 0 + 1 , 68 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < project name = " jnacontrib . monitordemo " default = " jar " basedir = " . " > <nl> + < description > Builds , tests , and runs the project jnacontrib . msoffice . < / description > <nl> + < ! - - Locations - - > <nl> + < property name = " src " location = " . / src " / > <nl> + < property name = " build " location = " build " / > <nl> + < property name = " jna - dist " location = " . . / . . / dist " / > <nl> + <nl> + < property name = " classes " location = " $ { build } / classes " / > <nl> + < property name = " jar " location = " $ { build } / demo - monitordemo . jar " / > <nl> + < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> + < property name = " main - class " 	 	 	 value = " com . sun . jna . contrib . demo . MonitorInfoDemo . java " / > <nl> + <nl> + < path id = " classpath " > <nl> + < fileset file = " $ { file . reference . jna . jar } " / > <nl> + < fileset dir = " . . / platform / dist " includes = " jna - platform . jar " / > <nl> + < / path > <nl> + <nl> + < ! - - Run Demo . - - > <nl> + < target name = " run " depends = " compile " > <nl> + < java classname = " $ { main - class } " fork = " true " > <nl> + < classpath > <nl> + < pathelement location = " $ { classes } " / > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / java > <nl> + < / target > <nl> + <nl> + < ! - - Delete class and jar files . - - > <nl> + < target name = " clean " > <nl> + < delete dir = " $ { classes } " / > <nl> + < delete file = " $ { jar } " / > <nl> + < delete dir = " $ { build } " / > <nl> + < / target > <nl> + <nl> + < ! - - Compile all classes . - - > <nl> + < target name = " compile " > <nl> + < mkdir dir = " $ { classes } " / > <nl> + < ! - - Compile the project . - - > <nl> + < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> + encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> + < classpath > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / javac > <nl> + < / target > <nl> + <nl> + < ! - - Create jar - file . - - > <nl> + < target name = " jar " depends = " compile " > <nl> + <nl> + < ! - - Copy all non - java files to classes . - - > <nl> + < copy todir = " $ { classes } / com " > <nl> + < fileset dir = " $ { src } / com " > <nl> + < exclude name = " * * / * . java " / > <nl> + < / fileset > <nl> + < / copy > <nl> + <nl> + < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> + < manifest > <nl> + < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> + < / manifest > <nl> + < ! - - platform - - > <nl> + < fileset dir = " . . / platform / build / classes " / > <nl> + < ! - - jna - - > <nl> + < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> + < / jar > <nl> + < / target > <nl> + < / project > <nl> diff - - git a / contrib / msoffice / . classpath b / contrib / msoffice / . classpath <nl> index 34c7450 . . 0468c66 100644 <nl> - - - a / contrib / msoffice / . classpath <nl> + + + b / contrib / msoffice / . classpath <nl> @ @ - 2 , 7 + 2 , 7 @ @ <nl> < classpath > <nl> 	 < classpathentry kind = " src " path = " src " / > <nl> 	 < classpathentry kind = " con " path = " org . eclipse . jdt . launching . JRE _ CONTAINER / org . eclipse . jdt . internal . debug . ui . launcher . StandardVMType / JavaSE - 1 . 7 " / > <nl> - 	 < classpathentry combineaccessrules = " false " kind = " src " path = " / com . sun . jna " / > <nl> - 	 < classpathentry combineaccessrules = " false " kind = " src " path = " / com . sun . jna . platform " / > <nl> + 	 < classpathentry combineaccessrules = " false " kind = " src " path = " / jnalib " / > <nl> + 	 < classpathentry combineaccessrules = " false " kind = " src " path = " / platform " / > <nl> 	 < classpathentry kind = " output " path = " bin " / > <nl> < / classpath > <nl> diff - - git a / contrib / msoffice / build . xml b / contrib / msoffice / build . xml <nl> new file mode 100644 <nl> index 0000000 . . ed163ef <nl> - - - / dev / null <nl> + + + b / contrib / msoffice / build . xml <nl> @ @ - 0 , 0 + 1 , 68 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < project name = " jnacontrib . msoffice " default = " jar " basedir = " . " > <nl> + < description > Builds , tests , and runs the project jnacontrib . msoffice . < / description > <nl> + < ! - - Locations - - > <nl> + < property name = " src " location = " . / src " / > <nl> + < property name = " build " location = " build " / > <nl> + < property name = " jna - dist " location = " . . / . . / dist " / > <nl> + <nl> + < property name = " classes " location = " $ { build } / classes " / > <nl> + < property name = " jar " location = " $ { build } / demo - msoffice . jar " / > <nl> + < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> + < property name = " main - class " 	 	 	 value = " " / > <nl> + <nl> + < path id = " classpath " > <nl> + < fileset file = " $ { file . reference . jna . jar } " / > <nl> + < fileset dir = " . . / platform / dist " includes = " jna - platform . jar " / > <nl> + < / path > <nl> + <nl> + < ! - - Run Demo . - - > <nl> + < target name = " run " depends = " compile " > <nl> + < java classname = " $ { main - class } " fork = " true " > <nl> + < classpath > <nl> + < pathelement location = " $ { classes } " / > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / java > <nl> + < / target > <nl> + <nl> + < ! - - Delete class and jar files . - - > <nl> + < target name = " clean " > <nl> + < delete dir = " $ { classes } " / > <nl> + < delete file = " $ { jar } " / > <nl> + < delete dir = " $ { build } " / > <nl> + < / target > <nl> + <nl> + < ! - - Compile all classes . - - > <nl> + < target name = " compile " > <nl> + < mkdir dir = " $ { classes } " / > <nl> + < ! - - Compile the project . - - > <nl> + < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> + encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> + < classpath > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / javac > <nl> + < / target > <nl> + <nl> + < ! - - Create jar - file . - - > <nl> + < target name = " jar " depends = " compile " > <nl> + <nl> + < ! - - Copy all non - java files to classes . - - > <nl> + < copy todir = " $ { classes } / com " > <nl> + < fileset dir = " $ { src } / com " > <nl> + < exclude name = " * * / * . java " / > <nl> + < / fileset > <nl> + < / copy > <nl> + <nl> + < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> + < manifest > <nl> + < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> + < / manifest > <nl> + < ! - - platform - - > <nl> + < fileset dir = " . . / platform / build / classes " / > <nl> + < ! - - jna - - > <nl> + < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> + < / jar > <nl> + < / target > <nl> + < / project > <nl> diff - - git a / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / util / office / MSOfficeWordDemo . java b / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / util / office / MSOfficeWordDemo . java <nl> index f034679 . . 8221ca6 100644 <nl> - - - a / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / util / office / MSOfficeWordDemo . java <nl> + + + b / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / util / office / MSOfficeWordDemo . java <nl> @ @ - 14 , 6 + 14 , 8 @ @ package com . sun . jna . platform . win32 . COM . util . office ; <nl> <nl> import java . io . File ; <nl> <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . platform . win32 . Ole32 ; <nl> import com . sun . jna . platform . win32 . COM . COMException ; <nl> import com . sun . jna . platform . win32 . COM . util . Factory ; <nl> import com . sun . jna . platform . win32 . COM . util . office . word . ComIApplication ; <nl> @ @ - 40 , 6 + 42 , 7 @ @ public class MSOfficeWordDemo { <nl> 	 	 ComWord _ Application msWordObject = null ; <nl> 	 	 ComIApplication msWord = null ; <nl> 	 	 Factory factory = null ; <nl> + 	 	 Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ; <nl> 	 	 try { <nl> 	 	 	 String tempDir = System . getProperty ( " java . io . tmpdir " ) ; <nl> 	 	 	 System . out . println ( " Files in temp dir : " + tempDir ) ; <nl> @ @ - 101 , 9 + 104 , 7 @ @ public class MSOfficeWordDemo { <nl> 	 	 	 if ( msWord ! = null ) { <nl> 	 	 	 	 msWord . Quit ( ) ; <nl> 	 	 	 } <nl> - 	 	 	 if ( null ! = factory ) { <nl> - 	 	 	 	 factory . getComThread ( ) . terminate ( 500 ) ; <nl> - 	 	 	 } <nl> 	 	 } <nl> + 	 	 Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> 	 } <nl> } <nl> diff - - git a / contrib / native _ window _ msg / . classpath b / contrib / native _ window _ msg / . classpath <nl> index a7dee2d . . 819c7b0 100644 <nl> - - - a / contrib / native _ window _ msg / . classpath <nl> + + + b / contrib / native _ window _ msg / . classpath <nl> @ @ - 3 , 6 + 3 , 6 @ @ <nl> 	 < classpathentry kind = " src " path = " src " / > <nl> 	 < classpathentry kind = " con " path = " org . eclipse . jdt . launching . JRE _ CONTAINER " / > <nl> 	 < classpathentry combineaccessrules = " false " kind = " src " path = " / jnalib " / > <nl> - 	 < classpathentry kind = " lib " path = " C : / GitHub / jna - 3 . 5 . 1 . jar " / > <nl> + 	 < classpathentry combineaccessrules = " false " kind = " src " path = " / platform " / > <nl> 	 < classpathentry kind = " output " path = " bin " / > <nl> < / classpath > <nl> diff - - git a / contrib / native _ window _ msg / build . xml b / contrib / native _ window _ msg / build . xml <nl> new file mode 100644 <nl> index 0000000 . . f2aa121 <nl> - - - / dev / null <nl> + + + b / contrib / native _ window _ msg / build . xml <nl> @ @ - 0 , 0 + 1 , 68 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < project name = " jnacontrib . native _ window _ msg " default = " jar " basedir = " . " > <nl> + < description > Builds , tests , and runs the project jnacontrib . msoffice . < / description > <nl> + < ! - - Locations - - > <nl> + < property name = " src " location = " . / src " / > <nl> + < property name = " build " location = " build " / > <nl> + < property name = " jna - dist " location = " . . / . . / dist " / > <nl> + <nl> + < property name = " classes " location = " $ { build } / classes " / > <nl> + < property name = " jar " location = " $ { build } / demo - nativewindowmsg . jar " / > <nl> + < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> + < property name = " main - class " 	 	 	 value = " com . sun . jna . platform . win32 . Win32WindowDemo . java " / > <nl> + <nl> + < path id = " classpath " > <nl> + < fileset file = " $ { file . reference . jna . jar } " / > <nl> + < fileset dir = " . . / platform / dist " includes = " jna - platform . jar " / > <nl> + < / path > <nl> + <nl> + < ! - - Run Demo . - - > <nl> + < target name = " run " depends = " compile " > <nl> + < java classname = " $ { main - class } " fork = " true " > <nl> + < classpath > <nl> + < pathelement location = " $ { classes } " / > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / java > <nl> + < / target > <nl> + <nl> + < ! - - Delete class and jar files . - - > <nl> + < target name = " clean " > <nl> + < delete dir = " $ { classes } " / > <nl> + < delete file = " $ { jar } " / > <nl> + < delete dir = " $ { build } " / > <nl> + < / target > <nl> + <nl> + < ! - - Compile all classes . - - > <nl> + < target name = " compile " > <nl> + < mkdir dir = " $ { classes } " / > <nl> + < ! - - Compile the project . - - > <nl> + < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> + encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> + < classpath > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / javac > <nl> + < / target > <nl> + <nl> + < ! - - Create jar - file . - - > <nl> + < target name = " jar " depends = " compile " > <nl> + <nl> + < ! - - Copy all non - java files to classes . - - > <nl> + < copy todir = " $ { classes } / com " > <nl> + < fileset dir = " $ { src } / com " > <nl> + < exclude name = " * * / * . java " / > <nl> + < / fileset > <nl> + < / copy > <nl> + <nl> + < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> + < manifest > <nl> + < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> + < / manifest > <nl> + < ! - - platform - - > <nl> + < fileset dir = " . . / platform / build / classes " / > <nl> + < ! - - jna - - > <nl> + < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> + < / jar > <nl> + < / target > <nl> + < / project > <nl> diff - - git a / contrib / native _ window _ msg / src / com / sun / jna / platform / win32 / Win32WindowDemo . java b / contrib / native _ window _ msg / src / com / sun / jna / platform / win32 / Win32WindowDemo . java <nl> index 2e9e962 . . df794ac 100644 <nl> - - - a / contrib / native _ window _ msg / src / com / sun / jna / platform / win32 / Win32WindowDemo . java <nl> + + + b / contrib / native _ window _ msg / src / com / sun / jna / platform / win32 / Win32WindowDemo . java <nl> @ @ - 13 , 27 + 13 , 21 @ @ <nl> <nl> package com . sun . jna . platform . win32 ; <nl> <nl> - import com . sun . jna . WString ; <nl> - import com . sun . jna . platform . win32 . DBT ; <nl> import com . sun . jna . platform . win32 . DBT . DEV _ BROADCAST _ DEVICEINTERFACE ; <nl> import com . sun . jna . platform . win32 . DBT . DEV _ BROADCAST _ HANDLE ; <nl> import com . sun . jna . platform . win32 . DBT . DEV _ BROADCAST _ HDR ; <nl> import com . sun . jna . platform . win32 . DBT . DEV _ BROADCAST _ OEM ; <nl> import com . sun . jna . platform . win32 . DBT . DEV _ BROADCAST _ PORT ; <nl> import com . sun . jna . platform . win32 . DBT . DEV _ BROADCAST _ VOLUME ; <nl> - import com . sun . jna . platform . win32 . Kernel32 ; <nl> - import com . sun . jna . platform . win32 . User32 ; <nl> import com . sun . jna . platform . win32 . WinDef . HMODULE ; <nl> import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> import com . sun . jna . platform . win32 . WinDef . LPARAM ; <nl> import com . sun . jna . platform . win32 . WinDef . LRESULT ; <nl> import com . sun . jna . platform . win32 . WinDef . WPARAM ; <nl> - import com . sun . jna . platform . win32 . WinUser ; <nl> import com . sun . jna . platform . win32 . WinUser . HDEVNOTIFY ; <nl> import com . sun . jna . platform . win32 . WinUser . MSG ; <nl> import com . sun . jna . platform . win32 . WinUser . WNDCLASSEX ; <nl> import com . sun . jna . platform . win32 . WinUser . WindowProc ; <nl> - import com . sun . jna . platform . win32 . Wtsapi32 ; <nl> <nl> / / TODO : Auto - generated Javadoc <nl> / * * <nl> @ @ - 46 , 7 + 40 , 7 @ @ public class Win32WindowDemo implements WindowProc { <nl> 	 * / <nl> 	 public Win32WindowDemo ( ) { <nl> 	 	 / / define new window class <nl> - 	 	 WString windowClass = new WString ( " MyWindowClass " ) ; <nl> + 	 	 String windowClass = new String ( " MyWindowClass " ) ; <nl> 	 	 HMODULE hInst = Kernel32 . INSTANCE . GetModuleHandle ( " " ) ; <nl> <nl> 	 	 WNDCLASSEX wClass = new WNDCLASSEX ( ) ; <nl> diff - - git a / contrib / w32printing / . classpath b / contrib / w32printing / . classpath <nl> index fb565a5 . . d99ea82 100644 <nl> - - - a / contrib / w32printing / . classpath <nl> + + + b / contrib / w32printing / . classpath <nl> @ @ - 1 , 6 + 1 , 8 @ @ <nl> - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> - < classpath > <nl> - 	 < classpathentry kind = " src " path = " src " / > <nl> - 	 < classpathentry kind = " con " path = " org . eclipse . jdt . launching . JRE _ CONTAINER / org . eclipse . jdt . internal . debug . ui . launcher . StandardVMType / JavaSE - 1 . 7 " / > <nl> - 	 < classpathentry kind = " output " path = " bin " / > <nl> - < / classpath > <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < classpath > <nl> + 	 < classpathentry kind = " src " path = " src " / > <nl> + 	 < classpathentry kind = " con " path = " org . eclipse . jdt . launching . JRE _ CONTAINER / org . eclipse . jdt . internal . debug . ui . launcher . StandardVMType / JavaSE - 1 . 7 " / > <nl> + 	 < classpathentry combineaccessrules = " false " kind = " src " path = " / platform " / > <nl> + 	 < classpathentry combineaccessrules = " false " kind = " src " path = " / jnalib " / > <nl> + 	 < classpathentry kind = " output " path = " bin " / > <nl> + < / classpath > <nl> diff - - git a / contrib / w32printing / build . xml b / contrib / w32printing / build . xml <nl> new file mode 100644 <nl> index 0000000 . . 0f81247 <nl> - - - / dev / null <nl> + + + b / contrib / w32printing / build . xml <nl> @ @ - 0 , 0 + 1 , 58 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < project name = " jnacontrib . w32printing " default = " jar " basedir = " . " > <nl> + < description > Builds , tests , and runs the project jnacontrib . msoffice . < / description > <nl> + < ! - - Locations - - > <nl> + < property name = " src " location = " . / src " / > <nl> + < property name = " build " location = " build " / > <nl> + < property name = " jna - dist " location = " . . / . . / dist " / > <nl> + <nl> + < property name = " classes " location = " $ { build } / classes " / > <nl> + < property name = " jar " location = " $ { build } / demo - w32printing . jar " / > <nl> + < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> + < property name = " main - class " 	 	 	 value = " com . sun . jna . platform . win32 . Win32SpoolMonitor . java " / > <nl> + <nl> + < path id = " classpath " > <nl> + < fileset file = " $ { file . reference . jna . jar } " / > <nl> + < fileset dir = " . . / platform / dist " includes = " jna - platform . jar " / > <nl> + < / path > <nl> + <nl> + < ! - - Delete class and jar files . - - > <nl> + < target name = " clean " > <nl> + < delete dir = " $ { classes } " / > <nl> + < delete file = " $ { jar } " / > <nl> + < delete dir = " $ { build } " / > <nl> + < / target > <nl> + <nl> + < ! - - Compile all classes . - - > <nl> + < target name = " compile " > <nl> + < mkdir dir = " $ { classes } " / > <nl> + < ! - - Compile the project . - - > <nl> + < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> + encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> + < classpath > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / javac > <nl> + < / target > <nl> + <nl> + < ! - - Create jar - file . - - > <nl> + < target name = " jar " depends = " compile " > <nl> + <nl> + < ! - - Copy all non - java files to classes . - - > <nl> + < copy todir = " $ { classes } / com " > <nl> + < fileset dir = " $ { src } / com " > <nl> + < exclude name = " * * / * . java " / > <nl> + < / fileset > <nl> + < / copy > <nl> + <nl> + < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> + < manifest > <nl> + < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> + < / manifest > <nl> + < ! - - platform - - > <nl> + < fileset dir = " . . / platform / build / classes " / > <nl> + < ! - - jna - - > <nl> + < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> + < / jar > <nl> + < / target > <nl> + < / project >
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / IDispatch . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / IDispatch . java <nl> index f3d57b0 . . 5a67f89 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / IDispatch . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / IDispatch . java <nl> @ @ - 12 , 13 + 12 , 17 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> + import com . sun . jna . platform . win32 . OaIdl . DISPID ; <nl> + <nl> / * * <nl> * Java friendly version of { @ link com . sun . jna . platform . win32 . COM . IDispatch } . <nl> * <nl> * / <nl> public interface IDispatch extends IUnknown { <nl> - <nl> 	 < T > void setProperty ( String name , T value ) ; <nl> 	 < T > T getProperty ( Class < T > returnType , String name , Object . . . args ) ; <nl> 	 < T > T invokeMethod ( Class < T > returnType , String name , Object . . . args ) ; <nl> + 	 < T > void setProperty ( DISPID dispid , T value ) ; <nl> + 	 < T > T getProperty ( Class < T > returnType , DISPID dispid , Object . . . args ) ; <nl> + 	 < T > T invokeMethod ( Class < T > returnType , DISPID dispid , Object . . . args ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> index 78a0eee . . 9942afb 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> @ @ - 14 , 7 + 14 , 6 @ @ package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> import java . lang . reflect . InvocationHandler ; <nl> import java . lang . reflect . Proxy ; <nl> - import java . util . concurrent . Callable ; <nl> import java . util . concurrent . ExecutionException ; <nl> import java . util . concurrent . TimeoutException ; <nl> <nl> @ @ - 227 , 21 + 226 , 35 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> <nl> 	 	 ComProperty prop = method . getAnnotation ( ComProperty . class ) ; <nl> 	 	 if ( null ! = prop ) { <nl> + int dispId = prop . dispId ( ) ; <nl> 	 	 	 if ( isVoid ) { <nl> - 	 	 	 	 String propName = this . getMutatorName ( method , prop ) ; <nl> - 	 	 	 	 this . setProperty ( propName , args [ 0 ] ) ; <nl> - 	 	 	 	 return null ; <nl> + if ( dispId ! = - 1 ) { <nl> + this . setProperty ( new DISPID ( dispId ) , args [ 0 ] ) ; <nl> + return null ; <nl> + } else { <nl> + String propName = this . getMutatorName ( method , prop ) ; <nl> + this . setProperty ( propName , args [ 0 ] ) ; <nl> + return null ; <nl> + } <nl> 	 	 	 } else { <nl> - 	 	 	 	 String propName = this . getAccessorName ( method , prop ) ; <nl> - 	 	 	 	 return this . getProperty ( returnType , propName , args ) ; <nl> + if ( dispId ! = - 1 ) { <nl> + return this . getProperty ( returnType , new DISPID ( dispId ) , args ) ; <nl> + } else { <nl> + String propName = this . getAccessorName ( method , prop ) ; <nl> + return this . getProperty ( returnType , propName , args ) ; <nl> + } <nl> 	 	 	 } <nl> 	 	 } <nl> <nl> 	 	 ComMethod meth = method . getAnnotation ( ComMethod . class ) ; <nl> 	 	 if ( null ! = meth ) { <nl> - 	 	 	 String methName = this . getMethodName ( method , meth ) ; <nl> - 	 	 	 Object res = this . invokeMethod ( returnType , methName , args ) ; <nl> - 	 	 	 return res ; <nl> + int dispId = meth . dispId ( ) ; <nl> + if ( dispId ! = - 1 ) { <nl> + return this . invokeMethod ( returnType , new DISPID ( dispId ) , args ) ; <nl> + } else { <nl> + String methName = this . getMethodName ( method , meth ) ; <nl> + return this . invokeMethod ( returnType , methName , args ) ; <nl> + } <nl> 	 	 } <nl> <nl> 	 	 return null ; <nl> @ @ - 328 , 42 + 341 , 58 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 / / - - - - - - - - - - - - - - - - - - - - - IDispatch - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> 	 @ Override <nl> 	 public < T > void setProperty ( String name , T value ) { <nl> + DISPID dispID = resolveDispId ( this . getRawDispatch ( ) , name ) ; <nl> + setProperty ( dispID , value ) ; <nl> + 	 } <nl> + <nl> + @ Override <nl> + 	 public < T > void setProperty ( DISPID dispId , T value ) { <nl> assert COMUtils . comIsInitialized ( ) : " COM not initialized " ; <nl> <nl> VARIANT v = Convert . toVariant ( value ) ; <nl> - WinNT . HRESULT hr = this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , this . getRawDispatch ( ) , name , v ) ; <nl> + WinNT . HRESULT hr = this . oleMethod ( OleAuto . DISPATCH _ PROPERTYPUT , null , this . getRawDispatch ( ) , dispId , v ) ; <nl> Convert . free ( v , value ) ; / / Free value allocated by Convert # toVariant <nl> COMUtils . checkRC ( hr ) ; <nl> 	 } <nl> - <nl> + <nl> 	 @ Override <nl> 	 public < T > T getProperty ( Class < T > returnType , String name , Object . . . args ) { <nl> - assert COMUtils . comIsInitialized ( ) : " COM not initialized " ; <nl> - <nl> - 	 	 VARIANT [ ] vargs ; <nl> - 	 	 if ( null = = args ) { <nl> - 	 	 	 vargs = new VARIANT [ 0 ] ; <nl> - 	 	 } else { <nl> - 	 	 	 vargs = new VARIANT [ args . length ] ; <nl> - 	 	 } <nl> - 	 	 for ( int i = 0 ; i < vargs . length ; + + i ) { <nl> - 	 	 	 vargs [ i ] = Convert . toVariant ( args [ i ] ) ; <nl> - 	 	 } <nl> - 	 	 Variant . VARIANT . ByReference result = new Variant . VARIANT . ByReference ( ) ; <nl> - 	 	 WinNT . HRESULT hr = this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , this . getRawDispatch ( ) , name , vargs ) ; <nl> - <nl> - for ( int i = 0 ; i < vargs . length ; i + + ) { <nl> - / / Free value allocated by Convert # toVariant <nl> - Convert . free ( vargs [ i ] , args [ i ] ) ; <nl> - } <nl> - <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - 	 	 <nl> - return convertAndFreeReturn ( result , returnType ) ; <nl> + DISPID dispID = resolveDispId ( this . getRawDispatch ( ) , name ) ; <nl> + return getProperty ( returnType , dispID , args ) ; <nl> 	 } <nl> <nl> + @ Override <nl> + public < T > T getProperty ( Class < T > returnType , DISPID dispID , Object . . . args ) { <nl> + VARIANT [ ] vargs ; <nl> + if ( null = = args ) { <nl> + vargs = new VARIANT [ 0 ] ; <nl> + } else { <nl> + vargs = new VARIANT [ args . length ] ; <nl> + } <nl> + for ( int i = 0 ; i < vargs . length ; + + i ) { <nl> + vargs [ i ] = Convert . toVariant ( args [ i ] ) ; <nl> + } <nl> + Variant . VARIANT . ByReference result = new Variant . VARIANT . ByReference ( ) ; <nl> + WinNT . HRESULT hr = this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , this . getRawDispatch ( ) , dispID , vargs ) ; <nl> + <nl> + for ( int i = 0 ; i < vargs . length ; i + + ) { <nl> + / / Free value allocated by Convert # toVariant <nl> + Convert . free ( vargs [ i ] , args [ i ] ) ; <nl> + } <nl> + <nl> + COMUtils . checkRC ( hr ) ; <nl> + <nl> + return convertAndFreeReturn ( result , returnType ) ; <nl> + } <nl> + <nl> 	 @ Override <nl> 	 public < T > T invokeMethod ( Class < T > returnType , String name , Object . . . args ) { <nl> + DISPID dispID = resolveDispId ( this . getRawDispatch ( ) , name ) ; <nl> + return invokeMethod ( returnType , dispID , args ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public < T > T invokeMethod ( Class < T > returnType , DISPID dispID , Object . . . args ) { <nl> assert COMUtils . comIsInitialized ( ) : " COM not initialized " ; <nl> <nl> 	 	 VARIANT [ ] vargs ; <nl> @ @ - 376 , 7 + 405 , 7 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 	 	 vargs [ i ] = Convert . toVariant ( args [ i ] ) ; <nl> 	 	 } <nl> 	 	 Variant . VARIANT . ByReference result = new Variant . VARIANT . ByReference ( ) ; <nl> - 	 	 WinNT . HRESULT hr = this . oleMethod ( OleAuto . DISPATCH _ METHOD , result , this . getRawDispatch ( ) , name , vargs ) ; <nl> + 	 	 WinNT . HRESULT hr = this . oleMethod ( OleAuto . DISPATCH _ METHOD , result , this . getRawDispatch ( ) , dispID , vargs ) ; <nl> <nl> for ( int i = 0 ; i < vargs . length ; i + + ) { <nl> / / Free value allocated by Convert # toVariant <nl> @ @ - 524 , 11 + 553 , 9 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 	 return this . oleMethod ( nType , pvResult , pDisp , dispId , ( VARIANT [ ] ) null ) ; <nl> 	 } <nl> <nl> - 	 / * <nl> - 	 * @ see com . sun . jna . platform . win32 . COM . COMBindingBaseObject # oleMethod <nl> - 	 * / <nl> - 	 protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , final IDispatch pDisp , String name , <nl> - 	 	 	 VARIANT [ ] pArgs ) throws COMException { <nl> + protected DISPID resolveDispId ( final IDispatch pDisp , String name ) { <nl> + assert COMUtils . comIsInitialized ( ) : " COM not initialized " ; <nl> + <nl> if ( pDisp = = null ) <nl> throw new COMException ( " pDisp ( IDispatch ) parameter is null ! " ) ; <nl> <nl> @ @ - 541 , 8 + 568 , 17 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> pdispID ) ; <nl> <nl> COMUtils . checkRC ( hr ) ; <nl> + <nl> + return pdispID . getValue ( ) ; <nl> + } <nl> + <nl> + 	 / * <nl> + 	 * @ see com . sun . jna . platform . win32 . COM . COMBindingBaseObject # oleMethod <nl> + 	 * / <nl> + 	 protected HRESULT oleMethod ( int nType , VARIANT . ByReference pvResult , final IDispatch pDisp , String name , <nl> + 	 	 	 VARIANT [ ] pArgs ) throws COMException { <nl> <nl> - return this . oleMethod ( nType , pvResult , pDisp , pdispID . getValue ( ) , pArgs ) ; <nl> + return this . oleMethod ( nType , pvResult , pDisp , resolveDispId ( pDisp , name ) , pArgs ) ; <nl> 	 } <nl> <nl> 	 / * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / annotation / ComProperty . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / annotation / ComProperty . java <nl> index 6104c1d . . 33dd4c3 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / annotation / ComProperty . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / annotation / ComProperty . java <nl> @ @ - 23 , 4 + 23 , 5 @ @ import java . lang . annotation . Target ; <nl> @ Inherited <nl> public @ interface ComProperty { <nl> 	 String name ( ) default " " ; <nl> + int dispId ( ) default - 1 ; / / default to dispid unknown <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / IDispatchTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / IDispatchTest . java <nl> index 7da4a2c . . 3232f4b 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / IDispatchTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / IDispatchTest . java <nl> @ @ - 1 , 7 + 1 , 13 @ @ <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . platform . win32 . COM . util . annotation . ComMethod ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComObject ; <nl> + import com . sun . jna . platform . win32 . COM . util . annotation . ComProperty ; <nl> + import com . sun . jna . platform . win32 . OaIdl . DISPID ; <nl> + import com . sun . jna . platform . win32 . Ole32 ; <nl> import junit . framework . TestCase ; <nl> + import static junit . framework . TestCase . assertTrue ; <nl> import org . junit . After ; <nl> import org . junit . Before ; <nl> import org . junit . Test ; <nl> @ @ - 12 , 36 + 18 , 87 @ @ public class IDispatchTest { <nl> <nl> @ Before <nl> public void before ( ) { <nl> + Ole32 . INSTANCE . CoInitializeEx ( Pointer . NULL , Ole32 . COINIT _ MULTITHREADED ) ; <nl> this . factory = new Factory ( ) ; <nl> } <nl> <nl> @ After <nl> public void after ( ) { <nl> this . factory . disposeAll ( ) ; <nl> - this . factory . getComThread ( ) . terminate ( 1000 ) ; <nl> + Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> } <nl> - <nl> + <nl> @ Test <nl> - public void testIDispatch ( ) throws InterruptedException { <nl> - ComInternetExplorer ieApp = factory . createObject ( ComInternetExplorer . class ) ; <nl> - IDispatch appDispatch = ieApp ; <nl> + public void testDispatchBaseOnMethodName ( ) throws InterruptedException { <nl> + ComInternetExplorerMethodname ieApp = factory . createObject ( ComInternetExplorerMethodname . class ) ; <nl> <nl> / / Test getting property <nl> - TestCase . assertFalse ( appDispatch . getProperty ( Boolean . class , " Visible " ) ) ; <nl> + TestCase . assertFalse ( ieApp . getVisible ( ) ) ; <nl> <nl> / / Test setting property <nl> - appDispatch . setProperty ( " Visible " , Boolean . TRUE ) ; <nl> - TestCase . assertTrue ( appDispatch . getProperty ( Boolean . class , " Visible " ) ) ; <nl> + ieApp . setVisible ( Boolean . TRUE ) ; <nl> + TestCase . assertTrue ( ieApp . getVisible ( ) ) ; <nl> <nl> / / Check navigate function and with that the method invocation <nl> - assert appDispatch . getProperty ( String . class , " LocationURL " ) . isEmpty ( ) ; <nl> + assertTrue ( ieApp . getLocationURL ( ) . isEmpty ( ) ) ; <nl> + <nl> + ieApp . Navigate2 ( " https : / / github . com / java - native - access / " ) ; <nl> + <nl> + / / Check max . 2s if Navigation happend <nl> + boolean navigationHappend = false ; <nl> + for ( int i = 0 ; i < 10 ; i + + ) { <nl> + String url = ieApp . getLocationURL ( ) ; <nl> + if ( ! url . isEmpty ( ) ) { <nl> + navigationHappend = true ; <nl> + break ; <nl> + } else { <nl> + Thread . sleep ( 200 ) ; <nl> + } <nl> + } <nl> + <nl> + TestCase . assertTrue ( navigationHappend ) ; <nl> + <nl> + ieApp . Quit ( ) ; <nl> + } <nl> + <nl> + @ ComObject ( progId = " Internet . Explorer . 1 " , clsId = " { 0002DF01 - 0000 - 0000 - C000 - 000000000046 } " ) <nl> + interface ComInternetExplorerMethodname { <nl> + @ ComProperty <nl> + String getLocationURL ( ) ; <nl> + <nl> + @ ComMethod <nl> + void Navigate2 ( String url ) ; <nl> + <nl> + @ ComProperty <nl> + Boolean getVisible ( ) ; <nl> + <nl> + @ ComProperty <nl> + void setVisible ( Boolean visible ) ; <nl> + <nl> + @ ComMethod <nl> + void Quit ( ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testDispatchBaseOnNamed ( ) throws InterruptedException { <nl> + ComInternetExplorerNamed ieApp = factory . createObject ( ComInternetExplorerNamed . class ) ; <nl> + <nl> + / / Test getting property <nl> + TestCase . assertFalse ( ieApp . getVisible _ MOD ( ) ) ; <nl> + <nl> + / / Test setting property <nl> + ieApp . setVisible _ MOD ( Boolean . TRUE ) ; <nl> + TestCase . assertTrue ( ieApp . getVisible _ MOD ( ) ) ; <nl> <nl> - appDispatch . invokeMethod ( Void . class , " Navigate2 " , " http : / / www . heise . de " ) ; <nl> + / / Check navigate function and with that the method invocation <nl> + assertTrue ( ieApp . getLocationURL _ MOD ( ) . isEmpty ( ) ) ; <nl> + <nl> + ieApp . Navigate2 _ MOD ( " https : / / github . com / java - native - access / " ) ; <nl> <nl> / / Check max . 2s if Navigation happend <nl> boolean navigationHappend = false ; <nl> for ( int i = 0 ; i < 10 ; i + + ) { <nl> - String url = appDispatch . getProperty ( String . class , " LocationURL " ) ; <nl> + String url = ieApp . getLocationURL _ MOD ( ) ; <nl> if ( ! url . isEmpty ( ) ) { <nl> navigationHappend = true ; <nl> break ; <nl> @ @ - 51 , 12 + 108 , 151 @ @ public class IDispatchTest { <nl> } <nl> <nl> TestCase . assertTrue ( navigationHappend ) ; <nl> - <nl> - appDispatch . invokeMethod ( Void . class , " Quit " ) ; <nl> + <nl> + ieApp . Quit _ MOD ( ) ; <nl> + } <nl> + <nl> + @ ComObject ( progId = " Internet . Explorer . 1 " , clsId = " { 0002DF01 - 0000 - 0000 - C000 - 000000000046 } " ) <nl> + interface ComInternetExplorerNamed { <nl> + @ ComProperty ( name = " LocationURL " ) <nl> + String getLocationURL _ MOD ( ) ; <nl> + <nl> + @ ComMethod ( name = " Navigate2 " ) <nl> + void Navigate2 _ MOD ( String url ) ; <nl> + <nl> + @ ComProperty ( name = " Visible " ) <nl> + Boolean getVisible _ MOD ( ) ; <nl> + <nl> + @ ComProperty ( name = " Visible " ) <nl> + void setVisible _ MOD ( Boolean visible ) ; <nl> + <nl> + @ ComMethod ( name = " Quit " ) <nl> + void Quit _ MOD ( ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testDispatchBaseOnDISPID ( ) throws InterruptedException { <nl> + ComInternetExplorerDISPID ieApp = factory . createObject ( ComInternetExplorerDISPID . class ) ; <nl> + <nl> + / / Test getting property <nl> + TestCase . assertFalse ( ieApp . getVisible _ MOD ( ) ) ; <nl> <nl> + / / Test setting property <nl> + ieApp . setVisible _ MOD ( Boolean . TRUE ) ; <nl> + TestCase . assertTrue ( ieApp . getVisible _ MOD ( ) ) ; <nl> + <nl> + / / Check navigate function and with that the method invocation <nl> + assertTrue ( ieApp . getLocationURL _ MOD ( ) . isEmpty ( ) ) ; <nl> + <nl> + ieApp . Navigate2 _ MOD ( " https : / / github . com / java - native - access / " ) ; <nl> + <nl> + / / Check max . 2s if Navigation happend <nl> + boolean navigationHappend = false ; <nl> + for ( int i = 0 ; i < 10 ; i + + ) { <nl> + String url = ieApp . getLocationURL _ MOD ( ) ; <nl> + if ( ! url . isEmpty ( ) ) { <nl> + navigationHappend = true ; <nl> + break ; <nl> + } else { <nl> + Thread . sleep ( 200 ) ; <nl> + } <nl> + } <nl> + <nl> + TestCase . assertTrue ( navigationHappend ) ; <nl> + <nl> + ieApp . Quit _ MOD ( ) ; <nl> + } <nl> + <nl> @ ComObject ( progId = " Internet . Explorer . 1 " , clsId = " { 0002DF01 - 0000 - 0000 - C000 - 000000000046 } " ) <nl> - interface ComInternetExplorer extends IUnknown , IDispatch { <nl> + interface ComInternetExplorerDISPID { <nl> + @ ComProperty ( dispId = 0x000000d3 ) <nl> + String getLocationURL _ MOD ( ) ; <nl> + <nl> + @ ComMethod ( dispId = 0x000001f4 ) <nl> + void Navigate2 _ MOD ( String url ) ; <nl> + <nl> + @ ComProperty ( dispId = 0x00000192 ) <nl> + Boolean getVisible _ MOD ( ) ; <nl> + <nl> + @ ComProperty ( dispId = 0x00000192 ) <nl> + void setVisible _ MOD ( Boolean visible ) ; <nl> + <nl> + @ ComMethod ( dispId = 0x0000012c ) <nl> + void Quit _ MOD ( ) ; <nl> } <nl> + <nl> + @ Test <nl> + public void testIDispatchName ( ) throws InterruptedException { <nl> + ComInternetExplorerIDispatch ieApp = factory . createObject ( ComInternetExplorerIDispatch . class ) ; <nl> + <nl> + / / Test getting property <nl> + TestCase . assertFalse ( ieApp . getProperty ( Boolean . class , " Visible " ) ) ; <nl> + <nl> + / / Test setting property <nl> + ieApp . setProperty ( " Visible " , Boolean . TRUE ) ; <nl> + TestCase . assertTrue ( ieApp . getProperty ( Boolean . class , " Visible " ) ) ; <nl> + <nl> + / / Check navigate function and with that the method invocation <nl> + assertTrue ( ieApp . getProperty ( String . class , " LocationURL " ) . isEmpty ( ) ) ; <nl> + <nl> + ieApp . invokeMethod ( Void . class , " Navigate2 " , " https : / / github . com / java - native - access / " ) ; <nl> + <nl> + / / Check max . 2s if Navigation happend <nl> + boolean navigationHappend = false ; <nl> + for ( int i = 0 ; i < 10 ; i + + ) { <nl> + String url = ieApp . getProperty ( String . class , " LocationURL " ) ; <nl> + if ( ! url . isEmpty ( ) ) { <nl> + navigationHappend = true ; <nl> + break ; <nl> + } else { <nl> + Thread . sleep ( 200 ) ; <nl> + } <nl> + } <nl> + <nl> + TestCase . assertTrue ( navigationHappend ) ; <nl> + <nl> + ieApp . invokeMethod ( Void . class , " Quit " ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void testIDispatchDISPID ( ) throws InterruptedException { <nl> + DISPID locationURL = new DISPID ( 0x000000d3 ) ; <nl> + DISPID visible = new DISPID ( 0x00000192 ) ; <nl> + DISPID quit = new DISPID ( 0x0000012c ) ; <nl> + DISPID navigate2 = new DISPID ( 0x000001f4 ) ; <nl> + <nl> + ComInternetExplorerIDispatch ieApp = factory . createObject ( ComInternetExplorerIDispatch . class ) ; <nl> <nl> + / / Test getting property <nl> + TestCase . assertFalse ( ieApp . getProperty ( Boolean . class , visible ) ) ; <nl> + <nl> + / / Test setting property <nl> + ieApp . setProperty ( visible , Boolean . TRUE ) ; <nl> + TestCase . assertTrue ( ieApp . getProperty ( Boolean . class , visible ) ) ; <nl> + <nl> + / / Check navigate function and with that the method invocation <nl> + assertTrue ( ieApp . getProperty ( String . class , locationURL ) . isEmpty ( ) ) ; <nl> + <nl> + ieApp . invokeMethod ( Void . class , navigate2 , " https : / / github . com / java - native - access / " ) ; <nl> + <nl> + / / Check max . 2s if Navigation happend <nl> + boolean navigationHappend = false ; <nl> + for ( int i = 0 ; i < 10 ; i + + ) { <nl> + String url = ieApp . getProperty ( String . class , locationURL ) ; <nl> + if ( ! url . isEmpty ( ) ) { <nl> + navigationHappend = true ; <nl> + break ; <nl> + } else { <nl> + Thread . sleep ( 200 ) ; <nl> + } <nl> + } <nl> + <nl> + TestCase . assertTrue ( navigationHappend ) ; <nl> + <nl> + ieApp . invokeMethod ( Void . class , quit ) ; <nl> + } <nl> + <nl> + @ ComObject ( progId = " Internet . Explorer . 1 " , clsId = " { 0002DF01 - 0000 - 0000 - C000 - 000000000046 } " ) <nl> + interface ComInternetExplorerIDispatch extends IDispatch { <nl> + } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 635f1a3 . . 4ea6799 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 40 , 6 + 40 , 7 @ @ Features <nl> * [ # 582 ] ( https : / / github . com / java - native - access / jna / pull / 582 ) : Mavenize the build process - Phase 1 : building the native code via Maven [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 606 ] ( https : / / github . com / java - native - access / jna / pull / 606 ) : Added Kerne32Util method to facilitate checking that calls to LocalFree / GlobalFree are successful [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 612 ] ( https : / / github . com / java - native - access / jna / pull / 612 ) : Kernel32Util # freeLocal / GlobalMemory always throws Win32Exception if failed [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 608 ] ( https : / / github . com / java - native - access / jna / pull / 608 ) : Mavenize the build process - change parent and native pom artifactId / name to differentiate in IDE and build tools . [ @ bhamail ] ( https : / / github . com / bhamail ) <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / native / pom . xml b / native / pom . xml <nl> index 5a7fc7b . . 4dff010 100644 <nl> - - - a / native / pom . xml <nl> + + + b / native / pom . xml <nl> @ @ - 7 , 15 + 7 , 15 @ @ <nl> <nl> < parent > <nl> < groupId > net . java . dev . jna < / groupId > <nl> - < artifactId > parent < / artifactId > <nl> + < artifactId > jna - parent < / artifactId > <nl> < version > 4 . 3 . 0 - SNAPHSOT < / version > <nl> < relativePath > . . / parent < / relativePath > <nl> < / parent > <nl> <nl> - < artifactId > native < / artifactId > <nl> + < artifactId > jna - native < / artifactId > <nl> < packaging > pom < / packaging > <nl> <nl> - < name > net . java . dev . jna : native < / name > <nl> + < name > net . java . dev . jna : jna - native < / name > <nl> <nl> < build > <nl> < plugins > <nl> diff - - git a / parent / pom . xml b / parent / pom . xml <nl> index 3e7056d . . b299ad1 100644 <nl> - - - a / parent / pom . xml <nl> + + + b / parent / pom . xml <nl> @ @ - 5 , 11 + 5 , 11 @ @ <nl> < modelVersion > 4 . 0 . 0 < / modelVersion > <nl> <nl> < groupId > net . java . dev . jna < / groupId > <nl> - < artifactId > parent < / artifactId > <nl> + < artifactId > jna - parent < / artifactId > <nl> < version > 4 . 3 . 0 - SNAPHSOT < / version > <nl> < packaging > pom < / packaging > <nl> <nl> - < name > net . java . dev . jna : parent < / name > <nl> + < name > net . java . dev . jna : jna - parent < / name > <nl> < url > https : / / github . com / java - native - access / jna < / url > <nl> < licenses > <nl> < license >
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8ff7741 . . 65be473 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 52 , 6 + 52 , 7 @ @ Bug Fixes <nl> * [ # 578 ] ( https : / / github . com / java - native - access / jna / pull / 578 ) : Fix COM CallbackHandlers , allow usage of VARIANTs directly in c . s . j . p . w . COM . util . ProxyObject and fix native memory leak in c . s . j . p . w . COM . util . ProxyObject - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) <nl> * [ # 601 ] ( https : / / github . com / java - native - access / jna / pull / 601 ) : Remove COMThread and COM initialization from objects and require callers to initialize COM themselves . Asserts are added to guard correct usage . - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 602 ] https : / / github . com / java - native - access / jna / pull / 602 ) : Make sure SID related memory is properly released once no longer required [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 610 ] ( https : / / github . com / java - native - access / jna / pull / 610 ) : Fixed issue # 604 : Kernel32 # GetLastError ( ) always returns ERROR _ SUCCESS [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> <nl> Release 4 . 2 . 1 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index 5db76e9 . . 57cbb19 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 61 , 6 + 61 , 12 @ @ public class Kernel32Test extends TestCase { <nl> junit . textui . TestRunner . run ( Kernel32Test . class ) ; <nl> } <nl> <nl> + / / see https : / / github . com / java - native - access / jna / issues / 604 <nl> + public void testGetLastErrorNativeLibraryOverride ( ) { <nl> + assertFalse ( " Unexpected success " , Kernel32 . INSTANCE . CloseHandle ( null ) ) ; <nl> + assertEquals ( " Mismatched error code " , WinError . ERROR _ INVALID _ HANDLE , Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + <nl> / / see https : / / github . com / twall / jna / issues / 482 <nl> public void testNoDuplicateMethodsNames ( ) { <nl> Collection < String > dupSet = AbstractWin32TestSupport . detectDuplicateMethods ( Kernel32 . class ) ; <nl> @ @ - 295 , 11 + 301 , 10 @ @ public class Kernel32Test extends TestCase { <nl> <nl> public void testGetCurrentThread ( ) { <nl> HANDLE h = Kernel32 . INSTANCE . GetCurrentThread ( ) ; <nl> - assertNotNull ( h ) ; <nl> - assertFalse ( h . equals ( 0 ) ) ; <nl> - / / CloseHandle does not need to be called for a thread handle <nl> - assertFalse ( Kernel32 . INSTANCE . CloseHandle ( h ) ) ; <nl> - assertEquals ( WinError . ERROR _ INVALID _ HANDLE , Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + assertNotNull ( " No current thread handle " , h ) ; <nl> + assertFalse ( " Null current thread handle " , h . equals ( 0 ) ) ; <nl> + / / Calling the CloseHandle function with this handle has no effect <nl> + assertTrue ( Kernel32 . INSTANCE . CloseHandle ( h ) ) ; <nl> } <nl> <nl> public void testOpenThread ( ) { <nl> @ @ - 316 , 11 + 321 , 10 @ @ public class Kernel32Test extends TestCase { <nl> <nl> public void testGetCurrentProcess ( ) { <nl> HANDLE h = Kernel32 . INSTANCE . GetCurrentProcess ( ) ; <nl> - assertNotNull ( h ) ; <nl> - assertFalse ( h . equals ( 0 ) ) ; <nl> - / / CloseHandle does not need to be called for a process handle <nl> - assertFalse ( Kernel32 . INSTANCE . CloseHandle ( h ) ) ; <nl> - assertEquals ( WinError . ERROR _ INVALID _ HANDLE , Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + assertNotNull ( " No current process handle " , h ) ; <nl> + assertFalse ( " Null current process handle " , h . equals ( 0 ) ) ; <nl> + / / Calling the CloseHandle function with a pseudo handle has no effect <nl> + assertTrue ( Kernel32 . INSTANCE . CloseHandle ( h ) ) ; <nl> } <nl> <nl> public void testOpenProcess ( ) { <nl> @ @ - 332 , 8 + 336 , 9 @ @ public class Kernel32Test extends TestCase { <nl> } <nl> <nl> public void testQueryFullProcessImageName ( ) { <nl> - HANDLE h = Kernel32 . INSTANCE . OpenProcess ( 0 , false , Kernel32 . INSTANCE . GetCurrentProcessId ( ) ) ; <nl> - assertNotNull ( " Failed ( " + Kernel32 . INSTANCE . GetLastError ( ) + " ) to get process handle " , h ) ; <nl> + int pid = Kernel32 . INSTANCE . GetCurrentProcessId ( ) ; <nl> + HANDLE h = Kernel32 . INSTANCE . OpenProcess ( 0 , false , pid ) ; <nl> + assertNotNull ( " Failed ( " + Kernel32 . INSTANCE . GetLastError ( ) + " ) to get process ID = " + pid + " handle " , h ) ; <nl> <nl> try { <nl> char [ ] path = new char [ WinDef . MAX _ PATH ] ; <nl> diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index ea753cb . . d2ee5a4 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 109 , 7 + 109 , 12 @ @ public class NativeLibrary { <nl> synchronized ( functions ) { <nl> Function f = new Function ( this , " GetLastError " , Function . ALT _ CONVENTION , encoding ) { <nl> @ Override <nl> - Object invoke ( Object [ ] args , Class < ? > returnType , boolean b ) { <nl> + Object invoke ( Object [ ] args , Class < ? > returnType , boolean b , int fixedArgs ) { <nl> + return Integer . valueOf ( Native . getLastError ( ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + Object invoke ( Method invokingMethod , Class < ? > [ ] paramTypes , Class < ? > returnType , Object [ ] inArgs , Map < String , ? > options ) { <nl> return Integer . valueOf ( Native . getLastError ( ) ) ; <nl> } <nl> } ;
diff - - git a / lib / native / freebsd - x86 - 64 . jar b / lib / native / freebsd - x86 - 64 . jar <nl> index 8ed2aae . . 6716399 100755 <nl> Binary files a / lib / native / freebsd - x86 - 64 . jar and b / lib / native / freebsd - x86 - 64 . jar differ <nl> diff - - git a / lib / native / freebsd - x86 . jar b / lib / native / freebsd - x86 . jar <nl> index 3dbb368 . . 6716399 100755 <nl> Binary files a / lib / native / freebsd - x86 . jar and b / lib / native / freebsd - x86 . jar differ <nl> diff - - git a / lib / native / linux - aarch64 . jar b / lib / native / linux - aarch64 . jar <nl> index a3e1001 . . 6716399 100644 <nl> Binary files a / lib / native / linux - aarch64 . jar and b / lib / native / linux - aarch64 . jar differ <nl> diff - - git a / lib / native / openbsd - x86 - 64 . jar b / lib / native / openbsd - x86 - 64 . jar <nl> index 8d0007d . . 6716399 100755 <nl> Binary files a / lib / native / openbsd - x86 - 64 . jar and b / lib / native / openbsd - x86 - 64 . jar differ <nl> diff - - git a / lib / native / openbsd - x86 . jar b / lib / native / openbsd - x86 . jar <nl> index 5b61717 . . 6716399 100755 <nl> Binary files a / lib / native / openbsd - x86 . jar and b / lib / native / openbsd - x86 . jar differ <nl> diff - - git a / lib / native / sunos - x86 - 64 . jar b / lib / native / sunos - x86 - 64 . jar <nl> index f112372 . . 6716399 100755 <nl> Binary files a / lib / native / sunos - x86 - 64 . jar and b / lib / native / sunos - x86 - 64 . jar differ <nl> diff - - git a / lib / native / sunos - x86 . jar b / lib / native / sunos - x86 . jar <nl> index 1fb2a0f . . 6716399 100755 <nl> Binary files a / lib / native / sunos - x86 . jar and b / lib / native / sunos - x86 . jar differ <nl> diff - - git a / lib / native / w32ce - arm . jar b / lib / native / w32ce - arm . jar <nl> index a341b15 . . 6716399 100755 <nl> Binary files a / lib / native / w32ce - arm . jar and b / lib / native / w32ce - arm . jar differ
diff - - git a / lib / native / linux - ppc64 . jar b / lib / native / linux - ppc64 . jar <nl> index 6ed8af7 . . 4a33cec 100755 <nl> Binary files a / lib / native / linux - ppc64 . jar and b / lib / native / linux - ppc64 . jar differ
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 813d941 . . db4be76 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 48 , 6 + 48 , 7 @ @ Bug Fixes <nl> * [ # 584 ] ( https : / / github . com / java - native - access / jna / pull / 584 ) : Promote float varargs to double - [ @ marco2357 ] ( https : / / github . com / marco2357 ) . <nl> * [ # 588 ] ( https : / / github . com / java - native - access / jna / pull / 588 ) : Fix varargs calls on arm - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 593 ] ( https : / / github . com / java - native - access / jna / pull / 593 ) : Improve binding of TypeLib bindings - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 578 ] ( https : / / github . com / java - native - access / jna / pull / 578 ) : Fix COM CallbackHandlers , allow usage of VARIANTs directly in c . s . j . p . w . COM . util . ProxyObject and fix native memory leak in c . s . j . p . w . COM . util . ProxyObject - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) <nl> <nl> Release 4 . 2 . 1 <nl> = = = = = = = = = = = = =
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> index 7e0316b . . 4185e6b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> @ @ - 12 , 15 + 12 , 11 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> - import java . lang . Thread . UncaughtExceptionHandler ; <nl> import java . lang . reflect . Method ; <nl> import java . util . ArrayList ; <nl> import java . util . HashMap ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> - import java . util . concurrent . ExecutorService ; <nl> - import java . util . concurrent . Executors ; <nl> - import java . util . concurrent . ThreadFactory ; <nl> <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . WString ; <nl> @ @ - 61 , 20 + 57 , 6 @ @ public class CallbackProxy implements IDispatchCallback { <nl> 	 	 this . listenedToRiid = this . createRIID ( comEventCallbackInterface ) ; <nl> 	 	 this . dsipIdMap = this . createDispIdMap ( comEventCallbackInterface ) ; <nl> 	 	 this . dispatchListener = new DispatchListener ( this ) ; <nl> - 	 	 this . executorService = Executors . newSingleThreadExecutor ( new ThreadFactory ( ) { <nl> - 	 	 	 @ Override <nl> - 	 	 	 public Thread newThread ( Runnable r ) { <nl> - 	 	 	 	 Thread thread = new Thread ( r , " COM Event Callback executor " ) ; <nl> - 	 	 	 	 thread . setDaemon ( true ) ; <nl> - 	 	 	 	 thread . setUncaughtExceptionHandler ( new UncaughtExceptionHandler ( ) { <nl> - 	 	 	 	 	 @ Override <nl> - 	 	 	 	 	 public void uncaughtException ( Thread t , Throwable e ) { <nl> - 	 	 	 	 	 	 CallbackProxy . this . factory . comThread . uncaughtExceptionHandler . uncaughtException ( t , e ) ; <nl> - 	 } <nl> - 	 	 	 	 } ) ; <nl> - 	 	 	 	 return thread ; <nl> - 	 	 	 } <nl> - 	 	 } ) ; <nl> 	 } <nl> <nl> 	 Factory factory ; <nl> @ @ - 83 , 7 + 65 , 6 @ @ public class CallbackProxy implements IDispatchCallback { <nl> 	 REFIID listenedToRiid ; <nl> 	 public DispatchListener dispatchListener ; <nl> 	 Map < DISPID , Method > dsipIdMap ; <nl> - 	 ExecutorService executorService ; <nl> <nl> 	 REFIID createRIID ( Class < ? > comEventCallbackInterface ) { <nl> 	 	 ComInterface comInterfaceAnnotation = comEventCallbackInterface . getAnnotation ( ComInterface . class ) ; <nl> @ @ - 138 , 19 + 119 , 23 @ @ public class CallbackProxy implements IDispatchCallback { <nl> return ; <nl> } <nl> <nl> - / / decode arguments <nl> - / / must decode them on this thread , and create a proxy for any COM objects ( IDispatch ) <nl> - / / this will AddRef on the COM object so that it is not cleaned up before we can use it <nl> - / / on the thread that does the java callback . <nl> + / / Arguments are converted to the JAVA side and IDispatch Interfaces <nl> + / / are wrapped into an ProxyObject if so requested . <nl> + / / <nl> + / / Out - Parameter need to be specified as VARIANT , VARIANT args are <nl> + / / not converted , so COM memory allocation rules apply . <nl> final Class < ? > [ ] params = eventMethod . getParameterTypes ( ) ; <nl> List < Object > rjargs = new ArrayList < Object > ( ) ; <nl> if ( pDispParams . cArgs . intValue ( ) > 0 ) { <nl> VariantArg vargs = pDispParams . rgvarg ; <nl> vargs . setArraySize ( pDispParams . cArgs . intValue ( ) ) ; <nl> for ( int i = 0 ; i < vargs . variantArg . length ; i + + ) { <nl> + Class targetClass = params [ vargs . variantArg . length - 1 - i ] ; <nl> Variant . VARIANT varg = vargs . variantArg [ i ] ; <nl> - Object jarg = Convert . toJavaObject ( varg , params [ vargs . variantArg . length - 1 - i ] ) ; <nl> + Object jarg = Convert . toJavaObject ( varg , targetClass ) ; <nl> if ( jarg instanceof IDispatch ) { <nl> + / / If a dispatch is returned try to wrap it into a proxy <nl> + / / helper if the target is ComInterface annotated <nl> IDispatch dispatch = ( IDispatch ) jarg ; <nl> / / get raw IUnknown interface <nl> PointerByReference ppvObject = new PointerByReference ( ) ; <nl> @ @ - 158 , 56 + 143 , 38 @ @ public class CallbackProxy implements IDispatchCallback { <nl> dispatch . QueryInterface ( new REFIID ( iid ) , ppvObject ) ; <nl> Unknown rawUnk = new Unknown ( ppvObject . getValue ( ) ) ; <nl> 	 	 	 	 	 long unknownId = Pointer . nativeValue ( rawUnk . getPointer ( ) ) ; <nl> - int n = rawUnk . Release ( ) ; <nl> - / / Note : unlike in other places , there is currently no COM ref already added for this pointer <nl> IUnknown unk = CallbackProxy . this . factory . createProxy ( IUnknown . class , unknownId , dispatch ) ; <nl> - rjargs . add ( unk ) ; <nl> + if ( targetClass . getAnnotation ( ComInterface . class ) ! = null ) { <nl> + rjargs . add ( unk . queryInterface ( targetClass ) ) ; <nl> + } else { <nl> + rjargs . add ( unk ) ; <nl> + } <nl> } else { <nl> rjargs . add ( jarg ) ; <nl> } <nl> } <nl> } <nl> - final List < Object > jargs = new ArrayList < Object > ( rjargs ) ; <nl> - Runnable invokation = new Runnable ( ) { <nl> - @ Override <nl> - public void run ( ) { <nl> - / / need to convert arguments maybe <nl> - List < Object > margs = new ArrayList < Object > ( ) ; <nl> - try { <nl> - / / Reverse order from calling convention <nl> - int lastParamIdx = eventMethod . getParameterTypes ( ) . length - 1 ; <nl> - for ( int i = lastParamIdx ; i > = 0 ; i - - ) { <nl> - Class < ? > paramType = params [ lastParamIdx - i ] ; <nl> - Object jobj = jargs . get ( i ) ; <nl> - if ( jobj ! = null & & paramType . getAnnotation ( ComInterface . class ) ! = null ) { <nl> - if ( jobj instanceof IUnknown ) { <nl> - IUnknown unk = ( IUnknown ) jobj ; <nl> - Object mobj = unk . queryInterface ( paramType ) ; <nl> - margs . add ( mobj ) ; <nl> - } else { <nl> - throw new RuntimeException ( " Cannot convert argument " + jobj . getClass ( ) <nl> - + " to ComInterface " + paramType ) ; <nl> - } <nl> - } else { <nl> - margs . add ( jobj ) ; <nl> - } <nl> - } <nl> - eventMethod . invoke ( comEventCallbackListener , margs . toArray ( ) ) ; <nl> - } catch ( Exception e ) { <nl> - List < String > decodedClassNames = new ArrayList < String > ( margs . size ( ) ) ; <nl> - for ( Object o : margs ) { <nl> - if ( o = = null ) { <nl> - decodedClassNames . add ( " NULL " ) ; <nl> - } else { <nl> - decodedClassNames . add ( o . getClass ( ) . getName ( ) ) ; <nl> - } <nl> - } <nl> - CallbackProxy . this . comEventCallbackListener . errorReceivingCallbackEvent ( <nl> - " Exception invoking method " + eventMethod + " supplied : " + decodedClassNames . toString ( ) , e ) ; <nl> + <nl> + List < Object > margs = new ArrayList < Object > ( ) ; <nl> + try { <nl> + / / Reverse order from calling convention <nl> + int lastParamIdx = eventMethod . getParameterTypes ( ) . length - 1 ; <nl> + for ( int i = lastParamIdx ; i > = 0 ; i - - ) { <nl> + margs . add ( rjargs . get ( i ) ) ; <nl> + } <nl> + eventMethod . invoke ( comEventCallbackListener , margs . toArray ( ) ) ; <nl> + } catch ( Exception e ) { <nl> + List < String > decodedClassNames = new ArrayList < String > ( margs . size ( ) ) ; <nl> + for ( Object o : margs ) { <nl> + if ( o = = null ) { <nl> + decodedClassNames . add ( " NULL " ) ; <nl> + } else { <nl> + decodedClassNames . add ( o . getClass ( ) . getName ( ) ) ; <nl> } <nl> } <nl> - } ; <nl> - 	 	 this . executorService . execute ( invokation ) ; <nl> + CallbackProxy . this . comEventCallbackListener . errorReceivingCallbackEvent ( <nl> + " Exception invoking method " + eventMethod + " supplied : " + decodedClassNames . toString ( ) , e ) ; <nl> + } <nl> } <nl> <nl> 	 @ Override <nl> @ @ - 237 , 7 + 204 , 13 @ @ public class CallbackProxy implements IDispatchCallback { <nl> 	 	 	 DISPPARAMS . ByReference pDispParams , VARIANT . ByReference pVarResult , EXCEPINFO . ByReference pExcepInfo , <nl> 	 	 	 IntByReference puArgErr ) { <nl> <nl> - 	 	 this . invokeOnThread ( dispIdMember , riid , lcid , wFlags , pDispParams ) ; <nl> + assert ( ! ComThread . getCurrentThreadIsCOM ( ) ) : " Assumption about COM threading broken . " ; <nl> + ComThread . setCurrentThreadIsCOM ( true ) ; <nl> + try { <nl> + this . invokeOnThread ( dispIdMember , riid , lcid , wFlags , pDispParams ) ; <nl> + } finally { <nl> + ComThread . setCurrentThreadIsCOM ( false ) ; <nl> + } <nl> <nl> 	 	 return WinError . S _ OK ; <nl> 	 } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ComThread . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ComThread . java <nl> index 3ac5c13 . . 07e6405 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ComThread . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ComThread . java <nl> @ @ - 26 , 7 + 26 , 6 @ @ import com . sun . jna . platform . win32 . WinNT ; <nl> import com . sun . jna . platform . win32 . COM . COMUtils ; <nl> <nl> public class ComThread { <nl> - <nl> 	 ExecutorService executor ; <nl> 	 Runnable firstTask ; <nl> 	 boolean requiresInitialisation ; <nl> @ @ - 44 , 6 + 43 , 8 @ @ public class ComThread { <nl> 	 	 this . firstTask = new Runnable ( ) { <nl> 	 	 	 @ Override <nl> 	 	 	 public void run ( ) { <nl> + / / By definition this is a COM thread <nl> + ComThread . setCurrentThreadIsCOM ( true ) ; <nl> 	 	 	 	 try { <nl> 	 	 	 	 	 / / If we do not use COINIT _ MULTITHREADED , it is necessary to have <nl> 	 	 	 	 	 / / a message loop see - <nl> @ @ - 119 , 11 + 120 , 38 @ @ public class ComThread { <nl> 	 	 } <nl> 	 } <nl> <nl> + / / The currentThreadIsCOM is used if wrapper are used in a callback <nl> + / / the callback is called in a new thread by the JNA runtime . As the <nl> + / / call comes from COM it is asumed , that the thread is correctly <nl> + / / initialized and can be used for COM calls ( see MTA assumption above ) <nl> + private static ThreadLocal < Boolean > currentThreadIsCOM = new ThreadLocal < Boolean > ( ) ; <nl> + <nl> + static void setCurrentThreadIsCOM ( boolean isCOM ) { <nl> + currentThreadIsCOM . set ( isCOM ) ; <nl> + } <nl> + <nl> + static boolean getCurrentThreadIsCOM ( ) { <nl> + Boolean res = currentThreadIsCOM . get ( ) ; <nl> + if ( res = = null ) { <nl> + return false ; <nl> + } else { <nl> + return currentThreadIsCOM . get ( ) ; <nl> + } <nl> + } <nl> + <nl> 	 public < T > T execute ( Callable < T > task ) throws TimeoutException , InterruptedException , ExecutionException { <nl> - 	 	 if ( this . requiresInitialisation ) { <nl> - 	 	 	 executor . execute ( firstTask ) ; <nl> - 	 	 } <nl> - 	 	 return executor . submit ( task ) . get ( this . timeoutMilliseconds , TimeUnit . MILLISECONDS ) ; <nl> + if ( getCurrentThreadIsCOM ( ) ) { <nl> + try { <nl> + return task . call ( ) ; <nl> + } catch ( Exception ex ) { <nl> + throw new ExecutionException ( ex ) ; <nl> + } <nl> + } else { <nl> + if ( this . requiresInitialisation ) { <nl> + executor . execute ( firstTask ) ; <nl> + } <nl> + return executor . submit ( task ) . get ( this . timeoutMilliseconds , TimeUnit . MILLISECONDS ) ; <nl> + } <nl> 	 } <nl> <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Factory . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Factory . java <nl> index fe5a6e8 . . ba367b1 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Factory . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Factory . java <nl> @ @ - 13 , 9 + 13 , 6 @ @ <nl> package com . sun . jna . platform . win32 . COM . util ; <nl> <nl> import java . lang . reflect . Proxy ; <nl> - import java . util . HashSet ; <nl> - import java . util . Set ; <nl> - import java . util . WeakHashMap ; <nl> import java . util . concurrent . Callable ; <nl> import java . util . concurrent . ExecutionException ; <nl> import java . util . concurrent . TimeoutException ; <nl> @ @ - 33 , 6 + 30 , 11 @ @ import com . sun . jna . platform . win32 . COM . Dispatch ; <nl> import com . sun . jna . platform . win32 . COM . IDispatch ; <nl> import com . sun . jna . platform . win32 . COM . util . annotation . ComObject ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> + import java . lang . ref . WeakReference ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Iterator ; <nl> + import java . util . LinkedList ; <nl> + import java . util . List ; <nl> <nl> public class Factory { <nl> <nl> @ @ - 52 , 7 + 54 , 6 @ @ public class Factory { <nl> <nl> 	 public Factory ( ComThread comThread ) { <nl> 	 	 this . comThread = comThread ; <nl> - 	 	 this . registeredObjects = new WeakHashMap < ProxyObject , Integer > ( ) ; <nl> 	 } <nl> 	 <nl> 	 @ Override <nl> @ @ - 232 , 47 + 233 , 43 @ @ public class Factory { <nl> 	 	 } <nl> 	 } <nl> <nl> - 	 / / factory needs to keep a register of all handles to COM objects so that it can clean them up properly <nl> - 	 / / ( if java had an out of scope clean up destructor like C + + , this wouldn ' t be needed ) <nl> - 	 WeakHashMap < ProxyObject , Integer > registeredObjects ; <nl> + 	 / / Proxy object release their COM interface reference latest in the <nl> + / / finalize method , which is run when garbadge collection removes the <nl> + / / object . <nl> + / / When the factory is finished , the referenced objects loose their <nl> + / / environment and can ' t be used anymore . registeredObjects is used <nl> + / / to dispose interfaces even if garbadge collection has not yet collected <nl> + / / the proxy objects . <nl> + 	 private final List < WeakReference < ProxyObject > > registeredObjects = new LinkedList < WeakReference < ProxyObject > > ( ) ; <nl> 	 public void register ( ProxyObject proxyObject ) { <nl> - 	 	 synchronized ( this . registeredObjects ) { <nl> - 	 	 	 / / ProxyObject identity resolves to the underlying native pointer value <nl> - 	 	 	 / / different java ProxyObjects will resolve to the same pointer <nl> - 	 	 	 / / thus we need to count the number of references . <nl> - 	 	 	 if ( this . registeredObjects . containsKey ( proxyObject ) ) { <nl> - 	 	 	 	 int r = this . registeredObjects . get ( proxyObject ) ; <nl> - 	 	 	 	 this . registeredObjects . put ( proxyObject , r + 1 ) ; <nl> - 	 	 	 } else { <nl> - 	 	 	 	 this . registeredObjects . put ( proxyObject , 1 ) ; <nl> - 	 	 	 } <nl> - 	 	 } <nl> + synchronized ( this . registeredObjects ) { <nl> + this . registeredObjects . add ( new WeakReference < ProxyObject > ( proxyObject ) ) ; <nl> + } <nl> 	 } <nl> 	 <nl> - 	 public void unregister ( ProxyObject proxyObject , int d ) { <nl> - 	 	 synchronized ( this . registeredObjects ) { <nl> - 	 	 	 if ( this . registeredObjects . containsKey ( proxyObject ) ) { <nl> - 	 	 	 	 int r = this . registeredObjects . get ( proxyObject ) ; <nl> - 	 	 	 	 if ( r > 1 ) { <nl> - 	 	 	 	 	 this . registeredObjects . put ( proxyObject , r - d ) ; <nl> - 	 	 	 	 } else { <nl> - 	 	 	 	 	 this . registeredObjects . remove ( proxyObject ) ; <nl> - 	 	 	 	 } <nl> - 	 	 	 } else { <nl> - 	 	 	 	 throw new RuntimeException ( " Tried to dispose a ProxyObject that is not registered " ) ; <nl> - 	 	 	 } <nl> - 	 	 	 <nl> - 	 	 } <nl> - 	 } <nl> + 	 public void unregister ( ProxyObject proxyObject ) { <nl> + synchronized ( this . registeredObjects ) { <nl> + Iterator < WeakReference < ProxyObject > > iterator = this . registeredObjects . iterator ( ) ; <nl> + while ( iterator . hasNext ( ) ) { <nl> + WeakReference < ProxyObject > weakRef = iterator . next ( ) ; <nl> + ProxyObject po = weakRef . get ( ) ; <nl> + if ( po = = null | | po = = proxyObject ) { <nl> + iterator . remove ( ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> 	 <nl> 	 public void disposeAll ( ) { <nl> - 	 	 synchronized ( this . registeredObjects ) { <nl> - 	 	 	 Set < ProxyObject > s = new HashSet < ProxyObject > ( this . registeredObjects . keySet ( ) ) ; <nl> - 	 	 	 for ( ProxyObject proxyObject : s ) { <nl> - 	 	 	 	 int r = this . registeredObjects . get ( proxyObject ) ; <nl> - 	 	 	 	 proxyObject . dispose ( r ) ; <nl> - 	 	 	 } <nl> - 	 	 	 this . registeredObjects . clear ( ) ; <nl> - 	 	 } <nl> + synchronized ( this . registeredObjects ) { <nl> + List < WeakReference < ProxyObject > > s = new ArrayList < WeakReference < ProxyObject > > ( this . registeredObjects ) ; <nl> + for ( WeakReference < ProxyObject > weakRef : s ) { <nl> + ProxyObject po = weakRef . get ( ) ; <nl> + if ( po ! = null ) { <nl> + po . dispose ( ) ; <nl> + } <nl> + } <nl> + this . registeredObjects . clear ( ) ; <nl> + } <nl> 	 } <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> index a9223fb . . cc47235 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> @ @ - 60 , 7 + 60 , 7 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> * / <nl> public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win32 . COM . util . IDispatch , <nl> 	 	 IRawDispatchHandle { <nl> - <nl> + <nl> 	 public ProxyObject ( Class < ? > theInterface , IDispatch rawDispatch , Factory factory ) { <nl> 	 	 this . unknownId = - 1 ; <nl> 	 	 this . rawDispatch = rawDispatch ; <nl> @ @ - 95 , 6 + 95 , 7 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 	 factory . register ( this ) ; <nl> 	 } <nl> <nl> + <nl> 	 / / cached value of the IUnknown interface pointer <nl> 	 / / Rules of COM state that querying for the IUnknown interface must return <nl> 	 / / an identical pointer value <nl> @ @ - 137 , 20 + 138 , 14 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> <nl> 	 @ Override <nl> 	 protected void finalize ( ) throws Throwable { <nl> - 	 	 this . dispose ( 1 ) ; <nl> + 	 	 this . dispose ( ) ; <nl> 	 } <nl> <nl> - 	 public void dispose ( int r ) { <nl> - 	 	 if ( ( ( Dispatch ) this . rawDispatch ) . getPointer ( ) . equals ( Pointer . NULL ) ) { <nl> - 	 	 	 / / do nothing , already disposed <nl> - 	 	 } else { <nl> - 	 	 	 for ( int i = 0 ; i < r ; + + i ) { <nl> - 	 	 	 	 / / catch result to help with debug <nl> - 	 	 	 	 int n = this . rawDispatch . Release ( ) ; <nl> - 	 	 	 	 int n2 = n ; <nl> - 	 	 	 } <nl> - 	 	 	 this . factory . unregister ( this , r ) ; <nl> - 	 	 	 ( ( Dispatch ) this . rawDispatch ) . setPointer ( Pointer . NULL ) ; <nl> + 	 public synchronized void dispose ( ) { <nl> + 	 	 if ( ! ( ( Dispatch ) this . rawDispatch ) . getPointer ( ) . equals ( Pointer . NULL ) ) { <nl> + 	 	 	 this . rawDispatch . Release ( ) ; <nl> + ( ( Dispatch ) this . rawDispatch ) . setPointer ( Pointer . NULL ) ; <nl> + factory . unregister ( this ) ; <nl> 	 	 } <nl> 	 } <nl> <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks _ Test . java <nl> index a49f4b7 . . ea7adc1 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / util / ComEventCallbacks _ Test . java <nl> @ @ - 121 , 11 + 121 , 6 @ @ public class ComEventCallbacks _ Test { <nl> VARIANT . ByReference PostData , <nl> VARIANT . ByReference Headers , <nl> OaIdl . VARIANT _ BOOLByReference Cancel ) { <nl> - / / This is todo : Event is called not on the event creating <nl> - / / thread - there are multiple side effects COM demarshalling <nl> - / / has to happend outside this method and return values <nl> - / / from event don ' t work <nl> - / / <nl> / / The utilizing unittest is adviseBeforeNavigate <nl> if ( blockNavigate ) { <nl> Cancel . setValue ( Variant . VARIANT _ TRUE ) ; <nl> @ @ - 212 , 7 + 207 , 6 @ @ public class ComEventCallbacks _ Test { <nl> 	 } <nl> <nl> 	 @ Test <nl> - @ Ignore ( " Known bug - events are currently dispatched out of the event handler , so this fails because return value not reach IE " ) <nl> 	 public void adviseBeforeNavigate ( ) throws InterruptedException { <nl> 	 	 ComInternetExplorer ieApp = factory . createObject ( ComInternetExplorer . class ) ; <nl> 	 	 ComIWebBrowser2 iWebBrowser2 = ieApp . queryInterface ( ComIWebBrowser2 . class ) ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java b / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java <nl> index 1ac91bb . . f6794ae 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java <nl> @ @ - 17 , 9 + 17 , 9 @ @ import java . util . Arrays ; <nl> import java . util . List ; <nl> <nl> import com . sun . jna . Pointer ; <nl> + import com . sun . jna . PointerType ; <nl> import com . sun . jna . Structure ; <nl> <nl> - / / TODO : Auto - generated Javadoc <nl> / * * <nl> * Ported from Guid . h . Microsoft Windows SDK 6 . 0A . <nl> * <nl> @ @ - 465 , 17 + 465 , 30 @ @ public interface Guid { <nl> } <nl> <nl> / * * <nl> - * The Class REFIID . <nl> - * <nl> - * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> + * REFIID is a pointer to an IID . <nl> + * <nl> + * This type needs to be seperate from IID , as the REFIID can be passed in <nl> + * from external code , that does not allow writes to memory . <nl> + * <nl> + * With the normal JNA behaviour a structure , that crosses the native < - > Java <nl> + * border will be autowritten , which causes a fault when written . <nl> + * Observed was this behaviour in COM - Callbacks , which get the REFIID passed <nl> + * into Invoke - method . <nl> + * <nl> + * So a IID can ' t be used directly , although the typedef of REFIID ( from MSDN ) : <nl> + * <nl> + * typedef IID * REFIID ; <nl> + * <nl> + * and the jna behaviour is described as : <nl> + * <nl> + * " When a function requires a pointer to a struct , a Java Structure should be used . " <nl> * / <nl> - public class REFIID extends IID { <nl> + public class REFIID extends PointerType { <nl> <nl> / * * <nl> * Instantiates a new refiid . <nl> * / <nl> public REFIID ( ) { <nl> - super ( ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 488 , 21 + 501 , 20 @ @ public interface Guid { <nl> super ( memory ) ; <nl> } <nl> <nl> - / * * <nl> - * Instantiates a new refiid . <nl> - * <nl> - * @ param data <nl> - * the data <nl> - * / <nl> - public REFIID ( byte [ ] data ) { <nl> - super ( data ) ; <nl> + public REFIID ( IID guid ) { <nl> + super ( guid . getPointer ( ) ) ; <nl> + } <nl> + <nl> + public void setValue ( IID value ) { <nl> + setPointer ( value . getPointer ( ) ) ; <nl> } <nl> <nl> - public REFIID ( GUID guid ) { <nl> - super ( guid ) ; <nl> + public IID getValue ( ) { <nl> + return new IID ( getPointer ( ) ) ; <nl> } <nl> + <nl> } <nl> - <nl> + <nl> / * * <nl> * The Class IID . <nl> * <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ComEventCallbacks _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ComEventCallbacks _ Test . java <nl> index f7b8a0c . . 4b730f4 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ComEventCallbacks _ Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ComEventCallbacks _ Test . java <nl> @ @ - 1 , 202 + 1 , 363 @ @ <nl> - / * Copyright ( c ) 2014 Dr David H . Akehurst ( itemis ) , All Rights Reserved <nl> - * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> - * / <nl> - package com . sun . jna . platform . win32 . COM ; <nl> - <nl> - import org . junit . After ; <nl> - import org . junit . Assert ; <nl> - import org . junit . Before ; <nl> - import org . junit . Test ; <nl> - <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . WString ; <nl> - import com . sun . jna . platform . win32 . Guid ; <nl> - import com . sun . jna . platform . win32 . Guid . CLSID ; <nl> - import com . sun . jna . platform . win32 . Guid . IID ; <nl> - import com . sun . jna . platform . win32 . Guid . REFIID ; <nl> - import com . sun . jna . platform . win32 . Kernel32 ; <nl> - import com . sun . jna . platform . win32 . OaIdl . DISPID ; <nl> - import com . sun . jna . platform . win32 . OaIdl . DISPIDByReference ; <nl> - import com . sun . jna . platform . win32 . OaIdl . EXCEPINFO ; <nl> - import com . sun . jna . platform . win32 . Ole32 ; <nl> - import com . sun . jna . platform . win32 . OleAuto . DISPPARAMS ; <nl> - import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> - import com . sun . jna . platform . win32 . WTypes ; <nl> - import com . sun . jna . platform . win32 . WinDef ; <nl> - import com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> - import com . sun . jna . platform . win32 . WinDef . LCID ; <nl> - import com . sun . jna . platform . win32 . WinDef . UINT ; <nl> - import com . sun . jna . platform . win32 . WinDef . UINTByReference ; <nl> - import com . sun . jna . platform . win32 . WinDef . WORD ; <nl> - import com . sun . jna . platform . win32 . WinError ; <nl> - import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> - import com . sun . jna . ptr . IntByReference ; <nl> - import com . sun . jna . ptr . PointerByReference ; <nl> - <nl> - public class ComEventCallbacks _ Test { <nl> - <nl> - 	 final String WORD _ APPLICATION _ INTERFACE = " { 00020970 - 0000 - 0000 - C000 - 000000000046 } " ; <nl> - 	 final String APPLICATION _ EVENTS _ 4 = " { 00020A01 - 0000 - 0000 - C000 - 000000000046 } " ; <nl> - 	 <nl> - 	 @ Before <nl> - 	 public void before ( ) { <nl> - 	 	 HRESULT hr = Ole32 . INSTANCE . CoInitializeEx ( null , Ole32 . COINIT _ MULTITHREADED ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - 	 } <nl> - <nl> - 	 @ After <nl> - 	 public void after ( ) { <nl> - 	 	 Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> - 	 } <nl> - <nl> - 	 class Application _ Events4 implements IDispatchCallback { <nl> - 	 	 public DispatchListener listener = new DispatchListener ( this ) ; <nl> - <nl> - 	 	 @ Override <nl> - 	 	 public Pointer getPointer ( ) { <nl> - 	 	 	 return this . listener . getPointer ( ) ; <nl> - 	 	 } <nl> - <nl> - 	 	 / / - - - - - - - - - - - - - - - - - - - - - - - - IDispatch - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> - 	 	 @ Override <nl> - 	 	 public HRESULT GetTypeInfoCount ( UINTByReference pctinfo ) { <nl> - 	 	 	 return new HRESULT ( WinError . E _ NOTIMPL ) ; <nl> - 	 	 } <nl> - <nl> - 	 	 @ Override <nl> - 	 	 public HRESULT GetTypeInfo ( UINT iTInfo , LCID lcid , PointerByReference ppTInfo ) { <nl> - 	 	 	 return new HRESULT ( WinError . E _ NOTIMPL ) ; <nl> - 	 	 } <nl> - <nl> - 	 	 @ Override <nl> - 	 	 public HRESULT GetIDsOfNames ( REFIID riid , WString [ ] rgszNames , int cNames , LCID lcid , DISPIDByReference rgDispId ) { <nl> - 	 	 	 return new HRESULT ( WinError . E _ NOTIMPL ) ; <nl> - 	 	 } <nl> - <nl> - 	 	 public boolean Invoke _ called = false ; <nl> - 	 	 @ Override <nl> - 	 	 public HRESULT Invoke ( DISPID dispIdMember , REFIID riid , LCID lcid , <nl> - 	 WORD wFlags , DISPPARAMS . ByReference pDispParams , <nl> - 	 VARIANT . ByReference pVarResult , EXCEPINFO . ByReference pExcepInfo , <nl> - 	 IntByReference puArgErr ) { <nl> - 	 	 	 this . Invoke _ called = true ; <nl> - 	 	 	 <nl> - 	 	 	 return new HRESULT ( WinError . E _ NOTIMPL ) ; <nl> - 	 	 } <nl> - 	 	 <nl> - 	 	 <nl> - 	 	 / / - - - - - - - - - - - - - - - - - - - - - - - - IUnknown - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> - 	 	 public boolean QueryInterface _ called = false ; <nl> - 	 	 @ Override <nl> - 	 	 public HRESULT QueryInterface ( REFIID refid , PointerByReference ppvObject ) { <nl> - 	 	 	 this . QueryInterface _ called = true ; <nl> - 	 	 	 if ( null = = ppvObject ) { <nl> - 	 	 	 	 return new HRESULT ( WinError . E _ POINTER ) ; <nl> - 	 	 	 } <nl> - <nl> - 	 	 	 String s = refid . toGuidString ( ) ; <nl> - 	 	 	 IID appEvnts4 = new IID ( APPLICATION _ EVENTS _ 4 ) ; <nl> - 	 	 	 REFIID riid = new REFIID ( appEvnts4 . getPointer ( ) ) ; <nl> - <nl> - 	 	 	 if ( refid . equals ( riid ) ) { <nl> - 	 	 	 	 ppvObject . setValue ( this . getPointer ( ) ) ; <nl> - 	 	 	 	 return WinError . S _ OK ; <nl> - 	 	 	 } <nl> - 	 	 	 <nl> - 	 	 	 if ( new Guid . IID ( refid . getPointer ( ) ) . equals ( Unknown . IID _ IUNKNOWN ) ) { <nl> - 	 	 	 	 ppvObject . setValue ( this . getPointer ( ) ) ; <nl> - 	 	 	 	 return WinError . S _ OK ; <nl> - 	 	 	 } <nl> - 	 	 	 <nl> - 	 	 	 if ( new Guid . IID ( refid . getPointer ( ) ) . equals ( Dispatch . IID _ IDISPATCH ) ) { <nl> - 	 	 	 	 ppvObject . setValue ( this . getPointer ( ) ) ; <nl> - 	 	 	 	 return WinError . S _ OK ; <nl> - 	 	 	 } <nl> - 	 	 	 <nl> - 	 	 	 return new HRESULT ( WinError . E _ NOINTERFACE ) ; <nl> - 	 	 } <nl> - <nl> - 	 	 public int AddRef ( ) { <nl> - 	 	 	 return 0 ; <nl> - 	 	 } <nl> - <nl> - 	 	 public int Release ( ) { <nl> - 	 	 	 return 0 ; <nl> - 	 	 } <nl> - <nl> - 	 } <nl> - <nl> - 	 @ Test <nl> - 	 public void cause _ Quit _ Event ( ) { <nl> - 	 	 / / Create word object <nl> - 	 	 CLSID clsid = new CLSID ( " { 000209FF - 0000 - 0000 - C000 - 000000000046 } " ) ; <nl> - 	 	 PointerByReference ppWordApp = new PointerByReference ( ) ; <nl> - 	 	 HRESULT hr = Ole32 . INSTANCE <nl> - 	 	 	 	 . CoCreateInstance ( clsid , null , WTypes . CLSCTX _ SERVER , IDispatch . IID _ IDISPATCH , ppWordApp ) ; <nl> - / / 	 	 HRESULT hr = OleAuto . INSTANCE . GetActiveObject ( clsid , null , ppWordApp ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - 	 	 <nl> - 	 	 / / query for ConnectionPointContainer <nl> - 	 	 Unknown unk = new Unknown ( ppWordApp . getValue ( ) ) ; <nl> - 	 	 PointerByReference ppCpc = new PointerByReference ( ) ; <nl> - 	 	 IID cpcIID = new IID ( " { B196B284 - BAB4 - 101A - B69C - 00AA00341D07 } " ) ; <nl> - 	 	 hr = unk . QueryInterface ( new REFIID ( cpcIID ) , ppCpc ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - 	 	 ConnectionPointContainer cpc = new ConnectionPointContainer ( ppCpc . getValue ( ) ) ; <nl> - <nl> - 	 	 / / find connection point for Application _ Events4 <nl> - 	 	 IID appEvnts4 = new IID ( APPLICATION _ EVENTS _ 4 ) ; <nl> - 	 	 REFIID riid = new REFIID ( appEvnts4 . getPointer ( ) ) ; <nl> - 	 	 PointerByReference ppCp = new PointerByReference ( ) ; <nl> - 	 	 hr = cpc . FindConnectionPoint ( riid , ppCp ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - 	 	 final ConnectionPoint cp = new ConnectionPoint ( ppCp . getValue ( ) ) ; <nl> - 	 	 IID cp _ iid = new IID ( ) ; <nl> - 	 	 hr = cp . GetConnectionInterface ( cp _ iid ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - <nl> - 	 	 final Application _ Events4 listener = new Application _ Events4 ( ) ; <nl> - 	 	 final DWORDByReference pdwCookie = new DWORDByReference ( ) ; <nl> - 	 	 HRESULT hr1 = cp . Advise ( listener , pdwCookie ) ; <nl> - 	 	 COMUtils . checkRC ( hr1 ) ; <nl> - <nl> - / / 	 	 Assert . assertTrue ( listener . QueryInterface _ called ) ; <nl> - / / 	 	 <nl> - 	 	 / / Call Quit <nl> - 	 	 Dispatch d = new Dispatch ( ppWordApp . getValue ( ) ) ; <nl> - 	 	 DISPID dispIdMember = new DISPID ( 1105 ) ; / / Quit <nl> - 	 	 REFIID niid = new REFIID ( Guid . IID _ NULL ) ; <nl> - 	 	 LCID lcid = Kernel32 . INSTANCE . GetSystemDefaultLCID ( ) ; <nl> - 	 	 WinDef . WORD wFlags = new WinDef . WORD ( 1 ) ; <nl> - 	 	 DISPPARAMS . ByReference pDispParams = new DISPPARAMS . ByReference ( ) ; <nl> - 	 	 VARIANT . ByReference pVarResult = new VARIANT . ByReference ( ) ; <nl> - 	 	 IntByReference puArgErr = new IntByReference ( ) ; <nl> - 	 	 EXCEPINFO . ByReference pExcepInfo = new EXCEPINFO . ByReference ( ) ; <nl> - 	 	 hr = d . Invoke ( dispIdMember , niid , lcid , wFlags , pDispParams , pVarResult , pExcepInfo , puArgErr ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - 	 	 <nl> - 	 	 / / Wait for event to happen <nl> - 	 	 try { <nl> - 	 	 	 Thread . sleep ( 200 ) ; <nl> - / / 	 	 	 WinUser . MSG msg = new WinUser . MSG ( ) ; <nl> - / / 	 	 	 while ( ( ( User32 . INSTANCE . GetMessage ( msg , null , 0 , 0 ) ) ! = 0 ) ) { <nl> - / / 	 	 	 User32 . INSTANCE . TranslateMessage ( msg ) ; <nl> - / / 	 	 	 User32 . INSTANCE . DispatchMessage ( msg ) ; <nl> - / / 	 	 	 } <nl> - 	 	 } catch ( Exception e ) { <nl> - 	 	 	 e . printStackTrace ( ) ; <nl> - 	 	 } <nl> - 	 	 <nl> - 	 	 Assert . assertTrue ( listener . Invoke _ called ) ; <nl> - 	 } <nl> - <nl> - } <nl> + / * Copyright ( c ) 2014 Dr David H . Akehurst ( itemis ) , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 . COM ; <nl> + <nl> + import org . junit . After ; <nl> + import org . junit . Before ; <nl> + import org . junit . Test ; <nl> + <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . WString ; <nl> + import com . sun . jna . platform . win32 . Guid ; <nl> + import com . sun . jna . platform . win32 . Guid . CLSID ; <nl> + import com . sun . jna . platform . win32 . Guid . IID ; <nl> + import com . sun . jna . platform . win32 . Guid . REFIID ; <nl> + import com . sun . jna . platform . win32 . OaIdl ; <nl> + import com . sun . jna . platform . win32 . OaIdl . DISPID ; <nl> + import com . sun . jna . platform . win32 . OaIdl . DISPIDByReference ; <nl> + import com . sun . jna . platform . win32 . OaIdl . EXCEPINFO ; <nl> + import com . sun . jna . platform . win32 . OaIdl . VARIANT _ BOOLByReference ; <nl> + import com . sun . jna . platform . win32 . Ole32 ; <nl> + import com . sun . jna . platform . win32 . OleAuto ; <nl> + import com . sun . jna . platform . win32 . OleAuto . DISPPARAMS ; <nl> + import com . sun . jna . platform . win32 . Variant ; <nl> + import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> + import com . sun . jna . platform . win32 . WTypes ; <nl> + import com . sun . jna . platform . win32 . WinDef ; <nl> + import com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> + import com . sun . jna . platform . win32 . WinDef . LCID ; <nl> + import com . sun . jna . platform . win32 . WinDef . UINT ; <nl> + import com . sun . jna . platform . win32 . WinDef . UINTByReference ; <nl> + import com . sun . jna . platform . win32 . WinDef . WORD ; <nl> + import com . sun . jna . platform . win32 . WinError ; <nl> + import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> + import com . sun . jna . ptr . IntByReference ; <nl> + import com . sun . jna . ptr . PointerByReference ; <nl> + import org . junit . Assert ; <nl> + <nl> + public class ComEventCallbacks _ Test { <nl> + <nl> + private final CLSID CLSID _ InternetExplorer = new CLSID ( " { 0002DF01 - 0000 - 0000 - C000 - 000000000046 } " ) ; <nl> + private final IID IID _ IConnectionPointContainer = new IID ( " { B196B284 - BAB4 - 101A - B69C - 00AA00341D07 } " ) ; <nl> + private final IID IID _ DWebBrowserEvents2 = new IID ( " { 34A715A0 - 6587 - 11D0 - 924A - 0020AFC7AC4D } " ) ; <nl> + private final REFIID niid = new REFIID ( Guid . IID _ NULL ) ; <nl> + private final LCID lcid = new LCID ( 0x0409 ) ; / / LCID for english locale <nl> + private final WinDef . WORD methodFlags = new WinDef . WORD ( OleAuto . DISPATCH _ METHOD ) ; <nl> + private final WinDef . WORD propertyPutFlags = new WinDef . WORD ( OleAuto . DISPATCH _ PROPERTYPUT ) ; <nl> + <nl> + private DISPIDByReference dispIdVisible = new DISPIDByReference ( ) ; <nl> + private DISPIDByReference dispIdQuit = new DISPIDByReference ( ) ; <nl> + private DISPIDByReference dispIdNavigate = new DISPIDByReference ( ) ; <nl> + <nl> + private PointerByReference ieApp ; <nl> + private Dispatch ieDispatch ; <nl> + <nl> + <nl> + <nl> + @ Before <nl> + public void before ( ) { <nl> + HRESULT hr = Ole32 . INSTANCE . CoInitializeEx ( null , Ole32 . COINIT _ MULTITHREADED ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + <nl> + / / Create InternetExplorer object <nl> + ieApp = new PointerByReference ( ) ; <nl> + hr = Ole32 . INSTANCE <nl> + . CoCreateInstance ( CLSID _ InternetExplorer , null , WTypes . CLSCTX _ SERVER , IDispatch . IID _ IDISPATCH , ieApp ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + <nl> + ieDispatch = new Dispatch ( ieApp . getValue ( ) ) ; <nl> + ieDispatch . AddRef ( ) ; <nl> + hr = ieDispatch . GetIDsOfNames ( new REFIID ( Guid . IID _ NULL ) , new WString [ ] { new WString ( " Quit " ) } , 1 , lcid , dispIdQuit ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + hr = ieDispatch . GetIDsOfNames ( new REFIID ( Guid . IID _ NULL ) , new WString [ ] { new WString ( " Visible " ) } , 1 , lcid , dispIdVisible ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + hr = ieDispatch . GetIDsOfNames ( new REFIID ( Guid . IID _ NULL ) , new WString [ ] { new WString ( " Navigate " ) } , 1 , lcid , dispIdNavigate ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + } <nl> + <nl> + @ After <nl> + public void after ( ) { <nl> + / / Shutdown Internet Explorer <nl> + DISPPARAMS . ByReference pDispParams = new DISPPARAMS . ByReference ( ) ; <nl> + pDispParams . cArgs = new UINT ( 0 ) ; <nl> + pDispParams . cNamedArgs = new UINT ( 0 ) ; <nl> + pDispParams . rgvarg = null ; <nl> + VARIANT . ByReference pVarResult = new VARIANT . ByReference ( ) ; <nl> + IntByReference puArgErr = new IntByReference ( ) ; <nl> + EXCEPINFO . ByReference pExcepInfo = new EXCEPINFO . ByReference ( ) ; <nl> + <nl> + HRESULT hr = ieDispatch . Invoke ( dispIdQuit . getValue ( ) , niid , lcid , methodFlags , pDispParams , pVarResult , pExcepInfo , puArgErr ) ; <nl> + COMUtils . checkRC ( hr , pExcepInfo , puArgErr ) ; <nl> + <nl> + ieDispatch . Release ( ) ; <nl> + Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void queryInterface _ ConnectionPointContainer ( ) { <nl> + Unknown unk = new Unknown ( ieApp . getValue ( ) ) ; <nl> + PointerByReference ppCpc = new PointerByReference ( ) ; <nl> + HRESULT hr = unk . QueryInterface ( new REFIID ( IID _ IConnectionPointContainer ) , ppCpc ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + / / On success the returned pointer must not be null <nl> + Assert . assertNotNull ( ppCpc . getPointer ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void FindConnectionPoint ( ) { <nl> + / / query for ConnectionPointContainer <nl> + Unknown unk = new Unknown ( ieApp . getValue ( ) ) ; <nl> + PointerByReference ppCpc = new PointerByReference ( ) ; <nl> + HRESULT hr = unk . QueryInterface ( new REFIID ( IID _ IConnectionPointContainer ) , ppCpc ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + ConnectionPointContainer cpc = new ConnectionPointContainer ( ppCpc . getValue ( ) ) ; <nl> + <nl> + / / find connection point for DWebBrowserEvents2 <nl> + REFIID riid = new REFIID ( IID _ DWebBrowserEvents2 ) ; <nl> + PointerByReference ppCp = new PointerByReference ( ) ; <nl> + hr = cpc . FindConnectionPoint ( riid , ppCp ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + <nl> + / / On success the returned pointer must not be null <nl> + Assert . assertNotNull ( ppCpc . getPointer ( ) ) ; <nl> + } <nl> + <nl> + @ Test <nl> + public void GetConnectionInterface ( ) { <nl> + / / query for ConnectionPointContainer <nl> + Unknown unk = new Unknown ( this . ieApp . getValue ( ) ) ; <nl> + PointerByReference ppCpc = new PointerByReference ( ) ; <nl> + HRESULT hr = unk . QueryInterface ( new REFIID ( IID _ IConnectionPointContainer ) , ppCpc ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + ConnectionPointContainer cpc = new ConnectionPointContainer ( ppCpc . getValue ( ) ) ; <nl> + <nl> + / / find connection point for DWebBrowserEvents2 <nl> + REFIID riid = new REFIID ( IID _ DWebBrowserEvents2 ) ; <nl> + PointerByReference ppCp = new PointerByReference ( ) ; <nl> + hr = cpc . FindConnectionPoint ( riid , ppCp ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + ConnectionPoint cp = new ConnectionPoint ( ppCp . getValue ( ) ) ; <nl> + <nl> + IID cp _ iid = new IID ( ) ; <nl> + hr = cp . GetConnectionInterface ( cp _ iid ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + <nl> + Assert . assertEquals ( IID _ DWebBrowserEvents2 , cp _ iid ) ; <nl> + } <nl> + <nl> + class DWebBrowserEvents2 _ Listener implements IDispatchCallback { <nl> + <nl> + private final int DISPID _ NavigateComplete2 = 0x000000fc ; <nl> + private final int DISPID _ BeforeNavigate2 = 0x000000fa ; <nl> + <nl> + public DispatchListener listener = new DispatchListener ( this ) ; <nl> + <nl> + @ Override <nl> + public Pointer getPointer ( ) { <nl> + return this . listener . getPointer ( ) ; <nl> + } <nl> + <nl> + / / - - - - - - - - - - - - - - - - - - - - - - - - IDispatch - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + @ Override <nl> + public HRESULT GetTypeInfoCount ( UINTByReference pctinfo ) { <nl> + return new HRESULT ( WinError . E _ NOTIMPL ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public HRESULT GetTypeInfo ( UINT iTInfo , LCID lcid , PointerByReference ppTInfo ) { <nl> + return new HRESULT ( WinError . E _ NOTIMPL ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public HRESULT GetIDsOfNames ( REFIID riid , WString [ ] rgszNames , int cNames , LCID lcid , DISPIDByReference rgDispId ) { <nl> + return new HRESULT ( WinError . E _ NOTIMPL ) ; <nl> + } <nl> + <nl> + public volatile boolean blockNavigation = false ; <nl> + public volatile boolean navigateComplete2Called = false ; <nl> + public volatile String navigateComplete2String = null ; <nl> + <nl> + @ Override <nl> + public HRESULT Invoke ( DISPID dispIdMember , REFIID riid , LCID lcid , <nl> + WORD wFlags , DISPPARAMS . ByReference pDispParams , <nl> + VARIANT . ByReference pVarResult , EXCEPINFO . ByReference pExcepInfo , <nl> + IntByReference puArgErr ) { <nl> + <nl> + / / @ toDo : Move setArraySize into invoke method <nl> + if ( pDispParams . rgvarg ! = null & & pDispParams . cArgs . intValue ( ) > 0 ) { <nl> + pDispParams . rgvarg . setArraySize ( pDispParams . cArgs . intValue ( ) ) ; <nl> + } <nl> + <nl> + try { <nl> + switch ( dispIdMember . intValue ( ) ) { <nl> + case DISPID _ NavigateComplete2 : <nl> + navigateComplete2Called = true ; <nl> + / / URL ist passed as VARIANT $ ByReference <nl> + VARIANT urlByRef = pDispParams . rgvarg . variantArg [ 0 ] ; <nl> + navigateComplete2String = ( ( VARIANT ) urlByRef . getValue ( ) ) . stringValue ( ) ; <nl> + break ; <nl> + case DISPID _ BeforeNavigate2 : <nl> + VARIANT Cancel = pDispParams . rgvarg . variantArg [ 0 ] ; <nl> + VARIANT Headers = pDispParams . rgvarg . variantArg [ 1 ] ; <nl> + VARIANT PostData = pDispParams . rgvarg . variantArg [ 2 ] ; <nl> + VARIANT TargetFrameName = pDispParams . rgvarg . variantArg [ 3 ] ; <nl> + VARIANT Flags = pDispParams . rgvarg . variantArg [ 4 ] ; <nl> + VARIANT URL = pDispParams . rgvarg . variantArg [ 5 ] ; <nl> + VARIANT pDisp = pDispParams . rgvarg . variantArg [ 6 ] ; <nl> + VARIANT _ BOOLByReference cancelValue = ( ( VARIANT _ BOOLByReference ) Cancel . getValue ( ) ) ; <nl> + if ( blockNavigation ) { <nl> + cancelValue . setValue ( Variant . VARIANT _ TRUE ) ; <nl> + } <nl> + break ; <nl> + } <nl> + } catch ( Throwable ex ) { <nl> + ex . printStackTrace ( System . out ) ; <nl> + System . out . println ( ex ) ; <nl> + } <nl> + <nl> + return new HRESULT ( WinError . E _ NOTIMPL ) ; <nl> + } <nl> + <nl> + / / - - - - - - - - - - - - - - - - - - - - - - - - IUnknown - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + public volatile boolean QueryInterface _ called = false ; <nl> + <nl> + @ Override <nl> + public HRESULT QueryInterface ( REFIID refiid , PointerByReference ppvObject ) { <nl> + this . QueryInterface _ called = true ; <nl> + if ( null = = ppvObject ) { <nl> + return new HRESULT ( WinError . E _ POINTER ) ; <nl> + } <nl> + <nl> + if ( refiid . getValue ( ) . equals ( IID _ DWebBrowserEvents2 ) ) { <nl> + ppvObject . setValue ( this . getPointer ( ) ) ; <nl> + return WinError . S _ OK ; <nl> + } <nl> + <nl> + if ( refiid . getValue ( ) . equals ( Unknown . IID _ IUNKNOWN ) ) { <nl> + ppvObject . setValue ( this . getPointer ( ) ) ; <nl> + return WinError . S _ OK ; <nl> + } <nl> + <nl> + if ( refiid . getValue ( ) . equals ( Dispatch . IID _ IDISPATCH ) ) { <nl> + ppvObject . setValue ( this . getPointer ( ) ) ; <nl> + return WinError . S _ OK ; <nl> + } <nl> + <nl> + ppvObject . setValue ( Pointer . NULL ) ; <nl> + return new HRESULT ( WinError . E _ NOINTERFACE ) ; <nl> + } <nl> + <nl> + public int AddRef ( ) { <nl> + return 0 ; <nl> + } <nl> + <nl> + public int Release ( ) { <nl> + return 0 ; <nl> + } <nl> + <nl> + } <nl> + <nl> + @ Test <nl> + public void testComEventCallback ( ) throws InterruptedException { <nl> + VARIANT . ByReference pVarResult = new VARIANT . ByReference ( ) ; <nl> + IntByReference puArgErr = new IntByReference ( ) ; <nl> + EXCEPINFO . ByReference pExcepInfo = new EXCEPINFO . ByReference ( ) ; <nl> + HRESULT hr ; <nl> + <nl> + DISPPARAMS . ByReference pDispParams ; <nl> + <nl> + pDispParams = new DISPPARAMS . ByReference ( ) ; <nl> + pDispParams . cArgs = new UINT ( 1 ) ; <nl> + pDispParams . cNamedArgs = new UINT ( 1 ) ; <nl> + pDispParams . rgvarg = new Variant . VariantArg . ByReference ( new VARIANT [ 1 ] ) ; <nl> + pDispParams . rgvarg . variantArg [ 0 ] = new VARIANT ( true ) ; <nl> + pDispParams . rgdispidNamedArgs = new DISPIDByReference ( new DISPID ( OaIdl . DISPID _ PROPERTYPUT . intValue ( ) ) ) ; <nl> + / / Visible - Prioperty <nl> + hr = ieDispatch . Invoke ( dispIdVisible . getValue ( ) , niid , lcid , propertyPutFlags , pDispParams , null , null , null ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + <nl> + / / query for ConnectionPointContainer <nl> + Unknown unk = new Unknown ( ieApp . getValue ( ) ) ; <nl> + PointerByReference ppCpc = new PointerByReference ( ) ; <nl> + hr = unk . QueryInterface ( new REFIID ( IID _ IConnectionPointContainer ) , ppCpc ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + ConnectionPointContainer cpc = new ConnectionPointContainer ( ppCpc . getValue ( ) ) ; <nl> + <nl> + / / find connection point for DWebBrowserEvents2 <nl> + REFIID riid = new REFIID ( IID _ DWebBrowserEvents2 ) ; <nl> + PointerByReference ppCp = new PointerByReference ( ) ; <nl> + hr = cpc . FindConnectionPoint ( riid , ppCp ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + final ConnectionPoint cp = new ConnectionPoint ( ppCp . getValue ( ) ) ; <nl> + IID cp _ iid = new IID ( ) ; <nl> + hr = cp . GetConnectionInterface ( cp _ iid ) ; <nl> + COMUtils . checkRC ( hr ) ; <nl> + <nl> + final DWebBrowserEvents2 _ Listener listener = new DWebBrowserEvents2 _ Listener ( ) ; <nl> + final DWORDByReference pdwCookie = new DWORDByReference ( ) ; <nl> + HRESULT hr1 = cp . Advise ( listener , pdwCookie ) ; <nl> + COMUtils . checkRC ( hr1 ) ; <nl> + <nl> + / / Advise make several callbacks into the object passed in - at this <nl> + / / point QueryInterface must have be called multiple times <nl> + Assert . assertTrue ( listener . QueryInterface _ called ) ; <nl> + <nl> + / / Call Navigate with URL https : / / github . com / java - native - access / jna <nl> + String navigateURL = " https : / / github . com / java - native - access / jna " ; <nl> + String blockedURL = " http : / / www . google . de " ; <nl> + <nl> + pDispParams = new DISPPARAMS . ByReference ( ) ; <nl> + pDispParams . cArgs = new UINT ( 1 ) ; <nl> + pDispParams . cNamedArgs = new UINT ( 0 ) ; <nl> + pDispParams . rgvarg = new Variant . VariantArg . ByReference ( new VARIANT [ 1 ] ) ; <nl> + pDispParams . rgvarg . variantArg [ 0 ] = new VARIANT ( navigateURL ) ; <nl> + hr = ieDispatch . Invoke ( dispIdNavigate . getValue ( ) , niid , lcid , methodFlags , pDispParams , pVarResult , pExcepInfo , puArgErr ) ; <nl> + COMUtils . checkRC ( hr , pExcepInfo , puArgErr ) ; <nl> + <nl> + for ( int i = 0 ; i < 10 ; i + + ) { <nl> + if ( listener . navigateComplete2Called ) { <nl> + break ; <nl> + } <nl> + Thread . sleep ( 1000 ) ; <nl> + } <nl> + <nl> + / / At this point the call to Navigate before should be complete <nl> + Assert . assertTrue ( listener . navigateComplete2Called ) ; <nl> + / / Navidate complete should have brought us to github <nl> + Assert . assertEquals ( navigateURL , listener . navigateComplete2String ) ; <nl> + <nl> + listener . navigateComplete2Called = false ; <nl> + listener . navigateComplete2String = null ; <nl> + listener . blockNavigation = true ; <nl> + <nl> + pDispParams = new DISPPARAMS . ByReference ( ) ; <nl> + pDispParams . cArgs = new UINT ( 1 ) ; <nl> + pDispParams . cNamedArgs = new UINT ( 0 ) ; <nl> + pDispParams . rgvarg = new Variant . VariantArg . ByReference ( new VARIANT [ 1 ] ) ; <nl> + pDispParams . rgvarg . variantArg [ 0 ] = new VARIANT ( blockedURL ) ; <nl> + hr = ieDispatch . Invoke ( dispIdNavigate . getValue ( ) , niid , lcid , methodFlags , pDispParams , pVarResult , pExcepInfo , puArgErr ) ; <nl> + COMUtils . checkRC ( hr , pExcepInfo , puArgErr ) ; <nl> + <nl> + / / wait 10 seconds to ensure navigation won ' t happen <nl> + for ( int i = 0 ; i < 10 ; i + + ) { <nl> + if ( listener . navigateComplete2Called ) { <nl> + break ; <nl> + } <nl> + Thread . sleep ( 1000 ) ; <nl> + } <nl> + <nl> + / / Naviation will be blocked - so NavigateComplete can ' t be called <nl> + Assert . assertFalse ( " NavigateComplete Handler was called although it should be blocked " , listener . navigateComplete2Called ) ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ConnectionPointContainer _ Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ConnectionPointContainer _ Test . java <nl> deleted file mode 100644 <nl> index be1f41b . . 0000000 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ConnectionPointContainer _ Test . java <nl> + + + / dev / null <nl> @ @ - 1 , 239 + 0 , 0 @ @ <nl> - / * Copyright ( c ) 2014 Dr David H . Akehurst ( itemis ) , All Rights Reserved <nl> - * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> - * / <nl> - package com . sun . jna . platform . win32 . COM ; <nl> - <nl> - import org . junit . After ; <nl> - import org . junit . Assert ; <nl> - import org . junit . Before ; <nl> - import org . junit . Test ; <nl> - <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . WString ; <nl> - import com . sun . jna . platform . win32 . Guid . CLSID ; <nl> - import com . sun . jna . platform . win32 . Guid . IID ; <nl> - import com . sun . jna . platform . win32 . Guid . REFIID ; <nl> - import com . sun . jna . platform . win32 . OaIdl . DISPID ; <nl> - import com . sun . jna . platform . win32 . OaIdl . DISPIDByReference ; <nl> - import com . sun . jna . platform . win32 . OaIdl . EXCEPINFO ; <nl> - import com . sun . jna . platform . win32 . OleAuto . DISPPARAMS ; <nl> - import com . sun . jna . platform . win32 . Guid ; <nl> - import com . sun . jna . platform . win32 . Kernel32 ; <nl> - import com . sun . jna . platform . win32 . Ole32 ; <nl> - import com . sun . jna . platform . win32 . WTypes ; <nl> - import com . sun . jna . platform . win32 . WinDef ; <nl> - import com . sun . jna . platform . win32 . WinError ; <nl> - import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> - import com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> - import com . sun . jna . platform . win32 . WinDef . LCID ; <nl> - import com . sun . jna . platform . win32 . WinDef . UINT ; <nl> - import com . sun . jna . platform . win32 . WinDef . UINTByReference ; <nl> - import com . sun . jna . platform . win32 . WinDef . WORD ; <nl> - import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> - import com . sun . jna . ptr . IntByReference ; <nl> - import com . sun . jna . ptr . PointerByReference ; <nl> - <nl> - public class ConnectionPointContainer _ Test { <nl> - <nl> - 	 PointerByReference ppWordApp ; <nl> - <nl> - 	 @ Before <nl> - 	 public void before ( ) { <nl> - 	 	 HRESULT hr = Ole32 . INSTANCE . CoInitialize ( null ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - <nl> - 	 	 / / Create word object <nl> - 	 	 CLSID clsid = new CLSID ( " { 000209FF - 0000 - 0000 - C000 - 000000000046 } " ) ; <nl> - 	 	 this . ppWordApp = new PointerByReference ( ) ; <nl> - 	 	 hr = Ole32 . INSTANCE <nl> - 	 	 	 	 . CoCreateInstance ( clsid , null , WTypes . CLSCTX _ SERVER , IDispatch . IID _ IDISPATCH , this . ppWordApp ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - 	 } <nl> - <nl> - 	 @ After <nl> - 	 public void after ( ) { <nl> - 	 	 / / Close Word <nl> - 	 	 Dispatch d = new Dispatch ( this . ppWordApp . getValue ( ) ) ; <nl> - 	 	 DISPID dispIdMember = new DISPID ( 1105 ) ; / / Quit <nl> - 	 	 REFIID riid = new REFIID ( Guid . IID _ NULL ) ; <nl> - 	 	 LCID lcid = Kernel32 . INSTANCE . GetSystemDefaultLCID ( ) ; <nl> - 	 	 WinDef . WORD wFlags = new WinDef . WORD ( 1 ) ; <nl> - 	 	 DISPPARAMS . ByReference pDispParams = new DISPPARAMS . ByReference ( ) ; <nl> - 	 	 VARIANT . ByReference pVarResult = new VARIANT . ByReference ( ) ; <nl> - 	 	 IntByReference puArgErr = new IntByReference ( ) ; <nl> - 	 	 EXCEPINFO . ByReference pExcepInfo = new EXCEPINFO . ByReference ( ) ; <nl> - 	 	 d . Invoke ( dispIdMember , riid , lcid , wFlags , pDispParams , pVarResult , pExcepInfo , puArgErr ) ; <nl> - 	 	 <nl> - 	 	 Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> - 	 } <nl> - <nl> - 	 @ Test <nl> - 	 public void queryInterface _ ConnectionPointContainer ( ) { <nl> - 	 	 Unknown unk = new Unknown ( this . ppWordApp . getValue ( ) ) ; <nl> - 	 	 PointerByReference ppCpc = new PointerByReference ( ) ; <nl> - 	 	 IID cpcIID = new IID ( " { B196B284 - BAB4 - 101A - B69C - 00AA00341D07 } " ) ; <nl> - 	 	 HRESULT hr = unk . QueryInterface ( new REFIID ( cpcIID ) , ppCpc ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - 	 	 ConnectionPointContainer cpc = new ConnectionPointContainer ( ppCpc . getValue ( ) ) ; <nl> - 	 } <nl> - <nl> - 	 @ Test <nl> - 	 public void FindConnectionPoint ( ) { <nl> - 	 	 / / query for ConnectionPointContainer <nl> - 	 	 Unknown unk = new Unknown ( this . ppWordApp . getValue ( ) ) ; <nl> - 	 	 PointerByReference ppCpc = new PointerByReference ( ) ; <nl> - 	 	 IID cpcIID = new IID ( " { B196B284 - BAB4 - 101A - B69C - 00AA00341D07 } " ) ; <nl> - 	 	 HRESULT hr = unk . QueryInterface ( new REFIID ( cpcIID ) , ppCpc ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - 	 	 ConnectionPointContainer cpc = new ConnectionPointContainer ( ppCpc . getValue ( ) ) ; <nl> - <nl> - 	 	 / / find connection point for Application _ Events4 <nl> - 	 	 IID appEvnts4 = new IID ( " { 00020A01 - 0000 - 0000 - C000 - 000000000046 } " ) ; <nl> - 	 	 REFIID riid = new REFIID ( appEvnts4 . getPointer ( ) ) ; <nl> - 	 	 PointerByReference ppCp = new PointerByReference ( ) ; <nl> - 	 	 hr = cpc . FindConnectionPoint ( riid , ppCp ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - 	 	 ConnectionPoint cp = new ConnectionPoint ( ppCp . getValue ( ) ) ; <nl> - 	 } <nl> - <nl> - 	 @ Test <nl> - 	 public void GetConnectionInterface ( ) { <nl> - 	 	 / / query for ConnectionPointContainer <nl> - 	 	 Unknown unk = new Unknown ( this . ppWordApp . getValue ( ) ) ; <nl> - 	 	 PointerByReference ppCpc = new PointerByReference ( ) ; <nl> - 	 	 IID cpcIID = new IID ( " { B196B284 - BAB4 - 101A - B69C - 00AA00341D07 } " ) ; <nl> - 	 	 HRESULT hr = unk . QueryInterface ( new REFIID ( cpcIID ) , ppCpc ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - 	 	 ConnectionPointContainer cpc = new ConnectionPointContainer ( ppCpc . getValue ( ) ) ; <nl> - <nl> - 	 	 / / find connection point for Application _ Events4 <nl> - 	 	 IID appEvnts4 = new IID ( " { 00020A01 - 0000 - 0000 - C000 - 000000000046 } " ) ; <nl> - 	 	 REFIID riid = new REFIID ( appEvnts4 . getPointer ( ) ) ; <nl> - 	 	 PointerByReference ppCp = new PointerByReference ( ) ; <nl> - 	 	 hr = cpc . FindConnectionPoint ( riid , ppCp ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - 	 	 ConnectionPoint cp = new ConnectionPoint ( ppCp . getValue ( ) ) ; <nl> - <nl> - 	 	 IID cp _ iid = new IID ( ) ; <nl> - 	 	 hr = cp . GetConnectionInterface ( cp _ iid ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - <nl> - 	 	 Assert . assertEquals ( appEvnts4 , cp _ iid ) ; <nl> - 	 } <nl> - <nl> - 	 class Application _ Events4 implements IDispatchCallback { <nl> - 	 	 public DispatchListener listener = new DispatchListener ( this ) ; <nl> - <nl> - 	 	 @ Override <nl> - 	 	 public Pointer getPointer ( ) { <nl> - 	 	 	 return this . listener . getPointer ( ) ; <nl> - 	 	 } <nl> - <nl> - 	 	 / / - - - - - - - - - - - - - - - - - - - - - - - - IDispatch - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> - 	 	 @ Override <nl> - 	 	 public HRESULT GetTypeInfoCount ( UINTByReference pctinfo ) { <nl> - 	 	 	 return new HRESULT ( WinError . E _ NOTIMPL ) ; <nl> - 	 	 } <nl> - <nl> - 	 	 @ Override <nl> - 	 	 public HRESULT GetTypeInfo ( UINT iTInfo , LCID lcid , PointerByReference ppTInfo ) { <nl> - 	 	 	 return new HRESULT ( WinError . E _ NOTIMPL ) ; <nl> - 	 	 } <nl> - <nl> - 	 	 @ Override <nl> - 	 	 public HRESULT GetIDsOfNames ( REFIID riid , WString [ ] rgszNames , int cNames , LCID lcid , DISPIDByReference rgDispId ) { <nl> - 	 	 	 return new HRESULT ( WinError . E _ NOTIMPL ) ; <nl> - 	 	 } <nl> - <nl> - 	 	 public boolean Invoke _ called = false ; <nl> - 	 	 @ Override <nl> - 	 	 public HRESULT Invoke ( DISPID dispIdMember , REFIID riid , LCID lcid , WORD wFlags , <nl> - 	 	 	 	 DISPPARAMS . ByReference pDispParams , VARIANT . ByReference pVarResult , EXCEPINFO . ByReference pExcepInfo , <nl> - 	 IntByReference puArgErr ) { <nl> - 	 	 	 this . Invoke _ called = true ; <nl> - 	 	 	 return new HRESULT ( WinError . E _ NOTIMPL ) ; <nl> - 	 	 } <nl> - 	 	 <nl> - 	 	 <nl> - 	 	 / / - - - - - - - - - - - - - - - - - - - - - - - - IUnknown - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> - 	 	 public boolean QueryInterface _ called = false ; <nl> - 	 	 @ Override <nl> - 	 	 public HRESULT QueryInterface ( REFIID refid , PointerByReference ppvObject ) { <nl> - 	 	 	 this . QueryInterface _ called = true ; <nl> - 	 	 	 if ( null = = ppvObject ) { <nl> - 	 	 	 	 return new HRESULT ( WinError . E _ POINTER ) ; <nl> - 	 	 	 } <nl> - <nl> - 	 	 	 String s = refid . toGuidString ( ) ; <nl> - 	 	 	 IID appEvnts4 = new IID ( " { 00020A01 - 0000 - 0000 - C000 - 000000000046 } " ) ; <nl> - 	 	 	 REFIID riid = new REFIID ( appEvnts4 . getPointer ( ) ) ; <nl> - <nl> - 	 	 	 if ( refid . equals ( riid ) ) { <nl> - 	 	 	 	 return WinError . S _ OK ; <nl> - 	 	 	 } <nl> - 	 	 	 <nl> - 	 	 	 if ( new Guid . IID ( refid . getPointer ( ) ) . equals ( Unknown . IID _ IUNKNOWN ) ) { <nl> - 	 	 	 	 ppvObject . setValue ( this . getPointer ( ) ) ; <nl> - 	 	 	 	 return WinError . S _ OK ; <nl> - 	 	 	 } <nl> - 	 	 	 <nl> - 	 	 	 if ( new Guid . IID ( refid . getPointer ( ) ) . equals ( Dispatch . IID _ IDISPATCH ) ) { <nl> - 	 	 	 	 ppvObject . setValue ( this . getPointer ( ) ) ; <nl> - 	 	 	 	 return WinError . S _ OK ; <nl> - 	 	 	 } <nl> - 	 	 	 <nl> - 	 	 	 return new HRESULT ( WinError . E _ NOINTERFACE ) ; <nl> - 	 	 } <nl> - <nl> - 	 	 public int AddRef ( ) { <nl> - 	 	 	 return 0 ; <nl> - 	 	 } <nl> - <nl> - 	 	 public int Release ( ) { <nl> - 	 	 	 return 0 ; <nl> - 	 	 } <nl> - <nl> - 	 } <nl> - <nl> - 	 @ Test <nl> - 	 public void Advise ( ) { <nl> - <nl> - 	 	 / / query for ConnectionPointContainer <nl> - 	 	 Unknown unk = new Unknown ( this . ppWordApp . getValue ( ) ) ; <nl> - 	 	 PointerByReference ppCpc = new PointerByReference ( ) ; <nl> - 	 	 IID cpcIID = new IID ( " { B196B284 - BAB4 - 101A - B69C - 00AA00341D07 } " ) ; <nl> - 	 	 HRESULT hr = unk . QueryInterface ( new REFIID ( cpcIID ) , ppCpc ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - 	 	 ConnectionPointContainer cpc = new ConnectionPointContainer ( ppCpc . getValue ( ) ) ; <nl> - <nl> - 	 	 / / find connection point for Application _ Events4 <nl> - 	 	 IID appEvnts4 = new IID ( " { 00020A01 - 0000 - 0000 - C000 - 000000000046 } " ) ; <nl> - 	 	 REFIID riid = new REFIID ( appEvnts4 . getPointer ( ) ) ; <nl> - 	 	 PointerByReference ppCp = new PointerByReference ( ) ; <nl> - 	 	 hr = cpc . FindConnectionPoint ( riid , ppCp ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - 	 	 ConnectionPoint cp = new ConnectionPoint ( ppCp . getValue ( ) ) ; <nl> - 	 	 IID cp _ iid = new IID ( ) ; <nl> - 	 	 hr = cp . GetConnectionInterface ( cp _ iid ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - <nl> - 	 	 Application _ Events4 listener = new Application _ Events4 ( ) ; <nl> - <nl> - 	 	 DWORDByReference pdwCookie = new DWORDByReference ( ) ; <nl> - 	 	 hr = cp . Advise ( listener , pdwCookie ) ; <nl> - 	 	 COMUtils . checkRC ( hr ) ; <nl> - <nl> - 	 	 Assert . assertTrue ( listener . QueryInterface _ called ) ; <nl> - 	 	 <nl> - 	 } <nl> - <nl> - }
diff - - git a / lib / native / linux - arm . jar b / lib / native / linux - arm . jar <nl> index f1fa856 . . e7fee0e 100755 <nl> Binary files a / lib / native / linux - arm . jar and b / lib / native / linux - arm . jar differ
diff - - git a / lib / native / android - aarch64 . jar b / lib / native / android - aarch64 . jar <nl> index 09f856f . . 56092ee 100644 <nl> Binary files a / lib / native / android - aarch64 . jar and b / lib / native / android - aarch64 . jar differ
diff - - git a / lib / native / darwin . jar b / lib / native / darwin . jar <nl> index 2909f41 . . d2cf926 100755 <nl> Binary files a / lib / native / darwin . jar and b / lib / native / darwin . jar differ
diff - - git a / native / pom . xml b / native / pom . xml <nl> index cbf563a . . 5a7fc7b 100644 <nl> - - - a / native / pom . xml <nl> + + + b / native / pom . xml <nl> @ @ - 4 , 51 + 4 , 54 @ @ <nl> xmlns = " http : / / maven . apache . org / POM / 4 . 0 . 0 " <nl> xsi : schemaLocation = " http : / / maven . apache . org / POM / 4 . 0 . 0 http : / / maven . apache . org / maven - v4 _ 0 _ 0 . xsd " > <nl> < modelVersion > 4 . 0 . 0 < / modelVersion > <nl> + <nl> + < parent > <nl> + < groupId > net . java . dev . jna < / groupId > <nl> + < artifactId > parent < / artifactId > <nl> + < version > 4 . 3 . 0 - SNAPHSOT < / version > <nl> + < relativePath > . . / parent < / relativePath > <nl> + < / parent > <nl> + <nl> < artifactId > native < / artifactId > <nl> < packaging > pom < / packaging > <nl> + <nl> < name > net . java . dev . jna : native < / name > <nl> <nl> - 	 < parent > <nl> - 	 	 < groupId > net . java . dev . jna < / groupId > <nl> - 	 	 < artifactId > parent < / artifactId > <nl> - 	 	 < version > 4 . 3 . 0 - SNAPHSOT < / version > <nl> - 	 	 < relativePath > . . / parent < / relativePath > <nl> - 	 < / parent > <nl> - 	 <nl> - 	 < build > <nl> - 	 	 < plugins > <nl> - 	 	 	 < plugin > <nl> - 	 	 	 	 < artifactId > maven - antrun - plugin < / artifactId > <nl> - 	 	 	 	 < executions > <nl> - 	 	 	 	 	 < execution > <nl> - 	 	 	 	 	 	 < id > compile - native - library < / id > <nl> - 	 	 	 	 	 	 < phase > package < / phase > <nl> - 	 	 	 	 	 	 < goals > <nl> - 	 	 	 	 	 	 	 < goal > run < / goal > <nl> - 	 	 	 	 	 	 < / goals > <nl> - 	 	 	 	 	 	 < configuration > <nl> - 	 	 	 	 	 	 	 < target > <nl> - 	 	 	 	 	 	 	 	 < ant dir = " $ { project . basedir } " target = " install " inheritRefs = " true " useNativeBasedir = " true " > <nl> - 	 	 	 	 	 	 	 	 	 < ! - - see http : / / stackoverflow . com / questions / 2022622 / java - home - gets - mangled - by - maven - - > <nl> - 	 	 	 	 	 	 	 	 	 < ! - - property name = " build . compiler " value = " extJavac " / - - > <nl> - 	 	 	 	 	 	 	 	 < / ant > <nl> - 	 	 	 	 	 	 	 < / target > <nl> - 	 	 	 	 	 	 < / configuration > <nl> - 	 	 	 	 	 < / execution > <nl> - 	 	 	 	 < / executions > <nl> - 	 	 	 < / plugin > <nl> - 	 	 	 < plugin > 	 < ! - - do not install the POM or artifacts since they are embedded inside the JAR - - > <nl> - 	 	 	 	 < artifactId > maven - install - plugin < / artifactId > <nl> - 	 	 	 	 < configuration > 	 < ! - - TODO consider installing the DLL ( s ) and using their settings . localRepository location - - > <nl> - 	 	 	 	 	 < skip > true < / skip > <nl> - 	 	 	 	 < / configuration > <nl> - 	 	 	 < / plugin > <nl> - 	 	 	 < plugin > 	 < ! - - do not deploy the POM or artifacts since they are embedded inside the JAR - - > <nl> - 	 	 	 	 < artifactId > maven - deploy - plugin < / artifactId > <nl> - 	 	 	 	 < configuration > <nl> - 	 	 	 	 	 < skip > true < / skip > <nl> - 	 	 	 	 < / configuration > <nl> - 	 	 	 < / plugin > <nl> - 	 	 < / plugins > <nl> - 	 < / build > <nl> + < build > <nl> + < plugins > <nl> + < plugin > <nl> + < artifactId > maven - antrun - plugin < / artifactId > <nl> + < executions > <nl> + < execution > <nl> + < id > compile - native - library < / id > <nl> + < phase > package < / phase > <nl> + < goals > <nl> + < goal > run < / goal > <nl> + < / goals > <nl> + < configuration > <nl> + < target > <nl> + < ant dir = " $ { project . basedir } " target = " install " inheritRefs = " true " <nl> + useNativeBasedir = " true " > <nl> + < ! - - see http : / / stackoverflow . com / questions / 2022622 / java - home - gets - mangled - by - maven - - > <nl> + < ! - - property name = " build . compiler " value = " extJavac " / - - > <nl> + < / ant > <nl> + < / target > <nl> + < / configuration > <nl> + < / execution > <nl> + < / executions > <nl> + < / plugin > <nl> + < plugin > < ! - - do not install the POM or artifacts since they are embedded inside the JAR - - > <nl> + < artifactId > maven - install - plugin < / artifactId > <nl> + < configuration > < ! - - TODO consider installing the DLL ( s ) and using their settings . localRepository location - - > <nl> + < skip > true < / skip > <nl> + < / configuration > <nl> + < / plugin > <nl> + < plugin > < ! - - do not deploy the POM or artifacts since they are embedded inside the JAR - - > <nl> + < artifactId > maven - deploy - plugin < / artifactId > <nl> + < configuration > <nl> + < skip > true < / skip > <nl> + < / configuration > <nl> + < / plugin > <nl> + < / plugins > <nl> + < / build > <nl> < / project > <nl> diff - - git a / parent / pom . xml b / parent / pom . xml <nl> index 3760b12 . . 3e7056d 100644 <nl> - - - a / parent / pom . xml <nl> + + + b / parent / pom . xml <nl> @ @ - 3 , 12 + 3 , 50 @ @ <nl> xmlns = " http : / / maven . apache . org / POM / 4 . 0 . 0 " <nl> xsi : schemaLocation = " http : / / maven . apache . org / POM / 4 . 0 . 0 http : / / maven . apache . org / maven - v4 _ 0 _ 0 . xsd " > <nl> < modelVersion > 4 . 0 . 0 < / modelVersion > <nl> + <nl> < groupId > net . java . dev . jna < / groupId > <nl> < artifactId > parent < / artifactId > <nl> < version > 4 . 3 . 0 - SNAPHSOT < / version > <nl> < packaging > pom < / packaging > <nl> + <nl> < name > net . java . dev . jna : parent < / name > <nl> < url > https : / / github . com / java - native - access / jna < / url > <nl> + < licenses > <nl> + < license > <nl> + < name > LGPL , version 2 . 1 < / name > <nl> + < url > http : / / www . gnu . org / licenses / licenses . html < / url > <nl> + < distribution > repo < / distribution > <nl> + < / license > <nl> + < license > <nl> + < name > ASL , version 2 < / name > <nl> + < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt < / url > <nl> + < distribution > repo < / distribution > <nl> + < / license > <nl> + < / licenses > <nl> + <nl> + < developers > <nl> + < developer > <nl> + < id > twall < / id > <nl> + < name > Timothy Wall < / name > <nl> + < roles > <nl> + < role > Owner < / role > <nl> + < / roles > <nl> + < / developer > <nl> + < / developers > <nl> + <nl> + < prerequisites > <nl> + < maven > $ { min . required . maven . version } < / maven > <nl> + < / prerequisites > <nl> + <nl> + < modules > <nl> + < module > . . / native < / module > <nl> + < / modules > <nl> + <nl> + < scm > <nl> + < connection > scm : git : https : / / github . com / java - native - access / jna < / connection > <nl> + < developerConnection > scm : git : ssh : / / git @ github . com / java - native - access / jna . git < / developerConnection > <nl> + < url > https : / / github . com / java - native - access / jna < / url > <nl> + < / scm > <nl> <nl> < properties > <nl> < project . build . sourceEncoding > UTF - 8 < / project . build . sourceEncoding > <nl> @ @ - 41 , 10 + 79 , 6 @ @ <nl> < javadoc . plugin . version > 2 . 10 . 1 < / javadoc . plugin . version > <nl> < / properties > <nl> <nl> - < prerequisites > <nl> - < maven > $ { min . required . maven . version } < / maven > <nl> - < / prerequisites > <nl> - <nl> < dependencyManagement > <nl> < dependencies > <nl> < dependency > <nl> @ @ - 56 , 38 + 90 , 8 @ @ <nl> < / dependencies > <nl> < / dependencyManagement > <nl> <nl> - < licenses > <nl> - < license > <nl> - < name > LGPL , version 2 . 1 < / name > <nl> - < url > http : / / www . gnu . org / licenses / licenses . html < / url > <nl> - < distribution > repo < / distribution > <nl> - < / license > <nl> - < license > <nl> - < name > ASL , version 2 < / name > <nl> - < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt < / url > <nl> - < distribution > repo < / distribution > <nl> - < / license > <nl> - < / licenses > <nl> - <nl> - < scm > <nl> - < connection > scm : git : https : / / github . com / java - native - access / jna < / connection > <nl> - < developerConnection > scm : git : ssh : / / git @ github . com / java - native - access / jna . git < / developerConnection > <nl> - < url > https : / / github . com / java - native - access / jna < / url > <nl> - < / scm > <nl> - <nl> - < developers > <nl> - < developer > <nl> - < id > twall < / id > <nl> - < name > Timothy Wall < / name > <nl> - < roles > <nl> - < role > Owner < / role > <nl> - < / roles > <nl> - < / developer > <nl> - < / developers > <nl> - <nl> < build > <nl> < defaultGoal > package < / defaultGoal > <nl> - <nl> < pluginManagement > <nl> < plugins > <nl> < ! - - This plugin ' s configuration is used to store Eclipse <nl> @ @ - 110 , 7 + 114 , 7 @ @ <nl> < / goals > <nl> < / pluginExecutionFilter > <nl> < action > <nl> - < execute / > <nl> + < execute / > <nl> < / action > <nl> < / pluginExecution > <nl> < pluginExecution > <nl> @ @ - 125 , 7 + 129 , 7 @ @ <nl> < / goals > <nl> < / pluginExecutionFilter > <nl> < action > <nl> - < execute / > <nl> + < execute / > <nl> < / action > <nl> < / pluginExecution > <nl> < / pluginExecutions > <nl> @ @ - 222 , 7 + 226 , 6 @ @ <nl> < / plugin > <nl> < / plugins > <nl> < / pluginManagement > <nl> - <nl> < plugins > <nl> < plugin > <nl> < artifactId > maven - enforcer - plugin < / artifactId > <nl> @ @ - 273 , 10 + 276 , 6 @ @ <nl> < / plugins > <nl> < / build > <nl> <nl> - < modules > <nl> - < module > . . / native < / module > <nl> - < / modules > <nl> - <nl> < reporting > <nl> < plugins > <nl> < plugin >
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java b / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> index 23f1c23 . . e93481c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> @ @ - 241 , 7 + 241 , 7 @ @ public interface Winsvc { <nl> * If this value is NULL , the reboot message is unchanged . If the value is an empty string <nl> * ( " " ) , the reboot message is deleted and no message is broadcast . <nl> * This member can specify a localized string using the following format : <nl> - * @ [ path \ ] dllname , - strID <nl> + * " @ [ path ] dllname , - strID " <nl> * The string with identifier strID is loaded from dllname ; the path is optional . For more <nl> * information , see RegLoadMUIString . <nl> * Windows Server 2003 and Windows XP : Localized strings are not supported until Windows
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8a90817 . . 5e28d10 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 44 , 6 + 44 , 7 @ @ Bug Fixes <nl> * [ # 566 ] ( https : / / github . com / java - native - access / jna / pull / 566 ) : Fix return type of Native # loadLibrary to match unconstrained generic [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) <nl> * [ # 584 ] ( https : / / github . com / java - native - access / jna / pull / 584 ) : Promote float varargs to double - [ @ marco2357 ] ( https : / / github . com / marco2357 ) . <nl> * [ # 588 ] ( https : / / github . com / java - native - access / jna / pull / 588 ) : Fix varargs calls on arm - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ # 593 ] ( https : / / github . com / java - native - access / jna / pull / 593 ) : Improve binding of TypeLib bindings - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 4 . 2 . 1 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / ITypeLib . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / ITypeLib . java <nl> index dd51e5b . . 955148d 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / ITypeLib . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / ITypeLib . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 . COM ; <nl> <nl> + import com . sun . jna . Pointer ; <nl> import com . sun . jna . platform . win32 . Guid . GUID ; <nl> import com . sun . jna . platform . win32 . OaIdl . MEMBERID ; <nl> import com . sun . jna . platform . win32 . OaIdl . TLIBATTR ; <nl> @ @ - 69 , 9 + 70 , 9 @ @ public interface ITypeLib extends IUnknown { <nl> <nl> public HRESULT FindName ( <nl> / * [ annotation ] [ out ] [ in ] * / <nl> - BSTRByReference szNameBuf , <nl> + LPOLESTR szNameBuf , <nl> / * [ in ] * / ULONG lHashVal , <nl> - / * [ length _ is ] [ size _ is ] [ out ] * / PointerByReference ppTInfo , <nl> + / * [ length _ is ] [ size _ is ] [ out ] * / Pointer [ ] ppTInfo , <nl> / * [ length _ is ] [ size _ is ] [ out ] * / MEMBERID [ ] rgMemId , <nl> / * [ out ] [ in ] * / USHORTByReference pcFound ) ; <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLib . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLib . java <nl> index 5ec1e8a . . e5153f5 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLib . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLib . java <nl> @ @ - 188 , 8 + 188 , 7 @ @ public class TypeLib extends Unknown implements ITypeLib { <nl> * @ return the hresult <nl> * / <nl> public HRESULT IsName ( <nl> - / * [ annotation ] [ out ] [ in ] * / <nl> - LPOLESTR szNameBuf , <nl> + / * [ annotation ] [ out ] [ in ] * / LPOLESTR szNameBuf , <nl> / * [ in ] * / ULONG lHashVal , <nl> / * [ out ] * / BOOLByReference pfName ) { <nl> <nl> @ @ - 214 , 10 + 213 , 9 @ @ public class TypeLib extends Unknown implements ITypeLib { <nl> * @ return the hresult <nl> * / <nl> public HRESULT FindName ( <nl> - / * [ annotation ] [ out ] [ in ] * / <nl> - BSTRByReference szNameBuf , <nl> + / * [ annotation ] [ out ] [ in ] * / LPOLESTR szNameBuf , <nl> / * [ in ] * / ULONG lHashVal , <nl> - / * [ length _ is ] [ size _ is ] [ out ] * / PointerByReference ppTInfo , <nl> + / * [ length _ is ] [ size _ is ] [ out ] * / Pointer [ ] ppTInfo , <nl> / * [ length _ is ] [ size _ is ] [ out ] * / MEMBERID [ ] rgMemId , <nl> / * [ out ] [ in ] * / USHORTByReference pcFound ) { <nl> <nl> @ @ - 233 , 7 + 231 , 7 @ @ public class TypeLib extends Unknown implements ITypeLib { <nl> * the t lib attr <nl> * / <nl> public void ReleaseTLibAttr ( / * [ in ] * / TLIBATTR pTLibAttr ) { <nl> - this . _ invokeNativeObject ( 12 , new Object [ ] { this . getPointer ( ) } , <nl> - HRESULT . class ) ; <nl> + this . _ invokeNativeObject ( 12 , new Object [ ] { this . getPointer ( ) , <nl> + pTLibAttr . getPointer ( ) } , HRESULT . class ) ; <nl> } <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibUtil . java <nl> index ebe28da . . 9348bed 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibUtil . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 . COM ; <nl> <nl> + import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . WString ; <nl> import com . sun . jna . platform . win32 . Guid . CLSID ; <nl> @ @ - 21 , 6 + 22 , 7 @ @ import com . sun . jna . platform . win32 . OaIdl . TLIBATTR ; <nl> import com . sun . jna . platform . win32 . OaIdl . TYPEKIND ; <nl> import com . sun . jna . platform . win32 . Ole32 ; <nl> import com . sun . jna . platform . win32 . OleAuto ; <nl> + import com . sun . jna . platform . win32 . WTypes ; <nl> import com . sun . jna . platform . win32 . WTypes . BSTRByReference ; <nl> import com . sun . jna . platform . win32 . WTypes . LPOLESTR ; <nl> import com . sun . jna . platform . win32 . WinDef . BOOLByReference ; <nl> @ @ - 364 , 32 + 366 , 29 @ @ public class TypeLibUtil { <nl> * @ param name <nl> * the name <nl> * @ param hashVal <nl> - * the hash val <nl> - * @ param found <nl> - * the found <nl> + * the hash val or 0 if unknown <nl> + * @ param maxResult <nl> + * maximum number of items to search <nl> * @ return the find name <nl> * / <nl> - public FindName FindName ( String name , int hashVal , short found ) { <nl> - / * [ annotation ] [ out ] [ in ] * / <nl> - BSTRByReference szNameBuf = new BSTRByReference ( <nl> - OleAuto . INSTANCE . SysAllocString ( name ) ) ; <nl> - / * [ in ] * / ULONG lHashVal = new ULONG ( hashVal ) ; <nl> - / * [ out ] [ in ] * / USHORTByReference pcFound = new USHORTByReference ( found ) ; <nl> - <nl> - HRESULT hr = this . typelib . FindName ( szNameBuf , lHashVal , null , null , <nl> - pcFound ) ; <nl> - COMUtils . checkRC ( hr ) ; <nl> + public FindName FindName ( String name , int hashVal , short maxResult ) { <nl> + Pointer p = Ole32 . INSTANCE . CoTaskMemAlloc ( ( name . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ; <nl> + WTypes . LPOLESTR olestr = new WTypes . LPOLESTR ( p ) ; <nl> + olestr . setValue ( name ) ; <nl> <nl> - found = pcFound . getValue ( ) . shortValue ( ) ; <nl> - / * [ length _ is ] [ size _ is ] [ out ] * / PointerByReference ppTInfo = new PointerByReference ( ) ; <nl> - / * [ length _ is ] [ size _ is ] [ out ] * / MEMBERID [ ] rgMemId = new MEMBERID [ found ] ; <nl> - hr = this . typelib . FindName ( szNameBuf , lHashVal , ppTInfo , rgMemId , <nl> + ULONG lHashVal = new ULONG ( hashVal ) ; <nl> + USHORTByReference pcFound = new USHORTByReference ( maxResult ) ; <nl> + <nl> + Pointer [ ] ppTInfo = new Pointer [ maxResult ] ; <nl> + MEMBERID [ ] rgMemId = new MEMBERID [ maxResult ] ; <nl> + HRESULT hr = this . typelib . FindName ( olestr , lHashVal , ppTInfo , rgMemId , <nl> pcFound ) ; <nl> COMUtils . checkRC ( hr ) ; <nl> <nl> - FindName findName = new FindName ( szNameBuf . getString ( ) , ppTInfo , <nl> - rgMemId , found ) ; <nl> - OLEAUTO . SysFreeString ( szNameBuf . getValue ( ) ) ; <nl> + FindName findName = new FindName ( olestr . getValue ( ) , ppTInfo , <nl> + rgMemId , pcFound . getValue ( ) . shortValue ( ) ) ; <nl> + <nl> + Ole32 . INSTANCE . CoTaskMemFree ( p ) ; <nl> <nl> return findName ; <nl> } <nl> @ @ - 405 , 7 + 404 , 7 @ @ public class TypeLibUtil { <nl> private String nameBuf ; <nl> <nl> / * * The p t info . * / <nl> - private PointerByReference pTInfo ; <nl> + private Pointer [ ] pTInfo ; <nl> <nl> / * * The rg mem id . * / <nl> private MEMBERID [ ] rgMemId ; <nl> @ @ - 423 , 12 + 422 , 14 @ @ public class TypeLibUtil { <nl> * the rg mem id <nl> * @ param pcFound <nl> * / <nl> - public FindName ( String nameBuf , PointerByReference pTInfo , MEMBERID [ ] rgMemId , <nl> + FindName ( String nameBuf , Pointer [ ] pTInfo , MEMBERID [ ] rgMemId , <nl> short pcFound ) { <nl> this . nameBuf = nameBuf ; <nl> - this . pTInfo = pTInfo ; <nl> - this . rgMemId = rgMemId ; <nl> + this . pTInfo = new Pointer [ pcFound ] ; <nl> + this . rgMemId = new MEMBERID [ pcFound ] ; <nl> this . pcFound = pcFound ; <nl> + System . arraycopy ( pTInfo , 0 , this . pTInfo , 0 , pcFound ) ; <nl> + System . arraycopy ( rgMemId , 0 , this . rgMemId , 0 , pcFound ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 446 , 12 + 447 , 10 @ @ public class TypeLibUtil { <nl> * @ return the t info <nl> * / <nl> public ITypeInfo [ ] getTInfo ( ) { <nl> - <nl> - Pointer pVals = pTInfo . getValue ( ) ; <nl> ITypeInfo [ ] values = new ITypeInfo [ pcFound ] ; <nl> for ( int i = 0 ; i < pcFound ; i + + ) <nl> { <nl> - values [ i ] = new TypeInfo ( pVals . getPointer ( i * Pointer . SIZE ) ) ; <nl> + values [ i ] = new TypeInfo ( pTInfo [ i ] ) ; <nl> } <nl> return values ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> index b3eafa0 . . 247dd09 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> @ @ - 196 , 7 + 196 , 7 @ @ public interface WTypes { <nl> } <nl> <nl> public static class LPOLESTR extends PointerType { <nl> - public static class ByReference extends BSTR implements <nl> + public static class ByReference extends LPOLESTR implements <nl> Structure . ByReference { <nl> } <nl> <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java <nl> index 67c852b . . a90b2f9 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java <nl> @ @ - 12 , 16 + 12 , 22 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 . COM ; <nl> <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> import junit . framework . TestCase ; <nl> <nl> import com . sun . jna . WString ; <nl> import com . sun . jna . platform . win32 . Guid . CLSID ; <nl> + import com . sun . jna . platform . win32 . Guid . GUID ; <nl> import com . sun . jna . platform . win32 . Kernel32 ; <nl> + import com . sun . jna . platform . win32 . OaIdl ; <nl> import com . sun . jna . platform . win32 . OaIdl . MEMBERID ; <nl> import com . sun . jna . platform . win32 . OaIdl . TYPEKIND ; <nl> import com . sun . jna . platform . win32 . Ole32 ; <nl> import com . sun . jna . platform . win32 . OleAuto ; <nl> - import com . sun . jna . platform . win32 . WTypes . BSTRByReference ; <nl> + import com . sun . jna . platform . win32 . WTypes ; <nl> + import com . sun . jna . platform . win32 . WTypes . BSTR ; <nl> + import com . sun . jna . platform . win32 . WinDef ; <nl> import com . sun . jna . platform . win32 . WinDef . LCID ; <nl> import com . sun . jna . platform . win32 . WinDef . UINT ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONG ; <nl> @ @ - 33 , 7 + 39 , 12 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> * @ author dblock [ at ] dblock [ dot ] org <nl> * / <nl> public class ITypeLibTest extends TestCase { <nl> - <nl> + / / Microsoft Shell Controls And Automation <nl> + private static final String SHELL _ CLSID = " { 50A7E9B0 - 70EF - 11D1 - B75A - 00A0C90564FE } " ; <nl> + / / Version 1 . 0 <nl> + private static final int SHELL _ MAJOR = 1 ; <nl> + private static final int SHELL _ MINOR = 0 ; <nl> + <nl> public static void main ( String [ ] args ) { <nl> junit . textui . TestRunner . run ( ITypeLibTest . class ) ; <nl> } <nl> @ @ - 42 , 22 + 53 , 19 @ @ public class ITypeLibTest extends TestCase { <nl> } <nl> <nl> private ITypeLib loadShellTypeLib ( ) { <nl> - / / Microsoft Shell Controls And Automation <nl> CLSID . ByReference clsid = new CLSID . ByReference ( ) ; <nl> / / get CLSID from string <nl> - HRESULT hr = Ole32 . INSTANCE . CLSIDFromString ( new WString ( <nl> - " { 50A7E9B0 - 70EF - 11D1 - B75A - 00A0C90564FE } " ) , clsid ) ; <nl> - COMUtils . checkRC ( hr ) ; <nl> - assertEquals ( 0 , hr . intValue ( ) ) ; <nl> + HRESULT hr = Ole32 . INSTANCE . CLSIDFromString ( new WString ( SHELL _ CLSID ) , clsid ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> <nl> / / get user default lcid <nl> LCID lcid = Kernel32 . INSTANCE . GetUserDefaultLCID ( ) ; <nl> - / / create a IUnknown pointer <nl> + <nl> PointerByReference pShellTypeLib = new PointerByReference ( ) ; <nl> / / load typelib <nl> - hr = OleAuto . INSTANCE . LoadRegTypeLib ( clsid , 1 , 0 , lcid , pShellTypeLib ) ; <nl> - COMUtils . checkRC ( hr ) ; <nl> - assertEquals ( 0 , hr . intValue ( ) ) ; <nl> + hr = OleAuto . INSTANCE . LoadRegTypeLib ( clsid , SHELL _ MAJOR , SHELL _ MINOR , lcid , pShellTypeLib ) ; <nl> + <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> <nl> return new TypeLib ( pShellTypeLib . getValue ( ) ) ; <nl> } <nl> @ @ - 65 , 7 + 73 , 7 @ @ public class ITypeLibTest extends TestCase { <nl> public void testGetTypeInfoCount ( ) { <nl> ITypeLib shellTypeLib = loadShellTypeLib ( ) ; <nl> UINT typeInfoCount = shellTypeLib . GetTypeInfoCount ( ) ; <nl> - / / System . out . println ( " GetTypeInfoCount : " + typeInfoCount ) ; <nl> + assertEquals ( 38 , typeInfoCount . intValue ( ) ) ; <nl> } <nl> <nl> public void testGetTypeInfo ( ) { <nl> @ @ - 74 , 8 + 82 , 8 @ @ public class ITypeLibTest extends TestCase { <nl> PointerByReference ppTInfo = new PointerByReference ( ) ; <nl> HRESULT hr = shellTypeLib . GetTypeInfo ( new UINT ( 0 ) , ppTInfo ) ; <nl> <nl> - COMUtils . checkRC ( hr ) ; <nl> - assertEquals ( 0 , hr . intValue ( ) ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + <nl> / / System . out . println ( " ITypeInfo : " + ppTInfo . toString ( ) ) ; <nl> } <nl> <nl> @ @ - 85 , 55 + 93 , 119 @ @ public class ITypeLibTest extends TestCase { <nl> TYPEKIND . ByReference pTKind = new TYPEKIND . ByReference ( ) ; <nl> HRESULT hr = shellTypeLib . GetTypeInfoType ( new UINT ( 0 ) , pTKind ) ; <nl> <nl> - COMUtils . checkRC ( hr ) ; <nl> - assertEquals ( 0 , hr . intValue ( ) ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + <nl> / / System . out . println ( " TYPEKIND : " + pTKind ) ; <nl> } <nl> <nl> public void testGetTypeInfoOfGuid ( ) { <nl> - / / ITypeLib shellTypeLib = loadShellTypeLib ( ) ; <nl> - / / <nl> - / / GUID shellGuid = new GUID ( " { 50A7E9B0 - 70EF - 11D1 - B75A - 00A0C90564FE } " ) ; <nl> - / / TypeInfo . ByReference pTInfo = new TypeInfo . ByReference ( ) ; <nl> - / / HRESULT hr = shellTypeLib . GetTypeInfoOfGuid ( shellGuid , pTInfo ) ; <nl> - / / <nl> - / / COMUtils . checkRC ( hr ) ; <nl> - / / assertEquals ( 0 , hr . intValue ( ) ) ; <nl> - / / System . out . println ( " ITypeInfo : " + pTInfo . toString ( ) ) ; <nl> + ITypeLib shellTypeLib = loadShellTypeLib ( ) ; <nl> + <nl> + / / GUID for dispinterface IFolderViewOC <nl> + GUID iFolderViewOC = new GUID ( " { 9BA05970 - F6A8 - 11CF - A442 - 00A0C90A8F39 } " ) ; <nl> + PointerByReference pbr = new PointerByReference ( ) ; <nl> + HRESULT hr = shellTypeLib . GetTypeInfoOfGuid ( iFolderViewOC , pbr ) ; <nl> + <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> } <nl> <nl> - public void testGetLibAttr ( ) { <nl> - / / ITypeLib shellTypeLib = loadShellTypeLib ( ) ; <nl> - / / <nl> - / / TLIBATTR . ByReference ppTLibAttr = new TLIBATTR . ByReference ( ) ; <nl> - / / HRESULT hr = shellTypeLib . GetLibAttr ( ppTLibAttr ) ; <nl> - / / <nl> - / / COMUtils . checkRC ( hr ) ; <nl> - / / assertEquals ( 0 , hr . intValue ( ) ) ; <nl> - / / System . out . println ( " ppTLibAttr : " + ppTLibAttr . toString ( ) ) ; <nl> + public void testLibAttr ( ) { <nl> + ITypeLib shellTypeLib = loadShellTypeLib ( ) ; <nl> + <nl> + PointerByReference pbr = new PointerByReference ( ) ; <nl> + HRESULT hr = shellTypeLib . GetLibAttr ( pbr ) ; <nl> + <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + <nl> + OaIdl . TLIBATTR tlibAttr = new OaIdl . TLIBATTR ( pbr . getValue ( ) ) ; <nl> + <nl> + assertEquals ( SHELL _ CLSID , tlibAttr . guid . toGuidString ( ) ) ; <nl> + assertEquals ( SHELL _ MAJOR , tlibAttr . wMajorVerNum . intValue ( ) ) ; <nl> + assertEquals ( SHELL _ MINOR , tlibAttr . wMinorVerNum . intValue ( ) ) ; <nl> + <nl> + shellTypeLib . ReleaseTLibAttr ( tlibAttr ) ; <nl> } <nl> <nl> public void testGetTypeComp ( ) { <nl> - / / ITypeLib shellTypeLib = loadShellTypeLib ( ) ; <nl> - / / <nl> - / / TypeComp . ByReference pTComp = new TypeComp . ByReference ( ) ; <nl> - / / HRESULT hr = shellTypeLib . GetTypeComp ( pTComp ) ; <nl> - / / <nl> - / / COMUtils . checkRC ( hr ) ; <nl> - / / assertEquals ( 0 , hr . intValue ( ) ) ; <nl> - / / System . out . println ( " pTComp : " + pTComp . toString ( ) ) ; <nl> + ITypeLib shellTypeLib = loadShellTypeLib ( ) ; <nl> + <nl> + PointerByReference pbr = new PointerByReference ( ) ; <nl> + HRESULT hr = shellTypeLib . GetTypeComp ( pbr ) ; <nl> + <nl> + / / Only check that call works <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> } <nl> <nl> + public void testIsName ( ) { <nl> + ITypeLib shellTypeLib = loadShellTypeLib ( ) ; <nl> + <nl> + String memberValue = " Folder " ; <nl> + Pointer p = Ole32 . INSTANCE . CoTaskMemAlloc ( ( memberValue . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ; <nl> + WTypes . LPOLESTR olestr = new WTypes . LPOLESTR ( p ) ; <nl> + olestr . setValue ( memberValue ) ; <nl> + <nl> + WinDef . BOOLByReference boolByRef = new WinDef . BOOLByReference ( ) ; <nl> + <nl> + HRESULT hr = shellTypeLib . IsName ( olestr , new ULONG ( 0 ) , boolByRef ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + <nl> + / / Folder is a member <nl> + assertTrue ( boolByRef . getValue ( ) . booleanValue ( ) ) ; <nl> + <nl> + Ole32 . INSTANCE . CoTaskMemFree ( p ) ; <nl> + } <nl> + <nl> public void testFindName ( ) { <nl> ITypeLib shellTypeLib = loadShellTypeLib ( ) ; <nl> - BSTRByReference szNameBuf = new BSTRByReference ( OleAuto . INSTANCE . SysAllocString ( " Application " ) ) ; <nl> + <nl> + / / The found member is Count , search done with lowercase value to test <nl> + / / correct behaviour ( search is case insensitive ) <nl> + String memberValue = " count " ; <nl> + String memberValueOk = " Count " ; <nl> + Pointer p = Ole32 . INSTANCE . CoTaskMemAlloc ( ( memberValue . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ; <nl> + WTypes . LPOLESTR olestr = new WTypes . LPOLESTR ( p ) ; <nl> + olestr . setValue ( memberValue ) ; <nl> + <nl> + short maxResults = 100 ; <nl> + <nl> ULONG lHashVal = new ULONG ( 0 ) ; <nl> - USHORTByReference pcFound = new USHORTByReference ( ( short ) 20 ) ; <nl> - PointerByReference ppTInfo = new PointerByReference ( ) ; <nl> - MEMBERID [ ] rgMemId = new MEMBERID [ 20 ] ; <nl> - HRESULT hr = shellTypeLib . FindName ( szNameBuf , lHashVal , ppTInfo , rgMemId , pcFound ) ; <nl> - <nl> - COMUtils . checkRC ( hr ) ; <nl> - / / System . out . println ( " szNameBuf : " + szNameBuf ) ; <nl> + USHORTByReference pcFound = new USHORTByReference ( maxResults ) ; <nl> + Pointer [ ] pointers = new Pointer [ maxResults ] ; <nl> + MEMBERID [ ] rgMemId = new MEMBERID [ maxResults ] ; <nl> + <nl> + HRESULT hr = shellTypeLib . FindName ( olestr , lHashVal , pointers , rgMemId , pcFound ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + <nl> + / / If a reader can come up with more tests it would be appretiated , <nl> + / / the documentation is unclear what more can be expected <nl> + <nl> + / / 2 matches come from manual tests <nl> + assertTrue ( pcFound . getValue ( ) . intValue ( ) = = 2 ) ; <nl> + / / Check that function return corrected member name ( Count ) - see uppercase C <nl> + assertEquals ( memberValueOk , olestr . getValue ( ) ) ; <nl> + <nl> + / / There have to be as many pointers as reported by pcFound <nl> + assertNotNull ( pointers [ 0 ] ) ; <nl> + assertNotNull ( pointers [ 1 ] ) ; <nl> + assertNull ( pointers [ 2 ] ) ; / / Might be flaky , contract only defined positions 0 - > ( pcFound - 1 ) <nl> + <nl> + / / Test access to second value <nl> + TypeInfo secondTypeInfo = new TypeInfo ( pointers [ 1 ] ) ; <nl> + <nl> + PointerByReference pbr = new PointerByReference ( ) ; <nl> + hr = secondTypeInfo . GetTypeAttr ( pbr ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + OaIdl . TYPEATTR pTypeAttr = new OaIdl . TYPEATTR ( pbr . getValue ( ) ) ; <nl> + <nl> + / / Either interface FolderItemVerbs ( { 1F8352C0 - 50B0 - 11CF - 960C - 0080C7F4EE85 } ) <nl> + / / or FolderItems ( { 744129E0 - CBE5 - 11CE - 8350 - 444553540000 } ) <nl> + String typeGUID = pTypeAttr . guid . toGuidString ( ) ; <nl> + <nl> + assertTrue ( typeGUID . equals ( " { 1F8352C0 - 50B0 - 11CF - 960C - 0080C7F4EE85 } " ) | | <nl> + typeGUID . equals ( " { 744129E0 - CBE5 - 11CE - 8350 - 444553540000 } " ) ) ; <nl> + <nl> + secondTypeInfo . ReleaseTypeAttr ( pTypeAttr ) ; <nl> + <nl> + Ole32 . INSTANCE . CoTaskMemFree ( olestr . getPointer ( ) ) ; <nl> } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java <nl> index b425a2d . . a37100d 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java <nl> @ @ - 15 , 9 + 15 , 14 @ @ package com . sun . jna . platform . win32 . COM ; <nl> import junit . framework . TestCase ; <nl> <nl> import com . sun . jna . platform . win32 . COM . TypeInfoUtil . TypeInfoDoc ; <nl> + import com . sun . jna . platform . win32 . COM . TypeLibUtil . FindName ; <nl> + import com . sun . jna . platform . win32 . COM . TypeLibUtil . IsName ; <nl> + import com . sun . jna . platform . win32 . OaIdl ; <nl> import com . sun . jna . platform . win32 . OaIdl . FUNCDESC ; <nl> import com . sun . jna . platform . win32 . OaIdl . MEMBERID ; <nl> import com . sun . jna . platform . win32 . OaIdl . TYPEATTR ; <nl> + import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> + import com . sun . jna . ptr . PointerByReference ; <nl> <nl> / * * <nl> * @ author dblock [ at ] dblock [ dot ] org <nl> @ @ - 70 , 31 + 75 , 52 @ @ public class TypeLibUtilTest extends TestCase { <nl> typeInfoUtil . ReleaseTypeAttr ( typeAttr ) ; <nl> } <nl> } <nl> - <nl> - public void testBug ( ) { <nl> + <nl> + public void testFindName ( ) { <nl> + / / Test is modelled after ITypeLibTest # testFindName <nl> TypeLibUtil shellTypeLib = loadShellTypeLib ( ) ; <nl> - int typeInfoCount = shellTypeLib . getTypeInfoCount ( ) ; <nl> <nl> - ITypeInfo typeInfo = shellTypeLib . getTypeInfo ( 4 ) ; <nl> - TypeInfoUtil typeInfoUtil = new TypeInfoUtil ( typeInfo ) ; <nl> + String memberValue = " count " ; <nl> + String memberValueOk = " Count " ; <nl> <nl> - TYPEATTR typeAttr = typeInfoUtil . getTypeAttr ( ) ; <nl> - int cFuncs = typeAttr . cFuncs . intValue ( ) ; <nl> - <nl> - for ( int y = 0 ; y < cFuncs ; y + + ) { <nl> - / / Get the function description <nl> - FUNCDESC funcDesc = typeInfoUtil . getFuncDesc ( y ) ; <nl> - / / Get the member ID <nl> - MEMBERID memberID = funcDesc . memid ; <nl> - / / Get the name of the method <nl> - TypeInfoDoc typeInfoDoc2 = typeInfoUtil . getDocumentation ( memberID ) ; <nl> - String methodName = typeInfoDoc2 . getName ( ) ; <nl> - <nl> - assertNotNull ( methodName ) ; <nl> - <nl> - typeInfoUtil . ReleaseFuncDesc ( funcDesc ) ; <nl> - } <nl> + FindName result = shellTypeLib . FindName ( memberValue , 0 , ( short ) 100 ) ; <nl> + <nl> + / / 2 matches come from manual tests <nl> + assertEquals ( 2 , result . getFound ( ) ) ; <nl> + / / Check that function return corrected member name ( Count ) - see uppercase C <nl> + assertEquals ( memberValueOk , result . getNameBuf ( ) ) ; <nl> + <nl> + / / There have to be as many pointers as reported by pcFound <nl> + ITypeInfo [ ] typelib = result . getTInfo ( ) ; <nl> + assertEquals ( 2 , typelib . length ) ; <nl> + assertNotNull ( typelib [ 0 ] ) ; <nl> + assertNotNull ( typelib [ 1 ] ) ; <nl> <nl> - typeInfoUtil . ReleaseTypeAttr ( typeAttr ) ; <nl> + PointerByReference pbr = new PointerByReference ( ) ; <nl> + HRESULT hr = typelib [ 1 ] . GetTypeAttr ( pbr ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + OaIdl . TYPEATTR pTypeAttr = new OaIdl . TYPEATTR ( pbr . getValue ( ) ) ; <nl> + <nl> + / / Either interface FolderItemVerbs ( { 1F8352C0 - 50B0 - 11CF - 960C - 0080C7F4EE85 } ) <nl> + / / or FolderItems ( { 744129E0 - CBE5 - 11CE - 8350 - 444553540000 } ) <nl> + String typeGUID = pTypeAttr . guid . toGuidString ( ) ; <nl> + <nl> + assertTrue ( typeGUID . equals ( " { 1F8352C0 - 50B0 - 11CF - 960C - 0080C7F4EE85 } " ) | | <nl> + typeGUID . equals ( " { 744129E0 - CBE5 - 11CE - 8350 - 444553540000 } " ) ) ; <nl> + <nl> + typelib [ 1 ] . ReleaseTypeAttr ( pTypeAttr ) ; <nl> } <nl> + <nl> + public void testIsName ( ) { <nl> + / / Test is modelled after ITypeLibTest # testFindName <nl> + TypeLibUtil shellTypeLib = loadShellTypeLib ( ) ; <nl> + <nl> + String memberValue = " count " ; <nl> + String memberValueOk = " Count " ; <nl> + <nl> + IsName isNameResult = shellTypeLib . IsName ( memberValue , 0 ) ; <nl> + <nl> + assertEquals ( memberValueOk , isNameResult . getNameBuf ( ) ) ; <nl> + assertTrue ( isNameResult . isName ( ) ) ; <nl> + } <nl> }
diff - - git a / src / com / sun / jna / CallbackReference . java b / src / com / sun / jna / CallbackReference . java <nl> index 3a2dedb . . 373b31f 100644 <nl> - - - a / src / com / sun / jna / CallbackReference . java <nl> + + + b / src / com / sun / jna / CallbackReference . java <nl> @ @ - 36 , 7 + 36 , 7 @ @ import com . sun . jna . win32 . DLLCallback ; <nl> * and a Java { @ link Callback } closure . <nl> * / <nl> <nl> - class CallbackReference extends WeakReference < Callback > { <nl> + public class CallbackReference extends WeakReference < Callback > { <nl> <nl> static final Map < Callback , CallbackReference > callbackMap = new WeakHashMap < Callback , CallbackReference > ( ) ; <nl> static final Map < Callback , CallbackReference > directCallbackMap = new WeakHashMap < Callback , CallbackReference > ( ) ;
diff - - git a / src / com / sun / jna / VarArgsChecker . java b / src / com / sun / jna / VarArgsChecker . java <nl> index a2d612d . . 70b82e2 100644 <nl> - - - a / src / com / sun / jna / VarArgsChecker . java <nl> + + + b / src / com / sun / jna / VarArgsChecker . java <nl> @ @ - 27 , 7 + 27 , 7 @ @ abstract class VarArgsChecker { <nl> <nl> 	 int fixedArgs ( Method m ) { <nl> 	 / / In Java , final argument contains all " varargs " <nl> - 	 return m . getParameterTypes ( ) . length - 1 ; <nl> + 	 return m . isVarArgs ( ) ? m . getParameterTypes ( ) . length - 1 : 0 ; <nl> 	 } <nl> } <nl>
diff - - git a / lib / native / linux - x86 - 64 . jar b / lib / native / linux - x86 - 64 . jar <nl> index cb48404 . . 8cc3d15 100644 <nl> Binary files a / lib / native / linux - x86 - 64 . jar and b / lib / native / linux - x86 - 64 . jar differ <nl> diff - - git a / lib / native / linux - x86 . jar b / lib / native / linux - x86 . jar <nl> index 8e50099 . . 693e1d6 100755 <nl> Binary files a / lib / native / linux - x86 . jar and b / lib / native / linux - x86 . jar differ <nl> diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> old mode 100755 <nl> new mode 100644 <nl> index 7ff3305 . . 67fb60a <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index b026db0 . . 9802f2e 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 50 , 7 + 50 , 7 @ @ OS = $ ( shell uname | sed - e ' s / CYGWIN . * / win32 / g ' \ <nl> - e ' s / AIX . * / aix / g ' \ <nl> - e ' s / Linux . * / linux / g ' ) <nl> <nl> - JNA _ JNI _ VERSION = 4 . 0 . 1 # auto - generated by ant <nl> + JNA _ JNI _ VERSION = 5 . 0 . 1 # auto - generated by ant <nl> CHECKSUM = 4f72f2799dfee6008a386bc40afd7428 # auto - generated by ant <nl> <nl> JAVA _ INCLUDES = - I " $ ( JAVA _ HOME ) / include " \ <nl> diff - - git a / src / com / sun / jna / Version . java b / src / com / sun / jna / Version . java <nl> index 1ff6cfd . . d711d68 100644 <nl> - - - a / src / com / sun / jna / Version . java <nl> + + + b / src / com / sun / jna / Version . java <nl> @ @ - 13 , 5 + 13 , 5 @ @ <nl> package com . sun . jna ; <nl> interface Version { <nl> String VERSION = " 4 . 2 . 0 " ; <nl> - String VERSION _ NATIVE = " 4 . 0 . 1 " ; <nl> + String VERSION _ NATIVE = " 5 . 0 . 1 " ; <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8d085b9 . . e8b8e64 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 34 , 6 + 34 , 7 @ @ Features <nl> * [ # 577 ] ( https : / / github . com / java - native - access / jna / pull / 577 ) : Apply generic definitions wherever applicable - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 569 ] ( https : / / github . com / java - native - access / jna / pull / 569 ) : Added ` com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 2 ` support . Added GetPrinter and ClosePrinter functions in ` com . sun . jna . platform . win32 . Winspool ` - [ @ IvanRF ] ( https : / / github . com / IvanRF ) . <nl> * [ # 583 ] ( https : / / github . com / java - native - access / jna / pull / 583 ) : Added printer attributes and status - [ @ IvanRF ] ( https : / / github . com / IvanRF ) . <nl> + * [ # 589 ] ( https : / / github . com / java - native - access / jna / pull / 589 ) : Use MethodResultContext in direct mapping ( as done in interface mapping ) - [ @ marco2357 ] ( https : / / github . com / marco2357 ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - -
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8871e13 . . c107223 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 40 , 6 + 40 , 7 @ @ Bug Fixes <nl> * [ # 536 ] ( https : / / github . com / java - native - access / jna / pull / 536 ) : Fixed bug in determining the Library and options associated with types defined outside of a Library - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 531 ] ( https : / / github . com / java - native - access / jna / pull / 531 ) : Ensure direct - mapped callbacks use the right calling convention - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 566 ] ( https : / / github . com / java - native - access / jna / pull / 566 ) : Fix return type of Native # loadLibrary to match unconstrained generic [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) <nl> + * [ # 584 ] ( https : / / github . com / java - native - access / jna / pull / 584 ) : Promote float varargs to double - [ @ marco2357 ] ( https : / / github . com / marco2357 ) . <nl> <nl> Release 4 . 2 . 1 <nl> = = = = = = = = = = = = = <nl> diff - - git a / native / testlib . c b / native / testlib . c <nl> index 5cdb681 . . def7eb9 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 872 , 7 + 872 , 8 @ @ addInt32VarArgs ( const char * fmt , . . . ) { <nl> case ' c ' : <nl> sum + = ( int ) va _ arg ( ap , int ) ; <nl> break ; <nl> - case ' f ' : <nl> + case ' f ' : / / float ( promoted to ‘ double ’ when passed through ‘ . . . ’ ) <nl> + case ' F ' : / / double <nl> sum + = va _ arg ( ap , double ) ; <nl> break ; <nl> default : <nl> diff - - git a / test / com / sun / jna / VarArgsTest . java b / test / com / sun / jna / VarArgsTest . java <nl> index dd67266 . . 2654831 100644 <nl> - - - a / test / com / sun / jna / VarArgsTest . java <nl> + + + b / test / com / sun / jna / VarArgsTest . java <nl> @ @ - 70 , 7 + 70 , 7 @ @ public class VarArgsTest extends TestCase { <nl> double arg1 = 1 ; <nl> double arg2 = 2 ; <nl> assertEquals ( " VarArgs not added correctly " , ( int ) arg1 + ( int ) arg2 , <nl> - lib . addInt32VarArgs ( " ff " , Double . valueOf ( arg1 ) , Double . valueOf ( arg2 ) ) ) ; <nl> + lib . addInt32VarArgs ( " FF " , Double . valueOf ( arg1 ) , Double . valueOf ( arg2 ) ) ) ; <nl> } <nl> public void testStringVarArgs ( ) { <nl> Object [ ] args = new Object [ ] { " Test " } ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8871e13 . . 654383a 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 33 , 6 + 33 , 7 @ @ Features <nl> * [ # 574 ] ( https : / / github . com / java - native - access / jna / pull / 574 ) : Using static final un - modifiable List of field names for structure ( s ) - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 577 ] ( https : / / github . com / java - native - access / jna / pull / 577 ) : Apply generic definitions wherever applicable - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 569 ] ( https : / / github . com / java - native - access / jna / pull / 569 ) : Added ` com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 2 ` support . Added GetPrinter and ClosePrinter functions in ` com . sun . jna . platform . win32 . Winspool ` - [ @ IvanRF ] ( https : / / github . com / IvanRF ) . <nl> + * [ # 583 ] ( https : / / github . com / java - native - access / jna / pull / 583 ) : Added printer attributes and status - [ @ IvanRF ] ( https : / / github . com / IvanRF ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Winspool . java b / contrib / platform / src / com / sun / jna / platform / win32 / Winspool . java <nl> index 0acbbb3 . . bb92918 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Winspool . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Winspool . java <nl> @ @ - 40 , 60 + 40 , 108 @ @ public interface Winspool extends StdCallLibrary { <nl> <nl> Winspool INSTANCE = Native . loadLibrary ( " Winspool . drv " , Winspool . class , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> <nl> - int CCHDEVICENAME = 32 ; <nl> - <nl> - int PRINTER _ CHANGE _ ADD _ PRINTER = 0x00000001 ; <nl> - int PRINTER _ CHANGE _ SET _ PRINTER = 0x00000002 ; <nl> - int PRINTER _ CHANGE _ DELETE _ PRINTER = 0x00000004 ; <nl> - int PRINTER _ CHANGE _ FAILED _ CONNECTION _ PRINTER = 0x00000008 ; <nl> - int PRINTER _ CHANGE _ PRINTER = 0x000000FF ; <nl> - int PRINTER _ CHANGE _ ADD _ JOB = 0x00000100 ; <nl> - int PRINTER _ CHANGE _ SET _ JOB = 0x00000200 ; <nl> - int PRINTER _ CHANGE _ DELETE _ JOB = 0x00000400 ; <nl> - int PRINTER _ CHANGE _ WRITE _ JOB = 0x00000800 ; <nl> - int PRINTER _ CHANGE _ JOB = 0x0000FF00 ; <nl> - int PRINTER _ CHANGE _ ADD _ FORM = 0x00010000 ; <nl> - int PRINTER _ CHANGE _ SET _ FORM = 0x00020000 ; <nl> - int PRINTER _ CHANGE _ DELETE _ FORM = 0x00040000 ; <nl> - int PRINTER _ CHANGE _ FORM = 0x00070000 ; <nl> - int PRINTER _ CHANGE _ ADD _ PORT = 0x00100000 ; <nl> - int PRINTER _ CHANGE _ CONFIGURE _ PORT = 0x00200000 ; <nl> - int PRINTER _ CHANGE _ DELETE _ PORT = 0x00400000 ; <nl> - int PRINTER _ CHANGE _ PORT = 0x00700000 ; <nl> - int PRINTER _ CHANGE _ ADD _ PRINT _ PROCESSOR = 0x01000000 ; <nl> - int PRINTER _ CHANGE _ DELETE _ PRINT _ PROCESSOR = 0x04000000 ; <nl> - int PRINTER _ CHANGE _ PRINT _ PROCESSOR = 0x07000000 ; <nl> - int PRINTER _ CHANGE _ SERVER = 0x08000000 ; <nl> - int PRINTER _ CHANGE _ ADD _ PRINTER _ DRIVER = 0x10000000 ; <nl> - int PRINTER _ CHANGE _ SET _ PRINTER _ DRIVER = 0x20000000 ; <nl> - int PRINTER _ CHANGE _ DELETE _ PRINTER _ DRIVER = 0x40000000 ; <nl> - int PRINTER _ CHANGE _ PRINTER _ DRIVER = 0x70000000 ; <nl> - int PRINTER _ CHANGE _ TIMEOUT = 0x80000000 ; <nl> - int PRINTER _ CHANGE _ ALL _ WIN7 = 0x7F77FFFF ; <nl> - int PRINTER _ CHANGE _ ALL = 0x7777FFFF ; <nl> - <nl> - int PRINTER _ ENUM _ DEFAULT = 0x00000001 ; <nl> - int PRINTER _ ENUM _ LOCAL = 0x00000002 ; <nl> - int PRINTER _ ENUM _ CONNECTIONS = 0x00000004 ; <nl> - int PRINTER _ ENUM _ FAVORITE = 0x00000004 ; <nl> - int PRINTER _ ENUM _ NAME = 0x00000008 ; <nl> - int PRINTER _ ENUM _ REMOTE = 0x00000010 ; <nl> - int PRINTER _ ENUM _ SHARED = 0x00000020 ; <nl> - int PRINTER _ ENUM _ NETWORK = 0x00000040 ; <nl> - <nl> - int PRINTER _ ENUM _ EXPAND = 0x00004000 ; <nl> - int PRINTER _ ENUM _ CONTAINER = 0x00008000 ; <nl> - <nl> - int PRINTER _ ENUM _ ICONMASK = 0x00ff0000 ; <nl> - int PRINTER _ ENUM _ ICON1 = 0x00010000 ; <nl> - int PRINTER _ ENUM _ ICON2 = 0x00020000 ; <nl> - int PRINTER _ ENUM _ ICON3 = 0x00040000 ; <nl> - int PRINTER _ ENUM _ ICON4 = 0x00080000 ; <nl> - int PRINTER _ ENUM _ ICON5 = 0x00100000 ; <nl> - int PRINTER _ ENUM _ ICON6 = 0x00200000 ; <nl> - int PRINTER _ ENUM _ ICON7 = 0x00400000 ; <nl> - int PRINTER _ ENUM _ ICON8 = 0x00800000 ; <nl> - int PRINTER _ ENUM _ HIDE = 0x01000000 ; <nl> + 	 public static final int CCHDEVICENAME = 32 ; <nl> + <nl> + 	 public static final int PRINTER _ STATUS _ PAUSED = 0x00000001 ; <nl> + 	 public static final int PRINTER _ STATUS _ ERROR = 0x00000002 ; <nl> + 	 public static final int PRINTER _ STATUS _ PENDING _ DELETION = 0x00000004 ; <nl> + 	 public static final int PRINTER _ STATUS _ PAPER _ JAM = 0x00000008 ; <nl> + 	 public static final int PRINTER _ STATUS _ PAPER _ OUT = 0x00000010 ; <nl> + 	 public static final int PRINTER _ STATUS _ MANUAL _ FEED = 0x00000020 ; <nl> + 	 public static final int PRINTER _ STATUS _ PAPER _ PROBLEM = 0x00000040 ; <nl> + 	 public static final int PRINTER _ STATUS _ OFFLINE = 0x00000080 ; <nl> + 	 public static final int PRINTER _ STATUS _ IO _ ACTIVE = 0x00000100 ; <nl> + 	 public static final int PRINTER _ STATUS _ BUSY = 0x00000200 ; <nl> + 	 public static final int PRINTER _ STATUS _ PRINTING = 0x00000400 ; <nl> + 	 public static final int PRINTER _ STATUS _ OUTPUT _ BIN _ FULL = 0x00000800 ; <nl> + 	 public static final int PRINTER _ STATUS _ NOT _ AVAILABLE = 0x00001000 ; <nl> + 	 public static final int PRINTER _ STATUS _ WAITING = 0x00002000 ; <nl> + 	 public static final int PRINTER _ STATUS _ PROCESSING = 0x00004000 ; <nl> + 	 public static final int PRINTER _ STATUS _ INITIALIZING = 0x00008000 ; <nl> + 	 public static final int PRINTER _ STATUS _ WARMING _ UP = 0x00010000 ; <nl> + 	 public static final int PRINTER _ STATUS _ TONER _ LOW = 0x00020000 ; <nl> + 	 public static final int PRINTER _ STATUS _ NO _ TONER = 0x00040000 ; <nl> + 	 public static final int PRINTER _ STATUS _ PAGE _ PUNT = 0x00080000 ; <nl> + 	 public static final int PRINTER _ STATUS _ USER _ INTERVENTION = 0x00100000 ; <nl> + 	 public static final int PRINTER _ STATUS _ OUT _ OF _ MEMORY = 0x00200000 ; <nl> + 	 public static final int PRINTER _ STATUS _ DOOR _ OPEN = 0x00400000 ; <nl> + 	 public static final int PRINTER _ STATUS _ SERVER _ UNKNOWN = 0x00800000 ; <nl> + 	 public static final int PRINTER _ STATUS _ POWER _ SAVE = 0x01000000 ; <nl> + <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ QUEUED = 0x00000001 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ DIRECT = 0x00000002 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ DEFAULT = 0x00000004 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ SHARED = 0x00000008 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ NETWORK = 0x00000010 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ HIDDEN = 0x00000020 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ LOCAL = 0x00000040 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ ENABLE _ DEVQ = 0x00000080 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ KEEPPRINTEDJOBS = 0x00000100 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ DO _ COMPLETE _ FIRST = 0x00000200 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ WORK _ OFFLINE = 0x00000400 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ ENABLE _ BIDI = 0x00000800 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ RAW _ ONLY = 0x00001000 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ PUBLISHED = 0x00002000 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ FAX = 0x00004000 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ TS = 0x00008000 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ PUSHED _ USER = 0x00020000 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ PUSHED _ MACHINE = 0x00040000 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ MACHINE = 0x00080000 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ FRIENDLY _ NAME = 0x00100000 ; <nl> + 	 public static final int PRINTER _ ATTRIBUTE _ TS _ GENERIC _ DRIVER = 0x00200000 ; <nl> + <nl> + 	 public static final int PRINTER _ CHANGE _ ADD _ PRINTER = 0x00000001 ; <nl> + 	 public static final int PRINTER _ CHANGE _ SET _ PRINTER = 0x00000002 ; <nl> + 	 public static final int PRINTER _ CHANGE _ DELETE _ PRINTER = 0x00000004 ; <nl> + 	 public static final int PRINTER _ CHANGE _ FAILED _ CONNECTION _ PRINTER = 0x00000008 ; <nl> + 	 public static final int PRINTER _ CHANGE _ PRINTER = 0x000000FF ; <nl> + 	 public static final int PRINTER _ CHANGE _ ADD _ JOB = 0x00000100 ; <nl> + 	 public static final int PRINTER _ CHANGE _ SET _ JOB = 0x00000200 ; <nl> + 	 public static final int PRINTER _ CHANGE _ DELETE _ JOB = 0x00000400 ; <nl> + 	 public static final int PRINTER _ CHANGE _ WRITE _ JOB = 0x00000800 ; <nl> + 	 public static final int PRINTER _ CHANGE _ JOB = 0x0000FF00 ; <nl> + 	 public static final int PRINTER _ CHANGE _ ADD _ FORM = 0x00010000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ SET _ FORM = 0x00020000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ DELETE _ FORM = 0x00040000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ FORM = 0x00070000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ ADD _ PORT = 0x00100000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ CONFIGURE _ PORT = 0x00200000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ DELETE _ PORT = 0x00400000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ PORT = 0x00700000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ ADD _ PRINT _ PROCESSOR = 0x01000000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ DELETE _ PRINT _ PROCESSOR = 0x04000000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ PRINT _ PROCESSOR = 0x07000000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ SERVER = 0x08000000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ ADD _ PRINTER _ DRIVER = 0x10000000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ SET _ PRINTER _ DRIVER = 0x20000000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ DELETE _ PRINTER _ DRIVER = 0x40000000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ PRINTER _ DRIVER = 0x70000000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ TIMEOUT = 0x80000000 ; <nl> + 	 public static final int PRINTER _ CHANGE _ ALL _ WIN7 = 0x7F77FFFF ; <nl> + 	 public static final int PRINTER _ CHANGE _ ALL = 0x7777FFFF ; <nl> + <nl> + 	 public static final int PRINTER _ ENUM _ DEFAULT = 0x00000001 ; <nl> + 	 public static final int PRINTER _ ENUM _ LOCAL = 0x00000002 ; <nl> + 	 public static final int PRINTER _ ENUM _ CONNECTIONS = 0x00000004 ; <nl> + 	 public static final int PRINTER _ ENUM _ FAVORITE = 0x00000004 ; <nl> + 	 public static final int PRINTER _ ENUM _ NAME = 0x00000008 ; <nl> + 	 public static final int PRINTER _ ENUM _ REMOTE = 0x00000010 ; <nl> + 	 public static final int PRINTER _ ENUM _ SHARED = 0x00000020 ; <nl> + 	 public static final int PRINTER _ ENUM _ NETWORK = 0x00000040 ; <nl> + <nl> + 	 public static final int PRINTER _ ENUM _ EXPAND = 0x00004000 ; <nl> + 	 public static final int PRINTER _ ENUM _ CONTAINER = 0x00008000 ; <nl> + <nl> + 	 public static final int PRINTER _ ENUM _ ICONMASK = 0x00ff0000 ; <nl> + 	 public static final int PRINTER _ ENUM _ ICON1 = 0x00010000 ; <nl> + 	 public static final int PRINTER _ ENUM _ ICON2 = 0x00020000 ; <nl> + 	 public static final int PRINTER _ ENUM _ ICON3 = 0x00040000 ; <nl> + 	 public static final int PRINTER _ ENUM _ ICON4 = 0x00080000 ; <nl> + 	 public static final int PRINTER _ ENUM _ ICON5 = 0x00100000 ; <nl> + 	 public static final int PRINTER _ ENUM _ ICON6 = 0x00200000 ; <nl> + 	 public static final int PRINTER _ ENUM _ ICON7 = 0x00400000 ; <nl> + 	 public static final int PRINTER _ ENUM _ ICON8 = 0x00800000 ; <nl> + 	 public static final int PRINTER _ ENUM _ HIDE = 0x01000000 ; <nl> <nl> / * * <nl> * The EnumPrinters function enumerates available printers , print servers , <nl> @ @ - 388 , 6 + 436 , 13 @ @ public interface Winspool extends StdCallLibrary { <nl> protected List < String > getFieldOrder ( ) { <nl> return FIELDS ; <nl> } <nl> + <nl> + 	 	 / * * <nl> + 	 	 * Checks if the printer attributes have one of the values PRINTER _ ATTRIBUTE _ XXX . <nl> + 	 	 * / <nl> + 	 	 public boolean hasAttribute ( int value ) { <nl> + 	 	 	 return ( Attributes & value ) = = value ; <nl> + 	 	 } <nl> 	 } <nl> <nl> 	 / * *
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java b / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> index 4af5eb2 . . 95d8b7a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> @ @ - 228 , 6 + 228 , 7 @ @ public interface Winsvc { <nl> * / <nl> public class SERVICE _ FAILURE _ ACTIONS extends ChangeServiceConfig2Info { <nl> public static class ByReference extends SERVICE _ FAILURE _ ACTIONS implements Structure . ByReference { } <nl> + <nl> / * * <nl> * The time after which to reset the failure count to zero if there are no failures , in <nl> * seconds . Specify INFINITE to indicate that this value should never be reset . <nl> @ @ - 274 , 8 + 275 , 11 @ @ public interface Winsvc { <nl> read ( ) ; <nl> } <nl> <nl> + public static final List < String > FIELDS = createFieldsOrder ( " dwResetPeriod " , " lpRebootMsg " , " lpCommand " , " cActions " , " lpsaActions " ) ; <nl> + <nl> + @ Override <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " dwResetPeriod " , " lpRebootMsg " , " lpCommand " , " cActions " , " lpsaActions " } ) ; <nl> + return FIELDS ; <nl> } <nl> } <nl> <nl> @ @ - 294 , 8 + 298 , 11 @ @ public interface Winsvc { <nl> * / <nl> public int delay ; <nl> <nl> + public static final List < String > FIELDS = createFieldsOrder ( " type " , " delay " ) ; <nl> + <nl> + @ Override <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " type " , " delay " } ) ; <nl> + return FIELDS ; <nl> } <nl> } <nl> <nl> @ @ - 317 , 8 + 324 , 11 @ @ public interface Winsvc { <nl> * / <nl> public int fFailureActionsOnNonCrashFailures ; <nl> <nl> + public static final List < String > FIELDS = createFieldsOrder ( " fFailureActionsOnNonCrashFailures " ) ; <nl> + <nl> + @ Override <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " fFailureActionsOnNonCrashFailures " } ) ; <nl> + return FIELDS ; <nl> } <nl> <nl> public SERVICE _ FAILURE _ ACTIONS _ FLAG ( ) {
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> index 5bda7a8 . . 4fe6805 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> @ @ - 81 , 7 + 81 , 7 @ @ public interface IDispatch extends IUnknown { <nl> * @ param lcid The locale context in which to interpret the names . <nl> * @ param rgDispId Caller - allocated array , each element of which contains an identifier ( ID ) corresponding to one of the names passed in <nl> * the rgszNames array . The first element represents the member name . The subsequent elements represent each of the member ' s parameters . <nl> - * @ return <nl> + * @ return status of the operation <nl> * / <nl> public HRESULT GetIDsOfNames ( REFIID riid , WString [ ] rgszNames , int cNames , <nl> LCID lcid , DISPIDByReference rgDispId ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Wininet . java b / contrib / platform / src / com / sun / jna / platform / win32 / Wininet . java <nl> index e1c4c59 . . fdc9c0b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Wininet . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Wininet . java <nl> @ @ - 198 , 8 + 198 , 7 @ @ public interface Wininet extends StdCallLibrary { <nl> * < / code > <nl> * < / pre > <nl> * <nl> - * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa385134 ( v = <nl> - * vs . 85 ) . aspx <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa385134 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> * / <nl> static class INTERNET _ CACHE _ ENTRY _ INFO extends Structure { <nl> public static final List < String > FIELDS = createFieldsOrder ( <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 25f820a . . d960223 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 549 , 7 + 549 , 7 @ @ public final class Native implements Version { <nl> * all ancestor classes and interfaces for a declaring class which <nl> * implements { @ link Library } . <nl> * @ param cls The given class <nl> - * @ param Tge enclosing class <nl> + * @ return The enclosing class <nl> * / <nl> static Class < ? > findEnclosingLibraryClass ( Class < ? > cls ) { <nl> if ( cls = = null ) { <nl> @ @ - 1188 , 8 + 1188 , 8 @ @ public final class Native implements Version { <nl> } <nl> <nl> / * * <nl> - * @ param The type class <nl> - * @ param The object instance <nl> + * @ param type The Java class for which the native size is to be determined <nl> + * @ param value an instance of said class ( if available ) <nl> * @ return the native size of the given class , in bytes . <nl> * For use with arrays . <nl> * / <nl> @ @ - 1257 , 7 + 1257 , 7 @ @ public final class Native implements Version { <nl> <nl> / * * <nl> * @ param cls The Java class <nl> - * @ return { @ code true ) whether the given class is supported as a native argument type . <nl> + * @ return { @ code true } whether the given class is supported as a native argument type . <nl> * / <nl> public static boolean isSupportedNativeType ( Class < ? > cls ) { <nl> if ( Structure . class . isAssignableFrom ( cls ) ) {
diff - - git a / CHANGES . md b / CHANGES . md <nl> index e25c3e6 . . f07408d 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 29 , 7 + 29 , 7 @ @ Features <nl> * [ # 562 ] ( https : / / github . com / java - native - access / jna / pull / 562 ) : Added ` com . sun . jna . platform . win32 . VersionUtil ` with ` getFileVersionInfo ` utility method to get file major , minor , revision , and build version parts - [ @ mlfreeman2 ] ( https : / / github . com / mlfreeman2 ) . <nl> * [ # 563 ] ( https : / / github . com / java - native - access / jna / pull / 563 ) : Added ` com . sun . jna . platform . win32 . Wininet ` with the following 4 methods : ` FindFirstUrlCacheEntry ` , ` DeleteUrlCacheEntry ` , ` FindCloseUrlCache ` , ` FindNextUrlCacheEntry ` , and the ` INTERNET _ CACHE _ ENTRY _ INFO ` structure , and a helper in ` com . sun . jna . platform . win32 . WininetUtil ` for parsing WinInet ' s cache - [ @ mlfreeman2 ] ( https : / / github . com / mlfreeman2 ) . <nl> * [ # 567 ] ( https : / / github . com / java - native - access / jna / pull / 567 ) : Added ` PrintWindow ` , ` IsWindowEnabled ` , ` IsWindow ` , ` FindWindowEx ` , ` GetAncestor ` , ` GetCursorPos ` , ` SetCursorPos ` , ` SetWinEventHook ` , ` UnhookWinEvent ` , ` CopyIcon ` , and ` GetClassLong ` to ` com . sun . jna . platform . win32 . User32 ` and supporting constants to ` com . sun . jna . platform . win32 . WinUser ` - [ @ mlfreeman2 ] ( https : / / github . com / mlfreeman2 ) . <nl> - <nl> + * [ # 573 ] ( https : / / github . com / java - native - access / jna / pull / 573 ) : Added ` EnumProcessModules ` , ` GetModuleInformation ` , and ` GetProcessImageFileName ` to ` com . sun . jna . platform . win32 . Psapi ` and added ` ExtractIconEx ` to ` com . sun . jna . platform . win32 . Shell32 ` - [ @ mlfreeman2 ] ( https : / / github . com / mlfreeman2 ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Psapi . java b / contrib / platform / src / com / sun / jna / platform / win32 / Psapi . java <nl> index 50b1426 . . 72a2136 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Psapi . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Psapi . java <nl> @ @ - 12 , 9 + 12 , 15 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> + import com . sun . jna . Structure ; <nl> + import com . sun . jna . platform . win32 . WinDef . HMODULE ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> + import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . win32 . StdCallLibrary ; <nl> import com . sun . jna . win32 . W32APIOptions ; <nl> <nl> @ @ - 26 , 77 + 32 , 217 @ @ import com . sun . jna . win32 . W32APIOptions ; <nl> * @ author Andreas " PAX " L & uuml ; ck , onkelpax - git [ at ] yahoo . de <nl> * / <nl> public interface Psapi extends StdCallLibrary { <nl> - 	 Psapi INSTANCE = Native . loadLibrary ( " psapi " , Psapi . class , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> - 	 <nl> - 	 / * * <nl> - 	 * Retrieves the fully qualified path for the file containing the specified <nl> - 	 * module . <nl> - 	 * <nl> - 	 * @ param process <nl> - 	 * A handle to the process that contains the module . <nl> - 	 * @ param module <nl> - 	 * A handle to the module . If this parameter is NULL , <nl> - 	 * GetModuleFileNameEx returns the path of the executable file of <nl> - 	 * the process specified in hProcess . <nl> - 	 * @ param lpFilename <nl> - 	 * A pointer to a buffer that receives the fully qualified path <nl> - 	 * to the module . If the size of the file name is larger than the <nl> - 	 * value of the nSize parameter , the function succeeds but the <nl> - 	 * file name is truncated and null - terminated . <nl> - 	 * @ param nSize <nl> - 	 * The size of the lpFilename buffer , in characters . <nl> - 	 * @ return If the function succeeds , the return value specifies the length <nl> - 	 * of the string copied to the buffer . If the function fails , the <nl> - 	 * return value is zero . To get extended error information , call <nl> - 	 * { @ link Kernel32Util # getLastErrorMessage ( ) } . <nl> - 	 * / <nl> - 	 int GetModuleFileNameExA ( HANDLE process , HANDLE module , byte [ ] lpFilename , int nSize ) ; <nl> - 	 <nl> - 	 / * * <nl> - 	 * Retrieves the fully qualified path for the file containing the specified <nl> - 	 * module . <nl> - 	 * <nl> - 	 * @ param process <nl> - 	 * A handle to the process that contains the module . <nl> - 	 * @ param module <nl> - 	 * A handle to the module . If this parameter is NULL , <nl> - 	 * GetModuleFileNameEx returns the path of the executable file of <nl> - 	 * the process specified in hProcess . <nl> - 	 * @ param lpFilename <nl> - 	 * A pointer to a buffer that receives the fully qualified path <nl> - 	 * to the module . If the size of the file name is larger than the <nl> - 	 * value of the nSize parameter , the function succeeds but the <nl> - 	 * file name is truncated and null - terminated . <nl> - 	 * @ param nSize <nl> - 	 * The size of the lpFilename buffer , in characters . <nl> - 	 * @ return If the function succeeds , the return value specifies the length <nl> - 	 * of the string copied to the buffer . If the function fails , the <nl> - 	 * return value is zero . To get extended error information , call <nl> - 	 * { @ link Kernel32Util # getLastErrorMessage ( ) } . <nl> - 	 * / <nl> - 	 int GetModuleFileNameExW ( HANDLE process , HANDLE module , char [ ] lpFilename , int nSize ) ; <nl> + Psapi INSTANCE = Native . loadLibrary ( " psapi " , Psapi . class , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> + <nl> + / * * <nl> + * Retrieves the fully qualified path for the file containing the specified <nl> + * module . <nl> + * <nl> + * @ param process <nl> + * A handle to the process that contains the module . <nl> + * @ param module <nl> + * A handle to the module . If this parameter is NULL , <nl> + * GetModuleFileNameEx returns the path of the executable file of <nl> + * the process specified in hProcess . <nl> + * @ param lpFilename <nl> + * A pointer to a buffer that receives the fully qualified path <nl> + * to the module . If the size of the file name is larger than the <nl> + * value of the nSize parameter , the function succeeds but the <nl> + * file name is truncated and null - terminated . <nl> + * @ param nSize <nl> + * The size of the lpFilename buffer , in characters . <nl> + * @ return If the function succeeds , the return value specifies the length <nl> + * of the string copied to the buffer . If the function fails , the <nl> + * return value is zero . To get extended error information , call <nl> + * { @ link Kernel32Util # getLastErrorMessage ( ) } . <nl> + * / <nl> + int GetModuleFileNameExA ( HANDLE process , HANDLE module , byte [ ] lpFilename , int nSize ) ; <nl> + <nl> + / * * <nl> + * Retrieves the fully qualified path for the file containing the specified <nl> + * module . <nl> + * <nl> + * @ param process <nl> + * A handle to the process that contains the module . <nl> + * @ param module <nl> + * A handle to the module . If this parameter is NULL , <nl> + * GetModuleFileNameEx returns the path of the executable file of <nl> + * the process specified in hProcess . <nl> + * @ param lpFilename <nl> + * A pointer to a buffer that receives the fully qualified path <nl> + * to the module . If the size of the file name is larger than the <nl> + * value of the nSize parameter , the function succeeds but the <nl> + * file name is truncated and null - terminated . <nl> + * @ param nSize <nl> + * The size of the lpFilename buffer , in characters . <nl> + * @ return If the function succeeds , the return value specifies the length <nl> + * of the string copied to the buffer . If the function fails , the <nl> + * return value is zero . To get extended error information , call <nl> + * { @ link Kernel32Util # getLastErrorMessage ( ) } . <nl> + * / <nl> + int GetModuleFileNameExW ( HANDLE process , HANDLE module , char [ ] lpFilename , int nSize ) ; <nl> + <nl> + / * * <nl> + * Retrieves the fully qualified path for the file containing the specified <nl> + * module . <nl> + * <nl> + * @ param process <nl> + * A handle to the process that contains the module . <nl> + * @ param module <nl> + * A handle to the module . If this parameter is NULL , <nl> + * GetModuleFileNameEx returns the path of the executable file of <nl> + * the process specified in hProcess . <nl> + * @ param lpFilename <nl> + * A pointer to a buffer that receives the fully qualified path <nl> + * to the module . If the size of the file name is larger than the <nl> + * value of the nSize parameter , the function succeeds but the <nl> + * file name is truncated and null - terminated . <nl> + * @ param nSize <nl> + * The size of the lpFilename buffer , in characters . <nl> + * @ return If the function succeeds , the return value specifies the length <nl> + * of the string copied to the buffer . If the function fails , the <nl> + * return value is zero . To get extended error information , call <nl> + * { @ link Kernel32Util # getLastErrorMessage ( ) } . <nl> + * / <nl> + int GetModuleFileNameEx ( HANDLE process , HANDLE module , Pointer lpFilename , int nSize ) ; <nl> + <nl> + / * * <nl> + * <nl> + * The EnumProcessModules function is primarily designed for use by <nl> + * debuggers and similar applications that must extract module information <nl> + * from another process . < br > <nl> + * If the module list in the target process is corrupted or not yet <nl> + * initialized , or if the module list changes during the function call as a <nl> + * result of DLLs being loaded or unloaded , EnumProcessModules may fail or <nl> + * return incorrect information . < br > <nl> + * It is a good idea to specify a large array of HMODULE values , because it <nl> + * is hard to predict how many modules there will be in the process at the <nl> + * time you call EnumProcessModules . < br > <nl> + * To determine if the lphModule array is too small to hold all module <nl> + * handles for the process , compare the value returned in lpcbNeeded with <nl> + * the value specified in cb . < br > <nl> + * If lpcbNeeded is greater than cb , increase the size of the array and call <nl> + * EnumProcessModules again . To determine how many modules were enumerated <nl> + * by the call to EnumProcessModules , divide the resulting value in the <nl> + * lpcbNeeded parameter by sizeof ( HMODULE ) . < br > <nl> + * The EnumProcessModules function does not retrieve handles for modules <nl> + * that were loaded with the LOAD _ LIBRARY _ AS _ DATAFILE or similar flags . For <nl> + * more information , see LoadLibraryEx . < br > <nl> + * Do not call CloseHandle on any of the handles returned by this function . <nl> + * The information comes from a snapshot , so there are no resources to be <nl> + * freed . < br > <nl> + * If this function is called from a 32 - bit application running on WOW64 , it <nl> + * can only enumerate the modules of a 32 - bit process . < br > <nl> + * If the process is a 64 - bit process , this function fails and the last <nl> + * error code is ERROR _ PARTIAL _ COPY ( 299 ) . < br > <nl> + * To take a snapshot of specified processes and the heaps , modules , and <nl> + * threads used by these processes , use the CreateToolhelp32Snapshot <nl> + * function . < br > <nl> + * Starting with Windows 7 and Windows Server 2008 R2 , Psapi . h establishes <nl> + * version numbers for the PSAPI functions . < br > <nl> + * The PSAPI version number affects the name used to call the function and <nl> + * the library that a program must load . < br > <nl> + * If PSAPI _ VERSION is 2 or greater , this function is defined as <nl> + * K32EnumProcessModules in Psapi . h and exported in Kernel32 . lib and <nl> + * Kernel32 . dll . < br > <nl> + * If PSAPI _ VERSION is 1 , this function is defined as EnumProcessModules in <nl> + * Psapi . h and exported in Psapi . lib and Psapi . dll as a wrapper that calls <nl> + * K32EnumProcessModules . < br > <nl> + * Programs that must run on earlier versions of Windows as well as Windows <nl> + * 7 and later versions should always call this function as <nl> + * EnumProcessModules . < br > <nl> + * To ensure correct resolution of symbols , add Psapi . lib to the TARGETLIBS <nl> + * macro and compile the program with - DPSAPI _ VERSION = 1 . < br > <nl> + * To use run - time dynamic linking , load Psapi . dll . <nl> + * <nl> + * @ param hProcess <nl> + * A handle to the process . <nl> + * @ param lphModule <nl> + * An array that receives the list of module handles . <nl> + * @ param cb <nl> + * The size of the lphModule array , in bytes . <nl> + * @ param lpcbNeeded <nl> + * The number of bytes required to store all module handles in <nl> + * the lphModule array . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . To get extended error <nl> + * information , call GetLastError . <nl> + * @ see < a href = " http : / / msdn . microsoft . com / en - us / library / ms682631 ( VS . 85 ) . aspx " > MSDN / a > <nl> + * / <nl> + boolean EnumProcessModules ( HANDLE hProcess , HMODULE [ ] lphModule , int cb , IntByReference lpcbNeeded ) ; <nl> + <nl> + / * * <nl> + * To get information for the calling process , pass the handle returned by <nl> + * GetCurrentProcess . < br > <nl> + * The GetModuleInformation function does not retrieve information for <nl> + * modules that were loaded with the LOAD _ LIBRARY _ AS _ DATAFILE flag . < br > <nl> + * For more information , see LoadLibraryEx . < br > <nl> + * Starting with Windows 7 and Windows Server 2008 R2 , Psapi . h establishes <nl> + * version numbers for the PSAPI functions . < br > <nl> + * The PSAPI version number affects the name used to call the function and <nl> + * the library that a program must load . < br > <nl> + * If PSAPI _ VERSION is 2 or greater , this function is defined as <nl> + * K32GetModuleInformation in Psapi . h and exported in Kernel32 . lib and <nl> + * Kernel32 . dll . < br > <nl> + * If PSAPI _ VERSION is 1 , this function is defined as <nl> + * K32GetModuleInformation in Psapi . h and exported in Psapi . lib and <nl> + * Psapi . dll as a wrapper that calls K32GetModuleInformation . < br > <nl> + * Programs that must run on earlier versions of Windows as well as Windows <nl> + * 7 and later versions should always call this function as <nl> + * K32GetModuleInformation . < br > <nl> + * To ensure correct resolution of symbols , add Psapi . lib to the TARGETLIBS <nl> + * macro and compile the program with - DPSAPI _ VERSION = 1 . < br > <nl> + * To use run - time dynamic linking , load Psapi . dll . <nl> + * <nl> + * @ param hProcess <nl> + * A handle to the process that contains the module . The handle <nl> + * must have the PROCESS _ QUERY _ INFORMATION and PROCESS _ VM _ READ <nl> + * access rights . For more information , see Process Security and <nl> + * Access Rights . <nl> + * @ param hModule <nl> + * A handle to the module . <nl> + * <nl> + * @ param lpmodinfo <nl> + * A pointer to the MODULEINFO structure that receives <nl> + * information about the module . <nl> + * @ param cb <nl> + * The size of the MODULEINFO structure , in bytes . <nl> + * @ return If the function succeeds , the return value is nonzero . If the <nl> + * function fails , the return value is zero . To get extended error <nl> + * information , call GetLastError . <nl> + * @ see < a href = " http : / / msdn . microsoft . com / en - us / library / ms683201 ( VS . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + boolean GetModuleInformation ( HANDLE hProcess , HMODULE hModule , MODULEINFO lpmodinfo , int cb ) ; <nl> + <nl> + / * * <nl> + * @ param hProcess <nl> + * A handle to the process . The handle must have the <nl> + * PROCESS _ QUERY _ INFORMATION or PROCESS _ QUERY _ LIMITED _ INFORMATION <nl> + * access right . For more information , see Process Security and <nl> + * Access Rights . < br > <nl> + * Windows Server 2003 and Windows XP : The handle must have the <nl> + * PROCESS _ QUERY _ INFORMATION access right . <nl> + * @ param lpImageFileName <nl> + * A pointer to a buffer that receives the full path to the <nl> + * executable file . <nl> + * @ param nSize <nl> + * The size of the lpImageFileName buffer , in characters . <nl> + * @ return If the function succeeds , the return value specifies the length <nl> + * of the string copied to the buffer . If the function fails , the <nl> + * return value is zero . To get extended error information , call <nl> + * GetLastError . <nl> + * @ see < a href = " http : / / msdn . microsoft . com / en - us / library / ms683217 ( VS . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int GetProcessImageFileName ( HANDLE hProcess , char [ ] lpImageFileName , int nSize ) ; <nl> + <nl> + class MODULEINFO extends Structure { <nl> + public Pointer EntryPoint ; <nl> + public Pointer lpBaseOfDll ; <nl> + public int SizeOfImage ; <nl> <nl> - 	 / * * <nl> - 	 * Retrieves the fully qualified path for the file containing the specified <nl> - 	 * module . <nl> - 	 * <nl> - 	 * @ param process <nl> - 	 * A handle to the process that contains the module . <nl> - 	 * @ param module <nl> - 	 * A handle to the module . If this parameter is NULL , <nl> - 	 * GetModuleFileNameEx returns the path of the executable file of <nl> - 	 * the process specified in hProcess . <nl> - 	 * @ param lpFilename <nl> - 	 * A pointer to a buffer that receives the fully qualified path <nl> - 	 * to the module . If the size of the file name is larger than the <nl> - 	 * value of the nSize parameter , the function succeeds but the <nl> - 	 * file name is truncated and null - terminated . <nl> - 	 * @ param nSize <nl> - 	 * The size of the lpFilename buffer , in characters . <nl> - 	 * @ return If the function succeeds , the return value specifies the length <nl> - 	 * of the string copied to the buffer . If the function fails , the <nl> - 	 * return value is zero . To get extended error information , call <nl> - 	 * { @ link Kernel32Util # getLastErrorMessage ( ) } . <nl> - 	 * / <nl> - 	 int GetModuleFileNameEx ( HANDLE process , HANDLE module , Pointer lpFilename , int nSize ) ; <nl> + @ Override <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( new String [ ] { " lpBaseOfDll " , " SizeOfImage " , " EntryPoint " } ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> index 9c560d2 . . eb74a1d 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> @ @ - 15 , 6 + 15 , 7 @ @ package com . sun . jna . platform . win32 ; <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . platform . win32 . Guid . GUID ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> + import com . sun . jna . platform . win32 . WinDef . HICON ; <nl> import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> import com . sun . jna . platform . win32 . WinDef . INT _ PTR ; <nl> import com . sun . jna . platform . win32 . WinDef . UINT _ PTR ; <nl> @ @ - 31 , 41 + 32 , 41 @ @ public interface Shell32 extends ShellAPI , StdCallLibrary { <nl> / * * The instance * * / <nl> Shell32 INSTANCE = Native . loadLibrary ( " shell32 " , Shell32 . class , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> <nl> - 	 / * * <nl> - 	 * No dialog box confirming the deletion of the objects will be displayed . <nl> - 	 * / <nl> - 	 int SHERB _ NOCONFIRMATION = 0x00000001 ; <nl> + / * * <nl> + * No dialog box confirming the deletion of the objects will be displayed . <nl> + * / <nl> + int SHERB _ NOCONFIRMATION = 0x00000001 ; <nl> <nl> - 	 / * * <nl> - 	 * No dialog box indicating the progress will be displayed . <nl> - 	 * / <nl> - 	 int SHERB _ NOPROGRESSUI = 0x00000002 ; <nl> + / * * <nl> + * No dialog box indicating the progress will be displayed . <nl> + * / <nl> + int SHERB _ NOPROGRESSUI = 0x00000002 ; <nl> <nl> - 	 / * * <nl> - 	 * No sound will be played when the operation is complete . <nl> - 	 * / <nl> - 	 int SHERB _ NOSOUND = 0x00000004 ; <nl> + / * * <nl> + * No sound will be played when the operation is complete . <nl> + * / <nl> + int SHERB _ NOSOUND = 0x00000004 ; <nl> <nl> - 	 / * * <nl> - 	 * < p > <nl> - 	 * < strong > SEE _ MASK _ NOCLOSEPROCESS < / strong > ( 0x00000040 ) <nl> - 	 * < / p > <nl> - 	 * < p > <nl> - 	 * Use to indicate that the < strong > hProcess < / strong > member receives the <nl> - 	 * process handle . This handle is typically used to allow an application to <nl> - 	 * find out when a process created with terminates . In some cases , such as <nl> - 	 * when execution is satisfied through a DDE conversation , no handle will be <nl> - 	 * returned . The calling application is responsible for closing the handle <nl> - 	 * when it is no longer needed . <nl> - 	 * < / p > <nl> - 	 * / <nl> - 	 int SEE _ MASK _ NOCLOSEPROCESS = 0x00000040 ; <nl> - 	 <nl> - 	 / * * <nl> - 	 * Do not display an error message box if an error occurs . <nl> - 	 * / <nl> - 	 int SEE _ MASK _ FLAG _ NO _ UI = 0x00000400 ; <nl> - 	 <nl> + / * * <nl> + * < p > <nl> + * < strong > SEE _ MASK _ NOCLOSEPROCESS < / strong > ( 0x00000040 ) <nl> + * < / p > <nl> + * < p > <nl> + * Use to indicate that the < strong > hProcess < / strong > member receives the <nl> + * process handle . This handle is typically used to allow an application to <nl> + * find out when a process created with terminates . In some cases , such as <nl> + * when execution is satisfied through a DDE conversation , no handle will be <nl> + * returned . The calling application is responsible for closing the handle <nl> + * when it is no longer needed . <nl> + * < / p > <nl> + * / <nl> + int SEE _ MASK _ NOCLOSEPROCESS = 0x00000040 ; <nl> + <nl> + / * * <nl> + * Do not display an error message box if an error occurs . <nl> + * / <nl> + int SEE _ MASK _ FLAG _ NO _ UI = 0x00000400 ; <nl> + <nl> / * * <nl> * This function can be used to copy , move , rename , or delete a file system object . <nl> * @ param fileop <nl> @ @ - 239 , 15 + 240 , 15 @ @ public interface Shell32 extends ShellAPI , StdCallLibrary { <nl> * @ param dwMessage <nl> * Appbar message value to send . This parameter can be one of the following values . <nl> * { @ link ShellAPI # ABM _ NEW } Registers a new appbar and specifies the message identifier that the system should use to send notification messages to the appbar . <nl> - * 	 { @ link ShellAPI # ABM _ REMOVE } Unregisters an appbar , removing the bar from the system ' s internal list . <nl> - * 	 { @ link ShellAPI # ABM _ QUERYPOS } Requests a size and screen position for an appbar . <nl> + * { @ link ShellAPI # ABM _ REMOVE } Unregisters an appbar , removing the bar from the system ' s internal list . <nl> + * { @ link ShellAPI # ABM _ QUERYPOS } Requests a size and screen position for an appbar . <nl> * { @ link ShellAPI # ABM _ SETPOS } Sets the size and screen position of an appbar . <nl> - * 	 { @ link ShellAPI # ABM _ GETSTATE } Retrieves the autohide and always - on - top states of the Windows taskbar . <nl> - * 	 { @ link ShellAPI # ABM _ GETTASKBARPOS } Retrieves the bounding rectangle of the Windows taskbar . Note that this applies only to the system taskbar . Other objects , particularly toolbars supplied with third - party software , also can be present . As a result , some of the screen area not covered by the Windows taskbar might not be visible to the user . To retrieve the area of the screen not covered by both the taskbar and other app bars - - the working area available to your application - - , use the GetMonitorInfo function . <nl> - * 	 { @ link ShellAPI # ABM _ ACTIVATE } Notifies the system to activate or deactivate an appbar . The lParam member of the APPBARDATA pointed to by pData is set to TRUE to activate or FALSE to deactivate . <nl> - * 	 { @ link ShellAPI # ABM _ GETAUTOHIDEBAR } Retrieves the handle to the autohide appbar associated with a particular edge of the screen . <nl> - * 	 { @ link ShellAPI # ABM _ SETAUTOHIDEBAR } Registers or unregisters an autohide appbar for an edge of the screen . <nl> - * 	 { @ link ShellAPI # ABM _ WINDOWPOSCHANGED } Notifies the system when an appbar ' s position has changed . <nl> + * { @ link ShellAPI # ABM _ GETSTATE } Retrieves the autohide and always - on - top states of the Windows taskbar . <nl> + * { @ link ShellAPI # ABM _ GETTASKBARPOS } Retrieves the bounding rectangle of the Windows taskbar . Note that this applies only to the system taskbar . Other objects , particularly toolbars supplied with third - party software , also can be present . As a result , some of the screen area not covered by the Windows taskbar might not be visible to the user . To retrieve the area of the screen not covered by both the taskbar and other app bars - - the working area available to your application - - , use the GetMonitorInfo function . <nl> + * { @ link ShellAPI # ABM _ ACTIVATE } Notifies the system to activate or deactivate an appbar . The lParam member of the APPBARDATA pointed to by pData is set to TRUE to activate or FALSE to deactivate . <nl> + * { @ link ShellAPI # ABM _ GETAUTOHIDEBAR } Retrieves the handle to the autohide appbar associated with a particular edge of the screen . <nl> + * { @ link ShellAPI # ABM _ SETAUTOHIDEBAR } Registers or unregisters an autohide appbar for an edge of the screen . <nl> + * { @ link ShellAPI # ABM _ WINDOWPOSCHANGED } Notifies the system when an appbar ' s position has changed . <nl> * { @ link ShellAPI # ABM _ SETSTATE } Windows XP and later : Sets the state of the appbar ' s autohide and always - on - top attributes . <nl> * <nl> * @ param pData <nl> @ @ - 307 , 7 + 308 , 7 @ @ public interface Shell32 extends ShellAPI , StdCallLibrary { <nl> * about the application being executed . <nl> * < / p > <nl> * @ return <nl> - * 	 	 < p > <nl> + * < p > <nl> * Returns < strong > TRUE < / strong > if successful ; otherwise , <nl> * < strong > FALSE < / strong > . Call < a href = <nl> * " https : / / msdn . microsoft . com / en - us / library / windows / desktop / ms679360 ( v = vs . 85 ) . aspx " > <nl> @ @ - 330 , 6 + 331 , 50 @ @ public interface Shell32 extends ShellAPI , StdCallLibrary { <nl> * @ return If this function succeeds , it returns S _ OK . Otherwise , it returns an HRESULT error code . <nl> * <nl> * / <nl> - WinNT . HRESULT SHGetSpecialFolderLocation ( WinDef . HWND hwndOwner , int nFolder , PointerByReference ppidl ) ; <nl> + HRESULT SHGetSpecialFolderLocation ( WinDef . HWND hwndOwner , int nFolder , PointerByReference ppidl ) ; <nl> + <nl> + / * * <nl> + * @ param lpszFile <nl> + * Type : LPCTSTR < br > <nl> + * The name of an executable file , DLL , or icon file from which <nl> + * icons will be extracted . <nl> + * @ param nIconIndex <nl> + * Type : int < br > <nl> + * The zero - based index of the first icon to extract . For <nl> + * example , if this value is zero , the function extracts the <nl> + * first icon in the specified file . < br > <nl> + * If this value is - 1 and phiconLarge and phiconSmall are both <nl> + * NULL , the function returns the total number of icons in the <nl> + * specified file . < br > <nl> + * If the file is an executable file or DLL , the return value is <nl> + * the number of RT _ GROUP _ ICON resources . < br > <nl> + * If the file is an . ico file , the return value is 1 . If this <nl> + * value is a negative number and either phiconLarge or <nl> + * phiconSmall is not NULL , the function begins by extracting the <nl> + * icon whose resource identifier is equal to the absolute value <nl> + * of nIconIndex . For example , use - 3 to extract the icon whose <nl> + * resource identifier is 3 . <nl> + * @ param phiconLarge <nl> + * Type : HICON * < br > <nl> + * An array of icon handles that receives handles to the large <nl> + * icons extracted from the file . If this parameter is NULL , no <nl> + * large icons are extracted from the file . <nl> + * @ param phiconSmall <nl> + * Type : HICON * < br > <nl> + * An array of icon handles that receives handles to the small <nl> + * icons extracted from the file . If this parameter is NULL , no <nl> + * small icons are extracted from the file . <nl> + * @ param nIcons <nl> + * Type : UINT < br > <nl> + * The number of icons to be extracted from the file . <nl> + * @ return Type : UINT < br > <nl> + * If the nIconIndex parameter is - 1 , the phiconLarge parameter is <nl> + * NULL , and the phiconSmall parameter is NULL , then the return <nl> + * value is the number of icons contained in the specified file . <nl> + * Otherwise , the return value is the number of icons successfully <nl> + * extracted from the file . <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / ms648069 ( VS . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int ExtractIconEx ( String lpszFile , int nIconIndex , HICON [ ] phiconLarge , HICON [ ] phiconSmall , int nIcons ) ; <nl> } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index 85de588 . . 005fa16 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ import java . util . List ; <nl> import com . sun . jna . FromNativeContext ; <nl> import com . sun . jna . IntegerType ; <nl> import com . sun . jna . Memory ; <nl> + import com . sun . jna . Native ; <nl> import com . sun . jna . NativeLong ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . PointerType ; <nl> @ @ - 666 , 14 + 667 , 99 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / / AccessSystemAcl access type <nl> / / <nl> <nl> - int ACCESS _ SYSTEM _ SECURITY = 0x01000000 ; <nl> + int ACCESS _ SYSTEM _ SECURITY = 0x01000000 ; <nl> <nl> - int PAGE _ READONLY = 0x02 ; <nl> - int PAGE _ READWRITE = 0x04 ; <nl> + / * * <nl> + * Pages in the region become guard pages . < br > <nl> + * Any attempt to access a guard page causes the system to raise a <nl> + * STATUS _ GUARD _ PAGE _ VIOLATION exception and turn off the guard page status . <nl> + * < br > <nl> + * Guard pages thus act as a one - time access alarm . < br > <nl> + * For more information , see Creating Guard Pages . < br > <nl> + * When an access attempt leads the system to turn off guard page status , <nl> + * the underlying page protection takes over . < br > <nl> + * If a guard page exception occurs during a system service , the service <nl> + * typically returns a failure status indicator . < br > <nl> + * This value cannot be used with PAGE _ NOACCESS . This flag is not supported <nl> + * by the CreateFileMapping function . <nl> + * <nl> + * @ see < a href = <nl> + * " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa366786 ( v = vs . 85 ) . aspx " > <nl> + * MSDN < / a > <nl> + * / <nl> + int PAGE _ GUARD = 0x100 ; <nl> + <nl> + / * * <nl> + * Disables all access to the committed region of pages . < br > <nl> + * An attempt to read from , write to , or execute the committed region <nl> + * results in an access violation . < br > <nl> + * This flag is not supported by the CreateFileMapping function . <nl> + * <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa366786 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int PAGE _ NOACCESS = 0x01 ; <nl> + <nl> + / * * <nl> + * Enables read - only access to the committed region of pages . < br > <nl> + * An attempt to write to the committed region results in an access <nl> + * violation . < br > <nl> + * If Data Execution Prevention is enabled , an attempt to execute code in <nl> + * the committed region results in an access violation . <nl> + * <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa366786 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int PAGE _ READONLY = 0x02 ; <nl> + <nl> + / * * <nl> + * Enables read - only or read / write access to the committed region of pages . < br > <nl> + * If Data Execution Prevention is enabled , attempting to execute code in <nl> + * the committed region results in an access violation . <nl> + * <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa366786 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int PAGE _ READWRITE = 0x04 ; <nl> + <nl> + / * * <nl> + * Enables read - only or copy - on - write access to a mapped view of a file <nl> + * mapping object . An attempt to write to a committed copy - on - write page <nl> + * results in a private copy of the page being made for the process . The <nl> + * private page is marked as PAGE _ READWRITE , and the change is written to <nl> + * the new page . If Data Execution Prevention is enabled , attempting to <nl> + * execute code in the committed region results in an access violation . <nl> + * <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa366786 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> int PAGE _ WRITECOPY = 0x08 ; <nl> - int PAGE _ EXECUTE = 0x10 ; <nl> - int PAGE _ EXECUTE _ READ = 0x20 ; <nl> - int PAGE _ EXECUTE _ READWRITE = 0x40 ; <nl> + <nl> + / * * <nl> + * Enables execute access to the committed region of pages . An attempt to <nl> + * write to the committed region results in an access violation . This flag <nl> + * is not supported by the CreateFileMapping function . <nl> + * <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa366786 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int PAGE _ EXECUTE = 0x10 ; <nl> + <nl> + / * * <nl> + * Enables execute or read - only access to the committed region of pages . An <nl> + * attempt to write to the committed region results in an access violation . <nl> + * Windows Server 2003 and Windows XP : This attribute is not supported by <nl> + * the CreateFileMapping function until Windows XP with SP2 and Windows <nl> + * Server 2003 with SP1 . <nl> + * <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa366786 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int PAGE _ EXECUTE _ READ = 0x20 ; <nl> + <nl> + / * * <nl> + * Enables execute , read - only , or read / write access to the committed region <nl> + * of pages . Windows Server 2003 and Windows XP : This attribute is not <nl> + * supported by the CreateFileMapping function until Windows XP with SP2 and <nl> + * Windows Server 2003 with SP1 . <nl> + * <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa366786 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int PAGE _ EXECUTE _ READWRITE = 0x40 ; <nl> <nl> int SECTION _ QUERY = 0x0001 ; <nl> int SECTION _ MAP _ WRITE = 0x0002 ; <nl> @ @ - 1864 , 6 + 1950 , 59 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> super ( memory ) ; <nl> read ( ) ; <nl> } <nl> + <nl> + <nl> + <nl> + / * * <nl> + * @ return The major version number of the operating system . <nl> + * / <nl> + public int getMajor ( ) { <nl> + return dwMajorVersion . intValue ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return The minor version number of the operating system . <nl> + * / <nl> + public int getMinor ( ) { <nl> + return dwMinorVersion . intValue ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return The build number of the operating system . <nl> + * / <nl> + public int getBuildNumber ( ) { <nl> + return dwBuildNumber . intValue ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return The operating system platform . This member can be VER _ PLATFORM _ WIN32 _ NT . <nl> + * / <nl> + public int getPlatformId ( ) { <nl> + return dwPlatformId . intValue ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return String , such as " Service Pack 3 " , that indicates the latest <nl> + * Service Pack installed on the system . < br > <nl> + * If no Service Pack has been installed , the string is empty . <nl> + * / <nl> + public String getServicePack ( ) { <nl> + return Native . toString ( szCSDVersion ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return A bit mask that identifies the product suites available on the system . <nl> + * / <nl> + public int getSuiteMask ( ) { <nl> + return wSuiteMask . intValue ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return Any additional information about the system . <nl> + * / <nl> + public byte getProductType ( ) { <nl> + return wProductType ; <nl> + } <nl> } <nl> <nl> int VER _ EQUAL = 1 ; <nl> @ @ - 2137 , 6 + 2276 , 42 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> 	 * / <nl> 	 int PROCESS _ DUP _ HANDLE = 0x0040 ; <nl> <nl> + / * * <nl> + * All possible access rights for a process object . Windows Server 2003 and <nl> + * Windows XP : The size of the PROCESS _ ALL _ ACCESS flag increased on Windows <nl> + * Server 2008 and Windows Vista . < br > <nl> + * If an application compiled for Windows Server 2008 and Windows Vista is <nl> + * run on Windows Server 2003 or Windows XP , the PROCESS _ ALL _ ACCESS flag is <nl> + * too large and the function specifying this flag fails with <nl> + * ERROR _ ACCESS _ DENIED . < br > <nl> + * To avoid this problem , specify the minimum set of access rights required <nl> + * for the operation . < br > <nl> + * If PROCESS _ ALL _ ACCESS must be used , set _ WIN32 _ WINNT to the minimum <nl> + * operating system targeted by your application ( for example , # define <nl> + * _ WIN32 _ WINNT _ WIN32 _ WINNT _ WINXP ) . < br > <nl> + * For more information , see Using the Windows Headers . <nl> + * <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / ms684880 ( v = VS . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int PROCESS _ ALL _ ACCESS = WinNT . PROCESS _ CREATE _ PROCESS <nl> + | WinNT . PROCESS _ CREATE _ THREAD <nl> + | WinNT . PROCESS _ DUP _ HANDLE <nl> + | WinNT . PROCESS _ QUERY _ INFORMATION <nl> + | WinNT . PROCESS _ QUERY _ LIMITED _ INFORMATION <nl> + | WinNT . PROCESS _ SET _ INFORMATION <nl> + | WinNT . PROCESS _ SET _ QUOTA <nl> + | WinNT . PROCESS _ SUSPEND _ RESUME <nl> + | WinNT . PROCESS _ SYNCHRONIZE <nl> + | WinNT . PROCESS _ TERMINATE <nl> + | WinNT . PROCESS _ VM _ OPERATION <nl> + | WinNT . PROCESS _ VM _ READ <nl> + | WinNT . PROCESS _ VM _ WRITE <nl> + | WinNT . DELETE <nl> + | WinNT . READ _ CONTROL <nl> + | WinNT . WRITE _ DAC <nl> + | WinNT . WRITE _ OWNER <nl> + | WinNT . SYNCHRONIZE ; <nl> + 	 <nl> 	 / * * <nl> 	 * Required to retrieve certain information about a process , such as its <nl> 	 * token , exit code , and priority class ( see <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index 065290f . . 644bc0d 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 382 , 13 + 382 , 13 @ @ public class Kernel32Test extends TestCase { <nl> OSVERSIONINFOEX lpVersionInfo = new OSVERSIONINFOEX ( ) ; <nl> assertEquals ( lpVersionInfo . size ( ) , lpVersionInfo . dwOSVersionInfoSize . longValue ( ) ) ; <nl> assertTrue ( Kernel32 . INSTANCE . GetVersionEx ( lpVersionInfo ) ) ; <nl> - assertTrue ( lpVersionInfo . dwMajorVersion . longValue ( ) > 0 ) ; <nl> - assertTrue ( lpVersionInfo . dwMinorVersion . longValue ( ) > = 0 ) ; <nl> + assertTrue ( lpVersionInfo . getMajor ( ) > 0 ) ; <nl> + assertTrue ( lpVersionInfo . getMinor ( ) > = 0 ) ; <nl> assertEquals ( lpVersionInfo . size ( ) , lpVersionInfo . dwOSVersionInfoSize . longValue ( ) ) ; <nl> - assertTrue ( lpVersionInfo . dwPlatformId . longValue ( ) > 0 ) ; <nl> - assertTrue ( lpVersionInfo . dwBuildNumber . longValue ( ) > 0 ) ; <nl> - assertTrue ( Native . toString ( lpVersionInfo . szCSDVersion ) . length ( ) > = 0 ) ; <nl> - assertTrue ( lpVersionInfo . wProductType > = 0 ) ; <nl> + assertTrue ( lpVersionInfo . getPlatformId ( ) > 0 ) ; <nl> + assertTrue ( lpVersionInfo . getBuildNumber ( ) > 0 ) ; <nl> + assertTrue ( lpVersionInfo . getServicePack ( ) . length ( ) > = 0 ) ; <nl> + assertTrue ( lpVersionInfo . getProductType ( ) > = 0 ) ; <nl> } <nl> <nl> public void testGetSystemInfo ( ) { <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / PsapiTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / PsapiTest . java <nl> index 560f50d . . c77e2e9 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / PsapiTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / PsapiTest . java <nl> @ @ - 14 , 12 + 14 , 17 @ @ package com . sun . jna . platform . win32 ; <nl> <nl> import static org . junit . Assert . assertTrue ; <nl> <nl> + import java . util . LinkedList ; <nl> + import java . util . List ; <nl> + <nl> import javax . swing . JFrame ; <nl> <nl> import org . junit . Test ; <nl> <nl> import com . sun . jna . Memory ; <nl> import com . sun . jna . Native ; <nl> + import com . sun . jna . platform . win32 . Psapi . MODULEINFO ; <nl> + import com . sun . jna . platform . win32 . WinDef . HMODULE ; <nl> import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> @ @ - 94 , 4 + 99 , 129 @ @ public class PsapiTest { <nl> 	 	 	 w . dispose ( ) ; <nl> 	 	 } <nl> 	 } <nl> + 	 <nl> + 	 @ Test <nl> + public void testEnumProcessModules ( ) { <nl> + HANDLE me = null ; <nl> + Win32Exception we = null ; <nl> + <nl> + try { <nl> + me = Kernel32 . INSTANCE . OpenProcess ( WinNT . PROCESS _ ALL _ ACCESS , false , Kernel32 . INSTANCE . GetCurrentProcessId ( ) ) ; <nl> + assertTrue ( " Handle to my process should not be null " , me ! = null ) ; <nl> + <nl> + List < HMODULE > list = new LinkedList < HMODULE > ( ) ; <nl> + <nl> + HMODULE [ ] lphModule = new HMODULE [ 100 * 4 ] ; <nl> + IntByReference lpcbNeeded = new IntByReference ( ) ; <nl> + <nl> + if ( ! Psapi . INSTANCE . EnumProcessModules ( me , lphModule , lphModule . length , lpcbNeeded ) ) { <nl> + throw new Win32Exception ( Native . getLastError ( ) ) ; <nl> + } <nl> + <nl> + for ( int i = 0 ; i < lpcbNeeded . getValue ( ) / 4 ; i + + ) { <nl> + list . add ( lphModule [ i ] ) ; <nl> + } <nl> + <nl> + assertTrue ( " List should have at least 1 item in it . " , list . size ( ) > 0 ) ; <nl> + } catch ( Win32Exception e ) { <nl> + we = e ; <nl> + } finally { <nl> + if ( me ! = null ) { <nl> + if ( ! Kernel32 . INSTANCE . CloseHandle ( me ) ) { <nl> + Win32Exception e = new Win32Exception ( Native . getLastError ( ) ) ; <nl> + if ( we ! = null ) { <nl> + e . addSuppressed ( we ) ; <nl> + } <nl> + we = e ; <nl> + } <nl> + } <nl> + } <nl> + if ( we ! = null ) { <nl> + throw we ; <nl> + } <nl> + <nl> + } <nl> + 	 <nl> + 	 @ Test <nl> + public void testGetModuleInformation ( ) { <nl> + HANDLE me = null ; <nl> + Win32Exception we = null ; <nl> + <nl> + try { <nl> + me = Kernel32 . INSTANCE . OpenProcess ( WinNT . PROCESS _ ALL _ ACCESS , false , Kernel32 . INSTANCE . GetCurrentProcessId ( ) ) ; <nl> + assertTrue ( " Handle to my process should not be null " , me ! = null ) ; <nl> + <nl> + List < HMODULE > list = new LinkedList < HMODULE > ( ) ; <nl> + <nl> + HMODULE [ ] lphModule = new HMODULE [ 100 * 4 ] ; <nl> + IntByReference lpcbNeeded = new IntByReference ( ) ; <nl> + <nl> + if ( ! Psapi . INSTANCE . EnumProcessModules ( me , lphModule , lphModule . length , lpcbNeeded ) ) { <nl> + throw new Win32Exception ( Native . getLastError ( ) ) ; <nl> + } <nl> + <nl> + for ( int i = 0 ; i < lpcbNeeded . getValue ( ) / 4 ; i + + ) { <nl> + list . add ( lphModule [ i ] ) ; <nl> + } <nl> + <nl> + assertTrue ( " List should have at least 1 item in it . " , list . size ( ) > 0 ) ; <nl> + <nl> + MODULEINFO lpmodinfo = new MODULEINFO ( ) ; <nl> + <nl> + if ( ! Psapi . INSTANCE . GetModuleInformation ( me , list . get ( 0 ) , lpmodinfo , lpmodinfo . size ( ) ) ) { <nl> + throw new Win32Exception ( Native . getLastError ( ) ) ; <nl> + } <nl> + <nl> + assertTrue ( " MODULEINFO . EntryPoint should not be null . " , lpmodinfo . EntryPoint ! = null ) ; <nl> + <nl> + } catch ( Win32Exception e ) { <nl> + we = e ; <nl> + } finally { <nl> + if ( me ! = null ) { <nl> + if ( ! Kernel32 . INSTANCE . CloseHandle ( me ) ) { <nl> + Win32Exception e = new Win32Exception ( Native . getLastError ( ) ) ; <nl> + if ( we ! = null ) { <nl> + e . addSuppressed ( we ) ; <nl> + } <nl> + we = e ; <nl> + } <nl> + } <nl> + } <nl> + if ( we ! = null ) { <nl> + throw we ; <nl> + } <nl> + <nl> + } <nl> + 	 <nl> + 	 @ Test <nl> + public void testGetProcessImageFileName ( ) { <nl> + HANDLE me = null ; <nl> + Win32Exception we = null ; <nl> + <nl> + try { <nl> + me = Kernel32 . INSTANCE . OpenProcess ( WinNT . PROCESS _ ALL _ ACCESS , false , Kernel32 . INSTANCE . GetCurrentProcessId ( ) ) ; <nl> + assertTrue ( " Handle to my process should not be null " , me ! = null ) ; <nl> + <nl> + char [ ] buffer = new char [ 256 ] ; <nl> + Psapi . INSTANCE . GetProcessImageFileName ( me , buffer , 256 ) ; <nl> + String path = new String ( buffer ) ; <nl> + assertTrue ( " Image path should contain ' java ' and ' . exe ' " , path . contains ( " java " ) & & path . contains ( " . exe " ) ) ; <nl> + } catch ( Win32Exception e ) { <nl> + we = e ; <nl> + } finally { <nl> + if ( me ! = null ) { <nl> + if ( ! Kernel32 . INSTANCE . CloseHandle ( me ) ) { <nl> + Win32Exception e = new Win32Exception ( Native . getLastError ( ) ) ; <nl> + if ( we ! = null ) { <nl> + e . addSuppressed ( we ) ; <nl> + } <nl> + we = e ; <nl> + } <nl> + } <nl> + } <nl> + if ( we ! = null ) { <nl> + throw we ; <nl> + } <nl> + <nl> + } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> index 609166e . . 66171e4 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> @ @ - 225 , 4 + 225 , 13 @ @ public class Shell32Test extends TestCase { <nl> fileWriter . close ( ) ; <nl> } <nl> } <nl> + <nl> + public void testExtractIconEx ( ) { <nl> + String winDir = Kernel32Util . getEnvironmentVariable ( " WINDIR " ) ; <nl> + assertNotNull ( " No WINDIR value returned " , winDir ) ; <nl> + assertTrue ( " Specified WINDIR does not exist : " + winDir , new File ( winDir ) . exists ( ) ) ; <nl> + <nl> + int iconCount = Shell32 . INSTANCE . ExtractIconEx ( new File ( winDir , " explorer . exe " ) . getAbsolutePath ( ) , - 1 , null , null , 1 ) ; <nl> + assertTrue ( " Should be at least two icons in explorer . exe " , iconCount > 1 ) ; <nl> + } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 27e1037 . . bca64c6 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 26 , 6 + 26 , 7 @ @ Features <nl> * [ # 554 ] ( https : / / github . com / java - native - access / jna / pull / 554 ) : Initial code for a few Unix ' libc ' API ( s ) [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) <nl> * [ # 552 ] ( https : / / github . com / java - native - access / jna / pull / 552 ) : Added ` Module32FirstW ` and ` Module32NextW ` to ` com . sun . jna . platform . win32 . Kernel32 ` ( and helper to ` com . sun . jna . platform . win32 . Kernel32Util ` ) and ` MODULEENTRY32W ` structure to ` com . sun . jna . platform . win32 . Tlhelp32 ` - [ @ mlfreeman2 ] ( https : / / github . com / mlfreeman2 ) . <nl> * [ # 564 ] ( https : / / github . com / java - native - access / jna / pull / 564 ) : Use generic definition of Native # loadLibrary [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) <nl> + * [ # 562 ] ( https : / / github . com / java - native - access / jna / pull / 562 ) : Added ` com . sun . jna . platform . win32 . VersionUtil ` with ` getFileVersionInfo ` utility method to get file major , minor , revision , and build version parts - [ @ mlfreeman2 ] ( https : / / github . com / mlfreeman2 ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / VerRsrc . java b / contrib / platform / src / com / sun / jna / platform / win32 / VerRsrc . java <nl> index 2b69e97 . . 8431a9f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / VerRsrc . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / VerRsrc . java <nl> @ @ - 116 , 6 + 116 , 38 @ @ public interface VerRsrc { <nl> * / <nl> public WinDef . DWORD dwFileDateLS ; <nl> <nl> + public int getFileVersionMajor ( ) { <nl> + return dwFileVersionMS . intValue ( ) > > > 16 ; <nl> + } <nl> + <nl> + public int getFileVersionMinor ( ) { <nl> + return dwFileVersionMS . intValue ( ) & 0xffff ; <nl> + } <nl> + <nl> + public int getFileVersionRevision ( ) { <nl> + return dwFileVersionLS . intValue ( ) > > > 16 ; <nl> + } <nl> + <nl> + public int getFileVersionBuild ( ) { <nl> + return dwFileVersionLS . intValue ( ) & 0xffff ; <nl> + } <nl> + <nl> + public int getProductVersionMajor ( ) { <nl> + return dwProductVersionMS . intValue ( ) > > > 16 ; <nl> + } <nl> + <nl> + public int getProductVersionMinor ( ) { <nl> + return dwProductVersionMS . intValue ( ) & 0xffff ; <nl> + } <nl> + <nl> + public int getProductVersionRevision ( ) { <nl> + return dwProductVersionLS . intValue ( ) > > > 16 ; <nl> + } <nl> + <nl> + public int getProductVersionBuild ( ) { <nl> + return dwProductVersionLS . intValue ( ) & 0xffff ; <nl> + } <nl> + <nl> protected List getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " dwSignature " , " dwStrucVersion " , " dwFileVersionMS " , " dwFileVersionLS " , " dwProductVersionMS " , " dwProductVersionLS " , " dwFileFlagsMask " , " dwFileFlags " , " dwFileOS " , " dwFileType " , " dwFileSubtype " , " dwFileDateMS " , " dwFileDateLS " } ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / VersionUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / VersionUtil . java <nl> new file mode 100644 <nl> index 0000000 . . bdfa1f6 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / VersionUtil . java <nl> @ @ - 0 , 0 + 1 , 77 @ @ <nl> + / * Copyright ( c ) 2015 Michael Freeman , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Memory ; <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . platform . win32 . VerRsrc . VS _ FIXEDFILEINFO ; <nl> + import com . sun . jna . platform . win32 . Version ; <nl> + import com . sun . jna . platform . win32 . Win32Exception ; <nl> + import com . sun . jna . ptr . IntByReference ; <nl> + import com . sun . jna . ptr . PointerByReference ; <nl> + <nl> + / * * <nl> + * Reads Windows Version info from files ( the version details you can see by <nl> + * right - clicking and choosing properties ) <nl> + * <nl> + * @ author mlfreeman [ at ] gmail . com <nl> + * / <nl> + public class VersionUtil { <nl> + <nl> + / * * <nl> + * Gets the file ' s version number info <nl> + * <nl> + * @ param filePath <nl> + * The path to the file <nl> + * @ return The VS _ FIXEDFILEINFO structure read from the file . < br > <nl> + * Use the getFileVersionMajor ( ) , getFileVersionMinor ( ) , <nl> + * getFileVersionRevision ( ) , and getFileVersionBuild ( ) <nl> + * @ throws UnsupportedOperationException <nl> + * if VerQueryValue fails to get version info from the file . <nl> + * / <nl> + public static VS _ FIXEDFILEINFO getFileVersionInfo ( String filePath ) { <nl> + IntByReference dwDummy = new IntByReference ( ) ; <nl> + <nl> + int versionLength = Version . INSTANCE . GetFileVersionInfoSize ( filePath , dwDummy ) ; <nl> + <nl> + / / Reading version info failed . <nl> + / / throw a Win32Exception with GetLastError ( ) <nl> + if ( versionLength = = 0 ) { <nl> + throw new Win32Exception ( Native . getLastError ( ) ) ; <nl> + } <nl> + <nl> + / / buffer to hold version info <nl> + Pointer lpData = new Memory ( versionLength ) ; <nl> + <nl> + / / pointer to pointer to location in aforementioned buffer <nl> + PointerByReference lplpBuffer = new PointerByReference ( ) ; <nl> + <nl> + if ( ! Version . INSTANCE . GetFileVersionInfo ( filePath , 0 , versionLength , lpData ) ) { <nl> + throw new Win32Exception ( Native . getLastError ( ) ) ; <nl> + } <nl> + <nl> + / / here to make VerQueryValue happy . <nl> + IntByReference puLen = new IntByReference ( ) ; <nl> + <nl> + / / this does not set GetLastError , so no need to throw a Win32Exception <nl> + if ( ! Version . INSTANCE . VerQueryValue ( lpData , " \ \ " , lplpBuffer , puLen ) ) { <nl> + throw new UnsupportedOperationException ( " Unable to extract version info from the file : \ " " + filePath + " \ " " ) ; <nl> + } <nl> + <nl> + VS _ FIXEDFILEINFO fileInfo = new VS _ FIXEDFILEINFO ( lplpBuffer . getValue ( ) ) ; <nl> + fileInfo . read ( ) ; <nl> + return fileInfo ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / VersionUtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / VersionUtilTest . java <nl> new file mode 100644 <nl> index 0000000 . . eb8b397 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / VersionUtilTest . java <nl> @ @ - 0 , 0 + 1 , 43 @ @ <nl> + / * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import java . io . File ; <nl> + <nl> + import com . sun . jna . platform . win32 . VerRsrc . VS _ FIXEDFILEINFO ; <nl> + <nl> + import junit . framework . TestCase ; <nl> + <nl> + public class VersionUtilTest extends TestCase { <nl> + <nl> + public static void main ( String [ ] args ) { <nl> + junit . textui . TestRunner . run ( VersionUtilTest . class ) ; <nl> + } <nl> + <nl> + public void testGetFileVersionNumbers ( ) { <nl> + String testFileName = " regedit . exe " ; <nl> + File file = new File ( System . getenv ( " SystemRoot " ) , testFileName ) ; <nl> + assertTrue ( " Test file with version info in it should exist . " , file . exists ( ) ) ; <nl> + <nl> + VS _ FIXEDFILEINFO version = VersionUtil . getFileVersionInfo ( file . getAbsolutePath ( ) ) ; <nl> + assertNotNull ( " Version info should have been returned . " , version ) ; <nl> + <nl> + assertTrue ( " The major file version number should be greater than 0 when pulling version from \ " " + testFileName + " \ " " , version . getFileVersionMajor ( ) > 0 ) ; <nl> + assertTrue ( " The minor file version number should be greater than or equal to 0 when pulling version from \ " " + testFileName + " \ " " , version . getFileVersionMinor ( ) > = 0 ) ; <nl> + assertTrue ( " The revision file version number should be greater than or equal to 0 when pulling version from \ " " + testFileName + " \ " " , version . getFileVersionRevision ( ) > = 0 ) ; <nl> + assertTrue ( " The build file version number should be greater than or equal to 0 when pulling version from \ " " + testFileName + " \ " " , version . getFileVersionBuild ( ) > 0 ) ; <nl> + <nl> + assertTrue ( " The major product version number should be greater than 0 when pulling version from \ " " + testFileName + " \ " " , version . getProductVersionMajor ( ) > 0 ) ; <nl> + assertTrue ( " The minor product version number should be greater than or equal to 0 when pulling version from \ " " + testFileName + " \ " " , version . getProductVersionMinor ( ) > = 0 ) ; <nl> + assertTrue ( " The revision product version number should be greater than or equal to 0 when pulling version from \ " " + testFileName + " \ " " , version . getProductVersionRevision ( ) > = 0 ) ; <nl> + assertTrue ( " The build product version number should be greater than or equal to 0 when pulling version from \ " " + testFileName + " \ " " , version . getProductVersionBuild ( ) > 0 ) ; <nl> + } <nl> + }
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> index 3a219cf . . c7de503 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> @ @ - 86 , 7 + 86 , 7 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> <nl> if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> this . iUnknown = new Unknown ( this . pUnknown . getValue ( ) ) ; <nl> - hr = iUnknown . QueryInterface ( new REFIID . ByValue ( IDispatch . IID _ IDISPATCH ) , <nl> + hr = iUnknown . QueryInterface ( new REFIID ( IDispatch . IID _ IDISPATCH ) , <nl> this . pDispatch ) ; <nl> } else { <nl> hr = Ole32 . INSTANCE . CoCreateInstance ( clsid , null , dwClsContext , <nl> @ @ - 129 , 7 + 129 , 7 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> <nl> if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> this . iUnknown = new Unknown ( this . pUnknown . getValue ( ) ) ; <nl> - hr = iUnknown . QueryInterface ( new REFIID . ByValue ( IDispatch . IID _ IDISPATCH ) , <nl> + hr = iUnknown . QueryInterface ( new REFIID ( IDispatch . IID _ IDISPATCH ) , <nl> this . pDispatch ) ; <nl> } else { <nl> hr = Ole32 . INSTANCE . CoCreateInstance ( clsid , null , dwClsContext , <nl> @ @ - 211 , 7 + 211 , 7 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> DISPIDByReference pdispID = new DISPIDByReference ( ) ; <nl> <nl> / / Get DISPID for name passed . . . <nl> - HRESULT hr = pDisp . GetIDsOfNames ( new REFIID . ByValue ( Guid . IID _ NULL ) , ptName , 1 , <nl> + HRESULT hr = pDisp . GetIDsOfNames ( new REFIID ( Guid . IID _ NULL ) , ptName , 1 , <nl> LOCALE _ USER _ DEFAULT , pdispID ) ; <nl> <nl> COMUtils . checkRC ( hr ) ; <nl> @ @ - 263 , 7 + 263 , 7 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> } <nl> <nl> / / Make the call ! <nl> - HRESULT hr = pDisp . Invoke ( dispId , new REFIID . ByValue ( Guid . IID _ NULL ) , LOCALE _ SYSTEM _ DEFAULT , <nl> + HRESULT hr = pDisp . Invoke ( dispId , new REFIID ( Guid . IID _ NULL ) , LOCALE _ SYSTEM _ DEFAULT , <nl> new WinDef . WORD ( nType ) , dp , pvResult , pExcepInfo , puArgErr ) ; <nl> <nl> COMUtils . checkRC ( hr , pExcepInfo , puArgErr ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> index 34a23b5 . . 8d55229 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> @ @ - 59 , 7 + 59 , 7 @ @ public class COMEarlyBindingObject extends COMBindingBaseObject implements <nl> } <nl> <nl> @ Override <nl> - public HRESULT QueryInterface ( REFIID . ByValue riid , PointerByReference ppvObject ) { <nl> + public HRESULT QueryInterface ( REFIID riid , PointerByReference ppvObject ) { <nl> return this . getIDispatch ( ) . QueryInterface ( riid , ppvObject ) ; <nl> } <nl> <nl> @ @ - 85 , 14 + 85 , 14 @ @ public class COMEarlyBindingObject extends COMBindingBaseObject implements <nl> } <nl> <nl> @ Override <nl> - public HRESULT GetIDsOfNames ( REFIID . ByValue riid , WString [ ] rgszNames , int cNames , <nl> + public HRESULT GetIDsOfNames ( REFIID riid , WString [ ] rgszNames , int cNames , <nl> LCID lcid , DISPIDByReference rgDispId ) { <nl> return this . getIDispatch ( ) . GetIDsOfNames ( riid , rgszNames , cNames , lcid , <nl> rgDispId ) ; <nl> } <nl> <nl> @ Override <nl> - public HRESULT Invoke ( DISPID dispIdMember , REFIID . ByValue riid , LCID lcid , <nl> + public HRESULT Invoke ( DISPID dispIdMember , REFIID riid , LCID lcid , <nl> WORD wFlags , DISPPARAMS . ByReference pDispParams , <nl> VARIANT . ByReference pVarResult , EXCEPINFO . ByReference pExcepInfo , <nl> IntByReference puArgErr ) { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / Dispatch . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / Dispatch . java <nl> index c5f6577 . . d8448f2 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / Dispatch . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / Dispatch . java <nl> @ @ - 99 , 7 + 99 , 7 @ @ public class Dispatch extends Unknown implements IDispatch { <nl> * the rg disp id <nl> * @ return the hresult <nl> * / <nl> - public HRESULT GetIDsOfNames ( REFIID . ByValue riid , WString [ ] rgszNames , int cNames , <nl> + public HRESULT GetIDsOfNames ( REFIID riid , WString [ ] rgszNames , int cNames , <nl> LCID lcid , DISPIDByReference rgDispId ) { <nl> return ( HRESULT ) this . _ invokeNativeObject ( 5 , <nl> new Object [ ] { this . getPointer ( ) , riid , rgszNames , cNames , <nl> @ @ - 127 , 7 + 127 , 7 @ @ public class Dispatch extends Unknown implements IDispatch { <nl> * the pu arg err <nl> * @ return the hresult <nl> * / <nl> - public HRESULT Invoke ( DISPID dispIdMember , REFIID . ByValue riid , LCID lcid , <nl> + public HRESULT Invoke ( DISPID dispIdMember , REFIID riid , LCID lcid , <nl> WORD wFlags , DISPPARAMS . ByReference pDispParams , <nl> VARIANT . ByReference pVarResult , EXCEPINFO . ByReference pExcepInfo , <nl> IntByReference puArgErr ) { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / DispatchListener . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / DispatchListener . java <nl> index 0043ab1 . . c3f0e79 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / DispatchListener . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / DispatchListener . java <nl> @ @ - 54 , 7 + 54 , 7 @ @ public class DispatchListener extends Structure { <nl> 	 protected void initVTable ( final IDispatchCallback callback ) { <nl> 	 	 this . vtbl . QueryInterfaceCallback = new DispatchVTable . QueryInterfaceCallback ( ) { <nl> 	 	 	 @ Override <nl> - 	 	 	 public HRESULT invoke ( Pointer thisPointer , REFIID . ByValue refid , PointerByReference ppvObject ) { <nl> + 	 	 	 public HRESULT invoke ( Pointer thisPointer , REFIID refid , PointerByReference ppvObject ) { <nl> 	 	 	 	 return callback . QueryInterface ( refid , ppvObject ) ; <nl> 	 	 	 } <nl> 	 	 } ; <nl> @ @ - 84 , 14 + 84 , 14 @ @ public class DispatchListener extends Structure { <nl> 	 	 } ; <nl> 	 	 this . vtbl . GetIDsOfNamesCallback = new DispatchVTable . GetIDsOfNamesCallback ( ) { <nl> 	 	 	 @ Override <nl> - 	 	 	 public HRESULT invoke ( Pointer thisPointer , REFIID . ByValue riid , WString [ ] rgszNames , int cNames , LCID lcid , <nl> + 	 	 	 public HRESULT invoke ( Pointer thisPointer , REFIID riid , WString [ ] rgszNames , int cNames , LCID lcid , <nl> 	 	 	 	 	 DISPIDByReference rgDispId ) { <nl> 	 	 	 	 return callback . GetIDsOfNames ( riid , rgszNames , cNames , lcid , rgDispId ) ; <nl> 	 	 	 } <nl> 	 	 } ; <nl> 	 	 this . vtbl . InvokeCallback = new DispatchVTable . InvokeCallback ( ) { <nl> 	 	 	 @ Override <nl> - 	 	 	 public HRESULT invoke ( Pointer thisPointer , DISPID dispIdMember , REFIID . ByValue riid , LCID lcid , WORD wFlags , <nl> + 	 	 	 public HRESULT invoke ( Pointer thisPointer , DISPID dispIdMember , REFIID riid , LCID lcid , WORD wFlags , <nl> 	 	 	 	 	 DISPPARAMS . ByReference pDispParams , VARIANT . ByReference pVarResult , EXCEPINFO . ByReference pExcepInfo , <nl> 	 	 IntByReference puArgErr ) { <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / DispatchVTable . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / DispatchVTable . java <nl> index 16fb47f . . ad8a61c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / DispatchVTable . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / DispatchVTable . java <nl> @ @ - 57 , 7 + 57 , 7 @ @ public class DispatchVTable extends Structure { <nl> 	 } <nl> <nl> 	 public static interface QueryInterfaceCallback extends StdCallLibrary . StdCallCallback { <nl> - 	 	 WinNT . HRESULT invoke ( Pointer thisPointer , REFIID . ByValue refid , PointerByReference ppvObject ) ; <nl> + 	 	 WinNT . HRESULT invoke ( Pointer thisPointer , REFIID refid , PointerByReference ppvObject ) ; <nl> 	 } <nl> <nl> 	 public static interface AddRefCallback extends StdCallLibrary . StdCallCallback { <nl> @ @ - 77 , 12 + 77 , 12 @ @ public class DispatchVTable extends Structure { <nl> 	 } <nl> <nl> 	 public static interface GetIDsOfNamesCallback extends StdCallLibrary . StdCallCallback { <nl> - 	 	 WinNT . HRESULT invoke ( Pointer thisPointer , REFIID . ByValue riid , WString [ ] rgszNames , int cNames , LCID lcid , <nl> + 	 	 WinNT . HRESULT invoke ( Pointer thisPointer , REFIID riid , WString [ ] rgszNames , int cNames , LCID lcid , <nl> 	 	 	 	 DISPIDByReference rgDispId ) ; <nl> 	 } <nl> <nl> 	 public static interface InvokeCallback extends StdCallLibrary . StdCallCallback { <nl> - 	 	 WinNT . HRESULT invoke ( Pointer thisPointer , DISPID dispIdMember , REFIID . ByValue riid , LCID lcid , WORD wFlags , <nl> + 	 	 WinNT . HRESULT invoke ( Pointer thisPointer , DISPID dispIdMember , REFIID riid , LCID lcid , WORD wFlags , <nl> 	 	 	 	 DISPPARAMS . ByReference pDispParams , VARIANT . ByReference pVarResult , EXCEPINFO . ByReference pExcepInfo , <nl> 	 	 	 	 IntByReference puArgErr ) ; <nl> 	 } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> index e4904cb . . 5bda7a8 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> @ @ - 31 , 10 + 31 , 10 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> / / TODO : Auto - generated Javadoc <nl> / * * <nl> * Wrapper class for the IDispatch interface <nl> - * <nl> + * <nl> * IDispatch . GetTypeInfoCount 12 IDispatch . GetTypeInfo 16 <nl> * IDispatch . GetIDsOfNames 20 IDispatch . Invoke 24 <nl> - * <nl> + * <nl> * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> * / <nl> public interface IDispatch extends IUnknown { <nl> @ @ - 42 , 15 + 42 , 102 @ @ public interface IDispatch extends IUnknown { <nl> public final static IID IID _ IDISPATCH = new IID ( <nl> " 00020400 - 0000 - 0000 - C000 - 000000000046 " ) ; <nl> <nl> + / * * <nl> + * Retrieves the number of type information interfaces that an object provides ( either 0 or 1 ) . <nl> + * <nl> + * @ param pctinfo The number of type information interfaces provided by the object . If the object provides type information , this number is 1 ; otherwise the number is 0 . <nl> + * @ return This method can return one of these values . <nl> + * S _ OK <nl> + * Success . <nl> + * E _ NOTIMPL <nl> + * Failure . <nl> + * / <nl> public HRESULT GetTypeInfoCount ( UINTByReference pctinfo ) ; <nl> <nl> + / * * <nl> + * Retrieves the type information for an object , which can then be used to get the type information for an interface . <nl> + * <nl> + * @ param iTInfo The type information to return . Pass 0 to retrieve type information for the IDispatch implementation . <nl> + * @ param lcid The locale identifier for the type information . <nl> + * An object may be able to return different type information for different languages . This is important <nl> + * for classes that support localized member names . For classes that do not support localized member names , <nl> + * this parameter can be ignored . <nl> + * @ param ppTInfo The requested type information object . <nl> + * @ return S _ OK <nl> + * Success . <nl> + * DISP _ E _ BADINDEX <nl> + * The iTInfo parameter was not 0 . <nl> + * / <nl> public HRESULT GetTypeInfo ( UINT iTInfo , LCID lcid , <nl> PointerByReference ppTInfo ) ; <nl> <nl> - public HRESULT GetIDsOfNames ( REFIID . ByValue riid , WString [ ] rgszNames , int cNames , <nl> + / * * <nl> + * Maps a single member and an optional set of argument names to a corresponding set of integer DISPIDs , which can be used <nl> + * on subsequent calls to Invoke . The dispatch function DispGetIDsOfNames provides a standard implementation of GetIDsOfNames . <nl> + * <nl> + * @ param riid Reserved for future use . Must be IID _ NULL . <nl> + * @ param rgszNames The array of names to be mapped . <nl> + * @ param cNames The count of the names to be mapped . <nl> + * @ param lcid The locale context in which to interpret the names . <nl> + * @ param rgDispId Caller - allocated array , each element of which contains an identifier ( ID ) corresponding to one of the names passed in <nl> + * the rgszNames array . The first element represents the member name . The subsequent elements represent each of the member ' s parameters . <nl> + * @ return <nl> + * / <nl> + public HRESULT GetIDsOfNames ( REFIID riid , WString [ ] rgszNames , int cNames , <nl> LCID lcid , DISPIDByReference rgDispId ) ; <nl> <nl> - public HRESULT Invoke ( DISPID dispIdMember , REFIID . ByValue riid , LCID lcid , <nl> + / * * <nl> + * Provides access to properties and methods exposed by an object . The dispatch function DispInvoke provides a standard implementation of Invoke . <nl> + * <nl> + * @ param dispIdMember Identifies the member . Use GetIDsOfNames or the object ' s documentation to obtain the dispatch identifier . <nl> + * @ param riid Reserved for future use . Must be IID _ NULL . <nl> + * @ param lcid The locale context in which to interpret arguments . The lcid is used by the GetIDsOfNames function , and is also <nl> + * passed to Invoke to allow the object to interpret its arguments specific to a locale . <nl> + * < p / > <nl> + * Applications that do not support multiple national languages can ignore this parameter . For more information , <nl> + * refer to Supporting Multiple National Languages and Exposing ActiveX Objects . <nl> + * @ param wFlags Flags describing the context of the Invoke call . <nl> + * DISPATCH _ METHOD <nl> + * The member is invoked as a method . If a property has the same name , both this and the DISPATCH _ PROPERTYGET flag can be set . <nl> + * DISPATCH _ PROPERTYGET <nl> + * The member is retrieved as a property or data member . <nl> + * DISPATCH _ PROPERTYPUT <nl> + * The member is changed as a property or data member . <nl> + * DISPATCH _ PROPERTYPUTREF <nl> + * The member is changed by a reference assignment , rather than a value assignment . This flag is valid only when the property accepts a reference to an object . <nl> + * @ param pDispParams Pointer to a DISPPARAMS structure containing an array of arguments , an array of argument DISPIDs for named arguments , and counts for the number of elements in the arrays . <nl> + * @ param pVarResult Pointer to the location where the result is to be stored , or NULL if the caller expects no result . This argument is ignored if DISPATCH _ PROPERTYPUT or DISPATCH _ PROPERTYPUTREF is specified . <nl> + * @ param pExcepInfo Pointer to a structure that contains exception information . This structure should be filled in if DISP _ E _ EXCEPTION is returned . Can be NULL . <nl> + * @ param puArgErr The index within rgvarg of the first argument that has an error . Arguments are stored in pDispParams - > rgvarg in reverse order , <nl> + * so the first argument is the one with the highest index in the array . This parameter is returned only when the resulting return <nl> + * value is DISP _ E _ TYPEMISMATCH or DISP _ E _ PARAMNOTFOUND . This argument can be set to null . For details , see Returning Errors . <nl> + * @ return This method can return one of these values . <nl> + * S _ OK <nl> + * Success . <nl> + * DISP _ E _ BADPARAMCOUNT <nl> + * The number of elements provided to DISPPARAMS is different from the number of arguments accepted by the method or property . <nl> + * DISP _ E _ BADVARTYPE <nl> + * One of the arguments in DISPPARAMS is not a valid variant type . <nl> + * DISP _ E _ EXCEPTION <nl> + * The application needs to raise an exception . In this case , the structure passed in pexcepinfo should be filled in . <nl> + * DISP _ E _ MEMBERNOTFOUND <nl> + * The requested member does not exist . <nl> + * DISP _ E _ NONAMEDARGS <nl> + * This implementation of IDispatch does not support named arguments . <nl> + * DISP _ E _ OVERFLOW <nl> + * One of the arguments in DISPPARAMS could not be coerced to the specified type . <nl> + * DISP _ E _ PARAMNOTFOUND <nl> + * One of the parameter IDs does not correspond to a parameter on the method . In this case , puArgErr is set to the first argument that contains the error . <nl> + * DISP _ E _ TYPEMISMATCH <nl> + * One or more of the arguments could not be coerced . The index of the first parameter with the incorrect type within rgvarg is returned in puArgErr . <nl> + * DISP _ E _ UNKNOWNINTERFACE <nl> + * The interface identifier passed in riid is not IID _ NULL . <nl> + * DISP _ E _ UNKNOWNLCID <nl> + * The member being invoked interprets string arguments according to the LCID , and the LCID is not recognized . If the LCID is not needed to interpret arguments , this error should not be returned <nl> + * DISP _ E _ PARAMNOTOPTIONAL <nl> + * A required parameter was omitted . <nl> + * / <nl> + public HRESULT Invoke ( DISPID dispIdMember , REFIID riid , LCID lcid , <nl> WORD wFlags , DISPPARAMS . ByReference pDispParams , <nl> VARIANT . ByReference pVarResult , EXCEPINFO . ByReference pExcepInfo , <nl> IntByReference puArgErr ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / ITypeLib . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / ITypeLib . java <nl> index e21d768 . . dd51e5b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / ITypeLib . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / ITypeLib . java <nl> @ @ - 71 , 7 + 71 , 7 @ @ public interface ITypeLib extends IUnknown { <nl> / * [ annotation ] [ out ] [ in ] * / <nl> BSTRByReference szNameBuf , <nl> / * [ in ] * / ULONG lHashVal , <nl> - / * [ length _ is ] [ size _ is ] [ out ] * / ITypeInfo [ ] ppTInfo , <nl> + / * [ length _ is ] [ size _ is ] [ out ] * / PointerByReference ppTInfo , <nl> / * [ length _ is ] [ size _ is ] [ out ] * / MEMBERID [ ] rgMemId , <nl> / * [ out ] [ in ] * / USHORTByReference pcFound ) ; <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java <nl> index 061f611 . . 049c970 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java <nl> @ @ - 32 , 7 + 32 , 7 @ @ public interface IUnknown { <nl> public final static IID IID _ IUNKNOWN = new IID ( <nl> " { 00000000 - 0000 - 0000 - C000 - 000000000046 } " ) ; <nl> <nl> - public HRESULT QueryInterface ( REFIID . ByValue riid , PointerByReference ppvObject ) ; <nl> + public HRESULT QueryInterface ( REFIID riid , PointerByReference ppvObject ) ; <nl> <nl> public int AddRef ( ) ; <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLib . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLib . java <nl> index 04a7f25 . . 5ec1e8a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLib . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLib . java <nl> @ @ - 217 , 7 + 217 , 7 @ @ public class TypeLib extends Unknown implements ITypeLib { <nl> / * [ annotation ] [ out ] [ in ] * / <nl> BSTRByReference szNameBuf , <nl> / * [ in ] * / ULONG lHashVal , <nl> - / * [ length _ is ] [ size _ is ] [ out ] * / ITypeInfo [ ] ppTInfo , <nl> + / * [ length _ is ] [ size _ is ] [ out ] * / PointerByReference ppTInfo , <nl> / * [ length _ is ] [ size _ is ] [ out ] * / MEMBERID [ ] rgMemId , <nl> / * [ out ] [ in ] * / USHORTByReference pcFound ) { <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibUtil . java <nl> index 92c1adf . . ebe28da 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibUtil . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 . COM ; <nl> <nl> + import com . sun . jna . Pointer ; <nl> import com . sun . jna . WString ; <nl> import com . sun . jna . platform . win32 . Guid . CLSID ; <nl> import com . sun . jna . platform . win32 . Kernel32 ; <nl> @ @ - 380 , 7 + 381 , 7 @ @ public class TypeLibUtil { <nl> COMUtils . checkRC ( hr ) ; <nl> <nl> found = pcFound . getValue ( ) . shortValue ( ) ; <nl> - / * [ length _ is ] [ size _ is ] [ out ] * / ITypeInfo [ ] ppTInfo = new ITypeInfo [ found ] ; <nl> + / * [ length _ is ] [ size _ is ] [ out ] * / PointerByReference ppTInfo = new PointerByReference ( ) ; <nl> / * [ length _ is ] [ size _ is ] [ out ] * / MEMBERID [ ] rgMemId = new MEMBERID [ found ] ; <nl> hr = this . typelib . FindName ( szNameBuf , lHashVal , ppTInfo , rgMemId , <nl> pcFound ) ; <nl> @ @ - 404 , 7 + 405 , 7 @ @ public class TypeLibUtil { <nl> private String nameBuf ; <nl> <nl> / * * The p t info . * / <nl> - private ITypeInfo [ ] pTInfo ; <nl> + private PointerByReference pTInfo ; <nl> <nl> / * * The rg mem id . * / <nl> private MEMBERID [ ] rgMemId ; <nl> @ @ - 414 , 18 + 415 , 16 @ @ public class TypeLibUtil { <nl> <nl> / * * <nl> * Instantiates a new find name . <nl> - * <nl> - * @ param nameBuf <nl> + * @ param nameBuf <nl> * the name buf <nl> * @ param pTInfo <nl> * the t info <nl> * @ param rgMemId <nl> - * the rg mem id <nl> + * the rg mem id <nl> * @ param pcFound <nl> - * the pc found <nl> * / <nl> - public FindName ( String nameBuf , ITypeInfo [ ] pTInfo , MEMBERID [ ] rgMemId , <nl> - short pcFound ) { <nl> + public FindName ( String nameBuf , PointerByReference pTInfo , MEMBERID [ ] rgMemId , <nl> + short pcFound ) { <nl> this . nameBuf = nameBuf ; <nl> this . pTInfo = pTInfo ; <nl> this . rgMemId = rgMemId ; <nl> @ @ - 447 , 7 + 446 , 14 @ @ public class TypeLibUtil { <nl> * @ return the t info <nl> * / <nl> public ITypeInfo [ ] getTInfo ( ) { <nl> - return pTInfo ; <nl> + <nl> + Pointer pVals = pTInfo . getValue ( ) ; <nl> + ITypeInfo [ ] values = new ITypeInfo [ pcFound ] ; <nl> + for ( int i = 0 ; i < pcFound ; i + + ) <nl> + { <nl> + values [ i ] = new TypeInfo ( pVals . getPointer ( i * Pointer . SIZE ) ) ; <nl> + } <nl> + return values ; <nl> } <nl> <nl> / * * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / Unknown . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / Unknown . java <nl> index a3d993b . . 1f3f18e 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / Unknown . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / Unknown . java <nl> @ @ - 56 , 7 + 56 , 7 @ @ public class Unknown extends COMInvoker implements IUnknown { <nl> * the ppv object <nl> * @ return the hresult <nl> * / <nl> - public HRESULT QueryInterface ( REFIID . ByValue riid , PointerByReference ppvObject ) { <nl> + public HRESULT QueryInterface ( REFIID riid , PointerByReference ppvObject ) { <nl> return ( HRESULT ) this . _ invokeNativeObject ( 0 , <nl> new Object [ ] { this . getPointer ( ) , riid , ppvObject } , <nl> HRESULT . class ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / UnknownListener . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / UnknownListener . java <nl> index 8c9322b . . be1af2f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / UnknownListener . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / UnknownListener . java <nl> @ @ - 45 , 7 + 45 , 7 @ @ public class UnknownListener extends Structure { <nl> 	 protected void initVTable ( final IUnknownCallback callback ) { <nl> 	 	 this . vtbl . QueryInterfaceCallback = new UnknownVTable . QueryInterfaceCallback ( ) { <nl> 	 	 	 @ Override <nl> - 	 	 	 public HRESULT invoke ( Pointer thisPointer , REFIID . ByValue refid , PointerByReference ppvObject ) { <nl> + 	 	 	 public HRESULT invoke ( Pointer thisPointer , REFIID refid , PointerByReference ppvObject ) { <nl> 	 	 	 	 return callback . QueryInterface ( refid , ppvObject ) ; <nl> 	 	 	 } <nl> 	 	 } ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / UnknownVTable . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / UnknownVTable . java <nl> index ec53e1b . . e1052ab 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / UnknownVTable . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / UnknownVTable . java <nl> @ @ - 36 , 7 + 36 , 7 @ @ public class UnknownVTable extends Structure { <nl> 	 } <nl> <nl> 	 public static interface QueryInterfaceCallback extends StdCallLibrary . StdCallCallback { <nl> - 	 	 WinNT . HRESULT invoke ( Pointer thisPointer , REFIID . ByValue refid , PointerByReference ppvObject ) ; <nl> + 	 	 WinNT . HRESULT invoke ( Pointer thisPointer , REFIID refid , PointerByReference ppvObject ) ; <nl> 	 } <nl> <nl> 	 public static interface AddRefCallback extends StdCallLibrary . StdCallCallback { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> index 7a8ccc3 . . 3e4ac9b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / CallbackProxy . java <nl> @ @ - 85 , 12 + 85 , 12 @ @ public class CallbackProxy implements IDispatchCallback { <nl> 	 Factory factory ; <nl> 	 Class < ? > comEventCallbackInterface ; <nl> 	 IComEventCallbackListener comEventCallbackListener ; <nl> - 	 REFIID . ByValue listenedToRiid ; <nl> + 	 REFIID listenedToRiid ; <nl> 	 public DispatchListener dispatchListener ; <nl> 	 Map < DISPID , Method > dsipIdMap ; <nl> 	 ExecutorService executorService ; <nl> <nl> - 	 REFIID . ByValue createRIID ( Class < ? > comEventCallbackInterface ) { <nl> + 	 REFIID createRIID ( Class < ? > comEventCallbackInterface ) { <nl> 	 	 ComInterface comInterfaceAnnotation = comEventCallbackInterface . getAnnotation ( ComInterface . class ) ; <nl> 	 	 if ( null = = comInterfaceAnnotation ) { <nl> 	 	 	 throw new COMException ( <nl> @ @ - 100 , 7 + 100 , 7 @ @ public class CallbackProxy implements IDispatchCallback { <nl> 	 	 if ( null = = iidStr | | iidStr . isEmpty ( ) ) { <nl> 	 	 	 throw new COMException ( " ComInterface must define a value for iid " ) ; <nl> 	 	 } <nl> - 	 	 return new REFIID . ByValue ( new IID ( iidStr ) . getPointer ( ) ) ; <nl> + 	 	 return new REFIID ( new IID ( iidStr ) . getPointer ( ) ) ; <nl> 	 } <nl> <nl> 	 Map < DISPID , Method > createDispIdMap ( Class < ? > comEventCallbackInterface ) { <nl> @ @ - 125 , 7 + 125 , 7 @ @ public class CallbackProxy implements IDispatchCallback { <nl> 	 	 return - 1 ; <nl> 	 } <nl> <nl> - 	 void invokeOnThread ( final DISPID dispIdMember , final REFIID . ByValue riid , LCID lcid , WORD wFlags , <nl> + 	 void invokeOnThread ( final DISPID dispIdMember , final REFIID riid , LCID lcid , WORD wFlags , <nl> 	 	 	 final DISPPARAMS . ByReference pDispParams ) { <nl> 	 	 / / decode arguments <nl> 	 	 / / must decode them on this thread , and create a proxy for any COM objects ( IDispatch ) <nl> @ @ - 142 , 7 + 142 , 7 @ @ public class CallbackProxy implements IDispatchCallback { <nl> 	 	 	 	 	 / / get raw IUnknown interface <nl> 	 	 	 	 	 PointerByReference ppvObject = new PointerByReference ( ) ; <nl> 	 	 	 	 	 IID iid = com . sun . jna . platform . win32 . COM . IUnknown . IID _ IUNKNOWN ; <nl> - 	 	 	 	 	 dispatch . QueryInterface ( new REFIID . ByValue ( iid ) , ppvObject ) ; <nl> + 	 	 	 	 	 dispatch . QueryInterface ( new REFIID ( iid ) , ppvObject ) ; <nl> 	 	 	 	 	 Unknown rawUnk = new Unknown ( ppvObject . getValue ( ) ) ; <nl> 	 	 	 	 	 long unknownId = Pointer . nativeValue ( rawUnk . getPointer ( ) ) ; <nl> 	 	 	 	 	 int n = rawUnk . Release ( ) ; <nl> @ @ - 222 , 13 + 222 , 13 @ @ public class CallbackProxy implements IDispatchCallback { <nl> 	 } <nl> <nl> 	 @ Override <nl> - 	 public HRESULT GetIDsOfNames ( REFIID . ByValue riid , WString [ ] rgszNames , int cNames , LCID lcid , <nl> + 	 public HRESULT GetIDsOfNames ( REFIID riid , WString [ ] rgszNames , int cNames , LCID lcid , <nl> 	 	 	 DISPIDByReference rgDispId ) { <nl> 	 	 return new HRESULT ( WinError . E _ NOTIMPL ) ; <nl> 	 } <nl> <nl> 	 @ Override <nl> - 	 public HRESULT Invoke ( DISPID dispIdMember , REFIID . ByValue riid , LCID lcid , WORD wFlags , <nl> + 	 public HRESULT Invoke ( DISPID dispIdMember , REFIID riid , LCID lcid , WORD wFlags , <nl> 	 	 	 DISPPARAMS . ByReference pDispParams , VARIANT . ByReference pVarResult , EXCEPINFO . ByReference pExcepInfo , <nl> 	 	 	 IntByReference puArgErr ) { <nl> <nl> @ @ - 239 , 7 + 239 , 7 @ @ public class CallbackProxy implements IDispatchCallback { <nl> <nl> 	 / / - - - - - - - - - - - - - - - - - - - - - - - - IUnknown - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> 	 @ Override <nl> - 	 public HRESULT QueryInterface ( REFIID . ByValue refid , PointerByReference ppvObject ) { <nl> + 	 public HRESULT QueryInterface ( REFIID refid , PointerByReference ppvObject ) { <nl> 	 	 if ( null = = ppvObject ) { <nl> 	 	 	 return new HRESULT ( WinError . E _ POINTER ) ; <nl> 	 	 } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> index 20cbb12 . . 307c0ff 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / ProxyObject . java <nl> @ @ - 116 , 7 + 116 , 7 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 	 	 	 	 @ Override <nl> 	 	 	 	 	 public HRESULT call ( ) throws Exception { <nl> 	 	 	 	 	 	 IID iid = com . sun . jna . platform . win32 . COM . IUnknown . IID _ IUNKNOWN ; <nl> - 	 	 	 	 	 	 return ProxyObject . this . getRawDispatch ( ) . QueryInterface ( new REFIID . ByValue ( iid ) , ppvObject ) ; <nl> + 	 	 	 	 	 	 return ProxyObject . this . getRawDispatch ( ) . QueryInterface ( new REFIID ( iid ) , ppvObject ) ; <nl> 	 	 	 	 	 } <nl> 	 	 	 	 } ) ; <nl> 	 	 	 	 <nl> @ @ - 439 , 7 + 439 , 7 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 	 	 HRESULT hr = this . comThread . execute ( new Callable < HRESULT > ( ) { <nl> 	 	 	 	 @ Override <nl> 	 	 	 	 public HRESULT call ( ) throws Exception { <nl> - 	 	 	 	 	 return ProxyObject . this . getRawDispatch ( ) . QueryInterface ( new REFIID . ByValue ( iid ) , ppvObject ) ; <nl> + 	 	 	 	 	 return ProxyObject . this . getRawDispatch ( ) . QueryInterface ( new REFIID ( iid ) , ppvObject ) ; <nl> 	 	 	 	 } <nl> 	 	 	 } ) ; <nl> <nl> @ @ - 564 , 7 + 564 , 7 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 	 	 HRESULT hr = this . comThread . execute ( new Callable < HRESULT > ( ) { <nl> 	 	 	 	 @ Override <nl> 	 	 	 	 public HRESULT call ( ) throws Exception { <nl> - 	 	 	 	 	 HRESULT hr = pDisp . GetIDsOfNames ( new REFIID . ByValue ( Guid . IID _ NULL ) , ptName , 1 , LOCALE _ USER _ DEFAULT , <nl> + 	 	 	 	 	 HRESULT hr = pDisp . GetIDsOfNames ( new REFIID ( Guid . IID _ NULL ) , ptName , 1 , LOCALE _ USER _ DEFAULT , <nl> 	 	 	 	 	 	 	 pdispID ) ; <nl> 	 	 	 	 	 return hr ; <nl> 	 	 	 	 } <nl> @ @ - 630 , 7 + 630 , 7 @ @ public class ProxyObject implements InvocationHandler , com . sun . jna . platform . win3 <nl> 	 	 	 HRESULT hr = this . comThread . execute ( new Callable < HRESULT > ( ) { <nl> 	 	 	 	 @ Override <nl> 	 	 	 	 public HRESULT call ( ) throws Exception { <nl> - 	 	 	 	 	 return pDisp . Invoke ( dispId , new REFIID . ByValue ( Guid . IID _ NULL ) , LOCALE _ SYSTEM _ DEFAULT , <nl> + 	 	 	 	 	 return pDisp . Invoke ( dispId , new REFIID ( Guid . IID _ NULL ) , LOCALE _ SYSTEM _ DEFAULT , <nl> 	 	 	 	 	 	 	 new WinDef . WORD ( nType ) , dp , pvResult , pExcepInfo , puArgErr ) ; <nl> 	 	 	 	 } <nl> 	 	 	 } ) ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shlwapi . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shlwapi . java <nl> index b0cbc1c . . 9b57aae 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shlwapi . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shlwapi . java <nl> @ @ - 6 , 12 + 6 , 12 @ @ package com . sun . jna . platform . win32 ; <nl> <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> - import com . sun . jna . platform . win32 . Shell32 ; <nl> - import com . sun . jna . platform . win32 . WinNT ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> + import com . sun . jna . win32 . StdCallLibrary ; <nl> import com . sun . jna . win32 . W32APIOptions ; <nl> + import com . sun . jna . platform . win32 . WinNT . * ; <nl> <nl> - public interface Shlwapi extends WinNT { <nl> + public interface Shlwapi extends StdCallLibrary { <nl> Shlwapi INSTANCE = ( Shlwapi ) Native . loadLibrary ( " Shlwapi " , Shlwapi . class , W32APIOptions . UNICODE _ OPTIONS ) ; <nl> <nl>
diff - - git a / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java b / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> index 12134a9 . . 1065144 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> @ @ - 30 , 13 + 30 , 15 @ @ public class X11Test extends TestCase { <nl> private X11 . Window root = null ; <nl> <nl> protected void setUp ( ) { <nl> - display = X11 . INSTANCE . XOpenDisplay ( null ) ; <nl> - if ( display = = null ) { <nl> - throw new IllegalStateException ( " Can ' t open default display " ) ; <nl> - } <nl> - root = X11 . INSTANCE . XRootWindow ( display , X11 . INSTANCE . XDefaultScreen ( display ) ) ; <nl> - if ( root = = null ) { <nl> - throw new IllegalStateException ( " Can ' t find root window " ) ; <nl> + if ( ! GraphicsEnvironment . isHeadless ( ) ) { <nl> + display = X11 . INSTANCE . XOpenDisplay ( null ) ; <nl> + if ( display = = null ) { <nl> + throw new IllegalStateException ( " Can ' t open default display " ) ; <nl> + } <nl> + root = X11 . INSTANCE . XRootWindow ( display , X11 . INSTANCE . XDefaultScreen ( display ) ) ; <nl> + if ( root = = null ) { <nl> + throw new IllegalStateException ( " Can ' t find root window " ) ; <nl> + } <nl> } <nl> } <nl>
diff - - git a / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java b / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> index 336e488 . . 12134a9 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna . platform . unix ; <nl> <nl> + import java . awt . GraphicsEnvironment ; <nl> import junit . framework . TestCase ; <nl> <nl> import com . sun . jna . Pointer ; <nl> @ @ - 45 , 6 + 46 , 13 @ @ public class X11Test extends TestCase { <nl> } <nl> } <nl> <nl> + @ Override <nl> + protected void runTest ( ) throws Throwable { <nl> + if ( ! GraphicsEnvironment . isHeadless ( ) ) { <nl> + super . runTest ( ) ; <nl> + } <nl> + } <nl> + <nl> public void testXrender ( ) { <nl> X11 . Xrender . XRenderPictFormat s = new X11 . Xrender . XRenderPictFormat ( ) ; <nl> s . getPointer ( ) . setInt ( 0 , 25 ) ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 76a73fc . . c03ee34 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 22 , 6 + 22 , 7 @ @ Features <nl> * [ # 547 ] ( https : / / github . com / java - native - access / jna / pull / 547 ) : Added ` GetSystemTimes ` to ` com . sun . jna . platform . win32 . Kernel32 ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 548 ] ( https : / / github . com / java - native - access / jna / pull / 548 ) : Return 64 - bit unsigned integer from ` com . sun . jna . platform . win32 . WinBase . FILETIME ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 524 ] ( https : / / github . com / java - native - access / jna / pull / 524 ) : Added IShellFolder interface plus necessary utility functions to Windows platform , and a sample for enumerating objects in My Computer - [ @ lwahonen ] ( https : / / github . com / lwahonen ) . <nl> + * [ # 484 ] ( https : / / github . com / twall / jna / pull / 484 ) : Added ` XFetchName ` to ` X11 ` interface - [ @ pinaf ] ( https : / / github . com / pinaf ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> index 9804106 . . df12670 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> @ @ - 2044 , 6 + 2044 , 19 @ @ public interface X11 extends Library { <nl> * / <nl> int XUngrabKeyboard ( Display display , NativeLong time ) ; <nl> <nl> + / * * <nl> + * The XFetchName ( ) function returns the name of the specified window . If it succeeds , it returns a nonzero status ; <nl> + * otherwise , no name has been set for the window , and it returns zero . If the WM _ NAME property has not been set for this <nl> + * window , XFetchName ( ) sets window _ name _ return to NULL . If the data returned by the server is in the Latin Portable Character <nl> + * Encoding , then the returned string is in the Host Portable Character Encoding . Otherwise , the result is implementation <nl> + * dependent . When finished with it , a client must free the window name string using XFree ( ) . <nl> + * @ param display Specifies the connection to the X server . <nl> + * @ param window Specifies the window . <nl> + * @ param window _ name _ return Returns the window name , which is a null - terminated string . <nl> + * @ return Integer . Nonzero = success , zero = no name has been set . <nl> + * / <nl> + int XFetchName ( Display display , Window window , PointerByReference window _ name _ return ) ; <nl> + <nl> / / int XChangeKeyboardMapping ( Display display , int first _ keycode , int keysyms _ per _ keycode , KeySym * keysyms , int num _ codes ) ; <nl> / * * Defines the symbols for the specified number of KeyCodes starting with <nl> * first _ keycode . The symbols for KeyCodes outside this range remain
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 0c3d7b4 . . 3251447 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 25 , 6 + 25 , 7 @ @ Bug Fixes <nl> - - - - - - - - - <nl> * [ # 549 ] ( https : / / github . com / java - native - access / jna / pull / 549 ) : Fixed bug in types derived from XID - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 536 ] ( https : / / github . com / java - native - access / jna / pull / 536 ) : Fixed bug in determining the Library and options associated with types defined outside of a Library - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ # 531 ] ( https : / / github . com / java - native - access / jna / pull / 531 ) : Ensure direct - mapped callbacks use the right calling convention - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Release 4 . 2 . 1 <nl> = = = = = = = = = = = = = <nl> diff - - git a / src / com / sun / jna / CallbackReference . java b / src / com / sun / jna / CallbackReference . java <nl> index 4ff10b3 . . 16b5a1d 100644 <nl> - - - a / src / com / sun / jna / CallbackReference . java <nl> + + + b / src / com / sun / jna / CallbackReference . java <nl> @ @ - 39 , 7 + 39 , 9 @ @ class CallbackReference extends WeakReference { <nl> static final Map callbackMap = new WeakHashMap ( ) ; <nl> static final Map directCallbackMap = new WeakHashMap ( ) ; <nl> static final Map pointerCallbackMap = new WeakHashMap ( ) ; <nl> + / / Track memory allocations associated with this closure ( usually String args ) <nl> static final Map allocations = new WeakHashMap ( ) ; <nl> + / / Global map of allocated closures to facilitate centralized cleanup <nl> private static final Map allocatedMemory = Collections . synchronizedMap ( new WeakHashMap ( ) ) ; <nl> <nl> private static final Method PROXY _ CALLBACK _ METHOD ; <nl> @ @ - 146 , 9 + 148 , 11 @ @ class CallbackReference extends WeakReference { <nl> / / Keep a reference to the proxy to avoid premature GC of it <nl> CallbackProxy proxy ; <nl> Method method ; <nl> + int callingConvention ; <nl> private CallbackReference ( Callback callback , int callingConvention , boolean direct ) { <nl> super ( callback ) ; <nl> TypeMapper mapper = Native . getTypeMapper ( callback . getClass ( ) ) ; <nl> + this . callingConvention = callingConvention ; <nl> Class [ ] nativeParamTypes ; <nl> Class returnType ; <nl> <nl> @ @ - 180 , 6 + 184 , 7 @ @ class CallbackReference extends WeakReference { <nl> } <nl> <nl> String encoding = Native . getStringEncoding ( callback . getClass ( ) ) ; <nl> + long peer = 0 ; <nl> if ( direct ) { <nl> method = getCallbackMethod ( callback ) ; <nl> nativeParamTypes = method . getParameterTypes ( ) ; <nl> @ @ - 188 , 12 + 193 , 10 @ @ class CallbackReference extends WeakReference { <nl> if ( callback instanceof DLLCallback ) { <nl> flags | = Native . CB _ OPTION _ IN _ DLL ; <nl> } <nl> - long peer = Native . createNativeCallback ( callback , method , <nl> - nativeParamTypes , returnType , <nl> - callingConvention , flags , <nl> - encoding ) ; <nl> - cbstruct = peer ! = 0 ? new Pointer ( peer ) : null ; <nl> - allocatedMemory . put ( this , new WeakReference ( this ) ) ; <nl> + peer = Native . createNativeCallback ( callback , method , <nl> + nativeParamTypes , returnType , <nl> + callingConvention , flags , <nl> + encoding ) ; <nl> } <nl> else { <nl> if ( callback instanceof CallbackProxy ) { <nl> @ @ - 236 , 12 + 239 , 13 @ @ class CallbackReference extends WeakReference { <nl> } <nl> int flags = callback instanceof DLLCallback <nl> ? Native . CB _ OPTION _ IN _ DLL : 0 ; <nl> - long peer = Native . createNativeCallback ( proxy , PROXY _ CALLBACK _ METHOD , <nl> - nativeParamTypes , returnType , <nl> - callingConvention , flags , <nl> - encoding ) ; <nl> - cbstruct = peer ! = 0 ? new Pointer ( peer ) : null ; <nl> + peer = Native . createNativeCallback ( proxy , PROXY _ CALLBACK _ METHOD , <nl> + nativeParamTypes , returnType , <nl> + callingConvention , flags , <nl> + encoding ) ; <nl> } <nl> + cbstruct = peer ! = 0 ? new Pointer ( peer ) : null ; <nl> + allocatedMemory . put ( this , new WeakReference ( this ) ) ; <nl> } <nl> <nl> private Class getNativeType ( Class cls ) { <nl> @ @ - 404 , 8 + 408 , 13 @ @ class CallbackReference extends WeakReference { <nl> if ( ( fp = getNativeFunctionPointer ( cb ) ) ! = null ) { <nl> return fp ; <nl> } <nl> + Map options = Native . getLibraryOptions ( cb . getClass ( ) ) ; <nl> int callingConvention = cb instanceof AltCallingConvention <nl> - ? Function . ALT _ CONVENTION : Function . C _ CONVENTION ; <nl> + ? Function . ALT _ CONVENTION <nl> + : ( options ! = null & & options . containsKey ( Library . OPTION _ CALLING _ CONVENTION ) <nl> + ? ( ( Integer ) options . get ( Library . OPTION _ CALLING _ CONVENTION ) ) . intValue ( ) <nl> + : Function . C _ CONVENTION ) ; <nl> + <nl> Map map = direct ? directCallbackMap : callbackMap ; <nl> synchronized ( callbackMap ) { <nl> CallbackReference cbref = ( CallbackReference ) map . get ( cb ) ; <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index ed6178f . . d147e40 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 1439 , 6 + 1439 , 54 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> } <nl> } <nl> <nl> + public interface TaggedCallingConventionTestLibrary extends Library , AltCallingConvention { <nl> + interface TestCallbackTagged extends Callback , AltCallingConvention { <nl> + void invoke ( ) ; <nl> + } <nl> + } <nl> + <nl> + public void testCallingConventionFromInterface ( ) { <nl> + TaggedCallingConventionTestLibrary lib = ( TaggedCallingConventionTestLibrary ) <nl> + Native . loadLibrary ( " testlib " , TaggedCallingConventionTestLibrary . class ) ; <nl> + TaggedCallingConventionTestLibrary . TestCallbackTagged cb = new TaggedCallingConventionTestLibrary . TestCallbackTagged ( ) { <nl> + public void invoke ( ) { } <nl> + } ; <nl> + try { <nl> + Pointer p = CallbackReference . getFunctionPointer ( cb ) ; <nl> + CallbackReference ref = ( CallbackReference ) CallbackReference . callbackMap . get ( cb ) ; <nl> + assertNotNull ( " CallbackReference not found " , ref ) ; <nl> + assertEquals ( " Tag - based calling convention not applied " , Function . ALT _ CONVENTION , ref . callingConvention ) ; <nl> + } <nl> + catch ( IllegalArgumentException e ) { <nl> + / / Alt convention not supported <nl> + } <nl> + } <nl> + <nl> + public interface OptionCallingConventionTestLibrary extends Library { <nl> + interface TestCallback extends Callback { <nl> + void invoke ( ) ; <nl> + } <nl> + } <nl> + <nl> + public void testCallingConventionFromOptions ( ) { <nl> + Map options = new HashMap ( ) ; <nl> + options . put ( Library . OPTION _ CALLING _ CONVENTION , Function . ALT _ CONVENTION ) ; <nl> + OptionCallingConventionTestLibrary lib = ( OptionCallingConventionTestLibrary ) <nl> + Native . loadLibrary ( " testlib " , OptionCallingConventionTestLibrary . class , options ) ; <nl> + OptionCallingConventionTestLibrary . TestCallback cb = new OptionCallingConventionTestLibrary . TestCallback ( ) { <nl> + public void invoke ( ) { } <nl> + } ; <nl> + try { <nl> + Pointer p = CallbackReference . getFunctionPointer ( cb ) ; <nl> + CallbackReference ref = ( CallbackReference ) CallbackReference . callbackMap . get ( cb ) ; <nl> + assertNotNull ( " CallbackReference not found " , ref ) ; <nl> + assertEquals ( " Option - based calling convention not applied " , Function . ALT _ CONVENTION , ref . callingConvention ) ; <nl> + } <nl> + catch ( IllegalArgumentException e ) { <nl> + / / Alt convention not supported <nl> + } <nl> + } <nl> + <nl> public static void main ( java . lang . String [ ] argList ) { <nl> junit . textui . TestRunner . run ( CallbacksTest . class ) ; <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index c9cb33a . . d162d61 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 12 , 7 + 12 , 7 @ @ Features <nl> * [ # 512 ] ( https : / / github . com / java - native - access / jna / pull / 512 ) : Make loading debug flags mutable [ @ lwahonen ] ( https : / / github . com / lwahonen ) . <nl> * [ # 514 ] ( https : / / github . com / java - native - access / jna / pull / 514 ) : Added ` host _ processor _ info ` to ` com . sun . jna . platform . mac . SystemB ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> * [ # 519 ] ( https : / / github . com / java - native - access / jna / pull / 519 ) : Added JNA functional overview - [ @ twall ] ( https : / / github . com / twall ) . <nl> - * [ # 528 ] ( https : / / github . com / java - native - access / jna / pull / 528 ) : Add an ant task ( idea - jar ) that creates a convenience jar that contains all native dispatch libraries . If you want to hacking on JNA with an IDE , just include idea - dispatch . jar to your classpath and create a module from the JNA src directory . - [ @ lwahonen ] ( https : / / github . com / lwahonen ) . <nl> + * [ # 528 ] ( https : / / github . com / java - native - access / jna / pull / 528 ) : Added idea - jar ant task that creates a convenience jar that contains all native dispatch libraries - [ @ lwahonen ] ( https : / / github . com / lwahonen ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / www / DevelopInIDE . md b / www / DevelopInIDE . md <nl> index ed3aa3f . . 7217ddf 100644 <nl> - - - a / www / DevelopInIDE . md <nl> + + + b / www / DevelopInIDE . md <nl> @ @ - 6 , 5 + 6 , 4 @ @ The idea - jar target generates a jar that contains all the native bits needed by <nl> Create a new module for JNA in Idea , mark the src folder as sources , testsrc as test sources . <nl> Add a library to the module , include all jars from lib , lib / test and the idea - dispatch . jar generated by aforementioned ant target . <nl> <nl> - After this , you should be able to use JNA in your own code via this module , instead of including a JNA jar . This also speeds up development <nl> - quite considerably , as you don ' t need to rebuild JNA jar between code changes . <nl> \ No newline at end of file <nl> + After this , you should be able to use JNA in your own code via this module , instead of including a JNA jar . This also speeds up development quite considerably , as you don ' t need to rebuild JNA jar between code changes .
diff - - git a / CHANGES . md b / CHANGES . md <nl> old mode 100644 <nl> new mode 100755
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IEnumIDList . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IEnumIDList . java <nl> index 0f83cb0 . . 7082d17 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IEnumIDList . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IEnumIDList . java <nl> @ @ - 18 , 17 + 18 , 89 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> public interface IEnumIDList { <nl> <nl> / * * <nl> - * The Constant IID _ IDispatch . <nl> + * The interface IID for QueryInterface et al <nl> * / <nl> public final static IID IID _ IEnumIDList = new IID ( <nl> " { 000214F2 - 0000 - 0000 - C000 - 000000000046 } " ) ; <nl> <nl> + / * * <nl> + * <nl> + * Retrieves pointers to the supported interfaces on an object . <nl> + * This method calls IUnknown : : AddRef on the pointer it returns . <nl> + * <nl> + * @ param riid <nl> + * The identifier of the interface being requested . <nl> + * <nl> + * @ param ppvObject <nl> + * The address of a pointer variable that receives the interface pointer requested in the riid parameter . Upon successful <nl> + * return , * ppvObject contains the requested interface pointer to the object . If the object does not support the <nl> + * interface , * ppvObject is set to NULL . <nl> + * <nl> + * @ return <nl> + * This method returns S _ OK if the interface is supported , and E _ NOINTERFACE otherwise . If ppvObject is NULL , this method returns E _ POINTER . <nl> + * For any one object , a specific query for the IUnknown interface on any of the object ' s interfaces must always return the same pointer value . <nl> + * This enables a client to determine whether two pointers point to the same component by calling QueryInterfacewith IID _ IUnknown <nl> + * and comparing the results . It is specifically not the case that queries for interfaces other than IUnknown ( even the same interface <nl> + * through the same pointer ) must return the same pointer value . <nl> + * <nl> + * There are four requirements for implementations of QueryInterface ( In these cases , " must succeed " means " must succeed barring <nl> + * catastrophic failure . " ) : <nl> + * The set of interfaces accessible on an object through QueryInterface must be static , not dynamic . This means that if a call <nl> + * toQueryInterface for a pointer to a specified interface succeeds the first time , it must succeed again , and if it fails <nl> + * the first time , it must fail on all subsequent queries . <nl> <nl> + * <nl> + * It must be reflexive : if a client holds a pointer to an interface on an object , and queries for that interface , the call must succeed . <nl> <nl> + * <nl> + * It must be symmetric : if a client holding a pointer to one interface queries successfully for another , a query through <nl> + * the obtained pointer for the first interface must succeed . <nl> <nl> + * <nl> + * It must be transitive : if a client holding a pointer to one interface queries successfully for a second , and through that <nl> + * pointer queries successfully for a third interface , a query for the first interface through the pointer for the <nl> + * third interface must succeed . <nl> <nl> + * Notes to Implementers <nl> + * Implementations of QueryInterface must never check ACLs . The main reason for this rule is that COM requires that an object supporting a <nl> + * particular interface always return success when queried for that interface . Another reason is that checking ACLs on QueryInterface <nl> + * does not provide any real security because any client who has access to a particular interface can hand it directly to another <nl> + * client without any calls back to the server . Also , because COM caches interface pointers , it does not callQueryInterface on <nl> + * the server every time a client does a query . <nl> + * / <nl> HRESULT QueryInterface ( <nl> Guid . GUID . ByReference riid , <nl> PointerByReference ppvObject ) ; <nl> <nl> + / * * <nl> + * <nl> + * Increments the reference count for an interface on an object . This method should be called for every new copy of a pointer to an interface on an object . <nl> + * @ return <nl> + * The method returns the new reference count . This value is intended to be used only for test purposes . <nl> + * <nl> + * Objects use a reference counting mechanism to ensure that the lifetime of the object includes the lifetime of references to it . You use AddRef <nl> + * to stabilize a copy of an interface pointer . It can also be called when the life of a cloned pointer must extend beyond the <nl> + * lifetime of the original pointer . The cloned pointer must be released by calling IUnknown : : Release . <nl> + * <nl> + * The internal reference counter that AddRef maintains should be a 32 - bit unsigned integer . <nl> + * Notes to Callers <nl> + * Call this method for every new copy of an interface pointer that you make . For example , if you are passing a copy of a pointer <nl> + * back from a method , you must call AddRef on that pointer . You must also call AddRef on a pointer before passing it as an in - out <nl> + * parameter to a method ; the method will call IUnknown : : Release before copying the out - value on top of it . <nl> + * / <nl> int AddRef ( ) ; <nl> <nl> + / * * <nl> + * Decrements the reference count for an interface on an object . <nl> + * <nl> + * @ return <nl> + * The method returns the new reference count . This value is intended to be used only for test purposes . <nl> + * <nl> + * When the reference count on an object reaches zero , Release must cause the interface pointer to free itself . When the released <nl> + * pointer is the only existing reference to an object ( whether the object supports single or multiple interfaces ) , the <nl> + * implementation must free the object . <nl> + * <nl> + * Note that aggregation of objects restricts the ability to recover interface pointers . <nl> + * Notes to Callers <nl> + * Call this method when you no longer need to use an interface pointer . If you are writing a method that takes an in - out <nl> + * parameter , call Release on the pointer you are passing in before copying the out - value on top of it . <nl> + * / <nl> int Release ( ) ; <nl> <nl> / *
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 7ea4ae7 . . 8eabf39 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 21 , 6 + 21 , 7 @ @ Features <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> + * [ # 549 ] ( https : / / github . com / java - native - access / jna / pull / 549 ) : Fixed bug in types derived from XID - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Release 4 . 2 . 1 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> index 8190b4d . . 9804106 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> @ @ - 35 , 8 + 35 , 19 @ @ public interface X11 extends Library { <nl> <nl> class VisualID extends NativeLong { <nl> private static final long serialVersionUID = 1L ; <nl> + public static final VisualID None = null ; <nl> public VisualID ( ) { this ( 0 ) ; } <nl> public VisualID ( long value ) { super ( value , true ) ; } <nl> + protected boolean isNone ( Object o ) { <nl> + return o = = null <nl> + | | ( o instanceof Number <nl> + & & ( ( Number ) o ) . longValue ( ) = = X11 . None ) ; <nl> + } <nl> + public Object fromNative ( Object nativeValue , FromNativeContext context ) { <nl> + if ( isNone ( nativeValue ) ) <nl> + return None ; <nl> + return new VisualID ( ( ( Number ) nativeValue ) . longValue ( ) ) ; <nl> + } <nl> } <nl> <nl> class XID extends NativeLong { <nl> @ @ - 286 , 8 + 297 , 14 @ @ public interface X11 extends Library { <nl> } <nl> class PictFormat extends XID { <nl> private static final long serialVersionUID = 1L ; <nl> + public static final PictFormat None = null ; <nl> public PictFormat ( long value ) { super ( value ) ; } <nl> public PictFormat ( ) { this ( 0 ) ; } <nl> + public Object fromNative ( Object nativeValue , FromNativeContext context ) { <nl> + if ( isNone ( nativeValue ) ) <nl> + return None ; <nl> + return new PictFormat ( ( ( Number ) nativeValue ) . longValue ( ) ) ; <nl> + } <nl> } <nl> class XRenderPictFormat extends Structure { <nl> public PictFormat id ; <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java b / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> new file mode 100644 <nl> index 0000000 . . 3616898 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> @ @ - 0 , 0 + 1 , 36 @ @ <nl> + / * Copyright ( c ) 2015 Timothy Wall , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * < p / > <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . unix ; <nl> + <nl> + import junit . framework . TestCase ; <nl> + <nl> + / * * <nl> + * Exercise the { @ link X11 } class . <nl> + * <nl> + * @ author twalljava @ java . net <nl> + * / <nl> + / / @ SuppressWarnings ( " unused " ) <nl> + public class X11Test extends TestCase { <nl> + <nl> + public void testXrender ( ) { <nl> + X11 . Xrender . XRenderPictFormat s = new X11 . Xrender . XRenderPictFormat ( ) ; <nl> + s . getPointer ( ) . setInt ( 0 , 25 ) ; <nl> + s . read ( ) ; <nl> + } <nl> + <nl> + public static void main ( java . lang . String [ ] argList ) { <nl> + junit . textui . TestRunner . run ( X11Test . class ) ; <nl> + } <nl> + } <nl> + <nl> +
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index 3c7975b . . 6d118e9 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 1246 , 7 + 1246 , 7 @ @ public interface Kernel32 extends StdCallLibrary , WinNT , Wincon { <nl> * 	 	 	 Handle for the running process <nl> * @ param dwFlags <nl> * 	 	 	 0 - The name should use the Win32 path format . <nl> - * 	 	 	 1 ( PROCESS _ NAME _ NATIVE ) - The name should use the native system path format . <nl> + * 	 	 	 1 ( WinNT . PROCESS _ NAME _ NATIVE ) - The name should use the native system path format . <nl> * @ param lpExeName <nl> * 	 	 	 pre - allocated character buffer for the returned path <nl> * @ param lpdwSize <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> index d0518ad . . c8db074 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> @ @ - 687 , 7 + 687 , 7 @ @ public abstract class Kernel32Util implements WinDef { <nl> * 	 	 	 Handle for the running process <nl> * @ param dwFlags <nl> * 	 	 	 0 - The name should use the Win32 path format . <nl> - * 	 	 	 1 ( PROCESS _ NAME _ NATIVE ) - The name should use the native system path format . <nl> + * 	 	 	 1 ( WinNT . PROCESS _ NAME _ NATIVE ) - The name should use the native system path format . <nl> * <nl> * @ return the full path of the process ' s executable file of null if failed . To get extended error information , <nl> * 	 	 call GetLastError . <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index 2688274 . . 85de588 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 2177 , 8 + 2177 , 9 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> 	 * / <nl> 	 int PROCESS _ TERMINATE = 0x00000001 ; <nl> <nl> - 	 / * * <nl> - 	 * Required for getting process path <nl> + / * * <nl> + 	 * Required for getting process exe path in native system path format <nl> + 	 * { @ code Kernel32 . QueryFullProcessImageName ( ) } . <nl> 	 * / <nl> 	 int PROCESS _ NAME _ NATIVE = 0x00000001 ; <nl> 	
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> index 5fc3979 . . 7820917 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> @ @ - 2250 , 7 + 2250 , 7 @ @ public interface Advapi32 extends StdCallLibrary { <nl> 	 * process is terminated . < br > <nl> 	 * To get the termination status of a process , call <nl> 	 * GetExitCodeProcess . <nl> - 	 * @ see MSDN { @ link http : / / msdn . microsoft . com / en - us / library / windows / desktop / ms682431 % 28v = vs . 85 % 29 . aspx } <nl> + 	 * @ see < a href = " http : / / msdn . microsoft . com / en - us / library / windows / desktop / ms682431 % 28v = vs . 85 % 29 . aspx " > MSDN < / a > <nl> 	 * / <nl> 	 boolean CreateProcessWithLogonW ( String lpUsername , String lpDomain , String lpPassword , int dwLogonFlags , <nl> 	 	 	 String lpApplicationName , String lpCommandLine , int dwCreationFlags , Pointer lpEnvironment , <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Crypt32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Crypt32 . java <nl> index 170029f . . 25f5d8f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Crypt32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Crypt32 . java <nl> @ @ - 130 , 7 + 130 , 7 @ @ public interface Crypt32 extends StdCallLibrary { <nl> 	 * Refer to those function topics for their respective error <nl> 	 * handling behaviors . < br > <nl> 	 * For extended error information , call GetLastError . <nl> - 	 * @ see MSDN { @ link http : / / msdn . microsoft . com / en - us / library / bb736347 ( v = vs . 85 ) . aspx } <nl> + 	 * @ see < a href = " http : / / msdn . microsoft . com / en - us / library / bb736347 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> 	 * / <nl> 	 boolean CertAddEncodedCertificateToSystemStore ( String szCertStoreName , Pointer pbCertEncoded , int cbCertEncoded ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index ee663a2 . . 650e0a3 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 2464 , 7 + 2464 , 7 @ @ public interface Kernel32 extends StdCallLibrary , WinNT , Wincon { <nl> * Reads data from an area of memory in a specified process . The entire area <nl> * to be read must be accessible or the operation fails . <nl> * <nl> - * @ see MSDN { @ link https : / / msdn . microsoft . com / en - us / library / windows / desktop / ms680553 ( v = vs . 85 ) . aspx } <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / ms680553 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> * @ param hProcess <nl> * A handle to the process with memory that is being read . The <nl> * handle must have PROCESS _ VM _ READ access to the process . <nl> @ @ - 2780 , 7 + 2780 , 7 @ @ public interface Kernel32 extends StdCallLibrary , WinNT , Wincon { <nl> * [ in ] A handle to the communications device . < br > <nl> * The <nl> * { @ link com . sun . jna . platform . win32 . Kernel32 # CreateFile ( String , int , int , com . sun . jna . platform . win32 . WinBase . SECURITY _ ATTRIBUTES , int , int , com . sun . jna . platform . win32 . WinNT . HANDLE ) } <nl> - * function returns this { @ link HANDLE } . <nl> + * function returns this { @ link WinNT . HANDLE } . <nl> * @ param lpDCB <nl> * [ in , out ] A pointer to a { @ link WinBase . DCB } structure that <nl> * receives the control settings information . <nl> @ @ - 2846 , 7 + 2846 , 7 @ @ public interface Kernel32 extends StdCallLibrary , WinNT , Wincon { <nl> * [ in ] A handle to the communications device . The <nl> * { @ link com . sun . jna . platform . win32 . Kernel32 # CreateFile ( String , int , int , com . sun . jna . platform . win32 . WinBase . SECURITY _ ATTRIBUTES , int , int , com . sun . jna . platform . win32 . WinNT . HANDLE ) } <nl> * function returns this handle . <nl> - * @ param LPCOMMTIMEOUTS <nl> + * @ param lpCommTimeouts <nl> * [ in ] A pointer to a { @ link WinBase . COMMTIMEOUTS } structure <nl> * that contains the new time - out values . <nl> * @ return If the function succeeds , the return value is nonzero . < br > <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Tlhelp32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Tlhelp32 . java <nl> index 517fef7 . . ccd671c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Tlhelp32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Tlhelp32 . java <nl> @ @ - 51 , 7 + 51 , 7 @ @ public interface Tlhelp32 { <nl> * To include the 32 - bit modules of the process specified in th32ProcessID <nl> * from a 64 - bit process , use the TH32CS _ SNAPMODULE32 flag . <nl> * <nl> - * @ see MSDN { @ link https : / / msdn . microsoft . com / en - us / library / windows / desktop / ms682489 ( v = vs . 85 ) . aspx } <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / ms682489 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> * / <nl> WinDef . DWORD TH32CS _ SNAPMODULE = new WinDef . DWORD ( 0x00000008 ) ; <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> index d8f30ca . . e54601b 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> @ @ - 1133 , 10 + 1133 , 7 @ @ public interface WinBase extends WinDef , BaseTSD { <nl> 	 * <nl> 	 * Contains the time - out parameters for a communications device . The <nl> 	 * parameters determine the behavior of <nl> - 	 * { @ link Kernel32 # ReadFile ( com . sun . jna . platform . win32 . WinNT . HANDLE , java . nio . Buffer , int , com . sun . jna . ptr . IntByReference , com . sun . jna . platform . win32 . WinBase . OVERLAPPED ) } <nl> - 	 * , { @ link Kernel32 # WriteFile ( com . sun . jna . platform . win32 . WinNT . HANDLE , <nl> - 	 * byte [ ] , int , com . sun . jna . ptr . IntByReference , <nl> - 	 * com . sun . jna . platform . win32 . WinBase . OVERLAPPED ) ) } , ReadFileEx , and <nl> + 	 * { @ link Kernel32 # ReadFile } , { @ link Kernel32 # WriteFile } , ReadFileEx , and <nl> 	 * WriteFileEx operations on the device . < br > <nl> 	 * < br > <nl> 	 * <nl> @ @ - 1161 , 7 + 1158 , 7 @ @ public interface WinBase extends WinDef , BaseTSD { <nl> 	 	 * The maximum time allowed to elapse before the arrival of the next <nl> 	 	 * byte on the communications line , in milliseconds . If the interval <nl> 	 	 * between the arrival of any two bytes exceeds this amount , the <nl> - 	 	 * { @ link Kernel32 # ReadFile ( com . sun . jna . platform . win32 . WinNT . HANDLE , java . nio . Buffer , int , com . sun . jna . ptr . IntByReference , com . sun . jna . platform . win32 . WinBase . OVERLAPPED ) } <nl> + 	 	 * { @ link Kernel32 # ReadFile } <nl> 	 	 * operation is completed and any buffered data is returned . A value of <nl> 	 	 * zero indicates that interval time - outs are not used . <nl> 	 	 * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinCrypt . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinCrypt . java <nl> index cc57161 . . 2f32390 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinCrypt . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinCrypt . java <nl> @ @ - 172 , 118 + 172 , 117 @ @ public interface WinCrypt { <nl> * / <nl> int CRYPTPROTECT _ CRED _ REGENERATE = 0x80 ; <nl> <nl> - 	 / * * <nl> - 	 * ASN . 1 Certificate encode / decode return value base <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ ERROR = 0x80093100 ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 internal encode or decode error <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ INTERNAL = 0x80093101 ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 unexpected end of data <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ EOD = 0x80093102 ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 corrupted data <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ CORRUPT = 0x80093103 ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 value too large <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ LARGE = 0x80093104 ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 constraint violated <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ CONSTRAINT = 0x80093105 ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 out of memory <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ MEMORY = 0x80093106 ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 buffer overflow <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ OVERFLOW = 0x80093107 ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 function not supported for this PDU <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ BADPDU = 0x80093108 ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 bad arguments to function call <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ BADARGS = 0x80093109 ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 bad real value <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ BADREAL = 0x8009310A ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 bad tag value met <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ BADTAG = 0x8009310B ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 bad choice value <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ CHOICE = 0x8009310C ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 bad encoding rule <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ RULE = 0x8009310D ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 bad Unicode ( UTF8 ) <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ UTF8 = 0x8009310E ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 bad PDU type <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ PDU _ TYPE = 0x80093133 ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 not yet implemented <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ NYI = 0x80093134 ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 skipped unknown extensions <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ EXTENDED = 0x80093201 ; <nl> - <nl> - 	 / * * <nl> - 	 * ASN . 1 end of data expected <nl> - 	 * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx <nl> - 	 * / <nl> - 	 int CRYPT _ E _ ASN1 _ NOEOD = 0x80093202 ; <nl> + / * * <nl> + * ASN . 1 Certificate encode / decode return value base <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ ERROR = 0x80093100 ; <nl> + <nl> + / * * <nl> + * ASN . 1 internal encode or decode error <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ INTERNAL = 0x80093101 ; <nl> + <nl> + / * * <nl> + * ASN . 1 unexpected end of data <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ EOD = 0x80093102 ; <nl> + <nl> + / * * <nl> + * ASN . 1 corrupted data <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ CORRUPT = 0x80093103 ; <nl> <nl> + / * * <nl> + * ASN . 1 value too large <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ LARGE = 0x80093104 ; <nl> + <nl> + / * * <nl> + * ASN . 1 constraint violated <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ CONSTRAINT = 0x80093105 ; <nl> + <nl> + / * * <nl> + * ASN . 1 out of memory <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ MEMORY = 0x80093106 ; <nl> + <nl> + / * * <nl> + * ASN . 1 buffer overflow <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ OVERFLOW = 0x80093107 ; <nl> + <nl> + / * * <nl> + * ASN . 1 function not supported for this PDU <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ BADPDU = 0x80093108 ; <nl> + <nl> + / * * <nl> + * ASN . 1 bad arguments to function call <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ BADARGS = 0x80093109 ; <nl> + <nl> + / * * <nl> + * ASN . 1 bad real value <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ BADREAL = 0x8009310A ; <nl> + <nl> + / * * <nl> + * ASN . 1 bad tag value met <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ BADTAG = 0x8009310B ; <nl> + <nl> + / * * <nl> + * ASN . 1 bad choice value <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ CHOICE = 0x8009310C ; <nl> + <nl> + / * * <nl> + * ASN . 1 bad encoding rule <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ RULE = 0x8009310D ; <nl> + <nl> + / * * <nl> + * ASN . 1 bad Unicode ( UTF8 ) <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ UTF8 = 0x8009310E ; <nl> + <nl> + / * * <nl> + * ASN . 1 bad PDU type <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ PDU _ TYPE = 0x80093133 ; <nl> + <nl> + / * * <nl> + * ASN . 1 not yet implemented <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ NYI = 0x80093134 ; <nl> + <nl> + / * * <nl> + * ASN . 1 skipped unknown extensions <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ EXTENDED = 0x80093201 ; <nl> + <nl> + / * * <nl> + * ASN . 1 end of data expected <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa375564 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> + * / <nl> + int CRYPT _ E _ ASN1 _ NOEOD = 0x80093202 ; <nl> }
diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index 5aa5ece . . 65fd1c1 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 108 , 9 + 108 , 10 @ @ com . sun . jna . platform . wince <nl> < target name = " test " depends = " init , compile , compile - test , - pre - test - run " description = " Run platform unit tests . " > <nl> < echo > Running platform tests : $ { test . src . dir } < / echo > <nl> < property name = " test . fork " value = " yes " / > <nl> - < property name = " build . test . results . dir . abs " location = " $ { build . test . results . dir } " / > <nl> - < mkdir dir = " $ { build . test . results . dir . abs } " / > <nl> - < echo > Saving test results in $ { build . test . results . dir . abs } < / echo > <nl> + < property name = " reports . junit " location = " $ { build } / reports / junit / $ { os . prefix } " / > <nl> + < property name = " results . junit " location = " $ { build } / junit - results / $ { os . prefix } " / > <nl> + < mkdir dir = " $ { results . junit } " / > <nl> + < echo > Saving test results in $ { results . junit } < / echo > <nl> < condition property = " tests . platform " value = " * * / mac / * * / * Test . java " > <nl> < os family = " mac " / > <nl> < / condition > <nl> @ @ - 151 , 7 + 152 , 7 @ @ com . sun . jna . platform . wince <nl> < classpath > < path path = " $ { run . test . classpath } " / > < path path = " $ { file . reference . jna . build } / test - classes " / > < / classpath > <nl> < formatter type = " brief " usefile = " false " / > <nl> < formatter type = " xml " / > <nl> - < batchtest todir = " $ { build . test . results . dir } " > <nl> + < batchtest todir = " $ { results . junit } " > <nl> < fileset dir = " $ { test . src . dir } " excludes = " $ { tests . exclude - patterns } " > <nl> < ! - - Until StructureFieldOrderTest gets fixed up a little - - > <nl> < exclude name = " * * / StructureFieldOrderTest . java " / > <nl> @ @ - 161 , 13 + 162 , 13 @ @ com . sun . jna . platform . wince <nl> < / fileset > <nl> < / batchtest > <nl> < / junit > <nl> - < junitreport todir = " $ { build . test . results . dir } " > <nl> - 	 < fileset dir = " $ { build . test . results . dir } " > <nl> + < junitreport todir = " $ { results . junit } " > <nl> + 	 < fileset dir = " $ { results . junit } " > <nl> 	 < include name = " TEST - * . xml " / > <nl> 	 < / fileset > <nl> - 	 < report todir = " $ { build . test . results . dir } " / > <nl> + 	 < report todir = " $ { reports . junit } " / > <nl> < / junitreport > <nl> - < echo message = " View test report in file : / / $ { build . test . results . dir . abs } / index . html " / > <nl> + < echo message = " View test report in file : / / $ { reports . junit } / index . html " / > <nl> < fail if = " testfailure " > One or more tests failed < / fail > <nl> < / target > <nl> <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> index 7ba2413 . . 609166e 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> @ @ - 36 , 7 + 36 , 8 @ @ import junit . framework . TestCase ; <nl> * / <nl> public class Shell32Test extends TestCase { <nl> <nl> - private static final int RESIZE _ HEIGHT = 500 ; <nl> + / / avoid disrupting the screen _ too _ much <nl> + private static final int RESIZE _ DELTA = 10 ; <nl> private static final int WM _ USER = 0x0400 ; <nl> <nl> public static void main ( String [ ] args ) { <nl> @ @ - 46 , 8 + 47 , 8 @ @ public class Shell32Test extends TestCase { <nl> public void testSHGetFolderPath ( ) { <nl> 	 char [ ] pszPath = new char [ WinDef . MAX _ PATH ] ; <nl> 	 assertEquals ( W32Errors . S _ OK , Shell32 . INSTANCE . SHGetFolderPath ( null , <nl> - 	 	 	 ShlObj . CSIDL _ PROGRAM _ FILES , null , ShlObj . SHGFP _ TYPE _ CURRENT , <nl> - 	 	 	 pszPath ) ) ; <nl> + ShlObj . CSIDL _ PROGRAM _ FILES , null , ShlObj . SHGFP _ TYPE _ CURRENT , <nl> + pszPath ) ) ; <nl> 	 assertTrue ( Native . toString ( pszPath ) . length ( ) > 0 ) ; <nl> } <nl> <nl> @ @ - 98 , 7 + 99 , 7 @ @ public class Shell32Test extends TestCase { <nl> APPBARDATA data = new APPBARDATA . ByReference ( ) ; <nl> <nl> data . uEdge . setValue ( ShellAPI . ABE _ BOTTOM ) ; <nl> - data . rc . top = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CYFULLSCREEN ) - RESIZE _ HEIGHT ; <nl> + data . rc . top = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CYFULLSCREEN ) - RESIZE _ DELTA ; <nl> data . rc . left = 0 ; <nl> data . rc . bottom = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CYFULLSCREEN ) ; <nl> data . rc . right = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CXFULLSCREEN ) ; <nl> @ @ - 121 , 7 + 122 , 7 @ @ public class Shell32Test extends TestCase { <nl> data . uEdge . setValue ( ShellAPI . ABE _ TOP ) ; <nl> data . rc . top = 0 ; <nl> data . rc . left = 0 ; <nl> - data . rc . bottom = RESIZE _ HEIGHT ; <nl> + data . rc . bottom = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CXFULLSCREEN ) - RESIZE _ DELTA ; <nl> data . rc . right = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CXFULLSCREEN ) ; <nl> <nl> queryPos ( data ) ; <nl> @ @ - 135 , 93 + 136 , 93 @ @ public class Shell32Test extends TestCase { <nl> <nl> } <nl> <nl> - 	 public void testSHGetKnownFolderPath ( ) { <nl> - 	 	 int flags = ShlObj . KNOWN _ FOLDER _ FLAG . NONE . getFlag ( ) ; <nl> - 	 	 PointerByReference outPath = new PointerByReference ( ) ; <nl> - 	 	 HANDLE token = null ; <nl> - 	 	 GUID guid = KnownFolders . FOLDERID _ Fonts ; <nl> - 	 	 HRESULT hr = Shell32 . INSTANCE . SHGetKnownFolderPath ( guid , flags , token , outPath ) ; <nl> - <nl> - 	 	 Ole32 . INSTANCE . CoTaskMemFree ( outPath . getValue ( ) ) ; <nl> - <nl> - 	 	 assertTrue ( W32Errors . SUCCEEDED ( hr . intValue ( ) ) ) ; <nl> - 	 } <nl> - <nl> - 	 public void testSHEmptyRecycleBin ( ) { <nl> - 	 	 File file = new File ( System . getProperty ( " java . io . tmpdir " ) , System . nanoTime ( ) + " . txt " ) ; <nl> - 	 	 try { <nl> - 	 	 	 / / Create a file and immediately send it to the recycle bin . <nl> - 	 	 	 try { <nl> - 	 	 	 	 fillTempFile ( file ) ; <nl> - 	 	 	 	 W32FileUtils . getInstance ( ) . moveToTrash ( new File [ ] { file } ) ; <nl> - 	 	 	 } catch ( IOException e ) { <nl> - 	 	 	 	 throw new RuntimeException ( e ) ; <nl> - 	 	 	 } <nl> - <nl> - 	 	 	 int result = Shell32 . INSTANCE . SHEmptyRecycleBin ( null , null , <nl> - 	 	 	 	 	 Shell32 . SHERB _ NOCONFIRMATION | Shell32 . SHERB _ NOPROGRESSUI | Shell32 . SHERB _ NOSOUND ) ; <nl> - 	 	 	 / / for reasons I can not find documented on MSDN , <nl> - 	 	 	 / / the function returns the following : <nl> - 	 	 	 / / 0 when the recycle bin has items in it <nl> - 	 	 	 / / - 2147418113 when the recycle bin has no items in it <nl> - 	 	 	 assertEquals ( " Result should have been ERROR _ SUCCESS when emptying Recycle Bin - there should have been a file in it . " , <nl> - 	 	 	 	 	 W32Errors . ERROR _ SUCCESS , result ) ; <nl> - 	 	 } finally { <nl> - 	 	 	 / / if the file wasn ' t sent to the recycle bin , delete it . <nl> - 	 	 	 if ( file . exists ( ) ) { <nl> - 	 	 	 	 file . delete ( ) ; <nl> - 	 	 	 } <nl> - 	 	 } <nl> - 	 } <nl> - <nl> - 	 public void testShellExecuteEx ( ) { <nl> - 	 	 File file = new File ( System . getProperty ( " java . io . tmpdir " ) , System . nanoTime ( ) + " . txt " ) ; <nl> - 	 	 try { <nl> - 	 	 	 try { <nl> - 	 	 	 	 fillTempFile ( file ) ; <nl> - 	 	 	 } catch ( IOException e ) { <nl> - 	 	 	 	 throw new RuntimeException ( e ) ; <nl> - 	 	 	 } <nl> - <nl> - 	 	 	 SHELLEXECUTEINFO lpExecInfo = new SHELLEXECUTEINFO ( ) ; <nl> - 	 	 	 / / to avoid opening something and having hProcess come up null <nl> - 	 	 	 / / ( meaning we opened something but can ' t close it ) <nl> - 	 	 	 / / we will do a negative test with a bogus action . <nl> - 	 	 	 lpExecInfo . lpVerb = " 0p3n " ; <nl> - 	 	 	 lpExecInfo . nShow = User32 . SW _ SHOWDEFAULT ; <nl> - 	 	 	 lpExecInfo . fMask = Shell32 . SEE _ MASK _ NOCLOSEPROCESS | Shell32 . SEE _ MASK _ FLAG _ NO _ UI ; <nl> - 	 	 	 lpExecInfo . lpFile = file . getAbsolutePath ( ) ; <nl> - <nl> - 	 	 	 assertFalse ( " ShellExecuteEx should have returned false - action verb was bogus . " , <nl> - 	 	 	 	 	 Shell32 . INSTANCE . ShellExecuteEx ( lpExecInfo ) ) ; <nl> - 	 	 	 assertEquals ( " GetLastError ( ) should have been set to ERROR _ NO _ ASSOCIATION because of bogus action " , <nl> - 	 	 	 	 	 W32Errors . ERROR _ NO _ ASSOCIATION , Native . getLastError ( ) ) ; <nl> - 	 	 } finally { <nl> - 	 	 	 if ( file . exists ( ) ) { <nl> - 	 	 	 	 file . delete ( ) ; <nl> - 	 	 	 } <nl> - 	 	 } <nl> - <nl> - 	 } <nl> - <nl> - 	 / * * <nl> - 	 * Creates ( if needed ) and fills the specified file with some content ( 10 lines of the same text ) <nl> - 	 * <nl> - 	 * @ param file <nl> - 	 * The file to fill with content <nl> - 	 * @ throws IOException <nl> - 	 * If writing the content fails <nl> - 	 * / <nl> - 	 private void fillTempFile ( File file ) throws IOException { <nl> - 	 	 file . createNewFile ( ) ; <nl> - 	 	 FileWriter fileWriter = new FileWriter ( file ) ; <nl> - 	 	 try { <nl> - 	 	 	 for ( int i = 0 ; i < 10 ; i + + ) { <nl> - 	 	 	 	 fileWriter . write ( " Sample line of text " ) ; <nl> - 	 	 	 	 fileWriter . write ( System . getProperty ( " line . separator " ) ) ; <nl> - 	 	 	 } <nl> - 	 	 } finally { <nl> - 	 	 	 fileWriter . close ( ) ; <nl> - 	 	 } <nl> - 	 } <nl> + public void testSHGetKnownFolderPath ( ) { <nl> + int flags = ShlObj . KNOWN _ FOLDER _ FLAG . NONE . getFlag ( ) ; <nl> + PointerByReference outPath = new PointerByReference ( ) ; <nl> + HANDLE token = null ; <nl> + GUID guid = KnownFolders . FOLDERID _ Fonts ; <nl> + HRESULT hr = Shell32 . INSTANCE . SHGetKnownFolderPath ( guid , flags , token , outPath ) ; <nl> + <nl> + Ole32 . INSTANCE . CoTaskMemFree ( outPath . getValue ( ) ) ; <nl> + <nl> + assertTrue ( W32Errors . SUCCEEDED ( hr . intValue ( ) ) ) ; <nl> + } <nl> + <nl> + public void testSHEmptyRecycleBin ( ) { <nl> + File file = new File ( System . getProperty ( " java . io . tmpdir " ) , System . nanoTime ( ) + " . txt " ) ; <nl> + try { <nl> + / / Create a file and immediately send it to the recycle bin . <nl> + try { <nl> + fillTempFile ( file ) ; <nl> + W32FileUtils . getInstance ( ) . moveToTrash ( new File [ ] { file } ) ; <nl> + } catch ( IOException e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + <nl> + int result = Shell32 . INSTANCE . SHEmptyRecycleBin ( null , null , <nl> + Shell32 . SHERB _ NOCONFIRMATION | Shell32 . SHERB _ NOPROGRESSUI | Shell32 . SHERB _ NOSOUND ) ; <nl> + / / for reasons I can not find documented on MSDN , <nl> + / / the function returns the following : <nl> + / / 0 when the recycle bin has items in it <nl> + / / - 2147418113 when the recycle bin has no items in it <nl> + assertEquals ( " Result should have been ERROR _ SUCCESS when emptying Recycle Bin - there should have been a file in it . " , <nl> + W32Errors . ERROR _ SUCCESS , result ) ; <nl> + } finally { <nl> + / / if the file wasn ' t sent to the recycle bin , delete it . <nl> + if ( file . exists ( ) ) { <nl> + file . delete ( ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + public void testShellExecuteEx ( ) { <nl> + File file = new File ( System . getProperty ( " java . io . tmpdir " ) , System . nanoTime ( ) + " . txt " ) ; <nl> + try { <nl> + try { <nl> + fillTempFile ( file ) ; <nl> + } catch ( IOException e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + <nl> + SHELLEXECUTEINFO lpExecInfo = new SHELLEXECUTEINFO ( ) ; <nl> + / / to avoid opening something and having hProcess come up null <nl> + / / ( meaning we opened something but can ' t close it ) <nl> + / / we will do a negative test with a bogus action . <nl> + lpExecInfo . lpVerb = " 0p3n " ; <nl> + lpExecInfo . nShow = User32 . SW _ SHOWDEFAULT ; <nl> + lpExecInfo . fMask = Shell32 . SEE _ MASK _ NOCLOSEPROCESS | Shell32 . SEE _ MASK _ FLAG _ NO _ UI ; <nl> + lpExecInfo . lpFile = file . getAbsolutePath ( ) ; <nl> + <nl> + assertFalse ( " ShellExecuteEx should have returned false - action verb was bogus . " , <nl> + Shell32 . INSTANCE . ShellExecuteEx ( lpExecInfo ) ) ; <nl> + assertEquals ( " GetLastError ( ) should have been set to ERROR _ NO _ ASSOCIATION because of bogus action " , <nl> + W32Errors . ERROR _ NO _ ASSOCIATION , Native . getLastError ( ) ) ; <nl> + } finally { <nl> + if ( file . exists ( ) ) { <nl> + file . delete ( ) ; <nl> + } <nl> + } <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * Creates ( if needed ) and fills the specified file with some content ( 10 lines of the same text ) <nl> + * <nl> + * @ param file <nl> + * The file to fill with content <nl> + * @ throws IOException <nl> + * If writing the content fails <nl> + * / <nl> + private void fillTempFile ( File file ) throws IOException { <nl> + file . createNewFile ( ) ; <nl> + FileWriter fileWriter = new FileWriter ( file ) ; <nl> + try { <nl> + for ( int i = 0 ; i < 10 ; i + + ) { <nl> + fileWriter . write ( " Sample line of text " ) ; <nl> + fileWriter . write ( System . getProperty ( " line . separator " ) ) ; <nl> + } <nl> + } finally { <nl> + fileWriter . close ( ) ; <nl> + } <nl> + } <nl> }
diff - - git a / build . xml b / build . xml <nl> index 9e7d750 . . 7a42361 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 975 , 7 + 975 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < condition property = " tests . platform " value = " * * / mac / * * / * Test . java " > <nl> < os family = " mac " / > <nl> < / condition > <nl> - < condition property = " tests . platform " value = " * * / unix / * Test . java " > <nl> + < condition property = " tests . platform " value = " * * / unix / * * / * Test . java " > <nl> < and > <nl> < os family = " unix " / > <nl> < not > < os family = " mac " / > < / not > <nl> diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index 26000e2 . . 5aa5ece 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 111 , 13 + 111 , 13 @ @ com . sun . jna . platform . wince <nl> < property name = " build . test . results . dir . abs " location = " $ { build . test . results . dir } " / > <nl> < mkdir dir = " $ { build . test . results . dir . abs } " / > <nl> < echo > Saving test results in $ { build . test . results . dir . abs } < / echo > <nl> - < condition property = " tests . platform " value = " * * / mac / * * Test . java " > <nl> + < condition property = " tests . platform " value = " * * / mac / * * / * Test . java " > <nl> < os family = " mac " / > <nl> < / condition > <nl> - < condition property = " tests . platform " value = " * * / win32 / * * Test . java " > <nl> + < condition property = " tests . platform " value = " * * / win32 / * * / * Test . java " > <nl> < os family = " windows " / > <nl> < / condition > <nl> - < condition property = " tests . platform " value = " * * / unix / * * Test . java " > <nl> + < condition property = " tests . platform " value = " * * / unix / * * / * Test . java " > <nl> < os family = " unix " / > <nl> < / condition > <nl> < property name = " tests . platform " value = " " / > <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ShellApplicationWindowsTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ShellApplicationWindowsTest . java <nl> index 1d0bd86 . . 9aa5376 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ShellApplicationWindowsTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ShellApplicationWindowsTest . java <nl> @ @ - 29 , 7 + 29 , 8 @ @ public class ShellApplicationWindowsTest extends TestCase <nl> <nl> / / IE is open , so there should be at least one present . <nl> / / More may exist if Windows Explorer windows are open . <nl> - assertTrue ( sa . Windows ( ) . Count ( ) > 0 ) ; <nl> + assertTrue ( " No shell application windows found " , <nl> + sa . Windows ( ) . Count ( ) > 0 ) ; <nl> <nl> boolean pageFound = false ; <nl> for ( InternetExplorer ie : sa . Windows ( ) ) <nl> @ @ - 43 , 7 + 44 , 7 @ @ public class ShellApplicationWindowsTest extends TestCase <nl> } <nl> <nl> / / Finally , did we find our page in the collection ? <nl> - assertTrue ( pageFound ) ; <nl> + assertTrue ( " No IE page was found " , pageFound ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 183 , 4 + 184 , 7 @ @ public class ShellApplicationWindowsTest extends TestCase <nl> } <nl> } <nl> <nl> + public static void main ( String [ ] args ) { <nl> + junit . textui . TestRunner . run ( ShellApplicationWindowsTest . class ) ; <nl> + } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index f44c953 . . 9ff8c16 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 16 , 6 + 16 , 7 @ @ Features <nl> * [ # 535 ] ( https : / / github . com / java - native - access / jna / pull / 535 ) : Added ` BitBlt ` to ` com . sun . jna . platform . win32 . GDI32 ` , Added ` com . sun . jna . platform . win32 . GDI32Util ` and added ` getScreenshot ( ) ` to it - [ @ mlfreeman2 ] ( https : / / github . com / mlfreeman2 ) . <nl> * [ # 535 ] ( https : / / github . com / java - native - access / jna / pull / 535 ) : Added ` SHEmptyRecycleBin ` , ` ShellExecuteEx ` to ` com . sun . jna . platform . win32 . Shell32 ` - [ @ mlfreeman2 ] ( https : / / github . com / mlfreeman2 ) . <nl> * [ # 535 ] ( https : / / github . com / java - native - access / jna / pull / 535 ) : Added ` GetDesktopWindow ` to ` com . sun . jna . platform . win32 . User32 ` - [ @ mlfreeman2 ] ( https : / / github . com / mlfreeman2 ) . <nl> + * [ # 539 ] ( https : / / github . com / java - native - access / jna / pull / 539 ) : Added Missing Windows kernel32 method : QueryFullProcessImageName <nl> <nl> Bug Fixes <nl> - - - - - - - - -
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index efbcd83 . . 8a0870e 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 2177 , 6 + 2177 , 11 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> 	 int PROCESS _ TERMINATE = 0x00000001 ; <nl> <nl> 	 / * * <nl> + 	 * Required for getting process path <nl> + 	 * / <nl> + 	 int PROCESS _ NAME _ NATIVE = 0x00000001 ; <nl> + 	 <nl> + 	 / * * <nl> 	 * Required to perform an operation on the address space of a process ( see <nl> 	 * { @ code Kernel32 . VirtualProtectEx ( ) } and <nl> 	 * { @ link Kernel32 # WriteProcessMemory } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index 59b6c02 . . afd8727 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 331 , 11 + 331 , 13 @ @ public class Kernel32Test extends TestCase { <nl> public void testQueryFullProcessImageName ( ) { <nl> 	 HANDLE h = Kernel32 . INSTANCE . OpenProcess ( 0 , false , <nl> 	 	 	 Kernel32 . INSTANCE . GetCurrentProcessId ( ) ) ; <nl> - 	 char [ ] path = new char [ 1024 ] ; <nl> + 	 assertNotNull ( " Failed ( " + Kernel32 . INSTANCE . GetLastError ( ) + " ) to get process handle " , h ) ; <nl> + 	 <nl> + 	 char [ ] path = new char [ WinDef . MAX _ PATH ] ; <nl> IntByReference lpdwSize = new IntByReference ( path . length ) ; <nl> boolean b = Kernel32 . INSTANCE . QueryFullProcessImageName ( h , 0 , path , lpdwSize ) ; <nl> - assertTrue ( b ) ; <nl> - assertTrue ( lpdwSize . getValue ( ) > 0 ) ; <nl> + assertTrue ( " Failed ( " + Kernel32 . INSTANCE . GetLastError ( ) + " ) to query process image name " , b ) ; <nl> + assertTrue ( " Failed to query process image name , empty path returned " , lpdwSize . getValue ( ) > 0 ) ; <nl> } <nl> <nl> public void testGetTempPath ( ) {
diff - - git a / contrib / platform / test / com / sun / jna / platform / mac / XAttrUtilTest . java b / contrib / platform / test / com / sun / jna / platform / mac / XAttrUtilTest . java <nl> index 8902fe6 . . 6abd401 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / mac / XAttrUtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / mac / XAttrUtilTest . java <nl> @ @ - 84 , 7 + 84 , 13 @ @ public class XAttrUtilTest extends TestCase { <nl> 	 } <nl> <nl> 	 public void testUnicode ( ) { <nl> - 	 	 String [ ] names = new String [ ] { " 中 文 " , " に ほ ん ご " , " Ö sterreichisch " , " Fran ç aise " , " Portugu ê s " } ; <nl> + 	 	 String [ ] names = new String [ ] { <nl> + " \ u4E2D \ u6587 " , <nl> + " \ u306B \ u307B \ u3093 \ u3054 " , <nl> + " \ u00D6sterreichisch " , <nl> + " Fran \ u00E7aise " , <nl> + " Portugu \ u00EAs " , <nl> + } ; <nl> 	 	 for ( int i = 0 ; i < names . length ; i + + ) { <nl> 	 	 	 / / set xattr <nl> 	 	 	 XAttrUtil . setXAttr ( testPath , names [ i ] , names [ i ] ) ;
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ShellApplicationWindowsTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ShellApplicationWindowsTest . java <nl> index c2b2947 . . 1d0bd86 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ShellApplicationWindowsTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ShellApplicationWindowsTest . java <nl> @ @ - 3 , 67 + 3 , 60 @ @ package com . sun . jna . platform . win32 . COM ; <nl> import java . util . Iterator ; <nl> import java . util . NoSuchElementException ; <nl> <nl> - import com . sun . jna . Native ; <nl> - import com . sun . jna . NativeLibrary ; <nl> - import com . sun . jna . platform . win32 . OleAuto ; <nl> import com . sun . jna . platform . win32 . Variant ; <nl> import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> import com . sun . jna . platform . win32 . WinDef . LONG ; <nl> - import com . sun . jna . platform . win32 . WinDef . LONGLONG ; <nl> <nl> import junit . framework . TestCase ; <nl> <nl> - public class ShellApplicationWindowsTest extends TestCase { <nl> - <nl> - 	 @ Override <nl> - 	 protected void setUp ( ) throws Exception { <nl> - 	 	 String [ ] commands = { " cmd " , " / c " , " start " , " iexplore . exe " , " - nohome " , " \ " http : / / www . srh . noaa . gov / jax \ " " } ; <nl> - 	 	 Runtime . getRuntime ( ) . exec ( commands ) ; <nl> - 	 	 Thread . sleep ( 30000 ) ; <nl> - 	 } <nl> - <nl> - 	 public void testWindowsCount ( ) { <nl> - System . out . println ( " java . vendor : " + System . getProperty ( " java . vendor " ) ) ; <nl> - System . out . println ( " java . version : " + System . getProperty ( " java . version " ) ) ; <nl> - System . out . println ( " os . version : " + System . getProperty ( " os . version " ) ) ; <nl> - System . out . println ( " os . arch : " + System . getProperty ( " os . arch " ) ) ; <nl> - System . out . println ( " os . name : " + System . getProperty ( " os . name " ) ) ; <nl> + public class ShellApplicationWindowsTest extends TestCase <nl> + { <nl> + <nl> + @ Override <nl> + public void setUp ( ) throws Exception <nl> + { <nl> + / / Launch IE in a manner that should ensure it opens even if the system default browser is Chrome , Firefox , or something else . <nl> + 	 Runtime . getRuntime ( ) . exec ( " cmd / c start iexplore . exe - nohome \ " about : blank \ " " ) ; <nl> <nl> + / / Even when going to " about : blank " , IE still needs a few seconds to start up and add itself to Shell . Application . Windows <nl> + / / Removing this delay will cause the test to fail even on the fastest boxes I can find . <nl> + Thread . sleep ( 3000 ) ; <nl> + } <nl> + <nl> + public void testWindowsCount ( ) <nl> + { <nl> ShellApplication sa = new ShellApplication ( ) ; <nl> - System . out . println ( " Shell . Application . Windows found : " + sa . Windows ( ) . Count ( ) ) ; <nl> + <nl> + / / IE is open , so there should be at least one present . <nl> + / / More may exist if Windows Explorer windows are open . <nl> assertTrue ( sa . Windows ( ) . Count ( ) > 0 ) ; <nl> + <nl> + boolean pageFound = false ; <nl> for ( InternetExplorer ie : sa . Windows ( ) ) <nl> - { <nl> - System . out . println ( ) ; <nl> - System . out . println ( " = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = " ) ; <nl> - if ( ie ! = null ) <nl> - { <nl> - System . out . println ( " Title : " + ie . getTitle ( ) ) ; <nl> - System . out . println ( " URL : " + ie . getURL ( ) ) ; <nl> - System . out . println ( " App Name : " + ie . getName ( ) ) ; <nl> - System . out . println ( " Window Handle : " + ie . getWindowHandle ( ) ) ; <nl> - } <nl> - else <nl> + { <nl> + 	 / / For reasons unknown , Shell . Application . Windows can have null members inside it . <nl> + 	 / / All I care about is whether or not the collection contains the window I opened . <nl> + if ( ie ! = null & & " about : blank " . equals ( ie . getURL ( ) ) ) <nl> { <nl> - System . out . println ( " Null encountered . " ) ; <nl> + pageFound = true ; <nl> } <nl> - System . out . println ( " = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = " ) ; <nl> - System . out . println ( ) ; <nl> } <nl> - 	 } <nl> - 	 <nl> - 	 @ Override <nl> - 	 protected void tearDown ( ) throws Exception { <nl> - 	 	 Runtime . getRuntime ( ) . exec ( " taskkill . exe / f / im iexplore . exe " ) ; <nl> - 	 } <nl> - <nl> - 	 <nl> - 	 <nl> + <nl> + / / Finally , did we find our page in the collection ? <nl> + assertTrue ( pageFound ) ; <nl> + } <nl> + <nl> + @ Override <nl> + protected void tearDown ( ) throws Exception <nl> + { <nl> + Runtime . getRuntime ( ) . exec ( " taskkill . exe / f / im iexplore . exe " ) ; <nl> + } <nl> + <nl> / * * <nl> * A COM representation of the Windows shell . <nl> * / <nl> private static class ShellApplication extends COMLateBindingObject <nl> - { <nl> + { <nl> public ShellApplication ( ) throws COMException <nl> { <nl> super ( " Shell . Application " , false ) ; <nl> @ @ - 89 , 11 + 82 , 11 @ @ public class ShellApplicationWindowsTest extends TestCase { <nl> { <nl> <nl> private ShellWindows source ; <nl> - <nl> + <nl> private int count ; <nl> - <nl> + <nl> private int max ; <nl> - <nl> + <nl> public ShellWindowsIterator ( ShellWindows collection ) <nl> { <nl> source = collection ; <nl> @ @ - 179 , 14 + 172 , 6 @ @ public class ShellApplicationWindowsTest extends TestCase { <nl> } <nl> <nl> / * * <nl> - * @ return the title of the browser window . This may not always be the title of the main document <nl> - * / <nl> - public String getTitle ( ) <nl> - { <nl> - return getStringProperty ( " LocationName " ) ; <nl> - } <nl> - <nl> - / * * <nl> * IWebBrowser2 : : get _ LocationURL < br > <nl> * Read - only COM property . < br > <nl> * <nl> @ @ - 196 , 37 + 181 , 6 @ @ public class ShellApplicationWindowsTest extends TestCase { <nl> { <nl> return getStringProperty ( " LocationURL " ) ; <nl> } <nl> - <nl> - / * * <nl> - * IWebBrowser2 : : get _ Name < br > <nl> - * Read - only COM property . < br > <nl> - * <nl> - * @ return the frame name or application name of the object . <nl> - * / <nl> - public String getName ( ) <nl> - { <nl> - return getStringProperty ( " Name " ) ; <nl> - } <nl> - <nl> - / * * <nl> - * IWebBrowser2 : : HWND < br > <nl> - * Read - only COM property . < br > <nl> - * <nl> - * @ return the handle of the Internet Explorer main window . <nl> - * / <nl> - public long getWindowHandle ( ) <nl> - { <nl> - VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> - this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , this . getIDispatch ( ) , " HWND " ) ; <nl> - <nl> - if ( result . getVarType ( ) . intValue ( ) = = Variant . VT _ I8 ) <nl> - { <nl> - return ( ( LONGLONG ) result . getValue ( ) ) . longValue ( ) ; <nl> - } <nl> - return ( ( LONG ) result . getValue ( ) ) . longValue ( ) ; <nl> - <nl> - } <nl> } <nl> - <nl> - 	 <nl> + <nl> }
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ShellApplicationWindowsTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ShellApplicationWindowsTest . java <nl> new file mode 100644 <nl> index 0000000 . . c2b2947 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ShellApplicationWindowsTest . java <nl> @ @ - 0 , 0 + 1 , 232 @ @ <nl> + package com . sun . jna . platform . win32 . COM ; <nl> + <nl> + import java . util . Iterator ; <nl> + import java . util . NoSuchElementException ; <nl> + <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . NativeLibrary ; <nl> + import com . sun . jna . platform . win32 . OleAuto ; <nl> + import com . sun . jna . platform . win32 . Variant ; <nl> + import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> + import com . sun . jna . platform . win32 . WinDef . LONG ; <nl> + import com . sun . jna . platform . win32 . WinDef . LONGLONG ; <nl> + <nl> + import junit . framework . TestCase ; <nl> + <nl> + public class ShellApplicationWindowsTest extends TestCase { <nl> + <nl> + 	 @ Override <nl> + 	 protected void setUp ( ) throws Exception { <nl> + 	 	 String [ ] commands = { " cmd " , " / c " , " start " , " iexplore . exe " , " - nohome " , " \ " http : / / www . srh . noaa . gov / jax \ " " } ; <nl> + 	 	 Runtime . getRuntime ( ) . exec ( commands ) ; <nl> + 	 	 Thread . sleep ( 30000 ) ; <nl> + 	 } <nl> + <nl> + 	 public void testWindowsCount ( ) { <nl> + System . out . println ( " java . vendor : " + System . getProperty ( " java . vendor " ) ) ; <nl> + System . out . println ( " java . version : " + System . getProperty ( " java . version " ) ) ; <nl> + System . out . println ( " os . version : " + System . getProperty ( " os . version " ) ) ; <nl> + System . out . println ( " os . arch : " + System . getProperty ( " os . arch " ) ) ; <nl> + System . out . println ( " os . name : " + System . getProperty ( " os . name " ) ) ; <nl> + <nl> + ShellApplication sa = new ShellApplication ( ) ; <nl> + System . out . println ( " Shell . Application . Windows found : " + sa . Windows ( ) . Count ( ) ) ; <nl> + assertTrue ( sa . Windows ( ) . Count ( ) > 0 ) ; <nl> + for ( InternetExplorer ie : sa . Windows ( ) ) <nl> + { <nl> + System . out . println ( ) ; <nl> + System . out . println ( " = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = " ) ; <nl> + if ( ie ! = null ) <nl> + { <nl> + System . out . println ( " Title : " + ie . getTitle ( ) ) ; <nl> + System . out . println ( " URL : " + ie . getURL ( ) ) ; <nl> + System . out . println ( " App Name : " + ie . getName ( ) ) ; <nl> + System . out . println ( " Window Handle : " + ie . getWindowHandle ( ) ) ; <nl> + } <nl> + else <nl> + { <nl> + System . out . println ( " Null encountered . " ) ; <nl> + } <nl> + System . out . println ( " = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = " ) ; <nl> + System . out . println ( ) ; <nl> + } <nl> + 	 } <nl> + 	 <nl> + 	 @ Override <nl> + 	 protected void tearDown ( ) throws Exception { <nl> + 	 	 Runtime . getRuntime ( ) . exec ( " taskkill . exe / f / im iexplore . exe " ) ; <nl> + 	 } <nl> + <nl> + 	 <nl> + 	 <nl> + / * * <nl> + * A COM representation of the Windows shell . <nl> + * / <nl> + private static class ShellApplication extends COMLateBindingObject <nl> + { <nl> + public ShellApplication ( ) throws COMException <nl> + { <nl> + super ( " Shell . Application " , false ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return Creates and returns a ShellWindows object . < br > <nl> + * This object represents a collection of all of the open windows that belong to the Shell . <nl> + * / <nl> + public ShellWindows Windows ( ) <nl> + { <nl> + return new ShellWindows ( ( IDispatch ) invoke ( " Windows " ) . getValue ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Represents a collection of the open windows that belong to the Shell . < br > <nl> + * Methods associated with this objects can control and execute commands within the Shell , and obtain other Shell - related objects . <nl> + * / <nl> + public static class ShellWindows extends COMLateBindingObject implements Iterable < InternetExplorer > <nl> + { <nl> + <nl> + private static class ShellWindowsIterator implements Iterator < InternetExplorer > <nl> + { <nl> + <nl> + private ShellWindows source ; <nl> + <nl> + private int count ; <nl> + <nl> + private int max ; <nl> + <nl> + public ShellWindowsIterator ( ShellWindows collection ) <nl> + { <nl> + source = collection ; <nl> + max = source . Count ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean hasNext ( ) <nl> + { <nl> + return count < max ; <nl> + } <nl> + <nl> + @ Override <nl> + public InternetExplorer next ( ) <nl> + { <nl> + if ( ! hasNext ( ) ) <nl> + { <nl> + throw new NoSuchElementException ( ) ; <nl> + } <nl> + return source . Item ( count + + ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void remove ( ) <nl> + { <nl> + throw new UnsupportedOperationException ( ) ; <nl> + } <nl> + <nl> + } <nl> + <nl> + public ShellWindows ( IDispatch iDispatch ) <nl> + { <nl> + super ( iDispatch ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Retrieves an InternetExplorer object that represents the Shell window . <nl> + * <nl> + * @ param idx <nl> + * The zero - based index of the item to retrieve . < br > <nl> + * This value must be less than the value of the Count property . <nl> + * @ return an InternetExplorer object that represents the Shell window . <nl> + * / <nl> + public InternetExplorer Item ( int idx ) <nl> + { <nl> + VARIANT arg = new VARIANT ( ) ; <nl> + arg . setValue ( Variant . VT _ I4 , new LONG ( idx ) ) ; <nl> + IDispatch result = ( IDispatch ) invoke ( " Item " , arg ) . getValue ( ) ; <nl> + if ( result = = null ) <nl> + { <nl> + return null ; <nl> + } <nl> + return new InternetExplorer ( result ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return the number of items in the collection . <nl> + * / <nl> + public int Count ( ) <nl> + { <nl> + return getIntProperty ( " Count " ) ; <nl> + } <nl> + <nl> + @ SuppressWarnings ( { " unchecked " , " rawtypes " } ) <nl> + @ Override <nl> + public Iterator iterator ( ) <nl> + { <nl> + return new ShellWindowsIterator ( this ) ; <nl> + } <nl> + } <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * InternetExplorer / IWebBrowser2 - see http : / / msdn . microsoft . com / en - us / library / aa752127 ( v = vs . 85 ) . aspx <nl> + * / <nl> + private static class InternetExplorer extends COMLateBindingObject <nl> + { <nl> + <nl> + public InternetExplorer ( IDispatch iDispatch ) <nl> + { <nl> + super ( iDispatch ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return the title of the browser window . This may not always be the title of the main document <nl> + * / <nl> + public String getTitle ( ) <nl> + { <nl> + return getStringProperty ( " LocationName " ) ; <nl> + } <nl> + <nl> + / * * <nl> + * IWebBrowser2 : : get _ LocationURL < br > <nl> + * Read - only COM property . < br > <nl> + * <nl> + * @ return the URL of the resource that is currently displayed . <nl> + * / <nl> + public String getURL ( ) <nl> + { <nl> + return getStringProperty ( " LocationURL " ) ; <nl> + } <nl> + <nl> + / * * <nl> + * IWebBrowser2 : : get _ Name < br > <nl> + * Read - only COM property . < br > <nl> + * <nl> + * @ return the frame name or application name of the object . <nl> + * / <nl> + public String getName ( ) <nl> + { <nl> + return getStringProperty ( " Name " ) ; <nl> + } <nl> + <nl> + / * * <nl> + * IWebBrowser2 : : HWND < br > <nl> + * Read - only COM property . < br > <nl> + * <nl> + * @ return the handle of the Internet Explorer main window . <nl> + * / <nl> + public long getWindowHandle ( ) <nl> + { <nl> + VARIANT . ByReference result = new VARIANT . ByReference ( ) ; <nl> + this . oleMethod ( OleAuto . DISPATCH _ PROPERTYGET , result , this . getIDispatch ( ) , " HWND " ) ; <nl> + <nl> + if ( result . getVarType ( ) . intValue ( ) = = Variant . VT _ I8 ) <nl> + { <nl> + return ( ( LONGLONG ) result . getValue ( ) ) . longValue ( ) ; <nl> + } <nl> + return ( ( LONG ) result . getValue ( ) ) . longValue ( ) ; <nl> + <nl> + } <nl> + } <nl> + <nl> + 	 <nl> + }
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shlwapi . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shlwapi . java <nl> index 106f3b2 . . b0cbc1c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shlwapi . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shlwapi . java <nl> @ @ - 1 , 9 + 1 , 7 @ @ <nl> package com . sun . jna . platform . win32 ; <nl> <nl> - <nl> / * <nl> - * Copyright ( c ) 2015 L W Ahonen , All Rights Reserved <nl> - * <nl> + * @ author L W Ahonen , lwahonen @ iki . fi <nl> * / <nl> <nl> import com . sun . jna . Native ; <nl> @ @ - 13 , 8 + 11 , 27 @ @ import com . sun . jna . platform . win32 . WinNT ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> import com . sun . jna . win32 . W32APIOptions ; <nl> <nl> - public interface Shlwapi extends WinNT { <nl> + public interface Shlwapi extends WinNT { <nl> Shlwapi INSTANCE = ( Shlwapi ) Native . loadLibrary ( " Shlwapi " , Shlwapi . class , W32APIOptions . UNICODE _ OPTIONS ) ; <nl> <nl> + <nl> + / * * <nl> + * Takes an STRRET structure returned by IShellFolder : : GetDisplayNameOf and returns a pointer <nl> + * to an allocated string containing the display name . <nl> + * <nl> + * @ param pstr <nl> + * A pointer to the STRRET structure . When the function returns , <nl> + * this pointer will no longer be valid . <nl> + * @ param pidl <nl> + * A pointer to the item ' s ITEMIDLIST structure . This value can be NULL . <nl> + * <nl> + * @ param ppszName <nl> + * A pointer to an allocated string containing the result . StrRetToStr allocates <nl> + * memory for this string with CoTaskMemAlloc . You should free the string <nl> + * with CoTaskMemFree when it is no longer needed . <nl> + * <nl> + * @ return If this function succeeds , it returns S _ OK . Otherwise , it returns an HRESULT error code . <nl> + * / <nl> + <nl> HRESULT StrRetToStr ( PointerByReference pstr , Pointer pidl , PointerByReference ppszName ) ; <nl> }
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / IShellFolderTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / IShellFolderTest . java <nl> index b6b0d69 . . f768766 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / IShellFolderTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / IShellFolderTest . java <nl> @ @ - 1 , 10 + 1 , 11 @ @ <nl> package com . sun . jna . platform . win32 . COM ; <nl> <nl> / * <nl> - * Copyright ( c ) 2015 L W Ahonen , All Rights Reserved <nl> - * <nl> + * @ author L W Ahonen , lwahonen @ iki . fi <nl> * / <nl> <nl> + import junit . framework . TestCase ; <nl> + <nl> <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . platform . win32 . * ; <nl> @ @ - 19 , 21 + 20 , 19 @ @ public class IShellFolderTest extends TestCase { <nl> WinNT . HRESULT hr ; <nl> PointerByReference pidl = new PointerByReference ( ) ; <nl> hr = Shell32 . INSTANCE . SHGetSpecialFolderLocation ( null , csidl , pidl ) ; <nl> - if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> - PointerByReference psfDesktopPTR = new PointerByReference ( ) ; <nl> - hr = Shell32 . INSTANCE . SHGetDesktopFolder ( psfDesktopPTR ) ; <nl> - if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> - IShellFolder psfDesktop = IShellFolder . Converter . PointerToIShellFolder ( psfDesktopPTR ) ; <nl> - short cb = pidl . getValue ( ) . getShort ( 0 ) ; <nl> - if ( cb ! = 0 ) { <nl> - hr = psfDesktop . BindToObject ( pidl . getValue ( ) , null , riid , ppv ) ; <nl> - } else { <nl> - hr = psfDesktop . QueryInterface ( riid , ppv ) ; <nl> - } <nl> - psfDesktop . Release ( ) ; <nl> - } <nl> - Ole32 . INSTANCE . CoTaskMemFree ( pidl . getValue ( ) ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + PointerByReference psfDesktopPTR = new PointerByReference ( ) ; <nl> + hr = Shell32 . INSTANCE . SHGetDesktopFolder ( psfDesktopPTR ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + IShellFolder psfDesktop = IShellFolder . Converter . PointerToIShellFolder ( psfDesktopPTR ) ; <nl> + short cb = pidl . getValue ( ) . getShort ( 0 ) ; / / See http : / / blogs . msdn . com / b / oldnewthing / archive / 2011 / 08 / 30 / 10202076 . aspx for explanation about this bit <nl> + if ( cb ! = 0 ) { <nl> + hr = psfDesktop . BindToObject ( pidl . getValue ( ) , null , riid , ppv ) ; <nl> + } else { <nl> + hr = psfDesktop . QueryInterface ( riid , ppv ) ; <nl> } <nl> + psfDesktop . Release ( ) ; <nl> + Ole32 . INSTANCE . CoTaskMemFree ( pidl . getValue ( ) ) ; <nl> return hr ; <nl> } <nl> <nl> @ @ - 41 , 15 + 40 , 11 @ @ public class IShellFolderTest extends TestCase { <nl> Ole32 . INSTANCE . CoInitialize ( null ) ; <nl> int CSIDL _ DRIVES = 0x0011 ; <nl> WinNT . HRESULT hr = Ole32 . INSTANCE . CoInitialize ( null ) ; <nl> - if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> - PointerByReference psfMyComputerPTR = new PointerByReference ( Pointer . NULL ) ; <nl> - hr = BindToCsidl ( CSIDL _ DRIVES , new Guid . REFIID ( IShellFolder . IID _ ISHELLFOLDER ) , psfMyComputerPTR ) ; <nl> - if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> - psfMyComputer = IShellFolder . Converter . PointerToIShellFolder ( psfMyComputerPTR ) ; <nl> - } <nl> - } <nl> - if ( psfMyComputer = = null ) <nl> - throw new RuntimeException ( " Unable to create my computer shell object " ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + PointerByReference psfMyComputerPTR = new PointerByReference ( Pointer . NULL ) ; <nl> + hr = BindToCsidl ( CSIDL _ DRIVES , new Guid . REFIID ( IShellFolder . IID _ ISHELLFOLDER ) , psfMyComputerPTR ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + psfMyComputer = IShellFolder . Converter . PointerToIShellFolder ( psfMyComputerPTR ) ; <nl> } <nl> <nl> public void tearDown ( ) throws Exception { <nl> @ @ - 61 , 31 + 56 , 27 @ @ public class IShellFolderTest extends TestCase { <nl> PointerByReference peidlPTR = new PointerByReference ( ) ; <nl> int SHCONTF _ FOLDERS = 0x20 ; <nl> int SHCONTF _ NONFOLDERS = 0x40 ; <nl> - boolean sawNames = false ; <nl> + boolean sawNames = false ; <nl> <nl> WinNT . HRESULT hr = psfMyComputer . EnumObjects ( null , <nl> SHCONTF _ FOLDERS | SHCONTF _ NONFOLDERS , peidlPTR ) ; <nl> - if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> - IEnumIDList peidl = IEnumIDList . Converter . PointerToIEnumIDList ( peidlPTR ) ; <nl> - PointerByReference pidlItem = new PointerByReference ( ) ; <nl> - while ( peidl . Next ( 1 , pidlItem , null ) . intValue ( ) = = COMUtils . S _ OK ) { <nl> - PointerByReference sr = new PointerByReference ( ) ; <nl> - hr = psfMyComputer . GetDisplayNameOf ( pidlItem . getValue ( ) , 0 , sr ) ; <nl> - if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> - PointerByReference pszName = new PointerByReference ( ) ; <nl> - hr = Shlwapi . INSTANCE . StrRetToStr ( sr , pidlItem . getValue ( ) , pszName ) ; <nl> - if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> - String wideString = pszName . getValue ( ) . getWideString ( 0 ) ; <nl> - if ( wideString ! = null & & wideString . length ( ) > 0 ) <nl> - sawNames = true ; <nl> - Ole32 . INSTANCE . CoTaskMemFree ( pszName . getValue ( ) ) ; <nl> - } <nl> - Ole32 . INSTANCE . CoTaskMemFree ( sr . getValue ( ) ) ; <nl> - } <nl> - Ole32 . INSTANCE . CoTaskMemFree ( pidlItem . getValue ( ) ) ; <nl> - } <nl> - peidl . Release ( ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + IEnumIDList peidl = IEnumIDList . Converter . PointerToIEnumIDList ( peidlPTR ) ; <nl> + PointerByReference pidlItem = new PointerByReference ( ) ; <nl> + while ( peidl . Next ( 1 , pidlItem , null ) . intValue ( ) = = COMUtils . S _ OK ) { <nl> + PointerByReference sr = new PointerByReference ( ) ; <nl> + hr = psfMyComputer . GetDisplayNameOf ( pidlItem . getValue ( ) , 0 , sr ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + PointerByReference pszName = new PointerByReference ( ) ; <nl> + hr = Shlwapi . INSTANCE . StrRetToStr ( sr , pidlItem . getValue ( ) , pszName ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + String wideString = pszName . getValue ( ) . getWideString ( 0 ) ; <nl> + if ( wideString ! = null & & wideString . length ( ) > 0 ) <nl> + sawNames = true ; <nl> + Ole32 . INSTANCE . CoTaskMemFree ( pszName . getValue ( ) ) ; <nl> + Ole32 . INSTANCE . CoTaskMemFree ( pidlItem . getValue ( ) ) ; <nl> } <nl> - assertTrue ( sawNames ) ; <nl> + peidl . Release ( ) ; <nl> + assertTrue ( sawNames ) ; / / We should see at least one item with a name <nl> } <nl> } <nl> \ No newline at end of file
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IEnumIDList . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IEnumIDList . java <nl> new file mode 100644 <nl> index 0000000 . . cf024c9 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IEnumIDList . java <nl> @ @ - 0 , 0 + 1 , 101 @ @ <nl> + package com . sun . jna . platform . win32 . COM ; <nl> + <nl> + / * <nl> + * Copyright ( c ) 2015 L W Ahonen , All Rights Reserved <nl> + * <nl> + * <nl> + * / <nl> + <nl> + import com . sun . jna . Function ; <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . platform . win32 . Guid ; <nl> + import com . sun . jna . platform . win32 . Guid . IID ; <nl> + import com . sun . jna . platform . win32 . Guid . REFIID ; <nl> + import com . sun . jna . platform . win32 . WinDef ; <nl> + import com . sun . jna . platform . win32 . WinNT ; <nl> + import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> + import com . sun . jna . ptr . IntByReference ; <nl> + import com . sun . jna . ptr . PointerByReference ; <nl> + <nl> + public interface IEnumIDList { <nl> + <nl> + / * * <nl> + * The Constant IID _ IDispatch . <nl> + * / <nl> + public final static IID IID _ IEnumIDList = new IID ( <nl> + " { 000214F2 - 0000 - 0000 - C000 - 000000000046 } " ) ; <nl> + <nl> + HRESULT QueryInterface ( <nl> + Guid . GUID . ByReference riid , <nl> + PointerByReference ppvObject ) ; <nl> + <nl> + int AddRef ( ) ; <nl> + <nl> + int Release ( ) ; <nl> + <nl> + HRESULT Next ( <nl> + int celt , <nl> + PointerByReference rgelt , <nl> + IntByReference pceltFetched ) ; <nl> + <nl> + HRESULT Skip ( <nl> + int celt ) ; <nl> + <nl> + HRESULT Reset ( ) ; <nl> + <nl> + HRESULT Clone ( <nl> + PointerByReference ppenum ) ; <nl> + <nl> + <nl> + public static class Converter { <nl> + public static IEnumIDList PointerToIEnumIDList ( final PointerByReference ptr ) { <nl> + final Pointer interfacePointer = ptr . getValue ( ) ; <nl> + final Pointer vTablePointer = interfacePointer . getPointer ( 0 ) ; <nl> + final Pointer [ ] vTable = new Pointer [ 7 ] ; <nl> + vTablePointer . read ( 0 , vTable , 0 , 7 ) ; <nl> + return new IEnumIDList ( ) { <nl> + <nl> + @ Override <nl> + public WinNT . HRESULT QueryInterface ( Guid . GUID . ByReference byValue , PointerByReference pointerByReference ) { <nl> + Function f = Function . getFunction ( vTable [ 0 ] , Function . ALT _ CONVENTION ) ; <nl> + return new WinNT . HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , byValue , pointerByReference } ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public int AddRef ( ) { <nl> + Function f = Function . getFunction ( vTable [ 1 ] , Function . ALT _ CONVENTION ) ; <nl> + return f . invokeInt ( new Object [ ] { interfacePointer } ) ; <nl> + } <nl> + <nl> + public int Release ( ) { <nl> + Function f = Function . getFunction ( vTable [ 2 ] , Function . ALT _ CONVENTION ) ; <nl> + return f . invokeInt ( new Object [ ] { interfacePointer } ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public HRESULT Next ( int celt , PointerByReference rgelt , IntByReference pceltFetched ) { <nl> + Function f = Function . getFunction ( vTable [ 3 ] , Function . ALT _ CONVENTION ) ; <nl> + return new HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , celt , rgelt , pceltFetched } ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public HRESULT Skip ( int celt ) { <nl> + Function f = Function . getFunction ( vTable [ 4 ] , Function . ALT _ CONVENTION ) ; <nl> + return new HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , celt } ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public HRESULT Reset ( ) { <nl> + Function f = Function . getFunction ( vTable [ 5 ] , Function . ALT _ CONVENTION ) ; <nl> + return new HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer } ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public HRESULT Clone ( PointerByReference ppenum ) { <nl> + Function f = Function . getFunction ( vTable [ 6 ] , Function . ALT _ CONVENTION ) ; <nl> + return new HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , ppenum } ) ) ; <nl> + } <nl> + } ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IShellFolder . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IShellFolder . java <nl> new file mode 100644 <nl> index 0000000 . . 049f779 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IShellFolder . java <nl> @ @ - 0 , 0 + 1 , 182 @ @ <nl> + package com . sun . jna . platform . win32 . COM ; <nl> + <nl> + / * <nl> + * Copyright ( c ) 2015 L W Ahonen , All Rights Reserved <nl> + * <nl> + * / <nl> + <nl> + import com . sun . jna . Function ; <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . platform . win32 . Guid ; <nl> + import com . sun . jna . platform . win32 . Guid . IID ; <nl> + import com . sun . jna . platform . win32 . Guid . REFIID ; <nl> + import com . sun . jna . platform . win32 . WinDef ; <nl> + import com . sun . jna . platform . win32 . WinNT ; <nl> + import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> + import com . sun . jna . ptr . IntByReference ; <nl> + import com . sun . jna . ptr . PointerByReference ; <nl> + <nl> + public interface IShellFolder { <nl> + <nl> + / * * The Constant IID _ IDispatch . * / <nl> + public final static IID IID _ ISHELLFOLDER = new IID ( <nl> + " { 000214E6 - 0000 - 0000 - C000 - 000000000046 } " ) ; <nl> + <nl> + HRESULT QueryInterface ( <nl> + REFIID riid , <nl> + PointerByReference ppvObject ) ; <nl> + <nl> + int AddRef ( ) ; <nl> + <nl> + int Release ( ) ; <nl> + <nl> + HRESULT ParseDisplayName ( <nl> + WinDef . HWND hwnd , <nl> + Pointer pbc , <nl> + String pszDisplayName , <nl> + IntByReference pchEaten , <nl> + PointerByReference ppidl , <nl> + IntByReference pdwAttributes ) ; <nl> + <nl> + HRESULT EnumObjects ( <nl> + WinDef . HWND hwnd , <nl> + int grfFlags , <nl> + PointerByReference ppenumIDList ) ; <nl> + <nl> + HRESULT BindToObject ( <nl> + Pointer pidl , <nl> + Pointer pbc , <nl> + REFIID riid , <nl> + PointerByReference ppv ) ; <nl> + <nl> + HRESULT BindToStorage ( <nl> + Pointer pidl , <nl> + Pointer pbc , <nl> + REFIID riid , <nl> + PointerByReference ppv ) ; <nl> + <nl> + HRESULT CompareIDs ( <nl> + WinDef . LPARAM lParam , <nl> + Pointer pidl1 , <nl> + Pointer pidl2 ) ; <nl> + <nl> + HRESULT CreateViewObject ( <nl> + WinDef . HWND hwndOwner , <nl> + REFIID riid , <nl> + PointerByReference ppv ) ; <nl> + <nl> + HRESULT GetAttributesOf ( <nl> + int cidl , <nl> + Pointer apidl , <nl> + IntByReference rgfInOut ) ; <nl> + <nl> + HRESULT GetUIObjectOf ( <nl> + WinDef . HWND hwndOwner , <nl> + int cidl , <nl> + Pointer apidl , <nl> + REFIID riid , <nl> + IntByReference rgfReserved , <nl> + PointerByReference ppv ) ; <nl> + <nl> + HRESULT GetDisplayNameOf ( <nl> + Pointer pidl , <nl> + int flags , <nl> + PointerByReference pName ) ; <nl> + <nl> + HRESULT SetNameOf ( <nl> + WinDef . HWND hwnd , <nl> + Pointer pidl , <nl> + String pszName , <nl> + int uFlags , <nl> + PointerByReference ppidlOut ) ; <nl> + <nl> + <nl> + <nl> + public static class Converter <nl> + { <nl> + public static IShellFolder PointerToIShellFolder ( final PointerByReference ptr ) <nl> + { <nl> + final Pointer interfacePointer = ptr . getValue ( ) ; <nl> + final Pointer vTablePointer = interfacePointer . getPointer ( 0 ) ; <nl> + final Pointer [ ] vTable = new Pointer [ 13 ] ; <nl> + vTablePointer . read ( 0 , vTable , 0 , 13 ) ; <nl> + return new IShellFolder ( ) { <nl> + <nl> + @ Override <nl> + public WinNT . HRESULT QueryInterface ( REFIID byValue , PointerByReference pointerByReference ) { <nl> + Function f = Function . getFunction ( vTable [ 0 ] , Function . ALT _ CONVENTION ) ; <nl> + return new WinNT . HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , byValue , pointerByReference } ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public int AddRef ( ) { <nl> + Function f = Function . getFunction ( vTable [ 1 ] , Function . ALT _ CONVENTION ) ; <nl> + return f . invokeInt ( new Object [ ] { interfacePointer } ) ; <nl> + } <nl> + <nl> + public int Release ( ) { <nl> + Function f = Function . getFunction ( vTable [ 2 ] , Function . ALT _ CONVENTION ) ; <nl> + return f . invokeInt ( new Object [ ] { interfacePointer } ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public WinNT . HRESULT ParseDisplayName ( WinDef . HWND hwnd , Pointer pbc , String pszDisplayName , IntByReference pchEaten , PointerByReference ppidl , IntByReference pdwAttributes ) { <nl> + Function f = Function . getFunction ( vTable [ 3 ] , Function . ALT _ CONVENTION ) ; <nl> + return new WinNT . HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , hwnd , pbc , pszDisplayName , pchEaten , ppidl , pdwAttributes } ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public WinNT . HRESULT EnumObjects ( WinDef . HWND hwnd , int grfFlags , PointerByReference ppenumIDList ) { <nl> + Function f = Function . getFunction ( vTable [ 4 ] , Function . ALT _ CONVENTION ) ; <nl> + return new WinNT . HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , hwnd , grfFlags , ppenumIDList } ) ) ; <nl> + } <nl> + <nl> + public WinNT . HRESULT BindToObject ( Pointer pidl , Pointer pbc , REFIID riid , PointerByReference ppv ) { <nl> + Function f = Function . getFunction ( vTable [ 5 ] , Function . ALT _ CONVENTION ) ; <nl> + return new WinNT . HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , pidl , pbc , riid , ppv } ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public HRESULT BindToStorage ( Pointer pidl , Pointer pbc , REFIID riid , PointerByReference ppv ) { <nl> + Function f = Function . getFunction ( vTable [ 6 ] , Function . ALT _ CONVENTION ) ; <nl> + return new WinNT . HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , pidl , pbc , riid , ppv } ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public HRESULT CompareIDs ( WinDef . LPARAM lParam , Pointer pidl1 , Pointer pidl2 ) { <nl> + Function f = Function . getFunction ( vTable [ 7 ] , Function . ALT _ CONVENTION ) ; <nl> + return new WinNT . HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , lParam , pidl1 , pidl2 } ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public HRESULT CreateViewObject ( WinDef . HWND hwndOwner , REFIID riid , PointerByReference ppv ) { <nl> + Function f = Function . getFunction ( vTable [ 8 ] , Function . ALT _ CONVENTION ) ; <nl> + return new WinNT . HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , hwndOwner , riid , ppv } ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public HRESULT GetAttributesOf ( int cidl , Pointer apidl , IntByReference rgfInOut ) { <nl> + Function f = Function . getFunction ( vTable [ 9 ] , Function . ALT _ CONVENTION ) ; <nl> + return new WinNT . HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , cidl , apidl , rgfInOut } ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public HRESULT GetUIObjectOf ( WinDef . HWND hwndOwner , int cidl , Pointer apidl , REFIID riid , IntByReference rgfReserved , PointerByReference ppv ) { <nl> + Function f = Function . getFunction ( vTable [ 10 ] , Function . ALT _ CONVENTION ) ; <nl> + return new WinNT . HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , hwndOwner , cidl , apidl , riid , rgfReserved , ppv } ) ) ; <nl> + } <nl> + <nl> + public WinNT . HRESULT GetDisplayNameOf ( Pointer pidl , int flags , PointerByReference pName ) { <nl> + Function f = Function . getFunction ( vTable [ 11 ] , Function . ALT _ CONVENTION ) ; <nl> + return new WinNT . HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , pidl , flags , pName } ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public HRESULT SetNameOf ( WinDef . HWND hwnd , Pointer pidl , String pszName , int uFlags , PointerByReference ppidlOut ) { <nl> + Function f = Function . getFunction ( vTable [ 12 ] , Function . ALT _ CONVENTION ) ; <nl> + return new WinNT . HRESULT ( f . invokeInt ( new Object [ ] { interfacePointer , hwnd , pidl , pszName , uFlags , ppidlOut } ) ) ; <nl> + } <nl> + } ; <nl> + } <nl> + } <nl> + }
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> index a2b839c . . cfdddec 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> @ @ - 238 , 4 + 238 , 21 @ @ public interface Shell32 extends ShellAPI , StdCallLibrary { <nl> * <nl> * / <nl> UINT _ PTR SHAppBarMessage ( DWORD dwMessage , APPBARDATA pData ) ; <nl> + <nl> + <nl> + / * <nl> + * SHGetSpecialFolderLocation function for getting PIDL reference to My Computer etc <nl> + * <nl> + * @ param hwndOwner <nl> + * Reserved . <nl> + * @ param nFolder <nl> + * A CSIDL value that identifies the folder of interest . <nl> + * @ param ppidl <nl> + * A PIDL specifying the folder ' s location relative to the root of the namespace ( the desktop ) . It is the responsibility of the calling application to free the returned IDList by using CoTaskMemFree . <nl> + * <nl> + * @ return If this function succeeds , it returns S _ OK . Otherwise , it returns an HRESULT error code . <nl> + * <nl> + * / <nl> + WinNT . HRESULT SHGetSpecialFolderLocation ( WinDef . HWND hwndOwner , int nFolder , PointerByReference ppidl ) ; <nl> + <nl> }
diff - - git a / www / ReleasingJNA . md b / www / ReleasingJNA . md <nl> index 531c98e . . 6b4a28a 100644 <nl> - - - a / www / ReleasingJNA . md <nl> + + + b / www / ReleasingJNA . md <nl> @ @ - 11 , 17 + 11 , 17 @ @ JNA Release Process <nl> * Run ` ant - Drelease = true clean dist ` target on a fully up - to - date checkout with no modifications . Commit generated files in ` dist ` . <nl> * You will also see differences in the pom - * . xml files and src / . . . / Native . java . Do not commit these files . <nl> <nl> - * Update links in README . md , commit the changes . <nl> - * download links <nl> - * javadoc links <nl> - <nl> * Update Javadoc <nl> * Check out gh - pages branch <nl> * Copy latest doc / javadoc into { version } / javadoc <nl> * Commit and push <nl> <nl> - * Tag <nl> + * Update versioned links <nl> * Switch back to master branch <nl> + * Update links in README . md ( download and javadoc ) <nl> + * Commit and push <nl> + <nl> + * Tag <nl> * Tag using the new version number ( e . g . ` git tag 4 . 2 . 1 ` ) <nl> * Push new tag to origin ( ` git push - - tags ` ) <nl>
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 62beb90 . . d11fcff 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 11 , 6 + 11 , 7 @ @ Features <nl> * [ # 510 ] ( https : / / github . com / java - native - access / jna / pull / 510 ) : Added ` GetCommState ` , ` GetCommTimeouts ` ` SetCommState ` and ` SetCommTimeouts ` to ` com . sun . jna . platform . win32 . Kernel32 ` . Added ` DCB ` structure to ` com . sun . jna . platform . win32 . WinBase ` - [ @ MBollig ] ( https : / / github . com / MBollig ) . <nl> * [ # 512 ] ( https : / / github . com / java - native - access / jna / pull / 512 ) : Make loading debug flags mutable [ @ lwahonen ] ( https : / / github . com / lwahonen ) . <nl> * [ # 514 ] ( https : / / github . com / java - native - access / jna / pull / 514 ) : Added ` host _ processor _ info ` to ` com . sun . jna . platform . mac . SystemB ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> + * [ # 519 ] ( https : / / github . com / java - native - access / jna / pull / 519 ) : Added JNA functional overview - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / README . md b / README . md <nl> index a915d4a . . f9df0fa 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 11 , 7 + 11 , 7 @ @ JNA provides Java programs easy access to native shared libraries without writin <nl> <nl> JNA allows you to call directly into native functions using natural Java method invocation . The Java call looks just like the call does in native code . Most calls require no special handling or configuration ; no boilerplate or generated code is required . <nl> <nl> - JNA uses a small JNI library stub to dynamically invoke native code . The developer uses a Java interface to describe functions and structures in the target native library . This makes it quite easy to take advantage of native platform features without incurring the high overhead of configuring and building JNI code for multiple platforms . <nl> + JNA uses a small JNI library stub to dynamically invoke native code . The developer uses a Java interface to describe functions and structures in the target native library . This makes it quite easy to take advantage of native platform features without incurring the high overhead of configuring and building JNI code for multiple platforms . Read this [ more in - depth description ] ( https : / / github . com / java - native - access / jna / blob / master / www / FunctionalDescription . md ) . <nl> <nl> While significant attention has been paid to performance , correctness and ease of use take priority . <nl> <nl> @ @ - 112 , 6 + 112 , 7 @ @ Using the Library <nl> = = = = = = = = = = = = = = = = = <nl> <nl> * [ Getting Started ] ( https : / / github . com / java - native - access / jna / blob / master / www / GettingStarted . md ) <nl> + * [ Functional Description ] ( https : / / github . com / java - native - access / jna / blob / master / www / FunctionalDescription . md ) . <nl> * [ Mapping between Java and Native ] ( https : / / github . com / java - native - access / jna / blob / master / www / Mappings . md ) <nl> * [ Using Pointers and Arrays ] ( https : / / github . com / java - native - access / jna / blob / master / www / PointersAndArrays . md ) <nl> * [ Using Structures and Unions ] ( https : / / github . com / java - native - access / jna / blob / master / www / StructuresAndUnions . md ) <nl> diff - - git a / www / FunctionalDescription . md b / www / FunctionalDescription . md <nl> new file mode 100644 <nl> index 0000000 . . 44b28ab <nl> - - - / dev / null <nl> + + + b / www / FunctionalDescription . md <nl> @ @ - 0 , 0 + 1 , 65 @ @ <nl> + Functional Overview <nl> + = = = = = = = = = = = = = = = = = = = <nl> + <nl> + JNA ' s platform - specific functionality is provided by the [ libffi <nl> + library ] ( https : / / github . com / atgreen / libffi ) . Previous to the integration of <nl> + libffi into JNA ( largely performed by wmeissner ) , hand - coded assembly was used <nl> + to support linux , sparc , windows , and Mac OSX ( intel and PPC targets ) . The <nl> + libffi library provides an abstraction for calling arbitrary target addresses <nl> + with an arbitrary set of typed arguments . <nl> + <nl> + The ` ffi _ prep _ cif ( ) ` call describes how the target function wishes to be <nl> + called , while ` ffi _ call ( ) ` actually performs the call , provided the CIF <nl> + structure returned by ` ffi _ prep _ cif ( ) ` , an arguments array , and a buffer for a <nl> + return value . <nl> + <nl> + <nl> + Interface Mapping <nl> + - - - - - - - - - - - - - - - - - <nl> + When you instantiate a native library interface via ` Native . loadLibrary ( ) ` , <nl> + JNA creates a proxy which routes all method invocations through a single <nl> + ` invoke ` function in ` Library . Handler ` . This method looks up an appropriate <nl> + ` Function ` object which represents a function exported by the native library . <nl> + The proxy handler may perform some initial name translation to derive the <nl> + actual native library function name from the invoked proxy function . <nl> + <nl> + Once the ` Function ` object is found , its generic ` invoke ` method is called <nl> + with all available arguments . The proxy function signature is used to figure <nl> + out the types of the incoming arguments and the desired return type . <nl> + <nl> + The ` Function ` object performs any necessary conversion of arguments , <nl> + converting ` NativeMapped ` types into their native representation , or applying <nl> + a ` TypeMapper ` to any incoming types which have registered for ` TypeMapper ` <nl> + conversion . Similar conversion is performed on function return . By default , <nl> + all ` Structure ` objects have their Java fields copied into their native memory <nl> + before the native function call , and copied back out after the call . <nl> + <nl> + All ` Function ` invocations are routed through different native methods based <nl> + on their return type , but all those native methods are dispatched through the <nl> + same ` dispatch ` call in ` native / dispatch . c ` . That function performs any final <nl> + conversions of Java objects into native representations before building a <nl> + function call description for use by libffi . <nl> + <nl> + The libffi library requires a description of the target function ' s arguments <nl> + and return type in order to perform a platform - specific construction of the <nl> + stack suitable for the final native call invocation . Once libffi has <nl> + performed the native call ( via ` ffi _ call ( ) ` ) , it copies the result into a <nl> + buffer provided by JNA , which then converts it back into an appropriate Java <nl> + object . <nl> + <nl> + Direct Mapping <nl> + - - - - - - - - - - - - - - <nl> + JNI provides for registering a native function to be called directly when a <nl> + method marked ` native ` is called from Java . JNA constructs code stubs with <nl> + libffi for each native method registered via the ` Native . register ( ) ` call ( JNA <nl> + uses reflection to identify all methods with the ` native ` qualifier in the <nl> + direct - mapped class ) . Each stub dispatches to the function ` dispatch _ direct ` <nl> + in ` native / dispatch . c ` , and has an associated structure allocated which fully <nl> + describes the function invocation to avoid any reflection costs at runtime . <nl> + <nl> + The central ` dispatch _ direct ` function attempts to pass the Java call stack <nl> + as - is to the native function ( again , using ` ffi _ call ( ) ` from libffi ) . <nl> + The more non - primitive arguments are used , the more the direct dispatch has to <nl> + do extra work to convert Java objects into native representations on the <nl> + stack . Ideal performance is achieved by using only primitive or ` Pointer ` <nl> + arguments . <nl> \ No newline at end of file
diff - - git a / src / com / sun / jna / Pointer . java b / src / com / sun / jna / Pointer . java <nl> index fbac5b9 . . f5e435b 100644 <nl> - - - a / src / com / sun / jna / Pointer . java <nl> + + + b / src / com / sun / jna / Pointer . java <nl> @ @ - 1437 , 7 + 1437 , 9 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> public void setMemory ( long offset , long size , byte value ) { <nl> throw new UnsupportedOperationException ( MSG ) ; <nl> } <nl> - public String dump ( long offset , int size ) { throw new UnsupportedOperationException ( MSG ) ; } <nl> + public String dump ( long offset , int size ) { <nl> + throw new UnsupportedOperationException ( MSG ) ; <nl> + } <nl> public String toString ( ) { <nl> return " const @ 0x " + Long . toHexString ( peer ) ; <nl> }
diff - - git a / src / com / sun / jna / Pointer . java b / src / com / sun / jna / Pointer . java <nl> index 111a683 . . 0e27f46 100644 <nl> - - - a / src / com / sun / jna / Pointer . java <nl> + + + b / src / com / sun / jna / Pointer . java <nl> @ @ - 10 , 6 + 10 , 8 @ @ <nl> * / <nl> package com . sun . jna ; <nl> <nl> + import java . io . PrintWriter ; <nl> + import java . io . StringWriter ; <nl> import java . lang . reflect . Array ; <nl> import java . nio . Buffer ; <nl> import java . nio . ByteBuffer ; <nl> @ @ - 1271 , 22 + 1273 , 27 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> <nl> / * * Dump memory for debugging purposes . * / <nl> public String dump ( long offset , int size ) { <nl> - String LS = System . getProperty ( " line . separator " ) ; <nl> - String contents = " memory dump " + LS ; <nl> final int BYTES _ PER _ ROW = 4 ; <nl> - byte [ ] buf = getByteArray ( offset , size ) ; <nl> - for ( int i = 0 ; i < buf . length ; i + + ) { <nl> - if ( ( i % BYTES _ PER _ ROW ) = = 0 ) contents + = " [ " ; <nl> - if ( buf [ i ] > = 0 & & buf [ i ] < 16 ) <nl> - contents + = " 0 " ; <nl> - contents + = Integer . toHexString ( buf [ i ] & 0xFF ) ; <nl> - if ( ( i % BYTES _ PER _ ROW ) = = BYTES _ PER _ ROW - 1 & & i < buf . length - 1 ) <nl> - contents + = " ] " + LS ; <nl> - } <nl> - if ( ! contents . endsWith ( " ] " + LS ) ) { <nl> - contents + = " ] " + LS ; <nl> - } <nl> - return contents ; <nl> + final String TITLE = " memory dump " ; <nl> + / / estimate initial size assuming a 2 char line separator <nl> + StringWriter sw = new StringWriter ( TITLE . length ( ) + 2 + size * 2 + ( size / BYTES _ PER _ ROW * 4 ) ) ; <nl> + PrintWriter out = new PrintWriter ( sw ) ; <nl> + out . println ( TITLE ) ; <nl> + / / byte [ ] buf = getByteArray ( offset , size ) ; <nl> + for ( int i = 0 ; i < size ; i + + ) { <nl> + / / byte b = buf [ i ] ; <nl> + byte b = getByte ( offset + i ) ; <nl> + if ( ( i % BYTES _ PER _ ROW ) = = 0 ) out . print ( " [ " ) ; <nl> + if ( b > = 0 & & b < 16 ) <nl> + out . print ( " 0 " ) ; <nl> + out . print ( Integer . toHexString ( b & 0xFF ) ) ; <nl> + if ( ( i % BYTES _ PER _ ROW ) = = BYTES _ PER _ ROW - 1 & & i < size - 1 ) <nl> + out . println ( " ] " ) ; <nl> + } <nl> + if ( sw . getBuffer ( ) . charAt ( sw . getBuffer ( ) . length ( ) - 2 ) ! = ' ] ' ) { <nl> + out . println ( " ] " ) ; <nl> + } <nl> + return sw . toString ( ) ; <nl> } <nl> <nl> public String toString ( ) { <nl> diff - - git a / test / com / sun / jna / MemoryTest . java b / test / com / sun / jna / MemoryTest . java <nl> index 59614e5 . . 8714d4c 100644 <nl> - - - a / test / com / sun / jna / MemoryTest . java <nl> + + + b / test / com / sun / jna / MemoryTest . java <nl> @ @ - 155 , 6 + 155 , 25 @ @ public class MemoryTest extends TestCase implements GCWaits { <nl> assertNull ( " Memory not GC ' d after buffer GC ' d \ n " , ref . get ( ) ) ; <nl> } <nl> <nl> + public void testDump ( ) { <nl> + / / test with 15 bytes so last line has less than 4 bytes <nl> + int n = 15 ; <nl> + <nl> + Memory m = new Memory ( n ) ; <nl> + <nl> + for ( int i = 0 ; i < n ; i + + ) { <nl> + m . setByte ( i , ( byte ) i ) ; <nl> + } <nl> + <nl> + String ls = System . getProperty ( " line . separator " ) ; <nl> + <nl> + assertEquals ( " memory dump " + ls + <nl> + " [ 00010203 ] " + ls + <nl> + " [ 04050607 ] " + ls + <nl> + " [ 08090a0b ] " + ls + <nl> + " [ 0c0d0e ] " + ls , m . dump ( ) ) ; <nl> + } <nl> + <nl> public static void main ( String [ ] args ) { <nl> junit . textui . TestRunner . run ( MemoryTest . class ) ; <nl> }
diff - - git a / build . xml b / build . xml <nl> index 821407b . . 07bf219 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 736 , 6 + 736 , 13 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < / condition > <nl> < property name = " xcode " value = " / Applications / Xcode . app / Contents / Developer / Platforms / MacOSX . platform " / > <nl> < condition property = " make . SDKROOT " <nl> + 	 value = " SDKROOT = $ { xcode } / Developer / SDKs / MacOSX10 . 11 . sdk " > <nl> + < and > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " darwin " trim = " true " / > <nl> + < available file = " $ { xcode } / Developer / SDKs / MacOSX10 . 11 . sdk " / > <nl> + < / and > <nl> + < / condition > <nl> + < condition property = " make . SDKROOT " <nl> 	 value = " SDKROOT = $ { xcode } / Developer / SDKs / MacOSX10 . 9 . sdk " > <nl> < and > <nl> < equals arg1 = " $ { os . prefix } " arg2 = " darwin " trim = " true " / >
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 3652e1e . . 467b3ff 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 8 , 8 + 8 , 8 @ @ Next Release ( 4 . 2 . 1 ) <nl> Features <nl> - - - - - - - - <nl> * [ # 504 ] ( https : / / github . com / java - native - access / jna / pull / 504 ) : Add support for linux - sparcv9 [ @ alexvsimon ] ( https : / / github . com / alexvsimon ) . <nl> - * [ # 510 ] ( https : / / github . com / java - native - access / jna / pull / 510 ) : Added ` GetCommState ` , ` GetCommTimeouts ` ` SetCommState ` and ` SetCommTimeouts ` to ` com . sun . jna . platform . win32 . Kernel32 ` . Added ` DCB ` structure to ` com . sun . jna . platform . win32 . WinBase ` - [ @ MBollig ] ( https : / / github . com / MBollig ) . <nl> * [ # 512 ] ( https : / / github . com / java - native - access / jna / pull / 512 ) : Make loading debug flags mutable [ @ lwahonen ] ( https : / / github . com / lwahonen ) . <nl> + * [ # 510 ] ( https : / / github . com / java - native - access / jna / pull / 510 ) : Added ` GetCommState ` , ` GetCommTimeouts ` ` SetCommState ` and ` SetCommTimeouts ` to ` com . sun . jna . platform . win32 . Kernel32 ` . Added ` DCB ` structure to ` com . sun . jna . platform . win32 . WinBase ` - [ @ MBollig ] ( https : / / github . com / MBollig ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - -
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 26dd51b . . 6a7b27a 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 8 , 6 + 8 , 7 @ @ Next Release ( 4 . 2 . 1 ) <nl> Features <nl> - - - - - - - - <nl> * [ # 510 ] ( https : / / github . com / java - native - access / jna / pull / 510 ) : Added ` GetCommState ` , ` GetCommTimeouts ` ` SetCommState ` and ` SetCommTimeouts ` to ` com . sun . jna . platform . win32 . Kernel32 ` . Added ` DCB ` structure to ` com . sun . jna . platform . win32 . WinBase ` - [ @ MBollig ] ( https : / / github . com / MBollig ) <nl> + * [ # 514 ] ( https : / / github . com / java - native - access / jna / pull / 514 ) : Added ` host _ processor _ info ` to ` com . sun . jna . platform . mac . SystemB ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java b / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java <nl> index 17cabfa . . 8c35301 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . LongByReference ; <nl> + import com . sun . jna . ptr . PointerByReference ; <nl> <nl> / * * <nl> * Author : Daniel Widdis Date : 6 / 5 / 15 <nl> @ @ - 50 , 6 + 51 , 10 @ @ public interface SystemB extends Library { <nl> static int CPU _ STATE _ IDLE = 2 ; <nl> static int CPU _ STATE _ NICE = 3 ; <nl> <nl> + / / host _ processor _ info ( ) flavor <nl> + static int PROCESSOR _ BASIC _ INFO = 1 ; <nl> + static int PROCESSOR _ CPU _ LOAD _ INFO = 2 ; <nl> + <nl> / / Data size <nl> static int UINT64 _ SIZE = Native . getNativeSize ( long . class ) ; <nl> static int INT _ SIZE = Native . getNativeSize ( int . class ) ; <nl> @ @ - 304 , 4 + 309 , 23 @ @ public interface SystemB extends Library { <nl> * @ return 0 on success ; sets errno on failure <nl> * / <nl> int sysctlnametomib ( String name , Pointer mibp , IntByReference size ) ; <nl> + <nl> + / * * <nl> + * The host _ processor _ info function returns information about processors . <nl> + * <nl> + * @ param machPort <nl> + * The control port for the host for which information is to be <nl> + * obtained . <nl> + * @ param flavor <nl> + * The type of information requested . <nl> + * @ param procCount <nl> + * Pointer to the number of processors <nl> + * @ param procInfo <nl> + * Pointer to the structure corresponding to the requested flavor <nl> + * @ param procInfoCount <nl> + * Pointer to number of elements in the returned structure <nl> + * @ return 0 on success ; sets errno on failure <nl> + * / <nl> + int host _ processor _ info ( int machPort , int flavor , IntByReference procCount , <nl> + PointerByReference procInfo , IntByReference procInfoCount ) ; <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java b / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java <nl> index d3ca829 . . d81b9ad 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java <nl> @ @ - 17 , 16 + 17 , 19 @ @ <nl> package com . sun . jna . platform . mac ; <nl> <nl> import junit . framework . TestCase ; <nl> + <nl> import com . sun . jna . platform . mac . SystemB . HostCpuLoadInfo ; <nl> import com . sun . jna . platform . mac . SystemB . HostLoadInfo ; <nl> import com . sun . jna . platform . mac . SystemB . VMStatistics ; <nl> import com . sun . jna . platform . mac . SystemB . VMStatistics64 ; <nl> <nl> import com . sun . jna . Memory ; <nl> + import com . sun . jna . Native ; <nl> import com . sun . jna . Platform ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . LongByReference ; <nl> + import com . sun . jna . ptr . PointerByReference ; <nl> <nl> / * * <nl> * Exercise the { @ link SystemB } class . <nl> @ @ - 134 , 6 + 137 , 23 @ @ public class SystemBTest extends TestCase { <nl> 	 	 assertTrue ( hostLoadInfo . avenrun [ 0 ] > 0 ) ; <nl> 	 } <nl> <nl> + 	 public void testHostProcessorInfo ( ) { <nl> + 	 	 int machPort = SystemB . INSTANCE . mach _ host _ self ( ) ; <nl> + 	 	 assertTrue ( machPort > 0 ) ; <nl> + <nl> + 	 	 IntByReference procCount = new IntByReference ( ) ; <nl> + 	 	 PointerByReference procCpuLoadInfo = new PointerByReference ( ) ; <nl> + 	 	 IntByReference procInfoCount = new IntByReference ( ) ; <nl> + 	 	 int ret = SystemB . INSTANCE . host _ processor _ info ( machPort , <nl> + 	 	 	 	 SystemB . PROCESSOR _ CPU _ LOAD _ INFO , procCount , procCpuLoadInfo , <nl> + 	 	 	 procInfoCount ) ; <nl> + 	 	 assertEquals ( ret , 0 ) ; <nl> + <nl> + 	 	 assertTrue ( procCount . getValue ( ) > 0 ) ; <nl> + 	 	 assertEquals ( procCpuLoadInfo . getValue ( ) . getIntArray ( 0 , <nl> + 	 	 	 	 procInfoCount . getValue ( ) ) . length , procInfoCount . getValue ( ) ) ; <nl> + 	 } <nl> + <nl> 	 public static void main ( java . lang . String [ ] argList ) { <nl> 	 	 junit . textui . TestRunner . run ( SystemBTest . class ) ; <nl> 	 }
diff - - git a / lib / native / linux - arm . jar b / lib / native / linux - arm . jar <nl> index 80f2a92 . . 9a5cf70 100755 <nl> Binary files a / lib / native / linux - arm . jar and b / lib / native / linux - arm . jar differ
diff - - git a / test / com / sun / jna / DirectReturnTypesTest . java b / test / com / sun / jna / DirectReturnTypesTest . java <nl> index 767869a . . 525a67b 100644 <nl> - - - a / test / com / sun / jna / DirectReturnTypesTest . java <nl> + + + b / test / com / sun / jna / DirectReturnTypesTest . java <nl> @ @ - 75 , 6 + 75 , 8 @ @ public class DirectReturnTypesTest extends ReturnTypesTest { <nl> <nl> public static class DirectNativeMappedLibrary implements NativeMappedLibrary { <nl> public native Custom returnInt32Argument ( int arg ) ; <nl> + public native size _ t returnInt32Magic ( ) ; <nl> + public native size _ t returnInt64Magic ( ) ; <nl> static { <nl> Native . register ( " testlib " ) ; <nl> } <nl> diff - - git a / test / com / sun / jna / ReturnTypesTest . java b / test / com / sun / jna / ReturnTypesTest . java <nl> index 4b7e367 . . 7977160 100644 <nl> - - - a / test / com / sun / jna / ReturnTypesTest . java <nl> + + + b / test / com / sun / jna / ReturnTypesTest . java <nl> @ @ - 182 , 6 + 182 , 17 @ @ public class ReturnTypesTest extends TestCase { <nl> <nl> public interface NativeMappedLibrary extends Library { <nl> Custom returnInt32Argument ( int arg ) ; <nl> + size _ t returnInt32Magic ( ) ; <nl> + size _ t returnInt64Magic ( ) ; <nl> + } <nl> + public static class size _ t extends IntegerType { <nl> + public size _ t ( ) { <nl> + this ( 0 ) ; <nl> + } <nl> + public size _ t ( long value ) { <nl> + super ( Native . SIZE _ T _ SIZE , true ) ; <nl> + setValue ( value ) ; <nl> + } <nl> } <nl> public static class Custom implements NativeMapped { <nl> private int value ; <nl> @ @ - 210 , 8 + 221 , 14 @ @ public class ReturnTypesTest extends TestCase { <nl> public void testInvokeNativeMapped ( ) { <nl> NativeMappedLibrary lib = loadNativeMappedLibrary ( ) ; <nl> final int MAGIC = 0x12345678 ; <nl> + final long MAGIC64 = 0x123456789ABCDEF0L ; <nl> final Custom EXPECTED = new Custom ( MAGIC ) ; <nl> - assertEquals ( " Argument not mapped " , EXPECTED , lib . returnInt32Argument ( MAGIC ) ) ; <nl> + assertEquals ( " NativeMapped ' Custom ' result not mapped " , EXPECTED , lib . returnInt32Argument ( MAGIC ) ) ; <nl> + <nl> + assertEquals ( " NativeMapped IntegerType result not mapped ( 32 ) " , <nl> + new size _ t ( MAGIC ) , lib . returnInt32Magic ( ) ) ; <nl> + assertEquals ( " NativeMapped IntegerType result not mapped ( 64 ) " , <nl> + new size _ t ( MAGIC64 ) , lib . returnInt64Magic ( ) ) ; <nl> } <nl> <nl> public void testInvokeFloat ( ) {
diff - - git a / README . md b / README . md <nl> index b1ca021 . . a915d4a 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 122 , 12 + 122 , 12 @ @ Using the Library <nl> * [ Platform Library ] ( https : / / github . com / java - native - access / jna / blob / master / www / PlatformLibrary . md ) <nl> * [ Direct Method Mapping ] ( https : / / github . com / java - native - access / jna / blob / master / www / DirectMapping . md ) ( Optimization ) <nl> * [ Frequently Asked Questions ( FAQ ) ] ( https : / / github . com / java - native - access / jna / blob / master / www / FrequentlyAskedQuestions . md ) <nl> - * [ Avoiding Crashes ] ( http : / / java - native - access . github . com / jna / 4 . 2 . 0 / overview - summary . html # crash - protection ) <nl> + * [ Avoiding Crashes ] ( http : / / java - native - access . github . io / jna / 4 . 2 . 0 / overview - summary . html # crash - protection ) <nl> <nl> Primary Documentation ( JavaDoc ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference is in the [ JavaDoc ] ( http : / / java - native - access . github . com / jna / 4 . 2 . 0 / ) . <nl> + The definitive JNA reference is in the [ JavaDoc ] ( http : / / java - native - access . github . io / jna / 4 . 2 . 0 / ) . <nl> <nl> Developers <nl> = = = = = = = = = = <nl> diff - - git a / src / com / sun / jna / Version . java b / src / com / sun / jna / Version . java <nl> index 359747d . . 1ff6cfd 100644 <nl> - - - a / src / com / sun / jna / Version . java <nl> + + + b / src / com / sun / jna / Version . java <nl> @ @ - 12 , 6 + 12 , 6 @ @ <nl> * / <nl> package com . sun . jna ; <nl> interface Version { <nl> - String VERSION = " 4 . 2 . 0 - SNAPSHOT " ; <nl> + String VERSION = " 4 . 2 . 0 " ; <nl> String VERSION _ NATIVE = " 4 . 0 . 1 " ; <nl> } <nl> diff - - git a / www / FrequentlyAskedQuestions . md b / www / FrequentlyAskedQuestions . md <nl> index d4d483b . . dfe902e 100644 <nl> - - - a / www / FrequentlyAskedQuestions . md <nl> + + + b / www / FrequentlyAskedQuestions . md <nl> @ @ - 3 , 7 + 3 , 7 @ @ Frequently Asked Questions <nl> <nl> I ' m having trouble generating correct library mappings <nl> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> - Make sure you ' ve read [ this page ] ( https : / / github . com / java - native - access / jna / tree / master / www / Mappings . md ) and [ this one ] ( http : / / java - native - access . github . com / jna / 3 . 4 . 0 / javadoc / overview - summary . html # overview _ description ) . Try [ JNAerator ] ( http : / / code . google . com / p / jnaerator / ) . If you find its output too verbose , delete the mappings you don ' t need , or copy out the ones you do need . <nl> + Make sure you ' ve read [ this page ] ( https : / / github . com / java - native - access / jna / blob / master / www / Mappings . md ) and [ this one ] ( http : / / java - native - access . github . io / jna / 4 . 2 . 0 / javadoc / overview - summary . html # overview _ description ) . Try [ JNAerator ] ( http : / / code . google . com / p / jnaerator / ) . If you find its output too verbose , delete the mappings you don ' t need , or copy out the ones you do need . <nl> <nl> JNA is missing function XXX in its platform library mappings <nl> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
diff - - git a / build . xml b / build . xml <nl> index 1672ce3 . . 821407b 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 422 , 6 + 422 , 8 @ @ com / sun / jna / linux - aarch64 / libjnidispatch . so ; <nl> processor = aarch64 ; osname = linux , <nl> com / sun / jna / linux - ia64 / libjnidispatch . so ; <nl> processor = ia64 ; osname = linux , <nl> + com / sun / jna / linux - sparcv9 / libjnidispatch . so ; <nl> + processor = sparcv9 ; osname = linux , <nl> <nl> com / sun / jna / freebsd - x86 / libjnidispatch . so ; <nl> processor = x86 ; osname = freebsd , <nl> @ @ - 475 , 6 + 477 , 9 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < zipfileset src = " $ { lib . native } / linux - ppc64le . jar " <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / linux - ppc64le " / > <nl> + < zipfileset src = " $ { lib . native } / linux - sparcv9 . jar " <nl> + includes = " * jnidispatch * " <nl> + prefix = " com / sun / jna / linux - sparcv9 " / > <nl> < zipfileset src = " $ { lib . native } / sunos - x86 . jar " <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / sunos - x86 " / > <nl> @ @ - 606 , 6 + 611 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - ppc . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - ppc64 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - ppc64le . jar " overwrite = " true " / > <nl> + < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - sparcv9 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / freebsd - x86 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / freebsd - x86 - 64 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / openbsd - x86 . jar " overwrite = " true " / > <nl> diff - - git a / lib / native / linux - sparcv9 . jar b / lib / native / linux - sparcv9 . jar <nl> new file mode 100644 <nl> index 0000000 . . 61e5365 <nl> Binary files / dev / null and b / lib / native / linux - sparcv9 . jar differ <nl> diff - - git a / test / com / sun / jna / PlatformTest . java b / test / com / sun / jna / PlatformTest . java <nl> index 55001c3 . . 8322700 100644 <nl> - - - a / test / com / sun / jna / PlatformTest . java <nl> + + + b / test / com / sun / jna / PlatformTest . java <nl> @ @ - 57 , 6 + 57 , 9 @ @ public class PlatformTest extends TestCase { <nl> assertEquals ( " Wrong resource path Linux / ppc " , " linux - ppc " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> " powerpc " , " Linux " ) ) ; <nl> + assertEquals ( " Wrong resource path Linux / sparcv9 " , " linux - sparcv9 " , <nl> + Platform . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> + " sparcv9 " , " Linux " ) ) ; <nl> assertEquals ( " Wrong resource path OpenBSD / x86 " , " openbsd - x86 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . OPENBSD , <nl> " x86 " , " OpenBSD " ) ) ;
diff - - git a / dist / android - aarch64 . jar b / dist / android - aarch64 . jar <nl> new file mode 100644 <nl> index 0000000 . . 09f856f <nl> Binary files / dev / null and b / dist / android - aarch64 . jar differ <nl> diff - - git a / dist / android - armv7 . jar b / dist / android - armv7 . jar <nl> new file mode 100644 <nl> index 0000000 . . 4a0b34b <nl> Binary files / dev / null and b / dist / android - armv7 . jar differ <nl> diff - - git a / dist / android - mips . jar b / dist / android - mips . jar <nl> new file mode 100644 <nl> index 0000000 . . 9f61517 <nl> Binary files / dev / null and b / dist / android - mips . jar differ <nl> diff - - git a / dist / android - mips64 . jar b / dist / android - mips64 . jar <nl> new file mode 100644 <nl> index 0000000 . . 7098eb9 <nl> Binary files / dev / null and b / dist / android - mips64 . jar differ <nl> diff - - git a / dist / android - x86 - 64 . jar b / dist / android - x86 - 64 . jar <nl> new file mode 100644 <nl> index 0000000 . . 450544c <nl> Binary files / dev / null and b / dist / android - x86 - 64 . jar differ <nl> diff - - git a / dist / darwin . jar b / dist / darwin . jar <nl> index 8db01ec . . 2909f41 100644 <nl> Binary files a / dist / darwin . jar and b / dist / darwin . jar differ <nl> diff - - git a / dist / doc . zip b / dist / doc . zip <nl> index 7ce9390 . . 9a12900 100644 <nl> Binary files a / dist / doc . zip and b / dist / doc . zip differ <nl> diff - - git a / dist / jna - min . jar b / dist / jna - min . jar <nl> index b8881c3 . . 851bbf6 100644 <nl> Binary files a / dist / jna - min . jar and b / dist / jna - min . jar differ <nl> diff - - git a / dist / jna - platform . jar b / dist / jna - platform . jar <nl> index 8d5fe3d . . d0fd2e4 100644 <nl> Binary files a / dist / jna - platform . jar and b / dist / jna - platform . jar differ <nl> diff - - git a / dist / jna . jar b / dist / jna . jar <nl> index ca44817 . . 2524317 100644 <nl> Binary files a / dist / jna . jar and b / dist / jna . jar differ <nl> diff - - git a / dist / jnacontrib / demo - alphamask . jar b / dist / jnacontrib / demo - alphamask . jar <nl> index a616b44 . . 2e8f796 100644 <nl> Binary files a / dist / jnacontrib / demo - alphamask . jar and b / dist / jnacontrib / demo - alphamask . jar differ <nl> diff - - git a / dist / jnacontrib / demo - balloonmanager . jar b / dist / jnacontrib / demo - balloonmanager . jar <nl> index f40bd3f . . 464f5bb 100644 <nl> Binary files a / dist / jnacontrib / demo - balloonmanager . jar and b / dist / jnacontrib / demo - balloonmanager . jar differ <nl> diff - - git a / dist / jnacontrib / demo - balloontips . jar b / dist / jnacontrib / demo - balloontips . jar <nl> index 1704840 . . c6b523f 100644 <nl> Binary files a / dist / jnacontrib / demo - balloontips . jar and b / dist / jnacontrib / demo - balloontips . jar differ <nl> diff - - git a / dist / jnacontrib / demo - dnd . jar b / dist / jnacontrib / demo - dnd . jar <nl> index 327d686 . . b58116d 100644 <nl> Binary files a / dist / jnacontrib / demo - dnd . jar and b / dist / jnacontrib / demo - dnd . jar differ <nl> diff - - git a / dist / jnacontrib / demo - shapedwindow . jar b / dist / jnacontrib / demo - shapedwindow . jar <nl> index df31cf2 . . 841c3bf 100644 <nl> Binary files a / dist / jnacontrib / demo - shapedwindow . jar and b / dist / jnacontrib / demo - shapedwindow . jar differ <nl> diff - - git a / dist / jnacontrib / demo - w32keyhook . jar b / dist / jnacontrib / demo - w32keyhook . jar <nl> index 991d585 . . 77c6d7e 100644 <nl> Binary files a / dist / jnacontrib / demo - w32keyhook . jar and b / dist / jnacontrib / demo - w32keyhook . jar differ <nl> diff - - git a / dist / jnacontrib / demo - x11 . jar b / dist / jnacontrib / demo - x11 . jar <nl> index ee0b300 . . cfcf00f 100644 <nl> Binary files a / dist / jnacontrib / demo - x11 . jar and b / dist / jnacontrib / demo - x11 . jar differ <nl> diff - - git a / dist / linux - aarch64 . jar b / dist / linux - aarch64 . jar <nl> new file mode 100644 <nl> index 0000000 . . a3e1001 <nl> Binary files / dev / null and b / dist / linux - aarch64 . jar differ <nl> diff - - git a / dist / linux - ppc64le . jar b / dist / linux - ppc64le . jar <nl> new file mode 100644 <nl> index 0000000 . . 0674eb0 <nl> Binary files / dev / null and b / dist / linux - ppc64le . jar differ <nl> diff - - git a / dist / src - full . zip b / dist / src - full . zip <nl> index a6b37dd . . fee5513 100644 <nl> Binary files a / dist / src - full . zip and b / dist / src - full . zip differ <nl> diff - - git a / dist / src . zip b / dist / src . zip <nl> index 4402316 . . c46d619 100644 <nl> Binary files a / dist / src . zip and b / dist / src . zip differ
diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index 1594cf5 . . d9f2002 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ <nl> diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index eef4f08 . . 7ff3305 100755 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ <nl> diff - - git a / native / callback . c b / native / callback . c <nl> index a4341c1 . . 057d1bd 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 592 , 6 + 592 , 7 @ @ BOOL WINAPI DllMain ( HINSTANCE hDLL , DWORD fdwReason , LPVOID lpvReserved ) { <nl> thread _ storage * tls = ( thread _ storage * ) TlsGetValue ( tls _ thread _ data _ key ) ; <nl> if ( tls ) { <nl> dispose _ thread _ data ( tls ) ; <nl> + TlsSetValue ( tls _ thread _ data _ key , 0 ) ; <nl> } <nl> break ; <nl> } <nl> diff - - git a / test / com / sun / jna / LastErrorTest . java b / test / com / sun / jna / LastErrorTest . java <nl> index 53e545a . . 064d100 100644 <nl> - - - a / test / com / sun / jna / LastErrorTest . java <nl> + + + b / test / com / sun / jna / LastErrorTest . java <nl> @ @ - 14 , 6 + 14 , 8 @ @ package com . sun . jna ; <nl> <nl> import java . util . Map ; <nl> import java . util . HashMap ; <nl> + import java . util . Set ; <nl> + import java . util . HashSet ; <nl> import java . lang . reflect . Method ; <nl> <nl> import junit . framework . TestCase ; <nl> @ @ - 50 , 22 + 52 , 30 @ @ public class LastErrorTest extends TestCase { <nl> <nl> public void testLastErrorPerThreadStorage ( ) throws Exception { <nl> final TestLibrary lib = ( TestLibrary ) Native . loadLibrary ( " testlib " , TestLibrary . class ) ; <nl> - final int [ ] errors = new int [ 2 ] ; <nl> - Thread t1 = new Thread ( ) { public void run ( ) { <nl> - lib . setLastError ( - 1 ) ; <nl> - errors [ 0 ] = Native . getLastError ( ) ; <nl> - } } ; <nl> - Thread t2 = new Thread ( ) { public void run ( ) { <nl> - lib . setLastError ( - 2 ) ; <nl> - errors [ 1 ] = Native . getLastError ( ) ; <nl> - } } ; <nl> - lib . setLastError ( - 3 ) ; <nl> - <nl> - t1 . start ( ) ; t2 . start ( ) ; <nl> - t1 . join ( ) ; t2 . join ( ) ; <nl> - assertEquals ( " Wrong error on main thread " , - 3 , Native . getLastError ( ) ) ; <nl> - assertEquals ( " Wrong error on first thread " , - 1 , errors [ 0 ] ) ; <nl> - assertEquals ( " Wrong error on second thread " , - 2 , errors [ 1 ] ) ; <nl> + final int NTHREADS = 100 ; <nl> + final int [ ] errors = new int [ NTHREADS ] ; <nl> + Set < Thread > threads = new HashSet < Thread > ( ) ; <nl> + for ( int i = 0 ; i < NTHREADS ; i + + ) { <nl> + final int idx = i ; <nl> + Thread t = new Thread ( ) { public void run ( ) { <nl> + lib . setLastError ( - idx - 1 ) ; <nl> + errors [ idx ] = Native . getLastError ( ) ; <nl> + } } ; <nl> + threads . add ( t ) ; <nl> + } <nl> + int EXPECTED = 42 ; <nl> + lib . setLastError ( EXPECTED ) ; <nl> + assertEquals ( " Wrong error on main thread ( immediate ) " , EXPECTED , Native . getLastError ( ) ) ; <nl> + for ( Thread t : threads ) { <nl> + t . start ( ) ; <nl> + } <nl> + for ( Thread t : threads ) { <nl> + t . join ( ) ; <nl> + } <nl> + assertEquals ( " Wrong error on main thread " , EXPECTED , Native . getLastError ( ) ) ; <nl> + for ( int i = 0 ; i < threads . size ( ) ; i + + ) { <nl> + assertEquals ( " Wrong error on thread " + i , - i - 1 , errors [ i ] ) ; <nl> + } <nl> } <nl> <nl> private final int ERROR = Platform . isWindows ( ) ? 1 : - 1 ;
diff - - git a / lib / native / darwin . jar b / lib / native / darwin . jar <nl> index 0761190 . . 2909f41 100755 <nl> Binary files a / lib / native / darwin . jar and b / lib / native / darwin . jar differ
diff - - git a / native / testlib . c b / native / testlib . c <nl> index 9384ecf . . 7080d1d 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 982 , 12 + 982 , 23 @ @ callManyArgsStdCallCallback ( void ( _ _ stdcall * func ) ( long , int , double , <nl> <nl> # include < jni . h > <nl> # include < math . h > <nl> + # include < sys / types . h > <nl> # include " dispatch . h " <nl> JNIEXPORT jdouble JNICALL <nl> - Java _ com _ sun _ jna _ PerformanceTest _ 00024JNIMathLibrary _ cos ( JNIEnv * UNUSED ( env ) , jclass UNUSED ( cls ) , jdouble x ) { <nl> + Java _ com _ sun _ jna _ PerformanceTest _ 00024JNILibrary _ cos ( JNIEnv * UNUSED ( env ) , jclass UNUSED ( cls ) , jdouble x ) { <nl> return cos ( x ) ; <nl> } <nl> <nl> + JNIEXPORT jint JNICALL <nl> + Java _ com _ sun _ jna _ PerformanceTest _ 00024JNILibrary _ getpid ( JNIEnv * UNUSED ( env ) , jclass UNUSED ( cls ) ) { <nl> + # ifdef _ WIN32 <nl> + extern int _ getpid ( ) ; <nl> + return _ getpid ( ) ; <nl> + # else <nl> + return getpid ( ) ; <nl> + # endif <nl> + } <nl> + <nl> # ifdef _ _ cplusplus <nl> } <nl> # endif <nl> diff - - git a / test / com / sun / jna / PerformanceTest . java b / test / com / sun / jna / PerformanceTest . java <nl> index 49a348a . . f65c508 100644 <nl> - - - a / test / com / sun / jna / PerformanceTest . java <nl> + + + b / test / com / sun / jna / PerformanceTest . java <nl> @ @ - 29 , 7 + 29 , 7 @ @ public class PerformanceTest extends TestCase implements Paths { <nl> <nl> public void testEmpty ( ) { } <nl> <nl> - private static class JNIMathLibrary { <nl> + private static class JNILibrary { <nl> static { <nl> String path = TESTPATH + NativeLibrary . mapSharedLibraryName ( " testlib " ) ; ; <nl> if ( ! new File ( path ) . isAbsolute ( ) ) { <nl> @ @ - 39 , 6 + 39 , 7 @ @ public class PerformanceTest extends TestCase implements Paths { <nl> } <nl> <nl> private static native double cos ( double x ) ; <nl> + private static native int getpid ( ) ; <nl> } <nl> <nl> public static void main ( java . lang . String [ ] argList ) { <nl> @ @ - 68 , 6 + 69 , 7 @ @ public class PerformanceTest extends TestCase implements Paths { <nl> } <nl> } <nl> <nl> + public static native int getpid ( ) ; <nl> public static native Pointer memset ( Pointer p , int v , size _ t len ) ; <nl> public static native Pointer memset ( Pointer p , int v , int len ) ; <nl> public static native Pointer memset ( Pointer p , int v , long len ) ; <nl> @ @ - 84 , 6 + 86 , 7 @ @ public class PerformanceTest extends TestCase implements Paths { <nl> } <nl> <nl> static interface CInterface extends Library { <nl> + int getpid ( ) ; <nl> Pointer memset ( Pointer p , int v , int len ) ; <nl> int strlen ( String s ) ; <nl> } <nl> @ @ - 168 , 7 + 171 , 7 @ @ public class PerformanceTest extends TestCase implements Paths { <nl> <nl> start = System . currentTimeMillis ( ) ; <nl> for ( int i = 0 ; i < COUNT ; i + + ) { <nl> - dresult = JNIMathLibrary . cos ( 0d ) ; <nl> + dresult = JNILibrary . cos ( 0d ) ; <nl> } <nl> delta = System . currentTimeMillis ( ) - start ; <nl> System . out . println ( " cos ( JNI ) : " + delta + " ms " ) ; <nl> @ @ - 180 , 12 + 183 , 37 @ @ public class PerformanceTest extends TestCase implements Paths { <nl> delta = System . currentTimeMillis ( ) - start ; <nl> System . out . println ( " cos ( pure java ) : " + delta + " ms " ) ; <nl> <nl> - / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> - / / memset <nl> Pointer presult ; <nl> String cname = Platform . C _ LIBRARY _ NAME ; <nl> CInterface clib = ( CInterface ) <nl> Native . loadLibrary ( cname , CInterface . class ) ; <nl> + <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / getpid <nl> + int pid ; <nl> + start = System . currentTimeMillis ( ) ; <nl> + for ( int i = 0 ; i < COUNT ; i + + ) { <nl> + pid = clib . getpid ( ) ; <nl> + } <nl> + delta = System . currentTimeMillis ( ) - start ; <nl> + System . out . println ( " getpid ( JNA interface ) : " + delta + " ms " ) ; <nl> + <nl> + start = System . currentTimeMillis ( ) ; <nl> + for ( int i = 0 ; i < COUNT ; i + + ) { <nl> + pid = CLibrary . getpid ( ) ; <nl> + } <nl> + delta = System . currentTimeMillis ( ) - start ; <nl> + System . out . println ( " getpid ( JNA direct ) : " + delta + " ms " ) ; <nl> + <nl> + start = System . currentTimeMillis ( ) ; <nl> + for ( int i = 0 ; i < COUNT ; i + + ) { <nl> + pid = JNILibrary . getpid ( ) ; <nl> + } <nl> + delta = System . currentTimeMillis ( ) - start ; <nl> + System . out . println ( " getpid ( JNI ) : " + delta + " ms " ) ; <nl> + <nl> + / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / <nl> + / / memset <nl> start = System . currentTimeMillis ( ) ; <nl> for ( int i = 0 ; i < COUNT ; i + + ) { <nl> presult = clib . memset ( null , 0 , 0 ) ;
diff - - git a / build . xml b / build . xml <nl> index e834ffd . . baed194 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 10 , 7 + 10 , 7 @ @ <nl> <nl> Cross - compile by specifying - Dos . prefix = { name - arch } to ant <nl> ( cross - compile currently only configured / tested on w32ce - arm and <nl> - android - { arm | aarch64 | x86 | x86 - 64 | mips | mips64 } ) <nl> + android - { arm | armv7 | aarch64 | x86 | x86 - 64 | mips | mips64 } ) <nl> <nl> Use ANT _ OPTS = - Dskip - native = false to build native parts , or directly <nl> invoke the native or test targets <nl> @ @ - 177 , 7 + 177 , 7 @ @ <nl> < not > <nl> < and > <nl> < matches pattern = " ^ android - " string = " $ { os . prefix } " / > <nl> - < not > < matches patterm = " 64 $ " string = " $ { os . prefix } " / > < / not > <nl> + < not > < matches pattern = " 64 $ " string = " $ { os . prefix } " / > < / not > <nl> < / and > <nl> < / not > <nl> < or > <nl> @ @ - 615 , 6 + 615 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - sparc . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - sparcv9 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / android - arm . jar " overwrite = " true " / > <nl> + < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / android - armv7 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / android - aarch64 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / android - x86 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / android - x86 - 64 . jar " overwrite = " true " / > <nl> @ @ - 688 , 6 + 689 , 9 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < condition property = " ARCH " value = " arm " > <nl> < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > <nl> < / condition > <nl> + < condition property = " ARCH " value = " armv7 " > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " android - armv7 " / > <nl> + < / condition > <nl> < condition property = " ARCH " value = " aarch64 " > <nl> < equals arg1 = " $ { os . prefix } " arg2 = " android - aarch64 " / > <nl> < / condition > <nl> diff - - git a / lib / native / android - armv7 . jar b / lib / native / android - armv7 . jar <nl> new file mode 100644 <nl> index 0000000 . . 4a0b34b <nl> Binary files / dev / null and b / lib / native / android - armv7 . jar differ <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index 5acfa25 . . 5da5b60 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 16 , 7 + 16 , 7 @ @ <nl> # Solaris ( i386 / amd64 / sparc / sparcv9 ) <nl> # AIX ( ppc / ppc64 ) <nl> # FreeBSD / OpenBSD / NetBSD ( i386 / amd64 ) <nl> - # Android ( arm / aarch64 / x86 / x86 - 64 / mipsel / mips64el ) <nl> + # Android ( arm / armv7 / aarch64 / x86 / x86 - 64 / mipsel / mips64el ) <nl> # <nl> # Built , but with outstanding bugs ( not necessarily within JNA ) : <nl> # <nl> @ @ - 111 , 7 + 111 , 7 @ @ endif <nl> STRIP = strip - x <nl> # end defaults <nl> <nl> - # Android build ( cross - compile ) requires the android SDK + NDK . <nl> + # Android build ( cross - compile ) requires the android NDK . <nl> # Ensure the following tools are in your path and adjust NDK _ PLATFORM as needed <nl> ifeq ( $ ( OS ) , android ) <nl> AARCH = $ ( ARCH ) <nl> @ @ - 120 , 6 + 120 , 11 @ @ ifeq ( $ ( ARCH ) , arm ) <nl> PREFIX = arm - linux - androideabi - <nl> COPT + = - mthumb - interwork - march = armv5te - mtune = xscale - msoft - float - fstack - protector <nl> HOST = arm - linux - eabi <nl> + else ifeq ( $ ( ARCH ) , armv7 ) <nl> + PREFIX = arm - linux - androideabi - <nl> + COPT + = - march = armv7 - a - mfloat - abi = softfp - mfpu = vfpv3 - d16 - Wl , - - fix - cortex - a8 <nl> + HOST = arm - linux - eabi <nl> + AARCH = arm <nl> else ifeq ( $ ( ARCH ) , aarch64 ) <nl> PREFIX = aarch64 - linux - android - <nl> HOST = aarch64 - linux - android
diff - - git a / lib / native / sunos - x86 - 64 . jar b / lib / native / sunos - x86 - 64 . jar <nl> index 58a4153 . . f112372 100755 <nl> Binary files a / lib / native / sunos - x86 - 64 . jar and b / lib / native / sunos - x86 - 64 . jar differ <nl> diff - - git a / lib / native / sunos - x86 . jar b / lib / native / sunos - x86 . jar <nl> index 7d36803 . . 1fb2a0f 100755 <nl> Binary files a / lib / native / sunos - x86 . jar and b / lib / native / sunos - x86 . jar differ
diff - - git a / lib / native / linux - x86 . jar b / lib / native / linux - x86 . jar <nl> index 693e1d6 . . 83f5c4b 100755 <nl> Binary files a / lib / native / linux - x86 . jar and b / lib / native / linux - x86 . jar differ
diff - - git a / lib / native / linux - x86 . jar b / lib / native / linux - x86 . jar <nl> index 840bac2 . . 8e50099 100755 <nl> Binary files a / lib / native / linux - x86 . jar and b / lib / native / linux - x86 . jar differ
diff - - git a / native / Makefile b / native / Makefile <nl> index 6307996 . . 5215f0a 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 20 , 7 + 20 , 7 @ @ <nl> # <nl> # Built , but with outstanding bugs ( not necessarily within JNA ) : <nl> # <nl> - # Linux ( ppc64 / ia64 ) <nl> + # Linux ( ppc64 / ppc64le / ia64 ) <nl> # <nl> # The w32ce build requires cegcc and phoneME for cross - compilation ; if these <nl> # tools are available on the path then " ant - Dos . prefix = w32ce - arm " should <nl> @ @ - 228 , 7 + 228 , 12 @ @ ifeq ( $ ( OS ) , linux ) <nl> ARCH = $ ( shell uname - m | sed ' s / i . 86 / i386 / g ' ) <nl> PCFLAGS + = - fPIC <nl> CDEFINES + = - DHAVE _ PROTECTION <nl> + ifeq ( $ ( DYNAMIC _ LIBFFI ) , true ) <nl> LDFLAGS + = - Wl , - soname , $ @ <nl> + else <nl> + # Ensure we bind to local libffi symbols <nl> + LDFLAGS + = - Wl , - soname , $ @ , - Bsymbolic <nl> + endif <nl> endif <nl> <nl> ifneq ( , $ ( findstring bsd , $ ( OS ) ) )
diff - - git a / test / com / sun / jna / MemoryTest . java b / test / com / sun / jna / MemoryTest . java <nl> index e98cccd . . 59614e5 100644 <nl> - - - a / test / com / sun / jna / MemoryTest . java <nl> + + + b / test / com / sun / jna / MemoryTest . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ public class MemoryTest extends TestCase implements GCWaits { <nl> shared = null ; <nl> System . gc ( ) ; <nl> Memory . purge ( ) ; <nl> - for ( int i = 0 ; i < GC _ WAITS & & ref . get ( ) ! = null ) { <nl> + for ( int i = 0 ; i < GC _ WAITS & & ref . get ( ) ! = null ; i + + ) { <nl> Thread . sleep ( GC _ WAIT _ INTERVAL ) ; <nl> System . gc ( ) ; <nl> Memory . purge ( ) ;
diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index b574d69 . . 1594cf5 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ <nl> diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index 0d07eda . . eef4f08 100755 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ
diff - - git a / build . xml b / build . xml <nl> index a046976 . . b426dde 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 212 , 12 + 212 , 18 @ @ <nl> < condition property = " jre . arch " value = " ppc " > <nl> < matches pattern = " ( powerpc | power ) " string = " $ { os . arch } " / > <nl> < / condition > <nl> + < condition property = " jre . arch " value = " ppc64le " > <nl> + < or > <nl> + 	 < matches pattern = " ( powerpc64le | power64le | ppc64le ) " string = " $ { os . arch } " / > <nl> + 	 < and > <nl> + 	 < matches pattern = " ( powerpc64 | power64 | ppc64 ) " string = " $ { os . arch } " / > <nl> + 	 < matches pattern = " little " string = " $ { sun . cpu . endian } " / > <nl> + 	 < / and > <nl> + < / or > <nl> + < / condition > <nl> < condition property = " jre . arch " value = " ppc64 " > <nl> < matches pattern = " ( powerpc64 | power64 ) " string = " $ { os . arch } " / > <nl> < / condition > <nl> - < condition property = " jre . arch " value = " ppc64le " > <nl> - < matches pattern = " ( powerpc64le | power64le ) " string = " $ { os . arch } " / > <nl> - < / condition > <nl> < property name = " jre . arch " value = " $ { os . arch } " / > <nl> < condition property = " os . prefix " value = " linux - $ { jre . arch } " > <nl> < os name = " Linux " / > <nl> @ @ - 286 , 7 + 292 , 7 @ @ <nl> < echo > java . library . path = $ { java . library . path } < / echo > <nl> < echo > os . prefix = $ { os . prefix } < / echo > <nl> < echo > os . name = $ { os . name } < / echo > <nl> - < echo > os . arch = $ { os . arch } < / echo > <nl> + < echo > os . arch = $ { os . arch } ( $ { sun . cpu . endian } ) < / echo > <nl> < echo > build = $ { build } < / echo > <nl> < echo > build . native = $ { build . native } < / echo > <nl> <nl> diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java <nl> index 593cba8 . . 89d7f08 100644 <nl> - - - a / src / com / sun / jna / Platform . java <nl> + + + b / src / com / sun / jna / Platform . java <nl> @ @ - 112 , 8 + 112 , 8 @ @ public final class Platform { <nl> C _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " c " ; <nl> MATH _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " m " ; <nl> HAS _ DLL _ CALLBACKS = osType = = WINDOWS ; <nl> + 	 ARCH = getCanonicalArchitecture ( System . getProperty ( " os . arch " ) ) ; <nl> RESOURCE _ PREFIX = getNativeLibraryResourcePrefix ( ) ; <nl> - ARCH = System . getProperty ( " os . arch " ) . toLowerCase ( ) . trim ( ) ; <nl> } <nl> private Platform ( ) { } <nl> public static final int getOSType ( ) { <nl> @ @ - 175 , 9 + 175 , 9 @ @ public final class Platform { <nl> if ( model ! = null ) { <nl> return " 64 " . equals ( model ) ; <nl> } <nl> - if ( " x86 _ 64 " . equals ( ARCH ) <nl> + if ( " x86 - 64 " . equals ( ARCH ) <nl> | | " ia64 " . equals ( ARCH ) <nl> - | | " ppc64 " . equals ( ARCH ) <nl> + | | " ppc64 " . equals ( ARCH ) | | " ppc64le " . equals ( ARCH ) <nl> | | " sparcv9 " . equals ( ARCH ) <nl> | | " amd64 " . equals ( ARCH ) ) { <nl> return true ; <nl> @ @ - 186 , 21 + 186 , 14 @ @ public final class Platform { <nl> } <nl> <nl> public static final boolean isIntel ( ) { <nl> - if ( ARCH . equals ( " i386 " ) <nl> - | | ARCH . startsWith ( " i686 " ) <nl> - | | ARCH . equals ( " x86 " ) <nl> - | | ARCH . equals ( " x86 _ 64 " ) <nl> - | | ARCH . equals ( " amd64 " ) ) { <nl> + if ( ARCH . equals ( " x86 " ) | | ARCH . equals ( " x86 - 64 " ) ) { <nl> return true ; <nl> } <nl> return false ; <nl> } <nl> <nl> public static final boolean isPPC ( ) { <nl> - if ( ARCH . equals ( " ppc " ) <nl> - | | ARCH . equals ( " ppc64 " ) <nl> - | | ARCH . equals ( " powerpc " ) <nl> - | | ARCH . equals ( " powerpc64 " ) ) { <nl> + if ( ARCH . startsWith ( " ppc " ) ) { <nl> return true ; <nl> } <nl> return false ; <nl> @ @ - 214 , 6 + 207 , 28 @ @ public final class Platform { <nl> return ARCH . startsWith ( " sparc " ) ; <nl> } <nl> <nl> + static String getCanonicalArchitecture ( String arch ) { <nl> + 	 / / Work around OpenJDK mis - reporting os . arch <nl> + 	 / / https : / / bugs . openjdk . java . net / browse / JDK - 8073139 <nl> + 	 arch = arch . toLowerCase ( ) . trim ( ) ; <nl> + if ( " powerpc " . equals ( arch ) ) { <nl> + arch = " ppc " ; <nl> + } <nl> + else if ( " powerpc64 " . equals ( arch ) ) { <nl> + arch = " ppc64 " ; <nl> + } <nl> + else if ( " i386 " . equals ( arch ) | | " i686 " . equals ( arch ) ) { <nl> + arch = " x86 " ; <nl> + } <nl> + else if ( " x86 _ 64 " . equals ( arch ) | | " amd64 " . equals ( arch ) ) { <nl> + arch = " x86 - 64 " ; <nl> + } <nl> + 	 if ( " ppc64 " . equals ( arch ) & & " little " . equals ( System . getProperty ( " sun . cpu . endian " ) ) ) { <nl> + 	 arch = " ppc64le " ; <nl> + 	 } <nl> + 	 return arch ; <nl> + } <nl> + <nl> / * * Generate a canonical String prefix based on the current OS <nl> type / arch / name . <nl> * / <nl> @ @ - 229 , 19 + 244 , 7 @ @ public final class Platform { <nl> * / <nl> static String getNativeLibraryResourcePrefix ( int osType , String arch , String name ) { <nl> String osPrefix ; <nl> - arch = arch . toLowerCase ( ) . trim ( ) ; <nl> - if ( " powerpc " . equals ( arch ) ) { <nl> - arch = " ppc " ; <nl> - } <nl> - else if ( " powerpc64 " . equals ( arch ) ) { <nl> - arch = " ppc64 " ; <nl> - } <nl> - else if ( " i386 " . equals ( arch ) ) { <nl> - arch = " x86 " ; <nl> - } <nl> - else if ( " x86 _ 64 " . equals ( arch ) | | " amd64 " . equals ( arch ) ) { <nl> - arch = " x86 - 64 " ; <nl> - } <nl> + arch = getCanonicalArchitecture ( arch ) ; <nl> switch ( osType ) { <nl> case Platform . ANDROID : <nl> if ( arch . startsWith ( " arm " ) ) {
diff - - git a / test / com / sun / jna / ArgumentsMarshalTest . java b / test / com / sun / jna / ArgumentsMarshalTest . java <nl> index 9ba07f6 . . d304dda 100644 <nl> - - - a / test / com / sun / jna / ArgumentsMarshalTest . java <nl> + + + b / test / com / sun / jna / ArgumentsMarshalTest . java <nl> @ @ - 565 , 9 + 565 , 9 @ @ public class ArgumentsMarshalTest extends TestCase { <nl> null , <nl> new CheckFieldAlignment . ByReference ( ) , <nl> } ; <nl> - assertTrue ( " Wrong value returned ( 0 ) " , args [ 0 ] . dataEquals ( lib . returnPointerArrayElement ( args , 0 ) ) ) ; <nl> + assertTrue ( " Wrong value returned ( 0 ) " , args [ 0 ] . dataEquals ( lib . returnPointerArrayElement ( args , 0 ) , true ) ) ; <nl> assertNull ( " Wrong value returned ( 1 ) " , lib . returnPointerArrayElement ( args , 1 ) ) ; <nl> - assertTrue ( " Wrong value returned ( 2 ) " , args [ 2 ] . dataEquals ( lib . returnPointerArrayElement ( args , 2 ) ) ) ; <nl> + assertTrue ( " Wrong value returned ( 2 ) " , args [ 2 ] . dataEquals ( lib . returnPointerArrayElement ( args , 2 ) , true ) ) ; <nl> assertNull ( " Native array should be null terminated " , lib . returnPointerArrayElement ( args , 3 ) ) ; <nl> } <nl>
diff - - git a / lib / native / sunos - sparc . jar b / lib / native / sunos - sparc . jar <nl> index ad5b678 . . a85397a 100644 <nl> Binary files a / lib / native / sunos - sparc . jar and b / lib / native / sunos - sparc . jar differ <nl> diff - - git a / lib / native / sunos - sparcv9 . jar b / lib / native / sunos - sparcv9 . jar <nl> index e7659da . . 3138985 100755 <nl> Binary files a / lib / native / sunos - sparcv9 . jar and b / lib / native / sunos - sparcv9 . jar differ
diff - - git a / . travis . yml b / . travis . yml <nl> index 6f7548d . . 555ac68 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 1 , 3 + 1 , 5 @ @ <nl> + sudo : false <nl> + <nl> language : java <nl> <nl> install :
diff - - git a / CHANGES . md b / CHANGES . md <nl> index d55b6fa . . 5f2b2a4 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 49 , 6 + 49 , 7 @ @ Features <nl> * Loosen OSGI OS name matching to accommodate Windows 8 family - Niels Bertram . <nl> * [ # 436 ] ( https : / / github . com / twall / jna / pull / 469 ) : Added basic Pdh API implementation to ' com . sun . jna . platform . win32 ' - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 451 ] ( https : / / github . com / twall / jna / pull / 451 ) : Add VARIANT support for CHAR and BYTE - [ @ mitkola ] ( https : / / github . com / mitkola ) . <nl> + * [ # 478 ] ( https : / / github . com / twall / jna / issues / 451 ) : Ask ldconfig for more places to search for libraries - [ @ gohal ] ( https : / / github . com / gohal ) . <nl> * [ # 481 ] ( https : / / github . com / twall / jna / pull / 481 ) : Added volume management functions to ' com . sun . jna . platform . win32 ' - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 483 ] ( https : / / github . com / twall / jna / pull / 483 ) : Found and fixed duplicate method definitions for the same API in ' com . sun . jna . platform . win32 ' - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 485 ] ( https : / / github . com / twall / jna / pull / 485 ) : Implemented Comparable interface for many of the base types in ' com . sun . jna . platform . win32 . WinDef ' - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> diff - - git a / test / com / sun / jna / JNALoadTest . java b / test / com / sun / jna / JNALoadTest . java <nl> index b8fba65 . . e84cf94 100644 <nl> - - - a / test / com / sun / jna / JNALoadTest . java <nl> + + + b / test / com / sun / jna / JNALoadTest . java <nl> @ @ - 27 , 6 + 27 , 11 @ @ import junit . framework . TestCase ; <nl> * / <nl> public class JNALoadTest extends TestCase implements Paths { <nl> <nl> + / / Amount of time to wait for GC , in ms <nl> + private static final int GC _ WAIT _ TIMEOUT = 5000 ; <nl> + private static final int GC _ WAIT _ INTERVAL = 10 ; <nl> + private static final int GC _ WAITS = GC _ WAIT _ TIMEOUT / GC _ WAIT _ INTERVAL ; <nl> + <nl> private class TestLoader extends URLClassLoader { <nl> public TestLoader ( boolean fromJar ) throws MalformedURLException { <nl> super ( new URL [ ] { <nl> @ @ - 119 , 8 + 124 , 8 @ @ public class JNALoadTest extends TestCase implements Paths { <nl> cls = null ; <nl> field = null ; <nl> System . gc ( ) ; <nl> - for ( int i = 0 ; i < 100 & & ( ref . get ( ) ! = null | | clref . get ( ) ! = null ) ; i + + ) { <nl> - Thread . sleep ( 10 ) ; <nl> + for ( int i = 0 ; i < GC _ WAITS & & ( ref . get ( ) ! = null | | clref . get ( ) ! = null ) ; i + + ) { <nl> + Thread . sleep ( GC _ WAIT _ INTERVAL ) ; <nl> System . gc ( ) ; <nl> } <nl> assertNull ( " Class not GC ' d : " + ref . get ( ) , ref . get ( ) ) ; <nl> @ @ - 128 , 8 + 133 , 8 @ @ public class JNALoadTest extends TestCase implements Paths { <nl> <nl> / / Check for temporary file deletion <nl> File f = new File ( path ) ; <nl> - for ( int i = 0 ; i < 100 & & ( f . exists ( ) | | Boolean . getBoolean ( " jna . loaded " ) ) ; i + + ) { <nl> - Thread . sleep ( 10 ) ; <nl> + for ( int i = 0 ; i < GC _ WAITS & & ( f . exists ( ) | | Boolean . getBoolean ( " jna . loaded " ) ) ; i + + ) { <nl> + Thread . sleep ( GC _ WAIT _ INTERVAL ) ; <nl> System . gc ( ) ; <nl> } <nl> <nl> @ @ - 173 , 8 + 178 , 8 @ @ public class JNALoadTest extends TestCase implements Paths { <nl> cls = null ; <nl> field = null ; <nl> System . gc ( ) ; <nl> - for ( int i = 0 ; i < 100 & & ( ref . get ( ) ! = null | | clref . get ( ) ! = null | | Boolean . getBoolean ( " jna . loaded " ) ) ; i + + ) { <nl> - Thread . sleep ( 10 ) ; <nl> + for ( int i = 0 ; i < GC _ WAITS & & ( ref . get ( ) ! = null | | clref . get ( ) ! = null | | Boolean . getBoolean ( " jna . loaded " ) ) ; i + + ) { <nl> + Thread . sleep ( GC _ WAIT _ INTERVAL ) ; <nl> System . gc ( ) ; <nl> } <nl> assertNull ( " Class not GC ' d : " + ref . get ( ) , ref . get ( ) ) ; <nl> @ @ - 184 , 9 + 189 , 9 @ @ public class JNALoadTest extends TestCase implements Paths { <nl> Throwable throwable = null ; <nl> / / NOTE : IBM J9 needs some extra time to unload the native library , <nl> / / so try a few times before failing <nl> - for ( int i = 0 ; i < 100 ; i + + ) { <nl> + for ( int i = 0 ; i < GC _ WAITS ; i + + ) { <nl> System . gc ( ) ; <nl> - Thread . sleep ( 10 ) ; <nl> + Thread . sleep ( GC _ WAIT _ INTERVAL ) ; <nl> try { <nl> loader = new TestLoader ( false ) ; <nl> cls = Class . forName ( " com . sun . jna . Native " , true , loader ) ;
diff - - git a / test / com / sun / jna / JNALoadTest . java b / test / com / sun / jna / JNALoadTest . java <nl> index 0194acd . . b8fba65 100644 <nl> - - - a / test / com / sun / jna / JNALoadTest . java <nl> + + + b / test / com / sun / jna / JNALoadTest . java <nl> @ @ - 125 , 11 + 125 , 10 @ @ public class JNALoadTest extends TestCase implements Paths { <nl> } <nl> assertNull ( " Class not GC ' d : " + ref . get ( ) , ref . get ( ) ) ; <nl> assertNull ( " ClassLoader not GC ' d : " + clref . get ( ) , clref . get ( ) ) ; <nl> - assertFalse ( " System property jna . loaded not cleared " , Boolean . getBoolean ( " jna . loaded " ) ) ; <nl> <nl> / / Check for temporary file deletion <nl> File f = new File ( path ) ; <nl> - for ( int i = 0 ; i < 100 & & f . exists ( ) ; i + + ) { <nl> + for ( int i = 0 ; i < 100 & & ( f . exists ( ) | | Boolean . getBoolean ( " jna . loaded " ) ) ; i + + ) { <nl> Thread . sleep ( 10 ) ; <nl> System . gc ( ) ; <nl> } <nl> @ @ - 138 , 6 + 137 , 7 @ @ public class JNALoadTest extends TestCase implements Paths { <nl> assertTrue ( " Temporary jnidispatch not marked for later deletion : " <nl> + f , new File ( f . getAbsolutePath ( ) + " . x " ) . exists ( ) ) ; <nl> } <nl> + assertFalse ( " System property jna . loaded not cleared " , Boolean . getBoolean ( " jna . loaded " ) ) ; <nl> <nl> / / Should be able to load again without complaints about library <nl> / / already loaded in another class loader <nl> @ @ - 173 , 7 + 173 , 7 @ @ public class JNALoadTest extends TestCase implements Paths { <nl> cls = null ; <nl> field = null ; <nl> System . gc ( ) ; <nl> - for ( int i = 0 ; i < 100 & & ( ref . get ( ) ! = null | | clref . get ( ) ! = null ) ; i + + ) { <nl> + for ( int i = 0 ; i < 100 & & ( ref . get ( ) ! = null | | clref . get ( ) ! = null | | Boolean . getBoolean ( " jna . loaded " ) ) ; i + + ) { <nl> Thread . sleep ( 10 ) ; <nl> System . gc ( ) ; <nl> }
diff - - git a / build . xml b / build . xml <nl> index d1db394 . . a046976 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 279 , 7 + 279 , 7 @ @ <nl> < mkdir dir = " $ { reports } " / > <nl> < mkdir dir = " $ { doc } " / > <nl> <nl> - < echo > Java version $ { java . version } , compatibility : $ { compatibility } < / echo > <nl> + < echo > Java version $ { java . version } , compatibility : $ { compatibility } , ant : $ { ant . java . version } < / echo > <nl> < echo > JNA version $ { jna . version } , native $ { jni . version } < / echo > <nl> < echo > $ { java . vm . name } ( $ { java . vm . vendor } , $ { java . vm . version } ) < / echo > <nl> < echo > java . home = $ { java . home } < / echo > <nl> @ @ - 1028 , 6 + 1028 , 9 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> value = " & lt ; center & gt ; & lt ; i & gt ; $ { copyright } & lt ; / i & gt ; & lt ; / center & gt ; " / > <nl> <nl> < mkdir dir = " $ { javadoc } " / > <nl> + < condition property = " javadoc . opts " value = " - Xdoclint : none " else = " " > <nl> + < matches pattern = " ^ 1 . [ 89 ] $ " string = " $ { ant . java . version } " / > <nl> + < / condition > <nl> < javadoc package = " true " <nl> windowtitle = " JNA API " <nl> sourcepathref = " javadoc . src . path " <nl> @ @ - 1035 , 7 + 1038 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> maxmemory = " 256m " <nl> packagenames = " com . sun . jna , com . sun . jna . ptr , com . sun . jna . types , com . sun . jna . platform , com . sun . jna . platform . win32 " <nl> overview = " $ { src } / com / sun / jna / overview . html " <nl> - additionalparam = " - Xdoclint : none " <nl> + additionalparam = " $ { javadoc . opts } " <nl> destdir = " $ { javadoc } " > <nl> < ! - - stylesheetfile = " $ { stylesheet } " - - > <nl> < doctitle > JNA API Documentation < / doctitle >
diff - - git a / CHANGES . md b / CHANGES . md <nl> index ba7acf3 . . d55b6fa 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 53 , 6 + 53 , 7 @ @ Features <nl> * [ # 483 ] ( https : / / github . com / twall / jna / pull / 483 ) : Found and fixed duplicate method definitions for the same API in ' com . sun . jna . platform . win32 ' - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 485 ] ( https : / / github . com / twall / jna / pull / 485 ) : Implemented Comparable interface for many of the base types in ' com . sun . jna . platform . win32 . WinDef ' - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 488 ] ( https : / / github . com / twall / jna / pull / 488 ) : Added GetRawInputDeviceList definition and utility to ' com . sun . jna . platform . win32 ' User32 and User32Util - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 490 ] ( https : / / github . com / twall / jna / issues / 490 ) : Allow arbitrary calling convention specification , including FFI _ MS _ CDECL which alters handling of struct return values , and multiple Linux / PowerPC conventions - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index 9b293d5 . . b574d69 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ <nl> diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index 30eb928 . . 0d07eda 100755 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index f7dbd38 . . 6307996 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 177 , 7 + 177 , 13 @ @ LIBPFX = <nl> LIBSFX = . dll <nl> TESTLIB _ TRUNC = $ ( BUILD ) / testlib - truncated . dll <nl> ifeq ( $ ( ARCH ) , amd64 ) <nl> + MINGW _ PREFIX ? = x86 _ 64 - w64 - mingw32 - <nl> FFI _ CONFIG + = - - host = x86 _ 64 - w64 - mingw32 <nl> + # Need windres from mingw distribution , even if building with MSVC <nl> + WINDRES = $ ( MINGW _ PREFIX ) windres <nl> + MINGW = $ ( MINGW _ PREFIX ) gcc <nl> + else <nl> + MINGW _ PREFIX ? = i686 - pc - mingw32 - <nl> endif <nl> <nl> ifeq ( $ ( USE _ MSVC ) , true ) <nl> @ @ - 202 , 15 + 208 , 12 @ @ LDFLAGS = - o $ @ - shared <nl> FFI _ ENV + = CXXCPP = " $ ( CPP ) " <nl> <nl> ifneq ( $ ( ARCH ) , amd64 ) <nl> - MINGW _ PREFIX ? = i686 - pc - mingw32 - <nl> CC = $ ( MINGW _ PREFIX ) gcc <nl> CPP = $ ( MINGW _ PREFIX ) gcc - E <nl> LDFLAGS + = - Wl , - - add - stdcall - alias <nl> LIBS = - lpsapi <nl> else <nl> # mingw64 lacks SEH , so MSVC build is preferred <nl> - MINGW _ PREFIX ? = x86 _ 64 - w64 - mingw32 - <nl> - MINGW = $ ( MINGW _ PREFIX ) gcc <nl> CC = $ ( MINGW ) <nl> # No SEH under mingw64 , thus no HAVE _ PROTECTION <nl> CDEFINES = - DPSAPI _ VERSION = 1 <nl> @ @ - 219 , 9 + 222 , 6 @ @ LIBS = - lmingwex - lpsapi - lkernel32 - lmsvcrt <nl> endif <nl> endif <nl> <nl> - # Need windres from mingw distribution , even if building with MSVC <nl> - WINDRES = $ ( MINGW _ PREFIX ) windres <nl> - <nl> endif <nl> <nl> ifeq ( $ ( OS ) , linux ) <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index e74d070 . . 73125f3 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 598 , 11 + 598 , 15 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray args , <nl> break ; <nl> # endif / / _ WIN32 <nl> default : <nl> - snprintf ( msg , sizeof ( msg ) , <nl> - " Unrecognized calling convention : % d " , ( int ) callconv ) ; <nl> - throw _ type = EIllegalArgument ; <nl> - throw _ msg = msg ; <nl> - goto cleanup ; <nl> + abi = ( int ) callconv ; <nl> + if ( ! ( abi > FFI _ FIRST _ ABI & & abi < FFI _ LAST _ ABI ) ) { <nl> + snprintf ( msg , sizeof ( msg ) , <nl> + " Unrecognized calling convention : % d " , abi ) ; <nl> + throw _ type = EIllegalArgument ; <nl> + throw _ msg = msg ; <nl> + goto cleanup ; <nl> + } <nl> + break ; <nl> } <nl> <nl> status = ffi _ prep _ cif ( & cif , abi , nargs , return _ type , arg _ types ) ; <nl> @ @ - 1142 , 7 + 1146 , 7 @ @ toNativeTypeMapped ( JNIEnv * env , jobject obj , void * valuep , size _ t size , jobject <nl> static void <nl> fromNativeTypeMapped ( JNIEnv * env , jobject from _ native , <nl> void * native _ return _ value , <nl> - int jtype , int size , <nl> + int jtype , size _ t size , <nl> jclass java _ return _ class , <nl> void * result _ storage , <nl> const char * encoding ) { <nl> diff - - git a / src / com / sun / jna / Function . java b / src / com / sun / jna / Function . java <nl> index edad221 . . 3ddae7d 100644 <nl> - - - a / src / com / sun / jna / Function . java <nl> + + + b / src / com / sun / jna / Function . java <nl> @ @ - 55 , 11 + 55 , 11 @ @ public class Function extends Pointer { <nl> / * * Standard C calling convention . * / <nl> public static final int C _ CONVENTION = 0 ; <nl> / * * First alternate convention ( currently used only for w32 stdcall ) . * / <nl> - public static final int ALT _ CONVENTION = 1 ; <nl> + public static final int ALT _ CONVENTION = 0x3F ; <nl> <nl> - private static final int MASK _ CC = 0x3 ; <nl> + private static final int MASK _ CC = 0x3F ; <nl> / * * Whether to throw an exception if last error is non - zero after call . * / <nl> - public static final int THROW _ LAST _ ERROR = ( 1 < < 2 ) ; <nl> + public static final int THROW _ LAST _ ERROR = 0x40 ; <nl> <nl> static final Integer INTEGER _ TRUE = new Integer ( - 1 ) ; <nl> static final Integer INTEGER _ FALSE = new Integer ( 0 ) ; <nl> @ @ - 242 , 11 + 242 , 8 @ @ public class Function extends Pointer { <nl> <nl> private void checkCallingConvention ( int convention ) <nl> throws IllegalArgumentException { <nl> - switch ( convention ) { <nl> - case C _ CONVENTION : <nl> - case ALT _ CONVENTION : <nl> - break ; <nl> - default : <nl> + / / TODO : perform per - platform calling convention checks <nl> + if ( ( convention & MASK _ CC ) ! = convention ) { <nl> throw new IllegalArgumentException ( " Unrecognized calling convention : " <nl> + convention ) ; <nl> } <nl> @ @ - 256 , 7 + 253 , 6 @ @ public class Function extends Pointer { <nl> return functionName ; <nl> } <nl> <nl> - <nl> public int getCallingConvention ( ) { <nl> return callFlags & MASK _ CC ; <nl> }
diff - - git a / native / Makefile b / native / Makefile <nl> index a5a124a . . f7dbd38 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 176 , 8 + 176 , 12 @ @ STRIP = @ echo <nl> LIBPFX = <nl> LIBSFX = . dll <nl> TESTLIB _ TRUNC = $ ( BUILD ) / testlib - truncated . dll <nl> + ifeq ( $ ( ARCH ) , amd64 ) <nl> + FFI _ CONFIG + = - - host = x86 _ 64 - w64 - mingw32 <nl> + endif <nl> <nl> ifeq ( $ ( USE _ MSVC ) , true ) <nl> + # MS compiler <nl> CC = $ ( FFI _ SRC ) / msvcc . sh <nl> COPT = <nl> CPP = cl - nologo - EP <nl> @ @ - 187 , 39 + 191 , 37 @ @ LIBS = psapi . lib <nl> ARSFX = . lib <nl> ifeq ( $ ( ARCH ) , amd64 ) <nl> CC + = - m64 <nl> - FFI _ CONFIG + = - - host = x86 _ 64 - w64 - mingw32 <nl> endif <nl> FFI _ CONFIG + = & & rm - f include / ffitarget . h & & cp $ ( FFI _ SRC ) / include / * . h $ ( FFI _ SRC ) / src / x86 / ffitarget . h include <nl> FFI _ ENV + = LD = " $ ( LD ) " CPP = " $ ( CPP ) " CXXCPP = " $ ( CPP ) " <nl> EXTRAOBJS + = $ ( DLLCB ) <nl> + <nl> else <nl> + # Mingw compiler <nl> + LDFLAGS = - o $ @ - shared <nl> + FFI _ ENV + = CXXCPP = " $ ( CPP ) " <nl> + <nl> + ifneq ( $ ( ARCH ) , amd64 ) <nl> MINGW _ PREFIX ? = i686 - pc - mingw32 - <nl> CC = $ ( MINGW _ PREFIX ) gcc <nl> CPP = $ ( MINGW _ PREFIX ) gcc - E <nl> - LDFLAGS = - o $ @ - shared - Wl , - - add - stdcall - alias <nl> + LDFLAGS + = - Wl , - - add - stdcall - alias <nl> LIBS = - lpsapi <nl> - FFI _ ENV + = CXXCPP = " $ ( CPP ) " <nl> - endif <nl> - <nl> - ifeq ( $ ( ARCH ) , amd64 ) <nl> - # Set USE _ MSVC false to enable mingw64 cross compiler ; ensure $ ( MINGW ) is in <nl> - # PATH . Should build properly as of 111121 , but lacks SEH , so MSVC build is <nl> - # preferred <nl> + else <nl> + # mingw64 lacks SEH , so MSVC build is preferred <nl> MINGW _ PREFIX ? = x86 _ 64 - w64 - mingw32 - <nl> MINGW = $ ( MINGW _ PREFIX ) gcc <nl> - # Need windres from mingw distribution , even if building with MSVC <nl> - WINDRES = $ ( MINGW _ PREFIX ) windres <nl> - <nl> - ifneq ( $ ( USE _ MSVC ) , true ) <nl> CC = $ ( MINGW ) <nl> # No SEH under mingw64 , thus no HAVE _ PROTECTION <nl> CDEFINES = - DPSAPI _ VERSION = 1 <nl> LD = $ ( CC ) <nl> - LDFLAGS = - o $ @ - shared <nl> LIBS = - lmingwex - lpsapi - lkernel32 - lmsvcrt <nl> endif <nl> - <nl> endif <nl> + <nl> + # Need windres from mingw distribution , even if building with MSVC <nl> + WINDRES = $ ( MINGW _ PREFIX ) windres <nl> + <nl> endif <nl> <nl> ifeq ( $ ( OS ) , linux ) <nl> diff - - git a / www / WindowsDevelopmentEnvironment . md b / www / WindowsDevelopmentEnvironment . md <nl> index 0cca7e0 . . 518ad96 100644 <nl> - - - a / www / WindowsDevelopmentEnvironment . md <nl> + + + b / www / WindowsDevelopmentEnvironment . md <nl> @ @ - 1 , 33 + 1 , 11 @ @ <nl> # # Setting up a Windows Development Environment <nl> <nl> - 32 - bit Windows <nl> - - - - - - - - - - - - - - - <nl> - <nl> - # # # # Java <nl> - <nl> - Set ` JAVA _ HOME ` to a 32 - bit JDK , eg . ` C : \ Program Files ( x86 ) \ java \ jdk1 . 6 . 0 _ 24 ` . <nl> - <nl> - # # # # Cygwin <nl> - <nl> - Install [ cygwin ] ( http : / / www . cygwin . com / ) . <nl> - <nl> - When installing cygwin , include ssh , git , make , autotools , and mingw32 - g + + . <nl> - Ensure the mingw32 compiler ( i686 - pc - mingw32 - gcc . exe ) is on your path . <nl> - <nl> - 64 - bit Windows <nl> - - - - - - - - - - - - - - - <nl> - <nl> # # # # Java <nl> <nl> - Set ` JAVA _ HOME ` to a 64 - bit JDK , eg . ` C : \ Program Files \ java \ jdk1 . 6 . 0 _ 24 ` . <nl> + For a 32 - bit build , set ` JAVA _ HOME ` to a 32 - bit JDK , eg . ` C : \ Program Files ( x86 ) \ java \ jdk1 . 6 . 0 _ 24 ` . <nl> + For a 64 - bit build , set ` JAVA _ HOME ` to a 64 - bit JDK , eg . ` C : \ Program Files \ java \ jdk1 . 6 . 0 _ 24 ` . <nl> <nl> - # # # # Cygwin <nl> - <nl> - Install [ cygwin ] ( http : / / www . cygwin . com / ) . <nl> - <nl> - When installing cygwin , include ssh , git , make , autotools , and <nl> - mingw64 - g + + . Ensure the mingw64 compiler ( i686 - pc - mingw64 - gcc . exe ) is on <nl> - your path . <nl> + # # # # Native <nl> <nl> MSVC <nl> - - - - <nl> @ @ - 39 , 7 + 17 , 7 @ @ native bits if MSVC is set in the environment . The MS compiler provides <nl> structured event handling ( SEH ) , which allows JNA to trap native faults when <nl> run in protected mode . <nl> <nl> - On 64 - bit windows , you will still need to install mingw64 - gcc - core in order to <nl> + On 64 - bit windows , you will still need to install mingw64 in order to <nl> compile a small bit of inline assembly . <nl> <nl> To use the MS compiler , ensure that the appropriate 32 - bit or 64 - bit versions <nl> @ @ - 60 , 6 + 38 , 16 @ @ export LIB = " $ ( cygpath - m " $ MSVC " ) / lib / amd64 ; $ ( cygpath - m " $ WSDK _ 64 " ) / lib / x64 " <nl> export LIB = " $ ( cygpath - m " $ MSVC " ) / lib ; $ ( cygpath - m " $ WSDK " ) / lib " <nl> ` ` ` <nl> <nl> + # # # # mingw <nl> + <nl> + Install [ cygwin ] ( http : / / www . cygwin . com / ) . <nl> + <nl> + When installing cygwin , include ssh , git , make , autotools , and mingw { 32 | 64 } - g + + . <nl> + Ensure the mingw compiler ( i686 - pc - mingw32 - gcc . exe or i686 - pc - mingw64 - gcc . exe ) is on your path . <nl> + <nl> + If ` cl . exe ` is found on your % PATH % , you ' ll need to invoke ` ant native <nl> + - DUSE _ MSVC = false ` in order to avoid using the MS compiler . <nl> + <nl> # # # Issues <nl> <nl> # # # # Backslash R Command Not Found
diff - - git a / native / libffi / src / x86 / win32 . S b / native / libffi / src / x86 / win32 . S <nl> index 3680bf5 . . f8fe6bb 100644 <nl> - - - a / native / libffi / src / x86 / win32 . S <nl> + + + b / native / libffi / src / x86 / win32 . S <nl> @ @ - 137 , 6 + 137 , 7 @ @ ca _ jumpdata : <nl> dd offset ca _ retint64 ; ; FFI _ TYPE _ SINT64 <nl> dd offset ca _ epilogue ; ; FFI _ TYPE _ STRUCT <nl> dd offset ca _ retint ; ; FFI _ TYPE _ POINTER <nl> + dd offset ca _ epilogue ; ; FFI _ TYPE _ COMPLEX <nl> dd offset ca _ retstruct1b ; ; FFI _ TYPE _ SMALL _ STRUCT _ 1B <nl> dd offset ca _ retstruct2b ; ; FFI _ TYPE _ SMALL _ STRUCT _ 2B <nl> dd offset ca _ retint ; ; FFI _ TYPE _ SMALL _ STRUCT _ 4B <nl> @ @ - 268 , 6 + 269 , 7 @ @ cs _ jumpdata : <nl> dd offset cs _ retint64 ; ; FFI _ TYPE _ SINT64 <nl> dd offset cs _ retstruct ; ; FFI _ TYPE _ STRUCT <nl> dd offset cs _ retint ; ; FFI _ TYPE _ POINTER <nl> + dd offset cs _ epilogue ; ; FFI _ TYPE _ COMPLEX <nl> dd offset cs _ retsint8 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 1B <nl> dd offset cs _ retsint16 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 2B <nl> dd offset cs _ retint ; ; FFI _ TYPE _ SMALL _ STRUCT _ 4B <nl> @ @ - 377 , 6 + 379 , 7 @ @ cr _ jumpdata : <nl> dd offset cr _ retint64 ; ; FFI _ TYPE _ SINT64 <nl> dd offset cr _ epilogue ; ; FFI _ TYPE _ STRUCT <nl> dd offset cr _ retint ; ; FFI _ TYPE _ POINTER <nl> + dd offset cr _ epilogue ; ; FFI _ TYPE _ COMPLEX <nl> dd offset cr _ retsint8 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 1B <nl> dd offset cr _ retsint16 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 2B <nl> dd offset cr _ retint ; ; FFI _ TYPE _ SMALL _ STRUCT _ 4B <nl> @ @ - 463 , 6 + 466 , 7 @ @ cd _ jumpdata : <nl> dd offset cd _ retint64 ; ; FFI _ TYPE _ SINT64 <nl> dd offset cd _ epilogue ; ; FFI _ TYPE _ STRUCT <nl> dd offset cd _ retint ; ; FFI _ TYPE _ POINTER <nl> + dd offset cd _ epilogue ; ; FFI _ TYPE _ COMPLEX <nl> dd offset cd _ retsint8 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 1B <nl> dd offset cd _ retsint16 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 2B <nl> dd offset cd _ retint ; ; FFI _ TYPE _ SMALL _ STRUCT _ 4B <nl> @ @ - 624 , 6 + 628 , 7 @ @ USCORE _ SYMBOL ( ffi _ call _ win32 ) : <nl> . long 	 . Lretint64 - . Lstore _ table 	 / * FFI _ TYPE _ SINT64 * / <nl> . long 	 . Lretstruct - . Lstore _ table 	 / * FFI _ TYPE _ STRUCT * / <nl> . long 	 . Lretint - . Lstore _ table 	 	 / * FFI _ TYPE _ POINTER * / <nl> + 	 . long 0 / * FFI _ TYPE _ COMPLEX * / <nl> . long 	 . Lretstruct1b - . Lstore _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 1B * / <nl> . long 	 . Lretstruct2b - . Lstore _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 2B * / <nl> . long 	 . Lretstruct4b - . Lstore _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 4B * / <nl> @ @ - 807 , 6 + 812 , 7 @ @ USCORE _ SYMBOL ( ffi _ closure _ SYSV ) : <nl> . long 	 . Lcls _ retllong - . Lcls _ store _ table 	 / * FFI _ TYPE _ SINT64 * / <nl> . long 	 . Lcls _ retstruct - . Lcls _ store _ table 	 / * FFI _ TYPE _ STRUCT * / <nl> . long 	 . Lcls _ retint - . Lcls _ store _ table 	 	 / * FFI _ TYPE _ POINTER * / <nl> + . long 	 0 	 	 / * FFI _ TYPE _ COMPLEX * / <nl> . long 	 . Lcls _ retstruct1 - . Lcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 1B * / <nl> . long 	 . Lcls _ retstruct2 - . Lcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 2B * / <nl> . long 	 . Lcls _ retstruct4 - . Lcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 4B * / <nl> @ @ - 962 , 6 + 968 , 7 @ @ USCORE _ SYMBOL ( ffi _ closure _ raw _ SYSV ) : <nl> . long 	 . Lrcls _ retllong - . Lrcls _ store _ table 	 / * FFI _ TYPE _ SINT64 * / <nl> . long 	 . Lrcls _ retstruct - . Lrcls _ store _ table 	 / * FFI _ TYPE _ STRUCT * / <nl> . long 	 . Lrcls _ retint - . Lrcls _ store _ table 	 / * FFI _ TYPE _ POINTER * / <nl> + . long 	 0 	 / * FFI _ TYPE _ COMPLEX * / <nl> . long 	 . Lrcls _ retstruct1 - . Lrcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 1B * / <nl> . long 	 . Lrcls _ retstruct2 - . Lrcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 2B * / <nl> . long 	 . Lrcls _ retstruct4 - . Lrcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 4B * / <nl> @ @ - 1097 , 6 + 1104 , 7 @ @ USCORE _ SYMBOL ( ffi _ closure _ STDCALL ) : <nl> . long 	 . Lscls _ retllong - . Lscls _ store _ table 	 / * FFI _ TYPE _ SINT64 * / <nl> . long 	 . Lscls _ retstruct - . Lscls _ store _ table 	 / * FFI _ TYPE _ STRUCT * / <nl> . long 	 . Lscls _ retint - . Lscls _ store _ table 	 / * FFI _ TYPE _ POINTER * / <nl> + . long 	 0 	 / * FFI _ TYPE _ COMPLEX * / <nl> . long 	 . Lscls _ retstruct1 - . Lscls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 1B * / <nl> . long 	 . Lscls _ retstruct2 - . Lscls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 2B * / <nl> . long 	 . Lscls _ retstruct4 - . Lscls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 4B * /
diff - - git a / native / Makefile b / native / Makefile <nl> index c7600c6 . . d9aac90 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 190 , 11 + 190 , 11 @ @ CC + = - m64 <nl> FFI _ CONFIG + = - - host = x86 _ 64 - w64 - mingw32 <nl> endif <nl> FFI _ CONFIG + = & & rm - f include / ffitarget . h & & cp $ ( FFI _ SRC ) / include / * . h $ ( FFI _ SRC ) / src / x86 / ffitarget . h include <nl> - FFI _ ENV + = LD = " $ ( LD ) " CPP = " $ ( CPP ) " <nl> + FFI _ ENV + = LD = " $ ( LD ) " CPP = " $ ( CPP ) " CXXCPP = " $ ( CPP ) " <nl> EXTRAOBJS + = $ ( DLLCB ) <nl> else <nl> - PREFIX = i686 - pc - mingw32 - <nl> - CC = $ ( PREFIX ) gcc <nl> + MINGW _ PREFIX ? = i686 - pc - mingw32 - <nl> + CC = $ ( MINGW _ PREFIX ) gcc <nl> LDFLAGS = - o $ @ - shared - Wl , - - add - stdcall - alias <nl> LIBS = - lpsapi <nl> endif <nl> @ @ - 203 , 7 + 203 , 7 @ @ ifeq ( $ ( ARCH ) , amd64 ) <nl> # Undefine USE _ MSVC to enable mingw64 cross compiler ; ensure $ ( MINGW ) is in <nl> # PATH . Should build properly as of 111121 , but lacks SEH , so MSVC build is <nl> # preferred <nl> - MINGW _ PREFIX ? = x86 _ 64 - pc - mingw32 - <nl> + MINGW _ PREFIX ? = x86 _ 64 - w64 - mingw32 - <nl> MINGW = $ ( MINGW _ PREFIX ) gcc <nl> # Need windres from mingw distribution , even if building with MSVC <nl> WINDRES = $ ( MINGW _ PREFIX ) windres <nl> @ @ - 372 , 8 + 372 , 10 @ @ install : <nl> 	 mkdir $ ( INSTALLDIR ) <nl> 	 cp $ ( LIBRARY ) $ ( INSTALLDIR ) <nl> <nl> + ifeq ( $ ( ARCH ) , amd64 ) <nl> $ ( DLLCB ) : dll - callback . c <nl> 	 $ ( MINGW ) - DDEFINE _ CALLBACKS - c $ < $ ( COUT ) <nl> + endif <nl> <nl> $ ( RSRC ) : $ ( BUILD ) / jnidispatch . rc $ ( BUILD ) / $ ( JNA _ JNI _ VERSION ) . stamp <nl> 	 $ ( WINDRES ) - i $ < - o $ @ \ <nl> diff - - git a / native / libffi / src / x86 / ffi . c b / native / libffi / src / x86 / ffi . c <nl> index d16ec5b . . c7b5dbc 100644 <nl> - - - a / native / libffi / src / x86 / ffi . c <nl> + + + b / native / libffi / src / x86 / ffi . c <nl> @ @ - 99 , 12 + 99 , 12 @ @ unsigned int ffi _ prep _ args ( char * stack , extended _ cif * ecif ) <nl> i ! = 0 ; <nl> i - - , p _ arg + = dir , p _ argv + = dir ) <nl> { <nl> + size _ t z = ( * p _ arg ) - > size ; <nl> + <nl> / * Align if necessary * / <nl> if ( ( sizeof ( void * ) - 1 ) & ( size _ t ) argp ) <nl> argp = ( char * ) ALIGN ( argp , sizeof ( void * ) ) ; <nl> <nl> - size _ t z = ( * p _ arg ) - > size ; <nl> - <nl> # ifdef X86 _ WIN64 <nl> if ( z > FFI _ SIZEOF _ ARG <nl> | | ( ( * p _ arg ) - > type = = FFI _ TYPE _ STRUCT <nl> @ @ - 202 , 6 + 202 , 7 @ @ unsigned int ffi _ prep _ args ( char * stack , extended _ cif * ecif ) <nl> on top of stack , so that those can be moved to registers by call - handler . * / <nl> if ( stack _ args _ count > 0 ) <nl> { <nl> + unsigned i ; <nl> if ( dir < 0 & & stack _ args _ count > 1 ) <nl> { <nl> / * Reverse order if iterating arguments backwards * / <nl> @ @ - 210 , 7 + 211 , 6 @ @ unsigned int ffi _ prep _ args ( char * stack , extended _ cif * ecif ) <nl> * ( ffi _ arg * ) p _ stack _ data [ stack _ args _ count - 1 ] = tmp ; <nl> } <nl> <nl> - int i ; <nl> for ( i = 0 ; i < stack _ args _ count ; i + + ) <nl> { <nl> if ( p _ stack _ data [ i ] ! = argp2 ) <nl> @ @ - 572 , 11 + 572 , 12 @ @ ffi _ prep _ incoming _ args ( char * stack , void * * rvalue , void * * avalue , <nl> i < cif - > nargs & & passed _ regs < max _ stack _ count ; <nl> i + + , p _ arg + + ) <nl> { <nl> + size _ t sz = ( * p _ arg ) - > size ; <nl> + <nl> if ( ( * p _ arg ) - > type = = FFI _ TYPE _ FLOAT <nl> | | ( * p _ arg ) - > type = = FFI _ TYPE _ STRUCT ) <nl> continue ; <nl> <nl> - size _ t sz = ( * p _ arg ) - > size ; <nl> if ( sz = = 0 | | sz > FFI _ SIZEOF _ ARG ) <nl> continue ; <nl> <nl> @ @ - 602 , 12 + 603 , 12 @ @ ffi _ prep _ incoming _ args ( char * stack , void * * rvalue , void * * avalue , <nl> i ! = 0 ; <nl> i - - , p _ arg + = dir , p _ argv + = dir ) <nl> { <nl> + size _ t z = ( * p _ arg ) - > size ; <nl> + <nl> / * Align if necessary * / <nl> if ( ( sizeof ( void * ) - 1 ) & ( size _ t ) argp ) <nl> argp = ( char * ) ALIGN ( argp , sizeof ( void * ) ) ; <nl> <nl> - size _ t z = ( * p _ arg ) - > size ; <nl> - <nl> # ifdef X86 _ WIN64 <nl> if ( z > FFI _ SIZEOF _ ARG <nl> | | ( ( * p _ arg ) - > type = = FFI _ TYPE _ STRUCT <nl> @ @ - 858 , 11 + 859 , 12 @ @ ffi _ prep _ args _ raw ( char * stack , extended _ cif * ecif ) <nl> <nl> for ( i = 0 ; i < cif - > nargs & & passed _ regs < = max _ regs ; i + + ) <nl> { <nl> + size _ t sz = cif - > arg _ types [ i ] - > size ; <nl> + <nl> if ( cif - > arg _ types [ i ] - > type = = FFI _ TYPE _ FLOAT <nl> | | cif - > arg _ types [ i ] - > type = = FFI _ TYPE _ STRUCT ) <nl> continue ; <nl> <nl> - size _ t sz = cif - > arg _ types [ i ] - > size ; <nl> if ( sz = = 0 | | sz > FFI _ SIZEOF _ ARG ) <nl> continue ; <nl> <nl> diff - - git a / native / libffi / src / x86 / ffitarget . h b / native / libffi / src / x86 / ffitarget . h <nl> index a236677 . . ff0f718 100644 <nl> - - - a / native / libffi / src / x86 / ffitarget . h <nl> + + + b / native / libffi / src / x86 / ffitarget . h <nl> @ @ - 50 , 7 + 50 , 9 @ @ <nl> # endif <nl> <nl> # define FFI _ TARGET _ SPECIFIC _ STACK _ SPACE _ ALLOCATION <nl> + # ifndef _ MSC _ VER <nl> # define FFI _ TARGET _ HAS _ COMPLEX _ TYPE <nl> + # endif <nl> <nl> / * - - - - Generic type definitions - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * / <nl> <nl> diff - - git a / native / libffi / src / x86 / win64 . S b / native / libffi / src / x86 / win64 . S <nl> index 687f97c . . 3f4981c 100644 <nl> - - - a / native / libffi / src / x86 / win64 . S <nl> + + + b / native / libffi / src / x86 / win64 . S <nl> @ @ - 170 , 7 + 170 , 7 @ @ ret _ uint16 $ : <nl> 	 mov 	 rcx , QWORD PTR RVALUE [ rbp ] <nl> 	 movzx rax , ax <nl> 	 mov 	 QWORD PTR [ rcx ] , rax <nl> - 	 jmp 	 SHORT ret _ void $ <nl> + 	 jmp 	 ret _ void $ ; too far with ' SHORT ' <nl> <nl> ret _ sint16 $ : <nl> 	 cmp 	 DWORD PTR CIF _ FLAGS [ rbp ] , FFI _ TYPE _ SINT16 <nl> @ @ - 179 , 7 + 179 , 7 @ @ ret _ sint16 $ : <nl> 	 mov 	 rcx , QWORD PTR RVALUE [ rbp ] <nl> 	 movsx rax , ax <nl> 	 mov 	 QWORD PTR [ rcx ] , rax <nl> - 	 jmp 	 SHORT ret _ void $ <nl> + 	 jmp 	 ret _ void $ ; too far with ' SHORT ' <nl> <nl> ret _ uint32 $ : <nl> 	 cmp 	 DWORD PTR CIF _ FLAGS [ rbp ] , FFI _ TYPE _ UINT32 <nl> diff - - git a / test / com / sun / jna / win32 / W32StdCallTest . java b / test / com / sun / jna / win32 / W32StdCallTest . java <nl> index 087f3d2 . . 9389de6 100644 <nl> - - - a / test / com / sun / jna / win32 / W32StdCallTest . java <nl> + + + b / test / com / sun / jna / win32 / W32StdCallTest . java <nl> @ @ - 122 , 7 + 122 , 7 @ @ public class W32StdCallTest extends TestCase { <nl> <nl> public void testStdCallReturnStructureByValueArgument ( ) { <nl> TestLibrary . TestStructure . ByValue s = new TestLibrary . TestStructure . ByValue ( ) ; <nl> - assertEquals ( " Wrong value " , s , testlib . returnStructureByValueArgumentStdCall ( s ) ) ; <nl> + assertTrue ( " Wrong struct value " , s . dataEquals ( testlib . returnStructureByValueArgumentStdCall ( s ) ) ) ; <nl> } <nl> <nl> public void testStdCallCallback ( ) { <nl> diff - - git a / www / WindowsDevelopmentEnvironment . md b / www / WindowsDevelopmentEnvironment . md <nl> index 6076cb1 . . 2d237ac 100644 <nl> - - - a / www / WindowsDevelopmentEnvironment . md <nl> + + + b / www / WindowsDevelopmentEnvironment . md <nl> @ @ - 29 , 15 + 29 , 22 @ @ When installing cygwin , include ssh , git , make , autotools , and <nl> mingw64 - gcc - core . Ensure the mingw64 compiler ( i686 - pc - mingw64 - gcc . exe ) is on <nl> your path . <nl> <nl> + MSVC <nl> + - - - - <nl> + <nl> # # # # Visual Studio <nl> <nl> - You can optionally use the free MS Visual Studio C + + Express compiler to compile <nl> - native bits . The MS compiler provides structured event handling ( SEH ) , <nl> - which allows JNA to trap native faults when run in protected mode . <nl> + JNA uses the free MS Visual Studio C + + Express compiler to compile <nl> + native bits if MSVC is set in the environment . The MS compiler provides <nl> + structured event handling ( SEH ) , which allows JNA to trap native faults when <nl> + run in protected mode . <nl> + <nl> + On 64 - bit windows , you will still need to install mingw64 - gcc - core in order to <nl> + compile a small bit of inline assembly . <nl> <nl> - To use the MS compiler , ensure that the 64 - bit versions of <nl> - cl . exe / ml64 . exe / link . exe are in your PATH and that the INCLUDE and LIB <nl> - environment variables are set properly ( as in VCVARS . BAT ) . <nl> + To use the MS compiler , ensure that the appropriate 32 - bit or 64 - bit versions <nl> + of cl . exe / ml . exe / ml64 . exe / link . exe are in your PATH and that the INCLUDE and <nl> + LIB environment variables are set properly ( as in VCVARS . BAT ) . <nl> <nl> Sample configuration setting up INCLUDE / LIB : <nl>
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 36b5da3 . . af9e8a4 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 24 , 6 + 24 , 7 @ @ Features <nl> * [ # 350 ] ( https : / / github . com / twall / jna / pull / 350 ) : Added ` jnacontrib . x11 . api . X . Window . getSubwindows ` - [ @ rm5248 ] ( https : / / github . com / rm5248 ) . <nl> * Improved ` contrib / msoffice ` sample - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * [ # 352 ] ( https : / / github . com / twall / jna / pull / 352 ) : Performance improvements due to reduced locking in ` com . sun . jna . Library $ Handler ` and fewer vararg checks in ` com . sun . jna . Function ` - [ @ Boereck ] ( https : / / github . com / Boereck ) . <nl> + * [ # 353 ] ( https : / / github . com / twall / jna / pull / 353 ) : Performance improvements by improved collaboration between ` com . sun . jna . Library $ Handler ` and ` com . sun . jna . Function ` - [ @ Boereck ] ( https : / / github . com / Boereck ) . <nl> * [ # 357 ] ( https : / / github . com / twall / jna / pull / 357 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . SetSystemTime ` - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) , [ @ thomasjoulin ] ( https : / / github . com / thomasjoulin ) . <nl> * [ # 365 ] ( https : / / github . com / twall / jna / pull / 365 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . GetComputerNameEx ` support - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 368 ] ( https : / / github . com / twall / jna / pull / 368 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . VirtualQueryEx ` , ` com . sun . jna . platform . win32 . WinNT . MEMORY _ BASIC _ INFORMATION ` and ` MEM _ COMMIT ` , ` MEM _ FREE ` , ` MEM _ RESERVE ` , ` MEM _ IMAGE ` , ` MEM _ MAPPED ` , ` MEM _ PRIVATE ` constants - [ @ apsk ] ( https : / / github . com / apsk ) . <nl> diff - - git a / src / com / sun / jna / Function . java b / src / com / sun / jna / Function . java <nl> index 7bcc68c . . 6a58e4d 100644 <nl> - - - a / src / com / sun / jna / Function . java <nl> + + + b / src / com / sun / jna / Function . java <nl> @ @ - 272 , 6 + 272 , 17 @ @ public class Function extends Pointer { <nl> * native result as an Object . <nl> * / <nl> public Object invoke ( Class returnType , Object [ ] inArgs , Map options ) { <nl> + Method invokingMethod = ( Method ) options . get ( OPTION _ INVOKING _ METHOD ) ; <nl> + Class [ ] paramTypes = invokingMethod ! = null ? invokingMethod . getParameterTypes ( ) : null ; <nl> + return invoke ( invokingMethod , paramTypes , returnType , inArgs , options ) ; <nl> + } <nl> + <nl> + / * * Invoke the native function with the given arguments , returning the <nl> + * native result as an Object . This method can be called if invoking method and parameter <nl> + * types are already at hand . When calling { @ link Function # invoke ( Class , Object [ ] , Map ) } , <nl> + * the method has to be in the options under key { @ link Function # OPTION _ INVOKING _ METHOD } . <nl> + * / <nl> + Object invoke ( Method invokingMethod , Class [ ] paramTypes , Class returnType , Object [ ] inArgs , Map options ) { <nl> / / Clone the argument array to obtain a scratch space for modified <nl> / / types / values <nl> Object [ ] args = { } ; <nl> @ @ - 285 , 8 + 296 , 6 @ @ public class Function extends Pointer { <nl> <nl> TypeMapper mapper = <nl> ( TypeMapper ) options . get ( Library . OPTION _ TYPE _ MAPPER ) ; <nl> - Method invokingMethod = ( Method ) options . get ( OPTION _ INVOKING _ METHOD ) ; <nl> - Class [ ] paramTypes = invokingMethod ! = null ? invokingMethod . getParameterTypes ( ) : null ; <nl> boolean allowObjects = Boolean . TRUE . equals ( options . get ( Library . OPTION _ ALLOW _ OBJECTS ) ) ; <nl> boolean isVarArgs = args . length > 0 & & invokingMethod ! = null ? isVarArgs ( invokingMethod ) : false ; <nl> for ( int i = 0 ; i < args . length ; i + + ) { <nl> diff - - git a / src / com / sun / jna / Library . java b / src / com / sun / jna / Library . java <nl> index e4d0f5d . . 4d9e53c 100644 <nl> - - - a / src / com / sun / jna / Library . java <nl> + + + b / src / com / sun / jna / Library . java <nl> @ @ - 167 , 18 + 167 , 20 @ @ public interface Library { <nl> * / <nl> private static final class FunctionInfo { <nl> <nl> - FunctionInfo ( InvocationHandler handler , Function function , boolean isVarArgs , Map options ) { <nl> + FunctionInfo ( InvocationHandler handler , Function function , Class [ ] parameterTypes , boolean isVarArgs , Map options ) { <nl> super ( ) ; <nl> this . handler = handler ; <nl> this . function = function ; <nl> this . isVarArgs = isVarArgs ; <nl> this . options = options ; <nl> + this . parameterTypes = parameterTypes ; <nl> } <nl> <nl> final InvocationHandler handler ; <nl> final Function function ; <nl> final boolean isVarArgs ; <nl> final Map options ; <nl> + final Class [ ] parameterTypes ; <nl> } <nl> <nl> public Object invoke ( Object proxy , Method method , Object [ ] inArgs ) <nl> @ @ - 211 , 14 + 213 , 16 @ @ public interface Library { <nl> handler = invocationMapper . getInvocationHandler ( nativeLibrary , method ) ; <nl> } <nl> Function function = null ; <nl> + Class [ ] parameterTypes = null ; <nl> Map options = null ; <nl> if ( handler = = null ) { <nl> / / Find the function to invoke <nl> function = nativeLibrary . getFunction ( method . getName ( ) , method ) ; <nl> + parameterTypes = method . getParameterTypes ( ) ; <nl> options = new HashMap ( this . options ) ; <nl> options . put ( Function . OPTION _ INVOKING _ METHOD , method ) ; <nl> } <nl> - f = new FunctionInfo ( handler , function , isVarArgs , options ) ; <nl> + f = new FunctionInfo ( handler , function , parameterTypes , isVarArgs , options ) ; <nl> functions . put ( method , f ) ; <nl> } <nl> } <nl> @ @ - 229 , 7 + 233 , 7 @ @ public interface Library { <nl> if ( f . handler ! = null ) { <nl> return f . handler . invoke ( proxy , method , inArgs ) ; <nl> } <nl> - return f . function . invoke ( method . getReturnType ( ) , inArgs , f . options ) ; <nl> + return f . function . invoke ( method , f . parameterTypes , method . getReturnType ( ) , inArgs , f . options ) ; <nl> } <nl> } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 9dcb9d8 . . 6a90102 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 48 , 6 + 48 , 7 @ @ Features <nl> * [ # 434 ] ( https : / / github . com / twall / jna / pull / 434 ) : Added GetEnvironmentStrings to ' com . sun . jna . platform . win32 . Kernel32 ' - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * Loosen OSGI OS name matching to accommodate Windows 8 family - Niels Bertram . <nl> * [ # 436 ] ( https : / / github . com / twall / jna / pull / 469 ) : Added basic Pdh API implementation to ' com . sun . jna . platform . win32 ' - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 451 ] ( https : / / github . com / twall / jna / pull / 451 ) : Add VARIANT support for CHAR and BYTE - [ @ mitkola ] ( https : / / github . com / mitkola ) . <nl> * [ # 481 ] ( https : / / github . com / twall / jna / pull / 481 ) : Added volume management functions to ' com . sun . jna . platform . win32 ' - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 483 ] ( https : / / github . com / twall / jna / pull / 483 ) : Found and fixed duplicate method definitions for the same API in ' com . sun . jna . platform . win32 ' - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 485 ] ( https : / / github . com / twall / jna / pull / 485 ) : Implemented Comparable interface for many of the base types in ' com . sun . jna . platform . win32 . WinDef ' - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) .
diff - - git a / lib / native / linux - x86 - 64 . jar b / lib / native / linux - x86 - 64 . jar <nl> index 3081e6b . . 74c7d0a 100644 <nl> Binary files a / lib / native / linux - x86 - 64 . jar and b / lib / native / linux - x86 - 64 . jar differ <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index bb91833 . . 3d59fcb 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 43 , 7 + 43 , 8 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> / / not attached , and the JVM never unmaps the defunct native thread . In <nl> / / order to avoid this situation causing tests to time out , we need to <nl> / / explicitly detach the native thread after our Java code is done with it . <nl> - private static final boolean THREAD _ DETACH _ BUG = Platform . isMac ( ) ; <nl> + / / Also reproducible on Ubuntu 6 ( x86 - 64 ) , Java 6 <nl> + private static final boolean THREAD _ DETACH _ BUG = Platform . isMac ( ) | | ( Platform . isLinux ( ) & & Platform . is64Bit ( ) ) ; <nl> <nl> private static final String UNICODE = " [ \ u0444 ] " ; <nl>
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> index b122249 . . ae436d3 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> @ @ - 16 , 6 + 16 , 7 @ @ import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> import com . sun . jna . TypeMapper ; <nl> + import com . sun . jna . WString ; <nl> import com . sun . jna . platform . win32 . WinBase . SECURITY _ ATTRIBUTES ; <nl> import com . sun . jna . platform . win32 . WinBase . FE _ EXPORT _ FUNC ; <nl> import com . sun . jna . platform . win32 . WinBase . FE _ IMPORT _ FUNC ; <nl> @ @ - 1602 , 7 + 1603 , 7 @ @ public interface Advapi32 extends StdCallLibrary { <nl> 	 * otherwise , none of the descriptor is returned . <nl> 	 * @ return whether the call succeeded <nl> 	 * / <nl> - 	 public boolean GetFileSecurity ( String lpFileName , <nl> + 	 public boolean GetFileSecurity ( WString lpFileName , <nl> 	 	 	 int RequestedInformation , Pointer pointer , int nLength , <nl> 	 	 	 IntByReference lpnLengthNeeded ) ; <nl> <nl> @ @ - 1817 , 7 + 1818 , 7 @ @ public interface Advapi32 extends StdCallLibrary { <nl> 	 * function fails , the return value is zero . To get extended error <nl> 	 * information , call GetLastError . <nl> 	 * / <nl> - 	 public boolean EncryptFile ( String lpFileName ) ; <nl> + 	 public boolean EncryptFile ( WString lpFileName ) ; <nl> <nl> 	 / * * <nl> 	 * Decrypts an encrypted file or directory . <nl> @ @ - 1830 , 7 + 1831 , 7 @ @ public interface Advapi32 extends StdCallLibrary { <nl> 	 * function fails , the return value is zero . To get extended error <nl> 	 * information , call GetLastError . <nl> 	 * / <nl> - 	 public boolean DecryptFile ( String lpFileName , DWORD dwReserved ) ; <nl> + 	 public boolean DecryptFile ( WString lpFileName , DWORD dwReserved ) ; <nl> <nl> 	 / * * <nl> 	 * Retrieves the encryption status of the specified file . <nl> @ @ - 1844 , 7 + 1845 , 7 @ @ public interface Advapi32 extends StdCallLibrary { <nl> 	 * function fails , the return value is zero . To get extended error <nl> 	 * information , call GetLastError . <nl> 	 * / <nl> - 	 public boolean FileEncryptionStatus ( String lpFileName , DWORDByReference lpStatus ) ; <nl> + 	 public boolean FileEncryptionStatus ( WString lpFileName , DWORDByReference lpStatus ) ; <nl> <nl> 	 / * * <nl> 	 * Disables or enables encryption of the specified directory and the files in <nl> @ @ - 1861 , 7 + 1862 , 7 @ @ public interface Advapi32 extends StdCallLibrary { <nl> 	 * function fails , the return value is zero . To get extended error <nl> 	 * information , call GetLastError . <nl> 	 * / <nl> - 	 public boolean EncryptionDisable ( String DirPath , boolean Disable ) ; <nl> + 	 public boolean EncryptionDisable ( WString DirPath , boolean Disable ) ; <nl> <nl> 	 / * * <nl> 	 * Opens an encrypted file in order to backup ( export ) or restore ( import ) the <nl> @ @ - 1883 , 7 + 1884 , 7 @ @ public interface Advapi32 extends StdCallLibrary { <nl> 	 * FormatMessage with the FORMAT _ MESSAGE _ FROM _ SYSTEM flag to get a generic <nl> 	 * text description of the error . <nl> 	 * / <nl> - 	 public int OpenEncryptedFileRaw ( String lpFileName , ULONG ulFlags , <nl> + 	 public int OpenEncryptedFileRaw ( WString lpFileName , ULONG ulFlags , <nl> PointerByReference pvContext ) ; <nl> <nl> 	 / * *
diff - - git a / lib / native / sunos - sparc . jar b / lib / native / sunos - sparc . jar <nl> index 3f45136 . . ad5b678 100644 <nl> Binary files a / lib / native / sunos - sparc . jar and b / lib / native / sunos - sparc . jar differ <nl> diff - - git a / lib / native / sunos - sparcv9 . jar b / lib / native / sunos - sparcv9 . jar <nl> index 8fbf02c . . e7659da 100755 <nl> Binary files a / lib / native / sunos - sparcv9 . jar and b / lib / native / sunos - sparcv9 . jar differ
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java b / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> index cd6b946 . . 8c6217e 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> @ @ - 86 , 8 + 86 , 8 @ @ public class W32Service { <nl> 	 	 	 String command ) { <nl> 	 	 SERVICE _ FAILURE _ ACTIONS . ByReference actionStruct = new SERVICE _ FAILURE _ ACTIONS . ByReference ( ) ; <nl> 	 	 actionStruct . dwResetPeriod = resetPeriod ; <nl> - 	 	 actionStruct . lpRebootMsg = new WString ( rebootMsg ) ; <nl> - 	 	 actionStruct . lpCommand = new WString ( command ) ; <nl> + 	 	 actionStruct . setRebootMessage ( rebootMsg ) ; <nl> + 	 	 actionStruct . setCommand ( command ) ; <nl> 	 	 actionStruct . cActions = actions . size ( ) ; <nl> <nl> 	 	 actionStruct . lpsaActions = new SC _ ACTION . ByReference ( ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java b / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> index dfe5157 . . 1bfbb9b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Winsvc . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ import java . util . Arrays ; <nl> import java . util . List ; <nl> <nl> import com . sun . jna . Memory ; <nl> + import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> import com . sun . jna . WString ; <nl> @ @ - 211 , 6 + 212 , 7 @ @ public interface Winsvc extends StdCallLibrary { <nl> * / <nl> public class SERVICE _ FAILURE _ ACTIONS extends Structure { <nl> public static class ByReference extends SERVICE _ FAILURE _ ACTIONS implements Structure . ByReference { } <nl> + private static final boolean ASCII = Boolean . getBoolean ( " w32 . ascii " ) ; <nl> / * * <nl> * The time after which to reset the failure count to zero if there are no failures , in <nl> * seconds . Specify INFINITE to indicate that this value should never be reset . <nl> @ @ - 228 , 7 + 230 , 7 @ @ public interface Winsvc extends StdCallLibrary { <nl> * Windows Server 2003 and Windows XP : Localized strings are not supported until Windows <nl> * Vista . <nl> * / <nl> - public WString lpRebootMsg ; <nl> + public Pointer lpRebootMsg ; <nl> / * * <nl> * The command line of the process for the CreateProcess function to execute in response to <nl> * the SC _ ACTION _ RUN _ COMMAND service controller action . This process runs under the same <nl> @ @ - 236 , 7 + 238 , 7 @ @ public interface Winsvc extends StdCallLibrary { <nl> * If this value is NULL , the command is unchanged . If the value is an empty string ( " " ) , <nl> * the command is deleted and no program is run when the service fails . <nl> * / <nl> - public WString lpCommand ; <nl> + public Pointer lpCommand ; <nl> / * * <nl> * The number of elements in the lpsaActions array . <nl> * If this value is 0 , but lpsaActions is not NULL , the reset period and array of failure <nl> @ @ - 261 , 6 + 263 , 42 @ @ public interface Winsvc extends StdCallLibrary { <nl> protected List getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " dwResetPeriod " , " lpRebootMsg " , " lpCommand " , " cActions " , " lpsaActions " } ) ; <nl> } <nl> + <nl> + public void setRebootMessage ( String s ) { <nl> + if ( ASCII ) { <nl> + lpRebootMsg = new Memory ( s . length ( ) + 1 ) ; <nl> + lpRebootMsg . setString ( 0 , s ) ; <nl> + } else { <nl> + lpRebootMsg = new Memory ( ( s . length ( ) + 1 ) * Native . WCHAR _ SIZE ) ; <nl> + lpRebootMsg . setWideString ( 0 , s ) ; <nl> + } <nl> + } <nl> + <nl> + public String getRebootMessage ( ) { <nl> + if ( ASCII ) { <nl> + return lpRebootMsg . getString ( 0 ) ; <nl> + } else { <nl> + return lpRebootMsg . getWideString ( 0 ) ; <nl> + } <nl> + } <nl> + <nl> + public void setCommand ( String s ) { <nl> + if ( ASCII ) { <nl> + lpCommand = new Memory ( s . length ( ) + 1 ) ; <nl> + lpCommand . setString ( 0 , s ) ; <nl> + } else { <nl> + lpCommand = new Memory ( ( s . length ( ) + 1 ) * Native . WCHAR _ SIZE ) ; <nl> + lpCommand . setWideString ( 0 , s ) ; <nl> + } <nl> + } <nl> + <nl> + public String getCommand ( ) { <nl> + if ( ASCII ) { <nl> + return lpCommand . getString ( 0 ) ; <nl> + } else { <nl> + return lpCommand . getWideString ( 0 ) ; <nl> + } <nl> + } <nl> } <nl> <nl> / * * <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / W32ServiceTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / W32ServiceTest . java <nl> index 13f8e44 . . 51ce874 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / W32ServiceTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / W32ServiceTest . java <nl> @ @ - 108 , 8 + 108 , 8 @ @ public class W32ServiceTest extends TestCase { <nl> 	 	 service . setFailureActions ( actions , resetPeriod , rebootMsg , command ) ; <nl> <nl> 	 	 SERVICE _ FAILURE _ ACTIONS changedActions = service . getFailureActions ( ) ; <nl> - 	 	 assertEquals ( changedActions . lpRebootMsg . toString ( ) , rebootMsg ) ; <nl> - 	 	 assertEquals ( changedActions . lpCommand . toString ( ) , command ) ; <nl> + 	 	 assertEquals ( changedActions . getRebootMessage ( ) , rebootMsg ) ; <nl> + 	 	 assertEquals ( changedActions . getCommand ( ) , command ) ; <nl> 	 	 assertEquals ( changedActions . dwResetPeriod , resetPeriod ) ; <nl> 	 	 assertEquals ( changedActions . cActions , 4 ) ; <nl> 	 	 SC _ ACTION [ ] actionArray = ( SC _ ACTION [ ] ) changedActions . lpsaActions . toArray ( changedActions . cActions ) ;
diff - - git a / contrib / platform / dump . txt b / contrib / platform / dump . txt <nl> deleted file mode 100755 <nl> index 33f12c5 . . 0000000 <nl> - - - a / contrib / platform / dump . txt <nl> + + + / dev / null <nl> @ @ - 1 , 50 + 0 , 0 @ @ <nl> - 88130000 dwResetPeriod = 5000 decimal <nl> - 34000000 padding ? <nl> - 28cb3d00 lpRebootMsg <nl> - 00000000 lpRebootMsg <nl> - 7ccb3d00 lpCommand <nl> - 00000000 lpCommand <nl> - 04000000 cActions <nl> - 02000000 padding ? <nl> - 08cb3d00 lpsaActions <nl> - 00000000 lpsaActions <nl> - 01000000 action 0 type <nl> - e8030000 action 0 delay <nl> - 02000000 action 1 type <nl> - d0070000 action 1 delay <nl> - 03000000 action 2 type <nl> - b80b0000 action 2 delay <nl> - 00000000 action 3 type <nl> - a00f0000 action 3 delay <nl> - 52006500 Re <nl> - 73007400 st <nl> - 61007200 ar <nl> - 74006900 ti <nl> - 6e006700 ng <nl> - 20007700 w <nl> - 33003200 <nl> - 74006900 <nl> - 6d006500 <nl> - 20006400 <nl> - 75006500 <nl> - 20007400 <nl> - 6f002000 <nl> - 73006500 <nl> - 72007600 <nl> - 69006300 <nl> - 65002000 <nl> - 66006100 <nl> - 69006c00 <nl> - 75007200 <nl> - 65000000 <nl> - 65006300 <nl> - 68006f00 <nl> - 20007700 <nl> - 33003200 <nl> - 74006900 <nl> - 6d006500 <nl> - 20006600 <nl> - 61006900 <nl> - 6c007500 <nl> - 72006500 <nl> - 0000 <nl> \ No newline at end of file
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java b / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> index 62a077b . . 8c43592 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> @ @ - 19 , 6 + 19 , 13 @ @ import com . sun . jna . Memory ; <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> + import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> + import com . sun . jna . platform . win32 . WinNT ; <nl> + import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> + import com . sun . jna . platform . win32 . WinNT . HANDLEByReference ; <nl> + import com . sun . jna . platform . win32 . WinNT . LUID ; <nl> + import com . sun . jna . platform . win32 . WinNT . LUID _ AND _ ATTRIBUTES ; <nl> + import com . sun . jna . platform . win32 . WinNT . TOKEN _ PRIVILEGES ; <nl> import com . sun . jna . platform . win32 . Winsvc . SC _ ACTION ; <nl> import com . sun . jna . platform . win32 . Winsvc . SC _ HANDLE ; <nl> import com . sun . jna . platform . win32 . Winsvc . SC _ STATUS _ TYPE ; <nl> @ @ - 57 , 6 + 64 , 18 @ @ public class W32Service { <nl> 	 	 } <nl> 	 } <nl> <nl> + 	 private void addShutdownPrivilegeToProcess ( ) { <nl> + 	 	 HANDLEByReference hToken = new HANDLEByReference ( ) ; <nl> + 	 	 LUID luid = new LUID ( ) ; <nl> + 	 	 Advapi32 . INSTANCE . OpenProcessToken ( Kernel32 . INSTANCE . GetCurrentProcess ( ) , <nl> + 	 	 	 	 WinNT . TOKEN _ ADJUST _ PRIVILEGES , hToken ) ; <nl> + 	 	 Advapi32 . INSTANCE . LookupPrivilegeValue ( " " , WinNT . SE _ SHUTDOWN _ NAME , luid ) ; <nl> + 	 	 TOKEN _ PRIVILEGES tp = new TOKEN _ PRIVILEGES ( 1 ) ; <nl> + 	 	 tp . Privileges [ 0 ] = new LUID _ AND _ ATTRIBUTES ( luid , new DWORD ( WinNT . SE _ PRIVILEGE _ ENABLED ) ) ; <nl> + 	 	 Advapi32 . INSTANCE . AdjustTokenPrivileges ( hToken . getValue ( ) , false , tp , tp . size ( ) , null , <nl> + 	 	 	 	 new IntByReference ( ) ) ; <nl> + 	 } <nl> + <nl> 	 / * * <nl> 	 * Set the failure actions of the specified service . Corresponds to <nl> 	 * < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / ms681988 . aspx " > ChangeServiceConfig2 < / a > <nl> @ @ - 82 , 8 + 101 , 13 @ @ public class W32Service { <nl> <nl> 	 	 actionStruct . lpsaActions = new SC _ ACTION . ByReference ( ) ; <nl> 	 	 SC _ ACTION [ ] actionArray = ( SC _ ACTION [ ] ) actionStruct . lpsaActions . toArray ( actions . size ( ) ) ; <nl> + 	 	 boolean hasShutdownPrivilege = false ; <nl> 	 	 int i = 0 ; <nl> 	 	 for ( SC _ ACTION action : actions ) { <nl> + 	 	 	 if ( ! hasShutdownPrivilege & & action . type = = Winsvc . SC _ ACTION _ REBOOT ) { <nl> + 	 	 	 	 addShutdownPrivilegeToProcess ( ) ; <nl> + 	 	 	 	 hasShutdownPrivilege = true ; <nl> + 	 	 	 } <nl> 	 	 	 actionArray [ i ] . type = action . type ; <nl> 	 	 	 actionArray [ i ] . delay = action . delay ; <nl> 	 	 	 i + + ;
diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index 62987d6 . . bb91833 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 39 , 6 + 39 , 12 @ @ import com . sun . jna . win32 . W32APIOptions ; <nl> / / @ SuppressWarnings ( " unused " ) <nl> public class CallbacksTest extends TestCase implements Paths { <nl> <nl> + / / On OSX , on Oracle JVM 1 . 8 + , pthread cleanup thinks the native thread is <nl> + / / not attached , and the JVM never unmaps the defunct native thread . In <nl> + / / order to avoid this situation causing tests to time out , we need to <nl> + / / explicitly detach the native thread after our Java code is done with it . <nl> + private static final boolean THREAD _ DETACH _ BUG = Platform . isMac ( ) ; <nl> + <nl> private static final String UNICODE = " [ \ u0444 ] " ; <nl> <nl> private static final double DOUBLE _ MAGIC = - 118 . 625d ; <nl> @ @ - 1111 , 6 + 1117 , 9 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> } <nl> <nl> + + called [ 0 ] ; <nl> + if ( THREAD _ DETACH _ BUG & & called [ 0 ] = = 2 ) { <nl> + Native . detach ( true ) ; <nl> + } <nl> } <nl> } ; <nl> callThreadedCallback ( cb , init , 2 , 2000 , called , 1 ) ; <nl> @ @ - 1151 , 6 + 1160 , 9 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> public void callback ( ) { <nl> threads . add ( Thread . currentThread ( ) ) ; <nl> + + called [ 0 ] ; <nl> + if ( THREAD _ DETACH _ BUG & & called [ 0 ] = = COUNT ) { <nl> + Native . detach ( true ) ; <nl> + } <nl> } <nl> } ; <nl> callThreadedCallback ( cb , init , COUNT , 100 , called ) ;
diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index 641def1 . . 62987d6 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 46 , 10 + 46 , 10 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> <nl> private static final int THREAD _ TIMEOUT = 5000 ; <nl> <nl> - protected void waitFor ( Thread t ) { <nl> + protected void waitFor ( Thread thread ) { <nl> long start = System . currentTimeMillis ( ) ; <nl> - 	 while ( t . isAlive ( ) ) { <nl> - 	 Thread . sleep ( 10 ) ; <nl> + 	 while ( thread . isAlive ( ) ) { <nl> + 	 try { Thread . sleep ( 10 ) ; } catch ( InterruptedException e ) { } <nl> 	 if ( System . currentTimeMillis ( ) - start > THREAD _ TIMEOUT ) { <nl> 	 	 fail ( " Timed out waiting for native thread " + thread <nl> + " to detach and terminate " ) ;
diff - - git a / native / callback . c b / native / callback . c <nl> index 3ed9f89 . . 546c50b 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 84 , 11 + 84 , 11 @ @ typedef struct _ tls { <nl> / / Contents set to JNI _ TRUE if thread has terminated and detached properly <nl> int * termination _ flag ; <nl> jboolean jvm _ thread ; <nl> - jboolean detach ; <nl> + jboolean needs _ detach ; <nl> char name [ 256 ] ; <nl> } thread _ storage ; <nl> <nl> - static void callback _ dispatch ( ffi _ cif * , void * , void * * , void * ) ; <nl> + static void dispatch _ callback ( ffi _ cif * , void * , void * * , void * ) ; <nl> static jclass classObject ; <nl> <nl> extern void println ( JNIEnv * , const char * ) ; <nl> @ @ - 99 , 7 + 99 , 7 @ @ extern void println ( JNIEnv * , const char * ) ; <nl> <nl> callback * <nl> create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> - jobjectArray param _ types , jclass return _ type , <nl> + jobjectArray arg _ classes , jclass return _ class , <nl> # ifdef HAS _ ALT _ CALLING _ CONVENTION <nl> callconv _ t calling _ convention , <nl> # else <nl> @ @ - 112 , 7 + 112 , 7 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> callback * cb ; <nl> ffi _ abi abi = FFI _ DEFAULT _ ABI ; <nl> ffi _ abi java _ abi = FFI _ DEFAULT _ ABI ; <nl> - ffi _ type * ffi _ rtype ; <nl> + ffi _ type * return _ type ; <nl> ffi _ status status ; <nl> jsize argc ; <nl> JavaVM * vm ; <nl> @ @ - 124 , 10 + 124 , 10 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> const char * throw _ msg = NULL ; <nl> <nl> if ( ( * env ) - > GetJavaVM ( env , & vm ) ! = JNI _ OK ) { <nl> - throwByName ( env , EUnsatisfiedLink , " Can ' t get Java VM to create native callback " ) ; <nl> + throwByName ( env , EUnsatisfiedLink , " Couldn ' t obtain Java VM reference when creating native callback " ) ; <nl> return NULL ; <nl> } <nl> - argc = ( * env ) - > GetArrayLength ( env , param _ types ) ; <nl> + argc = ( * env ) - > GetArrayLength ( env , arg _ classes ) ; <nl> <nl> cb = ( callback * ) malloc ( sizeof ( callback ) ) ; <nl> cb - > closure = ffi _ closure _ alloc ( sizeof ( ffi _ closure ) , & cb - > x _ closure ) ; <nl> @ @ - 149 , 7 + 149 , 7 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> <nl> for ( i = 0 ; i < argc ; i + + ) { <nl> int jtype ; <nl> - jclass cls = ( * env ) - > GetObjectArrayElement ( env , param _ types , i ) ; <nl> + jclass cls = ( * env ) - > GetObjectArrayElement ( env , arg _ classes , i ) ; <nl> if ( ( cb - > conversion _ flags [ i ] = get _ conversion _ flag ( env , cls ) ) ! = CVT _ DEFAULT ) { <nl> cb - > arg _ classes [ i ] = ( * env ) - > NewWeakGlobalRef ( env , cls ) ; <nl> cvt = 1 ; <nl> @ @ - 158 , 7 + 158 , 7 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> cb - > arg _ classes [ i ] = NULL ; <nl> } <nl> <nl> - jtype = get _ jtype ( env , cls ) ; <nl> + jtype = get _ java _ type ( env , cls ) ; <nl> if ( jtype = = - 1 ) { <nl> snprintf ( msg , sizeof ( msg ) , " Unsupported callback argument at index % d " , i ) ; <nl> throw _ type = EIllegalArgument ; <nl> @ @ - 175 , 7 + 175 , 7 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> | | cb - > conversion _ flags [ i ] = = CVT _ INTEGER _ TYPE ) { <nl> jclass ncls ; <nl> ncls = getNativeType ( env , cls ) ; <nl> - jtype = get _ jtype ( env , ncls ) ; <nl> + jtype = get _ java _ type ( env , ncls ) ; <nl> if ( jtype = = - 1 ) { <nl> snprintf ( msg , sizeof ( msg ) , " Unsupported NativeMapped callback argument native type at argument % d " , i ) ; <nl> throw _ type = EIllegalArgument ; <nl> @ @ - 209 , 11 + 209 , 11 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> cb - > arg _ classes = NULL ; <nl> } <nl> if ( direct ) { <nl> - cb - > rflag = get _ conversion _ flag ( env , return _ type ) ; <nl> + cb - > rflag = get _ conversion _ flag ( env , return _ class ) ; <nl> if ( cb - > rflag = = CVT _ NATIVE _ MAPPED <nl> | | cb - > rflag = = CVT _ INTEGER _ TYPE <nl> | | cb - > rflag = = CVT _ POINTER _ TYPE ) { <nl> - return _ type = getNativeType ( env , return _ type ) ; <nl> + return _ class = getNativeType ( env , return _ class ) ; <nl> } <nl> } <nl> <nl> @ @ - 222 , 32 + 222 , 32 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> if ( calling _ convention = = CALLCONV _ STDCALL ) { <nl> abi = FFI _ STDCALL ; <nl> } <nl> - / / Calling into Java on win32 * always * uses stdcall <nl> + / / All JNI entry points on win32 use stdcall <nl> java _ abi = FFI _ STDCALL ; <nl> # endif / / _ WIN32 <nl> <nl> - rtype = get _ jtype ( env , return _ type ) ; <nl> + rtype = get _ java _ type ( env , return _ class ) ; <nl> if ( rtype = = - 1 ) { <nl> throw _ type = EIllegalArgument ; <nl> throw _ msg = " Unsupported callback return type " ; <nl> goto failure _ cleanup ; <nl> } <nl> - ffi _ rtype = get _ ffi _ rtype ( env , return _ type , ( char ) rtype ) ; <nl> - if ( ! ffi _ rtype ) { <nl> + return _ type = get _ ffi _ return _ type ( env , return _ class , ( char ) rtype ) ; <nl> + if ( ! return _ type ) { <nl> throw _ type = EIllegalArgument ; <nl> throw _ msg = " Error in callback return type " ; <nl> goto failure _ cleanup ; <nl> } <nl> - status = ffi _ prep _ cif ( & cb - > cif , abi , argc , ffi _ rtype , cb - > arg _ types ) ; <nl> + status = ffi _ prep _ cif ( & cb - > cif , abi , argc , return _ type , cb - > arg _ types ) ; <nl> if ( ! ffi _ error ( env , " callback setup " , status ) ) { <nl> - ffi _ type * java _ ffi _ rtype = ffi _ rtype ; <nl> + ffi _ type * java _ return _ type = return _ type ; <nl> <nl> if ( cb - > rflag = = CVT _ STRUCTURE _ BYVAL <nl> | | cb - > rflag = = CVT _ NATIVE _ MAPPED <nl> | | cb - > rflag = = CVT _ POINTER _ TYPE <nl> | | cb - > rflag = = CVT _ INTEGER _ TYPE ) { <nl> / / Java method returns a jobject , not a struct <nl> - java _ ffi _ rtype = & ffi _ type _ pointer ; <nl> + java _ return _ type = & ffi _ type _ pointer ; <nl> rtype = ' * ' ; <nl> } <nl> switch ( rtype ) { <nl> @ @ - 263 , 9 + 263 , 9 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> case ' D ' : cb - > fptr _ offset = OFFSETOF ( env , CallDoubleMethod ) ; break ; <nl> default : cb - > fptr _ offset = OFFSETOF ( env , CallObjectMethod ) ; break ; <nl> } <nl> - status = ffi _ prep _ cif _ var ( & cb - > java _ cif , java _ abi , 2 , argc + 3 , java _ ffi _ rtype , cb - > java _ arg _ types ) ; <nl> + status = ffi _ prep _ cif _ var ( & cb - > java _ cif , java _ abi , 2 , argc + 3 , java _ return _ type , cb - > java _ arg _ types ) ; <nl> if ( ! ffi _ error ( env , " callback setup ( 2 ) " , status ) ) { <nl> - ffi _ prep _ closure _ loc ( cb - > closure , & cb - > cif , callback _ dispatch , cb , <nl> + ffi _ prep _ closure _ loc ( cb - > closure , & cb - > cif , dispatch _ callback , cb , <nl> cb - > x _ closure ) ; <nl> # ifdef DLL _ FPTRS <nl> / / Find an available function pointer and assign it <nl> @ @ - 358 , 7 + 358 , 7 @ @ handle _ exception ( JNIEnv * env , jobject cb , jthrowable throwable ) { <nl> } <nl> <nl> static void <nl> - callback _ invoke ( JNIEnv * env , callback * cb , ffi _ cif * cif , void * resp , void * * cbargs ) { <nl> + invoke _ callback ( JNIEnv * env , callback * cb , ffi _ cif * cif , void * resp , void * * cbargs ) { <nl> jobject self ; <nl> void * oldresp = resp ; <nl> <nl> @ @ - 469 , 7 + 469 , 8 @ @ callback _ invoke ( JNIEnv * env , callback * cb , ffi _ cif * cif , void * resp , void * * cbar <nl> case CVT _ CALLBACK : <nl> * ( void * * ) resp = getCallbackAddress ( env , * ( void * * ) resp ) ; <nl> break ; <nl> - default : break ; <nl> + default : <nl> + break ; <nl> } <nl> if ( cb - > conversion _ flags ) { <nl> for ( i = 0 ; i < cif - > nargs ; i + + ) { <nl> @ @ - 481 , 20 + 482 , 20 @ @ callback _ invoke ( JNIEnv * env , callback * cb , ffi _ cif * cif , void * resp , void * * cbar <nl> } <nl> else { <nl> jobject result ; <nl> - jobjectArray array = <nl> + jobjectArray params = <nl> ( * env ) - > NewObjectArray ( env , cif - > nargs , classObject , NULL ) ; <nl> unsigned int i ; <nl> <nl> for ( i = 0 ; i < cif - > nargs ; i + + ) { <nl> jobject arg = new _ object ( env , cb - > arg _ jtypes [ i ] , cbargs [ i ] , JNI _ FALSE ) ; <nl> - ( * env ) - > SetObjectArrayElement ( env , array , i , arg ) ; <nl> + ( * env ) - > SetObjectArrayElement ( env , params , i , arg ) ; <nl> } <nl> - result = ( * env ) - > CallObjectMethod ( env , self , cb - > methodID , array ) ; <nl> + result = ( * env ) - > CallObjectMethod ( env , self , cb - > methodID , params ) ; <nl> if ( ( * env ) - > ExceptionCheck ( env ) ) { <nl> jthrowable throwable = ( * env ) - > ExceptionOccurred ( env ) ; <nl> ( * env ) - > ExceptionClear ( env ) ; <nl> if ( ! handle _ exception ( env , self , throwable ) ) { <nl> - fprintf ( stderr , " JNA : error handling callback exception , continuing \ n " ) ; <nl> + fprintf ( stderr , " JNA : error while handling callback exception , continuing \ n " ) ; <nl> } <nl> if ( cif - > rtype - > type ! = FFI _ TYPE _ VOID ) <nl> memset ( resp , 0 , cif - > rtype - > size ) ; <nl> @ @ - 589 , 12 + 590 , 12 @ @ static void make _ thread _ data _ key ( ) { <nl> <nl> / * * Store the requested detach state for the current thread . * / <nl> void <nl> - JNA _ detach ( JNIEnv * env , jboolean detach , void * termination _ flag ) { <nl> + JNA _ detach ( JNIEnv * env , jboolean needs _ detach , void * termination _ flag ) { <nl> thread _ storage * tls = get _ thread _ storage ( env ) ; <nl> if ( tls ) { <nl> - tls - > detach = detach ; <nl> + tls - > needs _ detach = needs _ detach ; <nl> tls - > termination _ flag = ( int * ) termination _ flag ; <nl> - if ( detach & & tls - > jvm _ thread ) { <nl> + if ( needs _ detach & & tls - > jvm _ thread ) { <nl> throwByName ( env , EIllegalState , " Can not detach from a JVM thread " ) ; <nl> } <nl> } <nl> @ @ - 620 , 12 + 621 , 12 @ @ JNA _ get _ last _ error ( JNIEnv * env ) { <nl> } <nl> <nl> static void <nl> - callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> + dispatch _ callback ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> callback * cb = ( ( callback * ) user _ data ) ; <nl> JavaVM * jvm = cb - > vm ; <nl> JNIEnv * env = NULL ; <nl> int was _ attached = ( * jvm ) - > GetEnv ( jvm , ( void * ) & env , JNI _ VERSION _ 1 _ 4 ) = = JNI _ OK ; <nl> - jboolean detach = was _ attached ? JNI _ FALSE : JNI _ TRUE ; <nl> + jboolean needs _ detach = was _ attached ? JNI _ FALSE : JNI _ TRUE ; <nl> thread _ storage * tls = was _ attached ? get _ thread _ storage ( env ) : NULL ; <nl> <nl> if ( ! was _ attached ) { <nl> @ @ - 643 , 7 + 644 , 7 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> options . name = NULL ; <nl> args . group = initializeThread ( cb , & options ) ; <nl> daemon = options . daemon ? JNI _ TRUE : JNI _ FALSE ; <nl> - detach = options . detach ? JNI _ TRUE : JNI _ FALSE ; <nl> + needs _ detach = options . detach ? JNI _ TRUE : JNI _ FALSE ; <nl> args . name = options . name ; <nl> } <nl> if ( daemon ) { <nl> @ @ - 655 , 7 + 656 , 7 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> tls = get _ thread _ storage ( env ) ; <nl> if ( tls ) { <nl> snprintf ( tls - > name , sizeof ( tls - > name ) , " % s " , args . name ? args . name : " < unconfigured native thread > " ) ; <nl> - tls - > detach = detach ; <nl> + tls - > needs _ detach = needs _ detach ; <nl> tls - > jvm _ thread = JNI _ FALSE ; <nl> } <nl> / / Dispose of allocated memory <nl> @ @ - 680 , 13 + 681 , 13 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> fprintf ( stderr , " JNA : Out of memory : Can ' t allocate local frame \ n " ) ; <nl> } <nl> else { <nl> - callback _ invoke ( env , cb , cif , resp , cbargs ) ; <nl> + invoke _ callback ( env , cb , cif , resp , cbargs ) ; <nl> / / Make note of whether the callback wants to avoid detach <nl> - detach = tls - > detach & & ! tls - > jvm _ thread ; <nl> + needs _ detach = tls - > needs _ detach & & ! tls - > jvm _ thread ; <nl> ( * env ) - > PopLocalFrame ( env , NULL ) ; <nl> } <nl> <nl> - if ( detach ) { <nl> + if ( needs _ detach ) { <nl> if ( ( * jvm ) - > DetachCurrentThread ( jvm ) ! = 0 ) { <nl> fprintf ( stderr , " JNA : could not detach thread \ n " ) ; <nl> } <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 4a5969e . . 5ae034a 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 414 , 8 + 414 , 8 @ @ ffi _ error ( JNIEnv * env , const char * op , ffi _ status status ) { <nl> <nl> / * invoke the real native function * / <nl> static void <nl> - dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray arr , <nl> - ffi _ type * ffi _ return _ type , void * resP ) <nl> + dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray args , <nl> + ffi _ type * return _ type , void * presult ) <nl> { <nl> int i , nargs ; <nl> jvalue * c _ args ; <nl> @ @ - 427 , 8 + 427 , 8 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray arr , <nl> } * array _ elements ; <nl> volatile int array _ count = 0 ; <nl> ffi _ cif cif ; <nl> - ffi _ type * * ffi _ types ; <nl> - void * * ffi _ values ; <nl> + ffi _ type * * arg _ types ; <nl> + void * * arg _ values ; <nl> ffi _ abi abi ; <nl> ffi _ status status ; <nl> char msg [ MSG _ SIZE ] ; <nl> @ @ - 436 , 7 + 436 , 7 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray arr , <nl> const char * volatile throw _ type = NULL ; <nl> const char * volatile throw _ msg = NULL ; <nl> <nl> - nargs = ( * env ) - > GetArrayLength ( env , arr ) ; <nl> + nargs = ( * env ) - > GetArrayLength ( env , args ) ; <nl> <nl> if ( nargs > MAX _ NARGS ) { <nl> snprintf ( msg , sizeof ( msg ) , " Too many arguments ( max % ld ) " , MAX _ NARGS ) ; <nl> @ @ - 447 , 42 + 447 , 42 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray arr , <nl> c _ args = ( jvalue * ) alloca ( nargs * sizeof ( jvalue ) ) ; <nl> array _ elements = ( struct _ array _ elements * ) <nl> alloca ( nargs * sizeof ( struct _ array _ elements ) ) ; <nl> - ffi _ types = ( ffi _ type * * ) alloca ( nargs * sizeof ( ffi _ type * ) ) ; <nl> - ffi _ values = ( void * * ) alloca ( nargs * sizeof ( void * ) ) ; <nl> + arg _ types = ( ffi _ type * * ) alloca ( nargs * sizeof ( ffi _ type * ) ) ; <nl> + arg _ values = ( void * * ) alloca ( nargs * sizeof ( void * ) ) ; <nl> <nl> for ( i = 0 ; i < nargs ; i + + ) { <nl> - jobject arg = ( * env ) - > GetObjectArrayElement ( env , arr , i ) ; <nl> + jobject arg = ( * env ) - > GetObjectArrayElement ( env , args , i ) ; <nl> <nl> if ( arg = = NULL ) { <nl> c _ args [ i ] . l = NULL ; <nl> - ffi _ types [ i ] = & ffi _ type _ pointer ; <nl> - ffi _ values [ i ] = & c _ args [ i ] . l ; <nl> + arg _ types [ i ] = & ffi _ type _ pointer ; <nl> + arg _ values [ i ] = & c _ args [ i ] . l ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , arg , classBoolean ) ) { <nl> c _ args [ i ] . i = ( * env ) - > GetBooleanField ( env , arg , FID _ Boolean _ value ) ; <nl> - ffi _ types [ i ] = & ffi _ type _ sint32 ; <nl> - ffi _ values [ i ] = & c _ args [ i ] . i ; <nl> + arg _ types [ i ] = & ffi _ type _ sint32 ; <nl> + arg _ values [ i ] = & c _ args [ i ] . i ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , arg , classByte ) ) { <nl> c _ args [ i ] . b = ( * env ) - > GetByteField ( env , arg , FID _ Byte _ value ) ; <nl> - ffi _ types [ i ] = & ffi _ type _ sint8 ; <nl> - ffi _ values [ i ] = & c _ args [ i ] . b ; <nl> + arg _ types [ i ] = & ffi _ type _ sint8 ; <nl> + arg _ values [ i ] = & c _ args [ i ] . b ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , arg , classShort ) ) { <nl> c _ args [ i ] . s = ( * env ) - > GetShortField ( env , arg , FID _ Short _ value ) ; <nl> - ffi _ types [ i ] = & ffi _ type _ sint16 ; <nl> - ffi _ values [ i ] = & c _ args [ i ] . s ; <nl> + arg _ types [ i ] = & ffi _ type _ sint16 ; <nl> + arg _ values [ i ] = & c _ args [ i ] . s ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , arg , classCharacter ) ) { <nl> if ( sizeof ( wchar _ t ) = = 2 ) { <nl> c _ args [ i ] . c = ( * env ) - > GetCharField ( env , arg , FID _ Character _ value ) ; <nl> - ffi _ types [ i ] = & ffi _ type _ uint16 ; <nl> - ffi _ values [ i ] = & c _ args [ i ] . c ; <nl> + arg _ types [ i ] = & ffi _ type _ uint16 ; <nl> + arg _ values [ i ] = & c _ args [ i ] . c ; <nl> } <nl> else if ( sizeof ( wchar _ t ) = = 4 ) { <nl> c _ args [ i ] . i = ( * env ) - > GetCharField ( env , arg , FID _ Character _ value ) ; <nl> - ffi _ types [ i ] = & ffi _ type _ uint32 ; <nl> - ffi _ values [ i ] = & c _ args [ i ] . i ; <nl> + arg _ types [ i ] = & ffi _ type _ uint32 ; <nl> + arg _ values [ i ] = & c _ args [ i ] . i ; <nl> } <nl> else { <nl> snprintf ( msg , sizeof ( msg ) , " Unsupported wchar _ t size ( % d ) " , ( int ) sizeof ( wchar _ t ) ) ; <nl> @ @ - 493 , 34 + 493 , 34 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray arr , <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , arg , classInteger ) ) { <nl> c _ args [ i ] . i = ( * env ) - > GetIntField ( env , arg , FID _ Integer _ value ) ; <nl> - ffi _ types [ i ] = & ffi _ type _ sint32 ; <nl> - ffi _ values [ i ] = & c _ args [ i ] . i ; <nl> + arg _ types [ i ] = & ffi _ type _ sint32 ; <nl> + arg _ values [ i ] = & c _ args [ i ] . i ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , arg , classLong ) ) { <nl> c _ args [ i ] . j = ( * env ) - > GetLongField ( env , arg , FID _ Long _ value ) ; <nl> - ffi _ types [ i ] = & ffi _ type _ sint64 ; <nl> - ffi _ values [ i ] = & c _ args [ i ] . j ; <nl> + arg _ types [ i ] = & ffi _ type _ sint64 ; <nl> + arg _ values [ i ] = & c _ args [ i ] . j ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , arg , classFloat ) ) { <nl> c _ args [ i ] . f = ( * env ) - > GetFloatField ( env , arg , FID _ Float _ value ) ; <nl> - ffi _ types [ i ] = & ffi _ type _ float ; <nl> - ffi _ values [ i ] = & c _ args [ i ] . f ; <nl> + arg _ types [ i ] = & ffi _ type _ float ; <nl> + arg _ values [ i ] = & c _ args [ i ] . f ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , arg , classDouble ) ) { <nl> c _ args [ i ] . d = ( * env ) - > GetDoubleField ( env , arg , FID _ Double _ value ) ; <nl> - ffi _ types [ i ] = & ffi _ type _ double ; <nl> - ffi _ values [ i ] = & c _ args [ i ] . d ; <nl> + arg _ types [ i ] = & ffi _ type _ double ; <nl> + arg _ values [ i ] = & c _ args [ i ] . d ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , arg , classPointer ) ) { <nl> c _ args [ i ] . l = getNativeAddress ( env , arg ) ; <nl> - ffi _ types [ i ] = & ffi _ type _ pointer ; <nl> - ffi _ values [ i ] = & c _ args [ i ] . l ; <nl> + arg _ types [ i ] = & ffi _ type _ pointer ; <nl> + arg _ values [ i ] = & c _ args [ i ] . l ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , arg , classStructure ) ) { <nl> c _ args [ i ] . l = getStructureAddress ( env , arg ) ; <nl> - ffi _ types [ i ] = getStructureType ( env , arg ) ; <nl> - ffi _ values [ i ] = c _ args [ i ] . l ; <nl> - if ( ! ffi _ types [ i ] ) { <nl> + arg _ types [ i ] = getStructureType ( env , arg ) ; <nl> + arg _ values [ i ] = c _ args [ i ] . l ; <nl> + if ( ! arg _ types [ i ] ) { <nl> snprintf ( msg , sizeof ( msg ) , <nl> " Structure type info not initialized at argument % d " , i ) ; <nl> throw _ type = EIllegalState ; <nl> @ @ - 531 , 8 + 531 , 8 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray arr , <nl> # ifndef NO _ NIO _ BUFFERS <nl> else if ( ( * env ) - > IsInstanceOf ( env , arg , classBuffer ) ) { <nl> c _ args [ i ] . l = getDirectBufferAddress ( env , arg ) ; <nl> - ffi _ types [ i ] = & ffi _ type _ pointer ; <nl> - ffi _ values [ i ] = & c _ args [ i ] . l ; <nl> + arg _ types [ i ] = & ffi _ type _ pointer ; <nl> + arg _ values [ i ] = & c _ args [ i ] . l ; <nl> if ( c _ args [ i ] . l = = NULL ) { <nl> c _ args [ i ] . l = <nl> getBufferArray ( env , arg , & array _ elements [ array _ count ] . array , <nl> @ @ - 569 , 8 + 569 , 8 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray arr , <nl> goto cleanup ; <nl> } <nl> c _ args [ i ] . l = ptr ; <nl> - ffi _ types [ i ] = & ffi _ type _ pointer ; <nl> - ffi _ values [ i ] = & c _ args [ i ] . l ; <nl> + arg _ types [ i ] = & ffi _ type _ pointer ; <nl> + arg _ values [ i ] = & c _ args [ i ] . l ; <nl> array _ elements [ array _ count ] . array = arg ; <nl> array _ elements [ array _ count ] . elems = ptr ; <nl> array _ elements [ array _ count + + ] . release = release ; <nl> @ @ - 578 , 8 + 578 , 8 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray arr , <nl> else { <nl> / / Anything else , pass directly as a pointer <nl> c _ args [ i ] . l = ( void * ) arg ; <nl> - ffi _ types [ i ] = & ffi _ type _ pointer ; <nl> - ffi _ values [ i ] = & c _ args [ i ] . l ; <nl> + arg _ types [ i ] = & ffi _ type _ pointer ; <nl> + arg _ values [ i ] = & c _ args [ i ] . l ; <nl> } <nl> } <nl> <nl> @ @ - 605 , 13 + 605 , 13 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray arr , <nl> goto cleanup ; <nl> } <nl> <nl> - status = ffi _ prep _ cif ( & cif , abi , nargs , ffi _ return _ type , ffi _ types ) ; <nl> + status = ffi _ prep _ cif ( & cif , abi , nargs , return _ type , arg _ types ) ; <nl> if ( ! ffi _ error ( env , " Native call setup " , status ) ) { <nl> PSTART ( ) ; <nl> if ( ( flags & THROW _ LAST _ ERROR ) ! = 0 ) { <nl> SET _ LAST _ ERROR ( 0 ) ; <nl> } <nl> - ffi _ call ( & cif , FFI _ FN ( func ) , resP , ffi _ values ) ; <nl> + ffi _ call ( & cif , FFI _ FN ( func ) , presult , arg _ values ) ; <nl> { <nl> int err = GET _ LAST _ ERROR ( ) ; <nl> JNA _ set _ last _ error ( env , err ) ; <nl> @ @ - 926 , 7 + 926 , 7 @ @ getNativeString ( JNIEnv * env , jstring s , jboolean wide ) { <nl> <nl> int <nl> get _ conversion _ flag ( JNIEnv * env , jclass cls ) { <nl> - int type = get _ jtype ( env , cls ) ; <nl> + int type = get _ java _ type ( env , cls ) ; <nl> if ( type = = ' s ' ) { <nl> return CVT _ STRUCTURE _ BYVAL ; <nl> } <nl> @ @ - 960 , 7 + 960 , 7 @ @ get _ conversion _ flag ( JNIEnv * env , jclass cls ) { <nl> } <nl> <nl> int <nl> - get _ jtype _ from _ ffi _ type ( ffi _ type * type ) { <nl> + get _ java _ type _ from _ ffi _ type ( ffi _ type * type ) { <nl> switch ( type - > type ) { <nl> / / FIXME aliases ' C ' on * nix ; this will cause problems if anyone <nl> / / ever installs a type mapper for char / Character ( not a common arg type ) <nl> @ @ - 977 , 7 + 977 , 7 @ @ get _ jtype _ from _ ffi _ type ( ffi _ type * type ) { <nl> } <nl> <nl> int <nl> - get _ jtype ( JNIEnv * env , jclass cls ) { <nl> + get _ java _ type ( JNIEnv * env , jclass cls ) { <nl> <nl> if ( ( * env ) - > IsSameObject ( env , classVoid , cls ) <nl> | | ( * env ) - > IsSameObject ( env , classPrimitiveVoid , cls ) ) <nl> @ @ - 1144 , 7 + 1144 , 7 @ @ fromNativeTypeMapped ( JNIEnv * env , jobject from _ native , <nl> ffi _ type * native _ return _ type , <nl> jclass java _ return _ class , <nl> void * result _ storage ) { <nl> - int jtype = get _ jtype _ from _ ffi _ type ( native _ return _ type ) ; <nl> + int jtype = get _ java _ type _ from _ ffi _ type ( native _ return _ type ) ; <nl> jobject value = new _ object ( env , ( char ) jtype , native _ return _ value , JNI _ TRUE ) ; <nl> if ( ! ( * env ) - > ExceptionCheck ( env ) ) { <nl> jobject obj = ( * env ) - > CallStaticObjectMethod ( env , classNative , <nl> @ @ - 1171 , 7 + 1171 , 7 @ @ fromNativeTypeMapped ( JNIEnv * env , jobject from _ native , <nl> <nl> jobject <nl> fromNative ( JNIEnv * env , jclass javaClass , ffi _ type * type , void * resp , jboolean promote ) { <nl> - int jtype = get _ jtype _ from _ ffi _ type ( type ) ; <nl> + int jtype = get _ java _ type _ from _ ffi _ type ( type ) ; <nl> jobject value = new _ object ( env , ( char ) jtype , resp , promote ) ; <nl> if ( ! ( * env ) - > ExceptionCheck ( env ) ) { <nl> return ( * env ) - > CallStaticObjectMethod ( env , classNative , <nl> @ @ - 1206 , 7 + 1206 , 7 @ @ getArrayComponentType ( JNIEnv * env , jobject obj ) { <nl> jclass cls = ( * env ) - > GetObjectClass ( env , obj ) ; <nl> jclass type = ( * env ) - > CallObjectMethod ( env , cls , MID _ Class _ getComponentType ) ; <nl> if ( type ! = NULL ) { <nl> - return ( char ) get _ jtype ( env , type ) ; <nl> + return ( char ) get _ java _ type ( env , type ) ; <nl> } <nl> return 0 ; <nl> } <nl> @ @ - 1457 , 9 + 1457 , 9 @ @ JNA _ init ( JNIEnv * env ) { <nl> <nl> / * * Copy value from the given Java object into the given storage buffer . * / <nl> void <nl> - extract _ value ( JNIEnv * env , jobject value , void * resp , size _ t size , jboolean promote ) { <nl> + extract _ value ( JNIEnv * env , jobject value , void * buffer , size _ t size , jboolean promote ) { <nl> if ( value = = NULL ) { <nl> - * ( void * * ) resp = NULL ; <nl> + * ( void * * ) buffer = NULL ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , value , classVoid ) ) { <nl> / / nothing to do <nl> @ @ - 1467 , 67 + 1467 , 67 @ @ extract _ value ( JNIEnv * env , jobject value , void * resp , size _ t size , jboolean prom <nl> else if ( ( * env ) - > IsInstanceOf ( env , value , classBoolean ) ) { <nl> jboolean b = ( * env ) - > GetBooleanField ( env , value , FID _ Boolean _ value ) ; <nl> if ( promote ) { <nl> - * ( ffi _ arg * ) resp = b ; <nl> + * ( ffi _ arg * ) buffer = b ; <nl> } <nl> else { <nl> - * ( jint * ) resp = b ; <nl> + * ( jint * ) buffer = b ; <nl> } <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , value , classByte ) ) { <nl> jbyte b = ( * env ) - > GetByteField ( env , value , FID _ Byte _ value ) ; <nl> if ( promote ) { <nl> - * ( ffi _ arg * ) resp = b ; <nl> + * ( ffi _ arg * ) buffer = b ; <nl> } <nl> else { <nl> - * ( jbyte * ) resp = b ; <nl> + * ( jbyte * ) buffer = b ; <nl> } <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , value , classShort ) ) { <nl> jshort s = ( * env ) - > GetShortField ( env , value , FID _ Short _ value ) ; <nl> if ( promote ) { <nl> - * ( ffi _ arg * ) resp = s ; <nl> + * ( ffi _ arg * ) buffer = s ; <nl> } <nl> else { <nl> - * ( jshort * ) resp = s ; <nl> + * ( jshort * ) buffer = s ; <nl> } <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , value , classCharacter ) ) { <nl> jchar c = ( * env ) - > GetCharField ( env , value , FID _ Character _ value ) ; <nl> if ( promote ) { <nl> - * ( ffi _ arg * ) resp = c ; <nl> + * ( ffi _ arg * ) buffer = c ; <nl> } <nl> else { <nl> - * ( wchar _ t * ) resp = c ; <nl> + * ( wchar _ t * ) buffer = c ; <nl> } <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , value , classInteger ) ) { <nl> jint i = ( * env ) - > GetIntField ( env , value , FID _ Integer _ value ) ; <nl> if ( promote ) { <nl> - * ( ffi _ arg * ) resp = i ; <nl> + * ( ffi _ arg * ) buffer = i ; <nl> } <nl> else { <nl> - * ( jint * ) resp = i ; <nl> + * ( jint * ) buffer = i ; <nl> } <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , value , classLong ) ) { <nl> - * ( jlong * ) resp = ( * env ) - > GetLongField ( env , value , FID _ Long _ value ) ; <nl> + * ( jlong * ) buffer = ( * env ) - > GetLongField ( env , value , FID _ Long _ value ) ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , value , classFloat ) ) { <nl> - * ( float * ) resp = ( * env ) - > GetFloatField ( env , value , FID _ Float _ value ) ; <nl> + * ( float * ) buffer = ( * env ) - > GetFloatField ( env , value , FID _ Float _ value ) ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , value , classDouble ) ) { <nl> - * ( double * ) resp = ( * env ) - > GetDoubleField ( env , value , FID _ Double _ value ) ; <nl> + * ( double * ) buffer = ( * env ) - > GetDoubleField ( env , value , FID _ Double _ value ) ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , value , classStructure ) ) { <nl> void * ptr = getStructureAddress ( env , value ) ; <nl> - memcpy ( resp , ptr , size ) ; <nl> + memcpy ( buffer , ptr , size ) ; <nl> } <nl> else if ( ( * env ) - > IsInstanceOf ( env , value , classPointer ) ) { <nl> - * ( void * * ) resp = getNativeAddress ( env , value ) ; <nl> + * ( void * * ) buffer = getNativeAddress ( env , value ) ; <nl> } <nl> else { <nl> fprintf ( stderr , " JNA : extract _ value : unrecognized return type , size % d \ n " , ( int ) size ) ; <nl> - memset ( resp , 0 , size ) ; <nl> + memset ( buffer , 0 , size ) ; <nl> throwByName ( env , EError , " Unrecognized return type " ) ; <nl> } <nl> } <nl> @ @ - 1621 , 7 + 1621 , 7 @ @ get _ ffi _ type ( JNIEnv * env , jclass cls , char jtype ) { <nl> / * * Return the FFI type corresponding to the native equivalent of a <nl> callback function ' s return value . * / <nl> ffi _ type * <nl> - get _ ffi _ rtype ( JNIEnv * env , jclass cls , char jtype ) { <nl> + get _ ffi _ return _ type ( JNIEnv * env , jclass cls , char jtype ) { <nl> switch ( jtype ) { <nl> case ' Z ' : <nl> case ' B ' : <nl> @ @ - 1658 , 7 + 1658 , 7 @ @ typedef struct _ method _ data { <nl> native code <nl> * / <nl> static void <nl> - method _ handler ( ffi _ cif * cif , void * volatile resp , void * * argp , void * cdata ) { <nl> + dispatch _ direct ( ffi _ cif * cif , void * volatile resp , void * * argp , void * cdata ) { <nl> JNIEnv * env = ( JNIEnv * ) * ( void * * ) argp [ 0 ] ; <nl> method _ data * data = ( method _ data * ) cdata ; <nl> <nl> @ @ - 1708 , 7 + 1708 , 7 @ @ method _ handler ( ffi _ cif * cif , void * volatile resp , void * * argp , void * cdata ) { <nl> case CVT _ TYPE _ MAPPER : <nl> { <nl> void * valuep = args [ i ] ; <nl> - int jtype = get _ jtype _ from _ ffi _ type ( data - > closure _ cif . arg _ types [ i + 2 ] ) ; <nl> + int jtype = get _ java _ type _ from _ ffi _ type ( data - > closure _ cif . arg _ types [ i + 2 ] ) ; <nl> jobject obj = jtype = = ' * ' <nl> ? * ( void * * ) valuep <nl> : new _ object ( env , ( char ) jtype , valuep , JNI _ FALSE ) ; <nl> @ @ - 2059 , 13 + 2059 , 13 @ @ Java _ com _ sun _ jna _ Native _ createNativeCallback ( JNIEnv * env , <nl> jclass UNUSED ( cls ) , <nl> jobject obj , <nl> jobject method , <nl> - jobjectArray param _ types , <nl> + jobjectArray arg _ types , <nl> jclass return _ type , <nl> jint call _ conv , <nl> jint options , <nl> jstring encoding ) { <nl> callback * cb = <nl> - create _ callback ( env , obj , method , param _ types , return _ type , <nl> + create _ callback ( env , obj , method , arg _ types , return _ type , <nl> call _ conv , options , encoding ) ; <nl> <nl> return A2L ( cb ) ; <nl> @ @ - 3306 , 7 + 3306 , 7 @ @ Java _ com _ sun _ jna _ Native _ registerMethod ( JNIEnv * env , jclass UNUSED ( ncls ) , <nl> } <nl> <nl> closure = ffi _ closure _ alloc ( sizeof ( ffi _ closure ) , & code ) ; <nl> - status = ffi _ prep _ closure _ loc ( closure , closure _ cif , method _ handler , data , code ) ; <nl> + status = ffi _ prep _ closure _ loc ( closure , closure _ cif , dispatch _ direct , data , code ) ; <nl> if ( status ! = FFI _ OK ) { <nl> throwByName ( env , EError , " Native method linkage failed " ) ; <nl> goto cleanup ; <nl> @ @ - 3337 , 10 + 3337 , 10 @ @ Java _ com _ sun _ jna _ Native _ ffi _ 1call ( JNIEnv * UNUSED ( env ) , jclass UNUSED ( cls ) , jlong <nl> } <nl> <nl> JNIEXPORT jlong JNICALL <nl> - Java _ com _ sun _ jna _ Native _ ffi _ 1prep _ 1cif ( JNIEnv * env , jclass UNUSED ( cls ) , jint abi , jint nargs , jlong ffi _ return _ type , jlong ffi _ types ) <nl> + Java _ com _ sun _ jna _ Native _ ffi _ 1prep _ 1cif ( JNIEnv * env , jclass UNUSED ( cls ) , jint abi , jint nargs , jlong return _ type , jlong arg _ types ) <nl> { <nl> ffi _ cif * cif = malloc ( sizeof ( ffi _ cif ) ) ; <nl> - ffi _ status s = ffi _ prep _ cif ( L2A ( cif ) , abi ? abi : FFI _ DEFAULT _ ABI , nargs , L2A ( ffi _ return _ type ) , L2A ( ffi _ types ) ) ; <nl> + ffi _ status s = ffi _ prep _ cif ( L2A ( cif ) , abi ? abi : FFI _ DEFAULT _ ABI , nargs , L2A ( return _ type ) , L2A ( arg _ types ) ) ; <nl> if ( ffi _ error ( env , " ffi _ prep _ cif " , s ) ) { <nl> return 0 ; <nl> } <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index d14d6f5 . . 8686b32 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 179 , 9 + 179 , 9 @ @ typedef struct _ callback { <nl> # define ELastError " com / sun / jna / LastErrorException " <nl> <nl> extern void throwByName ( JNIEnv * env , const char * name , const char * msg ) ; <nl> - extern int get _ jtype ( JNIEnv * , jclass ) ; <nl> + extern int get _ java _ type ( JNIEnv * , jclass ) ; <nl> extern ffi _ type * get _ ffi _ type ( JNIEnv * , jclass , char ) ; <nl> - extern ffi _ type * get _ ffi _ rtype ( JNIEnv * , jclass , char ) ; <nl> + extern ffi _ type * get _ ffi _ return _ type ( JNIEnv * , jclass , char ) ; <nl> extern const char * JNA _ callback _ init ( JNIEnv * ) ; <nl> extern void JNA _ set _ last _ error ( JNIEnv * , int ) ; <nl> extern int JNA _ get _ last _ error ( JNIEnv * ) ;
diff - - git a / build . xml b / build . xml <nl> index 074a07c . . bc90b17 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 1109 , 7 + 1109 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < delete quiet = " true " includeEmptyDirs = " true " > <nl> < fileset dir = " . clover " / > <nl> < fileset dir = " $ { javadoc } " / > <nl> - < fileset dir = " . " includes = " * ~ , * * / * ~ , build . number " / > <nl> + < fileset dir = " . " includes = " * ~ , * * / * ~ , build . number , native / libffi / configure " / > <nl> < / delete > <nl> < subant target = " clean " failonerror = " true " > <nl> < fileset dir = " $ { contrib } " includes = " * / build . xml " / >
diff - - git a / README . md b / README . md <nl> index 0239c56 . . b719167 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> ! [ Java Native Access - JNA ] ( https : / / github . com / twall / jna / raw / master / www / images / jnalogo . jpg " Java Native Access - JNA " ) <nl> <nl> - [ ! [ Build Status ] ( https : / / travis - ci . org / twall / jna . svg ? branch = master ) ] ( https : / / travis - ci . org / twall / jna ) <nl> + [ ! [ Build Status ] ( https : / / travis - ci . org / java - native - access / jna . svg ? branch = master ) ] ( https : / / travis - ci . org / java - native - access / jna ) <nl> <nl> Java Native Access ( JNA ) <nl> = = = = = = = = = = = = = = = = = = = = = = = =
diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index 0fbd857 . . d60fce9 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 868 , 9 + 868 , 11 @ @ public class NativeLibrary { <nl> } <nl> <nl> / / We might be wrong with the multiArchPath above . Raspbian , <nl> - / / the Raspberry Pi flavor of Debian , uses arm - linux - gnuabihf , <nl> - / / for example , since it ' s using the hard - float ABI for armv6 . <nl> - / / Try to get additional library paths from ldconfig instead <nl> + / / the Raspberry Pi flavor of Debian , for example , uses <nl> + / / uses arm - linux - gnuabihf since it ' s using the hard - float <nl> + / / ABI for armv6 . Other distributions might use a different <nl> + / / tuple for the same thing . Query ldconfig to get the additional <nl> + / / library paths it knows about . <nl> if ( Platform . isLinux ( ) ) { <nl> ArrayList < String > ldPaths = getLinuxLdPaths ( ) ; <nl> / / prepend the paths we already have
diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index f67d1a7 . . 74e938d 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 14 , 8 + 14 , 10 @ @ <nl> <nl> package com . sun . jna ; <nl> <nl> + import java . io . BufferedReader ; <nl> import java . io . File ; <nl> import java . io . FilenameFilter ; <nl> + import java . io . InputStreamReader ; <nl> import java . io . IOException ; <nl> import java . lang . ref . WeakReference ; <nl> import java . lang . ref . Reference ; <nl> @ @ - 864 , 6 + 866 , 22 @ @ public class NativeLibrary { <nl> " / lib " , <nl> } ; <nl> } <nl> + <nl> + / / We might be wrong with the multiArchPath above . Raspbian , <nl> + / / the Raspberry Pi flavor of Debian , uses arm - linux - gnuabihf , <nl> + / / for example , since it ' s using the hard - float ABI for armv6 . <nl> + / / Try to get additional library paths from ldconfig instead <nl> + if ( Platform . isLinux ( ) ) { <nl> + ArrayList < String > ldPaths = getLinuxLdPaths ( ) ; <nl> + / / add the paths we already have <nl> + for ( int i = 0 ; i < paths . length ; i + + ) { <nl> + if ( ldPaths . contains ( paths [ i ] ) = = false ) { <nl> + ldPaths . add ( paths [ i ] ) ; <nl> + } <nl> + } <nl> + paths = ldPaths . toArray ( new String [ ldPaths . size ( ) ] ) ; <nl> + } <nl> + <nl> for ( int i = 0 ; i < paths . length ; i + + ) { <nl> File dir = new File ( paths [ i ] ) ; <nl> if ( dir . exists ( ) & & dir . isDirectory ( ) ) { <nl> @ @ - 898 , 4 + 916 , 29 @ @ public class NativeLibrary { <nl> <nl> return cpu + kernel + libc ; <nl> } <nl> + <nl> + / * * <nl> + * Get the library paths from ldconfig cache . Tested against ldconfig 2 . 13 . <nl> + * / <nl> + private static ArrayList < String > getLinuxLdPaths ( ) { <nl> + ArrayList < String > ldPaths = new ArrayList < String > ( ) ; <nl> + try { <nl> + Process process = Runtime . getRuntime ( ) . exec ( " / sbin / ldconfig - p " ) ; <nl> + BufferedReader reader = new BufferedReader ( new InputStreamReader ( process . getInputStream ( ) ) ) ; <nl> + String buffer = " " ; <nl> + while ( ( buffer = reader . readLine ( ) ) ! = null ) { <nl> + int startPath = buffer . indexOf ( " = > " ) ; <nl> + int endPath = buffer . lastIndexOf ( ' / ' ) ; <nl> + if ( startPath ! = - 1 & & endPath ! = - 1 & & startPath < endPath ) { <nl> + String path = buffer . substring ( startPath + 4 , endPath ) ; <nl> + if ( ldPaths . contains ( path ) = = false ) { <nl> + ldPaths . add ( path ) ; <nl> + } <nl> + } <nl> + } <nl> + reader . close ( ) ; <nl> + } catch ( Exception e ) { <nl> + } <nl> + return ldPaths ; <nl> + } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 379d557 . . 44e173a 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 2 , 11 + 2 , 16 @ @ NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and ASL ( see LICENSE ) . <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> - Release 4 . 2 <nl> - = = = = = = = = = = = <nl> + Release 4 . 2 ( Next ) <nl> + = = = = = = = = = = = = = = = = = = <nl> <nl> Features <nl> - - - - - - - - <nl> + * [ # 452 ] ( https : / / github . com / twall / jna / pull / 452 ) : Added Mac OS X System . B library at ` com . sun . jna . platform . mac . SystemB ` including support for ` sysctl ` , ` sysctlbyname ` , ` sysctlnametomib ` , ` mach _ host _ self ` , ` host _ page _ size ` , ` host _ statistics ` and ` host _ statistics64 ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> + * [ # 446 ] ( https : / / github . com / twall / jna / pull / 446 ) : Added ` com . sun . jna . platform . win32 . Advapi32 . GetNamedSecurityInfo ` , ` SetNamedSecurityInfo ` , ` GetSecurityDescriptorLength ` , ` IsValidSecurityDescriptor ` , ` IsValidAcl ` - [ @ amarcionek ] ( https : / / github . com / amarcionek ) . <nl> + * [ # 387 ] ( https : / / github . com / twall / jna / pull / 397 ) : Use of interfaces and annotations to provide easier implementation of COM interfaces ( with ` InvocationHandler ` ) - [ @ dhakehurst ] ( https : / / github . com / dhakehurst ) . <nl> + * [ # 387 ] ( https : / / github . com / twall / jna / pull / 397 ) : Support for COM event callbacks - [ @ dhakehurst ] ( https : / / github . com / dhakehurst ) . <nl> + * [ # 387 ] ( https : / / github . com / twall / jna / pull / 397 ) : Support for COM interface discovery by iteration over ` RunningObjectTable ` - [ @ dhakehurst ] ( https : / / github . com / dhakehurst ) . <nl> * Updated AIX natives and build - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 290 ] ( https : / / github . com / twall / jna / pull / 290 ) : Improved the stacktrace for the exceptions thrown by ` com . sun . jna . Structure ` - [ @ ebourg ] ( https : / / github . com / ebourg ) . <nl> * [ # 332 ] ( https : / / github . com / twall / jna / pull / 332 ) : Added Win32 Monitor Configuration API in ` com . sun . jna . platform . win32 . Dxva2 ` - [ @ msteiger ] ( https : / / github . com / msteiger ) . <nl> @ @ - 15 , 7 + 20 , 7 @ @ Features <nl> * [ # 334 ] ( https : / / github . com / twall / jna / pull / 334 ) : Added ` com . sun . jna . platform . win32 . Shell32 . SHGetKnownFolderPath ` and ` KnownFolders ` GUID constants - [ @ msteiger ] ( https : / / github . com / msteiger ) . <nl> * [ # 338 ] ( https : / / github . com / twall / jna / pull / 338 ) : Added ` com . sun . jna . platform . mac . XAttr ` and ` com . sun . jna . platform . mac . XAttrUtil ` JNA wrapper for ` < sys / xattr . h > ` for Mac OS X - [ @ rednoah ] ( https : / / github . com / rednoah ) . <nl> * [ # 339 ] ( https : / / github . com / twall / jna / pull / 339 ) : Added ` GetWindowPlacement ` , ` SetWindowPlacement ` , ` AdjustWindowRect ` , ` AdjustWindowRectEx ` , ` ExitWindowsEx ` , and ` LockWorkstation ` to ` com . sun . jna . platform . win32 . User32 ` - [ @ Timeroot ] ( https : / / github . com / Timeroot ) . <nl> - * [ # 286 ] ( https : / / github . com / twall / jna / pull / 286 ) : Added in com . sun . jna . platform . win32 . Kernel32 : CreateRemoteThread , WritePocessMemory and ReadProcessMemory - [ @ sstokic - tgm ] ( https : / / github . com / sstokic - tgm ) . <nl> + * [ # 286 ] ( https : / / github . com / twall / jna / pull / 286 ) : Added ` CreateRemoteThread ` , ` WritePocessMemory ` and ` ReadProcessMemory ` to ` com . sun . jna . platform . win32 . Kernel32 ` - [ @ sstokic - tgm ] ( https : / / github . com / sstokic - tgm ) . <nl> * [ # 350 ] ( https : / / github . com / twall / jna / pull / 350 ) : Added ` jnacontrib . x11 . api . X . Window . getSubwindows ` - [ @ rm5248 ] ( https : / / github . com / rm5248 ) . <nl> * Improved ` contrib / msoffice ` sample - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * [ # 352 ] ( https : / / github . com / twall / jna / pull / 352 ) : Performance improvements due to reduced locking in ` com . sun . jna . Library $ Handler ` and fewer vararg checks in ` com . sun . jna . Function ` - [ @ Boereck ] ( https : / / github . com / Boereck ) .
diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 8fdfba9 . . 445a60f 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 1494 , 10 + 1494 , 7 @ @ public final class Native implements Version { <nl> closure _ atypes [ t ] = FFIType . get ( Pointer . class ) . peer ; <nl> break ; <nl> case CVT _ TYPE _ MAPPER : <nl> - if ( type . isPrimitive ( ) ) <nl> - closure _ atypes [ t ] = FFIType . get ( type ) . peer ; <nl> - else <nl> - closure _ atypes [ t ] = FFIType . get ( Pointer . class ) . peer ; <nl> + closure _ atypes [ t ] = FFIType . get ( type . isPrimitive ( ) ? type : Pointer . class ) . peer ; <nl> atypes [ t ] = FFIType . get ( toNative [ t ] . nativeType ( ) ) . peer ; <nl> break ; <nl> case CVT _ DEFAULT :
diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index cfce635 . . 4a5969e 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 1138 , 33 + 1138 , 32 @ @ toNativeTypeMapped ( JNIEnv * env , jobject obj , void * valuep , size _ t size , jobject <nl> } <nl> } <nl> <nl> - static jboolean <nl> - is _ primitive ( JNIEnv * env , jobject converted ) { <nl> - return ( ( * env ) - > IsInstanceOf ( env , converted , classBoolean ) <nl> - | | ( * env ) - > IsInstanceOf ( env , converted , classByte ) <nl> - | | ( * env ) - > IsInstanceOf ( env , converted , classCharacter ) <nl> - | | ( * env ) - > IsInstanceOf ( env , converted , classShort ) <nl> - | | ( * env ) - > IsInstanceOf ( env , converted , classInteger ) <nl> - | | ( * env ) - > IsInstanceOf ( env , converted , classLong ) <nl> - | | ( * env ) - > IsInstanceOf ( env , converted , classFloat ) <nl> - | | ( * env ) - > IsInstanceOf ( env , converted , classDouble ) ) ; <nl> - } <nl> - <nl> static void <nl> - fromNativeTypeMapped ( JNIEnv * env , jobject from _ native , void * resp , ffi _ type * type , jclass java _ return _ class , void * result ) { <nl> - int jtype = get _ jtype _ from _ ffi _ type ( type ) ; <nl> - jobject value = new _ object ( env , ( char ) jtype , resp , JNI _ TRUE ) ; <nl> + fromNativeTypeMapped ( JNIEnv * env , jobject from _ native , <nl> + void * native _ return _ value , <nl> + ffi _ type * native _ return _ type , <nl> + jclass java _ return _ class , <nl> + void * result _ storage ) { <nl> + int jtype = get _ jtype _ from _ ffi _ type ( native _ return _ type ) ; <nl> + jobject value = new _ object ( env , ( char ) jtype , native _ return _ value , JNI _ TRUE ) ; <nl> if ( ! ( * env ) - > ExceptionCheck ( env ) ) { <nl> jobject obj = ( * env ) - > CallStaticObjectMethod ( env , classNative , <nl> MID _ Native _ fromNativeTypeMapped , <nl> from _ native , value , java _ return _ class ) ; <nl> if ( ! ( * env ) - > ExceptionCheck ( env ) ) { <nl> - / / Must extract primitive types <nl> - if ( is _ primitive ( env , obj ) ) { <nl> - extract _ value ( env , obj , result , type - > size , JNI _ TRUE ) ; <nl> + / / Convert objects into primitive types if the return class demands it <nl> + if ( ( * env ) - > IsSameObject ( env , java _ return _ class , classPrimitiveBoolean ) <nl> + | | ( * env ) - > IsSameObject ( env , java _ return _ class , classPrimitiveByte ) <nl> + | | ( * env ) - > IsSameObject ( env , java _ return _ class , classPrimitiveCharacter ) <nl> + | | ( * env ) - > IsSameObject ( env , java _ return _ class , classPrimitiveShort ) <nl> + | | ( * env ) - > IsSameObject ( env , java _ return _ class , classPrimitiveInteger ) <nl> + | | ( * env ) - > IsSameObject ( env , java _ return _ class , classPrimitiveLong ) <nl> + | | ( * env ) - > IsSameObject ( env , java _ return _ class , classPrimitiveFloat ) <nl> + | | ( * env ) - > IsSameObject ( env , java _ return _ class , classPrimitiveDouble ) ) { <nl> + extract _ value ( env , obj , result _ storage , native _ return _ type - > size , JNI _ TRUE ) ; <nl> } <nl> else { <nl> - * ( jobject * ) result = obj ; <nl> + * ( jobject * ) result _ storage = obj ; <nl> } <nl> } <nl> } <nl> @ @ - 1456 , 6 + 1455 , 7 @ @ JNA _ init ( JNIEnv * env ) { <nl> return NULL ; <nl> } <nl> <nl> + / * * Copy value from the given Java object into the given storage buffer . * / <nl> void <nl> extract _ value ( JNIEnv * env , jobject value , void * resp , size _ t size , jboolean promote ) { <nl> if ( value = = NULL ) {
diff - - git a / test / com / sun / jna / DirectTypeMapperTest . java b / test / com / sun / jna / DirectTypeMapperTest . java <nl> index cd79f9e . . 3ec62c1 100644 <nl> - - - a / test / com / sun / jna / DirectTypeMapperTest . java <nl> + + + b / test / com / sun / jna / DirectTypeMapperTest . java <nl> @ @ - 90 , 7 + 90 , 6 @ @ public class DirectTypeMapperTest extends TestCase { <nl> Native . register ( NativeLibrary . getInstance ( " testlib " , options ) ) ; <nl> } <nl> } <nl> - <nl> public void testBooleanToIntArgumentConversion ( ) { <nl> DirectTestLibraryBoolean lib = new DirectTestLibraryBoolean ( ) ; <nl> assertEquals ( " Failed to convert Boolean argument to Int " , <nl> @ @ - 188 , 6 + 187 , 45 @ @ public class DirectTypeMapperTest extends TestCase { <nl> assertEquals ( " Failed to convert int * return to java . awt . Point " , 1234 , p . x ) ; <nl> assertEquals ( " Failed to convert int * return to java . awt . Point " , 5678 , p . y ) ; <nl> } <nl> + public static enum Enumeration { <nl> + STATUS _ 0 ( 0 ) , STATUS _ 1 ( 1 ) , STATUS _ ERROR ( - 1 ) ; <nl> + private final int code ; <nl> + Enumeration ( int code ) { this . code = code ; } <nl> + public int getCode ( ) { return code ; } <nl> + public static Enumeration fromCode ( int code ) { <nl> + switch ( code ) { <nl> + case 0 : return STATUS _ 0 ; <nl> + case 1 : return STATUS _ 1 ; <nl> + default : return STATUS _ ERROR ; <nl> + } <nl> + } <nl> + } <nl> + public static class DirectTypeMappedEnumerationTestLibrary { <nl> + public native Enumeration returnInt32Argument ( Enumeration e ) ; <nl> + static { <nl> + DefaultTypeMapper mapper = new DefaultTypeMapper ( ) ; <nl> + mapper . addTypeConverter ( Enumeration . class , new TypeConverter ( ) { <nl> + public Object toNative ( Object arg , ToNativeContext ctx ) { <nl> + return new Integer ( ( ( Enumeration ) arg ) . getCode ( ) ) ; <nl> + } <nl> + public Object fromNative ( Object value , FromNativeContext context ) { <nl> + return Enumeration . fromCode ( ( ( Integer ) value ) . intValue ( ) ) ; <nl> + } <nl> + public Class nativeType ( ) { <nl> + return Integer . class ; <nl> + } <nl> + } ) ; <nl> + Map options = new HashMap ( ) ; <nl> + options . put ( Library . OPTION _ TYPE _ MAPPER , mapper ) ; <nl> + <nl> + Native . register ( NativeLibrary . getInstance ( " testlib " , options ) ) ; <nl> + } <nl> + } <nl> + public void testEnumerationConversion ( ) { <nl> + DirectTypeMappedEnumerationTestLibrary lib = new DirectTypeMappedEnumerationTestLibrary ( ) ; <nl> + Enumeration e = lib . returnInt32Argument ( Enumeration . STATUS _ 1 ) ; <nl> + assertEquals ( " Failed to convert enumeration " , Enumeration . STATUS _ 1 , e ) ; <nl> + } <nl> <nl> public static void main ( String [ ] args ) { <nl> junit . textui . TestRunner . run ( DirectTypeMapperTest . class ) ; <nl> diff - - git a / test / com / sun / jna / TypeMapperTest . java b / test / com / sun / jna / TypeMapperTest . java <nl> index caa1af3 . . 7a7d190 100644 <nl> - - - a / test / com / sun / jna / TypeMapperTest . java <nl> + + + b / test / com / sun / jna / TypeMapperTest . java <nl> @ @ - 173 , 7 + 173 , 44 @ @ public class TypeMapperTest extends TestCase { <nl> s . read ( ) ; <nl> assertFalse ( " Wrong value read " , s . data ) ; <nl> } <nl> - <nl> + <nl> + public static enum Enumeration { <nl> + STATUS _ 0 ( 0 ) , STATUS _ 1 ( 1 ) , STATUS _ ERROR ( - 1 ) ; <nl> + private final int code ; <nl> + Enumeration ( int code ) { this . code = code ; } <nl> + public int getCode ( ) { return code ; } <nl> + public static Enumeration fromCode ( int code ) { <nl> + switch ( code ) { <nl> + case 0 : return STATUS _ 0 ; <nl> + case 1 : return STATUS _ 1 ; <nl> + default : return STATUS _ ERROR ; <nl> + } <nl> + } <nl> + } <nl> + public static interface EnumerationTestLibrary extends Library { <nl> + Enumeration returnInt32Argument ( Enumeration arg ) ; <nl> + } <nl> + public void testEnumConversion ( ) throws Exception { <nl> + DefaultTypeMapper mapper = new DefaultTypeMapper ( ) ; <nl> + TypeConverter converter = new TypeConverter ( ) { <nl> + public Object toNative ( Object value , ToNativeContext ctx ) { <nl> + return new Integer ( ( ( Enumeration ) value ) . getCode ( ) ) ; <nl> + } <nl> + public Object fromNative ( Object value , FromNativeContext context ) { <nl> + return Enumeration . fromCode ( ( ( Integer ) value ) . intValue ( ) ) ; <nl> + } <nl> + public Class nativeType ( ) { <nl> + return Integer . class ; <nl> + } <nl> + } ; <nl> + mapper . addTypeConverter ( Enumeration . class , converter ) ; <nl> + Map options = new HashMap ( ) ; <nl> + options . put ( Library . OPTION _ TYPE _ MAPPER , mapper ) ; <nl> + EnumerationTestLibrary lib = ( EnumerationTestLibrary ) <nl> + Native . loadLibrary ( " testlib " , EnumerationTestLibrary . class , options ) ; <nl> + assertEquals ( " Enumeration improperly converted " , Enumeration . STATUS _ 1 , lib . returnInt32Argument ( Enumeration . STATUS _ 1 ) ) ; <nl> + } <nl> + <nl> public static void main ( String [ ] args ) { <nl> junit . textui . TestRunner . run ( TypeMapperTest . class ) ; <nl> }
diff - - git a / . travis . yml b / . travis . yml <nl> index 5514fab . . 6f7548d 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 6 , 7 + 6 , 7 @ @ install : <nl> <nl> script : <nl> - ant test <nl> - - ant - f . / contrib / platform / build . xml test <nl> + - ant test - platform <nl> - ant dist <nl> <nl> os :
diff - - git a / . travis . yml b / . travis . yml <nl> index 72fe390 . . 5514fab 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 6 , 7 + 6 , 7 @ @ install : <nl> <nl> script : <nl> - ant test <nl> - - cd contrib / platform ; ant test ; cd . . / . . <nl> + - ant - f . / contrib / platform / build . xml test <nl> - ant dist <nl> <nl> os :
diff - - git a / README . md b / README . md <nl> index e4411ec . . da6bcb9 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 33 , 6 + 33 , 7 @ @ JNA is a mature library with dozens of contributors and hundreds of commercial a <nl> - [ IntelliJ IDEA ] ( http : / / jetbrains . com ) by JetBrains . <nl> - [ NetBeans IDE ] ( http : / / netbeans . org ) . <nl> - [ Athena Backup ] ( http : / / www . athenabackup . com ) by Doug Patriarche . <nl> + - [ FileBot Media Renamer ] ( http : / / www . filebot . net ) by Reinhard Pointner . <nl> - [ USB for Java ] ( https : / / launchpad . net / libusb4j ) by Mario Boikov . <nl> - [ Waffle ] ( https : / / github . com / dblock / waffle ) : Enables SSO on Windows in Java applications , by Daniel Doubrovkine . <nl> - [ leveldb - jna ] ( https : / / github . com / protonail / leveldb - jna ) : Cross - platform JNA based adapter for LevelDB ( used in [ Keylord ] ( http : / / protonail . com / products / keylord ) ) .
diff - - git a / README . md b / README . md <nl> index 654ee87 . . e4411ec 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 35 , 6 + 35 , 7 @ @ JNA is a mature library with dozens of contributors and hundreds of commercial a <nl> - [ Athena Backup ] ( http : / / www . athenabackup . com ) by Doug Patriarche . <nl> - [ USB for Java ] ( https : / / launchpad . net / libusb4j ) by Mario Boikov . <nl> - [ Waffle ] ( https : / / github . com / dblock / waffle ) : Enables SSO on Windows in Java applications , by Daniel Doubrovkine . <nl> + - [ leveldb - jna ] ( https : / / github . com / protonail / leveldb - jna ) : Cross - platform JNA based adapter for LevelDB ( used in [ Keylord ] ( http : / / protonail . com / products / keylord ) ) . <nl> <nl> * Interesting Investigations / Experiments * <nl>
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java <nl> index 081a820 . . 49824b7 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java <nl> @ @ - 71 , 6 + 71 , 8 @ @ public class VariantTest extends TestCase { <nl> <nl> public void testVariantConstructors ( ) { <nl> VARIANT variant = new VARIANT ( ( short ) 1 ) ; <nl> + variant = new VARIANT ( ( byte ) 1 ) ; <nl> + variant = new VARIANT ( ' 1 ' ) ; <nl> variant = new VARIANT ( ( int ) 1 ) ; <nl> variant = new VARIANT ( ( long ) 1 ) ; <nl> variant = new VARIANT ( ( float ) 1 ) ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> index 12f24c1 . . 43efd8f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> @ @ - 194 , 6 + 194 , 15 @ @ public interface Variant { <nl> this . setValue ( VT _ DATE , value ) ; <nl> } <nl> <nl> + public VARIANT ( byte value ) { <nl> + this ( new BYTE ( value ) ) ; <nl> + } <nl> + <nl> + public VARIANT ( BYTE value ) { <nl> + this ( ) ; <nl> + this . setValue ( Variant . VT _ UI1 , value ) ; <nl> + } <nl> + <nl> public VARIANT ( short value ) { <nl> this ( ) ; <nl> this . setValue ( VT _ I2 , new SHORT ( value ) ) ; <nl> @ @ - 259 , 6 + 268 , 9 @ @ public interface Variant { <nl> <nl> public void setValue ( VARTYPE vt , Object value ) { <nl> switch ( vt . intValue ( ) ) { <nl> + case VT _ UI1 : <nl> + this . _ variant . _ _ variant . writeField ( " bVal " , value ) ; <nl> + break ; <nl> case VT _ I2 : <nl> this . _ variant . _ _ variant . writeField ( " iVal " , value ) ; <nl> break ;
diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index aec06fc . . 42af90e 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 946 , 7 + 946 , 7 @ @ public abstract class Structure { <nl> * @ throws IllegalArgumentException when an unsupported field type is <nl> * encountered <nl> * / <nl> - private int calculateSize ( boolean force ) { <nl> + protected int calculateSize ( boolean force ) { <nl> return calculateSize ( force , false ) ; <nl> } <nl>
diff - - git a / CHANGES . md b / CHANGES . md <nl> index c7f497d . . b02926d 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 45 , 6 + 45 , 7 @ @ Features <nl> * [ # 431 ] ( https : / / github . com / twall / jna / pull / 431 ) : Added named pipe API support to ` com . sun . jna . platform . win32 . Kernel32 ` - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 432 ] ( https : / / github . com / twall / jna / pull / 432 ) : Added SetLocalTime definition to ' com . sun . jna . platform . win32 . Kernel32 ' - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 434 ] ( https : / / github . com / twall / jna / pull / 434 ) : Added GetEnvironmentStrings to ' com . sun . jna . platform . win32 . Kernel32 ' - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * Loosen OSGI OS name matching to accommodate Windows 8 family - Niels Bertram . <nl> <nl> Bug Fixes <nl> - - - - - - - - -
diff - - git a / README . md b / README . md <nl> index 241ad4a . . 654ee87 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 131 , 6 + 131 , 7 @ @ Developers <nl> * [ Setting up a Windows Development Environment ] ( https : / / github . com / twall / jna / blob / master / www / WindowsDevelopmentEnvironment . md ) <nl> * [ Setting up an Android Development Environment ] ( https : / / github . com / twall / jna / blob / master / www / AndroidDevelopmentEnvironment . md ) <nl> * [ Setting up a RaspberryPi Development Environment ] ( https : / / github . com / twall / jna / blob / master / www / RaspberryPiDevelopmentEnvironment . md ) <nl> + * [ Setting up a Mac Development Environment ] ( https : / / github . com / twall / jna / blob / master / www / MacDevelopmentEnvironment . md ) <nl> * [ Releasing JNA ] ( https : / / github . com / twall / jna / blob / master / www / ReleasingJNA . md ) <nl> * [ Publishing to Maven Central ] ( https : / / github . com / twall / jna / blob / master / www / PublishingToMavenCentral . md ) <nl> <nl> diff - - git a / www / MacDevelopmentEnvironment . md b / www / MacDevelopmentEnvironment . md <nl> new file mode 100644 <nl> index 0000000 . . 432a1f7 <nl> - - - / dev / null <nl> + + + b / www / MacDevelopmentEnvironment . md <nl> @ @ - 0 , 0 + 1 , 36 @ @ <nl> + Mac Development Environment <nl> + = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> + <nl> + * Xcode - If you only have the Xcode command line tools installed , and not the full Xcode UI , you may see build errors like this : <nl> + <nl> + native : <nl> + [ exec ] xcode - select : error : tool ' xcodebuild ' requires Xcode , but active developer directory ' / Library / Developer / CommandLineTools ' is a command line tools instance <nl> + <nl> + This can be fixed by installing the full Xcode from App Store . Verify your installation by launching Xcode once and running ` xcodebuild ` from the command line . <nl> + <nl> + <nl> + * Various build tools are also required . You can install these using [ brew ] ( http : / / brew . sh ) . <nl> + <nl> + $ brew install autoconf automake libtool <nl> + <nl> + If you are missing these tools , when you build you are likely to see errors like those below : <nl> + <nl> + native : <nl> + [ exec ] Generating configure <nl> + [ exec ] . / autogen . sh : line 2 : exec : autoreconf : not found <nl> + <nl> + or <nl> + <nl> + [ exec ] Can ' t exec " aclocal " : No such file or directory at / usr / local / Cellar / autoconf / 2 . 69 / share / autoconf / Autom4te / FileUtils . pm line 326 . <nl> + [ exec ] autoreconf : failed to run aclocal : No such file or directory <nl> + <nl> + or <nl> + <nl> + [ exec ] configure . ac : 41 : error : possibly undefined macro : AC _ PROG _ LIBTOOL <nl> + <nl> + or <nl> + <nl> + native : <nl> + [ exec ] Configuring libffi ( x86 _ 64 ) <nl> + [ exec ] configure : WARNING : unrecognized options : - - enable - static , - - disable - shared , - - with - pic <nl> + [ exec ] configure : error : cannot find install - sh , install . sh , or shtool in
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8aaaea9 . . da360d6 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 43 , 6 + 43 , 7 @ @ Features <nl> * [ # 425 ] ( https : / / github . com / twall / jna / pull / 425 ) : Add support for PPCLE - [ @ tdaitx ] ( https : / / github . com / tdaix ) . <nl> * [ # 428 ] ( https : / / github . com / twall / jna / pull / 428 ) : Added Wincon . h related functions and definitions to ` com . sun . jna . platform . win32 . Kernel32 ` - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 431 ] ( https : / / github . com / twall / jna / pull / 431 ) : Added named pipe API support to ` com . sun . jna . platform . win32 . Kernel32 ` - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 432 ] ( https : / / github . com / twall / jna / pull / 432 ) : Added SetLocalTime definition to ' com . sun . jna . platform . win32 . Kernel32 ' - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index 09fe3cd . . 5a304c8 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 155 , 35 + 155 , 56 @ @ public interface Kernel32 extends WinNT , Wincon { <nl> * The system time is expressed in Coordinated Universal Time ( UTC ) . <nl> * <nl> * @ param lpSystemTime <nl> - * Pointer to a SYSTEMTIME structure to receive the current <nl> + * Pointer to a { @ link # SYSTEMTIME } structure to receive the current <nl> * system date and time . <nl> + * @ see < A HREF = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / ms724390 ( v = vs . 85 ) . aspx " > GetSystemTime < / A > <nl> + * documentation <nl> * / <nl> - void GetSystemTime ( WinBase . SYSTEMTIME lpSystemTime ) ; <nl> + void GetSystemTime ( SYSTEMTIME lpSystemTime ) ; <nl> <nl> / * * <nl> * The SetSystemTime function modifies the current system date and time . <nl> * The system time is expressed in Coordinated Universal Time ( UTC ) . <nl> * <nl> * @ param lpSystemTime <nl> - * Pointer to a SYSTEMTIME structure holding the new <nl> + * Pointer to a { @ link # SYSTEMTIME } structure holding the new <nl> * system date and time . < B > Note : < / B > The { @ code wDayOfWeek } <nl> * member of the SYSTEMTIME structure is ignored . <nl> * @ return { @ code true } if the function succeeds , { @ code false } otherwise . <nl> - * If the function fails , call GetLastError to get extended error <nl> + * If the function fails , call { @ link # GetLastError ( ) } to get extended error <nl> * information . <nl> + * @ see < A HREF = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / ms724942 ( v = vs . 85 ) . aspx " > SetSystemTime < / A > <nl> + * documentation <nl> * / <nl> - boolean SetSystemTime ( WinBase . SYSTEMTIME lpSystemTime ) ; <nl> + boolean SetSystemTime ( SYSTEMTIME lpSystemTime ) ; <nl> <nl> / * * <nl> * Retrieves the current local date and time . <nl> * <nl> * @ param lpSystemTime <nl> - * A pointer to a SYSTEMTIME structure to receive the current <nl> + * A pointer to a { @ link # SYSTEMTIME } structure to receive the current <nl> * local date and time . <nl> + * @ see < A HREF = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / ms724338 ( v = vs . 85 ) . aspx " > GetLocalTime < / A > <nl> + * documentation <nl> * / <nl> void GetLocalTime ( WinBase . SYSTEMTIME lpSystemTime ) ; <nl> <nl> / * * <nl> + * Sets the current local time and date <nl> + * <nl> + * @ param lpSystemTime <nl> + * Pointer to a { @ link # SYSTEMTIME } structure holding the new <nl> + * system date and time . < B > Note : < / B > The { @ code wDayOfWeek } <nl> + * member of the SYSTEMTIME structure is ignored . <nl> + * @ return { @ code true } if the function succeeds , { @ code false } otherwise . <nl> + * If the function fails , call { @ link # GetLastError ( ) } to get extended error <nl> + * information . <nl> + * @ see < A HREF = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / ms724936 ( v = vs . 85 ) . aspx " > SetLocalTime < / A > <nl> + * documentation <nl> + * / <nl> + boolean SetLocalTime ( SYSTEMTIME lpSystemTime ) ; <nl> + <nl> + / * * <nl> * The GetTickCount function retrieves the number of milliseconds that have <nl> * elapsed since the system was started , up to 49 . 7 days . <nl> * <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index 88dddb0 . . d881bf7 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 101 , 20 + 101 , 73 @ @ public class Kernel32Test extends TestCase { <nl> expected . wHour + + ; <nl> } <nl> <nl> - if ( ! kernel . SetSystemTime ( expected ) ) { <nl> - fail ( " Failed to modify time : error = " + kernel . GetLastError ( ) ) ; <nl> + if ( assertTimeSettingOperationSucceeded ( " SetSystemTime " , kernel . SetSystemTime ( expected ) ) ) { <nl> + WinBase . SYSTEMTIME actual = new WinBase . SYSTEMTIME ( ) ; <nl> + kernel . GetSystemTime ( actual ) ; <nl> + assertEquals ( " Mismatched hour value " , expected . wHour , actual . wHour ) ; <nl> } <nl> - <nl> - WinBase . SYSTEMTIME actual = new WinBase . SYSTEMTIME ( ) ; <nl> - kernel . GetSystemTime ( actual ) ; <nl> - assertEquals ( " Mismatched hour value " , expected . wHour , actual . wHour ) ; <nl> } finally { <nl> - if ( ! kernel . SetSystemTime ( time ) ) { <nl> - fail ( " Failed to restore original time : error = " + kernel . GetLastError ( ) ) ; <nl> + assertTimeSettingOperationSucceeded ( " Restore original system time " , kernel . SetSystemTime ( time ) ) ; <nl> + } <nl> + } <nl> + <nl> + public void testSetLocaltime ( ) { <nl> + Kernel32 kernel = Kernel32 . INSTANCE ; <nl> + WinBase . SYSTEMTIME time = new WinBase . SYSTEMTIME ( ) ; <nl> + kernel . GetLocalTime ( time ) ; <nl> + try { <nl> + WinBase . SYSTEMTIME expected = new WinBase . SYSTEMTIME ( ) ; <nl> + expected . wYear = time . wYear ; <nl> + expected . wMonth = time . wMonth ; <nl> + expected . wDay = time . wDay ; <nl> + expected . wHour = time . wHour ; <nl> + expected . wMinute = time . wMinute ; <nl> + expected . wSecond = time . wSecond ; <nl> + expected . wMilliseconds = time . wMilliseconds ; <nl> + <nl> + if ( expected . wHour > 0 ) { <nl> + expected . wHour - - ; <nl> + } else { <nl> + expected . wHour + + ; <nl> } <nl> + <nl> + if ( assertTimeSettingOperationSucceeded ( " SetLocalTime " , kernel . SetLocalTime ( expected ) ) ) { <nl> + WinBase . SYSTEMTIME actual = new WinBase . SYSTEMTIME ( ) ; <nl> + kernel . GetLocalTime ( actual ) ; <nl> + assertEquals ( " Mismatched hour value " , expected . wHour , actual . wHour ) ; <nl> + } <nl> + } finally { <nl> + assertTimeSettingOperationSucceeded ( " Restore local time " , kernel . SetLocalTime ( time ) ) ; <nl> } <nl> } <nl> <nl> + private static boolean assertTimeSettingOperationSucceeded ( String message , boolean result ) { <nl> + if ( result ) { <nl> + return result ; <nl> + } <nl> + <nl> + int hr = Kernel32 . INSTANCE . GetLastError ( ) ; <nl> + / * <nl> + * Check special error in case the user running the test isn ' t allowed <nl> + * to change the time . This can happen for hosts that are managed <nl> + * by some central administrator using an automated time setting mechanism . <nl> + * In such cases , the user running the tests might not have admin <nl> + * privileges and it may be too much to ask to have them just for running <nl> + * this JNA API test . . . <nl> + * / <nl> + if ( hr = = WinError . ERROR _ PRIVILEGE _ NOT _ HELD ) { <nl> + return false ; / / don ' t fail the test , but signal the failure <nl> + } <nl> + <nl> + if ( hr ! = WinError . ERROR _ SUCCESS ) { <nl> + fail ( message + " failed : hr = " + hr ) ; <nl> + } else { <nl> + fail ( message + " unknown failure reason code " ) ; <nl> + } <nl> + <nl> + return false ; <nl> + } <nl> + <nl> public void testGetLastError ( ) { <nl> Kernel32 kernel = Kernel32 . INSTANCE ; <nl> int ERRCODE = 8 ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index e6846fb . . fffd8df 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 38 , 10 + 38 , 10 @ @ Features <nl> * [ # 400 ] ( https : / / github . com / twall / jna / pull / 400 ) : Added specific constants for request of icon settings in ` com . sun . jna . platform . win32 . WinUser ` - [ @ PAX523 ] ( https : / / github . com / PAX523 ) . <nl> * [ # 400 ] ( https : / / github . com / twall / jna / pull / 400 ) : Added constants for ` GetClassLong ` , ` SendMessageTimeout ` and ` GetIconInfo ` in ` com . sun . jna . platform . win32 . WinUser ` - [ @ PAX523 ] ( https : / / github . com / PAX523 ) . <nl> * [ # 419 ] ( https : / / github . com / twall / jna / pull / 419 ) : Added ` SetupDiOpenDevRegKey ` , ` SetupDiEnumDeviceInfo ` and related constants to ` com . sun . jna . platform . win32 . SetupApi ` - [ @ ChristianSchwarz ] ( https : / / github . com / ChristianSchwarz ) . <nl> - * [ # 421 ] ( https : / / github . com / twall / jna / pull / 421 ) : Added ` XGrabKeyboard ` and ` XUngrabKeyboard ` to ` X11 ` interface . <nl> - * [ # 422 ] ( https : / / github . com / twall / jna / pull / 422 ) : Update libffi to v3 . 2 . 1 . <nl> - * [ # 425 ] ( https : / / github . com / twall / jna / pull / 425 ) : Add support for PPCLE [ @ tdaitx ] ( https : / / github . com / tdaix ) . <nl> - * [ # 428 ] ( https : / / github . com / twall / jna / pull / 428 ) : Added some Wincon . h related functions and definitions <nl> + * [ # 421 ] ( https : / / github . com / twall / jna / pull / 421 ) : Added ` XGrabKeyboard ` and ` XUngrabKeyboard ` to ` X11 ` interface - [ @ pinaf ] ( https : / / github . com / pinaf ) . <nl> + * [ # 422 ] ( https : / / github . com / twall / jna / pull / 422 ) : Update libffi to v3 . 2 . 1 - [ @ tdaitx ] ( https : / / github . com / tdaitx ) . <nl> + * [ # 425 ] ( https : / / github . com / twall / jna / pull / 425 ) : Add support for PPCLE - [ @ tdaitx ] ( https : / / github . com / tdaix ) . <nl> + * [ # 428 ] ( https : / / github . com / twall / jna / pull / 428 ) : Added Wincon . h related functions and definitions to ` com . sun . jna . platform . win32 . Kernel32 ` - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - -
diff - - git a / CHANGES . md b / CHANGES . md <nl> index c17dc14 . . e6846fb 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 41 , 6 + 41 , 7 @ @ Features <nl> * [ # 421 ] ( https : / / github . com / twall / jna / pull / 421 ) : Added ` XGrabKeyboard ` and ` XUngrabKeyboard ` to ` X11 ` interface . <nl> * [ # 422 ] ( https : / / github . com / twall / jna / pull / 422 ) : Update libffi to v3 . 2 . 1 . <nl> * [ # 425 ] ( https : / / github . com / twall / jna / pull / 425 ) : Add support for PPCLE [ @ tdaitx ] ( https : / / github . com / tdaix ) . <nl> + * [ # 428 ] ( https : / / github . com / twall / jna / pull / 428 ) : Added some Wincon . h related functions and definitions <nl> <nl> Bug Fixes <nl> - - - - - - - - -
diff - - git a / www / FrequentlyAskedQuestions . md b / www / FrequentlyAskedQuestions . md <nl> index 24a2cde . . 3902cdc 100644 <nl> - - - a / www / FrequentlyAskedQuestions . md <nl> + + + b / www / FrequentlyAskedQuestions . md <nl> @ @ - 5 , 6 + 5 , 18 @ @ I ' m having trouble generating correct library mappings <nl> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> Make sure you ' ve read [ this page ] ( https : / / github . com / twall / jna / tree / master / www / Mappings . md ) and [ this one ] ( http : / / twall . github . com / jna / 3 . 4 . 0 / javadoc / overview - summary . html # overview _ description ) . Try [ JNAerator ] ( http : / / code . google . com / p / jnaerator / ) . If you find its output too verbose , delete the mappings you don ' t need , or copy out the ones you do need . <nl> <nl> + JNA is missing function XXX in its platform library mappings <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + No , it ' s not , it ' s just waiting for you to add it : ) <nl> + <nl> + public interface MyUser32 extends User32 { <nl> + / / DEFAULT _ OPTIONS is critical for W32 API functions to simplify ASCII / UNICODE details <nl> + MyUser32 INSTANCE = ( MyUser32 ) Native . loadLibrary ( " user32 " , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> + void ThatFunctionYouReallyNeed ( ) ; <nl> + } <nl> + <nl> + That ' s all it takes . If you ' d like to submit the change back to JNA , make sure you provide a change log entry and corresponding test that invokes the function to prove that the mapping works . We don ' t really care what the API actually does , the call can be a very minimal invocation , but should ensure all the parameters are correctly passed and that you get a reasonable return value . <nl> + <nl> Calling ` Native . loadLibrary ( ) ` causes an UnsatisfiedLinkError <nl> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl>
diff - - git a / build . xml b / build . xml <nl> index 61e18b2 . . e91a26d 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 184 , 6 + 184 , 7 @ @ <nl> < os arch = " em64t " / > <nl> < os arch = " sparcv9 " / > <nl> < os arch = " ppc64 " / > <nl> + < os arch = " ppc64le " / > <nl> < os arch = " ia64 " / > <nl> < os arch = " aarch64 " / > <nl> < / or > <nl> @ @ - 214 , 6 + 215 , 9 @ @ <nl> < condition property = " jre . arch " value = " ppc64 " > <nl> < matches pattern = " ( powerpc64 | power64 ) " string = " $ { os . arch } " / > <nl> < / condition > <nl> + < condition property = " jre . arch " value = " ppc64le " > <nl> + < matches pattern = " ( powerpc64le | power64le ) " string = " $ { os . arch } " / > <nl> + < / condition > <nl> < property name = " jre . arch " value = " $ { os . arch } " / > <nl> < condition property = " os . prefix " value = " linux - $ { jre . arch } " > <nl> < os name = " Linux " / > <nl> @ @ - 396 , 6 + 400 , 8 @ @ com / sun / jna / linux - ppc / libjnidispatch . so ; <nl> processor = ppc ; osname = linux , <nl> com / sun / jna / linux - ppc64 / libjnidispatch . so ; <nl> processor = ppc64 ; osname = linux , <nl> + com / sun / jna / linux - ppc64le / libjnidispatch . so ; <nl> + processor = ppc64le ; osname = linux , <nl> com / sun / jna / linux - x86 / libjnidispatch . so ; <nl> processor = x86 ; osname = linux , <nl> com / sun / jna / linux - x86 - 64 / libjnidispatch . so ; <nl> @ @ - 456 , 6 + 462 , 9 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < zipfileset src = " $ { lib . native } / linux - ppc64 . jar " <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / linux - ppc64 " / > <nl> + < zipfileset src = " $ { lib . native } / linux - ppc64le . jar " <nl> + includes = " * jnidispatch * " <nl> + prefix = " com / sun / jna / linux - ppc64le " / > <nl> < zipfileset src = " $ { lib . native } / sunos - x86 . jar " <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / sunos - x86 " / > <nl> @ @ - 586 , 6 + 595 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - ia64 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - ppc . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - ppc64 . jar " overwrite = " true " / > <nl> + < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - ppc64le . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / freebsd - x86 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / freebsd - x86 - 64 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / openbsd - x86 . jar " overwrite = " true " / > <nl> diff - - git a / lib / native / linux - ppc64le . jar b / lib / native / linux - ppc64le . jar <nl> new file mode 100644 <nl> index 0000000 . . b951144 <nl> Binary files / dev / null and b / lib / native / linux - ppc64le . jar differ <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index 3e55a63 . . 49057e0 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 302 , 6 + 302 , 10 @ @ ifeq ( $ ( ARCH ) , ppc64 ) <nl> CC + = - m64 <nl> LD + = - m64 <nl> endif <nl> + ifeq ( $ ( ARCH ) , ppc64le ) <nl> + CC + = - m64 <nl> + LD + = - m64 <nl> + endif <nl> ifeq ( $ ( ARCH ) , ppc ) <nl> CC + = - m32 <nl> LD + = - m32
diff - - git a / native / libffi / doc / libffi . info b / native / libffi / doc / libffi . info <nl> new file mode 100644 <nl> index 0000000 . . b0100b2 <nl> - - - / dev / null <nl> + + + b / native / libffi / doc / libffi . info <nl> @ @ - 0 , 0 + 1 , 766 @ @ <nl> + This is libffi . info , produced by makeinfo version 5 . 2 from libffi . texi . <nl> + <nl> + This manual is for Libffi , a portable foreign - function interface <nl> + library . <nl> + <nl> + Copyright ( C ) 2008 , 2010 , 2011 Red Hat , Inc . <nl> + <nl> + Permission is granted to copy , distribute and / or modify this <nl> + document under the terms of the GNU General Public License as <nl> + published by the Free Software Foundation ; either version 2 , or ( at <nl> + your option ) any later version . A copy of the license is included <nl> + in the section entitled " GNU General Public License " . <nl> + <nl> + INFO - DIR - SECTION Development <nl> + START - INFO - DIR - ENTRY <nl> + * libffi : ( libffi ) . Portable foreign - function interface library . <nl> + END - INFO - DIR - ENTRY <nl> + <nl> +  <nl> + File : libffi . info , Node : Top , Next : Introduction , Up : ( dir ) <nl> + <nl> + libffi <nl> + * * * * * * <nl> + <nl> + This manual is for Libffi , a portable foreign - function interface <nl> + library . <nl> + <nl> + Copyright ( C ) 2008 , 2010 , 2011 Red Hat , Inc . <nl> + <nl> + Permission is granted to copy , distribute and / or modify this <nl> + document under the terms of the GNU General Public License as <nl> + published by the Free Software Foundation ; either version 2 , or ( at <nl> + your option ) any later version . A copy of the license is included <nl> + in the section entitled " GNU General Public License " . <nl> + <nl> + * Menu : <nl> + <nl> + * Introduction : : What is libffi ? <nl> + * Using libffi : : How to use libffi . <nl> + * Missing Features : : Things libffi can ' t do . <nl> + * Index : : Index . <nl> + <nl> +  <nl> + File : libffi . info , Node : Introduction , Next : Using libffi , Prev : Top , Up : Top <nl> + <nl> + 1 What is libffi ? <nl> + * * * * * * * * * * * * * * * * * <nl> + <nl> + Compilers for high level languages generate code that follow certain <nl> + conventions . These conventions are necessary , in part , for separate <nl> + compilation to work . One such convention is the " calling convention " . <nl> + The calling convention is a set of assumptions made by the compiler <nl> + about where function arguments will be found on entry to a function . A <nl> + calling convention also specifies where the return value for a function <nl> + is found . The calling convention is also sometimes called the " ABI " or <nl> + " Application Binary Interface " . <nl> + <nl> + Some programs may not know at the time of compilation what arguments <nl> + are to be passed to a function . For instance , an interpreter may be <nl> + told at run - time about the number and types of arguments used to call a <nl> + given function . ' Libffi ' can be used in such programs to provide a <nl> + bridge from the interpreter program to compiled code . <nl> + <nl> + The ' libffi ' library provides a portable , high level programming <nl> + interface to various calling conventions . This allows a programmer to <nl> + call any function specified by a call interface description at run time . <nl> + <nl> + FFI stands for Foreign Function Interface . A foreign function <nl> + interface is the popular name for the interface that allows code written <nl> + in one language to call code written in another language . The ' libffi ' <nl> + library really only provides the lowest , machine dependent layer of a <nl> + fully featured foreign function interface . A layer must exist above <nl> + ' libffi ' that handles type conversions for values passed between the two <nl> + languages . <nl> + <nl> +  <nl> + File : libffi . info , Node : Using libffi , Next : Missing Features , Prev : Introduction , Up : Top <nl> + <nl> + 2 Using libffi <nl> + * * * * * * * * * * * * * * <nl> + <nl> + * Menu : <nl> + <nl> + * The Basics : : The basic libffi API . <nl> + * Simple Example : : A simple example . <nl> + * Types : : libffi type descriptions . <nl> + * Multiple ABIs : : Different passing styles on one platform . <nl> + * The Closure API : : Writing a generic function . <nl> + * Closure Example : : A closure example . <nl> + <nl> +  <nl> + File : libffi . info , Node : The Basics , Next : Simple Example , Up : Using libffi <nl> + <nl> + 2 . 1 The Basics <nl> + = = = = = = = = = = = = = = <nl> + <nl> + ' Libffi ' assumes that you have a pointer to the function you wish to <nl> + call and that you know the number and types of arguments to pass it , as <nl> + well as the return type of the function . <nl> + <nl> + The first thing you must do is create an ' ffi _ cif ' object that <nl> + matches the signature of the function you wish to call . This is a <nl> + separate step because it is common to make multiple calls using a single <nl> + ' ffi _ cif ' . The " cif " in ' ffi _ cif ' stands for Call InterFace . To <nl> + prepare a call interface object , use the function ' ffi _ prep _ cif ' . <nl> + <nl> + - - Function : ffi _ status ffi _ prep _ cif ( ffi _ cif * CIF , ffi _ abi ABI , <nl> + unsigned int NARGS , ffi _ type * RTYPE , ffi _ type * * ARGTYPES ) <nl> + This initializes CIF according to the given parameters . <nl> + <nl> + ABI is the ABI to use ; normally ' FFI _ DEFAULT _ ABI ' is what you want . <nl> + * note Multiple ABIs : : for more information . <nl> + <nl> + NARGS is the number of arguments that this function accepts . <nl> + <nl> + RTYPE is a pointer to an ' ffi _ type ' structure that describes the <nl> + return type of the function . * Note Types : : . <nl> + <nl> + ARGTYPES is a vector of ' ffi _ type ' pointers . ARGTYPES must have <nl> + NARGS elements . If NARGS is 0 , this argument is ignored . <nl> + <nl> + ' ffi _ prep _ cif ' returns a ' libffi ' status code , of type <nl> + ' ffi _ status ' . This will be either ' FFI _ OK ' if everything worked <nl> + properly ; ' FFI _ BAD _ TYPEDEF ' if one of the ' ffi _ type ' objects is <nl> + incorrect ; or ' FFI _ BAD _ ABI ' if the ABI parameter is invalid . <nl> + <nl> + If the function being called is variadic ( varargs ) then <nl> + ' ffi _ prep _ cif _ var ' must be used instead of ' ffi _ prep _ cif ' . <nl> + <nl> + - - Function : ffi _ status ffi _ prep _ cif _ var ( ffi _ cif * CIF , ffi _ abi varabi , <nl> + unsigned int NFIXEDARGS , unsigned int varntotalargs , ffi _ type <nl> + * RTYPE , ffi _ type * * ARGTYPES ) <nl> + This initializes CIF according to the given parameters for a call <nl> + to a variadic function . In general it ' s operation is the same as <nl> + for ' ffi _ prep _ cif ' except that : <nl> + <nl> + NFIXEDARGS is the number of fixed arguments , prior to any variadic <nl> + arguments . It must be greater than zero . <nl> + <nl> + NTOTALARGS the total number of arguments , including variadic and <nl> + fixed arguments . <nl> + <nl> + Note that , different cif ' s must be prepped for calls to the same <nl> + function when different numbers of arguments are passed . <nl> + <nl> + Also note that a call to ' ffi _ prep _ cif _ var ' with <nl> + NFIXEDARGS = NOTOTALARGS is NOT equivalent to a call to <nl> + ' ffi _ prep _ cif ' . <nl> + <nl> + To call a function using an initialized ' ffi _ cif ' , use the ' ffi _ call ' <nl> + function : <nl> + <nl> + - - Function : void ffi _ call ( ffi _ cif * CIF , void * FN , void * RVALUE , void <nl> + * * AVALUES ) <nl> + This calls the function FN according to the description given in <nl> + CIF . CIF must have already been prepared using ' ffi _ prep _ cif ' . <nl> + <nl> + RVALUE is a pointer to a chunk of memory that will hold the result <nl> + of the function call . This must be large enough to hold the <nl> + result , no smaller than the system register size ( generally 32 or <nl> + 64 bits ) , and must be suitably aligned ; it is the caller ' s <nl> + responsibility to ensure this . If CIF declares that the function <nl> + returns ' void ' ( using ' ffi _ type _ void ' ) , then RVALUE is ignored . <nl> + <nl> + AVALUES is a vector of ' void * ' pointers that point to the memory <nl> + locations holding the argument values for a call . If CIF declares <nl> + that the function has no arguments ( i . e . , NARGS was 0 ) , then <nl> + AVALUES is ignored . Note that argument values may be modified by <nl> + the callee ( for instance , structs passed by value ) ; the burden of <nl> + copying pass - by - value arguments is placed on the caller . <nl> + <nl> +  <nl> + File : libffi . info , Node : Simple Example , Next : Types , Prev : The Basics , Up : Using libffi <nl> + <nl> + 2 . 2 Simple Example <nl> + = = = = = = = = = = = = = = = = = = <nl> + <nl> + Here is a trivial example that calls ' puts ' a few times . <nl> + <nl> + # include < stdio . h > <nl> + # include < ffi . h > <nl> + <nl> + int main ( ) <nl> + { <nl> + ffi _ cif cif ; <nl> + ffi _ type * args [ 1 ] ; <nl> + void * values [ 1 ] ; <nl> + char * s ; <nl> + ffi _ arg rc ; <nl> + <nl> + / * Initialize the argument info vectors * / <nl> + args [ 0 ] = & ffi _ type _ pointer ; <nl> + values [ 0 ] = & s ; <nl> + <nl> + / * Initialize the cif * / <nl> + if ( ffi _ prep _ cif ( & cif , FFI _ DEFAULT _ ABI , 1 , <nl> + 	 	 & ffi _ type _ sint , args ) = = FFI _ OK ) <nl> + { <nl> + s = " Hello World ! " ; <nl> + ffi _ call ( & cif , puts , & rc , values ) ; <nl> + / * rc now holds the result of the call to puts * / <nl> + <nl> + / * values holds a pointer to the function ' s arg , so to <nl> + call puts ( ) again all we need to do is change the <nl> + value of s * / <nl> + s = " This is cool ! " ; <nl> + ffi _ call ( & cif , puts , & rc , values ) ; <nl> + } <nl> + <nl> + return 0 ; <nl> + } <nl> + <nl> +  <nl> + File : libffi . info , Node : Types , Next : Multiple ABIs , Prev : Simple Example , Up : Using libffi <nl> + <nl> + 2 . 3 Types <nl> + = = = = = = = = = <nl> + <nl> + * Menu : <nl> + <nl> + * Primitive Types : : Built - in types . <nl> + * Structures : : Structure types . <nl> + * Type Example : : Structure type example . <nl> + * Complex : : Complex types . <nl> + * Complex Type Example : : Complex type example . <nl> + <nl> +  <nl> + File : libffi . info , Node : Primitive Types , Next : Structures , Up : Types <nl> + <nl> + 2 . 3 . 1 Primitive Types <nl> + - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + ' Libffi ' provides a number of built - in type descriptors that can be used <nl> + to describe argument and return types : <nl> + <nl> + ' ffi _ type _ void ' <nl> + The type ' void ' . This cannot be used for argument types , only for <nl> + return values . <nl> + <nl> + ' ffi _ type _ uint8 ' <nl> + An unsigned , 8 - bit integer type . <nl> + <nl> + ' ffi _ type _ sint8 ' <nl> + A signed , 8 - bit integer type . <nl> + <nl> + ' ffi _ type _ uint16 ' <nl> + An unsigned , 16 - bit integer type . <nl> + <nl> + ' ffi _ type _ sint16 ' <nl> + A signed , 16 - bit integer type . <nl> + <nl> + ' ffi _ type _ uint32 ' <nl> + An unsigned , 32 - bit integer type . <nl> + <nl> + ' ffi _ type _ sint32 ' <nl> + A signed , 32 - bit integer type . <nl> + <nl> + ' ffi _ type _ uint64 ' <nl> + An unsigned , 64 - bit integer type . <nl> + <nl> + ' ffi _ type _ sint64 ' <nl> + A signed , 64 - bit integer type . <nl> + <nl> + ' ffi _ type _ float ' <nl> + The C ' float ' type . <nl> + <nl> + ' ffi _ type _ double ' <nl> + The C ' double ' type . <nl> + <nl> + ' ffi _ type _ uchar ' <nl> + The C ' unsigned char ' type . <nl> + <nl> + ' ffi _ type _ schar ' <nl> + The C ' signed char ' type . ( Note that there is not an exact <nl> + equivalent to the C ' char ' type in ' libffi ' ; ordinarily you should <nl> + either use ' ffi _ type _ schar ' or ' ffi _ type _ uchar ' depending on <nl> + whether ' char ' is signed . ) <nl> + <nl> + ' ffi _ type _ ushort ' <nl> + The C ' unsigned short ' type . <nl> + <nl> + ' ffi _ type _ sshort ' <nl> + The C ' short ' type . <nl> + <nl> + ' ffi _ type _ uint ' <nl> + The C ' unsigned int ' type . <nl> + <nl> + ' ffi _ type _ sint ' <nl> + The C ' int ' type . <nl> + <nl> + ' ffi _ type _ ulong ' <nl> + The C ' unsigned long ' type . <nl> + <nl> + ' ffi _ type _ slong ' <nl> + The C ' long ' type . <nl> + <nl> + ' ffi _ type _ longdouble ' <nl> + On platforms that have a C ' long double ' type , this is defined . On <nl> + other platforms , it is not . <nl> + <nl> + ' ffi _ type _ pointer ' <nl> + A generic ' void * ' pointer . You should use this for all pointers , <nl> + regardless of their real type . <nl> + <nl> + ' ffi _ type _ complex _ float ' <nl> + The C ' _ Complex float ' type . <nl> + <nl> + ' ffi _ type _ complex _ double ' <nl> + The C ' _ Complex double ' type . <nl> + <nl> + ' ffi _ type _ complex _ longdouble ' <nl> + The C ' _ Complex long double ' type . On platforms that have a C <nl> + ' long double ' type , this is defined . On other platforms , it is <nl> + not . <nl> + <nl> + Each of these is of type ' ffi _ type ' , so you must take the address <nl> + when passing to ' ffi _ prep _ cif ' . <nl> + <nl> +  <nl> + File : libffi . info , Node : Structures , Next : Type Example , Prev : Primitive Types , Up : Types <nl> + <nl> + 2 . 3 . 2 Structures <nl> + - - - - - - - - - - - - - - - - <nl> + <nl> + Although ' libffi ' has no special support for unions or bit - fields , it is <nl> + perfectly happy passing structures back and forth . You must first <nl> + describe the structure to ' libffi ' by creating a new ' ffi _ type ' object <nl> + for it . <nl> + <nl> + - - Data type : ffi _ type <nl> + The ' ffi _ type ' has the following members : <nl> + ' size _ t size ' <nl> + This is set by ' libffi ' ; you should initialize it to zero . <nl> + <nl> + ' unsigned short alignment ' <nl> + This is set by ' libffi ' ; you should initialize it to zero . <nl> + <nl> + ' unsigned short type ' <nl> + For a structure , this should be set to ' FFI _ TYPE _ STRUCT ' . <nl> + <nl> + ' ffi _ type * * elements ' <nl> + This is a ' NULL ' - terminated array of pointers to ' ffi _ type ' <nl> + objects . There is one element per field of the struct . <nl> + <nl> +  <nl> + File : libffi . info , Node : Type Example , Next : Complex , Prev : Structures , Up : Types <nl> + <nl> + 2 . 3 . 3 Type Example <nl> + - - - - - - - - - - - - - - - - - - <nl> + <nl> + The following example initializes a ' ffi _ type ' object representing the <nl> + ' tm ' struct from Linux ' s ' time . h ' . <nl> + <nl> + Here is how the struct is defined : <nl> + <nl> + struct tm { <nl> + int tm _ sec ; <nl> + int tm _ min ; <nl> + int tm _ hour ; <nl> + int tm _ mday ; <nl> + int tm _ mon ; <nl> + int tm _ year ; <nl> + int tm _ wday ; <nl> + int tm _ yday ; <nl> + int tm _ isdst ; <nl> + / * Those are for future use . * / <nl> + long int _ _ tm _ gmtoff _ _ ; <nl> + _ _ const char * _ _ tm _ zone _ _ ; <nl> + } ; <nl> + <nl> + Here is the corresponding code to describe this struct to ' libffi ' : <nl> + <nl> + { <nl> + ffi _ type tm _ type ; <nl> + ffi _ type * tm _ type _ elements [ 12 ] ; <nl> + int i ; <nl> + <nl> + tm _ type . size = tm _ type . alignment = 0 ; <nl> + tm _ type . type = FFI _ TYPE _ STRUCT ; <nl> + tm _ type . elements = & tm _ type _ elements ; <nl> + <nl> + for ( i = 0 ; i < 9 ; i + + ) <nl> + tm _ type _ elements [ i ] = & ffi _ type _ sint ; <nl> + <nl> + tm _ type _ elements [ 9 ] = & ffi _ type _ slong ; <nl> + tm _ type _ elements [ 10 ] = & ffi _ type _ pointer ; <nl> + tm _ type _ elements [ 11 ] = NULL ; <nl> + <nl> + / * tm _ type can now be used to represent tm argument types and <nl> + 	 return types for ffi _ prep _ cif ( ) * / <nl> + } <nl> + <nl> +  <nl> + File : libffi . info , Node : Complex , Next : Complex Type Example , Prev : Type Example , Up : Types <nl> + <nl> + 2 . 3 . 4 Complex Types <nl> + - - - - - - - - - - - - - - - - - - - <nl> + <nl> + ' libffi ' supports the complex types defined by the C99 standard <nl> + ( ' _ Complex float ' , ' _ Complex double ' and ' _ Complex long double ' with the <nl> + built - in type descriptors ' ffi _ type _ complex _ float ' , <nl> + ' ffi _ type _ complex _ double ' and ' ffi _ type _ complex _ longdouble ' . <nl> + <nl> + Custom complex types like ' _ Complex int ' can also be used . An <nl> + ' ffi _ type ' object has to be defined to describe the complex type to <nl> + ' libffi ' . <nl> + <nl> + - - Data type : ffi _ type <nl> + ' size _ t size ' <nl> + This must be manually set to the size of the complex type . <nl> + <nl> + ' unsigned short alignment ' <nl> + This must be manually set to the alignment of the complex <nl> + type . <nl> + <nl> + ' unsigned short type ' <nl> + For a complex type , this must be set to ' FFI _ TYPE _ COMPLEX ' . <nl> + <nl> + ' ffi _ type * * elements ' <nl> + <nl> + This is a ' NULL ' - terminated array of pointers to ' ffi _ type ' <nl> + objects . The first element is set to the ' ffi _ type ' of the <nl> + complex ' s base type . The second element must be set to <nl> + ' NULL ' . <nl> + <nl> + The section * note Complex Type Example : : shows a way to determine the <nl> + ' size ' and ' alignment ' members in a platform independent way . <nl> + <nl> + For platforms that have no complex support in ' libffi ' yet , the <nl> + functions ' ffi _ prep _ cif ' and ' ffi _ prep _ args ' abort the program if they <nl> + encounter a complex type . <nl> + <nl> +  <nl> + File : libffi . info , Node : Complex Type Example , Prev : Complex , Up : Types <nl> + <nl> + 2 . 3 . 5 Complex Type Example <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + This example demonstrates how to use complex types : <nl> + <nl> + # include < stdio . h > <nl> + # include < ffi . h > <nl> + # include < complex . h > <nl> + <nl> + void complex _ fn ( _ Complex float cf , <nl> + _ Complex double cd , <nl> + _ Complex long double cld ) <nl> + { <nl> + printf ( " cf = % f + % fi \ ncd = % f + % fi \ ncld = % f + % fi \ n " , <nl> + ( float ) creal ( cf ) , ( float ) cimag ( cf ) , <nl> + ( float ) creal ( cd ) , ( float ) cimag ( cd ) , <nl> + ( float ) creal ( cld ) , ( float ) cimag ( cld ) ) ; <nl> + } <nl> + <nl> + int main ( ) <nl> + { <nl> + ffi _ cif cif ; <nl> + ffi _ type * args [ 3 ] ; <nl> + void * values [ 3 ] ; <nl> + _ Complex float cf ; <nl> + _ Complex double cd ; <nl> + _ Complex long double cld ; <nl> + <nl> + / * Initialize the argument info vectors * / <nl> + args [ 0 ] = & ffi _ type _ complex _ float ; <nl> + args [ 1 ] = & ffi _ type _ complex _ double ; <nl> + args [ 2 ] = & ffi _ type _ complex _ longdouble ; <nl> + values [ 0 ] = & cf ; <nl> + values [ 1 ] = & cd ; <nl> + values [ 2 ] = & cld ; <nl> + <nl> + / * Initialize the cif * / <nl> + if ( ffi _ prep _ cif ( & cif , FFI _ DEFAULT _ ABI , 3 , <nl> + & ffi _ type _ void , args ) = = FFI _ OK ) <nl> + { <nl> + cf = 1 . 0 + 20 . 0 * I ; <nl> + cd = 300 . 0 + 4000 . 0 * I ; <nl> + cld = 50000 . 0 + 600000 . 0 * I ; <nl> + / * Call the function * / <nl> + ffi _ call ( & cif , ( void ( * ) ( void ) ) complex _ fn , 0 , values ) ; <nl> + } <nl> + <nl> + return 0 ; <nl> + } <nl> + <nl> + This is an example for defining a custom complex type descriptor for <nl> + compilers that support them : <nl> + <nl> + / * <nl> + * This macro can be used to define new complex type descriptors <nl> + * in a platform independent way . <nl> + * <nl> + * name : Name of the new descriptor is ffi _ type _ complex _ < name > . <nl> + * type : The C base type of the complex type . <nl> + * / <nl> + # define FFI _ COMPLEX _ TYPEDEF ( name , type , ffitype ) \ <nl> + static ffi _ type * ffi _ elements _ complex _ # # name [ 2 ] = { \ <nl> + ( ffi _ type * ) ( & ffitype ) , NULL \ <nl> + } ; \ <nl> + struct struct _ align _ complex _ # # name { \ <nl> + char c ; \ <nl> + _ Complex type x ; \ <nl> + } ; \ <nl> + ffi _ type ffi _ type _ complex _ # # name = { \ <nl> + sizeof ( _ Complex type ) , \ <nl> + offsetof ( struct struct _ align _ complex _ # # name , x ) , \ <nl> + FFI _ TYPE _ COMPLEX , \ <nl> + ( ffi _ type * * ) ffi _ elements _ complex _ # # name \ <nl> + } <nl> + <nl> + / * Define new complex type descriptors using the macro : * / <nl> + / * ffi _ type _ complex _ sint * / <nl> + FFI _ COMPLEX _ TYPEDEF ( sint , int , ffi _ type _ sint ) ; <nl> + / * ffi _ type _ complex _ uchar * / <nl> + FFI _ COMPLEX _ TYPEDEF ( uchar , unsigned char , ffi _ type _ uint8 ) ; <nl> + <nl> + The new type descriptors can then be used like one of the built - in <nl> + type descriptors in the previous example . <nl> + <nl> +  <nl> + File : libffi . info , Node : Multiple ABIs , Next : The Closure API , Prev : Types , Up : Using libffi <nl> + <nl> + 2 . 4 Multiple ABIs <nl> + = = = = = = = = = = = = = = = = = <nl> + <nl> + A given platform may provide multiple different ABIs at once . For <nl> + instance , the x86 platform has both ' stdcall ' and ' fastcall ' functions . <nl> + <nl> + ' libffi ' provides some support for this . However , this is <nl> + necessarily platform - specific . <nl> + <nl> +  <nl> + File : libffi . info , Node : The Closure API , Next : Closure Example , Prev : Multiple ABIs , Up : Using libffi <nl> + <nl> + 2 . 5 The Closure API <nl> + = = = = = = = = = = = = = = = = = = = <nl> + <nl> + ' libffi ' also provides a way to write a generic function - a function <nl> + that can accept and decode any combination of arguments . This can be <nl> + useful when writing an interpreter , or to provide wrappers for arbitrary <nl> + functions . <nl> + <nl> + This facility is called the " closure API " . Closures are not supported <nl> + on all platforms ; you can check the ' FFI _ CLOSURES ' define to determine <nl> + whether they are supported on the current platform . <nl> + <nl> + Because closures work by assembling a tiny function at runtime , they <nl> + require special allocation on platforms that have a non - executable heap . <nl> + Memory management for closures is handled by a pair of functions : <nl> + <nl> + - - Function : void * ffi _ closure _ alloc ( size _ t SIZE , void * * CODE ) <nl> + Allocate a chunk of memory holding SIZE bytes . This returns a <nl> + pointer to the writable address , and sets * CODE to the <nl> + corresponding executable address . <nl> + <nl> + SIZE should be sufficient to hold a ' ffi _ closure ' object . <nl> + <nl> + - - Function : void ffi _ closure _ free ( void * WRITABLE ) <nl> + Free memory allocated using ' ffi _ closure _ alloc ' . The argument is <nl> + the writable address that was returned . <nl> + <nl> + Once you have allocated the memory for a closure , you must construct <nl> + a ' ffi _ cif ' describing the function call . Finally you can prepare the <nl> + closure function : <nl> + <nl> + - - Function : ffi _ status ffi _ prep _ closure _ loc ( ffi _ closure * CLOSURE , <nl> + ffi _ cif * CIF , void ( * FUN ) ( ffi _ cif * CIF , void * RET , void <nl> + * * ARGS , void * USER _ DATA ) , void * USER _ DATA , void * CODELOC ) <nl> + Prepare a closure function . <nl> + <nl> + CLOSURE is the address of a ' ffi _ closure ' object ; this is the <nl> + writable address returned by ' ffi _ closure _ alloc ' . <nl> + <nl> + CIF is the ' ffi _ cif ' describing the function parameters . <nl> + <nl> + USER _ DATA is an arbitrary datum that is passed , uninterpreted , to <nl> + your closure function . <nl> + <nl> + CODELOC is the executable address returned by ' ffi _ closure _ alloc ' . <nl> + <nl> + FUN is the function which will be called when the closure is <nl> + invoked . It is called with the arguments : <nl> + CIF <nl> + The ' ffi _ cif ' passed to ' ffi _ prep _ closure _ loc ' . <nl> + <nl> + RET <nl> + A pointer to the memory used for the function ' s return value . <nl> + FUN must fill this , unless the function is declared as <nl> + returning ' void ' . <nl> + <nl> + ARGS <nl> + A vector of pointers to memory holding the arguments to the <nl> + function . <nl> + <nl> + USER _ DATA <nl> + The same USER _ DATA that was passed to ' ffi _ prep _ closure _ loc ' . <nl> + <nl> + ' ffi _ prep _ closure _ loc ' will return ' FFI _ OK ' if everything went ok , <nl> + and something else on error . <nl> + <nl> + After calling ' ffi _ prep _ closure _ loc ' , you can cast CODELOC to the <nl> + appropriate pointer - to - function type . <nl> + <nl> + You may see old code referring to ' ffi _ prep _ closure ' . This function <nl> + is deprecated , as it cannot handle the need for separate writable and <nl> + executable addresses . <nl> + <nl> +  <nl> + File : libffi . info , Node : Closure Example , Prev : The Closure API , Up : Using libffi <nl> + <nl> + 2 . 6 Closure Example <nl> + = = = = = = = = = = = = = = = = = = = <nl> + <nl> + A trivial example that creates a new ' puts ' by binding ' fputs ' with <nl> + ' stdout ' . <nl> + <nl> + # include < stdio . h > <nl> + # include < ffi . h > <nl> + <nl> + / * Acts like puts with the file given at time of enclosure . * / <nl> + void puts _ binding ( ffi _ cif * cif , void * ret , void * args [ ] , <nl> + void * stream ) <nl> + { <nl> + * ( ffi _ arg * ) ret = fputs ( * ( char * * ) args [ 0 ] , ( FILE * ) stream ) ; <nl> + } <nl> + <nl> + typedef int ( * puts _ t ) ( char * ) ; <nl> + <nl> + int main ( ) <nl> + { <nl> + ffi _ cif cif ; <nl> + ffi _ type * args [ 1 ] ; <nl> + ffi _ closure * closure ; <nl> + <nl> + void * bound _ puts ; <nl> + int rc ; <nl> + <nl> + / * Allocate closure and bound _ puts * / <nl> + closure = ffi _ closure _ alloc ( sizeof ( ffi _ closure ) , & bound _ puts ) ; <nl> + <nl> + if ( closure ) <nl> + { <nl> + / * Initialize the argument info vectors * / <nl> + args [ 0 ] = & ffi _ type _ pointer ; <nl> + <nl> + / * Initialize the cif * / <nl> + if ( ffi _ prep _ cif ( & cif , FFI _ DEFAULT _ ABI , 1 , <nl> + & ffi _ type _ sint , args ) = = FFI _ OK ) <nl> + { <nl> + / * Initialize the closure , setting stream to stdout * / <nl> + if ( ffi _ prep _ closure _ loc ( closure , & cif , puts _ binding , <nl> + stdout , bound _ puts ) = = FFI _ OK ) <nl> + { <nl> + rc = ( ( puts _ t ) bound _ puts ) ( " Hello World ! " ) ; <nl> + / * rc now holds the result of the call to fputs * / <nl> + } <nl> + } <nl> + } <nl> + <nl> + / * Deallocate both closure , and bound _ puts * / <nl> + ffi _ closure _ free ( closure ) ; <nl> + <nl> + return 0 ; <nl> + } <nl> + <nl> + <nl> +  <nl> + File : libffi . info , Node : Missing Features , Next : Index , Prev : Using libffi , Up : Top <nl> + <nl> + 3 Missing Features <nl> + * * * * * * * * * * * * * * * * * * <nl> + <nl> + ' libffi ' is missing a few features . We welcome patches to add support <nl> + for these . <nl> + <nl> + * Variadic closures . <nl> + <nl> + * There is no support for bit fields in structures . <nl> + <nl> + * The closure API is <nl> + <nl> + * The " raw " API is undocumented . <nl> + <nl> + Note that variadic support is very new and tested on a relatively <nl> + small number of platforms . <nl> + <nl> +  <nl> + File : libffi . info , Node : Index , Prev : Missing Features , Up : Top <nl> + <nl> + Index <nl> + * * * * * <nl> + <nl> +    [ index    ] <nl> + * Menu : <nl> + <nl> + * ABI : Introduction . ( line 13 ) <nl> + * Application Binary Interface : Introduction . ( line 13 ) <nl> + * calling convention : Introduction . ( line 13 ) <nl> + * cif : The Basics . ( line 14 ) <nl> + * closure API : The Closure API . ( line 13 ) <nl> + * closures : The Closure API . ( line 13 ) <nl> + * FFI : Introduction . ( line 31 ) <nl> + * ffi _ call : The Basics . ( line 62 ) <nl> + * FFI _ CLOSURES : The Closure API . ( line 13 ) <nl> + * ffi _ closure _ alloc : The Closure API . ( line 19 ) <nl> + * ffi _ closure _ free : The Closure API . ( line 26 ) <nl> + * ffi _ prep _ cif : The Basics . ( line 16 ) <nl> + * ffi _ prep _ cif _ var : The Basics . ( line 39 ) <nl> + * ffi _ prep _ closure _ loc : The Closure API . ( line 34 ) <nl> + * ffi _ status : The Basics . ( line 16 ) <nl> + * ffi _ status < 1 > : The Basics . ( line 39 ) <nl> + * ffi _ status < 2 > : The Closure API . ( line 34 ) <nl> + * ffi _ type : Structures . ( line 11 ) <nl> + * ffi _ type < 1 > : Structures . ( line 11 ) <nl> + * ffi _ type < 2 > : Complex . ( line 15 ) <nl> + * ffi _ type < 3 > : Complex . ( line 15 ) <nl> + * ffi _ type _ complex _ double : Primitive Types . ( line 82 ) <nl> + * ffi _ type _ complex _ float : Primitive Types . ( line 79 ) <nl> + * ffi _ type _ complex _ longdouble : Primitive Types . ( line 85 ) <nl> + * ffi _ type _ double : Primitive Types . ( line 41 ) <nl> + * ffi _ type _ float : Primitive Types . ( line 38 ) <nl> + * ffi _ type _ longdouble : Primitive Types . ( line 71 ) <nl> + * ffi _ type _ pointer : Primitive Types . ( line 75 ) <nl> + * ffi _ type _ schar : Primitive Types . ( line 47 ) <nl> + * ffi _ type _ sint : Primitive Types . ( line 62 ) <nl> + * ffi _ type _ sint16 : Primitive Types . ( line 23 ) <nl> + * ffi _ type _ sint32 : Primitive Types . ( line 29 ) <nl> + * ffi _ type _ sint64 : Primitive Types . ( line 35 ) <nl> + * ffi _ type _ sint8 : Primitive Types . ( line 17 ) <nl> + * ffi _ type _ slong : Primitive Types . ( line 68 ) <nl> + * ffi _ type _ sshort : Primitive Types . ( line 56 ) <nl> + * ffi _ type _ uchar : Primitive Types . ( line 44 ) <nl> + * ffi _ type _ uint : Primitive Types . ( line 59 ) <nl> + * ffi _ type _ uint16 : Primitive Types . ( line 20 ) <nl> + * ffi _ type _ uint32 : Primitive Types . ( line 26 ) <nl> + * ffi _ type _ uint64 : Primitive Types . ( line 32 ) <nl> + * ffi _ type _ uint8 : Primitive Types . ( line 14 ) <nl> + * ffi _ type _ ulong : Primitive Types . ( line 65 ) <nl> + * ffi _ type _ ushort : Primitive Types . ( line 53 ) <nl> + * ffi _ type _ void : Primitive Types . ( line 10 ) <nl> + * Foreign Function Interface : Introduction . ( line 31 ) <nl> + * void : The Basics . ( line 62 ) <nl> + * void < 1 > : The Closure API . ( line 19 ) <nl> + * void < 2 > : The Closure API . ( line 26 ) <nl> + <nl> + <nl> +  <nl> + Tag Table : <nl> + Node : Top  682 <nl> + Node : Introduction  1429 <nl> + Node : Using libffi  3061 <nl> + Node : The Basics  3547 <nl> + Node : Simple Example  7198 <nl> + Node : Types  8229 <nl> + Node : Primitive Types  8613 <nl> + Node : Structures  10734 <nl> + Node : Type Example  11608 <nl> + Node : Complex  12890 <nl> + Node : Complex Type Example  14308 <nl> + Node : Multiple ABIs  17360 <nl> + Node : The Closure API  17731 <nl> + Node : Closure Example  20675 <nl> + Node : Missing Features  22285 <nl> + Node : Index  22738 <nl> +  <nl> + End Tag Table
diff - - git a / native / Makefile b / native / Makefile <nl> index fc4d081 . . 3e55a63 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 419 , 6 + 419 , 10 @ @ $ ( TESTLIB2 ) : $ ( BUILD ) / testlib2 . o <nl> ifneq ( $ ( DYNAMIC _ LIBFFI ) , true ) <nl> $ ( FFI _ LIB ) : <nl> 	 @ mkdir - p $ ( FFI _ BUILD ) <nl> + 	 @ if [ ! - f $ ( FFI _ SRC ) / configure ] ; then \ <nl> + 	 echo " Generating configure " ; \ <nl> + 	 ( cd $ ( FFI _ SRC ) ; . / autogen . sh ) ; \ <nl> + 	 fi <nl> 	 @ if [ ! - f $ ( FFI _ BUILD ) / Makefile ] ; then \ <nl> 	 echo " Configuring libffi ( $ ( ARCH ) ) " ; \ <nl> 	 ( cd $ ( FFI _ BUILD ) \
diff - - git a / native / libffi / src / x86 / ffi . c b / native / libffi / src / x86 / ffi . c <nl> index 7075712 . . d16ec5b 100644 <nl> - - - a / native / libffi / src / x86 / ffi . c <nl> + + + b / native / libffi / src / x86 / ffi . c <nl> @ @ - 315 , 8 + 315 , 8 @ @ ffi _ status ffi _ prep _ cif _ machdep ( ffi _ cif * cif ) <nl> <nl> for ( ptr = cif - > arg _ types , i = cif - > nargs ; i > 0 ; i - - , ptr + + ) <nl> { <nl> - # ifdef X86 _ WIN32 <nl> - if ( cif - > abi ! = FFI _ STDCALL ) <nl> + # ifndef X86 _ WIN64 <nl> + if ( cif - > abi ! = FFI _ STDCALL & & cif - > abi ! = FFI _ FASTCALL & & cif - > abi ! = FFI _ THISCALL ) <nl> # endif <nl> if ( ( ( * ptr ) - > alignment - 1 ) & cif - > bytes ) <nl> cif - > bytes = ALIGN ( cif - > bytes , ( * ptr ) - > alignment ) ; <nl> @ @ - 332 , 7 + 332 , 6 @ @ ffi _ status ffi _ prep _ cif _ machdep ( ffi _ cif * cif ) <nl> # ifndef X86 _ WIN64 <nl> if ( cif - > abi = = FFI _ SYSV | | cif - > abi = = FFI _ UNIX64 ) <nl> # endif <nl> - if ( cif - > abi ! = FFI _ STDCALL ) <nl> cif - > bytes = ( cif - > bytes + 15 ) & ~ 0xF ; <nl> # endif <nl> <nl> diff - - git a / native / libffi / testsuite / libffi . call / align _ mixed . c b / native / libffi / testsuite / libffi . call / align _ mixed . c <nl> new file mode 100755 <nl> index 0000000 . . fe8e254 <nl> - - - / dev / null <nl> + + + b / native / libffi / testsuite / libffi . call / align _ mixed . c <nl> @ @ - 0 , 0 + 1 , 42 @ @ <nl> + / * Area : 	 ffi _ call <nl> + Purpose : 	 Check for proper argument alignment . <nl> + Limitations : 	 none . <nl> + PR : 	 	 none . <nl> + Originator : 	 < twalljava @ java . net > ( from many _ win32 . c ) * / <nl> + <nl> + / * { dg - do run } * / <nl> + <nl> + # include " ffitest . h " <nl> + # include < float . h > <nl> + <nl> + static float ABI _ ATTR align _ arguments ( int i1 , <nl> + double f2 , <nl> + int i3 , <nl> + double f4 ) <nl> + { <nl> + return i1 + f2 + i3 + f4 ; <nl> + } <nl> + <nl> + int main ( void ) <nl> + { <nl> + ffi _ cif cif ; <nl> + ffi _ type * args [ 4 ] = { & ffi _ type _ int , & ffi _ type _ double , & ffi _ type _ int , & ffi _ type _ double } ; <nl> + float fa [ 2 ] = { 1 , 2 } ; <nl> + int ia [ 2 ] = { 1 , 2 } ; <nl> + void * values [ 4 ] = { & ia [ 0 ] , & fa [ 0 ] , & ia [ 1 ] , & fa [ 1 ] } ; <nl> + float f , ff ; <nl> + <nl> + / * Initialize the cif * / <nl> + CHECK ( ffi _ prep _ cif ( & cif , ABI _ NUM , 4 , <nl> + 	 	 & ffi _ type _ float , args ) = = FFI _ OK ) ; <nl> + <nl> + ff = align _ arguments ( ia [ 0 ] , fa [ 0 ] , ia [ 1 ] , fa [ 1 ] ) ; <nl> + <nl> + ffi _ call ( & cif , FFI _ FN ( align _ arguments ) , & f , values ) ; <nl> + <nl> + if ( f - ff < FLT _ EPSILON ) <nl> + printf ( " align arguments tests ok ! \ n " ) ; <nl> + else <nl> + CHECK ( 0 ) ; <nl> + exit ( 0 ) ; <nl> + } <nl> diff - - git a / native / libffi / testsuite / libffi . call / align _ stdcall . c b / native / libffi / testsuite / libffi . call / align _ stdcall . c <nl> deleted file mode 100755 <nl> index ed3511b . . 0000000 <nl> - - - a / native / libffi / testsuite / libffi . call / align _ stdcall . c <nl> + + + / dev / null <nl> @ @ - 1 , 42 + 0 , 0 @ @ <nl> - / * Area : 	 ffi _ call <nl> - Purpose : 	 Check stdcall for argument alignment ( always 4 ) on X86 _ WIN32 systems . <nl> - Limitations : 	 none . <nl> - PR : 	 	 none . <nl> - Originator : 	 < twalljava @ java . net > ( from many _ win32 . c ) * / <nl> - <nl> - / * { dg - do run { target i ? 86 - * - cygwin * i ? 86 - * - mingw * } } * / <nl> - <nl> - # include " ffitest . h " <nl> - # include < float . h > <nl> - <nl> - static float _ _ attribute _ _ ( ( stdcall ) ) stdcall _ align ( int i1 , <nl> - double f2 , <nl> - int i3 , <nl> - double f4 ) <nl> - { <nl> - return i1 + f2 + i3 + f4 ; <nl> - } <nl> - <nl> - int main ( void ) <nl> - { <nl> - ffi _ cif cif ; <nl> - ffi _ type * args [ 4 ] = { & ffi _ type _ int , & ffi _ type _ double , & ffi _ type _ int , & ffi _ type _ double } ; <nl> - float fa [ 2 ] = { 1 , 2 } ; <nl> - int ia [ 2 ] = { 1 , 2 } ; <nl> - void * values [ 4 ] = { & ia [ 0 ] , & fa [ 0 ] , & ia [ 1 ] , & fa [ 1 ] } ; <nl> - float f , ff ; <nl> - <nl> - / * Initialize the cif * / <nl> - CHECK ( ffi _ prep _ cif ( & cif , FFI _ STDCALL , 4 , <nl> - 	 	 & ffi _ type _ float , args ) = = FFI _ OK ) ; <nl> - <nl> - ff = stdcall _ align ( ia [ 0 ] , fa [ 0 ] , ia [ 1 ] , fa [ 1 ] ) ; <nl> - <nl> - ffi _ call ( & cif , FFI _ FN ( stdcall _ align ) , & f , values ) ; <nl> - <nl> - if ( f - ff < FLT _ EPSILON ) <nl> - printf ( " stdcall many arg tests ok ! \ n " ) ; <nl> - else <nl> - CHECK ( 0 ) ; <nl> - exit ( 0 ) ; <nl> - }
diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> index 607db1d . . adb49d9 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> @ @ - 1953 , 6 + 1953 , 27 @ @ public interface X11 extends Library { <nl> * / <nl> int XUngrabKey ( Display display , int keyCode , int modifiers , Window grab _ window ) ; <nl> <nl> + / * * <nl> + * Actively grabs control of the keyboard and generates FocusIn and FocusOut events <nl> + * <nl> + * @ param display Specifies the connection to the X server . <nl> + * @ param grab _ window Specifies the grab window . <nl> + * @ param owner _ events Specifies a Boolean value that indicates whether the keyboard events are to be reported as usual . <nl> + * @ param pointer _ mode Specifies further processing of pointer events . You can pass GrabModeSync or GrabModeAsync . <nl> + * @ param keyboard _ mode Specifies further processing of keyboard events . You can pass GrabModeSync or GrabModeAsync . <nl> + * @ param time Specifies the time . You can pass either a timestamp or CurrentTime . <nl> + * @ return nothing <nl> + * / <nl> + int XGrabKeyboard ( Display display , Window grab _ window , int owner _ events , int pointer _ mode , int keyboard _ mode , NativeLong time ) ; <nl> + <nl> + / * * <nl> + * Releases the keyboard and any queued events if this client has it actively grabbed from either XGrabKeyboard ( ) or XGrabKey ( ) . <nl> + * @ param display Specifies the connection to the X server . <nl> + * @ param time Specifies the time . You can pass either a timestamp or CurrentTime . <nl> + * @ return nothing <nl> + * / <nl> + int XUngrabKeyboard ( Display display , NativeLong time ) ; <nl> + <nl> / / int XChangeKeyboardMapping ( Display display , int first _ keycode , int keysyms _ per _ keycode , KeySym * keysyms , int num _ codes ) ; <nl> / * * Defines the symbols for the specified number of KeyCodes starting with first _ keycode . The symbols for KeyCodes outside this range remain unchanged . The number of elements in keysyms must be : num _ codes * keysyms _ per _ keycode . The specified first _ keycode must be greater than or equal to min _ keycode returned by XDisplayKeycodes , or a BadValue error results . In addition , the following expression must be less than or equal to max _ keycode as returned by XDisplayKeycodes , or a BadValue error results : first _ keycode + num _ codes - 1 . * / <nl> int XChangeKeyboardMapping ( Display display , int first _ keycode , int keysyms _ per _ keycode , KeySym [ ] keysyms , int num _ codes ) ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 4df6ae1 . . 99e551b 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 37 , 6 + 37 , 7 @ @ Features <nl> * [ # 400 ] ( https : / / github . com / twall / jna / pull / 400 ) : Added process - specific access rights constants in ` com . sun . jna . platform . win32 . WinNT ` - [ @ PAX523 ] ( https : / / github . com / PAX523 ) . <nl> * [ # 400 ] ( https : / / github . com / twall / jna / pull / 400 ) : Added specific constants for request of icon settings in ` com . sun . jna . platform . win32 . WinUser ` - [ @ PAX523 ] ( https : / / github . com / PAX523 ) . <nl> * [ # 400 ] ( https : / / github . com / twall / jna / pull / 400 ) : Added constants for ` GetClassLong ` , ` SendMessageTimeout ` and ` GetIconInfo ` in ` com . sun . jna . platform . win32 . WinUser ` - [ @ PAX523 ] ( https : / / github . com / PAX523 ) . <nl> + * [ # 419 ] ( https : / / github . com / twall / jna / pull / 419 ) : Added ` SetupDiOpenDevRegKey ` , ` SetupDiEnumDeviceInfo ` and related constants to ` com . sun . jna . platform . win32 . SetupApi ` - [ @ ChristianSchwarz ] ( https : / / github . com / ChristianSchwarz ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java b / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java <nl> index 7b746b8 . . b4cc7a8 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java <nl> @ @ - 16 , 12 + 16 , 16 @ @ import java . util . List ; <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> + import com . sun . jna . platform . win32 . Guid . GUID ; <nl> + import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> + import com . sun . jna . platform . win32 . WinReg . HKEY ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . win32 . StdCallLibrary ; <nl> import com . sun . jna . win32 . W32APIOptions ; <nl> <nl> / * * <nl> * The interface for the w32 setup API . <nl> + * @ author Christian Schwarz <nl> * / <nl> public interface SetupApi extends StdCallLibrary { <nl> <nl> @ @ - 31 , 49 + 35 , 98 @ @ public interface SetupApi extends StdCallLibrary { <nl> / * * <nl> * The GUID _ DEVINTERFACE _ DISK device interface class is defined for hard disk storage devices . <nl> * / <nl> - public static Guid . GUID GUID _ DEVINTERFACE _ DISK = new Guid . GUID ( new byte [ ] <nl> - { <nl> - 0x07 , 0x63 , ( byte ) 0xf5 , 0x53 , ( byte ) 0xbf , ( byte ) 0xb6 , ( byte ) 0xd0 , 0x11 , <nl> - ( byte ) 0x94 , ( byte ) 0xf2 , 0x00 , ( byte ) 0xa0 , ( byte ) 0xc9 , ( byte ) 0x1e , ( byte ) 0xfb , ( byte ) 0x8b <nl> - } ) ; <nl> - <nl> + GUID GUID _ DEVINTERFACE _ DISK = new GUID ( " 53F56307 - B6BF - 11D0 - 94F2 - 00A0C91EFB8B " ) ; <nl> + <nl> + <nl> + 	 / * * <nl> + 	 * Drivers for serial ports register instances of this device interface <nl> + 	 * class to notify the operating system and applications of the presence of <nl> + 	 * COM ports . <nl> + 	 * / <nl> + 	 GUID GUID _ DEVINTERFACE _ COMPORT = new GUID ( " 86E0D1E0 - 8089 - 11D0 - 9CE4 - 08003E301F73 " ) ; <nl> + 	 <nl> / * * <nl> * Return only the device that is associated with the system default device interface , if one is set , for the <nl> * specified device interface classes . <nl> * / <nl> - public int DIGCF _ DEFAULT = 0x1 ; <nl> + int DIGCF _ DEFAULT = 0x1 ; <nl> <nl> / * * <nl> * Return only devices that are currently present in a system . <nl> * / <nl> - public int DIGCF _ PRESENT = 0x2 ; <nl> + int DIGCF _ PRESENT = 0x2 ; <nl> <nl> / * * <nl> * Return a list of installed devices for all device setup classes or all device interface classes . <nl> * / <nl> - public int DIGCF _ ALLCLASSES = 0x4 ; <nl> + int DIGCF _ ALLCLASSES = 0x4 ; <nl> <nl> / * * <nl> * Return only devices that are a part of the current hardware profile . <nl> * / <nl> - public int DIGCF _ PROFILE = 0x8 ; <nl> + int DIGCF _ PROFILE = 0x8 ; <nl> <nl> / * * <nl> * Return devices that support device interfaces for the specified device interface classes . This flag must be set <nl> * in the Flags parameter if the Enumerator parameter specifies a device instance ID . <nl> * / <nl> - public int DIGCF _ DEVICEINTERFACE = 0x10 ; <nl> + int DIGCF _ DEVICEINTERFACE = 0x10 ; <nl> <nl> / * * <nl> * ( Windows XP and later ) The function retrieves the device ' s current removal policy as a DWORD that contains one of <nl> * the CM _ REMOVAL _ POLICY _ Xxx values that are defined in Cfgmgr32 . h . <nl> * / <nl> - public int SPDRP _ REMOVAL _ POLICY = 0x0000001F ; <nl> + int SPDRP _ REMOVAL _ POLICY = 0x0000001F ; <nl> <nl> / * * <nl> * Removable . <nl> * / <nl> - public int CM _ DEVCAP _ REMOVABLE = 0x00000004 ; <nl> + int CM _ DEVCAP _ REMOVABLE = 0x00000004 ; <nl> + <nl> + <nl> + 	 / * * make change in all hardware profiles * / <nl> + 	 int DICS _ FLAG _ GLOBAL = 0x00000001 ; <nl> + 	 / * * make change in specified profile only * / <nl> + 	 int DICS _ FLAG _ CONFIGSPECIFIC = 0x00000002 ; <nl> + 	 / * * 1 or more hardware profile - specific changes to follow . * / <nl> + 	 int DICS _ FLAG _ CONFIGGENERAL = 0x00000004 ; <nl> + <nl> + 	 / * * <nl> + 	 * Open / Create / Delete device key . <nl> + 	 * <nl> + 	 * @ see SetupDiCreateDevRegKey , SetupDiOpenDevRegKey , and <nl> + 	 * SetupDiDeleteDevRegKey . <nl> + 	 * / <nl> + <nl> + 	 int DIREG _ DEV = 0x00000001 ; <nl> + 	 / * * <nl> + 	 * Open / Create / Delete driver key <nl> + 	 * <nl> + 	 * @ see SetupDiCreateDevRegKey , SetupDiOpenDevRegKey , and <nl> + 	 * SetupDiDeleteDevRegKey . <nl> + 	 * / <nl> + <nl> + 	 int DIREG _ DRV = 0x00000002 ; <nl> + 	 / * * <nl> + 	 * Delete both driver and Device key <nl> + 	 * <nl> + 	 * @ see SetupDiCreateDevRegKey , SetupDiOpenDevRegKey , and <nl> + 	 * SetupDiDeleteDevRegKey . <nl> + 	 * / <nl> + <nl> + 	 int DIREG _ BOTH = 0x00000004 ; <nl> + <nl> + 	 / * * <nl> + 	 * DeviceDesc ( R / W ) <nl> + 	 * < p > <nl> + 	 * Device registry property codes ( Codes marked as read - only ( R ) may only be <nl> + 	 * used for SetupDiGetDeviceRegistryProperty ) <nl> + 	 * < p > <nl> + 	 * These values should cover the same set of registry properties as defined <nl> + 	 * by the CM _ DRP codes in cfgmgr32 . h . <nl> + 	 * / <nl> + 	 int SPDRP _ DEVICEDESC = 0x00000000 ; <nl> + <nl> <nl> / * * <nl> * The SetupDiGetClassDevs function returns a handle to a device information set that contains requested device <nl> @ @ - 236 , 10 + 289 , 94 @ @ public interface SetupApi extends StdCallLibrary { <nl> * ERROR _ INVALID _ DATA error code if the requested property does not exist for a device or if the property data is <nl> * not valid . <nl> * / <nl> - boolean SetupDiGetDeviceRegistryProperty ( WinNT . HANDLE DeviceInfoSet , SP _ DEVINFO _ DATA DeviceInfoData , <nl> + boolean SetupDiGetDeviceRegistryProperty ( HANDLE DeviceInfoSet , SP _ DEVINFO _ DATA DeviceInfoData , <nl> int Property , IntByReference PropertyRegDataType , Pointer PropertyBuffer , int PropertyBufferSize , <nl> IntByReference RequiredSize ) ; <nl> <nl> + 	 / * * <nl> + 	 * The SetupDiOpenDevRegKey function opens a registry key for device - specific configuration information . <nl> + 	 * < p > <nl> + 	 * Depending on the value that is passed in the samDesired parameter , it might be necessary for the caller of this <nl> + 	 * function to be a member of the Administrators group . <nl> + 	 * < p > <nl> + 	 * Close the handle returned from this function by calling RegCloseKey . <nl> + 	 * < p > <nl> + 	 * The specified device instance must be registered before this function is called . However , be aware that the <nl> + 	 * operating system automatically registers PnP device instances . For information about how to register non - PnP <nl> + 	 * device instances , see SetupDiRegisterDeviceInfo . <nl> + 	 * <nl> + 	 * @ param deviceInfoSet <nl> + 	 * A handle to the device information set that contains a device information element that represents the <nl> + 	 * device for which to open a registry key . <nl> + 	 * @ param deviceInfoData <nl> + 	 * A pointer to an { @ link SP _ DEVINFO _ DATA } structure that specifies the device information element in <nl> + 	 * DeviceInfoSet . <nl> + 	 * @ param scope <nl> + 	 * he scope of the registry key to open . The scope determines where the information is stored . The scope <nl> + 	 * can be global or specific to a hardware profile . The scope is specified by one of the following <nl> + 	 * values : <nl> + 	 * < ul > <nl> + 	 * < li > DICS _ FLAG _ GLOBAL Open a key to store global configuration information . This information is not <nl> + 	 * specific to a particular hardware profile . This opens a key that is rooted at HKEY _ LOCAL _ MACHINE . The <nl> + 	 * exact key opened depends on the value of the KeyType parameter . < li > DICS _ FLAG _ CONFIGSPECIFIC Open a <nl> + 	 * key to store hardware profile - specific configuration information . This key is rooted at one of the <nl> + 	 * hardware - profile specific branches , instead of HKEY _ LOCAL _ MACHINE . The exact key opened depends on the <nl> + 	 * value of the KeyType parameter . <nl> + 	 * < / ul > <nl> + 	 * @ param hwProfile <nl> + 	 * A hardware profile value , which is set as follows : <nl> + 	 * < ul > <nl> + 	 * < li > If Scope is set to DICS _ FLAG _ CONFIGSPECIFIC , HwProfile specifies the hardware profile of the key <nl> + 	 * that is to be opened . < li > If HwProfile is 0 , the key for the current hardware profile is opened . < li > <nl> + 	 * If Scope is DICS _ FLAG _ GLOBAL , HwProfile is ignored . <nl> + 	 * < / ul > <nl> + 	 * @ param keyType <nl> + 	 * The type of registry storage key to open , which can be one of the following values : <nl> + 	 * < ul > <nl> + 	 * < li > { @ link # DIREG _ DEV } Open a hardware key for the device . < li > { @ link # DIREG _ DRV } Open a software key <nl> + 	 * for the device . For more information about a device ' s hardware and software keys , see Registry Trees <nl> + 	 * and Keys for Devices and Drivers . <nl> + 	 * < / ul > <nl> + 	 * @ param samDesired <nl> + 	 * The registry security access that is required for the requested key . For information about registry <nl> + 	 * security access values of type REGSAM , see the Microsoft Windows SDK documentation . <nl> + 	 * @ return If the function is successful , it returns a handle to an opened registry key where private configuration <nl> + 	 * data about this device instance can be stored / retrieved . <nl> + 	 * < p > <nl> + 	 * If the function fails , it returns INVALID _ HANDLE _ VALUE . To get extended error information , call <nl> + 	 * GetLastError . <nl> + 	 * / <nl> + 	 HKEY SetupDiOpenDevRegKey ( HANDLE deviceInfoSet , SP _ DEVINFO _ DATA deviceInfoData , int scope , int hwProfile , int keyType , int samDesired ) ; <nl> + <nl> + 	 / * * <nl> + 	 * The SetupDiEnumDeviceInfo function returns a { @ link SP _ DEVINFO _ DATA } structure that specifies a device <nl> + 	 * information element in a device information set . <nl> + 	 * < p > <nl> + 	 * < b > Remarks < / b > < br > <nl> + 	 * Repeated calls to this function return a device information element for a different device . This function can be <nl> + 	 * called repeatedly to get information about all devices in the device information set . <nl> + 	 * < p > <nl> + 	 * To enumerate device information elements , an installer should initially call SetupDiEnumDeviceInfo with the <nl> + 	 * MemberIndex parameter set to 0 . The installer should then increment MemberIndex and call SetupDiEnumDeviceInfo <nl> + 	 * until there are no more values ( the function fails and a call to GetLastError returns ERROR _ NO _ MORE _ ITEMS ) . <nl> + 	 * < p > <nl> + 	 * Call SetupDiEnumDeviceInterfaces to get a context structure for a device interface element ( versus a device <nl> + 	 * information element ) . <nl> + 	 * <nl> + 	 * <nl> + 	 * @ param deviceInfoSet <nl> + 	 * A handle to the device information set for which to return an { @ link SP _ DEVINFO _ DATA } structure that <nl> + 	 * represents a device information element . <nl> + 	 * @ param memberIndex <nl> + 	 * A zero - based index of the device information element to retrieve . <nl> + 	 * @ param deviceInfoData <nl> + 	 * A pointer to an SP _ DEVINFO _ DATA structure to receive information about an enumerated device <nl> + 	 * information element . <nl> + 	 * @ return The function returns TRUE if it is successful . Otherwise , it returns FALSE and the logged error can be <nl> + 	 * retrieved with a call to GetLastError . <nl> + 	 * / <nl> + 	 boolean SetupDiEnumDeviceInfo ( HANDLE deviceInfoSet , int memberIndex , SP _ DEVINFO _ DATA deviceInfoData ) ; <nl> + <nl> / * * <nl> * An SP _ DEVICE _ INTERFACE _ DATA structure defines a device interface in a device information set . <nl> * / <nl> @ @ - 286 , 7 + 423 , 7 @ @ public interface SetupApi extends StdCallLibrary { <nl> * / <nl> public Pointer Reserved ; <nl> <nl> - protected List getFieldOrder ( ) { <nl> + protected List < String > getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " cbSize " , " InterfaceClassGuid " , " Flags " , " Reserved " } ) ; <nl> } <nl> } <nl> @ @ - 338 , 7 + 475 , 7 @ @ public interface SetupApi extends StdCallLibrary { <nl> * / <nl> public Pointer Reserved ; <nl> <nl> - protected List getFieldOrder ( ) { <nl> + protected List < String > getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " cbSize " , " InterfaceClassGuid " , " DevInst " , " Reserved " } ) ; <nl> } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / SetupApiTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / SetupApiTest . java <nl> new file mode 100644 <nl> index 0000000 . . 6a0dec9 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / SetupApiTest . java <nl> @ @ - 0 , 0 + 1 , 70 @ @ <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import static com . sun . jna . Native . getLastError ; <nl> + import static com . sun . jna . platform . win32 . SetupApi . DICS _ FLAG _ GLOBAL ; <nl> + import static com . sun . jna . platform . win32 . SetupApi . DIGCF _ ALLCLASSES ; <nl> + import static com . sun . jna . platform . win32 . SetupApi . DIGCF _ DEVICEINTERFACE ; <nl> + import static com . sun . jna . platform . win32 . SetupApi . DIGCF _ PRESENT ; <nl> + import static com . sun . jna . platform . win32 . SetupApi . DIREG _ DEV ; <nl> + import static com . sun . jna . platform . win32 . SetupApi . GUID _ DEVINTERFACE _ COMPORT ; <nl> + import static com . sun . jna . platform . win32 . WinBase . INVALID _ HANDLE _ VALUE ; <nl> + import static com . sun . jna . platform . win32 . WinError . ERROR _ NO _ MORE _ ITEMS ; <nl> + import static com . sun . jna . platform . win32 . WinNT . KEY _ QUERY _ VALUE ; <nl> + import junit . framework . TestCase ; <nl> + <nl> + import com . sun . jna . platform . win32 . SetupApi . SP _ DEVINFO _ DATA ; <nl> + import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> + import com . sun . jna . platform . win32 . WinReg . HKEY ; <nl> + <nl> + public class SetupApiTest extends TestCase { <nl> + 	 / * * <nl> + 	 * member index for the first device , see { @ link SetupApi # SetupDiEnumDeviceInfo ( HANDLE , int , SP _ DEVINFO _ DATA ) } <nl> + 	 * / <nl> + 	 private static final int FIRST _ MEMBER = 0 ; <nl> + <nl> + 	 public static void main ( String [ ] args ) { <nl> + 	 	 junit . textui . TestRunner . run ( SetupApiTest . class ) ; <nl> + 	 } <nl> + <nl> + 	 / * * <nl> + 	 * Tests the mapping of { @ link SetupApi # SetupDiOpenDevRegKey ( HANDLE , SP _ DEVINFO _ DATA , int , int , int , int ) } . <nl> + 	 * < p > <nl> + 	 * The test pass if SetupDiOpenDevRegKey ( . . ) returns a valid { @ link HKEY } pointing to the first found device on the current machine . <nl> + 	 * < p > <nl> + 	 * NOTE : We only test the mapping of SetupDiOpenDevRegKey ( . . ) , not it ' s functionality . <nl> + 	 * / <nl> + 	 public void testSetupDiOpenDevRegKey ( ) { <nl> + 	 	 / / hDevInfoSet repesents a list of installed devices for all device <nl> + 	 	 / / setup classes or all device interface classes <nl> + 	 	 HANDLE hDevInfoSet = SetupApi . INSTANCE . SetupDiGetClassDevs ( null , null , null , DIGCF _ ALLCLASSES ) ; <nl> + 	 	 assertTrue ( hDevInfoSet ! = INVALID _ HANDLE _ VALUE ) ; <nl> + <nl> + 	 	 SP _ DEVINFO _ DATA devInfo = new SP _ DEVINFO _ DATA ( ) ; <nl> + 	 	 / / there must be least one device ( drive , processor , pci , usb , . . . ) on the <nl> + 	 	 / / current machine <nl> + 	 	 assertTrue ( SetupApi . INSTANCE . SetupDiEnumDeviceInfo ( hDevInfoSet , FIRST _ MEMBER , devInfo ) ) ; <nl> + <nl> + 	 	 HKEY hDeviceKey = SetupApi . INSTANCE . SetupDiOpenDevRegKey ( hDevInfoSet , devInfo , DICS _ FLAG _ GLOBAL , 0 , DIREG _ DEV , KEY _ QUERY _ VALUE ) ; <nl> + 	 	 assertTrue ( hDeviceKey ! = INVALID _ HANDLE _ VALUE ) ; <nl> + <nl> + 	 	 Advapi32 . INSTANCE . RegCloseKey ( hDeviceKey ) ; <nl> + 	 } <nl> + <nl> + 	 / * * <nl> + 	 * Tests the mapping of { @ link SetupApi # SetupDiEnumDeviceInfo ( HANDLE , int , SP _ DEVINFO _ DATA ) } . <nl> + 	 * < p > <nl> + 	 * There are 2 different results possible , depending availability of an COM - Port on the current machine : <nl> + 	 * < ul > <nl> + 	 * < li > If the current machine has no COM - Port the method must fail and the the last error indicate that there are no more values / COM - Ports . <nl> + 	 * < li > If the current machine has at least one COM - Port the method must succeed . The test pass if no exception is thrown . <nl> + 	 * < / ul > <nl> + 	 * / <nl> + 	 public void testSetupDiEnumDeviceInfo ( ) { <nl> + 	 	 HANDLE hDevInfoSet = SetupApi . INSTANCE . SetupDiGetClassDevs ( GUID _ DEVINTERFACE _ COMPORT , null , null , DIGCF _ PRESENT | DIGCF _ DEVICEINTERFACE ) ; <nl> + 	 	 SP _ DEVINFO _ DATA devInfo = new SP _ DEVINFO _ DATA ( ) ; <nl> + 	 	 boolean succeed = SetupApi . INSTANCE . SetupDiEnumDeviceInfo ( hDevInfoSet , FIRST _ MEMBER , devInfo ) ; <nl> + 	 	 boolean hasNoMoreItems = ( getLastError ( ) = = ERROR _ NO _ MORE _ ITEMS ) ; <nl> + <nl> + 	 	 assertTrue ( succeed | | hasNoMoreItems ) ; <nl> + 	 } <nl> + } <nl> \ No newline at end of file
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> index e5f7732 . . a50d19a 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> @ @ - 49 , 12 + 49 , 25 @ @ public class ITypeInfoTest extends TestCase { <nl> protected void tearDown ( ) throws Exception { <nl> } <nl> <nl> - public int getTypeInfoCount ( ) { <nl> - return 0 ; <nl> - } <nl> - <nl> public ITypeInfo getTypeInfo ( ) { <nl> - return null ; <nl> + TypeLibUtil shellTypeLib = new TypeLibUtil ( " { 50A7E9B0 - 70EF - 11D1 - B75A - 00A0C90564FE } " , 1 , 0 ) ; <nl> + int typeInfoCount = shellTypeLib . getTypeInfoCount ( ) ; <nl> + if ( typeInfoCount = = 0 ) <nl> + throw new RuntimeException ( " Shell lib contains zero type infos " ) ; <nl> + ITypeInfo typeInfo = shellTypeLib . getTypeInfo ( 18 ) ; <nl> + return typeInfo ; <nl> + } <nl> + <nl> + public ITypeInfo [ ] getTypeInfos ( ) { <nl> + TypeLibUtil shellTypeLib = new TypeLibUtil ( " { 50A7E9B0 - 70EF - 11D1 - B75A - 00A0C90564FE } " , 1 , 0 ) ; <nl> + int typeInfoCount = shellTypeLib . getTypeInfoCount ( ) ; <nl> + if ( typeInfoCount = = 0 ) <nl> + throw new RuntimeException ( " Shell lib contains zero type infos " ) ; <nl> + ITypeInfo [ ] typeInfos = new ITypeInfo [ typeInfoCount ] ; <nl> + for ( int i = 0 ; i < typeInfoCount ; i + + ) { <nl> + typeInfos [ i ] = shellTypeLib . getTypeInfo ( i ) ; <nl> + } <nl> + return typeInfos ; <nl> } <nl> <nl> public void testGetTypeAttr ( ) { <nl> @ @ - 70 , 17 + 83 , 20 @ @ public class ITypeInfoTest extends TestCase { <nl> } <nl> <nl> public void testGetNames ( ) { <nl> - ITypeInfo typeInfo = getTypeInfo ( ) ; <nl> + ITypeInfo [ ] typeInfos = getTypeInfos ( ) ; <nl> MEMBERID memid = new MEMBERID ( 1 ) ; <nl> BSTR [ ] rgBstrNames = new BSTR [ 1 ] ; <nl> UINT cMaxNames = new UINT ( 1 ) ; <nl> UINTByReference pcNames = new UINTByReference ( ) ; <nl> - HRESULT hr = typeInfo . GetNames ( memid , rgBstrNames , cMaxNames , pcNames ) ; <nl> - <nl> - COMUtils . checkRC ( hr ) ; <nl> - assertEquals ( 0 , hr . intValue ( ) ) ; <nl> - / / System . out . println ( " rgBstrNames : " + rgBstrNames [ 0 ] . getValue ( ) ) ; <nl> - / / System . out . println ( " pcNames : " + pcNames . getValue ( ) . intValue ( ) ) ; <nl> + for ( ITypeInfo typeInfo : typeInfos ) { <nl> + HRESULT hr = typeInfo . GetNames ( memid , rgBstrNames , cMaxNames , pcNames ) ; <nl> + if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> + / / System . out . println ( " rgBstrNames : " + rgBstrNames [ 0 ] . getValue ( ) ) ; <nl> + / / System . out . println ( " pcNames : " + pcNames . getValue ( ) . intValue ( ) ) ; <nl> + return ; <nl> + } <nl> + } <nl> + throw new RuntimeException ( " Didn ' t find name for member in any of the type infos " ) ; <nl> } <nl> <nl> public void testGetRefTypeOfImplType ( ) { <nl> @ @ - 104 , 15 + 120 , 18 @ @ public class ITypeInfoTest extends TestCase { <nl> } <nl> <nl> public void testGetIDsOfNames ( ) { <nl> - ITypeInfo typeInfo = getTypeInfo ( ) ; <nl> - LPOLESTR [ ] rgszNames = { new LPOLESTR ( " Help " ) } ; <nl> + ITypeInfo [ ] typeInfos = getTypeInfos ( ) ; <nl> + LPOLESTR [ ] rgszNames = { new LPOLESTR ( " Help " ) } ; <nl> UINT cNames = new UINT ( 1 ) ; <nl> MEMBERID [ ] pMemId = new MEMBERID [ 1 ] ; <nl> - HRESULT hr = typeInfo . GetIDsOfNames ( rgszNames , cNames , pMemId ) ; <nl> - <nl> - COMUtils . checkRC ( hr ) ; <nl> - assertEquals ( 0 , hr . intValue ( ) ) ; <nl> - / / System . out . println ( " pMemId : " + pMemId . toString ( ) ) ; <nl> + for ( ITypeInfo typeInfo : typeInfos ) { <nl> + HRESULT hr = typeInfo . GetIDsOfNames ( rgszNames , cNames , pMemId ) ; <nl> + if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> + / / System . out . println ( " pMemId : " + pMemId . toString ( ) ) ; <nl> + return ; <nl> + } <nl> + } <nl> + throw new RuntimeException ( " Didn ' t find Help in any of the type infos " ) ; <nl> } <nl> <nl> public void testInvoke ( ) { <nl> @ @ - 120 , 54 + 139 , 63 @ @ public class ITypeInfoTest extends TestCase { <nl> } <nl> <nl> public void testGetDocumentation ( ) { <nl> - ITypeInfo typeInfo = getTypeInfo ( ) ; <nl> + ITypeInfo [ ] typeInfos = getTypeInfos ( ) ; <nl> MEMBERID memid = new MEMBERID ( 0 ) ; <nl> BSTRByReference pBstrName = new BSTRByReference ( ) ; <nl> BSTRByReference pBstrDocString = new BSTRByReference ( ) ; <nl> DWORDByReference pdwHelpContext = new DWORDByReference ( ) ; <nl> BSTRByReference pBstrHelpFile = new BSTRByReference ( ) ; <nl> + for ( ITypeInfo typeInfo : typeInfos ) { <nl> HRESULT hr = typeInfo . GetDocumentation ( memid , pBstrName , <nl> pBstrDocString , pdwHelpContext , pBstrHelpFile ) ; <nl> - <nl> - COMUtils . checkRC ( hr ) ; <nl> - assertEquals ( 0 , hr . intValue ( ) ) ; <nl> - / / System . out . println ( " memid : " + memid . intValue ( ) ) ; <nl> - / / System . out . println ( " pBstrName : " + pBstrName . getValue ( ) ) ; <nl> - / / System . out . println ( " pBstrDocString : " + pBstrDocString . getValue ( ) ) ; <nl> - / / System . out . println ( " pdwHelpContext : " + pdwHelpContext . getValue ( ) ) ; <nl> - / / System . out . println ( " pBstrHelpFile : " + pBstrHelpFile . getValue ( ) ) ; <nl> + if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> + / / System . out . println ( " memid : " + memid . intValue ( ) ) ; <nl> + / / System . out . println ( " pBstrName : " + pBstrName . getValue ( ) ) ; <nl> + / / System . out . println ( " pBstrDocString : " + pBstrDocString . getValue ( ) ) ; <nl> + / / System . out . println ( " pdwHelpContext : " + pdwHelpContext . getValue ( ) ) ; <nl> + / / System . out . println ( " pBstrHelpFile : " + pBstrHelpFile . getValue ( ) ) ; <nl> + return ; <nl> + } <nl> + } <nl> + throw new RuntimeException ( " Didn ' t find documentation in any of the type infos " ) ; <nl> } <nl> <nl> public void testGetDllEntry ( ) { <nl> - ITypeInfo typeInfo = getTypeInfo ( ) ; <nl> + ITypeInfo [ ] typeInfos = getTypeInfos ( ) ; <nl> MEMBERID memid = new MEMBERID ( 0 ) ; <nl> BSTRByReference pBstrDllName = new BSTRByReference ( ) ; <nl> BSTRByReference pBstrName = new BSTRByReference ( ) ; <nl> WORDByReference pwOrdinal = new WORDByReference ( ) ; <nl> - HRESULT hr = typeInfo . GetDllEntry ( memid , INVOKEKIND . INVOKE _ FUNC , <nl> - pBstrDllName , pBstrName , pwOrdinal ) ; <nl> - <nl> - COMUtils . checkRC ( hr ) ; <nl> - assertEquals ( 0 , hr . intValue ( ) ) ; <nl> - / / System . out . println ( " memid : " + memid . intValue ( ) ) ; <nl> - / / System . out . println ( " pBstrDllName : " + pBstrDllName . getValue ( ) ) ; <nl> - / / System . out . println ( " pBstrName : " + pBstrName . getValue ( ) ) ; <nl> - / / System . out . println ( " pwOrdinal : " + pwOrdinal . getValue ( ) ) ; <nl> + for ( ITypeInfo typeInfo : typeInfos ) { <nl> + HRESULT hr = typeInfo . GetDllEntry ( memid , INVOKEKIND . INVOKE _ FUNC , <nl> + pBstrDllName , pBstrName , pwOrdinal ) ; <nl> + if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> + / / System . out . println ( " memid : " + memid . intValue ( ) ) ; <nl> + / / System . out . println ( " pBstrDllName : " + pBstrDllName . getValue ( ) ) ; <nl> + / / System . out . println ( " pBstrName : " + pBstrName . getValue ( ) ) ; <nl> + / / System . out . println ( " pwOrdinal : " + pwOrdinal . getValue ( ) ) ; <nl> + return ; <nl> + } <nl> + } <nl> + throw new RuntimeException ( " Didn ' t find Dll entry for member in any of the type infos " ) ; <nl> } <nl> <nl> public void testGetRefTypeInfo ( ) { <nl> } <nl> <nl> public void testAddressOfMember ( ) { <nl> - ITypeInfo typeInfo = getTypeInfo ( ) ; <nl> + ITypeInfo [ ] typeInfos = getTypeInfos ( ) ; <nl> MEMBERID memid = new MEMBERID ( ) ; <nl> PointerByReference ppv = new PointerByReference ( ) ; <nl> - HRESULT hr = typeInfo . AddressOfMember ( memid , INVOKEKIND . INVOKE _ FUNC , <nl> - ppv ) ; <nl> - <nl> - COMUtils . checkRC ( hr ) ; <nl> - assertEquals ( 0 , hr . intValue ( ) ) ; <nl> - / / System . out . println ( " AddressOfMember : " + ppv . toString ( ) ) ; <nl> + for ( ITypeInfo typeInfo : typeInfos ) { <nl> + HRESULT hr = typeInfo . AddressOfMember ( memid , INVOKEKIND . INVOKE _ FUNC , <nl> + ppv ) ; <nl> + if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> + / / System . out . println ( " AddressOfMember : " + ppv . toString ( ) ) ; <nl> + return ; <nl> + } <nl> + } <nl> + throw new RuntimeException ( " Didn ' t find address for function in any of the type infos " ) ; <nl> } <nl> <nl> public void testCreateInstance ( ) {
diff - - git a / README . md b / README . md <nl> index a5a2e55 . . 4dc0db6 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 21 , 25 + 21 , 28 @ @ Projects Using JNA <nl> = = = = = = = = = = = = = = = = = = <nl> JNA is a mature library with dozens of contributors and hundreds of commercial and non - commercial projects that use it . If you ' re using JNA , feel free to [ tell us about it ] ( http : / / groups . google . com / group / jna - users ) . Include some details about your company , project name , purpose and size and tell us how you use the library . <nl> <nl> - - [ Apache Cassandra ] ( http : / / cassandra . apache . org ) Large - scale NoSQL data store . <nl> - - [ Rococoa ] ( http : / / rococoa . dev . java . net ) Java bindings to the Mac OS X Cocoa framework ( Duncan McGregor ) <nl> - - [ jna - posix ] ( http : / / kenai . com / projects / jna - posix ) Common POSIX Functions for Java <nl> - - [ JNAerator ] ( http : / / jnaerator . googlecode . com / " ) ( pronounced " generator " ) Autogenerates JNA mappings from C headers ( Olivier Chafik ) <nl> - - [ Freedom for Media in Java ] ( http : / / fmj . sf . net ) ( Ken Larson / Dieter Krachtus ) <nl> - - [ gstreamer for Java ] ( http : / / code . google . com / p / gstreamer - java ) ( Wayne Meissner ) <nl> - - [ Videolan ] ( http : / / trac . videolan . org / jvlc / ) JVLC Java Multimedia Library <nl> - - [ SVNKit ] ( http : / / svnkit . com ) Pure Java Subversion client library . <nl> - - [ OmegaT Computer - Aided Translation ] ( http : / / omegat . sf . net ) , which makes use of the [ hunspell spell checker ] ( http : / / hunspell . sf . net ) . <nl> - - [ IntelliJ IDEA ] ( http : / / jetbrains . com ) ( JetBrains ) <nl> - - [ NetBeans IDE ] ( http : / / netbeans . org ) <nl> - - [ Athena Backup ] ( http : / / www . athenabackup . com ) ( Doug Patriarche ) <nl> - - [ USB for Java ] ( https : / / launchpad . net / libusb4j ) ( Mario Boikov ) <nl> + - [ Apache Cassandra ] ( http : / / cassandra . apache . org ) : Large - scale NoSQL data store . <nl> + - [ Rococoa ] ( http : / / rococoa . dev . java . net ) : Java bindings to the Mac OS X Cocoa framework , by Duncan McGregor . <nl> + - [ jna - posix ] ( http : / / kenai . com / projects / jna - posix ) : Common POSIX Functions for Java . <nl> + - [ JNAerator ] ( http : / / jnaerator . googlecode . com ) : Pronounced " generator " , auto - generates JNA mappings from C headers , by Olivier Chafik . <nl> + - [ Freedom for Media in Java ] ( http : / / fmj . sf . net ) by Ken Larson / Dieter Krachtus . <nl> + - [ gstreamer for Java ] ( http : / / code . google . com / p / gstreamer - java ) by Wayne Meissner . <nl> + - [ Videolan ] ( http : / / trac . videolan . org / jvlc / ) : JVLC Java Multimedia Library . <nl> + - [ SVNKit ] ( http : / / svnkit . com ) : Pure Java Subversion client library . <nl> + - [ OmegaT Computer - Aided Translation ] ( http : / / omegat . sf . net ) . <nl> + - [ IntelliJ IDEA ] ( http : / / jetbrains . com ) by JetBrains . <nl> + - [ NetBeans IDE ] ( http : / / netbeans . org ) . <nl> + - [ Athena Backup ] ( http : / / www . athenabackup . com ) by Doug Patriarche . <nl> + - [ USB for Java ] ( https : / / launchpad . net / libusb4j ) by Mario Boikov . <nl> + - [ Waffle ] ( https : / / github . com / dblock / waffle ) : Enables SSO on Windows in Java applications , by Daniel Doubrovkine . <nl> + - <nl> <nl> * Interesting Investigations / Experiments * <nl> - - [ Drive Lego Mindstorm NXT ] ( http : / / epirsch . blogspot . com / 2008 / 02 / jna - love - nxt . html ) ( Emmanuel Pirsch ) <nl> - - [ A JavaFX Clock ] ( http : / / sellmic . com / blog / 2007 / 05 / 22 / javafx - clock - update - now - with - transparency ) ( Augusto Sellhorn ) <nl> - - [ Detect User Inactivity ] ( http : / / ochafik . free . fr / blog / ? p = 98 ) ( Olivier Chafik ) <nl> - - [ IAXClient Applet ] ( http : / / callino . cc / jiaxcapplet / ) ( Wolfgang Pichler ) , providing VOIP for Java . <nl> + <nl> + - [ Drive Lego Mindstorm NXT ] ( http : / / epirsch . blogspot . com / 2008 / 02 / jna - love - nxt . html ) by Emmanuel Pirsch . <nl> + - [ A JavaFX Clock ] ( http : / / sellmic . com / blog / 2007 / 05 / 22 / javafx - clock - update - now - with - transparency ) by Augusto Sellhorn . <nl> + - [ Detect User Inactivity ] ( http : / / ochafik . free . fr / blog / ? p = 98 ) by Olivier Chafik . <nl> + - [ IAXClient Applet ] ( http : / / callino . cc / jiaxcapplet / ) provides VOIP for Java , by Wolfgang Pichler . <nl> <nl> There are also a number of examples and projects within the ` contrib ` directory of the JNA project itself . <nl>
diff - - git a / contrib / platform / . classpath b / contrib / platform / . classpath <nl> index 77917d7 . . 79cee34 100644 <nl> - - - a / contrib / platform / . classpath <nl> + + + b / contrib / platform / . classpath <nl> @ @ - 4 , 6 + 4 , 6 @ @ <nl> 	 < classpathentry kind = " src " output = " build . eclipse / contrib - test - classes " path = " test " / > <nl> 	 < classpathentry kind = " con " path = " org . eclipse . jdt . junit . JUNIT _ CONTAINER / 4 " / > <nl> 	 < classpathentry kind = " con " path = " org . eclipse . jdt . launching . JRE _ CONTAINER " / > <nl> - 	 < classpathentry combineaccessrules = " false " kind = " src " path = " / com . sun . jna " / > <nl> + 	 < classpathentry combineaccessrules = " false " kind = " src " path = " / jnalib " / > <nl> 	 < classpathentry kind = " output " path = " bin " / > <nl> < / classpath >
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> index 85f50dc . . e5f7732 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> @ @ - 116 , 7 + 116 , 7 @ @ public class ITypeInfoTest extends TestCase { <nl> } <nl> <nl> public void testInvoke ( ) { <nl> - fail ( " not implemented due complexity . " ) ; <nl> + 	 <nl> } <nl> <nl> public void testGetDocumentation ( ) { <nl> @ @ - 171 , 7 + 171 , 7 @ @ public class ITypeInfoTest extends TestCase { <nl> } <nl> <nl> public void testCreateInstance ( ) { <nl> - fail ( " not implemented due complexity . " ) ; <nl> + <nl> } <nl> <nl> public void testGetMops ( ) { <nl> @ @ - 189 , 14 + 189 , 14 @ @ public class ITypeInfoTest extends TestCase { <nl> } <nl> <nl> public void testReleaseTypeAttr ( ) { <nl> - fail ( " not implemented due complexity . " ) ; <nl> + <nl> } <nl> <nl> public void testReleaseFuncDesc ( ) { <nl> - fail ( " not implemented due complexity . " ) ; <nl> + <nl> } <nl> <nl> public void testReleaseVarDesc ( ) { <nl> - fail ( " not implemented due complexity . " ) ; <nl> + <nl> } <nl> } <nl> \ No newline at end of file
diff - - git a / CHANGES . md b / CHANGES . md <nl> index fae7c2d . . 9357f52 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 40 , 6 + 40 , 7 @ @ Bug Fixes <nl> * [ # 382 ] ( https : / / github . com / twall / jna / pull / 382 ) : Fixed memory allocation in ` com . sun . jna . platform . win32 . WTypes . LPWSTR ` and ` LPSTR ` constructors - [ @ junak - michal ] ( https : / / github . com / junak - michal ) . <nl> * Fix publish doc links - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> * [ # 388 ] ( https : / / github . com / twall / jna / issues / 388 ) : Ensure native library always opened with provided flags - [ @ zolyfarkas ] ( https : / / github . com / zolyfarkas ) . <nl> + * [ # 403 ] ( https : / / github . com / twall / jna / pull / 403 ) : Make com . sun . jna . platform . win32 . COM . COMUtils . SUCCEEDED and FAILED conform to MSDN specification for said macros - [ @ lwahonen ] ( https : / / github . com / lwahonen ) . <nl> <nl> Release 4 . 1 <nl> = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> index eddbbd4 . . 9bdfcac 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBindingBaseObject . java <nl> @ @ - 73 , 8 + 73 , 7 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> int dwClsContext ) { <nl> / / Initialize COM for this thread . . . <nl> HRESULT hr = Ole32 . INSTANCE . CoInitializeEx ( null , Ole32 . COINIT _ APARTMENTTHREADED ) ; <nl> - if ( hr . intValue ( ) = = 1 ) / / Already initialized , no problem <nl> - hr = new HRESULT ( 0 ) ; <nl> + <nl> if ( COMUtils . FAILED ( hr ) ) { <nl> Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> throw new COMException ( " CoInitialize ( ) failed ! " ) ; <nl> @ @ - 108 , 8 + 107 , 6 @ @ public class COMBindingBaseObject extends COMInvoker { <nl> int dwClsContext ) throws COMException { <nl> / / Initialize COM for this thread . . . <nl> HRESULT hr = Ole32 . INSTANCE . CoInitializeEx ( null , Ole32 . COINIT _ APARTMENTTHREADED ) ; <nl> - if ( hr . intValue ( ) = = 1 ) / / Already initialized , no problem <nl> - hr = new HRESULT ( 0 ) ; <nl> <nl> if ( COMUtils . FAILED ( hr ) ) { <nl> this . release ( ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java <nl> index b362d0c . . d2e15e4 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java <nl> @ @ - 38 , 6 + 38 , 8 @ @ public abstract class COMUtils { <nl> <nl> / * * The Constant CO _ E _ NOTINITIALIZED . * / <nl> public static final int S _ OK = 0 ; <nl> + public static final int S _ FALSE = 1 ; <nl> + public static final int E _ UNEXPECTED = 0x8000FFFF ; <nl> <nl> / * * <nl> * Succeeded . <nl> @ @ - 58 , 10 + 60 , 7 @ @ public abstract class COMUtils { <nl> * @ return true , if successful <nl> * / <nl> public static boolean SUCCEEDED ( int hr ) { <nl> - if ( hr = = S _ OK ) <nl> - return true ; <nl> - else <nl> - return false ; <nl> + return hr > = 0 ; <nl> } <nl> <nl> / * * <nl> @ @ - 83 , 7 + 82 , 7 @ @ public abstract class COMUtils { <nl> * @ return true , if successful <nl> * / <nl> public static boolean FAILED ( int hr ) { <nl> - return ( hr ! = S _ OK ) ; <nl> + return hr < 0 ; <nl> } <nl> <nl> / * * <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMUtilsTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMUtilsTest . java <nl> new file mode 100644 <nl> index 0000000 . . 56aac85 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMUtilsTest . java <nl> @ @ - 0 , 0 + 1 , 18 @ @ <nl> + package com . sun . jna . platform . win32 . COM ; <nl> + <nl> + import junit . framework . TestCase ; <nl> + <nl> + public class COMUtilsTest extends TestCase { <nl> + <nl> + public void testSUCCEEDED ( ) throws Exception { <nl> + assertTrue ( COMUtils . SUCCEEDED ( COMUtils . S _ OK ) ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( COMUtils . S _ FALSE ) ) ; <nl> + assertFalse ( COMUtils . SUCCEEDED ( COMUtils . E _ UNEXPECTED ) ) ; <nl> + } <nl> + <nl> + public void testFAILED ( ) throws Exception { <nl> + assertFalse ( COMUtils . FAILED ( COMUtils . S _ OK ) ) ; <nl> + assertFalse ( COMUtils . FAILED ( COMUtils . S _ FALSE ) ) ; <nl> + assertTrue ( COMUtils . FAILED ( COMUtils . E _ UNEXPECTED ) ) ; <nl> + } <nl> + } <nl> \ No newline at end of file
diff - - git a / src / com / sun / jna / overview . html b / src / com / sun / jna / overview . html <nl> index e66bd1b . . 103c2c5 100644 <nl> - - - a / src / com / sun / jna / overview . html <nl> + + + b / src / com / sun / jna / overview . html <nl> @ @ - 95 , 7 + 95 , 9 @ @ public interface CLibrary extends Library { <nl> CLibrary INSTANCE = ( CLibrary ) Native . loadLibrary ( " c " , CLibrary . class ) ; <nl> } <nl> <nl> - / / Alternative 2 : direct - mapped class <nl> + / / Alternative 2 : direct - mapped class ( uses a concrete class rather than an <nl> + / / interface , with a slight variation in < a href = " # direct - mapping " > method <nl> + / / declarations < / a > ) . <nl> public class CLibrary { <nl> static { <nl> Native . register ( " c " ) ; <nl> @ @ - 143 , 7 + 145 , 9 @ @ public interface CLibrary extends Library { <nl> int atol ( String s ) ; <nl> } <nl> < / pre > < / code > < / blockquote > <nl> - Alternatively , you can map directly to a declared native method : < br > <nl> + < a name = " direct - mapping " > < / a > <nl> + Alternatively , you can map directly to a declared native method <nl> + ( with < a href = " / twall / jna / blob / master / www / DirectMapping . md " > some restrictions < / a > ) : < br > <nl> < blockquote > < code > < pre > <nl> public class CLibrary { <nl> public static native int atol ( String s ) ; <nl> @ @ - 385 , 6 + 389 , 8 @ @ interface CLibrary extends Library { <nl> } <nl> < / pre > < / code > < / blockquote > <nl> <nl> + < em > Varargs are not supported when using < a href = " / twall / jna / blob / master / www / DirectMapping . md " > Direct mapping < / a > . < / em > <nl> + <nl> < a name = " structures " > < / a > <nl> < h3 > Structures < / h3 > <nl>
diff - - git a / lib / native / android - arm . jar b / lib / native / android - arm . jar <nl> index 1d7a358 . . 043f030 100755 <nl> Binary files a / lib / native / android - arm . jar and b / lib / native / android - arm . jar differ <nl> diff - - git a / lib / native / android - x86 . jar b / lib / native / android - x86 . jar <nl> index 87cdd35 . . b1ac1c4 100755 <nl> Binary files a / lib / native / android - x86 . jar and b / lib / native / android - x86 . jar differ
diff - - git a / CHANGES . md b / CHANGES . md <nl> old mode 100644 <nl> new mode 100755 <nl> index a73c961 . . fae7c2d <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 23 , 6 + 23 , 7 @ @ Features <nl> * [ # 365 ] ( https : / / github . com / twall / jna / pull / 365 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . GetComputerNameEx ` support - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 368 ] ( https : / / github . com / twall / jna / pull / 368 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . VirtualQueryEx ` , ` com . sun . jna . platform . win32 . WinNT . MEMORY _ BASIC _ INFORMATION ` and ` MEM _ COMMIT ` , ` MEM _ FREE ` , ` MEM _ RESERVE ` , ` MEM _ IMAGE ` , ` MEM _ MAPPED ` , ` MEM _ PRIVATE ` constants to ` com . sun . jna . platform . win32 . WinNT ` - [ @ apsk ] ( https : / / github . com / apsk ) . <nl> * Allow interoperation with JNI revision changes - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ # 391 ] ( https : / / github . com / twall / jna / pull / 391 ) : Added ` EncryptFile ` , ` DecryptFile ` , ` FileEncryptionStatus ` , ` EncryptionDisable ` , ` OpenEncryptedFileRaw ` , ` ReadEncryptedFileRaw ` , ` WriteEncryptedFileRaw ` , and ` CloseEncryptedFileRaw ` to ` com . sun . jna . platform . win32 . Advapi32 ` with related ` Advapi32Util ` helpers - [ @ khalidq ] ( https : / / github . com / khalidq ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> @ @ - 36 , 6 + 37 , 8 @ @ Bug Fixes <nl> * Disable WebStart tests - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Dispose all native resources when JNA ' s native library is unloaded - Paul Gr ü tter of signotec GmbH and [ @ twall ] ( https : / / github . com / twall ) . This fixes a number of seemingly random , sporadic crashes on windows . <nl> * Weakly hold registered Direct - mapped classes - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ # 382 ] ( https : / / github . com / twall / jna / pull / 382 ) : Fixed memory allocation in ` com . sun . jna . platform . win32 . WTypes . LPWSTR ` and ` LPSTR ` constructors - [ @ junak - michal ] ( https : / / github . com / junak - michal ) . <nl> + * Fix publish doc links - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> * [ # 388 ] ( https : / / github . com / twall / jna / issues / 388 ) : Ensure native library always opened with provided flags - [ @ zolyfarkas ] ( https : / / github . com / zolyfarkas ) . <nl> <nl> Release 4 . 1 <nl> diff - - git a / README . md b / README . md <nl> index 557b447 . . 7f412c0 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 93 , 7 + 93 , 7 @ @ Using the Library <nl> * [ Platform Library ] ( https : / / github . com / twall / jna / blob / master / www / PlatformLibrary . md ) <nl> * [ Direct Method Mapping ] ( https : / / github . com / twall / jna / blob / master / www / DirectMapping . md ) ( Optimization ) <nl> * [ Frequently Asked Questions ( FAQ ) ] ( https : / / github . com / twall / jna / blob / master / www / FrequentlyAskedQuestions . md ) <nl> - * [ Avoiding Crashes ] ( http : / / twall . github . com / jna / 4 . 1 . 0 / javadoc / overview - summary . html # crash - protection ) <nl> + * [ Avoiding Crashes ] ( http : / / twall . github . com / jna / 4 . 1 . 0 / overview - summary . html # crash - protection ) <nl> <nl> Primary Documentation ( JavaDoc ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> diff - - git a / build . xml b / build . xml <nl> index 740e9f5 . . 61e18b2 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 371 , 6 + 371 , 10 @ @ com / sun / jna / win32 - x86 / jnidispatch . dll ; <nl> processor = x86 ; osname = win32 , <nl> com / sun / jna / win32 - x86 - 64 / jnidispatch . dll ; <nl> processor = x86 - 64 ; osname = win32 , <nl> + com / sun / jna / win32 - x86 / jnidispatch . dll ; <nl> + processor = x86 ; osname = win , <nl> + com / sun / jna / win32 - x86 - 64 / jnidispatch . dll ; <nl> + processor = x86 - 64 ; osname = win , <nl> com / sun / jna / w32ce - arm / jnidispatch . dll ; <nl> processor = arm ; osname = wince , <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> old mode 100644 <nl> new mode 100755 <nl> index d34c06d . . cb5556b <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> @ @ - 17 , 6 + 17 , 8 @ @ import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> import com . sun . jna . WString ; <nl> import com . sun . jna . platform . win32 . WinBase . SECURITY _ ATTRIBUTES ; <nl> + import com . sun . jna . platform . win32 . WinBase . FE _ EXPORT _ FUNC ; <nl> + import com . sun . jna . platform . win32 . WinBase . FE _ IMPORT _ FUNC ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLEByReference ; <nl> import com . sun . jna . platform . win32 . WinNT . PSID ; <nl> @ @ - 35 , 6 + 37 , 7 @ @ import com . sun . jna . win32 . W32APIOptions ; <nl> import static com . sun . jna . platform . win32 . WinDef . BOOLByReference ; <nl> import static com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> import static com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> + import static com . sun . jna . platform . win32 . WinDef . ULONG ; <nl> import static com . sun . jna . platform . win32 . WinNT . GENERIC _ MAPPING ; <nl> import static com . sun . jna . platform . win32 . WinNT . PRIVILEGE _ SET ; <nl> <nl> @ @ - 1558 , 4 + 1561 , 153 @ @ public interface Advapi32 extends StdCallLibrary { <nl> PRIVILEGE _ SET PrivilegeSet , <nl> DWORDByReference PrivilegeSetLength , <nl> DWORDByReference GrantedAccess , BOOLByReference AccessStatus ) ; <nl> + 	 <nl> + 	 / * * <nl> + 	 * Encrypts a file or directory . All data streams in a file are encrypted . All <nl> + 	 * new files created in an encrypted directory are encrypted . <nl> + 	 * <nl> + 	 * @ param lpFileName <nl> + 	 * The name of the file or directory to be encrypted . <nl> + 	 * @ return If the function succeeds , the return value is nonzero . If the <nl> + 	 * function fails , the return value is zero . To get extended error <nl> + 	 * information , call GetLastError . <nl> + 	 * / <nl> + 	 public boolean EncryptFile ( WString lpFileName ) ; <nl> + <nl> + 	 / * * <nl> + 	 * Decrypts an encrypted file or directory . <nl> + 	 * <nl> + 	 * @ param lpFileName <nl> + 	 * The name of the file or directory to be decrypted . <nl> + 	 * @ param dwReserved <nl> + 	 * Reserved ; must be zero . <nl> + 	 * @ return If the function succeeds , the return value is nonzero . If the <nl> + 	 * function fails , the return value is zero . To get extended error <nl> + 	 * information , call GetLastError . <nl> + 	 * / <nl> + 	 public boolean DecryptFile ( WString lpFileName , DWORD dwReserved ) ; <nl> + <nl> + 	 / * * <nl> + 	 * Retrieves the encryption status of the specified file . <nl> + 	 * <nl> + 	 * @ param lpFileName <nl> + 	 * The name of the file . <nl> + 	 * @ param lpStatus <nl> + 	 * A pointer to a variable that receives the encryption status of the <nl> + 	 * file . <nl> + 	 * @ return If the function succeeds , the return value is nonzero . If the <nl> + 	 * function fails , the return value is zero . To get extended error <nl> + 	 * information , call GetLastError . <nl> + 	 * / <nl> + 	 public boolean FileEncryptionStatus ( WString lpFileName , DWORDByReference lpStatus ) ; <nl> + <nl> + 	 / * * <nl> + 	 * Disables or enables encryption of the specified directory and the files in <nl> + 	 * it . It does not affect encryption of subdirectories below the indicated <nl> + 	 * directory . <nl> + 	 * <nl> + 	 * @ param DirPath <nl> + 	 * The name of the directory for which to enable or disable <nl> + 	 * encryption . <nl> + 	 * @ param Disable <nl> + 	 * Indicates whether to disable encryption ( TRUE ) or enable it <nl> + 	 * ( FALSE ) . <nl> + 	 * @ return If the function succeeds , the return value is nonzero . If the <nl> + 	 * function fails , the return value is zero . To get extended error <nl> + 	 * information , call GetLastError . <nl> + 	 * / <nl> + 	 public boolean EncryptionDisable ( WString DirPath , boolean Disable ) ; <nl> + <nl> + 	 / * * <nl> + 	 * Opens an encrypted file in order to backup ( export ) or restore ( import ) the <nl> + 	 * file . This is one of a group of Encrypted File System ( EFS ) functions that <nl> + 	 * is intended to implement backup and restore functionality , while <nl> + 	 * maintaining files in their encrypted state . <nl> + 	 * <nl> + 	 * @ param lpFileName <nl> + 	 * The name of the file to be opened . The string must consist of <nl> + 	 * characters from the Windows character set . <nl> + 	 * @ param ulFlags <nl> + 	 * The operation to be performed . <nl> + 	 * @ param pvContext <nl> + 	 * The address of a context block that must be presented in subsequent <nl> + 	 * calls to ReadEncryptedFileRaw , WriteEncryptedFileRaw , or <nl> + 	 * CloseEncryptedFileRaw . Do not modify it . <nl> + 	 * @ return If the function succeeds , it returns ERROR _ SUCCESS . If the function <nl> + 	 * fails , it returns a nonzero error code defined in WinError . h . You can use <nl> + 	 * FormatMessage with the FORMAT _ MESSAGE _ FROM _ SYSTEM flag to get a generic <nl> + 	 * text description of the error . <nl> + 	 * / <nl> + 	 public int OpenEncryptedFileRaw ( WString lpFileName , ULONG ulFlags , <nl> + PointerByReference pvContext ) ; <nl> + <nl> + 	 / * * <nl> + 	 * Backs up ( export ) encrypted files . This is one of a group of Encrypted File <nl> + 	 * System ( EFS ) functions that is intended to implement backup and restore <nl> + 	 * functionality , while maintaining files in their encrypted state . <nl> + 	 * <nl> + 	 * @ param pfExportCallback <nl> + 	 * A pointer to the export callback function . The system calls the <nl> + 	 * callback function multiple times , each time passing a block of the <nl> + 	 * file ' s data to the callback function until the entire file has been <nl> + 	 * read . For more information , see ExportCallback . <nl> + 	 * @ param pvCallbackContext <nl> + 	 * A pointer to an application - defined and allocated context block . <nl> + 	 * The system passes this pointer to the callback function as a <nl> + 	 * parameter so that the callback function can have access to <nl> + 	 * application - specific data . This can be a structure and can contain <nl> + 	 * any data the application needs , such as the handle to the file that <nl> + 	 * will contain the backup copy of the encrypted file . <nl> + 	 * @ param pvContext <nl> + 	 * A pointer to a system - defined context block . The context block is <nl> + 	 * returned by the OpenEncryptedFileRaw function . Do not modify it . <nl> + 	 * @ return If the function succeeds , the return value is ERROR _ SUCCESS . If the <nl> + 	 * function fails , it returns a nonzero error code defined in WinError . h . You <nl> + 	 * can use FormatMessage with the FORMAT _ MESSAGE _ FROM _ SYSTEM flag to get a <nl> + 	 * generic text description of the error . <nl> + 	 * / <nl> + 	 public int ReadEncryptedFileRaw ( FE _ EXPORT _ FUNC pfExportCallback , <nl> + Pointer pvCallbackContext , Pointer pvContext ) ; <nl> + <nl> + 	 / * * <nl> + 	 * Restores ( import ) encrypted files . This is one of a group of Encrypted File <nl> + 	 * System ( EFS ) functions that is intended to implement backup and restore <nl> + 	 * functionality , while maintaining files in . <nl> + 	 * <nl> + 	 * @ param pfImportCallback <nl> + 	 * A pointer to the import callback function . The system calls the <nl> + 	 * callback function multiple times , each time passing a buffer that <nl> + 	 * will be filled by the callback function with a portion of backed - up <nl> + 	 * file ' s data . When the callback function signals that the entire <nl> + 	 * file has been processed , it tells the system that the restore <nl> + 	 * operation is finished . For more information , see ImportCallback . <nl> + 	 * @ param pvCallbackContext <nl> + 	 * A pointer to an application - defined and allocated context block . <nl> + 	 * The system passes this pointer to the callback function as a <nl> + 	 * parameter so that the callback function can have access to <nl> + 	 * application - specific data . This can be a structure and can contain <nl> + 	 * any data the application needs , such as the handle to the file that <nl> + 	 * will contain the backup copy of the encrypted file . <nl> + 	 * @ param pvContext <nl> + 	 * A pointer to a system - defined context block . The context block is <nl> + 	 * returned by the OpenEncryptedFileRaw function . Do not modify it . <nl> + 	 * @ return If the function succeeds , the return value is ERROR _ SUCCESS . If the <nl> + 	 * function fails , it returns a nonzero error code defined in WinError . h . You <nl> + 	 * can use FormatMessage with the FORMAT _ MESSAGE _ FROM _ SYSTEM flag to get a <nl> + 	 * generic text description of the error . <nl> + 	 * / <nl> + 	 public int WriteEncryptedFileRaw ( FE _ IMPORT _ FUNC pfImportCallback , <nl> + Pointer pvCallbackContext , Pointer pvContext ) ; <nl> + <nl> + 	 / * * <nl> + 	 * Closes an encrypted file after a backup or restore operation , and frees <nl> + 	 * associated system resources . This is one of a group of Encrypted File <nl> + 	 * System ( EFS ) functions that is intended to implement backup and restore <nl> + 	 * functionality , while maintaining files in their encrypted state . <nl> + 	 * <nl> + 	 * @ param pvContext <nl> + 	 * A pointer to a system - defined context block . The <nl> + 	 * OpenEncryptedFileRaw function returns the context block . <nl> + 	 * / <nl> + 	 public void CloseEncryptedFileRaw ( Pointer pvContext ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> old mode 100644 <nl> new mode 100755 <nl> index c28e348 . . 6b08e38 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 12 , 7 + 12 , 9 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> + import java . io . ByteArrayOutputStream ; <nl> import java . io . File ; <nl> + import java . io . IOException ; <nl> import java . util . ArrayList ; <nl> import java . util . HashMap ; <nl> import java . util . Iterator ; <nl> @ @ - 37 , 6 + 39 , 7 @ @ import com . sun . jna . platform . win32 . WinNT . SID _ AND _ ATTRIBUTES ; <nl> import com . sun . jna . platform . win32 . WinNT . SID _ NAME _ USE ; <nl> import com . sun . jna . platform . win32 . WinReg . HKEY ; <nl> import com . sun . jna . platform . win32 . WinReg . HKEYByReference ; <nl> + import com . sun . jna . ptr . ByteByReference ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . LongByReference ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> @ @ - 2185 , 4 + 2188 , 159 @ @ public abstract class Advapi32Util { <nl> <nl> return hasAccess ; <nl> } <nl> + 	 <nl> + / * * <nl> + * Encrypts a file or directory . <nl> + * <nl> + * @ param file <nl> + * The file or directory to encrypt . <nl> + * / <nl> + public static void encryptFile ( File file ) { <nl> + WString lpFileName = new WString ( file . getAbsolutePath ( ) ) ; <nl> + if ( ! Advapi32 . INSTANCE . EncryptFile ( lpFileName ) ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Decrypts an encrypted file or directory . <nl> + * <nl> + * @ param file <nl> + * The file or directory to decrypt . <nl> + * / <nl> + public static void decryptFile ( File file ) { <nl> + WString lpFileName = new WString ( file . getAbsolutePath ( ) ) ; <nl> + if ( ! Advapi32 . INSTANCE . DecryptFile ( lpFileName , new DWORD ( 0 ) ) ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Checks the encryption status of a file . <nl> + * <nl> + * @ param file <nl> + * The file to check the status for . <nl> + * @ return The status of the file . <nl> + * / <nl> + public static int fileEncryptionStatus ( File file ) { <nl> + DWORDByReference status = new DWORDByReference ( ) ; <nl> + WString lpFileName = new WString ( file . getAbsolutePath ( ) ) ; <nl> + if ( ! Advapi32 . INSTANCE . FileEncryptionStatus ( lpFileName , status ) ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + return status . getValue ( ) . intValue ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Disables or enables encryption of the specified directory and the files in <nl> + * it . <nl> + * <nl> + * @ param directory <nl> + * The directory for which to enable or disable encryption . <nl> + * @ param disable <nl> + * TRUE to disable encryption . FALSE to enable it . <nl> + * / <nl> + public static void disableEncryption ( File directory , boolean disable ) { <nl> + WString dirPath = new WString ( directory . getAbsolutePath ( ) ) ; <nl> + if ( ! Advapi32 . INSTANCE . EncryptionDisable ( dirPath , disable ) ) { <nl> + throw new Win32Exception ( Native . getLastError ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Backup an encrypted file or folder without decrypting it . A file named <nl> + * " bar / sample . text " will be backed - up to " destDir / sample . text " . A directory <nl> + * named " bar " will be backed - up to " destDir / bar " . This method is NOT <nl> + * recursive . If you have an encrypted directory with encrypted files , this <nl> + * method must be called once for the directory , and once for each encrypted <nl> + * file to be backed - up . <nl> + * <nl> + * @ param src <nl> + * The encrypted file or directory to backup . <nl> + * @ param destDir <nl> + * The directory where the backup will be saved . <nl> + * / <nl> + public static void backupEncryptedFile ( File src , File destDir ) { <nl> + if ( ! destDir . isDirectory ( ) ) { <nl> + throw new IllegalArgumentException ( " destDir must be a directory . " ) ; <nl> + } <nl> + <nl> + ULONG readFlag = new ULONG ( 0 ) ; / / Open the file for export ( backup ) <nl> + ULONG writeFlag = new ULONG ( CREATE _ FOR _ IMPORT ) ; / / Import ( restore ) file <nl> + <nl> + if ( src . isDirectory ( ) ) { <nl> + writeFlag . setValue ( CREATE _ FOR _ IMPORT | CREATE _ FOR _ DIR ) ; <nl> + } <nl> + <nl> + / / open encrypted file for export <nl> + WString srcFileName = new WString ( src . getAbsolutePath ( ) ) ; <nl> + PointerByReference pvContext = new PointerByReference ( ) ; <nl> + if ( Advapi32 . INSTANCE . OpenEncryptedFileRaw ( srcFileName , readFlag , <nl> + pvContext ) ! = W32Errors . ERROR _ SUCCESS ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + <nl> + / / read encrypted file <nl> + final ByteArrayOutputStream outputStream = new ByteArrayOutputStream ( ) ; <nl> + FE _ EXPORT _ FUNC pfExportCallback = new FE _ EXPORT _ FUNC ( ) { <nl> + @ Override <nl> + public DWORD callback ( ByteByReference pbData , Pointer pvCallbackContext , <nl> + ULONG ulLength ) { <nl> + byte [ ] arr = pbData . getPointer ( ) . getByteArray ( 0 , ulLength . intValue ( ) ) ; <nl> + try { <nl> + outputStream . write ( arr ) ; <nl> + } catch ( IOException e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + return new DWORD ( W32Errors . ERROR _ SUCCESS ) ; <nl> + } <nl> + } ; <nl> + <nl> + if ( Advapi32 . INSTANCE . ReadEncryptedFileRaw ( pfExportCallback , null , <nl> + pvContext . getValue ( ) ) ! = W32Errors . ERROR _ SUCCESS ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + <nl> + / / close <nl> + try { <nl> + outputStream . close ( ) ; <nl> + } catch ( IOException e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + Advapi32 . INSTANCE . CloseEncryptedFileRaw ( pvContext . getValue ( ) ) ; <nl> + <nl> + / / open file for import <nl> + WString destFileName = new WString ( destDir . getAbsolutePath ( ) + File . separator <nl> + + src . getName ( ) ) ; <nl> + pvContext = new PointerByReference ( ) ; <nl> + if ( Advapi32 . INSTANCE . OpenEncryptedFileRaw ( destFileName , writeFlag , <nl> + pvContext ) ! = W32Errors . ERROR _ SUCCESS ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + <nl> + / / write encrypted file <nl> + final IntByReference elementsReadWrapper = new IntByReference ( 0 ) ; <nl> + FE _ IMPORT _ FUNC pfImportCallback = new FE _ IMPORT _ FUNC ( ) { <nl> + @ Override <nl> + public DWORD callback ( ByteByReference pbData , Pointer pvCallbackContext , <nl> + ULONGByReference ulLength ) { <nl> + int elementsRead = elementsReadWrapper . getValue ( ) ; <nl> + int remainingElements = outputStream . size ( ) - elementsRead ; <nl> + int length = Math . min ( remainingElements , ulLength . getValue ( ) . intValue ( ) ) ; <nl> + pbData . getPointer ( ) . write ( 0 , outputStream . toByteArray ( ) , elementsRead , <nl> + length ) ; <nl> + elementsReadWrapper . setValue ( elementsRead + length ) ; <nl> + ulLength . setValue ( new ULONG ( length ) ) ; <nl> + return new DWORD ( W32Errors . ERROR _ SUCCESS ) ; <nl> + } <nl> + } ; <nl> + <nl> + if ( Advapi32 . INSTANCE . WriteEncryptedFileRaw ( pfImportCallback , null , <nl> + pvContext . getValue ( ) ) ! = W32Errors . ERROR _ SUCCESS ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + <nl> + / / close <nl> + Advapi32 . INSTANCE . CloseEncryptedFileRaw ( pvContext . getValue ( ) ) ; <nl> + } <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> index e997f95 . . c487312 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> @ @ - 135 , 7 + 135 , 7 @ @ public interface WTypes { <nl> } <nl> <nl> public LPSTR ( String value ) { <nl> - this ( ) ; <nl> + this ( new Memory ( ( value . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ) ; <nl> this . setValue ( value ) ; <nl> } <nl> <nl> @ @ - 172 , 7 + 172 , 7 @ @ public interface WTypes { <nl> } <nl> <nl> public LPWSTR ( String value ) { <nl> - this ( ) ; <nl> + this ( new Memory ( ( value . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ) ; <nl> this . setValue ( value ) ; <nl> } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> old mode 100644 <nl> new mode 100755 <nl> index 4f32e37 . . 80a936e <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinBase . java <nl> @ @ - 153 , 6 + 153 , 23 @ @ public interface WinBase extends StdCallLibrary , WinDef , BaseTSD { <nl> int CREATE _ DEFAULT _ ERROR _ MODE = 0x04000000 ; <nl> int CREATE _ NO _ WINDOW = 0x08000000 ; <nl> <nl> + / * File encryption status * / <nl> + int FILE _ ENCRYPTABLE = 0 ; <nl> + int FILE _ IS _ ENCRYPTED = 1 ; <nl> + int FILE _ SYSTEM _ ATTR = 2 ; <nl> + int FILE _ ROOT _ DIR = 3 ; <nl> + int FILE _ SYSTEM _ DIR = 4 ; <nl> + int FILE _ UNKNOWN = 5 ; <nl> + int FILE _ SYSTEM _ NOT _ SUPPORT = 6 ; <nl> + int FILE _ USER _ DISALLOWED = 7 ; <nl> + int FILE _ READ _ ONLY = 8 ; <nl> + int FILE _ DIR _ DISALOWED = 9 ; <nl> + <nl> + / * Open encrypted files raw flags * / <nl> + int CREATE _ FOR _ IMPORT = 1 ; <nl> + int CREATE _ FOR _ DIR = 2 ; <nl> + int OVERWRITE _ HIDDEN = 4 ; <nl> + <nl> / * Invalid return values * / <nl> int INVALID _ FILE _ SIZE = 0xFFFFFFFF ; <nl> int INVALID _ SET _ FILE _ POINTER = 0xFFFFFFFF ; <nl> @ @ - 986 , 4 + 1003 , 28 @ @ public interface WinBase extends StdCallLibrary , WinDef , BaseTSD { <nl> * / <nl> int ComputerNameMax = 8 ; <nl> } <nl> + <nl> + / * * <nl> + * An application - defined callback function used with ReadEncryptedFileRaw . <nl> + * The system calls ExportCallback one or more times , each time with a block <nl> + * of the encrypted file ' s data , until it has received all of the file data . <nl> + * ExportCallback writes the encrypted file ' s data to another storage media , <nl> + * usually for purposes of backing up the file . <nl> + * / <nl> + public interface FE _ EXPORT _ FUNC extends Callback { <nl> + public DWORD callback ( ByteByReference pbData , Pointer pvCallbackContext , <nl> + ULONG ulLength ) ; <nl> + } <nl> + <nl> + / * * <nl> + * An application - defined callback function used with WriteEncryptedFileRaw . <nl> + * The system calls ImportCallback one or more times , each time to retrieve a <nl> + * portion of a backup file ' s data . ImportCallback reads the data from a <nl> + * backup file sequentially and restores the data , and the system continues <nl> + * calling it until it has read all of the backup file data . <nl> + * / <nl> + public interface FE _ IMPORT _ FUNC extends Callback { <nl> + public DWORD callback ( ByteByReference pbData , Pointer pvCallbackContext , <nl> + ULONGByReference ulLength ) ; <nl> + } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> old mode 100644 <nl> new mode 100755 <nl> index c144ee1 . . c09dbee <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> @ @ - 12 , 7 + 12 , 10 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> + import java . io . ByteArrayOutputStream ; <nl> import java . io . File ; <nl> + import java . io . FileWriter ; <nl> + import java . io . IOException ; <nl> <nl> import junit . framework . TestCase ; <nl> <nl> @ @ - 38 , 6 + 41 , 7 @ @ import com . sun . jna . platform . win32 . WinReg . HKEYByReference ; <nl> import com . sun . jna . platform . win32 . Winsvc . SC _ HANDLE ; <nl> import com . sun . jna . platform . win32 . Winsvc . SC _ STATUS _ TYPE ; <nl> import com . sun . jna . platform . win32 . Winsvc . SERVICE _ STATUS _ PROCESS ; <nl> + import com . sun . jna . ptr . ByteByReference ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> <nl> @ @ - 906 , 4 + 910 , 225 @ @ public class Advapi32Test extends TestCase { <nl> assertEquals ( WinError . ERROR _ INVALID _ HANDLE , Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> } <nl> <nl> + public void testEncryptFile ( ) throws Exception { <nl> + / / create a temp file <nl> + File file = createTempFile ( ) ; <nl> + WString lpFileName = new WString ( file . getAbsolutePath ( ) ) ; <nl> + <nl> + / / encrypt a read only file <nl> + file . setWritable ( false ) ; <nl> + assertFalse ( Advapi32 . INSTANCE . EncryptFile ( lpFileName ) ) ; <nl> + assertEquals ( WinError . ERROR _ FILE _ READ _ ONLY , Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + <nl> + / / encrypt a writable file <nl> + file . setWritable ( true ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . EncryptFile ( lpFileName ) ) ; <nl> + <nl> + file . delete ( ) ; <nl> + } <nl> + <nl> + public void testDecryptFile ( ) throws Exception { <nl> + / / create an encrypted file <nl> + File file = createTempFile ( ) ; <nl> + WString lpFileName = new WString ( file . getAbsolutePath ( ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . EncryptFile ( lpFileName ) ) ; <nl> + <nl> + / / decrypt a read only file <nl> + file . setWritable ( false ) ; <nl> + assertFalse ( Advapi32 . INSTANCE . DecryptFile ( lpFileName , new DWORD ( 0 ) ) ) ; <nl> + assertEquals ( WinError . ERROR _ FILE _ READ _ ONLY , Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + <nl> + / / decrypt <nl> + file . setWritable ( true ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . DecryptFile ( lpFileName , new DWORD ( 0 ) ) ) ; <nl> + <nl> + file . delete ( ) ; <nl> + } <nl> + <nl> + public void testFileEncryptionStatus ( ) throws Exception { <nl> + DWORDByReference lpStatus = new DWORDByReference ( ) ; <nl> + <nl> + / / create a temp file <nl> + File file = createTempFile ( ) ; <nl> + WString lpFileName = new WString ( file . getAbsolutePath ( ) ) ; <nl> + <nl> + / / unencrypted file <nl> + assertTrue ( Advapi32 . INSTANCE . FileEncryptionStatus ( lpFileName , lpStatus ) ) ; <nl> + assertEquals ( FILE _ ENCRYPTABLE , lpStatus . getValue ( ) . intValue ( ) ) ; <nl> + <nl> + / / read only file <nl> + file . setWritable ( false ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . FileEncryptionStatus ( lpFileName , lpStatus ) ) ; <nl> + assertEquals ( FILE _ READ _ ONLY , lpStatus . getValue ( ) . intValue ( ) ) ; <nl> + <nl> + / / encrypted file <nl> + file . setWritable ( true ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . EncryptFile ( lpFileName ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . FileEncryptionStatus ( lpFileName , lpStatus ) ) ; <nl> + assertEquals ( FILE _ IS _ ENCRYPTED , lpStatus . getValue ( ) . intValue ( ) ) ; <nl> + <nl> + file . delete ( ) ; <nl> + } <nl> + <nl> + public void testEncryptionDisable ( ) throws Exception { <nl> + DWORDByReference lpStatus = new DWORDByReference ( ) ; <nl> + <nl> + / / create a temp dir <nl> + String filePath = System . getProperty ( " java . io . tmpdir " ) + File . separator + <nl> + System . nanoTime ( ) ; <nl> + WString DirPath = new WString ( filePath ) ; <nl> + File dir = new File ( filePath ) ; <nl> + dir . mkdir ( ) ; <nl> + <nl> + / / check status <nl> + assertTrue ( Advapi32 . INSTANCE . FileEncryptionStatus ( DirPath , lpStatus ) ) ; <nl> + assertEquals ( FILE _ ENCRYPTABLE , lpStatus . getValue ( ) . intValue ( ) ) ; <nl> + <nl> + / / disable encryption <nl> + assertTrue ( Advapi32 . INSTANCE . EncryptionDisable ( DirPath , true ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . FileEncryptionStatus ( DirPath , lpStatus ) ) ; <nl> + assertEquals ( FILE _ DIR _ DISALOWED , lpStatus . getValue ( ) . intValue ( ) ) ; <nl> + <nl> + / / enable encryption <nl> + assertTrue ( Advapi32 . INSTANCE . EncryptionDisable ( DirPath , false ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . FileEncryptionStatus ( DirPath , lpStatus ) ) ; <nl> + assertEquals ( FILE _ ENCRYPTABLE , lpStatus . getValue ( ) . intValue ( ) ) ; <nl> + <nl> + / / clean up <nl> + for ( File file : dir . listFiles ( ) ) { <nl> + file . delete ( ) ; <nl> + } <nl> + dir . delete ( ) ; <nl> + } <nl> + <nl> + public void testOpenEncryptedFileRaw ( ) throws Exception { <nl> + / / create an encrypted file <nl> + File file = createTempFile ( ) ; <nl> + WString lpFileName = new WString ( file . getAbsolutePath ( ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . EncryptFile ( lpFileName ) ) ; <nl> + <nl> + / / open file for export <nl> + ULONG ulFlags = new ULONG ( 0 ) ; <nl> + PointerByReference pvContext = new PointerByReference ( ) ; <nl> + assertEquals ( W32Errors . ERROR _ SUCCESS , Advapi32 . INSTANCE . OpenEncryptedFileRaw ( <nl> + lpFileName , ulFlags , pvContext ) ) ; <nl> + <nl> + Advapi32 . INSTANCE . CloseEncryptedFileRaw ( pvContext . getValue ( ) ) ; <nl> + file . delete ( ) ; <nl> + } <nl> + <nl> + public void testReadEncryptedFileRaw ( ) throws Exception { <nl> + / / create an encrypted file <nl> + File file = createTempFile ( ) ; <nl> + WString lpFileName = new WString ( file . getAbsolutePath ( ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . EncryptFile ( lpFileName ) ) ; <nl> + <nl> + / / open file for export <nl> + ULONG ulFlags = new ULONG ( 0 ) ; <nl> + PointerByReference pvContext = new PointerByReference ( ) ; <nl> + assertEquals ( W32Errors . ERROR _ SUCCESS , Advapi32 . INSTANCE . OpenEncryptedFileRaw ( <nl> + lpFileName , ulFlags , pvContext ) ) ; <nl> + <nl> + / / read encrypted file <nl> + final ByteArrayOutputStream outputStream = new ByteArrayOutputStream ( ) ; <nl> + FE _ EXPORT _ FUNC pfExportCallback = new FE _ EXPORT _ FUNC ( ) { <nl> + @ Override <nl> + public DWORD callback ( ByteByReference pbData , Pointer <nl> + pvCallbackContext , ULONG ulLength ) { <nl> + byte [ ] arr = pbData . getPointer ( ) . getByteArray ( 0 , ulLength . intValue ( ) ) ; <nl> + try { <nl> + outputStream . write ( arr ) ; <nl> + } catch ( IOException e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + return new DWORD ( W32Errors . ERROR _ SUCCESS ) ; <nl> + } <nl> + } ; <nl> + <nl> + assertEquals ( W32Errors . ERROR _ SUCCESS , Advapi32 . INSTANCE . ReadEncryptedFileRaw ( <nl> + pfExportCallback , null , pvContext . getValue ( ) ) ) ; <nl> + outputStream . close ( ) ; <nl> + <nl> + Advapi32 . INSTANCE . CloseEncryptedFileRaw ( pvContext . getValue ( ) ) ; <nl> + file . delete ( ) ; <nl> + } <nl> + <nl> + public void testWriteEncryptedFileRaw ( ) throws Exception { <nl> + / / create an encrypted file <nl> + File file = createTempFile ( ) ; <nl> + WString lpFileName = new WString ( file . getAbsolutePath ( ) ) ; <nl> + assertTrue ( Advapi32 . INSTANCE . EncryptFile ( lpFileName ) ) ; <nl> + <nl> + / / open file for export <nl> + ULONG ulFlags = new ULONG ( 0 ) ; <nl> + PointerByReference pvContext = new PointerByReference ( ) ; <nl> + assertEquals ( W32Errors . ERROR _ SUCCESS , Advapi32 . INSTANCE . OpenEncryptedFileRaw ( <nl> + lpFileName , ulFlags , pvContext ) ) ; <nl> + <nl> + / / read encrypted file <nl> + final ByteArrayOutputStream outputStream = new ByteArrayOutputStream ( ) ; <nl> + FE _ EXPORT _ FUNC pfExportCallback = new FE _ EXPORT _ FUNC ( ) { <nl> + @ Override <nl> + public DWORD callback ( ByteByReference pbData , Pointer <nl> + pvCallbackContext , ULONG ulLength ) { <nl> + byte [ ] arr = pbData . getPointer ( ) . getByteArray ( 0 , ulLength . intValue ( ) ) ; <nl> + try { <nl> + outputStream . write ( arr ) ; <nl> + } catch ( IOException e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + return new DWORD ( W32Errors . ERROR _ SUCCESS ) ; <nl> + } <nl> + } ; <nl> + <nl> + assertEquals ( W32Errors . ERROR _ SUCCESS , Advapi32 . INSTANCE . ReadEncryptedFileRaw ( <nl> + pfExportCallback , null , pvContext . getValue ( ) ) ) ; <nl> + outputStream . close ( ) ; <nl> + Advapi32 . INSTANCE . CloseEncryptedFileRaw ( pvContext . getValue ( ) ) ; <nl> + <nl> + / / open file for import <nl> + WString lbFileName2 = new WString ( System . getProperty ( " java . io . tmpdir " ) + <nl> + File . separator + " backup - " + file . getName ( ) ) ; <nl> + ULONG ulFlags2 = new ULONG ( CREATE _ FOR _ IMPORT ) ; <nl> + PointerByReference pvContext2 = new PointerByReference ( ) ; <nl> + assertEquals ( W32Errors . ERROR _ SUCCESS , Advapi32 . INSTANCE . OpenEncryptedFileRaw ( <nl> + lbFileName2 , ulFlags2 , pvContext2 ) ) ; <nl> + <nl> + / / write encrypted file <nl> + final IntByReference elementsReadWrapper = new IntByReference ( 0 ) ; <nl> + FE _ IMPORT _ FUNC pfImportCallback = new FE _ IMPORT _ FUNC ( ) { <nl> + @ Override <nl> + public DWORD callback ( ByteByReference pbData , Pointer pvCallbackContext , <nl> + ULONGByReference ulLength ) { <nl> + int elementsRead = elementsReadWrapper . getValue ( ) ; <nl> + int remainingElements = outputStream . size ( ) - elementsRead ; <nl> + int length = Math . min ( remainingElements , ulLength . getValue ( ) . intValue ( ) ) ; <nl> + pbData . getPointer ( ) . write ( 0 , outputStream . toByteArray ( ) , elementsRead , <nl> + length ) ; <nl> + elementsReadWrapper . setValue ( elementsRead + length ) ; <nl> + ulLength . setValue ( new ULONG ( length ) ) ; <nl> + return new DWORD ( W32Errors . ERROR _ SUCCESS ) ; <nl> + } <nl> + } ; <nl> + <nl> + assertEquals ( W32Errors . ERROR _ SUCCESS , Advapi32 . INSTANCE . WriteEncryptedFileRaw ( <nl> + pfImportCallback , null , pvContext2 . getValue ( ) ) ) ; <nl> + Advapi32 . INSTANCE . CloseEncryptedFileRaw ( pvContext2 . getValue ( ) ) ; <nl> + <nl> + file . delete ( ) ; <nl> + new File ( lbFileName2 . toString ( ) ) . delete ( ) ; <nl> + } <nl> + <nl> + private File createTempFile ( ) throws Exception { <nl> + String filePath = System . getProperty ( " java . io . tmpdir " ) + System . nanoTime ( ) <nl> + + " . text " ; <nl> + File file = new File ( filePath ) ; <nl> + file . createNewFile ( ) ; <nl> + FileWriter fileWriter = new FileWriter ( file ) ; <nl> + for ( int i = 0 ; i < 1000 ; i + + ) { <nl> + fileWriter . write ( " Sample text " + i + System . getProperty ( " line . separator " ) ) ; <nl> + } <nl> + fileWriter . close ( ) ; <nl> + return file ; <nl> + } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> old mode 100644 <nl> new mode 100755 <nl> index 835c409 . . c8eb531 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> package com . sun . jna . platform . win32 ; <nl> <nl> import java . io . File ; <nl> + import java . io . FileWriter ; <nl> import java . util . Map ; <nl> import java . util . TreeMap ; <nl> <nl> @ @ - 30 , 6 + 31 , 8 @ @ import com . sun . jna . platform . win32 . WinNT . WELL _ KNOWN _ SID _ TYPE ; <nl> import com . sun . jna . platform . win32 . WinReg . HKEY ; <nl> import com . sun . jna . platform . win32 . WinReg . HKEYByReference ; <nl> <nl> + import static com . sun . jna . platform . win32 . WinBase . * ; <nl> + <nl> / * * <nl> * @ author dblock [ at ] dblock [ dot ] org <nl> * / <nl> @ @ - 483 , 4 + 486 , 89 @ @ public class Advapi32UtilTest extends TestCase { <nl> String block = Advapi32Util . getEnvironmentBlock ( mockEnvironment ) ; <nl> assertEquals ( " Environment block must comprise key = value pairs separated by NUL characters " , expected , block ) ; <nl> } <nl> + 	 <nl> + public void testEncryptFile ( ) throws Exception { <nl> + File file = createTempFile ( ) ; <nl> + assertEquals ( FILE _ ENCRYPTABLE , Advapi32Util . fileEncryptionStatus ( file ) ) ; <nl> + Advapi32Util . encryptFile ( file ) ; <nl> + assertEquals ( FILE _ IS _ ENCRYPTED , Advapi32Util . fileEncryptionStatus ( file ) ) ; <nl> + file . delete ( ) ; <nl> + } <nl> + <nl> + public void testDecryptFile ( ) throws Exception { <nl> + File file = createTempFile ( ) ; <nl> + Advapi32Util . encryptFile ( file ) ; <nl> + assertEquals ( FILE _ IS _ ENCRYPTED , Advapi32Util . fileEncryptionStatus ( file ) ) ; <nl> + Advapi32Util . decryptFile ( file ) ; <nl> + assertEquals ( FILE _ ENCRYPTABLE , Advapi32Util . fileEncryptionStatus ( file ) ) ; <nl> + file . delete ( ) ; <nl> + } <nl> + <nl> + public void testDisableEncryption ( ) throws Exception { <nl> + File dir = new File ( System . getProperty ( " java . io . tmpdir " ) + File . separator <nl> + + System . nanoTime ( ) ) ; <nl> + dir . mkdir ( ) ; <nl> + assertEquals ( FILE _ ENCRYPTABLE , Advapi32Util . fileEncryptionStatus ( dir ) ) ; <nl> + Advapi32Util . disableEncryption ( dir , true ) ; <nl> + assertEquals ( FILE _ DIR _ DISALOWED , Advapi32Util . fileEncryptionStatus ( dir ) ) ; <nl> + Advapi32Util . disableEncryption ( dir , false ) ; <nl> + assertEquals ( FILE _ ENCRYPTABLE , Advapi32Util . fileEncryptionStatus ( dir ) ) ; <nl> + for ( File file : dir . listFiles ( ) ) { <nl> + file . delete ( ) ; <nl> + } <nl> + dir . delete ( ) ; <nl> + } <nl> + <nl> + public void testBackupEncryptedFile ( ) throws Exception { <nl> + / / backup an encrypted file <nl> + File srcFile = createTempFile ( ) ; <nl> + Advapi32Util . encryptFile ( srcFile ) ; <nl> + File dest = new File ( System . getProperty ( " java . io . tmpdir " ) + File . separator <nl> + + " backup " + System . nanoTime ( ) ) ; <nl> + dest . mkdir ( ) ; <nl> + <nl> + Advapi32Util . backupEncryptedFile ( srcFile , dest ) ; <nl> + <nl> + / / simple check to see if a backup file exist <nl> + File backupFile = new File ( dest . getAbsolutePath ( ) + File . separator + <nl> + srcFile . getName ( ) ) ; <nl> + assertTrue ( backupFile . exists ( ) ) ; <nl> + assertEquals ( srcFile . length ( ) , backupFile . length ( ) ) ; <nl> + <nl> + / / backup an encrypted directory <nl> + File srcDir = new File ( System . getProperty ( " java . io . tmpdir " ) + File . separator <nl> + + System . nanoTime ( ) ) ; <nl> + srcDir . mkdir ( ) ; <nl> + Advapi32Util . encryptFile ( srcDir ) ; <nl> + <nl> + Advapi32Util . backupEncryptedFile ( srcDir , dest ) ; <nl> + <nl> + / / Check to see if a backup directory exist <nl> + File backupDir = new File ( dest . getAbsolutePath ( ) + File . separator + srcDir . getName ( ) ) ; <nl> + assertTrue ( backupDir . exists ( ) ) ; <nl> + <nl> + / / clean up <nl> + srcFile . delete ( ) ; <nl> + for ( File file : srcDir . listFiles ( ) ) { <nl> + file . delete ( ) ; <nl> + } <nl> + srcDir . delete ( ) ; <nl> + for ( File file : dest . listFiles ( ) ) { <nl> + file . delete ( ) ; <nl> + } <nl> + dest . delete ( ) ; <nl> + } <nl> + <nl> + private File createTempFile ( ) throws Exception { <nl> + String filePath = System . getProperty ( " java . io . tmpdir " ) + System . nanoTime ( ) <nl> + + " . text " ; <nl> + File file = new File ( filePath ) ; <nl> + file . createNewFile ( ) ; <nl> + FileWriter fileWriter = new FileWriter ( file ) ; <nl> + for ( int i = 0 ; i < 1000 ; i + + ) { <nl> + fileWriter . write ( " Sample text " + i + System . getProperty ( " line . separator " ) ) ; <nl> + } <nl> + fileWriter . close ( ) ; <nl> + return file ; <nl> + } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / WTypesTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / WTypesTest . java <nl> new file mode 100644 <nl> index 0000000 . . cf01c21 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / WTypesTest . java <nl> @ @ - 0 , 0 + 1 , 60 @ @ <nl> + / * Copyright ( c ) 2007 - 2014 Timothy Wall , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Memory ; <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + import junit . framework . TestCase ; <nl> + <nl> + public class WTypesTest extends TestCase { <nl> + <nl> + private static final String TEST _ STRING = " input " ; <nl> + <nl> + private static final Pointer TEST _ POINTER = new Memory ( ( TEST _ STRING . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ; <nl> + <nl> + static { <nl> + TEST _ POINTER . setWideString ( 0 , TEST _ STRING ) ; <nl> + } <nl> + <nl> + public void testLPOLESTRConstruction ( ) { <nl> + WTypes . LPOLESTR fromString = new WTypes . LPOLESTR ( TEST _ STRING ) ; <nl> + assertEquals ( fromString . getValue ( ) , TEST _ STRING ) ; <nl> + WTypes . LPOLESTR empty = new WTypes . LPOLESTR ( ) ; <nl> + assertNull ( empty . getValue ( ) ) ; <nl> + WTypes . LPOLESTR fromPointer = new WTypes . LPOLESTR ( TEST _ POINTER ) ; <nl> + assertEquals ( fromPointer . getValue ( ) , TEST _ STRING ) ; <nl> + } <nl> + <nl> + public void testLPSTRConstruction ( ) { <nl> + WTypes . LPSTR instance = new WTypes . LPSTR ( TEST _ STRING ) ; <nl> + assertEquals ( instance . getValue ( ) , TEST _ STRING ) ; <nl> + WTypes . LPSTR empty = new WTypes . LPSTR ( ) ; <nl> + assertNull ( empty . getValue ( ) ) ; <nl> + WTypes . LPSTR fromPointer = new WTypes . LPSTR ( TEST _ POINTER ) ; <nl> + assertEquals ( fromPointer . getValue ( ) , TEST _ STRING ) ; <nl> + } <nl> + <nl> + public void testLPWSTRConstruction ( ) { <nl> + WTypes . LPWSTR instance = new WTypes . LPWSTR ( TEST _ STRING ) ; <nl> + assertEquals ( instance . getValue ( ) , TEST _ STRING ) ; <nl> + WTypes . LPWSTR empty = new WTypes . LPWSTR ( ) ; <nl> + assertNull ( empty . getValue ( ) ) ; <nl> + WTypes . LPWSTR fromPointer = new WTypes . LPWSTR ( TEST _ POINTER ) ; <nl> + assertEquals ( fromPointer . getValue ( ) , TEST _ STRING ) ; <nl> + } <nl> + <nl> + public static void main ( String [ ] args ) { <nl> + junit . textui . TestRunner . run ( WTypesTest . class ) ; <nl> + } <nl> + } <nl> diff - - git a / www / PublishingToMavenCentral . md b / www / PublishingToMavenCentral . md <nl> index e835785 . . 4b1c413 100644 <nl> - - - a / www / PublishingToMavenCentral . md <nl> + + + b / www / PublishingToMavenCentral . md <nl> @ @ - 4 , 8 + 4 , 8 @ @ Publishing JNA to Maven Central <nl> One Time <nl> - - - - - - - - <nl> <nl> - * Set up your gpg keys as described [ here ] ( https : / / docs . sonatype . org / display / Repository / How + To + Generate + PGP + Signatures + With + Maven ) . Make sure you distribute your public key . <nl> - * Make sure you have a settings . xml file ( in directory : $ { user . home } / . m2 / ) as described at the bottom of 7a1 [ here ] ( https : / / docs . sonatype . org / display / Repository / Sonatype + OSS + Maven + Repository + Usage + Guide # SonatypeOSSMavenRepositoryUsageGuide - 7a . 1 . POMandsettingsconfig ) . For example : <nl> + * Set up your gpg keys as described [ here ] ( http : / / central . sonatype . org / pages / working - with - pgp - signatures . html ) . Make sure you distribute your public key . <nl> + * Make sure you have a settings . xml file ( in directory : $ { user . home } / . m2 / ) . For example : <nl> <nl> < settings > <nl> . . . <nl> @ @ - 52 , 11 + 52 , 10 @ @ full release is performed ) . <nl> Publish Release <nl> - - - - - - - - - - - - - - - <nl> <nl> - * Verify the & lt ; version > tags in [ pom - jna . xml ] ( https : / / github . com / twall / jna / blob / master / pom - jna . xml ) and [ pom - platform . xml ] ( https : / / github . com / twall / jna / blob / master / pom - platform . xml ) <nl> + * Verify the & lt ; version > tags in [ pom - jna . xml ] ( https : / / github . com / twall / jna / blob / master / pom - jna . xml ) and [ pom - jna - platform . xml ] ( https : / / github . com / twall / jna / blob / master / pom - jna - platform . xml ) <nl> match the version ( jna . version ) in [ build . xml ] ( https : / / github . com / twall / jna / blob / master / build . xml ) . <nl> * Run ` ant - Dmaven - release = true stage ` . This uploads current checkout to [ maven . java . net ] ( https : / / maven . java . net ) . <nl> - * Follow steps from [ release <nl> - it ] ( https : / / docs . sonatype . org / display / Repository / Sonatype + OSS + Maven + Repository + Usage + Guide # SonatypeOSSMavenRepositoryUsageGuide - 8a . ReleaseIt ) . <nl> + * Follow steps from [ Releasing the Deployment ] ( http : / / central . sonatype . org / pages / releasing - the - deployment . html ) . <nl> Note that the releases are managed from [ maven . java . net ] ( https : / / maven . java . net ) . <nl> <nl>
diff - - git a / README . md b / README . md <nl> index 557b447 . . 7f412c0 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 93 , 7 + 93 , 7 @ @ Using the Library <nl> * [ Platform Library ] ( https : / / github . com / twall / jna / blob / master / www / PlatformLibrary . md ) <nl> * [ Direct Method Mapping ] ( https : / / github . com / twall / jna / blob / master / www / DirectMapping . md ) ( Optimization ) <nl> * [ Frequently Asked Questions ( FAQ ) ] ( https : / / github . com / twall / jna / blob / master / www / FrequentlyAskedQuestions . md ) <nl> - * [ Avoiding Crashes ] ( http : / / twall . github . com / jna / 4 . 1 . 0 / javadoc / overview - summary . html # crash - protection ) <nl> + * [ Avoiding Crashes ] ( http : / / twall . github . com / jna / 4 . 1 . 0 / overview - summary . html # crash - protection ) <nl> <nl> Primary Documentation ( JavaDoc ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> old mode 100644 <nl> new mode 100755 <nl> index c28e348 . . 6b08e38 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 12 , 7 + 12 , 9 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> + import java . io . ByteArrayOutputStream ; <nl> import java . io . File ; <nl> + import java . io . IOException ; <nl> import java . util . ArrayList ; <nl> import java . util . HashMap ; <nl> import java . util . Iterator ; <nl> @ @ - 37 , 6 + 39 , 7 @ @ import com . sun . jna . platform . win32 . WinNT . SID _ AND _ ATTRIBUTES ; <nl> import com . sun . jna . platform . win32 . WinNT . SID _ NAME _ USE ; <nl> import com . sun . jna . platform . win32 . WinReg . HKEY ; <nl> import com . sun . jna . platform . win32 . WinReg . HKEYByReference ; <nl> + import com . sun . jna . ptr . ByteByReference ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . LongByReference ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> @ @ - 2185 , 4 + 2188 , 159 @ @ public abstract class Advapi32Util { <nl> <nl> return hasAccess ; <nl> } <nl> + 	 <nl> + / * * <nl> + * Encrypts a file or directory . <nl> + * <nl> + * @ param file <nl> + * The file or directory to encrypt . <nl> + * / <nl> + public static void encryptFile ( File file ) { <nl> + WString lpFileName = new WString ( file . getAbsolutePath ( ) ) ; <nl> + if ( ! Advapi32 . INSTANCE . EncryptFile ( lpFileName ) ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Decrypts an encrypted file or directory . <nl> + * <nl> + * @ param file <nl> + * The file or directory to decrypt . <nl> + * / <nl> + public static void decryptFile ( File file ) { <nl> + WString lpFileName = new WString ( file . getAbsolutePath ( ) ) ; <nl> + if ( ! Advapi32 . INSTANCE . DecryptFile ( lpFileName , new DWORD ( 0 ) ) ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Checks the encryption status of a file . <nl> + * <nl> + * @ param file <nl> + * The file to check the status for . <nl> + * @ return The status of the file . <nl> + * / <nl> + public static int fileEncryptionStatus ( File file ) { <nl> + DWORDByReference status = new DWORDByReference ( ) ; <nl> + WString lpFileName = new WString ( file . getAbsolutePath ( ) ) ; <nl> + if ( ! Advapi32 . INSTANCE . FileEncryptionStatus ( lpFileName , status ) ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + return status . getValue ( ) . intValue ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Disables or enables encryption of the specified directory and the files in <nl> + * it . <nl> + * <nl> + * @ param directory <nl> + * The directory for which to enable or disable encryption . <nl> + * @ param disable <nl> + * TRUE to disable encryption . FALSE to enable it . <nl> + * / <nl> + public static void disableEncryption ( File directory , boolean disable ) { <nl> + WString dirPath = new WString ( directory . getAbsolutePath ( ) ) ; <nl> + if ( ! Advapi32 . INSTANCE . EncryptionDisable ( dirPath , disable ) ) { <nl> + throw new Win32Exception ( Native . getLastError ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Backup an encrypted file or folder without decrypting it . A file named <nl> + * " bar / sample . text " will be backed - up to " destDir / sample . text " . A directory <nl> + * named " bar " will be backed - up to " destDir / bar " . This method is NOT <nl> + * recursive . If you have an encrypted directory with encrypted files , this <nl> + * method must be called once for the directory , and once for each encrypted <nl> + * file to be backed - up . <nl> + * <nl> + * @ param src <nl> + * The encrypted file or directory to backup . <nl> + * @ param destDir <nl> + * The directory where the backup will be saved . <nl> + * / <nl> + public static void backupEncryptedFile ( File src , File destDir ) { <nl> + if ( ! destDir . isDirectory ( ) ) { <nl> + throw new IllegalArgumentException ( " destDir must be a directory . " ) ; <nl> + } <nl> + <nl> + ULONG readFlag = new ULONG ( 0 ) ; / / Open the file for export ( backup ) <nl> + ULONG writeFlag = new ULONG ( CREATE _ FOR _ IMPORT ) ; / / Import ( restore ) file <nl> + <nl> + if ( src . isDirectory ( ) ) { <nl> + writeFlag . setValue ( CREATE _ FOR _ IMPORT | CREATE _ FOR _ DIR ) ; <nl> + } <nl> + <nl> + / / open encrypted file for export <nl> + WString srcFileName = new WString ( src . getAbsolutePath ( ) ) ; <nl> + PointerByReference pvContext = new PointerByReference ( ) ; <nl> + if ( Advapi32 . INSTANCE . OpenEncryptedFileRaw ( srcFileName , readFlag , <nl> + pvContext ) ! = W32Errors . ERROR _ SUCCESS ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + <nl> + / / read encrypted file <nl> + final ByteArrayOutputStream outputStream = new ByteArrayOutputStream ( ) ; <nl> + FE _ EXPORT _ FUNC pfExportCallback = new FE _ EXPORT _ FUNC ( ) { <nl> + @ Override <nl> + public DWORD callback ( ByteByReference pbData , Pointer pvCallbackContext , <nl> + ULONG ulLength ) { <nl> + byte [ ] arr = pbData . getPointer ( ) . getByteArray ( 0 , ulLength . intValue ( ) ) ; <nl> + try { <nl> + outputStream . write ( arr ) ; <nl> + } catch ( IOException e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + return new DWORD ( W32Errors . ERROR _ SUCCESS ) ; <nl> + } <nl> + } ; <nl> + <nl> + if ( Advapi32 . INSTANCE . ReadEncryptedFileRaw ( pfExportCallback , null , <nl> + pvContext . getValue ( ) ) ! = W32Errors . ERROR _ SUCCESS ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + <nl> + / / close <nl> + try { <nl> + outputStream . close ( ) ; <nl> + } catch ( IOException e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + Advapi32 . INSTANCE . CloseEncryptedFileRaw ( pvContext . getValue ( ) ) ; <nl> + <nl> + / / open file for import <nl> + WString destFileName = new WString ( destDir . getAbsolutePath ( ) + File . separator <nl> + + src . getName ( ) ) ; <nl> + pvContext = new PointerByReference ( ) ; <nl> + if ( Advapi32 . INSTANCE . OpenEncryptedFileRaw ( destFileName , writeFlag , <nl> + pvContext ) ! = W32Errors . ERROR _ SUCCESS ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + <nl> + / / write encrypted file <nl> + final IntByReference elementsReadWrapper = new IntByReference ( 0 ) ; <nl> + FE _ IMPORT _ FUNC pfImportCallback = new FE _ IMPORT _ FUNC ( ) { <nl> + @ Override <nl> + public DWORD callback ( ByteByReference pbData , Pointer pvCallbackContext , <nl> + ULONGByReference ulLength ) { <nl> + int elementsRead = elementsReadWrapper . getValue ( ) ; <nl> + int remainingElements = outputStream . size ( ) - elementsRead ; <nl> + int length = Math . min ( remainingElements , ulLength . getValue ( ) . intValue ( ) ) ; <nl> + pbData . getPointer ( ) . write ( 0 , outputStream . toByteArray ( ) , elementsRead , <nl> + length ) ; <nl> + elementsReadWrapper . setValue ( elementsRead + length ) ; <nl> + ulLength . setValue ( new ULONG ( length ) ) ; <nl> + return new DWORD ( W32Errors . ERROR _ SUCCESS ) ; <nl> + } <nl> + } ; <nl> + <nl> + if ( Advapi32 . INSTANCE . WriteEncryptedFileRaw ( pfImportCallback , null , <nl> + pvContext . getValue ( ) ) ! = W32Errors . ERROR _ SUCCESS ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + <nl> + / / close <nl> + Advapi32 . INSTANCE . CloseEncryptedFileRaw ( pvContext . getValue ( ) ) ; <nl> + } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> old mode 100644 <nl> new mode 100755 <nl> index 835c409 . . c8eb531 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> package com . sun . jna . platform . win32 ; <nl> <nl> import java . io . File ; <nl> + import java . io . FileWriter ; <nl> import java . util . Map ; <nl> import java . util . TreeMap ; <nl> <nl> @ @ - 30 , 6 + 31 , 8 @ @ import com . sun . jna . platform . win32 . WinNT . WELL _ KNOWN _ SID _ TYPE ; <nl> import com . sun . jna . platform . win32 . WinReg . HKEY ; <nl> import com . sun . jna . platform . win32 . WinReg . HKEYByReference ; <nl> <nl> + import static com . sun . jna . platform . win32 . WinBase . * ; <nl> + <nl> / * * <nl> * @ author dblock [ at ] dblock [ dot ] org <nl> * / <nl> @ @ - 483 , 4 + 486 , 89 @ @ public class Advapi32UtilTest extends TestCase { <nl> String block = Advapi32Util . getEnvironmentBlock ( mockEnvironment ) ; <nl> assertEquals ( " Environment block must comprise key = value pairs separated by NUL characters " , expected , block ) ; <nl> } <nl> + 	 <nl> + public void testEncryptFile ( ) throws Exception { <nl> + File file = createTempFile ( ) ; <nl> + assertEquals ( FILE _ ENCRYPTABLE , Advapi32Util . fileEncryptionStatus ( file ) ) ; <nl> + Advapi32Util . encryptFile ( file ) ; <nl> + assertEquals ( FILE _ IS _ ENCRYPTED , Advapi32Util . fileEncryptionStatus ( file ) ) ; <nl> + file . delete ( ) ; <nl> + } <nl> + <nl> + public void testDecryptFile ( ) throws Exception { <nl> + File file = createTempFile ( ) ; <nl> + Advapi32Util . encryptFile ( file ) ; <nl> + assertEquals ( FILE _ IS _ ENCRYPTED , Advapi32Util . fileEncryptionStatus ( file ) ) ; <nl> + Advapi32Util . decryptFile ( file ) ; <nl> + assertEquals ( FILE _ ENCRYPTABLE , Advapi32Util . fileEncryptionStatus ( file ) ) ; <nl> + file . delete ( ) ; <nl> + } <nl> + <nl> + public void testDisableEncryption ( ) throws Exception { <nl> + File dir = new File ( System . getProperty ( " java . io . tmpdir " ) + File . separator <nl> + + System . nanoTime ( ) ) ; <nl> + dir . mkdir ( ) ; <nl> + assertEquals ( FILE _ ENCRYPTABLE , Advapi32Util . fileEncryptionStatus ( dir ) ) ; <nl> + Advapi32Util . disableEncryption ( dir , true ) ; <nl> + assertEquals ( FILE _ DIR _ DISALOWED , Advapi32Util . fileEncryptionStatus ( dir ) ) ; <nl> + Advapi32Util . disableEncryption ( dir , false ) ; <nl> + assertEquals ( FILE _ ENCRYPTABLE , Advapi32Util . fileEncryptionStatus ( dir ) ) ; <nl> + for ( File file : dir . listFiles ( ) ) { <nl> + file . delete ( ) ; <nl> + } <nl> + dir . delete ( ) ; <nl> + } <nl> + <nl> + public void testBackupEncryptedFile ( ) throws Exception { <nl> + / / backup an encrypted file <nl> + File srcFile = createTempFile ( ) ; <nl> + Advapi32Util . encryptFile ( srcFile ) ; <nl> + File dest = new File ( System . getProperty ( " java . io . tmpdir " ) + File . separator <nl> + + " backup " + System . nanoTime ( ) ) ; <nl> + dest . mkdir ( ) ; <nl> + <nl> + Advapi32Util . backupEncryptedFile ( srcFile , dest ) ; <nl> + <nl> + / / simple check to see if a backup file exist <nl> + File backupFile = new File ( dest . getAbsolutePath ( ) + File . separator + <nl> + srcFile . getName ( ) ) ; <nl> + assertTrue ( backupFile . exists ( ) ) ; <nl> + assertEquals ( srcFile . length ( ) , backupFile . length ( ) ) ; <nl> + <nl> + / / backup an encrypted directory <nl> + File srcDir = new File ( System . getProperty ( " java . io . tmpdir " ) + File . separator <nl> + + System . nanoTime ( ) ) ; <nl> + srcDir . mkdir ( ) ; <nl> + Advapi32Util . encryptFile ( srcDir ) ; <nl> + <nl> + Advapi32Util . backupEncryptedFile ( srcDir , dest ) ; <nl> + <nl> + / / Check to see if a backup directory exist <nl> + File backupDir = new File ( dest . getAbsolutePath ( ) + File . separator + srcDir . getName ( ) ) ; <nl> + assertTrue ( backupDir . exists ( ) ) ; <nl> + <nl> + / / clean up <nl> + srcFile . delete ( ) ; <nl> + for ( File file : srcDir . listFiles ( ) ) { <nl> + file . delete ( ) ; <nl> + } <nl> + srcDir . delete ( ) ; <nl> + for ( File file : dest . listFiles ( ) ) { <nl> + file . delete ( ) ; <nl> + } <nl> + dest . delete ( ) ; <nl> + } <nl> + <nl> + private File createTempFile ( ) throws Exception { <nl> + String filePath = System . getProperty ( " java . io . tmpdir " ) + System . nanoTime ( ) <nl> + + " . text " ; <nl> + File file = new File ( filePath ) ; <nl> + file . createNewFile ( ) ; <nl> + FileWriter fileWriter = new FileWriter ( file ) ; <nl> + for ( int i = 0 ; i < 1000 ; i + + ) { <nl> + fileWriter . write ( " Sample text " + i + System . getProperty ( " line . separator " ) ) ; <nl> + } <nl> + fileWriter . close ( ) ; <nl> + return file ; <nl> + } <nl> }
diff - - git a / www / PublishingToMavenCentral . md b / www / PublishingToMavenCentral . md <nl> index 371db40 . . 4b1c413 100644 <nl> - - - a / www / PublishingToMavenCentral . md <nl> + + + b / www / PublishingToMavenCentral . md <nl> @ @ - 52 , 7 + 52 , 7 @ @ full release is performed ) . <nl> Publish Release <nl> - - - - - - - - - - - - - - - <nl> <nl> - * Verify the & lt ; version > tags in [ pom - jna . xml ] ( https : / / github . com / twall / jna / blob / master / pom - jna . xml ) and [ pom - platform . xml ] ( https : / / github . com / twall / jna / blob / master / pom - platform . xml ) <nl> + * Verify the & lt ; version > tags in [ pom - jna . xml ] ( https : / / github . com / twall / jna / blob / master / pom - jna . xml ) and [ pom - jna - platform . xml ] ( https : / / github . com / twall / jna / blob / master / pom - jna - platform . xml ) <nl> match the version ( jna . version ) in [ build . xml ] ( https : / / github . com / twall / jna / blob / master / build . xml ) . <nl> * Run ` ant - Dmaven - release = true stage ` . This uploads current checkout to [ maven . java . net ] ( https : / / maven . java . net ) . <nl> * Follow steps from [ Releasing the Deployment ] ( http : / / central . sonatype . org / pages / releasing - the - deployment . html ) .
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 5c787dc . . 514c259 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 35 , 7 + 35 , 8 @ @ Bug Fixes <nl> * Remove unsupported JAWT from OSX build - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Disable WebStart tests - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Dispose all native resources when JNA ' s native library is unloaded - Paul Gr ü tter of signotec GmbH and [ @ twall ] ( https : / / github . com / twall ) . This fixes a number of seemingly random , sporadic crashes on windows . <nl> - * Weakly hold registered Direct - mapped classes - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Weakly hold registered Direct - mapped classes - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ # 382 ] ( https : / / github . com / twall / jna / pull / 382 ) : Fixed memory allocation in ` com . sun . jna . platform . win32 . WTypes . LPWSTR ` and ` LPSTR ` constructors - [ @ junak - michal ] ( https : / / github . com / junak - michal ) . <nl> <nl> Release 4 . 1 <nl> = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> index e997f95 . . c487312 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> @ @ - 135 , 7 + 135 , 7 @ @ public interface WTypes { <nl> } <nl> <nl> public LPSTR ( String value ) { <nl> - this ( ) ; <nl> + this ( new Memory ( ( value . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ) ; <nl> this . setValue ( value ) ; <nl> } <nl> <nl> @ @ - 172 , 7 + 172 , 7 @ @ public interface WTypes { <nl> } <nl> <nl> public LPWSTR ( String value ) { <nl> - this ( ) ; <nl> + this ( new Memory ( ( value . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ) ; <nl> this . setValue ( value ) ; <nl> } <nl> <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / WTypesTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / WTypesTest . java <nl> new file mode 100644 <nl> index 0000000 . . cf01c21 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / WTypesTest . java <nl> @ @ - 0 , 0 + 1 , 60 @ @ <nl> + / * Copyright ( c ) 2007 - 2014 Timothy Wall , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Memory ; <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + import junit . framework . TestCase ; <nl> + <nl> + public class WTypesTest extends TestCase { <nl> + <nl> + private static final String TEST _ STRING = " input " ; <nl> + <nl> + private static final Pointer TEST _ POINTER = new Memory ( ( TEST _ STRING . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ; <nl> + <nl> + static { <nl> + TEST _ POINTER . setWideString ( 0 , TEST _ STRING ) ; <nl> + } <nl> + <nl> + public void testLPOLESTRConstruction ( ) { <nl> + WTypes . LPOLESTR fromString = new WTypes . LPOLESTR ( TEST _ STRING ) ; <nl> + assertEquals ( fromString . getValue ( ) , TEST _ STRING ) ; <nl> + WTypes . LPOLESTR empty = new WTypes . LPOLESTR ( ) ; <nl> + assertNull ( empty . getValue ( ) ) ; <nl> + WTypes . LPOLESTR fromPointer = new WTypes . LPOLESTR ( TEST _ POINTER ) ; <nl> + assertEquals ( fromPointer . getValue ( ) , TEST _ STRING ) ; <nl> + } <nl> + <nl> + public void testLPSTRConstruction ( ) { <nl> + WTypes . LPSTR instance = new WTypes . LPSTR ( TEST _ STRING ) ; <nl> + assertEquals ( instance . getValue ( ) , TEST _ STRING ) ; <nl> + WTypes . LPSTR empty = new WTypes . LPSTR ( ) ; <nl> + assertNull ( empty . getValue ( ) ) ; <nl> + WTypes . LPSTR fromPointer = new WTypes . LPSTR ( TEST _ POINTER ) ; <nl> + assertEquals ( fromPointer . getValue ( ) , TEST _ STRING ) ; <nl> + } <nl> + <nl> + public void testLPWSTRConstruction ( ) { <nl> + WTypes . LPWSTR instance = new WTypes . LPWSTR ( TEST _ STRING ) ; <nl> + assertEquals ( instance . getValue ( ) , TEST _ STRING ) ; <nl> + WTypes . LPWSTR empty = new WTypes . LPWSTR ( ) ; <nl> + assertNull ( empty . getValue ( ) ) ; <nl> + WTypes . LPWSTR fromPointer = new WTypes . LPWSTR ( TEST _ POINTER ) ; <nl> + assertEquals ( fromPointer . getValue ( ) , TEST _ STRING ) ; <nl> + } <nl> + <nl> + public static void main ( String [ ] args ) { <nl> + junit . textui . TestRunner . run ( WTypesTest . class ) ; <nl> + } <nl> + }
diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index 8ecf550 . . 445146b 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index 3e31ff3 . . 6b5bb1f 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> # <nl> # Makefile for JNA native bits <nl> - # Copyright ( c ) 2007 - 2012 Timothy Wall All Rights Reserved <nl> + # Copyright ( c ) 2007 - 2014 Timothy Wall All Rights Reserved <nl> # <nl> # You may need to run ' ant javah ' at the root before performing a build from <nl> # this directory . <nl> @ @ - 31 , 6 + 31 , 9 @ @ <nl> # " ant - Dos . prefix = android - arm ( - x86 ) " . Put the NDK tools in the path and adjust <nl> # NDK _ PLATFORM below or set it in your environment . <nl> # <nl> + # The windows build requires a cygwin or MSYS installation . The build may use <nl> + # MS tools or GCC / mingw . Define USE _ MSVC in your environment and ensure cl . exe <nl> + # and ml . exe are in your PATH to build with MS tools . <nl> <nl> # Systems which support POSIX signals may be able to support VM crash <nl> # protection simply by defining HAVE _ PROTECTION . This option has been only <nl> @ @ - 47 , 7 + 50 , 7 @ @ OS = $ ( shell uname | sed - e ' s / CYGWIN . * / win32 / g ' \ <nl> - e ' s / AIX . * / aix / g ' \ <nl> - e ' s / Linux . * / linux / g ' ) <nl> <nl> - JNA _ JNI _ VERSION = 4 . 0 . 0 # auto - generated by ant <nl> + JNA _ JNI _ VERSION = 4 . 0 . 1 # auto - generated by ant <nl> CHECKSUM = 1a6047467b59e8748f975e03016ce3d9 # auto - generated by ant <nl> <nl> JAVA _ INCLUDES = - I " $ ( JAVA _ HOME ) / include " \ <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index fe9a35e . . 1e01486 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 2891 , 7 + 2891 , 7 @ @ static jboolean ( JNICALL * pJAWT _ GetAWT ) ( JNIEnv * , JAWT * ) ; <nl> # endif / * NO _ JAWT * / <nl> <nl> JNIEXPORT jlong JNICALL <nl> - Java _ com _ sun _ jna _ Native _ getWindowHandle0 ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( classp ) , jobject UNUSED _ JAWT ( w ) ) { <nl> + Java _ com _ sun _ jna _ Native _ getWindowHandle0 ( JNIEnv * env , jclass UNUSED ( classp ) , jobject UNUSED _ JAWT ( w ) ) { <nl> jlong handle = 0 ; <nl> # ifndef NO _ JAWT <nl> JAWT _ DrawingSurface * ds ; <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index 5ee58db . . 175068a 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 1178 , 10 + 1178 , 14 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> 	 } ; <nl> callThreadedCallback ( cb , asDaemon , 2 , 100 , called ) ; <nl> 	 / / Wait for it to start up <nl> + long start = System . currentTimeMillis ( ) ; <nl> while ( threads . size ( ) = = 0 & & called [ 0 ] = = 0 ) { <nl> Thread . sleep ( 10 ) ; <nl> + 	 if ( System . currentTimeMillis ( ) - start > THREAD _ TIMEOUT ) { <nl> + 	 	 fail ( " Timed out waiting for thread to detach and terminate " ) ; <nl> + 	 } <nl> } <nl> - long start = System . currentTimeMillis ( ) ; <nl> + start = System . currentTimeMillis ( ) ; <nl> WeakReference ref = ( WeakReference ) threads . iterator ( ) . next ( ) ; <nl> <nl> while ( ref . get ( ) ! = null ) {
diff - - git a / lib / native / linux - arm . jar b / lib / native / linux - arm . jar <nl> index ac92a07 . . 80f2a92 100755 <nl> Binary files a / lib / native / linux - arm . jar and b / lib / native / linux - arm . jar differ
diff - - git a / lib / native / sunos - sparc . jar b / lib / native / sunos - sparc . jar <nl> index a86928d . . 3f45136 100644 <nl> Binary files a / lib / native / sunos - sparc . jar and b / lib / native / sunos - sparc . jar differ <nl> diff - - git a / lib / native / sunos - sparcv9 . jar b / lib / native / sunos - sparcv9 . jar <nl> index 30b24c5 . . 8fbf02c 100755 <nl> Binary files a / lib / native / sunos - sparcv9 . jar and b / lib / native / sunos - sparcv9 . jar differ
diff - - git a / lib / native / aix - ppc . jar b / lib / native / aix - ppc . jar <nl> index 19c72a5 . . 9f4a1a6 100644 <nl> Binary files a / lib / native / aix - ppc . jar and b / lib / native / aix - ppc . jar differ
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 2367ea3 . . 72f737d 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 33 , 7 + 33 , 7 @ @ Bug Fixes <nl> * Fix compiler warnings OSX - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Remove unsupported JAWT from OSX build - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Disable WebStart tests - [ @ twall ] ( https : / / github . com / twall ) . <nl> - * Dispose all native resources when native library is unloaded - Paul Grtter of signotec GmbH and [ @ twall ] ( https : / / github . com / twall ) . This fixes a number of seemingly random , sporadic crashes on windows . <nl> + * Dispose all native resources when native library is unloaded - Paul Gr ü tter of signotec GmbH and [ @ twall ] ( https : / / github . com / twall ) . This fixes a number of seemingly random , sporadic crashes on windows . <nl> * Weakly hold registered Direct - mapped classes - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Release 4 . 1
diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index de909d6 . . d81554e 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 1219 , 8 + 1219 , 8 @ @ public final class Native implements Version { <nl> } <nl> <nl> <nl> - private static Map registeredClasses = new HashMap ( ) ; <nl> - private static Map registeredLibraries = new HashMap ( ) ; <nl> + private static Map registeredClasses = new WeakHashMap ( ) ; <nl> + private static Map registeredLibraries = new WeakHashMap ( ) ; <nl> <nl> private static void unregisterAll ( ) { <nl> synchronized ( registeredClasses ) {
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 1f71ee0 . . 2c28cb6 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 33 , 6 + 33 , 7 @ @ Bug Fixes <nl> * Fix compiler warnings OSX - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Remove unsupported JAWT from OSX build - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Disable WebStart tests - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Dispose all native resources when native library is unloaded - [ @ twall ] ( https : / / github . com / twall ) . This fixes a number of seemingly random , sporadic crashes on windows . <nl> <nl> Release 4 . 1 <nl> = = = = = = = = = = = <nl> diff - - git a / src / com / sun / jna / CallbackReference . java b / src / com / sun / jna / CallbackReference . java <nl> index bcf5568 . . f0fd21d 100644 <nl> - - - a / src / com / sun / jna / CallbackReference . java <nl> + + + b / src / com / sun / jna / CallbackReference . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ import java . lang . reflect . InvocationTargetException ; <nl> import java . lang . reflect . Method ; <nl> import java . lang . reflect . Proxy ; <nl> import java . util . Arrays ; <nl> + import java . util . Collections ; <nl> import java . util . HashMap ; <nl> import java . util . HashSet ; <nl> import java . util . Iterator ; <nl> @ @ - 39 , 6 + 40 , 7 @ @ class CallbackReference extends WeakReference { <nl> static final Map directCallbackMap = new WeakHashMap ( ) ; <nl> static final Map pointerCallbackMap = new WeakHashMap ( ) ; <nl> static final Map allocations = new WeakHashMap ( ) ; <nl> + private static final Map allocatedMemory = Collections . synchronizedMap ( new WeakIdentityHashMap ( ) ) ; <nl> <nl> private static final Method PROXY _ CALLBACK _ METHOD ; <nl> <nl> @ @ - 187 , 6 + 189 , 7 @ @ class CallbackReference extends WeakReference { <nl> callingConvention , flags , <nl> encoding ) ; <nl> cbstruct = peer ! = 0 ? new Pointer ( peer ) : null ; <nl> + allocatedMemory . put ( this , this ) ; <nl> } <nl> else { <nl> if ( callback instanceof CallbackProxy ) { <nl> @ @ - 356 , 6 + 359 , 13 @ @ class CallbackReference extends WeakReference { <nl> } <nl> } <nl> <nl> + static void disposeAll ( ) { <nl> + for ( Iterator i = allocatedMemory . keySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { <nl> + ( ( Memory ) i . next ( ) ) . dispose ( ) ; <nl> + } <nl> + allocatedMemory . clear ( ) ; <nl> + } <nl> + <nl> private Callback getCallback ( ) { <nl> return ( Callback ) get ( ) ; <nl> } <nl> diff - - git a / src / com / sun / jna / Memory . java b / src / com / sun / jna / Memory . java <nl> index 7664c3b . . 5d25b2a 100644 <nl> - - - a / src / com / sun / jna / Memory . java <nl> + + + b / src / com / sun / jna / Memory . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ package com . sun . jna ; <nl> import java . nio . ByteBuffer ; <nl> import java . util . Collections ; <nl> import java . util . HashMap ; <nl> + import java . util . Iterator ; <nl> import java . util . Map ; <nl> <nl> / * * <nl> @ @ - 39 , 11 + 40 , 14 @ @ import java . util . Map ; <nl> public class Memory extends Pointer { <nl> <nl> private static final Map buffers ; <nl> + / * * Keep track of all allocated memory so we can dispose of it before unloading . * / <nl> + private static final Map allocatedMemory ; <nl> <nl> static { <nl> buffers = Collections . synchronizedMap ( Platform . HAS _ BUFFERS <nl> ? ( Map ) new WeakIdentityHashMap ( ) <nl> : ( Map ) new HashMap ( ) ) ; <nl> + allocatedMemory = Collections . synchronizedMap ( new WeakIdentityHashMap ( ) ) ; <nl> } <nl> <nl> / * * Force cleanup of memory that has associated NIO Buffers which have <nl> @ @ - 53 , 6 + 57 , 13 @ @ public class Memory extends Pointer { <nl> buffers . size ( ) ; <nl> } <nl> <nl> + public static void disposeAll ( ) { <nl> + for ( Iterator i = allocatedMemory . keySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { <nl> + ( ( Memory ) i . next ( ) ) . dispose ( ) ; <nl> + } <nl> + allocatedMemory . clear ( ) ; <nl> + } <nl> + <nl> protected long size ; / / Size of the malloc ' ed space <nl> <nl> / * * Provide a view into the original memory . Keeps an implicit reference <nl> @ @ - 89 , 6 + 100 , 8 @ @ public class Memory extends Pointer { <nl> peer = malloc ( size ) ; <nl> if ( peer = = 0 ) <nl> throw new OutOfMemoryError ( " Cannot allocate " + size + " bytes " ) ; <nl> + <nl> + allocatedMemory . put ( this , this ) ; <nl> } <nl> <nl> protected Memory ( ) { } <nl> @ @ - 151 , 7 + 164 , 7 @ @ public class Memory extends Pointer { <nl> } <nl> <nl> / * * Free the native memory and set peer to zero * / <nl> - protected void dispose ( ) { <nl> + protected synchronized void dispose ( ) { <nl> free ( peer ) ; <nl> peer = 0 ; <nl> } <nl> @ @ - 674 , 7 + 687 , 10 @ @ public class Memory extends Pointer { <nl> } <nl> <nl> protected static void free ( long p ) { <nl> - Native . free ( p ) ; <nl> + / / free ( 0 ) is a no - op , so avoid the overhead of the call <nl> + if ( p ! = 0 ) { <nl> + Native . free ( p ) ; <nl> + } <nl> } <nl> <nl> protected static long malloc ( long size ) { <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 4ea1f34 . . de909d6 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 154 , 7 + 154 , 7 @ @ public final class Native implements Version { <nl> + " - set jna . boot . library . path to include the path to the version of the " + LS <nl> + " jnidispatch library included with the JNA jar file you are using " + LS ) ; <nl> } <nl> - 	 MAX _ ALIGNMENT = Platform . isSPARC ( ) | | Platform . isWindows ( ) <nl> + MAX _ ALIGNMENT = Platform . isSPARC ( ) | | Platform . isWindows ( ) <nl> | | ( Platform . isLinux ( ) & & ( Platform . isARM ( ) | | Platform . isPPC ( ) ) ) <nl> | | Platform . isAIX ( ) <nl> | | Platform . isAndroid ( ) <nl> @ @ - 162 , 18 + 162 , 22 @ @ public final class Native implements Version { <nl> MAX _ PADDING = ( Platform . isMac ( ) & & Platform . isPPC ( ) ) ? 8 : MAX _ ALIGNMENT ; <nl> } <nl> <nl> - / * * Force a dispose when this class is GC ' d . * / <nl> + / * * Force a dispose when the Native class is GC ' d . * / <nl> private static final Object finalizer = new Object ( ) { <nl> protected void finalize ( ) { <nl> dispose ( ) ; <nl> } <nl> } ; <nl> <nl> - / * * Properly dispose of JNA functionality . Also called from JNI when <nl> + / * * Properly dispose of JNA functionality . <nl> + Called when this class is finalized and also from JNI when <nl> JNA ' s native shared library is unloaded . <nl> * / <nl> private static void dispose ( ) { <nl> + CallbackReference . disposeAll ( ) ; <nl> + Memory . disposeAll ( ) ; <nl> NativeLibrary . disposeAll ( ) ; <nl> + unregisterAll ( ) ; <nl> jnidispatchPath = null ; <nl> } <nl> <nl> @ @ - 667 , 20 + 671 , 20 @ @ public final class Native implements Version { <nl> String dir = dirs . nextToken ( ) ; <nl> File file = new File ( new File ( dir ) , System . mapLibraryName ( libName ) . replace ( " . dylib " , " . jnilib " ) ) ; <nl> String path = file . getAbsolutePath ( ) ; <nl> - 	 	 if ( DEBUG _ JNA _ LOAD ) { <nl> - 	 	 System . out . println ( " Looking in " + path ) ; <nl> - 	 	 } <nl> + if ( DEBUG _ JNA _ LOAD ) { <nl> + System . out . println ( " Looking in " + path ) ; <nl> + } <nl> if ( file . exists ( ) ) { <nl> try { <nl> - 	 	 	 if ( DEBUG _ JNA _ LOAD ) { <nl> - 	 	 	 System . out . println ( " Trying " + path ) ; <nl> - 	 	 	 } <nl> + if ( DEBUG _ JNA _ LOAD ) { <nl> + System . out . println ( " Trying " + path ) ; <nl> + } <nl> System . setProperty ( " jnidispatch . path " , path ) ; <nl> System . load ( path ) ; <nl> jnidispatchPath = path ; <nl> - 	 	 	 if ( DEBUG _ JNA _ LOAD ) { <nl> - 	 	 	 System . out . println ( " Found jnidispatch at " + path ) ; <nl> - 	 	 	 } <nl> + if ( DEBUG _ JNA _ LOAD ) { <nl> + System . out . println ( " Found jnidispatch at " + path ) ; <nl> + } <nl> return ; <nl> } catch ( UnsatisfiedLinkError ex ) { <nl> / / Not a problem if already loaded in anoteher class loader <nl> @ @ - 698 , 14 + 702 , 14 @ @ public final class Native implements Version { <nl> ext = " dylib " ; <nl> } <nl> path = path . substring ( 0 , path . lastIndexOf ( orig ) ) + ext ; <nl> - 	 	 if ( DEBUG _ JNA _ LOAD ) { <nl> - 	 	 	 System . out . println ( " Looking in " + path ) ; <nl> - 	 	 } <nl> + if ( DEBUG _ JNA _ LOAD ) { <nl> + System . out . println ( " Looking in " + path ) ; <nl> + } <nl> if ( new File ( path ) . exists ( ) ) { <nl> try { <nl> - 	 	 	 if ( DEBUG _ JNA _ LOAD ) { <nl> - 	 	 	 	 System . out . println ( " Trying " + path ) ; <nl> - 	 	 	 } <nl> + if ( DEBUG _ JNA _ LOAD ) { <nl> + System . out . println ( " Trying " + path ) ; <nl> + } <nl> System . setProperty ( " jnidispatch . path " , path ) ; <nl> System . load ( path ) ; <nl> jnidispatchPath = path ; <nl> @ @ - 722 , 9 + 726 , 9 @ @ public final class Native implements Version { <nl> } <nl> if ( ! Boolean . getBoolean ( " jna . nosys " ) ) { <nl> try { <nl> - 	 	 if ( DEBUG _ JNA _ LOAD ) { <nl> - 	 	 System . out . println ( " Trying ( via loadLibrary ) " + libName ) ; <nl> - 	 	 } <nl> + if ( DEBUG _ JNA _ LOAD ) { <nl> + System . out . println ( " Trying ( via loadLibrary ) " + libName ) ; <nl> + } <nl> System . loadLibrary ( libName ) ; <nl> if ( DEBUG _ JNA _ LOAD ) { <nl> System . out . println ( " Found jnidispatch on system path " ) ; <nl> @ @ - 756 , 11 + 760 , 11 @ @ public final class Native implements Version { <nl> throw new UnsatisfiedLinkError ( " Could not find JNA native support " ) ; <nl> } <nl> } <nl> - 	 if ( DEBUG _ JNA _ LOAD ) { <nl> - 	 	 System . out . println ( " Trying " + lib . getAbsolutePath ( ) ) ; <nl> - 	 } <nl> + if ( DEBUG _ JNA _ LOAD ) { <nl> + System . out . println ( " Trying " + lib . getAbsolutePath ( ) ) ; <nl> + } <nl> System . setProperty ( " jnidispatch . path " , lib . getAbsolutePath ( ) ) ; <nl> - 	 System . load ( lib . getAbsolutePath ( ) ) ; <nl> + System . load ( lib . getAbsolutePath ( ) ) ; <nl> jnidispatchPath = lib . getAbsolutePath ( ) ; <nl> if ( DEBUG _ JNA _ LOAD ) { <nl> System . out . println ( " Found jnidispatch at " + jnidispatchPath ) ; <nl> @ @ - 821 , 9 + 825 , 9 @ @ public final class Native implements Version { <nl> loader = Native . class . getClassLoader ( ) ; <nl> } <nl> } <nl> - 	 if ( DEBUG ) { <nl> - 	 System . out . println ( " Looking in classpath from " + loader + " for " + name ) ; <nl> - 	 } <nl> + if ( DEBUG ) { <nl> + System . out . println ( " Looking in classpath from " + loader + " for " + name ) ; <nl> + } <nl> String libname = name . startsWith ( " / " ) ? name : NativeLibrary . mapSharedLibraryName ( name ) ; <nl> String resourcePath = name . startsWith ( " / " ) ? name : Platform . RESOURCE _ PREFIX + " / " + libname ; <nl> if ( resourcePath . startsWith ( " / " ) ) { <nl> @ @ - 853 , 9 + 857 , 9 @ @ public final class Native implements Version { <nl> catch ( URISyntaxException e ) { <nl> lib = new File ( url . getPath ( ) ) ; <nl> } <nl> - 	 if ( DEBUG ) { <nl> - 	 	 System . out . println ( " Looking in " + lib . getAbsolutePath ( ) ) ; <nl> - 	 } <nl> + if ( DEBUG ) { <nl> + System . out . println ( " Looking in " + lib . getAbsolutePath ( ) ) ; <nl> + } <nl> if ( ! lib . exists ( ) ) { <nl> throw new IOException ( " File URL " + url + " could not be properly decoded " ) ; <nl> } <nl> @ @ - 1217 , 17 + 1221 , 16 @ @ public final class Native implements Version { <nl> <nl> private static Map registeredClasses = new HashMap ( ) ; <nl> private static Map registeredLibraries = new HashMap ( ) ; <nl> - private static Object unloader = new Object ( ) { <nl> - protected void finalize ( ) { <nl> - synchronized ( registeredClasses ) { <nl> - for ( Iterator i = registeredClasses . entrySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { <nl> - Map . Entry e = ( Map . Entry ) i . next ( ) ; <nl> - unregister ( ( Class ) e . getKey ( ) , ( long [ ] ) e . getValue ( ) ) ; <nl> - i . remove ( ) ; <nl> - } <nl> + <nl> + private static void unregisterAll ( ) { <nl> + synchronized ( registeredClasses ) { <nl> + for ( Iterator i = registeredClasses . entrySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { <nl> + Map . Entry e = ( Map . Entry ) i . next ( ) ; <nl> + unregister ( ( Class ) e . getKey ( ) , ( long [ ] ) e . getValue ( ) ) ; <nl> + i . remove ( ) ; <nl> } <nl> } <nl> - } ; <nl> + } <nl> <nl> / * * Remove all native mappings for the calling class . <nl> Should only be called if the class is no longer referenced and about <nl> @ @ - 1657 , 10 + 1660 , 10 @ @ public final class Native implements Version { <nl> * Call the native function being represented by this object <nl> * @ param fp function pointer <nl> * @ param callFlags calling convention to be used <nl> - * @ param 	 args <nl> - * 	 	 	 Arguments to pass to the native function <nl> + * @ param args <nl> + * Arguments to pass to the native function <nl> * <nl> - * @ return 	 The value returned by the target native function <nl> + * @ return The value returned by the target native function <nl> * / <nl> static native int invokeInt ( long fp , int callFlags , Object [ ] args ) ; <nl> <nl> @ @ - 1668 , 10 + 1671 , 10 @ @ public final class Native implements Version { <nl> * Call the native function being represented by this object <nl> * @ param fp function pointer <nl> * @ param callFlags calling convention to be used <nl> - * @ param 	 args <nl> - * 	 	 	 Arguments to pass to the native function <nl> + * @ param args <nl> + * Arguments to pass to the native function <nl> * <nl> - * @ return 	 The value returned by the target native function <nl> + * @ return The value returned by the target native function <nl> * / <nl> static native long invokeLong ( long fp , int callFlags , Object [ ] args ) ; <nl> <nl> @ @ - 1679 , 8 + 1682 , 8 @ @ public final class Native implements Version { <nl> * Call the native function being represented by this object <nl> * @ param fp function pointer <nl> * @ param callFlags calling convention to be used <nl> - * @ param 	 args <nl> - * 	 	 	 Arguments to pass to the native function <nl> + * @ param args <nl> + * Arguments to pass to the native function <nl> * / <nl> static native void invokeVoid ( long fp , int callFlags , Object [ ] args ) ; <nl> <nl> @ @ - 1688 , 10 + 1691 , 10 @ @ public final class Native implements Version { <nl> * Call the native function being represented by this object <nl> * @ param fp function pointer <nl> * @ param callFlags calling convention to be used <nl> - * @ param 	 args <nl> - * 	 	 	 Arguments to pass to the native function <nl> + * @ param args <nl> + * Arguments to pass to the native function <nl> * <nl> - * @ return 	 The value returned by the target native function <nl> + * @ return The value returned by the target native function <nl> * / <nl> static native float invokeFloat ( long fp , int callFlags , Object [ ] args ) ; <nl> <nl> @ @ - 1699 , 10 + 1702 , 10 @ @ public final class Native implements Version { <nl> * Call the native function being represented by this object <nl> * @ param fp function pointer <nl> * @ param callFlags calling convention to be used <nl> - * @ param 	 args <nl> - * 	 	 	 Arguments to pass to the native function <nl> + * @ param args <nl> + * Arguments to pass to the native function <nl> * <nl> - * @ return 	 The value returned by the target native function <nl> + * @ return The value returned by the target native function <nl> * / <nl> static native double invokeDouble ( long fp , int callFlags , Object [ ] args ) ; <nl> <nl> @ @ - 1710 , 10 + 1713 , 10 @ @ public final class Native implements Version { <nl> * Call the native function being represented by this object <nl> * @ param fp function pointer <nl> * @ param callFlags calling convention to be used <nl> - * @ param 	 args <nl> - * 	 	 	 Arguments to pass to the native function <nl> + * @ param args <nl> + * Arguments to pass to the native function <nl> * <nl> - * @ return 	 The native pointer returned by the target native function <nl> + * @ return The native pointer returned by the target native function <nl> * / <nl> static native long invokePointer ( long fp , int callFlags , Object [ ] args ) ; <nl>
diff - - git a / native / callback . c b / native / callback . c <nl> index c61284e . . 3ed9f89 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 217 , 7 + 217 , 7 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> } <nl> } <nl> <nl> - # if HAS _ ALT _ CALLING _ CONVENTION <nl> + # ifdef HAS _ ALT _ CALLING _ CONVENTION <nl> / / Currently only w32 stdcall is supported <nl> if ( calling _ convention = = CALLCONV _ STDCALL ) { <nl> abi = FFI _ STDCALL ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 21aa85c . . 1f71ee0 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 30 , 6 + 30 , 9 @ @ Bug Fixes <nl> * Fixed ` com . sun . jna . platform . win32 . Variant ` and ` TlbImp ` - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * Fixed ` com . sun . jna . Pointer . getWideStringArray ` not respecting the length parameter - [ @ csoren ] ( https : / / github . com / csoren ) . <nl> * Fix missing code in X11 demos - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Fix compiler warnings OSX - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Remove unsupported JAWT from OSX build - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Disable WebStart tests - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Release 4 . 1 <nl> = = = = = = = = = = = <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index 44d9320 . . 3e31ff3 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 348 , 7 + 348 , 8 @ @ endif <nl> endif <nl> <nl> PCFLAGS + = $ ( ISYSROOT ) - x objective - c <nl> - CDEFINES + = - DTARGET _ RT _ MAC _ CFM = 0 - DFFI _ MMAP _ EXEC _ WRIT <nl> + # JAWT no longer supported on OSX <nl> + CDEFINES + = - DTARGET _ RT _ MAC _ CFM = 0 - DFFI _ MMAP _ EXEC _ WRIT - DNO _ JAWT <nl> LDFLAGS = $ ( ARCHFLAGS ) - dynamiclib - o $ @ - framework JavaVM \ <nl> - compatibility _ version $ ( shell echo $ { JNA _ JNI _ VERSION } | sed ' s / ^ \ ( [ 0 - 9 ] [ 0 - 9 ] * \ ) . * / \ 1 / g ' ) \ <nl> - current _ version $ ( JNA _ JNI _ VERSION ) \ <nl> diff - - git a / native / callback . c b / native / callback . c <nl> index a4ccf5e . . c61284e 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 93 , 10 + 93 , 19 @ @ static jclass classObject ; <nl> <nl> extern void println ( JNIEnv * , const char * ) ; <nl> <nl> + # if defined ( _ WIN32 ) & & ! defined ( _ WIN64 ) & & ! defined ( _ WIN32 _ WCE ) <nl> + # define HAS _ ALT _ CALLING _ CONVENTION <nl> + # endif <nl> + <nl> callback * <nl> create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> jobjectArray param _ types , jclass return _ type , <nl> - callconv _ t calling _ convention , jint options , <nl> + # ifdef HAS _ ALT _ CALLING _ CONVENTION <nl> + callconv _ t calling _ convention , <nl> + # else <nl> + callconv _ t UNUSED ( calling _ convention ) , <nl> + # endif <nl> + jint options , <nl> jstring encoding ) { <nl> jboolean direct = options & CB _ OPTION _ DIRECT ; <nl> jboolean in _ dll = options & CB _ OPTION _ IN _ DLL ; <nl> @ @ - 208 , 7 + 217 , 8 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> } <nl> } <nl> <nl> - # if defined ( _ WIN32 ) & & ! defined ( _ WIN64 ) & & ! defined ( _ WIN32 _ WCE ) <nl> + # if HAS _ ALT _ CALLING _ CONVENTION <nl> + / / Currently only w32 stdcall is supported <nl> if ( calling _ convention = = CALLCONV _ STDCALL ) { <nl> abi = FFI _ STDCALL ; <nl> } <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 426e4fb . . aa78577 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 2239 , 7 + 2239 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ J _ 3SII <nl> * Signature : ( JB ) J <nl> * / <nl> JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ indexOf _ _ JB <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr , jbyte value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr , jbyte value ) <nl> { <nl> jbyte * peer = ( jbyte * ) L2A ( addr ) ; <nl> volatile jlong i = 0 ; <nl> @ @ - 2350 , 7 + 2350 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ J _ 3SII <nl> * Signature : ( J ) B <nl> * / <nl> JNIEXPORT jbyte JNICALL Java _ com _ sun _ jna _ Native _ getByte <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr ) <nl> { <nl> jbyte res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr ) , sizeof ( res ) ) ; <nl> @ @ - 2363 , 7 + 2363 , 7 @ @ JNIEXPORT jbyte JNICALL Java _ com _ sun _ jna _ Native _ getByte <nl> * Signature : ( J ) C <nl> * / <nl> JNIEXPORT jchar JNICALL Java _ com _ sun _ jna _ Native _ getChar <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr ) <nl> { <nl> wchar _ t res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr ) , sizeof ( res ) ) ; <nl> @ @ - 2376 , 7 + 2376 , 7 @ @ JNIEXPORT jchar JNICALL Java _ com _ sun _ jna _ Native _ getChar <nl> * Signature : ( J ) Lcom / sun / jna / Pointer ; <nl> * / <nl> JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ _ 1getPointer <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr ) <nl> { <nl> void * ptr = NULL ; <nl> MEMCPY ( env , & ptr , L2A ( addr ) , sizeof ( ptr ) ) ; <nl> @ @ - 2404 , 7 + 2404 , 7 @ @ JNIEXPORT jobject JNICALL Java _ com _ sun _ jna _ Native _ getDirectByteBuffer <nl> * Signature : ( J ) D <nl> * / <nl> JNIEXPORT jdouble JNICALL Java _ com _ sun _ jna _ Native _ getDouble <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr ) <nl> { <nl> jdouble res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr ) , sizeof ( res ) ) ; <nl> @ @ - 2417 , 7 + 2417 , 7 @ @ JNIEXPORT jdouble JNICALL Java _ com _ sun _ jna _ Native _ getDouble <nl> * Signature : ( J ) F <nl> * / <nl> JNIEXPORT jfloat JNICALL Java _ com _ sun _ jna _ Native _ getFloat <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr ) <nl> { <nl> jfloat res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr ) , sizeof ( res ) ) ; <nl> @ @ - 2430 , 7 + 2430 , 7 @ @ JNIEXPORT jfloat JNICALL Java _ com _ sun _ jna _ Native _ getFloat <nl> * Signature : ( J ) I <nl> * / <nl> JNIEXPORT jint JNICALL Java _ com _ sun _ jna _ Native _ getInt <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr ) <nl> { <nl> jint res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr ) , sizeof ( res ) ) ; <nl> @ @ - 2443 , 7 + 2443 , 7 @ @ JNIEXPORT jint JNICALL Java _ com _ sun _ jna _ Native _ getInt <nl> * Signature : ( J ) J <nl> * / <nl> JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ getLong <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr ) <nl> { <nl> jlong res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr ) , sizeof ( res ) ) ; <nl> @ @ - 2456 , 7 + 2456 , 7 @ @ JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ getLong <nl> * Signature : ( J ) S <nl> * / <nl> JNIEXPORT jshort JNICALL Java _ com _ sun _ jna _ Native _ getShort <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr ) <nl> { <nl> jshort res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr ) , sizeof ( res ) ) ; <nl> @ @ - 2504 , 7 + 2504 , 7 @ @ JNIEXPORT jbyteArray JNICALL Java _ com _ sun _ jna _ Native _ getStringBytes <nl> * Signature : ( JJB ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setMemory <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr , jlong count , jbyte value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr , jlong count , jbyte value ) <nl> { <nl> MEMSET ( env , L2A ( addr ) , ( int ) value , ( size _ t ) count ) ; <nl> } <nl> @ @ - 2515 , 7 + 2515 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setMemory <nl> * Signature : ( JB ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setByte <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr , jbyte value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr , jbyte value ) <nl> { <nl> MEMCPY ( env , L2A ( addr ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2526 , 7 + 2526 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setByte <nl> * Signature : ( JC ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setChar <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr , jchar value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr , jchar value ) <nl> { <nl> wchar _ t ch = value ; <nl> MEMCPY ( env , L2A ( addr ) , & ch , sizeof ( ch ) ) ; <nl> @ @ - 2538 , 7 + 2538 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setChar <nl> * Signature : ( JJ ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setPointer <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr , jlong value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr , jlong value ) <nl> { <nl> void * ptr = L2A ( value ) ; <nl> MEMCPY ( env , L2A ( addr ) , & ptr , sizeof ( void * ) ) ; <nl> @ @ - 2550 , 7 + 2550 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setPointer <nl> * Signature : ( JD ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setDouble <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr , jdouble value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr , jdouble value ) <nl> { <nl> MEMCPY ( env , L2A ( addr ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2561 , 7 + 2561 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setDouble <nl> * Signature : ( JF ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setFloat <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr , jfloat value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr , jfloat value ) <nl> { <nl> MEMCPY ( env , L2A ( addr ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2572 , 7 + 2572 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setFloat <nl> * Signature : ( JI ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setInt <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr , jint value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr , jint value ) <nl> { <nl> MEMCPY ( env , L2A ( addr ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2583 , 7 + 2583 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setInt <nl> * Signature : ( JJ ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setLong <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr , jlong value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr , jlong value ) <nl> { <nl> MEMCPY ( env , L2A ( addr ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2594 , 7 + 2594 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setLong <nl> * Signature : ( JS ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setShort <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jlong addr , jshort value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jlong addr , jshort value ) <nl> { <nl> MEMCPY ( env , L2A ( addr ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2884 , 7 + 2884 , 7 @ @ static jboolean ( JNICALL * pJAWT _ GetAWT ) ( JNIEnv * , JAWT * ) ; <nl> # endif / * NO _ JAWT * / <nl> <nl> JNIEXPORT jlong JNICALL <nl> - Java _ com _ sun _ jna _ Native _ getWindowHandle0 ( JNIEnv * env , jclass UNUSED ( classp ) , jobject w ) { <nl> + Java _ com _ sun _ jna _ Native _ getWindowHandle0 ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( classp ) , jobject UNUSED _ JAWT ( w ) ) { <nl> jlong handle = 0 ; <nl> # ifndef NO _ JAWT <nl> JAWT _ DrawingSurface * ds ; <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index 602b304 . . 42fd0b0 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 50 , 6 + 50 , 18 @ @ <nl> # endif <nl> # endif / * ! defined ( UNUSED ) * / <nl> <nl> + # if ! defined ( PROTECT ) <nl> + # define UNUSED _ ENV ( X ) UNUSED ( X ) <nl> + # else <nl> + # define UNUSED _ ENV ( X ) X <nl> + # endif / * PROTECT * / <nl> + <nl> + # ifdef NO _ JAWT <nl> + # define UNUSED _ JAWT ( X ) UNUSED ( X ) <nl> + # else <nl> + # define UNUSED _ JAWT ( X ) X <nl> + # endif <nl> + <nl> # ifdef _ _ cplusplus <nl> extern " C " { <nl> # endif <nl> diff - - git a / native / testlib . c b / native / testlib . c <nl> index 24df5a7 . . c615bff 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 983 , 8 + 983 , 9 @ @ callBugCallback ( void ( _ _ stdcall * func ) ( long , int , double , <nl> <nl> # include < jni . h > <nl> # include < math . h > <nl> + # include " dispatch . h " <nl> JNIEXPORT jdouble JNICALL <nl> - Java _ com _ sun _ jna _ PerformanceTest _ 00024JNI _ cos ( JNIEnv * env , jclass cls , jdouble x ) { <nl> + Java _ com _ sun _ jna _ PerformanceTest _ 00024JNI _ cos ( JNIEnv * UNUSED ( env ) , jclass UNUSED ( cls ) , jdouble x ) { <nl> return cos ( x ) ; <nl> } <nl> <nl> diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java <nl> index d4fc34f . . 593cba8 100644 <nl> - - - a / src / com / sun / jna / Platform . java <nl> + + + b / src / com / sun / jna / Platform . java <nl> @ @ - 33 , 6 + 33 , 8 @ @ public final class Platform { <nl> * running headless . <nl> * / <nl> public static final boolean HAS _ AWT ; <nl> + / * * Whether this platform supports the JAWT library . * / <nl> + public static final boolean HAS _ JAWT ; <nl> / * * Canonical name of this platform ' s math library . * / <nl> public static final String MATH _ LIBRARY _ NAME ; <nl> / * * Canonical name of this platform ' s C runtime library . * / <nl> @ @ - 104 , 6 + 106 , 7 @ @ public final class Platform { <nl> / / has the unintended side effect of actually loading AWT native libs , <nl> / / which can be problematic <nl> HAS _ AWT = osType ! = WINDOWSCE & & osType ! = ANDROID & & osType ! = AIX ; <nl> + HAS _ JAWT = HAS _ AWT & & osType ! = MAC ; <nl> HAS _ BUFFERS = hasBuffers ; <nl> RO _ FIELDS = osType ! = WINDOWSCE ; <nl> C _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " c " ; <nl> diff - - git a / test / com / sun / jna / LibraryLoadTest . java b / test / com / sun / jna / LibraryLoadTest . java <nl> index 8c00d95 . . 51de74a 100644 <nl> - - - a / test / com / sun / jna / LibraryLoadTest . java <nl> + + + b / test / com / sun / jna / LibraryLoadTest . java <nl> @ @ - 40 , 7 + 40 , 7 @ @ public class LibraryLoadTest extends TestCase implements Paths { <nl> } <nl> <nl> public void testLoadJAWT ( ) { <nl> - if ( ! Platform . HAS _ AWT ) return ; <nl> + if ( ! Platform . HAS _ AWT | | ! Platform . HAS _ JAWT ) return ; <nl> <nl> if ( GraphicsEnvironment . isHeadless ( ) ) return ; <nl>
diff - - git a / src / com / sun / jna / NativeLong . java b / src / com / sun / jna / NativeLong . java <nl> index 0a4b95f . . 2d9dd17 100644 <nl> - - - a / src / com / sun / jna / NativeLong . java <nl> + + + b / src / com / sun / jna / NativeLong . java <nl> @ @ - 29 , 6 + 29 , 11 @ @ public class NativeLong extends IntegerType { <nl> <nl> / * * Create a NativeLong with the given value . * / <nl> public NativeLong ( long value ) { <nl> - super ( SIZE , value ) ; <nl> + this ( value , false ) ; <nl> + } <nl> + <nl> + / * * Create a NativeLong with the given value , optionally unsigned . * / <nl> + public NativeLong ( long value , boolean unsigned ) { <nl> + super ( SIZE , value , unsigned ) ; <nl> } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 5a66fa2 . . 21aa85c 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 29 , 6 + 29 , 7 @ @ Bug Fixes <nl> * [ # 350 ] ( https : / / github . com / twall / jna / pull / 350 ) : Fix ` jnacontrib . x11 . api . X . Window . getXXXProperty ` , returns ` null ` if the window property is not found - [ @ rm5248 ] ( https : / / github . com / rm5248 ) . <nl> * Fixed ` com . sun . jna . platform . win32 . Variant ` and ` TlbImp ` - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * Fixed ` com . sun . jna . Pointer . getWideStringArray ` not respecting the length parameter - [ @ csoren ] ( https : / / github . com / csoren ) . <nl> + * Fix missing code in X11 demos - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Release 4 . 1 <nl> = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> index 1887cb7 . . 1df00c3 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ import java . util . List ; <nl> <nl> import com . sun . jna . Callback ; <nl> import com . sun . jna . FromNativeContext ; <nl> + import com . sun . jna . IntegerType ; <nl> import com . sun . jna . Library ; <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . NativeLong ; <nl> @ @ - 33 , 16 + 34 , 16 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> public interface X11 extends Library { <nl> <nl> class VisualID extends NativeLong { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> - 	 	 public VisualID ( ) { } <nl> - public VisualID ( long value ) { super ( value ) ; } <nl> + private static final long serialVersionUID = 1L ; <nl> + public VisualID ( ) { this ( 0 ) ; } <nl> + public VisualID ( long value ) { super ( value , true ) ; } <nl> } <nl> <nl> class XID extends NativeLong { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> - 	 	 public static final XID None = null ; <nl> + private static final long serialVersionUID = 1L ; <nl> + public static final XID None = null ; <nl> public XID ( ) { this ( 0 ) ; } <nl> - public XID ( long id ) { super ( id ) ; } <nl> + public XID ( long id ) { super ( id , true ) ; } <nl> protected boolean isNone ( Object o ) { <nl> return o = = null <nl> | | ( o instanceof Number <nl> @ @ - 58 , 7 + 59 , 7 @ @ public interface X11 extends Library { <nl> } <nl> } <nl> class Atom extends XID { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> + private static final long serialVersionUID = 1L ; <nl> public static final Atom None = null ; <nl> public Atom ( ) { } <nl> public Atom ( long id ) { super ( id ) ; } <nl> @ @ - 145 , 7 + 146 , 7 @ @ public interface X11 extends Library { <nl> class AtomByReference extends ByReference { <nl> public AtomByReference ( ) { super ( XID . SIZE ) ; } <nl> public Atom getValue ( ) { <nl> - NativeLong value = getPointer ( ) . getNativeLong ( 0 ) ; <nl> + int value = getPointer ( ) . getInt ( 0 ) ; <nl> return ( Atom ) new Atom ( ) . fromNative ( value , null ) ; <nl> } <nl> } <nl> @ @ - 194 , 7 + 195 , 7 @ @ public interface X11 extends Library { <nl> } <nl> } <nl> class Drawable extends XID { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> + private static final long serialVersionUID = 1L ; <nl> public static final Drawable None = null ; <nl> public Drawable ( ) { } <nl> public Drawable ( long id ) { super ( id ) ; } <nl> @ @ - 205 , 8 + 206 , 8 @ @ public interface X11 extends Library { <nl> } <nl> } <nl> class Window extends Drawable { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> - 	 	 public static final Window None = null ; <nl> + private static final long serialVersionUID = 1L ; <nl> + public static final Window None = null ; <nl> public Window ( ) { } <nl> public Window ( long id ) { super ( id ) ; } <nl> public Object fromNative ( Object nativeValue , FromNativeContext context ) { <nl> @ @ - 218 , 14 + 219 , 13 @ @ public interface X11 extends Library { <nl> class WindowByReference extends ByReference { <nl> public WindowByReference ( ) { super ( XID . SIZE ) ; } <nl> public Window getValue ( ) { <nl> - NativeLong value = getPointer ( ) . getNativeLong ( 0 ) ; <nl> - return value . longValue ( ) = = X11 . None <nl> - ? Window . None : new Window ( value . longValue ( ) ) ; <nl> + int value = getPointer ( ) . getInt ( 0 ) ; <nl> + return value = = 0 ? Window . None : new Window ( value ) ; <nl> } <nl> } <nl> class Pixmap extends Drawable { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> - 	 	 public static final Pixmap None = null ; <nl> + private static final long serialVersionUID = 1L ; <nl> + public static final Pixmap None = null ; <nl> public Pixmap ( ) { } <nl> public Pixmap ( long id ) { super ( id ) ; } <nl> public Object fromNative ( Object nativeValue , FromNativeContext context ) { <nl> @ @ - 238 , 13 + 238 , 13 @ @ public interface X11 extends Library { <nl> class Display extends PointerType { } <nl> / / TODO : define structure <nl> class Visual extends PointerType { <nl> - public NativeLong getVisualID ( ) { <nl> + public int getVisualID ( ) { <nl> if ( getPointer ( ) ! = null ) <nl> - return getPointer ( ) . getNativeLong ( Native . POINTER _ SIZE ) ; <nl> - return new NativeLong ( 0 ) ; <nl> + return getPointer ( ) . getInt ( Native . POINTER _ SIZE ) ; <nl> + return 0 ; <nl> } <nl> public String toString ( ) { <nl> - return " Visual : VisualID = 0x " + Long . toHexString ( getVisualID ( ) . longValue ( ) ) ; <nl> + return " Visual : VisualID = 0x " + Long . toHexString ( getVisualID ( ) ) ; <nl> } <nl> } <nl> / / TODO : define structure <nl> @ @ - 284 , 10 + 284 , 11 @ @ public interface X11 extends Library { <nl> return Arrays . asList ( new String [ ] { " red " , " redMask " , " green " , " greenMask " , " blue " , " blueMask " , " alpha " , " alphaMask " } ) ; <nl> } <nl> } <nl> - class PictFormat extends NativeLong { <nl> + class PictFormat extends IntegerType { <nl> private static final long serialVersionUID = 1L ; <nl> - public PictFormat ( long value ) { super ( value ) ; } <nl> - public PictFormat ( ) { } <nl> + public static final int SIZE = 4 ; <nl> + public PictFormat ( long value ) { super ( SIZE , value , true ) ; } <nl> + public PictFormat ( ) { this ( 0 ) ; } <nl> } <nl> class XRenderPictFormat extends Structure { <nl> public PictFormat id ; <nl> diff - - git a / contrib / x11 / src / jnacontrib / x11 / api / X . java b / contrib / x11 / src / jnacontrib / x11 / api / X . java <nl> index bce7519 . . f087963 100644 <nl> - - - a / contrib / x11 / src / jnacontrib / x11 / api / X . java <nl> + + + b / contrib / x11 / src / jnacontrib / x11 / api / X . java <nl> @ @ - 1122 , 14 + 1122 , 28 @ @ public class X { <nl> <nl> Window [ ] retVal = new Window [ childCount . getValue ( ) ] ; <nl> / / Depending on if we ' re running on 64 - bit or 32 - bit systems , <nl> - / / the long size may be different ; we need to make sure that <nl> + / / the Window ID size may be different ; we need to make sure that <nl> / / we get the data properly no matter what <nl> - if ( Native . LONG _ SIZE = = 4 ) { <nl> + if ( X11 . XID . SIZE = = 4 ) { <nl> int [ ] windows = children . getValue ( ) . getIntArray ( 0 , childCount . getValue ( ) ) ; <nl> for ( int x = 0 ; x < retVal . length ; x + + ) { <nl> X11 . Window win = new X11 . Window ( windows [ x ] ) ; <nl> retVal [ x ] = new Window ( display , win ) ; <nl> } <nl> + } <nl> + else { <nl> + long [ ] windows = children . getValue ( ) . getLongArray ( 0 , childCount . getValue ( ) ) ; <nl> + for ( int x = 0 ; x < retVal . length ; x + + ) { <nl> + X11 . Window win = new X11 . Window ( windows [ x ] ) ; <nl> + retVal [ x ] = new Window ( display , win ) ; <nl> + } <nl> + } <nl> + x11 . XFree ( children . getValue ( ) ) ; <nl> + <nl> + return retVal ; <nl> + } <nl> + <nl> + <nl> public String toString ( ) { <nl> return x11Window . toString ( ) ; <nl> } <nl> diff - - git a / contrib / x11 / src / jnacontrib / x11 / demos / XDesktopDemo . java b / contrib / x11 / src / jnacontrib / x11 / demos / XDesktopDemo . java <nl> index 0dc4bd8 . . 2660d67 100644 <nl> - - - a / contrib / x11 / src / jnacontrib / x11 / demos / XDesktopDemo . java <nl> + + + b / contrib / x11 / src / jnacontrib / x11 / demos / XDesktopDemo . java <nl> @ @ - 172 , 127 + 172 , 6 @ @ public class XDesktopDemo extends JFrame { <nl> <nl> try { <nl> final JDialog jd = new JDialog ( ) ; <nl> - <nl> - refreshDesktopsAndWindows ( ) ; <nl> - <nl> - pack ( ) ; <nl> - addListeners ( ) ; <nl> - setVisible ( true ) ; <nl> - <nl> - printWmInfo ( ) ; <nl> - } <nl> - <nl> - private void printWmInfo ( ) throws X . X11Exception { <nl> - X . Window wm = display . getWindowManagerInfo ( ) ; <nl> - System . out . println ( " wm . getTitle ( ) = " + wm . getTitle ( ) ) ; <nl> - System . out . println ( " wm . getWindowClass ( ) = " + wm . getWindowClass ( ) ) ; <nl> - System . out . println ( " wm . getPID ( ) = " + wm . getPID ( ) ) ; <nl> - } <nl> - <nl> - private void addListeners ( ) { <nl> - refreshButton . addActionListener ( new ActionListener ( ) { <nl> - public void actionPerformed ( ActionEvent event ) { <nl> - try { <nl> - refreshDesktopsAndWindows ( ) ; <nl> - } catch ( X . X11Exception e ) { <nl> - e . printStackTrace ( ) ; <nl> - } <nl> - } <nl> - } ) ; <nl> - goToDesktopButton . addActionListener ( new ActionListener ( ) { <nl> - public void actionPerformed ( ActionEvent event ) { <nl> - int desktopNr = desktopList . getSelectedIndex ( ) ; <nl> - if ( desktopNr > = 0 ) { <nl> - try { <nl> - display . switchDesktop ( desktopNr ) ; <nl> - display . flush ( ) ; <nl> - } catch ( X . X11Exception e ) { <nl> - e . printStackTrace ( ) ; <nl> - } <nl> - } <nl> - } <nl> - } ) ; <nl> - goToWindowButton . addActionListener ( new ActionListener ( ) { <nl> - public void actionPerformed ( ActionEvent event ) { <nl> - X . Window window = getSelectedWindow ( ) ; <nl> - try { <nl> - window . activate ( ) ; <nl> - display . flush ( ) ; <nl> - } catch ( X . X11Exception e ) { <nl> - e . printStackTrace ( ) ; <nl> - } <nl> - } <nl> - } ) ; <nl> - showDesktop . addActionListener ( new ActionListener ( ) { <nl> - public void actionPerformed ( ActionEvent event ) { <nl> - try { <nl> - display . showingDesktop ( true ) ; <nl> - display . flush ( ) ; <nl> - } catch ( X . X11Exception e ) { <nl> - e . printStackTrace ( ) ; <nl> - } <nl> - } <nl> - } ) ; <nl> - moveWindowToDesktopButton . addActionListener ( new ActionListener ( ) { <nl> - public void actionPerformed ( ActionEvent event ) { <nl> - X . Window window = getSelectedWindow ( ) ; <nl> - try { <nl> - window . moveToDesktop ( desktopList . getSelectedIndex ( ) ) ; <nl> - display . flush ( ) ; <nl> - } catch ( X . X11Exception e ) { <nl> - e . printStackTrace ( ) ; <nl> - } <nl> - } <nl> - } ) ; <nl> - moveWindowAndGoToDesktopButton . addActionListener ( new ActionListener ( ) { <nl> - public void actionPerformed ( ActionEvent event ) { <nl> - X . Window window = getSelectedWindow ( ) ; <nl> - try { <nl> - window . moveToDesktop ( desktopList . getSelectedIndex ( ) ) ; <nl> - window . activate ( ) ; <nl> - display . flush ( ) ; <nl> - } catch ( X . X11Exception e ) { <nl> - e . printStackTrace ( ) ; <nl> - } <nl> - } <nl> - } ) ; <nl> - closeWindowButton . addActionListener ( new ActionListener ( ) { <nl> - public void actionPerformed ( ActionEvent event ) { <nl> - X . Window window = getSelectedWindow ( ) ; <nl> - try { <nl> - window . close ( ) ; <nl> - display . flush ( ) ; <nl> - } catch ( X . X11Exception e ) { <nl> - e . printStackTrace ( ) ; <nl> - } <nl> - } <nl> - } ) ; <nl> - showSubwindows . addActionListener ( new ActionListener ( ) { <nl> - <nl> - private void addWindowsToArea ( JTextArea area , int depth , X . Window win ) throws X11Exception { <nl> - X . Window [ ] subWindows = win . getSubwindows ( ) ; <nl> - String title = win . getTitle ( ) ; <nl> - if ( title ! = null ) { <nl> - area . append ( String . format ( " % " + depth + " s0x % 08X - % s " , " " , win . getID ( ) , title ) ) ; <nl> - } else { <nl> - area . append ( String . format ( " % " + depth + " s0x % 08X " , " " , win . getID ( ) ) ) ; <nl> - } <nl> - area . append ( System . getProperty ( " line . separator " ) ) ; <nl> - <nl> - if ( subWindows = = null ) { <nl> - return ; <nl> - } <nl> - for ( int x = 0 ; x < subWindows . length ; x + + ) { <nl> - addWindowsToArea ( area , depth + 4 , subWindows [ x ] ) ; <nl> - } <nl> - } <nl> - <nl> - @ Override <nl> - public void actionPerformed ( ActionEvent event ) { <nl> - X . Window window = getSelectedWindow ( ) ; <nl> - <nl> - try { <nl> - final JDialog jd = new JDialog ( ) ; <nl> JPanel dialogPanel = new JPanel ( new BorderLayout ( ) ) ; <nl> jd . setSize ( 320 , 240 ) ; <nl> jd . setTitle ( " Subwindows " ) ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> index 92c57d0 . . 8feebe2 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> @ @ - 146 , 7 + 146 , 7 @ @ public interface X11 extends Library { <nl> class AtomByReference extends ByReference { <nl> public AtomByReference ( ) { super ( XID . SIZE ) ; } <nl> public Atom getValue ( ) { <nl> - int value = getPointer ( ) . getInt ( 0 ) ; <nl> + NativeLong value = getPointer ( ) . getNativeLong ( 0 ) ; <nl> return ( Atom ) new Atom ( ) . fromNative ( value , null ) ; <nl> } <nl> } <nl> @ @ - 219 , 8 + 219 , 8 @ @ public interface X11 extends Library { <nl> class WindowByReference extends ByReference { <nl> public WindowByReference ( ) { super ( XID . SIZE ) ; } <nl> public Window getValue ( ) { <nl> - int value = getPointer ( ) . getInt ( 0 ) ; <nl> - return value = = 0 ? Window . None : new Window ( value ) ; <nl> + NativeLong value = getPointer ( ) . getNativeLong ( 0 ) ; <nl> + return value . longValue ( ) = = 0 ? Window . None : new Window ( value . longValue ( ) ) ; <nl> } <nl> } <nl> class Pixmap extends Drawable {
diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> index 1df00c3 . . f165741 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> @ @ - 284 , 10 + 284 , 9 @ @ public interface X11 extends Library { <nl> return Arrays . asList ( new String [ ] { " red " , " redMask " , " green " , " greenMask " , " blue " , " blueMask " , " alpha " , " alphaMask " } ) ; <nl> } <nl> } <nl> - class PictFormat extends IntegerType { <nl> + class PictFormat extends XID { <nl> private static final long serialVersionUID = 1L ; <nl> - public static final int SIZE = 4 ; <nl> - public PictFormat ( long value ) { super ( SIZE , value , true ) ; } <nl> + public PictFormat ( long value ) { super ( value ) ; } <nl> public PictFormat ( ) { this ( 0 ) ; } <nl> } <nl> class XRenderPictFormat extends Structure {
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 5a66fa2 . . 29d2e6d 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 29 , 6 + 29 , 7 @ @ Bug Fixes <nl> * [ # 350 ] ( https : / / github . com / twall / jna / pull / 350 ) : Fix ` jnacontrib . x11 . api . X . Window . getXXXProperty ` , returns ` null ` if the window property is not found - [ @ rm5248 ] ( https : / / github . com / rm5248 ) . <nl> * Fixed ` com . sun . jna . platform . win32 . Variant ` and ` TlbImp ` - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * Fixed ` com . sun . jna . Pointer . getWideStringArray ` not respecting the length parameter - [ @ csoren ] ( https : / / github . com / csoren ) . <nl> + * X11 XID is always 32 bits - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Release 4 . 1 <nl> = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> index 3b32b73 . . 1df00c3 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> @ @ - 33 , 19 + 33 , 17 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> / * * Definition ( incomplete ) of the X library . * / <nl> public interface X11 extends Library { <nl> <nl> - class VisualID extends IntegerType { <nl> + class VisualID extends NativeLong { <nl> private static final long serialVersionUID = 1L ; <nl> - public static final int SIZE = 4 ; <nl> public VisualID ( ) { this ( 0 ) ; } <nl> - public VisualID ( long value ) { super ( SIZE , value , true ) ; } <nl> + public VisualID ( long value ) { super ( value , true ) ; } <nl> } <nl> <nl> - class XID extends IntegerType { <nl> + class XID extends NativeLong { <nl> private static final long serialVersionUID = 1L ; <nl> public static final XID None = null ; <nl> - public static final int SIZE = 4 ; <nl> public XID ( ) { this ( 0 ) ; } <nl> - public XID ( long id ) { super ( SIZE , id , true ) ; } <nl> + public XID ( long id ) { super ( id , true ) ; } <nl> protected boolean isNone ( Object o ) { <nl> return o = = null <nl> | | ( o instanceof Number <nl> diff - - git a / contrib / x11 / src / jnacontrib / x11 / api / X . java b / contrib / x11 / src / jnacontrib / x11 / api / X . java <nl> index cf8024e . . f087963 100644 <nl> - - - a / contrib / x11 / src / jnacontrib / x11 / api / X . java <nl> + + + b / contrib / x11 / src / jnacontrib / x11 / api / X . java <nl> @ @ - 1122 , 12 + 1122 , 21 @ @ public class X { <nl> <nl> Window [ ] retVal = new Window [ childCount . getValue ( ) ] ; <nl> / / Depending on if we ' re running on 64 - bit or 32 - bit systems , <nl> - / / the long size may be different ; we need to make sure that <nl> + / / the Window ID size may be different ; we need to make sure that <nl> / / we get the data properly no matter what <nl> - int [ ] windows = children . getValue ( ) . getIntArray ( 0 , childCount . getValue ( ) ) ; <nl> - for ( int x = 0 ; x < retVal . length ; x + + ) { <nl> - X11 . Window win = new X11 . Window ( windows [ x ] ) ; <nl> - retVal [ x ] = new Window ( display , win ) ; <nl> + if ( X11 . XID . SIZE = = 4 ) { <nl> + int [ ] windows = children . getValue ( ) . getIntArray ( 0 , childCount . getValue ( ) ) ; <nl> + for ( int x = 0 ; x < retVal . length ; x + + ) { <nl> + X11 . Window win = new X11 . Window ( windows [ x ] ) ; <nl> + retVal [ x ] = new Window ( display , win ) ; <nl> + } <nl> + } <nl> + else { <nl> + long [ ] windows = children . getValue ( ) . getLongArray ( 0 , childCount . getValue ( ) ) ; <nl> + for ( int x = 0 ; x < retVal . length ; x + + ) { <nl> + X11 . Window win = new X11 . Window ( windows [ x ] ) ; <nl> + retVal [ x ] = new Window ( display , win ) ; <nl> + } <nl> } <nl> x11 . XFree ( children . getValue ( ) ) ; <nl>
diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> index 1887cb7 . . 3b32b73 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ import java . util . List ; <nl> <nl> import com . sun . jna . Callback ; <nl> import com . sun . jna . FromNativeContext ; <nl> + import com . sun . jna . IntegerType ; <nl> import com . sun . jna . Library ; <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . NativeLong ; <nl> @ @ - 32 , 17 + 33 , 19 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> / * * Definition ( incomplete ) of the X library . * / <nl> public interface X11 extends Library { <nl> <nl> - class VisualID extends NativeLong { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> - 	 	 public VisualID ( ) { } <nl> - public VisualID ( long value ) { super ( value ) ; } <nl> + class VisualID extends IntegerType { <nl> + private static final long serialVersionUID = 1L ; <nl> + public static final int SIZE = 4 ; <nl> + public VisualID ( ) { this ( 0 ) ; } <nl> + public VisualID ( long value ) { super ( SIZE , value , true ) ; } <nl> } <nl> <nl> - class XID extends NativeLong { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> - 	 	 public static final XID None = null ; <nl> + class XID extends IntegerType { <nl> + private static final long serialVersionUID = 1L ; <nl> + public static final XID None = null ; <nl> + public static final int SIZE = 4 ; <nl> public XID ( ) { this ( 0 ) ; } <nl> - public XID ( long id ) { super ( id ) ; } <nl> + public XID ( long id ) { super ( SIZE , id , true ) ; } <nl> protected boolean isNone ( Object o ) { <nl> return o = = null <nl> | | ( o instanceof Number <nl> @ @ - 58 , 7 + 61 , 7 @ @ public interface X11 extends Library { <nl> } <nl> } <nl> class Atom extends XID { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> + private static final long serialVersionUID = 1L ; <nl> public static final Atom None = null ; <nl> public Atom ( ) { } <nl> public Atom ( long id ) { super ( id ) ; } <nl> @ @ - 145 , 7 + 148 , 7 @ @ public interface X11 extends Library { <nl> class AtomByReference extends ByReference { <nl> public AtomByReference ( ) { super ( XID . SIZE ) ; } <nl> public Atom getValue ( ) { <nl> - NativeLong value = getPointer ( ) . getNativeLong ( 0 ) ; <nl> + int value = getPointer ( ) . getInt ( 0 ) ; <nl> return ( Atom ) new Atom ( ) . fromNative ( value , null ) ; <nl> } <nl> } <nl> @ @ - 194 , 7 + 197 , 7 @ @ public interface X11 extends Library { <nl> } <nl> } <nl> class Drawable extends XID { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> + private static final long serialVersionUID = 1L ; <nl> public static final Drawable None = null ; <nl> public Drawable ( ) { } <nl> public Drawable ( long id ) { super ( id ) ; } <nl> @ @ - 205 , 8 + 208 , 8 @ @ public interface X11 extends Library { <nl> } <nl> } <nl> class Window extends Drawable { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> - 	 	 public static final Window None = null ; <nl> + private static final long serialVersionUID = 1L ; <nl> + public static final Window None = null ; <nl> public Window ( ) { } <nl> public Window ( long id ) { super ( id ) ; } <nl> public Object fromNative ( Object nativeValue , FromNativeContext context ) { <nl> @ @ - 218 , 14 + 221 , 13 @ @ public interface X11 extends Library { <nl> class WindowByReference extends ByReference { <nl> public WindowByReference ( ) { super ( XID . SIZE ) ; } <nl> public Window getValue ( ) { <nl> - NativeLong value = getPointer ( ) . getNativeLong ( 0 ) ; <nl> - return value . longValue ( ) = = X11 . None <nl> - ? Window . None : new Window ( value . longValue ( ) ) ; <nl> + int value = getPointer ( ) . getInt ( 0 ) ; <nl> + return value = = 0 ? Window . None : new Window ( value ) ; <nl> } <nl> } <nl> class Pixmap extends Drawable { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> - 	 	 public static final Pixmap None = null ; <nl> + private static final long serialVersionUID = 1L ; <nl> + public static final Pixmap None = null ; <nl> public Pixmap ( ) { } <nl> public Pixmap ( long id ) { super ( id ) ; } <nl> public Object fromNative ( Object nativeValue , FromNativeContext context ) { <nl> @ @ - 238 , 13 + 240 , 13 @ @ public interface X11 extends Library { <nl> class Display extends PointerType { } <nl> / / TODO : define structure <nl> class Visual extends PointerType { <nl> - public NativeLong getVisualID ( ) { <nl> + public int getVisualID ( ) { <nl> if ( getPointer ( ) ! = null ) <nl> - return getPointer ( ) . getNativeLong ( Native . POINTER _ SIZE ) ; <nl> - return new NativeLong ( 0 ) ; <nl> + return getPointer ( ) . getInt ( Native . POINTER _ SIZE ) ; <nl> + return 0 ; <nl> } <nl> public String toString ( ) { <nl> - return " Visual : VisualID = 0x " + Long . toHexString ( getVisualID ( ) . longValue ( ) ) ; <nl> + return " Visual : VisualID = 0x " + Long . toHexString ( getVisualID ( ) ) ; <nl> } <nl> } <nl> / / TODO : define structure <nl> @ @ - 284 , 10 + 286 , 11 @ @ public interface X11 extends Library { <nl> return Arrays . asList ( new String [ ] { " red " , " redMask " , " green " , " greenMask " , " blue " , " blueMask " , " alpha " , " alphaMask " } ) ; <nl> } <nl> } <nl> - class PictFormat extends NativeLong { <nl> + class PictFormat extends IntegerType { <nl> private static final long serialVersionUID = 1L ; <nl> - public PictFormat ( long value ) { super ( value ) ; } <nl> - public PictFormat ( ) { } <nl> + public static final int SIZE = 4 ; <nl> + public PictFormat ( long value ) { super ( SIZE , value , true ) ; } <nl> + public PictFormat ( ) { this ( 0 ) ; } <nl> } <nl> class XRenderPictFormat extends Structure { <nl> public PictFormat id ;
diff - - git a / build . xml b / build . xml <nl> index bc0f2b3 . . 3f94770 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 371 , 6 + 371 , 10 @ @ com / sun / jna / win32 - x86 / jnidispatch . dll ; <nl> processor = x86 ; osname = win32 , <nl> com / sun / jna / win32 - x86 - 64 / jnidispatch . dll ; <nl> processor = x86 - 64 ; osname = win32 , <nl> + com / sun / jna / win32 - x86 / jnidispatch . dll ; <nl> + processor = x86 ; osname = win , <nl> + com / sun / jna / win32 - x86 - 64 / jnidispatch . dll ; <nl> + processor = x86 - 64 ; osname = win , <nl> com / sun / jna / w32ce - arm / jnidispatch . dll ; <nl> processor = arm ; osname = wince , <nl>
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 52b8c01 . . 5a66fa2 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 21 , 6 + 21 , 7 @ @ Features <nl> * [ # 352 ] ( https : / / github . com / twall / jna / pull / 352 ) : Performance improvements due to reduced locking in ` com . sun . jna . Library $ Handler ` and fewer vararg checks in ` com . sun . jna . Function ` - [ @ Boereck ] ( https : / / github . com / Boereck ) . <nl> * [ # 357 ] ( https : / / github . com / twall / jna / pull / 357 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . SetSystemTime ` - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) , [ @ thomasjoulin ] ( https : / / github . com / thomasjoulin ) . <nl> * [ # 365 ] ( https : / / github . com / twall / jna / pull / 365 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . GetComputerNameEx ` support - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 368 ] ( https : / / github . com / twall / jna / pull / 368 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . VirtualQueryEx ` , ` com . sun . jna . platform . win32 . WinNT . MEMORY _ BASIC _ INFORMATION ` and ` MEM _ COMMIT ` , ` MEM _ FREE ` , ` MEM _ RESERVE ` , ` MEM _ IMAGE ` , ` MEM _ MAPPED ` , ` MEM _ PRIVATE ` constants to ` com . sun . jna . platform . win32 . WinNT ` - [ @ apsk ] ( https : / / github . com / apsk ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index 7f45d51 . . 46bb148 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 2262 , 4 + 2262 , 26 @ @ public interface Kernel32 extends WinNT { <nl> 	 * / <nl> boolean ReadProcessMemory ( HANDLE hProcess , Pointer lpBaseAddress , Pointer lpBuffer , int nSize , IntByReference lpNumberOfBytesRead ) ; <nl> <nl> + / * * <nl> + * Retrieves information about a range of pages within the virtual address space of a specified process . <nl> + * <nl> + * @ param hProcess <nl> + * A handle to the process whose memory information is queried . The handle must have been <nl> + * opened with the PROCESS _ QUERY _ INFORMATION access right , which enables using the handle <nl> + * to read information from the process object . <nl> + * @ param lpAddress <nl> + * A pointer to the base address of the region of pages to be queried . <nl> + * This value is rounded down to the next page boundary . To determine the size of a page on the host computer , <nl> + * use the GetSystemInfo function . If lpAddress specifies an address above the highest memory address <nl> + * accessible to the process , the function fails with ERROR _ INVALID _ PARAMETER . <nl> + * @ param lpBuffer <nl> + * A pointer to a MEMORY _ BASIC _ INFORMATION structure in which information about the specified page range is returned . <nl> + * @ param dwLength <nl> + * The size of the buffer pointed to by the lpBuffer parameter , in bytes . <nl> + * <nl> + * @ return The return value is the actual number of bytes returned in the information buffer . <nl> + * If the function fails , the return value is zero . To get extended error information , <nl> + * call GetLastError . Possible error values include ERROR _ INVALID _ PARAMETER . <nl> + * / <nl> + SIZE _ T VirtualQueryEx ( HANDLE hProcess , Pointer lpAddress , MEMORY _ BASIC _ INFORMATION lpBuffer , SIZE _ T dwLength ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index df3a01f . . 211f7ab 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 2448 , 4 + 2448 , 95 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> * / <nl> public static int CacheTrace = 3 ; <nl> } <nl> + <nl> + / * * <nl> + * Indicates committed pages for which physical storage has been allocated , either in memory or in the paging file on disk . <nl> + * / <nl> + int MEM _ COMMIT = 0x1000 ; <nl> + <nl> + / * * <nl> + * Indicates free pages not accessible to the calling process and available to be allocated . <nl> + * For free pages , the information in the AllocationBase , AllocationProtect , Protect , and Type members is undefined . <nl> + * / <nl> + int MEM _ FREE = 0x10000 ; <nl> + <nl> + / * * <nl> + * Indicates reserved pages where a range of the process ' s virtual address space is reserved without any physical storage being allocated . <nl> + * For reserved pages , the information in the Protect member is undefined . <nl> + * / <nl> + int MEM _ RESERVE = 0x2000 ; <nl> + <nl> + / * * <nl> + * Indicates that the memory pages within the region are mapped into the view of an image section . <nl> + * / <nl> + int MEM _ IMAGE = 0x1000000 ; <nl> + <nl> + / * * <nl> + * Indicates that the memory pages within the region are mapped into the view of a section . <nl> + * / <nl> + int MEM _ MAPPED = 0x40000 ; <nl> + <nl> + / * * <nl> + * Indicates that the memory pages within the region are private ( that is , not shared by other processes ) . <nl> + * / <nl> + int MEM _ PRIVATE = 0x20000 ; <nl> + <nl> + public static class MEMORY _ BASIC _ INFORMATION extends Structure { <nl> + <nl> + / * * <nl> + * A pointer to the base address of the region of pages . <nl> + * / <nl> + public Pointer baseAddress ; <nl> + <nl> + / * * <nl> + * A pointer to the base address of a range of pages allocated by the VirtualAlloc function . <nl> + * The page pointed to by the BaseAddress member is contained within this allocation range . <nl> + * / <nl> + public Pointer allocationBase ; <nl> + <nl> + / * * <nl> + * The memory protection option when the region was initially allocated . <nl> + * This member can be one of the memory protection constants or 0 if the caller does not have access . <nl> + * / <nl> + public DWORD allocationProtect ; <nl> + <nl> + / * * <nl> + * The size of the region beginning at the base address in which all pages have identical attributes , in bytes . <nl> + * / <nl> + public SIZE _ T regionSize ; <nl> + <nl> + / * * <nl> + * The state of the pages in the region . <nl> + * This member can be one of the following values : <nl> + * <nl> + * MEM _ COMMIT , <nl> + * MEM _ FREE , <nl> + * MEM _ RESERVE . <nl> + * / <nl> + public DWORD state ; <nl> + <nl> + / * * <nl> + * The access protection of the pages in the region . <nl> + * This member is one of the values listed for the AllocationProtect member . <nl> + * / <nl> + public DWORD protect ; <nl> + <nl> + / * * <nl> + * The type of pages in the region . <nl> + * The following types are defined : <nl> + * <nl> + * MEM _ IMAGE <nl> + * MEM _ MAPPED <nl> + * MEM _ PRIVATE <nl> + * / <nl> + public DWORD type ; <nl> + <nl> + @ Override <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( new String [ ] { <nl> + " baseAddress " , " allocationBase " , " allocationProtect " , <nl> + " regionSize " , " state " , " protect " , " type " <nl> + } ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index 6f084c2 . . 88dddb0 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 39 , 11 + 39 , 13 @ @ import com . sun . jna . platform . win32 . WinBase . MEMORYSTATUSEX ; <nl> import com . sun . jna . platform . win32 . WinBase . SYSTEM _ INFO ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> + import com . sun . jna . platform . win32 . BaseTSD . SIZE _ T ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLEByReference ; <nl> import com . sun . jna . platform . win32 . WinNT . LARGE _ INTEGER ; <nl> import com . sun . jna . platform . win32 . WinNT . OSVERSIONINFO ; <nl> import com . sun . jna . platform . win32 . WinNT . OSVERSIONINFOEX ; <nl> + import com . sun . jna . platform . win32 . WinNT . MEMORY _ BASIC _ INFORMATION ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> <nl> public class Kernel32Test extends TestCase { <nl> @ @ - 717 , 4 + 719 , 11 @ @ public class Kernel32Test extends TestCase { <nl> 	 assertEquals ( bufDest . get ( 2 ) , 15 ) ; <nl> 	 assertEquals ( bufDest . get ( 3 ) , 3 ) ; <nl> } <nl> + <nl> + public void testVirtualQueryEx ( ) { <nl> + HANDLE selfHandle = Kernel32 . INSTANCE . GetCurrentProcess ( ) ; <nl> + MEMORY _ BASIC _ INFORMATION mbi = new MEMORY _ BASIC _ INFORMATION ( ) ; <nl> + SIZE _ T bytesRead = Kernel32 . INSTANCE . VirtualQueryEx ( selfHandle , Pointer . NULL , mbi , new SIZE _ T ( mbi . size ( ) ) ) ; <nl> + assertTrue ( bytesRead . intValue ( ) > 0 ) ; <nl> + } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 11a4f89 . . f33f4ec 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 26 , 6 + 26 , 7 @ @ Bug Fixes <nl> * [ # 319 ] ( https : / / github . com / twall / jna / pull / 319 ) : Fix direct - mapping type - mapped pointer result types - [ @ marco2357 ] ( https : / / github . com / marco2357 ) . <nl> * [ # 350 ] ( https : / / github . com / twall / jna / pull / 350 ) : Fix ` jnacontrib . x11 . api . X . Window . getXXXProperty ` , returns ` null ` if the window property is not found - [ @ rm5248 ] ( https : / / github . com / rm5248 ) . <nl> * Fixed ` com . sun . jna . platform . win32 . Variant ` and ` TlbImp ` - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> + * Fixed ` com . sun . jna . Pointer . getWideStringArray ` not respecting the length parameter - [ @ csoren ] ( https : / / github . com / csoren ) . <nl> <nl> Release 4 . 1 <nl> = = = = = = = = = = = <nl> diff - - git a / src / com / sun / jna / Pointer . java b / src / com / sun / jna / Pointer . java <nl> index a79c117 . . d3c867a 100644 <nl> - - - a / src / com / sun / jna / Pointer . java <nl> + + + b / src / com / sun / jna / Pointer . java <nl> @ @ - 849 , 7 + 849 , 7 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> } <nl> <nl> public String [ ] getWideStringArray ( long offset , int length ) { <nl> - return getStringArray ( offset , - 1 , NativeString . WIDE _ STRING ) ; <nl> + return getStringArray ( offset , length , NativeString . WIDE _ STRING ) ; <nl> } <nl> <nl> / * * Returns an array of < code > String < / code > based on a native array <nl> diff - - git a / test / com / sun / jna / PointerTest . java b / test / com / sun / jna / PointerTest . java <nl> index 7058a69 . . 4893a33 100644 <nl> - - - a / test / com / sun / jna / PointerTest . java <nl> + + + b / test / com / sun / jna / PointerTest . java <nl> @ @ - 122 , 6 + 122 , 27 @ @ public class PointerTest extends TestCase { <nl> Arrays . asList ( p . getStringArray ( 0 , 2 , ENCODING ) ) ) ; <nl> } <nl> <nl> + public void testGetWideStringArray ( ) { <nl> + Pointer p = new Memory ( Pointer . SIZE * 3 ) ; <nl> + final String VALUE1 = getName ( ) + UNICODE ; <nl> + final String VALUE2 = getName ( ) + " 2 " + UNICODE ; <nl> + <nl> + p . setPointer ( 0 , new NativeString ( VALUE1 , true ) . getPointer ( ) ) ; <nl> + p . setPointer ( Pointer . SIZE , new NativeString ( VALUE2 , true ) . getPointer ( ) ) ; <nl> + p . setPointer ( Pointer . SIZE * 2 , null ) ; <nl> + <nl> + assertEquals ( " Wrong null - terminated String array " , <nl> + Arrays . asList ( new String [ ] { VALUE1 , VALUE2 } ) , <nl> + Arrays . asList ( p . getWideStringArray ( 0 ) ) ) ; <nl> + <nl> + assertEquals ( " Wrong length - specified String array ( 1 ) " , <nl> + Arrays . asList ( new String [ ] { VALUE1 } ) , <nl> + Arrays . asList ( p . getWideStringArray ( 0 , 1 ) ) ) ; <nl> + assertEquals ( " Wrong length - specified String array ( 2 ) " , <nl> + Arrays . asList ( new String [ ] { VALUE1 , VALUE2 } ) , <nl> + Arrays . asList ( p . getWideStringArray ( 0 , 2 ) ) ) ; <nl> + } <nl> + <nl> public void testReadPointerArray ( ) { <nl> Pointer mem = new Memory ( Pointer . SIZE * 2 ) ; <nl> Pointer [ ] p = new Pointer [ 2 ] ;
diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index 1dceea0 . . 8ecf550 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ
diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index 02c7e95 . . 2c77944 100755 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 0b4b1cf . . eb93d1e 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 18 , 6 + 18 , 7 @ @ Features <nl> * [ # 286 ] ( https : / / github . com / twall / jna / pull / 286 ) : Added in com . sun . jna . platform . win32 . Kernel32 : CreateRemoteThread , WritePocessMemory and ReadProcessMemory - [ @ sstokic - tgm ] ( https : / / github . com / sstokic - tgm ) . <nl> * [ # 350 ] ( https : / / github . com / twall / jna / pull / 350 ) : Added ` jnacontrib . x11 . api . X . Window . getSubwindows ` - [ @ rm5248 ] ( https : / / github . com / rm5248 ) . <nl> * Improved ` contrib / msoffice ` sample - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> + * [ # 352 ] ( https : / / github . com / twall / jna / pull / 352 ) : Performance improvements due to reduced locking in ` com . sun . jna . Library $ Handler ` and fewer vararg checks in ` com . sun . jna . Function ` - [ @ Boereck ] ( https : / / github . com / Boereck ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / src / com / sun / jna / Function . java b / src / com / sun / jna / Function . java <nl> index dc1410b . . 7bcc68c 100644 <nl> - - - a / src / com / sun / jna / Function . java <nl> + + + b / src / com / sun / jna / Function . java <nl> @ @ - 288 , 9 + 288 , 10 @ @ public class Function extends Pointer { <nl> Method invokingMethod = ( Method ) options . get ( OPTION _ INVOKING _ METHOD ) ; <nl> Class [ ] paramTypes = invokingMethod ! = null ? invokingMethod . getParameterTypes ( ) : null ; <nl> boolean allowObjects = Boolean . TRUE . equals ( options . get ( Library . OPTION _ ALLOW _ OBJECTS ) ) ; <nl> + boolean isVarArgs = args . length > 0 & & invokingMethod ! = null ? isVarArgs ( invokingMethod ) : false ; <nl> for ( int i = 0 ; i < args . length ; i + + ) { <nl> Class paramType = invokingMethod ! = null <nl> - ? ( isVarArgs ( invokingMethod ) & & i > = paramTypes . length - 1 <nl> + ? ( isVarArgs & & i > = paramTypes . length - 1 <nl> ? paramTypes [ paramTypes . length - 1 ] . getComponentType ( ) <nl> : paramTypes [ i ] ) <nl> : null ; <nl> @ @ - 776 , 21 + 777 , 34 @ @ public class Function extends Pointer { <nl> return inArgs ; <nl> } <nl> <nl> - / * * Varargs are only supported on 1 . 5 + . * / <nl> - static boolean isVarArgs ( Method m ) { <nl> + / * * <nl> + * Reference to Method . isVarArgs <nl> + * / <nl> + private static Method isVarArgsMethod = getIsVarArgsMethod ( ) ; <nl> + <nl> + / * * <nl> + * If possible returns the Method . isVarArgs method via reflection <nl> + * @ return Method . isVarArgs method <nl> + * / <nl> + private static Method getIsVarArgsMethod ( ) { <nl> try { <nl> - Method v = m . getClass ( ) . getMethod ( " isVarArgs " , new Class [ 0 ] ) ; <nl> - return Boolean . TRUE . equals ( v . invoke ( m , new Object [ 0 ] ) ) ; <nl> - } <nl> - catch ( SecurityException e ) { <nl> + return Method . class . getMethod ( " isVarArgs " , new Class [ 0 ] ) ; <nl> + } catch ( SecurityException e ) { <nl> + return null ; <nl> + } catch ( NoSuchMethodException e ) { <nl> + return null ; <nl> } <nl> - catch ( NoSuchMethodException e ) { <nl> - } <nl> - catch ( IllegalArgumentException e ) { <nl> - } <nl> - catch ( IllegalAccessException e ) { <nl> - } <nl> - catch ( InvocationTargetException e ) { <nl> + } <nl> + <nl> + / * * Varargs are only supported on 1 . 5 + . * / <nl> + static boolean isVarArgs ( Method m ) { <nl> + if ( isVarArgsMethod ! = null ) { <nl> + try { <nl> + return Boolean . TRUE . equals ( isVarArgsMethod . invoke ( m , new Object [ 0 ] ) ) ; <nl> + } catch ( IllegalArgumentException e ) { <nl> + } catch ( IllegalAccessException e ) { <nl> + } catch ( InvocationTargetException e ) { <nl> + } <nl> } <nl> return false ; <nl> } <nl> diff - - git a / src / com / sun / jna / Library . java b / src / com / sun / jna / Library . java <nl> index 5928e79 . . e4d0f5d 100644 <nl> - - - a / src / com / sun / jna / Library . java <nl> + + + b / src / com / sun / jna / Library . java <nl> @ @ - 160 , 11 + 160 , 25 @ @ public interface Library { <nl> return interfaceClass ; <nl> } <nl> <nl> - private static class FunctionInfo { <nl> - InvocationHandler handler ; <nl> - Function function ; <nl> - boolean isVarArgs ; <nl> - Map options ; <nl> + / * * <nl> + * FunctionInfo has to be immutable to to make the object visible <nl> + * to other threads fully initialized . This is a prerequisite for <nl> + * using the class in the double checked locking scenario of { @ link Handler # invoke ( Object , Method , Object [ ] ) } <nl> + * / <nl> + private static final class FunctionInfo { <nl> + <nl> + FunctionInfo ( InvocationHandler handler , Function function , boolean isVarArgs , Map options ) { <nl> + super ( ) ; <nl> + this . handler = handler ; <nl> + this . function = function ; <nl> + this . isVarArgs = isVarArgs ; <nl> + this . options = options ; <nl> + } <nl> + <nl> + final InvocationHandler handler ; <nl> + final Function function ; <nl> + final boolean isVarArgs ; <nl> + final Map options ; <nl> } <nl> <nl> public Object invoke ( Object proxy , Method method , Object [ ] inArgs ) <nl> @ @ - 185 , 22 + 199 , 28 @ @ public interface Library { <nl> return Boolean . FALSE ; <nl> } <nl> <nl> - FunctionInfo f = null ; <nl> - synchronized ( functions ) { <nl> - f = ( FunctionInfo ) functions . get ( method ) ; <nl> - if ( f = = null ) { <nl> - f = new FunctionInfo ( ) ; <nl> - f . isVarArgs = Function . isVarArgs ( method ) ; <nl> - if ( invocationMapper ! = null ) { <nl> - f . handler = invocationMapper . getInvocationHandler ( nativeLibrary , method ) ; <nl> - } <nl> - if ( f . handler = = null ) { <nl> - / / Find the function to invoke <nl> - f . function = nativeLibrary . getFunction ( method . getName ( ) , method ) ; <nl> - f . options = new HashMap ( this . options ) ; <nl> - f . options . put ( Function . OPTION _ INVOKING _ METHOD , method ) ; <nl> + / / Using the double - checked locking pattern to speed up function calls <nl> + FunctionInfo f = ( FunctionInfo ) functions . get ( method ) ; <nl> + if ( f = = null ) { <nl> + synchronized ( functions ) { <nl> + f = ( FunctionInfo ) functions . get ( method ) ; <nl> + if ( f = = null ) { <nl> + boolean isVarArgs = Function . isVarArgs ( method ) ; <nl> + InvocationHandler handler = null ; <nl> + if ( invocationMapper ! = null ) { <nl> + handler = invocationMapper . getInvocationHandler ( nativeLibrary , method ) ; <nl> + } <nl> + Function function = null ; <nl> + Map options = null ; <nl> + if ( handler = = null ) { <nl> + / / Find the function to invoke <nl> + function = nativeLibrary . getFunction ( method . getName ( ) , method ) ; <nl> + options = new HashMap ( this . options ) ; <nl> + options . put ( Function . OPTION _ INVOKING _ METHOD , method ) ; <nl> + } <nl> + f = new FunctionInfo ( handler , function , isVarArgs , options ) ; <nl> + functions . put ( method , f ) ; <nl> } <nl> - functions . put ( method , f ) ; <nl> } <nl> } <nl> if ( f . isVarArgs ) {
diff - - git a / pom - jna - platform . xml b / pom - jna - platform . xml <nl> index 3cd2436 . . 878fa63 100644 <nl> - - - a / pom - jna - platform . xml <nl> + + + b / pom - jna - platform . xml <nl> @ @ - 21 , 7 + 21 , 7 @ @ <nl> < / license > <nl> < license > <nl> < name > ASL , version 2 < / name > <nl> - < url > http : / / www . apache . org / licenses / < / url > <nl> + < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt < / url > <nl> < distribution > repo < / distribution > <nl> < / license > <nl> < / licenses > <nl> diff - - git a / pom - jna . xml b / pom - jna . xml <nl> index 11e5798 . . 539400b 100644 <nl> - - - a / pom - jna . xml <nl> + + + b / pom - jna . xml <nl> @ @ - 21 , 7 + 21 , 7 @ @ <nl> < / license > <nl> < license > <nl> < name > ASL , version 2 < / name > <nl> - < url > http : / / www . apache . org / licenses / < / url > <nl> + < url > http : / / www . apache . org / licenses / LICENSE - 2 . 0 . txt < / url > <nl> < distribution > repo < / distribution > <nl> < / license > <nl> < / licenses >
diff - - git a / . travis . yml b / . travis . yml <nl> index ca27165 . . 72fe390 100644 <nl> - - - a / . travis . yml <nl> + + + b / . travis . yml <nl> @ @ - 1 , 6 + 1 , 14 @ @ <nl> language : java <nl> <nl> + install : <nl> + - ' [ " $ { TRAVIS _ OS _ NAME } " = " osx " ] & & brew update | | true ' <nl> + - ' [ " $ { TRAVIS _ OS _ NAME } " = " osx " ] & & brew install ant | | true ' <nl> + <nl> script : <nl> - - ant test <nl> + - ant test <nl> - cd contrib / platform ; ant test ; cd . . / . . <nl> - ant dist <nl> + <nl> + os : <nl> + - linux <nl> + - osx
diff - - git a / build . xml b / build . xml <nl> index 0fc31cf . . c5c1747 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 1013 , 7 + 1013 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < doctitle > JNA API Documentation < / doctitle > <nl> < header > $ { header } < / header > <nl> < bottom > $ { footer } < / bottom > <nl> - < link href = " http : / / download . oracle . com / javase / 1 . 4 . 2 / docs / api / " / > <nl> + < link href = " http : / / download . oracle . com / javase / $ { compatibility } / docs / api / " / > <nl> <nl> < packageset dir = " $ { src } " defaultexcludes = " yes " > <nl> < patternset > <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index 93c981f . . b3b1604 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 1366 , 7 + 1366 , 7 @ @ public interface Kernel32 extends WinNT { <nl> * <nl> * @ param buffer <nl> * a buffer which receives an array of <nl> - * { @ link SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION } structures . <nl> + * { @ link WinNT . SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION } structures . <nl> * @ param returnLength <nl> * on input , specifies the length of the buffer in bytes . On <nl> * output , receives the number of bytes actually returned , or if <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OpenGL32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / OpenGL32 . java <nl> index 95fd055 . . 32869d5 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OpenGL32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OpenGL32 . java <nl> @ @ - 37 , 7 + 37 , 7 @ @ public interface OpenGL32 extends StdCallLibrary { <nl> * The wglCreateContext function creates a new OpenGL rendering context , which is suitable for drawing on the device <nl> * referenced by hdc . The rendering context has the same pixel format as the device context . <nl> * <nl> - * @ param hdc <nl> + * @ param windowDC <nl> * Handle to a device context for which the function creates a suitable OpenGL rendering context . <nl> * @ return handle to an OpenGL rendering context <nl> * / <nl> @ @ - 55 , 7 + 55 , 7 @ @ public interface OpenGL32 extends StdCallLibrary { <nl> * The wglMakeCurrent function makes a specified OpenGL rendering context the calling thread ' s current rendering <nl> * context . All subsequent OpenGL calls made by the thread are drawn on the device identified by hdc . <nl> * <nl> - * @ param hdc <nl> + * @ param windowDC <nl> * Handle to a device context . Subsequent OpenGL calls made by the calling thread are drawn on the <nl> * device identified by hdc . <nl> * @ param hglrc <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OpenGL32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / OpenGL32Util . java <nl> index 7c4c40c . . 4867403 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OpenGL32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OpenGL32Util . java <nl> @ @ - 35 , 9 + 35 , 8 @ @ public abstract class OpenGL32Util { <nl> } <nl> <nl> / * * <nl> - * Return a RAS connection by name <nl> - * @ param connName the connection name <nl> - * @ return the RAS connection structure <nl> + * Count GPUs <nl> + * @ return the number of available GPUs <nl> * / <nl> public static int countGpusNV ( ) { <nl> / / create a dummy window <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> index 9b25ea2 . . 7e920e1 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> @ @ - 1798 , 7 + 1798 , 7 @ @ public interface User32 extends StdCallLibrary , WinUser , WinNT { <nl> * positions of the specified window . <nl> * <nl> * @ param hwnd A handle to the window . <nl> - * @ param dest A pointer to the WINDOWPLACEMENT structure that receives the <nl> + * @ param lpwndpl A pointer to the WINDOWPLACEMENT structure that receives the <nl> * show state and position information . <nl> * @ return The number of characters copied to the specified buffer indicates <nl> * success . Zero indicates failure . To get extended error <nl> @ @ - 1811 , 7 + 1811 , 7 @ @ public interface User32 extends StdCallLibrary , WinUser , WinNT { <nl> * of the specified window . <nl> * <nl> * @ param hwnd A handle to the window . <nl> - * @ param dest A pointer to a WINDOWPLACEMENT structure that specifies the <nl> + * @ param lpwndpl A pointer to a WINDOWPLACEMENT structure that specifies the <nl> * new show state and window positions . <nl> * @ return The number of characters copied to the specified buffer indicates <nl> * success . Zero indicates failure . To get extended error <nl> @ @ - 1917 , 7 + 1917 , 7 @ @ public interface User32 extends StdCallLibrary , WinUser , WinNT { <nl> * asynchronously ; thus , an application cannot assume that the console notification messages <nl> * have been handled when a call to ExitWindowsEx returns . <nl> * <nl> - * To shut down or restart the system , the calling process must use the { @ link com . sun . jna . platform . Advapi32 . AdjustTokenPrivileges } <nl> + * To shut down or restart the system , the calling process must use the { @ link com . sun . jna . platform . win32 . Advapi32 # AdjustTokenPrivileges } <nl> * function to enable the SE _ SHUTDOWN _ NAME privilege . For more information , see Running with Special Privileges . <nl> * <nl> * @ param uFlags The shutdown type . This parameter must include one of EWX _ HYBRID _ SHUTDOWN , <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java <nl> index 204f87a . . 87642ba 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java <nl> @ @ - 1538 , 17 + 1538 , 17 @ @ public interface WinDef extends StdCallLibrary { <nl> public static class HGLRCByReference extends HANDLEByReference { <nl> <nl> / * * <nl> - * Instantiates a new HGLRC . <nl> + * Instantiates a new pointer to an HGLRC . <nl> * / <nl> public HGLRCByReference ( ) { <nl> <nl> } <nl> <nl> / * * <nl> - * Instantiates a new HGLRC . <nl> + * Instantiates a new pointer to an HGLRC . <nl> * <nl> - * @ param p <nl> - * the p <nl> + * @ param h <nl> + * Initial valure for the HGLRC <nl> * / <nl> public HGLRCByReference ( HGLRC h ) { <nl> super ( h ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> index 0e03bd2 . . e95400a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> @ @ - 1111 , 7 + 1111 , 7 @ @ public interface WinUser extends StdCallLibrary , WinDef { <nl> <nl> / * * <nl> * The MONITORINFO structure contains information about a display monitor . < br / > <nl> - * The { @ link MyUser32 # GetMonitorInfo ( HMONITOR , MONITORINFO ) } function stores <nl> + * The { @ link User32 # GetMonitorInfo } function stores <nl> * information into a MONITORINFO structure < br / > < br / > <nl> * The MONITORINFO structure is a subset of the MONITORINFOEX structure . <nl> * / <nl> @ @ - 1154 , 7 + 1154 , 7 @ @ public interface WinUser extends StdCallLibrary , WinDef { <nl> <nl> / * * <nl> * The MONITORINFOEX structure contains information about a display monitor . < br / > <nl> - * The { @ link MyUser32 # GetMonitorInfo ( HMONITOR , MONITORINFOEX ) } function stores <nl> + * The { @ link User32 # GetMonitorInfo } function stores <nl> * information into a MONITORINFOEX structure < br / > < br / > <nl> * The MONITORINFOEX structure is a superset of the MONITORINFO structure . <nl> * The MONITORINFOEX structure adds a string member to contain a name for the display monitor . <nl> @ @ - 1210 , 7 + 1210 , 7 @ @ public interface WinUser extends StdCallLibrary , WinDef { <nl> } <nl> <nl> / * * <nl> - * An application - defined callback function that is called by the { @ link MyUser32 # EnumDisplayMonitors } function . <nl> + * An application - defined callback function that is called by the { @ link User32 # EnumDisplayMonitors } function . <nl> * < br / > < br / > <nl> * You can use the EnumDisplayMonitors function to enumerate the set of display monitors that intersect <nl> * the visible region of a specified device context and , optionally , a clipping rectangle . To do this , <nl> @ @ - 1259 , 11 + 1259 , 11 @ @ public interface WinUser extends StdCallLibrary , WinDef { <nl> int EWX _ LOGOFF = 0 ; <nl> <nl> / * * Shuts down the system and turns off the power . The system must support the power - off feature . The calling <nl> - * process must have the SE _ SHUTDOWN _ NAME privilege . For more information , see { @ link com . sun . jna . platform . win32 . User32 . ExitWindowsEx } . * / <nl> + * process must have the SE _ SHUTDOWN _ NAME privilege . For more information , see { @ link com . sun . jna . platform . win32 . User32 # ExitWindowsEx } . * / <nl> int EWX _ POWEROFF = 0x00000008 ; <nl> <nl> / * * Shuts down the system and then restarts the system . The calling process must have the SE _ SHUTDOWN _ NAME <nl> - * privilege . For more information , see { @ link com . sun . jna . platform . win32 . User32 . ExitWindowsEx } . * / <nl> + * privilege . For more information , see { @ link com . sun . jna . platform . win32 . User32 # ExitWindowsEx } . * / <nl> int EWX _ REBOOT = 0x00000002 ; <nl> <nl> / * * Shuts down the system and then restarts it , as well as any applications that have been registered for <nl> @ @ - 1273 , 7 + 1273 , 7 @ @ public interface WinUser extends StdCallLibrary , WinDef { <nl> <nl> / * * Shuts down the system to a point at which it is safe to turn off the power . All file buffers <nl> * have been flushed to disk , and all running processes have stopped . The calling process must have <nl> - * the SE _ SHUTDOWN _ NAME privilege . For more information , see { @ link com . sun . jna . platform . win32 . User32 . ExitWindowsEx } . Specifying <nl> + * the SE _ SHUTDOWN _ NAME privilege . For more information , see { @ link com . sun . jna . platform . win32 . User32 # ExitWindowsEx } . Specifying <nl> * this flag will not turn off the power even if the system supports the power - off feature . You must <nl> * specify EWX _ POWEROFF to do this . <nl> * <nl> @ @ - 1287 , 6 + 1287 , 6 @ @ public interface WinUser extends StdCallLibrary , WinDef { <nl> int EWX _ FORCE = 0x00000004 ; <nl> <nl> / * * Forces processes to terminate if they do not respond to the WM _ QUERYENDSESSION or WM _ ENDSESSION <nl> - * message within the timeout interval . For more information , see { @ link com . sun . jna . platform . win32 . User32 . ExitWindowsEx } . * / <nl> + * message within the timeout interval . For more information , see { @ link com . sun . jna . platform . win32 . User32 # ExitWindowsEx } . * / <nl> int EWX _ FORCEIFHUNG = 0x00000010 ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Winspool . java b / contrib / platform / src / com / sun / jna / platform / win32 / Winspool . java <nl> index 3833f1c . . b297196 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Winspool . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Winspool . java <nl> @ @ - 212 , 8 + 212 , 7 @ @ public interface Winspool extends StdCallLibrary { <nl> * The OpenPrinter function retrieves a handle to the specified printer or <nl> * print server or other types of handles in the print subsystem . <nl> * <nl> - * { @ link http : / / msdn <nl> - * . microsoft . com / en - us / library / windows / desktop / dd162751 ( v = vs . 85 ) . aspx } <nl> + * @ see < a href = " http : / / msdn . microsoft . com / en - us / library / windows / desktop / dd162751 ( v = vs . 85 ) . aspx } " > MSDN < / a > <nl> * <nl> * @ param pPrinterName <nl> * [ in ] A pointer to a null - terminated string that specifies the <nl> @ @ - 257 , 20 + 256 , 12 @ @ public interface Winspool extends StdCallLibrary { <nl> * the change , and to reset the change notification object for use in the <nl> * next wait operation . <nl> * <nl> - * { @ link http <nl> - * : / / msdn . microsoft . com / en - us / library / windows / desktop / dd162722 ( v = <nl> - * vs . 85 ) . aspx } <nl> + * @ see < a href = " http : / / msdn . microsoft . com / en - us / library / windows / desktop / dd162722 ( v = vs . 85 ) . aspx } " > MSDN < / a > <nl> * <nl> * @ param hPrinter <nl> * [ in ] A handle to the printer or print server that you want to <nl> * monitor . Use the OpenPrinter or AddPrinter function to <nl> * retrieve a printer handle . <nl> - * @ param phPrinter <nl> - * [ out ] A pointer to a variable that receives a handle ( not <nl> - * thread safe ) to the open printer or print server object . The <nl> - * phPrinter parameter can return an Xcv handle for use with the <nl> - * XcvData function . For more information about XcvData , see the <nl> - * DDK . <nl> * @ param fdwFilter <nl> * The conditions that will cause the change notification object <nl> * to enter a signaled state . A change notification occurs when <nl> @ @ - 278 , 10 + 269 , 11 @ @ public interface Winspool extends StdCallLibrary { <nl> * parameter can be zero if pPrinterNotifyOptions is non - NULL . <nl> * <nl> * @ param fdwOptions <nl> - * Reserved ; must be zero . pPrinterNotifyOptions [ in , optional ] A <nl> - * pointer to a PRINTER _ NOTIFY _ OPTIONS structure . The pTypes <nl> - * member of this structure is an array of one or more <nl> - * PRINTER _ NOTIFY _ OPTIONS _ TYPE structures , each of which <nl> + * Reserved ; must be zero . <nl> + * @ param pPrinterNotifyOptions <nl> + * [ in , optional ] A pointer to a PRINTER _ NOTIFY _ OPTIONS <nl> + * structure . The pTypes member of this structure is an array of <nl> + * one or more PRINTER _ NOTIFY _ OPTIONS _ TYPE structures , each of which <nl> * specifies a printer information field to monitor . A change <nl> * notification occurs when one or more of the specified fields <nl> * changes . When a change occurs , the <nl> @ @ - 314 , 9 + 306 , 7 @ @ public interface Winspool extends StdCallLibrary { <nl> * FindFirstPrinterChangeNotification function creates the change <nl> * notification object and specifies the set of changes to be monitored . <nl> * <nl> - * { @ link http <nl> - * : / / msdn . microsoft . com / en - us / library / windows / desktop / dd162721 ( v = <nl> - * vs . 85 ) . aspx } <nl> + * @ see < a href = " http : / / msdn . microsoft . com / en - us / library / windows / desktop / dd162721 ( v = vs . 85 ) . aspx } " > MSDN < / a > <nl> * <nl> * @ param hChange <nl> * [ in ] A handle to a change notification object associated with <nl> @ @ - 383 , 9 + 373 , 7 @ @ public interface Winspool extends StdCallLibrary { <nl> * associated with the change notification object will no longer be <nl> * monitored by that object . <nl> * <nl> - * { @ link http <nl> - * : / / msdn . microsoft . com / en - us / library / windows / desktop / dd162721 ( v = <nl> - * vs . 85 ) . aspx } <nl> + * @ see < a href = " http : / / msdn . microsoft . com / en - us / library / windows / desktop / dd162721 ( v = vs . 85 ) . aspx } " > MSDN < / a > <nl> * <nl> * @ param hChange <nl> * [ in ] A handle to the change notification object to be closed .
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index 72784cf . . 699795c 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 615 , 18 + 615 , 10 @ @ public class Kernel32Test extends TestCase { <nl> reader . close ( ) ; <nl> } <nl> <nl> - private int getNonexistantPID ( ) { <nl> - 	 int dwPID ; <nl> - 	 HANDLE hProc ; <nl> - 	 Random r = new Random ( 11111111 ) ; <nl> - 	 do { <nl> - 	 final int dwDesiredAccess = 0x1 ; / / PROCESS _ TERMINATE <nl> - 	 final boolean bInheritHandle = false ; <nl> - 	 dwPID = r . nextInt ( ) & 65535 ; <nl> - 	 	 hProc = Kernel32 . INSTANCE . OpenProcess ( dwDesiredAccess , bInheritHandle , dwPID ) ; <nl> - 	 } while ( ( hProc ! = null ) | | ( Kernel32 . INSTANCE . GetLastError ( ) ! = WinError . ERROR _ INVALID _ PARAMETER ) ) ; <nl> - 	 <nl> - 	 return dwPID ; <nl> + public final void testCreateRemoteThread ( ) throws IOException { <nl> + 	 HANDLE hThrd = Kernel32 . INSTANCE . CreateRemoteThread ( null , null , 0 , null , null , null , null ) ; <nl> + 	 assertNull ( hThrd ) ; <nl> + 	 assertEquals ( Kernel32 . INSTANCE . GetLastError ( ) , WinError . ERROR _ INVALID _ HANDLE ) ; <nl> } <nl> <nl> public void testWriteProcessMemory ( ) {
diff - - git a / contrib / platform / nbproject / project . properties b / contrib / platform / nbproject / project . properties <nl> index 6b92f91 . . 142637c 100644 <nl> - - - a / contrib / platform / nbproject / project . properties <nl> + + + b / contrib / platform / nbproject / project . properties <nl> @ @ - 18 , 7 + 18 , 9 @ @ dist . jar = $ { dist . dir } / jna - platform . jar <nl> dist . javadoc . dir = $ { dist . dir } / javadoc <nl> file . reference . jna . jar = . . / . . / build / jna . jar <nl> file . reference . jna - test . jar = . . / . . / build / jna - test . jar <nl> - libs . junit . classpath = . . / . . / lib / junit . jar <nl> + libs . junit . classpath = \ <nl> + 	 . . / . . / lib / junit . jar : \ <nl> + 	 . . / . . / lib / hamcrest - core - 1 . 3 . jar <nl> jar . compress = false <nl> javac . classpath = \ <nl> $ { file . reference . jna . jar } : \ <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Dxva2Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Dxva2Test . java <nl> index 7e41107 . . 1243102 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Dxva2Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Dxva2Test . java <nl> @ @ - 16 , 7 + 16 , 9 @ @ <nl> <nl> package com . sun . jna . platform . win32 ; <nl> <nl> - import junit . framework . TestCase ; <nl> + import org . junit . * ; <nl> + import static org . junit . Assert . * ; <nl> + import static org . junit . Assume . * ; <nl> <nl> import com . sun . jna . Memory ; <nl> import com . sun . jna . platform . win32 . Dxva2 ; <nl> @ @ - 41 , 12 + 43 , 12 @ @ import com . sun . jna . platform . win32 . WinUser . HMONITOR ; <nl> / * * <nl> * @ author Martin Steiger <nl> * / <nl> - public class Dxva2Test extends TestCase { <nl> + public class Dxva2Test { <nl> <nl> 	 private int monitorCount ; <nl> 	 private PHYSICAL _ MONITOR [ ] physMons ; <nl> <nl> - @ Override <nl> + @ Before <nl> 	 public void setUp ( ) <nl> { <nl> HMONITOR hMonitor = User32 . INSTANCE . MonitorFromPoint ( new POINT ( 0 , 0 ) , WinUser . MONITOR _ DEFAULTTOPRIMARY ) ; <nl> @ @ - 56 , 15 + 58 , 17 @ @ public class Dxva2Test extends TestCase { <nl> <nl> monitorCount = pdwNumberOfPhysicalMonitors . getValue ( ) . intValue ( ) ; <nl> physMons = new PHYSICAL _ MONITOR [ monitorCount ] ; <nl> - assertTrue ( Dxva2 . INSTANCE . GetPhysicalMonitorsFromHMONITOR ( hMonitor , monitorCount , physMons ) . booleanValue ( ) ) ; <nl> + <nl> + assumeTrue ( Dxva2 . INSTANCE . GetPhysicalMonitorsFromHMONITOR ( hMonitor , monitorCount , physMons ) . booleanValue ( ) ) ; <nl> } <nl> <nl> - @ Override <nl> + @ After <nl> 	 public void tearDown ( ) <nl> { <nl> - assertTrue ( Dxva2 . INSTANCE . DestroyPhysicalMonitors ( monitorCount , physMons ) . booleanValue ( ) ) ; <nl> + Dxva2 . INSTANCE . DestroyPhysicalMonitors ( monitorCount , physMons ) ; <nl> } <nl> <nl> + @ Test <nl> public void testGetMonitorTechnologyType ( ) <nl> { <nl> HANDLE hPhysicalMonitor = physMons [ 0 ] . hPhysicalMonitor ; <nl> @ @ - 75 , 6 + 79 , 7 @ @ public class Dxva2Test extends TestCase { <nl> Dxva2 . INSTANCE . GetMonitorTechnologyType ( hPhysicalMonitor , techType ) ; <nl> } <nl> <nl> + @ Test <nl> public void testGetMonitorCapabilities ( ) <nl> { <nl> HANDLE hPhysicalMonitor = physMons [ 0 ] . hPhysicalMonitor ; <nl> @ @ - 86 , 6 + 91 , 7 @ @ public class Dxva2Test extends TestCase { <nl> Dxva2 . INSTANCE . GetMonitorCapabilities ( hPhysicalMonitor , caps , temps ) ; <nl> } <nl> <nl> + @ Test <nl> public void testGetMonitorBrightness ( ) <nl> { <nl> HANDLE hPhysicalMonitor = physMons [ 0 ] . hPhysicalMonitor ; <nl> @ @ - 98 , 6 + 104 , 7 @ @ public class Dxva2Test extends TestCase { <nl> Dxva2 . INSTANCE . GetMonitorBrightness ( hPhysicalMonitor , pdwMinimumBrightness , pdwCurrentBrightness , pdwMaximumBrightness ) ; <nl> } <nl> <nl> + @ Test <nl> public void testGetMonitorContrast ( ) <nl> { <nl> HANDLE hPhysicalMonitor = physMons [ 0 ] . hPhysicalMonitor ; <nl> @ @ - 110 , 6 + 117 , 7 @ @ public class Dxva2Test extends TestCase { <nl> Dxva2 . INSTANCE . GetMonitorContrast ( hPhysicalMonitor , pdwMinimumContrast , pdwCurrentContrast , pdwMaximumContrast ) ; <nl> } <nl> <nl> + @ Test <nl> public void testGetMonitorColorTemperature ( ) <nl> { <nl> HANDLE hPhysicalMonitor = physMons [ 0 ] . hPhysicalMonitor ; <nl> @ @ - 120 , 6 + 128 , 7 @ @ public class Dxva2Test extends TestCase { <nl> Dxva2 . INSTANCE . GetMonitorColorTemperature ( hPhysicalMonitor , pctCurrentColorTemperature ) ; <nl> } <nl> <nl> + @ Test <nl> public void testCapabilitiesRequestAndCapabilitiesReply ( ) <nl> { <nl> HANDLE hPhysicalMonitor = physMons [ 0 ] . hPhysicalMonitor ; <nl> @ @ - 134 , 6 + 143 , 7 @ @ public class Dxva2Test extends TestCase { <nl> Dxva2 . INSTANCE . CapabilitiesRequestAndCapabilitiesReply ( hPhysicalMonitor , pszASCIICapabilitiesString , capStrLen ) ; <nl> } <nl> <nl> + @ Test <nl> public void testGetMonitorDisplayAreaPosition ( ) <nl> { <nl> HANDLE hPhysicalMonitor = physMons [ 0 ] . hPhysicalMonitor ; <nl> @ @ - 147 , 6 + 157 , 7 @ @ public class Dxva2Test extends TestCase { <nl> Dxva2 . INSTANCE . GetMonitorDisplayAreaPosition ( hPhysicalMonitor , ptPositionType , pdwMinimumPosition , pdwCurrentPosition , pdwMaximumPosition ) ; <nl> } <nl> <nl> + @ Test <nl> public void testGetMonitorDisplayAreaSize ( ) <nl> { <nl> HANDLE hPhysicalMonitor = physMons [ 0 ] . hPhysicalMonitor ; <nl> @ @ - 160 , 6 + 171 , 7 @ @ public class Dxva2Test extends TestCase { <nl> Dxva2 . INSTANCE . GetMonitorDisplayAreaSize ( hPhysicalMonitor , ptSizeType , pdwMinimumSize , pdwCurrentSize , pdwMaximumSize ) ; <nl> } <nl> <nl> + @ Test <nl> public void testGetMonitorRedGreenOrBlueGain ( ) <nl> { <nl> HANDLE hPhysicalMonitor = physMons [ 0 ] . hPhysicalMonitor ; <nl> @ @ - 173 , 6 + 185 , 7 @ @ public class Dxva2Test extends TestCase { <nl> Dxva2 . INSTANCE . GetMonitorRedGreenOrBlueGain ( hPhysicalMonitor , ptGainType , pdwMinimumGain , pdwCurrentGain , pdwMaximumGain ) ; <nl> } <nl> <nl> + @ Test <nl> public void testGetMonitorRedGreenOrBlueDrive ( ) <nl> { <nl> HANDLE hPhysicalMonitor = physMons [ 0 ] . hPhysicalMonitor ; <nl> @ @ - 186 , 6 + 199 , 7 @ @ public class Dxva2Test extends TestCase { <nl> Dxva2 . INSTANCE . GetMonitorRedGreenOrBlueDrive ( hPhysicalMonitor , ptDriveType , pdwMinimumDrive , pdwCurrentDrive , pdwMaximumDrive ) ; <nl> } <nl> <nl> + @ Test <nl> public void testGetTimingReport ( ) <nl> { <nl> HANDLE hPhysicalMonitor = physMons [ 0 ] . hPhysicalMonitor ; <nl> diff - - git a / lib / hamcrest - core - 1 . 3 . jar b / lib / hamcrest - core - 1 . 3 . jar <nl> new file mode 100644 <nl> index 0000000 . . 9d5fe16 <nl> Binary files / dev / null and b / lib / hamcrest - core - 1 . 3 . jar differ
diff - - git a / . travis . yml b / . travis . yml <nl> new file mode 100644 <nl> index 0000000 . . ca27165 <nl> - - - / dev / null <nl> + + + b / . travis . yml <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + language : java <nl> + <nl> + script : <nl> + - ant test <nl> + - cd contrib / platform ; ant test ; cd . . / . . <nl> + - ant dist <nl> diff - - git a / README . md b / README . md <nl> index f0013d0 . . 4a24591 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 1 , 5 + 1 , 7 @ @ <nl> ! [ Java Native Access - JNA ] ( https : / / github . com / twall / jna / raw / master / www / images / jnalogo . jpg " Java Native Access - JNA " ) <nl> <nl> + [ ! [ Build Status ] ( https : / / travis - ci . org / twall / jna . svg ? branch = master ) ] ( https : / / travis - ci . org / twall / jna ) <nl> + <nl> Java Native Access ( JNA ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = <nl>
diff - - git a / contrib / platform / src / com / sun / jna / platform / mac / XAttrUtil . java b / contrib / platform / src / com / sun / jna / platform / mac / XAttrUtil . java <nl> index 8f2349c . . 46b9548 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / mac / XAttrUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / mac / XAttrUtil . java <nl> @ @ - 15 , 11 + 15 , 9 @ @ package com . sun . jna . platform . mac ; <nl> import java . nio . ByteBuffer ; <nl> import java . nio . charset . Charset ; <nl> import java . util . ArrayList ; <nl> - import java . util . Arrays ; <nl> import java . util . List ; <nl> <nl> import com . sun . jna . Memory ; <nl> - import com . sun . jna . Pointer ; <nl> <nl> public class XAttrUtil { <nl>
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 3bf068f . . 3fef7e1 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 14 , 7 + 14 , 7 @ @ Features <nl> * Added Some minor changes to MS Office samples Test and small changes to the MS Office samples Bug Fixes - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * [ # 333 ] ( https : / / github . com / twall / jna / pull / 333 ) : Added ` CoTaskMemAlloc ` , ` CoTaskMemRealloc ` and ` CoTaskMemFree ` to ` com . sun . jna . platform . win32 . Ole32 ` - [ @ msteiger ] ( https : / / github . com / msteiger ) . <nl> * [ # 334 ] ( https : / / github . com / twall / jna / pull / 334 ) : Added ` com . sun . jna . platform . win32 . Shell32 . SHGetKnownFolderPath ` and ` KnownFolders ` GUID constants - [ @ msteiger ] ( https : / / github . com / msteiger ) . <nl> - * [ # 338 ] ( https : / / github . com / twall / jna / pull / 338 ) : Added ` com . sun . jna . platform . mac . XAttr ` and ` com . sun . jna . platform . mac . XAttrUtil ` JNA wrapper for < sys / xattr . h > for Mac OS X - [ @ rednoah ] ( https : / / github . com / rednoah ) <nl> + * [ # 338 ] ( https : / / github . com / twall / jna / pull / 338 ) : Added ` com . sun . jna . platform . mac . XAttr ` and ` com . sun . jna . platform . mac . XAttrUtil ` JNA wrapper for ` < sys / xattr . h > ` for Mac OS X - [ @ rednoah ] ( https : / / github . com / rednoah ) <nl> <nl> Bug Fixes <nl> - - - - - - - - -
diff - - git a / CHANGES . md b / CHANGES . md <nl> index d15d869 . . a809bb8 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 14 , 7 + 14 , 7 @ @ Features <nl> * Added Some minor changes to MS Office samples Test and small changes to the MS Office samples Bug Fixes - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * [ # 333 ] ( https : / / github . com / twall / jna / pull / 333 ) : Added ` CoTaskMemAlloc ` , ` CoTaskMemRealloc ` and ` CoTaskMemFree ` to ` com . sun . jna . platform . win32 . Ole32 ` - [ @ msteiger ] ( https : / / github . com / msteiger ) . <nl> * [ # 334 ] ( https : / / github . com / twall / jna / pull / 334 ) : Added ` com . sun . jna . platform . win32 . Shell32 . SHGetKnownFolderPath ` and ` KnownFolders ` GUID constants - [ @ msteiger ] ( https : / / github . com / msteiger ) . <nl> - * Added ` com . sun . jna . platform . mac . XAttr ` and ` com . sun . jna . platform . mac . XAttrUtil ` JNA wrapper for < sys / xattr . h > for Mac OS X - [ @ rednoah ] ( https : / / github . com / rednoah ) <nl> + * [ # 338 ] Added ` com . sun . jna . platform . mac . XAttr ` and ` com . sun . jna . platform . mac . XAttrUtil ` JNA wrapper for < sys / xattr . h > for Mac OS X - [ @ rednoah ] ( https : / / github . com / rednoah ) <nl> <nl> Bug Fixes <nl> - - - - - - - - -
diff - - git a / contrib / platform / src / com / sun / jna / platform / mac / XAttrUtil . java b / contrib / platform / src / com / sun / jna / platform / mac / XAttrUtil . java <nl> new file mode 100644 <nl> index 0000000 . . da1db0e <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / mac / XAttrUtil . java <nl> @ @ - 0 , 0 + 1 , 100 @ @ <nl> + / * Copyright ( c ) 2014 Reinhard Pointner , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . mac ; <nl> + <nl> + import java . nio . ByteBuffer ; <nl> + import java . nio . charset . Charset ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + <nl> + import com . sun . jna . Memory ; <nl> + import com . sun . jna . Pointer ; <nl> + <nl> + public class XAttrUtil { <nl> + <nl> + 	 public static List < String > listXAttr ( String path ) { <nl> + 	 	 / / get required buffer size <nl> + 	 	 long bufferLength = XAttr . INSTANCE . listxattr ( path , Pointer . NULL , 0 , 0 ) ; <nl> + <nl> + 	 	 if ( bufferLength < 0 ) <nl> + 	 	 	 return null ; <nl> + <nl> + 	 	 if ( bufferLength = = 0 ) <nl> + 	 	 	 return new ArrayList < String > ( 0 ) ; <nl> + <nl> + 	 	 Memory valueBuffer = new Memory ( bufferLength ) ; <nl> + 	 	 long valueLength = XAttr . INSTANCE . listxattr ( path , valueBuffer , bufferLength , 0 ) ; <nl> + <nl> + 	 	 if ( valueLength < 0 ) <nl> + 	 	 	 return null ; <nl> + <nl> + 	 	 return decodeStringSequence ( valueBuffer . getByteBuffer ( 0 , valueLength ) ) ; <nl> + 	 } <nl> + <nl> + 	 public static String getXAttr ( String path , String name ) { <nl> + 	 	 / / get required buffer size <nl> + 	 	 long bufferLength = XAttr . INSTANCE . getxattr ( path , name , Pointer . NULL , 0 , 0 , 0 ) ; <nl> + <nl> + 	 	 if ( bufferLength < 0 ) <nl> + 	 	 	 return null ; <nl> + <nl> + 	 	 Memory valueBuffer = new Memory ( bufferLength ) ; <nl> + 	 	 long valueLength = XAttr . INSTANCE . getxattr ( path , name , valueBuffer , bufferLength , 0 , 0 ) ; <nl> + <nl> + 	 	 if ( valueLength < 0 ) <nl> + 	 	 	 return null ; <nl> + <nl> + 	 	 return decodeString ( valueBuffer . getByteBuffer ( 0 , valueLength - 1 ) ) ; <nl> + 	 } <nl> + <nl> + 	 public static int setXAttr ( String path , String name , String value ) { <nl> + 	 	 Memory valueBuffer = encodeString ( value ) ; <nl> + 	 	 return XAttr . INSTANCE . setxattr ( path , name , valueBuffer , valueBuffer . size ( ) , 0 , 0 ) ; <nl> + 	 } <nl> + <nl> + 	 public static int removeXAttr ( String path , String name ) { <nl> + 	 	 return XAttr . INSTANCE . removexattr ( path , name , 0 ) ; <nl> + 	 } <nl> + <nl> + 	 protected static Memory encodeString ( String s ) { <nl> + 	 	 / / create NULL - terminated UTF - 8 String <nl> + 	 	 byte [ ] bb = s . getBytes ( Charset . forName ( " UTF - 8 " ) ) ; <nl> + 	 	 Memory valueBuffer = new Memory ( bb . length + 1 ) ; <nl> + 	 	 valueBuffer . write ( 0 , bb , 0 , bb . length ) ; <nl> + 	 	 valueBuffer . setByte ( valueBuffer . size ( ) - 1 , ( byte ) 0 ) ; <nl> + 	 	 return valueBuffer ; <nl> + 	 } <nl> + <nl> + 	 protected static String decodeString ( ByteBuffer bb ) { <nl> + 	 	 return Charset . forName ( " UTF - 8 " ) . decode ( bb ) . toString ( ) ; <nl> + 	 } <nl> + <nl> + 	 protected static List < String > decodeStringSequence ( ByteBuffer bb ) { <nl> + 	 	 List < String > names = new ArrayList < String > ( ) ; <nl> + <nl> + 	 	 bb . mark ( ) ; / / first key starts from here <nl> + 	 	 while ( bb . hasRemaining ( ) ) { <nl> + 	 	 	 if ( bb . get ( ) = = 0 ) { <nl> + 	 	 	 	 ByteBuffer nameBuffer = ( ByteBuffer ) bb . duplicate ( ) . limit ( bb . position ( ) - 1 ) . reset ( ) ; <nl> + 	 	 	 	 if ( nameBuffer . hasRemaining ( ) ) { <nl> + 	 	 	 	 	 names . add ( decodeString ( nameBuffer ) ) ; <nl> + 	 	 	 	 } <nl> + 	 	 	 	 bb . mark ( ) ; / / next key starts from here <nl> + 	 	 	 } <nl> + 	 	 } <nl> + <nl> + 	 	 return names ; <nl> + 	 } <nl> + <nl> + } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / mac / XAttrUtilTest . java b / contrib / platform / test / com / sun / jna / platform / mac / XAttrUtilTest . java <nl> new file mode 100644 <nl> index 0000000 . . 8902fe6 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / mac / XAttrUtilTest . java <nl> @ @ - 0 , 0 + 1 , 117 @ @ <nl> + / * Copyright ( c ) 2014 Reinhard Pointner , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . mac ; <nl> + <nl> + import java . io . File ; <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + <nl> + import junit . framework . TestCase ; <nl> + <nl> + public class XAttrUtilTest extends TestCase { <nl> + <nl> + 	 String testPath ; <nl> + <nl> + 	 protected void setUp ( ) throws Exception { <nl> + 	 	 testPath = File . createTempFile ( " xattr - test " , " . txt " ) . getAbsolutePath ( ) ; <nl> + 	 	 assertTrue ( new File ( testPath ) . exists ( ) ) ; <nl> + 	 } <nl> + <nl> + 	 protected void tearDown ( ) throws Exception { <nl> + 	 	 new File ( testPath ) . delete ( ) ; <nl> + 	 	 assertFalse ( new File ( testPath ) . exists ( ) ) ; <nl> + 	 } <nl> + <nl> + 	 public void testListXAttr ( ) { <nl> + 	 	 / / no xattr initially <nl> + 	 	 List < String > keys = XAttrUtil . listXAttr ( testPath ) ; <nl> + 	 	 assertEquals ( 0 , keys . size ( ) ) ; <nl> + <nl> + 	 	 / / set multiple xattr <nl> + 	 	 String [ ] names = new String [ ] { " Java " , " Native " , " Access " } ; <nl> + 	 	 for ( int i = 0 ; i < names . length ; i + + ) { <nl> + 	 	 	 / / set xattr <nl> + 	 	 	 XAttrUtil . setXAttr ( testPath , names [ i ] , names [ i ] ) ; <nl> + <nl> + 	 	 	 / / check if new xattr is listed <nl> + 	 	 	 keys = XAttrUtil . listXAttr ( testPath ) ; <nl> + 	 	 	 assertEquals ( i + 1 , keys . size ( ) ) ; <nl> + 	 	 	 assertTrue ( keys . contains ( names [ i ] ) ) ; <nl> + 	 	 } <nl> + 	 } <nl> + <nl> + 	 public void testGetXAttr ( ) { <nl> + 	 	 String value = XAttrUtil . getXAttr ( testPath , " JNA " ) ; <nl> + 	 	 assertNull ( value ) ; <nl> + <nl> + 	 	 XAttrUtil . setXAttr ( testPath , " JNA " , " Java Native Access " ) ; <nl> + 	 	 value = XAttrUtil . getXAttr ( testPath , " JNA " ) ; <nl> + <nl> + 	 	 assertEquals ( Arrays . toString ( " Java Native Access " . getBytes ( ) ) , Arrays . toString ( value . getBytes ( ) ) ) ; <nl> + 	 } <nl> + <nl> + 	 public void testSetXAttr ( ) { <nl> + 	 	 String value = XAttrUtil . getXAttr ( testPath , " JNA " ) ; <nl> + 	 	 assertNull ( value ) ; <nl> + <nl> + 	 	 XAttrUtil . setXAttr ( testPath , " JNA " , " Java Native Access " ) ; <nl> + 	 	 value = XAttrUtil . getXAttr ( testPath , " JNA " ) ; <nl> + 	 	 assertEquals ( " Java Native Access " , value ) ; <nl> + <nl> + 	 	 XAttrUtil . setXAttr ( testPath , " JNA " , " is nice " ) ; <nl> + 	 	 value = XAttrUtil . getXAttr ( testPath , " JNA " ) ; <nl> + 	 	 assertEquals ( " is nice " , value ) ; <nl> + 	 } <nl> + <nl> + 	 public void testRemoveXAttr ( ) { <nl> + 	 	 XAttrUtil . setXAttr ( testPath , " JNA " , " Java Native Access " ) ; <nl> + 	 	 assertEquals ( " [ JNA ] " , XAttrUtil . listXAttr ( testPath ) . toString ( ) ) ; <nl> + <nl> + 	 	 / / remove xattr <nl> + 	 	 XAttrUtil . removeXAttr ( testPath , " JNA " ) ; <nl> + <nl> + 	 	 assertEquals ( " [ ] " , XAttrUtil . listXAttr ( testPath ) . toString ( ) ) ; <nl> + 	 } <nl> + <nl> + 	 public void testUnicode ( ) { <nl> + 	 	 String [ ] names = new String [ ] { " 中 文 " , " に ほ ん ご " , " Ö sterreichisch " , " Fran ç aise " , " Portugu ê s " } ; <nl> + 	 	 for ( int i = 0 ; i < names . length ; i + + ) { <nl> + 	 	 	 / / set xattr <nl> + 	 	 	 XAttrUtil . setXAttr ( testPath , names [ i ] , names [ i ] ) ; <nl> + <nl> + 	 	 	 / / check if new xattr is listed <nl> + 	 	 	 List < String > keys = XAttrUtil . listXAttr ( testPath ) ; <nl> + 	 	 	 assertEquals ( i + 1 , keys . size ( ) ) ; <nl> + 	 	 	 assertTrue ( keys . contains ( names [ i ] ) ) ; <nl> + <nl> + 	 	 	 String value = XAttrUtil . getXAttr ( testPath , names [ i ] ) ; <nl> + 	 	 	 assertEquals ( names [ i ] , value ) ; <nl> + 	 	 } <nl> + 	 } <nl> + <nl> + 	 public void testLargeData ( ) { <nl> + 	 	 StringBuilder name = new StringBuilder ( ) ; <nl> + 	 	 while ( name . length ( ) < XAttr . XATTR _ MAXNAMELEN ) { <nl> + 	 	 	 name . append ( ' X ' ) ; <nl> + 	 	 } <nl> + <nl> + 	 	 StringBuilder data = new StringBuilder ( ) ; <nl> + 	 	 while ( data . length ( ) < 4 * 1024 * 1024 ) { <nl> + 	 	 	 data . append ( ' X ' ) ; <nl> + 	 	 } <nl> + <nl> + 	 	 XAttrUtil . setXAttr ( testPath , name . toString ( ) , data . toString ( ) ) ; <nl> + 	 	 String value = XAttrUtil . getXAttr ( testPath , name . toString ( ) ) ; <nl> + 	 	 assertEquals ( data . toString ( ) , value . toString ( ) ) ; <nl> + 	 } <nl> + }
diff - - git a / contrib / platform / src / com / sun / jna / platform / mac / XAttr . java b / contrib / platform / src / com / sun / jna / platform / mac / XAttr . java <nl> new file mode 100644 <nl> index 0000000 . . 69c8e88 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / mac / XAttr . java <nl> @ @ - 0 , 0 + 1 , 51 @ @ <nl> + / * Copyright ( c ) 2014 Reinhard Pointner , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . mac ; <nl> + <nl> + import com . sun . jna . Library ; <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + <nl> + / * * <nl> + * JNA wrapper for < sys / xattr . h > <nl> + * <nl> + * / <nl> + interface XAttr extends Library { <nl> + <nl> + 	 / / load from current image <nl> + 	 XAttr INSTANCE = ( XAttr ) Native . loadLibrary ( null , XAttr . class ) ; <nl> + <nl> + 	 / / see / usr / include / sys / xattr . h <nl> + 	 int XATTR _ NOFOLLOW = 0x0001 ; <nl> + 	 int XATTR _ CREATE = 0x0002 ; <nl> + 	 int XATTR _ REPLACE = 0x0004 ; <nl> + 	 int XATTR _ NOSECURITY = 0x0008 ; <nl> + 	 int XATTR _ NODEFAULT = 0x0010 ; <nl> + 	 int XATTR _ SHOWCOMPRESSION = 0x0020 ; <nl> + 	 int XATTR _ MAXNAMELEN = 127 ; <nl> + 	 String XATTR _ FINDERINFO _ NAME = " com . apple . FinderInfo " ; <nl> + 	 String XATTR _ RESOURCEFORK _ NAME = " com . apple . ResourceFork " ; <nl> + <nl> + 	 / / see https : / / developer . apple . com / library / mac / documentation / Darwin / Reference / ManPages / man2 / getxattr . 2 . html <nl> + 	 long getxattr ( String path , String name , Pointer value , long size , int position , int options ) ; <nl> + <nl> + 	 / / see https : / / developer . apple . com / library / mac / documentation / Darwin / Reference / ManPages / man2 / setxattr . 2 . html <nl> + 	 int setxattr ( String path , String name , Pointer value , long size , int position , int options ) ; <nl> + <nl> + 	 / / see https : / / developer . apple . com / library / mac / documentation / Darwin / Reference / ManPages / man2 / removexattr . 2 . html <nl> + 	 int removexattr ( String path , String name , int options ) ; <nl> + <nl> + 	 / / see https : / / developer . apple . com / library / mac / documentation / Darwin / Reference / ManPages / man2 / listxattr . 2 . html <nl> + 	 long listxattr ( String path , Pointer namebuff , long size , int options ) ; <nl> + <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / mac / XattrUtil . java b / contrib / platform / src / com / sun / jna / platform / mac / XattrUtil . java <nl> new file mode 100644 <nl> index 0000000 . . b4170e5 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / mac / XattrUtil . java <nl> @ @ - 0 , 0 + 1 , 100 @ @ <nl> + / * Copyright ( c ) 2014 Reinhard Pointner , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . mac ; <nl> + <nl> + import java . nio . ByteBuffer ; <nl> + import java . nio . charset . Charset ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + <nl> + import com . sun . jna . Memory ; <nl> + import com . sun . jna . Pointer ; <nl> + <nl> + public class XattrUtil { <nl> + <nl> + 	 public static List < String > listXAttr ( String path ) { <nl> + 	 	 / / get required buffer size <nl> + 	 	 long bufferLength = XAttr . INSTANCE . listxattr ( path , Pointer . NULL , 0 , 0 ) ; <nl> + <nl> + 	 	 if ( bufferLength < 0 ) <nl> + 	 	 	 return null ; <nl> + <nl> + 	 	 if ( bufferLength = = 0 ) <nl> + 	 	 	 return new ArrayList < String > ( 0 ) ; <nl> + <nl> + 	 	 Memory valueBuffer = new Memory ( bufferLength ) ; <nl> + 	 	 long valueLength = XAttr . INSTANCE . listxattr ( path , valueBuffer , bufferLength , 0 ) ; <nl> + <nl> + 	 	 if ( valueLength < 0 ) <nl> + 	 	 	 return null ; <nl> + <nl> + 	 	 return decodeStringSequence ( valueBuffer . getByteBuffer ( 0 , valueLength ) ) ; <nl> + 	 } <nl> + <nl> + 	 public static String getXAttr ( String path , String name ) { <nl> + 	 	 / / get required buffer size <nl> + 	 	 long bufferLength = XAttr . INSTANCE . getxattr ( path , name , Pointer . NULL , 0 , 0 , 0 ) ; <nl> + <nl> + 	 	 if ( bufferLength < 0 ) <nl> + 	 	 	 return null ; <nl> + <nl> + 	 	 Memory valueBuffer = new Memory ( bufferLength ) ; <nl> + 	 	 long valueLength = XAttr . INSTANCE . getxattr ( path , name , valueBuffer , bufferLength , 0 , 0 ) ; <nl> + <nl> + 	 	 if ( valueLength < 0 ) <nl> + 	 	 	 return null ; <nl> + <nl> + 	 	 return decodeString ( valueBuffer . getByteBuffer ( 0 , valueLength - 1 ) ) ; <nl> + 	 } <nl> + <nl> + 	 public static int setXAttr ( String path , String name , String value ) { <nl> + 	 	 Memory valueBuffer = encodeString ( value ) ; <nl> + 	 	 return XAttr . INSTANCE . setxattr ( path , name , valueBuffer , valueBuffer . size ( ) , 0 , 0 ) ; <nl> + 	 } <nl> + <nl> + 	 public static int removeXAttr ( String path , String name ) { <nl> + 	 	 return XAttr . INSTANCE . removexattr ( path , name , 0 ) ; <nl> + 	 } <nl> + <nl> + 	 protected static Memory encodeString ( String s ) { <nl> + 	 	 / / create NULL - terminated UTF - 8 String <nl> + 	 	 byte [ ] bb = s . getBytes ( Charset . forName ( " UTF - 8 " ) ) ; <nl> + 	 	 Memory valueBuffer = new Memory ( bb . length + 1 ) ; <nl> + 	 	 valueBuffer . write ( 0 , bb , 0 , bb . length ) ; <nl> + 	 	 valueBuffer . setByte ( valueBuffer . size ( ) - 1 , ( byte ) 0 ) ; <nl> + 	 	 return valueBuffer ; <nl> + 	 } <nl> + <nl> + 	 protected static String decodeString ( ByteBuffer bb ) { <nl> + 	 	 return Charset . forName ( " UTF - 8 " ) . decode ( bb ) . toString ( ) ; <nl> + 	 } <nl> + <nl> + 	 protected static List < String > decodeStringSequence ( ByteBuffer bb ) { <nl> + 	 	 List < String > names = new ArrayList < String > ( ) ; <nl> + <nl> + 	 	 bb . mark ( ) ; / / first key starts from here <nl> + 	 	 while ( bb . hasRemaining ( ) ) { <nl> + 	 	 	 if ( bb . get ( ) = = 0 ) { <nl> + 	 	 	 	 ByteBuffer nameBuffer = ( ByteBuffer ) bb . duplicate ( ) . limit ( bb . position ( ) - 1 ) . reset ( ) ; <nl> + 	 	 	 	 if ( nameBuffer . hasRemaining ( ) ) { <nl> + 	 	 	 	 	 names . add ( decodeString ( nameBuffer ) ) ; <nl> + 	 	 	 	 } <nl> + 	 	 	 	 bb . mark ( ) ; / / next key starts from here <nl> + 	 	 	 } <nl> + 	 	 } <nl> + <nl> + 	 	 return names ; <nl> + 	 } <nl> + <nl> + } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / mac / XattrUtilTest . java b / contrib / platform / test / com / sun / jna / platform / mac / XattrUtilTest . java <nl> new file mode 100644 <nl> index 0000000 . . 0949719 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / mac / XattrUtilTest . java <nl> @ @ - 0 , 0 + 1 , 117 @ @ <nl> + / * Copyright ( c ) 2014 Reinhard Pointner , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . mac ; <nl> + <nl> + import java . io . File ; <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + <nl> + import junit . framework . TestCase ; <nl> + <nl> + public class XattrUtilTest extends TestCase { <nl> + <nl> + 	 String testPath ; <nl> + <nl> + 	 protected void setUp ( ) throws Exception { <nl> + 	 	 testPath = File . createTempFile ( " xattr - test " , " . txt " ) . getAbsolutePath ( ) ; <nl> + 	 	 assertTrue ( new File ( testPath ) . exists ( ) ) ; <nl> + 	 } <nl> + <nl> + 	 protected void tearDown ( ) throws Exception { <nl> + 	 	 new File ( testPath ) . delete ( ) ; <nl> + 	 	 assertFalse ( new File ( testPath ) . exists ( ) ) ; <nl> + 	 } <nl> + <nl> + 	 public void testListXAttr ( ) { <nl> + 	 	 / / no xattr initially <nl> + 	 	 List < String > keys = XattrUtil . listXAttr ( testPath ) ; <nl> + 	 	 assertEquals ( 0 , keys . size ( ) ) ; <nl> + <nl> + 	 	 / / set multiple xattr <nl> + 	 	 String [ ] names = new String [ ] { " Java " , " Native " , " Access " } ; <nl> + 	 	 for ( int i = 0 ; i < names . length ; i + + ) { <nl> + 	 	 	 / / set xattr <nl> + 	 	 	 XattrUtil . setXAttr ( testPath , names [ i ] , names [ i ] ) ; <nl> + <nl> + 	 	 	 / / check if new xattr is listed <nl> + 	 	 	 keys = XattrUtil . listXAttr ( testPath ) ; <nl> + 	 	 	 assertEquals ( i + 1 , keys . size ( ) ) ; <nl> + 	 	 	 assertTrue ( keys . contains ( names [ i ] ) ) ; <nl> + 	 	 } <nl> + 	 } <nl> + <nl> + 	 public void testGetXAttr ( ) { <nl> + 	 	 String value = XattrUtil . getXAttr ( testPath , " JNA " ) ; <nl> + 	 	 assertNull ( value ) ; <nl> + <nl> + 	 	 XattrUtil . setXAttr ( testPath , " JNA " , " Java Native Access " ) ; <nl> + 	 	 value = XattrUtil . getXAttr ( testPath , " JNA " ) ; <nl> + <nl> + 	 	 assertEquals ( Arrays . toString ( " Java Native Access " . getBytes ( ) ) , Arrays . toString ( value . getBytes ( ) ) ) ; <nl> + 	 } <nl> + <nl> + 	 public void testSetXAttr ( ) { <nl> + 	 	 String value = XattrUtil . getXAttr ( testPath , " JNA " ) ; <nl> + 	 	 assertNull ( value ) ; <nl> + <nl> + 	 	 XattrUtil . setXAttr ( testPath , " JNA " , " Java Native Access " ) ; <nl> + 	 	 value = XattrUtil . getXAttr ( testPath , " JNA " ) ; <nl> + 	 	 assertEquals ( " Java Native Access " , value ) ; <nl> + <nl> + 	 	 XattrUtil . setXAttr ( testPath , " JNA " , " is nice " ) ; <nl> + 	 	 value = XattrUtil . getXAttr ( testPath , " JNA " ) ; <nl> + 	 	 assertEquals ( " is nice " , value ) ; <nl> + 	 } <nl> + <nl> + 	 public void testRemoveXAttr ( ) { <nl> + 	 	 XattrUtil . setXAttr ( testPath , " JNA " , " Java Native Access " ) ; <nl> + 	 	 assertEquals ( " [ JNA ] " , XattrUtil . listXAttr ( testPath ) . toString ( ) ) ; <nl> + <nl> + 	 	 / / remove xattr <nl> + 	 	 XattrUtil . removeXAttr ( testPath , " JNA " ) ; <nl> + <nl> + 	 	 assertEquals ( " [ ] " , XattrUtil . listXAttr ( testPath ) . toString ( ) ) ; <nl> + 	 } <nl> + <nl> + 	 public void testUnicode ( ) { <nl> + 	 	 String [ ] names = new String [ ] { " 中 文 " , " に ほ ん ご " , " Ö sterreichisch " , " Fran ç aise " , " Portugu ê s " } ; <nl> + 	 	 for ( int i = 0 ; i < names . length ; i + + ) { <nl> + 	 	 	 / / set xattr <nl> + 	 	 	 XattrUtil . setXAttr ( testPath , names [ i ] , names [ i ] ) ; <nl> + <nl> + 	 	 	 / / check if new xattr is listed <nl> + 	 	 	 List < String > keys = XattrUtil . listXAttr ( testPath ) ; <nl> + 	 	 	 assertEquals ( i + 1 , keys . size ( ) ) ; <nl> + 	 	 	 assertTrue ( keys . contains ( names [ i ] ) ) ; <nl> + <nl> + 	 	 	 String value = XattrUtil . getXAttr ( testPath , names [ i ] ) ; <nl> + 	 	 	 assertEquals ( names [ i ] , value ) ; <nl> + 	 	 } <nl> + 	 } <nl> + <nl> + 	 public void testLargeData ( ) { <nl> + 	 	 StringBuilder name = new StringBuilder ( ) ; <nl> + 	 	 while ( name . length ( ) < XAttr . XATTR _ MAXNAMELEN ) { <nl> + 	 	 	 name . append ( ' X ' ) ; <nl> + 	 	 } <nl> + <nl> + 	 	 StringBuilder data = new StringBuilder ( ) ; <nl> + 	 	 while ( data . length ( ) < 4 * 1024 * 1024 ) { <nl> + 	 	 	 data . append ( ' X ' ) ; <nl> + 	 	 } <nl> + <nl> + 	 	 XattrUtil . setXAttr ( testPath , name . toString ( ) , data . toString ( ) ) ; <nl> + 	 	 String value = XattrUtil . getXAttr ( testPath , name . toString ( ) ) ; <nl> + 	 	 assertEquals ( data . toString ( ) , value . toString ( ) ) ; <nl> + 	 } <nl> + }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 6b76c35 . . ba6d688 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 12 , 6 + 12 , 7 @ @ Features <nl> * Added Winspool monitor sample and updated Kernel32 , WinBase , Winspool - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * Added Some minor changes to MS Office samples Test and small changes to the MS Office samples Bug Fixes - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * [ # 333 ] ( https : / / github . com / twall / jna / pull / 333 ) : Added ` CoTaskMemAlloc ` , ` CoTaskMemRealloc ` and ` CoTaskMemFree ` to ` com . sun . jna . platform . win32 . Ole32 ` - [ @ msteiger ] ( https : / / github . com / msteiger ) . <nl> + * [ # 334 ] ( https : / / github . com / twall / jna / pull / 334 ) : Added ` com . sun . jna . platform . win32 . Shell32 . SHGetKnownFolderPath ` and ` KnownFolders ` GUID constants - [ @ msteiger ] ( https : / / github . com / msteiger ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / KnownFolders . java b / contrib / platform / src / com / sun / jna / platform / win32 / KnownFolders . java <nl> new file mode 100644 <nl> index 0000000 . . 0abf39d <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / KnownFolders . java <nl> @ @ - 0 , 0 + 1 , 329 @ @ <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . platform . win32 . Guid . GUID ; <nl> + <nl> + / * * <nl> + * Ported from KnownFolders . h . <nl> + * Microsoft Windows SDK 7 . 0A . <nl> + * @ author Martin Steiger <nl> + * / <nl> + public class KnownFolders <nl> + { <nl> + / * * <nl> + * display name : " Network " < br / > <nl> + * legacy display name : " My Network Places " < br / > <nl> + * default path : < br / > <nl> + * legacy CSIDL value : CSIDL _ NETWORK < br / > <nl> + * / <nl> + public static final GUID FOLDERID _ NetworkFolder = GUID . fromString ( " { D20BEEC4 - 5CA8 - 4905 - AE3B - BF251EA09B53 } " ) ; <nl> + <nl> + / / { 0AC0837C - BBF8 - 452A - 850D - 79D08E667CA7 } <nl> + public static final GUID FOLDERID _ ComputerFolder = GUID . fromString ( " { 0AC0837C - BBF8 - 452A - 850D - 79D08E667CA7 } " ) ; <nl> + <nl> + / / { 4D9F7874 - 4E0C - 4904 - 967B - 40B0D20C3E4B } <nl> + public static final GUID FOLDERID _ InternetFolder = GUID . fromString ( " { 4D9F7874 - 4E0C - 4904 - 967B - 40B0D20C3E4B } " ) ; <nl> + <nl> + / / { 82A74AEB - AEB4 - 465C - A014 - D097EE346D63 } <nl> + public static final GUID FOLDERID _ ControlPanelFolder = GUID . fromString ( " { 82A74AEB - AEB4 - 465C - A014 - D097EE346D63 } " ) ; <nl> + <nl> + / / { 76FC4E2D - D6AD - 4519 - A663 - 37BD56068185 } <nl> + public static final GUID FOLDERID _ PrintersFolder = GUID . fromString ( " { 76FC4E2D - D6AD - 4519 - A663 - 37BD56068185 } " ) ; <nl> + <nl> + / / { 43668BF8 - C14E - 49B2 - 97C9 - 747784D784B7 } <nl> + public static final GUID FOLDERID _ SyncManagerFolder = GUID . fromString ( " { 43668BF8 - C14E - 49B2 - 97C9 - 747784D784B7 } " ) ; <nl> + <nl> + / / { 0F214138 - B1D3 - 4a90 - BBA9 - 27CBC0C5389A } <nl> + public static final GUID FOLDERID _ SyncSetupFolder = GUID . fromString ( " { 0f214138 - b1d3 - 4a90 - bba9 - 27cbc0c5389a } " ) ; <nl> + <nl> + / / { 4bfefb45 - 347d - 4006 - a5be - ac0cb0567192 } <nl> + public static final GUID FOLDERID _ ConflictFolder = GUID . fromString ( " { 4bfefb45 - 347d - 4006 - a5be - ac0cb0567192 } " ) ; <nl> + <nl> + / / { 289a9a43 - be44 - 4057 - a41b - 587a76d7e7f9 } <nl> + public static final GUID FOLDERID _ SyncResultsFolder = GUID . fromString ( " { 289a9a43 - be44 - 4057 - a41b - 587a76d7e7f9 } " ) ; <nl> + <nl> + / / { B7534046 - 3ECB - 4C18 - BE4E - 64CD4CB7D6AC } <nl> + public static final GUID FOLDERID _ RecycleBinFolder = GUID . fromString ( " { B7534046 - 3ECB - 4C18 - BE4E - 64CD4CB7D6AC } " ) ; <nl> + <nl> + / / { 6F0CD92B - 2E97 - 45D1 - 88FF - B0D186B8DEDD } <nl> + public static final GUID FOLDERID _ ConnectionsFolder = GUID . fromString ( " { 6F0CD92B - 2E97 - 45D1 - 88FF - B0D186B8DEDD } " ) ; <nl> + <nl> + / / { FD228CB7 - AE11 - 4AE3 - 864C - 16F3910AB8FE } <nl> + public static final GUID FOLDERID _ Fonts = GUID . fromString ( " { FD228CB7 - AE11 - 4AE3 - 864C - 16F3910AB8FE } " ) ; <nl> + <nl> + / * * <nl> + * display name : " Desktop " < br / > <nl> + * default path : " C : \ Users \ < UserName > \ Desktop " <nl> + * legacy default path : " C : \ Documents and Settings \ < userName > \ Desktop " <nl> + * legacy CSIDL value : CSIDL _ DESKTOP <nl> + * / <nl> + / / { B4BFCC3A - DB2C - 424C - B029 - 7FE99A87C641 } <nl> + public static final GUID FOLDERID _ Desktop = GUID . fromString ( " { B4BFCC3A - DB2C - 424C - B029 - 7FE99A87C641 } " ) ; <nl> + <nl> + / / { B97D20BB - F46A - 4C97 - BA10 - 5E3608430854 } <nl> + public static final GUID FOLDERID _ Startup = GUID . fromString ( " { B97D20BB - F46A - 4C97 - BA10 - 5E3608430854 } " ) ; <nl> + <nl> + / / { A77F5D77 - 2E2B - 44C3 - A6A2 - ABA601054A51 } <nl> + public static final GUID FOLDERID _ Programs = GUID . fromString ( " { A77F5D77 - 2E2B - 44C3 - A6A2 - ABA601054A51 } " ) ; <nl> + <nl> + / / { 625B53C3 - AB48 - 4EC1 - BA1F - A1EF4146FC19 } <nl> + public static final GUID FOLDERID _ StartMenu = GUID . fromString ( " { 625B53C3 - AB48 - 4EC1 - BA1F - A1EF4146FC19 } " ) ; <nl> + <nl> + / / { AE50C081 - EBD2 - 438A - 8655 - 8A092E34987A } <nl> + public static final GUID FOLDERID _ Recent = GUID . fromString ( " { AE50C081 - EBD2 - 438A - 8655 - 8A092E34987A } " ) ; <nl> + <nl> + / / { 8983036C - 27C0 - 404B - 8F08 - 102D10DCFD74 } <nl> + public static final GUID FOLDERID _ SendTo = GUID . fromString ( " { 8983036C - 27C0 - 404B - 8F08 - 102D10DCFD74 } " ) ; <nl> + <nl> + / / { FDD39AD0 - 238F - 46AF - ADB4 - 6C85480369C7 } <nl> + public static final GUID FOLDERID _ Documents = GUID . fromString ( " { FDD39AD0 - 238F - 46AF - ADB4 - 6C85480369C7 } " ) ; <nl> + <nl> + / / { 1777F761 - 68AD - 4D8A - 87BD - 30B759FA33DD } <nl> + public static final GUID FOLDERID _ Favorites = GUID . fromString ( " { 1777F761 - 68AD - 4D8A - 87BD - 30B759FA33DD } " ) ; <nl> + <nl> + / / { C5ABBF53 - E17F - 4121 - 8900 - 86626FC2C973 } <nl> + public static final GUID FOLDERID _ NetHood = GUID . fromString ( " { C5ABBF53 - E17F - 4121 - 8900 - 86626FC2C973 } " ) ; <nl> + <nl> + / / { 9274BD8D - CFD1 - 41C3 - B35E - B13F55A758F4 } <nl> + public static final GUID FOLDERID _ PrintHood = GUID . fromString ( " { 9274BD8D - CFD1 - 41C3 - B35E - B13F55A758F4 } " ) ; <nl> + <nl> + / / { A63293E8 - 664E - 48DB - A079 - DF759E0509F7 } <nl> + public static final GUID FOLDERID _ Templates = GUID . fromString ( " { A63293E8 - 664E - 48DB - A079 - DF759E0509F7 } " ) ; <nl> + <nl> + / / { 82A5EA35 - D9CD - 47C5 - 9629 - E15D2F714E6E } <nl> + public static final GUID FOLDERID _ CommonStartup = GUID . fromString ( " { 82A5EA35 - D9CD - 47C5 - 9629 - E15D2F714E6E } " ) ; <nl> + <nl> + / / { 0139D44E - 6AFE - 49F2 - 8690 - 3DAFCAE6FFB8 } <nl> + public static final GUID FOLDERID _ CommonPrograms = GUID . fromString ( " { 0139D44E - 6AFE - 49F2 - 8690 - 3DAFCAE6FFB8 } " ) ; <nl> + <nl> + / / { A4115719 - D62E - 491D - AA7C - E74B8BE3B067 } <nl> + public static final GUID FOLDERID _ CommonStartMenu = GUID . fromString ( " { A4115719 - D62E - 491D - AA7C - E74B8BE3B067 } " ) ; <nl> + <nl> + / / { C4AA340D - F20F - 4863 - AFEF - F87EF2E6BA25 } <nl> + public static final GUID FOLDERID _ PublicDesktop = GUID . fromString ( " { C4AA340D - F20F - 4863 - AFEF - F87EF2E6BA25 } " ) ; <nl> + <nl> + / / { 62AB5D82 - FDC1 - 4DC3 - A9DD - 070D1D495D97 } <nl> + public static final GUID FOLDERID _ ProgramData = GUID . fromString ( " { 62AB5D82 - FDC1 - 4DC3 - A9DD - 070D1D495D97 } " ) ; <nl> + <nl> + / / { B94237E7 - 57AC - 4347 - 9151 - B08C6C32D1F7 } <nl> + public static final GUID FOLDERID _ CommonTemplates = GUID . fromString ( " { B94237E7 - 57AC - 4347 - 9151 - B08C6C32D1F7 } " ) ; <nl> + <nl> + / / { ED4824AF - DCE4 - 45A8 - 81E2 - FC7965083634 } <nl> + public static final GUID FOLDERID _ PublicDocuments = GUID . fromString ( " { ED4824AF - DCE4 - 45A8 - 81E2 - FC7965083634 } " ) ; <nl> + <nl> + / / { 3EB685DB - 65F9 - 4CF6 - A03A - E3EF65729F3D } <nl> + public static final GUID FOLDERID _ RoamingAppData = GUID . fromString ( " { 3EB685DB - 65F9 - 4CF6 - A03A - E3EF65729F3D } " ) ; <nl> + <nl> + / / { F1B32785 - 6FBA - 4FCF - 9D55 - 7B8E7F157091 } <nl> + public static final GUID FOLDERID _ LocalAppData = GUID . fromString ( " { F1B32785 - 6FBA - 4FCF - 9D55 - 7B8E7F157091 } " ) ; <nl> + <nl> + / / { A520A1A4 - 1780 - 4FF6 - BD18 - 167343C5AF16 } <nl> + public static final GUID FOLDERID _ LocalAppDataLow = GUID . fromString ( " { A520A1A4 - 1780 - 4FF6 - BD18 - 167343C5AF16 } " ) ; <nl> + <nl> + / / { 352481E8 - 33BE - 4251 - BA85 - 6007CAEDCF9D } <nl> + public static final GUID FOLDERID _ InternetCache = GUID . fromString ( " { 352481E8 - 33BE - 4251 - BA85 - 6007CAEDCF9D } " ) ; <nl> + <nl> + / / { 2B0F765D - C0E9 - 4171 - 908E - 08A611B84FF6 } <nl> + public static final GUID FOLDERID _ Cookies = GUID . fromString ( " { 2B0F765D - C0E9 - 4171 - 908E - 08A611B84FF6 } " ) ; <nl> + <nl> + / / { D9DC8A3B - B784 - 432E - A781 - 5A1130A75963 } <nl> + public static final GUID FOLDERID _ History = GUID . fromString ( " { D9DC8A3B - B784 - 432E - A781 - 5A1130A75963 } " ) ; <nl> + <nl> + / / { 1AC14E77 - 02E7 - 4E5D - B744 - 2EB1AE5198B7 } <nl> + public static final GUID FOLDERID _ System = GUID . fromString ( " { 1AC14E77 - 02E7 - 4E5D - B744 - 2EB1AE5198B7 } " ) ; <nl> + <nl> + / / { D65231B0 - B2F1 - 4857 - A4CE - A8E7C6EA7D27 } <nl> + public static final GUID FOLDERID _ SystemX86 = GUID . fromString ( " { D65231B0 - B2F1 - 4857 - A4CE - A8E7C6EA7D27 } " ) ; <nl> + <nl> + / / { F38BF404 - 1D43 - 42F2 - 9305 - 67DE0B28FC23 } <nl> + public static final GUID FOLDERID _ Windows = GUID . fromString ( " { F38BF404 - 1D43 - 42F2 - 9305 - 67DE0B28FC23 } " ) ; <nl> + <nl> + / / { 5E6C858F - 0E22 - 4760 - 9AFE - EA3317B67173 } <nl> + public static final GUID FOLDERID _ Profile = GUID . fromString ( " { 5E6C858F - 0E22 - 4760 - 9AFE - EA3317B67173 } " ) ; <nl> + <nl> + / / { 33E28130 - 4E1E - 4676 - 835A - 98395C3BC3BB } <nl> + public static final GUID FOLDERID _ Pictures = GUID . fromString ( " { 33E28130 - 4E1E - 4676 - 835A - 98395C3BC3BB } " ) ; <nl> + <nl> + / / { 7C5A40EF - A0FB - 4BFC - 874A - C0F2E0B9FA8E } <nl> + public static final GUID FOLDERID _ ProgramFilesX86 = GUID . fromString ( " { 7C5A40EF - A0FB - 4BFC - 874A - C0F2E0B9FA8E } " ) ; <nl> + <nl> + / / { DE974D24 - D9C6 - 4D3E - BF91 - F4455120B917 } <nl> + public static final GUID FOLDERID _ ProgramFilesCommonX86 = GUID . fromString ( " { DE974D24 - D9C6 - 4D3E - BF91 - F4455120B917 } " ) ; <nl> + <nl> + / / { 6D809377 - 6AF0 - 444b - 8957 - A3773F02200E } <nl> + public static final GUID FOLDERID _ ProgramFilesX64 = GUID . fromString ( " { 6d809377 - 6af0 - 444b - 8957 - a3773f02200e } " ) ; <nl> + <nl> + / / { 6365D5A7 - 0F0D - 45e5 - 87F6 - 0DA56B6A4F7D } <nl> + public static final GUID FOLDERID _ ProgramFilesCommonX64 = GUID . fromString ( " { 6365d5a7 - 0f0d - 45e5 - 87f6 - 0da56b6a4f7d } " ) ; <nl> + <nl> + / / { 905e63b6 - c1bf - 494e - b29c - 65b732d3d21a } <nl> + public static final GUID FOLDERID _ ProgramFiles = GUID . fromString ( " { 905e63b6 - c1bf - 494e - b29c - 65b732d3d21a } " ) ; <nl> + <nl> + / / { F7F1ED05 - 9F6D - 47A2 - AAAE - 29D317C6F066 } <nl> + public static final GUID FOLDERID _ ProgramFilesCommon = GUID . fromString ( " { F7F1ED05 - 9F6D - 47A2 - AAAE - 29D317C6F066 } " ) ; <nl> + <nl> + / / { 5cd7aee2 - 2219 - 4a67 - b85d - 6c9ce15660cb } <nl> + public static final GUID FOLDERID _ UserProgramFiles = GUID . fromString ( " { 5cd7aee2 - 2219 - 4a67 - b85d - 6c9ce15660cb } " ) ; <nl> + <nl> + / / { bcbd3057 - ca5c - 4622 - b42d - bc56db0ae516 } <nl> + public static final GUID FOLDERID _ UserProgramFilesCommon = GUID . fromString ( " { bcbd3057 - ca5c - 4622 - b42d - bc56db0ae516 } " ) ; <nl> + <nl> + / / { 724EF170 - A42D - 4FEF - 9F26 - B60E846FBA4F } <nl> + public static final GUID FOLDERID _ AdminTools = GUID . fromString ( " { 724EF170 - A42D - 4FEF - 9F26 - B60E846FBA4F } " ) ; <nl> + <nl> + / / { D0384E7D - BAC3 - 4797 - 8F14 - CBA229B392B5 } <nl> + public static final GUID FOLDERID _ CommonAdminTools = GUID . fromString ( " { D0384E7D - BAC3 - 4797 - 8F14 - CBA229B392B5 } " ) ; <nl> + <nl> + / / { 4BD8D571 - 6D19 - 48D3 - BE97 - 422220080E43 } <nl> + public static final GUID FOLDERID _ Music = GUID . fromString ( " { 4BD8D571 - 6D19 - 48D3 - BE97 - 422220080E43 } " ) ; <nl> + <nl> + / / { 18989B1D - 99B5 - 455B - 841C - AB7C74E4DDFC } <nl> + public static final GUID FOLDERID _ Videos = GUID . fromString ( " { 18989B1D - 99B5 - 455B - 841C - AB7C74E4DDFC } " ) ; <nl> + <nl> + / / { C870044B - F49E - 4126 - A9C3 - B52A1FF411E8 } <nl> + public static final GUID FOLDERID _ Ringtones = GUID . fromString ( " { C870044B - F49E - 4126 - A9C3 - B52A1FF411E8 } " ) ; <nl> + <nl> + / / { B6EBFB86 - 6907 - 413C - 9AF7 - 4FC2ABF07CC5 } <nl> + public static final GUID FOLDERID _ PublicPictures = GUID . fromString ( " { B6EBFB86 - 6907 - 413C - 9AF7 - 4FC2ABF07CC5 } " ) ; <nl> + <nl> + / / { 3214FAB5 - 9757 - 4298 - BB61 - 92A9DEAA44FF } <nl> + public static final GUID FOLDERID _ PublicMusic = GUID . fromString ( " { 3214FAB5 - 9757 - 4298 - BB61 - 92A9DEAA44FF } " ) ; <nl> + <nl> + / / { 2400183A - 6185 - 49FB - A2D8 - 4A392A602BA3 } <nl> + public static final GUID FOLDERID _ PublicVideos = GUID . fromString ( " { 2400183A - 6185 - 49FB - A2D8 - 4A392A602BA3 } " ) ; <nl> + <nl> + / / { E555AB60 - 153B - 4D17 - 9F04 - A5FE99FC15EC } <nl> + public static final GUID FOLDERID _ PublicRingtones = GUID . fromString ( " { E555AB60 - 153B - 4D17 - 9F04 - A5FE99FC15EC } " ) ; <nl> + <nl> + / / { 8AD10C31 - 2ADB - 4296 - A8F7 - E4701232C972 } <nl> + public static final GUID FOLDERID _ ResourceDir = GUID . fromString ( " { 8AD10C31 - 2ADB - 4296 - A8F7 - E4701232C972 } " ) ; <nl> + <nl> + / / { 2A00375E - 224C - 49DE - B8D1 - 440DF7EF3DDC } <nl> + public static final GUID FOLDERID _ LocalizedResourcesDir = GUID . fromString ( " { 2A00375E - 224C - 49DE - B8D1 - 440DF7EF3DDC } " ) ; <nl> + <nl> + / / { C1BAE2D0 - 10DF - 4334 - BEDD - 7AA20B227A9D } <nl> + public static final GUID FOLDERID _ CommonOEMLinks = GUID . fromString ( " { C1BAE2D0 - 10DF - 4334 - BEDD - 7AA20B227A9D } " ) ; <nl> + <nl> + / / { 9E52AB10 - F80D - 49DF - ACB8 - 4330F5687855 } <nl> + public static final GUID FOLDERID _ CDBurning = GUID . fromString ( " { 9E52AB10 - F80D - 49DF - ACB8 - 4330F5687855 } " ) ; <nl> + <nl> + / / { 0762D272 - C50A - 4BB0 - A382 - 697DCD729B80 } <nl> + public static final GUID FOLDERID _ UserProfiles = GUID . fromString ( " { 0762D272 - C50A - 4BB0 - A382 - 697DCD729B80 } " ) ; <nl> + <nl> + / / { DE92C1C7 - 837F - 4F69 - A3BB - 86E631204A23 } <nl> + public static final GUID FOLDERID _ Playlists = GUID . fromString ( " { DE92C1C7 - 837F - 4F69 - A3BB - 86E631204A23 } " ) ; <nl> + <nl> + / / { 15CA69B3 - 30EE - 49C1 - ACE1 - 6B5EC372AFB5 } <nl> + public static final GUID FOLDERID _ SamplePlaylists = GUID . fromString ( " { 15CA69B3 - 30EE - 49C1 - ACE1 - 6B5EC372AFB5 } " ) ; <nl> + <nl> + / / { B250C668 - F57D - 4EE1 - A63C - 290EE7D1AA1F } <nl> + public static final GUID FOLDERID _ SampleMusic = GUID . fromString ( " { B250C668 - F57D - 4EE1 - A63C - 290EE7D1AA1F } " ) ; <nl> + <nl> + / / { C4900540 - 2379 - 4C75 - 844B - 64E6FAF8716B } <nl> + public static final GUID FOLDERID _ SamplePictures = GUID . fromString ( " { C4900540 - 2379 - 4C75 - 844B - 64E6FAF8716B } " ) ; <nl> + <nl> + / / { 859EAD94 - 2E85 - 48AD - A71A - 0969CB56A6CD } <nl> + public static final GUID FOLDERID _ SampleVideos = GUID . fromString ( " { 859EAD94 - 2E85 - 48AD - A71A - 0969CB56A6CD } " ) ; <nl> + <nl> + / / { 69D2CF90 - FC33 - 4FB7 - 9A0C - EBB0F0FCB43C } <nl> + public static final GUID FOLDERID _ PhotoAlbums = GUID . fromString ( " { 69D2CF90 - FC33 - 4FB7 - 9A0C - EBB0F0FCB43C } " ) ; <nl> + <nl> + / / { DFDF76A2 - C82A - 4D63 - 906A - 5644AC457385 } <nl> + public static final GUID FOLDERID _ Public = GUID . fromString ( " { DFDF76A2 - C82A - 4D63 - 906A - 5644AC457385 } " ) ; <nl> + <nl> + / / { df7266ac - 9274 - 4867 - 8d55 - 3bd661de872d } <nl> + public static final GUID FOLDERID _ ChangeRemovePrograms = GUID . fromString ( " { df7266ac - 9274 - 4867 - 8d55 - 3bd661de872d } " ) ; <nl> + <nl> + / / { a305ce99 - f527 - 492b - 8b1a - 7e76fa98d6e4 } <nl> + public static final GUID FOLDERID _ AppUpdates = GUID . fromString ( " { a305ce99 - f527 - 492b - 8b1a - 7e76fa98d6e4 } " ) ; <nl> + <nl> + / / { de61d971 - 5ebc - 4f02 - a3a9 - 6c82895e5c04 } <nl> + public static final GUID FOLDERID _ AddNewPrograms = GUID . fromString ( " { de61d971 - 5ebc - 4f02 - a3a9 - 6c82895e5c04 } " ) ; <nl> + <nl> + / / { 374DE290 - 123F - 4565 - 9164 - 39C4925E467B } <nl> + public static final GUID FOLDERID _ Downloads = GUID . fromString ( " { 374de290 - 123f - 4565 - 9164 - 39c4925e467b } " ) ; <nl> + <nl> + / / { 3D644C9B - 1FB8 - 4f30 - 9B45 - F670235F79C0 } <nl> + public static final GUID FOLDERID _ PublicDownloads = GUID . fromString ( " { 3d644c9b - 1fb8 - 4f30 - 9b45 - f670235f79c0 } " ) ; <nl> + <nl> + / / { 7d1d3a04 - debb - 4115 - 95cf - 2f29da2920da } <nl> + public static final GUID FOLDERID _ SavedSearches = GUID . fromString ( " { 7d1d3a04 - debb - 4115 - 95cf - 2f29da2920da } " ) ; <nl> + <nl> + / / { 52a4f021 - 7b75 - 48a9 - 9f6b - 4b87a210bc8f } <nl> + public static final GUID FOLDERID _ QuickLaunch = GUID . fromString ( " { 52a4f021 - 7b75 - 48a9 - 9f6b - 4b87a210bc8f } " ) ; <nl> + <nl> + / / { 56784854 - C6CB - 462b - 8169 - 88E350ACB882 } <nl> + public static final GUID FOLDERID _ Contacts = GUID . fromString ( " { 56784854 - c6cb - 462b - 8169 - 88e350acb882 } " ) ; <nl> + <nl> + / / { A75D362E - 50FC - 4fb7 - AC2C - A8BEAA314493 } <nl> + public static final GUID FOLDERID _ SidebarParts = GUID . fromString ( " { a75d362e - 50fc - 4fb7 - ac2c - a8beaa314493 } " ) ; <nl> + <nl> + / / { 7B396E54 - 9EC5 - 4300 - BE0A - 2482EBAE1A26 } <nl> + public static final GUID FOLDERID _ SidebarDefaultParts = GUID . fromString ( " { 7b396e54 - 9ec5 - 4300 - be0a - 2482ebae1a26 } " ) ; <nl> + <nl> + / / { DEBF2536 - E1A8 - 4c59 - B6A2 - 414586476AEA } <nl> + public static final GUID FOLDERID _ PublicGameTasks = GUID . fromString ( " { debf2536 - e1a8 - 4c59 - b6a2 - 414586476aea } " ) ; <nl> + <nl> + / / { 054FAE61 - 4DD8 - 4787 - 80B6 - 090220C4B700 } <nl> + public static final GUID FOLDERID _ GameTasks = GUID . fromString ( " { 054fae61 - 4dd8 - 4787 - 80b6 - 090220c4b700 } " ) ; <nl> + <nl> + / / { 4C5C32FF - BB9D - 43b0 - B5B4 - 2D72E54EAAA4 } <nl> + public static final GUID FOLDERID _ SavedGames = GUID . fromString ( " { 4c5c32ff - bb9d - 43b0 - b5b4 - 2d72e54eaaa4 } " ) ; <nl> + <nl> + / / { CAC52C1A - B53D - 4edc - 92D7 - 6B2E8AC19434 } <nl> + public static final GUID FOLDERID _ Games = GUID . fromString ( " { cac52c1a - b53d - 4edc - 92d7 - 6b2e8ac19434 } " ) ; <nl> + <nl> + / / { 98ec0e18 - 2098 - 4d44 - 8644 - 66979315a281 } <nl> + public static final GUID FOLDERID _ SEARCH _ MAPI = GUID . fromString ( " { 98ec0e18 - 2098 - 4d44 - 8644 - 66979315a281 } " ) ; <nl> + <nl> + / / { ee32e446 - 31ca - 4aba - 814f - a5ebd2fd6d5e } <nl> + public static final GUID FOLDERID _ SEARCH _ CSC = GUID . fromString ( " { ee32e446 - 31ca - 4aba - 814f - a5ebd2fd6d5e } " ) ; <nl> + <nl> + / / { bfb9d5e0 - c6a9 - 404c - b2b2 - ae6db6af4968 } <nl> + public static final GUID FOLDERID _ Links = GUID . fromString ( " { bfb9d5e0 - c6a9 - 404c - b2b2 - ae6db6af4968 } " ) ; <nl> + <nl> + / / { f3ce0f7c - 4901 - 4acc - 8648 - d5d44b04ef8f } <nl> + public static final GUID FOLDERID _ UsersFiles = GUID . fromString ( " { f3ce0f7c - 4901 - 4acc - 8648 - d5d44b04ef8f } " ) ; <nl> + <nl> + / / { A302545D - DEFF - 464b - ABE8 - 61C8648D939B } <nl> + public static final GUID FOLDERID _ UsersLibraries = GUID . fromString ( " { a302545d - deff - 464b - abe8 - 61c8648d939b } " ) ; <nl> + <nl> + / / { 190337d1 - b8ca - 4121 - a639 - 6d472d16972a } <nl> + public static final GUID FOLDERID _ SearchHome = GUID . fromString ( " { 190337d1 - b8ca - 4121 - a639 - 6d472d16972a } " ) ; <nl> + <nl> + / / { 2C36C0AA - 5812 - 4b87 - BFD0 - 4CD0DFB19B39 } <nl> + public static final GUID FOLDERID _ OriginalImages = GUID . fromString ( " { 2C36C0AA - 5812 - 4b87 - bfd0 - 4cd0dfb19b39 } " ) ; <nl> + <nl> + / / { 7b0db17d - 9cd2 - 4a93 - 9733 - 46cc89022e7c } <nl> + public static final GUID FOLDERID _ DocumentsLibrary = GUID . fromString ( " { 7b0db17d - 9cd2 - 4a93 - 9733 - 46cc89022e7c } " ) ; <nl> + <nl> + / / { 2112AB0A - C86A - 4ffe - A368 - 0DE96E47012E } <nl> + public static final GUID FOLDERID _ MusicLibrary = GUID . fromString ( " { 2112ab0a - c86a - 4ffe - a368 - 0de96e47012e } " ) ; <nl> + <nl> + / / { A990AE9F - A03B - 4e80 - 94BC - 9912D7504104 } <nl> + public static final GUID FOLDERID _ PicturesLibrary = GUID . fromString ( " { a990ae9f - a03b - 4e80 - 94bc - 9912d7504104 } " ) ; <nl> + <nl> + / / { 491E922F - 5643 - 4af4 - A7EB - 4E7A138D8174 } <nl> + public static final GUID FOLDERID _ VideosLibrary = GUID . fromString ( " { 491e922f - 5643 - 4af4 - a7eb - 4e7a138d8174 } " ) ; <nl> + <nl> + / / { 1A6FDBA2 - F42D - 4358 - A798 - B74D745926C5 } <nl> + public static final GUID FOLDERID _ RecordedTVLibrary = GUID . fromString ( " { 1a6fdba2 - f42d - 4358 - a798 - b74d745926c5 } " ) ; <nl> + <nl> + / / { 52528A6B - B9E3 - 4add - B60D - 588C2DBA842D } <nl> + public static final GUID FOLDERID _ HomeGroup = GUID . fromString ( " { 52528a6b - b9e3 - 4add - b60d - 588c2dba842d } " ) ; <nl> + <nl> + / / { 5CE4A5E9 - E4EB - 479D - B89F - 130C02886155 } <nl> + public static final GUID FOLDERID _ DeviceMetadataStore = GUID . fromString ( " { 5ce4a5e9 - e4eb - 479d - b89f - 130c02886155 } " ) ; <nl> + <nl> + / / { 1B3EA5DC - B587 - 4786 - B4EF - BD1DC332AEAE } <nl> + public static final GUID FOLDERID _ Libraries = GUID . fromString ( " { 1b3ea5dc - b587 - 4786 - b4ef - bd1dc332aeae } " ) ; <nl> + <nl> + / / { 48daf80b - e6cf - 4f4e - b800 - 0e69d84ee384 } <nl> + public static final GUID FOLDERID _ PublicLibraries = GUID . fromString ( " { 48daf80b - e6cf - 4f4e - b800 - 0e69d84ee384 } " ) ; <nl> + <nl> + / / { 9e3995ab - 1f9c - 4f13 - b827 - 48b24b6c7174 } <nl> + public static final GUID FOLDERID _ UserPinned = GUID . fromString ( " { 9e3995ab - 1f9c - 4f13 - b827 - 48b24b6c7174 } " ) ; <nl> + <nl> + / / { bcb5256f - 79f6 - 4cee - b725 - dc34e402fd46 } <nl> + public static final GUID FOLDERID _ ImplicitAppShortcuts = GUID . fromString ( " { bcb5256f - 79f6 - 4cee - b725 - dc34e402fd46 } " ) ; <nl> + <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> index b9df1e7 . . 65f90a8 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> package com . sun . jna . platform . win32 ; <nl> <nl> import com . sun . jna . Native ; <nl> + import com . sun . jna . platform . win32 . Guid . GUID ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> import com . sun . jna . platform . win32 . WinDef . INT _ PTR ; <nl> @ @ - 66 , 6 + 67 , 36 @ @ public interface Shell32 extends ShellAPI , StdCallLibrary { <nl> 	 	 char [ ] pszPath ) ; <nl> <nl> / * * <nl> + * Retrieves the full path of a known folder identified by the folder ' s KNOWNFOLDERID . This function replaces <nl> + * { @ link # SHGetFolderPath } . That older function is now simply a wrapper for SHGetKnownFolderPath . <nl> + * @ param rfid A reference to the KNOWNFOLDERID ( in { @ link KnownFolders } ) that identifies the folder . <nl> + * @ param dwFlags Flags that specify special retrieval options . This value can be 0 ; otherwise , one or more of the <nl> + * { @ link ShlObj . KNOWN _ FOLDER _ FLAG } values . <nl> + * @ param hToken Type : HANDLE An access token that represents a particular user . If this parameter is NULL , which is <nl> + * the most common usage , the function requests the known folder for the current user . Request a specific user ' s <nl> + * folder by passing the hToken of that user . This is typically done in the context of a service that has sufficient <nl> + * privileges to retrieve the token of a given user . That token must be opened with TOKEN _ QUERY and <nl> + * TOKEN _ IMPERSONATE rights . In some cases , you also need to include TOKEN _ DUPLICATE . In addition to passing the <nl> + * user ' s hToken , the registry hive of that specific user must be mounted . See Access Control for further discussion <nl> + * of access control issues . Assigning the hToken parameter a value of - 1 indicates the Default User . This allows <nl> + * clients of SHGetKnownFolderPath to find folder locations ( such as the Desktop folder ) for the Default User . The <nl> + * Default User user profile is duplicated when any new user account is created , and includes special folders such <nl> + * as Documents and Desktop . Any items added to the Default User folder also appear in any new user account . Note <nl> + * that access to the Default User folders requires administrator privileges . <nl> + * @ param ppszPath When this method returns , contains the address of a pointer to a null - terminated <nl> + * Unicode string that specifies the path of the known folder . The calling process is responsible for freeing this <nl> + * resource once it is no longer needed by calling { @ link Ole32 # CoTaskMemFree } . The returned path does not include a trailing <nl> + * backslash . For example , " C : \ Users " is returned rather than " C : \ Users \ " . <nl> + * @ return Returns S _ OK if successful , or an error value otherwise , including the following : <nl> + * < li > E _ FAIL Among other things , this value can indicate that the rfid parameter references a KNOWNFOLDERID which <nl> + * does not have a path ( such as a folder marked as KF _ CATEGORY _ VIRTUAL ) . < / li > <nl> + * < li > E _ INVALIDARG Among other things , this value can indicate that the rfid parameter references a KNOWNFOLDERID <nl> + * that is not present on the system . Not all KNOWNFOLDERID values are present on all systems . Use <nl> + * IKnownFolderManager : : GetFolderIds to retrieve the set of KNOWNFOLDERID values for the current system . < / li > <nl> + * / <nl> + HRESULT SHGetKnownFolderPath ( GUID rfid , int dwFlags , HANDLE hToken , PointerByReference ppszPath ) ; <nl> + <nl> + / * * <nl> * Retrieves the IShellFolder interface for the desktop folder , which is the root of the Shell ' s namespace . <nl> * The retrieved COM interface pointer can be used via Com4JNA ' s ComObject . wrapNativeInterface call <nl> * given a suitable interface definition for IShellFolder <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java <nl> index 9641b51 . . 6748cc5 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java <nl> @ @ - 13 , 9 + 13 , 13 @ @ <nl> package com . sun . jna . platform . win32 ; <nl> <nl> import com . sun . jna . Native ; <nl> + import com . sun . jna . platform . win32 . Guid . GUID ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> + import com . sun . jna . platform . win32 . WinDef . LPVOID ; <nl> + import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> + import com . sun . jna . ptr . PointerByReference ; <nl> <nl> / * * <nl> * Shell32 Utility API . <nl> @ @ - 56 , 6 + 60 , 34 @ @ public abstract class Shell32Util { <nl> 	 public static String getFolderPath ( int nFolder ) { <nl> 	 	 return getFolderPath ( null , nFolder , ShlObj . SHGFP _ TYPE _ CURRENT ) ; <nl> 	 } <nl> + 	 <nl> + / * * <nl> + * Retrieves the full path of a known folder identified by the folder ' s KNOWNFOLDERID . This function replaces <nl> + * { @ link # getFolderPath } . That older function is now simply a wrapper for getKnownFolderPath <nl> + * @ param guid the KNOWNFOLDERS GUID as defined in { @ link KnownFolders } <nl> + * @ return the path of the known folder . The returned path does not include a trailing backslash . For example , <nl> + * " C : \ Users " is returned rather than " C : \ Users \ " . <nl> + * @ throws Win32Exception if the guid references a KNOWNFOLDERID which does not have a path ( such as a folder marked <nl> + * as KF _ CATEGORY _ VIRTUAL ) or that the KNOWNFOLDERID is not present on the system . Not all KNOWNFOLDERID values are <nl> + * present on all systems . <nl> + * / <nl> + public static String getKnownFolderPath ( GUID guid ) throws Win32Exception <nl> + { <nl> + int flags = ShlObj . KNOWN _ FOLDER _ FLAG . NONE . getFlag ( ) ; <nl> + PointerByReference outPath = new PointerByReference ( ) ; <nl> + HANDLE token = null ; <nl> + HRESULT hr = Shell32 . INSTANCE . SHGetKnownFolderPath ( guid , flags , token , outPath ) ; <nl> + <nl> + if ( ! W32Errors . SUCCEEDED ( hr . intValue ( ) ) ) <nl> + { <nl> + throw new Win32Exception ( hr ) ; <nl> + } <nl> + <nl> + String result = outPath . getValue ( ) . getWideString ( 0 ) ; <nl> + Ole32 . INSTANCE . CoTaskMemFree ( new LPVOID ( outPath . getPointer ( ) . getLong ( 0 ) ) ) ; <nl> + <nl> + return result ; <nl> + } <nl> <nl> 	 / * * <nl> * Retrieves the path of a special folder , identified by its CSIDL . <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / ShlObj . java b / contrib / platform / src / com / sun / jna / platform / win32 / ShlObj . java <nl> index 99684fe . . d06f1c1 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / ShlObj . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / ShlObj . java <nl> @ @ - 81 , 4 + 81 , 102 @ @ public interface ShlObj { <nl> int CSIDL _ COMMON _ OEM _ LINKS = 0x003a ; / / Links to All Users OEM specific apps <nl> int CSIDL _ CDBURN _ AREA = 0x003b ; / / USERPROFILE \ Local Settings \ Application Data \ Microsoft \ CD Burning <nl> int CSIDL _ COMPUTERSNEARME = 0x003d ; / / Computers Near Me ( computered from Workgroup membership ) <nl> + <nl> + / * * <nl> + * KnownFolder flags as used by SHGetKnownFolderPath , SHGetKnownFolderIDList and others . <nl> + * Microsoft Windows SDK 7 . 0A . <nl> + * / <nl> + public enum KNOWN _ FOLDER _ FLAG <nl> + { <nl> + / * * <nl> + * None <nl> + * / <nl> + NONE ( 0x00000000 ) , <nl> + <nl> + / * * <nl> + * Build a simple IDList ( PIDL ) This value can be used when you want to retrieve the file system path but do not <nl> + * specify this value if you are retrieving the localized display name of the folder because it might not <nl> + * resolve correctly . <nl> + * / <nl> + SIMPLE _ IDLIST ( 0x00000100 ) , <nl> + <nl> + / * * <nl> + * Gets the folder ' s default path independent of the current location of its parent . KF _ FLAG _ DEFAULT _ PATH must <nl> + * also be set . <nl> + * / <nl> + NOT _ PARENT _ RELATIVE ( 0x00000200 ) , <nl> + <nl> + / * * <nl> + * Gets the default path for a known folder . If this flag is not set , the function retrieves the current - and <nl> + * possibly redirected - path of the folder . The execution of this flag includes a verification of the folder ' s <nl> + * existence unless KF _ FLAG _ DONT _ VERIFY is set . <nl> + * / <nl> + DEFAULT _ PATH ( 0x00000400 ) , <nl> + <nl> + / * * <nl> + * Initializes the folder using its Desktop . ini settings . If the folder cannot be initialized , the function <nl> + * returns a failure code and no path is returned . This flag should always be combined with KF _ FLAG _ CREATE . <nl> + * / <nl> + INIT ( 0x00000800 ) , <nl> + <nl> + / * * <nl> + * Gets the true system path for the folder , free of any aliased placeholders such as % USERPROFILE % , returned by <nl> + * SHGetKnownFolderIDList and IKnownFolder : : GetIDList . This flag has no effect on paths returned by <nl> + * SHGetKnownFolderPath and IKnownFolder : : GetPath . By default , known folder retrieval functions and methods <nl> + * return the aliased path if an alias exists . <nl> + * / <nl> + NO _ ALIAS ( 0x00001000 ) , <nl> + <nl> + / * * <nl> + * Stores the full path in the registry without using environment strings . If this flag is not set , portions of <nl> + * the path may be represented by environment strings such as % USERPROFILE % . This flag can only be used with <nl> + * SHSetKnownFolderPath and IKnownFolder : : SetPath . <nl> + * / <nl> + DONT _ UNEXPAND ( 0x00002000 ) , <nl> + <nl> + / * * <nl> + * Do not verify the folder ' s existence before attempting to retrieve the path or IDList . If this flag is not <nl> + * set , an attempt is made to verify that the folder is truly present at the path . If that verification fails <nl> + * due to the folder being absent or inaccessible , the function returns a failure code and no path is returned . <nl> + * If the folder is located on a network , the function might take a longer time to execute . Setting this flag <nl> + * can reduce that lag time . <nl> + * / <nl> + DONT _ VERIFY ( 0x00004000 ) , <nl> + <nl> + / * * <nl> + * Forces the creation of the specified folder if that folder does not already exist . The security provisions <nl> + * predefined for that folder are applied . If the folder does not exist and cannot be created , the function <nl> + * returns a failure code and no path is returned . This value can be used only with the following functions and <nl> + * methods : <nl> + * < li > SHGetKnownFolderPath < / li > <nl> + * < li > SHGetKnownFolderIDList < / li > <nl> + * < li > IKnownFolder : : GetIDList < / li > <nl> + * < li > IKnownFolder : : GetPath < / li > <nl> + * < li > IKnownFolder : : GetShellItem < / li > <nl> + * / <nl> + CREATE ( 0x00008000 ) , <nl> + / * * <nl> + * Introduced in Windows 7 : When running inside an app container , or when providing an app container token , this <nl> + * flag prevents redirection to app container folders . Instead , it retrieves the path that would be returned <nl> + * where it not running inside an app container . <nl> + * / <nl> + NO _ APPCONTAINER _ REDIRECTION ( 0x00010000 ) , <nl> + <nl> + / * * <nl> + * Introduced in Windows 7 . Return only aliased PIDLs . Do not use the file system path . <nl> + * / <nl> + ALIAS _ ONLY ( 0x80000000 ) ; <nl> + <nl> + private int flag ; <nl> + <nl> + KNOWN _ FOLDER _ FLAG ( int flag ) <nl> + { <nl> + this . flag = flag ; <nl> + } <nl> + <nl> + public int getFlag ( ) <nl> + { <nl> + return flag ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> index e5e1d70 . . 47a778b 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> @ @ - 15 , 10 + 15 , 14 @ @ package com . sun . jna . platform . win32 ; <nl> import junit . framework . TestCase ; <nl> <nl> import com . sun . jna . Native ; <nl> + import com . sun . jna . platform . win32 . Guid . GUID ; <nl> import com . sun . jna . platform . win32 . ShellAPI . APPBARDATA ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> + import com . sun . jna . platform . win32 . WinDef . LPVOID ; <nl> import com . sun . jna . platform . win32 . WinDef . RECT ; <nl> import com . sun . jna . platform . win32 . WinDef . UINT _ PTR ; <nl> + import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> + import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> <nl> <nl> @ @ - 127 , 4 + 131 , 16 @ @ public class Shell32Test extends TestCase { <nl> <nl> } <nl> <nl> + public void testSHGetKnownFolderPath ( ) <nl> + { <nl> + int flags = ShlObj . KNOWN _ FOLDER _ FLAG . NONE . getFlag ( ) ; <nl> + PointerByReference outPath = new PointerByReference ( ) ; <nl> + HANDLE token = null ; <nl> + GUID guid = KnownFolders . FOLDERID _ Fonts ; <nl> + HRESULT hr = Shell32 . INSTANCE . SHGetKnownFolderPath ( guid , flags , token , outPath ) ; <nl> + <nl> + Ole32 . INSTANCE . CoTaskMemFree ( new LPVOID ( outPath . getPointer ( ) . getLong ( 0 ) ) ) ; <nl> + <nl> + assertTrue ( W32Errors . SUCCEEDED ( hr . intValue ( ) ) ) ; <nl> + } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java <nl> index 7711ea5 . . c8a0976 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java <nl> @ @ - 35 , 4 + 35 , 42 @ @ public class Shell32UtilTest extends TestCase { <nl> 	 public final void testGetSpecialFolderPath ( ) { <nl> assertFalse ( Shell32Util . getSpecialFolderPath ( ShlObj . CSIDL _ APPDATA , false ) . isEmpty ( ) ) ; <nl> } <nl> + <nl> + public void testGetKnownFolderPath ( ) <nl> + { <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ Fonts ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ Desktop ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ Startup ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ Programs ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ StartMenu ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ Recent ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ SendTo ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ Documents ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ Favorites ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ NetHood ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ PrintHood ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ Templates ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ CommonStartup ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ CommonAdminTools ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ CDBurning ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ Music ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ SavedGames ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ SavedSearches ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ AdminTools ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ ProgramFiles ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ ProgramData ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ ProgramFilesCommon ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ ProgramFilesCommonX86 ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ Programs ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ Windows ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ Public ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ PublicDesktop ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ Links ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ LocalAppData ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ Libraries ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ RoamingAppData ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ UserProfiles ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ UserProgramFiles ) ) ; <nl> + assertNotNull ( Shell32Util . getKnownFolderPath ( KnownFolders . FOLDERID _ UserProgramFilesCommon ) ) ; <nl> + } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 3368d15 . . 09db85d 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 9 , 10 + 9 , 13 @ @ Features <nl> - - - - - - - - <nl> * Updated AIX natives and build - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 290 ] ( https : / / github . com / twall / jna / pull / 290 ) : Improved the stacktrace for the exceptions thrown by ` com . sun . jna . Structure ` - [ @ ebourg ] ( https : / / github . com / ebourg ) . <nl> + * Added Winspool monitor sample and updated Kernel32 , WinBase , Winspool - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> + * Added Some minor changes to MS Office samples Test and small changes to the MS Office samples Bug Fixes - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> * [ # 319 ] ( https : / / github . com / twall / jna / pull / 319 ) : Fix direct - mapping type - mapped pointer result types - [ @ marco2357 ] ( https : / / github . com / marco2357 ) . <nl> + * Added Variant and TlbImp Fixes - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> <nl> Release 4 . 1 <nl> = = = = = = = = = = =
diff - - git a / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java b / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java <nl> index 80e063b . . bc1ae68 100644 <nl> - - - a / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java <nl> + + + b / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java <nl> @ @ - 24 , 10 + 24 , 14 @ @ public class MSOfficeDemo { <nl> <nl> public void testMSWord ( ) { <nl> MSWord msWord = null ; <nl> + <nl> + / / http : / / msdn . microsoft . com / en - us / library / office / ff839952 ( v = office . 15 ) . aspx <nl> LONG wdFormatPDF = new LONG ( 17 ) ; / / PDF format . <nl> LONG wdFormatRTF = new LONG ( 6 ) ; / / Rich text format ( RTF ) . <nl> LONG wdFormatHTML = new LONG ( 8 ) ; / / Standard HTML format . <nl> - <nl> + LONG wdFormatDocument = new LONG ( 0 ) ; / / Microsoft Office Word 97 - 2003 binary file format . <nl> + LONG wdFormatDocumentDefault = new LONG ( 16 ) ; / / Word default document file format . For Word 2010 , this is the DOCX format . <nl> + <nl> try { <nl> msWord = new MSWord ( ) ; <nl> System . out . println ( " MSWord version : " + msWord . getVersion ( ) ) ; <nl> @ @ - 35 , 22 + 39 , 24 @ @ public class MSOfficeDemo { <nl> msWord . setVisible ( true ) ; <nl> / / msWord . newDocument ( ) ; <nl> msWord . openDocument ( currentWorkingDir + " jnatest . doc " , true ) ; <nl> - msWord . insertText ( " Hello from JNA ! " ) ; <nl> + msWord . insertText ( " Hello from JNA ! \ n \ n " ) ; <nl> / / wait 10sec . before closing <nl> - Thread . currentThread ( ) . sleep ( 10000 ) ; <nl> + Thread . currentThread ( ) . sleep ( 1000 ) ; <nl> / / save in different formats <nl> / / pdf format is only supported in MSWord 2007 and above <nl> + msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . doc " , wdFormatDocument ) ; <nl> msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . pdf " , wdFormatPDF ) ; <nl> msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . rtf " , wdFormatRTF ) ; <nl> msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . html " , wdFormatHTML ) ; <nl> / / close and save the document <nl> - msWord . closeActiveDocument ( true ) ; <nl> - msWord . setVisible ( true ) ; <nl> + msWord . closeActiveDocument ( false ) ; <nl> msWord . newDocument ( ) ; <nl> / / msWord . openDocument ( currentWorkingDir + " jnatest . doc " , true ) ; <nl> - msWord . insertText ( " Hello from JNA ! " ) ; <nl> + msWord . insertText ( " Hello from JNA ! \ n Please notice that JNA can control MS Word via the new COM interface ! \ nHere we are creating a new word document and we save it to the ' TEMP ' directory ! " ) ; <nl> + / / save with user prompt <nl> + msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestNewDoc . docx " , wdFormatDocumentDefault ) ; <nl> / / close and save the document <nl> - msWord . closeActiveDocument ( true ) ; <nl> + msWord . closeActiveDocument ( false ) ; <nl> / / wait then close word <nl> msWord . quit ( ) ; <nl> } catch ( InterruptedException ie ) { <nl> diff - - git a / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSWord . java b / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSWord . java <nl> index 2cbda23 . . 3cce9a2 100644 <nl> - - - a / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSWord . java <nl> + + + b / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSWord . java <nl> @ @ - 49 , 6 + 49 , 13 @ @ public class MSWord extends COMLateBindingObject { <nl> this . invokeNoReply ( " TypeText " , pSelection , new VARIANT ( text ) ) ; <nl> } <nl> <nl> + public void Save ( boolean bNoPrompt , LONG originalFormat ) throws COMException { <nl> + VARIANT vtNoPrompt = new VARIANT ( bNoPrompt ) ; <nl> + VARIANT vtOriginalFormat = new VARIANT ( originalFormat ) ; <nl> + <nl> + this . invokeNoReply ( " Save " , this . getActiveDocument ( ) . getIDispatch ( ) ) ; <nl> + } <nl> + <nl> public void SaveAs ( String FileName , LONG FileFormat ) throws COMException { <nl> VARIANT vtFileName = new VARIANT ( FileName ) ; <nl> VARIANT vtFileFormat = new VARIANT ( FileFormat ) ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 0fb9611 . . 3368d15 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 10 , 6 + 10 , 10 @ @ Features <nl> * Updated AIX natives and build - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 290 ] ( https : / / github . com / twall / jna / pull / 290 ) : Improved the stacktrace for the exceptions thrown by ` com . sun . jna . Structure ` - [ @ ebourg ] ( https : / / github . com / ebourg ) . <nl> <nl> + Bug Fixes <nl> + - - - - - - - - - <nl> + * [ # 319 ] ( https : / / github . com / twall / jna / pull / 319 ) : Fix direct - mapping type - mapped pointer result types - [ @ marco2357 ] ( https : / / github . com / marco2357 ) . <nl> + <nl> Release 4 . 1 <nl> = = = = = = = = = = = <nl>
diff - - git a / build . xml b / build . xml <nl> index 7d8b021 . . 0fc31cf 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 684 , 6 + 684 , 21 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < condition property = " make . SDKROOT " value = " SDKROOT = $ { SDKROOT } " > <nl> < isset property = " SDKROOT " / > <nl> < / condition > <nl> + < property name = " xcode " value = " / Applications / Xcode . app / Contents / Developer / Platforms / MacOSX . platform " / > <nl> + < condition property = " make . SDKROOT " <nl> + 	 value = " SDKROOT = $ { xcode } / Developer / SDKs / MacOSX10 . 9 . sdk " > <nl> + < and > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " darwin " trim = " true " / > <nl> + < available file = " $ { xcode } / Developer / SDKs / MacOSX10 . 9 . sdk " / > <nl> + < / and > <nl> + < / condition > <nl> + < condition property = " make . SDKROOT " <nl> + 	 value = " SDKROOT = $ { xcode } / Developer / SDKs / MacOSX10 . 8 . sdk " > <nl> + < and > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " darwin " trim = " true " / > <nl> + < available file = " $ { xcode } / Developer / SDKs / MacOSX10 . 8 . sdk " / > <nl> + < / and > <nl> + < / condition > <nl> < condition property = " make . SDKROOT " <nl> 	 value = " SDKROOT = / Developer / SDKs / MacOSX10 . 6 . sdk " > <nl> < and >
diff - - git a / test / com / sun / jna / DirectTypeMapperTest . java b / test / com / sun / jna / DirectTypeMapperTest . java <nl> index 619f3b4 . . cd79f9e 100644 <nl> - - - a / test / com / sun / jna / DirectTypeMapperTest . java <nl> + + + b / test / com / sun / jna / DirectTypeMapperTest . java <nl> @ @ - 13 , 11 + 13 , 6 @ @ <nl> <nl> package com . sun . jna ; <nl> <nl> - import java . lang . annotation . ElementType ; <nl> - import java . lang . annotation . Retention ; <nl> - import java . lang . annotation . RetentionPolicy ; <nl> - import java . lang . annotation . Target ; <nl> - import java . lang . reflect . Field ; <nl> import java . util . HashMap ; <nl> import java . util . Map ; <nl> import junit . framework . TestCase ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index aeee3b7 . . 0fb9611 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 8 , 6 + 8 , 7 @ @ Next Release <nl> Features <nl> - - - - - - - - <nl> * Updated AIX natives and build - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ # 290 ] ( https : / / github . com / twall / jna / pull / 290 ) : Improved the stacktrace for the exceptions thrown by ` com . sun . jna . Structure ` - [ @ ebourg ] ( https : / / github . com / ebourg ) . <nl> <nl> Release 4 . 1 <nl> = = = = = = = = = = =
diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index a79d688 . . 755c231 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 1150 , 6 + 1150 , 9 @ @ fromNativeTypeMapped ( JNIEnv * env , jobject from _ native , void * resp , ffi _ type * typ <nl> if ( type - > type ! = FFI _ TYPE _ POINTER ) { <nl> extract _ value ( env , obj , result , type - > size , JNI _ TRUE ) ; <nl> } <nl> + else { <nl> + * ( jobject * ) result = obj ; <nl> + } <nl> } <nl> } <nl> } <nl> diff - - git a / native / testlib . c b / native / testlib . c <nl> index e407898 . . 24df5a7 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 158 , 6 + 158 , 14 @ @ returnInt32Argument ( int32 _ t arg ) { <nl> return arg ; <nl> } <nl> <nl> + EXPORT int * <nl> + returnPoint ( int x , int y ) { <nl> + int * p = malloc ( 2 * sizeof ( int ) ) ; <nl> + p [ 0 ] = x ; <nl> + p [ 1 ] = y ; <nl> + return p ; <nl> + } <nl> + <nl> EXPORT int64 _ t <nl> returnInt64Zero ( ) { <nl> int64 _ t value = 0 ; <nl> diff - - git a / src / com / sun / jna / DefaultTypeMapper . java b / src / com / sun / jna / DefaultTypeMapper . java <nl> index 70999bb . . b46311e 100644 <nl> - - - a / src / com / sun / jna / DefaultTypeMapper . java <nl> + + + b / src / com / sun / jna / DefaultTypeMapper . java <nl> @ @ - 117 , 7 + 117 , 7 @ @ public class DefaultTypeMapper implements TypeMapper { <nl> / * * Add a { @ link TypeConverter } to provide bidirectional mapping between <nl> * a native and Java type . <nl> * / <nl> - protected void addTypeConverter ( Class cls , TypeConverter converter ) { <nl> + public void addTypeConverter ( Class cls , TypeConverter converter ) { <nl> addFromNativeConverter ( cls , converter ) ; <nl> addToNativeConverter ( cls , converter ) ; <nl> } <nl> diff - - git a / test / com / sun / jna / DirectTypeMapperTest . java b / test / com / sun / jna / DirectTypeMapperTest . java <nl> index 034b572 . . 704bcdb 100644 <nl> - - - a / test / com / sun / jna / DirectTypeMapperTest . java <nl> + + + b / test / com / sun / jna / DirectTypeMapperTest . java <nl> @ @ - 13 , 10 + 13 , 12 @ @ <nl> <nl> package com . sun . jna ; <nl> <nl> + import java . awt . Point ; <nl> import java . lang . annotation . ElementType ; <nl> import java . lang . annotation . Retention ; <nl> import java . lang . annotation . RetentionPolicy ; <nl> import java . lang . annotation . Target ; <nl> + import java . lang . reflect . Field ; <nl> import java . util . HashMap ; <nl> import java . util . Map ; <nl> import junit . framework . TestCase ; <nl> @ @ - 156 , 6 + 158 , 48 @ @ public class DirectTypeMapperTest extends TestCase { <nl> assertFalse ( " Failed to convert integer return to boolean FALSE " , <nl> lib . returnInt32Argument ( false ) ) ; <nl> } <nl> + public static class DirectTypeMappedResultTypeTestLibrary { <nl> + public native Point returnPoint ( int x , int y ) ; <nl> + static { <nl> + Map options = new HashMap ( ) ; <nl> + DefaultTypeMapper mapper = new DefaultTypeMapper ( ) ; <nl> + mapper . addTypeConverter ( Point . class , new TypeConverter ( ) { <nl> + public Object fromNative ( Object value , FromNativeContext context ) { <nl> + Pointer p = ( Pointer ) value ; <nl> + int x = p . getInt ( 0 ) , y = p . getInt ( 4 ) ; <nl> + Native . free ( Pointer . nativeValue ( p ) ) ; <nl> + return new Point ( x , y ) ; <nl> + } <nl> + public Object toNative ( Object value , ToNativeContext context ) { <nl> + return Pointer . NULL ; / / dummy implementation ( not called ) <nl> + } <nl> + public Class nativeType ( ) { <nl> + return Pointer . class ; <nl> + } <nl> + } ) ; <nl> + options . put ( Library . OPTION _ TYPE _ MAPPER , mapper ) ; <nl> + <nl> + / / Can ' t extend java . awt . Point ; can ' t add : <nl> + / / public final static TypeMapper TYPE _ MAPPER = mapper ; <nl> + / / - > Extend Native . options via reflection : <nl> + try { <nl> + Field f = Native . class . getDeclaredField ( " options " ) ; <nl> + f . setAccessible ( true ) ; <nl> + ( ( Map ) f . get ( null ) ) . put ( Point . class , options ) ; <nl> + } <nl> + catch ( Exception e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + <nl> + Native . register ( NativeLibrary . getInstance ( " testlib " , options ) ) ; <nl> + } <nl> + } <nl> + public void testTypeMapperResultTypeConversion ( ) throws Exception { <nl> + DirectTypeMappedResultTypeTestLibrary lib = new DirectTypeMappedResultTypeTestLibrary ( ) ; <nl> + Point p = lib . returnPoint ( 1234 , 5678 ) ; <nl> + assertEquals ( " Failed to convert int * return to java . awt . Point " , 1234 , p . x ) ; <nl> + assertEquals ( " Failed to convert int * return to java . awt . Point " , 5678 , p . y ) ; <nl> + } <nl> <nl> public static void main ( String [ ] args ) { <nl> junit . textui . TestRunner . run ( DirectTypeMapperTest . class ) ;
diff - - git a / README . md b / README . md <nl> index 991b0a4 . . f0013d0 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 90 , 7 + 90 , 7 @ @ Using the Library <nl> Primary Documentation ( JavaDoc ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 4 . 1 . 0 / javadoc / ) . <nl> + The definitive JNA reference is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 4 . 1 . 0 / ) . <nl> <nl> Developers <nl> = = = = = = = = = =
diff - - git a / README . md b / README . md <nl> index c3dd625 . . 991b0a4 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 3 , 7 + 3 , 7 @ @ <nl> Java Native Access ( JNA ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 4 . 1 . 0 / javadoc / ) . Please read the [ overview ] ( http : / / twall . github . com / jna / 4 . 1 . 0 / javadoc / overview - summary . html # overview _ description ) . Questions , comments , or exploratory conversations should begin on the [ mailing list ] ( http : / / groups . google . com / group / jna - users ) , although you may find it easier to find answers to already - solved problems on [ StackOverflow ] ( http : / / stackoverflow . com / questions / tagged / jna ) . <nl> + The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 4 . 1 . 0 ) . Please read the [ overview ] ( http : / / twall . github . io / jna / 4 . 1 . 0 / overview - summary . html # overview _ description ) . Questions , comments , or exploratory conversations should begin on the [ mailing list ] ( http : / / groups . google . com / group / jna - users ) , although you may find it easier to find answers to already - solved problems on [ StackOverflow ] ( http : / / stackoverflow . com / questions / tagged / jna ) . <nl> <nl> JNA provides Java programs easy access to native shared libraries without writing anything but Java code - no JNI or native code is required . This functionality is comparable to Windows ' Platform / Invoke and Python ' s ctypes . <nl>
diff - - git a / . gitignore b / . gitignore <nl> index 4521d6d . . 8ac5882 100644 <nl> - - - a / . gitignore <nl> + + + b / . gitignore <nl> @ @ - 18 , 4 + 18 , 6 @ @ dist / src - mvn . zip <nl> dist / out - of - date . jar <nl> perf * . txt <nl> native / libffi / doc / libffi . info <nl> - junit - * <nl> \ No newline at end of file <nl> + junit - * <nl> + pom - jna . xml . asc <nl> + pom - jna - platform . xml . asc <nl> diff - - git a / dist / doc . zip b / dist / doc . zip <nl> index c86f220 . . 7ce9390 100644 <nl> Binary files a / dist / doc . zip and b / dist / doc . zip differ <nl> diff - - git a / dist / jna - platform . jar b / dist / jna - platform . jar <nl> index 53ed087 . . 8d5fe3d 100644 <nl> Binary files a / dist / jna - platform . jar and b / dist / jna - platform . jar differ <nl> diff - - git a / pom - jna - platform . xml b / pom - jna - platform . xml <nl> index ea5292d . . 3cd2436 100644 <nl> - - - a / pom - jna - platform . xml <nl> + + + b / pom - jna - platform . xml <nl> @ @ - 6 , 7 + 6 , 7 @ @ <nl> <nl> < groupId > net . java . dev . jna < / groupId > <nl> < artifactId > jna - platform < / artifactId > <nl> - < version > 4 . 0 . 0 - SNAPSHOT < / version > <nl> + < version > 4 . 1 . 0 < / version > <nl> < packaging > jar < / packaging > <nl> <nl> < name > Java Native Access Platform < / name > <nl> @ @ - 46 , 7 + 46 , 7 @ @ <nl> < dependency > <nl> < groupId > net . java . dev . jna < / groupId > <nl> < artifactId > jna < / artifactId > <nl> - < version > 4 . 0 . 0 - SNAPSHOT < / version > <nl> + < version > 4 . 1 . 0 < / version > <nl> < / dependency > <nl> < / dependencies > <nl> <nl> diff - - git a / pom - jna . xml b / pom - jna . xml <nl> index 95a0db4 . . 11e5798 100644 <nl> - - - a / pom - jna . xml <nl> + + + b / pom - jna . xml <nl> @ @ - 6 , 7 + 6 , 7 @ @ <nl> <nl> < groupId > net . java . dev . jna < / groupId > <nl> < artifactId > jna < / artifactId > <nl> - < version > 4 . 0 . 0 - SNAPSHOT < / version > <nl> + < version > 4 . 1 . 0 < / version > <nl> < packaging > jar < / packaging > <nl> <nl> < name > Java Native Access < / name > <nl> diff - - git a / src / com / sun / jna / Version . java b / src / com / sun / jna / Version . java <nl> index 94f2402 . . 3e4f77d 100644 <nl> - - - a / src / com / sun / jna / Version . java <nl> + + + b / src / com / sun / jna / Version . java <nl> @ @ - 12 , 6 + 12 , 6 @ @ <nl> * / <nl> package com . sun . jna ; <nl> interface Version { <nl> - String VERSION = " 4 . 0 . 0 - SNAPSHOT " ; <nl> + String VERSION = " 4 . 1 . 0 " ; <nl> String VERSION _ NATIVE = " 4 . 0 . 0 " ; <nl> }
diff - - git a / www / PublishingToMavenCentral . md b / www / PublishingToMavenCentral . md <nl> index db96175 . . 9e38e93 100644 <nl> - - - a / www / PublishingToMavenCentral . md <nl> + + + b / www / PublishingToMavenCentral . md <nl> @ @ - 29 , 11 + 29 , 6 @ @ One Time <nl> <nl> Because we are still deploying to maven repositories via java . net , see [ Java . net Maven Repository Usage Guide ] ( http : / / java . net / projects / maven2 - repository / pages / MigrationAndCleanupRelatedDocumentation ) for more info . <nl> <nl> - Request Permissions to Sonatype <nl> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> - <nl> - Open a JIRA ticket [ here ] ( https : / / issues . sonatype . org ) to request push access . Ticket can look like [ this ] ( https : / / issues . sonatype . org / browse / OSSRH - 8992 ) or [ this ] ( https : / / issues . sonatype . org / browse / OSSRH - 4386 ) . <nl> - <nl> Publish Snapshot <nl> - - - - - - - - - - - - - - - - <nl>
diff - - git a / www / ReleasingJNA . md b / www / ReleasingJNA . md <nl> index 32c6bb3 . . deb4433 100644 <nl> - - - a / www / ReleasingJNA . md <nl> + + + b / www / ReleasingJNA . md <nl> @ @ - 15 , 11 + 15 , 11 @ @ JNA Release Process <nl> Check out gh - pages branch , copy latest doc / javadoc into < version > / javadoc , <nl> commit and push . <nl> <nl> + * [ Release to Maven Central ] ( PublishingToMavenCentral . md ) <nl> + <nl> * Update links in README . md , commit and push <nl> * download links <nl> * javadoc links <nl> <nl> - * [ Release to Maven Central ] ( PublishingToMavenCentral . md ) <nl> - <nl> * Tag as & lt ; version > , push new tag to origin <nl>
diff - - git a / README . md b / README . md <nl> index 51fab0d . . c3dd625 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 3 , 7 + 3 , 7 @ @ <nl> Java Native Access ( JNA ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 4 . 0 / javadoc / ) . Please read the [ overview ] ( http : / / twall . github . com / jna / 4 . 0 / javadoc / overview - summary . html # overview _ description ) . Questions , comments , or exploratory conversations should begin on the [ mailing list ] ( http : / / groups . google . com / group / jna - users ) , although you may find it easier to find answers to already - solved problems on [ StackOverflow ] ( http : / / stackoverflow . com / questions / tagged / jna ) . <nl> + The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 4 . 1 . 0 / javadoc / ) . Please read the [ overview ] ( http : / / twall . github . com / jna / 4 . 1 . 0 / javadoc / overview - summary . html # overview _ description ) . Questions , comments , or exploratory conversations should begin on the [ mailing list ] ( http : / / groups . google . com / group / jna - users ) , although you may find it easier to find answers to already - solved problems on [ StackOverflow ] ( http : / / stackoverflow . com / questions / tagged / jna ) . <nl> <nl> JNA provides Java programs easy access to native shared libraries without writing anything but Java code - no JNI or native code is required . This functionality is comparable to Windows ' Platform / Invoke and Python ' s ctypes . <nl> <nl> @ @ - 22 , 10 + 22 , 10 @ @ JNA is a mature library with dozens of contributors and hundreds of commercial a <nl> Download <nl> = = = = = = = = <nl> <nl> - Version 4 . 0 <nl> + Version 4 . 1 . 0 <nl> <nl> - * [ jna . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / jna / 4 . 0 . 0 / jna - 4 . 0 . 0 . jar ) <nl> - * [ jna - platform . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / jna - platform / 4 . 0 . 0 / jna - platform - 4 . 0 . 0 . jar ) <nl> + * [ jna . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / jna / 4 . 1 . 0 / jna - 4 . 1 . 0 . jar ) <nl> + * [ jna - platform . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / jna - platform / 4 . 1 . 0 / jna - platform - 4 . 1 . 0 . jar ) <nl> <nl> Features <nl> = = = = = = = = <nl> @ @ - 85 , 12 + 85 , 12 @ @ Using the Library <nl> * [ Platform Library ] ( https : / / github . com / twall / jna / blob / master / www / PlatformLibrary . md ) <nl> * [ Direct Method Mapping ] ( https : / / github . com / twall / jna / blob / master / www / DirectMapping . md ) ( Optimization ) <nl> * [ Frequently Asked Questions ( FAQ ) ] ( https : / / github . com / twall / jna / blob / master / www / FrequentlyAskedQuestions . md ) <nl> - * [ Avoiding Crashes ] ( http : / / twall . github . com / jna / 4 . 0 / javadoc / overview - summary . html # crash - protection ) <nl> + * [ Avoiding Crashes ] ( http : / / twall . github . com / jna / 4 . 1 . 0 / javadoc / overview - summary . html # crash - protection ) <nl> <nl> Primary Documentation ( JavaDoc ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 4 . 0 / javadoc / ) . <nl> + The definitive JNA reference is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 4 . 1 . 0 / javadoc / ) . <nl> <nl> Developers <nl> = = = = = = = = = = <nl> @ @ - 113 , 9 + 113 , 7 @ @ If you are interested in paid support , feel free to say so on the [ jna - users mai <nl> License <nl> = = = = = = = <nl> <nl> - This library is licensed under the LGPL , version 2 . 1 or later , and ( from <nl> - version 4 . 0 onward ) the Apache Software License , version 2 . 0 . Commercial <nl> - license arrangements are negotiable . <nl> + This library is licensed under the LGPL , version 2 . 1 or later , and ( from version 4 . 0 onward ) the Apache Software License , version 2 . 0 . Commercial license arrangements are negotiable . <nl> <nl> * NOTE : Oracle is not sponsoring this project , even though the package name ( com . sun . jna ) might imply otherwise . * <nl>
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 9c98cdc . . 297ea17 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 2 , 8 + 2 , 8 @ @ NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and ASL ( see LICENSE ) . <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> - Next Release ( 4 . 0 . 1 ) <nl> - = = = = = = = = = = = = = = = = = = = = <nl> + Release 4 . 1 <nl> + = = = = = = = = = = = <nl> <nl> Features <nl> - - - - - - - - <nl> diff - - git a / build . xml b / build . xml <nl> index 10171a3 . . ed7c47c 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 56 , 8 + 56 , 8 @ @ <nl> < buildnumber / > <nl> < ! - - JNA library release version - - > <nl> < property name = " jna . major " value = " 4 " / > <nl> - < property name = " jna . minor " value = " 0 " / > <nl> - < property name = " jna . revision " value = " 1 " / > <nl> + < property name = " jna . minor " value = " 1 " / > <nl> + < property name = " jna . revision " value = " 0 " / > <nl> < property name = " jna . build " value = " $ { build . number } " / > <nl> < condition property = " version . suffix " value = " " else = " - SNAPSHOT " > <nl> < or >
diff - - git a / README . md b / README . md <nl> index 293db18 . . 51fab0d 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 5 , 15 + 5 , 19 @ @ Java Native Access ( JNA ) <nl> <nl> The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 4 . 0 / javadoc / ) . Please read the [ overview ] ( http : / / twall . github . com / jna / 4 . 0 / javadoc / overview - summary . html # overview _ description ) . Questions , comments , or exploratory conversations should begin on the [ mailing list ] ( http : / / groups . google . com / group / jna - users ) , although you may find it easier to find answers to already - solved problems on [ StackOverflow ] ( http : / / stackoverflow . com / questions / tagged / jna ) . <nl> <nl> - JNA provides Java programs easy access to native shared libraries ( DLLs on Windows ) without writing anything but Java code - no JNI or native code is required . This functionality is comparable to Windows ' Platform / Invoke and Python ' s ctypes . Access is dynamic at runtime without code generation . <nl> + JNA provides Java programs easy access to native shared libraries without writing anything but Java code - no JNI or native code is required . This functionality is comparable to Windows ' Platform / Invoke and Python ' s ctypes . <nl> <nl> - JNA allows you to call directly into native functions using natural Java method invocation . The Java call looks just like it does in native code . Most calls require no special handling or configuration ; no boilerplate or generated code is required . <nl> + JNA allows you to call directly into native functions using natural Java method invocation . The Java call looks just like the call does in native code . Most calls require no special handling or configuration ; no boilerplate or generated code is required . <nl> <nl> - The JNA library uses a small native library stub to dynamically invoke native code . The developer uses a Java interface to describe functions and structures in the target native library . This makes it quite easy to take advantage of native platform features without incurring the high overhead of configuring and building JNI code for multiple platforms . <nl> + JNA uses a small JNI library stub to dynamically invoke native code . The developer uses a Java interface to describe functions and structures in the target native library . This makes it quite easy to take advantage of native platform features without incurring the high overhead of configuring and building JNI code for multiple platforms . <nl> <nl> - While some attention is paid to performance , correctness and ease of use take priority . <nl> + While significant attention has been paid to performance , correctness and ease of use take priority . <nl> <nl> - JNA includes a platform library with many native functions already mapped as well as a set of utility interfaces that simplify native access . <nl> + In addition , JNA includes a platform library with many native functions already mapped as well as a set of utility interfaces that simplify native access . <nl> + <nl> + Projects Using JNA <nl> + = = = = = = = = = = = = = = = = = = <nl> + JNA is a mature library with dozens of contributors and hundreds of commercial and non - commercial projects that use it . If you ' re using JNA , feel free to [ tell us about it ] ( http : / / groups . google . com / group / jna - users ) . Include some details about your company , project name , purpose and size and tell us how you use the library . <nl> <nl> Download <nl> = = = = = = = = <nl> @ @ - 115 , 3 + 119 , 4 @ @ license arrangements are negotiable . <nl> <nl> * NOTE : Oracle is not sponsoring this project , even though the package name ( com . sun . jna ) might imply otherwise . * <nl> <nl> +
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 4e83440 . . afe073a 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 18 , 7 + 18 , 7 @ @ Features <nl> * [ # 250 ] ( https : / / github . com / twall / jna / pull / 250 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . GetPrivateProfileSection ` , ` GetPrivateProfileSectionNames ` and ` WritePrivateProfileSection ` and corresponding ` Kernel32Util ` helpers - [ @ quipsy - karg ] ( https : / / github . com / quipsy - karg ) . <nl> * [ # 287 ] ( https : / / github . com / twall / jna / pull / 287 ) : Added ` DBTF _ MEDIA ` and ` DBTF _ NET ` to ` com . sun . jna . platform . win32 . DBT ` - [ @ daifei4321 ] ( https : / / github . com / daifei4321 ) . <nl> * [ # 295 ] ( https : / / github . com / twall / jna / pull / 295 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . ResetEvent ` - [ @ manithree ] ( https : / / github . com / manithree ) . <nl> - * [ # 301 ] ( https : / / github . com / twall / jna / pull / 301 ) : Added ` com . sun . jna . platform . win32 . Advapi32Util . accessCheck ` and supporting classes / methods to verify file permissions - [ @ BusyByte ] ( https : / / github . com / BusyByte / jna ) . <nl> + * [ # 301 ] ( https : / / github . com / twall / jna / pull / 301 ) : Added ` accessCheck ` to ` com . sun . jna . platform . win32 . Advapi32Util ` , ` MapGenericMask ` and ` AccessCheck ` to ` com . sun . jna . platform . win32 . Advapi32 ` , ` PRIVILEGE _ SET ` and ` GENERIC _ MAPPING ` to ` com . sun . jna . platform . win32 . WinNT ` - [ @ BusyByte ] ( https : / / github . com / BusyByte ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> index d96f63b . . bc209ac 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> @ @ - 885 , 4 + 885 , 25 @ @ public class Advapi32Test extends TestCase { <nl> assertTrue ( GENERIC _ ALL ! = ( rights . getValue ( ) . intValue ( ) & GENERIC _ ALL ) ) ; <nl> } <nl> <nl> + public void testAccessCheck ( ) { <nl> + final WinNT . GENERIC _ MAPPING mapping = new WinNT . GENERIC _ MAPPING ( ) ; <nl> + mapping . genericRead = new DWORD ( FILE _ GENERIC _ READ ) ; <nl> + mapping . genericWrite = new DWORD ( FILE _ GENERIC _ WRITE ) ; <nl> + mapping . genericExecute = new DWORD ( FILE _ GENERIC _ EXECUTE ) ; <nl> + mapping . genericAll = new DWORD ( FILE _ ALL _ ACCESS ) ; <nl> + final Memory securityDescriptorMemoryPointer = new Memory ( 1 ) ; <nl> + <nl> + final PRIVILEGE _ SET privileges = new PRIVILEGE _ SET ( 1 ) ; <nl> + privileges . PrivilegeCount = new DWORD ( 0 ) ; <nl> + final DWORDByReference privilegeLength = new DWORDByReference ( new DWORD ( privileges . size ( ) ) ) ; <nl> + final DWORDByReference grantedAccess = new DWORDByReference ( ) ; <nl> + final BOOLByReference result = new BOOLByReference ( ) ; <nl> + <nl> + final boolean status = Advapi32 . INSTANCE . AccessCheck ( securityDescriptorMemoryPointer , null , new DWORD ( FILE _ GENERIC _ READ ) , mapping , privileges , privilegeLength , grantedAccess , result ) ; <nl> + assertFalse ( status ) ; <nl> + assertFalse ( result . getValue ( ) . booleanValue ( ) ) ; <nl> + <nl> + assertEquals ( " The handle is invalid . " , Kernel32Util . formatMessage ( W32Errors . HRESULT _ FROM _ WIN32 ( Kernel32 . INSTANCE . GetLastError ( ) ) ) ) ; <nl> + } <nl> + <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index c4310c5 . . 4e83440 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 18 , 6 + 18 , 7 @ @ Features <nl> * [ # 250 ] ( https : / / github . com / twall / jna / pull / 250 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . GetPrivateProfileSection ` , ` GetPrivateProfileSectionNames ` and ` WritePrivateProfileSection ` and corresponding ` Kernel32Util ` helpers - [ @ quipsy - karg ] ( https : / / github . com / quipsy - karg ) . <nl> * [ # 287 ] ( https : / / github . com / twall / jna / pull / 287 ) : Added ` DBTF _ MEDIA ` and ` DBTF _ NET ` to ` com . sun . jna . platform . win32 . DBT ` - [ @ daifei4321 ] ( https : / / github . com / daifei4321 ) . <nl> * [ # 295 ] ( https : / / github . com / twall / jna / pull / 295 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . ResetEvent ` - [ @ manithree ] ( https : / / github . com / manithree ) . <nl> + * [ # 301 ] ( https : / / github . com / twall / jna / pull / 301 ) : Added ` com . sun . jna . platform . win32 . Advapi32Util . accessCheck ` and supporting classes / methods to verify file permissions - [ @ BusyByte ] ( https : / / github . com / BusyByte / jna ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> index 6c72931 . . d34c06d 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> @ @ - 32 , 6 + 32 , 12 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> import com . sun . jna . win32 . StdCallLibrary ; <nl> import com . sun . jna . win32 . W32APIOptions ; <nl> <nl> + import static com . sun . jna . platform . win32 . WinDef . BOOLByReference ; <nl> + import static com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> + import static com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> + import static com . sun . jna . platform . win32 . WinNT . GENERIC _ MAPPING ; <nl> + import static com . sun . jna . platform . win32 . WinNT . PRIVILEGE _ SET ; <nl> + <nl> / * * <nl> * Advapi32 . dll Interface . <nl> * <nl> @ @ - 1529 , 7 + 1535 , 7 @ @ public interface Advapi32 extends StdCallLibrary { <nl> * @ param AccessMask [ in , out ] A pointer to an access mask . <nl> * @ param GenericMapping [ in ] A pointer to a GENERIC _ MAPPING structure specifying a mapping of generic access types to specific and standard access types . <nl> * / <nl> - public void MapGenericMask ( WinDef . DWORDByReference AccessMask , WinNT . GENERIC _ MAPPING GenericMapping ) ; <nl> + public void MapGenericMask ( DWORDByReference AccessMask , GENERIC _ MAPPING GenericMapping ) ; <nl> <nl> <nl> / * * <nl> @ @ - 1547 , 9 + 1553 , 9 @ @ public interface Advapi32 extends StdCallLibrary { <nl> * @ return true on success ; false on failure ( use GetLastError to get extended error information ) <nl> * / <nl> public boolean AccessCheck ( Pointer pSecurityDescriptor , <nl> - HANDLE ClientToken , WinDef . DWORD DesiredAccess , <nl> - WinNT . GENERIC _ MAPPING GenericMapping , <nl> - WinNT . PRIVILEGE _ SET PrivilegeSet , <nl> - WinDef . DWORDByReference PrivilegeSetLength , <nl> - WinDef . DWORDByReference GrantedAccess , WinDef . BOOLByReference AccessStatus ) ; <nl> + HANDLE ClientToken , DWORD DesiredAccess , <nl> + GENERIC _ MAPPING GenericMapping , <nl> + PRIVILEGE _ SET PrivilegeSet , <nl> + DWORDByReference PrivilegeSetLength , <nl> + DWORDByReference GrantedAccess , BOOLByReference AccessStatus ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> index 0892cec . . c28e348 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 41 , 6 + 41 , 12 @ @ import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . LongByReference ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> <nl> + import static com . sun . jna . platform . win32 . WinDef . BOOLByReference ; <nl> + import static com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> + import static com . sun . jna . platform . win32 . WinDef . DWORDByReference ; <nl> + import static com . sun . jna . platform . win32 . WinNT . * ; <nl> + <nl> + <nl> / * * <nl> * Advapi32 utility API . <nl> * <nl> @ @ - 432 , 14 + 438 , 14 @ @ public abstract class Advapi32Util { <nl> 	 	 	 / / open thread or process token <nl> 	 	 	 HANDLE threadHandle = Kernel32 . INSTANCE . GetCurrentThread ( ) ; <nl> 	 	 	 if ( ! Advapi32 . INSTANCE . OpenThreadToken ( threadHandle , <nl> - 	 	 	 	 	 WinNT . TOKEN _ DUPLICATE | WinNT . TOKEN _ QUERY , true , phToken ) ) { <nl> + 	 	 	 	 	 TOKEN _ DUPLICATE | TOKEN _ QUERY , true , phToken ) ) { <nl> 	 	 	 	 if ( W32Errors . ERROR _ NO _ TOKEN ! = Kernel32 . INSTANCE <nl> 	 	 	 	 	 	 . GetLastError ( ) ) { <nl> 	 	 	 	 	 throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> 	 	 	 	 } <nl> 	 	 	 	 HANDLE processHandle = Kernel32 . INSTANCE . GetCurrentProcess ( ) ; <nl> 	 	 	 	 if ( ! Advapi32 . INSTANCE . OpenProcessToken ( processHandle , <nl> - 	 	 	 	 	 	 WinNT . TOKEN _ DUPLICATE | WinNT . TOKEN _ QUERY , phToken ) ) { <nl> + 	 	 	 	 	 	 TOKEN _ DUPLICATE | TOKEN _ QUERY , phToken ) ) { <nl> 	 	 	 	 	 throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> 	 	 	 	 } <nl> 	 	 	 } <nl> @ @ - 2066 , 9 + 2072 , 9 @ @ public abstract class Advapi32Util { <nl> 	 } <nl> <nl> public static enum AccessCheckPermission { <nl> - READ ( WinNT . GENERIC _ READ ) , <nl> - WRITE ( WinNT . GENERIC _ WRITE ) , <nl> - EXECUTE ( WinNT . GENERIC _ EXECUTE ) ; <nl> + READ ( GENERIC _ READ ) , <nl> + WRITE ( GENERIC _ WRITE ) , <nl> + EXECUTE ( GENERIC _ EXECUTE ) ; <nl> <nl> final int code ; <nl> <nl> @ @ - 2083 , 8 + 2089 , 8 @ @ public abstract class Advapi32Util { <nl> <nl> <nl> private static Memory getSecurityDescriptorForFile ( final String absoluteFilePath ) { <nl> - final int infoType = WinNT . OWNER _ SECURITY _ INFORMATION | WinNT . GROUP _ SECURITY _ INFORMATION | <nl> - WinNT . DACL _ SECURITY _ INFORMATION ; <nl> + final int infoType = OWNER _ SECURITY _ INFORMATION | GROUP _ SECURITY _ INFORMATION | <nl> + DACL _ SECURITY _ INFORMATION ; <nl> <nl> final IntByReference lpnSize = new IntByReference ( ) ; <nl> boolean succeeded = Advapi32 . INSTANCE . GetFileSecurity ( <nl> @ @ - 2128 , 30 + 2134 , 30 @ @ public abstract class Advapi32Util { <nl> try { <nl> openedAccessToken = new HANDLEByReference ( ) ; <nl> <nl> - final int desireAccess = WinNT . TOKEN _ IMPERSONATE | WinNT . TOKEN _ QUERY | WinNT . TOKEN _ DUPLICATE | WinNT . STANDARD _ RIGHTS _ READ ; <nl> + final int desireAccess = TOKEN _ IMPERSONATE | TOKEN _ QUERY | TOKEN _ DUPLICATE | STANDARD _ RIGHTS _ READ ; <nl> if ( ! Advapi32 . INSTANCE . OpenProcessToken ( Kernel32 . INSTANCE . GetCurrentProcess ( ) , desireAccess , openedAccessToken ) ) { <nl> throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> } <nl> <nl> - if ( ! Advapi32 . INSTANCE . DuplicateToken ( openedAccessToken . getValue ( ) , WinNT . SECURITY _ IMPERSONATION _ LEVEL . SecurityImpersonation , duplicatedToken ) ) { <nl> + if ( ! Advapi32 . INSTANCE . DuplicateToken ( openedAccessToken . getValue ( ) , SECURITY _ IMPERSONATION _ LEVEL . SecurityImpersonation , duplicatedToken ) ) { <nl> throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> } <nl> <nl> - final WinNT . GENERIC _ MAPPING mapping = new WinNT . GENERIC _ MAPPING ( ) ; <nl> - mapping . genericRead = new WinDef . DWORD ( WinNT . FILE _ GENERIC _ READ ) ; <nl> - mapping . genericWrite = new WinDef . DWORD ( WinNT . FILE _ GENERIC _ WRITE ) ; <nl> - mapping . genericExecute = new WinDef . DWORD ( WinNT . FILE _ GENERIC _ EXECUTE ) ; <nl> - mapping . genericAll = new WinDef . DWORD ( WinNT . FILE _ ALL _ ACCESS ) ; <nl> + final GENERIC _ MAPPING mapping = new GENERIC _ MAPPING ( ) ; <nl> + mapping . genericRead = new DWORD ( FILE _ GENERIC _ READ ) ; <nl> + mapping . genericWrite = new DWORD ( FILE _ GENERIC _ WRITE ) ; <nl> + mapping . genericExecute = new DWORD ( FILE _ GENERIC _ EXECUTE ) ; <nl> + mapping . genericAll = new DWORD ( FILE _ ALL _ ACCESS ) ; <nl> <nl> - final WinDef . DWORDByReference rights = new WinDef . DWORDByReference ( new WinDef . DWORD ( permissionToCheck . getCode ( ) ) ) ; <nl> + final DWORDByReference rights = new DWORDByReference ( new DWORD ( permissionToCheck . getCode ( ) ) ) ; <nl> Advapi32 . INSTANCE . MapGenericMask ( rights , mapping ) ; <nl> <nl> - final WinNT . PRIVILEGE _ SET privileges = new WinNT . PRIVILEGE _ SET ( 1 ) ; <nl> - privileges . PrivilegeCount = new WinDef . DWORD ( 0 ) ; <nl> - final WinNT . DWORDByReference privilegeLength = new WinDef . DWORDByReference ( new WinDef . DWORD ( privileges . size ( ) ) ) ; <nl> + final PRIVILEGE _ SET privileges = new PRIVILEGE _ SET ( 1 ) ; <nl> + privileges . PrivilegeCount = new DWORD ( 0 ) ; <nl> + final DWORDByReference privilegeLength = new DWORDByReference ( new DWORD ( privileges . size ( ) ) ) ; <nl> <nl> - final WinDef . DWORDByReference grantedAccess = new WinDef . DWORDByReference ( ) ; <nl> - final WinDef . BOOLByReference result = new WinDef . BOOLByReference ( ) ; <nl> + final DWORDByReference grantedAccess = new DWORDByReference ( ) ; <nl> + final BOOLByReference result = new BOOLByReference ( ) ; <nl> if ( ! Advapi32 . INSTANCE . AccessCheck ( securityDescriptorMemoryPointer , <nl> duplicatedToken . getValue ( ) , <nl> rights . getValue ( ) , <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> index 229bf75 . . d96f63b 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> @ @ - 41 , 6 + 41 , 8 @ @ import com . sun . jna . platform . win32 . Winsvc . SERVICE _ STATUS _ PROCESS ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> <nl> + import static com . sun . jna . platform . win32 . WinNT . * ; <nl> + <nl> / * * <nl> * @ author dblock [ at ] dblock [ dot ] org <nl> * / <nl> @ @ - 826 , 4 + 828 , 61 @ @ public class Advapi32Test extends TestCase { <nl> 	 assertTrue ( Advapi32 . INSTANCE . ImpersonateSelf ( WinNT . SECURITY _ IMPERSONATION _ LEVEL . SecurityAnonymous ) ) ; <nl> 	 assertTrue ( Advapi32 . INSTANCE . RevertToSelf ( ) ) ; <nl> } <nl> + <nl> + public void testMapGenericReadMask ( ) { <nl> + final WinNT . GENERIC _ MAPPING mapping = new WinNT . GENERIC _ MAPPING ( ) ; <nl> + mapping . genericRead = new DWORD ( FILE _ GENERIC _ READ ) ; <nl> + mapping . genericWrite = new DWORD ( FILE _ GENERIC _ WRITE ) ; <nl> + mapping . genericExecute = new DWORD ( FILE _ GENERIC _ EXECUTE ) ; <nl> + mapping . genericAll = new DWORD ( FILE _ ALL _ ACCESS ) ; <nl> + <nl> + final DWORDByReference rights = new DWORDByReference ( new DWORD ( GENERIC _ READ ) ) ; <nl> + Advapi32 . INSTANCE . MapGenericMask ( rights , mapping ) ; <nl> + <nl> + assertEquals ( FILE _ GENERIC _ READ , rights . getValue ( ) . intValue ( ) ) ; <nl> + assertTrue ( GENERIC _ READ ! = ( rights . getValue ( ) . intValue ( ) & GENERIC _ READ ) ) ; <nl> + } <nl> + <nl> + public void testMapGenericWriteMask ( ) { <nl> + final WinNT . GENERIC _ MAPPING mapping = new WinNT . GENERIC _ MAPPING ( ) ; <nl> + mapping . genericRead = new DWORD ( FILE _ GENERIC _ READ ) ; <nl> + mapping . genericWrite = new DWORD ( FILE _ GENERIC _ WRITE ) ; <nl> + mapping . genericExecute = new DWORD ( FILE _ GENERIC _ EXECUTE ) ; <nl> + mapping . genericAll = new DWORD ( FILE _ ALL _ ACCESS ) ; <nl> + <nl> + final DWORDByReference rights = new DWORDByReference ( new DWORD ( GENERIC _ WRITE ) ) ; <nl> + Advapi32 . INSTANCE . MapGenericMask ( rights , mapping ) ; <nl> + <nl> + assertEquals ( FILE _ GENERIC _ WRITE , rights . getValue ( ) . intValue ( ) ) ; <nl> + assertTrue ( GENERIC _ WRITE ! = ( rights . getValue ( ) . intValue ( ) & GENERIC _ WRITE ) ) ; <nl> + } <nl> + <nl> + public void testMapGenericExecuteMask ( ) { <nl> + final WinNT . GENERIC _ MAPPING mapping = new WinNT . GENERIC _ MAPPING ( ) ; <nl> + mapping . genericRead = new DWORD ( FILE _ GENERIC _ READ ) ; <nl> + mapping . genericWrite = new DWORD ( FILE _ GENERIC _ WRITE ) ; <nl> + mapping . genericExecute = new DWORD ( FILE _ GENERIC _ EXECUTE ) ; <nl> + mapping . genericAll = new DWORD ( FILE _ ALL _ ACCESS ) ; <nl> + <nl> + final DWORDByReference rights = new DWORDByReference ( new DWORD ( GENERIC _ EXECUTE ) ) ; <nl> + Advapi32 . INSTANCE . MapGenericMask ( rights , mapping ) ; <nl> + <nl> + assertEquals ( FILE _ GENERIC _ EXECUTE , rights . getValue ( ) . intValue ( ) ) ; <nl> + assertTrue ( GENERIC _ EXECUTE ! = ( rights . getValue ( ) . intValue ( ) & GENERIC _ EXECUTE ) ) ; <nl> + } <nl> + <nl> + public void testMapGenericAllMask ( ) { <nl> + final WinNT . GENERIC _ MAPPING mapping = new WinNT . GENERIC _ MAPPING ( ) ; <nl> + mapping . genericRead = new DWORD ( FILE _ GENERIC _ READ ) ; <nl> + mapping . genericWrite = new DWORD ( FILE _ GENERIC _ WRITE ) ; <nl> + mapping . genericExecute = new DWORD ( FILE _ GENERIC _ EXECUTE ) ; <nl> + mapping . genericAll = new DWORD ( FILE _ ALL _ ACCESS ) ; <nl> + <nl> + final DWORDByReference rights = new DWORDByReference ( new DWORD ( GENERIC _ ALL ) ) ; <nl> + Advapi32 . INSTANCE . MapGenericMask ( rights , mapping ) ; <nl> + <nl> + assertEquals ( FILE _ ALL _ ACCESS , rights . getValue ( ) . intValue ( ) ) ; <nl> + assertTrue ( GENERIC _ ALL ! = ( rights . getValue ( ) . intValue ( ) & GENERIC _ ALL ) ) ; <nl> + } <nl> + <nl> }
diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index b3e218e . . 02c7e95 100755 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ
diff - - git a / native / libffi / src / x86 / ffi . c b / native / libffi / src / x86 / ffi . c <nl> index c44f4f0 . . 9d19791 100644 <nl> - - - a / native / libffi / src / x86 / ffi . c <nl> + + + b / native / libffi / src / x86 / ffi . c <nl> @ @ - 305 , 6 + 305 , 9 @ @ ffi _ status ffi _ prep _ cif _ machdep ( ffi _ cif * cif ) <nl> <nl> for ( ptr = cif - > arg _ types , i = cif - > nargs ; i > 0 ; i - - , ptr + + ) <nl> { <nl> + # ifdef X86 _ WIN32 <nl> + if ( cif - > abi ! = FFI _ STDCALL ) <nl> + # endif <nl> if ( ( ( * ptr ) - > alignment - 1 ) & cif - > bytes ) <nl> cif - > bytes = ALIGN ( cif - > bytes , ( * ptr ) - > alignment ) ; <nl> cif - > bytes + = ALIGN ( ( * ptr ) - > size , FFI _ SIZEOF _ ARG ) ; <nl> diff - - git a / native / libffi / testsuite / libffi . call / align _ stdcall . c b / native / libffi / testsuite / libffi . call / align _ stdcall . c <nl> new file mode 100755 <nl> index 0000000 . . ed3511b <nl> - - - / dev / null <nl> + + + b / native / libffi / testsuite / libffi . call / align _ stdcall . c <nl> @ @ - 0 , 0 + 1 , 42 @ @ <nl> + / * Area : 	 ffi _ call <nl> + Purpose : 	 Check stdcall for argument alignment ( always 4 ) on X86 _ WIN32 systems . <nl> + Limitations : 	 none . <nl> + PR : 	 	 none . <nl> + Originator : 	 < twalljava @ java . net > ( from many _ win32 . c ) * / <nl> + <nl> + / * { dg - do run { target i ? 86 - * - cygwin * i ? 86 - * - mingw * } } * / <nl> + <nl> + # include " ffitest . h " <nl> + # include < float . h > <nl> + <nl> + static float _ _ attribute _ _ ( ( stdcall ) ) stdcall _ align ( int i1 , <nl> + double f2 , <nl> + int i3 , <nl> + double f4 ) <nl> + { <nl> + return i1 + f2 + i3 + f4 ; <nl> + } <nl> + <nl> + int main ( void ) <nl> + { <nl> + ffi _ cif cif ; <nl> + ffi _ type * args [ 4 ] = { & ffi _ type _ int , & ffi _ type _ double , & ffi _ type _ int , & ffi _ type _ double } ; <nl> + float fa [ 2 ] = { 1 , 2 } ; <nl> + int ia [ 2 ] = { 1 , 2 } ; <nl> + void * values [ 4 ] = { & ia [ 0 ] , & fa [ 0 ] , & ia [ 1 ] , & fa [ 1 ] } ; <nl> + float f , ff ; <nl> + <nl> + / * Initialize the cif * / <nl> + CHECK ( ffi _ prep _ cif ( & cif , FFI _ STDCALL , 4 , <nl> + 	 	 & ffi _ type _ float , args ) = = FFI _ OK ) ; <nl> + <nl> + ff = stdcall _ align ( ia [ 0 ] , fa [ 0 ] , ia [ 1 ] , fa [ 1 ] ) ; <nl> + <nl> + ffi _ call ( & cif , FFI _ FN ( stdcall _ align ) , & f , values ) ; <nl> + <nl> + if ( f - ff < FLT _ EPSILON ) <nl> + printf ( " stdcall many arg tests ok ! \ n " ) ; <nl> + else <nl> + CHECK ( 0 ) ; <nl> + exit ( 0 ) ; <nl> + }
diff - - git a / native / testlib . c b / native / testlib . c <nl> index 4c924da . . b68e61d 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 947 , 18 + 947 , 20 @ @ callBugCallback ( void ( _ _ stdcall * func ) ( long , int , double , <nl> double , long , long , long ) , <nl> long arg1 , int arg2 , double arg3 , <nl> const char * arg4 , const char * arg5 , <nl> - double arg6 , long arg7 , long arg8 , long arg9 ) { <nl> + double arg6 , long arg7 , <nl> + double arg8 , long arg9 , <nl> + long arg10 , long arg11 ) { <nl> void * sp1 = NULL ; <nl> void * sp2 = NULL ; <nl> int value = - 1 ; <nl> <nl> # if defined ( _ MSC _ VER ) <nl> _ _ asm mov sp1 , esp ; <nl> - ( * func ) ( arg1 , arg2 , arg3 , arg4 , arg5 , arg6 , arg7 , arg8 , arg9 ) ; <nl> + ( * func ) ( arg1 , arg2 , arg3 , arg4 , arg5 , arg6 , arg7 , arg8 , arg9 , arg10 , arg11 ) ; <nl> _ _ asm mov sp2 , esp ; <nl> # elif defined ( _ _ GNUC _ _ ) <nl> asm volatile ( " movl % % esp , % 0 " : " = g " ( sp1 ) ) ; <nl> - ( * func ) ( arg1 , arg2 , arg3 , arg4 , arg5 , arg6 , arg7 , arg8 , arg9 ) ; <nl> + ( * func ) ( arg1 , arg2 , arg3 , arg4 , arg5 , arg6 , arg7 , arg8 , arg9 , arg10 , arg11 ) ; <nl> asm volatile ( " movl % % esp , % 0 " : " = g " ( sp2 ) ) ; <nl> # endif <nl> <nl> diff - - git a / test / com / sun / jna / win32 / W32StdCallTest . java b / test / com / sun / jna / win32 / W32StdCallTest . java <nl> index c09e1ce . . 087f3d2 100644 <nl> - - - a / test / com / sun / jna / win32 / W32StdCallTest . java <nl> + + + b / test / com / sun / jna / win32 / W32StdCallTest . java <nl> @ @ - 57 , 13 + 57 , 16 @ @ public class W32StdCallTest extends TestCase { <nl> int callInt32StdCallCallback ( Int32Callback c , int arg , int arg2 ) ; <nl> interface BugCallback extends StdCallCallback { <nl> void callback ( NativeLong arg1 , int arg2 , double arg3 , <nl> - String arg4 , String arg5 , double arg6 , <nl> - NativeLong arg7 , NativeLong arg8 , NativeLong arg9 ) ; <nl> + String arg4 , String arg5 , <nl> + double arg6 , NativeLong arg7 , <nl> + double arg8 , NativeLong arg9 , <nl> + NativeLong arg10 , NativeLong arg11 ) ; <nl> } <nl> int callBugCallback ( BugCallback c , NativeLong arg1 , int arg2 , <nl> double arg3 , String arg4 , String arg5 , <nl> double arg6 , NativeLong arg7 , <nl> - NativeLong arg8 , NativeLong arg9 ) ; <nl> + double arg8 , NativeLong arg9 , <nl> + NativeLong arg10 , NativeLong arg11 ) ; <nl> } <nl> <nl> public static void main ( java . lang . String [ ] argList ) { <nl> @ @ - 151 , 17 + 154 , 19 @ @ public class W32StdCallTest extends TestCase { <nl> final boolean [ ] called = { false } ; <nl> TestLibrary . BugCallback cb = new TestLibrary . BugCallback ( ) { <nl> public void callback ( NativeLong arg1 , int arg2 , double arg3 , <nl> - String arg4 , String arg5 , double arg6 , <nl> - NativeLong arg7 , NativeLong arg8 , <nl> - NativeLong arg9 ) { <nl> + String arg4 , String arg5 , <nl> + double arg6 , NativeLong arg7 , <nl> + double arg8 , NativeLong arg9 , <nl> + NativeLong arg10 , NativeLong arg11 ) { <nl> called [ 0 ] = true ; <nl> } <nl> } ; <nl> int value = testlib . callBugCallback ( cb , new NativeLong ( 1 ) , <nl> - 2 , 3 , " four " , " five " , 6 , <nl> - new NativeLong ( 7 ) , <nl> - new NativeLong ( 8 ) , <nl> - new NativeLong ( 9 ) ) ; <nl> + 2 , 3 , " four " , " five " , <nl> + 6 , new NativeLong ( 7 ) , <nl> + 8 , new NativeLong ( 9 ) , <nl> + new NativeLong ( 10 ) , <nl> + new NativeLong ( 11 ) ) ; <nl> assertTrue ( " stdcall callback not called " , called [ 0 ] ) ; <nl> if ( value = = - 1 ) { <nl> fail ( " stdcall callback did not restore the stack pointer " ) ;
diff - - git a / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java b / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java <nl> index abc7e8f . . 80e063b 100644 <nl> - - - a / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java <nl> + + + b / contrib / msoffice / src / com / sun / jna / platform / win32 / COM / office / MSOfficeDemo . java <nl> @ @ - 40 , 7 + 40 , 7 @ @ public class MSOfficeDemo { <nl> Thread . currentThread ( ) . sleep ( 10000 ) ; <nl> / / save in different formats <nl> / / pdf format is only supported in MSWord 2007 and above <nl> - / / msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . pdf " , wdFormatPDF ) ; <nl> + msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . pdf " , wdFormatPDF ) ; <nl> msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . rtf " , wdFormatRTF ) ; <nl> msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . html " , wdFormatHTML ) ; <nl> / / close and save the document <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> index bff8428 . . 07220e0 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ import com . sun . jna . platform . win32 . Guid . CLSID ; <nl> import com . sun . jna . platform . win32 . Guid . IID ; <nl> import com . sun . jna . platform . win32 . OaIdl . DISPID ; <nl> import com . sun . jna . platform . win32 . OaIdl . DISPIDByReference ; <nl> + import com . sun . jna . platform . win32 . OaIdl . EXCEPINFO ; <nl> import com . sun . jna . platform . win32 . OleAuto ; <nl> import com . sun . jna . platform . win32 . OleAuto . DISPPARAMS ; <nl> import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> @ @ - 91 , 7 + 92 , 7 @ @ public class COMEarlyBindingObject extends COMBindingBaseObject implements <nl> @ Override <nl> public HRESULT Invoke ( DISPID dispIdMember , IID riid , LCID lcid , <nl> DISPID wFlags , DISPPARAMS pDispParams , ByReference pVarResult , <nl> - com . sun . jna . platform . win32 . OaIdl . EXCEPINFO . ByReference pExcepInfo , <nl> + EXCEPINFO . ByReference pExcepInfo , <nl> IntByReference puArgErr ) { <nl> return this . getIDispatch ( ) . Invoke ( dispIdMember , riid , lcid , wFlags , <nl> pDispParams , pVarResult , pExcepInfo , puArgErr ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMException . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMException . java <nl> index 518bc6e . . eefc7d6 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMException . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMException . java <nl> @ @ - 28 , 7 + 28 , 9 @ @ public class COMException extends RuntimeException { <nl> <nl> / * * The pu arg err . * / <nl> private IntByReference puArgErr ; <nl> - <nl> + <nl> + private int uArgErr ; <nl> + <nl> / * * <nl> * Instantiates a new automation exception . <nl> * / <nl> @ @ - 70 , 7 + 72 , 7 @ @ public class COMException extends RuntimeException { <nl> * / <nl> public COMException ( String message , EXCEPINFO pExcepInfo , <nl> IntByReference puArgErr ) { <nl> - super ( message ) ; <nl> + super ( message + " ( puArgErr = " + puArgErr . getValue ( ) + " ) " ) ; <nl> this . pExcepInfo = pExcepInfo ; <nl> this . puArgErr = puArgErr ; <nl> } <nl> @ @ - 102 , 4 + 104 , 12 @ @ public class COMException extends RuntimeException { <nl> public IntByReference getArgErr ( ) { <nl> return puArgErr ; <nl> } <nl> + <nl> + public int getuArgErr ( ) { <nl> + return uArgErr ; <nl> + } <nl> + <nl> + public void setuArgErr ( int uArgErr ) { <nl> + this . uArgErr = uArgErr ; <nl> + } <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java <nl> index cdb4cfc . . 0f170a2 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMUtils . java <nl> @ @ - 21 , 6 + 21 , 7 @ @ import com . sun . jna . platform . win32 . Advapi32Util . EnumKey ; <nl> import com . sun . jna . platform . win32 . Advapi32Util . InfoKey ; <nl> import com . sun . jna . platform . win32 . Kernel32Util ; <nl> import com . sun . jna . platform . win32 . OaIdl . EXCEPINFO ; <nl> + import com . sun . jna . platform . win32 . WTypes . BSTR ; <nl> import com . sun . jna . platform . win32 . WinNT ; <nl> import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> import com . sun . jna . platform . win32 . WinReg ; <nl> @ @ - 112 , 7 + 113 , 7 @ @ public abstract class COMUtils { <nl> IntByReference puArgErr ) { <nl> if ( FAILED ( hr ) ) { <nl> String formatMessageFromHR = Kernel32Util . formatMessage ( hr ) ; <nl> - throw new COMException ( formatMessageFromHR ) ; <nl> + throw new COMException ( formatMessageFromHR , pExcepInfo , puArgErr ) ; <nl> } <nl> } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> index 6a16a69 . . b983f0d 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> @ @ - 42 , 6 + 42 , 8 @ @ public class TlbImp implements TlbConst { <nl> / * * The out . * / <nl> private File comRootDir ; <nl> <nl> + private File outputDir ; <nl> + <nl> private TlbCmdlineArgs cmdlineArgs ; <nl> <nl> / * * <nl> @ @ - 56 , 9 + 58 , 9 @ @ public class TlbImp implements TlbConst { <nl> <nl> public TlbImp ( String [ ] args ) { <nl> this . cmdlineArgs = new TlbCmdlineArgs ( args ) ; <nl> - <nl> + <nl> if ( this . cmdlineArgs . isTlbId ( ) ) { <nl> - String clsid = this . cmdlineArgs . getParam ( CMD _ ARG _ TYPELIB _ ID ) ; <nl> + String clsid = this . cmdlineArgs . getRequiredParam ( CMD _ ARG _ TYPELIB _ ID ) ; <nl> int majorVersion = this . cmdlineArgs <nl> . getIntParam ( CMD _ ARG _ TYPELIB _ MAJOR _ VERSION ) ; <nl> int minorVersion = this . cmdlineArgs <nl> @ @ - 70 , 7 + 72 , 7 @ @ public class TlbImp implements TlbConst { <nl> minorVersion ) ; <nl> this . startCOM2Java ( ) ; <nl> } else if ( this . cmdlineArgs . isTlbFile ( ) ) { <nl> - String file = this . cmdlineArgs . getParam ( CMD _ ARG _ TYPELIB _ FILE ) ; <nl> + String file = this . cmdlineArgs . getRequiredParam ( CMD _ ARG _ TYPELIB _ FILE ) ; <nl> / / initialize typelib <nl> / / check version numbers with registry entries ! ! ! <nl> this . typeLibUtil = new TypeLibUtil ( file ) ; <nl> @ @ - 86 , 9 + 88 , 9 @ @ public class TlbImp implements TlbConst { <nl> try { <nl> / / create output Dir <nl> this . createDir ( ) ; <nl> - <nl> - int bindingMode = this . cmdlineArgs . getBindingMode ( ) ; <nl> - <nl> + <nl> + String bindingMode = this . cmdlineArgs . getBindingMode ( ) ; <nl> + <nl> int typeInfoCount = typeLibUtil . getTypeInfoCount ( ) ; <nl> for ( int i = 0 ; i < typeInfoCount ; + + i ) { <nl> TYPEKIND typekind = typeLibUtil . getTypeInfoType ( i ) ; <nl> @ @ - 106 , 7 + 108 , 8 @ @ public class TlbImp implements TlbConst { <nl> this . createCOMDispInterface ( i , this . getPackageName ( ) , <nl> typeLibUtil ) ; <nl> } else if ( typekind . value = = TYPEKIND . TKIND _ COCLASS ) { <nl> - this . createCOMCoClass ( i , this . getPackageName ( ) , typeLibUtil , bindingMode ) ; <nl> + this . createCOMCoClass ( i , this . getPackageName ( ) , <nl> + typeLibUtil , bindingMode ) ; <nl> } else if ( typekind . value = = TYPEKIND . TKIND _ ALIAS ) { <nl> this . logInfo ( " ' TKIND _ ALIAS ' objects are currently not supported ! " ) ; <nl> } else if ( typekind . value = = TYPEKIND . TKIND _ UNION ) { <nl> @ @ - 122 , 10 + 125 , 16 @ @ public class TlbImp implements TlbConst { <nl> } <nl> <nl> private void createDir ( ) throws FileNotFoundException { <nl> - String tmp = System . getProperty ( " java . io . tmpdir " ) ; <nl> - this . comRootDir = new File ( tmp + " _ jnaCOM _ " <nl> - + System . currentTimeMillis ( ) + " \ \ myPackage \ \ " <nl> - + this . typeLibUtil . getName ( ) . toLowerCase ( ) + " \ \ " ) ; <nl> + String _ outputDir = this . cmdlineArgs . getParam ( CMD _ ARG _ OUTPUT _ DIR ) ; <nl> + String path = " _ jnaCOM _ " + System . currentTimeMillis ( ) + " \ \ myPackage \ \ " <nl> + + this . typeLibUtil . getName ( ) . toLowerCase ( ) + " \ \ " ; <nl> + <nl> + if ( _ outputDir ! = null ) { <nl> + this . comRootDir = new File ( _ outputDir + " \ \ " + path ) ; <nl> + } else { <nl> + String tmp = System . getProperty ( " java . io . tmpdir " ) ; <nl> + this . comRootDir = new File ( tmp + " \ \ " + path ) ; <nl> + } <nl> <nl> if ( this . comRootDir . exists ( ) ) <nl> this . comRootDir . delete ( ) ; <nl> @ @ - 204 , 7 + 213 , 7 @ @ public class TlbImp implements TlbConst { <nl> } <nl> <nl> private void createCOMCoClass ( int index , String packagename , <nl> - TypeLibUtil typeLibUtil , int bindingMode ) throws IOException { <nl> + TypeLibUtil typeLibUtil , String bindingMode ) throws IOException { <nl> TlbCoClass tlbCoClass = new TlbCoClass ( index , this . getPackageName ( ) , <nl> typeLibUtil , bindingMode ) ; <nl> this . writeTlbClass ( tlbCoClass ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbBase . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbBase . java <nl> index 477c437 . . ce1f4c6 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbBase . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbBase . java <nl> @ @ - 73 , 13 + 73 , 13 @ @ public abstract class TlbBase { <nl> public static String [ ] IDISPATCH _ METHODS = { " GetTypeInfoCount " , <nl> " GetTypeInfo " , " GetIDsOfNames " , " Invoke " } ; <nl> <nl> - protected int bindingMode = TlbConst . BINDING _ MODE _ DISPID ; <nl> + protected String bindingMode = TlbConst . BINDING _ MODE _ DISPID ; <nl> <nl> public TlbBase ( int index , TypeLibUtil typeLibUtil , TypeInfoUtil typeInfoUtil ) { <nl> this ( index , typeLibUtil , typeInfoUtil , TlbConst . BINDING _ MODE _ DISPID ) ; <nl> } <nl> <nl> - public TlbBase ( int index , TypeLibUtil typeLibUtil , TypeInfoUtil typeInfoUtil , int bindingMode ) { <nl> + public TlbBase ( int index , TypeLibUtil typeLibUtil , TypeInfoUtil typeInfoUtil , String bindingMode ) { <nl> this . index = index ; <nl> this . typeLibUtil = typeLibUtil ; <nl> this . typeInfoUtil = typeInfoUtil ; <nl> @ @ - 266 , 14 + 266 , 14 @ @ public abstract class TlbBase { <nl> } <nl> <nl> protected boolean isVTableMode ( ) { <nl> - if ( this . bindingMode = = TlbConst . BINDING _ MODE _ VTABLE ) <nl> + if ( this . bindingMode . equalsIgnoreCase ( TlbConst . BINDING _ MODE _ VTABLE ) ) <nl> return true ; <nl> else <nl> return false ; <nl> } <nl> <nl> protected boolean isDispIdMode ( ) { <nl> - if ( this . bindingMode = = TlbConst . BINDING _ MODE _ DISPID ) <nl> + if ( this . bindingMode . equalsIgnoreCase ( TlbConst . BINDING _ MODE _ DISPID ) ) <nl> return true ; <nl> else <nl> return false ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCmdlineArgs . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCmdlineArgs . java <nl> index a560b59 . . ce71e24 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCmdlineArgs . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCmdlineArgs . java <nl> @ @ - 22 , 12 + 22 , 16 @ @ public class TlbCmdlineArgs extends Hashtable < String , String > implements <nl> } <nl> <nl> public int getIntParam ( String key ) { <nl> - String param = this . getParam ( key ) ; <nl> + String param = this . getRequiredParam ( key ) ; <nl> return new Integer ( param ) . intValue ( ) ; <nl> } <nl> <nl> public String getParam ( String key ) { <nl> - String param = this . get ( key ) ; <nl> + return this . get ( key ) ; <nl> + } <nl> + <nl> + public String getRequiredParam ( String key ) { <nl> + String param = this . getParam ( key ) ; <nl> if ( param = = null ) <nl> throw new TlbParameterNotFoundException ( <nl> " Commandline parameter not found : " + key ) ; <nl> @ @ - 55 , 15 + 59 , 15 @ @ public class TlbCmdlineArgs extends Hashtable < String , String > implements <nl> return this . containsKey ( CMD _ ARG _ TYPELIB _ ID ) ; <nl> } <nl> <nl> - public int getBindingMode ( ) { <nl> + public String getBindingMode ( ) { <nl> if ( this . containsKey ( CMD _ ARG _ BINDING _ MODE ) ) <nl> - return this . getIntParam ( CMD _ ARG _ BINDING _ MODE ) ; <nl> + return this . getParam ( CMD _ ARG _ BINDING _ MODE ) ; <nl> else <nl> return BINDING _ MODE _ VTABLE ; <nl> } <nl> <nl> public void showCmdHelp ( ) { <nl> - String helpStr = " usage : TlbImp [ - tlb . id - tlb . major . version - tlb . minor . version ] [ - tlb . file ] [ - bind . mode vTable , dispId ] " <nl> + String helpStr = " usage : TlbImp [ - tlb . id - tlb . major . version - tlb . minor . version ] [ - tlb . file ] [ - bind . mode vTable , dispId ] [ - output . dir ] " <nl> + CRCR <nl> + " options : " <nl> + CR <nl> @ @ - 76 , 6 + 80 , 8 @ @ public class TlbCmdlineArgs extends Hashtable < String , String > implements <nl> + " - tlb . file The file name containing the type library . " <nl> + CR <nl> + " - bind . mode The binding mode used to create the Java code . " <nl> + + CR <nl> + + " - output . dir The optional output directory , default is the user temp directory . " <nl> + CRCR <nl> + " samples : " <nl> + CR <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCoClass . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCoClass . java <nl> index 2f2797f . . 1cf55e0 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCoClass . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCoClass . java <nl> @ @ - 39 , 7 + 39 , 7 @ @ public class TlbCoClass extends TlbBase { <nl> * @ param typeLibUtil <nl> * the type lib util <nl> * / <nl> - public TlbCoClass ( int index , String packagename , TypeLibUtil typeLibUtil , int bindingMode ) { <nl> + public TlbCoClass ( int index , String packagename , TypeLibUtil typeLibUtil , String bindingMode ) { <nl> super ( index , typeLibUtil , null ) ; <nl> <nl> TypeInfoUtil typeInfoUtil = typeLibUtil . getTypeInfoUtil ( index ) ; <nl> @ @ - 89 , 7 + 89 , 7 @ @ public class TlbCoClass extends TlbBase { <nl> this . createContent ( this . content ) ; <nl> } <nl> <nl> - protected void createFunctions ( TypeInfoUtil typeInfoUtil , int bindingMode ) { <nl> + protected void createFunctions ( TypeInfoUtil typeInfoUtil , String bindingMode ) { <nl> TYPEATTR typeAttr = typeInfoUtil . getTypeAttr ( ) ; <nl> int cFuncs = typeAttr . cFuncs . intValue ( ) ; <nl> for ( int i = 0 ; i < cFuncs ; i + + ) { <nl> @ @ - 98 , 10 + 98 , 10 @ @ public class TlbCoClass extends TlbBase { <nl> <nl> TlbAbstractMethod method = null ; <nl> if ( funcDesc . invkind . equals ( INVOKEKIND . INVOKE _ FUNC ) ) { <nl> - if ( this . isDispIdMode ( ) ) <nl> + if ( this . isVTableMode ( ) ) <nl> method = new TlbFunctionVTable ( i , index , typeLibUtil , funcDesc , typeInfoUtil ) ; <nl> else <nl> - method = new TlbFunctionVTable ( i , index , typeLibUtil , funcDesc , typeInfoUtil ) ; <nl> + method = new TlbFunctionDispId ( i , index , typeLibUtil , funcDesc , typeInfoUtil ) ; <nl> } else if ( funcDesc . invkind . equals ( INVOKEKIND . INVOKE _ PROPERTYGET ) ) { <nl> method = new TlbPropertyGet ( i , index , typeLibUtil , funcDesc , <nl> typeInfoUtil ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbConst . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbConst . java <nl> index 4b24ecf . . 838c69d 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbConst . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbConst . java <nl> @ @ - 40 , 13 + 40 , 15 @ @ public interface TlbConst { <nl> <nl> public final static String CMD _ ARG _ BINDING _ MODE = " bind . mode " ; <nl> <nl> - public final static int BINDING _ MODE _ VTABLE = 0 ; <nl> + public final static String BINDING _ MODE _ VTABLE = " vtable " ; <nl> <nl> - public final static int BINDING _ MODE _ DISPID = 1 ; <nl> + public final static String BINDING _ MODE _ DISPID = " dispid " ; <nl> <nl> public final static String CMD _ ARG _ TYPELIB _ MAJOR _ VERSION = " tlb . major . version " ; <nl> <nl> public final static String CMD _ ARG _ TYPELIB _ MINOR _ VERSION = " tlb . minor . version " ; <nl> <nl> public final static String CMD _ ARG _ TYPELIB _ FILE = " tlb . file " ; <nl> + <nl> + public final static String CMD _ ARG _ OUTPUT _ DIR = " output . dir " ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionDispId . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionDispId . java <nl> index 3358f0f . . 247b941 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionDispId . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionDispId . java <nl> @ @ - 43 , 15 + 43 , 18 @ @ public class TlbFunctionDispId extends TlbAbstractMethod { <nl> <nl> String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; <nl> <nl> - / / if there is at least one param we need a comma <nl> - if ( paramCount > 0 ) <nl> - methodvariables = " , " ; <nl> - <nl> for ( int i = 0 ; i < paramCount ; i + + ) { <nl> ELEMDESC elemdesc = funcDesc . lprgelemdescParam . elemDescArg [ i ] ; <nl> String methodName = names [ i + 1 ] . toLowerCase ( ) ; <nl> - methodparams + = this . getType ( elemdesc . tdesc ) + " " + this . replaceJavaKeyword ( methodName ) ; <nl> - methodvariables + = methodName ; <nl> + String type = this . getType ( elemdesc . tdesc ) ; <nl> + String _ methodName = this . replaceJavaKeyword ( methodName ) ; <nl> + methodparams + = type + " " + _ methodName ; <nl> + <nl> + / / wrap all in a VARIANT <nl> + if ( type . equals ( " VARIANT " ) ) <nl> + methodvariables + = _ methodName ; <nl> + else <nl> + methodvariables + = " new VARIANT ( " + _ methodName + " ) " ; <nl> <nl> / / if there is more than 1 param <nl> if ( i < ( paramCount - 1 ) ) { <nl> @ @ - 59 , 9 + 62 , 16 @ @ public class TlbFunctionDispId extends TlbAbstractMethod { <nl> methodvariables + = " , " ; <nl> } <nl> } <nl> + <nl> + String returnValue ; <nl> + if ( this . returnType . equalsIgnoreCase ( " VARIANT " ) ) <nl> + returnValue = " pResult " ; <nl> + else <nl> + returnValue = " ( ( " + returnType + " ) pResult . getValue ( ) ) " ; <nl> <nl> this . replaceVariable ( " helpstring " , docStr ) ; <nl> this . replaceVariable ( " returntype " , returnType ) ; <nl> + this . replaceVariable ( " returnvalue " , returnValue ) ; <nl> this . replaceVariable ( " methodname " , methodName ) ; <nl> this . replaceVariable ( " methodparams " , methodparams ) ; <nl> this . replaceVariable ( " methodvariables " , methodvariables ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionDispId . template b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionDispId . template <nl> index f7e2a5d . . 7d5584a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionDispId . template <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionDispId . template <nl> @ @ - 4 , 5 + 4 , 7 @ @ <nl> 	 * Member id : $ { memberid } <nl> 	 * / <nl> 	 public $ { returntype } $ { methodname } ( $ { methodparams } ) { <nl> - 	 	 return this . oleMethod ( OleAuto . DISPATCH _ METHOD , null , dispatch , new DISPID ( $ { memberid } ) ) ; <nl> + 	 	 VARIANT . ByReference pResult = new VARIANT . ByReference ( ) ; <nl> + 	 	 this . oleMethod ( OleAuto . DISPATCH _ METHOD , pResult , getIDispatch ( ) , new DISPID ( $ { memberid } ) , new VARIANT [ ] { $ { methodvariables } } ) ; <nl> + 	 	 return $ { returnvalue } ; <nl> 	 } <nl> \ No newline at end of file <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> index 64ee249 . . 6c34759 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import java . util . Arrays ; <nl> import java . util . Date ; <nl> import java . util . List ; <nl> <nl> + import com . sun . jna . IntegerType ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> import com . sun . jna . Union ; <nl> @ @ - 15 , 14 + 16 , 16 @ @ import com . sun . jna . platform . win32 . OaIdl . VARIANT _ BOOL ; <nl> import com . sun . jna . platform . win32 . OaIdl . VARIANT _ BOOLByReference ; <nl> import com . sun . jna . platform . win32 . OaIdl . _ VARIANT _ BOOLByReference ; <nl> import com . sun . jna . platform . win32 . WTypes . BSTR ; <nl> + import com . sun . jna . platform . win32 . WTypes . BSTRByReference ; <nl> import com . sun . jna . platform . win32 . WTypes . VARTYPE ; <nl> + import com . sun . jna . platform . win32 . WinDef . BOOL ; <nl> import com . sun . jna . platform . win32 . WinDef . BYTE ; <nl> import com . sun . jna . platform . win32 . WinDef . CHAR ; <nl> import com . sun . jna . platform . win32 . WinDef . CHARByReference ; <nl> import com . sun . jna . platform . win32 . WinDef . LONG ; <nl> + import com . sun . jna . platform . win32 . WinDef . LONGByReference ; <nl> import com . sun . jna . platform . win32 . WinDef . LONGLONG ; <nl> import com . sun . jna . platform . win32 . WinDef . LONGLONGByReference ; <nl> - import com . sun . jna . platform . win32 . WinDef . LONGByReference ; <nl> import com . sun . jna . platform . win32 . WinDef . PVOID ; <nl> import com . sun . jna . platform . win32 . WinDef . SCODE ; <nl> import com . sun . jna . platform . win32 . WinDef . SCODEByReference ; <nl> @ @ - 30 , 9 + 33 , 9 @ @ import com . sun . jna . platform . win32 . WinDef . SHORT ; <nl> import com . sun . jna . platform . win32 . WinDef . UINT ; <nl> import com . sun . jna . platform . win32 . WinDef . UINTByReference ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONG ; <nl> + import com . sun . jna . platform . win32 . WinDef . ULONGByReference ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONGLONG ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONGLONGByReference ; <nl> - import com . sun . jna . platform . win32 . WinDef . ULONGByReference ; <nl> import com . sun . jna . platform . win32 . WinDef . USHORT ; <nl> import com . sun . jna . platform . win32 . WinDef . USHORTByReference ; <nl> import com . sun . jna . platform . win32 . COM . Dispatch ; <nl> @ @ - 135 , 8 + 138 , 18 @ @ public interface Variant { <nl> this . setValue ( VT _ BSTR , value ) ; <nl> } <nl> <nl> + public VARIANT ( BSTRByReference value ) { <nl> + this ( ) ; <nl> + this . setValue ( VT _ BYREF | VT _ BSTR , value ) ; <nl> + } <nl> + <nl> public VARIANT ( VARIANT _ BOOL value ) { <nl> this ( ) ; <nl> + this . setValue ( VT _ BOOL , new BOOL ( value . intValue ( ) ) ) ; <nl> + } <nl> + <nl> + public VARIANT ( BOOL value ) { <nl> + this ( ) ; <nl> this . setValue ( VT _ BOOL , value ) ; <nl> } <nl> <nl> @ @ - 189 , 9 + 202 , 9 @ @ public interface Variant { <nl> public VARIANT ( boolean value ) { <nl> this ( ) ; <nl> if ( value ) <nl> - this . setValue ( VT _ BOOL , VARIANT _ TRUE ) ; <nl> + this . setValue ( VT _ BOOL , new BOOL ( VARIANT _ TRUE . intValue ( ) ) ) ; <nl> else <nl> - this . setValue ( VT _ BOOL , VARIANT _ FALSE ) ; <nl> + this . setValue ( VT _ BOOL , new BOOL ( VARIANT _ FALSE . intValue ( ) ) ) ; <nl> } <nl> <nl> public VARIANT ( IDispatch value ) { <nl> @ @ - 537 , 7 + 550 , 7 @ @ public interface Variant { <nl> / / DOUBLE VT _ R8 <nl> public Double dblVal ; <nl> / / VARIANT _ BOOL VT _ BOOL <nl> - public VARIANT _ BOOL boolVal ; <nl> + public BOOL boolVal ; <nl> / / SCODE VT _ ERROR <nl> public SCODE scode ; <nl> / / CY VT _ CY <nl> @ @ - 575 , 7 + 588 , 7 @ @ public interface Variant { <nl> / / DATE * VT _ BYREF | VT _ DATE <nl> public DATE . ByReference pdate ; <nl> / / BSTR * VT _ BYREF | VT _ BSTR <nl> - public BSTR pbstrVal ; <nl> + public BSTR . ByReference pbstrVal ; <nl> / / IUnknown * * VT _ BYREF | VT _ UNKNOWN <nl> public Unknown . ByReference ppunkVal ; <nl> / / IDispatch * * VT _ BYREF | VT _ DISPATCH <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java <nl> index 21e7942 . . 889773a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java <nl> @ @ - 1091 , 7 + 1091 , 7 @ @ public interface WinDef extends StdCallLibrary { <nl> * the value <nl> * / <nl> public USHORT ( long value ) { <nl> - super ( 2 , value , true ) ; <nl> + super ( SIZE , value , true ) ; <nl> } <nl> } <nl>
diff - - git a / src / com / sun / jna / CallbackReference . java b / src / com / sun / jna / CallbackReference . java <nl> index 79b5fbb . . bcf5568 100644 <nl> - - - a / src / com / sun / jna / CallbackReference . java <nl> + + + b / src / com / sun / jna / CallbackReference . java <nl> @ @ - 19 , 7 + 19 , 6 @ @ import java . lang . reflect . InvocationTargetException ; <nl> import java . lang . reflect . Method ; <nl> import java . lang . reflect . Proxy ; <nl> import java . util . Arrays ; <nl> - import java . util . Collections ; <nl> import java . util . HashMap ; <nl> import java . util . HashSet ; <nl> import java . util . Iterator ; <nl> diff - - git a / src / com / sun / jna / Memory . java b / src / com / sun / jna / Memory . java <nl> index 6ef96a7 . . 7664c3b 100644 <nl> - - - a / src / com / sun / jna / Memory . java <nl> + + + b / src / com / sun / jna / Memory . java <nl> @ @ - 14 , 7 + 14 , 6 @ @ import java . nio . ByteBuffer ; <nl> import java . util . Collections ; <nl> import java . util . HashMap ; <nl> import java . util . Map ; <nl> - import java . util . WeakHashMap ; <nl> <nl> / * * <nl> * A < code > Pointer < / code > to memory obtained from the native heap via a <nl> diff - - git a / src / com / sun / jna / Pointer . java b / src / com / sun / jna / Pointer . java <nl> index 7f3f3d8 . . a79c117 100644 <nl> - - - a / src / com / sun / jna / Pointer . java <nl> + + + b / src / com / sun / jna / Pointer . java <nl> @ @ - 10 , 7 + 10 , 6 @ @ <nl> * / <nl> package com . sun . jna ; <nl> <nl> - import java . io . UnsupportedEncodingException ; <nl> import java . lang . reflect . Array ; <nl> import java . nio . Buffer ; <nl> import java . nio . ByteBuffer ; <nl> diff - - git a / src / com / sun / jna / ptr / ByReference . java b / src / com / sun / jna / ptr / ByReference . java <nl> index d58b5ad . . a05b4e8 100644 <nl> - - - a / src / com / sun / jna / ptr / ByReference . java <nl> + + + b / src / com / sun / jna / ptr / ByReference . java <nl> @ @ - 13 , 8 + 13 , 6 @ @ <nl> package com . sun . jna . ptr ; <nl> <nl> import com . sun . jna . Memory ; <nl> - import com . sun . jna . NativeMapped ; <nl> - import com . sun . jna . Pointer ; <nl> import com . sun . jna . PointerType ; <nl> <nl> / * * Provides generic " pointer to type " functionality , often used in C <nl> diff - - git a / src / com / sun / jna / win32 / StdCallFunctionMapper . java b / src / com / sun / jna / win32 / StdCallFunctionMapper . java <nl> index d1bb42a . . 3ec2057 100644 <nl> - - - a / src / com / sun / jna / win32 / StdCallFunctionMapper . java <nl> + + + b / src / com / sun / jna / win32 / StdCallFunctionMapper . java <nl> @ @ - 13 , 20 + 13 , 13 @ @ <nl> package com . sun . jna . win32 ; <nl> <nl> import java . lang . reflect . Method ; <nl> - import java . nio . Buffer ; <nl> - import java . nio . ByteBuffer ; <nl> <nl> - import com . sun . jna . Callback ; <nl> import com . sun . jna . FunctionMapper ; <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . NativeLibrary ; <nl> - import com . sun . jna . NativeLong ; <nl> import com . sun . jna . NativeMapped ; <nl> import com . sun . jna . NativeMappedConverter ; <nl> import com . sun . jna . Pointer ; <nl> - import com . sun . jna . PointerType ; <nl> - import com . sun . jna . Structure ; <nl> - import com . sun . jna . WString ; <nl> <nl> / * * Provides mapping from simple method names to w32 stdcall - decorated names <nl> * where the name suffix is " @ " followed by the number of bytes popped by <nl> diff - - git a / src / com / sun / jna / win32 / W32APIOptions . java b / src / com / sun / jna / win32 / W32APIOptions . java <nl> index 294b4d8 . . 61ab51e 100644 <nl> - - - a / src / com / sun / jna / win32 / W32APIOptions . java <nl> + + + b / src / com / sun / jna / win32 / W32APIOptions . java <nl> @ @ - 2 , 7 + 2 , 6 @ @ package com . sun . jna . win32 ; <nl> <nl> import java . util . HashMap ; <nl> import java . util . Map ; <nl> - import com . sun . jna . Library ; <nl> <nl> public interface W32APIOptions extends StdCallLibrary { <nl> / * * Standard options to use the unicode version of a w32 API . * / <nl> diff - - git a / src / com / sun / jna / win32 / W32APITypeMapper . java b / src / com / sun / jna / win32 / W32APITypeMapper . java <nl> index 776ca4b . . 65bf9c9 100644 <nl> - - - a / src / com / sun / jna / win32 / W32APITypeMapper . java <nl> + + + b / src / com / sun / jna / win32 / W32APITypeMapper . java <nl> @ @ - 12 , 13 + 12 , 8 @ @ <nl> * / <nl> package com . sun . jna . win32 ; <nl> <nl> - import java . util . HashMap ; <nl> - import java . util . Map ; <nl> - <nl> import com . sun . jna . DefaultTypeMapper ; <nl> import com . sun . jna . FromNativeContext ; <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . Library ; <nl> import com . sun . jna . StringArray ; <nl> import com . sun . jna . ToNativeContext ; <nl> import com . sun . jna . TypeConverter ;
diff - - git a / trigger . txt b / trigger . txt <nl> deleted file mode 100644 <nl> index e69de29 . . 0000000
diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index 0a14ffb . . 602f9be 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 500 , 7 + 500 , 7 @ @ public class NativeLibrary { <nl> } <nl> <nl> / * * <nl> - * Create a new @ { link Function } that is linked with a native <nl> + * Create a new { @ link Function } that is linked with a native <nl> * function that follows a given calling flags . <nl> * <nl> * @ param 	 functionName <nl> @ @ - 514 , 7 + 514 , 7 @ @ public class NativeLibrary { <nl> } <nl> <nl> / * * <nl> - * Create a new @ { link Function } that is linked with a native <nl> + * Create a new { @ link Function } that is linked with a native <nl> * function that follows a given calling flags . <nl> * <nl> * @ param 	 functionName
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 7e7bb25 . . 00414ad 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 21 , 6 + 21 , 7 @ @ Bug Fixes <nl> - - - - - - - - - <nl> * Fixed inconsistent behavior on ` Structure . ByValue ` fields within a ` Structure ` - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 279 ] ( https : / / github . com / twall / jna / issues / 279 ) : Accommodate FreeBSD libc loading - [ @ sevan ] ( https : / / github . com / sevan ) . <nl> + * [ # 287 ] ( https : / / github . com / twall / jna / pull / 287 ) : Fixed ` contrib . native _ window _ msg . src . com . sun . jna . platform . win32 . Win32WindowDemo ` ; added showing the added / removed drive letter , and the event is about media in drive or physical drive . Modify ` contrib . platform . src . com . sun . jna . platform . win32 . DBT ` add constants DBTF _ MEDIA and DBTF _ NET - [ @ daifei4321 ] ( https : / / github . com / daifei4321 ) . <nl> <nl> Release 4 . 0 <nl> = = = = = = = = = = =
diff - - git a / contrib / native _ window _ msg / src / com / sun / jna / platform / win32 / Win32WindowDemo . java b / contrib / native _ window _ msg / src / com / sun / jna / platform / win32 / Win32WindowDemo . java <nl> index 155b908 . . 93350d2 100644 <nl> - - - a / contrib / native _ window _ msg / src / com / sun / jna / platform / win32 / Win32WindowDemo . java <nl> + + + b / contrib / native _ window _ msg / src / com / sun / jna / platform / win32 / Win32WindowDemo . java <nl> @ @ - 16 , 6 + 16 , 11 @ @ package com . sun . jna . platform . win32 ; <nl> import com . sun . jna . WString ; <nl> import com . sun . jna . platform . win32 . DBT ; <nl> import com . sun . jna . platform . win32 . DBT . DEV _ BROADCAST _ DEVICEINTERFACE ; <nl> + import com . sun . jna . platform . win32 . DBT . DEV _ BROADCAST _ HANDLE ; <nl> + import com . sun . jna . platform . win32 . DBT . DEV _ BROADCAST _ HDR ; <nl> + import com . sun . jna . platform . win32 . DBT . DEV _ BROADCAST _ OEM ; <nl> + import com . sun . jna . platform . win32 . DBT . DEV _ BROADCAST _ PORT ; <nl> + import com . sun . jna . platform . win32 . DBT . DEV _ BROADCAST _ VOLUME ; <nl> import com . sun . jna . platform . win32 . Kernel32 ; <nl> import com . sun . jna . platform . win32 . User32 ; <nl> import com . sun . jna . platform . win32 . WinDef . HMODULE ; <nl> @ @ - 59 , 7 + 64 , 9 @ @ public class Win32WindowDemo implements WindowProc { <nl> 	 	 	 	 	 	 User32 . WS _ EX _ TOPMOST , <nl> 	 	 	 	 	 	 windowClass , <nl> 	 	 	 	 	 	 " My hidden helper window , used only to catch the windows events " , <nl> - 	 	 	 	 	 	 0 , 0 , 0 , 0 , 0 , WinUser . HWND _ MESSAGE , null , hInst , null ) ; <nl> + 	 	 	 	 	 	 0 , 0 , 0 , 0 , 0 , <nl> + 	 	 	 	 	 	 null , / / WM _ DEVICECHANGE contradicts parent = WinUser . HWND _ MESSAGE <nl> + 	 	 	 	 	 	 null , hInst , null ) ; <nl> <nl> 	 	 getLastError ( ) ; <nl> 	 	 System . out . println ( " window sucessfully created ! window hwnd : " <nl> @ @ - 74 , 6 + 81 , 7 @ @ public class Win32WindowDemo implements WindowProc { <nl> <nl> 	 	 / * this filters for all usb device classes * / <nl> 	 	 DEV _ BROADCAST _ DEVICEINTERFACE notificationFilter = new DEV _ BROADCAST _ DEVICEINTERFACE ( ) ; <nl> + 	 	 notificationFilter . dbcc _ size = notificationFilter . size ( ) ; <nl> 	 	 notificationFilter . dbcc _ devicetype = DBT . DBT _ DEVTYP _ DEVICEINTERFACE ; <nl> 	 	 notificationFilter . dbcc _ classguid = DBT . GUID _ DEVINTERFACE _ USB _ DEVICE ; <nl> <nl> @ @ - 125 , 8 + 133 , 9 @ @ public class Win32WindowDemo implements WindowProc { <nl> 	 	 	 return new LRESULT ( 0 ) ; <nl> 	 	 } <nl> 	 	 case WinUser . WM _ DEVICECHANGE : { <nl> - 	 	 	 this . onDeviceChange ( wParam , lParam ) ; <nl> - 	 	 	 return new LRESULT ( 0 ) ; <nl> + 	 	 	 LRESULT lResult = this . onDeviceChange ( wParam , lParam ) ; <nl> + 	 	 	 return lResult ! = null ? lResult : <nl> + 	 	 	 	 User32 . INSTANCE . DefWindowProc ( hwnd , uMsg , wParam , lParam ) ; <nl> 	 	 } <nl> 	 	 default : <nl> 	 	 	 return User32 . INSTANCE . DefWindowProc ( hwnd , uMsg , wParam , lParam ) ; <nl> @ @ - 251 , 42 + 260 , 101 @ @ public class Win32WindowDemo implements WindowProc { <nl> 	 * the w param <nl> 	 * @ param lParam <nl> 	 * the l param <nl> + 	 * @ return the result . Null if the message is not processed . <nl> 	 * / <nl> - 	 protected void onDeviceChange ( WPARAM wParam , LPARAM lParam ) { <nl> - 	 	 / / <nl> - 	 	 / / This is the actual message from the interface via Windows messaging . <nl> - 	 	 / / This code includes some additional decoding for this particular <nl> - 	 	 / / device type <nl> - 	 	 / / and some common validation checks . <nl> - 	 	 / / <nl> - 	 	 / / Note that not all devices utilize these optional parameters in the <nl> - 	 	 / / same <nl> - 	 	 / / way . Refer to the extended information for your particular device <nl> - 	 	 / / type <nl> - 	 	 / / specified by your GUID . <nl> - 	 	 / / <nl> - 	 	 DEV _ BROADCAST _ DEVICEINTERFACE bdif = new DEV _ BROADCAST _ DEVICEINTERFACE ( <nl> - 	 	 	 	 lParam . longValue ( ) ) ; <nl> - 	 	 System . out . println ( " dbcc _ devicetype : " + bdif . dbcc _ devicetype ) ; <nl> - 	 	 System . out . println ( " dbcc _ name : " + bdif . getDbcc _ name ( ) ) ; <nl> - 	 	 System . out . println ( " dbcc _ classguid : " <nl> - 	 	 	 	 + bdif . dbcc _ classguid . toGuidString ( ) ) ; <nl> - <nl> - 	 	 / / Output some messages to the window . <nl> + 	 protected LRESULT onDeviceChange ( WPARAM wParam , LPARAM lParam ) { <nl> 	 	 switch ( wParam . intValue ( ) ) { <nl> - 	 	 case DBT . DBT _ DEVICEARRIVAL : <nl> - 	 	 	 System . out . println ( " Message DBT _ DEVICEARRIVAL " ) ; <nl> + 	 	 case DBT . DBT _ DEVICEARRIVAL : { <nl> + 	 	 	 return onDeviceChangeArrival ( lParam ) ; <nl> + 	 	 } <nl> + 	 	 case DBT . DBT _ DEVICEREMOVECOMPLETE : { <nl> + 	 	 	 return onDeviceChangeRemoveComplete ( lParam ) ; <nl> + 	 	 } <nl> + 	 	 case DBT . DBT _ DEVNODES _ CHANGED : { <nl> + 	 	 	 / / lParam is 0 for this wParam <nl> + 	 	 	 return onDeviceChangeNodesChanged ( ) ; <nl> + 	 	 } <nl> + 	 	 default : <nl> + 	 	 	 System . out <nl> + 	 	 	 	 	 . println ( " Message WM _ DEVICECHANGE message received , value unhandled . " ) ; <nl> + 	 	 } <nl> + 	 	 return null ; <nl> + 	 } <nl> + 	 <nl> + 	 protected LRESULT onDeviceChangeArrivalOrRemoveComplete ( LPARAM lParam , String action ) { <nl> + 	 	 DEV _ BROADCAST _ HDR bhdr = new DEV _ BROADCAST _ HDR ( lParam . longValue ( ) ) ; <nl> + 	 	 switch ( bhdr . dbch _ devicetype ) { <nl> + 	 	 case DBT . DBT _ DEVTYP _ DEVICEINTERFACE : { <nl> + 	 	 	 / / see http : / / msdn . microsoft . com / en - us / library / windows / desktop / aa363244 . aspx <nl> + 	 	 	 DEV _ BROADCAST _ DEVICEINTERFACE bdif = new DEV _ BROADCAST _ DEVICEINTERFACE ( bhdr . getPointer ( ) ) ; <nl> + 	 	 	 System . out . println ( " BROADCAST _ DEVICEINTERFACE : " + action ) ; <nl> + 	 	 	 System . out . println ( " dbcc _ devicetype : " + bdif . dbcc _ devicetype ) ; <nl> + 	 	 	 System . out . println ( " dbcc _ name : " + bdif . getDbcc _ name ( ) ) ; <nl> + 	 	 	 System . out . println ( " dbcc _ classguid : " <nl> + 	 	 	 	 	 + bdif . dbcc _ classguid . toGuidString ( ) ) ; <nl> + 	 	 	 break ; <nl> + 	 	 } <nl> + 	 	 case DBT . DBT _ DEVTYP _ HANDLE : { <nl> + 	 	 	 / / see http : / / msdn . microsoft . com / en - us / library / windows / desktop / aa363245 . aspx <nl> + 	 	 	 DEV _ BROADCAST _ HANDLE bhd = new DEV _ BROADCAST _ HANDLE ( bhdr . getPointer ( ) ) ; <nl> + 	 	 	 System . out . println ( " BROADCAST _ HANDLE : " + action ) ; <nl> + 	 	 	 break ; <nl> + 	 	 } <nl> + 	 	 case DBT . DBT _ DEVTYP _ OEM : { <nl> + 	 	 	 / / see http : / / msdn . microsoft . com / en - us / library / windows / desktop / aa363247 . aspx <nl> + 	 	 	 DEV _ BROADCAST _ OEM boem = new DEV _ BROADCAST _ OEM ( bhdr . getPointer ( ) ) ; <nl> + 	 	 	 System . out . println ( " BROADCAST _ OEM : " + action ) ; <nl> 	 	 	 break ; <nl> - 	 	 case DBT . DBT _ DEVICEREMOVECOMPLETE : <nl> - 	 	 	 System . out . println ( " Message DBT _ DEVICEREMOVECOMPLETE " ) ; <nl> + 	 	 } <nl> + 	 	 case DBT . DBT _ DEVTYP _ PORT : { <nl> + 	 	 	 / / see http : / / msdn . microsoft . com / en - us / library / windows / desktop / aa363248 . aspx <nl> + 	 	 	 DEV _ BROADCAST _ PORT bpt = new DEV _ BROADCAST _ PORT ( bhdr . getPointer ( ) ) ; <nl> + 	 	 	 System . out . println ( " BROADCAST _ PORT : " + action ) ; <nl> 	 	 	 break ; <nl> - 	 	 case DBT . DBT _ DEVNODES _ CHANGED : <nl> - 	 	 	 System . out . println ( " Message DBT _ DEVNODES _ CHANGED " ) ; <nl> + 	 	 } <nl> + 	 	 case DBT . DBT _ DEVTYP _ VOLUME : { <nl> + 	 	 	 / / see http : / / msdn . microsoft . com / en - us / library / windows / desktop / aa363249 . aspx <nl> + 	 	 	 DEV _ BROADCAST _ VOLUME bvl = new DEV _ BROADCAST _ VOLUME ( bhdr . getPointer ( ) ) ; <nl> + 	 	 	 int logicalDriveAffected = bvl . dbcv _ unitmask ; <nl> + 	 	 	 short flag = bvl . dbcv _ flags ; <nl> + 	 	 	 boolean isMediaNotPhysical = 0 ! = ( flag & 1 / * DBT . DBTF _ MEDIA * / ) ; <nl> + 	 	 	 boolean isNet = 0 ! = ( flag & 2 / * DBT . DBTF _ NET * / ) ; <nl> + 	 	 	 System . out . println ( action ) ; <nl> + 	 	 	 int driveLetterIndex = 0 ; <nl> + 	 	 	 while ( logicalDriveAffected ! = 0 ) { <nl> + 	 	 	 	 if ( 0 ! = ( logicalDriveAffected & 1 ) ) { <nl> + 	 	 	 	 	 System . out . println ( " Logical Drive Letter : " + <nl> + 	 	 	 	 	 	 ( ( char ) ( ' A ' + driveLetterIndex ) ) ) ; <nl> + 	 	 	 	 } <nl> + 	 	 	 	 logicalDriveAffected > > > = 1 ; <nl> + 	 	 	 	 driveLetterIndex + + ; <nl> + 	 	 	 } <nl> + 	 	 	 System . out . println ( " isMediaNotPhysical : " + isMediaNotPhysical ) ; <nl> + 	 	 	 System . out . println ( " isNet : " + isNet ) ; <nl> 	 	 	 break ; <nl> + 	 	 } <nl> 	 	 default : <nl> - 	 	 	 System . out <nl> - 	 	 	 	 	 . println ( " Message WM _ DEVICECHANGE message received , value unhandled . " ) ; <nl> + 	 	 	 return null ; <nl> 	 	 } <nl> + 	 	 / / return TRUE means processed message for this wParam . <nl> + 	 	 / / see http : / / msdn . microsoft . com / en - us / library / windows / desktop / aa363205 . aspx <nl> + 	 	 / / see http : / / msdn . microsoft . com / en - us / library / windows / desktop / aa363208 . aspx <nl> + 	 	 return new LRESULT ( 1 ) ; <nl> + 	 } <nl> + <nl> + 	 protected LRESULT onDeviceChangeArrival ( LPARAM lParam ) { <nl> + 	 	 return onDeviceChangeArrivalOrRemoveComplete ( lParam , " Arrival " ) ; <nl> + 	 } <nl> + <nl> + 	 protected LRESULT onDeviceChangeRemoveComplete ( LPARAM lParam ) { <nl> + 	 	 return onDeviceChangeArrivalOrRemoveComplete ( lParam , " Remove Complete " ) ; <nl> + 	 } <nl> + <nl> + 	 protected LRESULT onDeviceChangeNodesChanged ( ) { <nl> + 	 	 System . out . println ( " Message DBT _ DEVNODES _ CHANGED " ) ; <nl> + 	 	 / / return TRUE means processed message for this wParam . <nl> + 	 	 / / see http : / / msdn . microsoft . com / en - us / library / windows / desktop / aa363211 . aspx <nl> + 	 	 return new LRESULT ( 1 ) ; <nl> 	 } <nl> <nl> 	 / * *
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8f80852 . . 7e7bb25 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 15 , 6 + 15 , 7 @ @ Features <nl> * [ # 101 ] ( https : / / github . com / twall / jna / issues / 101 ) : Modify ` com . sun . jna . platform . win32 . Advapi32Util . registryGet * ` API to support ` KEY _ WOW64 ` option - [ @ falldog ] ( https : / / github . com / falldog ) . <nl> * [ # 271 ] ( https : / / github . com / twall / jna / pull / 271 ) : Added ` com . sun . jna . platform . win32 . Gdi32 . ChoosePixelFormat ` and ` SetPixelFormat ` - [ @ kc7bfi ] ( https : / / github . com / kc7bfi ) . <nl> * [ # 271 ] ( https : / / github . com / twall / jna / pull / 271 ) : Added ` com . sun . jna . platform . win32 . OpenGL32 ` , ` OpenGL32Util ` and ` WinOpenGL ` - [ @ kc7bfi ] ( https : / / github . com / kc7bfi ) . <nl> + * [ # 250 ] ( https : / / github . com / twall / jna / pull / 250 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . GetPrivateProfileSection ` , ` GetPrivateProfileSectionNames ` and ` WritePrivateProfileSection ` and corresponding ` Kernel32Util ` helpers - [ @ quipsy - karg ] ( https : / / github . com / quipsy - karg ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index 156544e . . 755d90c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 1981 , 4 + 1981 , 65 @ @ public interface Kernel32 extends WinNT { <nl> * / <nl> boolean WritePrivateProfileString ( String lpAppName , String lpKeyName , <nl> String lpString , String lpFileName ) ; <nl> + <nl> + / * * <nl> + * Retrieves all the keys and values for the specified section of an initialization file . <nl> + * <nl> + * < p > <nl> + * Each string has the following format : { @ code key = string } . <nl> + * < / p > <nl> + * < p > <nl> + * This operation is atomic ; no updates to the specified initialization file are allowed while the key name and value pairs for the section are being copied <nl> + * to the buffer pointed to by the { @ code lpReturnedString } parameter . <nl> + * < / p > <nl> + * <nl> + * @ param lpAppName <nl> + * The name of the section in the initialization file . <nl> + * @ param lpReturnedString <nl> + * A buffer that receives the key name and value pairs associated with the named section . The buffer is filled with one or more { @ code null } <nl> + * - terminated strings ; the last string is followed by a second { @ code null } character . <nl> + * @ param nSize <nl> + * The size of the buffer pointed to by the { @ code lpReturnedString } parameter , in characters . The maximum profile section size is 32 , 767 <nl> + * characters . <nl> + * @ param lpFileName <nl> + * The name of the initialization file . If this parameter does not contain a full path to the file , the system searches for the file in the <nl> + * Windows directory . <nl> + * @ return The number of characters copied to the buffer , not including the terminating null character . If the buffer is not large enough to contain all the <nl> + * key name and value pairs associated with the named section , the return value is equal to { @ code nSize } minus two . <nl> + * / <nl> + DWORD GetPrivateProfileSection ( String lpAppName , char [ ] lpReturnedString , DWORD nSize , String lpFileName ) ; <nl> + <nl> + / * * <nl> + * Retrieves the names of all sections in an initialization file . <nl> + * < p > <nl> + * This operation is atomic ; no updates to the initialization file are allowed while the section names are being copied to the buffer . <nl> + * < / p > <nl> + * <nl> + * @ param lpszReturnBuffer <nl> + * A pointer to a buffer that receives the section names associated with the named file . The buffer is filled with one or more { @ code null } <nl> + * - terminated strings ; the last string is followed by a second { @ code null } character . <nl> + * @ param nSize <nl> + * size of the buffer pointed to by the { @ code lpszReturnBuffer } parameter , in characters . <nl> + * @ param lpFileName <nl> + * The name of the initialization file . If this parameter is { @ code NULL } , the function searches the Win . ini file . If this parameter does not <nl> + * contain a full path to the file , the system searches for the file in the Windows directory . <nl> + * @ return The return value specifies the number of characters copied to the specified buffer , not including the terminating { @ code null } character . If the <nl> + * buffer is not large enough to contain all the section names associated with the specified initialization file , the return value is equal to the <nl> + * size specified by { @ code nSize } minus two . <nl> + * / <nl> + DWORD GetPrivateProfileSectionNames ( char [ ] lpszReturnBuffer , DWORD nSize , String lpFileName ) ; <nl> + <nl> + / * * <nl> + * @ param lpAppName <nl> + * The name of the section in which data is written . This section name is typically the name of the calling application . <nl> + * @ param lpString <nl> + * The new key names and associated values that are to be written to the named section . This string is limited to 65 , 535 bytes . Must be filled <nl> + * with zero or many { @ code null } - terminated strings of the form { @ code key = value } , appended by an additional { @ code null } byte to terminate the <nl> + * list . <nl> + * @ param lpFileName <nl> + * The name of the initialization file . If this parameter does not contain a full path for the file , the function searches the Windows directory <nl> + * for the file . If the file does not exist and lpFileName does not contain a full path , the function creates the file in the Windows directory . <nl> + * @ return If the function succeeds , the return value is nonzero . If the function fails , the return value is zero . <nl> + * / <nl> + boolean WritePrivateProfileSection ( String lpAppName , String lpString , String lpFileName ) ; <nl> } <nl> \ No newline at end of file <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> index 29ca050 . . aa0f889 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> @ @ - 362 , 4 + 362 , 67 @ @ public abstract class Kernel32Util implements WinDef { <nl> return ( WinNT . SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION [ ] ) firstInformation <nl> . toArray ( new WinNT . SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION [ returnedStructCount ] ) ; <nl> } <nl> + <nl> + / * * <nl> + * Retrieves all the keys and values for the specified section of an initialization file . <nl> + * <nl> + * < p > <nl> + * Each string has the following format : { @ code key = string } . <nl> + * < / p > <nl> + * < p > <nl> + * This operation is atomic ; no updates to the specified initialization file are allowed while this method is executed . <nl> + * < / p > <nl> + * <nl> + * @ param appName <nl> + * The name of the section in the initialization file . <nl> + * @ param fileName <nl> + * The name of the initialization file . If this parameter does not contain a full path to the file , the system searches for the file in the <nl> + * Windows directory . <nl> + * @ return The key name and value pairs associated with the named section . <nl> + * / <nl> + public static final String [ ] getPrivateProfileSection ( final String appName , final String fileName ) { <nl> + final char buffer [ ] = new char [ 32768 ] ; / / Maximum section size according to MSDN ( http : / / msdn . microsoft . com / en - us / library / windows / desktop / ms724348 ( v = vs . 85 ) . aspx ) <nl> + if ( Kernel32 . INSTANCE . GetPrivateProfileSection ( appName , buffer , new DWORD ( buffer . length ) , fileName ) . intValue ( ) = = 0 ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + return new String ( buffer ) . split ( " \ 0 " ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Retrieves the names of all sections in an initialization file . <nl> + * < p > <nl> + * This operation is atomic ; no updates to the initialization file are allowed while this method is executed . <nl> + * < / p > <nl> + * <nl> + * @ param fileName <nl> + * The name of the initialization file . If this parameter is { @ code NULL } , the function searches the Win . ini file . If this parameter does not <nl> + * contain a full path to the file , the system searches for the file in the Windows directory . <nl> + * @ return the section names associated with the named file . <nl> + * / <nl> + public static final String [ ] getPrivateProfileSectionNames ( final String fileName ) { <nl> + final char buffer [ ] = new char [ 65536 ] ; / / Maximum INI file size according to MSDN ( http : / / support . microsoft . com / kb / 78346 ) <nl> + if ( Kernel32 . INSTANCE . GetPrivateProfileSectionNames ( buffer , new DWORD ( buffer . length ) , fileName ) . intValue ( ) = = 0 ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + return new String ( buffer ) . split ( " \ 0 " ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ param appName <nl> + * The name of the section in which data is written . This section name is typically the name of the calling application . <nl> + * @ param strings <nl> + * The new key names and associated values that are to be written to the named section . Each entry must be of the form { @ code key = value } . <nl> + * @ param fileName <nl> + * The name of the initialization file . If this parameter does not contain a full path for the file , the function searches the Windows directory <nl> + * for the file . If the file does not exist and lpFileName does not contain a full path , the function creates the file in the Windows directory . <nl> + * / <nl> + public static final void writePrivateProfileSection ( final String appName , final String [ ] strings , final String fileName ) { <nl> + final StringBuilder buffer = new StringBuilder ( ) ; <nl> + for ( final String string : strings ) <nl> + buffer . append ( string ) . append ( ' \ 0 ' ) ; <nl> + buffer . append ( ' \ 0 ' ) ; <nl> + if ( ! Kernel32 . INSTANCE . WritePrivateProfileSection ( appName , buffer . toString ( ) , fileName ) ) { <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index 91d83de . . 81e913b 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 531 , 4 + 531 , 66 @ @ public class Kernel32Test extends TestCase { <nl> assertEquals ( reader . readLine ( ) , null ) ; <nl> reader . close ( ) ; <nl> } <nl> + <nl> + public final void testGetPrivateProfileSection ( ) throws IOException { <nl> + final File tmp = File . createTempFile ( " testGetPrivateProfileSection " , " . ini " ) ; <nl> + tmp . deleteOnExit ( ) ; <nl> + <nl> + final PrintWriter writer = new PrintWriter ( new BufferedWriter ( new FileWriter ( tmp ) ) ) ; <nl> + try { <nl> + writer . println ( " [ X ] " ) ; <nl> + writer . println ( " A = 1 " ) ; <nl> + writer . println ( " B = X " ) ; <nl> + } finally { <nl> + writer . close ( ) ; <nl> + } <nl> + <nl> + final char [ ] buffer = new char [ 9 ] ; <nl> + final DWORD len = Kernel32 . INSTANCE . GetPrivateProfileSection ( " X " , buffer , new DWORD ( buffer . length ) , tmp . getCanonicalPath ( ) ) ; <nl> + <nl> + assertEquals ( len . intValue ( ) , 7 ) ; <nl> + assertEquals ( new String ( buffer ) , " A = 1 \ 0B = X \ 0 \ 0 " ) ; <nl> + } <nl> + <nl> + public final void testGetPrivateProfileSectionNames ( ) throws IOException { <nl> + final File tmp = File . createTempFile ( " testGetPrivateProfileSectionNames " , " . ini " ) ; <nl> + tmp . deleteOnExit ( ) ; <nl> + <nl> + final PrintWriter writer = new PrintWriter ( new BufferedWriter ( new FileWriter ( tmp ) ) ) ; <nl> + try { <nl> + writer . println ( " [ S1 ] " ) ; <nl> + writer . println ( " [ S2 ] " ) ; <nl> + } finally { <nl> + writer . close ( ) ; <nl> + } <nl> + <nl> + final char [ ] buffer = new char [ 7 ] ; <nl> + final DWORD len = Kernel32 . INSTANCE . GetPrivateProfileSectionNames ( buffer , new DWORD ( buffer . length ) , tmp . getCanonicalPath ( ) ) ; <nl> + assertEquals ( len . intValue ( ) , 5 ) ; <nl> + assertEquals ( new String ( buffer ) , " S1 \ 0S2 \ 0 \ 0 " ) ; <nl> + } <nl> + <nl> + public final void testWritePrivateProfileSection ( ) throws IOException { <nl> + final File tmp = File . createTempFile ( " testWritePrivateProfileSection " , " . ini " ) ; <nl> + tmp . deleteOnExit ( ) ; <nl> + <nl> + final PrintWriter writer = new PrintWriter ( new BufferedWriter ( new FileWriter ( tmp ) ) ) ; <nl> + try { <nl> + writer . println ( " [ S1 ] " ) ; <nl> + writer . println ( " A = 1 " ) ; <nl> + writer . println ( " B = X " ) ; <nl> + } finally { <nl> + writer . close ( ) ; <nl> + } <nl> + <nl> + final boolean result = Kernel32 . INSTANCE . WritePrivateProfileSection ( " S1 " , " A = 3 \ 0E = Z \ 0 \ 0 " , tmp . getCanonicalPath ( ) ) ; <nl> + assertTrue ( result ) ; <nl> + <nl> + final BufferedReader reader = new BufferedReader ( new FileReader ( tmp ) ) ; <nl> + assertEquals ( reader . readLine ( ) , " [ S1 ] " ) ; <nl> + assertTrue ( reader . readLine ( ) . matches ( " A \ \ s * = \ \ s * 3 " ) ) ; <nl> + assertTrue ( reader . readLine ( ) . matches ( " E \ \ s * = \ \ s * Z " ) ) ; <nl> + reader . close ( ) ; <nl> + } <nl> + <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32UtilTest . java <nl> index a31a947 . . 3bf889d 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32UtilTest . java <nl> @ @ - 180 , 4 + 180 , 76 @ @ public class Kernel32UtilTest extends TestCase { <nl> assertEquals ( reader . readLine ( ) , null ) ; <nl> reader . close ( ) ; <nl> } <nl> + <nl> + public final void testGetPrivateProfileSection ( ) throws IOException { <nl> + final File tmp = File . createTempFile ( " testGetPrivateProfileSection " , " . ini " ) ; <nl> + tmp . deleteOnExit ( ) ; <nl> + <nl> + final PrintWriter writer = new PrintWriter ( new BufferedWriter ( new FileWriter ( tmp ) ) ) ; <nl> + try { <nl> + writer . println ( " [ X ] " ) ; <nl> + writer . println ( " A = 1 " ) ; <nl> + writer . println ( " foo = bar " ) ; <nl> + } finally { <nl> + writer . close ( ) ; <nl> + } <nl> + <nl> + final String [ ] lines = Kernel32Util . getPrivateProfileSection ( " X " , tmp . getCanonicalPath ( ) ) ; <nl> + assertEquals ( lines . length , 2 ) ; <nl> + assertEquals ( lines [ 0 ] , " A = 1 " ) ; <nl> + assertEquals ( lines [ 1 ] , " foo = bar " ) ; <nl> + } <nl> + <nl> + public final void testGetPrivateProfileSectionNames ( ) throws IOException { <nl> + final File tmp = File . createTempFile ( " testGetPrivateProfileSectionNames " , " ini " ) ; <nl> + tmp . deleteOnExit ( ) ; <nl> + <nl> + final PrintWriter writer = new PrintWriter ( new BufferedWriter ( new FileWriter ( tmp ) ) ) ; <nl> + try { <nl> + writer . println ( " [ S1 ] " ) ; <nl> + writer . println ( " A = 1 " ) ; <nl> + writer . println ( " B = X " ) ; <nl> + writer . println ( " [ S2 ] " ) ; <nl> + writer . println ( " C = 2 " ) ; <nl> + writer . println ( " D = Y " ) ; <nl> + } finally { <nl> + writer . close ( ) ; <nl> + } <nl> + <nl> + String [ ] sectionNames = Kernel32Util . getPrivateProfileSectionNames ( tmp . getCanonicalPath ( ) ) ; <nl> + assertEquals ( sectionNames . length , 2 ) ; <nl> + assertEquals ( sectionNames [ 0 ] , " S1 " ) ; <nl> + assertEquals ( sectionNames [ 1 ] , " S2 " ) ; <nl> + } <nl> + <nl> + public final void testWritePrivateProfileSection ( ) throws IOException { <nl> + final File tmp = File . createTempFile ( " testWritePrivateProfileSecion " , " ini " ) ; <nl> + tmp . deleteOnExit ( ) ; <nl> + <nl> + final PrintWriter writer = new PrintWriter ( new BufferedWriter ( new FileWriter ( tmp ) ) ) ; <nl> + try { <nl> + writer . println ( " [ S1 ] " ) ; <nl> + writer . println ( " A = 1 " ) ; <nl> + writer . println ( " B = X " ) ; <nl> + writer . println ( " [ S2 ] " ) ; <nl> + writer . println ( " C = 2 " ) ; <nl> + writer . println ( " foo = bar " ) ; <nl> + } finally { <nl> + writer . close ( ) ; <nl> + } <nl> + <nl> + Kernel32Util . writePrivateProfileSection ( " S1 " , new String [ ] { " A = 3 " , " E = Z " } , tmp . getCanonicalPath ( ) ) ; <nl> + <nl> + final BufferedReader reader = new BufferedReader ( new FileReader ( tmp ) ) ; <nl> + try { <nl> + assertEquals ( reader . readLine ( ) , " [ S1 ] " ) ; <nl> + assertEquals ( reader . readLine ( ) , " A = 3 " ) ; <nl> + assertEquals ( reader . readLine ( ) , " E = Z " ) ; <nl> + assertEquals ( reader . readLine ( ) , " [ S2 ] " ) ; <nl> + assertEquals ( reader . readLine ( ) , " C = 2 " ) ; <nl> + assertEquals ( reader . readLine ( ) , " foo = bar " ) ; <nl> + } finally { <nl> + reader . close ( ) ; <nl> + } <nl> + } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index acd5f9f . . 8f80852 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - ﻿ NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and ASL ( see LICENSE ) . <nl> + NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and ASL ( see LICENSE ) . <nl> <nl> NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> <nl> @ @ - 13 , 6 + 13 , 8 @ @ Features <nl> * [ # 226 ] ( https : / / github . com / twall / jna / issues / 226 ) : Added OSGI information to jna - platform . jar - [ @ brettwooldridge ] ( https : / / github . com / brettwooldridge ) . <nl> * [ # 267 ] ( https : / / github . com / twall / jna / pull / 267 ) : Added support for Windows RAS32 API , ` com . sun . jna . platform . win32 . Rasapi32 ` and ` Rasapi32Util ` - [ @ kc7bfi ] ( https : / / github . com / kc7bfi ) . <nl> * [ # 101 ] ( https : / / github . com / twall / jna / issues / 101 ) : Modify ` com . sun . jna . platform . win32 . Advapi32Util . registryGet * ` API to support ` KEY _ WOW64 ` option - [ @ falldog ] ( https : / / github . com / falldog ) . <nl> + * [ # 271 ] ( https : / / github . com / twall / jna / pull / 271 ) : Added ` com . sun . jna . platform . win32 . Gdi32 . ChoosePixelFormat ` and ` SetPixelFormat ` - [ @ kc7bfi ] ( https : / / github . com / kc7bfi ) . <nl> + * [ # 271 ] ( https : / / github . com / twall / jna / pull / 271 ) : Added ` com . sun . jna . platform . win32 . OpenGL32 ` , ` OpenGL32Util ` and ` WinOpenGL ` - [ @ kc7bfi ] ( https : / / github . com / kc7bfi ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> @ @ - 693 , 3 + 695 , 4 @ @ Bug Fixes <nl> * Properly handle NULL when the return value is a Structure <nl> * Proper conversion to wchar _ t on linux <nl> * Copy full length of Java strings to C strings instead of stopping when a NUL character is encountered <nl> + <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / GDI32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / GDI32 . java <nl> index 4173820 . . 2924084 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / GDI32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / GDI32 . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ import com . sun . jna . platform . win32 . WinDef . HDC ; <nl> import com . sun . jna . platform . win32 . WinDef . HRGN ; <nl> import com . sun . jna . platform . win32 . WinGDI . BITMAPINFO ; <nl> import com . sun . jna . platform . win32 . WinGDI . BITMAPINFOHEADER ; <nl> + import com . sun . jna . platform . win32 . WinGDI . PIXELFORMATDESCRIPTOR ; <nl> import com . sun . jna . platform . win32 . WinGDI . RGNDATA ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> @ @ - 313 , 4 + 314 , 33 @ @ public interface GDI32 extends StdCallLibrary { <nl> * BITMAPINFO } structure . <nl> * / <nl> int GetDIBits ( HDC hdc , HBITMAP hbmp , int uStartScan , int cScanLines , Pointer lpvBits , BITMAPINFO lpbi , int uUsage ) ; <nl> + <nl> + / * * <nl> + * The ChoosePixelFormat function attempts to match an appropriate pixel format supported <nl> + * by a device context to a given pixel format specification . <nl> + * <nl> + * @ param hdc <nl> + * Specifies the device context that the function examines to determine the best <nl> + * match for the pixel format descriptor pointed to by ppfd . <nl> + * @ param ppfd <nl> + * Pointer to a PIXELFORMATDESCRIPTOR structure that specifies the requested pixel format . <nl> + * @ return If the function succeeds , the return value is a pixel format index ( one - based ) that <nl> + * is the closest match to the given pixel format descriptor . <nl> + * / <nl> + public int ChoosePixelFormat ( HDC hdc , PIXELFORMATDESCRIPTOR . ByReference ppfd ) ; <nl> + <nl> + / * * <nl> + * The SetPixelFormat function sets the pixel format of the specified device context to the <nl> + * format specified by the iPixelFormat index . <nl> + * <nl> + * @ param hdc <nl> + * Specifies the device context whose pixel format the function attempts to set . <nl> + * @ param iPixelFormat <nl> + * Index that identifies the pixel format to set . The various pixel formats supported <nl> + * by a device context are identified by one - based indexes . <nl> + * @ param ppfd <nl> + * Pointer to a PIXELFORMATDESCRIPTOR structure that contains the logical pixel format specification . <nl> + * @ return true if successful <nl> + * / <nl> + public boolean SetPixelFormat ( HDC hdc , int iPixelFormat , PIXELFORMATDESCRIPTOR . ByReference ppfd ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OpenGL32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / OpenGL32 . java <nl> new file mode 100644 <nl> index 0000000 . . 6ae66f6 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OpenGL32 . java <nl> @ @ - 0 , 0 + 1 , 86 @ @ <nl> + / * Copyright ( c ) 2011 Timothy Wall , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . platform . win32 . WinDef . HDC ; <nl> + import com . sun . jna . platform . win32 . WinOpenGL . HGLRC ; <nl> + import com . sun . jna . win32 . StdCallLibrary ; <nl> + <nl> + / * * <nl> + * opengl32 . dll Interface . <nl> + * / <nl> + public interface OpenGL32 extends StdCallLibrary { <nl> + OpenGL32 INSTANCE = ( OpenGL32 ) Native . loadLibrary ( " opengl32 " , OpenGL32 . class ) ; <nl> + <nl> + / * * <nl> + * The glGetString function returns a string describing the current OpenGL connection . <nl> + * <nl> + * @ param name <nl> + * One of the following symbolic constants . <nl> + * @ return The glGetString function returns a pointer to a static string describing some aspect of the current OpenGL connection . <nl> + * / <nl> + public String glGetString ( int name ) ; <nl> + <nl> + / * * <nl> + * The wglCreateContext function creates a new OpenGL rendering context , which is suitable for drawing on the device <nl> + * referenced by hdc . The rendering context has the same pixel format as the device context . <nl> + * <nl> + * @ param hdc <nl> + * Handle to a device context for which the function creates a suitable OpenGL rendering context . <nl> + * @ return handle to an OpenGL rendering context <nl> + * / <nl> + public HGLRC wglCreateContext ( HDC windowDC ) ; <nl> + <nl> + / * * <nl> + * The wglGetCurrentContext function obtains a handle to the current OpenGL rendering context of the calling thread . <nl> + * <nl> + * @ return If the calling thread has a current OpenGL rendering context , wglGetCurrentContext returns a <nl> + * handle to that rendering context . Otherwise , the return value is NULL . <nl> + * / <nl> + public HGLRC wglGetCurrentContext ( ) ; <nl> + <nl> + / * * <nl> + * The wglMakeCurrent function makes a specified OpenGL rendering context the calling thread ' s current rendering <nl> + * context . All subsequent OpenGL calls made by the thread are drawn on the device identified by hdc . <nl> + * <nl> + * @ param hdc <nl> + * Handle to a device context . Subsequent OpenGL calls made by the calling thread are drawn on the <nl> + * device identified by hdc . <nl> + * @ param hglrc <nl> + * Handle to an OpenGL rendering context that the function sets as the calling thread ' s rendering context . <nl> + * @ return true if successful <nl> + * / <nl> + public boolean wglMakeCurrent ( HDC windowDC , HGLRC hglrc ) ; <nl> + <nl> + / * * <nl> + * The wglDeleteContext function deletes a specified OpenGL rendering context . <nl> + * <nl> + * @ param hglrc <nl> + * Handle to an OpenGL rendering context that the function will delete . <nl> + * @ return true if successful <nl> + * / <nl> + public boolean wglDeleteContext ( HGLRC hglrc ) ; <nl> + <nl> + / * * <nl> + * The wglGetProcAddress function returns the address of an OpenGL extension function for use with the <nl> + * current OpenGL rendering context . <nl> + * <nl> + * @ param lpszProc <nl> + * Points to a null - terminated string that is the name of the extension function . <nl> + * The name of the extension function must be identical to a corresponding function implemented by OpenGL . <nl> + * @ return When the function succeeds , the return value is the address of the extension function . <nl> + * / <nl> + public Pointer wglGetProcAddress ( String lpszProc ) ; <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OpenGL32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / OpenGL32Util . java <nl> new file mode 100644 <nl> index 0000000 . . 1bf9b30 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OpenGL32Util . java <nl> @ @ - 0 , 0 + 1 , 81 @ @ <nl> + / * Copyright ( c ) 2011 Timothy Wall , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Function ; <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . platform . win32 . WinDef . HDC ; <nl> + import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> + import com . sun . jna . platform . win32 . WinGDI . PIXELFORMATDESCRIPTOR ; <nl> + import com . sun . jna . platform . win32 . WinOpenGL . HGLRC ; <nl> + import com . sun . jna . platform . win32 . WinOpenGL . HGPUNVByReference ; <nl> + <nl> + / * * <nl> + * opengl32 utility API . <nl> + * / <nl> + public abstract class OpenGL32Util { <nl> + <nl> + / * * <nl> + * Return a procedure function pointer <nl> + * @ param procName the procedure name <nl> + * @ return the function <nl> + * / <nl> + public static Function wglGetProcAddress ( String procName ) { <nl> + Pointer funcPointer = OpenGL32 . INSTANCE . wglGetProcAddress ( " wglEnumGpusNV " ) ; <nl> + return ( funcPointer = = null ) ? null : Function . getFunction ( funcPointer ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Return a RAS connection by name <nl> + * @ param connName the connection name <nl> + * @ return the RAS connection structure <nl> + * / <nl> + public static int countGpusNV ( ) { <nl> + / / create a dummy window <nl> + HWND hWnd = User32Util . createWindow ( " Message " , null , 0 , 0 , 0 , 0 , 0 , null , null , null , null ) ; <nl> + HDC hdc = User32 . INSTANCE . GetDC ( hWnd ) ; <nl> + <nl> + / / set a compatible pixel format <nl> + PIXELFORMATDESCRIPTOR . ByReference pfd = new PIXELFORMATDESCRIPTOR . ByReference ( ) ; <nl> + pfd . nVersion = 1 ; <nl> + pfd . dwFlags = WinGDI . PFD _ DRAW _ TO _ WINDOW | WinGDI . PFD _ SUPPORT _ OPENGL | WinGDI . PFD _ DOUBLEBUFFER ; <nl> + pfd . iPixelType = WinGDI . PFD _ TYPE _ RGBA ; <nl> + pfd . cColorBits = 24 ; <nl> + pfd . cDepthBits = 16 ; <nl> + pfd . iLayerType = WinGDI . PFD _ MAIN _ PLANE ; <nl> + GDI32 . INSTANCE . SetPixelFormat ( hdc , GDI32 . INSTANCE . ChoosePixelFormat ( hdc , pfd ) , pfd ) ; <nl> + <nl> + / / create the OpenGL context to get function address <nl> + HGLRC hGLRC = OpenGL32 . INSTANCE . wglCreateContext ( hdc ) ; <nl> + OpenGL32 . INSTANCE . wglMakeCurrent ( hdc , hGLRC ) ; <nl> + Pointer funcPointer = OpenGL32 . INSTANCE . wglGetProcAddress ( " wglEnumGpusNV " ) ; <nl> + Function fncEnumGpusNV = ( funcPointer = = null ) ? null : Function . getFunction ( funcPointer ) ; <nl> + OpenGL32 . INSTANCE . wglDeleteContext ( hGLRC ) ; <nl> + <nl> + / / destroy the window <nl> + User32 . INSTANCE . ReleaseDC ( hWnd , hdc ) ; <nl> + User32Util . destroyWindow ( hWnd ) ; <nl> + <nl> + / / abort if the nVidia extensions are not present <nl> + if ( fncEnumGpusNV = = null ) return 0 ; <nl> + <nl> + / / enumerate nVidia adapters <nl> + HGPUNVByReference hGPU = new HGPUNVByReference ( ) ; <nl> + for ( int i = 0 ; i < 16 ; i + + ) { <nl> + Boolean ok = ( Boolean ) fncEnumGpusNV . invoke ( Boolean . class , new Object [ ] { Integer . valueOf ( i ) , hGPU , } ) ; <nl> + if ( ! ok . booleanValue ( ) ) return i ; <nl> + } <nl> + <nl> + return 0 ; <nl> + } <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinGDI . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinGDI . java <nl> index c8bc6df . . b8855ce 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinGDI . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinGDI . java <nl> @ @ - 15 , 6 + 15 , 7 @ @ package com . sun . jna . platform . win32 ; <nl> import java . util . Arrays ; <nl> import java . util . List ; <nl> <nl> + import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> import com . sun . jna . platform . win32 . WinDef . RECT ; <nl> import com . sun . jna . win32 . StdCallLibrary ; <nl> @ @ - 77 , 6 + 78 , 28 @ @ public interface WinGDI extends StdCallLibrary { <nl> public int BI _ JPEG = 4 ; <nl> public int BI _ PNG = 5 ; <nl> <nl> + public final int PFD _ TYPE _ RGBA = 0 ; <nl> + public final int PFD _ TYPE _ COLORINDEX = 1 ; <nl> + <nl> + public final int PFD _ MAIN _ PLANE = 0 ; <nl> + public final int PFD _ OVERLAY _ PLANE = 1 ; <nl> + public final int PFD _ UNDERLAY _ PLANE = ( - 1 ) ; <nl> + <nl> + public final int PFD _ DOUBLEBUFFER = 0x00000001 ; <nl> + public final int PFD _ STEREO = 0x00000002 ; <nl> + public final int PFD _ DRAW _ TO _ WINDOW = 0x00000004 ; <nl> + public final int PFD _ DRAW _ TO _ BITMAP = 0x00000008 ; <nl> + public final int PFD _ SUPPORT _ GDI = 0x00000010 ; <nl> + public final int PFD _ SUPPORT _ OPENGL = 0x00000020 ; <nl> + public final int PFD _ GENERIC _ FORMAT = 0x00000040 ; <nl> + public final int PFD _ NEED _ PALETTE = 0x00000080 ; <nl> + public final int PFD _ NEED _ SYSTEM _ PALETTE = 0x00000100 ; <nl> + public final int PFD _ SWAP _ EXCHANGE = 0x00000200 ; <nl> + public final int PFD _ SWAP _ COPY = 0x00000400 ; <nl> + public final int PFD _ SWAP _ LAYER _ BUFFERS = 0x00000800 ; <nl> + public final int PFD _ GENERIC _ ACCELERATED = 0x00001000 ; <nl> + public final int PFD _ SUPPORT _ DIRECTDRAW = 0x00002000 ; <nl> + <nl> public class BITMAPINFOHEADER extends Structure { <nl> public int biSize = size ( ) ; <nl> public int biWidth ; <nl> @ @ - 118 , 4 + 141 , 136 @ @ public interface WinGDI extends StdCallLibrary { <nl> <nl> public int DIB _ RGB _ COLORS = 0 ; <nl> public int DIB _ PAL _ COLORS = 1 ; <nl> + <nl> + / * * <nl> + * The PIXELFORMATDESCRIPTOR structure describes the pixel format of a drawing surface . <nl> + * / <nl> + public static class PIXELFORMATDESCRIPTOR extends Structure { <nl> + public PIXELFORMATDESCRIPTOR ( ) { <nl> + super ( ) ; <nl> + nSize = ( short ) size ( ) ; <nl> + } <nl> + <nl> + public PIXELFORMATDESCRIPTOR ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public static class ByReference extends PIXELFORMATDESCRIPTOR implements Structure . ByReference { <nl> + } <nl> + <nl> + / * * <nl> + * Specifies the size of this data structure . This value should be set to sizeof ( PIXELFORMATDESCRIPTOR ) . <nl> + * / <nl> + public short nSize ; <nl> + / * * <nl> + * Specifies the version of this data structure . This value should be set to 1 . <nl> + * / <nl> + public short nVersion ; <nl> + / * * <nl> + * A set of bit flags that specify properties of the pixel buffer . <nl> + * / <nl> + public int dwFlags ; <nl> + / * * <nl> + * Specifies the type of pixel data . <nl> + * / <nl> + public byte iPixelType ; <nl> + / * * <nl> + * Specifies the number of color bitplanes in each color buffer . <nl> + * / <nl> + public byte cColorBits ; <nl> + / * * <nl> + * Specifies the number of red bitplanes in each RGBA color buffer . <nl> + * / <nl> + public byte cRedBits ; <nl> + / * * <nl> + * Specifies the shift count for red bitplanes in each RGBA color buffer . <nl> + * / <nl> + public byte cRedShift ; <nl> + / * * <nl> + * Specifies the number of green bitplanes in each RGBA color buffer . <nl> + * / <nl> + public byte cGreenBits ; <nl> + / * * <nl> + * Specifies the shift count for green bitplanes in each RGBA color buffer . <nl> + * / <nl> + public byte cGreenShift ; <nl> + / * * <nl> + * Specifies the number of blue bitplanes in each RGBA color buffer . <nl> + * / <nl> + public byte cBlueBits ; <nl> + / * * <nl> + * Specifies the shift count for blue bitplanes in each RGBA color buffer . <nl> + * / <nl> + public byte cBlueShift ; <nl> + / * * <nl> + * Specifies the number of alpha bitplanes in each RGBA color buffer . Alpha bitplanes are not supported . <nl> + * / <nl> + public byte cAlphaBits ; <nl> + / * * <nl> + * Specifies the shift count for alpha bitplanes in each RGBA color buffer . Alpha bitplanes are not supported . <nl> + * / <nl> + public byte cAlphaShift ; <nl> + / * * <nl> + * Specifies the total number of bitplanes in the accumulation buffer . <nl> + * / <nl> + public byte cAccumBits ; <nl> + / * * <nl> + * Specifies the number of red bitplanes in the accumulation buffer . <nl> + * / <nl> + public byte cAccumRedBits ; <nl> + / * * <nl> + * Specifies the number of green bitplanes in the accumulation buffer . <nl> + * / <nl> + public byte cAccumGreenBits ; <nl> + / * * <nl> + * Specifies the number of blue bitplanes in the accumulation buffer . <nl> + * / <nl> + public byte cAccumBlueBits ; <nl> + / * * <nl> + * Specifies the number of alpha bitplanes in the accumulation buffer . <nl> + * / <nl> + public byte cAccumAlphaBits ; <nl> + / * * <nl> + * Specifies the depth of the depth ( z - axis ) buffer . <nl> + * / <nl> + public byte cDepthBits ; <nl> + / * * <nl> + * Specifies the depth of the stencil buffer . <nl> + * / <nl> + public byte cStencilBits ; <nl> + / * * <nl> + * Specifies the number of auxiliary buffers . Auxiliary buffers are not supported . <nl> + * / <nl> + public byte cAuxBuffers ; <nl> + / * * <nl> + * Ignored . Earlier implementations of OpenGL used this member , but it is no longer used . <nl> + * / <nl> + public byte iLayerType ; <nl> + / * * <nl> + * Specifies the number of overlay and underlay planes . <nl> + * / <nl> + public byte bReserved ; <nl> + / * * <nl> + * Ignored . Earlier implementations of OpenGL used this member , but it is no longer used . <nl> + * / <nl> + public int dwLayerMask ; <nl> + / * * <nl> + * Specifies the transparent color or index of an underlay plane . <nl> + * / <nl> + public int dwVisibleMask ; <nl> + / * * <nl> + * Ignored . Earlier implementations of OpenGL used this member , but it is no longer used . <nl> + * / <nl> + public int dwDamageMask ; <nl> + <nl> + @ SuppressWarnings ( " rawtypes " ) <nl> + @ Override <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( new String [ ] { " nSize " , " nVersion " , " dwFlags " , " iPixelType " , <nl> + " cColorBits " , " cRedBits " , " cRedShift " , " cGreenBits " , " cGreenShift " , " cBlueBits " , " cBlueShift " , " cAlphaBits " , " cAlphaShift " , <nl> + " cAccumBits " , " cAccumRedBits " , " cAccumGreenBits " , " cAccumBlueBits " , " cAccumAlphaBits " , <nl> + " cDepthBits " , " cStencilBits " , " cAuxBuffers " , " iLayerType " , " bReserved " , " dwLayerMask " , " dwVisibleMask " , " dwDamageMask " , } ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinOpenGL . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinOpenGL . java <nl> new file mode 100644 <nl> index 0000000 . . 6b77b22 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinOpenGL . java <nl> @ @ - 0 , 0 + 1 , 98 @ @ <nl> + / * Copyright ( c ) 2011 Timothy Wall , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> + import com . sun . jna . platform . win32 . WinNT . HANDLEByReference ; <nl> + import com . sun . jna . win32 . StdCallLibrary ; <nl> + <nl> + / * * <nl> + * Definitions for WinOpenGL <nl> + * / <nl> + public interface WinOpenGL extends StdCallLibrary { <nl> + <nl> + public final int GL _ VENDOR = 0x1F00 ; <nl> + public final int GL _ RENDERER = 0x1F01 ; <nl> + public final int GL _ VERSION = 0x1F02 ; <nl> + public final int GL _ EXTENSIONS = 0x1F03 ; <nl> + <nl> + / * * <nl> + * handle to an OpenGL rendering context <nl> + * / <nl> + public static class HGLRC extends HANDLE { <nl> + <nl> + / * * <nl> + * Instantiates a new HGLRC . <nl> + * / <nl> + public HGLRC ( ) { <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * Instantiates a new HGLRC . <nl> + * <nl> + * @ param p <nl> + * the p <nl> + * / <nl> + public HGLRC ( Pointer p ) { <nl> + super ( p ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * handle to an OpenGL rendering context <nl> + * / <nl> + public static class HGPUNV extends HANDLE { <nl> + <nl> + / * * <nl> + * Instantiates a new HGLRC . <nl> + * / <nl> + public HGPUNV ( ) { <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * Instantiates a new HGLRC . <nl> + * <nl> + * @ param p <nl> + * the p <nl> + * / <nl> + public HGPUNV ( Pointer p ) { <nl> + super ( p ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * handle to an OpenGL rendering context <nl> + * / <nl> + public static class HGPUNVByReference extends HANDLEByReference { <nl> + <nl> + / * * <nl> + * Instantiates a new HGLRC . <nl> + * / <nl> + public HGPUNVByReference ( ) { <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * Instantiates a new HGLRC . <nl> + * <nl> + * @ param p <nl> + * the p <nl> + * / <nl> + public HGPUNVByReference ( HGPUNV h ) { <nl> + super ( h ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinRas . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinRas . java <nl> index ff8a008 . . 13d8142 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinRas . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinRas . java <nl> @ @ - 291 , 7 + 291 , 6 @ @ public interface WinRas extends StdCallLibrary { <nl> 	 	 public RASCONN ( ) { <nl> 	 	 	 super ( ) ; <nl> 	 	 	 dwSize = size ( ) ; <nl> - 	 	 	 System . out . println ( " Size = " + dwSize ) ; <nl> 	 	 } <nl> <nl> 	 	 public RASCONN ( Pointer memory ) { <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / OpenGL32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / OpenGL32Test . java <nl> new file mode 100644 <nl> index 0000000 . . ddc4784 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / OpenGL32Test . java <nl> @ @ - 0 , 0 + 1 , 174 @ @ <nl> + / * Copyright ( c ) 2011 Timothy Wall , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import junit . framework . TestCase ; <nl> + <nl> + import com . sun . jna . platform . win32 . WinDef . HDC ; <nl> + import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> + import com . sun . jna . platform . win32 . WinGDI . PIXELFORMATDESCRIPTOR ; <nl> + import com . sun . jna . platform . win32 . WinOpenGL . HGLRC ; <nl> + <nl> + / * * <nl> + * @ author drrobison @ openroadsconsulting . com <nl> + * / <nl> + public class OpenGL32Test extends TestCase { <nl> + <nl> + public static void main ( String [ ] args ) { <nl> + junit . textui . TestRunner . run ( OpenGL32Test . class ) ; <nl> + } <nl> + <nl> + public void testGetStringGLVersion ( ) { <nl> + / / create a dummy window <nl> + HWND hWnd = User32Util . createWindow ( " Message " , null , 0 , 0 , 0 , 0 , 0 , null , null , null , null ) ; <nl> + HDC hdc = User32 . INSTANCE . GetDC ( hWnd ) ; <nl> + <nl> + / / set a compatible pixel format <nl> + PIXELFORMATDESCRIPTOR . ByReference pfd = new PIXELFORMATDESCRIPTOR . ByReference ( ) ; <nl> + pfd . nVersion = 1 ; <nl> + pfd . dwFlags = WinGDI . PFD _ DRAW _ TO _ WINDOW | WinGDI . PFD _ SUPPORT _ OPENGL | WinGDI . PFD _ DOUBLEBUFFER ; <nl> + pfd . iPixelType = WinGDI . PFD _ TYPE _ RGBA ; <nl> + pfd . cColorBits = 24 ; <nl> + pfd . cDepthBits = 16 ; <nl> + pfd . iLayerType = WinGDI . PFD _ MAIN _ PLANE ; <nl> + GDI32 . INSTANCE . SetPixelFormat ( hdc , GDI32 . INSTANCE . ChoosePixelFormat ( hdc , pfd ) , pfd ) ; <nl> + <nl> + / / create the OpenGL context <nl> + HGLRC hGLRC = OpenGL32 . INSTANCE . wglCreateContext ( hdc ) ; <nl> + OpenGL32 . INSTANCE . wglMakeCurrent ( hdc , hGLRC ) ; <nl> + String glString = OpenGL32 . INSTANCE . glGetString ( WinOpenGL . GL _ VERSION ) ; <nl> + System . out . println ( " GL _ VERSION = " + glString ) ; <nl> + OpenGL32 . INSTANCE . wglDeleteContext ( hGLRC ) ; <nl> + <nl> + / / destroy the window <nl> + User32 . INSTANCE . ReleaseDC ( hWnd , hdc ) ; <nl> + User32Util . destroyWindow ( hWnd ) ; <nl> + <nl> + assertNotNull ( " Could not get GL _ VERSION " , glString ) ; <nl> + } <nl> + <nl> + public void testGetStringGLRenderer ( ) { <nl> + / / create a dummy window <nl> + HWND hWnd = User32Util . createWindow ( " Message " , null , 0 , 0 , 0 , 0 , 0 , null , null , null , null ) ; <nl> + HDC hdc = User32 . INSTANCE . GetDC ( hWnd ) ; <nl> + <nl> + / / set a compatible pixel format <nl> + PIXELFORMATDESCRIPTOR . ByReference pfd = new PIXELFORMATDESCRIPTOR . ByReference ( ) ; <nl> + pfd . nVersion = 1 ; <nl> + pfd . dwFlags = WinGDI . PFD _ DRAW _ TO _ WINDOW | WinGDI . PFD _ SUPPORT _ OPENGL | WinGDI . PFD _ DOUBLEBUFFER ; <nl> + pfd . iPixelType = WinGDI . PFD _ TYPE _ RGBA ; <nl> + pfd . cColorBits = 24 ; <nl> + pfd . cDepthBits = 16 ; <nl> + pfd . iLayerType = WinGDI . PFD _ MAIN _ PLANE ; <nl> + GDI32 . INSTANCE . SetPixelFormat ( hdc , GDI32 . INSTANCE . ChoosePixelFormat ( hdc , pfd ) , pfd ) ; <nl> + <nl> + / / create the OpenGL context <nl> + HGLRC hGLRC = OpenGL32 . INSTANCE . wglCreateContext ( hdc ) ; <nl> + OpenGL32 . INSTANCE . wglMakeCurrent ( hdc , hGLRC ) ; <nl> + String glString = OpenGL32 . INSTANCE . glGetString ( WinOpenGL . GL _ RENDERER ) ; <nl> + System . out . println ( " GL _ RENDERER = " + glString ) ; <nl> + OpenGL32 . INSTANCE . wglDeleteContext ( hGLRC ) ; <nl> + <nl> + / / destroy the window <nl> + User32 . INSTANCE . ReleaseDC ( hWnd , hdc ) ; <nl> + User32Util . destroyWindow ( hWnd ) ; <nl> + <nl> + assertNotNull ( " Could not get GL _ RENDERER " , glString ) ; <nl> + } <nl> + <nl> + public void testGetStringGLVendor ( ) { <nl> + / / create a dummy window <nl> + HWND hWnd = User32Util . createWindow ( " Message " , null , 0 , 0 , 0 , 0 , 0 , null , null , null , null ) ; <nl> + HDC hdc = User32 . INSTANCE . GetDC ( hWnd ) ; <nl> + <nl> + / / set a compatible pixel format <nl> + PIXELFORMATDESCRIPTOR . ByReference pfd = new PIXELFORMATDESCRIPTOR . ByReference ( ) ; <nl> + pfd . nVersion = 1 ; <nl> + pfd . dwFlags = WinGDI . PFD _ DRAW _ TO _ WINDOW | WinGDI . PFD _ SUPPORT _ OPENGL | WinGDI . PFD _ DOUBLEBUFFER ; <nl> + pfd . iPixelType = WinGDI . PFD _ TYPE _ RGBA ; <nl> + pfd . cColorBits = 24 ; <nl> + pfd . cDepthBits = 16 ; <nl> + pfd . iLayerType = WinGDI . PFD _ MAIN _ PLANE ; <nl> + GDI32 . INSTANCE . SetPixelFormat ( hdc , GDI32 . INSTANCE . ChoosePixelFormat ( hdc , pfd ) , pfd ) ; <nl> + <nl> + / / create the OpenGL context <nl> + HGLRC hGLRC = OpenGL32 . INSTANCE . wglCreateContext ( hdc ) ; <nl> + OpenGL32 . INSTANCE . wglMakeCurrent ( hdc , hGLRC ) ; <nl> + String glString = OpenGL32 . INSTANCE . glGetString ( WinOpenGL . GL _ VENDOR ) ; <nl> + System . out . println ( " GL _ VENDOR = " + glString ) ; <nl> + OpenGL32 . INSTANCE . wglDeleteContext ( hGLRC ) ; <nl> + <nl> + / / destroy the window <nl> + User32 . INSTANCE . ReleaseDC ( hWnd , hdc ) ; <nl> + User32Util . destroyWindow ( hWnd ) ; <nl> + <nl> + assertNotNull ( " Could not get GL _ VENDOR " , glString ) ; <nl> + } <nl> + <nl> + public void testGetStringGLExtensions ( ) { <nl> + / / create a dummy window <nl> + HWND hWnd = User32Util . createWindow ( " Message " , null , 0 , 0 , 0 , 0 , 0 , null , null , null , null ) ; <nl> + HDC hdc = User32 . INSTANCE . GetDC ( hWnd ) ; <nl> + <nl> + / / set a compatible pixel format <nl> + PIXELFORMATDESCRIPTOR . ByReference pfd = new PIXELFORMATDESCRIPTOR . ByReference ( ) ; <nl> + pfd . nVersion = 1 ; <nl> + pfd . dwFlags = WinGDI . PFD _ DRAW _ TO _ WINDOW | WinGDI . PFD _ SUPPORT _ OPENGL | WinGDI . PFD _ DOUBLEBUFFER ; <nl> + pfd . iPixelType = WinGDI . PFD _ TYPE _ RGBA ; <nl> + pfd . cColorBits = 24 ; <nl> + pfd . cDepthBits = 16 ; <nl> + pfd . iLayerType = WinGDI . PFD _ MAIN _ PLANE ; <nl> + GDI32 . INSTANCE . SetPixelFormat ( hdc , GDI32 . INSTANCE . ChoosePixelFormat ( hdc , pfd ) , pfd ) ; <nl> + <nl> + / / create the OpenGL context <nl> + HGLRC hGLRC = OpenGL32 . INSTANCE . wglCreateContext ( hdc ) ; <nl> + OpenGL32 . INSTANCE . wglMakeCurrent ( hdc , hGLRC ) ; <nl> + String glString = OpenGL32 . INSTANCE . glGetString ( WinOpenGL . GL _ EXTENSIONS ) ; <nl> + System . out . println ( " GL _ EXTENSIONS = " + glString ) ; <nl> + OpenGL32 . INSTANCE . wglDeleteContext ( hGLRC ) ; <nl> + <nl> + / / destroy the window <nl> + User32 . INSTANCE . ReleaseDC ( hWnd , hdc ) ; <nl> + User32Util . destroyWindow ( hWnd ) ; <nl> + <nl> + assertNotNull ( " Could not get GL _ EXTENSIONS " , glString ) ; <nl> + } <nl> + <nl> + public void testGetCurrentContext ( ) { <nl> + / / create a dummy window <nl> + HWND hWnd = User32Util . createWindow ( " Message " , null , 0 , 0 , 0 , 0 , 0 , null , null , null , null ) ; <nl> + HDC hdc = User32 . INSTANCE . GetDC ( hWnd ) ; <nl> + <nl> + / / set a compatible pixel format <nl> + PIXELFORMATDESCRIPTOR . ByReference pfd = new PIXELFORMATDESCRIPTOR . ByReference ( ) ; <nl> + pfd . nVersion = 1 ; <nl> + pfd . dwFlags = WinGDI . PFD _ DRAW _ TO _ WINDOW | WinGDI . PFD _ SUPPORT _ OPENGL | WinGDI . PFD _ DOUBLEBUFFER ; <nl> + pfd . iPixelType = WinGDI . PFD _ TYPE _ RGBA ; <nl> + pfd . cColorBits = 24 ; <nl> + pfd . cDepthBits = 16 ; <nl> + pfd . iLayerType = WinGDI . PFD _ MAIN _ PLANE ; <nl> + GDI32 . INSTANCE . SetPixelFormat ( hdc , GDI32 . INSTANCE . ChoosePixelFormat ( hdc , pfd ) , pfd ) ; <nl> + <nl> + / / create the OpenGL context <nl> + HGLRC hGLRC = OpenGL32 . INSTANCE . wglCreateContext ( hdc ) ; <nl> + OpenGL32 . INSTANCE . wglMakeCurrent ( hdc , hGLRC ) ; <nl> + HGLRC currentContext = OpenGL32 . INSTANCE . wglGetCurrentContext ( ) ; <nl> + OpenGL32 . INSTANCE . wglDeleteContext ( hGLRC ) ; <nl> + <nl> + / / destroy the window <nl> + User32 . INSTANCE . ReleaseDC ( hWnd , hdc ) ; <nl> + User32Util . destroyWindow ( hWnd ) ; <nl> + <nl> + assertNotNull ( " Could not get current context " , currentContext ) ; <nl> + } <nl> + } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / OpenGL32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / OpenGL32UtilTest . java <nl> new file mode 100644 <nl> index 0000000 . . 83157ac <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / OpenGL32UtilTest . java <nl> @ @ - 0 , 0 + 1 , 30 @ @ <nl> + / * Copyright ( c ) 2011 Timothy Wall , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import junit . framework . TestCase ; <nl> + <nl> + / * * <nl> + * @ author drrobison @ openroadsconsulting . com <nl> + * / <nl> + public class OpenGL32UtilTest extends TestCase { <nl> + <nl> + public static void main ( String [ ] args ) { <nl> + junit . textui . TestRunner . run ( OpenGL32UtilTest . class ) ; <nl> + } <nl> + <nl> + public void testCountGpusNV ( ) { <nl> + int cnt = OpenGL32Util . countGpusNV ( ) ; <nl> + assertTrue ( " Expecting > = 0 " , cnt > = 0 ) ; <nl> + } <nl> + }
diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index 2cb29a1 . . 0a14ffb 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 203 , 7 + 203 , 7 @ @ public class NativeLibrary { <nl> } <nl> catch ( UnsatisfiedLinkError e2 ) { e = e2 ; } <nl> } <nl> - else if ( Platform . isLinux ( ) ) { <nl> + else if ( Platform . isLinux ( ) | | Platform . isFreeBSD ( ) ) { <nl> / / <nl> / / Failed to load the library normally - try to match libfoo . so . * <nl> / / <nl> @ @ - 382 , 7 + 382 , 7 @ @ public class NativeLibrary { <nl> <nl> / / Use current process to load libraries we know are already <nl> / / loaded by the VM to ensure we get the correct version <nl> - if ( ( Platform . isLinux ( ) | | Platform . isAIX ( ) ) <nl> + if ( ( Platform . isLinux ( ) | | Platform . isFreeBSD ( ) | | Platform . isAIX ( ) ) <nl> & & Platform . C _ LIBRARY _ NAME . equals ( libraryName ) ) { <nl> libraryName = null ; <nl> } <nl> @ @ - 702 , 7 + 702 , 7 @ @ public class NativeLibrary { <nl> } <nl> return name ; <nl> } <nl> - else if ( Platform . isLinux ( ) ) { <nl> + else if ( Platform . isLinux ( ) | | Platform . isFreeBSD ( ) ) { <nl> if ( isVersionedName ( libName ) | | libName . endsWith ( " . so " ) ) { <nl> / / A specific version was requested - use as is for search <nl> return libName ;
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Ole32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Ole32Test . java <nl> index 33ef492 . . 79a1ce3 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Ole32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Ole32Test . java <nl> @ @ - 83 , 10 + 83 , 9 @ @ public class Ole32Test extends TestCase { <nl> 	 	 HRESULT hrCI = Ole32 . INSTANCE . CoInitializeEx ( null , 0 ) ; <nl> <nl> 	 	 GUID guid = Ole32Util <nl> - 	 	 	 	 . getGUIDFromString ( " { 13709620 - C279 - 11CE - A49E - 444553540000 } " ) ; / / Shell <nl> - 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 	 / / object <nl> + 	 	 	 	 . getGUIDFromString ( " { 00021401 - 0000 - 0000 - C000 - 000000000046 } " ) ; / / Shell object <nl> 	 	 GUID riid = Ole32Util <nl> - 	 	 	 	 . getGUIDFromString ( " { D8F015C0 - C278 - 11CE - A49E - 444553540000 } " ) ; / / IShellDispatch <nl> + 	 	 	 	 . getGUIDFromString ( " { 000214EE - 0000 - 0000 - C000 - 000000000046 } " ) ; / / IShellLinkA <nl> <nl> 	 	 PointerByReference pDispatch = new PointerByReference ( ) ; <nl>
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java <nl> index 59eeddb . . 435f4c0 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java <nl> @ @ - 56 , 17 + 56 , 17 @ @ public class OleAutoTest extends TestCase { <nl> 	 public void testLoadRegTypeLib ( ) { <nl> 	 	 / / MS Word typelib guid <nl> 	 	 CLSID clsid = new CLSID ( ) ; <nl> - 	 	 / / get CLSID from string <nl> + 	 	 / / get CLSID from string , Microsoft Scripting Engine <nl> 	 	 HRESULT hr = Ole32 . INSTANCE . CLSIDFromString ( new WString ( <nl> - 	 	 	 	 " { 00020905 - 0000 - 0000 - C000 - 000000000046 } " ) , clsid ) ; <nl> + 	 	 	 	 " { 420B2830 - E718 - 11CF - 893D - 00A0C9054228 } " ) , clsid ) ; <nl> 	 	 COMUtils . checkTypeLibRC ( hr ) ; <nl> 	 	 assertEquals ( 0 , hr . intValue ( ) ) ; <nl> <nl> 	 	 / / get user default lcid <nl> 	 	 LCID lcid = Kernel32 . INSTANCE . GetUserDefaultLCID ( ) ; <nl> 	 	 PointerByReference pWordTypeLib = new PointerByReference ( ) ; <nl> - 	 	 / / get typelib based on Word 8 . 3 ( v11 ) <nl> - 	 	 hr = OleAuto . INSTANCE . LoadRegTypeLib ( clsid , 8 , 3 , lcid , pWordTypeLib ) ; <nl> + 	 	 / / get typelib version 1 . 0 <nl> + 	 	 hr = OleAuto . INSTANCE . LoadRegTypeLib ( clsid , 1 , 0 , lcid , pWordTypeLib ) ; <nl> 	 	 COMUtils . checkTypeLibRC ( hr ) ; <nl> 	 	 assertEquals ( 0 , hr . intValue ( ) ) ; <nl> 	 }
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> index e51c30a . . de69521 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 1600 , 7 + 1600 , 7 @ @ public abstract class Advapi32Util { <nl> 	 	 	 	 ArrayList < String > result = new ArrayList < String > ( ) ; <nl> 	 	 	 	 int offset = 0 ; <nl> 	 	 	 	 while ( offset < stringData . size ( ) ) { <nl> - 	 	 	 	 	 String s = stringData . getWideString ( 0 ) ; <nl> + 	 	 	 	 	 String s = stringData . getWideString ( offset ) ; <nl> 	 	 	 	 	 offset + = s . length ( ) * Native . WCHAR _ SIZE ; <nl> 	 	 	 	 	 offset + = Native . WCHAR _ SIZE ; <nl> 	 	 	 	 	 if ( s . length ( ) = = 0 & & offset = = stringData . size ( ) ) { <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index d7851cd . . 91d83de 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 493 , 7 + 493 , 7 @ @ public class Kernel32Test extends TestCase { <nl> } <nl> <nl> public final void testGetPrivateProfileString ( ) throws IOException { <nl> - final File tmp = File . createTempFile ( " testGetPrivateProfileString " , " ini " ) ; <nl> + final File tmp = File . createTempFile ( " testGetPrivateProfileString " , " . ini " ) ; <nl> tmp . deleteOnExit ( ) ; <nl> final PrintWriter writer = new PrintWriter ( new BufferedWriter ( new FileWriter ( tmp ) ) ) ; <nl> writer . println ( " [ Section ] " ) ; <nl> @ @ - 501 , 12 + 501 , 18 @ @ public class Kernel32Test extends TestCase { <nl> writer . close ( ) ; <nl> <nl> final char [ ] buffer = new char [ 8 ] ; <nl> - assertEquals ( " ABC " , Kernel32 . INSTANCE . GetPrivateProfileString ( " Section " , " existingKey " , " DEF " , buffer , new DWORD ( buffer . length ) , tmp . getCanonicalPath ( ) ) ) ; <nl> - assertEquals ( " DEF " , Kernel32 . INSTANCE . GetPrivateProfileString ( " Section " , " missingKey " , " DEF " , buffer , new DWORD ( buffer . length ) , tmp . getCanonicalPath ( ) ) ) ; <nl> + <nl> + DWORD len = Kernel32 . INSTANCE . GetPrivateProfileString ( " Section " , " existingKey " , " DEF " , buffer , new DWORD ( buffer . length ) , tmp . getCanonicalPath ( ) ) ; <nl> + assertEquals ( 3 , len . intValue ( ) ) ; <nl> + assertEquals ( " ABC " , Native . toString ( buffer ) ) ; <nl> + <nl> + len = Kernel32 . INSTANCE . GetPrivateProfileString ( " Section " , " missingKey " , " DEF " , buffer , new DWORD ( buffer . length ) , tmp . getCanonicalPath ( ) ) ; <nl> + assertEquals ( 3 , len . intValue ( ) ) ; <nl> + assertEquals ( " DEF " , Native . toString ( buffer ) ) ; <nl> } <nl> <nl> public final void testWritePrivateProfileString ( ) throws IOException { <nl> - final File tmp = File . createTempFile ( " testWritePrivateProfileString " , " ini " ) ; <nl> + final File tmp = File . createTempFile ( " testWritePrivateProfileString " , " . ini " ) ; <nl> tmp . deleteOnExit ( ) ; <nl> final PrintWriter writer = new PrintWriter ( new BufferedWriter ( new FileWriter ( tmp ) ) ) ; <nl> writer . println ( " [ Section ] " ) ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Rasapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Rasapi32Util . java <nl> index ea08a0f . . d086eaf 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Rasapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Rasapi32Util . java <nl> @ @ - 230 , 7 + 230 , 6 @ @ public abstract class Rasapi32Util { <nl> 	 	 synchronized ( phoneBookMutex ) { <nl> 	 	 	 RASDIALPARAMS . ByReference rasDialParams = new RASDIALPARAMS . ByReference ( ) ; <nl> 	 	 	 System . arraycopy ( rasDialParams . szEntryName , 0 , entryName . toCharArray ( ) , 0 , entryName . length ( ) ) ; <nl> - 	 	 	 System . out . println ( " - - - - - - - - - - - - size = " + rasDialParams . dwSize ) ; <nl> 	 	 	 BOOLByReference lpfPassword = new BOOLByReference ( ) ; <nl> 	 	 	 int err = Rasapi32 . INSTANCE . RasGetEntryDialParams ( null , rasDialParams , lpfPassword ) ; <nl> 	 	 	 if ( err ! = WinError . ERROR _ SUCCESS ) throw new Ras32Exception ( err ) ; <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32Test . java <nl> index 2cf7395 . . b4ec335 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32Test . java <nl> @ @ - 14 , 6 + 14 , 10 @ @ package com . sun . jna . platform . win32 ; <nl> <nl> import junit . framework . TestCase ; <nl> <nl> + import com . sun . jna . platform . win32 . WinDef . BOOLByReference ; <nl> + import com . sun . jna . platform . win32 . WinRas . RASCREDENTIALS ; <nl> + import com . sun . jna . platform . win32 . WinRas . RASDIALPARAMS ; <nl> + import com . sun . jna . platform . win32 . WinRas . RASENTRY ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> <nl> / * * <nl> @ @ - 40 , 4 + 44 , 26 @ @ public class Rasapi32Test extends TestCase { <nl> 	 	 for ( ; len < msg . length ; len + + ) if ( msg [ len ] = = 0 ) break ; <nl> 	 	 assertEquals ( " An incorrect structure size was detected . " , new String ( msg , 0 , len ) ) ; <nl> 	 } <nl> + <nl> + 	 public void testRasGetCredentials ( ) { <nl> + 	 	 RASCREDENTIALS . ByReference credentials = new RASCREDENTIALS . ByReference ( ) ; <nl> + 	 	 credentials . dwMask = WinRas . RASCM _ UserName | WinRas . RASCM _ Password | WinRas . RASCM _ Domain ; <nl> + 	 	 int err = Rasapi32 . INSTANCE . RasGetCredentials ( null , " TEST " , credentials ) ; <nl> + 	 	 assertEquals ( 623 , err ) ; <nl> + 	 } <nl> + <nl> + 	 public void testRasGetEntryProperties ( ) { <nl> + 	 	 RASENTRY . ByReference rasEntry = new RASENTRY . ByReference ( ) ; <nl> + 	 	 IntByReference lpdwEntryInfoSize = new IntByReference ( rasEntry . size ( ) ) ; <nl> + 	 	 int err = Rasapi32 . INSTANCE . RasGetEntryProperties ( null , " TEST " , rasEntry , lpdwEntryInfoSize , null , null ) ; <nl> + 	 	 assertEquals ( 623 , err ) ; <nl> + 	 } <nl> + <nl> + 	 public void testRasGetEntryDialParams ( ) { <nl> + 	 	 RASDIALPARAMS . ByReference rasDialParams = new RASDIALPARAMS . ByReference ( ) ; <nl> + 	 	 System . arraycopy ( rasDialParams . szEntryName , 0 , " TEST " . toCharArray ( ) , 0 , " TEST " . length ( ) ) ; <nl> + 	 	 BOOLByReference lpfPassword = new BOOLByReference ( ) ; <nl> + 	 	 int err = Rasapi32 . INSTANCE . RasGetEntryDialParams ( null , rasDialParams , lpfPassword ) ; <nl> + 	 	 assertEquals ( 623 , err ) ; <nl> + 	 } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32UtilTest . java <nl> index 41e8981 . . 089200f 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32UtilTest . java <nl> @ @ - 32 , 6 + 32 , 7 @ @ public class Rasapi32UtilTest extends TestCase { <nl> 	 public void testGetPhonebookEntry ( ) { <nl> 	 	 try { <nl> 	 	 	 Rasapi32Util . getPhoneBookEntry ( " TEST " ) ; <nl> + 	 	 	 fail ( " Test expected to fail " ) ; <nl> 	 	 } catch ( Ras32Exception e ) { <nl> 	 	 	 assertEquals ( 623 , e . getCode ( ) ) ; <nl> 	 	 } <nl> @ @ - 45 , 6 + 46 , 14 @ @ public class Rasapi32UtilTest extends TestCase { <nl> 	 	 } <nl> 	 } <nl> <nl> + 	 public void testDialEntry ( ) { <nl> + 	 	 try { <nl> + 	 	 	 Rasapi32Util . dialEntry ( " TEST " ) ; <nl> + 	 	 } catch ( Ras32Exception e ) { <nl> + 	 	 	 assertEquals ( 623 , e . getCode ( ) ) ; <nl> + 	 	 } <nl> + 	 } <nl> + <nl> 	 public void testGetRasErrorString ( ) { <nl> 	 	 assertEquals ( " An incorrect structure size was detected . " , Rasapi32Util . getRasErrorString ( 632 ) ) ; <nl> 	 } <nl> @ @ - 52 , 4 + 61 , 8 @ @ public class Rasapi32UtilTest extends TestCase { <nl> 	 public void testGetRasConnectionStatusText ( ) { <nl> 	 	 assertEquals ( " Disconnected " , Rasapi32Util . getRasConnectionStatusText ( 8193 ) ) ; <nl> 	 } <nl> + <nl> + 	 public void testhangupRasConnection ( ) { <nl> + 	 	 Rasapi32Util . hangupRasConnection ( " TEST " ) ; <nl> + 	 } <nl> }
diff - - git a / build . xml b / build . xml <nl> index adb628d . . 10171a3 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 356 , 7 + 356 , 7 @ @ <nl> < attribute name = " Bundle - Name " value = " jna " / > <nl> < attribute name = " Bundle - Description " value = " JNA Library " / > <nl> < attribute name = " Bundle - SymbolicName " value = " com . sun . jna " / > <nl> - < attribute name = " Bundle - Version " value = " $ { spec . version } " / > <nl> + < attribute name = " Bundle - Version " value = " $ { jna . major } . $ { jna . minor } . $ { jna . revision } " / > <nl> < attribute name = " Bundle - RequiredExecutionEnvironment " value = " J2SE - 1 . 4 " / > <nl> < attribute name = " Bundle - Vendor " value = " $ { vendor } " / > <nl> < attribute name = " Bundle - ActivationPolicy " value = " lazy " / > <nl> @ @ - 489 , 6 + 489 , 14 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < property name = " libs . junit . classpath " location = " lib / junit . jar " / > <nl> < property name = " javac . source " value = " $ { platform . compatibility } " / > <nl> < property name = " javac . target " value = " $ { platform . compatibility } " / > <nl> + < ! - - OSGi manifest properties - - > <nl> + < property name = " vendor " value = " $ { vendor } " / > <nl> + < property name = " impl . title " value = " $ { impl . title } . platform " / > <nl> + < property name = " impl . version " value = " $ { impl . version } " / > <nl> + < property name = " spec . title " value = " $ { spec . title } " / > <nl> + < property name = " spec . vendor " value = " $ { spec . vendor } " / > <nl> + < property name = " spec . version " value = " $ { spec . version } " / > <nl> + < property name = " osgi . version " value = " $ { jna . major } . $ { jna . minor } . $ { jna . revision } " / > <nl> < fileset dir = " $ { contrib } " includes = " platform / build . xml " / > <nl> < / subant > <nl> < ! - - Sources package as required by maven - - > <nl> diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index c413aa7 . . 1658e1b 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 57 , 12 + 57 , 54 @ @ <nl> < / exec > <nl> < / target > <nl> <nl> - Notice that the overridden target depends on the jar target and not only on <nl> - the compile target as the regular run target does . Again , for a list of available <nl> + Notice that the overridden target depends on the jar target and not only on <nl> + the compile target as the regular run target does . Again , for a list of available <nl> properties which you can use , check the target you are overriding in the <nl> - nbproject / build - impl . xml file . <nl> + nbproject / build - impl . xml file . <nl> <nl> - - > <nl> + <nl> + < target name = " - do - jar - without - manifest " > <nl> + < jar jarfile = " $ { dist . jar } " compress = " $ { jar . compress } " > <nl> + < manifest > <nl> + < attribute name = " Main - Class " value = " com . sun . jna . Native " / > <nl> + < attribute name = " Manifest - Version " value = " 1 . 0 " / > <nl> + < attribute name = " Implementation - Title " value = " $ { impl . title } " / > <nl> + < attribute name = " Implementation - Vendor " value = " $ { vendor } " / > <nl> + < attribute name = " Implementation - Version " value = " $ { impl . version } " / > <nl> + < attribute name = " Specification - Title " value = " $ { spec . title } " / > <nl> + < attribute name = " Specification - Vendor " value = " $ { spec . vendor } " / > <nl> + < attribute name = " Specification - Version " value = " $ { spec . version } " / > <nl> + < ! - - <nl> + OSGi Bundle attributes <nl> + See http : / / www . osgi . org / Specifications / Reference <nl> + - - > <nl> + < attribute name = " Bundle - Category " value = " jni " / > <nl> + < attribute name = " Bundle - ManifestVersion " value = " 2 " / > <nl> + < attribute name = " Bundle - Name " value = " jna - platform " / > <nl> + < attribute name = " Bundle - Description " value = " JNA Platform Library " / > <nl> + < attribute name = " Bundle - SymbolicName " value = " com . sun . jna . platform " / > <nl> + < attribute name = " Bundle - Version " value = " $ { osgi . version } " / > <nl> + < attribute name = " Bundle - RequiredExecutionEnvironment " value = " J2SE - 1 . 4 " / > <nl> + < attribute name = " Bundle - Vendor " value = " $ { vendor } " / > <nl> + < attribute name = " Require - Bundle " value = " com . sun . jna ; bundle - version = & quot ; $ { osgi . version } & quot ; " / > <nl> + < attribute name = " Export - Package " <nl> + value = " <nl> + com . sun . jna . platform , <nl> + com . sun . jna . platform . dnd , <nl> + com . sun . jna . platform . mac , <nl> + com . sun . jna . platform . unix , <nl> + com . sun . jna . platform . win32 , <nl> + com . sun . jna . platform . win32 . COM , <nl> + com . sun . jna . platform . win32 . COM . tlb , <nl> + com . sun . jna . platform . win32 . COM . tlb . imp , <nl> + com . sun . jna . platform . wince <nl> + " / > <nl> + < / manifest > <nl> + < fileset dir = " $ { build . classes . dir } " / > <nl> + < / jar > <nl> + < / target > <nl> + <nl> < target name = " test " depends = " init , compile , compile - test , - pre - test - run " description = " Run platform unit tests . " > <nl> < echo > Running platform tests : $ { test . src . dir } < / echo > <nl> < property name = " test . fork " value = " yes " / >
diff - - git a / build . xml b / build . xml <nl> index adb628d . . 5e5fa8e 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 10 , 7 + 10 , 7 @ @ <nl> <nl> Cross - compile by specifying - Dos . prefix = { name - arch } to ant <nl> ( cross - compile currently only configured / tested on w32ce - arm and <nl> - android - arm / - x86 ) <nl> + android - arm / - x86 ) <nl> <nl> Use ANT _ OPTS = - Dskip - native = false to build native parts , or directly <nl> invoke the native or test targets <nl> @ @ - 356 , 7 + 356 , 7 @ @ <nl> < attribute name = " Bundle - Name " value = " jna " / > <nl> < attribute name = " Bundle - Description " value = " JNA Library " / > <nl> < attribute name = " Bundle - SymbolicName " value = " com . sun . jna " / > <nl> - < attribute name = " Bundle - Version " value = " $ { spec . version } " / > <nl> + < attribute name = " Bundle - Version " value = " $ { jna . major } . $ { jna . minor } . $ { jna . revision } " / > <nl> < attribute name = " Bundle - RequiredExecutionEnvironment " value = " J2SE - 1 . 4 " / > <nl> < attribute name = " Bundle - Vendor " value = " $ { vendor } " / > <nl> < attribute name = " Bundle - ActivationPolicy " value = " lazy " / > <nl> @ @ - 489 , 6 + 489 , 14 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < property name = " libs . junit . classpath " location = " lib / junit . jar " / > <nl> < property name = " javac . source " value = " $ { platform . compatibility } " / > <nl> < property name = " javac . target " value = " $ { platform . compatibility } " / > <nl> + < ! - - OSGi manifest properties - - > <nl> + < property name = " vendor " value = " $ { vendor } " / > <nl> + < property name = " impl . title " value = " $ { impl . title } . platform " / > <nl> + < property name = " impl . version " value = " $ { impl . version } " / > <nl> + < property name = " spec . title " value = " $ { spec . title } " / > <nl> + < property name = " spec . vendor " value = " $ { spec . vendor } " / > <nl> + < property name = " spec . version " value = " $ { spec . version } " / > <nl> + < property name = " osgi . version " value = " $ { jna . major } . $ { jna . minor } . $ { jna . revision } " / > <nl> < fileset dir = " $ { contrib } " includes = " platform / build . xml " / > <nl> < / subant > <nl> < ! - - Sources package as required by maven - - > <nl> diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index c413aa7 . . 2fe47c4 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 4 , 9 + 4 , 9 @ @ <nl> < import file = " nbproject / build - impl . xml " / > <nl> < ! - - <nl> <nl> - There exist several targets which are by default empty and which can be <nl> - used for execution of your tasks . These targets are usually executed <nl> - before and after some main targets . They are : <nl> + There exist several targets which are by default empty and which can be <nl> + used for execution of your tasks . These targets are usually executed <nl> + before and after some main targets . They are : <nl> <nl> - pre - init : called before initialization of project properties <nl> - post - init : called after initialization of project properties <nl> @ @ - 32 , 12 + 32 , 12 @ @ <nl> < / obfuscate > <nl> < / target > <nl> <nl> - For list of available properties check the imported <nl> - nbproject / build - impl . xml file . <nl> + For list of available properties check the imported <nl> + nbproject / build - impl . xml file . <nl> <nl> <nl> Another way to customize the build is by overriding existing main targets . <nl> - The targets of interest are : <nl> + The targets of interest are : <nl> <nl> - init - macrodef - javac : defines macro for javac compilation <nl> - init - macrodef - junit : defines macro for junit execution <nl> @ @ - 45 , 7 + 45 , 7 @ @ <nl> - init - macrodef - java : defines macro for class execution <nl> - do - jar - with - manifest : JAR building ( if you are using a manifest ) <nl> - do - jar - without - manifest : JAR building ( if you are not using a manifest ) <nl> - run : execution of project <nl> + run : execution of project <nl> - javadoc - build : Javadoc generation <nl> test - report : JUnit report generation <nl> <nl> @ @ - 57 , 12 + 57 , 54 @ @ <nl> < / exec > <nl> < / target > <nl> <nl> - Notice that the overridden target depends on the jar target and not only on <nl> - the compile target as the regular run target does . Again , for a list of available <nl> + Notice that the overridden target depends on the jar target and not only on <nl> + the compile target as the regular run target does . Again , for a list of available <nl> properties which you can use , check the target you are overriding in the <nl> - nbproject / build - impl . xml file . <nl> + nbproject / build - impl . xml file . <nl> <nl> - - > <nl> + <nl> + < target name = " - do - jar - without - manifest " > <nl> + < jar jarfile = " $ { dist . jar } " compress = " $ { jar . compress } " > <nl> + < manifest > <nl> + < attribute name = " Main - Class " value = " com . sun . jna . Native " / > <nl> + < attribute name = " Manifest - Version " value = " 1 . 0 " / > <nl> + < attribute name = " Implementation - Title " value = " $ { impl . title } " / > <nl> + < attribute name = " Implementation - Vendor " value = " $ { vendor } " / > <nl> + < attribute name = " Implementation - Version " value = " $ { impl . version } " / > <nl> + < attribute name = " Specification - Title " value = " $ { spec . title } " / > <nl> + < attribute name = " Specification - Vendor " value = " $ { spec . vendor } " / > <nl> + < attribute name = " Specification - Version " value = " $ { spec . version } " / > <nl> + < ! - - <nl> + OSGi Bundle attributes <nl> + See http : / / www . osgi . org / Specifications / Reference <nl> + - - > <nl> + < attribute name = " Bundle - Category " value = " jni " / > <nl> + < attribute name = " Bundle - ManifestVersion " value = " 2 " / > <nl> + < attribute name = " Bundle - Name " value = " jna - platform " / > <nl> + < attribute name = " Bundle - Description " value = " JNA Platform Library " / > <nl> + < attribute name = " Bundle - SymbolicName " value = " com . sun . jna . platform " / > <nl> + < attribute name = " Bundle - Version " value = " $ { osgi . version } " / > <nl> + < attribute name = " Bundle - RequiredExecutionEnvironment " value = " J2SE - 1 . 4 " / > <nl> + < attribute name = " Bundle - Vendor " value = " $ { vendor } " / > <nl> + < attribute name = " Require - Bundle " value = " com . sun . jna ; bundle - version = & quot ; $ { osgi . version } & quot ; " / > <nl> + < attribute name = " Export - Package " <nl> + value = " <nl> + com . sun . jna . platform , <nl> + com . sun . jna . platform . dnd , <nl> + com . sun . jna . platform . mac , <nl> + com . sun . jna . platform . unix , <nl> + com . sun . jna . platform . win32 , <nl> + com . sun . jna . platform . win32 . COM , <nl> + com . sun . jna . platform . win32 . COM . tlb , <nl> + com . sun . jna . platform . win32 . COM . tlb . imp , <nl> + com . sun . jna . platform . wince <nl> + " / > <nl> + < / manifest > <nl> + < fileset dir = " $ { build . classes . dir } " / > <nl> + < / jar > <nl> + < / target > <nl> + <nl> < target name = " test " depends = " init , compile , compile - test , - pre - test - run " description = " Run platform unit tests . " > <nl> < echo > Running platform tests : $ { test . src . dir } < / echo > <nl> < property name = " test . fork " value = " yes " / >
diff - - git a / contrib / platform / src / com / sun / jna / platform / WindowUtils . java b / contrib / platform / src / com / sun / jna / platform / WindowUtils . java <nl> index 4c54fd7 . . 612c6d3 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / WindowUtils . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / WindowUtils . java <nl> @ @ - 80 , 7 + 80 , 7 @ @ import com . sun . jna . platform . win32 . WinGDI . BITMAPINFO ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . platform . win32 . WinUser ; <nl> import com . sun . jna . platform . win32 . WinUser . BLENDFUNCTION ; <nl> - import com . sun . jna . platform . win32 . WinUser . POINT ; <nl> + import com . sun . jna . platform . win32 . WinDef . POINT ; <nl> import com . sun . jna . platform . win32 . WinUser . SIZE ; <nl> import com . sun . jna . ptr . ByteByReference ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / GDI32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / GDI32 . java <nl> index b96698e . . 4173820 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / GDI32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / GDI32 . java <nl> @ @ - 123 , 7 + 123 , 7 @ @ public interface GDI32 extends StdCallLibrary { <nl> * If the function fails , the return value is zero . <nl> * To get extended error information , call GetLastError . <nl> * / <nl> - HRGN CreatePolyPolygonRgn ( WinUser . POINT [ ] lppt , int [ ] lpPolyCounts , <nl> + HRGN CreatePolyPolygonRgn ( WinDef . POINT [ ] lppt , int [ ] lpPolyCounts , <nl> int nCount , int fnPolyFillMode ) ; <nl> <nl> / * *
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbAbstractMethod . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbAbstractMethod . java <nl> index f89fa94 . . 21185c2 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbAbstractMethod . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbAbstractMethod . java <nl> @ @ - 230 , 7 + 230 , 7 @ @ public abstract class TlbAbstractMethod extends TlbBase implements Variant { <nl> protected String getType ( TYPEDESC typeDesc ) { <nl> VARTYPE vt = typeDesc . vt ; <nl> String type = " not _ defined " ; <nl> - <nl> + <nl> if ( vt . intValue ( ) = = Variant . VT _ PTR ) { <nl> TYPEDESC lptdesc = typeDesc . _ typedesc . getLptdesc ( ) ; <nl> type = this . getType ( lptdesc ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java b / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java <nl> index d38780f . . bcf7ca3 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Guid . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ import java . util . List ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> <nl> + / / TODO : Auto - generated Javadoc <nl> / * * <nl> * Ported from Guid . h . Microsoft Windows SDK 6 . 0A . <nl> * <nl> @ @ - 26 , 15 + 27 , 20 @ @ import com . sun . jna . Structure ; <nl> * / <nl> public interface Guid { <nl> <nl> + / * * The Constant IID _ NULL . * / <nl> public final static IID IID _ NULL = new IID ( ) ; <nl> <nl> / * * <nl> * The Class GUID . <nl> + * <nl> + * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> * / <nl> public static class GUID extends Structure { <nl> <nl> / * * <nl> * The Class ByReference . <nl> + * <nl> + * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> * / <nl> public static class ByReference extends GUID implements <nl> Structure . ByReference { <nl> @ @ - 355 , 11 + 361 , 15 @ @ public interface Guid { <nl> <nl> / * * <nl> * The Class CLSID . <nl> + * <nl> + * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> * / <nl> public static class CLSID extends GUID { <nl> <nl> / * * <nl> * The Class ByReference . <nl> + * <nl> + * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> * / <nl> public static class ByReference extends GUID { <nl> <nl> @ @ - 378 , 7 + 388 , 7 @ @ public interface Guid { <nl> public ByReference ( GUID guid ) { <nl> super ( guid ) ; <nl> } <nl> - <nl> + <nl> / * * <nl> * Instantiates a new by reference . <nl> * <nl> @ @ - 395 , 10 + 405 , 30 @ @ public interface Guid { <nl> * / <nl> public CLSID ( ) { <nl> } <nl> + <nl> + / * * <nl> + * Instantiates a new clsid . <nl> + * <nl> + * @ param guid the guid <nl> + * / <nl> + public CLSID ( String guid ) { <nl> + super ( guid ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Instantiates a new clsid . <nl> + * <nl> + * @ param guid the guid <nl> + * / <nl> + public CLSID ( GUID guid ) { <nl> + super ( guid ) ; <nl> + } <nl> } <nl> <nl> / * * <nl> * The Class REFIID . <nl> + * <nl> + * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> * / <nl> public class REFIID extends IID { <nl> <nl> @ @ - 435 , 6 + 465 , 8 @ @ public interface Guid { <nl> <nl> / * * <nl> * The Class IID . <nl> + * <nl> + * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> * / <nl> public class IID extends GUID { <nl> <nl> @ @ - 456 , 6 + 488 , 11 @ @ public interface Guid { <nl> / / TODO Auto - generated constructor stub <nl> } <nl> <nl> + / * * <nl> + * Instantiates a new iid . <nl> + * <nl> + * @ param iid the iid <nl> + * / <nl> public IID ( String iid ) { <nl> super ( iid ) ; <nl> / / TODO Auto - generated constructor stub <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java <nl> index 9a97148 . . 83c9ed3 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java <nl> @ @ - 35 , 42 + 35 , 42 @ @ public class TypeLibUtilTest extends TestCase { <nl> return new TypeLibUtil ( " { 50A7E9B0 - 70EF - 11D1 - B75A - 00A0C90564FE } " , 1 , 0 ) ; <nl> } <nl> <nl> - / / public void testGetTypeInfoCount ( ) { <nl> - / / TypeLibUtil shellTypeLib = loadShellTypeLib ( ) ; <nl> - / / int typeInfoCount = shellTypeLib . getTypeInfoCount ( ) ; <nl> - / / assertTrue ( " MS Shell should contain at least 36 types . " , typeInfoCount > = 36 ) ; <nl> - / / } <nl> - / / <nl> - / / public void testGetTypeInfo ( ) { <nl> - / / TypeLibUtil shellTypeLib = loadShellTypeLib ( ) ; <nl> - / / int typeInfoCount = shellTypeLib . getTypeInfoCount ( ) ; <nl> - / / <nl> - / / for ( int i = 0 ; i < typeInfoCount ; i + + ) <nl> - / / { <nl> - / / ITypeInfo typeInfo = shellTypeLib . getTypeInfo ( i ) ; <nl> - / / TypeInfoUtil typeInfoUtil = new TypeInfoUtil ( typeInfo ) ; <nl> - / / <nl> - / / TYPEATTR typeAttr = typeInfoUtil . getTypeAttr ( ) ; <nl> - / / int cFuncs = typeAttr . cFuncs . intValue ( ) ; <nl> - / / <nl> - / / for ( int y = 0 ; y < cFuncs ; y + + ) { <nl> - / / / / Get the function description <nl> - / / FUNCDESC funcDesc = typeInfoUtil . getFuncDesc ( y ) ; <nl> - / / / / Get the member ID <nl> - / / MEMBERID memberID = funcDesc . memid ; <nl> - / / / / Get the name of the method <nl> - / / TypeInfoDoc typeInfoDoc2 = typeInfoUtil . getDocumentation ( memberID ) ; <nl> - / / String methodName = typeInfoDoc2 . getName ( ) ; <nl> - / / <nl> - / / assertNotNull ( methodName ) ; <nl> - / / <nl> - / / typeInfoUtil . ReleaseFuncDesc ( funcDesc ) ; <nl> - / / } <nl> - / / <nl> - / / typeInfoUtil . ReleaseTypeAttr ( typeAttr ) ; <nl> - / / } <nl> - / / } <nl> - / / <nl> + public void testGetTypeInfoCount ( ) { <nl> + TypeLibUtil shellTypeLib = loadShellTypeLib ( ) ; <nl> + int typeInfoCount = shellTypeLib . getTypeInfoCount ( ) ; <nl> + assertTrue ( " MS Shell should contain at least 36 types . " , typeInfoCount > = 36 ) ; <nl> + } <nl> + <nl> + public void testGetTypeInfo ( ) { <nl> + TypeLibUtil shellTypeLib = loadShellTypeLib ( ) ; <nl> + int typeInfoCount = shellTypeLib . getTypeInfoCount ( ) ; <nl> + <nl> + for ( int i = 0 ; i < typeInfoCount ; i + + ) <nl> + { <nl> + ITypeInfo typeInfo = shellTypeLib . getTypeInfo ( i ) ; <nl> + TypeInfoUtil typeInfoUtil = new TypeInfoUtil ( typeInfo ) ; <nl> + <nl> + TYPEATTR typeAttr = typeInfoUtil . getTypeAttr ( ) ; <nl> + int cFuncs = typeAttr . cFuncs . intValue ( ) ; <nl> + <nl> + for ( int y = 0 ; y < cFuncs ; y + + ) { <nl> + / / Get the function description <nl> + FUNCDESC funcDesc = typeInfoUtil . getFuncDesc ( y ) ; <nl> + / / Get the member ID <nl> + MEMBERID memberID = funcDesc . memid ; <nl> + / / Get the name of the method <nl> + TypeInfoDoc typeInfoDoc2 = typeInfoUtil . getDocumentation ( memberID ) ; <nl> + String methodName = typeInfoDoc2 . getName ( ) ; <nl> + <nl> + assertNotNull ( methodName ) ; <nl> + <nl> + typeInfoUtil . ReleaseFuncDesc ( funcDesc ) ; <nl> + } <nl> + <nl> + typeInfoUtil . ReleaseTypeAttr ( typeAttr ) ; <nl> + } <nl> + } <nl> + <nl> public void testBug ( ) { <nl> TypeLibUtil shellTypeLib = loadShellTypeLib ( ) ; <nl> int typeInfoCount = shellTypeLib . getTypeInfoCount ( ) ; <nl> @ @ - 81 , 7 + 81 , 7 @ @ public class TypeLibUtilTest extends TestCase { <nl> TYPEATTR typeAttr = typeInfoUtil . getTypeAttr ( ) ; <nl> int cFuncs = typeAttr . cFuncs . intValue ( ) ; <nl> <nl> - for ( int y = 13 ; y < cFuncs ; y + + ) { <nl> + for ( int y = 0 ; y < cFuncs ; y + + ) { <nl> System . out . println ( " \ n \ n \ n y : " + y ) ; <nl> / / Get the function description <nl> FUNCDESC funcDesc = typeInfoUtil . getFuncDesc ( y ) ; <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index fe9b4c6 . . 9e5b56c 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 666 , 17 + 666 , 6 @ @ public abstract class Structure { <nl> result = p = = null ? null : p . getString ( 0 , encoding ) ; <nl> } <nl> else { <nl> - System . out . println ( structField . name + " : " + fieldType ) ; <nl> - System . out . println ( " structField size : " + structField . size ) ; <nl> - <nl> - System . out . println ( " memory size : " + memory . SIZE ) ; <nl> - System . out . println ( " peer : " + memory . peer ) ; <nl> - <nl> - if ( structField . name . equals ( " cBytes " ) ) { <nl> - System . out . println ( " cBytes memory size : " + memory . SIZE ) ; <nl> - System . out . println ( " cBytes peer : " + memory . peer ) ; <nl> - } <nl> - <nl> result = memory . getValue ( offset , fieldType , currentValue ) ; <nl> } <nl> if ( readConverter ! = null ) {
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java <nl> index 5903e2f . . 4327da4 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java <nl> @ @ - 52 , 8 + 52 , 8 @ @ public class TlbFunction extends TlbAbstractMethod implements Variant { <nl> <nl> String methodparams = " " ; <nl> String methodvariables = " " ; <nl> - int vtableId = funcDesc . oVft ; <nl> - int paramCount = funcDesc . cParams ; <nl> + short vtableId = funcDesc . oVft . shortValue ( ) ; <nl> + short paramCount = funcDesc . cParams . shortValue ( ) ; <nl> ELEMDESC elemDesdRetType = funcDesc . elemdescFunc ; <nl> String returnType = this . getType ( elemDesdRetType . tdesc ) ; <nl> String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java <nl> index caa7ab9 . . 81c27f0 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java <nl> @ @ - 56 , 8 + 56 , 8 @ @ public class TlbFunctionStub extends TlbAbstractMethod implements Variant { <nl> <nl> String methodparams = " " ; <nl> String methodvariables = " " ; <nl> - int vtableId = funcDesc . oVft ; <nl> - int paramCount = funcDesc . cParams ; <nl> + short vtableId = funcDesc . oVft . shortValue ( ) ; <nl> + short paramCount = funcDesc . cParams . shortValue ( ) ; <nl> ELEMDESC elemDesdRetType = funcDesc . elemdescFunc ; <nl> String returnType = this . getType ( elemDesdRetType . tdesc ) ; <nl> String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java <nl> index 4556168 . . f78572b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java <nl> @ @ - 47 , 7 + 47 , 7 @ @ public class TlbPropertyGet extends TlbAbstractMethod implements Variant { <nl> super ( index , typeLibUtil , funcDesc , typeInfoUtil ) ; <nl> <nl> this . methodName = " get " + this . getMethodName ( ) ; <nl> - int vtableId = funcDesc . oVft ; <nl> + short vtableId = funcDesc . oVft . shortValue ( ) ; <nl> String returnType = this . getType ( funcDesc ) ; <nl> <nl> this . replaceVariable ( " helpstring " , docStr ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java <nl> index 3969ffb . . 0facd12 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java <nl> @ @ - 53 , 7 + 53 , 7 @ @ public class TlbPropertyGetStub extends TlbAbstractMethod implements Variant { <nl> TypeInfoDoc typeInfoDoc = typeInfoUtil . getDocumentation ( funcDesc . memid ) ; <nl> String docStr = typeInfoDoc . getDocString ( ) ; <nl> String methodname = " get " + typeInfoDoc . getName ( ) ; <nl> - int vtableId = funcDesc . oVft ; <nl> + short vtableId = funcDesc . oVft . shortValue ( ) ; <nl> String returnType = this . getType ( funcDesc ) ; <nl> <nl> this . replaceVariable ( " helpstring " , docStr ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java <nl> index aaaced6 . . e5adb72 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java <nl> @ @ - 53 , 8 + 53 , 8 @ @ public class TlbPropertyPut extends TlbAbstractMethod implements Variant { <nl> this . methodName = " set " + getMethodName ( ) ; <nl> String methodparams = " " ; <nl> String methodvariables = " , " ; <nl> - int vtableId = funcDesc . oVft ; <nl> - int paramCount = funcDesc . cParams ; <nl> + short vtableId = funcDesc . oVft . shortValue ( ) ; <nl> + short paramCount = funcDesc . cParams . shortValue ( ) ; <nl> String varType ; <nl> String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java <nl> index 14b8025 . . 11bdd5b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java <nl> @ @ - 54 , 8 + 54 , 8 @ @ public class TlbPropertyPutStub extends TlbAbstractMethod implements Variant { <nl> String docStr = typeInfoDoc . getDocString ( ) ; <nl> String methodname = " set " + typeInfoDoc . getName ( ) ; <nl> String methodparams = " " ; <nl> - int vtableId = funcDesc . oVft ; <nl> - int paramCount = funcDesc . cParams ; <nl> + short vtableId = funcDesc . oVft . shortValue ( ) ; <nl> + short paramCount = funcDesc . cParams . shortValue ( ) ; <nl> String varType ; <nl> String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> index 0831423 . . f4efbd7 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import com . sun . jna . platform . win32 . WinDef . LONG ; <nl> import com . sun . jna . platform . win32 . WinDef . LONGLONG ; <nl> import com . sun . jna . platform . win32 . WinDef . PVOID ; <nl> import com . sun . jna . platform . win32 . WinDef . SCODE ; <nl> + import com . sun . jna . platform . win32 . WinDef . SHORT ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONG ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONGLONG ; <nl> import com . sun . jna . platform . win32 . WinDef . USHORT ; <nl> @ @ - 768 , 31 + 769 , 18 @ @ public interface OaIdl { <nl> Structure . ByReference { <nl> } ; <nl> <nl> - / / / C type : MEMBERID <nl> public MEMBERID memid ; <nl> - / * * <nl> - * [ size _ is ] < br > <nl> - * C type : SCODE * <nl> - * / <nl> public ScodeArg . ByReference lprgscode ; <nl> - / * * <nl> - * [ size _ is ] < br > <nl> - * C type : ELEMDESC * <nl> - * / <nl> public ElemDescArg . ByReference lprgelemdescParam ; <nl> - / / / C type : FUNCKIND <nl> public FUNCKIND funckind ; <nl> - / / / C type : INVOKEKIND <nl> public INVOKEKIND invkind ; <nl> - / / / C type : CALLCONV <nl> public CALLCONV callconv ; <nl> - public int cParams ; <nl> - public int cParamsOpt ; <nl> - public int oVft ; <nl> - public int cScodes ; <nl> - / / / C type : ELEMDESC <nl> + public SHORT cParams ; <nl> + public SHORT cParamsOpt ; <nl> + public SHORT oVft ; <nl> + public SHORT cScodes ; <nl> public ELEMDESC elemdescFunc ; <nl> - public int wFuncFlags ; <nl> + public WORD wFuncFlags ; <nl> <nl> public FUNCDESC ( ) { <nl> } <nl> @ @ - 801 , 8 + 789 , 8 @ @ public interface OaIdl { <nl> super ( pointer ) ; <nl> this . read ( ) ; <nl> <nl> - if ( this . cParams > 1 ) { <nl> - this . lprgelemdescParam . elemDescArg = new ELEMDESC [ this . cParams ] ; <nl> + if ( this . cParams . shortValue ( ) > 1 ) { <nl> + this . lprgelemdescParam . elemDescArg = new ELEMDESC [ this . cParams . shortValue ( ) ] ; <nl> this . lprgelemdescParam . read ( ) ; <nl> } <nl> } <nl> @ @ - 1351 , 7 + 1339 , 7 @ @ public interface OaIdl { <nl> } <nl> <nl> @ Override <nl> - protected List getFieldOrder ( ) { <nl> + protected List < String > getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " cBytes " , " varDefaultValue " } ) ; <nl> } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java <nl> index b5defd3 . . b592068 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java <nl> @ @ - 38 , 7 + 38 , 7 @ @ public class TypeLibUtilTest extends TestCase { <nl> public void testGetTypeInfoCount ( ) { <nl> TypeLibUtil shellTypeLib = loadShellTypeLib ( ) ; <nl> int typeInfoCount = shellTypeLib . getTypeInfoCount ( ) ; <nl> - assertTrue ( " MS Shell should contain at 36 types . " , typeInfoCount = = 36 ) ; <nl> + assertTrue ( " MS Shell should contain at least 36 types . " , typeInfoCount > = 36 ) ; <nl> } <nl> <nl> public void testGetTypeInfo ( ) { <nl> @ @ - 70 , 4 + 70 , 32 @ @ public class TypeLibUtilTest extends TestCase { <nl> typeInfoUtil . ReleaseTypeAttr ( typeAttr ) ; <nl> } <nl> } <nl> + <nl> + public void testBug ( ) { <nl> + TypeLibUtil shellTypeLib = loadShellTypeLib ( ) ; <nl> + int typeInfoCount = shellTypeLib . getTypeInfoCount ( ) ; <nl> + <nl> + ITypeInfo typeInfo = shellTypeLib . getTypeInfo ( 4 ) ; <nl> + TypeInfoUtil typeInfoUtil = new TypeInfoUtil ( typeInfo ) ; <nl> + <nl> + TYPEATTR typeAttr = typeInfoUtil . getTypeAttr ( ) ; <nl> + int cFuncs = typeAttr . cFuncs . intValue ( ) ; <nl> + <nl> + for ( int y = 13 ; y < cFuncs ; y + + ) { <nl> + System . out . println ( " y : " + y ) ; <nl> + / / Get the function description <nl> + FUNCDESC funcDesc = typeInfoUtil . getFuncDesc ( y ) ; <nl> + / / Get the member ID <nl> + MEMBERID memberID = funcDesc . memid ; <nl> + / / Get the name of the method <nl> + TypeInfoDoc typeInfoDoc2 = typeInfoUtil . getDocumentation ( memberID ) ; <nl> + String methodName = typeInfoDoc2 . getName ( ) ; <nl> + <nl> + assertNotNull ( methodName ) ; <nl> + <nl> + typeInfoUtil . ReleaseFuncDesc ( funcDesc ) ; <nl> + } <nl> + <nl> + typeInfoUtil . ReleaseTypeAttr ( typeAttr ) ; <nl> + } <nl> } <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index c1d5224 . . 9e5b56c 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 534 , 8 + 534 , 6 @ @ public abstract class Structure { <nl> try { <nl> for ( Iterator i = fields ( ) . values ( ) . iterator ( ) ; i . hasNext ( ) ; ) { <nl> StructField structField = ( StructField ) i . next ( ) ; <nl> - System . out . println ( structField . name ) ; <nl> - System . out . println ( structField . type . toString ( ) ) ; <nl> readField ( structField ) ; <nl> } <nl> }
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> index 4cf03e8 . . 50dfd1e 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ import java . io . FileNotFoundException ; <nl> import java . io . FileOutputStream ; <nl> import java . io . IOException ; <nl> <nl> + import com . sun . jna . Native ; <nl> import com . sun . jna . platform . win32 . OaIdl . TYPEKIND ; <nl> import com . sun . jna . platform . win32 . COM . TypeLibUtil ; <nl> import com . sun . jna . platform . win32 . COM . TypeLibUtil . TypeLibDoc ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java <nl> index 9ecf1c6 . . 5903e2f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java <nl> @ @ - 52 , 8 + 52 , 8 @ @ public class TlbFunction extends TlbAbstractMethod implements Variant { <nl> <nl> String methodparams = " " ; <nl> String methodvariables = " " ; <nl> - short vtableId = funcDesc . oVft ; <nl> - short paramCount = funcDesc . cParams ; <nl> + int vtableId = funcDesc . oVft ; <nl> + int paramCount = funcDesc . cParams ; <nl> ELEMDESC elemDesdRetType = funcDesc . elemdescFunc ; <nl> String returnType = this . getType ( elemDesdRetType . tdesc ) ; <nl> String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java <nl> index 812a9f7 . . caa7ab9 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java <nl> @ @ - 56 , 8 + 56 , 8 @ @ public class TlbFunctionStub extends TlbAbstractMethod implements Variant { <nl> <nl> String methodparams = " " ; <nl> String methodvariables = " " ; <nl> - short vtableId = funcDesc . oVft ; <nl> - short paramCount = funcDesc . cParams ; <nl> + int vtableId = funcDesc . oVft ; <nl> + int paramCount = funcDesc . cParams ; <nl> ELEMDESC elemDesdRetType = funcDesc . elemdescFunc ; <nl> String returnType = this . getType ( elemDesdRetType . tdesc ) ; <nl> String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java <nl> index 37ce566 . . 4556168 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java <nl> @ @ - 47 , 7 + 47 , 7 @ @ public class TlbPropertyGet extends TlbAbstractMethod implements Variant { <nl> super ( index , typeLibUtil , funcDesc , typeInfoUtil ) ; <nl> <nl> this . methodName = " get " + this . getMethodName ( ) ; <nl> - short vtableId = funcDesc . oVft ; <nl> + int vtableId = funcDesc . oVft ; <nl> String returnType = this . getType ( funcDesc ) ; <nl> <nl> this . replaceVariable ( " helpstring " , docStr ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java <nl> index 190c62e . . 3969ffb 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java <nl> @ @ - 53 , 7 + 53 , 7 @ @ public class TlbPropertyGetStub extends TlbAbstractMethod implements Variant { <nl> TypeInfoDoc typeInfoDoc = typeInfoUtil . getDocumentation ( funcDesc . memid ) ; <nl> String docStr = typeInfoDoc . getDocString ( ) ; <nl> String methodname = " get " + typeInfoDoc . getName ( ) ; <nl> - short vtableId = funcDesc . oVft ; <nl> + int vtableId = funcDesc . oVft ; <nl> String returnType = this . getType ( funcDesc ) ; <nl> <nl> this . replaceVariable ( " helpstring " , docStr ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java <nl> index c6be7c2 . . aaaced6 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java <nl> @ @ - 53 , 8 + 53 , 8 @ @ public class TlbPropertyPut extends TlbAbstractMethod implements Variant { <nl> this . methodName = " set " + getMethodName ( ) ; <nl> String methodparams = " " ; <nl> String methodvariables = " , " ; <nl> - short vtableId = funcDesc . oVft ; <nl> - short paramCount = funcDesc . cParams ; <nl> + int vtableId = funcDesc . oVft ; <nl> + int paramCount = funcDesc . cParams ; <nl> String varType ; <nl> String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java <nl> index 2746ae1 . . 14b8025 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java <nl> @ @ - 54 , 8 + 54 , 8 @ @ public class TlbPropertyPutStub extends TlbAbstractMethod implements Variant { <nl> String docStr = typeInfoDoc . getDocString ( ) ; <nl> String methodname = " set " + typeInfoDoc . getName ( ) ; <nl> String methodparams = " " ; <nl> - short vtableId = funcDesc . oVft ; <nl> - short paramCount = funcDesc . cParams ; <nl> + int vtableId = funcDesc . oVft ; <nl> + int paramCount = funcDesc . cParams ; <nl> String varType ; <nl> String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> index edd2ddf . . aaf8cc6 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> @ @ - 786 , 13 + 786 , 13 @ @ public interface OaIdl { <nl> public INVOKEKIND invkind ; <nl> / / / C type : CALLCONV <nl> public CALLCONV callconv ; <nl> - public short cParams ; <nl> - public short cParamsOpt ; <nl> - public short oVft ; <nl> - public short cScodes ; <nl> + public int cParams ; <nl> + public int cParamsOpt ; <nl> + public int oVft ; <nl> + public int cScodes ; <nl> / / / C type : ELEMDESC <nl> public ELEMDESC elemdescFunc ; <nl> - public short wFuncFlags ; <nl> + public int wFuncFlags ; <nl> <nl> public FUNCDESC ( ) { <nl> } <nl> @ @ - 808 , 7 + 808 , 7 @ @ public interface OaIdl { <nl> } <nl> <nl> @ Override <nl> - protected List getFieldOrder ( ) { <nl> + protected List < String > getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " memid " , " lprgscode " , <nl> " lprgelemdescParam " , " funckind " , " invkind " , " callconv " , <nl> " cParams " , " cParamsOpt " , " oVft " , " cScodes " , " elemdescFunc " , <nl> @ @ - 1116 , 7 + 1116 , 7 @ @ public interface OaIdl { <nl> } <nl> <nl> @ Override <nl> - protected List getFieldOrder ( ) { <nl> + protected List < String > getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " value " } ) ; <nl> } <nl> } ; <nl> diff - - git a / hs _ err _ pid8924 . log b / hs _ err _ pid8924 . log <nl> new file mode 100644 <nl> index 0000000 . . 4f1ebef <nl> - - - / dev / null <nl> + + + b / hs _ err _ pid8924 . log <nl> @ @ - 0 , 0 + 1 , 345 @ @ <nl> + # <nl> + # A fatal error has been detected by the Java Runtime Environment : <nl> + # <nl> + # EXCEPTION _ ACCESS _ VIOLATION ( 0xc0000005 ) at pc = 0x187f6731 , pid = 8924 , tid = 8748 <nl> + # <nl> + # JRE version : 7 . 0 _ 17 - b02 <nl> + # Java VM : Java HotSpot ( TM ) Client VM ( 23 . 7 - b01 mixed mode windows - x86 ) <nl> + # Problematic frame : <nl> + # C [ jna1538475758625816562 . dll + 0x6731 ] Java _ com _ sun _ jna _ Native _ getInt + 0x21 <nl> + # <nl> + # Failed to write core dump . Minidumps are not enabled by default on client versions of Windows <nl> + # <nl> + # If you would like to submit a bug report , please visit : <nl> + # http : / / bugreport . sun . com / bugreport / crash . jsp <nl> + # The crash happened outside the Java Virtual Machine in native code . <nl> + # See problematic frame for where to report the bug . <nl> + # <nl> + <nl> + - - - - - - - - - - - - - - - T H R E A D - - - - - - - - - - - - - - - <nl> + <nl> + Current thread ( 0x00ddc000 ) : JavaThread " main " [ _ thread _ in _ native , id = 8748 , stack ( 0x00e80000 , 0x00ed0000 ) ] <nl> + <nl> + siginfo : ExceptionCode = 0xc0000005 , reading address 0x0065006a <nl> + <nl> + Registers : <nl> + EAX = 0x0065006a , EBX = 0x1486f2a0 , ECX = 0x00ddc128 , EDX = 0x00000000 <nl> + ESP = 0x00ece620 , EBP = 0x00ece6e8 , ESI = 0x1486f2a0 , EDI = 0x00ddc000 <nl> + EIP = 0x187f6731 , EFLAGS = 0x00010246 <nl> + <nl> + Top of Stack : ( sp = 0x00ece620 ) <nl> + 0x00ece620 : 5a60549c 0000000e 00ddc000 00000000 <nl> + 0x00ece630 : 00ece654 00ece65c 00000000 00000000 <nl> + 0x00ece640 : 00000001 00ddc000 5a555d65 00ddc000 <nl> + 0x00ece650 : 00ddc7d0 00cddc10 00ddc3b0 00ddc3b8 <nl> + 0x00ece660 : 00ddc7a4 00cddc10 00ddc7c4 00000000 <nl> + 0x00ece670 : 00ddc7d0 5a55c64f 00ddc000 00ddc7c8 <nl> + 0x00ece680 : 00000001 00ddc301 00cddc10 00ddc3b0 <nl> + 0x00ece690 : 00ddc3b8 00ddc7a4 00000000 00ddc128 <nl> + <nl> + Instructions : ( pc = 0x187f6731 ) <nl> + 0x187f6711 : 31 c0 89 e5 81 ec c8 00 00 00 89 85 54 ff ff ff <nl> + 0x187f6721 : a1 00 40 80 18 31 d2 85 c0 75 4c 8b 45 10 85 d2 <nl> + 0x187f6731 : 8b 00 89 85 54 ff ff ff 74 1d b8 08 51 80 18 b9 <nl> + 0x187f6741 : 29 50 80 18 89 44 24 08 8b 45 08 89 4c 24 04 89 <nl> + <nl> + <nl> + Register to memory mapping : <nl> + <nl> + EAX = 0x0065006a is an unknown value <nl> + EBX = 0x1486f2a0 is an oop <nl> + { method } <nl> + - klass : { other class } <nl> + ECX = 0x00ddc128 is an unknown value <nl> + EDX = 0x00000000 is an unknown value <nl> + ESP = 0x00ece620 is pointing into the stack for thread : 0x00ddc000 <nl> + EBP = 0x00ece6e8 is pointing into the stack for thread : 0x00ddc000 <nl> + ESI = 0x1486f2a0 is an oop <nl> + { method } <nl> + - klass : { other class } <nl> + EDI = 0x00ddc000 is a thread <nl> + <nl> + <nl> + Stack : [ 0x00e80000 , 0x00ed0000 ] , sp = 0x00ece620 , free space = 313k <nl> + Native frames : ( J = compiled Java code , j = interpreted , Vv = VM code , C = native code ) <nl> + C [ jna1538475758625816562 . dll + 0x6731 ] Java _ com _ sun _ jna _ Native _ getInt + 0x21 <nl> + j com . sun . jna . Native . getInt ( J ) I + 0 <nl> + j com . sun . jna . Pointer . getInt ( J ) I + 6 <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + j com . sun . jna . Structure . conditionalAutoRead ( ) V + 8 <nl> + j com . sun . jna . Structure . updateStructureByReference ( Ljava / lang / Class ; Lcom / sun / jna / Structure ; Lcom / sun / jna / Pointer ; ) Lcom / sun / jna / Structure ; + 68 <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + j com . sun . jna . Structure . conditionalAutoRead ( ) V + 8 <nl> + j com . sun . jna . Structure . updateStructureByReference ( Ljava / lang / Class ; Lcom / sun / jna / Structure ; Lcom / sun / jna / Pointer ; ) Lcom / sun / jna / Structure ; + 68 <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + j com . sun . jna . platform . win32 . COM . TypeInfoUtil . getFuncDesc ( I ) Lcom / sun / jna / platform / win32 / OaIdl $ FUNCDESC ; + 40 <nl> + j com . sun . jna . platform . win32 . COM . tlb . imp . TlbDispInterface . < init > ( ILjava / lang / String ; Lcom / sun / jna / platform / win32 / COM / TypeLibUtil ; ) V + 136 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . createCOMDispInterface ( ILjava / lang / String ; Lcom / sun / jna / platform / win32 / COM / TypeLibUtil ; ) V + 7 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . startCOM2Java ( ) V + 123 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . < init > ( [ Ljava / lang / String ; ) V + 116 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . main ( [ Ljava / lang / String ; ) V + 4 <nl> + v ~ StubRoutines : : call _ stub <nl> + V [ jvm . dll + 0x12a34a ] <nl> + V [ jvm . dll + 0x1d968e ] <nl> + V [ jvm . dll + 0x12a3cd ] <nl> + V [ jvm . dll + 0xaede4 ] <nl> + V [ jvm . dll + 0xb9157 ] <nl> + C [ javaw . exe + 0x206c ] <nl> + C [ javaw . exe + 0xa5a1 ] <nl> + C [ javaw . exe + 0xa62b ] <nl> + C [ kernel32 . dll + 0x133aa ] BaseThreadInitThunk + 0x12 <nl> + C [ ntdll . dll + 0x39ef2 ] RtlInitializeExceptionChain + 0x63 <nl> + C [ ntdll . dll + 0x39ec5 ] RtlInitializeExceptionChain + 0x36 <nl> + <nl> + Java frames : ( J = compiled Java code , j = interpreted , Vv = VM code ) <nl> + j com . sun . jna . Native . getInt ( J ) I + 0 <nl> + j com . sun . jna . Pointer . getInt ( J ) I + 6 <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . read ( ) V <nl> + j com . sun . jna . Structure . autoRead ( ) V + 8 <nl> + j com . sun . jna . Structure . conditionalAutoRead ( ) V + 8 <nl> + j com . sun . jna . Structure . updateStructureByReference ( Ljava / lang / Class ; Lcom / sun / jna / Structure ; Lcom / sun / jna / Pointer ; ) Lcom / sun / jna / Structure ; + 68 <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . read ( ) V <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Union . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . read ( ) V <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . read ( ) V <nl> + j com . sun . jna . Pointer . readArray ( JLjava / lang / Object ; Ljava / lang / Class ; ) V + 331 <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . read ( ) V <nl> + j com . sun . jna . Structure . autoRead ( ) V + 8 <nl> + j com . sun . jna . Structure . conditionalAutoRead ( ) V + 8 <nl> + j com . sun . jna . Structure . updateStructureByReference ( Ljava / lang / Class ; Lcom / sun / jna / Structure ; Lcom / sun / jna / Pointer ; ) Lcom / sun / jna / Structure ; + 68 <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . read ( ) V <nl> + j com . sun . jna . platform . win32 . OaIdl $ FUNCDESC . < init > ( Lcom / sun / jna / Pointer ; ) V + 6 <nl> + j com . sun . jna . platform . win32 . COM . TypeInfoUtil . getFuncDesc ( I ) Lcom / sun / jna / platform / win32 / OaIdl $ FUNCDESC ; + 40 <nl> + j com . sun . jna . platform . win32 . COM . tlb . imp . TlbDispInterface . < init > ( ILjava / lang / String ; Lcom / sun / jna / platform / win32 / COM / TypeLibUtil ; ) V + 136 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . createCOMDispInterface ( ILjava / lang / String ; Lcom / sun / jna / platform / win32 / COM / TypeLibUtil ; ) V + 7 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . startCOM2Java ( ) V + 123 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . < init > ( [ Ljava / lang / String ; ) V + 116 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . main ( [ Ljava / lang / String ; ) V + 4 <nl> + v ~ StubRoutines : : call _ stub <nl> + <nl> + - - - - - - - - - - - - - - - P R O C E S S - - - - - - - - - - - - - - - <nl> + <nl> + Java Threads : ( = > current thread ) <nl> + 0x0104e800 JavaThread " Service Thread " daemon [ _ thread _ blocked , id = 6984 , stack ( 0x193a0000 , 0x193f0000 ) ] <nl> + 0x0104b400 JavaThread " C1 CompilerThread0 " daemon [ _ thread _ blocked , id = 8972 , stack ( 0x19400000 , 0x19450000 ) ] <nl> + 0x01042400 JavaThread " JDWP Command Reader " daemon [ _ thread _ in _ native , id = 6904 , stack ( 0x19350000 , 0x193a0000 ) ] <nl> + 0x01041c00 JavaThread " JDWP Event Helper Thread " daemon [ _ thread _ blocked , id = 5676 , stack ( 0x19260000 , 0x192b0000 ) ] <nl> + 0x01038c00 JavaThread " JDWP Transport Listener : dt _ socket " daemon [ _ thread _ blocked , id = 7904 , stack ( 0x18db0000 , 0x18e00000 ) ] <nl> + 0x0102dc00 JavaThread " Attach Listener " daemon [ _ thread _ blocked , id = 8612 , stack ( 0x18a50000 , 0x18aa0000 ) ] <nl> + 0x0102a400 JavaThread " Signal Dispatcher " daemon [ _ thread _ blocked , id = 9056 , stack ( 0x01230000 , 0x01280000 ) ] <nl> + 0x00fd0800 JavaThread " Finalizer " daemon [ _ thread _ blocked , id = 8304 , stack ( 0x00e20000 , 0x00e70000 ) ] <nl> + 0x00fcb000 JavaThread " Reference Handler " daemon [ _ thread _ blocked , id = 3996 , stack ( 0x18830000 , 0x18880000 ) ] <nl> + = > 0x00ddc000 JavaThread " main " [ _ thread _ in _ native , id = 8748 , stack ( 0x00e80000 , 0x00ed0000 ) ] <nl> + <nl> + Other Threads : <nl> + 0x00fc6800 VMThread [ stack : 0x187a0000 , 0x187f0000 ] [ id = 7036 ] <nl> + 0x01057800 WatcherThread [ stack : 0x190f0000 , 0x19140000 ] [ id = 2156 ] <nl> + <nl> + VM state : not at safepoint ( normal execution ) <nl> + <nl> + VM Mutex / Monitor currently owned by a thread : None <nl> + <nl> + Heap <nl> + def new generation total 4928K , used 4502K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) <nl> + eden space 4416K , 95 % used [ 0x046d0000 , 0x04aef728 , 0x04b20000 ) <nl> + from space 512K , 54 % used [ 0x04b20000 , 0x04b660e8 , 0x04ba0000 ) <nl> + to space 512K , 0 % used [ 0x04ba0000 , 0x04ba0000 , 0x04c20000 ) <nl> + tenured generation total 10944K , used 467K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) <nl> + the space 10944K , 4 % used [ 0x09c20000 , 0x09c94ee0 , 0x09c95000 , 0x0a6d0000 ) <nl> + compacting perm gen total 12288K , used 3774K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) <nl> + the space 12288K , 30 % used [ 0x146d0000 , 0x14a7f838 , 0x14a7fa00 , 0x152d0000 ) <nl> + No shared spaces configured . <nl> + <nl> + Card table byte _ map : [ 0x00f10000 , 0x00fc0000 ] byte _ map _ base : 0x00eec980 <nl> + <nl> + Polling page : 0x00130000 <nl> + <nl> + Code Cache [ 0x026d0000 , 0x027f0000 , 0x046d0000 ) <nl> + total _ blobs = 489 nmethods = 343 adapters = 88 free _ code _ cache = 31633Kb largest _ free _ block = 32392896 <nl> + <nl> + Compilation events ( 10 events ) : <nl> + Event : 0 . 594 Thread 0x0104b400 338 ! com . sun . jna . IntegerType : : fromNative ( 95 bytes ) <nl> + Event : 0 . 595 Thread 0x0104b400 nmethod 338 0x027e8008 code [ 0x027e8220 , 0x027e8930 ] <nl> + Event : 0 . 595 Thread 0x0104b400 339 com . sun . jna . Pointer : : getPointer ( 10 bytes ) <nl> + Event : 0 . 595 Thread 0x0104b400 nmethod 339 0x027e9388 code [ 0x027e9490 , 0x027e95cc ] <nl> + Event : 0 . 595 Thread 0x0104b400 340 com . sun . jna . Native : : getPointer ( 24 bytes ) <nl> + Event : 0 . 595 Thread 0x0104b400 nmethod 340 0x027e9688 code [ 0x027e9790 , 0x027e989c ] <nl> + Event : 0 . 610 Thread 0x0104b400 342 ! java . util . concurrent . ConcurrentHashMap $ Segment : : put ( 237 bytes ) <nl> + Event : 0 . 610 Thread 0x0104b400 nmethod 342 0x027e9c08 code [ 0x027e9d70 , 0x027ea258 ] <nl> + Event : 0 . 616 Thread 0x0104b400 343 com . sun . jna . Structure : : sortFields ( 87 bytes ) <nl> + Event : 0 . 617 Thread 0x0104b400 nmethod 343 0x027ea7c8 code [ 0x027ea950 , 0x027eab90 ] <nl> + <nl> + GC Heap History ( 4 events ) : <nl> + Event : 0 . 377 GC heap before <nl> + { Heap before GC invocations = 0 ( full 0 ) : <nl> + def new generation total 4928K , used 4416K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) <nl> + eden space 4416K , 100 % used [ 0x046d0000 , 0x04b20000 , 0x04b20000 ) <nl> + from space 512K , 0 % used [ 0x04b20000 , 0x04b20000 , 0x04ba0000 ) <nl> + to space 512K , 0 % used [ 0x04ba0000 , 0x04ba0000 , 0x04c20000 ) <nl> + tenured generation total 10944K , used 0K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) <nl> + the space 10944K , 0 % used [ 0x09c20000 , 0x09c20000 , 0x09c20200 , 0x0a6d0000 ) <nl> + compacting perm gen total 12288K , used 2965K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) <nl> + the space 12288K , 24 % used [ 0x146d0000 , 0x149b5468 , 0x149b5600 , 0x152d0000 ) <nl> + No shared spaces configured . <nl> + Event : 0 . 380 GC heap after <nl> + Heap after GC invocations = 1 ( full 0 ) : <nl> + def new generation total 4928K , used 499K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) <nl> + eden space 4416K , 0 % used [ 0x046d0000 , 0x046d0000 , 0x04b20000 ) <nl> + from space 512K , 97 % used [ 0x04ba0000 , 0x04c1cf68 , 0x04c20000 ) <nl> + to space 512K , 0 % used [ 0x04b20000 , 0x04b20000 , 0x04ba0000 ) <nl> + tenured generation total 10944K , used 0K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) <nl> + the space 10944K , 0 % used [ 0x09c20000 , 0x09c20000 , 0x09c20200 , 0x0a6d0000 ) <nl> + compacting perm gen total 12288K , used 2965K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) <nl> + the space 12288K , 24 % used [ 0x146d0000 , 0x149b5468 , 0x149b5600 , 0x152d0000 ) <nl> + No shared spaces configured . <nl> + } <nl> + Event : 0 . 539 GC heap before <nl> + { Heap before GC invocations = 1 ( full 0 ) : <nl> + def new generation total 4928K , used 4915K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) <nl> + eden space 4416K , 100 % used [ 0x046d0000 , 0x04b20000 , 0x04b20000 ) <nl> + from space 512K , 97 % used [ 0x04ba0000 , 0x04c1cf68 , 0x04c20000 ) <nl> + to space 512K , 0 % used [ 0x04b20000 , 0x04b20000 , 0x04ba0000 ) <nl> + tenured generation total 10944K , used 0K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) <nl> + the space 10944K , 0 % used [ 0x09c20000 , 0x09c20000 , 0x09c20200 , 0x0a6d0000 ) <nl> + compacting perm gen total 12288K , used 3719K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) <nl> + the space 12288K , 30 % used [ 0x146d0000 , 0x14a71e80 , 0x14a72000 , 0x152d0000 ) <nl> + No shared spaces configured . <nl> + Event : 0 . 544 GC heap after <nl> + Heap after GC invocations = 2 ( full 0 ) : <nl> + def new generation total 4928K , used 280K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) <nl> + eden space 4416K , 0 % used [ 0x046d0000 , 0x046d0000 , 0x04b20000 ) <nl> + from space 512K , 54 % used [ 0x04b20000 , 0x04b660e8 , 0x04ba0000 ) <nl> + to space 512K , 0 % used [ 0x04ba0000 , 0x04ba0000 , 0x04c20000 ) <nl> + tenured generation total 10944K , used 467K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) <nl> + the space 10944K , 4 % used [ 0x09c20000 , 0x09c94ee0 , 0x09c95000 , 0x0a6d0000 ) <nl> + compacting perm gen total 12288K , used 3719K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) <nl> + the space 12288K , 30 % used [ 0x146d0000 , 0x14a71e80 , 0x14a72000 , 0x152d0000 ) <nl> + No shared spaces configured . <nl> + } <nl> + <nl> + Deoptimization events ( 0 events ) : <nl> + No events <nl> + <nl> + Internal exceptions ( 10 events ) : <nl> + Event : 0 . 612 Thread 0x00ddc000 Threw 0x04a91a38 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 612 Thread 0x00ddc000 Threw 0x04a94998 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 612 Thread 0x00ddc000 Threw 0x04a97bb0 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 613 Thread 0x00ddc000 Threw 0x04a9aef0 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 613 Thread 0x00ddc000 Threw 0x04a9e090 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 614 Thread 0x00ddc000 Threw 0x04aa38f0 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 617 Thread 0x00ddc000 Threw 0x04abc610 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 617 Thread 0x00ddc000 Threw 0x04abfbc8 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 618 Thread 0x00ddc000 Threw 0x04ac4e20 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 619 Thread 0x00ddc000 Threw 0x04acb2e0 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + <nl> + Events ( 10 events ) : <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027de5dc sp = 0x00eccd50 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00eccc88 mode 1 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027bfab0 sp = 0x00ece0b0 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00ecdfb8 mode 1 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027de5dc sp = 0x00ece120 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00ece058 mode 1 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027bfab0 sp = 0x00eccc00 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00eccb08 mode 1 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027de5dc sp = 0x00eccc70 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00eccba8 mode 1 <nl> + <nl> + <nl> + Dynamic libraries : <nl> + 0x012a0000 - 0x012cf000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ bin \ javaw . exe <nl> + 0x77490000 - 0x77610000 	 C : \ Windows \ SysWOW64 \ ntdll . dll <nl> + 0x76f60000 - 0x77070000 	 C : \ Windows \ syswow64 \ kernel32 . dll <nl> + 0x75080000 - 0x750c7000 	 C : \ Windows \ syswow64 \ KERNELBASE . dll <nl> + 0x76cc0000 - 0x76d60000 	 C : \ Windows \ syswow64 \ ADVAPI32 . dll <nl> + 0x76a70000 - 0x76b1c000 	 C : \ Windows \ syswow64 \ msvcrt . dll <nl> + 0x77070000 - 0x77089000 	 C : \ Windows \ SysWOW64 \ sechost . dll <nl> + 0x76840000 - 0x76930000 	 C : \ Windows \ syswow64 \ RPCRT4 . dll <nl> + 0x74ff0000 - 0x75050000 	 C : \ Windows \ syswow64 \ SspiCli . dll <nl> + 0x74fe0000 - 0x74fec000 	 C : \ Windows \ syswow64 \ CRYPTBASE . dll <nl> + 0x76970000 - 0x76a70000 	 C : \ Windows \ syswow64 \ USER32 . dll <nl> + 0x76b90000 - 0x76c20000 	 C : \ Windows \ syswow64 \ GDI32 . dll <nl> + 0x76cb0000 - 0x76cba000 	 C : \ Windows \ syswow64 \ LPK . dll <nl> + 0x76e30000 - 0x76ecd000 	 C : \ Windows \ syswow64 \ USP10 . dll <nl> + 0x725f0000 - 0x7278e000 	 C : \ Windows \ WinSxS \ x86 _ microsoft . windows . common - controls _ 6595b64144ccf1df _ 6 . 0 . 7601 . 17514 _ none _ 41e6975e2bd6f2b2 \ COMCTL32 . dll <nl> + 0x75310000 - 0x75367000 	 C : \ Windows \ syswow64 \ SHLWAPI . dll <nl> + 0x76b20000 - 0x76b80000 	 C : \ Windows \ system32 \ IMM32 . DLL <nl> + 0x756a0000 - 0x7576c000 	 C : \ Windows \ syswow64 \ MSCTF . dll <nl> + 0x5e5d0000 - 0x5e68e000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ msvcr100 . dll <nl> + 0x5a4d0000 - 0x5a81c000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ client \ jvm . dll <nl> + 0x72550000 - 0x72557000 	 C : \ Windows \ system32 \ WSOCK32 . dll <nl> + 0x76d60000 - 0x76d95000 	 C : \ Windows \ syswow64 \ WS2 _ 32 . dll <nl> + 0x75790000 - 0x75796000 	 C : \ Windows \ syswow64 \ NSI . dll <nl> + 0x72510000 - 0x72542000 	 C : \ Windows \ system32 \ WINMM . dll <nl> + 0x76930000 - 0x76935000 	 C : \ Windows \ syswow64 \ PSAPI . DLL <nl> + 0x6f760000 - 0x6f76c000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ verify . dll <nl> + 0x5e730000 - 0x5e750000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ java . dll <nl> + 0x5e6c0000 - 0x5e6ea000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ jdwp . dll <nl> + 0x60ac0000 - 0x60ac7000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ npt . dll <nl> + 0x5e5b0000 - 0x5e5c3000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ zip . dll <nl> + 0x5e7c0000 - 0x5e7c8000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ dt _ socket . dll <nl> + 0x721f0000 - 0x72200000 	 C : \ Windows \ system32 \ NLAapi . dll <nl> + 0x71f90000 - 0x71fa0000 	 C : \ Windows \ system32 \ napinsp . dll <nl> + 0x71f70000 - 0x71f82000 	 C : \ Windows \ system32 \ pnrpnsp . dll <nl> + 0x71f30000 - 0x71f6c000 	 C : \ Windows \ System32 \ mswsock . dll <nl> + 0x72330000 - 0x72374000 	 C : \ Windows \ system32 \ DNSAPI . dll <nl> + 0x721e0000 - 0x721e8000 	 C : \ Windows \ System32 \ winrnr . dll <nl> + 0x71f20000 - 0x71f2d000 	 C : \ Windows \ system32 \ wshbth . dll <nl> + 0x72310000 - 0x7232c000 	 C : \ Windows \ system32 \ IPHLPAPI . DLL <nl> + 0x72300000 - 0x72307000 	 C : \ Windows \ system32 \ WINNSI . DLL <nl> + 0x71ee0000 - 0x71f18000 	 C : \ Windows \ System32 \ fwpuclnt . dll <nl> + 0x71ed0000 - 0x71ed6000 	 C : \ Windows \ system32 \ rasadhlp . dll <nl> + 0x71dc0000 - 0x71dc5000 	 C : \ Windows \ System32 \ wshtcpip . dll <nl> + 0x73750000 - 0x73766000 	 C : \ Windows \ system32 \ CRYPTSP . dll <nl> + 0x73710000 - 0x7374b000 	 C : \ Windows \ system32 \ rsaenh . dll <nl> + 0x725d0000 - 0x725e7000 	 C : \ Windows \ system32 \ USERENV . dll <nl> + 0x725c0000 - 0x725cb000 	 C : \ Windows \ system32 \ profapi . dll <nl> + 0x5e590000 - 0x5e5a4000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ net . dll <nl> + 0x71930000 - 0x71936000 	 C : \ Windows \ System32 \ wship6 . dll <nl> + 0x5e6b0000 - 0x5e6be000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ nio . dll <nl> + 0x187f0000 - 0x1882d000 	 C : \ Users \ twolf10 \ AppData \ Local \ Temp \ jna - - 911058587 \ jna1538475758625816562 . dll <nl> + 0x76ed0000 - 0x76f5f000 	 C : \ Windows \ syswow64 \ OleAut32 . dll <nl> + 0x75540000 - 0x7569c000 	 C : \ Windows \ syswow64 \ ole32 . dll <nl> + 0x72380000 - 0x723df000 	 C : \ Windows \ system32 \ SXS . DLL <nl> + 0x6bfb0000 - 0x6c09b000 	 C : \ Windows \ system32 \ dbghelp . dll <nl> + <nl> + VM Arguments : <nl> + jvm _ args : - agentlib : jdwp = transport = dt _ socket , suspend = y , address = localhost : 37591 - Djna . dump _ memory = true - Djna . debug _ load = true - Djna . debug _ load . jna = true - Dfile . encoding = Cp1252 <nl> + java _ command : com . sun . jna . platform . win32 . COM . tlb . TlbImp - tlb . file shell32 . dll <nl> + Launcher Type : SUN _ STANDARD <nl> + <nl> + Environment Variables : <nl> + JAVA _ HOME = C : \ Program Files \ Java \ jdk1 . 7 . 0 _ 17 <nl> + JRE _ HOME = C : \ Program Files \ Java \ jre7 <nl> + PATH = C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin ; C : \ Windows \ system32 ; C : \ Windows ; C : \ Windows \ System32 \ Wbem ; C : \ Windows \ System32 \ WindowsPowerShell \ v1 . 0 \ ; C : \ Windows \ SysWOW64 \ Empirum ; C : \ Program Files ( x86 ) \ Intel \ OpenCL SDK \ 2 . 0 \ bin \ x86 ; C : \ Program Files ( x86 ) \ Intel \ OpenCL SDK \ 2 . 0 \ bin \ x64 ; C : \ Program Files \ WIDCOMM \ Bluetooth Software \ ; C : \ Program Files \ WIDCOMM \ Bluetooth Software \ syswow64 ; C : \ Program Files \ T - Systems \ Global Remote ; C : \ Program Files ( x86 ) \ Innovator \ 11 _ 2 _ 2 \ inoexe ; C : \ Program Files \ TortoiseSVN \ bin ; C : \ Program Files \ Microsoft \ Web Platform Installer \ ; C : \ Program Files ( x86 ) \ Microsoft ASP . NET \ ASP . NET Web Pages \ v1 . 0 \ ; C : \ Program Files ( x86 ) \ Windows Kits \ 8 . 0 \ Windows Performance Toolkit \ ; C : \ Program Files \ Microsoft SQL Server \ 110 \ Tools \ Binn \ ; C : \ Program Files ( x86 ) \ Inno Setup 5 ; C : \ Program Files ( x86 ) \ WiX Toolset v3 . 7 \ bin <nl> + USERNAME = twolf10 <nl> + OS = Windows _ NT <nl> + PROCESSOR _ IDENTIFIER = Intel64 Family 6 Model 58 Stepping 9 , GenuineIntel <nl> + <nl> + <nl> + <nl> + - - - - - - - - - - - - - - - S Y S T E M - - - - - - - - - - - - - - - <nl> + <nl> + OS : Windows 7 , 64 bit Build 7601 Service Pack 1 <nl> + <nl> + CPU : total 4 ( 2 cores per cpu , 2 threads per core ) family 6 model 58 stepping 9 , cmov , cx8 , fxsr , mmx , sse , sse2 , sse3 , ssse3 , sse4 . 1 , sse4 . 2 , popcnt , avx , ht , tsc , tscinvbit , tscinv <nl> + <nl> + Memory : 4k page , physical 8259456k ( 4613224k free ) , swap 16517052k ( 12509656k free ) <nl> + <nl> + vm _ info : Java HotSpot ( TM ) Client VM ( 23 . 7 - b01 ) for windows - x86 JRE ( 1 . 7 . 0 _ 17 - b02 ) , built on Mar 1 2013 05 : 04 : 36 by " java _ re " with unknown MS VC + + : 1600 <nl> + <nl> + time : Mon Aug 19 14 : 32 : 31 2013 <nl> + elapsed time : 0 seconds <nl> + <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index c7c4f17 . . c1d5224 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 533 , 7 + 533 , 10 @ @ public abstract class Structure { <nl> } <nl> try { <nl> for ( Iterator i = fields ( ) . values ( ) . iterator ( ) ; i . hasNext ( ) ; ) { <nl> - readField ( ( StructField ) i . next ( ) ) ; <nl> + StructField structField = ( StructField ) i . next ( ) ; <nl> + System . out . println ( structField . name ) ; <nl> + System . out . println ( structField . type . toString ( ) ) ; <nl> + readField ( structField ) ; <nl> } <nl> } <nl> finally {
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> index 00edf9e . . edd2ddf 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> @ @ - 450 , 7 + 450 , 7 @ @ public interface OaIdl { <nl> public PVOID pvData ; <nl> <nl> / * * The rgsabound . * / <nl> - public SAFEARRAYBOUND [ ] rgsabound ; <nl> + public SAFEARRAYBOUND [ ] rgsabound = { new SAFEARRAYBOUND ( ) } ; <nl> <nl> public SAFEARRAY ( ) { <nl> } <nl> @ @ - 821 , 7 + 821 , 7 @ @ public interface OaIdl { <nl> Structure . ByReference { <nl> } <nl> <nl> - public ELEMDESC [ ] elemDescArg ; <nl> + public ELEMDESC [ ] elemDescArg = { new ELEMDESC ( ) } ; <nl> <nl> public ElemDescArg ( ) { <nl> } <nl> @ @ - 842 , 7 + 842 , 7 @ @ public interface OaIdl { <nl> Structure . ByReference { <nl> } <nl> <nl> - public SCODE [ ] scodeArg ; <nl> + public SCODE [ ] scodeArg = { new SCODE ( ) } ; <nl> <nl> public ScodeArg ( ) { <nl> } <nl> @ @ - 1271 , 7 + 1271 , 7 @ @ public interface OaIdl { <nl> * [ size _ is ] < br > <nl> * C type : SAFEARRAYBOUND [ 1 ] <nl> * / <nl> - public SAFEARRAYBOUND [ ] rgbounds ; <nl> + public SAFEARRAYBOUND [ ] rgbounds = { new SAFEARRAYBOUND ( ) } ; <nl> <nl> public ARRAYDESC ( ) { <nl> super ( ) ; <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java <nl> index 6022d35 . . 18fae17 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / TypeLibUtilTest . java <nl> @ @ - 14 , 7 + 14 , 9 @ @ package com . sun . jna . platform . win32 . COM ; <nl> <nl> import junit . framework . TestCase ; <nl> <nl> + import com . sun . jna . platform . win32 . COM . TypeInfoUtil . TypeInfoDoc ; <nl> import com . sun . jna . platform . win32 . OaIdl . FUNCDESC ; <nl> + import com . sun . jna . platform . win32 . OaIdl . MEMBERID ; <nl> import com . sun . jna . platform . win32 . OaIdl . TYPEATTR ; <nl> <nl> / * * <nl> @ @ - 41 , 14 + 43 , 27 @ @ public class TypeLibUtilTest extends TestCase { <nl> <nl> public void testGetTypeInfo ( ) { <nl> TypeLibUtil shellTypeLib = loadShellTypeLib ( ) ; <nl> - ITypeInfo typeInfo = shellTypeLib . getTypeInfo ( 0 ) ; <nl> - TypeInfoUtil typeInfoUtil = new TypeInfoUtil ( typeInfo ) ; <nl> - <nl> - TYPEATTR typeAttr = typeInfoUtil . getTypeAttr ( ) ; <nl> - int cFuncs = typeAttr . cFuncs . intValue ( ) ; <nl> - <nl> - for ( int i = 0 ; i < cFuncs ; i + + ) { <nl> - FUNCDESC funcDesc = typeInfoUtil . getFuncDesc ( i ) ; <nl> + int typeInfoCount = shellTypeLib . getTypeInfoCount ( ) ; <nl> + <nl> + for ( int i = 0 ; i < typeInfoCount ; i + + ) <nl> + { <nl> + ITypeInfo typeInfo = shellTypeLib . getTypeInfo ( i ) ; <nl> + TypeInfoUtil typeInfoUtil = new TypeInfoUtil ( typeInfo ) ; <nl> + <nl> + TYPEATTR typeAttr = typeInfoUtil . getTypeAttr ( ) ; <nl> + int cFuncs = typeAttr . cFuncs . intValue ( ) ; <nl> + <nl> + for ( int y = 0 ; y < cFuncs ; y + + ) { <nl> + / / Get the function description <nl> + FUNCDESC funcDesc = typeInfoUtil . getFuncDesc ( y ) ; <nl> + / / Get the member ID <nl> + MEMBERID memberID = funcDesc . memid ; <nl> + / / Get the name of the method <nl> + TypeInfoDoc typeInfoDoc2 = typeInfoUtil . getDocumentation ( memberID ) ; <nl> + String methodName = typeInfoDoc2 . getName ( ) ; <nl> + assertNotNull ( methodName ) ; <nl> + typeInfoUtil . ReleaseFuncDesc ( funcDesc ) ; <nl> + } <nl> } <nl> } <nl> }
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> index 5573342 . . 00edf9e 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> @ @ - 348 , 7 + 348 , 7 @ @ public interface OaIdl { <nl> public static class ByReference extends TYPEKIND implements <nl> Structure . ByReference { <nl> public ByReference ( ) { <nl> - / / TODO Auto - generated constructor stub <nl> + <nl> } <nl> <nl> public ByReference ( int value ) { <nl> @ @ - 450 , 7 + 450 , 7 @ @ public interface OaIdl { <nl> public PVOID pvData ; <nl> <nl> / * * The rgsabound . * / <nl> - public SAFEARRAYBOUND [ ] rgsabound = new SAFEARRAYBOUND [ 1 ] ; <nl> + public SAFEARRAYBOUND [ ] rgsabound ; <nl> <nl> public SAFEARRAY ( ) { <nl> } <nl> @ @ - 821 , 11 + 821 , 16 @ @ public interface OaIdl { <nl> Structure . ByReference { <nl> } <nl> <nl> - public ELEMDESC [ ] elemDescArg = new ELEMDESC [ ] { new ELEMDESC ( ) } ; <nl> + public ELEMDESC [ ] elemDescArg ; <nl> <nl> public ElemDescArg ( ) { <nl> } <nl> <nl> + public ElemDescArg ( Pointer pointer ) { <nl> + super ( pointer ) ; <nl> + this . read ( ) ; <nl> + } <nl> + <nl> @ Override <nl> protected List getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " elemDescArg " } ) ; <nl> @ @ - 837 , 11 + 842 , 16 @ @ public interface OaIdl { <nl> Structure . ByReference { <nl> } <nl> <nl> - public SCODE [ ] scodeArg = new SCODE [ ] { new SCODE ( ) } ; <nl> + public SCODE [ ] scodeArg ; <nl> <nl> public ScodeArg ( ) { <nl> } <nl> <nl> + public ScodeArg ( Pointer pointer ) { <nl> + super ( pointer ) ; <nl> + this . read ( ) ; <nl> + } <nl> + <nl> @ Override <nl> protected List getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " scodeArg " } ) ; <nl> @ @ - 1261 , 7 + 1271 , 7 @ @ public interface OaIdl { <nl> * [ size _ is ] < br > <nl> * C type : SAFEARRAYBOUND [ 1 ] <nl> * / <nl> - public SAFEARRAYBOUND [ ] rgbounds = new SAFEARRAYBOUND [ 1 ] ; <nl> + public SAFEARRAYBOUND [ ] rgbounds ; <nl> <nl> public ARRAYDESC ( ) { <nl> super ( ) ;
diff - - git a / . classpath b / . classpath <nl> index 072ed7a . . 02f4747 100644 <nl> - - - a / . classpath <nl> + + + b / . classpath <nl> @ @ - 7 , 6 + 7 , 6 @ @ <nl> 	 < classpathentry kind = " con " path = " org . eclipse . jdt . launching . JRE _ CONTAINER " / > <nl> 	 < classpathentry kind = " con " path = " org . eclipse . jdt . junit . JUNIT _ CONTAINER / 3 " / > <nl> 	 < classpathentry kind = " lib " path = " lib / test / reflections - 0 . 9 . 8 . jar " / > <nl> - 	 < classpathentry kind = " lib " path = " C : / GitHub / jna - 4 . 0 . 0 . jar " sourcepath = " " / > <nl> + 	 < classpathentry kind = " var " path = " JNA _ LIB " / > <nl> 	 < classpathentry kind = " output " path = " build . eclipse / classes " / > <nl> < / classpath > <nl> diff - - git a / . settings / org . eclipse . jdt . core . prefs b / . settings / org . eclipse . jdt . core . prefs <nl> deleted file mode 100644 <nl> index ac99b29 . . 0000000 <nl> - - - a / . settings / org . eclipse . jdt . core . prefs <nl> + + + / dev / null <nl> @ @ - 1 , 62 + 0 , 0 @ @ <nl> - # Wed Aug 29 20 : 43 : 29 EDT 2007 <nl> - eclipse . preferences . version = 1 <nl> - org . eclipse . jdt . core . compiler . codegen . inlineJsrBytecode = enabled <nl> - org . eclipse . jdt . core . compiler . codegen . targetPlatform = 1 . 5 <nl> - org . eclipse . jdt . core . compiler . codegen . unusedLocal = preserve <nl> - org . eclipse . jdt . core . compiler . compliance = 1 . 5 <nl> - org . eclipse . jdt . core . compiler . debug . lineNumber = generate <nl> - org . eclipse . jdt . core . compiler . debug . localVariable = generate <nl> - org . eclipse . jdt . core . compiler . debug . sourceFile = generate <nl> - org . eclipse . jdt . core . compiler . problem . annotationSuperInterface = warning <nl> - org . eclipse . jdt . core . compiler . problem . assertIdentifier = error <nl> - org . eclipse . jdt . core . compiler . problem . autoboxing = ignore <nl> - org . eclipse . jdt . core . compiler . problem . deprecation = warning <nl> - org . eclipse . jdt . core . compiler . problem . deprecationInDeprecatedCode = disabled <nl> - org . eclipse . jdt . core . compiler . problem . deprecationWhenOverridingDeprecatedMethod = enabled <nl> - org . eclipse . jdt . core . compiler . problem . discouragedReference = warning <nl> - org . eclipse . jdt . core . compiler . problem . emptyStatement = ignore <nl> - org . eclipse . jdt . core . compiler . problem . enumIdentifier = error <nl> - org . eclipse . jdt . core . compiler . problem . fallthroughCase = ignore <nl> - org . eclipse . jdt . core . compiler . problem . fieldHiding = ignore <nl> - org . eclipse . jdt . core . compiler . problem . finalParameterBound = warning <nl> - org . eclipse . jdt . core . compiler . problem . finallyBlockNotCompletingNormally = warning <nl> - org . eclipse . jdt . core . compiler . problem . forbiddenReference = error <nl> - org . eclipse . jdt . core . compiler . problem . hiddenCatchBlock = warning <nl> - org . eclipse . jdt . core . compiler . problem . incompatibleNonInheritedInterfaceMethod = warning <nl> - org . eclipse . jdt . core . compiler . problem . incompleteEnumSwitch = ignore <nl> - org . eclipse . jdt . core . compiler . problem . indirectStaticAccess = ignore <nl> - org . eclipse . jdt . core . compiler . problem . localVariableHiding = ignore <nl> - org . eclipse . jdt . core . compiler . problem . methodWithConstructorName = warning <nl> - org . eclipse . jdt . core . compiler . problem . missingDeprecatedAnnotation = ignore <nl> - org . eclipse . jdt . core . compiler . problem . missingOverrideAnnotation = ignore <nl> - org . eclipse . jdt . core . compiler . problem . missingSerialVersion = ignore <nl> - org . eclipse . jdt . core . compiler . problem . noEffectAssignment = warning <nl> - org . eclipse . jdt . core . compiler . problem . noImplicitStringConversion = warning <nl> - org . eclipse . jdt . core . compiler . problem . nonExternalizedStringLiteral = ignore <nl> - org . eclipse . jdt . core . compiler . problem . nullReference = ignore <nl> - org . eclipse . jdt . core . compiler . problem . overridingPackageDefaultMethod = warning <nl> - org . eclipse . jdt . core . compiler . problem . parameterAssignment = ignore <nl> - org . eclipse . jdt . core . compiler . problem . possibleAccidentalBooleanAssignment = ignore <nl> - org . eclipse . jdt . core . compiler . problem . rawTypeReference = ignore <nl> - org . eclipse . jdt . core . compiler . problem . specialParameterHidingField = disabled <nl> - org . eclipse . jdt . core . compiler . problem . staticAccessReceiver = ignore <nl> - org . eclipse . jdt . core . compiler . problem . suppressWarnings = enabled <nl> - org . eclipse . jdt . core . compiler . problem . syntheticAccessEmulation = ignore <nl> - org . eclipse . jdt . core . compiler . problem . typeParameterHiding = warning <nl> - org . eclipse . jdt . core . compiler . problem . uncheckedTypeOperation = ignore <nl> - org . eclipse . jdt . core . compiler . problem . undocumentedEmptyBlock = ignore <nl> - org . eclipse . jdt . core . compiler . problem . unhandledWarningToken = warning <nl> - org . eclipse . jdt . core . compiler . problem . unnecessaryElse = ignore <nl> - org . eclipse . jdt . core . compiler . problem . unnecessaryTypeCheck = warning <nl> - org . eclipse . jdt . core . compiler . problem . unqualifiedFieldAccess = ignore <nl> - org . eclipse . jdt . core . compiler . problem . unusedDeclaredThrownException = ignore <nl> - org . eclipse . jdt . core . compiler . problem . unusedDeclaredThrownExceptionWhenOverriding = enabled <nl> - org . eclipse . jdt . core . compiler . problem . unusedImport = ignore <nl> - org . eclipse . jdt . core . compiler . problem . unusedLabel = warning <nl> - org . eclipse . jdt . core . compiler . problem . unusedLocal = warning <nl> - org . eclipse . jdt . core . compiler . problem . unusedParameter = ignore <nl> - org . eclipse . jdt . core . compiler . problem . unusedParameterWhenImplementingAbstract = disabled <nl> - org . eclipse . jdt . core . compiler . problem . unusedParameterWhenOverridingConcrete = disabled <nl> - org . eclipse . jdt . core . compiler . problem . unusedPrivateMember = warning <nl> - org . eclipse . jdt . core . compiler . problem . varargsArgumentNeedCast = warning <nl> - org . eclipse . jdt . core . compiler . source = 1 . 5 <nl> diff - - git a / . settings / org . eclipse . ltk . core . refactoring . prefs b / . settings / org . eclipse . ltk . core . refactoring . prefs <nl> deleted file mode 100644 <nl> index bdbdc6d . . 0000000 <nl> - - - a / . settings / org . eclipse . ltk . core . refactoring . prefs <nl> + + + / dev / null <nl> @ @ - 1 , 3 + 0 , 0 @ @ <nl> - # Tue Mar 27 21 : 18 : 08 EDT 2007 <nl> - eclipse . preferences . version = 1 <nl> - org . eclipse . ltk . core . refactoring . enable . project . refactoring . history = false <nl> diff - - git a / contrib / msoffice / . classpath b / contrib / msoffice / . classpath <nl> index 20091ab . . 8648c07 100644 <nl> - - - a / contrib / msoffice / . classpath <nl> + + + b / contrib / msoffice / . classpath <nl> @ @ - 3 , 6 + 3 , 6 @ @ <nl> 	 < classpathentry kind = " src " path = " src " / > <nl> 	 < classpathentry kind = " con " path = " org . eclipse . jdt . launching . JRE _ CONTAINER / org . eclipse . jdt . internal . debug . ui . launcher . StandardVMType / JavaSE - 1 . 7 " / > <nl> 	 < classpathentry combineaccessrules = " false " kind = " src " path = " / jnalib " / > <nl> - 	 < classpathentry kind = " lib " path = " C : / GitHub / jna - 4 . 0 . 0 . jar " sourcepath = " / jnalib " / > <nl> + 	 < classpathentry kind = " var " path = " JNA _ LIB " / > <nl> 	 < classpathentry kind = " output " path = " bin " / > <nl> < / classpath > <nl> diff - - git a / contrib / msoffice / . settings / org . eclipse . core . resources . prefs b / contrib / msoffice / . settings / org . eclipse . core . resources . prefs <nl> deleted file mode 100644 <nl> index 9f69f01 . . 0000000 <nl> - - - a / contrib / msoffice / . settings / org . eclipse . core . resources . prefs <nl> + + + / dev / null <nl> @ @ - 1 , 2 + 0 , 0 @ @ <nl> - eclipse . preferences . version = 1 <nl> - encoding / / src / com / sun / jna / platform / win32 / office / MSWord . java = UTF - 8 <nl> diff - - git a / contrib / msoffice / . settings / org . eclipse . ltk . core . refactoring . prefs b / contrib / msoffice / . settings / org . eclipse . ltk . core . refactoring . prefs <nl> deleted file mode 100644 <nl> index b196c64 . . 0000000 <nl> - - - a / contrib / msoffice / . settings / org . eclipse . ltk . core . refactoring . prefs <nl> + + + / dev / null <nl> @ @ - 1 , 2 + 0 , 0 @ @ <nl> - eclipse . preferences . version = 1 <nl> - org . eclipse . ltk . core . refactoring . enable . project . refactoring . history = false <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> index 904146e . . bed397a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> @ @ - 36 , 9 + 36 , 6 @ @ public class COMEarlyBindingObject extends Dispatch { <nl> <nl> public COMEarlyBindingObject ( CLSID clsid , boolean useActiveInstance , <nl> int dwClsContext ) { <nl> - / / enable JNA protected mode <nl> - Native . setProtected ( true ) ; <nl> - <nl> / / Initialize COM for this thread . . . <nl> HRESULT hr = Ole32 . INSTANCE . CoInitialize ( null ) ; <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingBaseObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingBaseObject . java <nl> index 6a0398b . . c7460e2 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingBaseObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingBaseObject . java <nl> @ @ - 62 , 8 + 62 , 6 @ @ public class COMLateBindingBaseObject extends COMInvoker { <nl> private PointerByReference pUnknown = new PointerByReference ( ) ; <nl> <nl> public COMLateBindingBaseObject ( IDispatch dispatch ) { <nl> - / / enable JNA protected mode <nl> - Native . setProtected ( true ) ; <nl> / / transfer the value <nl> this . iDispatch = dispatch ; <nl> } <nl> @ @ - 74 , 9 + 72 , 6 @ @ public class COMLateBindingBaseObject extends COMInvoker { <nl> <nl> public COMLateBindingBaseObject ( CLSID clsid , boolean useActiveInstance , <nl> int dwClsContext ) { <nl> - / / enable JNA protected mode <nl> - Native . setProtected ( true ) ; <nl> - <nl> / / Initialize COM for this thread . . . <nl> HRESULT hr = Ole32 . INSTANCE . CoInitialize ( null ) ; <nl> <nl> @ @ - 116 , 9 + 111 , 6 @ @ public class COMLateBindingBaseObject extends COMInvoker { <nl> <nl> public COMLateBindingBaseObject ( String progId , boolean useActiveInstance , <nl> int dwClsContext ) throws COMException { <nl> - / / enable JNA protected mode <nl> - Native . setProtected ( true ) ; <nl> - <nl> / / Initialize COM for this thread . . . <nl> HRESULT hr = Ole32 . INSTANCE . CoInitialize ( null ) ; <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> index 715820c . . 992f0aa 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> @ @ - 61 , 7 + 61 , 6 @ @ public class TlbImp implements TlbConst { <nl> } <nl> <nl> public TlbImp ( String [ ] args ) { <nl> - Native . setProtected ( true ) ; <nl> this . cmdlineArgs = new TlbCmdlineArgs ( args ) ; <nl> <nl> if ( this . cmdlineArgs . isTlbId ( ) ) { <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java <nl> index 4e022a6 . . f13d669 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java <nl> @ @ - 37 , 7 + 37 , 6 @ @ public class COMTest extends TestCase { <nl> 	 } <nl> <nl> 	 public COMTest ( ) { <nl> - 	 	 Native . setProtected ( true ) ; <nl> 	 } <nl> <nl> 	 @ Override <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> index 74dd254 . . ac5ae3a 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> @ @ - 39 , 7 + 39 , 6 @ @ public class ITypeInfoTest extends TestCase { <nl> } <nl> <nl> public ITypeInfoTest ( ) { <nl> - Native . setProtected ( true ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java <nl> index 2a32b48 . . 8e585cb 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java <nl> @ @ - 40 , 7 + 40 , 6 @ @ public class ITypeLibTest extends TestCase { <nl> } <nl> <nl> public ITypeLibTest ( ) { <nl> - Native . setProtected ( true ) ; <nl> } <nl> <nl> private ITypeLib loadShellTypeLib ( ) { <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / IUnknownTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / IUnknownTest . java <nl> index b57bb67 . . b86d91c 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / IUnknownTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / IUnknownTest . java <nl> @ @ - 33 , 8 + 33 , 6 @ @ public class IUnknownTest extends TestCase { <nl> 	 @ Override <nl> 	 protected void setUp ( ) throws Exception { <nl> 	 	 super . setUp ( ) ; <nl> - <nl> - 	 	 Native . setProtected ( true ) ; <nl> 	 	 System . out . println ( " JNA protected mode : " + Native . isProtected ( ) ) ; <nl> <nl> 	 	 / / Initialize COM for this thread . . . <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java <nl> index c312f38 . . 749aa4b 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java <nl> @ @ - 31 , 12 + 31 , 10 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> public class OleAutoTest extends TestCase { <nl> <nl> 	 public static void main ( String [ ] args ) { <nl> - 	 	 Native . setProtected ( true ) ; <nl> 	 	 junit . textui . TestRunner . run ( OleAutoTest . class ) ; <nl> 	 } <nl> <nl> 	 public OleAutoTest ( ) { <nl> - 	 	 Native . setProtected ( true ) ; <nl> 	 } <nl> <nl> 	 public void testSysAllocString ( ) { <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java <nl> index 0a1460f . . 9d82e26 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java <nl> @ @ - 17 , 7 + 17 , 6 @ @ public class VariantTest extends TestCase { <nl> 	 } <nl> <nl> 	 public VariantTest ( ) { <nl> - 	 	 Native . setProtected ( true ) ; <nl> 	 } <nl> <nl> 	 public void testVariantClear ( ) {
diff - - git a / . classpath b / . classpath <nl> index a7adb7c . . 70b83eb 100644 <nl> - - - a / . classpath <nl> + + + b / . classpath <nl> @ @ - 7 , 6 + 7 , 5 @ @ <nl> 	 < classpathentry kind = " con " path = " org . eclipse . jdt . launching . JRE _ CONTAINER " / > <nl> 	 < classpathentry kind = " con " path = " org . eclipse . jdt . junit . JUNIT _ CONTAINER / 3 " / > <nl> 	 < classpathentry kind = " lib " path = " lib / test / reflections - 0 . 9 . 8 . jar " / > <nl> - 	 < classpathentry kind = " lib " path = " C : / GitHub / jna - 3 . 5 . 1 . jar " / > <nl> 	 < classpathentry kind = " output " path = " build . eclipse / classes " / > <nl> < / classpath > <nl> diff - - git a / contrib / msoffice / . classpath b / contrib / msoffice / . classpath <nl> index 716f1a2 . . 20091ab 100644 <nl> - - - a / contrib / msoffice / . classpath <nl> + + + b / contrib / msoffice / . classpath <nl> @ @ - 3 , 6 + 3 , 6 @ @ <nl> 	 < classpathentry kind = " src " path = " src " / > <nl> 	 < classpathentry kind = " con " path = " org . eclipse . jdt . launching . JRE _ CONTAINER / org . eclipse . jdt . internal . debug . ui . launcher . StandardVMType / JavaSE - 1 . 7 " / > <nl> 	 < classpathentry combineaccessrules = " false " kind = " src " path = " / jnalib " / > <nl> - 	 < classpathentry kind = " lib " path = " C : / GitHub / jna - 4 . 0 . 0 . jar " / > <nl> + 	 < classpathentry kind = " lib " path = " C : / GitHub / jna - 4 . 0 . 0 . jar " sourcepath = " / jnalib " / > <nl> 	 < classpathentry kind = " output " path = " bin " / > <nl> < / classpath > <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> index 5573342 . . f3a1281 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> @ @ - 799 , 6 + 799 , 7 @ @ public interface OaIdl { <nl> <nl> public FUNCDESC ( Pointer pointer ) { <nl> super ( pointer ) ; <nl> + System . out . println ( this . toString ( ) ) ; <nl> this . read ( ) ; <nl> <nl> if ( this . cParams > 1 ) { <nl> diff - - git a / dist / win32 - x86 - 64 . jar b / dist / win32 - x86 - 64 . jar <nl> index 87cf836 . . 173b808 100644 <nl> Binary files a / dist / win32 - x86 - 64 . jar and b / dist / win32 - x86 - 64 . jar differ
diff - - git a / CHANGES . md b / CHANGES . md <nl> index e2ca4ba . . d6da2d0 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 9 , 6 + 9 , 7 @ @ Features <nl> - - - - - - - - <nl> * Add ` com . sun . jna . platform . win32 . Advapi32Util . registryCloseKey ` - [ @ falldog ] ( https : / / github . com / falldog ) . <nl> * Enable platform tests to be run w / o building native bits - [ @ twall ] ( https : / / github . com / twall ) <nl> + * COM / Typelib java code generator ` com . sun . jna . platform . win32 . COM . tlb . TlbImp ` [ @ wolftobias ] <nl> <nl> Bug Fixes <nl> - - - - - - - - -
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibUtil . java <nl> index 571c6ce . . dfe2db1 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibUtil . java <nl> @ @ - 89 , 6 + 89 , 18 @ @ public class TypeLibUtil { <nl> this . initTypeLibInfo ( ) ; <nl> } <nl> <nl> + public TypeLibUtil ( String file ) { <nl> + / / load typelib <nl> + PointerByReference pTypeLib = new PointerByReference ( ) ; <nl> + HRESULT hr = OleAuto . INSTANCE . LoadTypeLib ( new WString ( file ) , pTypeLib ) ; <nl> + COMUtils . checkTypeLibRC ( hr ) ; <nl> + <nl> + / / init type lib class <nl> + this . typelib = new TypeLib ( pTypeLib . getValue ( ) ) ; <nl> + <nl> + this . initTypeLibInfo ( ) ; <nl> + } <nl> + <nl> / * * <nl> * Inits the type lib info . <nl> * / <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> index 18b8f7b . . 1ebb291 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> @ @ - 14 , 11 + 14 , 12 @ @ package com . sun . jna . platform . win32 . COM . tlb ; <nl> <nl> import java . io . File ; <nl> import java . io . FileNotFoundException ; <nl> - import java . io . FileOutputStream ; <nl> import java . io . IOException ; <nl> import java . io . RandomAccessFile ; <nl> + import java . net . URL ; <nl> import java . nio . ByteBuffer ; <nl> import java . nio . channels . FileChannel ; <nl> + import java . util . Enumeration ; <nl> <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . platform . win32 . OaIdl . TYPEKIND ; <nl> @ @ - 58 , 27 + 59 , 36 @ @ public class TlbImp implements TlbConst { <nl> } <nl> <nl> public TlbImp ( String [ ] args ) { <nl> + Native . setProtected ( true ) ; <nl> this . cmdlineArgs = new TlbCmdlineArgs ( args ) ; <nl> <nl> - String clsid = this . cmdlineArgs . getParam ( CMD _ ARG _ TYPELIB _ ID ) ; <nl> - int majorVersion = this . cmdlineArgs <nl> - . getIntParam ( CMD _ ARG _ TYPELIB _ MAJOR _ VERSION ) ; <nl> - int minorVersion = this . cmdlineArgs <nl> - . getIntParam ( CMD _ ARG _ TYPELIB _ MINOR _ VERSION ) ; <nl> + if ( this . cmdlineArgs . isTlbId ( ) ) { <nl> + String clsid = this . cmdlineArgs . getParam ( CMD _ ARG _ TYPELIB _ ID ) ; <nl> + int majorVersion = this . cmdlineArgs <nl> + . getIntParam ( CMD _ ARG _ TYPELIB _ MAJOR _ VERSION ) ; <nl> + int minorVersion = this . cmdlineArgs <nl> + . getIntParam ( CMD _ ARG _ TYPELIB _ MINOR _ VERSION ) ; <nl> <nl> - this . startCOM2Java ( clsid , majorVersion , minorVersion ) ; <nl> - Native . setProtected ( true ) ; <nl> + / / initialize typelib <nl> + / / check version numbers with registry entries ! ! ! <nl> + this . typeLibUtil = new TypeLibUtil ( clsid , majorVersion , <nl> + minorVersion ) ; <nl> + this . startCOM2Java ( ) ; <nl> + } else if ( this . cmdlineArgs . isTlbFile ( ) ) { <nl> + String file = this . cmdlineArgs . getParam ( CMD _ ARG _ TYPELIB _ FILE ) ; <nl> + / / initialize typelib <nl> + / / check version numbers with registry entries ! ! ! <nl> + this . typeLibUtil = new TypeLibUtil ( file ) ; <nl> + this . startCOM2Java ( ) ; <nl> + } else <nl> + this . cmdlineArgs . showCmdHelp ( ) ; <nl> } <nl> <nl> / * * <nl> * Start startCOM2Java . <nl> * / <nl> - public void startCOM2Java ( String clsid , int majorVersion , int minorVersion ) { <nl> + public void startCOM2Java ( ) { <nl> try { <nl> - / / initialize typelib <nl> - / / check version numbers with registry entries ! ! ! <nl> - this . typeLibUtil = new TypeLibUtil ( clsid , majorVersion , <nl> - minorVersion ) ; <nl> / / create output Dir <nl> this . createDir ( ) ; <nl> <nl> @ @ - 139 , 11 + 149 , 12 @ @ public class TlbImp implements TlbConst { <nl> private void writeTextFile ( String filename , String str ) throws IOException { <nl> String file = this . comRootDir + File . separator + filename ; <nl> FileChannel rwChannel = new RandomAccessFile ( file , " rw " ) . getChannel ( ) ; <nl> - ByteBuffer wrBuf = rwChannel . map ( FileChannel . MapMode . READ _ WRITE , 0 , str . length ( ) ) ; <nl> + ByteBuffer wrBuf = rwChannel . map ( FileChannel . MapMode . READ _ WRITE , 0 , <nl> + str . length ( ) ) ; <nl> <nl> wrBuf . put ( str . getBytes ( ) ) ; <nl> <nl> - rwChannel . close ( ) ; <nl> + rwChannel . close ( ) ; <nl> } <nl> <nl> private void writeTlbClass ( TlbBase tlbBase ) throws IOException { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCmdlineArgs . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCmdlineArgs . java <nl> index 98127b8 . . 527074d 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCmdlineArgs . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCmdlineArgs . java <nl> @ @ - 6 , 7 + 6 , 7 @ @ public class TlbCmdlineArgs extends Hashtable < String , String > implements <nl> TlbConst { <nl> <nl> public TlbCmdlineArgs ( String [ ] args ) { <nl> - this . scanCmdArgs ( args ) ; <nl> + this . readCmdArgs ( args ) ; <nl> } <nl> <nl> public int getIntParam ( String key ) { <nl> @ @ - 22 , 11 + 22 , 41 @ @ public class TlbCmdlineArgs extends Hashtable < String , String > implements <nl> return param ; <nl> } <nl> <nl> - private void scanCmdArgs ( String [ ] args ) { <nl> + private void readCmdArgs ( String [ ] args ) { <nl> + if ( args . length < 2 ) <nl> + this . showCmdHelp ( ) ; <nl> + <nl> for ( int i = 0 ; i < args . length ; i + + ) { <nl> - if ( args [ i ] . startsWith ( " - " ) ) { <nl> + String cmd = args [ i ] ; <nl> + if ( cmd . startsWith ( " - " ) ) { <nl> this . put ( args [ i ] . substring ( 1 ) , args [ i + 1 ] ) ; <nl> } <nl> } <nl> } <nl> + <nl> + public boolean isTlbFile ( ) { <nl> + return this . containsKey ( CMD _ ARG _ TYPELIB _ FILE ) ; <nl> + } <nl> + <nl> + public boolean isTlbId ( ) { <nl> + return this . containsKey ( CMD _ ARG _ TYPELIB _ ID ) ; <nl> + } <nl> + <nl> + public void showCmdHelp ( ) { <nl> + String helpStr = " usage : TlbImp [ - tlb . id - tlb . major . version - tlb . minor . version ] [ - tlb . file ] " + CRCR + <nl> + " options : " + CR + <nl> + " - tlb . id The guid of the type library . " + CR + <nl> + " - tlb . major . version The major version of the type library . " + CR + <nl> + " - tlb . minor . version The minor version of the type library . " + CR + <nl> + " - tlb . file The file name containing the type library . " + CRCR + <nl> + " samples : " + CR + <nl> + " Microsoft Shell Controls And Automation : " + CR + <nl> + " - tlb . file shell32 . dll " + CR + <nl> + " - tlb . id { 50A7E9B0 - 70EF - 11D1 - B75A - 00A0C90564FE } - tlb . major . version 1 - tlb . minor . version 0 " + CRCR + <nl> + " Microsoft Word 12 . 0 Object Library : " + CR + <nl> + " - tlb . id { 00020905 - 0000 - 0000 - C000 - 000000000046 } - tlb . major . version 8 - tlb . minor . version 4 " + CRCR ; <nl> + <nl> + System . out . println ( helpStr ) ; <nl> + System . exit ( 0 ) ; <nl> + } <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbConst . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbConst . java <nl> index 6a438fe . . f70d35f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbConst . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbConst . java <nl> @ @ - 8 , 6 + 8 , 10 @ @ public interface TlbConst { <nl> <nl> public final static String TYPELIB _ ID _ SHELL = " { 50A7E9B0 - 70EF - 11D1 - B75A - 00A0C90564FE } " ; <nl> <nl> + public final static String TYPELIB _ MAJOR _ VERSION _ SHELL = " 1 " ; <nl> + <nl> + public final static String TYPELIB _ MINOR _ VERSION _ SHELL = " 0 " ; <nl> + <nl> public final static String TYPELIB _ ID _ WORD = " { 00020905 - 0000 - 0000 - C000 - 000000000046 } " ; <nl> <nl> public final static String TYPELIB _ MAJOR _ VERSION _ WORD = " 8 " ; <nl> @ @ - 26 , 4 + 30 , 5 @ @ public interface TlbConst { <nl> <nl> public final static String CMD _ ARG _ TYPELIB _ MINOR _ VERSION = " tlb . minor . version " ; <nl> <nl> + public final static String CMD _ ARG _ TYPELIB _ FILE = " tlb . file " ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OleAuto . java b / contrib / platform / src / com / sun / jna / platform / win32 / OleAuto . java <nl> index 7d10ba0 . . 49c1a00 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OleAuto . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OleAuto . java <nl> @ @ - 471 , 7 + 471 , 7 @ @ public interface OleAuto extends StdCallLibrary { <nl> 	 * TYPE _ E _ CANTLOADLIBRARY The type library or DLL could not be <nl> 	 * loaded . <nl> 	 * / <nl> - 	 public HRESULT LoadTypeLib ( WString szFile , TypeLib . ByReference pptlib ) ; <nl> + 	 public HRESULT LoadTypeLib ( WString szFile , PointerByReference pptlib ) ; <nl> <nl> 	 / * * <nl> 	 * Converts a system time to a variant representation .
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> index 8432025 . . b97c0b5 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - ﻿ / * Copyright ( c ) 2010 Daniel Doubrovkine , All Rights Reserved <nl> + / * Copyright ( c ) 2010 Daniel Doubrovkine , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 40 , 71 + 40 , 71 @ @ public class Advapi32UtilTest extends TestCase { <nl> System . out . println ( " GetUserName : " + currentUserName ) ; <nl> 	 	 <nl> for ( Account group : Advapi32Util . getCurrentUserGroups ( ) ) { <nl> - 	 	 	 System . out . println ( " " + group . fqn + " [ " + group . sidString + " ] " ) ; <nl> - 	 	 } <nl> + System . out . println ( " " + group . fqn + " [ " + group . sidString + " ] " ) ; <nl> + } <nl> 	 	 <nl> - 	 	 Account accountByName = Advapi32Util . getAccountByName ( currentUserName ) ; <nl> - 	 	 System . out . println ( " AccountByName : " + currentUserName ) ; <nl> + Account accountByName = Advapi32Util . getAccountByName ( currentUserName ) ; <nl> + System . out . println ( " AccountByName : " + currentUserName ) ; <nl> System . out . println ( " Fqn : " + accountByName . fqn ) ; <nl> System . out . println ( " Domain : " + accountByName . domain ) ; <nl> System . out . println ( " Sid : " + accountByName . sidString ) ; <nl> <nl> Account accountBySid = Advapi32Util . getAccountBySid ( new PSID ( accountByName . sid ) ) ; <nl> - 	 	 System . out . println ( " AccountBySid : " + accountByName . sidString ) ; <nl> + System . out . println ( " AccountBySid : " + accountByName . sidString ) ; <nl> System . out . println ( " Fqn : " + accountBySid . fqn ) ; <nl> System . out . println ( " Name : " + accountBySid . name ) ; <nl> System . out . println ( " Domain : " + accountBySid . domain ) ; <nl> } <nl> <nl> - 	 public void testGetUsername ( ) { <nl> - 	 	 String username = Advapi32Util . getUserName ( ) ; <nl> - 	 	 assertTrue ( username . length ( ) > 0 ) ; <nl> - 	 } <nl> + public void testGetUsername ( ) { <nl> + String username = Advapi32Util . getUserName ( ) ; <nl> + assertTrue ( username . length ( ) > 0 ) ; <nl> + } <nl> 	 <nl> - 	 public void testGetAccountBySid ( ) { 	 	 <nl> - 	 	 String accountName = Advapi32Util . getUserName ( ) ; <nl> - 	 	 Account currentUser = Advapi32Util . getAccountByName ( accountName ) ; <nl> - 	 	 Account account = Advapi32Util . getAccountBySid ( new PSID ( currentUser . sid ) ) ; <nl> - 	 	 assertEquals ( SID _ NAME _ USE . SidTypeUser , account . accountType ) ; <nl> - 	 	 assertEquals ( currentUser . fqn . toLowerCase ( ) , account . fqn . toLowerCase ( ) ) ; <nl> - 	 	 assertEquals ( currentUser . name . toLowerCase ( ) , account . name . toLowerCase ( ) ) ; <nl> - 	 	 assertEquals ( currentUser . domain . toLowerCase ( ) , account . domain . toLowerCase ( ) ) ; <nl> - 	 	 assertEquals ( currentUser . sidString , account . sidString ) ; 	 	 <nl> - 	 } <nl> + public void testGetAccountBySid ( ) { 	 	 <nl> + String accountName = Advapi32Util . getUserName ( ) ; <nl> + Account currentUser = Advapi32Util . getAccountByName ( accountName ) ; <nl> + Account account = Advapi32Util . getAccountBySid ( new PSID ( currentUser . sid ) ) ; <nl> + assertEquals ( SID _ NAME _ USE . SidTypeUser , account . accountType ) ; <nl> + assertEquals ( currentUser . fqn . toLowerCase ( ) , account . fqn . toLowerCase ( ) ) ; <nl> + assertEquals ( currentUser . name . toLowerCase ( ) , account . name . toLowerCase ( ) ) ; <nl> + assertEquals ( currentUser . domain . toLowerCase ( ) , account . domain . toLowerCase ( ) ) ; <nl> + assertEquals ( currentUser . sidString , account . sidString ) ; 	 	 <nl> + } <nl> <nl> - 	 public void testGetAccountByName ( ) { 	 	 <nl> - 	 	 String accountName = Advapi32Util . getUserName ( ) ; <nl> - 	 	 Account account = Advapi32Util . getAccountByName ( accountName ) ; <nl> - 	 	 assertEquals ( SID _ NAME _ USE . SidTypeUser , account . accountType ) ; <nl> - 	 } <nl> + public void testGetAccountByName ( ) { 	 	 <nl> + String accountName = Advapi32Util . getUserName ( ) ; <nl> + Account account = Advapi32Util . getAccountByName ( accountName ) ; <nl> + assertEquals ( SID _ NAME _ USE . SidTypeUser , account . accountType ) ; <nl> + } <nl> 	 <nl> - 	 public void testGetAccountNameFromSid ( ) { <nl> + public void testGetAccountNameFromSid ( ) { <nl> assertEquals ( " Everyone " , Advapi32Util . getAccountBySid ( " S - 1 - 1 - 0 " ) . name ) ; 	 	 <nl> - 	 } <nl> + } <nl> <nl> - 	 public void testGetAccountSidFromName ( ) { <nl> + public void testGetAccountSidFromName ( ) { <nl> assertEquals ( " S - 1 - 1 - 0 " , Advapi32Util . getAccountByName ( " Everyone " ) . sidString ) ; <nl> - 	 } <nl> + } <nl> 	 <nl> - 	 public void testConvertSid ( ) { <nl> + public void testConvertSid ( ) { <nl> 	 String sidString = " S - 1 - 1 - 0 " ; / / Everyone <nl> 	 byte [ ] sidBytes = Advapi32Util . convertStringSidToSid ( sidString ) ; <nl> 	 assertTrue ( sidBytes . length > 0 ) ; <nl> 	 String convertedSidString = Advapi32Util . convertSidToStringSid ( new PSID ( sidBytes ) ) ; <nl> 	 assertEquals ( convertedSidString , sidString ) ; <nl> - 	 } <nl> + } <nl> 	 <nl> - 	 public void testGetCurrentUserGroups ( ) { <nl> - 	 	 Account [ ] groups = Advapi32Util . getCurrentUserGroups ( ) ; <nl> - 	 	 assertTrue ( groups . length > 0 ) ; <nl> - 	 	 for ( Account group : groups ) { <nl> - 	 	 	 assertTrue ( group . name . length ( ) > 0 ) ; <nl> - 	 	 	 assertTrue ( group . sidString . length ( ) > 0 ) ; <nl> - 	 	 	 assertTrue ( group . sid . length > 0 ) ; <nl> - 	 	 } <nl> - 	 } <nl> + public void testGetCurrentUserGroups ( ) { <nl> + Account [ ] groups = Advapi32Util . getCurrentUserGroups ( ) ; <nl> + assertTrue ( groups . length > 0 ) ; <nl> + for ( Account group : groups ) { <nl> + assertTrue ( group . name . length ( ) > 0 ) ; <nl> + assertTrue ( group . sidString . length ( ) > 0 ) ; <nl> + assertTrue ( group . sid . length > 0 ) ; <nl> + } <nl> + } <nl> 	 <nl> - 	 public void testGetUserGroups ( ) { <nl> + public void testGetUserGroups ( ) { <nl> 	 USER _ INFO _ 1 userInfo = new USER _ INFO _ 1 ( ) ; <nl> 	 userInfo . usri1 _ name = new WString ( " JNANetapi32TestUser " ) ; <nl> 	 userInfo . usri1 _ password = new WString ( " ! JNAP $ $ Wrd0 " ) ; <nl> @ @ - 113 , 32 + 113 , 32 @ @ public class Advapi32UtilTest extends TestCase { <nl> if ( LMErr . NERR _ Success ! = Netapi32 . INSTANCE . NetUserAdd ( null , 1 , userInfo , null ) ) { <nl> return ; <nl> } <nl> - 	 	 try { <nl> - 	 	 	 HANDLEByReference phUser = new HANDLEByReference ( ) ; <nl> - 	 	 	 try { <nl> - 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , <nl> - 	 	 	 	 	 	 null , userInfo . usri1 _ password . toString ( ) , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> - 	 	 	 	 	 	 WinBase . LOGON32 _ PROVIDER _ DEFAULT , phUser ) ) ; <nl> - 	 	 	 	 Account [ ] groups = Advapi32Util . getTokenGroups ( phUser . getValue ( ) ) ; <nl> - 	 	 	 	 assertTrue ( groups . length > 0 ) ; <nl> - 	 	 	 	 for ( Account group : groups ) { <nl> - 	 	 	 	 	 assertTrue ( group . name . length ( ) > 0 ) ; <nl> - 	 	 	 	 	 assertTrue ( group . sidString . length ( ) > 0 ) ; <nl> - 	 	 	 	 	 assertTrue ( group . sid . length > 0 ) ; <nl> - 	 	 	 	 } <nl> - 	 	 	 } finally { <nl> - 	 	 	 	 if ( phUser . getValue ( ) ! = WinBase . INVALID _ HANDLE _ VALUE ) { <nl> - 	 	 	 	 	 Kernel32 . INSTANCE . CloseHandle ( phUser . getValue ( ) ) ; <nl> - 	 	 	 	 } 	 	 	 	 <nl> - 	 	 	 } <nl> - 	 	 } finally { <nl> - assertEquals ( " Error in NetUserDel " , <nl> - LMErr . NERR _ Success , <nl> - Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name . toString ( ) ) ) ; 	 	 	 <nl> - 	 	 } <nl> - 	 } <nl> + try { <nl> + HANDLEByReference phUser = new HANDLEByReference ( ) ; <nl> + try { <nl> + assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , <nl> + null , userInfo . usri1 _ password . toString ( ) , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> + WinBase . LOGON32 _ PROVIDER _ DEFAULT , phUser ) ) ; <nl> + Account [ ] groups = Advapi32Util . getTokenGroups ( phUser . getValue ( ) ) ; <nl> + assertTrue ( groups . length > 0 ) ; <nl> + for ( Account group : groups ) { <nl> + assertTrue ( group . name . length ( ) > 0 ) ; <nl> + assertTrue ( group . sidString . length ( ) > 0 ) ; <nl> + assertTrue ( group . sid . length > 0 ) ; <nl> + } <nl> + } finally { <nl> + if ( phUser . getValue ( ) ! = WinBase . INVALID _ HANDLE _ VALUE ) { <nl> + Kernel32 . INSTANCE . CloseHandle ( phUser . getValue ( ) ) ; <nl> + } 	 	 	 	 <nl> + } <nl> + } finally { <nl> + assertEquals ( " Error in NetUserDel " , <nl> + LMErr . NERR _ Success , <nl> + Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name . toString ( ) ) ) ; 	 	 	 <nl> + } <nl> + } <nl> 	 <nl> - 	 public void testGetUserAccount ( ) { <nl> + public void testGetUserAccount ( ) { <nl> 	 USER _ INFO _ 1 userInfo = new USER _ INFO _ 1 ( ) ; <nl> 	 userInfo . usri1 _ name = new WString ( " JNANetapi32TestUser " ) ; <nl> 	 userInfo . usri1 _ password = new WString ( " ! JNAP $ $ Wrd0 " ) ; <nl> @ @ - 147 , 197 + 147 , 197 @ @ public class Advapi32UtilTest extends TestCase { <nl> if ( LMErr . NERR _ Success ! = Netapi32 . INSTANCE . NetUserAdd ( null , 1 , userInfo , null ) ) { <nl> return ; <nl> } <nl> - 	 	 try { <nl> - 	 	 	 HANDLEByReference phUser = new HANDLEByReference ( ) ; <nl> - 	 	 	 try { <nl> - 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , <nl> - 	 	 	 	 	 	 null , userInfo . usri1 _ password . toString ( ) , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> - 	 	 	 	 	 	 WinBase . LOGON32 _ PROVIDER _ DEFAULT , phUser ) ) ; <nl> - 	 	 	 	 Advapi32Util . Account account = Advapi32Util . getTokenAccount ( phUser . getValue ( ) ) ; <nl> - 	 	 	 	 assertTrue ( account . name . length ( ) > 0 ) ; <nl> - 	 	 	 	 assertEquals ( userInfo . usri1 _ name . toString ( ) , account . name ) ; <nl> - 	 	 	 } finally { <nl> - 	 	 	 	 if ( phUser . getValue ( ) ! = WinBase . INVALID _ HANDLE _ VALUE ) { <nl> - 	 	 	 	 	 Kernel32 . INSTANCE . CloseHandle ( phUser . getValue ( ) ) ; <nl> - 	 	 	 	 } <nl> - 	 	 	 } <nl> - 	 	 } finally { <nl> - 	 	 assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( <nl> - 	 	 	 	 null , userInfo . usri1 _ name . toString ( ) ) ) ; 	 	 	 <nl> - 	 	 } <nl> - 	 } 	 <nl> + try { <nl> + HANDLEByReference phUser = new HANDLEByReference ( ) ; <nl> + try { <nl> + assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , <nl> + null , userInfo . usri1 _ password . toString ( ) , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> + WinBase . LOGON32 _ PROVIDER _ DEFAULT , phUser ) ) ; <nl> + Advapi32Util . Account account = Advapi32Util . getTokenAccount ( phUser . getValue ( ) ) ; <nl> + assertTrue ( account . name . length ( ) > 0 ) ; <nl> + assertEquals ( userInfo . usri1 _ name . toString ( ) , account . name ) ; <nl> + } finally { <nl> + if ( phUser . getValue ( ) ! = WinBase . INVALID _ HANDLE _ VALUE ) { <nl> + Kernel32 . INSTANCE . CloseHandle ( phUser . getValue ( ) ) ; <nl> + } <nl> + } <nl> + } finally { <nl> + assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( <nl> + null , userInfo . usri1 _ name . toString ( ) ) ) ; 	 	 	 <nl> + } <nl> + } 	 <nl> 	 <nl> - 	 public void testRegistryKeyExists ( ) { <nl> - 	 	 assertTrue ( Advapi32Util . registryKeyExists ( WinReg . HKEY _ LOCAL _ MACHINE , <nl> - 	 	 	 	 " " ) ) ; <nl> - 	 	 assertTrue ( Advapi32Util . registryKeyExists ( WinReg . HKEY _ LOCAL _ MACHINE , <nl> - 	 	 	 	 " Software \ \ Microsoft " ) ) ; <nl> - 	 	 assertFalse ( Advapi32Util . registryKeyExists ( WinReg . HKEY _ LOCAL _ MACHINE , <nl> - 	 	 	 	 " KeyDoesNotExist \ \ SubKeyDoesNotExist " ) ) ; <nl> - 	 } <nl> + public void testRegistryKeyExists ( ) { <nl> + assertTrue ( Advapi32Util . registryKeyExists ( WinReg . HKEY _ LOCAL _ MACHINE , <nl> + " " ) ) ; <nl> + assertTrue ( Advapi32Util . registryKeyExists ( WinReg . HKEY _ LOCAL _ MACHINE , <nl> + " Software \ \ Microsoft " ) ) ; <nl> + assertFalse ( Advapi32Util . registryKeyExists ( WinReg . HKEY _ LOCAL _ MACHINE , <nl> + " KeyDoesNotExist \ \ SubKeyDoesNotExist " ) ) ; <nl> + } <nl> 	 <nl> - 	 public void testRegistryValueExists ( ) { <nl> - 	 	 assertFalse ( Advapi32Util . registryValueExists ( WinReg . HKEY _ LOCAL _ MACHINE , <nl> - 	 	 	 	 " Software \ \ Microsoft " , " " ) ) ; <nl> - 	 	 assertFalse ( Advapi32Util . registryValueExists ( WinReg . HKEY _ LOCAL _ MACHINE , <nl> - 	 	 	 	 " Software \ \ Microsoft " , " KeyDoesNotExist " ) ) ; <nl> - 	 	 assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ LOCAL _ MACHINE , <nl> - 	 	 	 	 " SYSTEM \ \ CurrentControlSet \ \ Control " , " SystemBootDevice " ) ) ; <nl> - 	 } 	 <nl> + public void testRegistryValueExists ( ) { <nl> + assertFalse ( Advapi32Util . registryValueExists ( WinReg . HKEY _ LOCAL _ MACHINE , <nl> + " Software \ \ Microsoft " , " " ) ) ; <nl> + assertFalse ( Advapi32Util . registryValueExists ( WinReg . HKEY _ LOCAL _ MACHINE , <nl> + " Software \ \ Microsoft " , " KeyDoesNotExist " ) ) ; <nl> + assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ LOCAL _ MACHINE , <nl> + " SYSTEM \ \ CurrentControlSet \ \ Control " , " SystemBootDevice " ) ) ; <nl> + } 	 <nl> 	 <nl> - 	 public void testRegistryCreateDeleteKey ( ) { <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 	 assertTrue ( Advapi32Util . registryKeyExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " ) ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 	 assertFalse ( Advapi32Util . registryKeyExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " ) ) ; <nl> - 	 } <nl> + public void testRegistryCreateDeleteKey ( ) { <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + assertTrue ( Advapi32Util . registryKeyExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " ) ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + assertFalse ( Advapi32Util . registryKeyExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " ) ) ; <nl> + } <nl> 	 <nl> - 	 public void testRegistryCreateKeyDisposition ( ) { <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 	 assertTrue ( Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ) ; <nl> - 	 	 assertFalse ( Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ) ; <nl> - 	 	 assertTrue ( Advapi32Util . registryKeyExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " ) ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 } <nl> + public void testRegistryCreateKeyDisposition ( ) { <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + assertTrue ( Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ) ; <nl> + assertFalse ( Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ) ; <nl> + assertTrue ( Advapi32Util . registryKeyExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " ) ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + } <nl> <nl> - 	 public void testRegistryDeleteValue ( ) { <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 	 Advapi32Util . registrySetIntValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " IntValue " , 42 ) ; <nl> - 	 	 assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " IntValue " ) ) ; <nl> - 	 	 Advapi32Util . registryDeleteValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " IntValue " ) ; 	 	 <nl> - 	 	 assertFalse ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " IntValue " ) ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 } <nl> + public void testRegistryDeleteValue ( ) { <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + Advapi32Util . registrySetIntValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " IntValue " , 42 ) ; <nl> + assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " IntValue " ) ) ; <nl> + Advapi32Util . registryDeleteValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " IntValue " ) ; 	 	 <nl> + assertFalse ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " IntValue " ) ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + } <nl> 	 <nl> - 	 public void testRegistrySetGetIntValue ( ) { <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 	 Advapi32Util . registrySetIntValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " IntValue " , 42 ) ; <nl> - 	 	 assertEquals ( 42 , Advapi32Util . registryGetIntValue ( WinReg . HKEY _ CURRENT _ USER , <nl> - 	 	 	 	 " Software \ \ JNA " , " IntValue " ) ) ; <nl> - 	 	 assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " IntValue " ) ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 } <nl> + public void testRegistrySetGetIntValue ( ) { <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + Advapi32Util . registrySetIntValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " IntValue " , 42 ) ; <nl> + assertEquals ( 42 , Advapi32Util . registryGetIntValue ( WinReg . HKEY _ CURRENT _ USER , <nl> + " Software \ \ JNA " , " IntValue " ) ) ; <nl> + assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " IntValue " ) ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + } <nl> 	 <nl> - 	 public void testRegistrySetGetLongValue ( ) { <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 	 Advapi32Util . registrySetLongValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " LongValue " , 1234L ) ; <nl> - 	 	 assertEquals ( 1234L , Advapi32Util . registryGetLongValue ( WinReg . HKEY _ CURRENT _ USER , <nl> - 	 	 	 	 " Software \ \ JNA " , " LongValue " ) ) ; <nl> - 	 	 assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " LongValue " ) ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 } <nl> + public void testRegistrySetGetLongValue ( ) { <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + Advapi32Util . registrySetLongValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " LongValue " , 1234L ) ; <nl> + assertEquals ( 1234L , Advapi32Util . registryGetLongValue ( WinReg . HKEY _ CURRENT _ USER , <nl> + " Software \ \ JNA " , " LongValue " ) ) ; <nl> + assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " LongValue " ) ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + } <nl> 	 <nl> - 	 public void testRegistrySetGetStringValue ( ) { <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 	 Advapi32Util . registrySetStringValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " StringValue " , " Hello World " ) ; <nl> - 	 	 assertEquals ( " Hello World " , Advapi32Util . registryGetStringValue ( WinReg . HKEY _ CURRENT _ USER , <nl> - 	 	 	 	 " Software \ \ JNA " , " StringValue " ) ) ; <nl> - 	 	 assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " StringValue " ) ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; 	 	 <nl> - 	 } <nl> + public void testRegistrySetGetStringValue ( ) { <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + Advapi32Util . registrySetStringValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " StringValue " , " Hello World " ) ; <nl> + assertEquals ( " Hello World " , Advapi32Util . registryGetStringValue ( WinReg . HKEY _ CURRENT _ USER , <nl> + " Software \ \ JNA " , " StringValue " ) ) ; <nl> + assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " StringValue " ) ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; 	 	 <nl> + } <nl> <nl> - 	 public void testRegistrySetGetExpandableStringValue ( ) { <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 	 Advapi32Util . registrySetExpandableStringValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " StringValue " , " Temp is % TEMP % " ) ; <nl> - 	 	 assertEquals ( " Temp is % TEMP % " , Advapi32Util . registryGetExpandableStringValue ( WinReg . HKEY _ CURRENT _ USER , <nl> - 	 	 	 	 " Software \ \ JNA " , " StringValue " ) ) ; <nl> - 	 	 assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " StringValue " ) ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; 	 	 <nl> - 	 } <nl> + public void testRegistrySetGetExpandableStringValue ( ) { <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + Advapi32Util . registrySetExpandableStringValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " StringValue " , " Temp is % TEMP % " ) ; <nl> + assertEquals ( " Temp is % TEMP % " , Advapi32Util . registryGetExpandableStringValue ( WinReg . HKEY _ CURRENT _ USER , <nl> + " Software \ \ JNA " , " StringValue " ) ) ; <nl> + assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " StringValue " ) ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; 	 	 <nl> + } <nl> 	 <nl> - 	 public void testRegistrySetGetStringArray ( ) { <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 	 String [ ] dataWritten = { " Hello " , " World " } ; <nl> - 	 	 Advapi32Util . registrySetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " MultiStringValue " , dataWritten ) ; <nl> - 	 	 assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " MultiStringValue " ) ) ; <nl> - 	 	 String [ ] dataRead = Advapi32Util . registryGetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " MultiStringValue " ) ; <nl> - 	 	 assertEquals ( dataWritten . length , dataRead . length ) ; <nl> - 	 	 for ( int i = 0 ; i < dataRead . length ; i + + ) { <nl> - 	 	 	 assertEquals ( dataWritten [ i ] , dataRead [ i ] ) ; <nl> - 	 	 } <nl> - 	 	 dataWritten = new String [ 0 ] ; <nl> - 	 	 Advapi32Util . registrySetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " EmptyMultiString " , dataWritten ) ; <nl> - 	 	 dataRead = Advapi32Util . registryGetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " EmptyMultiString " ) ; <nl> - 	 	 assertEquals ( 0 , dataRead . length ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 } <nl> + public void testRegistrySetGetStringArray ( ) { <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + String [ ] dataWritten = { " Hello " , " World " } ; <nl> + Advapi32Util . registrySetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " MultiStringValue " , dataWritten ) ; <nl> + assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " MultiStringValue " ) ) ; <nl> + String [ ] dataRead = Advapi32Util . registryGetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " MultiStringValue " ) ; <nl> + assertEquals ( dataWritten . length , dataRead . length ) ; <nl> + for ( int i = 0 ; i < dataRead . length ; i + + ) { <nl> + assertEquals ( dataWritten [ i ] , dataRead [ i ] ) ; <nl> + } <nl> + dataWritten = new String [ 0 ] ; <nl> + Advapi32Util . registrySetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " EmptyMultiString " , dataWritten ) ; <nl> + dataRead = Advapi32Util . registryGetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " EmptyMultiString " ) ; <nl> + assertEquals ( 0 , dataRead . length ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + } <nl> <nl> - 	 public void testRegistrySetGetBinaryValue ( ) { <nl> - 	 	 byte [ ] data = { 0x00 , 0x01 , 0x02 } ; <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 	 Advapi32Util . registrySetBinaryValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " BinaryValue " , data ) ; <nl> - 	 	 byte [ ] read = Advapi32Util . registryGetBinaryValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " BinaryValue " ) ; <nl> - 	 	 assertEquals ( data . length , read . length ) ; 	 	 <nl> - 	 	 for ( int i = 0 ; i < data . length ; i + + ) { <nl> - 	 	 	 assertEquals ( data [ i ] , read [ i ] ) ; <nl> - 	 	 } <nl> - 	 	 assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " BinaryValue " ) ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 } <nl> + public void testRegistrySetGetBinaryValue ( ) { <nl> + byte [ ] data = { 0x00 , 0x01 , 0x02 } ; <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + Advapi32Util . registrySetBinaryValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " BinaryValue " , data ) ; <nl> + byte [ ] read = Advapi32Util . registryGetBinaryValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " BinaryValue " ) ; <nl> + assertEquals ( data . length , read . length ) ; 	 	 <nl> + for ( int i = 0 ; i < data . length ; i + + ) { <nl> + assertEquals ( data [ i ] , read [ i ] ) ; <nl> + } <nl> + assertTrue ( Advapi32Util . registryValueExists ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " BinaryValue " ) ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + } <nl> 	 <nl> - 	 public void testRegistryGetKeys ( ) { <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key1 " ) ; <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key2 " ) ; <nl> - 	 	 String [ ] subKeys = Advapi32Util . registryGetKeys ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " ) ; <nl> - 	 	 assertEquals ( 2 , subKeys . length ) ; <nl> - 	 	 assertEquals ( subKeys [ 0 ] , " Key1 " ) ; <nl> - 	 	 assertEquals ( subKeys [ 1 ] , " Key2 " ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key1 " ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key2 " ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; 	 	 	 	 <nl> - 	 } <nl> + public void testRegistryGetKeys ( ) { <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key1 " ) ; <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key2 " ) ; <nl> + String [ ] subKeys = Advapi32Util . registryGetKeys ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " ) ; <nl> + assertEquals ( 2 , subKeys . length ) ; <nl> + assertEquals ( subKeys [ 0 ] , " Key1 " ) ; <nl> + assertEquals ( subKeys [ 1 ] , " Key2 " ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key1 " ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key2 " ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; 	 	 	 	 <nl> + } <nl> 	 <nl> - 	 public void testRegistryGetCloseKey ( ) { <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key1 " ) ; <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key2 " ) ; <nl> - 	 	 HKEYByReference phkKey = Advapi32Util . registryGetKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , WinNT . KEY _ READ ) ; <nl> - 	 	 String [ ] subKeys = Advapi32Util . registryGetKeys ( phkKey . getValue ( ) ) ; <nl> - 	 	 assertEquals ( 2 , subKeys . length ) ; <nl> - 	 	 assertEquals ( subKeys [ 0 ] , " Key1 " ) ; <nl> - 	 	 assertEquals ( subKeys [ 1 ] , " Key2 " ) ; <nl> - 	 	 Advapi32Util . registryCloseKey ( phkKey . getValue ( ) ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key1 " ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key2 " ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 } <nl> + public void testRegistryGetCloseKey ( ) { <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key1 " ) ; <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key2 " ) ; <nl> + HKEYByReference phkKey = Advapi32Util . registryGetKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , WinNT . KEY _ READ ) ; <nl> + String [ ] subKeys = Advapi32Util . registryGetKeys ( phkKey . getValue ( ) ) ; <nl> + assertEquals ( 2 , subKeys . length ) ; <nl> + assertEquals ( subKeys [ 0 ] , " Key1 " ) ; <nl> + assertEquals ( subKeys [ 1 ] , " Key2 " ) ; <nl> + Advapi32Util . registryCloseKey ( phkKey . getValue ( ) ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key1 " ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " Key2 " ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + } <nl> 	 <nl> - 	 public void testRegistryGetValues ( ) { <nl> - 	 	 String uu = new String ( " A " + " \ \ u00ea " + " \ \ u00f1 " + " \ \ u00fc " + " C " ) ; <nl> - 	 	 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> - 	 	 Advapi32Util . registrySetIntValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " FourtyTwo " + uu , 42 ) ; <nl> - 	 	 Advapi32Util . registrySetStringValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " 42 " + uu , " FourtyTwo " + uu ) ; <nl> - 	 	 Advapi32Util . registrySetExpandableStringValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " ExpandableString " , " % TEMP % " ) ; <nl> - 	 	 byte [ ] dataWritten = { 0xD , 0xE , 0xA , 0xD , 0xB , 0xE , 0xE , 0xF } ; 	 	 <nl> - 	 	 Advapi32Util . registrySetBinaryValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " DeadBeef " , dataWritten ) ; <nl> - 	 	 String [ ] stringsWritten = { " Hello " , " World " , " Hello World " , uu } ; <nl> - 	 	 Advapi32Util . registrySetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " StringArray " , stringsWritten ) ; <nl> - 	 	 String [ ] emptyArray = new String [ 0 ] ; <nl> - 	 	 Advapi32Util . registrySetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " EmptyStringArray " , emptyArray ) ; <nl> - 	 	 Advapi32Util . registrySetBinaryValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " EmptyBinary " , new byte [ 0 ] ) ; <nl> - 	 	 TreeMap < String , Object > values = Advapi32Util . registryGetValues ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " ) ; <nl> - 	 	 assertEquals ( 7 , values . keySet ( ) . size ( ) ) ; <nl> - 	 	 assertEquals ( " FourtyTwo " + uu , values . get ( " 42 " + uu ) ) ; <nl> - 	 	 assertEquals ( 42 , values . get ( " FourtyTwo " + uu ) ) ; <nl> - 	 	 assertEquals ( " % TEMP % " , values . get ( " ExpandableString " ) ) ; <nl> - 	 	 byte [ ] dataRead = ( byte [ ] ) values . get ( " DeadBeef " ) ; <nl> - 	 	 assertEquals ( dataWritten . length , dataRead . length ) ; <nl> - 	 	 for ( int i = 0 ; i < dataWritten . length ; i + + ) { <nl> - 	 	 	 assertEquals ( dataWritten [ i ] , dataRead [ i ] ) ; <nl> - 	 	 } <nl> - 	 	 String [ ] stringsRead = ( String [ ] ) values . get ( " StringArray " ) ; <nl> - 	 	 assertEquals ( stringsWritten . length , stringsRead . length ) ; <nl> - 	 	 for ( int i = 0 ; i < stringsWritten . length ; i + + ) { <nl> - 	 	 	 assertEquals ( stringsWritten [ i ] , stringsRead [ i ] ) ; <nl> - 	 	 } <nl> - 	 	 stringsRead = ( String [ ] ) values . get ( " EmptyStringArray " ) ; <nl> - 	 	 assertEquals ( 0 , stringsRead . length ) ; <nl> - 	 	 Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; 	 	 	 	 	 	 <nl> - 	 } <nl> + public void testRegistryGetValues ( ) { <nl> + String uu = new String ( " A " + " \ \ u00ea " + " \ \ u00f1 " + " \ \ u00fc " + " C " ) ; <nl> + Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> + Advapi32Util . registrySetIntValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " FourtyTwo " + uu , 42 ) ; <nl> + Advapi32Util . registrySetStringValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " 42 " + uu , " FourtyTwo " + uu ) ; <nl> + Advapi32Util . registrySetExpandableStringValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " ExpandableString " , " % TEMP % " ) ; <nl> + byte [ ] dataWritten = { 0xD , 0xE , 0xA , 0xD , 0xB , 0xE , 0xE , 0xF } ; 	 	 <nl> + Advapi32Util . registrySetBinaryValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " DeadBeef " , dataWritten ) ; <nl> + String [ ] stringsWritten = { " Hello " , " World " , " Hello World " , uu } ; <nl> + Advapi32Util . registrySetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " StringArray " , stringsWritten ) ; <nl> + String [ ] emptyArray = new String [ 0 ] ; <nl> + Advapi32Util . registrySetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " EmptyStringArray " , emptyArray ) ; <nl> + Advapi32Util . registrySetBinaryValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " EmptyBinary " , new byte [ 0 ] ) ; <nl> + TreeMap < String , Object > values = Advapi32Util . registryGetValues ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " ) ; <nl> + assertEquals ( 7 , values . keySet ( ) . size ( ) ) ; <nl> + assertEquals ( " FourtyTwo " + uu , values . get ( " 42 " + uu ) ) ; <nl> + assertEquals ( 42 , values . get ( " FourtyTwo " + uu ) ) ; <nl> + assertEquals ( " % TEMP % " , values . get ( " ExpandableString " ) ) ; <nl> + byte [ ] dataRead = ( byte [ ] ) values . get ( " DeadBeef " ) ; <nl> + assertEquals ( dataWritten . length , dataRead . length ) ; <nl> + for ( int i = 0 ; i < dataWritten . length ; i + + ) { <nl> + assertEquals ( dataWritten [ i ] , dataRead [ i ] ) ; <nl> + } <nl> + String [ ] stringsRead = ( String [ ] ) values . get ( " StringArray " ) ; <nl> + assertEquals ( stringsWritten . length , stringsRead . length ) ; <nl> + for ( int i = 0 ; i < stringsWritten . length ; i + + ) { <nl> + assertEquals ( stringsWritten [ i ] , stringsRead [ i ] ) ; <nl> + } <nl> + stringsRead = ( String [ ] ) values . get ( " EmptyStringArray " ) ; <nl> + assertEquals ( 0 , stringsRead . length ) ; <nl> + Advapi32Util . registryDeleteKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; 	 	 	 	 	 	 <nl> + } <nl> <nl> - 	 public void testRegistryGetEmptyValues ( ) { <nl> + public void testRegistryGetEmptyValues ( ) { <nl> HKEY root = WinReg . HKEY _ CURRENT _ USER ; <nl> String keyPath = " Software \ \ JNA " ; <nl> Advapi32Util . registryCreateKey ( root , " Software " , " JNA " ) ; <nl> @ @ - 377 , 94 + 377 , 93 @ @ public class Advapi32UtilTest extends TestCase { <nl> } <nl> } <nl> 	 <nl> - 	 public void testIsWellKnownSid ( ) { 	 	 <nl> - 	 	 String everyoneString = " S - 1 - 1 - 0 " ; <nl> + public void testIsWellKnownSid ( ) { 	 	 <nl> + String everyoneString = " S - 1 - 1 - 0 " ; <nl> assertTrue ( Advapi32Util . isWellKnownSid ( everyoneString , WELL _ KNOWN _ SID _ TYPE . WinWorldSid ) ) ; 	 	 <nl> assertFalse ( Advapi32Util . isWellKnownSid ( everyoneString , WELL _ KNOWN _ SID _ TYPE . WinAccountAdministratorSid ) ) ; <nl> byte [ ] everyoneBytes = Advapi32Util . convertStringSidToSid ( everyoneString ) ; <nl> assertTrue ( Advapi32Util . isWellKnownSid ( everyoneBytes , WELL _ KNOWN _ SID _ TYPE . WinWorldSid ) ) ; 	 	 <nl> assertFalse ( Advapi32Util . isWellKnownSid ( everyoneBytes , WELL _ KNOWN _ SID _ TYPE . WinAccountAdministratorSid ) ) ; <nl> - 	 } <nl> + } <nl> 	 <nl> - 	 public void testEventLogIteratorForwards ( ) { <nl> - 	 	 EventLogIterator iter = new EventLogIterator ( " Application " ) ; <nl> - 	 	 try { <nl> - 	 	 	 int max = 100 ; <nl> - 	 	 	 int lastId = 0 ; <nl> - 	 	 	 while ( iter . hasNext ( ) ) { <nl> - 	 	 	 	 EventLogRecord record = iter . next ( ) ; <nl> - 	 	 	 	 assertTrue ( record . getRecordNumber ( ) > lastId ) ; <nl> - 	 	 	 	 lastId = record . getRecordNumber ( ) ; <nl> - 	 	 	 	 assertNotNull ( record . getType ( ) . name ( ) ) ; <nl> - 	 	 	 	 assertNotNull ( record . getSource ( ) ) ; <nl> - 	 	 	 	 if ( record . getRecord ( ) . DataLength . intValue ( ) > 0 ) { <nl> - 	 	 	 	 	 assertEquals ( record . getData ( ) . length , <nl> - 	 	 	 	 	 	 	 record . getRecord ( ) . DataLength . intValue ( ) ) ; <nl> - 	 	 	 	 } else { <nl> - 	 	 	 	 	 assertNull ( record . getData ( ) ) ; <nl> - 	 	 	 	 } <nl> - 	 	 	 	 if ( record . getRecord ( ) . NumStrings . intValue ( ) > 0 ) { <nl> - 	 	 	 	 	 assertEquals ( record . getStrings ( ) . length , <nl> - 	 	 	 	 	 	 	 record . getRecord ( ) . NumStrings . intValue ( ) ) ; <nl> - 	 	 	 	 } else { <nl> - 	 	 	 	 	 assertNull ( record . getStrings ( ) ) ; <nl> - 	 	 	 	 } <nl> + public void testEventLogIteratorForwards ( ) { <nl> + EventLogIterator iter = new EventLogIterator ( " Application " ) ; <nl> + try { <nl> + int max = 100 ; <nl> + int lastId = 0 ; <nl> + while ( iter . hasNext ( ) ) { <nl> + EventLogRecord record = iter . next ( ) ; <nl> + assertTrue ( record . getRecordNumber ( ) > lastId ) ; <nl> + lastId = record . getRecordNumber ( ) ; <nl> + assertNotNull ( record . getType ( ) . name ( ) ) ; <nl> + assertNotNull ( record . getSource ( ) ) ; <nl> + if ( record . getRecord ( ) . DataLength . intValue ( ) > 0 ) { <nl> + assertEquals ( record . getData ( ) . length , <nl> + record . getRecord ( ) . DataLength . intValue ( ) ) ; <nl> + } else { <nl> + assertNull ( record . getData ( ) ) ; <nl> + } <nl> + if ( record . getRecord ( ) . NumStrings . intValue ( ) > 0 ) { <nl> + assertEquals ( record . getStrings ( ) . length , <nl> + record . getRecord ( ) . NumStrings . intValue ( ) ) ; <nl> + } else { <nl> + assertNull ( record . getStrings ( ) ) ; <nl> + } <nl> 	 	 	 	 <nl> - 	 	 	 	 if ( max - - < = 0 ) { <nl> - 	 	 	 	 	 break ; / / shorten test <nl> - 	 	 	 	 } <nl> - 	 	 	 	 / * <nl> - 	 	 	 	 System . out . println ( record . getRecordNumber ( ) <nl> - 	 	 	 	 	 	 + " : Event ID : " + record . getEventId ( ) <nl> - 	 	 	 	 	 	 + " , Event Type : " + record . getType ( ) <nl> - 	 	 	 	 	 	 + " , Event Source : " + record . getSource ( ) ) ; <nl> - 	 	 	 	 	 	 * / <nl> - 	 	 	 } <nl> - 	 	 } finally { <nl> - 	 	 	 iter . close ( ) ; <nl> - 	 	 } <nl> - 	 } <nl> + if ( max - - < = 0 ) { <nl> + break ; / / shorten test <nl> + } <nl> + / * <nl> + System . out . println ( record . getRecordNumber ( ) <nl> + + " : Event ID : " + record . getEventId ( ) <nl> + + " , Event Type : " + record . getType ( ) <nl> + + " , Event Source : " + record . getSource ( ) ) ; <nl> + * / <nl> + } <nl> + } finally { <nl> + iter . close ( ) ; <nl> + } <nl> + } <nl> 	 <nl> - 	 public void testEventLogIteratorBackwards ( ) { <nl> - 	 	 EventLogIterator iter = new EventLogIterator ( null , <nl> - 	 	 	 	 " Application " , WinNT . EVENTLOG _ BACKWARDS _ READ ) ; <nl> - 	 	 try { <nl> - 	 	 	 int max = 100 ; <nl> - 	 	 	 int lastId = - 1 ; <nl> - 	 	 	 while ( iter . hasNext ( ) ) { <nl> - 	 	 	 	 EventLogRecord record = iter . next ( ) ; <nl> - 	 	 	 	 / * <nl> - 	 	 	 	 System . out . println ( record . getRecordNumber ( ) <nl> - 	 	 	 	 	 	 + " : Event ID : " + record . getEventId ( ) <nl> - 	 	 	 	 	 	 + " , Event Type : " + record . getType ( ) <nl> - 	 	 	 	 	 	 + " , Event Source : " + record . getSource ( ) ) ; <nl> - 	 	 	 	 	 	 * / <nl> - 	 	 	 	 assertTrue ( record . getRecordNumber ( ) < lastId | | lastId = = - 1 ) ; <nl> - 	 	 	 	 lastId = record . getRecordNumber ( ) ; <nl> - 	 	 	 	 if ( max - - < = 0 ) { <nl> - 	 	 	 	 	 break ; / / shorten test <nl> - 	 	 	 	 } <nl> - 	 	 	 } <nl> - 	 	 } finally { <nl> - 	 	 	 iter . close ( ) ; <nl> - 	 	 } <nl> - 	 } <nl> + public void testEventLogIteratorBackwards ( ) { <nl> + EventLogIterator iter = new EventLogIterator ( null , <nl> + " Application " , WinNT . EVENTLOG _ BACKWARDS _ READ ) ; <nl> + try { <nl> + int max = 100 ; <nl> + int lastId = - 1 ; <nl> + while ( iter . hasNext ( ) ) { <nl> + EventLogRecord record = iter . next ( ) ; <nl> + / * <nl> + System . out . println ( record . getRecordNumber ( ) <nl> + + " : Event ID : " + record . getEventId ( ) <nl> + + " , Event Type : " + record . getType ( ) <nl> + + " , Event Source : " + record . getSource ( ) ) ; <nl> + * / <nl> + assertTrue ( record . getRecordNumber ( ) < lastId | | lastId = = - 1 ) ; <nl> + lastId = record . getRecordNumber ( ) ; <nl> + if ( max - - < = 0 ) { <nl> + break ; / / shorten test <nl> + } <nl> + } <nl> + } finally { <nl> + iter . close ( ) ; <nl> + } <nl> + } <nl> 	 <nl> - 	 public void testGetEnvironmentBlock ( ) { <nl> - 	 	 String expected = " KEY = value \ 0 " <nl> - 	 	 	 	 + " KEY _ EMPTY = \ 0 " <nl> - 	 	 	 	 + " KEY _ NUMBER = 2 \ 0 " <nl> - 	 	 	 	 + " \ 0 " ; <nl> + public void testGetEnvironmentBlock ( ) { <nl> + String expected = " KEY = value \ 0 " <nl> + + " KEY _ EMPTY = \ 0 " <nl> + + " KEY _ NUMBER = 2 \ 0 " <nl> + + " \ 0 " ; <nl> <nl> - 	 	 / / Order is important to kept checking result simple <nl> - 	 	 Map < String , String > mockEnvironment = new TreeMap < String , String > ( ) ; <nl> - 	 	 mockEnvironment . put ( " KEY " , " value " ) ; <nl> - 	 	 mockEnvironment . put ( " KEY _ EMPTY " , " " ) ; <nl> - 	 	 mockEnvironment . put ( " KEY _ NUMBER " , " 2 " ) ; <nl> - 	 	 mockEnvironment . put ( " KEY _ NULL " , null ) ; 	 	 <nl> + / / Order is important to kept checking result simple <nl> + Map < String , String > mockEnvironment = new TreeMap < String , String > ( ) ; <nl> + mockEnvironment . put ( " KEY " , " value " ) ; <nl> + mockEnvironment . put ( " KEY _ EMPTY " , " " ) ; <nl> + mockEnvironment . put ( " KEY _ NUMBER " , " 2 " ) ; <nl> + mockEnvironment . put ( " KEY _ NULL " , null ) ; 	 	 <nl> <nl> - 	 	 String block = Advapi32Util . getEnvironmentBlock ( mockEnvironment ) ; <nl> - 	 	 assertEquals ( " Environment block must comprise key = value pairs separated by NUL characters " , expected , block ) ; <nl> - 	 } <nl> + String block = Advapi32Util . getEnvironmentBlock ( mockEnvironment ) ; <nl> + assertEquals ( " Environment block must comprise key = value pairs separated by NUL characters " , expected , block ) ; <nl> + } <nl> } <nl> -
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 979ef79 . . af951b5 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 1 , 12 + 1 , 19 @ @ <nl> + NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and ASL ( see LICENSE ) . <nl> + <nl> + NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> + <nl> Next Release ( 4 . 0 . 1 ) <nl> = = = = = = = = = = = = = = = = = = = = <nl> <nl> - Release 4 . 0 <nl> - = = = = = = = = = = = <nl> + Features <nl> + - - - - - - - - <nl> <nl> - NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and ASL ( see LICENSE ) . <nl> + Bug Fixes <nl> + - - - - - - - - - <nl> + * Fix inconsistent behavior on ` Structure . ByValue ` fields within a ` Structure ` - [ @ twall ] ( https : / / github . com / twall ) <nl> <nl> - NOTE : JNI native support is typically incompatible between minor versions , and almost always incompatible between major versions . <nl> + Release 4 . 0 <nl> + = = = = = = = = = = = <nl> <nl> Features <nl> - - - - - - - - <nl> diff - - git a / src / com / sun / jna / Pointer . java b / src / com / sun / jna / Pointer . java <nl> index 9f554cb . . 7f3f3d8 100644 <nl> - - - a / src / com / sun / jna / Pointer . java <nl> + + + b / src / com / sun / jna / Pointer . java <nl> @ @ - 369 , 7 + 369 , 7 @ @ public class Pointer { <nl> s = Structure . updateStructureByReference ( type , s , getPointer ( offset ) ) ; <nl> } <nl> else { <nl> - s . useMemory ( this , ( int ) offset ) ; <nl> + s . useMemory ( this , ( int ) offset , true ) ; <nl> s . read ( ) ; <nl> } <nl> result = s ; <nl> @ @ - 522 , 7 + 522 , 7 @ @ public class Pointer { <nl> sarray [ 0 ] = first ; <nl> } <nl> else { <nl> - first . useMemory ( this , ( int ) offset ) ; <nl> + first . useMemory ( this , ( int ) offset , true ) ; <nl> first . read ( ) ; <nl> } <nl> Structure [ ] tmp = first . toArray ( sarray . length ) ; <nl> @ @ - 532 , 7 + 532 , 7 @ @ public class Pointer { <nl> sarray [ i ] = tmp [ i ] ; <nl> } <nl> else { <nl> - sarray [ i ] . useMemory ( this , ( int ) ( offset + i * sarray [ i ] . size ( ) ) ) ; <nl> + sarray [ i ] . useMemory ( this , ( int ) ( offset + i * sarray [ i ] . size ( ) ) , true ) ; <nl> sarray [ i ] . read ( ) ; <nl> } <nl> } <nl> @ @ - 952 , 7 + 952 , 7 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> } <nl> } <nl> else { <nl> - s . useMemory ( this , ( int ) offset ) ; <nl> + s . useMemory ( this , ( int ) offset , true ) ; <nl> s . write ( ) ; <nl> } <nl> } <nl> @ @ - 1033 , 7 + 1033 , 7 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> sbuf [ 0 ] = first ; <nl> } <nl> else { <nl> - first . useMemory ( this , ( int ) offset ) ; <nl> + first . useMemory ( this , ( int ) offset , true ) ; <nl> } <nl> first . write ( ) ; <nl> Structure [ ] tmp = first . toArray ( sbuf . length ) ; <nl> @ @ - 1042 , 7 + 1042 , 7 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> sbuf [ i ] = tmp [ i ] ; <nl> } <nl> else { <nl> - sbuf [ i ] . useMemory ( this , ( int ) ( offset + i * sbuf [ i ] . size ( ) ) ) ; <nl> + sbuf [ i ] . useMemory ( this , ( int ) ( offset + i * sbuf [ i ] . size ( ) ) , true ) ; <nl> } <nl> sbuf [ i ] . write ( ) ; <nl> } <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index b1bf3f2 . . c7c4f17 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 178 , 7 + 178 , 7 @ @ public abstract class Structure { <nl> initializeTypeMapper ( mapper ) ; <nl> validateFields ( ) ; <nl> if ( p ! = null ) { <nl> - useMemory ( p ) ; <nl> + useMemory ( p , 0 , true ) ; <nl> } <nl> else { <nl> allocateMemory ( CALCULATE _ SIZE ) ; <nl> @ @ - 279 , 12 + 279 , 27 @ @ public abstract class Structure { <nl> * thus does not own its own memory allocation . <nl> * / <nl> protected void useMemory ( Pointer m , int offset ) { <nl> + useMemory ( m , offset , false ) ; <nl> + } <nl> + <nl> + / * * Set the memory used by this structure . This method is used to <nl> + * indicate the given structure is based on natively - allocated data , <nl> + * nested within another , or otherwise overlaid on existing memory and <nl> + * thus does not own its own memory allocation . <nl> + * @ param m Native pointer <nl> + * @ param offset offset from pointer to use <nl> + * @ param force ByValue structures normally ignore requests to use a <nl> + * different memory offset ; this input is set < code > true < / code > when <nl> + * setting a ByValue struct that is nested within another struct . <nl> + * / <nl> + void useMemory ( Pointer m , int offset , boolean force ) { <nl> try { <nl> / / Clear any local cache <nl> nativeStrings . clear ( ) ; <nl> <nl> - if ( this instanceof ByValue ) { <nl> - / / ByValue always uses own memory <nl> + if ( this instanceof ByValue & & ! force ) { <nl> + / / ByValue parameters always use dedicated memory , so only <nl> + / / copy the contents of the original <nl> byte [ ] buf = new byte [ size ( ) ] ; <nl> m . read ( 0 , buf , 0 , buf . length ) ; <nl> this . memory . write ( 0 , buf , 0 , buf . length ) ; <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index fedaea1 . . 0699a66 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 343 , 6 + 343 , 10 @ @ public class StructureTest extends TestCase { <nl> <nl> / / must be publicly accessible in order to create array elements <nl> public static class PublicTestStructure extends Structure { <nl> + public static class ByValue extends PublicTestStructure implements Structure . ByValue { <nl> + public ByValue ( ) { } <nl> + public ByValue ( Pointer p ) { super ( p ) ; } <nl> + } <nl> public static class ByReference extends PublicTestStructure implements Structure . ByReference { <nl> public ByReference ( ) { } <nl> public ByReference ( Pointer p ) { super ( p ) ; } <nl> @ @ - 388 , 6 + 392 , 35 @ @ public class StructureTest extends TestCase { <nl> s . s2 . getPointer ( ) ) ; <nl> } <nl> <nl> + public void testStructureByValueField ( ) { <nl> + class TestStructure extends Structure { <nl> + public PublicTestStructure . ByValue s1 , s2 ; <nl> + public int after ; <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( new String [ ] { " s1 " , " s2 " , " after " } ) ; <nl> + } <nl> + } <nl> + TestStructure s = new TestStructure ( ) ; <nl> + TestStructure s2 = new TestStructure ( ) ; <nl> + assertNotNull ( " Inner structure should be initialized " , s . s1 ) ; <nl> + assertNotNull ( " Inner structure should be initialized ( cached ) " , s2 . s1 ) ; <nl> + assertEquals ( " Wrong aggregate size " , <nl> + s . s1 . size ( ) + s . s2 . size ( ) + 4 , s . size ( ) ) ; <nl> + s . write ( ) ; <nl> + assertEquals ( " Wrong memory for structure field 1 after write " , <nl> + s . getPointer ( ) , s . s1 . getPointer ( ) ) ; <nl> + assertEquals ( " Wrong memory for structure field 2 after write " , <nl> + s . getPointer ( ) . share ( s . s1 . size ( ) ) , <nl> + s . s2 . getPointer ( ) ) ; <nl> + <nl> + s . read ( ) ; <nl> + assertEquals ( " Wrong memory for structure field 1 after read " , <nl> + s . getPointer ( ) , s . s1 . getPointer ( ) ) ; <nl> + assertEquals ( " Wrong memory for structure field 2 after read " , <nl> + s . getPointer ( ) . share ( s . s1 . size ( ) ) , <nl> + s . s2 . getPointer ( ) ) ; <nl> + } <nl> + <nl> static class TestUnion extends Union { <nl> public int u _ int ; <nl> public float u _ float ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> index 1d0811e . . 0157128 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 1420 , 6 + 1420 , 19 @ @ public abstract class Advapi32Util { <nl> <nl> 	 	 return phkKey ; <nl> 	 } <nl> + 	 <nl> + 	 / * * <nl> + 	 * Close the registry key <nl> + 	 * <nl> + 	 * @ param hKey <nl> + 	 * Registry key . <nl> + 	 * / <nl> + 	 public static void registryCloseKey ( HKEY hKey ) { <nl> + 	 	 int rc = Advapi32 . INSTANCE . RegCloseKey ( hKey ) ; <nl> + 	 	 if ( rc ! = W32Errors . ERROR _ SUCCESS ) { <nl> + 	 	 	 throw new Win32Exception ( rc ) ; <nl> + 	 	 } <nl> + 	 } <nl> <nl> 	 / * * <nl> 	 * Get a table of registry values .
diff - - git a / README . md b / README . md <nl> index d683d7e . . 889de28 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 21 , 7 + 21 , 7 @ @ Download <nl> Version 4 . 0 <nl> <nl> * [ jna . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / jna / 4 . 0 . 0 / jna - 4 . 0 . 0 . jar ) <nl> - * [ jna - platform . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / platform / 4 . 0 . 0 / jna - platform - 4 . 0 . 0 . jar ) <nl> + * [ jna - platform . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / jna - platform / 4 . 0 . 0 / jna - platform - 4 . 0 . 0 . jar ) <nl> <nl> Features <nl> = = = = = = = =
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 5cb9e4f . . d37f819 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> - Next Release ( 4 . 0 ) <nl> - = = = = = = = = = = = = = = = = = = <nl> + Release 4 . 0 <nl> + = = = = = = = = = = = <nl> <nl> NOTE : as of JNA 4 . 0 , JNA is now dual - licensed under LGPL and ASL ( see LICENSE ) . <nl> <nl> diff - - git a / README . md b / README . md <nl> index 7b63472 . . d683d7e 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 3 , 7 + 3 , 7 @ @ <nl> Java Native Access ( JNA ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 3 . 5 . 2 / javadoc / ) . Please read the [ overview ] ( http : / / twall . github . com / jna / 3 . 5 . 2 / javadoc / overview - summary . html # overview _ description ) . Questions , comments , or exploratory conversations should begin on the [ mailing list ] ( http : / / groups . google . com / group / jna - users ) , although you may find it easier to find answers to already - solved problems on [ StackOverflow ] ( http : / / stackoverflow . com / questions / tagged / jna ) . <nl> + The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 4 . 0 / javadoc / ) . Please read the [ overview ] ( http : / / twall . github . com / jna / 4 . 0 / javadoc / overview - summary . html # overview _ description ) . Questions , comments , or exploratory conversations should begin on the [ mailing list ] ( http : / / groups . google . com / group / jna - users ) , although you may find it easier to find answers to already - solved problems on [ StackOverflow ] ( http : / / stackoverflow . com / questions / tagged / jna ) . <nl> <nl> JNA provides Java programs easy access to native shared libraries ( DLLs on Windows ) without writing anything but Java code - no JNI or native code is required . This functionality is comparable to Windows ' Platform / Invoke and Python ' s ctypes . Access is dynamic at runtime without code generation . <nl> <nl> @ @ - 18 , 10 + 18 , 10 @ @ JNA includes a platform library with many native functions already mapped as wel <nl> Download <nl> = = = = = = = = <nl> <nl> - Version 3 . 5 . 2 <nl> + Version 4 . 0 <nl> <nl> - * [ jna . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / jna / 3 . 5 . 2 / jna - 3 . 5 . 2 . jar ) <nl> - * [ platform . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / platform / 3 . 5 . 2 / platform - 3 . 5 . 2 . jar ) <nl> + * [ jna . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / jna / 4 . 0 . 0 / jna - 4 . 0 . 0 . jar ) <nl> + * [ jna - platform . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / platform / 4 . 0 . 0 / jna - platform - 4 . 0 . 0 . jar ) <nl> <nl> Features <nl> = = = = = = = = <nl> @ @ - 79 , 12 + 79 , 12 @ @ Using the Library <nl> * [ Platform Library ] ( https : / / github . com / twall / jna / blob / master / www / PlatformLibrary . md ) <nl> * [ Direct Method Mapping ] ( https : / / github . com / twall / jna / blob / master / www / DirectMapping . md ) ( Optimization ) <nl> * [ Frequently Asked Questions ( FAQ ) ] ( https : / / github . com / twall / jna / blob / master / www / FrequentlyAskedQuestions . md ) <nl> - * [ Avoiding Crashes ] ( http : / / twall . github . com / jna / 3 . 5 . 2 / javadoc / overview - summary . html # crash - protection ) <nl> + * [ Avoiding Crashes ] ( http : / / twall . github . com / jna / 4 . 0 . 0 / javadoc / overview - summary . html # crash - protection ) <nl> <nl> Primary Documentation ( JavaDoc ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 3 . 5 . 2 / javadoc / ) . <nl> + The definitive JNA reference is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 4 . 0 . 0 / javadoc / ) . <nl> <nl> Developers <nl> = = = = = = = = = = <nl> diff - - git a / dist / aix - ppc . jar b / dist / aix - ppc . jar <nl> index 7f33649 . . 6716399 100644 <nl> Binary files a / dist / aix - ppc . jar and b / dist / aix - ppc . jar differ <nl> diff - - git a / dist / aix - ppc64 . jar b / dist / aix - ppc64 . jar <nl> index 5450e65 . . 6716399 100644 <nl> Binary files a / dist / aix - ppc64 . jar and b / dist / aix - ppc64 . jar differ <nl> diff - - git a / dist / android - arm . jar b / dist / android - arm . jar <nl> index b110945 . . 1d7a358 100644 <nl> Binary files a / dist / android - arm . jar and b / dist / android - arm . jar differ <nl> diff - - git a / dist / android - x86 . jar b / dist / android - x86 . jar <nl> new file mode 100644 <nl> index 0000000 . . 87cdd35 <nl> Binary files / dev / null and b / dist / android - x86 . jar differ <nl> diff - - git a / dist / darwin . jar b / dist / darwin . jar <nl> index 6cadccb . . 8db01ec 100644 <nl> Binary files a / dist / darwin . jar and b / dist / darwin . jar differ <nl> diff - - git a / dist / doc . zip b / dist / doc . zip <nl> index e413330 . . 6619e4e 100644 <nl> Binary files a / dist / doc . zip and b / dist / doc . zip differ <nl> diff - - git a / dist / freebsd - x86 - 64 . jar b / dist / freebsd - x86 - 64 . jar <nl> index 26010e1 . . 8ed2aae 100644 <nl> Binary files a / dist / freebsd - x86 - 64 . jar and b / dist / freebsd - x86 - 64 . jar differ <nl> diff - - git a / dist / freebsd - x86 . jar b / dist / freebsd - x86 . jar <nl> index c7e2014 . . 3dbb368 100644 <nl> Binary files a / dist / freebsd - x86 . jar and b / dist / freebsd - x86 . jar differ <nl> diff - - git a / dist / jna - min . jar b / dist / jna - min . jar <nl> index 8abc9a3 . . b8db1b2 100644 <nl> Binary files a / dist / jna - min . jar and b / dist / jna - min . jar differ <nl> diff - - git a / dist / jna - platform . jar b / dist / jna - platform . jar <nl> new file mode 100644 <nl> index 0000000 . . 4b3d567 <nl> Binary files / dev / null and b / dist / jna - platform . jar differ <nl> diff - - git a / dist / jna . jar b / dist / jna . jar <nl> index ed8a456 . . 9038048 100644 <nl> Binary files a / dist / jna . jar and b / dist / jna . jar differ <nl> diff - - git a / dist / jnacontrib / demo - alphamask . jar b / dist / jnacontrib / demo - alphamask . jar <nl> index b996143 . . 675fc76 100644 <nl> Binary files a / dist / jnacontrib / demo - alphamask . jar and b / dist / jnacontrib / demo - alphamask . jar differ <nl> diff - - git a / dist / jnacontrib / demo - balloonmanager . jar b / dist / jnacontrib / demo - balloonmanager . jar <nl> index 811d0f8 . . 93c5922 100644 <nl> Binary files a / dist / jnacontrib / demo - balloonmanager . jar and b / dist / jnacontrib / demo - balloonmanager . jar differ <nl> diff - - git a / dist / jnacontrib / demo - balloontips . jar b / dist / jnacontrib / demo - balloontips . jar <nl> index 9d51fcd . . 1ce8e1b 100644 <nl> Binary files a / dist / jnacontrib / demo - balloontips . jar and b / dist / jnacontrib / demo - balloontips . jar differ <nl> diff - - git a / dist / jnacontrib / demo - dnd . jar b / dist / jnacontrib / demo - dnd . jar <nl> index c784c99 . . 9c0dc59 100644 <nl> Binary files a / dist / jnacontrib / demo - dnd . jar and b / dist / jnacontrib / demo - dnd . jar differ <nl> diff - - git a / dist / jnacontrib / demo - shapedwindow . jar b / dist / jnacontrib / demo - shapedwindow . jar <nl> index 0c97d1d . . 1329973 100644 <nl> Binary files a / dist / jnacontrib / demo - shapedwindow . jar and b / dist / jnacontrib / demo - shapedwindow . jar differ <nl> diff - - git a / dist / jnacontrib / demo - w32keyhook . jar b / dist / jnacontrib / demo - w32keyhook . jar <nl> index c79aa50 . . 09ca776 100644 <nl> Binary files a / dist / jnacontrib / demo - w32keyhook . jar and b / dist / jnacontrib / demo - w32keyhook . jar differ <nl> diff - - git a / dist / jnacontrib / demo - x11 . jar b / dist / jnacontrib / demo - x11 . jar <nl> index 214fb79 . . d23a081 100644 <nl> Binary files a / dist / jnacontrib / demo - x11 . jar and b / dist / jnacontrib / demo - x11 . jar differ <nl> diff - - git a / dist / linux - arm . jar b / dist / linux - arm . jar <nl> index d6e4cf5 . . ac92a07 100644 <nl> Binary files a / dist / linux - arm . jar and b / dist / linux - arm . jar differ <nl> diff - - git a / dist / linux - ia64 . jar b / dist / linux - ia64 . jar <nl> index 6f2fa3c . . 6716399 100644 <nl> Binary files a / dist / linux - ia64 . jar and b / dist / linux - ia64 . jar differ <nl> diff - - git a / dist / linux - ppc . jar b / dist / linux - ppc . jar <nl> index 5da7dba . . 6716399 100644 <nl> Binary files a / dist / linux - ppc . jar and b / dist / linux - ppc . jar differ <nl> diff - - git a / dist / linux - ppc64 . jar b / dist / linux - ppc64 . jar <nl> index 2ac31e2 . . 6716399 100644 <nl> Binary files a / dist / linux - ppc64 . jar and b / dist / linux - ppc64 . jar differ <nl> diff - - git a / dist / linux - x86 - 64 . jar b / dist / linux - x86 - 64 . jar <nl> index a970c08 . . 3081e6b 100644 <nl> Binary files a / dist / linux - x86 - 64 . jar and b / dist / linux - x86 - 64 . jar differ <nl> diff - - git a / dist / linux - x86 . jar b / dist / linux - x86 . jar <nl> index 200a842 . . 348f7ed 100644 <nl> Binary files a / dist / linux - x86 . jar and b / dist / linux - x86 . jar differ <nl> diff - - git a / dist / openbsd - x86 - 64 . jar b / dist / openbsd - x86 - 64 . jar <nl> new file mode 100644 <nl> index 0000000 . . 8d0007d <nl> Binary files / dev / null and b / dist / openbsd - x86 - 64 . jar differ <nl> diff - - git a / dist / openbsd - x86 . jar b / dist / openbsd - x86 . jar <nl> index 6716399 . . 5b61717 100644 <nl> Binary files a / dist / openbsd - x86 . jar and b / dist / openbsd - x86 . jar differ <nl> diff - - git a / dist / platform . jar b / dist / platform . jar <nl> deleted file mode 100644 <nl> index 35432b0 . . 0000000 <nl> Binary files a / dist / platform . jar and / dev / null differ <nl> diff - - git a / dist / src - full . zip b / dist / src - full . zip <nl> index ebfc96b . . 25f21f9 100644 <nl> Binary files a / dist / src - full . zip and b / dist / src - full . zip differ <nl> diff - - git a / dist / src . zip b / dist / src . zip <nl> index 5ba5767 . . c288e00 100644 <nl> Binary files a / dist / src . zip and b / dist / src . zip differ <nl> diff - - git a / dist / win32 - x86 - 64 . jar b / dist / win32 - x86 - 64 . jar <nl> index 87cf836 . . 1dceea0 100644 <nl> Binary files a / dist / win32 - x86 - 64 . jar and b / dist / win32 - x86 - 64 . jar differ <nl> diff - - git a / dist / win32 - x86 . jar b / dist / win32 - x86 . jar <nl> index 891504f . . 4e7c979 100644 <nl> Binary files a / dist / win32 - x86 . jar and b / dist / win32 - x86 . jar differ <nl> diff - - git a / src / com / sun / jna / CallbackReference . java b / src / com / sun / jna / CallbackReference . java <nl> index c3077b1 . . 79b5fbb 100644 <nl> - - - a / src / com / sun / jna / CallbackReference . java <nl> + + + b / src / com / sun / jna / CallbackReference . java <nl> @ @ - 99 , 7 + 99 , 7 @ @ class CallbackReference extends WeakReference { <nl> * If the pointer refers to a Java callback trampoline , return the original <nl> * Java Callback . Otherwise , return a proxy to the native function <nl> * pointer . <nl> - * @ throw IllegalStateException if the given pointer has already been <nl> + * @ throws IllegalStateException if the given pointer has already been <nl> * mapped to a callback of a different type . <nl> * / <nl> public static Callback getCallback ( Class type , Pointer p ) {
diff - - git a / www / ReleasingJNA . md b / www / ReleasingJNA . md <nl> index 3fee545 . . 874e396 100644 <nl> - - - a / www / ReleasingJNA . md <nl> + + + b / www / ReleasingJNA . md <nl> @ @ - 9 , 7 + 9 , 7 @ @ JNA Release Process <nl> platform , pushing the resulting target - specific jar ( in lib / native ) file to master . <nl> <nl> * Run ` ant - Drelease = true clean dist ` target on a fully up - to - date checkout with no modifications . Commit and push generated files in dist . <nl> - You will also see differences in the pom - * . xml files and src / . . . / Native . java . Commit and push these also . <nl> + You will also see differences in the pom - * . xml files and src / . . . / Native . java . Do not commit these files . <nl> <nl> * Update Javadoc <nl> Check out gh - pages branch , copy latest doc / javadoc into < version > / javadoc ,
diff - - git a / www / PublishingToMavenCentral . md b / www / PublishingToMavenCentral . md <nl> index 11347ef . . 2089ac7 100644 <nl> - - - a / www / PublishingToMavenCentral . md <nl> + + + b / www / PublishingToMavenCentral . md <nl> @ @ - 29 , 8 + 29 , 10 @ @ One Time <nl> <nl> Because we are still deploying to maven repositories via java . net , see [ Java . net Maven Repository Usage Guide ] ( http : / / java . net / projects / maven2 - repository / pages / MigrationAndCleanupRelatedDocumentation ) for more info . <nl> <nl> - Publish Snapshot - at any time and in preparation for a release <nl> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + Publish Snapshot <nl> + - - - - - - - - - - - - - - - - <nl> + <nl> + * At any time and in preparation for a release * <nl> <nl> Before doing a full jna release , we can publish a development SNAPSHOT of the " next " release for people to test . The <nl> SNAPSHOT will be published in the staging repository :
diff - - git a / contrib / alphamaskdemo / build . xml b / contrib / alphamaskdemo / build . xml <nl> index 5f8eb49 . . dbcb722 100644 <nl> - - - a / contrib / alphamaskdemo / build . xml <nl> + + + b / contrib / alphamaskdemo / build . xml <nl> @ @ - 1 , 66 + 1 , 66 @ @ <nl> - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> - < project name = " jnacontrib . alphamaskdemo " default = " jar " basedir = " . " > <nl> - < description > Builds , tests , and runs the project jnacontrib . alphamaskdemo . < / description > <nl> - < ! - - Locations - - > <nl> - < property name = " src " location = " . " / > <nl> - < property name = " build " location = " build " / > <nl> - < property name = " jna - dist " location = " . . / . . / dist " / > <nl> - <nl> - < property name = " classes " location = " $ { build } / classes " / > <nl> - < property name = " jar " location = " $ { build } / demo - alphamask . jar " / > <nl> - < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> - < property name = " main - class " 	 	 	 value = " com . sun . jna . contrib . demo . AlphaMaskDemo " / > <nl> - <nl> - < path id = " classpath " > <nl> - < fileset file = " $ { file . reference . jna . jar } " / > <nl> - < fileset dir = " . . / platform / dist " includes = " platform . jar " / > <nl> - < / path > <nl> - <nl> - < ! - - Run Demo . - - > <nl> - < target name = " run " depends = " compile " > <nl> - < java classname = " $ { main - class } " fork = " true " > <nl> - < classpath > <nl> - < pathelement location = " $ { classes } " / > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / java > <nl> - < / target > <nl> - <nl> - < ! - - Delete class and jar files . - - > <nl> - < target name = " clean " > <nl> - < delete dir = " $ { classes } " / > <nl> - < delete file = " $ { jar } " / > <nl> - < delete dir = " $ { build } " / > <nl> - < / target > <nl> - <nl> - < ! - - Compile all classes . - - > <nl> - < target name = " compile " > <nl> - < mkdir dir = " $ { classes } " / > <nl> - < ! - - Compile the project . - - > <nl> - < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> - encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> - < classpath > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / javac > <nl> - < / target > <nl> - <nl> - < ! - - Create jar - file . - - > <nl> - < target name = " jar " depends = " compile " > <nl> - < ! - - Copy all non - java files to classes . - - > <nl> - < copy todir = " $ { classes } / com " > <nl> - < fileset dir = " $ { src } / com " > <nl> - < exclude name = " * * / * . java " / > <nl> - < / fileset > <nl> - < / copy > <nl> - < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> - < manifest > <nl> - < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> - < / manifest > <nl> - < ! - - platform - - > <nl> - < fileset dir = " . . / platform / build / classes / com " / > <nl> - < ! - - jna - - > <nl> - < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> - < / jar > <nl> - < / target > <nl> - < / project > <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < project name = " jnacontrib . alphamaskdemo " default = " jar " basedir = " . " > <nl> + < description > Builds , tests , and runs the project jnacontrib . alphamaskdemo . < / description > <nl> + < ! - - Locations - - > <nl> + < property name = " src " location = " . " / > <nl> + < property name = " build " location = " build " / > <nl> + < property name = " jna - dist " location = " . . / . . / dist " / > <nl> + <nl> + < property name = " classes " location = " $ { build } / classes " / > <nl> + < property name = " jar " location = " $ { build } / demo - alphamask . jar " / > <nl> + < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> + < property name = " main - class " 	 	 	 value = " com . sun . jna . contrib . demo . AlphaMaskDemo " / > <nl> + <nl> + < path id = " classpath " > <nl> + < fileset file = " $ { file . reference . jna . jar } " / > <nl> + < fileset dir = " . . / platform / dist " includes = " jna - platform . jar " / > <nl> + < / path > <nl> + <nl> + < ! - - Run Demo . - - > <nl> + < target name = " run " depends = " compile " > <nl> + < java classname = " $ { main - class } " fork = " true " > <nl> + < classpath > <nl> + < pathelement location = " $ { classes } " / > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / java > <nl> + < / target > <nl> + <nl> + < ! - - Delete class and jar files . - - > <nl> + < target name = " clean " > <nl> + < delete dir = " $ { classes } " / > <nl> + < delete file = " $ { jar } " / > <nl> + < delete dir = " $ { build } " / > <nl> + < / target > <nl> + <nl> + < ! - - Compile all classes . - - > <nl> + < target name = " compile " > <nl> + < mkdir dir = " $ { classes } " / > <nl> + < ! - - Compile the project . - - > <nl> + < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> + encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> + < classpath > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / javac > <nl> + < / target > <nl> + <nl> + < ! - - Create jar - file . - - > <nl> + < target name = " jar " depends = " compile " > <nl> + < ! - - Copy all non - java files to classes . - - > <nl> + < copy todir = " $ { classes } / com " > <nl> + < fileset dir = " $ { src } / com " > <nl> + < exclude name = " * * / * . java " / > <nl> + < / fileset > <nl> + < / copy > <nl> + < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> + < manifest > <nl> + < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> + < / manifest > <nl> + < ! - - platform - - > <nl> + < fileset dir = " . . / platform / build / classes / com " / > <nl> + < ! - - jna - - > <nl> + < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> + < / jar > <nl> + < / target > <nl> + < / project > <nl> diff - - git a / contrib / balloonmanagerdemo / build . xml b / contrib / balloonmanagerdemo / build . xml <nl> index 7c64b7a . . 93eec57 100644 <nl> - - - a / contrib / balloonmanagerdemo / build . xml <nl> + + + b / contrib / balloonmanagerdemo / build . xml <nl> @ @ - 1 , 68 + 1 , 68 @ @ <nl> - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> - < project name = " jnacontrib . balloonmanagerdemo " default = " jar " basedir = " . " > <nl> - < description > Builds , tests , and runs the project jnacontrib . balloonmanagerdemo . < / description > <nl> - < ! - - Locations - - > <nl> - < property name = " src " location = " . " / > <nl> - < property name = " build " location = " build " / > <nl> - < property name = " jna - dist " location = " . . / . . / dist " / > <nl> - <nl> - < property name = " classes " location = " $ { build } / classes " / > <nl> - < property name = " jar " location = " $ { build } / demo - balloonmanager . jar " / > <nl> - < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> - < property name = " main - class " 	 	 	 value = " com . sun . jna . contrib . demo . BalloonManagerDemo " / > <nl> - <nl> - < path id = " classpath " > <nl> - < fileset file = " $ { file . reference . jna . jar } " / > <nl> - < fileset dir = " . . / platform / dist " includes = " platform . jar " / > <nl> - < / path > <nl> - <nl> - < ! - - Run Demo . - - > <nl> - < target name = " run " depends = " compile " > <nl> - < java classname = " $ { main - class } " fork = " true " > <nl> - < classpath > <nl> - < pathelement location = " $ { classes } " / > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / java > <nl> - < / target > <nl> - <nl> - < ! - - Delete class and jar files . - - > <nl> - < target name = " clean " > <nl> - < delete dir = " $ { classes } " / > <nl> - < delete file = " $ { jar } " / > <nl> - < delete dir = " $ { build } " / > <nl> - < / target > <nl> - <nl> - < ! - - Compile all classes . - - > <nl> - < target name = " compile " > <nl> - < mkdir dir = " $ { classes } " / > <nl> - < ! - - Compile the project . - - > <nl> - < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> - encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> - < classpath > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / javac > <nl> - < / target > <nl> - <nl> - < ! - - Create jar - file . - - > <nl> - < target name = " jar " depends = " compile " > <nl> - <nl> - < ! - - Copy all non - java files to classes . - - > <nl> - < copy todir = " $ { classes } / com " > <nl> - < fileset dir = " $ { src } / com " > <nl> - < exclude name = " * * / * . java " / > <nl> - < / fileset > <nl> - < / copy > <nl> - <nl> - < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> - < manifest > <nl> - < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> - < / manifest > <nl> - < ! - - platform - - > <nl> - < fileset dir = " . . / platform / build / classes / com " / > <nl> - < ! - - jna - - > <nl> - < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> - < / jar > <nl> - < / target > <nl> - < / project > <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < project name = " jnacontrib . balloonmanagerdemo " default = " jar " basedir = " . " > <nl> + < description > Builds , tests , and runs the project jnacontrib . balloonmanagerdemo . < / description > <nl> + < ! - - Locations - - > <nl> + < property name = " src " location = " . " / > <nl> + < property name = " build " location = " build " / > <nl> + < property name = " jna - dist " location = " . . / . . / dist " / > <nl> + <nl> + < property name = " classes " location = " $ { build } / classes " / > <nl> + < property name = " jar " location = " $ { build } / demo - balloonmanager . jar " / > <nl> + < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> + < property name = " main - class " 	 	 	 value = " com . sun . jna . contrib . demo . BalloonManagerDemo " / > <nl> + <nl> + < path id = " classpath " > <nl> + < fileset file = " $ { file . reference . jna . jar } " / > <nl> + < fileset dir = " . . / platform / dist " includes = " jna - platform . jar " / > <nl> + < / path > <nl> + <nl> + < ! - - Run Demo . - - > <nl> + < target name = " run " depends = " compile " > <nl> + < java classname = " $ { main - class } " fork = " true " > <nl> + < classpath > <nl> + < pathelement location = " $ { classes } " / > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / java > <nl> + < / target > <nl> + <nl> + < ! - - Delete class and jar files . - - > <nl> + < target name = " clean " > <nl> + < delete dir = " $ { classes } " / > <nl> + < delete file = " $ { jar } " / > <nl> + < delete dir = " $ { build } " / > <nl> + < / target > <nl> + <nl> + < ! - - Compile all classes . - - > <nl> + < target name = " compile " > <nl> + < mkdir dir = " $ { classes } " / > <nl> + < ! - - Compile the project . - - > <nl> + < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> + encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> + < classpath > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / javac > <nl> + < / target > <nl> + <nl> + < ! - - Create jar - file . - - > <nl> + < target name = " jar " depends = " compile " > <nl> + <nl> + < ! - - Copy all non - java files to classes . - - > <nl> + < copy todir = " $ { classes } / com " > <nl> + < fileset dir = " $ { src } / com " > <nl> + < exclude name = " * * / * . java " / > <nl> + < / fileset > <nl> + < / copy > <nl> + <nl> + < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> + < manifest > <nl> + < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> + < / manifest > <nl> + < ! - - platform - - > <nl> + < fileset dir = " . . / platform / build / classes / com " / > <nl> + < ! - - jna - - > <nl> + < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> + < / jar > <nl> + < / target > <nl> + < / project > <nl> diff - - git a / contrib / balloontips / build . xml b / contrib / balloontips / build . xml <nl> index d9f7622 . . b0ffafc 100644 <nl> - - - a / contrib / balloontips / build . xml <nl> + + + b / contrib / balloontips / build . xml <nl> @ @ - 1 , 68 + 1 , 68 @ @ <nl> - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> - < project name = " jnacontrib . balloontipsdemo " default = " jar " basedir = " . " > <nl> - < description > Builds , tests , and runs the project jnacontrib . balloontipsdemo . < / description > <nl> - < ! - - Locations - - > <nl> - < property name = " src " location = " . " / > <nl> - < property name = " build " location = " build " / > <nl> - < property name = " jna - dist " location = " . . / . . / dist " / > <nl> - <nl> - < property name = " classes " location = " $ { build } / classes " / > <nl> - < property name = " jar " location = " $ { build } / demo - balloontips . jar " / > <nl> - < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> - < property name = " main - class " 	 	 value = " com . sun . jna . contrib . demo . FilteredTextField " / > <nl> - <nl> - < path id = " classpath " > <nl> - < fileset file = " $ { file . reference . jna . jar } " / > <nl> - < fileset dir = " . . / platform / dist " includes = " platform . jar " / > <nl> - < / path > <nl> - <nl> - < ! - - Run Demo . - - > <nl> - < target name = " run " depends = " compile " > <nl> - < java classname = " $ { main - class } " fork = " true " > <nl> - < classpath > <nl> - < pathelement location = " $ { classes } " / > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / java > <nl> - < / target > <nl> - <nl> - < ! - - Delete class and jar files . - - > <nl> - < target name = " clean " > <nl> - < delete dir = " $ { classes } " / > <nl> - < delete file = " $ { jar } " / > <nl> - < delete dir = " $ { build } " / > <nl> - < / target > <nl> - <nl> - < ! - - Compile all classes . - - > <nl> - < target name = " compile " > <nl> - < mkdir dir = " $ { classes } " / > <nl> - < ! - - Compile the project . - - > <nl> - < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> - encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> - < classpath > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / javac > <nl> - < / target > <nl> - <nl> - < ! - - Create jar - file . - - > <nl> - < target name = " jar " depends = " compile " > <nl> - <nl> - < ! - - Copy all non - java files to classes . - - > <nl> - < copy todir = " $ { classes } / com " > <nl> - < fileset dir = " $ { src } / com " > <nl> - < exclude name = " * * / * . java " / > <nl> - < / fileset > <nl> - < / copy > <nl> - <nl> - < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> - < manifest > <nl> - < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> - < / manifest > <nl> - < ! - - platform - - > <nl> - < fileset dir = " . . / platform / build / classes / com " / > <nl> - < ! - - jna - - > <nl> - < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> - < / jar > <nl> - < / target > <nl> - < / project > <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < project name = " jnacontrib . balloontipsdemo " default = " jar " basedir = " . " > <nl> + < description > Builds , tests , and runs the project jnacontrib . balloontipsdemo . < / description > <nl> + < ! - - Locations - - > <nl> + < property name = " src " location = " . " / > <nl> + < property name = " build " location = " build " / > <nl> + < property name = " jna - dist " location = " . . / . . / dist " / > <nl> + <nl> + < property name = " classes " location = " $ { build } / classes " / > <nl> + < property name = " jar " location = " $ { build } / demo - balloontips . jar " / > <nl> + < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> + < property name = " main - class " 	 	 value = " com . sun . jna . contrib . demo . FilteredTextField " / > <nl> + <nl> + < path id = " classpath " > <nl> + < fileset file = " $ { file . reference . jna . jar } " / > <nl> + < fileset dir = " . . / platform / dist " includes = " jna - platform . jar " / > <nl> + < / path > <nl> + <nl> + < ! - - Run Demo . - - > <nl> + < target name = " run " depends = " compile " > <nl> + < java classname = " $ { main - class } " fork = " true " > <nl> + < classpath > <nl> + < pathelement location = " $ { classes } " / > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / java > <nl> + < / target > <nl> + <nl> + < ! - - Delete class and jar files . - - > <nl> + < target name = " clean " > <nl> + < delete dir = " $ { classes } " / > <nl> + < delete file = " $ { jar } " / > <nl> + < delete dir = " $ { build } " / > <nl> + < / target > <nl> + <nl> + < ! - - Compile all classes . - - > <nl> + < target name = " compile " > <nl> + < mkdir dir = " $ { classes } " / > <nl> + < ! - - Compile the project . - - > <nl> + < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> + encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> + < classpath > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / javac > <nl> + < / target > <nl> + <nl> + < ! - - Create jar - file . - - > <nl> + < target name = " jar " depends = " compile " > <nl> + <nl> + < ! - - Copy all non - java files to classes . - - > <nl> + < copy todir = " $ { classes } / com " > <nl> + < fileset dir = " $ { src } / com " > <nl> + < exclude name = " * * / * . java " / > <nl> + < / fileset > <nl> + < / copy > <nl> + <nl> + < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> + < manifest > <nl> + < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> + < / manifest > <nl> + < ! - - platform - - > <nl> + < fileset dir = " . . / platform / build / classes / com " / > <nl> + < ! - - jna - - > <nl> + < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> + < / jar > <nl> + < / target > <nl> + < / project > <nl> diff - - git a / contrib / dnddemo / build . xml b / contrib / dnddemo / build . xml <nl> index a316a99 . . e43fcc1 100644 <nl> - - - a / contrib / dnddemo / build . xml <nl> + + + b / contrib / dnddemo / build . xml <nl> @ @ - 1 , 68 + 1 , 68 @ @ <nl> - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> - < project name = " jnacontrib . dnddemo " default = " jar " basedir = " . " > <nl> - < description > Builds , tests , and runs the project jnacontrib . dnddemo . < / description > <nl> - < ! - - Locations - - > <nl> - < property name = " src " location = " . " / > <nl> - < property name = " build " location = " build " / > <nl> - < property name = " jna - dist " location = " . . / . . / dist " / > <nl> - <nl> - < property name = " classes " location = " $ { build } / classes " / > <nl> - < property name = " jar " location = " $ { build } / demo - dnd . jar " / > <nl> - < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> - < property name = " main - class " 	 	 	 value = " com . sun . jna . contrib . demo . GhostedDragImageDemo " / > <nl> - <nl> - < path id = " classpath " > <nl> - < fileset file = " $ { file . reference . jna . jar } " / > <nl> - < fileset dir = " . . / platform / dist " includes = " platform . jar " / > <nl> - < / path > <nl> - <nl> - < ! - - Run Demo . - - > <nl> - < target name = " run " depends = " compile " > <nl> - < java classname = " $ { main - class } " fork = " true " > <nl> - < classpath > <nl> - < pathelement location = " $ { classes } " / > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / java > <nl> - < / target > <nl> - <nl> - < ! - - Delete class and jar files . - - > <nl> - < target name = " clean " > <nl> - < delete dir = " $ { classes } " / > <nl> - < delete file = " $ { jar } " / > <nl> - < delete dir = " $ { build } " / > <nl> - < / target > <nl> - <nl> - < ! - - Compile all classes . - - > <nl> - < target name = " compile " > <nl> - < mkdir dir = " $ { classes } " / > <nl> - < ! - - Compile the project . - - > <nl> - < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> - encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> - < classpath > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / javac > <nl> - < / target > <nl> - <nl> - < ! - - Create jar - file . - - > <nl> - < target name = " jar " depends = " compile " > <nl> - <nl> - < ! - - Copy all non - java files to classes . - - > <nl> - < copy todir = " $ { classes } / com " > <nl> - < fileset dir = " $ { src } / com " > <nl> - < exclude name = " * * / * . java " / > <nl> - < / fileset > <nl> - < / copy > <nl> - <nl> - < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> - < manifest > <nl> - < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> - < / manifest > <nl> - < ! - - platform - - > <nl> - < fileset dir = " . . / platform / build / classes / com " / > <nl> - < ! - - jna - - > <nl> - < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> - < / jar > <nl> - < / target > <nl> - < / project > <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < project name = " jnacontrib . dnddemo " default = " jar " basedir = " . " > <nl> + < description > Builds , tests , and runs the project jnacontrib . dnddemo . < / description > <nl> + < ! - - Locations - - > <nl> + < property name = " src " location = " . " / > <nl> + < property name = " build " location = " build " / > <nl> + < property name = " jna - dist " location = " . . / . . / dist " / > <nl> + <nl> + < property name = " classes " location = " $ { build } / classes " / > <nl> + < property name = " jar " location = " $ { build } / demo - dnd . jar " / > <nl> + < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> + < property name = " main - class " 	 	 	 value = " com . sun . jna . contrib . demo . GhostedDragImageDemo " / > <nl> + <nl> + < path id = " classpath " > <nl> + < fileset file = " $ { file . reference . jna . jar } " / > <nl> + < fileset dir = " . . / platform / dist " includes = " jna - platform . jar " / > <nl> + < / path > <nl> + <nl> + < ! - - Run Demo . - - > <nl> + < target name = " run " depends = " compile " > <nl> + < java classname = " $ { main - class } " fork = " true " > <nl> + < classpath > <nl> + < pathelement location = " $ { classes } " / > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / java > <nl> + < / target > <nl> + <nl> + < ! - - Delete class and jar files . - - > <nl> + < target name = " clean " > <nl> + < delete dir = " $ { classes } " / > <nl> + < delete file = " $ { jar } " / > <nl> + < delete dir = " $ { build } " / > <nl> + < / target > <nl> + <nl> + < ! - - Compile all classes . - - > <nl> + < target name = " compile " > <nl> + < mkdir dir = " $ { classes } " / > <nl> + < ! - - Compile the project . - - > <nl> + < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> + encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> + < classpath > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / javac > <nl> + < / target > <nl> + <nl> + < ! - - Create jar - file . - - > <nl> + < target name = " jar " depends = " compile " > <nl> + <nl> + < ! - - Copy all non - java files to classes . - - > <nl> + < copy todir = " $ { classes } / com " > <nl> + < fileset dir = " $ { src } / com " > <nl> + < exclude name = " * * / * . java " / > <nl> + < / fileset > <nl> + < / copy > <nl> + <nl> + < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> + < manifest > <nl> + < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> + < / manifest > <nl> + < ! - - platform - - > <nl> + < fileset dir = " . . / platform / build / classes / com " / > <nl> + < ! - - jna - - > <nl> + < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> + < / jar > <nl> + < / target > <nl> + < / project > <nl> diff - - git a / contrib / shapedwindowdemo / build . xml b / contrib / shapedwindowdemo / build . xml <nl> index ff75c75 . . 949e1e0 100644 <nl> - - - a / contrib / shapedwindowdemo / build . xml <nl> + + + b / contrib / shapedwindowdemo / build . xml <nl> @ @ - 1 , 68 + 1 , 68 @ @ <nl> - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> - < project name = " jnacontrib . shapedwindowdemo " default = " jar " basedir = " . " > <nl> - < description > Builds , tests , and runs the project jnacontrib . shapedwindowdemo . < / description > <nl> - < ! - - Locations - - > <nl> - < property name = " src " location = " . " / > <nl> - < property name = " build " location = " build " / > <nl> - < property name = " jna - dist " location = " . . / . . / . . / dist " / > <nl> - <nl> - < property name = " classes " location = " $ { build } / classes " / > <nl> - < property name = " jar " location = " $ { build } / demo - shapedwindow . jar " / > <nl> - < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> - < property name = " main - class " 	 	 value = " com . sun . jna . contrib . demo . ShapedWindowDemo " / > <nl> - <nl> - < path id = " classpath " > <nl> - < fileset file = " $ { file . reference . jna . jar } " / > <nl> - < fileset dir = " . . / platform / dist " includes = " platform . jar " / > <nl> - < / path > <nl> - <nl> - < ! - - Run Demo . - - > <nl> - < target name = " run " depends = " compile " > <nl> - < java classname = " $ { main - class } " fork = " true " > <nl> - < classpath > <nl> - < pathelement location = " $ { classes } " / > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / java > <nl> - < / target > <nl> - <nl> - < ! - - Delete class and jar files . - - > <nl> - < target name = " clean " > <nl> - < delete dir = " $ { classes } " / > <nl> - < delete file = " $ { jar } " / > <nl> - < delete dir = " $ { build } " / > <nl> - < / target > <nl> - <nl> - < ! - - Compile all classes . - - > <nl> - < target name = " compile " > <nl> - < mkdir dir = " $ { classes } " / > <nl> - < ! - - Compile the project . - - > <nl> - < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> - encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> - < classpath > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / javac > <nl> - < / target > <nl> - <nl> - < ! - - Create jar - file . - - > <nl> - < target name = " jar " depends = " compile " > <nl> - <nl> - < ! - - Copy all non - java files to classes . - - > <nl> - < copy todir = " $ { classes } / com " > <nl> - < fileset dir = " $ { src } / com " > <nl> - < exclude name = " * * / * . java " / > <nl> - < / fileset > <nl> - < / copy > <nl> - <nl> - < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> - < manifest > <nl> - < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> - < / manifest > <nl> - < ! - - platform - - > <nl> - < fileset dir = " . . / platform / build / classes / com " / > <nl> - < ! - - jna - - > <nl> - < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> - < / jar > <nl> - < / target > <nl> - < / project > <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < project name = " jnacontrib . shapedwindowdemo " default = " jar " basedir = " . " > <nl> + < description > Builds , tests , and runs the project jnacontrib . shapedwindowdemo . < / description > <nl> + < ! - - Locations - - > <nl> + < property name = " src " location = " . " / > <nl> + < property name = " build " location = " build " / > <nl> + < property name = " jna - dist " location = " . . / . . / . . / dist " / > <nl> + <nl> + < property name = " classes " location = " $ { build } / classes " / > <nl> + < property name = " jar " location = " $ { build } / demo - shapedwindow . jar " / > <nl> + < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> + < property name = " main - class " 	 	 value = " com . sun . jna . contrib . demo . ShapedWindowDemo " / > <nl> + <nl> + < path id = " classpath " > <nl> + < fileset file = " $ { file . reference . jna . jar } " / > <nl> + < fileset dir = " . . / platform / dist " includes = " jna - platform . jar " / > <nl> + < / path > <nl> + <nl> + < ! - - Run Demo . - - > <nl> + < target name = " run " depends = " compile " > <nl> + < java classname = " $ { main - class } " fork = " true " > <nl> + < classpath > <nl> + < pathelement location = " $ { classes } " / > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / java > <nl> + < / target > <nl> + <nl> + < ! - - Delete class and jar files . - - > <nl> + < target name = " clean " > <nl> + < delete dir = " $ { classes } " / > <nl> + < delete file = " $ { jar } " / > <nl> + < delete dir = " $ { build } " / > <nl> + < / target > <nl> + <nl> + < ! - - Compile all classes . - - > <nl> + < target name = " compile " > <nl> + < mkdir dir = " $ { classes } " / > <nl> + < ! - - Compile the project . - - > <nl> + < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> + encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> + < classpath > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / javac > <nl> + < / target > <nl> + <nl> + < ! - - Create jar - file . - - > <nl> + < target name = " jar " depends = " compile " > <nl> + <nl> + < ! - - Copy all non - java files to classes . - - > <nl> + < copy todir = " $ { classes } / com " > <nl> + < fileset dir = " $ { src } / com " > <nl> + < exclude name = " * * / * . java " / > <nl> + < / fileset > <nl> + < / copy > <nl> + <nl> + < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> + < manifest > <nl> + < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> + < / manifest > <nl> + < ! - - platform - - > <nl> + < fileset dir = " . . / platform / build / classes / com " / > <nl> + < ! - - jna - - > <nl> + < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> + < / jar > <nl> + < / target > <nl> + < / project > <nl> diff - - git a / contrib / w32keyhook / build . xml b / contrib / w32keyhook / build . xml <nl> index 24465c9 . . 56c35b3 100644 <nl> - - - a / contrib / w32keyhook / build . xml <nl> + + + b / contrib / w32keyhook / build . xml <nl> @ @ - 1 , 68 + 1 , 68 @ @ <nl> - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> - < project name = " jnacontrib . w32keyhook " default = " jar " basedir = " . " > <nl> - < description > Builds , tests , and runs the project jnacontrib . w32keyhook . < / description > <nl> - < ! - - Locations - - > <nl> - < property name = " src " location = " . " / > <nl> - < property name = " build " location = " build " / > <nl> - < property name = " jna - dist " location = " . . / . . / . . / dist " / > <nl> - <nl> - < property name = " classes " location = " $ { build } / classes " / > <nl> - < property name = " jar " location = " $ { build } / demo - w32keyhook . jar " / > <nl> - < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> - < property name = " main - class " 	 	 value = " com . sun . jna . contrib . demo . KeyHook " / > <nl> - <nl> - < path id = " classpath " > <nl> - < fileset file = " $ { file . reference . jna . jar } " / > <nl> - < fileset dir = " . . / platform / dist " includes = " platform . jar " / > <nl> - < / path > <nl> - <nl> - < ! - - Run Demo . - - > <nl> - < target name = " run " depends = " compile " > <nl> - < java classname = " $ { main - class } " fork = " true " > <nl> - < classpath > <nl> - < pathelement location = " $ { classes } " / > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / java > <nl> - < / target > <nl> - <nl> - < ! - - Delete class and jar files . - - > <nl> - < target name = " clean " > <nl> - < delete dir = " $ { classes } " / > <nl> - < delete file = " $ { jar } " / > <nl> - < delete dir = " $ { build } " / > <nl> - < / target > <nl> - <nl> - < ! - - Compile all classes . - - > <nl> - < target name = " compile " > <nl> - < mkdir dir = " $ { classes } " / > <nl> - < ! - - Compile the project . - - > <nl> - < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> - encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> - < classpath > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / javac > <nl> - < / target > <nl> - <nl> - < ! - - Create jar - file . - - > <nl> - < target name = " jar " depends = " compile " > <nl> - <nl> - < ! - - Copy all non - java files to classes . - - > <nl> - < copy todir = " $ { classes } / com " > <nl> - < fileset dir = " $ { src } / com " > <nl> - < exclude name = " * * / * . java " / > <nl> - < / fileset > <nl> - < / copy > <nl> - <nl> - < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> - < manifest > <nl> - < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> - < / manifest > <nl> - < ! - - platform - - > <nl> - < fileset dir = " . . / platform / build / classes " / > <nl> - < ! - - jna - - > <nl> - < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> - < / jar > <nl> - < / target > <nl> - < / project > <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < project name = " jnacontrib . w32keyhook " default = " jar " basedir = " . " > <nl> + < description > Builds , tests , and runs the project jnacontrib . w32keyhook . < / description > <nl> + < ! - - Locations - - > <nl> + < property name = " src " location = " . " / > <nl> + < property name = " build " location = " build " / > <nl> + < property name = " jna - dist " location = " . . / . . / . . / dist " / > <nl> + <nl> + < property name = " classes " location = " $ { build } / classes " / > <nl> + < property name = " jar " location = " $ { build } / demo - w32keyhook . jar " / > <nl> + < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> + < property name = " main - class " 	 	 value = " com . sun . jna . contrib . demo . KeyHook " / > <nl> + <nl> + < path id = " classpath " > <nl> + < fileset file = " $ { file . reference . jna . jar } " / > <nl> + < fileset dir = " . . / platform / dist " includes = " jna - platform . jar " / > <nl> + < / path > <nl> + <nl> + < ! - - Run Demo . - - > <nl> + < target name = " run " depends = " compile " > <nl> + < java classname = " $ { main - class } " fork = " true " > <nl> + < classpath > <nl> + < pathelement location = " $ { classes } " / > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / java > <nl> + < / target > <nl> + <nl> + < ! - - Delete class and jar files . - - > <nl> + < target name = " clean " > <nl> + < delete dir = " $ { classes } " / > <nl> + < delete file = " $ { jar } " / > <nl> + < delete dir = " $ { build } " / > <nl> + < / target > <nl> + <nl> + < ! - - Compile all classes . - - > <nl> + < target name = " compile " > <nl> + < mkdir dir = " $ { classes } " / > <nl> + < ! - - Compile the project . - - > <nl> + < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> + encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> + < classpath > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / javac > <nl> + < / target > <nl> + <nl> + < ! - - Create jar - file . - - > <nl> + < target name = " jar " depends = " compile " > <nl> + <nl> + < ! - - Copy all non - java files to classes . - - > <nl> + < copy todir = " $ { classes } / com " > <nl> + < fileset dir = " $ { src } / com " > <nl> + < exclude name = " * * / * . java " / > <nl> + < / fileset > <nl> + < / copy > <nl> + <nl> + < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> + < manifest > <nl> + < attribute name = " Main - Class " value = " $ { main - class } " / > <nl> + < / manifest > <nl> + < ! - - platform - - > <nl> + < fileset dir = " . . / platform / build / classes " / > <nl> + < ! - - jna - - > <nl> + < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> + < / jar > <nl> + < / target > <nl> + < / project > <nl> diff - - git a / contrib / x11 / build . xml b / contrib / x11 / build . xml <nl> index 9e685e0 . . b5bc83c 100644 <nl> - - - a / contrib / x11 / build . xml <nl> + + + b / contrib / x11 / build . xml <nl> @ @ - 1 , 77 + 1 , 77 @ @ <nl> - < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> - < project name = " jnacontrib . x11 " default = " jar " basedir = " . " > <nl> - < description > Builds , tests , and runs the project jnacontrib . x11 . < / description > <nl> - < ! - - Locations - - > <nl> - < property name = " src " location = " src " / > <nl> - < property name = " build " location = " build " / > <nl> - < property name = " jna - src " location = " . . / . . / src " / > <nl> - < property name = " jna - dist " location = " . . / . . / dist " / > <nl> - < property name = " classes " location = " $ { build } / classes " / > <nl> - < property name = " jar " location = " $ { build } / demo - x11 . jar " / > <nl> - < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> - <nl> - < path id = " classpath " > <nl> - < fileset file = " $ { file . reference . jna . jar } " / > <nl> - < fileset dir = " . . / platform / dist " includes = " platform . jar " / > <nl> - < / path > <nl> - <nl> - < ! - - Run XDesktopDemo . - - > <nl> - < target name = " runXDesktopDemo " depends = " compile " > <nl> - < java classname = " jnacontrib . x11 . demos . XDesktopDemo " fork = " true " > <nl> - < classpath > <nl> - < pathelement location = " $ { classes } " / > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / java > <nl> - < / target > <nl> - <nl> - < ! - - Run XTestDemo . - - > <nl> - < target name = " runXTestDemo " depends = " compile " > <nl> - < java classname = " jnacontrib . x11 . demos . XTestDemo " fork = " true " > <nl> - < classpath > <nl> - < pathelement location = " $ { classes } " / > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / java > <nl> - < / target > <nl> - <nl> - < ! - - Delete class and jar files . - - > <nl> - < target name = " clean " > <nl> - < delete dir = " $ { classes } " / > <nl> - < delete file = " $ { jar } " / > <nl> - < delete dir = " $ { build } " / > <nl> - < / target > <nl> - <nl> - < ! - - Compile all classes . - - > <nl> - < target name = " compile " > <nl> - < mkdir dir = " $ { classes } " / > <nl> - < ! - - Compile the project . - - > <nl> - < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> - encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> - < classpath > <nl> - < path refid = " classpath " / > <nl> - < / classpath > <nl> - < / javac > <nl> - < / target > <nl> - <nl> - < ! - - Create jar - file . - - > <nl> - < target name = " jar " depends = " compile " > <nl> - <nl> - < ! - - Copy all non - java files to classes . - - > <nl> - < copy todir = " $ { classes } " > <nl> - < fileset dir = " $ { src } " > <nl> - < exclude name = " * * / * . java " / > <nl> - < / fileset > <nl> - < / copy > <nl> - <nl> - < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> - < manifest > <nl> - < attribute name = " Main - Class " value = " jnacontrib . x11 . demos . XDesktopDemo " / > <nl> - < / manifest > <nl> - < ! - - platform - - > <nl> - < fileset dir = " . . / platform / build / classes " / > <nl> - < ! - - jna - - > <nl> - < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> - < / jar > <nl> - < / target > <nl> - < / project > <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < project name = " jnacontrib . x11 " default = " jar " basedir = " . " > <nl> + < description > Builds , tests , and runs the project jnacontrib . x11 . < / description > <nl> + < ! - - Locations - - > <nl> + < property name = " src " location = " src " / > <nl> + < property name = " build " location = " build " / > <nl> + < property name = " jna - src " location = " . . / . . / src " / > <nl> + < property name = " jna - dist " location = " . . / . . / dist " / > <nl> + < property name = " classes " location = " $ { build } / classes " / > <nl> + < property name = " jar " location = " $ { build } / demo - x11 . jar " / > <nl> + < property name = " file . reference . jna . jar " location = " . . / . . / build / jna . jar " / > <nl> + <nl> + < path id = " classpath " > <nl> + < fileset file = " $ { file . reference . jna . jar } " / > <nl> + < fileset dir = " . . / platform / dist " includes = " jna - platform . jar " / > <nl> + < / path > <nl> + <nl> + < ! - - Run XDesktopDemo . - - > <nl> + < target name = " runXDesktopDemo " depends = " compile " > <nl> + < java classname = " jnacontrib . x11 . demos . XDesktopDemo " fork = " true " > <nl> + < classpath > <nl> + < pathelement location = " $ { classes } " / > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / java > <nl> + < / target > <nl> + <nl> + < ! - - Run XTestDemo . - - > <nl> + < target name = " runXTestDemo " depends = " compile " > <nl> + < java classname = " jnacontrib . x11 . demos . XTestDemo " fork = " true " > <nl> + < classpath > <nl> + < pathelement location = " $ { classes } " / > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / java > <nl> + < / target > <nl> + <nl> + < ! - - Delete class and jar files . - - > <nl> + < target name = " clean " > <nl> + < delete dir = " $ { classes } " / > <nl> + < delete file = " $ { jar } " / > <nl> + < delete dir = " $ { build } " / > <nl> + < / target > <nl> + <nl> + < ! - - Compile all classes . - - > <nl> + < target name = " compile " > <nl> + < mkdir dir = " $ { classes } " / > <nl> + < ! - - Compile the project . - - > <nl> + < javac srcdir = " $ { src } " destdir = " $ { classes } " target = " 1 . 5 " source = " 1 . 5 " <nl> + encoding = " UTF - 8 " debug = " on " includeantruntime = " false " > <nl> + < classpath > <nl> + < path refid = " classpath " / > <nl> + < / classpath > <nl> + < / javac > <nl> + < / target > <nl> + <nl> + < ! - - Create jar - file . - - > <nl> + < target name = " jar " depends = " compile " > <nl> + <nl> + < ! - - Copy all non - java files to classes . - - > <nl> + < copy todir = " $ { classes } " > <nl> + < fileset dir = " $ { src } " > <nl> + < exclude name = " * * / * . java " / > <nl> + < / fileset > <nl> + < / copy > <nl> + <nl> + < jar jarfile = " $ { jar } " basedir = " $ { classes } " > <nl> + < manifest > <nl> + < attribute name = " Main - Class " value = " jnacontrib . x11 . demos . XDesktopDemo " / > <nl> + < / manifest > <nl> + < ! - - platform - - > <nl> + < fileset dir = " . . / platform / build / classes " / > <nl> + < ! - - jna - - > <nl> + < zipfileset src = " $ { file . reference . jna . jar } " / > <nl> + < / jar > <nl> + < / target > <nl> + < / project >
diff - - git a / www / ReleasingJNA . md b / www / ReleasingJNA . md <nl> index 7e86cd9 . . 9ee7552 100644 <nl> - - - a / www / ReleasingJNA . md <nl> + + + b / www / ReleasingJNA . md <nl> @ @ - 5 , 11 + 5 , 11 @ @ JNA Release Process <nl> JNA ' s native API has been changed ( i . e . md5 changed ) . Bump JNA minor version if its Java API <nl> has changed significantly or incompatibly . <nl> <nl> - * If native changes have been made , run ` ant dist ` target on each target <nl> - platform , pushing the resulting target - specific jar file to master . <nl> + * If native changes have been made , run ` ant native ` target on each target <nl> + platform , pushing the resulting target - specific jar ( in lib / native ) file to master . <nl> <nl> - * Run ` ant clean dist ` target . Commit and push generated files in dist , except for a platform specific jar : " & lt ; os > - & lt ; arch > . jar " . <nl> - You will also see differences in the pom - * . xml files and src / . . . / Native . java . Commit and push these also . Do not commit the altered platform specific jar " & lt ; os > - & lt ; arch > . jar " in lib / native / . <nl> + * Run ` ant clean dist ` target on a fully up - to - date checkout with no modifications . Commit and push generated files in dist , except for a platform specific jar : " & lt ; os > - & lt ; arch > . jar " . <nl> + You will also see differences in the pom - * . xml files and src / . . . / Native . java . Commit and push these also . <nl> <nl> * Update Javadoc <nl> Check out gh - pages branch , copy latest doc / javadoc into < version > / javadoc , <nl> @ @ - 19 , 6 + 19 , 7 @ @ JNA Release Process <nl> * download links <nl> * javadoc links <nl> <nl> + * [ Release to Maven Central ] ( https : / / github . com / twall / jna / blob / master / www / PublishingToMavenCentral . md ) <nl> + <nl> * Tag as & lt ; version > , push new tag to origin <nl> <nl> - * [ Release to Maven Central ] ( https : / / github . com / twall / jna / blob / master / www / PublishingToMavenCentral . md )
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 22c2f26 . . 5cb9e4f 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 23 , 6 + 23 , 7 @ @ Features <nl> * [ # 243 ] ( https : / / github . com / twall / jna / issues / 243 ) : Automatically accommodate long library paths on Windows which would otherwise fail - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 241 ] ( https : / / github . com / twall / jna / issues / 241 ) - Added ` com . sun . jna . platform . win32 . Shell32 . SHAppBarMessage ` - [ @ bsorrentino ] ( https : / / github . com / bsorrentino ) . <nl> * Make ` Structure . read / writeField ( ) ` protected to facilitate per - field overrides - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Speed up callback lookup where large numbers of native function pointers are in use - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / src / com / sun / jna / CallbackReference . java b / src / com / sun / jna / CallbackReference . java <nl> index 35dfe61 . . c3077b1 100644 <nl> - - - a / src / com / sun / jna / CallbackReference . java <nl> + + + b / src / com / sun / jna / CallbackReference . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2007 - 2008 Timothy Wall , All Rights Reserved <nl> + / * Copyright ( c ) 2007 - 2013 Timothy Wall , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna ; <nl> <nl> + import java . lang . ref . Reference ; <nl> import java . lang . ref . WeakReference ; <nl> import java . lang . reflect . InvocationHandler ; <nl> import java . lang . reflect . InvocationTargetException ; <nl> @ @ - 37 , 6 + 38 , 7 @ @ class CallbackReference extends WeakReference { <nl> <nl> static final Map callbackMap = new WeakHashMap ( ) ; <nl> static final Map directCallbackMap = new WeakHashMap ( ) ; <nl> + static final Map pointerCallbackMap = new WeakHashMap ( ) ; <nl> static final Map allocations = new WeakHashMap ( ) ; <nl> <nl> private static final Method PROXY _ CALLBACK _ METHOD ; <nl> @ @ - 95 , 7 + 97 , 10 @ @ class CallbackReference extends WeakReference { <nl> <nl> / * * Return a Callback associated with the given function pointer . <nl> * If the pointer refers to a Java callback trampoline , return the original <nl> - * Java Callback . Otherwise , return a proxy to the native function pointer . <nl> + * Java Callback . Otherwise , return a proxy to the native function <nl> + * pointer . <nl> + * @ throw IllegalStateException if the given pointer has already been <nl> + * mapped to a callback of a different type . <nl> * / <nl> public static Callback getCallback ( Class type , Pointer p ) { <nl> return getCallback ( type , p , false ) ; <nl> @ @ - 110 , 29 + 115 , 30 @ @ class CallbackReference extends WeakReference { <nl> throw new IllegalArgumentException ( " Callback type must be an interface " ) ; <nl> Map map = direct ? directCallbackMap : callbackMap ; <nl> synchronized ( callbackMap ) { <nl> - for ( Iterator i = map . keySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { <nl> - Callback cb = ( Callback ) i . next ( ) ; <nl> - if ( type . isAssignableFrom ( cb . getClass ( ) ) ) { <nl> - CallbackReference cbref = ( CallbackReference ) map . get ( cb ) ; <nl> - Pointer cbp = cbref ! = null <nl> - ? cbref . getTrampoline ( ) : getNativeFunctionPointer ( cb ) ; <nl> - if ( p . equals ( cbp ) ) { <nl> - return cb ; <nl> - } <nl> + Callback cb = null ; <nl> + Reference ref = ( Reference ) pointerCallbackMap . get ( p ) ; <nl> + if ( ref ! = null ) { <nl> + cb = ( Callback ) ref . get ( ) ; <nl> + if ( cb ! = null & & ! type . isAssignableFrom ( cb . getClass ( ) ) ) { <nl> + throw new IllegalStateException ( " Pointer " + p + " already mapped to " + cb ) ; <nl> } <nl> + return cb ; <nl> } <nl> int ctype = AltCallingConvention . class . isAssignableFrom ( type ) <nl> ? Function . ALT _ CONVENTION : Function . C _ CONVENTION ; <nl> Map foptions = new HashMap ( Native . getLibraryOptions ( type ) ) ; <nl> foptions . put ( Function . OPTION _ INVOKING _ METHOD , getCallbackMethod ( type ) ) ; <nl> NativeFunctionHandler h = new NativeFunctionHandler ( p , ctype , foptions ) ; <nl> - Callback cb = ( Callback ) Proxy . newProxyInstance ( type . getClassLoader ( ) , new Class [ ] { type } , h ) ; <nl> + cb = ( Callback ) Proxy . newProxyInstance ( type . getClassLoader ( ) , new Class [ ] { type } , h ) ; <nl> + / / No CallbackReference for this callback <nl> map . put ( cb , null ) ; <nl> + pointerCallbackMap . put ( p , new WeakReference ( cb ) ) ; <nl> return cb ; <nl> } <nl> } <nl> <nl> Pointer cbstruct ; <nl> + Pointer trampoline ; <nl> / / Keep a reference to the proxy to avoid premature GC of it <nl> CallbackProxy proxy ; <nl> Method method ; <nl> @ @ - 331 , 7 + 337 , 10 @ @ class CallbackReference extends WeakReference { <nl> <nl> / * * Obtain a pointer to the native glue code for this callback . * / <nl> public Pointer getTrampoline ( ) { <nl> - return cbstruct . getPointer ( 0 ) ; <nl> + if ( trampoline = = null ) { <nl> + trampoline = cbstruct . getPointer ( 0 ) ; <nl> + } <nl> + return trampoline ; <nl> } <nl> <nl> / * * Free native resources associated with this callback when GC ' d . * / <nl> @ @ - 389 , 6 + 398 , 7 @ @ class CallbackReference extends WeakReference { <nl> if ( cbref = = null ) { <nl> cbref = new CallbackReference ( cb , callingConvention , direct ) ; <nl> map . put ( cb , cbref ) ; <nl> + pointerCallbackMap . put ( cbref . getTrampoline ( ) , new WeakReference ( cb ) ) ; <nl> if ( initializers . containsKey ( cb ) ) { <nl> cbref . setCallbackOptions ( Native . CB _ HAS _ INITIALIZER ) ; <nl> } <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index 776d3e7 . . 5ee58db 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2007 - 2008 Timothy Wall , All Rights Reserved <nl> + / * Copyright ( c ) 2007 - 2013 Timothy Wall , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 238 , 9 + 238 , 20 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> } <nl> } <nl> <nl> + public void testThrowOnMultiplyMappedCallback ( ) { <nl> + try { <nl> + Pointer p = new Pointer ( getName ( ) . hashCode ( ) ) ; <nl> + CallbackReference . getCallback ( TestLibrary . VoidCallback . class , p ) ; <nl> + CallbackReference . getCallback ( TestLibrary . ByteCallback . class , p ) ; <nl> + fail ( " Multiply - mapped callback should fail " ) ; <nl> + } <nl> + catch ( IllegalStateException e ) { <nl> + } <nl> + } <nl> + <nl> public void testNoMethodCallback ( ) { <nl> try { <nl> - CallbackReference . getCallback ( TestLibrary . NoMethodCallback . class , new Pointer ( 1 ) ) ; <nl> + CallbackReference . getCallback ( TestLibrary . NoMethodCallback . class , new Pointer ( getName ( ) . hashCode ( ) ) ) ; <nl> fail ( " Callback with no callback method should fail " ) ; <nl> } <nl> catch ( IllegalArgumentException e ) { <nl> @ @ - 248 , 12 + 259 , 12 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> } <nl> <nl> public void testCustomMethodCallback ( ) { <nl> - CallbackReference . getCallback ( TestLibrary . CustomMethodCallback . class , new Pointer ( 1 ) ) ; <nl> + CallbackReference . getCallback ( TestLibrary . CustomMethodCallback . class , new Pointer ( getName ( ) . hashCode ( ) ) ) ; <nl> } <nl> <nl> public void testTooManyMethodsCallback ( ) { <nl> try { <nl> - CallbackReference . getCallback ( TestLibrary . TooManyMethodsCallback . class , new Pointer ( 1 ) ) ; <nl> + CallbackReference . getCallback ( TestLibrary . TooManyMethodsCallback . class , new Pointer ( getName ( ) . hashCode ( ) ) ) ; <nl> fail ( " Callback lookup with too many methods should fail " ) ; <nl> } <nl> catch ( IllegalArgumentException e ) { <nl> @ @ - 261 , 19 + 272 , 19 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> } <nl> <nl> public void testMultipleMethodsCallback ( ) { <nl> - CallbackReference . getCallback ( TestLibrary . MultipleMethodsCallback . class , new Pointer ( 1 ) ) ; <nl> + CallbackReference . getCallback ( TestLibrary . MultipleMethodsCallback . class , new Pointer ( getName ( ) . hashCode ( ) ) ) ; <nl> } <nl> <nl> public void testNativeFunctionPointerStringValue ( ) { <nl> - Callback cb = CallbackReference . getCallback ( TestLibrary . VoidCallback . class , new Pointer ( 1 ) ) ; <nl> + Callback cb = CallbackReference . getCallback ( TestLibrary . VoidCallback . class , new Pointer ( getName ( ) . hashCode ( ) ) ) ; <nl> Class cls = CallbackReference . findCallbackClass ( cb . getClass ( ) ) ; <nl> assertTrue ( " toString should include Java Callback type : " + cb + " ( " <nl> + cls + " ) " , cb . toString ( ) . indexOf ( cls . getName ( ) ) ! = - 1 ) ; <nl> } <nl> <nl> public void testLookupSameCallback ( ) { <nl> - Callback cb = CallbackReference . getCallback ( TestLibrary . VoidCallback . class , new Pointer ( 1 ) ) ; <nl> - Callback cb2 = CallbackReference . getCallback ( TestLibrary . VoidCallback . class , new Pointer ( 1 ) ) ; <nl> + Callback cb = CallbackReference . getCallback ( TestLibrary . VoidCallback . class , new Pointer ( getName ( ) . hashCode ( ) ) ) ; <nl> + Callback cb2 = CallbackReference . getCallback ( TestLibrary . VoidCallback . class , new Pointer ( getName ( ) . hashCode ( ) ) ) ; <nl> <nl> assertEquals ( " Callback lookups for same pointer should return same Callback object " , cb , cb2 ) ; <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 83f8bd6 . . 22c2f26 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 7 , 7 + 7 , 6 @ @ NOTE : JNI native support is typically incompatible between minor versions , and a <nl> <nl> Features <nl> - - - - - - - - <nl> - * [ # 241 ] ( https : / / github . com / twall / jna / issues / 241 ) - Added ` com . sun . jna . platform . win32 . Shell32 . SHAppBarMessage ` - [ @ bsorrentino ] ( https : / / github . com / bsorrentino ) . <nl> * Added ASL licensing to facilitate distribution - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 109 ] ( https : / / github . com / twall / jna / issues / 109 ) : Set default Java compatibility level to 1 . 6 - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 209 ] ( https : / / github . com / twall / jna / issues / 209 ) : Improved default performance saving last error results - [ @ twall ] ( https : / / github . com / twall ) . <nl> @ @ - 22 , 6 + 21 , 8 @ @ Features <nl> * Added ` jna . debug _ load ` property to diagnose library loading issues - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Throw explicit ` IllegalArgumentException ` when ` Structure . ByReference ` is used where it shouldn ' t be ( can result in multiply freed memory or other unexpected behavior ) - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 243 ] ( https : / / github . com / twall / jna / issues / 243 ) : Automatically accommodate long library paths on Windows which would otherwise fail - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ # 241 ] ( https : / / github . com / twall / jna / issues / 241 ) - Added ` com . sun . jna . platform . win32 . Shell32 . SHAppBarMessage ` - [ @ bsorrentino ] ( https : / / github . com / bsorrentino ) . <nl> + * Make ` Structure . read / writeField ( ) ` protected to facilitate per - field overrides - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index cb80d08 . . b1bf3f2 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 624 , 7 + 624 , 7 @ @ public abstract class Structure { <nl> * updated from the contents of native memory . <nl> * / <nl> / / TODO : make overridable method with calculated native type , offset , etc <nl> - Object readField ( StructField structField ) { <nl> + protected Object readField ( StructField structField ) { <nl> <nl> / / Get the offset of the field <nl> int offset = structField . offset ; <nl> @ @ - 734 , 7 + 734 , 7 @ @ public abstract class Structure { <nl> writeField ( structField ) ; <nl> } <nl> <nl> - void writeField ( StructField structField ) { <nl> + protected void writeField ( StructField structField ) { <nl> <nl> if ( structField . isReadOnly ) <nl> return ; <nl> @ @ - 1663 , 7 + 1663 , 7 @ @ public abstract class Structure { <nl> return null ; <nl> } <nl> <nl> - static class StructField extends Object { <nl> + protected static class StructField extends Object { <nl> public String name ; <nl> public Class type ; <nl> public Field field ; <nl> diff - - git a / www / Contributing . md b / www / Contributing . md <nl> index 5a09ade . . 7382f9a 100644 <nl> - - - a / www / Contributing . md <nl> + + + b / www / Contributing . md <nl> @ @ - 17 , 8 + 17 , 8 @ @ gcc , autotools ( for libffi ) , ant ( 1 . 8 + ) , a JDK ( 1 . 4 + ) , and a few other typical <nl> command - line utilities available . Feel free to report any issues , we ' ll <nl> generally pull build fixes immediately . <nl> <nl> - Native builds may be skipped by passing ` - Dskip - native = true ` to ` ant ` . It ' s <nl> - save to skip the native build as long as your modifications are restricted to <nl> + Native bits are built by passing ` - Dskip - native = false ` to ` ant ` . It ' s <nl> + safe to skip the native build as long as your modifications are restricted to <nl> Java code . <nl> <nl> For debian - style installs , <nl> diff - - git a / www / PublishingToMavenCentral . md b / www / PublishingToMavenCentral . md <nl> index f3807ae . . b41d7e5 100644 <nl> - - - a / www / PublishingToMavenCentral . md <nl> + + + b / www / PublishingToMavenCentral . md <nl> @ @ - 34 , 7 + 34 , 7 @ @ Every Time <nl> <nl> * Verify the & lt ; version > tags in [ pom - jna . xml ] ( https : / / github . com / twall / jna / blob / master / pom - jna . xml ) and [ pom - platform . xml ] ( https : / / github . com / twall / jna / blob / master / pom - platform . xml ) <nl> match the version ( jna . version ) in [ build . xml ] ( https : / / github . com / twall / jna / blob / master / build . xml ) . <nl> - * Run ` ant - Dmaven - release = true - Dskip - native = true stage ` . This uploads current checkout to [ maven . java . net ] ( https : / / maven . java . net ) . <nl> + * Run ` ant - Dmaven - release = true stage ` . This uploads current checkout to [ maven . java . net ] ( https : / / maven . java . net ) . <nl> * Follow steps from [ release <nl> it ] ( https : / / docs . sonatype . org / display / Repository / Sonatype + OSS + Maven + Repository + Usage + Guide # SonatypeOSSMavenRepositoryUsageGuide - 8a . ReleaseIt ) . <nl> Note that the releases are managed from [ maven . java . net ] ( https : / / maven . java . net ) . <nl> @ @ - 55 , 7 + 55 , 7 @ @ see : https : / / maven . java . net / content / repositories / snapshots / net / java / dev / jna / for <nl> To publish a development SNAPSHOT do the following : <nl> <nl> git checkout - - . <nl> - ant deploy - Dskip - native = true <nl> + ant deploy <nl> <nl> Note : Unlike stable , unchanging releases , a SNAPSHOT may be re - published at any time ( and is typically deleted after a <nl> full release is performed ) . <nl> diff - - git a / www / ReleasingJNA . md b / www / ReleasingJNA . md <nl> index be038db . . 7e86cd9 100644 <nl> - - - a / www / ReleasingJNA . md <nl> + + + b / www / ReleasingJNA . md <nl> @ @ - 10 , 7 + 10 , 6 @ @ JNA Release Process <nl> <nl> * Run ` ant clean dist ` target . Commit and push generated files in dist , except for a platform specific jar : " & lt ; os > - & lt ; arch > . jar " . <nl> You will also see differences in the pom - * . xml files and src / . . . / Native . java . Commit and push these also . Do not commit the altered platform specific jar " & lt ; os > - & lt ; arch > . jar " in lib / native / . <nl> - At some point we may change the ' dist ' target to " skip - native " , thereby avoiding the rebuild of the " & lt ; os > - & lt ; arch > . jar " files in lib / native and dist . <nl> <nl> * Update Javadoc <nl> Check out gh - pages branch , copy latest doc / javadoc into < version > / javadoc ,
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 4f42957 . . 83f8bd6 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 7 , 7 + 7 , 7 @ @ NOTE : JNI native support is typically incompatible between minor versions , and a <nl> <nl> Features <nl> - - - - - - - - <nl> - * [ # 241 ] ( https : / / github . com / twall / jna / issues / 241 ) - Added ` com . sun . jna . platform . win32 . Shell32 . SHAppBarMessage ` - [ @ bsorrentinoJ ] ( https : / / github . com / bsorrentino ) . <nl> + * [ # 241 ] ( https : / / github . com / twall / jna / issues / 241 ) - Added ` com . sun . jna . platform . win32 . Shell32 . SHAppBarMessage ` - [ @ bsorrentino ] ( https : / / github . com / bsorrentino ) . <nl> * Added ASL licensing to facilitate distribution - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 109 ] ( https : / / github . com / twall / jna / issues / 109 ) : Set default Java compatibility level to 1 . 6 - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 209 ] ( https : / / github . com / twall / jna / issues / 209 ) : Improved default performance saving last error results - [ @ twall ] ( https : / / github . com / twall ) .
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 9eae689 . . 966ebb1 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 7 , 6 + 7 , 7 @ @ NOTE : JNI native support is typically incompatible between minor versions , and a <nl> <nl> Features <nl> - - - - - - - - <nl> + * [ # 241 ] ( https : / / github . com / twall / jna / issues / 241 ) - Add support function SHAppBarMessage from ShellApi - [ @ bsorrentinoJ ] ( https : / / github . com / bsorrentino ) . <nl> * Added ASL licensing to facilitate distribution - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 109 ] ( https : / / github . com / twall / jna / issues / 109 ) : Set default Java compatibility level to 1 . 6 - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 209 ] ( https : / / github . com / twall / jna / issues / 209 ) : Improved default performance saving last error results - [ @ twall ] ( https : / / github . com / twall ) . <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> index 321a20c . . b62c8d6 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> @ @ - 16 , 6 + 16 , 7 @ @ import com . sun . jna . Native ; <nl> import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> import com . sun . jna . platform . win32 . WinDef . INT _ PTR ; <nl> + import com . sun . jna . platform . win32 . WinDef . UINT _ PTR ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> @ @ - 168 , 4 + 169 , 42 @ @ public interface Shell32 extends ShellAPI , StdCallLibrary { <nl> * @ return { @ code true } if successful ; otherwise , { @ code false } . <nl> * / <nl> boolean SHGetSpecialFolderPath ( HWND owner , char [ ] path , int csidl , boolean create ) ; <nl> + <nl> + <nl> + / * * <nl> + * SHAppBarMessage function <nl> + * <nl> + * @ param dwMessage <nl> + * Appbar message value to send . This parameter can be one of the following values . <nl> + * { @ link ShellAPI # ABM _ NEW } Registers a new appbar and specifies the message identifier that the system should use to send notificat
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 774ae64 . . 9eae689 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 20 , 6 + 20 , 7 @ @ Features <nl> * [ # 236 ] ( https : / / github . com / twall / jna / issues / 236 ) : Auto - strip profiler native method prefix specified by ` jna . profiler . prefix ` , which defaults to $ $ YJP $ $ - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Added ` jna . debug _ load ` property to diagnose library loading issues - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Throw explicit ` IllegalArgumentException ` when ` Structure . ByReference ` is used where it shouldn ' t be ( can result in multiply freed memory or other unexpected behavior ) - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ # 243 ] ( https : / / github . com / twall / jna / issues / 243 ) : Automatically accommodate long library paths on Windows which would otherwise fail - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index 6d465bb . . 4e7c979 100755 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 931a790 . . 71fd083 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 21 , 7 + 21 , 7 @ @ <nl> # include < windows . h > <nl> # include < psapi . h > <nl> # define STRTYPE wchar _ t * <nl> - # define NAME2CSTR ( ENV , JSTR ) newWideCString ( ENV , JSTR ) <nl> + # define NAME2CSTR ( ENV , JSTR ) w32 _ short _ name ( ENV , JSTR ) <nl> # ifdef _ WIN32 _ WCE <nl> # include < tlhelp32 . h > <nl> # define DEFAULT _ LOAD _ OPTS 0 / * altered search path unsupported on CE * / <nl> @ @ - 98 , 81 + 98 , 6 @ @ static int _ protect ; <nl> extern " C " { <nl> # endif <nl> <nl> - # ifdef _ WIN32 <nl> - static char * <nl> - w32 _ format _ error ( int err , char * buf , int len ) { <nl> - wchar _ t * wbuf = NULL ; <nl> - int wlen = <nl> - FormatMessageW ( FORMAT _ MESSAGE _ FROM _ SYSTEM <nl> - | FORMAT _ MESSAGE _ IGNORE _ INSERTS <nl> - | FORMAT _ MESSAGE _ ALLOCATE _ BUFFER , <nl> - NULL , err , 0 , ( LPWSTR ) & wbuf , 0 , NULL ) ; <nl> - if ( wlen > 0 ) { <nl> - int result = WideCharToMultiByte ( CP _ UTF8 , 0 , wbuf , - 1 , buf , len , NULL , NULL ) ; <nl> - if ( result = = 0 ) { <nl> - fprintf ( stderr , " JNA : error converting error message : % d \ n " , ( int ) GET _ LAST _ ERROR ( ) ) ; <nl> - * buf = 0 ; <nl> - } <nl> - else { <nl> - buf [ len - 1 ] = 0 ; <nl> - } <nl> - } <nl> - else { <nl> - / / Error retrieving message <nl> - * buf = 0 ; <nl> - } <nl> - if ( wbuf ) { <nl> - LocalFree ( wbuf ) ; <nl> - } <nl> - <nl> - return buf ; <nl> - } <nl> - static HANDLE <nl> - w32 _ find _ entry ( JNIEnv * env , HANDLE handle , const char * funname ) { <nl> - void * func = NULL ; <nl> - if ( handle ! = GetModuleHandle ( NULL ) ) { <nl> - func = GetProcAddress ( handle , funname ) ; <nl> - } <nl> - else { <nl> - # if defined ( _ WIN32 _ WCE ) <nl> - / * CE has no EnumProcessModules , have to use an alternate API * / <nl> - HANDLE snapshot ; <nl> - if ( ( snapshot = CreateToolhelp32Snapshot ( TH32CS _ SNAPMODULE , 0 ) ) ! = INVALID _ HANDLE _ VALUE ) { <nl> - MODULEENTRY32 moduleInfo ; <nl> - moduleInfo . dwSize = sizeof ( moduleInfo ) ; <nl> - if ( Module32First ( snapshot , & moduleInfo ) ) { <nl> - do { <nl> - if ( ( func = ( void * ) GetProcAddress ( moduleInfo . hModule , funname ) ) ) { <nl> - break ; <nl> - } <nl> - } while ( Module32Next ( snapshot , & moduleInfo ) ) ; <nl> - } <nl> - CloseToolhelp32Snapshot ( snapshot ) ; <nl> - } <nl> - # else <nl> - HANDLE cur _ proc = GetCurrentProcess ( ) ; <nl> - HMODULE * modules ; <nl> - DWORD needed , i ; <nl> - if ( ! EnumProcessModules ( cur _ proc , NULL , 0 , & needed ) ) { <nl> - fail : <nl> - throwByName ( env , EError , " Unexpected error enumerating modules " ) ; <nl> - return 0 ; <nl> - } <nl> - modules = ( HMODULE * ) alloca ( needed ) ; <nl> - if ( ! EnumProcessModules ( cur _ proc , modules , needed , & needed ) ) { <nl> - goto fail ; <nl> - } <nl> - for ( i = 0 ; i < needed / sizeof ( HMODULE ) ; i + + ) { <nl> - if ( ( func = ( void * ) GetProcAddress ( modules [ i ] , funname ) ) ) { <nl> - break ; <nl> - } <nl> - } <nl> - # endif <nl> - } <nl> - return func ; <nl> - } <nl> - # endif / * _ WIN32 * / <nl> - <nl> # define MEMCPY ( ENV , D , S , L ) do { \ <nl> PSTART ( ) ; memcpy ( D , S , L ) ; PEND ( ENV ) ; \ <nl> } while ( 0 ) <nl> @ @ - 304 , 6 + 229 , 118 @ @ static ffi _ type * getStructureType ( JNIEnv * , jobject ) ; <nl> <nl> typedef void ( JNICALL * release _ t ) ( JNIEnv * , jarray , void * , jint ) ; <nl> <nl> + # ifdef _ WIN32 <nl> + static char * <nl> + w32 _ format _ error ( int err , char * buf , int len ) { <nl> + wchar _ t * wbuf = NULL ; <nl> + int wlen = <nl> + FormatMessageW ( FORMAT _ MESSAGE _ FROM _ SYSTEM <nl> + | FORMAT _ MESSAGE _ IGNORE _ INSERTS <nl> + | FORMAT _ MESSAGE _ ALLOCATE _ BUFFER , <nl> + NULL , err , 0 , ( LPWSTR ) & wbuf , 0 , NULL ) ; <nl> + if ( wlen > 0 ) { <nl> + int result = WideCharToMultiByte ( CP _ UTF8 , 0 , wbuf , - 1 , buf , len , NULL , NULL ) ; <nl> + if ( result = = 0 ) { <nl> + fprintf ( stderr , " JNA : error converting error message : % d \ n " , ( int ) GET _ LAST _ ERROR ( ) ) ; <nl> + * buf = 0 ; <nl> + } <nl> + else { <nl> + buf [ len - 1 ] = 0 ; <nl> + } <nl> + } <nl> + else { <nl> + / / Error retrieving message <nl> + * buf = 0 ; <nl> + } <nl> + if ( wbuf ) { <nl> + LocalFree ( wbuf ) ; <nl> + } <nl> + <nl> + return buf ; <nl> + } <nl> + static wchar _ t * <nl> + w32 _ short _ name ( JNIEnv * env , jstring str ) { <nl> + wchar _ t * wstr = newWideCString ( env , str ) ; <nl> + if ( wstr & & * wstr ) { <nl> + DWORD required ; <nl> + size _ t size = wcslen ( wstr ) + 5 ; <nl> + wchar _ t * prefixed = ( wchar _ t * ) alloca ( sizeof ( wchar _ t ) * size ) ; <nl> + <nl> + # ifdef _ MSC _ VER <nl> + swprintf ( prefixed , size , L " \ \ \ \ ? \ \ % ls " , wstr ) ; <nl> + # else <nl> + swprintf ( prefixed , L " \ \ \ \ ? \ \ % ls " , wstr ) ; <nl> + # endif <nl> + if ( ( required = GetShortPathNameW ( prefixed , NULL , 0 ) ) ! = 0 ) { <nl> + wchar _ t * wshort = ( wchar _ t * ) malloc ( sizeof ( wchar _ t ) * required ) ; <nl> + if ( GetShortPathNameW ( prefixed , wshort , required ) ) { <nl> + free ( ( void * ) wstr ) ; <nl> + wstr = wshort ; <nl> + } <nl> + else { <nl> + char buf [ MSG _ SIZE ] ; <nl> + throwByName ( env , EError , LOAD _ ERROR ( buf , sizeof ( buf ) ) ) ; <nl> + free ( ( void * ) wstr ) ; <nl> + free ( ( void * ) wshort ) ; <nl> + wstr = NULL ; <nl> + } <nl> + } <nl> + else if ( GET _ LAST _ ERROR ( ) ! = ERROR _ FILE _ NOT _ FOUND ) { <nl> + char buf [ MSG _ SIZE ] ; <nl> + throwByName ( env , EError , LOAD _ ERROR ( buf , sizeof ( buf ) ) ) ; <nl> + free ( ( void * ) wstr ) ; <nl> + wstr = NULL ; <nl> + } <nl> + } <nl> + return wstr ; <nl> + } <nl> + <nl> + static HANDLE <nl> + w32 _ find _ entry ( JNIEnv * env , HANDLE handle , const char * funname ) { <nl> + void * func = NULL ; <nl> + if ( handle ! = GetModuleHandle ( NULL ) ) { <nl> + func = GetProcAddress ( handle , funname ) ; <nl> + } <nl> + else { <nl> + # if defined ( _ WIN32 _ WCE ) <nl> + / * CE has no EnumProcessModules , have to use an alternate API * / <nl> + HANDLE snapshot ; <nl> + if ( ( snapshot = CreateToolhelp32Snapshot ( TH32CS _ SNAPMODULE , 0 ) ) ! = INVALID _ HANDLE _ VALUE ) { <nl> + MODULEENTRY32 moduleInfo ; <nl> + moduleInfo . dwSize = sizeof ( moduleInfo ) ; <nl> + if ( Module32First ( snapshot , & moduleInfo ) ) { <nl> + do { <nl> + if ( ( func = ( void * ) GetProcAddress ( moduleInfo . hModule , funname ) ) ) { <nl> + break ; <nl> + } <nl> + } while ( Module32Next ( snapshot , & moduleInfo ) ) ; <nl> + } <nl> + CloseToolhelp32Snapshot ( snapshot ) ; <nl> + } <nl> + # else <nl> + HANDLE cur _ proc = GetCurrentProcess ( ) ; <nl> + HMODULE * modules ; <nl> + DWORD needed , i ; <nl> + if ( ! EnumProcessModules ( cur _ proc , NULL , 0 , & needed ) ) { <nl> + fail : <nl> + throwByName ( env , EError , " Unexpected error enumerating modules " ) ; <nl> + return 0 ; <nl> + } <nl> + modules = ( HMODULE * ) alloca ( needed ) ; <nl> + if ( ! EnumProcessModules ( cur _ proc , modules , needed , & needed ) ) { <nl> + goto fail ; <nl> + } <nl> + for ( i = 0 ; i < needed / sizeof ( HMODULE ) ; i + + ) { <nl> + if ( ( func = ( void * ) GetProcAddress ( modules [ i ] , funname ) ) ) { <nl> + break ; <nl> + } <nl> + } <nl> + # endif <nl> + } <nl> + return func ; <nl> + } <nl> + # endif / * _ WIN32 * / <nl> + <nl> # if 0 <nl> / * * Invokes System . err . println ( for debugging only ) . * / <nl> void <nl> @ @ - 621 , 6 + 658 , 8 @ @ getChars ( JNIEnv * env , wchar _ t * volatile dst , jcharArray chars , volatile jint off <nl> int i ; <nl> ( * env ) - > GetCharArrayRegion ( env , chars , off , count , buf ) ; <nl> for ( i = 0 ; i < count ; i + + ) { <nl> + / / TODO : ensure proper encoding conversion from jchar to native <nl> + / / wchar _ t <nl> dst [ i ] = ( wchar _ t ) buf [ i ] ; <nl> } <nl> dst + = count ; <nl> @ @ - 725 , 13 + 764 , 16 @ @ newCStringEncoding ( JNIEnv * env , jstring jstr , const char * encoding ) <nl> / * Translates a Java string to a wide C string using the String . toCharArray <nl> * method . <nl> * / <nl> - / / TODO : are any encoding changes required ? <nl> static wchar _ t * <nl> newWideCString ( JNIEnv * env , jstring str ) <nl> { <nl> jcharArray chars = 0 ; <nl> wchar _ t * result = NULL ; <nl> <nl> + if ( ( * env ) - > IsSameObject ( env , str , NULL ) ) { <nl> + return result ; <nl> + } <nl> + <nl> chars = ( * env ) - > CallObjectMethod ( env , str , MID _ String _ toCharArray ) ; <nl> if ( ! ( * env ) - > ExceptionCheck ( env ) ) { <nl> jint len = ( * env ) - > GetArrayLength ( env , chars ) ; <nl> @ @ - 741 , 7 + 783 , 6 @ @ newWideCString ( JNIEnv * env , jstring str ) <nl> throwByName ( env , EOutOfMemory , " Can ' t allocate wide C string " ) ; <nl> return NULL ; <nl> } <nl> - / / TODO : ensure proper encoding conversion from jchar to native wchar _ t <nl> getChars ( env , result , chars , 0 , len ) ; <nl> if ( ( * env ) - > ExceptionCheck ( env ) ) { <nl> free ( ( void * ) result ) ; <nl> @ @ - 1816 , 8 + 1857 , 9 @ @ method _ handler ( ffi _ cif * cif , void * volatile resp , void * * argp , void * cdata ) { <nl> case CVT _ ARRAY _ LONG : <nl> case CVT _ ARRAY _ FLOAT : <nl> case CVT _ ARRAY _ DOUBLE : <nl> - if ( * ( void * * ) args [ i ] & & release [ i ] ) <nl> + if ( * ( void * * ) args [ i ] & & release [ i ] ! = NULL ) { <nl> release [ i ] ( env , objects [ i ] , elems [ i ] , 0 ) ; <nl> + } <nl> break ; <nl> } <nl> } <nl> @ @ - 2036 , 7 + 2078 , 7 @ @ Java _ com _ sun _ jna _ Native _ open ( JNIEnv * env , jclass UNUSED ( cls ) , jstring lib , jint <nl> <nl> handle = ( void * ) LOAD _ LIBRARY ( libname , flags ! = - 1 ? flags : DEFAULT _ LOAD _ OPTS ) ; <nl> if ( ! handle ) { <nl> - char buf [ 1024 ] ; <nl> + char buf [ MSG _ SIZE ] ; <nl> throwByName ( env , EUnsatisfiedLink , LOAD _ ERROR ( buf , sizeof ( buf ) ) ) ; <nl> } <nl> if ( libname ! = NULL ) { <nl> @ @ - 2054 , 7 + 2096 , 7 @ @ JNIEXPORT void JNICALL <nl> Java _ com _ sun _ jna _ Native _ close ( JNIEnv * env , jclass UNUSED ( cls ) , jlong handle ) <nl> { <nl> if ( FREE _ LIBRARY ( L2A ( handle ) ) ) { <nl> - char buf [ 1024 ] ; <nl> + char buf [ MSG _ SIZE ] ; <nl> throwByName ( env , EError , LOAD _ ERROR ( buf , sizeof ( buf ) ) ) ; <nl> } <nl> } <nl> @ @ - 2075 , 7 + 2117 , 7 @ @ Java _ com _ sun _ jna _ Native _ findSymbol ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> if ( funname ! = NULL ) { <nl> func = ( void * ) FIND _ ENTRY ( handle , funname ) ; <nl> if ( ! func ) { <nl> - char buf [ 1024 ] ; <nl> + char buf [ MSG _ SIZE ] ; <nl> throwByName ( env , EUnsatisfiedLink , LOAD _ ERROR ( buf , sizeof ( buf ) ) ) ; <nl> } <nl> free ( ( void * ) funname ) ; <nl> diff - - git a / test / com / sun / jna / LibraryLoadTest . java b / test / com / sun / jna / LibraryLoadTest . java <nl> index 6fc8c74 . . 8c00d95 100644 <nl> - - - a / test / com / sun / jna / LibraryLoadTest . java <nl> + + + b / test / com / sun / jna / LibraryLoadTest . java <nl> @ @ - 164 , 6 + 164 , 31 @ @ public class LibraryLoadTest extends TestCase implements Paths { <nl> } <nl> } <nl> <nl> + public void testLoadLibraryWithLongName ( ) throws Exception { <nl> + File tmpdir = Native . getTempDir ( ) ; <nl> + String libName = NativeLibrary . mapSharedLibraryName ( " testlib " ) ; <nl> + File src = new File ( TESTPATH , libName ) ; <nl> + assertTrue ( " Expected JNA native library at " + src + " is missing " , src . exists ( ) ) ; <nl> + <nl> + for ( int i = 0 ; i < 16 ; i + + ) { <nl> + tmpdir = new File ( tmpdir , " subdir0123456789 " ) ; <nl> + tmpdir . deleteOnExit ( ) ; <nl> + } <nl> + <nl> + final String NAME = getName ( ) ; <nl> + String newLibName = libName . replace ( " testlib " , NAME ) ; <nl> + tmpdir . mkdirs ( ) ; <nl> + File dst = new File ( tmpdir , newLibName ) ; <nl> + copy ( src , dst ) ; <nl> + try { <nl> + NativeLibrary . getInstance ( NAME , new TestLoader ( tmpdir ) ) ; <nl> + dst . deleteOnExit ( ) ; <nl> + } <nl> + catch ( UnsatisfiedLinkError e ) { <nl> + fail ( " Library ' " + newLibName + " ' at " + dst + " could not be loaded : " + e ) ; <nl> + } <nl> + } <nl> + <nl> public void testLoadFrameworkLibrary ( ) { <nl> if ( Platform . isMac ( ) ) { <nl> final String PATH = " / System / Library / Frameworks / CoreServices . framework " ;
diff - - git a / native / Makefile b / native / Makefile <nl> index 0f695e5 . . 1f0ea70 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 167 , 10 + 167 , 10 @ @ ifeq ( $ ( ARCH ) , amd64 ) <nl> USE _ MSVC = true <nl> else <nl> # To build 32 - bit under MSVC , un - comment this line ( default is gcc ) <nl> - USE _ MSVC = true <nl> + # USE _ MSVC = true <nl> endif <nl> <nl> - CDEFINES = - DHAVE _ PROTECTION - DPSAPI _ VERSION = 1 - DFFI _ BUILDING <nl> + CDEFINES = - DHAVE _ PROTECTION - DPSAPI _ VERSION = 1 - DFFI _ BUILDING - DUNICODE - D _ UNICODE <nl> ifndef USE _ MSVC <nl> LIBS = - lpsapi <nl> else <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 5a88073 . . 931a790 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 17 , 9 + 17 , 6 @ @ <nl> * / <nl> <nl> # if defined ( _ WIN32 ) <nl> - # ifndef UNICODE <nl> - # define UNICODE <nl> - # endif <nl> # define WIN32 _ LEAN _ AND _ MEAN <nl> # include < windows . h > <nl> # include < psapi . h > <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 5ba4a39 . . 7163c84 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 673 , 6 + 673 , 7 @ @ public final class Native implements Version { <nl> 	 	 	 if ( DEBUG _ JNA _ LOAD ) { <nl> 	 	 	 System . out . println ( " Trying " + path ) ; <nl> 	 	 	 } <nl> + System . setProperty ( " jnidispatch . path " , path ) ; <nl> System . load ( path ) ; <nl> jnidispatchPath = path ; <nl> 	 	 	 if ( DEBUG _ JNA _ LOAD ) { <nl> @ @ - 703 , 6 + 704 , 7 @ @ public final class Native implements Version { <nl> 	 	 	 if ( DEBUG _ JNA _ LOAD ) { <nl> 	 	 	 	 System . out . println ( " Trying " + path ) ; <nl> 	 	 	 } <nl> + System . setProperty ( " jnidispatch . path " , path ) ; <nl> System . load ( path ) ; <nl> jnidispatchPath = path ; <nl> if ( DEBUG _ JNA _ LOAD ) { <nl> @ @ - 755 , 6 + 757 , 7 @ @ public final class Native implements Version { <nl> 	 if ( DEBUG _ JNA _ LOAD ) { <nl> 	 	 System . out . println ( " Trying " + lib . getAbsolutePath ( ) ) ; <nl> 	 } <nl> + System . setProperty ( " jnidispatch . path " , lib . getAbsolutePath ( ) ) ; <nl> 	 System . load ( lib . getAbsolutePath ( ) ) ; <nl> jnidispatchPath = lib . getAbsolutePath ( ) ; <nl> if ( DEBUG _ JNA _ LOAD ) { <nl> @ @ - 764 , 7 + 767 , 8 @ @ public final class Native implements Version { <nl> / / loaded . This avoids the complexity of trying to do so on " exit " , <nl> / / which point can vary under different circumstances ( native <nl> / / compilation , dynamically loaded modules , normal application , etc ) . <nl> - if ( isUnpacked ( lib ) ) { <nl> + if ( isUnpacked ( lib ) <nl> + & & ! Boolean . getBoolean ( " jnidispatch . preserve " ) ) { <nl> deleteLibrary ( lib ) ; <nl> } <nl> } <nl> @ @ - 867 , 7 + 871 , 9 @ @ public final class Native implements Version { <nl> / / problems with Web Start . <nl> File dir = getTempDir ( ) ; <nl> lib = File . createTempFile ( JNA _ TMPLIB _ PREFIX , Platform . isWindows ( ) ? " . dll " : null , dir ) ; <nl> - lib . deleteOnExit ( ) ; <nl> + if ( ! Boolean . getBoolean ( " jnidispatch . preserve " ) ) { <nl> + lib . deleteOnExit ( ) ; <nl> + } <nl> fos = new FileOutputStream ( lib ) ; <nl> int count ; <nl> byte [ ] buf = new byte [ 1024 ] ; <nl> diff - - git a / test / com / sun / jna / JNAUnloadTest . java b / test / com / sun / jna / JNAUnloadTest . java <nl> index df42f42 . . 4ae2713 100644 <nl> - - - a / test / com / sun / jna / JNAUnloadTest . java <nl> + + + b / test / com / sun / jna / JNAUnloadTest . java <nl> @ @ - 213 , 10 + 213 , 27 @ @ public class JNAUnloadTest extends TestCase implements Paths { <nl> unicodeDir . mkdirs ( ) ; <nl> Properties props = ( Properties ) System . getProperties ( ) . clone ( ) ; <nl> try { <nl> + System . setProperty ( " jnidispatch . preserve " , " true " ) ; <nl> System . setProperty ( " jna . tmpdir " , unicodeDir . getAbsolutePath ( ) ) ; <nl> ClassLoader loader = new TestLoader ( true ) ; <nl> Class cls = Class . forName ( " com . sun . jna . Native " , true , loader ) ; <nl> assertEquals ( " Wrong class loader " , loader , cls . getClassLoader ( ) ) ; <nl> + String path = System . getProperty ( " jnidispatch . path " ) ; <nl> + if ( path ! = null ) { <nl> + File lib = new File ( path ) ; <nl> + Native . deleteLibrary ( lib ) ; <nl> + lib . deleteOnExit ( ) ; <nl> + } <nl> + } <nl> + catch ( UnsatisfiedLinkError e ) { <nl> + try { <nl> + File lib = new File ( System . getProperty ( " jnidispatch . path " ) ) ; <nl> + NativeLibrary . getInstance ( lib . getAbsolutePath ( ) ) ; <nl> + throw new Error ( " JVM error : System . load ( ) failed to load JNA native library from " + lib + " ) : " + e ) ; <nl> + } <nl> + catch ( UnsatisfiedLinkError ex ) { <nl> + fail ( " Failed to load jnidispatch from a unicode path ( " + System . getProperty ( " jnidispatch . path " ) + " ) : " + ex ) ; <nl> + } <nl> } <nl> finally { <nl> System . setProperties ( props ) ;
diff - - git a / lib / native / freebsd - x86 - 64 . jar b / lib / native / freebsd - x86 - 64 . jar <nl> index 6716399 . . 8ed2aae 100755 <nl> Binary files a / lib / native / freebsd - x86 - 64 . jar and b / lib / native / freebsd - x86 - 64 . jar differ <nl> diff - - git a / lib / native / freebsd - x86 . jar b / lib / native / freebsd - x86 . jar <nl> index 6716399 . . 3dbb368 100755 <nl> Binary files a / lib / native / freebsd - x86 . jar and b / lib / native / freebsd - x86 . jar differ
diff - - git a / test / com / sun / jna / LibraryLoadTest . java b / test / com / sun / jna / LibraryLoadTest . java <nl> index 415eecb . . fbd8bc8 100644 <nl> - - - a / test / com / sun / jna / LibraryLoadTest . java <nl> + + + b / test / com / sun / jna / LibraryLoadTest . java <nl> @ @ - 74 , 6 + 74 , 11 @ @ public class LibraryLoadTest extends TestCase implements Paths { <nl> NativeLibrary . getInstance ( " testlib " ) ; <nl> } <nl> <nl> + public void testLoadFromCustomPath ( ) throws MalformedURLException { <nl> + NativeLibrary . addSearchPath ( " testlib - path " , TESTPATH ) ; <nl> + NativeLibrary . getInstance ( " testlib - path " , new TestLoader ( new File ( " . " ) ) ) ; <nl> + } <nl> + <nl> public void testLoadFromClasspath ( ) throws MalformedURLException { <nl> NativeLibrary . getInstance ( " testlib - path " , new TestLoader ( new File ( TESTPATH ) ) ) ; <nl> } <nl> diff - - git a / test / com / sun / jna / NativeLibraryTest . java b / test / com / sun / jna / NativeLibraryTest . java <nl> index 0c3906f . . c9f6bba 100644 <nl> - - - a / test / com / sun / jna / NativeLibraryTest . java <nl> + + + b / test / com / sun / jna / NativeLibraryTest . java <nl> @ @ - 122 , 6 + 122 , 28 @ @ public class NativeLibraryTest extends TestCase { <nl> int count2 = lib2 . callCount ( ) ; <nl> assertEquals ( " Simple library name not aliased " , count + 1 , count2 ) ; <nl> } <nl> + <nl> + public void testRejectNullFunctionName ( ) { <nl> + NativeLibrary lib = NativeLibrary . getInstance ( " testlib " ) ; <nl> + try { <nl> + Function f = lib . getFunction ( null ) ; <nl> + fail ( " Function must have a name " ) ; <nl> + } <nl> + catch ( NullPointerException e ) { <nl> + } <nl> + } <nl> + <nl> + public void testIncludeSymbolNameInLookupError ( ) { <nl> + NativeLibrary lib = NativeLibrary . getInstance ( " testlib " ) ; <nl> + try { <nl> + lib . getGlobalVariableAddress ( getName ( ) ) ; <nl> + fail ( " Non - existent global variable lookup should fail " ) ; <nl> + } <nl> + catch ( UnsatisfiedLinkError e ) { <nl> + assertTrue ( " Expect symbol name in error message : " + e . getMessage ( ) , e . getMessage ( ) . indexOf ( getName ( ) ) ! = - 1 ) ; <nl> + } <nl> + } <nl> + <nl> public void testFunctionHoldsLibraryReference ( ) throws Exception { <nl> NativeLibrary lib = NativeLibrary . getInstance ( " testlib " ) ; <nl> WeakReference ref = new WeakReference ( lib ) ;
diff - - git a / src / com / sun / jna / Function . java b / src / com / sun / jna / Function . java <nl> index c2b7f57 . . dc1410b 100644 <nl> - - - a / src / com / sun / jna / Function . java <nl> + + + b / src / com / sun / jna / Function . java <nl> @ @ - 289 , 8 + 289 , 13 @ @ public class Function extends Pointer { <nl> Class [ ] paramTypes = invokingMethod ! = null ? invokingMethod . getParameterTypes ( ) : null ; <nl> boolean allowObjects = Boolean . TRUE . equals ( options . get ( Library . OPTION _ ALLOW _ OBJECTS ) ) ; <nl> for ( int i = 0 ; i < args . length ; i + + ) { <nl> + Class paramType = invokingMethod ! = null <nl> + ? ( isVarArgs ( invokingMethod ) & & i > = paramTypes . length - 1 <nl> + ? paramTypes [ paramTypes . length - 1 ] . getComponentType ( ) <nl> + : paramTypes [ i ] ) <nl> + : null ; <nl> args [ i ] = convertArgument ( args , i , invokingMethod , <nl> - mapper , allowObjects , paramTypes ! = null ? paramTypes [ i ] : null ) ; <nl> + mapper , allowObjects , paramType ) ; <nl> } <nl> <nl> Class nativeType = returnType ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> index 8fba48e . . 9694997 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> @ @ - 22 , 7 + 22 , 7 @ @ import com . sun . jna . platform . win32 . OaIdl . TYPEKIND ; <nl> import com . sun . jna . platform . win32 . COM . TypeLibUtil ; <nl> import com . sun . jna . platform . win32 . COM . tlb . imp . TlbBase ; <nl> import com . sun . jna . platform . win32 . COM . tlb . imp . TlbCoClass ; <nl> - import com . sun . jna . platform . win32 . COM . tlb . imp . TlbDispatchInterface ; <nl> + import com . sun . jna . platform . win32 . COM . tlb . imp . TlbDispInterface ; <nl> import com . sun . jna . platform . win32 . COM . tlb . imp . TlbEnum ; <nl> import com . sun . jna . platform . win32 . COM . tlb . imp . TlbInterface ; <nl> <nl> @ @ - 52 , 11 + 52 , 6 @ @ public class TlbImp { <nl> 	 / * * The out . * / <nl> 	 private File comRootDir ; <nl> <nl> - 	 private String packageName ; <nl> - <nl> - 	 / * * The content buffer . * / <nl> - 	 private StringBuffer contentBuffer = new StringBuffer ( ) ; <nl> - <nl> 	 / * * <nl> 	 * The main method . <nl> 	 * <nl> @ @ - 70 , 22 + 65 , 21 @ @ public class TlbImp { <nl> 	 public TlbImp ( ) { <nl> 	 	 Native . setProtected ( true ) ; <nl> 	 } <nl> - 	 <nl> + <nl> 	 / * * <nl> 	 * Start co m2 java . <nl> 	 * / <nl> 	 public void startCOM2Java ( ) { <nl> 	 	 try { <nl> 	 	 	 this . typeLibUtil = new TypeLibUtil ( TYPELIB _ ID _ SHELL , 1 , 0 ) ; <nl> - <nl> + 	 	 	 / / create output Dir <nl> 	 	 	 this . createDir ( ) ; <nl> - 	 	 	 this . createMainClass ( ) ; <nl> <nl> 	 	 	 for ( int i = 0 ; i < typeLibUtil . getTypeInfoCount ( ) ; + + i ) { <nl> 	 	 	 	 TYPEKIND typekind = typeLibUtil . getTypeInfoType ( i ) ; <nl> <nl> 	 	 	 	 if ( typekind . value = = TYPEKIND . TKIND _ ENUM ) { <nl> - 	 	 	 	 	 this . createCOMEnum ( i , typeLibUtil ) ; <nl> + 	 	 	 	 	 this . createCOMEnum ( i , this . getPackageName ( ) , typeLibUtil ) ; <nl> 	 	 	 	 } else if ( typekind . value = = TYPEKIND . TKIND _ RECORD ) { <nl> 	 	 	 	 	 System . out <nl> 	 	 	 	 	 	 	 . println ( " ' TKIND _ RECORD ' objects are currently not supported ! " ) ; <nl> @ @ - 93 , 17 + 87 , 19 @ @ public class TlbImp { <nl> 	 	 	 	 	 System . out <nl> 	 	 	 	 	 	 	 . println ( " ' TKIND _ MODULE ' objects are currently not supported ! " ) ; <nl> 	 	 	 	 } else if ( typekind . value = = TYPEKIND . TKIND _ INTERFACE ) { <nl> - 	 	 	 	 	 this . createCOMInterface ( i , typeLibUtil ) ; <nl> + 	 	 	 	 	 this . createCOMInterface ( i , this . getPackageName ( ) , <nl> + 	 	 	 	 	 	 	 typeLibUtil ) ; <nl> 	 	 	 	 } else if ( typekind . value = = TYPEKIND . TKIND _ DISPATCH ) { <nl> - 	 	 	 	 	 this . createCOMDispatch ( i , typeLibUtil ) ; <nl> + 	 	 	 	 	 this . createCOMDispInterface ( i , this . getPackageName ( ) , <nl> + 	 	 	 	 	 	 	 typeLibUtil ) ; <nl> 	 	 	 	 } else if ( typekind . value = = TYPEKIND . TKIND _ COCLASS ) { <nl> - 	 	 	 	 	 System . out . println ( " TKIND _ COCLASS " ) ; <nl> + 	 	 	 	 	 this . createCOMCoClass ( i , this . getPackageName ( ) , typeLibUtil ) ; <nl> 	 	 	 	 } else if ( typekind . value = = TYPEKIND . TKIND _ ALIAS ) { <nl> 	 	 	 	 	 System . out <nl> 	 	 	 	 	 	 	 . println ( " ' TKIND _ ALIAS ' objects are currently not supported ! " ) ; <nl> 	 	 	 	 } else if ( typekind . value = = TYPEKIND . TKIND _ UNION ) { <nl> 	 	 	 	 	 System . out <nl> - 	 	 	 	 	 	 	 . println ( " ' TKIND _ ALIAS ' objects are currently not supported ! " ) ; <nl> + 	 	 	 	 	 	 	 . println ( " ' TKIND _ UNION ' objects are currently not supported ! " ) ; <nl> 	 	 	 	 } <nl> 	 	 	 } <nl> 	 	 } catch ( Exception e ) { <nl> @ @ - 130 , 15 + 126 , 8 @ @ public class TlbImp { <nl> 	 	 } <nl> 	 } <nl> <nl> - 	 private void createMainClass ( ) throws IOException { <nl> - 	 	 this . packageName = " myPackage . " <nl> - 	 	 	 	 + this . typeLibUtil . getName ( ) . toLowerCase ( ) ; <nl> - 	 	 TlbCoClass tlbClass = new TlbCoClass ( - 1 , typeLibUtil ) ; <nl> - 	 	 tlbClass . createPackage ( packageName ) ; <nl> - 	 	 tlbClass . createContent ( contentBuffer . toString ( ) ) ; <nl> - 	 	 String mainClassStr = tlbClass . getClassBuffer ( ) . toString ( ) ; <nl> - <nl> - 	 	 this . writeTextFile ( this . typeLibUtil . getName ( ) + " . java " , mainClassStr ) ; <nl> + 	 private String getPackageName ( ) { <nl> + 	 	 return " myPackage . " 	 + this . typeLibUtil . getName ( ) . toLowerCase ( ) ; <nl> 	 } <nl> <nl> 	 private void writeTextFile ( String filename , String str ) throws IOException { <nl> @ @ - 162 , 9 + 151 , 9 @ @ public class TlbImp { <nl> 	 * the type lib util <nl> 	 * @ return the string buffer <nl> 	 * / <nl> - 	 private void createCOMEnum ( int index , TypeLibUtil typeLibUtil ) <nl> - 	 	 	 throws IOException { <nl> - 	 	 TlbEnum tlbEnum = new TlbEnum ( index , typeLibUtil ) ; <nl> + 	 private void createCOMEnum ( int index , String packagename , <nl> + 	 	 	 TypeLibUtil typeLibUtil ) throws IOException { <nl> + 	 	 TlbEnum tlbEnum = new TlbEnum ( index , packagename , typeLibUtil ) ; <nl> 	 	 this . writeTlbClass ( tlbEnum ) ; <nl> 	 } <nl> <nl> @ @ - 177 , 9 + 166 , 10 @ @ public class TlbImp { <nl> 	 * the type lib util <nl> 	 * @ return the string buffer <nl> 	 * / <nl> - 	 private void createCOMInterface ( int index , TypeLibUtil typeLibUtil ) <nl> - 	 	 	 throws IOException { <nl> - 	 	 TlbInterface tlbInterface = new TlbInterface ( index , typeLibUtil ) ; <nl> + 	 private void createCOMInterface ( int index , String packagename , <nl> + 	 	 	 TypeLibUtil typeLibUtil ) throws IOException { <nl> + 	 	 TlbInterface tlbInterface = new TlbInterface ( index , packagename , <nl> + 	 	 	 	 typeLibUtil ) ; <nl> 	 	 this . writeTlbClass ( tlbInterface ) ; <nl> 	 } <nl> <nl> @ @ - 192 , 13 + 182 , 20 @ @ public class TlbImp { <nl> 	 * the type lib util <nl> 	 * @ return the string buffer <nl> 	 * / <nl> - 	 private void createCOMDispatch ( int index , TypeLibUtil typeLibUtil ) <nl> - 	 	 	 throws IOException { <nl> - 	 	 TlbDispatchInterface tlbDispatch = new TlbDispatchInterface ( index , <nl> - 	 	 	 	 typeLibUtil ) ; <nl> + 	 private void createCOMDispInterface ( int index , String packagename , <nl> + 	 	 	 TypeLibUtil typeLibUtil ) throws IOException { <nl> + 	 	 TlbDispInterface tlbDispatch = new TlbDispInterface ( index , <nl> + 	 	 	 	 packagename , typeLibUtil ) ; <nl> 	 	 this . writeTlbClass ( tlbDispatch ) ; <nl> 	 } <nl> <nl> + 	 private void createCOMCoClass ( int index , String packagename , <nl> + 	 	 	 TypeLibUtil typeLibUtil ) throws IOException { <nl> + 	 	 TlbCoClass tlbCoClass = new TlbCoClass ( index , this . getPackageName ( ) , <nl> + 	 	 	 	 typeLibUtil ) ; <nl> + 	 	 this . writeTlbClass ( tlbCoClass ) ; <nl> + 	 } <nl> + <nl> 	 / * * <nl> 	 * Log info . <nl> 	 * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbBase . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbBase . java <nl> index 40b9484 . . f1a833b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbBase . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbBase . java <nl> @ @ - 60 , 6 + 60 , 14 @ @ public abstract class TlbBase { <nl> <nl> 	 protected String filename = " " ; <nl> <nl> + 	 / * * The iunknown methods . * / <nl> + 	 public static String [ ] IUNKNOWN _ METHODS = { " QueryInterface " , " AddRef " , <nl> + 	 	 	 " Release " } ; <nl> + <nl> + 	 / * * The idispatch methods . * / <nl> + 	 public static String [ ] IDISPATCH _ METHODS = { " GetTypeInfoCount " , <nl> + 	 	 	 " GetTypeInfo " , " GetIDsOfNames " , " Invoke " } ; <nl> + <nl> 	 / * * <nl> 	 * Instantiates a new tlb base . <nl> 	 * <nl> @ @ - 208 , 6 + 216 , 10 @ @ public abstract class TlbBase { <nl> 	 	 this . classBuffer = new StringBuffer ( result ) ; <nl> 	 } <nl> <nl> + 	 protected void createPackageName ( String packagename ) { <nl> + 	 	 this . replaceVariable ( " packagename " , packagename ) ; <nl> + 	 } <nl> + <nl> 	 / * * <nl> 	 * Creates the class name . <nl> 	 * <nl> @ @ - 217 , 4 + 229 , 25 @ @ public abstract class TlbBase { <nl> 	 protected void createClassName ( String name ) { <nl> 	 	 this . replaceVariable ( " classname " , name ) ; <nl> 	 } <nl> + <nl> + 	 / * * <nl> + 	 * Checks if is reserved method . <nl> + 	 * <nl> + 	 * @ param method <nl> + 	 * the method <nl> + 	 * @ return true , if is reserved method <nl> + 	 * / <nl> + 	 protected boolean isReservedMethod ( String method ) { <nl> + 	 	 for ( int i = 0 ; i < IUNKNOWN _ METHODS . length ; i + + ) { <nl> + 	 	 	 if ( IUNKNOWN _ METHODS [ i ] . equalsIgnoreCase ( method ) ) <nl> + 	 	 	 	 return true ; <nl> + 	 	 } <nl> + <nl> + 	 	 for ( int i = 0 ; i < IDISPATCH _ METHODS . length ; i + + ) { <nl> + 	 	 	 if ( IDISPATCH _ METHODS [ i ] . equalsIgnoreCase ( method ) ) <nl> + 	 	 	 	 return true ; <nl> + 	 	 } <nl> + <nl> + 	 	 return false ; <nl> + 	 } <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCoClass . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCoClass . java <nl> index 9ee2f27 . . 8251482 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCoClass . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbCoClass . java <nl> @ @ - 14 , 8 + 14 , 14 @ @ package com . sun . jna . platform . win32 . COM . tlb . imp ; <nl> <nl> import java . io . PrintStream ; <nl> <nl> + import com . sun . jna . platform . win32 . COM . TypeInfoUtil ; <nl> import com . sun . jna . platform . win32 . COM . TypeLibUtil ; <nl> + import com . sun . jna . platform . win32 . COM . TypeInfoUtil . TypeInfoDoc ; <nl> import com . sun . jna . platform . win32 . COM . TypeLibUtil . TypeLibDoc ; <nl> + import com . sun . jna . platform . win32 . OaIdl . FUNCDESC ; <nl> + import com . sun . jna . platform . win32 . OaIdl . INVOKEKIND ; <nl> + import com . sun . jna . platform . win32 . OaIdl . MEMBERID ; <nl> + import com . sun . jna . platform . win32 . OaIdl . TYPEATTR ; <nl> <nl> / / TODO : Auto - generated Javadoc <nl> / * * <nl> @ @ - 33 , 13 + 39 , 14 @ @ public class TlbCoClass extends TlbBase { <nl> 	 * @ param typeLibUtil <nl> 	 * the type lib util <nl> 	 * / <nl> - 	 public TlbCoClass ( int index , TypeLibUtil typeLibUtil ) { <nl> + 	 public TlbCoClass ( int index , String packagename , TypeLibUtil typeLibUtil ) { <nl> 	 	 super ( index , typeLibUtil ) ; <nl> <nl> 	 	 TypeLibDoc typeLibDoc = this . typeLibUtil . getDocumentation ( index ) ; <nl> 	 	 String coClassName = typeLibDoc . getName ( ) ; <nl> 	 	 String docString = typeLibDoc . getDocString ( ) ; <nl> <nl> + 	 	 this . createPackageName ( packagename ) ; <nl> 	 	 this . createClassName ( coClassName ) ; <nl> 	 	 this . setFilename ( coClassName ) ; <nl> 	 	 <nl> @ @ - 50 , 6 + 57 , 52 @ @ public class TlbCoClass extends TlbBase { <nl> <nl> 	 	 this . createJavaDocHeader ( guidStr , version , docString ) ; <nl> 	 	 this . createCLSID ( guidStr ) ; <nl> + 	 	 <nl> + 	 	 / / Get the TypeAttributes <nl> + 	 	 TypeInfoUtil typeInfoUtil = typeLibUtil . getTypeInfoUtil ( index ) ; <nl> + 	 	 TYPEATTR typeAttr = typeInfoUtil . getTypeAttr ( ) ; <nl> + <nl> + 	 	 int cFuncs = typeAttr . cFuncs . intValue ( ) ; <nl> + 	 	 for ( int i = 0 ; i < cFuncs ; i + + ) { <nl> + 	 	 	 / / Get the function description <nl> + 	 	 	 FUNCDESC funcDesc = typeInfoUtil . getFuncDesc ( i ) ; <nl> + <nl> + 	 	 	 / / Get the member ID <nl> + 	 	 	 MEMBERID memberID = funcDesc . memid ; <nl> + <nl> + 	 	 	 / / Get the name of the method <nl> + 	 	 	 TypeInfoDoc typeInfoDoc2 = typeInfoUtil . getDocumentation ( memberID ) ; <nl> + 	 	 	 String methodName = typeInfoDoc2 . getName ( ) ; <nl> + 	 	 	 TlbAbstractMethod method = null ; <nl> + <nl> + 	 	 	 if ( ! isReservedMethod ( methodName ) ) { <nl> + 	 	 	 	 if ( funcDesc . invkind . equals ( INVOKEKIND . INVOKE _ FUNC ) ) { <nl> + 	 	 	 	 	 method = new TlbFunction ( index , typeLibUtil , funcDesc , <nl> + 	 	 	 	 	 	 	 typeInfoUtil ) ; <nl> + 	 	 	 	 } else if ( funcDesc . invkind <nl> + 	 	 	 	 	 	 . equals ( INVOKEKIND . INVOKE _ PROPERTYGET ) ) { <nl> + 	 	 	 	 	 method = new TlbPropertyGet ( index , typeLibUtil , funcDesc , <nl> + 	 	 	 	 	 	 	 typeInfoUtil ) ; <nl> + 	 	 	 	 } else if ( funcDesc . invkind <nl> + 	 	 	 	 	 	 . equals ( INVOKEKIND . INVOKE _ PROPERTYPUT ) ) { <nl> + 	 	 	 	 	 method = new TlbPropertyPut ( index , typeLibUtil , funcDesc , <nl> + 	 	 	 	 	 	 	 typeInfoUtil ) ; <nl> + 	 	 	 	 } else if ( funcDesc . invkind <nl> + 	 	 	 	 	 	 . equals ( INVOKEKIND . INVOKE _ PROPERTYPUTREF ) ) { <nl> + <nl> + 	 	 	 	 } <nl> + <nl> + 	 	 	 	 this . content + = method . getClassBuffer ( ) ; <nl> + <nl> + 	 	 	 	 if ( i < cFuncs - 1 ) <nl> + 	 	 	 	 	 this . content + = CR ; <nl> + 	 	 	 } <nl> + <nl> + 	 	 	 / / Release our function description stuff <nl> + 	 	 	 typeInfoUtil . ReleaseFuncDesc ( funcDesc ) ; <nl> + 	 	 } <nl> + <nl> + 	 	 this . createContent ( this . content ) ; <nl> 	 } <nl> <nl> 	 / * * <nl> @ @ - 73 , 16 + 126 , 6 @ @ public class TlbCoClass extends TlbBase { <nl> 	 	 this . replaceVariable ( " clsid " , clsid ) ; <nl> 	 } <nl> <nl> - 	 / * * <nl> - 	 * Creates the package . <nl> - 	 * <nl> - 	 * @ param packageName <nl> - 	 * the package name <nl> - 	 * / <nl> - 	 public void createPackage ( String packageName ) { <nl> - 	 	 this . replaceVariable ( " packagename " , packageName ) ; <nl> - 	 } <nl> - <nl> 	 / * <nl> 	 * ( non - Javadoc ) <nl> 	 * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbDispInterface . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbDispInterface . java <nl> new file mode 100644 <nl> index 0000000 . . 79091ec <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbDispInterface . java <nl> @ @ - 0 , 0 + 1 , 123 @ @ <nl> + / * Copyright ( c ) 2013 Tobias Wolf , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 . COM . tlb . imp ; <nl> + <nl> + import com . sun . jna . platform . win32 . OaIdl . FUNCDESC ; <nl> + import com . sun . jna . platform . win32 . OaIdl . INVOKEKIND ; <nl> + import com . sun . jna . platform . win32 . OaIdl . MEMBERID ; <nl> + import com . sun . jna . platform . win32 . OaIdl . TYPEATTR ; <nl> + import com . sun . jna . platform . win32 . COM . TypeInfoUtil ; <nl> + import com . sun . jna . platform . win32 . COM . TypeInfoUtil . TypeInfoDoc ; <nl> + import com . sun . jna . platform . win32 . COM . TypeLibUtil ; <nl> + import com . sun . jna . platform . win32 . COM . TypeLibUtil . TypeLibDoc ; <nl> + <nl> + / / TODO : Auto - generated Javadoc <nl> + / * * <nl> + * The Class TlbDispatch . <nl> + * <nl> + * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> + * / <nl> + public class TlbDispInterface extends TlbBase { <nl> + <nl> + 	 / * * <nl> + 	 * Instantiates a new tlb dispatch . <nl> + 	 * <nl> + 	 * @ param index <nl> + 	 * the index <nl> + 	 * @ param typeLibUtil <nl> + 	 * the type lib util <nl> + 	 * / <nl> + 	 public TlbDispInterface ( int index , String packagename , TypeLibUtil typeLibUtil ) { <nl> + 	 	 super ( index , typeLibUtil ) ; <nl> + <nl> + 	 	 TypeLibDoc typeLibDoc = this . typeLibUtil . getDocumentation ( index ) ; <nl> + 	 	 String dispName = typeLibDoc . getName ( ) ; <nl> + 	 	 String docString = typeLibDoc . getDocString ( ) ; <nl> + <nl> + 	 	 this . logInfo ( " Type of kind ' DispInterface ' found : " + dispName ) ; <nl> + 	 	 this . createPackageName ( packagename ) ; <nl> + 	 	 this . createClassName ( dispName ) ; <nl> + 	 	 this . setFilename ( dispName ) ; <nl> + 	 	 <nl> + 	 	 / / Get the TypeAttributes <nl> + 	 	 TypeInfoUtil typeInfoUtil = typeLibUtil . getTypeInfoUtil ( index ) ; <nl> + 	 	 TYPEATTR typeAttr = typeInfoUtil . getTypeAttr ( ) ; <nl> + <nl> + 	 	 this . createJavaDocHeader ( typeAttr . guid . toGuidString ( ) , docString ) ; <nl> + <nl> + 	 	 int cFuncs = typeAttr . cFuncs . intValue ( ) ; <nl> + 	 	 for ( int i = 0 ; i < cFuncs ; i + + ) { <nl> + 	 	 	 / / Get the function description <nl> + 	 	 	 FUNCDESC funcDesc = typeInfoUtil . getFuncDesc ( i ) ; <nl> + <nl> + 	 	 	 / / Get the member ID <nl> + 	 	 	 MEMBERID memberID = funcDesc . memid ; <nl> + <nl> + 	 	 	 / / Get the name of the method <nl> + 	 	 	 TypeInfoDoc typeInfoDoc2 = typeInfoUtil . getDocumentation ( memberID ) ; <nl> + 	 	 	 String methodName = typeInfoDoc2 . getName ( ) ; <nl> + 	 	 	 TlbAbstractMethod method = null ; <nl> + <nl> + 	 	 	 if ( ! isReservedMethod ( methodName ) ) { <nl> + 	 	 	 	 if ( funcDesc . invkind . equals ( INVOKEKIND . INVOKE _ FUNC ) ) { <nl> + 	 	 	 	 	 method = new TlbFunctionStub ( index , typeLibUtil , funcDesc , <nl> + 	 	 	 	 	 	 	 typeInfoUtil ) ; <nl> + 	 	 	 	 } else if ( funcDesc . invkind <nl> + 	 	 	 	 	 	 . equals ( INVOKEKIND . INVOKE _ PROPERTYGET ) ) { <nl> + 	 	 	 	 	 method = new TlbPropertyGetStub ( index , typeLibUtil , funcDesc , <nl> + 	 	 	 	 	 	 	 typeInfoUtil ) ; <nl> + 	 	 	 	 } else if ( funcDesc . invkind <nl> + 	 	 	 	 	 	 . equals ( INVOKEKIND . INVOKE _ PROPERTYPUT ) ) { <nl> + 	 	 	 	 	 method = new TlbPropertyPutStub ( index , typeLibUtil , funcDesc , <nl> + 	 	 	 	 	 	 	 typeInfoUtil ) ; <nl> + 	 	 	 	 } else if ( funcDesc . invkind <nl> + 	 	 	 	 	 	 . equals ( INVOKEKIND . INVOKE _ PROPERTYPUTREF ) ) { <nl> + <nl> + 	 	 	 	 } <nl> + <nl> + 	 	 	 	 this . content + = method . getClassBuffer ( ) ; <nl> + <nl> + 	 	 	 	 if ( i < cFuncs - 1 ) <nl> + 	 	 	 	 	 this . content + = CR ; <nl> + 	 	 	 } <nl> + <nl> + 	 	 	 / / Release our function description stuff <nl> + 	 	 	 typeInfoUtil . ReleaseFuncDesc ( funcDesc ) ; <nl> + 	 	 } <nl> + <nl> + 	 	 this . createContent ( this . content ) ; <nl> + 	 } <nl> + <nl> + 	 / * * <nl> + 	 * Creates the java doc header . <nl> + 	 * <nl> + 	 * @ param guid <nl> + 	 * the guid <nl> + 	 * @ param helpstring <nl> + 	 * the helpstring <nl> + 	 * / <nl> + 	 protected void createJavaDocHeader ( String guid , String helpstring ) { <nl> + 	 	 this . replaceVariable ( " uuid " , guid ) ; <nl> + 	 	 this . replaceVariable ( " helpstring " , helpstring ) ; <nl> + 	 } <nl> + <nl> + 	 / * <nl> + 	 * ( non - Javadoc ) <nl> + 	 * <nl> + 	 * @ see com . sun . jna . platform . win32 . COM . tlb . imp . TlbBase # getClassTemplate ( ) <nl> + 	 * / <nl> + 	 @ Override <nl> + 	 protected String getClassTemplate ( ) { <nl> + 	 	 return " com / sun / jna / platform / win32 / COM / tlb / imp / TlbDispInterface . template " ; <nl> + 	 } <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbDispInterface . template b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbDispInterface . template <nl> new file mode 100644 <nl> index 0000000 . . 815a177 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbDispInterface . template <nl> @ @ - 0 , 0 + 1 , 21 @ @ <nl> + package $ { packagename } ; <nl> + <nl> + import java . util . * ; <nl> + <nl> + import com . sun . jna . * ; <nl> + import com . sun . jna . platform . win32 . OaIdl . * ; <nl> + import com . sun . jna . platform . win32 . WinDef . * ; <nl> + import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> + import com . sun . jna . platform . win32 . WTypes . * ; <nl> + import com . sun . jna . platform . win32 . COM . * ; <nl> + <nl> + / * * <nl> + * uuid ( $ { uuid } ) <nl> + * version ( $ { version } ) <nl> + * helpstring ( $ { helpstring } ) <nl> + * <nl> + * / <nl> + public interface $ { classname } extends IDispatch { 	 <nl> + <nl> + $ { content } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbDispatchInterface . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbDispatchInterface . java <nl> deleted file mode 100644 <nl> index fa47cb1 . . 0000000 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbDispatchInterface . java <nl> + + + / dev / null <nl> @ @ - 1 , 151 + 0 , 0 @ @ <nl> - / * Copyright ( c ) 2013 Tobias Wolf , All Rights Reserved <nl> - * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> - * / <nl> - package com . sun . jna . platform . win32 . COM . tlb . imp ; <nl> - <nl> - import com . sun . jna . platform . win32 . OaIdl . FUNCDESC ; <nl> - import com . sun . jna . platform . win32 . OaIdl . INVOKEKIND ; <nl> - import com . sun . jna . platform . win32 . OaIdl . MEMBERID ; <nl> - import com . sun . jna . platform . win32 . OaIdl . TYPEATTR ; <nl> - import com . sun . jna . platform . win32 . COM . TypeInfoUtil ; <nl> - import com . sun . jna . platform . win32 . COM . TypeInfoUtil . TypeInfoDoc ; <nl> - import com . sun . jna . platform . win32 . COM . TypeLibUtil ; <nl> - import com . sun . jna . platform . win32 . COM . TypeLibUtil . TypeLibDoc ; <nl> - <nl> - / / TODO : Auto - generated Javadoc <nl> - / * * <nl> - * The Class TlbDispatch . <nl> - * <nl> - * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> - * / <nl> - public class TlbDispatchInterface extends TlbBase { <nl> - <nl> - 	 / * * The iunknown methods . * / <nl> - 	 public static String [ ] IUNKNOWN _ METHODS = { " QueryInterface " , " AddRef " , <nl> - 	 	 	 " Release " } ; <nl> - <nl> - 	 / * * The idispatch methods . * / <nl> - 	 public static String [ ] IDISPATCH _ METHODS = { " GetTypeInfoCount " , <nl> - 	 	 	 " GetTypeInfo " , " GetIDsOfNames " , " Invoke " } ; <nl> - <nl> - 	 / * * <nl> - 	 * Instantiates a new tlb dispatch . <nl> - 	 * <nl> - 	 * @ param index <nl> - 	 * the index <nl> - 	 * @ param typeLibUtil <nl> - 	 * the type lib util <nl> - 	 * / <nl> - 	 public TlbDispatchInterface ( int index , TypeLibUtil typeLibUtil ) { <nl> - 	 	 super ( index , typeLibUtil ) ; <nl> - <nl> - 	 	 TypeLibDoc typeLibDoc = this . typeLibUtil . getDocumentation ( index ) ; <nl> - 	 	 String dispName = typeLibDoc . getName ( ) ; <nl> - 	 	 String docString = typeLibDoc . getDocString ( ) ; <nl> - <nl> - 	 	 this . logInfo ( " Type of kind ' Dispatch ' found : " + dispName ) ; <nl> - 	 	 this . createClassName ( dispName ) ; <nl> - 	 	 this . setFilename ( dispName ) ; <nl> - 	 	 <nl> - 	 	 / / Get the TypeAttributes <nl> - 	 	 TypeInfoUtil typeInfoUtil = typeLibUtil . getTypeInfoUtil ( index ) ; <nl> - 	 	 TYPEATTR typeAttr = typeInfoUtil . getTypeAttr ( ) ; <nl> - <nl> - 	 	 this . createJavaDocHeader ( typeAttr . guid . toGuidString ( ) , docString ) ; <nl> - <nl> - 	 	 int cFuncs = typeAttr . cFuncs . intValue ( ) ; <nl> - 	 	 for ( int i = 0 ; i < cFuncs ; i + + ) { <nl> - 	 	 	 / / Get the function description <nl> - 	 	 	 FUNCDESC funcDesc = typeInfoUtil . getFuncDesc ( i ) ; <nl> - <nl> - 	 	 	 / / Get the member ID <nl> - 	 	 	 MEMBERID memberID = funcDesc . memid ; <nl> - <nl> - 	 	 	 / / Get the name of the method <nl> - 	 	 	 TypeInfoDoc typeInfoDoc2 = typeInfoUtil . getDocumentation ( memberID ) ; <nl> - 	 	 	 String methodName = typeInfoDoc2 . getName ( ) ; <nl> - 	 	 	 TlbAbstractMethod method = null ; <nl> - <nl> - 	 	 	 if ( ! isReservedMethod ( methodName ) ) { <nl> - 	 	 	 	 if ( funcDesc . invkind . equals ( INVOKEKIND . INVOKE _ FUNC ) ) { <nl> - 	 	 	 	 	 method = new TlbFunction ( index , typeLibUtil , funcDesc , <nl> - 	 	 	 	 	 	 	 typeInfoUtil ) ; <nl> - 	 	 	 	 } else if ( funcDesc . invkind <nl> - 	 	 	 	 	 	 . equals ( INVOKEKIND . INVOKE _ PROPERTYGET ) ) { <nl> - 	 	 	 	 	 method = new TlbPropertyGet ( index , typeLibUtil , funcDesc , <nl> - 	 	 	 	 	 	 	 typeInfoUtil ) ; <nl> - 	 	 	 	 } else if ( funcDesc . invkind <nl> - 	 	 	 	 	 	 . equals ( INVOKEKIND . INVOKE _ PROPERTYPUT ) ) { <nl> - 	 	 	 	 	 method = new TlbPropertyPut ( index , typeLibUtil , funcDesc , <nl> - 	 	 	 	 	 	 	 typeInfoUtil ) ; <nl> - 	 	 	 	 } else if ( funcDesc . invkind <nl> - 	 	 	 	 	 	 . equals ( INVOKEKIND . INVOKE _ PROPERTYPUTREF ) ) { <nl> - <nl> - 	 	 	 	 } <nl> - <nl> - 	 	 	 	 this . content + = method . getClassBuffer ( ) ; <nl> - <nl> - 	 	 	 	 if ( i < cFuncs - 1 ) <nl> - 	 	 	 	 	 this . content + = CR ; <nl> - 	 	 	 } <nl> - <nl> - 	 	 	 / / Release our function description stuff <nl> - 	 	 	 typeInfoUtil . ReleaseFuncDesc ( funcDesc ) ; <nl> - 	 	 } <nl> - <nl> - 	 	 this . createContent ( this . content ) ; <nl> - 	 } <nl> - <nl> - 	 / * * <nl> - 	 * Creates the java doc header . <nl> - 	 * <nl> - 	 * @ param guid <nl> - 	 * the guid <nl> - 	 * @ param helpstring <nl> - 	 * the helpstring <nl> - 	 * / <nl> - 	 protected void createJavaDocHeader ( String guid , String helpstring ) { <nl> - 	 	 this . replaceVariable ( " uuid " , guid ) ; <nl> - 	 	 this . replaceVariable ( " helpstring " , helpstring ) ; <nl> - 	 } <nl> - <nl> - 	 / * * <nl> - 	 * Checks if is reserved method . <nl> - 	 * <nl> - 	 * @ param method <nl> - 	 * the method <nl> - 	 * @ return true , if is reserved method <nl> - 	 * / <nl> - 	 protected boolean isReservedMethod ( String method ) { <nl> - 	 	 for ( int i = 0 ; i < IUNKNOWN _ METHODS . length ; i + + ) { <nl> - 	 	 	 if ( IUNKNOWN _ METHODS [ i ] . equalsIgnoreCase ( method ) ) <nl> - 	 	 	 	 return true ; <nl> - 	 	 } <nl> - <nl> - 	 	 for ( int i = 0 ; i < IDISPATCH _ METHODS . length ; i + + ) { <nl> - 	 	 	 if ( IDISPATCH _ METHODS [ i ] . equalsIgnoreCase ( method ) ) <nl> - 	 	 	 	 return true ; <nl> - 	 	 } <nl> - <nl> - 	 	 return false ; <nl> - 	 } <nl> - <nl> - 	 / * <nl> - 	 * ( non - Javadoc ) <nl> - 	 * <nl> - 	 * @ see com . sun . jna . platform . win32 . COM . tlb . imp . TlbBase # getClassTemplate ( ) <nl> - 	 * / <nl> - 	 @ Override <nl> - 	 protected String getClassTemplate ( ) { <nl> - 	 	 return " com / sun / jna / platform / win32 / COM / tlb / imp / TlbDispatchInterface . template " ; <nl> - 	 } <nl> - } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbDispatchInterface . template b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbDispatchInterface . template <nl> deleted file mode 100644 <nl> index 815a177 . . 0000000 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbDispatchInterface . template <nl> + + + / dev / null <nl> @ @ - 1 , 21 + 0 , 0 @ @ <nl> - package $ { packagename } ; <nl> - <nl> - import java . util . * ; <nl> - <nl> - import com . sun . jna . * ; <nl> - import com . sun . jna . platform . win32 . OaIdl . * ; <nl> - import com . sun . jna . platform . win32 . WinDef . * ; <nl> - import com . sun . jna . platform . win32 . Variant . VARIANT ; <nl> - import com . sun . jna . platform . win32 . WTypes . * ; <nl> - import com . sun . jna . platform . win32 . COM . * ; <nl> - <nl> - / * * <nl> - * uuid ( $ { uuid } ) <nl> - * version ( $ { version } ) <nl> - * helpstring ( $ { helpstring } ) <nl> - * <nl> - * / <nl> - public interface $ { classname } extends IDispatch { 	 <nl> - <nl> - $ { content } <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbEnum . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbEnum . java <nl> index dfc7910 . . 78c2e0a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbEnum . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbEnum . java <nl> @ @ - 39 , 7 + 39 , 7 @ @ public class TlbEnum extends TlbBase { <nl> 	 * @ param typeLibUtil <nl> 	 * the type lib util <nl> 	 * / <nl> - 	 public TlbEnum ( int index , TypeLibUtil typeLibUtil ) { <nl> + 	 public TlbEnum ( int index , String packagename , TypeLibUtil typeLibUtil ) { <nl> 	 	 super ( index , typeLibUtil ) ; <nl> <nl> 	 	 TypeLibDoc typeLibDoc = this . typeLibUtil . getDocumentation ( index ) ; <nl> @ @ - 47 , 6 + 47 , 7 @ @ public class TlbEnum extends TlbBase { <nl> 	 	 String docString = typeLibDoc . getDocString ( ) ; <nl> 	 	 <nl> 	 	 this . logInfo ( " Type of kind ' enum ' found : " + enumName ) ; <nl> + 	 	 this . createPackageName ( packagename ) ; <nl> 	 	 this . createClassName ( enumName ) ; <nl> 	 	 this . setFilename ( enumName ) ; <nl> 	 	 <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbEnum . template b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbEnum . template <nl> index b0ccfab . . 7ea5fc4 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbEnum . template <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbEnum . template <nl> @ @ - 1 , 9 + 1 , 15 @ @ <nl> + package $ { packagename } ; <nl> + <nl> + import java . util . * ; <nl> + <nl> + import com . sun . jna . * ; <nl> + <nl> / * * <nl> * uuid ( $ { uuid } ) <nl> * helpstring ( $ { helpstring } ) <nl> * <nl> * / <nl> - public static class $ { classname } extends Structure { <nl> + public class $ { classname } extends Structure { <nl> 	 public static class ByReference extends $ { classname } implements <nl> 	 	 	 Structure . ByReference { <nl> 	 } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java <nl> new file mode 100644 <nl> index 0000000 . . 9cadbc3 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java <nl> @ @ - 0 , 0 + 1 , 101 @ @ <nl> + / * Copyright ( c ) 2013 Tobias Wolf , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 . COM . tlb . imp ; <nl> + <nl> + import com . sun . jna . platform . win32 . OaIdl . CURRENCY ; <nl> + import com . sun . jna . platform . win32 . OaIdl . DATE ; <nl> + import com . sun . jna . platform . win32 . OaIdl . ELEMDESC ; <nl> + import com . sun . jna . platform . win32 . OaIdl . FUNCDESC ; <nl> + import com . sun . jna . platform . win32 . Variant ; <nl> + import com . sun . jna . platform . win32 . WTypes . BSTR ; <nl> + import com . sun . jna . platform . win32 . WTypes . VARTYPE ; <nl> + import com . sun . jna . platform . win32 . WinDef . SCODE ; <nl> + import com . sun . jna . platform . win32 . COM . IDispatch ; <nl> + import com . sun . jna . platform . win32 . COM . TypeInfoUtil ; <nl> + import com . sun . jna . platform . win32 . COM . TypeInfoUtil . TypeInfoDoc ; <nl> + import com . sun . jna . platform . win32 . COM . TypeLibUtil ; <nl> + import com . sun . jna . platform . win32 . COM . IUnknown ; <nl> + <nl> + / / TODO : Auto - generated Javadoc <nl> + / * * <nl> + * The Class TlbFunction . <nl> + * <nl> + * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> + * / <nl> + public class TlbFunctionStub extends TlbAbstractMethod implements Variant { <nl> + <nl> + 	 / * * <nl> + 	 * Instantiates a new tlb function . <nl> + 	 * <nl> + 	 * @ param index <nl> + 	 * the index <nl> + 	 * @ param typeLibUtil <nl> + 	 * the type lib util <nl> + 	 * @ param funcDesc <nl> + 	 * the func desc <nl> + 	 * @ param typeInfoUtil <nl> + 	 * the type info util <nl> + 	 * / <nl> + 	 public TlbFunctionStub ( int index , TypeLibUtil typeLibUtil , FUNCDESC funcDesc , <nl> + 	 	 	 TypeInfoUtil typeInfoUtil ) { <nl> + 	 	 super ( index , typeLibUtil , funcDesc , typeInfoUtil ) ; <nl> + <nl> + 	 	 TypeInfoDoc typeInfoDoc = typeInfoUtil . getDocumentation ( funcDesc . memid ) ; <nl> + 	 	 String methodname = typeInfoDoc . getName ( ) ; <nl> + 	 	 String docStr = typeInfoDoc . getDocString ( ) ; <nl> + <nl> + 	 	 String methodparams = " " ; <nl> + 	 	 String methodvariables = " " ; <nl> + 	 	 short vtableId = funcDesc . oVft ; <nl> + 	 	 short paramCount = funcDesc . cParams ; <nl> + 	 	 ELEMDESC elemDesdRetType = funcDesc . elemdescFunc ; <nl> + 	 	 String returnType = this . getVarType ( elemDesdRetType . tdesc . vt ) ; <nl> + 	 	 String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; <nl> + 	 	 <nl> + 	 	 / / if there is at least one param we need a comma <nl> + 	 	 if ( paramCount > 0 ) <nl> + 	 	 	 methodvariables = " , " ; <nl> + 	 	 <nl> + 	 	 for ( int i = 0 ; i < paramCount ; i + + ) { <nl> + 	 	 	 ELEMDESC elemdesc = funcDesc . lprgelemdescParam . elemDescArg [ i ] ; <nl> + 	 	 	 VARTYPE vt = elemdesc . tdesc . vt ; <nl> + <nl> + 	 	 	 String methodName = names [ i + 1 ] . toLowerCase ( ) ; <nl> + 	 	 	 methodparams + = this . getVarType ( vt ) + " " + methodName ; <nl> + 	 	 	 methodvariables + = methodName ; <nl> + 	 	 	 <nl> + 	 	 	 / / if there is more than 1 param <nl> + 	 	 	 if ( i < ( paramCount - 1 ) ) { <nl> + 	 	 	 	 methodparams + = " , " ; <nl> + 	 	 	 	 methodvariables + = " , " ; <nl> + 	 	 	 } <nl> + 	 	 } <nl> + <nl> + 	 	 this . replaceVariable ( " helpstring " , docStr ) ; <nl> + 	 	 this . replaceVariable ( " returntype " , returnType ) ; <nl> + 	 	 this . replaceVariable ( " methodname " , methodname ) ; <nl> + 	 	 this . replaceVariable ( " methodparams " , methodparams ) ; <nl> + 	 	 this . replaceVariable ( " methodvariables " , methodvariables ) ; <nl> + 	 	 this . replaceVariable ( " vtableid " , String . valueOf ( vtableId ) ) ; <nl> + 	 } <nl> + <nl> + 	 / * <nl> + 	 * ( non - Javadoc ) <nl> + 	 * <nl> + 	 * @ see com . sun . jna . platform . win32 . COM . tlb . imp . TlbBase # getClassTemplate ( ) <nl> + 	 * / <nl> + 	 @ Override <nl> + 	 protected String getClassTemplate ( ) { <nl> + 	 	 return " com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . template " ; <nl> + 	 } <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . template b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . template <nl> new file mode 100644 <nl> index 0000000 . . 77b6b15 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . template <nl> @ @ - 0 , 0 + 1 , 4 @ @ <nl> + 	 	 / * * <nl> + 	 	 * $ { helpstring } <nl> + 	 	 * / <nl> + 	 	 public $ { returntype } $ { methodname } ( $ { methodparams } ) ; <nl> \ No newline at end of file <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbInterface . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbInterface . java <nl> index 60c81fa . . 2f252c0 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbInterface . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbInterface . java <nl> @ @ - 39 , 7 + 39 , 7 @ @ public class TlbInterface extends TlbBase { <nl> 	 * @ param typeLibUtil <nl> 	 * the type lib util <nl> 	 * / <nl> - 	 public TlbInterface ( int index , TypeLibUtil typeLibUtil ) { <nl> + 	 public TlbInterface ( int index , String packagename , TypeLibUtil typeLibUtil ) { <nl> 	 	 super ( index , typeLibUtil ) ; <nl> <nl> 	 	 TypeLibDoc typeLibDoc = this . typeLibUtil . getDocumentation ( index ) ; <nl> @ @ - 47 , 6 + 47 , 7 @ @ public class TlbInterface extends TlbBase { <nl> 	 	 String docString = typeLibDoc . getDocString ( ) ; <nl> <nl> 	 	 this . logInfo ( " Type of kind ' Interface ' found : " + enumName ) ; <nl> + 	 	 this . createPackageName ( packagename ) ; <nl> 	 	 this . createClassName ( enumName ) ; <nl> <nl> 	 	 / / Get the TypeAttributes <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java <nl> new file mode 100644 <nl> index 0000000 . . fc7d46e <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java <nl> @ @ - 0 , 0 + 1 , 73 @ @ <nl> + / * Copyright ( c ) 2013 Tobias Wolf , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 . COM . tlb . imp ; <nl> + <nl> + import com . sun . jna . platform . win32 . OaIdl . CURRENCY ; <nl> + import com . sun . jna . platform . win32 . OaIdl . DATE ; <nl> + import com . sun . jna . platform . win32 . OaIdl . ELEMDESC ; <nl> + import com . sun . jna . platform . win32 . OaIdl . FUNCDESC ; <nl> + import com . sun . jna . platform . win32 . Variant ; <nl> + import com . sun . jna . platform . win32 . WTypes . BSTR ; <nl> + import com . sun . jna . platform . win32 . WTypes . VARTYPE ; <nl> + import com . sun . jna . platform . win32 . WinDef . SCODE ; <nl> + import com . sun . jna . platform . win32 . COM . IDispatch ; <nl> + import com . sun . jna . platform . win32 . COM . TypeInfoUtil ; <nl> + import com . sun . jna . platform . win32 . COM . TypeInfoUtil . TypeInfoDoc ; <nl> + import com . sun . jna . platform . win32 . COM . TypeLibUtil ; <nl> + import com . sun . jna . platform . win32 . COM . IUnknown ; <nl> + <nl> + / / TODO : Auto - generated Javadoc <nl> + / * * <nl> + * The Class TlbPropertyGet . <nl> + * <nl> + * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> + * / <nl> + public class TlbPropertyGetStub extends TlbAbstractMethod implements Variant { <nl> + <nl> + 	 / * * <nl> + 	 * Instantiates a new tlb property get . <nl> + 	 * <nl> + 	 * @ param index <nl> + 	 * the index <nl> + 	 * @ param typeLibUtil <nl> + 	 * the type lib util <nl> + 	 * @ param funcDesc <nl> + 	 * the func desc <nl> + 	 * @ param typeInfoUtil <nl> + 	 * the type info util <nl> + 	 * / <nl> + 	 public TlbPropertyGetStub ( int index , TypeLibUtil typeLibUtil , <nl> + 	 	 	 FUNCDESC funcDesc , TypeInfoUtil typeInfoUtil ) { <nl> + 	 	 super ( index , typeLibUtil , funcDesc , typeInfoUtil ) ; <nl> + <nl> + 	 	 TypeInfoDoc typeInfoDoc = typeInfoUtil . getDocumentation ( funcDesc . memid ) ; <nl> + 	 	 String docStr = typeInfoDoc . getDocString ( ) ; <nl> + 	 	 String methodname = " get " + typeInfoDoc . getName ( ) ; <nl> + 	 	 ELEMDESC elemDesdRetType = funcDesc . elemdescFunc ; <nl> + 	 	 String returnType = this . getVarType ( elemDesdRetType . tdesc . vt ) ; <nl> + <nl> + 	 	 this . replaceVariable ( " helpstring " , docStr ) ; <nl> + 	 	 this . replaceVariable ( " returntype " , returnType ) ; <nl> + 	 	 this . replaceVariable ( " methodname " , methodname ) ; <nl> + 	 } <nl> + <nl> + 	 / * <nl> + 	 * ( non - Javadoc ) <nl> + 	 * <nl> + 	 * @ see com . sun . jna . platform . win32 . COM . tlb . imp . TlbBase # getClassTemplate ( ) <nl> + 	 * / <nl> + 	 @ Override <nl> + 	 protected String getClassTemplate ( ) { <nl> + 	 	 return " com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . template " ; <nl> + 	 } <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . template b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . template <nl> new file mode 100644 <nl> index 0000000 . . 579a1d6 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . template <nl> @ @ - 0 , 0 + 1 , 4 @ @ <nl> + 	 	 / * * <nl> + 	 	 * $ { helpstring } <nl> + 	 	 * / <nl> + 	 	 public $ { returntype } $ { methodname } ( ) ; <nl> \ No newline at end of file <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java <nl> new file mode 100644 <nl> index 0000000 . . 0c84c54 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java <nl> @ @ - 0 , 0 + 1 , 81 @ @ <nl> + / * Copyright ( c ) 2013 Tobias Wolf , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 . COM . tlb . imp ; <nl> + <nl> + import com . sun . jna . platform . win32 . OaIdl . CURRENCY ; <nl> + import com . sun . jna . platform . win32 . OaIdl . DATE ; <nl> + import com . sun . jna . platform . win32 . OaIdl . ELEMDESC ; <nl> + import com . sun . jna . platform . win32 . OaIdl . FUNCDESC ; <nl> + import com . sun . jna . platform . win32 . Variant ; <nl> + import com . sun . jna . platform . win32 . WTypes . BSTR ; <nl> + import com . sun . jna . platform . win32 . WTypes . VARTYPE ; <nl> + import com . sun . jna . platform . win32 . WinDef . SCODE ; <nl> + import com . sun . jna . platform . win32 . COM . IDispatch ; <nl> + import com . sun . jna . platform . win32 . COM . TypeInfoUtil ; <nl> + import com . sun . jna . platform . win32 . COM . TypeInfoUtil . TypeInfoDoc ; <nl> + import com . sun . jna . platform . win32 . COM . TypeLibUtil ; <nl> + import com . sun . jna . platform . win32 . COM . IUnknown ; <nl> + <nl> + / / TODO : Auto - generated Javadoc <nl> + / * * <nl> + * The Class TlbPropertyPut . <nl> + * <nl> + * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> + * / <nl> + public class TlbPropertyPutStub extends TlbAbstractMethod implements Variant { <nl> + <nl> + 	 / * * <nl> + 	 * Instantiates a new tlb property set . <nl> + 	 * <nl> + 	 * @ param index <nl> + 	 * the index <nl> + 	 * @ param typeLibUtil <nl> + 	 * the type lib util <nl> + 	 * @ param funcDesc <nl> + 	 * the func desc <nl> + 	 * @ param typeInfoUtil <nl> + 	 * the type info util <nl> + 	 * / <nl> + 	 public TlbPropertyPutStub ( int index , TypeLibUtil typeLibUtil , <nl> + 	 	 	 FUNCDESC funcDesc , TypeInfoUtil typeInfoUtil ) { <nl> + 	 	 super ( index , typeLibUtil , funcDesc , typeInfoUtil ) ; <nl> + <nl> + 	 	 TypeInfoDoc typeInfoDoc = typeInfoUtil . getDocumentation ( funcDesc . memid ) ; <nl> + 	 	 String docStr = typeInfoDoc . getDocString ( ) ; <nl> + 	 	 String methodname = " set " + typeInfoDoc . getName ( ) ; <nl> + 	 	 String methodparams = " " ; <nl> + 	 	 short paramCount = funcDesc . cParams ; <nl> + 	 	 String varType ; <nl> + 	 	 <nl> + 	 	 for ( int i = 0 ; i < paramCount ; i + + ) { <nl> + 	 	 	 ELEMDESC elemdesc = funcDesc . lprgelemdescParam . elemDescArg [ i ] ; <nl> + 	 	 	 VARTYPE vt = elemdesc . tdesc . vt ; <nl> + 	 	 	 varType = this . getVarType ( vt ) ; <nl> + 	 	 	 methodparams + = varType + " " + varType . toLowerCase ( ) ; <nl> + 	 	 } <nl> + <nl> + 	 	 this . replaceVariable ( " helpstring " , docStr ) ; <nl> + 	 	 this . replaceVariable ( " methodname " , methodname ) ; <nl> + 	 	 this . replaceVariable ( " methodparams " , methodparams ) ; <nl> + 	 } <nl> + <nl> + 	 / * <nl> + 	 * ( non - Javadoc ) <nl> + 	 * <nl> + 	 * @ see com . sun . jna . platform . win32 . COM . tlb . imp . TlbBase # getClassTemplate ( ) <nl> + 	 * / <nl> + 	 @ Override <nl> + 	 protected String getClassTemplate ( ) { <nl> + 	 	 return " com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . template " ; <nl> + 	 } <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . template b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . template <nl> new file mode 100644 <nl> index 0000000 . . a6f3496 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . template <nl> @ @ - 0 , 0 + 1 , 4 @ @ <nl> + 	 	 / * * <nl> + 	 	 * $ { helpstring } <nl> + 	 	 * / <nl> + 	 	 public void $ { methodname } ( $ { methodparams } ) ; <nl> \ No newline at end of file
diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index d9586c8 . . 5ba4a39 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 124 , 6 + 124 , 7 @ @ public final class Native implements Version { <nl> private static final int TYPE _ WCHAR _ T = 2 ; <nl> private static final int TYPE _ SIZE _ T = 3 ; <nl> <nl> + static final int MAX _ ALIGNMENT ; <nl> static final int MAX _ PADDING ; <nl> <nl> static { <nl> @ @ - 153 , 10 + 154 , 12 @ @ public final class Native implements Version { <nl> + " - set jna . boot . library . path to include the path to the version of the " + LS <nl> + " jnidispatch library included with the JNA jar file you are using " + LS ) ; <nl> } <nl> - 	 MAX _ PADDING = Platform . isSPARC ( ) | | Platform . isWindows ( ) | | Platform . isARM ( ) <nl> - | | Platform . isAIX ( ) | | Platform . isAndroid ( ) <nl> - | | Platform . isPPC ( ) <nl> + 	 MAX _ ALIGNMENT = Platform . isSPARC ( ) | | Platform . isWindows ( ) <nl> + | | ( Platform . isLinux ( ) & & ( Platform . isARM ( ) | | Platform . isPPC ( ) ) ) <nl> + | | Platform . isAIX ( ) <nl> + | | Platform . isAndroid ( ) <nl> ? 8 : LONG _ SIZE ; <nl> + MAX _ PADDING = ( Platform . isMac ( ) & & Platform . isPPC ( ) ) ? 8 : MAX _ ALIGNMENT ; <nl> } <nl> <nl> / * * Force a dispose when this class is GC ' d . * / <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index d203293 . . 64df23d 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 1301 , 7 + 1301 , 7 @ @ public abstract class Structure { <nl> / / NOTE this is published ABI for 32 - bit gcc / linux / x86 , osx / x86 , <nl> / / and osx / ppc . osx / ppc special - cases the first element <nl> if ( ! isFirstElement | | ! ( Platform . isMac ( ) & & Platform . isPPC ( ) ) ) { <nl> - alignment = Math . min ( Native . MAX _ PADDING , alignment ) ; <nl> + alignment = Math . min ( Native . MAX _ ALIGNMENT , alignment ) ; <nl> } <nl> if ( ! isFirstElement & & Platform . isAIX ( ) & & ( type = = double . class | | type = = Double . class ) ) { <nl> alignment = 4 ; <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index 98df121 . . fedaea1 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 158 , 7 + 158 , 7 @ @ public class StructureTest extends TestCase { <nl> } <nl> Structure s = new TestStructure ( ) ; <nl> s . setAlignType ( Structure . ALIGN _ GNUC ) ; <nl> - final int SIZE = Native . MAX _ PADDING = = 8 ? 32 : 28 ; <nl> + final int SIZE = Native . MAX _ ALIGNMENT = = 8 ? 32 : 28 ; <nl> assertEquals ( " Wrong structure size " , SIZE , s . size ( ) ) ; <nl> } <nl>
diff - - git a / lib / native / w32ce - arm . jar b / lib / native / w32ce - arm . jar <nl> index 6716399 . . a341b15 100755 <nl> Binary files a / lib / native / w32ce - arm . jar and b / lib / native / w32ce - arm . jar differ <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 8270a79 . . 244a866 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 113 , 7 + 113 , 7 @ @ w32 _ format _ error ( int err , char * buf , int len ) { <nl> if ( wlen > 0 ) { <nl> int result = WideCharToMultiByte ( CP _ UTF8 , 0 , wbuf , - 1 , buf , len , NULL , NULL ) ; <nl> if ( result = = 0 ) { <nl> - fprintf ( stderr , " JNA : error converting error message : % d \ n " , GET _ LAST _ ERROR ( ) ) ; <nl> + fprintf ( stderr , " JNA : error converting error message : % d \ n " , ( int ) GET _ LAST _ ERROR ( ) ) ; <nl> * buf = 0 ; <nl> } <nl> else {
diff - - git a / lib / native / sunos - sparc . jar b / lib / native / sunos - sparc . jar <nl> index a68edcf . . a86928d 100644 <nl> Binary files a / lib / native / sunos - sparc . jar and b / lib / native / sunos - sparc . jar differ <nl> diff - - git a / lib / native / sunos - sparcv9 . jar b / lib / native / sunos - sparcv9 . jar <nl> index d2493ca . . 30b24c5 100755 <nl> Binary files a / lib / native / sunos - sparcv9 . jar and b / lib / native / sunos - sparcv9 . jar differ
diff - - git a / lib / native / linux - arm . jar b / lib / native / linux - arm . jar <nl> index 94c2ffb . . ac92a07 100755 <nl> Binary files a / lib / native / linux - arm . jar and b / lib / native / linux - arm . jar differ
diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index 595aa92 . . 60a9c1c 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ
diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index 2387644 . . 6d465bb 100755 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 523f875 . . 3701484 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 106 , 12 + 106 , 22 @ @ static char * <nl> w32 _ format _ error ( int error , char * buf , int len ) { <nl> wchar _ t * wbuf = NULL ; <nl> int wlen = <nl> - FormatMessageW ( FORMAT _ MESSAGE _ FROM _ SYSTEM | FORMAT _ MESSAGE _ IGNORE _ INSERTS | FORMAT _ MESSAGE _ ALLOCATE _ BUFFER , <nl> + FormatMessageW ( FORMAT _ MESSAGE _ FROM _ SYSTEM <nl> + | FORMAT _ MESSAGE _ IGNORE _ INSERTS <nl> + | FORMAT _ MESSAGE _ ALLOCATE _ BUFFER , <nl> NULL , error , 0 , ( LPWSTR ) & wbuf , 0 , NULL ) ; <nl> if ( wlen > 0 ) { <nl> - WideCharToMultiByte ( CP _ UTF8 , 0 , wbuf , wlen + 1 , buf , len , NULL , NULL ) ; <nl> + int result = WideCharToMultiByte ( CP _ UTF8 , 0 , wbuf , - 1 , buf , len , NULL , NULL ) ; <nl> + if ( result = = 0 ) { <nl> + fprintf ( stderr , " JNA : error converting error message : % d \ n " , GET _ LAST _ ERROR ( ) ) ; <nl> + * buf = 0 ; <nl> + } <nl> + else { <nl> + buf [ len - 1 ] = 0 ; <nl> + } <nl> } <nl> else { <nl> + / / Error retrieving message <nl> * buf = 0 ; <nl> } <nl> if ( wbuf ) { <nl> @ @ - 561 , 20 + 571 , 20 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray arr , <nl> status = ffi _ prep _ cif ( & cif , abi , nargs , ffi _ return _ type , ffi _ types ) ; <nl> if ( ! ffi _ error ( env , " Native call setup " , status ) ) { <nl> PSTART ( ) ; <nl> - if ( flags & THROW _ LAST _ ERROR ) { <nl> + if ( ( flags & THROW _ LAST _ ERROR ) ! = 0 ) { <nl> SET _ LAST _ ERROR ( 0 ) ; <nl> } <nl> ffi _ call ( & cif , FFI _ FN ( func ) , resP , ffi _ values ) ; <nl> - if ( flags & THROW _ LAST _ ERROR ) { <nl> + { <nl> int error = GET _ LAST _ ERROR ( ) ; <nl> - if ( error ) { <nl> + JNA _ set _ last _ error ( env , error ) ; <nl> + if ( ( flags & THROW _ LAST _ ERROR ) & & error ) { <nl> char emsg [ 1024 ] ; <nl> snprintf ( msg , sizeof ( msg ) , " [ % d ] % s " , error , STR _ ERROR ( error , emsg , sizeof ( emsg ) ) ) ; <nl> throw _ type = ELastError ; <nl> throw _ msg = msg ; <nl> } <nl> } <nl> - JNA _ set _ last _ error ( env , GET _ LAST _ ERROR ( ) ) ; <nl> <nl> PROTECTED _ END ( do { throw _ type = EError ; throw _ msg = " Invalid memory access " ; } while ( 0 ) ) ; <nl> } <nl> @ @ - 1742 , 16 + 1752 , 16 @ @ method _ handler ( ffi _ cif * cif , void * volatile resp , void * * argp , void * cdata ) { <nl> SET _ LAST _ ERROR ( 0 ) ; <nl> } <nl> ffi _ call ( & data - > cif , FFI _ FN ( data - > fptr ) , resp , args ) ; <nl> - if ( data - > throw _ last _ error ) { <nl> + { <nl> int error = GET _ LAST _ ERROR ( ) ; <nl> - if ( error ) { <nl> + JNA _ set _ last _ error ( env , error ) ; <nl> + if ( data - > throw _ last _ error & & error ) { <nl> char emsg [ 1024 ] ; <nl> - snprintf ( msg , sizeof ( msg ) , " [ % d ] % s " , error , STR _ ERROR ( error , emsg , sizeof ( emsg ) ) ) ; <nl> + snprintf ( msg , sizeof ( msg ) , " [ % d ] % s " , error , STR _ ERROR ( error , emsg , sizeof ( emsg ) ) ) ; <nl> throw _ type = ELastError ; <nl> throw _ msg = msg ; <nl> } <nl> } <nl> - JNA _ set _ last _ error ( env , GET _ LAST _ ERROR ( ) ) ; <nl> <nl> PROTECTED _ END ( do { throw _ type = EError ; throw _ msg = " Invalid memory access " ; } while ( 0 ) ) ; <nl> }
diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index ec8f2b3 . . 2387644 100755 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ
diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 60340e4 . . 523f875 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 2841 , 9 + 2841 , 9 @ @ Java _ com _ sun _ jna _ Native _ getWindowHandle0 ( JNIEnv * env , jclass UNUSED ( classp ) , job <nl> / / Use Unicode strings in case the path to the library includes non - ASCII <nl> / / characters . <nl> wchar _ t * path = L " jawt . dll " ; <nl> - jstring jprop = ( wchar _ t * ) get _ system _ property ( env , " java . home " ) ; <nl> + jstring jprop = get _ system _ property ( env , " java . home " ) ; <nl> if ( jprop ! = NULL ) { <nl> - const wchar _ t * prop = newWideCString ( env , value ) ; <nl> + const wchar _ t * prop = newWideCString ( env , jprop ) ; <nl> const wchar _ t * suffix = L " / bin / jawt . dll " ; <nl> size _ t len = wcslen ( prop ) + wcslen ( suffix ) + 1 ; <nl> path = ( wchar _ t * ) alloca ( len * sizeof ( wchar _ t ) ) ;
diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 180477a . . 6175bdb 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 818 , 6 + 818 , 9 @ @ public final class Native implements Version { <nl> } <nl> throw new IOException ( " Native library ( " + resourcePath + " ) not found in resource path ( " + path + " ) " ) ; <nl> } <nl> + if ( DEBUG _ LOAD ) { <nl> + System . out . println ( " Found library resource at " + url ) ; <nl> + } <nl> <nl> File lib = null ; <nl> if ( url . getProtocol ( ) . toLowerCase ( ) . equals ( " file " ) ) { <nl> @ @ - 835 , 10 + 838 , 6 @ @ public final class Native implements Version { <nl> } <nl> } <nl> else if ( ! Boolean . getBoolean ( " jna . nounpack " ) ) { <nl> - 	 if ( Native . DEBUG _ LOAD ) { <nl> - 	 	 System . out . println ( " Looking in " + resourcePath ) ; <nl> - 	 } <nl> - 	 <nl> InputStream is = loader . getResourceAsStream ( resourcePath ) ; <nl> if ( is = = null ) { <nl> throw new IOException ( " Can ' t obtain InputStream for " + resourcePath ) ; <nl> diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index 009ae75 . . cd3b0f7 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 256 , 6 + 256 , 7 @ @ public class NativeLibrary { <nl> try { <nl> File embedded = Native . extractFromResourcePath ( libraryName , ( ClassLoader ) options . get ( Library . OPTION _ CLASSLOADER ) ) ; <nl> handle = Native . open ( embedded . getAbsolutePath ( ) ) ; <nl> + libraryPath = embedded . getAbsolutePath ( ) ; <nl> / / Don ' t leave temporary files around <nl> if ( Native . isUnpacked ( embedded ) ) { <nl> Native . deleteLibrary ( embedded ) ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index a39f4d7 . . 9e90967 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 9 , 26 + 9 , 27 @ @ Features <nl> * Added ASL licensing to facilitate distribution - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 109 ] ( https : / / github . com / twall / jna / issues / 109 ) : Set default Java compatibility level to 1 . 6 - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 209 ] ( https : / / github . com / twall / jna / issues / 209 ) : Improved default performance saving last error results - [ @ twall ] ( https : / / github . com / twall ) . <nl> - * Used predictable names for CPU architecture prefix ( namely x86 , x86 - 64 ) ; names correspond to OSGI processor values - [ @ twall ] ( https : / / github . com / twall ) . <nl> - * Avoided superfluous Structure memory allocation from native - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Use predictable names for CPU architecture prefix ( namely x86 , x86 - 64 ) ; names correspond to OSGI processor values - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Avoid superfluous Structure memory allocation from native - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Added ` Library . OPTION _ CLASSLOADER ` , which enables loading native libraries from any class loader ( including JNA ' s native library ) . This enables parallel dependencies on JNA ( e . g . within a tomcat deployment without having to include JNA in the app server environment ) - [ @ twall ] ( https : / / github . com / twall ) . <nl> - * Used per - library String encoding settings ( see ` Native . getDefaultStringEncoding ( ) ` and ` Structure . getStringEncoding ( ) ` ) - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Use per - library String encoding settings ( see ` Native . getDefaultStringEncoding ( ) ` and ` Structure . getStringEncoding ( ) ` ) - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Added memory dump for debugging ( see ` com . sun . jna . Memory ` ) - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Improved caching of Structure alignment , type mapping , and encoding information - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 225 ] ( https : / / github . com / twall / jna / pull / 225 ) : Added ` platform . win32 . Kernel32 . GetLogicalProcessorInformation ` and ` platform . win32 . Kernel32Util . getLogicalProcessorInformation ` - [ @ trejkaz ] ( https : / / github . com / trejkaz ) . <nl> * [ # 236 ] ( https : / / github . com / twall / jna / issues / 236 ) : Auto - strip profiler native method prefix specified by ` jna . profiler . prefix ` , which defaults to $ $ YJP $ $ - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Added ` jna . debug _ load ` property to diagnose library loading issues - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> * [ # 213 ] ( https : / / github . com / twall / jna / pull / 213 ) : Fixed ` Structure . toString ( ) ` not to dump memory when ` jna . dump _ memory ` is false - [ @ tomohiron ] ( https : / / github . com / tomohiron ) . <nl> - * Used TLS to indicate callback detach state , to avoid any potential conflicts with last error storage - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Use dedicated TLS to indicate callback detach state , to avoid any potential conflicts with last error storage - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 173 ] ( https : / / github . com / twall / jna / issues / 173 ) : Fixed OSX 10 . 8 / Xcode 4 + builds , web start path with Oracle 1 . 7 JDK - [ @ mkjellman ] ( https : / / github . com / mkjellman ) . <nl> * [ # 215 ] ( https : / / github . com / twall / jna / issues / 215 ) : Forced use of XSI ` strerror _ r ` on linux - [ LionelCons ] ( https : / / github . com / LionelCons ) . <nl> * [ # 214 ] ( https : / / github . com / twall / jna / issues / 214 ) : Don ' t map library names when an absolute path is provided - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 218 ] ( https : / / github . com / twall / jna / issues / 218 ) : Explicitly handled broken Android ` SecurityManager ` implementation - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 223 ] ( https : / / github . com / twall / jna / issues / 223 ) : Fixed layout / size derivation for unions - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 229 ] ( https : / / github . com / twall / jna / issues / 229 ) : Added ` CreateProcessW ` ( Unicode version ) - [ @ twall ] ( https : / / github . com / twall ) . <nl> - * Avoided solaris / x86 JVM bug w / library open flags - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Avoid solaris / x86 JVM bug w / library open flags - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Fixed NPE returning wide string from a direct - mapped function - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 237 ] ( https : / / github . com / twall / jna / issues / 237 ) : Fix LastErrorException / getLastError on AIX - [ @ skissane ] ( https : / / github . com / skissane ) . <nl> <nl> diff - - git a / build . xml b / build . xml <nl> index f1e9cda . . def7e45 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 764 , 7 + 764 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < / jar > <nl> < ! - - Ensure jar - based library is unavailable on FS - based class path - - > <nl> < delete > <nl> - < fileset dir = " $ { test . classes } " > <nl> + < fileset dir = " $ { build } " > <nl> < include name = " * * / * testlib - jar * " / > <nl> < / fileset > <nl> < / delete > <nl> diff - - git a / native / callback . c b / native / callback . c <nl> index 1ea941c . . 522dac0 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 645 , 6 + 645 , 7 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> tls = get _ thread _ storage ( env ) ; <nl> if ( tls ) { <nl> strncpy ( tls - > name , args . name ? args . name : " < unconfigured native thread > " , sizeof ( tls - > name ) ) ; <nl> + tls - > name [ sizeof ( tls - > name ) - 1 ] = 0 ; <nl> tls - > detach = detach ; <nl> tls - > jvm _ thread = JNI _ FALSE ; <nl> } <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 2d477ca . . 805115f 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 49 , 7 + 49 , 7 @ @ <nl> # include < dlfcn . h > <nl> # include < errno . h > <nl> # define STRTYPE char * <nl> - # define NAME2CSTR ( ENV , JSTR ) newCStringUTF8 ( ENV , JSTR ) <nl> + # define NAME2CSTR ( ENV , JSTR ) newCString ( ENV , JSTR ) <nl> # define DEFAULT _ LOAD _ OPTS ( RTLD _ LAZY | RTLD _ GLOBAL ) <nl> # define LOAD _ LIBRARY ( NAME , OPTS ) dlopen ( NAME , OPTS ) <nl> # define LOAD _ ERROR ( BUF , LEN ) ( snprintf ( BUF , LEN , " % s " , dlerror ( ) ) , BUF ) <nl> @ @ - 276 , 6 + 276 , 8 @ @ static jfieldID FID _ Structure _ typeInfo ; <nl> static jfieldID FID _ IntegerType _ value ; <nl> static jfieldID FID _ PointerType _ pointer ; <nl> <nl> + jstring fileEncoding ; <nl> + <nl> / * Forward declarations * / <nl> static char * newCString ( JNIEnv * env , jstring jstr ) ; <nl> static char * newCStringEncoding ( JNIEnv * env , jstring jstr , const char * encoding ) ; <nl> @ @ - 290 , 7 + 292 , 7 @ @ static ffi _ type * getStructureType ( JNIEnv * , jobject ) ; <nl> <nl> typedef void ( JNICALL * release _ t ) ( JNIEnv * , jarray , void * , jint ) ; <nl> <nl> - # if 1 <nl> + # if 0 <nl> / * * Invokes System . err . println ( for debugging only ) . * / <nl> void <nl> println ( JNIEnv * env , const char * msg ) { <nl> @ @ - 1233 , 22 + 1235 , 15 @ @ getBufferArray ( JNIEnv * env , jobject buf , <nl> } <nl> # endif / * NO _ NIO _ BUFFERS * / <nl> <nl> - static const void * <nl> - get _ system _ property ( JNIEnv * env , const char * name , jboolean wide ) { <nl> + static jstring <nl> + get _ system _ property ( JNIEnv * env , const char * name ) { <nl> jclass classSystem = ( * env ) - > FindClass ( env , " java / lang / System " ) ; <nl> if ( classSystem ! = NULL ) { <nl> jmethodID mid = ( * env ) - > GetStaticMethodID ( env , classSystem , " getProperty " , <nl> " ( Ljava / lang / String ; ) Ljava / lang / String ; " ) ; <nl> if ( mid ! = NULL ) { <nl> jstring propname = newJavaString ( env , name , CHARSET _ UTF8 ) ; <nl> - jstring value = ( * env ) - > CallStaticObjectMethod ( env , classSystem , <nl> - mid , propname ) ; <nl> - if ( value ) { <nl> - if ( wide ) { <nl> - return newWideCString ( env , value ) ; <nl> - } <nl> - return newCStringUTF8 ( env , value ) ; <nl> - } <nl> + return ( * env ) - > CallStaticObjectMethod ( env , classSystem , mid , propname ) ; <nl> } <nl> } <nl> return NULL ; <nl> @ @ - 1383 , 6 + 1378 , 11 @ @ JNA _ init ( JNIEnv * env ) { <nl> if ( ! LOAD _ FID ( env , FID _ Double _ value , classDouble , " value " , " D " ) ) <nl> return " Double . value " ; <nl> <nl> + fileEncoding = get _ system _ property ( env , " file . encoding " ) ; <nl> + if ( fileEncoding ) { <nl> + fileEncoding = ( * env ) - > NewGlobalRef ( env , fileEncoding ) ; <nl> + } <nl> + <nl> return NULL ; <nl> } <nl> <nl> @ @ - 2837 , 8 + 2837 , 9 @ @ Java _ com _ sun _ jna _ Native _ getWindowHandle0 ( JNIEnv * env , jclass UNUSED ( classp ) , job <nl> / / Use Unicode strings in case the path to the library includes non - ASCII <nl> / / characters . <nl> wchar _ t * path = L " jawt . dll " ; <nl> - wchar _ t * prop = ( wchar _ t * ) get _ system _ property ( env , " java . home " , JNI _ TRUE ) ; <nl> - if ( prop ! = NULL ) { <nl> + jstring jprop = ( wchar _ t * ) get _ system _ property ( env , " java . home " ) ; <nl> + if ( jprop ! = NULL ) { <nl> + const wchar _ t * prop = newWideCString ( env , value ) ; <nl> const wchar _ t * suffix = L " / bin / jawt . dll " ; <nl> size _ t len = wcslen ( prop ) + wcslen ( suffix ) + 1 ; <nl> path = ( wchar _ t * ) alloca ( len * sizeof ( wchar _ t ) ) ; <nl> @ @ - 3067 , 6 + 3068 , 11 @ @ JNI _ OnUnload ( JavaVM * vm , void * UNUSED ( reserved ) ) { <nl> } <nl> } <nl> <nl> + if ( fileEncoding ) { <nl> + ( * env ) - > DeleteGlobalRef ( env , fileEncoding ) ; <nl> + fileEncoding = NULL ; <nl> + } <nl> + <nl> for ( i = 0 ; i < sizeof ( refs ) / sizeof ( refs [ 0 ] ) ; i + + ) { <nl> if ( * refs [ i ] ) { <nl> ( * env ) - > DeleteWeakGlobalRef ( env , * refs [ i ] ) ; <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index f377a4f . . 180477a 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 92 , 6 + 92 , 8 @ @ import com . sun . jna . Structure . FFIType ; <nl> public final class Native implements Version { <nl> <nl> public static final String DEFAULT _ ENCODING = " utf8 " ; <nl> + static final boolean DEBUG _ LOAD = Boolean . getBoolean ( " jna . debug _ load " ) ; <nl> + static final boolean DEBUG _ JNA _ LOAD = Boolean . getBoolean ( " jna . debug _ load . jna " ) ; <nl> <nl> / / Used by tests , do not remove <nl> private static String nativeLibraryPath = null ; <nl> @ @ - 660 , 8 + 662 , 14 @ @ public final class Native implements Version { <nl> String dir = dirs . nextToken ( ) ; <nl> File file = new File ( new File ( dir ) , System . mapLibraryName ( libName ) . replace ( " . dylib " , " . jnilib " ) ) ; <nl> String path = file . getAbsolutePath ( ) ; <nl> + 	 	 if ( DEBUG _ JNA _ LOAD ) { <nl> + 	 	 System . out . println ( " Looking in " + path ) ; <nl> + 	 	 } <nl> if ( file . exists ( ) ) { <nl> try { <nl> + 	 	 	 if ( DEBUG _ JNA _ LOAD ) { <nl> + 	 	 	 System . out . println ( " Trying " + path ) ; <nl> + 	 	 	 } <nl> System . load ( path ) ; <nl> nativeLibraryPath = path ; <nl> return ; <nl> @ @ - 681 , 8 + 689 , 14 @ @ public final class Native implements Version { <nl> ext = " dylib " ; <nl> } <nl> path = path . substring ( 0 , path . lastIndexOf ( orig ) ) + ext ; <nl> + 	 	 if ( DEBUG _ JNA _ LOAD ) { <nl> + 	 	 	 System . out . println ( " Looking in " + path ) ; <nl> + 	 	 } <nl> if ( new File ( path ) . exists ( ) ) { <nl> try { <nl> + 	 	 	 if ( DEBUG _ JNA _ LOAD ) { <nl> + 	 	 	 	 System . out . println ( " Trying " + path ) ; <nl> + 	 	 	 } <nl> System . load ( path ) ; <nl> nativeLibraryPath = path ; <nl> return ; <nl> @ @ - 695 , 6 + 709 , 9 @ @ public final class Native implements Version { <nl> } <nl> if ( ! Boolean . getBoolean ( " jna . nosys " ) ) { <nl> try { <nl> + 	 	 if ( DEBUG _ JNA _ LOAD ) { <nl> + 	 	 System . out . println ( " Trying ( via loadLibrary ) " + libName ) ; <nl> + 	 	 } <nl> System . loadLibrary ( libName ) ; <nl> return ; <nl> } <nl> @ @ - 723 , 7 + 740 , 10 @ @ public final class Native implements Version { <nl> throw new UnsatisfiedLinkError ( " Could not find JNA native support " ) ; <nl> } <nl> } <nl> - System . load ( lib . getAbsolutePath ( ) ) ; <nl> + 	 if ( DEBUG _ JNA _ LOAD ) { <nl> + 	 	 System . out . println ( " Trying " + lib . getAbsolutePath ( ) ) ; <nl> + 	 } <nl> + 	 System . load ( lib . getAbsolutePath ( ) ) ; <nl> nativeLibraryPath = lib . getAbsolutePath ( ) ; <nl> / / Attempt to delete immediately once jnidispatch is successfully <nl> / / loaded . This avoids the complexity of trying to do so on " exit " , <nl> @ @ - 778 , 6 + 798 , 9 @ @ public final class Native implements Version { <nl> loader = Native . class . getClassLoader ( ) ; <nl> } <nl> } <nl> + 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 System . out . println ( " Looking in classpath from " + loader + " for " + name ) ; <nl> + 	 } <nl> String libname = name . startsWith ( " / " ) ? name : NativeLibrary . mapSharedLibraryName ( name ) ; <nl> String resourcePath = name . startsWith ( " / " ) ? name : Platform . RESOURCE _ PREFIX + " / " + libname ; <nl> if ( resourcePath . startsWith ( " / " ) ) { <nl> @ @ - 804 , 11 + 827 , 18 @ @ public final class Native implements Version { <nl> catch ( URISyntaxException e ) { <nl> lib = new File ( url . getPath ( ) ) ; <nl> } <nl> + 	 if ( DEBUG _ LOAD ) { <nl> + 	 	 System . out . println ( " Looking in " + lib . getAbsolutePath ( ) ) ; <nl> + 	 } <nl> if ( ! lib . exists ( ) ) { <nl> throw new IOException ( " File URL " + url + " could not be properly decoded " ) ; <nl> } <nl> } <nl> else if ( ! Boolean . getBoolean ( " jna . nounpack " ) ) { <nl> + 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 	 System . out . println ( " Looking in " + resourcePath ) ; <nl> + 	 } <nl> + 	 <nl> InputStream is = loader . getResourceAsStream ( resourcePath ) ; <nl> if ( is = = null ) { <nl> throw new IOException ( " Can ' t obtain InputStream for " + resourcePath ) ; <nl> diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index 655c141 . . 009ae75 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 123 , 6 + 123 , 10 @ @ public class NativeLibrary { <nl> } <nl> <nl> private static NativeLibrary loadLibrary ( String libraryName , Map options ) { <nl> + 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 System . out . println ( " Looking for library ' " + libraryName + " ' " ) ; <nl> + 	 } <nl> + <nl> boolean isAbsolutePath = new File ( libraryName ) . isAbsolute ( ) ; <nl> List searchPath = new LinkedList ( ) ; <nl> int openFlags = openFlags ( options ) ; <nl> @ @ - 131 , 6 + 135 , 9 @ @ public class NativeLibrary { <nl> / / attempt any library name variations <nl> String webstartPath = Native . getWebStartLibraryPath ( libraryName ) ; <nl> if ( webstartPath ! = null ) { <nl> + 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 	 System . out . println ( " Adding web start path " + webstartPath ) ; <nl> + 	 } <nl> searchPath . add ( webstartPath ) ; <nl> } <nl> <nl> @ @ - 144 , 6 + 151 , 9 @ @ public class NativeLibrary { <nl> } <nl> } <nl> <nl> + 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 System . out . println ( " Adding paths from jna . library . path : " + System . getProperty ( " jna . library . path " ) ) ; <nl> + 	 } <nl> searchPath . addAll ( initPaths ( " jna . library . path " ) ) ; <nl> String libraryPath = findLibraryPath ( libraryName , searchPath ) ; <nl> long handle = 0 ; <nl> @ @ - 153 , 15 + 163 , 24 @ @ public class NativeLibrary { <nl> / / name if it cannot find the library . <nl> / / <nl> try { <nl> + 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 	 System . out . println ( " Trying " + libraryPath ) ; <nl> + 	 } <nl> handle = Native . open ( libraryPath , openFlags ) ; <nl> } <nl> catch ( UnsatisfiedLinkError e ) { <nl> / / Add the system paths back for all fallback searching <nl> + 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 	 System . out . println ( " Adding system paths : " + librarySearchPath ) ; <nl> + 	 } <nl> searchPath . addAll ( librarySearchPath ) ; <nl> } <nl> try { <nl> if ( handle = = 0 ) { <nl> libraryPath = findLibraryPath ( libraryName , searchPath ) ; <nl> + 	 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 	 System . out . println ( " Trying " + libraryPath ) ; <nl> + 	 	 } <nl> handle = Native . open ( libraryPath , openFlags ) ; <nl> if ( handle = = 0 ) { <nl> throw new UnsatisfiedLinkError ( " Failed to load library ' " + libraryName + " ' " ) ; <nl> @ @ - 174 , 6 + 193 , 9 @ @ public class NativeLibrary { <nl> / / path , not found in any properties <nl> if ( Platform . isAndroid ( ) ) { <nl> try { <nl> + 	 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 	 	 System . out . println ( " Preload ( via System . loadLibrary ) " + libraryName ) ; <nl> + 	 	 } <nl> System . loadLibrary ( libraryName ) ; <nl> handle = Native . open ( libraryPath , openFlags ) ; <nl> } <nl> @ @ - 183 , 9 + 205 , 15 @ @ public class NativeLibrary { <nl> / / <nl> / / Failed to load the library normally - try to match libfoo . so . * <nl> / / <nl> + 	 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 	 System . out . println ( " Looking for version variants " ) ; <nl> + 	 	 } <nl> libraryPath = matchLibrary ( libraryName , searchPath ) ; <nl> if ( libraryPath ! = null ) { <nl> - try { <nl> + 	 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 	 	 System . out . println ( " Trying " + libraryPath ) ; <nl> + 	 	 } <nl> + 	 	 try { <nl> handle = Native . open ( libraryPath , openFlags ) ; <nl> } <nl> catch ( UnsatisfiedLinkError e2 ) { e = e2 ; } <nl> @ @ - 194 , 9 + 222 , 15 @ @ public class NativeLibrary { <nl> / / Search framework libraries on OS X <nl> else if ( Platform . isMac ( ) <nl> & & ! libraryName . endsWith ( " . dylib " ) ) { <nl> + 	 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 	 System . out . println ( " Looking for matching frameworks " ) ; <nl> + 	 	 } <nl> libraryPath = matchFramework ( libraryName ) ; <nl> if ( libraryPath ! = null ) { <nl> try { <nl> + 	 	 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 	 	 System . out . println ( " Trying " + libraryPath ) ; <nl> + 	 	 	 } <nl> handle = Native . open ( libraryPath , openFlags ) ; <nl> } <nl> catch ( UnsatisfiedLinkError e2 ) { e = e2 ; } <nl> @ @ - 204 , 9 + 238 , 17 @ @ public class NativeLibrary { <nl> } <nl> / / Try the same library with a " lib " prefix <nl> else if ( Platform . isWindows ( ) & & ! isAbsolutePath ) { <nl> + 	 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 	 System . out . println ( " Looking for lib - prefix " ) ; <nl> + 	 	 } <nl> libraryPath = findLibraryPath ( " lib " + libraryName , searchPath ) ; <nl> - try { handle = Native . open ( libraryPath , openFlags ) ; } <nl> - catch ( UnsatisfiedLinkError e2 ) { e = e2 ; } <nl> + 	 	 if ( libraryPath ! = null ) { <nl> + 	 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 	 	 System . out . println ( " Trying " + libraryPath ) ; <nl> + 	 	 } <nl> + 	 	 try { handle = Native . open ( libraryPath , openFlags ) ; } <nl> + 	 	 catch ( UnsatisfiedLinkError e2 ) { e = e2 ; } <nl> + 	 	 } <nl> } <nl> / / As a last resort , try to extract the library from the class <nl> / / path , using the current context class loader . <nl> @ @ - 227 , 6 + 269 , 9 @ @ public class NativeLibrary { <nl> + e . getMessage ( ) ) ; <nl> } <nl> } <nl> + 	 if ( Native . DEBUG _ LOAD ) { <nl> + 	 System . out . println ( " Found library ' " + libraryName + " ' at " + libraryPath ) ; <nl> + 	 } <nl> return new NativeLibrary ( libraryName , libraryPath , handle , options ) ; <nl> } <nl> <nl> diff - - git a / test / com / sun / jna / LibraryLoadTest . java b / test / com / sun / jna / LibraryLoadTest . java <nl> index 16a654c . . 415eecb 100644 <nl> - - - a / test / com / sun / jna / LibraryLoadTest . java <nl> + + + b / test / com / sun / jna / LibraryLoadTest . java <nl> @ @ - 143 , 9 + 143 , 6 @ @ public class LibraryLoadTest extends TestCase implements Paths { <nl> File tmpdir = Native . getTempDir ( ) ; <nl> String libName = NativeLibrary . mapSharedLibraryName ( " testlib " ) ; <nl> File src = new File ( TESTPATH , libName ) ; <nl> - if ( Platform . isWindowsCE ( ) ) { <nl> - src = new File ( " / Storage Card " , libName ) ; <nl> - } <nl> assertTrue ( " Expected JNA native library at " + src + " is missing " , src . exists ( ) ) ; <nl> <nl> final String UNICODE = " \ u0444 \ u043b \ u0441 \ u0432 \ u0443 " ;
diff - - git a / native / Makefile b / native / Makefile <nl> index d77ed8f . . f5fc61a 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 48 , 7 + 48 , 7 @ @ OS = $ ( shell uname | sed - e ' s / CYGWIN . * / win32 / g ' \ <nl> - e ' s / Linux . * / linux / g ' ) <nl> <nl> JNA _ JNI _ VERSION = 4 . 0 . 0 # auto - generated by ant <nl> - CHECKSUM = 059b6e5f0534df9b7f28dd7a87485721 # auto - generated by ant <nl> + CHECKSUM = 1a6047467b59e8748f975e03016ce3d9 # auto - generated by ant <nl> <nl> JAVA _ INCLUDES = - I " $ ( JAVA _ HOME ) / include " \ <nl> - I " $ ( JAVA _ HOME ) / include / $ ( OS ) " <nl> diff - - git a / native / callback . c b / native / callback . c <nl> index 036ab5f . . 7c376fd 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 81 , 6 + 81 , 7 @ @ static void * const dll _ fptrs [ ] = { <nl> typedef struct _ tls { <nl> JavaVM * jvm ; <nl> jint last _ error ; <nl> + / / Contents set to JNI _ TRUE if thread has terminated and detached properly <nl> int * termination _ flag ; <nl> jboolean detach ; <nl> char name [ 256 ] ; <nl> @ @ - 503 , 6 + 504 , 8 @ @ static thread _ storage * get _ thread _ storage ( JNIEnv * env ) { <nl> } <nl> else { <nl> snprintf ( tls - > name , sizeof ( tls - > name ) , " < uninitialized thread name > " ) ; <nl> + tls - > last _ error = 0 ; <nl> + tls - > termination _ flag = NULL ; <nl> if ( ( * env ) - > GetJavaVM ( env , & tls - > jvm ) ! = JNI _ OK ) { <nl> free ( tls ) ; <nl> throwByName ( env , EIllegalState , " JNA : Could not get JavaVM " ) ; <nl> @ @ - 523 , 12 + 526 , 14 @ @ static void dispose _ thread _ data ( void * data ) { <nl> JavaVM * jvm = tls - > jvm ; <nl> JNIEnv * env ; <nl> int is _ attached = ( * jvm ) - > GetEnv ( jvm , ( void * ) & env , JNI _ VERSION _ 1 _ 4 ) = = JNI _ OK ; <nl> + jboolean detached = JNI _ TRUE ; <nl> if ( is _ attached ) { <nl> if ( ( * jvm ) - > DetachCurrentThread ( jvm ) ! = 0 ) { <nl> fprintf ( stderr , " JNA : could not detach native thread ( automatic ) \ n " ) ; <nl> + detached = JNI _ FALSE ; <nl> } <nl> } <nl> - if ( tls - > termination _ flag ) { <nl> + if ( tls - > termination _ flag & & detached ) { <nl> * ( tls - > termination _ flag ) = JNI _ TRUE ; <nl> } <nl> free ( data ) ; <nl> @ @ - 572 , 10 + 577 , 11 @ @ static void make _ thread _ data _ key ( ) { <nl> <nl> / * * Store the requested detach state for the current thread . * / <nl> void <nl> - JNA _ detach ( JNIEnv * env , jboolean d ) { <nl> + JNA _ detach ( JNIEnv * env , jboolean d , void * termination _ flag ) { <nl> thread _ storage * tls = get _ thread _ storage ( env ) ; <nl> if ( tls ) { <nl> tls - > detach = d ; <nl> + tls - > termination _ flag = ( int * ) termination _ flag ; <nl> } <nl> } <nl> <nl> @ @ - 611 , 7 + 617 , 6 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> int attach _ status = 0 ; <nl> JavaVMAttachArgs args ; <nl> int daemon = JNI _ FALSE ; <nl> - int * termination _ flag = NULL ; <nl> <nl> args . version = JNI _ VERSION _ 1 _ 2 ; <nl> args . name = NULL ; <nl> @ @ - 625 , 7 + 630 , 6 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> daemon = options . daemon ? JNI _ TRUE : JNI _ FALSE ; <nl> detach = options . detach ? JNI _ TRUE : JNI _ FALSE ; <nl> args . name = options . name ; <nl> - termination _ flag = options . termination _ flag ; <nl> } <nl> if ( daemon ) { <nl> attach _ status = ( * jvm ) - > AttachCurrentThreadAsDaemon ( jvm , ( void * ) & env , & args ) ; <nl> @ @ - 635 , 8 + 639 , 8 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> } <nl> tls = get _ thread _ storage ( env ) ; <nl> if ( tls ) { <nl> - strncpy ( tls - > name , args . name ? args . name : " < unconfigured thread > " , sizeof ( tls - > name ) ) ; <nl> - tls - > termination _ flag = termination _ flag ; <nl> + strncpy ( tls - > name , args . name ? args . name : " < unconfigured native thread > " , sizeof ( tls - > name ) ) ; <nl> + tls - > detach = detach ; <nl> } <nl> / / Dispose of allocated memory <nl> free ( args . name ) ; <nl> @ @ - 660 , 9 + 664 , 11 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> fprintf ( stderr , " JNA : Out of memory : Can ' t allocate local frame \ n " ) ; <nl> } <nl> else { <nl> - tls - > detach = detach ; <nl> callback _ invoke ( env , cb , cif , resp , cbargs ) ; <nl> - detach = tls - > detach ; <nl> + / / Make note of whether the callback wants to avoid detach <nl> + if ( ! tls - > detach ) { <nl> + detach = JNI _ FALSE ; <nl> + } <nl> ( * env ) - > PopLocalFrame ( env , NULL ) ; <nl> } <nl> <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index aa064f5 . . d6c48ba 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 3298 , 8 + 3298 , 8 @ @ Java _ com _ sun _ jna _ Native _ initialize _ 1ffi _ 1type ( JNIEnv * env , jclass UNUSED ( cls ) , j <nl> } <nl> <nl> JNIEXPORT void JNICALL <nl> - Java _ com _ sun _ jna _ Native _ detach ( JNIEnv * env , jclass UNUSED ( cls ) , jboolean d ) { <nl> - JNA _ detach ( env , d ) ; <nl> + Java _ com _ sun _ jna _ Native _ setDetachState ( JNIEnv * env , jclass UNUSED ( cls ) , jboolean d , jlong flag ) { <nl> + JNA _ detach ( env , d , L2A ( flag ) ) ; <nl> } <nl> <nl> # ifdef _ _ cplusplus <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index 5f2e1c2 . . 30d00c8 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 182 , 7 + 182 , 7 @ @ extern const char * JNA _ callback _ init ( JNIEnv * ) ; <nl> extern void JNA _ set _ last _ error ( JNIEnv * , int ) ; <nl> extern int JNA _ get _ last _ error ( JNIEnv * ) ; <nl> extern void JNA _ callback _ dispose ( JNIEnv * ) ; <nl> - extern void JNA _ detach ( JNIEnv * , jboolean ) ; <nl> + extern void JNA _ detach ( JNIEnv * , jboolean , void * ) ; <nl> extern callback * create _ callback ( JNIEnv * , jobject , jobject , <nl> jobjectArray , jclass , <nl> callconv _ t , jint , jstring ) ; <nl> @ @ - 214 , 7 + 214 , 6 @ @ typedef struct _ AttachOptions { <nl> int daemon ; <nl> int detach ; <nl> char * name ; <nl> - int * termination _ flag ; <nl> } AttachOptions ; <nl> extern jobject initializeThread ( callback * , AttachOptions * ) ; <nl> <nl> diff - - git a / src / com / sun / jna / CallbackReference . java b / src / com / sun / jna / CallbackReference . java <nl> index b8554da . . 35dfe61 100644 <nl> - - - a / src / com / sun / jna / CallbackReference . java <nl> + + + b / src / com / sun / jna / CallbackReference . java <nl> @ @ - 38 , 7 + 38 , 6 @ @ class CallbackReference extends WeakReference { <nl> static final Map callbackMap = new WeakHashMap ( ) ; <nl> static final Map directCallbackMap = new WeakHashMap ( ) ; <nl> static final Map allocations = new WeakHashMap ( ) ; <nl> - static final Map nativeThreads = Collections . synchronizedMap ( new WeakHashMap ( ) ) ; <nl> <nl> private static final Method PROXY _ CALLBACK _ METHOD ; <nl> <nl> @ @ - 67 , 32 + 66 , 20 @ @ class CallbackReference extends WeakReference { <nl> public boolean daemon ; <nl> public boolean detach ; <nl> public String name ; <nl> - public Pointer termination _ flag ; <nl> / / Thread name must be UTF8 - encoded <nl> { setStringEncoding ( " utf8 " ) ; } <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " daemon " , " detach " , " name " , " termination _ flag " } ) ; <nl> + return Arrays . asList ( new String [ ] { " daemon " , " detach " , " name " , } ) ; <nl> } <nl> } <nl> <nl> - private static ThreadLocal terminationFlag = new ThreadLocal ( ) { <nl> - protected Object initialValue ( ) { <nl> - return new Memory ( 4 ) ; <nl> - } <nl> - } ; <nl> - <nl> - / * * Returns the termination flag associated with the given thread . * / <nl> - static Pointer getTerminationFlag ( Thread t ) { <nl> - return ( Pointer ) nativeThreads . get ( t ) ; <nl> - } <nl> - <nl> / * * Called from native code to initialize a callback thread . * / <nl> private static ThreadGroup initializeThread ( Callback cb , AttachOptions args ) { <nl> CallbackThreadInitializer init = null ; <nl> if ( cb instanceof DefaultCallbackProxy ) { <nl> cb = ( ( DefaultCallbackProxy ) cb ) . getCallback ( ) ; <nl> } <nl> - synchronized ( initializers ) { <nl> + synchronized ( callbackMap ) { <nl> init = ( CallbackThreadInitializer ) initializers . get ( cb ) ; <nl> } <nl> ThreadGroup group = null ; <nl> @ @ - 101 , 11 + 88 , 8 @ @ class CallbackReference extends WeakReference { <nl> args . name = init . getName ( cb ) ; <nl> args . daemon = init . isDaemon ( cb ) ; <nl> args . detach = init . detach ( cb ) ; <nl> + args . write ( ) ; <nl> } <nl> - args . termination _ flag = ( Pointer ) terminationFlag . get ( ) ; <nl> - args . termination _ flag . setInt ( 0 , 0 ) ; <nl> - args . write ( ) ; <nl> - nativeThreads . put ( Thread . currentThread ( ) , args . termination _ flag ) ; <nl> return group ; <nl> } <nl> <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 3468d00 . . 0f5587b 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 1838 , 9 + 1838 , 28 @ @ public final class Native implements Version { <nl> < em > Warning < / em > : avoid calling { @ link # detach detach ( true ) } on threads <nl> spawned by the JVM ; the resulting behavior is not defined . <nl> * / <nl> - / / TODO : keep references to Java non - detached threads , and clear them when <nl> - / / native side sets a flag saying they ' re detached ( cleanup ) <nl> - public static native void detach ( boolean detach ) ; <nl> + public static void detach ( boolean detach ) { <nl> + Pointer p = ( Pointer ) nativeThreadTerminationFlag . get ( ) ; <nl> + nativeThreads . put ( Thread . currentThread ( ) , p ) ; <nl> + setDetachState ( detach , p . peer ) ; <nl> + } <nl> + <nl> + static Pointer getTerminationFlag ( Thread t ) { <nl> + return ( Pointer ) nativeThreads . get ( t ) ; <nl> + } <nl> + <nl> + private static Map nativeThreads = Collections . synchronizedMap ( new WeakHashMap ( ) ) ; <nl> + <nl> + private static ThreadLocal nativeThreadTerminationFlag = <nl> + new ThreadLocal ( ) { <nl> + protected Object initialValue ( ) { <nl> + Memory m = new Memory ( 4 ) ; <nl> + m . clear ( ) ; <nl> + return m ; <nl> + } <nl> + } ; <nl> + <nl> + private static native void setDetachState ( boolean detach , long terminationFlag ) ; <nl> <nl> private static class Buffers { <nl> static boolean isBuffer ( Class cls ) { <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index 5c75288 . . 4a6835b 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 1159 , 7 + 1159 , 8 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> 	 Thread . enumerate ( remaining ) ; <nl> if ( System . currentTimeMillis ( ) - start > 10000 ) { <nl> Thread t = ( Thread ) ref . get ( ) ; <nl> - Pointer terminationFlag = CallbackReference . getTerminationFlag ( t ) ; <nl> + Pointer terminationFlag = Native . getTerminationFlag ( t ) ; <nl> + assertNotNull ( " Native thread termination flag is missing " , terminationFlag ) ; <nl> if ( terminationFlag . getInt ( 0 ) = = 0 ) { <nl> fail ( " Timed out waiting for native attached thread to be GC ' d : " + t + " alive : " <nl> + t . isAlive ( ) + " daemon : " + t . isDaemon ( ) + " \ n " + Arrays . asList ( remaining ) ) ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 1442c97 . . a39f4d7 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 30 , 6 + 30 , 7 @ @ Bug Fixes <nl> * [ # 229 ] ( https : / / github . com / twall / jna / issues / 229 ) : Added ` CreateProcessW ` ( Unicode version ) - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Avoided solaris / x86 JVM bug w / library open flags - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Fixed NPE returning wide string from a direct - mapped function - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ # 237 ] ( https : / / github . com / twall / jna / issues / 237 ) : Fix LastErrorException / getLastError on AIX - [ @ skissane ] ( https : / / github . com / skissane ) . <nl> <nl> Release 3 . 5 . 2 <nl> = = = = = = = = = = = = = <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index d77ed8f . . d678282 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 272 , 7 + 272 , 7 @ @ endif <nl> ifeq ( $ ( OS ) , aix ) <nl> LIBSFX = . a <nl> PCFLAGS + = - fPIC <nl> - CDEFINES + = - DHAVE _ PROTECTION - DNO _ JAWT - Wall - D _ AIX - DPOWERPC _ AIX <nl> + CDEFINES + = - DHAVE _ PROTECTION - DNO _ JAWT - Wall - D _ AIX - DPOWERPC _ AIX - D _ THREAD _ SAFE _ ERRNO <nl> COPT + = - D _ AIX - DPOWERPC _ AIX - mxl - compat <nl> LDFLAGS + = - Wl , - lc128 , - lc , - lm , - lpthread <nl> FFI _ ENV + = AR _ FLAGS = " - X32 _ 64 cru "
diff - - git a / src / com / sun / jna / Library . java b / src / com / sun / jna / Library . java <nl> index 621e4f3 . . 5928e79 100644 <nl> - - - a / src / com / sun / jna / Library . java <nl> + + + b / src / com / sun / jna / Library . java <nl> @ @ - 118 , 20 + 118 , 6 @ @ public interface Library { <nl> } <nl> } <nl> <nl> - private static class FunctionNameMap implements FunctionMapper { <nl> - private final Map map ; <nl> - public FunctionNameMap ( Map map ) { <nl> - this . map = new HashMap ( map ) ; <nl> - } <nl> - public String getFunctionName ( NativeLibrary library , Method method ) { <nl> - String name = method . getName ( ) ; <nl> - if ( map . containsKey ( name ) ) { <nl> - return ( String ) map . get ( name ) ; <nl> - } <nl> - return name ; <nl> - } <nl> - } <nl> - <nl> private final NativeLibrary nativeLibrary ; <nl> private final Class interfaceClass ; <nl> / / Library invocation options <nl> @ @ - 154 , 9 + 140 , 8 @ @ public interface Library { <nl> options . put ( OPTION _ CALLING _ CONVENTION , <nl> new Integer ( callingConvention ) ) ; <nl> } <nl> - if ( ! options . containsKey ( OPTION _ FUNCTION _ MAPPER ) ) { <nl> - / / Passed - in map is itself the name map <nl> - options . put ( OPTION _ FUNCTION _ MAPPER , new FunctionNameMap ( options ) ) ; <nl> + if ( options . get ( OPTION _ CLASSLOADER ) = = null ) { <nl> + options . put ( OPTION _ CLASSLOADER , interfaceClass . getClassLoader ( ) ) ; <nl> } <nl> this . options = options ; <nl> this . nativeLibrary = NativeLibrary . getInstance ( libname , options ) ; <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 8b73b16 . . 7c83c73 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 1481 , 6 + 1481 , 7 @ @ public final class Native implements Version { <nl> looking them up later . <nl> * / <nl> private static void cacheOptions ( Class cls , Map libOptions , Object proxy ) { <nl> + libOptions = new HashMap ( libOptions ) ; <nl> synchronized ( libraries ) { <nl> options . put ( cls , libOptions ) ; <nl> if ( proxy ! = null ) { <nl> diff - - git a / test / com / sun / jna / NativeTest . java b / test / com / sun / jna / NativeTest . java <nl> index 521774d . . a946ca8 100644 <nl> - - - a / test / com / sun / jna / NativeTest . java <nl> + + + b / test / com / sun / jna / NativeTest . java <nl> @ @ - 111 , 7 + 111 , 7 @ @ public class NativeTest extends TestCase { <nl> } <nl> public void testSynchronizedAccess ( ) throws Exception { <nl> final boolean [ ] lockHeld = { false } ; <nl> - final NativeLibrary nlib = NativeLibrary . getInstance ( " testlib " ) ; <nl> + final NativeLibrary nlib = NativeLibrary . getInstance ( " testlib " , TestLib . class . getClassLoader ( ) ) ; <nl> final TestLib lib = ( TestLib ) Native . loadLibrary ( " testlib " , TestLib . class ) ; <nl> final TestLib synchlib = ( TestLib ) Native . synchronizedLibrary ( lib ) ; <nl> final TestLib . VoidCallback cb = new TestLib . VoidCallback ( ) { <nl> @ @ - 168 , 6 + 168 , 7 @ @ public class NativeTest extends TestCase { <nl> TypeMapper TEST _ MAPPER = new DefaultTypeMapper ( ) ; <nl> String TEST _ ENCODING = " test - encoding " ; <nl> Map TEST _ OPTS = new HashMap ( ) { { <nl> + put ( OPTION _ CLASSLOADER , TestInterfaceWithInstance . class . getClassLoader ( ) ) ; <nl> put ( OPTION _ TYPE _ MAPPER , TEST _ MAPPER ) ; <nl> put ( OPTION _ STRUCTURE _ ALIGNMENT , new Integer ( TEST _ ALIGNMENT ) ) ; <nl> put ( OPTION _ STRING _ ENCODING , TEST _ ENCODING ) ;
diff - - git a / native / callback . c b / native / callback . c <nl> index 1ee41e3 . . 036ab5f 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 81 , 6 + 81 , 7 @ @ static void * const dll _ fptrs [ ] = { <nl> typedef struct _ tls { <nl> JavaVM * jvm ; <nl> jint last _ error ; <nl> + int * termination _ flag ; <nl> jboolean detach ; <nl> char name [ 256 ] ; <nl> } thread _ storage ; <nl> @ @ - 512 , 9 + 513 , 6 @ @ static thread _ storage * get _ thread _ storage ( JNIEnv * env ) { <nl> throwByName ( env , EOutOfMemory , " JNA : Internal TLS error " ) ; <nl> tls = NULL ; <nl> } <nl> - else { <nl> - fprintf ( stderr , " Created thread storage for % p ( % s ) \ n " , pthread _ self ( ) , tls - > name ) ; <nl> - } <nl> } <nl> } <nl> return tls ; <nl> @ @ - 529 , 13 + 527 , 9 @ @ static void dispose _ thread _ data ( void * data ) { <nl> if ( ( * jvm ) - > DetachCurrentThread ( jvm ) ! = 0 ) { <nl> fprintf ( stderr , " JNA : could not detach native thread ( automatic ) \ n " ) ; <nl> } <nl> - else { <nl> - fprintf ( stderr , " Thread detached : % p ( % s ) \ n " , pthread _ self ( ) , tls - > name ) ; <nl> - } <nl> - fprintf ( stderr , " Dispose thread data % p ( % s ) \ n " , pthread _ self ( ) , tls - > name ) ; <nl> } <nl> - else { <nl> - fprintf ( stderr , " Thread already detached % p ( % s ) \ n " , pthread _ self ( ) , tls - > name ) ; <nl> + if ( tls - > termination _ flag ) { <nl> + * ( tls - > termination _ flag ) = JNI _ TRUE ; <nl> } <nl> free ( data ) ; <nl> } <nl> @ @ - 617 , 6 + 611 , 7 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> int attach _ status = 0 ; <nl> JavaVMAttachArgs args ; <nl> int daemon = JNI _ FALSE ; <nl> + int * termination _ flag = NULL ; <nl> <nl> args . version = JNI _ VERSION _ 1 _ 2 ; <nl> args . name = NULL ; <nl> @ @ - 630 , 6 + 625 , 7 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> daemon = options . daemon ? JNI _ TRUE : JNI _ FALSE ; <nl> detach = options . detach ? JNI _ TRUE : JNI _ FALSE ; <nl> args . name = options . name ; <nl> + termination _ flag = options . termination _ flag ; <nl> } <nl> if ( daemon ) { <nl> attach _ status = ( * jvm ) - > AttachCurrentThreadAsDaemon ( jvm , ( void * ) & env , & args ) ; <nl> @ @ - 639 , 8 + 635 , 8 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> } <nl> tls = get _ thread _ storage ( env ) ; <nl> if ( tls ) { <nl> - snprintf ( tls - > name , sizeof ( tls - > name ) , <nl> - args . name ? args . name : " < unconfigured thread > " ) ; <nl> + strncpy ( tls - > name , args . name ? args . name : " < unconfigured thread > " , sizeof ( tls - > name ) ) ; <nl> + tls - > termination _ flag = termination _ flag ; <nl> } <nl> / / Dispose of allocated memory <nl> free ( args . name ) ; <nl> @ @ - 658 , 8 + 654 , 6 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> return ; <nl> } <nl> <nl> - fprintf ( stderr , " % p ( % s ) was attached : % d \ n " , pthread _ self ( ) , tls - > name , was _ attached ) ; <nl> - <nl> / / Give the callback glue its own local frame to ensure all local references <nl> / / are properly disposed <nl> if ( ( * env ) - > PushLocalFrame ( env , 16 ) < 0 ) { <nl> @ @ - 677 , 9 + 671 , 6 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> fprintf ( stderr , " JNA : could not detach thread \ n " ) ; <nl> } <nl> } <nl> - else { <nl> - fprintf ( stderr , " Thread will detach automatically % p ( % s ) \ n " , pthread _ self ( ) , tls - > name ) ; <nl> - } <nl> } <nl> <nl> const char * <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 7b795b0 . . aa064f5 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 577 , 7 + 577 , 7 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray arr , <nl> throw _ msg = msg ; <nl> } <nl> } <nl> - JNA _ set _ last _ error ( GET _ LAST _ ERROR ( ) ) ; <nl> + JNA _ set _ last _ error ( env , GET _ LAST _ ERROR ( ) ) ; <nl> <nl> PROTECTED _ END ( do { throw _ type = EError ; throw _ msg = " Invalid memory access " ; } while ( 0 ) ) ; <nl> } <nl> @ @ - 1756 , 7 + 1756 , 7 @ @ method _ handler ( ffi _ cif * cif , void * volatile resp , void * * argp , void * cdata ) { <nl> throw _ msg = msg ; <nl> } <nl> } <nl> - JNA _ set _ last _ error ( GET _ LAST _ ERROR ( ) ) ; <nl> + JNA _ set _ last _ error ( env , GET _ LAST _ ERROR ( ) ) ; <nl> <nl> PROTECTED _ END ( do { throw _ type = EError ; throw _ msg = " Invalid memory access " ; } while ( 0 ) ) ; <nl> } <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index bfaa5c6 . . 5f2e1c2 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 214 , 6 + 214 , 7 @ @ typedef struct _ AttachOptions { <nl> int daemon ; <nl> int detach ; <nl> char * name ; <nl> + int * termination _ flag ; <nl> } AttachOptions ; <nl> extern jobject initializeThread ( callback * , AttachOptions * ) ; <nl> <nl> diff - - git a / native / testlib . c b / native / testlib . c <nl> index 5b5070d . . 7ac66d3 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 646 , 13 + 646 , 11 @ @ static THREAD _ FUNC ( thread _ function , arg ) { <nl> thread _ data td = * ( thread _ data * ) arg ; <nl> void ( * func ) ( void ) = td . func ; <nl> int i ; <nl> - fprintf ( stderr , " thread start 0x % p ( % s ) \ n " , THREAD _ CURRENT ( ) , td . name ) ; <nl> <nl> for ( i = 0 ; i < td . repeat _ count ; i + + ) { <nl> func ( ) ; <nl> SLEEP ( td . sleep _ time ) ; <nl> } <nl> - fprintf ( stderr , " thread exiting 0x % p ( % s ) \ n " , THREAD _ CURRENT ( ) , td . name ) ; <nl> free ( ( void * ) arg ) ; <nl> THREAD _ EXIT ( ) ; <nl> THREAD _ RETURN ; <nl> diff - - git a / src / com / sun / jna / CallbackReference . java b / src / com / sun / jna / CallbackReference . java <nl> index ff3b11b . . b8554da 100644 <nl> - - - a / src / com / sun / jna / CallbackReference . java <nl> + + + b / src / com / sun / jna / CallbackReference . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ import java . lang . reflect . InvocationTargetException ; <nl> import java . lang . reflect . Method ; <nl> import java . lang . reflect . Proxy ; <nl> import java . util . Arrays ; <nl> + import java . util . Collections ; <nl> import java . util . HashMap ; <nl> import java . util . HashSet ; <nl> import java . util . Iterator ; <nl> @ @ - 37 , 6 + 38 , 8 @ @ class CallbackReference extends WeakReference { <nl> static final Map callbackMap = new WeakHashMap ( ) ; <nl> static final Map directCallbackMap = new WeakHashMap ( ) ; <nl> static final Map allocations = new WeakHashMap ( ) ; <nl> + static final Map nativeThreads = Collections . synchronizedMap ( new WeakHashMap ( ) ) ; <nl> + <nl> private static final Method PROXY _ CALLBACK _ METHOD ; <nl> <nl> static { <nl> @ @ - 64 , 12 + 67 , 25 @ @ class CallbackReference extends WeakReference { <nl> public boolean daemon ; <nl> public boolean detach ; <nl> public String name ; <nl> + public Pointer termination _ flag ; <nl> / / Thread name must be UTF8 - encoded <nl> { setStringEncoding ( " utf8 " ) ; } <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " daemon " , " detach " , " name " } ) ; <nl> + return Arrays . asList ( new String [ ] { " daemon " , " detach " , " name " , " termination _ flag " } ) ; <nl> + } <nl> + } <nl> + <nl> + private static ThreadLocal terminationFlag = new ThreadLocal ( ) { <nl> + protected Object initialValue ( ) { <nl> + return new Memory ( 4 ) ; <nl> } <nl> + } ; <nl> + <nl> + / * * Returns the termination flag associated with the given thread . * / <nl> + static Pointer getTerminationFlag ( Thread t ) { <nl> + return ( Pointer ) nativeThreads . get ( t ) ; <nl> } <nl> + <nl> / * * Called from native code to initialize a callback thread . * / <nl> private static ThreadGroup initializeThread ( Callback cb , AttachOptions args ) { <nl> CallbackThreadInitializer init = null ; <nl> @ @ - 85 , 8 + 101 , 11 @ @ class CallbackReference extends WeakReference { <nl> args . name = init . getName ( cb ) ; <nl> args . daemon = init . isDaemon ( cb ) ; <nl> args . detach = init . detach ( cb ) ; <nl> - args . write ( ) ; <nl> } <nl> + args . termination _ flag = ( Pointer ) terminationFlag . get ( ) ; <nl> + args . termination _ flag . setInt ( 0 , 0 ) ; <nl> + args . write ( ) ; <nl> + nativeThreads . put ( Thread . currentThread ( ) , args . termination _ flag ) ; <nl> return group ; <nl> } <nl> <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index f5b09c7 . . 7ac8d7a 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 153 , 7 + 153 , 7 @ @ public final class Native implements Version { <nl> } <nl> 	 MAX _ PADDING = Platform . isSPARC ( ) | | Platform . isWindows ( ) | | Platform . isARM ( ) <nl> | | Platform . isAIX ( ) | | Platform . isAndroid ( ) <nl> - | | ( Platform . isPPC ( ) & & Platform . isLinux ( ) ) <nl> + | | Platform . isPPC ( ) <nl> ? 8 : LONG _ SIZE ; <nl> } <nl> <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index ccca3aa . . d203293 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 1565 , 15 + 1565 , 21 @ @ public abstract class Structure { <nl> } <nl> <nl> / * * Called from native code only ; same as { @ link <nl> - * # newInstance ( Class , Pointer ) } , except that it additionally performs <nl> + * # newInstance ( Class , Pointer ) } , except that it additionally calls <nl> * { @ link # conditionalAutoRead ( ) } . <nl> * / <nl> - private static Structure newInstance ( Class type , long init ) throws IllegalArgumentException { <nl> - Structure s = newInstance ( type , init = = 0 ? PLACEHOLDER _ MEMORY : new Pointer ( init ) ) ; <nl> - if ( init ! = 0 ) { <nl> - s . conditionalAutoRead ( ) ; <nl> + private static Structure newInstance ( Class type , long init ) { <nl> + try { <nl> + Structure s = newInstance ( type , init = = 0 ? PLACEHOLDER _ MEMORY : new Pointer ( init ) ) ; <nl> + if ( init ! = 0 ) { <nl> + s . conditionalAutoRead ( ) ; <nl> + } <nl> + return s ; <nl> + } <nl> + catch ( Throwable e ) { <nl> + System . err . println ( " JNA : Error creating structure : " + e ) ; <nl> + return null ; <nl> } <nl> - return s ; <nl> } <nl> <nl> / * * Create a new Structure instance of the given type , initialized with <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index 8948edf . . 5c75288 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 189 , 7 + 189 , 6 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> TestLibrary lib ; <nl> protected void setUp ( ) { <nl> lib = ( TestLibrary ) Native . loadLibrary ( " testlib " , TestLibrary . class ) ; <nl> - 	 System . out . println ( " Run " + getName ( ) ) ; <nl> } <nl> <nl> protected void tearDown ( ) { <nl> @ @ - 1152 , 14 + 1151 , 20 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> } <nl> long start = System . currentTimeMillis ( ) ; <nl> WeakReference ref = ( WeakReference ) threads . iterator ( ) . next ( ) ; <nl> + <nl> while ( ref . get ( ) ! = null ) { <nl> System . gc ( ) ; <nl> - Thread . sleep ( 1000 ) ; <nl> + Thread . sleep ( 100 ) ; <nl> 	 Thread [ ] remaining = new Thread [ Thread . activeCount ( ) ] ; <nl> 	 Thread . enumerate ( remaining ) ; <nl> if ( System . currentTimeMillis ( ) - start > 10000 ) { <nl> Thread t = ( Thread ) ref . get ( ) ; <nl> - fail ( " Timed out waiting for native attached thread to be GC ' d : " + t + " alive : " + t . isAlive ( ) + " daemon : " + t . isDaemon ( ) + " \ n " + Arrays . asList ( remaining ) ) ; <nl> + Pointer terminationFlag = CallbackReference . getTerminationFlag ( t ) ; <nl> + if ( terminationFlag . getInt ( 0 ) = = 0 ) { <nl> + fail ( " Timed out waiting for native attached thread to be GC ' d : " + t + " alive : " <nl> + + t . isAlive ( ) + " daemon : " + t . isDaemon ( ) + " \ n " + Arrays . asList ( remaining ) ) ; <nl> + } <nl> + System . err . println ( " Warning : JVM did not GC Thread mapping after native thread terminated " ) ; <nl> } <nl> } <nl> }
diff - - git a / test / com / sun / jna / DirectTest . java b / test / com / sun / jna / DirectTest . java <nl> index 36e578a . . d290a22 100644 <nl> - - - a / test / com / sun / jna / DirectTest . java <nl> + + + b / test / com / sun / jna / DirectTest . java <nl> @ @ - 16 , 10 + 16 , 15 @ @ import junit . framework . * ; <nl> import com . sun . jna . * ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> import java . lang . ref . * ; <nl> + import java . lang . reflect . Method ; <nl> import java . io . File ; <nl> import java . net . MalformedURLException ; <nl> import java . net . URL ; <nl> import java . net . URLClassLoader ; <nl> + import java . util . Arrays ; <nl> + import java . util . HashMap ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> <nl> / / @ SuppressWarnings ( " unused " ) <nl> public class DirectTest extends TestCase implements Paths { <nl> @ @ - 173 , 5 + 178 , 117 @ @ public class DirectTest extends TestCase implements Paths { <nl> assertEquals ( " Wrong native class found " , <nl> UnregisterLibrary . class , new UnregisterLibrary ( ) . findDirectMappedClass ( ) ) ; <nl> } <nl> + <nl> + public static class DirectMapping { <nl> + public static class DirectStructure extends Structure { <nl> + public int field ; <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( new String [ ] { " field " } ) ; <nl> + } <nl> + } <nl> + public static interface DirectCallback extends Callback { <nl> + void invoke ( ) ; <nl> + } <nl> + public DirectMapping ( Map options ) { <nl> + Native . register ( getClass ( ) , NativeLibrary . getInstance ( " testlib " , options ) ) ; <nl> + } <nl> + } <nl> + <nl> + public void testGetOptionsForDirectMappingWithMemberInitializer ( ) { <nl> + Class [ ] classes = { <nl> + DirectMapping . class , <nl> + DirectMapping . DirectStructure . class , <nl> + DirectMapping . DirectCallback . class , <nl> + } ; <nl> + final TypeMapper mapper = new DefaultTypeMapper ( ) ; <nl> + final int alignment = Structure . ALIGN _ NONE ; <nl> + final String encoding = System . getProperty ( " file . encoding " ) ; <nl> + Map options = new HashMap ( ) ; <nl> + options . put ( Library . OPTION _ TYPE _ MAPPER , mapper ) ; <nl> + options . put ( Library . OPTION _ STRUCTURE _ ALIGNMENT , alignment ) ; <nl> + options . put ( Library . OPTION _ STRING _ ENCODING , encoding ) ; <nl> + DirectMapping lib = new DirectMapping ( options ) ; <nl> + for ( int i = 0 ; i < classes . length ; i + + ) { <nl> + assertEquals ( " Wrong type mapper for direct mapping " + classes [ i ] , <nl> + mapper , Native . getTypeMapper ( classes [ i ] ) ) ; <nl> + assertEquals ( " Wrong alignment for direct mapping " + classes [ i ] , <nl> + alignment , Native . getStructureAlignment ( classes [ i ] ) ) ; <nl> + assertEquals ( " Wrong encoding for direct mapping " + classes [ i ] , <nl> + encoding , Native . getStringEncoding ( classes [ i ] ) ) ; <nl> + Object last = Native . getLibraryOptions ( classes [ i ] ) ; ; <nl> + assertSame ( " Options not cached " , last , Native . getLibraryOptions ( classes [ i ] ) ) ; <nl> + } <nl> + } <nl> + <nl> + public static class DirectMappingStatic { <nl> + final static TypeMapper TEST _ MAPPER = new DefaultTypeMapper ( ) ; <nl> + final static int TEST _ ALIGNMENT = Structure . ALIGN _ DEFAULT ; <nl> + final static String TEST _ ENCODING = System . getProperty ( " file . encoding " ) ; <nl> + final static Map TEST _ OPTIONS = new HashMap ( ) { <nl> + { <nl> + put ( Library . OPTION _ TYPE _ MAPPER , TEST _ MAPPER ) ; <nl> + put ( Library . OPTION _ STRUCTURE _ ALIGNMENT , TEST _ ALIGNMENT ) ; <nl> + put ( Library . OPTION _ STRING _ ENCODING , TEST _ ENCODING ) ; <nl> + } <nl> + } ; <nl> + static { <nl> + Native . register ( DirectMappingStatic . class , NativeLibrary . getInstance ( " testlib " , TEST _ OPTIONS ) ) ; <nl> + } <nl> + public static class DirectStructure extends Structure { <nl> + public int field ; <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( new String [ ] { " field " } ) ; <nl> + } <nl> + } <nl> + public static interface DirectCallback extends Callback { <nl> + void invoke ( ) ; <nl> + } <nl> + } <nl> + <nl> + public void testGetOptionsForDirectMappingWithStaticInitializer ( ) { <nl> + Class [ ] classes = { <nl> + DirectMappingStatic . class , <nl> + DirectMappingStatic . DirectStructure . class , <nl> + DirectMappingStatic . DirectCallback . class , <nl> + } ; <nl> + for ( int i = 0 ; i < classes . length ; i + + ) { <nl> + assertEquals ( " Wrong type mapper for direct mapping " + classes [ i ] , <nl> + DirectMappingStatic . TEST _ MAPPER , Native . getTypeMapper ( classes [ i ] ) ) ; <nl> + assertEquals ( " Wrong alignment for direct mapping " + classes [ i ] , <nl> + DirectMappingStatic . TEST _ ALIGNMENT , Native . getStructureAlignment ( classes [ i ] ) ) ; <nl> + assertEquals ( " Wrong encoding for direct mapping " + classes [ i ] , <nl> + DirectMappingStatic . TEST _ ENCODING , Native . getStringEncoding ( classes [ i ] ) ) ; <nl> + Object last = Native . getLibraryOptions ( classes [ i ] ) ; ; <nl> + assertSame ( " Options not cached " , last , Native . getLibraryOptions ( classes [ i ] ) ) ; <nl> + } <nl> + } <nl> + <nl> + static class RemappedCLibrary { <nl> + public static native int _ prefixed _ strlen ( String s ) ; <nl> + } <nl> + <nl> + public void testDirectMappingFunctionMapper ( ) { <nl> + FunctionMapper MAPPER = new FunctionMapper ( ) { <nl> + public String getFunctionName ( NativeLibrary lib , Method method ) { <nl> + String name = method . getName ( ) ; <nl> + if ( name . startsWith ( " _ prefixed _ " ) ) { <nl> + return name . substring ( 10 ) ; <nl> + } <nl> + return name ; <nl> + } <nl> + } ; <nl> + Map options = new HashMap ( ) ; <nl> + options . put ( Library . OPTION _ FUNCTION _ MAPPER , MAPPER ) ; <nl> + try { <nl> + Native . register ( RemappedCLibrary . class , <nl> + NativeLibrary . getInstance ( Platform . C _ LIBRARY _ NAME , options ) ) ; <nl> + final String VALUE = getName ( ) ; <nl> + int len = RemappedCLibrary . _ prefixed _ strlen ( VALUE ) ; <nl> + assertEquals ( VALUE . length ( ) , len ) ; <nl> + } <nl> + catch ( Exception e ) { <nl> + fail ( " Native method was not properly mapped : " + e ) ; <nl> + } <nl> + } <nl> } <nl> <nl> diff - - git a / test / com / sun / jna / NativeTest . java b / test / com / sun / jna / NativeTest . java <nl> index ce717e0 . . 521774d 100644 <nl> - - - a / test / com / sun / jna / NativeTest . java <nl> + + + b / test / com / sun / jna / NativeTest . java <nl> @ @ - 300 , 90 + 300 , 6 @ @ public class NativeTest extends TestCase { <nl> assertEquals ( " Wrong char array contents : " + new String ( buf ) , VALUE , new String ( buf , 0 , buf . length - 1 ) ) ; <nl> } <nl> <nl> - public static class DirectMapping { <nl> - public static class DirectStructure extends Structure { <nl> - public int field ; <nl> - protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " field " } ) ; <nl> - } <nl> - } <nl> - public static interface DirectCallback extends Callback { <nl> - void invoke ( ) ; <nl> - } <nl> - public DirectMapping ( Map options ) { <nl> - Native . register ( getClass ( ) , NativeLibrary . getInstance ( " testlib " , options ) ) ; <nl> - } <nl> - } <nl> - <nl> - public void testGetOptionsForDirectMapping ( ) { <nl> - Class [ ] classes = { <nl> - DirectMapping . class , <nl> - DirectMapping . DirectStructure . class , <nl> - DirectMapping . DirectCallback . class , <nl> - } ; <nl> - final TypeMapper mapper = new DefaultTypeMapper ( ) ; <nl> - final int alignment = Structure . ALIGN _ NONE ; <nl> - final String encoding = System . getProperty ( " file . encoding " ) ; <nl> - Map options = new HashMap ( ) ; <nl> - options . put ( Library . OPTION _ TYPE _ MAPPER , mapper ) ; <nl> - options . put ( Library . OPTION _ STRUCTURE _ ALIGNMENT , alignment ) ; <nl> - options . put ( Library . OPTION _ STRING _ ENCODING , encoding ) ; <nl> - DirectMapping lib = new DirectMapping ( options ) ; <nl> - for ( int i = 0 ; i < classes . length ; i + + ) { <nl> - assertEquals ( " Wrong type mapper for direct mapping " + classes [ i ] , <nl> - mapper , Native . getTypeMapper ( classes [ i ] ) ) ; <nl> - assertEquals ( " Wrong alignment for direct mapping " + classes [ i ] , <nl> - alignment , Native . getStructureAlignment ( classes [ i ] ) ) ; <nl> - assertEquals ( " Wrong encoding for direct mapping " + classes [ i ] , <nl> - encoding , Native . getStringEncoding ( classes [ i ] ) ) ; <nl> - Object last = Native . getLibraryOptions ( classes [ i ] ) ; ; <nl> - assertSame ( " Options not cached " , last , Native . getLibraryOptions ( classes [ i ] ) ) ; <nl> - } <nl> - } <nl> - <nl> - public static class DirectMappingStatic { <nl> - final static TypeMapper TEST _ MAPPER = new DefaultTypeMapper ( ) ; <nl> - final static int TEST _ ALIGNMENT = Structure . ALIGN _ DEFAULT ; <nl> - final static String TEST _ ENCODING = System . getProperty ( " file . encoding " ) ; <nl> - final static Map TEST _ OPTIONS = new HashMap ( ) { <nl> - { <nl> - put ( Library . OPTION _ TYPE _ MAPPER , TEST _ MAPPER ) ; <nl> - put ( Library . OPTION _ STRUCTURE _ ALIGNMENT , TEST _ ALIGNMENT ) ; <nl> - put ( Library . OPTION _ STRING _ ENCODING , TEST _ ENCODING ) ; <nl> - } <nl> - } ; <nl> - static { <nl> - Native . register ( DirectMappingStatic . class , NativeLibrary . getInstance ( " testlib " , TEST _ OPTIONS ) ) ; <nl> - } <nl> - public static class DirectStructure extends Structure { <nl> - public int field ; <nl> - protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " field " } ) ; <nl> - } <nl> - } <nl> - public static interface DirectCallback extends Callback { <nl> - void invoke ( ) ; <nl> - } <nl> - } <nl> - <nl> - public void testGetOptionsForDirectMappingStatic ( ) { <nl> - Class [ ] classes = { <nl> - DirectMappingStatic . class , <nl> - DirectMappingStatic . DirectStructure . class , <nl> - DirectMappingStatic . DirectCallback . class , <nl> - } ; <nl> - for ( int i = 0 ; i < classes . length ; i + + ) { <nl> - assertEquals ( " Wrong type mapper for direct mapping " + classes [ i ] , <nl> - DirectMappingStatic . TEST _ MAPPER , Native . getTypeMapper ( classes [ i ] ) ) ; <nl> - assertEquals ( " Wrong alignment for direct mapping " + classes [ i ] , <nl> - DirectMappingStatic . TEST _ ALIGNMENT , Native . getStructureAlignment ( classes [ i ] ) ) ; <nl> - assertEquals ( " Wrong encoding for direct mapping " + classes [ i ] , <nl> - DirectMappingStatic . TEST _ ENCODING , Native . getStringEncoding ( classes [ i ] ) ) ; <nl> - Object last = Native . getLibraryOptions ( classes [ i ] ) ; ; <nl> - assertSame ( " Options not cached " , last , Native . getLibraryOptions ( classes [ i ] ) ) ; <nl> - } <nl> - } <nl> - <nl> private static class TestCallback implements Callback { <nl> public static final TypeMapper TYPE _ MAPPER = new DefaultTypeMapper ( ) ; <nl> public void callback ( ) { }
diff - - git a / src / com / sun / jna / Library . java b / src / com / sun / jna / Library . java <nl> index 6344a1f . . 621e4f3 100644 <nl> - - - a / src / com / sun / jna / Library . java <nl> + + + b / src / com / sun / jna / Library . java <nl> @ @ - 136 , 7 + 136 , 6 @ @ public interface Library { <nl> private final Class interfaceClass ; <nl> / / Library invocation options <nl> private final Map options ; <nl> - private FunctionMapper functionMapper ; <nl> private final InvocationMapper invocationMapper ; <nl> private final Map functions = new WeakHashMap ( ) ; <nl> public Handler ( String libname , Class interfaceClass , Map options ) { <nl> @ @ - 155 , 13 + 154 , 12 @ @ public interface Library { <nl> options . put ( OPTION _ CALLING _ CONVENTION , <nl> new Integer ( callingConvention ) ) ; <nl> } <nl> + if ( ! options . containsKey ( OPTION _ FUNCTION _ MAPPER ) ) { <nl> + / / Passed - in map is itself the name map <nl> + options . put ( OPTION _ FUNCTION _ MAPPER , new FunctionNameMap ( options ) ) ; <nl> + } <nl> this . options = options ; <nl> this . nativeLibrary = NativeLibrary . getInstance ( libname , options ) ; <nl> - functionMapper = ( FunctionMapper ) options . get ( OPTION _ FUNCTION _ MAPPER ) ; <nl> - if ( functionMapper = = null ) { <nl> - / / backward compatibility ; passed - in map is itself the name map <nl> - functionMapper = new FunctionNameMap ( options ) ; <nl> - } <nl> invocationMapper = ( InvocationMapper ) options . get ( OPTION _ INVOCATION _ MAPPER ) ; <nl> } <nl> <nl> @ @ - 213 , 13 + 211 , 7 @ @ public interface Library { <nl> } <nl> if ( f . handler = = null ) { <nl> / / Find the function to invoke <nl> - String methodName = <nl> - functionMapper . getFunctionName ( nativeLibrary , method ) ; <nl> - if ( methodName = = null ) { <nl> - / / Just in case the function mapper screwed up <nl> - methodName = method . getName ( ) ; <nl> - } <nl> - f . function = nativeLibrary . getFunction ( methodName , method ) ; <nl> + f . function = nativeLibrary . getFunction ( method . getName ( ) , method ) ; <nl> f . options = new HashMap ( this . options ) ; <nl> f . options . put ( Function . OPTION _ INVOKING _ METHOD , method ) ; <nl> } <nl> diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index 21fcceb . . 8aa6622 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 68 , 6 + 68 , 7 @ @ public class NativeLibrary { <nl> private final String libraryPath ; <nl> private final Map functions = new HashMap ( ) ; <nl> final int callFlags ; <nl> + private String encoding ; <nl> final Map options ; <nl> <nl> private static final Map libraries = new HashMap ( ) ; <nl> @ @ - 93 , 9 + 94 , 9 @ @ public class NativeLibrary { <nl> ? ( ( Number ) option ) . intValue ( ) : Function . C _ CONVENTION ; <nl> this . callFlags = callingConvention ; <nl> this . options = options ; <nl> - String encoding = ( String ) options . get ( Library . OPTION _ STRING _ ENCODING ) ; <nl> - if ( encoding = = null ) { <nl> - encoding = Native . getDefaultStringEncoding ( ) ; <nl> + this . encoding = ( String ) options . get ( Library . OPTION _ STRING _ ENCODING ) ; <nl> + if ( this . encoding = = null ) { <nl> + this . encoding = Native . getDefaultStringEncoding ( ) ; <nl> } <nl> <nl> / / Special workaround for w32 kernel32 . GetLastError <nl> @ @ - 422 , 12 + 423 , 19 @ @ public class NativeLibrary { <nl> * function from the library . <nl> * <nl> * @ param 	 name <nl> - * 	 	 	 Name of the native function to be linked with <nl> + * 	 	 	 Name of the native function to be linked with . Uses a <nl> + * 	 	 	 function mapper option if one was provided to <nl> + * 	 	 	 transform the name . <nl> * @ param 	 method <nl> * 	 	 	 Method to which the native function is to be mapped <nl> * @ throws UnsatisfiedLinkError if the function is not found <nl> * / <nl> Function getFunction ( String name , Method method ) { <nl> + FunctionMapper mapper = ( FunctionMapper ) <nl> + options . get ( Library . OPTION _ FUNCTION _ MAPPER ) ; <nl> + if ( mapper ! = null ) { <nl> + name = mapper . getFunctionName ( this , method ) ; <nl> + } <nl> int flags = this . callFlags ; <nl> Class [ ] etypes = method . getExceptionTypes ( ) ; <nl> for ( int i = 0 ; i < etypes . length ; i + + ) { <nl> @ @ - 449 , 7 + 457 , 7 @ @ public class NativeLibrary { <nl> * @ throws UnsatisfiedLinkError if the function is not found <nl> * / <nl> public Function getFunction ( String functionName , int callFlags ) { <nl> - return getFunction ( functionName , callFlags , Native . getDefaultStringEncoding ( ) ) ; <nl> + return getFunction ( functionName , callFlags , encoding ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index 02448e1 . . fe7e630 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> package com . sun . jna ; <nl> <nl> import java . io . ByteArrayOutputStream ; <nl> + import java . io . File ; <nl> import java . io . PrintStream ; <nl> import java . lang . ref . WeakReference ; <nl> import java . util . Arrays ; <nl> @ @ - 36 , 7 + 37 , 7 @ @ import com . sun . jna . win32 . W32APIOptions ; <nl> * @ author twall @ users . sf . net <nl> * / <nl> / / @ SuppressWarnings ( " unused " ) <nl> - public class CallbacksTest extends TestCase { <nl> + public class CallbacksTest extends TestCase implements Paths { <nl> <nl> private static final String UNICODE = " [ \ u0444 ] " ; <nl> <nl> @ @ - 1201 , 11 + 1202 , 19 @ @ public class CallbacksTest extends TestCase { <nl> PointerByReference pref = new PointerByReference ( ) ; <nl> int result = f . invokeInt ( new Object [ ] { new Integer ( GET _ MODULE _ HANDLE _ FROM _ ADDRESS ) , fp , pref } ) ; <nl> assertTrue ( " GetModuleHandleEx ( fptr ) failed : " + Native . getLastError ( ) , result ! = 0 ) ; <nl> + f = kernel32 . getFunction ( " GetModuleFileNameW " ) ; <nl> + char [ ] buf = new char [ 1024 ] ; <nl> + result = f . invokeInt ( new Object [ ] { pref . getValue ( ) , buf , buf . length } ) ; <nl> + assertTrue ( " GetModuleFileName ( fptr ) failed : " + Native . getLastError ( ) , result ! = 0 ) ; <nl> + <nl> <nl> f = kernel32 . getFunction ( " GetModuleHandleW " ) ; <nl> - Pointer handle = f . invokePointer ( new Object [ ] { " jnidispatch . dll " } ) ; <nl> - assertTrue ( " GetModuleHandle ( \ " jnidispatch \ " ) failed : " + Native . getLastError ( ) , result ! = 0 ) ; <nl> - assertNotNull ( " Could not get module handle for jnidispatch . dll " , handle ) ; <nl> + / / XP needs full path to DLL ; win7 only needs " jnidispatch " <nl> + File dispatch = new File ( CLASSES , " com / sun / jna / " + Platform . RESOURCE _ PREFIX + " / jnidispatch " ) ; <nl> + String path = dispatch . getAbsolutePath ( ) ; <nl> + Pointer handle = f . invokePointer ( new Object [ ] { path } ) ; <nl> + assertTrue ( " GetModuleHandle ( \ " " + path + " \ " ) failed : " + Native . getLastError ( ) , result ! = 0 ) ; <nl> + assertNotNull ( " Could not get module handle for " + path + " : " + Native . getLastError ( ) , handle ) ; <nl> assertEquals ( " Wrong module HANDLE for DLL function pointer " , handle , pref . getValue ( ) ) ; <nl> <nl> / / Check slot re - use
diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index a58e0ef . . 7f18d68 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 1196 , 15 + 1196 , 16 @ @ public class CallbacksTest extends TestCase { <nl> / / Check module information <nl> Pointer fp = CallbackReference . getFunctionPointer ( cb ) ; <nl> NativeLibrary kernel32 = NativeLibrary . getInstance ( " kernel32 " , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> - Function f = kernel32 . getFunction ( " GetModuleHandleEx " ) ; <nl> + Function f = kernel32 . getFunction ( " GetModuleHandleExW " ) ; <nl> final int GET _ MODULE _ HANDLE _ FROM _ ADDRESS = 0x4 ; <nl> PointerByReference pref = new PointerByReference ( ) ; <nl> int result = f . invokeInt ( new Object [ ] { new Integer ( GET _ MODULE _ HANDLE _ FROM _ ADDRESS ) , fp , pref } ) ; <nl> assertTrue ( " GetModuleHandleEx ( fptr ) failed : " + Native . getLastError ( ) , result ! = 0 ) ; <nl> <nl> - f = kernel32 . getFunction ( " GetModuleHandle " ) ; <nl> + f = kernel32 . getFunction ( " GetModuleHandleW " ) ; <nl> Pointer handle = f . invokePointer ( new Object [ ] { " jnidispatch " } ) ; <nl> assertTrue ( " GetModuleHandle ( \ " jnidispatch \ " ) failed : " + Native . getLastError ( ) , result ! = 0 ) ; <nl> + assertNotNull ( " Could not object module handle for jnidispatch . dll " , handle ) ; <nl> assertEquals ( " Wrong module HANDLE for DLL function pointer " , handle , pref . getValue ( ) ) ; <nl> <nl> / / Check slot re - use
diff - - git a / native / callback . c b / native / callback . c <nl> index 9488bc7 . . bc4db79 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 49 , 8 + 49 , 8 @ @ extern " C " { <nl> # endif <nl> # else / * _ WIN64 * / <nl> # ifdef _ MSC _ VER <nl> - # define ASMFN ( X ) void _ _ declspec ( naked ) asmfn # # X ( ) { \ <nl> - _ _ asm jmp fn [ X ] \ <nl> + # define ASMFN ( X ) void _ _ declspec ( naked ) asmfn # # X ( ) { \ <nl> + _ _ asm jmp DWORD PTR fn [ 4 * X ] \ <nl> } <nl> # else <nl> # define ASMFN ( X ) extern void asmfn # # X ( ) ; asm ( " . globl _ asmfn " # X " \ n \
diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index 6716399 . . 93df1ad 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ
diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index 5645c0a . . 93989c0 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 382 , 7 + 382 , 8 @ @ public class NativeLibrary { <nl> <nl> / * * <nl> * Add a path to search for the specified library , ahead of any system <nl> - * paths . <nl> + * paths . This is similar to setting < code > jna . library . path < / code > , but <nl> + * only extends the search path for a single library . <nl> * <nl> * @ param libraryName The name of the library to use the path for <nl> * @ param path The path to use when trying to load the library <nl> diff - - git a / test / com / sun / jna / NativeLibraryTest . java b / test / com / sun / jna / NativeLibraryTest . java <nl> index 72d5d1d . . 0c3906f 100644 <nl> - - - a / test / com / sun / jna / NativeLibraryTest . java <nl> + + + b / test / com / sun / jna / NativeLibraryTest . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ import java . util . Arrays ; <nl> import java . util . HashMap ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> + import com . sun . jna . win32 . W32APIOptions ; <nl> <nl> import junit . framework . TestCase ; <nl> <nl> @ @ - 238 , 6 + 239 , 25 @ @ public class NativeLibraryTest extends TestCase { <nl> Native . loadLibrary ( " testlib " , TestLibrary . class , options ) ; <nl> } <nl> <nl> + public interface Kernel32 { <nl> + int GetLastError ( ) ; <nl> + void SetLastError ( int code ) ; <nl> + } <nl> + public void testInterceptLastError ( ) { <nl> + if ( ! Platform . isWindows ( ) ) { <nl> + return ; <nl> + } <nl> + NativeLibrary kernel32 = ( NativeLibrary ) NativeLibrary . getInstance ( " kernel32 " , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> + Function get = kernel32 . getFunction ( " GetLastError " ) ; <nl> + Function set = kernel32 . getFunction ( " SetLastError " ) ; <nl> + assertEquals ( " SetLastError should not be customized " , Function . class , set . getClass ( ) ) ; <nl> + assertTrue ( " GetLastError should be a Function " , Function . class . isAssignableFrom ( get . getClass ( ) ) ) ; <nl> + assertTrue ( " GetLastError should be a customized Function " , get . getClass ( ) ! = Function . class ) ; <nl> + final int EXPECTED = 42 ; <nl> + set . invokeVoid ( new Object [ ] { new Integer ( EXPECTED ) } ) ; <nl> + assertEquals ( " Wrong error " , EXPECTED , get . invokeInt ( null ) ) ; <nl> + } <nl> + <nl> public static void main ( String [ ] args ) { <nl> junit . textui . TestRunner . run ( NativeLibraryTest . class ) ; <nl> }
diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index b5eb3a7 . . f5b09c7 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 1101 , 7 + 1101 , 7 @ @ public final class Native implements Version { <nl> * @ param libName library name to which functions should be bound <nl> * / <nl> public static void register ( String libName ) { <nl> - register ( getNativeClass ( getCallingClass ( ) ) , libName ) ; <nl> + register ( findDirectMappedClass ( getCallingClass ( ) ) , libName ) ; <nl> } <nl> <nl> / * * When called from a class static initializer , maps all native methods <nl> @ @ - 1110 , 11 + 1110 , 11 @ @ public final class Native implements Version { <nl> * @ param lib native library to which functions should be bound <nl> * / <nl> public static void register ( NativeLibrary lib ) { <nl> - register ( getNativeClass ( getCallingClass ( ) ) , lib ) ; <nl> + register ( findDirectMappedClass ( getCallingClass ( ) ) , lib ) ; <nl> } <nl> <nl> / * * Find the nearest enclosing class with native methods . * / <nl> - static Class getNativeClass ( Class cls ) { <nl> + static Class findDirectMappedClass ( Class cls ) { <nl> Method [ ] methods = cls . getDeclaredMethods ( ) ; <nl> for ( int i = 0 ; i < methods . length ; i + + ) { <nl> if ( ( methods [ i ] . getModifiers ( ) & Modifier . NATIVE ) ! = 0 ) { <nl> @ @ - 1125 , 7 + 1125 , 7 @ @ public final class Native implements Version { <nl> if ( idx ! = - 1 ) { <nl> String name = cls . getName ( ) . substring ( 0 , idx ) ; <nl> try { <nl> - return getNativeClass ( Class . forName ( name , true , cls . getClassLoader ( ) ) ) ; <nl> + return findDirectMappedClass ( Class . forName ( name , true , cls . getClassLoader ( ) ) ) ; <nl> } <nl> catch ( ClassNotFoundException e ) { <nl> } <nl> @ @ - 1180 , 7 + 1180 , 7 @ @ public final class Native implements Version { <nl> to be garbage collected . <nl> * / <nl> public static void unregister ( ) { <nl> - unregister ( getNativeClass ( getCallingClass ( ) ) ) ; <nl> + unregister ( findDirectMappedClass ( getCallingClass ( ) ) ) ; <nl> } <nl> <nl> / * * Remove all native mappings for the given class . <nl> diff - - git a / test / com / sun / jna / DirectTest . java b / test / com / sun / jna / DirectTest . java <nl> index 7fa5a28 . . 36e578a 100644 <nl> - - - a / test / com / sun / jna / DirectTest . java <nl> + + + b / test / com / sun / jna / DirectTest . java <nl> @ @ - 125 , 7 + 125 , 6 @ @ public class DirectTest extends TestCase implements Paths { <nl> } <nl> } <nl> <nl> - / / Fails under clover <nl> public void testRegisterMethods ( ) throws Exception { <nl> / / Use a dedicated class loader to ensure the class can be gc ' d <nl> String name = " com . sun . jna . DirectTest $ MathLibrary " ; <nl> @ @ - 159 , 20 + 158 , 20 @ @ public class DirectTest extends TestCase implements Paths { <nl> public void testFindNativeClass ( ) { <nl> class UnregisterLibrary { <nl> class Inner { <nl> - public Class getNativeClass ( ) { <nl> - return getNativeClassInner ( ) ; <nl> + public Class findDirectMappedClass ( ) { <nl> + return findDirectMappedClassInner ( ) ; <nl> } <nl> - public Class getNativeClassInner ( ) { <nl> - return Native . getNativeClass ( Native . getCallingClass ( ) ) ; <nl> + public Class findDirectMappedClassInner ( ) { <nl> + return Native . findDirectMappedClass ( Native . getCallingClass ( ) ) ; <nl> } ; <nl> } <nl> public native double cos ( double x ) ; <nl> - public Class getNativeClass ( ) { <nl> - return new Inner ( ) . getNativeClass ( ) ; <nl> + public Class findDirectMappedClass ( ) { <nl> + return new Inner ( ) . findDirectMappedClass ( ) ; <nl> } ; <nl> } <nl> assertEquals ( " Wrong native class found " , <nl> - UnregisterLibrary . class , new UnregisterLibrary ( ) . getNativeClass ( ) ) ; <nl> + UnregisterLibrary . class , new UnregisterLibrary ( ) . findDirectMappedClass ( ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / test / com / sun / jna / JNAUnloadTest . java b / test / com / sun / jna / JNAUnloadTest . java <nl> index 3bf2456 . . a736ad0 100644 <nl> - - - a / test / com / sun / jna / JNAUnloadTest . java <nl> + + + b / test / com / sun / jna / JNAUnloadTest . java <nl> @ @ - 100 , 7 + 100 , 6 @ @ public class JNAUnloadTest extends TestCase implements Paths { <nl> } <nl> } <nl> <nl> - / / GC Fails under clover <nl> public void testLoadAndUnloadFromJar ( ) throws Exception { <nl> ClassLoader loader = new TestLoader ( true ) ; <nl> Class cls = Class . forName ( " com . sun . jna . Native " , true , loader ) ; <nl> @ @ - 154 , 7 + 153 , 7 @ @ public class JNAUnloadTest extends TestCase implements Paths { <nl> } <nl> } <nl> <nl> - / / GC Fails under clover and OpenJDK ( linux / ppc ) <nl> + / / GC Fails under OpenJDK ( linux / ppc ) <nl> public void testLoadAndUnloadFromResourcePath ( ) throws Exception { <nl> ClassLoader loader = new TestLoader ( false ) ; <nl> Class cls = Class . forName ( " com . sun . jna . Native " , true , loader ) ; <nl> diff - - git a / test / com / sun / jna / LibraryLoadTest . java b / test / com / sun / jna / LibraryLoadTest . java <nl> index 7d099f7 . . 16a654c 100644 <nl> - - - a / test / com / sun / jna / LibraryLoadTest . java <nl> + + + b / test / com / sun / jna / LibraryLoadTest . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import java . io . IOException ; <nl> import java . net . MalformedURLException ; <nl> import java . net . URL ; <nl> import java . net . URLClassLoader ; <nl> + import java . util . Collections ; <nl> <nl> import junit . framework . TestCase ; <nl> <nl> @ @ - 110 , 6 + 111 , 14 @ @ public class LibraryLoadTest extends TestCase implements Paths { <nl> return Native . loadLibrary ( Platform . C _ LIBRARY _ NAME , CLibrary . class ) ; <nl> } <nl> <nl> + public void testLoadProcess ( ) { <nl> + Native . loadLibrary ( CLibrary . class ) ; <nl> + } <nl> + <nl> + public void testLoadProcessWithOptions ( ) { <nl> + Native . loadLibrary ( CLibrary . class , Collections . EMPTY _ MAP ) ; <nl> + } <nl> + <nl> public void testLoadCLibrary ( ) { <nl> load ( ) ; <nl> } <nl> diff - - git a / test / com / sun / jna / NativeTest . java b / test / com / sun / jna / NativeTest . java <nl> index 87ecdd2 . . ce717e0 100644 <nl> - - - a / test / com / sun / jna / NativeTest . java <nl> + + + b / test / com / sun / jna / NativeTest . java <nl> @ @ - 417 , 6 + 417 , 45 @ @ public class NativeTest extends TestCase { <nl> } <nl> } <nl> <nl> + private static final String NUL = " \ 0 " ; <nl> + public void testStringConversion ( ) { <nl> + byte [ ] buf = ( getName ( ) + NUL ) . getBytes ( ) ; <nl> + assertEquals ( " C string improperly converted " , getName ( ) , Native . toString ( buf ) ) ; <nl> + } <nl> + <nl> + public void testStringConversionWithEncoding ( ) throws Exception { <nl> + byte [ ] buf = ( getName ( ) + UNICODE + NUL ) . getBytes ( " utf8 " ) ; <nl> + assertEquals ( " Encoded C string improperly converted " , getName ( ) + UNICODE , Native . toString ( buf , " utf8 " ) ) ; <nl> + } <nl> + <nl> + public void testWideStringConversion ( ) { <nl> + char [ ] buf = ( getName ( ) + NUL ) . toCharArray ( ) ; <nl> + assertEquals ( " Wide C string improperly converted " , getName ( ) , Native . toString ( buf ) ) ; <nl> + } <nl> + <nl> + public void testGetBytes ( ) throws Exception { <nl> + byte [ ] buf = Native . getBytes ( getName ( ) + UNICODE , " utf8 " ) ; <nl> + assertEquals ( " Incorrect native bytes from Java String " , getName ( ) + UNICODE , new String ( buf , " utf8 " ) ) ; <nl> + } <nl> + <nl> + public void testGetBytesBadEncoding ( ) throws Exception { <nl> + byte [ ] buf = Native . getBytes ( getName ( ) , " unsupported " ) ; <nl> + assertEquals ( " Incorrect fallback bytes with bad encoding " , <nl> + getName ( ) , new String ( buf , System . getProperty ( " file . encoding " ) ) ) ; <nl> + } <nl> + <nl> + public void testFindDirectMappedClassFailure ( ) { <nl> + try { <nl> + Native . findDirectMappedClass ( NativeTest . class ) ; <nl> + fail ( " Expect an exception if native - mapped class can ' t be found " ) ; <nl> + } <nl> + catch ( IllegalArgumentException e ) { <nl> + } <nl> + } <nl> + <nl> + / * * This method facilitates running tests from a single entry point <nl> + outside of ant ( i . e . for androide , WCE , etc . ) . <nl> + * / <nl> public static void main ( String [ ] args ) { <nl> if ( args . length = = 0 ) { <nl> junit . textui . TestRunner . run ( NativeTest . class ) ; <nl> diff - - git a / test / com / sun / jna / Paths . java b / test / com / sun / jna / Paths . java <nl> index b63e33f . . 1c57a68 100644 <nl> - - - a / test / com / sun / jna / Paths . java <nl> + + + b / test / com / sun / jna / Paths . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2009 Timothy Wall , All Rights Reserved <nl> + / * Copyright ( c ) 2013 Timothy Wall , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public
diff - - git a / src / com / sun / jna / Pointer . java b / src / com / sun / jna / Pointer . java <nl> index d38dadb . . 73c0ab8 100644 <nl> - - - a / src / com / sun / jna / Pointer . java <nl> + + + b / src / com / sun / jna / Pointer . java <nl> @ @ - 1239 , 7 + 1239 , 7 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> * @ param value < code > WString < / code > value to set <nl> * / <nl> public void setString ( long offset , WString value ) { <nl> - setWideString ( offset , value . toString ( ) ) ; <nl> + setWideString ( offset , value = = null ? null : value . toString ( ) ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 1308 , 6 + 1308 , 12 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> private static class Opaque extends Pointer { <nl> private Opaque ( long peer ) { super ( peer ) ; } <nl> private final String MSG = " This pointer is opaque : " + this ; <nl> + public Pointer share ( long offset , long size ) { <nl> + throw new UnsupportedOperationException ( MSG ) ; <nl> + } <nl> + public void clear ( long size ) { <nl> + throw new UnsupportedOperationException ( MSG ) ; <nl> + } <nl> public long indexOf ( long offset , byte value ) { <nl> throw new UnsupportedOperationException ( MSG ) ; <nl> } <nl> @ @ - 1332 , 6 + 1338 , 9 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> public void read ( long bOff , double [ ] buf , int index , int length ) { <nl> throw new UnsupportedOperationException ( MSG ) ; <nl> } <nl> + public void read ( long bOff , Pointer [ ] buf , int index , int length ) { <nl> + throw new UnsupportedOperationException ( MSG ) ; <nl> + } <nl> public void write ( long bOff , byte [ ] buf , int index , int length ) { <nl> throw new UnsupportedOperationException ( MSG ) ; <nl> } <nl> @ @ - 1353 , 6 + 1362 , 12 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> public void write ( long bOff , double [ ] buf , int index , int length ) { <nl> throw new UnsupportedOperationException ( MSG ) ; <nl> } <nl> + public void write ( long bOff , Pointer [ ] buf , int index , int length ) { <nl> + throw new UnsupportedOperationException ( MSG ) ; <nl> + } <nl> + public ByteBuffer getByteBuffer ( long offset , long length ) { <nl> + throw new UnsupportedOperationException ( MSG ) ; <nl> + } <nl> public byte getByte ( long bOff ) { <nl> throw new UnsupportedOperationException ( MSG ) ; <nl> } <nl> @ @ - 1413 , 8 + 1428 , 11 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> public void setWideString ( long offset , String value ) { <nl> throw new UnsupportedOperationException ( MSG ) ; <nl> } <nl> + public void setMemory ( long offset , long size , byte value ) { <nl> + throw new UnsupportedOperationException ( MSG ) ; <nl> + } <nl> public String toString ( ) { <nl> - return " opaque @ 0x " + Long . toHexString ( peer ) ; <nl> + return " const @ 0x " + Long . toHexString ( peer ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / test / com / sun / jna / PointerTest . java b / test / com / sun / jna / PointerTest . java <nl> index f21101b . . 7058a69 100644 <nl> - - - a / test / com / sun / jna / PointerTest . java <nl> + + + b / test / com / sun / jna / PointerTest . java <nl> @ @ - 1 , 4 + 1 , 5 @ @ <nl> / * Copyright ( c ) 2007 Wayne Meissner , All Rights Reserved <nl> + * Copyright ( c ) 2007 - 2013 Timothy Wall , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 13 , 6 + 14 , 9 @ @ <nl> <nl> package com . sun . jna ; <nl> <nl> + import java . lang . reflect . Method ; <nl> + import java . lang . reflect . Modifier ; <nl> + import java . lang . reflect . InvocationTargetException ; <nl> import java . util . Arrays ; <nl> import java . util . Iterator ; <nl> import java . util . Map ; <nl> @ @ - 157 , 6 + 161 , 53 @ @ public class PointerTest extends TestCase { <nl> assertNull ( " Array element should be null " , arr [ 0 ] ) ; <nl> } <nl> <nl> + private Object defaultArg ( Class type ) { <nl> + if ( type = = boolean . class | | type = = Boolean . class ) return Boolean . FALSE ; <nl> + if ( type = = byte . class | | type = = Byte . class ) return new Byte ( ( byte ) 0 ) ; <nl> + if ( type = = char . class | | type = = Character . class ) return new Character ( ( char ) 0 ) ; <nl> + if ( type = = short . class | | type = = Short . class ) return new Short ( ( short ) 0 ) ; <nl> + if ( type = = int . class | | type = = Integer . class ) return new Integer ( 0 ) ; <nl> + if ( type = = long . class | | type = = Long . class ) return new Long ( 0 ) ; <nl> + if ( type = = float . class | | type = = Float . class ) return new Float ( 0 ) ; <nl> + if ( type = = double . class | | type = = Double . class ) return new Double ( 0 ) ; <nl> + if ( type = = NativeLong . class ) return new NativeLong ( 0 ) ; <nl> + return null ; <nl> + } <nl> + <nl> + public void testOpaquePointer ( ) throws Exception { <nl> + Pointer p = Pointer . createConstant ( 0 ) ; <nl> + Class cls = p . getClass ( ) ; <nl> + Method [ ] methods = cls . getMethods ( ) ; <nl> + for ( int i = 0 ; i < methods . length ; i + + ) { <nl> + Method m = methods [ i ] ; <nl> + Class [ ] argTypes = m . getParameterTypes ( ) ; <nl> + try { <nl> + Object [ ] args = new Object [ argTypes . length ] ; <nl> + for ( int arg = 0 ; arg < args . length ; arg + + ) { <nl> + args [ arg ] = defaultArg ( argTypes [ arg ] ) ; <nl> + } <nl> + if ( " hashCode " . equals ( m . getName ( ) ) <nl> + | | " equals " . equals ( m . getName ( ) ) <nl> + | | m . getDeclaringClass ( ) = = Object . class <nl> + | | ( m . getModifiers ( ) & Modifier . STATIC ) ! = 0 ) { <nl> + continue ; <nl> + } <nl> + Object result = m . invoke ( p , args ) ; <nl> + if ( " toString " . equals ( m . getName ( ) ) ) { <nl> + assertTrue ( " toString ( ) should indicate const - ness " , ( ( String ) result ) . indexOf ( " const " ) ! = - 1 ) ; <nl> + continue ; <nl> + } <nl> + fail ( " Method ' " + m . getName ( ) + " ( " + Arrays . asList ( argTypes ) + " ) ' should throw UnsupportedOperationException " ) ; <nl> + } <nl> + catch ( InvocationTargetException e ) { <nl> + assertEquals ( " Wrong exception type thrown by ' " + m . getName ( ) + " ( " + Arrays . asList ( argTypes ) + " ) " , UnsupportedOperationException . class , e . getTargetException ( ) . getClass ( ) ) ; <nl> + } <nl> + catch ( IllegalArgumentException e ) { <nl> + fail ( " Need to fix test of method ' " + m . getName ( ) + " ( " + Arrays . asList ( argTypes ) + " ) ' " ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> public static void main ( String [ ] args ) { <nl> junit . textui . TestRunner . run ( PointerTest . class ) ; <nl> }
diff - - git a / www / WindowsDevelopmentEnvironment . md b / www / WindowsDevelopmentEnvironment . md <nl> index 205d0c2 . . c0ea378 100644 <nl> - - - a / www / WindowsDevelopmentEnvironment . md <nl> + + + b / www / WindowsDevelopmentEnvironment . md <nl> @ @ - 20 , 6 + 20 , 9 @ @ To build with the mingw64 , uncomment the line assigning ` CC ` to ` $ ( MINGW ) ` in <nl> ` native / Makefile ` and make sure the cross - compiling mingw64 tools are in your <nl> path . <nl> <nl> + If you get errors such as ` ' \ r ' : command not found ` , run ` dos2unix - f [ filename ] ` <nl> + for each file that it ' s complaining about . <nl> + <nl> To use the MS compiler , ensure that the 64 - bit versions of <nl> cl . exe / ml64 . exe / link . exe are in your PATH and that the INCLUDE and LIB <nl> environment variables are set properly ( as in VCVARS . BAT ) .
diff - - git a / lib / clover . jar b / lib / clover . jar <nl> index e38a8ae . . 7ac155c 100644 <nl> Binary files a / lib / clover . jar and b / lib / clover . jar differ <nl> diff - - git a / lib / clover . license b / lib / clover . license <nl> index 69a40d0 . . 67e9cbd 100644 <nl> - - - a / lib / clover . license <nl> + + + b / lib / clover . license <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> - qRNQnmsMoNMDGXUenVfHVPuFPrNBGUUdBvfgtIdgVQWSbAa <nl> - mj2KW7Oo9ud83ZbEKfK2xx922L04T > gYjDdLjGld4Wa6MPW <nl> - NrqPtxROppqOmmqROMPSTnMmRqNOMnMnoPVSXswPsVXQwXV <nl> - SPVVUtUNQmnmqmUUnopmqsvommmmmUUnopmqsvommmmmUUg <nl> - kXkabskgXsXkkbqUUnmm <nl> + onoMnApeShTpQtDJbcUgJTIFONPQeUndIgfQWWNNddIwBl <nl> + mi2Kp5RjfhIJdGCSo < bOTNof2KNxm9KCi5lxEyKI9BJW3p <nl> + qOPQUXpopOopMMPqnPnXXQPNOPNRnqQNQqStwVxuQSTtVW <nl> + UrwSUSSSTVwxWSXNmrrpnmqmUUnpsvpntsmmmmmUUnpsvp <nl> + ntsmmmmmUUFmbkWJlroZbW4bsbilmjbkqUUnmmmm
diff - - git a / test / com / sun / jna / NativeTest . java b / test / com / sun / jna / NativeTest . java <nl> index db632b9 . . 821b0b0 100644 <nl> - - - a / test / com / sun / jna / NativeTest . java <nl> + + + b / test / com / sun / jna / NativeTest . java <nl> @ @ - 336 , 6 + 336 , 8 @ @ public class NativeTest extends TestCase { <nl> alignment , Native . getStructureAlignment ( classes [ i ] ) ) ; <nl> assertEquals ( " Wrong encoding for direct mapping " + classes [ i ] , <nl> encoding , Native . getStringEncoding ( classes [ i ] ) ) ; <nl> + Object last = Native . getLibraryOptions ( classes [ i ] ) ; ; <nl> + assertSame ( " Options not cached " , last , Native . getStringEncoding ( classes [ i ] ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 371 , 12 + 373 , 14 @ @ public class NativeTest extends TestCase { <nl> DirectMappingStatic . DirectCallback . class , <nl> } ; <nl> for ( int i = 0 ; i < classes . length ; i + + ) { <nl> - assertEquals ( " Wrong type mapper for direct mapping ( static ) " + classes [ i ] , <nl> + assertEquals ( " Wrong type mapper for direct mapping " + classes [ i ] , <nl> DirectMappingStatic . TEST _ MAPPER , Native . getTypeMapper ( classes [ i ] ) ) ; <nl> - assertEquals ( " Wrong alignment for direct mapping ( static ) " + classes [ i ] , <nl> + assertEquals ( " Wrong alignment for direct mapping " + classes [ i ] , <nl> DirectMappingStatic . TEST _ ALIGNMENT , Native . getStructureAlignment ( classes [ i ] ) ) ; <nl> - assertEquals ( " Wrong encoding for direct mapping ( static ) " + classes [ i ] , <nl> + assertEquals ( " Wrong encoding for direct mapping " + classes [ i ] , <nl> DirectMappingStatic . TEST _ ENCODING , Native . getStringEncoding ( classes [ i ] ) ) ; <nl> + Object last = Native . getLibraryOptions ( classes [ i ] ) ; ; <nl> + assertSame ( " Options not cached " , last , Native . getStringEncoding ( classes [ i ] ) ) ; <nl> } <nl> } <nl>
diff - - git a / lib / native / linux - arm . jar b / lib / native / linux - arm . jar <nl> index 6716399 . . 94c2ffb 100755 <nl> Binary files a / lib / native / linux - arm . jar and b / lib / native / linux - arm . jar differ
diff - - git a / native / callback . c b / native / callback . c <nl> index d750c11 . . b787eb9 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 165 , 8 + 165 , 9 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> } <nl> } <nl> <nl> + / / Java callback method is called using varargs , so promote floats to <nl> + / / double where appropriate for the platform <nl> if ( cb - > arg _ types [ i ] - > type = = FFI _ TYPE _ FLOAT ) { <nl> - / / Java method is varargs , so promote floats to double <nl> cb - > java _ arg _ types [ i + 3 ] = & ffi _ type _ double ; <nl> cb - > conversion _ flags [ i ] = CVT _ FLOAT ; <nl> cvt = 1 ; <nl> @ @ - 236 , 7 + 237 , 7 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> case ' D ' : cb - > fptr _ offset = OFFSETOF ( env , CallDoubleMethod ) ; break ; <nl> default : cb - > fptr _ offset = OFFSETOF ( env , CallObjectMethod ) ; break ; <nl> } <nl> - status = ffi _ prep _ cif ( & cb - > java _ cif , java _ abi , argc + 3 , java _ ffi _ rtype , cb - > java _ arg _ types ) ; <nl> + status = ffi _ prep _ cif _ var ( & cb - > java _ cif , java _ abi , 2 , argc + 3 , java _ ffi _ rtype , cb - > java _ arg _ types ) ; <nl> if ( ! ffi _ error ( env , " callback setup ( 2 ) " , status ) ) { <nl> ffi _ prep _ closure _ loc ( cb - > closure , & cb - > cif , callback _ dispatch , cb , <nl> cb - > x _ closure ) ;
diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index cc33ecc . . 7efea6e 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 151 , 7 + 151 , 6 @ @ public final class Native implements Version { <nl> + " - set jna . boot . library . path to include the path to the version of the " + LS <nl> + " jnidispatch library included with the JNA jar file you are using " + LS ) ; <nl> } <nl> - setPreserveLastError ( " true " . equalsIgnoreCase ( System . getProperty ( " jna . preserve _ last _ error " , " true " ) ) ) ; <nl> 	 MAX _ PADDING = Platform . isSPARC ( ) | | Platform . isWindows ( ) | | Platform . isARM ( ) <nl> | | Platform . isAIX ( ) | | Platform . isAndroid ( ) <nl> | | ( Platform . isPPC ( ) & & Platform . isLinux ( ) ) <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index a545847 . . e5faa21 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 122 , 7 + 122 , 6 @ @ public abstract class Structure { <nl> / * * Align to an 8 - byte boundary . * / <nl> / / public static final int ALIGN _ 8 = 6 ; <nl> <nl> - static final int MAX _ GNUC _ ALIGNMENT = Native . MAX _ PADDING ; <nl> protected static final int CALCULATE _ SIZE = - 1 ; <nl> static final Map layoutInfo = new WeakHashMap ( ) ; <nl> static final Map fieldOrder = new WeakHashMap ( ) ; <nl> @ @ - 1145 , 6 + 1144 , 9 @ @ public abstract class Structure { <nl> } <nl> <nl> / / Align fields as appropriate <nl> + if ( fieldAlignment = = 0 ) { <nl> + throw new Error ( " Field alignment is zero for field ' " + structField . name + " ' within " + getClass ( ) ) ; <nl> + } <nl> info . alignment = Math . max ( info . alignment , fieldAlignment ) ; <nl> if ( ( calculatedSize % fieldAlignment ) ! = 0 ) { <nl> calculatedSize + = fieldAlignment - ( calculatedSize % fieldAlignment ) ; <nl> @ @ - 1304 , 7 + 1306 , 7 @ @ public abstract class Structure { <nl> / / NOTE this is published ABI for 32 - bit gcc / linux / x86 , osx / x86 , <nl> / / and osx / ppc . osx / ppc special - cases the first element <nl> if ( ! isFirstElement | | ! ( Platform . isMac ( ) & & Platform . isPPC ( ) ) ) { <nl> - alignment = Math . min ( MAX _ GNUC _ ALIGNMENT , alignment ) ; <nl> + alignment = Math . min ( Native . MAX _ PADDING , alignment ) ; <nl> } <nl> if ( ! isFirstElement & & Platform . isAIX ( ) & & ( type = = double . class | | type = = Double . class ) ) { <nl> alignment = 4 ; <nl> diff - - git a / src / com / sun / jna / Union . java b / src / com / sun / jna / Union . java <nl> index d08b50d . . 2be0d19 100644 <nl> - - - a / src / com / sun / jna / Union . java <nl> + + + b / src / com / sun / jna / Union . java <nl> @ @ - 209 , 8 + 209 , 9 @ @ public abstract class Union extends Structure { <nl> return super . readField ( field ) ; <nl> } <nl> / / Field not accessible <nl> - / / TODO : read structure , to the extent possible ; need a " recursive " <nl> - / / flag to " read " to indicate we want to avoid pointer - based fields <nl> + / / TODO : read by - value structures , to the extent possible ; need a <nl> + / / " read cautiously " method to " read " to indicate we want to avoid <nl> + / / pointer - based fields <nl> return null ; <nl> } <nl> <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index bf71373 . . 2e313db 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 158 , 7 + 158 , 7 @ @ public class StructureTest extends TestCase { <nl> } <nl> Structure s = new TestStructure ( ) ; <nl> s . setAlignType ( Structure . ALIGN _ GNUC ) ; <nl> - final int SIZE = Structure . MAX _ GNUC _ ALIGNMENT = = 8 ? 32 : 28 ; <nl> + final int SIZE = Native . MAX _ PADDING = = 8 ? 32 : 28 ; <nl> assertEquals ( " Wrong structure size " , SIZE , s . size ( ) ) ; <nl> } <nl>
diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 27cef8e . . cc33ecc 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 152 , 7 + 152 , 9 @ @ public final class Native implements Version { <nl> + " jnidispatch library included with the JNA jar file you are using " + LS ) ; <nl> } <nl> setPreserveLastError ( " true " . equalsIgnoreCase ( System . getProperty ( " jna . preserve _ last _ error " , " true " ) ) ) ; <nl> - 	 MAX _ PADDING = Platform . isSPARC ( ) | | Platform . isWindows ( ) <nl> + 	 MAX _ PADDING = Platform . isSPARC ( ) | | Platform . isWindows ( ) | | Platform . isARM ( ) <nl> + | | Platform . isAIX ( ) | | Platform . isAndroid ( ) <nl> + | | ( Platform . isPPC ( ) & & Platform . isLinux ( ) ) <nl> ? 8 : LONG _ SIZE ; <nl> } <nl> <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index 9fb225c . . 3dfe9c7 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 106 , 10 + 106 , 6 @ @ public abstract class Structure { <nl> * / <nl> public interface ByReference { } <nl> <nl> - static final boolean isPPC = Platform . isPPC ( ) ; <nl> - static final boolean isSPARC = Platform . isSPARC ( ) ; <nl> - static final boolean isARM = Platform . isARM ( ) ; <nl> - <nl> / * * Use the platform default alignment . * / <nl> public static final int ALIGN _ DEFAULT = 0 ; <nl> / * * No alignment , place all fields on nearest 1 - byte boundary * / <nl> @ @ - 126 , 12 + 122 , 7 @ @ public abstract class Structure { <nl> / * * Align to an 8 - byte boundary . * / <nl> / / public static final int ALIGN _ 8 = 6 ; <nl> <nl> - static final int MAX _ GNUC _ ALIGNMENT = <nl> - isSPARC <nl> - | | ( ( isPPC | | isARM ) <nl> - & & ( Platform . isLinux ( ) | | Platform . isAndroid ( ) ) ) <nl> - | | Platform . isAIX ( ) <nl> - ? 8 : Native . LONG _ SIZE ; <nl> + static final int MAX _ GNUC _ ALIGNMENT = Native . MAX _ PADDING ; <nl> protected static final int CALCULATE _ SIZE = - 1 ; <nl> static final Map layoutInfo = new WeakHashMap ( ) ; <nl> static final Map fieldOrder = new WeakHashMap ( ) ; <nl> @ @ - 1312 , 10 + 1303 , 10 @ @ public abstract class Structure { <nl> else if ( actualAlignType = = ALIGN _ GNUC ) { <nl> / / NOTE this is published ABI for 32 - bit gcc / linux / x86 , osx / x86 , <nl> / / and osx / ppc . osx / ppc special - cases the first element <nl> - if ( ! isFirstElement | | ! ( Platform . isMac ( ) & & isPPC ) ) { <nl> + if ( ! isFirstElement | | ! ( Platform . isMac ( ) & & Platfomr . isPPC ( ) ) ) { <nl> alignment = Math . min ( MAX _ GNUC _ ALIGNMENT , alignment ) ; <nl> } <nl> - if ( ! isFirstElement & & Platform . isAIX ( ) & & ( type . getName ( ) . equals ( " double " ) ) ) { <nl> + if ( ! isFirstElement & & Platform . isAIX ( ) & & ( type = = double . class | | type = = Double . class ) ) { <nl> alignment = 4 ; <nl> } <nl> }
diff - - git a / test / com / sun / jna / LastErrorTest . java b / test / com / sun / jna / LastErrorTest . java <nl> index a900428 . . 53e545a 100644 <nl> - - - a / test / com / sun / jna / LastErrorTest . java <nl> + + + b / test / com / sun / jna / LastErrorTest . java <nl> @ @ - 51 , 28 + 51 , 21 @ @ public class LastErrorTest extends TestCase { <nl> public void testLastErrorPerThreadStorage ( ) throws Exception { <nl> final TestLibrary lib = ( TestLibrary ) Native . loadLibrary ( " testlib " , TestLibrary . class ) ; <nl> final int [ ] errors = new int [ 2 ] ; <nl> - boolean last = Native . getPreserveLastError ( ) ; <nl> - try { <nl> - Native . setPreserveLastError ( true ) ; <nl> - Thread t1 = new Thread ( ) { public void run ( ) { <nl> - lib . setLastError ( - 1 ) ; <nl> - errors [ 0 ] = Native . getLastError ( ) ; <nl> - } } ; <nl> - Thread t2 = new Thread ( ) { public void run ( ) { <nl> - lib . setLastError ( - 2 ) ; <nl> - errors [ 1 ] = Native . getLastError ( ) ; <nl> - } } ; <nl> - lib . setLastError ( - 3 ) ; <nl> - <nl> - t1 . start ( ) ; t2 . start ( ) ; <nl> - t1 . join ( ) ; t2 . join ( ) ; <nl> - assertEquals ( " Wrong error on main thread " , - 3 , Native . getLastError ( ) ) ; <nl> - assertEquals ( " Wrong error on first thread " , - 1 , errors [ 0 ] ) ; <nl> - assertEquals ( " Wrong error on second thread " , - 2 , errors [ 1 ] ) ; <nl> - } <nl> - finally { <nl> - Native . setPreserveLastError ( last ) ; <nl> - } <nl> + Thread t1 = new Thread ( ) { public void run ( ) { <nl> + lib . setLastError ( - 1 ) ; <nl> + errors [ 0 ] = Native . getLastError ( ) ; <nl> + } } ; <nl> + Thread t2 = new Thread ( ) { public void run ( ) { <nl> + lib . setLastError ( - 2 ) ; <nl> + errors [ 1 ] = Native . getLastError ( ) ; <nl> + } } ; <nl> + lib . setLastError ( - 3 ) ; <nl> + <nl> + t1 . start ( ) ; t2 . start ( ) ; <nl> + t1 . join ( ) ; t2 . join ( ) ; <nl> + assertEquals ( " Wrong error on main thread " , - 3 , Native . getLastError ( ) ) ; <nl> + assertEquals ( " Wrong error on first thread " , - 1 , errors [ 0 ] ) ; <nl> + assertEquals ( " Wrong error on second thread " , - 2 , errors [ 1 ] ) ; <nl> } <nl> <nl> private final int ERROR = Platform . isWindows ( ) ? 1 : - 1 ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java <nl> index ec2cbb3 . . bc92a5d 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinDef . java <nl> @ @ - 70 , 11 + 70 , 11 @ @ public interface WinDef extends StdCallLibrary { <nl> 	 	 } <nl> <nl> 	 	 public void setValue ( WORD value ) { <nl> - 	 	 	 getPointer ( ) . setInt ( 0 , value . intValue ( ) ) ; <nl> + 	 	 	 getPointer ( ) . setShort ( 0 , value . shortValue ( ) ) ; <nl> 	 	 } <nl> <nl> 	 	 public WORD getValue ( ) { <nl> - 	 	 	 return new WORD ( getPointer ( ) . getInt ( 0 ) ) ; <nl> + 	 	 	 return new WORD ( getPointer ( ) . getShort ( 0 ) ) ; <nl> 	 	 } <nl> 	 } <nl>
diff - - git a / contrib / msoffice / jnatest . doc b / contrib / msoffice / jnatest . doc <nl> index ba68825 . . 3fa63e8 100644 <nl> - - - a / contrib / msoffice / jnatest . doc <nl> + + + b / contrib / msoffice / jnatest . doc <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> <nl> - Hello from JNA ! JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> + JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> @ @ - 19 , 7 + 19 , 7 @ @ Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> - Test JNA Test JNA Test JNA <nl> + Test JNA <nl> JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> diff - - git a / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSOfficeDemo . java b / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSOfficeDemo . java <nl> index 4cdc9d0 . . b4e18da 100644 <nl> - - - a / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSOfficeDemo . java <nl> + + + b / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSOfficeDemo . java <nl> @ @ - 27 , 8 + 27 , 7 @ @ public class MSOfficeDemo { <nl> 	 	 LONG wdFormatPDF = new LONG ( 17 ) ; / / PDF format . <nl> 	 	 LONG wdFormatRTF = new LONG ( 6 ) ; / / Rich text format ( RTF ) . <nl> 	 	 LONG wdFormatHTML = new LONG ( 8 ) ; / / Standard HTML format . <nl> - 	 	 <nl> - 	 	 <nl> + <nl> 	 	 try { <nl> 	 	 	 msWord = new MSWord ( ) ; <nl> 	 	 	 System . out . println ( " MSWord version : " + msWord . getVersion ( ) ) ; <nl> @ @ - 37 , 11 + 36 , 14 @ @ public class MSOfficeDemo { <nl> 	 	 	 msWord . openDocument ( currentWorkingDir + " jnatest . doc " , true ) ; <nl> 	 	 	 msWord . insertText ( " Hello from JNA ! " ) ; <nl> 	 	 	 / / wait 10sec . before closing <nl> - 	 	 	 / / Thread . currentThread ( ) . sleep ( 10000 ) ; <nl> - 	 	 	 / / close and save the document <nl> + 	 	 	 Thread . currentThread ( ) . sleep ( 10000 ) ; <nl> + 	 	 	 / / save in different formats <nl> + 	 	 	 / / pdf format is only supported in MSWord 2007 and above <nl> + 	 	 	 / / msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . pdf " , wdFormatPDF ) ; <nl> 	 	 	 msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . rtf " , wdFormatRTF ) ; <nl> 	 	 	 msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . html " , wdFormatHTML ) ; <nl> - 	 	 	 / / msWord . closeActiveDocument ( true ) ; <nl> + 	 	 	 / / close and save the document <nl> + 	 	 	 msWord . closeActiveDocument ( true ) ; <nl> 	 	 	 / / wait then close word <nl> 	 	 	 msWord . quit ( ) ; <nl> 	 	 } catch ( COMException e ) { <nl> diff - - git a / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSWord . java b / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSWord . java <nl> index c8a13f1 . . 218af5e 100644 <nl> - - - a / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSWord . java <nl> + + + b / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSWord . java <nl> @ @ - 50 , 12 + 50 , 11 @ @ public class MSWord extends COMObject { <nl> 	 } <nl> <nl> 	 public void SaveAs ( String FileName , LONG FileFormat ) throws COMException { <nl> - 	 	 VARIANT [ ] args = new VARIANT [ 2 ] ; <nl> - 	 	 args [ 0 ] = new VARIANT ( FileFormat ) ; <nl> - 	 	 args [ 1 ] = new VARIANT ( FileName ) ; <nl> + 	 	 VARIANT vtFileName = new VARIANT ( FileName ) ; <nl> + 	 	 VARIANT vtFileFormat = new VARIANT ( FileFormat ) ; <nl> 	 	 <nl> 	 	 this . invokeNoReply ( " SaveAs " , this . getActiveDocument ( ) . getIDispatch ( ) , <nl> - 	 	 	 	 args ) ; <nl> + 	 	 	 	 vtFileName , vtFileFormat ) ; <nl> 	 } <nl> <nl> 	 public ActiveDocument getActiveDocument ( ) { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBaseObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBaseObject . java <nl> index e687992 . . 20120f0 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBaseObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBaseObject . java <nl> @ @ - 176 , 14 + 176 , 26 @ @ public class COMBaseObject { <nl> 	 	 if ( pDisp = = null ) <nl> 	 	 	 throw new COMException ( " pDisp ( IDispatch ) parameter is null ! " ) ; <nl> <nl> + 	 	 / / variable declaration <nl> + 	 	 int _ argsLen = 0 ; <nl> + 	 	 VARIANT [ ] _ args = null ; <nl> 	 	 WString [ ] ptName = new WString [ ] { new WString ( name ) } ; <nl> 	 	 DISPPARAMS dp = new DISPPARAMS ( ) ; <nl> 	 	 DISPIDbyReference pdispID = new DISPIDbyReference ( ) ; <nl> - 	 	 VariantArg . ByReference variantArg = new VariantArg . ByReference ( ) ; <nl> - 	 	 variantArg . variantArg = pArgs ; <nl> 	 	 EXCEPINFO . ByReference pExcepInfo = new EXCEPINFO . ByReference ( ) ; <nl> 	 	 IntByReference puArgErr = new IntByReference ( ) ; <nl> <nl> + 	 	 / / make parameter reverse ordering as expected by COM runtime <nl> + 	 	 if ( ( pArgs ! = null ) & & ( pArgs . length > 0 ) ) { <nl> + 	 	 	 _ argsLen = pArgs . length ; <nl> + 	 	 	 _ args = new VARIANT [ _ argsLen ] ; <nl> + <nl> + 	 	 	 int revCount = _ argsLen ; <nl> + 	 	 	 for ( int i = 0 ; i < _ argsLen ; i + + ) { <nl> + 	 	 	 	 _ args [ i ] = pArgs [ - - revCount ] ; <nl> + 	 	 	 } <nl> + 	 	 } <nl> + <nl> 	 	 / / Get DISPID for name passed . . . <nl> 	 	 HRESULT hr = pDisp . GetIDsOfNames ( Guid . IID _ NULL , ptName , 1 , <nl> 	 	 	 	 LOCALE _ USER _ DEFAULT , pdispID ) ; <nl> @ @ - 192 , 15 + 204 , 16 @ @ public class COMBaseObject { <nl> <nl> 	 	 / / Handle special - case for property - puts ! <nl> 	 	 if ( nType = = OleAuto . DISPATCH _ PROPERTYPUT ) { <nl> - 	 	 	 dp . cNamedArgs = new UINT ( pArgs . length ) ; <nl> + 	 	 	 dp . cNamedArgs = new UINT ( _ argsLen ) ; <nl> 	 	 	 dp . rgdispidNamedArgs = new DISPIDbyReference ( <nl> 	 	 	 	 	 OaIdl . DISPID _ PROPERTYPUT ) ; <nl> 	 	 } <nl> <nl> 	 	 / / Build DISPPARAMS <nl> - 	 	 if ( ( pArgs ! = null ) & & ( pArgs . length > 0 ) ) { <nl> - 	 	 	 dp . cArgs = new UINT ( pArgs . length ) ; <nl> - 	 	 	 dp . rgvarg = variantArg ; <nl> + 	 	 if ( _ argsLen > 0 ) { <nl> + 	 	 	 dp . cArgs = new UINT ( _ args . length ) ; <nl> + 	 	 	 / / make pointer of variant array <nl> + 	 	 	 dp . rgvarg = new VariantArg . ByReference ( _ args ) ; <nl> <nl> 	 	 	 / / write ' DISPPARAMS ' structure to memory <nl> 	 	 	 dp . write ( ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> index acec09e . . 5b66661 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> @ @ - 651 , 6 + 651 , 13 @ @ public interface Variant { <nl> 	 public static class VariantArg extends Structure { <nl> 	 	 public static class ByReference extends VariantArg implements <nl> 	 	 	 	 Structure . ByReference { <nl> + 	 	 	 <nl> + 	 	 	 public ByReference ( ) { <nl> + 	 	 	 } <nl> + 	 	 	 <nl> + 	 	 	 public ByReference ( VARIANT [ ] variantArg ) { <nl> + 	 	 	 	 this . variantArg = variantArg ; <nl> + 	 	 	 } <nl> 	 	 } <nl> <nl> 	 	 public VARIANT [ ] variantArg ;
diff - - git a / native / Makefile b / native / Makefile <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / pom - jna . xml b / pom - jna . xml <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / pom - platform . xml b / pom - platform . xml <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / src / com / sun / jna / Version . java b / src / com / sun / jna / Version . java <nl> old mode 100755 <nl> new mode 100644
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> index cfed154 . . 40f572a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> @ @ - 38 , 127 + 38 , 127 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> * / <nl> public class IDispatch extends IUnknown { <nl> <nl> - 	 / * * <nl> - 	 * The Class ByReference . <nl> - 	 * / <nl> - 	 public static class ByReference extends IDispatch implements <nl> - 	 	 	 Structure . ByReference { <nl> - 	 } <nl> - <nl> - 	 / * * The Constant IID _ IDispatch . * / <nl> - 	 public final static IID IID _ IDispatch = new IID ( <nl> - 	 	 	 " 00020400 - 0000 - 0000 - C000 - 000000000046 " ) ; <nl> - <nl> - 	 / * * <nl> - 	 * Instantiates a new i dispatch . <nl> - 	 * / <nl> - 	 public IDispatch ( ) { <nl> - 	 } <nl> - <nl> - 	 / * * <nl> - 	 * Instantiates a new i dispatch . <nl> - 	 * <nl> - 	 * @ param pvInstance <nl> - 	 * the pv instance <nl> - 	 * / <nl> - 	 public IDispatch ( Pointer pvInstance ) { <nl> - 	 	 super ( pvInstance ) ; <nl> - 	 } <nl> - <nl> - 	 / * * <nl> - 	 * Gets the type info count . <nl> - 	 * <nl> - 	 * @ param pctinfo <nl> - 	 * the pctinfo <nl> - 	 * @ return the hresult <nl> - 	 * / <nl> - 	 public HRESULT GetTypeInfoCount ( IntByReference pctinfo ) { <nl> - 	 	 Pointer vptr = this . getPointer ( ) . getPointer ( 0 ) ; <nl> - 	 	 Function func = Function . getFunction ( vptr . getPointer ( 12 ) ) ; <nl> - 	 	 int hr = func . invokeInt ( new Object [ ] { this . getPointer ( ) , pctinfo } ) ; <nl> - <nl> - 	 	 return new HRESULT ( hr ) ; <nl> - 	 } <nl> - <nl> - 	 / * * <nl> - 	 * Gets the type info . <nl> - 	 * <nl> - 	 * @ param iTInfo <nl> - 	 * the i t info <nl> - 	 * @ param lcid <nl> - 	 * the lcid <nl> - 	 * @ param ppTInfo <nl> - 	 * the pp t info <nl> - 	 * @ return the hresult <nl> - 	 * / <nl> - 	 public HRESULT GetTypeInfo ( UINT iTInfo , LCID lcid , <nl> - 	 	 	 PointerByReference ppTInfo ) { <nl> - 	 	 Pointer vptr = this . getPointer ( ) . getPointer ( 0 ) ; <nl> - 	 	 Function func = Function . getFunction ( vptr . getPointer ( 16 ) ) ; <nl> - 	 	 int hr = func . invokeInt ( new Object [ ] { this . getPointer ( ) , iTInfo , lcid , <nl> - 	 	 	 	 ppTInfo } ) ; <nl> - <nl> - 	 	 return new HRESULT ( hr ) ; <nl> - 	 } <nl> - <nl> - 	 / * * <nl> - 	 * Gets the i ds of names . <nl> - 	 * <nl> - 	 * @ param riid <nl> - 	 * the riid <nl> - 	 * @ param rgszNames <nl> - 	 * the rgsz names <nl> - 	 * @ param cNames <nl> - 	 * the c names <nl> - 	 * @ param lcid <nl> - 	 * the lcid <nl> - 	 * @ param rgDispId <nl> - 	 * the rg disp id <nl> - 	 * @ return the hresult <nl> - 	 * / <nl> - 	 public HRESULT GetIDsOfNames ( IID riid , WString [ ] rgszNames , int cNames , <nl> - 	 	 	 LCID lcid , DISPIDByReference rgDispId ) { <nl> - <nl> - 	 	 Pointer vptr = this . getPointer ( ) . getPointer ( 0 ) ; <nl> - 	 	 Function func = Function . getFunction ( vptr . getPointer ( 20 ) ) ; <nl> - 	 	 int hr = func . invokeInt ( new Object [ ] { this . getPointer ( ) , riid , <nl> - 	 	 	 	 rgszNames , cNames , lcid , rgDispId } ) ; <nl> - <nl> - 	 	 return new HRESULT ( hr ) ; <nl> - 	 } <nl> - <nl> - 	 / * * <nl> - 	 * Invoke . <nl> - 	 * <nl> - 	 * @ param dispIdMember <nl> - 	 * the disp id member <nl> - 	 * @ param riid <nl> - 	 * the riid <nl> - 	 * @ param lcid <nl> - 	 * the lcid <nl> - 	 * @ param wFlags <nl> - 	 * the w flags <nl> - 	 * @ param pDispParams <nl> - 	 * the disp params <nl> - 	 * @ param pVarResult <nl> - 	 * the var result <nl> - 	 * @ param pExcepInfo <nl> - 	 * the excep info <nl> - 	 * @ param puArgErr <nl> - 	 * the pu arg err <nl> - 	 * @ return the hresult <nl> - 	 * / <nl> - 	 public HRESULT Invoke ( DISPID dispIdMember , IID riid , LCID lcid , <nl> - 	 	 	 DISPID wFlags , DISPPARAMS pDispParams , <nl> - 	 	 	 VARIANT . ByReference pVarResult , EXCEPINFO . ByReference pExcepInfo , <nl> - 	 	 	 IntByReference puArgErr ) { <nl> - <nl> - 	 	 Pointer vptr = this . getPointer ( ) . getPointer ( 0 ) ; <nl> - 	 	 Function func = Function . getFunction ( vptr . getPointer ( 24 ) ) ; <nl> - 	 	 int hr = func . invokeInt ( new Object [ ] { this . getPointer ( ) , dispIdMember , <nl> - 	 	 	 	 riid , lcid , wFlags , pDispParams , pVarResult , pExcepInfo , <nl> - 	 	 	 	 puArgErr } ) ; <nl> - <nl> - 	 	 return new HRESULT ( hr ) ; <nl> - 	 } <nl> + / * * <nl> + * The Class ByReference . <nl> + * / <nl> + public static class ByReference extends IDispatch implements <nl> + Structure . ByReference { <nl> + } <nl> + <nl> + / * * The Constant IID _ IDispatch . * / <nl> + public final static IID IID _ IDispatch = new IID ( <nl> + " 00020400 - 0000 - 0000 - C000 - 000000000046 " ) ; <nl> + <nl> + / * * <nl> + * Instantiates a new i dispatch . <nl> + * / <nl> + public IDispatch ( ) { <nl> + } <nl> + <nl> + / * * <nl> + * Instantiates a new i dispatch . <nl> + * <nl> + * @ param pvInstance <nl> + * the pv instance <nl> + * / <nl> + public IDispatch ( Pointer pvInstance ) { <nl> + super ( pvInstance ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Gets the type info count . <nl> + * <nl> + * @ param pctinfo <nl> + * the pctinfo <nl> + * @ return the hresult <nl> + * / <nl> + public HRESULT GetTypeInfoCount ( IntByReference pctinfo ) { <nl> + Pointer vptr = this . getPointer ( ) . getPointer ( 0 ) ; <nl> + Function func = Function . getFunction ( vptr . getPointer ( 12 ) ) ; <nl> + int hr = func . invokeInt ( new Object [ ] { this . getPointer ( ) , pctinfo } ) ; <nl> + <nl> + return new HRESULT ( hr ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Gets the type info . <nl> + * <nl> + * @ param iTInfo <nl> + * the i t info <nl> + * @ param lcid <nl> + * the lcid <nl> + * @ param ppTInfo <nl> + * the pp t info <nl> + * @ return the hresult <nl> + * / <nl> + public HRESULT GetTypeInfo ( UINT iTInfo , LCID lcid , <nl> + PointerByReference ppTInfo ) { <nl> + Pointer vptr = this . getPointer ( ) . getPointer ( 0 ) ; <nl> + Function func = Function . getFunction ( vptr . getPointer ( 16 ) ) ; <nl> + int hr = func . invokeInt ( new Object [ ] { this . getPointer ( ) , iTInfo , lcid , <nl> + ppTInfo } ) ; <nl> + <nl> + return new HRESULT ( hr ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Gets the i ds of names . <nl> + * <nl> + * @ param riid <nl> + * the riid <nl> + * @ param rgszNames <nl> + * the rgsz names <nl> + * @ param cNames <nl> + * the c names <nl> + * @ param lcid <nl> + * the lcid <nl> + * @ param rgDispId <nl> + * the rg disp id <nl> + * @ return the hresult <nl> + * / <nl> + public HRESULT GetIDsOfNames ( IID riid , WString [ ] rgszNames , int cNames , <nl> + LCID lcid , DISPIDByReference rgDispId ) { <nl> + <nl> + Pointer vptr = this . getPointer ( ) . getPointer ( 0 ) ; <nl> + Function func = Function . getFunction ( vptr . getPointer ( 20 ) ) ; <nl> + int hr = func . invokeInt ( new Object [ ] { this . getPointer ( ) , riid , <nl> + rgszNames , cNames , lcid , rgDispId } ) ; <nl> + <nl> + return new HRESULT ( hr ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Invoke . <nl> + * <nl> + * @ param dispIdMember <nl> + * the disp id member <nl> + * @ param riid <nl> + * the riid <nl> + * @ param lcid <nl> + * the lcid <nl> + * @ param wFlags <nl> + * the w flags <nl> + * @ param pDispParams <nl> + * the disp params <nl> + * @ param pVarResult <nl> + * the var result <nl> + * @ param pExcepInfo <nl> + * the excep info <nl> + * @ param puArgErr <nl> + * the pu arg err <nl> + * @ return the hresult <nl> + * / <nl> + public HRESULT Invoke ( DISPID dispIdMember , IID riid , LCID lcid , <nl> + DISPID wFlags , DISPPARAMS pDispParams , <nl> + VARIANT . ByReference pVarResult , EXCEPINFO . ByReference pExcepInfo , <nl> + IntByReference puArgErr ) { <nl> + <nl> + Pointer vptr = this . getPointer ( ) . getPointer ( 0 ) ; <nl> + Function func = Function . getFunction ( vptr . getPointer ( 24 ) ) ; <nl> + int hr = func . invokeInt ( new Object [ ] { this . getPointer ( ) , dispIdMember , <nl> + riid , lcid , wFlags , pDispParams , pVarResult , pExcepInfo , <nl> + puArgErr } ) ; <nl> + <nl> + return new HRESULT ( hr ) ; <nl> + } <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> index ae28ea2 . . a11cd6f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> @ @ - 1214 , 5 + 1214 , 4 @ @ public interface OaIdl { <nl> 	 	 	 	 	 	 	 " wMinorVerNum " , " tdescAlias " , " idldescType " } ) ; <nl> 	 	 } <nl> 	 } <nl> - <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java <nl> index 3b7df2f . . cb50582 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java <nl> @ @ - 32 , 181 + 32 , 187 @ @ import com . sun . jna . win32 . W32APIOptions ; <nl> * / <nl> public interface Ole32 extends StdCallLibrary { <nl> <nl> - 	 / * * The instance . * / <nl> - 	 Ole32 INSTANCE = ( Ole32 ) Native . loadLibrary ( " Ole32 " , Ole32 . class , <nl> - 	 	 	 W32APIOptions . UNICODE _ OPTIONS ) ; <nl> + / * * The instance . * / <nl> + Ole32 INSTANCE = ( Ole32 ) Native . loadLibrary ( " Ole32 " , Ole32 . class , <nl> + W32APIOptions . UNICODE _ OPTIONS ) ; <nl> <nl> - 	 / * * <nl> - 	 * Creates a GUID , a unique 128 - bit integer used for CLSIDs and interface <nl> - 	 * identifiers . <nl> - 	 * <nl> - 	 * @ param pguid <nl> - 	 * A pointer to the requested GUID . <nl> - 	 * @ return S _ OK if the GUID was successfully created . <nl> - 	 * / <nl> - 	 HRESULT CoCreateGuid ( GUID pguid ) ; <nl> + / * * <nl> + * Creates a GUID , a unique 128 - bit integer used for CLSIDs and interface <nl> + * identifiers . <nl> + * <nl> + * @ param pguid <nl> + * A pointer to the requested GUID . <nl> + * @ return S _ OK if the GUID was successfully created . <nl> + * / <nl> + HRESULT CoCreateGuid ( GUID pguid ) ; <nl> <nl> - / * * @ deprecated use { @ link # CoCreateGuid ( GUID ) } . * / <nl> - 	 HRESULT CoCreateGuid ( GUID . ByReference pguid ) ; <nl> + / * * @ deprecated use { @ link # CoCreateGuid ( GUID ) } . * / <nl> + HRESULT CoCreateGuid ( GUID . ByReference pguid ) ; <nl> <nl> - 	 / * * <nl> - 	 * Converts a globally unique identifier ( GUID ) into a string of printable <nl> - 	 * characters . <nl> - 	 * <nl> - 	 * @ param rguid <nl> - 	 * The GUID to be converted . <nl> - 	 * @ param lpsz <nl> - 	 * A pointer to a caller - allocated string variable to receive the <nl> - 	 * resulting string . <nl> - 	 * @ param cchMax <nl> - 	 * The number of characters available in the lpsz buffer . <nl> - 	 * @ return If the function succeeds , the return value is the number of <nl> - 	 * characters in the returned string , including the null terminator . <nl> - 	 * If the buffer is too small to contain the string , the return <nl> - 	 * value is 0 . <nl> - 	 * / <nl> - 	 int StringFromGUID2 ( GUID rguid , char [ ] lpsz , int cchMax ) ; <nl> + / * * <nl> + * Converts a globally unique identifier ( GUID ) into a string of printable <nl> + * characters . <nl> + * <nl> + * @ param rguid <nl> + * The GUID to be converted . <nl> + * @ param lpsz <nl> + * A pointer to a caller - allocated string variable to receive the <nl> + * resulting string . <nl> + * @ param cchMax <nl> + * The number of characters available in the lpsz buffer . <nl> + * @ return If the function succeeds , the return value is the number of <nl> + * characters in the returned string , including the null terminator . <nl> + * If the buffer is too small to contain the string , the return <nl> + * value is 0 . <nl> + * / <nl> + int StringFromGUID2 ( GUID rguid , char [ ] lpsz , int cchMax ) ; <nl> <nl> - 	 / * * <nl> - 	 * Converts a string generated by the StringFromIID function back into the <nl> - 	 * original interface identifier ( IID ) . <nl> - 	 * <nl> - 	 * @ param lpsz <nl> - 	 * A pointer to the string representation of the IID . <nl> - 	 * @ param lpiid <nl> - 	 * A pointer to the requested IID on return . <nl> - 	 * @ return This function can return the standard return values E _ INVALIDARG , <nl> - 	 * E _ OUTOFMEMORY , and S _ OK . <nl> - 	 * / <nl> - 	 HRESULT IIDFromString ( String lpsz , GUID lpiid ) ; <nl> + / * * <nl> + * Converts a string generated by the StringFromIID function back into the <nl> + * original interface identifier ( IID ) . <nl> + * <nl> + * @ param lpsz <nl> + * A pointer to the string representation of the IID . <nl> + * @ param lpiid <nl> + * A pointer to the requested IID on return . <nl> + * @ return This function can return the standard return values E _ INVALIDARG , <nl> + * E _ OUTOFMEMORY , and S _ OK . <nl> + * / <nl> + HRESULT IIDFromString ( String lpsz , GUID lpiid ) ; <nl> <nl> - 	 / * * <nl> - 	 * Initializes the COM library on the current thread and identifies the <nl> - 	 * concurrency model as single - thread apartment ( STA ) . <nl> - 	 * <nl> - 	 * New applications should call CoInitializeEx instead of CoInitialize . <nl> - 	 * <nl> - 	 * pvReserved [ in , optional ] This parameter is reserved and must be NULL . <nl> - 	 * <nl> - 	 * @ param pvReserved <nl> - 	 * the pv reserved <nl> - 	 * @ return S _ OK The COM library was initialized successfully on this thread . <nl> - 	 * <nl> - 	 * S _ FALSE The COM library is already initialized on this thread . <nl> - 	 * <nl> - 	 * RPC _ E _ CHANGED _ MODE A previous call to CoInitializeEx specified <nl> - 	 * the concurrency model for this thread as multithread apartment <nl> - 	 * ( MTA ) . This could also indicate that a change from <nl> - 	 * neutral - threaded apartment to single - threaded apartment has <nl> - 	 * occurred . <nl> - 	 * / <nl> - 	 HRESULT CoInitialize ( LPVOID pvReserved ) ; <nl> + / * * <nl> + * Initializes the COM library on the current thread and identifies the <nl> + * concurrency model as single - thread apartment ( STA ) . <nl> + * <nl> + * New applications should call CoInitializeEx instead of CoInitialize . <nl> + * <nl> + * pvReserved [ in , optional ] This parameter is reserved and must be NULL . <nl> + * <nl> + * @ param pvReserved <nl> + * the pv reserved <nl> + * @ return S _ OK The COM library was initialized successfully on this thread . <nl> + * <nl> + * S _ FALSE The COM library is already initialized on this thread . <nl> + * <nl> + * RPC _ E _ CHANGED _ MODE A previous call to CoInitializeEx specified <nl> + * the concurrency model for this thread as multithread apartment <nl> + * ( MTA ) . This could also indicate that a change from <nl> + * neutral - threaded apartment to single - threaded apartment has <nl> + * occurred . <nl> + * / <nl> + HRESULT CoInitialize ( LPVOID pvReserved ) ; <nl> <nl> - 	 / * * <nl> - 	 * Initializes the COM library for use by the calling thread , sets the <nl> - 	 * thread ' s concurrency model , and creates a new apartment for the thread if <nl> - 	 * one is required . <nl> - 	 * <nl> - 	 * @ param reserved <nl> - 	 * This parameter is reserved and must be NULL . <nl> - 	 * @ param dwCoInit <nl> - 	 * The concurrency model and initialization options for the <nl> - 	 * thread . Values for this parameter are taken from the COINIT <nl> - 	 * enumeration . Any combination of values from COINIT can be <nl> - 	 * used , except that the COINIT _ APARTMENTTHREADED and <nl> - 	 * COINIT _ MULTITHREADED flags cannot both be set . The default <nl> - 	 * ( and only sane choice ) is COINIT _ MULTITHREADED . <nl> - 	 * @ return This function can return the standard return values E _ INVALIDARG , <nl> - 	 * E _ OUTOFMEMORY , and E _ UNEXPECTED , as well as the following values . <nl> - 	 * S _ OK , S _ FALSE , RPC _ E _ CHANGED _ MODE <nl> - 	 * / <nl> - 	 HRESULT CoInitializeEx ( Pointer reserved , int dwCoInit ) ; <nl> + int COINIT _ APARTMENTTHREADED = 0x2 ; <nl> + int COINIT _ MULTITHREADED = 0x0 ; <nl> + int COINIT _ DISABLE _ OLE1DDE = 0x4 ; <nl> + int COINIT _ SPEED _ OVER _ MEMORY = 0x8 ; <nl> <nl> - 	 / * * <nl> - 	 * Closes the COM library on the current thread , unloads all DLLs loaded by <nl> - 	 * the thread , frees any other resources that the thread maintains , and <nl> - 	 * forces all RPC connections on the thread to close . <nl> - 	 * <nl> - 	 * / <nl> - 	 void CoUninitialize ( ) ; <nl> + / * * <nl> + * Initializes the COM library for use by the calling thread , sets the <nl> + * thread ' s concurrency model , and creates a new apartment for the thread if <nl> + * one is required . <nl> + * <nl> + * @ param reserved <nl> + * This parameter is reserved and must be NULL . <nl> + * @ param dwCoInit <nl> + * The concurrency model and initialization options for the <nl> + * thread . Values for this parameter are taken from the COINIT <nl> + * enumeration . Any combination of values from COINIT can be <nl> + * used , except that the { @ link # COINIT _ APARTMENTTHREADED } and <nl> + * { @ link # COINIT _ MULTITHREADED } flags cannot both be set . The <nl> + * default ( and only sane choice ) is <nl> + * { @ link # COINIT _ MULTITHREADED } . <nl> + * @ return This function can return the standard return values E _ INVALIDARG , <nl> + * E _ OUTOFMEMORY , and E _ UNEXPECTED , as well as the following values . <nl> + * S _ OK , S _ FALSE , RPC _ E _ CHANGED _ MODE <nl> + * / <nl> + HRESULT CoInitializeEx ( Pointer reserved , int dwCoInit ) ; <nl> <nl> - 	 / * * <nl> - 	 * Creates a single uninitialized object of the class associated with a <nl> - 	 * specified CLSID . <nl> - 	 * <nl> - 	 * @ param rclsid <nl> - 	 * The CLSID associated with the data and code that will be used <nl> - 	 * to create the object . <nl> - 	 * @ param pUnkOuter <nl> - 	 * If NULL , indicates that the object is not being created as <nl> - 	 * part of an aggregate . If non - NULL , pointer to the aggregate <nl> - 	 * object ' s IUnknown interface ( the controlling IUnknown ) . <nl> - 	 * @ param dwClsContext <nl> - 	 * Context in which the code that manages the newly created <nl> - 	 * object will run . The values are taken from the enumeration <nl> - 	 * CLSCTX defined in WTypes . <nl> - 	 * @ param riid <nl> - 	 * A reference to the identifier of the interface to be used to <nl> - 	 * communicate with the object . <nl> - 	 * @ param ppv <nl> - 	 * Address of pointer variable that receives the interface <nl> - 	 * pointer requested in riid . Upon successful return , * ppv <nl> - 	 * contains the requested interface pointer . Upon failure , * ppv <nl> - 	 * contains NULL . <nl> - 	 * @ return an HRESULT <nl> - 	 * / <nl> - 	 HRESULT CoCreateInstance ( GUID rclsid , Pointer pUnkOuter , int dwClsContext , <nl> - 	 	 	 GUID riid , PointerByReference ppv ) ; <nl> + / * * <nl> + * Closes the COM library on the current thread , unloads all DLLs loaded by <nl> + * the thread , frees any other resources that the thread maintains , and <nl> + * forces all RPC connections on the thread to close . <nl> + * <nl> + * / <nl> + void CoUninitialize ( ) ; <nl> <nl> - 	 / * * <nl> - 	 * Looks up a CLSID in the registry , given a ProgID . <nl> - 	 * <nl> - 	 * @ param lpszProgID <nl> - 	 * [ in ] A pointer to the ProgID whose CLSID is requested . <nl> - 	 * @ param lpclsid <nl> - 	 * [ out ] Receives a pointer to the retrieved CLSID on return . <nl> - 	 * <nl> - 	 * @ return S _ OK The CLSID was retrieved successfully . <nl> - 	 * <nl> - 	 * CO _ E _ CLASSSTRING The registered CLSID for the ProgID is invalid . <nl> - 	 * <nl> - 	 * REGDB _ E _ WRITEREGDB An error occurred writing the CLSID to the <nl> - 	 * registry . See Remarks below . <nl> - 	 * <nl> - 	 * Remarks Given a ProgID , CLSIDFromProgID looks up its associated <nl> - 	 * CLSID in the registry . If the ProgID cannot be found in the <nl> - 	 * registry , CLSIDFromProgID creates an OLE 1 CLSID for the ProgID <nl> - 	 * and a CLSID entry in the registry . Because of the restrictions <nl> - 	 * placed on OLE 1 CLSID values , CLSIDFromProgID and CLSIDFromString <nl> - 	 * are the only two functions that can be used to generate a CLSID <nl> - 	 * for an OLE 1 object . <nl> - 	 * / <nl> - 	 HRESULT CLSIDFromProgID ( String lpszProgID , CLSID lpclsid ) ; <nl> + / * * <nl> + * Creates a single uninitialized object of the class associated with a <nl> + * specified CLSID . <nl> + * <nl> + * @ param rclsid <nl> + * The CLSID associated with the data and code that will be used <nl> + * to create the object . <nl> + * @ param pUnkOuter <nl> + * If NULL , indicates that the object is not being created as <nl> + * part of an aggregate . If non - NULL , pointer to the aggregate <nl> + * object ' s IUnknown interface ( the controlling IUnknown ) . <nl> + * @ param dwClsContext <nl> + * Context in which the code that manages the newly created <nl> + * object will run . The values are taken from the enumeration <nl> + * CLSCTX defined in WTypes . <nl> + * @ param riid <nl> + * A reference to the identifier of the interface to be used to <nl> + * communicate with the object . <nl> + * @ param ppv <nl> + * Address of pointer variable that receives the interface <nl> + * pointer requested in riid . Upon successful return , * ppv <nl> + * contains the requested interface pointer . Upon failure , * ppv <nl> + * contains NULL . <nl> + * @ return an HRESULT <nl> + * / <nl> + HRESULT CoCreateInstance ( GUID rclsid , Pointer pUnkOuter , int dwClsContext , <nl> + GUID riid , PointerByReference ppv ) ; <nl> <nl> - 	 / * * <nl> - 	 * Converts a string generated by the StringFromCLSID function back into the <nl> - 	 * original CLSID . <nl> - 	 * <nl> - 	 * @ param lpsz <nl> - 	 * [ in ] The string representation of the CLSID . <nl> - 	 * <nl> - 	 * @ param pclsid <nl> - 	 * [ out ] A pointer to the CLSID . <nl> - 	 * <nl> - 	 * @ return Return value <nl> - 	 * <nl> - 	 * This function can return the standard return value E _ INVALIDARG , <nl> - 	 * as well as the following values . <nl> - 	 * <nl> - 	 * NOERROR The CLSID was obtained successfully . <nl> - 	 * <nl> - 	 * CO _ E _ CLASSSTRING The class string was improperly formatted . <nl> - 	 * <nl> - 	 * REGDB _ E _ CLASSNOTREG The CLSID corresponding to the class string <nl> - 	 * was not found in the registry . <nl> - 	 * <nl> - 	 * REGDB _ E _ READREGDB The registry could not be opened for reading . <nl> - 	 * / <nl> - 	 HRESULT CLSIDFromString ( WString lpsz , CLSID pclsid ) ; <nl> + / * * <nl> + * Looks up a CLSID in the registry , given a ProgID . <nl> + * <nl> + * @ param lpszProgID <nl> + * [ in ] A pointer to the ProgID whose CLSID is requested . <nl> + * @ param lpclsid <nl> + * [ out ] Receives a pointer to the retrieved CLSID on return . <nl> + * <nl> + * @ return S _ OK The CLSID was retrieved successfully . <nl> + * <nl> + * CO _ E _ CLASSSTRING The registered CLSID for the ProgID is invalid . <nl> + * <nl> + * REGDB _ E _ WRITEREGDB An error occurred writing the CLSID to the <nl> + * registry . See Remarks below . <nl> + * <nl> + * Remarks Given a ProgID , CLSIDFromProgID looks up its associated <nl> + * CLSID in the registry . If the ProgID cannot be found in the <nl> + * registry , CLSIDFromProgID creates an OLE 1 CLSID for the ProgID <nl> + * and a CLSID entry in the registry . Because of the restrictions <nl> + * placed on OLE 1 CLSID values , CLSIDFromProgID and CLSIDFromString <nl> + * are the only two functions that can be used to generate a CLSID <nl> + * for an OLE 1 object . <nl> + * / <nl> + HRESULT CLSIDFromProgID ( String lpszProgID , CLSID lpclsid ) ; <nl> + <nl> + / * * <nl> + * Converts a string generated by the StringFromCLSID function back into the <nl> + * original CLSID . <nl> + * <nl> + * @ param lpsz <nl> + * [ in ] The string representation of the CLSID . <nl> + * <nl> + * @ param pclsid <nl> + * [ out ] A pointer to the CLSID . <nl> + * <nl> + * @ return Return value <nl> + * <nl> + * This function can return the standard return value E _ INVALIDARG , <nl> + * as well as the following values . <nl> + * <nl> + * NOERROR The CLSID was obtained successfully . <nl> + * <nl> + * CO _ E _ CLASSSTRING The class string was improperly formatted . <nl> + * <nl> + * REGDB _ E _ CLASSNOTREG The CLSID corresponding to the class string <nl> + * was not found in the registry . <nl> + * <nl> + * REGDB _ E _ READREGDB The registry could not be opened for reading . <nl> + * / <nl> + HRESULT CLSIDFromString ( WString lpsz , CLSID pclsid ) ; <nl> <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index 782cb97 . . a17c58a 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 411 , 7 + 411 , 6 @ @ public class Kernel32Test extends TestCase { <nl> assertTrue ( processInformation . dwProcessId . longValue ( ) > 0 ) ; <nl> } <nl> <nl> - / / TODO <nl> public void testCreateProcessW ( ) { <nl> WinBase . STARTUPINFO startupInfo = new WinBase . STARTUPINFO ( ) ; <nl> WinBase . PROCESS _ INFORMATION . ByReference processInformation = new WinBase . PROCESS _ INFORMATION . ByReference ( ) ; <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index a1f7bf8 . . 7fc777a 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 562 , 7 + 562 , 7 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray arr , <nl> int error = GET _ LAST _ ERROR ( ) ; <nl> if ( error ) { <nl> char emsg [ 1024 ] ; <nl> - snprintf ( msg , sizeof ( msg ) , " [ % d ] % s " , error , STR _ ERROR ( error , emsg , sizeof ( emsg ) ) ) ; <nl> + snprintf ( msg , sizeof ( msg ) , " [ % d ] % s " , error , STR _ ERROR ( error , emsg , sizeof ( emsg ) ) ) ; <nl> throw _ type = ELastError ; <nl> throw _ msg = msg ; <nl> }
diff - - git a / build . xml b / build . xml <nl> index bddaab4 . . 7ce2a2c 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 10 , 7 + 10 , 7 @ @ <nl> <nl> Cross - compile by specifying - Dos . prefix = { name - arch } to ant <nl> ( cross - compile currently only configured / tested on w32ce - arm and <nl> - android - arm ) <nl> + android - arm / - x86 ) <nl> <nl> Use ANT _ OPTS = - Dskip - native to skip building native parts . <nl> Use ANT _ OPTS = - Dheadless to run tests headless <nl> @ @ - 170 , 6 + 170 , 7 @ @ <nl> < condition property = " vmopt . arch " value = " $ { vm . 64 } " else = " $ { vm . 32 } " > <nl> < and > <nl> < not > < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " trim = " true " / > < / not > <nl> + < not > < equals arg1 = " $ { os . prefix } " arg2 = " android - x86 " trim = " true " / > < / not > <nl> < or > <nl> < equals arg1 = " $ { sun . arch . data . model } " arg2 = " 64 " trim = " true " / > <nl> < equals arg1 = " $ { com . ibm . vm . bitmode } " arg2 = " 64 " trim = " true " / > <nl> @ @ - 549 , 6 + 550 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - sparc . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - sparcv9 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / android - arm . jar " overwrite = " true " / > <nl> + < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / android - x86 . jar " overwrite = " true " / > <nl> < delete failOnError = " false " includeEmptyDirs = " true " > <nl> < fileset dir = " $ { build . native } " includes = " * . o , * jnidispatch * " / > <nl> < / delete > <nl> @ @ - 607 , 7 + 609 , 10 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < equals arg1 = " $ { os . prefix } " arg2 = " w32ce - arm " / > <nl> < / condition > <nl> < condition property = " make . OS " value = " OS = android " > <nl> - < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > <nl> + < or > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " android - x86 " / > <nl> + < / or > <nl> < / condition > <nl> < property name = " make . OS " value = " IGNORE = " / > <nl> < ! - - Ensure Makefile ARCH property properly set - - > <nl> @ @ - 617 , 6 + 622 , 9 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < condition property = " ARCH " value = " arm " > <nl> < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > <nl> < / condition > <nl> + < condition property = " ARCH " value = " x86 " > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " android - x86 " / > <nl> + < / condition > <nl> < condition property = " ARCH " value = " ppc " > <nl> < equals arg1 = " $ { os . prefix } " arg2 = " aix - ppc " / > <nl> < / condition > <nl> @ @ - 865 , 7 + 873 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < fail if = " testfailure " unless = " clover " > One or more tests failed < / fail > <nl> < / target > <nl> <nl> - < target name = " contrib - test " depends = " contrib - jars , compile - tests " > <nl> + < target name = " test - contrib " depends = " compile - tests , contrib - jars " > <nl> < subant target = " test " failonerror = " true " inheritall = " true " inheritrefs = " true " > <nl> < property name = " file . reference . jna . build " location = " $ { build } " / > <nl> < property name = " file . reference . jna . jar " location = " $ { build } / $ { jar } " / > <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index f9b5534 . . 408acb9 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 16 , 7 + 16 , 7 @ @ <nl> # Solaris ( i386 / amd64 / sparc / sparcv9 ) <nl> # AIX ( ppc / ppc64 ) <nl> # FreeBSD / OpenBSD / NetBSD ( i386 / amd64 ) <nl> - # Android ( arm ) <nl> + # Android ( arm / x86 ) <nl> # <nl> # Built , but with outstanding bugs ( not necessarily within JNA ) : <nl> # <nl> @ @ - 28 , 7 + 28 , 7 @ @ <nl> # <nl> # The android build requires the android SDK + NDK for cross - compilation ; <nl> # make the tools available on the path and compile with <nl> - # " ant - Dos . prefix = android - arm " . Put the NDK tools in the path and adjust <nl> + # " ant - Dos . prefix = android - arm ( - x86 ) " . Put the NDK tools in the path and adjust <nl> # NDK _ PLATFORM below or set it in your environment . <nl> # <nl> <nl> @ @ - 111 , 20 + 111 , 29 @ @ STRIP = strip - x <nl> # Android build ( cross - compile ) requires the android SDK + NDK . <nl> # Ensure the following tools are in your path and adjust NDK _ PLATFORM as needed <nl> ifeq ( $ ( OS ) , android ) <nl> - CC = arm - linux - androideabi - gcc <nl> - CPP = arm - linux - androideabi - cpp <nl> - LD = arm - linux - androideabi - gcc <nl> - RANLIB = arm - linux - androideabi - ranlib <nl> - STRIP = arm - linux - androideabi - strip - x <nl> + ifeq ( $ ( ARCH ) , arm ) <nl> + PREFIX = arm - linux - androideabi - <nl> + COPT + = - mthumb - interwork - march = armv5te - mtune = xscale - msoft - float - fstack - protector <nl> + HOST = arm - linux - eabi <nl> + else <nl> + PREFIX = i686 - android - linux - <nl> + COPT + = - march = i686 <nl> + HOST = i686 - linux <nl> + endif <nl> + CC = $ ( PREFIX ) gcc <nl> + CPP = $ ( PREFIX ) cpp <nl> + LD = $ ( PREFIX ) gcc <nl> + RANLIB = $ ( PREFIX ) ranlib <nl> + STRIP = $ ( PREFIX ) strip - x <nl> CDEFINES = - DNO _ JAWT - DNO _ WEAK _ GLOBALS - DFFI _ MMAP _ EXEC _ WRIT = 1 - DFFI _ MMAP _ EXEC _ SELINUX = 0 <nl> - COPT + = - fpic - mthumb - interwork - ffunction - sections - funwind - tables - fstack - protector - fno - short - enums - march = armv5te - mtune = xscale - msoft - float <nl> + COPT + = - fpic - ffunction - sections - funwind - tables - fno - short - enums <nl> NDK _ PLATFORM ? = / Developer / Applications / android - ndk - r7c / platforms / android - 14 <nl> JAVA _ INCLUDES = <nl> - CINCLUDES + = - I " $ ( NDK _ PLATFORM ) / arch - arm / usr / include " # - I / usr / include <nl> - LIBS = - nostdlib - L " $ ( NDK _ PLATFORM ) / arch - arm / usr / lib / " - lgcc - lc - ldl - lm <nl> + CINCLUDES + = - I " $ ( NDK _ PLATFORM ) / arch - $ ( ARCH ) / usr / include " # - I / usr / include <nl> + LIBS = - nostdlib - L " $ ( NDK _ PLATFORM ) / arch - $ ( ARCH ) / usr / lib / " - lgcc - lc - ldl - lm <nl> LDFLAGS + = - Wl , - shared , - Bsymbolic <nl> FFI _ ENV = CPP = " $ ( CPP ) " CC = " $ ( CC ) " CFLAGS = " $ ( COPT ) $ ( CDEBUG ) $ ( CINCLUDES ) " CPPFLAGS = " $ ( CDEFINES ) $ ( CINCLUDES ) " LIBS = " $ ( LIBS ) " RANLIB = " $ ( RANLIB ) " <nl> - FFI _ CONFIG = - - enable - static - - disable - shared - - with - pic = yes - - host = arm - linux - eabi <nl> + FFI _ CONFIG = - - enable - static - - disable - shared - - with - pic = yes - - host = $ ( HOST ) <nl> endif <nl> <nl> # W32CE build requires cegcc cross - compiler and phoneME JavaME implementation
diff - - git a / build . xml b / build . xml <nl> index 3ec5c84 . . bddaab4 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 167 , 7 + 167 , 7 @ @ <nl> < condition property = " vm . 32 " value = " - d32 " else = " - Ddummy " > <nl> < not > < os family = " windows " / > < / not > <nl> < / condition > <nl> - < condition property = " vm . arch " value = " $ { vm . 64 } " else = " $ { vm . 32 } " > <nl> + < condition property = " vmopt . arch " value = " $ { vm . 64 } " else = " $ { vm . 32 } " > <nl> < and > <nl> < not > < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " trim = " true " / > < / not > <nl> < or > <nl> @ @ - 185 , 7 + 185 , 7 @ @ <nl> < condition property = " ld . preload " value = " LD _ PRELOAD _ 64 " else = " LD _ PRELOAD " > <nl> < and > <nl> < os name = " SunOS " / > <nl> - < equals arg1 = " $ { vm . arch } " arg2 = " $ { vm . 64 } " / > <nl> + < equals arg1 = " $ { vmopt . arch } " arg2 = " $ { vm . 64 } " / > <nl> < / and > <nl> < / condition > <nl> < property name = " build " value = " build " / > <nl> @ @ - 822 , 7 + 822 , 6 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < not > < os family = " mac " / > < / not > <nl> < / and > <nl> < / condition > <nl> - < property name = " vmopt . arch " value = " $ { vm . arch } " / > <nl> < property name = " tests . platform " value = " " / > <nl> < property name = " tests . exclude " value = " " / > <nl> < property name = " tests . exclude - patterns " value = " " / >
diff - - git a / test / com / sun / jna / LibraryLoadTest . java b / test / com / sun / jna / LibraryLoadTest . java <nl> index fbd8bc8 . . 6fc8c74 100644 <nl> - - - a / test / com / sun / jna / LibraryLoadTest . java <nl> + + + b / test / com / sun / jna / LibraryLoadTest . java <nl> @ @ - 154 , 9 + 154 , 14 @ @ public class LibraryLoadTest extends TestCase implements Paths { <nl> <nl> String newLibName = libName . replace ( " testlib " , UNICODE ) ; <nl> File dst = new File ( tmpdir , newLibName ) ; <nl> - dst . deleteOnExit ( ) ; <nl> copy ( src , dst ) ; <nl> - NativeLibrary . getInstance ( UNICODE , new TestLoader ( tmpdir ) ) ; <nl> + try { <nl> + NativeLibrary . getInstance ( UNICODE , new TestLoader ( tmpdir ) ) ; <nl> + dst . deleteOnExit ( ) ; <nl> + } <nl> + catch ( UnsatisfiedLinkError e ) { <nl> + fail ( " Library ' " + newLibName + " ' at " + dst + " could not be loaded : " + e ) ; <nl> + } <nl> } <nl> <nl> public void testLoadFrameworkLibrary ( ) {
diff - - git a / lib / native / freebsd - x86 - 64 . jar b / lib / native / freebsd - x86 - 64 . jar <nl> new file mode 100755 <nl> index 0000000 . . 6716399 <nl> Binary files / dev / null and b / lib / native / freebsd - x86 - 64 . jar differ <nl> diff - - git a / lib / native / freebsd - x86 . jar b / lib / native / freebsd - x86 . jar <nl> new file mode 100755 <nl> index 0000000 . . 6716399 <nl> Binary files / dev / null and b / lib / native / freebsd - x86 . jar differ <nl> diff - - git a / lib / native / openbsd - x86 - 64 . jar b / lib / native / openbsd - x86 - 64 . jar <nl> new file mode 100755 <nl> index 0000000 . . 6716399 <nl> Binary files / dev / null and b / lib / native / openbsd - x86 - 64 . jar differ <nl> diff - - git a / lib / native / openbsd - x86 . jar b / lib / native / openbsd - x86 . jar <nl> new file mode 100755 <nl> index 0000000 . . 6716399 <nl> Binary files / dev / null and b / lib / native / openbsd - x86 . jar differ <nl> diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java <nl> index 1bd340a . . d4fc34f 100644 <nl> - - - a / src / com / sun / jna / Platform . java <nl> + + + b / src / com / sun / jna / Platform . java <nl> @ @ - 262 , 10 + 262 , 16 @ @ public final class Platform { <nl> osPrefix = " sunos - " + arch ; <nl> break ; <nl> case Platform . FREEBSD : <nl> + osPrefix = " freebsd - " + arch ; <nl> + break ; <nl> case Platform . OPENBSD : <nl> + osPrefix = " openbsd - " + arch ; <nl> + break ; <nl> case Platform . NETBSD : <nl> + osPrefix = " netbsd - " + arch ; <nl> + break ; <nl> case Platform . KFREEBSD : <nl> - osPrefix = " bsd - " + arch ; <nl> + osPrefix = " kfreebsd - " + arch ; <nl> break ; <nl> default : <nl> osPrefix = name . toLowerCase ( ) ; <nl> diff - - git a / test / com / sun / jna / NativeLibraryTest . java b / test / com / sun / jna / NativeLibraryTest . java <nl> index c9f6bba . . b0f4f71 100644 <nl> - - - a / test / com / sun / jna / NativeLibraryTest . java <nl> + + + b / test / com / sun / jna / NativeLibraryTest . java <nl> @ @ - 41 , 6 + 41 , 7 @ @ public class NativeLibraryTest extends TestCase { <nl> { Platform . ANDROID , " lib " , " . so " } , <nl> { Platform . GNU , " lib " , " . so " } , <nl> { Platform . KFREEBSD , " lib " , " . so " } , <nl> + { Platform . NETBSD , " lib " , " . so " } , <nl> } ; <nl> for ( int i = 0 ; i < MAPPINGS . length ; i + + ) { <nl> int osType = ( ( Integer ) MAPPINGS [ i ] [ 0 ] ) . intValue ( ) ; <nl> diff - - git a / test / com / sun / jna / PlatformTest . java b / test / com / sun / jna / PlatformTest . java <nl> index ef36085 . . 55001c3 100644 <nl> - - - a / test / com / sun / jna / PlatformTest . java <nl> + + + b / test / com / sun / jna / PlatformTest . java <nl> @ @ - 57 , 16 + 57 , 16 @ @ public class PlatformTest extends TestCase { <nl> assertEquals ( " Wrong resource path Linux / ppc " , " linux - ppc " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> " powerpc " , " Linux " ) ) ; <nl> - assertEquals ( " Wrong resource path OpenBSD / x86 " , " bsd - x86 " , <nl> + assertEquals ( " Wrong resource path OpenBSD / x86 " , " openbsd - x86 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . OPENBSD , <nl> " x86 " , " OpenBSD " ) ) ; <nl> - assertEquals ( " Wrong resource path FreeBSD / x86 " , " bsd - x86 " , <nl> + assertEquals ( " Wrong resource path FreeBSD / x86 " , " freebsd - x86 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . FREEBSD , <nl> " x86 " , " FreeBSD " ) ) ; <nl> - assertEquals ( " Wrong resource path GNU / kFreeBSD / x86 " , " bsd - x86 " , <nl> + assertEquals ( " Wrong resource path GNU / kFreeBSD / x86 " , " kfreebsd - x86 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . KFREEBSD , <nl> " x86 " , " GNU / kFreeBSD " ) ) ; <nl> - assertEquals ( " Wrong resource path NetBSD / x86 " , " bsd - x86 " , <nl> + assertEquals ( " Wrong resource path NetBSD / x86 " , " netbsd - x86 " , <nl> Platform . getNativeLibraryResourcePrefix ( Platform . NETBSD , <nl> " x86 " , " NetBSD " ) ) ; <nl> assertEquals ( " Wrong resource path Linux / armv7l ( android ) " , " android - arm " ,
diff - - git a / build . xml b / build . xml <nl> index c1ac74c . . 0e611c8 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 225 , 12 + 225 , 17 @ @ <nl> < condition property = " os . prefix " value = " sunos - $ { jre . arch } " > <nl> < os name = " SunOS " / > <nl> < / condition > <nl> - < condition property = " os . prefix " value = " bsd - $ { jre . arch } " > <nl> - < or > <nl> - 	 < os name = " FreeBSD " / > <nl> + < condition property = " os . prefix " value = " freebsd - $ { jre . arch } " > <nl> + < os name = " FreeBSD " / > <nl> + < / condition > <nl> + < condition property = " os . prefix " value = " openbsd - $ { jre . arch } " > <nl> 	 < os name = " OpenBSD " / > <nl> - 	 < os name = " NetBSD " / > <nl> - < / or > <nl> + < / condition > <nl> + < condition property = " os . prefix " value = " netbsd - $ { jre . arch } " > <nl> + < os name = " NetBSD " / > <nl> + < / condition > <nl> + < condition property = " os . prefix " value = " kfreebsd - $ { jre . arch } " > <nl> + < os name = " GNU / kFreeBSD " / > <nl> < / condition > <nl> < fail unless = " os . prefix " message = " OS / arch not supported ( $ { os . name } / $ { jre . arch } ) , edit build . xml and native / Makefile to add it . " / > <nl> < ! - - Keep all natives separate - - > <nl> @ @ - 390 , 10 + 395 , 14 @ @ processor = arm ; osname = linux , <nl> com / sun / jna / linux - ia64 / libjnidispatch . so ; <nl> processor = ia64 ; osname = linux , <nl> <nl> - com / sun / jna / bsd - x86 / libjnidispatch . so ; <nl> - processor = x86 ; osname = openbsd ; osname = freebsd ; osname = netbsd , <nl> - com / sun / jna / bsd - x86 - 64 / libjnidispatch . so ; <nl> - processor = x86 - 64 ; osname = openbsd ; osname = freebsd ; osname = netbsd , <nl> + com / sun / jna / freebsd - x86 / libjnidispatch . so ; <nl> + processor = x86 ; osname = freebsd , <nl> + com / sun / jna / freebsd - x86 - 64 / libjnidispatch . so ; <nl> + processor = x86 - 64 ; osname = freebsd , <nl> + com / sun / jna / openbsd - x86 / libjnidispatch . so ; <nl> + processor = x86 ; osname = openbsd , <nl> + com / sun / jna / openbsd - x86 - 64 / libjnidispatch . so ; <nl> + processor = x86 - 64 ; osname = openbsd , <nl> <nl> com / sun / jna / darwin / libjnidispatch . jnilib ; <nl> osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> @ @ - 444 , 12 + 453 , 18 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < zipfileset src = " $ { lib . native } / sunos - sparcv9 . jar " <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / sunos - sparcv9 " / > <nl> - < zipfileset src = " $ { lib . native } / bsd - x86 . jar " <nl> + < zipfileset src = " $ { lib . native } / freebsd - x86 . jar " <nl> + includes = " * jnidispatch * " <nl> + prefix = " com / sun / jna / freebsd - x86 " / > <nl> + < zipfileset src = " $ { lib . native } / freebsd - x86 - 64 . jar " <nl> + includes = " * jnidispatch * " <nl> + prefix = " com / sun / jna / freebsd - x86 - 64 " / > <nl> + < zipfileset src = " $ { lib . native } / openbsd - x86 . jar " <nl> includes = " * jnidispatch * " <nl> - prefix = " com / sun / jna / bsd - x86 " / > <nl> - < zipfileset src = " $ { lib . native } / bsd - x86 - 64 . jar " <nl> + prefix = " com / sun / jna / openbsd - x86 " / > <nl> + < zipfileset src = " $ { lib . native } / openbsd - x86 - 64 . jar " <nl> includes = " * jnidispatch * " <nl> - prefix = " com / sun / jna / bsd - x86 - 64 " / > <nl> + prefix = " com / sun / jna / openbsd - x86 - 64 " / > <nl> < zipfileset src = " $ { lib . native } / win32 - x86 - 64 . jar " <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / win32 - x86 - 64 " / > <nl> @ @ - 543 , 8 + 558 , 10 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - ia64 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - ppc . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / linux - ppc64 . jar " overwrite = " true " / > <nl> - < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / bsd - x86 . jar " overwrite = " true " / > <nl> - < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / bsd - x86 - 64 . jar " overwrite = " true " / > <nl> + < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / freebsd - x86 . jar " overwrite = " true " / > <nl> + < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / freebsd - x86 - 64 . jar " overwrite = " true " / > <nl> + < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / openbsd - x86 . jar " overwrite = " true " / > <nl> + < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / openbsd - x86 - 64 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - x86 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - x86 - 64 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - sparc . jar " overwrite = " true " / >
diff - - git a / build . xml b / build . xml <nl> index 0841482 . . 3ec5c84 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 822 , 7 + 822 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < not > < os family = " mac " / > < / not > <nl> < / and > <nl> < / condition > <nl> - < property name = " vmopt . arch " value = " $ { vm . 64 } " else = " $ { vm . 32 } " / > <nl> + < property name = " vmopt . arch " value = " $ { vm . arch } " / > <nl> < property name = " tests . platform " value = " " / > <nl> < property name = " tests . exclude " value = " " / > <nl> < property name = " tests . exclude - patterns " value = " " / >
diff - - git a / build . xml b / build . xml <nl> index e1370e5 . . 0841482 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 160 , 11 + 160 , 14 @ @ <nl> < condition property = " cross - compile " value = " true " > <nl> < isset property = " os . prefix " / > <nl> < / condition > <nl> - < ! - - Keep cross - compiled natives separate from normal builds - - > <nl> - < condition property = " native . subdir " value = " native - $ { os . prefix } " else = " native " > <nl> - < isset property = " cross - compile " / > <nl> + < ! - - Sun 1 . 6 VM for windows doesn ' t support - d32 / - d64 switch - - > <nl> + < condition property = " vm . 64 " value = " - d64 " else = " - Ddummy " > <nl> + < not > < os family = " windows " / > < / not > <nl> < / condition > <nl> - < condition property = " vm . arch " value = " - d64 " else = " " > <nl> + < condition property = " vm . 32 " value = " - d32 " else = " - Ddummy " > <nl> + < not > < os family = " windows " / > < / not > <nl> + < / condition > <nl> + < condition property = " vm . arch " value = " $ { vm . 64 } " else = " $ { vm . 32 } " > <nl> < and > <nl> < not > < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " trim = " true " / > < / not > <nl> < or > <nl> @ @ - 182 , 10 + 185 , 10 @ @ <nl> < condition property = " ld . preload " value = " LD _ PRELOAD _ 64 " else = " LD _ PRELOAD " > <nl> < and > <nl> < os name = " SunOS " / > <nl> - < equals arg1 = " $ { vm . arch } " arg2 = " - d64 " / > <nl> + < equals arg1 = " $ { vm . arch } " arg2 = " $ { vm . 64 } " / > <nl> < / and > <nl> < / condition > <nl> - < property name = " build " value = " build $ { vm . arch } " / > <nl> + < property name = " build " value = " build " / > <nl> < property name = " classes " location = " $ { build } / classes " / > <nl> < property name = " eclipse . classes " location = " build . eclipse / classes " / > <nl> < property name = " test . classes " location = " $ { build } / test - classes " / > <nl> @ @ - 229 , 6 + 232 , 8 @ @ <nl> < / or > <nl> < / condition > <nl> < fail unless = " os . prefix " message = " OS / arch not supported ( $ { os . name } / $ { jre . arch } ) , edit build . xml and native / Makefile to add it . " / > <nl> + < ! - - Keep all natives separate - - > <nl> + < property name = " native . subdir " value = " native - $ { os . prefix } " / > <nl> < condition property = " jdk . home " value = " $ { java . home } " > <nl> < available file = " $ { java . home } / include " / > <nl> < / condition > <nl> @ @ - 619 , 7 + 624 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < equals arg1 = " $ { os . prefix } " arg2 = " aix - ppc64 " / > <nl> < / condition > <nl> < ! - - ensure ARCH is set properly for 64 - bit capable platforms - - > <nl> - < ! - - use ANT _ OPTS = - d64 to build 64 - bit if not the platform default - - > <nl> + < ! - - use ANT _ OPTS = - d64 / - d32 to build 64 - bit / 32 - bit if not the platform default - - > <nl> < property name = " ARCH " value = " $ { os . arch } " / > <nl> < condition property = " make . CC " value = " CC = $ { CC } " else = " IGNORE = " > <nl> < isset property = " CC " / > <nl> @ @ - 817 , 13 + 822 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < not > < os family = " mac " / > < / not > <nl> < / and > <nl> < / condition > <nl> - < condition property = " vmopt . arch " value = " - d64 " else = " - Dignore " > <nl> - < and > <nl> - < ! - - Sun 64 - bit VM for windows doesn ' t support the - d64 switch - - > <nl> - < not > < os family = " windows " / > < / not > <nl> - < equals arg1 = " $ { vm . arch } " arg2 = " - d64 " trim = " true " / > <nl> - < / and > <nl> - < / condition > <nl> + < property name = " vmopt . arch " value = " $ { vm . 64 } " else = " $ { vm . 32 } " / > <nl> < property name = " tests . platform " value = " " / > <nl> < property name = " tests . exclude " value = " " / > <nl> < property name = " tests . exclude - patterns " value = " " / > <nl> @ @ - 844 , 6 + 843 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < ! - - Avoid VM crashes , if possible - - > <nl> < sysproperty key = " jna . protected " value = " true " / > <nl> < sysproperty key = " jna . builddir " file = " $ { build } " / > <nl> + < sysproperty key = " jna . nativedir " file = " $ { build . native } " / > <nl> < jvmarg value = " $ { vmopt . arch } " / > <nl> < classpath > < path refid = " test . runpath " / > < / classpath > <nl> < formatter type = " brief " usefile = " false " / > <nl> diff - - git a / test / com / sun / jna / Paths . java b / test / com / sun / jna / Paths . java <nl> index c7f8592 . . b63e33f 100644 <nl> - - - a / test / com / sun / jna / Paths . java <nl> + + + b / test / com / sun / jna / Paths . java <nl> @ @ - 31 , 11 + 31 , 13 @ @ public interface Paths { <nl> ? " / Storage Card " <nl> : System . getProperty ( " jna . builddir " , <nl> USING _ CLOVER <nl> - ? " build . clover " <nl> - : " build " + ( Platform . is64Bit ( ) ? " - d64 " : " " ) ) ; <nl> + ? " build . clover " : " build " ) ; <nl> String CLASSES = BUILDDIR + ( Platform . isWindowsCE ( ) ? " " : " / classes " ) ; <nl> String JNAJAR = BUILDDIR + " / jna . jar " ; <nl> <nl> - String TESTPATH = Platform . isWindowsCE ( ) ? " / Storage Card / " : BUILDDIR + " / native / " ; <nl> + String TESTPATH = Platform . isWindowsCE ( ) <nl> + ? " / Storage Card / " <nl> + : System . getProperty ( " jna . nativedir " , <nl> + BUILDDIR + " / native - " + Platform . RESOURCE _ PREFIX + " / " ) ; <nl> String TESTJAR = BUILDDIR + " / jna - test . jar " ; <nl> }
diff - - git a / . gitignore b / . gitignore <nl> index a1e428d . . 5644e37 100644 <nl> - - - a / . gitignore <nl> + + + b / . gitignore <nl> @ @ - 16 , 4 + 16 , 5 @ @ dist / * - sources . jar <nl> dist / * - javadoc . jar <nl> dist / src - mvn . zip <nl> dist / out - of - date . jar <nl> - perf * . txt <nl> \ No newline at end of file <nl> + perf * . txt <nl> + native / libffi / doc / libffi . info <nl> diff - - git a / build . xml b / build . xml <nl> index fb902ee . . a99e5a9 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 582 , 6 + 582 , 10 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> replace = " ProductVersion & quot ; , & quot ; $ { spec . version } & quot ; " <nl> preserveLastModified = " true " <nl> file = " $ { rsrc } " byline = " true " / > <nl> + < replaceregexp match = " ( Copyright . * - ) 2 . . . " <nl> + replace = " \ 1 $ { year } " <nl> + preserveLastModified = " true " <nl> + file = " $ { rsrc } " byline = " true " / > <nl> < / target > <nl> <nl> < target name = " native " depends = " - setup , javah , - native - api - check , rsrc " unless = " skip - native " <nl> diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index 60e98aa . . b8ff932 100755 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ <nl> diff - - git a / native / jnidispatch . rc b / native / jnidispatch . rc <nl> index f4c156a . . bb388c3 100644 <nl> - - - a / native / jnidispatch . rc <nl> + + + b / native / jnidispatch . rc <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> / / Resource file to generate version information for jnidispatch . dll <nl> - / / Copyright ( c ) 2008 - 2010 Timothy Wall <nl> + / / Copyright ( c ) 2008 - 2013 Timothy Wall <nl> / / Type : version <nl> <nl> / / Name : 1 <nl> diff - - git a / native / libffi / src / x86 / ffi . c b / native / libffi / src / x86 / ffi . c <nl> index 0600414 . . c44f4f0 100644 <nl> - - - a / native / libffi / src / x86 / ffi . c <nl> + + + b / native / libffi / src / x86 / ffi . c <nl> @ @ - 315 , 6 + 315 , 9 @ @ ffi _ status ffi _ prep _ cif _ machdep ( ffi _ cif * cif ) <nl> cif - > bytes + = 4 * sizeof ( ffi _ arg ) ; <nl> # endif <nl> <nl> + # ifdef X86 _ WIN32 <nl> + if ( cif - > abi ! = FFI _ STDCALL ) <nl> + # endif <nl> cif - > bytes = ( cif - > bytes + 15 ) & ~ 0xF ; <nl> <nl> return FFI _ OK ;
diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 73a6bc0 . . 809db83 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 152 , 7 + 152 , 8 @ @ public final class Native implements Version { <nl> + " jnidispatch library included with the JNA jar file you are using " + LS ) ; <nl> } <nl> setPreserveLastError ( " true " . equalsIgnoreCase ( System . getProperty ( " jna . preserve _ last _ error " , " true " ) ) ) ; <nl> - 	 MAX _ PADDING = Platform . isSPARC ( ) ? 8 : LONG _ SIZE ; <nl> + 	 MAX _ PADDING = Platform . isSPARC ( ) | | Platform . isWindows ( ) <nl> + ? 8 : LONG _ SIZE ; <nl> } <nl> <nl> / * * Force a dispose when this class is GC ' d . * /
diff - - git a / test / com / sun / jna / WebStartTest . java b / test / com / sun / jna / WebStartTest . java <nl> index 899b2cf . . caabc7f 100644 <nl> - - - a / test / com / sun / jna / WebStartTest . java <nl> + + + b / test / com / sun / jna / WebStartTest . java <nl> @ @ - 125 , 12 + 125 , 13 @ @ public class WebStartTest extends TestCase implements Paths { <nl> } <nl> } <nl> <nl> + private static final int SOCKET _ TIMEOUT = 30000 ; <nl> private void runTestUnderWebStart ( String testClass , String testMethod ) throws Exception { <nl> String dir = System . getProperty ( " jna . builddir " , BUILDDIR ) ; <nl> String codebase = new File ( dir , " jws " ) . toURI ( ) . toURL ( ) . toString ( ) ; <nl> <nl> ServerSocket s = new ServerSocket ( 0 ) ; <nl> - s . setSoTimeout ( 120000 ) ; <nl> + s . setSoTimeout ( SOCKET _ TIMEOUT ) ; <nl> int port = s . getLocalPort ( ) ; <nl> <nl> File jnlp = File . createTempFile ( getName ( ) , " . jnlp " ) ; <nl> @ @ - 151 , 6 + 152 , 7 @ @ public class WebStartTest extends TestCase implements Paths { <nl> path , <nl> Platform . isWindows ( ) ? " - J - Ddummy " : ( Platform . is64Bit ( ) ? " - J - d64 " : " - J - d32 " ) , <nl> " - Xnosplash " , <nl> + " - verbose " , <nl> " - wait " , <nl> jnlp . toURI ( ) . toURL ( ) . toString ( ) , <nl> } ; <nl> @ @ - 383 , 35 + 385 , 26 @ @ public class WebStartTest extends TestCase implements Paths { <nl> private static void sendResults ( Throwable t , int port ) throws IOException { <nl> Socket s = new Socket ( InetAddress . getLocalHost ( ) , port ) ; <nl> OutputStream os = s . getOutputStream ( ) ; <nl> - t . printStackTrace ( new PrintStream ( os ) ) ; <nl> + if ( t ! = null ) { <nl> + t . printStackTrace ( new PrintStream ( os ) ) ; <nl> + } <nl> s . close ( ) ; <nl> } <nl> <nl> - private static void runTestCaseTest ( String testClass , String method , int port ) { <nl> - try { <nl> - TestCase test = ( TestCase ) Class . forName ( testClass ) . newInstance ( ) ; <nl> - test . setName ( method ) ; <nl> - TestResult result = new TestResult ( ) ; <nl> - test . run ( result ) ; <nl> - if ( result . failureCount ( ) ! = 0 ) { <nl> - Enumeration e = result . failures ( ) ; <nl> - Throwable t = ( ( TestFailure ) e . nextElement ( ) ) . thrownException ( ) ; <nl> - sendResults ( t , port ) ; <nl> - } <nl> - else if ( result . errorCount ( ) ! = 0 ) { <nl> - Enumeration e = result . errors ( ) ; <nl> - Throwable t = ( ( TestFailure ) e . nextElement ( ) ) . thrownException ( ) ; <nl> - sendResults ( t , port ) ; <nl> - } <nl> - / / NOTE : System . exit with non - zero status causes an error dialog <nl> - / / on w32 sun " 1 . 6 . 0 _ 14 " ( build 1 . 6 . 0 _ 14 - b08 ) <nl> - System . exit ( 0 ) ; <nl> + private static Throwable runTestCaseTest ( String testClass , String method , int port ) throws Exception { <nl> + TestCase test = ( TestCase ) Class . forName ( testClass ) . newInstance ( ) ; <nl> + test . setName ( method ) ; <nl> + TestResult result = new TestResult ( ) ; <nl> + test . run ( result ) ; <nl> + if ( result . failureCount ( ) ! = 0 ) { <nl> + Enumeration e = result . failures ( ) ; <nl> + return ( ( TestFailure ) e . nextElement ( ) ) . thrownException ( ) ; <nl> } <nl> - catch ( Throwable e ) { <nl> - / / Can ' t communicate back to launching process <nl> - showMessage ( " ERROR : " + e . getMessage ( ) ) ; <nl> - System . exit ( 0 ) ; <nl> + else if ( result . errorCount ( ) ! = 0 ) { <nl> + Enumeration e = result . errors ( ) ; <nl> + return ( ( TestFailure ) e . nextElement ( ) ) . thrownException ( ) ; <nl> } <nl> + return null ; <nl> } <nl> <nl> private static void showMessage ( String msg ) { <nl> @ @ - 438 , 7 + 431 , 6 @ @ public class WebStartTest extends TestCase implements Paths { <nl> System . setProperty ( " javawebstart . version " , " fake " ) ; <nl> } <nl> if ( runningWebStart ( ) ) { <nl> - <nl> String testClass = args . length > 0 <nl> ? args [ 0 ] : WebStartTest . class . getName ( ) ; <nl> String testMethod = args . length > 1 <nl> @ @ - 446 , 14 + 438 , 26 @ @ public class WebStartTest extends TestCase implements Paths { <nl> int port = args . length > 2 <nl> ? Integer . parseInt ( args [ 2 ] ) : 8080 ; <nl> <nl> - if ( args . length > = 5 <nl> - & & " arch64 = true " . equals ( args [ 4 ] ) ) { <nl> - if ( ! Platform . is64Bit ( ) ) { <nl> - sendResults ( new Error ( " Cannot run 64 - bit test on 32 - bit javaws " ) , port ) ; <nl> - System . exit ( 0 ) ; <nl> + try { <nl> + if ( args . length > = 5 <nl> + & & " arch64 = true " . equals ( args [ 4 ] ) <nl> + & & ! Platform . is64Bit ( ) ) { <nl> + throw new Error ( " Cannot run 64 - bit test on 32 - bit javaws " ) ; <nl> + } <nl> + else { <nl> + Throwable t = runTestCaseTest ( testClass , testMethod , port ) ; <nl> + sendResults ( t , port ) ; <nl> + } <nl> + } <nl> + catch ( Throwable t ) { <nl> + try { <nl> + sendResults ( t , port ) ; <nl> + } <nl> + catch ( Throwable e ) { <nl> + / / Can ' t communicate back to launching process <nl> + showMessage ( " ERROR : " + e . getMessage ( ) ) ; <nl> } <nl> } <nl> - runTestCaseTest ( testClass , testMethod , port ) ; <nl> } <nl> else { <nl> junit . textui . TestRunner . run ( WebStartTest . class ) ; <nl> @ @ - 462 , 5 + 466 , 8 @ @ public class WebStartTest extends TestCase implements Paths { <nl> catch ( Throwable t ) { <nl> showMessage ( " ERROR : " + t . getMessage ( ) ) ; <nl> } <nl> + / / NOTE : System . exit with non - zero status causes an error dialog <nl> + / / on w32 sun " 1 . 6 . 0 _ 14 " ( build 1 . 6 . 0 _ 14 - b08 ) <nl> + System . exit ( 0 ) ; <nl> } <nl> }
diff - - git a / lib / native / sunos - x86 - 64 . jar b / lib / native / sunos - x86 - 64 . jar <nl> index 6716399 . . 1420919 100755 <nl> Binary files a / lib / native / sunos - x86 - 64 . jar and b / lib / native / sunos - x86 - 64 . jar differ <nl> diff - - git a / lib / native / sunos - x86 . jar b / lib / native / sunos - x86 . jar <nl> index 6716399 . . c2f2fdc 100755 <nl> Binary files a / lib / native / sunos - x86 . jar and b / lib / native / sunos - x86 . jar differ
diff - - git a / CHANGES . md b / CHANGES . md <nl> index e1177ac . . cfeae98 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 23 , 6 + 23 , 7 @ @ Bug Fixes <nl> * [ # 218 ] ( https : / / github . com / twall / jna / issues / 218 ) : Explicitly handle broken Android SecurityManager implementation - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 223 ] ( https : / / github . com / twall / jna / issues / 223 ) : Fix layout / size derivation for unions - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 229 ] ( https : / / github . com / twall / jna / issues / 229 ) : Add ` CreateProcessW ` ( unicode version ) - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Avoid solaris / x86 JVM bug w / library open flags - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Release 3 . 5 . 2 <nl> = = = = = = = = = = = = = <nl> diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index 83003ac . . fd4d623 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> / * Copyright ( c ) 2007 Wayne Meissner , All Rights Reserved <nl> - * Copyright ( c ) 2007 - 20013 Timothy Wall , All Rights Reserved <nl> + * Copyright ( c ) 2007 - 2013 Timothy Wall , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 110 , 12 + 110 , 11 @ @ public class NativeLibrary { <nl> <nl> private static final int DEFAULT _ OPEN _ OPTIONS = - 1 ; <nl> private static int openFlags ( Map options ) { <nl> - try { <nl> - return ( ( Integer ) options . get ( Library . OPTION _ OPEN _ FLAGS ) ) . intValue ( ) ; <nl> - } <nl> - catch ( Throwable t ) { <nl> - return DEFAULT _ OPEN _ OPTIONS ; <nl> + Object opt = options . get ( Library . OPTION _ OPEN _ FLAGS ) ; <nl> + if ( opt instanceof Number ) { <nl> + return ( ( Number ) opt ) . intValue ( ) ; <nl> } <nl> + return DEFAULT _ OPEN _ OPTIONS ; <nl> } <nl> <nl> private static NativeLibrary loadLibrary ( String libraryName , Map options ) {
diff - - git a / lib / native / sunos - sparc . jar b / lib / native / sunos - sparc . jar <nl> index bc918ef . . 1e072a2 100644 <nl> Binary files a / lib / native / sunos - sparc . jar and b / lib / native / sunos - sparc . jar differ <nl> diff - - git a / lib / native / sunos - sparcv9 . jar b / lib / native / sunos - sparcv9 . jar <nl> index db9095d . . 63b7dd1 100755 <nl> Binary files a / lib / native / sunos - sparcv9 . jar and b / lib / native / sunos - sparcv9 . jar differ <nl> diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java <nl> index 260673f . . d7a64e2 100644 <nl> - - - a / src / com / sun / jna / Platform . java <nl> + + + b / src / com / sun / jna / Platform . java <nl> @ @ - 45 , 6 + 45 , 7 @ @ public final class Platform { <nl> public static final String RESOURCE _ PREFIX ; <nl> <nl> private static final int osType ; <nl> + static final int MAX _ PADDING ; <nl> <nl> static { <nl> String osName = System . getProperty ( " os . name " ) ; <nl> @ @ - 108 , 6 + 109 , 8 @ @ public final class Platform { <nl> MATH _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " m " ; <nl> HAS _ DLL _ CALLBACKS = osType = = WINDOWS ; <nl> RESOURCE _ PREFIX = getNativeLibraryResourcePrefix ( ) ; <nl> + 	 String arch = System . getProperty ( " os . arch " ) . toLowerCase ( ) ; <nl> + 	 MAX _ PADDING = " sparc " . equals ( arch ) ? 8 : Native . LONG _ SIZE ; <nl> } <nl> private Platform ( ) { } <nl> public static final int getOSType ( ) { <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index 8431799 . . 63afdb5 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 1161 , 7 + 1161 , 7 @ @ public abstract class Structure { <nl> } <nl> <nl> if ( calculatedSize > 0 ) { <nl> - int size = calculateAlignedSize ( calculatedSize , info . alignment ) ; <nl> + int size = addPadding ( calculatedSize , info . alignment ) ; <nl> / / Update native FFI type information , if needed <nl> if ( this instanceof ByValue & & ! avoidFFIType ) { <nl> getTypeInfo ( ) ; <nl> @ @ - 1220 , 11 + 1220 , 11 @ @ public abstract class Structure { <nl> return value ; <nl> } <nl> <nl> - int calculateAlignedSize ( int calculatedSize ) { <nl> - return calculateAlignedSize ( calculatedSize , structAlignment ) ; <nl> + private int addPadding ( int calculatedSize ) { <nl> + return addPadding ( calculatedSize , structAlignment ) ; <nl> } <nl> <nl> - private int calculateAlignedSize ( int calculatedSize , int alignment ) { <nl> + private int addPadding ( int calculatedSize , int alignment ) { <nl> / / Structure size must be an integral multiple of its alignment , <nl> / / add padding if necessary . <nl> if ( actualAlignType ! = ALIGN _ NONE ) { <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index fc17073 . . 5edff92 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 401 , 7 + 401 , 7 @ @ public class StructureTest extends TestCase { <nl> } <nl> } <nl> TestStructure s = new TestStructure ( ) ; <nl> - assertEquals ( " Wrong structure size " , Pointer . SIZE = = 4 ? 20 : 24 , s . size ( ) ) ; <nl> + assertEquals ( " Wrong structure size " , Platform . MAX _ PADDING = = 4 ? 20 : 24 , s . size ( ) ) ; <nl> assertEquals ( " Wrong union size " , 8 , s . s _ union . size ( ) ) ; <nl> } <nl>
diff - - git a / lib / native / bsd - x86 - 64 . jar b / lib / native / bsd - x86 - 64 . jar <nl> index 6716399 . . 0a0d0f6 100755 <nl> Binary files a / lib / native / bsd - x86 - 64 . jar and b / lib / native / bsd - x86 - 64 . jar differ
diff - - git a / lib / native / bsd - x86 - 64 . jar b / lib / native / bsd - x86 - 64 . jar <nl> new file mode 100755 <nl> index 0000000 . . 6716399 <nl> Binary files / dev / null and b / lib / native / bsd - x86 - 64 . jar differ <nl> diff - - git a / lib / native / bsd - x86 . jar b / lib / native / bsd - x86 . jar <nl> new file mode 100644 <nl> index 0000000 . . d0674d8 <nl> Binary files / dev / null and b / lib / native / bsd - x86 . jar differ <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 8205786 . . a1f7bf8 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 1501 , 7 + 1501 , 7 @ @ get _ ffi _ type ( JNIEnv * env , jclass cls , char jtype ) { <nl> case ' V ' : <nl> return & ffi _ type _ void ; <nl> case ' s ' : { <nl> - # define PLACEHOLDER _ MEMORY 0 <nl> + # define PLACEHOLDER _ MEMORY ( ( jlong ) 0 ) <nl> jobject s = ( * env ) - > CallStaticObjectMethod ( env , classStructure , <nl> MID _ Structure _ newInstance , cls , PLACEHOLDER _ MEMORY ) ; <nl> if ( s ) {
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index 97f7c02 . . ed66356 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 1166 , 7 + 1166 , 7 @ @ public interface Kernel32 extends WinNT { <nl> 	 * line . <nl> * < p / > <nl> * If < i > lpApplicationName < / i > is NULL , the first white <nl> - 	 * space Ð delimited token of the command line specifies the <nl> + 	 * space - delimited token of the command line specifies the <nl> 	 * module name . If you are using a long file name that <nl> 	 * contains a space , use quoted strings to indicate where <nl> 	 * the file name ends and the arguments begin ( see the
diff - - git a / build . xml b / build . xml <nl> index f79f028 . . b7b0a54 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 89 , 8 + 89 , 10 @ @ <nl> < condition property = " test . compatibility " value = " 1 . 4 " > <nl> < equals arg1 = " $ { os . prefix } " arg2 = " w32ce - arm " / > <nl> < / condition > <nl> - < ! - - Default compatibility , 1 . 6 - - > <nl> - < property name = " compatibility " value = " 1 . 6 " / > <nl> + < ! - - Default compatibility , 1 . 6 , or whatever version is running - - > <nl> + < condition property = " compatibility " value = " $ { ant . java . version } " else = " 1 . 6 " > <nl> + < matches pattern = " ^ 1 . [ 345 ] $ " string = " $ { ant . java . version } " / > <nl> + < / condition > <nl> < ! - - Platform default compatibility , 1 . 5 + - - > <nl> < condition property = " platform . compatibility " value = " 1 . 5 " else = " $ { compatibility } " > <nl> < equals arg1 = " $ { compatibility } " arg2 = " 1 . 4 " / >
diff - - git a / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java b / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java <nl> index a08c2a9 . . 4c34d4f 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java <nl> @ @ - 55 , 6 + 55 , 14 @ @ public class FileUtilsTest extends TestCase { <nl> File symlink = new File ( tmpdir , file . getName ( ) + " . link " ) ; <nl> try { <nl> Runtime . getRuntime ( ) . exec ( new String [ ] { " ln " , " - s " , file . getAbsolutePath ( ) , symlink . getAbsolutePath ( ) } ) ; <nl> + / / OSX 10 . 8 needs a little time for the symlink to register <nl> + long start = System . currentTimeMillis ( ) ; <nl> + while ( ! file . exists ( ) | | ! symlink . exists ( ) ) { <nl> + Thread . sleep ( 100 ) ; <nl> + if ( System . currentTimeMillis ( ) - start > 5000 ) { <nl> + break ; <nl> + } <nl> + } <nl> assertTrue ( " Original source file missing : " + file , file . exists ( ) ) ; <nl> assertTrue ( " Symlink creation failed ( missing ) : " + symlink , symlink . exists ( ) ) ; <nl> try {
diff - - git a / lib / native / darwin . jar b / lib / native / darwin . jar <nl> index 6661b75 . . 49781d5 100755 <nl> Binary files a / lib / native / darwin . jar and b / lib / native / darwin . jar differ
diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index 6716399 . . 1323434 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32UtilTest . java <nl> index 9736811 . . 1cbfe0b 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32UtilTest . java <nl> @ @ - 185 , 8 + 185 , 8 @ @ public class Kernel32UtilTest extends TestCase { <nl> } <nl> <nl> public final void testGetLogicalProcessorInformation ( ) { <nl> - WinNT . SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION informationArray = Kernel32Util . getLogicalProcessorInformation ( ) ; <nl> - assertTrue ( informationArray > = 1 ) ; / / docs say so <nl> + WinNT . SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION [ ] informationArray = Kernel32Util . getLogicalProcessorInformation ( ) ; <nl> + assertTrue ( informationArray . length > = 1 ) ; / / docs say so <nl> for ( WinNT . SYSTEM _ LOGICAL _ PROCESSOR _ INFORMATION information : informationArray ) { <nl> / / TODO : What can we check ? Java itself has no way to get physical processor info ( if it did , <nl> / / I wouldn ' t be writing in JNA support for it . )
diff - - git a / . classpath b / . classpath <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / . project b / . project <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / CHANGES . md b / CHANGES . md <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / LICENSE b / LICENSE <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / OTHERS b / OTHERS <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / contrib / README b / contrib / README <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / contrib / balloontips / README b / contrib / balloontips / README <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / src / com / sun / jna / Version . java b / src / com / sun / jna / Version . java <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / test / com / sun / jna / WebStartTest . java b / test / com / sun / jna / WebStartTest . java <nl> index 0777f6e . . 899b2cf 100644 <nl> - - - a / test / com / sun / jna / WebStartTest . java <nl> + + + b / test / com / sun / jna / WebStartTest . java <nl> @ @ - 149 , 6 + 149 , 7 @ @ public class WebStartTest extends TestCase implements Paths { <nl> String path = findJWS ( ) ; <nl> String [ ] cmd = { <nl> path , <nl> + Platform . isWindows ( ) ? " - J - Ddummy " : ( Platform . is64Bit ( ) ? " - J - d64 " : " - J - d32 " ) , <nl> " - Xnosplash " , <nl> " - wait " , <nl> jnlp . toURI ( ) . toURL ( ) . toString ( ) ,
diff - - git a / lib / native / linux - x86 - 64 . jar b / lib / native / linux - x86 - 64 . jar <nl> index 6716399 . . 1dab101 100644 <nl> Binary files a / lib / native / linux - x86 - 64 . jar and b / lib / native / linux - x86 - 64 . jar differ
diff - - git a / lib / native / linux - x86 - 64 . jar b / lib / native / linux - x86 - 64 . jar <nl> old mode 100755 <nl> new mode 100644 <nl> index 6716399 . . 06ce788 <nl> Binary files a / lib / native / linux - x86 - 64 . jar and b / lib / native / linux - x86 - 64 . jar differ
diff - - git a / native / callback . c b / native / callback . c <nl> index 9812dc4 . . 904acb9 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 23 , 12 + 23 , 17 @ @ <nl> # include < windows . h > <nl> # define TLS _ SET ( KEY , VALUE ) TlsSetValue ( KEY , VALUE ) <nl> # define TLS _ GET ( KEY ) TlsGetValue ( KEY ) <nl> + # define TLS _ KEY _ T DWORD <nl> # else <nl> # include < sys / types . h > <nl> # include < sys / param . h > <nl> + # include < pthread . h > <nl> + # define PTHREADS <nl> # define TLS _ SET ( KEY , VALUE ) ( pthread _ setspecific ( KEY , VALUE ) = = 0 ) <nl> # define TLS _ GET ( KEY ) pthread _ getspecific ( KEY ) <nl> + # define TLS _ KEY _ T pthread _ key _ t <nl> # endif <nl> + <nl> # include " dispatch . h " <nl> <nl> # ifdef _ _ cplusplus <nl> @ @ - 74 , 9 + 79 , 18 @ @ static void * const dll _ fptrs [ ] = { <nl> <nl> # endif / * _ WIN32 & & ! _ WIN32 _ WCE * / <nl> <nl> + typedef struct _ tls { <nl> + JavaVM * jvm ; <nl> + jint last _ error ; <nl> + jboolean detach ; <nl> + char name [ 256 ] ; <nl> + } thread _ storage ; <nl> + <nl> static void callback _ dispatch ( ffi _ cif * , void * , void * * , void * ) ; <nl> static jclass classObject ; <nl> <nl> + extern void println ( JNIEnv * , const char * ) ; <nl> + <nl> callback * <nl> create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> jobjectArray param _ types , jclass return _ type , <nl> @ @ - 475 , 43 + 489 , 74 @ @ callback _ invoke ( JNIEnv * env , callback * cb , ffi _ cif * cif , void * resp , void * * cbar <nl> } <nl> } <nl> <nl> - / / Handle automatic thread cleanup <nl> - static void detach _ thread ( void * data ) { <nl> - if ( data ! = NULL ) { <nl> - JavaVM * jvm = ( JavaVM * ) data ; <nl> - ( * jvm ) - > DetachCurrentThread ( jvm ) ; <nl> + static TLS _ KEY _ T tls _ thread _ data _ key ; <nl> + static thread _ storage * get _ thread _ storage ( JNIEnv * env ) { <nl> + thread _ storage * tls = ( thread _ storage * ) TLS _ GET ( tls _ thread _ data _ key ) ; <nl> + if ( tls = = NULL ) { <nl> + tls = ( thread _ storage * ) malloc ( sizeof ( thread _ storage ) ) ; <nl> + if ( ! tls ) { <nl> + throwByName ( env , EOutOfMemory , " JNA : Can ' t allocate thread storage " ) ; <nl> + } <nl> + else { <nl> + snprintf ( tls - > name , sizeof ( tls - > name ) , " < uninitialized thread name > " ) ; <nl> + if ( ( * env ) - > GetJavaVM ( env , & tls - > jvm ) ! = JNI _ OK ) { <nl> + free ( tls ) ; <nl> + throwByName ( env , EIllegalState , " JNA : Could not get JavaVM " ) ; <nl> + tls = NULL ; <nl> + } <nl> + else if ( ! TLS _ SET ( tls _ thread _ data _ key , tls ) ) { <nl> + free ( tls ) ; <nl> + throwByName ( env , EOutOfMemory , " JNA : Internal TLS error " ) ; <nl> + tls = NULL ; <nl> + } <nl> + else { <nl> + fprintf ( stderr , " Created thread storage for % p ( % s ) \ n " , pthread _ self ( ) , tls - > name ) ; <nl> + } <nl> + } <nl> + } <nl> + return tls ; <nl> + } <nl> + <nl> + static void dispose _ thread _ data ( void * data ) { <nl> + thread _ storage * tls = ( thread _ storage * ) data ; <nl> + JavaVM * jvm = tls - > jvm ; <nl> + JNIEnv * env ; <nl> + int is _ attached = ( * jvm ) - > GetEnv ( jvm , ( void * ) & env , JNI _ VERSION _ 1 _ 4 ) = = JNI _ OK ; <nl> + if ( is _ attached ) { <nl> + if ( ( * jvm ) - > DetachCurrentThread ( jvm ) ! = 0 ) { <nl> + fprintf ( stderr , " JNA : could not detach native thread ( automatic ) \ n " ) ; <nl> + } <nl> + else { <nl> + fprintf ( stderr , " Thread detached : % p ( % s ) \ n " , pthread _ self ( ) , tls - > name ) ; <nl> + } <nl> + fprintf ( stderr , " Dispose thread data % p ( % s ) \ n " , pthread _ self ( ) , tls - > name ) ; <nl> + } <nl> + else { <nl> + fprintf ( stderr , " Thread already detached % p ( % s ) \ n " , pthread _ self ( ) , tls - > name ) ; <nl> } <nl> + free ( data ) ; <nl> } <nl> <nl> # ifdef _ WIN32 <nl> <nl> - static DWORD tls _ thread _ cleanup _ key ; <nl> - static DWORD tls _ errno _ key , tls _ detach _ key ; <nl> BOOL WINAPI DllMain ( HINSTANCE hDLL , DWORD fdwReason , LPVOID lpvReserved ) { <nl> switch ( fdwReason ) { <nl> case DLL _ PROCESS _ ATTACH : <nl> - tls _ thread _ cleanup _ key = TlsAlloc ( ) ; <nl> - if ( tls _ thread _ cleanup _ key = = TLS _ OUT _ OF _ INDEXES ) { <nl> - return FALSE ; <nl> - } <nl> - tls _ detach _ key = TlsAlloc ( ) ; <nl> - if ( tls _ detach _ key = = TLS _ OUT _ OF _ INDEXES ) { <nl> - return FALSE ; <nl> - } <nl> - tls _ errno _ key = TlsAlloc ( ) ; <nl> - if ( tls _ errno _ key = = TLS _ OUT _ OF _ INDEXES ) { <nl> + tls _ thread _ data _ key = TlsAlloc ( ) ; <nl> + if ( tls _ thread _ data _ key = = TLS _ OUT _ OF _ INDEXES ) { <nl> return FALSE ; <nl> } <nl> break ; <nl> case DLL _ PROCESS _ DETACH : <nl> - TlsFree ( tls _ thread _ cleanup _ key ) ; <nl> - TlsFree ( tls _ detach _ key ) ; <nl> - TlsFree ( tls _ errno _ key ) ; <nl> + TlsFree ( tls _ thread _ data _ key ) ; <nl> break ; <nl> case DLL _ THREAD _ ATTACH : <nl> break ; <nl> case DLL _ THREAD _ DETACH : { <nl> - detach _ thread ( TlsGetValue ( tls _ thread _ cleanup _ key ) ) ; <nl> + thread _ storage * tls = ( thread _ storage * ) TlsGetValue ( tls _ thread _ data _ key ) ; <nl> + if ( tls ) { <nl> + dispose _ thread _ data ( tls ) ; <nl> + } <nl> break ; <nl> } <nl> default : <nl> @ @ - 520 , 71 + 565 , 50 @ @ BOOL WINAPI DllMain ( HINSTANCE hDLL , DWORD fdwReason , LPVOID lpvReserved ) { <nl> return TRUE ; <nl> } <nl> <nl> - # else <nl> - <nl> - # include < pthread . h > <nl> + # endif <nl> <nl> - static pthread _ key _ t tls _ thread _ cleanup _ key , tls _ detach _ key ; <nl> - static void make _ thread _ cleanup _ key ( ) { <nl> - pthread _ key _ create ( & tls _ thread _ cleanup _ key , detach _ thread ) ; <nl> + # ifdef PTHREADS <nl> + static void make _ thread _ data _ key ( ) { <nl> + pthread _ key _ create ( & tls _ thread _ data _ key , dispose _ thread _ data ) ; <nl> } <nl> - static pthread _ key _ t tls _ errno _ key ; <nl> - static void make _ thread _ keys ( ) { <nl> - pthread _ key _ create ( & tls _ errno _ key , NULL ) ; <nl> - pthread _ key _ create ( & tls _ detach _ key , NULL ) ; <nl> - } <nl> - <nl> # endif <nl> <nl> / * * Store the requested detach state for the current thread . * / <nl> void <nl> - JNA _ detach ( jboolean d ) { <nl> - if ( ! TLS _ SET ( tls _ detach _ key , L2A ( ( jlong ) ( d ? THREAD _ DETACH : THREAD _ LEAVE _ ATTACHED ) ) ) ) { <nl> - fprintf ( stderr , " JNA : unable to set thread - local detach value \ n " ) ; <nl> + JNA _ detach ( JNIEnv * env , jboolean d ) { <nl> + thread _ storage * tls = get _ thread _ storage ( env ) ; <nl> + if ( tls ) { <nl> + tls - > detach = d ; <nl> } <nl> } <nl> <nl> / * * Store the value of errno / GetLastError in TLS * / <nl> void <nl> - JNA _ set _ last _ error ( int err ) { <nl> - if ( ! TLS _ SET ( tls _ errno _ key , L2A ( ( jlong ) err ) ) ) { <nl> - fprintf ( stderr , " JNA : unable to set thread - local errno value \ n " ) ; <nl> + JNA _ set _ last _ error ( JNIEnv * env , int err ) { <nl> + thread _ storage * tls = get _ thread _ storage ( env ) ; <nl> + if ( tls ) { <nl> + tls - > last _ error = err ; <nl> } <nl> } <nl> <nl> / * * Store the value of errno / GetLastError in TLS * / <nl> int <nl> - JNA _ get _ last _ error ( ) { <nl> - return ( int ) A2L ( TLS _ GET ( tls _ errno _ key ) ) ; <nl> - } <nl> - <nl> - / * * Set up to detach the thread when it exits , or clear any handlers if the <nl> - argument is NULL . <nl> - * / <nl> - static void <nl> - jvm _ detach _ on _ exit ( JavaVM * jvm ) { <nl> - # ifdef _ WIN32 <nl> - if ( ! TlsSetValue ( tls _ thread _ cleanup _ key , ( void * ) jvm ) ) { <nl> - fprintf ( stderr , " JNA : unable to set thread - local JVM value \ n " ) ; <nl> - } <nl> - # else <nl> - static pthread _ once _ t key _ once = PTHREAD _ ONCE _ INIT ; <nl> - pthread _ once ( & key _ once , make _ thread _ cleanup _ key ) ; <nl> - if ( ! jvm | | pthread _ getspecific ( tls _ thread _ cleanup _ key ) = = NULL ) { <nl> - if ( pthread _ setspecific ( tls _ thread _ cleanup _ key , jvm ) ) { <nl> - fprintf ( stderr , " JNA : unable to set thread - local JVM value \ n " ) ; <nl> - } <nl> + JNA _ get _ last _ error ( JNIEnv * env ) { <nl> + thread _ storage * tls = get _ thread _ storage ( env ) ; <nl> + if ( tls ) { <nl> + return tls - > last _ error ; <nl> } <nl> - # endif <nl> + return 0 ; <nl> } <nl> <nl> static void <nl> callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> callback * cb = ( ( callback * ) user _ data ) ; <nl> JavaVM * jvm = cb - > vm ; <nl> - JNIEnv * env ; <nl> + JNIEnv * env = NULL ; <nl> int was _ attached = ( * jvm ) - > GetEnv ( jvm , ( void * ) & env , JNI _ VERSION _ 1 _ 4 ) = = JNI _ OK ; <nl> jboolean detach = was _ attached ? JNI _ FALSE : JNI _ TRUE ; <nl> + thread _ storage * tls = was _ attached ? get _ thread _ storage ( env ) : NULL ; <nl> <nl> if ( ! was _ attached ) { <nl> int attach _ status = 0 ; <nl> @ @ - 610 , 6 + 634 , 11 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> else { <nl> attach _ status = ( * jvm ) - > AttachCurrentThread ( jvm , ( void * ) & env , & args ) ; <nl> } <nl> + tls = get _ thread _ storage ( env ) ; <nl> + if ( tls ) { <nl> + snprintf ( tls - > name , sizeof ( tls - > name ) , <nl> + args . name ? args . name : " < unconfigured thread > " ) ; <nl> + } <nl> if ( attach _ status ! = JNI _ OK ) { <nl> fprintf ( stderr , " JNA : Can ' t attach native thread to VM for callback : % d \ n " , attach _ status ) ; <nl> return ; <nl> @ @ - 618 , 37 + 647 , 41 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> ( * env ) - > DeleteWeakGlobalRef ( env , args . group ) ; <nl> } <nl> } <nl> - <nl> + 	 	 	 	 	 	 <nl> + if ( ! tls ) { <nl> + fprintf ( stderr , " JNA : couldn ' t obtain thread - local storage \ n " ) ; <nl> + return ; <nl> + } <nl> + <nl> + fprintf ( stderr , " % p ( % s ) was attached : % d \ n " , pthread _ self ( ) , tls - > name , was _ attached ) ; <nl> + <nl> / / Give the callback glue its own local frame to ensure all local references <nl> / / are properly disposed <nl> if ( ( * env ) - > PushLocalFrame ( env , 16 ) < 0 ) { <nl> fprintf ( stderr , " JNA : Out of memory : Can ' t allocate local frame \ n " ) ; <nl> } <nl> else { <nl> - TLS _ SET ( tls _ detach _ key , L2A ( ( jlong ) THREAD _ NOCHANGE ) ) ; <nl> + tls - > detach = detach ; <nl> callback _ invoke ( env , cb , cif , resp , cbargs ) ; <nl> - switch ( ( int ) A2L ( TLS _ GET ( tls _ detach _ key ) ) ) { <nl> - case THREAD _ LEAVE _ ATTACHED : detach = JNI _ FALSE ; break ; <nl> - case THREAD _ DETACH : detach = JNI _ TRUE ; break ; <nl> - default : break ; / * use default detach behavior * / <nl> - } <nl> + detach = tls - > detach ; <nl> ( * env ) - > PopLocalFrame ( env , NULL ) ; <nl> } <nl> <nl> if ( detach ) { <nl> - ( * jvm ) - > DetachCurrentThread ( jvm ) ; <nl> - jvm _ detach _ on _ exit ( NULL ) ; <nl> + if ( ( * jvm ) - > DetachCurrentThread ( jvm ) ! = 0 ) { <nl> + fprintf ( stderr , " JNA : could not detach thread \ n " ) ; <nl> + } <nl> } <nl> - else if ( ! was _ attached ) { <nl> - jvm _ detach _ on _ exit ( jvm ) ; <nl> + else { <nl> + fprintf ( stderr , " Thread will detach automatically % p ( % s ) \ n " , pthread _ self ( ) , tls - > name ) ; <nl> } <nl> } <nl> <nl> const char * <nl> JNA _ callback _ init ( JNIEnv * env ) { <nl> - # ifndef _ WIN32 <nl> + # ifdef PTHREADS <nl> static pthread _ once _ t key _ once = PTHREAD _ ONCE _ INIT ; <nl> - pthread _ once ( & key _ once , make _ thread _ keys ) ; <nl> + pthread _ once ( & key _ once , make _ thread _ data _ key ) ; <nl> # endif <nl> <nl> if ( ! LOAD _ CREF ( env , Object , " java / lang / Object " ) ) return " java . lang . Object " ; <nl> @ @ - 662 , 10 + 695 , 8 @ @ JNA _ callback _ dispose ( JNIEnv * env ) { <nl> ( * env ) - > DeleteWeakGlobalRef ( env , classObject ) ; <nl> classObject = NULL ; <nl> } <nl> - # ifndef _ WIN32 <nl> - pthread _ key _ delete ( tls _ errno _ key ) ; <nl> - pthread _ key _ delete ( tls _ thread _ cleanup _ key ) ; <nl> - pthread _ key _ delete ( tls _ detach _ key ) ; <nl> + # ifdef PTHREADS <nl> + pthread _ key _ delete ( tls _ thread _ data _ key ) ; <nl> # endif <nl> } <nl> <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 8205786 . . 809d666 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 301 , 17 + 301 , 29 @ @ static ffi _ type * getStructureType ( JNIEnv * , jobject ) ; <nl> <nl> typedef void ( JNICALL * release _ t ) ( JNIEnv * , jarray , void * , jint ) ; <nl> <nl> - # if 0 <nl> + # if 1 <nl> / * * Invokes System . err . println ( for debugging only ) . * / <nl> - static void <nl> + void <nl> println ( JNIEnv * env , const char * msg ) { <nl> jclass cls = ( * env ) - > FindClass ( env , " java / lang / System " ) ; <nl> + if ( ! cls ) { <nl> + fprintf ( stderr , " JNA : failed to find java . lang . System \ n " ) ; <nl> + return ; <nl> + } <nl> jfieldID fid = ( * env ) - > GetStaticFieldID ( env , cls , " err " , <nl> - " Ljava / io / PrintStream ; " ) ; <nl> + 	 	 	 	 	 " Ljava / io / PrintStream ; " ) ; <nl> jobject err = ( * env ) - > GetStaticObjectField ( env , cls , fid ) ; <nl> + if ( ! err ) { <nl> + fprintf ( stderr , " JNA : failed to find System . err \ n " ) ; <nl> + return ; <nl> + } <nl> jclass pscls = ( * env ) - > FindClass ( env , " java / io / PrintStream " ) ; <nl> + if ( ! pscls ) { <nl> + fprintf ( stderr , " JNA : failed to find java . io . PrintStream \ n " ) ; <nl> + return ; <nl> + } <nl> jmethodID mid = ( * env ) - > GetMethodID ( env , pscls , " println " , <nl> - " ( Ljava / lang / String ; ) V " ) ; <nl> + 	 	 	 	 " ( Ljava / lang / String ; ) V " ) ; <nl> jstring str = newJavaString ( env , msg , JNI _ FALSE ) ; <nl> ( * env ) - > CallObjectMethod ( env , err , mid , str ) ; <nl> } <nl> @ @ - 568 , 7 + 580 , 7 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray arr , <nl> } <nl> } <nl> else if ( preserve _ last _ error ) { <nl> - JNA _ set _ last _ error ( GET _ LAST _ ERROR ( ) ) ; <nl> + JNA _ set _ last _ error ( env , GET _ LAST _ ERROR ( ) ) ; <nl> } <nl> PROTECTED _ END ( do { throw _ type = EError ; throw _ msg = " Invalid memory access " ; } while ( 0 ) ) ; <nl> } <nl> @ @ - 987 , 10 + 999 , 13 @ @ initializeThread ( callback * cb , AttachOptions * args ) { <nl> JavaVM * jvm = cb - > vm ; <nl> JNIEnv * env ; <nl> jobject group = NULL ; <nl> + int attached = ( * jvm ) - > GetEnv ( jvm , ( void * ) & env , JNI _ VERSION _ 1 _ 4 ) = = JNI _ OK ; <nl> <nl> - if ( ( * jvm ) - > AttachCurrentThread ( jvm , ( void * ) & env , NULL ) ! = JNI _ OK ) { <nl> - fprintf ( stderr , " JNA : Can ' t attach native thread to VM for callback thread initialization \ n " ) ; <nl> - return NULL ; <nl> + if ( ! attached ) { <nl> + if ( ( * jvm ) - > AttachCurrentThread ( jvm , ( void * ) & env , NULL ) ! = JNI _ OK ) { <nl> + fprintf ( stderr , " JNA : Can ' t attach native thread to VM for callback thread initialization \ n " ) ; <nl> + return NULL ; <nl> + } <nl> } <nl> ( * env ) - > PushLocalFrame ( env , 16 ) ; <nl> { <nl> @ @ - 1006 , 7 + 1021 , 11 @ @ initializeThread ( callback * cb , AttachOptions * args ) { <nl> } <nl> } <nl> ( * env ) - > PopLocalFrame ( env , NULL ) ; <nl> - ( * jvm ) - > DetachCurrentThread ( jvm ) ; <nl> + if ( ! attached ) { <nl> + if ( ( * jvm ) - > DetachCurrentThread ( jvm ) ! = 0 ) { <nl> + fprintf ( stderr , " JNA : could not detach thread after callback init \ n " ) ; <nl> + } <nl> + } <nl> <nl> return group ; <nl> } <nl> @ @ - 1715 , 7 + 1734 , 7 @ @ method _ handler ( ffi _ cif * cif , void * volatile resp , void * * argp , void * cdata ) { <nl> } <nl> } <nl> else if ( preserve _ last _ error ) { <nl> - JNA _ set _ last _ error ( GET _ LAST _ ERROR ( ) ) ; <nl> + JNA _ set _ last _ error ( env , GET _ LAST _ ERROR ( ) ) ; <nl> } <nl> PROTECTED _ END ( do { throw _ type = EError ; throw _ msg = " Invalid memory access " ; } while ( 0 ) ) ; <nl> } <nl> @ @ - 1792 , 9 + 1811 , 8 @ @ closure _ handler ( ffi _ cif * cif , void * resp , void * * argp , void * cdata ) <nl> JavaVM * jvm = cb - > vm ; <nl> JNIEnv * env ; <nl> jobject obj ; <nl> - int attached ; <nl> + int attached = ( * jvm ) - > GetEnv ( jvm , ( void * ) & env , JNI _ VERSION _ 1 _ 4 ) = = JNI _ OK ; <nl> <nl> - attached = ( * jvm ) - > GetEnv ( jvm , ( void * ) & env , JNI _ VERSION _ 1 _ 4 ) = = JNI _ OK ; <nl> if ( ! attached ) { <nl> if ( ( * jvm ) - > AttachCurrentThread ( jvm , ( void * ) & env , NULL ) ! = JNI _ OK ) { <nl> fprintf ( stderr , " JNA : Can ' t attach native thread to VM for closure handler \ n " ) ; <nl> @ @ - 1823 , 7 + 1841 , 9 @ @ closure _ handler ( ffi _ cif * cif , void * resp , void * * argp , void * cdata ) <nl> } <nl> <nl> if ( ! attached ) { <nl> - ( * jvm ) - > DetachCurrentThread ( jvm ) ; <nl> + if ( ( * jvm ) - > DetachCurrentThread ( jvm ) ! = 0 ) { <nl> + fprintf ( stderr , " JNA : could not detach thread after callback handling \ n " ) ; <nl> + } <nl> } <nl> } <nl> <nl> @ @ - 2936 , 13 + 2956 , 13 @ @ Java _ com _ sun _ jna _ Native _ getPreserveLastError ( JNIEnv * UNUSED ( env ) , jclass UNUSED ( <nl> <nl> JNIEXPORT void JNICALL <nl> Java _ com _ sun _ jna _ Native _ setLastError ( JNIEnv * env , jclass UNUSED ( classp ) , jint code ) { <nl> - JNA _ set _ last _ error ( code ) ; <nl> + JNA _ set _ last _ error ( env , code ) ; <nl> SET _ LAST _ ERROR ( code ) ; <nl> } <nl> <nl> JNIEXPORT jint JNICALL <nl> Java _ com _ sun _ jna _ Native _ getLastError ( JNIEnv * env , jclass UNUSED ( classp ) ) { <nl> - return JNA _ get _ last _ error ( ) ; <nl> + return JNA _ get _ last _ error ( env ) ; <nl> } <nl> <nl> JNIEXPORT jstring JNICALL <nl> @ @ - 2984 , 7 + 3004 , 9 @ @ JNI _ OnLoad ( JavaVM * jvm , void * UNUSED ( reserved ) ) { <nl> result = 0 ; <nl> } <nl> if ( ! attached ) { <nl> - ( * jvm ) - > DetachCurrentThread ( jvm ) ; <nl> + if ( ( * jvm ) - > DetachCurrentThread ( jvm ) ! = 0 ) { <nl> + fprintf ( stderr , " JNA : could not detach thread on initial load \ n " ) ; <nl> + } <nl> } <nl> <nl> return result ; <nl> @ @ - 3046 , 7 + 3068 , 9 @ @ JNI _ OnUnload ( JavaVM * vm , void * UNUSED ( reserved ) ) { <nl> } <nl> <nl> if ( ! attached ) { <nl> - ( * vm ) - > DetachCurrentThread ( vm ) ; <nl> + if ( ( * vm ) - > DetachCurrentThread ( vm ) ! = 0 ) { <nl> + fprintf ( stderr , " JNA : could not detach thread on unload \ n " ) ; <nl> + } <nl> } <nl> } <nl> <nl> @ @ - 3246 , 7 + 3270 , 7 @ @ Java _ com _ sun _ jna _ Native _ initialize _ 1ffi _ 1type ( JNIEnv * env , jclass UNUSED ( cls ) , j <nl> <nl> JNIEXPORT void JNICALL <nl> Java _ com _ sun _ jna _ Native _ detach ( JNIEnv * env , jclass UNUSED ( cls ) , jboolean d ) { <nl> - JNA _ detach ( d ) ; <nl> + JNA _ detach ( env , d ) ; <nl> } <nl> <nl> # ifdef _ _ cplusplus <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index aea2d8d . . cc98f37 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 94 , 10 + 94 , 6 @ @ enum { <nl> / * callback behavior flags * / <nl> enum { <nl> CB _ HAS _ INITIALIZER = com _ sun _ jna _ Native _ CB _ HAS _ INITIALIZER , <nl> - / / detach options <nl> - THREAD _ NOCHANGE , <nl> - THREAD _ DETACH , <nl> - THREAD _ LEAVE _ ATTACHED , <nl> } ; <nl> <nl> typedef struct _ callback { <nl> @ @ - 176 , 10 + 172 , 10 @ @ extern int get _ jtype ( JNIEnv * , jclass ) ; <nl> extern ffi _ type * get _ ffi _ type ( JNIEnv * , jclass , char ) ; <nl> extern ffi _ type * get _ ffi _ rtype ( JNIEnv * , jclass , char ) ; <nl> extern const char * JNA _ callback _ init ( JNIEnv * ) ; <nl> - extern void JNA _ set _ last _ error ( int ) ; <nl> - extern int JNA _ get _ last _ error ( ) ; <nl> + extern void JNA _ set _ last _ error ( JNIEnv * , int ) ; <nl> + extern int JNA _ get _ last _ error ( JNIEnv * ) ; <nl> extern void JNA _ callback _ dispose ( JNIEnv * ) ; <nl> - extern void JNA _ detach ( jboolean ) ; <nl> + extern void JNA _ detach ( JNIEnv * , jboolean ) ; <nl> extern callback * create _ callback ( JNIEnv * , jobject , jobject , <nl> jobjectArray , jclass , <nl> callconv _ t , jint ) ; <nl> diff - - git a / native / testlib . c b / native / testlib . c <nl> index 60dc1d7 . . 87df97c 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 19 , 6 + 19 , 7 @ @ extern " C " { <nl> # include < wchar . h > <nl> # include < stdio . h > <nl> # include < stdarg . h > <nl> + # include < stdlib . h > <nl> # if ! defined ( _ WIN32 _ WCE ) <nl> # include < errno . h > <nl> # endif <nl> @ @ - 635 , 29 + 636 , 33 @ @ typedef struct thread _ data { <nl> int repeat _ count ; <nl> int sleep _ time ; <nl> void ( * func ) ( void ) ; <nl> + char name [ 256 ] ; <nl> } thread _ data ; <nl> static THREAD _ FUNC ( thread _ function , arg ) { <nl> - / / make a local copy <nl> thread _ data td = * ( thread _ data * ) arg ; <nl> void ( * func ) ( void ) = td . func ; <nl> int i ; <nl> + fprintf ( stderr , " thread start 0x % p ( % s ) \ n " , THREAD _ CURRENT ( ) , td . name ) ; <nl> <nl> for ( i = 0 ; i < td . repeat _ count ; i + + ) { <nl> func ( ) ; <nl> SLEEP ( td . sleep _ time ) ; <nl> } <nl> + fprintf ( stderr , " thread exiting 0x % p ( % s ) \ n " , THREAD _ CURRENT ( ) , td . name ) ; <nl> + free ( ( void * ) arg ) ; <nl> THREAD _ EXIT ( ) ; <nl> THREAD _ RETURN ; <nl> } <nl> <nl> - static thread _ data data ; <nl> EXPORT void <nl> - callVoidCallbackThreaded ( void ( * func ) ( void ) , int n , int ms ) { <nl> + callVoidCallbackThreaded ( void ( * func ) ( void ) , int n , int ms , const char * name ) { <nl> THREAD _ T thread ; <nl> - data . repeat _ count = n ; <nl> - data . sleep _ time = ms ; <nl> - data . func = func ; <nl> - THREAD _ CREATE ( & thread , & thread _ function , & data ) ; <nl> + thread _ data * data = ( thread _ data * ) malloc ( sizeof ( thread _ data ) ) ; <nl> + data - > repeat _ count = n ; <nl> + data - > sleep _ time = ms ; <nl> + data - > func = func ; <nl> + snprintf ( data - > name , sizeof ( data - > name ) , " % s " , name ) ; <nl> + THREAD _ CREATE ( & thread , & thread _ function , data ) ; <nl> } <nl> <nl> EXPORT int <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index 3061411 . . 84fd206 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 84 , 7 + 84 , 7 @ @ public class CallbacksTest extends TestCase { <nl> void callback ( ) ; <nl> } <nl> void callVoidCallback ( VoidCallback c ) ; <nl> - void callVoidCallbackThreaded ( VoidCallback c , int count , int ms ) ; <nl> + void callVoidCallbackThreaded ( VoidCallback c , int count , int ms , String name ) ; <nl> interface VoidCallbackCustom extends Callback { <nl> void customMethodName ( ) ; <nl> } <nl> @ @ - 184 , 6 + 184 , 7 @ @ public class CallbacksTest extends TestCase { <nl> TestLibrary lib ; <nl> protected void setUp ( ) { <nl> lib = ( TestLibrary ) Native . loadLibrary ( " testlib " , TestLibrary . class ) ; <nl> + 	 System . out . println ( " Run " + getName ( ) ) ; <nl> } <nl> <nl> protected void tearDown ( ) { <nl> @ @ - 985 , 13 + 986 , 20 @ @ public class CallbacksTest extends TestCase { <nl> CallbackThreadInitializer cti , <nl> int repeat , int sleepms , <nl> int [ ] called ) throws Exception { <nl> + 	 callThreadedCallback ( cb , cti , repeat , sleepms , called , repeat ) ; <nl> + } <nl> + <nl> + protected void callThreadedCallback ( TestLibrary . VoidCallback cb , <nl> + CallbackThreadInitializer cti , <nl> + int repeat , int sleepms , <nl> + int [ ] called , int returnAfter ) throws Exception { <nl> if ( cti ! = null ) { <nl> Native . setCallbackThreadInitializer ( cb , cti ) ; <nl> } <nl> - lib . callVoidCallbackThreaded ( cb , repeat , sleepms ) ; <nl> + lib . callVoidCallbackThreaded ( cb , repeat , sleepms , getName ( ) ) ; <nl> <nl> long start = System . currentTimeMillis ( ) ; <nl> - while ( called [ 0 ] < repeat ) { <nl> + while ( called [ 0 ] < returnAfter ) { <nl> Thread . sleep ( 10 ) ; <nl> if ( System . currentTimeMillis ( ) - start > 5000 ) { <nl> fail ( " Timed out waiting for callback , invoked " + called [ 0 ] + " times so far " ) ; <nl> @ @ - 1029 , 10 + 1037 , 10 @ @ public class CallbacksTest extends TestCase { <nl> final String [ ] name = { null } ; <nl> final ThreadGroup [ ] group = { null } ; <nl> final Thread [ ] t = { null } ; <nl> - final String tname = getName ( ) + " thread " ; <nl> + final String tname = " Test thread for " + getName ( ) ; <nl> final boolean [ ] alive = { false } ; <nl> <nl> - ThreadGroup testGroup = new ThreadGroup ( getName ( ) + " thread group " ) ; <nl> + ThreadGroup testGroup = new ThreadGroup ( " Thread group for " + getName ( ) ) ; <nl> CallbackThreadInitializer init = new CallbackThreadInitializer ( true , false , tname , testGroup ) ; <nl> TestLibrary . VoidCallback cb = new TestLibrary . VoidCallback ( ) { <nl> public void callback ( ) { <nl> @ @ - 1042 , 7 + 1050 , 7 @ @ public class CallbacksTest extends TestCase { <nl> group [ 0 ] = thread . getThreadGroup ( ) ; <nl> t [ 0 ] = thread ; <nl> if ( thread . isAlive ( ) ) { <nl> - / / NOTE : phoneME incorrectly reports thread " alive " status <nl> + / / NOTE : older phoneME incorrectly reports thread " alive " status <nl> alive [ 0 ] = true ; <nl> } <nl> <nl> @ @ - 1052 , 16 + 1060 , 32 @ @ public class CallbacksTest extends TestCase { <nl> } <nl> } <nl> } ; <nl> - callThreadedCallback ( cb , init , 1 , 5000 , called ) ; <nl> + callThreadedCallback ( cb , init , 2 , 2000 , called , 1 ) ; <nl> <nl> assertTrue ( " Callback thread not attached as daemon " , daemon [ 0 ] ) ; <nl> assertEquals ( " Wrong thread name " , tname , name [ 0 ] ) ; <nl> assertEquals ( " Wrong thread group " , testGroup , group [ 0 ] ) ; <nl> - / / NOTE : phoneME incorrectly reports thread " alive " status <nl> + / / NOTE : older phoneME incorrectly reports thread " alive " status <nl> if ( ! alive [ 0 ] ) { <nl> throw new Error ( " VM incorrectly reports Thread . isAlive ( ) = = false within callback " ) ; <nl> } <nl> assertTrue ( " Thread should still be alive " , t [ 0 ] . isAlive ( ) ) ; <nl> + <nl> + long start = System . currentTimeMillis ( ) ; <nl> + 	 while ( called [ 0 ] < 2 ) { <nl> + 	 Thread . sleep ( 10 ) ; <nl> + 	 if ( System . currentTimeMillis ( ) - start > 5000 ) { <nl> + 	 	 fail ( " Timed out waiting for second callback invocation , which indicates detach " ) ; <nl> + 	 } <nl> + 	 } <nl> + <nl> + start = System . currentTimeMillis ( ) ; <nl> + 	 while ( t [ 0 ] . isAlive ( ) ) { <nl> + 	 Thread . sleep ( 10 ) ; <nl> + 	 if ( System . currentTimeMillis ( ) - start > 5000 ) { <nl> + 	 	 fail ( " Timed out waiting for thread to detach and die " ) ; <nl> + 	 } <nl> + 	 } <nl> } <nl> <nl> / / Detach preference is indicated by the initializer . Thread is attached <nl> @ @ - 1073 , 7 + 1097 , 7 @ @ public class CallbacksTest extends TestCase { <nl> final int COUNT = 5 ; <nl> CallbackThreadInitializer init = new CallbackThreadInitializer ( true , false ) { <nl> public String getName ( Callback cb ) { <nl> - return CallbacksTest . this . getName ( ) + " thread " + called [ 0 ] ; <nl> + return " Test thread for " + CallbacksTest . this . getName ( ) + " ( call count : " + called [ 0 ] + " ) " ; <nl> } <nl> } ; <nl> TestLibrary . VoidCallback cb = new TestLibrary . VoidCallback ( ) { <nl> @ @ - 1096 , 24 + 1120 , 32 @ @ public class CallbacksTest extends TestCase { <nl> public void callback ( ) { <nl> threads . add ( new WeakReference ( Thread . currentThread ( ) ) ) ; <nl> if ( + + called [ 0 ] = = 1 ) { <nl> - Thread . currentThread ( ) . setName ( " Thread to be cleaned up " ) ; <nl> + Thread . currentThread ( ) . setName ( getName ( ) + " ( Thread to be cleaned up ) " ) ; <nl> } <nl> - Native . detach ( false ) ; <nl> + 	 	 Native . detach ( false ) ; <nl> } <nl> } ; <nl> - CallbackThreadInitializer asDaemon = new CallbackThreadInitializer ( true ) ; <nl> - callThreadedCallback ( cb , asDaemon , 1 , 0 , called ) ; <nl> - while ( threads . size ( ) = = 0 ) { <nl> + 	 / / Always attach as daemon to ensure tests will exit <nl> + CallbackThreadInitializer asDaemon = new CallbackThreadInitializer ( true ) { <nl> + 	 public String getName ( Callback cb ) { <nl> + 	 	 return " Test thread for " + CallbacksTest . this . getName ( ) ; <nl> + 	 } <nl> + 	 } ; <nl> + callThreadedCallback ( cb , asDaemon , 2 , 100 , called ) ; <nl> + 	 / / Wait for it to start up <nl> + while ( threads . size ( ) = = 0 & & called [ 0 ] = = 0 ) { <nl> Thread . sleep ( 10 ) ; <nl> } <nl> long start = System . currentTimeMillis ( ) ; <nl> WeakReference ref = ( WeakReference ) threads . iterator ( ) . next ( ) ; <nl> while ( ref . get ( ) ! = null ) { <nl> System . gc ( ) ; <nl> - Thread . sleep ( 10 ) ; <nl> + Thread . sleep ( 1000 ) ; <nl> + 	 Thread [ ] remaining = new Thread [ Thread . activeCount ( ) ] ; <nl> + 	 Thread . enumerate ( remaining ) ; <nl> if ( System . currentTimeMillis ( ) - start > 10000 ) { <nl> Thread t = ( Thread ) ref . get ( ) ; <nl> - fail ( " Timed out waiting for attached thread to be detached on exit and disposed : " + t + " alive : " + t . isAlive ( ) + " daemon " + t . isDaemon ( ) ) ; <nl> + fail ( " Timed out waiting for native attached thread to be GC ' d : " + t + " alive : " + t . isAlive ( ) + " daemon : " + t . isDaemon ( ) + " \ n " + Arrays . asList ( remaining ) ) ; <nl> } <nl> } <nl> } <nl> diff - - git a / test / com / sun / jna / DirectCallbacksTest . java b / test / com / sun / jna / DirectCallbacksTest . java <nl> index e97a449 . . 9e92c9b 100644 <nl> - - - a / test / com / sun / jna / DirectCallbacksTest . java <nl> + + + b / test / com / sun / jna / DirectCallbacksTest . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ public class DirectCallbacksTest extends CallbacksTest { <nl> public native Int32CallbackX returnCallback ( ) ; <nl> public native Int32CallbackX returnCallbackArgument ( Int32CallbackX cb ) ; <nl> public native void callVoidCallback ( VoidCallback c ) ; <nl> - public native void callVoidCallbackThreaded ( VoidCallback c , int count , int ms ) ; <nl> + public native void callVoidCallbackThreaded ( VoidCallback c , int count , int ms , String name ) ; <nl> <nl> public native int callInt32Callback ( CustomCallback cb , int arg1 , int arg2 ) ; <nl> public native void callCallbackInStruct ( CbStruct s ) ;
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 93ca4ce . . 0a57637 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 18 , 6 + 18 , 7 @ @ Bug Fixes <nl> * [ # 215 ] ( https : / / github . com / twall / jna / issues / 215 ) : Force use of XSI ` strerror _ r ` on linux - [ LionelCons ] ( https : / / github . com / LionelCons ) . <nl> * [ # 214 ] ( https : / / github . com / twall / jna / issues / 214 ) : Don ' t map library names when an absolute path is provided - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 218 ] ( https : / / github . com / twall / jna / issues / 218 ) : Explicitly handle broken Android SecurityManager implementation - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ # 223 ] ( https : / / github . com / twall / jna / issues / 223 ) : Fix layout / size derivation for unions - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Release 3 . 5 . 2 <nl> = = = = = = = = = = = = = <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index 68742f1 . . 8431799 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 114 , 7 + 114 , 7 @ @ public abstract class Structure { <nl> String arch = System . getProperty ( " os . arch " ) . toLowerCase ( ) ; <nl> isPPC = " ppc " . equals ( arch ) | | " powerpc " . equals ( arch ) ; <nl> isSPARC = " sparc " . equals ( arch ) ; <nl> - 	 isARM = arch . startsWith ( " arm " ) ; <nl> + isARM = arch . startsWith ( " arm " ) ; <nl> } <nl> <nl> / * * Use the platform default alignment . * / <nl> @ @ - 216 , 7 + 216 , 7 @ @ public abstract class Structure { <nl> return typeMapper ; <nl> } <nl> <nl> - / * * Initialize the type mapper for this structure . <nl> + / * * Initialize the type mapper for this structure . <nl> * If < code > null < / code > , the default mapper for the <nl> * defining class will be used . <nl> * / <nl> @ @ - 871 , 7 + 871 , 7 @ @ public abstract class Structure { <nl> return list ; <nl> } <nl> <nl> - / * * Returns all field names ( sorted ) provided so far by <nl> + / * * Returns all field names ( sorted ) provided so far by <nl> { @ link # getFieldOrder } <nl> @ param force set if results are required immediately <nl> @ return null if not yet able to provide fields , and force is false . <nl> @ @ - 899 , 7 + 899 , 7 @ @ public abstract class Structure { <nl> <nl> Set orderedNames = new HashSet ( fieldOrder ) ; <nl> if ( ! orderedNames . equals ( names ) ) { <nl> - throw new Error ( " Structure . getFieldOrder ( ) on " + getClass ( ) <nl> + throw new Error ( " Structure . getFieldOrder ( ) on " + getClass ( ) <nl> + " returns names ( " <nl> + sort ( fieldOrder ) <nl> + " ) which do not match declared field names ( " <nl> @ @ - 991 , 6 + 991 , 8 @ @ public abstract class Structure { <nl> private int alignType = ALIGN _ DEFAULT ; <nl> private TypeMapper typeMapper ; <nl> private boolean variable ; <nl> + / / For unions only , field on which the union FFI type info is based <nl> + private StructField typeInfoField ; <nl> } <nl> <nl> private void validateField ( String name , Class type ) { <nl> @ @ - 1029 , 7 + 1031 , 6 @ @ public abstract class Structure { <nl> members . <nl> * / <nl> private LayoutInfo deriveLayout ( boolean force , boolean avoidFFIType ) { <nl> - <nl> int calculatedSize = 0 ; <nl> List fields = getFields ( force ) ; <nl> if ( fields = = null ) { <nl> @ @ - 1139 , 11 + 1140 , 24 @ @ public abstract class Structure { <nl> if ( ( calculatedSize % fieldAlignment ) ! = 0 ) { <nl> calculatedSize + = fieldAlignment - ( calculatedSize % fieldAlignment ) ; <nl> } <nl> - structField . offset = calculatedSize ; <nl> - calculatedSize + = structField . size ; <nl> + if ( this instanceof Union ) { <nl> + structField . offset = 0 ; <nl> + calculatedSize = Math . max ( calculatedSize , structField . size ) ; <nl> + } <nl> + else { <nl> + structField . offset = calculatedSize ; <nl> + calculatedSize + = structField . size ; <nl> + } <nl> <nl> / / Save the field in our list <nl> info . fields . put ( structField . name , structField ) ; <nl> + <nl> + if ( info . typeInfoField = = null <nl> + | | info . typeInfoField . size < structField . size <nl> + | | ( info . typeInfoField . size = = structField . size <nl> + & & Structure . class . isAssignableFrom ( structField . type ) ) ) { <nl> + info . typeInfoField = structField ; <nl> + } <nl> } <nl> <nl> if ( calculatedSize > 0 ) { <nl> @ @ - 1504 , 7 + 1518 , 7 @ @ public abstract class Structure { <nl> This is typically most effective when a native call populates a large <nl> structure and you only need a few fields out of it . After the native <nl> call you can call { @ link # readField ( String ) } on only the fields of <nl> - interest . <nl> + interest . <nl> * / <nl> public void setAutoSynch ( boolean auto ) { <nl> setAutoRead ( auto ) ; <nl> @ @ - 1544 , 7 + 1558 , 7 @ @ public abstract class Structure { <nl> return FFIType . get ( obj ) ; <nl> } <nl> <nl> - / * * Called from native code only ; same as { @ link <nl> + / * * Called from native code only ; same as { @ link <nl> * # newInstance ( Class , Pointer ) } , except that it additionally performs <nl> * { @ link # conditionalAutoRead ( ) } . <nl> * / <nl> @ @ - 1619 , 6 + 1633 , 20 @ @ public abstract class Structure { <nl> } <nl> } <nl> <nl> + / * * Keep track of the largest aggregate field of the union to use for <nl> + * FFI type information . <nl> + * / <nl> + StructField typeInfoField ( ) { <nl> + LayoutInfo info ; <nl> + synchronized ( layoutInfo ) { <nl> + info = ( LayoutInfo ) layoutInfo . get ( getClass ( ) ) ; <nl> + } <nl> + if ( info ! = null ) { <nl> + return info . typeInfoField ; <nl> + } <nl> + return null ; <nl> + } <nl> + <nl> static class StructField extends Object { <nl> public String name ; <nl> public Class type ; <nl> @ @ - 1704 , 7 + 1732 , 7 @ @ public abstract class Structure { <nl> ref . ensureAllocated ( true ) ; <nl> <nl> if ( ref instanceof Union ) { <nl> - StructField sf = ( ( Union ) ref ) . biggestField ; <nl> + StructField sf = ( ( Union ) ref ) . typeInfoField ( ) ; <nl> els = new Pointer [ ] { <nl> get ( ref . getFieldValue ( sf . field ) , sf . type ) , <nl> null , <nl> diff - - git a / src / com / sun / jna / Union . java b / src / com / sun / jna / Union . java <nl> index d899e81 . . d08b50d 100644 <nl> - - - a / src / com / sun / jna / Union . java <nl> + + + b / src / com / sun / jna / Union . java <nl> @ @ - 1 , 14 + 1 , 14 @ @ <nl> / * Copyright ( c ) 2007 - 2012 Timothy Wall , All Rights Reserved <nl> - * <nl> + * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> * License as published by the Free Software Foundation ; either <nl> * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * <nl> + * <nl> * This library is distributed in the hope that it will be useful , <nl> * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> + * Lesser General Public License for more details . <nl> * / <nl> package com . sun . jna ; <nl> <nl> @ @ - 20 , 18 + 20 , 17 @ @ import java . util . List ; <nl> / * * Represents a native union . When writing to native memory , the field <nl> * corresponding to the type passed to { @ link # setType } will be written <nl> * to native memory . Upon reading from native memory , Structure , String , <nl> - * or WString fields will < em > not < / em > be initialized unless they are <nl> + * or WString fields will < em > not < / em > be initialized unless they are <nl> * the current field as identified by a call to { @ link # setType } . The current <nl> * field is always unset by default to avoid accidentally attempting to read <nl> - * a field that is not valid . In the case of a String , for instance , an <nl> + * a field that is not valid . In the case of a String , for instance , an <nl> * invalid pointer may result in a memory fault when attempting to initialize <nl> - * the String . <nl> + * the String . <nl> * / <nl> public abstract class Union extends Structure { <nl> private StructField activeField ; <nl> - StructField biggestField ; <nl> - <nl> - / * * Create a Union whose size and alignment will be calculated <nl> + <nl> + / * * Create a Union whose size and alignment will be calculated <nl> * automatically . <nl> * / <nl> protected Union ( ) { } <nl> @ @ - 65 , 10 + 64 , 10 @ @ public abstract class Union extends Structure { <nl> return list ; <nl> } <nl> <nl> - / * * Indicates by type which field will be used to write to native memory . <nl> + / * * Indicates by type which field will be used to write to native memory . <nl> * If there are multiple fields of the same type , use { @ link <nl> * # setType ( String ) } instead with the field name . <nl> - * @ throws IllegalArgumentException if the type does not correspond to <nl> + * @ throws IllegalArgumentException if the type does not correspond to <nl> * any declared union field . <nl> * / <nl> public void setType ( Class type ) { <nl> @ @ - 82 , 7 + 81 , 7 @ @ public abstract class Union extends Structure { <nl> } <nl> throw new IllegalArgumentException ( " No field of type " + type + " in " + this ) ; <nl> } <nl> - <nl> + <nl> / * * <nl> * Indicates which field will be used to write to native memory . <nl> * @ throws IllegalArgumentException if the name does not correspond to <nl> @ @ - 199 , 11 + 198 , 11 @ @ public abstract class Union extends Structure { <nl> } <nl> <nl> / * * Avoid reading pointer - based fields and structures unless explicitly <nl> - * selected . Structures may contain pointer - based fields which can <nl> + * selected . Structures may contain pointer - based fields which can <nl> * crash the VM if not properly initialized . <nl> * / <nl> Object readField ( StructField field ) { <nl> - if ( field = = activeField <nl> + if ( field = = activeField <nl> | | ( ! Structure . class . isAssignableFrom ( field . type ) <nl> & & ! String . class . isAssignableFrom ( field . type ) <nl> & & ! WString . class . isAssignableFrom ( field . type ) ) ) { <nl> @ @ - 211 , 56 + 210 , 12 @ @ public abstract class Union extends Structure { <nl> } <nl> / / Field not accessible <nl> / / TODO : read structure , to the extent possible ; need a " recursive " <nl> - / / flag to " read " <nl> + / / flag to " read " to indicate we want to avoid pointer - based fields <nl> return null ; <nl> } <nl> - <nl> - / * * Adjust the size to be the size of the largest element , and ensure <nl> - * all fields begin at offset zero . <nl> - * / <nl> - int calculateSize ( boolean force , boolean avoidFFIType ) { <nl> - int size = super . calculateSize ( force , avoidFFIType ) ; <nl> - if ( size ! = CALCULATE _ SIZE ) { <nl> - int fsize = 0 ; <nl> - for ( Iterator i = fields ( ) . values ( ) . iterator ( ) ; i . hasNext ( ) ; ) { <nl> - StructField f = ( StructField ) i . next ( ) ; <nl> - f . offset = 0 ; <nl> - if ( f . size > fsize <nl> - / / Prefer aggregate types to simple types , since they <nl> - / / will have more complex packing rules ( some platforms <nl> - / / have specific methods for packing small structs into <nl> - / / registers , which may not match the packing of bytes <nl> - / / for a primitive type ) . <nl> - | | ( f . size = = fsize <nl> - & & Structure . class . isAssignableFrom ( f . type ) ) ) { <nl> - fsize = f . size ; <nl> - biggestField = f ; <nl> - } <nl> - } <nl> - size = calculateAlignedSize ( fsize ) ; <nl> - if ( size > 0 ) { <nl> - / / Update native FFI type information , if needed <nl> - if ( this instanceof ByValue & & ! avoidFFIType ) { <nl> - getTypeInfo ( ) ; <nl> - } <nl> - } <nl> - } <nl> - return size ; <nl> - } <nl> + <nl> / * * All fields are considered the " first " element . * / <nl> protected int getNativeAlignment ( Class type , Object value , boolean isFirstElement ) { <nl> return super . getNativeAlignment ( type , value , true ) ; <nl> } <nl> - <nl> - / * * Avoid calculating type information until we know our biggest field . <nl> - * Return type information for the largest field to ensure all available <nl> - * bits are used . <nl> - * / <nl> - Pointer getTypeInfo ( ) { <nl> - if ( biggestField = = null ) { <nl> - / / Not calculated yet <nl> - return null ; <nl> - } <nl> - return super . getTypeInfo ( ) ; <nl> - } <nl> } <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index 2c4f21c . . 482e069 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 88 , 7 + 88 , 7 @ @ public class StructureTest extends TestCase { <nl> public int f2 ; <nl> public int f3 ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " f0 " , " f1 " , " f2 " , " f3 " } ) ; <nl> + return Arrays . asList ( new String [ ] { " f0 " , " f1 " , " f2 " , " f3 " } ) ; <nl> } <nl> } <nl> <nl> @ @ - 151 , 7 + 151 , 7 @ @ public class StructureTest extends TestCase { <nl> public float f ; <nl> public double d ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " b " , " s " , " i " , " l " , " f " , " d " } ) ; <nl> + return Arrays . asList ( new String [ ] { " b " , " s " , " i " , " l " , " f " , " d " } ) ; <nl> } <nl> } <nl> Structure s = new TestStructure ( ) ; <nl> @ @ - 170 , 7 + 170 , 7 @ @ public class StructureTest extends TestCase { <nl> public float f ; <nl> public double d ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " b " , " s " , " i " , " l " , " f " , " d " } ) ; <nl> + return Arrays . asList ( new String [ ] { " b " , " s " , " i " , " l " , " f " , " d " } ) ; <nl> } <nl> } <nl> Structure s = new TestStructure ( ) ; <nl> @ @ - 195 , 21 + 195 , 21 @ @ public class StructureTest extends TestCase { <nl> public byte field0 = 0x01 ; <nl> public short field1 = 0x0202 ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " field0 " , " field1 " } ) ; <nl> + return Arrays . asList ( new String [ ] { " field0 " , " field1 " } ) ; <nl> } <nl> } <nl> public static class TestStructure1 extends FilledStructure { <nl> public byte field0 = 0x01 ; <nl> public int field1 = 0x02020202 ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " field0 " , " field1 " } ) ; <nl> + return Arrays . asList ( new String [ ] { " field0 " , " field1 " } ) ; <nl> } <nl> } <nl> public static class TestStructure2 extends FilledStructure { <nl> public short field0 = 0x0101 ; <nl> public int field1 = 0x02020202 ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " field0 " , " field1 " } ) ; <nl> + return Arrays . asList ( new String [ ] { " field0 " , " field1 " } ) ; <nl> } <nl> } <nl> public static class TestStructure3 extends FilledStructure { <nl> @ @ - 217 , 7 + 217 , 7 @ @ public class StructureTest extends TestCase { <nl> public short field1 = 0x0202 ; <nl> public int field2 = 0x03030303 ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " field0 " , " field1 " , " field2 " } ) ; <nl> + return Arrays . asList ( new String [ ] { " field0 " , " field1 " , " field2 " } ) ; <nl> } <nl> } <nl> public static class TestStructure4 extends FilledStructure { <nl> @ @ - 226 , 14 + 226 , 14 @ @ public class StructureTest extends TestCase { <nl> public int field2 = 0x03030303 ; <nl> public long field3 = 0x0404040404040404L ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " field0 " , " field1 " , " field2 " , " field3 " } ) ; <nl> + return Arrays . asList ( new String [ ] { " field0 " , " field1 " , " field2 " , " field3 " } ) ; <nl> } <nl> } <nl> public static class TestStructure5 extends FilledStructure { <nl> public long field0 = 0x0101010101010101L ; <nl> public byte field1 = 0x02 ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " field0 " , " field1 " } ) ; <nl> + return Arrays . asList ( new String [ ] { " field0 " , " field1 " } ) ; <nl> } <nl> } <nl> public interface SizeTest extends Library { <nl> @ @ - 354 , 7 + 354 , 7 @ @ public class StructureTest extends TestCase { <nl> + + allocations ; <nl> } <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " x " , " y " } ) ; <nl> + return Arrays . asList ( new String [ ] { " x " , " y " } ) ; <nl> } <nl> } <nl> public void testStructureField ( ) { <nl> @ @ - 362 , 7 + 362 , 7 @ @ public class StructureTest extends TestCase { <nl> public PublicTestStructure s1 , s2 ; <nl> public int after ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " s1 " , " s2 " , " after " } ) ; <nl> + return Arrays . asList ( new String [ ] { " s1 " , " s2 " , " after " } ) ; <nl> } <nl> } <nl> TestStructure s = new TestStructure ( ) ; <nl> @ @ - 386 , 6 + 386 , 25 @ @ public class StructureTest extends TestCase { <nl> s . s2 . getPointer ( ) ) ; <nl> } <nl> <nl> + static class TestUnion extends Union { <nl> + public int u _ int ; <nl> + public float u _ float ; <nl> + public double u _ double ; <nl> + } <nl> + public void testUnionField ( ) { <nl> + class TestStructure extends Structure { <nl> + public long s _ long ; <nl> + public TestUnion s _ union ; <nl> + public int s _ int ; <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( new String [ ] { " s _ long " , " s _ union " , " s _ int " } ) ; <nl> + } <nl> + } <nl> + TestStructure s = new TestStructure ( ) ; <nl> + assertEquals ( " Wrong structure size " , 24 , s . size ( ) ) ; <nl> + assertEquals ( " Wrong union size " , 8 , s . s _ union . size ( ) ) ; <nl> + } <nl> + <nl> public static class NonAllocatingTestStructure extends PublicTestStructure { <nl> public NonAllocatingTestStructure ( ) { } <nl> public NonAllocatingTestStructure ( Pointer p ) { super ( p ) ; read ( ) ; } <nl> @ @ - 394 , 16 + 413 , 16 @ @ public class StructureTest extends TestCase { <nl> } <nl> } <nl> <nl> - / / TODO : add ' l newInstance ( Pointer ) tests : <nl> + / / TODO : add ' l newInstance ( Pointer ) tests : <nl> / / NOTE : ensure structure - by - value respected ( no more flag on newjavastructure ) <nl> - / / native call ( direct mode ) <nl> + / / native call ( direct mode ) <nl> / / getNativeAlignment <nl> public void testStructureFieldAvoidsSeparateMemoryAllocation ( ) { <nl> class TestStructure extends Structure { <nl> public NonAllocatingTestStructure s1 ; <nl> public TestStructure ( ) { } <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " s1 " } ) ; <nl> + return Arrays . asList ( new String [ ] { " s1 " } ) ; <nl> } <nl> } <nl> TestStructure ts = new TestStructure ( ) ; <nl> @ @ - 434 , 8 + 453 , 8 @ @ public class StructureTest extends TestCase { <nl> / / initialized array elements <nl> public PublicTestStructure [ ] inner2 = ( PublicTestStructure [ ] ) <nl> new PublicTestStructure ( ) . toArray ( 2 ) ; <nl> - protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " inner " , " inner2 " } ) ; <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( new String [ ] { " inner " , " inner2 " } ) ; <nl> } <nl> } <nl> TestStructure s = new TestStructure ( ) ; <nl> @ @ - 530 , 7 + 549 , 7 @ @ public class StructureTest extends TestCase { <nl> public double [ ] da = new double [ 3 ] ; <nl> public PublicTestStructure nested ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " z " , " b " , " c " , " s " , " i " , " l " , " f " , " d " , " ba " , " ca " , " sa " , " ia " , " la " , " fa " , " da " , " nested " } ) ; <nl> + return Arrays . asList ( new String [ ] { " z " , " b " , " c " , " s " , " i " , " l " , " f " , " d " , " ba " , " ca " , " sa " , " ia " , " la " , " fa " , " da " , " nested " } ) ; <nl> } <nl> } <nl> TestStructure s = new TestStructure ( ) ; <nl> @ @ - 624 , 8 + 643 , 8 @ @ public class StructureTest extends TestCase { <nl> class TestStructure extends Structure { <nl> public int i ; <nl> public NativeLong l ; <nl> - protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " i " , " l " } ) ; <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( new String [ ] { " i " , " l " } ) ; <nl> } <nl> } <nl> TestStructure s = new TestStructure ( ) ; <nl> @ @ - 672 , 14 + 691 , 14 @ @ public class StructureTest extends TestCase { <nl> <nl> public static class BadFieldStructure extends Structure { <nl> public Object badField ; <nl> - protected List getFieldOrder ( ) { <nl> + protected List getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " badField " } ) ; <nl> } <nl> } <nl> public void testUnsupportedField ( ) { <nl> class BadNestedStructure extends Structure { <nl> public BadFieldStructure badStruct = new BadFieldStructure ( ) ; <nl> - protected List getFieldOrder ( ) { <nl> + protected List getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " badStruct " } ) ; <nl> } <nl> } <nl> @ @ - 881 , 7 + 900 , 7 @ @ public class StructureTest extends TestCase { <nl> assertTrue ( " Read should preserve structure memory " , <nl> inner . getPointer ( ) instanceof Memory ) ; <nl> } <nl> - <nl> + <nl> public static class TestPointer extends PointerType { } <nl> public void testPreservePointerFields ( ) { <nl> class TestStructure extends Structure { <nl> @ @ - 925 , 7 + 944 , 7 @ @ public class StructureTest extends TestCase { <nl> assertEquals ( " String field should not be overwritten " , m2 , s . getPointer ( ) . getPointer ( Pointer . SIZE ) ) ; <nl> } <nl> <nl> - / / Ensure string cacheing doesn ' t interfere with wrapped structure writes . <nl> + / / Ensure string cacheing doesn ' t interfere with wrapped structure writes . <nl> public static class StructureFromNative extends Structure { <nl> public String s ; <nl> protected List getFieldOrder ( ) { <nl> @ @ - 938 , 7 + 957 , 7 @ @ public class StructureTest extends TestCase { <nl> public StructureFromNative ( ) { <nl> } <nl> } <nl> - <nl> + <nl> public void testInitializeStructureFieldWithStrings ( ) { <nl> class ContainingStructure extends Structure { <nl> public StructureFromNative inner ; <nl> @ @ - 1021 , 7 + 1040 , 7 @ @ public class StructureTest extends TestCase { <nl> } <nl> TestStructure s = new TestStructure ( ) ; <nl> s . field = new PublicTestStructure . ByReference ( ) ; <nl> - PublicTestStructure . ByReference [ ] array = <nl> + PublicTestStructure . ByReference [ ] array = <nl> ( PublicTestStructure . ByReference [ ] ) s . field . toArray ( 2 ) ; <nl> final int VALUE = - 1 ; <nl> array [ 1 ] . x = VALUE ; <nl> @ @ - 1066 , 13 + 1085 , 13 @ @ public class StructureTest extends TestCase { <nl> return Arrays . asList ( new String [ ] { " size " , " alignment " , " type " , " elements " } ) ; <nl> } <nl> public TestFFIType ( Pointer p ) { <nl> - super ( p ) ; <nl> + super ( p ) ; <nl> read ( ) ; <nl> assertTrue ( " Test FFIType type not initialized : " + this , this . type ! = 0 ) ; <nl> <nl> / / Force libffi to explicitly calculate the size field of <nl> / / this FFIType object <nl> - int size = Native . initialize _ ffi _ type ( p . peer ) ; <nl> + int size = Native . initialize _ ffi _ type ( p . peer ) ; <nl> read ( ) ; <nl> assertEquals ( " Test FFIType size improperly initialized : " + TestFFIType . this , size , TestFFIType . this . size . intValue ( ) ) ; <nl> } <nl> @ @ - 1123 , 7 + 1142 , 7 @ @ public class StructureTest extends TestCase { <nl> public int intField ; <nl> public PublicTestStructure inner ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " intField " , " inner " } ) ; <nl> + return Arrays . asList ( new String [ ] { " intField " , " inner " } ) ; <nl> } <nl> } <nl> TestStructure s = new TestStructure ( ) ; <nl> @ @ - 1154 , 7 + 1173 , 7 @ @ public class StructureTest extends TestCase { <nl> 	 class TestStructure extends Structure { <nl> public ByteByReference ref ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " ref " } ) ; <nl> + return Arrays . asList ( new String [ ] { " ref " } ) ; <nl> } <nl> 	 } <nl> 	 TestStructure s = new TestStructure ( ) ; <nl> @ @ - 1171 , 7 + 1190 , 7 @ @ public class StructureTest extends TestCase { <nl> 	 class TestStructure extends Structure { <nl> public ByteByReference ref ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " ref " } ) ; <nl> + return Arrays . asList ( new String [ ] { " ref " } ) ; <nl> } <nl> 	 } <nl> 	 TestStructure s = new TestStructure ( ) ; <nl> @ @ - 1191 , 7 + 1210 , 7 @ @ public class StructureTest extends TestCase { <nl> public static class ROStructure extends Structure { <nl> public final int field ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " field " } ) ; <nl> + return Arrays . asList ( new String [ ] { " field " } ) ; <nl> } <nl> { <nl> / / Initialize in ctor to avoid compiler replacing <nl> @ @ - 1241 , 7 + 1260 , 7 @ @ public class StructureTest extends TestCase { <nl> class TestStructure extends Structure { <nl> public NativeLong [ ] longs = new NativeLong [ SIZE ] ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " longs " } ) ; <nl> + return Arrays . asList ( new String [ ] { " longs " } ) ; <nl> } <nl> } <nl> TestStructure s = new TestStructure ( ) ; <nl> @ @ - 1277 , 7 + 1296 , 7 @ @ public class StructureTest extends TestCase { <nl> public NativeLong nl = INITIAL ; <nl> public NativeLong uninitialized ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " nl " , " uninitialized " } ) ; <nl> + return Arrays . asList ( new String [ ] { " nl " , " uninitialized " } ) ; <nl> } <nl> } <nl> TestStructure ts = new TestStructure ( ) ; <nl> @ @ - 1300 , 7 + 1319 , 7 @ @ public class StructureTest extends TestCase { <nl> class TestStructure extends Structure { <nl> public int f1 , f2 ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " f1 " , " f2 " } ) ; <nl> + return Arrays . asList ( new String [ ] { " f1 " , " f2 " } ) ; <nl> } <nl> } <nl> class TestStructure2 extends TestStructure { <nl> @ @ - 1333 , 7 + 1352 , 7 @ @ public class StructureTest extends TestCase { <nl> class TestStructure extends Structure { <nl> public int f1 , f2 ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " f1 " , " f2 " , " f3 " } ) ; <nl> + return Arrays . asList ( new String [ ] { " f1 " , " f2 " , " f3 " } ) ; <nl> } <nl> } <nl> try { <nl> @ @ - 1387 , 7 + 1406 , 7 @ @ public class StructureTest extends TestCase { <nl> return list ; <nl> } <nl> } <nl> - <nl> + <nl> TestStructure s = new TestStructure ( ) ; <nl> assertEquals ( " Wrong field order " , <nl> Arrays . asList ( ORDER ) , s . getFieldOrder ( ) ) ; <nl> @ @ - 1444 , 13 + 1463 , 13 @ @ public class StructureTest extends TestCase { <nl> Structure s = new TestStructure ( ) ; <nl> assertEquals ( " Wrong type mapper : " + s , mapper , s . getTypeMapper ( ) ) ; <nl> } <nl> - <nl> + <nl> public void testWriteWithNullBoxedPrimitives ( ) { <nl> class TestStructure extends Structure { <nl> public Boolean zfield ; <nl> public Integer field ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " zfield " , " field " } ) ; <nl> + return Arrays . asList ( new String [ ] { " zfield " , " field " } ) ; <nl> } <nl> } <nl> TestStructure s = new TestStructure ( ) ; <nl> @ @ - 1465 , 7 + 1484 , 7 @ @ public class StructureTest extends TestCase { <nl> public int [ ] second = new int [ 4 ] ; <nl> public Pointer [ ] third = new Pointer [ 4 ] ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " first " , " second " , " third " } ) ; <nl> + return Arrays . asList ( new String [ ] { " first " , " second " , " third " } ) ; <nl> } <nl> } <nl> class TestStructure extends Structure { <nl> @ @ - 1492 , 7 + 1511 , 7 @ @ public class StructureTest extends TestCase { <nl> assertTrue ( " Equals is not symmetric " , s2 . equals ( s1 ) ) ; <nl> assertTrue ( " Equals is not transitive " , s1 . equals ( s2 ) & & s2 . equals ( s3 ) & & s1 . equals ( s3 ) ) ; <nl> <nl> - <nl> + <nl> } <nl> <nl> public void testStructureEqualsByValueByReference ( ) { <nl> @ @ - 1501 , 7 + 1520 , 7 @ @ public class StructureTest extends TestCase { <nl> public int [ ] second = new int [ 4 ] ; <nl> public Pointer [ ] third = new Pointer [ 4 ] ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " first " , " second " , " third " } ) ; <nl> + return Arrays . asList ( new String [ ] { " first " , " second " , " third " } ) ; <nl> } <nl> } <nl> class ByReference extends TestStructure implements Structure . ByReference { } <nl> @ @ - 1518 , 14 + 1537 , 14 @ @ public class StructureTest extends TestCase { <nl> assertTrue ( " Equals is not symmetric ( ByValue ) " , s3 . equals ( s1 ) ) ; <nl> assertTrue ( " Equals is not transitive ( ByReference / ByValue ) " , s1 . equals ( s2 ) & & s2 . equals ( s3 ) & & s1 . equals ( s3 ) ) ; <nl> <nl> - <nl> + <nl> } <nl> <nl> public void testStructureHashCodeMatchesEqualsTrue ( ) { <nl> class TestStructure extends Structure { <nl> public int first ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " first " } ) ; <nl> + return Arrays . asList ( new String [ ] { " first " } ) ; <nl> } <nl> } <nl> TestStructure s1 = new TestStructure ( ) ; <nl> @ @ - 1540 , 7 + 1559 , 7 @ @ public class StructureTest extends TestCase { <nl> public byte first ; <nl> public int second ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " first " , " second " } ) ; <nl> + return Arrays . asList ( new String [ ] { " first " , " second " } ) ; <nl> } <nl> } <nl> TestStructure s1 = new TestStructure ( ) ; <nl> @ @ - 1559 , 7 + 1578 , 7 @ @ public class StructureTest extends TestCase { <nl> public int unique ; <nl> public TestStructureByRef s ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " unique " , " s " } ) ; <nl> + return Arrays . asList ( new String [ ] { " unique " , " s " } ) ; <nl> } <nl> } <nl> TestStructureByRef s = new TestStructureByRef ( ) ; <nl> @ @ - 1592 , 7 + 1611 , 7 @ @ public class StructureTest extends TestCase { <nl> public CyclicTestStructure ( ) { } <nl> public CyclicTestStructure . ByReference next ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " next " } ) ; <nl> + return Arrays . asList ( new String [ ] { " next " } ) ; <nl> } <nl> } <nl> public void testCyclicRead ( ) { <nl> @ @ - 1618 , 7 + 1637 , 7 @ @ public class StructureTest extends TestCase { <nl> class TestStructure extends Structure { <nl> public int field ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " field " } ) ; <nl> + return Arrays . asList ( new String [ ] { " field " } ) ; <nl> } <nl> public TestStructure ( Pointer p ) { <nl> super ( p ) ; <nl> @ @ - 1637 , 7 + 1656 , 7 @ @ public class StructureTest extends TestCase { <nl> public int intField ; <nl> public byte [ ] arrayField = new byte [ 256 ] ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " intField " , " arrayField " } ) ; <nl> + return Arrays . asList ( new String [ ] { " intField " , " arrayField " } ) ; <nl> } <nl> public TestStructure ( Pointer p ) { <nl> super ( p ) ; <nl> @ @ - 1676 , 7 + 1695 , 7 @ @ public class StructureTest extends TestCase { <nl> public ByReference [ ] array = new ByReference [ 13 ] ; <nl> public int value2 ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " value1 " , " array " , " value2 " } ) ; <nl> + return Arrays . asList ( new String [ ] { " value1 " , " array " , " value2 " } ) ; <nl> } <nl> <nl> public static class ByReference extends TestByReferenceArrayField implements Structure . ByReference { } <nl> @ @ - 1703 , 7 + 1722 , 7 @ @ public class StructureTest extends TestCase { <nl> class TestStructure extends Structure { <nl> public int field ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " field " } ) ; <nl> + return Arrays . asList ( new String [ ] { " field " } ) ; <nl> } <nl> public TestStructure ( ) { } <nl> public TestStructure ( Pointer p ) { super ( p ) ; read ( ) ; } <nl> @ @ - 1720 , 7 + 1739 , 7 @ @ public class StructureTest extends TestCase { <nl> class TestStructure extends Structure { <nl> public int field ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " field " } ) ; <nl> + return Arrays . asList ( new String [ ] { " field " } ) ; <nl> } <nl> } <nl> Structure ts = new TestStructure ( ) ; ts . ensureAllocated ( ) ; <nl> @ @ - 1728 , 12 + 1747 , 12 @ @ public class StructureTest extends TestCase { <nl> <nl> assertSame ( " Structure layout not cached " , ts . fields ( ) , ts2 . fields ( ) ) ; <nl> } <nl> - <nl> + <nl> public void testStructureLayoutVariableNoCache ( ) { <nl> class TestStructure extends Structure { <nl> public byte [ ] variable ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " variable " } ) ; <nl> + return Arrays . asList ( new String [ ] { " variable " } ) ; <nl> } <nl> public TestStructure ( int size ) { <nl> this . variable = new byte [ size ] ; <nl> @ @ - 1767 , 7 + 1786 , 7 @ @ public class StructureTest extends TestCase { <nl> class TestStructure extends Structure { <nl> public boolean field ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " field " } ) ; <nl> + return Arrays . asList ( new String [ ] { " field " } ) ; <nl> } <nl> public TestStructure ( ) { <nl> super ( m ) ; <nl> @ @ - 1788 , 7 + 1807 , 7 @ @ public class StructureTest extends TestCase { <nl> public byte first ; <nl> public int second ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " first " , " second " } ) ; <nl> + return Arrays . asList ( new String [ ] { " first " , " second " } ) ; <nl> } <nl> public TestStructure ( ) { <nl> setAlignType ( ALIGN _ NONE ) ; <nl> @ @ - 1851 , 7 + 1870 , 7 @ @ public class StructureTest extends TestCase { <nl> super ( mapper ) ; <nl> } <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " b " , " s " , " p0 " , " p1 " , " p2 " , " p3 " , " p4 " , " p5 " , " p6 " , " p7 " } ) ; <nl> + return Arrays . asList ( new String [ ] { " b " , " s " , " p0 " , " p1 " , " p2 " , " p3 " , " p4 " , " p5 " , " p6 " , " p7 " } ) ; <nl> } <nl> } <nl> Structure s = new TestStructure ( ) ; <nl> diff - - git a / test / com / sun / jna / UnionTest . java b / test / com / sun / jna / UnionTest . java <nl> index 579c26c . . 6f2d0d0 100644 <nl> - - - a / test / com / sun / jna / UnionTest . java <nl> + + + b / test / com / sun / jna / UnionTest . java <nl> @ @ - 1 , 14 + 1 , 14 @ @ <nl> / * Copyright ( c ) 2007 Timothy Wall , All Rights Reserved <nl> - * <nl> + * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> * License as published by the Free Software Foundation ; either <nl> * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * <nl> + * <nl> * This library is distributed in the hope that it will be useful , <nl> * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> + * Lesser General Public License for more details . <nl> * / <nl> package com . sun . jna ; <nl> <nl> @ @ - 23 , 22 + 23 , 22 @ @ public class UnionTest extends TestCase { <nl> public static class TestStructure extends Structure { <nl> public String value ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " value " } ) ; <nl> + return Arrays . asList ( new String [ ] { " value " } ) ; <nl> } <nl> } <nl> - <nl> + <nl> public static class BigTestStructure extends Structure { <nl> public long field1 ; <nl> public long field2 ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " field1 " , " field2 " } ) ; <nl> + return Arrays . asList ( new String [ ] { " field1 " , " field2 " } ) ; <nl> } <nl> } <nl> - <nl> + <nl> public static class IntStructure extends Structure { <nl> public int value ; <nl> protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( new String [ ] { " value " } ) ; <nl> + return Arrays . asList ( new String [ ] { " value " } ) ; <nl> } <nl> } <nl> <nl> @ @ - 59 , 7 + 59 , 7 @ @ public class UnionTest extends TestCase { <nl> public WString wstring ; <nl> public Pointer pointer ; <nl> } <nl> - <nl> + <nl> public static class StructUnion extends Union { <nl> public int intField ; <nl> public TestStructure testStruct ; <nl> @ @ - 69 , 31 + 69 , 33 @ @ public class UnionTest extends TestCase { <nl> <nl> public void testCalculateSize ( ) { <nl> Union u = new SizedUnion ( ) ; <nl> + assertEquals ( " Wrong union size : " + u , 16 , u . size ( ) ) ; <nl> assertEquals ( " Union should be size of largest field " , <nl> new BigTestStructure ( ) . size ( ) , u . size ( ) ) ; <nl> } <nl> <nl> public void testFieldOffsets ( ) { <nl> StructUnion u = new StructUnion ( ) ; <nl> + assertEquals ( " Wrong union size : " + u , Pointer . SIZE , u . size ( ) ) ; <nl> u . setType ( u . testStruct . getClass ( ) ) ; <nl> u . write ( ) ; <nl> - assertEquals ( " Wrong struct member base address " , <nl> + assertEquals ( " Wrong struct member base address " , <nl> u . getPointer ( ) , u . testStruct . getPointer ( ) ) ; <nl> u . setType ( u . intStruct . getClass ( ) ) ; <nl> u . write ( ) ; <nl> - assertEquals ( " Wrong struct member base address ( 2 ) " , <nl> + assertEquals ( " Wrong struct member base address ( 2 ) " , <nl> u . getPointer ( ) , u . intStruct . getPointer ( ) ) ; <nl> } <nl> <nl> public void testWriteUnion ( ) { <nl> SizedUnion u = new SizedUnion ( ) ; <nl> - final int VALUE = 0x12345678 ; <nl> + final int VALUE = 0x12345678 ; <nl> u . intField = VALUE ; <nl> u . setType ( int . class ) ; <nl> u . write ( ) ; <nl> assertEquals ( " Wrong value written " , VALUE , u . getPointer ( ) . getInt ( 0 ) ) ; <nl> } <nl> - <nl> + <nl> public void testReadUnion ( ) { <nl> SizedUnion u = new SizedUnion ( ) ; <nl> final int VALUE = 0x12345678 ; <nl> @ @ - 109 , 11 + 111 , 12 @ @ public class UnionTest extends TestCase { <nl> assertNull ( " Unselected String should be null " , u . string ) ; <nl> assertNull ( " Unselected WString should be null " , u . wstring ) ; <nl> } <nl> - <nl> + <nl> public void testWriteTypedUnion ( ) { <nl> final int VALUE = 0x12345678 ; <nl> / / write an instance of a direct union class to memory <nl> StructUnion u = new StructUnion ( ) ; <nl> + assertEquals ( " Wrong union size : " + u , Pointer . SIZE , u . size ( ) ) ; <nl> IntStructure intStruct = new IntStructure ( ) ; <nl> intStruct . value = VALUE ; <nl> u . setTypedValue ( intStruct ) ; <nl> @ @ - 138 , 6 + 141 , 7 @ @ public class UnionTest extends TestCase { <nl> <nl> public void testReadTypedUnion ( ) { <nl> StructUnion u = new StructUnion ( ) ; <nl> + assertEquals ( " Wrong union size : " + u , Pointer . SIZE , u . size ( ) ) ; <nl> final int VALUE = 0x12345678 ; <nl> u . getPointer ( ) . setInt ( 0 , VALUE ) ; <nl> assertEquals ( " int structure not read properly " , VALUE , ( ( IntStructure ) u . getTypedValue ( IntStructure . class ) ) . value ) ; <nl> @ @ - 145 , 29 + 149 , 34 @ @ public class UnionTest extends TestCase { <nl> <nl> public void testReadTypeInfo ( ) { <nl> SizedUnion u = new SizedUnion ( ) ; <nl> + assertEquals ( " Wrong union size : " + u , 16 , u . size ( ) ) ; <nl> + assertNotNull ( " Type information is missing for union field of type " + BigTestStructure . class , Structure . getTypeInfo ( BigTestStructure . class ) ) ; <nl> + assertNotNull ( " Type information is missing for union instance " , u . getTypeInfo ( ) ) ; <nl> if ( Native . POINTER _ SIZE = = 4 ) { <nl> - assertEquals ( " Type size should be that of longest field if no field active " , <nl> + assertEquals ( " Type size should be that of largest field if no field is active " , <nl> Structure . getTypeInfo ( BigTestStructure . class ) . getInt ( 0 ) , <nl> u . getTypeInfo ( ) . getInt ( 0 ) ) ; <nl> } <nl> else { <nl> - assertEquals ( " Type size should be that of longest field if no field active " , <nl> + assertEquals ( " Type size should be that of largest field if no field is active " , <nl> Structure . getTypeInfo ( BigTestStructure . class ) . getLong ( 0 ) , <nl> u . getTypeInfo ( ) . getLong ( 0 ) ) ; <nl> } <nl> u . setType ( int . class ) ; <nl> + assertNotNull ( " Type information is missing for union field of type " + BigTestStructure . class , Structure . getTypeInfo ( BigTestStructure . class ) ) ; <nl> + assertNotNull ( " Type information is missing for union instance after type set " , u . getTypeInfo ( ) ) ; <nl> if ( Native . POINTER _ SIZE = = 4 ) { <nl> - assertEquals ( " Type size should be that of longest field if field active " , <nl> + assertEquals ( " Type size should be that of largest field if any field is active " , <nl> Structure . getTypeInfo ( BigTestStructure . class ) . getInt ( 0 ) , <nl> u . getTypeInfo ( ) . getInt ( 0 ) ) ; <nl> } <nl> else { <nl> - assertEquals ( " Type size should be that of longest field if field active " , <nl> + assertEquals ( " Type size should be that of largest field if any field is active " , <nl> Structure . getTypeInfo ( BigTestStructure . class ) . getLong ( 0 ) , <nl> u . getTypeInfo ( ) . getLong ( 0 ) ) ; <nl> } <nl> } <nl> - <nl> + <nl> public void testArraysInUnion ( ) { <nl> class TestUnion extends Union { <nl> public byte [ ] bytes = new byte [ 16 ] ; <nl> @ @ - 175 , 6 + 184 , 7 @ @ public class UnionTest extends TestCase { <nl> public int [ ] ints = new int [ 4 ] ; <nl> } <nl> Union u = new TestUnion ( ) ; <nl> + assertEquals ( " Wrong union size : " + u , 16 , u . size ( ) ) ; <nl> u . setType ( byte [ ] . class ) ; <nl> u . setType ( short [ ] . class ) ; <nl> u . setType ( int [ ] . class ) ; <nl> @ @ - 183 , 9 + 193 , 10 @ @ public class UnionTest extends TestCase { <nl> public void testDuplicateFieldTypes ( ) { <nl> class TestUnion extends Union { <nl> public int field1 ; <nl> - public int field2 ; <nl> + public int field2 ; <nl> } <nl> TestUnion u = new TestUnion ( ) ; <nl> + assertEquals ( " Wrong union size : " + u , 4 , u . size ( ) ) ; <nl> u . setType ( " field1 " ) ; <nl> u . field1 = 42 ; <nl> u . write ( ) ;
diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 8b83c12 . . 8205786 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 17 , 9 + 17 , 6 @ @ <nl> * / <nl> <nl> # if defined ( _ WIN32 ) <nl> - # ifdef _ MSC _ VER <nl> - # pragma warning ( disable : 4201 ) / * nameless struct / union ( jni _ md . h ) * / <nl> - # endif <nl> # ifndef UNICODE <nl> # define UNICODE <nl> # endif <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index cd65853 . . aea2d8d 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 27 , 6 + 27 , 7 @ @ <nl> # pragma warning ( disable : 4055 ) / * cast data pointer to function pointer * / <nl> # pragma warning ( disable : 4204 ) / * structure initializer * / <nl> # pragma warning ( disable : 4710 ) / * swprintf not inlined * / <nl> + # pragma warning ( disable : 4201 ) / * nameless struct / union ( jni _ md . h ) * / <nl> # else <nl> # include < malloc . h > <nl> # endif / * _ MSC _ VER * /
diff - - git a / native / Makefile b / native / Makefile <nl> index aecfa04 . . da6f303 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 147 , 6 + 147 , 7 @ @ HOST _ CONFIG = - - host = arm - mingw32ce <nl> FFI _ ENV + = LD = arm - mingw32ce - ld CPP = cpp CFLAGS = " $ ( CDEFINES ) " <nl> PHONEME = . . / phoneme / cdc / src <nl> JAVA _ INCLUDES = - I $ ( PHONEME ) / share / javavm / export - I $ ( PHONEME ) / share - I $ ( PHONEME ) / win32 - I $ ( PHONEME ) / win32 - arm <nl> + TESTLIB _ TRUNC = $ ( BUILD ) / testlib - truncated . dll <nl> endif <nl> <nl> ifeq ( $ ( OS ) , win32 ) <nl> @ @ - 158 , 6 + 159 , 7 @ @ EXTRAOBJS = $ ( RSRC ) <nl> STRIP = @ echo <nl> LIBPFX = <nl> LIBSFX = . dll <nl> + TESTLIB _ TRUNC = $ ( BUILD ) / testlib - truncated . dll <nl> <nl> ifneq ( $ ( ARCH ) , amd64 ) <nl> ifeq ( $ ( CC ) , gcc ) <nl> diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index 789d61e . . 22b277d 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 119 , 6 + 119 , 7 @ @ public class NativeLibrary { <nl> } <nl> <nl> private static NativeLibrary loadLibrary ( String libraryName , Map options ) { <nl> + boolean isAbsolutePath = new File ( libraryName ) . isAbsolute ( ) ; <nl> List searchPath = new LinkedList ( ) ; <nl> int openFlags = openFlags ( options ) ; <nl> <nl> @ @ - 187 , 7 + 188 , 9 @ @ public class NativeLibrary { <nl> } <nl> } <nl> / / Search framework libraries on OS X <nl> - else if ( Platform . isMac ( ) & & ! libraryName . endsWith ( " . dylib " ) ) { <nl> + else if ( Platform . isMac ( ) <nl> + & & ! libraryName . endsWith ( " . dylib " ) <nl> + & & ! isAbsolutePath ) { <nl> libraryPath = matchFramework ( libraryName ) ; <nl> if ( libraryPath ! = null ) { <nl> try { <nl> @ @ - 197 , 7 + 200 , 7 @ @ public class NativeLibrary { <nl> } <nl> } <nl> / / Try the same library with a " lib " prefix <nl> - else if ( Platform . isWindows ( ) ) { <nl> + else if ( Platform . isWindows ( ) & & ! isAbsolutePath ) { <nl> libraryPath = findLibraryPath ( " lib " + libraryName , searchPath ) ; <nl> try { handle = Native . open ( libraryPath , openFlags ) ; } <nl> catch ( UnsatisfiedLinkError e2 ) { e = e2 ; } <nl> diff - - git a / test / com / sun / jna / LibraryLoadTest . java b / test / com / sun / jna / LibraryLoadTest . java <nl> index da61afe . . 98e4071 100644 <nl> - - - a / test / com / sun / jna / LibraryLoadTest . java <nl> + + + b / test / com / sun / jna / LibraryLoadTest . java <nl> @ @ - 82 , 7 + 82 , 9 @ @ public class LibraryLoadTest extends TestCase implements Paths { <nl> } <nl> <nl> public void testLoadExplicitAbsolutePath ( ) throws MalformedURLException { <nl> - NativeLibrary . getInstance ( new File ( TESTPATH , " testlib - truncated " ) . getAbsolutePath ( ) ) ; <nl> + / / windows requires " . dll " suffix <nl> + String name = " testlib - truncated " + ( Platform . isWindows ( ) ? " . dll " : " " ) ; <nl> + NativeLibrary . getInstance ( new File ( TESTPATH , name ) . getAbsolutePath ( ) ) ; <nl> } <nl> <nl> public static interface CLibrary extends Library {
diff - - git a / test / com / sun / jna / LastErrorTest . java b / test / com / sun / jna / LastErrorTest . java <nl> index c0283ff . . ff7692d 100644 <nl> - - - a / test / com / sun / jna / LastErrorTest . java <nl> + + + b / test / com / sun / jna / LastErrorTest . java <nl> @ @ - 75 , 10 + 75 , 10 @ @ public class LastErrorTest extends TestCase { <nl> } <nl> } <nl> <nl> + private final int ERROR = Platform . isWindows ( ) ? 1 : - 1 ; <nl> public void testThrowLastError ( ) { <nl> TestLibrary lib = ( TestLibrary ) Native . loadLibrary ( " testlib " , TestLibrary . class , OPTIONS ) ; <nl> <nl> - final int ERROR = - 1 ; <nl> lib . noThrowLastError ( ERROR ) ; <nl> assertEquals ( " Last error not preserved " , ERROR , Native . getLastError ( ) ) ; <nl> try { <nl> @ @ - 87 , 14 + 87 , 13 @ @ public class LastErrorTest extends TestCase { <nl> } <nl> catch ( LastErrorException e ) { <nl> assertEquals ( " Exception should contain error code " , ERROR , e . getErrorCode ( ) ) ; <nl> - assertTrue ( " Exception should include error message : " + e . getMessage ( ) , e . getMessage ( ) . length ( ) > 10 ) ; <nl> + assertTrue ( " Exception should include error message : ' " + e . getMessage ( ) + " ' " , e . getMessage ( ) . length ( ) > 0 ) ; <nl> } <nl> } <nl> <nl> public void testThrowLastErrorDirect ( ) { <nl> TestLibrary lib = new DirectTestLibrary ( ) ; <nl> <nl> - final int ERROR = - 1 ; <nl> lib . noThrowLastError ( ERROR ) ; <nl> assertEquals ( " Last error not preserved " , ERROR , Native . getLastError ( ) ) ; <nl> try {
diff - - git a / test / com / sun / jna / DirectTest . java b / test / com / sun / jna / DirectTest . java <nl> index 1891e95 . . 7fa5a28 100644 <nl> - - - a / test / com / sun / jna / DirectTest . java <nl> + + + b / test / com / sun / jna / DirectTest . java <nl> @ @ - 110 , 7 + 110 , 7 @ @ public class DirectTest extends TestCase implements Paths { <nl> : new URL [ ] { <nl> new File ( BUILDDIR + " / classes " ) . toURI ( ) . toURL ( ) , <nl> new File ( BUILDDIR + " / test - classes " ) . toURI ( ) . toURL ( ) , <nl> - } , null ) ; <nl> + } , new CloverLoader ( ) ) ; <nl> } <nl> protected Class findClass ( String name ) throws ClassNotFoundException { <nl> String boot = System . getProperty ( " jna . boot . library . path " ) ; <nl> @ @ - 125 , 6 + 125 , 7 @ @ public class DirectTest extends TestCase implements Paths { <nl> } <nl> } <nl> <nl> + / / Fails under clover <nl> public void testRegisterMethods ( ) throws Exception { <nl> / / Use a dedicated class loader to ensure the class can be gc ' d <nl> String name = " com . sun . jna . DirectTest $ MathLibrary " ; <nl> diff - - git a / test / com / sun / jna / JNAUnloadTest . java b / test / com / sun / jna / JNAUnloadTest . java <nl> index 75aa85b . . 4faaa07 100644 <nl> - - - a / test / com / sun / jna / JNAUnloadTest . java <nl> + + + b / test / com / sun / jna / JNAUnloadTest . java <nl> @ @ - 32 , 7 + 32 , 7 @ @ public class JNAUnloadTest extends TestCase implements Paths { <nl> Platform . isWindowsCE ( ) <nl> ? new File ( " / Storage Card / " + ( fromJar ? " jna . jar " : " test . jar " ) ) . toURI ( ) . toURL ( ) <nl> : new File ( BUILDDIR + ( fromJar ? " / jna . jar " : " / classes " ) ) . toURI ( ) . toURL ( ) , <nl> - } , null ) ; <nl> + } , new CloverLoader ( ) ) ; <nl> if ( fromJar ) { <nl> assertJarExists ( ) ; <nl> } <nl> diff - - git a / test / com / sun / jna / LibraryLoadTest . java b / test / com / sun / jna / LibraryLoadTest . java <nl> index 2347bf8 . . da61afe 100644 <nl> - - - a / test / com / sun / jna / LibraryLoadTest . java <nl> + + + b / test / com / sun / jna / LibraryLoadTest . java <nl> @ @ - 29 , 7 + 29 , 8 @ @ public class LibraryLoadTest extends TestCase implements Paths { <nl> <nl> private class TestLoader extends URLClassLoader { <nl> public TestLoader ( File path ) throws MalformedURLException { <nl> - super ( new URL [ ] { path . toURI ( ) . toURL ( ) } , null ) ; <nl> + super ( new URL [ ] { path . toURI ( ) . toURL ( ) , } , <nl> + new CloverLoader ( ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / test / com / sun / jna / Paths . java b / test / com / sun / jna / Paths . java <nl> index 49c163e . . c7f8592 100644 <nl> - - - a / test / com / sun / jna / Paths . java <nl> + + + b / test / com / sun / jna / Paths . java <nl> @ @ - 12 , 11 + 12 , 27 @ @ <nl> * / <nl> package com . sun . jna ; <nl> <nl> + import java . io . File ; <nl> + import java . net . MalformedURLException ; <nl> + import java . net . URL ; <nl> + import java . net . URLClassLoader ; <nl> + <nl> public interface Paths { <nl> + boolean USING _ CLOVER = System . getProperty ( " java . class . path " ) . indexOf ( " clover " ) ! = - 1 ; <nl> + / * * Use this as a parent class loader to ensure clover can be loaded . * / <nl> + class CloverLoader extends URLClassLoader { <nl> + public CloverLoader ( ) throws MalformedURLException { <nl> + super ( new URL [ ] { <nl> + new File ( USING _ CLOVER ? " lib / clover . jar " : " / dev / null " ) . toURI ( ) . toURL ( ) <nl> + } , null ) ; <nl> + } <nl> + } <nl> String BUILDDIR = Platform . isWindowsCE ( ) <nl> ? " / Storage Card " <nl> : System . getProperty ( " jna . builddir " , <nl> - " build " + ( Platform . is64Bit ( ) ? " - d64 " : " " ) ) ; <nl> + USING _ CLOVER <nl> + ? " build . clover " <nl> + : " build " + ( Platform . is64Bit ( ) ? " - d64 " : " " ) ) ; <nl> String CLASSES = BUILDDIR + ( Platform . isWindowsCE ( ) ? " " : " / classes " ) ; <nl> String JNAJAR = BUILDDIR + " / jna . jar " ; <nl> <nl> diff - - git a / test / com / sun / jna / PerformanceTest . java b / test / com / sun / jna / PerformanceTest . java <nl> index 5d51c8e . . 4162b32 100644 <nl> - - - a / test / com / sun / jna / PerformanceTest . java <nl> + + + b / test / com / sun / jna / PerformanceTest . java <nl> @ @ - 17 , 9 + 17 , 6 @ @ import com . sun . jna . * ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> import java . lang . ref . * ; <nl> import java . io . File ; <nl> - import java . net . MalformedURLException ; <nl> - import java . net . URL ; <nl> - import java . net . URLClassLoader ; <nl> import java . nio . Buffer ; <nl> import java . nio . ByteBuffer ; <nl> import java . nio . ByteOrder ; <nl> diff - - git a / test / com / sun / jna / WebStartTest . java b / test / com / sun / jna / WebStartTest . java <nl> index b451e48 . . 1fc5025 100644 <nl> - - - a / test / com / sun / jna / WebStartTest . java <nl> + + + b / test / com / sun / jna / WebStartTest . java <nl> @ @ - 136 , 10 + 136 , 8 @ @ public class WebStartTest extends TestCase implements Paths { <nl> contents = contents . replace ( " { CODEBASE } " , codebase ) ; <nl> contents = contents . replace ( " { JNLP _ FILE } " , jnlp . toURI ( ) . toURL ( ) . toString ( ) ) ; <nl> contents = contents . replace ( " { PORT } " , String . valueOf ( port ) ) ; <nl> - boolean clover = <nl> - System . getProperty ( " java . class . path " ) . indexOf ( " clover " ) ! = - 1 ; <nl> contents = contents . replace ( " { CLOVER } " , <nl> - clover ? " < jar href = ' clover . jar ' / > " : " " ) ; <nl> + USING _ CLOVER ? " < jar href = ' clover . jar ' / > " : " " ) ; <nl> <nl> try { <nl> OutputStream os = new FileOutputStream ( jnlp ) ;
diff - - git a / native / Makefile b / native / Makefile <nl> index c027283 . . aecfa04 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 367 , 6 + 367 , 8 @ @ $ ( LIBRARY ) : $ ( JNIDISPATCH _ OBJS ) $ ( FFI _ LIB ) <nl> $ ( TESTLIB ) : $ ( BUILD ) / testlib . o <nl> 	 $ ( LD ) $ ( LDFLAGS ) $ < $ ( LIBS ) <nl> <nl> + # These targets provide for different shared library loading methods <nl> + # without getting into native library load conflicts <nl> $ ( TESTLIB _ JAR ) $ ( TESTLIB _ PATH ) $ ( TESTLIB _ TRUNC ) : $ ( TESTLIB ) <nl> 	 @ cp $ < $ @ <nl> <nl> diff - - git a / native / callback . c b / native / callback . c <nl> index 87c605e . . 9812dc4 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 538 , 7 + 538 , 7 @ @ static void make _ thread _ keys ( ) { <nl> <nl> / * * Store the requested detach state for the current thread . * / <nl> void <nl> - jnidispatch _ detach ( jboolean d ) { <nl> + JNA _ detach ( jboolean d ) { <nl> if ( ! TLS _ SET ( tls _ detach _ key , L2A ( ( jlong ) ( d ? THREAD _ DETACH : THREAD _ LEAVE _ ATTACHED ) ) ) ) { <nl> fprintf ( stderr , " JNA : unable to set thread - local detach value \ n " ) ; <nl> } <nl> @ @ - 546 , 7 + 546 , 7 @ @ jnidispatch _ detach ( jboolean d ) { <nl> <nl> / * * Store the value of errno / GetLastError in TLS * / <nl> void <nl> - jnidispatch _ set _ last _ error ( int err ) { <nl> + JNA _ set _ last _ error ( int err ) { <nl> if ( ! TLS _ SET ( tls _ errno _ key , L2A ( ( jlong ) err ) ) ) { <nl> fprintf ( stderr , " JNA : unable to set thread - local errno value \ n " ) ; <nl> } <nl> @ @ - 554 , 7 + 554 , 7 @ @ jnidispatch _ set _ last _ error ( int err ) { <nl> <nl> / * * Store the value of errno / GetLastError in TLS * / <nl> int <nl> - jnidispatch _ get _ last _ error ( ) { <nl> + JNA _ get _ last _ error ( ) { <nl> return ( int ) A2L ( TLS _ GET ( tls _ errno _ key ) ) ; <nl> } <nl> <nl> @ @ - 645 , 7 + 645 , 7 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> } <nl> <nl> const char * <nl> - jnidispatch _ callback _ init ( JNIEnv * env ) { <nl> + JNA _ callback _ init ( JNIEnv * env ) { <nl> # ifndef _ WIN32 <nl> static pthread _ once _ t key _ once = PTHREAD _ ONCE _ INIT ; <nl> pthread _ once ( & key _ once , make _ thread _ keys ) ; <nl> @ @ - 657 , 7 + 657 , 7 @ @ jnidispatch _ callback _ init ( JNIEnv * env ) { <nl> } <nl> <nl> void <nl> - jnidispatch _ callback _ dispose ( JNIEnv * env ) { <nl> + JNA _ callback _ dispose ( JNIEnv * env ) { <nl> if ( classObject ) { <nl> ( * env ) - > DeleteWeakGlobalRef ( env , classObject ) ; <nl> classObject = NULL ; <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 8afc690 . . 8b83c12 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 2 , 7 + 2 , 7 @ @ <nl> * @ ( # ) dispatch . c 1 . 9 98 / 03 / 22 <nl> * <nl> * Copyright ( c ) 1998 Sun Microsystems , Inc . All Rights Reserved . <nl> - * Copyright ( c ) 2007 - 2012 Timothy Wall . All Rights Reserved . <nl> + * Copyright ( c ) 2007 - 2013 Timothy Wall . All Rights Reserved . <nl> * Copyright ( c ) 2007 Wayne Meissner . All Rights Reserved . <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> @ @ - 28 , 6 + 28 , 12 @ @ <nl> # include < psapi . h > <nl> # define STRTYPE wchar _ t * <nl> # define NAME2CSTR ( ENV , JSTR ) newWideCString ( ENV , JSTR ) <nl> + # ifdef _ WIN32 _ WCE <nl> + # include < tlhelp32 . h > <nl> + # define DEFAULT _ LOAD _ OPTS 0 / * altered search path unsupported on CE * / <nl> + # undef GetProcAddress <nl> + # define GetProcAddress GetProcAddressA <nl> + # else <nl> / * See http : / / msdn . microsoft . com / en - us / library / ms682586 ( VS . 85 ) . aspx : <nl> * " Note that the standard search strategy and the alternate search strategy <nl> * specified by LoadLibraryEx with LOAD _ WITH _ ALTERED _ SEARCH _ PATH differ in <nl> @ @ - 35 , 12 + 41 , 6 @ @ <nl> * directory , and the alternate search begins in the directory of the <nl> * executable module that LoadLibraryEx is loading . " <nl> * / <nl> - # ifdef _ WIN32 _ WCE <nl> - # include < tlhelp32 . h > <nl> - # define DEFAULT _ LOAD _ OPTS 0 / * altered search path unsupported on CE * / <nl> - # undef GetProcAddress <nl> - # define GetProcAddress GetProcAddressA <nl> - # else <nl> # define DEFAULT _ LOAD _ OPTS LOAD _ WITH _ ALTERED _ SEARCH _ PATH <nl> # endif <nl> # define LOAD _ LIBRARY ( NAME , OPTS ) ( NAME ? LoadLibraryExW ( NAME , NULL , OPTS ) : GetModuleHandleW ( NULL ) ) <nl> @ @ - 571 , 7 + 571 , 7 @ @ dispatch ( JNIEnv * env , void * func , jint flags , jobjectArray arr , <nl> } <nl> } <nl> else if ( preserve _ last _ error ) { <nl> - jnidispatch _ set _ last _ error ( GET _ LAST _ ERROR ( ) ) ; <nl> + JNA _ set _ last _ error ( GET _ LAST _ ERROR ( ) ) ; <nl> } <nl> PROTECTED _ END ( do { throw _ type = EError ; throw _ msg = " Invalid memory access " ; } while ( 0 ) ) ; <nl> } <nl> @ @ - 1226 , 7 + 1226 , 7 @ @ get _ system _ property ( JNIEnv * env , const char * name , jboolean wide ) { <nl> } <nl> <nl> static const char * <nl> - jnidispatch _ init ( JNIEnv * env ) { <nl> + JNA _ init ( JNIEnv * env ) { <nl> if ( ! LOAD _ CREF ( env , Object , " java / lang / Object " ) ) return " java . lang . Object " ; <nl> if ( ! LOAD _ CREF ( env , Class , " java / lang / Class " ) ) return " java . lang . Class " ; <nl> if ( ! LOAD _ CREF ( env , Method , " java / lang / reflect / Method " ) ) return " java . lang . reflect . Method " ; <nl> @ @ - 1718 , 7 + 1718 , 7 @ @ method _ handler ( ffi _ cif * cif , void * volatile resp , void * * argp , void * cdata ) { <nl> } <nl> } <nl> else if ( preserve _ last _ error ) { <nl> - jnidispatch _ set _ last _ error ( GET _ LAST _ ERROR ( ) ) ; <nl> + JNA _ set _ last _ error ( GET _ LAST _ ERROR ( ) ) ; <nl> } <nl> PROTECTED _ END ( do { throw _ type = EError ; throw _ msg = " Invalid memory access " ; } while ( 0 ) ) ; <nl> } <nl> @ @ - 2939 , 13 + 2939 , 13 @ @ Java _ com _ sun _ jna _ Native _ getPreserveLastError ( JNIEnv * UNUSED ( env ) , jclass UNUSED ( <nl> <nl> JNIEXPORT void JNICALL <nl> Java _ com _ sun _ jna _ Native _ setLastError ( JNIEnv * env , jclass UNUSED ( classp ) , jint code ) { <nl> - jnidispatch _ set _ last _ error ( code ) ; <nl> + JNA _ set _ last _ error ( code ) ; <nl> SET _ LAST _ ERROR ( code ) ; <nl> } <nl> <nl> JNIEXPORT jint JNICALL <nl> Java _ com _ sun _ jna _ Native _ getLastError ( JNIEnv * env , jclass UNUSED ( classp ) ) { <nl> - return jnidispatch _ get _ last _ error ( ) ; <nl> + return JNA _ get _ last _ error ( ) ; <nl> } <nl> <nl> JNIEXPORT jstring JNICALL <nl> @ @ - 2978 , 11 + 2978 , 11 @ @ JNI _ OnLoad ( JavaVM * jvm , void * UNUSED ( reserved ) ) { <nl> } <nl> } <nl> <nl> - if ( ( err = jnidispatch _ init ( env ) ) ! = NULL ) { <nl> + if ( ( err = JNA _ init ( env ) ) ! = NULL ) { <nl> fprintf ( stderr , " JNA : Problems loading core IDs : % s \ n " , err ) ; <nl> result = 0 ; <nl> } <nl> - else if ( ( err = jnidispatch _ callback _ init ( env ) ) ! = NULL ) { <nl> + else if ( ( err = JNA _ callback _ init ( env ) ) ! = NULL ) { <nl> fprintf ( stderr , " JNA : Problems loading callback IDs : % s \ n " , err ) ; <nl> result = 0 ; <nl> } <nl> @ @ - 3034 , 7 + 3034 , 7 @ @ JNI _ OnUnload ( JavaVM * vm , void * UNUSED ( reserved ) ) { <nl> } <nl> } <nl> <nl> - jnidispatch _ callback _ dispose ( env ) ; <nl> + JNA _ callback _ dispose ( env ) ; <nl> <nl> # ifdef JAWT _ HEADLESS _ HACK <nl> if ( jawt _ handle ! = NULL ) { <nl> @ @ - 3249 , 7 + 3249 , 7 @ @ Java _ com _ sun _ jna _ Native _ initialize _ 1ffi _ 1type ( JNIEnv * env , jclass UNUSED ( cls ) , j <nl> <nl> JNIEXPORT void JNICALL <nl> Java _ com _ sun _ jna _ Native _ detach ( JNIEnv * env , jclass UNUSED ( cls ) , jboolean d ) { <nl> - jnidispatch _ detach ( d ) ; <nl> + JNA _ detach ( d ) ; <nl> } <nl> <nl> # ifdef _ _ cplusplus <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index 3394b4a . . cd65853 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 174 , 11 + 174 , 11 @ @ extern void throwByName ( JNIEnv * env , const char * name , const char * msg ) ; <nl> extern int get _ jtype ( JNIEnv * , jclass ) ; <nl> extern ffi _ type * get _ ffi _ type ( JNIEnv * , jclass , char ) ; <nl> extern ffi _ type * get _ ffi _ rtype ( JNIEnv * , jclass , char ) ; <nl> - extern const char * jnidispatch _ callback _ init ( JNIEnv * ) ; <nl> - extern void jnidispatch _ set _ last _ error ( int ) ; <nl> - extern int jnidispatch _ get _ last _ error ( ) ; <nl> - extern void jnidispatch _ callback _ dispose ( JNIEnv * ) ; <nl> - extern void jnidispatch _ detach ( jboolean ) ; <nl> + extern const char * JNA _ callback _ init ( JNIEnv * ) ; <nl> + extern void JNA _ set _ last _ error ( int ) ; <nl> + extern int JNA _ get _ last _ error ( ) ; <nl> + extern void JNA _ callback _ dispose ( JNIEnv * ) ; <nl> + extern void JNA _ detach ( jboolean ) ; <nl> extern callback * create _ callback ( JNIEnv * , jobject , jobject , <nl> jobjectArray , jclass , <nl> callconv _ t , jint ) ; <nl> diff - - git a / test / com / sun / jna / PlatformTest . java b / test / com / sun / jna / PlatformTest . java <nl> index 6e679d5 . . c4813de 100644 <nl> - - - a / test / com / sun / jna / PlatformTest . java <nl> + + + b / test / com / sun / jna / PlatformTest . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 20013 Timothy Wall , All Rights Reserved <nl> + / * Copyright ( c ) 2013 Timothy Wall , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8fb2883 . . f61603c 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 15 , 6 + 15 , 7 @ @ Bug Fixes <nl> * Use TLS to indicate callback detach state , to avoid any potential conflicts with last error storage - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 173 ] ( https : / / github . com / twall / jna / issues / 173 ) : Fix OSX 10 . 8 / Xcode 4 + builds , web start path with Oracle 1 . 7 JDK - [ @ mkjellman ] ( https : / / github . com / mkjellman ) . <nl> * [ # 215 ] ( https : / / github . com / twall / jna / issues / 215 ) : Force use of XSI ` strerror _ r ` on linux - [ LionelCons ] ( https : / / github . com / LionelCons ) . <nl> + * [ # 214 ] ( https : / / github . com / twall / jna / issues / 214 ) : Don ' t map library names when an absolute path is provided - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Release 3 . 5 . 2 <nl> = = = = = = = = = = = = = <nl> diff - - git a / build . xml b / build . xml <nl> index a75a026 . . 198625c 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 725 , 26 + 725 , 26 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < src path = " $ { test . src } " / > <nl> < exclude name = " $ { tests . exclude } " / > <nl> < / javac > <nl> - < ! - - Move ( not copy ) embedded testlib to test class folder so that it will be - - > <nl> - < ! - - packaged into the test jar and NOT available in the FS - based class path - - > <nl> - < move todir = " $ { test . classes } / $ { os . prefix } " > <nl> + < ! - - Set up versions of test library for resource path loading - - > <nl> + < copy todir = " $ { test . classes } / $ { os . prefix } " > <nl> < fileset dir = " $ { build . native } " > <nl> - < patternset id = " embedded - testlib " > <nl> - < include name = " * * / * embedded - testlib * " / > <nl> + < patternset > <nl> + < include name = " * * / * testlib - jar * " / > <nl> + < include name = " * * / * testlib - path * " / > <nl> < / patternset > <nl> < / fileset > <nl> - < / move > <nl> - < ! - - Create a jar for easy movement of tests , and embedded load test - - > <nl> + < / copy > <nl> + < ! - - Create a jar for easy movement of tests , and jar load test - - > <nl> < jar jarfile = " $ { build } / $ { testjar } " > <nl> < fileset dir = " $ { test . classes } " > <nl> < patternset refid = " jar - compiled " / > <nl> - < include name = " * * / * embedded - testlib * " / > <nl> + < include name = " * * / * testlib - jar * " / > <nl> < / fileset > <nl> < / jar > <nl> - < ! - - Ensure embedded library unavailable on FS - based class path - - > <nl> + < ! - - Ensure jar - based library unavailable on FS - based class path - - > <nl> < delete > <nl> < fileset dir = " $ { test . classes } " > <nl> - < include name = " * * / * embedded - testlib * " / > <nl> + < include name = " * * / * testlib - jar * " / > <nl> < / fileset > <nl> < / delete > <nl> < mkdir dir = " $ { build } / jws " / > <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index 079cdd7 . . c027283 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 67 , 7 + 67 , 9 @ @ FFI _ CONFIG = - - enable - static - - disable - shared - - with - pic = yes <nl> endif <nl> LIBRARY = $ ( BUILD ) / $ ( LIBPFX ) jnidispatch $ ( JNISFX ) <nl> TESTLIB = $ ( BUILD ) / $ ( LIBPFX ) testlib $ ( LIBSFX ) <nl> - TESTLIB _ EMBEDDED = $ ( BUILD ) / $ ( LIBPFX ) embedded - testlib $ ( LIBSFX ) <nl> + TESTLIB _ JAR = $ ( BUILD ) / $ ( LIBPFX ) testlib - jar $ ( LIBSFX ) <nl> + TESTLIB _ PATH = $ ( BUILD ) / $ ( LIBPFX ) testlib - path $ ( LIBSFX ) <nl> + TESTLIB _ TRUNC = $ ( BUILD ) / testlib - truncated <nl> TESTLIB2 = $ ( BUILD ) / $ ( LIBPFX ) testlib2 $ ( LIBSFX ) <nl> <nl> # Reasonable defaults based on GCC <nl> @ @ - 342 , 7 + 344 , 7 @ @ else <nl> 	 $ ( CC ) $ ( CFLAGS ) - c $ < $ ( COUT ) <nl> endif <nl> <nl> - all : $ ( LIBRARY ) $ ( TESTLIB ) $ ( TESTLIB2 ) $ ( TESTLIB _ EMBEDDED ) <nl> + all : $ ( LIBRARY ) $ ( TESTLIB ) $ ( TESTLIB2 ) $ ( TESTLIB _ JAR ) $ ( TESTLIB _ PATH ) $ ( TESTLIB _ TRUNC ) <nl> <nl> install : <nl> 	 mkdir $ ( INSTALLDIR ) <nl> @ @ - 365 , 8 + 367 , 8 @ @ $ ( LIBRARY ) : $ ( JNIDISPATCH _ OBJS ) $ ( FFI _ LIB ) <nl> $ ( TESTLIB ) : $ ( BUILD ) / testlib . o <nl> 	 $ ( LD ) $ ( LDFLAGS ) $ < $ ( LIBS ) <nl> <nl> - $ ( TESTLIB _ EMBEDDED ) : $ ( BUILD ) / testlib . o <nl> - 	 $ ( LD ) $ ( LDFLAGS ) $ < $ ( LIBS ) <nl> + $ ( TESTLIB _ JAR ) $ ( TESTLIB _ PATH ) $ ( TESTLIB _ TRUNC ) : $ ( TESTLIB ) <nl> + 	 @ cp $ < $ @ <nl> <nl> ifeq ( $ ( ARSFX ) , . lib ) <nl> TESTDEP = $ ( TESTLIB : . dll = . lib ) <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index c608dc2 . . 5bf8b15 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 699 , 7 + 699 , 7 @ @ public final class Native implements Version { <nl> * / <nl> private static void loadNativeDispatchLibraryFromClasspath ( ) { <nl> try { <nl> - String prefix = " com / sun / jna / " + getNativeLibraryResourcePrefix ( ) ; <nl> + String prefix = " / com / sun / jna / " + getNativeLibraryResourcePrefix ( ) ; <nl> File lib = extractFromResourcePath ( " jnidispatch " , prefix , Native . class . getClassLoader ( ) ) ; <nl> if ( lib = = null ) { <nl> throw new UnsatisfiedLinkError ( " Could not find JNA native support " ) ; <nl> @ @ - 733 , 7 + 733 , 7 @ @ public final class Native implements Version { <nl> * @ throws IOException if resource not found <nl> * / <nl> static File extractFromResourcePath ( String name ) throws IOException { <nl> - return extractFromResourcePath ( name , getNativeLibraryResourcePrefix ( ) , Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> + return extractFromResourcePath ( name , " / " + getNativeLibraryResourcePrefix ( ) , Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> } <nl> <nl> / * * Attempt to extract a native library from the current resource path . <nl> @ @ - 747 , 8 + 747 , 11 @ @ public final class Native implements Version { <nl> * @ throws IOException if resource not found <nl> * / <nl> static File extractFromResourcePath ( String name , String resourcePrefix , ClassLoader loader ) throws IOException { <nl> - String libname = System . mapLibraryName ( name ) ; <nl> - String resourcePath = resourcePrefix + " / " + libname ; <nl> + String libname = name . startsWith ( " / " ) ? name : System . mapLibraryName ( name ) ; <nl> + String resourcePath = name . startsWith ( " / " ) ? name : resourcePrefix + " / " + libname ; <nl> + if ( resourcePath . startsWith ( " / " ) ) { <nl> + resourcePath = resourcePath . substring ( 1 ) ; <nl> + } <nl> URL url = loader . getResource ( resourcePath ) ; <nl> <nl> / / User libraries will have ' . dylib ' <nl> @ @ - 764 , 7 + 767 , 7 @ @ public final class Native implements Version { <nl> url = loader . getResource ( resourcePath ) ; <nl> } <nl> if ( url = = null ) { <nl> - throw new IOException ( " JNA native support ( " + resourcePath + " ) not found in resource path ( " + System . getProperty ( " java . class . path " ) + " ) " ) ; <nl> + throw new IOException ( " Native library ( " + resourcePath + " ) not found in resource path ( " + System . getProperty ( " java . class . path " ) + " ) " ) ; <nl> } <nl> <nl> File lib = null ; <nl> diff - - git a / test / com / sun / jna / LibraryLoadTest . java b / test / com / sun / jna / LibraryLoadTest . java <nl> index 846192f . . 5f4a00a 100644 <nl> - - - a / test / com / sun / jna / LibraryLoadTest . java <nl> + + + b / test / com / sun / jna / LibraryLoadTest . java <nl> @ @ - 52 , 6 + 52 , 35 @ @ public class LibraryLoadTest extends TestCase { <nl> } <nl> } <nl> <nl> + public interface TestLibrary extends Library { <nl> + } <nl> + <nl> + public void testLoadFromJNALibraryPath ( ) { <nl> + NativeLibrary . getInstance ( " testlib " ) ; <nl> + } <nl> + <nl> + public void testLoadFromClasspath ( ) { <nl> + NativeLibrary . getInstance ( " testlib - path " ) ; <nl> + } <nl> + <nl> + public void testLoadFromClasspathAbsolute ( ) { <nl> + String name = System . mapLibraryName ( " testlib - path " ) . replace ( " . jnilib " , " . dylib " ) ; <nl> + NativeLibrary . getInstance ( " / " + Platform . RESOURCE _ PREFIX + " / " + name ) ; <nl> + } <nl> + <nl> + public void testLoadFromJar ( ) { <nl> + NativeLibrary . getInstance ( " testlib - jar " ) ; <nl> + } <nl> + <nl> + public void testLoadFromJarAbsolute ( ) { <nl> + String name = System . mapLibraryName ( " testlib - jar " ) . replace ( " . jnilib " , " . dylib " ) ; <nl> + NativeLibrary . getInstance ( " / " + Platform . RESOURCE _ PREFIX + " / " + name ) ; <nl> + } <nl> + <nl> + public void testLoadExplicitAbsolutePath ( ) { <nl> + NativeLibrary . getInstance ( new File ( BUILDDIR + " / native / testlib - truncated " ) . getAbsolutePath ( ) ) ; <nl> + } <nl> + <nl> public static interface CLibrary extends Library { <nl> int wcslen ( WString wstr ) ; <nl> int strlen ( String str ) ; <nl> diff - - git a / test / com / sun / jna / NativeLibraryTest . java b / test / com / sun / jna / NativeLibraryTest . java <nl> index 96b592b . . 73690ad 100644 <nl> - - - a / test / com / sun / jna / NativeLibraryTest . java <nl> + + + b / test / com / sun / jna / NativeLibraryTest . java <nl> @ @ - 249 , 10 + 249 , 6 @ @ public class NativeLibraryTest extends TestCase { <nl> Native . loadLibrary ( " testlib " , TestLibrary . class , options ) ; <nl> } <nl> <nl> - public void testEmbeddedLibrary ( ) { <nl> - Native . loadLibrary ( " embedded - testlib " , TestLibrary . class ) ; <nl> - } <nl> - <nl> public static void main ( String [ ] args ) { <nl> junit . textui . TestRunner . run ( NativeLibraryTest . class ) ; <nl> }
diff - - git a / build . xml b / build . xml <nl> index 3a1f756 . . 846cbd9 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 856 , 7 + 856 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < / target > <nl> <nl> < target name = " contrib - test " depends = " contrib - jars , compile - tests " > <nl> - < subant target = " test " failonerror = " true " > <nl> + < subant target = " test " failonerror = " true " inheritall = " true " inheritrefs = " true " > <nl> < property name = " file . reference . jna . build " location = " $ { build } " / > <nl> < property name = " file . reference . jna . jar " location = " $ { build } / $ { jar } " / > <nl> < property name = " libs . junit . classpath " location = " lib / junit . jar " / > <nl> diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index 7bddddc . . b7a2161 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> < project name = " platform " default = " default " basedir = " . " > <nl> - < description > Builds , tests , and runs the project platform . < / description > <nl> + < description > Builds and tests platform - specific code . < / description > <nl> < import file = " nbproject / build - impl . xml " / > <nl> < ! - - <nl> <nl> @ @ - 63 , 46 + 63 , 77 @ @ <nl> nbproject / build - impl . xml file . <nl> <nl> - - > <nl> - < condition property = " tests . platform " value = " test - win32 " > <nl> - < os family = " windows " / > <nl> - < / condition > <nl> - < condition property = " tests . platform " value = " test - osx " > <nl> - < os family = " mac " / > <nl> - < / condition > <nl> - < condition property = " tests . platform " value = " test - linux " > <nl> - < os family = " unix " / > <nl> - < / condition > <nl> - < target name = " test " depends = " init , compile - test " description = " Run unit tests . " if = " tests . platform " > <nl> - 	 < antcall target = " $ { tests . platform } " / > <nl> - < / target > <nl> - < target name = " test - report " > <nl> + < target name = " test " depends = " init , compile - test , - pre - test - run " description = " Run platform unit tests . " > <nl> + < property name = " test . fork " value = " yes " / > <nl> + < property name = " build . test . results . dir . abs " location = " $ { build . test . results . dir } " / > <nl> + < mkdir dir = " $ { build . test . results . dir . abs } " / > <nl> + < echo > Saving test results in $ { build . test . results . dir . abs } < / echo > <nl> + < condition property = " tests . platform " value = " * * / mac / * * " > <nl> + < os family = " mac " / > <nl> + < / condition > <nl> + < condition property = " tests . platform " value = " * * / win32 / * * " > <nl> + < os family = " windows " / > <nl> + < / condition > <nl> + < condition property = " tests . platform " value = " * * / unix / * * " > <nl> + < os family = " unix " / > <nl> + < / condition > <nl> + < property name = " tests . platform " value = " " / > <nl> + < property name = " tests . exclude " value = " " / > <nl> + < property name = " tests . exclude - patterns " value = " " / > <nl> + < condition property = " java . awt . headless " value = " true " > <nl> + < isset property = " headless " / > <nl> + < / condition > <nl> + < condition property = " vmopt . arch " value = " - d64 " else = " - Dignore " > <nl> + < and > <nl> + < ! - - Sun 64 - bit VM for windows doesn ' t support the - d64 switch - - > <nl> + < not > < os family = " windows " / > < / not > <nl> + < equals arg1 = " $ { vm . arch } " arg2 = " - d64 " trim = " true " / > <nl> + < / and > <nl> + < / condition > <nl> + < propertyset id = " headless " > <nl> + < propertyref prefix = " java . awt . headless " / > <nl> + < / propertyset > <nl> + < echo > tests . platform = $ { tests . platform } < / echo > <nl> + < junit fork = " $ { test . fork } " failureproperty = " testfailure " tempdir = " $ { build . dir } " > <nl> + < ! - - optionally run headless - - > <nl> + < syspropertyset refid = " headless " / > <nl> + < ! - - avoid VM conflicts with JNA protected mode - - > <nl> + < env key = " $ { ld . preload . name } " file = " $ { libjsig } " / > <nl> + < ! - - Ignore any system install of JNA - - > <nl> + < sysproperty key = " jna . nosys " value = " true " / > <nl> + < ! - - Avoid VM crashes , if possible - - > <nl> + < sysproperty key = " jna . protected " value = " true " / > <nl> + < sysproperty key = " jna . builddir " file = " $ { file . reference . jna . build } " / > <nl> + < jvmarg value = " $ { vmopt . arch } " / > <nl> + < classpath > < path path = " $ { run . test . classpath } " / > < / classpath > <nl> + < formatter type = " brief " usefile = " false " / > <nl> + < formatter type = " xml " / > <nl> + < batchtest todir = " $ { build . test . results . dir } " > <nl> + < fileset dir = " $ { test . src . dir } " excludes = " $ { tests . exclude - patterns } " > <nl> + < ! - - Until StructureFieldOrderTest gets fixed up a little - - > <nl> + < exclude name = " * * / StructureFieldOrderTest . java " / > <nl> + < include name = " com / sun / jna / platform / * Test . java " / > <nl> + < include name = " $ { tests . platform } " / > <nl> + < exclude name = " $ { tests . exclude } " / > <nl> + < / fileset > <nl> + < / batchtest > <nl> + < / junit > <nl> < junitreport todir = " $ { build . test . results . dir } " > <nl> 	 < fileset dir = " $ { build . test . results . dir } " > <nl> 	 < include name = " TEST - * . xml " / > <nl> 	 < / fileset > <nl> 	 < report todir = " $ { build . test . results . dir } " / > <nl> < / junitreport > <nl> - < property name = " build . test . results . dir . abs " location = " $ { build . test . results . dir } " / > <nl> < echo message = " View test report in file : / / $ { build . test . results . dir . abs } / index . html " / > <nl> + < fail if = " testfailure " > One or more tests failed < / fail > <nl> < / target > <nl> - < target name = " test - osx " > <nl> - < echo > No platform tests yet for OSX < / echo > <nl> - < / target > <nl> - < target name = " test - win32 " depends = " - pre - test - run , - do - test - run , test - report , - post - test - run , - test - browse " / > <nl> <nl> - < target name = " test - linux " depends = " - pre - test - run - single " > <nl> + < ! - - One - off test to check field order definitions - - > <nl> + < target name = " test - field - order " depends = " - pre - test - run - single " > <nl> < ! - - @ todo How to ensure sys prop : jna . nosys = true is seen in tests ? - - > <nl> < ! - - < property name = " test . includes " value = " com / sun / jna / platform / * * / * . java " / > - - > <nl> < property name = " test . includes " value = " com / sun / jna / platform / StructureFieldOrderTest . java " / > <nl> - <nl> < property name = " javac . includes " value = " * * / * " / > <nl> - <nl> < antcall target = " test - single " / > <nl> - <nl> - < ! - - <nl> - < antcall target = " test - report " / > <nl> - < antcall target = " - post - test - run " / > <nl> - < antcall target = " - test - browse " / > <nl> - - - > <nl> < / target > <nl> < / project >
diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index bda7ae1 . . c608dc2 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 120 , 7 + 120 , 7 @ @ public final class Native implements Version { <nl> private static final int TYPE _ SIZE _ T = 3 ; <nl> <nl> static { <nl> - loadNativeLibrary ( ) ; <nl> + loadNativeDispatchLibrary ( ) ; <nl> POINTER _ SIZE = sizeof ( TYPE _ VOIDP ) ; <nl> LONG _ SIZE = sizeof ( TYPE _ LONG ) ; <nl> WCHAR _ SIZE = sizeof ( TYPE _ WCHAR _ T ) ; <nl> @ @ - 615 , 52 + 615 , 7 @ @ public final class Native implements Version { <nl> @ param name from < code > os . name < / code > System property <nl> * / <nl> public static String getNativeLibraryResourcePrefix ( int osType , String arch , String name ) { <nl> - String osPrefix ; <nl> - arch = arch . toLowerCase ( ) ; <nl> - if ( " powerpc " . equals ( arch ) ) { <nl> - arch = " ppc " ; <nl> - } <nl> - else if ( " powerpc64 " . equals ( arch ) ) { <nl> - arch = " ppc64 " ; <nl> - } <nl> - else if ( " i386 " . equals ( arch ) ) { <nl> - arch = " x86 " ; <nl> - } <nl> - else if ( " x86 _ 64 " . equals ( arch ) | | " amd64 " . equals ( arch ) ) { <nl> - arch = " x86 - 64 " ; <nl> - } <nl> - switch ( osType ) { <nl> - case Platform . ANDROID : <nl> - if ( arch . startsWith ( " arm " ) ) { <nl> - arch = " arm " ; <nl> - } <nl> - osPrefix = " android - " + arch ; <nl> - break ; <nl> - case Platform . WINDOWS : <nl> - osPrefix = " win32 - " + arch ; <nl> - break ; <nl> - case Platform . WINDOWSCE : <nl> - osPrefix = " w32ce - " + arch ; <nl> - break ; <nl> - case Platform . MAC : <nl> - osPrefix = " darwin " ; <nl> - break ; <nl> - case Platform . LINUX : <nl> - osPrefix = " linux - " + arch ; <nl> - break ; <nl> - case Platform . SOLARIS : <nl> - osPrefix = " sunos - " + arch ; <nl> - break ; <nl> - default : <nl> - osPrefix = name . toLowerCase ( ) ; <nl> - int space = osPrefix . indexOf ( " " ) ; <nl> - if ( space ! = - 1 ) { <nl> - osPrefix = osPrefix . substring ( 0 , space ) ; <nl> - } <nl> - osPrefix + = " - " + arch ; <nl> - break ; <nl> - } <nl> - return osPrefix ; <nl> + return Platform . getNativeLibraryResourcePrefix ( osType , arch , name ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 668 , 7 + 623 , 7 @ @ public final class Native implements Version { <nl> * First tries jna . boot . library . path , then the system path , then from the <nl> * jar file . <nl> * / <nl> - private static void loadNativeLibrary ( ) { <nl> + private static void loadNativeDispatchLibrary ( ) { <nl> <nl> if ( ! Boolean . getBoolean ( " jna . nounpack " ) ) { <nl> try { <nl> @ @ - 721 , 16 + 676 , 20 @ @ public final class Native implements Version { <nl> } <nl> } <nl> } <nl> - try { <nl> - if ( ! Boolean . getBoolean ( " jna . nosys " ) ) { <nl> + if ( ! Boolean . getBoolean ( " jna . nosys " ) ) { <nl> + try { <nl> System . loadLibrary ( libName ) ; <nl> return ; <nl> } <nl> + catch ( UnsatisfiedLinkError e ) { <nl> + } <nl> } <nl> - catch ( UnsatisfiedLinkError e ) { <nl> - System . err . println ( " File found on system path , but not loadable : " + e . getMessage ( ) ) ; <nl> + if ( ! Boolean . getBoolean ( " jna . noclasspath " ) ) { <nl> + loadNativeDispatchLibraryFromClasspath ( ) ; <nl> + } <nl> + else { <nl> + throw new UnsatisfiedLinkError ( " Unable to locate JNA native support library " ) ; <nl> } <nl> - loadNativeLibraryFromClasspath ( ) ; <nl> } <nl> <nl> static final String JNA _ TMPLIB _ PREFIX = " jna " ; <nl> @ @ - 738 , 10 + 697 , 13 @ @ public final class Native implements Version { <nl> * Attempts to load the native library resource from the filesystem , <nl> * extracting the JNA stub library from jna . jar if not already available . <nl> * / <nl> - private static void loadNativeLibraryFromClasspath ( ) { <nl> + private static void loadNativeDispatchLibraryFromClasspath ( ) { <nl> try { <nl> String prefix = " com / sun / jna / " + getNativeLibraryResourcePrefix ( ) ; <nl> File lib = extractFromResourcePath ( " jnidispatch " , prefix , Native . class . getClassLoader ( ) ) ; <nl> + if ( lib = = null ) { <nl> + throw new UnsatisfiedLinkError ( " Could not find JNA native support " ) ; <nl> + } <nl> System . load ( lib . getAbsolutePath ( ) ) ; <nl> nativeLibraryPath = lib . getAbsolutePath ( ) ; <nl> / / Attempt to delete immediately once jnidispatch is successfully <nl> diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java <nl> index 10220d9 . . 878afa7 100644 <nl> - - - a / src / com / sun / jna / Platform . java <nl> + + + b / src / com / sun / jna / Platform . java <nl> @ @ - 103 , 7 + 103 , 7 @ @ public final class Platform { <nl> C _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " c " ; <nl> MATH _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " m " ; <nl> HAS _ DLL _ CALLBACKS = osType = = WINDOWS ; <nl> - RESOURCE _ PREFIX = Native . getNativeLibraryResourcePrefix ( ) ; <nl> + RESOURCE _ PREFIX = getNativeLibraryResourcePrefix ( ) ; <nl> } <nl> private Platform ( ) { } <nl> public static final int getOSType ( ) { <nl> @ @ - 199 , 4 + 199 , 66 @ @ public final class Platform { <nl> System . getProperty ( " os . arch " ) . toLowerCase ( ) . trim ( ) ; <nl> return arch . startsWith ( " arm " ) ; <nl> } <nl> + <nl> + / * * Generate a canonical String prefix based on the current OS <nl> + type / arch / name . <nl> + * / <nl> + static String getNativeLibraryResourcePrefix ( ) { <nl> + return getNativeLibraryResourcePrefix ( getOSType ( ) , System . getProperty ( " os . arch " ) , System . getProperty ( " os . name " ) ) ; <nl> + } <nl> + <nl> + / * * Generate a canonical String prefix based on the given OS <nl> + type / arch / name . <nl> + @ param osType from { @ link # getOSType ( ) } <nl> + @ param arch from < code > os . arch < / code > System property <nl> + @ param name from < code > os . name < / code > System property <nl> + * / <nl> + static String getNativeLibraryResourcePrefix ( int osType , String arch , String name ) { <nl> + String osPrefix ; <nl> + arch = arch . toLowerCase ( ) ; <nl> + if ( " powerpc " . equals ( arch ) ) { <nl> + arch = " ppc " ; <nl> + } <nl> + else if ( " powerpc64 " . equals ( arch ) ) { <nl> + arch = " ppc64 " ; <nl> + } <nl> + else if ( " i386 " . equals ( arch ) ) { <nl> + arch = " x86 " ; <nl> + } <nl> + else if ( " x86 _ 64 " . equals ( arch ) | | " amd64 " . equals ( arch ) ) { <nl> + arch = " x86 - 64 " ; <nl> + } <nl> + switch ( osType ) { <nl> + case Platform . ANDROID : <nl> + if ( arch . startsWith ( " arm " ) ) { <nl> + arch = " arm " ; <nl> + } <nl> + osPrefix = " android - " + arch ; <nl> + break ; <nl> + case Platform . WINDOWS : <nl> + osPrefix = " win32 - " + arch ; <nl> + break ; <nl> + case Platform . WINDOWSCE : <nl> + osPrefix = " w32ce - " + arch ; <nl> + break ; <nl> + case Platform . MAC : <nl> + osPrefix = " darwin " ; <nl> + break ; <nl> + case Platform . LINUX : <nl> + osPrefix = " linux - " + arch ; <nl> + break ; <nl> + case Platform . SOLARIS : <nl> + osPrefix = " sunos - " + arch ; <nl> + break ; <nl> + default : <nl> + osPrefix = name . toLowerCase ( ) ; <nl> + int space = osPrefix . indexOf ( " " ) ; <nl> + if ( space ! = - 1 ) { <nl> + osPrefix = osPrefix . substring ( 0 , space ) ; <nl> + } <nl> + osPrefix + = " - " + arch ; <nl> + break ; <nl> + } <nl> + return osPrefix ; <nl> + } <nl> } <nl> diff - - git a / test / com / sun / jna / JNAUnloadTest . java b / test / com / sun / jna / JNAUnloadTest . java <nl> index cb93418 . . 1c34258 100644 <nl> - - - a / test / com / sun / jna / JNAUnloadTest . java <nl> + + + b / test / com / sun / jna / JNAUnloadTest . java <nl> @ @ - 21 , 19 + 21 , 28 @ @ import java . net . URLClassLoader ; <nl> <nl> import junit . framework . TestCase ; <nl> <nl> + / * * Test loading and unloading native support from various locations . Note <nl> + * that no JNI classes are directly referenced in these tests . <nl> + * / <nl> public class JNAUnloadTest extends TestCase { <nl> <nl> private static final String BUILDDIR = <nl> System . getProperty ( " jna . builddir " , " build " <nl> + ( Platform . is64Bit ( ) ? " - d64 " : " " ) ) ; <nl> <nl> - private static class TestLoader extends URLClassLoader { <nl> + private class TestLoader extends URLClassLoader { <nl> public TestLoader ( boolean fromJar ) throws MalformedURLException { <nl> super ( new URL [ ] { <nl> Platform . isWindowsCE ( ) <nl> ? new File ( " / Storage Card / " + ( fromJar ? " jna . jar " : " test . jar " ) ) . toURI ( ) . toURL ( ) <nl> : new File ( BUILDDIR + ( fromJar ? " / jna . jar " : " / classes " ) ) . toURI ( ) . toURL ( ) , <nl> } , null ) ; <nl> + if ( fromJar ) { <nl> + assertJarExists ( ) ; <nl> + } <nl> + else { <nl> + assertLibraryExists ( ) ; <nl> + } <nl> } <nl> protected Class findClass ( String name ) throws ClassNotFoundException { <nl> String boot = System . getProperty ( " jna . boot . library . path " ) ; <nl> @ @ - 48 , 15 + 57 , 26 @ @ public class JNAUnloadTest extends TestCase { <nl> } <nl> } <nl> <nl> - public void testLoadFromJar ( ) throws Exception { <nl> - Class . forName ( " com . sun . jna . Native " , true , new TestLoader ( true ) ) ; <nl> + protected void assertJarExists ( ) { <nl> + File jar = new File ( ( Platform . isWindowsCE ( ) ? " / Storage Card " : BUILDDIR ) + " / jna . jar " ) ; <nl> + if ( ! jar . exists ( ) ) { <nl> + throw new Error ( " Expected JNA jar file at " + jar + " is missing " ) ; <nl> + } <nl> + } <nl> + <nl> + protected void assertLibraryExists ( ) { <nl> + String osPrefix = Platform . getNativeLibraryResourcePrefix ( ) ; <nl> + String name = System . mapLibraryName ( " jnidispatch " ) ; <nl> + File lib = new File ( ( Platform . isWindowsCE ( ) ? " / Storage Card " : BUILDDIR + " / classes " ) + " / com / sun / jna / " + osPrefix + " / " + name ) ; <nl> + if ( ! lib . exists ( ) ) { <nl> + throw new Error ( " Expected JNA library at " + lib + " is missing " ) ; <nl> + } <nl> } <nl> <nl> public void testAvoidJarUnpacking ( ) throws Exception { <nl> System . setProperty ( " jna . nounpack " , " true " ) ; <nl> - ClassLoader loader = new TestLoader ( true ) ; <nl> try { <nl> - Class cls = Class . forName ( " com . sun . jna . Native " , true , loader ) ; <nl> + Class cls = Class . forName ( " com . sun . jna . Native " , true , new TestLoader ( true ) ) ; <nl> <nl> fail ( " Class com . sun . jna . Native should not be loadable if jna . nounpack = true : " <nl> + cls . getClassLoader ( ) ) ; <nl> @ @ - 68 , 13 + 88 , 23 @ @ public class JNAUnloadTest extends TestCase { <nl> } <nl> } <nl> <nl> - / / Fails under clover <nl> - public void testUnloadFromJar ( ) throws Exception { <nl> - File jar = new File ( ( Platform . isWindowsCE ( ) ? " / Storage Card " : BUILDDIR ) + " / jna . jar " ) ; <nl> - if ( ! jar . exists ( ) ) { <nl> - throw new Error ( " Expected JNA jar file at " + jar + " is missing " ) ; <nl> + public void testAvoidResourcePathLoading ( ) throws Exception { <nl> + System . setProperty ( " jna . noclasspath " , " true " ) ; <nl> + try { <nl> + Class cls = Class . forName ( " com . sun . jna . Native " , true , new TestLoader ( false ) ) ; <nl> + <nl> + fail ( " Class com . sun . jna . Native should not be loadable if jna . noclasspath = true : " <nl> + + cls . getClassLoader ( ) ) ; <nl> } <nl> + catch ( UnsatisfiedLinkError e ) { <nl> + } <nl> + finally { <nl> + System . setProperty ( " jna . noclasspath " , " false " ) ; <nl> + } <nl> + } <nl> <nl> + / / Fails under clover <nl> + public void testLoadAndUnloadFromJar ( ) throws Exception { <nl> ClassLoader loader = new TestLoader ( true ) ; <nl> Class cls = Class . forName ( " com . sun . jna . Native " , true , loader ) ; <nl> assertEquals ( " Wrong class loader " , loader , cls . getClassLoader ( ) ) ; <nl> @ @ - 128 , 7 + 158 , 7 @ @ public class JNAUnloadTest extends TestCase { <nl> } <nl> <nl> / / Fails under clover and OpenJDK ( linux / ppc ) <nl> - public void testUnload ( ) throws Exception { <nl> + public void testLoadAndUnloadFromResourcePath ( ) throws Exception { <nl> ClassLoader loader = new TestLoader ( false ) ; <nl> Class cls = Class . forName ( " com . sun . jna . Native " , true , loader ) ; <nl> assertEquals ( " Wrong class loader " , loader , cls . getClassLoader ( ) ) ;
diff - - git a / native / Makefile b / native / Makefile <nl> index d660854 . . 50cb3fd 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 293 , 9 + 293 , 14 @ @ ifneq ( $ ( ARCH ) , x86 _ 64 ) <nl> ALT _ ARCHS + = x86 _ 64 <nl> endif <nl> ifneq ( $ ( ARCH ) , ppc ) <nl> - # not supported on XCode 4 + <nl> ifeq ( $ ( XCODE _ VERSION ) , 3 ) <nl> + # Xcode 3 options <nl> + # not supported on XCode 4 + <nl> ALT _ ARCHS + = ppc <nl> + else <nl> + # Xcode 4 + options <nl> + NO _ COMPACT _ UNWIND = - Wl , - no _ compact _ unwind <nl> + endif <nl> endif <nl> endif <nl> LIBSFX = . dylib <nl> @ @ - 316 , 7 + 321 , 7 @ @ LDFLAGS = $ ( ARCHFLAGS ) - dynamiclib - o $ @ - framework JavaVM \ <nl> - current _ version $ ( JNA _ JNI _ VERSION ) \ <nl> - mmacosx - version - min = 10 . 3 \ <nl> - framework Foundation \ <nl> - - Wl \ <nl> + $ ( NO _ COMPACT _ UNWIND ) \ <nl> - install _ name $ { @ F } \ <nl> $ ( SYSLIBROOT ) <nl> # JAWT linkage handled by - framework JavaVM
diff - - git a / build . xml b / build . xml <nl> index 3a1f756 . . 0e53882 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 984 , 7 + 984 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> <nl> < target name = " clean " depends = " - dynamic - properties " > <nl> < ! - - ensure version - stamped files don ' t interfere with checkouts - - > <nl> - < exec executable = " git " failonerror = " false " failifexecutionfails = " false " > <nl> + < exec executable = " git " failonerror = " false " searchpath = " true " > <nl> < arg value = " checkout " / > <nl> < arg value = " - - " / > <nl> < arg value = " src / com / sun / jna / Version . java " / >
diff - - git a / dist / src - full . zip b / dist / src - full . zip <nl> index 6aae7ab . . ebfc96b 100644 <nl> Binary files a / dist / src - full . zip and b / dist / src - full . zip differ
diff - - git a / native / callback . c b / native / callback . c <nl> index 80efee4 . . 87c605e 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 485 , 13 + 485 , 13 @ @ static void detach _ thread ( void * data ) { <nl> <nl> # ifdef _ WIN32 <nl> <nl> - static DWORD tls _ thread _ key , tls _ detach _ key ; <nl> - static DWORD tls _ errno _ key ; <nl> + static DWORD tls _ thread _ cleanup _ key ; <nl> + static DWORD tls _ errno _ key , tls _ detach _ key ; <nl> BOOL WINAPI DllMain ( HINSTANCE hDLL , DWORD fdwReason , LPVOID lpvReserved ) { <nl> switch ( fdwReason ) { <nl> case DLL _ PROCESS _ ATTACH : <nl> - tls _ thread _ key = TlsAlloc ( ) ; <nl> - if ( tls _ thread _ key = = TLS _ OUT _ OF _ INDEXES ) { <nl> + tls _ thread _ cleanup _ key = TlsAlloc ( ) ; <nl> + if ( tls _ thread _ cleanup _ key = = TLS _ OUT _ OF _ INDEXES ) { <nl> return FALSE ; <nl> } <nl> tls _ detach _ key = TlsAlloc ( ) ; <nl> @ @ - 504 , 14 + 504 , 14 @ @ BOOL WINAPI DllMain ( HINSTANCE hDLL , DWORD fdwReason , LPVOID lpvReserved ) { <nl> } <nl> break ; <nl> case DLL _ PROCESS _ DETACH : <nl> - TlsFree ( tls _ thread _ key ) ; <nl> + TlsFree ( tls _ thread _ cleanup _ key ) ; <nl> TlsFree ( tls _ detach _ key ) ; <nl> TlsFree ( tls _ errno _ key ) ; <nl> break ; <nl> case DLL _ THREAD _ ATTACH : <nl> break ; <nl> case DLL _ THREAD _ DETACH : { <nl> - detach _ thread ( TlsGetValue ( tls _ thread _ key ) ) ; <nl> + detach _ thread ( TlsGetValue ( tls _ thread _ cleanup _ key ) ) ; <nl> break ; <nl> } <nl> default : <nl> @ @ - 524 , 14 + 524 , 14 @ @ BOOL WINAPI DllMain ( HINSTANCE hDLL , DWORD fdwReason , LPVOID lpvReserved ) { <nl> <nl> # include < pthread . h > <nl> <nl> - static pthread _ key _ t tls _ thread _ key , tls _ detach _ key ; <nl> - static void make _ thread _ key ( ) { <nl> - pthread _ key _ create ( & tls _ thread _ key , detach _ thread ) ; <nl> - pthread _ key _ create ( & tls _ detach _ key , NULL ) ; <nl> + static pthread _ key _ t tls _ thread _ cleanup _ key , tls _ detach _ key ; <nl> + static void make _ thread _ cleanup _ key ( ) { <nl> + pthread _ key _ create ( & tls _ thread _ cleanup _ key , detach _ thread ) ; <nl> } <nl> static pthread _ key _ t tls _ errno _ key ; <nl> - static void make _ errno _ key ( ) { <nl> + static void make _ thread _ keys ( ) { <nl> pthread _ key _ create ( & tls _ errno _ key , NULL ) ; <nl> + pthread _ key _ create ( & tls _ detach _ key , NULL ) ; <nl> } <nl> <nl> # endif <nl> @ @ - 564 , 14 + 564 , 14 @ @ jnidispatch _ get _ last _ error ( ) { <nl> static void <nl> jvm _ detach _ on _ exit ( JavaVM * jvm ) { <nl> # ifdef _ WIN32 <nl> - if ( ! TlsSetValue ( tls _ thread _ key , ( void * ) jvm ) ) { <nl> + if ( ! TlsSetValue ( tls _ thread _ cleanup _ key , ( void * ) jvm ) ) { <nl> fprintf ( stderr , " JNA : unable to set thread - local JVM value \ n " ) ; <nl> } <nl> # else <nl> static pthread _ once _ t key _ once = PTHREAD _ ONCE _ INIT ; <nl> - pthread _ once ( & key _ once , make _ thread _ key ) ; <nl> - if ( ! jvm | | pthread _ getspecific ( tls _ thread _ key ) = = NULL ) { <nl> - if ( pthread _ setspecific ( tls _ thread _ key , jvm ) ) { <nl> + pthread _ once ( & key _ once , make _ thread _ cleanup _ key ) ; <nl> + if ( ! jvm | | pthread _ getspecific ( tls _ thread _ cleanup _ key ) = = NULL ) { <nl> + if ( pthread _ setspecific ( tls _ thread _ cleanup _ key , jvm ) ) { <nl> fprintf ( stderr , " JNA : unable to set thread - local JVM value \ n " ) ; <nl> } <nl> } <nl> @ @ - 648 , 7 + 648 , 7 @ @ const char * <nl> jnidispatch _ callback _ init ( JNIEnv * env ) { <nl> # ifndef _ WIN32 <nl> static pthread _ once _ t key _ once = PTHREAD _ ONCE _ INIT ; <nl> - pthread _ once ( & key _ once , make _ errno _ key ) ; <nl> + pthread _ once ( & key _ once , make _ thread _ keys ) ; <nl> # endif <nl> <nl> if ( ! LOAD _ CREF ( env , Object , " java / lang / Object " ) ) return " java . lang . Object " ; <nl> @ @ - 664 , 7 + 664 , 7 @ @ jnidispatch _ callback _ dispose ( JNIEnv * env ) { <nl> } <nl> # ifndef _ WIN32 <nl> pthread _ key _ delete ( tls _ errno _ key ) ; <nl> - pthread _ key _ delete ( tls _ thread _ key ) ; <nl> + pthread _ key _ delete ( tls _ thread _ cleanup _ key ) ; <nl> pthread _ key _ delete ( tls _ detach _ key ) ; <nl> # endif <nl> }
diff - - git a / www / Contributing . md b / www / Contributing . md <nl> index 0fa3b16 . . 2b3ec1d 100644 <nl> - - - a / www / Contributing . md <nl> + + + b / www / Contributing . md <nl> @ @ - 12 , 13 + 12 , 18 @ @ JNA contains work from many developers . You ' re encouraged to contribute to both <nl> <nl> Build Environment <nl> = = = = = = = = = = = = = = = = = <nl> - Most non - windows environments should work out of the box if you have make , gcc , autotools ( for libffi ) , ant , a JDK , and a few other typical command - line utilities available . Feel free to report any issues , we ' ll generally pull build fixes immediately . <nl> + Most non - windows environments should work out of the box if you have make , <nl> + gcc , autotools ( for libffi ) , ant ( 1 . 8 + ) , a JDK ( 1 . 4 + ) , and a few other typical <nl> + command - line utilities available . Feel free to report any issues , we ' ll <nl> + generally pull build fixes immediately . <nl> <nl> For Windows , see [ Windows Development Environment ] ( WindowsDevelopmentEnvironment . md ) . <nl> <nl> For windows CE / Mobile 6 . x , you ' ll need cegcc ( http : / / gitorious . org / cegcc ) for <nl> cross - compiling and a JavaME implementation ( phoneME ( http : / / davy . preuveneers . be / phoneme ) works well ) . <nl> <nl> + Native builds may be skipped by passing ` - Dskip - native = true ` to ` ant ` . <nl> + <nl> Required Testing <nl> = = = = = = = = = = = = = = = = <nl>
diff - - git a / build . xml b / build . xml <nl> index 9c5c6b9 . . c6edaea 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 137 , 10 + 137 , 10 @ @ <nl> <nl> < replaceregexp match = ' VERSION = " . * " ; ' <nl> replace = ' VERSION = " $ { jna . version } " ; ' <nl> - file = " src / com / sun / jna / Native . java " / > <nl> + file = " src / com / sun / jna / Version . java " / > <nl> < replaceregexp match = ' VERSION _ NATIVE = " . * " ; ' <nl> replace = ' VERSION _ NATIVE = " $ { jni . version } " ; ' <nl> - file = " src / com / sun / jna / Native . java " / > <nl> + file = " src / com / sun / jna / Version . java " / > <nl> <nl> < condition property = " jar . omitted " value = " * * / * jnidispatch * " else = " jnilib - included " > <nl> < isset property = " omit - jnilib " / > <nl> @ @ - 556 , 18 + 556 , 23 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < copy todir = " $ { build . native } " file = " $ { native } / jnidispatch . rc " / > <nl> < replaceregexp match = " FILEVERSION . * " <nl> replace = " FILEVERSION $ { jni . major } , $ { jni . minor } , $ { jni . revision } , $ { jni . build } " <nl> + preserveLastModified = " true " <nl> file = " $ { rsrc } " byline = " true " / > <nl> < replaceregexp match = " PRODUCTVERSION . * " <nl> replace = " PRODUCTVERSION $ { jna . major } , $ { jna . minor } , $ { jna . revision } , $ { jna . build } " <nl> + preserveLastModified = " true " <nl> file = " $ { rsrc } " byline = " true " / > <nl> < replaceregexp match = " FileVersion . * " <nl> replace = " FileVersion & quot ; , & quot ; $ { jni . version } & quot ; " <nl> + preserveLastModified = " true " <nl> file = " $ { rsrc } " byline = " true " / > <nl> < replaceregexp match = " Full Version . * " <nl> replace = " Full Version & quot ; , & quot ; $ { jni . version } b $ { jni . build } & quot ; " <nl> + preserveLastModified = " true " <nl> file = " $ { rsrc } " byline = " true " / > <nl> < replaceregexp match = " ProductVersion . * " <nl> replace = " ProductVersion & quot ; , & quot ; $ { spec . version } & quot ; " <nl> + preserveLastModified = " true " <nl> file = " $ { rsrc } " byline = " true " / > <nl> < / target > <nl> <nl> @ @ - 978 , 6 + 983 , 13 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < / target > <nl> <nl> < target name = " clean " depends = " - dynamic - properties " > <nl> + < exec executable = " git " failonerror = " false " > <nl> + < arg value = " checkout " / > <nl> + < arg value = " - - " / > <nl> + < arg value = " src / com / sun / jna / Version . java " / > <nl> + < arg value = " $ { pom } " / > <nl> + < arg value = " $ { pom - platform } " / > <nl> + < / exec > <nl> < delete failOnError = " false " includeEmptyDirs = " true " > <nl> < fileset dir = " $ { build } " / > <nl> < / delete > <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index 7921808 . . 56ddc66 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 347 , 9 + 347 , 10 @ @ install : <nl> $ ( DLLCB ) : dll - callback . c <nl> 	 $ ( MINGW ) - DDEFINE _ CALLBACKS - c $ < $ ( COUT ) <nl> <nl> - $ ( RSRC ) : $ ( BUILD ) / jnidispatch . rc <nl> + $ ( RSRC ) : $ ( BUILD ) / jnidispatch . rc $ ( BUILD ) / $ ( JNA _ JNI _ VERSION ) . stamp <nl> 	 $ ( WINDRES ) - i $ < - o $ @ \ <nl> | | ( echo > $ @ . c & & $ ( CC ) $ ( CFLAGS ) - c $ @ . c $ ( COUT ) ) <nl> + 	 @ touch $ ( BUILD ) / $ ( JNA _ JNI _ VERSION ) . stamp <nl> <nl> $ ( LIBRARY ) : $ ( JNIDISPATCH _ OBJS ) $ ( FFI _ LIB ) <nl> 	 $ ( LD ) $ ( LDFLAGS ) $ ( JNIDISPATCH _ OBJS ) $ ( FFI _ LIB ) $ ( LIBS ) <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index c4ab875 . . d1ec48a 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 85 , 10 + 85 , 7 @ @ import com . sun . jna . Structure . FFIType ; <nl> * @ author Todd Fast , todd . fast @ sun . com <nl> * @ author twall @ users . sf . net <nl> * / <nl> - public final class Native { <nl> - <nl> - private static final String VERSION = " 3 . 6 . 0 - SNAPSHOT " ; <nl> - private static final String VERSION _ NATIVE = " 3 . 6 . 0 " ; <nl> + public final class Native implements Version { <nl> <nl> / / Used by tests , do not remove <nl> private static String nativeLibraryPath = null ; <nl> diff - - git a / src / com / sun / jna / Version . java b / src / com / sun / jna / Version . java <nl> new file mode 100644 <nl> index 0000000 . . ee5fb27 <nl> - - - / dev / null <nl> + + + b / src / com / sun / jna / Version . java <nl> @ @ - 0 , 0 + 1 , 17 @ @ <nl> + / * Copyright ( c ) 2007 - 2012 Timothy Wall , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * < p / > <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna ; <nl> + interface Version { <nl> + String VERSION = " 3 . 6 . 1 - SNAPSHOT " ; <nl> + String VERSION _ NATIVE = " 3 . 6 . 0 " ; <nl> + }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 7d80163 . . 443992d 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 10 , 6 + 10 , 9 @ @ Features <nl> Bug Fixes <nl> - - - - - - - - - <nl> * [ PR # 213 ] ( https : / / github . com / twall / jna / pull / 213 ) : Fix ` Structure . toString ( ) ` not to dump memory when ` jna . dump _ memory ` is false . - [ @ tomohiron ] ( https : / / github . com / tomohiron ) . <nl> + * Use TLS to indicate callback detach state , to avoid any potential conflicts with last error storage - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ # 173 ] ( https : / / github . com / twall / jna / issues / 173 ) : Fix OSX 10 . 8 / Xcode 4 + builds , web start path with Oracle 1 . 7 JDK - [ @ mkjellman ] ( https : / / github . com / mkjellman ) . <nl> + * [ # 215 ] ( https : / / github . com / twall / jna / issues / 215 ) : Force use of XSI ` strerror _ r ` on linux - [ LionelCons ] ( https : / / github . com / LionelCons ) . <nl> <nl> Release 3 . 5 . 2 <nl> = = = = = = = = = = = = =
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 643c7fb . . 443992d 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 9 , 6 + 9 , 7 @ @ Features <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> + * [ PR # 213 ] ( https : / / github . com / twall / jna / pull / 213 ) : Fix ` Structure . toString ( ) ` not to dump memory when ` jna . dump _ memory ` is false . - [ @ tomohiron ] ( https : / / github . com / tomohiron ) . <nl> * Use TLS to indicate callback detach state , to avoid any potential conflicts with last error storage - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 173 ] ( https : / / github . com / twall / jna / issues / 173 ) : Fix OSX 10 . 8 / Xcode 4 + builds , web start path with Oracle 1 . 7 JDK - [ @ mkjellman ] ( https : / / github . com / mkjellman ) . <nl> * [ # 215 ] ( https : / / github . com / twall / jna / issues / 215 ) : Force use of XSI ` strerror _ r ` on linux - [ LionelCons ] ( https : / / github . com / LionelCons ) .
diff - - git a / native / Makefile b / native / Makefile <nl> index a1ea4e1 . . 7921808 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 47 , 7 + 47 , 7 @ @ OS = $ ( shell uname | sed - e ' s / CYGWIN . * / win32 / g ' \ <nl> - e ' s / Linux . * / linux / g ' ) <nl> <nl> JNA _ JNI _ VERSION = 3 . 6 . 0 # auto - generated by ant <nl> - CHECKSUM = 9798f03f944a9144703939cb42256762 # auto - generated by ant <nl> + CHECKSUM = e1ef1f9431f659b9adfbf981f169c5d5 # auto - generated by ant <nl> <nl> JAVA _ INCLUDES = - I " $ ( JAVA _ HOME ) / include " \ <nl> - I " $ ( JAVA _ HOME ) / include / $ ( OS ) " <nl> @ @ - 279 , 6 + 279 , 7 @ @ endif <nl> <nl> <nl> ifeq ( $ ( OS ) , darwin ) <nl> + XCODE _ VERSION = $ ( shell xcodebuild - version | grep Xcode | sed ' s / ^ Xcode \ ( [ 1 - 9 ] \ ) . * / \ 1 / g ' ) <nl> JAVA _ INCLUDES = - I / System / Library / Frameworks / JavaVM . framework / Headers <nl> DEFAULT _ ARCH = $ ( shell arch ) <nl> ARCH = $ ( shell arch ) <nl> @ @ - 292 , 15 + 293 , 20 @ @ ifneq ( $ ( ARCH ) , x86 _ 64 ) <nl> ALT _ ARCHS + = x86 _ 64 <nl> endif <nl> ifneq ( $ ( ARCH ) , ppc ) <nl> + # not supported on XCode 4 + <nl> + ifeq ( $ ( XCODE _ VERSION ) , 3 ) <nl> ALT _ ARCHS + = ppc <nl> endif <nl> + endif <nl> LIBSFX = . dylib <nl> JNISFX = . jnilib <nl> ifneq ( $ ( SDKROOT ) , ) <nl> SYSLIBROOT = - Wl , - syslibroot , $ ( SDKROOT ) <nl> ISYSROOT = - isysroot $ ( SDKROOT ) <nl> - ARCHFLAGS = - arch i386 - arch x86 _ 64 - arch ppc <nl> - # ARCHFLAGS = - arch i386 - arch x86 _ 64 <nl> + ARCHFLAGS = - arch i386 - arch x86 _ 64 <nl> + ifeq ( $ ( XCODE _ VERSION ) , 3 ) <nl> + ARCHFLAGS + = - arch ppc <nl> + endif <nl> endif <nl> <nl> PCFLAGS + = $ ( ISYSROOT ) - x objective - c <nl> @ @ - 310 , 6 + 316 , 7 @ @ LDFLAGS = $ ( ARCHFLAGS ) - dynamiclib - o $ @ - framework JavaVM \ <nl> - current _ version $ ( JNA _ JNI _ VERSION ) \ <nl> - mmacosx - version - min = 10 . 3 \ <nl> - framework Foundation \ <nl> + - Wl , - no _ compact _ unwind \ <nl> - install _ name $ { @ F } \ <nl> $ ( SYSLIBROOT ) <nl> # JAWT linkage handled by - framework JavaVM <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 8f16e02 . . 8afc690 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 73 , 6 + 73 , 8 @ @ <nl> # endif <nl> <nl> # include < stdlib . h > <nl> + / / Force XSI - compliant strerror _ r ( http : / / unixhelp . ed . ac . uk / CGI / man - cgi ? strerror ) <nl> + # define _ XOPEN _ SOURCE 600 <nl> # include < string . h > <nl> # include < wchar . h > <nl> # include < jni . h > <nl> diff - - git a / test / com / sun / jna / LastErrorTest . java b / test / com / sun / jna / LastErrorTest . java <nl> index 3d5a2b0 . . c0283ff 100644 <nl> - - - a / test / com / sun / jna / LastErrorTest . java <nl> + + + b / test / com / sun / jna / LastErrorTest . java <nl> @ @ - 87 , 6 + 87 , 7 @ @ public class LastErrorTest extends TestCase { <nl> } <nl> catch ( LastErrorException e ) { <nl> assertEquals ( " Exception should contain error code " , ERROR , e . getErrorCode ( ) ) ; <nl> + assertTrue ( " Exception should include error message : " + e . getMessage ( ) , e . getMessage ( ) . length ( ) > 10 ) ; <nl> } <nl> } <nl> <nl> @ @ - 102 , 6 + 103 , 7 @ @ public class LastErrorTest extends TestCase { <nl> } <nl> catch ( LastErrorException e ) { <nl> assertEquals ( " Exception should contain error code " , ERROR , e . getErrorCode ( ) ) ; <nl> + assertTrue ( " Exception should include error message : " + e . getMessage ( ) , e . getMessage ( ) . length ( ) > 10 ) ; <nl> } <nl> } <nl>
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 97692c1 . . 008ee6e 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 9 , 7 + 9 , 7 @ @ Features <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> - <nl> + * Use TLS to indicate callback detach state , to avoid any potential conflicts with last error storage - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Release 3 . 5 . 2 <nl> = = = = = = = = = = = = =
diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index 6716399 . . ed7de0e 100755 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ
diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index 6716399 . . 417c117 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ
diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index 5035dfc . . da386bb 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 289 , 14 + 289 , 22 @ @ public abstract class Structure { <nl> / / Clear any local cache <nl> nativeStrings . clear ( ) ; <nl> <nl> - / / Ensure our memory pointer is initialized , even if we can ' t <nl> - / / yet figure out a proper size / layout <nl> - this . memory = m . share ( offset ) ; <nl> - if ( size = = CALCULATE _ SIZE ) { <nl> - size = calculateSize ( false ) ; <nl> + if ( this instanceof ByValue ) { <nl> + / / ByValue always uses own memory <nl> + byte [ ] buf = new byte [ size ( ) ] ; <nl> + m . read ( 0 , buf , 0 , buf . length ) ; <nl> + this . memory . write ( 0 , buf , 0 , buf . length ) ; <nl> } <nl> - if ( size ! = CALCULATE _ SIZE ) { <nl> - this . memory = m . share ( offset , size ) ; <nl> + else { <nl> + / / Ensure our memory pointer is initialized , even if we can ' t <nl> + / / yet figure out a proper size / layout <nl> + this . memory = m . share ( offset ) ; <nl> + if ( size = = CALCULATE _ SIZE ) { <nl> + size = calculateSize ( false ) ; <nl> + } <nl> + if ( size ! = CALCULATE _ SIZE ) { <nl> + this . memory = m . share ( offset , size ) ; <nl> + } <nl> } <nl> this . array = null ; <nl> this . readCalled = false ; <nl> @ @ - 1581 , 7 + 1589 , 9 @ @ public abstract class Structure { <nl> throw new IllegalArgumentException ( msg ) ; <nl> } <nl> Structure s = newInstance ( type ) ; <nl> - s . useMemory ( init ) ; <nl> + if ( init ! = PLACEHOLDER _ MEMORY ) { <nl> + s . useMemory ( init ) ; <nl> + } <nl> return s ; <nl> } <nl> <nl> diff - - git a / test / com / sun / jna / ArgumentsMarshalTest . java b / test / com / sun / jna / ArgumentsMarshalTest . java <nl> index b920ad9 . . a59d835 100644 <nl> - - - a / test / com / sun / jna / ArgumentsMarshalTest . java <nl> + + + b / test / com / sun / jna / ArgumentsMarshalTest . java <nl> @ @ - 130 , 16 + 130 , 6 @ @ public class ArgumentsMarshalTest extends TestCase { <nl> } <nl> } <nl> void setCallbackInStruct ( CbStruct cbstruct ) ; <nl> - <nl> - / / Union ( by value ) <nl> - class TestUnion extends Union implements Structure . ByValue { <nl> - public String f1 ; <nl> - public int f2 ; <nl> - } <nl> - interface UnionCallback extends Callback { <nl> - TestUnion invoke ( TestUnion arg ) ; <nl> - } <nl> - TestUnion testUnionByValueCallbackArgument ( UnionCallback cb , TestUnion arg ) ; <nl> } <nl> <nl> TestLibrary lib ; <nl> @ @ - 600 , 27 + 590 , 6 @ @ public class ArgumentsMarshalTest extends TestCase { <nl> assertEquals ( " Auto read should be disabled " , EXPECTED , s . field ) ; <nl> } <nl> <nl> - public void testUnionByValueCallbackArgument ( ) throws Exception { <nl> - TestLibrary . TestUnion arg = new TestLibrary . TestUnion ( ) ; <nl> - arg . setType ( String . class ) ; <nl> - final String VALUE = getName ( ) ; <nl> - arg . f1 = VALUE ; <nl> - final boolean [ ] called = { false } ; <nl> - final String [ ] cbvalue = { null } ; <nl> - TestLibrary . TestUnion result = lib . testUnionByValueCallbackArgument ( new TestLibrary . UnionCallback ( ) { <nl> - public TestLibrary . TestUnion invoke ( TestLibrary . TestUnion v ) { <nl> - called [ 0 ] = true ; <nl> - v . setType ( String . class ) ; <nl> - v . read ( ) ; <nl> - cbvalue [ 0 ] = v . f1 ; <nl> - return v ; <nl> - } <nl> - } , arg ) ; <nl> - assertTrue ( " Callback not called " , called [ 0 ] ) ; <nl> - assertEquals ( " Incorrect callback union argument " , VALUE , cbvalue [ 0 ] ) ; <nl> - assertEquals ( " Union value not propagated " , VALUE , result . getTypedValue ( String . class ) ) ; <nl> - } <nl> - <nl> public static void main ( java . lang . String [ ] argList ) { <nl> junit . textui . TestRunner . run ( ArgumentsMarshalTest . class ) ; <nl> } <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index c127823 . . 612751b 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 169 , 6 + 169 , 16 @ @ public class CallbacksTest extends TestCase { <nl> } <nl> } <nl> void callCallbackInStruct ( CbStruct cbstruct ) ; <nl> + <nl> + / / Union ( by value ) <nl> + class TestUnion extends Union implements Structure . ByValue { <nl> + public String f1 ; <nl> + public int f2 ; <nl> + } <nl> + interface UnionCallback extends Callback { <nl> + TestUnion invoke ( TestUnion arg ) ; <nl> + } <nl> + TestUnion testUnionByValueCallbackArgument ( UnionCallback cb , TestUnion arg ) ; <nl> } <nl> <nl> TestLibrary lib ; <nl> @ @ - 664 , 17 + 674 , 14 @ @ public class CallbacksTest extends TestCase { <nl> } <nl> <nl> public void testCallCallbackWithStructByValue ( ) { <nl> + final boolean [ ] called = { false } ; <nl> + final TestStructure . ByValue [ ] arg = { null } ; <nl> final TestStructure . ByValue s = new TestStructure . ByValue ( ) ; <nl> - final TestStructure innerResult = new TestStructure ( ) ; <nl> TestStructure . TestCallback cb = new TestStructure . TestCallback ( ) { <nl> public TestStructure . ByValue callback ( TestStructure . ByValue s ) { <nl> / / Copy the argument value for later comparison <nl> - Pointer old = innerResult . getPointer ( ) ; <nl> - innerResult . useMemory ( s . getPointer ( ) ) ; <nl> - innerResult . read ( ) ; <nl> - innerResult . useMemory ( old ) ; <nl> - innerResult . write ( ) ; <nl> - return s ; <nl> + called [ 0 ] = true ; <nl> + return arg [ 0 ] = s ; <nl> } <nl> } ; <nl> s . c = ( byte ) 0x11 ; <nl> @ @ - 684 , 10 + 691 , 39 @ @ public class CallbacksTest extends TestCase { <nl> s . inner . value = 5 ; <nl> <nl> TestStructure result = lib . callCallbackWithStructByValue ( cb , s ) ; <nl> - assertEquals ( " Wrong value passed to callback " , s , innerResult ) ; <nl> - assertEquals ( " Wrong value for result " , s , result ) ; <nl> + assertTrue ( " Callback not called " , called [ 0 ] ) ; <nl> + assertTrue ( " ByValue argument should own its own memory , instead was " <nl> + + arg [ 0 ] . getPointer ( ) , arg [ 0 ] . getPointer ( ) instanceof Memory ) ; <nl> + assertTrue ( " ByValue result should own its own memory , instead was " <nl> + + result . getPointer ( ) , result . getPointer ( ) instanceof Memory ) ; <nl> + assertEquals ( " Wrong value for callback argument " , s , arg [ 0 ] ) ; <nl> + assertEquals ( " Wrong value for callback result " , s , result ) ; <nl> } <nl> <nl> + public void testUnionByValueCallbackArgument ( ) throws Exception { <nl> + TestLibrary . TestUnion arg = new TestLibrary . TestUnion ( ) ; <nl> + arg . setType ( String . class ) ; <nl> + final String VALUE = getName ( ) ; <nl> + arg . f1 = VALUE ; <nl> + final boolean [ ] called = { false } ; <nl> + final TestLibrary . TestUnion [ ] cbvalue = { null } ; <nl> + TestLibrary . TestUnion result = lib . testUnionByValueCallbackArgument ( new TestLibrary . UnionCallback ( ) { <nl> + public TestLibrary . TestUnion invoke ( TestLibrary . TestUnion v ) { <nl> + called [ 0 ] = true ; <nl> + v . setType ( String . class ) ; <nl> + v . read ( ) ; <nl> + cbvalue [ 0 ] = v ; <nl> + return v ; <nl> + } <nl> + } , arg ) ; <nl> + assertTrue ( " Callback not called " , called [ 0 ] ) ; <nl> + assertTrue ( " ByValue argument should have its own allocated memory , instead was " <nl> + + cbvalue [ 0 ] . getPointer ( ) , <nl> + cbvalue [ 0 ] . getPointer ( ) instanceof Memory ) ; <nl> + assertEquals ( " Wrong value for callback argument " , VALUE , cbvalue [ 0 ] . f1 ) ; <nl> + assertEquals ( " Wrong value for callback result " , VALUE , result . getTypedValue ( String . class ) ) ; <nl> + } <nl> + <nl> public void testCallCallbackWithCallbackArgumentAndResult ( ) { <nl> TestLibrary . CbCallback cb = new TestLibrary . CbCallback ( ) { <nl> public CbCallback callback ( CbCallback arg ) { <nl> diff - - git a / test / com / sun / jna / DirectArgumentsMarshalTest . java b / test / com / sun / jna / DirectArgumentsMarshalTest . java <nl> index be9c564 . . f47fb2e 100644 <nl> - - - a / test / com / sun / jna / DirectArgumentsMarshalTest . java <nl> + + + b / test / com / sun / jna / DirectArgumentsMarshalTest . java <nl> @ @ - 79 , 7 + 79 , 6 @ @ public class DirectArgumentsMarshalTest extends ArgumentsMarshalTest { <nl> public native Pointer testStructurePointerArgument ( MinTestStructure s ) ; <nl> public native String returnStringFromVariableSizedStructure ( VariableSizedStructure s ) ; <nl> public native void setCallbackInStruct ( CbStruct s ) ; <nl> - public native TestUnion testUnionByValueCallbackArgument ( UnionCallback cb , TestUnion arg ) ; <nl> <nl> static { <nl> Native . register ( " testlib " ) ; <nl> diff - - git a / test / com / sun / jna / DirectCallbacksTest . java b / test / com / sun / jna / DirectCallbacksTest . java <nl> index 11347d2 . . e97a449 100644 <nl> - - - a / test / com / sun / jna / DirectCallbacksTest . java <nl> + + + b / test / com / sun / jna / DirectCallbacksTest . java <nl> @ @ - 46 , 6 + 46 , 7 @ @ public class DirectCallbacksTest extends CallbacksTest { <nl> <nl> public native int callInt32Callback ( CustomCallback cb , int arg1 , int arg2 ) ; <nl> public native void callCallbackInStruct ( CbStruct s ) ; <nl> + public native TestUnion testUnionByValueCallbackArgument ( UnionCallback cb , TestUnion arg ) ; <nl> <nl> static { <nl> Native . register ( " testlib " ) ;
diff - - git a / test / com / sun / jna / DirectBufferArgumentsMarshalTest . java b / test / com / sun / jna / DirectBufferArgumentsMarshalTest . java <nl> index a89df60 . . a335c78 100644 <nl> - - - a / test / com / sun / jna / DirectBufferArgumentsMarshalTest . java <nl> + + + b / test / com / sun / jna / DirectBufferArgumentsMarshalTest . java <nl> @ @ - 25 , 47 + 25 , 9 @ @ import com . sun . jna . ArgumentsMarshalTest . TestLibrary . CheckFieldAlignment . ByRefere <nl> * <nl> * @ author twall @ users . sf . net <nl> * / <nl> - public class DirectBufferArgumentsMarshalTest extends DirectArgumentsMarshalTest { <nl> + public class DirectBufferArgumentsMarshalTest extends BufferArgumentsMarshalTest { <nl> <nl> public static class DirectTestLibrary implements TestLibrary { <nl> - / * * Dummy . Automatically fail when passed an object . * / <nl> - public String returnStringArgument ( Object arg ) { throw new IllegalArgumentException ( arg . getClass ( ) . getName ( ) ) ; } <nl> - public native boolean returnBooleanArgument ( boolean arg ) ; <nl> - public native byte returnInt8Argument ( byte arg ) ; <nl> - public native char returnWideCharArgument ( char arg ) ; <nl> - public native short returnInt16Argument ( short arg ) ; <nl> - public native int returnInt32Argument ( int i ) ; <nl> - public native long returnInt64Argument ( long l ) ; <nl> - public native NativeLong returnLongArgument ( NativeLong l ) ; <nl> - public native float returnFloatArgument ( float f ) ; <nl> - public native double returnDoubleArgument ( double d ) ; <nl> - public native String returnStringArgument ( String s ) ; <nl> - public native WString returnWStringArgument ( WString s ) ; <nl> - public native Pointer returnPointerArgument ( Pointer p ) ; <nl> - public String returnStringArrayElement ( String [ ] args , int which ) { throw new UnsupportedOperationException ( ) ; } <nl> - public WString returnWideStringArrayElement ( WString [ ] args , int which ) { throw new UnsupportedOperationException ( ) ; } <nl> - public Pointer returnPointerArrayElement ( Pointer [ ] args , int which ) { throw new UnsupportedOperationException ( ) ; } <nl> - public TestPointerType returnPointerArrayElement ( TestPointerType [ ] args , int which ) { throw new UnsupportedOperationException ( ) ; } <nl> - public CheckFieldAlignment returnPointerArrayElement ( CheckFieldAlignment . ByReference [ ] args , int which ) { throw new UnsupportedOperationException ( ) ; } <nl> - public int returnRotatedArgumentCount ( String [ ] args ) { throw new UnsupportedOperationException ( ) ; } <nl> - <nl> - public native long checkInt64ArgumentAlignment ( int i , long j , int i2 , long j2 ) ; <nl> - public native double checkDoubleArgumentAlignment ( float i , double j , float i2 , double j2 ) ; <nl> - public native Pointer testStructurePointerArgument ( CheckFieldAlignment p ) ; <nl> - public native int testStructureByValueArgument ( CheckFieldAlignment . ByValue p ) ; <nl> - public int testStructureArrayInitialization ( CheckFieldAlignment [ ] p , int len ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - public void modifyStructureArray ( CheckFieldAlignment [ ] p , int length ) { <nl> - throw new UnsupportedOperationException ( ) ; <nl> - } <nl> - <nl> - public native int fillInt8Buffer ( byte [ ] buf , int len , byte value ) ; <nl> - public native int fillInt16Buffer ( short [ ] buf , int len , short value ) ; <nl> - public native int fillInt32Buffer ( int [ ] buf , int len , int value ) ; <nl> - public native int fillInt64Buffer ( long [ ] buf , int len , long value ) ; <nl> - public native int fillFloatBuffer ( float [ ] buf , int len , float value ) ; <nl> - public native int fillDoubleBuffer ( double [ ] buf , int len , double value ) ; <nl> <nl> / / ByteBuffer alternative definitions <nl> public native int fillInt8Buffer ( ByteBuffer buf , int len , byte value ) ; <nl> @ @ - 82 , 27 + 44 , 9 @ @ public class DirectBufferArgumentsMarshalTest extends DirectArgumentsMarshalTest <nl> public native int fillFloatBuffer ( FloatBuffer buf , int len , float value ) ; <nl> public native int fillDoubleBuffer ( DoubleBuffer buf , int len , double value ) ; <nl> <nl> - / / dummy to avoid causing Native . register to fail <nl> - public boolean returnBooleanArgument ( Object arg ) { throw new IllegalArgumentException ( ) ; } <nl> - <nl> - public native Pointer testStructurePointerArgument ( MinTestStructure s ) ; <nl> - public native String returnStringFromVariableSizedStructure ( VariableSizedStructure s ) ; <nl> - public native void setCallbackInStruct ( CbStruct s ) ; <nl> - public native TestUnion testUnionByValueCallbackArgument ( UnionCallback cb , TestUnion arg ) ; <nl> - <nl> static { <nl> Native . register ( " testlib " ) ; <nl> } <nl> - <nl> - 	 	 public int testStructureByReferenceArrayInitialization ( ByReference [ ] p , <nl> - 	 	 	 	 int len ) { <nl> - 	 	 	 / / TODO Auto - generated method stub <nl> - 	 	 	 return 0 ; <nl> - 	 	 } <nl> - 	 	 public void modifyStructureByReferenceArray ( ByReference [ ] p , int length ) { <nl> - 	 	 	 / / TODO Auto - generated method stub <nl> - 	 	 	 <nl> - 	 	 } <nl> } <nl> <nl> / * Override original . * / <nl> @ @ - 110 , 16 + 54 , 6 @ @ public class DirectBufferArgumentsMarshalTest extends DirectArgumentsMarshalTest <nl> lib = new DirectTestLibrary ( ) ; <nl> } <nl> <nl> - public static class DirectNativeMappedLibrary implements NativeMappedLibrary { <nl> - public native int returnInt32Argument ( Custom arg ) ; <nl> - static { <nl> - Native . register ( " testlib " ) ; <nl> - } <nl> - } <nl> - protected NativeMappedLibrary loadNativeMappedLibrary ( ) { <nl> - return new DirectNativeMappedLibrary ( ) ; <nl> - } <nl> - <nl> public static void main ( java . lang . String [ ] argList ) { <nl> junit . textui . TestRunner . run ( DirectBufferArgumentsMarshalTest . class ) ; <nl> }
diff - - git a / build . xml b / build . xml <nl> index 45fcd1e . . 19467a3 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 14 , 7 + 14 , 7 @ @ <nl> <nl> Use ANT _ OPTS = - Dskip - native to skip building native parts . <nl> Use ANT _ OPTS = - Dheadless to run tests headless <nl> - Use ANT _ OPTS = - Dmaven - release to stage a final , non - snapshot version <nl> + Use ANT _ OPTS = - Drelease to stage a final , non - snapshot version <nl> - - > <nl> <nl> < ! - - <nl> @ @ - 59 , 7 + 59 , 10 @ @ <nl> < property name = " jna . revision " value = " 0 " / > <nl> < property name = " jna . build " value = " $ { build . number } " / > <nl> < condition property = " version . suffix " value = " " else = " - SNAPSHOT " > <nl> - < isset property = " maven - release " / > <nl> + < or > <nl> + < isset property = " release " / > <nl> + < isset property = " maven - release " / > <nl> + < / or > <nl> < / condition > <nl> < property name = " jna . version " value = " $ { jna . major } . $ { jna . minor } . $ { jna . revision } $ { version . suffix } " / > <nl> < ! - - jnidispatch library release version - - > <nl> @ @ - 183 , 6 + 186 , 12 @ @ <nl> < condition property = " jre . arch " value = " x86 - 64 " > <nl> < matches pattern = " ( x86 _ 64 | amd64 | em64t ) " string = " $ { os . arch } " / > <nl> < / condition > <nl> + < condition property = " jre . arch " value = " ppc " > <nl> + < matches pattern = " ( powerpc | power ) " string = " $ { os . arch } " / > <nl> + < / condition > <nl> + < condition property = " jre . arch " value = " ppc64 " > <nl> + < matches pattern = " ( powerpc64 | power64 ) " string = " $ { os . arch } " / > <nl> + < / condition > <nl> < property name = " jre . arch " value = " $ { os . arch } " / > <nl> < condition property = " os . prefix " value = " linux - $ { jre . arch } " > <nl> < os name = " Linux " / > <nl> @ @ - 190 , 23 + 199 , 23 @ @ <nl> < condition property = " os . prefix " value = " aix - $ { jre . arch } " > <nl> < os name = " AIX " / > <nl> < / condition > <nl> - < condition property = " os . prefix " value = " win32 - $ { os . arch } " > <nl> + < condition property = " os . prefix " value = " win32 - $ { jre . arch } " > <nl> < os family = " windows " / > <nl> < / condition > <nl> < ! - - Darwin builds are universal , no arch required - - > <nl> < condition property = " os . prefix " value = " darwin " > <nl> < os family = " mac " / > <nl> < / condition > <nl> - < condition property = " os . prefix " value = " sunos - $ { os . arch } " > <nl> + < condition property = " os . prefix " value = " sunos - $ { jre . arch } " > <nl> < os name = " SunOS " / > <nl> < / condition > <nl> - < condition property = " os . prefix " value = " freebsd - $ { os . arch } " > <nl> + < condition property = " os . prefix " value = " freebsd - $ { jre . arch } " > <nl> < os name = " FreeBSD " / > <nl> < / condition > <nl> - < condition property = " os . prefix " value = " openbsd - $ { os . arch } " > <nl> + < condition property = " os . prefix " value = " openbsd - $ { jre . arch } " > <nl> < os name = " OpenBSD " / > <nl> < / condition > <nl> - < fail unless = " os . prefix " message = " OS / arch not supported ( $ { os . name } / $ { os . arch } ) , edit build . xml and native / Makefile to add it . " / > <nl> + < fail unless = " os . prefix " message = " OS / arch not supported ( $ { os . name } / $ { jre . arch } ) , edit build . xml and native / Makefile to add it . " / > <nl> < condition property = " jdk . home " value = " $ { java . home } " > <nl> < available file = " $ { java . home } / include " / > <nl> < / condition >
diff - - git a / lib / native / android - arm . jar b / lib / native / android - arm . jar <nl> old mode 100644 <nl> new mode 100755 <nl> index 916a58d . . 6716399 <nl> Binary files a / lib / native / android - arm . jar and b / lib / native / android - arm . jar differ <nl> diff - - git a / lib / native / darwin . jar b / lib / native / darwin . jar <nl> old mode 100644 <nl> new mode 100755 <nl> index 6cadccb . . 6716399 <nl> Binary files a / lib / native / darwin . jar and b / lib / native / darwin . jar differ <nl> diff - - git a / lib / native / freebsd - x86 - 64 . jar b / lib / native / freebsd - x86 - 64 . jar <nl> old mode 100644 <nl> new mode 100755 <nl> diff - - git a / lib / native / freebsd - x86 . jar b / lib / native / freebsd - x86 . jar <nl> old mode 100644 <nl> new mode 100755 <nl> diff - - git a / lib / native / linux - arm . jar b / lib / native / linux - arm . jar <nl> old mode 100644 <nl> new mode 100755 <nl> diff - - git a / lib / native / linux - ia64 . jar b / lib / native / linux - ia64 . jar <nl> old mode 100644 <nl> new mode 100755 <nl> diff - - git a / lib / native / linux - ppc . jar b / lib / native / linux - ppc . jar <nl> old mode 100644 <nl> new mode 100755 <nl> diff - - git a / lib / native / linux - ppc64 . jar b / lib / native / linux - ppc64 . jar <nl> old mode 100644 <nl> new mode 100755 <nl> diff - - git a / lib / native / linux - x86 - 64 . jar b / lib / native / linux - x86 - 64 . jar <nl> old mode 100644 <nl> new mode 100755 <nl> index b60a804 . . 6716399 <nl> Binary files a / lib / native / linux - x86 - 64 . jar and b / lib / native / linux - x86 - 64 . jar differ <nl> diff - - git a / lib / native / linux - x86 . jar b / lib / native / linux - x86 . jar <nl> old mode 100644 <nl> new mode 100755 <nl> index c20571c . . 6716399 <nl> Binary files a / lib / native / linux - x86 . jar and b / lib / native / linux - x86 . jar differ <nl> diff - - git a / lib / native / openbsd - x86 . jar b / lib / native / openbsd - x86 . jar <nl> old mode 100644 <nl> new mode 100755 <nl> diff - - git a / lib / native / sunos - sparc . jar b / lib / native / sunos - sparc . jar <nl> old mode 100644 <nl> new mode 100755 <nl> index f65b602 . . 6716399 <nl> Binary files a / lib / native / sunos - sparc . jar and b / lib / native / sunos - sparc . jar differ <nl> diff - - git a / lib / native / sunos - sparcv9 . jar b / lib / native / sunos - sparcv9 . jar <nl> old mode 100644 <nl> new mode 100755 <nl> index a497e70 . . 6716399 <nl> Binary files a / lib / native / sunos - sparcv9 . jar and b / lib / native / sunos - sparcv9 . jar differ <nl> diff - - git a / lib / native / sunos - x86 - 64 . jar b / lib / native / sunos - x86 - 64 . jar <nl> old mode 100644 <nl> new mode 100755 <nl> index 0c11a2e . . 6716399 <nl> Binary files a / lib / native / sunos - x86 - 64 . jar and b / lib / native / sunos - x86 - 64 . jar differ <nl> diff - - git a / lib / native / sunos - x86 . jar b / lib / native / sunos - x86 . jar <nl> old mode 100644 <nl> new mode 100755 <nl> index f112dd8 . . 6716399 <nl> Binary files a / lib / native / sunos - x86 . jar and b / lib / native / sunos - x86 . jar differ <nl> diff - - git a / lib / native / w32ce - arm . jar b / lib / native / w32ce - arm . jar <nl> old mode 100644 <nl> new mode 100755 <nl> index debd10f . . 6716399 <nl> Binary files a / lib / native / w32ce - arm . jar and b / lib / native / w32ce - arm . jar differ <nl> diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index 0a2787b . . 6716399 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ <nl> diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index 7d59b7f . . 6716399 100755 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ
diff - - git a / dist / freebsd - amd64 . jar b / dist / freebsd - amd64 . jar <nl> deleted file mode 100644 <nl> index 26010e1 . . 0000000 <nl> Binary files a / dist / freebsd - amd64 . jar and / dev / null differ <nl> diff - - git a / dist / freebsd - i386 . jar b / dist / freebsd - i386 . jar <nl> deleted file mode 100644 <nl> index c7e2014 . . 0000000 <nl> Binary files a / dist / freebsd - i386 . jar and / dev / null differ <nl> diff - - git a / dist / freebsd - x86 - 64 . jar b / dist / freebsd - x86 - 64 . jar <nl> new file mode 100644 <nl> index 0000000 . . 26010e1 <nl> Binary files / dev / null and b / dist / freebsd - x86 - 64 . jar differ <nl> diff - - git a / dist / freebsd - x86 . jar b / dist / freebsd - x86 . jar <nl> new file mode 100644 <nl> index 0000000 . . c7e2014 <nl> Binary files / dev / null and b / dist / freebsd - x86 . jar differ <nl> diff - - git a / dist / linux - amd64 . jar b / dist / linux - amd64 . jar <nl> deleted file mode 100644 <nl> index a970c08 . . 0000000 <nl> Binary files a / dist / linux - amd64 . jar and / dev / null differ <nl> diff - - git a / dist / linux - i386 . jar b / dist / linux - i386 . jar <nl> deleted file mode 100644 <nl> index 200a842 . . 0000000 <nl> Binary files a / dist / linux - i386 . jar and / dev / null differ <nl> diff - - git a / dist / linux - x86 - 64 . jar b / dist / linux - x86 - 64 . jar <nl> new file mode 100644 <nl> index 0000000 . . a970c08 <nl> Binary files / dev / null and b / dist / linux - x86 - 64 . jar differ <nl> diff - - git a / dist / linux - x86 . jar b / dist / linux - x86 . jar <nl> new file mode 100644 <nl> index 0000000 . . 200a842 <nl> Binary files / dev / null and b / dist / linux - x86 . jar differ <nl> diff - - git a / dist / openbsd - i386 . jar b / dist / openbsd - i386 . jar <nl> deleted file mode 100644 <nl> index 6716399 . . 0000000 <nl> Binary files a / dist / openbsd - i386 . jar and / dev / null differ <nl> diff - - git a / dist / openbsd - x86 . jar b / dist / openbsd - x86 . jar <nl> new file mode 100644 <nl> index 0000000 . . 6716399 <nl> Binary files / dev / null and b / dist / openbsd - x86 . jar differ <nl> diff - - git a / dist / sunos - amd64 . jar b / dist / sunos - amd64 . jar <nl> deleted file mode 100644 <nl> index 9428999 . . 0000000 <nl> Binary files a / dist / sunos - amd64 . jar and / dev / null differ <nl> diff - - git a / dist / sunos - x86 - 64 . jar b / dist / sunos - x86 - 64 . jar <nl> new file mode 100644 <nl> index 0000000 . . 9428999 <nl> Binary files / dev / null and b / dist / sunos - x86 - 64 . jar differ <nl> diff - - git a / dist / win32 - amd64 . jar b / dist / win32 - amd64 . jar <nl> deleted file mode 100644 <nl> index 87cf836 . . 0000000 <nl> Binary files a / dist / win32 - amd64 . jar and / dev / null differ <nl> diff - - git a / dist / win32 - x86 - 64 . jar b / dist / win32 - x86 - 64 . jar <nl> new file mode 100644 <nl> index 0000000 . . 87cf836 <nl> Binary files / dev / null and b / dist / win32 - x86 - 64 . jar differ
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 18fc3fc . . 79c3c99 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 1 , 3 + 1 , 13 @ @ <nl> + Next Release <nl> + = = = = = = = = = = = = <nl> + <nl> + Features <nl> + - - - - - - - - <nl> + <nl> + Bug Fixes <nl> + - - - - - - - - - <nl> + <nl> + <nl> Release 3 . 5 . 2 <nl> = = = = = = = = = = = = = <nl> <nl> diff - - git a / README . md b / README . md <nl> index fed5274 . . fff3472 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 3 , 7 + 3 , 7 @ @ <nl> Java Native Access ( JNA ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 3 . 5 . 1 / javadoc / ) . Please read the [ overview ] ( http : / / twall . github . com / jna / 3 . 5 . 1 / javadoc / overview - summary . html # overview _ description ) . <nl> + The definitive JNA reference ( including an overview and usage details ) is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 3 . 5 . 2 / javadoc / ) . Please read the [ overview ] ( http : / / twall . github . com / jna / 3 . 5 . 2 / javadoc / overview - summary . html # overview _ description ) . <nl> <nl> JNA provides Java programs easy access to native shared libraries ( DLLs on Windows ) without writing anything but Java code — no JNI or native code is required . This functionality is comparable to Windows ' Platform / Invoke and Python ' s ctypes . Access is dynamic at runtime without code generation . <nl> <nl> @ @ - 18 , 10 + 18 , 10 @ @ JNA includes a platform library with many native functions already mapped as wel <nl> Download <nl> = = = = = = = = <nl> <nl> - Version 3 . 5 . 1 <nl> + Version 3 . 5 . 2 <nl> <nl> - * [ jna . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / jna / 3 . 5 . 1 / jna - 3 . 5 . 1 . jar ) <nl> - * [ platform . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / platform / 3 . 5 . 1 / platform - 3 . 5 . 1 . jar ) <nl> + * [ jna . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / jna / 3 . 5 . 2 / jna - 3 . 5 . 2 . jar ) <nl> + * [ platform . jar ] ( https : / / maven . java . net / content / repositories / releases / net / java / dev / jna / platform / 3 . 5 . 2 / platform - 3 . 5 . 2 . jar ) <nl> <nl> Features <nl> = = = = = = = = <nl> @ @ - 79 , 12 + 79 , 12 @ @ Using the Library <nl> * [ Platform Library ] ( https : / / github . com / twall / jna / blob / master / www / PlatformLibrary . md ) <nl> * [ Direct Method Mapping ] ( https : / / github . com / twall / jna / blob / master / www / DirectMapping . md ) ( Optimization ) <nl> * [ Frequently Asked Questions ( FAQ ) ] ( https : / / github . com / twall / jna / blob / master / www / FrequentlyAskedQuestions . md ) <nl> - * [ Avoiding Crashes ] ( http : / / twall . github . com / jna / 3 . 5 . 1 / javadoc / overview - summary . html # crash - protection ) <nl> + * [ Avoiding Crashes ] ( http : / / twall . github . com / jna / 3 . 5 . 2 / javadoc / overview - summary . html # crash - protection ) <nl> <nl> Primary Documentation ( JavaDoc ) <nl> = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> <nl> - The definitive JNA reference is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 3 . 5 . 1 / javadoc / ) . <nl> + The definitive JNA reference is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 3 . 5 . 2 / javadoc / ) . <nl> <nl> Developers <nl> = = = = = = = = = = <nl> diff - - git a / www / PublishingToMavenCentral . md b / www / PublishingToMavenCentral . md <nl> index d321e99 . . f3807ae 100644 <nl> - - - a / www / PublishingToMavenCentral . md <nl> + + + b / www / PublishingToMavenCentral . md <nl> @ @ - 4 , 7 + 4 , 7 @ @ Publishing JNA to Maven Central <nl> One Time <nl> - - - - - - - - <nl> <nl> - * Set up your gpg keys as described [ here ] ( https : / / docs . sonatype . org / display / Repository / How + To + Generate + PGP + Signatures + With + Maven ) . <nl> + * Set up your gpg keys as described [ here ] ( https : / / docs . sonatype . org / display / Repository / How + To + Generate + PGP + Signatures + With + Maven ) . Make sure you distribute your public key . <nl> * Make sure you have a settings . xml file ( in directory : $ { user . home } / . m2 / ) as described at the bottom of 7a1 [ here ] ( https : / / docs . sonatype . org / display / Repository / Sonatype + OSS + Maven + Repository + Usage + Guide # SonatypeOSSMavenRepositoryUsageGuide - 7a . 1 . POMandsettingsconfig ) . For example : <nl> <nl> < settings > <nl> @ @ - 34 , 8 + 34 , 10 @ @ Every Time <nl> <nl> * Verify the & lt ; version > tags in [ pom - jna . xml ] ( https : / / github . com / twall / jna / blob / master / pom - jna . xml ) and [ pom - platform . xml ] ( https : / / github . com / twall / jna / blob / master / pom - platform . xml ) <nl> match the version ( jna . version ) in [ build . xml ] ( https : / / github . com / twall / jna / blob / master / build . xml ) . <nl> - * Run ` ant stage ` . This uploads current checkout to maven central . <nl> - * Follow steps from [ release it ] ( https : / / docs . sonatype . org / display / Repository / Sonatype + OSS + Maven + Repository + Usage + Guide # SonatypeOSSMavenRepositoryUsageGuide - 8a . ReleaseIt ) <nl> + * Run ` ant - Dmaven - release = true - Dskip - native = true stage ` . This uploads current checkout to [ maven . java . net ] ( https : / / maven . java . net ) . <nl> + * Follow steps from [ release <nl> + it ] ( https : / / docs . sonatype . org / display / Repository / Sonatype + OSS + Maven + Repository + Usage + Guide # SonatypeOSSMavenRepositoryUsageGuide - 8a . ReleaseIt ) . <nl> + Note that the releases are managed from [ maven . java . net ] ( https : / / maven . java . net ) . <nl> * Email release notice to [ jna - users Google group ] ( http : / / groups . google . com / group / jna - users ) . <nl> * After the release is finished , increment the version in build . xml for the next development iteration . Typically , this means increment " jna . revision " by one , and append " - SNAPSHOT " to the " jna . version " property . Create new section in CHANGES . md for ' Next Release ( x . y . z ) ' . Commit and push . <nl>
diff - - git a / CHANGES . md b / CHANGES . md <nl> index a7811b1 . . 18fc3fc 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 12 , 7 + 12 , 6 @ @ Features <nl> * [ PR # 163 ] ( https : / / github . com / twall / jna / pull / 163 ) : Added Win32 ` native _ window _ msg ` that creates windows , registers for USB device and logon / logoff notifications - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * [ PR # 178 ] ( https : / / github . com / twall / jna / pull / 178 ) : Added Win32 ` USER _ INFO _ 10 ` structure from ` LMAccess . h ` - [ @ davidmc24 ] ( https : / / github . com / davidmc24 ) . <nl> * [ PR # 174 ] ( https : / / github . com / twall / jna / pull / 174 ) : Recompile linux - amd64 natives to remove glibc - 2 . 11 dependencies , now requires only 2 . 2 . 5 or better - [ @ twall ] ( https : / / github . com / twall ) . <nl> - * [ PR # 180 ] ( https : / / github . com / twall / jna / pull / 180 ) : Fix : added missing fields in ` XEvents . getFieldOrder ( ) ` - [ @ xwizard ] ( https : / / github . com / xwizard ) . <nl> * [ PR # 183 ] ( https : / / github . com / twall / jna / pull / 183 ) : Added ` StructureFieldOrderInspector ` unit test utility to scan for ` Structure ` field issues ; see : ` com . sun . jna . platform . StructureFieldOrderTest . testMethodGetFieldOrder ` - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> * [ PR # 187 ] ( https : / / github . com / twall / jna / pull / 187 ) : Allow ` StructureFieldOrderTest ` unit test in platform project to run on Linux - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> * [ PR # 192 ] ( https : / / github . com / twall / jna / pull / 192 ) : Added Win32 ` SHGetSpecialFolderPath ( ) ` and initialization file ( . ini ) API functions from ` kernel32 . dll ` - [ @ headcrashing ] ( https : / / github . com / headcrashing ) . <nl> @ @ - 22 , 6 + 21 , 7 @ @ Features <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> + * [ PR # 180 ] ( https : / / github . com / twall / jna / pull / 180 ) : Fix : added missing fields in ` XEvents . getFieldOrder ( ) ` - [ @ xwizard ] ( https : / / github . com / xwizard ) . <nl> * [ PR # 183 ] ( https : / / github . com / twall / jna / pull / 183 ) : Fix ` LMAccess . GROUP _ INFO _ 3 . getFieldOrder ( ) ` to return correct fields names - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> * [ PR # 187 ] ( https : / / github . com / twall / jna / pull / 187 ) : Fix ` getFieldOrder ( ) ` to return correct field names for some X11 structures - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> * Remove deprecated methods on Memory ( getSize , isValid ) and Structure ( getSize ) - [ @ twall ] ( https : / / github . com / twall ) .
EMPTY
diff - - git a / . gitignore b / . gitignore <nl> index 32093a8 . . a1e428d 100644 <nl> - - - a / . gitignore <nl> + + + b / . gitignore <nl> @ @ - 16 , 3 + 16 , 4 @ @ dist / * - sources . jar <nl> dist / * - javadoc . jar <nl> dist / src - mvn . zip <nl> dist / out - of - date . jar <nl> + perf * . txt <nl> \ No newline at end of file <nl> diff - - git a / CHANGES . md b / CHANGES . md <nl> index 9381134 . . e3206e7 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 27 , 6 + 27 , 7 @ @ Bug Fixes <nl> * Remove deprecated methods on Memory ( getSize , isValid ) and Structure ( getSize ) - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 206 ] ( https : / / github . com / twall / jna / pull / 206 ) : Fix ` moveToTrash ( ) ` on OSX to work with symlinks - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Remove problematic AWT check via ` Class . forName ( " java . awt . Component " ) ` ( see [ here ] ( https : / / bugs . eclipse . org / bugs / show _ bug . cgi ? id = 388170 ) ) - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ PR # 210 ] ( https : / / github . com / twall / jna / pull / 210 ) Add OSGI processor specs for Mac OS X - [ @ bertfrees ] ( https : / / github . com / bertfrees ) . <nl> <nl> Release 3 . 5 . 1 <nl> = = = = = = = = = = = = = <nl> diff - - git a / TODO b / TODO <nl> index 4955d51 . . 3860204 100644 <nl> - - - a / TODO <nl> + + + b / TODO <nl> @ @ - 21 , 6 + 21 , 9 @ @ <nl> <nl> # TODO <nl> <nl> + * use consistent cpu references ( x86 - > i386 , x86 _ 64 - > amd64 ) <nl> + * osgi for osx <nl> + <nl> * make native dll extraction from jar public , to use with user dlls packaged <nl> in a jar <nl> <nl> diff - - git a / build . xml b / build . xml <nl> index ebc0890 . . 948da14 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 368 , 7 + 368 , 7 @ @ com / sun / jna / freebsd - amd64 / libjnidispatch . so ; <nl> processor = x86 - 64 ; osname = freebsd , <nl> <nl> com / sun / jna / darwin / libjnidispatch . jnilib ; <nl> - osname = macosx ; processor = x86 ; processor = x86 _ 64 ; processor = ppc <nl> + osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> " / > <nl> < / manifest > <nl> < fileset dir = " $ { classes } " excludes = " $ { jar . omitted } " > <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 6a4c588 . . 9642457 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 77 , 6 + 77 , 10 @ @ import com . sun . jna . Structure . FFIType ; <nl> * finalized / disposed before this class is disposed and / or removed from <nl> * memory ( most notably Memory and any other class which by default frees its <nl> * resources in a finalizer ) . < p / > <nl> + * < a name = native _ library _ loading < / a > <nl> + * < h2 > Native Library Loading < / h2 > <nl> + * Native libraries loaded via { @ link # loadLibrary ( Class ) } may be found in <nl> + * < a href = " NativeLibrary . html # library _ search _ paths " > several locations < / a > . <nl> * @ see Library <nl> * @ author Todd Fast , todd . fast @ sun . com <nl> * @ author twall @ users . sf . net <nl> @ @ - 367 , 6 + 371 , 8 @ @ public final class Native { <nl> * If no library options are detected the map is interpreted as a map <nl> * of Java method names to native function names . < p > <nl> * If < code > name < / code > is null , attempts to map onto the current process . <nl> + * Native libraries loaded via this method may be found in <nl> + * < a href = " NativeLibrary . html # library _ search _ paths " > several locations < / a > . <nl> * @ param name <nl> * @ param interfaceClass <nl> * @ param options Map of library options <nl> @ @ - 777 , 7 + 783 , 7 @ @ public final class Native { <nl> <nl> / * * Attempt to extract a native library from the current resource path . <nl> * Expects native libraries to be stored under <nl> - * the path returned by { @ link # getNativeLibraryResourcePath ( int , String , <nl> + * the path returned by { @ link # getNativeLibraryResourcePrefix ( int , String , <nl> * String ) } . <nl> * @ param name Base name of native library to extract <nl> * @ param loader Class loader to use to load resources <nl> diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index a68ed3d . . 2e6743c 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 37 , 6 + 37 , 7 @ @ import java . util . StringTokenizer ; <nl> * class corresponds to a single loaded native library . May also be used <nl> * to map to the current process ( see { @ link NativeLibrary # getProcess ( ) } ) . <nl> * < p > <nl> + * < a name = library _ search _ paths > < / a > <nl> * < b > Library Search Paths < / b > <nl> * A search for a given library will scan the following locations : <nl> * < ol > <nl> @ @ - 49 , 6 + 50 , 13 @ @ import java . util . StringTokenizer ; <nl> * are also accepted , either ending at the framework name ( sans " . framework " ) <nl> * or the full path to the framework shared library <nl> * ( e . g . CoreServices . framework / CoreServices ) . <nl> + * < li > Context class loader classpath . Deployed native libraries may be <nl> + * installed on the classpath under <nl> + * < code > $ { os - prefix } / LIBRARY _ FILENAME < / code > , where < code > $ { os - prefix } < / code > <nl> + * is the OS / Arch prefix returned by { @ link <nl> + * Native # getNativeLibraryResourcePrefix ( ) } . If bundled in a jar file , the <nl> + * resource will be extracted to < code > jna . tmpdir < / code > for loading , and <nl> + * later removed . <nl> * < / ol > <nl> * @ author Wayne Meissner , split library loading from Function . java <nl> * @ author twall <nl> diff - - git a / www / GettingStarted . md b / www / GettingStarted . md <nl> index 2a2a2a1 . . 2f6eb62 100644 <nl> - - - a / www / GettingStarted . md <nl> + + + b / www / GettingStarted . md <nl> @ @ - 37 , 10 + 37 , 11 @ @ The following example maps the printf function from the standard C library and c <nl> <nl> Identify a native target library that you want to use . This can be any shared library with exported functions . Many examples of mappings for common system libraries , especially on Windows , may be found in the platform package . <nl> <nl> - Make your target library available to your Java program . There are two ways to do this : <nl> + Make your target library available to your Java program . There are several ways to do this : <nl> <nl> * The preferred method is to set the ` jna . library . path ` system property to the path to your target library . This property is similar to ` java . library . path ` , but only applies to libraries loaded by JNA . <nl> * Change the appropriate library access environment variable before launching the VM . This is ` PATH ` on Windows , ` LD _ LIBRARY _ PATH ` on Linux , and ` DYLD _ LIBRARY _ PATH ` on OSX . <nl> + * Make your native library available on your classpath , under the path ` { OS } - { ARCH } / { LIBRARY } ` , where ` { OS } - { ARCH } ` is JNA ' s canonical prefix for native libraries ( e . g . ` win32 - x86 ` , ` linux - amd64 ` , or ` darwin ` ) . If the resource is within a jar file it will be automatically extracted when loaded . <nl> <nl> Declare a Java interface to hold the native library methods by extending the Library interface . <nl>
diff - - git a / CHANGES . md b / CHANGES . md <nl> index c2b0c30 . . 9381134 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 5 , 6 + 5 , 7 @ @ Features <nl> - - - - - - - - <nl> * Basic [ COM support ] ( https : / / github . com / twall / jna / blob / master / www / PlatformLibrary . md ) for w32 - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * Avoid superfluous Structure memory allocation by using Structure ( Pointer ) ctors if available - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ PR # 120 ] ( https : / / github . com / twall / jna / pull / 120 ) : Provide methods for extracting native libraries from the class path for use by JNA - [ @ Zlika ] ( https : / / github . com / Zlika ) . <nl> * [ # 163 ] ( https : / / github . com / twall / jna / pull / 163 ) : The Java ` GUID ` structure can be used directly as alternative to ` Ole32Util . getGUIDFromString ( ) ` - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * [ # 163 ] ( https : / / github . com / twall / jna / pull / 163 ) : Ported Win32 ` dbt . h ` - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * [ # 163 ] ( https : / / github . com / twall / jna / pull / 163 ) : Added Win32 ` WTSRegisterSessionNotification ( ) ` and ` WTSUnRegisterSessionNotification ( ) ` from ` Wtsapi32 . dll ` - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> diff - - git a / build . xml b / build . xml <nl> index 19c4030 . . 798ec14 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 264 , 6 + 264 , 7 @ @ <nl> < path id = " test . runpath " > <nl> < pathelement path = " $ { build } / $ { jar } " / > <nl> < pathelement path = " $ { test . classes } " / > <nl> + < pathelement path = " $ { build } / $ { testjar } " / > <nl> < pathelement path = " lib / clover . jar " / > <nl> < path refid = " test . libs " / > <nl> < / path > <nl> @ @ - 708 , 12 + 709 , 28 @ @ osname = macos <nl> < src path = " $ { test . src } " / > <nl> < exclude name = " $ { tests . exclude } " / > <nl> < / javac > <nl> - < ! - - Create a jar for easy movement of tests - - > <nl> + < ! - - Move ( not copy ) embedded testlib to test class folder so that it will be - - > <nl> + < ! - - packaged into the test jar and NOT available in the FS - based class path - - > <nl> + < move todir = " $ { test . classes } / $ { os . prefix } " > <nl> + < fileset dir = " $ { build . native } " > <nl> + < patternset id = " embedded - testlib " > <nl> + < include name = " * * / * embedded - testlib * " / > <nl> + < / patternset > <nl> + < / fileset > <nl> + < / move > <nl> + < ! - - Create a jar for easy movement of tests , and embedded load test - - > <nl> < jar jarfile = " $ { build } / $ { testjar } " > <nl> < fileset dir = " $ { test . classes } " > <nl> < patternset refid = " jar - compiled " / > <nl> + < include name = " * * / * embedded - testlib * " / > <nl> < / fileset > <nl> < / jar > <nl> + < ! - - Ensure embedded library unavailable on FS - based class path - - > <nl> + < delete > <nl> + < fileset dir = " $ { test . classes } " > <nl> + < include name = " * * / * embedded - testlib * " / > <nl> + < / fileset > <nl> + < / delete > <nl> < mkdir dir = " $ { build } / jws " / > <nl> < copy todir = " $ { build } / jws " file = " $ { build } / $ { jar } " / > <nl> < copy todir = " $ { build } / jws " file = " $ { build } / $ { testjar } " / > <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index 03fd09b . . 5a7ca43 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 67 , 6 + 67 , 7 @ @ FFI _ CONFIG = - - enable - static - - disable - shared - - with - pic = yes <nl> endif <nl> LIBRARY = $ ( BUILD ) / $ ( LIBPFX ) jnidispatch $ ( JNISFX ) <nl> TESTLIB = $ ( BUILD ) / $ ( LIBPFX ) testlib $ ( LIBSFX ) <nl> + TESTLIB _ EMBEDDED = $ ( BUILD ) / $ ( LIBPFX ) embedded - testlib $ ( LIBSFX ) <nl> TESTLIB2 = $ ( BUILD ) / $ ( LIBPFX ) testlib2 $ ( LIBSFX ) <nl> <nl> # Reasonable defaults based on GCC <nl> @ @ - 308 , 6 + 309 , 7 @ @ LDFLAGS = $ ( ARCHFLAGS ) - dynamiclib - o $ @ - framework JavaVM \ <nl> - compatibility _ version $ ( shell echo $ { JNA _ JNI _ VERSION } | sed ' s / ^ \ ( [ 0 - 9 ] [ 0 - 9 ] * \ ) . * / \ 1 / g ' ) \ <nl> - current _ version $ ( JNA _ JNI _ VERSION ) \ <nl> - mmacosx - version - min = 10 . 3 \ <nl> + - framework Foundation \ <nl> - install _ name $ { @ F } \ <nl> $ ( SYSLIBROOT ) <nl> # JAWT linkage handled by - framework JavaVM <nl> @ @ - 329 , 7 + 331 , 7 @ @ else <nl> 	 $ ( CC ) $ ( CFLAGS ) - c $ < $ ( COUT ) <nl> endif <nl> <nl> - all : $ ( LIBRARY ) $ ( TESTLIB ) $ ( TESTLIB2 ) <nl> + all : $ ( LIBRARY ) $ ( TESTLIB ) $ ( TESTLIB2 ) $ ( TESTLIB _ EMBEDDED ) <nl> <nl> install : <nl> 	 mkdir $ ( INSTALLDIR ) <nl> @ @ - 349 , 6 + 351 , 9 @ @ $ ( LIBRARY ) : $ ( JNIDISPATCH _ OBJS ) $ ( FFI _ LIB ) <nl> $ ( TESTLIB ) : $ ( BUILD ) / testlib . o <nl> 	 $ ( LD ) $ ( LDFLAGS ) $ < $ ( LIBS ) <nl> <nl> + $ ( TESTLIB _ EMBEDDED ) : $ ( BUILD ) / testlib . o <nl> + 	 $ ( LD ) $ ( LDFLAGS ) $ < $ ( LIBS ) <nl> + <nl> ifeq ( $ ( ARSFX ) , . lib ) <nl> TESTDEP = $ ( TESTLIB : . dll = . lib ) <nl> else <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 8f1950b . . 9be443e 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 16 , 13 + 16 , 9 @ @ import java . awt . Component ; <nl> import java . awt . GraphicsEnvironment ; <nl> import java . awt . HeadlessException ; <nl> import java . awt . Window ; <nl> - <nl> - import java . nio . Buffer ; <nl> - import java . nio . ByteBuffer ; <nl> - <nl> import java . io . File ; <nl> - import java . io . FilenameFilter ; <nl> import java . io . FileOutputStream ; <nl> + import java . io . FilenameFilter ; <nl> import java . io . IOException ; <nl> import java . io . InputStream ; <nl> import java . io . UnsupportedEncodingException ; <nl> @ @ - 36 , 6 + 32 , 8 @ @ import java . lang . reflect . Proxy ; <nl> import java . net . URI ; <nl> import java . net . URISyntaxException ; <nl> import java . net . URL ; <nl> + import java . nio . Buffer ; <nl> + import java . nio . ByteBuffer ; <nl> import java . security . AccessController ; <nl> import java . security . PrivilegedAction ; <nl> import java . util . ArrayList ; <nl> @ @ - 173 , 14 + 171 , 13 @ @ public final class Native { <nl> that introduces issues with cleaning up any extant JNA bits <nl> ( e . g . Memory ) which may still need use of the library before shutdown . <nl> * / <nl> - private static boolean deleteNativeLibrary ( String path ) { <nl> - File flib = new File ( path ) ; <nl> - if ( flib . delete ( ) ) { <nl> + static boolean deleteLibrary ( File lib ) { <nl> + if ( lib . delete ( ) ) { <nl> return true ; <nl> } <nl> <nl> / / Couldn ' t delete it , mark for later deletion <nl> - markTemporaryFile ( flib ) ; <nl> + markTemporaryFile ( lib ) ; <nl> <nl> return false ; <nl> } <nl> @ @ - 594 , 10 + 591 , 20 @ @ public final class Native { <nl> return buf ; <nl> } <nl> <nl> + / * * Generate a canonical String prefix based on the current OS <nl> + type / arch / name . <nl> + * / <nl> + public static String getNativeLibraryResourcePrefix ( ) { <nl> + return getNativeLibraryResourcePrefix ( Platform . getOSType ( ) , System . getProperty ( " os . arch " ) , System . getProperty ( " os . name " ) ) ; <nl> + } <nl> + <nl> / * * Generate a canonical String prefix based on the given OS <nl> type / arch / name . <nl> + @ param osType from { @ link Platform } <nl> + @ param arch from < code > os . arch < / code > System property <nl> + @ param name from < code > os . name < / code > System property <nl> * / <nl> - static String getNativeLibraryResourcePath ( int osType , String arch , String name ) { <nl> + public static String getNativeLibraryResourcePrefix ( int osType , String arch , String name ) { <nl> String osPrefix ; <nl> arch = arch . toLowerCase ( ) ; <nl> if ( " powerpc " . equals ( arch ) ) { <nl> @ @ - 652 , 7 + 659 , 7 @ @ public final class Native { <nl> osPrefix + = " - " + arch ; <nl> break ; <nl> } <nl> - return " / com / sun / jna / " + osPrefix ; <nl> + return osPrefix ; <nl> } <nl> <nl> / * * <nl> @ @ - 727 , 28 + 734 , 76 @ @ public final class Native { <nl> throw new UnsatisfiedLinkError ( " Native jnidispatch library not found " ) ; <nl> } <nl> <nl> + static final String JNA _ TMPLIB _ PREFIX = " jna " ; <nl> / * * <nl> * Attempts to load the native library resource from the filesystem , <nl> * extracting the JNA stub library from jna . jar if not already available . <nl> * / <nl> private static void loadNativeLibraryFromJar ( ) { <nl> - String libname = System . mapLibraryName ( " jnidispatch " ) ; <nl> - String arch = System . getProperty ( " os . arch " ) ; <nl> - String name = System . getProperty ( " os . name " ) ; <nl> - String resourceName = getNativeLibraryResourcePath ( Platform . getOSType ( ) , arch , name ) + " / " + libname ; <nl> - URL url = Native . class . getResource ( resourceName ) ; <nl> - boolean unpacked = false ; <nl> - <nl> - / / Add an ugly hack for OpenJDK ( soylatte ) - JNI libs use the usual <nl> - / / . dylib extension <nl> - if ( url = = null & & Platform . isMac ( ) <nl> - & & resourceName . endsWith ( " . dylib " ) ) { <nl> - resourceName = resourceName . substring ( 0 , resourceName . lastIndexOf ( " . dylib " ) ) + " . jnilib " ; <nl> - url = Native . class . getResource ( resourceName ) ; <nl> + try { <nl> + String prefix = " com / sun / jna / " + getNativeLibraryResourcePrefix ( ) ; <nl> + File lib = extractFromResourcePath ( " jnidispatch " , prefix , Native . class . getClassLoader ( ) ) ; <nl> + System . load ( lib . getAbsolutePath ( ) ) ; <nl> + nativeLibraryPath = lib . getAbsolutePath ( ) ; <nl> + / / Attempt to delete immediately once jnidispatch is successfully <nl> + / / loaded . This avoids the complexity of trying to do so on " exit " , <nl> + / / which point can vary under different circumstances ( native <nl> + / / compilation , dynamically loaded modules , normal application , etc ) . <nl> + if ( isUnpacked ( lib ) ) { <nl> + deleteLibrary ( lib ) ; <nl> + } <nl> + } <nl> + catch ( IOException e ) { <nl> + throw new UnsatisfiedLinkError ( e . getMessage ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + / * * Identify temporary files unpacked from classpath jar files . * / <nl> + static boolean isUnpacked ( File file ) { <nl> + return file . getName ( ) . startsWith ( JNA _ TMPLIB _ PREFIX ) ; <nl> + } <nl> + <nl> + / * * Attempt to extract a native library from the current resource path . <nl> + * Expects native libraries to be stored under <nl> + * the path returned by { @ link # getNativeLibraryResourcePrefix ( ) } , <nl> + * and reachable by the current thread context class loader . <nl> + * @ param name Base name of native library to extract <nl> + * @ return File indicating extracted resource on disk <nl> + * @ throws IOException if resource not found <nl> + * / <nl> + static File extractFromResourcePath ( String name ) throws IOException { <nl> + return extractFromResourcePath ( name , getNativeLibraryResourcePrefix ( ) , Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> + } <nl> + <nl> + / * * Attempt to extract a native library from the current resource path . <nl> + * Expects native libraries to be stored under <nl> + * the path returned by { @ link # getNativeLibraryResourcePath ( int , String , <nl> + * String ) } . <nl> + * @ param name Base name of native library to extract <nl> + * @ param loader Class loader to use to load resources <nl> + * @ param resourcePrefix prefix to use when looking for the resource <nl> + * @ return File indicating extracted resource on disk <nl> + * @ throws IOException if resource not found <nl> + * / <nl> + static File extractFromResourcePath ( String name , String resourcePrefix , ClassLoader loader ) throws IOException { <nl> + String libname = System . mapLibraryName ( name ) ; <nl> + String resourcePath = resourcePrefix + " / " + libname ; <nl> + URL url = loader . getResource ( resourcePath ) ; <nl> + <nl> + / / User libraries will have ' . dylib ' <nl> + if ( url = = null & & Platform . isMac ( ) ) { <nl> + if ( resourcePath . endsWith ( " . jnilib " ) ) { <nl> + resourcePath = resourcePath . substring ( 0 , resourcePath . lastIndexOf ( " . jnilib " ) ) + " . dylib " ; <nl> + } <nl> + / / Ugly hack for OpenJDK ( soylatte ) - JNI libs use the usual <nl> + / / . dylib extension <nl> + else if ( resourcePath . endsWith ( " . dylib " ) ) { <nl> + resourcePath = resourcePath . substring ( 0 , resourcePath . lastIndexOf ( " . dylib " ) ) + " . jnilib " ; <nl> + } <nl> + url = loader . getResource ( resourcePath ) ; <nl> } <nl> if ( url = = null ) { <nl> - throw new UnsatisfiedLinkError ( " JNA native support ( " + resourceName <nl> - + " ) not found in resource path " ) ; <nl> + throw new IOException ( " JNA native support ( " + resourcePath + " ) not found in resource path ( " + System . getProperty ( " java . class . path " ) + " ) " ) ; <nl> } <nl> <nl> File lib = null ; <nl> @ @ - 760 , 13 + 815 , 13 @ @ public final class Native { <nl> lib = new File ( url . getPath ( ) ) ; <nl> } <nl> if ( ! lib . exists ( ) ) { <nl> - throw new Error ( " File URL " + url + " could not be properly decoded " ) ; <nl> + throw new IOException ( " File URL " + url + " could not be properly decoded " ) ; <nl> } <nl> } <nl> else { <nl> - InputStream is = Native . class . getResourceAsStream ( resourceName ) ; <nl> + InputStream is = loader . getResourceAsStream ( resourcePath ) ; <nl> if ( is = = null ) { <nl> - throw new Error ( " Can ' t obtain jnidispatch InputStream " ) ; <nl> + throw new IOException ( " Can ' t obtain InputStream for " + resourcePath ) ; <nl> } <nl> <nl> FileOutputStream fos = null ; <nl> @ @ - 775 , 7 + 830 , 7 @ @ public final class Native { <nl> / / Let Java pick the suffix , except on windows , to avoid <nl> / / problems with Web Start . <nl> File dir = getTempDir ( ) ; <nl> - lib = File . createTempFile ( " jna " , Platform . isWindows ( ) ? " . dll " : null , dir ) ; <nl> + lib = File . createTempFile ( JNA _ TMPLIB _ PREFIX , Platform . isWindows ( ) ? " . dll " : null , dir ) ; <nl> lib . deleteOnExit ( ) ; <nl> fos = new FileOutputStream ( lib ) ; <nl> int count ; <nl> @ @ - 783 , 10 + 838 , 9 @ @ public final class Native { <nl> while ( ( count = is . read ( buf , 0 , buf . length ) ) > 0 ) { <nl> fos . write ( buf , 0 , count ) ; <nl> } <nl> - unpacked = true ; <nl> } <nl> catch ( IOException e ) { <nl> - throw new Error ( " Failed to create temporary file for jnidispatch library " , e ) ; <nl> + throw new IOException ( " Failed to create temporary file for " + name + " library " , e ) ; <nl> } <nl> finally { <nl> try { is . close ( ) ; } catch ( IOException e ) { } <nl> @ @ - 795 , 15 + 849 , 7 @ @ public final class Native { <nl> } <nl> } <nl> } <nl> - System . load ( lib . getAbsolutePath ( ) ) ; <nl> - nativeLibraryPath = lib . getAbsolutePath ( ) ; <nl> - / / Attempt to delete immediately once jnidispatch is successfully <nl> - / / loaded . This avoids the complexity of trying to do so on " exit " , <nl> - / / which point can vary under different circumstances ( native <nl> - / / compilation , dynamically loaded modules , normal application , etc ) . <nl> - if ( unpacked ) { <nl> - deleteNativeLibrary ( lib . getAbsolutePath ( ) ) ; <nl> - } <nl> + return lib ; <nl> } <nl> <nl> / * * <nl> @ @ - 966 , 7 + 1012 , 7 @ @ public final class Native { <nl> File dir = getTempDir ( ) ; <nl> FilenameFilter filter = new FilenameFilter ( ) { <nl> public boolean accept ( File dir , String name ) { <nl> - return name . endsWith ( " . x " ) & & name . indexOf ( " jna " ) ! = - 1 ; <nl> + return name . endsWith ( " . x " ) & & name . startsWith ( JNA _ TMPLIB _ PREFIX ) ; <nl> } <nl> } ; <nl> File [ ] files = dir . listFiles ( filter ) ; <nl> diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index f871276 . . a68ed3d 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 16 , 6 + 16 , 7 @ @ package com . sun . jna ; <nl> <nl> import java . io . File ; <nl> import java . io . FilenameFilter ; <nl> + import java . io . IOException ; <nl> import java . lang . ref . WeakReference ; <nl> import java . lang . ref . Reference ; <nl> import java . lang . reflect . Method ; <nl> @ @ - 193 , 6 + 194 , 20 @ @ public class NativeLibrary { <nl> try { handle = Native . open ( libraryPath , openFlags ) ; } <nl> catch ( UnsatisfiedLinkError e2 ) { e = e2 ; } <nl> } <nl> + / / As a last resort , try to extract the library from the class <nl> + / / path , using the current context class loader . <nl> + if ( handle = = 0 ) { <nl> + try { <nl> + File embedded = Native . extractFromResourcePath ( libraryName ) ; <nl> + handle = Native . open ( embedded . getAbsolutePath ( ) ) ; <nl> + / / Don ' t leave temporary files around <nl> + if ( Native . isUnpacked ( embedded ) ) { <nl> + Native . deleteLibrary ( embedded ) ; <nl> + } <nl> + } <nl> + catch ( IOException e2 ) { e = new UnsatisfiedLinkError ( e2 . getMessage ( ) ) ; } <nl> + } <nl> + <nl> if ( handle = = 0 ) { <nl> throw new UnsatisfiedLinkError ( " Unable to load library ' " + libraryName + " ' : " <nl> + e . getMessage ( ) ) ; <nl> diff - - git a / src / com / sun / jna / overview . html b / src / com / sun / jna / overview . html <nl> index 60db18b . . 40a751b 100644 <nl> - - - a / src / com / sun / jna / overview . html <nl> + + + b / src / com / sun / jna / overview . html <nl> @ @ - 715 , 7 + 715 , 8 @ @ NOTE : When protected mode is enabled , you should make use of the jsig library , i <nl> Using < a href = " # direct - mapping " > direct mapping < / a > of methods makes native <nl> calls more efficiently than does interface mapping . Direct mapping does not <nl> support varargs calls or arrays of Pointer , String , or WString as an argument <nl> - or return value . <nl> + or return value . For optimium results , use only primitive arguments and <nl> + return values ; you ' ll have to convert to and from objects yourself explicitly . <nl> < h3 > Avoid type mapping < / h3 > <nl> Type mapping incurs additional overhead on each function call . You can avoid <nl> this by ensuring that your arguments and / or return types are already primitive <nl> diff - - git a / test / com / sun / jna / NativeLibraryTest . java b / test / com / sun / jna / NativeLibraryTest . java <nl> index 73690ad . . 96b592b 100644 <nl> - - - a / test / com / sun / jna / NativeLibraryTest . java <nl> + + + b / test / com / sun / jna / NativeLibraryTest . java <nl> @ @ - 249 , 6 + 249 , 10 @ @ public class NativeLibraryTest extends TestCase { <nl> Native . loadLibrary ( " testlib " , TestLibrary . class , options ) ; <nl> } <nl> <nl> + public void testEmbeddedLibrary ( ) { <nl> + Native . loadLibrary ( " embedded - testlib " , TestLibrary . class ) ; <nl> + } <nl> + <nl> public static void main ( String [ ] args ) { <nl> junit . textui . TestRunner . run ( NativeLibraryTest . class ) ; <nl> } <nl> diff - - git a / test / com / sun / jna / NativeTest . java b / test / com / sun / jna / NativeTest . java <nl> index e567f95 . . d3d7125 100644 <nl> - - - a / test / com / sun / jna / NativeTest . java <nl> + + + b / test / com / sun / jna / NativeTest . java <nl> @ @ - 245 , 50 + 245 , 50 @ @ public class NativeTest extends TestCase { <nl> } <nl> <nl> public void testOSPrefix ( ) { <nl> - assertEquals ( " Wrong resource path " , " / com / sun / jna / win32 - x86 " , <nl> - Native . getNativeLibraryResourcePath ( Platform . WINDOWS , <nl> - " x86 " , " Windows " ) ) ; <nl> - assertEquals ( " Wrong resource path Windows / i386 " , " / com / sun / jna / win32 - x86 " , <nl> - Native . getNativeLibraryResourcePath ( Platform . WINDOWS , <nl> - " i386 " , " Windows " ) ) ; <nl> - assertEquals ( " Wrong resource path Windows CE / arm " , " / com / sun / jna / w32ce - arm " , <nl> - Native . getNativeLibraryResourcePath ( Platform . WINDOWSCE , <nl> - " arm " , " Windows CE " ) ) ; <nl> - assertEquals ( " Wrong resource path Mac / x86 " , " / com / sun / jna / darwin " , <nl> - Native . getNativeLibraryResourcePath ( Platform . MAC , <nl> - " x86 " , " Darwin " ) ) ; <nl> - assertEquals ( " Wrong resource path Mac / x86 _ 64 " , " / com / sun / jna / darwin " , <nl> - Native . getNativeLibraryResourcePath ( Platform . MAC , <nl> - " x86 _ 64 " , " Mac " ) ) ; <nl> - assertEquals ( " Wrong resource path Solaris / sparc " , " / com / sun / jna / sunos - sparc " , <nl> - Native . getNativeLibraryResourcePath ( Platform . SOLARIS , <nl> - " sparc " , " Solaris " ) ) ; <nl> - assertEquals ( " Wrong resource path SunOS / sparcv9 " , " / com / sun / jna / sunos - sparcv9 " , <nl> - Native . getNativeLibraryResourcePath ( Platform . SOLARIS , <nl> - " sparcv9 " , " SunOS " ) ) ; <nl> - assertEquals ( " Wrong resource path Linux / i386 " , " / com / sun / jna / linux - i386 " , <nl> - Native . getNativeLibraryResourcePath ( Platform . LINUX , <nl> - " i386 " , " Linux / Gnu " ) ) ; <nl> - assertEquals ( " Wrong resource path Linux / x86 " , " / com / sun / jna / linux - i386 " , <nl> - Native . getNativeLibraryResourcePath ( Platform . LINUX , <nl> - " x86 " , " Linux " ) ) ; <nl> - assertEquals ( " Wrong resource path Linux / ppc " , " / com / sun / jna / linux - ppc " , <nl> - Native . getNativeLibraryResourcePath ( Platform . LINUX , <nl> - " powerpc " , " Linux " ) ) ; <nl> - assertEquals ( " Wrong resource path OpenBSD / x86 " , " / com / sun / jna / openbsd - i386 " , <nl> - Native . getNativeLibraryResourcePath ( Platform . OPENBSD , <nl> - " x86 " , " OpenBSD " ) ) ; <nl> - assertEquals ( " Wrong resource path FreeBSD / x86 " , " / com / sun / jna / freebsd - i386 " , <nl> - Native . getNativeLibraryResourcePath ( Platform . FREEBSD , <nl> - " x86 " , " FreeBSD " ) ) ; <nl> - assertEquals ( " Wrong resource path Linux / armv7l ( android ) " , " / com / sun / jna / android - arm " , <nl> - Native . getNativeLibraryResourcePath ( Platform . ANDROID , <nl> - " armv7l " , " Linux " ) ) ; <nl> - <nl> - assertEquals ( " Wrong resource path other / other " , " / com / sun / jna / name - ppc " , <nl> - Native . getNativeLibraryResourcePath ( Platform . UNSPECIFIED , <nl> - " PowerPC " , " Name Of System " ) ) ; <nl> - <nl> + assertEquals ( " Wrong resource path " , " win32 - x86 " , <nl> + Native . getNativeLibraryResourcePrefix ( Platform . WINDOWS , <nl> + " x86 " , " Windows " ) ) ; <nl> + assertEquals ( " Wrong resource path Windows / i386 " , " win32 - x86 " , <nl> + Native . getNativeLibraryResourcePrefix ( Platform . WINDOWS , <nl> + " i386 " , " Windows " ) ) ; <nl> + assertEquals ( " Wrong resource path Windows CE / arm " , " w32ce - arm " , <nl> + Native . getNativeLibraryResourcePrefix ( Platform . WINDOWSCE , <nl> + " arm " , " Windows CE " ) ) ; <nl> + assertEquals ( " Wrong resource path Mac / x86 " , " darwin " , <nl> + Native . getNativeLibraryResourcePrefix ( Platform . MAC , <nl> + " x86 " , " Darwin " ) ) ; <nl> + assertEquals ( " Wrong resource path Mac / x86 _ 64 " , " darwin " , <nl> + Native . getNativeLibraryResourcePrefix ( Platform . MAC , <nl> + " x86 _ 64 " , " Mac " ) ) ; <nl> + assertEquals ( " Wrong resource path Solaris / sparc " , " sunos - sparc " , <nl> + Native . getNativeLibraryResourcePrefix ( Platform . SOLARIS , <nl> + " sparc " , " Solaris " ) ) ; <nl> + assertEquals ( " Wrong resource path SunOS / sparcv9 " , " sunos - sparcv9 " , <nl> + Native . getNativeLibraryResourcePrefix ( Platform . SOLARIS , <nl> + " sparcv9 " , " SunOS " ) ) ; <nl> + assertEquals ( " Wrong resource path Linux / i386 " , " linux - i386 " , <nl> + Native . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> + " i386 " , " Linux / Gnu " ) ) ; <nl> + assertEquals ( " Wrong resource path Linux / x86 " , " linux - i386 " , <nl> + Native . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> + " x86 " , " Linux " ) ) ; <nl> + assertEquals ( " Wrong resource path Linux / ppc " , " linux - ppc " , <nl> + Native . getNativeLibraryResourcePrefix ( Platform . LINUX , <nl> + " powerpc " , " Linux " ) ) ; <nl> + assertEquals ( " Wrong resource path OpenBSD / x86 " , " openbsd - i386 " , <nl> + Native . getNativeLibraryResourcePrefix ( Platform . OPENBSD , <nl> + " x86 " , " OpenBSD " ) ) ; <nl> + assertEquals ( " Wrong resource path FreeBSD / x86 " , " freebsd - i386 " , <nl> + Native . getNativeLibraryResourcePrefix ( Platform . FREEBSD , <nl> + " x86 " , " FreeBSD " ) ) ; <nl> + assertEquals ( " Wrong resource path Linux / armv7l ( android ) " , " android - arm " , <nl> + Native . getNativeLibraryResourcePrefix ( Platform . ANDROID , <nl> + " armv7l " , " Linux " ) ) ; <nl> + <nl> + assertEquals ( " Wrong resource path other / other " , " name - ppc " , <nl> + Native . getNativeLibraryResourcePrefix ( Platform . UNSPECIFIED , <nl> + " PowerPC " , " Name Of System " ) ) ; <nl> + <nl> } <nl> <nl> public static class DirectMapping { <nl> @ @ - 338 , 10 + 338 , 11 @ @ public class NativeTest extends TestCase { <nl> <nl> public void testRemoveTemporaries ( ) throws Exception { <nl> File dir = Native . getTempDir ( ) ; <nl> - File tmp = new File ( dir , " jna " ) ; <nl> + File tmp = new File ( dir , Native . JNA _ TMPLIB _ PREFIX ) ; <nl> tmp . delete ( ) ; <nl> try { <nl> assertTrue ( " Couldn ' t create temporary file " + tmp , tmp . createNewFile ( ) ) ; <nl> + assertTrue ( " File isn ' t recognized as unpacked " , Native . isUnpacked ( tmp ) ) ; <nl> Native . markTemporaryFile ( tmp ) ; <nl> Native . removeTemporaryFiles ( ) ; <nl> assertFalse ( " Temporary file still exists " , tmp . exists ( ) ) ; <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index 8bd7ad3 . . 70a6edf 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 66 , 6 + 66 , 20 @ @ public class StructureTest extends TestCase { <nl> assertNotSame ( " Initial pointer should not be used directly : " + p , p , p1 ) ; <nl> } <nl> <nl> + public void testInitializeWithTypeMapper ( ) { <nl> + class TestStructure extends Structure { <nl> + public int field ; <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( new String [ ] { " field " } ) ; <nl> + } <nl> + public TestStructure ( TypeMapper m ) { <nl> + super ( ALIGN _ DEFAULT , m ) ; <nl> + } <nl> + } <nl> + TypeMapper m = new DefaultTypeMapper ( ) ; <nl> + TestStructure s = new TestStructure ( m ) ; <nl> + assertEquals ( " Type mapper not installed " , m , s . getTypeMapper ( ) ) ; <nl> + } <nl> <nl> / / must be public to populate array <nl> public static class TestAllocStructure extends Structure {
diff - - git a / src / com / sun / jna / Pointer . java b / src / com / sun / jna / Pointer . java <nl> index 4c9c4a0 . . 2db8be3 100644 <nl> - - - a / src / com / sun / jna / Pointer . java <nl> + + + b / src / com / sun / jna / Pointer . java <nl> @ @ - 1190 , 7 + 1190 , 7 @ @ v * @ param wide whether to convert from a wide or standard C string <nl> <nl> / * * Read the native peer value . Use with caution . * / <nl> public static long nativeValue ( Pointer p ) { <nl> - return p . peer ; <nl> + return p = = null ? 0 : p . peer ; <nl> } <nl> <nl> / * * Set the native peer value . Use with caution . * /
diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java <nl> index 1f1adc3 . . 329bcc5 100644 <nl> - - - a / src / com / sun / jna / Platform . java <nl> + + + b / src / com / sun / jna / Platform . java <nl> @ @ - 79 , 15 + 79 , 6 @ @ public final class Platform { <nl> else { <nl> osType = UNSPECIFIED ; <nl> } <nl> - boolean hasAWT = false ; <nl> - try { <nl> - Class . forName ( " java . awt . Component " ) ; <nl> - hasAWT = true ; <nl> - } <nl> - catch ( Throwable t ) { <nl> - / / Don ' t care why <nl> - } <nl> - HAS _ AWT = hasAWT ; <nl> boolean hasBuffers = false ; <nl> try { <nl> Class . forName ( " java . nio . Buffer " ) ; <nl> @ @ - 95 , 6 + 86 , 10 @ @ public final class Platform { <nl> } <nl> catch ( ClassNotFoundException e ) { <nl> } <nl> + / / NOTE : we used to do Class . forName ( " java . awt . Component " ) , but that <nl> + / / has the unintended side effect of actually loading AWT native libs , <nl> + / / which can be problematic <nl> + HAS _ AWT = osType ! = WINDOWSCE & & osType ! = ANDROID & & osType ! = AIX ; <nl> HAS _ BUFFERS = hasBuffers ; <nl> RO _ FIELDS = osType ! = WINDOWSCE ; <nl> C _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " c " ;
diff - - git a / build . xml b / build . xml <nl> index 872fd21 . . f9d3679 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 356 , 7 + 356 , 7 @ @ com / sun / jna / freebsd - amd64 / libjnidispatch . so ; <nl> processor = x86 - 64 ; osname = freebsd , <nl> <nl> com / sun / jna / darwin / libjnidispatch . jnilib ; <nl> - osname = macos <nl> + osname = macosx ; processor = x86 ; processor = x86 _ 64 ; processor = ppc <nl> " / > <nl> < / manifest > <nl> < fileset dir = " $ { classes } " excludes = " $ { jar . omitted } " >
diff - - git a / native / callback . c b / native / callback . c <nl> index e7c59cb . . a1c7e30 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 109 , 7 + 109 , 7 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> cb - > arg _ types = ( ffi _ type * * ) malloc ( sizeof ( ffi _ type * ) * argc ) ; <nl> cb - > java _ arg _ types = ( ffi _ type * * ) malloc ( sizeof ( ffi _ type * ) * ( argc + 3 ) ) ; <nl> cb - > arg _ jtypes = ( char * ) malloc ( sizeof ( char ) * argc ) ; <nl> - cb - > flags = ( int * ) malloc ( sizeof ( int ) * argc ) ; <nl> + cb - > conversion _ flags = ( int * ) malloc ( sizeof ( int ) * argc ) ; <nl> cb - > rflag = CVT _ DEFAULT ; <nl> cb - > arg _ classes = ( jobject * ) malloc ( sizeof ( jobject ) * argc ) ; <nl> <nl> @ @ - 119 , 7 + 119 , 7 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> for ( i = 0 ; i < argc ; i + + ) { <nl> int jtype ; <nl> jclass cls = ( * env ) - > GetObjectArrayElement ( env , param _ types , i ) ; <nl> - if ( ( cb - > flags [ i ] = get _ conversion _ flag ( env , cls ) ) ! = CVT _ DEFAULT ) { <nl> + if ( ( cb - > conversion _ flags [ i ] = get _ conversion _ flag ( env , cls ) ) ! = CVT _ DEFAULT ) { <nl> cb - > arg _ classes [ i ] = ( * env ) - > NewWeakGlobalRef ( env , cls ) ; <nl> cvt = 1 ; <nl> } <nl> @ @ - 139 , 9 + 139 , 9 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> if ( ! cb - > java _ arg _ types [ i + 3 ] ) { <nl> goto failure _ cleanup ; <nl> } <nl> - if ( cb - > flags [ i ] = = CVT _ NATIVE _ MAPPED <nl> - | | cb - > flags [ i ] = = CVT _ POINTER _ TYPE <nl> - | | cb - > flags [ i ] = = CVT _ INTEGER _ TYPE ) { <nl> + if ( cb - > conversion _ flags [ i ] = = CVT _ NATIVE _ MAPPED <nl> + | | cb - > conversion _ flags [ i ] = = CVT _ POINTER _ TYPE <nl> + | | cb - > conversion _ flags [ i ] = = CVT _ INTEGER _ TYPE ) { <nl> jclass ncls ; <nl> ncls = getNativeType ( env , cls ) ; <nl> jtype = get _ jtype ( env , ncls ) ; <nl> @ @ - 162 , 7 + 162 , 7 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> if ( cb - > arg _ types [ i ] - > type = = FFI _ TYPE _ FLOAT ) { <nl> / / Java method is varargs , so promote floats to double <nl> cb - > java _ arg _ types [ i + 3 ] = & ffi _ type _ double ; <nl> - cb - > flags [ i ] = CVT _ FLOAT ; <nl> + cb - > conversion _ flags [ i ] = CVT _ FLOAT ; <nl> cvt = 1 ; <nl> } <nl> else if ( cb - > java _ arg _ types [ i + 3 ] - > type = = FFI _ TYPE _ STRUCT ) { <nl> @ @ - 171 , 8 + 171 , 8 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> } <nl> } <nl> if ( ! direct | | ! cvt ) { <nl> - free ( cb - > flags ) ; <nl> - cb - > flags = NULL ; <nl> + free ( cb - > conversion _ flags ) ; <nl> + cb - > conversion _ flags = NULL ; <nl> free ( cb - > arg _ classes ) ; <nl> cb - > arg _ classes = NULL ; <nl> } <nl> @ @ - 279 , 8 + 279 , 8 @ @ free _ callback ( JNIEnv * env , callback * cb ) { <nl> free ( cb - > arg _ classes ) ; <nl> } <nl> free ( cb - > java _ arg _ types ) ; <nl> - if ( cb - > flags ) { <nl> - free ( cb - > flags ) ; <nl> + if ( cb - > conversion _ flags ) { <nl> + free ( cb - > conversion _ flags ) ; <nl> } <nl> free ( cb - > arg _ jtypes ) ; <nl> # ifdef DLL _ FPTRS <nl> @ @ - 344 , 9 + 344 , 9 @ @ callback _ invoke ( JNIEnv * env , callback * cb , ffi _ cif * cif , void * resp , void * * cbar <nl> args [ 2 ] = & cb - > methodID ; <nl> memcpy ( & args [ 3 ] , cbargs , cif - > nargs * sizeof ( void * ) ) ; <nl> <nl> - if ( cb - > flags ) { <nl> + if ( cb - > conversion _ flags ) { <nl> for ( i = 0 ; i < cif - > nargs ; i + + ) { <nl> - switch ( cb - > flags [ i ] ) { <nl> + switch ( cb - > conversion _ flags [ i ] ) { <nl> case CVT _ INTEGER _ TYPE : <nl> case CVT _ POINTER _ TYPE : <nl> case CVT _ NATIVE _ MAPPED : <nl> @ @ - 364 , 11 + 364 , 11 @ @ callback _ invoke ( JNIEnv * env , callback * cb , ffi _ cif * cif , void * resp , void * * cbar <nl> * ( ( void * * ) args [ i + 3 ] ) = newJavaWString ( env , * ( void * * ) cbargs [ i ] ) ; <nl> break ; <nl> case CVT _ STRUCTURE : <nl> - * ( ( void * * ) args [ i + 3 ] ) = newJavaStructure ( env , * ( void * * ) cbargs [ i ] , cb - > arg _ classes [ i ] , JNI _ FALSE ) ; <nl> + * ( ( void * * ) args [ i + 3 ] ) = newJavaStructure ( env , * ( void * * ) cbargs [ i ] , cb - > arg _ classes [ i ] ) ; <nl> break ; <nl> case CVT _ STRUCTURE _ BYVAL : <nl> 	 args [ i + 3 ] = alloca ( sizeof ( void * ) ) ; <nl> - 	 * ( ( void * * ) args [ i + 3 ] ) = newJavaStructure ( env , cbargs [ i ] , cb - > arg _ classes [ i ] , JNI _ TRUE ) ; <nl> + 	 * ( ( void * * ) args [ i + 3 ] ) = newJavaStructure ( env , cbargs [ i ] , cb - > arg _ classes [ i ] ) ; <nl> break ; <nl> case CVT _ CALLBACK : <nl> * ( ( void * * ) args [ i + 3 ] ) = newJavaCallback ( env , * ( void * * ) cbargs [ i ] , cb - > arg _ classes [ i ] ) ; <nl> @ @ - 437 , 9 + 437 , 9 @ @ callback _ invoke ( JNIEnv * env , callback * cb , ffi _ cif * cif , void * resp , void * * cbar <nl> break ; <nl> default : break ; <nl> } <nl> - if ( cb - > flags ) { <nl> + if ( cb - > conversion _ flags ) { <nl> for ( i = 0 ; i < cif - > nargs ; i + + ) { <nl> - if ( cb - > flags [ i ] = = CVT _ STRUCTURE ) { <nl> + if ( cb - > conversion _ flags [ i ] = = CVT _ STRUCTURE ) { <nl> writeStructure ( env , * ( void * * ) cbargs [ i ] ) ; <nl> } <nl> } <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 7f0ecf7 . . ac60b41 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 262 , 7 + 262 , 6 @ @ static jmethodID MID _ Native _ toNativeTypeMapped ; <nl> static jmethodID MID _ Native _ fromNativeTypeMapped ; <nl> static jmethodID MID _ Structure _ getTypeInfo ; <nl> static jmethodID MID _ Structure _ newInstance ; <nl> - static jmethodID MID _ Structure _ useMemory ; <nl> static jmethodID MID _ Structure _ read ; <nl> static jmethodID MID _ Structure _ write ; <nl> static jmethodID MID _ CallbackReference _ getCallback ; <nl> @ @ - 816 , 25 + 815 , 11 @ @ newJavaPointer ( JNIEnv * env , void * p ) <nl> } <nl> <nl> jobject <nl> - newJavaStructure ( JNIEnv * env , void * data , jclass type , jboolean new _ memory ) <nl> + newJavaStructure ( JNIEnv * env , void * data , jclass type ) <nl> { <nl> if ( data ! = NULL ) { <nl> - volatile jobject obj = ( * env ) - > CallStaticObjectMethod ( env , classStructure , MID _ Structure _ newInstance , type ) ; <nl> - if ( obj ! = NULL ) { <nl> - ffi _ type * rtype = getStructureType ( env , obj ) ; <nl> - if ( rtype ) { <nl> - if ( new _ memory ) { <nl> - MEMCPY ( getStructureAddress ( env , obj ) , data , rtype - > size ) ; <nl> - } <nl> - else { <nl> - ( * env ) - > CallVoidMethod ( env , obj , MID _ Structure _ useMemory , newJavaPointer ( env , data ) ) ; <nl> - } <nl> - if ( ! ( * env ) - > ExceptionCheck ( env ) ) { <nl> - ( * env ) - > CallVoidMethod ( env , obj , MID _ Structure _ read ) ; <nl> - } <nl> - } <nl> - } <nl> - else { <nl> + volatile jobject obj = ( * env ) - > CallStaticObjectMethod ( env , classStructure , MID _ Structure _ newInstance , type , A2L ( data ) ) ; <nl> + if ( obj = = NULL ) { <nl> fprintf ( stderr , " JNA : failed to create structure \ n " ) ; <nl> } <nl> return obj ; <nl> @ @ - 1016 , 7 + 1001 , 7 @ @ initializeThread ( callback * cb , AttachOptions * args ) { <nl> { <nl> jobject cbobj = ( * env ) - > NewLocalRef ( env , cb - > object ) ; <nl> if ( ! ( * env ) - > IsSameObject ( env , cbobj , NULL ) ) { <nl> - jobject argsobj = newJavaStructure ( env , args , classAttachOptions , JNI _ FALSE ) ; <nl> + jobject argsobj = newJavaStructure ( env , args , classAttachOptions ) ; <nl> group = ( * env ) - > CallStaticObjectMethod ( env , classCallbackReference , <nl> MID _ CallbackReference _ initializeThread , <nl> cbobj , argsobj ) ; <nl> @ @ - 1530 , 8 + 1515 , 9 @ @ get _ ffi _ type ( JNIEnv * env , jclass cls , char jtype ) { <nl> case ' V ' : <nl> return & ffi _ type _ void ; <nl> case ' s ' : { <nl> + # define PLACEHOLDER _ MEMORY 0 <nl> jobject s = ( * env ) - > CallStaticObjectMethod ( env , classStructure , <nl> - MID _ Structure _ newInstance , cls ) ; <nl> + MID _ Structure _ newInstance , cls , PLACEHOLDER _ MEMORY ) ; <nl> if ( s ) { <nl> return getStructureType ( env , s ) ; <nl> } <nl> @ @ - 1767 , 10 + 1753 , 10 @ @ method _ handler ( ffi _ cif * cif , void * volatile resp , void * * argp , void * cdata ) { <nl> * ( void * * ) resp = newJavaWString ( env , * ( void * * ) resp ) ; <nl> break ; <nl> case CVT _ STRUCTURE : <nl> - * ( void * * ) resp = newJavaStructure ( env , * ( void * * ) resp , data - > closure _ rclass , JNI _ FALSE ) ; <nl> + * ( void * * ) resp = newJavaStructure ( env , * ( void * * ) resp , data - > closure _ rclass ) ; <nl> break ; <nl> case CVT _ STRUCTURE _ BYVAL : <nl> - * ( void * * ) oldresp = newJavaStructure ( env , resp , data - > closure _ rclass , JNI _ TRUE ) ; <nl> + * ( void * * ) oldresp = newJavaStructure ( env , resp , data - > closure _ rclass ) ; <nl> break ; <nl> case CVT _ CALLBACK : <nl> * ( void * * ) resp = newJavaCallback ( env , * ( void * * ) resp , data - > closure _ rclass ) ; <nl> @ @ - 2626 , 15 + 2612 , 10 @ @ Java _ com _ sun _ jna _ Native _ initIDs ( JNIEnv * env , jclass cls ) { <nl> } <nl> else if ( ! ( MID _ Structure _ newInstance <nl> = ( * env ) - > GetStaticMethodID ( env , classStructure , <nl> - " newInstance " , " ( Ljava / lang / Class ; ) Lcom / sun / jna / Structure ; " ) ) ) { <nl> + " newInstance " , " ( Ljava / lang / Class ; J ) Lcom / sun / jna / Structure ; " ) ) ) { <nl> throwByName ( env , EUnsatisfiedLink , <nl> " Can ' t obtain static newInstance method for class com . sun . jna . Structure " ) ; <nl> } <nl> - else if ( ! LOAD _ MID ( env , MID _ Structure _ useMemory , classStructure , <nl> - " useMemory " , " ( Lcom / sun / jna / Pointer ; ) V " ) ) { <nl> - throwByName ( env , EUnsatisfiedLink , <nl> - " Can ' t obtain useMemory method for class com . sun . jna . Structure " ) ; <nl> - } <nl> else if ( ! LOAD _ MID ( env , MID _ Structure _ read , classStructure , <nl> " autoRead " , " ( ) V " ) ) { <nl> throwByName ( env , EUnsatisfiedLink , <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index 79e071b . . 91e2626 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 103 , 7 + 103 , 7 @ @ typedef struct _ callback { <nl> ffi _ type * * arg _ types ; <nl> ffi _ type * * java _ arg _ types ; <nl> jobject * arg _ classes ; <nl> - int * flags ; <nl> + int * conversion _ flags ; <nl> int rflag ; <nl> JavaVM * vm ; <nl> jobject object ; <nl> @ @ - 184 , 7 + 184 , 7 @ @ extern jboolean ffi _ error ( JNIEnv * , const char * , ffi _ status ) ; <nl> extern jobject newJavaPointer ( JNIEnv * , void * ) ; <nl> extern jstring newJavaString ( JNIEnv * , const char * , jboolean ) ; <nl> extern jobject newJavaWString ( JNIEnv * , const wchar _ t * ) ; <nl> - extern jobject newJavaStructure ( JNIEnv * , void * , jclass , jboolean ) ; <nl> + extern jobject newJavaStructure ( JNIEnv * , void * , jclass ) ; <nl> extern jobject newJavaCallback ( JNIEnv * , void * , jclass ) ; <nl> extern void * getNativeString ( JNIEnv * , jstring , jboolean ) ; <nl> extern void * getNativeAddress ( JNIEnv * , jobject ) ; <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index 864ae5a . . efc6b31 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 493 , 12 + 493 , 11 @ @ public abstract class Structure { <nl> * Reads the fields of the struct from native memory <nl> * / <nl> public void read ( ) { <nl> - readCalled = true ; <nl> - <nl> / / Avoid reading from a null pointer <nl> if ( memory = = PLACEHOLDER _ MEMORY ) { <nl> return ; <nl> } <nl> + readCalled = true ; <nl> <nl> / / convenience : allocate memory and / or calculate size if it hasn ' t <nl> / / been already ; this allows structures to do field - based <nl> @ @ - 1536 , 6 + 1535 , 18 @ @ public abstract class Structure { <nl> return FFIType . get ( obj ) ; <nl> } <nl> <nl> + / * * Called from native code only ; same as { @ link <nl> + * # newInstance ( Class , Pointer ) } , except that it additionally performs <nl> + * { @ link # conditionalAutoRead ( ) } . <nl> + * / <nl> + private static Structure newInstance ( Class type , long init ) throws IllegalArgumentException { <nl> + Structure s = newInstance ( type , init = = 0 ? PLACEHOLDER _ MEMORY : new Pointer ( init ) ) ; <nl> + if ( init ! = 0 ) { <nl> + s . conditionalAutoRead ( ) ; <nl> + } <nl> + return s ; <nl> + } <nl> + <nl> / * * Create a new Structure instance of the given type , initialized with <nl> * the given memory . <nl> * @ param type desired Structure type <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index fc0774b . . c127823 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 260 , 6 + 260 , 11 @ @ public class CallbacksTest extends TestCase { <nl> assertEquals ( " Callback lookups for same pointer should return same Callback object " , cb , cb2 ) ; <nl> } <nl> <nl> + / / Allow direct tests to override <nl> + protected Map callbackCache ( ) { <nl> + return CallbackReference . callbackMap ; <nl> + } <nl> + <nl> / / Fails on OpenJDK ( linux / ppc ) , probably finalize not run <nl> public void testGCCallbackOnFinalize ( ) throws Exception { <nl> final boolean [ ] called = { false } ; <nl> @ @ - 271 , 10 + 276 , 10 @ @ public class CallbacksTest extends TestCase { <nl> lib . callVoidCallback ( cb ) ; <nl> assertTrue ( " Callback not called " , called [ 0 ] ) ; <nl> <nl> - Map refs = new WeakHashMap ( CallbackReference . callbackMap ) ; <nl> + Map refs = new WeakHashMap ( callbackCache ( ) ) ; <nl> assertTrue ( " Callback not cached " , refs . containsKey ( cb ) ) ; <nl> CallbackReference ref = ( CallbackReference ) refs . get ( cb ) ; <nl> - refs = CallbackReference . callbackMap ; <nl> + refs = callbackCache ( ) ; <nl> Pointer cbstruct = ref . cbstruct ; <nl> <nl> cb = null ; <nl> @ @ - 428 , 10 + 433 , 8 @ @ public class CallbacksTest extends TestCase { <nl> assertEquals ( " Structure return not synched " , <nl> MAGIC , value . value , 0d ) ; <nl> / / All structures involved should be created from pointers , with no <nl> - / / memory allocation at all . Not yet implemented for direct callbacks . <nl> - if ( getClass ( ) = = CallbacksTest . class ) { <nl> - assertEquals ( " No structure memory should be allocated " , 0 , SmallTestStructure . allocations ) ; <nl> - } <nl> + / / memory allocation at all . <nl> + assertEquals ( " No structure memory should be allocated " , 0 , SmallTestStructure . allocations ) ; <nl> } <nl> <nl> public void testCallStructureArrayCallback ( ) { <nl> @ @ - 1141 , 10 + 1144 , 10 @ @ public class CallbacksTest extends TestCase { <nl> lib . callVoidCallback ( cb ) ; <nl> assertTrue ( " Callback not called " , called [ 0 ] ) ; <nl> <nl> - Map refs = new WeakHashMap ( CallbackReference . callbackMap ) ; <nl> + Map refs = new WeakHashMap ( callbackCache ( ) ) ; <nl> assertTrue ( " Callback not cached " , refs . containsKey ( cb ) ) ; <nl> CallbackReference ref = ( CallbackReference ) refs . get ( cb ) ; <nl> - refs = CallbackReference . callbackMap ; <nl> + refs = callbackCache ( ) ; <nl> Pointer cbstruct = ref . cbstruct ; <nl> Pointer first _ fptr = cbstruct . getPointer ( 0 ) ; <nl> <nl> diff - - git a / test / com / sun / jna / DirectCallbacksTest . java b / test / com / sun / jna / DirectCallbacksTest . java <nl> index e308900 . . 11347d2 100644 <nl> - - - a / test / com / sun / jna / DirectCallbacksTest . java <nl> + + + b / test / com / sun / jna / DirectCallbacksTest . java <nl> @ @ - 56 , 6 + 56 , 10 @ @ public class DirectCallbacksTest extends CallbacksTest { <nl> lib = new DirectTestLibrary ( ) ; <nl> } <nl> <nl> + protected Map callbackCache ( ) { <nl> + return CallbackReference . directCallbackMap ; <nl> + } <nl> + <nl> public static class DirectCallbackTestLibrary implements CallbackTestLibrary { <nl> public native double callInt32Callback ( DoubleCallback c , double arg , double arg2 ) ; <nl> public native float callInt64Callback ( FloatCallback c , float arg , float arg2 ) ; <nl> diff - - git a / test / com / sun / jna / ReturnTypesTest . java b / test / com / sun / jna / ReturnTypesTest . java <nl> index 8020b3c . . c2ca2c3 100644 <nl> - - - a / test / com / sun / jna / ReturnTypesTest . java <nl> + + + b / test / com / sun / jna / ReturnTypesTest . java <nl> @ @ - 240 , 10 + 240 , 8 @ @ public class ReturnTypesTest extends TestCase { <nl> SimpleStructure . allocations = 0 ; <nl> SimpleStructure s = lib . returnStaticTestStructure ( ) ; <nl> assertEquals ( " Expect test structure magic " , DOUBLE _ MAGIC , s . value , 0d ) ; <nl> - / / Optimized structure allocation not yet implemented for direct mapping <nl> - if ( getClass ( ) = = ReturnTypesTest . class ) { <nl> - assertEquals ( " Returned Structure should allocate no memory " , 0 , SimpleStructure . allocations ) ; <nl> - } <nl> + / / Optimized structure allocation <nl> + assertEquals ( " Returned Structure should allocate no memory " , 0 , SimpleStructure . allocations ) ; <nl> } <nl> <nl> public void testInvokeNullStructure ( ) { <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index 8bd7ad3 . . 108bf22 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 381 , 10 + 381 , 9 @ @ public class StructureTest extends TestCase { <nl> } <nl> <nl> / / TODO : add ' l newInstance ( Pointer ) tests : <nl> - / / DirectCallbacksTest . testCallStructureCallback <nl> - / / DirectReturnTypesTest . testInvokeStructure <nl> + / / NOTE : ensure structure - by - value respected ( no more flag on newjavastructure ) <nl> + / / native call ( direct mode ) <nl> / / getNativeAlignment <nl> - / / native call ( direct mode ) ( maybe not . . . ) <nl> public void testStructureFieldAvoidsSeparateMemoryAllocation ( ) { <nl> class TestStructure extends Structure { <nl> public NonAllocatingTestStructure s1 ;
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / BaseTSD . java b / contrib / platform / src / com / sun / jna / platform / win32 / BaseTSD . java <nl> index 611d34c . . d8b4d20 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / BaseTSD . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / BaseTSD . java <nl> @ @ - 1 , 127 + 1 , 129 @ @ <nl> - / * Copyright ( c ) 2010 Daniel Doubrovkine , All Rights Reserved <nl> - * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> - * / <nl> - package com . sun . jna . platform . win32 ; <nl> - <nl> - import com . sun . jna . IntegerType ; <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . ptr . ByReference ; <nl> - import com . sun . jna . win32 . StdCallLibrary ; <nl> - <nl> - / * * <nl> - * Based on basetsd . h ( various types ) <nl> - * @ author dblock [ at ] dblock [ dot ] org <nl> - * / <nl> - @ SuppressWarnings ( " serial " ) <nl> - public interface BaseTSD extends StdCallLibrary { <nl> - / * * <nl> - * Signed long type for pointer precision . <nl> - * Use when casting a pointer to a long to perform pointer arithmetic . <nl> - * / <nl> - public static class LONG _ PTR extends IntegerType { <nl> - public LONG _ PTR ( ) { <nl> - this ( 0 ) ; <nl> - } <nl> - <nl> - public LONG _ PTR ( long value ) { <nl> - super ( Pointer . SIZE , value ) ; <nl> - } <nl> - <nl> - public Pointer toPointer ( ) { <nl> - return Pointer . createConstant ( longValue ( ) ) ; <nl> - } <nl> - } <nl> - 	 <nl> - / * * <nl> - * Signed SIZE _ T . <nl> - * / <nl> - public static class SSIZE _ T extends LONG _ PTR { <nl> - public SSIZE _ T ( ) { <nl> - this ( 0 ) ; <nl> - } <nl> - <nl> - public SSIZE _ T ( long value ) { <nl> - super ( value ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Unsigned LONG _ PTR . <nl> - * / <nl> - public static class ULONG _ PTR extends IntegerType { <nl> - public ULONG _ PTR ( ) { <nl> - this ( 0 ) ; <nl> - } <nl> - <nl> - public ULONG _ PTR ( long value ) { <nl> - super ( Pointer . SIZE , value , true ) ; <nl> - } <nl> - <nl> - public Pointer toPointer ( ) { <nl> - return Pointer . createConstant ( longValue ( ) ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * PULONG _ PTR <nl> - * / <nl> - public static class ULONG _ PTRByReference extends ByReference { <nl> - public ULONG _ PTRByReference ( ) { <nl> - this ( new ULONG _ PTR ( 0 ) ) ; <nl> - } <nl> - public ULONG _ PTRByReference ( ULONG _ PTR value ) { <nl> - super ( Pointer . SIZE ) ; <nl> - setValue ( value ) ; <nl> - } <nl> - public void setValue ( ULONG _ PTR value ) { <nl> - if ( Pointer . SIZE = = 4 ) { <nl> - getPointer ( ) . setInt ( 0 , value . intValue ( ) ) ; <nl> - } <nl> - else { <nl> - getPointer ( ) . setLong ( 0 , value . longValue ( ) ) ; <nl> - } <nl> - } <nl> - public ULONG _ PTR getValue ( ) { <nl> - return new ULONG _ PTR ( Pointer . SIZE = = 4 <nl> - ? getPointer ( ) . getInt ( 0 ) <nl> - : getPointer ( ) . getLong ( 0 ) ) ; <nl> - } <nl> - } <nl> - <nl> - <nl> - / * * <nl> - * Unsigned DWORD _ PTR . <nl> - * / <nl> - public static class DWORD _ PTR extends IntegerType { <nl> - public DWORD _ PTR ( ) { <nl> - this ( 0 ) ; <nl> - } <nl> - <nl> - public DWORD _ PTR ( long value ) { <nl> - super ( Pointer . SIZE , value ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * The maximum number of bytes to which a pointer can point . <nl> - * Use for a count that must span the full range of a pointer . <nl> - * / <nl> - public static class SIZE _ T extends ULONG _ PTR { <nl> - public SIZE _ T ( ) { <nl> - this ( 0 ) ; <nl> - } <nl> - <nl> - public SIZE _ T ( long value ) { <nl> - super ( value ) ; <nl> - } <nl> - } <nl> - } <nl> + / * Copyright ( c ) 2010 Daniel Doubrovkine , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . IntegerType ; <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . ptr . ByReference ; <nl> + import com . sun . jna . win32 . StdCallLibrary ; <nl> + <nl> + / * * <nl> + * Based on basetsd . h ( various types ) <nl> + * @ author dblock [ at ] dblock [ dot ] org <nl> + * / <nl> + @ SuppressWarnings ( " serial " ) <nl> + public interface BaseTSD extends StdCallLibrary { <nl> + / * * <nl> + * Signed long type for pointer precision . <nl> + * Use when casting a pointer to a long to perform pointer arithmetic . <nl> + * / <nl> + public static class LONG _ PTR extends IntegerType { <nl> + public LONG _ PTR ( ) { <nl> + this ( 0 ) ; <nl> + } <nl> + <nl> + public LONG _ PTR ( long value ) { <nl> + super ( Pointer . SIZE , value ) ; <nl> + } <nl> + <nl> + public Pointer toPointer ( ) { <nl> + return Pointer . createConstant ( longValue ( ) ) ; <nl> + } <nl> + } <nl> + 	 <nl> + / * * <nl> + * Signed SIZE _ T . <nl> + * / <nl> + public static class SSIZE _ T extends LONG _ PTR { <nl> + public SSIZE _ T ( ) { <nl> + this ( 0 ) ; <nl> + } <nl> + <nl> + public SSIZE _ T ( long value ) { <nl> + super ( value ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Unsigned LONG _ PTR . <nl> + * / <nl> + public static class ULONG _ PTR extends IntegerType { <nl> + 	 public static final int SIZE = 4 ; <nl> + 	 <nl> + public ULONG _ PTR ( ) { <nl> + this ( 0 ) ; <nl> + } <nl> + <nl> + public ULONG _ PTR ( long value ) { <nl> + super ( SIZE , value , true ) ; <nl> + } <nl> + <nl> + public Pointer toPointer ( ) { <nl> + return Pointer . createConstant ( longValue ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * PULONG _ PTR <nl> + * / <nl> + public static class ULONG _ PTRByReference extends ByReference { <nl> + public ULONG _ PTRByReference ( ) { <nl> + this ( new ULONG _ PTR ( 0 ) ) ; <nl> + } <nl> + public ULONG _ PTRByReference ( ULONG _ PTR value ) { <nl> + super ( Pointer . SIZE ) ; <nl> + setValue ( value ) ; <nl> + } <nl> + public void setValue ( ULONG _ PTR value ) { <nl> + if ( Pointer . SIZE = = 4 ) { <nl> + getPointer ( ) . setInt ( 0 , value . intValue ( ) ) ; <nl> + } <nl> + else { <nl> + getPointer ( ) . setLong ( 0 , value . longValue ( ) ) ; <nl> + } <nl> + } <nl> + public ULONG _ PTR getValue ( ) { <nl> + return new ULONG _ PTR ( Pointer . SIZE = = 4 <nl> + ? getPointer ( ) . getInt ( 0 ) <nl> + : getPointer ( ) . getLong ( 0 ) ) ; <nl> + } <nl> + } <nl> + <nl> + <nl> + / * * <nl> + * Unsigned DWORD _ PTR . <nl> + * / <nl> + public static class DWORD _ PTR extends IntegerType { <nl> + public DWORD _ PTR ( ) { <nl> + this ( 0 ) ; <nl> + } <nl> + <nl> + public DWORD _ PTR ( long value ) { <nl> + super ( Pointer . SIZE , value ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * The maximum number of bytes to which a pointer can point . <nl> + * Use for a count that must span the full range of a pointer . <nl> + * / <nl> + public static class SIZE _ T extends ULONG _ PTR { <nl> + public SIZE _ T ( ) { <nl> + this ( 0 ) ; <nl> + } <nl> + <nl> + public SIZE _ T ( long value ) { <nl> + super ( value ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / ITypeInfo . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / ITypeInfo . java <nl> index ed00ba6 . . d73408c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / ITypeInfo . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / ITypeInfo . java <nl> @ @ - 57 , 9 + 57 , 10 @ @ public class ITypeInfo extends IUnknown { <nl> 	 } <nl> <nl> 	 public HRESULT GetTypeAttr ( <nl> - 	 / * [ out ] * / TYPEATTR . ByReference pTypeAttr ) { <nl> - <nl> - 	 	 int hr = this . invoke ( 3 , new Object [ ] { this . getPointer ( ) , pTypeAttr } ) ; <nl> + 	 / * [ out ] * / TYPEATTR . ByReference ppTypeAttr ) { <nl> + 	 	 <nl> + 	 	 <nl> + 	 	 int hr = this . invoke ( 3 , new Object [ ] { this . getPointer ( ) , ppTypeAttr } ) ; <nl> 	 	 return new HRESULT ( hr ) ; <nl> 	 } <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibraryImporter . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibraryImporter . java <nl> index 13d26f0 . . 5f32f2f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibraryImporter . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / TypeLibraryImporter . java <nl> @ @ - 7 , 6 + 7 , 7 @ @ import java . io . PrintStream ; <nl> import com . sun . jna . platform . win32 . OaIdl . FUNCDESC ; <nl> import com . sun . jna . platform . win32 . OaIdl . MEMBERID ; <nl> import com . sun . jna . platform . win32 . OaIdl . TYPEATTR ; <nl> + import com . sun . jna . platform . win32 . OaIdl . TYPEDESC ; <nl> import com . sun . jna . platform . win32 . OaIdl . TYPEKIND ; <nl> import com . sun . jna . platform . win32 . OaIdl . VARDESC ; <nl> import com . sun . jna . platform . win32 . WTypes . BSTR ; <nl> @ @ - 43 , 17 + 44 , 15 @ @ public class TypeLibraryImporter { <nl> <nl> 	 	 	 for ( int i = 0 ; i < typeLibUtil . getTypeInfoCount ( ) ; + + i ) { <nl> 	 	 	 	 TYPEKIND typekind = typeLibUtil . getTypeInfoType ( i ) ; <nl> - 	 	 	 	 ITypeInfoUtil typeInfoUtil = typeLibUtil . getTypeInfoUtil ( i ) ; <nl> - 	 	 	 	 Object [ ] typeLibDoc = this . typeLibUtil . getDocumentation ( i ) ; <nl> <nl> 	 	 	 	 if ( typekind . value = = TYPEKIND . TKIND _ ENUM ) { <nl> - 	 	 	 	 	 this . createCOMEnum ( typeLibDoc , typeInfoUtil ) ; <nl> + 	 	 	 	 	 this . createCOMEnum ( i ) ; <nl> 	 	 	 	 } else if ( typekind . value = = TYPEKIND . TKIND _ RECORD ) { <nl> <nl> 	 	 	 	 } else if ( typekind . value = = TYPEKIND . TKIND _ MODULE ) { <nl> <nl> 	 	 	 	 } else if ( typekind . value = = TYPEKIND . TKIND _ INTERFACE ) { <nl> - <nl> + 	 	 	 	 	 this . createCOMInterface ( i ) ; <nl> 	 	 	 	 } else if ( typekind . value = = TYPEKIND . TKIND _ DISPATCH ) { <nl> <nl> 	 	 	 	 } else if ( typekind . value = = TYPEKIND . TKIND _ COCLASS ) { <nl> @ @ - 108 , 9 + 107 , 69 @ @ public class TypeLibraryImporter { <nl> 	 	 this . out . println ( " * / " ) ; <nl> 	 } <nl> <nl> - 	 private void createCOMEnum ( Object [ ] typeLibDoc , ITypeInfoUtil typeInfoUtil ) { <nl> - 	 	 String enumName = ( String ) typeLibDoc [ 0 ] ; <nl> - 	 	 System . out . println ( enumName ) ; <nl> + 	 private void createCOMEnum ( int index ) { <nl> + 	 	 Object [ ] typeLibDoc = this . typeLibUtil . getDocumentation ( index ) ; <nl> + <nl> + 	 	 String enumName = ( String ) typeLibDoc [ 0 ] ; <nl> + 	 	 String helpString = ( String ) typeLibDoc [ 1 ] ; <nl> + 	 	 System . out . println ( enumName ) ; <nl> + 	 	 / / <nl> + 	 	 / / <nl> + 	 	 / / this . logInfo ( " Type of kind ' enum ' found : " + enumName ) ; <nl> + 	 	 / / this . out . print ( " 	 public static class TYPEKIND extends Structure { " <nl> + 	 	 / / + CR <nl> + 	 	 / / + <nl> + 	 	 / / " 	 public static class ByReference extends TYPEKIND implements 	 Structure . ByReference { } " <nl> + 	 	 / / + CRCR + " 	 	 	 public int value ; " + CRCR + " 	 	 	 public " <nl> + 	 	 / / + enumName + " ( ) { } " + CRCR <nl> + 	 	 / / + " public static final int " + enumName <nl> + 	 	 / / + " _ ENUM = 0 ; " + CRCR ) ; <nl> + 	 	 / / <nl> + 	 	 / / System . out . println ( documentation [ 0 ] ) ; <nl> + <nl> + 	 	 MEMBERID memberID ; <nl> + 	 	 FUNCDESC pFuncDesc ; <nl> + 	 	 VARDESC pVarDesc ; <nl> + 	 	 BSTR bstrMethod ; <nl> + 	 	 BSTR bstrProperty ; <nl> + <nl> + 	 	 / / Get the TypeAttributes <nl> + 	 	 ITypeInfoUtil typeInfoUtil = typeLibUtil . getTypeInfoUtil ( index ) ; <nl> + 	 	 TYPEATTR typeAttr = typeInfoUtil . getTypeAttr ( ) ; <nl> + 	 	 <nl> + 	 	 System . out . println ( typeAttr . toString ( ) ) ; <nl> + 	 	 <nl> + 	 	 / / Lets get all the methods for this Type Info <nl> + 	 	 for ( int i = 0 ; i < typeAttr . cFuncs . intValue ( ) ; i + + ) { <nl> + 	 	 	 / / Get the function description <nl> + 	 	 	 FUNCDESC funcDesc = typeInfoUtil . getFuncDesc ( i ) ; <nl> + <nl> + 	 	 	 / / Get the member ID <nl> + 	 	 	 memberID = funcDesc . memid ; <nl> + <nl> + 	 	 	 / / Get the name of the method <nl> + 	 	 	 Object [ ] typeInfoDoc = typeInfoUtil . getDocumentation ( memberID ) ; <nl> + 	 	 } <nl> + <nl> + 	 	 for ( int i = 0 ; i < typeAttr . cVars . intValue ( ) ; i + + ) { <nl> + 	 	 	 / / Get the property description <nl> + 	 	 	 VARDESC varDesc = typeInfoUtil . getVarDesc ( i ) ; <nl> + <nl> + 	 	 	 / / Get the member ID <nl> + 	 	 	 memberID = varDesc . memid ; <nl> + <nl> + 	 	 	 / / Get the name of the property <nl> + 	 	 	 Object [ ] typeInfoDoc2 = typeInfoUtil . getDocumentation ( memberID ) ; <nl> + 	 	 } <nl> + <nl> + 	 } <nl> + <nl> + 	 private void createCOMInterface ( int index ) { <nl> + 	 	 ITypeInfoUtil typeInfoUtil = typeLibUtil . getTypeInfoUtil ( index ) ; <nl> + 	 	 Object [ ] typeLibDoc = this . typeLibUtil . getDocumentation ( index ) ; <nl> + <nl> + 	 	 String enumName = ( String ) typeLibDoc [ 0 ] ; <nl> + 	 	 System . out . println ( enumName ) ; <nl> 	 	 / / <nl> 	 	 / / <nl> 	 	 / / this . logInfo ( " Type of kind ' enum ' found : " + enumName ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> index 8a7c364 . . e09a852 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> @ @ - 347 , 6 + 347 , 18 @ @ public interface OaIdl { <nl> 	 public static class TYPEKIND extends Structure { <nl> 	 	 public static class ByReference extends TYPEKIND implements <nl> 	 	 	 	 Structure . ByReference { <nl> + 	 	 	 public ByReference ( ) { <nl> + 	 	 	 	 / / TODO Auto - generated constructor stub <nl> + 	 	 	 } <nl> + <nl> + 	 	 	 public ByReference ( int value ) { <nl> + 	 	 	 	 super ( value ) ; <nl> + 	 	 	 } <nl> + <nl> + 	 	 	 public ByReference ( TYPEKIND typekind ) { <nl> + 	 	 	 	 super ( typekind . getPointer ( ) ) ; <nl> + 	 	 	 	 value = typekind . value ; <nl> + 	 	 	 } <nl> 	 	 } <nl> <nl> 	 	 public int value ; <nl> @ @ - 1105 , 6 + 1117 , 13 @ @ public interface OaIdl { <nl> 	 public static class TYPEDESC extends Structure { <nl> 	 	 public static class ByReference extends TYPEDESC implements <nl> 	 	 	 	 Structure . ByReference { <nl> + <nl> + 	 	 	 public ByReference ( ) { <nl> + 	 	 	 } <nl> + <nl> + 	 	 	 public ByReference ( TYPEDESC typedesc ) { <nl> + 	 	 	 	 super ( typedesc . getPointer ( ) ) ; <nl> + 	 	 	 } <nl> 	 	 } ; <nl> <nl> 	 	 public _ TYPEDESC _ typeDesc ; <nl> @ @ - 1117 , 43 + 1136 , 26 @ @ public interface OaIdl { <nl> <nl> 	 	 	 public ARRAYDESC . ByReference lpadesc ; <nl> <nl> - 	 	 	 public HREFTYPEbyReference hreftype ; <nl> + 	 	 	 public HREFTYPE hreftype ; <nl> <nl> 	 	 	 public _ TYPEDESC ( ) { <nl> 	 	 	 	 super ( ) ; <nl> - 	 	 	 	 setType ( " lptdesc " ) ; <nl> - 	 	 	 	 this . read ( ) ; <nl> + 	 	 	 	 setType ( " hreftype " ) ; <nl> 	 	 	 } <nl> <nl> 	 	 	 public _ TYPEDESC ( Pointer pointer ) { <nl> 	 	 	 	 super ( pointer ) ; <nl> - 	 	 	 	 this . read ( ) ; <nl> - 	 	 	 } <nl> - <nl> - 	 	 	 public _ TYPEDESC ( ARRAYDESC . ByReference lpadesc ) { <nl> - 	 	 	 	 super ( ) ; <nl> - 	 	 	 	 this . lpadesc = lpadesc ; <nl> - 	 	 	 	 setType ( " lpadesc " ) ; <nl> - 	 	 	 } <nl> - <nl> - 	 	 	 public _ TYPEDESC ( HREFTYPEbyReference hreftype ) { <nl> - 	 	 	 	 super ( ) ; <nl> - 	 	 	 	 this . hreftype = hreftype ; <nl> 	 	 	 	 setType ( " hreftype " ) ; <nl> 	 	 	 } <nl> - <nl> - 	 	 	 public _ TYPEDESC ( TYPEDESC . ByReference lptdesc ) { <nl> - 	 	 	 	 super ( ) ; <nl> - 	 	 	 	 this . lptdesc = lptdesc ; <nl> - 	 	 	 	 setType ( " lptdesc " ) ; <nl> - 	 	 	 } <nl> 	 	 } ; <nl> <nl> 	 	 public TYPEDESC ( ) { <nl> + 	 	 	 this . write ( ) ; <nl> 	 	 } <nl> <nl> 	 	 public TYPEDESC ( Pointer pointer ) { <nl> 	 	 	 super ( pointer ) ; <nl> + 	 	 	 this . write ( ) ; <nl> 	 	 } <nl> <nl> 	 	 public TYPEDESC ( _ TYPEDESC _ typeDesc , VARTYPE vt ) { <nl> @ @ - 1171 , 18 + 1173 , 25 @ @ public interface OaIdl { <nl> 	 public static class IDLDESC extends Structure { <nl> 	 	 public static class ByReference extends IDLDESC implements <nl> 	 	 	 	 Structure . ByReference { <nl> + <nl> + 	 	 	 public ByReference ( ) { <nl> + 	 	 	 } <nl> + <nl> + 	 	 	 public ByReference ( IDLDESC idldesc ) { <nl> + 	 	 	 	 super ( idldesc . dwReserved , idldesc . wIDLFlags ) ; <nl> + 	 	 	 } <nl> 	 	 } ; <nl> <nl> 	 	 / / / C type : ULONG _ PTR <nl> 	 	 public ULONG _ PTR dwReserved ; <nl> - 	 	 public short wIDLFlags ; <nl> + 	 	 public USHORT wIDLFlags ; <nl> <nl> 	 	 public IDLDESC ( ) { <nl> 	 	 	 super ( ) ; <nl> 	 	 } <nl> <nl> 	 	 / / / @ param dwReserved C type : ULONG _ PTR <nl> - 	 	 public IDLDESC ( ULONG _ PTR dwReserved , short wIDLFlags ) { <nl> + 	 	 public IDLDESC ( ULONG _ PTR dwReserved , USHORT wIDLFlags ) { <nl> 	 	 	 super ( ) ; <nl> 	 	 	 this . dwReserved = dwReserved ; <nl> 	 	 	 this . wIDLFlags = wIDLFlags ; <nl> @ @ - 1281 , 16 + 1290 , 16 @ @ public interface OaIdl { <nl> 	 public static class TYPEATTR extends Structure { <nl> 	 	 public static class ByReference extends TYPEATTR implements <nl> 	 	 	 	 Structure . ByReference { <nl> - 	 	 } ; <nl> + 	 	 } <nl> <nl> - 	 	 public GUID guid ; <nl> + 	 	 public GUID . ByReference guid ; <nl> 	 	 public LCID lcid ; <nl> 	 	 public DWORD dwReserved ; <nl> 	 	 public MEMBERID memidConstructor ; <nl> 	 	 public MEMBERID memidDestructor ; <nl> 	 	 public LPOLESTR lpstrSchema ; <nl> 	 	 public ULONG cbSizeInstance ; <nl> - 	 	 public TYPEKIND typekind ; <nl> + 	 	 public TYPEKIND . ByReference typekind ; <nl> 	 	 public WORD cFuncs ; <nl> 	 	 public WORD cVars ; <nl> 	 	 public WORD cImplTypes ; <nl> @ @ - 1299 , 15 + 1308 , 14 @ @ public interface OaIdl { <nl> 	 	 public WORD wTypeFlags ; <nl> 	 	 public WORD wMajorVerNum ; <nl> 	 	 public WORD wMinorVerNum ; <nl> - 	 	 public TYPEDESC tdescAlias ; <nl> - 	 	 public IDLDESC idldescType ; <nl> + 	 	 public TYPEDESC . ByReference tdescAlias ; <nl> + 	 	 public IDLDESC . ByReference idldescType ; <nl> <nl> 	 	 public TYPEATTR ( ) { <nl> 	 	 } <nl> <nl> 	 	 public TYPEATTR ( Pointer pointer ) { <nl> 	 	 	 super ( pointer ) ; <nl> - 	 	 	 this . read ( ) ; <nl> 	 	 } <nl> <nl> 	 	 @ Override <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> index 02cb5f0 . . d4be134 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> @ @ - 15 , 10 + 15 , 10 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> + import com . sun . jna . Memory ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . PointerType ; <nl> import com . sun . jna . Structure ; <nl> - import com . sun . jna . platform . win32 . OaIdl . TYPEKIND ; <nl> import com . sun . jna . platform . win32 . WinDef . USHORT ; <nl> import com . sun . jna . ptr . ByReference ; <nl> <nl> @ @ - 98 , 13 + 98 , 12 @ @ public interface WTypes { <nl> 	 } <nl> <nl> 	 public class BSTRByReference extends ByReference { <nl> - <nl> 	 	 public BSTRByReference ( ) { <nl> 	 	 	 super ( Pointer . SIZE ) ; <nl> 	 	 } <nl> <nl> 	 	 public BSTRByReference ( BSTR value ) { <nl> - 	 	 	 super ( Pointer . SIZE ) ; <nl> + 	 	 	 this ( ) ; <nl> 	 	 	 setValue ( value ) ; <nl> 	 	 } <nl> <nl> @ @ - 115 , 21 + 114 , 25 @ @ public interface WTypes { <nl> 	 	 public BSTR getValue ( ) { <nl> 	 	 	 return new BSTR ( getPointer ( ) . getPointer ( 0 ) ) ; <nl> 	 	 } <nl> - 	 	 <nl> + <nl> 	 	 public String getString ( ) { <nl> 	 	 	 return this . getValue ( ) . getValue ( ) ; <nl> 	 	 } <nl> 	 } <nl> <nl> - 	 public class LPOLESTR extends ByReference { <nl> - <nl> + 	 public class LPOLESTR extends PointerType { <nl> 	 	 public LPOLESTR ( ) { <nl> - 	 	 	 super ( Pointer . SIZE ) ; <nl> + 	 	 	 super ( ) ; <nl> + 	 	 	 setPointer ( new Memory ( Pointer . SIZE ) ) ; <nl> + 	 	 } <nl> + <nl> + 	 	 public LPOLESTR ( Pointer pointer ) { <nl> + 	 	 	 super ( pointer ) ; <nl> 	 	 } <nl> <nl> 	 	 public LPOLESTR ( String value ) { <nl> 	 	 	 this ( ) ; <nl> - 	 	 	 setValue ( value ) ; <nl> + 	 	 	 this . setValue ( value ) ; <nl> 	 	 } <nl> <nl> 	 	 public void setValue ( String value ) { <nl> @ @ - 137 , 12 + 140 , 17 @ @ public interface WTypes { <nl> 	 	 } <nl> <nl> 	 	 public String getValue ( ) { <nl> - 	 	 	 return getPointer ( ) . getString ( 0 , true ) ; <nl> + 	 	 	 Pointer pointer = this . getPointer ( ) ; <nl> + 	 	 	 String str = null ; <nl> + 	 	 	 if ( pointer ! = null ) <nl> + 	 	 	 	 str = pointer . getString ( 0 , true ) ; <nl> + <nl> + 	 	 	 return str ; <nl> 	 	 } <nl> - 	 	 <nl> + <nl> 	 	 @ Override <nl> 	 	 public String toString ( ) { <nl> - 	 	 	 return getValue ( ) ; <nl> + 	 	 	 return this . getValue ( ) ; <nl> 	 	 } <nl> 	 } <nl> <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java <nl> new file mode 100644 <nl> index 0000000 . . fa86e42 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java <nl> @ @ - 0 , 0 + 1 , 77 @ @ <nl> + / * Copyright ( c ) 2012 Tobias Wolf , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 . COM ; <nl> + <nl> + import junit . framework . TestCase ; <nl> + <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . platform . win32 . Guid . GUID ; <nl> + import com . sun . jna . platform . win32 . Kernel32 ; <nl> + import com . sun . jna . platform . win32 . OaIdl . IDLDESC ; <nl> + import com . sun . jna . platform . win32 . OaIdl . MEMBERID ; <nl> + import com . sun . jna . platform . win32 . OaIdl . TYPEATTR ; <nl> + import com . sun . jna . platform . win32 . OaIdl . TYPEDESC ; <nl> + import com . sun . jna . platform . win32 . OaIdl . TYPEKIND ; <nl> + import com . sun . jna . platform . win32 . WTypes . LPOLESTR ; <nl> + import com . sun . jna . platform . win32 . WinDef . DWORD ; <nl> + import com . sun . jna . platform . win32 . WinDef . ULONG ; <nl> + import com . sun . jna . platform . win32 . WinDef . WORD ; <nl> + <nl> + / * * <nl> + * @ author dblock [ at ] dblock [ dot ] org <nl> + * / <nl> + public class COMTest extends TestCase { <nl> + <nl> + 	 public static void main ( String [ ] args ) { <nl> + 	 	 junit . textui . TestRunner . run ( COMTest . class ) ; <nl> + 	 } <nl> + <nl> + 	 public COMTest ( ) { <nl> + 	 	 Native . setProtected ( true ) ; <nl> + 	 } <nl> + <nl> + 	 @ Override <nl> + 	 protected void setUp ( ) throws Exception { <nl> + 	 } <nl> + <nl> + 	 @ Override <nl> + 	 protected void tearDown ( ) throws Exception { <nl> + 	 } <nl> + <nl> + 	 public void testTYPEATTR ( ) { <nl> + 	 	 TYPEATTR typeAttr = new TYPEATTR ( ) ; <nl> + 	 	 typeAttr . guid = new GUID . ByReference ( <nl> + 	 	 	 	 GUID . fromString ( " { 50A7E9B0 - 70EF - 11D1 - B75A - 00A0C90564FE } " ) ) ; <nl> + 	 	 typeAttr . lcid = Kernel32 . INSTANCE . GetSystemDefaultLCID ( ) ; <nl> + 	 	 typeAttr . dwReserved = new DWORD ( 1 ) ; <nl> + 	 	 typeAttr . memidConstructor = new MEMBERID ( 1 ) ; <nl> + 	 	 typeAttr . memidDestructor = new MEMBERID ( 1 ) ; <nl> + 	 	 / / typeAttr . lpstrSchema = new LPOLESTR ( " Hello World ! " ) ; <nl> + 	 	 typeAttr . cbSizeInstance = new ULONG ( 1 ) ; <nl> + 	 	 typeAttr . typekind = new TYPEKIND . ByReference ( 10 ) ; <nl> + 	 	 typeAttr . cFuncs = new WORD ( 100 ) ; <nl> + 	 	 typeAttr . cVars = new WORD ( 100 ) ; <nl> + 	 	 typeAttr . cImplTypes = new WORD ( 12345 ) ; <nl> + 	 	 typeAttr . cbSizeVft = new WORD ( 1234 ) ; <nl> + 	 	 typeAttr . cbAlignment = new WORD ( 123 ) ; <nl> + 	 	 typeAttr . wMajorVerNum = new WORD ( 111 ) ; <nl> + 	 	 typeAttr . wMinorVerNum = new WORD ( 101 ) ; <nl> + 	 	 typeAttr . tdescAlias = new TYPEDESC . ByReference ( ) ; <nl> + 	 	 typeAttr . idldescType = new IDLDESC . ByReference ( ) ; <nl> + <nl> + 	 	 System . out . println ( typeAttr . toString ( ) ) ; <nl> + 	 } <nl> + <nl> + 	 public void testDirectMemory ( ) { <nl> + 	 } <nl> + } <nl> \ No newline at end of file
diff - - git a / CHANGES . md b / CHANGES . md <nl> index a26d22d . . 1fa0162 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 24 , 6 + 24 , 7 @ @ Bug Fixes <nl> * [ # 183 ] ( https : / / github . com / twall / jna / pull / 183 ) : Fix ` LMAccess . GROUP _ INFO _ 3 . getFieldOrder ( ) ` to return correct fields names - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> * [ # 187 ] ( https : / / github . com / twall / jna / pull / 187 ) : Fix ` getFieldOrder ( ) ` to return correct field names for some X11 structures - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> * Remove deprecated methods on Memory ( getSize , isValid ) and Structure ( getSize ) - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ # 206 ] ( https : / / github . com / twall / jna / pull / 206 ) : Fix ` moveToTrash ( ) ` on OSX to work with symlinks - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Release 3 . 5 . 1 <nl> = = = = = = = = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / mac / MacFileUtils . java b / contrib / platform / src / com / sun / jna / platform / mac / MacFileUtils . java <nl> index 18eda95 . . be04e56 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / mac / MacFileUtils . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / mac / MacFileUtils . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2007 Timothy Wall , All Rights Reserved <nl> + / * Copyright ( c ) 2007 - 2013 Timothy Wall , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 15 , 11 + 15 , 15 @ @ package com . sun . jna . platform . mac ; <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> import java . util . List ; <nl> <nl> import com . sun . jna . Library ; <nl> import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . Structure ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> + import com . sun . jna . ptr . ByteByReference ; <nl> import com . sun . jna . platform . FileUtils ; <nl> <nl> public class MacFileUtils extends FileUtils { <nl> @ @ - 27 , 14 + 31 , 30 @ @ public class MacFileUtils extends FileUtils { <nl> public boolean hasTrash ( ) { return true ; } <nl> <nl> public interface FileManager extends Library { <nl> + <nl> + public FileManager INSTANCE = ( FileManager ) Native . loadLibrary ( " CoreServices " , FileManager . class ) ; <nl> + <nl> int kFSFileOperationDefaultOptions = 0 ; <nl> int kFSFileOperationsOverwrite = 0x01 ; <nl> int kFSFileOperationsSkipSourcePermissionErrors = 0x02 ; <nl> int kFSFileOperationsDoNotMoveAcrossVolumes = 0x04 ; <nl> int kFSFileOperationsSkipPreflight = 0x08 ; <nl> <nl> - public FileManager INSTANCE = ( FileManager ) Native . loadLibrary ( " CoreServices " , FileManager . class ) ; <nl> - int FSPathMoveObjectToTrashSync ( String src , PointerByReference target , int options ) ; <nl> + int kFSPathDefaultOptions = 0x0 ; <nl> + int kFSPathMakeRefDoNotFollowLeafSymlink = 0x01 ; <nl> + <nl> + class FSRef extends Structure { <nl> + public byte [ ] hidden = new byte [ 80 ] ; <nl> + protected List getFieldOrder ( ) { return Arrays . asList ( new String [ ] { " hidden " } ) ; } <nl> + } <nl> + <nl> + / / Deprecated ; use trashItemAtURL instead : <nl> + / / https : / / developer . apple . com / library / mac / # documentation / Cocoa / Reference / Foundation / Classes / NSFileManager _ Class / Reference / Reference . html # / / apple _ ref / occ / instm / NSFileManager / trashItemAtURL : resultingItemURL : error : <nl> + int FSRefMakePath ( FSRef fsref , byte [ ] path , int maxPathSize ) ; <nl> + int FSPathMakeRef ( String source , int options , ByteByReference isDirectory ) ; <nl> + int FSPathMakeRefWithOptions ( String source , int options , FSRef fsref , ByteByReference isDirectory ) ; <nl> + int FSPathMoveObjectToTrashSync ( String source , PointerByReference target , int options ) ; <nl> + int FSMoveObjectToTrashSync ( FSRef source , FSRef target , int options ) ; <nl> } <nl> <nl> public void moveToTrash ( File [ ] files ) throws IOException { <nl> @ @ - 43 , 11 + 63 , 20 @ @ public class MacFileUtils extends FileUtils { <nl> if ( ! trash . exists ( ) ) { <nl> throw new IOException ( " The Trash was not found in its expected location ( " + trash + " ) " ) ; <nl> } <nl> - List < File > failed = new ArrayList < File > ( ) ; <nl> + List < String > failed = new ArrayList < String > ( ) ; <nl> for ( int i = 0 ; i < files . length ; i + + ) { <nl> File src = files [ i ] ; <nl> - if ( FileManager . INSTANCE . FSPathMoveObjectToTrashSync ( src . getAbsolutePath ( ) , null , 0 ) ! = 0 ) { <nl> - failed . add ( src ) ; <nl> + FileManager . FSRef fsref = new FileManager . FSRef ( ) ; <nl> + int status = FileManager . INSTANCE . FSPathMakeRefWithOptions ( src . getAbsolutePath ( ) , <nl> + FileManager . kFSPathMakeRefDoNotFollowLeafSymlink , <nl> + fsref , null ) ; <nl> + if ( status ! = 0 ) { <nl> + failed . add ( src + " ( FSRef : " + status + " ) " ) ; <nl> + continue ; <nl> + } <nl> + status = FileManager . INSTANCE . FSMoveObjectToTrashSync ( fsref , null , 0 ) ; <nl> + if ( status ! = 0 ) { <nl> + failed . add ( src + " ( " + status + " ) " ) ; <nl> } <nl> } <nl> if ( failed . size ( ) > 0 ) { <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java b / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java <nl> index 9ee1e45 . . 114200e 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2007 Timothy Wall , All Rights Reserved <nl> + / * Copyright ( c ) 2007 - 2013 Timothy Wall , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna . platform ; <nl> <nl> + import com . sun . jna . Platform ; <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> <nl> @ @ - 24 , 8 + 25 , 8 @ @ public class FileUtilsTest extends TestCase { <nl> if ( ! utils . hasTrash ( ) ) <nl> return ; <nl> <nl> - File home = new File ( System . getProperty ( " user . home " ) ) ; <nl> - File file = File . createTempFile ( getName ( ) , " . tmp " , home ) ; <nl> + File tmpdir = new File ( System . getProperty ( " java . io . tmpdir " ) ) ; <nl> + File file = File . createTempFile ( getName ( ) , " . tmp " , tmpdir ) ; <nl> try { <nl> assertTrue ( " File should exist " , file . exists ( ) ) ; <nl> try { <nl> @ @ - 43 , 6 + 44 , 39 @ @ public class FileUtilsTest extends TestCase { <nl> } <nl> } <nl> <nl> + public void testMoveSymlinkToTrash ( ) throws Exception { <nl> + if ( Platform . isWindows ( ) ) { <nl> + return ; <nl> + } <nl> + FileUtils utils = FileUtils . getInstance ( ) ; <nl> + if ( ! utils . hasTrash ( ) ) <nl> + return ; <nl> + <nl> + File tmpdir = new File ( System . getProperty ( " java . io . tmpdir " ) ) ; <nl> + File file = File . createTempFile ( getName ( ) , " . tmp " , tmpdir ) ; <nl> + File symlink = new File ( tmpdir , file . getName ( ) + " . link " ) ; <nl> + Runtime . getRuntime ( ) . exec ( new String [ ] { " ln " , " - s " , file . getAbsolutePath ( ) , symlink . getAbsolutePath ( ) } ) ; <nl> + try { <nl> + assertTrue ( " File should exist " , symlink . exists ( ) ) ; <nl> + try { <nl> + utils . moveToTrash ( new File [ ] { symlink } ) ; <nl> + } <nl> + catch ( IOException e ) { <nl> + fail ( e . toString ( ) ) ; <nl> + } <nl> + assertFalse ( " Symlink still exists after move to trash : " + symlink , symlink . exists ( ) ) ; <nl> + assertTrue ( " Original file should still exist after move to trash : " + file , file . exists ( ) ) ; <nl> + } <nl> + finally { <nl> + if ( symlink . exists ( ) ) { <nl> + symlink . delete ( ) ; <nl> + } <nl> + if ( file . exists ( ) ) { <nl> + file . delete ( ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> public static void main ( String [ ] args ) { <nl> junit . textui . TestRunner . run ( FileUtilsTest . class ) ; <nl> }
diff - - git a / www / PublishingToMavenCentral . md b / www / PublishingToMavenCentral . md <nl> index 99e0e00 . . d321e99 100644 <nl> - - - a / www / PublishingToMavenCentral . md <nl> + + + b / www / PublishingToMavenCentral . md <nl> @ @ - 53 , 7 + 53 , 7 @ @ see : https : / / maven . java . net / content / repositories / snapshots / net / java / dev / jna / for <nl> To publish a development SNAPSHOT do the following : <nl> <nl> git checkout - - . <nl> - ant deploy - DskipNative = true <nl> + ant deploy - Dskip - native = true <nl> <nl> Note : Unlike stable , unchanging releases , a SNAPSHOT may be re - published at any time ( and is typically deleted after a <nl> full release is performed ) .
diff - - git a / native / testlib . c b / native / testlib . c <nl> index d7e0d18 . . 60dc1d7 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 937 , 7 + 937 , 7 @ @ callInt32StdCallCallback ( int32 _ t ( _ _ stdcall * func ) ( int32 _ t arg , int32 _ t arg2 ) , <nl> # include < jni . h > <nl> # include < math . h > <nl> JNIEXPORT jdouble JNICALL <nl> - Java _ com _ sun _ jna _ DirectTest _ 00024JNI _ cos ( JNIEnv * env , jclass cls , jdouble x ) { <nl> + Java _ com _ sun _ jna _ PerformanceTest _ 00024JNI _ cos ( JNIEnv * env , jclass cls , jdouble x ) { <nl> return cos ( x ) ; <nl> } <nl>
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> index 671d2f7 . . 22a9a5e 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> @ @ - 38 , 7 + 38 , 9 @ @ import com . sun . jna . ptr . ByReference ; <nl> * The Interface OaIdl . <nl> * / <nl> public interface OaIdl { <nl> - <nl> + 	 <nl> + 	 public final static MEMBERID MEMBERID _ NIL = new MEMBERID ( ) ; <nl> + 	 <nl> 	 / * * <nl> 	 * The Class EXCEPINFO . <nl> 	 * / <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> index da37b7a . . 97b863f 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> @ @ - 99 , 7 + 99 , 7 @ @ public class ITypeInfoTest extends TestCase { <nl> 	 	 ITypeInfo typeInfo = getTypeInfo ( ) ; <nl> 	 	 TYPEATTR . ByReference pTypeAttr = new TYPEATTR . ByReference ( ) ; <nl> 	 	 HRESULT hr = typeInfo . GetTypeAttr ( pTypeAttr ) ; <nl> - <nl> + 	 	 	 	 <nl> 	 	 COMUtils . checkTypeLibRC ( hr ) ; <nl> 	 	 assertEquals ( 0 , hr . intValue ( ) ) ; <nl> 	 	 System . out . println ( " GetTypeAttr : " + pTypeAttr . toString ( true ) ) ; <nl> @ @ - 171 , 7 + 171 , 7 @ @ public class ITypeInfoTest extends TestCase { <nl> <nl> 	 public void testGetIDsOfNames ( ) { <nl> 	 	 ITypeInfo typeInfo = getTypeInfo ( ) ; <nl> - 	 	 WString [ ] rgszNames = { new WString ( " Visible " ) } ; <nl> + 	 	 WString [ ] rgszNames = { new WString ( " Help " ) } ; <nl> 	 	 UINT cNames = new UINT ( 1 ) ; <nl> 	 	 MEMBERID [ ] pMemId = new MEMBERID [ 1 ] ; <nl> 	 	 HRESULT hr = typeInfo . GetIDsOfNames ( rgszNames , cNames , pMemId ) ;
diff - - git a / test / com / sun / jna / StructureFieldOrderInspectorTest . java b / test / com / sun / jna / StructureFieldOrderInspectorTest . java <nl> index ee973c0 . . 1df38bc 100644 <nl> - - - a / test / com / sun / jna / StructureFieldOrderInspectorTest . java <nl> + + + b / test / com / sun / jna / StructureFieldOrderInspectorTest . java <nl> @ @ - 86 , 61 + 86 , 15 @ @ public class StructureFieldOrderInspectorTest extends TestCase { <nl> } <nl> } <nl> <nl> - private static final class MyStructStaticFieldOnlyStatic extends Structure { <nl> - public static long myStaticField = - 1 ; <nl> - <nl> - @ Override <nl> - protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( ) ; <nl> - } <nl> - } <nl> - / * * <nl> - * / / @ todo Seems this may be a bug . Error below occurs if Structure has no instance field ( and only a static field ) , like : MyStructStaticFieldOnlyStatic . <nl> - java . lang . RuntimeException : Could not instantiate Structure sub type : com . sun . jna . StructureFieldOrderInspectorTest $ MyStructStaticFieldOnlyStatic <nl> - at com . sun . jna . StructureFieldOrderInspector . checkMethodGetFieldOrder ( StructureFieldOrderInspector . java : 146 ) <nl> - at com . sun . jna . StructureFieldOrderInspectorTest . testCheckMethodGetFieldOrderStaticFieldOnlyStatic ( StructureFieldOrderInspectorTest . java : 111 ) <nl> - at sun . reflect . NativeMethodAccessorImpl . invoke0 ( Native Method ) <nl> - at sun . reflect . NativeMethodAccessorImpl . invoke ( NativeMethodAccessorImpl . java : 57 ) <nl> - at sun . reflect . DelegatingMethodAccessorImpl . invoke ( DelegatingMethodAccessorImpl . java : 43 ) <nl> - at com . intellij . junit3 . JUnit3IdeaTestRunner . doRun ( JUnit3IdeaTestRunner . java : 139 ) <nl> - at com . intellij . junit3 . JUnit3IdeaTestRunner . startRunnerWithArgs ( JUnit3IdeaTestRunner . java : 52 ) <nl> - at com . intellij . rt . execution . junit . JUnitStarter . prepareStreamsAndStart ( JUnitStarter . java : 195 ) <nl> - at com . intellij . rt . execution . junit . JUnitStarter . main ( JUnitStarter . java : 63 ) <nl> - at sun . reflect . NativeMethodAccessorImpl . invoke0 ( Native Method ) <nl> - at sun . reflect . NativeMethodAccessorImpl . invoke ( NativeMethodAccessorImpl . java : 57 ) <nl> - at com . intellij . rt . execution . application . AppMain . main ( AppMain . java : 120 ) <nl> - Caused by : java . lang . reflect . InvocationTargetException <nl> - at sun . reflect . NativeConstructorAccessorImpl . newInstance0 ( Native Method ) <nl> - at sun . reflect . NativeConstructorAccessorImpl . newInstance ( NativeConstructorAccessorImpl . java : 57 ) <nl> - at sun . reflect . DelegatingConstructorAccessorImpl . newInstance ( DelegatingConstructorAccessorImpl . java : 45 ) <nl> - at java . lang . reflect . Constructor . newInstance ( Constructor . java : 532 ) <nl> - at com . sun . jna . StructureFieldOrderInspector . checkMethodGetFieldOrder ( StructureFieldOrderInspector . java : 131 ) <nl> - . . . 22 more <nl> - Caused by : java . lang . IllegalArgumentException : Structure class com . sun . jna . StructureFieldOrderInspectorTest $ MyStructStaticFieldOnlyStatic has unknown size ( ensure all fields are public ) <nl> - at com . sun . jna . Structure . deriveLayout ( Structure . java : 1108 ) <nl> - at com . sun . jna . Structure . calculateSize ( Structure . java : 908 ) <nl> - at com . sun . jna . Structure . calculateSize ( Structure . java : 896 ) <nl> - at com . sun . jna . Structure . allocateMemory ( Structure . java : 357 ) <nl> - at com . sun . jna . Structure . < init > ( Structure . java : 191 ) <nl> - at com . sun . jna . Structure . < init > ( Structure . java : 180 ) <nl> - at com . sun . jna . Structure . < init > ( Structure . java : 167 ) <nl> - at com . sun . jna . Structure . < init > ( Structure . java : 159 ) <nl> - at com . sun . jna . StructureFieldOrderInspectorTest $ MyStructStaticFieldOnlyStatic . < init > ( StructureFieldOrderInspectorTest . java : 89 ) <nl> - . . . 27 more <nl> - * / <nl> - / * <nl> - public void testCheckMethodGetFieldOrderStaticFieldOnlyStatic ( ) throws Exception { <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( MyStructStaticFieldOnlyStatic . class , null ) ; <nl> - } <nl> - / / * / <nl> <nl> private static final class MyStructStaticField extends Structure { <nl> - public long instanceField ; / / @ todo Why error if at least one instance field does not exist ? see above : MyStructStaticFieldOnlyStatic <nl> + @ SuppressWarnings ( " UnusedDeclaration " ) <nl> + public long instanceField ; <nl> + @ SuppressWarnings ( " UnusedDeclaration " ) <nl> public static long myStaticField = - 1 ; <nl> <nl> @ Override <nl> protected List getFieldOrder ( ) { <nl> - / / return Arrays . asList ( ) ; <nl> return Arrays . asList ( " instanceField " ) ; <nl> } <nl> } <nl> @ @ - 150 , 11 + 104 , 11 @ @ public class StructureFieldOrderInspectorTest extends TestCase { <nl> <nl> <nl> private static class MyStructSuper extends Structure { <nl> + @ SuppressWarnings ( " UnusedDeclaration " ) <nl> public long instanceField ; <nl> <nl> @ Override <nl> protected List getFieldOrder ( ) { <nl> - / / return Arrays . asList ( ) ; <nl> return Arrays . asList ( " instanceField " ) ; <nl> } <nl> }
diff - - git a / ChangeLog b / ChangeLog <nl> index 6c8ea2b . . e0b057c 100644 <nl> - - - a / ChangeLog <nl> + + + b / ChangeLog <nl> @ @ - 1 , 5 + 1 , 18 @ @ <nl> 2013 - 03 - 17 Anthony Green < green @ moxielogic . com > <nl> <nl> + 	 * README : Update for 3 . 0 . 13 . <nl> + 	 * configure . ac : Ditto . <nl> + 	 * configure : Rebuilt . <nl> + 	 * doc / * : Update version . <nl> + <nl> + 2013 - 03 - 17 Dave Korn < dave . korn . cygwin @ gmail . com > <nl> + <nl> + 	 * src / closures . c ( is _ emutramp _ enabled <nl> + 	 [ ! FFI _ MMAP _ EXEC _ EMUTRAMP _ PAX ] ) : Move default definition outside <nl> + 	 enclosing # if scope . <nl> + <nl> + 2013 - 03 - 17 Anthony Green < green @ moxielogic . com > <nl> + <nl> 	 * configure . ac : Only modify toolexecdir in certain cases . <nl> 	 * configure : Rebuilt . <nl> <nl> diff - - git a / README b / README <nl> index e89d419 . . a9c053f 100644 <nl> - - - a / README <nl> + + + b / README <nl> @ @ - 169 , 6 + 169 , 8 @ @ See the ChangeLog files for details . <nl> 	 Fix stack alignment bug on 32 - bit x86 . <nl> 	 Build fix for m68000 targets . <nl> 	 Build fix for soft - float Power targets . <nl> + 	 Fix the install dir location for some platforms when building <nl> + 	 with GCC ( OS X , Solaris ) . <nl> <nl> 3 . 0 . 12 Feb - 11 - 13 <nl> Add Moxie support . <nl> diff - - git a / doc / libffi . info b / doc / libffi . info <nl> index 7887647 . . 6d5acf8 100644 <nl> - - - a / doc / libffi . info <nl> + + + b / doc / libffi . info <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> - This is . . / doc / libffi . info , produced by makeinfo version 4 . 13 from <nl> - . . / doc / libffi . texi . <nl> + This is . . / libffi / doc / libffi . info , produced by makeinfo version 4 . 13 <nl> + from . . / libffi / doc / libffi . texi . <nl> <nl> This manual is for Libffi , a portable foreign - function interface <nl> library . <nl> @ @ - 598 , 19 + 598 , 19 @ @ Index <nl> <nl>  <nl> Tag Table : <nl> - Node : Top  698 <nl> - Node : Introduction  1446 <nl> - Node : Using libffi  3082 <nl> - Node : The Basics  3568 <nl> - Node : Simple Example  7210 <nl> - Node : Types  8237 <nl> - Node : Primitive Types  8520 <nl> - Node : Structures  10340 <nl> - Node : Type Example  11210 <nl> - Node : Multiple ABIs  12433 <nl> - Node : The Closure API  12804 <nl> - Node : Closure Example  15748 <nl> - Node : Missing Features  17307 <nl> - Node : Index  17760 <nl> + Node : Top  712 <nl> + Node : Introduction  1460 <nl> + Node : Using libffi  3096 <nl> + Node : The Basics  3582 <nl> + Node : Simple Example  7224 <nl> + Node : Types  8251 <nl> + Node : Primitive Types  8534 <nl> + Node : Structures  10354 <nl> + Node : Type Example  11224 <nl> + Node : Multiple ABIs  12447 <nl> + Node : The Closure API  12818 <nl> + Node : Closure Example  15762 <nl> + Node : Missing Features  17321 <nl> + Node : Index  17774 <nl>  <nl> End Tag Table <nl> diff - - git a / doc / stamp - vti b / doc / stamp - vti <nl> index 369e368 . . 27f9879 100644 <nl> - - - a / doc / stamp - vti <nl> + + + b / doc / stamp - vti <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> @ set UPDATED 16 March 2013 <nl> @ set UPDATED - MONTH March 2013 <nl> - @ set EDITION 3 . 0 . 13 - rc1 <nl> - @ set VERSION 3 . 0 . 13 - rc1 <nl> + @ set EDITION 3 . 0 . 13 - rc2 <nl> + @ set VERSION 3 . 0 . 13 - rc2 <nl> diff - - git a / doc / version . texi b / doc / version . texi <nl> index 369e368 . . 27f9879 100644 <nl> - - - a / doc / version . texi <nl> + + + b / doc / version . texi <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> @ set UPDATED 16 March 2013 <nl> @ set UPDATED - MONTH March 2013 <nl> - @ set EDITION 3 . 0 . 13 - rc1 <nl> - @ set VERSION 3 . 0 . 13 - rc1 <nl> + @ set EDITION 3 . 0 . 13 - rc2 <nl> + @ set VERSION 3 . 0 . 13 - rc2 <nl> diff - - git a / src / closures . c b / src / closures . c <nl> index fecbc4a . . 6298d6f 100644 <nl> - - - a / src / closures . c <nl> + + + b / src / closures . c <nl> @ @ - 189 , 8 + 189 , 6 @ @ emutramp _ enabled _ check ( void ) <nl> <nl> # define is _ emutramp _ enabled ( ) ( emutramp _ enabled > = 0 ? emutramp _ enabled \ <nl> : ( emutramp _ enabled = emutramp _ enabled _ check ( ) ) ) <nl> - # else <nl> - # define is _ emutramp _ enabled ( ) 0 <nl> # endif / * FFI _ MMAP _ EXEC _ EMUTRAMP _ PAX * / <nl> <nl> # elif defined ( _ _ CYGWIN _ _ ) | | defined ( _ _ INTERIX ) <nl> @ @ - 202 , 6 + 200 , 10 @ @ emutramp _ enabled _ check ( void ) <nl> <nl> # endif / * ! defined ( X86 _ WIN32 ) & & ! defined ( X86 _ WIN64 ) * / <nl> <nl> + # ifndef FFI _ MMAP _ EXEC _ EMUTRAMP _ PAX <nl> + # define is _ emutramp _ enabled ( ) 0 <nl> + # endif / * FFI _ MMAP _ EXEC _ EMUTRAMP _ PAX * / <nl> + <nl> / * Declare all functions defined in dlmalloc . c as static . * / <nl> static void * dlmalloc ( size _ t ) ; <nl> static void dlfree ( void * ) ;
diff - - git a / src / com / sun / jna / CallbackReference . java b / src / com / sun / jna / CallbackReference . java <nl> index 819f536 . . a8bb107 100644 <nl> - - - a / src / com / sun / jna / CallbackReference . java <nl> + + + b / src / com / sun / jna / CallbackReference . java <nl> @ @ - 521 , 7 + 521 , 7 @ @ class CallbackReference extends WeakReference { <nl> } <nl> else { <nl> Structure s = Structure . newInstance ( dstType , ( Pointer ) value ) ; <nl> - s . conditionalRead ( ) ; <nl> + s . conditionalAutoRead ( ) ; <nl> value = s ; <nl> } <nl> } <nl> diff - - git a / src / com / sun / jna / Function . java b / src / com / sun / jna / Function . java <nl> index 7cf8c1b . . 4924581 100644 <nl> - - - a / src / com / sun / jna / Function . java <nl> + + + b / src / com / sun / jna / Function . java <nl> @ @ - 376 , 7 + 376 , 7 @ @ public class Function extends Pointer { <nl> result = invokePointer ( callFlags , args ) ; <nl> if ( result ! = null ) { <nl> Structure s = Structure . newInstance ( returnType , ( Pointer ) result ) ; <nl> - s . conditionalRead ( ) ; <nl> + s . conditionalAutoRead ( ) ; <nl> result = s ; <nl> } <nl> } <nl> diff - - git a / src / com / sun / jna / Pointer . java b / src / com / sun / jna / Pointer . java <nl> index 937db13 . . 4c9c4a0 100644 <nl> - - - a / src / com / sun / jna / Pointer . java <nl> + + + b / src / com / sun / jna / Pointer . java <nl> @ @ - 518 , 7 + 518 , 7 @ @ public class Pointer { <nl> Structure first = sarray [ 0 ] ; <nl> if ( first = = null ) { <nl> first = Structure . newInstance ( cls , share ( offset ) ) ; <nl> - first . conditionalRead ( ) ; <nl> + first . conditionalAutoRead ( ) ; <nl> sarray [ 0 ] = first ; <nl> } <nl> else { <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index f2e8f7e . . 864ae5a 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 482 , 10 + 482 , 10 @ @ public abstract class Structure { <nl> return ( Map ) reads . get ( ) ; <nl> } <nl> <nl> - / * * Reads only if uninitialized . * / <nl> - void conditionalRead ( ) { <nl> + / * * Performs auto - read only if uninitialized . * / <nl> + void conditionalAutoRead ( ) { <nl> if ( ! readCalled ) { <nl> - read ( ) ; <nl> + autoRead ( ) ; <nl> } <nl> } <nl> <nl> @ @ - 1384 , 7 + 1384 , 7 @ @ public abstract class Structure { <nl> int size = size ( ) ; <nl> for ( int i = 1 ; i < array . length ; i + + ) { <nl> array [ i ] = newInstance ( getClass ( ) , memory . share ( i * size , size ) ) ; <nl> - array [ i ] . conditionalRead ( ) ; <nl> + array [ i ] . conditionalAutoRead ( ) ; <nl> } <nl> <nl> if ( ! ( this instanceof ByValue ) ) { <nl> @ @ - 1485 , 6 + 1485 , 18 @ @ public abstract class Structure { <nl> setAutoRead ( auto ) ; <nl> setAutoWrite ( auto ) ; <nl> < / code > < / pre > <nl> + For extremely large or complex structures where you only need to <nl> + access a small number of fields , you may see a significant performance <nl> + benefit by avoiding automatic structure reads and writes . If <nl> + auto - read and - write are disabled , it is up to you to ensure that the <nl> + Java fields of interest are synched before and after native function <nl> + calls via { @ link # readField ( String ) } and { @ link <nl> + # writeField ( String , Object ) } . <nl> + < p / > <nl> + This is typically most effective when a native call populates a large <nl> + structure and you only need a few fields out of it . After the native <nl> + call you can call { @ link # readField ( String ) } on only the fields of <nl> + interest . <nl> * / <nl> public void setAutoSynch ( boolean auto ) { <nl> setAutoRead ( auto ) ;
diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index 88cf8e5 . . 44e5c72 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2007 - 2012 Timothy Wall , All Rights Reserved <nl> + / * Copyright ( c ) 2007 - 2013 Timothy Wall , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 51 , 7 + 51 , 10 @ @ import java . util . zip . Adler32 ; <nl> * constructor . <nl> * < p / > <nl> * Structure fields corresponding to native struct fields < em > must < / em > be <nl> - * public . You < em > must < / em > define { @ link # getFieldOrder } to return a List of <nl> + * public . If your structure is to have no fields of its own , it must be <nl> + * declared abstract . <nl> + * < p / > <nl> + * You < em > must < / em > define { @ link # getFieldOrder } to return a List of <nl> * field names ( Strings ) indicating the proper order of the fields . When <nl> * dealing with multiple levels of subclasses of Structure , you must add to <nl> * the list provided by the superclass { @ link # getFieldOrder } <nl> @ @ - 1112 , 7 + 1115 , 7 @ @ public abstract class Structure { <nl> } <nl> <nl> throw new IllegalArgumentException ( " Structure " + getClass ( ) <nl> - + " has unknown size ( ensure " <nl> + + " has unknown or zero size ( ensure " <nl> + " all fields are public ) " ) ; <nl> } <nl> <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index 658be22 . . 65d4755 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 296 , 6 + 296 , 35 @ @ public class StructureTest extends TestCase { <nl> testAlignStruct ( 5 ) ; <nl> } <nl> <nl> + public void testStructureWithNoFields ( ) { <nl> + class TestStructure extends Structure { <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( new String [ ] { } ) ; <nl> + } <nl> + } <nl> + try { <nl> + new TestStructure ( ) ; <nl> + fail ( " Structure should not be instantiable if it has no public member fields " ) ; <nl> + } <nl> + catch ( IllegalArgumentException e ) { <nl> + } <nl> + } <nl> + <nl> + public void testStructureWithOnlyNonPublicMemberFields ( ) { <nl> + class TestStructure extends Structure { <nl> + int field ; <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( new String [ ] { " field " } ) ; <nl> + } <nl> + } <nl> + try { <nl> + new TestStructure ( ) ; <nl> + fail ( " Structure should not be instantiable if it has no public member fields " ) ; <nl> + } <nl> + catch ( Error e ) { <nl> + } <nl> + } <nl> + <nl> / / must be publicly accessible in order to create array elements <nl> public static class PublicTestStructure extends Structure { <nl> public static class ByReference extends PublicTestStructure implements Structure . ByReference { }
diff - - git a / ChangeLog b / ChangeLog <nl> index d5bf71f . . 9f7866b 100644 <nl> - - - a / ChangeLog <nl> + + + b / ChangeLog <nl> @ @ - 1 , 6 + 1 , 11 @ @ <nl> + 2013 - 03 - 16 Gilles Talis < gilles . talis @ gmail . com > <nl> + <nl> + 	 * src / powerpc / ffi . c ( ffi _ prep _ args _ SYSV ) : Don ' t use <nl> + 	 fparg _ count , etc on _ _ NO _ FPRS _ _ targets . <nl> + <nl> 2013 - 03 - 16 Alan Hourihane < alanh @ fairlite . co . uk > <nl> <nl> - 	 * src / m68k / sysv . S ( epilogue ) : Don ' t user extb instruction on <nl> + 	 * src / m68k / sysv . S ( epilogue ) : Don ' t use extb instruction on <nl> 	 m680000 machines . <nl> <nl> 2013 - 03 - 16 Alex Gaynor < alex . gaynor @ gmail . com > <nl> diff - - git a / README b / README <nl> index fd5e6b4 . . 276c2f6 100644 <nl> - - - a / README <nl> + + + b / README <nl> @ @ - 164 , 11 + 164 , 11 @ @ History <nl> See the ChangeLog files for details . <nl> <nl> 3 . 0 . 13 Mar - 16 - 13 <nl> - <nl> 	 Add Meta support . <nl> 	 Add missing Moxie bits . <nl> 	 Fix stack alignment bug on 32 - bit x86 . <nl> 	 Build fix for m68000 targets . <nl> + 	 Build fix for soft - float Power targets . <nl> <nl> 3 . 0 . 12 Feb - 11 - 13 <nl> Add Moxie support . <nl> diff - - git a / src / powerpc / ffi . c b / src / powerpc / ffi . c <nl> index f3a96a1 . . 54f2731 100644 <nl> - - - a / src / powerpc / ffi . c <nl> + + + b / src / powerpc / ffi . c <nl> @ @ - 376 , 9 + 376 , 9 @ @ ffi _ prep _ args _ SYSV ( extended _ cif * ecif , unsigned * const stack ) <nl> with the number found in ffi _ prep _ cif _ machdep ( ) . However , intarg _ count <nl> is incremeneted whenever we place an FP arg on the stack , so account for <nl> that before our assert test . * / <nl> + # ifndef _ _ NO _ FPRS _ _ <nl> if ( fparg _ count > NUM _ FPR _ ARG _ REGISTERS ) <nl> intarg _ count - = fparg _ count - NUM _ FPR _ ARG _ REGISTERS ; <nl> - # ifndef _ _ NO _ FPRS _ _ <nl> FFI _ ASSERT ( fpr _ base . u <nl> 	 < = stacktop . u - ASM _ NEEDS _ REGISTERS - NUM _ GPR _ ARG _ REGISTERS ) ; <nl> # endif
diff - - git a / ChangeLog b / ChangeLog <nl> index 525e518 . . b4273de 100644 <nl> - - - a / ChangeLog <nl> + + + b / ChangeLog <nl> @ @ - 1 , 3 + 1 , 8 @ @ <nl> + 2013 - 03 - 16 Alan Hourihane < alanh @ fairlite . co . uk > <nl> + <nl> + 	 * src / m68k / sysv . S ( epilogue ) : Don ' t user extb instruction on <nl> + 	 m680000 machines . <nl> + <nl> 2013 - 03 - 16 Alex Gaynor < alex . gaynor @ gmail . com > <nl> <nl> 	 * src / x86 / ffi . c ( ffi _ prep _ cif _ machdep ) : Always align stack . <nl> diff - - git a / README b / README <nl> index 250c515 . . fd5e6b4 100644 <nl> - - - a / README <nl> + + + b / README <nl> @ @ - 168 , 6 + 168 , 7 @ @ See the ChangeLog files for details . <nl> 	 Add Meta support . <nl> 	 Add missing Moxie bits . <nl> 	 Fix stack alignment bug on 32 - bit x86 . <nl> + 	 Build fix for m68000 targets . <nl> <nl> 3 . 0 . 12 Feb - 11 - 13 <nl> Add Moxie support . <nl> diff - - git a / src / m68k / sysv . S b / src / m68k / sysv . S <nl> index 9504c6a . . ec2b14f 100644 <nl> - - - a / src / m68k / sysv . S <nl> + + + b / src / m68k / sysv . S <nl> @ @ - 176 , 7 + 176 , 13 @ @ retstruct2 : <nl> retsint8 : <nl> 	 btst 	 # 8 , % d2 <nl> 	 jbeq 	 retsint16 <nl> + 	 | NOTE : On the mc68000 , extb is not supported . 8 - > 16 , then 16 - > 32 . <nl> + # if ! defined ( _ _ mc68020 _ _ ) & & ! defined ( _ _ mc68030 _ _ ) & & ! defined ( _ _ mc68040 _ _ ) & & ! defined ( _ _ mc68060 _ _ ) & & ! defined ( _ _ mcoldfire _ _ ) <nl> + 	 ext . w 	 % d0 <nl> + 	 ext . l 	 % d0 <nl> + # else <nl> 	 extb . l 	 % d0 <nl> + # endif <nl> 	 move . l 	 % d0 , ( % a1 ) <nl> 	 jbra 	 epilogue <nl> <nl> @ @ - 279 , 7 + 285 , 13 @ @ CALLFUNC ( ffi _ closure _ SYSV ) : <nl> 	 jra 	 . Lcls _ epilogue <nl> . Lcls _ ret _ sint8 : <nl> 	 move . l 	 ( % a0 ) , % d0 <nl> + 	 | NOTE : On the mc68000 , extb is not supported . 8 - > 16 , then 16 - > 32 . <nl> + # if ! defined ( _ _ mc68020 _ _ ) & & ! defined ( _ _ mc68030 _ _ ) & & ! defined ( _ _ mc68040 _ _ ) & & ! defined ( _ _ mc68060 _ _ ) & & ! defined ( _ _ mcoldfire _ _ ) <nl> + 	 ext . w 	 % d0 <nl> + 	 ext . l 	 % d0 <nl> + # else <nl> 	 extb . l 	 % d0 <nl> + # endif <nl> 	 jra 	 . Lcls _ epilogue <nl> 1 : <nl> 	 | CIF _ FLAGS _ SINT16
diff - - git a / Makefile . am b / Makefile . am <nl> index cf5caa9 . . bf0156f 100644 <nl> - - - a / Makefile . am <nl> + + + b / Makefile . am <nl> @ @ - 7 , 45 + 7 , 45 @ @ ACLOCAL _ AMFLAGS = - I m4 <nl> SUBDIRS = include testsuite man <nl> <nl> EXTRA _ DIST = LICENSE ChangeLog . v1 ChangeLog . libgcj configure . host 	 \ <nl> - 	 src / aarch64 / ffi . c src / aarch64 / ffitarget . h 	 	 	 \ <nl> - 	 src / aarch64 / sysv . S build - ios . sh 	 	 	 	 \ <nl> - 	 src / alpha / ffi . c src / alpha / osf . S src / alpha / ffitarget . h 	 	 \ <nl> - 	 src / arm / ffi . c src / arm / sysv . S src / arm / ffitarget . h 	 	 \ <nl> - 	 src / avr32 / ffi . c src / avr32 / sysv . S src / avr32 / ffitarget . h 	 	 \ <nl> - 	 src / cris / ffi . c src / cris / sysv . S src / cris / ffitarget . h 	 	 \ <nl> - 	 src / ia64 / ffi . c src / ia64 / ffitarget . h src / ia64 / ia64 _ flags . h 	 \ <nl> - 	 src / ia64 / unix . S src / mips / ffi . c src / mips / n32 . S src / mips / o32 . S 	 \ <nl> - 	 src / mips / ffitarget . h src / m32r / ffi . c src / m32r / sysv . S 	 	 \ <nl> - 	 src / m32r / ffitarget . h src / m68k / ffi . c src / m68k / sysv . S 	 	 \ <nl> - 	 src / m68k / ffitarget . h src / microblaze / ffi . c 	 	 	 \ <nl> - 	 src / microblaze / sysv . S src / microblaze / ffitarget . h 	 	 \ <nl> - 	 src / powerpc / ffi . c src / powerpc / sysv . S 	 	 	 	 \ <nl> - 	 src / powerpc / linux64 . S src / powerpc / linux64 _ closure . S 	 	 \ <nl> - 	 src / powerpc / ppc _ closure . S src / powerpc / asm . h 	 	 	 \ <nl> - 	 src / powerpc / aix . S src / powerpc / darwin . S 	 	 	 	 \ <nl> - 	 src / powerpc / aix _ closure . S src / powerpc / darwin _ closure . S 	 	 \ <nl> - 	 src / powerpc / ffi _ darwin . c src / powerpc / ffitarget . h 	 	 \ <nl> - 	 src / s390 / ffi . c src / s390 / sysv . S src / s390 / ffitarget . h 	 	 \ <nl> - 	 src / sh / ffi . c src / sh / sysv . S src / sh / ffitarget . h src / sh64 / ffi . c 	 \ <nl> - 	 src / sh64 / sysv . S src / sh64 / ffitarget . h src / sparc / v8 . S 	 	 \ <nl> - 	 src / sparc / v9 . S src / sparc / ffitarget . h src / sparc / ffi . c 	 	 \ <nl> - 	 src / x86 / darwin64 . S src / x86 / ffi . c src / x86 / sysv . S 	 	 	 \ <nl> - 	 src / x86 / win32 . S src / x86 / darwin . S src / x86 / win64 . S 	 	 \ <nl> - 	 src / x86 / freebsd . S src / x86 / ffi64 . c src / x86 / unix64 . S 	 	 \ <nl> - 	 src / x86 / ffitarget . h src / pa / ffitarget . h src / pa / ffi . c 	 	 \ <nl> - 	 src / pa / linux . S src / pa / hpux32 . S src / frv / ffi . c src / bfin / ffi . c 	 \ <nl> - 	 src / bfin / ffitarget . h src / bfin / sysv . S src / frv / eabi . S 	 	 \ <nl> - 	 src / frv / ffitarget . h src / dlmalloc . c src / tile / ffi . c 	 	 \ <nl> - 	 src / tile / ffitarget . h src / tile / tile . S libtool - version 	 	 \ <nl> - 	 src / xtensa / ffitarget . h src / xtensa / ffi . c src / xtensa / sysv . S 	 \ <nl> - 	 src / metag / ffi . c src / metag / ffitarget . h src / metag / sysv . S 	 	 \ <nl> + 	 src / aarch64 / ffi . c src / aarch64 / ffitarget . h src / aarch64 / sysv . S 	 \ <nl> + 	 build - ios . sh src / alpha / ffi . c src / alpha / osf . S 	 	 	 \ <nl> + 	 src / alpha / ffitarget . h src / arm / ffi . c src / arm / sysv . S 	 	 \ <nl> + 	 src / arm / ffitarget . h src / avr32 / ffi . c src / avr32 / sysv . S 	 	 \ <nl> + 	 src / avr32 / ffitarget . h src / cris / ffi . c src / cris / sysv . S 	 	 \ <nl> + 	 src / cris / ffitarget . h src / ia64 / ffi . c src / ia64 / ffitarget . h 	 \ <nl> + 	 src / ia64 / ia64 _ flags . h src / ia64 / unix . S src / mips / ffi . c 	 	 \ <nl> + 	 src / mips / n32 . S src / mips / o32 . S src / metag / ffi . c 	 	 	 \ <nl> + 	 src / metag / ffitarget . h src / metag / sysv . S src / moxie / ffi . c 	 	 \ <nl> + 	 src / moxie / ffitarget . h src / moxie / eabi . S src / mips / ffitarget . h 	 \ <nl> + 	 src / m32r / ffi . c src / m32r / sysv . S src / m32r / ffitarget . h 	 	 \ <nl> + 	 src / m68k / ffi . c src / m68k / sysv . S src / m68k / ffitarget . h 	 	 \ <nl> + 	 src / microblaze / ffi . c src / microblaze / sysv . S 	 	 	 \ <nl> + 	 src / microblaze / ffitarget . h src / powerpc / ffi . c 	 	 	 \ <nl> + 	 src / powerpc / sysv . S src / powerpc / linux64 . S 	 	 	 \ <nl> + 	 src / powerpc / linux64 _ closure . S src / powerpc / ppc _ closure . S 	 \ <nl> + 	 src / powerpc / asm . h src / powerpc / aix . S src / powerpc / darwin . S 	 \ <nl> + 	 src / powerpc / aix _ closure . S src / powerpc / darwin _ closure . S 	 	 \ <nl> + 	 src / powerpc / ffi _ darwin . c src / powerpc / ffitarget . h 	 	 \ <nl> + 	 src / s390 / ffi . c src / s390 / sysv . S src / s390 / ffitarget . h 	 	 \ <nl> + 	 src / sh / ffi . c src / sh / sysv . S src / sh / ffitarget . h src / sh64 / ffi . c 	 \ <nl> + 	 src / sh64 / sysv . S src / sh64 / ffitarget . h src / sparc / v8 . S 	 	 \ <nl> + 	 src / sparc / v9 . S src / sparc / ffitarget . h src / sparc / ffi . c 	 	 \ <nl> + 	 src / x86 / darwin64 . S src / x86 / ffi . c src / x86 / sysv . S 	 	 \ <nl> + 	 src / x86 / win32 . S src / x86 / darwin . S src / x86 / win64 . S 	 	 \ <nl> + 	 src / x86 / freebsd . S src / x86 / ffi64 . c src / x86 / unix64 . S 	 	 \ <nl> + 	 src / x86 / ffitarget . h src / pa / ffitarget . h src / pa / ffi . c 	 	 \ <nl> + 	 src / pa / linux . S src / pa / hpux32 . S src / frv / ffi . c src / bfin / ffi . c 	 \ <nl> + 	 src / bfin / ffitarget . h src / bfin / sysv . S src / frv / eabi . S 	 	 \ <nl> + 	 src / frv / ffitarget . h src / dlmalloc . c src / tile / ffi . c 	 	 \ <nl> + 	 src / tile / ffitarget . h src / tile / tile . S libtool - version 	 	 \ <nl> + 	 src / xtensa / ffitarget . h src / xtensa / ffi . c src / xtensa / sysv . S 	 \ <nl> 	 ChangeLog . libffi m4 / libtool . m4 m4 / lt ~ obsolete . m4 	 	 \ <nl> 	 m4 / ltoptions . m4 m4 / ltsugar . m4 m4 / ltversion . m4 	 	 	 \ <nl> 	 m4 / ltversion . m4 src / arm / gentramp . sh src / debug . c msvcc . sh 	 \ <nl> - 	 generate - ios - source - and - headers . py 	 	 	 	 \ <nl> + 	 generate - ios - source - and - headers . py 	 	 	 	 \ <nl> 	 generate - osx - source - and - headers . py 	 	 	 	 \ <nl> - 	 libffi . xcodeproj / project . pbxproj src / arm / trampoline . S \ <nl> - libtool - ldflags <nl> + 	 libffi . xcodeproj / project . pbxproj src / arm / trampoline . S 	 	 \ <nl> + 	 libtool - ldflags <nl> <nl> info _ TEXINFOS = doc / libffi . texi <nl> <nl> diff - - git a / Makefile . in b / Makefile . in <nl> index fc5e80e . . 4b6abe5 100644 <nl> - - - a / Makefile . in <nl> + + + b / Makefile . in <nl> @ @ - 85 , 6 + 85 , 7 @ @ target _ triplet = @ target @ <nl> @ PA _ HPUX _ TRUE @ am _ _ append _ 31 = src / pa / hpux32 . S src / pa / ffi . c <nl> @ TILE _ TRUE @ am _ _ append _ 32 = src / tile / tile . S src / tile / ffi . c <nl> @ XTENSA _ TRUE @ am _ _ append _ 33 = src / xtensa / sysv . S src / xtensa / ffi . c <nl> + @ METAG _ TRUE @ am _ _ append _ 34 = src / metag / sysv . S src / metag / ffi . c <nl> subdir = . <nl> DIST _ COMMON = README $ ( am _ _ configure _ deps ) $ ( srcdir ) / Makefile . am \ <nl> 	 $ ( srcdir ) / Makefile . in $ ( srcdir ) / doc / stamp - vti \ <nl> @ @ - 196 , 6 + 197 , 7 @ @ am _ libffi _ la _ OBJECTS = src / prep _ cif . lo src / types . lo src / raw _ api . lo \ <nl> @ PA _ HPUX _ TRUE @ am _ _ objects _ 31 = src / pa / hpux32 . lo src / pa / ffi . lo <nl> @ TILE _ TRUE @ am _ _ objects _ 32 = src / tile / tile . lo src / tile / ffi . lo <nl> @ XTENSA _ TRUE @ am _ _ objects _ 33 = src / xtensa / sysv . lo src / xtensa / ffi . lo <nl> + @ METAG _ TRUE @ am _ _ objects _ 34 = src / metag / sysv . lo src / metag / ffi . lo <nl> nodist _ libffi _ la _ OBJECTS = $ ( am _ _ objects _ 1 ) $ ( am _ _ objects _ 2 ) \ <nl> 	 $ ( am _ _ objects _ 3 ) $ ( am _ _ objects _ 4 ) $ ( am _ _ objects _ 5 ) \ <nl> 	 $ ( am _ _ objects _ 6 ) $ ( am _ _ objects _ 7 ) $ ( am _ _ objects _ 8 ) \ <nl> @ @ - 207 , 17 + 209 , 17 @ @ nodist _ libffi _ la _ OBJECTS = $ ( am _ _ objects _ 1 ) $ ( am _ _ objects _ 2 ) \ <nl> 	 $ ( am _ _ objects _ 24 ) $ ( am _ _ objects _ 25 ) $ ( am _ _ objects _ 26 ) \ <nl> 	 $ ( am _ _ objects _ 27 ) $ ( am _ _ objects _ 28 ) $ ( am _ _ objects _ 29 ) \ <nl> 	 $ ( am _ _ objects _ 30 ) $ ( am _ _ objects _ 31 ) $ ( am _ _ objects _ 32 ) \ <nl> - 	 $ ( am _ _ objects _ 33 ) <nl> + 	 $ ( am _ _ objects _ 33 ) $ ( am _ _ objects _ 34 ) <nl> libffi _ la _ OBJECTS = $ ( am _ libffi _ la _ OBJECTS ) \ <nl> 	 $ ( nodist _ libffi _ la _ OBJECTS ) <nl> libffi _ la _ LINK = $ ( LIBTOOL ) - - tag = CC $ ( AM _ LIBTOOLFLAGS ) \ <nl> 	 $ ( LIBTOOLFLAGS ) - - mode = link $ ( CCLD ) $ ( AM _ CFLAGS ) $ ( CFLAGS ) \ <nl> 	 $ ( libffi _ la _ LDFLAGS ) $ ( LDFLAGS ) - o $ @ <nl> libffi _ convenience _ la _ LIBADD = <nl> - am _ _ objects _ 34 = src / prep _ cif . lo src / types . lo src / raw _ api . lo \ <nl> + am _ _ objects _ 35 = src / prep _ cif . lo src / types . lo src / raw _ api . lo \ <nl> 	 src / java _ raw _ api . lo src / closures . lo <nl> - am _ libffi _ convenience _ la _ OBJECTS = $ ( am _ _ objects _ 34 ) <nl> - am _ _ objects _ 35 = $ ( am _ _ objects _ 1 ) $ ( am _ _ objects _ 2 ) $ ( am _ _ objects _ 3 ) \ <nl> + am _ libffi _ convenience _ la _ OBJECTS = $ ( am _ _ objects _ 35 ) <nl> + am _ _ objects _ 36 = $ ( am _ _ objects _ 1 ) $ ( am _ _ objects _ 2 ) $ ( am _ _ objects _ 3 ) \ <nl> 	 $ ( am _ _ objects _ 4 ) $ ( am _ _ objects _ 5 ) $ ( am _ _ objects _ 6 ) \ <nl> 	 $ ( am _ _ objects _ 7 ) $ ( am _ _ objects _ 8 ) $ ( am _ _ objects _ 9 ) \ <nl> 	 $ ( am _ _ objects _ 10 ) $ ( am _ _ objects _ 11 ) $ ( am _ _ objects _ 12 ) \ <nl> @ @ - 227 , 8 + 229 , 9 @ @ am _ _ objects _ 35 = $ ( am _ _ objects _ 1 ) $ ( am _ _ objects _ 2 ) $ ( am _ _ objects _ 3 ) \ <nl> 	 $ ( am _ _ objects _ 22 ) $ ( am _ _ objects _ 23 ) $ ( am _ _ objects _ 24 ) \ <nl> 	 $ ( am _ _ objects _ 25 ) $ ( am _ _ objects _ 26 ) $ ( am _ _ objects _ 27 ) \ <nl> 	 $ ( am _ _ objects _ 28 ) $ ( am _ _ objects _ 29 ) $ ( am _ _ objects _ 30 ) \ <nl> - 	 $ ( am _ _ objects _ 31 ) $ ( am _ _ objects _ 32 ) $ ( am _ _ objects _ 33 ) <nl> - nodist _ libffi _ convenience _ la _ OBJECTS = $ ( am _ _ objects _ 35 ) <nl> + 	 $ ( am _ _ objects _ 31 ) $ ( am _ _ objects _ 32 ) $ ( am _ _ objects _ 33 ) \ <nl> + 	 $ ( am _ _ objects _ 34 ) <nl> + nodist _ libffi _ convenience _ la _ OBJECTS = $ ( am _ _ objects _ 36 ) <nl> libffi _ convenience _ la _ OBJECTS = $ ( am _ libffi _ convenience _ la _ OBJECTS ) \ <nl> 	 $ ( nodist _ libffi _ convenience _ la _ OBJECTS ) <nl> DEFAULT _ INCLUDES = - I . @ am _ _ isrc @ <nl> @ @ - 466 , 44 + 469 , 45 @ @ AUTOMAKE _ OPTIONS = foreign subdir - objects <nl> ACLOCAL _ AMFLAGS = - I m4 <nl> SUBDIRS = include testsuite man <nl> EXTRA _ DIST = LICENSE ChangeLog . v1 ChangeLog . libgcj configure . host 	 \ <nl> - 	 src / aarch64 / ffi . c src / aarch64 / ffitarget . h 	 	 	 \ <nl> - 	 src / aarch64 / sysv . S build - ios . sh 	 	 	 	 \ <nl> - 	 src / alpha / ffi . c src / alpha / osf . S src / alpha / ffitarget . h 	 	 \ <nl> - 	 src / arm / ffi . c src / arm / sysv . S src / arm / ffitarget . h 	 	 \ <nl> - 	 src / avr32 / ffi . c src / avr32 / sysv . S src / avr32 / ffitarget . h 	 	 \ <nl> - 	 src / cris / ffi . c src / cris / sysv . S src / cris / ffitarget . h 	 	 \ <nl> - 	 src / ia64 / ffi . c src / ia64 / ffitarget . h src / ia64 / ia64 _ flags . h 	 \ <nl> - 	 src / ia64 / unix . S src / mips / ffi . c src / mips / n32 . S src / mips / o32 . S 	 \ <nl> - 	 src / mips / ffitarget . h src / m32r / ffi . c src / m32r / sysv . S 	 	 \ <nl> - 	 src / m32r / ffitarget . h src / m68k / ffi . c src / m68k / sysv . S 	 	 \ <nl> - 	 src / m68k / ffitarget . h src / microblaze / ffi . c 	 	 	 \ <nl> - 	 src / microblaze / sysv . S src / microblaze / ffitarget . h 	 	 \ <nl> - 	 src / powerpc / ffi . c src / powerpc / sysv . S 	 	 	 	 \ <nl> - 	 src / powerpc / linux64 . S src / powerpc / linux64 _ closure . S 	 	 \ <nl> - 	 src / powerpc / ppc _ closure . S src / powerpc / asm . h 	 	 	 \ <nl> - 	 src / powerpc / aix . S src / powerpc / darwin . S 	 	 	 	 \ <nl> - 	 src / powerpc / aix _ closure . S src / powerpc / darwin _ closure . S 	 	 \ <nl> - 	 src / powerpc / ffi _ darwin . c src / powerpc / ffitarget . h 	 	 \ <nl> - 	 src / s390 / ffi . c src / s390 / sysv . S src / s390 / ffitarget . h 	 	 \ <nl> - 	 src / sh / ffi . c src / sh / sysv . S src / sh / ffitarget . h src / sh64 / ffi . c 	 \ <nl> - 	 src / sh64 / sysv . S src / sh64 / ffitarget . h src / sparc / v8 . S 	 	 \ <nl> - 	 src / sparc / v9 . S src / sparc / ffitarget . h src / sparc / ffi . c 	 	 \ <nl> - 	 src / x86 / darwin64 . S src / x86 / ffi . c src / x86 / sysv . S 	 	 	 \ <nl> - 	 src / x86 / win32 . S src / x86 / darwin . S src / x86 / win64 . S 	 	 \ <nl> - 	 src / x86 / freebsd . S src / x86 / ffi64 . c src / x86 / unix64 . S 	 	 \ <nl> - 	 src / x86 / ffitarget . h src / pa / ffitarget . h src / pa / ffi . c 	 	 \ <nl> - 	 src / pa / linux . S src / pa / hpux32 . S src / frv / ffi . c src / bfin / ffi . c 	 \ <nl> - 	 src / bfin / ffitarget . h src / bfin / sysv . S src / frv / eabi . S 	 	 \ <nl> - 	 src / frv / ffitarget . h src / dlmalloc . c src / tile / ffi . c 	 	 \ <nl> - 	 src / tile / ffitarget . h src / tile / tile . S libtool - version 	 	 \ <nl> - 	 src / xtensa / ffitarget . h src / xtensa / ffi . c src / xtensa / sysv . S 	 \ <nl> + 	 src / aarch64 / ffi . c src / aarch64 / ffitarget . h src / aarch64 / sysv . S 	 \ <nl> + 	 build - ios . sh src / alpha / ffi . c src / alpha / osf . S 	 	 	 \ <nl> + 	 src / alpha / ffitarget . h src / arm / ffi . c src / arm / sysv . S 	 	 \ <nl> + 	 src / arm / ffitarget . h src / avr32 / ffi . c src / avr32 / sysv . S 	 	 \ <nl> + 	 src / avr32 / ffitarget . h src / cris / ffi . c src / cris / sysv . S 	 	 \ <nl> + 	 src / cris / ffitarget . h src / ia64 / ffi . c src / ia64 / ffitarget . h 	 \ <nl> + 	 src / ia64 / ia64 _ flags . h src / ia64 / unix . S src / mips / ffi . c 	 	 \ <nl> + 	 src / mips / n32 . S src / mips / o32 . S src / metag / ffi . c 	 	 	 \ <nl> + 	 src / metag / ffitarget . h src / metag / sysv . S src / moxie / ffi . c 	 	 \ <nl> + 	 src / moxie / ffitarget . h src / moxie / eabi . S src / mips / ffitarget . h 	 \ <nl> + 	 src / m32r / ffi . c src / m32r / sysv . S src / m32r / ffitarget . h 	 	 \ <nl> + 	 src / m68k / ffi . c src / m68k / sysv . S src / m68k / ffitarget . h 	 	 \ <nl> + 	 src / microblaze / ffi . c src / microblaze / sysv . S 	 	 	 \ <nl> + 	 src / microblaze / ffitarget . h src / powerpc / ffi . c 	 	 	 \ <nl> + 	 src / powerpc / sysv . S src / powerpc / linux64 . S 	 	 	 \ <nl> + 	 src / powerpc / linux64 _ closure . S src / powerpc / ppc _ closure . S 	 \ <nl> + 	 src / powerpc / asm . h src / powerpc / aix . S src / powerpc / darwin . S 	 \ <nl> + 	 src / powerpc / aix _ closure . S src / powerpc / darwin _ closure . S 	 	 \ <nl> + 	 src / powerpc / ffi _ darwin . c src / powerpc / ffitarget . h 	 	 \ <nl> + 	 src / s390 / ffi . c src / s390 / sysv . S src / s390 / ffitarget . h 	 	 \ <nl> + 	 src / sh / ffi . c src / sh / sysv . S src / sh / ffitarget . h src / sh64 / ffi . c 	 \ <nl> + 	 src / sh64 / sysv . S src / sh64 / ffitarget . h src / sparc / v8 . S 	 	 \ <nl> + 	 src / sparc / v9 . S src / sparc / ffitarget . h src / sparc / ffi . c 	 	 \ <nl> + 	 src / x86 / darwin64 . S src / x86 / ffi . c src / x86 / sysv . S 	 	 \ <nl> + 	 src / x86 / win32 . S src / x86 / darwin . S src / x86 / win64 . S 	 	 \ <nl> + 	 src / x86 / freebsd . S src / x86 / ffi64 . c src / x86 / unix64 . S 	 	 \ <nl> + 	 src / x86 / ffitarget . h src / pa / ffitarget . h src / pa / ffi . c 	 	 \ <nl> + 	 src / pa / linux . S src / pa / hpux32 . S src / frv / ffi . c src / bfin / ffi . c 	 \ <nl> + 	 src / bfin / ffitarget . h src / bfin / sysv . S src / frv / eabi . S 	 	 \ <nl> + 	 src / frv / ffitarget . h src / dlmalloc . c src / tile / ffi . c 	 	 \ <nl> + 	 src / tile / ffitarget . h src / tile / tile . S libtool - version 	 	 \ <nl> + 	 src / xtensa / ffitarget . h src / xtensa / ffi . c src / xtensa / sysv . S 	 \ <nl> 	 ChangeLog . libffi m4 / libtool . m4 m4 / lt ~ obsolete . m4 	 	 \ <nl> 	 m4 / ltoptions . m4 m4 / ltsugar . m4 m4 / ltversion . m4 	 	 	 \ <nl> 	 m4 / ltversion . m4 src / arm / gentramp . sh src / debug . c msvcc . sh 	 \ <nl> - 	 generate - ios - source - and - headers . py 	 	 	 	 \ <nl> + 	 generate - ios - source - and - headers . py 	 	 	 	 \ <nl> 	 generate - osx - source - and - headers . py 	 	 	 	 \ <nl> - 	 libffi . xcodeproj / project . pbxproj src / arm / trampoline . S \ <nl> - libtool - ldflags <nl> + 	 libffi . xcodeproj / project . pbxproj src / arm / trampoline . S 	 	 \ <nl> + 	 libtool - ldflags <nl> <nl> info _ TEXINFOS = doc / libffi . texi <nl> <nl> @ @ - 567 , 7 + 571 , 7 @ @ nodist _ libffi _ la _ SOURCES = $ ( am _ _ append _ 1 ) $ ( am _ _ append _ 2 ) \ <nl> 	 $ ( am _ _ append _ 24 ) $ ( am _ _ append _ 25 ) $ ( am _ _ append _ 26 ) \ <nl> 	 $ ( am _ _ append _ 27 ) $ ( am _ _ append _ 28 ) $ ( am _ _ append _ 29 ) \ <nl> 	 $ ( am _ _ append _ 30 ) $ ( am _ _ append _ 31 ) $ ( am _ _ append _ 32 ) \ <nl> - 	 $ ( am _ _ append _ 33 ) <nl> + 	 $ ( am _ _ append _ 33 ) $ ( am _ _ append _ 34 ) <nl> libffi _ convenience _ la _ SOURCES = $ ( libffi _ la _ SOURCES ) <nl> nodist _ libffi _ convenience _ la _ SOURCES = $ ( nodist _ libffi _ la _ SOURCES ) <nl> LTLDFLAGS = $ ( shell $ ( SHELL ) $ ( top _ srcdir ) / libtool - ldflags $ ( LDFLAGS ) ) <nl> @ @ - 943 , 6 + 947 , 16 @ @ src / xtensa / sysv . lo : src / xtensa / $ ( am _ _ dirstamp ) \ <nl> 	 src / xtensa / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> src / xtensa / ffi . lo : src / xtensa / $ ( am _ _ dirstamp ) \ <nl> 	 src / xtensa / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> + src / metag / $ ( am _ _ dirstamp ) : <nl> + 	 @ $ ( MKDIR _ P ) src / metag <nl> + 	 @ : > src / metag / $ ( am _ _ dirstamp ) <nl> + src / metag / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) : <nl> + 	 @ $ ( MKDIR _ P ) src / metag / $ ( DEPDIR ) <nl> + 	 @ : > src / metag / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> + src / metag / sysv . lo : src / metag / $ ( am _ _ dirstamp ) \ <nl> + 	 src / metag / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> + src / metag / ffi . lo : src / metag / $ ( am _ _ dirstamp ) \ <nl> + 	 src / metag / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> libffi . la : $ ( libffi _ la _ OBJECTS ) $ ( libffi _ la _ DEPENDENCIES ) $ ( EXTRA _ libffi _ la _ DEPENDENCIES ) <nl> 	 $ ( libffi _ la _ LINK ) - rpath $ ( toolexeclibdir ) $ ( libffi _ la _ OBJECTS ) $ ( libffi _ la _ LIBADD ) $ ( LIBS ) <nl> libffi _ convenience . la : $ ( libffi _ convenience _ la _ OBJECTS ) $ ( libffi _ convenience _ la _ DEPENDENCIES ) $ ( EXTRA _ libffi _ convenience _ la _ DEPENDENCIES ) <nl> @ @ - 972 , 6 + 986 , 8 @ @ mostlyclean - compile : <nl> 	 - rm - f src / m32r / * . lo <nl> 	 - rm - f src / m68k / * . $ ( OBJEXT ) <nl> 	 - rm - f src / m68k / * . lo <nl> + 	 - rm - f src / metag / * . $ ( OBJEXT ) <nl> + 	 - rm - f src / metag / * . lo <nl> 	 - rm - f src / microblaze / * . $ ( OBJEXT ) <nl> 	 - rm - f src / microblaze / * . lo <nl> 	 - rm - f src / mips / * . $ ( OBJEXT ) <nl> @ @ - 1027 , 6 + 1043 , 8 @ @ distclean - compile : <nl> @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / m32r / $ ( DEPDIR ) / sysv . Plo @ am _ _ quote @ <nl> @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / m68k / $ ( DEPDIR ) / ffi . Plo @ am _ _ quote @ <nl> @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / m68k / $ ( DEPDIR ) / sysv . Plo @ am _ _ quote @ <nl> + @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / metag / $ ( DEPDIR ) / ffi . Plo @ am _ _ quote @ <nl> + @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / metag / $ ( DEPDIR ) / sysv . Plo @ am _ _ quote @ <nl> @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / microblaze / $ ( DEPDIR ) / ffi . Plo @ am _ _ quote @ <nl> @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / microblaze / $ ( DEPDIR ) / sysv . Plo @ am _ _ quote @ <nl> @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / mips / $ ( DEPDIR ) / ffi . Plo @ am _ _ quote @ <nl> @ @ - 1134 , 6 + 1152 , 7 @ @ clean - libtool : <nl> 	 - rm - rf src / ia64 / . libs src / ia64 / _ libs <nl> 	 - rm - rf src / m32r / . libs src / m32r / _ libs <nl> 	 - rm - rf src / m68k / . libs src / m68k / _ libs <nl> + 	 - rm - rf src / metag / . libs src / metag / _ libs <nl> 	 - rm - rf src / microblaze / . libs src / microblaze / _ libs <nl> 	 - rm - rf src / mips / . libs src / mips / _ libs <nl> 	 - rm - rf src / moxie / . libs src / moxie / _ libs <nl> @ @ - 1711 , 6 + 1730 , 8 @ @ distclean - generic : <nl> 	 - rm - f src / m32r / $ ( am _ _ dirstamp ) <nl> 	 - rm - f src / m68k / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> 	 - rm - f src / m68k / $ ( am _ _ dirstamp ) <nl> + 	 - rm - f src / metag / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> + 	 - rm - f src / metag / $ ( am _ _ dirstamp ) <nl> 	 - rm - f src / microblaze / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> 	 - rm - f src / microblaze / $ ( am _ _ dirstamp ) <nl> 	 - rm - f src / mips / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> @ @ - 1747 , 7 + 1768 , 7 @ @ clean - am : clean - aminfo clean - generic clean - libtool \ <nl> <nl> distclean : distclean - recursive <nl> 	 - rm - f $ ( am _ _ CONFIG _ DISTCLEAN _ FILES ) <nl> - 	 - rm - rf src / $ ( DEPDIR ) src / aarch64 / $ ( DEPDIR ) src / alpha / $ ( DEPDIR ) src / arm / $ ( DEPDIR ) src / avr32 / $ ( DEPDIR ) src / bfin / $ ( DEPDIR ) src / cris / $ ( DEPDIR ) src / frv / $ ( DEPDIR ) src / ia64 / $ ( DEPDIR ) src / m32r / $ ( DEPDIR ) src / m68k / $ ( DEPDIR ) src / microblaze / $ ( DEPDIR ) src / mips / $ ( DEPDIR ) src / moxie / $ ( DEPDIR ) src / pa / $ ( DEPDIR ) src / powerpc / $ ( DEPDIR ) src / s390 / $ ( DEPDIR ) src / sh / $ ( DEPDIR ) src / sh64 / $ ( DEPDIR ) src / sparc / $ ( DEPDIR ) src / tile / $ ( DEPDIR ) src / x86 / $ ( DEPDIR ) src / xtensa / $ ( DEPDIR ) <nl> + 	 - rm - rf src / $ ( DEPDIR ) src / aarch64 / $ ( DEPDIR ) src / alpha / $ ( DEPDIR ) src / arm / $ ( DEPDIR ) src / avr32 / $ ( DEPDIR ) src / bfin / $ ( DEPDIR ) src / cris / $ ( DEPDIR ) src / frv / $ ( DEPDIR ) src / ia64 / $ ( DEPDIR ) src / m32r / $ ( DEPDIR ) src / m68k / $ ( DEPDIR ) src / metag / $ ( DEPDIR ) src / microblaze / $ ( DEPDIR ) src / mips / $ ( DEPDIR ) src / moxie / $ ( DEPDIR ) src / pa / $ ( DEPDIR ) src / powerpc / $ ( DEPDIR ) src / s390 / $ ( DEPDIR ) src / sh / $ ( DEPDIR ) src / sh64 / $ ( DEPDIR ) src / sparc / $ ( DEPDIR ) src / tile / $ ( DEPDIR ) src / x86 / $ ( DEPDIR ) src / xtensa / $ ( DEPDIR ) <nl> 	 - rm - f Makefile <nl> distclean - am : clean - am distclean - compile distclean - generic \ <nl> 	 distclean - hdr distclean - libtool distclean - tags <nl> @ @ - 1886 , 7 + 1907 , 7 @ @ installcheck - am : <nl> maintainer - clean : maintainer - clean - recursive <nl> 	 - rm - f $ ( am _ _ CONFIG _ DISTCLEAN _ FILES ) <nl> 	 - rm - rf $ ( top _ srcdir ) / autom4te . cache <nl> - 	 - rm - rf src / $ ( DEPDIR ) src / aarch64 / $ ( DEPDIR ) src / alpha / $ ( DEPDIR ) src / arm / $ ( DEPDIR ) src / avr32 / $ ( DEPDIR ) src / bfin / $ ( DEPDIR ) src / cris / $ ( DEPDIR ) src / frv / $ ( DEPDIR ) src / ia64 / $ ( DEPDIR ) src / m32r / $ ( DEPDIR ) src / m68k / $ ( DEPDIR ) src / microblaze / $ ( DEPDIR ) src / mips / $ ( DEPDIR ) src / moxie / $ ( DEPDIR ) src / pa / $ ( DEPDIR ) src / powerpc / $ ( DEPDIR ) src / s390 / $ ( DEPDIR ) src / sh / $ ( DEPDIR ) src / sh64 / $ ( DEPDIR ) src / sparc / $ ( DEPDIR ) src / tile / $ ( DEPDIR ) src / x86 / $ ( DEPDIR ) src / xtensa / $ ( DEPDIR ) <nl> + 	 - rm - rf src / $ ( DEPDIR ) src / aarch64 / $ ( DEPDIR ) src / alpha / $ ( DEPDIR ) src / arm / $ ( DEPDIR ) src / avr32 / $ ( DEPDIR ) src / bfin / $ ( DEPDIR ) src / cris / $ ( DEPDIR ) src / frv / $ ( DEPDIR ) src / ia64 / $ ( DEPDIR ) src / m32r / $ ( DEPDIR ) src / m68k / $ ( DEPDIR ) src / metag / $ ( DEPDIR ) src / microblaze / $ ( DEPDIR ) src / mips / $ ( DEPDIR ) src / moxie / $ ( DEPDIR ) src / pa / $ ( DEPDIR ) src / powerpc / $ ( DEPDIR ) src / s390 / $ ( DEPDIR ) src / sh / $ ( DEPDIR ) src / sh64 / $ ( DEPDIR ) src / sparc / $ ( DEPDIR ) src / tile / $ ( DEPDIR ) src / x86 / $ ( DEPDIR ) src / xtensa / $ ( DEPDIR ) <nl> 	 - rm - f Makefile <nl> maintainer - clean - am : distclean - am maintainer - clean - aminfo \ <nl> 	 maintainer - clean - generic maintainer - clean - vti <nl> diff - - git a / README b / README <nl> index f1a68f2 . . 250c515 100644 <nl> - - - a / README <nl> + + + b / README <nl> @ @ - 166 , 6 + 166 , 7 @ @ See the ChangeLog files for details . <nl> 3 . 0 . 13 Mar - 16 - 13 <nl> <nl> 	 Add Meta support . <nl> + 	 Add missing Moxie bits . <nl> 	 Fix stack alignment bug on 32 - bit x86 . <nl> <nl> 3 . 0 . 12 Feb - 11 - 13 <nl> diff - - git a / configure b / configure <nl> index a3a2a82 . . 5973849 100755 <nl> - - - a / configure <nl> + + + b / configure <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> # ! / bin / sh <nl> # Guess values for system - dependent variables and create Makefiles . <nl> - # Generated by GNU Autoconf 2 . 69 for libffi 3 . 0 . 12 . <nl> + # Generated by GNU Autoconf 2 . 69 for libffi 3 . 0 . 13 . <nl> # <nl> # Report bugs to < http : / / github . com / atgreen / libffi / issues > . <nl> # <nl> @ @ - 590 , 8 + 590 , 8 @ @ MAKEFLAGS = <nl> # Identity of this package . <nl> PACKAGE _ NAME = ' libffi ' <nl> PACKAGE _ TARNAME = ' libffi ' <nl> - PACKAGE _ VERSION = ' 3 . 0 . 12 ' <nl> - PACKAGE _ STRING = ' libffi 3 . 0 . 12 ' <nl> + PACKAGE _ VERSION = ' 3 . 0 . 13 ' <nl> + PACKAGE _ STRING = ' libffi 3 . 0 . 13 ' <nl> PACKAGE _ BUGREPORT = ' http : / / github . com / atgreen / libffi / issues ' <nl> PACKAGE _ URL = ' ' <nl> <nl> @ @ - 685 , 6 + 685 , 8 @ @ POWERPC _ FALSE <nl> POWERPC _ TRUE <nl> MOXIE _ FALSE <nl> MOXIE _ TRUE <nl> + METAG _ FALSE <nl> + METAG _ TRUE <nl> MICROBLAZE _ FALSE <nl> MICROBLAZE _ TRUE <nl> M68K _ FALSE <nl> @ @ - 1405 , 7 + 1407 , 7 @ @ if test " $ ac _ init _ help " = " long " ; then <nl> # Omit some internal or obsolete options to make the list less imposing . <nl> # This message is too long to be a string in the A / UX 3 . 1 sh . <nl> cat < < _ ACEOF <nl> - \ ` configure ' configures libffi 3 . 0 . 12 to adapt to many kinds of systems . <nl> + \ ` configure ' configures libffi 3 . 0 . 13 to adapt to many kinds of systems . <nl> <nl> Usage : $ 0 [ OPTION ] . . . [ VAR = VALUE ] . . . <nl> <nl> @ @ - 1476 , 7 + 1478 , 7 @ @ fi <nl> <nl> if test - n " $ ac _ init _ help " ; then <nl> case $ ac _ init _ help in <nl> - short | recursive ) echo " Configuration of libffi 3 . 0 . 12 : " ; ; <nl> + short | recursive ) echo " Configuration of libffi 3 . 0 . 13 : " ; ; <nl> esac <nl> cat < < \ _ ACEOF <nl> <nl> @ @ - 1596 , 7 + 1598 , 7 @ @ fi <nl> test - n " $ ac _ init _ help " & & exit $ ac _ status <nl> if $ ac _ init _ version ; then <nl> cat < < \ _ ACEOF <nl> - libffi configure 3 . 0 . 12 <nl> + libffi configure 3 . 0 . 13 <nl> generated by GNU Autoconf 2 . 69 <nl> <nl> Copyright ( C ) 2012 Free Software Foundation , Inc . <nl> @ @ - 2202 , 7 + 2204 , 7 @ @ cat > config . log < < _ ACEOF <nl> This file contains any messages produced by compilers while <nl> running configure , to aid debugging if configure makes a mistake . <nl> <nl> - It was created by libffi $ as _ me 3 . 0 . 12 , which was <nl> + It was created by libffi $ as _ me 3 . 0 . 13 , which was <nl> generated by GNU Autoconf 2 . 69 . Invocation command line was <nl> <nl> $ $ 0 $ @ <nl> @ @ - 3245 , 7 + 3247 , 7 @ @ fi <nl> <nl> # Define the identity of the package . <nl> PACKAGE = ' libffi ' <nl> - VERSION = ' 3 . 0 . 12 ' <nl> + VERSION = ' 3 . 0 . 13 ' <nl> <nl> <nl> cat > > confdefs . h < < _ ACEOF <nl> @ @ - 13419 , 6 + 13421 , 10 @ @ case " $ host " in <nl> 	 TARGET = MOXIE ; TARGETDIR = moxie <nl> 	 ; ; <nl> <nl> + metag - * - * ) <nl> + 	 TARGET = METAG ; TARGETDIR = metag <nl> + 	 ; ; <nl> + <nl> mips - sgi - irix5 . * | mips - sgi - irix6 . * | mips * - * - rtems * ) <nl> 	 TARGET = MIPS ; TARGETDIR = mips <nl> 	 ; ; <nl> @ @ - 13589 , 6 + 13595 , 14 @ @ else <nl> MICROBLAZE _ FALSE = <nl> fi <nl> <nl> + if test x $ TARGET = xMETAG ; then <nl> + METAG _ TRUE = <nl> + METAG _ FALSE = ' # ' <nl> + else <nl> + METAG _ TRUE = ' # ' <nl> + METAG _ FALSE = <nl> + fi <nl> + <nl> if test x $ TARGET = xMOXIE ; then <nl> MOXIE _ TRUE = <nl> MOXIE _ FALSE = ' # ' <nl> @ @ - 15045 , 6 + 15059 , 10 @ @ if test - z " $ { MICROBLAZE _ TRUE } " & & test - z " $ { MICROBLAZE _ FALSE } " ; then <nl> as _ fn _ error $ ? " conditional \ " MICROBLAZE \ " was never defined . <nl> Usually this means the macro was only invoked conditionally . " " $ LINENO " 5 <nl> fi <nl> + if test - z " $ { METAG _ TRUE } " & & test - z " $ { METAG _ FALSE } " ; then <nl> + as _ fn _ error $ ? " conditional \ " METAG \ " was never defined . <nl> + Usually this means the macro was only invoked conditionally . " " $ LINENO " 5 <nl> + fi <nl> if test - z " $ { MOXIE _ TRUE } " & & test - z " $ { MOXIE _ FALSE } " ; then <nl> as _ fn _ error $ ? " conditional \ " MOXIE \ " was never defined . <nl> Usually this means the macro was only invoked conditionally . " " $ LINENO " 5 <nl> @ @ - 15531 , 7 + 15549 , 7 @ @ cat > > $ CONFIG _ STATUS < < \ _ ACEOF | | ac _ write _ fail = 1 <nl> # report actual input values of CONFIG _ FILES etc . instead of their <nl> # values after options handling . <nl> ac _ log = " <nl> - This file was extended by libffi $ as _ me 3 . 0 . 12 , which was <nl> + This file was extended by libffi $ as _ me 3 . 0 . 13 , which was <nl> generated by GNU Autoconf 2 . 69 . Invocation command line was <nl> <nl> CONFIG _ FILES = $ CONFIG _ FILES <nl> @ @ - 15601 , 7 + 15619 , 7 @ @ _ ACEOF <nl> cat > > $ CONFIG _ STATUS < < _ ACEOF | | ac _ write _ fail = 1 <nl> ac _ cs _ config = " ` $ as _ echo " $ ac _ configure _ args " | sed ' s / ^ / / ; s / [ \ \ " " \ ` \ $ ] / \ \ \ \ & / g ' ` " <nl> ac _ cs _ version = " \ \ <nl> - libffi config . status 3 . 0 . 12 <nl> + libffi config . status 3 . 0 . 13 <nl> configured by $ 0 , generated by GNU Autoconf 2 . 69 , <nl> with options \ \ " \ $ ac _ cs _ config \ \ " <nl> <nl> diff - - git a / configure . ac b / configure . ac <nl> index 99a2f22 . . 8122b4f 100644 <nl> - - - a / configure . ac <nl> + + + b / configure . ac <nl> @ @ - 2 , 7 + 2 , 7 @ @ dnl Process this with autoconf to create configure <nl> <nl> AC _ PREREQ ( 2 . 68 ) <nl> <nl> - AC _ INIT ( [ libffi ] , [ 3 . 0 . 12 ] , [ http : / / github . com / atgreen / libffi / issues ] ) <nl> + AC _ INIT ( [ libffi ] , [ 3 . 0 . 13 ] , [ http : / / github . com / atgreen / libffi / issues ] ) <nl> AC _ CONFIG _ HEADERS ( [ fficonfig . h ] ) <nl> <nl> AC _ CANONICAL _ SYSTEM <nl> diff - - git a / doc / stamp - vti b / doc / stamp - vti <nl> index 766fbac . . 54255ba 100644 <nl> - - - a / doc / stamp - vti <nl> + + + b / doc / stamp - vti <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - @ set UPDATED 6 February 2013 <nl> - @ set UPDATED - MONTH February 2013 <nl> - @ set EDITION 3 . 0 . 12 <nl> - @ set VERSION 3 . 0 . 12 <nl> + @ set UPDATED 16 March 2013 <nl> + @ set UPDATED - MONTH March 2013 <nl> + @ set EDITION 3 . 0 . 13 <nl> + @ set VERSION 3 . 0 . 13 <nl> diff - - git a / doc / version . texi b / doc / version . texi <nl> index 766fbac . . 54255ba 100644 <nl> - - - a / doc / version . texi <nl> + + + b / doc / version . texi <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - @ set UPDATED 6 February 2013 <nl> - @ set UPDATED - MONTH February 2013 <nl> - @ set EDITION 3 . 0 . 12 <nl> - @ set VERSION 3 . 0 . 12 <nl> + @ set UPDATED 16 March 2013 <nl> + @ set UPDATED - MONTH March 2013 <nl> + @ set EDITION 3 . 0 . 13 <nl> + @ set VERSION 3 . 0 . 13
diff - - git a / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java b / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java <nl> new file mode 100644 <nl> index 0000000 . . ebdd8b2 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java <nl> @ @ - 0 , 0 + 1 , 76 @ @ <nl> + / * Copyright ( c ) 2007 - 2008 Timothy Wall , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform ; <nl> + <nl> + <nl> + import com . sun . jna . Platform ; <nl> + import com . sun . jna . platform . unix . X11 ; <nl> + import com . sun . jna . platform . win32 . DBT ; <nl> + import junit . framework . TestCase ; <nl> + <nl> + import com . sun . jna . StructureFieldOrderInspector ; <nl> + <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + <nl> + public class StructureFieldOrderTest extends TestCase { <nl> + <nl> + private String origPropJNANoSys ; <nl> + <nl> + protected void setUp ( ) { <nl> + origPropJNANoSys = System . getProperty ( " jna . nosys " ) ; <nl> + System . setProperty ( " jna . nosys " , " true " ) ; / / would be set by ant script , set here for IDE usage <nl> + } <nl> + <nl> + protected void tearDown ( ) { <nl> + if ( origPropJNANoSys = = null ) { <nl> + System . getProperties ( ) . remove ( " jna . nosys " ) ; <nl> + } else { <nl> + System . setProperty ( " jna . nosys " , origPropJNANoSys ) ; <nl> + } <nl> + } <nl> + <nl> + <nl> + public void testMethodGetFieldOrder ( ) { <nl> + final List < String > ignoreConstructorError = new ArrayList < String > ( ) ; <nl> + <nl> + if ( Platform . isWindows ( ) ) { <nl> + ignoreConstructorError . add ( X11 . class . getName ( ) + " $ " ) ; <nl> + } else { <nl> + ignoreConstructorError . add ( com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 1 . class . getName ( ) ) ; <nl> + ignoreConstructorError . add ( com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 4 . class . getName ( ) ) ; <nl> + ignoreConstructorError . add ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVICE _ INTERFACE _ DATA . class . getName ( ) ) ; <nl> + ignoreConstructorError . add ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVINFO _ DATA . class . getName ( ) ) ; <nl> + } <nl> + <nl> + ignoreConstructorError . add ( DBT . DEV _ BROADCAST _ HANDLE . class . getName ( ) ) ; / / manually validated by wolftobias <nl> + ignoreConstructorError . add ( DBT . DEV _ BROADCAST _ PORT . class . getName ( ) ) ; / / manually validated by wolftobias <nl> + <nl> + StructureFieldOrderInspector . batchCheckStructureGetFieldOrder ( FileUtils . class , ignoreConstructorError ) ; <nl> + } <nl> + <nl> + / / test below is helpful when investigating failure cause of a specific Structure class , it shows full causes and traces . <nl> + / * <nl> + public void testMethodGetFieldOrderSingleClass ( ) { <nl> + final List < String > ignoreConstructorError = new ArrayList < String > ( ) ; <nl> + <nl> + if ( Platform . isWindows ( ) ) { <nl> + ignoreConstructorError . add ( X11 . class . getName ( ) + " $ " ) ; <nl> + } <nl> + <nl> + StructureFieldOrderInspector . checkMethodGetFieldOrder ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVICE _ INTERFACE _ DATA . class , ignoreConstructorError ) ; <nl> + } <nl> + / / * / <nl> + <nl> + <nl> + } <nl> diff - - git a / test / com / sun / jna / StructureFieldOrderInspector . java b / test / com / sun / jna / StructureFieldOrderInspector . java <nl> new file mode 100644 <nl> index 0000000 . . 8591823 <nl> - - - / dev / null <nl> + + + b / test / com / sun / jna / StructureFieldOrderInspector . java <nl> @ @ - 0 , 0 + 1 , 196 @ @ <nl> + package com . sun . jna ; <nl> + <nl> + import org . reflections . Reflections ; <nl> + import org . reflections . scanners . ResourcesScanner ; <nl> + import org . reflections . scanners . SubTypesScanner ; <nl> + import org . reflections . util . ClasspathHelper ; <nl> + import org . reflections . util . ConfigurationBuilder ; <nl> + <nl> + import java . lang . reflect . * ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import java . util . Set ; <nl> + <nl> + / * * <nl> + * Utility class for detecting missing { @ link com . sun . jna . Structure # getFieldOrder ( ) } methods . <nl> + * <nl> + * This class could be moved to the unit test tree , but them reusing it in the ' platform ' project would require <nl> + * publishing this test tree . <nl> + * <nl> + * @ author Dan Rollo <nl> + * Date : 1 / 17 / 13 <nl> + * Time : 4 : 08 PM <nl> + * / <nl> + public final class StructureFieldOrderInspector { <nl> + <nl> + private StructureFieldOrderInspector ( ) { } <nl> + <nl> + / * * <nl> + * Search for Structure sub types in the source tree of the given class , and validate the getFieldOrder ( ) method , <nl> + * and collects all errors into one exception . <nl> + * <nl> + * @ param classDeclaredInSourceTreeToSearch a class who ' s source tree will be searched for Structure sub types . <nl> + * @ param ignoreConstructorError list of classname prefixes for which to ignore construction errors . <nl> + * / <nl> + public static void batchCheckStructureGetFieldOrder ( final Class classDeclaredInSourceTreeToSearch , <nl> + final List < String > ignoreConstructorError ) { <nl> + final Set < Class < ? extends Structure > > classes = StructureFieldOrderInspector . findSubTypesOfStructure ( classDeclaredInSourceTreeToSearch ) ; <nl> + <nl> + final List < Throwable > problems = new ArrayList < Throwable > ( ) ; <nl> + <nl> + for ( final Class < ? extends Structure > structureSubType : classes ) { <nl> + try { <nl> + StructureFieldOrderInspector . checkMethodGetFieldOrder ( structureSubType , ignoreConstructorError ) ; <nl> + } catch ( Throwable t ) { <nl> + problems . add ( t ) ; <nl> + } <nl> + } <nl> + <nl> + if ( problems . size ( ) > 0 ) { <nl> + String msg = " " ; <nl> + for ( final Throwable t : problems ) { <nl> + msg + = t . getMessage ( ) + " ; \ n " ; <nl> + } <nl> + <nl> + throw new RuntimeException ( " Some Structure sub types ( " + problems . size ( ) + " ) have problems with getFieldOrder ( ) : \ n " + msg ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Search for Structure sub types in the source tree of the given class , and validate the getFieldOrder ( ) method . <nl> + * <nl> + * @ param classDeclaredInSourceTreeToSearch a class who ' s source tree will be searched for Structure sub types . <nl> + * @ param ignoreConstructorError list of classname prefixes for which to ignore construction errors . <nl> + * / <nl> + public static void checkStructureGetFieldOrder ( final Class classDeclaredInSourceTreeToSearch , <nl> + final List < String > ignoreConstructorError ) { <nl> + final Set < Class < ? extends Structure > > classes = StructureFieldOrderInspector . findSubTypesOfStructure ( classDeclaredInSourceTreeToSearch ) ; <nl> + <nl> + for ( final Class < ? extends Structure > structureSubType : classes ) { <nl> + StructureFieldOrderInspector . checkMethodGetFieldOrder ( structureSubType , ignoreConstructorError ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Find all classes that extend { @ link Structure } . <nl> + * / <nl> + public static Set < Class < ? extends Structure > > findSubTypesOfStructure ( final Class classDeclaredInSourceTreeToSearch ) { <nl> + <nl> + / / use : http : / / code . google . com / p / reflections / <nl> + <nl> + final Reflections reflections = new Reflections ( new ConfigurationBuilder ( ) <nl> + . setScanners ( new SubTypesScanner ( false / * don ' t exclude Object . class * / ) , new ResourcesScanner ( ) ) <nl> + . setUrls ( ClasspathHelper . forClass ( classDeclaredInSourceTreeToSearch ) ) <nl> + ) ; <nl> + <nl> + return reflections . getSubTypesOf ( Structure . class ) ; <nl> + } <nl> + <nl> + <nl> + public static void checkMethodGetFieldOrder ( final Class < ? extends Structure > structureSubType , <nl> + final List < String > ignoreConstructorError ) { <nl> + <nl> + if ( Structure . ByValue . class . isAssignableFrom ( structureSubType ) <nl> + | | Structure . ByReference . class . isAssignableFrom ( structureSubType ) ) { <nl> + <nl> + / / ignore tagging interfaces <nl> + return ; <nl> + } <nl> + <nl> + final Method methodGetFieldOrder = getMethodGetFieldOrder ( structureSubType ) ; <nl> + <nl> + <nl> + if ( Modifier . isAbstract ( structureSubType . getModifiers ( ) ) ) { <nl> + / / do not try to construct abstract Structure sub types <nl> + return ; <nl> + } <nl> + final Constructor < ? extends Structure > structConstructor ; <nl> + try { <nl> + structConstructor = structureSubType . getDeclaredConstructor ( ) ; <nl> + } catch ( NoSuchMethodException e ) { <nl> + if ( structureSubType = = Structure . FFIType . class ) { <nl> + / / ignore this case <nl> + / / @ todo Allow user to pass in list of classes for which to skip construction ? <nl> + return ; <nl> + } <nl> + throw new RuntimeException ( " Parameterless constructor failed on Structure sub type : " + structureSubType . getName ( ) ) ; <nl> + } <nl> + <nl> + if ( ! structConstructor . isAccessible ( ) ) { <nl> + structConstructor . setAccessible ( true ) ; <nl> + } <nl> + final Structure structure ; <nl> + try { <nl> + structure = structConstructor . newInstance ( ) ; <nl> + } catch ( InstantiationException e ) { <nl> + throw new RuntimeException ( " Could not instantiate Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> + } catch ( IllegalAccessException e ) { <nl> + throw new RuntimeException ( " Could not instantiate Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> + } catch ( InvocationTargetException e ) { <nl> + / / this is triggered by checks in Structure . getFields ( ) , and static loadlibrary ( ) failures <nl> + if ( ignoreConstructorError ! = null ) { <nl> + final String structSubtypeName = structureSubType . getName ( ) ; <nl> + for ( final String classPrefix : ignoreConstructorError ) { <nl> + if ( structSubtypeName . startsWith ( classPrefix ) ) { <nl> + return ; <nl> + } <nl> + } <nl> + } <nl> + throw new RuntimeException ( " Could not instantiate Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> + } <nl> + <nl> + if ( ! methodGetFieldOrder . isAccessible ( ) ) { <nl> + methodGetFieldOrder . setAccessible ( true ) ; <nl> + } <nl> + final List methodCallFieldList ; <nl> + try { <nl> + methodCallFieldList = ( List ) methodGetFieldOrder . invoke ( structure ) ; <nl> + } catch ( IllegalAccessException e ) { <nl> + throw new RuntimeException ( " Could not invoke getFieldOrder ( ) on Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> + } catch ( InvocationTargetException e ) { <nl> + throw new RuntimeException ( " Could not invoke getFieldOrder ( ) on Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> + } <nl> + <nl> + final Field [ ] actualFields = structureSubType . getFields ( ) ; / / include fields from super classes <nl> + final List actualFieldNames = new ArrayList ( actualFields . length ) ; <nl> + for ( final Field field : actualFields ) { <nl> + / / ignore static fields <nl> + if ( ! Modifier . isStatic ( field . getModifiers ( ) ) ) { <nl> + final String actualFieldName = field . getName ( ) ; <nl> + if ( ! methodCallFieldList . contains ( actualFieldName ) ) { <nl> + throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldList <nl> + + " ] does not include declared field : " + actualFieldName ) ; <nl> + } <nl> + actualFieldNames . add ( actualFieldName ) ; <nl> + } <nl> + } <nl> + <nl> + for ( final Object methodCallField : methodCallFieldList ) { <nl> + if ( ! actualFieldNames . contains ( methodCallField ) ) { <nl> + throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldList <nl> + + " ] includes undeclared field : " + methodCallField ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Find the getFieldOrder ( ) method in the given class , or any of it ' s parents . <nl> + * @ param structureSubType a structure sub type <nl> + * @ return the getFieldOrder ( ) method found in the given class , or any of it ' s parents . <nl> + * / <nl> + private static Method getMethodGetFieldOrder ( Class < ? extends Structure > structureSubType ) { <nl> + final Method methodGetFieldOrder ; <nl> + try { <nl> + methodGetFieldOrder = structureSubType . getDeclaredMethod ( " getFieldOrder " , new Class [ ] { } ) ; <nl> + } catch ( NoSuchMethodException e ) { <nl> + if ( structureSubType . getSuperclass ( ) ! = null ) { <nl> + / / look for method in parent <nl> + return getMethodGetFieldOrder ( ( Class < ? extends Structure > ) structureSubType . getSuperclass ( ) ) ; <nl> + } <nl> + throw new IllegalArgumentException ( " The Structure sub type : " + structureSubType . getName ( ) <nl> + + " must define the method : getFieldOrder ( ) . " <nl> + + " See the javadoc for Structure . getFieldOrder ( ) for details . " , e ) ; <nl> + } <nl> + return methodGetFieldOrder ; <nl> + } <nl> + } <nl> diff - - git a / test / com / sun / jna / StructureFieldOrderInspectorTest . java b / test / com / sun / jna / StructureFieldOrderInspectorTest . java <nl> new file mode 100644 <nl> index 0000000 . . ee973c0 <nl> - - - / dev / null <nl> + + + b / test / com / sun / jna / StructureFieldOrderInspectorTest . java <nl> @ @ - 0 , 0 + 1 , 190 @ @ <nl> + package com . sun . jna ; <nl> + <nl> + import junit . framework . TestCase ; <nl> + <nl> + import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + import java . util . Set ; <nl> + <nl> + / * * <nl> + * Test utility class for inspecting { @ link com . sun . jna . Structure # getFieldOrder ( ) } methods . <nl> + * <nl> + * @ author Dan Rollo <nl> + * Date : 1 / 17 / 13 <nl> + * Time : 4 : 29 PM <nl> + * / <nl> + public class StructureFieldOrderInspectorTest extends TestCase { <nl> + <nl> + private String origPropJNANoSys ; <nl> + <nl> + protected void setUp ( ) { <nl> + origPropJNANoSys = System . getProperty ( " jna . nosys " ) ; <nl> + System . setProperty ( " jna . nosys " , " true " ) ; / / would be set by ant script , set here for IDE usage <nl> + } <nl> + <nl> + protected void tearDown ( ) { <nl> + if ( origPropJNANoSys = = null ) { <nl> + System . getProperties ( ) . remove ( " jna . nosys " ) ; <nl> + } else { <nl> + System . setProperty ( " jna . nosys " , origPropJNANoSys ) ; <nl> + } <nl> + } <nl> + <nl> + <nl> + public void testFindStructureSubClasses ( ) { <nl> + <nl> + final Set < Class < ? extends Structure > > classes = StructureFieldOrderInspector . findSubTypesOfStructure ( Platform . class ) ; <nl> + <nl> + assertTrue ( " Found no Structure sub types . " , classes . size ( ) > 0 ) ; <nl> + <nl> + for ( final Class < ? extends Structure > structureSubType : classes ) { <nl> + assertTrue ( structureSubType . getName ( ) , Structure . class . isAssignableFrom ( structureSubType ) ) ; <nl> + } <nl> + } <nl> + <nl> + public void testCheckMethodGetFieldOrderExisting ( ) { <nl> + StructureFieldOrderInspector . checkMethodGetFieldOrder ( StructureByValueTest . TestNativeMappedInStructure . class , null ) ; <nl> + } <nl> + <nl> + public void testCheckMethodGetFieldOrderTagInterface ( ) { <nl> + StructureFieldOrderInspector . checkMethodGetFieldOrder ( StructureByValueTest . TestNativeMappedInStructure . ByValue . class , null ) ; <nl> + } <nl> + <nl> + <nl> + private static final class MyStructMissingField extends Structure { <nl> + @ SuppressWarnings ( " UnusedDeclaration " ) <nl> + public String missingDeclaredField ; <nl> + <nl> + @ Override <nl> + protected List getFieldOrder ( ) { <nl> + / / noinspection unchecked <nl> + return Arrays . asList ( ) ; <nl> + } <nl> + } <nl> + public void testCheckMethodGetFieldOrderMissingField ( ) throws Exception { <nl> + try { <nl> + StructureFieldOrderInspector . checkMethodGetFieldOrder ( MyStructMissingField . class , null ) ; <nl> + fail ( " Expected Error : Structure . getFieldOrder ( ) . . . " ) ; <nl> + } catch ( RuntimeException e ) { <nl> + assertTrue ( e . getCause ( ) . getCause ( ) . getMessage ( ) . contains ( " not match declared field names " ) ) ; <nl> + } <nl> + } <nl> + <nl> + private static final class MyStructExtraField extends Structure { <nl> + @ Override <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( " extraField " ) ; <nl> + } <nl> + } <nl> + public void testCheckMethodGetFieldOrderExtraField ( ) throws Exception { <nl> + try { <nl> + StructureFieldOrderInspector . checkMethodGetFieldOrder ( MyStructExtraField . class , null ) ; <nl> + fail ( " Expected Error : Structure . getFieldOrder ( ) . . . " ) ; <nl> + } catch ( RuntimeException e ) { <nl> + assertTrue ( e . getCause ( ) . getCause ( ) . getMessage ( ) . contains ( " not match declared field names " ) ) ; <nl> + } <nl> + } <nl> + <nl> + private static final class MyStructStaticFieldOnlyStatic extends Structure { <nl> + public static long myStaticField = - 1 ; <nl> + <nl> + @ Override <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( ) ; <nl> + } <nl> + } <nl> + / * * <nl> + * / / @ todo Seems this may be a bug . Error below occurs if Structure has no instance field ( and only a static field ) , like : MyStructStaticFieldOnlyStatic . <nl> + java . lang . RuntimeException : Could not instantiate Structure sub type : com . sun . jna . StructureFieldOrderInspectorTest $ MyStructStaticFieldOnlyStatic <nl> + at com . sun . jna . StructureFieldOrderInspector . checkMethodGetFieldOrder ( StructureFieldOrderInspector . java : 146 ) <nl> + at com . sun . jna . StructureFieldOrderInspectorTest . testCheckMethodGetFieldOrderStaticFieldOnlyStatic ( StructureFieldOrderInspectorTest . java : 111 ) <nl> + at sun . reflect . NativeMethodAccessorImpl . invoke0 ( Native Method ) <nl> + at sun . reflect . NativeMethodAccessorImpl . invoke ( NativeMethodAccessorImpl . java : 57 ) <nl> + at sun . reflect . DelegatingMethodAccessorImpl . invoke ( DelegatingMethodAccessorImpl . java : 43 ) <nl> + at com . intellij . junit3 . JUnit3IdeaTestRunner . doRun ( JUnit3IdeaTestRunner . java : 139 ) <nl> + at com . intellij . junit3 . JUnit3IdeaTestRunner . startRunnerWithArgs ( JUnit3IdeaTestRunner . java : 52 ) <nl> + at com . intellij . rt . execution . junit . JUnitStarter . prepareStreamsAndStart ( JUnitStarter . java : 195 ) <nl> + at com . intellij . rt . execution . junit . JUnitStarter . main ( JUnitStarter . java : 63 ) <nl> + at sun . reflect . NativeMethodAccessorImpl . invoke0 ( Native Method ) <nl> + at sun . reflect . NativeMethodAccessorImpl . invoke ( NativeMethodAccessorImpl . java : 57 ) <nl> + at com . intellij . rt . execution . application . AppMain . main ( AppMain . java : 120 ) <nl> + Caused by : java . lang . reflect . InvocationTargetException <nl> + at sun . reflect . NativeConstructorAccessorImpl . newInstance0 ( Native Method ) <nl> + at sun . reflect . NativeConstructorAccessorImpl . newInstance ( NativeConstructorAccessorImpl . java : 57 ) <nl> + at sun . reflect . DelegatingConstructorAccessorImpl . newInstance ( DelegatingConstructorAccessorImpl . java : 45 ) <nl> + at java . lang . reflect . Constructor . newInstance ( Constructor . java : 532 ) <nl> + at com . sun . jna . StructureFieldOrderInspector . checkMethodGetFieldOrder ( StructureFieldOrderInspector . java : 131 ) <nl> + . . . 22 more <nl> + Caused by : java . lang . IllegalArgumentException : Structure class com . sun . jna . StructureFieldOrderInspectorTest $ MyStructStaticFieldOnlyStatic has unknown size ( ensure all fields are public ) <nl> + at com . sun . jna . Structure . deriveLayout ( Structure . java : 1108 ) <nl> + at com . sun . jna . Structure . calculateSize ( Structure . java : 908 ) <nl> + at com . sun . jna . Structure . calculateSize ( Structure . java : 896 ) <nl> + at com . sun . jna . Structure . allocateMemory ( Structure . java : 357 ) <nl> + at com . sun . jna . Structure . < init > ( Structure . java : 191 ) <nl> + at com . sun . jna . Structure . < init > ( Structure . java : 180 ) <nl> + at com . sun . jna . Structure . < init > ( Structure . java : 167 ) <nl> + at com . sun . jna . Structure . < init > ( Structure . java : 159 ) <nl> + at com . sun . jna . StructureFieldOrderInspectorTest $ MyStructStaticFieldOnlyStatic . < init > ( StructureFieldOrderInspectorTest . java : 89 ) <nl> + . . . 27 more <nl> + * / <nl> + / * <nl> + public void testCheckMethodGetFieldOrderStaticFieldOnlyStatic ( ) throws Exception { <nl> + StructureFieldOrderInspector . checkMethodGetFieldOrder ( MyStructStaticFieldOnlyStatic . class , null ) ; <nl> + } <nl> + / / * / <nl> + <nl> + private static final class MyStructStaticField extends Structure { <nl> + public long instanceField ; / / @ todo Why error if at least one instance field does not exist ? see above : MyStructStaticFieldOnlyStatic <nl> + public static long myStaticField = - 1 ; <nl> + <nl> + @ Override <nl> + protected List getFieldOrder ( ) { <nl> + / / return Arrays . asList ( ) ; <nl> + return Arrays . asList ( " instanceField " ) ; <nl> + } <nl> + } <nl> + public void testCheckMethodGetFieldOrderStaticField ( ) throws Exception { <nl> + StructureFieldOrderInspector . checkMethodGetFieldOrder ( MyStructStaticField . class , null ) ; <nl> + } <nl> + <nl> + <nl> + private static class MyStructSuper extends Structure { <nl> + public long instanceField ; <nl> + <nl> + @ Override <nl> + protected List getFieldOrder ( ) { <nl> + / / return Arrays . asList ( ) ; <nl> + return Arrays . asList ( " instanceField " ) ; <nl> + } <nl> + } <nl> + private static final class MyStructChildEmpty extends MyStructSuper { <nl> + } <nl> + public void testCheckMethodGetFieldOrderSuperImplOnly ( ) throws Exception { <nl> + StructureFieldOrderInspector . checkMethodGetFieldOrder ( MyStructChildEmpty . class , null ) ; <nl> + } <nl> + <nl> + <nl> + public void testCheckMethodGetFieldOrderWithAbstractSubtype ( ) throws Exception { <nl> + StructureFieldOrderInspector . checkMethodGetFieldOrder ( Union . class , null ) ; <nl> + } <nl> + <nl> + public void testCheckMethodGetFieldOrderWithIgnoreCtorError ( ) throws Exception { <nl> + final List < String > ignoreConstructorError = new ArrayList < String > ( ) ; <nl> + ignoreConstructorError . add ( StructureFieldOrderInspectorTest . class . getName ( ) ) ; <nl> + StructureFieldOrderInspector . checkMethodGetFieldOrder ( MyStructExtraField . class , ignoreConstructorError ) ; <nl> + } <nl> + <nl> + public void testCheckStructureGetFieldOrder ( ) throws Exception { <nl> + StructureFieldOrderInspector . checkStructureGetFieldOrder ( Platform . class , null ) ; <nl> + } <nl> + <nl> + public void testBatchCheckStructureGetFieldOrder ( ) throws Exception { <nl> + try { <nl> + StructureFieldOrderInspector . batchCheckStructureGetFieldOrder ( StructureTest . class , null ) ; <nl> + fail ( " Expected structure failures " ) ; <nl> + } catch ( RuntimeException e ) { <nl> + assertTrue ( e . getMessage ( ) . startsWith ( " Some Structure sub types " ) ) ; <nl> + } <nl> + } <nl> + }
diff - - git a / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java b / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java <nl> deleted file mode 100644 <nl> index ebdd8b2 . . 0000000 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java <nl> + + + / dev / null <nl> @ @ - 1 , 76 + 0 , 0 @ @ <nl> - / * Copyright ( c ) 2007 - 2008 Timothy Wall , All Rights Reserved <nl> - * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> - * / <nl> - package com . sun . jna . platform ; <nl> - <nl> - <nl> - import com . sun . jna . Platform ; <nl> - import com . sun . jna . platform . unix . X11 ; <nl> - import com . sun . jna . platform . win32 . DBT ; <nl> - import junit . framework . TestCase ; <nl> - <nl> - import com . sun . jna . StructureFieldOrderInspector ; <nl> - <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - <nl> - public class StructureFieldOrderTest extends TestCase { <nl> - <nl> - private String origPropJNANoSys ; <nl> - <nl> - protected void setUp ( ) { <nl> - origPropJNANoSys = System . getProperty ( " jna . nosys " ) ; <nl> - System . setProperty ( " jna . nosys " , " true " ) ; / / would be set by ant script , set here for IDE usage <nl> - } <nl> - <nl> - protected void tearDown ( ) { <nl> - if ( origPropJNANoSys = = null ) { <nl> - System . getProperties ( ) . remove ( " jna . nosys " ) ; <nl> - } else { <nl> - System . setProperty ( " jna . nosys " , origPropJNANoSys ) ; <nl> - } <nl> - } <nl> - <nl> - <nl> - public void testMethodGetFieldOrder ( ) { <nl> - final List < String > ignoreConstructorError = new ArrayList < String > ( ) ; <nl> - <nl> - if ( Platform . isWindows ( ) ) { <nl> - ignoreConstructorError . add ( X11 . class . getName ( ) + " $ " ) ; <nl> - } else { <nl> - ignoreConstructorError . add ( com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 1 . class . getName ( ) ) ; <nl> - ignoreConstructorError . add ( com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 4 . class . getName ( ) ) ; <nl> - ignoreConstructorError . add ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVICE _ INTERFACE _ DATA . class . getName ( ) ) ; <nl> - ignoreConstructorError . add ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVINFO _ DATA . class . getName ( ) ) ; <nl> - } <nl> - <nl> - ignoreConstructorError . add ( DBT . DEV _ BROADCAST _ HANDLE . class . getName ( ) ) ; / / manually validated by wolftobias <nl> - ignoreConstructorError . add ( DBT . DEV _ BROADCAST _ PORT . class . getName ( ) ) ; / / manually validated by wolftobias <nl> - <nl> - StructureFieldOrderInspector . batchCheckStructureGetFieldOrder ( FileUtils . class , ignoreConstructorError ) ; <nl> - } <nl> - <nl> - / / test below is helpful when investigating failure cause of a specific Structure class , it shows full causes and traces . <nl> - / * <nl> - public void testMethodGetFieldOrderSingleClass ( ) { <nl> - final List < String > ignoreConstructorError = new ArrayList < String > ( ) ; <nl> - <nl> - if ( Platform . isWindows ( ) ) { <nl> - ignoreConstructorError . add ( X11 . class . getName ( ) + " $ " ) ; <nl> - } <nl> - <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVICE _ INTERFACE _ DATA . class , ignoreConstructorError ) ; <nl> - } <nl> - / / * / <nl> - <nl> - <nl> - } <nl> diff - - git a / test / com / sun / jna / StructureFieldOrderInspector . java b / test / com / sun / jna / StructureFieldOrderInspector . java <nl> deleted file mode 100644 <nl> index 8591823 . . 0000000 <nl> - - - a / test / com / sun / jna / StructureFieldOrderInspector . java <nl> + + + / dev / null <nl> @ @ - 1 , 196 + 0 , 0 @ @ <nl> - package com . sun . jna ; <nl> - <nl> - import org . reflections . Reflections ; <nl> - import org . reflections . scanners . ResourcesScanner ; <nl> - import org . reflections . scanners . SubTypesScanner ; <nl> - import org . reflections . util . ClasspathHelper ; <nl> - import org . reflections . util . ConfigurationBuilder ; <nl> - <nl> - import java . lang . reflect . * ; <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - import java . util . Set ; <nl> - <nl> - / * * <nl> - * Utility class for detecting missing { @ link com . sun . jna . Structure # getFieldOrder ( ) } methods . <nl> - * <nl> - * This class could be moved to the unit test tree , but them reusing it in the ' platform ' project would require <nl> - * publishing this test tree . <nl> - * <nl> - * @ author Dan Rollo <nl> - * Date : 1 / 17 / 13 <nl> - * Time : 4 : 08 PM <nl> - * / <nl> - public final class StructureFieldOrderInspector { <nl> - <nl> - private StructureFieldOrderInspector ( ) { } <nl> - <nl> - / * * <nl> - * Search for Structure sub types in the source tree of the given class , and validate the getFieldOrder ( ) method , <nl> - * and collects all errors into one exception . <nl> - * <nl> - * @ param classDeclaredInSourceTreeToSearch a class who ' s source tree will be searched for Structure sub types . <nl> - * @ param ignoreConstructorError list of classname prefixes for which to ignore construction errors . <nl> - * / <nl> - public static void batchCheckStructureGetFieldOrder ( final Class classDeclaredInSourceTreeToSearch , <nl> - final List < String > ignoreConstructorError ) { <nl> - final Set < Class < ? extends Structure > > classes = StructureFieldOrderInspector . findSubTypesOfStructure ( classDeclaredInSourceTreeToSearch ) ; <nl> - <nl> - final List < Throwable > problems = new ArrayList < Throwable > ( ) ; <nl> - <nl> - for ( final Class < ? extends Structure > structureSubType : classes ) { <nl> - try { <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( structureSubType , ignoreConstructorError ) ; <nl> - } catch ( Throwable t ) { <nl> - problems . add ( t ) ; <nl> - } <nl> - } <nl> - <nl> - if ( problems . size ( ) > 0 ) { <nl> - String msg = " " ; <nl> - for ( final Throwable t : problems ) { <nl> - msg + = t . getMessage ( ) + " ; \ n " ; <nl> - } <nl> - <nl> - throw new RuntimeException ( " Some Structure sub types ( " + problems . size ( ) + " ) have problems with getFieldOrder ( ) : \ n " + msg ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Search for Structure sub types in the source tree of the given class , and validate the getFieldOrder ( ) method . <nl> - * <nl> - * @ param classDeclaredInSourceTreeToSearch a class who ' s source tree will be searched for Structure sub types . <nl> - * @ param ignoreConstructorError list of classname prefixes for which to ignore construction errors . <nl> - * / <nl> - public static void checkStructureGetFieldOrder ( final Class classDeclaredInSourceTreeToSearch , <nl> - final List < String > ignoreConstructorError ) { <nl> - final Set < Class < ? extends Structure > > classes = StructureFieldOrderInspector . findSubTypesOfStructure ( classDeclaredInSourceTreeToSearch ) ; <nl> - <nl> - for ( final Class < ? extends Structure > structureSubType : classes ) { <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( structureSubType , ignoreConstructorError ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Find all classes that extend { @ link Structure } . <nl> - * / <nl> - public static Set < Class < ? extends Structure > > findSubTypesOfStructure ( final Class classDeclaredInSourceTreeToSearch ) { <nl> - <nl> - / / use : http : / / code . google . com / p / reflections / <nl> - <nl> - final Reflections reflections = new Reflections ( new ConfigurationBuilder ( ) <nl> - . setScanners ( new SubTypesScanner ( false / * don ' t exclude Object . class * / ) , new ResourcesScanner ( ) ) <nl> - . setUrls ( ClasspathHelper . forClass ( classDeclaredInSourceTreeToSearch ) ) <nl> - ) ; <nl> - <nl> - return reflections . getSubTypesOf ( Structure . class ) ; <nl> - } <nl> - <nl> - <nl> - public static void checkMethodGetFieldOrder ( final Class < ? extends Structure > structureSubType , <nl> - final List < String > ignoreConstructorError ) { <nl> - <nl> - if ( Structure . ByValue . class . isAssignableFrom ( structureSubType ) <nl> - | | Structure . ByReference . class . isAssignableFrom ( structureSubType ) ) { <nl> - <nl> - / / ignore tagging interfaces <nl> - return ; <nl> - } <nl> - <nl> - final Method methodGetFieldOrder = getMethodGetFieldOrder ( structureSubType ) ; <nl> - <nl> - <nl> - if ( Modifier . isAbstract ( structureSubType . getModifiers ( ) ) ) { <nl> - / / do not try to construct abstract Structure sub types <nl> - return ; <nl> - } <nl> - final Constructor < ? extends Structure > structConstructor ; <nl> - try { <nl> - structConstructor = structureSubType . getDeclaredConstructor ( ) ; <nl> - } catch ( NoSuchMethodException e ) { <nl> - if ( structureSubType = = Structure . FFIType . class ) { <nl> - / / ignore this case <nl> - / / @ todo Allow user to pass in list of classes for which to skip construction ? <nl> - return ; <nl> - } <nl> - throw new RuntimeException ( " Parameterless constructor failed on Structure sub type : " + structureSubType . getName ( ) ) ; <nl> - } <nl> - <nl> - if ( ! structConstructor . isAccessible ( ) ) { <nl> - structConstructor . setAccessible ( true ) ; <nl> - } <nl> - final Structure structure ; <nl> - try { <nl> - structure = structConstructor . newInstance ( ) ; <nl> - } catch ( InstantiationException e ) { <nl> - throw new RuntimeException ( " Could not instantiate Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> - } catch ( IllegalAccessException e ) { <nl> - throw new RuntimeException ( " Could not instantiate Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> - } catch ( InvocationTargetException e ) { <nl> - / / this is triggered by checks in Structure . getFields ( ) , and static loadlibrary ( ) failures <nl> - if ( ignoreConstructorError ! = null ) { <nl> - final String structSubtypeName = structureSubType . getName ( ) ; <nl> - for ( final String classPrefix : ignoreConstructorError ) { <nl> - if ( structSubtypeName . startsWith ( classPrefix ) ) { <nl> - return ; <nl> - } <nl> - } <nl> - } <nl> - throw new RuntimeException ( " Could not instantiate Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> - } <nl> - <nl> - if ( ! methodGetFieldOrder . isAccessible ( ) ) { <nl> - methodGetFieldOrder . setAccessible ( true ) ; <nl> - } <nl> - final List methodCallFieldList ; <nl> - try { <nl> - methodCallFieldList = ( List ) methodGetFieldOrder . invoke ( structure ) ; <nl> - } catch ( IllegalAccessException e ) { <nl> - throw new RuntimeException ( " Could not invoke getFieldOrder ( ) on Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> - } catch ( InvocationTargetException e ) { <nl> - throw new RuntimeException ( " Could not invoke getFieldOrder ( ) on Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> - } <nl> - <nl> - final Field [ ] actualFields = structureSubType . getFields ( ) ; / / include fields from super classes <nl> - final List actualFieldNames = new ArrayList ( actualFields . length ) ; <nl> - for ( final Field field : actualFields ) { <nl> - / / ignore static fields <nl> - if ( ! Modifier . isStatic ( field . getModifiers ( ) ) ) { <nl> - final String actualFieldName = field . getName ( ) ; <nl> - if ( ! methodCallFieldList . contains ( actualFieldName ) ) { <nl> - throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldList <nl> - + " ] does not include declared field : " + actualFieldName ) ; <nl> - } <nl> - actualFieldNames . add ( actualFieldName ) ; <nl> - } <nl> - } <nl> - <nl> - for ( final Object methodCallField : methodCallFieldList ) { <nl> - if ( ! actualFieldNames . contains ( methodCallField ) ) { <nl> - throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldList <nl> - + " ] includes undeclared field : " + methodCallField ) ; <nl> - } <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Find the getFieldOrder ( ) method in the given class , or any of it ' s parents . <nl> - * @ param structureSubType a structure sub type <nl> - * @ return the getFieldOrder ( ) method found in the given class , or any of it ' s parents . <nl> - * / <nl> - private static Method getMethodGetFieldOrder ( Class < ? extends Structure > structureSubType ) { <nl> - final Method methodGetFieldOrder ; <nl> - try { <nl> - methodGetFieldOrder = structureSubType . getDeclaredMethod ( " getFieldOrder " , new Class [ ] { } ) ; <nl> - } catch ( NoSuchMethodException e ) { <nl> - if ( structureSubType . getSuperclass ( ) ! = null ) { <nl> - / / look for method in parent <nl> - return getMethodGetFieldOrder ( ( Class < ? extends Structure > ) structureSubType . getSuperclass ( ) ) ; <nl> - } <nl> - throw new IllegalArgumentException ( " The Structure sub type : " + structureSubType . getName ( ) <nl> - + " must define the method : getFieldOrder ( ) . " <nl> - + " See the javadoc for Structure . getFieldOrder ( ) for details . " , e ) ; <nl> - } <nl> - return methodGetFieldOrder ; <nl> - } <nl> - } <nl> diff - - git a / test / com / sun / jna / StructureFieldOrderInspectorTest . java b / test / com / sun / jna / StructureFieldOrderInspectorTest . java <nl> deleted file mode 100644 <nl> index ee973c0 . . 0000000 <nl> - - - a / test / com / sun / jna / StructureFieldOrderInspectorTest . java <nl> + + + / dev / null <nl> @ @ - 1 , 190 + 0 , 0 @ @ <nl> - package com . sun . jna ; <nl> - <nl> - import junit . framework . TestCase ; <nl> - <nl> - import java . util . ArrayList ; <nl> - import java . util . Arrays ; <nl> - import java . util . List ; <nl> - import java . util . Set ; <nl> - <nl> - / * * <nl> - * Test utility class for inspecting { @ link com . sun . jna . Structure # getFieldOrder ( ) } methods . <nl> - * <nl> - * @ author Dan Rollo <nl> - * Date : 1 / 17 / 13 <nl> - * Time : 4 : 29 PM <nl> - * / <nl> - public class StructureFieldOrderInspectorTest extends TestCase { <nl> - <nl> - private String origPropJNANoSys ; <nl> - <nl> - protected void setUp ( ) { <nl> - origPropJNANoSys = System . getProperty ( " jna . nosys " ) ; <nl> - System . setProperty ( " jna . nosys " , " true " ) ; / / would be set by ant script , set here for IDE usage <nl> - } <nl> - <nl> - protected void tearDown ( ) { <nl> - if ( origPropJNANoSys = = null ) { <nl> - System . getProperties ( ) . remove ( " jna . nosys " ) ; <nl> - } else { <nl> - System . setProperty ( " jna . nosys " , origPropJNANoSys ) ; <nl> - } <nl> - } <nl> - <nl> - <nl> - public void testFindStructureSubClasses ( ) { <nl> - <nl> - final Set < Class < ? extends Structure > > classes = StructureFieldOrderInspector . findSubTypesOfStructure ( Platform . class ) ; <nl> - <nl> - assertTrue ( " Found no Structure sub types . " , classes . size ( ) > 0 ) ; <nl> - <nl> - for ( final Class < ? extends Structure > structureSubType : classes ) { <nl> - assertTrue ( structureSubType . getName ( ) , Structure . class . isAssignableFrom ( structureSubType ) ) ; <nl> - } <nl> - } <nl> - <nl> - public void testCheckMethodGetFieldOrderExisting ( ) { <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( StructureByValueTest . TestNativeMappedInStructure . class , null ) ; <nl> - } <nl> - <nl> - public void testCheckMethodGetFieldOrderTagInterface ( ) { <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( StructureByValueTest . TestNativeMappedInStructure . ByValue . class , null ) ; <nl> - } <nl> - <nl> - <nl> - private static final class MyStructMissingField extends Structure { <nl> - @ SuppressWarnings ( " UnusedDeclaration " ) <nl> - public String missingDeclaredField ; <nl> - <nl> - @ Override <nl> - protected List getFieldOrder ( ) { <nl> - / / noinspection unchecked <nl> - return Arrays . asList ( ) ; <nl> - } <nl> - } <nl> - public void testCheckMethodGetFieldOrderMissingField ( ) throws Exception { <nl> - try { <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( MyStructMissingField . class , null ) ; <nl> - fail ( " Expected Error : Structure . getFieldOrder ( ) . . . " ) ; <nl> - } catch ( RuntimeException e ) { <nl> - assertTrue ( e . getCause ( ) . getCause ( ) . getMessage ( ) . contains ( " not match declared field names " ) ) ; <nl> - } <nl> - } <nl> - <nl> - private static final class MyStructExtraField extends Structure { <nl> - @ Override <nl> - protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( " extraField " ) ; <nl> - } <nl> - } <nl> - public void testCheckMethodGetFieldOrderExtraField ( ) throws Exception { <nl> - try { <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( MyStructExtraField . class , null ) ; <nl> - fail ( " Expected Error : Structure . getFieldOrder ( ) . . . " ) ; <nl> - } catch ( RuntimeException e ) { <nl> - assertTrue ( e . getCause ( ) . getCause ( ) . getMessage ( ) . contains ( " not match declared field names " ) ) ; <nl> - } <nl> - } <nl> - <nl> - private static final class MyStructStaticFieldOnlyStatic extends Structure { <nl> - public static long myStaticField = - 1 ; <nl> - <nl> - @ Override <nl> - protected List getFieldOrder ( ) { <nl> - return Arrays . asList ( ) ; <nl> - } <nl> - } <nl> - / * * <nl> - * / / @ todo Seems this may be a bug . Error below occurs if Structure has no instance field ( and only a static field ) , like : MyStructStaticFieldOnlyStatic . <nl> - java . lang . RuntimeException : Could not instantiate Structure sub type : com . sun . jna . StructureFieldOrderInspectorTest $ MyStructStaticFieldOnlyStatic <nl> - at com . sun . jna . StructureFieldOrderInspector . checkMethodGetFieldOrder ( StructureFieldOrderInspector . java : 146 ) <nl> - at com . sun . jna . StructureFieldOrderInspectorTest . testCheckMethodGetFieldOrderStaticFieldOnlyStatic ( StructureFieldOrderInspectorTest . java : 111 ) <nl> - at sun . reflect . NativeMethodAccessorImpl . invoke0 ( Native Method ) <nl> - at sun . reflect . NativeMethodAccessorImpl . invoke ( NativeMethodAccessorImpl . java : 57 ) <nl> - at sun . reflect . DelegatingMethodAccessorImpl . invoke ( DelegatingMethodAccessorImpl . java : 43 ) <nl> - at com . intellij . junit3 . JUnit3IdeaTestRunner . doRun ( JUnit3IdeaTestRunner . java : 139 ) <nl> - at com . intellij . junit3 . JUnit3IdeaTestRunner . startRunnerWithArgs ( JUnit3IdeaTestRunner . java : 52 ) <nl> - at com . intellij . rt . execution . junit . JUnitStarter . prepareStreamsAndStart ( JUnitStarter . java : 195 ) <nl> - at com . intellij . rt . execution . junit . JUnitStarter . main ( JUnitStarter . java : 63 ) <nl> - at sun . reflect . NativeMethodAccessorImpl . invoke0 ( Native Method ) <nl> - at sun . reflect . NativeMethodAccessorImpl . invoke ( NativeMethodAccessorImpl . java : 57 ) <nl> - at com . intellij . rt . execution . application . AppMain . main ( AppMain . java : 120 ) <nl> - Caused by : java . lang . reflect . InvocationTargetException <nl> - at sun . reflect . NativeConstructorAccessorImpl . newInstance0 ( Native Method ) <nl> - at sun . reflect . NativeConstructorAccessorImpl . newInstance ( NativeConstructorAccessorImpl . java : 57 ) <nl> - at sun . reflect . DelegatingConstructorAccessorImpl . newInstance ( DelegatingConstructorAccessorImpl . java : 45 ) <nl> - at java . lang . reflect . Constructor . newInstance ( Constructor . java : 532 ) <nl> - at com . sun . jna . StructureFieldOrderInspector . checkMethodGetFieldOrder ( StructureFieldOrderInspector . java : 131 ) <nl> - . . . 22 more <nl> - Caused by : java . lang . IllegalArgumentException : Structure class com . sun . jna . StructureFieldOrderInspectorTest $ MyStructStaticFieldOnlyStatic has unknown size ( ensure all fields are public ) <nl> - at com . sun . jna . Structure . deriveLayout ( Structure . java : 1108 ) <nl> - at com . sun . jna . Structure . calculateSize ( Structure . java : 908 ) <nl> - at com . sun . jna . Structure . calculateSize ( Structure . java : 896 ) <nl> - at com . sun . jna . Structure . allocateMemory ( Structure . java : 357 ) <nl> - at com . sun . jna . Structure . < init > ( Structure . java : 191 ) <nl> - at com . sun . jna . Structure . < init > ( Structure . java : 180 ) <nl> - at com . sun . jna . Structure . < init > ( Structure . java : 167 ) <nl> - at com . sun . jna . Structure . < init > ( Structure . java : 159 ) <nl> - at com . sun . jna . StructureFieldOrderInspectorTest $ MyStructStaticFieldOnlyStatic . < init > ( StructureFieldOrderInspectorTest . java : 89 ) <nl> - . . . 27 more <nl> - * / <nl> - / * <nl> - public void testCheckMethodGetFieldOrderStaticFieldOnlyStatic ( ) throws Exception { <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( MyStructStaticFieldOnlyStatic . class , null ) ; <nl> - } <nl> - / / * / <nl> - <nl> - private static final class MyStructStaticField extends Structure { <nl> - public long instanceField ; / / @ todo Why error if at least one instance field does not exist ? see above : MyStructStaticFieldOnlyStatic <nl> - public static long myStaticField = - 1 ; <nl> - <nl> - @ Override <nl> - protected List getFieldOrder ( ) { <nl> - / / return Arrays . asList ( ) ; <nl> - return Arrays . asList ( " instanceField " ) ; <nl> - } <nl> - } <nl> - public void testCheckMethodGetFieldOrderStaticField ( ) throws Exception { <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( MyStructStaticField . class , null ) ; <nl> - } <nl> - <nl> - <nl> - private static class MyStructSuper extends Structure { <nl> - public long instanceField ; <nl> - <nl> - @ Override <nl> - protected List getFieldOrder ( ) { <nl> - / / return Arrays . asList ( ) ; <nl> - return Arrays . asList ( " instanceField " ) ; <nl> - } <nl> - } <nl> - private static final class MyStructChildEmpty extends MyStructSuper { <nl> - } <nl> - public void testCheckMethodGetFieldOrderSuperImplOnly ( ) throws Exception { <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( MyStructChildEmpty . class , null ) ; <nl> - } <nl> - <nl> - <nl> - public void testCheckMethodGetFieldOrderWithAbstractSubtype ( ) throws Exception { <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( Union . class , null ) ; <nl> - } <nl> - <nl> - public void testCheckMethodGetFieldOrderWithIgnoreCtorError ( ) throws Exception { <nl> - final List < String > ignoreConstructorError = new ArrayList < String > ( ) ; <nl> - ignoreConstructorError . add ( StructureFieldOrderInspectorTest . class . getName ( ) ) ; <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( MyStructExtraField . class , ignoreConstructorError ) ; <nl> - } <nl> - <nl> - public void testCheckStructureGetFieldOrder ( ) throws Exception { <nl> - StructureFieldOrderInspector . checkStructureGetFieldOrder ( Platform . class , null ) ; <nl> - } <nl> - <nl> - public void testBatchCheckStructureGetFieldOrder ( ) throws Exception { <nl> - try { <nl> - StructureFieldOrderInspector . batchCheckStructureGetFieldOrder ( StructureTest . class , null ) ; <nl> - fail ( " Expected structure failures " ) ; <nl> - } catch ( RuntimeException e ) { <nl> - assertTrue ( e . getMessage ( ) . startsWith ( " Some Structure sub types " ) ) ; <nl> - } <nl> - } <nl> - }
diff - - git a / build . xml b / build . xml <nl> index 3e4b15e . . 577c09c 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 429 , 7 + 429 , 7 @ @ osname = macos <nl> < / zip > <nl> < / target > <nl> <nl> - < target name = " platform - jar " depends = " jar " > <nl> + < target name = " platform - jar " depends = " jar , javadoc " > <nl> < subant target = " jar " failonerror = " true " > <nl> < property name = " file . reference . jna . build " location = " $ { build } " / > <nl> < property name = " file . reference . jna . jar " location = " $ { build } / $ { jar } " / > <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> index 977c7c2 . . 9a93575 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> @ @ - 280 , 7 + 280 , 7 @ @ public abstract class Kernel32Util implements WinDef { <nl> * / <nl> public static final String getPrivateProfileString ( final String lpAppName , final String lpKeyName , final String lpDefault , final String lpFileName ) { <nl> final char buffer [ ] = new char [ 1024 ] ; <nl> - Kernel32 . INSTANCE . GetPrivateProfileString ( appName , keyName , defaultValue , buffer , new DWORD ( buffer . length ) , fileName ) ; <nl> + Kernel32 . INSTANCE . GetPrivateProfileString ( lpAppName , lpKeyName , lpDefault , buffer , new DWORD ( buffer . length ) , lpFileName ) ; <nl> return Native . toString ( buffer ) ; <nl> } <nl>
diff - - git a / src / com / sun / jna / Memory . java b / src / com / sun / jna / Memory . java <nl> index 4db70c6 . . 3d6b300 100644 <nl> - - - a / src / com / sun / jna / Memory . java <nl> + + + b / src / com / sun / jna / Memory . java <nl> @ @ - 101 , 7 + 101 , 7 @ @ public class Memory extends Pointer { <nl> * the allocated bounds . <nl> * / <nl> public Pointer share ( long offset ) { <nl> - return share ( offset , getSize ( ) - offset ) ; <nl> + return share ( offset , size ( ) - offset ) ; <nl> } <nl> <nl> / * * Provide a view of this memory using the given offset as the base <nl> @ @ - 162 , 11 + 162 , 6 @ @ public class Memory extends Pointer { <nl> clear ( size ) ; <nl> } <nl> <nl> - / * * @ deprecated use { @ link # valid ( ) } instead . * / <nl> - public boolean isValid ( ) { <nl> - return valid ( ) ; <nl> - } <nl> - <nl> / * * Returns false if the memory has been freed . * / <nl> public boolean valid ( ) { <nl> return peer ! = 0 ; <nl> @ @ - 176 , 12 + 171 , 6 @ @ public class Memory extends Pointer { <nl> return size ; <nl> } <nl> <nl> - / * * @ deprecated use { @ link # size ( ) } instead . * / <nl> - public long getSize ( ) { <nl> - return size ( ) ; <nl> - } <nl> - <nl> - <nl> / * * <nl> * Check that indirection won ' t cause us to write outside the <nl> * malloc ' ed space .
diff - - git a / www / PublishingToMavenCentral . md b / www / PublishingToMavenCentral . md <nl> index 5242a7f . . f38211d 100644 <nl> - - - a / www / PublishingToMavenCentral . md <nl> + + + b / www / PublishingToMavenCentral . md <nl> @ @ - 55 , 6 + 55 , 6 @ @ To publish a development SNAPSHOT do the following : <nl> git checkout - - <nl> ant deploy - DskipNative = true <nl> <nl> - Note : unlike stable , unchanging releases , a SNAPSHOT may be re - published at any time ( and is typically deleted after a <nl> + Note : Unlike stable , unchanging releases , a SNAPSHOT may be re - published at any time ( and is typically deleted after a <nl> full release is performed ) . <nl>
diff - - git a / www / PublishingToMavenCentral . md b / www / PublishingToMavenCentral . md <nl> index d160caf . . af05b41 100644 <nl> - - - a / www / PublishingToMavenCentral . md <nl> + + + b / www / PublishingToMavenCentral . md <nl> @ @ - 52 , 8 + 52 , 8 @ @ see : https : / / maven . java . net / content / repositories / snapshots / net / java / dev / jna / for <nl> <nl> To publish a development SNAPSHOT do the following : <nl> <nl> - * ` git checkout - - ` <nl> - * ` ant deploy - DskipNative = true ` <nl> + git checkout - - <nl> + ant deploy - DskipNative = true <nl> <nl> Note : unlike stable , unchanging releases , a SNAPSHOT may be re - published at any time ( and it typically deleted after a <nl> full release is performed ) .
diff - - git a / www / PublishingToMavenCentral . md b / www / PublishingToMavenCentral . md <nl> index 0149629 . . c517d91 100644 <nl> - - - a / www / PublishingToMavenCentral . md <nl> + + + b / www / PublishingToMavenCentral . md <nl> @ @ - 38 , 3 + 38 , 24 @ @ Every Time <nl> * Follow steps from [ release it ] ( https : / / docs . sonatype . org / display / Repository / Sonatype + OSS + Maven + Repository + Usage + Guide # SonatypeOSSMavenRepositoryUsageGuide - 8a . ReleaseIt ) <nl> * Email release notice to [ jna - users Google group ] ( http : / / groups . google . com / group / jna - users ) . <nl> * After the release is finished , increment the version in build . xml for the next development iteration . Typically , this means increment " jna . revision " by one , and append " - SNAPSHOT " to the " jna . version " property . Create new section in CHANGES . md for ' Next Release ( x . y . z ) ' . Commit and push . <nl> + <nl> + <nl> + Publish SNAPSHOT - In Between and in preparation for a Release <nl> + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> + <nl> + Before doing a full jna release , we can publish a development SNAPSHOT of the " next " release for people to test . The <nl> + SNAPSHOT will be published in the staging repository : <nl> + <nl> + https : / / maven . java . net / content / repositories / snapshots / <nl> + <nl> + see : https : / / maven . java . net / content / repositories / snapshots / net / java / dev / jna / for the various jars . <nl> + <nl> + To publish a development SNAPSHOT do the following : <nl> + <nl> + * ` git checkout - - ` <nl> + <nl> + * ` ant deploy - DskipNative = true ` <nl> + <nl> + Note : unlike stable , unchanging releases , a SNAPSHOT may be re - published at any time ( and it typically deleted after a <nl> + full release is performed ) . <nl> +
diff - - git a / www / FrequentlyAskedQuestions . md b / www / FrequentlyAskedQuestions . md <nl> index 2ed4d47 . . f41a5d6 100644 <nl> - - - a / www / FrequentlyAskedQuestions . md <nl> + + + b / www / FrequentlyAskedQuestions . md <nl> @ @ - 169 , 3 + 169 , 6 @ @ The calling overhead for a single native call using JNA interface mapping can be <nl> <nl> You might expect a speedup of about an order of magnitude moving to JNA direct mapping , and a factor of two or three moving from there to custom JNI . The actual difference will vary depending on usage and function signatures . As with any optimization process , you should determine first where you need a speed increase , and then see how much difference there is by performing targeted optimizations . The ease of programming everything in Java usually outweighs small performance gains when using custom JNI . <nl> <nl> + JNA COM support <nl> + - - - - - - - - - - - - - - - <nl> + There is a new implementation to support COM in conjunction with JNA directly . The development is relatively young , honestly the development has been finished just end of February ' 13 . Please note that fact if you use the COM support in JNA , there could be things missing or not absolutely tested or still not working . Please use the jna user group to report your experience with the JNA Com support .
diff - - git a / src / com / sun / jna / CallbackReference . java b / src / com / sun / jna / CallbackReference . java <nl> index 1f81897 . . 819f536 100644 <nl> - - - a / src / com / sun / jna / CallbackReference . java <nl> + + + b / src / com / sun / jna / CallbackReference . java <nl> @ @ - 231 , 7 + 231 , 7 @ @ class CallbackReference extends WeakReference { <nl> private Class getNativeType ( Class cls ) { <nl> if ( Structure . class . isAssignableFrom ( cls ) ) { <nl> / / Make sure we can instantiate an argument of this type <nl> - Structure . newInstance ( cls ) ; <nl> + Structure . validate ( cls ) ; <nl> if ( ! Structure . ByValue . class . isAssignableFrom ( cls ) ) <nl> return Pointer . class ; <nl> } <nl> diff - - git a / src / com / sun / jna / Function . java b / src / com / sun / jna / Function . java <nl> index 25491a5 . . 7cf8c1b 100644 <nl> - - - a / src / com / sun / jna / Function . java <nl> + + + b / src / com / sun / jna / Function . java <nl> @ @ - 375 , 9 + 375 , 8 @ @ public class Function extends Pointer { <nl> else { <nl> result = invokePointer ( callFlags , args ) ; <nl> if ( result ! = null ) { <nl> - Structure s = Structure . newInstance ( returnType ) ; <nl> - s . useMemory ( ( Pointer ) result ) ; <nl> - s . autoRead ( ) ; <nl> + Structure s = Structure . newInstance ( returnType , ( Pointer ) result ) ; <nl> + s . conditionalRead ( ) ; <nl> result = s ; <nl> } <nl> } <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 5a3f61f . . 8f1950b 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 1027 , 7 + 1027 , 7 @ @ public final class Native { <nl> if ( cls = = double . class | | cls = = Double . class ) return 8 ; <nl> if ( Structure . class . isAssignableFrom ( cls ) ) { <nl> if ( Structure . ByValue . class . isAssignableFrom ( cls ) ) { <nl> - return Structure . newInstance ( cls ) . size ( ) ; <nl> + return Structure . size ( cls ) ; <nl> } <nl> return POINTER _ SIZE ; <nl> } <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index 1231031 . . fc3bb8e 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 1852 , 4 + 1852 , 9 @ @ public abstract class Structure { <nl> private static final Pointer PLACEHOLDER _ MEMORY = new Pointer ( 0 ) { <nl> public Pointer share ( long offset , long sz ) { return this ; } <nl> } ; <nl> + <nl> + / * * Indicate whether the given Structure class can be created by JNA . * / <nl> + static void validate ( Class cls ) { <nl> + Structure . newInstance ( cls , PLACEHOLDER _ MEMORY ) ; <nl> + } <nl> } <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index d9446bb . . 1818a9b 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 41 , 6 + 41 , 13 @ @ public class CallbacksTest extends TestCase { <nl> <nl> public static class SmallTestStructure extends Structure { <nl> public double value ; <nl> + public static int allocations = 0 ; <nl> + protected void allocateMemory ( int size ) { <nl> + super . allocateMemory ( size ) ; <nl> + + + allocations ; <nl> + } <nl> + public SmallTestStructure ( ) { } <nl> + public SmallTestStructure ( Pointer p ) { super ( p ) ; read ( ) ; } <nl> protected List getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " value " } ) ; <nl> } <nl> @ @ - 411 , 6 + 418 , 7 @ @ public class CallbacksTest extends TestCase { <nl> return arg ; <nl> } <nl> } ; <nl> + SmallTestStructure . allocations = 0 ; <nl> SmallTestStructure value = lib . callStructureCallback ( cb , s ) ; <nl> assertTrue ( " Callback not called " , called [ 0 ] ) ; <nl> assertEquals ( " Wrong argument passed to callback " , s . getPointer ( ) , cbarg [ 0 ] ) ; <nl> @ @ - 419 , 6 + 427 , 9 @ @ public class CallbacksTest extends TestCase { <nl> assertEquals ( " Wrong structure return " , s . getPointer ( ) , value . getPointer ( ) ) ; <nl> assertEquals ( " Structure return not synched " , <nl> MAGIC , value . value , 0d ) ; <nl> + / / All structures involved should be created from pointers , with no <nl> + / / memory allocation at all <nl> + assertEquals ( " No structure memory should be allocated " , 0 , SmallTestStructure . allocations ) ; <nl> } <nl> <nl> public void testCallStructureArrayCallback ( ) { <nl> diff - - git a / test / com / sun / jna / ReturnTypesTest . java b / test / com / sun / jna / ReturnTypesTest . java <nl> index f35e345 . . c334d94 100644 <nl> - - - a / test / com / sun / jna / ReturnTypesTest . java <nl> + + + b / test / com / sun / jna / ReturnTypesTest . java <nl> @ @ - 36 , 6 + 36 , 13 @ @ public class ReturnTypesTest extends TestCase { <nl> <nl> public static class SimpleStructure extends Structure { <nl> public double value ; <nl> + public static int allocations = 0 ; <nl> + public SimpleStructure ( ) { } <nl> + public SimpleStructure ( Pointer p ) { super ( p ) ; read ( ) ; } <nl> + protected void allocateMemory ( int size ) { <nl> + super . allocateMemory ( size ) ; <nl> + + + allocations ; <nl> + } <nl> protected List getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " value " } ) ; <nl> } <nl> @ @ - 230 , 8 + 237 , 10 @ @ public class ReturnTypesTest extends TestCase { <nl> } <nl> <nl> public void testInvokeStructure ( ) { <nl> + SimpleStructure . allocations = 0 ; <nl> SimpleStructure s = lib . returnStaticTestStructure ( ) ; <nl> assertEquals ( " Expect test structure magic " , DOUBLE _ MAGIC , s . value , 0d ) ; <nl> + assertEquals ( " Returned Structure should allocate no memory " , 0 , SimpleStructure . allocations ) ; <nl> } <nl> <nl> public void testInvokeNullStructure ( ) { <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index 2c80f8d . . dea5175 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 352 , 8 + 352 , 9 @ @ public class StructureTest extends TestCase { <nl> } <nl> <nl> / / TODO : add ' l newInstance ( Pointer ) tests : <nl> + / / DirectCallbacksTest . testCallStructureCallback <nl> + / / DirectReturnTypesTest . testInvokeStructure <nl> / / getNativeAlignment <nl> - / / callback convert pointer to structure <nl> / / native call ( direct mode ) ( maybe not . . . ) <nl> public void testStructureFieldAvoidsSeparateMemoryAllocation ( ) { <nl> class TestStructure extends Structure {
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 2268d2d . . fba28e1 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 1 , 13 + 1 , 10 @ @ <nl> Next Release ( 3 . 5 . 2 ) <nl> = = = = = = = = = = = = = = = = = = = = <nl> <nl> - Bug Fixes <nl> - - - - - - - - - - <nl> - * [ # 183 ] ( https : / / github . com / twall / jna / pull / 183 ) : Fix ` LMAccess . GROUP _ INFO _ 3 . getFieldOrder ( ) ` to return correct fields names - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> - * [ # 187 ] ( https : / / github . com / twall / jna / pull / 187 ) : Fix ` getFieldOrder ( ) ` to return correct field names for some X11 structures - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> - <nl> Features <nl> - - - - - - - - <nl> + * Basic [ COM support ] ( https : / / github . com / twall / jna / blob / master / www / PlatformLibrary . md ) for w32 - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> + * Avoid superfluous Structure memory allocation by using Structure ( Pointer ) ctors if available - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 163 ] ( https : / / github . com / twall / jna / pull / 163 ) : The Java ` GUID ` structure can be used directly as alternative to ` Ole32Util . getGUIDFromString ( ) ` - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * [ # 163 ] ( https : / / github . com / twall / jna / pull / 163 ) : Ported Win32 ` dbt . h ` - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> * [ # 163 ] ( https : / / github . com / twall / jna / pull / 163 ) : Added Win32 ` WTSRegisterSessionNotification ( ) ` and ` WTSUnRegisterSessionNotification ( ) ` from ` Wtsapi32 . dll ` - [ @ wolftobias ] ( https : / / github . com / wolftobias ) . <nl> @ @ - 20 , 6 + 17 , 12 @ @ Features <nl> * [ # 192 ] ( https : / / github . com / twall / jna / pull / 192 ) : Added Win32 ` SHGetSpecialFolderPath ( ) ` and initialization file ( . ini ) API functions from ` kernel32 . dll ` - [ @ headcrashing ] ( https : / / github . com / headcrashing ) . <nl> * [ # 194 ] ( https : / / github . com / twall / jna / pull / 194 ) : Added Unit Test for ` CLSIDFromProgID ( ) ` - [ @ headcrashing ] ( https : / / github . com / headcrashing ) . <nl> * [ # 196 ] ( https : / / github . com / twall / jna / pull / 196 ) : Added Win32 ` RegisterWindowMessage ( ) ` and new wrapper ` User32Util ` for convenient use of ` RegisterWindowMessage ` , ` CreateWindow ` and ` CreateWindowEx ` - [ @ headcrashing ] ( https : / / github . com / headcrashing ) . <nl> + * [ # 187 ] ( https : / / github . com / twall / jna / pull / 187 ) : Allow StructureFieldOrderTest unit test in platform project to run on Linux . - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> + <nl> + Bug Fixes <nl> + - - - - - - - - - <nl> + * [ # 183 ] ( https : / / github . com / twall / jna / pull / 183 ) : Fix ` LMAccess . GROUP _ INFO _ 3 . getFieldOrder ( ) ` to return correct fields names - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> + * [ # 187 ] ( https : / / github . com / twall / jna / pull / 187 ) : Fix ` getFieldOrder ( ) ` to return correct field names for some X11 structures - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> <nl> Release 3 . 5 . 1 <nl> = = = = = = = = = = = = = = = = = = = =
diff - - git a / src / com / sun / jna / Memory . java b / src / com / sun / jna / Memory . java <nl> index 4db70c6 . . 3d6b300 100644 <nl> - - - a / src / com / sun / jna / Memory . java <nl> + + + b / src / com / sun / jna / Memory . java <nl> @ @ - 101 , 7 + 101 , 7 @ @ public class Memory extends Pointer { <nl> * the allocated bounds . <nl> * / <nl> public Pointer share ( long offset ) { <nl> - return share ( offset , getSize ( ) - offset ) ; <nl> + return share ( offset , size ( ) - offset ) ; <nl> } <nl> <nl> / * * Provide a view of this memory using the given offset as the base <nl> @ @ - 162 , 11 + 162 , 6 @ @ public class Memory extends Pointer { <nl> clear ( size ) ; <nl> } <nl> <nl> - / * * @ deprecated use { @ link # valid ( ) } instead . * / <nl> - public boolean isValid ( ) { <nl> - return valid ( ) ; <nl> - } <nl> - <nl> / * * Returns false if the memory has been freed . * / <nl> public boolean valid ( ) { <nl> return peer ! = 0 ; <nl> @ @ - 176 , 12 + 171 , 6 @ @ public class Memory extends Pointer { <nl> return size ; <nl> } <nl> <nl> - / * * @ deprecated use { @ link # size ( ) } instead . * / <nl> - public long getSize ( ) { <nl> - return size ( ) ; <nl> - } <nl> - <nl> - <nl> / * * <nl> * Check that indirection won ' t cause us to write outside the <nl> * malloc ' ed space .
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 83c35fc . . 2268d2d 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 18 , 7 + 18 , 8 @ @ Features <nl> * [ # 183 ] ( https : / / github . com / twall / jna / pull / 183 ) : Added ` StructureFieldOrderInspector ` unit test utility to scan for ` Structure ` field issues ; see : ` com . sun . jna . platform . StructureFieldOrderTest . testMethodGetFieldOrder ` - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> * [ # 187 ] ( https : / / github . com / twall / jna / pull / 187 ) : Allow ` StructureFieldOrderTest ` unit test in platform project to run on Linux - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> * [ # 192 ] ( https : / / github . com / twall / jna / pull / 192 ) : Added Win32 ` SHGetSpecialFolderPath ( ) ` and initialization file ( . ini ) API functions from ` kernel32 . dll ` - [ @ headcrashing ] ( https : / / github . com / headcrashing ) . <nl> - * [ # ] ( https : / / github . com / twall / jna / pull / ) : Added Win32 ` RegisterWindowMessage ( ) ` and new wrapper ` User32Util ` for convenient use of ` RegisterWindowMessage ` , ` CreateWindow ` and ` CreateWindowEx ` - [ @ headcrashing ] ( https : / / github . com / headcrashing ) . <nl> + * [ # 194 ] ( https : / / github . com / twall / jna / pull / 194 ) : Added Unit Test for ` CLSIDFromProgID ( ) ` - [ @ headcrashing ] ( https : / / github . com / headcrashing ) . <nl> + * [ # 196 ] ( https : / / github . com / twall / jna / pull / 196 ) : Added Win32 ` RegisterWindowMessage ( ) ` and new wrapper ` User32Util ` for convenient use of ` RegisterWindowMessage ` , ` CreateWindow ` and ` CreateWindowEx ` - [ @ headcrashing ] ( https : / / github . com / headcrashing ) . <nl> <nl> Release 3 . 5 . 1 <nl> = = = = = = = = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Ole32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Ole32Test . java <nl> index 5ee985b . . ef02e21 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Ole32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Ole32Test . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2010 Daniel Doubrovkine , All Rights Reserved <nl> + / * Copyright ( c ) 2010 , 2013 Daniel Doubrovkine , Markus Karg , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 18 , 11 + 18 , 11 @ @ import com . sun . jna . Native ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . platform . win32 . Guid . GUID ; <nl> import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> - import com . sun . jna . platform . win32 . COM . IUnknown ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> <nl> / * * <nl> * @ author dblock [ at ] dblock [ dot ] org <nl> + * @ author markus [ at ] headcrashing [ dot ] eu <nl> * / <nl> public class Ole32Test extends TestCase { <nl> <nl> @ @ - 101 , 4 + 101 , 10 @ @ public class Ole32Test extends TestCase { <nl> 	 	 if ( W32Errors . SUCCEEDED ( hrCI . intValue ( ) ) ) <nl> 	 	 	 Ole32 . INSTANCE . CoUninitialize ( ) ; <nl> 	 } <nl> + <nl> + 	 public final void testCLSIDFromProgID ( ) { <nl> + 	 final Guid . CLSID . ByReference clsid = new Guid . CLSID . ByReference ( ) ; <nl> + 	 assertEquals ( WinError . S _ OK , Ole32 . INSTANCE . CLSIDFromProgID ( " jpegfile " , clsid ) ) ; <nl> + 	 assertEquals ( " { 25336920 - 03F9 - 11CF - 8FD0 - 00AA00686F13 } " , clsid . toGuidString ( ) ) ; <nl> + 	 } <nl> }
diff - - git a / CHANGES . md b / CHANGES . md <nl> index b2c10a1 . . 83c35fc 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 18 , 6 + 18 , 7 @ @ Features <nl> * [ # 183 ] ( https : / / github . com / twall / jna / pull / 183 ) : Added ` StructureFieldOrderInspector ` unit test utility to scan for ` Structure ` field issues ; see : ` com . sun . jna . platform . StructureFieldOrderTest . testMethodGetFieldOrder ` - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> * [ # 187 ] ( https : / / github . com / twall / jna / pull / 187 ) : Allow ` StructureFieldOrderTest ` unit test in platform project to run on Linux - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> * [ # 192 ] ( https : / / github . com / twall / jna / pull / 192 ) : Added Win32 ` SHGetSpecialFolderPath ( ) ` and initialization file ( . ini ) API functions from ` kernel32 . dll ` - [ @ headcrashing ] ( https : / / github . com / headcrashing ) . <nl> + * [ # ] ( https : / / github . com / twall / jna / pull / ) : Added Win32 ` RegisterWindowMessage ( ) ` and new wrapper ` User32Util ` for convenient use of ` RegisterWindowMessage ` , ` CreateWindow ` and ` CreateWindowEx ` - [ @ headcrashing ] ( https : / / github . com / headcrashing ) . <nl> <nl> Release 3 . 5 . 1 <nl> = = = = = = = = = = = = = = = = = = = =
diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8568f6d . . 9a77eed 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 17 , 6 + 17 , 7 @ @ Features <nl> * [ # 180 ] ( https : / / github . com / twall / jna / pull / 180 ) : Fix : added missing fields in ` XEvents . getFieldOrder ( ) ` - [ @ xwizard ] ( https : / / github . com / xwizard ) . <nl> * [ # 183 ] ( https : / / github . com / twall / jna / pull / 183 ) : Added StructureFieldOrderInspector unit test utility to scan for Structure field issues . See : com . sun . jna . platform . StructureFieldOrderTest . testMethodGetFieldOrder ( ) - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> * [ # 187 ] ( https : / / github . com / twall / jna / pull / 187 ) : Allow StructureFieldOrderTest unit test in platform project to run on Linux . - [ @ bhamail ] ( https : / / github . com / bhamail ) . <nl> + * [ # 192 ] ( https : / / github . com / twall / jna / pull / 192 ) : SHGetSpecialFolderPath ( ) and initialization file ( . ini ) API function . - [ @ headcrashing ] ( https : / / github . com / headcrashing ) . <nl> <nl> Release 3 . 5 . 1 <nl> = = = = = = = = = = = = = = = = = = = =
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> index 3e97159 . . b21b3aa 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2007 Timothy Wall , All Rights Reserved <nl> + / * Copyright ( c ) 2007 , 2013 Timothy Wall , Markus Karg , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 31 , 6 + 31 , 7 @ @ import com . sun . jna . win32 . W32APIOptions ; <nl> * @ author Todd Fast , todd . fast @ sun . com <nl> * @ author twalljava @ dev . java . net <nl> * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> + * @ auhtor Markus KARG ( markus [ at ] headcrashing [ dot ] eu ) <nl> * / <nl> public interface User32 extends StdCallLibrary , WinUser { <nl> <nl> @ @ - 38 , 7 + 39 , 12 @ @ public interface User32 extends StdCallLibrary , WinUser { <nl> 	 User32 INSTANCE = ( User32 ) Native . loadLibrary ( " user32 " , User32 . class , <nl> 	 	 	 W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> <nl> - 	 / * * The cs globalclass . * / <nl> + 	 / * * <nl> + 	 * Handle for message - only window . <nl> + 	 * / <nl> + public static final HWND HWND _ MESSAGE = new HWND ( Pointer . createConstant ( - 3 ) ) ; <nl> + <nl> + / * * The cs globalclass . * / <nl> 	 int CS _ GLOBALCLASS = 0x4000 ; <nl> <nl> 	 / * * The ws ex topmost . * / <nl> @ @ - 1684 , 4 + 1690 , 17 @ @ public interface User32 extends StdCallLibrary , WinUser { <nl> 	 * error information , call GetLastError . <nl> 	 * / <nl> 	 boolean UnregisterDeviceNotification ( HDEVNOTIFY Handle ) ; <nl> + <nl> + / * * <nl> + * Defines a new window message that is guaranteed to be unique throughout the system . The message value can be used when sending or posting messages . <nl> + * <nl> + * @ param string <nl> + * The message to be registered . <nl> + * <nl> + * @ return If the message is successfully registered , the return value is a message identifier in the range 0xC000 through 0xFFFF . <nl> + * < p > <nl> + * If the function fails , the return value is zero . To get extended error information , call GetLastError . <nl> + * < / p > <nl> + * / <nl> + int RegisterWindowMessage ( String string ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / User32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / User32Util . java <nl> new file mode 100644 <nl> index 0000000 . . 616253c <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / User32Util . java <nl> @ @ - 0 , 0 + 1 , 51 @ @ <nl> + / * <nl> + * Copyright ( c ) 2013 Ralf Hamberger , Markus Karg , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or modify it under the terms of the GNU Lesser General Public License as published by the Free <nl> + * Software Foundation ; either version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , but WITHOUT ANY WARRANTY ; without even the implied warranty of MERCHANTABILITY or FITNESS FOR <nl> + * A PARTICULAR PURPOSE . See the GNU Lesser General Public License for more details . <nl> + * / <nl> + <nl> + package com . sun . jna . platform . win32 ; <nl> + import com . sun . jna . WString ; <nl> + import com . sun . jna . platform . win32 . WinDef . HINSTANCE ; <nl> + import com . sun . jna . platform . win32 . WinDef . HMENU ; <nl> + import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> + import com . sun . jna . platform . win32 . WinDef . LPVOID ; <nl> + <nl> + <nl> + / * * <nl> + * Provides convenient usage of functions defined by { @ code User32 . dll } . <nl> + * <nl> + * @ author Ralf HAMBERGER <nl> + * @ author Markus KARG ( markus [ at ] headcrashing [ dot ] eu ) <nl> + * / <nl> + public final class User32Util { <nl> + public static final int registerWindowMessage ( final String lpString ) { <nl> + final int messageId = User32 . INSTANCE . RegisterWindowMessage ( lpString ) ; <nl> + if ( messageId = = 0 ) <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + return messageId ; <nl> + } <nl> + <nl> + public static final HWND createWindow ( final String className , final String windowName , final int style , final int x , final int y , final int width , <nl> + final int height , final HWND parent , final HMENU menu , final HINSTANCE instance , final LPVOID param ) { <nl> + return User32Util . createWindowEx ( 0 , className , windowName , style , x , y , width , height , parent , menu , instance , param ) ; <nl> + } <nl> + <nl> + public static final HWND createWindowEx ( final int exStyle , final String className , final String windowName , final int style , final int x , final int y , <nl> + final int width , final int height , final HWND parent , final HMENU menu , final HINSTANCE instance , final LPVOID param ) { <nl> + final HWND hWnd = User32 . INSTANCE <nl> + . CreateWindowEx ( exStyle , new WString ( className ) , windowName , style , x , y , width , height , parent , menu , instance , param ) ; <nl> + if ( hWnd = = null ) <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + return hWnd ; <nl> + } <nl> + <nl> + public static final void destroyWindow ( final HWND hWnd ) { <nl> + if ( ! User32 . INSTANCE . DestroyWindow ( hWnd ) ) <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> index 22471ec . . fb3b459 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> @ @ - 12 , 12 + 12 , 15 @ @ <nl> * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> - import junit . framework . TestCase ; <nl> + import static com . sun . jna . platform . win32 . User32 . INSTANCE ; <nl> <nl> - import java . awt . * ; <nl> + import java . awt . AWTException ; <nl> + import java . awt . Robot ; <nl> import java . awt . event . KeyEvent ; <nl> <nl> - import static com . sun . jna . platform . win32 . User32 . * ; <nl> + import junit . framework . TestCase ; <nl> + <nl> + import com . sun . jna . platform . win32 . WinUser . LASTINPUTINFO ; <nl> <nl> / * * <nl> * @ author dblock [ at ] dblock [ dot ] org <nl> @ @ - 102 , 4 + 105 , 9 @ @ public class User32Test extends TestCase { <nl> assertTrue ( Kernel32 . INSTANCE . GetTickCount ( ) > = plii . dwTime ) ; <nl> assertTrue ( plii . dwTime > 0 ) ; <nl> } <nl> + <nl> + public final void testRegisterWindowMessage ( ) { <nl> + final int msg = User32 . INSTANCE . RegisterWindowMessage ( " RM _ UNITTEST " ) ; <nl> + assertTrue ( msg > = 0xC000 & & msg < = 0xFFFF ) ; <nl> + } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / User32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / User32UtilTest . java <nl> new file mode 100644 <nl> index 0000000 . . da0d0d7 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / User32UtilTest . java <nl> @ @ - 0 , 0 + 1 , 40 @ @ <nl> + / * <nl> + * Copyright ( c ) 2013 Markus Karg , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or modify it under the terms of the GNU Lesser General Public License as published by the Free <nl> + * Software Foundation ; either version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , but WITHOUT ANY WARRANTY ; without even the implied warranty of MERCHANTABILITY or FITNESS FOR <nl> + * A PARTICULAR PURPOSE . See the GNU Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import junit . framework . TestCase ; <nl> + <nl> + import com . sun . jna . Pointer ; <nl> + <nl> + / * * <nl> + * @ author markus [ at ] headcrashing [ dot ] eu <nl> + * / <nl> + public final class User32UtilTest extends TestCase { <nl> + public static final void main ( final String [ ] args ) { <nl> + junit . textui . TestRunner . run ( User32UtilTest . class ) ; <nl> + } <nl> + <nl> + public final void testRegisterWindowMessage ( ) { <nl> + final int msg = User32Util . registerWindowMessage ( " RM _ UNITTEST " ) ; <nl> + assertTrue ( msg > = 0xC000 & & msg < = 0xFFFF ) ; <nl> + } <nl> + <nl> + public final void testCreateWindow ( ) { <nl> + assertTrue ( Pointer . nativeValue ( User32Util . createWindow ( " Message " , null , 0 , 0 , 0 , 0 , 0 , null , null , null , null ) . getPointer ( ) ) > 0 ) ; <nl> + } <nl> + <nl> + public final void testCreateWindowEx ( ) { <nl> + assertTrue ( Pointer . nativeValue ( User32Util . createWindowEx ( 0 , " Message " , null , 0 , 0 , 0 , 0 , 0 , null , null , null , null ) . getPointer ( ) ) > 0 ) ; <nl> + } <nl> + <nl> + public final void testDestroyWindow ( ) { <nl> + User32Util . destroyWindow ( User32Util . createWindow ( " Message " , null , 0 , 0 , 0 , 0 , 0 , null , null , null , null ) ) ; <nl> + } <nl> + } <nl> \ No newline at end of file
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> index 4d96331 . . 321a20c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2007 Timothy Wall , All Rights Reserved <nl> + / * Copyright ( c ) 2007 , 2013 Timothy Wall , Markus Karg , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 151 , 4 + 151 , 21 @ @ public interface Shell32 extends ShellAPI , StdCallLibrary { <nl> * / <nl> INT _ PTR ShellExecute ( HWND hwnd , String lpOperation , String lpFile , String lpParameters , String lpDirectory , <nl> int nShowCmd ) ; <nl> + <nl> + / * * <nl> + * Retrieves the path of a special folder , identified by its CSIDL . <nl> + * <nl> + * @ param owner <nl> + * Reserved . <nl> + * @ param path <nl> + * A pointer to a null - terminated string that receives the drive and path of the specified folder . This buffer must be at least MAX _ PATH <nl> + * characters in size . <nl> + * @ param csidl <nl> + * A CSIDL that identifies the folder of interest . If a virtual folder is specified , this function will fail . <nl> + * @ param create <nl> + * Indicates whether the folder should be created if it does not already exist . If this value is nonzero , the folder is created . If this value is <nl> + * zero , the folder is not created . <nl> + * @ return { @ code true } if successful ; otherwise , { @ code false } . <nl> + * / <nl> + boolean SHGetSpecialFolderPath ( HWND owner , char [ ] path , int csidl , boolean create ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java <nl> index 5c1c964 . . dd85003 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2010 Daniel Doubrovkine , All Rights Reserved <nl> + / * Copyright ( c ) 2010 , 2013 Daniel Doubrovkine , Markus Karg , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 20 , 6 + 20 , 7 @ @ import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> / * * <nl> * Shell32 Utility API . <nl> * @ author dblock [ at ] dblock . org <nl> + * @ author markus [ at ] headcrashing [ dot ] eu <nl> * / <nl> public abstract class Shell32Util { <nl> 	 <nl> @ @ - 55 , 4 + 56 , 21 @ @ public abstract class Shell32Util { <nl> 	 public static String getFolderPath ( int nFolder ) { <nl> 	 	 return getFolderPath ( null , nFolder , ShlObj . SHGFP _ TYPE _ CURRENT ) ; <nl> 	 } <nl> + <nl> + 	 / * * <nl> + * Retrieves the path of a special folder , identified by its CSIDL . <nl> + * <nl> + * @ param csidl <nl> + * A CSIDL that identifies the folder of interest . If a virtual folder is specified , this function will fail . <nl> + * @ param create <nl> + * Indicates whether the folder should be created if it does not already exist . If this value is nonzero , the folder is created . If this value is <nl> + * zero , the folder is not created . <nl> + * @ return The drive and path of the specified folder <nl> + * / <nl> + public static final String getSpecialFolderPath ( final int csidl , final boolean create ) { <nl> + final char [ ] pszPath = new char [ WinDef . MAX _ PATH ] ; <nl> + if ( ! Shell32 . INSTANCE . SHGetSpecialFolderPath ( null , pszPath , csidl , create ) ) <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + return Native . toString ( pszPath ) ; <nl> + } <nl> } <nl> \ No newline at end of file <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> index 8eeb7a1 . . 00d855a 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2010 Daniel Doubrovkine , All Rights Reserved <nl> + / * Copyright ( c ) 2010 , 2013 Daniel Doubrovkine , Markus Karg , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 19 , 6 + 19 , 7 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> <nl> / * * <nl> * @ author dblock [ at ] dblock [ dot ] org <nl> + * @ author markus [ at ] headcrashing [ dot ] eu <nl> * / <nl> public class Shell32Test extends TestCase { <nl> <nl> @ @ - 42 , 4 + 43 , 9 @ @ public class Shell32Test extends TestCase { <nl> / / should release the interface , but we need Com4JNA to do that . <nl> } <nl> <nl> + public final void testSHGetSpecialFolderPath ( ) { <nl> + final char [ ] pszPath = new char [ WinDef . MAX _ PATH ] ; <nl> + assertTrue ( Shell32 . INSTANCE . SHGetSpecialFolderPath ( null , pszPath , ShlObj . CSIDL _ APPDATA , false ) ) ; <nl> + assertFalse ( Native . toString ( pszPath ) . isEmpty ( ) ) ; <nl> + } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java <nl> index 1a40d31 . . 733a7cc 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2010 Daniel Doubrovkine , All Rights Reserved <nl> + / * Copyright ( c ) 2010 , 2013 Daniel Doubrovkine , Markus Karg , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 16 , 6 + 16 , 7 @ @ import junit . framework . TestCase ; <nl> <nl> / * * <nl> * @ author dblock [ at ] dblock [ dot ] org <nl> + * @ author markus [ at ] headcrashing [ dot ] eu <nl> * / <nl> public class Shell32UtilTest extends TestCase { <nl> <nl> @ @ - 24 , 9 + 25 , 14 @ @ public class Shell32UtilTest extends TestCase { <nl> System . out . println ( " Windows : " + Shell32Util . getFolderPath ( ShlObj . CSIDL _ WINDOWS ) ) ; <nl> System . out . println ( " System : " + Shell32Util . getFolderPath ( ShlObj . CSIDL _ SYSTEM ) ) ; <nl> System . out . println ( " AppData : " + Shell32Util . getFolderPath ( ShlObj . CSIDL _ APPDATA ) ) ; <nl> + System . out . println ( " AppData : " + Shell32Util . getSpecialFolderPath ( ShlObj . CSIDL _ APPDATA , false ) ) ; <nl> } <nl> <nl> 	 public void testGetFolderPath ( ) { <nl> 	 	 assertTrue ( Shell32Util . getFolderPath ( ShlObj . CSIDL _ WINDOWS ) . length ( ) > 0 ) ; <nl> 	 } <nl> + <nl> + 	 public final void testGetSpecialFolderPath ( ) { <nl> + assertFalse ( Shell32Util . getSpecialFolderPath ( ShlObj . CSIDL _ APPDATA , false ) . isEmpty ( ) ) ; <nl> + } <nl> }
diff - - git a / ChangeLog b / ChangeLog <nl> index 74d529e . . 92c1a15 100644 <nl> - - - a / ChangeLog <nl> + + + b / ChangeLog <nl> @ @ - 1 , 3 + 1 , 27 @ @ <nl> + 2013 - 02 - 11 Anthony Green < green @ moxielogic . com > <nl> + <nl> + 	 * configure . ac : Update release number to 3 . 0 . 12 . <nl> + 	 * configure : Rebuilt . <nl> + 	 * README : Update release info . <nl> + <nl> + 2013 - 02 - 10 Anthony Green < green @ moxielogic . com > <nl> + <nl> + 	 * README : Add Moxie . <nl> + 	 * src / moxie / ffi . c : Created . <nl> + 	 * src / moxie / eabi . S : Created . <nl> + 	 * src / moxie / ffitarget . h : Created . <nl> + 	 * Makefile . am ( nodist _ libffi _ la _ SOURCES ) : Add Moxie . <nl> + 	 * Makefile . in : Rebuilt . <nl> + 	 * configure . ac : Add Moxie . <nl> + 	 * configure : Rebuilt . <nl> + 	 * testsuite / libffi . call / huge _ struct . c : Disable format string <nl> + 	 warnings for moxie * - * - elf tests . <nl> + <nl> + 2013 - 02 - 10 Anthony Green < green @ moxielogic . com > <nl> + <nl> + 	 * Makefile . am ( LTLDFLAGS ) : Fix reference . <nl> + 	 * Makefile . in : Rebuilt . <nl> + <nl> 2013 - 02 - 10 Anthony Green < green @ moxielogic . com > <nl> <nl> 	 * README : Update supported platforms . Update test results link . <nl> diff - - git a / Makefile . am b / Makefile . am <nl> index 5787f9e . . 8f1362a 100644 <nl> - - - a / Makefile . am <nl> + + + b / Makefile . am <nl> @ @ - 148 , 6 + 148 , 9 @ @ endif <nl> if M68K <nl> nodist _ libffi _ la _ SOURCES + = src / m68k / ffi . c src / m68k / sysv . S <nl> endif <nl> + if MOXIE <nl> + nodist _ libffi _ la _ SOURCES + = src / moxie / ffi . c src / moxie / eabi . S <nl> + endif <nl> if MICROBLAZE <nl> nodist _ libffi _ la _ SOURCES + = src / microblaze / ffi . c src / microblaze / sysv . S <nl> endif <nl> @ @ - 209 , 7 + 212 , 7 @ @ endif <nl> libffi _ convenience _ la _ SOURCES = $ ( libffi _ la _ SOURCES ) <nl> nodist _ libffi _ convenience _ la _ SOURCES = $ ( nodist _ libffi _ la _ SOURCES ) <nl> <nl> - LTLDFLAGS = $ ( shell $ ( SHELL ) $ ( top _ srcdir ) / . . / libtool - ldflags $ ( LDFLAGS ) ) <nl> + LTLDFLAGS = $ ( shell $ ( SHELL ) $ ( top _ srcdir ) / libtool - ldflags $ ( LDFLAGS ) ) <nl> <nl> libffi _ la _ LDFLAGS = - no - undefined - version - info ` grep - v ' ^ \ # ' $ ( srcdir ) / libtool - version ` $ ( LTLDFLAGS ) $ ( AM _ LTLDFLAGS ) <nl> <nl> diff - - git a / Makefile . in b / Makefile . in <nl> index 7317ec1 . . fc5e80e 100644 <nl> - - - a / Makefile . in <nl> + + + b / Makefile . in <nl> @ @ - 65 , 25 + 65 , 26 @ @ target _ triplet = @ target @ <nl> @ IA64 _ TRUE @ am _ _ append _ 11 = src / ia64 / ffi . c src / ia64 / unix . S <nl> @ M32R _ TRUE @ am _ _ append _ 12 = src / m32r / sysv . S src / m32r / ffi . c <nl> @ M68K _ TRUE @ am _ _ append _ 13 = src / m68k / ffi . c src / m68k / sysv . S <nl> - @ MICROBLAZE _ TRUE @ am _ _ append _ 14 = src / microblaze / ffi . c src / microblaze / sysv . S <nl> - @ POWERPC _ TRUE @ am _ _ append _ 15 = src / powerpc / ffi . c src / powerpc / sysv . S src / powerpc / ppc _ closure . S src / powerpc / linux64 . S src / powerpc / linux64 _ closure . S <nl> - @ POWERPC _ AIX _ TRUE @ am _ _ append _ 16 = src / powerpc / ffi _ darwin . c src / powerpc / aix . S src / powerpc / aix _ closure . S <nl> - @ POWERPC _ DARWIN _ TRUE @ am _ _ append _ 17 = src / powerpc / ffi _ darwin . c src / powerpc / darwin . S src / powerpc / darwin _ closure . S <nl> - @ POWERPC _ FREEBSD _ TRUE @ am _ _ append _ 18 = src / powerpc / ffi . c src / powerpc / sysv . S src / powerpc / ppc _ closure . S <nl> - @ AARCH64 _ TRUE @ am _ _ append _ 19 = src / aarch64 / sysv . S src / aarch64 / ffi . c <nl> - @ ARM _ TRUE @ am _ _ append _ 20 = src / arm / sysv . S src / arm / ffi . c <nl> - @ ARM _ TRUE @ @ FFI _ EXEC _ TRAMPOLINE _ TABLE _ TRUE @ am _ _ append _ 21 = src / arm / trampoline . S <nl> - @ AVR32 _ TRUE @ am _ _ append _ 22 = src / avr32 / sysv . S src / avr32 / ffi . c <nl> - @ LIBFFI _ CRIS _ TRUE @ am _ _ append _ 23 = src / cris / sysv . S src / cris / ffi . c <nl> - @ FRV _ TRUE @ am _ _ append _ 24 = src / frv / eabi . S src / frv / ffi . c <nl> - @ S390 _ TRUE @ am _ _ append _ 25 = src / s390 / sysv . S src / s390 / ffi . c <nl> - @ X86 _ 64 _ TRUE @ am _ _ append _ 26 = src / x86 / ffi64 . c src / x86 / unix64 . S src / x86 / ffi . c src / x86 / sysv . S <nl> - @ SH _ TRUE @ am _ _ append _ 27 = src / sh / sysv . S src / sh / ffi . c <nl> - @ SH64 _ TRUE @ am _ _ append _ 28 = src / sh64 / sysv . S src / sh64 / ffi . c <nl> - @ PA _ LINUX _ TRUE @ am _ _ append _ 29 = src / pa / linux . S src / pa / ffi . c <nl> - @ PA _ HPUX _ TRUE @ am _ _ append _ 30 = src / pa / hpux32 . S src / pa / ffi . c <nl> - @ TILE _ TRUE @ am _ _ append _ 31 = src / tile / tile . S src / tile / ffi . c <nl> - @ XTENSA _ TRUE @ am _ _ append _ 32 = src / xtensa / sysv . S src / xtensa / ffi . c <nl> + @ MOXIE _ TRUE @ am _ _ append _ 14 = src / moxie / ffi . c src / moxie / eabi . S <nl> + @ MICROBLAZE _ TRUE @ am _ _ append _ 15 = src / microblaze / ffi . c src / microblaze / sysv . S <nl> + @ POWERPC _ TRUE @ am _ _ append _ 16 = src / powerpc / ffi . c src / powerpc / sysv . S src / powerpc / ppc _ closure . S src / powerpc / linux64 . S src / powerpc / linux64 _ closure . S <nl> + @ POWERPC _ AIX _ TRUE @ am _ _ append _ 17 = src / powerpc / ffi _ darwin . c src / powerpc / aix . S src / powerpc / aix _ closure . S <nl> + @ POWERPC _ DARWIN _ TRUE @ am _ _ append _ 18 = src / powerpc / ffi _ darwin . c src / powerpc / darwin . S src / powerpc / darwin _ closure . S <nl> + @ POWERPC _ FREEBSD _ TRUE @ am _ _ append _ 19 = src / powerpc / ffi . c src / powerpc / sysv . S src / powerpc / ppc _ closure . S <nl> + @ AARCH64 _ TRUE @ am _ _ append _ 20 = src / aarch64 / sysv . S src / aarch64 / ffi . c <nl> + @ ARM _ TRUE @ am _ _ append _ 21 = src / arm / sysv . S src / arm / ffi . c <nl> + @ ARM _ TRUE @ @ FFI _ EXEC _ TRAMPOLINE _ TABLE _ TRUE @ am _ _ append _ 22 = src / arm / trampoline . S <nl> + @ AVR32 _ TRUE @ am _ _ append _ 23 = src / avr32 / sysv . S src / avr32 / ffi . c <nl> + @ LIBFFI _ CRIS _ TRUE @ am _ _ append _ 24 = src / cris / sysv . S src / cris / ffi . c <nl> + @ FRV _ TRUE @ am _ _ append _ 25 = src / frv / eabi . S src / frv / ffi . c <nl> + @ S390 _ TRUE @ am _ _ append _ 26 = src / s390 / sysv . S src / s390 / ffi . c <nl> + @ X86 _ 64 _ TRUE @ am _ _ append _ 27 = src / x86 / ffi64 . c src / x86 / unix64 . S src / x86 / ffi . c src / x86 / sysv . S <nl> + @ SH _ TRUE @ am _ _ append _ 28 = src / sh / sysv . S src / sh / ffi . c <nl> + @ SH64 _ TRUE @ am _ _ append _ 29 = src / sh64 / sysv . S src / sh64 / ffi . c <nl> + @ PA _ LINUX _ TRUE @ am _ _ append _ 30 = src / pa / linux . S src / pa / ffi . c <nl> + @ PA _ HPUX _ TRUE @ am _ _ append _ 31 = src / pa / hpux32 . S src / pa / ffi . c <nl> + @ TILE _ TRUE @ am _ _ append _ 32 = src / tile / tile . S src / tile / ffi . c <nl> + @ XTENSA _ TRUE @ am _ _ append _ 33 = src / xtensa / sysv . S src / xtensa / ffi . c <nl> subdir = . <nl> DIST _ COMMON = README $ ( am _ _ configure _ deps ) $ ( srcdir ) / Makefile . am \ <nl> 	 $ ( srcdir ) / Makefile . in $ ( srcdir ) / doc / stamp - vti \ <nl> @ @ - 164 , 36 + 165 , 37 @ @ am _ libffi _ la _ OBJECTS = src / prep _ cif . lo src / types . lo src / raw _ api . lo \ <nl> @ IA64 _ TRUE @ am _ _ objects _ 11 = src / ia64 / ffi . lo src / ia64 / unix . lo <nl> @ M32R _ TRUE @ am _ _ objects _ 12 = src / m32r / sysv . lo src / m32r / ffi . lo <nl> @ M68K _ TRUE @ am _ _ objects _ 13 = src / m68k / ffi . lo src / m68k / sysv . lo <nl> - @ MICROBLAZE _ TRUE @ am _ _ objects _ 14 = src / microblaze / ffi . lo \ <nl> + @ MOXIE _ TRUE @ am _ _ objects _ 14 = src / moxie / ffi . lo src / moxie / eabi . lo <nl> + @ MICROBLAZE _ TRUE @ am _ _ objects _ 15 = src / microblaze / ffi . lo \ <nl> @ MICROBLAZE _ TRUE @ 	 src / microblaze / sysv . lo <nl> - @ POWERPC _ TRUE @ am _ _ objects _ 15 = src / powerpc / ffi . lo src / powerpc / sysv . lo \ <nl> + @ POWERPC _ TRUE @ am _ _ objects _ 16 = src / powerpc / ffi . lo src / powerpc / sysv . lo \ <nl> @ POWERPC _ TRUE @ 	 src / powerpc / ppc _ closure . lo \ <nl> @ POWERPC _ TRUE @ 	 src / powerpc / linux64 . lo \ <nl> @ POWERPC _ TRUE @ 	 src / powerpc / linux64 _ closure . lo <nl> - @ POWERPC _ AIX _ TRUE @ am _ _ objects _ 16 = src / powerpc / ffi _ darwin . lo \ <nl> + @ POWERPC _ AIX _ TRUE @ am _ _ objects _ 17 = src / powerpc / ffi _ darwin . lo \ <nl> @ POWERPC _ AIX _ TRUE @ 	 src / powerpc / aix . lo \ <nl> @ POWERPC _ AIX _ TRUE @ 	 src / powerpc / aix _ closure . lo <nl> - @ POWERPC _ DARWIN _ TRUE @ am _ _ objects _ 17 = src / powerpc / ffi _ darwin . lo \ <nl> + @ POWERPC _ DARWIN _ TRUE @ am _ _ objects _ 18 = src / powerpc / ffi _ darwin . lo \ <nl> @ POWERPC _ DARWIN _ TRUE @ 	 src / powerpc / darwin . lo \ <nl> @ POWERPC _ DARWIN _ TRUE @ 	 src / powerpc / darwin _ closure . lo <nl> - @ POWERPC _ FREEBSD _ TRUE @ am _ _ objects _ 18 = src / powerpc / ffi . lo \ <nl> + @ POWERPC _ FREEBSD _ TRUE @ am _ _ objects _ 19 = src / powerpc / ffi . lo \ <nl> @ POWERPC _ FREEBSD _ TRUE @ 	 src / powerpc / sysv . lo \ <nl> @ POWERPC _ FREEBSD _ TRUE @ 	 src / powerpc / ppc _ closure . lo <nl> - @ AARCH64 _ TRUE @ am _ _ objects _ 19 = src / aarch64 / sysv . lo src / aarch64 / ffi . lo <nl> - @ ARM _ TRUE @ am _ _ objects _ 20 = src / arm / sysv . lo src / arm / ffi . lo <nl> - @ ARM _ TRUE @ @ FFI _ EXEC _ TRAMPOLINE _ TABLE _ TRUE @ am _ _ objects _ 21 = src / arm / trampoline . lo <nl> - @ AVR32 _ TRUE @ am _ _ objects _ 22 = src / avr32 / sysv . lo src / avr32 / ffi . lo <nl> - @ LIBFFI _ CRIS _ TRUE @ am _ _ objects _ 23 = src / cris / sysv . lo src / cris / ffi . lo <nl> - @ FRV _ TRUE @ am _ _ objects _ 24 = src / frv / eabi . lo src / frv / ffi . lo <nl> - @ S390 _ TRUE @ am _ _ objects _ 25 = src / s390 / sysv . lo src / s390 / ffi . lo <nl> - @ X86 _ 64 _ TRUE @ am _ _ objects _ 26 = src / x86 / ffi64 . lo src / x86 / unix64 . lo \ <nl> + @ AARCH64 _ TRUE @ am _ _ objects _ 20 = src / aarch64 / sysv . lo src / aarch64 / ffi . lo <nl> + @ ARM _ TRUE @ am _ _ objects _ 21 = src / arm / sysv . lo src / arm / ffi . lo <nl> + @ ARM _ TRUE @ @ FFI _ EXEC _ TRAMPOLINE _ TABLE _ TRUE @ am _ _ objects _ 22 = src / arm / trampoline . lo <nl> + @ AVR32 _ TRUE @ am _ _ objects _ 23 = src / avr32 / sysv . lo src / avr32 / ffi . lo <nl> + @ LIBFFI _ CRIS _ TRUE @ am _ _ objects _ 24 = src / cris / sysv . lo src / cris / ffi . lo <nl> + @ FRV _ TRUE @ am _ _ objects _ 25 = src / frv / eabi . lo src / frv / ffi . lo <nl> + @ S390 _ TRUE @ am _ _ objects _ 26 = src / s390 / sysv . lo src / s390 / ffi . lo <nl> + @ X86 _ 64 _ TRUE @ am _ _ objects _ 27 = src / x86 / ffi64 . lo src / x86 / unix64 . lo \ <nl> @ X86 _ 64 _ TRUE @ 	 src / x86 / ffi . lo src / x86 / sysv . lo <nl> - @ SH _ TRUE @ am _ _ objects _ 27 = src / sh / sysv . lo src / sh / ffi . lo <nl> - @ SH64 _ TRUE @ am _ _ objects _ 28 = src / sh64 / sysv . lo src / sh64 / ffi . lo <nl> - @ PA _ LINUX _ TRUE @ am _ _ objects _ 29 = src / pa / linux . lo src / pa / ffi . lo <nl> - @ PA _ HPUX _ TRUE @ am _ _ objects _ 30 = src / pa / hpux32 . lo src / pa / ffi . lo <nl> - @ TILE _ TRUE @ am _ _ objects _ 31 = src / tile / tile . lo src / tile / ffi . lo <nl> - @ XTENSA _ TRUE @ am _ _ objects _ 32 = src / xtensa / sysv . lo src / xtensa / ffi . lo <nl> + @ SH _ TRUE @ am _ _ objects _ 28 = src / sh / sysv . lo src / sh / ffi . lo <nl> + @ SH64 _ TRUE @ am _ _ objects _ 29 = src / sh64 / sysv . lo src / sh64 / ffi . lo <nl> + @ PA _ LINUX _ TRUE @ am _ _ objects _ 30 = src / pa / linux . lo src / pa / ffi . lo <nl> + @ PA _ HPUX _ TRUE @ am _ _ objects _ 31 = src / pa / hpux32 . lo src / pa / ffi . lo <nl> + @ TILE _ TRUE @ am _ _ objects _ 32 = src / tile / tile . lo src / tile / ffi . lo <nl> + @ XTENSA _ TRUE @ am _ _ objects _ 33 = src / xtensa / sysv . lo src / xtensa / ffi . lo <nl> nodist _ libffi _ la _ OBJECTS = $ ( am _ _ objects _ 1 ) $ ( am _ _ objects _ 2 ) \ <nl> 	 $ ( am _ _ objects _ 3 ) $ ( am _ _ objects _ 4 ) $ ( am _ _ objects _ 5 ) \ <nl> 	 $ ( am _ _ objects _ 6 ) $ ( am _ _ objects _ 7 ) $ ( am _ _ objects _ 8 ) \ <nl> @ @ - 204 , 17 + 206 , 18 @ @ nodist _ libffi _ la _ OBJECTS = $ ( am _ _ objects _ 1 ) $ ( am _ _ objects _ 2 ) \ <nl> 	 $ ( am _ _ objects _ 21 ) $ ( am _ _ objects _ 22 ) $ ( am _ _ objects _ 23 ) \ <nl> 	 $ ( am _ _ objects _ 24 ) $ ( am _ _ objects _ 25 ) $ ( am _ _ objects _ 26 ) \ <nl> 	 $ ( am _ _ objects _ 27 ) $ ( am _ _ objects _ 28 ) $ ( am _ _ objects _ 29 ) \ <nl> - 	 $ ( am _ _ objects _ 30 ) $ ( am _ _ objects _ 31 ) $ ( am _ _ objects _ 32 ) <nl> + 	 $ ( am _ _ objects _ 30 ) $ ( am _ _ objects _ 31 ) $ ( am _ _ objects _ 32 ) \ <nl> + 	 $ ( am _ _ objects _ 33 ) <nl> libffi _ la _ OBJECTS = $ ( am _ libffi _ la _ OBJECTS ) \ <nl> 	 $ ( nodist _ libffi _ la _ OBJECTS ) <nl> libffi _ la _ LINK = $ ( LIBTOOL ) - - tag = CC $ ( AM _ LIBTOOLFLAGS ) \ <nl> 	 $ ( LIBTOOLFLAGS ) - - mode = link $ ( CCLD ) $ ( AM _ CFLAGS ) $ ( CFLAGS ) \ <nl> 	 $ ( libffi _ la _ LDFLAGS ) $ ( LDFLAGS ) - o $ @ <nl> libffi _ convenience _ la _ LIBADD = <nl> - am _ _ objects _ 33 = src / prep _ cif . lo src / types . lo src / raw _ api . lo \ <nl> + am _ _ objects _ 34 = src / prep _ cif . lo src / types . lo src / raw _ api . lo \ <nl> 	 src / java _ raw _ api . lo src / closures . lo <nl> - am _ libffi _ convenience _ la _ OBJECTS = $ ( am _ _ objects _ 33 ) <nl> - am _ _ objects _ 34 = $ ( am _ _ objects _ 1 ) $ ( am _ _ objects _ 2 ) $ ( am _ _ objects _ 3 ) \ <nl> + am _ libffi _ convenience _ la _ OBJECTS = $ ( am _ _ objects _ 34 ) <nl> + am _ _ objects _ 35 = $ ( am _ _ objects _ 1 ) $ ( am _ _ objects _ 2 ) $ ( am _ _ objects _ 3 ) \ <nl> 	 $ ( am _ _ objects _ 4 ) $ ( am _ _ objects _ 5 ) $ ( am _ _ objects _ 6 ) \ <nl> 	 $ ( am _ _ objects _ 7 ) $ ( am _ _ objects _ 8 ) $ ( am _ _ objects _ 9 ) \ <nl> 	 $ ( am _ _ objects _ 10 ) $ ( am _ _ objects _ 11 ) $ ( am _ _ objects _ 12 ) \ <nl> @ @ - 224 , 8 + 227 , 8 @ @ am _ _ objects _ 34 = $ ( am _ _ objects _ 1 ) $ ( am _ _ objects _ 2 ) $ ( am _ _ objects _ 3 ) \ <nl> 	 $ ( am _ _ objects _ 22 ) $ ( am _ _ objects _ 23 ) $ ( am _ _ objects _ 24 ) \ <nl> 	 $ ( am _ _ objects _ 25 ) $ ( am _ _ objects _ 26 ) $ ( am _ _ objects _ 27 ) \ <nl> 	 $ ( am _ _ objects _ 28 ) $ ( am _ _ objects _ 29 ) $ ( am _ _ objects _ 30 ) \ <nl> - 	 $ ( am _ _ objects _ 31 ) $ ( am _ _ objects _ 32 ) <nl> - nodist _ libffi _ convenience _ la _ OBJECTS = $ ( am _ _ objects _ 34 ) <nl> + 	 $ ( am _ _ objects _ 31 ) $ ( am _ _ objects _ 32 ) $ ( am _ _ objects _ 33 ) <nl> + nodist _ libffi _ convenience _ la _ OBJECTS = $ ( am _ _ objects _ 35 ) <nl> libffi _ convenience _ la _ OBJECTS = $ ( am _ libffi _ convenience _ la _ OBJECTS ) \ <nl> 	 $ ( nodist _ libffi _ convenience _ la _ OBJECTS ) <nl> DEFAULT _ INCLUDES = - I . @ am _ _ isrc @ <nl> @ @ - 563 , 10 + 566 , 11 @ @ nodist _ libffi _ la _ SOURCES = $ ( am _ _ append _ 1 ) $ ( am _ _ append _ 2 ) \ <nl> 	 $ ( am _ _ append _ 21 ) $ ( am _ _ append _ 22 ) $ ( am _ _ append _ 23 ) \ <nl> 	 $ ( am _ _ append _ 24 ) $ ( am _ _ append _ 25 ) $ ( am _ _ append _ 26 ) \ <nl> 	 $ ( am _ _ append _ 27 ) $ ( am _ _ append _ 28 ) $ ( am _ _ append _ 29 ) \ <nl> - 	 $ ( am _ _ append _ 30 ) $ ( am _ _ append _ 31 ) $ ( am _ _ append _ 32 ) <nl> + 	 $ ( am _ _ append _ 30 ) $ ( am _ _ append _ 31 ) $ ( am _ _ append _ 32 ) \ <nl> + 	 $ ( am _ _ append _ 33 ) <nl> libffi _ convenience _ la _ SOURCES = $ ( libffi _ la _ SOURCES ) <nl> nodist _ libffi _ convenience _ la _ SOURCES = $ ( nodist _ libffi _ la _ SOURCES ) <nl> - LTLDFLAGS = $ ( shell $ ( SHELL ) $ ( top _ srcdir ) / . . / libtool - ldflags $ ( LDFLAGS ) ) <nl> + LTLDFLAGS = $ ( shell $ ( SHELL ) $ ( top _ srcdir ) / libtool - ldflags $ ( LDFLAGS ) ) <nl> libffi _ la _ LDFLAGS = - no - undefined - version - info ` grep - v ' ^ \ # ' $ ( srcdir ) / libtool - version ` $ ( LTLDFLAGS ) $ ( AM _ LTLDFLAGS ) <nl> AM _ CPPFLAGS = - I . - I $ ( top _ srcdir ) / include - Iinclude - I $ ( top _ srcdir ) / src <nl> AM _ CCASFLAGS = $ ( AM _ CPPFLAGS ) <nl> @ @ - 779 , 6 + 783 , 16 @ @ src / m68k / ffi . lo : src / m68k / $ ( am _ _ dirstamp ) \ <nl> 	 src / m68k / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> src / m68k / sysv . lo : src / m68k / $ ( am _ _ dirstamp ) \ <nl> 	 src / m68k / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> + src / moxie / $ ( am _ _ dirstamp ) : <nl> + 	 @ $ ( MKDIR _ P ) src / moxie <nl> + 	 @ : > src / moxie / $ ( am _ _ dirstamp ) <nl> + src / moxie / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) : <nl> + 	 @ $ ( MKDIR _ P ) src / moxie / $ ( DEPDIR ) <nl> + 	 @ : > src / moxie / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> + src / moxie / ffi . lo : src / moxie / $ ( am _ _ dirstamp ) \ <nl> + 	 src / moxie / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> + src / moxie / eabi . lo : src / moxie / $ ( am _ _ dirstamp ) \ <nl> + 	 src / moxie / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> src / microblaze / $ ( am _ _ dirstamp ) : <nl> 	 @ $ ( MKDIR _ P ) src / microblaze <nl> 	 @ : > src / microblaze / $ ( am _ _ dirstamp ) <nl> @ @ - 962 , 6 + 976 , 8 @ @ mostlyclean - compile : <nl> 	 - rm - f src / microblaze / * . lo <nl> 	 - rm - f src / mips / * . $ ( OBJEXT ) <nl> 	 - rm - f src / mips / * . lo <nl> + 	 - rm - f src / moxie / * . $ ( OBJEXT ) <nl> + 	 - rm - f src / moxie / * . lo <nl> 	 - rm - f src / pa / * . $ ( OBJEXT ) <nl> 	 - rm - f src / pa / * . lo <nl> 	 - rm - f src / powerpc / * . $ ( OBJEXT ) <nl> @ @ - 1016 , 6 + 1032 , 8 @ @ distclean - compile : <nl> @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / mips / $ ( DEPDIR ) / ffi . Plo @ am _ _ quote @ <nl> @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / mips / $ ( DEPDIR ) / n32 . Plo @ am _ _ quote @ <nl> @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / mips / $ ( DEPDIR ) / o32 . Plo @ am _ _ quote @ <nl> + @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / moxie / $ ( DEPDIR ) / eabi . Plo @ am _ _ quote @ <nl> + @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / moxie / $ ( DEPDIR ) / ffi . Plo @ am _ _ quote @ <nl> @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / pa / $ ( DEPDIR ) / ffi . Plo @ am _ _ quote @ <nl> @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / pa / $ ( DEPDIR ) / hpux32 . Plo @ am _ _ quote @ <nl> @ AMDEP _ TRUE @ @ am _ _ include @ @ am _ _ quote @ src / pa / $ ( DEPDIR ) / linux . Plo @ am _ _ quote @ <nl> @ @ - 1118 , 6 + 1136 , 7 @ @ clean - libtool : <nl> 	 - rm - rf src / m68k / . libs src / m68k / _ libs <nl> 	 - rm - rf src / microblaze / . libs src / microblaze / _ libs <nl> 	 - rm - rf src / mips / . libs src / mips / _ libs <nl> + 	 - rm - rf src / moxie / . libs src / moxie / _ libs <nl> 	 - rm - rf src / pa / . libs src / pa / _ libs <nl> 	 - rm - rf src / powerpc / . libs src / powerpc / _ libs <nl> 	 - rm - rf src / s390 / . libs src / s390 / _ libs <nl> @ @ - 1696 , 6 + 1715 , 8 @ @ distclean - generic : <nl> 	 - rm - f src / microblaze / $ ( am _ _ dirstamp ) <nl> 	 - rm - f src / mips / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> 	 - rm - f src / mips / $ ( am _ _ dirstamp ) <nl> + 	 - rm - f src / moxie / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> + 	 - rm - f src / moxie / $ ( am _ _ dirstamp ) <nl> 	 - rm - f src / pa / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> 	 - rm - f src / pa / $ ( am _ _ dirstamp ) <nl> 	 - rm - f src / powerpc / $ ( DEPDIR ) / $ ( am _ _ dirstamp ) <nl> @ @ - 1726 , 7 + 1747 , 7 @ @ clean - am : clean - aminfo clean - generic clean - libtool \ <nl> <nl> distclean : distclean - recursive <nl> 	 - rm - f $ ( am _ _ CONFIG _ DISTCLEAN _ FILES ) <nl> - 	 - rm - rf src / $ ( DEPDIR ) src / aarch64 / $ ( DEPDIR ) src / alpha / $ ( DEPDIR ) src / arm / $ ( DEPDIR ) src / avr32 / $ ( DEPDIR ) src / bfin / $ ( DEPDIR ) src / cris / $ ( DEPDIR ) src / frv / $ ( DEPDIR ) src / ia64 / $ ( DEPDIR ) src / m32r / $ ( DEPDIR ) src / m68k / $ ( DEPDIR ) src / microblaze / $ ( DEPDIR ) src / mips / $ ( DEPDIR ) src / pa / $ ( DEPDIR ) src / powerpc / $ ( DEPDIR ) src / s390 / $ ( DEPDIR ) src / sh / $ ( DEPDIR ) src / sh64 / $ ( DEPDIR ) src / sparc / $ ( DEPDIR ) src / tile / $ ( DEPDIR ) src / x86 / $ ( DEPDIR ) src / xtensa / $ ( DEPDIR ) <nl> + 	 - rm - rf src / $ ( DEPDIR ) src / aarch64 / $ ( DEPDIR ) src / alpha / $ ( DEPDIR ) src / arm / $ ( DEPDIR ) src / avr32 / $ ( DEPDIR ) src / bfin / $ ( DEPDIR ) src / cris / $ ( DEPDIR ) src / frv / $ ( DEPDIR ) src / ia64 / $ ( DEPDIR ) src / m32r / $ ( DEPDIR ) src / m68k / $ ( DEPDIR ) src / microblaze / $ ( DEPDIR ) src / mips / $ ( DEPDIR ) src / moxie / $ ( DEPDIR ) src / pa / $ ( DEPDIR ) src / powerpc / $ ( DEPDIR ) src / s390 / $ ( DEPDIR ) src / sh / $ ( DEPDIR ) src / sh64 / $ ( DEPDIR ) src / sparc / $ ( DEPDIR ) src / tile / $ ( DEPDIR ) src / x86 / $ ( DEPDIR ) src / xtensa / $ ( DEPDIR ) <nl> 	 - rm - f Makefile <nl> distclean - am : clean - am distclean - compile distclean - generic \ <nl> 	 distclean - hdr distclean - libtool distclean - tags <nl> @ @ - 1865 , 7 + 1886 , 7 @ @ installcheck - am : <nl> maintainer - clean : maintainer - clean - recursive <nl> 	 - rm - f $ ( am _ _ CONFIG _ DISTCLEAN _ FILES ) <nl> 	 - rm - rf $ ( top _ srcdir ) / autom4te . cache <nl> - 	 - rm - rf src / $ ( DEPDIR ) src / aarch64 / $ ( DEPDIR ) src / alpha / $ ( DEPDIR ) src / arm / $ ( DEPDIR ) src / avr32 / $ ( DEPDIR ) src / bfin / $ ( DEPDIR ) src / cris / $ ( DEPDIR ) src / frv / $ ( DEPDIR ) src / ia64 / $ ( DEPDIR ) src / m32r / $ ( DEPDIR ) src / m68k / $ ( DEPDIR ) src / microblaze / $ ( DEPDIR ) src / mips / $ ( DEPDIR ) src / pa / $ ( DEPDIR ) src / powerpc / $ ( DEPDIR ) src / s390 / $ ( DEPDIR ) src / sh / $ ( DEPDIR ) src / sh64 / $ ( DEPDIR ) src / sparc / $ ( DEPDIR ) src / tile / $ ( DEPDIR ) src / x86 / $ ( DEPDIR ) src / xtensa / $ ( DEPDIR ) <nl> + 	 - rm - rf src / $ ( DEPDIR ) src / aarch64 / $ ( DEPDIR ) src / alpha / $ ( DEPDIR ) src / arm / $ ( DEPDIR ) src / avr32 / $ ( DEPDIR ) src / bfin / $ ( DEPDIR ) src / cris / $ ( DEPDIR ) src / frv / $ ( DEPDIR ) src / ia64 / $ ( DEPDIR ) src / m32r / $ ( DEPDIR ) src / m68k / $ ( DEPDIR ) src / microblaze / $ ( DEPDIR ) src / mips / $ ( DEPDIR ) src / moxie / $ ( DEPDIR ) src / pa / $ ( DEPDIR ) src / powerpc / $ ( DEPDIR ) src / s390 / $ ( DEPDIR ) src / sh / $ ( DEPDIR ) src / sh64 / $ ( DEPDIR ) src / sparc / $ ( DEPDIR ) src / tile / $ ( DEPDIR ) src / x86 / $ ( DEPDIR ) src / xtensa / $ ( DEPDIR ) <nl> 	 - rm - f Makefile <nl> maintainer - clean - am : distclean - am maintainer - clean - aminfo \ <nl> 	 maintainer - clean - generic maintainer - clean - vti <nl> diff - - git a / README b / README <nl> index f5abd43 . . 82b2104 100644 <nl> - - - a / README <nl> + + + b / README <nl> @ @ - 1 , 8 + 1 , 8 @ @ <nl> Status <nl> = = = = = = <nl> <nl> - libffi - 3 . 0 . 12 was released on XXXXXXX . Check the libffi web page for <nl> - updates : < URL : http : / / sourceware . org / libffi / > . <nl> + libffi - 3 . 0 . 12 was released on February 11 , 2013 . Check the libffi web <nl> + page for updates : < URL : http : / / sourceware . org / libffi / > . <nl> <nl> <nl> What is libffi ? <nl> @ @ - 68 , 6 + 68 , 7 @ @ tested : <nl> | MIPS | Linux | GCC | <nl> | MIPS | RTEMS | GCC | <nl> | MIPS64 | Linux | GCC | <nl> + | Moxie 	 	 | Bare metal 	 | GCC <nl> | PowerPC 32 - bit | AIX | IBM XL C | <nl> | PowerPC 64 - bit | AIX | IBM XL C | <nl> | PowerPC | AMIGA | GCC | <nl> @ @ - 161 , 11 + 162 , 12 @ @ History <nl> <nl> See the ChangeLog files for details . <nl> <nl> - 3 . 0 . 12 XXX - XX - XX <nl> + 3 . 0 . 12 Feb - 11 - 13 <nl> + Add Moxie support . <nl> 	 Add AArch64 support . <nl> 	 Add Blackfin support . <nl> 	 Add TILE - Gx / TILEPro support . <nl> - 	 Add Microblaze support . <nl> + 	 Add MicroBlaze support . <nl> 	 Add Xtensa support . <nl> 	 Add support for PaX enabled kernels with MPROTECT . <nl> 	 Add support for native vendor compilers on <nl> @ @ - 353 , 6 + 355 , 7 @ @ m68k 	 	 Andreas Schwab <nl> microblaze 	 Nathan Rossi <nl> mips 	 	 Anthony Green , Casey Marshall <nl> mips64 	 	 David Daney <nl> + moxie 	 	 Anthony Green <nl> pa 	 	 Randolph Chung , Dave Anglin , Andreas Tobler <nl> powerpc 	 	 Geoffrey Keating , Andreas Tobler , <nl> 	 	 	 David Edelsohn , John Hornkvist <nl> diff - - git a / configure b / configure <nl> index 771398a . . a3a2a82 100755 <nl> - - - a / configure <nl> + + + b / configure <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> # ! / bin / sh <nl> # Guess values for system - dependent variables and create Makefiles . <nl> - # Generated by GNU Autoconf 2 . 69 for libffi 3 . 0 . 12 - rc3 . <nl> + # Generated by GNU Autoconf 2 . 69 for libffi 3 . 0 . 12 . <nl> # <nl> # Report bugs to < http : / / github . com / atgreen / libffi / issues > . <nl> # <nl> @ @ - 590 , 8 + 590 , 8 @ @ MAKEFLAGS = <nl> # Identity of this package . <nl> PACKAGE _ NAME = ' libffi ' <nl> PACKAGE _ TARNAME = ' libffi ' <nl> - PACKAGE _ VERSION = ' 3 . 0 . 12 - rc3 ' <nl> - PACKAGE _ STRING = ' libffi 3 . 0 . 12 - rc3 ' <nl> + PACKAGE _ VERSION = ' 3 . 0 . 12 ' <nl> + PACKAGE _ STRING = ' libffi 3 . 0 . 12 ' <nl> PACKAGE _ BUGREPORT = ' http : / / github . com / atgreen / libffi / issues ' <nl> PACKAGE _ URL = ' ' <nl> <nl> @ @ - 1405 , 7 + 1405 , 7 @ @ if test " $ ac _ init _ help " = " long " ; then <nl> # Omit some internal or obsolete options to make the list less imposing . <nl> # This message is too long to be a string in the A / UX 3 . 1 sh . <nl> cat < < _ ACEOF <nl> - \ ` configure ' configures libffi 3 . 0 . 12 - rc3 to adapt to many kinds of systems . <nl> + \ ` configure ' configures libffi 3 . 0 . 12 to adapt to many kinds of systems . <nl> <nl> Usage : $ 0 [ OPTION ] . . . [ VAR = VALUE ] . . . <nl> <nl> @ @ - 1476 , 7 + 1476 , 7 @ @ fi <nl> <nl> if test - n " $ ac _ init _ help " ; then <nl> case $ ac _ init _ help in <nl> - short | recursive ) echo " Configuration of libffi 3 . 0 . 12 - rc3 : " ; ; <nl> + short | recursive ) echo " Configuration of libffi 3 . 0 . 12 : " ; ; <nl> esac <nl> cat < < \ _ ACEOF <nl> <nl> @ @ - 1596 , 7 + 1596 , 7 @ @ fi <nl> test - n " $ ac _ init _ help " & & exit $ ac _ status <nl> if $ ac _ init _ version ; then <nl> cat < < \ _ ACEOF <nl> - libffi configure 3 . 0 . 12 - rc3 <nl> + libffi configure 3 . 0 . 12 <nl> generated by GNU Autoconf 2 . 69 <nl> <nl> Copyright ( C ) 2012 Free Software Foundation , Inc . <nl> @ @ - 2202 , 7 + 2202 , 7 @ @ cat > config . log < < _ ACEOF <nl> This file contains any messages produced by compilers while <nl> running configure , to aid debugging if configure makes a mistake . <nl> <nl> - It was created by libffi $ as _ me 3 . 0 . 12 - rc3 , which was <nl> + It was created by libffi $ as _ me 3 . 0 . 12 , which was <nl> generated by GNU Autoconf 2 . 69 . Invocation command line was <nl> <nl> $ $ 0 $ @ <nl> @ @ - 3245 , 7 + 3245 , 7 @ @ fi <nl> <nl> # Define the identity of the package . <nl> PACKAGE = ' libffi ' <nl> - VERSION = ' 3 . 0 . 12 - rc3 ' <nl> + VERSION = ' 3 . 0 . 12 ' <nl> <nl> <nl> cat > > confdefs . h < < _ ACEOF <nl> @ @ - 13415 , 6 + 13415 , 10 @ @ case " $ host " in <nl> 	 TARGET = MICROBLAZE ; TARGETDIR = microblaze <nl> 	 ; ; <nl> <nl> + moxie - * - * ) <nl> + 	 TARGET = MOXIE ; TARGETDIR = moxie <nl> + 	 ; ; <nl> + <nl> mips - sgi - irix5 . * | mips - sgi - irix6 . * | mips * - * - rtems * ) <nl> 	 TARGET = MIPS ; TARGETDIR = mips <nl> 	 ; ; <nl> @ @ - 15527 , 7 + 15531 , 7 @ @ cat > > $ CONFIG _ STATUS < < \ _ ACEOF | | ac _ write _ fail = 1 <nl> # report actual input values of CONFIG _ FILES etc . instead of their <nl> # values after options handling . <nl> ac _ log = " <nl> - This file was extended by libffi $ as _ me 3 . 0 . 12 - rc3 , which was <nl> + This file was extended by libffi $ as _ me 3 . 0 . 12 , which was <nl> generated by GNU Autoconf 2 . 69 . Invocation command line was <nl> <nl> CONFIG _ FILES = $ CONFIG _ FILES <nl> @ @ - 15597 , 7 + 15601 , 7 @ @ _ ACEOF <nl> cat > > $ CONFIG _ STATUS < < _ ACEOF | | ac _ write _ fail = 1 <nl> ac _ cs _ config = " ` $ as _ echo " $ ac _ configure _ args " | sed ' s / ^ / / ; s / [ \ \ " " \ ` \ $ ] / \ \ \ \ & / g ' ` " <nl> ac _ cs _ version = " \ \ <nl> - libffi config . status 3 . 0 . 12 - rc3 <nl> + libffi config . status 3 . 0 . 12 <nl> configured by $ 0 , generated by GNU Autoconf 2 . 69 , <nl> with options \ \ " \ $ ac _ cs _ config \ \ " <nl> <nl> diff - - git a / configure . ac b / configure . ac <nl> index c3cd132 . . 428d938 100644 <nl> - - - a / configure . ac <nl> + + + b / configure . ac <nl> @ @ - 2 , 7 + 2 , 7 @ @ dnl Process this with autoconf to create configure <nl> <nl> AC _ PREREQ ( 2 . 68 ) <nl> <nl> - AC _ INIT ( [ libffi ] , [ 3 . 0 . 12 - rc3 ] , [ http : / / github . com / atgreen / libffi / issues ] ) <nl> + AC _ INIT ( [ libffi ] , [ 3 . 0 . 12 ] , [ http : / / github . com / atgreen / libffi / issues ] ) <nl> AC _ CONFIG _ HEADERS ( [ fficonfig . h ] ) <nl> <nl> AC _ CANONICAL _ SYSTEM <nl> @ @ - 195 , 6 + 195 , 10 @ @ case " $ host " in <nl> 	 TARGET = MICROBLAZE ; TARGETDIR = microblaze <nl> 	 ; ; <nl> <nl> + moxie - * - * ) <nl> + 	 TARGET = MOXIE ; TARGETDIR = moxie <nl> + 	 ; ; <nl> + <nl> mips - sgi - irix5 . * | mips - sgi - irix6 . * | mips * - * - rtems * ) <nl> 	 TARGET = MIPS ; TARGETDIR = mips <nl> 	 ; ; <nl> diff - - git a / doc / stamp - vti b / doc / stamp - vti <nl> index 883a8ff . . 766fbac 100644 <nl> - - - a / doc / stamp - vti <nl> + + + b / doc / stamp - vti <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> @ set UPDATED 6 February 2013 <nl> @ set UPDATED - MONTH February 2013 <nl> - @ set EDITION 3 . 0 . 12 - rc3 <nl> - @ set VERSION 3 . 0 . 12 - rc3 <nl> + @ set EDITION 3 . 0 . 12 <nl> + @ set VERSION 3 . 0 . 12 <nl> diff - - git a / doc / version . texi b / doc / version . texi <nl> index 883a8ff . . 766fbac 100644 <nl> - - - a / doc / version . texi <nl> + + + b / doc / version . texi <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> @ set UPDATED 6 February 2013 <nl> @ set UPDATED - MONTH February 2013 <nl> - @ set EDITION 3 . 0 . 12 - rc3 <nl> - @ set VERSION 3 . 0 . 12 - rc3 <nl> + @ set EDITION 3 . 0 . 12 <nl> + @ set VERSION 3 . 0 . 12 <nl> diff - - git a / src / moxie / eabi . S b / src / moxie / eabi . S <nl> index 7e2143b . . ac7aceb 100644 <nl> - - - a / src / moxie / eabi . S <nl> + + + b / src / moxie / eabi . S <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> / * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> - eabi . S - Copyright ( c ) 2012 Anthony Green <nl> + eabi . S - Copyright ( c ) 2012 , 2013 Anthony Green <nl> <nl> Moxie Assembly glue . <nl> <nl> @ @ - 41 , 24 + 41 , 61 @ @ <nl> 	 # $ r4 : ecif . rvalue <nl> 	 # $ r5 : fn <nl> 	 <nl> - ffi _ call _ EABI : 	 <nl> + ffi _ call _ EABI : <nl> + 	 push 	 $ sp , $ r6 <nl> + 	 push 	 $ sp , $ r7 <nl> + 	 push 	 $ sp , $ r8 <nl> 	 dec 	 $ sp , 24 <nl> <nl> 	 / * Store incoming args on stack . * / <nl> - 	 sto . l 	 0 ( $ sp ) , $ r0 <nl> - 	 sto . l 	 4 ( $ sp ) , $ r1 <nl> - 	 sto . l 	 8 ( $ sp ) , $ r2 <nl> - 	 sto . l 	 12 ( $ sp ) , $ r3 <nl> - 	 sto . l 	 16 ( $ sp ) , $ r4 <nl> - 	 sto . l 	 20 ( $ sp ) , $ r5 <nl> + 	 sto . l 	 0 ( $ sp ) , $ r0 / * ffi _ prep _ args * / <nl> + 	 sto . l 	 4 ( $ sp ) , $ r1 / * ecif * / <nl> + 	 sto . l 	 8 ( $ sp ) , $ r2 / * bytes * / <nl> + 	 sto . l 	 12 ( $ sp ) , $ r3 / * flags * / <nl> + 	 sto . l 	 16 ( $ sp ) , $ r4 / * & rvalue * / <nl> + 	 sto . l 	 20 ( $ sp ) , $ r5 / * fn * / <nl> 	 <nl> 	 / * Call ffi _ prep _ args . * / <nl> - 	 jsr 	 $ r0 <nl> + 	 mov 	 $ r6 , $ r4 / * Save result buffer * / <nl> + 	 mov 	 $ r7 , $ r5 / * Save the target fn * / <nl> + 	 mov 	 $ r8 , $ r3 / * Save the flags * / <nl> + 	 sub . l 	 $ sp , $ r2 / * Allocate stack space * / <nl> + 	 mov 	 $ r0 , $ sp / * We can stomp over $ r0 * / <nl> + 	 / * $ r1 is already set up * / <nl> + 	 jsra 	 ffi _ prep _ args <nl> <nl> + 	 / * Load register arguments . * / <nl> + 	 ldo . l 	 $ r0 , 0 ( $ sp ) <nl> + 	 ldo . l 	 $ r1 , 4 ( $ sp ) <nl> + 	 ldo . l 	 $ r2 , 8 ( $ sp ) <nl> + 	 ldo . l 	 $ r3 , 12 ( $ sp ) <nl> + 	 ldo . l 	 $ r4 , 16 ( $ sp ) <nl> + 	 ldo . l 	 $ r5 , 20 ( $ sp ) <nl> + 	 <nl> 	 / * Call the target function . * / <nl> - 	 jsr 	 $ r5 <nl> + 	 jsr 	 $ r7 <nl> + <nl> + 	 ldi . l 	 $ r7 , 0xffffffff <nl> + 	 cmp 	 $ r8 , $ r7 <nl> + 	 beq 	 retstruct <nl> + <nl> + 	 ldi . l 	 $ r7 , 4 <nl> + 	 cmp 	 $ r8 , $ r7 <nl> + 	 bgt 	 ret2reg <nl> + <nl> + 	 st . l 	 ( $ r6 ) , $ r0 <nl> + 	 jmpa 	 retdone <nl> + <nl> + ret2reg : 	 <nl> + 	 st . l 	 ( $ r6 ) , $ r0 <nl> + 	 sto . l 	 4 ( $ r6 ) , $ r1 <nl> <nl> + retstruct : <nl> + retdone : 	 <nl> 	 / * Return . * / <nl> + 	 ldo . l 	 $ r6 , - 4 ( $ fp ) <nl> + 	 ldo . l 	 $ r7 , - 8 ( $ fp ) <nl> + 	 ldo . l 	 $ r8 , - 12 ( $ fp ) <nl> 	 ret <nl> 	 . size ffi _ call _ EABI , . - ffi _ call _ EABI <nl> 	 <nl> diff - - git a / src / moxie / ffi . c b / src / moxie / ffi . c <nl> index 11abb00 . . 540a042 100644 <nl> - - - a / src / moxie / ffi . c <nl> + + + b / src / moxie / ffi . c <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> / * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <nl> - ffi . c - Copyright ( C ) 2012 Anthony Green <nl> + ffi . c - Copyright ( C ) 2012 , 2013 Anthony Green <nl> <nl> Moxie Foreign Function Interface <nl> <nl> @ @ - 43 , 6 + 43 , 12 @ @ void * ffi _ prep _ args ( char * stack , extended _ cif * ecif ) <nl> p _ argv = ecif - > avalue ; <nl> argp = stack ; <nl> <nl> + if ( ecif - > cif - > rtype - > type = = FFI _ TYPE _ STRUCT ) <nl> + { <nl> + * ( void * * ) argp = ecif - > rvalue ; <nl> + argp + = 4 ; <nl> + } <nl> + <nl> for ( i = ecif - > cif - > nargs , p _ arg = ecif - > cif - > arg _ types ; <nl> ( i ! = 0 ) ; <nl> i - - , p _ arg + + ) <nl> @ @ - 136 , 8 + 142 , 7 @ @ void ffi _ call ( ffi _ cif * cif , <nl> } <nl> else <nl> ecif . rvalue = rvalue ; <nl> - <nl> - <nl> + <nl> switch ( cif - > abi ) <nl> { <nl> case FFI _ EABI : <nl> @ @ - 154 , 19 + 159 , 25 @ @ void ffi _ closure _ eabi ( unsigned arg1 , unsigned arg2 , unsigned arg3 , <nl> 	 	 unsigned arg4 , unsigned arg5 , unsigned arg6 ) <nl> { <nl> / * This function is called by a trampoline . The trampoline stows a <nl> - pointer to the ffi _ closure object in gr7 . We must save this <nl> + pointer to the ffi _ closure object in $ r7 . We must save this <nl> pointer in a place that will persist while we do our work . * / <nl> - register ffi _ closure * creg _ _ asm _ _ ( " $ r7 " ) ; <nl> + register ffi _ closure * creg _ _ asm _ _ ( " $ r12 " ) ; <nl> ffi _ closure * closure = creg ; <nl> <nl> / * Arguments that don ' t fit in registers are found on the stack <nl> at a fixed offset above the current frame pointer . * / <nl> register char * frame _ pointer _ _ asm _ _ ( " $ fp " ) ; <nl> - char * stack _ args = frame _ pointer + 16 ; <nl> + <nl> + / * Pointer to a struct return value . * / <nl> + void * struct _ rvalue = ( void * ) arg1 ; <nl> + <nl> + / * 6 words reserved for register args + 3 words from jsr * / <nl> + char * stack _ args = frame _ pointer + 9 * 4 ; <nl> <nl> / * Lay the register arguments down in a continuous chunk of memory . * / <nl> unsigned register _ args [ 6 ] = <nl> { arg1 , arg2 , arg3 , arg4 , arg5 , arg6 } ; <nl> + char * register _ args _ ptr = ( char * ) register _ args ; <nl> <nl> ffi _ cif * cif = closure - > cif ; <nl> ffi _ type * * arg _ types = cif - > arg _ types ; <nl> @ @ - 174 , 6 + 185 , 12 @ @ void ffi _ closure _ eabi ( unsigned arg1 , unsigned arg2 , unsigned arg3 , <nl> char * ptr = ( char * ) register _ args ; <nl> int i ; <nl> <nl> + / * preserve struct type return pointer passing * / <nl> + if ( ( cif - > rtype ! = NULL ) & & ( cif - > rtype - > type = = FFI _ TYPE _ STRUCT ) ) { <nl> + ptr + = 4 ; <nl> + register _ args _ ptr = ( char * ) & register _ args [ 1 ] ; <nl> + } <nl> + <nl> / * Find the address of each argument . * / <nl> for ( i = 0 ; i < cif - > nargs ; i + + ) <nl> { <nl> @ @ - 190 , 6 + 207 , 7 @ @ void ffi _ closure _ eabi ( unsigned arg1 , unsigned arg2 , unsigned arg3 , <nl> 	 case FFI _ TYPE _ SINT32 : <nl> 	 case FFI _ TYPE _ UINT32 : <nl> 	 case FFI _ TYPE _ FLOAT : <nl> + 	 case FFI _ TYPE _ POINTER : <nl> 	 avalue [ i ] = ptr ; <nl> 	 break ; <nl> 	 case FFI _ TYPE _ STRUCT : <nl> @ @ - 205 , 30 + 223 , 21 @ @ void ffi _ closure _ eabi ( unsigned arg1 , unsigned arg2 , unsigned arg3 , <nl> <nl> / * If we ' ve handled more arguments than fit in registers , <nl> 	 start looking at the those passed on the stack . * / <nl> - if ( ptr = = ( ( char * ) register _ args + ( 6 * 4 ) ) ) <nl> + if ( ptr = = & register _ args [ 6 ] ) <nl> 	 ptr = stack _ args ; <nl> } <nl> <nl> / * Invoke the closure . * / <nl> - if ( cif - > rtype - > type = = FFI _ TYPE _ STRUCT ) <nl> + if ( cif - > rtype & & ( cif - > rtype - > type = = FFI _ TYPE _ STRUCT ) ) <nl> { <nl> - / * The caller allocates space for the return structure , and <nl> - passes a pointer to this space in gr3 . Use this value directly <nl> - as the return value . * / <nl> - register void * return _ struct _ ptr _ _ asm _ _ ( " $ r0 " ) ; <nl> - ( closure - > fun ) ( cif , return _ struct _ ptr , avalue , closure - > user _ data ) ; <nl> + ( closure - > fun ) ( cif , struct _ rvalue , avalue , closure - > user _ data ) ; <nl> } <nl> else <nl> { <nl> / * Allocate space for the return value and call the function . * / <nl> long long rvalue ; <nl> ( closure - > fun ) ( cif , & rvalue , avalue , closure - > user _ data ) ; <nl> - <nl> - / * Functions return 4 - byte or smaller results in gr8 . 8 - byte <nl> - 	 values also use gr9 . We fill the both , even for small return <nl> - 	 values , just to avoid a branch . * / / * <nl> - asm ( " ldi @ ( % 0 , # 0 ) , gr8 " : : " r " ( & rvalue ) ) ; <nl> - asm ( " ldi @ ( % 0 , # 0 ) , gr9 " : : " r " ( & ( ( int * ) & rvalue ) [ 1 ] ) ) ; * / <nl> + asm ( " mov $ r12 , % 0 \ n ld . l $ r0 , ( $ r12 ) \ n ldo . l $ r1 , 4 ( $ r12 ) " : : " r " ( & rvalue ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 239 , 18 + 248 , 21 @ @ ffi _ prep _ closure _ loc ( ffi _ closure * closure , <nl> 	 	 void * user _ data , <nl> 	 	 void * codeloc ) <nl> { <nl> - unsigned int * tramp = ( unsigned int * ) & closure - > tramp [ 0 ] ; <nl> + unsigned short * tramp = ( unsigned short * ) & closure - > tramp [ 0 ] ; <nl> unsigned long fn = ( long ) ffi _ closure _ eabi ; <nl> unsigned long cls = ( long ) codeloc ; <nl> - int i ; <nl> + <nl> + if ( cif - > abi ! = FFI _ EABI ) <nl> + return FFI _ BAD _ ABI ; <nl> <nl> fn = ( unsigned long ) ffi _ closure _ eabi ; <nl> <nl> - tramp [ 0 ] = 0x8cfc0000 + ( fn & 0xffff ) ; / * setlos lo ( fn ) , gr6 * / <nl> - tramp [ 1 ] = 0x8efc0000 + ( cls & 0xffff ) ; / * setlos lo ( cls ) , gr7 * / <nl> - tramp [ 2 ] = 0x8cf80000 + ( fn > > 16 ) ; 	 / * sethi hi ( fn ) , gr6 * / <nl> - tramp [ 3 ] = 0x8ef80000 + ( cls > > 16 ) ; / * sethi hi ( cls ) , gr7 * / <nl> - tramp [ 4 ] = 0x80300006 ; / * jmpl @ ( gr0 , gr6 ) * / <nl> + tramp [ 0 ] = 0x01e0 ; / * ldi . l $ r7 , . . . . * / <nl> + tramp [ 1 ] = cls > > 16 ; <nl> + tramp [ 2 ] = cls & 0xffff ; <nl> + tramp [ 3 ] = 0x1a00 ; / * jmpa . . . . * / <nl> + tramp [ 4 ] = fn > > 16 ; <nl> + tramp [ 5 ] = fn & 0xffff ; <nl> <nl> closure - > cif = cif ; <nl> closure - > fun = fun ; <nl> diff - - git a / src / moxie / ffitarget . h b / src / moxie / ffitarget . h <nl> index 93fae39 . . 623e3ec 100644 <nl> - - - a / src / moxie / ffitarget . h <nl> + + + b / src / moxie / ffitarget . h <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> / * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - * - C - * - <nl> - ffitarget . h - Copyright ( c ) 2012 Anthony Green <nl> + ffitarget . h - Copyright ( c ) 2012 , 2013 Anthony Green <nl> Target configuration macros for Moxie <nl> <nl> Permission is hereby granted , free of charge , to any person obtaining <nl> @ @ - 35 , 12 + 35 , 8 @ @ typedef signed long ffi _ sarg ; <nl> <nl> typedef enum ffi _ abi { <nl> FFI _ FIRST _ ABI = 0 , <nl> - <nl> - # ifdef MOXIE <nl> FFI _ EABI , <nl> FFI _ DEFAULT _ ABI = FFI _ EABI , <nl> - # endif <nl> - <nl> FFI _ LAST _ ABI = FFI _ DEFAULT _ ABI + 1 <nl> } ffi _ abi ; <nl> # endif <nl> @ @ - 50 , 7 + 46 , 7 @ @ typedef enum ffi _ abi { <nl> # define FFI _ CLOSURES 1 <nl> # define FFI _ NATIVE _ RAW _ API 0 <nl> <nl> - / * Trampolines are 5 4 - byte instructions long . * / <nl> - # define FFI _ TRAMPOLINE _ SIZE ( 5 * 4 ) <nl> + / * Trampolines are 12 - bytes long . See ffi _ prep _ closure _ loc . * / <nl> + # define FFI _ TRAMPOLINE _ SIZE ( 12 ) <nl> <nl> # endif <nl> diff - - git a / testsuite / libffi . call / huge _ struct . c b / testsuite / libffi . call / huge _ struct . c <nl> index 365ed95 . . 657fe54 100644 <nl> - - - a / testsuite / libffi . call / huge _ struct . c <nl> + + + b / testsuite / libffi . call / huge _ struct . c <nl> @ @ - 8 , 6 + 8 , 7 @ @ <nl> / * { dg - excess - errors " " { target x86 _ 64 - * - mingw * x86 _ 64 - * - cygwin * } } * / <nl> / * { dg - do run { xfail strongarm * - * - * xscale * - * - * } } * / <nl> / * { dg - options - mlong - double - 128 { target powerpc64 * - * - linux * } } * / <nl> + / * { dg - options - Wformat = 0 { target moxie * - * - elf } } * / <nl> / * { dg - output " " { xfail x86 _ 64 - * - mingw * x86 _ 64 - * - cygwin * } } * / <nl> <nl> # include " ffitest . h " <nl> diff - - git a / testsuite / libffi . call / return _ dbl . c b / testsuite / libffi . call / return _ dbl . c <nl> index 1aab403 . . fd07e50 100644 <nl> - - - a / testsuite / libffi . call / return _ dbl . c <nl> + + + b / testsuite / libffi . call / return _ dbl . c <nl> @ @ - 9 , 6 + 9 , 7 @ @ <nl> <nl> static double return _ dbl ( double dbl ) <nl> { <nl> + printf ( " % f \ n " , dbl ) ; <nl> return 2 * dbl ; <nl> } <nl> int main ( void ) <nl> diff - - git a / testsuite / libffi . special / unwindtest . cc b / testsuite / libffi . special / unwindtest . cc <nl> index d7ffd4a . . a78f4e7 100644 <nl> - - - a / testsuite / libffi . special / unwindtest . cc <nl> + + + b / testsuite / libffi . special / unwindtest . cc <nl> @ @ - 5 , 6 + 5 , 7 @ @ <nl> Originator : 	 Jeff Sturm < jsturm @ one - point . com > * / <nl> <nl> / * { dg - do run } * / <nl> + <nl> # include " ffitestcxx . h " <nl> <nl> # if defined HAVE _ STDINT _ H <nl> diff - - git a / testsuite / libffi . special / unwindtest _ ffi _ call . cc b / testsuite / libffi . special / unwindtest _ ffi _ call . cc <nl> index 29739cd . . 57191f2 100644 <nl> - - - a / testsuite / libffi . special / unwindtest _ ffi _ call . cc <nl> + + + b / testsuite / libffi . special / unwindtest _ ffi _ call . cc <nl> @ @ - 5 , 6 + 5 , 7 @ @ <nl> Originator : 	 Andreas Tobler < andreast @ gcc . gnu . org > 20061213 * / <nl> <nl> / * { dg - do run } * / <nl> + <nl> # include " ffitestcxx . h " <nl> <nl> static int checking ( int a _ _ UNUSED _ _ , short b _ _ UNUSED _ _ ,
diff - - git a / src / sparc / v8 . S b / src / sparc / v8 . S <nl> index ba3cdac . . 6bf7ac0 100644 <nl> - - - a / src / sparc / v8 . S <nl> + + + b / src / sparc / v8 . S <nl> @ @ - 242 , 6 + 242 , 10 @ @ ffi _ closure _ v8 : <nl> 	 be , a 	 done1 <nl> 	 ldd 	 [ % fp - 8 ] , % i0 <nl> <nl> + 	 cmp 	 % o0 , FFI _ TYPE _ UINT64 <nl> + 	 be , a 	 done1 <nl> + 	 ldd 	 [ % fp - 8 ] , % i0 <nl> + <nl> 	 ld 	 [ % fp - 8 ] , % i0 <nl> done1 : <nl> 	 jmp 	 % i7 + 8 <nl> diff - - git a / testsuite / libffi . call / ffitest . h b / testsuite / libffi . call / ffitest . h <nl> index 830fcc7 . . 136a7a6 100644 <nl> - - - a / testsuite / libffi . call / ffitest . h <nl> + + + b / testsuite / libffi . call / ffitest . h <nl> @ @ - 127 , 3 + 127 , 6 @ @ <nl> # define PRId64 " I64d " <nl> # endif <nl> <nl> + # ifndef PRIuPTR <nl> + # define PRIuPTR " u " <nl> + # endif <nl> diff - - git a / testsuite / libffi . call / many2 . c b / testsuite / libffi . call / many2 . c <nl> index 1077159 . . 98eac60 100644 <nl> - - - a / testsuite / libffi . call / many2 . c <nl> + + + b / testsuite / libffi . call / many2 . c <nl> @ @ - 12 , 7 + 12 , 10 @ @ <nl> <nl> typedef unsigned char u8 ; <nl> <nl> - _ _ attribute _ _ ( ( noinline ) ) uint8 _ t <nl> + # ifdef _ _ GNUC _ _ <nl> + _ _ attribute _ _ ( ( noinline ) ) <nl> + # endif <nl> + uint8 _ t <nl> foo ( uint8 _ t a , uint8 _ t b , uint8 _ t c , uint8 _ t d , <nl> uint8 _ t e , uint8 _ t f , uint8 _ t g ) <nl> { <nl> diff - - git a / testsuite / libffi . call / negint . c b / testsuite / libffi . call / negint . c <nl> index 3168113 . . 6e2f26f 100644 <nl> - - - a / testsuite / libffi . call / negint . c <nl> + + + b / testsuite / libffi . call / negint . c <nl> @ @ - 5 , 7 + 5 , 6 @ @ <nl> Originator : 	 From the original ffitest . c * / <nl> <nl> / * { dg - do run } * / <nl> - / * { dg - options - O2 } * / <nl> <nl> # include " ffitest . h " <nl>
diff - - git a / ChangeLog b / ChangeLog <nl> index 3934695 . . 92e0b8b 100644 <nl> - - - a / ChangeLog <nl> + + + b / ChangeLog <nl> @ @ - 1 , 3 + 1 , 12 @ @ <nl> + 2013 - 02 - 08 Anthony Green < green @ moxielogic . com > <nl> + <nl> + 	 * testsuite / libffi . call / cls _ longdouble . c : Remove xfail for <nl> + 	 arm * - * - * . <nl> + <nl> + 2013 - 02 - 08 Anthony Green < green @ moxielogic . com > <nl> + <nl> + 	 * src / sparc / ffi . c ( ffi _ prep _ closure _ loc ) : Fix cache flushing for GCC . <nl> + <nl> 2013 - 02 - 08 Matthias Klose < doko @ ubuntu . com > <nl> <nl> 	 * man / ffi _ prep _ cif . 3 : Clean up for debian linter . <nl> diff - - git a / testsuite / libffi . call / cls _ longdouble . c b / testsuite / libffi . call / cls _ longdouble . c <nl> index e6bac1f . . 5dc9ac7 100644 <nl> - - - a / testsuite / libffi . call / cls _ longdouble . c <nl> + + + b / testsuite / libffi . call / cls _ longdouble . c <nl> @ @ - 5 , 7 + 5 , 9 @ @ <nl> Originator : 	 Blake Chaffin 	 * / <nl> <nl> / * { dg - excess - errors " no long double format " { xfail x86 _ 64 - * - mingw * x86 _ 64 - * - cygwin * } } * / <nl> - / * { dg - do run { xfail arm * - * - * strongarm * - * - * xscale * - * - * } } * / <nl> + / * This test is known to PASS on armv7l - unknown - linux - gnueabihf , so I have <nl> + remove the xfail for arm * - * - * below , until we know more . * / <nl> + / * { dg - do run { xfail strongarm * - * - * xscale * - * - * } } * / <nl> / * { dg - options - mlong - double - 128 { target powerpc64 * - * - linux * } } * / <nl> / * { dg - output " " { xfail x86 _ 64 - * - mingw * x86 _ 64 - * - cygwin * } } * / <nl>
diff - - git a / ChangeLog b / ChangeLog <nl> index fd6f477 . . 99cf6ad 100644 <nl> - - - a / ChangeLog <nl> + + + b / ChangeLog <nl> @ @ - 1 , 4 + 1 , 8 @ @ <nl> - 2012 - 04 - 02 Peter Bergner < bergner @ vnet . ibm . com > <nl> + 2012 - 02 - 08 Matthias Klose < doko @ ubuntu . com > <nl> + <nl> + 	 * man / ffi _ prep _ cif . 3 : Clean up for debian linter . <nl> + <nl> + 2012 - 02 - 08 Peter Bergner < bergner @ vnet . ibm . com > <nl> <nl> 	 * src / powerpc / ffi . c ( ffi _ prep _ args _ SYSV ) : Account for FP args pushed <nl> 	 on the stack . <nl> diff - - git a / man / ffi _ prep _ cif . 3 b / man / ffi _ prep _ cif . 3 <nl> index 4ce049c . . ab2be8a 100644 <nl> - - - a / man / ffi _ prep _ cif . 3 <nl> + + + b / man / ffi _ prep _ cif . 3 <nl> @ @ - 66 , 4 + 66 , 3 @ @ defined in <nl> . Xr ffi 3 , <nl> . Xr ffi _ call 3 , <nl> . Xr ffi _ prep _ cif _ var 3 <nl> -
diff - - git a / ChangeLog b / ChangeLog <nl> index 072eba4 . . 523d049 100644 <nl> - - - a / ChangeLog <nl> + + + b / ChangeLog <nl> @ @ - 1 , 5 + 1 , 11 @ @ <nl> 2013 - 02 - 08 Anthony Green < green @ moxielogic . com > <nl> <nl> + 	 * Makefile . am ( EXTRA _ DIST ) : Add missing files . <nl> + 	 * testsuite / Makefile . am ( EXTRA _ DIST ) : Ditto . <nl> + 	 * Makefile . in : Rebuilt . <nl> + <nl> + 2013 - 02 - 08 Anthony Green < green @ moxielogic . com > <nl> + <nl> 	 * configure . ac : Move sparc asm config checks to within functions <nl> 	 for compatibility with sun tools . <nl> 	 * configure : Rebuilt . <nl> diff - - git a / Makefile . am b / Makefile . am <nl> index a7cd18f . . 5787f9e 100644 <nl> - - - a / Makefile . am <nl> + + + b / Makefile . am <nl> @ @ - 8 , 6 + 8 , 7 @ @ SUBDIRS = include testsuite man <nl> <nl> EXTRA _ DIST = LICENSE ChangeLog . v1 ChangeLog . libgcj configure . host 	 \ <nl> 	 src / aarch64 / ffi . c src / aarch64 / ffitarget . h 	 	 	 \ <nl> + 	 src / aarch64 / sysv . S build - ios . sh 	 	 	 	 \ <nl> 	 src / alpha / ffi . c src / alpha / osf . S src / alpha / ffitarget . h 	 	 \ <nl> 	 src / arm / ffi . c src / arm / sysv . S src / arm / ffitarget . h 	 	 \ <nl> 	 src / avr32 / ffi . c src / avr32 / sysv . S src / avr32 / ffitarget . h 	 	 \ <nl> diff - - git a / Makefile . in b / Makefile . in <nl> index 1ef91f8 . . 7317ec1 100644 <nl> - - - a / Makefile . in <nl> + + + b / Makefile . in <nl> @ @ - 464 , 6 + 464 , 7 @ @ ACLOCAL _ AMFLAGS = - I m4 <nl> SUBDIRS = include testsuite man <nl> EXTRA _ DIST = LICENSE ChangeLog . v1 ChangeLog . libgcj configure . host 	 \ <nl> 	 src / aarch64 / ffi . c src / aarch64 / ffitarget . h 	 	 	 \ <nl> + 	 src / aarch64 / sysv . S build - ios . sh 	 	 	 	 \ <nl> 	 src / alpha / ffi . c src / alpha / osf . S src / alpha / ffitarget . h 	 	 \ <nl> 	 src / arm / ffi . c src / arm / sysv . S src / arm / ffitarget . h 	 	 \ <nl> 	 src / avr32 / ffi . c src / avr32 / sysv . S src / avr32 / ffitarget . h 	 	 \ <nl> diff - - git a / testsuite / Makefile . am b / testsuite / Makefile . am <nl> index 2dabcf7 . . edc6e61 100644 <nl> - - - a / testsuite / Makefile . am <nl> + + + b / testsuite / Makefile . am <nl> @ @ - 17 , 71 + 17 , 78 @ @ EXTRA _ DEJAGNU _ SITE _ CONFIG = . . / local . exp <nl> <nl> CLEANFILES = * . exe core * * . log * . sum <nl> <nl> - EXTRA _ DIST = config / default . exp libffi . call / cls _ 19byte . c \ <nl> - libffi . call / cls _ align _ longdouble _ split . c libffi . call / closure _ loc _ fn0 . c \ <nl> - libffi . call / cls _ schar . c libffi . call / closure _ fn1 . c \ <nl> - libffi . call / many2 _ win32 . c libffi . call / return _ ul . c \ <nl> - libffi . call / cls _ align _ double . c libffi . call / return _ fl2 . c \ <nl> - libffi . call / cls _ 1 _ 1byte . c libffi . call / cls _ 64byte . c \ <nl> - libffi . call / nested _ struct7 . c libffi . call / cls _ align _ sint32 . c \ <nl> - libffi . call / nested _ struct2 . c libffi . call / ffitest . h \ <nl> - libffi . call / nested _ struct4 . c libffi . call / cls _ multi _ ushort . c \ <nl> - libffi . call / struct3 . c libffi . call / cls _ 3byte1 . c \ <nl> - libffi . call / cls _ 16byte . c libffi . call / struct8 . c \ <nl> - libffi . call / nested _ struct8 . c libffi . call / cls _ multi _ sshort . c \ <nl> - libffi . call / cls _ 3byte2 . c libffi . call / fastthis2 _ win32 . c \ <nl> - libffi . call / cls _ pointer . c libffi . call / err _ bad _ typedef . c \ <nl> - libffi . call / cls _ 4 _ 1byte . c libffi . call / cls _ 9byte2 . c \ <nl> - libffi . call / cls _ multi _ schar . c libffi . call / stret _ medium2 . c \ <nl> - libffi . call / cls _ 5 _ 1 _ byte . c libffi . call / call . exp \ <nl> - libffi . call / cls _ double . c libffi . call / cls _ align _ sint16 . c \ <nl> - libffi . call / cls _ uint . c libffi . call / return _ ll1 . c \ <nl> - libffi . call / nested _ struct3 . c libffi . call / cls _ 20byte1 . c \ <nl> - libffi . call / closure _ fn4 . c libffi . call / cls _ uchar . c \ <nl> - libffi . call / struct2 . c libffi . call / cls _ 7byte . c libffi . call / strlen . c \ <nl> - libffi . call / many . c libffi . call / testclosure . c libffi . call / return _ fl . c \ <nl> - libffi . call / struct5 . c libffi . call / cls _ 12byte . c \ <nl> - libffi . call / cls _ multi _ sshortchar . c \ <nl> - libffi . call / cls _ align _ longdouble _ split2 . c libffi . call / return _ dbl2 . c \ <nl> - libffi . call / return _ fl3 . c libffi . call / stret _ medium . c \ <nl> - libffi . call / nested _ struct6 . c \ <nl> - libffi . call / closure _ fn3 . c libffi . call / float3 . c libffi . call / many2 . c \ <nl> - libffi . call / closure _ stdcall . c libffi . call / cls _ align _ uint16 . c \ <nl> - libffi . call / cls _ 9byte1 . c libffi . call / closure _ fn6 . c \ <nl> - libffi . call / cls _ double _ va . c libffi . call / cls _ align _ pointer . c \ <nl> - libffi . call / cls _ align _ longdouble . c libffi . call / closure _ fn2 . c \ <nl> - libffi . call / cls _ sshort . c libffi . call / many _ win32 . c \ <nl> - libffi . call / nested _ struct . c libffi . call / cls _ 20byte . c \ <nl> - libffi . call / cls _ longdouble . c libffi . call / cls _ multi _ uchar . c \ <nl> - libffi . call / return _ uc . c libffi . call / closure _ thiscall . c \ <nl> - libffi . call / cls _ 18byte . c libffi . call / cls _ 8byte . c \ <nl> - libffi . call / promotion . c libffi . call / struct1 _ win32 . c \ <nl> - libffi . call / return _ dbl . c libffi . call / cls _ 24byte . c \ <nl> - libffi . call / struct4 . c libffi . call / cls _ 6byte . c \ <nl> - libffi . call / cls _ align _ uint32 . c libffi . call / float . c \ <nl> - libffi . call / float1 . c libffi . call / float _ va . c libffi . call / negint . c \ <nl> - libffi . call / return _ dbl1 . c libffi . call / cls _ 3 _ 1byte . c \ <nl> - libffi . call / cls _ align _ float . c libffi . call / return _ fl1 . c \ <nl> - libffi . call / nested _ struct10 . c libffi . call / nested _ struct5 . c \ <nl> - libffi . call / fastthis1 _ win32 . c libffi . call / cls _ align _ sint64 . c \ <nl> - libffi . call / stret _ large2 . c libffi . call / return _ sl . c \ <nl> - libffi . call / closure _ fn0 . c libffi . call / cls _ 5byte . c \ <nl> - libffi . call / cls _ 2byte . c libffi . call / float2 . c \ <nl> - libffi . call / cls _ dbls _ struct . c libffi . call / cls _ sint . c \ <nl> - libffi . call / stret _ large . c libffi . call / cls _ ulonglong . c \ <nl> - libffi . call / cls _ ushort . c libffi . call / nested _ struct1 . c \ <nl> - libffi . call / err _ bad _ abi . c libffi . call / cls _ longdouble _ va . c \ <nl> - libffi . call / cls _ float . c libffi . call / cls _ pointer _ stack . c \ <nl> - libffi . call / pyobjc - tc . c libffi . call / cls _ multi _ ushortchar . c \ <nl> - libffi . call / struct1 . c libffi . call / nested _ struct9 . c \ <nl> - libffi . call / huge _ struct . c libffi . call / problem1 . c libffi . call / float4 . c \ <nl> - libffi . call / fastthis3 _ win32 . c libffi . call / return _ ldl . c \ <nl> - libffi . call / strlen2 _ win32 . c libffi . call / closure _ fn5 . c \ <nl> - libffi . call / struct2 _ win32 . c libffi . call / struct6 . c \ <nl> - libffi . call / return _ ll . c libffi . call / struct9 . c libffi . call / return _ sc . c \ <nl> - libffi . call / struct7 . c libffi . call / cls _ align _ uint64 . c \ <nl> - libffi . call / cls _ 4byte . c libffi . call / strlen _ win32 . c \ <nl> - libffi . call / cls _ 6 _ 1 _ byte . c libffi . call / cls _ 7 _ 1 _ byte . c \ <nl> - libffi . special / unwindtest . cc libffi . special / special . exp \ <nl> - libffi . special / unwindtest _ ffi _ call . cc libffi . special / ffitestcxx . h \ <nl> - lib / wrapper . exp lib / target - libpath . exp lib / libffi . exp <nl> + EXTRA _ DIST = config / default . exp libffi . call / cls _ 19byte . c 	 	 \ <nl> + libffi . call / cls _ align _ longdouble _ split . c 	 	 	 	 \ <nl> + libffi . call / closure _ loc _ fn0 . c libffi . call / cls _ schar . c 	 	 	 \ <nl> + libffi . call / closure _ fn1 . c libffi . call / many2 _ win32 . c 	 	 	 \ <nl> + libffi . call / return _ ul . c libffi . call / cls _ align _ double . c 	 	 	 \ <nl> + libffi . call / return _ fl2 . c libffi . call / cls _ 1 _ 1byte . c 	 	 	 \ <nl> + libffi . call / cls _ 64byte . c libffi . call / nested _ struct7 . c 	 	 	 \ <nl> + libffi . call / cls _ align _ sint32 . c libffi . call / nested _ struct2 . c 	 	 \ <nl> + libffi . call / ffitest . h libffi . call / nested _ struct4 . c 	 	 	 \ <nl> + libffi . call / cls _ multi _ ushort . c libffi . call / struct3 . c 	 	 	 \ <nl> + libffi . call / cls _ 3byte1 . c libffi . call / cls _ 16byte . c 	 	 	 \ <nl> + libffi . call / struct8 . c libffi . call / nested _ struct8 . c 	 	 	 \ <nl> + libffi . call / cls _ multi _ sshort . c libffi . call / cls _ 3byte2 . c 	 	 	 \ <nl> + libffi . call / fastthis2 _ win32 . c libffi . call / cls _ pointer . c 	 	 	 \ <nl> + libffi . call / err _ bad _ typedef . c libffi . call / cls _ 4 _ 1byte . c 	 	 	 \ <nl> + libffi . call / cls _ 9byte2 . c libffi . call / cls _ multi _ schar . c 	 	 	 \ <nl> + libffi . call / stret _ medium2 . c libffi . call / cls _ 5 _ 1 _ byte . c 	 	 	 \ <nl> + libffi . call / call . exp libffi . call / cls _ double . c 	 	 	 	 \ <nl> + libffi . call / cls _ align _ sint16 . c libffi . call / cls _ uint . c 	 	 	 \ <nl> + libffi . call / return _ ll1 . c libffi . call / nested _ struct3 . c 	 	 	 \ <nl> + libffi . call / cls _ 20byte1 . c libffi . call / closure _ fn4 . c 	 	 	 \ <nl> + libffi . call / cls _ uchar . c libffi . call / struct2 . c libffi . call / cls _ 7byte . c 	 \ <nl> + libffi . call / strlen . c libffi . call / many . c libffi . call / testclosure . c 	 \ <nl> + libffi . call / return _ fl . c libffi . call / struct5 . c 	 	 	 	 \ <nl> + libffi . call / cls _ 12byte . c libffi . call / cls _ multi _ sshortchar . c 	 	 \ <nl> + libffi . call / cls _ align _ longdouble _ split2 . c libffi . call / return _ dbl2 . c 	 \ <nl> + libffi . call / return _ fl3 . c libffi . call / stret _ medium . c 	 	 	 \ <nl> + libffi . call / nested _ struct6 . c libffi . call / closure _ fn3 . c 	 	 	 \ <nl> + libffi . call / float3 . c libffi . call / many2 . c 	 	 	 	 \ <nl> + libffi . call / closure _ stdcall . c libffi . call / cls _ align _ uint16 . c 	 	 \ <nl> + libffi . call / cls _ 9byte1 . c libffi . call / closure _ fn6 . c 	 	 	 \ <nl> + libffi . call / cls _ double _ va . c libffi . call / cls _ align _ pointer . c 	 	 \ <nl> + libffi . call / cls _ align _ longdouble . c libffi . call / closure _ fn2 . c 	 	 \ <nl> + libffi . call / cls _ sshort . c libffi . call / many _ win32 . c 	 	 	 \ <nl> + libffi . call / nested _ struct . c libffi . call / cls _ 20byte . c 	 	 	 \ <nl> + libffi . call / cls _ longdouble . c libffi . call / cls _ multi _ uchar . c 	 	 \ <nl> + libffi . call / return _ uc . c libffi . call / closure _ thiscall . c 	 	 	 \ <nl> + libffi . call / cls _ 18byte . c libffi . call / cls _ 8byte . c 	 	 	 \ <nl> + libffi . call / promotion . c libffi . call / struct1 _ win32 . c 	 	 	 \ <nl> + libffi . call / return _ dbl . c libffi . call / cls _ 24byte . c 	 	 	 \ <nl> + libffi . call / struct4 . c libffi . call / cls _ 6byte . c 	 	 	 	 \ <nl> + libffi . call / cls _ align _ uint32 . c libffi . call / float . c 	 	 	 \ <nl> + libffi . call / float1 . c libffi . call / float _ va . c libffi . call / negint . c 	 \ <nl> + libffi . call / return _ dbl1 . c libffi . call / cls _ 3 _ 1byte . c 	 	 	 \ <nl> + libffi . call / cls _ align _ float . c libffi . call / return _ fl1 . c 	 	 	 \ <nl> + libffi . call / nested _ struct10 . c libffi . call / nested _ struct5 . c 	 	 \ <nl> + libffi . call / fastthis1 _ win32 . c libffi . call / cls _ align _ sint64 . c 	 	 \ <nl> + libffi . call / stret _ large2 . c libffi . call / return _ sl . c 	 	 	 \ <nl> + libffi . call / closure _ fn0 . c libffi . call / cls _ 5byte . c 	 	 	 \ <nl> + libffi . call / cls _ 2byte . c libffi . call / float2 . c 	 	 	 	 \ <nl> + libffi . call / cls _ dbls _ struct . c libffi . call / cls _ sint . c 	 	 	 \ <nl> + libffi . call / stret _ large . c libffi . call / cls _ ulonglong . c 	 	 	 \ <nl> + libffi . call / cls _ ushort . c libffi . call / nested _ struct1 . c 	 	 	 \ <nl> + libffi . call / err _ bad _ abi . c libffi . call / cls _ longdouble _ va . c 	 	 \ <nl> + libffi . call / cls _ float . c libffi . call / cls _ pointer _ stack . c 	 	 \ <nl> + libffi . call / pyobjc - tc . c libffi . call / cls _ multi _ ushortchar . c 	 	 \ <nl> + libffi . call / struct1 . c libffi . call / nested _ struct9 . c 	 	 	 \ <nl> + libffi . call / huge _ struct . c libffi . call / problem1 . c 	 	 	 \ <nl> + libffi . call / float4 . c libffi . call / fastthis3 _ win32 . c 	 	 	 \ <nl> + libffi . call / return _ ldl . c libffi . call / strlen2 _ win32 . c 	 	 	 \ <nl> + libffi . call / closure _ fn5 . c libffi . call / struct2 _ win32 . c 	 	 	 \ <nl> + libffi . call / struct6 . c libffi . call / return _ ll . c libffi . call / struct9 . c 	 \ <nl> + libffi . call / return _ sc . c libffi . call / struct7 . c 	 	 	 	 \ <nl> + libffi . call / cls _ align _ uint64 . c libffi . call / cls _ 4byte . c 	 	 	 \ <nl> + libffi . call / strlen _ win32 . c libffi . call / cls _ 6 _ 1 _ byte . c 	 	 	 \ <nl> + libffi . call / cls _ 7 _ 1 _ byte . c libffi . special / unwindtest . cc 	 	 	 \ <nl> + libffi . special / special . exp libffi . special / unwindtest _ ffi _ call . cc 	 \ <nl> + libffi . special / ffitestcxx . h lib / wrapper . exp lib / target - libpath . exp 	 \ <nl> + lib / libffi . exp libffi . call / cls _ struct _ va1 . c 	 	 	 	 \ <nl> + libffi . call / cls _ uchar _ va . c libffi . call / cls _ uint _ va . c 	 	 	 \ <nl> + libffi . call / cls _ ulong _ va . c libffi . call / cls _ ushort _ va . c 	 	 	 \ <nl> + libffi . call / nested _ struct11 . c libffi . call / uninitialized . c 	 	 \ <nl> + libffi . call / va _ 1 . c libffi . call / va _ struct1 . c libffi . call / va _ struct2 . c 	 \ <nl> + libffi . call / va _ struct3 . c <nl> + <nl> diff - - git a / testsuite / Makefile . in b / testsuite / Makefile . in <nl> index c22b430 . . a3ba066 100644 <nl> - - - a / testsuite / Makefile . in <nl> + + + b / testsuite / Makefile . in <nl> @ @ - 229 , 74 + 229 , 80 @ @ RUNTEST = ` if [ - f $ ( top _ srcdir ) / . . / dejagnu / runtest ] ; then \ <nl> <nl> EXTRA _ DEJAGNU _ SITE _ CONFIG = . . / local . exp <nl> CLEANFILES = * . exe core * * . log * . sum <nl> - EXTRA _ DIST = config / default . exp libffi . call / cls _ 19byte . c \ <nl> - libffi . call / cls _ align _ longdouble _ split . c libffi . call / closure _ loc _ fn0 . c \ <nl> - libffi . call / cls _ schar . c libffi . call / closure _ fn1 . c \ <nl> - libffi . call / many2 _ win32 . c libffi . call / return _ ul . c \ <nl> - libffi . call / cls _ align _ double . c libffi . call / return _ fl2 . c \ <nl> - libffi . call / cls _ 1 _ 1byte . c libffi . call / cls _ 64byte . c \ <nl> - libffi . call / nested _ struct7 . c libffi . call / cls _ align _ sint32 . c \ <nl> - libffi . call / nested _ struct2 . c libffi . call / ffitest . h \ <nl> - libffi . call / nested _ struct4 . c libffi . call / cls _ multi _ ushort . c \ <nl> - libffi . call / struct3 . c libffi . call / cls _ 3byte1 . c \ <nl> - libffi . call / cls _ 16byte . c libffi . call / struct8 . c \ <nl> - libffi . call / nested _ struct8 . c libffi . call / cls _ multi _ sshort . c \ <nl> - libffi . call / cls _ 3byte2 . c libffi . call / fastthis2 _ win32 . c \ <nl> - libffi . call / cls _ pointer . c libffi . call / err _ bad _ typedef . c \ <nl> - libffi . call / cls _ 4 _ 1byte . c libffi . call / cls _ 9byte2 . c \ <nl> - libffi . call / cls _ multi _ schar . c libffi . call / stret _ medium2 . c \ <nl> - libffi . call / cls _ 5 _ 1 _ byte . c libffi . call / call . exp \ <nl> - libffi . call / cls _ double . c libffi . call / cls _ align _ sint16 . c \ <nl> - libffi . call / cls _ uint . c libffi . call / return _ ll1 . c \ <nl> - libffi . call / nested _ struct3 . c libffi . call / cls _ 20byte1 . c \ <nl> - libffi . call / closure _ fn4 . c libffi . call / cls _ uchar . c \ <nl> - libffi . call / struct2 . c libffi . call / cls _ 7byte . c libffi . call / strlen . c \ <nl> - libffi . call / many . c libffi . call / testclosure . c libffi . call / return _ fl . c \ <nl> - libffi . call / struct5 . c libffi . call / cls _ 12byte . c \ <nl> - libffi . call / cls _ multi _ sshortchar . c \ <nl> - libffi . call / cls _ align _ longdouble _ split2 . c libffi . call / return _ dbl2 . c \ <nl> - libffi . call / return _ fl3 . c libffi . call / stret _ medium . c \ <nl> - libffi . call / nested _ struct6 . c \ <nl> - libffi . call / closure _ fn3 . c libffi . call / float3 . c libffi . call / many2 . c \ <nl> - libffi . call / closure _ stdcall . c libffi . call / cls _ align _ uint16 . c \ <nl> - libffi . call / cls _ 9byte1 . c libffi . call / closure _ fn6 . c \ <nl> - libffi . call / cls _ double _ va . c libffi . call / cls _ align _ pointer . c \ <nl> - libffi . call / cls _ align _ longdouble . c libffi . call / closure _ fn2 . c \ <nl> - libffi . call / cls _ sshort . c libffi . call / many _ win32 . c \ <nl> - libffi . call / nested _ struct . c libffi . call / cls _ 20byte . c \ <nl> - libffi . call / cls _ longdouble . c libffi . call / cls _ multi _ uchar . c \ <nl> - libffi . call / return _ uc . c libffi . call / closure _ thiscall . c \ <nl> - libffi . call / cls _ 18byte . c libffi . call / cls _ 8byte . c \ <nl> - libffi . call / promotion . c libffi . call / struct1 _ win32 . c \ <nl> - libffi . call / return _ dbl . c libffi . call / cls _ 24byte . c \ <nl> - libffi . call / struct4 . c libffi . call / cls _ 6byte . c \ <nl> - libffi . call / cls _ align _ uint32 . c libffi . call / float . c \ <nl> - libffi . call / float1 . c libffi . call / float _ va . c libffi . call / negint . c \ <nl> - libffi . call / return _ dbl1 . c libffi . call / cls _ 3 _ 1byte . c \ <nl> - libffi . call / cls _ align _ float . c libffi . call / return _ fl1 . c \ <nl> - libffi . call / nested _ struct10 . c libffi . call / nested _ struct5 . c \ <nl> - libffi . call / fastthis1 _ win32 . c libffi . call / cls _ align _ sint64 . c \ <nl> - libffi . call / stret _ large2 . c libffi . call / return _ sl . c \ <nl> - libffi . call / closure _ fn0 . c libffi . call / cls _ 5byte . c \ <nl> - libffi . call / cls _ 2byte . c libffi . call / float2 . c \ <nl> - libffi . call / cls _ dbls _ struct . c libffi . call / cls _ sint . c \ <nl> - libffi . call / stret _ large . c libffi . call / cls _ ulonglong . c \ <nl> - libffi . call / cls _ ushort . c libffi . call / nested _ struct1 . c \ <nl> - libffi . call / err _ bad _ abi . c libffi . call / cls _ longdouble _ va . c \ <nl> - libffi . call / cls _ float . c libffi . call / cls _ pointer _ stack . c \ <nl> - libffi . call / pyobjc - tc . c libffi . call / cls _ multi _ ushortchar . c \ <nl> - libffi . call / struct1 . c libffi . call / nested _ struct9 . c \ <nl> - libffi . call / huge _ struct . c libffi . call / problem1 . c libffi . call / float4 . c \ <nl> - libffi . call / fastthis3 _ win32 . c libffi . call / return _ ldl . c \ <nl> - libffi . call / strlen2 _ win32 . c libffi . call / closure _ fn5 . c \ <nl> - libffi . call / struct2 _ win32 . c libffi . call / struct6 . c \ <nl> - libffi . call / return _ ll . c libffi . call / struct9 . c libffi . call / return _ sc . c \ <nl> - libffi . call / struct7 . c libffi . call / cls _ align _ uint64 . c \ <nl> - libffi . call / cls _ 4byte . c libffi . call / strlen _ win32 . c \ <nl> - libffi . call / cls _ 6 _ 1 _ byte . c libffi . call / cls _ 7 _ 1 _ byte . c \ <nl> - libffi . special / unwindtest . cc libffi . special / special . exp \ <nl> - libffi . special / unwindtest _ ffi _ call . cc libffi . special / ffitestcxx . h \ <nl> - lib / wrapper . exp lib / target - libpath . exp lib / libffi . exp <nl> + EXTRA _ DIST = config / default . exp libffi . call / cls _ 19byte . c 	 	 \ <nl> + libffi . call / cls _ align _ longdouble _ split . c 	 	 	 	 \ <nl> + libffi . call / closure _ loc _ fn0 . c libffi . call / cls _ schar . c 	 	 	 \ <nl> + libffi . call / closure _ fn1 . c libffi . call / many2 _ win32 . c 	 	 	 \ <nl> + libffi . call / return _ ul . c libffi . call / cls _ align _ double . c 	 	 	 \ <nl> + libffi . call / return _ fl2 . c libffi . call / cls _ 1 _ 1byte . c 	 	 	 \ <nl> + libffi . call / cls _ 64byte . c libffi . call / nested _ struct7 . c 	 	 	 \ <nl> + libffi . call / cls _ align _ sint32 . c libffi . call / nested _ struct2 . c 	 	 \ <nl> + libffi . call / ffitest . h libffi . call / nested _ struct4 . c 	 	 	 \ <nl> + libffi . call / cls _ multi _ ushort . c libffi . call / struct3 . c 	 	 	 \ <nl> + libffi . call / cls _ 3byte1 . c libffi . call / cls _ 16byte . c 	 	 	 \ <nl> + libffi . call / struct8 . c libffi . call / nested _ struct8 . c 	 	 	 \ <nl> + libffi . call / cls _ multi _ sshort . c libffi . call / cls _ 3byte2 . c 	 	 	 \ <nl> + libffi . call / fastthis2 _ win32 . c libffi . call / cls _ pointer . c 	 	 	 \ <nl> + libffi . call / err _ bad _ typedef . c libffi . call / cls _ 4 _ 1byte . c 	 	 	 \ <nl> + libffi . call / cls _ 9byte2 . c libffi . call / cls _ multi _ schar . c 	 	 	 \ <nl> + libffi . call / stret _ medium2 . c libffi . call / cls _ 5 _ 1 _ byte . c 	 	 	 \ <nl> + libffi . call / call . exp libffi . call / cls _ double . c 	 	 	 	 \ <nl> + libffi . call / cls _ align _ sint16 . c libffi . call / cls _ uint . c 	 	 	 \ <nl> + libffi . call / return _ ll1 . c libffi . call / nested _ struct3 . c 	 	 	 \ <nl> + libffi . call / cls _ 20byte1 . c libffi . call / closure _ fn4 . c 	 	 	 \ <nl> + libffi . call / cls _ uchar . c libffi . call / struct2 . c libffi . call / cls _ 7byte . c 	 \ <nl> + libffi . call / strlen . c libffi . call / many . c libffi . call / testclosure . c 	 \ <nl> + libffi . call / return _ fl . c libffi . call / struct5 . c 	 	 	 	 \ <nl> + libffi . call / cls _ 12byte . c libffi . call / cls _ multi _ sshortchar . c 	 	 \ <nl> + libffi . call / cls _ align _ longdouble _ split2 . c libffi . call / return _ dbl2 . c 	 \ <nl> + libffi . call / return _ fl3 . c libffi . call / stret _ medium . c 	 	 	 \ <nl> + libffi . call / nested _ struct6 . c libffi . call / closure _ fn3 . c 	 	 	 \ <nl> + libffi . call / float3 . c libffi . call / many2 . c 	 	 	 	 \ <nl> + libffi . call / closure _ stdcall . c libffi . call / cls _ align _ uint16 . c 	 	 \ <nl> + libffi . call / cls _ 9byte1 . c libffi . call / closure _ fn6 . c 	 	 	 \ <nl> + libffi . call / cls _ double _ va . c libffi . call / cls _ align _ pointer . c 	 	 \ <nl> + libffi . call / cls _ align _ longdouble . c libffi . call / closure _ fn2 . c 	 	 \ <nl> + libffi . call / cls _ sshort . c libffi . call / many _ win32 . c 	 	 	 \ <nl> + libffi . call / nested _ struct . c libffi . call / cls _ 20byte . c 	 	 	 \ <nl> + libffi . call / cls _ longdouble . c libffi . call / cls _ multi _ uchar . c 	 	 \ <nl> + libffi . call / return _ uc . c libffi . call / closure _ thiscall . c 	 	 	 \ <nl> + libffi . call / cls _ 18byte . c libffi . call / cls _ 8byte . c 	 	 	 \ <nl> + libffi . call / promotion . c libffi . call / struct1 _ win32 . c 	 	 	 \ <nl> + libffi . call / return _ dbl . c libffi . call / cls _ 24byte . c 	 	 	 \ <nl> + libffi . call / struct4 . c libffi . call / cls _ 6byte . c 	 	 	 	 \ <nl> + libffi . call / cls _ align _ uint32 . c libffi . call / float . c 	 	 	 \ <nl> + libffi . call / float1 . c libffi . call / float _ va . c libffi . call / negint . c 	 \ <nl> + libffi . call / return _ dbl1 . c libffi . call / cls _ 3 _ 1byte . c 	 	 	 \ <nl> + libffi . call / cls _ align _ float . c libffi . call / return _ fl1 . c 	 	 	 \ <nl> + libffi . call / nested _ struct10 . c libffi . call / nested _ struct5 . c 	 	 \ <nl> + libffi . call / fastthis1 _ win32 . c libffi . call / cls _ align _ sint64 . c 	 	 \ <nl> + libffi . call / stret _ large2 . c libffi . call / return _ sl . c 	 	 	 \ <nl> + libffi . call / closure _ fn0 . c libffi . call / cls _ 5byte . c 	 	 	 \ <nl> + libffi . call / cls _ 2byte . c libffi . call / float2 . c 	 	 	 	 \ <nl> + libffi . call / cls _ dbls _ struct . c libffi . call / cls _ sint . c 	 	 	 \ <nl> + libffi . call / stret _ large . c libffi . call / cls _ ulonglong . c 	 	 	 \ <nl> + libffi . call / cls _ ushort . c libffi . call / nested _ struct1 . c 	 	 	 \ <nl> + libffi . call / err _ bad _ abi . c libffi . call / cls _ longdouble _ va . c 	 	 \ <nl> + libffi . call / cls _ float . c libffi . call / cls _ pointer _ stack . c 	 	 \ <nl> + libffi . call / pyobjc - tc . c libffi . call / cls _ multi _ ushortchar . c 	 	 \ <nl> + libffi . call / struct1 . c libffi . call / nested _ struct9 . c 	 	 	 \ <nl> + libffi . call / huge _ struct . c libffi . call / problem1 . c 	 	 	 \ <nl> + libffi . call / float4 . c libffi . call / fastthis3 _ win32 . c 	 	 	 \ <nl> + libffi . call / return _ ldl . c libffi . call / strlen2 _ win32 . c 	 	 	 \ <nl> + libffi . call / closure _ fn5 . c libffi . call / struct2 _ win32 . c 	 	 	 \ <nl> + libffi . call / struct6 . c libffi . call / return _ ll . c libffi . call / struct9 . c 	 \ <nl> + libffi . call / return _ sc . c libffi . call / struct7 . c 	 	 	 	 \ <nl> + libffi . call / cls _ align _ uint64 . c libffi . call / cls _ 4byte . c 	 	 	 \ <nl> + libffi . call / strlen _ win32 . c libffi . call / cls _ 6 _ 1 _ byte . c 	 	 	 \ <nl> + libffi . call / cls _ 7 _ 1 _ byte . c libffi . special / unwindtest . cc 	 	 	 \ <nl> + libffi . special / special . exp libffi . special / unwindtest _ ffi _ call . cc 	 \ <nl> + libffi . special / ffitestcxx . h lib / wrapper . exp lib / target - libpath . exp 	 \ <nl> + lib / libffi . exp libffi . call / cls _ struct _ va1 . c 	 	 	 	 \ <nl> + libffi . call / cls _ uchar _ va . c libffi . call / cls _ uint _ va . c 	 	 	 \ <nl> + libffi . call / cls _ ulong _ va . c libffi . call / cls _ ushort _ va . c 	 	 	 \ <nl> + libffi . call / nested _ struct11 . c libffi . call / uninitialized . c 	 	 \ <nl> + libffi . call / va _ 1 . c libffi . call / va _ struct1 . c libffi . call / va _ struct2 . c 	 \ <nl> + libffi . call / va _ struct3 . c <nl> <nl> all : all - am <nl>
diff - - git a / ChangeLog b / ChangeLog <nl> index 1b09d91 . . 824d30a 100644 <nl> - - - a / ChangeLog <nl> + + + b / ChangeLog <nl> @ @ - 1 , 3 + 1 , 9 @ @ <nl> + 2013 - 02 - 08 Nathan Rossi < nathan . rossi @ xilinx . com > <nl> + <nl> + 	 * src / microblaze / ffi . c ( ffi _ closure _ call _ SYSV ) : Fix handling of <nl> + 	 small big - endian structures . <nl> + 	 ( ffi _ prep _ args ) : Ditto . <nl> + <nl> 2013 - 02 - 07 Anthony Green < green @ moxielogic . com > <nl> <nl> 	 * src / sparc / v8 . S ( ffi _ call _ v8 ) : Fix typo from last patch <nl> diff - - git a / src / microblaze / ffi . c b / src / microblaze / ffi . c <nl> index 86ea37d . . 5c155c5 100644 <nl> - - - a / src / microblaze / ffi . c <nl> + + + b / src / microblaze / ffi . c <nl> @ @ - 119 , 17 + 119 , 8 @ @ void ffi _ prep _ args ( void * stack , extended _ cif * ecif ) <nl> 	 	 	 	 * / <nl> 	 	 	 	 if ( size < WORD _ SIZE ) <nl> 	 	 	 	 { <nl> - 	 	 	 	 	 if ( size = = 1 ) { <nl> - 	 	 	 	 	 	 * ( unsigned int * ) addr = <nl> - 	 	 	 	 	 	 	 	 ( unsigned int ) * ( UINT8 * ) ( value ) ; <nl> - 	 	 	 	 	 } else if ( size = = 2 ) { <nl> - 	 	 	 	 	 	 * ( unsigned int * ) addr = <nl> - 	 	 	 	 	 	 	 	 ( unsigned int ) * ( UINT16 * ) ( value ) ; <nl> - 	 	 	 	 	 } else { <nl> - 	 	 	 	 	 	 * ( unsigned int * ) addr = <nl> - 	 	 	 	 	 	 	 	 ( ( unsigned int ) * ( UINT32 * ) ( value ) ) > > 8 ; <nl> - 	 	 	 	 	 } <nl> - 	 	 	 	 	 break ; <nl> + 	 	 	 	 memcpy ( addr + ( WORD _ SIZE - size ) , value , size ) ; <nl> + 	 	 	 	 break ; <nl> 	 	 	 	 } <nl> # endif <nl> 	 	 	 case FFI _ TYPE _ SINT32 : <nl> @ @ - 250 , 16 + 241 , 7 @ @ void ffi _ closure _ call _ SYSV ( void * register _ args , void * stack _ args , <nl> 	 	 	 	 * / <nl> 	 	 	 	 if ( arg _ types [ i ] - > size < WORD _ SIZE ) <nl> 	 	 	 	 { <nl> - 	 	 	 	 	 if ( arg _ types [ i ] - > size = = 1 ) { <nl> - 	 	 	 	 	 	 * ( unsigned int * ) ptr = <nl> - 	 	 	 	 	 	 	 	 ( ( unsigned int ) * ( UINT32 * ) ( ptr ) ) < < 24 ; <nl> - 	 	 	 	 	 } else if ( arg _ types [ i ] - > size = = 2 ) { <nl> - 	 	 	 	 	 	 * ( unsigned int * ) ptr = <nl> - 	 	 	 	 	 	 	 	 ( ( unsigned int ) * ( UINT32 * ) ( ptr ) ) < < 16 ; <nl> - 	 	 	 	 	 } else { <nl> - 	 	 	 	 	 	 * ( unsigned int * ) ptr = <nl> - 	 	 	 	 	 	 	 	 ( ( unsigned int ) * ( UINT32 * ) ( ptr ) ) < < 8 ; <nl> - 	 	 	 	 	 } <nl> + 	 	 	 	 memcpy ( ptr , ptr + ( WORD _ SIZE - arg _ types [ i ] - > size ) , arg _ types [ i ] - > size ) ; <nl> 	 	 	 	 } <nl> # endif <nl> 	 	 	 	 avalue [ i ] = ( void * ) ptr ;
