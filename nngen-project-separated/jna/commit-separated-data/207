BLEU SCORE: 0.37991784282579627

TEST MSG: fix javadoc errors
GENERATED MSG: javadoc fixes

TEST DIFF (one line): diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> index 5bda7a8 . . 4fe6805 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java <nl> @ @ - 81 , 7 + 81 , 7 @ @ public interface IDispatch extends IUnknown { <nl> * @ param lcid The locale context in which to interpret the names . <nl> * @ param rgDispId Caller - allocated array , each element of which contains an identifier ( ID ) corresponding to one of the names passed in <nl> * the rgszNames array . The first element represents the member name . The subsequent elements represent each of the member ' s parameters . <nl> - * @ return <nl> + * @ return status of the operation <nl> * / <nl> public HRESULT GetIDsOfNames ( REFIID riid , WString [ ] rgszNames , int cNames , <nl> LCID lcid , DISPIDByReference rgDispId ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Wininet . java b / contrib / platform / src / com / sun / jna / platform / win32 / Wininet . java <nl> index e1c4c59 . . fdc9c0b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Wininet . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Wininet . java <nl> @ @ - 198 , 8 + 198 , 7 @ @ public interface Wininet extends StdCallLibrary { <nl> * < / code > <nl> * < / pre > <nl> * <nl> - * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa385134 ( v = <nl> - * vs . 85 ) . aspx <nl> + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa385134 ( v = vs . 85 ) . aspx " > MSDN < / a > <nl> * / <nl> static class INTERNET _ CACHE _ ENTRY _ INFO extends Structure { <nl> public static final List < String > FIELDS = createFieldsOrder ( <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 25f820a . . d960223 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 549 , 7 + 549 , 7 @ @ public final class Native implements Version { <nl> * all ancestor classes and interfaces for a declaring class which <nl> * implements { @ link Library } . <nl> * @ param cls The given class <nl> - * @ param Tge enclosing class <nl> + * @ return The enclosing class <nl> * / <nl> static Class < ? > findEnclosingLibraryClass ( Class < ? > cls ) { <nl> if ( cls = = null ) { <nl> @ @ - 1188 , 8 + 1188 , 8 @ @ public final class Native implements Version { <nl> } <nl> <nl> / * * <nl> - * @ param The type class <nl> - * @ param The object instance <nl> + * @ param type The Java class for which the native size is to be determined <nl> + * @ param value an instance of said class ( if available ) <nl> * @ return the native size of the given class , in bytes . <nl> * For use with arrays . <nl> * / <nl> @ @ - 1257 , 7 + 1257 , 7 @ @ public final class Native implements Version { <nl> <nl> / * * <nl> * @ param cls The Java class <nl> - * @ return { @ code true ) whether the given class is supported as a native argument type . <nl> + * @ return { @ code true } whether the given class is supported as a native argument type . <nl> * / <nl> public static boolean isSupportedNativeType ( Class < ? > cls ) { <nl> if ( Structure . class . isAssignableFrom ( cls ) ) {
NEAREST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8026cef . . 8568f6d 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 23 , 6 + 23 , 7 @ @ Release 3 . 5 . 1 <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> + * Fix bug where string fields sometimes failed to be writtern - [ @ twall ] ( https : / / github . com / twall ) ( roman kisluhin ) . <nl> * [ # 145 ] ( https : / / github . com / twall / jna / pull / 145 ) : Fix ` Netapi32Util . getDomainTrusts ( ) ` returns " empty " domain object - [ @ aikidojohn ] ( https : / / github . com / aikidojohn ) . <nl> * [ # 145 ] ( https : / / github . com / twall / jna / pull / 145 ) : Fix ` Netapi32 . getDC ( ) ` - added missing fields in ` DOMAIN _ CONTROLLER _ INFO ` - [ @ aikidojohn ] ( https : / / github . com / aikidojohn ) . <nl> * [ # 151 ] ( https : / / github . com / twall / jna / pull / 151 ) : ' platform . jar ' in the dist directory was not updated for release 3 . 5 . 0 . ( The ' platform . jar ' published to maven central was correct . ) <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index 12a25f5 . . d3e229e 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 145 , 7 + 145 , 8 @ @ public abstract class Structure { <nl> private int actualAlignType ; <nl> private int structAlignment ; <nl> private Map structFields ; <nl> - / / Keep track of java strings which have been converted to C strings <nl> + / / Keep track of native C strings which have been allocated , <nl> + / / corresponding to String fields of this Structure <nl> private final Map nativeStrings = new HashMap ( ) ; <nl> private TypeMapper typeMapper ; <nl> / / This field is accessed by native code <nl> @ @ - 289 , 6 + 290 , 9 @ @ public abstract class Structure { <nl> * / <nl> protected void useMemory ( Pointer m , int offset ) { <nl> try { <nl> + / / Clear any local cache <nl> + nativeStrings . clear ( ) ; <nl> + <nl> / / Ensure our memory pointer is initialized , even if we can ' t <nl> / / yet figure out a proper size / layout <nl> this . memory = m . share ( offset ) ; <nl> @ @ - 726 , 6 + 730 , 8 @ @ public abstract class Structure { <nl> / / Allocate a new string in memory <nl> boolean wide = fieldType = = WString . class ; <nl> if ( value ! = null ) { <nl> + / / If we ' ve already allocated a native string here , and the <nl> + / / string value is unchanged , leave it alone <nl> if ( nativeStrings . containsKey ( structField . name + " . ptr " ) <nl> & & value . equals ( nativeStrings . get ( structField . name + " . val " ) ) ) { <nl> return ; <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index 4508ea2 . . 658be22 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 825 , 6 + 825 , 41 @ @ public class StructureTest extends TestCase { <nl> assertEquals ( " String field should not be overwritten " , m2 , s . getPointer ( ) . getPointer ( Pointer . SIZE ) ) ; <nl> } <nl> <nl> + / / Ensure string cacheing doesn ' t interfere with wrapped structure writes . <nl> + public static class StructureFromNative extends Structure { <nl> + public String s ; <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( new String [ ] { " s " } ) ; <nl> + } <nl> + public StructureFromNative ( Pointer p ) { <nl> + super ( p ) ; <nl> + read ( ) ; <nl> + } <nl> + public StructureFromNative ( ) { <nl> + } <nl> + } <nl> + <nl> + public void testInitializeStructureFieldWithStrings ( ) { <nl> + class ContainingStructure extends Structure { <nl> + public StructureFromNative inner ; <nl> + protected List getFieldOrder ( ) { <nl> + return Arrays . asList ( new String [ ] { " inner " } ) ; <nl> + } <nl> + } <nl> + StructureFromNative o = new StructureFromNative ( ) ; <nl> + o . s = getName ( ) ; <nl> + o . write ( ) ; <nl> + StructureFromNative t = new StructureFromNative ( o . getPointer ( ) ) ; <nl> + assertEquals ( " String field not initialized " , getName ( ) , t . s ) ; <nl> + <nl> + ContainingStructure outer = new ContainingStructure ( ) ; <nl> + outer . inner = t ; <nl> + outer . write ( ) ; <nl> + assertEquals ( " Inner String field corrupted " , getName ( ) , outer . inner . s ) ; <nl> + outer . inner . read ( ) ; <nl> + assertEquals ( " Native memory behind Inner String field not updated " , getName ( ) , outer . inner . s ) ; <nl> + } <nl> + <nl> public void testOverwriteStructureByReferenceFieldOnRead ( ) { <nl> StructureWithPointers s = new StructureWithPointers ( ) ; <nl> PublicTestStructure . ByReference inner =

TEST DIFF:
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java 
 index 5bda7a8 . . 4fe6805 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IDispatch . java 
 @ @ - 81 , 7 + 81 , 7 @ @ public interface IDispatch extends IUnknown { 
 * @ param lcid The locale context in which to interpret the names . 
 * @ param rgDispId Caller - allocated array , each element of which contains an identifier ( ID ) corresponding to one of the names passed in 
 * the rgszNames array . The first element represents the member name . The subsequent elements represent each of the member ' s parameters . 
 - * @ return 
 + * @ return status of the operation 
 * / 
 public HRESULT GetIDsOfNames ( REFIID riid , WString [ ] rgszNames , int cNames , 
 LCID lcid , DISPIDByReference rgDispId ) ; 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Wininet . java b / contrib / platform / src / com / sun / jna / platform / win32 / Wininet . java 
 index e1c4c59 . . fdc9c0b 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Wininet . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Wininet . java 
 @ @ - 198 , 8 + 198 , 7 @ @ public interface Wininet extends StdCallLibrary { 
 * < / code > 
 * < / pre > 
 * 
 - * @ see https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa385134 ( v = 
 - * vs . 85 ) . aspx 
 + * @ see < a href = " https : / / msdn . microsoft . com / en - us / library / windows / desktop / aa385134 ( v = vs . 85 ) . aspx " > MSDN < / a > 
 * / 
 static class INTERNET _ CACHE _ ENTRY _ INFO extends Structure { 
 public static final List < String > FIELDS = createFieldsOrder ( 
 diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java 
 index 25f820a . . d960223 100644 
 - - - a / src / com / sun / jna / Native . java 
 + + + b / src / com / sun / jna / Native . java 
 @ @ - 549 , 7 + 549 , 7 @ @ public final class Native implements Version { 
 * all ancestor classes and interfaces for a declaring class which 
 * implements { @ link Library } . 
 * @ param cls The given class 
 - * @ param Tge enclosing class 
 + * @ return The enclosing class 
 * / 
 static Class < ? > findEnclosingLibraryClass ( Class < ? > cls ) { 
 if ( cls = = null ) { 
 @ @ - 1188 , 8 + 1188 , 8 @ @ public final class Native implements Version { 
 } 
 
 / * * 
 - * @ param The type class 
 - * @ param The object instance 
 + * @ param type The Java class for which the native size is to be determined 
 + * @ param value an instance of said class ( if available ) 
 * @ return the native size of the given class , in bytes . 
 * For use with arrays . 
 * / 
 @ @ - 1257 , 7 + 1257 , 7 @ @ public final class Native implements Version { 
 
 / * * 
 * @ param cls The Java class 
 - * @ return { @ code true ) whether the given class is supported as a native argument type . 
 + * @ return { @ code true } whether the given class is supported as a native argument type . 
 * / 
 public static boolean isSupportedNativeType ( Class < ? > cls ) { 
 if ( Structure . class . isAssignableFrom ( cls ) ) {

NEAREST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 8026cef . . 8568f6d 100755 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 23 , 6 + 23 , 7 @ @ Release 3 . 5 . 1 
 
 Bug Fixes 
 - - - - - - - - - 
 + * Fix bug where string fields sometimes failed to be writtern - [ @ twall ] ( https : / / github . com / twall ) ( roman kisluhin ) . 
 * [ # 145 ] ( https : / / github . com / twall / jna / pull / 145 ) : Fix ` Netapi32Util . getDomainTrusts ( ) ` returns " empty " domain object - [ @ aikidojohn ] ( https : / / github . com / aikidojohn ) . 
 * [ # 145 ] ( https : / / github . com / twall / jna / pull / 145 ) : Fix ` Netapi32 . getDC ( ) ` - added missing fields in ` DOMAIN _ CONTROLLER _ INFO ` - [ @ aikidojohn ] ( https : / / github . com / aikidojohn ) . 
 * [ # 151 ] ( https : / / github . com / twall / jna / pull / 151 ) : ' platform . jar ' in the dist directory was not updated for release 3 . 5 . 0 . ( The ' platform . jar ' published to maven central was correct . ) 
 diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java 
 index 12a25f5 . . d3e229e 100644 
 - - - a / src / com / sun / jna / Structure . java 
 + + + b / src / com / sun / jna / Structure . java 
 @ @ - 145 , 7 + 145 , 8 @ @ public abstract class Structure { 
 private int actualAlignType ; 
 private int structAlignment ; 
 private Map structFields ; 
 - / / Keep track of java strings which have been converted to C strings 
 + / / Keep track of native C strings which have been allocated , 
 + / / corresponding to String fields of this Structure 
 private final Map nativeStrings = new HashMap ( ) ; 
 private TypeMapper typeMapper ; 
 / / This field is accessed by native code 
 @ @ - 289 , 6 + 290 , 9 @ @ public abstract class Structure { 
 * / 
 protected void useMemory ( Pointer m , int offset ) { 
 try { 
 + / / Clear any local cache 
 + nativeStrings . clear ( ) ; 
 + 
 / / Ensure our memory pointer is initialized , even if we can ' t 
 / / yet figure out a proper size / layout 
 this . memory = m . share ( offset ) ; 
 @ @ - 726 , 6 + 730 , 8 @ @ public abstract class Structure { 
 / / Allocate a new string in memory 
 boolean wide = fieldType = = WString . class ; 
 if ( value ! = null ) { 
 + / / If we ' ve already allocated a native string here , and the 
 + / / string value is unchanged , leave it alone 
 if ( nativeStrings . containsKey ( structField . name + " . ptr " ) 
 & & value . equals ( nativeStrings . get ( structField . name + " . val " ) ) ) { 
 return ; 
 diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java 
 index 4508ea2 . . 658be22 100644 
 - - - a / test / com / sun / jna / StructureTest . java 
 + + + b / test / com / sun / jna / StructureTest . java 
 @ @ - 825 , 6 + 825 , 41 @ @ public class StructureTest extends TestCase { 
 assertEquals ( " String field should not be overwritten " , m2 , s . getPointer ( ) . getPointer ( Pointer . SIZE ) ) ; 
 } 
 
 + / / Ensure string cacheing doesn ' t interfere with wrapped structure writes . 
 + public static class StructureFromNative extends Structure { 
 + public String s ; 
 + protected List getFieldOrder ( ) { 
 + return Arrays . asList ( new String [ ] { " s " } ) ; 
 + } 
 + public StructureFromNative ( Pointer p ) { 
 + super ( p ) ; 
 + read ( ) ; 
 + } 
 + public StructureFromNative ( ) { 
 + } 
 + } 
 + 
 + public void testInitializeStructureFieldWithStrings ( ) { 
 + class ContainingStructure extends Structure { 
 + public StructureFromNative inner ; 
 + protected List getFieldOrder ( ) { 
 + return Arrays . asList ( new String [ ] { " inner " } ) ; 
 + } 
 + } 
 + StructureFromNative o = new StructureFromNative ( ) ; 
 + o . s = getName ( ) ; 
 + o . write ( ) ; 
 + StructureFromNative t = new StructureFromNative ( o . getPointer ( ) ) ; 
 + assertEquals ( " String field not initialized " , getName ( ) , t . s ) ; 
 + 
 + ContainingStructure outer = new ContainingStructure ( ) ; 
 + outer . inner = t ; 
 + outer . write ( ) ; 
 + assertEquals ( " Inner String field corrupted " , getName ( ) , outer . inner . s ) ; 
 + outer . inner . read ( ) ; 
 + assertEquals ( " Native memory behind Inner String field not updated " , getName ( ) , outer . inner . s ) ; 
 + } 
 + 
 public void testOverwriteStructureByReferenceFieldOnRead ( ) { 
 StructureWithPointers s = new StructureWithPointers ( ) ; 
 PublicTestStructure . ByReference inner =
