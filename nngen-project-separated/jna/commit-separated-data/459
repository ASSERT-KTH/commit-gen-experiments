BLEU SCORE: 0.041961149062965476

TEST MSG: update sunos natives , fix struct padding test expected results
GENERATED MSG: fix structure alignment issues on linux / ppc

TEST DIFF (one line): diff - - git a / lib / native / sunos - sparc . jar b / lib / native / sunos - sparc . jar <nl> index bc918ef . . 1e072a2 100644 <nl> Binary files a / lib / native / sunos - sparc . jar and b / lib / native / sunos - sparc . jar differ <nl> diff - - git a / lib / native / sunos - sparcv9 . jar b / lib / native / sunos - sparcv9 . jar <nl> index db9095d . . 63b7dd1 100755 <nl> Binary files a / lib / native / sunos - sparcv9 . jar and b / lib / native / sunos - sparcv9 . jar differ <nl> diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java <nl> index 260673f . . d7a64e2 100644 <nl> - - - a / src / com / sun / jna / Platform . java <nl> + + + b / src / com / sun / jna / Platform . java <nl> @ @ - 45 , 6 + 45 , 7 @ @ public final class Platform { <nl> public static final String RESOURCE _ PREFIX ; <nl> <nl> private static final int osType ; <nl> + static final int MAX _ PADDING ; <nl> <nl> static { <nl> String osName = System . getProperty ( " os . name " ) ; <nl> @ @ - 108 , 6 + 109 , 8 @ @ public final class Platform { <nl> MATH _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " m " ; <nl> HAS _ DLL _ CALLBACKS = osType = = WINDOWS ; <nl> RESOURCE _ PREFIX = getNativeLibraryResourcePrefix ( ) ; <nl> + 	 String arch = System . getProperty ( " os . arch " ) . toLowerCase ( ) ; <nl> + 	 MAX _ PADDING = " sparc " . equals ( arch ) ? 8 : Native . LONG _ SIZE ; <nl> } <nl> private Platform ( ) { } <nl> public static final int getOSType ( ) { <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index 8431799 . . 63afdb5 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 1161 , 7 + 1161 , 7 @ @ public abstract class Structure { <nl> } <nl> <nl> if ( calculatedSize > 0 ) { <nl> - int size = calculateAlignedSize ( calculatedSize , info . alignment ) ; <nl> + int size = addPadding ( calculatedSize , info . alignment ) ; <nl> / / Update native FFI type information , if needed <nl> if ( this instanceof ByValue & & ! avoidFFIType ) { <nl> getTypeInfo ( ) ; <nl> @ @ - 1220 , 11 + 1220 , 11 @ @ public abstract class Structure { <nl> return value ; <nl> } <nl> <nl> - int calculateAlignedSize ( int calculatedSize ) { <nl> - return calculateAlignedSize ( calculatedSize , structAlignment ) ; <nl> + private int addPadding ( int calculatedSize ) { <nl> + return addPadding ( calculatedSize , structAlignment ) ; <nl> } <nl> <nl> - private int calculateAlignedSize ( int calculatedSize , int alignment ) { <nl> + private int addPadding ( int calculatedSize , int alignment ) { <nl> / / Structure size must be an integral multiple of its alignment , <nl> / / add padding if necessary . <nl> if ( actualAlignType ! = ALIGN _ NONE ) { <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index fc17073 . . 5edff92 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 401 , 7 + 401 , 7 @ @ public class StructureTest extends TestCase { <nl> } <nl> } <nl> TestStructure s = new TestStructure ( ) ; <nl> - assertEquals ( " Wrong structure size " , Pointer . SIZE = = 4 ? 20 : 24 , s . size ( ) ) ; <nl> + assertEquals ( " Wrong structure size " , Platform . MAX _ PADDING = = 4 ? 20 : 24 , s . size ( ) ) ; <nl> assertEquals ( " Wrong union size " , 8 , s . s _ union . size ( ) ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 438a1dc . . c85d7d2 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 3 , 10 + 3 , 12 @ @ Release 3 . 3 . x <nl> <nl> Features <nl> - - - - - - - - <nl> + * linux / ppc 32 - bit support <nl> <nl> Bug Fixes <nl> - - - - - - - - <nl> * Revise cleanup of in - use temporary files on win32 ( issue 6 ) <nl> + * Fix structure alignment issues on linux / ppc <nl> <nl> Release 3 . 3 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index b225452 . . ff5ba40 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 219 , 7 + 219 , 8 @ @ public class CallbacksTest extends TestCase { <nl> assertEquals ( " Callback lookups for same pointer should return same Callback object " , cb , cb2 ) ; <nl> } <nl> <nl> - public void testGCCallback ( ) throws Exception { <nl> + / / Fails on OpenJDK ( linux / ppc ) , probably finalize not run <nl> + public void testGCCallbackOnFinalize ( ) throws Exception { <nl> final boolean [ ] called = { false } ; <nl> TestLibrary . VoidCallback cb = new TestLibrary . VoidCallback ( ) { <nl> public void callback ( ) { <nl> @ @ - 242 , 6 + 243 , 7 @ @ public class CallbacksTest extends TestCase { <nl> for ( int i = 0 ; i < 100 & & ( ref . get ( ) ! = null | | refs . containsValue ( ref ) ) ; + + i ) { <nl> try { <nl> Thread . sleep ( 10 ) ; / / Give the GC a chance to run <nl> + System . gc ( ) ; <nl> } finally { } <nl> } <nl> assertNull ( " Callback not GC ' d " , ref . get ( ) ) ; <nl> diff - - git a / test / com / sun / jna / JNAUnloadTest . java b / test / com / sun / jna / JNAUnloadTest . java <nl> index 7f985a4 . . 93b4214 100644 <nl> - - - a / test / com / sun / jna / JNAUnloadTest . java <nl> + + + b / test / com / sun / jna / JNAUnloadTest . java <nl> @ @ - 95 , 7 + 95 , 7 @ @ public class JNAUnloadTest extends TestCase { <nl> } <nl> } <nl> <nl> - / / Fails under clover <nl> + / / Fails under clover and OpenJDK ( linux / ppc ) <nl> public void testUnload ( ) throws Exception { <nl> ClassLoader loader = new TestLoader ( false ) ; <nl> Class cls = Class . forName ( " com . sun . jna . Native " , true , loader ) ; <nl> @ @ - 136 , 8 + 136 , 9 @ @ public class JNAUnloadTest extends TestCase { <nl> } <nl> } <nl> try { <nl> - if ( loader = = null ) <nl> + if ( loader = = null ) { <nl> fail ( " Native library not unloaded : " + throwable . getMessage ( ) ) ; <nl> + } <nl> } <nl> finally { <nl> loader = null ;

TEST DIFF:
diff - - git a / lib / native / sunos - sparc . jar b / lib / native / sunos - sparc . jar 
 index bc918ef . . 1e072a2 100644 
 Binary files a / lib / native / sunos - sparc . jar and b / lib / native / sunos - sparc . jar differ 
 diff - - git a / lib / native / sunos - sparcv9 . jar b / lib / native / sunos - sparcv9 . jar 
 index db9095d . . 63b7dd1 100755 
 Binary files a / lib / native / sunos - sparcv9 . jar and b / lib / native / sunos - sparcv9 . jar differ 
 diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java 
 index 260673f . . d7a64e2 100644 
 - - - a / src / com / sun / jna / Platform . java 
 + + + b / src / com / sun / jna / Platform . java 
 @ @ - 45 , 6 + 45 , 7 @ @ public final class Platform { 
 public static final String RESOURCE _ PREFIX ; 
 
 private static final int osType ; 
 + static final int MAX _ PADDING ; 
 
 static { 
 String osName = System . getProperty ( " os . name " ) ; 
 @ @ - 108 , 6 + 109 , 8 @ @ public final class Platform { 
 MATH _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " m " ; 
 HAS _ DLL _ CALLBACKS = osType = = WINDOWS ; 
 RESOURCE _ PREFIX = getNativeLibraryResourcePrefix ( ) ; 
 + 	 String arch = System . getProperty ( " os . arch " ) . toLowerCase ( ) ; 
 + 	 MAX _ PADDING = " sparc " . equals ( arch ) ? 8 : Native . LONG _ SIZE ; 
 } 
 private Platform ( ) { } 
 public static final int getOSType ( ) { 
 diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java 
 index 8431799 . . 63afdb5 100644 
 - - - a / src / com / sun / jna / Structure . java 
 + + + b / src / com / sun / jna / Structure . java 
 @ @ - 1161 , 7 + 1161 , 7 @ @ public abstract class Structure { 
 } 
 
 if ( calculatedSize > 0 ) { 
 - int size = calculateAlignedSize ( calculatedSize , info . alignment ) ; 
 + int size = addPadding ( calculatedSize , info . alignment ) ; 
 / / Update native FFI type information , if needed 
 if ( this instanceof ByValue & & ! avoidFFIType ) { 
 getTypeInfo ( ) ; 
 @ @ - 1220 , 11 + 1220 , 11 @ @ public abstract class Structure { 
 return value ; 
 } 
 
 - int calculateAlignedSize ( int calculatedSize ) { 
 - return calculateAlignedSize ( calculatedSize , structAlignment ) ; 
 + private int addPadding ( int calculatedSize ) { 
 + return addPadding ( calculatedSize , structAlignment ) ; 
 } 
 
 - private int calculateAlignedSize ( int calculatedSize , int alignment ) { 
 + private int addPadding ( int calculatedSize , int alignment ) { 
 / / Structure size must be an integral multiple of its alignment , 
 / / add padding if necessary . 
 if ( actualAlignType ! = ALIGN _ NONE ) { 
 diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java 
 index fc17073 . . 5edff92 100644 
 - - - a / test / com / sun / jna / StructureTest . java 
 + + + b / test / com / sun / jna / StructureTest . java 
 @ @ - 401 , 7 + 401 , 7 @ @ public class StructureTest extends TestCase { 
 } 
 } 
 TestStructure s = new TestStructure ( ) ; 
 - assertEquals ( " Wrong structure size " , Pointer . SIZE = = 4 ? 20 : 24 , s . size ( ) ) ; 
 + assertEquals ( " Wrong structure size " , Platform . MAX _ PADDING = = 4 ? 20 : 24 , s . size ( ) ) ; 
 assertEquals ( " Wrong union size " , 8 , s . s _ union . size ( ) ) ; 
 } 


NEAREST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 438a1dc . . c85d7d2 100755 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 3 , 10 + 3 , 12 @ @ Release 3 . 3 . x 
 
 Features 
 - - - - - - - - 
 + * linux / ppc 32 - bit support 
 
 Bug Fixes 
 - - - - - - - - 
 * Revise cleanup of in - use temporary files on win32 ( issue 6 ) 
 + * Fix structure alignment issues on linux / ppc 
 
 Release 3 . 3 . 0 
 = = = = = = = = = = = = = 
 diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java 
 index b225452 . . ff5ba40 100644 
 - - - a / test / com / sun / jna / CallbacksTest . java 
 + + + b / test / com / sun / jna / CallbacksTest . java 
 @ @ - 219 , 7 + 219 , 8 @ @ public class CallbacksTest extends TestCase { 
 assertEquals ( " Callback lookups for same pointer should return same Callback object " , cb , cb2 ) ; 
 } 
 
 - public void testGCCallback ( ) throws Exception { 
 + / / Fails on OpenJDK ( linux / ppc ) , probably finalize not run 
 + public void testGCCallbackOnFinalize ( ) throws Exception { 
 final boolean [ ] called = { false } ; 
 TestLibrary . VoidCallback cb = new TestLibrary . VoidCallback ( ) { 
 public void callback ( ) { 
 @ @ - 242 , 6 + 243 , 7 @ @ public class CallbacksTest extends TestCase { 
 for ( int i = 0 ; i < 100 & & ( ref . get ( ) ! = null | | refs . containsValue ( ref ) ) ; + + i ) { 
 try { 
 Thread . sleep ( 10 ) ; / / Give the GC a chance to run 
 + System . gc ( ) ; 
 } finally { } 
 } 
 assertNull ( " Callback not GC ' d " , ref . get ( ) ) ; 
 diff - - git a / test / com / sun / jna / JNAUnloadTest . java b / test / com / sun / jna / JNAUnloadTest . java 
 index 7f985a4 . . 93b4214 100644 
 - - - a / test / com / sun / jna / JNAUnloadTest . java 
 + + + b / test / com / sun / jna / JNAUnloadTest . java 
 @ @ - 95 , 7 + 95 , 7 @ @ public class JNAUnloadTest extends TestCase { 
 } 
 } 
 
 - / / Fails under clover 
 + / / Fails under clover and OpenJDK ( linux / ppc ) 
 public void testUnload ( ) throws Exception { 
 ClassLoader loader = new TestLoader ( false ) ; 
 Class cls = Class . forName ( " com . sun . jna . Native " , true , loader ) ; 
 @ @ - 136 , 8 + 136 , 9 @ @ public class JNAUnloadTest extends TestCase { 
 } 
 } 
 try { 
 - if ( loader = = null ) 
 + if ( loader = = null ) { 
 fail ( " Native library not unloaded : " + throwable . getMessage ( ) ) ; 
 + } 
 } 
 finally { 
 loader = null ;
