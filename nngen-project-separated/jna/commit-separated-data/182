BLEU SCORE: 0.037477767366779206

TEST MSG: added TYPEFLAGS constants for TYPEATTR in ITypeInfo . GetTypeAttr ( )
GENERATED MSG: Fix merge conflicts in # 540

TEST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 2b52c0b . . 3cc8452 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 35 , 15 + 35 , 16 @ @ Features <nl> * [ # 577 ] ( https : / / github . com / java - native - access / jna / pull / 577 ) : Apply generic definitions wherever applicable - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 569 ] ( https : / / github . com / java - native - access / jna / pull / 569 ) : Added ` com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 2 ` support . Added GetPrinter and ClosePrinter functions in ` com . sun . jna . platform . win32 . Winspool ` - [ @ IvanRF ] ( https : / / github . com / IvanRF ) . <nl> * [ # 583 ] ( https : / / github . com / java - native - access / jna / pull / 583 ) : Added printer attributes and status - [ @ IvanRF ] ( https : / / github . com / IvanRF ) . <nl> - * [ # 589 ] ( https : / / github . com / java - native - access / jna / pull / 589 ) : Use MethodResultContext in direct mapping ( as done in interface mapping ) - [ @ marco2357 ] ( https : / / github . com / marco2357 ) . <nl> + * [ # 589 ] ( https : / / github . com / java - native - access / jna / pull / 589 ) : Use ` com . sun . jna . MethodResultContext ` in direct mapping ( as done in interface mapping ) - [ @ marco2357 ] ( https : / / github . com / marco2357 ) . <nl> * [ # 595 ] ( https : / / github . com / java - native - access / jna / pull / 595 ) : Allow calling COM methods / getters requiring hybrid calling ( METHOD + PROPERTYGET ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> - * [ # 582 ] ( https : / / github . com / java - native - access / jna / pull / 582 ) : Mavenize the build process - Phase 1 : building the native code via Maven [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> - * [ # 606 ] ( https : / / github . com / java - native - access / jna / pull / 606 ) : Added Kerne32Util method to facilitate checking that calls to LocalFree / GlobalFree are successful [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> - * [ # 612 ] ( https : / / github . com / java - native - access / jna / pull / 612 ) : ' Kernel32Util # freeLocal / GlobalMemory ' always throws Win32Exception if failed [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> - * [ # 608 ] ( https : / / github . com / java - native - access / jna / pull / 608 ) : Mavenize the build process - change parent and native pom artifactId / name to differentiate in IDE and build tools . [ @ bhamail ] ( https : / / github . com / bhamail ) <nl> - * [ # 613 ] ( https : / / github . com / java - native - access / jna / pull / 613 ) : Make Win32Exception extend LastErrorException [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> - * [ # 613 ] ( https : / / github . com / java - native - access / jna / pull / 614 ) : Added standard ' Kernel32Util # closeHandle ' method that throws a Win32Exception if failed to close the handle [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 582 ] ( https : / / github . com / java - native - access / jna / pull / 582 ) : Mavenize the build process - Phase 1 : building the native code via Maven - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 606 ] ( https : / / github . com / java - native - access / jna / pull / 606 ) : Added Kernel32Util method to facilitate checking that calls to LocalFree / GlobalFree are successful - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 612 ] ( https : / / github . com / java - native - access / jna / pull / 612 ) : ` Kernel32Util . freeLocalMemory ( ) ` / ` Kernel32Util . freeGlobalMemory ( ) ` always throw ` com . sun . jna . platform . win32 . Win32Exception ` if failed - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 608 ] ( https : / / github . com / java - native - access / jna / pull / 608 ) : Mavenize the build process - change parent and native pom artifactId / name to differentiate in IDE and build tools . - [ @ bhamail ] ( https : / / github . com / bhamail ) <nl> + * [ # 613 ] ( https : / / github . com / java - native - access / jna / pull / 613 ) : Make ` com . sun . jna . platform . win32 . Win32Exception ` extend ` com . sun . jna . LastErrorException ` - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> + * [ # 614 ] ( https : / / github . com / java - native - access / jna / pull / 614 ) : Added standard ` com . sun . jna . platform . win32 . Kernel32Util . closeHandle ( ) ` method that throws a ` com . sun . jna . platform . win32 . Win32Exception ` if failed to close the handle - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . <nl> * [ # 616 ] ( https : / / github . com / java - native - access / jna / pull / 616 ) : Allow access to base interfaces ( most important IDispatch ) via ProxyObject and improve binding by allowing to use dispId for the call - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 621 ] ( https : / / github . com / java - native - access / jna / pull / 621 ) : Added TYPEFLAGS - constants for ` wTypeFlags ` in ` com . sun . jna . platform . win32 . OaIdl . TYPEATTR ` - [ @ SevenOf9Sleeper ] ( https : / / github . com / SevenOf9Sleeper ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> index 5103050 . . 4547e95 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> @ @ - 1458 , 6 + 1458 , 7 @ @ public interface OaIdl { <nl> public WORD cImplTypes ; <nl> public WORD cbSizeVft ; <nl> public WORD cbAlignment ; <nl> + / / The type flags . See TYPEFLAGS _ . . . <nl> public WORD wTypeFlags ; <nl> public WORD wMajorVerNum ; <nl> public WORD wMinorVerNum ; <nl> @ @ - 1479 , 5 + 1480 , 87 @ @ public interface OaIdl { <nl> protected List < String > getFieldOrder ( ) { <nl> return FIELDS ; <nl> } <nl> + <nl> + / * * <nl> + * A type description that describes an Application object . <nl> + * / <nl> + public final static int TYPEFLAGS _ FAPPOBJECT = 0x1 ; <nl> + <nl> + / * * <nl> + * Instances of the type can be created by ITypeInfo : : CreateInstance . <nl> + * / <nl> + public final static int TYPEFLAGS _ FCANCREATE = 0x2 ; <nl> + <nl> + / * * <nl> + * The type is licensed . <nl> + * / <nl> + public final static int TYPEFLAGS _ FLICENSED = 0x4 ; <nl> + <nl> + / * * <nl> + * The type is predefined . The client application should automatically create a single instance of the object <nl> + * that has this attribute . The name of the variable that points to the object is the same as the class name of <nl> + * the object . <nl> + * / <nl> + public final static int TYPEFLAGS _ FPREDECLID = 0x8 ; <nl> + <nl> + / * * <nl> + * The type should not be displayed to browsers . <nl> + * / <nl> + public final static int TYPEFLAGS _ FHIDDEN = 0x10 ; <nl> + <nl> + / * * <nl> + * The type is a control from which other types will be derived , and should not be displayed to users . <nl> + * / <nl> + public final static int TYPEFLAGS _ FCONTROL = 0x20 ; <nl> + <nl> + / * * <nl> + * The interface supplies both IDispatch and VTBL binding . <nl> + * / <nl> + public final static int TYPEFLAGS _ FDUAL = 0x40 ; <nl> + <nl> + / * * <nl> + * The interface cannot add members at run time . <nl> + * / <nl> + public final static int TYPEFLAGS _ FNONEXTENSIBLE = 0x80 ; <nl> + <nl> + / * * <nl> + * The types used in the interface are fully compatible with Automation , including VTBL binding support . Setting <nl> + * dual on an interface sets this flag in addition to TYPEFLAG _ FDUAL . Not allowed on dispinterfaces . <nl> + * / <nl> + public final static int TYPEFLAGS _ FOLEAUTOMATION = 0x100 ; <nl> + <nl> + / * * <nl> + * Should not be accessible from macro languages . This flag is intended for system - level types or types that <nl> + * type browsers should not display . <nl> + * / <nl> + public final static int TYPEFLAGS _ FRESTRICTED = 0x200 ; <nl> + <nl> + / * * <nl> + * The class supports aggregation . <nl> + * / <nl> + public final static int TYPEFLAGS _ FAGGREGATABLE = 0x400 ; <nl> + <nl> + / * * <nl> + * The type is replaceable . <nl> + * / <nl> + public final static int TYPEFLAGS _ FREPLACEABLE = 0x800 ; <nl> + <nl> + / * * <nl> + * Indicates that the interface derives from IDispatch , either directly or indirectly . This flag is computed . <nl> + * There is no Object Description Language for the flag . <nl> + * / <nl> + public final static int TYPEFLAGS _ FDISPATCHABLE = 0x1000 ; <nl> + <nl> + / * * <nl> + * The type has reverse binding . <nl> + * / <nl> + public final static int TYPEFLAGS _ FREVERSEBIND = 0x2000 ; <nl> + <nl> + / * * <nl> + * Interfaces can be marked with this flag to indicate that they will be using a proxy / stub dynamic link <nl> + * library . This flag specifies that the typelib proxy should not be unregistered when the typelib is <nl> + * unregistered . <nl> + * / <nl> + public final static int TYPEFLAGS _ FPROXY = 0x4000 ; <nl> } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 2b52c0b . . 3cc8452 100644 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 35 , 15 + 35 , 16 @ @ Features 
 * [ # 577 ] ( https : / / github . com / java - native - access / jna / pull / 577 ) : Apply generic definitions wherever applicable - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . 
 * [ # 569 ] ( https : / / github . com / java - native - access / jna / pull / 569 ) : Added ` com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 2 ` support . Added GetPrinter and ClosePrinter functions in ` com . sun . jna . platform . win32 . Winspool ` - [ @ IvanRF ] ( https : / / github . com / IvanRF ) . 
 * [ # 583 ] ( https : / / github . com / java - native - access / jna / pull / 583 ) : Added printer attributes and status - [ @ IvanRF ] ( https : / / github . com / IvanRF ) . 
 - * [ # 589 ] ( https : / / github . com / java - native - access / jna / pull / 589 ) : Use MethodResultContext in direct mapping ( as done in interface mapping ) - [ @ marco2357 ] ( https : / / github . com / marco2357 ) . 
 + * [ # 589 ] ( https : / / github . com / java - native - access / jna / pull / 589 ) : Use ` com . sun . jna . MethodResultContext ` in direct mapping ( as done in interface mapping ) - [ @ marco2357 ] ( https : / / github . com / marco2357 ) . 
 * [ # 595 ] ( https : / / github . com / java - native - access / jna / pull / 595 ) : Allow calling COM methods / getters requiring hybrid calling ( METHOD + PROPERTYGET ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 - * [ # 582 ] ( https : / / github . com / java - native - access / jna / pull / 582 ) : Mavenize the build process - Phase 1 : building the native code via Maven [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . 
 - * [ # 606 ] ( https : / / github . com / java - native - access / jna / pull / 606 ) : Added Kerne32Util method to facilitate checking that calls to LocalFree / GlobalFree are successful [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . 
 - * [ # 612 ] ( https : / / github . com / java - native - access / jna / pull / 612 ) : ' Kernel32Util # freeLocal / GlobalMemory ' always throws Win32Exception if failed [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . 
 - * [ # 608 ] ( https : / / github . com / java - native - access / jna / pull / 608 ) : Mavenize the build process - change parent and native pom artifactId / name to differentiate in IDE and build tools . [ @ bhamail ] ( https : / / github . com / bhamail ) 
 - * [ # 613 ] ( https : / / github . com / java - native - access / jna / pull / 613 ) : Make Win32Exception extend LastErrorException [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . 
 - * [ # 613 ] ( https : / / github . com / java - native - access / jna / pull / 614 ) : Added standard ' Kernel32Util # closeHandle ' method that throws a Win32Exception if failed to close the handle [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . 
 + * [ # 582 ] ( https : / / github . com / java - native - access / jna / pull / 582 ) : Mavenize the build process - Phase 1 : building the native code via Maven - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . 
 + * [ # 606 ] ( https : / / github . com / java - native - access / jna / pull / 606 ) : Added Kernel32Util method to facilitate checking that calls to LocalFree / GlobalFree are successful - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . 
 + * [ # 612 ] ( https : / / github . com / java - native - access / jna / pull / 612 ) : ` Kernel32Util . freeLocalMemory ( ) ` / ` Kernel32Util . freeGlobalMemory ( ) ` always throw ` com . sun . jna . platform . win32 . Win32Exception ` if failed - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . 
 + * [ # 608 ] ( https : / / github . com / java - native - access / jna / pull / 608 ) : Mavenize the build process - change parent and native pom artifactId / name to differentiate in IDE and build tools . - [ @ bhamail ] ( https : / / github . com / bhamail ) 
 + * [ # 613 ] ( https : / / github . com / java - native - access / jna / pull / 613 ) : Make ` com . sun . jna . platform . win32 . Win32Exception ` extend ` com . sun . jna . LastErrorException ` - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . 
 + * [ # 614 ] ( https : / / github . com / java - native - access / jna / pull / 614 ) : Added standard ` com . sun . jna . platform . win32 . Kernel32Util . closeHandle ( ) ` method that throws a ` com . sun . jna . platform . win32 . Win32Exception ` if failed to close the handle - [ @ lgoldstein ] ( https : / / github . com / lgoldstein ) . 
 * [ # 616 ] ( https : / / github . com / java - native - access / jna / pull / 616 ) : Allow access to base interfaces ( most important IDispatch ) via ProxyObject and improve binding by allowing to use dispId for the call - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 + * [ # 621 ] ( https : / / github . com / java - native - access / jna / pull / 621 ) : Added TYPEFLAGS - constants for ` wTypeFlags ` in ` com . sun . jna . platform . win32 . OaIdl . TYPEATTR ` - [ @ SevenOf9Sleeper ] ( https : / / github . com / SevenOf9Sleeper ) . 
 
 Bug Fixes 
 - - - - - - - - - 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java 
 index 5103050 . . 4547e95 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java 
 @ @ - 1458 , 6 + 1458 , 7 @ @ public interface OaIdl { 
 public WORD cImplTypes ; 
 public WORD cbSizeVft ; 
 public WORD cbAlignment ; 
 + / / The type flags . See TYPEFLAGS _ . . . 
 public WORD wTypeFlags ; 
 public WORD wMajorVerNum ; 
 public WORD wMinorVerNum ; 
 @ @ - 1479 , 5 + 1480 , 87 @ @ public interface OaIdl { 
 protected List < String > getFieldOrder ( ) { 
 return FIELDS ; 
 } 
 + 
 + / * * 
 + * A type description that describes an Application object . 
 + * / 
 + public final static int TYPEFLAGS _ FAPPOBJECT = 0x1 ; 
 + 
 + / * * 
 + * Instances of the type can be created by ITypeInfo : : CreateInstance . 
 + * / 
 + public final static int TYPEFLAGS _ FCANCREATE = 0x2 ; 
 + 
 + / * * 
 + * The type is licensed . 
 + * / 
 + public final static int TYPEFLAGS _ FLICENSED = 0x4 ; 
 + 
 + / * * 
 + * The type is predefined . The client application should automatically create a single instance of the object 
 + * that has this attribute . The name of the variable that points to the object is the same as the class name of 
 + * the object . 
 + * / 
 + public final static int TYPEFLAGS _ FPREDECLID = 0x8 ; 
 + 
 + / * * 
 + * The type should not be displayed to browsers . 
 + * / 
 + public final static int TYPEFLAGS _ FHIDDEN = 0x10 ; 
 + 
 + / * * 
 + * The type is a control from which other types will be derived , and should not be displayed to users . 
 + * / 
 + public final static int TYPEFLAGS _ FCONTROL = 0x20 ; 
 + 
 + / * * 
 + * The interface supplies both IDispatch and VTBL binding . 
 + * / 
 + public final static int TYPEFLAGS _ FDUAL = 0x40 ; 
 + 
 + / * * 
 + * The interface cannot add members at run time . 
 + * / 
 + public final static int TYPEFLAGS _ FNONEXTENSIBLE = 0x80 ; 
 + 
 + / * * 
 + * The types used in the interface are fully compatible with Automation , including VTBL binding support . Setting 
 + * dual on an interface sets this flag in addition to TYPEFLAG _ FDUAL . Not allowed on dispinterfaces . 
 + * / 
 + public final static int TYPEFLAGS _ FOLEAUTOMATION = 0x100 ; 
 + 
 + / * * 
 + * Should not be accessible from macro languages . This flag is intended for system - level types or types that 
 + * type browsers should not display . 
 + * / 
 + public final static int TYPEFLAGS _ FRESTRICTED = 0x200 ; 
 + 
 + / * * 
 + * The class supports aggregation . 
 + * / 
 + public final static int TYPEFLAGS _ FAGGREGATABLE = 0x400 ; 
 + 
 + / * * 
 + * The type is replaceable . 
 + * / 
 + public final static int TYPEFLAGS _ FREPLACEABLE = 0x800 ; 
 + 
 + / * * 
 + * Indicates that the interface derives from IDispatch , either directly or indirectly . This flag is computed . 
 + * There is no Object Description Language for the flag . 
 + * / 
 + public final static int TYPEFLAGS _ FDISPATCHABLE = 0x1000 ; 
 + 
 + / * * 
 + * The type has reverse binding . 
 + * / 
 + public final static int TYPEFLAGS _ FREVERSEBIND = 0x2000 ; 
 + 
 + / * * 
 + * Interfaces can be marked with this flag to indicate that they will be using a proxy / stub dynamic link 
 + * library . This flag specifies that the typelib proxy should not be unregistered when the typelib is 
 + * unregistered . 
 + * / 
 + public final static int TYPEFLAGS _ FPROXY = 0x4000 ; 
 } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
