BLEU SCORE: 0.02383853510228548

TEST MSG: make parameter reverse ordering as expected by COM runtime
GENERATED MSG: added sample for MSWord SaveAs function

TEST DIFF (one line): diff - - git a / contrib / msoffice / jnatest . doc b / contrib / msoffice / jnatest . doc <nl> index ba68825 . . 3fa63e8 100644 <nl> - - - a / contrib / msoffice / jnatest . doc <nl> + + + b / contrib / msoffice / jnatest . doc <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> <nl> - Hello from JNA ! JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> + JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> @ @ - 19 , 7 + 19 , 7 @ @ Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> - Test JNA Test JNA Test JNA <nl> + Test JNA <nl> JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA <nl> diff - - git a / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSOfficeDemo . java b / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSOfficeDemo . java <nl> index 4cdc9d0 . . b4e18da 100644 <nl> - - - a / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSOfficeDemo . java <nl> + + + b / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSOfficeDemo . java <nl> @ @ - 27 , 8 + 27 , 7 @ @ public class MSOfficeDemo { <nl> 	 	 LONG wdFormatPDF = new LONG ( 17 ) ; / / PDF format . <nl> 	 	 LONG wdFormatRTF = new LONG ( 6 ) ; / / Rich text format ( RTF ) . <nl> 	 	 LONG wdFormatHTML = new LONG ( 8 ) ; / / Standard HTML format . <nl> - 	 	 <nl> - 	 	 <nl> + <nl> 	 	 try { <nl> 	 	 	 msWord = new MSWord ( ) ; <nl> 	 	 	 System . out . println ( " MSWord version : " + msWord . getVersion ( ) ) ; <nl> @ @ - 37 , 11 + 36 , 14 @ @ public class MSOfficeDemo { <nl> 	 	 	 msWord . openDocument ( currentWorkingDir + " jnatest . doc " , true ) ; <nl> 	 	 	 msWord . insertText ( " Hello from JNA ! " ) ; <nl> 	 	 	 / / wait 10sec . before closing <nl> - 	 	 	 / / Thread . currentThread ( ) . sleep ( 10000 ) ; <nl> - 	 	 	 / / close and save the document <nl> + 	 	 	 Thread . currentThread ( ) . sleep ( 10000 ) ; <nl> + 	 	 	 / / save in different formats <nl> + 	 	 	 / / pdf format is only supported in MSWord 2007 and above <nl> + 	 	 	 / / msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . pdf " , wdFormatPDF ) ; <nl> 	 	 	 msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . rtf " , wdFormatRTF ) ; <nl> 	 	 	 msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . html " , wdFormatHTML ) ; <nl> - 	 	 	 / / msWord . closeActiveDocument ( true ) ; <nl> + 	 	 	 / / close and save the document <nl> + 	 	 	 msWord . closeActiveDocument ( true ) ; <nl> 	 	 	 / / wait then close word <nl> 	 	 	 msWord . quit ( ) ; <nl> 	 	 } catch ( COMException e ) { <nl> diff - - git a / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSWord . java b / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSWord . java <nl> index c8a13f1 . . 218af5e 100644 <nl> - - - a / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSWord . java <nl> + + + b / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSWord . java <nl> @ @ - 50 , 12 + 50 , 11 @ @ public class MSWord extends COMObject { <nl> 	 } <nl> <nl> 	 public void SaveAs ( String FileName , LONG FileFormat ) throws COMException { <nl> - 	 	 VARIANT [ ] args = new VARIANT [ 2 ] ; <nl> - 	 	 args [ 0 ] = new VARIANT ( FileFormat ) ; <nl> - 	 	 args [ 1 ] = new VARIANT ( FileName ) ; <nl> + 	 	 VARIANT vtFileName = new VARIANT ( FileName ) ; <nl> + 	 	 VARIANT vtFileFormat = new VARIANT ( FileFormat ) ; <nl> 	 	 <nl> 	 	 this . invokeNoReply ( " SaveAs " , this . getActiveDocument ( ) . getIDispatch ( ) , <nl> - 	 	 	 	 args ) ; <nl> + 	 	 	 	 vtFileName , vtFileFormat ) ; <nl> 	 } <nl> <nl> 	 public ActiveDocument getActiveDocument ( ) { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBaseObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBaseObject . java <nl> index e687992 . . 20120f0 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBaseObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBaseObject . java <nl> @ @ - 176 , 14 + 176 , 26 @ @ public class COMBaseObject { <nl> 	 	 if ( pDisp = = null ) <nl> 	 	 	 throw new COMException ( " pDisp ( IDispatch ) parameter is null ! " ) ; <nl> <nl> + 	 	 / / variable declaration <nl> + 	 	 int _ argsLen = 0 ; <nl> + 	 	 VARIANT [ ] _ args = null ; <nl> 	 	 WString [ ] ptName = new WString [ ] { new WString ( name ) } ; <nl> 	 	 DISPPARAMS dp = new DISPPARAMS ( ) ; <nl> 	 	 DISPIDbyReference pdispID = new DISPIDbyReference ( ) ; <nl> - 	 	 VariantArg . ByReference variantArg = new VariantArg . ByReference ( ) ; <nl> - 	 	 variantArg . variantArg = pArgs ; <nl> 	 	 EXCEPINFO . ByReference pExcepInfo = new EXCEPINFO . ByReference ( ) ; <nl> 	 	 IntByReference puArgErr = new IntByReference ( ) ; <nl> <nl> + 	 	 / / make parameter reverse ordering as expected by COM runtime <nl> + 	 	 if ( ( pArgs ! = null ) & & ( pArgs . length > 0 ) ) { <nl> + 	 	 	 _ argsLen = pArgs . length ; <nl> + 	 	 	 _ args = new VARIANT [ _ argsLen ] ; <nl> + <nl> + 	 	 	 int revCount = _ argsLen ; <nl> + 	 	 	 for ( int i = 0 ; i < _ argsLen ; i + + ) { <nl> + 	 	 	 	 _ args [ i ] = pArgs [ - - revCount ] ; <nl> + 	 	 	 } <nl> + 	 	 } <nl> + <nl> 	 	 / / Get DISPID for name passed . . . <nl> 	 	 HRESULT hr = pDisp . GetIDsOfNames ( Guid . IID _ NULL , ptName , 1 , <nl> 	 	 	 	 LOCALE _ USER _ DEFAULT , pdispID ) ; <nl> @ @ - 192 , 15 + 204 , 16 @ @ public class COMBaseObject { <nl> <nl> 	 	 / / Handle special - case for property - puts ! <nl> 	 	 if ( nType = = OleAuto . DISPATCH _ PROPERTYPUT ) { <nl> - 	 	 	 dp . cNamedArgs = new UINT ( pArgs . length ) ; <nl> + 	 	 	 dp . cNamedArgs = new UINT ( _ argsLen ) ; <nl> 	 	 	 dp . rgdispidNamedArgs = new DISPIDbyReference ( <nl> 	 	 	 	 	 OaIdl . DISPID _ PROPERTYPUT ) ; <nl> 	 	 } <nl> <nl> 	 	 / / Build DISPPARAMS <nl> - 	 	 if ( ( pArgs ! = null ) & & ( pArgs . length > 0 ) ) { <nl> - 	 	 	 dp . cArgs = new UINT ( pArgs . length ) ; <nl> - 	 	 	 dp . rgvarg = variantArg ; <nl> + 	 	 if ( _ argsLen > 0 ) { <nl> + 	 	 	 dp . cArgs = new UINT ( _ args . length ) ; <nl> + 	 	 	 / / make pointer of variant array <nl> + 	 	 	 dp . rgvarg = new VariantArg . ByReference ( _ args ) ; <nl> <nl> 	 	 	 / / write ' DISPPARAMS ' structure to memory <nl> 	 	 	 dp . write ( ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> index acec09e . . 5b66661 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java <nl> @ @ - 651 , 6 + 651 , 13 @ @ public interface Variant { <nl> 	 public static class VariantArg extends Structure { <nl> 	 	 public static class ByReference extends VariantArg implements <nl> 	 	 	 	 Structure . ByReference { <nl> + 	 	 	 <nl> + 	 	 	 public ByReference ( ) { <nl> + 	 	 	 } <nl> + 	 	 	 <nl> + 	 	 	 public ByReference ( VARIANT [ ] variantArg ) { <nl> + 	 	 	 	 this . variantArg = variantArg ; <nl> + 	 	 	 } <nl> 	 	 } <nl> <nl> 	 	 public VARIANT [ ] variantArg ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / contrib / msoffice / jnatest . doc b / contrib / msoffice / jnatest . doc 
 index ba68825 . . 3fa63e8 100644 
 - - - a / contrib / msoffice / jnatest . doc 
 + + + b / contrib / msoffice / jnatest . doc 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 
 - Hello from JNA ! JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA 
 + JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA 
 Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA 
 Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA 
 Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA 
 @ @ - 19 , 7 + 19 , 7 @ @ Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA 
 Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA 
 Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA 
 Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA 
 - Test JNA Test JNA Test JNA 
 + Test JNA 
 JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA 
 Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA 
 Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA Test JNA 
 diff - - git a / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSOfficeDemo . java b / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSOfficeDemo . java 
 index 4cdc9d0 . . b4e18da 100644 
 - - - a / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSOfficeDemo . java 
 + + + b / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSOfficeDemo . java 
 @ @ - 27 , 8 + 27 , 7 @ @ public class MSOfficeDemo { 
 	 	 LONG wdFormatPDF = new LONG ( 17 ) ; / / PDF format . 
 	 	 LONG wdFormatRTF = new LONG ( 6 ) ; / / Rich text format ( RTF ) . 
 	 	 LONG wdFormatHTML = new LONG ( 8 ) ; / / Standard HTML format . 
 - 	 	 
 - 	 	 
 + 
 	 	 try { 
 	 	 	 msWord = new MSWord ( ) ; 
 	 	 	 System . out . println ( " MSWord version : " + msWord . getVersion ( ) ) ; 
 @ @ - 37 , 11 + 36 , 14 @ @ public class MSOfficeDemo { 
 	 	 	 msWord . openDocument ( currentWorkingDir + " jnatest . doc " , true ) ; 
 	 	 	 msWord . insertText ( " Hello from JNA ! " ) ; 
 	 	 	 / / wait 10sec . before closing 
 - 	 	 	 / / Thread . currentThread ( ) . sleep ( 10000 ) ; 
 - 	 	 	 / / close and save the document 
 + 	 	 	 Thread . currentThread ( ) . sleep ( 10000 ) ; 
 + 	 	 	 / / save in different formats 
 + 	 	 	 / / pdf format is only supported in MSWord 2007 and above 
 + 	 	 	 / / msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . pdf " , wdFormatPDF ) ; 
 	 	 	 msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . rtf " , wdFormatRTF ) ; 
 	 	 	 msWord . SaveAs ( " C : \ \ TEMP \ \ jnatestSaveAs . html " , wdFormatHTML ) ; 
 - 	 	 	 / / msWord . closeActiveDocument ( true ) ; 
 + 	 	 	 / / close and save the document 
 + 	 	 	 msWord . closeActiveDocument ( true ) ; 
 	 	 	 / / wait then close word 
 	 	 	 msWord . quit ( ) ; 
 	 	 } catch ( COMException e ) { 
 diff - - git a / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSWord . java b / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSWord . java 
 index c8a13f1 . . 218af5e 100644 
 - - - a / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSWord . java 
 + + + b / contrib / msoffice / src / com / sun / jna / platform / win32 / office / MSWord . java 
 @ @ - 50 , 12 + 50 , 11 @ @ public class MSWord extends COMObject { 
 	 } 
 
 	 public void SaveAs ( String FileName , LONG FileFormat ) throws COMException { 
 - 	 	 VARIANT [ ] args = new VARIANT [ 2 ] ; 
 - 	 	 args [ 0 ] = new VARIANT ( FileFormat ) ; 
 - 	 	 args [ 1 ] = new VARIANT ( FileName ) ; 
 + 	 	 VARIANT vtFileName = new VARIANT ( FileName ) ; 
 + 	 	 VARIANT vtFileFormat = new VARIANT ( FileFormat ) ; 
 	 	 
 	 	 this . invokeNoReply ( " SaveAs " , this . getActiveDocument ( ) . getIDispatch ( ) , 
 - 	 	 	 	 args ) ; 
 + 	 	 	 	 vtFileName , vtFileFormat ) ; 
 	 } 
 
 	 public ActiveDocument getActiveDocument ( ) { 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBaseObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBaseObject . java 
 index e687992 . . 20120f0 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBaseObject . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMBaseObject . java 
 @ @ - 176 , 14 + 176 , 26 @ @ public class COMBaseObject { 
 	 	 if ( pDisp = = null ) 
 	 	 	 throw new COMException ( " pDisp ( IDispatch ) parameter is null ! " ) ; 
 
 + 	 	 / / variable declaration 
 + 	 	 int _ argsLen = 0 ; 
 + 	 	 VARIANT [ ] _ args = null ; 
 	 	 WString [ ] ptName = new WString [ ] { new WString ( name ) } ; 
 	 	 DISPPARAMS dp = new DISPPARAMS ( ) ; 
 	 	 DISPIDbyReference pdispID = new DISPIDbyReference ( ) ; 
 - 	 	 VariantArg . ByReference variantArg = new VariantArg . ByReference ( ) ; 
 - 	 	 variantArg . variantArg = pArgs ; 
 	 	 EXCEPINFO . ByReference pExcepInfo = new EXCEPINFO . ByReference ( ) ; 
 	 	 IntByReference puArgErr = new IntByReference ( ) ; 
 
 + 	 	 / / make parameter reverse ordering as expected by COM runtime 
 + 	 	 if ( ( pArgs ! = null ) & & ( pArgs . length > 0 ) ) { 
 + 	 	 	 _ argsLen = pArgs . length ; 
 + 	 	 	 _ args = new VARIANT [ _ argsLen ] ; 
 + 
 + 	 	 	 int revCount = _ argsLen ; 
 + 	 	 	 for ( int i = 0 ; i < _ argsLen ; i + + ) { 
 + 	 	 	 	 _ args [ i ] = pArgs [ - - revCount ] ; 
 + 	 	 	 } 
 + 	 	 } 
 + 
 	 	 / / Get DISPID for name passed . . . 
 	 	 HRESULT hr = pDisp . GetIDsOfNames ( Guid . IID _ NULL , ptName , 1 , 
 	 	 	 	 LOCALE _ USER _ DEFAULT , pdispID ) ; 
 @ @ - 192 , 15 + 204 , 16 @ @ public class COMBaseObject { 
 
 	 	 / / Handle special - case for property - puts ! 
 	 	 if ( nType = = OleAuto . DISPATCH _ PROPERTYPUT ) { 
 - 	 	 	 dp . cNamedArgs = new UINT ( pArgs . length ) ; 
 + 	 	 	 dp . cNamedArgs = new UINT ( _ argsLen ) ; 
 	 	 	 dp . rgdispidNamedArgs = new DISPIDbyReference ( 
 	 	 	 	 	 OaIdl . DISPID _ PROPERTYPUT ) ; 
 	 	 } 
 
 	 	 / / Build DISPPARAMS 
 - 	 	 if ( ( pArgs ! = null ) & & ( pArgs . length > 0 ) ) { 
 - 	 	 	 dp . cArgs = new UINT ( pArgs . length ) ; 
 - 	 	 	 dp . rgvarg = variantArg ; 
 + 	 	 if ( _ argsLen > 0 ) { 
 + 	 	 	 dp . cArgs = new UINT ( _ args . length ) ; 
 + 	 	 	 / / make pointer of variant array 
 + 	 	 	 dp . rgvarg = new VariantArg . ByReference ( _ args ) ; 
 
 	 	 	 / / write ' DISPPARAMS ' structure to memory 
 	 	 	 dp . write ( ) ; 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java 
 index acec09e . . 5b66661 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Variant . java 
 @ @ - 651 , 6 + 651 , 13 @ @ public interface Variant { 
 	 public static class VariantArg extends Structure { 
 	 	 public static class ByReference extends VariantArg implements 
 	 	 	 	 Structure . ByReference { 
 + 	 	 	 
 + 	 	 	 public ByReference ( ) { 
 + 	 	 	 } 
 + 	 	 	 
 + 	 	 	 public ByReference ( VARIANT [ ] variantArg ) { 
 + 	 	 	 	 this . variantArg = variantArg ; 
 + 	 	 	 } 
 	 	 } 
 
 	 	 public VARIANT [ ] variantArg ;

NEAREST DIFF:
ELIMINATEDSENTENCE
