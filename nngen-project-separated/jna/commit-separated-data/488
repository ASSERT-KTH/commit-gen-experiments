BLEU SCORE: 0.2259005009024612

TEST MSG: pre - merge
GENERATED MSG: Made prettier .

TEST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 643c7fb . . 443992d 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 9 , 6 + 9 , 7 @ @ Features <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> + * [ PR # 213 ] ( https : / / github . com / twall / jna / pull / 213 ) : Fix ` Structure . toString ( ) ` not to dump memory when ` jna . dump _ memory ` is false . - [ @ tomohiron ] ( https : / / github . com / tomohiron ) . <nl> * Use TLS to indicate callback detach state , to avoid any potential conflicts with last error storage - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 173 ] ( https : / / github . com / twall / jna / issues / 173 ) : Fix OSX 10 . 8 / Xcode 4 + builds , web start path with Oracle 1 . 7 JDK - [ @ mkjellman ] ( https : / / github . com / mkjellman ) . <nl> * [ # 215 ] ( https : / / github . com / twall / jna / issues / 215 ) : Force use of XSI ` strerror _ r ` on linux - [ LionelCons ] ( https : / / github . com / LionelCons ) .
NEAREST DIFF (one line): diff - - git a / www / CallbacksAndClosures . md b / www / CallbacksAndClosures . md <nl> index 0521644 . . dbd64a5 100644 <nl> - - - a / www / CallbacksAndClosures . md <nl> + + + b / www / CallbacksAndClosures . md <nl> @ @ - 3 , 12 + 3 , 14 @ @ Callbacks and Closures <nl> <nl> Callback declarations consist of a simple interface that extends the Callback interface and implements a callback method ( or defines a single method of arbitrary name ) . Callbacks are implemented by wrapping a Java object method in a little bit of C glue code . The simplest usage resembles using anonymous inner classes to register event listeners . Following is an example of callback usage : <nl> <nl> - / / Original C declarations <nl> + Original C declarations <nl> + <nl> typedef void ( * sig _ t ) ( int ) ; <nl> sig _ t signal ( int sig , sig _ t func ) ; <nl> int SIGUSR1 = 30 ; <nl> <nl> - / / Equivalent JNA mappings <nl> + Equivalent JNA mappings <nl> + <nl> public interface CLibrary extends Library { <nl> int SIGUSR1 = 30 ; <nl> interface sig _ t extends Callback { <nl> @ @ - 34 , 11 + 36 , 13 @ @ Callback declarations consist of a simple interface that extends the Callback in <nl> <nl> Here is a more involved example , using the Win32 APIs to enumerate all native windows : <nl> <nl> - / / Original C declarations <nl> + Original C declarations <nl> + <nl> typedef int ( _ _ stdcall * WNDENUMPROC ) ( void * , void * ) ; <nl> int _ _ stdcall EnumWindows ( WNDENUMPROC , void * ) ; <nl> <nl> - / / Equivalent JNA mappings <nl> + Equivalent JNA mappings <nl> + <nl> public interface User32 extends StdCallLibrary { <nl> interface WNDENUMPROC extends StdCallCallback { <nl> / * * Return whether to continue enumeration . * /

TEST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 643c7fb . . 443992d 100755 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 9 , 6 + 9 , 7 @ @ Features 
 
 Bug Fixes 
 - - - - - - - - - 
 + * [ PR # 213 ] ( https : / / github . com / twall / jna / pull / 213 ) : Fix ` Structure . toString ( ) ` not to dump memory when ` jna . dump _ memory ` is false . - [ @ tomohiron ] ( https : / / github . com / tomohiron ) . 
 * Use TLS to indicate callback detach state , to avoid any potential conflicts with last error storage - [ @ twall ] ( https : / / github . com / twall ) . 
 * [ # 173 ] ( https : / / github . com / twall / jna / issues / 173 ) : Fix OSX 10 . 8 / Xcode 4 + builds , web start path with Oracle 1 . 7 JDK - [ @ mkjellman ] ( https : / / github . com / mkjellman ) . 
 * [ # 215 ] ( https : / / github . com / twall / jna / issues / 215 ) : Force use of XSI ` strerror _ r ` on linux - [ LionelCons ] ( https : / / github . com / LionelCons ) .

NEAREST DIFF:
diff - - git a / www / CallbacksAndClosures . md b / www / CallbacksAndClosures . md 
 index 0521644 . . dbd64a5 100644 
 - - - a / www / CallbacksAndClosures . md 
 + + + b / www / CallbacksAndClosures . md 
 @ @ - 3 , 12 + 3 , 14 @ @ Callbacks and Closures 
 
 Callback declarations consist of a simple interface that extends the Callback interface and implements a callback method ( or defines a single method of arbitrary name ) . Callbacks are implemented by wrapping a Java object method in a little bit of C glue code . The simplest usage resembles using anonymous inner classes to register event listeners . Following is an example of callback usage : 
 
 - / / Original C declarations 
 + Original C declarations 
 + 
 typedef void ( * sig _ t ) ( int ) ; 
 sig _ t signal ( int sig , sig _ t func ) ; 
 int SIGUSR1 = 30 ; 
 
 - / / Equivalent JNA mappings 
 + Equivalent JNA mappings 
 + 
 public interface CLibrary extends Library { 
 int SIGUSR1 = 30 ; 
 interface sig _ t extends Callback { 
 @ @ - 34 , 11 + 36 , 13 @ @ Callback declarations consist of a simple interface that extends the Callback in 
 
 Here is a more involved example , using the Win32 APIs to enumerate all native windows : 
 
 - / / Original C declarations 
 + Original C declarations 
 + 
 typedef int ( _ _ stdcall * WNDENUMPROC ) ( void * , void * ) ; 
 int _ _ stdcall EnumWindows ( WNDENUMPROC , void * ) ; 
 
 - / / Equivalent JNA mappings 
 + Equivalent JNA mappings 
 + 
 public interface User32 extends StdCallLibrary { 
 interface WNDENUMPROC extends StdCallCallback { 
 / * * Return whether to continue enumeration . * /
