BLEU SCORE: 0.03089055318156698

TEST MSG: Make warnings treated as errors for dispatch . c and protect . c
GENERATED MSG: fix unused parameter warnings under gcc

TEST DIFF (one line): diff - - git a / native / Makefile b / native / Makefile <nl> index 1cda1ec . . 8c41035 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 84 , 6 + 84 , 8 @ @ JNISFX = $ ( LIBSFX ) <nl> CC = gcc <nl> LD = $ ( CC ) <nl> LIBS = <nl> + # CC _ OPTS only applied to objects build for jnidispatch , not for libffi <nl> + LOC _ CC _ OPTS = - Wno - unknown - warning - option - Werror - Wno - clobbered <nl> # Default to Sun recommendations for JNI compilation <nl> COPT = - O2 - fno - omit - frame - pointer - fno - strict - aliasing <nl> CASM = - S <nl> @ @ - 402 , 13 + 404 , 13 @ @ endif <nl> $ ( BUILD ) / % . o : % . c dispatch . h protect . h $ ( FFI _ LIB ) <nl> 	 @ mkdir - p $ ( BUILD ) <nl> ifneq ( $ ( SDKROOT ) , ) <nl> - 	 $ ( CC ) - arch $ ( ARCH ) $ ( CFLAGS ) - c $ < - o $ @ . $ ( ARCH ) <nl> + 	 $ ( CC ) $ ( LOC _ CC _ OPTS ) - arch $ ( ARCH ) $ ( CFLAGS ) - c $ < - o $ @ . $ ( ARCH ) <nl> 	 for arch in $ ( ALT _ ARCHS ) ; do \ <nl> - 	 $ ( CC ) - arch $ $ arch - I $ ( BUILD ) / libffi . $ $ arch / include $ ( CFLAGS ) - c $ < - o $ @ . $ $ arch ; \ <nl> + 	 $ ( CC ) $ ( LOC _ CC _ OPTS ) - arch $ $ arch - I $ ( BUILD ) / libffi . $ $ arch / include $ ( CFLAGS ) - c $ < - o $ @ . $ $ arch ; \ <nl> 	 done <nl> 	 lipo - create - output $ @ $ @ . * <nl> else <nl> - 	 $ ( CC ) $ ( CFLAGS ) - c $ < $ ( COUT ) <nl> + 	 $ ( CC ) $ ( CFLAGS ) $ ( LOC _ CC _ OPTS ) - c $ < $ ( COUT ) <nl> endif <nl> <nl> all : $ ( LIBRARY ) $ ( TESTLIB ) $ ( TESTLIB2 ) $ ( TESTLIB _ JAR ) $ ( TESTLIB _ PATH ) $ ( TESTLIB _ TRUNC ) <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 141faf7 . . 549f057 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 2032 , 7 + 2032 , 7 @ @ closure _ handler ( ffi _ cif * cif , void * resp , void * * argp , void * cdata ) <nl> * / <nl> JNIEXPORT jlong JNICALL <nl> Java _ com _ sun _ jna _ Native _ invokePointer ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , <nl> + jobject UNUSED ( function ) , jlong fp , <nl> jint callconv , jobjectArray arr ) <nl> { <nl> jvalue result ; <nl> @ @ - 2048 , 7 + 2048 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokePointer ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * / <nl> JNIEXPORT jobject <nl> JNICALL Java _ com _ sun _ jna _ Native _ invokeObject ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , <nl> + jobject UNUSED ( function ) , jlong fp , <nl> jint callconv , jobjectArray arr ) <nl> { <nl> jvalue result ; <nl> @ @ - 2064 , 7 + 2064 , 7 @ @ JNICALL Java _ com _ sun _ jna _ Native _ invokeObject ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * / <nl> JNIEXPORT void JNICALL <nl> Java _ com _ sun _ jna _ Native _ invokeStructure ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , <nl> + jobject UNUSED ( function ) , jlong fp , <nl> jint callconv , jobjectArray arr , <nl> jlong memory , jlong type _ info ) <nl> { <nl> @ @ - 2084 , 7 + 2084 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeStructure ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * / <nl> JNIEXPORT jdouble JNICALL <nl> Java _ com _ sun _ jna _ Native _ invokeDouble ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , <nl> + jobject UNUSED ( function ) , jlong fp , <nl> jint callconv , jobjectArray arr ) <nl> { <nl> jvalue result ; <nl> @ @ - 2099 , 7 + 2099 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeDouble ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * / <nl> JNIEXPORT jfloat JNICALL <nl> Java _ com _ sun _ jna _ Native _ invokeFloat ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , <nl> + jobject UNUSED ( function ) , jlong fp , <nl> jint callconv , jobjectArray arr ) <nl> { <nl> jvalue result ; <nl> @ @ - 2114 , 7 + 2114 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeFloat ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * / <nl> JNIEXPORT jint JNICALL <nl> Java _ com _ sun _ jna _ Native _ invokeInt ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , jint callconv , <nl> + jobject UNUSED ( function ) , jlong fp , jint callconv , <nl> jobjectArray arr ) <nl> { <nl> ffi _ arg result ; <nl> @ @ - 2129 , 7 + 2129 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeInt ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * / <nl> JNIEXPORT jlong JNICALL <nl> Java _ com _ sun _ jna _ Native _ invokeLong ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , jint callconv , <nl> + jobject UNUSED ( function ) , jlong fp , jint callconv , <nl> jobjectArray arr ) <nl> { <nl> jvalue result ; <nl> @ @ - 2144 , 7 + 2144 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeLong ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * / <nl> JNIEXPORT void JNICALL <nl> Java _ com _ sun _ jna _ Native _ invokeVoid ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> - jobject function , jlong fp , jint callconv , <nl> + jobject UNUSED ( function ) , jlong fp , jint callconv , <nl> jobjectArray arr ) <nl> { <nl> jvalue result ; <nl> @ @ - 2262 , 7 + 2262 , 7 @ @ Java _ com _ sun _ jna _ Native _ findSymbol ( JNIEnv * env , jclass UNUSED ( cls ) , <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ BII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3BII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jbyteArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jbyteArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > GetByteArrayRegion ( env , arr , off , n , L2A ( addr + offset ) ) ; <nl> @ @ - 2275 , 7 + 2275 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ CII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3CII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jcharArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jcharArray arr , jint off , jint n ) <nl> { <nl> getChars ( env , ( wchar _ t * ) L2A ( addr + offset ) , arr , off , n ) ; <nl> } <nl> @ @ - 2286 , 7 + 2286 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ DII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3DII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jdoubleArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jdoubleArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > GetDoubleArrayRegion ( env , arr , off , n , ( jdouble * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2299 , 7 + 2299 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ FII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3FII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jfloatArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jfloatArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > GetFloatArrayRegion ( env , arr , off , n , ( jfloat * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2312 , 7 + 2312 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ III ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3III <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jintArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jintArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > GetIntArrayRegion ( env , arr , off , n , ( jint * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2325 , 7 + 2325 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ JII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3JII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlongArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlongArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > GetLongArrayRegion ( env , arr , off , n , ( jlong * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2338 , 7 + 2338 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ SII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3SII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jshortArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jshortArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > GetShortArrayRegion ( env , arr , off , n , ( jshort * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2351 , 7 + 2351 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJB ) J <nl> * / <nl> JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ indexOf <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jbyte value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jbyte value ) <nl> { <nl> jbyte * peer = ( jbyte * ) L2A ( addr + offset ) ; <nl> volatile jlong i = 0 ; <nl> @ @ - 2373 , 7 + 2373 , 7 @ @ JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ indexOf <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ BII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3BII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jbyteArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jbyteArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > SetByteArrayRegion ( env , arr , off , n , L2A ( addr + offset ) ) ; <nl> @ @ - 2386 , 7 + 2386 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3B <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ CII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3CII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jcharArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jcharArray arr , jint off , jint n ) <nl> { <nl> setChars ( env , ( wchar _ t * ) L2A ( addr + offset ) , arr , off , n ) ; <nl> } <nl> @ @ - 2397 , 7 + 2397 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3C <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ DII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3DII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jdoubleArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jdoubleArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > SetDoubleArrayRegion ( env , arr , off , n , ( jdouble * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2410 , 7 + 2410 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3D <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ FII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3FII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jfloatArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jfloatArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > SetFloatArrayRegion ( env , arr , off , n , ( jfloat * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2423 , 7 + 2423 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3F <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ III ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3III <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jintArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jintArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > SetIntArrayRegion ( env , arr , off , n , ( jint * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2436 , 7 + 2436 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3I <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ JII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3JII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlongArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlongArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > SetLongArrayRegion ( env , arr , off , n , ( jlong * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2449 , 7 + 2449 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3J <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ [ SII ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3SII <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jshortArray arr , jint off , jint n ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jshortArray arr , jint off , jint n ) <nl> { <nl> PSTART ( ) ; <nl> ( * env ) - > SetShortArrayRegion ( env , arr , off , n , ( jshort * ) L2A ( addr + offset ) ) ; <nl> @ @ - 2462 , 7 + 2462 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3S <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) B <nl> * / <nl> JNIEXPORT jbyte JNICALL Java _ com _ sun _ jna _ Native _ getByte <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> jbyte res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; <nl> @ @ - 2475 , 7 + 2475 , 7 @ @ JNIEXPORT jbyte JNICALL Java _ com _ sun _ jna _ Native _ getByte <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) C <nl> * / <nl> JNIEXPORT jchar JNICALL Java _ com _ sun _ jna _ Native _ getChar <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> wchar _ t res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; <nl> @ @ - 2516 , 7 + 2516 , 7 @ @ JNIEXPORT jobject JNICALL Java _ com _ sun _ jna _ Native _ getDirectByteBuffer _ _ JJ <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJJ ) Ljava / nio / ByteBuffer ; <nl> * / <nl> JNIEXPORT jobject JNICALL Java _ com _ sun _ jna _ Native _ getDirectByteBuffer _ _ Lcom _ sun _ jna _ Pointer _ 2JJJ <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlong length ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlong length ) <nl> { <nl> # ifdef NO _ NIO _ BUFFERS <nl> return NULL ; <nl> @ @ - 2531 , 7 + 2531 , 7 @ @ JNIEXPORT jobject JNICALL Java _ com _ sun _ jna _ Native _ getDirectByteBuffer _ _ Lcom _ sun _ <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) D <nl> * / <nl> JNIEXPORT jdouble JNICALL Java _ com _ sun _ jna _ Native _ getDouble <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> jdouble res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; <nl> @ @ - 2544 , 7 + 2544 , 7 @ @ JNIEXPORT jdouble JNICALL Java _ com _ sun _ jna _ Native _ getDouble <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) F <nl> * / <nl> JNIEXPORT jfloat JNICALL Java _ com _ sun _ jna _ Native _ getFloat <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> jfloat res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; <nl> @ @ - 2557 , 7 + 2557 , 7 @ @ JNIEXPORT jfloat JNICALL Java _ com _ sun _ jna _ Native _ getFloat <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) I <nl> * / <nl> JNIEXPORT jint JNICALL Java _ com _ sun _ jna _ Native _ getInt <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> jint res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; <nl> @ @ - 2570 , 7 + 2570 , 7 @ @ JNIEXPORT jint JNICALL Java _ com _ sun _ jna _ Native _ getInt <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) J <nl> * / <nl> JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ getLong <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> jlong res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; <nl> @ @ - 2583 , 7 + 2583 , 7 @ @ JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ getLong <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) S <nl> * / <nl> JNIEXPORT jshort JNICALL Java _ com _ sun _ jna _ Native _ getShort <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> jshort res = 0 ; <nl> MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; <nl> @ @ - 2596 , 7 + 2596 , 7 @ @ JNIEXPORT jshort JNICALL Java _ com _ sun _ jna _ Native _ getShort <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) Ljava / lang / String ; <nl> * / <nl> JNIEXPORT jstring JNICALL Java _ com _ sun _ jna _ Native _ getWideString <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) <nl> { <nl> return newJavaString ( env , L2A ( addr + offset ) , NULL ) ; <nl> } <nl> @ @ - 2607 , 7 + 2607 , 7 @ @ JNIEXPORT jstring JNICALL Java _ com _ sun _ jna _ Native _ getWideString <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJ ) [ B <nl> * / <nl> JNIEXPORT jbyteArray JNICALL Java _ com _ sun _ jna _ Native _ getStringBytes <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong baseaddr , jlong offset ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong baseaddr , jlong offset ) <nl> { <nl> volatile jbyteArray bytes = 0 ; <nl> PSTART ( ) ; <nl> @ @ - 2632 , 7 + 2632 , 7 @ @ JNIEXPORT jbyteArray JNICALL Java _ com _ sun _ jna _ Native _ getStringBytes <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJJB ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setMemory <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlong count , jbyte value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlong count , jbyte value ) <nl> { <nl> MEMSET ( env , L2A ( addr + offset ) , ( int ) value , ( size _ t ) count ) ; <nl> } <nl> @ @ - 2643 , 7 + 2643 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setMemory <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJB ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setByte <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jbyte value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jbyte value ) <nl> { <nl> MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2654 , 7 + 2654 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setByte <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJC ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setChar <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jchar value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jchar value ) <nl> { <nl> wchar _ t ch = value ; <nl> MEMCPY ( env , L2A ( addr + offset ) , & ch , sizeof ( ch ) ) ; <nl> @ @ - 2666 , 7 + 2666 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setChar <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJJ ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setPointer <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlong value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlong value ) <nl> { <nl> void * ptr = L2A ( value ) ; <nl> MEMCPY ( env , L2A ( addr + offset ) , & ptr , sizeof ( void * ) ) ; <nl> @ @ - 2678 , 7 + 2678 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setPointer <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJD ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setDouble <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jdouble value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jdouble value ) <nl> { <nl> MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2689 , 7 + 2689 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setDouble <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJF ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setFloat <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jfloat value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jfloat value ) <nl> { <nl> MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2700 , 7 + 2700 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setFloat <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJI ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setInt <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jint value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jint value ) <nl> { <nl> MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2711 , 7 + 2711 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setInt <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJJ ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setLong <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlong value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlong value ) <nl> { <nl> MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2722 , 7 + 2722 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setLong <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJS ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setShort <nl> - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jshort value ) <nl> + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jshort value ) <nl> { <nl> MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; <nl> } <nl> @ @ - 2733 , 7 + 2733 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setShort <nl> * Signature : ( Lcom / sun / jna / Pointer ; JJLjava / lang / String ; ) V <nl> * / <nl> JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setWideString <nl> - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jstring value ) <nl> + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jstring value ) <nl> { <nl> int len = ( * env ) - > GetStringLength ( env , value ) ; <nl> const void * volatile str ; <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index 4e144cf . . 5fdfa9c 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 30 , 6 + 30 , 7 @ @ <nl> # pragma warning ( disable : 4204 ) / * structure initializer * / <nl> # pragma warning ( disable : 4710 ) / * swprintf not inlined * / <nl> # pragma warning ( disable : 4201 ) / * nameless struct / union ( jni _ md . h ) * / <nl> + # pragma warning ( disable : 4996 ) / * deprecated functions ( strdup ) * / <nl> # else <nl> # include < malloc . h > <nl> # endif / * _ MSC _ VER * / <nl> @ @ - 152 , 6 + 153 , 8 @ @ typedef struct _ callback { <nl> # define L2A ( X ) ( ( void * ) ( unsigned long ) ( X ) ) <nl> # define A2L ( X ) ( ( jlong ) ( unsigned long ) ( X ) ) <nl> # endif <nl> + # else <nl> + # include < stdio . h > <nl> # endif <nl> <nl> / * Convenience macros * / <nl> diff - - git a / native / testlib . c b / native / testlib . c <nl> index 6aafac2 . . 5e640c0 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 876 , 7 + 876 , 7 @ @ addVarArgs ( const char * fmt , . . . ) { <nl> break ; <nl> case ' f ' : / / float ( promoted to ‘ double ’ when passed through ‘ . . . ’ ) <nl> case ' g ' : / / double <nl> - sum + = va _ arg ( ap , double ) ; <nl> + sum + = ( int ) va _ arg ( ap , double ) ; <nl> break ; <nl> default : <nl> break ; <nl> diff - - git a / test / com / sun / jna / unix / XsiComplianceTest . java b / test / com / sun / jna / unix / XsiComplianceTest . java <nl> deleted file mode 100644 <nl> index 342e2f2 . . 0000000 <nl> - - - a / test / com / sun / jna / unix / XsiComplianceTest . java <nl> + + + / dev / null <nl> @ @ - 1 , 42 + 0 , 0 @ @ <nl> - package com . sun . jna . unix ; <nl> - <nl> - import com . sun . jna . LastErrorException ; <nl> - import com . sun . jna . Library ; <nl> - import com . sun . jna . Memory ; <nl> - import com . sun . jna . Native ; <nl> - import com . sun . jna . Pointer ; <nl> - import junit . framework . TestCase ; <nl> - <nl> - public final class XsiComplianceTest extends TestCase { <nl> - <nl> - public static void main ( String [ ] args ) { <nl> - junit . textui . TestRunner . run ( XsiComplianceTest . class ) ; <nl> - } <nl> - <nl> - / * * <nl> - * Regression test for https : / / github . com / java - native - access / jna / issues / 392 <nl> - * <nl> - * Depending on the toolchain on GCC / GLIBC the wrong definition of <nl> - * strerror _ r was included . <nl> - * <nl> - * This leads to broken messages . <nl> - * / <nl> - public void testErrorReporting ( ) { <nl> - boolean exceptionWasCaught = false ; <nl> - try { <nl> - INSTANCE . read ( Integer . MAX _ VALUE , new Memory ( 1024 ) , 1024 ) ; <nl> - } catch ( LastErrorException ex ) { <nl> - exceptionWasCaught = true ; <nl> - assertEquals ( " [ 9 ] Bad file descriptor " , ex . getMessage ( ) ) ; <nl> - assertEquals ( 9 , ex . getErrorCode ( ) ) ; <nl> - } <nl> - assertEquals ( true , exceptionWasCaught ) ; <nl> - } <nl> - <nl> - static POSIX INSTANCE = ( POSIX ) Native . loadLibrary ( POSIX . class ) ; <nl> - <nl> - interface POSIX extends Library { <nl> - <nl> - long read ( int fildes , Pointer buf , long nbyte ) throws LastErrorException ; <nl> - } <nl> - } <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / jnalib / src / com / sun / jna / Structure . java b / jnalib / src / com / sun / jna / Structure . java <nl> index dc09858 . . c534f9f 100644 <nl> - - - a / jnalib / src / com / sun / jna / Structure . java <nl> + + + b / jnalib / src / com / sun / jna / Structure . java <nl> @ @ - 520 , 6 + 520 , 7 @ @ public abstract class Structure { <nl> | | Callback . class . isAssignableFrom ( fieldType ) <nl> | | Buffer . class . isAssignableFrom ( fieldType ) <nl> | | Pointer . class . isAssignableFrom ( fieldType ) <nl> + | | NativeMapped . class . isAssignableFrom ( fieldType ) <nl> | | fieldType . isArray ( ) ) <nl> ? getField ( structField ) : null ; <nl> Object result = memory . getValue ( offset , fieldType , currentValue ) ;

TEST DIFF:
diff - - git a / native / Makefile b / native / Makefile 
 index 1cda1ec . . 8c41035 100644 
 - - - a / native / Makefile 
 + + + b / native / Makefile 
 @ @ - 84 , 6 + 84 , 8 @ @ JNISFX = $ ( LIBSFX ) 
 CC = gcc 
 LD = $ ( CC ) 
 LIBS = 
 + # CC _ OPTS only applied to objects build for jnidispatch , not for libffi 
 + LOC _ CC _ OPTS = - Wno - unknown - warning - option - Werror - Wno - clobbered 
 # Default to Sun recommendations for JNI compilation 
 COPT = - O2 - fno - omit - frame - pointer - fno - strict - aliasing 
 CASM = - S 
 @ @ - 402 , 13 + 404 , 13 @ @ endif 
 $ ( BUILD ) / % . o : % . c dispatch . h protect . h $ ( FFI _ LIB ) 
 	 @ mkdir - p $ ( BUILD ) 
 ifneq ( $ ( SDKROOT ) , ) 
 - 	 $ ( CC ) - arch $ ( ARCH ) $ ( CFLAGS ) - c $ < - o $ @ . $ ( ARCH ) 
 + 	 $ ( CC ) $ ( LOC _ CC _ OPTS ) - arch $ ( ARCH ) $ ( CFLAGS ) - c $ < - o $ @ . $ ( ARCH ) 
 	 for arch in $ ( ALT _ ARCHS ) ; do \ 
 - 	 $ ( CC ) - arch $ $ arch - I $ ( BUILD ) / libffi . $ $ arch / include $ ( CFLAGS ) - c $ < - o $ @ . $ $ arch ; \ 
 + 	 $ ( CC ) $ ( LOC _ CC _ OPTS ) - arch $ $ arch - I $ ( BUILD ) / libffi . $ $ arch / include $ ( CFLAGS ) - c $ < - o $ @ . $ $ arch ; \ 
 	 done 
 	 lipo - create - output $ @ $ @ . * 
 else 
 - 	 $ ( CC ) $ ( CFLAGS ) - c $ < $ ( COUT ) 
 + 	 $ ( CC ) $ ( CFLAGS ) $ ( LOC _ CC _ OPTS ) - c $ < $ ( COUT ) 
 endif 
 
 all : $ ( LIBRARY ) $ ( TESTLIB ) $ ( TESTLIB2 ) $ ( TESTLIB _ JAR ) $ ( TESTLIB _ PATH ) $ ( TESTLIB _ TRUNC ) 
 diff - - git a / native / dispatch . c b / native / dispatch . c 
 index 141faf7 . . 549f057 100644 
 - - - a / native / dispatch . c 
 + + + b / native / dispatch . c 
 @ @ - 2032 , 7 + 2032 , 7 @ @ closure _ handler ( ffi _ cif * cif , void * resp , void * * argp , void * cdata ) 
 * / 
 JNIEXPORT jlong JNICALL 
 Java _ com _ sun _ jna _ Native _ invokePointer ( JNIEnv * env , jclass UNUSED ( cls ) , 
 - jobject function , jlong fp , 
 + jobject UNUSED ( function ) , jlong fp , 
 jint callconv , jobjectArray arr ) 
 { 
 jvalue result ; 
 @ @ - 2048 , 7 + 2048 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokePointer ( JNIEnv * env , jclass UNUSED ( cls ) , 
 * / 
 JNIEXPORT jobject 
 JNICALL Java _ com _ sun _ jna _ Native _ invokeObject ( JNIEnv * env , jclass UNUSED ( cls ) , 
 - jobject function , jlong fp , 
 + jobject UNUSED ( function ) , jlong fp , 
 jint callconv , jobjectArray arr ) 
 { 
 jvalue result ; 
 @ @ - 2064 , 7 + 2064 , 7 @ @ JNICALL Java _ com _ sun _ jna _ Native _ invokeObject ( JNIEnv * env , jclass UNUSED ( cls ) , 
 * / 
 JNIEXPORT void JNICALL 
 Java _ com _ sun _ jna _ Native _ invokeStructure ( JNIEnv * env , jclass UNUSED ( cls ) , 
 - jobject function , jlong fp , 
 + jobject UNUSED ( function ) , jlong fp , 
 jint callconv , jobjectArray arr , 
 jlong memory , jlong type _ info ) 
 { 
 @ @ - 2084 , 7 + 2084 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeStructure ( JNIEnv * env , jclass UNUSED ( cls ) , 
 * / 
 JNIEXPORT jdouble JNICALL 
 Java _ com _ sun _ jna _ Native _ invokeDouble ( JNIEnv * env , jclass UNUSED ( cls ) , 
 - jobject function , jlong fp , 
 + jobject UNUSED ( function ) , jlong fp , 
 jint callconv , jobjectArray arr ) 
 { 
 jvalue result ; 
 @ @ - 2099 , 7 + 2099 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeDouble ( JNIEnv * env , jclass UNUSED ( cls ) , 
 * / 
 JNIEXPORT jfloat JNICALL 
 Java _ com _ sun _ jna _ Native _ invokeFloat ( JNIEnv * env , jclass UNUSED ( cls ) , 
 - jobject function , jlong fp , 
 + jobject UNUSED ( function ) , jlong fp , 
 jint callconv , jobjectArray arr ) 
 { 
 jvalue result ; 
 @ @ - 2114 , 7 + 2114 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeFloat ( JNIEnv * env , jclass UNUSED ( cls ) , 
 * / 
 JNIEXPORT jint JNICALL 
 Java _ com _ sun _ jna _ Native _ invokeInt ( JNIEnv * env , jclass UNUSED ( cls ) , 
 - jobject function , jlong fp , jint callconv , 
 + jobject UNUSED ( function ) , jlong fp , jint callconv , 
 jobjectArray arr ) 
 { 
 ffi _ arg result ; 
 @ @ - 2129 , 7 + 2129 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeInt ( JNIEnv * env , jclass UNUSED ( cls ) , 
 * / 
 JNIEXPORT jlong JNICALL 
 Java _ com _ sun _ jna _ Native _ invokeLong ( JNIEnv * env , jclass UNUSED ( cls ) , 
 - jobject function , jlong fp , jint callconv , 
 + jobject UNUSED ( function ) , jlong fp , jint callconv , 
 jobjectArray arr ) 
 { 
 jvalue result ; 
 @ @ - 2144 , 7 + 2144 , 7 @ @ Java _ com _ sun _ jna _ Native _ invokeLong ( JNIEnv * env , jclass UNUSED ( cls ) , 
 * / 
 JNIEXPORT void JNICALL 
 Java _ com _ sun _ jna _ Native _ invokeVoid ( JNIEnv * env , jclass UNUSED ( cls ) , 
 - jobject function , jlong fp , jint callconv , 
 + jobject UNUSED ( function ) , jlong fp , jint callconv , 
 jobjectArray arr ) 
 { 
 jvalue result ; 
 @ @ - 2262 , 7 + 2262 , 7 @ @ Java _ com _ sun _ jna _ Native _ findSymbol ( JNIEnv * env , jclass UNUSED ( cls ) , 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ [ BII ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3BII 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jbyteArray arr , jint off , jint n ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jbyteArray arr , jint off , jint n ) 
 { 
 PSTART ( ) ; 
 ( * env ) - > GetByteArrayRegion ( env , arr , off , n , L2A ( addr + offset ) ) ; 
 @ @ - 2275 , 7 + 2275 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ [ CII ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3CII 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jcharArray arr , jint off , jint n ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jcharArray arr , jint off , jint n ) 
 { 
 getChars ( env , ( wchar _ t * ) L2A ( addr + offset ) , arr , off , n ) ; 
 } 
 @ @ - 2286 , 7 + 2286 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ [ DII ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3DII 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jdoubleArray arr , jint off , jint n ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jdoubleArray arr , jint off , jint n ) 
 { 
 PSTART ( ) ; 
 ( * env ) - > GetDoubleArrayRegion ( env , arr , off , n , ( jdouble * ) L2A ( addr + offset ) ) ; 
 @ @ - 2299 , 7 + 2299 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ [ FII ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3FII 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jfloatArray arr , jint off , jint n ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jfloatArray arr , jint off , jint n ) 
 { 
 PSTART ( ) ; 
 ( * env ) - > GetFloatArrayRegion ( env , arr , off , n , ( jfloat * ) L2A ( addr + offset ) ) ; 
 @ @ - 2312 , 7 + 2312 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ [ III ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3III 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jintArray arr , jint off , jint n ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jintArray arr , jint off , jint n ) 
 { 
 PSTART ( ) ; 
 ( * env ) - > GetIntArrayRegion ( env , arr , off , n , ( jint * ) L2A ( addr + offset ) ) ; 
 @ @ - 2325 , 7 + 2325 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ [ JII ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3JII 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlongArray arr , jint off , jint n ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlongArray arr , jint off , jint n ) 
 { 
 PSTART ( ) ; 
 ( * env ) - > GetLongArrayRegion ( env , arr , off , n , ( jlong * ) L2A ( addr + offset ) ) ; 
 @ @ - 2338 , 7 + 2338 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ [ SII ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3SII 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jshortArray arr , jint off , jint n ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jshortArray arr , jint off , jint n ) 
 { 
 PSTART ( ) ; 
 ( * env ) - > GetShortArrayRegion ( env , arr , off , n , ( jshort * ) L2A ( addr + offset ) ) ; 
 @ @ - 2351 , 7 + 2351 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ write _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3 
 * Signature : ( Lcom / sun / jna / Pointer ; JJB ) J 
 * / 
 JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ indexOf 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jbyte value ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jbyte value ) 
 { 
 jbyte * peer = ( jbyte * ) L2A ( addr + offset ) ; 
 volatile jlong i = 0 ; 
 @ @ - 2373 , 7 + 2373 , 7 @ @ JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ indexOf 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ [ BII ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3BII 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jbyteArray arr , jint off , jint n ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jbyteArray arr , jint off , jint n ) 
 { 
 PSTART ( ) ; 
 ( * env ) - > SetByteArrayRegion ( env , arr , off , n , L2A ( addr + offset ) ) ; 
 @ @ - 2386 , 7 + 2386 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3B 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ [ CII ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3CII 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jcharArray arr , jint off , jint n ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jcharArray arr , jint off , jint n ) 
 { 
 setChars ( env , ( wchar _ t * ) L2A ( addr + offset ) , arr , off , n ) ; 
 } 
 @ @ - 2397 , 7 + 2397 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3C 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ [ DII ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3DII 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jdoubleArray arr , jint off , jint n ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jdoubleArray arr , jint off , jint n ) 
 { 
 PSTART ( ) ; 
 ( * env ) - > SetDoubleArrayRegion ( env , arr , off , n , ( jdouble * ) L2A ( addr + offset ) ) ; 
 @ @ - 2410 , 7 + 2410 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3D 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ [ FII ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3FII 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jfloatArray arr , jint off , jint n ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jfloatArray arr , jint off , jint n ) 
 { 
 PSTART ( ) ; 
 ( * env ) - > SetFloatArrayRegion ( env , arr , off , n , ( jfloat * ) L2A ( addr + offset ) ) ; 
 @ @ - 2423 , 7 + 2423 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3F 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ [ III ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3III 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jintArray arr , jint off , jint n ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jintArray arr , jint off , jint n ) 
 { 
 PSTART ( ) ; 
 ( * env ) - > SetIntArrayRegion ( env , arr , off , n , ( jint * ) L2A ( addr + offset ) ) ; 
 @ @ - 2436 , 7 + 2436 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3I 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ [ JII ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3JII 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlongArray arr , jint off , jint n ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlongArray arr , jint off , jint n ) 
 { 
 PSTART ( ) ; 
 ( * env ) - > SetLongArrayRegion ( env , arr , off , n , ( jlong * ) L2A ( addr + offset ) ) ; 
 @ @ - 2449 , 7 + 2449 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3J 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ [ SII ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3SII 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jshortArray arr , jint off , jint n ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jshortArray arr , jint off , jint n ) 
 { 
 PSTART ( ) ; 
 ( * env ) - > SetShortArrayRegion ( env , arr , off , n , ( jshort * ) L2A ( addr + offset ) ) ; 
 @ @ - 2462 , 7 + 2462 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ read _ _ Lcom _ sun _ jna _ Pointer _ 2JJ _ 3S 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ ) B 
 * / 
 JNIEXPORT jbyte JNICALL Java _ com _ sun _ jna _ Native _ getByte 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) 
 { 
 jbyte res = 0 ; 
 MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; 
 @ @ - 2475 , 7 + 2475 , 7 @ @ JNIEXPORT jbyte JNICALL Java _ com _ sun _ jna _ Native _ getByte 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ ) C 
 * / 
 JNIEXPORT jchar JNICALL Java _ com _ sun _ jna _ Native _ getChar 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) 
 { 
 wchar _ t res = 0 ; 
 MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; 
 @ @ - 2516 , 7 + 2516 , 7 @ @ JNIEXPORT jobject JNICALL Java _ com _ sun _ jna _ Native _ getDirectByteBuffer _ _ JJ 
 * Signature : ( Lcom / sun / jna / Pointer ; JJJ ) Ljava / nio / ByteBuffer ; 
 * / 
 JNIEXPORT jobject JNICALL Java _ com _ sun _ jna _ Native _ getDirectByteBuffer _ _ Lcom _ sun _ jna _ Pointer _ 2JJJ 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlong length ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlong length ) 
 { 
 # ifdef NO _ NIO _ BUFFERS 
 return NULL ; 
 @ @ - 2531 , 7 + 2531 , 7 @ @ JNIEXPORT jobject JNICALL Java _ com _ sun _ jna _ Native _ getDirectByteBuffer _ _ Lcom _ sun _ 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ ) D 
 * / 
 JNIEXPORT jdouble JNICALL Java _ com _ sun _ jna _ Native _ getDouble 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) 
 { 
 jdouble res = 0 ; 
 MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; 
 @ @ - 2544 , 7 + 2544 , 7 @ @ JNIEXPORT jdouble JNICALL Java _ com _ sun _ jna _ Native _ getDouble 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ ) F 
 * / 
 JNIEXPORT jfloat JNICALL Java _ com _ sun _ jna _ Native _ getFloat 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) 
 { 
 jfloat res = 0 ; 
 MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; 
 @ @ - 2557 , 7 + 2557 , 7 @ @ JNIEXPORT jfloat JNICALL Java _ com _ sun _ jna _ Native _ getFloat 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ ) I 
 * / 
 JNIEXPORT jint JNICALL Java _ com _ sun _ jna _ Native _ getInt 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) 
 { 
 jint res = 0 ; 
 MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; 
 @ @ - 2570 , 7 + 2570 , 7 @ @ JNIEXPORT jint JNICALL Java _ com _ sun _ jna _ Native _ getInt 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ ) J 
 * / 
 JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ getLong 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) 
 { 
 jlong res = 0 ; 
 MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; 
 @ @ - 2583 , 7 + 2583 , 7 @ @ JNIEXPORT jlong JNICALL Java _ com _ sun _ jna _ Native _ getLong 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ ) S 
 * / 
 JNIEXPORT jshort JNICALL Java _ com _ sun _ jna _ Native _ getShort 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) 
 { 
 jshort res = 0 ; 
 MEMCPY ( env , & res , L2A ( addr + offset ) , sizeof ( res ) ) ; 
 @ @ - 2596 , 7 + 2596 , 7 @ @ JNIEXPORT jshort JNICALL Java _ com _ sun _ jna _ Native _ getShort 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ ) Ljava / lang / String ; 
 * / 
 JNIEXPORT jstring JNICALL Java _ com _ sun _ jna _ Native _ getWideString 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset ) 
 { 
 return newJavaString ( env , L2A ( addr + offset ) , NULL ) ; 
 } 
 @ @ - 2607 , 7 + 2607 , 7 @ @ JNIEXPORT jstring JNICALL Java _ com _ sun _ jna _ Native _ getWideString 
 * Signature : ( Lcom / sun / jna / Pointer ; JJ ) [ B 
 * / 
 JNIEXPORT jbyteArray JNICALL Java _ com _ sun _ jna _ Native _ getStringBytes 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong baseaddr , jlong offset ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong baseaddr , jlong offset ) 
 { 
 volatile jbyteArray bytes = 0 ; 
 PSTART ( ) ; 
 @ @ - 2632 , 7 + 2632 , 7 @ @ JNIEXPORT jbyteArray JNICALL Java _ com _ sun _ jna _ Native _ getStringBytes 
 * Signature : ( Lcom / sun / jna / Pointer ; JJJB ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setMemory 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlong count , jbyte value ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlong count , jbyte value ) 
 { 
 MEMSET ( env , L2A ( addr + offset ) , ( int ) value , ( size _ t ) count ) ; 
 } 
 @ @ - 2643 , 7 + 2643 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setMemory 
 * Signature : ( Lcom / sun / jna / Pointer ; JJB ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setByte 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jbyte value ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jbyte value ) 
 { 
 MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; 
 } 
 @ @ - 2654 , 7 + 2654 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setByte 
 * Signature : ( Lcom / sun / jna / Pointer ; JJC ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setChar 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jchar value ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jchar value ) 
 { 
 wchar _ t ch = value ; 
 MEMCPY ( env , L2A ( addr + offset ) , & ch , sizeof ( ch ) ) ; 
 @ @ - 2666 , 7 + 2666 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setChar 
 * Signature : ( Lcom / sun / jna / Pointer ; JJJ ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setPointer 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlong value ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlong value ) 
 { 
 void * ptr = L2A ( value ) ; 
 MEMCPY ( env , L2A ( addr + offset ) , & ptr , sizeof ( void * ) ) ; 
 @ @ - 2678 , 7 + 2678 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setPointer 
 * Signature : ( Lcom / sun / jna / Pointer ; JJD ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setDouble 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jdouble value ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jdouble value ) 
 { 
 MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; 
 } 
 @ @ - 2689 , 7 + 2689 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setDouble 
 * Signature : ( Lcom / sun / jna / Pointer ; JJF ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setFloat 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jfloat value ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jfloat value ) 
 { 
 MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; 
 } 
 @ @ - 2700 , 7 + 2700 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setFloat 
 * Signature : ( Lcom / sun / jna / Pointer ; JJI ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setInt 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jint value ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jint value ) 
 { 
 MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; 
 } 
 @ @ - 2711 , 7 + 2711 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setInt 
 * Signature : ( Lcom / sun / jna / Pointer ; JJJ ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setLong 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jlong value ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jlong value ) 
 { 
 MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; 
 } 
 @ @ - 2722 , 7 + 2722 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setLong 
 * Signature : ( Lcom / sun / jna / Pointer ; JJS ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setShort 
 - ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jshort value ) 
 + ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jshort value ) 
 { 
 MEMCPY ( env , L2A ( addr + offset ) , & value , sizeof ( value ) ) ; 
 } 
 @ @ - 2733 , 7 + 2733 , 7 @ @ JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setShort 
 * Signature : ( Lcom / sun / jna / Pointer ; JJLjava / lang / String ; ) V 
 * / 
 JNIEXPORT void JNICALL Java _ com _ sun _ jna _ Native _ setWideString 
 - ( JNIEnv * env , jclass UNUSED ( cls ) , jobject pointer , jlong addr , jlong offset , jstring value ) 
 + ( JNIEnv * env , jclass UNUSED ( cls ) , jobject UNUSED ( pointer ) , jlong addr , jlong offset , jstring value ) 
 { 
 int len = ( * env ) - > GetStringLength ( env , value ) ; 
 const void * volatile str ; 
 diff - - git a / native / dispatch . h b / native / dispatch . h 
 index 4e144cf . . 5fdfa9c 100644 
 - - - a / native / dispatch . h 
 + + + b / native / dispatch . h 
 @ @ - 30 , 6 + 30 , 7 @ @ 
 # pragma warning ( disable : 4204 ) / * structure initializer * / 
 # pragma warning ( disable : 4710 ) / * swprintf not inlined * / 
 # pragma warning ( disable : 4201 ) / * nameless struct / union ( jni _ md . h ) * / 
 + # pragma warning ( disable : 4996 ) / * deprecated functions ( strdup ) * / 
 # else 
 # include < malloc . h > 
 # endif / * _ MSC _ VER * / 
 @ @ - 152 , 6 + 153 , 8 @ @ typedef struct _ callback { 
 # define L2A ( X ) ( ( void * ) ( unsigned long ) ( X ) ) 
 # define A2L ( X ) ( ( jlong ) ( unsigned long ) ( X ) ) 
 # endif 
 + # else 
 + # include < stdio . h > 
 # endif 
 
 / * Convenience macros * / 
 diff - - git a / native / testlib . c b / native / testlib . c 
 index 6aafac2 . . 5e640c0 100644 
 - - - a / native / testlib . c 
 + + + b / native / testlib . c 
 @ @ - 876 , 7 + 876 , 7 @ @ addVarArgs ( const char * fmt , . . . ) { 
 break ; 
 case ' f ' : / / float ( promoted to ‘ double ’ when passed through ‘ . . . ’ ) 
 case ' g ' : / / double 
 - sum + = va _ arg ( ap , double ) ; 
 + sum + = ( int ) va _ arg ( ap , double ) ; 
 break ; 
 default : 
 break ; 
 diff - - git a / test / com / sun / jna / unix / XsiComplianceTest . java b / test / com / sun / jna / unix / XsiComplianceTest . java 
 deleted file mode 100644 
 index 342e2f2 . . 0000000 
 - - - a / test / com / sun / jna / unix / XsiComplianceTest . java 
 + + + / dev / null 
 @ @ - 1 , 42 + 0 , 0 @ @ 
 - package com . sun . jna . unix ; 
 - 
 - import com . sun . jna . LastErrorException ; 
 - import com . sun . jna . Library ; 
 - import com . sun . jna . Memory ; 
 - import com . sun . jna . Native ; 
 - import com . sun . jna . Pointer ; 
 - import junit . framework . TestCase ; 
 - 
 - public final class XsiComplianceTest extends TestCase { 
 - 
 - public static void main ( String [ ] args ) { 
 - junit . textui . TestRunner . run ( XsiComplianceTest . class ) ; 
 - } 
 - 
 - / * * 
 - * Regression test for https : / / github . com / java - native - access / jna / issues / 392 
 - * 
 - * Depending on the toolchain on GCC / GLIBC the wrong definition of 
 - * strerror _ r was included . 
 - * 
 - * This leads to broken messages . 
 - * / 
 - public void testErrorReporting ( ) { 
 - boolean exceptionWasCaught = false ; 
 - try { 
 - INSTANCE . read ( Integer . MAX _ VALUE , new Memory ( 1024 ) , 1024 ) ; 
 - } catch ( LastErrorException ex ) { 
 - exceptionWasCaught = true ; 
 - assertEquals ( " [ 9 ] Bad file descriptor " , ex . getMessage ( ) ) ; 
 - assertEquals ( 9 , ex . getErrorCode ( ) ) ; 
 - } 
 - assertEquals ( true , exceptionWasCaught ) ; 
 - } 
 - 
 - static POSIX INSTANCE = ( POSIX ) Native . loadLibrary ( POSIX . class ) ; 
 - 
 - interface POSIX extends Library { 
 - 
 - long read ( int fildes , Pointer buf , long nbyte ) throws LastErrorException ; 
 - } 
 - } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / jnalib / src / com / sun / jna / Structure . java b / jnalib / src / com / sun / jna / Structure . java 
 index dc09858 . . c534f9f 100644 
 - - - a / jnalib / src / com / sun / jna / Structure . java 
 + + + b / jnalib / src / com / sun / jna / Structure . java 
 @ @ - 520 , 6 + 520 , 7 @ @ public abstract class Structure { 
 | | Callback . class . isAssignableFrom ( fieldType ) 
 | | Buffer . class . isAssignableFrom ( fieldType ) 
 | | Pointer . class . isAssignableFrom ( fieldType ) 
 + | | NativeMapped . class . isAssignableFrom ( fieldType ) 
 | | fieldType . isArray ( ) ) 
 ? getField ( structField ) : null ; 
 Object result = memory . getValue ( offset , fieldType , currentValue ) ;
