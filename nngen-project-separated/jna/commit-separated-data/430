BLEU SCORE: 0.06567274736060397

TEST MSG: fix dll callbacks inline asm with msvc
GENERATED MSG: fix build on win32

TEST DIFF (one line): diff - - git a / native / callback . c b / native / callback . c <nl> index 9488bc7 . . bc4db79 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 49 , 8 + 49 , 8 @ @ extern " C " { <nl> # endif <nl> # else / * _ WIN64 * / <nl> # ifdef _ MSC _ VER <nl> - # define ASMFN ( X ) void _ _ declspec ( naked ) asmfn # # X ( ) { \ <nl> - _ _ asm jmp fn [ X ] \ <nl> + # define ASMFN ( X ) void _ _ declspec ( naked ) asmfn # # X ( ) { \ <nl> + _ _ asm jmp DWORD PTR fn [ 4 * X ] \ <nl> } <nl> # else <nl> # define ASMFN ( X ) extern void asmfn # # X ( ) ; asm ( " . globl _ asmfn " # X " \ n \
NEAREST DIFF (one line): diff - - git a / ANDROID . md b / ANDROID . md <nl> new file mode 100644 <nl> index 0000000 . . 73ac9fe <nl> - - - / dev / null <nl> + + + b / ANDROID . md <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + * Add Android SDK / NDK tools into PATH ( used by native / Makefile ) <nl> + * Set environment variable NDK _ PLATFORM ( used by native / Makefile ) <nl> + * Build using : ant - Dos . prefix = android - arm dist <nl> + * Tests must be run on the target platform , not the build platform <nl> + * Add dist / jna . jar and / or dist / platform . jar to your application , as needed . <nl> + * If you ' re using android - maven - plugin , jna . jar can be used as - is ( native libraries will be automatically copied into your project ) . <nl> + * If you ' re using Google ' s Eclipse plugin then you must manually remove libjnidispatch . so from jna . jar / lib / armeabi and add it into your project ' s " libs / armeabi " directory . <nl> + * See http : / / code . google . com / p / android / issues / detail ? id = 17861 and http : / / developer . android . com / guide / practices / jni . html for more information . <nl> + <nl> + <nl> diff - - git a / CHANGES . md b / CHANGES . md <nl> index 47f7162 . . 56e47c5 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 5 , 6 + 5 , 10 @ @ Features <nl> - - - - - - - - <nl> * ` Structure . getFieldOrder ( ) ` supersedes ` Structure . setFieldOrder ( ) ` and is now required - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Search ~ / Library / Frameworks and / Library / Frameworks on OSX - [ @ shaneholloway ] ( https : / / github . com / shaneholloway ) . <nl> + * Automatic cleanup of native threads ( based on suggestions from neil smith ) - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Add android - arm target ( thanks to ochafik for initial work ) . <nl> + * Add ` jna . tmpdir ` to override temporary JNA storage location - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Add EXTRA _ MAKE _ OPTS ant property to override make variables - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / README . md b / README . md <nl> index 3ddb699 . . 9d1c1b8 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 87 , 6 + 87 , 17 @ @ Primary Documentation ( JavaDoc ) <nl> <nl> The definitive JNA reference is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 3 . 4 . 1 / javadoc / ) . <nl> <nl> + Publishing to maven central <nl> + = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> + One time : Set up your gpg keys as described here https : / / docs . sonatype . org / display / Repository / How + To + Generate + PGP + Signatures + With + Maven <nl> + One time : Make sure you have a settings . xml as described at the bottom of 7a1 at https : / / docs . sonatype . org / display / Repository / Sonatype + OSS + Maven + Repository + Usage + Guide # SonatypeOSSMavenRepositoryUsageGuide - 7a . 1 . POMandsettingsconfig <nl> + <nl> + Every time : <nl> + maybe update version numbers in pom . xml <nl> + ant stage # Uploads current checkout to maven central <nl> + Follow steps from " release it " at https : / / docs . sonatype . org / display / Repository / Sonatype + OSS + Maven + Repository + Usage + Guide # SonatypeOSSMavenRepositoryUsageGuide - 8a . ReleaseIt <nl> + <nl> + <nl> Contributing <nl> = = = = = = = = = = = = <nl> <nl> diff - - git a / build . xml b / build . xml <nl> index 3c2bd69 . . 4ed1567 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 9 , 7 + 9 , 8 @ @ <nl> support it ) . <nl> <nl> Cross - compile by specifying - Dos . prefix = { name - arch } to ant <nl> - ( cross - compile currently only configured / tested on w32ce - arm ) <nl> + ( cross - compile currently only configured / tested on w32ce - arm and <nl> + android - arm ) <nl> <nl> Use - Dskip - native to skip building native parts . <nl> Use - Dheadless to run tests headless <nl> @ @ - 123 , 16 + 124 , 26 @ @ <nl> < condition property = " jar . omitted " value = " * * / * jnidispatch * " else = " jnilib - included " > <nl> < isset property = " omit - jnilib " / > <nl> < / condition > <nl> + < condition property = " cross - compile " value = " true " > <nl> + < isset property = " os . prefix " / > <nl> + < / condition > <nl> + < ! - - Keep cross - compiled natives separate from normal builds - - > <nl> + < condition property = " native . subdir " value = " native - $ { os . prefix } " else = " native " > <nl> + < isset property = " cross - compile " / > <nl> + < / condition > <nl> < condition property = " vm . arch " value = " - d64 " else = " " > <nl> - < or > <nl> - < equals arg1 = " $ { sun . arch . data . model } " arg2 = " 64 " trim = " true " / > <nl> - < equals arg1 = " $ { com . ibm . vm . bitmode } " arg2 = " 64 " trim = " true " / > <nl> - < os arch = " x86 _ 64 " / > <nl> - < os arch = " amd64 " / > <nl> - < os arch = " sparcv9 " / > <nl> - < os arch = " ppc64 " / > <nl> - < os arch = " ia64 " / > <nl> - < / or > <nl> + < and > <nl> + < not > < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " trim = " true " / > < / not > <nl> + < or > <nl> + < equals arg1 = " $ { sun . arch . data . model } " arg2 = " 64 " trim = " true " / > <nl> + < equals arg1 = " $ { com . ibm . vm . bitmode } " arg2 = " 64 " trim = " true " / > <nl> + < os arch = " x86 _ 64 " / > <nl> + < os arch = " amd64 " / > <nl> + < os arch = " sparcv9 " / > <nl> + < os arch = " ppc64 " / > <nl> + < os arch = " ia64 " / > <nl> + < / or > <nl> + < / and > <nl> < / condition > <nl> < condition property = " ld . preload " value = " LD _ PRELOAD _ 64 " else = " LD _ PRELOAD " > <nl> < and > <nl> @ @ - 195 , 7 + 206 , 7 @ @ <nl> < not > < equals arg1 = " $ { libjsig } " arg2 = " " / > < / not > <nl> < / condition > <nl> < property name = " native . jar " value = " $ { os . prefix } . jar " / > <nl> - < property name = " build . native " location = " $ { build } / native " / > <nl> + < property name = " build . native " location = " $ { build } / $ { native . subdir } " / > <nl> < property name = " md5 . file " location = " $ { build . native } / jni . checksum " / > <nl> <nl> < mkdir dir = " $ { build } " / > <nl> @ @ - 211 , 6 + 222 , 8 @ @ <nl> < echo > java . home = $ { java . home } < / echo > <nl> < echo > java . library . path = $ { java . library . path } < / echo > <nl> < echo > os . prefix = $ { os . prefix } < / echo > <nl> + < echo > build = $ { build } < / echo > <nl> + < echo > build . native = $ { build . native } < / echo > <nl> <nl> < / target > <nl> <nl> @ @ - 251 , 6 + 264 , 7 @ @ <nl> < uptodate property = " - jar " targetfile = " $ { build } / $ { jar } " > <nl> < srcfiles dir = " $ { classes } " > <nl> < patternset id = " jar - compiled " > <nl> + < include name = " lib / armeabi / * " / > <nl> < include name = " com / sun / jna / * " / > <nl> < include name = " com / sun / jna / * * / * " / > <nl> < / patternset > <nl> @ @ - 488 , 6 + 502 , 7 @ @ osname = macos <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - amd64 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - sparc . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - sparcv9 . jar " overwrite = " true " / > <nl> + < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / android - arm . jar " overwrite = " true " / > <nl> < delete failOnError = " false " includeEmptyDirs = " true " > <nl> < fileset dir = " $ { build . native } " includes = " * . o , * jnidispatch * " / > <nl> < / delete > <nl> @ @ - 533 , 12 + 548 , 20 @ @ osname = macos <nl> replace = " CHECKSUM = $ { jni . md5 } $ { comment } " <nl> file = " native / Makefile " byline = " true " / > <nl> < ! - - Handle cross - compilation - - > <nl> - < condition property = " make . OS " value = " OS = w32ce " else = " IGNORE = " > <nl> + < condition property = " make . OS " value = " OS = w32ce " > <nl> < equals arg1 = " $ { os . prefix } " arg2 = " w32ce - arm " / > <nl> < / condition > <nl> + < condition property = " make . OS " value = " OS = android " > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > <nl> + < / condition > <nl> + < property name = " make . OS " value = " IGNORE = " / > <nl> + < ! - - Ensure Makefile ARCH property properly set - - > <nl> < condition property = " ARCH " value = " arm " > <nl> < equals arg1 = " $ { os . prefix } " arg2 = " w32ce - arm " / > <nl> < / condition > <nl> + < condition property = " ARCH " value = " arm " > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > <nl> + < / condition > <nl> < condition property = " ARCH " value = " ppc " > <nl> < equals arg1 = " $ { os . prefix } " arg2 = " aix - ppc " / > <nl> < / condition > <nl> @ @ - 559 , 19 + 582 , 28 @ @ osname = macos <nl> < / condition > <nl> < condition property = " make . SDKROOT " <nl> 	 value = " SDKROOT = / Developer / SDKs / MacOSX10 . 6 . sdk " > <nl> - < available file = " / Developer / SDKs / MacOSX10 . 6 . sdk " / > <nl> + < and > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " darwin " trim = " true " / > <nl> + < available file = " / Developer / SDKs / MacOSX10 . 6 . sdk " / > <nl> + < / and > <nl> < / condition > <nl> < condition property = " make . SDKROOT " <nl> 	 value = " SDKROOT = / Developer / SDKs / MacOSX10 . 5 . sdk " > <nl> - < available file = " / Developer / SDKs / MacOSX10 . 5 . sdk " / > <nl> + < and > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " darwin " trim = " true " / > <nl> + < available file = " / Developer / SDKs / MacOSX10 . 5 . sdk " / > <nl> + < / and > <nl> < / condition > <nl> < condition property = " make . SDKROOT " <nl> 	 value = " SDKROOT = / Developer / SDKs / MacOSX10 . 4u . sdk " else = " IGNORE = " > <nl> - < available file = " / Developer / SDKs / MacOSX10 . 4u . sdk " / > <nl> + < and > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " darwin " trim = " true " / > <nl> + < available file = " / Developer / SDKs / MacOSX10 . 4u . sdk " / > <nl> + < / and > <nl> < / condition > <nl> < ! - - Windows ' drive letters and spaces in absolute paths wreak havoc on <nl> make - - > <nl> - < condition property = " make . BUILD " value = " BUILD = . . / $ { build } / native " else = " BUILD = $ { build . native } " > <nl> + < condition property = " make . BUILD " value = " BUILD = . . / $ { build } / $ { native . subdir } " else = " BUILD = $ { build . native } " > <nl> < os family = " windows " / > <nl> < / condition > <nl> < condition property = " make . PATH " value = " PATH = / opt / csw / bin : / usr / sfw / bin : / usr / bin : / usr / ccs / bin " else = " IGNORE = " > <nl> @ @ - 591 , 6 + 623 , 14 @ @ osname = macos <nl> < os name = " AIX " / > <nl> < / or > <nl> < / condition > <nl> + < ! - - Allow explicit override of make variables - - > <nl> + < condition property = " make . OPTS " value = " $ { EXTRA _ MAKE _ OPTS } " else = " IGNORE = " > <nl> + < isset property = " EXTRA _ MAKE _ OPTS " / > <nl> + < / condition > <nl> + < ! - - Native resource path within jna . jar - - > <nl> + < condition property = " native . path " value = " lib / armeabi " else = " com / sun / jna / $ { os . prefix } " > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > <nl> + < / condition > <nl> <nl> < ! - - Default make program - - > <nl> < property name = " make " value = " make " / > <nl> @ @ - 607 , 16 + 647 , 17 @ @ osname = macos <nl> < arg value = " $ { make . ARCH } " / > <nl> < arg value = " $ { make . PATH } " / > <nl> < arg value = " $ { make . OS } " / > <nl> + < arg line = " $ { make . OPTS } " / > <nl> < arg value = " JNA _ JNI _ VERSION = $ { jni . version } " / > <nl> < arg value = " CHECKSUM = $ { jni . md5 } " / > <nl> < / exec > <nl> - < mkdir dir = " $ { classes } / com / sun / jna / $ { os . prefix } " / > <nl> - < copy todir = " $ { classes } / com / sun / jna / $ { os . prefix } " > <nl> + < mkdir dir = " $ { classes } / $ { native . path } " / > <nl> + < copy todir = " $ { classes } / $ { native . path } " > <nl> < fileset dir = " $ { build . native } " <nl> includes = " jnidispatch . dll , libjnidispatch . * " / > <nl> < / copy > <nl> - < mkdir dir = " $ { eclipse . classes } / com / sun / jna / $ { os . prefix } " / > <nl> - < copy todir = " $ { eclipse . classes } / com / sun / jna / $ { os . prefix } " <nl> + < mkdir dir = " $ { eclipse . classes } / $ { native . path } " / > <nl> + < copy todir = " $ { eclipse . classes } / $ { native . path } " <nl> failonerror = " false " > <nl> < fileset dir = " $ { build . native } " <nl> includes = " jnidispatch . dll , libjnidispatch . * " / > <nl> @ @ - 666 , 8 + 707 , 15 @ @ osname = macos <nl> < / signjar > <nl> < / target > <nl> <nl> + < target name = " android - test - setup " depends = " compile - tests " <nl> + description = " Configure tests for running on an Android emulator " > <nl> + < ! - - ' shared ' should be the path to a folder mounted as the mobile <nl> + device / simulator storage card . - - > <nl> + < property name = " shared " value = " shared " / > <nl> + < / target > <nl> + <nl> < target name = " wince - test - setup " depends = " compile - tests " <nl> - description = " Configure tests for running on a Windows Mobile device " > <nl> + description = " Configure tests for running on the WM emulator " > <nl> < ! - - ' shared ' should be the path to a folder mounted as the mobile <nl> device / simulator storage card . - - > <nl> < property name = " shared " value = " shared " / > <nl> @ @ - 677 , 16 + 725 , 16 @ @ osname = macos <nl> < zipfileset src = " $ { build } / $ { testjar } " / > <nl> < / jar > <nl> < copy todir = " $ { shared } " file = " $ { build } / $ { jar } " / > <nl> - < copy todir = " $ { shared } " file = " $ { build } / native / jnidispatch . dll " / > <nl> - < copy todir = " $ { shared } " file = " $ { build } / native / testlib . dll " / > <nl> - < copy todir = " $ { shared } " file = " $ { build } / native / testlib2 . dll " / > <nl> + < copy todir = " $ { shared } " file = " $ { build . native } / jnidispatch . dll " / > <nl> + < copy todir = " $ { shared } " file = " $ { build . native } / testlib . dll " / > <nl> + < copy todir = " $ { shared } " file = " $ { build . native } / testlib2 . dll " / > <nl> < copy todir = " $ { shared } " file = " w32ce - test . lnk " / > <nl> < chmod file = " $ { shared } / * . dll " perm = " + x " / > <nl> < / target > <nl> <nl> < ! - - When running tests from an IDE , be sure to set jna . library . path - - > <nl> < ! - - to where the test library ( testlib ) is found . - - > <nl> - < target name = " test " depends = " jar , compile - tests " <nl> + < target name = " test " depends = " jar , compile - tests " unless = " cross - compile " <nl> description = " Run all unit tests " > <nl> < property name = " test . fork " value = " yes " / > <nl> < property name = " reports . junit " location = " $ { reports } / junit " / > <nl> @ @ - 838 , 15 + 886 , 13 @ @ osname = macos <nl> < target name = " dist " depends = " jar , javadoc , contrib - jars , compile - tests , native " <nl> description = " Build distribution files " > <nl> < copy todir = " $ { dist } " > <nl> + < fileset dir = " $ { build } " includes = " $ { jar } " / > <nl> + < fileset dir = " $ { contrib } / platform / dist " includes = " platform . jar " / > <nl> < fileset dir = " $ { lib . native } " > <nl> < include name = " * . jar " / > <nl> < exclude name = " out - of - date . jar " / > <nl> < / fileset > <nl> < / copy > <nl> - < copy todir = " $ { dist } " > <nl> - < fileset dir = " $ { build } " includes = " $ { jar } " / > <nl> - < fileset dir = " $ { contrib } / platform / dist " includes = " platform . jar " / > <nl> - < / copy > <nl> < copy todir = " $ { dist } / jnacontrib " flatten = " true " > <nl> < fileset dir = " $ { contrib } " > <nl> 	 < include name = " * * / build / demo - * . jar " / > <nl> diff - - git a / dist / android - arm . jar b / dist / android - arm . jar <nl> new file mode 100644 <nl> index 0000000 . . b110945 <nl> Binary files / dev / null and b / dist / android - arm . jar differ <nl> diff - - git a / dist / jna . jar b / dist / jna . jar <nl> index 9f96e4b . . dead5dc 100644 <nl> Binary files a / dist / jna . jar and b / dist / jna . jar differ <nl> diff - - git a / lib / native / android - arm . jar b / lib / native / android - arm . jar <nl> new file mode 100644 <nl> index 0000000 . . 0b78a49 <nl> Binary files / dev / null and b / lib / native / android - arm . jar differ <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index 10f9653 . . a04eba9 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 16 , 14 + 16 , 21 @ @ <nl> # Solaris ( i386 / amd64 / sparc / sparcv9 ) <nl> # AIX ( ppc / ppc64 ) <nl> # FreeBSD / OpenBSD / NetBSD ( i386 / amd64 ) <nl> + # Android ( arm ) <nl> # <nl> # Built , but with outstanding bugs ( not necessarily within JNA ) : <nl> # <nl> # Linux ( ppc64 / ia64 ) <nl> # <nl> # The w32ce build requires cegcc and phoneME for cross - compilation ; if these <nl> - # tools are available on the path than " ant - Dos . prefix = w32ce - arm " should <nl> + # tools are available on the path then " ant - Dos . prefix = w32ce - arm " should <nl> # result in a proper build . <nl> + # <nl> + # The android build requires the android SDK + NDK for cross - compilation ; <nl> + # make the tools available on the path and compile with <nl> + # " ant - Dos . prefix = android - arm " . Put the NDK tools in the path and adjust <nl> + # NDK _ PLATFORM below or set it in your environment . <nl> + # <nl> <nl> # Systems which support POSIX signals may be able to support VM crash <nl> # protection simply by defining HAVE _ PROTECTION . This option has been only <nl> @ @ - 97 , 6 + 104 , 25 @ @ endif <nl> STRIP = strip - x <nl> # end defaults <nl> <nl> + # Android build ( cross - compile ) requires the android SDK + NDK . <nl> + # Ensure the following tools are in your path and adjust NDK _ PLATFORM as needed <nl> + ifeq ( $ ( OS ) , android ) <nl> + CC = arm - linux - androideabi - gcc <nl> + CPP = arm - linux - androideabi - cpp <nl> + LD = arm - linux - androideabi - gcc <nl> + RANLIB = arm - linux - androideabi - ranlib <nl> + STRIP = arm - linux - androideabi - strip - x <nl> + CDEFINES = - DNO _ JAWT - DNO _ WEAK _ GLOBALS - DFFI _ MMAP _ EXEC _ WRIT = 1 - DFFI _ MMAP _ EXEC _ SELINUX = 0 <nl> + COPT + = - fpic - mthumb - interwork - ffunction - sections - funwind - tables - fstack - protector - fno - short - enums - march = armv5te - mtune = xscale - msoft - float <nl> + NDK _ PLATFORM ? = / Developer / Applications / android - ndk - r7c / platforms / android - 14 <nl> + JAVA _ INCLUDES = <nl> + CINCLUDES + = - I " $ ( NDK _ PLATFORM ) / arch - arm / usr / include " # - I / usr / include <nl> + LIBS = - nostdlib - L " $ ( NDK _ PLATFORM ) / arch - arm / usr / lib / " - lgcc - lc - ldl - lm <nl> + LDFLAGS + = - Wl , - shared , - Bsymbolic <nl> + FFI _ ENV = CPP = " $ ( CPP ) " CC = " $ ( CC ) " CFLAGS = " $ ( COPT ) $ ( CDEBUG ) $ ( CINCLUDES ) " CPPFLAGS = " $ ( CDEFINES ) $ ( CINCLUDES ) " LIBS = " $ ( LIBS ) " RANLIB = " $ ( RANLIB ) " <nl> + FFI _ CONFIG = - - enable - static - - disable - shared - - with - pic = yes - - host = arm - linux - eabi <nl> + endif <nl> + <nl> # W32CE build requires cegcc cross - compiler and phoneME JavaME implementation <nl> # cegcc : http : / / sf . net / projects / cegcc <nl> # phoneme : http : / / davy . preuveneers . net / <nl> @ @ - 292 , 7 + 318 , 7 @ @ endif <nl> # Unfortunately , we have to use different libffi include files depending on <nl> # the target , so we can ' t do a simple universal build on darwin . Do <nl> # separate builds , then merge the results . <nl> - $ ( BUILD ) / % . o : % . c dispatch . h $ ( FFI _ LIB ) <nl> + $ ( BUILD ) / % . o : % . c dispatch . h protect . h $ ( FFI _ LIB ) <nl> 	 @ mkdir - p $ ( BUILD ) <nl> ifneq ( $ ( SDKROOT ) , ) <nl> 	 $ ( CC ) - arch $ ( ARCH ) $ ( CFLAGS ) - c $ < - o $ @ . $ ( ARCH ) <nl> @ @ - 330 , 7 + 356 , 7 @ @ else <nl> TESTDEP = $ ( TESTLIB ) <nl> endif <nl> $ ( TESTLIB2 ) : $ ( BUILD ) / testlib2 . o <nl> - 	 $ ( LD ) $ ( LDFLAGS ) $ < $ ( TESTDEP ) <nl> + 	 $ ( LD ) $ ( LDFLAGS ) $ < $ ( TESTDEP ) $ ( LIBS ) <nl> <nl> ifneq ( $ ( DYNAMIC _ LIBFFI ) , true ) <nl> $ ( FFI _ LIB ) : <nl> diff - - git a / native / callback . c b / native / callback . c <nl> index 00300b3 . . 8eba860 100644 <nl> - - - a / native / callback . c <nl> + + + b / native / callback . c <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * Lesser General Public License for more details . <nl> * / <nl> <nl> + # include < stdio . h > <nl> # include < stdlib . h > <nl> # include < stdarg . h > <nl> # include < string . h > <nl> @ @ - 188 , 6 + 189 , 7 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> if ( calling _ convention = = CALLCONV _ STDCALL ) { <nl> abi = FFI _ STDCALL ; <nl> } <nl> + / / Calling into Java on win32 * always * uses stdcall <nl> java _ abi = FFI _ STDCALL ; <nl> # endif / / _ WIN32 <nl> <nl> @ @ - 216 , 16 + 218 , 17 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , <nl> rtype = ' * ' ; <nl> } <nl> switch ( rtype ) { <nl> - case ' V ' : cb - > fptr = ( * env ) - > CallVoidMethod ; break ; <nl> - case ' Z ' : cb - > fptr = ( * env ) - > CallBooleanMethod ; break ; <nl> - case ' B ' : cb - > fptr = ( * env ) - > CallByteMethod ; break ; <nl> - case ' S ' : cb - > fptr = ( * env ) - > CallShortMethod ; break ; <nl> - case ' C ' : cb - > fptr = ( * env ) - > CallCharMethod ; break ; <nl> - case ' I ' : cb - > fptr = ( * env ) - > CallIntMethod ; break ; <nl> - case ' J ' : cb - > fptr = ( * env ) - > CallLongMethod ; break ; <nl> - case ' F ' : cb - > fptr = ( * env ) - > CallFloatMethod ; break ; <nl> - case ' D ' : cb - > fptr = ( * env ) - > CallDoubleMethod ; break ; <nl> - default : cb - > fptr = ( * env ) - > CallObjectMethod ; break ; <nl> + # define OFFSETOF ( ENV , METHOD ) ( ( size _ t ) ( ( char * ) & ( * ( ENV ) ) - > METHOD - ( char * ) ( * ( ENV ) ) ) ) <nl> + case ' V ' : cb - > fptr _ offset = OFFSETOF ( env , CallVoidMethod ) ; break ; <nl> + case ' Z ' : cb - > fptr _ offset = OFFSETOF ( env , CallBooleanMethod ) ; break ; <nl> + case ' B ' : cb - > fptr _ offset = OFFSETOF ( env , CallByteMethod ) ; break ; <nl> + case ' S ' : cb - > fptr _ offset = OFFSETOF ( env , CallShortMethod ) ; break ; <nl> + case ' C ' : cb - > fptr _ offset = OFFSETOF ( env , CallCharMethod ) ; break ; <nl> + case ' I ' : cb - > fptr _ offset = OFFSETOF ( env , CallIntMethod ) ; break ; <nl> + case ' J ' : cb - > fptr _ offset = OFFSETOF ( env , CallLongMethod ) ; break ; <nl> + case ' F ' : cb - > fptr _ offset = OFFSETOF ( env , CallFloatMethod ) ; break ; <nl> + case ' D ' : cb - > fptr _ offset = OFFSETOF ( env , CallDoubleMethod ) ; break ; <nl> + default : cb - > fptr _ offset = OFFSETOF ( env , CallObjectMethod ) ; break ; <nl> } <nl> status = ffi _ prep _ cif ( & cb - > java _ cif , java _ abi , argc + 3 , java _ ffi _ rtype , cb - > java _ arg _ types ) ; <nl> if ( ! ffi _ error ( env , " callback setup ( 2 ) " , status ) ) { <nl> @ @ - 384 , 7 + 387 , 9 @ @ callback _ invoke ( JNIEnv * env , callback * cb , ffi _ cif * cif , void * resp , void * * cbar <nl> else if ( cb - > cif . rtype - > size > cif - > rtype - > size ) { <nl> resp = alloca ( cb - > cif . rtype - > size ) ; <nl> } <nl> - ffi _ call ( & cb - > java _ cif , FFI _ FN ( cb - > fptr ) , resp , args ) ; <nl> + # define FPTR ( ENV , OFFSET ) ( * ( void * * ) ( ( char * ) ( * ( ENV ) ) + OFFSET ) ) <nl> + # define JNI _ FN ( X ) ( ( void ( JNICALL * ) ( void ) ) ( X ) ) <nl> + ffi _ call ( & cb - > java _ cif , JNI _ FN ( FPTR ( env , cb - > fptr _ offset ) ) , resp , args ) ; <nl> if ( ( * env ) - > ExceptionCheck ( env ) ) { <nl> jthrowable throwable = ( * env ) - > ExceptionOccurred ( env ) ; <nl> ( * env ) - > ExceptionClear ( env ) ; <nl> @ @ - 466 , 6 + 471 , 67 @ @ callback _ invoke ( JNIEnv * env , callback * cb , ffi _ cif * cif , void * resp , void * * cbar <nl> } <nl> } <nl> <nl> + / / Handle automatic thread cleanup <nl> + static void detach _ thread ( void * data ) { <nl> + if ( data ! = NULL ) { <nl> + JavaVM * jvm = ( JavaVM * ) data ; <nl> + ( * jvm ) - > DetachCurrentThread ( jvm ) ; <nl> + } <nl> + } <nl> + <nl> + # ifdef _ WIN32 <nl> + <nl> + static DWORD dwTlsIndex ; <nl> + BOOL WINAPI DllMain ( HINSTANCE hDLL , DWORD fdwReason , LPVOID lpvReserved ) { <nl> + switch ( fdwReason ) { <nl> + case DLL _ PROCESS _ ATTACH : <nl> + dwTlsIndex = TlsAlloc ( ) ; <nl> + if ( dwTlsIndex = = TLS _ OUT _ OF _ INDEXES ) { <nl> + return FALSE ; <nl> + } <nl> + break ; <nl> + case DLL _ PROCESS _ DETACH : <nl> + TlsFree ( dwTlsIndex ) ; <nl> + break ; <nl> + case DLL _ THREAD _ ATTACH : <nl> + break ; <nl> + case DLL _ THREAD _ DETACH : { <nl> + detach _ thread ( TlsGetValue ( dwTlsIndex ) ) ; <nl> + break ; <nl> + } <nl> + default : <nl> + break ; <nl> + } <nl> + return TRUE ; <nl> + } <nl> + <nl> + # else <nl> + <nl> + # include < pthread . h > <nl> + <nl> + static pthread _ key _ t key ; <nl> + static void make _ key ( ) { <nl> + pthread _ key _ create ( & key , detach _ thread ) ; <nl> + } <nl> + <nl> + # endif <nl> + <nl> + / * * Set up to detach the thread when it exits , or clear any handlers if the <nl> + argument is NULL . <nl> + * / <nl> + static void <nl> + jvm _ detach _ on _ exit ( JavaVM * jvm ) { <nl> + # ifdef _ WIN32 <nl> + TlsSetValue ( dwTlsIndex , jvm ) ; <nl> + # else <nl> + static pthread _ once _ t key _ once = PTHREAD _ ONCE _ INIT ; <nl> + pthread _ once ( & key _ once , make _ key ) ; <nl> + if ( ! jvm | | pthread _ getspecific ( key ) = = NULL ) { <nl> + pthread _ setspecific ( key , jvm ) ; <nl> + } <nl> + # endif <nl> + } <nl> + <nl> static void <nl> callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> callback * cb = ( ( callback * ) user _ data ) ; <nl> @ @ - 528 , 6 + 594 , 10 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { <nl> <nl> if ( detach ) { <nl> ( * jvm ) - > DetachCurrentThread ( jvm ) ; <nl> + jvm _ detach _ on _ exit ( NULL ) ; <nl> + } <nl> + else if ( ! was _ attached ) { <nl> + jvm _ detach _ on _ exit ( jvm ) ; <nl> } <nl> } <nl> <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 4172461 . . 8c4c6e4 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 2 , 7 + 2 , 7 @ @ <nl> * @ ( # ) dispatch . c 1 . 9 98 / 03 / 22 <nl> * <nl> * Copyright ( c ) 1998 Sun Microsystems , Inc . All Rights Reserved . <nl> - * Copyright ( c ) 2007 - 2011 Timothy Wall . All Rights Reserved . <nl> + * Copyright ( c ) 2007 - 2012 Timothy Wall . All Rights Reserved . <nl> * Copyright ( c ) 2007 Wayne Meissner . All Rights Reserved . <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> @ @ - 16 , 11 + 16 , 6 @ @ <nl> * Lesser General Public License for more details . <nl> * / <nl> <nl> - / * <nl> - * JNI native methods supporting the infrastructure for shared <nl> - * dispatchers . <nl> - * / <nl> - <nl> # if defined ( _ WIN32 ) <nl> # ifdef _ MSC _ VER <nl> # pragma warning ( disable : 4201 ) / * nameless struct / union ( jni _ md . h ) * / <nl> @ @ - 2989 , 8 + 2984 , 8 @ @ Java _ com _ sun _ jna _ Native _ getPreserveLastError ( JNIEnv * UNUSED ( env ) , jclass UNUSED ( <nl> <nl> JNIEXPORT void JNICALL <nl> Java _ com _ sun _ jna _ Native _ setLastError ( JNIEnv * env , jclass UNUSED ( classp ) , jint code ) { <nl> - SET _ LAST _ ERROR ( code ) ; <nl> update _ last _ error ( env , code ) ; <nl> + SET _ LAST _ ERROR ( code ) ; <nl> } <nl> <nl> JNIEXPORT jstring JNICALL <nl> diff - - git a / native / dispatch . h b / native / dispatch . h <nl> index b3d574f . . b766c56 100644 <nl> - - - a / native / dispatch . h <nl> + + + b / native / dispatch . h <nl> @ @ - 110 , 7 + 110 , 7 @ @ typedef struct _ callback { <nl> jmethodID methodID ; <nl> char * arg _ jtypes ; <nl> jboolean direct ; <nl> - void * fptr ; <nl> + size _ t fptr _ offset ; <nl> void * saved _ x _ closure ; <nl> } callback ; <nl> <nl> @ @ - 204 , 6 + 204 , 20 @ @ extern jobject initializeThread ( callback * , AttachOptions * ) ; <nl> extern int lastError ( ) ; <nl> extern void setLastError ( int err ) ; <nl> <nl> + # ifdef NO _ WEAK _ GLOBALS <nl> + # define NewWeakGlobalRef NewGlobalRef <nl> + # define DeleteWeakGlobalRef DeleteGlobalRef <nl> + # endif <nl> + <nl> + / * Native memory fault protection * / <nl> + # ifdef HAVE _ PROTECTION <nl> + # define PROTECT is _ protected ( ) <nl> + # endif <nl> + # include " protect . h " <nl> + # define ON _ ERROR ( ) throwByName ( env , EError , " Invalid memory access " ) <nl> + # define PSTART ( ) PROTECTED _ START ( ) <nl> + # define PEND ( ) PROTECTED _ END ( ON _ ERROR ( ) ) <nl> + <nl> # ifdef _ _ cplusplus <nl> } <nl> # endif <nl> diff - - git a / native / testlib . c b / native / testlib . c <nl> index 9288000 . . d7e0d18 100644 <nl> - - - a / native / testlib . c <nl> + + + b / native / testlib . c <nl> @ @ - 45 , 6 + 45 , 7 @ @ typedef _ _ int64 int64 _ t ; <nl> # define THREAD _ EXIT ( ) ExitThread ( 0 ) <nl> # define THREAD _ FUNC ( FN , ARG ) DWORD WINAPI FN ( LPVOID ARG ) <nl> # define THREAD _ CURRENT ( ) GetCurrentThreadId ( ) <nl> + # define THREAD _ RETURN return 0 <nl> # else <nl> # define EXPORT <nl> # include < unistd . h > <nl> @ @ - 54 , 6 + 55 , 7 @ @ typedef _ _ int64 int64 _ t ; <nl> # define THREAD _ CREATE ( TP , FN , DATA ) pthread _ create ( TP , NULL , FN , DATA ) <nl> # define THREAD _ EXIT ( ) pthread _ exit ( NULL ) <nl> # define THREAD _ FUNC ( FN , ARG ) void * FN ( void * ARG ) <nl> + # define THREAD _ RETURN return NULL <nl> # define THREAD _ CURRENT ( ) pthread _ self ( ) <nl> # endif <nl> <nl> @ @ - 645 , 6 + 647 , 7 @ @ static THREAD _ FUNC ( thread _ function , arg ) { <nl> SLEEP ( td . sleep _ time ) ; <nl> } <nl> THREAD _ EXIT ( ) ; <nl> + THREAD _ RETURN ; <nl> } <nl> <nl> static thread _ data data ; <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index 4b73f83 . . e38f20b 100755 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 591 , 9 + 591 , 16 @ @ public final class Native { <nl> arch = " ppc64 " ; <nl> } <nl> switch ( osType ) { <nl> + case Platform . ANDROID : <nl> + if ( arch . startsWith ( " arm " ) ) { <nl> + arch = " arm " ; <nl> + } <nl> + osPrefix = " android - " + arch ; <nl> + break ; <nl> case Platform . WINDOWS : <nl> - if ( " i386 " . equals ( arch ) ) <nl> + if ( " i386 " . equals ( arch ) ) { <nl> arch = " x86 " ; <nl> + } <nl> osPrefix = " win32 - " + arch ; <nl> break ; <nl> case Platform . WINDOWSCE : <nl> @ @ - 682 , 6 + 689 , 10 @ @ public final class Native { <nl> } <nl> } <nl> } <nl> + if ( Platform . isAndroid ( ) ) { <nl> + / / Native libraries on android must be bundled with the APK <nl> + System . setProperty ( " jna . nounpack " , " true " ) ; <nl> + } <nl> try { <nl> if ( ! Boolean . getBoolean ( " jna . nosys " ) ) { <nl> System . loadLibrary ( libName ) ; <nl> @ @ - 720 , 7 + 731 , 7 @ @ public final class Native { <nl> url = Native . class . getResource ( resourceName ) ; <nl> } <nl> if ( url = = null ) { <nl> - throw new UnsatisfiedLinkError ( " jnidispatch ( " + resourceName <nl> + throw new UnsatisfiedLinkError ( " JNA native support ( " + resourceName <nl> + " ) not found in resource path " ) ; <nl> } <nl> <nl> @ @ - 814 , 6 + 825 , 8 @ @ public final class Native { <nl> public static native void setLastError ( int code ) ; <nl> <nl> / * * Update the last error value ( called from native code ) . * / <nl> + / / This has to be called immediately after a native call to ensure that <nl> + / / subsequent VM operations don ' t overwrite the last error value <nl> static void updateLastError ( int e ) { <nl> lastError . set ( new Integer ( e ) ) ; <nl> } <nl> @ @ - 906 , 11 + 919 , 30 @ @ public final class Native { <nl> catch ( IOException e ) { e . printStackTrace ( ) ; } <nl> } <nl> <nl> + / * * Obtain a directory suitable for writing JNA - specific temporary files . <nl> + Override with < code > jna . tmpdir < / code > <nl> + * / <nl> static File getTempDir ( ) { <nl> - File tmp = new File ( System . getProperty ( " java . io . tmpdir " ) ) ; <nl> - File jnatmp = new File ( tmp , " jna - " + System . getProperty ( " user . name " ) ) ; <nl> - jnatmp . mkdirs ( ) ; <nl> - return jnatmp . exists ( ) ? jnatmp : tmp ; <nl> + File jnatmp ; <nl> + String prop = System . getProperty ( " jna . tmpdir " ) ; <nl> + if ( prop ! = null ) { <nl> + jnatmp = new File ( prop ) ; <nl> + } <nl> + else { <nl> + File tmp = new File ( System . getProperty ( " java . io . tmpdir " ) ) ; <nl> + jnatmp = new File ( tmp , " jna - " + System . getProperty ( " user . name " ) ) ; <nl> + jnatmp . mkdirs ( ) ; <nl> + if ( ! jnatmp . exists ( ) | | ! jnatmp . canWrite ( ) ) { <nl> + jnatmp = tmp ; <nl> + } <nl> + } <nl> + if ( ! jnatmp . exists ( ) ) { <nl> + throw new Error ( " JNA temporary directory " + jnatmp + " does not exist " ) ; <nl> + } <nl> + if ( ! jnatmp . canWrite ( ) ) { <nl> + throw new Error ( " JNA temporary directory " + jnatmp + " is not writable " ) ; <nl> + } <nl> + return jnatmp ; <nl> } <nl> <nl> / * * Remove all marked temporary files in the given directory . * / <nl> diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index 82a48c6 . . a4dec0e 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 141 , 7 + 141 , 17 @ @ public class NativeLibrary { <nl> } <nl> } <nl> catch ( UnsatisfiedLinkError e ) { <nl> - if ( Platform . isLinux ( ) ) { <nl> + / / For android , try to " preload " the library using <nl> + / / System . loadLibrary ( ) , which looks into the private / data / data <nl> + / / path , not found in any properties <nl> + if ( Platform . isAndroid ( ) ) { <nl> + try { <nl> + System . loadLibrary ( libraryName ) ; <nl> + handle = Native . open ( libraryPath ) ; <nl> + } <nl> + catch ( UnsatisfiedLinkError e2 ) { e = e2 ; } <nl> + } <nl> + else if ( Platform . isLinux ( ) ) { <nl> / / <nl> / / Failed to load the library normally - try to match libfoo . so . * <nl> / / <nl> diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java <nl> index 438cd18 . . 6c133cc 100644 <nl> - - - a / src / com / sun / jna / Platform . java <nl> + + + b / src / com / sun / jna / Platform . java <nl> @ @ - 20 , 6 + 20 , 7 @ @ public final class Platform { <nl> public static final int OPENBSD = 5 ; <nl> public static final int WINDOWSCE = 6 ; <nl> public static final int AIX = 7 ; <nl> + public static final int ANDROID = 8 ; <nl> <nl> / * * Whether read - only ( final ) fields within Structures are supported . * / <nl> public static final boolean RO _ FIELDS ; <nl> @ @ - 39 , 7 + 40 , 12 @ @ public final class Platform { <nl> static { <nl> String osName = System . getProperty ( " os . name " ) ; <nl> if ( osName . startsWith ( " Linux " ) ) { <nl> - osType = LINUX ; <nl> + if ( " dalvik " . equals ( System . getProperty ( " java . vm . name " ) . toLowerCase ( ) ) ) { <nl> + osType = ANDROID ; <nl> + } <nl> + else { <nl> + osType = LINUX ; <nl> + } <nl> } <nl> else if ( osName . startsWith ( " AIX " ) ) { <nl> osType = AIX ; <nl> @ @ - 93 , 6 + 99 , 9 @ @ public final class Platform { <nl> public static final boolean isMac ( ) { <nl> return osType = = MAC ; <nl> } <nl> + public static final boolean isAndroid ( ) { <nl> + return osType = = ANDROID ; <nl> + } <nl> public static final boolean isLinux ( ) { <nl> return osType = = LINUX ; <nl> } <nl> @ @ - 149 , 9 + 158 , 8 @ @ public final class Platform { <nl> | | arch . equals ( " x86 _ 64 " ) <nl> | | arch . equals ( " amd64 " ) ) { <nl> return true ; <nl> - } else { <nl> - return false ; <nl> - } <nl> + } <nl> + return false ; <nl> } <nl> <nl> public static final boolean isPPC ( ) { <nl> @ @ - 162 , 18 + 170 , 13 @ @ public final class Platform { <nl> | | arch . equals ( " powerpc " ) <nl> | | arch . equals ( " powerpc64 " ) ) { <nl> return true ; <nl> - } else { <nl> - return false ; <nl> - } <nl> + } <nl> + return false ; <nl> } <nl> <nl> public static final boolean isARM ( ) { <nl> String arch = <nl> System . getProperty ( " os . arch " ) . toLowerCase ( ) . trim ( ) ; <nl> - if ( arch . equals ( " arm " ) ) { <nl> - return true ; <nl> - } else { <nl> - return false ; <nl> - } <nl> + return arch . startsWith ( " arm " ) ; <nl> } <nl> } <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index 3adaef2 . . 4476906 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 109 , 7 + 109 , 7 @ @ public abstract class Structure { <nl> String arch = System . getProperty ( " os . arch " ) . toLowerCase ( ) ; <nl> isPPC = " ppc " . equals ( arch ) | | " powerpc " . equals ( arch ) ; <nl> isSPARC = " sparc " . equals ( arch ) ; <nl> - isARM = " arm " . equals ( arch ) ; <nl> + 	 isARM = arch . startsWith ( " arm " ) ; <nl> } <nl> <nl> / * * Use the platform default alignment . * / <nl> @ @ - 129 , 7 + 129 , 10 @ @ public abstract class Structure { <nl> / / public static final int ALIGN _ 8 = 6 ; <nl> <nl> static final int MAX _ GNUC _ ALIGNMENT = <nl> - isSPARC | | ( ( isPPC | | isARM ) & & Platform . isLinux ( ) ) | | Platform . isAix ( ) <nl> + isSPARC <nl> + | | ( ( isPPC | | isARM ) <nl> + & & ( Platform . isLinux ( ) | | Platform . isAndroid ( ) ) ) <nl> + | | Platform . isAix ( ) <nl> ? 8 : Native . LONG _ SIZE ; <nl> protected static final int CALCULATE _ SIZE = - 1 ; <nl> static final Map layoutInfo = new WeakHashMap ( ) ; <nl> @ @ - 836 , 7 + 839 , 7 @ @ public abstract class Structure { <nl> } <nl> <nl> / * * Returns all field names ( sorted ) provided so far by <nl> - { @ link # setFieldOrder } <nl> + { @ link # getFieldOrder } <nl> @ param force set if results are required immediately <nl> @ return null if not yet able to provide fields , and force is false . <nl> @ throws Error if force is true and field order data not yet specified <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index e0e2cae . . ef091db 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 1032 , 13 + 1032 , 39 @ @ public class CallbacksTest extends TestCase { <nl> } ; <nl> callThreadedCallback ( cb , init , COUNT , 100 , called ) ; <nl> <nl> - assertEquals ( " Native thread mapping not preserved : " + threads , <nl> + assertEquals ( " Multiple callbacks on a given native thread should use the same Thread mapping : " + threads , <nl> 1 , threads . size ( ) ) ; <nl> } <nl> <nl> - / / Callback indicates detach preference ; thread is non - daemon ( default ) , <nl> + public void testAttachedThreadCleanupOnExit ( ) throws Exception { <nl> + final Set threads = new HashSet ( ) ; <nl> + final int [ ] called = { 0 } ; <nl> + TestLibrary . VoidCallback cb = new TestLibrary . VoidCallback ( ) { <nl> + public void callback ( ) { <nl> + threads . add ( new WeakReference ( Thread . currentThread ( ) ) ) ; <nl> + + + called [ 0 ] ; <nl> + Native . detach ( false ) ; <nl> + } <nl> + } ; <nl> + callThreadedCallback ( cb , null , 1 , 0 , called ) ; <nl> + while ( threads . size ( ) = = 0 ) { <nl> + Thread . sleep ( 10 ) ; <nl> + } <nl> + long start = System . currentTimeMillis ( ) ; <nl> + WeakReference ref = ( WeakReference ) threads . iterator ( ) . next ( ) ; <nl> + while ( ref . get ( ) ! = null ) { <nl> + System . gc ( ) ; <nl> + Thread . sleep ( 10 ) ; <nl> + if ( System . currentTimeMillis ( ) - start > 5000 ) { <nl> + fail ( " Timed out waiting for attached thread to be detached on exit and disposed : " + ref . get ( ) ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + / / Callback indicates detach preference ( instead of <nl> + / / CallbackThreadInitializer ) ; thread is non - daemon ( default ) , <nl> / / but callback explicitly detaches it on final invocation . <nl> - public void testDynamicCallbackThreadPersistence ( ) throws Exception { <nl> + public void testCallbackIndicatedThreadDetach ( ) throws Exception { <nl> 	 final int [ ] called = { 0 } ; <nl> final Set threads = new HashSet ( ) ; <nl> final int COUNT = 5 ; <nl> @ @ - 1058 , 7 + 1084 , 7 @ @ public class CallbacksTest extends TestCase { <nl> } ; <nl> callThreadedCallback ( cb , null , COUNT , 100 , called ) ; <nl> <nl> - assertEquals ( " Native thread mapping not preserved : " + threads , <nl> + assertEquals ( " Multiple callbacks in the same native thread should use the same Thread mapping : " + threads , <nl> 1 , threads . size ( ) ) ; <nl> Thread thread = ( Thread ) threads . iterator ( ) . next ( ) ; <nl> long start = System . currentTimeMillis ( ) ; <nl> diff - - git a / test / com / sun / jna / NativeLibraryTest . java b / test / com / sun / jna / NativeLibraryTest . java <nl> index add92e4 . . 23d0b78 100644 <nl> - - - a / test / com / sun / jna / NativeLibraryTest . java <nl> + + + b / test / com / sun / jna / NativeLibraryTest . java <nl> @ @ - 185 , 7 + 185 , 11 @ @ public class NativeLibraryTest extends TestCase { <nl> 	 } <nl> } <nl> <nl> + / / XFAIL on android <nl> public void testGetProcess ( ) { <nl> + if ( Platform . isAndroid ( ) ) { <nl> + fail ( " dlopen ( NULL ) segfaults on Android " ) ; <nl> + } <nl> NativeLibrary process = NativeLibrary . getProcess ( ) ; <nl> / / Access a common C library function <nl> process . getFunction ( " printf " ) ; <nl> diff - - git a / test / com / sun / jna / NativeTest . java b / test / com / sun / jna / NativeTest . java <nl> index b5d6045 . . e567f95 100644 <nl> - - - a / test / com / sun / jna / NativeTest . java <nl> + + + b / test / com / sun / jna / NativeTest . java <nl> @ @ - 281 , 6 + 281 , 10 @ @ public class NativeTest extends TestCase { <nl> assertEquals ( " Wrong resource path FreeBSD / x86 " , " / com / sun / jna / freebsd - i386 " , <nl> Native . getNativeLibraryResourcePath ( Platform . FREEBSD , <nl> " x86 " , " FreeBSD " ) ) ; <nl> + assertEquals ( " Wrong resource path Linux / armv7l ( android ) " , " / com / sun / jna / android - arm " , <nl> + Native . getNativeLibraryResourcePath ( Platform . ANDROID , <nl> + " armv7l " , " Linux " ) ) ; <nl> + <nl> assertEquals ( " Wrong resource path other / other " , " / com / sun / jna / name - ppc " , <nl> Native . getNativeLibraryResourcePath ( Platform . UNSPECIFIED , <nl> " PowerPC " , " Name Of System " ) ) ; <nl> diff - - git a / test / com / sun / jna / ReturnTypesTest . java b / test / com / sun / jna / ReturnTypesTest . java <nl> index face299 . . f35e345 100644 <nl> - - - a / test / com / sun / jna / ReturnTypesTest . java <nl> + + + b / test / com / sun / jna / ReturnTypesTest . java <nl> @ @ - 43 , 7 + 43 , 6 @ @ public class ReturnTypesTest extends TestCase { <nl> <nl> public static class TestSmallStructure extends Structure { <nl> public static class ByValue extends TestSmallStructure implements Structure . ByValue { } <nl> - <nl> public byte c1 ; <nl> public byte c2 ; <nl> public short s ; <nl> @ @ - 54 , 7 + 53 , 6 @ @ public class ReturnTypesTest extends TestCase { <nl> <nl> public static class TestStructure extends Structure { <nl> public static class ByValue extends TestStructure implements Structure . ByValue { } <nl> - <nl> public byte c ; <nl> public short s ; <nl> public int i ; <nl> diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java <nl> index 6e9cadd . . 6fd7e44 100644 <nl> - - - a / test / com / sun / jna / StructureTest . java <nl> + + + b / test / com / sun / jna / StructureTest . java <nl> @ @ - 1521 , 7 + 1521 , 6 @ @ public class StructureTest extends TestCase { <nl> super ( m ) ; <nl> read ( ) ; / / Important ! <nl> } <nl> - <nl> public int value1 ; <nl> public ByReference [ ] array = new ByReference [ 13 ] ; <nl> public int value2 ;

TEST DIFF:
diff - - git a / native / callback . c b / native / callback . c 
 index 9488bc7 . . bc4db79 100644 
 - - - a / native / callback . c 
 + + + b / native / callback . c 
 @ @ - 49 , 8 + 49 , 8 @ @ extern " C " { 
 # endif 
 # else / * _ WIN64 * / 
 # ifdef _ MSC _ VER 
 - # define ASMFN ( X ) void _ _ declspec ( naked ) asmfn # # X ( ) { \ 
 - _ _ asm jmp fn [ X ] \ 
 + # define ASMFN ( X ) void _ _ declspec ( naked ) asmfn # # X ( ) { \ 
 + _ _ asm jmp DWORD PTR fn [ 4 * X ] \ 
 } 
 # else 
 # define ASMFN ( X ) extern void asmfn # # X ( ) ; asm ( " . globl _ asmfn " # X " \ n \

NEAREST DIFF:
diff - - git a / ANDROID . md b / ANDROID . md 
 new file mode 100644 
 index 0000000 . . 73ac9fe 
 - - - / dev / null 
 + + + b / ANDROID . md 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + * Add Android SDK / NDK tools into PATH ( used by native / Makefile ) 
 + * Set environment variable NDK _ PLATFORM ( used by native / Makefile ) 
 + * Build using : ant - Dos . prefix = android - arm dist 
 + * Tests must be run on the target platform , not the build platform 
 + * Add dist / jna . jar and / or dist / platform . jar to your application , as needed . 
 + * If you ' re using android - maven - plugin , jna . jar can be used as - is ( native libraries will be automatically copied into your project ) . 
 + * If you ' re using Google ' s Eclipse plugin then you must manually remove libjnidispatch . so from jna . jar / lib / armeabi and add it into your project ' s " libs / armeabi " directory . 
 + * See http : / / code . google . com / p / android / issues / detail ? id = 17861 and http : / / developer . android . com / guide / practices / jni . html for more information . 
 + 
 + 
 diff - - git a / CHANGES . md b / CHANGES . md 
 index 47f7162 . . 56e47c5 100755 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 5 , 6 + 5 , 10 @ @ Features 
 - - - - - - - - 
 * ` Structure . getFieldOrder ( ) ` supersedes ` Structure . setFieldOrder ( ) ` and is now required - [ @ twall ] ( https : / / github . com / twall ) . 
 * Search ~ / Library / Frameworks and / Library / Frameworks on OSX - [ @ shaneholloway ] ( https : / / github . com / shaneholloway ) . 
 + * Automatic cleanup of native threads ( based on suggestions from neil smith ) - [ @ twall ] ( https : / / github . com / twall ) . 
 + * Add android - arm target ( thanks to ochafik for initial work ) . 
 + * Add ` jna . tmpdir ` to override temporary JNA storage location - [ @ twall ] ( https : / / github . com / twall ) . 
 + * Add EXTRA _ MAKE _ OPTS ant property to override make variables - [ @ twall ] ( https : / / github . com / twall ) . 
 
 Bug Fixes 
 - - - - - - - - - 
 diff - - git a / README . md b / README . md 
 index 3ddb699 . . 9d1c1b8 100644 
 - - - a / README . md 
 + + + b / README . md 
 @ @ - 87 , 6 + 87 , 17 @ @ Primary Documentation ( JavaDoc ) 
 
 The definitive JNA reference is in the [ JavaDoc ] ( http : / / twall . github . com / jna / 3 . 4 . 1 / javadoc / ) . 
 
 + Publishing to maven central 
 + = = = = = = = = = = = = = = = = = = = = = = = = = = 
 + One time : Set up your gpg keys as described here https : / / docs . sonatype . org / display / Repository / How + To + Generate + PGP + Signatures + With + Maven 
 + One time : Make sure you have a settings . xml as described at the bottom of 7a1 at https : / / docs . sonatype . org / display / Repository / Sonatype + OSS + Maven + Repository + Usage + Guide # SonatypeOSSMavenRepositoryUsageGuide - 7a . 1 . POMandsettingsconfig 
 + 
 + Every time : 
 + maybe update version numbers in pom . xml 
 + ant stage # Uploads current checkout to maven central 
 + Follow steps from " release it " at https : / / docs . sonatype . org / display / Repository / Sonatype + OSS + Maven + Repository + Usage + Guide # SonatypeOSSMavenRepositoryUsageGuide - 8a . ReleaseIt 
 + 
 + 
 Contributing 
 = = = = = = = = = = = = 
 
 diff - - git a / build . xml b / build . xml 
 index 3c2bd69 . . 4ed1567 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 9 , 7 + 9 , 8 @ @ 
 support it ) . 
 
 Cross - compile by specifying - Dos . prefix = { name - arch } to ant 
 - ( cross - compile currently only configured / tested on w32ce - arm ) 
 + ( cross - compile currently only configured / tested on w32ce - arm and 
 + android - arm ) 
 
 Use - Dskip - native to skip building native parts . 
 Use - Dheadless to run tests headless 
 @ @ - 123 , 16 + 124 , 26 @ @ 
 < condition property = " jar . omitted " value = " * * / * jnidispatch * " else = " jnilib - included " > 
 < isset property = " omit - jnilib " / > 
 < / condition > 
 + < condition property = " cross - compile " value = " true " > 
 + < isset property = " os . prefix " / > 
 + < / condition > 
 + < ! - - Keep cross - compiled natives separate from normal builds - - > 
 + < condition property = " native . subdir " value = " native - $ { os . prefix } " else = " native " > 
 + < isset property = " cross - compile " / > 
 + < / condition > 
 < condition property = " vm . arch " value = " - d64 " else = " " > 
 - < or > 
 - < equals arg1 = " $ { sun . arch . data . model } " arg2 = " 64 " trim = " true " / > 
 - < equals arg1 = " $ { com . ibm . vm . bitmode } " arg2 = " 64 " trim = " true " / > 
 - < os arch = " x86 _ 64 " / > 
 - < os arch = " amd64 " / > 
 - < os arch = " sparcv9 " / > 
 - < os arch = " ppc64 " / > 
 - < os arch = " ia64 " / > 
 - < / or > 
 + < and > 
 + < not > < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " trim = " true " / > < / not > 
 + < or > 
 + < equals arg1 = " $ { sun . arch . data . model } " arg2 = " 64 " trim = " true " / > 
 + < equals arg1 = " $ { com . ibm . vm . bitmode } " arg2 = " 64 " trim = " true " / > 
 + < os arch = " x86 _ 64 " / > 
 + < os arch = " amd64 " / > 
 + < os arch = " sparcv9 " / > 
 + < os arch = " ppc64 " / > 
 + < os arch = " ia64 " / > 
 + < / or > 
 + < / and > 
 < / condition > 
 < condition property = " ld . preload " value = " LD _ PRELOAD _ 64 " else = " LD _ PRELOAD " > 
 < and > 
 @ @ - 195 , 7 + 206 , 7 @ @ 
 < not > < equals arg1 = " $ { libjsig } " arg2 = " " / > < / not > 
 < / condition > 
 < property name = " native . jar " value = " $ { os . prefix } . jar " / > 
 - < property name = " build . native " location = " $ { build } / native " / > 
 + < property name = " build . native " location = " $ { build } / $ { native . subdir } " / > 
 < property name = " md5 . file " location = " $ { build . native } / jni . checksum " / > 
 
 < mkdir dir = " $ { build } " / > 
 @ @ - 211 , 6 + 222 , 8 @ @ 
 < echo > java . home = $ { java . home } < / echo > 
 < echo > java . library . path = $ { java . library . path } < / echo > 
 < echo > os . prefix = $ { os . prefix } < / echo > 
 + < echo > build = $ { build } < / echo > 
 + < echo > build . native = $ { build . native } < / echo > 
 
 < / target > 
 
 @ @ - 251 , 6 + 264 , 7 @ @ 
 < uptodate property = " - jar " targetfile = " $ { build } / $ { jar } " > 
 < srcfiles dir = " $ { classes } " > 
 < patternset id = " jar - compiled " > 
 + < include name = " lib / armeabi / * " / > 
 < include name = " com / sun / jna / * " / > 
 < include name = " com / sun / jna / * * / * " / > 
 < / patternset > 
 @ @ - 488 , 6 + 502 , 7 @ @ osname = macos 
 < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - amd64 . jar " overwrite = " true " / > 
 < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - sparc . jar " overwrite = " true " / > 
 < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - sparcv9 . jar " overwrite = " true " / > 
 + < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / android - arm . jar " overwrite = " true " / > 
 < delete failOnError = " false " includeEmptyDirs = " true " > 
 < fileset dir = " $ { build . native } " includes = " * . o , * jnidispatch * " / > 
 < / delete > 
 @ @ - 533 , 12 + 548 , 20 @ @ osname = macos 
 replace = " CHECKSUM = $ { jni . md5 } $ { comment } " 
 file = " native / Makefile " byline = " true " / > 
 < ! - - Handle cross - compilation - - > 
 - < condition property = " make . OS " value = " OS = w32ce " else = " IGNORE = " > 
 + < condition property = " make . OS " value = " OS = w32ce " > 
 < equals arg1 = " $ { os . prefix } " arg2 = " w32ce - arm " / > 
 < / condition > 
 + < condition property = " make . OS " value = " OS = android " > 
 + < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > 
 + < / condition > 
 + < property name = " make . OS " value = " IGNORE = " / > 
 + < ! - - Ensure Makefile ARCH property properly set - - > 
 < condition property = " ARCH " value = " arm " > 
 < equals arg1 = " $ { os . prefix } " arg2 = " w32ce - arm " / > 
 < / condition > 
 + < condition property = " ARCH " value = " arm " > 
 + < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > 
 + < / condition > 
 < condition property = " ARCH " value = " ppc " > 
 < equals arg1 = " $ { os . prefix } " arg2 = " aix - ppc " / > 
 < / condition > 
 @ @ - 559 , 19 + 582 , 28 @ @ osname = macos 
 < / condition > 
 < condition property = " make . SDKROOT " 
 	 value = " SDKROOT = / Developer / SDKs / MacOSX10 . 6 . sdk " > 
 - < available file = " / Developer / SDKs / MacOSX10 . 6 . sdk " / > 
 + < and > 
 + < equals arg1 = " $ { os . prefix } " arg2 = " darwin " trim = " true " / > 
 + < available file = " / Developer / SDKs / MacOSX10 . 6 . sdk " / > 
 + < / and > 
 < / condition > 
 < condition property = " make . SDKROOT " 
 	 value = " SDKROOT = / Developer / SDKs / MacOSX10 . 5 . sdk " > 
 - < available file = " / Developer / SDKs / MacOSX10 . 5 . sdk " / > 
 + < and > 
 + < equals arg1 = " $ { os . prefix } " arg2 = " darwin " trim = " true " / > 
 + < available file = " / Developer / SDKs / MacOSX10 . 5 . sdk " / > 
 + < / and > 
 < / condition > 
 < condition property = " make . SDKROOT " 
 	 value = " SDKROOT = / Developer / SDKs / MacOSX10 . 4u . sdk " else = " IGNORE = " > 
 - < available file = " / Developer / SDKs / MacOSX10 . 4u . sdk " / > 
 + < and > 
 + < equals arg1 = " $ { os . prefix } " arg2 = " darwin " trim = " true " / > 
 + < available file = " / Developer / SDKs / MacOSX10 . 4u . sdk " / > 
 + < / and > 
 < / condition > 
 < ! - - Windows ' drive letters and spaces in absolute paths wreak havoc on 
 make - - > 
 - < condition property = " make . BUILD " value = " BUILD = . . / $ { build } / native " else = " BUILD = $ { build . native } " > 
 + < condition property = " make . BUILD " value = " BUILD = . . / $ { build } / $ { native . subdir } " else = " BUILD = $ { build . native } " > 
 < os family = " windows " / > 
 < / condition > 
 < condition property = " make . PATH " value = " PATH = / opt / csw / bin : / usr / sfw / bin : / usr / bin : / usr / ccs / bin " else = " IGNORE = " > 
 @ @ - 591 , 6 + 623 , 14 @ @ osname = macos 
 < os name = " AIX " / > 
 < / or > 
 < / condition > 
 + < ! - - Allow explicit override of make variables - - > 
 + < condition property = " make . OPTS " value = " $ { EXTRA _ MAKE _ OPTS } " else = " IGNORE = " > 
 + < isset property = " EXTRA _ MAKE _ OPTS " / > 
 + < / condition > 
 + < ! - - Native resource path within jna . jar - - > 
 + < condition property = " native . path " value = " lib / armeabi " else = " com / sun / jna / $ { os . prefix } " > 
 + < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > 
 + < / condition > 
 
 < ! - - Default make program - - > 
 < property name = " make " value = " make " / > 
 @ @ - 607 , 16 + 647 , 17 @ @ osname = macos 
 < arg value = " $ { make . ARCH } " / > 
 < arg value = " $ { make . PATH } " / > 
 < arg value = " $ { make . OS } " / > 
 + < arg line = " $ { make . OPTS } " / > 
 < arg value = " JNA _ JNI _ VERSION = $ { jni . version } " / > 
 < arg value = " CHECKSUM = $ { jni . md5 } " / > 
 < / exec > 
 - < mkdir dir = " $ { classes } / com / sun / jna / $ { os . prefix } " / > 
 - < copy todir = " $ { classes } / com / sun / jna / $ { os . prefix } " > 
 + < mkdir dir = " $ { classes } / $ { native . path } " / > 
 + < copy todir = " $ { classes } / $ { native . path } " > 
 < fileset dir = " $ { build . native } " 
 includes = " jnidispatch . dll , libjnidispatch . * " / > 
 < / copy > 
 - < mkdir dir = " $ { eclipse . classes } / com / sun / jna / $ { os . prefix } " / > 
 - < copy todir = " $ { eclipse . classes } / com / sun / jna / $ { os . prefix } " 
 + < mkdir dir = " $ { eclipse . classes } / $ { native . path } " / > 
 + < copy todir = " $ { eclipse . classes } / $ { native . path } " 
 failonerror = " false " > 
 < fileset dir = " $ { build . native } " 
 includes = " jnidispatch . dll , libjnidispatch . * " / > 
 @ @ - 666 , 8 + 707 , 15 @ @ osname = macos 
 < / signjar > 
 < / target > 
 
 + < target name = " android - test - setup " depends = " compile - tests " 
 + description = " Configure tests for running on an Android emulator " > 
 + < ! - - ' shared ' should be the path to a folder mounted as the mobile 
 + device / simulator storage card . - - > 
 + < property name = " shared " value = " shared " / > 
 + < / target > 
 + 
 < target name = " wince - test - setup " depends = " compile - tests " 
 - description = " Configure tests for running on a Windows Mobile device " > 
 + description = " Configure tests for running on the WM emulator " > 
 < ! - - ' shared ' should be the path to a folder mounted as the mobile 
 device / simulator storage card . - - > 
 < property name = " shared " value = " shared " / > 
 @ @ - 677 , 16 + 725 , 16 @ @ osname = macos 
 < zipfileset src = " $ { build } / $ { testjar } " / > 
 < / jar > 
 < copy todir = " $ { shared } " file = " $ { build } / $ { jar } " / > 
 - < copy todir = " $ { shared } " file = " $ { build } / native / jnidispatch . dll " / > 
 - < copy todir = " $ { shared } " file = " $ { build } / native / testlib . dll " / > 
 - < copy todir = " $ { shared } " file = " $ { build } / native / testlib2 . dll " / > 
 + < copy todir = " $ { shared } " file = " $ { build . native } / jnidispatch . dll " / > 
 + < copy todir = " $ { shared } " file = " $ { build . native } / testlib . dll " / > 
 + < copy todir = " $ { shared } " file = " $ { build . native } / testlib2 . dll " / > 
 < copy todir = " $ { shared } " file = " w32ce - test . lnk " / > 
 < chmod file = " $ { shared } / * . dll " perm = " + x " / > 
 < / target > 
 
 < ! - - When running tests from an IDE , be sure to set jna . library . path - - > 
 < ! - - to where the test library ( testlib ) is found . - - > 
 - < target name = " test " depends = " jar , compile - tests " 
 + < target name = " test " depends = " jar , compile - tests " unless = " cross - compile " 
 description = " Run all unit tests " > 
 < property name = " test . fork " value = " yes " / > 
 < property name = " reports . junit " location = " $ { reports } / junit " / > 
 @ @ - 838 , 15 + 886 , 13 @ @ osname = macos 
 < target name = " dist " depends = " jar , javadoc , contrib - jars , compile - tests , native " 
 description = " Build distribution files " > 
 < copy todir = " $ { dist } " > 
 + < fileset dir = " $ { build } " includes = " $ { jar } " / > 
 + < fileset dir = " $ { contrib } / platform / dist " includes = " platform . jar " / > 
 < fileset dir = " $ { lib . native } " > 
 < include name = " * . jar " / > 
 < exclude name = " out - of - date . jar " / > 
 < / fileset > 
 < / copy > 
 - < copy todir = " $ { dist } " > 
 - < fileset dir = " $ { build } " includes = " $ { jar } " / > 
 - < fileset dir = " $ { contrib } / platform / dist " includes = " platform . jar " / > 
 - < / copy > 
 < copy todir = " $ { dist } / jnacontrib " flatten = " true " > 
 < fileset dir = " $ { contrib } " > 
 	 < include name = " * * / build / demo - * . jar " / > 
 diff - - git a / dist / android - arm . jar b / dist / android - arm . jar 
 new file mode 100644 
 index 0000000 . . b110945 
 Binary files / dev / null and b / dist / android - arm . jar differ 
 diff - - git a / dist / jna . jar b / dist / jna . jar 
 index 9f96e4b . . dead5dc 100644 
 Binary files a / dist / jna . jar and b / dist / jna . jar differ 
 diff - - git a / lib / native / android - arm . jar b / lib / native / android - arm . jar 
 new file mode 100644 
 index 0000000 . . 0b78a49 
 Binary files / dev / null and b / lib / native / android - arm . jar differ 
 diff - - git a / native / Makefile b / native / Makefile 
 index 10f9653 . . a04eba9 100644 
 - - - a / native / Makefile 
 + + + b / native / Makefile 
 @ @ - 16 , 14 + 16 , 21 @ @ 
 # Solaris ( i386 / amd64 / sparc / sparcv9 ) 
 # AIX ( ppc / ppc64 ) 
 # FreeBSD / OpenBSD / NetBSD ( i386 / amd64 ) 
 + # Android ( arm ) 
 # 
 # Built , but with outstanding bugs ( not necessarily within JNA ) : 
 # 
 # Linux ( ppc64 / ia64 ) 
 # 
 # The w32ce build requires cegcc and phoneME for cross - compilation ; if these 
 - # tools are available on the path than " ant - Dos . prefix = w32ce - arm " should 
 + # tools are available on the path then " ant - Dos . prefix = w32ce - arm " should 
 # result in a proper build . 
 + # 
 + # The android build requires the android SDK + NDK for cross - compilation ; 
 + # make the tools available on the path and compile with 
 + # " ant - Dos . prefix = android - arm " . Put the NDK tools in the path and adjust 
 + # NDK _ PLATFORM below or set it in your environment . 
 + # 
 
 # Systems which support POSIX signals may be able to support VM crash 
 # protection simply by defining HAVE _ PROTECTION . This option has been only 
 @ @ - 97 , 6 + 104 , 25 @ @ endif 
 STRIP = strip - x 
 # end defaults 
 
 + # Android build ( cross - compile ) requires the android SDK + NDK . 
 + # Ensure the following tools are in your path and adjust NDK _ PLATFORM as needed 
 + ifeq ( $ ( OS ) , android ) 
 + CC = arm - linux - androideabi - gcc 
 + CPP = arm - linux - androideabi - cpp 
 + LD = arm - linux - androideabi - gcc 
 + RANLIB = arm - linux - androideabi - ranlib 
 + STRIP = arm - linux - androideabi - strip - x 
 + CDEFINES = - DNO _ JAWT - DNO _ WEAK _ GLOBALS - DFFI _ MMAP _ EXEC _ WRIT = 1 - DFFI _ MMAP _ EXEC _ SELINUX = 0 
 + COPT + = - fpic - mthumb - interwork - ffunction - sections - funwind - tables - fstack - protector - fno - short - enums - march = armv5te - mtune = xscale - msoft - float 
 + NDK _ PLATFORM ? = / Developer / Applications / android - ndk - r7c / platforms / android - 14 
 + JAVA _ INCLUDES = 
 + CINCLUDES + = - I " $ ( NDK _ PLATFORM ) / arch - arm / usr / include " # - I / usr / include 
 + LIBS = - nostdlib - L " $ ( NDK _ PLATFORM ) / arch - arm / usr / lib / " - lgcc - lc - ldl - lm 
 + LDFLAGS + = - Wl , - shared , - Bsymbolic 
 + FFI _ ENV = CPP = " $ ( CPP ) " CC = " $ ( CC ) " CFLAGS = " $ ( COPT ) $ ( CDEBUG ) $ ( CINCLUDES ) " CPPFLAGS = " $ ( CDEFINES ) $ ( CINCLUDES ) " LIBS = " $ ( LIBS ) " RANLIB = " $ ( RANLIB ) " 
 + FFI _ CONFIG = - - enable - static - - disable - shared - - with - pic = yes - - host = arm - linux - eabi 
 + endif 
 + 
 # W32CE build requires cegcc cross - compiler and phoneME JavaME implementation 
 # cegcc : http : / / sf . net / projects / cegcc 
 # phoneme : http : / / davy . preuveneers . net / 
 @ @ - 292 , 7 + 318 , 7 @ @ endif 
 # Unfortunately , we have to use different libffi include files depending on 
 # the target , so we can ' t do a simple universal build on darwin . Do 
 # separate builds , then merge the results . 
 - $ ( BUILD ) / % . o : % . c dispatch . h $ ( FFI _ LIB ) 
 + $ ( BUILD ) / % . o : % . c dispatch . h protect . h $ ( FFI _ LIB ) 
 	 @ mkdir - p $ ( BUILD ) 
 ifneq ( $ ( SDKROOT ) , ) 
 	 $ ( CC ) - arch $ ( ARCH ) $ ( CFLAGS ) - c $ < - o $ @ . $ ( ARCH ) 
 @ @ - 330 , 7 + 356 , 7 @ @ else 
 TESTDEP = $ ( TESTLIB ) 
 endif 
 $ ( TESTLIB2 ) : $ ( BUILD ) / testlib2 . o 
 - 	 $ ( LD ) $ ( LDFLAGS ) $ < $ ( TESTDEP ) 
 + 	 $ ( LD ) $ ( LDFLAGS ) $ < $ ( TESTDEP ) $ ( LIBS ) 
 
 ifneq ( $ ( DYNAMIC _ LIBFFI ) , true ) 
 $ ( FFI _ LIB ) : 
 diff - - git a / native / callback . c b / native / callback . c 
 index 00300b3 . . 8eba860 100644 
 - - - a / native / callback . c 
 + + + b / native / callback . c 
 @ @ - 12 , 6 + 12 , 7 @ @ 
 * Lesser General Public License for more details . 
 * / 
 
 + # include < stdio . h > 
 # include < stdlib . h > 
 # include < stdarg . h > 
 # include < string . h > 
 @ @ - 188 , 6 + 189 , 7 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , 
 if ( calling _ convention = = CALLCONV _ STDCALL ) { 
 abi = FFI _ STDCALL ; 
 } 
 + / / Calling into Java on win32 * always * uses stdcall 
 java _ abi = FFI _ STDCALL ; 
 # endif / / _ WIN32 
 
 @ @ - 216 , 16 + 218 , 17 @ @ create _ callback ( JNIEnv * env , jobject obj , jobject method , 
 rtype = ' * ' ; 
 } 
 switch ( rtype ) { 
 - case ' V ' : cb - > fptr = ( * env ) - > CallVoidMethod ; break ; 
 - case ' Z ' : cb - > fptr = ( * env ) - > CallBooleanMethod ; break ; 
 - case ' B ' : cb - > fptr = ( * env ) - > CallByteMethod ; break ; 
 - case ' S ' : cb - > fptr = ( * env ) - > CallShortMethod ; break ; 
 - case ' C ' : cb - > fptr = ( * env ) - > CallCharMethod ; break ; 
 - case ' I ' : cb - > fptr = ( * env ) - > CallIntMethod ; break ; 
 - case ' J ' : cb - > fptr = ( * env ) - > CallLongMethod ; break ; 
 - case ' F ' : cb - > fptr = ( * env ) - > CallFloatMethod ; break ; 
 - case ' D ' : cb - > fptr = ( * env ) - > CallDoubleMethod ; break ; 
 - default : cb - > fptr = ( * env ) - > CallObjectMethod ; break ; 
 + # define OFFSETOF ( ENV , METHOD ) ( ( size _ t ) ( ( char * ) & ( * ( ENV ) ) - > METHOD - ( char * ) ( * ( ENV ) ) ) ) 
 + case ' V ' : cb - > fptr _ offset = OFFSETOF ( env , CallVoidMethod ) ; break ; 
 + case ' Z ' : cb - > fptr _ offset = OFFSETOF ( env , CallBooleanMethod ) ; break ; 
 + case ' B ' : cb - > fptr _ offset = OFFSETOF ( env , CallByteMethod ) ; break ; 
 + case ' S ' : cb - > fptr _ offset = OFFSETOF ( env , CallShortMethod ) ; break ; 
 + case ' C ' : cb - > fptr _ offset = OFFSETOF ( env , CallCharMethod ) ; break ; 
 + case ' I ' : cb - > fptr _ offset = OFFSETOF ( env , CallIntMethod ) ; break ; 
 + case ' J ' : cb - > fptr _ offset = OFFSETOF ( env , CallLongMethod ) ; break ; 
 + case ' F ' : cb - > fptr _ offset = OFFSETOF ( env , CallFloatMethod ) ; break ; 
 + case ' D ' : cb - > fptr _ offset = OFFSETOF ( env , CallDoubleMethod ) ; break ; 
 + default : cb - > fptr _ offset = OFFSETOF ( env , CallObjectMethod ) ; break ; 
 } 
 status = ffi _ prep _ cif ( & cb - > java _ cif , java _ abi , argc + 3 , java _ ffi _ rtype , cb - > java _ arg _ types ) ; 
 if ( ! ffi _ error ( env , " callback setup ( 2 ) " , status ) ) { 
 @ @ - 384 , 7 + 387 , 9 @ @ callback _ invoke ( JNIEnv * env , callback * cb , ffi _ cif * cif , void * resp , void * * cbar 
 else if ( cb - > cif . rtype - > size > cif - > rtype - > size ) { 
 resp = alloca ( cb - > cif . rtype - > size ) ; 
 } 
 - ffi _ call ( & cb - > java _ cif , FFI _ FN ( cb - > fptr ) , resp , args ) ; 
 + # define FPTR ( ENV , OFFSET ) ( * ( void * * ) ( ( char * ) ( * ( ENV ) ) + OFFSET ) ) 
 + # define JNI _ FN ( X ) ( ( void ( JNICALL * ) ( void ) ) ( X ) ) 
 + ffi _ call ( & cb - > java _ cif , JNI _ FN ( FPTR ( env , cb - > fptr _ offset ) ) , resp , args ) ; 
 if ( ( * env ) - > ExceptionCheck ( env ) ) { 
 jthrowable throwable = ( * env ) - > ExceptionOccurred ( env ) ; 
 ( * env ) - > ExceptionClear ( env ) ; 
 @ @ - 466 , 6 + 471 , 67 @ @ callback _ invoke ( JNIEnv * env , callback * cb , ffi _ cif * cif , void * resp , void * * cbar 
 } 
 } 
 
 + / / Handle automatic thread cleanup 
 + static void detach _ thread ( void * data ) { 
 + if ( data ! = NULL ) { 
 + JavaVM * jvm = ( JavaVM * ) data ; 
 + ( * jvm ) - > DetachCurrentThread ( jvm ) ; 
 + } 
 + } 
 + 
 + # ifdef _ WIN32 
 + 
 + static DWORD dwTlsIndex ; 
 + BOOL WINAPI DllMain ( HINSTANCE hDLL , DWORD fdwReason , LPVOID lpvReserved ) { 
 + switch ( fdwReason ) { 
 + case DLL _ PROCESS _ ATTACH : 
 + dwTlsIndex = TlsAlloc ( ) ; 
 + if ( dwTlsIndex = = TLS _ OUT _ OF _ INDEXES ) { 
 + return FALSE ; 
 + } 
 + break ; 
 + case DLL _ PROCESS _ DETACH : 
 + TlsFree ( dwTlsIndex ) ; 
 + break ; 
 + case DLL _ THREAD _ ATTACH : 
 + break ; 
 + case DLL _ THREAD _ DETACH : { 
 + detach _ thread ( TlsGetValue ( dwTlsIndex ) ) ; 
 + break ; 
 + } 
 + default : 
 + break ; 
 + } 
 + return TRUE ; 
 + } 
 + 
 + # else 
 + 
 + # include < pthread . h > 
 + 
 + static pthread _ key _ t key ; 
 + static void make _ key ( ) { 
 + pthread _ key _ create ( & key , detach _ thread ) ; 
 + } 
 + 
 + # endif 
 + 
 + / * * Set up to detach the thread when it exits , or clear any handlers if the 
 + argument is NULL . 
 + * / 
 + static void 
 + jvm _ detach _ on _ exit ( JavaVM * jvm ) { 
 + # ifdef _ WIN32 
 + TlsSetValue ( dwTlsIndex , jvm ) ; 
 + # else 
 + static pthread _ once _ t key _ once = PTHREAD _ ONCE _ INIT ; 
 + pthread _ once ( & key _ once , make _ key ) ; 
 + if ( ! jvm | | pthread _ getspecific ( key ) = = NULL ) { 
 + pthread _ setspecific ( key , jvm ) ; 
 + } 
 + # endif 
 + } 
 + 
 static void 
 callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { 
 callback * cb = ( ( callback * ) user _ data ) ; 
 @ @ - 528 , 6 + 594 , 10 @ @ callback _ dispatch ( ffi _ cif * cif , void * resp , void * * cbargs , void * user _ data ) { 
 
 if ( detach ) { 
 ( * jvm ) - > DetachCurrentThread ( jvm ) ; 
 + jvm _ detach _ on _ exit ( NULL ) ; 
 + } 
 + else if ( ! was _ attached ) { 
 + jvm _ detach _ on _ exit ( jvm ) ; 
 } 
 } 
 
 diff - - git a / native / dispatch . c b / native / dispatch . c 
 index 4172461 . . 8c4c6e4 100644 
 - - - a / native / dispatch . c 
 + + + b / native / dispatch . c 
 @ @ - 2 , 7 + 2 , 7 @ @ 
 * @ ( # ) dispatch . c 1 . 9 98 / 03 / 22 
 * 
 * Copyright ( c ) 1998 Sun Microsystems , Inc . All Rights Reserved . 
 - * Copyright ( c ) 2007 - 2011 Timothy Wall . All Rights Reserved . 
 + * Copyright ( c ) 2007 - 2012 Timothy Wall . All Rights Reserved . 
 * Copyright ( c ) 2007 Wayne Meissner . All Rights Reserved . 
 * 
 * This library is free software ; you can redistribute it and / or 
 @ @ - 16 , 11 + 16 , 6 @ @ 
 * Lesser General Public License for more details . 
 * / 
 
 - / * 
 - * JNI native methods supporting the infrastructure for shared 
 - * dispatchers . 
 - * / 
 - 
 # if defined ( _ WIN32 ) 
 # ifdef _ MSC _ VER 
 # pragma warning ( disable : 4201 ) / * nameless struct / union ( jni _ md . h ) * / 
 @ @ - 2989 , 8 + 2984 , 8 @ @ Java _ com _ sun _ jna _ Native _ getPreserveLastError ( JNIEnv * UNUSED ( env ) , jclass UNUSED ( 
 
 JNIEXPORT void JNICALL 
 Java _ com _ sun _ jna _ Native _ setLastError ( JNIEnv * env , jclass UNUSED ( classp ) , jint code ) { 
 - SET _ LAST _ ERROR ( code ) ; 
 update _ last _ error ( env , code ) ; 
 + SET _ LAST _ ERROR ( code ) ; 
 } 
 
 JNIEXPORT jstring JNICALL 
 diff - - git a / native / dispatch . h b / native / dispatch . h 
 index b3d574f . . b766c56 100644 
 - - - a / native / dispatch . h 
 + + + b / native / dispatch . h 
 @ @ - 110 , 7 + 110 , 7 @ @ typedef struct _ callback { 
 jmethodID methodID ; 
 char * arg _ jtypes ; 
 jboolean direct ; 
 - void * fptr ; 
 + size _ t fptr _ offset ; 
 void * saved _ x _ closure ; 
 } callback ; 
 
 @ @ - 204 , 6 + 204 , 20 @ @ extern jobject initializeThread ( callback * , AttachOptions * ) ; 
 extern int lastError ( ) ; 
 extern void setLastError ( int err ) ; 
 
 + # ifdef NO _ WEAK _ GLOBALS 
 + # define NewWeakGlobalRef NewGlobalRef 
 + # define DeleteWeakGlobalRef DeleteGlobalRef 
 + # endif 
 + 
 + / * Native memory fault protection * / 
 + # ifdef HAVE _ PROTECTION 
 + # define PROTECT is _ protected ( ) 
 + # endif 
 + # include " protect . h " 
 + # define ON _ ERROR ( ) throwByName ( env , EError , " Invalid memory access " ) 
 + # define PSTART ( ) PROTECTED _ START ( ) 
 + # define PEND ( ) PROTECTED _ END ( ON _ ERROR ( ) ) 
 + 
 # ifdef _ _ cplusplus 
 } 
 # endif 
 diff - - git a / native / testlib . c b / native / testlib . c 
 index 9288000 . . d7e0d18 100644 
 - - - a / native / testlib . c 
 + + + b / native / testlib . c 
 @ @ - 45 , 6 + 45 , 7 @ @ typedef _ _ int64 int64 _ t ; 
 # define THREAD _ EXIT ( ) ExitThread ( 0 ) 
 # define THREAD _ FUNC ( FN , ARG ) DWORD WINAPI FN ( LPVOID ARG ) 
 # define THREAD _ CURRENT ( ) GetCurrentThreadId ( ) 
 + # define THREAD _ RETURN return 0 
 # else 
 # define EXPORT 
 # include < unistd . h > 
 @ @ - 54 , 6 + 55 , 7 @ @ typedef _ _ int64 int64 _ t ; 
 # define THREAD _ CREATE ( TP , FN , DATA ) pthread _ create ( TP , NULL , FN , DATA ) 
 # define THREAD _ EXIT ( ) pthread _ exit ( NULL ) 
 # define THREAD _ FUNC ( FN , ARG ) void * FN ( void * ARG ) 
 + # define THREAD _ RETURN return NULL 
 # define THREAD _ CURRENT ( ) pthread _ self ( ) 
 # endif 
 
 @ @ - 645 , 6 + 647 , 7 @ @ static THREAD _ FUNC ( thread _ function , arg ) { 
 SLEEP ( td . sleep _ time ) ; 
 } 
 THREAD _ EXIT ( ) ; 
 + THREAD _ RETURN ; 
 } 
 
 static thread _ data data ; 
 diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java 
 index 4b73f83 . . e38f20b 100755 
 - - - a / src / com / sun / jna / Native . java 
 + + + b / src / com / sun / jna / Native . java 
 @ @ - 591 , 9 + 591 , 16 @ @ public final class Native { 
 arch = " ppc64 " ; 
 } 
 switch ( osType ) { 
 + case Platform . ANDROID : 
 + if ( arch . startsWith ( " arm " ) ) { 
 + arch = " arm " ; 
 + } 
 + osPrefix = " android - " + arch ; 
 + break ; 
 case Platform . WINDOWS : 
 - if ( " i386 " . equals ( arch ) ) 
 + if ( " i386 " . equals ( arch ) ) { 
 arch = " x86 " ; 
 + } 
 osPrefix = " win32 - " + arch ; 
 break ; 
 case Platform . WINDOWSCE : 
 @ @ - 682 , 6 + 689 , 10 @ @ public final class Native { 
 } 
 } 
 } 
 + if ( Platform . isAndroid ( ) ) { 
 + / / Native libraries on android must be bundled with the APK 
 + System . setProperty ( " jna . nounpack " , " true " ) ; 
 + } 
 try { 
 if ( ! Boolean . getBoolean ( " jna . nosys " ) ) { 
 System . loadLibrary ( libName ) ; 
 @ @ - 720 , 7 + 731 , 7 @ @ public final class Native { 
 url = Native . class . getResource ( resourceName ) ; 
 } 
 if ( url = = null ) { 
 - throw new UnsatisfiedLinkError ( " jnidispatch ( " + resourceName 
 + throw new UnsatisfiedLinkError ( " JNA native support ( " + resourceName 
 + " ) not found in resource path " ) ; 
 } 
 
 @ @ - 814 , 6 + 825 , 8 @ @ public final class Native { 
 public static native void setLastError ( int code ) ; 
 
 / * * Update the last error value ( called from native code ) . * / 
 + / / This has to be called immediately after a native call to ensure that 
 + / / subsequent VM operations don ' t overwrite the last error value 
 static void updateLastError ( int e ) { 
 lastError . set ( new Integer ( e ) ) ; 
 } 
 @ @ - 906 , 11 + 919 , 30 @ @ public final class Native { 
 catch ( IOException e ) { e . printStackTrace ( ) ; } 
 } 
 
 + / * * Obtain a directory suitable for writing JNA - specific temporary files . 
 + Override with < code > jna . tmpdir < / code > 
 + * / 
 static File getTempDir ( ) { 
 - File tmp = new File ( System . getProperty ( " java . io . tmpdir " ) ) ; 
 - File jnatmp = new File ( tmp , " jna - " + System . getProperty ( " user . name " ) ) ; 
 - jnatmp . mkdirs ( ) ; 
 - return jnatmp . exists ( ) ? jnatmp : tmp ; 
 + File jnatmp ; 
 + String prop = System . getProperty ( " jna . tmpdir " ) ; 
 + if ( prop ! = null ) { 
 + jnatmp = new File ( prop ) ; 
 + } 
 + else { 
 + File tmp = new File ( System . getProperty ( " java . io . tmpdir " ) ) ; 
 + jnatmp = new File ( tmp , " jna - " + System . getProperty ( " user . name " ) ) ; 
 + jnatmp . mkdirs ( ) ; 
 + if ( ! jnatmp . exists ( ) | | ! jnatmp . canWrite ( ) ) { 
 + jnatmp = tmp ; 
 + } 
 + } 
 + if ( ! jnatmp . exists ( ) ) { 
 + throw new Error ( " JNA temporary directory " + jnatmp + " does not exist " ) ; 
 + } 
 + if ( ! jnatmp . canWrite ( ) ) { 
 + throw new Error ( " JNA temporary directory " + jnatmp + " is not writable " ) ; 
 + } 
 + return jnatmp ; 
 } 
 
 / * * Remove all marked temporary files in the given directory . * / 
 diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java 
 index 82a48c6 . . a4dec0e 100644 
 - - - a / src / com / sun / jna / NativeLibrary . java 
 + + + b / src / com / sun / jna / NativeLibrary . java 
 @ @ - 141 , 7 + 141 , 17 @ @ public class NativeLibrary { 
 } 
 } 
 catch ( UnsatisfiedLinkError e ) { 
 - if ( Platform . isLinux ( ) ) { 
 + / / For android , try to " preload " the library using 
 + / / System . loadLibrary ( ) , which looks into the private / data / data 
 + / / path , not found in any properties 
 + if ( Platform . isAndroid ( ) ) { 
 + try { 
 + System . loadLibrary ( libraryName ) ; 
 + handle = Native . open ( libraryPath ) ; 
 + } 
 + catch ( UnsatisfiedLinkError e2 ) { e = e2 ; } 
 + } 
 + else if ( Platform . isLinux ( ) ) { 
 / / 
 / / Failed to load the library normally - try to match libfoo . so . * 
 / / 
 diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java 
 index 438cd18 . . 6c133cc 100644 
 - - - a / src / com / sun / jna / Platform . java 
 + + + b / src / com / sun / jna / Platform . java 
 @ @ - 20 , 6 + 20 , 7 @ @ public final class Platform { 
 public static final int OPENBSD = 5 ; 
 public static final int WINDOWSCE = 6 ; 
 public static final int AIX = 7 ; 
 + public static final int ANDROID = 8 ; 
 
 / * * Whether read - only ( final ) fields within Structures are supported . * / 
 public static final boolean RO _ FIELDS ; 
 @ @ - 39 , 7 + 40 , 12 @ @ public final class Platform { 
 static { 
 String osName = System . getProperty ( " os . name " ) ; 
 if ( osName . startsWith ( " Linux " ) ) { 
 - osType = LINUX ; 
 + if ( " dalvik " . equals ( System . getProperty ( " java . vm . name " ) . toLowerCase ( ) ) ) { 
 + osType = ANDROID ; 
 + } 
 + else { 
 + osType = LINUX ; 
 + } 
 } 
 else if ( osName . startsWith ( " AIX " ) ) { 
 osType = AIX ; 
 @ @ - 93 , 6 + 99 , 9 @ @ public final class Platform { 
 public static final boolean isMac ( ) { 
 return osType = = MAC ; 
 } 
 + public static final boolean isAndroid ( ) { 
 + return osType = = ANDROID ; 
 + } 
 public static final boolean isLinux ( ) { 
 return osType = = LINUX ; 
 } 
 @ @ - 149 , 9 + 158 , 8 @ @ public final class Platform { 
 | | arch . equals ( " x86 _ 64 " ) 
 | | arch . equals ( " amd64 " ) ) { 
 return true ; 
 - } else { 
 - return false ; 
 - } 
 + } 
 + return false ; 
 } 
 
 public static final boolean isPPC ( ) { 
 @ @ - 162 , 18 + 170 , 13 @ @ public final class Platform { 
 | | arch . equals ( " powerpc " ) 
 | | arch . equals ( " powerpc64 " ) ) { 
 return true ; 
 - } else { 
 - return false ; 
 - } 
 + } 
 + return false ; 
 } 
 
 public static final boolean isARM ( ) { 
 String arch = 
 System . getProperty ( " os . arch " ) . toLowerCase ( ) . trim ( ) ; 
 - if ( arch . equals ( " arm " ) ) { 
 - return true ; 
 - } else { 
 - return false ; 
 - } 
 + return arch . startsWith ( " arm " ) ; 
 } 
 } 
 diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java 
 index 3adaef2 . . 4476906 100644 
 - - - a / src / com / sun / jna / Structure . java 
 + + + b / src / com / sun / jna / Structure . java 
 @ @ - 109 , 7 + 109 , 7 @ @ public abstract class Structure { 
 String arch = System . getProperty ( " os . arch " ) . toLowerCase ( ) ; 
 isPPC = " ppc " . equals ( arch ) | | " powerpc " . equals ( arch ) ; 
 isSPARC = " sparc " . equals ( arch ) ; 
 - isARM = " arm " . equals ( arch ) ; 
 + 	 isARM = arch . startsWith ( " arm " ) ; 
 } 
 
 / * * Use the platform default alignment . * / 
 @ @ - 129 , 7 + 129 , 10 @ @ public abstract class Structure { 
 / / public static final int ALIGN _ 8 = 6 ; 
 
 static final int MAX _ GNUC _ ALIGNMENT = 
 - isSPARC | | ( ( isPPC | | isARM ) & & Platform . isLinux ( ) ) | | Platform . isAix ( ) 
 + isSPARC 
 + | | ( ( isPPC | | isARM ) 
 + & & ( Platform . isLinux ( ) | | Platform . isAndroid ( ) ) ) 
 + | | Platform . isAix ( ) 
 ? 8 : Native . LONG _ SIZE ; 
 protected static final int CALCULATE _ SIZE = - 1 ; 
 static final Map layoutInfo = new WeakHashMap ( ) ; 
 @ @ - 836 , 7 + 839 , 7 @ @ public abstract class Structure { 
 } 
 
 / * * Returns all field names ( sorted ) provided so far by 
 - { @ link # setFieldOrder } 
 + { @ link # getFieldOrder } 
 @ param force set if results are required immediately 
 @ return null if not yet able to provide fields , and force is false . 
 @ throws Error if force is true and field order data not yet specified 
 diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java 
 index e0e2cae . . ef091db 100644 
 - - - a / test / com / sun / jna / CallbacksTest . java 
 + + + b / test / com / sun / jna / CallbacksTest . java 
 @ @ - 1032 , 13 + 1032 , 39 @ @ public class CallbacksTest extends TestCase { 
 } ; 
 callThreadedCallback ( cb , init , COUNT , 100 , called ) ; 
 
 - assertEquals ( " Native thread mapping not preserved : " + threads , 
 + assertEquals ( " Multiple callbacks on a given native thread should use the same Thread mapping : " + threads , 
 1 , threads . size ( ) ) ; 
 } 
 
 - / / Callback indicates detach preference ; thread is non - daemon ( default ) , 
 + public void testAttachedThreadCleanupOnExit ( ) throws Exception { 
 + final Set threads = new HashSet ( ) ; 
 + final int [ ] called = { 0 } ; 
 + TestLibrary . VoidCallback cb = new TestLibrary . VoidCallback ( ) { 
 + public void callback ( ) { 
 + threads . add ( new WeakReference ( Thread . currentThread ( ) ) ) ; 
 + + + called [ 0 ] ; 
 + Native . detach ( false ) ; 
 + } 
 + } ; 
 + callThreadedCallback ( cb , null , 1 , 0 , called ) ; 
 + while ( threads . size ( ) = = 0 ) { 
 + Thread . sleep ( 10 ) ; 
 + } 
 + long start = System . currentTimeMillis ( ) ; 
 + WeakReference ref = ( WeakReference ) threads . iterator ( ) . next ( ) ; 
 + while ( ref . get ( ) ! = null ) { 
 + System . gc ( ) ; 
 + Thread . sleep ( 10 ) ; 
 + if ( System . currentTimeMillis ( ) - start > 5000 ) { 
 + fail ( " Timed out waiting for attached thread to be detached on exit and disposed : " + ref . get ( ) ) ; 
 + } 
 + } 
 + } 
 + 
 + / / Callback indicates detach preference ( instead of 
 + / / CallbackThreadInitializer ) ; thread is non - daemon ( default ) , 
 / / but callback explicitly detaches it on final invocation . 
 - public void testDynamicCallbackThreadPersistence ( ) throws Exception { 
 + public void testCallbackIndicatedThreadDetach ( ) throws Exception { 
 	 final int [ ] called = { 0 } ; 
 final Set threads = new HashSet ( ) ; 
 final int COUNT = 5 ; 
 @ @ - 1058 , 7 + 1084 , 7 @ @ public class CallbacksTest extends TestCase { 
 } ; 
 callThreadedCallback ( cb , null , COUNT , 100 , called ) ; 
 
 - assertEquals ( " Native thread mapping not preserved : " + threads , 
 + assertEquals ( " Multiple callbacks in the same native thread should use the same Thread mapping : " + threads , 
 1 , threads . size ( ) ) ; 
 Thread thread = ( Thread ) threads . iterator ( ) . next ( ) ; 
 long start = System . currentTimeMillis ( ) ; 
 diff - - git a / test / com / sun / jna / NativeLibraryTest . java b / test / com / sun / jna / NativeLibraryTest . java 
 index add92e4 . . 23d0b78 100644 
 - - - a / test / com / sun / jna / NativeLibraryTest . java 
 + + + b / test / com / sun / jna / NativeLibraryTest . java 
 @ @ - 185 , 7 + 185 , 11 @ @ public class NativeLibraryTest extends TestCase { 
 	 } 
 } 
 
 + / / XFAIL on android 
 public void testGetProcess ( ) { 
 + if ( Platform . isAndroid ( ) ) { 
 + fail ( " dlopen ( NULL ) segfaults on Android " ) ; 
 + } 
 NativeLibrary process = NativeLibrary . getProcess ( ) ; 
 / / Access a common C library function 
 process . getFunction ( " printf " ) ; 
 diff - - git a / test / com / sun / jna / NativeTest . java b / test / com / sun / jna / NativeTest . java 
 index b5d6045 . . e567f95 100644 
 - - - a / test / com / sun / jna / NativeTest . java 
 + + + b / test / com / sun / jna / NativeTest . java 
 @ @ - 281 , 6 + 281 , 10 @ @ public class NativeTest extends TestCase { 
 assertEquals ( " Wrong resource path FreeBSD / x86 " , " / com / sun / jna / freebsd - i386 " , 
 Native . getNativeLibraryResourcePath ( Platform . FREEBSD , 
 " x86 " , " FreeBSD " ) ) ; 
 + assertEquals ( " Wrong resource path Linux / armv7l ( android ) " , " / com / sun / jna / android - arm " , 
 + Native . getNativeLibraryResourcePath ( Platform . ANDROID , 
 + " armv7l " , " Linux " ) ) ; 
 + 
 assertEquals ( " Wrong resource path other / other " , " / com / sun / jna / name - ppc " , 
 Native . getNativeLibraryResourcePath ( Platform . UNSPECIFIED , 
 " PowerPC " , " Name Of System " ) ) ; 
 diff - - git a / test / com / sun / jna / ReturnTypesTest . java b / test / com / sun / jna / ReturnTypesTest . java 
 index face299 . . f35e345 100644 
 - - - a / test / com / sun / jna / ReturnTypesTest . java 
 + + + b / test / com / sun / jna / ReturnTypesTest . java 
 @ @ - 43 , 7 + 43 , 6 @ @ public class ReturnTypesTest extends TestCase { 
 
 public static class TestSmallStructure extends Structure { 
 public static class ByValue extends TestSmallStructure implements Structure . ByValue { } 
 - 
 public byte c1 ; 
 public byte c2 ; 
 public short s ; 
 @ @ - 54 , 7 + 53 , 6 @ @ public class ReturnTypesTest extends TestCase { 
 
 public static class TestStructure extends Structure { 
 public static class ByValue extends TestStructure implements Structure . ByValue { } 
 - 
 public byte c ; 
 public short s ; 
 public int i ; 
 diff - - git a / test / com / sun / jna / StructureTest . java b / test / com / sun / jna / StructureTest . java 
 index 6e9cadd . . 6fd7e44 100644 
 - - - a / test / com / sun / jna / StructureTest . java 
 + + + b / test / com / sun / jna / StructureTest . java 
 @ @ - 1521 , 7 + 1521 , 6 @ @ public class StructureTest extends TestCase { 
 super ( m ) ; 
 read ( ) ; / / Important ! 
 } 
 - 
 public int value1 ; 
 public ByReference [ ] array = new ByReference [ 13 ] ; 
 public int value2 ;
