BLEU SCORE: 0.07986788803078405

TEST MSG: revert by reference implementations
GENERATED MSG: fix VisualID access

TEST DIFF (one line): diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> index 92c57d0 . . 8feebe2 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> @ @ - 146 , 7 + 146 , 7 @ @ public interface X11 extends Library { <nl> class AtomByReference extends ByReference { <nl> public AtomByReference ( ) { super ( XID . SIZE ) ; } <nl> public Atom getValue ( ) { <nl> - int value = getPointer ( ) . getInt ( 0 ) ; <nl> + NativeLong value = getPointer ( ) . getNativeLong ( 0 ) ; <nl> return ( Atom ) new Atom ( ) . fromNative ( value , null ) ; <nl> } <nl> } <nl> @ @ - 219 , 8 + 219 , 8 @ @ public interface X11 extends Library { <nl> class WindowByReference extends ByReference { <nl> public WindowByReference ( ) { super ( XID . SIZE ) ; } <nl> public Window getValue ( ) { <nl> - int value = getPointer ( ) . getInt ( 0 ) ; <nl> - return value = = 0 ? Window . None : new Window ( value ) ; <nl> + NativeLong value = getPointer ( ) . getNativeLong ( 0 ) ; <nl> + return value . longValue ( ) = = 0 ? Window . None : new Window ( value . longValue ( ) ) ; <nl> } <nl> } <nl> class Pixmap extends Drawable {
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java 
 index 92c57d0 . . 8feebe2 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java 
 @ @ - 146 , 7 + 146 , 7 @ @ public interface X11 extends Library { 
 class AtomByReference extends ByReference { 
 public AtomByReference ( ) { super ( XID . SIZE ) ; } 
 public Atom getValue ( ) { 
 - int value = getPointer ( ) . getInt ( 0 ) ; 
 + NativeLong value = getPointer ( ) . getNativeLong ( 0 ) ; 
 return ( Atom ) new Atom ( ) . fromNative ( value , null ) ; 
 } 
 } 
 @ @ - 219 , 8 + 219 , 8 @ @ public interface X11 extends Library { 
 class WindowByReference extends ByReference { 
 public WindowByReference ( ) { super ( XID . SIZE ) ; } 
 public Window getValue ( ) { 
 - int value = getPointer ( ) . getInt ( 0 ) ; 
 - return value = = 0 ? Window . None : new Window ( value ) ; 
 + NativeLong value = getPointer ( ) . getNativeLong ( 0 ) ; 
 + return value . longValue ( ) = = 0 ? Window . None : new Window ( value . longValue ( ) ) ; 
 } 
 } 
 class Pixmap extends Drawable {

NEAREST DIFF:
ELIMINATEDSENTENCE
