BLEU SCORE: 0.04372912656590315

TEST MSG: Clarify the use of Buffers
GENERATED MSG: note Memory vs primitive array usage

TEST DIFF (one line): diff - - git a / src / com / sun / jna / overview . html b / src / com / sun / jna / overview . html <nl> index 5ea4912 . . 2008f44 100644 <nl> - - - a / src / com / sun / jna / overview . html <nl> + + + b / src / com / sun / jna / overview . html <nl> @ @ - 200 , 9 + 200 , 9 @ @ Java types must be chosen to match native types of the same size . Following are <nl> < li > Java arrays of primitive type may be wrapped by { @ link java . nio . Buffer } in <nl> order to access a subset of the array ( changing the effective size and / or <nl> offest ) . <nl> - < li > Java arrays of primitive type are only valid for use within the scope of a <nl> + < li > Java arrays of primitive type and non - direct { @ link java . nio . Buffer } s are only valid for use within the scope of a <nl> single call . If the native code keeps a reference to the memory , use { @ link <nl> - com . sun . jna . Memory } or { @ link java . nio . Buffer } instead . <nl> + com . sun . jna . Memory } or direct { @ link java . nio . ByteBuffer } s instead . <nl> < li > Primitive arrays and structures as members of a structure are overlaid on the parent structure memory . <nl> < li > Bitfields must be manually packed into an integer type . <nl> < li > All other types must eventually be converted to one of the types in the this table . Methods with arguments or return values of types other than these must either use types deriving from { @ link com . sun . jna . NativeMapped } or supply type conversion information for the unsupported types . <nl> @ @ - 280 , 10 + 280 , 14 @ @ The { @ link com . sun . jna . WString } class is used to identify wide character strings <nl> <nl> < a name = " buffers " > < / a > <nl> < h3 > Buffers / Memory Blocks < / h3 > <nl> - Use arrays to represent buffers of primitive types passed to a function for use only during the function invocation . A native method cannot return a Java array , since there is no canonical way to indicate the intended length of the returned array . Instead , use one of the array access methods in the Pointer class , supplying the length of the returned array . < p > <nl> + Use arrays to represent buffers of primitive types passed to a function for use only during the function invocation . If the native code <nl> + keeps a pointer to the memory after the native function returns , use direct { @ link java . nio . ByteBuffer } s or { @ link com . sun . jna . Memory } instead . <nl> + < p > A native method cannot return a Java array , since there is no canonical way to indicate the intended length of the returned array . <nl> + Instead , use one of the array access methods in the Pointer class , supplying the length of the returned array . < p > <nl> { @ link java . nio . Buffer } s may also be used as a memory buffer input <nl> argument ; direct byte buffers can often provide much improved performance over <nl> - primitive arrays . A pointer provided by native code may be converted to a { @ link java . nio . Buffer } by calling { @ link com . sun . jna . Pointer # getByteBuffer } . <nl> + primitive arrays . <nl> + A pointer provided by native code may be converted to a { @ link java . nio . Buffer } by calling { @ link com . sun . jna . Pointer # getByteBuffer } . <nl> < p > <nl> If you need to pass in a subset of a primitive array , you can do so by <nl> wrapping it in a { @ link java . nio . Buffer } subclass , such as { @ link
NEAREST DIFF (one line): diff - - git a / jnalib / build . xml b / jnalib / build . xml <nl> index 2d29e66 . . a37e159 100644 <nl> - - - a / jnalib / build . xml <nl> + + + b / jnalib / build . xml <nl> @ @ - 253 , 6 + 253 , 7 @ @ <nl> < echo > Invalidating native code , new checksum is $ { md5 } < / echo > <nl> < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / darwin . jar " overwrite = " true " / > <nl> < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / win32 - x86 . jar " overwrite = " true " / > <nl> + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / win32 - amd64 . jar " overwrite = " true " / > <nl> < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / linux - i386 . jar " overwrite = " true " / > <nl> < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / linux - amd64 . jar " overwrite = " true " / > <nl> < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / freebsd - i386 . jar " overwrite = " true " / > <nl> @ @ - 553 , 6 + 554 , 9 @ @ <nl> < zipfileset src = " $ { dist } / openbsd - i386 . jar " <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / openbsd - i386 " / > <nl> + < zipfileset src = " $ { dist } / win32 - amd64 . jar " <nl> + includes = " * jnidispatch * " <nl> + prefix = " com / sun / jna / win32 - amd64 " / > <nl> < / jar > <nl> < copy todir = " $ { dist } " > <nl> < fileset dir = " $ { build } " >

TEST DIFF:
diff - - git a / src / com / sun / jna / overview . html b / src / com / sun / jna / overview . html 
 index 5ea4912 . . 2008f44 100644 
 - - - a / src / com / sun / jna / overview . html 
 + + + b / src / com / sun / jna / overview . html 
 @ @ - 200 , 9 + 200 , 9 @ @ Java types must be chosen to match native types of the same size . Following are 
 < li > Java arrays of primitive type may be wrapped by { @ link java . nio . Buffer } in 
 order to access a subset of the array ( changing the effective size and / or 
 offest ) . 
 - < li > Java arrays of primitive type are only valid for use within the scope of a 
 + < li > Java arrays of primitive type and non - direct { @ link java . nio . Buffer } s are only valid for use within the scope of a 
 single call . If the native code keeps a reference to the memory , use { @ link 
 - com . sun . jna . Memory } or { @ link java . nio . Buffer } instead . 
 + com . sun . jna . Memory } or direct { @ link java . nio . ByteBuffer } s instead . 
 < li > Primitive arrays and structures as members of a structure are overlaid on the parent structure memory . 
 < li > Bitfields must be manually packed into an integer type . 
 < li > All other types must eventually be converted to one of the types in the this table . Methods with arguments or return values of types other than these must either use types deriving from { @ link com . sun . jna . NativeMapped } or supply type conversion information for the unsupported types . 
 @ @ - 280 , 10 + 280 , 14 @ @ The { @ link com . sun . jna . WString } class is used to identify wide character strings 
 
 < a name = " buffers " > < / a > 
 < h3 > Buffers / Memory Blocks < / h3 > 
 - Use arrays to represent buffers of primitive types passed to a function for use only during the function invocation . A native method cannot return a Java array , since there is no canonical way to indicate the intended length of the returned array . Instead , use one of the array access methods in the Pointer class , supplying the length of the returned array . < p > 
 + Use arrays to represent buffers of primitive types passed to a function for use only during the function invocation . If the native code 
 + keeps a pointer to the memory after the native function returns , use direct { @ link java . nio . ByteBuffer } s or { @ link com . sun . jna . Memory } instead . 
 + < p > A native method cannot return a Java array , since there is no canonical way to indicate the intended length of the returned array . 
 + Instead , use one of the array access methods in the Pointer class , supplying the length of the returned array . < p > 
 { @ link java . nio . Buffer } s may also be used as a memory buffer input 
 argument ; direct byte buffers can often provide much improved performance over 
 - primitive arrays . A pointer provided by native code may be converted to a { @ link java . nio . Buffer } by calling { @ link com . sun . jna . Pointer # getByteBuffer } . 
 + primitive arrays . 
 + A pointer provided by native code may be converted to a { @ link java . nio . Buffer } by calling { @ link com . sun . jna . Pointer # getByteBuffer } . 
 < p > 
 If you need to pass in a subset of a primitive array , you can do so by 
 wrapping it in a { @ link java . nio . Buffer } subclass , such as { @ link

NEAREST DIFF:
diff - - git a / jnalib / build . xml b / jnalib / build . xml 
 index 2d29e66 . . a37e159 100644 
 - - - a / jnalib / build . xml 
 + + + b / jnalib / build . xml 
 @ @ - 253 , 6 + 253 , 7 @ @ 
 < echo > Invalidating native code , new checksum is $ { md5 } < / echo > 
 < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / darwin . jar " overwrite = " true " / > 
 < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / win32 - x86 . jar " overwrite = " true " / > 
 + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / win32 - amd64 . jar " overwrite = " true " / > 
 < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / linux - i386 . jar " overwrite = " true " / > 
 < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / linux - amd64 . jar " overwrite = " true " / > 
 < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / freebsd - i386 . jar " overwrite = " true " / > 
 @ @ - 553 , 6 + 554 , 9 @ @ 
 < zipfileset src = " $ { dist } / openbsd - i386 . jar " 
 includes = " * jnidispatch * " 
 prefix = " com / sun / jna / openbsd - i386 " / > 
 + < zipfileset src = " $ { dist } / win32 - amd64 . jar " 
 + includes = " * jnidispatch * " 
 + prefix = " com / sun / jna / win32 - amd64 " / > 
 < / jar > 
 < copy todir = " $ { dist } " > 
 < fileset dir = " $ { build } " >
