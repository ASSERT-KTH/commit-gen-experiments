BLEU SCORE: 0.08310415003234632

TEST MSG: Access ComponentPeer reflectively
GENERATED MSG: some changes to support jna 4

TEST DIFF (one line): diff - - git a / contrib / platform / src / com / sun / jna / platform / WindowUtils . java b / contrib / platform / src / com / sun / jna / platform / WindowUtils . java <nl> index 145b350 . . 532dc9c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / WindowUtils . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / WindowUtils . java <nl> @ @ - 1389 , 11 + 1389 , 13 @ @ public class WindowUtils { <nl> whenDisplayable ( w , new Runnable ( ) { <nl> 	 	 	 	 @ Override <nl> public void run ( ) { <nl> - Object peer = w . getPeer ( ) ; <nl> try { <nl> - Class < ? > cls = peer . getClass ( ) ; <nl> - Method m = cls . getMethod ( " setAlpha " , new Class [ ] { float . class } ) ; <nl> - m . invoke ( peer , Float . valueOf ( alpha ) ) ; <nl> + / / This will work with old Apple AWT implementations and <nl> + / / not with openjdk <nl> + Method getPeer = w . getClass ( ) . getMethod ( " getPeer " ) ; <nl> + Object peer = getPeer . invoke ( w ) ; <nl> + Method setAlpha = peer . getClass ( ) . getMethod ( " setAlpha " , new Class [ ] { float . class } ) ; <nl> + setAlpha . invoke ( peer , Float . valueOf ( alpha ) ) ; <nl> } <nl> catch ( Exception e ) { <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / contrib / platform / src / com / sun / jna / platform / WindowUtils . java b / contrib / platform / src / com / sun / jna / platform / WindowUtils . java 
 index 145b350 . . 532dc9c 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / WindowUtils . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / WindowUtils . java 
 @ @ - 1389 , 11 + 1389 , 13 @ @ public class WindowUtils { 
 whenDisplayable ( w , new Runnable ( ) { 
 	 	 	 	 @ Override 
 public void run ( ) { 
 - Object peer = w . getPeer ( ) ; 
 try { 
 - Class < ? > cls = peer . getClass ( ) ; 
 - Method m = cls . getMethod ( " setAlpha " , new Class [ ] { float . class } ) ; 
 - m . invoke ( peer , Float . valueOf ( alpha ) ) ; 
 + / / This will work with old Apple AWT implementations and 
 + / / not with openjdk 
 + Method getPeer = w . getClass ( ) . getMethod ( " getPeer " ) ; 
 + Object peer = getPeer . invoke ( w ) ; 
 + Method setAlpha = peer . getClass ( ) . getMethod ( " setAlpha " , new Class [ ] { float . class } ) ; 
 + setAlpha . invoke ( peer , Float . valueOf ( alpha ) ) ; 
 } 
 catch ( Exception e ) { 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
