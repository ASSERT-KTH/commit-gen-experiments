BLEU SCORE: 0.028465126651392333

TEST MSG: ignore padding bytes when comparing struct data
GENERATED MSG: fixed tests related to 64 - bit alignment

TEST DIFF (one line): diff - - git a / test / com / sun / jna / ArgumentsMarshalTest . java b / test / com / sun / jna / ArgumentsMarshalTest . java <nl> index 9ba07f6 . . d304dda 100644 <nl> - - - a / test / com / sun / jna / ArgumentsMarshalTest . java <nl> + + + b / test / com / sun / jna / ArgumentsMarshalTest . java <nl> @ @ - 565 , 9 + 565 , 9 @ @ public class ArgumentsMarshalTest extends TestCase { <nl> null , <nl> new CheckFieldAlignment . ByReference ( ) , <nl> } ; <nl> - assertTrue ( " Wrong value returned ( 0 ) " , args [ 0 ] . dataEquals ( lib . returnPointerArrayElement ( args , 0 ) ) ) ; <nl> + assertTrue ( " Wrong value returned ( 0 ) " , args [ 0 ] . dataEquals ( lib . returnPointerArrayElement ( args , 0 ) , true ) ) ; <nl> assertNull ( " Wrong value returned ( 1 ) " , lib . returnPointerArrayElement ( args , 1 ) ) ; <nl> - assertTrue ( " Wrong value returned ( 2 ) " , args [ 2 ] . dataEquals ( lib . returnPointerArrayElement ( args , 2 ) ) ) ; <nl> + assertTrue ( " Wrong value returned ( 2 ) " , args [ 2 ] . dataEquals ( lib . returnPointerArrayElement ( args , 2 ) , true ) ) ; <nl> assertNull ( " Native array should be null terminated " , lib . returnPointerArrayElement ( args , 3 ) ) ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / test / com / sun / jna / DirectTest . java b / test / com / sun / jna / DirectTest . java <nl> index f1df50b . . 4c3bd3c 100644 <nl> - - - a / test / com / sun / jna / DirectTest . java <nl> + + + b / test / com / sun / jna / DirectTest . java <nl> @ @ - 110 , 15 + 110 , 19 @ @ public class DirectTest extends TestCase { <nl> <nl> private static class TestLoader extends URLClassLoader { <nl> public TestLoader ( ) throws MalformedURLException { <nl> - super ( new URL [ ] { <nl> - new File ( BUILDDIR + " / classes " ) . toURI ( ) . toURL ( ) , <nl> - new File ( BUILDDIR + " / test - classes " ) . toURI ( ) . toURL ( ) , <nl> - } , null ) ; <nl> + super ( Platform . isWindowsCE ( ) <nl> + ? new URL [ ] { <nl> + new File ( " / Storage Card / test . jar " ) . toURI ( ) . toURL ( ) <nl> + } <nl> + : new URL [ ] { <nl> + new File ( BUILDDIR + " / classes " ) . toURI ( ) . toURL ( ) , <nl> + new File ( BUILDDIR + " / test - classes " ) . toURI ( ) . toURL ( ) , <nl> + } , null ) ; <nl> } <nl> } <nl> <nl> / / wce class loading path <nl> - public void XFAIL _ WCE _ testRegisterMethods ( ) throws Exception { <nl> + public void testRegisterMethods ( ) throws Exception { <nl> / / Use a dedicated class loader to ensure the class can be gc ' d <nl> String name = " com . sun . jna . DirectTest $ MathLibrary " ; <nl> ClassLoader loader = new TestLoader ( ) ; <nl> diff - - git a / test / com / sun / jna / NativeTest . java b / test / com / sun / jna / NativeTest . java <nl> index 8453c3b . . 8085a83 100644 <nl> - - - a / test / com / sun / jna / NativeTest . java <nl> + + + b / test / com / sun / jna / NativeTest . java <nl> @ @ - 347 , 7 + 347 , 6 @ @ public class NativeTest extends TestCase { <nl> " com . sun . jna . CallbacksTest " , <nl> " com . sun . jna . JNAUnloadTest " , <nl> " com . sun . jna . DirectTest " , <nl> - / / not yet tested <nl> " com . sun . jna . DirectArgumentsMarshalTest " , <nl> " com . sun . jna . DirectByReferenceArgumentsTest " , <nl> " com . sun . jna . DirectTypeMapperTest " ,

TEST DIFF:
diff - - git a / test / com / sun / jna / ArgumentsMarshalTest . java b / test / com / sun / jna / ArgumentsMarshalTest . java 
 index 9ba07f6 . . d304dda 100644 
 - - - a / test / com / sun / jna / ArgumentsMarshalTest . java 
 + + + b / test / com / sun / jna / ArgumentsMarshalTest . java 
 @ @ - 565 , 9 + 565 , 9 @ @ public class ArgumentsMarshalTest extends TestCase { 
 null , 
 new CheckFieldAlignment . ByReference ( ) , 
 } ; 
 - assertTrue ( " Wrong value returned ( 0 ) " , args [ 0 ] . dataEquals ( lib . returnPointerArrayElement ( args , 0 ) ) ) ; 
 + assertTrue ( " Wrong value returned ( 0 ) " , args [ 0 ] . dataEquals ( lib . returnPointerArrayElement ( args , 0 ) , true ) ) ; 
 assertNull ( " Wrong value returned ( 1 ) " , lib . returnPointerArrayElement ( args , 1 ) ) ; 
 - assertTrue ( " Wrong value returned ( 2 ) " , args [ 2 ] . dataEquals ( lib . returnPointerArrayElement ( args , 2 ) ) ) ; 
 + assertTrue ( " Wrong value returned ( 2 ) " , args [ 2 ] . dataEquals ( lib . returnPointerArrayElement ( args , 2 ) , true ) ) ; 
 assertNull ( " Native array should be null terminated " , lib . returnPointerArrayElement ( args , 3 ) ) ; 
 } 


NEAREST DIFF:
diff - - git a / test / com / sun / jna / DirectTest . java b / test / com / sun / jna / DirectTest . java 
 index f1df50b . . 4c3bd3c 100644 
 - - - a / test / com / sun / jna / DirectTest . java 
 + + + b / test / com / sun / jna / DirectTest . java 
 @ @ - 110 , 15 + 110 , 19 @ @ public class DirectTest extends TestCase { 
 
 private static class TestLoader extends URLClassLoader { 
 public TestLoader ( ) throws MalformedURLException { 
 - super ( new URL [ ] { 
 - new File ( BUILDDIR + " / classes " ) . toURI ( ) . toURL ( ) , 
 - new File ( BUILDDIR + " / test - classes " ) . toURI ( ) . toURL ( ) , 
 - } , null ) ; 
 + super ( Platform . isWindowsCE ( ) 
 + ? new URL [ ] { 
 + new File ( " / Storage Card / test . jar " ) . toURI ( ) . toURL ( ) 
 + } 
 + : new URL [ ] { 
 + new File ( BUILDDIR + " / classes " ) . toURI ( ) . toURL ( ) , 
 + new File ( BUILDDIR + " / test - classes " ) . toURI ( ) . toURL ( ) , 
 + } , null ) ; 
 } 
 } 
 
 / / wce class loading path 
 - public void XFAIL _ WCE _ testRegisterMethods ( ) throws Exception { 
 + public void testRegisterMethods ( ) throws Exception { 
 / / Use a dedicated class loader to ensure the class can be gc ' d 
 String name = " com . sun . jna . DirectTest $ MathLibrary " ; 
 ClassLoader loader = new TestLoader ( ) ; 
 diff - - git a / test / com / sun / jna / NativeTest . java b / test / com / sun / jna / NativeTest . java 
 index 8453c3b . . 8085a83 100644 
 - - - a / test / com / sun / jna / NativeTest . java 
 + + + b / test / com / sun / jna / NativeTest . java 
 @ @ - 347 , 7 + 347 , 6 @ @ public class NativeTest extends TestCase { 
 " com . sun . jna . CallbacksTest " , 
 " com . sun . jna . JNAUnloadTest " , 
 " com . sun . jna . DirectTest " , 
 - / / not yet tested 
 " com . sun . jna . DirectArgumentsMarshalTest " , 
 " com . sun . jna . DirectByReferenceArgumentsTest " , 
 " com . sun . jna . DirectTypeMapperTest " ,
