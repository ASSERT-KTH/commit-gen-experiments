BLEU SCORE: 0.1353352832366127

TEST MSG: some changes
GENERATED MSG: some changes regarding right structure size

TEST DIFF (one line): diff - - git a / . classpath b / . classpath <nl> index 072ed7a . . 02f4747 100644 <nl> - - - a / . classpath <nl> + + + b / . classpath <nl> @ @ - 7 , 6 + 7 , 6 @ @ <nl> 	 < classpathentry kind = " con " path = " org . eclipse . jdt . launching . JRE _ CONTAINER " / > <nl> 	 < classpathentry kind = " con " path = " org . eclipse . jdt . junit . JUNIT _ CONTAINER / 3 " / > <nl> 	 < classpathentry kind = " lib " path = " lib / test / reflections - 0 . 9 . 8 . jar " / > <nl> - 	 < classpathentry kind = " lib " path = " C : / GitHub / jna - 4 . 0 . 0 . jar " sourcepath = " " / > <nl> + 	 < classpathentry kind = " var " path = " JNA _ LIB " / > <nl> 	 < classpathentry kind = " output " path = " build . eclipse / classes " / > <nl> < / classpath > <nl> diff - - git a / . settings / org . eclipse . jdt . core . prefs b / . settings / org . eclipse . jdt . core . prefs <nl> deleted file mode 100644 <nl> index ac99b29 . . 0000000 <nl> - - - a / . settings / org . eclipse . jdt . core . prefs <nl> + + + / dev / null <nl> @ @ - 1 , 62 + 0 , 0 @ @ <nl> - # Wed Aug 29 20 : 43 : 29 EDT 2007 <nl> - eclipse . preferences . version = 1 <nl> - org . eclipse . jdt . core . compiler . codegen . inlineJsrBytecode = enabled <nl> - org . eclipse . jdt . core . compiler . codegen . targetPlatform = 1 . 5 <nl> - org . eclipse . jdt . core . compiler . codegen . unusedLocal = preserve <nl> - org . eclipse . jdt . core . compiler . compliance = 1 . 5 <nl> - org . eclipse . jdt . core . compiler . debug . lineNumber = generate <nl> - org . eclipse . jdt . core . compiler . debug . localVariable = generate <nl> - org . eclipse . jdt . core . compiler . debug . sourceFile = generate <nl> - org . eclipse . jdt . core . compiler . problem . annotationSuperInterface = warning <nl> - org . eclipse . jdt . core . compiler . problem . assertIdentifier = error <nl> - org . eclipse . jdt . core . compiler . problem . autoboxing = ignore <nl> - org . eclipse . jdt . core . compiler . problem . deprecation = warning <nl> - org . eclipse . jdt . core . compiler . problem . deprecationInDeprecatedCode = disabled <nl> - org . eclipse . jdt . core . compiler . problem . deprecationWhenOverridingDeprecatedMethod = enabled <nl> - org . eclipse . jdt . core . compiler . problem . discouragedReference = warning <nl> - org . eclipse . jdt . core . compiler . problem . emptyStatement = ignore <nl> - org . eclipse . jdt . core . compiler . problem . enumIdentifier = error <nl> - org . eclipse . jdt . core . compiler . problem . fallthroughCase = ignore <nl> - org . eclipse . jdt . core . compiler . problem . fieldHiding = ignore <nl> - org . eclipse . jdt . core . compiler . problem . finalParameterBound = warning <nl> - org . eclipse . jdt . core . compiler . problem . finallyBlockNotCompletingNormally = warning <nl> - org . eclipse . jdt . core . compiler . problem . forbiddenReference = error <nl> - org . eclipse . jdt . core . compiler . problem . hiddenCatchBlock = warning <nl> - org . eclipse . jdt . core . compiler . problem . incompatibleNonInheritedInterfaceMethod = warning <nl> - org . eclipse . jdt . core . compiler . problem . incompleteEnumSwitch = ignore <nl> - org . eclipse . jdt . core . compiler . problem . indirectStaticAccess = ignore <nl> - org . eclipse . jdt . core . compiler . problem . localVariableHiding = ignore <nl> - org . eclipse . jdt . core . compiler . problem . methodWithConstructorName = warning <nl> - org . eclipse . jdt . core . compiler . problem . missingDeprecatedAnnotation = ignore <nl> - org . eclipse . jdt . core . compiler . problem . missingOverrideAnnotation = ignore <nl> - org . eclipse . jdt . core . compiler . problem . missingSerialVersion = ignore <nl> - org . eclipse . jdt . core . compiler . problem . noEffectAssignment = warning <nl> - org . eclipse . jdt . core . compiler . problem . noImplicitStringConversion = warning <nl> - org . eclipse . jdt . core . compiler . problem . nonExternalizedStringLiteral = ignore <nl> - org . eclipse . jdt . core . compiler . problem . nullReference = ignore <nl> - org . eclipse . jdt . core . compiler . problem . overridingPackageDefaultMethod = warning <nl> - org . eclipse . jdt . core . compiler . problem . parameterAssignment = ignore <nl> - org . eclipse . jdt . core . compiler . problem . possibleAccidentalBooleanAssignment = ignore <nl> - org . eclipse . jdt . core . compiler . problem . rawTypeReference = ignore <nl> - org . eclipse . jdt . core . compiler . problem . specialParameterHidingField = disabled <nl> - org . eclipse . jdt . core . compiler . problem . staticAccessReceiver = ignore <nl> - org . eclipse . jdt . core . compiler . problem . suppressWarnings = enabled <nl> - org . eclipse . jdt . core . compiler . problem . syntheticAccessEmulation = ignore <nl> - org . eclipse . jdt . core . compiler . problem . typeParameterHiding = warning <nl> - org . eclipse . jdt . core . compiler . problem . uncheckedTypeOperation = ignore <nl> - org . eclipse . jdt . core . compiler . problem . undocumentedEmptyBlock = ignore <nl> - org . eclipse . jdt . core . compiler . problem . unhandledWarningToken = warning <nl> - org . eclipse . jdt . core . compiler . problem . unnecessaryElse = ignore <nl> - org . eclipse . jdt . core . compiler . problem . unnecessaryTypeCheck = warning <nl> - org . eclipse . jdt . core . compiler . problem . unqualifiedFieldAccess = ignore <nl> - org . eclipse . jdt . core . compiler . problem . unusedDeclaredThrownException = ignore <nl> - org . eclipse . jdt . core . compiler . problem . unusedDeclaredThrownExceptionWhenOverriding = enabled <nl> - org . eclipse . jdt . core . compiler . problem . unusedImport = ignore <nl> - org . eclipse . jdt . core . compiler . problem . unusedLabel = warning <nl> - org . eclipse . jdt . core . compiler . problem . unusedLocal = warning <nl> - org . eclipse . jdt . core . compiler . problem . unusedParameter = ignore <nl> - org . eclipse . jdt . core . compiler . problem . unusedParameterWhenImplementingAbstract = disabled <nl> - org . eclipse . jdt . core . compiler . problem . unusedParameterWhenOverridingConcrete = disabled <nl> - org . eclipse . jdt . core . compiler . problem . unusedPrivateMember = warning <nl> - org . eclipse . jdt . core . compiler . problem . varargsArgumentNeedCast = warning <nl> - org . eclipse . jdt . core . compiler . source = 1 . 5 <nl> diff - - git a / . settings / org . eclipse . ltk . core . refactoring . prefs b / . settings / org . eclipse . ltk . core . refactoring . prefs <nl> deleted file mode 100644 <nl> index bdbdc6d . . 0000000 <nl> - - - a / . settings / org . eclipse . ltk . core . refactoring . prefs <nl> + + + / dev / null <nl> @ @ - 1 , 3 + 0 , 0 @ @ <nl> - # Tue Mar 27 21 : 18 : 08 EDT 2007 <nl> - eclipse . preferences . version = 1 <nl> - org . eclipse . ltk . core . refactoring . enable . project . refactoring . history = false <nl> diff - - git a / contrib / msoffice / . classpath b / contrib / msoffice / . classpath <nl> index 20091ab . . 8648c07 100644 <nl> - - - a / contrib / msoffice / . classpath <nl> + + + b / contrib / msoffice / . classpath <nl> @ @ - 3 , 6 + 3 , 6 @ @ <nl> 	 < classpathentry kind = " src " path = " src " / > <nl> 	 < classpathentry kind = " con " path = " org . eclipse . jdt . launching . JRE _ CONTAINER / org . eclipse . jdt . internal . debug . ui . launcher . StandardVMType / JavaSE - 1 . 7 " / > <nl> 	 < classpathentry combineaccessrules = " false " kind = " src " path = " / jnalib " / > <nl> - 	 < classpathentry kind = " lib " path = " C : / GitHub / jna - 4 . 0 . 0 . jar " sourcepath = " / jnalib " / > <nl> + 	 < classpathentry kind = " var " path = " JNA _ LIB " / > <nl> 	 < classpathentry kind = " output " path = " bin " / > <nl> < / classpath > <nl> diff - - git a / contrib / msoffice / . settings / org . eclipse . core . resources . prefs b / contrib / msoffice / . settings / org . eclipse . core . resources . prefs <nl> deleted file mode 100644 <nl> index 9f69f01 . . 0000000 <nl> - - - a / contrib / msoffice / . settings / org . eclipse . core . resources . prefs <nl> + + + / dev / null <nl> @ @ - 1 , 2 + 0 , 0 @ @ <nl> - eclipse . preferences . version = 1 <nl> - encoding / / src / com / sun / jna / platform / win32 / office / MSWord . java = UTF - 8 <nl> diff - - git a / contrib / msoffice / . settings / org . eclipse . ltk . core . refactoring . prefs b / contrib / msoffice / . settings / org . eclipse . ltk . core . refactoring . prefs <nl> deleted file mode 100644 <nl> index b196c64 . . 0000000 <nl> - - - a / contrib / msoffice / . settings / org . eclipse . ltk . core . refactoring . prefs <nl> + + + / dev / null <nl> @ @ - 1 , 2 + 0 , 0 @ @ <nl> - eclipse . preferences . version = 1 <nl> - org . eclipse . ltk . core . refactoring . enable . project . refactoring . history = false <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> index 904146e . . bed397a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java <nl> @ @ - 36 , 9 + 36 , 6 @ @ public class COMEarlyBindingObject extends Dispatch { <nl> <nl> public COMEarlyBindingObject ( CLSID clsid , boolean useActiveInstance , <nl> int dwClsContext ) { <nl> - / / enable JNA protected mode <nl> - Native . setProtected ( true ) ; <nl> - <nl> / / Initialize COM for this thread . . . <nl> HRESULT hr = Ole32 . INSTANCE . CoInitialize ( null ) ; <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingBaseObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingBaseObject . java <nl> index 6a0398b . . c7460e2 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingBaseObject . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingBaseObject . java <nl> @ @ - 62 , 8 + 62 , 6 @ @ public class COMLateBindingBaseObject extends COMInvoker { <nl> private PointerByReference pUnknown = new PointerByReference ( ) ; <nl> <nl> public COMLateBindingBaseObject ( IDispatch dispatch ) { <nl> - / / enable JNA protected mode <nl> - Native . setProtected ( true ) ; <nl> / / transfer the value <nl> this . iDispatch = dispatch ; <nl> } <nl> @ @ - 74 , 9 + 72 , 6 @ @ public class COMLateBindingBaseObject extends COMInvoker { <nl> <nl> public COMLateBindingBaseObject ( CLSID clsid , boolean useActiveInstance , <nl> int dwClsContext ) { <nl> - / / enable JNA protected mode <nl> - Native . setProtected ( true ) ; <nl> - <nl> / / Initialize COM for this thread . . . <nl> HRESULT hr = Ole32 . INSTANCE . CoInitialize ( null ) ; <nl> <nl> @ @ - 116 , 9 + 111 , 6 @ @ public class COMLateBindingBaseObject extends COMInvoker { <nl> <nl> public COMLateBindingBaseObject ( String progId , boolean useActiveInstance , <nl> int dwClsContext ) throws COMException { <nl> - / / enable JNA protected mode <nl> - Native . setProtected ( true ) ; <nl> - <nl> / / Initialize COM for this thread . . . <nl> HRESULT hr = Ole32 . INSTANCE . CoInitialize ( null ) ; <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> index 715820c . . 992f0aa 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> @ @ - 61 , 7 + 61 , 6 @ @ public class TlbImp implements TlbConst { <nl> } <nl> <nl> public TlbImp ( String [ ] args ) { <nl> - Native . setProtected ( true ) ; <nl> this . cmdlineArgs = new TlbCmdlineArgs ( args ) ; <nl> <nl> if ( this . cmdlineArgs . isTlbId ( ) ) { <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java <nl> index 4e022a6 . . f13d669 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java <nl> @ @ - 37 , 7 + 37 , 6 @ @ public class COMTest extends TestCase { <nl> 	 } <nl> <nl> 	 public COMTest ( ) { <nl> - 	 	 Native . setProtected ( true ) ; <nl> 	 } <nl> <nl> 	 @ Override <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> index 74dd254 . . ac5ae3a 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java <nl> @ @ - 39 , 7 + 39 , 6 @ @ public class ITypeInfoTest extends TestCase { <nl> } <nl> <nl> public ITypeInfoTest ( ) { <nl> - Native . setProtected ( true ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java <nl> index 2a32b48 . . 8e585cb 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java <nl> @ @ - 40 , 7 + 40 , 6 @ @ public class ITypeLibTest extends TestCase { <nl> } <nl> <nl> public ITypeLibTest ( ) { <nl> - Native . setProtected ( true ) ; <nl> } <nl> <nl> private ITypeLib loadShellTypeLib ( ) { <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / IUnknownTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / IUnknownTest . java <nl> index b57bb67 . . b86d91c 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / IUnknownTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / IUnknownTest . java <nl> @ @ - 33 , 8 + 33 , 6 @ @ public class IUnknownTest extends TestCase { <nl> 	 @ Override <nl> 	 protected void setUp ( ) throws Exception { <nl> 	 	 super . setUp ( ) ; <nl> - <nl> - 	 	 Native . setProtected ( true ) ; <nl> 	 	 System . out . println ( " JNA protected mode : " + Native . isProtected ( ) ) ; <nl> <nl> 	 	 / / Initialize COM for this thread . . . <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java <nl> index c312f38 . . 749aa4b 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java <nl> @ @ - 31 , 12 + 31 , 10 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> public class OleAutoTest extends TestCase { <nl> <nl> 	 public static void main ( String [ ] args ) { <nl> - 	 	 Native . setProtected ( true ) ; <nl> 	 	 junit . textui . TestRunner . run ( OleAutoTest . class ) ; <nl> 	 } <nl> <nl> 	 public OleAutoTest ( ) { <nl> - 	 	 Native . setProtected ( true ) ; <nl> 	 } <nl> <nl> 	 public void testSysAllocString ( ) { <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java <nl> index 0a1460f . . 9d82e26 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java <nl> @ @ - 17 , 7 + 17 , 6 @ @ public class VariantTest extends TestCase { <nl> 	 } <nl> <nl> 	 public VariantTest ( ) { <nl> - 	 	 Native . setProtected ( true ) ; <nl> 	 } <nl> <nl> 	 public void testVariantClear ( ) {
NEAREST DIFF (one line): diff - - git a / www / FrequentlyAskedQuestions . md b / www / FrequentlyAskedQuestions . md <nl> index e0c7e80 . . 25f39d1 100644 <nl> - - - a / www / FrequentlyAskedQuestions . md <nl> + + + b / www / FrequentlyAskedQuestions . md <nl> @ @ - 46 , 13 + 46 , 15 @ @ Find your corresponding native declaration below : <nl> / / Field is a pointer to an array of struct <nl> typedef struct _ outerstruct5 { <nl> simplestruct * ptr _ to _ array ; / / use Structure . ByReference , and use <nl> - / / Structure . toArray ( ) to allocate the array <nl> + / / Structure . toArray ( ) to allocate the array , <nl> + / / then assign the first array element to the field <nl> } outerstruct5 ; <nl> <nl> / / struct pointers as return value or argument <nl> - / / use Structure <nl> - outerstruct * myfunc ( ) ; <nl> - void myfunc ( outerstruct * data ) ; <nl> + simplestruct * myfunc ( ) ; / / use Structure <nl> + void myfunc ( simplestruct * data ) ; <nl> + void myfunc ( simplestruct * data _ array , int count ) ; / / use Structure [ ] , and use Structure . toArray ( ) to generate the array <nl> + void myfunc ( simplestruct * * data _ array , int count ) ; / / use Structure . ByReference [ ] <nl> <nl> / / struct ( by value ) as return value or argument <nl> / / use Structure . ByValue

TEST DIFF:
diff - - git a / . classpath b / . classpath 
 index 072ed7a . . 02f4747 100644 
 - - - a / . classpath 
 + + + b / . classpath 
 @ @ - 7 , 6 + 7 , 6 @ @ 
 	 < classpathentry kind = " con " path = " org . eclipse . jdt . launching . JRE _ CONTAINER " / > 
 	 < classpathentry kind = " con " path = " org . eclipse . jdt . junit . JUNIT _ CONTAINER / 3 " / > 
 	 < classpathentry kind = " lib " path = " lib / test / reflections - 0 . 9 . 8 . jar " / > 
 - 	 < classpathentry kind = " lib " path = " C : / GitHub / jna - 4 . 0 . 0 . jar " sourcepath = " " / > 
 + 	 < classpathentry kind = " var " path = " JNA _ LIB " / > 
 	 < classpathentry kind = " output " path = " build . eclipse / classes " / > 
 < / classpath > 
 diff - - git a / . settings / org . eclipse . jdt . core . prefs b / . settings / org . eclipse . jdt . core . prefs 
 deleted file mode 100644 
 index ac99b29 . . 0000000 
 - - - a / . settings / org . eclipse . jdt . core . prefs 
 + + + / dev / null 
 @ @ - 1 , 62 + 0 , 0 @ @ 
 - # Wed Aug 29 20 : 43 : 29 EDT 2007 
 - eclipse . preferences . version = 1 
 - org . eclipse . jdt . core . compiler . codegen . inlineJsrBytecode = enabled 
 - org . eclipse . jdt . core . compiler . codegen . targetPlatform = 1 . 5 
 - org . eclipse . jdt . core . compiler . codegen . unusedLocal = preserve 
 - org . eclipse . jdt . core . compiler . compliance = 1 . 5 
 - org . eclipse . jdt . core . compiler . debug . lineNumber = generate 
 - org . eclipse . jdt . core . compiler . debug . localVariable = generate 
 - org . eclipse . jdt . core . compiler . debug . sourceFile = generate 
 - org . eclipse . jdt . core . compiler . problem . annotationSuperInterface = warning 
 - org . eclipse . jdt . core . compiler . problem . assertIdentifier = error 
 - org . eclipse . jdt . core . compiler . problem . autoboxing = ignore 
 - org . eclipse . jdt . core . compiler . problem . deprecation = warning 
 - org . eclipse . jdt . core . compiler . problem . deprecationInDeprecatedCode = disabled 
 - org . eclipse . jdt . core . compiler . problem . deprecationWhenOverridingDeprecatedMethod = enabled 
 - org . eclipse . jdt . core . compiler . problem . discouragedReference = warning 
 - org . eclipse . jdt . core . compiler . problem . emptyStatement = ignore 
 - org . eclipse . jdt . core . compiler . problem . enumIdentifier = error 
 - org . eclipse . jdt . core . compiler . problem . fallthroughCase = ignore 
 - org . eclipse . jdt . core . compiler . problem . fieldHiding = ignore 
 - org . eclipse . jdt . core . compiler . problem . finalParameterBound = warning 
 - org . eclipse . jdt . core . compiler . problem . finallyBlockNotCompletingNormally = warning 
 - org . eclipse . jdt . core . compiler . problem . forbiddenReference = error 
 - org . eclipse . jdt . core . compiler . problem . hiddenCatchBlock = warning 
 - org . eclipse . jdt . core . compiler . problem . incompatibleNonInheritedInterfaceMethod = warning 
 - org . eclipse . jdt . core . compiler . problem . incompleteEnumSwitch = ignore 
 - org . eclipse . jdt . core . compiler . problem . indirectStaticAccess = ignore 
 - org . eclipse . jdt . core . compiler . problem . localVariableHiding = ignore 
 - org . eclipse . jdt . core . compiler . problem . methodWithConstructorName = warning 
 - org . eclipse . jdt . core . compiler . problem . missingDeprecatedAnnotation = ignore 
 - org . eclipse . jdt . core . compiler . problem . missingOverrideAnnotation = ignore 
 - org . eclipse . jdt . core . compiler . problem . missingSerialVersion = ignore 
 - org . eclipse . jdt . core . compiler . problem . noEffectAssignment = warning 
 - org . eclipse . jdt . core . compiler . problem . noImplicitStringConversion = warning 
 - org . eclipse . jdt . core . compiler . problem . nonExternalizedStringLiteral = ignore 
 - org . eclipse . jdt . core . compiler . problem . nullReference = ignore 
 - org . eclipse . jdt . core . compiler . problem . overridingPackageDefaultMethod = warning 
 - org . eclipse . jdt . core . compiler . problem . parameterAssignment = ignore 
 - org . eclipse . jdt . core . compiler . problem . possibleAccidentalBooleanAssignment = ignore 
 - org . eclipse . jdt . core . compiler . problem . rawTypeReference = ignore 
 - org . eclipse . jdt . core . compiler . problem . specialParameterHidingField = disabled 
 - org . eclipse . jdt . core . compiler . problem . staticAccessReceiver = ignore 
 - org . eclipse . jdt . core . compiler . problem . suppressWarnings = enabled 
 - org . eclipse . jdt . core . compiler . problem . syntheticAccessEmulation = ignore 
 - org . eclipse . jdt . core . compiler . problem . typeParameterHiding = warning 
 - org . eclipse . jdt . core . compiler . problem . uncheckedTypeOperation = ignore 
 - org . eclipse . jdt . core . compiler . problem . undocumentedEmptyBlock = ignore 
 - org . eclipse . jdt . core . compiler . problem . unhandledWarningToken = warning 
 - org . eclipse . jdt . core . compiler . problem . unnecessaryElse = ignore 
 - org . eclipse . jdt . core . compiler . problem . unnecessaryTypeCheck = warning 
 - org . eclipse . jdt . core . compiler . problem . unqualifiedFieldAccess = ignore 
 - org . eclipse . jdt . core . compiler . problem . unusedDeclaredThrownException = ignore 
 - org . eclipse . jdt . core . compiler . problem . unusedDeclaredThrownExceptionWhenOverriding = enabled 
 - org . eclipse . jdt . core . compiler . problem . unusedImport = ignore 
 - org . eclipse . jdt . core . compiler . problem . unusedLabel = warning 
 - org . eclipse . jdt . core . compiler . problem . unusedLocal = warning 
 - org . eclipse . jdt . core . compiler . problem . unusedParameter = ignore 
 - org . eclipse . jdt . core . compiler . problem . unusedParameterWhenImplementingAbstract = disabled 
 - org . eclipse . jdt . core . compiler . problem . unusedParameterWhenOverridingConcrete = disabled 
 - org . eclipse . jdt . core . compiler . problem . unusedPrivateMember = warning 
 - org . eclipse . jdt . core . compiler . problem . varargsArgumentNeedCast = warning 
 - org . eclipse . jdt . core . compiler . source = 1 . 5 
 diff - - git a / . settings / org . eclipse . ltk . core . refactoring . prefs b / . settings / org . eclipse . ltk . core . refactoring . prefs 
 deleted file mode 100644 
 index bdbdc6d . . 0000000 
 - - - a / . settings / org . eclipse . ltk . core . refactoring . prefs 
 + + + / dev / null 
 @ @ - 1 , 3 + 0 , 0 @ @ 
 - # Tue Mar 27 21 : 18 : 08 EDT 2007 
 - eclipse . preferences . version = 1 
 - org . eclipse . ltk . core . refactoring . enable . project . refactoring . history = false 
 diff - - git a / contrib / msoffice / . classpath b / contrib / msoffice / . classpath 
 index 20091ab . . 8648c07 100644 
 - - - a / contrib / msoffice / . classpath 
 + + + b / contrib / msoffice / . classpath 
 @ @ - 3 , 6 + 3 , 6 @ @ 
 	 < classpathentry kind = " src " path = " src " / > 
 	 < classpathentry kind = " con " path = " org . eclipse . jdt . launching . JRE _ CONTAINER / org . eclipse . jdt . internal . debug . ui . launcher . StandardVMType / JavaSE - 1 . 7 " / > 
 	 < classpathentry combineaccessrules = " false " kind = " src " path = " / jnalib " / > 
 - 	 < classpathentry kind = " lib " path = " C : / GitHub / jna - 4 . 0 . 0 . jar " sourcepath = " / jnalib " / > 
 + 	 < classpathentry kind = " var " path = " JNA _ LIB " / > 
 	 < classpathentry kind = " output " path = " bin " / > 
 < / classpath > 
 diff - - git a / contrib / msoffice / . settings / org . eclipse . core . resources . prefs b / contrib / msoffice / . settings / org . eclipse . core . resources . prefs 
 deleted file mode 100644 
 index 9f69f01 . . 0000000 
 - - - a / contrib / msoffice / . settings / org . eclipse . core . resources . prefs 
 + + + / dev / null 
 @ @ - 1 , 2 + 0 , 0 @ @ 
 - eclipse . preferences . version = 1 
 - encoding / / src / com / sun / jna / platform / win32 / office / MSWord . java = UTF - 8 
 diff - - git a / contrib / msoffice / . settings / org . eclipse . ltk . core . refactoring . prefs b / contrib / msoffice / . settings / org . eclipse . ltk . core . refactoring . prefs 
 deleted file mode 100644 
 index b196c64 . . 0000000 
 - - - a / contrib / msoffice / . settings / org . eclipse . ltk . core . refactoring . prefs 
 + + + / dev / null 
 @ @ - 1 , 2 + 0 , 0 @ @ 
 - eclipse . preferences . version = 1 
 - org . eclipse . ltk . core . refactoring . enable . project . refactoring . history = false 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java 
 index 904146e . . bed397a 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMEarlyBindingObject . java 
 @ @ - 36 , 9 + 36 , 6 @ @ public class COMEarlyBindingObject extends Dispatch { 
 
 public COMEarlyBindingObject ( CLSID clsid , boolean useActiveInstance , 
 int dwClsContext ) { 
 - / / enable JNA protected mode 
 - Native . setProtected ( true ) ; 
 - 
 / / Initialize COM for this thread . . . 
 HRESULT hr = Ole32 . INSTANCE . CoInitialize ( null ) ; 
 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingBaseObject . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingBaseObject . java 
 index 6a0398b . . c7460e2 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingBaseObject . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / COMLateBindingBaseObject . java 
 @ @ - 62 , 8 + 62 , 6 @ @ public class COMLateBindingBaseObject extends COMInvoker { 
 private PointerByReference pUnknown = new PointerByReference ( ) ; 
 
 public COMLateBindingBaseObject ( IDispatch dispatch ) { 
 - / / enable JNA protected mode 
 - Native . setProtected ( true ) ; 
 / / transfer the value 
 this . iDispatch = dispatch ; 
 } 
 @ @ - 74 , 9 + 72 , 6 @ @ public class COMLateBindingBaseObject extends COMInvoker { 
 
 public COMLateBindingBaseObject ( CLSID clsid , boolean useActiveInstance , 
 int dwClsContext ) { 
 - / / enable JNA protected mode 
 - Native . setProtected ( true ) ; 
 - 
 / / Initialize COM for this thread . . . 
 HRESULT hr = Ole32 . INSTANCE . CoInitialize ( null ) ; 
 
 @ @ - 116 , 9 + 111 , 6 @ @ public class COMLateBindingBaseObject extends COMInvoker { 
 
 public COMLateBindingBaseObject ( String progId , boolean useActiveInstance , 
 int dwClsContext ) throws COMException { 
 - / / enable JNA protected mode 
 - Native . setProtected ( true ) ; 
 - 
 / / Initialize COM for this thread . . . 
 HRESULT hr = Ole32 . INSTANCE . CoInitialize ( null ) ; 
 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java 
 index 715820c . . 992f0aa 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java 
 @ @ - 61 , 7 + 61 , 6 @ @ public class TlbImp implements TlbConst { 
 } 
 
 public TlbImp ( String [ ] args ) { 
 - Native . setProtected ( true ) ; 
 this . cmdlineArgs = new TlbCmdlineArgs ( args ) ; 
 
 if ( this . cmdlineArgs . isTlbId ( ) ) { 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java 
 index 4e022a6 . . f13d669 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / COMTest . java 
 @ @ - 37 , 7 + 37 , 6 @ @ public class COMTest extends TestCase { 
 	 } 
 
 	 public COMTest ( ) { 
 - 	 	 Native . setProtected ( true ) ; 
 	 } 
 
 	 @ Override 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java 
 index 74dd254 . . ac5ae3a 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeInfoTest . java 
 @ @ - 39 , 7 + 39 , 6 @ @ public class ITypeInfoTest extends TestCase { 
 } 
 
 public ITypeInfoTest ( ) { 
 - Native . setProtected ( true ) ; 
 } 
 
 @ Override 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java 
 index 2a32b48 . . 8e585cb 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / ITypeLibTest . java 
 @ @ - 40 , 7 + 40 , 6 @ @ public class ITypeLibTest extends TestCase { 
 } 
 
 public ITypeLibTest ( ) { 
 - Native . setProtected ( true ) ; 
 } 
 
 private ITypeLib loadShellTypeLib ( ) { 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / IUnknownTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / IUnknownTest . java 
 index b57bb67 . . b86d91c 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / IUnknownTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / IUnknownTest . java 
 @ @ - 33 , 8 + 33 , 6 @ @ public class IUnknownTest extends TestCase { 
 	 @ Override 
 	 protected void setUp ( ) throws Exception { 
 	 	 super . setUp ( ) ; 
 - 
 - 	 	 Native . setProtected ( true ) ; 
 	 	 System . out . println ( " JNA protected mode : " + Native . isProtected ( ) ) ; 
 
 	 	 / / Initialize COM for this thread . . . 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java 
 index c312f38 . . 749aa4b 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / OleAutoTest . java 
 @ @ - 31 , 12 + 31 , 10 @ @ import com . sun . jna . ptr . PointerByReference ; 
 public class OleAutoTest extends TestCase { 
 
 	 public static void main ( String [ ] args ) { 
 - 	 	 Native . setProtected ( true ) ; 
 	 	 junit . textui . TestRunner . run ( OleAutoTest . class ) ; 
 	 } 
 
 	 public OleAutoTest ( ) { 
 - 	 	 Native . setProtected ( true ) ; 
 	 } 
 
 	 public void testSysAllocString ( ) { 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java 
 index 0a1460f . . 9d82e26 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / VariantTest . java 
 @ @ - 17 , 7 + 17 , 6 @ @ public class VariantTest extends TestCase { 
 	 } 
 
 	 public VariantTest ( ) { 
 - 	 	 Native . setProtected ( true ) ; 
 	 } 
 
 	 public void testVariantClear ( ) {

NEAREST DIFF:
diff - - git a / www / FrequentlyAskedQuestions . md b / www / FrequentlyAskedQuestions . md 
 index e0c7e80 . . 25f39d1 100644 
 - - - a / www / FrequentlyAskedQuestions . md 
 + + + b / www / FrequentlyAskedQuestions . md 
 @ @ - 46 , 13 + 46 , 15 @ @ Find your corresponding native declaration below : 
 / / Field is a pointer to an array of struct 
 typedef struct _ outerstruct5 { 
 simplestruct * ptr _ to _ array ; / / use Structure . ByReference , and use 
 - / / Structure . toArray ( ) to allocate the array 
 + / / Structure . toArray ( ) to allocate the array , 
 + / / then assign the first array element to the field 
 } outerstruct5 ; 
 
 / / struct pointers as return value or argument 
 - / / use Structure 
 - outerstruct * myfunc ( ) ; 
 - void myfunc ( outerstruct * data ) ; 
 + simplestruct * myfunc ( ) ; / / use Structure 
 + void myfunc ( simplestruct * data ) ; 
 + void myfunc ( simplestruct * data _ array , int count ) ; / / use Structure [ ] , and use Structure . toArray ( ) to generate the array 
 + void myfunc ( simplestruct * * data _ array , int count ) ; / / use Structure . ByReference [ ] 
 
 / / struct ( by value ) as return value or argument 
 / / use Structure . ByValue
