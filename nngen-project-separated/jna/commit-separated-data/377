BLEU SCORE: 0.001710344227783193

TEST MSG: Accommodate altered libc loading on FreeBSD
GENERATED MSG: Integrating the fix for JNA - 184 as submitted in http : / / java . net / jira / browse / JNA - 184

TEST DIFF (one line): diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java <nl> index 2cb29a1 . . 0a14ffb 100644 <nl> - - - a / src / com / sun / jna / NativeLibrary . java <nl> + + + b / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 203 , 7 + 203 , 7 @ @ public class NativeLibrary { <nl> } <nl> catch ( UnsatisfiedLinkError e2 ) { e = e2 ; } <nl> } <nl> - else if ( Platform . isLinux ( ) ) { <nl> + else if ( Platform . isLinux ( ) | | Platform . isFreeBSD ( ) ) { <nl> / / <nl> / / Failed to load the library normally - try to match libfoo . so . * <nl> / / <nl> @ @ - 382 , 7 + 382 , 7 @ @ public class NativeLibrary { <nl> <nl> / / Use current process to load libraries we know are already <nl> / / loaded by the VM to ensure we get the correct version <nl> - if ( ( Platform . isLinux ( ) | | Platform . isAIX ( ) ) <nl> + if ( ( Platform . isLinux ( ) | | Platform . isFreeBSD ( ) | | Platform . isAIX ( ) ) <nl> & & Platform . C _ LIBRARY _ NAME . equals ( libraryName ) ) { <nl> libraryName = null ; <nl> } <nl> @ @ - 702 , 7 + 702 , 7 @ @ public class NativeLibrary { <nl> } <nl> return name ; <nl> } <nl> - else if ( Platform . isLinux ( ) ) { <nl> + else if ( Platform . isLinux ( ) | | Platform . isFreeBSD ( ) ) { <nl> if ( isVersionedName ( libName ) | | libName . endsWith ( " . so " ) ) { <nl> / / A specific version was requested - use as is for search <nl> return libName ;
NEAREST DIFF (one line): diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index 4db1687 . . 5a101c7 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 38 , 9 + 38 , 6 @ @ public interface Kernel32 extends StdCallLibrary { <nl> Kernel32 INSTANCE = ( Kernel32 ) Native . loadLibrary ( " kernel32 " , Kernel32 . class , <nl> 	 	 W32APIOptions . UNICODE _ OPTIONS ) ; <nl> <nl> - int PROCESS _ TERMINATE = 0x00000001 ; <nl> - int PROCESS _ SYNCHRONIZE = 0x00100000 ; <nl> - <nl> / * * <nl> * Frees the specified local memory object and invalidates its handle . <nl> * @ param hLocal <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index 82613e2 . . 38cacf8 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 1653 , 5 + 1653 , 6 @ @ public interface WinNT extends StdCallLibrary { <nl> 	 public static final int SE _ PRIVILEGE _ REMOVED = 0X00000004 ; <nl> 	 public static final int SE _ PRIVILEGE _ USED _ FOR _ ACCESS = 0x80000000 ; <nl> <nl> - <nl> + int PROCESS _ TERMINATE = 0x00000001 ; <nl> + int PROCESS _ SYNCHRONIZE = 0x00100000 ; <nl> } <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / src / com / sun / jna / NativeLibrary . java b / src / com / sun / jna / NativeLibrary . java 
 index 2cb29a1 . . 0a14ffb 100644 
 - - - a / src / com / sun / jna / NativeLibrary . java 
 + + + b / src / com / sun / jna / NativeLibrary . java 
 @ @ - 203 , 7 + 203 , 7 @ @ public class NativeLibrary { 
 } 
 catch ( UnsatisfiedLinkError e2 ) { e = e2 ; } 
 } 
 - else if ( Platform . isLinux ( ) ) { 
 + else if ( Platform . isLinux ( ) | | Platform . isFreeBSD ( ) ) { 
 / / 
 / / Failed to load the library normally - try to match libfoo . so . * 
 / / 
 @ @ - 382 , 7 + 382 , 7 @ @ public class NativeLibrary { 
 
 / / Use current process to load libraries we know are already 
 / / loaded by the VM to ensure we get the correct version 
 - if ( ( Platform . isLinux ( ) | | Platform . isAIX ( ) ) 
 + if ( ( Platform . isLinux ( ) | | Platform . isFreeBSD ( ) | | Platform . isAIX ( ) ) 
 & & Platform . C _ LIBRARY _ NAME . equals ( libraryName ) ) { 
 libraryName = null ; 
 } 
 @ @ - 702 , 7 + 702 , 7 @ @ public class NativeLibrary { 
 } 
 return name ; 
 } 
 - else if ( Platform . isLinux ( ) ) { 
 + else if ( Platform . isLinux ( ) | | Platform . isFreeBSD ( ) ) { 
 if ( isVersionedName ( libName ) | | libName . endsWith ( " . so " ) ) { 
 / / A specific version was requested - use as is for search 
 return libName ;

NEAREST DIFF:
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java 
 index 4db1687 . . 5a101c7 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java 
 @ @ - 38 , 9 + 38 , 6 @ @ public interface Kernel32 extends StdCallLibrary { 
 Kernel32 INSTANCE = ( Kernel32 ) Native . loadLibrary ( " kernel32 " , Kernel32 . class , 
 	 	 W32APIOptions . UNICODE _ OPTIONS ) ; 
 
 - int PROCESS _ TERMINATE = 0x00000001 ; 
 - int PROCESS _ SYNCHRONIZE = 0x00100000 ; 
 - 
 / * * 
 * Frees the specified local memory object and invalidates its handle . 
 * @ param hLocal 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 index 82613e2 . . 38cacf8 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 @ @ - 1653 , 5 + 1653 , 6 @ @ public interface WinNT extends StdCallLibrary { 
 	 public static final int SE _ PRIVILEGE _ REMOVED = 0X00000004 ; 
 	 public static final int SE _ PRIVILEGE _ USED _ FOR _ ACCESS = 0x80000000 ; 
 
 - 
 + int PROCESS _ TERMINATE = 0x00000001 ; 
 + int PROCESS _ SYNCHRONIZE = 0x00100000 ; 
 } 
 \ No newline at end of file
