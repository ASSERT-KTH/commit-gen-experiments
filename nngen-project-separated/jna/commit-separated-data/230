BLEU SCORE: 0.010697691669654345

TEST MSG: Added assertions for COM success status
GENERATED MSG: An example into how to use the interfaces and functions in this pull request

TEST DIFF (one line): diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / IShellFolderTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / IShellFolderTest . java <nl> index b6b0d69 . . f768766 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / IShellFolderTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / IShellFolderTest . java <nl> @ @ - 1 , 10 + 1 , 11 @ @ <nl> package com . sun . jna . platform . win32 . COM ; <nl> <nl> / * <nl> - * Copyright ( c ) 2015 L W Ahonen , All Rights Reserved <nl> - * <nl> + * @ author L W Ahonen , lwahonen @ iki . fi <nl> * / <nl> <nl> + import junit . framework . TestCase ; <nl> + <nl> <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . platform . win32 . * ; <nl> @ @ - 19 , 21 + 20 , 19 @ @ public class IShellFolderTest extends TestCase { <nl> WinNT . HRESULT hr ; <nl> PointerByReference pidl = new PointerByReference ( ) ; <nl> hr = Shell32 . INSTANCE . SHGetSpecialFolderLocation ( null , csidl , pidl ) ; <nl> - if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> - PointerByReference psfDesktopPTR = new PointerByReference ( ) ; <nl> - hr = Shell32 . INSTANCE . SHGetDesktopFolder ( psfDesktopPTR ) ; <nl> - if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> - IShellFolder psfDesktop = IShellFolder . Converter . PointerToIShellFolder ( psfDesktopPTR ) ; <nl> - short cb = pidl . getValue ( ) . getShort ( 0 ) ; <nl> - if ( cb ! = 0 ) { <nl> - hr = psfDesktop . BindToObject ( pidl . getValue ( ) , null , riid , ppv ) ; <nl> - } else { <nl> - hr = psfDesktop . QueryInterface ( riid , ppv ) ; <nl> - } <nl> - psfDesktop . Release ( ) ; <nl> - } <nl> - Ole32 . INSTANCE . CoTaskMemFree ( pidl . getValue ( ) ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + PointerByReference psfDesktopPTR = new PointerByReference ( ) ; <nl> + hr = Shell32 . INSTANCE . SHGetDesktopFolder ( psfDesktopPTR ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + IShellFolder psfDesktop = IShellFolder . Converter . PointerToIShellFolder ( psfDesktopPTR ) ; <nl> + short cb = pidl . getValue ( ) . getShort ( 0 ) ; / / See http : / / blogs . msdn . com / b / oldnewthing / archive / 2011 / 08 / 30 / 10202076 . aspx for explanation about this bit <nl> + if ( cb ! = 0 ) { <nl> + hr = psfDesktop . BindToObject ( pidl . getValue ( ) , null , riid , ppv ) ; <nl> + } else { <nl> + hr = psfDesktop . QueryInterface ( riid , ppv ) ; <nl> } <nl> + psfDesktop . Release ( ) ; <nl> + Ole32 . INSTANCE . CoTaskMemFree ( pidl . getValue ( ) ) ; <nl> return hr ; <nl> } <nl> <nl> @ @ - 41 , 15 + 40 , 11 @ @ public class IShellFolderTest extends TestCase { <nl> Ole32 . INSTANCE . CoInitialize ( null ) ; <nl> int CSIDL _ DRIVES = 0x0011 ; <nl> WinNT . HRESULT hr = Ole32 . INSTANCE . CoInitialize ( null ) ; <nl> - if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> - PointerByReference psfMyComputerPTR = new PointerByReference ( Pointer . NULL ) ; <nl> - hr = BindToCsidl ( CSIDL _ DRIVES , new Guid . REFIID ( IShellFolder . IID _ ISHELLFOLDER ) , psfMyComputerPTR ) ; <nl> - if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> - psfMyComputer = IShellFolder . Converter . PointerToIShellFolder ( psfMyComputerPTR ) ; <nl> - } <nl> - } <nl> - if ( psfMyComputer = = null ) <nl> - throw new RuntimeException ( " Unable to create my computer shell object " ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + PointerByReference psfMyComputerPTR = new PointerByReference ( Pointer . NULL ) ; <nl> + hr = BindToCsidl ( CSIDL _ DRIVES , new Guid . REFIID ( IShellFolder . IID _ ISHELLFOLDER ) , psfMyComputerPTR ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + psfMyComputer = IShellFolder . Converter . PointerToIShellFolder ( psfMyComputerPTR ) ; <nl> } <nl> <nl> public void tearDown ( ) throws Exception { <nl> @ @ - 61 , 31 + 56 , 27 @ @ public class IShellFolderTest extends TestCase { <nl> PointerByReference peidlPTR = new PointerByReference ( ) ; <nl> int SHCONTF _ FOLDERS = 0x20 ; <nl> int SHCONTF _ NONFOLDERS = 0x40 ; <nl> - boolean sawNames = false ; <nl> + boolean sawNames = false ; <nl> <nl> WinNT . HRESULT hr = psfMyComputer . EnumObjects ( null , <nl> SHCONTF _ FOLDERS | SHCONTF _ NONFOLDERS , peidlPTR ) ; <nl> - if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> - IEnumIDList peidl = IEnumIDList . Converter . PointerToIEnumIDList ( peidlPTR ) ; <nl> - PointerByReference pidlItem = new PointerByReference ( ) ; <nl> - while ( peidl . Next ( 1 , pidlItem , null ) . intValue ( ) = = COMUtils . S _ OK ) { <nl> - PointerByReference sr = new PointerByReference ( ) ; <nl> - hr = psfMyComputer . GetDisplayNameOf ( pidlItem . getValue ( ) , 0 , sr ) ; <nl> - if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> - PointerByReference pszName = new PointerByReference ( ) ; <nl> - hr = Shlwapi . INSTANCE . StrRetToStr ( sr , pidlItem . getValue ( ) , pszName ) ; <nl> - if ( COMUtils . SUCCEEDED ( hr ) ) { <nl> - String wideString = pszName . getValue ( ) . getWideString ( 0 ) ; <nl> - if ( wideString ! = null & & wideString . length ( ) > 0 ) <nl> - sawNames = true ; <nl> - Ole32 . INSTANCE . CoTaskMemFree ( pszName . getValue ( ) ) ; <nl> - } <nl> - Ole32 . INSTANCE . CoTaskMemFree ( sr . getValue ( ) ) ; <nl> - } <nl> - Ole32 . INSTANCE . CoTaskMemFree ( pidlItem . getValue ( ) ) ; <nl> - } <nl> - peidl . Release ( ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + IEnumIDList peidl = IEnumIDList . Converter . PointerToIEnumIDList ( peidlPTR ) ; <nl> + PointerByReference pidlItem = new PointerByReference ( ) ; <nl> + while ( peidl . Next ( 1 , pidlItem , null ) . intValue ( ) = = COMUtils . S _ OK ) { <nl> + PointerByReference sr = new PointerByReference ( ) ; <nl> + hr = psfMyComputer . GetDisplayNameOf ( pidlItem . getValue ( ) , 0 , sr ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + PointerByReference pszName = new PointerByReference ( ) ; <nl> + hr = Shlwapi . INSTANCE . StrRetToStr ( sr , pidlItem . getValue ( ) , pszName ) ; <nl> + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; <nl> + String wideString = pszName . getValue ( ) . getWideString ( 0 ) ; <nl> + if ( wideString ! = null & & wideString . length ( ) > 0 ) <nl> + sawNames = true ; <nl> + Ole32 . INSTANCE . CoTaskMemFree ( pszName . getValue ( ) ) ; <nl> + Ole32 . INSTANCE . CoTaskMemFree ( pidlItem . getValue ( ) ) ; <nl> } <nl> - assertTrue ( sawNames ) ; <nl> + peidl . Release ( ) ; <nl> + assertTrue ( sawNames ) ; / / We should see at least one item with a name <nl> } <nl> } <nl> \ No newline at end of file
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / IShellFolderTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / IShellFolderTest . java 
 index b6b0d69 . . f768766 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / IShellFolderTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / IShellFolderTest . java 
 @ @ - 1 , 10 + 1 , 11 @ @ 
 package com . sun . jna . platform . win32 . COM ; 
 
 / * 
 - * Copyright ( c ) 2015 L W Ahonen , All Rights Reserved 
 - * 
 + * @ author L W Ahonen , lwahonen @ iki . fi 
 * / 
 
 + import junit . framework . TestCase ; 
 + 
 
 import com . sun . jna . Pointer ; 
 import com . sun . jna . platform . win32 . * ; 
 @ @ - 19 , 21 + 20 , 19 @ @ public class IShellFolderTest extends TestCase { 
 WinNT . HRESULT hr ; 
 PointerByReference pidl = new PointerByReference ( ) ; 
 hr = Shell32 . INSTANCE . SHGetSpecialFolderLocation ( null , csidl , pidl ) ; 
 - if ( COMUtils . SUCCEEDED ( hr ) ) { 
 - PointerByReference psfDesktopPTR = new PointerByReference ( ) ; 
 - hr = Shell32 . INSTANCE . SHGetDesktopFolder ( psfDesktopPTR ) ; 
 - if ( COMUtils . SUCCEEDED ( hr ) ) { 
 - IShellFolder psfDesktop = IShellFolder . Converter . PointerToIShellFolder ( psfDesktopPTR ) ; 
 - short cb = pidl . getValue ( ) . getShort ( 0 ) ; 
 - if ( cb ! = 0 ) { 
 - hr = psfDesktop . BindToObject ( pidl . getValue ( ) , null , riid , ppv ) ; 
 - } else { 
 - hr = psfDesktop . QueryInterface ( riid , ppv ) ; 
 - } 
 - psfDesktop . Release ( ) ; 
 - } 
 - Ole32 . INSTANCE . CoTaskMemFree ( pidl . getValue ( ) ) ; 
 + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; 
 + PointerByReference psfDesktopPTR = new PointerByReference ( ) ; 
 + hr = Shell32 . INSTANCE . SHGetDesktopFolder ( psfDesktopPTR ) ; 
 + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; 
 + IShellFolder psfDesktop = IShellFolder . Converter . PointerToIShellFolder ( psfDesktopPTR ) ; 
 + short cb = pidl . getValue ( ) . getShort ( 0 ) ; / / See http : / / blogs . msdn . com / b / oldnewthing / archive / 2011 / 08 / 30 / 10202076 . aspx for explanation about this bit 
 + if ( cb ! = 0 ) { 
 + hr = psfDesktop . BindToObject ( pidl . getValue ( ) , null , riid , ppv ) ; 
 + } else { 
 + hr = psfDesktop . QueryInterface ( riid , ppv ) ; 
 } 
 + psfDesktop . Release ( ) ; 
 + Ole32 . INSTANCE . CoTaskMemFree ( pidl . getValue ( ) ) ; 
 return hr ; 
 } 
 
 @ @ - 41 , 15 + 40 , 11 @ @ public class IShellFolderTest extends TestCase { 
 Ole32 . INSTANCE . CoInitialize ( null ) ; 
 int CSIDL _ DRIVES = 0x0011 ; 
 WinNT . HRESULT hr = Ole32 . INSTANCE . CoInitialize ( null ) ; 
 - if ( COMUtils . SUCCEEDED ( hr ) ) { 
 - PointerByReference psfMyComputerPTR = new PointerByReference ( Pointer . NULL ) ; 
 - hr = BindToCsidl ( CSIDL _ DRIVES , new Guid . REFIID ( IShellFolder . IID _ ISHELLFOLDER ) , psfMyComputerPTR ) ; 
 - if ( COMUtils . SUCCEEDED ( hr ) ) { 
 - psfMyComputer = IShellFolder . Converter . PointerToIShellFolder ( psfMyComputerPTR ) ; 
 - } 
 - } 
 - if ( psfMyComputer = = null ) 
 - throw new RuntimeException ( " Unable to create my computer shell object " ) ; 
 + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; 
 + PointerByReference psfMyComputerPTR = new PointerByReference ( Pointer . NULL ) ; 
 + hr = BindToCsidl ( CSIDL _ DRIVES , new Guid . REFIID ( IShellFolder . IID _ ISHELLFOLDER ) , psfMyComputerPTR ) ; 
 + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; 
 + psfMyComputer = IShellFolder . Converter . PointerToIShellFolder ( psfMyComputerPTR ) ; 
 } 
 
 public void tearDown ( ) throws Exception { 
 @ @ - 61 , 31 + 56 , 27 @ @ public class IShellFolderTest extends TestCase { 
 PointerByReference peidlPTR = new PointerByReference ( ) ; 
 int SHCONTF _ FOLDERS = 0x20 ; 
 int SHCONTF _ NONFOLDERS = 0x40 ; 
 - boolean sawNames = false ; 
 + boolean sawNames = false ; 
 
 WinNT . HRESULT hr = psfMyComputer . EnumObjects ( null , 
 SHCONTF _ FOLDERS | SHCONTF _ NONFOLDERS , peidlPTR ) ; 
 - if ( COMUtils . SUCCEEDED ( hr ) ) { 
 - IEnumIDList peidl = IEnumIDList . Converter . PointerToIEnumIDList ( peidlPTR ) ; 
 - PointerByReference pidlItem = new PointerByReference ( ) ; 
 - while ( peidl . Next ( 1 , pidlItem , null ) . intValue ( ) = = COMUtils . S _ OK ) { 
 - PointerByReference sr = new PointerByReference ( ) ; 
 - hr = psfMyComputer . GetDisplayNameOf ( pidlItem . getValue ( ) , 0 , sr ) ; 
 - if ( COMUtils . SUCCEEDED ( hr ) ) { 
 - PointerByReference pszName = new PointerByReference ( ) ; 
 - hr = Shlwapi . INSTANCE . StrRetToStr ( sr , pidlItem . getValue ( ) , pszName ) ; 
 - if ( COMUtils . SUCCEEDED ( hr ) ) { 
 - String wideString = pszName . getValue ( ) . getWideString ( 0 ) ; 
 - if ( wideString ! = null & & wideString . length ( ) > 0 ) 
 - sawNames = true ; 
 - Ole32 . INSTANCE . CoTaskMemFree ( pszName . getValue ( ) ) ; 
 - } 
 - Ole32 . INSTANCE . CoTaskMemFree ( sr . getValue ( ) ) ; 
 - } 
 - Ole32 . INSTANCE . CoTaskMemFree ( pidlItem . getValue ( ) ) ; 
 - } 
 - peidl . Release ( ) ; 
 + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; 
 + IEnumIDList peidl = IEnumIDList . Converter . PointerToIEnumIDList ( peidlPTR ) ; 
 + PointerByReference pidlItem = new PointerByReference ( ) ; 
 + while ( peidl . Next ( 1 , pidlItem , null ) . intValue ( ) = = COMUtils . S _ OK ) { 
 + PointerByReference sr = new PointerByReference ( ) ; 
 + hr = psfMyComputer . GetDisplayNameOf ( pidlItem . getValue ( ) , 0 , sr ) ; 
 + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; 
 + PointerByReference pszName = new PointerByReference ( ) ; 
 + hr = Shlwapi . INSTANCE . StrRetToStr ( sr , pidlItem . getValue ( ) , pszName ) ; 
 + assertTrue ( COMUtils . SUCCEEDED ( hr ) ) ; 
 + String wideString = pszName . getValue ( ) . getWideString ( 0 ) ; 
 + if ( wideString ! = null & & wideString . length ( ) > 0 ) 
 + sawNames = true ; 
 + Ole32 . INSTANCE . CoTaskMemFree ( pszName . getValue ( ) ) ; 
 + Ole32 . INSTANCE . CoTaskMemFree ( pidlItem . getValue ( ) ) ; 
 } 
 - assertTrue ( sawNames ) ; 
 + peidl . Release ( ) ; 
 + assertTrue ( sawNames ) ; / / We should see at least one item with a name 
 } 
 } 
 \ No newline at end of file

NEAREST DIFF:
ELIMINATEDSENTENCE
