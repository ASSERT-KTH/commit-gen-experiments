BLEU SCORE: 0.2722230298303347

TEST MSG: update AIX natives
GENERATED MSG: update OSX native reference

TEST DIFF (one line): diff - - git a / lib / native / aix - ppc . jar b / lib / native / aix - ppc . jar <nl> index 19c72a5 . . 9f4a1a6 100644 <nl> Binary files a / lib / native / aix - ppc . jar and b / lib / native / aix - ppc . jar differ
NEAREST DIFF (one line): diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> index 6b66706 . . 719d851 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 1261 , 12 + 1261 , 12 @ @ public abstract class Advapi32Util { <nl> 	 } <nl> 	 <nl> 	 String nameString = Native . toString ( name ) ; <nl> - 	 <nl> - if ( lpcbData . getValue ( ) = = 0 & & lpType . getValue ( ) = = WinNT . REG _ BINARY ) { <nl> - keyValues . put ( nameString , new byte [ 0 ] ) ; <nl> - continue ; <nl> - } <nl> - <nl> + <nl> + 	 if ( lpcbData . getValue ( ) = = 0 & & lpType . getValue ( ) = = WinNT . REG _ BINARY ) { <nl> + 	 keyValues . put ( nameString , new byte [ 0 ] ) ; <nl> + 	 continue ; <nl> + 	 } <nl> + <nl> 	 Memory byteData = new Memory ( lpcbData . getValue ( ) ) ; <nl> 	 byteData . write ( 0 , data , 0 , lpcbData . getValue ( ) ) ; <nl> 	 <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> index 36bde92 . . f029ab3 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> @ @ - 296 , 15 + 296 , 8 @ @ public class Advapi32UtilTest extends TestCase { <nl> 	 	 Advapi32Util . registrySetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " StringArray " , stringsWritten ) ; <nl> 	 	 String [ ] emptyArray = new String [ 0 ] ; <nl> 	 	 Advapi32Util . registrySetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " EmptyStringArray " , emptyArray ) ; <nl> - Advapi32Util . registrySetBinaryValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " EmptyBinary " , new byte [ 0 ] ) ; <nl> - <nl> - TreeMap < String , Object > values = new TreeMap < String , Object > ( ) ; <nl> - try { <nl> - values = Advapi32Util . registryGetValues ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " ) ; <nl> - } catch ( Exception e ) { <nl> - e . printStackTrace ( ) ; <nl> - } <nl> - <nl> + 	 	 Advapi32Util . registrySetBinaryValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " EmptyBinary " , new byte [ 0 ] ) ; <nl> + 	 	 TreeMap < String , Object > values = Advapi32Util . registryGetValues ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " ) ; <nl> 	 	 assertEquals ( 7 , values . keySet ( ) . size ( ) ) ; <nl> 	 	 assertEquals ( " FourtyTwo " + uu , values . get ( " 42 " + uu ) ) ; <nl> 	 	 assertEquals ( 42 , values . get ( " FourtyTwo " + uu ) ) ;

TEST DIFF:
diff - - git a / lib / native / aix - ppc . jar b / lib / native / aix - ppc . jar 
 index 19c72a5 . . 9f4a1a6 100644 
 Binary files a / lib / native / aix - ppc . jar and b / lib / native / aix - ppc . jar differ

NEAREST DIFF:
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java 
 index 6b66706 . . 719d851 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java 
 @ @ - 1261 , 12 + 1261 , 12 @ @ public abstract class Advapi32Util { 
 	 } 
 	 
 	 String nameString = Native . toString ( name ) ; 
 - 	 
 - if ( lpcbData . getValue ( ) = = 0 & & lpType . getValue ( ) = = WinNT . REG _ BINARY ) { 
 - keyValues . put ( nameString , new byte [ 0 ] ) ; 
 - continue ; 
 - } 
 - 
 + 
 + 	 if ( lpcbData . getValue ( ) = = 0 & & lpType . getValue ( ) = = WinNT . REG _ BINARY ) { 
 + 	 keyValues . put ( nameString , new byte [ 0 ] ) ; 
 + 	 continue ; 
 + 	 } 
 + 
 	 Memory byteData = new Memory ( lpcbData . getValue ( ) ) ; 
 	 byteData . write ( 0 , data , 0 , lpcbData . getValue ( ) ) ; 
 	 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java 
 index 36bde92 . . f029ab3 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java 
 @ @ - 296 , 15 + 296 , 8 @ @ public class Advapi32UtilTest extends TestCase { 
 	 	 Advapi32Util . registrySetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " StringArray " , stringsWritten ) ; 
 	 	 String [ ] emptyArray = new String [ 0 ] ; 
 	 	 Advapi32Util . registrySetStringArray ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " EmptyStringArray " , emptyArray ) ; 
 - Advapi32Util . registrySetBinaryValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " EmptyBinary " , new byte [ 0 ] ) ; 
 - 
 - TreeMap < String , Object > values = new TreeMap < String , Object > ( ) ; 
 - try { 
 - values = Advapi32Util . registryGetValues ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " ) ; 
 - } catch ( Exception e ) { 
 - e . printStackTrace ( ) ; 
 - } 
 - 
 + 	 	 Advapi32Util . registrySetBinaryValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " EmptyBinary " , new byte [ 0 ] ) ; 
 + 	 	 TreeMap < String , Object > values = Advapi32Util . registryGetValues ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " ) ; 
 	 	 assertEquals ( 7 , values . keySet ( ) . size ( ) ) ; 
 	 	 assertEquals ( " FourtyTwo " + uu , values . get ( " 42 " + uu ) ) ; 
 	 	 assertEquals ( 42 , values . get ( " FourtyTwo " + uu ) ) ;
