BLEU SCORE: 0.16186478197091597

TEST MSG: fix test compilation
GENERATED MSG: use consistent GC waits

TEST DIFF (one line): diff - - git a / test / com / sun / jna / MemoryTest . java b / test / com / sun / jna / MemoryTest . java <nl> index e98cccd . . 59614e5 100644 <nl> - - - a / test / com / sun / jna / MemoryTest . java <nl> + + + b / test / com / sun / jna / MemoryTest . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ public class MemoryTest extends TestCase implements GCWaits { <nl> shared = null ; <nl> System . gc ( ) ; <nl> Memory . purge ( ) ; <nl> - for ( int i = 0 ; i < GC _ WAITS & & ref . get ( ) ! = null ) { <nl> + for ( int i = 0 ; i < GC _ WAITS & & ref . get ( ) ! = null ; i + + ) { <nl> Thread . sleep ( GC _ WAIT _ INTERVAL ) ; <nl> System . gc ( ) ; <nl> Memory . purge ( ) ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / test / com / sun / jna / MemoryTest . java b / test / com / sun / jna / MemoryTest . java 
 index e98cccd . . 59614e5 100644 
 - - - a / test / com / sun / jna / MemoryTest . java 
 + + + b / test / com / sun / jna / MemoryTest . java 
 @ @ - 42 , 7 + 42 , 7 @ @ public class MemoryTest extends TestCase implements GCWaits { 
 shared = null ; 
 System . gc ( ) ; 
 Memory . purge ( ) ; 
 - for ( int i = 0 ; i < GC _ WAITS & & ref . get ( ) ! = null ) { 
 + for ( int i = 0 ; i < GC _ WAITS & & ref . get ( ) ! = null ; i + + ) { 
 Thread . sleep ( GC _ WAIT _ INTERVAL ) ; 
 System . gc ( ) ; 
 Memory . purge ( ) ;

NEAREST DIFF:
ELIMINATEDSENTENCE
