BLEU SCORE: 0.008058772966335387

TEST MSG: update win64 natives
GENERATED MSG: Use simpler workaround for loading AWT / JAWT on X11 - based platforms

TEST DIFF (one line): diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index 8ecf550 . . 445146b 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index 3e31ff3 . . 6b5bb1f 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> # <nl> # Makefile for JNA native bits <nl> - # Copyright ( c ) 2007 - 2012 Timothy Wall All Rights Reserved <nl> + # Copyright ( c ) 2007 - 2014 Timothy Wall All Rights Reserved <nl> # <nl> # You may need to run ' ant javah ' at the root before performing a build from <nl> # this directory . <nl> @ @ - 31 , 6 + 31 , 9 @ @ <nl> # " ant - Dos . prefix = android - arm ( - x86 ) " . Put the NDK tools in the path and adjust <nl> # NDK _ PLATFORM below or set it in your environment . <nl> # <nl> + # The windows build requires a cygwin or MSYS installation . The build may use <nl> + # MS tools or GCC / mingw . Define USE _ MSVC in your environment and ensure cl . exe <nl> + # and ml . exe are in your PATH to build with MS tools . <nl> <nl> # Systems which support POSIX signals may be able to support VM crash <nl> # protection simply by defining HAVE _ PROTECTION . This option has been only <nl> @ @ - 47 , 7 + 50 , 7 @ @ OS = $ ( shell uname | sed - e ' s / CYGWIN . * / win32 / g ' \ <nl> - e ' s / AIX . * / aix / g ' \ <nl> - e ' s / Linux . * / linux / g ' ) <nl> <nl> - JNA _ JNI _ VERSION = 4 . 0 . 0 # auto - generated by ant <nl> + JNA _ JNI _ VERSION = 4 . 0 . 1 # auto - generated by ant <nl> CHECKSUM = 1a6047467b59e8748f975e03016ce3d9 # auto - generated by ant <nl> <nl> JAVA _ INCLUDES = - I " $ ( JAVA _ HOME ) / include " \ <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index fe9a35e . . 1e01486 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 2891 , 7 + 2891 , 7 @ @ static jboolean ( JNICALL * pJAWT _ GetAWT ) ( JNIEnv * , JAWT * ) ; <nl> # endif / * NO _ JAWT * / <nl> <nl> JNIEXPORT jlong JNICALL <nl> - Java _ com _ sun _ jna _ Native _ getWindowHandle0 ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( classp ) , jobject UNUSED _ JAWT ( w ) ) { <nl> + Java _ com _ sun _ jna _ Native _ getWindowHandle0 ( JNIEnv * env , jclass UNUSED ( classp ) , jobject UNUSED _ JAWT ( w ) ) { <nl> jlong handle = 0 ; <nl> # ifndef NO _ JAWT <nl> JAWT _ DrawingSurface * ds ; <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index 5ee58db . . 175068a 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 1178 , 10 + 1178 , 14 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> 	 } ; <nl> callThreadedCallback ( cb , asDaemon , 2 , 100 , called ) ; <nl> 	 / / Wait for it to start up <nl> + long start = System . currentTimeMillis ( ) ; <nl> while ( threads . size ( ) = = 0 & & called [ 0 ] = = 0 ) { <nl> Thread . sleep ( 10 ) ; <nl> + 	 if ( System . currentTimeMillis ( ) - start > THREAD _ TIMEOUT ) { <nl> + 	 	 fail ( " Timed out waiting for thread to detach and terminate " ) ; <nl> + 	 } <nl> } <nl> - long start = System . currentTimeMillis ( ) ; <nl> + start = System . currentTimeMillis ( ) ; <nl> WeakReference ref = ( WeakReference ) threads . iterator ( ) . next ( ) ; <nl> <nl> while ( ref . get ( ) ! = null ) {
NEAREST DIFF (one line): diff - - git a / jnalib / native / Makefile b / jnalib / native / Makefile <nl> index 7a6b657 . . 2b465a0 100644 <nl> - - - a / jnalib / native / Makefile <nl> + + + b / jnalib / native / Makefile <nl> @ @ - 101 , 16 + 101 , 16 @ @ LIBSFX = . dll <nl> endif <nl> <nl> ifeq ( $ ( OS ) , linux ) <nl> - ARCH = i386 <nl> + ARCH = $ ( shell uname - m | sed ' s / i [ 456 ] 86 / i386 / g ' ) <nl> PCFLAGS + = - fPIC <nl> CDEFINES + = - DHAVE _ PROTECTION <nl> endif <nl> <nl> ifeq ( $ ( OS ) , freebsd ) <nl> - ARCH = i386 <nl> + ARCH = $ ( shell uname - m | sed ' s / i [ 456 ] 86 / i386 / g ' ) <nl> PCFLAGS + = - fPIC <nl> CINCLUDES + = - I / usr / X11R6 / include <nl> - LDFLAGS = - o $ @ - shared - pthread <nl> + LDFLAGS = - o $ @ - shared <nl> CDEFINES + = - DHAVE _ PROTECTION <nl> endif <nl> <nl> @ @ - 177 , 9 + 177 , 6 @ @ install : <nl> 	 mkdir $ ( INSTALLDIR ) <nl> 	 cp $ ( LIBRARY ) $ ( INSTALLDIR ) <nl> <nl> - $ ( BUILD ) / test _ dispatch : test _ dispatch . c $ ( BUILD ) / dispatch . o $ ( BUILD ) / dispatch _ $ ( ARCH ) . o $ ( BUILD ) / callback . o <nl> - 	 $ ( CC ) $ ( CFLAGS ) $ < $ ( BUILD ) / dispatch . o $ ( BUILD ) / dispatch _ $ ( ARCH ) . o $ ( BUILD ) / callback . o $ ( COUT ) <nl> - <nl> $ ( LIBRARY ) : $ ( JNIDISPATCH _ OBJS ) $ ( FFI _ LIB ) <nl> 	 $ ( LD ) $ ( LDFLAGS ) $ ( JNIDISPATCH _ OBJS ) $ ( FFI _ LIB ) $ ( LIBS ) <nl> <nl> @ @ - 213 , 3 + 210 , 5 @ @ clean : <nl> <nl> version : <nl> 	 @ echo version = $ ( VERSION ) <nl> + <nl> + # EOF <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar 
 index 8ecf550 . . 445146b 100755 
 Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ 
 diff - - git a / native / Makefile b / native / Makefile 
 index 3e31ff3 . . 6b5bb1f 100644 
 - - - a / native / Makefile 
 + + + b / native / Makefile 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 # 
 # Makefile for JNA native bits 
 - # Copyright ( c ) 2007 - 2012 Timothy Wall All Rights Reserved 
 + # Copyright ( c ) 2007 - 2014 Timothy Wall All Rights Reserved 
 # 
 # You may need to run ' ant javah ' at the root before performing a build from 
 # this directory . 
 @ @ - 31 , 6 + 31 , 9 @ @ 
 # " ant - Dos . prefix = android - arm ( - x86 ) " . Put the NDK tools in the path and adjust 
 # NDK _ PLATFORM below or set it in your environment . 
 # 
 + # The windows build requires a cygwin or MSYS installation . The build may use 
 + # MS tools or GCC / mingw . Define USE _ MSVC in your environment and ensure cl . exe 
 + # and ml . exe are in your PATH to build with MS tools . 
 
 # Systems which support POSIX signals may be able to support VM crash 
 # protection simply by defining HAVE _ PROTECTION . This option has been only 
 @ @ - 47 , 7 + 50 , 7 @ @ OS = $ ( shell uname | sed - e ' s / CYGWIN . * / win32 / g ' \ 
 - e ' s / AIX . * / aix / g ' \ 
 - e ' s / Linux . * / linux / g ' ) 
 
 - JNA _ JNI _ VERSION = 4 . 0 . 0 # auto - generated by ant 
 + JNA _ JNI _ VERSION = 4 . 0 . 1 # auto - generated by ant 
 CHECKSUM = 1a6047467b59e8748f975e03016ce3d9 # auto - generated by ant 
 
 JAVA _ INCLUDES = - I " $ ( JAVA _ HOME ) / include " \ 
 diff - - git a / native / dispatch . c b / native / dispatch . c 
 index fe9a35e . . 1e01486 100644 
 - - - a / native / dispatch . c 
 + + + b / native / dispatch . c 
 @ @ - 2891 , 7 + 2891 , 7 @ @ static jboolean ( JNICALL * pJAWT _ GetAWT ) ( JNIEnv * , JAWT * ) ; 
 # endif / * NO _ JAWT * / 
 
 JNIEXPORT jlong JNICALL 
 - Java _ com _ sun _ jna _ Native _ getWindowHandle0 ( JNIEnv * UNUSED _ ENV ( env ) , jclass UNUSED ( classp ) , jobject UNUSED _ JAWT ( w ) ) { 
 + Java _ com _ sun _ jna _ Native _ getWindowHandle0 ( JNIEnv * env , jclass UNUSED ( classp ) , jobject UNUSED _ JAWT ( w ) ) { 
 jlong handle = 0 ; 
 # ifndef NO _ JAWT 
 JAWT _ DrawingSurface * ds ; 
 diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java 
 index 5ee58db . . 175068a 100644 
 - - - a / test / com / sun / jna / CallbacksTest . java 
 + + + b / test / com / sun / jna / CallbacksTest . java 
 @ @ - 1178 , 10 + 1178 , 14 @ @ public class CallbacksTest extends TestCase implements Paths { 
 	 } ; 
 callThreadedCallback ( cb , asDaemon , 2 , 100 , called ) ; 
 	 / / Wait for it to start up 
 + long start = System . currentTimeMillis ( ) ; 
 while ( threads . size ( ) = = 0 & & called [ 0 ] = = 0 ) { 
 Thread . sleep ( 10 ) ; 
 + 	 if ( System . currentTimeMillis ( ) - start > THREAD _ TIMEOUT ) { 
 + 	 	 fail ( " Timed out waiting for thread to detach and terminate " ) ; 
 + 	 } 
 } 
 - long start = System . currentTimeMillis ( ) ; 
 + start = System . currentTimeMillis ( ) ; 
 WeakReference ref = ( WeakReference ) threads . iterator ( ) . next ( ) ; 
 
 while ( ref . get ( ) ! = null ) {

NEAREST DIFF:
diff - - git a / jnalib / native / Makefile b / jnalib / native / Makefile 
 index 7a6b657 . . 2b465a0 100644 
 - - - a / jnalib / native / Makefile 
 + + + b / jnalib / native / Makefile 
 @ @ - 101 , 16 + 101 , 16 @ @ LIBSFX = . dll 
 endif 
 
 ifeq ( $ ( OS ) , linux ) 
 - ARCH = i386 
 + ARCH = $ ( shell uname - m | sed ' s / i [ 456 ] 86 / i386 / g ' ) 
 PCFLAGS + = - fPIC 
 CDEFINES + = - DHAVE _ PROTECTION 
 endif 
 
 ifeq ( $ ( OS ) , freebsd ) 
 - ARCH = i386 
 + ARCH = $ ( shell uname - m | sed ' s / i [ 456 ] 86 / i386 / g ' ) 
 PCFLAGS + = - fPIC 
 CINCLUDES + = - I / usr / X11R6 / include 
 - LDFLAGS = - o $ @ - shared - pthread 
 + LDFLAGS = - o $ @ - shared 
 CDEFINES + = - DHAVE _ PROTECTION 
 endif 
 
 @ @ - 177 , 9 + 177 , 6 @ @ install : 
 	 mkdir $ ( INSTALLDIR ) 
 	 cp $ ( LIBRARY ) $ ( INSTALLDIR ) 
 
 - $ ( BUILD ) / test _ dispatch : test _ dispatch . c $ ( BUILD ) / dispatch . o $ ( BUILD ) / dispatch _ $ ( ARCH ) . o $ ( BUILD ) / callback . o 
 - 	 $ ( CC ) $ ( CFLAGS ) $ < $ ( BUILD ) / dispatch . o $ ( BUILD ) / dispatch _ $ ( ARCH ) . o $ ( BUILD ) / callback . o $ ( COUT ) 
 - 
 $ ( LIBRARY ) : $ ( JNIDISPATCH _ OBJS ) $ ( FFI _ LIB ) 
 	 $ ( LD ) $ ( LDFLAGS ) $ ( JNIDISPATCH _ OBJS ) $ ( FFI _ LIB ) $ ( LIBS ) 
 
 @ @ - 213 , 3 + 210 , 5 @ @ clean : 
 
 version : 
 	 @ echo version = $ ( VERSION ) 
 + 
 + # EOF 
 \ No newline at end of file
