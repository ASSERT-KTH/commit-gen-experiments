BLEU SCORE: 0.033864985683445356

TEST MSG: Fix netbeans warnings ( unnessary toString ( ) calls and initializations )
GENERATED MSG: Added Advapi32 . ImpersonateLoggedOnUser and RevertToSelf .

TEST DIFF (one line): diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> index 8f28651 . . e016fb8 100755 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> @ @ - 468 , 8 + 468 , 8 @ @ public class Advapi32Test extends TestCase { <nl> 	 	 try { <nl> 	 	 	 HANDLEByReference phUser = new HANDLEByReference ( ) ; <nl> 	 	 	 try { <nl> - 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , <nl> - 	 	 	 	 	 	 null , userInfo . usri1 _ password . toString ( ) , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> + 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name , <nl> + 	 	 	 	 	 	 null , userInfo . usri1 _ password , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> 	 	 	 	 	 	 WinBase . LOGON32 _ PROVIDER _ DEFAULT , phUser ) ) ; <nl> 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . ImpersonateLoggedOnUser ( phUser . getValue ( ) ) ) ; <nl> 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . RevertToSelf ( ) ) ; <nl> @ @ - 481 , 7 + 481 , 7 @ @ public class Advapi32Test extends TestCase { <nl> 	 	 	 } <nl> 	 	 } finally { <nl> 	 	 assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( <nl> - 	 	 	 	 null , userInfo . usri1 _ name . toString ( ) ) ) ; <nl> + 	 	 	 	 null , userInfo . usri1 _ name ) ) ; <nl> 	 	 } <nl> } <nl> <nl> @ @ - 777 , 19 + 777 , 17 @ @ public class Advapi32Test extends TestCase { <nl> SECURITY _ DESCRIPTOR sd = new SECURITY _ DESCRIPTOR ( 64 * 1024 ) ; <nl> assertTrue ( Advapi32 . INSTANCE . InitializeSecurityDescriptor ( sd , WinNT . SECURITY _ DESCRIPTOR _ REVISION ) ) ; <nl> <nl> - ACL pAcl ; <nl> - int cbAcl = 0 ; <nl> PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> assertTrue ( " Failed to create well - known SID " , <nl> Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> <nl> int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> - cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; <nl> cbAcl + = ( sidLength - DWORD . SIZE ) ; <nl> cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> - pAcl = new ACL ( cbAcl ) ; <nl> + ACL pAcl = new ACL ( cbAcl ) ; <nl> assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAce ( pAcl , WinNT . ACL _ REVISION , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; <nl> assertTrue ( Advapi32 . INSTANCE . SetSecurityDescriptorDacl ( sd , true , pAcl , false ) ) ; <nl> @ @ - 805 , 36 + 803 , 32 @ @ public class Advapi32Test extends TestCase { <nl> } <nl> <nl> public void testInitializeAcl ( ) throws IOException { <nl> - ACL pAcl ; <nl> - int cbAcl = 0 ; <nl> PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> assertTrue ( " Failed to create well - known SID " , <nl> Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> <nl> int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> - cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; <nl> cbAcl + = ( sidLength - DWORD . SIZE ) ; <nl> cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> - pAcl = new ACL ( cbAcl ) ; <nl> + ACL pAcl = new ACL ( cbAcl ) ; <nl> assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> } <nl> <nl> public void testGetAce ( ) throws IOException { <nl> - ACL pAcl ; <nl> - int cbAcl = 0 ; <nl> PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> assertTrue ( " Failed to create well - known SID " , <nl> Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> <nl> int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> - cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; <nl> cbAcl + = ( sidLength - DWORD . SIZE ) ; <nl> cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> - pAcl = new ACL ( cbAcl ) ; <nl> + ACL pAcl = new ACL ( cbAcl ) ; <nl> assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAce ( pAcl , WinNT . ACL _ REVISION , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; <nl> <nl> @ @ - 846 , 18 + 840 , 16 @ @ public class Advapi32Test extends TestCase { <nl> } <nl> <nl> public void testAddAce ( ) throws IOException { <nl> - ACL pAcl ; <nl> - int cbAcl = 0 ; <nl> PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> assertTrue ( " Failed to create well - known SID " , <nl> Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> <nl> int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> - cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> cbAcl + = Advapi32Util . getAceSize ( sidLength ) ; <nl> cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> - pAcl = new ACL ( cbAcl ) ; <nl> + ACL pAcl = new ACL ( cbAcl ) ; <nl> ACCESS _ ALLOWED _ ACE pace = new ACCESS _ ALLOWED _ ACE ( WinNT . STANDARD _ RIGHTS _ ALL , <nl> WinNT . INHERITED _ ACE , <nl> pSid ) ; <nl> @ @ - 873 , 18 + 865 , 16 @ @ public class Advapi32Test extends TestCase { <nl> } <nl> <nl> public void testAddAccessAllowedAce ( ) throws IOException { <nl> - ACL pAcl ; <nl> - int cbAcl = 0 ; <nl> PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> assertTrue ( " Failed to create well - known SID " , <nl> Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> <nl> int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> - cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> cbAcl + = Advapi32Util . getAceSize ( sidLength ) ; <nl> cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> - pAcl = new ACL ( cbAcl ) ; <nl> + ACL pAcl = new ACL ( cbAcl ) ; <nl> assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAce ( pAcl , WinNT . ACL _ REVISION , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; <nl> <nl> @ @ - 896 , 18 + 886 , 16 @ @ public class Advapi32Test extends TestCase { <nl> } <nl> <nl> public void testAddAccessAllowedAceEx ( ) throws IOException { <nl> - ACL pAcl ; <nl> - int cbAcl = 0 ; <nl> PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; <nl> assertTrue ( " Failed to create well - known SID " , <nl> Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; <nl> <nl> int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; <nl> - cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; <nl> cbAcl + = Advapi32Util . getAceSize ( sidLength ) ; <nl> cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; <nl> - pAcl = new ACL ( cbAcl ) ; <nl> + ACL pAcl = new ACL ( cbAcl ) ; <nl> assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; <nl> assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAceEx ( pAcl , WinNT . ACL _ REVISION , WinNT . INHERIT _ ONLY _ ACE , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; <nl> <nl> @ @ - 1060 , 8 + 1048 , 8 @ @ public class Advapi32Test extends TestCase { <nl> pevlr = pevlr . share ( record . Length . intValue ( ) ) ; <nl> } <nl> 	 } <nl> - assertTrue ( " Unexpected error after reading event log : " <nl> - + new Win32Exception ( rc ) , <nl> + assertTrue ( String . format ( " Unexpected error after reading event log : 0x % 08X ( % s ) " <nl> + , rc , Kernel32Util . formatMessage ( rc ) ) , <nl> rc = = W32Errors . ERROR _ HANDLE _ EOF | | rc = = 0 ) ; <nl> assertTrue ( " Error closing event log " , <nl> Advapi32 . INSTANCE . CloseEventLog ( h ) ) ; <nl> @ @ - 2099 , 7 + 2087 , 7 @ @ public class Advapi32Test extends TestCase { <nl> Advapi32 . INSTANCE . CloseEncryptedFileRaw ( pvContext2 . getValue ( ) ) ; <nl> <nl> file . delete ( ) ; <nl> - new File ( lbFileName2 . toString ( ) ) . delete ( ) ; <nl> + new File ( lbFileName2 ) . delete ( ) ; <nl> } <nl> <nl> private File createTempFile ( ) throws Exception { <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> index f333426 . . 3903a5b 100755 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> @ @ - 160 , 8 + 160 , 8 @ @ public class Advapi32UtilTest extends TestCase { <nl> try { <nl> HANDLEByReference phUser = new HANDLEByReference ( ) ; <nl> try { <nl> - assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , <nl> - null , userInfo . usri1 _ password . toString ( ) , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> + assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name , <nl> + null , userInfo . usri1 _ password , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> WinBase . LOGON32 _ PROVIDER _ DEFAULT , phUser ) ) ; <nl> Account [ ] groups = Advapi32Util . getTokenGroups ( phUser . getValue ( ) ) ; <nl> assertTrue ( groups . length > 0 ) ; <nl> @ @ - 179 , 7 + 179 , 7 @ @ public class Advapi32UtilTest extends TestCase { <nl> } finally { <nl> assertEquals ( " Error in NetUserDel " , <nl> LMErr . NERR _ Success , <nl> - Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name . toString ( ) ) ) ; <nl> + Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 195 , 12 + 195 , 12 @ @ public class Advapi32UtilTest extends TestCase { <nl> try { <nl> HANDLEByReference phUser = new HANDLEByReference ( ) ; <nl> try { <nl> - assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , <nl> - null , userInfo . usri1 _ password . toString ( ) , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> + assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name , <nl> + null , userInfo . usri1 _ password , WinBase . LOGON32 _ LOGON _ NETWORK , <nl> WinBase . LOGON32 _ PROVIDER _ DEFAULT , phUser ) ) ; <nl> Advapi32Util . Account account = Advapi32Util . getTokenAccount ( phUser . getValue ( ) ) ; <nl> assertTrue ( account . name . length ( ) > 0 ) ; <nl> - assertEquals ( userInfo . usri1 _ name . toString ( ) , account . name ) ; <nl> + assertEquals ( userInfo . usri1 _ name , account . name ) ; <nl> } finally { <nl> HANDLE hUser = phUser . getValue ( ) ; <nl> if ( ! WinBase . INVALID _ HANDLE _ VALUE . equals ( hUser ) ) { <nl> @ @ - 208 , 7 + 208 , 7 @ @ public class Advapi32UtilTest extends TestCase { <nl> } <nl> } <nl> } finally { <nl> - assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name . toString ( ) ) ) ; <nl> + assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name ) ) ; <nl> } <nl> } <nl> <nl> @ @ - 585 , 7 + 585 , 7 @ @ public class Advapi32UtilTest extends TestCase { <nl> } <nl> <nl> public void testRegistryGetValues ( ) { <nl> - String uu = new String ( " A " + " \ \ u00ea " + " \ \ u00f1 " + " \ \ u00fc " + " C " ) ; <nl> + String uu = " A \ \ u00ea \ \ u00f1 \ \ u00fcC " ; <nl> Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; <nl> Advapi32Util . registrySetIntValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " FourtyTwo " + uu , 42 ) ; <nl> Advapi32Util . registrySetStringValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " 42 " + uu , " FourtyTwo " + uu ) ; <nl> @ @ - 620 , 7 + 620 , 7 @ @ public class Advapi32UtilTest extends TestCase { <nl> public void testRegistryGetValuesSamExtra ( ) { <nl> if ( ! is64bitWindows ( ) ) return ; <nl> <nl> - String uu = new String ( " A " + " \ \ u00ea " + " \ \ u00f1 " + " \ \ u00fc " + " C " ) ; <nl> + String uu = " A \ \ u00ea \ \ u00f1 \ \ u00fcC " ; <nl> Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ Classes \ \ CLSID " , " JNA " , WinNT . KEY _ WOW64 _ 64KEY ) ; <nl> Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ Classes \ \ CLSID " , " JNA " , WinNT . KEY _ WOW64 _ 32KEY ) ; <nl> Advapi32Util . registrySetIntValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ Classes \ \ CLSID \ \ JNA " , " Number " + uu , 64 , WinNT . KEY _ WOW64 _ 64KEY ) ;
NEAREST DIFF (one line): diff - - git a / jnalib / contrib / src / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / jnalib / contrib / src / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> index ede9308 . . 6697ffd 100644 <nl> - - - a / jnalib / contrib / src / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> + + + b / jnalib / contrib / src / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> @ @ - 16 , 8 + 16 , 6 @ @ import junit . framework . TestCase ; <nl> <nl> import com . sun . jna . Memory ; <nl> import com . sun . jna . Native ; <nl> - import com . sun . jna . WString ; <nl> - import com . sun . jna . platform . win32 . LMAccess . USER _ INFO _ 1 ; <nl> import com . sun . jna . platform . win32 . W32API . HANDLE ; <nl> import com . sun . jna . platform . win32 . W32API . HANDLEByReference ; <nl> import com . sun . jna . platform . win32 . WinNT . PSID ; <nl> @ @ - 264 , 6 + 262 , 6 @ @ public class Advapi32Test extends TestCase { <nl> 	 	 assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( <nl> 	 	 	 	 null , userInfo . usri1 _ name . toString ( ) ) ) ; 	 	 	 <nl> 	 	 } <nl> - 	 	 * / <nl> } <nl> + 	 * / <nl> }

TEST DIFF:
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java 
 index 8f28651 . . e016fb8 100755 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java 
 @ @ - 468 , 8 + 468 , 8 @ @ public class Advapi32Test extends TestCase { 
 	 	 try { 
 	 	 	 HANDLEByReference phUser = new HANDLEByReference ( ) ; 
 	 	 	 try { 
 - 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , 
 - 	 	 	 	 	 	 null , userInfo . usri1 _ password . toString ( ) , WinBase . LOGON32 _ LOGON _ NETWORK , 
 + 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name , 
 + 	 	 	 	 	 	 null , userInfo . usri1 _ password , WinBase . LOGON32 _ LOGON _ NETWORK , 
 	 	 	 	 	 	 WinBase . LOGON32 _ PROVIDER _ DEFAULT , phUser ) ) ; 
 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . ImpersonateLoggedOnUser ( phUser . getValue ( ) ) ) ; 
 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . RevertToSelf ( ) ) ; 
 @ @ - 481 , 7 + 481 , 7 @ @ public class Advapi32Test extends TestCase { 
 	 	 	 } 
 	 	 } finally { 
 	 	 assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( 
 - 	 	 	 	 null , userInfo . usri1 _ name . toString ( ) ) ) ; 
 + 	 	 	 	 null , userInfo . usri1 _ name ) ) ; 
 	 	 } 
 } 
 
 @ @ - 777 , 19 + 777 , 17 @ @ public class Advapi32Test extends TestCase { 
 SECURITY _ DESCRIPTOR sd = new SECURITY _ DESCRIPTOR ( 64 * 1024 ) ; 
 assertTrue ( Advapi32 . INSTANCE . InitializeSecurityDescriptor ( sd , WinNT . SECURITY _ DESCRIPTOR _ REVISION ) ) ; 
 
 - ACL pAcl ; 
 - int cbAcl = 0 ; 
 PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; 
 IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; 
 assertTrue ( " Failed to create well - known SID " , 
 Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; 
 
 int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; 
 - cbAcl = Native . getNativeSize ( ACL . class , null ) ; 
 + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; 
 cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; 
 cbAcl + = ( sidLength - DWORD . SIZE ) ; 
 cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; 
 - pAcl = new ACL ( cbAcl ) ; 
 + ACL pAcl = new ACL ( cbAcl ) ; 
 assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; 
 assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAce ( pAcl , WinNT . ACL _ REVISION , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; 
 assertTrue ( Advapi32 . INSTANCE . SetSecurityDescriptorDacl ( sd , true , pAcl , false ) ) ; 
 @ @ - 805 , 36 + 803 , 32 @ @ public class Advapi32Test extends TestCase { 
 } 
 
 public void testInitializeAcl ( ) throws IOException { 
 - ACL pAcl ; 
 - int cbAcl = 0 ; 
 PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; 
 IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; 
 assertTrue ( " Failed to create well - known SID " , 
 Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; 
 
 int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; 
 - cbAcl = Native . getNativeSize ( ACL . class , null ) ; 
 + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; 
 cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; 
 cbAcl + = ( sidLength - DWORD . SIZE ) ; 
 cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; 
 - pAcl = new ACL ( cbAcl ) ; 
 + ACL pAcl = new ACL ( cbAcl ) ; 
 assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; 
 } 
 
 public void testGetAce ( ) throws IOException { 
 - ACL pAcl ; 
 - int cbAcl = 0 ; 
 PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; 
 IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; 
 assertTrue ( " Failed to create well - known SID " , 
 Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; 
 
 int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; 
 - cbAcl = Native . getNativeSize ( ACL . class , null ) ; 
 + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; 
 cbAcl + = Native . getNativeSize ( ACCESS _ ALLOWED _ ACE . class , null ) ; 
 cbAcl + = ( sidLength - DWORD . SIZE ) ; 
 cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; 
 - pAcl = new ACL ( cbAcl ) ; 
 + ACL pAcl = new ACL ( cbAcl ) ; 
 assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; 
 assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAce ( pAcl , WinNT . ACL _ REVISION , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; 
 
 @ @ - 846 , 18 + 840 , 16 @ @ public class Advapi32Test extends TestCase { 
 } 
 
 public void testAddAce ( ) throws IOException { 
 - ACL pAcl ; 
 - int cbAcl = 0 ; 
 PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; 
 IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; 
 assertTrue ( " Failed to create well - known SID " , 
 Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; 
 
 int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; 
 - cbAcl = Native . getNativeSize ( ACL . class , null ) ; 
 + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; 
 cbAcl + = Advapi32Util . getAceSize ( sidLength ) ; 
 cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; 
 - pAcl = new ACL ( cbAcl ) ; 
 + ACL pAcl = new ACL ( cbAcl ) ; 
 ACCESS _ ALLOWED _ ACE pace = new ACCESS _ ALLOWED _ ACE ( WinNT . STANDARD _ RIGHTS _ ALL , 
 WinNT . INHERITED _ ACE , 
 pSid ) ; 
 @ @ - 873 , 18 + 865 , 16 @ @ public class Advapi32Test extends TestCase { 
 } 
 
 public void testAddAccessAllowedAce ( ) throws IOException { 
 - ACL pAcl ; 
 - int cbAcl = 0 ; 
 PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; 
 IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; 
 assertTrue ( " Failed to create well - known SID " , 
 Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; 
 
 int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; 
 - cbAcl = Native . getNativeSize ( ACL . class , null ) ; 
 + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; 
 cbAcl + = Advapi32Util . getAceSize ( sidLength ) ; 
 cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; 
 - pAcl = new ACL ( cbAcl ) ; 
 + ACL pAcl = new ACL ( cbAcl ) ; 
 assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; 
 assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAce ( pAcl , WinNT . ACL _ REVISION , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; 
 
 @ @ - 896 , 18 + 886 , 16 @ @ public class Advapi32Test extends TestCase { 
 } 
 
 public void testAddAccessAllowedAceEx ( ) throws IOException { 
 - ACL pAcl ; 
 - int cbAcl = 0 ; 
 PSID pSid = new PSID ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; 
 IntByReference cbSid = new IntByReference ( WinNT . SECURITY _ MAX _ SID _ SIZE ) ; 
 assertTrue ( " Failed to create well - known SID " , 
 Advapi32 . INSTANCE . CreateWellKnownSid ( WELL _ KNOWN _ SID _ TYPE . WinBuiltinAdministratorsSid , null , pSid , cbSid ) ) ; 
 
 int sidLength = Advapi32 . INSTANCE . GetLengthSid ( pSid ) ; 
 - cbAcl = Native . getNativeSize ( ACL . class , null ) ; 
 + int cbAcl = Native . getNativeSize ( ACL . class , null ) ; 
 cbAcl + = Advapi32Util . getAceSize ( sidLength ) ; 
 cbAcl = Advapi32Util . alignOnDWORD ( cbAcl ) ; 
 - pAcl = new ACL ( cbAcl ) ; 
 + ACL pAcl = new ACL ( cbAcl ) ; 
 assertTrue ( Advapi32 . INSTANCE . InitializeAcl ( pAcl , cbAcl , WinNT . ACL _ REVISION ) ) ; 
 assertTrue ( Advapi32 . INSTANCE . AddAccessAllowedAceEx ( pAcl , WinNT . ACL _ REVISION , WinNT . INHERIT _ ONLY _ ACE , WinNT . STANDARD _ RIGHTS _ ALL , pSid ) ) ; 
 
 @ @ - 1060 , 8 + 1048 , 8 @ @ public class Advapi32Test extends TestCase { 
 pevlr = pevlr . share ( record . Length . intValue ( ) ) ; 
 } 
 	 } 
 - assertTrue ( " Unexpected error after reading event log : " 
 - + new Win32Exception ( rc ) , 
 + assertTrue ( String . format ( " Unexpected error after reading event log : 0x % 08X ( % s ) " 
 + , rc , Kernel32Util . formatMessage ( rc ) ) , 
 rc = = W32Errors . ERROR _ HANDLE _ EOF | | rc = = 0 ) ; 
 assertTrue ( " Error closing event log " , 
 Advapi32 . INSTANCE . CloseEventLog ( h ) ) ; 
 @ @ - 2099 , 7 + 2087 , 7 @ @ public class Advapi32Test extends TestCase { 
 Advapi32 . INSTANCE . CloseEncryptedFileRaw ( pvContext2 . getValue ( ) ) ; 
 
 file . delete ( ) ; 
 - new File ( lbFileName2 . toString ( ) ) . delete ( ) ; 
 + new File ( lbFileName2 ) . delete ( ) ; 
 } 
 
 private File createTempFile ( ) throws Exception { 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java 
 index f333426 . . 3903a5b 100755 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java 
 @ @ - 160 , 8 + 160 , 8 @ @ public class Advapi32UtilTest extends TestCase { 
 try { 
 HANDLEByReference phUser = new HANDLEByReference ( ) ; 
 try { 
 - assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , 
 - null , userInfo . usri1 _ password . toString ( ) , WinBase . LOGON32 _ LOGON _ NETWORK , 
 + assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name , 
 + null , userInfo . usri1 _ password , WinBase . LOGON32 _ LOGON _ NETWORK , 
 WinBase . LOGON32 _ PROVIDER _ DEFAULT , phUser ) ) ; 
 Account [ ] groups = Advapi32Util . getTokenGroups ( phUser . getValue ( ) ) ; 
 assertTrue ( groups . length > 0 ) ; 
 @ @ - 179 , 7 + 179 , 7 @ @ public class Advapi32UtilTest extends TestCase { 
 } finally { 
 assertEquals ( " Error in NetUserDel " , 
 LMErr . NERR _ Success , 
 - Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name . toString ( ) ) ) ; 
 + Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name ) ) ; 
 } 
 } 
 
 @ @ - 195 , 12 + 195 , 12 @ @ public class Advapi32UtilTest extends TestCase { 
 try { 
 HANDLEByReference phUser = new HANDLEByReference ( ) ; 
 try { 
 - assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , 
 - null , userInfo . usri1 _ password . toString ( ) , WinBase . LOGON32 _ LOGON _ NETWORK , 
 + assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name , 
 + null , userInfo . usri1 _ password , WinBase . LOGON32 _ LOGON _ NETWORK , 
 WinBase . LOGON32 _ PROVIDER _ DEFAULT , phUser ) ) ; 
 Advapi32Util . Account account = Advapi32Util . getTokenAccount ( phUser . getValue ( ) ) ; 
 assertTrue ( account . name . length ( ) > 0 ) ; 
 - assertEquals ( userInfo . usri1 _ name . toString ( ) , account . name ) ; 
 + assertEquals ( userInfo . usri1 _ name , account . name ) ; 
 } finally { 
 HANDLE hUser = phUser . getValue ( ) ; 
 if ( ! WinBase . INVALID _ HANDLE _ VALUE . equals ( hUser ) ) { 
 @ @ - 208 , 7 + 208 , 7 @ @ public class Advapi32UtilTest extends TestCase { 
 } 
 } 
 } finally { 
 - assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name . toString ( ) ) ) ; 
 + assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name ) ) ; 
 } 
 } 
 
 @ @ - 585 , 7 + 585 , 7 @ @ public class Advapi32UtilTest extends TestCase { 
 } 
 
 public void testRegistryGetValues ( ) { 
 - String uu = new String ( " A " + " \ \ u00ea " + " \ \ u00f1 " + " \ \ u00fc " + " C " ) ; 
 + String uu = " A \ \ u00ea \ \ u00f1 \ \ u00fcC " ; 
 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software " , " JNA " ) ; 
 Advapi32Util . registrySetIntValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " FourtyTwo " + uu , 42 ) ; 
 Advapi32Util . registrySetStringValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ JNA " , " 42 " + uu , " FourtyTwo " + uu ) ; 
 @ @ - 620 , 7 + 620 , 7 @ @ public class Advapi32UtilTest extends TestCase { 
 public void testRegistryGetValuesSamExtra ( ) { 
 if ( ! is64bitWindows ( ) ) return ; 
 
 - String uu = new String ( " A " + " \ \ u00ea " + " \ \ u00f1 " + " \ \ u00fc " + " C " ) ; 
 + String uu = " A \ \ u00ea \ \ u00f1 \ \ u00fcC " ; 
 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ Classes \ \ CLSID " , " JNA " , WinNT . KEY _ WOW64 _ 64KEY ) ; 
 Advapi32Util . registryCreateKey ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ Classes \ \ CLSID " , " JNA " , WinNT . KEY _ WOW64 _ 32KEY ) ; 
 Advapi32Util . registrySetIntValue ( WinReg . HKEY _ CURRENT _ USER , " Software \ \ Classes \ \ CLSID \ \ JNA " , " Number " + uu , 64 , WinNT . KEY _ WOW64 _ 64KEY ) ;

NEAREST DIFF:
diff - - git a / jnalib / contrib / src / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / jnalib / contrib / src / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java 
 index ede9308 . . 6697ffd 100644 
 - - - a / jnalib / contrib / src / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java 
 + + + b / jnalib / contrib / src / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java 
 @ @ - 16 , 8 + 16 , 6 @ @ import junit . framework . TestCase ; 
 
 import com . sun . jna . Memory ; 
 import com . sun . jna . Native ; 
 - import com . sun . jna . WString ; 
 - import com . sun . jna . platform . win32 . LMAccess . USER _ INFO _ 1 ; 
 import com . sun . jna . platform . win32 . W32API . HANDLE ; 
 import com . sun . jna . platform . win32 . W32API . HANDLEByReference ; 
 import com . sun . jna . platform . win32 . WinNT . PSID ; 
 @ @ - 264 , 6 + 262 , 6 @ @ public class Advapi32Test extends TestCase { 
 	 	 assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( 
 	 	 	 	 null , userInfo . usri1 _ name . toString ( ) ) ) ; 	 	 	 
 	 	 } 
 - 	 	 * / 
 } 
 + 	 * / 
 }
