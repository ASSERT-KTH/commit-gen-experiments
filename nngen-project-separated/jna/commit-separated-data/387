BLEU SCORE: 0.11044795567078944

TEST MSG: some changes to find issue with JNA 4
GENERATED MSG: some changes

TEST DIFF (one line): diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> index 4cf03e8 . . 50dfd1e 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java <nl> @ @ - 18 , 6 + 18 , 7 @ @ import java . io . FileNotFoundException ; <nl> import java . io . FileOutputStream ; <nl> import java . io . IOException ; <nl> <nl> + import com . sun . jna . Native ; <nl> import com . sun . jna . platform . win32 . OaIdl . TYPEKIND ; <nl> import com . sun . jna . platform . win32 . COM . TypeLibUtil ; <nl> import com . sun . jna . platform . win32 . COM . TypeLibUtil . TypeLibDoc ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java <nl> index 9ecf1c6 . . 5903e2f 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java <nl> @ @ - 52 , 8 + 52 , 8 @ @ public class TlbFunction extends TlbAbstractMethod implements Variant { <nl> <nl> String methodparams = " " ; <nl> String methodvariables = " " ; <nl> - short vtableId = funcDesc . oVft ; <nl> - short paramCount = funcDesc . cParams ; <nl> + int vtableId = funcDesc . oVft ; <nl> + int paramCount = funcDesc . cParams ; <nl> ELEMDESC elemDesdRetType = funcDesc . elemdescFunc ; <nl> String returnType = this . getType ( elemDesdRetType . tdesc ) ; <nl> String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java <nl> index 812a9f7 . . caa7ab9 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java <nl> @ @ - 56 , 8 + 56 , 8 @ @ public class TlbFunctionStub extends TlbAbstractMethod implements Variant { <nl> <nl> String methodparams = " " ; <nl> String methodvariables = " " ; <nl> - short vtableId = funcDesc . oVft ; <nl> - short paramCount = funcDesc . cParams ; <nl> + int vtableId = funcDesc . oVft ; <nl> + int paramCount = funcDesc . cParams ; <nl> ELEMDESC elemDesdRetType = funcDesc . elemdescFunc ; <nl> String returnType = this . getType ( elemDesdRetType . tdesc ) ; <nl> String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java <nl> index 37ce566 . . 4556168 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java <nl> @ @ - 47 , 7 + 47 , 7 @ @ public class TlbPropertyGet extends TlbAbstractMethod implements Variant { <nl> super ( index , typeLibUtil , funcDesc , typeInfoUtil ) ; <nl> <nl> this . methodName = " get " + this . getMethodName ( ) ; <nl> - short vtableId = funcDesc . oVft ; <nl> + int vtableId = funcDesc . oVft ; <nl> String returnType = this . getType ( funcDesc ) ; <nl> <nl> this . replaceVariable ( " helpstring " , docStr ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java <nl> index 190c62e . . 3969ffb 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java <nl> @ @ - 53 , 7 + 53 , 7 @ @ public class TlbPropertyGetStub extends TlbAbstractMethod implements Variant { <nl> TypeInfoDoc typeInfoDoc = typeInfoUtil . getDocumentation ( funcDesc . memid ) ; <nl> String docStr = typeInfoDoc . getDocString ( ) ; <nl> String methodname = " get " + typeInfoDoc . getName ( ) ; <nl> - short vtableId = funcDesc . oVft ; <nl> + int vtableId = funcDesc . oVft ; <nl> String returnType = this . getType ( funcDesc ) ; <nl> <nl> this . replaceVariable ( " helpstring " , docStr ) ; <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java <nl> index c6be7c2 . . aaaced6 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java <nl> @ @ - 53 , 8 + 53 , 8 @ @ public class TlbPropertyPut extends TlbAbstractMethod implements Variant { <nl> this . methodName = " set " + getMethodName ( ) ; <nl> String methodparams = " " ; <nl> String methodvariables = " , " ; <nl> - short vtableId = funcDesc . oVft ; <nl> - short paramCount = funcDesc . cParams ; <nl> + int vtableId = funcDesc . oVft ; <nl> + int paramCount = funcDesc . cParams ; <nl> String varType ; <nl> String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java <nl> index 2746ae1 . . 14b8025 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java <nl> @ @ - 54 , 8 + 54 , 8 @ @ public class TlbPropertyPutStub extends TlbAbstractMethod implements Variant { <nl> String docStr = typeInfoDoc . getDocString ( ) ; <nl> String methodname = " set " + typeInfoDoc . getName ( ) ; <nl> String methodparams = " " ; <nl> - short vtableId = funcDesc . oVft ; <nl> - short paramCount = funcDesc . cParams ; <nl> + int vtableId = funcDesc . oVft ; <nl> + int paramCount = funcDesc . cParams ; <nl> String varType ; <nl> String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; <nl> <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> index edd2ddf . . aaf8cc6 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java <nl> @ @ - 786 , 13 + 786 , 13 @ @ public interface OaIdl { <nl> public INVOKEKIND invkind ; <nl> / / / C type : CALLCONV <nl> public CALLCONV callconv ; <nl> - public short cParams ; <nl> - public short cParamsOpt ; <nl> - public short oVft ; <nl> - public short cScodes ; <nl> + public int cParams ; <nl> + public int cParamsOpt ; <nl> + public int oVft ; <nl> + public int cScodes ; <nl> / / / C type : ELEMDESC <nl> public ELEMDESC elemdescFunc ; <nl> - public short wFuncFlags ; <nl> + public int wFuncFlags ; <nl> <nl> public FUNCDESC ( ) { <nl> } <nl> @ @ - 808 , 7 + 808 , 7 @ @ public interface OaIdl { <nl> } <nl> <nl> @ Override <nl> - protected List getFieldOrder ( ) { <nl> + protected List < String > getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " memid " , " lprgscode " , <nl> " lprgelemdescParam " , " funckind " , " invkind " , " callconv " , <nl> " cParams " , " cParamsOpt " , " oVft " , " cScodes " , " elemdescFunc " , <nl> @ @ - 1116 , 7 + 1116 , 7 @ @ public interface OaIdl { <nl> } <nl> <nl> @ Override <nl> - protected List getFieldOrder ( ) { <nl> + protected List < String > getFieldOrder ( ) { <nl> return Arrays . asList ( new String [ ] { " value " } ) ; <nl> } <nl> } ; <nl> diff - - git a / hs _ err _ pid8924 . log b / hs _ err _ pid8924 . log <nl> new file mode 100644 <nl> index 0000000 . . 4f1ebef <nl> - - - / dev / null <nl> + + + b / hs _ err _ pid8924 . log <nl> @ @ - 0 , 0 + 1 , 345 @ @ <nl> + # <nl> + # A fatal error has been detected by the Java Runtime Environment : <nl> + # <nl> + # EXCEPTION _ ACCESS _ VIOLATION ( 0xc0000005 ) at pc = 0x187f6731 , pid = 8924 , tid = 8748 <nl> + # <nl> + # JRE version : 7 . 0 _ 17 - b02 <nl> + # Java VM : Java HotSpot ( TM ) Client VM ( 23 . 7 - b01 mixed mode windows - x86 ) <nl> + # Problematic frame : <nl> + # C [ jna1538475758625816562 . dll + 0x6731 ] Java _ com _ sun _ jna _ Native _ getInt + 0x21 <nl> + # <nl> + # Failed to write core dump . Minidumps are not enabled by default on client versions of Windows <nl> + # <nl> + # If you would like to submit a bug report , please visit : <nl> + # http : / / bugreport . sun . com / bugreport / crash . jsp <nl> + # The crash happened outside the Java Virtual Machine in native code . <nl> + # See problematic frame for where to report the bug . <nl> + # <nl> + <nl> + - - - - - - - - - - - - - - - T H R E A D - - - - - - - - - - - - - - - <nl> + <nl> + Current thread ( 0x00ddc000 ) : JavaThread " main " [ _ thread _ in _ native , id = 8748 , stack ( 0x00e80000 , 0x00ed0000 ) ] <nl> + <nl> + siginfo : ExceptionCode = 0xc0000005 , reading address 0x0065006a <nl> + <nl> + Registers : <nl> + EAX = 0x0065006a , EBX = 0x1486f2a0 , ECX = 0x00ddc128 , EDX = 0x00000000 <nl> + ESP = 0x00ece620 , EBP = 0x00ece6e8 , ESI = 0x1486f2a0 , EDI = 0x00ddc000 <nl> + EIP = 0x187f6731 , EFLAGS = 0x00010246 <nl> + <nl> + Top of Stack : ( sp = 0x00ece620 ) <nl> + 0x00ece620 : 5a60549c 0000000e 00ddc000 00000000 <nl> + 0x00ece630 : 00ece654 00ece65c 00000000 00000000 <nl> + 0x00ece640 : 00000001 00ddc000 5a555d65 00ddc000 <nl> + 0x00ece650 : 00ddc7d0 00cddc10 00ddc3b0 00ddc3b8 <nl> + 0x00ece660 : 00ddc7a4 00cddc10 00ddc7c4 00000000 <nl> + 0x00ece670 : 00ddc7d0 5a55c64f 00ddc000 00ddc7c8 <nl> + 0x00ece680 : 00000001 00ddc301 00cddc10 00ddc3b0 <nl> + 0x00ece690 : 00ddc3b8 00ddc7a4 00000000 00ddc128 <nl> + <nl> + Instructions : ( pc = 0x187f6731 ) <nl> + 0x187f6711 : 31 c0 89 e5 81 ec c8 00 00 00 89 85 54 ff ff ff <nl> + 0x187f6721 : a1 00 40 80 18 31 d2 85 c0 75 4c 8b 45 10 85 d2 <nl> + 0x187f6731 : 8b 00 89 85 54 ff ff ff 74 1d b8 08 51 80 18 b9 <nl> + 0x187f6741 : 29 50 80 18 89 44 24 08 8b 45 08 89 4c 24 04 89 <nl> + <nl> + <nl> + Register to memory mapping : <nl> + <nl> + EAX = 0x0065006a is an unknown value <nl> + EBX = 0x1486f2a0 is an oop <nl> + { method } <nl> + - klass : { other class } <nl> + ECX = 0x00ddc128 is an unknown value <nl> + EDX = 0x00000000 is an unknown value <nl> + ESP = 0x00ece620 is pointing into the stack for thread : 0x00ddc000 <nl> + EBP = 0x00ece6e8 is pointing into the stack for thread : 0x00ddc000 <nl> + ESI = 0x1486f2a0 is an oop <nl> + { method } <nl> + - klass : { other class } <nl> + EDI = 0x00ddc000 is a thread <nl> + <nl> + <nl> + Stack : [ 0x00e80000 , 0x00ed0000 ] , sp = 0x00ece620 , free space = 313k <nl> + Native frames : ( J = compiled Java code , j = interpreted , Vv = VM code , C = native code ) <nl> + C [ jna1538475758625816562 . dll + 0x6731 ] Java _ com _ sun _ jna _ Native _ getInt + 0x21 <nl> + j com . sun . jna . Native . getInt ( J ) I + 0 <nl> + j com . sun . jna . Pointer . getInt ( J ) I + 6 <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + j com . sun . jna . Structure . conditionalAutoRead ( ) V + 8 <nl> + j com . sun . jna . Structure . updateStructureByReference ( Ljava / lang / Class ; Lcom / sun / jna / Structure ; Lcom / sun / jna / Pointer ; ) Lcom / sun / jna / Structure ; + 68 <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + j com . sun . jna . Structure . conditionalAutoRead ( ) V + 8 <nl> + j com . sun . jna . Structure . updateStructureByReference ( Ljava / lang / Class ; Lcom / sun / jna / Structure ; Lcom / sun / jna / Pointer ; ) Lcom / sun / jna / Structure ; + 68 <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + j com . sun . jna . platform . win32 . COM . TypeInfoUtil . getFuncDesc ( I ) Lcom / sun / jna / platform / win32 / OaIdl $ FUNCDESC ; + 40 <nl> + j com . sun . jna . platform . win32 . COM . tlb . imp . TlbDispInterface . < init > ( ILjava / lang / String ; Lcom / sun / jna / platform / win32 / COM / TypeLibUtil ; ) V + 136 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . createCOMDispInterface ( ILjava / lang / String ; Lcom / sun / jna / platform / win32 / COM / TypeLibUtil ; ) V + 7 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . startCOM2Java ( ) V + 123 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . < init > ( [ Ljava / lang / String ; ) V + 116 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . main ( [ Ljava / lang / String ; ) V + 4 <nl> + v ~ StubRoutines : : call _ stub <nl> + V [ jvm . dll + 0x12a34a ] <nl> + V [ jvm . dll + 0x1d968e ] <nl> + V [ jvm . dll + 0x12a3cd ] <nl> + V [ jvm . dll + 0xaede4 ] <nl> + V [ jvm . dll + 0xb9157 ] <nl> + C [ javaw . exe + 0x206c ] <nl> + C [ javaw . exe + 0xa5a1 ] <nl> + C [ javaw . exe + 0xa62b ] <nl> + C [ kernel32 . dll + 0x133aa ] BaseThreadInitThunk + 0x12 <nl> + C [ ntdll . dll + 0x39ef2 ] RtlInitializeExceptionChain + 0x63 <nl> + C [ ntdll . dll + 0x39ec5 ] RtlInitializeExceptionChain + 0x36 <nl> + <nl> + Java frames : ( J = compiled Java code , j = interpreted , Vv = VM code ) <nl> + j com . sun . jna . Native . getInt ( J ) I + 0 <nl> + j com . sun . jna . Pointer . getInt ( J ) I + 6 <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . read ( ) V <nl> + j com . sun . jna . Structure . autoRead ( ) V + 8 <nl> + j com . sun . jna . Structure . conditionalAutoRead ( ) V + 8 <nl> + j com . sun . jna . Structure . updateStructureByReference ( Ljava / lang / Class ; Lcom / sun / jna / Structure ; Lcom / sun / jna / Pointer ; ) Lcom / sun / jna / Structure ; + 68 <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . read ( ) V <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Union . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . read ( ) V <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . read ( ) V <nl> + j com . sun . jna . Pointer . readArray ( JLjava / lang / Object ; Ljava / lang / Class ; ) V + 331 <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . read ( ) V <nl> + j com . sun . jna . Structure . autoRead ( ) V + 8 <nl> + j com . sun . jna . Structure . conditionalAutoRead ( ) V + 8 <nl> + j com . sun . jna . Structure . updateStructureByReference ( Ljava / lang / Class ; Lcom / sun / jna / Structure ; Lcom / sun / jna / Pointer ; ) Lcom / sun / jna / Structure ; + 68 <nl> + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; <nl> + J com . sun . jna . Structure . read ( ) V <nl> + j com . sun . jna . platform . win32 . OaIdl $ FUNCDESC . < init > ( Lcom / sun / jna / Pointer ; ) V + 6 <nl> + j com . sun . jna . platform . win32 . COM . TypeInfoUtil . getFuncDesc ( I ) Lcom / sun / jna / platform / win32 / OaIdl $ FUNCDESC ; + 40 <nl> + j com . sun . jna . platform . win32 . COM . tlb . imp . TlbDispInterface . < init > ( ILjava / lang / String ; Lcom / sun / jna / platform / win32 / COM / TypeLibUtil ; ) V + 136 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . createCOMDispInterface ( ILjava / lang / String ; Lcom / sun / jna / platform / win32 / COM / TypeLibUtil ; ) V + 7 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . startCOM2Java ( ) V + 123 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . < init > ( [ Ljava / lang / String ; ) V + 116 <nl> + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . main ( [ Ljava / lang / String ; ) V + 4 <nl> + v ~ StubRoutines : : call _ stub <nl> + <nl> + - - - - - - - - - - - - - - - P R O C E S S - - - - - - - - - - - - - - - <nl> + <nl> + Java Threads : ( = > current thread ) <nl> + 0x0104e800 JavaThread " Service Thread " daemon [ _ thread _ blocked , id = 6984 , stack ( 0x193a0000 , 0x193f0000 ) ] <nl> + 0x0104b400 JavaThread " C1 CompilerThread0 " daemon [ _ thread _ blocked , id = 8972 , stack ( 0x19400000 , 0x19450000 ) ] <nl> + 0x01042400 JavaThread " JDWP Command Reader " daemon [ _ thread _ in _ native , id = 6904 , stack ( 0x19350000 , 0x193a0000 ) ] <nl> + 0x01041c00 JavaThread " JDWP Event Helper Thread " daemon [ _ thread _ blocked , id = 5676 , stack ( 0x19260000 , 0x192b0000 ) ] <nl> + 0x01038c00 JavaThread " JDWP Transport Listener : dt _ socket " daemon [ _ thread _ blocked , id = 7904 , stack ( 0x18db0000 , 0x18e00000 ) ] <nl> + 0x0102dc00 JavaThread " Attach Listener " daemon [ _ thread _ blocked , id = 8612 , stack ( 0x18a50000 , 0x18aa0000 ) ] <nl> + 0x0102a400 JavaThread " Signal Dispatcher " daemon [ _ thread _ blocked , id = 9056 , stack ( 0x01230000 , 0x01280000 ) ] <nl> + 0x00fd0800 JavaThread " Finalizer " daemon [ _ thread _ blocked , id = 8304 , stack ( 0x00e20000 , 0x00e70000 ) ] <nl> + 0x00fcb000 JavaThread " Reference Handler " daemon [ _ thread _ blocked , id = 3996 , stack ( 0x18830000 , 0x18880000 ) ] <nl> + = > 0x00ddc000 JavaThread " main " [ _ thread _ in _ native , id = 8748 , stack ( 0x00e80000 , 0x00ed0000 ) ] <nl> + <nl> + Other Threads : <nl> + 0x00fc6800 VMThread [ stack : 0x187a0000 , 0x187f0000 ] [ id = 7036 ] <nl> + 0x01057800 WatcherThread [ stack : 0x190f0000 , 0x19140000 ] [ id = 2156 ] <nl> + <nl> + VM state : not at safepoint ( normal execution ) <nl> + <nl> + VM Mutex / Monitor currently owned by a thread : None <nl> + <nl> + Heap <nl> + def new generation total 4928K , used 4502K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) <nl> + eden space 4416K , 95 % used [ 0x046d0000 , 0x04aef728 , 0x04b20000 ) <nl> + from space 512K , 54 % used [ 0x04b20000 , 0x04b660e8 , 0x04ba0000 ) <nl> + to space 512K , 0 % used [ 0x04ba0000 , 0x04ba0000 , 0x04c20000 ) <nl> + tenured generation total 10944K , used 467K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) <nl> + the space 10944K , 4 % used [ 0x09c20000 , 0x09c94ee0 , 0x09c95000 , 0x0a6d0000 ) <nl> + compacting perm gen total 12288K , used 3774K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) <nl> + the space 12288K , 30 % used [ 0x146d0000 , 0x14a7f838 , 0x14a7fa00 , 0x152d0000 ) <nl> + No shared spaces configured . <nl> + <nl> + Card table byte _ map : [ 0x00f10000 , 0x00fc0000 ] byte _ map _ base : 0x00eec980 <nl> + <nl> + Polling page : 0x00130000 <nl> + <nl> + Code Cache [ 0x026d0000 , 0x027f0000 , 0x046d0000 ) <nl> + total _ blobs = 489 nmethods = 343 adapters = 88 free _ code _ cache = 31633Kb largest _ free _ block = 32392896 <nl> + <nl> + Compilation events ( 10 events ) : <nl> + Event : 0 . 594 Thread 0x0104b400 338 ! com . sun . jna . IntegerType : : fromNative ( 95 bytes ) <nl> + Event : 0 . 595 Thread 0x0104b400 nmethod 338 0x027e8008 code [ 0x027e8220 , 0x027e8930 ] <nl> + Event : 0 . 595 Thread 0x0104b400 339 com . sun . jna . Pointer : : getPointer ( 10 bytes ) <nl> + Event : 0 . 595 Thread 0x0104b400 nmethod 339 0x027e9388 code [ 0x027e9490 , 0x027e95cc ] <nl> + Event : 0 . 595 Thread 0x0104b400 340 com . sun . jna . Native : : getPointer ( 24 bytes ) <nl> + Event : 0 . 595 Thread 0x0104b400 nmethod 340 0x027e9688 code [ 0x027e9790 , 0x027e989c ] <nl> + Event : 0 . 610 Thread 0x0104b400 342 ! java . util . concurrent . ConcurrentHashMap $ Segment : : put ( 237 bytes ) <nl> + Event : 0 . 610 Thread 0x0104b400 nmethod 342 0x027e9c08 code [ 0x027e9d70 , 0x027ea258 ] <nl> + Event : 0 . 616 Thread 0x0104b400 343 com . sun . jna . Structure : : sortFields ( 87 bytes ) <nl> + Event : 0 . 617 Thread 0x0104b400 nmethod 343 0x027ea7c8 code [ 0x027ea950 , 0x027eab90 ] <nl> + <nl> + GC Heap History ( 4 events ) : <nl> + Event : 0 . 377 GC heap before <nl> + { Heap before GC invocations = 0 ( full 0 ) : <nl> + def new generation total 4928K , used 4416K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) <nl> + eden space 4416K , 100 % used [ 0x046d0000 , 0x04b20000 , 0x04b20000 ) <nl> + from space 512K , 0 % used [ 0x04b20000 , 0x04b20000 , 0x04ba0000 ) <nl> + to space 512K , 0 % used [ 0x04ba0000 , 0x04ba0000 , 0x04c20000 ) <nl> + tenured generation total 10944K , used 0K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) <nl> + the space 10944K , 0 % used [ 0x09c20000 , 0x09c20000 , 0x09c20200 , 0x0a6d0000 ) <nl> + compacting perm gen total 12288K , used 2965K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) <nl> + the space 12288K , 24 % used [ 0x146d0000 , 0x149b5468 , 0x149b5600 , 0x152d0000 ) <nl> + No shared spaces configured . <nl> + Event : 0 . 380 GC heap after <nl> + Heap after GC invocations = 1 ( full 0 ) : <nl> + def new generation total 4928K , used 499K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) <nl> + eden space 4416K , 0 % used [ 0x046d0000 , 0x046d0000 , 0x04b20000 ) <nl> + from space 512K , 97 % used [ 0x04ba0000 , 0x04c1cf68 , 0x04c20000 ) <nl> + to space 512K , 0 % used [ 0x04b20000 , 0x04b20000 , 0x04ba0000 ) <nl> + tenured generation total 10944K , used 0K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) <nl> + the space 10944K , 0 % used [ 0x09c20000 , 0x09c20000 , 0x09c20200 , 0x0a6d0000 ) <nl> + compacting perm gen total 12288K , used 2965K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) <nl> + the space 12288K , 24 % used [ 0x146d0000 , 0x149b5468 , 0x149b5600 , 0x152d0000 ) <nl> + No shared spaces configured . <nl> + } <nl> + Event : 0 . 539 GC heap before <nl> + { Heap before GC invocations = 1 ( full 0 ) : <nl> + def new generation total 4928K , used 4915K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) <nl> + eden space 4416K , 100 % used [ 0x046d0000 , 0x04b20000 , 0x04b20000 ) <nl> + from space 512K , 97 % used [ 0x04ba0000 , 0x04c1cf68 , 0x04c20000 ) <nl> + to space 512K , 0 % used [ 0x04b20000 , 0x04b20000 , 0x04ba0000 ) <nl> + tenured generation total 10944K , used 0K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) <nl> + the space 10944K , 0 % used [ 0x09c20000 , 0x09c20000 , 0x09c20200 , 0x0a6d0000 ) <nl> + compacting perm gen total 12288K , used 3719K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) <nl> + the space 12288K , 30 % used [ 0x146d0000 , 0x14a71e80 , 0x14a72000 , 0x152d0000 ) <nl> + No shared spaces configured . <nl> + Event : 0 . 544 GC heap after <nl> + Heap after GC invocations = 2 ( full 0 ) : <nl> + def new generation total 4928K , used 280K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) <nl> + eden space 4416K , 0 % used [ 0x046d0000 , 0x046d0000 , 0x04b20000 ) <nl> + from space 512K , 54 % used [ 0x04b20000 , 0x04b660e8 , 0x04ba0000 ) <nl> + to space 512K , 0 % used [ 0x04ba0000 , 0x04ba0000 , 0x04c20000 ) <nl> + tenured generation total 10944K , used 467K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) <nl> + the space 10944K , 4 % used [ 0x09c20000 , 0x09c94ee0 , 0x09c95000 , 0x0a6d0000 ) <nl> + compacting perm gen total 12288K , used 3719K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) <nl> + the space 12288K , 30 % used [ 0x146d0000 , 0x14a71e80 , 0x14a72000 , 0x152d0000 ) <nl> + No shared spaces configured . <nl> + } <nl> + <nl> + Deoptimization events ( 0 events ) : <nl> + No events <nl> + <nl> + Internal exceptions ( 10 events ) : <nl> + Event : 0 . 612 Thread 0x00ddc000 Threw 0x04a91a38 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 612 Thread 0x00ddc000 Threw 0x04a94998 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 612 Thread 0x00ddc000 Threw 0x04a97bb0 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 613 Thread 0x00ddc000 Threw 0x04a9aef0 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 613 Thread 0x00ddc000 Threw 0x04a9e090 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 614 Thread 0x00ddc000 Threw 0x04aa38f0 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 617 Thread 0x00ddc000 Threw 0x04abc610 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 617 Thread 0x00ddc000 Threw 0x04abfbc8 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 618 Thread 0x00ddc000 Threw 0x04ac4e20 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + Event : 0 . 619 Thread 0x00ddc000 Threw 0x04acb2e0 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 <nl> + <nl> + Events ( 10 events ) : <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027de5dc sp = 0x00eccd50 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00eccc88 mode 1 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027bfab0 sp = 0x00ece0b0 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00ecdfb8 mode 1 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027de5dc sp = 0x00ece120 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00ece058 mode 1 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027bfab0 sp = 0x00eccc00 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00eccb08 mode 1 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027de5dc sp = 0x00eccc70 <nl> + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00eccba8 mode 1 <nl> + <nl> + <nl> + Dynamic libraries : <nl> + 0x012a0000 - 0x012cf000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ bin \ javaw . exe <nl> + 0x77490000 - 0x77610000 	 C : \ Windows \ SysWOW64 \ ntdll . dll <nl> + 0x76f60000 - 0x77070000 	 C : \ Windows \ syswow64 \ kernel32 . dll <nl> + 0x75080000 - 0x750c7000 	 C : \ Windows \ syswow64 \ KERNELBASE . dll <nl> + 0x76cc0000 - 0x76d60000 	 C : \ Windows \ syswow64 \ ADVAPI32 . dll <nl> + 0x76a70000 - 0x76b1c000 	 C : \ Windows \ syswow64 \ msvcrt . dll <nl> + 0x77070000 - 0x77089000 	 C : \ Windows \ SysWOW64 \ sechost . dll <nl> + 0x76840000 - 0x76930000 	 C : \ Windows \ syswow64 \ RPCRT4 . dll <nl> + 0x74ff0000 - 0x75050000 	 C : \ Windows \ syswow64 \ SspiCli . dll <nl> + 0x74fe0000 - 0x74fec000 	 C : \ Windows \ syswow64 \ CRYPTBASE . dll <nl> + 0x76970000 - 0x76a70000 	 C : \ Windows \ syswow64 \ USER32 . dll <nl> + 0x76b90000 - 0x76c20000 	 C : \ Windows \ syswow64 \ GDI32 . dll <nl> + 0x76cb0000 - 0x76cba000 	 C : \ Windows \ syswow64 \ LPK . dll <nl> + 0x76e30000 - 0x76ecd000 	 C : \ Windows \ syswow64 \ USP10 . dll <nl> + 0x725f0000 - 0x7278e000 	 C : \ Windows \ WinSxS \ x86 _ microsoft . windows . common - controls _ 6595b64144ccf1df _ 6 . 0 . 7601 . 17514 _ none _ 41e6975e2bd6f2b2 \ COMCTL32 . dll <nl> + 0x75310000 - 0x75367000 	 C : \ Windows \ syswow64 \ SHLWAPI . dll <nl> + 0x76b20000 - 0x76b80000 	 C : \ Windows \ system32 \ IMM32 . DLL <nl> + 0x756a0000 - 0x7576c000 	 C : \ Windows \ syswow64 \ MSCTF . dll <nl> + 0x5e5d0000 - 0x5e68e000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ msvcr100 . dll <nl> + 0x5a4d0000 - 0x5a81c000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ client \ jvm . dll <nl> + 0x72550000 - 0x72557000 	 C : \ Windows \ system32 \ WSOCK32 . dll <nl> + 0x76d60000 - 0x76d95000 	 C : \ Windows \ syswow64 \ WS2 _ 32 . dll <nl> + 0x75790000 - 0x75796000 	 C : \ Windows \ syswow64 \ NSI . dll <nl> + 0x72510000 - 0x72542000 	 C : \ Windows \ system32 \ WINMM . dll <nl> + 0x76930000 - 0x76935000 	 C : \ Windows \ syswow64 \ PSAPI . DLL <nl> + 0x6f760000 - 0x6f76c000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ verify . dll <nl> + 0x5e730000 - 0x5e750000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ java . dll <nl> + 0x5e6c0000 - 0x5e6ea000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ jdwp . dll <nl> + 0x60ac0000 - 0x60ac7000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ npt . dll <nl> + 0x5e5b0000 - 0x5e5c3000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ zip . dll <nl> + 0x5e7c0000 - 0x5e7c8000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ dt _ socket . dll <nl> + 0x721f0000 - 0x72200000 	 C : \ Windows \ system32 \ NLAapi . dll <nl> + 0x71f90000 - 0x71fa0000 	 C : \ Windows \ system32 \ napinsp . dll <nl> + 0x71f70000 - 0x71f82000 	 C : \ Windows \ system32 \ pnrpnsp . dll <nl> + 0x71f30000 - 0x71f6c000 	 C : \ Windows \ System32 \ mswsock . dll <nl> + 0x72330000 - 0x72374000 	 C : \ Windows \ system32 \ DNSAPI . dll <nl> + 0x721e0000 - 0x721e8000 	 C : \ Windows \ System32 \ winrnr . dll <nl> + 0x71f20000 - 0x71f2d000 	 C : \ Windows \ system32 \ wshbth . dll <nl> + 0x72310000 - 0x7232c000 	 C : \ Windows \ system32 \ IPHLPAPI . DLL <nl> + 0x72300000 - 0x72307000 	 C : \ Windows \ system32 \ WINNSI . DLL <nl> + 0x71ee0000 - 0x71f18000 	 C : \ Windows \ System32 \ fwpuclnt . dll <nl> + 0x71ed0000 - 0x71ed6000 	 C : \ Windows \ system32 \ rasadhlp . dll <nl> + 0x71dc0000 - 0x71dc5000 	 C : \ Windows \ System32 \ wshtcpip . dll <nl> + 0x73750000 - 0x73766000 	 C : \ Windows \ system32 \ CRYPTSP . dll <nl> + 0x73710000 - 0x7374b000 	 C : \ Windows \ system32 \ rsaenh . dll <nl> + 0x725d0000 - 0x725e7000 	 C : \ Windows \ system32 \ USERENV . dll <nl> + 0x725c0000 - 0x725cb000 	 C : \ Windows \ system32 \ profapi . dll <nl> + 0x5e590000 - 0x5e5a4000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ net . dll <nl> + 0x71930000 - 0x71936000 	 C : \ Windows \ System32 \ wship6 . dll <nl> + 0x5e6b0000 - 0x5e6be000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ nio . dll <nl> + 0x187f0000 - 0x1882d000 	 C : \ Users \ twolf10 \ AppData \ Local \ Temp \ jna - - 911058587 \ jna1538475758625816562 . dll <nl> + 0x76ed0000 - 0x76f5f000 	 C : \ Windows \ syswow64 \ OleAut32 . dll <nl> + 0x75540000 - 0x7569c000 	 C : \ Windows \ syswow64 \ ole32 . dll <nl> + 0x72380000 - 0x723df000 	 C : \ Windows \ system32 \ SXS . DLL <nl> + 0x6bfb0000 - 0x6c09b000 	 C : \ Windows \ system32 \ dbghelp . dll <nl> + <nl> + VM Arguments : <nl> + jvm _ args : - agentlib : jdwp = transport = dt _ socket , suspend = y , address = localhost : 37591 - Djna . dump _ memory = true - Djna . debug _ load = true - Djna . debug _ load . jna = true - Dfile . encoding = Cp1252 <nl> + java _ command : com . sun . jna . platform . win32 . COM . tlb . TlbImp - tlb . file shell32 . dll <nl> + Launcher Type : SUN _ STANDARD <nl> + <nl> + Environment Variables : <nl> + JAVA _ HOME = C : \ Program Files \ Java \ jdk1 . 7 . 0 _ 17 <nl> + JRE _ HOME = C : \ Program Files \ Java \ jre7 <nl> + PATH = C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin ; C : \ Windows \ system32 ; C : \ Windows ; C : \ Windows \ System32 \ Wbem ; C : \ Windows \ System32 \ WindowsPowerShell \ v1 . 0 \ ; C : \ Windows \ SysWOW64 \ Empirum ; C : \ Program Files ( x86 ) \ Intel \ OpenCL SDK \ 2 . 0 \ bin \ x86 ; C : \ Program Files ( x86 ) \ Intel \ OpenCL SDK \ 2 . 0 \ bin \ x64 ; C : \ Program Files \ WIDCOMM \ Bluetooth Software \ ; C : \ Program Files \ WIDCOMM \ Bluetooth Software \ syswow64 ; C : \ Program Files \ T - Systems \ Global Remote ; C : \ Program Files ( x86 ) \ Innovator \ 11 _ 2 _ 2 \ inoexe ; C : \ Program Files \ TortoiseSVN \ bin ; C : \ Program Files \ Microsoft \ Web Platform Installer \ ; C : \ Program Files ( x86 ) \ Microsoft ASP . NET \ ASP . NET Web Pages \ v1 . 0 \ ; C : \ Program Files ( x86 ) \ Windows Kits \ 8 . 0 \ Windows Performance Toolkit \ ; C : \ Program Files \ Microsoft SQL Server \ 110 \ Tools \ Binn \ ; C : \ Program Files ( x86 ) \ Inno Setup 5 ; C : \ Program Files ( x86 ) \ WiX Toolset v3 . 7 \ bin <nl> + USERNAME = twolf10 <nl> + OS = Windows _ NT <nl> + PROCESSOR _ IDENTIFIER = Intel64 Family 6 Model 58 Stepping 9 , GenuineIntel <nl> + <nl> + <nl> + <nl> + - - - - - - - - - - - - - - - S Y S T E M - - - - - - - - - - - - - - - <nl> + <nl> + OS : Windows 7 , 64 bit Build 7601 Service Pack 1 <nl> + <nl> + CPU : total 4 ( 2 cores per cpu , 2 threads per core ) family 6 model 58 stepping 9 , cmov , cx8 , fxsr , mmx , sse , sse2 , sse3 , ssse3 , sse4 . 1 , sse4 . 2 , popcnt , avx , ht , tsc , tscinvbit , tscinv <nl> + <nl> + Memory : 4k page , physical 8259456k ( 4613224k free ) , swap 16517052k ( 12509656k free ) <nl> + <nl> + vm _ info : Java HotSpot ( TM ) Client VM ( 23 . 7 - b01 ) for windows - x86 JRE ( 1 . 7 . 0 _ 17 - b02 ) , built on Mar 1 2013 05 : 04 : 36 by " java _ re " with unknown MS VC + + : 1600 <nl> + <nl> + time : Mon Aug 19 14 : 32 : 31 2013 <nl> + elapsed time : 0 seconds <nl> + <nl> diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java <nl> index c7c4f17 . . c1d5224 100644 <nl> - - - a / src / com / sun / jna / Structure . java <nl> + + + b / src / com / sun / jna / Structure . java <nl> @ @ - 533 , 7 + 533 , 10 @ @ public abstract class Structure { <nl> } <nl> try { <nl> for ( Iterator i = fields ( ) . values ( ) . iterator ( ) ; i . hasNext ( ) ; ) { <nl> - readField ( ( StructField ) i . next ( ) ) ; <nl> + StructField structField = ( StructField ) i . next ( ) ; <nl> + System . out . println ( structField . name ) ; <nl> + System . out . println ( structField . type . toString ( ) ) ; <nl> + readField ( structField ) ; <nl> } <nl> } <nl> finally {
NEAREST DIFF (one line): diff - - git a / ChangeLog b / ChangeLog <nl> index 289d195 . . ff76645 100644 <nl> - - - a / ChangeLog <nl> + + + b / ChangeLog <nl> @ @ - 1 , 3 + 1 , 13 @ @ <nl> + 2013 - 01 - 10 Anthony Green < green @ moxielogic . com > <nl> + <nl> + 	 * configure . ac : Put local . exp in the right place . <nl> + 	 * configure : Rebuilt . <nl> + <nl> + 	 * src / x86 / ffi . c : Update comment about regparm function attributes . <nl> + 	 * src / x86 / sysv . S ( ffi _ closure _ SYSV ) : The SUNPRO compiler requires <nl> + 	 that all function arguments be passed on the stack ( no regparm <nl> + 	 support ) . <nl> + <nl> 2013 - 01 - 08 Anthony Green < green @ moxielogic . com > <nl> <nl> 	 * configure . ac : Generate local . exp . This sets CC _ FOR _ TARGET <nl> diff - - git a / configure b / configure <nl> index 5876eb7 . . 4a12b96 100755 <nl> - - - a / configure <nl> + + + b / configure <nl> @ @ - 13068 , 10 + 13068 , 10 @ @ ac _ compiler _ gnu = $ ac _ cv _ c _ compiler _ gnu <nl> <nl> if test " x $ GCC " = " xyes " ; then <nl> CFLAGS = " $ CFLAGS - fexceptions " <nl> - touch testsuite / local . exp <nl> + touch local . exp <nl> else <nl> cat > local . exp < < EOF <nl> - set CC _ FOR _ TARGET $ CC <nl> + set CC _ FOR _ TARGET " $ CC " <nl> EOF <nl> fi <nl> <nl> diff - - git a / configure . ac b / configure . ac <nl> index 7ffb36c . . 13d5bc2 100644 <nl> - - - a / configure . ac <nl> + + + b / configure . ac <nl> @ @ - 40 , 10 + 40 , 10 @ @ AX _ CC _ MAXOPT <nl> AX _ CFLAGS _ WARN _ ALL <nl> if test " x $ GCC " = " xyes " ; then <nl> CFLAGS = " $ CFLAGS - fexceptions " <nl> - touch testsuite / local . exp <nl> + touch local . exp <nl> else <nl> cat > local . exp < < EOF <nl> - set CC _ FOR _ TARGET $ CC <nl> + set CC _ FOR _ TARGET " $ CC " <nl> EOF <nl> fi <nl> <nl> diff - - git a / src / x86 / ffi . c b / src / x86 / ffi . c <nl> index 611e221 . . 3f46693 100644 <nl> - - - a / src / x86 / ffi . c <nl> + + + b / src / x86 / ffi . c <nl> @ @ - 424 , 7 + 424 , 7 @ @ void ffi _ call ( ffi _ cif * cif , void ( * fn ) ( void ) , void * rvalue , void * * avalue ) <nl> / * * private members * * / <nl> <nl> / * The following _ _ attribute _ _ ( ( regparm ( 1 ) ) ) decorations will have no effect <nl> - on MSVC - standard cdecl convention applies . * / <nl> + on MSVC or SUNPRO _ C - - standard conventions apply . * / <nl> static void ffi _ prep _ incoming _ args _ SYSV ( char * stack , void * * ret , <nl> void * * args , ffi _ cif * cif ) ; <nl> void FFI _ HIDDEN ffi _ closure _ SYSV ( ffi _ closure * ) <nl> diff - - git a / src / x86 / sysv . S b / src / x86 / sysv . S <nl> index 69e7e8d . . 71502bb 100644 <nl> - - - a / src / x86 / sysv . S <nl> + + + b / src / x86 / sysv . S <nl> @ @ - 182 , 9 + 182 , 19 @ @ ffi _ closure _ SYSV : <nl> 	 leal 	 - 24 ( % ebp ) , % edx <nl> 	 movl 	 % edx , - 12 ( % ebp ) 	 / * resp * / <nl> 	 leal 	 8 ( % ebp ) , % edx <nl> + # ifdef _ _ SUNPRO _ C <nl> + 	 / * The SUNPRO compiler doesn ' t support GCC ' s regparm function <nl> + 	 attribute , so we have to pass all three arguments to <nl> + 	 ffi _ closure _ SYSV _ inner on the stack . * / <nl> + 	 movl 	 % edx , 8 ( % esp ) 	 / * args = _ _ builtin _ dwarf _ cfa ( ) * / <nl> + 	 leal 	 - 12 ( % ebp ) , % edx <nl> + 	 movl 	 % edx , 4 ( % esp ) 	 / * & resp * / <nl> + 	 movl % eax , ( % esp ) / * closure * / <nl> + # else <nl> 	 movl 	 % edx , 4 ( % esp ) 	 / * args = _ _ builtin _ dwarf _ cfa ( ) * / <nl> 	 leal 	 - 12 ( % ebp ) , % edx <nl> 	 movl 	 % edx , ( % esp ) 	 / * & resp * / <nl> + # endif <nl> # if defined HAVE _ HIDDEN _ VISIBILITY _ ATTRIBUTE | | ! defined _ _ PIC _ _ <nl> 	 call 	 ffi _ closure _ SYSV _ inner <nl> # else

TEST DIFF:
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java 
 index 4cf03e8 . . 50dfd1e 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / TlbImp . java 
 @ @ - 18 , 6 + 18 , 7 @ @ import java . io . FileNotFoundException ; 
 import java . io . FileOutputStream ; 
 import java . io . IOException ; 
 
 + import com . sun . jna . Native ; 
 import com . sun . jna . platform . win32 . OaIdl . TYPEKIND ; 
 import com . sun . jna . platform . win32 . COM . TypeLibUtil ; 
 import com . sun . jna . platform . win32 . COM . TypeLibUtil . TypeLibDoc ; 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java 
 index 9ecf1c6 . . 5903e2f 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunction . java 
 @ @ - 52 , 8 + 52 , 8 @ @ public class TlbFunction extends TlbAbstractMethod implements Variant { 
 
 String methodparams = " " ; 
 String methodvariables = " " ; 
 - short vtableId = funcDesc . oVft ; 
 - short paramCount = funcDesc . cParams ; 
 + int vtableId = funcDesc . oVft ; 
 + int paramCount = funcDesc . cParams ; 
 ELEMDESC elemDesdRetType = funcDesc . elemdescFunc ; 
 String returnType = this . getType ( elemDesdRetType . tdesc ) ; 
 String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java 
 index 812a9f7 . . caa7ab9 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbFunctionStub . java 
 @ @ - 56 , 8 + 56 , 8 @ @ public class TlbFunctionStub extends TlbAbstractMethod implements Variant { 
 
 String methodparams = " " ; 
 String methodvariables = " " ; 
 - short vtableId = funcDesc . oVft ; 
 - short paramCount = funcDesc . cParams ; 
 + int vtableId = funcDesc . oVft ; 
 + int paramCount = funcDesc . cParams ; 
 ELEMDESC elemDesdRetType = funcDesc . elemdescFunc ; 
 String returnType = this . getType ( elemDesdRetType . tdesc ) ; 
 String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java 
 index 37ce566 . . 4556168 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGet . java 
 @ @ - 47 , 7 + 47 , 7 @ @ public class TlbPropertyGet extends TlbAbstractMethod implements Variant { 
 super ( index , typeLibUtil , funcDesc , typeInfoUtil ) ; 
 
 this . methodName = " get " + this . getMethodName ( ) ; 
 - short vtableId = funcDesc . oVft ; 
 + int vtableId = funcDesc . oVft ; 
 String returnType = this . getType ( funcDesc ) ; 
 
 this . replaceVariable ( " helpstring " , docStr ) ; 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java 
 index 190c62e . . 3969ffb 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyGetStub . java 
 @ @ - 53 , 7 + 53 , 7 @ @ public class TlbPropertyGetStub extends TlbAbstractMethod implements Variant { 
 TypeInfoDoc typeInfoDoc = typeInfoUtil . getDocumentation ( funcDesc . memid ) ; 
 String docStr = typeInfoDoc . getDocString ( ) ; 
 String methodname = " get " + typeInfoDoc . getName ( ) ; 
 - short vtableId = funcDesc . oVft ; 
 + int vtableId = funcDesc . oVft ; 
 String returnType = this . getType ( funcDesc ) ; 
 
 this . replaceVariable ( " helpstring " , docStr ) ; 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java 
 index c6be7c2 . . aaaced6 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPut . java 
 @ @ - 53 , 8 + 53 , 8 @ @ public class TlbPropertyPut extends TlbAbstractMethod implements Variant { 
 this . methodName = " set " + getMethodName ( ) ; 
 String methodparams = " " ; 
 String methodvariables = " , " ; 
 - short vtableId = funcDesc . oVft ; 
 - short paramCount = funcDesc . cParams ; 
 + int vtableId = funcDesc . oVft ; 
 + int paramCount = funcDesc . cParams ; 
 String varType ; 
 String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; 
 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java 
 index 2746ae1 . . 14b8025 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / tlb / imp / TlbPropertyPutStub . java 
 @ @ - 54 , 8 + 54 , 8 @ @ public class TlbPropertyPutStub extends TlbAbstractMethod implements Variant { 
 String docStr = typeInfoDoc . getDocString ( ) ; 
 String methodname = " set " + typeInfoDoc . getName ( ) ; 
 String methodparams = " " ; 
 - short vtableId = funcDesc . oVft ; 
 - short paramCount = funcDesc . cParams ; 
 + int vtableId = funcDesc . oVft ; 
 + int paramCount = funcDesc . cParams ; 
 String varType ; 
 String [ ] names = typeInfoUtil . getNames ( funcDesc . memid , paramCount + 1 ) ; 
 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java 
 index edd2ddf . . aaf8cc6 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / OaIdl . java 
 @ @ - 786 , 13 + 786 , 13 @ @ public interface OaIdl { 
 public INVOKEKIND invkind ; 
 / / / C type : CALLCONV 
 public CALLCONV callconv ; 
 - public short cParams ; 
 - public short cParamsOpt ; 
 - public short oVft ; 
 - public short cScodes ; 
 + public int cParams ; 
 + public int cParamsOpt ; 
 + public int oVft ; 
 + public int cScodes ; 
 / / / C type : ELEMDESC 
 public ELEMDESC elemdescFunc ; 
 - public short wFuncFlags ; 
 + public int wFuncFlags ; 
 
 public FUNCDESC ( ) { 
 } 
 @ @ - 808 , 7 + 808 , 7 @ @ public interface OaIdl { 
 } 
 
 @ Override 
 - protected List getFieldOrder ( ) { 
 + protected List < String > getFieldOrder ( ) { 
 return Arrays . asList ( new String [ ] { " memid " , " lprgscode " , 
 " lprgelemdescParam " , " funckind " , " invkind " , " callconv " , 
 " cParams " , " cParamsOpt " , " oVft " , " cScodes " , " elemdescFunc " , 
 @ @ - 1116 , 7 + 1116 , 7 @ @ public interface OaIdl { 
 } 
 
 @ Override 
 - protected List getFieldOrder ( ) { 
 + protected List < String > getFieldOrder ( ) { 
 return Arrays . asList ( new String [ ] { " value " } ) ; 
 } 
 } ; 
 diff - - git a / hs _ err _ pid8924 . log b / hs _ err _ pid8924 . log 
 new file mode 100644 
 index 0000000 . . 4f1ebef 
 - - - / dev / null 
 + + + b / hs _ err _ pid8924 . log 
 @ @ - 0 , 0 + 1 , 345 @ @ 
 + # 
 + # A fatal error has been detected by the Java Runtime Environment : 
 + # 
 + # EXCEPTION _ ACCESS _ VIOLATION ( 0xc0000005 ) at pc = 0x187f6731 , pid = 8924 , tid = 8748 
 + # 
 + # JRE version : 7 . 0 _ 17 - b02 
 + # Java VM : Java HotSpot ( TM ) Client VM ( 23 . 7 - b01 mixed mode windows - x86 ) 
 + # Problematic frame : 
 + # C [ jna1538475758625816562 . dll + 0x6731 ] Java _ com _ sun _ jna _ Native _ getInt + 0x21 
 + # 
 + # Failed to write core dump . Minidumps are not enabled by default on client versions of Windows 
 + # 
 + # If you would like to submit a bug report , please visit : 
 + # http : / / bugreport . sun . com / bugreport / crash . jsp 
 + # The crash happened outside the Java Virtual Machine in native code . 
 + # See problematic frame for where to report the bug . 
 + # 
 + 
 + - - - - - - - - - - - - - - - T H R E A D - - - - - - - - - - - - - - - 
 + 
 + Current thread ( 0x00ddc000 ) : JavaThread " main " [ _ thread _ in _ native , id = 8748 , stack ( 0x00e80000 , 0x00ed0000 ) ] 
 + 
 + siginfo : ExceptionCode = 0xc0000005 , reading address 0x0065006a 
 + 
 + Registers : 
 + EAX = 0x0065006a , EBX = 0x1486f2a0 , ECX = 0x00ddc128 , EDX = 0x00000000 
 + ESP = 0x00ece620 , EBP = 0x00ece6e8 , ESI = 0x1486f2a0 , EDI = 0x00ddc000 
 + EIP = 0x187f6731 , EFLAGS = 0x00010246 
 + 
 + Top of Stack : ( sp = 0x00ece620 ) 
 + 0x00ece620 : 5a60549c 0000000e 00ddc000 00000000 
 + 0x00ece630 : 00ece654 00ece65c 00000000 00000000 
 + 0x00ece640 : 00000001 00ddc000 5a555d65 00ddc000 
 + 0x00ece650 : 00ddc7d0 00cddc10 00ddc3b0 00ddc3b8 
 + 0x00ece660 : 00ddc7a4 00cddc10 00ddc7c4 00000000 
 + 0x00ece670 : 00ddc7d0 5a55c64f 00ddc000 00ddc7c8 
 + 0x00ece680 : 00000001 00ddc301 00cddc10 00ddc3b0 
 + 0x00ece690 : 00ddc3b8 00ddc7a4 00000000 00ddc128 
 + 
 + Instructions : ( pc = 0x187f6731 ) 
 + 0x187f6711 : 31 c0 89 e5 81 ec c8 00 00 00 89 85 54 ff ff ff 
 + 0x187f6721 : a1 00 40 80 18 31 d2 85 c0 75 4c 8b 45 10 85 d2 
 + 0x187f6731 : 8b 00 89 85 54 ff ff ff 74 1d b8 08 51 80 18 b9 
 + 0x187f6741 : 29 50 80 18 89 44 24 08 8b 45 08 89 4c 24 04 89 
 + 
 + 
 + Register to memory mapping : 
 + 
 + EAX = 0x0065006a is an unknown value 
 + EBX = 0x1486f2a0 is an oop 
 + { method } 
 + - klass : { other class } 
 + ECX = 0x00ddc128 is an unknown value 
 + EDX = 0x00000000 is an unknown value 
 + ESP = 0x00ece620 is pointing into the stack for thread : 0x00ddc000 
 + EBP = 0x00ece6e8 is pointing into the stack for thread : 0x00ddc000 
 + ESI = 0x1486f2a0 is an oop 
 + { method } 
 + - klass : { other class } 
 + EDI = 0x00ddc000 is a thread 
 + 
 + 
 + Stack : [ 0x00e80000 , 0x00ed0000 ] , sp = 0x00ece620 , free space = 313k 
 + Native frames : ( J = compiled Java code , j = interpreted , Vv = VM code , C = native code ) 
 + C [ jna1538475758625816562 . dll + 0x6731 ] Java _ com _ sun _ jna _ Native _ getInt + 0x21 
 + j com . sun . jna . Native . getInt ( J ) I + 0 
 + j com . sun . jna . Pointer . getInt ( J ) I + 6 
 + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; 
 + j com . sun . jna . Structure . conditionalAutoRead ( ) V + 8 
 + j com . sun . jna . Structure . updateStructureByReference ( Ljava / lang / Class ; Lcom / sun / jna / Structure ; Lcom / sun / jna / Pointer ; ) Lcom / sun / jna / Structure ; + 68 
 + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; 
 + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; 
 + j com . sun . jna . Structure . conditionalAutoRead ( ) V + 8 
 + j com . sun . jna . Structure . updateStructureByReference ( Ljava / lang / Class ; Lcom / sun / jna / Structure ; Lcom / sun / jna / Pointer ; ) Lcom / sun / jna / Structure ; + 68 
 + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; 
 + j com . sun . jna . platform . win32 . COM . TypeInfoUtil . getFuncDesc ( I ) Lcom / sun / jna / platform / win32 / OaIdl $ FUNCDESC ; + 40 
 + j com . sun . jna . platform . win32 . COM . tlb . imp . TlbDispInterface . < init > ( ILjava / lang / String ; Lcom / sun / jna / platform / win32 / COM / TypeLibUtil ; ) V + 136 
 + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . createCOMDispInterface ( ILjava / lang / String ; Lcom / sun / jna / platform / win32 / COM / TypeLibUtil ; ) V + 7 
 + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . startCOM2Java ( ) V + 123 
 + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . < init > ( [ Ljava / lang / String ; ) V + 116 
 + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . main ( [ Ljava / lang / String ; ) V + 4 
 + v ~ StubRoutines : : call _ stub 
 + V [ jvm . dll + 0x12a34a ] 
 + V [ jvm . dll + 0x1d968e ] 
 + V [ jvm . dll + 0x12a3cd ] 
 + V [ jvm . dll + 0xaede4 ] 
 + V [ jvm . dll + 0xb9157 ] 
 + C [ javaw . exe + 0x206c ] 
 + C [ javaw . exe + 0xa5a1 ] 
 + C [ javaw . exe + 0xa62b ] 
 + C [ kernel32 . dll + 0x133aa ] BaseThreadInitThunk + 0x12 
 + C [ ntdll . dll + 0x39ef2 ] RtlInitializeExceptionChain + 0x63 
 + C [ ntdll . dll + 0x39ec5 ] RtlInitializeExceptionChain + 0x36 
 + 
 + Java frames : ( J = compiled Java code , j = interpreted , Vv = VM code ) 
 + j com . sun . jna . Native . getInt ( J ) I + 0 
 + j com . sun . jna . Pointer . getInt ( J ) I + 6 
 + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; 
 + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; 
 + J com . sun . jna . Structure . read ( ) V 
 + j com . sun . jna . Structure . autoRead ( ) V + 8 
 + j com . sun . jna . Structure . conditionalAutoRead ( ) V + 8 
 + j com . sun . jna . Structure . updateStructureByReference ( Ljava / lang / Class ; Lcom / sun / jna / Structure ; Lcom / sun / jna / Pointer ; ) Lcom / sun / jna / Structure ; + 68 
 + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; 
 + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; 
 + J com . sun . jna . Structure . read ( ) V 
 + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; 
 + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; 
 + J com . sun . jna . Union . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; 
 + J com . sun . jna . Structure . read ( ) V 
 + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; 
 + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; 
 + J com . sun . jna . Structure . read ( ) V 
 + j com . sun . jna . Pointer . readArray ( JLjava / lang / Object ; Ljava / lang / Class ; ) V + 331 
 + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; 
 + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; 
 + J com . sun . jna . Structure . read ( ) V 
 + j com . sun . jna . Structure . autoRead ( ) V + 8 
 + j com . sun . jna . Structure . conditionalAutoRead ( ) V + 8 
 + j com . sun . jna . Structure . updateStructureByReference ( Ljava / lang / Class ; Lcom / sun / jna / Structure ; Lcom / sun / jna / Pointer ; ) Lcom / sun / jna / Structure ; + 68 
 + J com . sun . jna . Pointer . getValue ( JLjava / lang / Class ; Ljava / lang / Object ; ) Ljava / lang / Object ; 
 + J com . sun . jna . Structure . readField ( Lcom / sun / jna / Structure $ StructField ; ) Ljava / lang / Object ; 
 + J com . sun . jna . Structure . read ( ) V 
 + j com . sun . jna . platform . win32 . OaIdl $ FUNCDESC . < init > ( Lcom / sun / jna / Pointer ; ) V + 6 
 + j com . sun . jna . platform . win32 . COM . TypeInfoUtil . getFuncDesc ( I ) Lcom / sun / jna / platform / win32 / OaIdl $ FUNCDESC ; + 40 
 + j com . sun . jna . platform . win32 . COM . tlb . imp . TlbDispInterface . < init > ( ILjava / lang / String ; Lcom / sun / jna / platform / win32 / COM / TypeLibUtil ; ) V + 136 
 + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . createCOMDispInterface ( ILjava / lang / String ; Lcom / sun / jna / platform / win32 / COM / TypeLibUtil ; ) V + 7 
 + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . startCOM2Java ( ) V + 123 
 + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . < init > ( [ Ljava / lang / String ; ) V + 116 
 + j com . sun . jna . platform . win32 . COM . tlb . TlbImp . main ( [ Ljava / lang / String ; ) V + 4 
 + v ~ StubRoutines : : call _ stub 
 + 
 + - - - - - - - - - - - - - - - P R O C E S S - - - - - - - - - - - - - - - 
 + 
 + Java Threads : ( = > current thread ) 
 + 0x0104e800 JavaThread " Service Thread " daemon [ _ thread _ blocked , id = 6984 , stack ( 0x193a0000 , 0x193f0000 ) ] 
 + 0x0104b400 JavaThread " C1 CompilerThread0 " daemon [ _ thread _ blocked , id = 8972 , stack ( 0x19400000 , 0x19450000 ) ] 
 + 0x01042400 JavaThread " JDWP Command Reader " daemon [ _ thread _ in _ native , id = 6904 , stack ( 0x19350000 , 0x193a0000 ) ] 
 + 0x01041c00 JavaThread " JDWP Event Helper Thread " daemon [ _ thread _ blocked , id = 5676 , stack ( 0x19260000 , 0x192b0000 ) ] 
 + 0x01038c00 JavaThread " JDWP Transport Listener : dt _ socket " daemon [ _ thread _ blocked , id = 7904 , stack ( 0x18db0000 , 0x18e00000 ) ] 
 + 0x0102dc00 JavaThread " Attach Listener " daemon [ _ thread _ blocked , id = 8612 , stack ( 0x18a50000 , 0x18aa0000 ) ] 
 + 0x0102a400 JavaThread " Signal Dispatcher " daemon [ _ thread _ blocked , id = 9056 , stack ( 0x01230000 , 0x01280000 ) ] 
 + 0x00fd0800 JavaThread " Finalizer " daemon [ _ thread _ blocked , id = 8304 , stack ( 0x00e20000 , 0x00e70000 ) ] 
 + 0x00fcb000 JavaThread " Reference Handler " daemon [ _ thread _ blocked , id = 3996 , stack ( 0x18830000 , 0x18880000 ) ] 
 + = > 0x00ddc000 JavaThread " main " [ _ thread _ in _ native , id = 8748 , stack ( 0x00e80000 , 0x00ed0000 ) ] 
 + 
 + Other Threads : 
 + 0x00fc6800 VMThread [ stack : 0x187a0000 , 0x187f0000 ] [ id = 7036 ] 
 + 0x01057800 WatcherThread [ stack : 0x190f0000 , 0x19140000 ] [ id = 2156 ] 
 + 
 + VM state : not at safepoint ( normal execution ) 
 + 
 + VM Mutex / Monitor currently owned by a thread : None 
 + 
 + Heap 
 + def new generation total 4928K , used 4502K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) 
 + eden space 4416K , 95 % used [ 0x046d0000 , 0x04aef728 , 0x04b20000 ) 
 + from space 512K , 54 % used [ 0x04b20000 , 0x04b660e8 , 0x04ba0000 ) 
 + to space 512K , 0 % used [ 0x04ba0000 , 0x04ba0000 , 0x04c20000 ) 
 + tenured generation total 10944K , used 467K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) 
 + the space 10944K , 4 % used [ 0x09c20000 , 0x09c94ee0 , 0x09c95000 , 0x0a6d0000 ) 
 + compacting perm gen total 12288K , used 3774K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) 
 + the space 12288K , 30 % used [ 0x146d0000 , 0x14a7f838 , 0x14a7fa00 , 0x152d0000 ) 
 + No shared spaces configured . 
 + 
 + Card table byte _ map : [ 0x00f10000 , 0x00fc0000 ] byte _ map _ base : 0x00eec980 
 + 
 + Polling page : 0x00130000 
 + 
 + Code Cache [ 0x026d0000 , 0x027f0000 , 0x046d0000 ) 
 + total _ blobs = 489 nmethods = 343 adapters = 88 free _ code _ cache = 31633Kb largest _ free _ block = 32392896 
 + 
 + Compilation events ( 10 events ) : 
 + Event : 0 . 594 Thread 0x0104b400 338 ! com . sun . jna . IntegerType : : fromNative ( 95 bytes ) 
 + Event : 0 . 595 Thread 0x0104b400 nmethod 338 0x027e8008 code [ 0x027e8220 , 0x027e8930 ] 
 + Event : 0 . 595 Thread 0x0104b400 339 com . sun . jna . Pointer : : getPointer ( 10 bytes ) 
 + Event : 0 . 595 Thread 0x0104b400 nmethod 339 0x027e9388 code [ 0x027e9490 , 0x027e95cc ] 
 + Event : 0 . 595 Thread 0x0104b400 340 com . sun . jna . Native : : getPointer ( 24 bytes ) 
 + Event : 0 . 595 Thread 0x0104b400 nmethod 340 0x027e9688 code [ 0x027e9790 , 0x027e989c ] 
 + Event : 0 . 610 Thread 0x0104b400 342 ! java . util . concurrent . ConcurrentHashMap $ Segment : : put ( 237 bytes ) 
 + Event : 0 . 610 Thread 0x0104b400 nmethod 342 0x027e9c08 code [ 0x027e9d70 , 0x027ea258 ] 
 + Event : 0 . 616 Thread 0x0104b400 343 com . sun . jna . Structure : : sortFields ( 87 bytes ) 
 + Event : 0 . 617 Thread 0x0104b400 nmethod 343 0x027ea7c8 code [ 0x027ea950 , 0x027eab90 ] 
 + 
 + GC Heap History ( 4 events ) : 
 + Event : 0 . 377 GC heap before 
 + { Heap before GC invocations = 0 ( full 0 ) : 
 + def new generation total 4928K , used 4416K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) 
 + eden space 4416K , 100 % used [ 0x046d0000 , 0x04b20000 , 0x04b20000 ) 
 + from space 512K , 0 % used [ 0x04b20000 , 0x04b20000 , 0x04ba0000 ) 
 + to space 512K , 0 % used [ 0x04ba0000 , 0x04ba0000 , 0x04c20000 ) 
 + tenured generation total 10944K , used 0K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) 
 + the space 10944K , 0 % used [ 0x09c20000 , 0x09c20000 , 0x09c20200 , 0x0a6d0000 ) 
 + compacting perm gen total 12288K , used 2965K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) 
 + the space 12288K , 24 % used [ 0x146d0000 , 0x149b5468 , 0x149b5600 , 0x152d0000 ) 
 + No shared spaces configured . 
 + Event : 0 . 380 GC heap after 
 + Heap after GC invocations = 1 ( full 0 ) : 
 + def new generation total 4928K , used 499K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) 
 + eden space 4416K , 0 % used [ 0x046d0000 , 0x046d0000 , 0x04b20000 ) 
 + from space 512K , 97 % used [ 0x04ba0000 , 0x04c1cf68 , 0x04c20000 ) 
 + to space 512K , 0 % used [ 0x04b20000 , 0x04b20000 , 0x04ba0000 ) 
 + tenured generation total 10944K , used 0K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) 
 + the space 10944K , 0 % used [ 0x09c20000 , 0x09c20000 , 0x09c20200 , 0x0a6d0000 ) 
 + compacting perm gen total 12288K , used 2965K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) 
 + the space 12288K , 24 % used [ 0x146d0000 , 0x149b5468 , 0x149b5600 , 0x152d0000 ) 
 + No shared spaces configured . 
 + } 
 + Event : 0 . 539 GC heap before 
 + { Heap before GC invocations = 1 ( full 0 ) : 
 + def new generation total 4928K , used 4915K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) 
 + eden space 4416K , 100 % used [ 0x046d0000 , 0x04b20000 , 0x04b20000 ) 
 + from space 512K , 97 % used [ 0x04ba0000 , 0x04c1cf68 , 0x04c20000 ) 
 + to space 512K , 0 % used [ 0x04b20000 , 0x04b20000 , 0x04ba0000 ) 
 + tenured generation total 10944K , used 0K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) 
 + the space 10944K , 0 % used [ 0x09c20000 , 0x09c20000 , 0x09c20200 , 0x0a6d0000 ) 
 + compacting perm gen total 12288K , used 3719K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) 
 + the space 12288K , 30 % used [ 0x146d0000 , 0x14a71e80 , 0x14a72000 , 0x152d0000 ) 
 + No shared spaces configured . 
 + Event : 0 . 544 GC heap after 
 + Heap after GC invocations = 2 ( full 0 ) : 
 + def new generation total 4928K , used 280K [ 0x046d0000 , 0x04c20000 , 0x09c20000 ) 
 + eden space 4416K , 0 % used [ 0x046d0000 , 0x046d0000 , 0x04b20000 ) 
 + from space 512K , 54 % used [ 0x04b20000 , 0x04b660e8 , 0x04ba0000 ) 
 + to space 512K , 0 % used [ 0x04ba0000 , 0x04ba0000 , 0x04c20000 ) 
 + tenured generation total 10944K , used 467K [ 0x09c20000 , 0x0a6d0000 , 0x146d0000 ) 
 + the space 10944K , 4 % used [ 0x09c20000 , 0x09c94ee0 , 0x09c95000 , 0x0a6d0000 ) 
 + compacting perm gen total 12288K , used 3719K [ 0x146d0000 , 0x152d0000 , 0x186d0000 ) 
 + the space 12288K , 30 % used [ 0x146d0000 , 0x14a71e80 , 0x14a72000 , 0x152d0000 ) 
 + No shared spaces configured . 
 + } 
 + 
 + Deoptimization events ( 0 events ) : 
 + No events 
 + 
 + Internal exceptions ( 10 events ) : 
 + Event : 0 . 612 Thread 0x00ddc000 Threw 0x04a91a38 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 
 + Event : 0 . 612 Thread 0x00ddc000 Threw 0x04a94998 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 
 + Event : 0 . 612 Thread 0x00ddc000 Threw 0x04a97bb0 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 
 + Event : 0 . 613 Thread 0x00ddc000 Threw 0x04a9aef0 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 
 + Event : 0 . 613 Thread 0x00ddc000 Threw 0x04a9e090 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 
 + Event : 0 . 614 Thread 0x00ddc000 Threw 0x04aa38f0 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 
 + Event : 0 . 617 Thread 0x00ddc000 Threw 0x04abc610 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 
 + Event : 0 . 617 Thread 0x00ddc000 Threw 0x04abfbc8 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 
 + Event : 0 . 618 Thread 0x00ddc000 Threw 0x04ac4e20 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 
 + Event : 0 . 619 Thread 0x00ddc000 Threw 0x04acb2e0 at C : \ jdk7u2 _ 32P \ jdk7u17 \ hotspot \ src \ share \ vm \ prims \ jvm . cpp : 1166 
 + 
 + Events ( 10 events ) : 
 + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027de5dc sp = 0x00eccd50 
 + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00eccc88 mode 1 
 + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027bfab0 sp = 0x00ece0b0 
 + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00ecdfb8 mode 1 
 + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027de5dc sp = 0x00ece120 
 + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00ece058 mode 1 
 + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027bfab0 sp = 0x00eccc00 
 + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00eccb08 mode 1 
 + Event : 0 . 620 Thread 0x00ddc000 DEOPT PACKING pc = 0x027de5dc sp = 0x00eccc70 
 + Event : 0 . 620 Thread 0x00ddc000 DEOPT UNPACKING pc = 0x026fcdb9 sp = 0x00eccba8 mode 1 
 + 
 + 
 + Dynamic libraries : 
 + 0x012a0000 - 0x012cf000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ bin \ javaw . exe 
 + 0x77490000 - 0x77610000 	 C : \ Windows \ SysWOW64 \ ntdll . dll 
 + 0x76f60000 - 0x77070000 	 C : \ Windows \ syswow64 \ kernel32 . dll 
 + 0x75080000 - 0x750c7000 	 C : \ Windows \ syswow64 \ KERNELBASE . dll 
 + 0x76cc0000 - 0x76d60000 	 C : \ Windows \ syswow64 \ ADVAPI32 . dll 
 + 0x76a70000 - 0x76b1c000 	 C : \ Windows \ syswow64 \ msvcrt . dll 
 + 0x77070000 - 0x77089000 	 C : \ Windows \ SysWOW64 \ sechost . dll 
 + 0x76840000 - 0x76930000 	 C : \ Windows \ syswow64 \ RPCRT4 . dll 
 + 0x74ff0000 - 0x75050000 	 C : \ Windows \ syswow64 \ SspiCli . dll 
 + 0x74fe0000 - 0x74fec000 	 C : \ Windows \ syswow64 \ CRYPTBASE . dll 
 + 0x76970000 - 0x76a70000 	 C : \ Windows \ syswow64 \ USER32 . dll 
 + 0x76b90000 - 0x76c20000 	 C : \ Windows \ syswow64 \ GDI32 . dll 
 + 0x76cb0000 - 0x76cba000 	 C : \ Windows \ syswow64 \ LPK . dll 
 + 0x76e30000 - 0x76ecd000 	 C : \ Windows \ syswow64 \ USP10 . dll 
 + 0x725f0000 - 0x7278e000 	 C : \ Windows \ WinSxS \ x86 _ microsoft . windows . common - controls _ 6595b64144ccf1df _ 6 . 0 . 7601 . 17514 _ none _ 41e6975e2bd6f2b2 \ COMCTL32 . dll 
 + 0x75310000 - 0x75367000 	 C : \ Windows \ syswow64 \ SHLWAPI . dll 
 + 0x76b20000 - 0x76b80000 	 C : \ Windows \ system32 \ IMM32 . DLL 
 + 0x756a0000 - 0x7576c000 	 C : \ Windows \ syswow64 \ MSCTF . dll 
 + 0x5e5d0000 - 0x5e68e000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ msvcr100 . dll 
 + 0x5a4d0000 - 0x5a81c000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ client \ jvm . dll 
 + 0x72550000 - 0x72557000 	 C : \ Windows \ system32 \ WSOCK32 . dll 
 + 0x76d60000 - 0x76d95000 	 C : \ Windows \ syswow64 \ WS2 _ 32 . dll 
 + 0x75790000 - 0x75796000 	 C : \ Windows \ syswow64 \ NSI . dll 
 + 0x72510000 - 0x72542000 	 C : \ Windows \ system32 \ WINMM . dll 
 + 0x76930000 - 0x76935000 	 C : \ Windows \ syswow64 \ PSAPI . DLL 
 + 0x6f760000 - 0x6f76c000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ verify . dll 
 + 0x5e730000 - 0x5e750000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ java . dll 
 + 0x5e6c0000 - 0x5e6ea000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ jdwp . dll 
 + 0x60ac0000 - 0x60ac7000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ npt . dll 
 + 0x5e5b0000 - 0x5e5c3000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ zip . dll 
 + 0x5e7c0000 - 0x5e7c8000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ dt _ socket . dll 
 + 0x721f0000 - 0x72200000 	 C : \ Windows \ system32 \ NLAapi . dll 
 + 0x71f90000 - 0x71fa0000 	 C : \ Windows \ system32 \ napinsp . dll 
 + 0x71f70000 - 0x71f82000 	 C : \ Windows \ system32 \ pnrpnsp . dll 
 + 0x71f30000 - 0x71f6c000 	 C : \ Windows \ System32 \ mswsock . dll 
 + 0x72330000 - 0x72374000 	 C : \ Windows \ system32 \ DNSAPI . dll 
 + 0x721e0000 - 0x721e8000 	 C : \ Windows \ System32 \ winrnr . dll 
 + 0x71f20000 - 0x71f2d000 	 C : \ Windows \ system32 \ wshbth . dll 
 + 0x72310000 - 0x7232c000 	 C : \ Windows \ system32 \ IPHLPAPI . DLL 
 + 0x72300000 - 0x72307000 	 C : \ Windows \ system32 \ WINNSI . DLL 
 + 0x71ee0000 - 0x71f18000 	 C : \ Windows \ System32 \ fwpuclnt . dll 
 + 0x71ed0000 - 0x71ed6000 	 C : \ Windows \ system32 \ rasadhlp . dll 
 + 0x71dc0000 - 0x71dc5000 	 C : \ Windows \ System32 \ wshtcpip . dll 
 + 0x73750000 - 0x73766000 	 C : \ Windows \ system32 \ CRYPTSP . dll 
 + 0x73710000 - 0x7374b000 	 C : \ Windows \ system32 \ rsaenh . dll 
 + 0x725d0000 - 0x725e7000 	 C : \ Windows \ system32 \ USERENV . dll 
 + 0x725c0000 - 0x725cb000 	 C : \ Windows \ system32 \ profapi . dll 
 + 0x5e590000 - 0x5e5a4000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ net . dll 
 + 0x71930000 - 0x71936000 	 C : \ Windows \ System32 \ wship6 . dll 
 + 0x5e6b0000 - 0x5e6be000 	 C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin \ nio . dll 
 + 0x187f0000 - 0x1882d000 	 C : \ Users \ twolf10 \ AppData \ Local \ Temp \ jna - - 911058587 \ jna1538475758625816562 . dll 
 + 0x76ed0000 - 0x76f5f000 	 C : \ Windows \ syswow64 \ OleAut32 . dll 
 + 0x75540000 - 0x7569c000 	 C : \ Windows \ syswow64 \ ole32 . dll 
 + 0x72380000 - 0x723df000 	 C : \ Windows \ system32 \ SXS . DLL 
 + 0x6bfb0000 - 0x6c09b000 	 C : \ Windows \ system32 \ dbghelp . dll 
 + 
 + VM Arguments : 
 + jvm _ args : - agentlib : jdwp = transport = dt _ socket , suspend = y , address = localhost : 37591 - Djna . dump _ memory = true - Djna . debug _ load = true - Djna . debug _ load . jna = true - Dfile . encoding = Cp1252 
 + java _ command : com . sun . jna . platform . win32 . COM . tlb . TlbImp - tlb . file shell32 . dll 
 + Launcher Type : SUN _ STANDARD 
 + 
 + Environment Variables : 
 + JAVA _ HOME = C : \ Program Files \ Java \ jdk1 . 7 . 0 _ 17 
 + JRE _ HOME = C : \ Program Files \ Java \ jre7 
 + PATH = C : \ Program Files ( x86 ) \ Java \ jdk1 . 7 . 0 _ 17 \ jre \ bin ; C : \ Windows \ system32 ; C : \ Windows ; C : \ Windows \ System32 \ Wbem ; C : \ Windows \ System32 \ WindowsPowerShell \ v1 . 0 \ ; C : \ Windows \ SysWOW64 \ Empirum ; C : \ Program Files ( x86 ) \ Intel \ OpenCL SDK \ 2 . 0 \ bin \ x86 ; C : \ Program Files ( x86 ) \ Intel \ OpenCL SDK \ 2 . 0 \ bin \ x64 ; C : \ Program Files \ WIDCOMM \ Bluetooth Software \ ; C : \ Program Files \ WIDCOMM \ Bluetooth Software \ syswow64 ; C : \ Program Files \ T - Systems \ Global Remote ; C : \ Program Files ( x86 ) \ Innovator \ 11 _ 2 _ 2 \ inoexe ; C : \ Program Files \ TortoiseSVN \ bin ; C : \ Program Files \ Microsoft \ Web Platform Installer \ ; C : \ Program Files ( x86 ) \ Microsoft ASP . NET \ ASP . NET Web Pages \ v1 . 0 \ ; C : \ Program Files ( x86 ) \ Windows Kits \ 8 . 0 \ Windows Performance Toolkit \ ; C : \ Program Files \ Microsoft SQL Server \ 110 \ Tools \ Binn \ ; C : \ Program Files ( x86 ) \ Inno Setup 5 ; C : \ Program Files ( x86 ) \ WiX Toolset v3 . 7 \ bin 
 + USERNAME = twolf10 
 + OS = Windows _ NT 
 + PROCESSOR _ IDENTIFIER = Intel64 Family 6 Model 58 Stepping 9 , GenuineIntel 
 + 
 + 
 + 
 + - - - - - - - - - - - - - - - S Y S T E M - - - - - - - - - - - - - - - 
 + 
 + OS : Windows 7 , 64 bit Build 7601 Service Pack 1 
 + 
 + CPU : total 4 ( 2 cores per cpu , 2 threads per core ) family 6 model 58 stepping 9 , cmov , cx8 , fxsr , mmx , sse , sse2 , sse3 , ssse3 , sse4 . 1 , sse4 . 2 , popcnt , avx , ht , tsc , tscinvbit , tscinv 
 + 
 + Memory : 4k page , physical 8259456k ( 4613224k free ) , swap 16517052k ( 12509656k free ) 
 + 
 + vm _ info : Java HotSpot ( TM ) Client VM ( 23 . 7 - b01 ) for windows - x86 JRE ( 1 . 7 . 0 _ 17 - b02 ) , built on Mar 1 2013 05 : 04 : 36 by " java _ re " with unknown MS VC + + : 1600 
 + 
 + time : Mon Aug 19 14 : 32 : 31 2013 
 + elapsed time : 0 seconds 
 + 
 diff - - git a / src / com / sun / jna / Structure . java b / src / com / sun / jna / Structure . java 
 index c7c4f17 . . c1d5224 100644 
 - - - a / src / com / sun / jna / Structure . java 
 + + + b / src / com / sun / jna / Structure . java 
 @ @ - 533 , 7 + 533 , 10 @ @ public abstract class Structure { 
 } 
 try { 
 for ( Iterator i = fields ( ) . values ( ) . iterator ( ) ; i . hasNext ( ) ; ) { 
 - readField ( ( StructField ) i . next ( ) ) ; 
 + StructField structField = ( StructField ) i . next ( ) ; 
 + System . out . println ( structField . name ) ; 
 + System . out . println ( structField . type . toString ( ) ) ; 
 + readField ( structField ) ; 
 } 
 } 
 finally {

NEAREST DIFF:
diff - - git a / ChangeLog b / ChangeLog 
 index 289d195 . . ff76645 100644 
 - - - a / ChangeLog 
 + + + b / ChangeLog 
 @ @ - 1 , 3 + 1 , 13 @ @ 
 + 2013 - 01 - 10 Anthony Green < green @ moxielogic . com > 
 + 
 + 	 * configure . ac : Put local . exp in the right place . 
 + 	 * configure : Rebuilt . 
 + 
 + 	 * src / x86 / ffi . c : Update comment about regparm function attributes . 
 + 	 * src / x86 / sysv . S ( ffi _ closure _ SYSV ) : The SUNPRO compiler requires 
 + 	 that all function arguments be passed on the stack ( no regparm 
 + 	 support ) . 
 + 
 2013 - 01 - 08 Anthony Green < green @ moxielogic . com > 
 
 	 * configure . ac : Generate local . exp . This sets CC _ FOR _ TARGET 
 diff - - git a / configure b / configure 
 index 5876eb7 . . 4a12b96 100755 
 - - - a / configure 
 + + + b / configure 
 @ @ - 13068 , 10 + 13068 , 10 @ @ ac _ compiler _ gnu = $ ac _ cv _ c _ compiler _ gnu 
 
 if test " x $ GCC " = " xyes " ; then 
 CFLAGS = " $ CFLAGS - fexceptions " 
 - touch testsuite / local . exp 
 + touch local . exp 
 else 
 cat > local . exp < < EOF 
 - set CC _ FOR _ TARGET $ CC 
 + set CC _ FOR _ TARGET " $ CC " 
 EOF 
 fi 
 
 diff - - git a / configure . ac b / configure . ac 
 index 7ffb36c . . 13d5bc2 100644 
 - - - a / configure . ac 
 + + + b / configure . ac 
 @ @ - 40 , 10 + 40 , 10 @ @ AX _ CC _ MAXOPT 
 AX _ CFLAGS _ WARN _ ALL 
 if test " x $ GCC " = " xyes " ; then 
 CFLAGS = " $ CFLAGS - fexceptions " 
 - touch testsuite / local . exp 
 + touch local . exp 
 else 
 cat > local . exp < < EOF 
 - set CC _ FOR _ TARGET $ CC 
 + set CC _ FOR _ TARGET " $ CC " 
 EOF 
 fi 
 
 diff - - git a / src / x86 / ffi . c b / src / x86 / ffi . c 
 index 611e221 . . 3f46693 100644 
 - - - a / src / x86 / ffi . c 
 + + + b / src / x86 / ffi . c 
 @ @ - 424 , 7 + 424 , 7 @ @ void ffi _ call ( ffi _ cif * cif , void ( * fn ) ( void ) , void * rvalue , void * * avalue ) 
 / * * private members * * / 
 
 / * The following _ _ attribute _ _ ( ( regparm ( 1 ) ) ) decorations will have no effect 
 - on MSVC - standard cdecl convention applies . * / 
 + on MSVC or SUNPRO _ C - - standard conventions apply . * / 
 static void ffi _ prep _ incoming _ args _ SYSV ( char * stack , void * * ret , 
 void * * args , ffi _ cif * cif ) ; 
 void FFI _ HIDDEN ffi _ closure _ SYSV ( ffi _ closure * ) 
 diff - - git a / src / x86 / sysv . S b / src / x86 / sysv . S 
 index 69e7e8d . . 71502bb 100644 
 - - - a / src / x86 / sysv . S 
 + + + b / src / x86 / sysv . S 
 @ @ - 182 , 9 + 182 , 19 @ @ ffi _ closure _ SYSV : 
 	 leal 	 - 24 ( % ebp ) , % edx 
 	 movl 	 % edx , - 12 ( % ebp ) 	 / * resp * / 
 	 leal 	 8 ( % ebp ) , % edx 
 + # ifdef _ _ SUNPRO _ C 
 + 	 / * The SUNPRO compiler doesn ' t support GCC ' s regparm function 
 + 	 attribute , so we have to pass all three arguments to 
 + 	 ffi _ closure _ SYSV _ inner on the stack . * / 
 + 	 movl 	 % edx , 8 ( % esp ) 	 / * args = _ _ builtin _ dwarf _ cfa ( ) * / 
 + 	 leal 	 - 12 ( % ebp ) , % edx 
 + 	 movl 	 % edx , 4 ( % esp ) 	 / * & resp * / 
 + 	 movl % eax , ( % esp ) / * closure * / 
 + # else 
 	 movl 	 % edx , 4 ( % esp ) 	 / * args = _ _ builtin _ dwarf _ cfa ( ) * / 
 	 leal 	 - 12 ( % ebp ) , % edx 
 	 movl 	 % edx , ( % esp ) 	 / * & resp * / 
 + # endif 
 # if defined HAVE _ HIDDEN _ VISIBILITY _ ATTRIBUTE | | ! defined _ _ PIC _ _ 
 	 call 	 ffi _ closure _ SYSV _ inner 
 # else
