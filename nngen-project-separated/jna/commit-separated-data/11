BLEU SCORE: 0.0567967744513558

TEST MSG: Update W32Service . stopService ( ) to be more resilient to large dwWaitHint values
GENERATED MSG: Add platform . win32 . W32ServiceManager and W32Service .

TEST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 3a8380a . . 4cdf34c 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 7 , 6 + 7 , 7 @ @ Next release ( 5 . 3 . 0 ) <nl> <nl> Features <nl> - - - - - - - - <nl> + * [ # 1058 ] ( https : / / github . com / java - native - access / jna / pull / 1058 ) : Add selectable timeout to stopService ( ) and improve timeout handling - [ @ keithharp ] ( https : / / github . com / keithharp ) . <nl> * [ # 1050 ] ( https : / / github . com / java - native - access / jna / pull / 1050 ) : Add ` c . s . j . p . win32 . VersionHelpers ` and supporting functions - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . <nl> <nl> Bug Fixes <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java b / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> index ab9d5c3 . . 8f0b091 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java <nl> @ @ - 221 , 7 + 221 , 7 @ @ public class W32Service implements Closeable { <nl> * @ param timeout timeout in ms until the service must report to be <nl> * stopped <nl> * / <nl> - 	 void stopService ( long timeout ) { <nl> + 	 public void stopService ( long timeout ) { <nl> long startTime = System . currentTimeMillis ( ) ; <nl> 	 	 waitForNonPendingState ( ) ; <nl> 	 	 / / If the service is already stopped - return <nl> @ @ - 236 , 22 + 236 , 23 @ @ public class W32Service implements Closeable { <nl> / / the previouos implementation queried the service status and <nl> / / failed if the application did not correctly update its state <nl> while ( status . dwCurrentState ! = Winsvc . SERVICE _ STOPPED ) { <nl> - try { <nl> - 	 	 	 	 Thread . sleep ( status . dwWaitHint ) ; <nl> + 	 	 	 long msRemainingBeforeTimeout = timeout - ( System . currentTimeMillis ( ) - startTime ) ; <nl> + <nl> + 	 	 	 if ( msRemainingBeforeTimeout < 0 ) { <nl> + 	 	 	 	 throw new RuntimeException ( String . format ( " Service stop exceeded timeout time of % d ms " , timeout ) ) ; <nl> + 	 	 	 } <nl> + <nl> + 	 	 	 long dwWaitTime = Math . min ( sanitizeWaitTime ( status . dwWaitHint ) , msRemainingBeforeTimeout ) ; <nl> + <nl> + 	 	 	 try { <nl> + 	 	 	 	 Thread . sleep ( dwWaitTime ) ; <nl> 	 	 	 } catch ( InterruptedException e ) { <nl> 	 	 	 	 throw new RuntimeException ( e ) ; <nl> 	 	 	 } <nl> if ( ! Advapi32 . INSTANCE . QueryServiceStatus ( _ handle , status ) ) { <nl> throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> } <nl> - if ( ( System . currentTimeMillis ( ) - startTime ) > timeout ) { <nl> - throw new RuntimeException ( String . format ( " Service stop exceeded timeout time of % d ms " , timeout ) ) ; <nl> - } <nl> } <nl> - 	 	 waitForNonPendingState ( ) ; <nl> - 	 	 if ( queryStatus ( ) . dwCurrentState ! = Winsvc . SERVICE _ STOPPED ) { <nl> - 	 	 	 throw new RuntimeException ( " Unable to stop the service " ) ; <nl> - 	 	 } <nl> 	 } <nl> <nl> 	 / * * <nl> @ @ - 292 , 7 + 293 , 22 @ @ public class W32Service implements Closeable { <nl> 	 	 } <nl> 	 } <nl> <nl> - / * * <nl> + 	 / * * <nl> + 	 * do not wait longer than the wait hint . A good interval is <nl> + 	 * one - tenth the wait hint , but no less than 1 second and no <nl> + 	 * more than 10 seconds . <nl> + 	 * / <nl> + 	 int sanitizeWaitTime ( int dwWaitHint ) { <nl> + 	 	 int dwWaitTime = dwWaitHint / 10 ; <nl> + <nl> + 	 	 if ( dwWaitTime < 1000 ) <nl> + 	 	 	 dwWaitTime = 1000 ; <nl> + 	 	 else if ( dwWaitTime > 10000 ) <nl> + 	 	 	 dwWaitTime = 10000 ; <nl> + 	 	 return dwWaitTime ; <nl> + 	 } <nl> + <nl> + 	 / * * <nl> * Wait for the state to change to something other than a pending state . <nl> * / <nl> 	 public void waitForNonPendingState ( ) { <nl> @ @ - 315 , 16 + 331 , 7 @ @ public class W32Service implements Closeable { <nl> 	 	 	 	 throw new RuntimeException ( " Timeout waiting for service to change to a non - pending state . " ) ; <nl> 	 	 	 } <nl> <nl> - 	 	 	 / / do not wait longer than the wait hint . A good interval is <nl> - 	 	 	 / / one - tenth the wait hint , but no less than 1 second and no <nl> - 	 	 	 / / more than 10 seconds . <nl> - <nl> - 	 	 	 int dwWaitTime = status . dwWaitHint / 10 ; <nl> - <nl> - 	 	 	 if ( dwWaitTime < 1000 ) <nl> - 	 	 	 	 dwWaitTime = 1000 ; <nl> - 	 	 	 else if ( dwWaitTime > 10000 ) <nl> - 	 	 	 	 dwWaitTime = 10000 ; <nl> + 	 	 	 int dwWaitTime = sanitizeWaitTime ( status . dwWaitHint ) ; <nl> <nl> 	 	 	 try { <nl> 	 	 	 	 Thread . sleep ( dwWaitTime ) ;
NEAREST DIFF (one line): diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> index 8766039 . . bf4f0ef 100644 <nl> - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 966 , 7 + 966 , 7 @ @ public abstract class Advapi32Util { <nl> 	 * Path to an existing registry key . <nl> 	 * @ param name <nl> 	 * Value name . <nl> - 	 * @ param value <nl> + 	 * @ param data <nl> 	 * Data to write to registry . <nl> 	 * / <nl> 	 public static void registrySetBinaryValue ( HKEY root , String keyPath , String name , byte [ ] data ) {

TEST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 3a8380a . . 4cdf34c 100644 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 7 , 6 + 7 , 7 @ @ Next release ( 5 . 3 . 0 ) 
 
 Features 
 - - - - - - - - 
 + * [ # 1058 ] ( https : / / github . com / java - native - access / jna / pull / 1058 ) : Add selectable timeout to stopService ( ) and improve timeout handling - [ @ keithharp ] ( https : / / github . com / keithharp ) . 
 * [ # 1050 ] ( https : / / github . com / java - native - access / jna / pull / 1050 ) : Add ` c . s . j . p . win32 . VersionHelpers ` and supporting functions - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) . 
 
 Bug Fixes 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java b / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java 
 index ab9d5c3 . . 8f0b091 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / W32Service . java 
 @ @ - 221 , 7 + 221 , 7 @ @ public class W32Service implements Closeable { 
 * @ param timeout timeout in ms until the service must report to be 
 * stopped 
 * / 
 - 	 void stopService ( long timeout ) { 
 + 	 public void stopService ( long timeout ) { 
 long startTime = System . currentTimeMillis ( ) ; 
 	 	 waitForNonPendingState ( ) ; 
 	 	 / / If the service is already stopped - return 
 @ @ - 236 , 22 + 236 , 23 @ @ public class W32Service implements Closeable { 
 / / the previouos implementation queried the service status and 
 / / failed if the application did not correctly update its state 
 while ( status . dwCurrentState ! = Winsvc . SERVICE _ STOPPED ) { 
 - try { 
 - 	 	 	 	 Thread . sleep ( status . dwWaitHint ) ; 
 + 	 	 	 long msRemainingBeforeTimeout = timeout - ( System . currentTimeMillis ( ) - startTime ) ; 
 + 
 + 	 	 	 if ( msRemainingBeforeTimeout < 0 ) { 
 + 	 	 	 	 throw new RuntimeException ( String . format ( " Service stop exceeded timeout time of % d ms " , timeout ) ) ; 
 + 	 	 	 } 
 + 
 + 	 	 	 long dwWaitTime = Math . min ( sanitizeWaitTime ( status . dwWaitHint ) , msRemainingBeforeTimeout ) ; 
 + 
 + 	 	 	 try { 
 + 	 	 	 	 Thread . sleep ( dwWaitTime ) ; 
 	 	 	 } catch ( InterruptedException e ) { 
 	 	 	 	 throw new RuntimeException ( e ) ; 
 	 	 	 } 
 if ( ! Advapi32 . INSTANCE . QueryServiceStatus ( _ handle , status ) ) { 
 throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; 
 } 
 - if ( ( System . currentTimeMillis ( ) - startTime ) > timeout ) { 
 - throw new RuntimeException ( String . format ( " Service stop exceeded timeout time of % d ms " , timeout ) ) ; 
 - } 
 } 
 - 	 	 waitForNonPendingState ( ) ; 
 - 	 	 if ( queryStatus ( ) . dwCurrentState ! = Winsvc . SERVICE _ STOPPED ) { 
 - 	 	 	 throw new RuntimeException ( " Unable to stop the service " ) ; 
 - 	 	 } 
 	 } 
 
 	 / * * 
 @ @ - 292 , 7 + 293 , 22 @ @ public class W32Service implements Closeable { 
 	 	 } 
 	 } 
 
 - / * * 
 + 	 / * * 
 + 	 * do not wait longer than the wait hint . A good interval is 
 + 	 * one - tenth the wait hint , but no less than 1 second and no 
 + 	 * more than 10 seconds . 
 + 	 * / 
 + 	 int sanitizeWaitTime ( int dwWaitHint ) { 
 + 	 	 int dwWaitTime = dwWaitHint / 10 ; 
 + 
 + 	 	 if ( dwWaitTime < 1000 ) 
 + 	 	 	 dwWaitTime = 1000 ; 
 + 	 	 else if ( dwWaitTime > 10000 ) 
 + 	 	 	 dwWaitTime = 10000 ; 
 + 	 	 return dwWaitTime ; 
 + 	 } 
 + 
 + 	 / * * 
 * Wait for the state to change to something other than a pending state . 
 * / 
 	 public void waitForNonPendingState ( ) { 
 @ @ - 315 , 16 + 331 , 7 @ @ public class W32Service implements Closeable { 
 	 	 	 	 throw new RuntimeException ( " Timeout waiting for service to change to a non - pending state . " ) ; 
 	 	 	 } 
 
 - 	 	 	 / / do not wait longer than the wait hint . A good interval is 
 - 	 	 	 / / one - tenth the wait hint , but no less than 1 second and no 
 - 	 	 	 / / more than 10 seconds . 
 - 
 - 	 	 	 int dwWaitTime = status . dwWaitHint / 10 ; 
 - 
 - 	 	 	 if ( dwWaitTime < 1000 ) 
 - 	 	 	 	 dwWaitTime = 1000 ; 
 - 	 	 	 else if ( dwWaitTime > 10000 ) 
 - 	 	 	 	 dwWaitTime = 10000 ; 
 + 	 	 	 int dwWaitTime = sanitizeWaitTime ( status . dwWaitHint ) ; 
 
 	 	 	 try { 
 	 	 	 	 Thread . sleep ( dwWaitTime ) ;

NEAREST DIFF:
diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java 
 index 8766039 . . bf4f0ef 100644 
 - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java 
 + + + b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java 
 @ @ - 966 , 7 + 966 , 7 @ @ public abstract class Advapi32Util { 
 	 * Path to an existing registry key . 
 	 * @ param name 
 	 * Value name . 
 - 	 * @ param value 
 + 	 * @ param data 
 	 * Data to write to registry . 
 	 * / 
 	 public static void registrySetBinaryValue ( HKEY root , String keyPath , String name , byte [ ] data ) {
