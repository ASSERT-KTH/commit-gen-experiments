BLEU SCORE: 0.018738883683389617

TEST MSG: [ # 384 ] Make jna . nosys = true default
GENERATED MSG: update docs re : JNA loading

TEST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 0d5d5c0 . . 1110239 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 62 , 7 + 62 , 8 @ @ Bug Fixes <nl> < / ol > - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 958 ] ( https : / / github . com / java - native - access / jna / issues / 958 ) : Update for PR 863 : Old toolchains produce binaries without hard - / softfloat markers . Rasbian is missinng the markers and the oracle JDK is also affected . For hardfloat detection now also the Arm EABI section is also considered - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 974 ] ( https : / / github . com / java - native - access / jna / issues / 974 ) : If the callback code failed to attach to the JVM , this lead to a segfault . The success of attaching to the JVM was checked to late and an invalid ` JNIEnv ` pointer was used to access the JVM - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> - * [ # 1010 ] ( https : / / github . com / java - native - access / jna / issues / 1010 ) : Fix binding of ` lpAccessName ` parameter of ` com . sun . jna . platform . win32 . Mpr # WNetUseConnection ` <nl> + * [ # 1010 ] ( https : / / github . com / java - native - access / jna / issues / 1010 ) : Fix binding of ` lpAccessName ` parameter of ` com . sun . jna . platform . win32 . Mpr # WNetUseConnection ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 384 ] ( https : / / github . com / java - native - access / jna / issues / 384 ) : Switch default value for ` jna . nosys ` to ` true ` . By default then the embedded native library is used - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Breaking Changes <nl> - - - - - - - - - - - - - - - - <nl> diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index f9887a5 . . 2d2f654 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 178 , 7 + 178 , 6 @ @ com . sun . jna . platform . wince ; version = $ { osgi . version } <nl> < ! - - avoid VM conflicts with JNA protected mode - - > <nl> < env key = " $ { ld . preload . name } " file = " $ { libjsig } " / > <nl> < ! - - Ignore any system install of JNA - - > <nl> - < sysproperty key = " jna . nosys " value = " true " / > <nl> < sysproperty key = " jna . builddir " file = " $ { file . reference . jna . build } " / > <nl> < jvmarg value = " $ { vmopt . arch } " / > <nl> < classpath > < path path = " $ { run . test . classpath } " / > < path path = " $ { file . reference . jna . build } / test - classes " / > < / classpath > <nl> @ @ - 206 , 7 + 205 , 6 @ @ com . sun . jna . platform . wince ; version = $ { osgi . version } <nl> <nl> < ! - - One - off test to check field order definitions - - > <nl> < target name = " test - field - order " depends = " - pre - test - run - single " > <nl> - < ! - - @ todo How to ensure sys prop : jna . nosys = true is seen in tests ? - - > <nl> < ! - - < property name = " test . includes " value = " com / sun / jna / platform / * * / * . java " / > - - > <nl> < property name = " test . includes " value = " com / sun / jna / platform / StructureFieldOrderTest . java " / > <nl> < property name = " javac . includes " value = " * * / * " / > <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index e1e4d3d . . 5d38b0f 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 980 , 7 + 980 , 8 @ @ public final class Native implements Version { <nl> } <nl> } <nl> } <nl> - if ( ! Boolean . getBoolean ( " jna . nosys " ) ) { <nl> + String jnaNosys = System . getProperty ( " jna . nosys " , " true " ) ; <nl> + if ( ! Boolean . parseBoolean ( jnaNosys ) ) { <nl> try { <nl> if ( DEBUG _ JNA _ LOAD ) { <nl> System . out . println ( " Trying ( via loadLibrary ) " + libName ) ; <nl> diff - - git a / src / com / sun / jna / overview . html b / src / com / sun / jna / overview . html <nl> index 55ad03e . . 5453d44 100644 <nl> - - - a / src / com / sun / jna / overview . html <nl> + + + b / src / com / sun / jna / overview . html <nl> @ @ - 59 , 19 + 59 , 19 @ @ additional JNI or native code . <nl> JNA includes a small , platform - specific shared library which enables all <nl> native access . When the { @ link com . sun . jna . Native } class is first accessed , <nl> JNA will first attempt to load this library from the directories specified <nl> - in < code > jna . boot . library . path < / code > . If that fails , it will fall back to <nl> - loading from the system library paths . Finally it will attempt to extract the <nl> - stub library from from the JNA jar file , and load it . <nl> + in < code > jna . boot . library . path < / code > . If that fails and < code > jna . nosys = false < / code > <nl> + is set , it will fall back to loading from the system library paths . Finally it <nl> + will attempt to extract the stub library from from the JNA jar file , and load it . <nl> < p / > <nl> The < code > jna . boot . library . path < / code > property is mainly to support <nl> jna . jar being included in - Xbootclasspath , where <nl> < code > java . library . path < / code > and LD _ LIBRARY _ PATH are ignored . It is also <nl> useful for designating a version of the library to use in preference to any <nl> - which may already be installed on the system . <nl> + which may already be installed on the system . <nl> < p / > <nl> - Loading from the system may be disabled by < code > jna . nosys = true < / code > , <nl> + Loading from the system may be enabled by < code > jna . nosys = false < / code > , <nl> and unpacking from the jar file may be disabled by <nl> - < code > jna . nounpack = true < / code > . <nl> + < code > jna . nounpack = true < / code > . <nl> < p / > <nl> The library name used to search for JNA ' s native library may be altered <nl> by setting < code > jna . boot . library . name < / code > , which defaults to
NEAREST DIFF (one line): diff - - git a / test / com / sun / jna / ArgumentsMarshalTest . java b / test / com / sun / jna / ArgumentsMarshalTest . java <nl> index a25cdcd . . 47ee1e7 100644 <nl> - - - a / test / com / sun / jna / ArgumentsMarshalTest . java <nl> + + + b / test / com / sun / jna / ArgumentsMarshalTest . java <nl> @ @ - 418 , 8 + 418 , 7 @ @ public class ArgumentsMarshalTest extends TestCase { <nl> } <nl> } <nl> <nl> - / / crash <nl> - public void XFAIL _ WCE _ testLongArrayArgument ( ) { <nl> + public void testLongArrayArgument ( ) { <nl> long [ ] buf = new long [ 1024 ] ; <nl> final long MAGIC = 0x1234567887654321L ; <nl> assertEquals ( " Wrong return value " , buf . length , <nl> @ @ - 540 , 7 + 539 , 7 @ @ public class ArgumentsMarshalTest extends TestCase { <nl> assertEquals ( " Auto read should be disabled " , EXPECTED , s . field ) ; <nl> } <nl> <nl> - / / crash <nl> + / / w32ce crash <nl> public void XFAIL _ WCE _ testUnionByValueCallbackArgument ( ) throws Exception { <nl> TestLibrary . TestUnion arg = new TestLibrary . TestUnion ( ) ; <nl> arg . setType ( String . class ) ; <nl> diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index ac6022b . . 14b3cf5 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 293 , 7 + 293 , 7 @ @ public class CallbacksTest extends TestCase { <nl> assertEquals ( " Wrong callback return " , - 3 , value ) ; <nl> } <nl> <nl> - public void XFAIL _ WCE _ testCallInt64Callback ( ) { <nl> + public void testCallInt64Callback ( ) { <nl> final long MAGIC = 0x1111111111111111L ; <nl> final boolean [ ] called = { false } ; <nl> TestLibrary . Int64Callback cb = new TestLibrary . Int64Callback ( ) { <nl> @ @ - 334 , 7 + 334 , 7 @ @ public class CallbacksTest extends TestCase { <nl> assertEquals ( " Wrong callback return " , - 3f , value , 0 ) ; <nl> } <nl> <nl> - public void XFAIL _ WCE _ testCallDoubleCallback ( ) { <nl> + public void testCallDoubleCallback ( ) { <nl> final boolean [ ] called = { false } ; <nl> final double [ ] args = { 0 , 0 } ; <nl> TestLibrary . DoubleCallback cb = new TestLibrary . DoubleCallback ( ) { <nl> diff - - git a / test / com / sun / jna / ReturnTypesTest . java b / test / com / sun / jna / ReturnTypesTest . java <nl> index 4354592 . . 1384c31 100644 <nl> - - - a / test / com / sun / jna / ReturnTypesTest . java <nl> + + + b / test / com / sun / jna / ReturnTypesTest . java <nl> @ @ - 227 , 7 + 227 , 7 @ @ public class ReturnTypesTest extends TestCase { <nl> assertNull ( " Expect null structure return " , s ) ; <nl> } <nl> <nl> - / / crash <nl> + / / w32ce crash <nl> public void XFAIL _ WCE _ testReturnSmallStructureByValue ( ) { <nl> TestSmallStructure s = lib . returnSmallStructureByValue ( ) ; <nl> assertNotNull ( " Returned structure must not be null " , s ) ;

TEST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 0d5d5c0 . . 1110239 100644 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 62 , 7 + 62 , 8 @ @ Bug Fixes 
 < / ol > - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 * [ # 958 ] ( https : / / github . com / java - native - access / jna / issues / 958 ) : Update for PR 863 : Old toolchains produce binaries without hard - / softfloat markers . Rasbian is missinng the markers and the oracle JDK is also affected . For hardfloat detection now also the Arm EABI section is also considered - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 * [ # 974 ] ( https : / / github . com / java - native - access / jna / issues / 974 ) : If the callback code failed to attach to the JVM , this lead to a segfault . The success of attaching to the JVM was checked to late and an invalid ` JNIEnv ` pointer was used to access the JVM - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 - * [ # 1010 ] ( https : / / github . com / java - native - access / jna / issues / 1010 ) : Fix binding of ` lpAccessName ` parameter of ` com . sun . jna . platform . win32 . Mpr # WNetUseConnection ` 
 + * [ # 1010 ] ( https : / / github . com / java - native - access / jna / issues / 1010 ) : Fix binding of ` lpAccessName ` parameter of ` com . sun . jna . platform . win32 . Mpr # WNetUseConnection ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 + * [ # 384 ] ( https : / / github . com / java - native - access / jna / issues / 384 ) : Switch default value for ` jna . nosys ` to ` true ` . By default then the embedded native library is used - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 
 Breaking Changes 
 - - - - - - - - - - - - - - - - 
 diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml 
 index f9887a5 . . 2d2f654 100644 
 - - - a / contrib / platform / build . xml 
 + + + b / contrib / platform / build . xml 
 @ @ - 178 , 7 + 178 , 6 @ @ com . sun . jna . platform . wince ; version = $ { osgi . version } 
 < ! - - avoid VM conflicts with JNA protected mode - - > 
 < env key = " $ { ld . preload . name } " file = " $ { libjsig } " / > 
 < ! - - Ignore any system install of JNA - - > 
 - < sysproperty key = " jna . nosys " value = " true " / > 
 < sysproperty key = " jna . builddir " file = " $ { file . reference . jna . build } " / > 
 < jvmarg value = " $ { vmopt . arch } " / > 
 < classpath > < path path = " $ { run . test . classpath } " / > < path path = " $ { file . reference . jna . build } / test - classes " / > < / classpath > 
 @ @ - 206 , 7 + 205 , 6 @ @ com . sun . jna . platform . wince ; version = $ { osgi . version } 
 
 < ! - - One - off test to check field order definitions - - > 
 < target name = " test - field - order " depends = " - pre - test - run - single " > 
 - < ! - - @ todo How to ensure sys prop : jna . nosys = true is seen in tests ? - - > 
 < ! - - < property name = " test . includes " value = " com / sun / jna / platform / * * / * . java " / > - - > 
 < property name = " test . includes " value = " com / sun / jna / platform / StructureFieldOrderTest . java " / > 
 < property name = " javac . includes " value = " * * / * " / > 
 diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java 
 index e1e4d3d . . 5d38b0f 100644 
 - - - a / src / com / sun / jna / Native . java 
 + + + b / src / com / sun / jna / Native . java 
 @ @ - 980 , 7 + 980 , 8 @ @ public final class Native implements Version { 
 } 
 } 
 } 
 - if ( ! Boolean . getBoolean ( " jna . nosys " ) ) { 
 + String jnaNosys = System . getProperty ( " jna . nosys " , " true " ) ; 
 + if ( ! Boolean . parseBoolean ( jnaNosys ) ) { 
 try { 
 if ( DEBUG _ JNA _ LOAD ) { 
 System . out . println ( " Trying ( via loadLibrary ) " + libName ) ; 
 diff - - git a / src / com / sun / jna / overview . html b / src / com / sun / jna / overview . html 
 index 55ad03e . . 5453d44 100644 
 - - - a / src / com / sun / jna / overview . html 
 + + + b / src / com / sun / jna / overview . html 
 @ @ - 59 , 19 + 59 , 19 @ @ additional JNI or native code . 
 JNA includes a small , platform - specific shared library which enables all 
 native access . When the { @ link com . sun . jna . Native } class is first accessed , 
 JNA will first attempt to load this library from the directories specified 
 - in < code > jna . boot . library . path < / code > . If that fails , it will fall back to 
 - loading from the system library paths . Finally it will attempt to extract the 
 - stub library from from the JNA jar file , and load it . 
 + in < code > jna . boot . library . path < / code > . If that fails and < code > jna . nosys = false < / code > 
 + is set , it will fall back to loading from the system library paths . Finally it 
 + will attempt to extract the stub library from from the JNA jar file , and load it . 
 < p / > 
 The < code > jna . boot . library . path < / code > property is mainly to support 
 jna . jar being included in - Xbootclasspath , where 
 < code > java . library . path < / code > and LD _ LIBRARY _ PATH are ignored . It is also 
 useful for designating a version of the library to use in preference to any 
 - which may already be installed on the system . 
 + which may already be installed on the system . 
 < p / > 
 - Loading from the system may be disabled by < code > jna . nosys = true < / code > , 
 + Loading from the system may be enabled by < code > jna . nosys = false < / code > , 
 and unpacking from the jar file may be disabled by 
 - < code > jna . nounpack = true < / code > . 
 + < code > jna . nounpack = true < / code > . 
 < p / > 
 The library name used to search for JNA ' s native library may be altered 
 by setting < code > jna . boot . library . name < / code > , which defaults to

NEAREST DIFF:
diff - - git a / test / com / sun / jna / ArgumentsMarshalTest . java b / test / com / sun / jna / ArgumentsMarshalTest . java 
 index a25cdcd . . 47ee1e7 100644 
 - - - a / test / com / sun / jna / ArgumentsMarshalTest . java 
 + + + b / test / com / sun / jna / ArgumentsMarshalTest . java 
 @ @ - 418 , 8 + 418 , 7 @ @ public class ArgumentsMarshalTest extends TestCase { 
 } 
 } 
 
 - / / crash 
 - public void XFAIL _ WCE _ testLongArrayArgument ( ) { 
 + public void testLongArrayArgument ( ) { 
 long [ ] buf = new long [ 1024 ] ; 
 final long MAGIC = 0x1234567887654321L ; 
 assertEquals ( " Wrong return value " , buf . length , 
 @ @ - 540 , 7 + 539 , 7 @ @ public class ArgumentsMarshalTest extends TestCase { 
 assertEquals ( " Auto read should be disabled " , EXPECTED , s . field ) ; 
 } 
 
 - / / crash 
 + / / w32ce crash 
 public void XFAIL _ WCE _ testUnionByValueCallbackArgument ( ) throws Exception { 
 TestLibrary . TestUnion arg = new TestLibrary . TestUnion ( ) ; 
 arg . setType ( String . class ) ; 
 diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java 
 index ac6022b . . 14b3cf5 100644 
 - - - a / test / com / sun / jna / CallbacksTest . java 
 + + + b / test / com / sun / jna / CallbacksTest . java 
 @ @ - 293 , 7 + 293 , 7 @ @ public class CallbacksTest extends TestCase { 
 assertEquals ( " Wrong callback return " , - 3 , value ) ; 
 } 
 
 - public void XFAIL _ WCE _ testCallInt64Callback ( ) { 
 + public void testCallInt64Callback ( ) { 
 final long MAGIC = 0x1111111111111111L ; 
 final boolean [ ] called = { false } ; 
 TestLibrary . Int64Callback cb = new TestLibrary . Int64Callback ( ) { 
 @ @ - 334 , 7 + 334 , 7 @ @ public class CallbacksTest extends TestCase { 
 assertEquals ( " Wrong callback return " , - 3f , value , 0 ) ; 
 } 
 
 - public void XFAIL _ WCE _ testCallDoubleCallback ( ) { 
 + public void testCallDoubleCallback ( ) { 
 final boolean [ ] called = { false } ; 
 final double [ ] args = { 0 , 0 } ; 
 TestLibrary . DoubleCallback cb = new TestLibrary . DoubleCallback ( ) { 
 diff - - git a / test / com / sun / jna / ReturnTypesTest . java b / test / com / sun / jna / ReturnTypesTest . java 
 index 4354592 . . 1384c31 100644 
 - - - a / test / com / sun / jna / ReturnTypesTest . java 
 + + + b / test / com / sun / jna / ReturnTypesTest . java 
 @ @ - 227 , 7 + 227 , 7 @ @ public class ReturnTypesTest extends TestCase { 
 assertNull ( " Expect null structure return " , s ) ; 
 } 
 
 - / / crash 
 + / / w32ce crash 
 public void XFAIL _ WCE _ testReturnSmallStructureByValue ( ) { 
 TestSmallStructure s = lib . returnSmallStructureByValue ( ) ; 
 assertNotNull ( " Returned structure must not be null " , s ) ;
