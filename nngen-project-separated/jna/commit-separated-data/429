BLEU SCORE: 0.05954672553679791

TEST MSG: fix failing test
GENERATED MSG: verify proper module handle for dll callbacks

TEST DIFF (one line): diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index a58e0ef . . 7f18d68 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 1196 , 15 + 1196 , 16 @ @ public class CallbacksTest extends TestCase { <nl> / / Check module information <nl> Pointer fp = CallbackReference . getFunctionPointer ( cb ) ; <nl> NativeLibrary kernel32 = NativeLibrary . getInstance ( " kernel32 " , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> - Function f = kernel32 . getFunction ( " GetModuleHandleEx " ) ; <nl> + Function f = kernel32 . getFunction ( " GetModuleHandleExW " ) ; <nl> final int GET _ MODULE _ HANDLE _ FROM _ ADDRESS = 0x4 ; <nl> PointerByReference pref = new PointerByReference ( ) ; <nl> int result = f . invokeInt ( new Object [ ] { new Integer ( GET _ MODULE _ HANDLE _ FROM _ ADDRESS ) , fp , pref } ) ; <nl> assertTrue ( " GetModuleHandleEx ( fptr ) failed : " + Native . getLastError ( ) , result ! = 0 ) ; <nl> <nl> - f = kernel32 . getFunction ( " GetModuleHandle " ) ; <nl> + f = kernel32 . getFunction ( " GetModuleHandleW " ) ; <nl> Pointer handle = f . invokePointer ( new Object [ ] { " jnidispatch " } ) ; <nl> assertTrue ( " GetModuleHandle ( \ " jnidispatch \ " ) failed : " + Native . getLastError ( ) , result ! = 0 ) ; <nl> + assertNotNull ( " Could not object module handle for jnidispatch . dll " , handle ) ; <nl> assertEquals ( " Wrong module HANDLE for DLL function pointer " , handle , pref . getValue ( ) ) ; <nl> <nl> / / Check slot re - use
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java 
 index a58e0ef . . 7f18d68 100644 
 - - - a / test / com / sun / jna / CallbacksTest . java 
 + + + b / test / com / sun / jna / CallbacksTest . java 
 @ @ - 1196 , 15 + 1196 , 16 @ @ public class CallbacksTest extends TestCase { 
 / / Check module information 
 Pointer fp = CallbackReference . getFunctionPointer ( cb ) ; 
 NativeLibrary kernel32 = NativeLibrary . getInstance ( " kernel32 " , W32APIOptions . DEFAULT _ OPTIONS ) ; 
 - Function f = kernel32 . getFunction ( " GetModuleHandleEx " ) ; 
 + Function f = kernel32 . getFunction ( " GetModuleHandleExW " ) ; 
 final int GET _ MODULE _ HANDLE _ FROM _ ADDRESS = 0x4 ; 
 PointerByReference pref = new PointerByReference ( ) ; 
 int result = f . invokeInt ( new Object [ ] { new Integer ( GET _ MODULE _ HANDLE _ FROM _ ADDRESS ) , fp , pref } ) ; 
 assertTrue ( " GetModuleHandleEx ( fptr ) failed : " + Native . getLastError ( ) , result ! = 0 ) ; 
 
 - f = kernel32 . getFunction ( " GetModuleHandle " ) ; 
 + f = kernel32 . getFunction ( " GetModuleHandleW " ) ; 
 Pointer handle = f . invokePointer ( new Object [ ] { " jnidispatch " } ) ; 
 assertTrue ( " GetModuleHandle ( \ " jnidispatch \ " ) failed : " + Native . getLastError ( ) , result ! = 0 ) ; 
 + assertNotNull ( " Could not object module handle for jnidispatch . dll " , handle ) ; 
 assertEquals ( " Wrong module HANDLE for DLL function pointer " , handle , pref . getValue ( ) ) ; 
 
 / / Check slot re - use

NEAREST DIFF:
ELIMINATEDSENTENCE
