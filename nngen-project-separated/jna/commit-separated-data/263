BLEU SCORE: 0.13134549472120793

TEST MSG: clean up 64 - bit mingw build
GENERATED MSG: fix MSVC vs mingw build switch

TEST DIFF (one line): diff - - git a / native / Makefile b / native / Makefile <nl> index a5a124a . . f7dbd38 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 176 , 8 + 176 , 12 @ @ STRIP = @ echo <nl> LIBPFX = <nl> LIBSFX = . dll <nl> TESTLIB _ TRUNC = $ ( BUILD ) / testlib - truncated . dll <nl> + ifeq ( $ ( ARCH ) , amd64 ) <nl> + FFI _ CONFIG + = - - host = x86 _ 64 - w64 - mingw32 <nl> + endif <nl> <nl> ifeq ( $ ( USE _ MSVC ) , true ) <nl> + # MS compiler <nl> CC = $ ( FFI _ SRC ) / msvcc . sh <nl> COPT = <nl> CPP = cl - nologo - EP <nl> @ @ - 187 , 39 + 191 , 37 @ @ LIBS = psapi . lib <nl> ARSFX = . lib <nl> ifeq ( $ ( ARCH ) , amd64 ) <nl> CC + = - m64 <nl> - FFI _ CONFIG + = - - host = x86 _ 64 - w64 - mingw32 <nl> endif <nl> FFI _ CONFIG + = & & rm - f include / ffitarget . h & & cp $ ( FFI _ SRC ) / include / * . h $ ( FFI _ SRC ) / src / x86 / ffitarget . h include <nl> FFI _ ENV + = LD = " $ ( LD ) " CPP = " $ ( CPP ) " CXXCPP = " $ ( CPP ) " <nl> EXTRAOBJS + = $ ( DLLCB ) <nl> + <nl> else <nl> + # Mingw compiler <nl> + LDFLAGS = - o $ @ - shared <nl> + FFI _ ENV + = CXXCPP = " $ ( CPP ) " <nl> + <nl> + ifneq ( $ ( ARCH ) , amd64 ) <nl> MINGW _ PREFIX ? = i686 - pc - mingw32 - <nl> CC = $ ( MINGW _ PREFIX ) gcc <nl> CPP = $ ( MINGW _ PREFIX ) gcc - E <nl> - LDFLAGS = - o $ @ - shared - Wl , - - add - stdcall - alias <nl> + LDFLAGS + = - Wl , - - add - stdcall - alias <nl> LIBS = - lpsapi <nl> - FFI _ ENV + = CXXCPP = " $ ( CPP ) " <nl> - endif <nl> - <nl> - ifeq ( $ ( ARCH ) , amd64 ) <nl> - # Set USE _ MSVC false to enable mingw64 cross compiler ; ensure $ ( MINGW ) is in <nl> - # PATH . Should build properly as of 111121 , but lacks SEH , so MSVC build is <nl> - # preferred <nl> + else <nl> + # mingw64 lacks SEH , so MSVC build is preferred <nl> MINGW _ PREFIX ? = x86 _ 64 - w64 - mingw32 - <nl> MINGW = $ ( MINGW _ PREFIX ) gcc <nl> - # Need windres from mingw distribution , even if building with MSVC <nl> - WINDRES = $ ( MINGW _ PREFIX ) windres <nl> - <nl> - ifneq ( $ ( USE _ MSVC ) , true ) <nl> CC = $ ( MINGW ) <nl> # No SEH under mingw64 , thus no HAVE _ PROTECTION <nl> CDEFINES = - DPSAPI _ VERSION = 1 <nl> LD = $ ( CC ) <nl> - LDFLAGS = - o $ @ - shared <nl> LIBS = - lmingwex - lpsapi - lkernel32 - lmsvcrt <nl> endif <nl> - <nl> endif <nl> + <nl> + # Need windres from mingw distribution , even if building with MSVC <nl> + WINDRES = $ ( MINGW _ PREFIX ) windres <nl> + <nl> endif <nl> <nl> ifeq ( $ ( OS ) , linux ) <nl> diff - - git a / www / WindowsDevelopmentEnvironment . md b / www / WindowsDevelopmentEnvironment . md <nl> index 0cca7e0 . . 518ad96 100644 <nl> - - - a / www / WindowsDevelopmentEnvironment . md <nl> + + + b / www / WindowsDevelopmentEnvironment . md <nl> @ @ - 1 , 33 + 1 , 11 @ @ <nl> # # Setting up a Windows Development Environment <nl> <nl> - 32 - bit Windows <nl> - - - - - - - - - - - - - - - <nl> - <nl> - # # # # Java <nl> - <nl> - Set ` JAVA _ HOME ` to a 32 - bit JDK , eg . ` C : \ Program Files ( x86 ) \ java \ jdk1 . 6 . 0 _ 24 ` . <nl> - <nl> - # # # # Cygwin <nl> - <nl> - Install [ cygwin ] ( http : / / www . cygwin . com / ) . <nl> - <nl> - When installing cygwin , include ssh , git , make , autotools , and mingw32 - g + + . <nl> - Ensure the mingw32 compiler ( i686 - pc - mingw32 - gcc . exe ) is on your path . <nl> - <nl> - 64 - bit Windows <nl> - - - - - - - - - - - - - - - <nl> - <nl> # # # # Java <nl> <nl> - Set ` JAVA _ HOME ` to a 64 - bit JDK , eg . ` C : \ Program Files \ java \ jdk1 . 6 . 0 _ 24 ` . <nl> + For a 32 - bit build , set ` JAVA _ HOME ` to a 32 - bit JDK , eg . ` C : \ Program Files ( x86 ) \ java \ jdk1 . 6 . 0 _ 24 ` . <nl> + For a 64 - bit build , set ` JAVA _ HOME ` to a 64 - bit JDK , eg . ` C : \ Program Files \ java \ jdk1 . 6 . 0 _ 24 ` . <nl> <nl> - # # # # Cygwin <nl> - <nl> - Install [ cygwin ] ( http : / / www . cygwin . com / ) . <nl> - <nl> - When installing cygwin , include ssh , git , make , autotools , and <nl> - mingw64 - g + + . Ensure the mingw64 compiler ( i686 - pc - mingw64 - gcc . exe ) is on <nl> - your path . <nl> + # # # # Native <nl> <nl> MSVC <nl> - - - - <nl> @ @ - 39 , 7 + 17 , 7 @ @ native bits if MSVC is set in the environment . The MS compiler provides <nl> structured event handling ( SEH ) , which allows JNA to trap native faults when <nl> run in protected mode . <nl> <nl> - On 64 - bit windows , you will still need to install mingw64 - gcc - core in order to <nl> + On 64 - bit windows , you will still need to install mingw64 in order to <nl> compile a small bit of inline assembly . <nl> <nl> To use the MS compiler , ensure that the appropriate 32 - bit or 64 - bit versions <nl> @ @ - 60 , 6 + 38 , 16 @ @ export LIB = " $ ( cygpath - m " $ MSVC " ) / lib / amd64 ; $ ( cygpath - m " $ WSDK _ 64 " ) / lib / x64 " <nl> export LIB = " $ ( cygpath - m " $ MSVC " ) / lib ; $ ( cygpath - m " $ WSDK " ) / lib " <nl> ` ` ` <nl> <nl> + # # # # mingw <nl> + <nl> + Install [ cygwin ] ( http : / / www . cygwin . com / ) . <nl> + <nl> + When installing cygwin , include ssh , git , make , autotools , and mingw { 32 | 64 } - g + + . <nl> + Ensure the mingw compiler ( i686 - pc - mingw32 - gcc . exe or i686 - pc - mingw64 - gcc . exe ) is on your path . <nl> + <nl> + If ` cl . exe ` is found on your % PATH % , you ' ll need to invoke ` ant native <nl> + - DUSE _ MSVC = false ` in order to avoid using the MS compiler . <nl> + <nl> # # # Issues <nl> <nl> # # # # Backslash R Command Not Found
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / native / Makefile b / native / Makefile 
 index a5a124a . . f7dbd38 100644 
 - - - a / native / Makefile 
 + + + b / native / Makefile 
 @ @ - 176 , 8 + 176 , 12 @ @ STRIP = @ echo 
 LIBPFX = 
 LIBSFX = . dll 
 TESTLIB _ TRUNC = $ ( BUILD ) / testlib - truncated . dll 
 + ifeq ( $ ( ARCH ) , amd64 ) 
 + FFI _ CONFIG + = - - host = x86 _ 64 - w64 - mingw32 
 + endif 
 
 ifeq ( $ ( USE _ MSVC ) , true ) 
 + # MS compiler 
 CC = $ ( FFI _ SRC ) / msvcc . sh 
 COPT = 
 CPP = cl - nologo - EP 
 @ @ - 187 , 39 + 191 , 37 @ @ LIBS = psapi . lib 
 ARSFX = . lib 
 ifeq ( $ ( ARCH ) , amd64 ) 
 CC + = - m64 
 - FFI _ CONFIG + = - - host = x86 _ 64 - w64 - mingw32 
 endif 
 FFI _ CONFIG + = & & rm - f include / ffitarget . h & & cp $ ( FFI _ SRC ) / include / * . h $ ( FFI _ SRC ) / src / x86 / ffitarget . h include 
 FFI _ ENV + = LD = " $ ( LD ) " CPP = " $ ( CPP ) " CXXCPP = " $ ( CPP ) " 
 EXTRAOBJS + = $ ( DLLCB ) 
 + 
 else 
 + # Mingw compiler 
 + LDFLAGS = - o $ @ - shared 
 + FFI _ ENV + = CXXCPP = " $ ( CPP ) " 
 + 
 + ifneq ( $ ( ARCH ) , amd64 ) 
 MINGW _ PREFIX ? = i686 - pc - mingw32 - 
 CC = $ ( MINGW _ PREFIX ) gcc 
 CPP = $ ( MINGW _ PREFIX ) gcc - E 
 - LDFLAGS = - o $ @ - shared - Wl , - - add - stdcall - alias 
 + LDFLAGS + = - Wl , - - add - stdcall - alias 
 LIBS = - lpsapi 
 - FFI _ ENV + = CXXCPP = " $ ( CPP ) " 
 - endif 
 - 
 - ifeq ( $ ( ARCH ) , amd64 ) 
 - # Set USE _ MSVC false to enable mingw64 cross compiler ; ensure $ ( MINGW ) is in 
 - # PATH . Should build properly as of 111121 , but lacks SEH , so MSVC build is 
 - # preferred 
 + else 
 + # mingw64 lacks SEH , so MSVC build is preferred 
 MINGW _ PREFIX ? = x86 _ 64 - w64 - mingw32 - 
 MINGW = $ ( MINGW _ PREFIX ) gcc 
 - # Need windres from mingw distribution , even if building with MSVC 
 - WINDRES = $ ( MINGW _ PREFIX ) windres 
 - 
 - ifneq ( $ ( USE _ MSVC ) , true ) 
 CC = $ ( MINGW ) 
 # No SEH under mingw64 , thus no HAVE _ PROTECTION 
 CDEFINES = - DPSAPI _ VERSION = 1 
 LD = $ ( CC ) 
 - LDFLAGS = - o $ @ - shared 
 LIBS = - lmingwex - lpsapi - lkernel32 - lmsvcrt 
 endif 
 - 
 endif 
 + 
 + # Need windres from mingw distribution , even if building with MSVC 
 + WINDRES = $ ( MINGW _ PREFIX ) windres 
 + 
 endif 
 
 ifeq ( $ ( OS ) , linux ) 
 diff - - git a / www / WindowsDevelopmentEnvironment . md b / www / WindowsDevelopmentEnvironment . md 
 index 0cca7e0 . . 518ad96 100644 
 - - - a / www / WindowsDevelopmentEnvironment . md 
 + + + b / www / WindowsDevelopmentEnvironment . md 
 @ @ - 1 , 33 + 1 , 11 @ @ 
 # # Setting up a Windows Development Environment 
 
 - 32 - bit Windows 
 - - - - - - - - - - - - - - - 
 - 
 - # # # # Java 
 - 
 - Set ` JAVA _ HOME ` to a 32 - bit JDK , eg . ` C : \ Program Files ( x86 ) \ java \ jdk1 . 6 . 0 _ 24 ` . 
 - 
 - # # # # Cygwin 
 - 
 - Install [ cygwin ] ( http : / / www . cygwin . com / ) . 
 - 
 - When installing cygwin , include ssh , git , make , autotools , and mingw32 - g + + . 
 - Ensure the mingw32 compiler ( i686 - pc - mingw32 - gcc . exe ) is on your path . 
 - 
 - 64 - bit Windows 
 - - - - - - - - - - - - - - - 
 - 
 # # # # Java 
 
 - Set ` JAVA _ HOME ` to a 64 - bit JDK , eg . ` C : \ Program Files \ java \ jdk1 . 6 . 0 _ 24 ` . 
 + For a 32 - bit build , set ` JAVA _ HOME ` to a 32 - bit JDK , eg . ` C : \ Program Files ( x86 ) \ java \ jdk1 . 6 . 0 _ 24 ` . 
 + For a 64 - bit build , set ` JAVA _ HOME ` to a 64 - bit JDK , eg . ` C : \ Program Files \ java \ jdk1 . 6 . 0 _ 24 ` . 
 
 - # # # # Cygwin 
 - 
 - Install [ cygwin ] ( http : / / www . cygwin . com / ) . 
 - 
 - When installing cygwin , include ssh , git , make , autotools , and 
 - mingw64 - g + + . Ensure the mingw64 compiler ( i686 - pc - mingw64 - gcc . exe ) is on 
 - your path . 
 + # # # # Native 
 
 MSVC 
 - - - - 
 @ @ - 39 , 7 + 17 , 7 @ @ native bits if MSVC is set in the environment . The MS compiler provides 
 structured event handling ( SEH ) , which allows JNA to trap native faults when 
 run in protected mode . 
 
 - On 64 - bit windows , you will still need to install mingw64 - gcc - core in order to 
 + On 64 - bit windows , you will still need to install mingw64 in order to 
 compile a small bit of inline assembly . 
 
 To use the MS compiler , ensure that the appropriate 32 - bit or 64 - bit versions 
 @ @ - 60 , 6 + 38 , 16 @ @ export LIB = " $ ( cygpath - m " $ MSVC " ) / lib / amd64 ; $ ( cygpath - m " $ WSDK _ 64 " ) / lib / x64 " 
 export LIB = " $ ( cygpath - m " $ MSVC " ) / lib ; $ ( cygpath - m " $ WSDK " ) / lib " 
 ` ` ` 
 
 + # # # # mingw 
 + 
 + Install [ cygwin ] ( http : / / www . cygwin . com / ) . 
 + 
 + When installing cygwin , include ssh , git , make , autotools , and mingw { 32 | 64 } - g + + . 
 + Ensure the mingw compiler ( i686 - pc - mingw32 - gcc . exe or i686 - pc - mingw64 - gcc . exe ) is on your path . 
 + 
 + If ` cl . exe ` is found on your % PATH % , you ' ll need to invoke ` ant native 
 + - DUSE _ MSVC = false ` in order to avoid using the MS compiler . 
 + 
 # # # Issues 
 
 # # # # Backslash R Command Not Found

NEAREST DIFF:
ELIMINATEDSENTENCE
