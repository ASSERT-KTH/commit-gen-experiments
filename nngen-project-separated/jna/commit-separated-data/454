BLEU SCORE: 0.08310415003234632

TEST MSG: update w32 natives
GENERATED MSG: Fix callbacks when DEP is enabled

TEST DIFF (one line): diff - - git a / . gitignore b / . gitignore <nl> index a1e428d . . 5644e37 100644 <nl> - - - a / . gitignore <nl> + + + b / . gitignore <nl> @ @ - 16 , 4 + 16 , 5 @ @ dist / * - sources . jar <nl> dist / * - javadoc . jar <nl> dist / src - mvn . zip <nl> dist / out - of - date . jar <nl> - perf * . txt <nl> \ No newline at end of file <nl> + perf * . txt <nl> + native / libffi / doc / libffi . info <nl> diff - - git a / build . xml b / build . xml <nl> index fb902ee . . a99e5a9 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 582 , 6 + 582 , 10 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> replace = " ProductVersion & quot ; , & quot ; $ { spec . version } & quot ; " <nl> preserveLastModified = " true " <nl> file = " $ { rsrc } " byline = " true " / > <nl> + < replaceregexp match = " ( Copyright . * - ) 2 . . . " <nl> + replace = " \ 1 $ { year } " <nl> + preserveLastModified = " true " <nl> + file = " $ { rsrc } " byline = " true " / > <nl> < / target > <nl> <nl> < target name = " native " depends = " - setup , javah , - native - api - check , rsrc " unless = " skip - native " <nl> diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index 60e98aa . . b8ff932 100755 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ <nl> diff - - git a / native / jnidispatch . rc b / native / jnidispatch . rc <nl> index f4c156a . . bb388c3 100644 <nl> - - - a / native / jnidispatch . rc <nl> + + + b / native / jnidispatch . rc <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> / / Resource file to generate version information for jnidispatch . dll <nl> - / / Copyright ( c ) 2008 - 2010 Timothy Wall <nl> + / / Copyright ( c ) 2008 - 2013 Timothy Wall <nl> / / Type : version <nl> <nl> / / Name : 1 <nl> diff - - git a / native / libffi / src / x86 / ffi . c b / native / libffi / src / x86 / ffi . c <nl> index 0600414 . . c44f4f0 100644 <nl> - - - a / native / libffi / src / x86 / ffi . c <nl> + + + b / native / libffi / src / x86 / ffi . c <nl> @ @ - 315 , 6 + 315 , 9 @ @ ffi _ status ffi _ prep _ cif _ machdep ( ffi _ cif * cif ) <nl> cif - > bytes + = 4 * sizeof ( ffi _ arg ) ; <nl> # endif <nl> <nl> + # ifdef X86 _ WIN32 <nl> + if ( cif - > abi ! = FFI _ STDCALL ) <nl> + # endif <nl> cif - > bytes = ( cif - > bytes + 15 ) & ~ 0xF ; <nl> <nl> return FFI _ OK ;
NEAREST DIFF (one line): diff - - git a / jnalib / src / com / sun / jna / win32 / StdCallFunctionMapper . java b / jnalib / src / com / sun / jna / win32 / StdCallFunctionMapper . java <nl> index 7051a1d . . d1bb42a 100644 <nl> - - - a / jnalib / src / com / sun / jna / win32 / StdCallFunctionMapper . java <nl> + + + b / jnalib / src / com / sun / jna / win32 / StdCallFunctionMapper . java <nl> @ @ - 67 , 12 + 67 , 11 @ @ public class StdCallFunctionMapper implements FunctionMapper { <nl> <nl> } <nl> catch ( UnsatisfiedLinkError e ) { <nl> - / / try with an explicit underscore ; some compilers prepend <nl> - / / an extra one <nl> + / / try with an explicit underscore <nl> try { <nl> name = library . getFunction ( " _ " + decorated , conv ) . getName ( ) ; <nl> } <nl> - catch ( UnsatisfiedLinkError e ) { <nl> + catch ( UnsatisfiedLinkError e2 ) { <nl> / / not found ; let caller try undecorated version <nl> } <nl> }

TEST DIFF:
diff - - git a / . gitignore b / . gitignore 
 index a1e428d . . 5644e37 100644 
 - - - a / . gitignore 
 + + + b / . gitignore 
 @ @ - 16 , 4 + 16 , 5 @ @ dist / * - sources . jar 
 dist / * - javadoc . jar 
 dist / src - mvn . zip 
 dist / out - of - date . jar 
 - perf * . txt 
 \ No newline at end of file 
 + perf * . txt 
 + native / libffi / doc / libffi . info 
 diff - - git a / build . xml b / build . xml 
 index fb902ee . . a99e5a9 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 582 , 6 + 582 , 10 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc 
 replace = " ProductVersion & quot ; , & quot ; $ { spec . version } & quot ; " 
 preserveLastModified = " true " 
 file = " $ { rsrc } " byline = " true " / > 
 + < replaceregexp match = " ( Copyright . * - ) 2 . . . " 
 + replace = " \ 1 $ { year } " 
 + preserveLastModified = " true " 
 + file = " $ { rsrc } " byline = " true " / > 
 < / target > 
 
 < target name = " native " depends = " - setup , javah , - native - api - check , rsrc " unless = " skip - native " 
 diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar 
 index 60e98aa . . b8ff932 100755 
 Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ 
 diff - - git a / native / jnidispatch . rc b / native / jnidispatch . rc 
 index f4c156a . . bb388c3 100644 
 - - - a / native / jnidispatch . rc 
 + + + b / native / jnidispatch . rc 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 / / Resource file to generate version information for jnidispatch . dll 
 - / / Copyright ( c ) 2008 - 2010 Timothy Wall 
 + / / Copyright ( c ) 2008 - 2013 Timothy Wall 
 / / Type : version 
 
 / / Name : 1 
 diff - - git a / native / libffi / src / x86 / ffi . c b / native / libffi / src / x86 / ffi . c 
 index 0600414 . . c44f4f0 100644 
 - - - a / native / libffi / src / x86 / ffi . c 
 + + + b / native / libffi / src / x86 / ffi . c 
 @ @ - 315 , 6 + 315 , 9 @ @ ffi _ status ffi _ prep _ cif _ machdep ( ffi _ cif * cif ) 
 cif - > bytes + = 4 * sizeof ( ffi _ arg ) ; 
 # endif 
 
 + # ifdef X86 _ WIN32 
 + if ( cif - > abi ! = FFI _ STDCALL ) 
 + # endif 
 cif - > bytes = ( cif - > bytes + 15 ) & ~ 0xF ; 
 
 return FFI _ OK ;

NEAREST DIFF:
diff - - git a / jnalib / src / com / sun / jna / win32 / StdCallFunctionMapper . java b / jnalib / src / com / sun / jna / win32 / StdCallFunctionMapper . java 
 index 7051a1d . . d1bb42a 100644 
 - - - a / jnalib / src / com / sun / jna / win32 / StdCallFunctionMapper . java 
 + + + b / jnalib / src / com / sun / jna / win32 / StdCallFunctionMapper . java 
 @ @ - 67 , 12 + 67 , 11 @ @ public class StdCallFunctionMapper implements FunctionMapper { 
 
 } 
 catch ( UnsatisfiedLinkError e ) { 
 - / / try with an explicit underscore ; some compilers prepend 
 - / / an extra one 
 + / / try with an explicit underscore 
 try { 
 name = library . getFunction ( " _ " + decorated , conv ) . getName ( ) ; 
 } 
 - catch ( UnsatisfiedLinkError e ) { 
 + catch ( UnsatisfiedLinkError e2 ) { 
 / / not found ; let caller try undecorated version 
 } 
 }
