BLEU SCORE: 0.020705706652424

TEST MSG: Prevent access to unsupported values in ` c . s . j . p . win32 . COM . WbemcliUtil # enumerateProperties ` 1
GENERATED MSG: Add Psapi . GetPerformanceInfo ( ) and Kernel32 . GetTickCount64 ( ) .

TEST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 40cd091 . . c0e4ae2 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 16 , 6 + 16 , 7 @ @ Features <nl> * [ # 1068 ] ( https : / / github . com / java - native - access / jna / pull / 1068 ) : ` c . s . j . p . win32 . Advapi32Util . getAccountBySid ( String systemName , PSID sid ) ` ignored parameter instead of passing it to the native function - [ @ nirud ] ( https : / / github . com / nirud ) . <nl> * [ # 813 ] ( https : / / github . com / java - native - access / jna / issues / 813 ) : Support for default methods on interfaces ( experimental ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 1073 ] ( https : / / github . com / java - native - access / jna / issues / 1073 ) : Support COM setters with multiple parameters using ` c . s . j . p . win32 . COM . util . ProxyObject ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 1083 ] ( https : / / github . com / java - native - access / jna / issues / 1083 ) : Prevent access to unsupported values in ` c . s . j . p . win32 . COM . WbemcliUtil # enumerateProperties ` and bind ` c . s . j . p . win32 . COM . Wbemcli . IWbemClassObject . GetNames ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / WbemcliUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / WbemcliUtil . java <nl> index 3589f9f . . 828361b 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / WbemcliUtil . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / WbemcliUtil . java <nl> @ @ - 41 , 6 + 41 , 10 @ @ import com . sun . jna . platform . win32 . COM . Wbemcli . IEnumWbemClassObject ; <nl> import com . sun . jna . platform . win32 . COM . Wbemcli . IWbemClassObject ; <nl> import com . sun . jna . platform . win32 . COM . Wbemcli . IWbemLocator ; <nl> import com . sun . jna . platform . win32 . COM . Wbemcli . IWbemServices ; <nl> + import static com . sun . jna . platform . win32 . Variant . VT _ ARRAY ; <nl> + import static com . sun . jna . platform . win32 . Variant . VT _ DISPATCH ; <nl> + import static com . sun . jna . platform . win32 . Variant . VT _ UNKNOWN ; <nl> + import static com . sun . jna . platform . win32 . Variant . VT _ VECTOR ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> <nl> / * * <nl> @ @ - 271 , 7 + 275 , 9 @ @ public class WbemcliUtil { <nl> * will always wait for results . <nl> * <nl> * @ return A WmiResult object encapsulating an EnumMap which will hold <nl> - * the results . <nl> + * the results . Values , that are not supported by this helper <nl> + * ( { @ code Dispatch } , { @ code Unknown } , { @ code SAFEARRAY } ) are <nl> + * not returned and reported as { @ code null } . <nl> * <nl> * @ throws TimeoutException <nl> * if the query times out before completion <nl> @ @ - 336 , 12 + 342 , 20 @ @ public class WbemcliUtil { <nl> case Variant . VT _ R8 : <nl> values . add ( vtType , cimType , property , pVal . doubleValue ( ) ) ; <nl> break ; <nl> + case Variant . VT _ EMPTY : <nl> case Variant . VT _ NULL : <nl> values . add ( vtType , cimType , property , null ) ; <nl> break ; <nl> / / Unimplemented type . User must cast <nl> default : <nl> - values . add ( vtType , cimType , property , pVal . getValue ( ) ) ; <nl> + if ( ( ( vtType & VT _ ARRAY ) = = VT _ ARRAY ) | | <nl> + ( ( vtType & VT _ UNKNOWN ) = = VT _ UNKNOWN ) | | <nl> + ( ( vtType & VT _ DISPATCH ) = = VT _ DISPATCH ) | | <nl> + ( ( vtType & VT _ VECTOR ) = = VT _ VECTOR ) ) { <nl> + values . add ( vtType , cimType , property , null ) ; <nl> + } else { <nl> + values . add ( vtType , cimType , property , pVal . getValue ( ) ) ; <nl> + } <nl> } <nl> OleAuto . INSTANCE . VariantClear ( pVal ) ; <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java <nl> index 763ba26 . . 9d6ae26 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java <nl> @ @ - 291 , 4 + 291 , 22 @ @ public class WbemcliTest { <nl> assertEquals ( Variant . VT _ BOOL , os . getVtType ( OperatingSystemProperty . PRIMARY ) ) ; <nl> assertNotNull ( os . getValue ( OperatingSystemProperty . PRIMARY , 0 ) ) ; <nl> } <nl> + <nl> + enum Win32 _ DiskDrive _ Values { <nl> + CAPTION , <nl> + CAPABILITIES <nl> + } <nl> + <nl> + @ Test <nl> + public void testUnsupportedValues ( ) { <nl> + WmiQuery < Win32 _ DiskDrive _ Values > serialNumberQuery = new WmiQuery < Win32 _ DiskDrive _ Values > ( " Win32 _ DiskDrive " , Win32 _ DiskDrive _ Values . class ) ; <nl> + WmiResult < Win32 _ DiskDrive _ Values > result = serialNumberQuery . execute ( ) ; <nl> + assertTrue ( result . getResultCount ( ) > 0 ) ; <nl> + for ( int i = 0 ; i < result . getResultCount ( ) ; i + + ) { <nl> + assertNotNull ( result . getValue ( Win32 _ DiskDrive _ Values . CAPTION , i ) ) ; <nl> + / / Capabilities are represented by a SAFEARRAY , this not supported <nl> + / / in the simplified API <nl> + assertNull ( result . getValue ( Win32 _ DiskDrive _ Values . CAPABILITIES , i ) ) ; <nl> + } <nl> + } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 40cd091 . . c0e4ae2 100644 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 16 , 6 + 16 , 7 @ @ Features 
 * [ # 1068 ] ( https : / / github . com / java - native - access / jna / pull / 1068 ) : ` c . s . j . p . win32 . Advapi32Util . getAccountBySid ( String systemName , PSID sid ) ` ignored parameter instead of passing it to the native function - [ @ nirud ] ( https : / / github . com / nirud ) . 
 * [ # 813 ] ( https : / / github . com / java - native - access / jna / issues / 813 ) : Support for default methods on interfaces ( experimental ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 * [ # 1073 ] ( https : / / github . com / java - native - access / jna / issues / 1073 ) : Support COM setters with multiple parameters using ` c . s . j . p . win32 . COM . util . ProxyObject ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 + * [ # 1083 ] ( https : / / github . com / java - native - access / jna / issues / 1083 ) : Prevent access to unsupported values in ` c . s . j . p . win32 . COM . WbemcliUtil # enumerateProperties ` and bind ` c . s . j . p . win32 . COM . Wbemcli . IWbemClassObject . GetNames ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 
 Bug Fixes 
 - - - - - - - - - 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / WbemcliUtil . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / WbemcliUtil . java 
 index 3589f9f . . 828361b 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / WbemcliUtil . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / WbemcliUtil . java 
 @ @ - 41 , 6 + 41 , 10 @ @ import com . sun . jna . platform . win32 . COM . Wbemcli . IEnumWbemClassObject ; 
 import com . sun . jna . platform . win32 . COM . Wbemcli . IWbemClassObject ; 
 import com . sun . jna . platform . win32 . COM . Wbemcli . IWbemLocator ; 
 import com . sun . jna . platform . win32 . COM . Wbemcli . IWbemServices ; 
 + import static com . sun . jna . platform . win32 . Variant . VT _ ARRAY ; 
 + import static com . sun . jna . platform . win32 . Variant . VT _ DISPATCH ; 
 + import static com . sun . jna . platform . win32 . Variant . VT _ UNKNOWN ; 
 + import static com . sun . jna . platform . win32 . Variant . VT _ VECTOR ; 
 import com . sun . jna . ptr . IntByReference ; 
 
 / * * 
 @ @ - 271 , 7 + 275 , 9 @ @ public class WbemcliUtil { 
 * will always wait for results . 
 * 
 * @ return A WmiResult object encapsulating an EnumMap which will hold 
 - * the results . 
 + * the results . Values , that are not supported by this helper 
 + * ( { @ code Dispatch } , { @ code Unknown } , { @ code SAFEARRAY } ) are 
 + * not returned and reported as { @ code null } . 
 * 
 * @ throws TimeoutException 
 * if the query times out before completion 
 @ @ - 336 , 12 + 342 , 20 @ @ public class WbemcliUtil { 
 case Variant . VT _ R8 : 
 values . add ( vtType , cimType , property , pVal . doubleValue ( ) ) ; 
 break ; 
 + case Variant . VT _ EMPTY : 
 case Variant . VT _ NULL : 
 values . add ( vtType , cimType , property , null ) ; 
 break ; 
 / / Unimplemented type . User must cast 
 default : 
 - values . add ( vtType , cimType , property , pVal . getValue ( ) ) ; 
 + if ( ( ( vtType & VT _ ARRAY ) = = VT _ ARRAY ) | | 
 + ( ( vtType & VT _ UNKNOWN ) = = VT _ UNKNOWN ) | | 
 + ( ( vtType & VT _ DISPATCH ) = = VT _ DISPATCH ) | | 
 + ( ( vtType & VT _ VECTOR ) = = VT _ VECTOR ) ) { 
 + values . add ( vtType , cimType , property , null ) ; 
 + } else { 
 + values . add ( vtType , cimType , property , pVal . getValue ( ) ) ; 
 + } 
 } 
 OleAuto . INSTANCE . VariantClear ( pVal ) ; 
 } 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java 
 index 763ba26 . . 9d6ae26 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / COM / WbemcliTest . java 
 @ @ - 291 , 4 + 291 , 22 @ @ public class WbemcliTest { 
 assertEquals ( Variant . VT _ BOOL , os . getVtType ( OperatingSystemProperty . PRIMARY ) ) ; 
 assertNotNull ( os . getValue ( OperatingSystemProperty . PRIMARY , 0 ) ) ; 
 } 
 + 
 + enum Win32 _ DiskDrive _ Values { 
 + CAPTION , 
 + CAPABILITIES 
 + } 
 + 
 + @ Test 
 + public void testUnsupportedValues ( ) { 
 + WmiQuery < Win32 _ DiskDrive _ Values > serialNumberQuery = new WmiQuery < Win32 _ DiskDrive _ Values > ( " Win32 _ DiskDrive " , Win32 _ DiskDrive _ Values . class ) ; 
 + WmiResult < Win32 _ DiskDrive _ Values > result = serialNumberQuery . execute ( ) ; 
 + assertTrue ( result . getResultCount ( ) > 0 ) ; 
 + for ( int i = 0 ; i < result . getResultCount ( ) ; i + + ) { 
 + assertNotNull ( result . getValue ( Win32 _ DiskDrive _ Values . CAPTION , i ) ) ; 
 + / / Capabilities are represented by a SAFEARRAY , this not supported 
 + / / in the simplified API 
 + assertNull ( result . getValue ( Win32 _ DiskDrive _ Values . CAPABILITIES , i ) ) ; 
 + } 
 + } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
