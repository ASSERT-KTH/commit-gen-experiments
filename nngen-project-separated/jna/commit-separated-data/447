BLEU SCORE: 0.020943469770777077

TEST MSG: enable android - x86 cross - builds
GENERATED MSG: android doesn ' t support shlib jar unpack ; place in a convenient location instead

TEST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index bddaab4 . . 7ce2a2c 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 10 , 7 + 10 , 7 @ @ <nl> <nl> Cross - compile by specifying - Dos . prefix = { name - arch } to ant <nl> ( cross - compile currently only configured / tested on w32ce - arm and <nl> - android - arm ) <nl> + android - arm / - x86 ) <nl> <nl> Use ANT _ OPTS = - Dskip - native to skip building native parts . <nl> Use ANT _ OPTS = - Dheadless to run tests headless <nl> @ @ - 170 , 6 + 170 , 7 @ @ <nl> < condition property = " vmopt . arch " value = " $ { vm . 64 } " else = " $ { vm . 32 } " > <nl> < and > <nl> < not > < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " trim = " true " / > < / not > <nl> + < not > < equals arg1 = " $ { os . prefix } " arg2 = " android - x86 " trim = " true " / > < / not > <nl> < or > <nl> < equals arg1 = " $ { sun . arch . data . model } " arg2 = " 64 " trim = " true " / > <nl> < equals arg1 = " $ { com . ibm . vm . bitmode } " arg2 = " 64 " trim = " true " / > <nl> @ @ - 549 , 6 + 550 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - sparc . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - sparcv9 . jar " overwrite = " true " / > <nl> < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / android - arm . jar " overwrite = " true " / > <nl> + < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / android - x86 . jar " overwrite = " true " / > <nl> < delete failOnError = " false " includeEmptyDirs = " true " > <nl> < fileset dir = " $ { build . native } " includes = " * . o , * jnidispatch * " / > <nl> < / delete > <nl> @ @ - 607 , 7 + 609 , 10 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < equals arg1 = " $ { os . prefix } " arg2 = " w32ce - arm " / > <nl> < / condition > <nl> < condition property = " make . OS " value = " OS = android " > <nl> - < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > <nl> + < or > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " android - x86 " / > <nl> + < / or > <nl> < / condition > <nl> < property name = " make . OS " value = " IGNORE = " / > <nl> < ! - - Ensure Makefile ARCH property properly set - - > <nl> @ @ - 617 , 6 + 622 , 9 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < condition property = " ARCH " value = " arm " > <nl> < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > <nl> < / condition > <nl> + < condition property = " ARCH " value = " x86 " > <nl> + < equals arg1 = " $ { os . prefix } " arg2 = " android - x86 " / > <nl> + < / condition > <nl> < condition property = " ARCH " value = " ppc " > <nl> < equals arg1 = " $ { os . prefix } " arg2 = " aix - ppc " / > <nl> < / condition > <nl> @ @ - 865 , 7 + 873 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < fail if = " testfailure " unless = " clover " > One or more tests failed < / fail > <nl> < / target > <nl> <nl> - < target name = " contrib - test " depends = " contrib - jars , compile - tests " > <nl> + < target name = " test - contrib " depends = " compile - tests , contrib - jars " > <nl> < subant target = " test " failonerror = " true " inheritall = " true " inheritrefs = " true " > <nl> < property name = " file . reference . jna . build " location = " $ { build } " / > <nl> < property name = " file . reference . jna . jar " location = " $ { build } / $ { jar } " / > <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index f9b5534 . . 408acb9 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 16 , 7 + 16 , 7 @ @ <nl> # Solaris ( i386 / amd64 / sparc / sparcv9 ) <nl> # AIX ( ppc / ppc64 ) <nl> # FreeBSD / OpenBSD / NetBSD ( i386 / amd64 ) <nl> - # Android ( arm ) <nl> + # Android ( arm / x86 ) <nl> # <nl> # Built , but with outstanding bugs ( not necessarily within JNA ) : <nl> # <nl> @ @ - 28 , 7 + 28 , 7 @ @ <nl> # <nl> # The android build requires the android SDK + NDK for cross - compilation ; <nl> # make the tools available on the path and compile with <nl> - # " ant - Dos . prefix = android - arm " . Put the NDK tools in the path and adjust <nl> + # " ant - Dos . prefix = android - arm ( - x86 ) " . Put the NDK tools in the path and adjust <nl> # NDK _ PLATFORM below or set it in your environment . <nl> # <nl> <nl> @ @ - 111 , 20 + 111 , 29 @ @ STRIP = strip - x <nl> # Android build ( cross - compile ) requires the android SDK + NDK . <nl> # Ensure the following tools are in your path and adjust NDK _ PLATFORM as needed <nl> ifeq ( $ ( OS ) , android ) <nl> - CC = arm - linux - androideabi - gcc <nl> - CPP = arm - linux - androideabi - cpp <nl> - LD = arm - linux - androideabi - gcc <nl> - RANLIB = arm - linux - androideabi - ranlib <nl> - STRIP = arm - linux - androideabi - strip - x <nl> + ifeq ( $ ( ARCH ) , arm ) <nl> + PREFIX = arm - linux - androideabi - <nl> + COPT + = - mthumb - interwork - march = armv5te - mtune = xscale - msoft - float - fstack - protector <nl> + HOST = arm - linux - eabi <nl> + else <nl> + PREFIX = i686 - android - linux - <nl> + COPT + = - march = i686 <nl> + HOST = i686 - linux <nl> + endif <nl> + CC = $ ( PREFIX ) gcc <nl> + CPP = $ ( PREFIX ) cpp <nl> + LD = $ ( PREFIX ) gcc <nl> + RANLIB = $ ( PREFIX ) ranlib <nl> + STRIP = $ ( PREFIX ) strip - x <nl> CDEFINES = - DNO _ JAWT - DNO _ WEAK _ GLOBALS - DFFI _ MMAP _ EXEC _ WRIT = 1 - DFFI _ MMAP _ EXEC _ SELINUX = 0 <nl> - COPT + = - fpic - mthumb - interwork - ffunction - sections - funwind - tables - fstack - protector - fno - short - enums - march = armv5te - mtune = xscale - msoft - float <nl> + COPT + = - fpic - ffunction - sections - funwind - tables - fno - short - enums <nl> NDK _ PLATFORM ? = / Developer / Applications / android - ndk - r7c / platforms / android - 14 <nl> JAVA _ INCLUDES = <nl> - CINCLUDES + = - I " $ ( NDK _ PLATFORM ) / arch - arm / usr / include " # - I / usr / include <nl> - LIBS = - nostdlib - L " $ ( NDK _ PLATFORM ) / arch - arm / usr / lib / " - lgcc - lc - ldl - lm <nl> + CINCLUDES + = - I " $ ( NDK _ PLATFORM ) / arch - $ ( ARCH ) / usr / include " # - I / usr / include <nl> + LIBS = - nostdlib - L " $ ( NDK _ PLATFORM ) / arch - $ ( ARCH ) / usr / lib / " - lgcc - lc - ldl - lm <nl> LDFLAGS + = - Wl , - shared , - Bsymbolic <nl> FFI _ ENV = CPP = " $ ( CPP ) " CC = " $ ( CC ) " CFLAGS = " $ ( COPT ) $ ( CDEBUG ) $ ( CINCLUDES ) " CPPFLAGS = " $ ( CDEFINES ) $ ( CINCLUDES ) " LIBS = " $ ( LIBS ) " RANLIB = " $ ( RANLIB ) " <nl> - FFI _ CONFIG = - - enable - static - - disable - shared - - with - pic = yes - - host = arm - linux - eabi <nl> + FFI _ CONFIG = - - enable - static - - disable - shared - - with - pic = yes - - host = $ ( HOST ) <nl> endif <nl> <nl> # W32CE build requires cegcc cross - compiler and phoneME JavaME implementation
NEAREST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index d4d8197 . . c87f14c 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 78 , 7 + 78 , 7 @ @ <nl> < equals arg1 = " $ { os . prefix } " arg2 = " w32ce - arm " / > <nl> < / condition > <nl> < property name = " test . compatibility " value = " 1 . 5 " / > <nl> - < property name = " dist - jar " value = " $ { dist } / jna . jar " / > <nl> + < property name = " dist - jar " value = " $ { dist } / $ { jar } " / > <nl> <nl> < ! - - Maven - - > <nl> < ! - - define Maven coordinates - - > <nl> @ @ - 697 , 7 + 697 , 7 @ @ osname = macos <nl> < fileset dir = " $ { build . native } " includes = " * jnidispatch . * " / > <nl> < / jar > <nl> < signjar alias = " jna " keystore = " jna . keystore " storepass = " jnadev " lazy = " true " > <nl> - < fileset dir = " $ { build } / jws " includes = " jna . jar , jna - test . jar , junit . jar , jnidispatch . jar , clover . jar " / > <nl> + < fileset dir = " $ { build } / jws " includes = " $ { jar } , $ { testjar } , junit . jar , jnidispatch . jar , clover . jar " / > <nl> < / signjar > <nl> < / target > <nl> <nl> @ @ - 715 , 10 + 715 , 10 @ @ osname = macos <nl> < property name = " shared " value = " shared " / > <nl> < ! - - w32ce arm testing - - > <nl> < jar jarfile = " $ { shared } / test . jar " > <nl> - < zipfileset src = " $ { build } / jna . jar " / > <nl> - < zipfileset src = " $ { build } / jna - test . jar " / > <nl> + < zipfileset src = " $ { build } / $ { jar } " / > <nl> + < zipfileset src = " $ { build } / $ { testjar } " / > <nl> < / jar > <nl> - < copy todir = " $ { shared } " file = " $ { build } / jna . jar " / > <nl> + < copy todir = " $ { shared } " file = " $ { build } / $ { jar } " / > <nl> < copy todir = " $ { shared } " file = " $ { build . native } / jnidispatch . dll " / > <nl> < copy todir = " $ { shared } " file = " $ { build . native } / testlib . dll " / > <nl> < copy todir = " $ { shared } " file = " $ { build . native } / testlib2 . dll " / > <nl> @ @ - 884 , 6 + 884 , 7 @ @ osname = macos <nl> < fileset dir = " $ { contrib } / platform / dist " includes = " platform . jar " / > <nl> < fileset dir = " $ { lib . native } " > <nl> < include name = " * . jar " / > <nl> + < exclude name = " out - of - date . jar " / > <nl> < / fileset > <nl> < / copy > <nl> < copy todir = " $ { dist } / jnacontrib " flatten = " true " >

TEST DIFF:
diff - - git a / build . xml b / build . xml 
 index bddaab4 . . 7ce2a2c 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 10 , 7 + 10 , 7 @ @ 
 
 Cross - compile by specifying - Dos . prefix = { name - arch } to ant 
 ( cross - compile currently only configured / tested on w32ce - arm and 
 - android - arm ) 
 + android - arm / - x86 ) 
 
 Use ANT _ OPTS = - Dskip - native to skip building native parts . 
 Use ANT _ OPTS = - Dheadless to run tests headless 
 @ @ - 170 , 6 + 170 , 7 @ @ 
 < condition property = " vmopt . arch " value = " $ { vm . 64 } " else = " $ { vm . 32 } " > 
 < and > 
 < not > < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " trim = " true " / > < / not > 
 + < not > < equals arg1 = " $ { os . prefix } " arg2 = " android - x86 " trim = " true " / > < / not > 
 < or > 
 < equals arg1 = " $ { sun . arch . data . model } " arg2 = " 64 " trim = " true " / > 
 < equals arg1 = " $ { com . ibm . vm . bitmode } " arg2 = " 64 " trim = " true " / > 
 @ @ - 549 , 6 + 550 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc 
 < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - sparc . jar " overwrite = " true " / > 
 < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / sunos - sparcv9 . jar " overwrite = " true " / > 
 < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / android - arm . jar " overwrite = " true " / > 
 + < copy file = " $ { lib . native } / out - of - date . jar " tofile = " $ { lib . native } / android - x86 . jar " overwrite = " true " / > 
 < delete failOnError = " false " includeEmptyDirs = " true " > 
 < fileset dir = " $ { build . native } " includes = " * . o , * jnidispatch * " / > 
 < / delete > 
 @ @ - 607 , 7 + 609 , 10 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc 
 < equals arg1 = " $ { os . prefix } " arg2 = " w32ce - arm " / > 
 < / condition > 
 < condition property = " make . OS " value = " OS = android " > 
 - < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > 
 + < or > 
 + < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > 
 + < equals arg1 = " $ { os . prefix } " arg2 = " android - x86 " / > 
 + < / or > 
 < / condition > 
 < property name = " make . OS " value = " IGNORE = " / > 
 < ! - - Ensure Makefile ARCH property properly set - - > 
 @ @ - 617 , 6 + 622 , 9 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc 
 < condition property = " ARCH " value = " arm " > 
 < equals arg1 = " $ { os . prefix } " arg2 = " android - arm " / > 
 < / condition > 
 + < condition property = " ARCH " value = " x86 " > 
 + < equals arg1 = " $ { os . prefix } " arg2 = " android - x86 " / > 
 + < / condition > 
 < condition property = " ARCH " value = " ppc " > 
 < equals arg1 = " $ { os . prefix } " arg2 = " aix - ppc " / > 
 < / condition > 
 @ @ - 865 , 7 + 873 , 7 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc 
 < fail if = " testfailure " unless = " clover " > One or more tests failed < / fail > 
 < / target > 
 
 - < target name = " contrib - test " depends = " contrib - jars , compile - tests " > 
 + < target name = " test - contrib " depends = " compile - tests , contrib - jars " > 
 < subant target = " test " failonerror = " true " inheritall = " true " inheritrefs = " true " > 
 < property name = " file . reference . jna . build " location = " $ { build } " / > 
 < property name = " file . reference . jna . jar " location = " $ { build } / $ { jar } " / > 
 diff - - git a / native / Makefile b / native / Makefile 
 index f9b5534 . . 408acb9 100644 
 - - - a / native / Makefile 
 + + + b / native / Makefile 
 @ @ - 16 , 7 + 16 , 7 @ @ 
 # Solaris ( i386 / amd64 / sparc / sparcv9 ) 
 # AIX ( ppc / ppc64 ) 
 # FreeBSD / OpenBSD / NetBSD ( i386 / amd64 ) 
 - # Android ( arm ) 
 + # Android ( arm / x86 ) 
 # 
 # Built , but with outstanding bugs ( not necessarily within JNA ) : 
 # 
 @ @ - 28 , 7 + 28 , 7 @ @ 
 # 
 # The android build requires the android SDK + NDK for cross - compilation ; 
 # make the tools available on the path and compile with 
 - # " ant - Dos . prefix = android - arm " . Put the NDK tools in the path and adjust 
 + # " ant - Dos . prefix = android - arm ( - x86 ) " . Put the NDK tools in the path and adjust 
 # NDK _ PLATFORM below or set it in your environment . 
 # 
 
 @ @ - 111 , 20 + 111 , 29 @ @ STRIP = strip - x 
 # Android build ( cross - compile ) requires the android SDK + NDK . 
 # Ensure the following tools are in your path and adjust NDK _ PLATFORM as needed 
 ifeq ( $ ( OS ) , android ) 
 - CC = arm - linux - androideabi - gcc 
 - CPP = arm - linux - androideabi - cpp 
 - LD = arm - linux - androideabi - gcc 
 - RANLIB = arm - linux - androideabi - ranlib 
 - STRIP = arm - linux - androideabi - strip - x 
 + ifeq ( $ ( ARCH ) , arm ) 
 + PREFIX = arm - linux - androideabi - 
 + COPT + = - mthumb - interwork - march = armv5te - mtune = xscale - msoft - float - fstack - protector 
 + HOST = arm - linux - eabi 
 + else 
 + PREFIX = i686 - android - linux - 
 + COPT + = - march = i686 
 + HOST = i686 - linux 
 + endif 
 + CC = $ ( PREFIX ) gcc 
 + CPP = $ ( PREFIX ) cpp 
 + LD = $ ( PREFIX ) gcc 
 + RANLIB = $ ( PREFIX ) ranlib 
 + STRIP = $ ( PREFIX ) strip - x 
 CDEFINES = - DNO _ JAWT - DNO _ WEAK _ GLOBALS - DFFI _ MMAP _ EXEC _ WRIT = 1 - DFFI _ MMAP _ EXEC _ SELINUX = 0 
 - COPT + = - fpic - mthumb - interwork - ffunction - sections - funwind - tables - fstack - protector - fno - short - enums - march = armv5te - mtune = xscale - msoft - float 
 + COPT + = - fpic - ffunction - sections - funwind - tables - fno - short - enums 
 NDK _ PLATFORM ? = / Developer / Applications / android - ndk - r7c / platforms / android - 14 
 JAVA _ INCLUDES = 
 - CINCLUDES + = - I " $ ( NDK _ PLATFORM ) / arch - arm / usr / include " # - I / usr / include 
 - LIBS = - nostdlib - L " $ ( NDK _ PLATFORM ) / arch - arm / usr / lib / " - lgcc - lc - ldl - lm 
 + CINCLUDES + = - I " $ ( NDK _ PLATFORM ) / arch - $ ( ARCH ) / usr / include " # - I / usr / include 
 + LIBS = - nostdlib - L " $ ( NDK _ PLATFORM ) / arch - $ ( ARCH ) / usr / lib / " - lgcc - lc - ldl - lm 
 LDFLAGS + = - Wl , - shared , - Bsymbolic 
 FFI _ ENV = CPP = " $ ( CPP ) " CC = " $ ( CC ) " CFLAGS = " $ ( COPT ) $ ( CDEBUG ) $ ( CINCLUDES ) " CPPFLAGS = " $ ( CDEFINES ) $ ( CINCLUDES ) " LIBS = " $ ( LIBS ) " RANLIB = " $ ( RANLIB ) " 
 - FFI _ CONFIG = - - enable - static - - disable - shared - - with - pic = yes - - host = arm - linux - eabi 
 + FFI _ CONFIG = - - enable - static - - disable - shared - - with - pic = yes - - host = $ ( HOST ) 
 endif 
 
 # W32CE build requires cegcc cross - compiler and phoneME JavaME implementation

NEAREST DIFF:
diff - - git a / build . xml b / build . xml 
 index d4d8197 . . c87f14c 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 78 , 7 + 78 , 7 @ @ 
 < equals arg1 = " $ { os . prefix } " arg2 = " w32ce - arm " / > 
 < / condition > 
 < property name = " test . compatibility " value = " 1 . 5 " / > 
 - < property name = " dist - jar " value = " $ { dist } / jna . jar " / > 
 + < property name = " dist - jar " value = " $ { dist } / $ { jar } " / > 
 
 < ! - - Maven - - > 
 < ! - - define Maven coordinates - - > 
 @ @ - 697 , 7 + 697 , 7 @ @ osname = macos 
 < fileset dir = " $ { build . native } " includes = " * jnidispatch . * " / > 
 < / jar > 
 < signjar alias = " jna " keystore = " jna . keystore " storepass = " jnadev " lazy = " true " > 
 - < fileset dir = " $ { build } / jws " includes = " jna . jar , jna - test . jar , junit . jar , jnidispatch . jar , clover . jar " / > 
 + < fileset dir = " $ { build } / jws " includes = " $ { jar } , $ { testjar } , junit . jar , jnidispatch . jar , clover . jar " / > 
 < / signjar > 
 < / target > 
 
 @ @ - 715 , 10 + 715 , 10 @ @ osname = macos 
 < property name = " shared " value = " shared " / > 
 < ! - - w32ce arm testing - - > 
 < jar jarfile = " $ { shared } / test . jar " > 
 - < zipfileset src = " $ { build } / jna . jar " / > 
 - < zipfileset src = " $ { build } / jna - test . jar " / > 
 + < zipfileset src = " $ { build } / $ { jar } " / > 
 + < zipfileset src = " $ { build } / $ { testjar } " / > 
 < / jar > 
 - < copy todir = " $ { shared } " file = " $ { build } / jna . jar " / > 
 + < copy todir = " $ { shared } " file = " $ { build } / $ { jar } " / > 
 < copy todir = " $ { shared } " file = " $ { build . native } / jnidispatch . dll " / > 
 < copy todir = " $ { shared } " file = " $ { build . native } / testlib . dll " / > 
 < copy todir = " $ { shared } " file = " $ { build . native } / testlib2 . dll " / > 
 @ @ - 884 , 6 + 884 , 7 @ @ osname = macos 
 < fileset dir = " $ { contrib } / platform / dist " includes = " platform . jar " / > 
 < fileset dir = " $ { lib . native } " > 
 < include name = " * . jar " / > 
 + < exclude name = " out - of - date . jar " / > 
 < / fileset > 
 < / copy > 
 < copy todir = " $ { dist } / jnacontrib " flatten = " true " >
