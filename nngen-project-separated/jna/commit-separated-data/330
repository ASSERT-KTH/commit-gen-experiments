BLEU SCORE: 0.035802380724744266

TEST MSG: XID is always 32 bits
GENERATED MSG: Fix X11 mappings for 64 - bit

TEST DIFF (one line): diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> index 1887cb7 . . 3b32b73 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> @ @ - 17 , 6 + 17 , 7 @ @ import java . util . List ; <nl> <nl> import com . sun . jna . Callback ; <nl> import com . sun . jna . FromNativeContext ; <nl> + import com . sun . jna . IntegerType ; <nl> import com . sun . jna . Library ; <nl> import com . sun . jna . Native ; <nl> import com . sun . jna . NativeLong ; <nl> @ @ - 32 , 17 + 33 , 19 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> / * * Definition ( incomplete ) of the X library . * / <nl> public interface X11 extends Library { <nl> <nl> - class VisualID extends NativeLong { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> - 	 	 public VisualID ( ) { } <nl> - public VisualID ( long value ) { super ( value ) ; } <nl> + class VisualID extends IntegerType { <nl> + private static final long serialVersionUID = 1L ; <nl> + public static final int SIZE = 4 ; <nl> + public VisualID ( ) { this ( 0 ) ; } <nl> + public VisualID ( long value ) { super ( SIZE , value , true ) ; } <nl> } <nl> <nl> - class XID extends NativeLong { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> - 	 	 public static final XID None = null ; <nl> + class XID extends IntegerType { <nl> + private static final long serialVersionUID = 1L ; <nl> + public static final XID None = null ; <nl> + public static final int SIZE = 4 ; <nl> public XID ( ) { this ( 0 ) ; } <nl> - public XID ( long id ) { super ( id ) ; } <nl> + public XID ( long id ) { super ( SIZE , id , true ) ; } <nl> protected boolean isNone ( Object o ) { <nl> return o = = null <nl> | | ( o instanceof Number <nl> @ @ - 58 , 7 + 61 , 7 @ @ public interface X11 extends Library { <nl> } <nl> } <nl> class Atom extends XID { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> + private static final long serialVersionUID = 1L ; <nl> public static final Atom None = null ; <nl> public Atom ( ) { } <nl> public Atom ( long id ) { super ( id ) ; } <nl> @ @ - 145 , 7 + 148 , 7 @ @ public interface X11 extends Library { <nl> class AtomByReference extends ByReference { <nl> public AtomByReference ( ) { super ( XID . SIZE ) ; } <nl> public Atom getValue ( ) { <nl> - NativeLong value = getPointer ( ) . getNativeLong ( 0 ) ; <nl> + int value = getPointer ( ) . getInt ( 0 ) ; <nl> return ( Atom ) new Atom ( ) . fromNative ( value , null ) ; <nl> } <nl> } <nl> @ @ - 194 , 7 + 197 , 7 @ @ public interface X11 extends Library { <nl> } <nl> } <nl> class Drawable extends XID { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> + private static final long serialVersionUID = 1L ; <nl> public static final Drawable None = null ; <nl> public Drawable ( ) { } <nl> public Drawable ( long id ) { super ( id ) ; } <nl> @ @ - 205 , 8 + 208 , 8 @ @ public interface X11 extends Library { <nl> } <nl> } <nl> class Window extends Drawable { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> - 	 	 public static final Window None = null ; <nl> + private static final long serialVersionUID = 1L ; <nl> + public static final Window None = null ; <nl> public Window ( ) { } <nl> public Window ( long id ) { super ( id ) ; } <nl> public Object fromNative ( Object nativeValue , FromNativeContext context ) { <nl> @ @ - 218 , 14 + 221 , 13 @ @ public interface X11 extends Library { <nl> class WindowByReference extends ByReference { <nl> public WindowByReference ( ) { super ( XID . SIZE ) ; } <nl> public Window getValue ( ) { <nl> - NativeLong value = getPointer ( ) . getNativeLong ( 0 ) ; <nl> - return value . longValue ( ) = = X11 . None <nl> - ? Window . None : new Window ( value . longValue ( ) ) ; <nl> + int value = getPointer ( ) . getInt ( 0 ) ; <nl> + return value = = 0 ? Window . None : new Window ( value ) ; <nl> } <nl> } <nl> class Pixmap extends Drawable { <nl> - 	 	 private static final long serialVersionUID = 1L ; <nl> - 	 	 public static final Pixmap None = null ; <nl> + private static final long serialVersionUID = 1L ; <nl> + public static final Pixmap None = null ; <nl> public Pixmap ( ) { } <nl> public Pixmap ( long id ) { super ( id ) ; } <nl> public Object fromNative ( Object nativeValue , FromNativeContext context ) { <nl> @ @ - 238 , 13 + 240 , 13 @ @ public interface X11 extends Library { <nl> class Display extends PointerType { } <nl> / / TODO : define structure <nl> class Visual extends PointerType { <nl> - public NativeLong getVisualID ( ) { <nl> + public int getVisualID ( ) { <nl> if ( getPointer ( ) ! = null ) <nl> - return getPointer ( ) . getNativeLong ( Native . POINTER _ SIZE ) ; <nl> - return new NativeLong ( 0 ) ; <nl> + return getPointer ( ) . getInt ( Native . POINTER _ SIZE ) ; <nl> + return 0 ; <nl> } <nl> public String toString ( ) { <nl> - return " Visual : VisualID = 0x " + Long . toHexString ( getVisualID ( ) . longValue ( ) ) ; <nl> + return " Visual : VisualID = 0x " + Long . toHexString ( getVisualID ( ) ) ; <nl> } <nl> } <nl> / / TODO : define structure <nl> @ @ - 284 , 10 + 286 , 11 @ @ public interface X11 extends Library { <nl> return Arrays . asList ( new String [ ] { " red " , " redMask " , " green " , " greenMask " , " blue " , " blueMask " , " alpha " , " alphaMask " } ) ; <nl> } <nl> } <nl> - class PictFormat extends NativeLong { <nl> + class PictFormat extends IntegerType { <nl> private static final long serialVersionUID = 1L ; <nl> - public PictFormat ( long value ) { super ( value ) ; } <nl> - public PictFormat ( ) { } <nl> + public static final int SIZE = 4 ; <nl> + public PictFormat ( long value ) { super ( SIZE , value , true ) ; } <nl> + public PictFormat ( ) { this ( 0 ) ; } <nl> } <nl> class XRenderPictFormat extends Structure { <nl> public PictFormat id ;
NEAREST DIFF (one line): diff - - git a / libffi / ChangeLog . libffi b / libffi / ChangeLog . libffi <nl> index 03f40f5 . . 5b4b667 100644 <nl> - - - a / libffi / ChangeLog . libffi <nl> + + + b / libffi / ChangeLog . libffi <nl> @ @ - 1 , 3 + 1 , 13 @ @ <nl> + 2008 - 02 - 14 Anthony Green < green @ redhat . com > <nl> + <nl> + 	 * include / Makefile . am ( includesdir ) : Install headers under libdir . <nl> + 	 ( pkgconfigdir ) : Define . Install libffi . pc . <nl> + 	 * include / Makefile . in : Rebuilt . <nl> + 	 * libffi . pc . in : Create . <nl> + 	 * libtool - version : Increment CURRENT <nl> + 	 * configure . ac : Add libffi . pc . in <nl> + 	 * configure : Rebuilt . <nl> + <nl> 2008 - 02 - 03 Anthony Green < green @ redhat . com > <nl> <nl> 	 * include / Makefile . am ( includesdir ) : Fix header install with <nl> diff - - git a / libffi / Makefile . am b / libffi / Makefile . am <nl> index e64ec9c . . 4d30ce6 100644 <nl> - - - a / libffi / Makefile . am <nl> + + + b / libffi / Makefile . am <nl> @ @ - 83 , 6 + 83 , 9 @ @ libffi _ la _ SOURCES = src / debug . c src / prep _ cif . c src / types . c \ <nl> 	 	 src / raw _ api . c src / java _ raw _ api . c src / closures . c <nl> # include / ffi _ common . h include / ffitarget . h <nl> <nl> + pkgconfigdir = $ ( libdir ) / pkgconfig <nl> + pkgconfig _ DATA = libffi . pc <nl> + <nl> nodist _ libffi _ la _ SOURCES = <nl> <nl> if MIPS <nl> diff - - git a / libffi / Makefile . in b / libffi / Makefile . in <nl> index fe22db7 . . 5c3e892 100644 <nl> - - - a / libffi / Makefile . in <nl> + + + b / libffi / Makefile . in <nl> @ @ - 14 , 6 + 14 , 7 @ @ <nl> <nl> @ SET _ MAKE @ <nl> <nl> + <nl> VPATH = @ srcdir @ <nl> pkgdatadir = $ ( datadir ) / @ PACKAGE @ <nl> pkglibdir = $ ( libdir ) / @ PACKAGE @ <nl> @ @ - 58 , 9 + 59 , 10 @ @ target _ triplet = @ target @ <nl> subdir = . <nl> DIST _ COMMON = README $ ( am _ _ configure _ deps ) $ ( srcdir ) / Makefile . am \ <nl> 	 $ ( srcdir ) / Makefile . in $ ( srcdir ) / fficonfig . h . in \ <nl> - 	 $ ( top _ srcdir ) / configure ChangeLog compile config . guess \ <nl> - 	 config . sub depcomp install - sh ltcf - c . sh ltcf - cxx . sh \ <nl> - 	 ltcf - gcj . sh ltconfig ltmain . sh missing mkinstalldirs <nl> + 	 $ ( srcdir ) / libffi . pc . in $ ( top _ srcdir ) / configure ChangeLog TODO \ <nl> + 	 compile config . guess config . sub depcomp install - sh ltcf - c . sh \ <nl> + 	 ltcf - cxx . sh ltcf - gcj . sh ltconfig ltmain . sh missing \ <nl> + 	 mkinstalldirs <nl> ACLOCAL _ M4 = $ ( top _ srcdir ) / aclocal . m4 <nl> am _ _ aclocal _ m4 _ deps = $ ( top _ srcdir ) / acinclude . m4 \ <nl> 	 $ ( top _ srcdir ) / configure . ac <nl> @ @ - 70 , 14 + 72 , 15 @ @ am _ _ CONFIG _ DISTCLEAN _ FILES = config . status config . cache config . log \ <nl> configure . lineno config . status . lineno <nl> mkinstalldirs = $ ( SHELL ) $ ( top _ srcdir ) / mkinstalldirs <nl> CONFIG _ HEADER = fficonfig . h <nl> - CONFIG _ CLEAN _ FILES = <nl> + CONFIG _ CLEAN _ FILES = libffi . pc <nl> am _ _ vpath _ adj _ setup = srcdirstrip = ` echo " $ ( srcdir ) " | sed ' s | . | . | g ' ` ; <nl> am _ _ vpath _ adj = case $ $ p in \ <nl> $ ( srcdir ) / * ) f = ` echo " $ $ p " | sed " s | ^ $ $ srcdirstrip / | | " ` ; ; \ <nl> * ) f = $ $ p ; ; \ <nl> esac ; <nl> am _ _ strip _ dir = ` echo $ $ p | sed - e ' s | ^ . * / | | ' ` ; <nl> - am _ _ installdirs = " $ ( DESTDIR ) $ ( toolexeclibdir ) " <nl> + am _ _ installdirs = " $ ( DESTDIR ) $ ( toolexeclibdir ) " \ <nl> + 	 " $ ( DESTDIR ) $ ( pkgconfigdir ) " <nl> toolexeclibLTLIBRARIES _ INSTALL = $ ( INSTALL ) <nl> LTLIBRARIES = $ ( noinst _ LTLIBRARIES ) $ ( toolexeclib _ LTLIBRARIES ) <nl> libffi _ la _ LIBADD = <nl> @ @ - 175 , 6 + 178 , 8 @ @ RECURSIVE _ TARGETS = all - recursive check - recursive dvi - recursive \ <nl> 	 install - pdf - recursive install - ps - recursive install - recursive \ <nl> 	 installcheck - recursive installdirs - recursive pdf - recursive \ <nl> 	 ps - recursive uninstall - recursive <nl> + pkgconfigDATA _ INSTALL = $ ( INSTALL _ DATA ) <nl> + DATA = $ ( pkgconfig _ DATA ) <nl> RECURSIVE _ CLEAN _ TARGETS = mostlyclean - recursive clean - recursive 	 \ <nl> distclean - recursive maintainer - clean - recursive <nl> ETAGS = etags <nl> @ @ - 386 , 6 + 391 , 8 @ @ libffi _ la _ SOURCES = src / debug . c src / prep _ cif . c src / types . c \ <nl> 	 	 src / raw _ api . c src / java _ raw _ api . c src / closures . c <nl> <nl> # include / ffi _ common . h include / ffitarget . h <nl> + pkgconfigdir = $ ( libdir ) / pkgconfig <nl> + pkgconfig _ DATA = libffi . pc <nl> nodist _ libffi _ la _ SOURCES = $ ( am _ _ append _ 1 ) $ ( am _ _ append _ 2 ) \ <nl> 	 $ ( am _ _ append _ 3 ) $ ( am _ _ append _ 4 ) $ ( am _ _ append _ 5 ) \ <nl> 	 $ ( am _ _ append _ 6 ) $ ( am _ _ append _ 7 ) $ ( am _ _ append _ 8 ) \ <nl> @ @ - 455 , 6 + 462 , 8 @ @ $ ( srcdir ) / fficonfig . h . in : @ MAINTAINER _ MODE _ TRUE @ $ ( am _ _ configure _ deps ) <nl> <nl> distclean - hdr : <nl> 	 - rm - f fficonfig . h stamp - h1 <nl> + libffi . pc : $ ( top _ builddir ) / config . status $ ( srcdir ) / libffi . pc . in <nl> + 	 cd $ ( top _ builddir ) & & $ ( SHELL ) . / config . status $ @ <nl> <nl> clean - noinstLTLIBRARIES : <nl> 	 - test - z " $ ( noinst _ LTLIBRARIES ) " | | rm - f $ ( noinst _ LTLIBRARIES ) <nl> @ @ - 923 , 6 + 932 , 23 @ @ clean - libtool : <nl> <nl> distclean - libtool : <nl> 	 - rm - f libtool <nl> + install - pkgconfigDATA : $ ( pkgconfig _ DATA ) <nl> + 	 @ $ ( NORMAL _ INSTALL ) <nl> + 	 test - z " $ ( pkgconfigdir ) " | | $ ( MKDIR _ P ) " $ ( DESTDIR ) $ ( pkgconfigdir ) " <nl> + 	 @ list = ' $ ( pkgconfig _ DATA ) ' ; for p in $ $ list ; do \ <nl> + 	 if test - f " $ $ p " ; then d = ; else d = " $ ( srcdir ) / " ; fi ; \ <nl> + 	 f = $ ( am _ _ strip _ dir ) \ <nl> + 	 echo " $ ( pkgconfigDATA _ INSTALL ) ' $ $ d $ $ p ' ' $ ( DESTDIR ) $ ( pkgconfigdir ) / $ $ f ' " ; \ <nl> + 	 $ ( pkgconfigDATA _ INSTALL ) " $ $ d $ $ p " " $ ( DESTDIR ) $ ( pkgconfigdir ) / $ $ f " ; \ <nl> + 	 done <nl> + <nl> + uninstall - pkgconfigDATA : <nl> + 	 @ $ ( NORMAL _ UNINSTALL ) <nl> + 	 @ list = ' $ ( pkgconfig _ DATA ) ' ; for p in $ $ list ; do \ <nl> + 	 f = $ ( am _ _ strip _ dir ) \ <nl> + 	 echo " rm - f ' $ ( DESTDIR ) $ ( pkgconfigdir ) / $ $ f ' " ; \ <nl> + 	 rm - f " $ ( DESTDIR ) $ ( pkgconfigdir ) / $ $ f " ; \ <nl> + 	 done <nl> <nl> # This directory ' s subdirectories are mostly independent ; you can cd <nl> # into them and run ` make ' without going through this Makefile . <nl> @ @ - 1199 , 10 + 1225 , 10 @ @ distcleancheck : distclean <nl> 	 exit 1 ; } > & 2 <nl> check - am : all - am <nl> check : check - recursive <nl> - all - am : Makefile $ ( LTLIBRARIES ) fficonfig . h <nl> + all - am : Makefile $ ( LTLIBRARIES ) $ ( DATA ) fficonfig . h <nl> installdirs : installdirs - recursive <nl> installdirs - am : <nl> - 	 for dir in " $ ( DESTDIR ) $ ( toolexeclibdir ) " ; do \ <nl> + 	 for dir in " $ ( DESTDIR ) $ ( toolexeclibdir ) " " $ ( DESTDIR ) $ ( pkgconfigdir ) " ; do \ <nl> 	 test - z " $ $ dir " | | $ ( MKDIR _ P ) " $ $ dir " ; \ <nl> 	 done <nl> install : install - recursive <nl> @ @ - 1283 , 7 + 1309 , 7 @ @ info : info - recursive <nl> <nl> info - am : <nl> <nl> - install - data - am : <nl> + install - data - am : install - pkgconfigDATA <nl> <nl> install - dvi : install - dvi - recursive <nl> <nl> @ @ - 1317 , 7 + 1343 , 7 @ @ ps : ps - recursive <nl> <nl> ps - am : <nl> <nl> - uninstall - am : uninstall - toolexeclibLTLIBRARIES <nl> + uninstall - am : uninstall - pkgconfigDATA uninstall - toolexeclibLTLIBRARIES <nl> <nl> . MAKE : $ ( RECURSIVE _ CLEAN _ TARGETS ) $ ( RECURSIVE _ TARGETS ) install - am \ <nl> 	 install - strip <nl> @ @ - 1333 , 13 + 1359 , 14 @ @ uninstall - am : uninstall - toolexeclibLTLIBRARIES <nl> 	 info - am install install - am install - data install - data - am \ <nl> 	 install - dvi install - dvi - am install - exec install - exec - am \ <nl> 	 install - html install - html - am install - info install - info - am \ <nl> - 	 install - man install - pdf install - pdf - am install - ps \ <nl> - 	 install - ps - am install - strip install - toolexeclibLTLIBRARIES \ <nl> - 	 installcheck installcheck - am installdirs installdirs - am \ <nl> - 	 maintainer - clean maintainer - clean - generic mostlyclean \ <nl> - 	 mostlyclean - compile mostlyclean - generic mostlyclean - libtool \ <nl> - 	 pdf pdf - am ps ps - am tags tags - recursive uninstall uninstall - am \ <nl> - 	 uninstall - toolexeclibLTLIBRARIES <nl> + 	 install - man install - pdf install - pdf - am install - pkgconfigDATA \ <nl> + 	 install - ps install - ps - am install - strip \ <nl> + 	 install - toolexeclibLTLIBRARIES installcheck installcheck - am \ <nl> + 	 installdirs installdirs - am maintainer - clean \ <nl> + 	 maintainer - clean - generic mostlyclean mostlyclean - compile \ <nl> + 	 mostlyclean - generic mostlyclean - libtool pdf pdf - am ps ps - am \ <nl> + 	 tags tags - recursive uninstall uninstall - am \ <nl> + 	 uninstall - pkgconfigDATA uninstall - toolexeclibLTLIBRARIES <nl> <nl> <nl> # No install - html or install - pdf support in automake yet <nl> diff - - git a / libffi / README b / libffi / README <nl> index f426c9d . . 56382bb 100644 <nl> - - - a / libffi / README <nl> + + + b / libffi / README <nl> @ @ - 1 , 40 + 1 , 35 @ @ <nl> - This directory contains the libffi package , which is not part of GCC but <nl> - shipped with GCC as convenience . <nl> - <nl> Status <nl> = = = = = = <nl> <nl> - libffi - 2 . 00 has not been released yet ! This is a development snapshot ! <nl> - <nl> - libffi - 1 . 20 was released on October 5 , 1998 . Check the libffi web <nl> - page for updates : < URL : http : / / sources . redhat . com / libffi / > . <nl> + libffi - 3 . 00 was released on February xx , 2008 . Check the libffi web <nl> + page for updates : < URL : http : / / sourceware . org / libffi / > . <nl> <nl> <nl> What is libffi ? <nl> = = = = = = = = = = = = = = = <nl> <nl> Compilers for high level languages generate code that follow certain <nl> - conventions . These conventions are necessary , in part , for separate <nl> - compilation to work . One such convention is the " calling <nl> - convention " . The " calling convention " is essentially a set of <nl> - assumptions made by the compiler about where function arguments will <nl> - be found on entry to a function . A " calling convention " also specifies <nl> - where the return value for a function is found . <nl> + conventions . These conventions are necessary , in part , for separate <nl> + compilation to work . One such convention is the " calling convention " . <nl> + The " calling convention " is a set of assumptions made by the compiler <nl> + about where function arguments will be found on entry to a function . <nl> + A " calling convention " also specifies where the return value for a <nl> + function is found . <nl> <nl> Some programs may not know at the time of compilation what arguments <nl> - are to be passed to a function . For instance , an interpreter may be <nl> + are to be passed to a function . For instance , an interpreter may be <nl> told at run - time about the number and types of arguments used to call <nl> - a given function . Libffi can be used in such programs to provide a <nl> + a given function . Libffi can be used in such programs to provide a <nl> bridge from the interpreter program to compiled code . <nl> <nl> The libffi library provides a portable , high level programming <nl> - interface to various calling conventions . This allows a programmer to <nl> + interface to various calling conventions . This allows a programmer to <nl> call any function specified by a call interface description at run <nl> - time . <nl> + time . <nl> <nl> - Ffi stands for Foreign Function Interface . A foreign function <nl> + FFI stands for Foreign Function Interface . A foreign function <nl> interface is the popular name for the interface that allows code <nl> - written in one language to call code written in another language . The <nl> + written in one language to call code written in another language . The <nl> libffi library really only provides the lowest , machine dependent <nl> layer of a fully featured foreign function interface . A layer must <nl> exist above libffi that handles type conversions for values passed <nl> @ @ - 120 , 7 + 115 , 7 @ @ call and that you know the number and types of arguments to pass it , <nl> as well as the return type of the function . <nl> <nl> The first thing you must do is create an ffi _ cif object that matches <nl> - the signature of the function you wish to call . The cif in ffi _ cif <nl> + the signature of the function you wish to call . The ` cif ' in ffi _ cif <nl> stands for Call InterFace . To prepare a call interface object , use the <nl> following function : <nl> <nl> @ @ - 375 , 6 + 370 , 9 @ @ arguments ' test ) . <nl> History <nl> = = = = = = = <nl> <nl> + 3 . 00 Feb - XX - 08 <nl> + Many changes , mostly thanks to the GCC project . <nl> + <nl> 1 . 20 Oct - 5 - 98 <nl> 	 Raffaele Sena produces ARM port . <nl> <nl> diff - - git a / libffi / configure b / libffi / configure <nl> index 9fd638a . . 8a2bbf9 100755 <nl> - - - a / libffi / configure <nl> + + + b / libffi / configure <nl> @ @ - 22695 , 7 + 22695 , 7 @ @ ac _ config _ commands = " $ ac _ config _ commands src " <nl> ac _ config _ links = " $ ac _ config _ links include / ffitarget . h : src / $ TARGETDIR / ffitarget . h " <nl> <nl> <nl> - ac _ config _ files = " $ ac _ config _ files include / Makefile include / ffi . h Makefile testsuite / Makefile " <nl> + ac _ config _ files = " $ ac _ config _ files include / Makefile include / ffi . h Makefile testsuite / Makefile libffi . pc " <nl> <nl> <nl> cat > confcache < < \ _ ACEOF <nl> @ @ - 23478 , 6 + 23478 , 7 @ @ do <nl> " include / ffi . h " ) CONFIG _ FILES = " $ CONFIG _ FILES include / ffi . h " ; ; <nl> " Makefile " ) CONFIG _ FILES = " $ CONFIG _ FILES Makefile " ; ; <nl> " testsuite / Makefile " ) CONFIG _ FILES = " $ CONFIG _ FILES testsuite / Makefile " ; ; <nl> + " libffi . pc " ) CONFIG _ FILES = " $ CONFIG _ FILES libffi . pc " ; ; <nl> <nl> * ) { { echo " $ as _ me : $ LINENO : error : invalid argument : $ ac _ config _ target " > & 5 <nl> echo " $ as _ me : error : invalid argument : $ ac _ config _ target " > & 2 ; } <nl> diff - - git a / libffi / configure . ac b / libffi / configure . ac <nl> index 7c9713d . . fd9e4b8 100644 <nl> - - - a / libffi / configure . ac <nl> + + + b / libffi / configure . ac <nl> @ @ - 352 , 6 + 352 , 6 @ @ test - d src / $ TARGETDIR | | mkdir src / $ TARGETDIR <nl> <nl> AC _ CONFIG _ LINKS ( include / ffitarget . h : src / $ TARGETDIR / ffitarget . h ) <nl> <nl> - AC _ CONFIG _ FILES ( include / Makefile include / ffi . h Makefile testsuite / Makefile ) <nl> + AC _ CONFIG _ FILES ( include / Makefile include / ffi . h Makefile testsuite / Makefile libffi . pc ) <nl> <nl> AC _ OUTPUT <nl> diff - - git a / libffi / include / Makefile . am b / libffi / include / Makefile . am <nl> index 03956af . . abdba52 100644 <nl> - - - a / libffi / include / Makefile . am <nl> + + + b / libffi / include / Makefile . am <nl> @ @ - 5 , 5 + 5 , 5 @ @ AUTOMAKE _ OPTIONS = foreign <nl> DISTCLEANFILES = ffitarget . h <nl> EXTRA _ DIST = ffi . h . in ffi _ common . h <nl> <nl> - includesdir = $ ( includedir ) <nl> + includesdir = $ ( libdir ) / @ PACKAGE _ NAME @ - @ PACKAGE _ VERSION @ / include <nl> includes _ HEADERS = ffi . h ffitarget . h <nl> diff - - git a / libffi / include / Makefile . in b / libffi / include / Makefile . in <nl> index e85e68b . . 1c240f3 100644 <nl> - - - a / libffi / include / Makefile . in <nl> + + + b / libffi / include / Makefile . in <nl> @ @ - 182 , 7 + 182 , 7 @ @ top _ srcdir = @ top _ srcdir @ <nl> AUTOMAKE _ OPTIONS = foreign <nl> DISTCLEANFILES = ffitarget . h <nl> EXTRA _ DIST = ffi . h . in ffi _ common . h <nl> - includesdir = $ ( includedir ) <nl> + includesdir = $ ( libdir ) / @ PACKAGE _ NAME @ - @ PACKAGE _ VERSION @ / include <nl> includes _ HEADERS = ffi . h ffitarget . h <nl> all : all - am <nl> <nl> diff - - git a / libffi / libffi . pc . in b / libffi / libffi . pc . in <nl> new file mode 100644 <nl> index 0000000 . . 10c910a <nl> - - - / dev / null <nl> + + + b / libffi / libffi . pc . in <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + prefix = @ prefix @ <nl> + exec _ prefix = @ exec _ prefix @ <nl> + libdir = @ libdir @ / @ PACKAGE _ NAME @ - @ PACKAGE _ VERSION @ <nl> + includedir = $ { libdir } / @ PACKAGE _ NAME @ - @ PACKAGE _ VERSION @ / include <nl> + <nl> + Name : libffi <nl> + Description : Library supporting Foreign Function Interfaces <nl> + Version : 3 . 0 <nl> + Libs : - lffi <nl> + Cflags : - I $ { includedir } <nl> diff - - git a / libffi / libtool - version b / libffi / libtool - version <nl> index 6753286 . . 71a31c4 100644 <nl> - - - a / libffi / libtool - version <nl> + + + b / libffi / libtool - version <nl> @ @ - 3 , 4 + 3 , 4 @ @ <nl> # a separate file so that version updates don ' t involve re - running <nl> # automake . <nl> # CURRENT : REVISION : AGE <nl> - 4 : 1 : 0 <nl> + 5 : 1 : 0

TEST DIFF:
diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java 
 index 1887cb7 . . 3b32b73 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java 
 @ @ - 17 , 6 + 17 , 7 @ @ import java . util . List ; 
 
 import com . sun . jna . Callback ; 
 import com . sun . jna . FromNativeContext ; 
 + import com . sun . jna . IntegerType ; 
 import com . sun . jna . Library ; 
 import com . sun . jna . Native ; 
 import com . sun . jna . NativeLong ; 
 @ @ - 32 , 17 + 33 , 19 @ @ import com . sun . jna . ptr . PointerByReference ; 
 / * * Definition ( incomplete ) of the X library . * / 
 public interface X11 extends Library { 
 
 - class VisualID extends NativeLong { 
 - 	 	 private static final long serialVersionUID = 1L ; 
 - 	 	 public VisualID ( ) { } 
 - public VisualID ( long value ) { super ( value ) ; } 
 + class VisualID extends IntegerType { 
 + private static final long serialVersionUID = 1L ; 
 + public static final int SIZE = 4 ; 
 + public VisualID ( ) { this ( 0 ) ; } 
 + public VisualID ( long value ) { super ( SIZE , value , true ) ; } 
 } 
 
 - class XID extends NativeLong { 
 - 	 	 private static final long serialVersionUID = 1L ; 
 - 	 	 public static final XID None = null ; 
 + class XID extends IntegerType { 
 + private static final long serialVersionUID = 1L ; 
 + public static final XID None = null ; 
 + public static final int SIZE = 4 ; 
 public XID ( ) { this ( 0 ) ; } 
 - public XID ( long id ) { super ( id ) ; } 
 + public XID ( long id ) { super ( SIZE , id , true ) ; } 
 protected boolean isNone ( Object o ) { 
 return o = = null 
 | | ( o instanceof Number 
 @ @ - 58 , 7 + 61 , 7 @ @ public interface X11 extends Library { 
 } 
 } 
 class Atom extends XID { 
 - 	 	 private static final long serialVersionUID = 1L ; 
 + private static final long serialVersionUID = 1L ; 
 public static final Atom None = null ; 
 public Atom ( ) { } 
 public Atom ( long id ) { super ( id ) ; } 
 @ @ - 145 , 7 + 148 , 7 @ @ public interface X11 extends Library { 
 class AtomByReference extends ByReference { 
 public AtomByReference ( ) { super ( XID . SIZE ) ; } 
 public Atom getValue ( ) { 
 - NativeLong value = getPointer ( ) . getNativeLong ( 0 ) ; 
 + int value = getPointer ( ) . getInt ( 0 ) ; 
 return ( Atom ) new Atom ( ) . fromNative ( value , null ) ; 
 } 
 } 
 @ @ - 194 , 7 + 197 , 7 @ @ public interface X11 extends Library { 
 } 
 } 
 class Drawable extends XID { 
 - 	 	 private static final long serialVersionUID = 1L ; 
 + private static final long serialVersionUID = 1L ; 
 public static final Drawable None = null ; 
 public Drawable ( ) { } 
 public Drawable ( long id ) { super ( id ) ; } 
 @ @ - 205 , 8 + 208 , 8 @ @ public interface X11 extends Library { 
 } 
 } 
 class Window extends Drawable { 
 - 	 	 private static final long serialVersionUID = 1L ; 
 - 	 	 public static final Window None = null ; 
 + private static final long serialVersionUID = 1L ; 
 + public static final Window None = null ; 
 public Window ( ) { } 
 public Window ( long id ) { super ( id ) ; } 
 public Object fromNative ( Object nativeValue , FromNativeContext context ) { 
 @ @ - 218 , 14 + 221 , 13 @ @ public interface X11 extends Library { 
 class WindowByReference extends ByReference { 
 public WindowByReference ( ) { super ( XID . SIZE ) ; } 
 public Window getValue ( ) { 
 - NativeLong value = getPointer ( ) . getNativeLong ( 0 ) ; 
 - return value . longValue ( ) = = X11 . None 
 - ? Window . None : new Window ( value . longValue ( ) ) ; 
 + int value = getPointer ( ) . getInt ( 0 ) ; 
 + return value = = 0 ? Window . None : new Window ( value ) ; 
 } 
 } 
 class Pixmap extends Drawable { 
 - 	 	 private static final long serialVersionUID = 1L ; 
 - 	 	 public static final Pixmap None = null ; 
 + private static final long serialVersionUID = 1L ; 
 + public static final Pixmap None = null ; 
 public Pixmap ( ) { } 
 public Pixmap ( long id ) { super ( id ) ; } 
 public Object fromNative ( Object nativeValue , FromNativeContext context ) { 
 @ @ - 238 , 13 + 240 , 13 @ @ public interface X11 extends Library { 
 class Display extends PointerType { } 
 / / TODO : define structure 
 class Visual extends PointerType { 
 - public NativeLong getVisualID ( ) { 
 + public int getVisualID ( ) { 
 if ( getPointer ( ) ! = null ) 
 - return getPointer ( ) . getNativeLong ( Native . POINTER _ SIZE ) ; 
 - return new NativeLong ( 0 ) ; 
 + return getPointer ( ) . getInt ( Native . POINTER _ SIZE ) ; 
 + return 0 ; 
 } 
 public String toString ( ) { 
 - return " Visual : VisualID = 0x " + Long . toHexString ( getVisualID ( ) . longValue ( ) ) ; 
 + return " Visual : VisualID = 0x " + Long . toHexString ( getVisualID ( ) ) ; 
 } 
 } 
 / / TODO : define structure 
 @ @ - 284 , 10 + 286 , 11 @ @ public interface X11 extends Library { 
 return Arrays . asList ( new String [ ] { " red " , " redMask " , " green " , " greenMask " , " blue " , " blueMask " , " alpha " , " alphaMask " } ) ; 
 } 
 } 
 - class PictFormat extends NativeLong { 
 + class PictFormat extends IntegerType { 
 private static final long serialVersionUID = 1L ; 
 - public PictFormat ( long value ) { super ( value ) ; } 
 - public PictFormat ( ) { } 
 + public static final int SIZE = 4 ; 
 + public PictFormat ( long value ) { super ( SIZE , value , true ) ; } 
 + public PictFormat ( ) { this ( 0 ) ; } 
 } 
 class XRenderPictFormat extends Structure { 
 public PictFormat id ;

NEAREST DIFF:
diff - - git a / libffi / ChangeLog . libffi b / libffi / ChangeLog . libffi 
 index 03f40f5 . . 5b4b667 100644 
 - - - a / libffi / ChangeLog . libffi 
 + + + b / libffi / ChangeLog . libffi 
 @ @ - 1 , 3 + 1 , 13 @ @ 
 + 2008 - 02 - 14 Anthony Green < green @ redhat . com > 
 + 
 + 	 * include / Makefile . am ( includesdir ) : Install headers under libdir . 
 + 	 ( pkgconfigdir ) : Define . Install libffi . pc . 
 + 	 * include / Makefile . in : Rebuilt . 
 + 	 * libffi . pc . in : Create . 
 + 	 * libtool - version : Increment CURRENT 
 + 	 * configure . ac : Add libffi . pc . in 
 + 	 * configure : Rebuilt . 
 + 
 2008 - 02 - 03 Anthony Green < green @ redhat . com > 
 
 	 * include / Makefile . am ( includesdir ) : Fix header install with 
 diff - - git a / libffi / Makefile . am b / libffi / Makefile . am 
 index e64ec9c . . 4d30ce6 100644 
 - - - a / libffi / Makefile . am 
 + + + b / libffi / Makefile . am 
 @ @ - 83 , 6 + 83 , 9 @ @ libffi _ la _ SOURCES = src / debug . c src / prep _ cif . c src / types . c \ 
 	 	 src / raw _ api . c src / java _ raw _ api . c src / closures . c 
 # include / ffi _ common . h include / ffitarget . h 
 
 + pkgconfigdir = $ ( libdir ) / pkgconfig 
 + pkgconfig _ DATA = libffi . pc 
 + 
 nodist _ libffi _ la _ SOURCES = 
 
 if MIPS 
 diff - - git a / libffi / Makefile . in b / libffi / Makefile . in 
 index fe22db7 . . 5c3e892 100644 
 - - - a / libffi / Makefile . in 
 + + + b / libffi / Makefile . in 
 @ @ - 14 , 6 + 14 , 7 @ @ 
 
 @ SET _ MAKE @ 
 
 + 
 VPATH = @ srcdir @ 
 pkgdatadir = $ ( datadir ) / @ PACKAGE @ 
 pkglibdir = $ ( libdir ) / @ PACKAGE @ 
 @ @ - 58 , 9 + 59 , 10 @ @ target _ triplet = @ target @ 
 subdir = . 
 DIST _ COMMON = README $ ( am _ _ configure _ deps ) $ ( srcdir ) / Makefile . am \ 
 	 $ ( srcdir ) / Makefile . in $ ( srcdir ) / fficonfig . h . in \ 
 - 	 $ ( top _ srcdir ) / configure ChangeLog compile config . guess \ 
 - 	 config . sub depcomp install - sh ltcf - c . sh ltcf - cxx . sh \ 
 - 	 ltcf - gcj . sh ltconfig ltmain . sh missing mkinstalldirs 
 + 	 $ ( srcdir ) / libffi . pc . in $ ( top _ srcdir ) / configure ChangeLog TODO \ 
 + 	 compile config . guess config . sub depcomp install - sh ltcf - c . sh \ 
 + 	 ltcf - cxx . sh ltcf - gcj . sh ltconfig ltmain . sh missing \ 
 + 	 mkinstalldirs 
 ACLOCAL _ M4 = $ ( top _ srcdir ) / aclocal . m4 
 am _ _ aclocal _ m4 _ deps = $ ( top _ srcdir ) / acinclude . m4 \ 
 	 $ ( top _ srcdir ) / configure . ac 
 @ @ - 70 , 14 + 72 , 15 @ @ am _ _ CONFIG _ DISTCLEAN _ FILES = config . status config . cache config . log \ 
 configure . lineno config . status . lineno 
 mkinstalldirs = $ ( SHELL ) $ ( top _ srcdir ) / mkinstalldirs 
 CONFIG _ HEADER = fficonfig . h 
 - CONFIG _ CLEAN _ FILES = 
 + CONFIG _ CLEAN _ FILES = libffi . pc 
 am _ _ vpath _ adj _ setup = srcdirstrip = ` echo " $ ( srcdir ) " | sed ' s | . | . | g ' ` ; 
 am _ _ vpath _ adj = case $ $ p in \ 
 $ ( srcdir ) / * ) f = ` echo " $ $ p " | sed " s | ^ $ $ srcdirstrip / | | " ` ; ; \ 
 * ) f = $ $ p ; ; \ 
 esac ; 
 am _ _ strip _ dir = ` echo $ $ p | sed - e ' s | ^ . * / | | ' ` ; 
 - am _ _ installdirs = " $ ( DESTDIR ) $ ( toolexeclibdir ) " 
 + am _ _ installdirs = " $ ( DESTDIR ) $ ( toolexeclibdir ) " \ 
 + 	 " $ ( DESTDIR ) $ ( pkgconfigdir ) " 
 toolexeclibLTLIBRARIES _ INSTALL = $ ( INSTALL ) 
 LTLIBRARIES = $ ( noinst _ LTLIBRARIES ) $ ( toolexeclib _ LTLIBRARIES ) 
 libffi _ la _ LIBADD = 
 @ @ - 175 , 6 + 178 , 8 @ @ RECURSIVE _ TARGETS = all - recursive check - recursive dvi - recursive \ 
 	 install - pdf - recursive install - ps - recursive install - recursive \ 
 	 installcheck - recursive installdirs - recursive pdf - recursive \ 
 	 ps - recursive uninstall - recursive 
 + pkgconfigDATA _ INSTALL = $ ( INSTALL _ DATA ) 
 + DATA = $ ( pkgconfig _ DATA ) 
 RECURSIVE _ CLEAN _ TARGETS = mostlyclean - recursive clean - recursive 	 \ 
 distclean - recursive maintainer - clean - recursive 
 ETAGS = etags 
 @ @ - 386 , 6 + 391 , 8 @ @ libffi _ la _ SOURCES = src / debug . c src / prep _ cif . c src / types . c \ 
 	 	 src / raw _ api . c src / java _ raw _ api . c src / closures . c 
 
 # include / ffi _ common . h include / ffitarget . h 
 + pkgconfigdir = $ ( libdir ) / pkgconfig 
 + pkgconfig _ DATA = libffi . pc 
 nodist _ libffi _ la _ SOURCES = $ ( am _ _ append _ 1 ) $ ( am _ _ append _ 2 ) \ 
 	 $ ( am _ _ append _ 3 ) $ ( am _ _ append _ 4 ) $ ( am _ _ append _ 5 ) \ 
 	 $ ( am _ _ append _ 6 ) $ ( am _ _ append _ 7 ) $ ( am _ _ append _ 8 ) \ 
 @ @ - 455 , 6 + 462 , 8 @ @ $ ( srcdir ) / fficonfig . h . in : @ MAINTAINER _ MODE _ TRUE @ $ ( am _ _ configure _ deps ) 
 
 distclean - hdr : 
 	 - rm - f fficonfig . h stamp - h1 
 + libffi . pc : $ ( top _ builddir ) / config . status $ ( srcdir ) / libffi . pc . in 
 + 	 cd $ ( top _ builddir ) & & $ ( SHELL ) . / config . status $ @ 
 
 clean - noinstLTLIBRARIES : 
 	 - test - z " $ ( noinst _ LTLIBRARIES ) " | | rm - f $ ( noinst _ LTLIBRARIES ) 
 @ @ - 923 , 6 + 932 , 23 @ @ clean - libtool : 
 
 distclean - libtool : 
 	 - rm - f libtool 
 + install - pkgconfigDATA : $ ( pkgconfig _ DATA ) 
 + 	 @ $ ( NORMAL _ INSTALL ) 
 + 	 test - z " $ ( pkgconfigdir ) " | | $ ( MKDIR _ P ) " $ ( DESTDIR ) $ ( pkgconfigdir ) " 
 + 	 @ list = ' $ ( pkgconfig _ DATA ) ' ; for p in $ $ list ; do \ 
 + 	 if test - f " $ $ p " ; then d = ; else d = " $ ( srcdir ) / " ; fi ; \ 
 + 	 f = $ ( am _ _ strip _ dir ) \ 
 + 	 echo " $ ( pkgconfigDATA _ INSTALL ) ' $ $ d $ $ p ' ' $ ( DESTDIR ) $ ( pkgconfigdir ) / $ $ f ' " ; \ 
 + 	 $ ( pkgconfigDATA _ INSTALL ) " $ $ d $ $ p " " $ ( DESTDIR ) $ ( pkgconfigdir ) / $ $ f " ; \ 
 + 	 done 
 + 
 + uninstall - pkgconfigDATA : 
 + 	 @ $ ( NORMAL _ UNINSTALL ) 
 + 	 @ list = ' $ ( pkgconfig _ DATA ) ' ; for p in $ $ list ; do \ 
 + 	 f = $ ( am _ _ strip _ dir ) \ 
 + 	 echo " rm - f ' $ ( DESTDIR ) $ ( pkgconfigdir ) / $ $ f ' " ; \ 
 + 	 rm - f " $ ( DESTDIR ) $ ( pkgconfigdir ) / $ $ f " ; \ 
 + 	 done 
 
 # This directory ' s subdirectories are mostly independent ; you can cd 
 # into them and run ` make ' without going through this Makefile . 
 @ @ - 1199 , 10 + 1225 , 10 @ @ distcleancheck : distclean 
 	 exit 1 ; } > & 2 
 check - am : all - am 
 check : check - recursive 
 - all - am : Makefile $ ( LTLIBRARIES ) fficonfig . h 
 + all - am : Makefile $ ( LTLIBRARIES ) $ ( DATA ) fficonfig . h 
 installdirs : installdirs - recursive 
 installdirs - am : 
 - 	 for dir in " $ ( DESTDIR ) $ ( toolexeclibdir ) " ; do \ 
 + 	 for dir in " $ ( DESTDIR ) $ ( toolexeclibdir ) " " $ ( DESTDIR ) $ ( pkgconfigdir ) " ; do \ 
 	 test - z " $ $ dir " | | $ ( MKDIR _ P ) " $ $ dir " ; \ 
 	 done 
 install : install - recursive 
 @ @ - 1283 , 7 + 1309 , 7 @ @ info : info - recursive 
 
 info - am : 
 
 - install - data - am : 
 + install - data - am : install - pkgconfigDATA 
 
 install - dvi : install - dvi - recursive 
 
 @ @ - 1317 , 7 + 1343 , 7 @ @ ps : ps - recursive 
 
 ps - am : 
 
 - uninstall - am : uninstall - toolexeclibLTLIBRARIES 
 + uninstall - am : uninstall - pkgconfigDATA uninstall - toolexeclibLTLIBRARIES 
 
 . MAKE : $ ( RECURSIVE _ CLEAN _ TARGETS ) $ ( RECURSIVE _ TARGETS ) install - am \ 
 	 install - strip 
 @ @ - 1333 , 13 + 1359 , 14 @ @ uninstall - am : uninstall - toolexeclibLTLIBRARIES 
 	 info - am install install - am install - data install - data - am \ 
 	 install - dvi install - dvi - am install - exec install - exec - am \ 
 	 install - html install - html - am install - info install - info - am \ 
 - 	 install - man install - pdf install - pdf - am install - ps \ 
 - 	 install - ps - am install - strip install - toolexeclibLTLIBRARIES \ 
 - 	 installcheck installcheck - am installdirs installdirs - am \ 
 - 	 maintainer - clean maintainer - clean - generic mostlyclean \ 
 - 	 mostlyclean - compile mostlyclean - generic mostlyclean - libtool \ 
 - 	 pdf pdf - am ps ps - am tags tags - recursive uninstall uninstall - am \ 
 - 	 uninstall - toolexeclibLTLIBRARIES 
 + 	 install - man install - pdf install - pdf - am install - pkgconfigDATA \ 
 + 	 install - ps install - ps - am install - strip \ 
 + 	 install - toolexeclibLTLIBRARIES installcheck installcheck - am \ 
 + 	 installdirs installdirs - am maintainer - clean \ 
 + 	 maintainer - clean - generic mostlyclean mostlyclean - compile \ 
 + 	 mostlyclean - generic mostlyclean - libtool pdf pdf - am ps ps - am \ 
 + 	 tags tags - recursive uninstall uninstall - am \ 
 + 	 uninstall - pkgconfigDATA uninstall - toolexeclibLTLIBRARIES 
 
 
 # No install - html or install - pdf support in automake yet 
 diff - - git a / libffi / README b / libffi / README 
 index f426c9d . . 56382bb 100644 
 - - - a / libffi / README 
 + + + b / libffi / README 
 @ @ - 1 , 40 + 1 , 35 @ @ 
 - This directory contains the libffi package , which is not part of GCC but 
 - shipped with GCC as convenience . 
 - 
 Status 
 = = = = = = 
 
 - libffi - 2 . 00 has not been released yet ! This is a development snapshot ! 
 - 
 - libffi - 1 . 20 was released on October 5 , 1998 . Check the libffi web 
 - page for updates : < URL : http : / / sources . redhat . com / libffi / > . 
 + libffi - 3 . 00 was released on February xx , 2008 . Check the libffi web 
 + page for updates : < URL : http : / / sourceware . org / libffi / > . 
 
 
 What is libffi ? 
 = = = = = = = = = = = = = = = 
 
 Compilers for high level languages generate code that follow certain 
 - conventions . These conventions are necessary , in part , for separate 
 - compilation to work . One such convention is the " calling 
 - convention " . The " calling convention " is essentially a set of 
 - assumptions made by the compiler about where function arguments will 
 - be found on entry to a function . A " calling convention " also specifies 
 - where the return value for a function is found . 
 + conventions . These conventions are necessary , in part , for separate 
 + compilation to work . One such convention is the " calling convention " . 
 + The " calling convention " is a set of assumptions made by the compiler 
 + about where function arguments will be found on entry to a function . 
 + A " calling convention " also specifies where the return value for a 
 + function is found . 
 
 Some programs may not know at the time of compilation what arguments 
 - are to be passed to a function . For instance , an interpreter may be 
 + are to be passed to a function . For instance , an interpreter may be 
 told at run - time about the number and types of arguments used to call 
 - a given function . Libffi can be used in such programs to provide a 
 + a given function . Libffi can be used in such programs to provide a 
 bridge from the interpreter program to compiled code . 
 
 The libffi library provides a portable , high level programming 
 - interface to various calling conventions . This allows a programmer to 
 + interface to various calling conventions . This allows a programmer to 
 call any function specified by a call interface description at run 
 - time . 
 + time . 
 
 - Ffi stands for Foreign Function Interface . A foreign function 
 + FFI stands for Foreign Function Interface . A foreign function 
 interface is the popular name for the interface that allows code 
 - written in one language to call code written in another language . The 
 + written in one language to call code written in another language . The 
 libffi library really only provides the lowest , machine dependent 
 layer of a fully featured foreign function interface . A layer must 
 exist above libffi that handles type conversions for values passed 
 @ @ - 120 , 7 + 115 , 7 @ @ call and that you know the number and types of arguments to pass it , 
 as well as the return type of the function . 
 
 The first thing you must do is create an ffi _ cif object that matches 
 - the signature of the function you wish to call . The cif in ffi _ cif 
 + the signature of the function you wish to call . The ` cif ' in ffi _ cif 
 stands for Call InterFace . To prepare a call interface object , use the 
 following function : 
 
 @ @ - 375 , 6 + 370 , 9 @ @ arguments ' test ) . 
 History 
 = = = = = = = 
 
 + 3 . 00 Feb - XX - 08 
 + Many changes , mostly thanks to the GCC project . 
 + 
 1 . 20 Oct - 5 - 98 
 	 Raffaele Sena produces ARM port . 
 
 diff - - git a / libffi / configure b / libffi / configure 
 index 9fd638a . . 8a2bbf9 100755 
 - - - a / libffi / configure 
 + + + b / libffi / configure 
 @ @ - 22695 , 7 + 22695 , 7 @ @ ac _ config _ commands = " $ ac _ config _ commands src " 
 ac _ config _ links = " $ ac _ config _ links include / ffitarget . h : src / $ TARGETDIR / ffitarget . h " 
 
 
 - ac _ config _ files = " $ ac _ config _ files include / Makefile include / ffi . h Makefile testsuite / Makefile " 
 + ac _ config _ files = " $ ac _ config _ files include / Makefile include / ffi . h Makefile testsuite / Makefile libffi . pc " 
 
 
 cat > confcache < < \ _ ACEOF 
 @ @ - 23478 , 6 + 23478 , 7 @ @ do 
 " include / ffi . h " ) CONFIG _ FILES = " $ CONFIG _ FILES include / ffi . h " ; ; 
 " Makefile " ) CONFIG _ FILES = " $ CONFIG _ FILES Makefile " ; ; 
 " testsuite / Makefile " ) CONFIG _ FILES = " $ CONFIG _ FILES testsuite / Makefile " ; ; 
 + " libffi . pc " ) CONFIG _ FILES = " $ CONFIG _ FILES libffi . pc " ; ; 
 
 * ) { { echo " $ as _ me : $ LINENO : error : invalid argument : $ ac _ config _ target " > & 5 
 echo " $ as _ me : error : invalid argument : $ ac _ config _ target " > & 2 ; } 
 diff - - git a / libffi / configure . ac b / libffi / configure . ac 
 index 7c9713d . . fd9e4b8 100644 
 - - - a / libffi / configure . ac 
 + + + b / libffi / configure . ac 
 @ @ - 352 , 6 + 352 , 6 @ @ test - d src / $ TARGETDIR | | mkdir src / $ TARGETDIR 
 
 AC _ CONFIG _ LINKS ( include / ffitarget . h : src / $ TARGETDIR / ffitarget . h ) 
 
 - AC _ CONFIG _ FILES ( include / Makefile include / ffi . h Makefile testsuite / Makefile ) 
 + AC _ CONFIG _ FILES ( include / Makefile include / ffi . h Makefile testsuite / Makefile libffi . pc ) 
 
 AC _ OUTPUT 
 diff - - git a / libffi / include / Makefile . am b / libffi / include / Makefile . am 
 index 03956af . . abdba52 100644 
 - - - a / libffi / include / Makefile . am 
 + + + b / libffi / include / Makefile . am 
 @ @ - 5 , 5 + 5 , 5 @ @ AUTOMAKE _ OPTIONS = foreign 
 DISTCLEANFILES = ffitarget . h 
 EXTRA _ DIST = ffi . h . in ffi _ common . h 
 
 - includesdir = $ ( includedir ) 
 + includesdir = $ ( libdir ) / @ PACKAGE _ NAME @ - @ PACKAGE _ VERSION @ / include 
 includes _ HEADERS = ffi . h ffitarget . h 
 diff - - git a / libffi / include / Makefile . in b / libffi / include / Makefile . in 
 index e85e68b . . 1c240f3 100644 
 - - - a / libffi / include / Makefile . in 
 + + + b / libffi / include / Makefile . in 
 @ @ - 182 , 7 + 182 , 7 @ @ top _ srcdir = @ top _ srcdir @ 
 AUTOMAKE _ OPTIONS = foreign 
 DISTCLEANFILES = ffitarget . h 
 EXTRA _ DIST = ffi . h . in ffi _ common . h 
 - includesdir = $ ( includedir ) 
 + includesdir = $ ( libdir ) / @ PACKAGE _ NAME @ - @ PACKAGE _ VERSION @ / include 
 includes _ HEADERS = ffi . h ffitarget . h 
 all : all - am 
 
 diff - - git a / libffi / libffi . pc . in b / libffi / libffi . pc . in 
 new file mode 100644 
 index 0000000 . . 10c910a 
 - - - / dev / null 
 + + + b / libffi / libffi . pc . in 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + prefix = @ prefix @ 
 + exec _ prefix = @ exec _ prefix @ 
 + libdir = @ libdir @ / @ PACKAGE _ NAME @ - @ PACKAGE _ VERSION @ 
 + includedir = $ { libdir } / @ PACKAGE _ NAME @ - @ PACKAGE _ VERSION @ / include 
 + 
 + Name : libffi 
 + Description : Library supporting Foreign Function Interfaces 
 + Version : 3 . 0 
 + Libs : - lffi 
 + Cflags : - I $ { includedir } 
 diff - - git a / libffi / libtool - version b / libffi / libtool - version 
 index 6753286 . . 71a31c4 100644 
 - - - a / libffi / libtool - version 
 + + + b / libffi / libtool - version 
 @ @ - 3 , 4 + 3 , 4 @ @ 
 # a separate file so that version updates don ' t involve re - running 
 # automake . 
 # CURRENT : REVISION : AGE 
 - 4 : 1 : 0 
 + 5 : 1 : 0
