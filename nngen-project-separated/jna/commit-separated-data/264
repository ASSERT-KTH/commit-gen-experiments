BLEU SCORE: 0.03377156414337854

TEST MSG: fix return type jump tables to accommodate addition of FFI _ TYPE _ COMPLEX
GENERATED MSG: fix 1 byte struct by value return

TEST DIFF (one line): diff - - git a / native / libffi / src / x86 / win32 . S b / native / libffi / src / x86 / win32 . S <nl> index 3680bf5 . . f8fe6bb 100644 <nl> - - - a / native / libffi / src / x86 / win32 . S <nl> + + + b / native / libffi / src / x86 / win32 . S <nl> @ @ - 137 , 6 + 137 , 7 @ @ ca _ jumpdata : <nl> dd offset ca _ retint64 ; ; FFI _ TYPE _ SINT64 <nl> dd offset ca _ epilogue ; ; FFI _ TYPE _ STRUCT <nl> dd offset ca _ retint ; ; FFI _ TYPE _ POINTER <nl> + dd offset ca _ epilogue ; ; FFI _ TYPE _ COMPLEX <nl> dd offset ca _ retstruct1b ; ; FFI _ TYPE _ SMALL _ STRUCT _ 1B <nl> dd offset ca _ retstruct2b ; ; FFI _ TYPE _ SMALL _ STRUCT _ 2B <nl> dd offset ca _ retint ; ; FFI _ TYPE _ SMALL _ STRUCT _ 4B <nl> @ @ - 268 , 6 + 269 , 7 @ @ cs _ jumpdata : <nl> dd offset cs _ retint64 ; ; FFI _ TYPE _ SINT64 <nl> dd offset cs _ retstruct ; ; FFI _ TYPE _ STRUCT <nl> dd offset cs _ retint ; ; FFI _ TYPE _ POINTER <nl> + dd offset cs _ epilogue ; ; FFI _ TYPE _ COMPLEX <nl> dd offset cs _ retsint8 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 1B <nl> dd offset cs _ retsint16 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 2B <nl> dd offset cs _ retint ; ; FFI _ TYPE _ SMALL _ STRUCT _ 4B <nl> @ @ - 377 , 6 + 379 , 7 @ @ cr _ jumpdata : <nl> dd offset cr _ retint64 ; ; FFI _ TYPE _ SINT64 <nl> dd offset cr _ epilogue ; ; FFI _ TYPE _ STRUCT <nl> dd offset cr _ retint ; ; FFI _ TYPE _ POINTER <nl> + dd offset cr _ epilogue ; ; FFI _ TYPE _ COMPLEX <nl> dd offset cr _ retsint8 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 1B <nl> dd offset cr _ retsint16 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 2B <nl> dd offset cr _ retint ; ; FFI _ TYPE _ SMALL _ STRUCT _ 4B <nl> @ @ - 463 , 6 + 466 , 7 @ @ cd _ jumpdata : <nl> dd offset cd _ retint64 ; ; FFI _ TYPE _ SINT64 <nl> dd offset cd _ epilogue ; ; FFI _ TYPE _ STRUCT <nl> dd offset cd _ retint ; ; FFI _ TYPE _ POINTER <nl> + dd offset cd _ epilogue ; ; FFI _ TYPE _ COMPLEX <nl> dd offset cd _ retsint8 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 1B <nl> dd offset cd _ retsint16 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 2B <nl> dd offset cd _ retint ; ; FFI _ TYPE _ SMALL _ STRUCT _ 4B <nl> @ @ - 624 , 6 + 628 , 7 @ @ USCORE _ SYMBOL ( ffi _ call _ win32 ) : <nl> . long 	 . Lretint64 - . Lstore _ table 	 / * FFI _ TYPE _ SINT64 * / <nl> . long 	 . Lretstruct - . Lstore _ table 	 / * FFI _ TYPE _ STRUCT * / <nl> . long 	 . Lretint - . Lstore _ table 	 	 / * FFI _ TYPE _ POINTER * / <nl> + 	 . long 0 / * FFI _ TYPE _ COMPLEX * / <nl> . long 	 . Lretstruct1b - . Lstore _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 1B * / <nl> . long 	 . Lretstruct2b - . Lstore _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 2B * / <nl> . long 	 . Lretstruct4b - . Lstore _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 4B * / <nl> @ @ - 807 , 6 + 812 , 7 @ @ USCORE _ SYMBOL ( ffi _ closure _ SYSV ) : <nl> . long 	 . Lcls _ retllong - . Lcls _ store _ table 	 / * FFI _ TYPE _ SINT64 * / <nl> . long 	 . Lcls _ retstruct - . Lcls _ store _ table 	 / * FFI _ TYPE _ STRUCT * / <nl> . long 	 . Lcls _ retint - . Lcls _ store _ table 	 	 / * FFI _ TYPE _ POINTER * / <nl> + . long 	 0 	 	 / * FFI _ TYPE _ COMPLEX * / <nl> . long 	 . Lcls _ retstruct1 - . Lcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 1B * / <nl> . long 	 . Lcls _ retstruct2 - . Lcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 2B * / <nl> . long 	 . Lcls _ retstruct4 - . Lcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 4B * / <nl> @ @ - 962 , 6 + 968 , 7 @ @ USCORE _ SYMBOL ( ffi _ closure _ raw _ SYSV ) : <nl> . long 	 . Lrcls _ retllong - . Lrcls _ store _ table 	 / * FFI _ TYPE _ SINT64 * / <nl> . long 	 . Lrcls _ retstruct - . Lrcls _ store _ table 	 / * FFI _ TYPE _ STRUCT * / <nl> . long 	 . Lrcls _ retint - . Lrcls _ store _ table 	 / * FFI _ TYPE _ POINTER * / <nl> + . long 	 0 	 / * FFI _ TYPE _ COMPLEX * / <nl> . long 	 . Lrcls _ retstruct1 - . Lrcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 1B * / <nl> . long 	 . Lrcls _ retstruct2 - . Lrcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 2B * / <nl> . long 	 . Lrcls _ retstruct4 - . Lrcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 4B * / <nl> @ @ - 1097 , 6 + 1104 , 7 @ @ USCORE _ SYMBOL ( ffi _ closure _ STDCALL ) : <nl> . long 	 . Lscls _ retllong - . Lscls _ store _ table 	 / * FFI _ TYPE _ SINT64 * / <nl> . long 	 . Lscls _ retstruct - . Lscls _ store _ table 	 / * FFI _ TYPE _ STRUCT * / <nl> . long 	 . Lscls _ retint - . Lscls _ store _ table 	 / * FFI _ TYPE _ POINTER * / <nl> + . long 	 0 	 / * FFI _ TYPE _ COMPLEX * / <nl> . long 	 . Lscls _ retstruct1 - . Lscls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 1B * / <nl> . long 	 . Lscls _ retstruct2 - . Lscls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 2B * / <nl> . long 	 . Lscls _ retstruct4 - . Lscls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 4B * /
NEAREST DIFF (one line): diff - - git a / jnalib / build . xml b / jnalib / build . xml <nl> index 59bd47e . . 7f8adc2 100644 <nl> - - - a / jnalib / build . xml <nl> + + + b / jnalib / build . xml <nl> @ @ - 42 , 7 + 42 , 7 @ @ <nl> < property name = " jni . revision " value = " 0 " / > <nl> < property name = " jni . build " value = " $ { build . number } " / > <nl> < property name = " jni . version " value = " $ { jni . major } . $ { jni . minor } . $ { jni . revision } " / > <nl> - < property name = " jni . md5 " value = " 892beacd437514d23ed9b1cefeb2ead6 " / > <nl> + < property name = " jni . md5 " value = " 9a30bf4421858756a083fb6195467ad9 " / > <nl> < property name = " spec . title " value = " Java Native Access ( JNA ) " / > <nl> < property name = " spec . vendor " value = " $ { vendor } " / > <nl> < property name = " spec . version " value = " $ { jna . major } " / > <nl> diff - - git a / jnalib / native / Makefile b / jnalib / native / Makefile <nl> index adc7ed0 . . 3ae2c03 100644 <nl> - - - a / jnalib / native / Makefile <nl> + + + b / jnalib / native / Makefile <nl> @ @ - 28 , 7 + 28 , 7 @ @ OS = $ ( shell uname | sed - e ' s / \ ( CYGWIN \ | MINGW32 \ ) . * / win32 / g ' \ <nl> - e ' s / Linux . * / linux / g ' ) <nl> <nl> VERSION = 3 . 1 . 0 # auto - generated by ant <nl> - CHECKSUM = 892beacd437514d23ed9b1cefeb2ead6 # auto - generated by ant <nl> + CHECKSUM = 9a30bf4421858756a083fb6195467ad9 # auto - generated by ant <nl> <nl> JAVA _ INCLUDES = - I " $ ( JAVA _ HOME ) / include " \ <nl> - I " $ ( JAVA _ HOME ) / include / $ ( OS ) " <nl> @ @ - 127 , 7 + 127 , 7 @ @ ifeq ( $ ( OS ) , linux ) <nl> ARCH = $ ( shell uname - m | sed ' s / i . 86 / i386 / g ' ) <nl> PCFLAGS + = - fPIC <nl> CDEFINES + = - DHAVE _ PROTECTION <nl> - LDFLAGS + = - Wl , - soname , $ @ <nl> + LDFLAGS + = - Wl , - soname , $ @ <nl> endif <nl> <nl> ifeq ( $ ( OS ) , freebsd ) <nl> diff - - git a / jnalib / native / dispatch . c b / jnalib / native / dispatch . c <nl> index 94eec01 . . ab7c843 100644 <nl> - - - a / jnalib / native / dispatch . c <nl> + + + b / jnalib / native / dispatch . c <nl> @ @ - 1583 , 33 + 1583 , 24 @ @ do { jboolean cpy ; \ <nl> <nl> / * <nl> * Class : Native <nl> - * Method : pointerSize <nl> - * Signature : ( ) I <nl> + * Method : sizeof <nl> + * Signature : ( I ) I <nl> * / <nl> JNIEXPORT jint JNICALL <nl> - Java _ com _ sun _ jna _ Native _ pointerSize ( JNIEnv * env , jclass cls ) <nl> + Java _ com _ sun _ jna _ Native _ sizeof ( JNIEnv * env , jclass cls , jint type ) <nl> { <nl> - return sizeof ( void * ) ; <nl> - } <nl> - <nl> - / * <nl> - * Class : Native <nl> - * Method : longSize <nl> - * Signature : ( ) I <nl> - * / <nl> - JNIEXPORT jint JNICALL <nl> - Java _ com _ sun _ jna _ Native _ longSize ( JNIEnv * env , jclass cls ) { <nl> - return sizeof ( long ) ; <nl> - } <nl> - <nl> - / * <nl> - * Class : Native <nl> - * Method : wideCharSize <nl> - * Signature : ( ) I <nl> - * / <nl> - JNIEXPORT jint JNICALL <nl> - Java _ com _ sun _ jna _ Native _ wideCharSize ( JNIEnv * env , jclass cls ) { <nl> - return sizeof ( wchar _ t ) ; <nl> + switch ( type ) { <nl> + case com _ sun _ jna _ Native _ TYPE _ VOIDP : return sizeof ( void * ) ; <nl> + case com _ sun _ jna _ Native _ TYPE _ LONG : return sizeof ( long ) ; <nl> + case com _ sun _ jna _ Native _ TYPE _ WCHAR _ T : return sizeof ( wchar _ t ) ; <nl> + case com _ sun _ jna _ Native _ TYPE _ SIZE _ T : return sizeof ( size _ t ) ; <nl> + default : <nl> + { <nl> + char msg [ 1024 ] ; <nl> + snprintf ( msg , sizeof ( msg ) , " Invalid sizeof type % d " , ( int ) type ) ; <nl> + throwByName ( env , EIllegalArgument , msg ) ; <nl> + } <nl> + } <nl> } <nl> <nl> / * * Initialize com . sun . jna classes separately from the library load to <nl> diff - - git a / jnalib / pom . xml b / jnalib / pom . xml <nl> index 031bd40 . . 4181ded 100644 <nl> - - - a / jnalib / pom . xml <nl> + + + b / jnalib / pom . xml <nl> @ @ - 6 , 7 + 6 , 7 @ @ <nl> < groupId > net . java . dev . jna < / groupId > <nl> < artifactId > jna < / artifactId > <nl> < packaging > jar < / packaging > <nl> - < version > 3 . x . x < / version > <nl> + < version > 3 . 1 . 0 < / version > <nl> < name > Java Native Access < / name > <nl> <nl> < distributionManagement > <nl> diff - - git a / jnalib / release - notes . html b / jnalib / release - notes . html <nl> index 0f6e2cc . . 02c8720 100755 <nl> - - - a / jnalib / release - notes . html <nl> + + + b / jnalib / release - notes . html <nl> @ @ - 11 , 6 + 11 , 7 @ @ <nl> < li > Open all shared libraries with RTLD _ GLOBAL , if applicable . This was the <nl> default behavior on OSX and changes the default behavior on linux . <nl> < li > Allow NIO Buffer as Structure field ( with limitations ) ( < a href = " https : / / jna . dev . java . net / issues / show _ bug . cgi ? id = 57 " > Issue 57 < / a > ) <nl> + < li > Add < code > size _ t < / code > size . <nl> < / ul > <nl> < b > Bug Fixes < / b > <nl> < ul > <nl> diff - - git a / jnalib / src / com / sun / jna / Native . java b / jnalib / src / com / sun / jna / Native . java <nl> index d34c1e4 . . d8280fb 100644 <nl> - - - a / jnalib / src / com / sun / jna / Native . java <nl> + + + b / jnalib / src / com / sun / jna / Native . java <nl> @ @ - 94 , 11 + 94 , 20 @ @ public final class Native { <nl> public static final int LONG _ SIZE ; <nl> / * * Size of a native < code > wchar _ t < / code > type , in bytes . * / <nl> public static final int WCHAR _ SIZE ; <nl> + / * * Size of a native < code > size _ t < / code > type , in bytes . * / <nl> + public static final int SIZE _ T _ SIZE ; <nl> + <nl> + private static final int TYPE _ VOIDP = 0 ; <nl> + private static final int TYPE _ LONG = 1 ; <nl> + private static final int TYPE _ WCHAR _ T = 2 ; <nl> + private static final int TYPE _ SIZE _ T = 3 ; <nl> + <nl> static { <nl> loadNativeLibrary ( ) ; <nl> - POINTER _ SIZE = pointerSize ( ) ; <nl> - LONG _ SIZE = longSize ( ) ; <nl> - WCHAR _ SIZE = wideCharSize ( ) ; <nl> + POINTER _ SIZE = sizeof ( TYPE _ VOIDP ) ; <nl> + LONG _ SIZE = sizeof ( TYPE _ LONG ) ; <nl> + WCHAR _ SIZE = sizeof ( TYPE _ WCHAR _ T ) ; <nl> + SIZE _ T _ SIZE = sizeof ( TYPE _ SIZE _ T ) ; <nl> / / Perform initialization of other JNA classes until * after * <nl> / / initializing the above final fields <nl> initIDs ( ) ; <nl> @ @ - 624 , 14 + 633 , 8 @ @ public final class Native { <nl> * Initialize field and method IDs for native methods of this class . <nl> * Returns the size of a native pointer . <nl> * * / <nl> - private static native int pointerSize ( ) ; <nl> + private static native int sizeof ( int type ) ; <nl> <nl> - / * * Return the size of a native < code > long < / code > . * / <nl> - private static native int longSize ( ) ; <nl> - <nl> - / * * Return the size of a native < code > wchar _ t < / code > . * / <nl> - private static native int wideCharSize ( ) ; <nl> - <nl> private static native String getNativeVersion ( ) ; <nl> private static native String getAPIChecksum ( ) ; <nl>

TEST DIFF:
diff - - git a / native / libffi / src / x86 / win32 . S b / native / libffi / src / x86 / win32 . S 
 index 3680bf5 . . f8fe6bb 100644 
 - - - a / native / libffi / src / x86 / win32 . S 
 + + + b / native / libffi / src / x86 / win32 . S 
 @ @ - 137 , 6 + 137 , 7 @ @ ca _ jumpdata : 
 dd offset ca _ retint64 ; ; FFI _ TYPE _ SINT64 
 dd offset ca _ epilogue ; ; FFI _ TYPE _ STRUCT 
 dd offset ca _ retint ; ; FFI _ TYPE _ POINTER 
 + dd offset ca _ epilogue ; ; FFI _ TYPE _ COMPLEX 
 dd offset ca _ retstruct1b ; ; FFI _ TYPE _ SMALL _ STRUCT _ 1B 
 dd offset ca _ retstruct2b ; ; FFI _ TYPE _ SMALL _ STRUCT _ 2B 
 dd offset ca _ retint ; ; FFI _ TYPE _ SMALL _ STRUCT _ 4B 
 @ @ - 268 , 6 + 269 , 7 @ @ cs _ jumpdata : 
 dd offset cs _ retint64 ; ; FFI _ TYPE _ SINT64 
 dd offset cs _ retstruct ; ; FFI _ TYPE _ STRUCT 
 dd offset cs _ retint ; ; FFI _ TYPE _ POINTER 
 + dd offset cs _ epilogue ; ; FFI _ TYPE _ COMPLEX 
 dd offset cs _ retsint8 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 1B 
 dd offset cs _ retsint16 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 2B 
 dd offset cs _ retint ; ; FFI _ TYPE _ SMALL _ STRUCT _ 4B 
 @ @ - 377 , 6 + 379 , 7 @ @ cr _ jumpdata : 
 dd offset cr _ retint64 ; ; FFI _ TYPE _ SINT64 
 dd offset cr _ epilogue ; ; FFI _ TYPE _ STRUCT 
 dd offset cr _ retint ; ; FFI _ TYPE _ POINTER 
 + dd offset cr _ epilogue ; ; FFI _ TYPE _ COMPLEX 
 dd offset cr _ retsint8 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 1B 
 dd offset cr _ retsint16 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 2B 
 dd offset cr _ retint ; ; FFI _ TYPE _ SMALL _ STRUCT _ 4B 
 @ @ - 463 , 6 + 466 , 7 @ @ cd _ jumpdata : 
 dd offset cd _ retint64 ; ; FFI _ TYPE _ SINT64 
 dd offset cd _ epilogue ; ; FFI _ TYPE _ STRUCT 
 dd offset cd _ retint ; ; FFI _ TYPE _ POINTER 
 + dd offset cd _ epilogue ; ; FFI _ TYPE _ COMPLEX 
 dd offset cd _ retsint8 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 1B 
 dd offset cd _ retsint16 ; ; FFI _ TYPE _ SMALL _ STRUCT _ 2B 
 dd offset cd _ retint ; ; FFI _ TYPE _ SMALL _ STRUCT _ 4B 
 @ @ - 624 , 6 + 628 , 7 @ @ USCORE _ SYMBOL ( ffi _ call _ win32 ) : 
 . long 	 . Lretint64 - . Lstore _ table 	 / * FFI _ TYPE _ SINT64 * / 
 . long 	 . Lretstruct - . Lstore _ table 	 / * FFI _ TYPE _ STRUCT * / 
 . long 	 . Lretint - . Lstore _ table 	 	 / * FFI _ TYPE _ POINTER * / 
 + 	 . long 0 / * FFI _ TYPE _ COMPLEX * / 
 . long 	 . Lretstruct1b - . Lstore _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 1B * / 
 . long 	 . Lretstruct2b - . Lstore _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 2B * / 
 . long 	 . Lretstruct4b - . Lstore _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 4B * / 
 @ @ - 807 , 6 + 812 , 7 @ @ USCORE _ SYMBOL ( ffi _ closure _ SYSV ) : 
 . long 	 . Lcls _ retllong - . Lcls _ store _ table 	 / * FFI _ TYPE _ SINT64 * / 
 . long 	 . Lcls _ retstruct - . Lcls _ store _ table 	 / * FFI _ TYPE _ STRUCT * / 
 . long 	 . Lcls _ retint - . Lcls _ store _ table 	 	 / * FFI _ TYPE _ POINTER * / 
 + . long 	 0 	 	 / * FFI _ TYPE _ COMPLEX * / 
 . long 	 . Lcls _ retstruct1 - . Lcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 1B * / 
 . long 	 . Lcls _ retstruct2 - . Lcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 2B * / 
 . long 	 . Lcls _ retstruct4 - . Lcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 4B * / 
 @ @ - 962 , 6 + 968 , 7 @ @ USCORE _ SYMBOL ( ffi _ closure _ raw _ SYSV ) : 
 . long 	 . Lrcls _ retllong - . Lrcls _ store _ table 	 / * FFI _ TYPE _ SINT64 * / 
 . long 	 . Lrcls _ retstruct - . Lrcls _ store _ table 	 / * FFI _ TYPE _ STRUCT * / 
 . long 	 . Lrcls _ retint - . Lrcls _ store _ table 	 / * FFI _ TYPE _ POINTER * / 
 + . long 	 0 	 / * FFI _ TYPE _ COMPLEX * / 
 . long 	 . Lrcls _ retstruct1 - . Lrcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 1B * / 
 . long 	 . Lrcls _ retstruct2 - . Lrcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 2B * / 
 . long 	 . Lrcls _ retstruct4 - . Lrcls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 4B * / 
 @ @ - 1097 , 6 + 1104 , 7 @ @ USCORE _ SYMBOL ( ffi _ closure _ STDCALL ) : 
 . long 	 . Lscls _ retllong - . Lscls _ store _ table 	 / * FFI _ TYPE _ SINT64 * / 
 . long 	 . Lscls _ retstruct - . Lscls _ store _ table 	 / * FFI _ TYPE _ STRUCT * / 
 . long 	 . Lscls _ retint - . Lscls _ store _ table 	 / * FFI _ TYPE _ POINTER * / 
 + . long 	 0 	 / * FFI _ TYPE _ COMPLEX * / 
 . long 	 . Lscls _ retstruct1 - . Lscls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 1B * / 
 . long 	 . Lscls _ retstruct2 - . Lscls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 2B * / 
 . long 	 . Lscls _ retstruct4 - . Lscls _ store _ table 	 / * FFI _ TYPE _ SMALL _ STRUCT _ 4B * /

NEAREST DIFF:
diff - - git a / jnalib / build . xml b / jnalib / build . xml 
 index 59bd47e . . 7f8adc2 100644 
 - - - a / jnalib / build . xml 
 + + + b / jnalib / build . xml 
 @ @ - 42 , 7 + 42 , 7 @ @ 
 < property name = " jni . revision " value = " 0 " / > 
 < property name = " jni . build " value = " $ { build . number } " / > 
 < property name = " jni . version " value = " $ { jni . major } . $ { jni . minor } . $ { jni . revision } " / > 
 - < property name = " jni . md5 " value = " 892beacd437514d23ed9b1cefeb2ead6 " / > 
 + < property name = " jni . md5 " value = " 9a30bf4421858756a083fb6195467ad9 " / > 
 < property name = " spec . title " value = " Java Native Access ( JNA ) " / > 
 < property name = " spec . vendor " value = " $ { vendor } " / > 
 < property name = " spec . version " value = " $ { jna . major } " / > 
 diff - - git a / jnalib / native / Makefile b / jnalib / native / Makefile 
 index adc7ed0 . . 3ae2c03 100644 
 - - - a / jnalib / native / Makefile 
 + + + b / jnalib / native / Makefile 
 @ @ - 28 , 7 + 28 , 7 @ @ OS = $ ( shell uname | sed - e ' s / \ ( CYGWIN \ | MINGW32 \ ) . * / win32 / g ' \ 
 - e ' s / Linux . * / linux / g ' ) 
 
 VERSION = 3 . 1 . 0 # auto - generated by ant 
 - CHECKSUM = 892beacd437514d23ed9b1cefeb2ead6 # auto - generated by ant 
 + CHECKSUM = 9a30bf4421858756a083fb6195467ad9 # auto - generated by ant 
 
 JAVA _ INCLUDES = - I " $ ( JAVA _ HOME ) / include " \ 
 - I " $ ( JAVA _ HOME ) / include / $ ( OS ) " 
 @ @ - 127 , 7 + 127 , 7 @ @ ifeq ( $ ( OS ) , linux ) 
 ARCH = $ ( shell uname - m | sed ' s / i . 86 / i386 / g ' ) 
 PCFLAGS + = - fPIC 
 CDEFINES + = - DHAVE _ PROTECTION 
 - LDFLAGS + = - Wl , - soname , $ @ 
 + LDFLAGS + = - Wl , - soname , $ @ 
 endif 
 
 ifeq ( $ ( OS ) , freebsd ) 
 diff - - git a / jnalib / native / dispatch . c b / jnalib / native / dispatch . c 
 index 94eec01 . . ab7c843 100644 
 - - - a / jnalib / native / dispatch . c 
 + + + b / jnalib / native / dispatch . c 
 @ @ - 1583 , 33 + 1583 , 24 @ @ do { jboolean cpy ; \ 
 
 / * 
 * Class : Native 
 - * Method : pointerSize 
 - * Signature : ( ) I 
 + * Method : sizeof 
 + * Signature : ( I ) I 
 * / 
 JNIEXPORT jint JNICALL 
 - Java _ com _ sun _ jna _ Native _ pointerSize ( JNIEnv * env , jclass cls ) 
 + Java _ com _ sun _ jna _ Native _ sizeof ( JNIEnv * env , jclass cls , jint type ) 
 { 
 - return sizeof ( void * ) ; 
 - } 
 - 
 - / * 
 - * Class : Native 
 - * Method : longSize 
 - * Signature : ( ) I 
 - * / 
 - JNIEXPORT jint JNICALL 
 - Java _ com _ sun _ jna _ Native _ longSize ( JNIEnv * env , jclass cls ) { 
 - return sizeof ( long ) ; 
 - } 
 - 
 - / * 
 - * Class : Native 
 - * Method : wideCharSize 
 - * Signature : ( ) I 
 - * / 
 - JNIEXPORT jint JNICALL 
 - Java _ com _ sun _ jna _ Native _ wideCharSize ( JNIEnv * env , jclass cls ) { 
 - return sizeof ( wchar _ t ) ; 
 + switch ( type ) { 
 + case com _ sun _ jna _ Native _ TYPE _ VOIDP : return sizeof ( void * ) ; 
 + case com _ sun _ jna _ Native _ TYPE _ LONG : return sizeof ( long ) ; 
 + case com _ sun _ jna _ Native _ TYPE _ WCHAR _ T : return sizeof ( wchar _ t ) ; 
 + case com _ sun _ jna _ Native _ TYPE _ SIZE _ T : return sizeof ( size _ t ) ; 
 + default : 
 + { 
 + char msg [ 1024 ] ; 
 + snprintf ( msg , sizeof ( msg ) , " Invalid sizeof type % d " , ( int ) type ) ; 
 + throwByName ( env , EIllegalArgument , msg ) ; 
 + } 
 + } 
 } 
 
 / * * Initialize com . sun . jna classes separately from the library load to 
 diff - - git a / jnalib / pom . xml b / jnalib / pom . xml 
 index 031bd40 . . 4181ded 100644 
 - - - a / jnalib / pom . xml 
 + + + b / jnalib / pom . xml 
 @ @ - 6 , 7 + 6 , 7 @ @ 
 < groupId > net . java . dev . jna < / groupId > 
 < artifactId > jna < / artifactId > 
 < packaging > jar < / packaging > 
 - < version > 3 . x . x < / version > 
 + < version > 3 . 1 . 0 < / version > 
 < name > Java Native Access < / name > 
 
 < distributionManagement > 
 diff - - git a / jnalib / release - notes . html b / jnalib / release - notes . html 
 index 0f6e2cc . . 02c8720 100755 
 - - - a / jnalib / release - notes . html 
 + + + b / jnalib / release - notes . html 
 @ @ - 11 , 6 + 11 , 7 @ @ 
 < li > Open all shared libraries with RTLD _ GLOBAL , if applicable . This was the 
 default behavior on OSX and changes the default behavior on linux . 
 < li > Allow NIO Buffer as Structure field ( with limitations ) ( < a href = " https : / / jna . dev . java . net / issues / show _ bug . cgi ? id = 57 " > Issue 57 < / a > ) 
 + < li > Add < code > size _ t < / code > size . 
 < / ul > 
 < b > Bug Fixes < / b > 
 < ul > 
 diff - - git a / jnalib / src / com / sun / jna / Native . java b / jnalib / src / com / sun / jna / Native . java 
 index d34c1e4 . . d8280fb 100644 
 - - - a / jnalib / src / com / sun / jna / Native . java 
 + + + b / jnalib / src / com / sun / jna / Native . java 
 @ @ - 94 , 11 + 94 , 20 @ @ public final class Native { 
 public static final int LONG _ SIZE ; 
 / * * Size of a native < code > wchar _ t < / code > type , in bytes . * / 
 public static final int WCHAR _ SIZE ; 
 + / * * Size of a native < code > size _ t < / code > type , in bytes . * / 
 + public static final int SIZE _ T _ SIZE ; 
 + 
 + private static final int TYPE _ VOIDP = 0 ; 
 + private static final int TYPE _ LONG = 1 ; 
 + private static final int TYPE _ WCHAR _ T = 2 ; 
 + private static final int TYPE _ SIZE _ T = 3 ; 
 + 
 static { 
 loadNativeLibrary ( ) ; 
 - POINTER _ SIZE = pointerSize ( ) ; 
 - LONG _ SIZE = longSize ( ) ; 
 - WCHAR _ SIZE = wideCharSize ( ) ; 
 + POINTER _ SIZE = sizeof ( TYPE _ VOIDP ) ; 
 + LONG _ SIZE = sizeof ( TYPE _ LONG ) ; 
 + WCHAR _ SIZE = sizeof ( TYPE _ WCHAR _ T ) ; 
 + SIZE _ T _ SIZE = sizeof ( TYPE _ SIZE _ T ) ; 
 / / Perform initialization of other JNA classes until * after * 
 / / initializing the above final fields 
 initIDs ( ) ; 
 @ @ - 624 , 14 + 633 , 8 @ @ public final class Native { 
 * Initialize field and method IDs for native methods of this class . 
 * Returns the size of a native pointer . 
 * * / 
 - private static native int pointerSize ( ) ; 
 + private static native int sizeof ( int type ) ; 
 
 - / * * Return the size of a native < code > long < / code > . * / 
 - private static native int longSize ( ) ; 
 - 
 - / * * Return the size of a native < code > wchar _ t < / code > . * / 
 - private static native int wideCharSize ( ) ; 
 - 
 private static native String getNativeVersion ( ) ; 
 private static native String getAPIChecksum ( ) ; 

