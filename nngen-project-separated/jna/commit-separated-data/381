BLEU SCORE: 0.3032653298563167

TEST MSG: More tests
GENERATED MSG: added some test

TEST DIFF (one line): diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Rasapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Rasapi32Util . java <nl> index ea08a0f . . d086eaf 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Rasapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Rasapi32Util . java <nl> @ @ - 230 , 7 + 230 , 6 @ @ public abstract class Rasapi32Util { <nl> 	 	 synchronized ( phoneBookMutex ) { <nl> 	 	 	 RASDIALPARAMS . ByReference rasDialParams = new RASDIALPARAMS . ByReference ( ) ; <nl> 	 	 	 System . arraycopy ( rasDialParams . szEntryName , 0 , entryName . toCharArray ( ) , 0 , entryName . length ( ) ) ; <nl> - 	 	 	 System . out . println ( " - - - - - - - - - - - - size = " + rasDialParams . dwSize ) ; <nl> 	 	 	 BOOLByReference lpfPassword = new BOOLByReference ( ) ; <nl> 	 	 	 int err = Rasapi32 . INSTANCE . RasGetEntryDialParams ( null , rasDialParams , lpfPassword ) ; <nl> 	 	 	 if ( err ! = WinError . ERROR _ SUCCESS ) throw new Ras32Exception ( err ) ; <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32Test . java <nl> index 2cf7395 . . b4ec335 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32Test . java <nl> @ @ - 14 , 6 + 14 , 10 @ @ package com . sun . jna . platform . win32 ; <nl> <nl> import junit . framework . TestCase ; <nl> <nl> + import com . sun . jna . platform . win32 . WinDef . BOOLByReference ; <nl> + import com . sun . jna . platform . win32 . WinRas . RASCREDENTIALS ; <nl> + import com . sun . jna . platform . win32 . WinRas . RASDIALPARAMS ; <nl> + import com . sun . jna . platform . win32 . WinRas . RASENTRY ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> <nl> / * * <nl> @ @ - 40 , 4 + 44 , 26 @ @ public class Rasapi32Test extends TestCase { <nl> 	 	 for ( ; len < msg . length ; len + + ) if ( msg [ len ] = = 0 ) break ; <nl> 	 	 assertEquals ( " An incorrect structure size was detected . " , new String ( msg , 0 , len ) ) ; <nl> 	 } <nl> + <nl> + 	 public void testRasGetCredentials ( ) { <nl> + 	 	 RASCREDENTIALS . ByReference credentials = new RASCREDENTIALS . ByReference ( ) ; <nl> + 	 	 credentials . dwMask = WinRas . RASCM _ UserName | WinRas . RASCM _ Password | WinRas . RASCM _ Domain ; <nl> + 	 	 int err = Rasapi32 . INSTANCE . RasGetCredentials ( null , " TEST " , credentials ) ; <nl> + 	 	 assertEquals ( 623 , err ) ; <nl> + 	 } <nl> + <nl> + 	 public void testRasGetEntryProperties ( ) { <nl> + 	 	 RASENTRY . ByReference rasEntry = new RASENTRY . ByReference ( ) ; <nl> + 	 	 IntByReference lpdwEntryInfoSize = new IntByReference ( rasEntry . size ( ) ) ; <nl> + 	 	 int err = Rasapi32 . INSTANCE . RasGetEntryProperties ( null , " TEST " , rasEntry , lpdwEntryInfoSize , null , null ) ; <nl> + 	 	 assertEquals ( 623 , err ) ; <nl> + 	 } <nl> + <nl> + 	 public void testRasGetEntryDialParams ( ) { <nl> + 	 	 RASDIALPARAMS . ByReference rasDialParams = new RASDIALPARAMS . ByReference ( ) ; <nl> + 	 	 System . arraycopy ( rasDialParams . szEntryName , 0 , " TEST " . toCharArray ( ) , 0 , " TEST " . length ( ) ) ; <nl> + 	 	 BOOLByReference lpfPassword = new BOOLByReference ( ) ; <nl> + 	 	 int err = Rasapi32 . INSTANCE . RasGetEntryDialParams ( null , rasDialParams , lpfPassword ) ; <nl> + 	 	 assertEquals ( 623 , err ) ; <nl> + 	 } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32UtilTest . java <nl> index 41e8981 . . 089200f 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32UtilTest . java <nl> @ @ - 32 , 6 + 32 , 7 @ @ public class Rasapi32UtilTest extends TestCase { <nl> 	 public void testGetPhonebookEntry ( ) { <nl> 	 	 try { <nl> 	 	 	 Rasapi32Util . getPhoneBookEntry ( " TEST " ) ; <nl> + 	 	 	 fail ( " Test expected to fail " ) ; <nl> 	 	 } catch ( Ras32Exception e ) { <nl> 	 	 	 assertEquals ( 623 , e . getCode ( ) ) ; <nl> 	 	 } <nl> @ @ - 45 , 6 + 46 , 14 @ @ public class Rasapi32UtilTest extends TestCase { <nl> 	 	 } <nl> 	 } <nl> <nl> + 	 public void testDialEntry ( ) { <nl> + 	 	 try { <nl> + 	 	 	 Rasapi32Util . dialEntry ( " TEST " ) ; <nl> + 	 	 } catch ( Ras32Exception e ) { <nl> + 	 	 	 assertEquals ( 623 , e . getCode ( ) ) ; <nl> + 	 	 } <nl> + 	 } <nl> + <nl> 	 public void testGetRasErrorString ( ) { <nl> 	 	 assertEquals ( " An incorrect structure size was detected . " , Rasapi32Util . getRasErrorString ( 632 ) ) ; <nl> 	 } <nl> @ @ - 52 , 4 + 61 , 8 @ @ public class Rasapi32UtilTest extends TestCase { <nl> 	 public void testGetRasConnectionStatusText ( ) { <nl> 	 	 assertEquals ( " Disconnected " , Rasapi32Util . getRasConnectionStatusText ( 8193 ) ) ; <nl> 	 } <nl> + <nl> + 	 public void testhangupRasConnection ( ) { <nl> + 	 	 Rasapi32Util . hangupRasConnection ( " TEST " ) ; <nl> + 	 } <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Rasapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Rasapi32Util . java 
 index ea08a0f . . d086eaf 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Rasapi32Util . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Rasapi32Util . java 
 @ @ - 230 , 7 + 230 , 6 @ @ public abstract class Rasapi32Util { 
 	 	 synchronized ( phoneBookMutex ) { 
 	 	 	 RASDIALPARAMS . ByReference rasDialParams = new RASDIALPARAMS . ByReference ( ) ; 
 	 	 	 System . arraycopy ( rasDialParams . szEntryName , 0 , entryName . toCharArray ( ) , 0 , entryName . length ( ) ) ; 
 - 	 	 	 System . out . println ( " - - - - - - - - - - - - size = " + rasDialParams . dwSize ) ; 
 	 	 	 BOOLByReference lpfPassword = new BOOLByReference ( ) ; 
 	 	 	 int err = Rasapi32 . INSTANCE . RasGetEntryDialParams ( null , rasDialParams , lpfPassword ) ; 
 	 	 	 if ( err ! = WinError . ERROR _ SUCCESS ) throw new Ras32Exception ( err ) ; 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32Test . java 
 index 2cf7395 . . b4ec335 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32Test . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32Test . java 
 @ @ - 14 , 6 + 14 , 10 @ @ package com . sun . jna . platform . win32 ; 
 
 import junit . framework . TestCase ; 
 
 + import com . sun . jna . platform . win32 . WinDef . BOOLByReference ; 
 + import com . sun . jna . platform . win32 . WinRas . RASCREDENTIALS ; 
 + import com . sun . jna . platform . win32 . WinRas . RASDIALPARAMS ; 
 + import com . sun . jna . platform . win32 . WinRas . RASENTRY ; 
 import com . sun . jna . ptr . IntByReference ; 
 
 / * * 
 @ @ - 40 , 4 + 44 , 26 @ @ public class Rasapi32Test extends TestCase { 
 	 	 for ( ; len < msg . length ; len + + ) if ( msg [ len ] = = 0 ) break ; 
 	 	 assertEquals ( " An incorrect structure size was detected . " , new String ( msg , 0 , len ) ) ; 
 	 } 
 + 
 + 	 public void testRasGetCredentials ( ) { 
 + 	 	 RASCREDENTIALS . ByReference credentials = new RASCREDENTIALS . ByReference ( ) ; 
 + 	 	 credentials . dwMask = WinRas . RASCM _ UserName | WinRas . RASCM _ Password | WinRas . RASCM _ Domain ; 
 + 	 	 int err = Rasapi32 . INSTANCE . RasGetCredentials ( null , " TEST " , credentials ) ; 
 + 	 	 assertEquals ( 623 , err ) ; 
 + 	 } 
 + 
 + 	 public void testRasGetEntryProperties ( ) { 
 + 	 	 RASENTRY . ByReference rasEntry = new RASENTRY . ByReference ( ) ; 
 + 	 	 IntByReference lpdwEntryInfoSize = new IntByReference ( rasEntry . size ( ) ) ; 
 + 	 	 int err = Rasapi32 . INSTANCE . RasGetEntryProperties ( null , " TEST " , rasEntry , lpdwEntryInfoSize , null , null ) ; 
 + 	 	 assertEquals ( 623 , err ) ; 
 + 	 } 
 + 
 + 	 public void testRasGetEntryDialParams ( ) { 
 + 	 	 RASDIALPARAMS . ByReference rasDialParams = new RASDIALPARAMS . ByReference ( ) ; 
 + 	 	 System . arraycopy ( rasDialParams . szEntryName , 0 , " TEST " . toCharArray ( ) , 0 , " TEST " . length ( ) ) ; 
 + 	 	 BOOLByReference lpfPassword = new BOOLByReference ( ) ; 
 + 	 	 int err = Rasapi32 . INSTANCE . RasGetEntryDialParams ( null , rasDialParams , lpfPassword ) ; 
 + 	 	 assertEquals ( 623 , err ) ; 
 + 	 } 
 } 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32UtilTest . java 
 index 41e8981 . . 089200f 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32UtilTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Rasapi32UtilTest . java 
 @ @ - 32 , 6 + 32 , 7 @ @ public class Rasapi32UtilTest extends TestCase { 
 	 public void testGetPhonebookEntry ( ) { 
 	 	 try { 
 	 	 	 Rasapi32Util . getPhoneBookEntry ( " TEST " ) ; 
 + 	 	 	 fail ( " Test expected to fail " ) ; 
 	 	 } catch ( Ras32Exception e ) { 
 	 	 	 assertEquals ( 623 , e . getCode ( ) ) ; 
 	 	 } 
 @ @ - 45 , 6 + 46 , 14 @ @ public class Rasapi32UtilTest extends TestCase { 
 	 	 } 
 	 } 
 
 + 	 public void testDialEntry ( ) { 
 + 	 	 try { 
 + 	 	 	 Rasapi32Util . dialEntry ( " TEST " ) ; 
 + 	 	 } catch ( Ras32Exception e ) { 
 + 	 	 	 assertEquals ( 623 , e . getCode ( ) ) ; 
 + 	 	 } 
 + 	 } 
 + 
 	 public void testGetRasErrorString ( ) { 
 	 	 assertEquals ( " An incorrect structure size was detected . " , Rasapi32Util . getRasErrorString ( 632 ) ) ; 
 	 } 
 @ @ - 52 , 4 + 61 , 8 @ @ public class Rasapi32UtilTest extends TestCase { 
 	 public void testGetRasConnectionStatusText ( ) { 
 	 	 assertEquals ( " Disconnected " , Rasapi32Util . getRasConnectionStatusText ( 8193 ) ) ; 
 	 } 
 + 
 + 	 public void testhangupRasConnection ( ) { 
 + 	 	 Rasapi32Util . hangupRasConnection ( " TEST " ) ; 
 + 	 } 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
