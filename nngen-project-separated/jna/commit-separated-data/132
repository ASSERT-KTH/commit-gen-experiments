BLEU SCORE: 0.09287528999566796

TEST MSG: Release 4 . 3 . 0 : Create dist files
GENERATED MSG: v3 . 4 . 0rc all natives updated

TEST DIFF (one line): diff - - git a / dist / aix - ppc . jar b / dist / aix - ppc . jar <nl> index 6716399 . . 1d50b10 100644 <nl> Binary files a / dist / aix - ppc . jar and b / dist / aix - ppc . jar differ <nl> diff - - git a / dist / aix - ppc64 . jar b / dist / aix - ppc64 . jar <nl> index 6716399 . . f55d313 100644 <nl> Binary files a / dist / aix - ppc64 . jar and b / dist / aix - ppc64 . jar differ <nl> diff - - git a / dist / android - aarch64 . jar b / dist / android - aarch64 . jar <nl> index 09f856f . . 5d47db3 100644 <nl> Binary files a / dist / android - aarch64 . jar and b / dist / android - aarch64 . jar differ <nl> diff - - git a / dist / android - arm . jar b / dist / android - arm . jar <nl> index 1d7a358 . . 176bd69 100644 <nl> Binary files a / dist / android - arm . jar and b / dist / android - arm . jar differ <nl> diff - - git a / dist / android - armv7 . jar b / dist / android - armv7 . jar <nl> index 4a0b34b . . 95571ce 100644 <nl> Binary files a / dist / android - armv7 . jar and b / dist / android - armv7 . jar differ <nl> diff - - git a / dist / android - mips . jar b / dist / android - mips . jar <nl> index 9f61517 . . cd7686c 100644 <nl> Binary files a / dist / android - mips . jar and b / dist / android - mips . jar differ <nl> diff - - git a / dist / android - mips64 . jar b / dist / android - mips64 . jar <nl> index 7098eb9 . . 9c247a1 100644 <nl> Binary files a / dist / android - mips64 . jar and b / dist / android - mips64 . jar differ <nl> diff - - git a / dist / android - x86 - 64 . jar b / dist / android - x86 - 64 . jar <nl> index 450544c . . ab0ea2a 100644 <nl> Binary files a / dist / android - x86 - 64 . jar and b / dist / android - x86 - 64 . jar differ <nl> diff - - git a / dist / android - x86 . jar b / dist / android - x86 . jar <nl> index 87cdd35 . . 70c7278 100644 <nl> Binary files a / dist / android - x86 . jar and b / dist / android - x86 . jar differ <nl> diff - - git a / dist / darwin . jar b / dist / darwin . jar <nl> index d4cbc98 . . 7ceb691 100644 <nl> Binary files a / dist / darwin . jar and b / dist / darwin . jar differ <nl> diff - - git a / dist / doc . zip b / dist / doc . zip <nl> index 0edbb95 . . a89bf57 100644 <nl> Binary files a / dist / doc . zip and b / dist / doc . zip differ <nl> diff - - git a / dist / freebsd - x86 - 64 . jar b / dist / freebsd - x86 - 64 . jar <nl> index 8ed2aae . . 6716399 100644 <nl> Binary files a / dist / freebsd - x86 - 64 . jar and b / dist / freebsd - x86 - 64 . jar differ <nl> diff - - git a / dist / freebsd - x86 . jar b / dist / freebsd - x86 . jar <nl> index 3dbb368 . . 6716399 100644 <nl> Binary files a / dist / freebsd - x86 . jar and b / dist / freebsd - x86 . jar differ <nl> diff - - git a / dist / jna - min . jar b / dist / jna - min . jar <nl> index 2545efa . . 2e20af0 100644 <nl> Binary files a / dist / jna - min . jar and b / dist / jna - min . jar differ <nl> diff - - git a / dist / jna - platform . jar b / dist / jna - platform . jar <nl> index ca6ea47 . . 16d3ae6 100644 <nl> Binary files a / dist / jna - platform . jar and b / dist / jna - platform . jar differ <nl> diff - - git a / dist / jna . jar b / dist / jna . jar <nl> index 900a072 . . 713354e 100644 <nl> Binary files a / dist / jna . jar and b / dist / jna . jar differ <nl> diff - - git a / dist / jnacontrib / demo - alphamask . jar b / dist / jnacontrib / demo - alphamask . jar <nl> index 543460d . . 0dd0281 100644 <nl> Binary files a / dist / jnacontrib / demo - alphamask . jar and b / dist / jnacontrib / demo - alphamask . jar differ <nl> diff - - git a / dist / jnacontrib / demo - balloonmanager . jar b / dist / jnacontrib / demo - balloonmanager . jar <nl> index 4fc79ff . . cf74c96 100644 <nl> Binary files a / dist / jnacontrib / demo - balloonmanager . jar and b / dist / jnacontrib / demo - balloonmanager . jar differ <nl> diff - - git a / dist / jnacontrib / demo - balloontips . jar b / dist / jnacontrib / demo - balloontips . jar <nl> index 767039a . . 62340a7 100644 <nl> Binary files a / dist / jnacontrib / demo - balloontips . jar and b / dist / jnacontrib / demo - balloontips . jar differ <nl> diff - - git a / dist / jnacontrib / demo - dnd . jar b / dist / jnacontrib / demo - dnd . jar <nl> index 88eced1 . . 55d7c2c 100644 <nl> Binary files a / dist / jnacontrib / demo - dnd . jar and b / dist / jnacontrib / demo - dnd . jar differ <nl> diff - - git a / dist / jnacontrib / demo - monitordemo . jar b / dist / jnacontrib / demo - monitordemo . jar <nl> new file mode 100644 <nl> index 0000000 . . 66ec26f <nl> Binary files / dev / null and b / dist / jnacontrib / demo - monitordemo . jar differ <nl> diff - - git a / dist / jnacontrib / demo - msoffice . jar b / dist / jnacontrib / demo - msoffice . jar <nl> new file mode 100644 <nl> index 0000000 . . 5fca363 <nl> Binary files / dev / null and b / dist / jnacontrib / demo - msoffice . jar differ <nl> diff - - git a / dist / jnacontrib / demo - nativewindowmsg . jar b / dist / jnacontrib / demo - nativewindowmsg . jar <nl> new file mode 100644 <nl> index 0000000 . . 21a4116 <nl> Binary files / dev / null and b / dist / jnacontrib / demo - nativewindowmsg . jar differ <nl> diff - - git a / dist / jnacontrib / demo - shapedwindow . jar b / dist / jnacontrib / demo - shapedwindow . jar <nl> index 19cc5f2 . . 98a2b67 100644 <nl> Binary files a / dist / jnacontrib / demo - shapedwindow . jar and b / dist / jnacontrib / demo - shapedwindow . jar differ <nl> diff - - git a / dist / jnacontrib / demo - w32keyhook . jar b / dist / jnacontrib / demo - w32keyhook . jar <nl> index 6f31b3c . . b15df01 100644 <nl> Binary files a / dist / jnacontrib / demo - w32keyhook . jar and b / dist / jnacontrib / demo - w32keyhook . jar differ <nl> diff - - git a / dist / jnacontrib / demo - w32printing . jar b / dist / jnacontrib / demo - w32printing . jar <nl> new file mode 100644 <nl> index 0000000 . . 441006b <nl> Binary files / dev / null and b / dist / jnacontrib / demo - w32printing . jar differ <nl> diff - - git a / dist / jnacontrib / demo - x11 . jar b / dist / jnacontrib / demo - x11 . jar <nl> index fa37cd5 . . 0cf7667 100644 <nl> Binary files a / dist / jnacontrib / demo - x11 . jar and b / dist / jnacontrib / demo - x11 . jar differ <nl> diff - - git a / dist / linux - arm . jar b / dist / linux - arm . jar <nl> index 9a5cf70 . . 1dcdc9c 100644 <nl> Binary files a / dist / linux - arm . jar and b / dist / linux - arm . jar differ <nl> diff - - git a / dist / linux - ppc64le . jar b / dist / linux - ppc64le . jar <nl> index 0674eb0 . . 2d7fa03 100644 <nl> Binary files a / dist / linux - ppc64le . jar and b / dist / linux - ppc64le . jar differ <nl> diff - - git a / dist / linux - x86 - 64 . jar b / dist / linux - x86 - 64 . jar <nl> index 3081e6b . . e7c16af 100644 <nl> Binary files a / dist / linux - x86 - 64 . jar and b / dist / linux - x86 - 64 . jar differ <nl> diff - - git a / dist / linux - x86 . jar b / dist / linux - x86 . jar <nl> index 348f7ed . . 928aef5 100644 <nl> Binary files a / dist / linux - x86 . jar and b / dist / linux - x86 . jar differ <nl> diff - - git a / dist / openbsd - x86 - 64 . jar b / dist / openbsd - x86 - 64 . jar <nl> index 8d0007d . . 6716399 100644 <nl> Binary files a / dist / openbsd - x86 - 64 . jar and b / dist / openbsd - x86 - 64 . jar differ <nl> diff - - git a / dist / openbsd - x86 . jar b / dist / openbsd - x86 . jar <nl> index 5b61717 . . 6716399 100644 <nl> Binary files a / dist / openbsd - x86 . jar and b / dist / openbsd - x86 . jar differ <nl> diff - - git a / dist / src - full . zip b / dist / src - full . zip <nl> index 7ebbc9a . . bb694b7 100644 <nl> Binary files a / dist / src - full . zip and b / dist / src - full . zip differ <nl> diff - - git a / dist / src . zip b / dist / src . zip <nl> index 095dc3e . . 2ef1927 100644 <nl> Binary files a / dist / src . zip and b / dist / src . zip differ <nl> diff - - git a / dist / sunos - sparc . jar b / dist / sunos - sparc . jar <nl> index a86928d . . 6716399 100644 <nl> Binary files a / dist / sunos - sparc . jar and b / dist / sunos - sparc . jar differ <nl> diff - - git a / dist / sunos - sparcv9 . jar b / dist / sunos - sparcv9 . jar <nl> index 30b24c5 . . 6716399 100644 <nl> Binary files a / dist / sunos - sparcv9 . jar and b / dist / sunos - sparcv9 . jar differ <nl> diff - - git a / dist / sunos - x86 - 64 . jar b / dist / sunos - x86 - 64 . jar <nl> index 58a4153 . . 6716399 100644 <nl> Binary files a / dist / sunos - x86 - 64 . jar and b / dist / sunos - x86 - 64 . jar differ <nl> diff - - git a / dist / sunos - x86 . jar b / dist / sunos - x86 . jar <nl> index 7d36803 . . 6716399 100644 <nl> Binary files a / dist / sunos - x86 . jar and b / dist / sunos - x86 . jar differ <nl> diff - - git a / dist / w32ce - arm . jar b / dist / w32ce - arm . jar <nl> index a341b15 . . 6716399 100644 <nl> Binary files a / dist / w32ce - arm . jar and b / dist / w32ce - arm . jar differ <nl> diff - - git a / dist / win32 - x86 - 64 . jar b / dist / win32 - x86 - 64 . jar <nl> index 1dceea0 . . 94435e7 100644 <nl> Binary files a / dist / win32 - x86 - 64 . jar and b / dist / win32 - x86 - 64 . jar differ <nl> diff - - git a / dist / win32 - x86 . jar b / dist / win32 - x86 . jar <nl> index 215c8f9 . . 9c4cee6 100644 <nl> Binary files a / dist / win32 - x86 . jar and b / dist / win32 - x86 . jar differ
NEAREST DIFF (one line): diff - - git a / src / com / sun / jna / Memory . java b / src / com / sun / jna / Memory . java <nl> index 95ed7f4 . . 9c95806 100644 <nl> - - - a / src / com / sun / jna / Memory . java <nl> + + + b / src / com / sun / jna / Memory . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ package com . sun . jna ; <nl> <nl> import java . nio . ByteBuffer ; <nl> import java . util . Collections ; <nl> + import java . util . HashMap ; <nl> import java . util . Map ; <nl> import java . util . WeakHashMap ; <nl> <nl> @ @ - 38 , 9 + 39 , 13 @ @ import java . util . WeakHashMap ; <nl> * / <nl> public class Memory extends Pointer { <nl> <nl> - private static Map buffers = Collections . synchronizedMap ( new WeakHashMap ( ) ) ; <nl> + private static final Map buffers ; <nl> <nl> - protected long size ; / / Size of the malloc ' ed space <nl> + static { <nl> + buffers = Collections . synchronizedMap ( Platform . HAS _ BUFFERS <nl> + ? ( Map ) new WeakIdentityHashMap ( ) <nl> + : ( Map ) new HashMap ( ) ) ; <nl> + } <nl> <nl> / * * Force cleanup of memory that has associated NIO Buffers which have <nl> been GC ' d . <nl> @ @ - 49 , 6 + 54 , 8 @ @ public class Memory extends Pointer { <nl> buffers . size ( ) ; <nl> } <nl> <nl> + protected long size ; / / Size of the malloc ' ed space <nl> + <nl> / * * Provide a view into the original memory . * / <nl> private class SharedMemory extends Memory { <nl> public SharedMemory ( long offset ) { <nl> diff - - git a / src / com / sun / jna / WeakIdentityHashMap . java b / src / com / sun / jna / WeakIdentityHashMap . java <nl> new file mode 100644 <nl> index 0000000 . . d4f5905 <nl> - - - / dev / null <nl> + + + b / src / com / sun / jna / WeakIdentityHashMap . java <nl> @ @ - 0 , 0 + 1 , 181 @ @ <nl> + package com . sun . jna ; <nl> + / * * <nl> + * Licensed to the Apache Software Foundation ( ASF ) under one <nl> + * or more contributor license agreements . See the NOTICE file <nl> + * distributed with this work for additional information <nl> + * regarding copyright ownership . The ASF licenses this file <nl> + * to you under the Apache License , Version 2 . 0 ( the <nl> + * " License " ) ; you may not use this file except in compliance <nl> + * with the License . You may obtain a copy of the License at <nl> + * <nl> + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 <nl> + * <nl> + * Unless required by applicable law or agreed to in writing , <nl> + * software distributed under the License is distributed on an <nl> + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY <nl> + * KIND , either express or implied . See the License for the <nl> + * specific language governing permissions and limitations <nl> + * under the License . <nl> + * <nl> + * Modified to remove Genercs for JNA . <nl> + * / <nl> + <nl> + import java . lang . ref . ReferenceQueue ; <nl> + import java . lang . ref . WeakReference ; <nl> + import java . util . Collection ; <nl> + import java . util . Collections ; <nl> + import java . util . HashMap ; <nl> + import java . util . HashSet ; <nl> + import java . util . Iterator ; <nl> + import java . util . Map ; <nl> + import java . util . Set ; <nl> + <nl> + <nl> + / * * <nl> + * Implements a combination of WeakHashMap and IdentityHashMap . <nl> + * Useful for caches that need to key off of a = = comparison <nl> + * instead of a . equals . <nl> + * <nl> + * < b > <nl> + * This class is not a general - purpose Map implementation ! While <nl> + * this class implements the Map interface , it intentionally violates <nl> + * Map ' s general contract , which mandates the use of the equals method <nl> + * when comparing objects . This class is designed for use only in the <nl> + * rare cases wherein reference - equality semantics are required . <nl> + * <nl> + * Note that this implementation is not synchronized . <nl> + * < / b > <nl> + * / <nl> + public class WeakIdentityHashMap implements Map { <nl> + private final ReferenceQueue queue = new ReferenceQueue ( ) ; <nl> + private Map backingStore = new HashMap ( ) ; <nl> + <nl> + <nl> + public WeakIdentityHashMap ( ) { <nl> + } <nl> + <nl> + <nl> + public void clear ( ) { <nl> + backingStore . clear ( ) ; <nl> + reap ( ) ; <nl> + } <nl> + <nl> + public boolean containsKey ( Object key ) { <nl> + reap ( ) ; <nl> + return backingStore . containsKey ( new IdentityWeakReference ( key ) ) ; <nl> + } <nl> + <nl> + public boolean containsValue ( Object value ) { <nl> + reap ( ) ; <nl> + return backingStore . containsValue ( value ) ; <nl> + } <nl> + <nl> + public Set entrySet ( ) { <nl> + reap ( ) ; <nl> + Set ret = new HashSet ( ) ; <nl> + for ( Iterator i = backingStore . entrySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { <nl> + Map . Entry ref = ( Map . Entry ) i . next ( ) ; <nl> + final Object key = ( ( IdentityWeakReference ) ref . getKey ( ) ) . get ( ) ; <nl> + final Object value = ref . getValue ( ) ; <nl> + Map . Entry entry = new Map . Entry ( ) { <nl> + public Object getKey ( ) { <nl> + return key ; <nl> + } <nl> + public Object getValue ( ) { <nl> + return value ; <nl> + } <nl> + public Object setValue ( Object value ) { <nl> + throw new UnsupportedOperationException ( ) ; <nl> + } <nl> + } ; <nl> + ret . add ( entry ) ; <nl> + } <nl> + return Collections . unmodifiableSet ( ret ) ; <nl> + } <nl> + public Set keySet ( ) { <nl> + reap ( ) ; <nl> + Set ret = new HashSet ( ) ; <nl> + for ( Iterator i = backingStore . keySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { <nl> + IdentityWeakReference ref = ( IdentityWeakReference ) i . next ( ) ; <nl> + ret . add ( ref . get ( ) ) ; <nl> + } <nl> + return Collections . unmodifiableSet ( ret ) ; <nl> + } <nl> + <nl> + public boolean equals ( Object o ) { <nl> + return backingStore . equals ( ( ( WeakIdentityHashMap ) o ) . backingStore ) ; <nl> + } <nl> + <nl> + public Object get ( Object key ) { <nl> + reap ( ) ; <nl> + return backingStore . get ( new IdentityWeakReference ( key ) ) ; <nl> + } <nl> + public Object put ( Object key , Object value ) { <nl> + reap ( ) ; <nl> + return backingStore . put ( new IdentityWeakReference ( key ) , value ) ; <nl> + } <nl> + <nl> + public int hashCode ( ) { <nl> + reap ( ) ; <nl> + return backingStore . hashCode ( ) ; <nl> + } <nl> + public boolean isEmpty ( ) { <nl> + reap ( ) ; <nl> + return backingStore . isEmpty ( ) ; <nl> + } <nl> + public void putAll ( Map t ) { <nl> + throw new UnsupportedOperationException ( ) ; <nl> + } <nl> + public Object remove ( Object key ) { <nl> + reap ( ) ; <nl> + return backingStore . remove ( new IdentityWeakReference ( key ) ) ; <nl> + } <nl> + public int size ( ) { <nl> + reap ( ) ; <nl> + return backingStore . size ( ) ; <nl> + } <nl> + public Collection values ( ) { <nl> + reap ( ) ; <nl> + return backingStore . values ( ) ; <nl> + } <nl> + <nl> + private synchronized void reap ( ) { <nl> + Object zombie = queue . poll ( ) ; <nl> + <nl> + while ( zombie ! = null ) { <nl> + IdentityWeakReference victim = ( IdentityWeakReference ) zombie ; <nl> + backingStore . remove ( victim ) ; <nl> + zombie = queue . poll ( ) ; <nl> + } <nl> + } <nl> + <nl> + class IdentityWeakReference extends WeakReference { <nl> + int hash ; <nl> + <nl> + / / @ SuppressWarnings ( " unchecked " ) <nl> + IdentityWeakReference ( Object obj ) { <nl> + super ( obj , queue ) ; <nl> + hash = System . identityHashCode ( obj ) ; <nl> + } <nl> + <nl> + public int hashCode ( ) { <nl> + return hash ; <nl> + } <nl> + <nl> + public boolean equals ( Object o ) { <nl> + if ( this = = o ) { <nl> + return true ; <nl> + } <nl> + IdentityWeakReference ref = ( IdentityWeakReference ) o ; <nl> + if ( this . get ( ) = = ref . get ( ) ) { <nl> + return true ; <nl> + } <nl> + return false ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + <nl> + <nl> + <nl> + <nl> \ No newline at end of file <nl> diff - - git a / test / com / sun / jna / MemoryTest . java b / test / com / sun / jna / MemoryTest . java <nl> index 70ab1ab . . 8bc07f7 100644 <nl> - - - a / test / com / sun / jna / MemoryTest . java <nl> + + + b / test / com / sun / jna / MemoryTest . java <nl> @ @ - 111 , 9 + 111 , 17 @ @ public class MemoryTest extends TestCase { <nl> if ( ! Platform . HAS _ BUFFERS ) return ; <nl> <nl> Memory m = new Memory ( 1024 ) ; <nl> + m . clear ( ) ; <nl> + <nl> ByteBuffer b = m . getByteBuffer ( 0 , m . size ( ) ) ; <nl> WeakReference ref = new WeakReference ( m ) ; <nl> WeakReference bref = new WeakReference ( b ) ; <nl> + <nl> + / / Create a second byte buffer " equal " to the first <nl> + m = new Memory ( 1024 ) ; <nl> + m . clear ( ) ; <nl> + m . getByteBuffer ( 0 , m . size ( ) ) ; <nl> + <nl> m = null ; <nl> System . gc ( ) ; <nl> Memory . purge ( ) ;

TEST DIFF:
diff - - git a / dist / aix - ppc . jar b / dist / aix - ppc . jar 
 index 6716399 . . 1d50b10 100644 
 Binary files a / dist / aix - ppc . jar and b / dist / aix - ppc . jar differ 
 diff - - git a / dist / aix - ppc64 . jar b / dist / aix - ppc64 . jar 
 index 6716399 . . f55d313 100644 
 Binary files a / dist / aix - ppc64 . jar and b / dist / aix - ppc64 . jar differ 
 diff - - git a / dist / android - aarch64 . jar b / dist / android - aarch64 . jar 
 index 09f856f . . 5d47db3 100644 
 Binary files a / dist / android - aarch64 . jar and b / dist / android - aarch64 . jar differ 
 diff - - git a / dist / android - arm . jar b / dist / android - arm . jar 
 index 1d7a358 . . 176bd69 100644 
 Binary files a / dist / android - arm . jar and b / dist / android - arm . jar differ 
 diff - - git a / dist / android - armv7 . jar b / dist / android - armv7 . jar 
 index 4a0b34b . . 95571ce 100644 
 Binary files a / dist / android - armv7 . jar and b / dist / android - armv7 . jar differ 
 diff - - git a / dist / android - mips . jar b / dist / android - mips . jar 
 index 9f61517 . . cd7686c 100644 
 Binary files a / dist / android - mips . jar and b / dist / android - mips . jar differ 
 diff - - git a / dist / android - mips64 . jar b / dist / android - mips64 . jar 
 index 7098eb9 . . 9c247a1 100644 
 Binary files a / dist / android - mips64 . jar and b / dist / android - mips64 . jar differ 
 diff - - git a / dist / android - x86 - 64 . jar b / dist / android - x86 - 64 . jar 
 index 450544c . . ab0ea2a 100644 
 Binary files a / dist / android - x86 - 64 . jar and b / dist / android - x86 - 64 . jar differ 
 diff - - git a / dist / android - x86 . jar b / dist / android - x86 . jar 
 index 87cdd35 . . 70c7278 100644 
 Binary files a / dist / android - x86 . jar and b / dist / android - x86 . jar differ 
 diff - - git a / dist / darwin . jar b / dist / darwin . jar 
 index d4cbc98 . . 7ceb691 100644 
 Binary files a / dist / darwin . jar and b / dist / darwin . jar differ 
 diff - - git a / dist / doc . zip b / dist / doc . zip 
 index 0edbb95 . . a89bf57 100644 
 Binary files a / dist / doc . zip and b / dist / doc . zip differ 
 diff - - git a / dist / freebsd - x86 - 64 . jar b / dist / freebsd - x86 - 64 . jar 
 index 8ed2aae . . 6716399 100644 
 Binary files a / dist / freebsd - x86 - 64 . jar and b / dist / freebsd - x86 - 64 . jar differ 
 diff - - git a / dist / freebsd - x86 . jar b / dist / freebsd - x86 . jar 
 index 3dbb368 . . 6716399 100644 
 Binary files a / dist / freebsd - x86 . jar and b / dist / freebsd - x86 . jar differ 
 diff - - git a / dist / jna - min . jar b / dist / jna - min . jar 
 index 2545efa . . 2e20af0 100644 
 Binary files a / dist / jna - min . jar and b / dist / jna - min . jar differ 
 diff - - git a / dist / jna - platform . jar b / dist / jna - platform . jar 
 index ca6ea47 . . 16d3ae6 100644 
 Binary files a / dist / jna - platform . jar and b / dist / jna - platform . jar differ 
 diff - - git a / dist / jna . jar b / dist / jna . jar 
 index 900a072 . . 713354e 100644 
 Binary files a / dist / jna . jar and b / dist / jna . jar differ 
 diff - - git a / dist / jnacontrib / demo - alphamask . jar b / dist / jnacontrib / demo - alphamask . jar 
 index 543460d . . 0dd0281 100644 
 Binary files a / dist / jnacontrib / demo - alphamask . jar and b / dist / jnacontrib / demo - alphamask . jar differ 
 diff - - git a / dist / jnacontrib / demo - balloonmanager . jar b / dist / jnacontrib / demo - balloonmanager . jar 
 index 4fc79ff . . cf74c96 100644 
 Binary files a / dist / jnacontrib / demo - balloonmanager . jar and b / dist / jnacontrib / demo - balloonmanager . jar differ 
 diff - - git a / dist / jnacontrib / demo - balloontips . jar b / dist / jnacontrib / demo - balloontips . jar 
 index 767039a . . 62340a7 100644 
 Binary files a / dist / jnacontrib / demo - balloontips . jar and b / dist / jnacontrib / demo - balloontips . jar differ 
 diff - - git a / dist / jnacontrib / demo - dnd . jar b / dist / jnacontrib / demo - dnd . jar 
 index 88eced1 . . 55d7c2c 100644 
 Binary files a / dist / jnacontrib / demo - dnd . jar and b / dist / jnacontrib / demo - dnd . jar differ 
 diff - - git a / dist / jnacontrib / demo - monitordemo . jar b / dist / jnacontrib / demo - monitordemo . jar 
 new file mode 100644 
 index 0000000 . . 66ec26f 
 Binary files / dev / null and b / dist / jnacontrib / demo - monitordemo . jar differ 
 diff - - git a / dist / jnacontrib / demo - msoffice . jar b / dist / jnacontrib / demo - msoffice . jar 
 new file mode 100644 
 index 0000000 . . 5fca363 
 Binary files / dev / null and b / dist / jnacontrib / demo - msoffice . jar differ 
 diff - - git a / dist / jnacontrib / demo - nativewindowmsg . jar b / dist / jnacontrib / demo - nativewindowmsg . jar 
 new file mode 100644 
 index 0000000 . . 21a4116 
 Binary files / dev / null and b / dist / jnacontrib / demo - nativewindowmsg . jar differ 
 diff - - git a / dist / jnacontrib / demo - shapedwindow . jar b / dist / jnacontrib / demo - shapedwindow . jar 
 index 19cc5f2 . . 98a2b67 100644 
 Binary files a / dist / jnacontrib / demo - shapedwindow . jar and b / dist / jnacontrib / demo - shapedwindow . jar differ 
 diff - - git a / dist / jnacontrib / demo - w32keyhook . jar b / dist / jnacontrib / demo - w32keyhook . jar 
 index 6f31b3c . . b15df01 100644 
 Binary files a / dist / jnacontrib / demo - w32keyhook . jar and b / dist / jnacontrib / demo - w32keyhook . jar differ 
 diff - - git a / dist / jnacontrib / demo - w32printing . jar b / dist / jnacontrib / demo - w32printing . jar 
 new file mode 100644 
 index 0000000 . . 441006b 
 Binary files / dev / null and b / dist / jnacontrib / demo - w32printing . jar differ 
 diff - - git a / dist / jnacontrib / demo - x11 . jar b / dist / jnacontrib / demo - x11 . jar 
 index fa37cd5 . . 0cf7667 100644 
 Binary files a / dist / jnacontrib / demo - x11 . jar and b / dist / jnacontrib / demo - x11 . jar differ 
 diff - - git a / dist / linux - arm . jar b / dist / linux - arm . jar 
 index 9a5cf70 . . 1dcdc9c 100644 
 Binary files a / dist / linux - arm . jar and b / dist / linux - arm . jar differ 
 diff - - git a / dist / linux - ppc64le . jar b / dist / linux - ppc64le . jar 
 index 0674eb0 . . 2d7fa03 100644 
 Binary files a / dist / linux - ppc64le . jar and b / dist / linux - ppc64le . jar differ 
 diff - - git a / dist / linux - x86 - 64 . jar b / dist / linux - x86 - 64 . jar 
 index 3081e6b . . e7c16af 100644 
 Binary files a / dist / linux - x86 - 64 . jar and b / dist / linux - x86 - 64 . jar differ 
 diff - - git a / dist / linux - x86 . jar b / dist / linux - x86 . jar 
 index 348f7ed . . 928aef5 100644 
 Binary files a / dist / linux - x86 . jar and b / dist / linux - x86 . jar differ 
 diff - - git a / dist / openbsd - x86 - 64 . jar b / dist / openbsd - x86 - 64 . jar 
 index 8d0007d . . 6716399 100644 
 Binary files a / dist / openbsd - x86 - 64 . jar and b / dist / openbsd - x86 - 64 . jar differ 
 diff - - git a / dist / openbsd - x86 . jar b / dist / openbsd - x86 . jar 
 index 5b61717 . . 6716399 100644 
 Binary files a / dist / openbsd - x86 . jar and b / dist / openbsd - x86 . jar differ 
 diff - - git a / dist / src - full . zip b / dist / src - full . zip 
 index 7ebbc9a . . bb694b7 100644 
 Binary files a / dist / src - full . zip and b / dist / src - full . zip differ 
 diff - - git a / dist / src . zip b / dist / src . zip 
 index 095dc3e . . 2ef1927 100644 
 Binary files a / dist / src . zip and b / dist / src . zip differ 
 diff - - git a / dist / sunos - sparc . jar b / dist / sunos - sparc . jar 
 index a86928d . . 6716399 100644 
 Binary files a / dist / sunos - sparc . jar and b / dist / sunos - sparc . jar differ 
 diff - - git a / dist / sunos - sparcv9 . jar b / dist / sunos - sparcv9 . jar 
 index 30b24c5 . . 6716399 100644 
 Binary files a / dist / sunos - sparcv9 . jar and b / dist / sunos - sparcv9 . jar differ 
 diff - - git a / dist / sunos - x86 - 64 . jar b / dist / sunos - x86 - 64 . jar 
 index 58a4153 . . 6716399 100644 
 Binary files a / dist / sunos - x86 - 64 . jar and b / dist / sunos - x86 - 64 . jar differ 
 diff - - git a / dist / sunos - x86 . jar b / dist / sunos - x86 . jar 
 index 7d36803 . . 6716399 100644 
 Binary files a / dist / sunos - x86 . jar and b / dist / sunos - x86 . jar differ 
 diff - - git a / dist / w32ce - arm . jar b / dist / w32ce - arm . jar 
 index a341b15 . . 6716399 100644 
 Binary files a / dist / w32ce - arm . jar and b / dist / w32ce - arm . jar differ 
 diff - - git a / dist / win32 - x86 - 64 . jar b / dist / win32 - x86 - 64 . jar 
 index 1dceea0 . . 94435e7 100644 
 Binary files a / dist / win32 - x86 - 64 . jar and b / dist / win32 - x86 - 64 . jar differ 
 diff - - git a / dist / win32 - x86 . jar b / dist / win32 - x86 . jar 
 index 215c8f9 . . 9c4cee6 100644 
 Binary files a / dist / win32 - x86 . jar and b / dist / win32 - x86 . jar differ

NEAREST DIFF:
diff - - git a / src / com / sun / jna / Memory . java b / src / com / sun / jna / Memory . java 
 index 95ed7f4 . . 9c95806 100644 
 - - - a / src / com / sun / jna / Memory . java 
 + + + b / src / com / sun / jna / Memory . java 
 @ @ - 12 , 6 + 12 , 7 @ @ package com . sun . jna ; 
 
 import java . nio . ByteBuffer ; 
 import java . util . Collections ; 
 + import java . util . HashMap ; 
 import java . util . Map ; 
 import java . util . WeakHashMap ; 
 
 @ @ - 38 , 9 + 39 , 13 @ @ import java . util . WeakHashMap ; 
 * / 
 public class Memory extends Pointer { 
 
 - private static Map buffers = Collections . synchronizedMap ( new WeakHashMap ( ) ) ; 
 + private static final Map buffers ; 
 
 - protected long size ; / / Size of the malloc ' ed space 
 + static { 
 + buffers = Collections . synchronizedMap ( Platform . HAS _ BUFFERS 
 + ? ( Map ) new WeakIdentityHashMap ( ) 
 + : ( Map ) new HashMap ( ) ) ; 
 + } 
 
 / * * Force cleanup of memory that has associated NIO Buffers which have 
 been GC ' d . 
 @ @ - 49 , 6 + 54 , 8 @ @ public class Memory extends Pointer { 
 buffers . size ( ) ; 
 } 
 
 + protected long size ; / / Size of the malloc ' ed space 
 + 
 / * * Provide a view into the original memory . * / 
 private class SharedMemory extends Memory { 
 public SharedMemory ( long offset ) { 
 diff - - git a / src / com / sun / jna / WeakIdentityHashMap . java b / src / com / sun / jna / WeakIdentityHashMap . java 
 new file mode 100644 
 index 0000000 . . d4f5905 
 - - - / dev / null 
 + + + b / src / com / sun / jna / WeakIdentityHashMap . java 
 @ @ - 0 , 0 + 1 , 181 @ @ 
 + package com . sun . jna ; 
 + / * * 
 + * Licensed to the Apache Software Foundation ( ASF ) under one 
 + * or more contributor license agreements . See the NOTICE file 
 + * distributed with this work for additional information 
 + * regarding copyright ownership . The ASF licenses this file 
 + * to you under the Apache License , Version 2 . 0 ( the 
 + * " License " ) ; you may not use this file except in compliance 
 + * with the License . You may obtain a copy of the License at 
 + * 
 + * http : / / www . apache . org / licenses / LICENSE - 2 . 0 
 + * 
 + * Unless required by applicable law or agreed to in writing , 
 + * software distributed under the License is distributed on an 
 + * " AS IS " BASIS , WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 + * KIND , either express or implied . See the License for the 
 + * specific language governing permissions and limitations 
 + * under the License . 
 + * 
 + * Modified to remove Genercs for JNA . 
 + * / 
 + 
 + import java . lang . ref . ReferenceQueue ; 
 + import java . lang . ref . WeakReference ; 
 + import java . util . Collection ; 
 + import java . util . Collections ; 
 + import java . util . HashMap ; 
 + import java . util . HashSet ; 
 + import java . util . Iterator ; 
 + import java . util . Map ; 
 + import java . util . Set ; 
 + 
 + 
 + / * * 
 + * Implements a combination of WeakHashMap and IdentityHashMap . 
 + * Useful for caches that need to key off of a = = comparison 
 + * instead of a . equals . 
 + * 
 + * < b > 
 + * This class is not a general - purpose Map implementation ! While 
 + * this class implements the Map interface , it intentionally violates 
 + * Map ' s general contract , which mandates the use of the equals method 
 + * when comparing objects . This class is designed for use only in the 
 + * rare cases wherein reference - equality semantics are required . 
 + * 
 + * Note that this implementation is not synchronized . 
 + * < / b > 
 + * / 
 + public class WeakIdentityHashMap implements Map { 
 + private final ReferenceQueue queue = new ReferenceQueue ( ) ; 
 + private Map backingStore = new HashMap ( ) ; 
 + 
 + 
 + public WeakIdentityHashMap ( ) { 
 + } 
 + 
 + 
 + public void clear ( ) { 
 + backingStore . clear ( ) ; 
 + reap ( ) ; 
 + } 
 + 
 + public boolean containsKey ( Object key ) { 
 + reap ( ) ; 
 + return backingStore . containsKey ( new IdentityWeakReference ( key ) ) ; 
 + } 
 + 
 + public boolean containsValue ( Object value ) { 
 + reap ( ) ; 
 + return backingStore . containsValue ( value ) ; 
 + } 
 + 
 + public Set entrySet ( ) { 
 + reap ( ) ; 
 + Set ret = new HashSet ( ) ; 
 + for ( Iterator i = backingStore . entrySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { 
 + Map . Entry ref = ( Map . Entry ) i . next ( ) ; 
 + final Object key = ( ( IdentityWeakReference ) ref . getKey ( ) ) . get ( ) ; 
 + final Object value = ref . getValue ( ) ; 
 + Map . Entry entry = new Map . Entry ( ) { 
 + public Object getKey ( ) { 
 + return key ; 
 + } 
 + public Object getValue ( ) { 
 + return value ; 
 + } 
 + public Object setValue ( Object value ) { 
 + throw new UnsupportedOperationException ( ) ; 
 + } 
 + } ; 
 + ret . add ( entry ) ; 
 + } 
 + return Collections . unmodifiableSet ( ret ) ; 
 + } 
 + public Set keySet ( ) { 
 + reap ( ) ; 
 + Set ret = new HashSet ( ) ; 
 + for ( Iterator i = backingStore . keySet ( ) . iterator ( ) ; i . hasNext ( ) ; ) { 
 + IdentityWeakReference ref = ( IdentityWeakReference ) i . next ( ) ; 
 + ret . add ( ref . get ( ) ) ; 
 + } 
 + return Collections . unmodifiableSet ( ret ) ; 
 + } 
 + 
 + public boolean equals ( Object o ) { 
 + return backingStore . equals ( ( ( WeakIdentityHashMap ) o ) . backingStore ) ; 
 + } 
 + 
 + public Object get ( Object key ) { 
 + reap ( ) ; 
 + return backingStore . get ( new IdentityWeakReference ( key ) ) ; 
 + } 
 + public Object put ( Object key , Object value ) { 
 + reap ( ) ; 
 + return backingStore . put ( new IdentityWeakReference ( key ) , value ) ; 
 + } 
 + 
 + public int hashCode ( ) { 
 + reap ( ) ; 
 + return backingStore . hashCode ( ) ; 
 + } 
 + public boolean isEmpty ( ) { 
 + reap ( ) ; 
 + return backingStore . isEmpty ( ) ; 
 + } 
 + public void putAll ( Map t ) { 
 + throw new UnsupportedOperationException ( ) ; 
 + } 
 + public Object remove ( Object key ) { 
 + reap ( ) ; 
 + return backingStore . remove ( new IdentityWeakReference ( key ) ) ; 
 + } 
 + public int size ( ) { 
 + reap ( ) ; 
 + return backingStore . size ( ) ; 
 + } 
 + public Collection values ( ) { 
 + reap ( ) ; 
 + return backingStore . values ( ) ; 
 + } 
 + 
 + private synchronized void reap ( ) { 
 + Object zombie = queue . poll ( ) ; 
 + 
 + while ( zombie ! = null ) { 
 + IdentityWeakReference victim = ( IdentityWeakReference ) zombie ; 
 + backingStore . remove ( victim ) ; 
 + zombie = queue . poll ( ) ; 
 + } 
 + } 
 + 
 + class IdentityWeakReference extends WeakReference { 
 + int hash ; 
 + 
 + / / @ SuppressWarnings ( " unchecked " ) 
 + IdentityWeakReference ( Object obj ) { 
 + super ( obj , queue ) ; 
 + hash = System . identityHashCode ( obj ) ; 
 + } 
 + 
 + public int hashCode ( ) { 
 + return hash ; 
 + } 
 + 
 + public boolean equals ( Object o ) { 
 + if ( this = = o ) { 
 + return true ; 
 + } 
 + IdentityWeakReference ref = ( IdentityWeakReference ) o ; 
 + if ( this . get ( ) = = ref . get ( ) ) { 
 + return true ; 
 + } 
 + return false ; 
 + } 
 + } 
 + } 
 + 
 + 
 + 
 + 
 + 
 \ No newline at end of file 
 diff - - git a / test / com / sun / jna / MemoryTest . java b / test / com / sun / jna / MemoryTest . java 
 index 70ab1ab . . 8bc07f7 100644 
 - - - a / test / com / sun / jna / MemoryTest . java 
 + + + b / test / com / sun / jna / MemoryTest . java 
 @ @ - 111 , 9 + 111 , 17 @ @ public class MemoryTest extends TestCase { 
 if ( ! Platform . HAS _ BUFFERS ) return ; 
 
 Memory m = new Memory ( 1024 ) ; 
 + m . clear ( ) ; 
 + 
 ByteBuffer b = m . getByteBuffer ( 0 , m . size ( ) ) ; 
 WeakReference ref = new WeakReference ( m ) ; 
 WeakReference bref = new WeakReference ( b ) ; 
 + 
 + / / Create a second byte buffer " equal " to the first 
 + m = new Memory ( 1024 ) ; 
 + m . clear ( ) ; 
 + m . getByteBuffer ( 0 , m . size ( ) ) ; 
 + 
 m = null ; 
 System . gc ( ) ; 
 Memory . purge ( ) ;
