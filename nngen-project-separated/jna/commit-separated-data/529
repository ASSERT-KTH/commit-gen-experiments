BLEU SCORE: 0.05954672553679791

TEST MSG: remove deprecated methods
GENERATED MSG: provide memory alignment to Memory if requested

TEST DIFF (one line): diff - - git a / src / com / sun / jna / Memory . java b / src / com / sun / jna / Memory . java <nl> index 4db70c6 . . 3d6b300 100644 <nl> - - - a / src / com / sun / jna / Memory . java <nl> + + + b / src / com / sun / jna / Memory . java <nl> @ @ - 101 , 7 + 101 , 7 @ @ public class Memory extends Pointer { <nl> * the allocated bounds . <nl> * / <nl> public Pointer share ( long offset ) { <nl> - return share ( offset , getSize ( ) - offset ) ; <nl> + return share ( offset , size ( ) - offset ) ; <nl> } <nl> <nl> / * * Provide a view of this memory using the given offset as the base <nl> @ @ - 162 , 11 + 162 , 6 @ @ public class Memory extends Pointer { <nl> clear ( size ) ; <nl> } <nl> <nl> - / * * @ deprecated use { @ link # valid ( ) } instead . * / <nl> - public boolean isValid ( ) { <nl> - return valid ( ) ; <nl> - } <nl> - <nl> / * * Returns false if the memory has been freed . * / <nl> public boolean valid ( ) { <nl> return peer ! = 0 ; <nl> @ @ - 176 , 12 + 171 , 6 @ @ public class Memory extends Pointer { <nl> return size ; <nl> } <nl> <nl> - / * * @ deprecated use { @ link # size ( ) } instead . * / <nl> - public long getSize ( ) { <nl> - return size ( ) ; <nl> - } <nl> - <nl> - <nl> / * * <nl> * Check that indirection won ' t cause us to write outside the <nl> * malloc ' ed space .
NEAREST DIFF (one line): diff - - git a / jnalib / build . xml b / jnalib / build . xml <nl> index a49385f . . 5ebee7f 100644 <nl> - - - a / jnalib / build . xml <nl> + + + b / jnalib / build . xml <nl> @ @ - 29 , 8 + 29 , 11 @ @ <nl> < property name = " copyright " <nl> value = " Copyright & amp ; copy ; 2007 $ { company . full } . All Rights Reserved . " / > <nl> <nl> - < ! - - Software release version - - > <nl> - < property name = " version " value = " 3 . 0 " / > <nl> + < ! - - JNA library release version - - > <nl> + < property name = " jna . version " value = " 3 . 0 " / > <nl> + < ! - - jnidispatch library release version - - > <nl> + < property name = " jni . version " value = " 3 . 0 " / > <nl> + < property name = " jni . md5 " value = " 919a2e1a9c6e903c36cd61886e23f221 " / > <nl> < property name = " compatibility " value = " 1 . 4 " / > <nl> < property name = " test . compatibility " value = " 1 . 5 " / > <nl> <nl> @ @ - 41 , 7 + 44 , 7 @ @ <nl> <nl> < target name = " - dynamic - properties " > <nl> < echo > Java version : $ { java . version } , compatibility : $ { compatibility } < / echo > <nl> - < echo > Build $ { version } < / echo > <nl> + < echo > JNA version $ { jna . version } , native API version $ { jni . version } < / echo > <nl> < property name = " build " value = " build " / > <nl> < property name = " classes " location = " $ { build } / classes " / > <nl> < property name = " eclipse . classes " location = " build . eclipse / classes " / > <nl> @ @ - 139 , 9 + 142 , 10 @ @ <nl> < jar jarfile = " $ { build } / $ { jar } " > <nl> < manifest > <nl> < attribute name = " Implementation - Vendor " value = " $ { company . full } " / > <nl> - < attribute name = " Implementation - Version " value = " $ { version } " / > <nl> + < attribute name = " Implementation - Version " value = " $ { jna . version } " / > <nl> < attribute name = " Specification - Vendor " value = " $ { company . full } " / > <nl> - < attribute name = " Specification - Version " value = " $ { version } " / > <nl> + < attribute name = " Specification - Version " value = " $ { jna . version } " / > <nl> + < attribute name = " Native - Version " value = " $ { jni . version } " / > <nl> < / manifest > <nl> < fileset dir = " $ { classes } " > < patternset refid = " jar - compiled " / > < / fileset > <nl> < / jar > <nl> @ @ - 167 , 9 + 171 , 28 @ @ <nl> < class name = " com . sun . jna . NativeLibrary " / > <nl> < class name = " com . sun . jna . CallbackReference " / > <nl> < / javah > <nl> + < checksum totalproperty = " md5 " > <nl> + < fileset dir = " $ { build . native } " includes = " * . h " / > <nl> + < / checksum > <nl> + < condition property = " jni . valid " value = " true " > <nl> + < equals arg1 = " $ { jni . md5 } " arg2 = " $ { md5 } " trim = " true " / > <nl> + < / condition > <nl> + < / target > <nl> + <nl> + < ! - - Invalidate native libraries when native API changes - - > <nl> + < target name = " - native - checksum " depends = " javah " unless = " jni . valid " > <nl> + < echo > Invalidating native stubs , new checksum is $ { md5 } < / echo > <nl> + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / darwin . jar " overwrite = " true " / > <nl> + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / win32 - x86 . jar " overwrite = " true " / > <nl> + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / linux - i386 . jar " overwrite = " true " / > <nl> + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / linux - amd64 . jar " overwrite = " true " / > <nl> + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / freebsd - i386 . jar " overwrite = " true " / > <nl> + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / sunos - x86 . jar " overwrite = " true " / > <nl> + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / sunos - sparc . jar " overwrite = " true " / > <nl> + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / sunos - sparcv9 . jar " overwrite = " true " / > <nl> < / target > <nl> <nl> - < target name = " native " depends = " - setup , javah " <nl> + < target name = " native " depends = " - setup , javah , - native - checksum " <nl> description = " Build native libraries . Use ' ant - DCC = xxx ' to build using a compiler other than gcc " > <nl> < ! - - ensure ARCH is set properly for various platforms - - > <nl> < ! - - ARCH is used in native / Makefile to find the JAWT library - - > <nl> @ @ - 217 , 7 + 240 , 7 @ @ <nl> < arg value = " $ { make . SDKROOT } " / > <nl> < arg value = " $ { make . ARCH } " / > <nl> < arg value = " $ { make . PATH } " / > <nl> - < arg value = " VERSION = $ { version } " / > <nl> + < arg value = " VERSION = $ { jna . version } " / > <nl> < / exec > <nl> < mkdir dir = " $ { classes } / com / sun / jna / $ { os . prefix } " / > <nl> < copy todir = " $ { classes } / com / sun / jna / $ { os . prefix } " > <nl> @ @ - 229 , 10 + 252 , 17 @ @ <nl> < fileset dir = " $ { build . native } " <nl> includes = " jnidispatch . dll , libjnidispatch . * " / > <nl> < / copy > <nl> - < ! - - For web start , native libraries need to be in a separate jar file - - > <nl> - < ! - - at the root - - > <nl> + < ! - - For web start , native libraries may be provided in the root of - - > <nl> + < ! - - an included jar file - - > <nl> < jar jarfile = " $ { build } / $ { native . jar } " > <nl> < fileset dir = " $ { build . native } " includes = " jnidispatch . dll , libjnidispatch . * " / > <nl> + < manifest > <nl> + < attribute name = " Implementation - Vendor " value = " $ { company . full } " / > <nl> + < attribute name = " Implementation - Version " value = " $ { jni . version } " / > <nl> + < attribute name = " Specification - Vendor " value = " $ { company . full } " / > <nl> + < attribute name = " Specification - Version " value = " $ { jni . version } " / > <nl> + < attribute name = " Native - Version " value = " $ { jni . version } " / > <nl> + < / manifest > <nl> < / jar > <nl> < / target > <nl> <nl> @ @ - 318 , 7 + 348 , 7 @ @ <nl> <nl> < target name = " javadoc " depends = " - setup " > <nl> < property name = " header " <nl> - value = " & lt ; b & gt ; JNA API & lt ; / & gt ; & lt ; font size = & quot ; - 1 & quot ; & gt ; $ { version } & lt ; / font & gt ; " / > <nl> + value = " & lt ; b & gt ; JNA API & lt ; / & gt ; & lt ; font size = & quot ; - 1 & quot ; & gt ; $ { jna . version } & lt ; / font & gt ; " / > <nl> < property name = " footer " <nl> value = " & lt ; center & gt ; & lt ; i & gt ; $ { copyright } & lt ; / i & gt ; & lt ; / center & gt ; " / > <nl> <nl> @ @ - 365 , 8 + 395 , 6 @ @ <nl> < zipfileset src = " $ { dist } / linux - i386 . jar " <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / linux - i386 " / > <nl> - < ! - - These are disabled until updated for 3 . 0 - - > <nl> - < ! - - <nl> < zipfileset src = " $ { dist } / linux - amd64 . jar " <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / linux - amd64 " / > <nl> @ @ - 379 , 7 + 407 , 6 @ @ <nl> < zipfileset src = " $ { dist } / sunos - sparcv9 . jar " <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / sunos - sparcv9 " / > <nl> - - - > <nl> < zipfileset src = " $ { dist } / freebsd - i386 . jar " <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / freebsd - i386 " / > <nl> diff - - git a / jnalib / release - notes . txt b / jnalib / release - notes . txt <nl> index 044bb00 . . 7d10607 100755 <nl> - - - a / jnalib / release - notes . txt <nl> + + + b / jnalib / release - notes . txt <nl> @ @ - 20 , 7 + 20 , 8 @ @ Features <nl> * Explicit access to share library global data <nl> * Invocation interception to facilitate translation of C preprocessor macros <nl> and inline functions <nl> - * Provide utility to determine Web Start native library cache location <nl> + * Provide utility to determine Web Start native library cache location ; <nl> + auto - include this path if jnidispatch is included as a < nativelib > <nl> * Provide memory alignment <nl> <nl> Bug Fixes <nl> diff - - git a / jnalib / src / com / sun / jna / NativeLibrary . java b / jnalib / src / com / sun / jna / NativeLibrary . java <nl> index 95848c9 . . 6b690fd 100644 <nl> - - - a / jnalib / src / com / sun / jna / NativeLibrary . java <nl> + + + b / jnalib / src / com / sun / jna / NativeLibrary . java <nl> @ @ - 373 , 6 + 373 , 10 @ @ public class NativeLibrary { <nl> static { <nl> <nl> librarySearchPath . addAll ( initPaths ( " jna . library . path " ) ) ; <nl> + String webstartPath = Native . getWebStartLibraryPath ( " jnidispatch " ) ; <nl> + if ( webstartPath ! = null ) { <nl> + librarySearchPath . add ( webstartPath ) ; <nl> + } <nl> if ( System . getProperty ( " jna . platform . library . path " ) = = null <nl> & & ! Platform . isWindows ( ) ) { <nl> / / Add default path lookups for unix - like systems

TEST DIFF:
diff - - git a / src / com / sun / jna / Memory . java b / src / com / sun / jna / Memory . java 
 index 4db70c6 . . 3d6b300 100644 
 - - - a / src / com / sun / jna / Memory . java 
 + + + b / src / com / sun / jna / Memory . java 
 @ @ - 101 , 7 + 101 , 7 @ @ public class Memory extends Pointer { 
 * the allocated bounds . 
 * / 
 public Pointer share ( long offset ) { 
 - return share ( offset , getSize ( ) - offset ) ; 
 + return share ( offset , size ( ) - offset ) ; 
 } 
 
 / * * Provide a view of this memory using the given offset as the base 
 @ @ - 162 , 11 + 162 , 6 @ @ public class Memory extends Pointer { 
 clear ( size ) ; 
 } 
 
 - / * * @ deprecated use { @ link # valid ( ) } instead . * / 
 - public boolean isValid ( ) { 
 - return valid ( ) ; 
 - } 
 - 
 / * * Returns false if the memory has been freed . * / 
 public boolean valid ( ) { 
 return peer ! = 0 ; 
 @ @ - 176 , 12 + 171 , 6 @ @ public class Memory extends Pointer { 
 return size ; 
 } 
 
 - / * * @ deprecated use { @ link # size ( ) } instead . * / 
 - public long getSize ( ) { 
 - return size ( ) ; 
 - } 
 - 
 - 
 / * * 
 * Check that indirection won ' t cause us to write outside the 
 * malloc ' ed space .

NEAREST DIFF:
diff - - git a / jnalib / build . xml b / jnalib / build . xml 
 index a49385f . . 5ebee7f 100644 
 - - - a / jnalib / build . xml 
 + + + b / jnalib / build . xml 
 @ @ - 29 , 8 + 29 , 11 @ @ 
 < property name = " copyright " 
 value = " Copyright & amp ; copy ; 2007 $ { company . full } . All Rights Reserved . " / > 
 
 - < ! - - Software release version - - > 
 - < property name = " version " value = " 3 . 0 " / > 
 + < ! - - JNA library release version - - > 
 + < property name = " jna . version " value = " 3 . 0 " / > 
 + < ! - - jnidispatch library release version - - > 
 + < property name = " jni . version " value = " 3 . 0 " / > 
 + < property name = " jni . md5 " value = " 919a2e1a9c6e903c36cd61886e23f221 " / > 
 < property name = " compatibility " value = " 1 . 4 " / > 
 < property name = " test . compatibility " value = " 1 . 5 " / > 
 
 @ @ - 41 , 7 + 44 , 7 @ @ 
 
 < target name = " - dynamic - properties " > 
 < echo > Java version : $ { java . version } , compatibility : $ { compatibility } < / echo > 
 - < echo > Build $ { version } < / echo > 
 + < echo > JNA version $ { jna . version } , native API version $ { jni . version } < / echo > 
 < property name = " build " value = " build " / > 
 < property name = " classes " location = " $ { build } / classes " / > 
 < property name = " eclipse . classes " location = " build . eclipse / classes " / > 
 @ @ - 139 , 9 + 142 , 10 @ @ 
 < jar jarfile = " $ { build } / $ { jar } " > 
 < manifest > 
 < attribute name = " Implementation - Vendor " value = " $ { company . full } " / > 
 - < attribute name = " Implementation - Version " value = " $ { version } " / > 
 + < attribute name = " Implementation - Version " value = " $ { jna . version } " / > 
 < attribute name = " Specification - Vendor " value = " $ { company . full } " / > 
 - < attribute name = " Specification - Version " value = " $ { version } " / > 
 + < attribute name = " Specification - Version " value = " $ { jna . version } " / > 
 + < attribute name = " Native - Version " value = " $ { jni . version } " / > 
 < / manifest > 
 < fileset dir = " $ { classes } " > < patternset refid = " jar - compiled " / > < / fileset > 
 < / jar > 
 @ @ - 167 , 9 + 171 , 28 @ @ 
 < class name = " com . sun . jna . NativeLibrary " / > 
 < class name = " com . sun . jna . CallbackReference " / > 
 < / javah > 
 + < checksum totalproperty = " md5 " > 
 + < fileset dir = " $ { build . native } " includes = " * . h " / > 
 + < / checksum > 
 + < condition property = " jni . valid " value = " true " > 
 + < equals arg1 = " $ { jni . md5 } " arg2 = " $ { md5 } " trim = " true " / > 
 + < / condition > 
 + < / target > 
 + 
 + < ! - - Invalidate native libraries when native API changes - - > 
 + < target name = " - native - checksum " depends = " javah " unless = " jni . valid " > 
 + < echo > Invalidating native stubs , new checksum is $ { md5 } < / echo > 
 + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / darwin . jar " overwrite = " true " / > 
 + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / win32 - x86 . jar " overwrite = " true " / > 
 + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / linux - i386 . jar " overwrite = " true " / > 
 + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / linux - amd64 . jar " overwrite = " true " / > 
 + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / freebsd - i386 . jar " overwrite = " true " / > 
 + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / sunos - x86 . jar " overwrite = " true " / > 
 + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / sunos - sparc . jar " overwrite = " true " / > 
 + < copy file = " $ { dist } / out - of - date . jar " tofile = " $ { dist } / sunos - sparcv9 . jar " overwrite = " true " / > 
 < / target > 
 
 - < target name = " native " depends = " - setup , javah " 
 + < target name = " native " depends = " - setup , javah , - native - checksum " 
 description = " Build native libraries . Use ' ant - DCC = xxx ' to build using a compiler other than gcc " > 
 < ! - - ensure ARCH is set properly for various platforms - - > 
 < ! - - ARCH is used in native / Makefile to find the JAWT library - - > 
 @ @ - 217 , 7 + 240 , 7 @ @ 
 < arg value = " $ { make . SDKROOT } " / > 
 < arg value = " $ { make . ARCH } " / > 
 < arg value = " $ { make . PATH } " / > 
 - < arg value = " VERSION = $ { version } " / > 
 + < arg value = " VERSION = $ { jna . version } " / > 
 < / exec > 
 < mkdir dir = " $ { classes } / com / sun / jna / $ { os . prefix } " / > 
 < copy todir = " $ { classes } / com / sun / jna / $ { os . prefix } " > 
 @ @ - 229 , 10 + 252 , 17 @ @ 
 < fileset dir = " $ { build . native } " 
 includes = " jnidispatch . dll , libjnidispatch . * " / > 
 < / copy > 
 - < ! - - For web start , native libraries need to be in a separate jar file - - > 
 - < ! - - at the root - - > 
 + < ! - - For web start , native libraries may be provided in the root of - - > 
 + < ! - - an included jar file - - > 
 < jar jarfile = " $ { build } / $ { native . jar } " > 
 < fileset dir = " $ { build . native } " includes = " jnidispatch . dll , libjnidispatch . * " / > 
 + < manifest > 
 + < attribute name = " Implementation - Vendor " value = " $ { company . full } " / > 
 + < attribute name = " Implementation - Version " value = " $ { jni . version } " / > 
 + < attribute name = " Specification - Vendor " value = " $ { company . full } " / > 
 + < attribute name = " Specification - Version " value = " $ { jni . version } " / > 
 + < attribute name = " Native - Version " value = " $ { jni . version } " / > 
 + < / manifest > 
 < / jar > 
 < / target > 
 
 @ @ - 318 , 7 + 348 , 7 @ @ 
 
 < target name = " javadoc " depends = " - setup " > 
 < property name = " header " 
 - value = " & lt ; b & gt ; JNA API & lt ; / & gt ; & lt ; font size = & quot ; - 1 & quot ; & gt ; $ { version } & lt ; / font & gt ; " / > 
 + value = " & lt ; b & gt ; JNA API & lt ; / & gt ; & lt ; font size = & quot ; - 1 & quot ; & gt ; $ { jna . version } & lt ; / font & gt ; " / > 
 < property name = " footer " 
 value = " & lt ; center & gt ; & lt ; i & gt ; $ { copyright } & lt ; / i & gt ; & lt ; / center & gt ; " / > 
 
 @ @ - 365 , 8 + 395 , 6 @ @ 
 < zipfileset src = " $ { dist } / linux - i386 . jar " 
 includes = " * jnidispatch * " 
 prefix = " com / sun / jna / linux - i386 " / > 
 - < ! - - These are disabled until updated for 3 . 0 - - > 
 - < ! - - 
 < zipfileset src = " $ { dist } / linux - amd64 . jar " 
 includes = " * jnidispatch * " 
 prefix = " com / sun / jna / linux - amd64 " / > 
 @ @ - 379 , 7 + 407 , 6 @ @ 
 < zipfileset src = " $ { dist } / sunos - sparcv9 . jar " 
 includes = " * jnidispatch * " 
 prefix = " com / sun / jna / sunos - sparcv9 " / > 
 - - - > 
 < zipfileset src = " $ { dist } / freebsd - i386 . jar " 
 includes = " * jnidispatch * " 
 prefix = " com / sun / jna / freebsd - i386 " / > 
 diff - - git a / jnalib / release - notes . txt b / jnalib / release - notes . txt 
 index 044bb00 . . 7d10607 100755 
 - - - a / jnalib / release - notes . txt 
 + + + b / jnalib / release - notes . txt 
 @ @ - 20 , 7 + 20 , 8 @ @ Features 
 * Explicit access to share library global data 
 * Invocation interception to facilitate translation of C preprocessor macros 
 and inline functions 
 - * Provide utility to determine Web Start native library cache location 
 + * Provide utility to determine Web Start native library cache location ; 
 + auto - include this path if jnidispatch is included as a < nativelib > 
 * Provide memory alignment 
 
 Bug Fixes 
 diff - - git a / jnalib / src / com / sun / jna / NativeLibrary . java b / jnalib / src / com / sun / jna / NativeLibrary . java 
 index 95848c9 . . 6b690fd 100644 
 - - - a / jnalib / src / com / sun / jna / NativeLibrary . java 
 + + + b / jnalib / src / com / sun / jna / NativeLibrary . java 
 @ @ - 373 , 6 + 373 , 10 @ @ public class NativeLibrary { 
 static { 
 
 librarySearchPath . addAll ( initPaths ( " jna . library . path " ) ) ; 
 + String webstartPath = Native . getWebStartLibraryPath ( " jnidispatch " ) ; 
 + if ( webstartPath ! = null ) { 
 + librarySearchPath . add ( webstartPath ) ; 
 + } 
 if ( System . getProperty ( " jna . platform . library . path " ) = = null 
 & & ! Platform . isWindows ( ) ) { 
 / / Add default path lookups for unix - like systems
