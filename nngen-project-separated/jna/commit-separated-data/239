BLEU SCORE: 0.018738883683389617

TEST MSG: Add host _ processor _ info to Mac System B library
GENERATED MSG: added some test

TEST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 26dd51b . . 6a7b27a 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 8 , 6 + 8 , 7 @ @ Next Release ( 4 . 2 . 1 ) <nl> Features <nl> - - - - - - - - <nl> * [ # 510 ] ( https : / / github . com / java - native - access / jna / pull / 510 ) : Added ` GetCommState ` , ` GetCommTimeouts ` ` SetCommState ` and ` SetCommTimeouts ` to ` com . sun . jna . platform . win32 . Kernel32 ` . Added ` DCB ` structure to ` com . sun . jna . platform . win32 . WinBase ` - [ @ MBollig ] ( https : / / github . com / MBollig ) <nl> + * [ # 514 ] ( https : / / github . com / java - native - access / jna / pull / 514 ) : Added ` host _ processor _ info ` to ` com . sun . jna . platform . mac . SystemB ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java b / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java <nl> index 17cabfa . . 8c35301 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . LongByReference ; <nl> + import com . sun . jna . ptr . PointerByReference ; <nl> <nl> / * * <nl> * Author : Daniel Widdis Date : 6 / 5 / 15 <nl> @ @ - 50 , 6 + 51 , 10 @ @ public interface SystemB extends Library { <nl> static int CPU _ STATE _ IDLE = 2 ; <nl> static int CPU _ STATE _ NICE = 3 ; <nl> <nl> + / / host _ processor _ info ( ) flavor <nl> + static int PROCESSOR _ BASIC _ INFO = 1 ; <nl> + static int PROCESSOR _ CPU _ LOAD _ INFO = 2 ; <nl> + <nl> / / Data size <nl> static int UINT64 _ SIZE = Native . getNativeSize ( long . class ) ; <nl> static int INT _ SIZE = Native . getNativeSize ( int . class ) ; <nl> @ @ - 304 , 4 + 309 , 23 @ @ public interface SystemB extends Library { <nl> * @ return 0 on success ; sets errno on failure <nl> * / <nl> int sysctlnametomib ( String name , Pointer mibp , IntByReference size ) ; <nl> + <nl> + / * * <nl> + * The host _ processor _ info function returns information about processors . <nl> + * <nl> + * @ param machPort <nl> + * The control port for the host for which information is to be <nl> + * obtained . <nl> + * @ param flavor <nl> + * The type of information requested . <nl> + * @ param procCount <nl> + * Pointer to the number of processors <nl> + * @ param procInfo <nl> + * Pointer to the structure corresponding to the requested flavor <nl> + * @ param procInfoCount <nl> + * Pointer to number of elements in the returned structure <nl> + * @ return 0 on success ; sets errno on failure <nl> + * / <nl> + int host _ processor _ info ( int machPort , int flavor , IntByReference procCount , <nl> + PointerByReference procInfo , IntByReference procInfoCount ) ; <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java b / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java <nl> index d3ca829 . . d81b9ad 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java <nl> @ @ - 17 , 16 + 17 , 19 @ @ <nl> package com . sun . jna . platform . mac ; <nl> <nl> import junit . framework . TestCase ; <nl> + <nl> import com . sun . jna . platform . mac . SystemB . HostCpuLoadInfo ; <nl> import com . sun . jna . platform . mac . SystemB . HostLoadInfo ; <nl> import com . sun . jna . platform . mac . SystemB . VMStatistics ; <nl> import com . sun . jna . platform . mac . SystemB . VMStatistics64 ; <nl> <nl> import com . sun . jna . Memory ; <nl> + import com . sun . jna . Native ; <nl> import com . sun . jna . Platform ; <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . LongByReference ; <nl> + import com . sun . jna . ptr . PointerByReference ; <nl> <nl> / * * <nl> * Exercise the { @ link SystemB } class . <nl> @ @ - 134 , 6 + 137 , 23 @ @ public class SystemBTest extends TestCase { <nl> 	 	 assertTrue ( hostLoadInfo . avenrun [ 0 ] > 0 ) ; <nl> 	 } <nl> <nl> + 	 public void testHostProcessorInfo ( ) { <nl> + 	 	 int machPort = SystemB . INSTANCE . mach _ host _ self ( ) ; <nl> + 	 	 assertTrue ( machPort > 0 ) ; <nl> + <nl> + 	 	 IntByReference procCount = new IntByReference ( ) ; <nl> + 	 	 PointerByReference procCpuLoadInfo = new PointerByReference ( ) ; <nl> + 	 	 IntByReference procInfoCount = new IntByReference ( ) ; <nl> + 	 	 int ret = SystemB . INSTANCE . host _ processor _ info ( machPort , <nl> + 	 	 	 	 SystemB . PROCESSOR _ CPU _ LOAD _ INFO , procCount , procCpuLoadInfo , <nl> + 	 	 	 procInfoCount ) ; <nl> + 	 	 assertEquals ( ret , 0 ) ; <nl> + <nl> + 	 	 assertTrue ( procCount . getValue ( ) > 0 ) ; <nl> + 	 	 assertEquals ( procCpuLoadInfo . getValue ( ) . getIntArray ( 0 , <nl> + 	 	 	 	 procInfoCount . getValue ( ) ) . length , procInfoCount . getValue ( ) ) ; <nl> + 	 } <nl> + <nl> 	 public static void main ( java . lang . String [ ] argList ) { <nl> 	 	 junit . textui . TestRunner . run ( SystemBTest . class ) ; <nl> 	 }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 26dd51b . . 6a7b27a 100755 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 8 , 6 + 8 , 7 @ @ Next Release ( 4 . 2 . 1 ) 
 Features 
 - - - - - - - - 
 * [ # 510 ] ( https : / / github . com / java - native - access / jna / pull / 510 ) : Added ` GetCommState ` , ` GetCommTimeouts ` ` SetCommState ` and ` SetCommTimeouts ` to ` com . sun . jna . platform . win32 . Kernel32 ` . Added ` DCB ` structure to ` com . sun . jna . platform . win32 . WinBase ` - [ @ MBollig ] ( https : / / github . com / MBollig ) 
 + * [ # 514 ] ( https : / / github . com / java - native - access / jna / pull / 514 ) : Added ` host _ processor _ info ` to ` com . sun . jna . platform . mac . SystemB ` - [ @ dbwiddis ] ( https : / / github . com / dbwiddis ) 
 
 Bug Fixes 
 - - - - - - - - - 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java b / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java 
 index 17cabfa . . 8c35301 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / mac / SystemB . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import com . sun . jna . Pointer ; 
 import com . sun . jna . Structure ; 
 import com . sun . jna . ptr . IntByReference ; 
 import com . sun . jna . ptr . LongByReference ; 
 + import com . sun . jna . ptr . PointerByReference ; 
 
 / * * 
 * Author : Daniel Widdis Date : 6 / 5 / 15 
 @ @ - 50 , 6 + 51 , 10 @ @ public interface SystemB extends Library { 
 static int CPU _ STATE _ IDLE = 2 ; 
 static int CPU _ STATE _ NICE = 3 ; 
 
 + / / host _ processor _ info ( ) flavor 
 + static int PROCESSOR _ BASIC _ INFO = 1 ; 
 + static int PROCESSOR _ CPU _ LOAD _ INFO = 2 ; 
 + 
 / / Data size 
 static int UINT64 _ SIZE = Native . getNativeSize ( long . class ) ; 
 static int INT _ SIZE = Native . getNativeSize ( int . class ) ; 
 @ @ - 304 , 4 + 309 , 23 @ @ public interface SystemB extends Library { 
 * @ return 0 on success ; sets errno on failure 
 * / 
 int sysctlnametomib ( String name , Pointer mibp , IntByReference size ) ; 
 + 
 + / * * 
 + * The host _ processor _ info function returns information about processors . 
 + * 
 + * @ param machPort 
 + * The control port for the host for which information is to be 
 + * obtained . 
 + * @ param flavor 
 + * The type of information requested . 
 + * @ param procCount 
 + * Pointer to the number of processors 
 + * @ param procInfo 
 + * Pointer to the structure corresponding to the requested flavor 
 + * @ param procInfoCount 
 + * Pointer to number of elements in the returned structure 
 + * @ return 0 on success ; sets errno on failure 
 + * / 
 + int host _ processor _ info ( int machPort , int flavor , IntByReference procCount , 
 + PointerByReference procInfo , IntByReference procInfoCount ) ; 
 } 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java b / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java 
 index d3ca829 . . d81b9ad 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / mac / SystemBTest . java 
 @ @ - 17 , 16 + 17 , 19 @ @ 
 package com . sun . jna . platform . mac ; 
 
 import junit . framework . TestCase ; 
 + 
 import com . sun . jna . platform . mac . SystemB . HostCpuLoadInfo ; 
 import com . sun . jna . platform . mac . SystemB . HostLoadInfo ; 
 import com . sun . jna . platform . mac . SystemB . VMStatistics ; 
 import com . sun . jna . platform . mac . SystemB . VMStatistics64 ; 
 
 import com . sun . jna . Memory ; 
 + import com . sun . jna . Native ; 
 import com . sun . jna . Platform ; 
 import com . sun . jna . Pointer ; 
 import com . sun . jna . ptr . IntByReference ; 
 import com . sun . jna . ptr . LongByReference ; 
 + import com . sun . jna . ptr . PointerByReference ; 
 
 / * * 
 * Exercise the { @ link SystemB } class . 
 @ @ - 134 , 6 + 137 , 23 @ @ public class SystemBTest extends TestCase { 
 	 	 assertTrue ( hostLoadInfo . avenrun [ 0 ] > 0 ) ; 
 	 } 
 
 + 	 public void testHostProcessorInfo ( ) { 
 + 	 	 int machPort = SystemB . INSTANCE . mach _ host _ self ( ) ; 
 + 	 	 assertTrue ( machPort > 0 ) ; 
 + 
 + 	 	 IntByReference procCount = new IntByReference ( ) ; 
 + 	 	 PointerByReference procCpuLoadInfo = new PointerByReference ( ) ; 
 + 	 	 IntByReference procInfoCount = new IntByReference ( ) ; 
 + 	 	 int ret = SystemB . INSTANCE . host _ processor _ info ( machPort , 
 + 	 	 	 	 SystemB . PROCESSOR _ CPU _ LOAD _ INFO , procCount , procCpuLoadInfo , 
 + 	 	 	 procInfoCount ) ; 
 + 	 	 assertEquals ( ret , 0 ) ; 
 + 
 + 	 	 assertTrue ( procCount . getValue ( ) > 0 ) ; 
 + 	 	 assertEquals ( procCpuLoadInfo . getValue ( ) . getIntArray ( 0 , 
 + 	 	 	 	 procInfoCount . getValue ( ) ) . length , procInfoCount . getValue ( ) ) ; 
 + 	 } 
 + 
 	 public static void main ( java . lang . String [ ] argList ) { 
 	 	 junit . textui . TestRunner . run ( SystemBTest . class ) ; 
 	 }

NEAREST DIFF:
ELIMINATEDSENTENCE
