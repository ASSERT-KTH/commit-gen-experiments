BLEU SCORE: 0.06220117374063391

TEST MSG: add symlink creation timeout
GENERATED MSG: Implement mac move to trash

TEST DIFF (one line): diff - - git a / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java b / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java <nl> index a08c2a9 . . 4c34d4f 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java <nl> @ @ - 55 , 6 + 55 , 14 @ @ public class FileUtilsTest extends TestCase { <nl> File symlink = new File ( tmpdir , file . getName ( ) + " . link " ) ; <nl> try { <nl> Runtime . getRuntime ( ) . exec ( new String [ ] { " ln " , " - s " , file . getAbsolutePath ( ) , symlink . getAbsolutePath ( ) } ) ; <nl> + / / OSX 10 . 8 needs a little time for the symlink to register <nl> + long start = System . currentTimeMillis ( ) ; <nl> + while ( ! file . exists ( ) | | ! symlink . exists ( ) ) { <nl> + Thread . sleep ( 100 ) ; <nl> + if ( System . currentTimeMillis ( ) - start > 5000 ) { <nl> + break ; <nl> + } <nl> + } <nl> assertTrue ( " Original source file missing : " + file , file . exists ( ) ) ; <nl> assertTrue ( " Symlink creation failed ( missing ) : " + symlink , symlink . exists ( ) ) ; <nl> try {
NEAREST DIFF (one line): diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> index 93ec62d . . 654391c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java <nl> @ @ - 10 , 7 + 10 , 7 @ @ <nl> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> * Lesser General Public License for more details . <nl> * / <nl> - package com . sun . jna . platform . win32 ; <nl> + package com . sun . jna . platform . win32 ; <nl> <nl> import java . util . ArrayList ; <nl> import java . util . List ; <nl> @ @ - 64 , 9 + 64 , 8 @ @ public abstract class Kernel32Util { <nl> 	 throw new LastErrorException ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> } 	 <nl> 	 String s = buffer . getValue ( ) . getString ( 0 , ! Boolean . getBoolean ( " w32 . ascii " ) ) ; <nl> - 	 s = s . replace ( " . \ r " , " . " ) . replace ( " . \ n " , " . " ) ; <nl> 	 Kernel32 . INSTANCE . LocalFree ( buffer . getValue ( ) ) ; <nl> - 	 return s ; 	 	 <nl> + 	 return s . trim ( ) ; 	 	 <nl> 	 } <nl> 	 <nl> 	 / * * <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / LMAccess . java b / contrib / platform / src / com / sun / jna / platform / win32 / LMAccess . java <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Netapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Netapi32 . java <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Netapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Netapi32Util . java <nl> old mode 100755 <nl> new mode 100644 <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> old mode 100755 <nl> new mode 100644 <nl> index b2995b2 . . 8609268 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 325 , 6 + 325 , 7 @ @ public interface WinNT extends StdCallLibrary { <nl> <nl> 	 public PSID ( Pointer memory ) { <nl> 	 super ( memory ) ; <nl> + read ( ) ; <nl> 	 } <nl> <nl> 	 public byte [ ] getBytes ( ) { <nl> @ @ - 1872 , 40 + 1873 , 10 @ @ public interface WinNT extends StdCallLibrary { <nl> 	 public byte [ ] data ; <nl> } <nl> <nl> - public static class PACL extends Structure { <nl> - 	 public static class ByReference extends PACL implements Structure . ByReference { <nl> - 	 } <nl> - <nl> - 	 public PACL ( ) { <nl> - 	 } <nl> - <nl> - 	 public PACL ( byte [ ] data ) { <nl> - 	 super ( ) ; <nl> - 	 Memory memory = new Memory ( data . length ) ; <nl> - 	 memory . write ( 0 , data , 0 , data . length ) ; <nl> - 	 useMemory ( memory ) ; <nl> - 	 read ( ) ; <nl> - 	 } <nl> - <nl> - 	 public PACL ( int size ) { <nl> - 	 super ( new Memory ( size ) ) ; <nl> - 	 } <nl> - <nl> - 	 public PACL ( Pointer memory ) { <nl> - 	 super ( memory ) ; <nl> - 	 } <nl> - <nl> - 	 public byte [ ] getBytes ( ) { <nl> - 	 int len = 0 ; <nl> - 	 return getPointer ( ) . getByteArray ( 0 , len ) ; <nl> - 	 } <nl> - <nl> - 	 public Pointer acl ; 	 	 <nl> - } <nl> - <nl> public static class ACL extends Structure { <nl> + public ACL ( ) { } <nl> 	 public ACL ( Pointer pointer ) { <nl> - 	 useMemory ( pointer ) ; <nl> + 	 super ( pointer ) ; <nl> 	 read ( ) ; <nl> 	 ACEs = new ACCESS _ ACEStructure [ AceCount ] ; <nl> 	 int offset = size ( ) ; <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> index c46ae02 . . 341c4c5 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> @ @ - 46 , 6 + 46 , 9 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> * / <nl> public class Advapi32Test extends TestCase { <nl> <nl> + private static final String EVERYONE = " S - 1 - 1 - 0 " ; <nl> + private static final String NOBODY = " S - 1 - 0 - 0 " ; <nl> + <nl> public static void main ( String [ ] args ) { <nl> junit . textui . TestRunner . run ( Advapi32Test . class ) ; <nl> } <nl> @ @ - 79 , 25 + 82 , 25 @ @ public class Advapi32Test extends TestCase { <nl> } <nl> <nl> public void testIsValidSid ( ) { <nl> - 	 String sidString = " S - 1 - 1 - 0 " ; / / Everyone <nl> + 	 String sidString = EVERYONE ; <nl> 	 PSIDByReference sid = new PSIDByReference ( ) ; <nl> - 	 assertTrue ( Advapi32 . INSTANCE . ConvertStringSidToSid ( sidString , sid ) ) ; <nl> - 	 assertTrue ( Advapi32 . INSTANCE . IsValidSid ( sid . getValue ( ) ) ) ; <nl> + 	 assertTrue ( " SID conversion failed " , Advapi32 . INSTANCE . ConvertStringSidToSid ( sidString , sid ) ) ; <nl> + 	 assertTrue ( " Converted SID not valid : " + sid . getValue ( ) , Advapi32 . INSTANCE . IsValidSid ( sid . getValue ( ) ) ) ; <nl> 	 int sidLength = Advapi32 . INSTANCE . GetLengthSid ( sid . getValue ( ) ) ; <nl> 	 assertTrue ( sidLength > 0 ) ; <nl> 	 assertTrue ( Advapi32 . INSTANCE . IsValidSid ( sid . getValue ( ) ) ) ; <nl> } <nl> <nl> public void testGetSidLength ( ) { <nl> - 	 String sidString = " S - 1 - 1 - 0 " ; / / Everyone <nl> + 	 String sidString = EVERYONE ; <nl> 	 PSIDByReference sid = new PSIDByReference ( ) ; <nl> - 	 assertTrue ( Advapi32 . INSTANCE . ConvertStringSidToSid ( sidString , sid ) ) ; <nl> - 	 assertTrue ( 12 = = Advapi32 . INSTANCE . GetLengthSid ( sid . getValue ( ) ) ) ; <nl> + 	 assertTrue ( " SID conversion failed " , Advapi32 . INSTANCE . ConvertStringSidToSid ( sidString , sid ) ) ; <nl> + 	 assertEquals ( " Wrong SID lenght " , 12 , Advapi32 . INSTANCE . GetLengthSid ( sid . getValue ( ) ) ) ; <nl> } <nl> <nl> public void testLookupAccountSid ( ) { <nl> 	 / / get SID bytes <nl> - 	 String sidString = " S - 1 - 1 - 0 " ; / / Everyone <nl> + 	 String sidString = EVERYONE ; <nl> 	 PSIDByReference sid = new PSIDByReference ( ) ; <nl> 	 assertTrue ( Advapi32 . INSTANCE . ConvertStringSidToSid ( sidString , sid ) ) ; <nl> 	 int sidLength = Advapi32 . INSTANCE . GetLengthSid ( sid . getValue ( ) ) ; <nl> @ @ - 125 , 7 + 128 , 7 @ @ public class Advapi32Test extends TestCase { <nl> } <nl> <nl> public void testConvertSid ( ) { <nl> - 	 String sidString = " S - 1 - 1 - 0 " ; / / Everyone <nl> + 	 String sidString = EVERYONE ; <nl> 	 PSIDByReference sid = new PSIDByReference ( ) ; <nl> 	 assertTrue ( Advapi32 . INSTANCE . ConvertStringSidToSid ( <nl> 	 	 	 sidString , sid ) ) ; <nl> @ @ - 472 , 7 + 475 , 7 @ @ public class Advapi32Test extends TestCase { <nl> } <nl> <nl> public void testIsWellKnownSid ( ) { <nl> - 	 String sidString = " S - 1 - 1 - 0 " ; / / Everyone <nl> + 	 String sidString = EVERYONE ; <nl> 	 PSIDByReference sid = new PSIDByReference ( ) ; <nl> 	 assertTrue ( Advapi32 . INSTANCE . ConvertStringSidToSid ( sidString , sid ) ) ; <nl> 	 assertTrue ( Advapi32 . INSTANCE . IsWellKnownSid ( sid . getValue ( ) , <nl> @ @ - 493 , 7 + 496 , 7 @ @ public class Advapi32Test extends TestCase { <nl> 	 assertTrue ( Advapi32 . INSTANCE . ConvertSidToStringSid ( <nl> 	 	 	 pSid , convertedSidStringPtr ) ) ; <nl> 	 String convertedSidString = convertedSidStringPtr . getValue ( ) . getString ( 0 , true ) ; <nl> - 	 assertEquals ( " S - 1 - 1 - 0 " , convertedSidString ) ; <nl> + 	 assertEquals ( EVERYONE , convertedSidString ) ; <nl> } <nl> <nl> public void testOpenEventLog ( ) { <nl> @ @ - 609 , 6 + 612 , 7 @ @ public class Advapi32Test extends TestCase { <nl> rc = Kernel32 . INSTANCE . GetLastError ( ) ; <nl> if ( rc = = W32Errors . ERROR _ INSUFFICIENT _ BUFFER ) { <nl> buffer = new Memory ( pnMinNumberOfBytesNeeded . getValue ( ) ) ; <nl> + rc = 0 ; <nl> continue ; <nl> } 	 	 	 <nl> break ; <nl> @ @ - 628 , 7 + 632 , 8 @ @ public class Advapi32Test extends TestCase { <nl> pevlr = pevlr . share ( record . Length . intValue ( ) ) ; <nl> } <nl> 	 } <nl> - assertTrue ( " Unexpected error after reading event log : " + rc , <nl> + assertTrue ( " Unexpected error after reading event log : " <nl> + + new Win32Exception ( rc ) , <nl> rc = = W32Errors . ERROR _ HANDLE _ EOF | | rc = = 0 ) ; <nl> assertTrue ( " Error closing event log " , <nl> Advapi32 . INSTANCE . CloseEventLog ( h ) ) ; 	 <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> old mode 100755 <nl> new mode 100644 <nl> index 8064b40 . . 52186eb <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java <nl> @ @ - 113 , 8 + 113 , 9 @ @ public class Advapi32UtilTest extends TestCase { <nl> 	 userInfo . usri1 _ password = new WString ( " ! JNAP $ $ Wrd0 " ) ; <nl> 	 userInfo . usri1 _ priv = LMAccess . USER _ PRIV _ USER ; <nl> 	 	 try { <nl> - 	 	 assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserAdd ( <nl> - 	 	 	 	 null , 1 , userInfo , null ) ) ; <nl> + assertEquals ( " Error in NetUserAdd " , <nl> + LMErr . NERR _ Success , <nl> + Netapi32 . INSTANCE . NetUserAdd ( null , 1 , userInfo , null ) ) ; <nl> 	 	 	 HANDLEByReference phUser = new HANDLEByReference ( ) ; <nl> 	 	 	 try { <nl> 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , <nl> @ @ - 133 , 8 + 134 , 9 @ @ public class Advapi32UtilTest extends TestCase { <nl> 	 	 	 	 } 	 	 	 	 <nl> 	 	 	 } <nl> 	 	 } finally { <nl> - 	 	 assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( <nl> - 	 	 	 	 null , userInfo . usri1 _ name . toString ( ) ) ) ; 	 	 	 <nl> + assertEquals ( " Error in NetUserDel " , <nl> + LMErr . NERR _ Success , <nl> + Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name . toString ( ) ) ) ; 	 	 	 <nl> 	 	 } <nl> 	 } <nl> 	 <nl> @ @ - 385 , 10 + 387 , 10 @ @ public class Advapi32UtilTest extends TestCase { <nl> 	 } <nl> 	 <nl> 	 public void testGetEnvironmentBlock ( ) { <nl> - 	 	 String expected = " KEY = value \ \ 0 " <nl> - 	 	 	 	 + " KEY _ EMPTY = \ \ 0 " <nl> - 	 	 	 	 + " KEY _ NUMBER = 2 \ \ 0 " <nl> - 	 	 	 	 + " \ \ 0 " ; <nl> + 	 	 String expected = " KEY = value \ 0 " <nl> + 	 	 	 	 + " KEY _ EMPTY = \ 0 " <nl> + 	 	 	 	 + " KEY _ NUMBER = 2 \ 0 " <nl> + 	 	 	 	 + " \ 0 " ; <nl> <nl> 	 	 / / Order is important to kept checking result simple <nl> 	 	 Map < String , String > mockEnvironment = new TreeMap < String , String > ( ) ; <nl> @ @ - 398 , 18 + 400 , 21 @ @ public class Advapi32UtilTest extends TestCase { <nl> 	 	 mockEnvironment . put ( " KEY _ NULL " , null ) ; 	 	 <nl> <nl> 	 	 String block = Advapi32Util . getEnvironmentBlock ( mockEnvironment ) ; <nl> - 	 	 assertEquals ( expected , block ) ; <nl> + 	 	 assertEquals ( " Environment block must comprise key = value pairs separated by NUL characters " , expected , block ) ; <nl> 	 } <nl> 	 <nl> 	 public void testGetFileSecurity ( ) { <nl> - 	 	 final String userUnderTest = " iFinder " ; <nl> + / / final String userUnderTest = " iFinder " ; <nl> + final String userUnderTest = Advapi32Util . getUserName ( ) ; <nl> 	 	 final Account userUnderTestAccount = Advapi32Util . getAccountByName ( userUnderTest ) ; <nl> 	 	 final String userUnderTestSID = userUnderTestAccount . sidString ; <nl> - 	 	 final String groupUnderTest = " Sales " ; <nl> + 	 	 / / final String groupUnderTest = " Sales " ; <nl> + 	 	 final String groupUnderTest = " Everybody " ; <nl> 	 	 final Account groupUnderTestAccount = Advapi32Util . getAccountByName ( groupUnderTest ) ; <nl> 	 	 final String groupUnderTestSID = groupUnderTestAccount . sidString ; <nl> <nl> - 	 	 final String testRootDir = " C : \ \ Projekte \ \ JNA - fileAccessRights \ \ " ; <nl> + 	 	 / / final String testRootDir = " C : \ \ Projekte \ \ JNA - fileAccessRights \ \ " ; <nl> + final String testRootDir = System . getProperty ( " java . io . tmpdir " ) ; <nl> <nl> 	 	 / / User rights " modify " ( Um ) - includes some others : read , execute , write <nl> 	 	 / / Traverse Folder / Execute File ( WinNT . FILE _ TRAVERSE , WinNT . FILE _ READ _ DATA ) <nl> @ @ - 428 , 7 + 433 , 7 @ @ public class Advapi32UtilTest extends TestCase { <nl> 	 	 / / Read Attributes ( WinNT . FILE _ READ _ ATTRIBUTES ) <nl> 	 	 / / Read Extended Attributes ( WinNT . FILE _ READ _ EA ) <nl> 	 	 / / Read Permissions ( WinNT . FILE _ READ _ ATTRIBUTES ) <nl> - 	 	 ACCESS _ ACEStructure [ ] fileSecurity _ UmGr = Advapi32Util . getFileSecurity ( testRootDir + " UmGr - w . txt " , false ) ; <nl> + 	 	 ACCESS _ ACEStructure [ ] fileSecurity _ UmGr = Advapi32Util . getFileSecurity ( testRootDir + " / UmGr - w . txt " , false ) ; <nl> 	 	 System . out . println ( " UmGr - w . txt " ) ; <nl> 	 	 checkFileSecurity ( fileSecurity _ UmGr , <nl> 	 	 	 	 userUnderTestSID , <nl> @ @ - 442 , 14 + 447 , 14 @ @ public class Advapi32UtilTest extends TestCase { <nl> 	 	 } ) ; <nl> <nl> 	 	 / / User full access <nl> - 	 	 ACCESS _ ACEStructure [ ] fileSecurity _ Uf = Advapi32Util . getFileSecurity ( testRootDir + " Uf . txt " , false ) ; <nl> - 	 	 System . out . println ( " Uf . txt " ) ; <nl> + 	 	 ACCESS _ ACEStructure [ ] fileSecurity _ Uf = Advapi32Util . getFileSecurity ( testRootDir + " / Uf . txt " , false ) ; <nl> + 	 	 / / System . out . println ( " Uf . txt " ) ; <nl> 	 	 checkFileSecurity ( fileSecurity _ Uf , userUnderTestSID , <nl> 	 	 	 	 new String [ ] { " 0 0 DELETE READ _ CONTROL WRITE _ DAC WRITE _ OWNER SYNCHRONIZE STANDARD _ RIGHTS _ REQUIRED STANDARD _ RIGHTS _ ALL FILE _ READ _ DATA FILE _ LIST _ DIRECTORY FILE _ WRITE _ DATA FILE _ ADD _ FILE FILE _ APPEND _ DATA FILE _ ADD _ SUBDIRECTORY FILE _ CREATE _ PIPE _ INSTANCE FILE _ READ _ EA FILE _ WRITE _ EA FILE _ EXECUTE FILE _ TRAVERSE FILE _ DELETE _ CHILD FILE _ READ _ ATTRIBUTES FILE _ WRITE _ ATTRIBUTES " } , null , null ) ; <nl> <nl> 	 	 / / file in directory - access rights copied <nl> - 	 	 ACCESS _ ACEStructure [ ] fileSecurity _ Grw _ Cp = Advapi32Util . getFileSecurity ( testRootDir + " UrwGr . dir \ \ Grw . txt " , false ) ; <nl> - 	 	 System . out . println ( " UrwGr . dir \ \ Grw . txt " ) ; <nl> + 	 	 ACCESS _ ACEStructure [ ] fileSecurity _ Grw _ Cp = Advapi32Util . getFileSecurity ( testRootDir + " / UrwGr . dir / Grw . txt " , false ) ; <nl> + 	 	 / / System . out . println ( " UrwGr . dir / Grw . txt " ) ; <nl> 	 	 checkFileSecurity ( fileSecurity _ Grw _ Cp , null , null , <nl> 	 	 	 	 groupUnderTestSID , <nl> 	 	 	 	 new String [ ] { " 16 0 READ _ CONTROL SYNCHRONIZE FILE _ READ _ DATA FILE _ LIST _ DIRECTORY FILE _ READ _ EA FILE _ READ _ ATTRIBUTES " } <nl> @ @ - 458 , 14 + 463 , 14 @ @ public class Advapi32UtilTest extends TestCase { <nl> 	 	 / * <nl> / / User rights : read , execute , list folder , write <nl> / / Group rights : read <nl> - ACCESS _ ACEStructure [ ] fileSecurity _ UrwGr _ Dir = Advapi32Util . getFileSecurity ( testRootDir + " UrwGr . dir \ \ " , false ) ; <nl> - System . out . println ( " UrwGr . dir \ \ " ) ; <nl> + ACCESS _ ACEStructure [ ] fileSecurity _ UrwGr _ Dir = Advapi32Util . getFileSecurity ( testRootDir + " / UrwGr . dir / " , false ) ; <nl> + System . out . println ( " UrwGr . dir / " ) ; <nl> <nl> <nl> / / file in directory - access rights inherited <nl> / / User rights : read , execute , write <nl> - ACCESS _ ACEStructure [ ] fileSecurity _ UrI _ Inh = Advapi32Util . getFileSecurity ( testRootDir + " UrwGr . dir \ \ UrI . txt " , false ) ; <nl> - System . out . println ( " UrwGr . dir \ \ UrI . txt " ) ; <nl> + ACCESS _ ACEStructure [ ] fileSecurity _ UrI _ Inh = Advapi32Util . getFileSecurity ( testRootDir + " / UrwGr . dir / UrI . txt " , false ) ; <nl> + System . out . println ( " UrwGr . dir / UrI . txt " ) ; <nl> 	 	 * / <nl> <nl> 	 } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> index ce664e6 . . bfdd0c6 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java <nl> @ @ - 37 , 7 + 37 , 7 @ @ public class User32Test extends TestCase { <nl> int vk = KeyEvent . VK _ D ; <nl> int id = 1 ; <nl> <nl> - assertTrue ( INSTANCE . RegisterHotKey ( null , id , WinUser . MOD _ CONTROL | WinUser . MOD _ ALT , vk ) ) ; <nl> + assertTrue ( " RegisterHotKey failed " , INSTANCE . RegisterHotKey ( null , id , WinUser . MOD _ CONTROL | WinUser . MOD _ ALT , vk ) ) ; <nl> <nl> Robot robot = null ; <nl> try {

TEST DIFF:
diff - - git a / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java b / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java 
 index a08c2a9 . . 4c34d4f 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / FileUtilsTest . java 
 @ @ - 55 , 6 + 55 , 14 @ @ public class FileUtilsTest extends TestCase { 
 File symlink = new File ( tmpdir , file . getName ( ) + " . link " ) ; 
 try { 
 Runtime . getRuntime ( ) . exec ( new String [ ] { " ln " , " - s " , file . getAbsolutePath ( ) , symlink . getAbsolutePath ( ) } ) ; 
 + / / OSX 10 . 8 needs a little time for the symlink to register 
 + long start = System . currentTimeMillis ( ) ; 
 + while ( ! file . exists ( ) | | ! symlink . exists ( ) ) { 
 + Thread . sleep ( 100 ) ; 
 + if ( System . currentTimeMillis ( ) - start > 5000 ) { 
 + break ; 
 + } 
 + } 
 assertTrue ( " Original source file missing : " + file , file . exists ( ) ) ; 
 assertTrue ( " Symlink creation failed ( missing ) : " + symlink , symlink . exists ( ) ) ; 
 try {

NEAREST DIFF:
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32 . java 
 old mode 100755 
 new mode 100644 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java 
 old mode 100755 
 new mode 100644 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java 
 index 93ec62d . . 654391c 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32Util . java 
 @ @ - 10 , 7 + 10 , 7 @ @ 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 * Lesser General Public License for more details . 
 * / 
 - package com . sun . jna . platform . win32 ; 
 + package com . sun . jna . platform . win32 ; 
 
 import java . util . ArrayList ; 
 import java . util . List ; 
 @ @ - 64 , 9 + 64 , 8 @ @ public abstract class Kernel32Util { 
 	 throw new LastErrorException ( Kernel32 . INSTANCE . GetLastError ( ) ) ; 
 } 	 
 	 String s = buffer . getValue ( ) . getString ( 0 , ! Boolean . getBoolean ( " w32 . ascii " ) ) ; 
 - 	 s = s . replace ( " . \ r " , " . " ) . replace ( " . \ n " , " . " ) ; 
 	 Kernel32 . INSTANCE . LocalFree ( buffer . getValue ( ) ) ; 
 - 	 return s ; 	 	 
 + 	 return s . trim ( ) ; 	 	 
 	 } 
 	 
 	 / * * 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / LMAccess . java b / contrib / platform / src / com / sun / jna / platform / win32 / LMAccess . java 
 old mode 100755 
 new mode 100644 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Netapi32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Netapi32 . java 
 old mode 100755 
 new mode 100644 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Netapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Netapi32Util . java 
 old mode 100755 
 new mode 100644 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 old mode 100755 
 new mode 100644 
 index b2995b2 . . 8609268 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 @ @ - 325 , 6 + 325 , 7 @ @ public interface WinNT extends StdCallLibrary { 
 
 	 public PSID ( Pointer memory ) { 
 	 super ( memory ) ; 
 + read ( ) ; 
 	 } 
 
 	 public byte [ ] getBytes ( ) { 
 @ @ - 1872 , 40 + 1873 , 10 @ @ public interface WinNT extends StdCallLibrary { 
 	 public byte [ ] data ; 
 } 
 
 - public static class PACL extends Structure { 
 - 	 public static class ByReference extends PACL implements Structure . ByReference { 
 - 	 } 
 - 
 - 	 public PACL ( ) { 
 - 	 } 
 - 
 - 	 public PACL ( byte [ ] data ) { 
 - 	 super ( ) ; 
 - 	 Memory memory = new Memory ( data . length ) ; 
 - 	 memory . write ( 0 , data , 0 , data . length ) ; 
 - 	 useMemory ( memory ) ; 
 - 	 read ( ) ; 
 - 	 } 
 - 
 - 	 public PACL ( int size ) { 
 - 	 super ( new Memory ( size ) ) ; 
 - 	 } 
 - 
 - 	 public PACL ( Pointer memory ) { 
 - 	 super ( memory ) ; 
 - 	 } 
 - 
 - 	 public byte [ ] getBytes ( ) { 
 - 	 int len = 0 ; 
 - 	 return getPointer ( ) . getByteArray ( 0 , len ) ; 
 - 	 } 
 - 
 - 	 public Pointer acl ; 	 	 
 - } 
 - 
 public static class ACL extends Structure { 
 + public ACL ( ) { } 
 	 public ACL ( Pointer pointer ) { 
 - 	 useMemory ( pointer ) ; 
 + 	 super ( pointer ) ; 
 	 read ( ) ; 
 	 ACEs = new ACCESS _ ACEStructure [ AceCount ] ; 
 	 int offset = size ( ) ; 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java 
 index c46ae02 . . 341c4c5 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java 
 @ @ - 46 , 6 + 46 , 9 @ @ import com . sun . jna . ptr . PointerByReference ; 
 * / 
 public class Advapi32Test extends TestCase { 
 
 + private static final String EVERYONE = " S - 1 - 1 - 0 " ; 
 + private static final String NOBODY = " S - 1 - 0 - 0 " ; 
 + 
 public static void main ( String [ ] args ) { 
 junit . textui . TestRunner . run ( Advapi32Test . class ) ; 
 } 
 @ @ - 79 , 25 + 82 , 25 @ @ public class Advapi32Test extends TestCase { 
 } 
 
 public void testIsValidSid ( ) { 
 - 	 String sidString = " S - 1 - 1 - 0 " ; / / Everyone 
 + 	 String sidString = EVERYONE ; 
 	 PSIDByReference sid = new PSIDByReference ( ) ; 
 - 	 assertTrue ( Advapi32 . INSTANCE . ConvertStringSidToSid ( sidString , sid ) ) ; 
 - 	 assertTrue ( Advapi32 . INSTANCE . IsValidSid ( sid . getValue ( ) ) ) ; 
 + 	 assertTrue ( " SID conversion failed " , Advapi32 . INSTANCE . ConvertStringSidToSid ( sidString , sid ) ) ; 
 + 	 assertTrue ( " Converted SID not valid : " + sid . getValue ( ) , Advapi32 . INSTANCE . IsValidSid ( sid . getValue ( ) ) ) ; 
 	 int sidLength = Advapi32 . INSTANCE . GetLengthSid ( sid . getValue ( ) ) ; 
 	 assertTrue ( sidLength > 0 ) ; 
 	 assertTrue ( Advapi32 . INSTANCE . IsValidSid ( sid . getValue ( ) ) ) ; 
 } 
 
 public void testGetSidLength ( ) { 
 - 	 String sidString = " S - 1 - 1 - 0 " ; / / Everyone 
 + 	 String sidString = EVERYONE ; 
 	 PSIDByReference sid = new PSIDByReference ( ) ; 
 - 	 assertTrue ( Advapi32 . INSTANCE . ConvertStringSidToSid ( sidString , sid ) ) ; 
 - 	 assertTrue ( 12 = = Advapi32 . INSTANCE . GetLengthSid ( sid . getValue ( ) ) ) ; 
 + 	 assertTrue ( " SID conversion failed " , Advapi32 . INSTANCE . ConvertStringSidToSid ( sidString , sid ) ) ; 
 + 	 assertEquals ( " Wrong SID lenght " , 12 , Advapi32 . INSTANCE . GetLengthSid ( sid . getValue ( ) ) ) ; 
 } 
 
 public void testLookupAccountSid ( ) { 
 	 / / get SID bytes 
 - 	 String sidString = " S - 1 - 1 - 0 " ; / / Everyone 
 + 	 String sidString = EVERYONE ; 
 	 PSIDByReference sid = new PSIDByReference ( ) ; 
 	 assertTrue ( Advapi32 . INSTANCE . ConvertStringSidToSid ( sidString , sid ) ) ; 
 	 int sidLength = Advapi32 . INSTANCE . GetLengthSid ( sid . getValue ( ) ) ; 
 @ @ - 125 , 7 + 128 , 7 @ @ public class Advapi32Test extends TestCase { 
 } 
 
 public void testConvertSid ( ) { 
 - 	 String sidString = " S - 1 - 1 - 0 " ; / / Everyone 
 + 	 String sidString = EVERYONE ; 
 	 PSIDByReference sid = new PSIDByReference ( ) ; 
 	 assertTrue ( Advapi32 . INSTANCE . ConvertStringSidToSid ( 
 	 	 	 sidString , sid ) ) ; 
 @ @ - 472 , 7 + 475 , 7 @ @ public class Advapi32Test extends TestCase { 
 } 
 
 public void testIsWellKnownSid ( ) { 
 - 	 String sidString = " S - 1 - 1 - 0 " ; / / Everyone 
 + 	 String sidString = EVERYONE ; 
 	 PSIDByReference sid = new PSIDByReference ( ) ; 
 	 assertTrue ( Advapi32 . INSTANCE . ConvertStringSidToSid ( sidString , sid ) ) ; 
 	 assertTrue ( Advapi32 . INSTANCE . IsWellKnownSid ( sid . getValue ( ) , 
 @ @ - 493 , 7 + 496 , 7 @ @ public class Advapi32Test extends TestCase { 
 	 assertTrue ( Advapi32 . INSTANCE . ConvertSidToStringSid ( 
 	 	 	 pSid , convertedSidStringPtr ) ) ; 
 	 String convertedSidString = convertedSidStringPtr . getValue ( ) . getString ( 0 , true ) ; 
 - 	 assertEquals ( " S - 1 - 1 - 0 " , convertedSidString ) ; 
 + 	 assertEquals ( EVERYONE , convertedSidString ) ; 
 } 
 
 public void testOpenEventLog ( ) { 
 @ @ - 609 , 6 + 612 , 7 @ @ public class Advapi32Test extends TestCase { 
 rc = Kernel32 . INSTANCE . GetLastError ( ) ; 
 if ( rc = = W32Errors . ERROR _ INSUFFICIENT _ BUFFER ) { 
 buffer = new Memory ( pnMinNumberOfBytesNeeded . getValue ( ) ) ; 
 + rc = 0 ; 
 continue ; 
 } 	 	 	 
 break ; 
 @ @ - 628 , 7 + 632 , 8 @ @ public class Advapi32Test extends TestCase { 
 pevlr = pevlr . share ( record . Length . intValue ( ) ) ; 
 } 
 	 } 
 - assertTrue ( " Unexpected error after reading event log : " + rc , 
 + assertTrue ( " Unexpected error after reading event log : " 
 + + new Win32Exception ( rc ) , 
 rc = = W32Errors . ERROR _ HANDLE _ EOF | | rc = = 0 ) ; 
 assertTrue ( " Error closing event log " , 
 Advapi32 . INSTANCE . CloseEventLog ( h ) ) ; 	 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java 
 old mode 100755 
 new mode 100644 
 index 8064b40 . . 52186eb 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32UtilTest . java 
 @ @ - 113 , 8 + 113 , 9 @ @ public class Advapi32UtilTest extends TestCase { 
 	 userInfo . usri1 _ password = new WString ( " ! JNAP $ $ Wrd0 " ) ; 
 	 userInfo . usri1 _ priv = LMAccess . USER _ PRIV _ USER ; 
 	 	 try { 
 - 	 	 assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserAdd ( 
 - 	 	 	 	 null , 1 , userInfo , null ) ) ; 
 + assertEquals ( " Error in NetUserAdd " , 
 + LMErr . NERR _ Success , 
 + Netapi32 . INSTANCE . NetUserAdd ( null , 1 , userInfo , null ) ) ; 
 	 	 	 HANDLEByReference phUser = new HANDLEByReference ( ) ; 
 	 	 	 try { 
 	 	 	 	 assertTrue ( Advapi32 . INSTANCE . LogonUser ( userInfo . usri1 _ name . toString ( ) , 
 @ @ - 133 , 8 + 134 , 9 @ @ public class Advapi32UtilTest extends TestCase { 
 	 	 	 	 } 	 	 	 	 
 	 	 	 } 
 	 	 } finally { 
 - 	 	 assertEquals ( LMErr . NERR _ Success , Netapi32 . INSTANCE . NetUserDel ( 
 - 	 	 	 	 null , userInfo . usri1 _ name . toString ( ) ) ) ; 	 	 	 
 + assertEquals ( " Error in NetUserDel " , 
 + LMErr . NERR _ Success , 
 + Netapi32 . INSTANCE . NetUserDel ( null , userInfo . usri1 _ name . toString ( ) ) ) ; 	 	 	 
 	 	 } 
 	 } 
 	 
 @ @ - 385 , 10 + 387 , 10 @ @ public class Advapi32UtilTest extends TestCase { 
 	 } 
 	 
 	 public void testGetEnvironmentBlock ( ) { 
 - 	 	 String expected = " KEY = value \ \ 0 " 
 - 	 	 	 	 + " KEY _ EMPTY = \ \ 0 " 
 - 	 	 	 	 + " KEY _ NUMBER = 2 \ \ 0 " 
 - 	 	 	 	 + " \ \ 0 " ; 
 + 	 	 String expected = " KEY = value \ 0 " 
 + 	 	 	 	 + " KEY _ EMPTY = \ 0 " 
 + 	 	 	 	 + " KEY _ NUMBER = 2 \ 0 " 
 + 	 	 	 	 + " \ 0 " ; 
 
 	 	 / / Order is important to kept checking result simple 
 	 	 Map < String , String > mockEnvironment = new TreeMap < String , String > ( ) ; 
 @ @ - 398 , 18 + 400 , 21 @ @ public class Advapi32UtilTest extends TestCase { 
 	 	 mockEnvironment . put ( " KEY _ NULL " , null ) ; 	 	 
 
 	 	 String block = Advapi32Util . getEnvironmentBlock ( mockEnvironment ) ; 
 - 	 	 assertEquals ( expected , block ) ; 
 + 	 	 assertEquals ( " Environment block must comprise key = value pairs separated by NUL characters " , expected , block ) ; 
 	 } 
 	 
 	 public void testGetFileSecurity ( ) { 
 - 	 	 final String userUnderTest = " iFinder " ; 
 + / / final String userUnderTest = " iFinder " ; 
 + final String userUnderTest = Advapi32Util . getUserName ( ) ; 
 	 	 final Account userUnderTestAccount = Advapi32Util . getAccountByName ( userUnderTest ) ; 
 	 	 final String userUnderTestSID = userUnderTestAccount . sidString ; 
 - 	 	 final String groupUnderTest = " Sales " ; 
 + 	 	 / / final String groupUnderTest = " Sales " ; 
 + 	 	 final String groupUnderTest = " Everybody " ; 
 	 	 final Account groupUnderTestAccount = Advapi32Util . getAccountByName ( groupUnderTest ) ; 
 	 	 final String groupUnderTestSID = groupUnderTestAccount . sidString ; 
 
 - 	 	 final String testRootDir = " C : \ \ Projekte \ \ JNA - fileAccessRights \ \ " ; 
 + 	 	 / / final String testRootDir = " C : \ \ Projekte \ \ JNA - fileAccessRights \ \ " ; 
 + final String testRootDir = System . getProperty ( " java . io . tmpdir " ) ; 
 
 	 	 / / User rights " modify " ( Um ) - includes some others : read , execute , write 
 	 	 / / Traverse Folder / Execute File ( WinNT . FILE _ TRAVERSE , WinNT . FILE _ READ _ DATA ) 
 @ @ - 428 , 7 + 433 , 7 @ @ public class Advapi32UtilTest extends TestCase { 
 	 	 / / Read Attributes ( WinNT . FILE _ READ _ ATTRIBUTES ) 
 	 	 / / Read Extended Attributes ( WinNT . FILE _ READ _ EA ) 
 	 	 / / Read Permissions ( WinNT . FILE _ READ _ ATTRIBUTES ) 
 - 	 	 ACCESS _ ACEStructure [ ] fileSecurity _ UmGr = Advapi32Util . getFileSecurity ( testRootDir + " UmGr - w . txt " , false ) ; 
 + 	 	 ACCESS _ ACEStructure [ ] fileSecurity _ UmGr = Advapi32Util . getFileSecurity ( testRootDir + " / UmGr - w . txt " , false ) ; 
 	 	 System . out . println ( " UmGr - w . txt " ) ; 
 	 	 checkFileSecurity ( fileSecurity _ UmGr , 
 	 	 	 	 userUnderTestSID , 
 @ @ - 442 , 14 + 447 , 14 @ @ public class Advapi32UtilTest extends TestCase { 
 	 	 } ) ; 
 
 	 	 / / User full access 
 - 	 	 ACCESS _ ACEStructure [ ] fileSecurity _ Uf = Advapi32Util . getFileSecurity ( testRootDir + " Uf . txt " , false ) ; 
 - 	 	 System . out . println ( " Uf . txt " ) ; 
 + 	 	 ACCESS _ ACEStructure [ ] fileSecurity _ Uf = Advapi32Util . getFileSecurity ( testRootDir + " / Uf . txt " , false ) ; 
 + 	 	 / / System . out . println ( " Uf . txt " ) ; 
 	 	 checkFileSecurity ( fileSecurity _ Uf , userUnderTestSID , 
 	 	 	 	 new String [ ] { " 0 0 DELETE READ _ CONTROL WRITE _ DAC WRITE _ OWNER SYNCHRONIZE STANDARD _ RIGHTS _ REQUIRED STANDARD _ RIGHTS _ ALL FILE _ READ _ DATA FILE _ LIST _ DIRECTORY FILE _ WRITE _ DATA FILE _ ADD _ FILE FILE _ APPEND _ DATA FILE _ ADD _ SUBDIRECTORY FILE _ CREATE _ PIPE _ INSTANCE FILE _ READ _ EA FILE _ WRITE _ EA FILE _ EXECUTE FILE _ TRAVERSE FILE _ DELETE _ CHILD FILE _ READ _ ATTRIBUTES FILE _ WRITE _ ATTRIBUTES " } , null , null ) ; 
 
 	 	 / / file in directory - access rights copied 
 - 	 	 ACCESS _ ACEStructure [ ] fileSecurity _ Grw _ Cp = Advapi32Util . getFileSecurity ( testRootDir + " UrwGr . dir \ \ Grw . txt " , false ) ; 
 - 	 	 System . out . println ( " UrwGr . dir \ \ Grw . txt " ) ; 
 + 	 	 ACCESS _ ACEStructure [ ] fileSecurity _ Grw _ Cp = Advapi32Util . getFileSecurity ( testRootDir + " / UrwGr . dir / Grw . txt " , false ) ; 
 + 	 	 / / System . out . println ( " UrwGr . dir / Grw . txt " ) ; 
 	 	 checkFileSecurity ( fileSecurity _ Grw _ Cp , null , null , 
 	 	 	 	 groupUnderTestSID , 
 	 	 	 	 new String [ ] { " 16 0 READ _ CONTROL SYNCHRONIZE FILE _ READ _ DATA FILE _ LIST _ DIRECTORY FILE _ READ _ EA FILE _ READ _ ATTRIBUTES " } 
 @ @ - 458 , 14 + 463 , 14 @ @ public class Advapi32UtilTest extends TestCase { 
 	 	 / * 
 / / User rights : read , execute , list folder , write 
 / / Group rights : read 
 - ACCESS _ ACEStructure [ ] fileSecurity _ UrwGr _ Dir = Advapi32Util . getFileSecurity ( testRootDir + " UrwGr . dir \ \ " , false ) ; 
 - System . out . println ( " UrwGr . dir \ \ " ) ; 
 + ACCESS _ ACEStructure [ ] fileSecurity _ UrwGr _ Dir = Advapi32Util . getFileSecurity ( testRootDir + " / UrwGr . dir / " , false ) ; 
 + System . out . println ( " UrwGr . dir / " ) ; 
 
 
 / / file in directory - access rights inherited 
 / / User rights : read , execute , write 
 - ACCESS _ ACEStructure [ ] fileSecurity _ UrI _ Inh = Advapi32Util . getFileSecurity ( testRootDir + " UrwGr . dir \ \ UrI . txt " , false ) ; 
 - System . out . println ( " UrwGr . dir \ \ UrI . txt " ) ; 
 + ACCESS _ ACEStructure [ ] fileSecurity _ UrI _ Inh = Advapi32Util . getFileSecurity ( testRootDir + " / UrwGr . dir / UrI . txt " , false ) ; 
 + System . out . println ( " UrwGr . dir / UrI . txt " ) ; 
 	 	 * / 
 
 	 } 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java 
 index ce664e6 . . bfdd0c6 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / User32Test . java 
 @ @ - 37 , 7 + 37 , 7 @ @ public class User32Test extends TestCase { 
 int vk = KeyEvent . VK _ D ; 
 int id = 1 ; 
 
 - assertTrue ( INSTANCE . RegisterHotKey ( null , id , WinUser . MOD _ CONTROL | WinUser . MOD _ ALT , vk ) ) ; 
 + assertTrue ( " RegisterHotKey failed " , INSTANCE . RegisterHotKey ( null , id , WinUser . MOD _ CONTROL | WinUser . MOD _ ALT , vk ) ) ; 
 
 Robot robot = null ; 
 try {
