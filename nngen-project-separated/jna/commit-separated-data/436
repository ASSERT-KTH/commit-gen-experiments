BLEU SCORE: 0.6065306597126334

TEST MSG: update clover
GENERATED MSG: update clover library

TEST DIFF (one line): diff - - git a / lib / clover . jar b / lib / clover . jar <nl> index e38a8ae . . 7ac155c 100644 <nl> Binary files a / lib / clover . jar and b / lib / clover . jar differ <nl> diff - - git a / lib / clover . license b / lib / clover . license <nl> index 69a40d0 . . 67e9cbd 100644 <nl> - - - a / lib / clover . license <nl> + + + b / lib / clover . license <nl> @ @ - 1 , 5 + 1 , 5 @ @ <nl> - qRNQnmsMoNMDGXUenVfHVPuFPrNBGUUdBvfgtIdgVQWSbAa <nl> - mj2KW7Oo9ud83ZbEKfK2xx922L04T > gYjDdLjGld4Wa6MPW <nl> - NrqPtxROppqOmmqROMPSTnMmRqNOMnMnoPVSXswPsVXQwXV <nl> - SPVVUtUNQmnmqmUUnopmqsvommmmmUUnopmqsvommmmmUUg <nl> - kXkabskgXsXkkbqUUnmm <nl> + onoMnApeShTpQtDJbcUgJTIFONPQeUndIgfQWWNNddIwBl <nl> + mi2Kp5RjfhIJdGCSo < bOTNof2KNxm9KCi5lxEyKI9BJW3p <nl> + qOPQUXpopOopMMPqnPnXXQPNOPNRnqQNQqStwVxuQSTtVW <nl> + UrwSUSSSTVwxWSXNmrrpnmqmUUnpsvpntsmmmmmUUnpsvp <nl> + ntsmmmmmUUFmbkWJlroZbW4bsbilmjbkqUUnmmmm
NEAREST DIFF (one line): diff - - git a / www / index . html b / www / index . html <nl> index c001838 . . 2a6d29b 100644 <nl> - - - a / www / index . html <nl> + + + b / www / index . html <nl> @ @ - 3 , 7 + 3 , 7 @ @ <nl> < meta name = " author " content = " Timothy Wall " > <nl> < meta name = " keywords " content = " java , jna , jni , c , c + + , native , method , function , call , ctypes , ffi , foreign function interface , jdirect , jinvoke , pinvoke , platform invoke , native library access , native access , call native from java , java c library , easy jni , call c from java , avoid jni , jni alternative , jni replacement , legacy , call from java , replace jni " > <nl> < meta name = " description " content = " Java Native Access ( JNA ) : access native libraries with pure Java code . " > <nl> - < meta name = " date " content = " 2009 - 06 - 02 " > <nl> + < meta name = " date " content = " 2009 - 06 - 10 " > <nl> < title > Java Native Access ( JNA ) : Pure Java access to native libraries < / title > <nl> < meta http - equiv = " Content - Type " content = " text / html ; charset = iso - 8859 - 1 " > <nl> < / head > <nl> @ @ - 411 , 6 + 411 , 7 @ @ Libc . fclose ( fp ) <nl> < a name = faq > < / a > <nl> < h3 > Frequently Asked Questions ( FAQ ) < / h3 > <nl> < ul > <nl> + < li > < a href = " # structure _ use " > Should I use Structure . ByReference , Structure . ByValue , or Structure [ ] ? < / a > <nl> < li > < a href = " # char _ buffer " > How do I read back a string ? < / a > <nl> < li > < a href = " # native _ long " > How do I map a native < code > long < / code > type ? < / a > <nl> < li > < a href = " # w32link " > My library mapping causes an UnsatisfiedLinkError < / a > <nl> @ @ - 421 , 6 + 422 , 55 @ @ Libc . fclose ( fp ) <nl> < li > < a href = " # j2me " > Does JNA work with J2ME / Windows Mobile ? < / a > <nl> < li > < a href = " # performance " > How does JNA performance compared to custom JNI ? < / a > <nl> < / ul > <nl> + < a name = structure _ use > < / a > <nl> + < h4 > When should I use Structure . ByReference ? Structure . ByValue ? Structure [ ] ? < / h4 > <nl> + Find your corresponding native declaration below : <nl> + < blockquote > < pre > < code > <nl> + typedef struct _ simplestruct { <nl> + int myfield ; <nl> + } simplestruct ; <nl> + <nl> + typedef struct _ outerstruct { <nl> + simplestruct nested ; / / use Structure <nl> + } outerstruct ; <nl> + <nl> + typedef struct _ outerstruct2 { <nl> + simplestruct * byref ; / / use Structure . ByReference <nl> + } outerstruct2 ; <nl> + <nl> + typedef struct _ outerstruct3 { <nl> + simplestruct array [ 4 ] ; / / use Structure [ ] <nl> + } outerstruct3 ; <nl> + <nl> + typedef struct _ outerstruct4 { <nl> + simplestruct * ptr _ array [ 4 ] ; / / use Structure . ByReference [ ] <nl> + } outerstruct4 ; <nl> + <nl> + / / Field is a pointer to an array of struct <nl> + typedef struct _ outerstruct5 { <nl> + simplestruct * ptr _ to _ array ; / / use Structure . ByRefeerence , and use <nl> + / / Structure . toArray ( ) to allocate array <nl> + } outerstruct5 ; <nl> + <nl> + / / struct pointers as return value or argument <nl> + / / use Structure <nl> + outerstruct * myfunc ( ) ; <nl> + void myfunc ( outerstruct * data ) ; <nl> + <nl> + / / struct ( by value ) as return value or argument <nl> + / / use Structure . ByValue <nl> + simplestruct myfunc ( ) ; <nl> + void myfunc ( simplestruct ) ; <nl> + < / code > < / pre > < / blockquote > <nl> + <nl> + If you need a ByValue or ByReference class , define them within your main Structure definition like this : <nl> + < blockquote > < pre > < code > <nl> + public class MyStructure extends Structure { <nl> + public class ByValue extends MyStructure implements Structure . ByValue { } <nl> + public class ByReference extends MyStructure implements Structure . ByReference { } <nl> + } <nl> + < / code > < / pre > < / blockquote > <nl> + <nl> < a name = char _ buffer > < / a > <nl> < h4 > How do I read back a function ' s string result ? < / h4 > <nl> Suppose you have a function : < br >

TEST DIFF:
diff - - git a / lib / clover . jar b / lib / clover . jar 
 index e38a8ae . . 7ac155c 100644 
 Binary files a / lib / clover . jar and b / lib / clover . jar differ 
 diff - - git a / lib / clover . license b / lib / clover . license 
 index 69a40d0 . . 67e9cbd 100644 
 - - - a / lib / clover . license 
 + + + b / lib / clover . license 
 @ @ - 1 , 5 + 1 , 5 @ @ 
 - qRNQnmsMoNMDGXUenVfHVPuFPrNBGUUdBvfgtIdgVQWSbAa 
 - mj2KW7Oo9ud83ZbEKfK2xx922L04T > gYjDdLjGld4Wa6MPW 
 - NrqPtxROppqOmmqROMPSTnMmRqNOMnMnoPVSXswPsVXQwXV 
 - SPVVUtUNQmnmqmUUnopmqsvommmmmUUnopmqsvommmmmUUg 
 - kXkabskgXsXkkbqUUnmm 
 + onoMnApeShTpQtDJbcUgJTIFONPQeUndIgfQWWNNddIwBl 
 + mi2Kp5RjfhIJdGCSo < bOTNof2KNxm9KCi5lxEyKI9BJW3p 
 + qOPQUXpopOopMMPqnPnXXQPNOPNRnqQNQqStwVxuQSTtVW 
 + UrwSUSSSTVwxWSXNmrrpnmqmUUnpsvpntsmmmmmUUnpsvp 
 + ntsmmmmmUUFmbkWJlroZbW4bsbilmjbkqUUnmmmm

NEAREST DIFF:
diff - - git a / www / index . html b / www / index . html 
 index c001838 . . 2a6d29b 100644 
 - - - a / www / index . html 
 + + + b / www / index . html 
 @ @ - 3 , 7 + 3 , 7 @ @ 
 < meta name = " author " content = " Timothy Wall " > 
 < meta name = " keywords " content = " java , jna , jni , c , c + + , native , method , function , call , ctypes , ffi , foreign function interface , jdirect , jinvoke , pinvoke , platform invoke , native library access , native access , call native from java , java c library , easy jni , call c from java , avoid jni , jni alternative , jni replacement , legacy , call from java , replace jni " > 
 < meta name = " description " content = " Java Native Access ( JNA ) : access native libraries with pure Java code . " > 
 - < meta name = " date " content = " 2009 - 06 - 02 " > 
 + < meta name = " date " content = " 2009 - 06 - 10 " > 
 < title > Java Native Access ( JNA ) : Pure Java access to native libraries < / title > 
 < meta http - equiv = " Content - Type " content = " text / html ; charset = iso - 8859 - 1 " > 
 < / head > 
 @ @ - 411 , 6 + 411 , 7 @ @ Libc . fclose ( fp ) 
 < a name = faq > < / a > 
 < h3 > Frequently Asked Questions ( FAQ ) < / h3 > 
 < ul > 
 + < li > < a href = " # structure _ use " > Should I use Structure . ByReference , Structure . ByValue , or Structure [ ] ? < / a > 
 < li > < a href = " # char _ buffer " > How do I read back a string ? < / a > 
 < li > < a href = " # native _ long " > How do I map a native < code > long < / code > type ? < / a > 
 < li > < a href = " # w32link " > My library mapping causes an UnsatisfiedLinkError < / a > 
 @ @ - 421 , 6 + 422 , 55 @ @ Libc . fclose ( fp ) 
 < li > < a href = " # j2me " > Does JNA work with J2ME / Windows Mobile ? < / a > 
 < li > < a href = " # performance " > How does JNA performance compared to custom JNI ? < / a > 
 < / ul > 
 + < a name = structure _ use > < / a > 
 + < h4 > When should I use Structure . ByReference ? Structure . ByValue ? Structure [ ] ? < / h4 > 
 + Find your corresponding native declaration below : 
 + < blockquote > < pre > < code > 
 + typedef struct _ simplestruct { 
 + int myfield ; 
 + } simplestruct ; 
 + 
 + typedef struct _ outerstruct { 
 + simplestruct nested ; / / use Structure 
 + } outerstruct ; 
 + 
 + typedef struct _ outerstruct2 { 
 + simplestruct * byref ; / / use Structure . ByReference 
 + } outerstruct2 ; 
 + 
 + typedef struct _ outerstruct3 { 
 + simplestruct array [ 4 ] ; / / use Structure [ ] 
 + } outerstruct3 ; 
 + 
 + typedef struct _ outerstruct4 { 
 + simplestruct * ptr _ array [ 4 ] ; / / use Structure . ByReference [ ] 
 + } outerstruct4 ; 
 + 
 + / / Field is a pointer to an array of struct 
 + typedef struct _ outerstruct5 { 
 + simplestruct * ptr _ to _ array ; / / use Structure . ByRefeerence , and use 
 + / / Structure . toArray ( ) to allocate array 
 + } outerstruct5 ; 
 + 
 + / / struct pointers as return value or argument 
 + / / use Structure 
 + outerstruct * myfunc ( ) ; 
 + void myfunc ( outerstruct * data ) ; 
 + 
 + / / struct ( by value ) as return value or argument 
 + / / use Structure . ByValue 
 + simplestruct myfunc ( ) ; 
 + void myfunc ( simplestruct ) ; 
 + < / code > < / pre > < / blockquote > 
 + 
 + If you need a ByValue or ByReference class , define them within your main Structure definition like this : 
 + < blockquote > < pre > < code > 
 + public class MyStructure extends Structure { 
 + public class ByValue extends MyStructure implements Structure . ByValue { } 
 + public class ByReference extends MyStructure implements Structure . ByReference { } 
 + } 
 + < / code > < / pre > < / blockquote > 
 + 
 < a name = char _ buffer > < / a > 
 < h4 > How do I read back a function ' s string result ? < / h4 > 
 Suppose you have a function : < br >
