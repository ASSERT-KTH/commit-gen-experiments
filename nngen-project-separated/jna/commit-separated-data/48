BLEU SCORE: 0.013139808552042212

TEST MSG: The pseudo handles for GetCurrentProcess and GetCurrentThread both don ' t need to be closed
GENERATED MSG: Added com . sun . jna . platform . win32 . Kernel32 . ResetEvent .

TEST DIFF (one line): diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> index e0bfe5c . . 9f3ba65 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java <nl> @ @ - 335 , 8 + 335 , 6 @ @ public class Kernel32Test extends TestCase { <nl> HANDLE h = Kernel32 . INSTANCE . GetCurrentThread ( ) ; <nl> assertNotNull ( " No current thread handle " , h ) ; <nl> assertFalse ( " Null current thread handle " , h . equals ( 0 ) ) ; <nl> - / / Calling the CloseHandle function with this handle has no effect <nl> - Kernel32Util . closeHandle ( h ) ; <nl> } <nl> <nl> public void testOpenThread ( ) { <nl> @ @ - 355 , 8 + 353 , 6 @ @ public class Kernel32Test extends TestCase { <nl> HANDLE h = Kernel32 . INSTANCE . GetCurrentProcess ( ) ; <nl> assertNotNull ( " No current process handle " , h ) ; <nl> assertFalse ( " Null current process handle " , h . equals ( 0 ) ) ; <nl> - / / Calling the CloseHandle function with a pseudo handle has no effect <nl> - Kernel32Util . closeHandle ( h ) ; <nl> } <nl> <nl> public void testOpenProcess ( ) {
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java 
 index e0bfe5c . . 9f3ba65 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Kernel32Test . java 
 @ @ - 335 , 8 + 335 , 6 @ @ public class Kernel32Test extends TestCase { 
 HANDLE h = Kernel32 . INSTANCE . GetCurrentThread ( ) ; 
 assertNotNull ( " No current thread handle " , h ) ; 
 assertFalse ( " Null current thread handle " , h . equals ( 0 ) ) ; 
 - / / Calling the CloseHandle function with this handle has no effect 
 - Kernel32Util . closeHandle ( h ) ; 
 } 
 
 public void testOpenThread ( ) { 
 @ @ - 355 , 8 + 353 , 6 @ @ public class Kernel32Test extends TestCase { 
 HANDLE h = Kernel32 . INSTANCE . GetCurrentProcess ( ) ; 
 assertNotNull ( " No current process handle " , h ) ; 
 assertFalse ( " Null current process handle " , h . equals ( 0 ) ) ; 
 - / / Calling the CloseHandle function with a pseudo handle has no effect 
 - Kernel32Util . closeHandle ( h ) ; 
 } 
 
 public void testOpenProcess ( ) {

NEAREST DIFF:
ELIMINATEDSENTENCE
