BLEU SCORE: 0.6997522298221912

TEST MSG: add more NativeMapped return type tests ( IntegerType ) to validate issue # 507
GENERATED MSG: add more NativeMapped tests ( IntegerType ) to validate issue # 507

TEST DIFF (one line): diff - - git a / test / com / sun / jna / DirectReturnTypesTest . java b / test / com / sun / jna / DirectReturnTypesTest . java <nl> index 767869a . . 525a67b 100644 <nl> - - - a / test / com / sun / jna / DirectReturnTypesTest . java <nl> + + + b / test / com / sun / jna / DirectReturnTypesTest . java <nl> @ @ - 75 , 6 + 75 , 8 @ @ public class DirectReturnTypesTest extends ReturnTypesTest { <nl> <nl> public static class DirectNativeMappedLibrary implements NativeMappedLibrary { <nl> public native Custom returnInt32Argument ( int arg ) ; <nl> + public native size _ t returnInt32Magic ( ) ; <nl> + public native size _ t returnInt64Magic ( ) ; <nl> static { <nl> Native . register ( " testlib " ) ; <nl> } <nl> diff - - git a / test / com / sun / jna / ReturnTypesTest . java b / test / com / sun / jna / ReturnTypesTest . java <nl> index 4b7e367 . . 7977160 100644 <nl> - - - a / test / com / sun / jna / ReturnTypesTest . java <nl> + + + b / test / com / sun / jna / ReturnTypesTest . java <nl> @ @ - 182 , 6 + 182 , 17 @ @ public class ReturnTypesTest extends TestCase { <nl> <nl> public interface NativeMappedLibrary extends Library { <nl> Custom returnInt32Argument ( int arg ) ; <nl> + size _ t returnInt32Magic ( ) ; <nl> + size _ t returnInt64Magic ( ) ; <nl> + } <nl> + public static class size _ t extends IntegerType { <nl> + public size _ t ( ) { <nl> + this ( 0 ) ; <nl> + } <nl> + public size _ t ( long value ) { <nl> + super ( Native . SIZE _ T _ SIZE , true ) ; <nl> + setValue ( value ) ; <nl> + } <nl> } <nl> public static class Custom implements NativeMapped { <nl> private int value ; <nl> @ @ - 210 , 8 + 221 , 14 @ @ public class ReturnTypesTest extends TestCase { <nl> public void testInvokeNativeMapped ( ) { <nl> NativeMappedLibrary lib = loadNativeMappedLibrary ( ) ; <nl> final int MAGIC = 0x12345678 ; <nl> + final long MAGIC64 = 0x123456789ABCDEF0L ; <nl> final Custom EXPECTED = new Custom ( MAGIC ) ; <nl> - assertEquals ( " Argument not mapped " , EXPECTED , lib . returnInt32Argument ( MAGIC ) ) ; <nl> + assertEquals ( " NativeMapped ' Custom ' result not mapped " , EXPECTED , lib . returnInt32Argument ( MAGIC ) ) ; <nl> + <nl> + assertEquals ( " NativeMapped IntegerType result not mapped ( 32 ) " , <nl> + new size _ t ( MAGIC ) , lib . returnInt32Magic ( ) ) ; <nl> + assertEquals ( " NativeMapped IntegerType result not mapped ( 64 ) " , <nl> + new size _ t ( MAGIC64 ) , lib . returnInt64Magic ( ) ) ; <nl> } <nl> <nl> public void testInvokeFloat ( ) {
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / test / com / sun / jna / DirectReturnTypesTest . java b / test / com / sun / jna / DirectReturnTypesTest . java 
 index 767869a . . 525a67b 100644 
 - - - a / test / com / sun / jna / DirectReturnTypesTest . java 
 + + + b / test / com / sun / jna / DirectReturnTypesTest . java 
 @ @ - 75 , 6 + 75 , 8 @ @ public class DirectReturnTypesTest extends ReturnTypesTest { 
 
 public static class DirectNativeMappedLibrary implements NativeMappedLibrary { 
 public native Custom returnInt32Argument ( int arg ) ; 
 + public native size _ t returnInt32Magic ( ) ; 
 + public native size _ t returnInt64Magic ( ) ; 
 static { 
 Native . register ( " testlib " ) ; 
 } 
 diff - - git a / test / com / sun / jna / ReturnTypesTest . java b / test / com / sun / jna / ReturnTypesTest . java 
 index 4b7e367 . . 7977160 100644 
 - - - a / test / com / sun / jna / ReturnTypesTest . java 
 + + + b / test / com / sun / jna / ReturnTypesTest . java 
 @ @ - 182 , 6 + 182 , 17 @ @ public class ReturnTypesTest extends TestCase { 
 
 public interface NativeMappedLibrary extends Library { 
 Custom returnInt32Argument ( int arg ) ; 
 + size _ t returnInt32Magic ( ) ; 
 + size _ t returnInt64Magic ( ) ; 
 + } 
 + public static class size _ t extends IntegerType { 
 + public size _ t ( ) { 
 + this ( 0 ) ; 
 + } 
 + public size _ t ( long value ) { 
 + super ( Native . SIZE _ T _ SIZE , true ) ; 
 + setValue ( value ) ; 
 + } 
 } 
 public static class Custom implements NativeMapped { 
 private int value ; 
 @ @ - 210 , 8 + 221 , 14 @ @ public class ReturnTypesTest extends TestCase { 
 public void testInvokeNativeMapped ( ) { 
 NativeMappedLibrary lib = loadNativeMappedLibrary ( ) ; 
 final int MAGIC = 0x12345678 ; 
 + final long MAGIC64 = 0x123456789ABCDEF0L ; 
 final Custom EXPECTED = new Custom ( MAGIC ) ; 
 - assertEquals ( " Argument not mapped " , EXPECTED , lib . returnInt32Argument ( MAGIC ) ) ; 
 + assertEquals ( " NativeMapped ' Custom ' result not mapped " , EXPECTED , lib . returnInt32Argument ( MAGIC ) ) ; 
 + 
 + assertEquals ( " NativeMapped IntegerType result not mapped ( 32 ) " , 
 + new size _ t ( MAGIC ) , lib . returnInt32Magic ( ) ) ; 
 + assertEquals ( " NativeMapped IntegerType result not mapped ( 64 ) " , 
 + new size _ t ( MAGIC64 ) , lib . returnInt64Magic ( ) ) ; 
 } 
 
 public void testInvokeFloat ( ) {

NEAREST DIFF:
ELIMINATEDSENTENCE
