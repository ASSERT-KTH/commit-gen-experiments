BLEU SCORE: 0.040583489434387374

TEST MSG: Mapped SHGetSpecialFolderPath of Shell32 . dll
GENERATED MSG: some changes

TEST DIFF (one line): diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> index 4d96331 . . 321a20c 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2007 Timothy Wall , All Rights Reserved <nl> + / * Copyright ( c ) 2007 , 2013 Timothy Wall , Markus Karg , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 151 , 4 + 151 , 21 @ @ public interface Shell32 extends ShellAPI , StdCallLibrary { <nl> * / <nl> INT _ PTR ShellExecute ( HWND hwnd , String lpOperation , String lpFile , String lpParameters , String lpDirectory , <nl> int nShowCmd ) ; <nl> + <nl> + / * * <nl> + * Retrieves the path of a special folder , identified by its CSIDL . <nl> + * <nl> + * @ param owner <nl> + * Reserved . <nl> + * @ param path <nl> + * A pointer to a null - terminated string that receives the drive and path of the specified folder . This buffer must be at least MAX _ PATH <nl> + * characters in size . <nl> + * @ param csidl <nl> + * A CSIDL that identifies the folder of interest . If a virtual folder is specified , this function will fail . <nl> + * @ param create <nl> + * Indicates whether the folder should be created if it does not already exist . If this value is nonzero , the folder is created . If this value is <nl> + * zero , the folder is not created . <nl> + * @ return { @ code true } if successful ; otherwise , { @ code false } . <nl> + * / <nl> + boolean SHGetSpecialFolderPath ( HWND owner , char [ ] path , int csidl , boolean create ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java <nl> index 5c1c964 . . dd85003 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2010 Daniel Doubrovkine , All Rights Reserved <nl> + / * Copyright ( c ) 2010 , 2013 Daniel Doubrovkine , Markus Karg , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 20 , 6 + 20 , 7 @ @ import com . sun . jna . platform . win32 . WinNT . HRESULT ; <nl> / * * <nl> * Shell32 Utility API . <nl> * @ author dblock [ at ] dblock . org <nl> + * @ author markus [ at ] headcrashing [ dot ] eu <nl> * / <nl> public abstract class Shell32Util { <nl> 	 <nl> @ @ - 55 , 4 + 56 , 21 @ @ public abstract class Shell32Util { <nl> 	 public static String getFolderPath ( int nFolder ) { <nl> 	 	 return getFolderPath ( null , nFolder , ShlObj . SHGFP _ TYPE _ CURRENT ) ; <nl> 	 } <nl> + <nl> + 	 / * * <nl> + * Retrieves the path of a special folder , identified by its CSIDL . <nl> + * <nl> + * @ param csidl <nl> + * A CSIDL that identifies the folder of interest . If a virtual folder is specified , this function will fail . <nl> + * @ param create <nl> + * Indicates whether the folder should be created if it does not already exist . If this value is nonzero , the folder is created . If this value is <nl> + * zero , the folder is not created . <nl> + * @ return The drive and path of the specified folder <nl> + * / <nl> + public static final String getSpecialFolderPath ( final int csidl , final boolean create ) { <nl> + final char [ ] pszPath = new char [ WinDef . MAX _ PATH ] ; <nl> + if ( ! Shell32 . INSTANCE . SHGetSpecialFolderPath ( null , pszPath , csidl , create ) ) <nl> + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; <nl> + return Native . toString ( pszPath ) ; <nl> + } <nl> } <nl> \ No newline at end of file <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> index 8eeb7a1 . . 00d855a 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2010 Daniel Doubrovkine , All Rights Reserved <nl> + / * Copyright ( c ) 2010 , 2013 Daniel Doubrovkine , Markus Karg , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 19 , 6 + 19 , 7 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> <nl> / * * <nl> * @ author dblock [ at ] dblock [ dot ] org <nl> + * @ author markus [ at ] headcrashing [ dot ] eu <nl> * / <nl> public class Shell32Test extends TestCase { <nl> <nl> @ @ - 42 , 4 + 43 , 9 @ @ public class Shell32Test extends TestCase { <nl> / / should release the interface , but we need Com4JNA to do that . <nl> } <nl> <nl> + public final void testSHGetSpecialFolderPath ( ) { <nl> + final char [ ] pszPath = new char [ WinDef . MAX _ PATH ] ; <nl> + assertTrue ( Shell32 . INSTANCE . SHGetSpecialFolderPath ( null , pszPath , ShlObj . CSIDL _ APPDATA , false ) ) ; <nl> + assertFalse ( Native . toString ( pszPath ) . isEmpty ( ) ) ; <nl> + } <nl> } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java <nl> index 1a40d31 . . 733a7cc 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java <nl> @ @ - 1 , 4 + 1 , 4 @ @ <nl> - / * Copyright ( c ) 2010 Daniel Doubrovkine , All Rights Reserved <nl> + / * Copyright ( c ) 2010 , 2013 Daniel Doubrovkine , Markus Karg , All Rights Reserved <nl> * <nl> * This library is free software ; you can redistribute it and / or <nl> * modify it under the terms of the GNU Lesser General Public <nl> @ @ - 16 , 6 + 16 , 7 @ @ import junit . framework . TestCase ; <nl> <nl> / * * <nl> * @ author dblock [ at ] dblock [ dot ] org <nl> + * @ author markus [ at ] headcrashing [ dot ] eu <nl> * / <nl> public class Shell32UtilTest extends TestCase { <nl> <nl> @ @ - 24 , 9 + 25 , 14 @ @ public class Shell32UtilTest extends TestCase { <nl> System . out . println ( " Windows : " + Shell32Util . getFolderPath ( ShlObj . CSIDL _ WINDOWS ) ) ; <nl> System . out . println ( " System : " + Shell32Util . getFolderPath ( ShlObj . CSIDL _ SYSTEM ) ) ; <nl> System . out . println ( " AppData : " + Shell32Util . getFolderPath ( ShlObj . CSIDL _ APPDATA ) ) ; <nl> + System . out . println ( " AppData : " + Shell32Util . getSpecialFolderPath ( ShlObj . CSIDL _ APPDATA , false ) ) ; <nl> } <nl> <nl> 	 public void testGetFolderPath ( ) { <nl> 	 	 assertTrue ( Shell32Util . getFolderPath ( ShlObj . CSIDL _ WINDOWS ) . length ( ) > 0 ) ; <nl> 	 } <nl> + <nl> + 	 public final void testGetSpecialFolderPath ( ) { <nl> + assertFalse ( Shell32Util . getSpecialFolderPath ( ShlObj . CSIDL _ APPDATA , false ) . isEmpty ( ) ) ; <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / ChangeLog b / ChangeLog <nl> index 289d195 . . ff76645 100644 <nl> - - - a / ChangeLog <nl> + + + b / ChangeLog <nl> @ @ - 1 , 3 + 1 , 13 @ @ <nl> + 2013 - 01 - 10 Anthony Green < green @ moxielogic . com > <nl> + <nl> + 	 * configure . ac : Put local . exp in the right place . <nl> + 	 * configure : Rebuilt . <nl> + <nl> + 	 * src / x86 / ffi . c : Update comment about regparm function attributes . <nl> + 	 * src / x86 / sysv . S ( ffi _ closure _ SYSV ) : The SUNPRO compiler requires <nl> + 	 that all function arguments be passed on the stack ( no regparm <nl> + 	 support ) . <nl> + <nl> 2013 - 01 - 08 Anthony Green < green @ moxielogic . com > <nl> <nl> 	 * configure . ac : Generate local . exp . This sets CC _ FOR _ TARGET <nl> diff - - git a / configure b / configure <nl> index 5876eb7 . . 4a12b96 100755 <nl> - - - a / configure <nl> + + + b / configure <nl> @ @ - 13068 , 10 + 13068 , 10 @ @ ac _ compiler _ gnu = $ ac _ cv _ c _ compiler _ gnu <nl> <nl> if test " x $ GCC " = " xyes " ; then <nl> CFLAGS = " $ CFLAGS - fexceptions " <nl> - touch testsuite / local . exp <nl> + touch local . exp <nl> else <nl> cat > local . exp < < EOF <nl> - set CC _ FOR _ TARGET $ CC <nl> + set CC _ FOR _ TARGET " $ CC " <nl> EOF <nl> fi <nl> <nl> diff - - git a / configure . ac b / configure . ac <nl> index 7ffb36c . . 13d5bc2 100644 <nl> - - - a / configure . ac <nl> + + + b / configure . ac <nl> @ @ - 40 , 10 + 40 , 10 @ @ AX _ CC _ MAXOPT <nl> AX _ CFLAGS _ WARN _ ALL <nl> if test " x $ GCC " = " xyes " ; then <nl> CFLAGS = " $ CFLAGS - fexceptions " <nl> - touch testsuite / local . exp <nl> + touch local . exp <nl> else <nl> cat > local . exp < < EOF <nl> - set CC _ FOR _ TARGET $ CC <nl> + set CC _ FOR _ TARGET " $ CC " <nl> EOF <nl> fi <nl> <nl> diff - - git a / src / x86 / ffi . c b / src / x86 / ffi . c <nl> index 611e221 . . 3f46693 100644 <nl> - - - a / src / x86 / ffi . c <nl> + + + b / src / x86 / ffi . c <nl> @ @ - 424 , 7 + 424 , 7 @ @ void ffi _ call ( ffi _ cif * cif , void ( * fn ) ( void ) , void * rvalue , void * * avalue ) <nl> / * * private members * * / <nl> <nl> / * The following _ _ attribute _ _ ( ( regparm ( 1 ) ) ) decorations will have no effect <nl> - on MSVC - standard cdecl convention applies . * / <nl> + on MSVC or SUNPRO _ C - - standard conventions apply . * / <nl> static void ffi _ prep _ incoming _ args _ SYSV ( char * stack , void * * ret , <nl> void * * args , ffi _ cif * cif ) ; <nl> void FFI _ HIDDEN ffi _ closure _ SYSV ( ffi _ closure * ) <nl> diff - - git a / src / x86 / sysv . S b / src / x86 / sysv . S <nl> index 69e7e8d . . 71502bb 100644 <nl> - - - a / src / x86 / sysv . S <nl> + + + b / src / x86 / sysv . S <nl> @ @ - 182 , 9 + 182 , 19 @ @ ffi _ closure _ SYSV : <nl> 	 leal 	 - 24 ( % ebp ) , % edx <nl> 	 movl 	 % edx , - 12 ( % ebp ) 	 / * resp * / <nl> 	 leal 	 8 ( % ebp ) , % edx <nl> + # ifdef _ _ SUNPRO _ C <nl> + 	 / * The SUNPRO compiler doesn ' t support GCC ' s regparm function <nl> + 	 attribute , so we have to pass all three arguments to <nl> + 	 ffi _ closure _ SYSV _ inner on the stack . * / <nl> + 	 movl 	 % edx , 8 ( % esp ) 	 / * args = _ _ builtin _ dwarf _ cfa ( ) * / <nl> + 	 leal 	 - 12 ( % ebp ) , % edx <nl> + 	 movl 	 % edx , 4 ( % esp ) 	 / * & resp * / <nl> + 	 movl % eax , ( % esp ) / * closure * / <nl> + # else <nl> 	 movl 	 % edx , 4 ( % esp ) 	 / * args = _ _ builtin _ dwarf _ cfa ( ) * / <nl> 	 leal 	 - 12 ( % ebp ) , % edx <nl> 	 movl 	 % edx , ( % esp ) 	 / * & resp * / <nl> + # endif <nl> # if defined HAVE _ HIDDEN _ VISIBILITY _ ATTRIBUTE | | ! defined _ _ PIC _ _ <nl> 	 call 	 ffi _ closure _ SYSV _ inner <nl> # else

TEST DIFF:
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java 
 index 4d96331 . . 321a20c 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32 . java 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 - / * Copyright ( c ) 2007 Timothy Wall , All Rights Reserved 
 + / * Copyright ( c ) 2007 , 2013 Timothy Wall , Markus Karg , All Rights Reserved 
 * 
 * This library is free software ; you can redistribute it and / or 
 * modify it under the terms of the GNU Lesser General Public 
 @ @ - 151 , 4 + 151 , 21 @ @ public interface Shell32 extends ShellAPI , StdCallLibrary { 
 * / 
 INT _ PTR ShellExecute ( HWND hwnd , String lpOperation , String lpFile , String lpParameters , String lpDirectory , 
 int nShowCmd ) ; 
 + 
 + / * * 
 + * Retrieves the path of a special folder , identified by its CSIDL . 
 + * 
 + * @ param owner 
 + * Reserved . 
 + * @ param path 
 + * A pointer to a null - terminated string that receives the drive and path of the specified folder . This buffer must be at least MAX _ PATH 
 + * characters in size . 
 + * @ param csidl 
 + * A CSIDL that identifies the folder of interest . If a virtual folder is specified , this function will fail . 
 + * @ param create 
 + * Indicates whether the folder should be created if it does not already exist . If this value is nonzero , the folder is created . If this value is 
 + * zero , the folder is not created . 
 + * @ return { @ code true } if successful ; otherwise , { @ code false } . 
 + * / 
 + boolean SHGetSpecialFolderPath ( HWND owner , char [ ] path , int csidl , boolean create ) ; 
 } 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java 
 index 5c1c964 . . dd85003 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Shell32Util . java 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 - / * Copyright ( c ) 2010 Daniel Doubrovkine , All Rights Reserved 
 + / * Copyright ( c ) 2010 , 2013 Daniel Doubrovkine , Markus Karg , All Rights Reserved 
 * 
 * This library is free software ; you can redistribute it and / or 
 * modify it under the terms of the GNU Lesser General Public 
 @ @ - 20 , 6 + 20 , 7 @ @ import com . sun . jna . platform . win32 . WinNT . HRESULT ; 
 / * * 
 * Shell32 Utility API . 
 * @ author dblock [ at ] dblock . org 
 + * @ author markus [ at ] headcrashing [ dot ] eu 
 * / 
 public abstract class Shell32Util { 
 	 
 @ @ - 55 , 4 + 56 , 21 @ @ public abstract class Shell32Util { 
 	 public static String getFolderPath ( int nFolder ) { 
 	 	 return getFolderPath ( null , nFolder , ShlObj . SHGFP _ TYPE _ CURRENT ) ; 
 	 } 
 + 
 + 	 / * * 
 + * Retrieves the path of a special folder , identified by its CSIDL . 
 + * 
 + * @ param csidl 
 + * A CSIDL that identifies the folder of interest . If a virtual folder is specified , this function will fail . 
 + * @ param create 
 + * Indicates whether the folder should be created if it does not already exist . If this value is nonzero , the folder is created . If this value is 
 + * zero , the folder is not created . 
 + * @ return The drive and path of the specified folder 
 + * / 
 + public static final String getSpecialFolderPath ( final int csidl , final boolean create ) { 
 + final char [ ] pszPath = new char [ WinDef . MAX _ PATH ] ; 
 + if ( ! Shell32 . INSTANCE . SHGetSpecialFolderPath ( null , pszPath , csidl , create ) ) 
 + throw new Win32Exception ( Kernel32 . INSTANCE . GetLastError ( ) ) ; 
 + return Native . toString ( pszPath ) ; 
 + } 
 } 
 \ No newline at end of file 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java 
 index 8eeb7a1 . . 00d855a 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 - / * Copyright ( c ) 2010 Daniel Doubrovkine , All Rights Reserved 
 + / * Copyright ( c ) 2010 , 2013 Daniel Doubrovkine , Markus Karg , All Rights Reserved 
 * 
 * This library is free software ; you can redistribute it and / or 
 * modify it under the terms of the GNU Lesser General Public 
 @ @ - 19 , 6 + 19 , 7 @ @ import com . sun . jna . ptr . PointerByReference ; 
 
 / * * 
 * @ author dblock [ at ] dblock [ dot ] org 
 + * @ author markus [ at ] headcrashing [ dot ] eu 
 * / 
 public class Shell32Test extends TestCase { 
 
 @ @ - 42 , 4 + 43 , 9 @ @ public class Shell32Test extends TestCase { 
 / / should release the interface , but we need Com4JNA to do that . 
 } 
 
 + public final void testSHGetSpecialFolderPath ( ) { 
 + final char [ ] pszPath = new char [ WinDef . MAX _ PATH ] ; 
 + assertTrue ( Shell32 . INSTANCE . SHGetSpecialFolderPath ( null , pszPath , ShlObj . CSIDL _ APPDATA , false ) ) ; 
 + assertFalse ( Native . toString ( pszPath ) . isEmpty ( ) ) ; 
 + } 
 } 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java 
 index 1a40d31 . . 733a7cc 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32UtilTest . java 
 @ @ - 1 , 4 + 1 , 4 @ @ 
 - / * Copyright ( c ) 2010 Daniel Doubrovkine , All Rights Reserved 
 + / * Copyright ( c ) 2010 , 2013 Daniel Doubrovkine , Markus Karg , All Rights Reserved 
 * 
 * This library is free software ; you can redistribute it and / or 
 * modify it under the terms of the GNU Lesser General Public 
 @ @ - 16 , 6 + 16 , 7 @ @ import junit . framework . TestCase ; 
 
 / * * 
 * @ author dblock [ at ] dblock [ dot ] org 
 + * @ author markus [ at ] headcrashing [ dot ] eu 
 * / 
 public class Shell32UtilTest extends TestCase { 
 
 @ @ - 24 , 9 + 25 , 14 @ @ public class Shell32UtilTest extends TestCase { 
 System . out . println ( " Windows : " + Shell32Util . getFolderPath ( ShlObj . CSIDL _ WINDOWS ) ) ; 
 System . out . println ( " System : " + Shell32Util . getFolderPath ( ShlObj . CSIDL _ SYSTEM ) ) ; 
 System . out . println ( " AppData : " + Shell32Util . getFolderPath ( ShlObj . CSIDL _ APPDATA ) ) ; 
 + System . out . println ( " AppData : " + Shell32Util . getSpecialFolderPath ( ShlObj . CSIDL _ APPDATA , false ) ) ; 
 } 
 
 	 public void testGetFolderPath ( ) { 
 	 	 assertTrue ( Shell32Util . getFolderPath ( ShlObj . CSIDL _ WINDOWS ) . length ( ) > 0 ) ; 
 	 } 
 + 
 + 	 public final void testGetSpecialFolderPath ( ) { 
 + assertFalse ( Shell32Util . getSpecialFolderPath ( ShlObj . CSIDL _ APPDATA , false ) . isEmpty ( ) ) ; 
 + } 
 }

NEAREST DIFF:
diff - - git a / ChangeLog b / ChangeLog 
 index 289d195 . . ff76645 100644 
 - - - a / ChangeLog 
 + + + b / ChangeLog 
 @ @ - 1 , 3 + 1 , 13 @ @ 
 + 2013 - 01 - 10 Anthony Green < green @ moxielogic . com > 
 + 
 + 	 * configure . ac : Put local . exp in the right place . 
 + 	 * configure : Rebuilt . 
 + 
 + 	 * src / x86 / ffi . c : Update comment about regparm function attributes . 
 + 	 * src / x86 / sysv . S ( ffi _ closure _ SYSV ) : The SUNPRO compiler requires 
 + 	 that all function arguments be passed on the stack ( no regparm 
 + 	 support ) . 
 + 
 2013 - 01 - 08 Anthony Green < green @ moxielogic . com > 
 
 	 * configure . ac : Generate local . exp . This sets CC _ FOR _ TARGET 
 diff - - git a / configure b / configure 
 index 5876eb7 . . 4a12b96 100755 
 - - - a / configure 
 + + + b / configure 
 @ @ - 13068 , 10 + 13068 , 10 @ @ ac _ compiler _ gnu = $ ac _ cv _ c _ compiler _ gnu 
 
 if test " x $ GCC " = " xyes " ; then 
 CFLAGS = " $ CFLAGS - fexceptions " 
 - touch testsuite / local . exp 
 + touch local . exp 
 else 
 cat > local . exp < < EOF 
 - set CC _ FOR _ TARGET $ CC 
 + set CC _ FOR _ TARGET " $ CC " 
 EOF 
 fi 
 
 diff - - git a / configure . ac b / configure . ac 
 index 7ffb36c . . 13d5bc2 100644 
 - - - a / configure . ac 
 + + + b / configure . ac 
 @ @ - 40 , 10 + 40 , 10 @ @ AX _ CC _ MAXOPT 
 AX _ CFLAGS _ WARN _ ALL 
 if test " x $ GCC " = " xyes " ; then 
 CFLAGS = " $ CFLAGS - fexceptions " 
 - touch testsuite / local . exp 
 + touch local . exp 
 else 
 cat > local . exp < < EOF 
 - set CC _ FOR _ TARGET $ CC 
 + set CC _ FOR _ TARGET " $ CC " 
 EOF 
 fi 
 
 diff - - git a / src / x86 / ffi . c b / src / x86 / ffi . c 
 index 611e221 . . 3f46693 100644 
 - - - a / src / x86 / ffi . c 
 + + + b / src / x86 / ffi . c 
 @ @ - 424 , 7 + 424 , 7 @ @ void ffi _ call ( ffi _ cif * cif , void ( * fn ) ( void ) , void * rvalue , void * * avalue ) 
 / * * private members * * / 
 
 / * The following _ _ attribute _ _ ( ( regparm ( 1 ) ) ) decorations will have no effect 
 - on MSVC - standard cdecl convention applies . * / 
 + on MSVC or SUNPRO _ C - - standard conventions apply . * / 
 static void ffi _ prep _ incoming _ args _ SYSV ( char * stack , void * * ret , 
 void * * args , ffi _ cif * cif ) ; 
 void FFI _ HIDDEN ffi _ closure _ SYSV ( ffi _ closure * ) 
 diff - - git a / src / x86 / sysv . S b / src / x86 / sysv . S 
 index 69e7e8d . . 71502bb 100644 
 - - - a / src / x86 / sysv . S 
 + + + b / src / x86 / sysv . S 
 @ @ - 182 , 9 + 182 , 19 @ @ ffi _ closure _ SYSV : 
 	 leal 	 - 24 ( % ebp ) , % edx 
 	 movl 	 % edx , - 12 ( % ebp ) 	 / * resp * / 
 	 leal 	 8 ( % ebp ) , % edx 
 + # ifdef _ _ SUNPRO _ C 
 + 	 / * The SUNPRO compiler doesn ' t support GCC ' s regparm function 
 + 	 attribute , so we have to pass all three arguments to 
 + 	 ffi _ closure _ SYSV _ inner on the stack . * / 
 + 	 movl 	 % edx , 8 ( % esp ) 	 / * args = _ _ builtin _ dwarf _ cfa ( ) * / 
 + 	 leal 	 - 12 ( % ebp ) , % edx 
 + 	 movl 	 % edx , 4 ( % esp ) 	 / * & resp * / 
 + 	 movl % eax , ( % esp ) / * closure * / 
 + # else 
 	 movl 	 % edx , 4 ( % esp ) 	 / * args = _ _ builtin _ dwarf _ cfa ( ) * / 
 	 leal 	 - 12 ( % ebp ) , % edx 
 	 movl 	 % edx , ( % esp ) 	 / * & resp * / 
 + # endif 
 # if defined HAVE _ HIDDEN _ VISIBILITY _ ATTRIBUTE | | ! defined _ _ PIC _ _ 
 	 call 	 ffi _ closure _ SYSV _ inner 
 # else
