BLEU SCORE: 0.033864985683445356

TEST MSG: Improve speed of GDIUtil . getScreenshot ( ) by ~ 30 %
GENERATED MSG: Restore original imports .

TEST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 3dba53a . . 3441a0c 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 9 , 6 + 9 , 7 @ @ Features <nl> - - - - - - - - <nl> * [ # 757 ] ( https : / / github . com / java - native - access / jna / issues / 757 ) : Build android archive ( AAR ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 767 ] ( https : / / github . com / java - native - access / jna / pull / 767 ) : Add Win32 API mapping for Shlwapi PathIsUNC - [ @ ivanwick ] ( https : / / github . com / ivanwick ) . <nl> + * [ # 772 ] ( https : / / github . com / java - native - access / jna / pull / 772 ) : Improved speed of GDIUtil . getScreenshot ( ) by ~ 30 % - [ @ sommd ] ( https : / / github . com / sommd ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / GDI32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / GDI32Util . java <nl> index 660914a . . 3a80762 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / GDI32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / GDI32Util . java <nl> @ @ - 25 , 13 + 25 , 23 @ @ package com . sun . jna . platform . win32 ; <nl> <nl> import java . awt . Rectangle ; <nl> import java . awt . image . BufferedImage ; <nl> + import java . awt . image . DataBuffer ; <nl> + import java . awt . image . DataBufferInt ; <nl> + import java . awt . image . DirectColorModel ; <nl> + import java . awt . image . Raster ; <nl> + import java . awt . image . WritableRaster ; <nl> <nl> import com . sun . jna . Memory ; <nl> import com . sun . jna . Native ; <nl> + import com . sun . jna . platform . win32 . GDI32 ; <nl> + import com . sun . jna . platform . win32 . User32 ; <nl> + import com . sun . jna . platform . win32 . Win32Exception ; <nl> import com . sun . jna . platform . win32 . WinDef . HBITMAP ; <nl> import com . sun . jna . platform . win32 . WinDef . HDC ; <nl> import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> import com . sun . jna . platform . win32 . WinDef . RECT ; <nl> + import com . sun . jna . platform . win32 . WinError ; <nl> + import com . sun . jna . platform . win32 . WinGDI ; <nl> import com . sun . jna . platform . win32 . WinGDI . BITMAPINFO ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> <nl> @ @ - 41 , 6 + 51 , 13 @ @ import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> * @ author mlfreeman [ at ] gmail . com <nl> * / <nl> public class GDI32Util { <nl> + 	 private static final DirectColorModel SCREENSHOT _ COLOR _ MODEL = new DirectColorModel ( 24 , 0x00FF0000 , 0xFF00 , 0xFF ) ; <nl> + 	 private static final int [ ] SCREENSHOT _ BAND _ MASKS = { <nl> + 	 SCREENSHOT _ COLOR _ MODEL . getRedMask ( ) , <nl> + SCREENSHOT _ COLOR _ MODEL . getGreenMask ( ) , <nl> + SCREENSHOT _ COLOR _ MODEL . getBlueMask ( ) <nl> + 	 } ; <nl> + <nl> 	 / * * <nl> 	 * Takes a screenshot of the given window <nl> 	 * <nl> @ @ - 86 , 8 + 103 , 6 @ @ public class GDI32Util { <nl> 	 	 BufferedImage image = null ; <nl> 	 	 <nl> 	 	 try { <nl> - 	 	 	 image = new BufferedImage ( windowWidth , windowHeight , BufferedImage . TYPE _ INT _ RGB ) ; <nl> - 	 	 	 <nl> 	 	 	 hdcTargetMem = GDI32 . INSTANCE . CreateCompatibleDC ( hdcTarget ) ; <nl> 	 	 	 if ( hdcTargetMem = = null ) { <nl> 	 	 	 	 throw new Win32Exception ( Native . getLastError ( ) ) ; <nl> @ @ - 122 , 8 + 137 , 11 @ @ public class GDI32Util { <nl> 	 	 	 	 throw new Win32Exception ( Native . getLastError ( ) ) ; <nl> 	 	 	 } <nl> <nl> - 	 	 	 image . setRGB ( 0 , 0 , windowWidth , windowHeight , buffer . getIntArray ( 0 , windowWidth * windowHeight ) , 0 , <nl> - 	 	 	 	 	 windowWidth ) ; <nl> + 	 	 	 int bufferSize = windowWidth * windowHeight ; <nl> + 	 	 	 DataBuffer dataBuffer = new DataBufferInt ( buffer . getIntArray ( 0 , bufferSize ) , bufferSize ) ; <nl> + 	 	 	 WritableRaster raster = Raster . createPackedRaster ( dataBuffer , windowWidth , windowHeight , windowWidth , <nl> + SCREENSHOT _ BAND _ MASKS , null ) ; <nl> + 	 	 	 image = new BufferedImage ( SCREENSHOT _ COLOR _ MODEL , raster , false , null ) ; <nl> <nl> 	 	 } catch ( Win32Exception e ) { <nl> 	 	 	 we = e ;
NEAREST DIFF (one line): diff - - git a / README . md b / README . md <nl> index 8b836fe . . fb7433c 100644 <nl> - - - a / README . md <nl> + + + b / README . md <nl> @ @ - 18 , 8 + 18 , 8 @ @ Download <nl> <nl> Version 3 . 3 . 0 <nl> <nl> - * [ jna . jar ] ( raw / 3 . 3 . 0 / jnalib / dist / jna . jar ) <nl> - * [ platform . jar ] ( raw / 3 . 3 . 0 / jnalib / dist / platform . jar ) <nl> + * [ jna . jar ] ( jna / raw / 3 . 3 . 0 / jnalib / dist / jna . jar ) <nl> + * [ platform . jar ] ( jna / raw / 3 . 3 . 0 / jnalib / dist / platform . jar ) <nl> <nl> Features <nl> = = = = = = = =

TEST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 3dba53a . . 3441a0c 100644 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 9 , 6 + 9 , 7 @ @ Features 
 - - - - - - - - 
 * [ # 757 ] ( https : / / github . com / java - native - access / jna / issues / 757 ) : Build android archive ( AAR ) - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 * [ # 767 ] ( https : / / github . com / java - native - access / jna / pull / 767 ) : Add Win32 API mapping for Shlwapi PathIsUNC - [ @ ivanwick ] ( https : / / github . com / ivanwick ) . 
 + * [ # 772 ] ( https : / / github . com / java - native - access / jna / pull / 772 ) : Improved speed of GDIUtil . getScreenshot ( ) by ~ 30 % - [ @ sommd ] ( https : / / github . com / sommd ) . 
 
 Bug Fixes 
 - - - - - - - - - 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / GDI32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / GDI32Util . java 
 index 660914a . . 3a80762 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / GDI32Util . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / GDI32Util . java 
 @ @ - 25 , 13 + 25 , 23 @ @ package com . sun . jna . platform . win32 ; 
 
 import java . awt . Rectangle ; 
 import java . awt . image . BufferedImage ; 
 + import java . awt . image . DataBuffer ; 
 + import java . awt . image . DataBufferInt ; 
 + import java . awt . image . DirectColorModel ; 
 + import java . awt . image . Raster ; 
 + import java . awt . image . WritableRaster ; 
 
 import com . sun . jna . Memory ; 
 import com . sun . jna . Native ; 
 + import com . sun . jna . platform . win32 . GDI32 ; 
 + import com . sun . jna . platform . win32 . User32 ; 
 + import com . sun . jna . platform . win32 . Win32Exception ; 
 import com . sun . jna . platform . win32 . WinDef . HBITMAP ; 
 import com . sun . jna . platform . win32 . WinDef . HDC ; 
 import com . sun . jna . platform . win32 . WinDef . HWND ; 
 import com . sun . jna . platform . win32 . WinDef . RECT ; 
 + import com . sun . jna . platform . win32 . WinError ; 
 + import com . sun . jna . platform . win32 . WinGDI ; 
 import com . sun . jna . platform . win32 . WinGDI . BITMAPINFO ; 
 import com . sun . jna . platform . win32 . WinNT . HANDLE ; 
 
 @ @ - 41 , 6 + 51 , 13 @ @ import com . sun . jna . platform . win32 . WinNT . HANDLE ; 
 * @ author mlfreeman [ at ] gmail . com 
 * / 
 public class GDI32Util { 
 + 	 private static final DirectColorModel SCREENSHOT _ COLOR _ MODEL = new DirectColorModel ( 24 , 0x00FF0000 , 0xFF00 , 0xFF ) ; 
 + 	 private static final int [ ] SCREENSHOT _ BAND _ MASKS = { 
 + 	 SCREENSHOT _ COLOR _ MODEL . getRedMask ( ) , 
 + SCREENSHOT _ COLOR _ MODEL . getGreenMask ( ) , 
 + SCREENSHOT _ COLOR _ MODEL . getBlueMask ( ) 
 + 	 } ; 
 + 
 	 / * * 
 	 * Takes a screenshot of the given window 
 	 * 
 @ @ - 86 , 8 + 103 , 6 @ @ public class GDI32Util { 
 	 	 BufferedImage image = null ; 
 	 	 
 	 	 try { 
 - 	 	 	 image = new BufferedImage ( windowWidth , windowHeight , BufferedImage . TYPE _ INT _ RGB ) ; 
 - 	 	 	 
 	 	 	 hdcTargetMem = GDI32 . INSTANCE . CreateCompatibleDC ( hdcTarget ) ; 
 	 	 	 if ( hdcTargetMem = = null ) { 
 	 	 	 	 throw new Win32Exception ( Native . getLastError ( ) ) ; 
 @ @ - 122 , 8 + 137 , 11 @ @ public class GDI32Util { 
 	 	 	 	 throw new Win32Exception ( Native . getLastError ( ) ) ; 
 	 	 	 } 
 
 - 	 	 	 image . setRGB ( 0 , 0 , windowWidth , windowHeight , buffer . getIntArray ( 0 , windowWidth * windowHeight ) , 0 , 
 - 	 	 	 	 	 windowWidth ) ; 
 + 	 	 	 int bufferSize = windowWidth * windowHeight ; 
 + 	 	 	 DataBuffer dataBuffer = new DataBufferInt ( buffer . getIntArray ( 0 , bufferSize ) , bufferSize ) ; 
 + 	 	 	 WritableRaster raster = Raster . createPackedRaster ( dataBuffer , windowWidth , windowHeight , windowWidth , 
 + SCREENSHOT _ BAND _ MASKS , null ) ; 
 + 	 	 	 image = new BufferedImage ( SCREENSHOT _ COLOR _ MODEL , raster , false , null ) ; 
 
 	 	 } catch ( Win32Exception e ) { 
 	 	 	 we = e ;

NEAREST DIFF:
diff - - git a / README . md b / README . md 
 index 8b836fe . . fb7433c 100644 
 - - - a / README . md 
 + + + b / README . md 
 @ @ - 18 , 8 + 18 , 8 @ @ Download 
 
 Version 3 . 3 . 0 
 
 - * [ jna . jar ] ( raw / 3 . 3 . 0 / jnalib / dist / jna . jar ) 
 - * [ platform . jar ] ( raw / 3 . 3 . 0 / jnalib / dist / platform . jar ) 
 + * [ jna . jar ] ( jna / raw / 3 . 3 . 0 / jnalib / dist / jna . jar ) 
 + * [ platform . jar ] ( jna / raw / 3 . 3 . 0 / jnalib / dist / platform . jar ) 
 
 Features 
 = = = = = = = =
