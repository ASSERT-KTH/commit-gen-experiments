BLEU SCORE: 0.01683602693167689

TEST MSG: Comments and license header
GENERATED MSG: Adjust licensing to declared project license ( followup for PR # 711 )

TEST DIFF (one line): diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java b / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java <nl> index 2280116 . . ae5b9ab 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java <nl> @ @ - 35 , 6 + 35 , 10 @ @ import com . sun . jna . platform . win32 . WinNT . OSVERSIONINFOEX ; <nl> * robust means to determine the operating system version . <nl> * / <nl> public class VersionHelpers { <nl> + / * <nl> + * Code in this class is an attempt to faithfully port the inline macros in <nl> + * the versionhelpers . h header file of the Windows 10 SDK . <nl> + * / <nl> <nl> / * * <nl> * This function is useful in confirming a version of Windows Server that <nl> @ @ - 70 , 6 + 74 , 15 @ @ public class VersionHelpers { <nl> WinNT . VER _ MAJORVERSION | WinNT . VER _ MINORVERSION | WinNT . VER _ SERVICEPACKMAJOR , dwlConditionMask ) ; <nl> } <nl> <nl> + / * <nl> + * The constants Kernel32 . WIN32 _ WINNT _ * are 2 - byte encodings of windows <nl> + * version numbers , for example Windows XP is version 5 . 1 and is encoded as <nl> + * 0x0501 . To pass to IsWindowsVersionOrGreater , we pass the HIBYTE ( e . g . , <nl> + * 0x05 ) as the first argument and LOBYTE ( e . g . , 0x01 ) as the second . To get <nl> + * the high byte of a short , we shift right 8 bits and cast to byte , e . g . , <nl> + * ( byte ) ( word > > > 8 ) ; to get the low byte wse simply cast to byte . <nl> + * / <nl> + <nl> / * * <nl> * @ return true if the current OS version matches , or is greater than , the <nl> * Windows XP version . <nl> @ @ - 189 , 6 + 202 , 9 @ @ public class VersionHelpers { <nl> * @ return true if the current OS is a Windows Server release . <nl> * / <nl> public static boolean IsWindowsServer ( ) { <nl> + / / This should properly be OSVERSIONINFOEXW which is not defined in JNA . <nl> + / / The OSVERSIONINFOEX structure in JNA is the ( W ) Unicode - compliant <nl> + / / version . <nl> OSVERSIONINFOEX osvi = new OSVERSIONINFOEX ( ) ; <nl> osvi . dwOSVersionInfoSize = new DWORD ( osvi . size ( ) ) ; <nl> osvi . wProductType = WinNT . VER _ NT _ WORKSTATION ; <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / VersionHelpersTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / VersionHelpersTest . java <nl> index 7665169 . . ccc93dd 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / VersionHelpersTest . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / VersionHelpersTest . java <nl> @ @ - 1 , 3 + 1 , 26 @ @ <nl> + / * Copyright ( c ) 2019 Daniel Widdis , All Rights Reserved <nl> + * <nl> + * The contents of this file is dual - licensed under 2 <nl> + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and <nl> + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . <nl> + * <nl> + * You can freely decide which license you want to apply to <nl> + * the project . <nl> + * <nl> + * You may obtain a copy of the LGPL License at : <nl> + * <nl> + * http : / / www . gnu . org / licenses / licenses . html <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " LGPL2 . 1 " . <nl> + * <nl> + * You may obtain a copy of the Apache License at : <nl> + * <nl> + * http : / / www . apache . org / licenses / <nl> + * <nl> + * A copy is also included in the downloadable source code package <nl> + * containing JNA , in file " AL2 . 0 " . <nl> + * / <nl> package com . sun . jna . platform . win32 ; <nl> <nl> import static org . junit . Assert . assertFalse ;
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java b / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java 
 index 2280116 . . ae5b9ab 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / VersionHelpers . java 
 @ @ - 35 , 6 + 35 , 10 @ @ import com . sun . jna . platform . win32 . WinNT . OSVERSIONINFOEX ; 
 * robust means to determine the operating system version . 
 * / 
 public class VersionHelpers { 
 + / * 
 + * Code in this class is an attempt to faithfully port the inline macros in 
 + * the versionhelpers . h header file of the Windows 10 SDK . 
 + * / 
 
 / * * 
 * This function is useful in confirming a version of Windows Server that 
 @ @ - 70 , 6 + 74 , 15 @ @ public class VersionHelpers { 
 WinNT . VER _ MAJORVERSION | WinNT . VER _ MINORVERSION | WinNT . VER _ SERVICEPACKMAJOR , dwlConditionMask ) ; 
 } 
 
 + / * 
 + * The constants Kernel32 . WIN32 _ WINNT _ * are 2 - byte encodings of windows 
 + * version numbers , for example Windows XP is version 5 . 1 and is encoded as 
 + * 0x0501 . To pass to IsWindowsVersionOrGreater , we pass the HIBYTE ( e . g . , 
 + * 0x05 ) as the first argument and LOBYTE ( e . g . , 0x01 ) as the second . To get 
 + * the high byte of a short , we shift right 8 bits and cast to byte , e . g . , 
 + * ( byte ) ( word > > > 8 ) ; to get the low byte wse simply cast to byte . 
 + * / 
 + 
 / * * 
 * @ return true if the current OS version matches , or is greater than , the 
 * Windows XP version . 
 @ @ - 189 , 6 + 202 , 9 @ @ public class VersionHelpers { 
 * @ return true if the current OS is a Windows Server release . 
 * / 
 public static boolean IsWindowsServer ( ) { 
 + / / This should properly be OSVERSIONINFOEXW which is not defined in JNA . 
 + / / The OSVERSIONINFOEX structure in JNA is the ( W ) Unicode - compliant 
 + / / version . 
 OSVERSIONINFOEX osvi = new OSVERSIONINFOEX ( ) ; 
 osvi . dwOSVersionInfoSize = new DWORD ( osvi . size ( ) ) ; 
 osvi . wProductType = WinNT . VER _ NT _ WORKSTATION ; 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / VersionHelpersTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / VersionHelpersTest . java 
 index 7665169 . . ccc93dd 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / VersionHelpersTest . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / VersionHelpersTest . java 
 @ @ - 1 , 3 + 1 , 26 @ @ 
 + / * Copyright ( c ) 2019 Daniel Widdis , All Rights Reserved 
 + * 
 + * The contents of this file is dual - licensed under 2 
 + * alternative Open Source / Free licenses : LGPL 2 . 1 or later and 
 + * Apache License 2 . 0 . ( starting with JNA version 4 . 0 . 0 ) . 
 + * 
 + * You can freely decide which license you want to apply to 
 + * the project . 
 + * 
 + * You may obtain a copy of the LGPL License at : 
 + * 
 + * http : / / www . gnu . org / licenses / licenses . html 
 + * 
 + * A copy is also included in the downloadable source code package 
 + * containing JNA , in file " LGPL2 . 1 " . 
 + * 
 + * You may obtain a copy of the Apache License at : 
 + * 
 + * http : / / www . apache . org / licenses / 
 + * 
 + * A copy is also included in the downloadable source code package 
 + * containing JNA , in file " AL2 . 0 " . 
 + * / 
 package com . sun . jna . platform . win32 ; 
 
 import static org . junit . Assert . assertFalse ;

NEAREST DIFF:
ELIMINATEDSENTENCE
