BLEU SCORE: 0.4775586214302964

TEST MSG: Added test for com . sun . jna . platform . win32 . Advapi32 . AccessCheck and updated changelog markup
GENERATED MSG: Added com . sun . jna . platform . win32 . Kernel32 . ResetEvent .

TEST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 4e83440 . . afe073a 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 18 , 7 + 18 , 7 @ @ Features <nl> * [ # 250 ] ( https : / / github . com / twall / jna / pull / 250 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . GetPrivateProfileSection ` , ` GetPrivateProfileSectionNames ` and ` WritePrivateProfileSection ` and corresponding ` Kernel32Util ` helpers - [ @ quipsy - karg ] ( https : / / github . com / quipsy - karg ) . <nl> * [ # 287 ] ( https : / / github . com / twall / jna / pull / 287 ) : Added ` DBTF _ MEDIA ` and ` DBTF _ NET ` to ` com . sun . jna . platform . win32 . DBT ` - [ @ daifei4321 ] ( https : / / github . com / daifei4321 ) . <nl> * [ # 295 ] ( https : / / github . com / twall / jna / pull / 295 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . ResetEvent ` - [ @ manithree ] ( https : / / github . com / manithree ) . <nl> - * [ # 301 ] ( https : / / github . com / twall / jna / pull / 301 ) : Added ` com . sun . jna . platform . win32 . Advapi32Util . accessCheck ` and supporting classes / methods to verify file permissions - [ @ BusyByte ] ( https : / / github . com / BusyByte / jna ) . <nl> + * [ # 301 ] ( https : / / github . com / twall / jna / pull / 301 ) : Added ` accessCheck ` to ` com . sun . jna . platform . win32 . Advapi32Util ` , ` MapGenericMask ` and ` AccessCheck ` to ` com . sun . jna . platform . win32 . Advapi32 ` , ` PRIVILEGE _ SET ` and ` GENERIC _ MAPPING ` to ` com . sun . jna . platform . win32 . WinNT ` - [ @ BusyByte ] ( https : / / github . com / BusyByte ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> index d96f63b . . bc209ac 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java <nl> @ @ - 885 , 4 + 885 , 25 @ @ public class Advapi32Test extends TestCase { <nl> assertTrue ( GENERIC _ ALL ! = ( rights . getValue ( ) . intValue ( ) & GENERIC _ ALL ) ) ; <nl> } <nl> <nl> + public void testAccessCheck ( ) { <nl> + final WinNT . GENERIC _ MAPPING mapping = new WinNT . GENERIC _ MAPPING ( ) ; <nl> + mapping . genericRead = new DWORD ( FILE _ GENERIC _ READ ) ; <nl> + mapping . genericWrite = new DWORD ( FILE _ GENERIC _ WRITE ) ; <nl> + mapping . genericExecute = new DWORD ( FILE _ GENERIC _ EXECUTE ) ; <nl> + mapping . genericAll = new DWORD ( FILE _ ALL _ ACCESS ) ; <nl> + final Memory securityDescriptorMemoryPointer = new Memory ( 1 ) ; <nl> + <nl> + final PRIVILEGE _ SET privileges = new PRIVILEGE _ SET ( 1 ) ; <nl> + privileges . PrivilegeCount = new DWORD ( 0 ) ; <nl> + final DWORDByReference privilegeLength = new DWORDByReference ( new DWORD ( privileges . size ( ) ) ) ; <nl> + final DWORDByReference grantedAccess = new DWORDByReference ( ) ; <nl> + final BOOLByReference result = new BOOLByReference ( ) ; <nl> + <nl> + final boolean status = Advapi32 . INSTANCE . AccessCheck ( securityDescriptorMemoryPointer , null , new DWORD ( FILE _ GENERIC _ READ ) , mapping , privileges , privilegeLength , grantedAccess , result ) ; <nl> + assertFalse ( status ) ; <nl> + assertFalse ( result . getValue ( ) . booleanValue ( ) ) ; <nl> + <nl> + assertEquals ( " The handle is invalid . " , Kernel32Util . formatMessage ( W32Errors . HRESULT _ FROM _ WIN32 ( Kernel32 . INSTANCE . GetLastError ( ) ) ) ) ; <nl> + } <nl> + <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 4e83440 . . afe073a 100644 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 18 , 7 + 18 , 7 @ @ Features 
 * [ # 250 ] ( https : / / github . com / twall / jna / pull / 250 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . GetPrivateProfileSection ` , ` GetPrivateProfileSectionNames ` and ` WritePrivateProfileSection ` and corresponding ` Kernel32Util ` helpers - [ @ quipsy - karg ] ( https : / / github . com / quipsy - karg ) . 
 * [ # 287 ] ( https : / / github . com / twall / jna / pull / 287 ) : Added ` DBTF _ MEDIA ` and ` DBTF _ NET ` to ` com . sun . jna . platform . win32 . DBT ` - [ @ daifei4321 ] ( https : / / github . com / daifei4321 ) . 
 * [ # 295 ] ( https : / / github . com / twall / jna / pull / 295 ) : Added ` com . sun . jna . platform . win32 . Kernel32 . ResetEvent ` - [ @ manithree ] ( https : / / github . com / manithree ) . 
 - * [ # 301 ] ( https : / / github . com / twall / jna / pull / 301 ) : Added ` com . sun . jna . platform . win32 . Advapi32Util . accessCheck ` and supporting classes / methods to verify file permissions - [ @ BusyByte ] ( https : / / github . com / BusyByte / jna ) . 
 + * [ # 301 ] ( https : / / github . com / twall / jna / pull / 301 ) : Added ` accessCheck ` to ` com . sun . jna . platform . win32 . Advapi32Util ` , ` MapGenericMask ` and ` AccessCheck ` to ` com . sun . jna . platform . win32 . Advapi32 ` , ` PRIVILEGE _ SET ` and ` GENERIC _ MAPPING ` to ` com . sun . jna . platform . win32 . WinNT ` - [ @ BusyByte ] ( https : / / github . com / BusyByte ) . 
 
 Bug Fixes 
 - - - - - - - - - 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java 
 index d96f63b . . bc209ac 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Advapi32Test . java 
 @ @ - 885 , 4 + 885 , 25 @ @ public class Advapi32Test extends TestCase { 
 assertTrue ( GENERIC _ ALL ! = ( rights . getValue ( ) . intValue ( ) & GENERIC _ ALL ) ) ; 
 } 
 
 + public void testAccessCheck ( ) { 
 + final WinNT . GENERIC _ MAPPING mapping = new WinNT . GENERIC _ MAPPING ( ) ; 
 + mapping . genericRead = new DWORD ( FILE _ GENERIC _ READ ) ; 
 + mapping . genericWrite = new DWORD ( FILE _ GENERIC _ WRITE ) ; 
 + mapping . genericExecute = new DWORD ( FILE _ GENERIC _ EXECUTE ) ; 
 + mapping . genericAll = new DWORD ( FILE _ ALL _ ACCESS ) ; 
 + final Memory securityDescriptorMemoryPointer = new Memory ( 1 ) ; 
 + 
 + final PRIVILEGE _ SET privileges = new PRIVILEGE _ SET ( 1 ) ; 
 + privileges . PrivilegeCount = new DWORD ( 0 ) ; 
 + final DWORDByReference privilegeLength = new DWORDByReference ( new DWORD ( privileges . size ( ) ) ) ; 
 + final DWORDByReference grantedAccess = new DWORDByReference ( ) ; 
 + final BOOLByReference result = new BOOLByReference ( ) ; 
 + 
 + final boolean status = Advapi32 . INSTANCE . AccessCheck ( securityDescriptorMemoryPointer , null , new DWORD ( FILE _ GENERIC _ READ ) , mapping , privileges , privilegeLength , grantedAccess , result ) ; 
 + assertFalse ( status ) ; 
 + assertFalse ( result . getValue ( ) . booleanValue ( ) ) ; 
 + 
 + assertEquals ( " The handle is invalid . " , Kernel32Util . formatMessage ( W32Errors . HRESULT _ FROM _ WIN32 ( Kernel32 . INSTANCE . GetLastError ( ) ) ) ) ; 
 + } 
 + 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
