BLEU SCORE: 0.013139808552042212

TEST MSG: Correct struct definition for SECURITY _ QUALITY _ OF _ SERVICE , fixing DDEML Bindings
GENERATED MSG: Added Advapi32Util accessCheck method to verify file permissions

TEST DIFF (one line): diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index 23d344d . . 6f0fd6d 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 3094 , 17 + 3094 , 21 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> * Specifies whether the server is to be given a snapshot of the <nl> * client ' s security context ( called static tracking ) , or is to be <nl> * continually updated to track changes to the client ' s security context <nl> - * ( called dynamic tracking ) . The SECURITY _ STATIC _ TRACKING value <nl> - * specifies static tracking , and the SECURITY _ DYNAMIC _ TRACKING value <nl> - * specifies dynamic tracking . Not all communications mechanisms support <nl> - * dynamic tracking ; those that do not will default to static tracking . <nl> + * ( called dynamic tracking ) . The { @ link WinNT . SECURITY _ STATIC _ TRACKING } <nl> + * value specifies static tracking , and the <nl> + * { @ link WinNT . SECURITY _ DYNAMIC _ TRACKING } value specifies dynamic <nl> + * tracking . Not all communications mechanisms support dynamic tracking ; <nl> + * those that do not will default to static tracking . <nl> * / <nl> - public short ContextTrackingMode ; <nl> + public byte ContextTrackingMode ; <nl> / * * <nl> * Specifies whether the server may enable or disable privileges and <nl> * groups that the client ' s security context may include . <nl> + * <nl> + * < p > This is a boolean value . See { @ link WinNT # BOOLEAN _ TRUE } and <nl> + * { @ link WinNT # BOOLEAN _ FALSE } . < / p > <nl> * / <nl> - public BOOL EffectiveOnly ; <nl> + public byte EffectiveOnly ; <nl> <nl> @ Override <nl> public void write ( ) { <nl> @ @ - 3117 , 4 + 3121 , 9 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> return FIELDS ; <nl> } <nl> } <nl> + <nl> + byte SECURITY _ DYNAMIC _ TRACKING = ( byte ) 1 ; <nl> + byte SECURITY _ STATIC _ TRACKING = ( byte ) 0 ; <nl> + byte BOOLEAN _ TRUE = ( byte ) 1 ; <nl> + byte BOOLEAN _ FALSE = ( byte ) 0 ; <nl> }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 index 23d344d . . 6f0fd6d 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 @ @ - 3094 , 17 + 3094 , 21 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { 
 * Specifies whether the server is to be given a snapshot of the 
 * client ' s security context ( called static tracking ) , or is to be 
 * continually updated to track changes to the client ' s security context 
 - * ( called dynamic tracking ) . The SECURITY _ STATIC _ TRACKING value 
 - * specifies static tracking , and the SECURITY _ DYNAMIC _ TRACKING value 
 - * specifies dynamic tracking . Not all communications mechanisms support 
 - * dynamic tracking ; those that do not will default to static tracking . 
 + * ( called dynamic tracking ) . The { @ link WinNT . SECURITY _ STATIC _ TRACKING } 
 + * value specifies static tracking , and the 
 + * { @ link WinNT . SECURITY _ DYNAMIC _ TRACKING } value specifies dynamic 
 + * tracking . Not all communications mechanisms support dynamic tracking ; 
 + * those that do not will default to static tracking . 
 * / 
 - public short ContextTrackingMode ; 
 + public byte ContextTrackingMode ; 
 / * * 
 * Specifies whether the server may enable or disable privileges and 
 * groups that the client ' s security context may include . 
 + * 
 + * < p > This is a boolean value . See { @ link WinNT # BOOLEAN _ TRUE } and 
 + * { @ link WinNT # BOOLEAN _ FALSE } . < / p > 
 * / 
 - public BOOL EffectiveOnly ; 
 + public byte EffectiveOnly ; 
 
 @ Override 
 public void write ( ) { 
 @ @ - 3117 , 4 + 3121 , 9 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { 
 return FIELDS ; 
 } 
 } 
 + 
 + byte SECURITY _ DYNAMIC _ TRACKING = ( byte ) 1 ; 
 + byte SECURITY _ STATIC _ TRACKING = ( byte ) 0 ; 
 + byte BOOLEAN _ TRUE = ( byte ) 1 ; 
 + byte BOOLEAN _ FALSE = ( byte ) 0 ; 
 }

NEAREST DIFF:
ELIMINATEDSENTENCE
