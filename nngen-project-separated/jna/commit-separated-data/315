BLEU SCORE: 0.02383853510228548

TEST MSG: Fixed memory allocation in LPWSTR and LPSTR constructors .
GENERATED MSG: added some test

TEST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 5c787dc . . 514c259 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 35 , 7 + 35 , 8 @ @ Bug Fixes <nl> * Remove unsupported JAWT from OSX build - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Disable WebStart tests - [ @ twall ] ( https : / / github . com / twall ) . <nl> * Dispose all native resources when JNA ' s native library is unloaded - Paul Gr ü tter of signotec GmbH and [ @ twall ] ( https : / / github . com / twall ) . This fixes a number of seemingly random , sporadic crashes on windows . <nl> - * Weakly hold registered Direct - mapped classes - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * Weakly hold registered Direct - mapped classes - [ @ twall ] ( https : / / github . com / twall ) . <nl> + * [ # 382 ] ( https : / / github . com / twall / jna / pull / 382 ) : Fixed memory allocation in ` com . sun . jna . platform . win32 . WTypes . LPWSTR ` and ` LPSTR ` constructors - [ @ junak - michal ] ( https : / / github . com / junak - michal ) . <nl> <nl> Release 4 . 1 <nl> = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> index e997f95 . . c487312 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java <nl> @ @ - 135 , 7 + 135 , 7 @ @ public interface WTypes { <nl> } <nl> <nl> public LPSTR ( String value ) { <nl> - this ( ) ; <nl> + this ( new Memory ( ( value . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ) ; <nl> this . setValue ( value ) ; <nl> } <nl> <nl> @ @ - 172 , 7 + 172 , 7 @ @ public interface WTypes { <nl> } <nl> <nl> public LPWSTR ( String value ) { <nl> - this ( ) ; <nl> + this ( new Memory ( ( value . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ) ; <nl> this . setValue ( value ) ; <nl> } <nl> <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / WTypesTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / WTypesTest . java <nl> new file mode 100644 <nl> index 0000000 . . cf01c21 <nl> - - - / dev / null <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / WTypesTest . java <nl> @ @ - 0 , 0 + 1 , 60 @ @ <nl> + / * Copyright ( c ) 2007 - 2014 Timothy Wall , All Rights Reserved <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation ; either <nl> + * version 2 . 1 of the License , or ( at your option ) any later version . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * / <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Memory ; <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + import junit . framework . TestCase ; <nl> + <nl> + public class WTypesTest extends TestCase { <nl> + <nl> + private static final String TEST _ STRING = " input " ; <nl> + <nl> + private static final Pointer TEST _ POINTER = new Memory ( ( TEST _ STRING . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ; <nl> + <nl> + static { <nl> + TEST _ POINTER . setWideString ( 0 , TEST _ STRING ) ; <nl> + } <nl> + <nl> + public void testLPOLESTRConstruction ( ) { <nl> + WTypes . LPOLESTR fromString = new WTypes . LPOLESTR ( TEST _ STRING ) ; <nl> + assertEquals ( fromString . getValue ( ) , TEST _ STRING ) ; <nl> + WTypes . LPOLESTR empty = new WTypes . LPOLESTR ( ) ; <nl> + assertNull ( empty . getValue ( ) ) ; <nl> + WTypes . LPOLESTR fromPointer = new WTypes . LPOLESTR ( TEST _ POINTER ) ; <nl> + assertEquals ( fromPointer . getValue ( ) , TEST _ STRING ) ; <nl> + } <nl> + <nl> + public void testLPSTRConstruction ( ) { <nl> + WTypes . LPSTR instance = new WTypes . LPSTR ( TEST _ STRING ) ; <nl> + assertEquals ( instance . getValue ( ) , TEST _ STRING ) ; <nl> + WTypes . LPSTR empty = new WTypes . LPSTR ( ) ; <nl> + assertNull ( empty . getValue ( ) ) ; <nl> + WTypes . LPSTR fromPointer = new WTypes . LPSTR ( TEST _ POINTER ) ; <nl> + assertEquals ( fromPointer . getValue ( ) , TEST _ STRING ) ; <nl> + } <nl> + <nl> + public void testLPWSTRConstruction ( ) { <nl> + WTypes . LPWSTR instance = new WTypes . LPWSTR ( TEST _ STRING ) ; <nl> + assertEquals ( instance . getValue ( ) , TEST _ STRING ) ; <nl> + WTypes . LPWSTR empty = new WTypes . LPWSTR ( ) ; <nl> + assertNull ( empty . getValue ( ) ) ; <nl> + WTypes . LPWSTR fromPointer = new WTypes . LPWSTR ( TEST _ POINTER ) ; <nl> + assertEquals ( fromPointer . getValue ( ) , TEST _ STRING ) ; <nl> + } <nl> + <nl> + public static void main ( String [ ] args ) { <nl> + junit . textui . TestRunner . run ( WTypesTest . class ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 5c787dc . . 514c259 100644 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 35 , 7 + 35 , 8 @ @ Bug Fixes 
 * Remove unsupported JAWT from OSX build - [ @ twall ] ( https : / / github . com / twall ) . 
 * Disable WebStart tests - [ @ twall ] ( https : / / github . com / twall ) . 
 * Dispose all native resources when JNA ' s native library is unloaded - Paul Gr ü tter of signotec GmbH and [ @ twall ] ( https : / / github . com / twall ) . This fixes a number of seemingly random , sporadic crashes on windows . 
 - * Weakly hold registered Direct - mapped classes - [ @ twall ] ( https : / / github . com / twall ) . 
 + * Weakly hold registered Direct - mapped classes - [ @ twall ] ( https : / / github . com / twall ) . 
 + * [ # 382 ] ( https : / / github . com / twall / jna / pull / 382 ) : Fixed memory allocation in ` com . sun . jna . platform . win32 . WTypes . LPWSTR ` and ` LPSTR ` constructors - [ @ junak - michal ] ( https : / / github . com / junak - michal ) . 
 
 Release 4 . 1 
 = = = = = = = = = = = 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java 
 index e997f95 . . c487312 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WTypes . java 
 @ @ - 135 , 7 + 135 , 7 @ @ public interface WTypes { 
 } 
 
 public LPSTR ( String value ) { 
 - this ( ) ; 
 + this ( new Memory ( ( value . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ) ; 
 this . setValue ( value ) ; 
 } 
 
 @ @ - 172 , 7 + 172 , 7 @ @ public interface WTypes { 
 } 
 
 public LPWSTR ( String value ) { 
 - this ( ) ; 
 + this ( new Memory ( ( value . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ) ; 
 this . setValue ( value ) ; 
 } 
 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / WTypesTest . java b / contrib / platform / test / com / sun / jna / platform / win32 / WTypesTest . java 
 new file mode 100644 
 index 0000000 . . cf01c21 
 - - - / dev / null 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / WTypesTest . java 
 @ @ - 0 , 0 + 1 , 60 @ @ 
 + / * Copyright ( c ) 2007 - 2014 Timothy Wall , All Rights Reserved 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation ; either 
 + * version 2 . 1 of the License , or ( at your option ) any later version . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * / 
 + package com . sun . jna . platform . win32 ; 
 + 
 + import com . sun . jna . Memory ; 
 + import com . sun . jna . Native ; 
 + import com . sun . jna . Pointer ; 
 + import junit . framework . TestCase ; 
 + 
 + public class WTypesTest extends TestCase { 
 + 
 + private static final String TEST _ STRING = " input " ; 
 + 
 + private static final Pointer TEST _ POINTER = new Memory ( ( TEST _ STRING . length ( ) + 1L ) * Native . WCHAR _ SIZE ) ; 
 + 
 + static { 
 + TEST _ POINTER . setWideString ( 0 , TEST _ STRING ) ; 
 + } 
 + 
 + public void testLPOLESTRConstruction ( ) { 
 + WTypes . LPOLESTR fromString = new WTypes . LPOLESTR ( TEST _ STRING ) ; 
 + assertEquals ( fromString . getValue ( ) , TEST _ STRING ) ; 
 + WTypes . LPOLESTR empty = new WTypes . LPOLESTR ( ) ; 
 + assertNull ( empty . getValue ( ) ) ; 
 + WTypes . LPOLESTR fromPointer = new WTypes . LPOLESTR ( TEST _ POINTER ) ; 
 + assertEquals ( fromPointer . getValue ( ) , TEST _ STRING ) ; 
 + } 
 + 
 + public void testLPSTRConstruction ( ) { 
 + WTypes . LPSTR instance = new WTypes . LPSTR ( TEST _ STRING ) ; 
 + assertEquals ( instance . getValue ( ) , TEST _ STRING ) ; 
 + WTypes . LPSTR empty = new WTypes . LPSTR ( ) ; 
 + assertNull ( empty . getValue ( ) ) ; 
 + WTypes . LPSTR fromPointer = new WTypes . LPSTR ( TEST _ POINTER ) ; 
 + assertEquals ( fromPointer . getValue ( ) , TEST _ STRING ) ; 
 + } 
 + 
 + public void testLPWSTRConstruction ( ) { 
 + WTypes . LPWSTR instance = new WTypes . LPWSTR ( TEST _ STRING ) ; 
 + assertEquals ( instance . getValue ( ) , TEST _ STRING ) ; 
 + WTypes . LPWSTR empty = new WTypes . LPWSTR ( ) ; 
 + assertNull ( empty . getValue ( ) ) ; 
 + WTypes . LPWSTR fromPointer = new WTypes . LPWSTR ( TEST _ POINTER ) ; 
 + assertEquals ( fromPointer . getValue ( ) , TEST _ STRING ) ; 
 + } 
 + 
 + public static void main ( String [ ] args ) { 
 + junit . textui . TestRunner . run ( WTypesTest . class ) ; 
 + } 
 + }

NEAREST DIFF:
ELIMINATEDSENTENCE
