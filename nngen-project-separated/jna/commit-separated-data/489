BLEU SCORE: 0.02383853510228548

TEST MSG: fix building under newer xcode , fix compiler warning
GENERATED MSG: Clean up OSX build options

TEST DIFF (one line): diff - - git a / native / Makefile b / native / Makefile <nl> index a1ea4e1 . . 7921808 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 47 , 7 + 47 , 7 @ @ OS = $ ( shell uname | sed - e ' s / CYGWIN . * / win32 / g ' \ <nl> - e ' s / Linux . * / linux / g ' ) <nl> <nl> JNA _ JNI _ VERSION = 3 . 6 . 0 # auto - generated by ant <nl> - CHECKSUM = 9798f03f944a9144703939cb42256762 # auto - generated by ant <nl> + CHECKSUM = e1ef1f9431f659b9adfbf981f169c5d5 # auto - generated by ant <nl> <nl> JAVA _ INCLUDES = - I " $ ( JAVA _ HOME ) / include " \ <nl> - I " $ ( JAVA _ HOME ) / include / $ ( OS ) " <nl> @ @ - 279 , 6 + 279 , 7 @ @ endif <nl> <nl> <nl> ifeq ( $ ( OS ) , darwin ) <nl> + XCODE _ VERSION = $ ( shell xcodebuild - version | grep Xcode | sed ' s / ^ Xcode \ ( [ 1 - 9 ] \ ) . * / \ 1 / g ' ) <nl> JAVA _ INCLUDES = - I / System / Library / Frameworks / JavaVM . framework / Headers <nl> DEFAULT _ ARCH = $ ( shell arch ) <nl> ARCH = $ ( shell arch ) <nl> @ @ - 292 , 15 + 293 , 20 @ @ ifneq ( $ ( ARCH ) , x86 _ 64 ) <nl> ALT _ ARCHS + = x86 _ 64 <nl> endif <nl> ifneq ( $ ( ARCH ) , ppc ) <nl> + # not supported on XCode 4 + <nl> + ifeq ( $ ( XCODE _ VERSION ) , 3 ) <nl> ALT _ ARCHS + = ppc <nl> endif <nl> + endif <nl> LIBSFX = . dylib <nl> JNISFX = . jnilib <nl> ifneq ( $ ( SDKROOT ) , ) <nl> SYSLIBROOT = - Wl , - syslibroot , $ ( SDKROOT ) <nl> ISYSROOT = - isysroot $ ( SDKROOT ) <nl> - ARCHFLAGS = - arch i386 - arch x86 _ 64 - arch ppc <nl> - # ARCHFLAGS = - arch i386 - arch x86 _ 64 <nl> + ARCHFLAGS = - arch i386 - arch x86 _ 64 <nl> + ifeq ( $ ( XCODE _ VERSION ) , 3 ) <nl> + ARCHFLAGS + = - arch ppc <nl> + endif <nl> endif <nl> <nl> PCFLAGS + = $ ( ISYSROOT ) - x objective - c <nl> @ @ - 310 , 6 + 316 , 7 @ @ LDFLAGS = $ ( ARCHFLAGS ) - dynamiclib - o $ @ - framework JavaVM \ <nl> - current _ version $ ( JNA _ JNI _ VERSION ) \ <nl> - mmacosx - version - min = 10 . 3 \ <nl> - framework Foundation \ <nl> + - Wl , - no _ compact _ unwind \ <nl> - install _ name $ { @ F } \ <nl> $ ( SYSLIBROOT ) <nl> # JAWT linkage handled by - framework JavaVM <nl> diff - - git a / native / dispatch . c b / native / dispatch . c <nl> index 8f16e02 . . 8afc690 100644 <nl> - - - a / native / dispatch . c <nl> + + + b / native / dispatch . c <nl> @ @ - 73 , 6 + 73 , 8 @ @ <nl> # endif <nl> <nl> # include < stdlib . h > <nl> + / / Force XSI - compliant strerror _ r ( http : / / unixhelp . ed . ac . uk / CGI / man - cgi ? strerror ) <nl> + # define _ XOPEN _ SOURCE 600 <nl> # include < string . h > <nl> # include < wchar . h > <nl> # include < jni . h > <nl> diff - - git a / test / com / sun / jna / LastErrorTest . java b / test / com / sun / jna / LastErrorTest . java <nl> index 3d5a2b0 . . c0283ff 100644 <nl> - - - a / test / com / sun / jna / LastErrorTest . java <nl> + + + b / test / com / sun / jna / LastErrorTest . java <nl> @ @ - 87 , 6 + 87 , 7 @ @ public class LastErrorTest extends TestCase { <nl> } <nl> catch ( LastErrorException e ) { <nl> assertEquals ( " Exception should contain error code " , ERROR , e . getErrorCode ( ) ) ; <nl> + assertTrue ( " Exception should include error message : " + e . getMessage ( ) , e . getMessage ( ) . length ( ) > 10 ) ; <nl> } <nl> } <nl> <nl> @ @ - 102 , 6 + 103 , 7 @ @ public class LastErrorTest extends TestCase { <nl> } <nl> catch ( LastErrorException e ) { <nl> assertEquals ( " Exception should contain error code " , ERROR , e . getErrorCode ( ) ) ; <nl> + assertTrue ( " Exception should include error message : " + e . getMessage ( ) , e . getMessage ( ) . length ( ) > 10 ) ; <nl> } <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / jnalib / native / Makefile b / jnalib / native / Makefile <nl> index 4daa70d . . f2b5a1f 100644 <nl> - - - a / jnalib / native / Makefile <nl> + + + b / jnalib / native / Makefile <nl> @ @ - 118 , 20 + 118 , 23 @ @ LIBSFX = . dylib <nl> JNISFX = . jnilib <nl> # Use universal binary when updated to work with gcc 4 <nl> ifneq ( $ ( SDKROOT ) , ) <nl> + SYSLIBROOT = - Wl , - syslibroot , $ ( SDKROOT ) <nl> + ISYSROOT = - isysroot $ ( SDKROOT ) <nl> ifneq ( $ ( UNIVERSAL ) , ) <nl> - ARCHFLAGS = - arch ppc - arch i386 - isysroot $ ( SDKROOT ) - Wl , - syslibroot , $ ( SDKROOT ) <nl> + ARCHFLAGS = - arch ppc - arch i386 <nl> ASMDISPATCH _ OBJS = $ ( BUILD ) / dispatch _ i386 . o $ ( BUILD ) / dispatch _ ppc . o <nl> else <nl> - ARCHFLAGS = - arch $ ( ARCH ) - isysroot $ ( SDKROOT ) - Wl , - syslibroot , $ ( SDKROOT ) <nl> + ARCHFLAGS = - arch $ ( ARCH ) <nl> endif <nl> endif <nl> - PCFLAGS + = $ ( ARCHFLAGS ) - x objective - c <nl> + PCFLAGS + = $ ( ARCHFLAGS ) $ ( ISYSROOT ) - x objective - c <nl> CDEFINES = - DTARGET _ RT _ MAC _ CFM = 0 <nl> LDFLAGS = $ ( ARCHFLAGS ) - dynamiclib - o $ @ - framework JavaVM \ <nl> - compatibility _ version $ ( shell echo $ { VERSION } | sed ' s / ^ \ ( [ 0 - 9 ] [ 0 - 9 ] * \ ) . * / \ 1 / g ' ) \ <nl> - current _ version $ ( VERSION ) \ <nl> - mmacosx - version - min = 10 . 3 \ <nl> - - install _ name $ { @ F } <nl> + - install _ name $ { @ F } \ <nl> + $ ( SYSLIBROOT ) <nl> # JAWT linkage handled by - framework JavaVM <nl> LIBS = <nl> endif

TEST DIFF:
diff - - git a / native / Makefile b / native / Makefile 
 index a1ea4e1 . . 7921808 100644 
 - - - a / native / Makefile 
 + + + b / native / Makefile 
 @ @ - 47 , 7 + 47 , 7 @ @ OS = $ ( shell uname | sed - e ' s / CYGWIN . * / win32 / g ' \ 
 - e ' s / Linux . * / linux / g ' ) 
 
 JNA _ JNI _ VERSION = 3 . 6 . 0 # auto - generated by ant 
 - CHECKSUM = 9798f03f944a9144703939cb42256762 # auto - generated by ant 
 + CHECKSUM = e1ef1f9431f659b9adfbf981f169c5d5 # auto - generated by ant 
 
 JAVA _ INCLUDES = - I " $ ( JAVA _ HOME ) / include " \ 
 - I " $ ( JAVA _ HOME ) / include / $ ( OS ) " 
 @ @ - 279 , 6 + 279 , 7 @ @ endif 
 
 
 ifeq ( $ ( OS ) , darwin ) 
 + XCODE _ VERSION = $ ( shell xcodebuild - version | grep Xcode | sed ' s / ^ Xcode \ ( [ 1 - 9 ] \ ) . * / \ 1 / g ' ) 
 JAVA _ INCLUDES = - I / System / Library / Frameworks / JavaVM . framework / Headers 
 DEFAULT _ ARCH = $ ( shell arch ) 
 ARCH = $ ( shell arch ) 
 @ @ - 292 , 15 + 293 , 20 @ @ ifneq ( $ ( ARCH ) , x86 _ 64 ) 
 ALT _ ARCHS + = x86 _ 64 
 endif 
 ifneq ( $ ( ARCH ) , ppc ) 
 + # not supported on XCode 4 + 
 + ifeq ( $ ( XCODE _ VERSION ) , 3 ) 
 ALT _ ARCHS + = ppc 
 endif 
 + endif 
 LIBSFX = . dylib 
 JNISFX = . jnilib 
 ifneq ( $ ( SDKROOT ) , ) 
 SYSLIBROOT = - Wl , - syslibroot , $ ( SDKROOT ) 
 ISYSROOT = - isysroot $ ( SDKROOT ) 
 - ARCHFLAGS = - arch i386 - arch x86 _ 64 - arch ppc 
 - # ARCHFLAGS = - arch i386 - arch x86 _ 64 
 + ARCHFLAGS = - arch i386 - arch x86 _ 64 
 + ifeq ( $ ( XCODE _ VERSION ) , 3 ) 
 + ARCHFLAGS + = - arch ppc 
 + endif 
 endif 
 
 PCFLAGS + = $ ( ISYSROOT ) - x objective - c 
 @ @ - 310 , 6 + 316 , 7 @ @ LDFLAGS = $ ( ARCHFLAGS ) - dynamiclib - o $ @ - framework JavaVM \ 
 - current _ version $ ( JNA _ JNI _ VERSION ) \ 
 - mmacosx - version - min = 10 . 3 \ 
 - framework Foundation \ 
 + - Wl , - no _ compact _ unwind \ 
 - install _ name $ { @ F } \ 
 $ ( SYSLIBROOT ) 
 # JAWT linkage handled by - framework JavaVM 
 diff - - git a / native / dispatch . c b / native / dispatch . c 
 index 8f16e02 . . 8afc690 100644 
 - - - a / native / dispatch . c 
 + + + b / native / dispatch . c 
 @ @ - 73 , 6 + 73 , 8 @ @ 
 # endif 
 
 # include < stdlib . h > 
 + / / Force XSI - compliant strerror _ r ( http : / / unixhelp . ed . ac . uk / CGI / man - cgi ? strerror ) 
 + # define _ XOPEN _ SOURCE 600 
 # include < string . h > 
 # include < wchar . h > 
 # include < jni . h > 
 diff - - git a / test / com / sun / jna / LastErrorTest . java b / test / com / sun / jna / LastErrorTest . java 
 index 3d5a2b0 . . c0283ff 100644 
 - - - a / test / com / sun / jna / LastErrorTest . java 
 + + + b / test / com / sun / jna / LastErrorTest . java 
 @ @ - 87 , 6 + 87 , 7 @ @ public class LastErrorTest extends TestCase { 
 } 
 catch ( LastErrorException e ) { 
 assertEquals ( " Exception should contain error code " , ERROR , e . getErrorCode ( ) ) ; 
 + assertTrue ( " Exception should include error message : " + e . getMessage ( ) , e . getMessage ( ) . length ( ) > 10 ) ; 
 } 
 } 
 
 @ @ - 102 , 6 + 103 , 7 @ @ public class LastErrorTest extends TestCase { 
 } 
 catch ( LastErrorException e ) { 
 assertEquals ( " Exception should contain error code " , ERROR , e . getErrorCode ( ) ) ; 
 + assertTrue ( " Exception should include error message : " + e . getMessage ( ) , e . getMessage ( ) . length ( ) > 10 ) ; 
 } 
 } 


NEAREST DIFF:
diff - - git a / jnalib / native / Makefile b / jnalib / native / Makefile 
 index 4daa70d . . f2b5a1f 100644 
 - - - a / jnalib / native / Makefile 
 + + + b / jnalib / native / Makefile 
 @ @ - 118 , 20 + 118 , 23 @ @ LIBSFX = . dylib 
 JNISFX = . jnilib 
 # Use universal binary when updated to work with gcc 4 
 ifneq ( $ ( SDKROOT ) , ) 
 + SYSLIBROOT = - Wl , - syslibroot , $ ( SDKROOT ) 
 + ISYSROOT = - isysroot $ ( SDKROOT ) 
 ifneq ( $ ( UNIVERSAL ) , ) 
 - ARCHFLAGS = - arch ppc - arch i386 - isysroot $ ( SDKROOT ) - Wl , - syslibroot , $ ( SDKROOT ) 
 + ARCHFLAGS = - arch ppc - arch i386 
 ASMDISPATCH _ OBJS = $ ( BUILD ) / dispatch _ i386 . o $ ( BUILD ) / dispatch _ ppc . o 
 else 
 - ARCHFLAGS = - arch $ ( ARCH ) - isysroot $ ( SDKROOT ) - Wl , - syslibroot , $ ( SDKROOT ) 
 + ARCHFLAGS = - arch $ ( ARCH ) 
 endif 
 endif 
 - PCFLAGS + = $ ( ARCHFLAGS ) - x objective - c 
 + PCFLAGS + = $ ( ARCHFLAGS ) $ ( ISYSROOT ) - x objective - c 
 CDEFINES = - DTARGET _ RT _ MAC _ CFM = 0 
 LDFLAGS = $ ( ARCHFLAGS ) - dynamiclib - o $ @ - framework JavaVM \ 
 - compatibility _ version $ ( shell echo $ { VERSION } | sed ' s / ^ \ ( [ 0 - 9 ] [ 0 - 9 ] * \ ) . * / \ 1 / g ' ) \ 
 - current _ version $ ( VERSION ) \ 
 - mmacosx - version - min = 10 . 3 \ 
 - - install _ name $ { @ F } 
 + - install _ name $ { @ F } \ 
 + $ ( SYSLIBROOT ) 
 # JAWT linkage handled by - framework JavaVM 
 LIBS = 
 endif
