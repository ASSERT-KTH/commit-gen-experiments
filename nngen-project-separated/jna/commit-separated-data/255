BLEU SCORE: 0.031251907639724415

TEST MSG: Use canonical arch more consistently , work around OpenJDK ppc64le bug reporting os . arch
GENERATED MSG: make arch handling more consistent ; don ' t load Native class from Platform

TEST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index a046976 . . b426dde 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 212 , 12 + 212 , 18 @ @ <nl> < condition property = " jre . arch " value = " ppc " > <nl> < matches pattern = " ( powerpc | power ) " string = " $ { os . arch } " / > <nl> < / condition > <nl> + < condition property = " jre . arch " value = " ppc64le " > <nl> + < or > <nl> + 	 < matches pattern = " ( powerpc64le | power64le | ppc64le ) " string = " $ { os . arch } " / > <nl> + 	 < and > <nl> + 	 < matches pattern = " ( powerpc64 | power64 | ppc64 ) " string = " $ { os . arch } " / > <nl> + 	 < matches pattern = " little " string = " $ { sun . cpu . endian } " / > <nl> + 	 < / and > <nl> + < / or > <nl> + < / condition > <nl> < condition property = " jre . arch " value = " ppc64 " > <nl> < matches pattern = " ( powerpc64 | power64 ) " string = " $ { os . arch } " / > <nl> < / condition > <nl> - < condition property = " jre . arch " value = " ppc64le " > <nl> - < matches pattern = " ( powerpc64le | power64le ) " string = " $ { os . arch } " / > <nl> - < / condition > <nl> < property name = " jre . arch " value = " $ { os . arch } " / > <nl> < condition property = " os . prefix " value = " linux - $ { jre . arch } " > <nl> < os name = " Linux " / > <nl> @ @ - 286 , 7 + 292 , 7 @ @ <nl> < echo > java . library . path = $ { java . library . path } < / echo > <nl> < echo > os . prefix = $ { os . prefix } < / echo > <nl> < echo > os . name = $ { os . name } < / echo > <nl> - < echo > os . arch = $ { os . arch } < / echo > <nl> + < echo > os . arch = $ { os . arch } ( $ { sun . cpu . endian } ) < / echo > <nl> < echo > build = $ { build } < / echo > <nl> < echo > build . native = $ { build . native } < / echo > <nl> <nl> diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java <nl> index 593cba8 . . 89d7f08 100644 <nl> - - - a / src / com / sun / jna / Platform . java <nl> + + + b / src / com / sun / jna / Platform . java <nl> @ @ - 112 , 8 + 112 , 8 @ @ public final class Platform { <nl> C _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " c " ; <nl> MATH _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " m " ; <nl> HAS _ DLL _ CALLBACKS = osType = = WINDOWS ; <nl> + 	 ARCH = getCanonicalArchitecture ( System . getProperty ( " os . arch " ) ) ; <nl> RESOURCE _ PREFIX = getNativeLibraryResourcePrefix ( ) ; <nl> - ARCH = System . getProperty ( " os . arch " ) . toLowerCase ( ) . trim ( ) ; <nl> } <nl> private Platform ( ) { } <nl> public static final int getOSType ( ) { <nl> @ @ - 175 , 9 + 175 , 9 @ @ public final class Platform { <nl> if ( model ! = null ) { <nl> return " 64 " . equals ( model ) ; <nl> } <nl> - if ( " x86 _ 64 " . equals ( ARCH ) <nl> + if ( " x86 - 64 " . equals ( ARCH ) <nl> | | " ia64 " . equals ( ARCH ) <nl> - | | " ppc64 " . equals ( ARCH ) <nl> + | | " ppc64 " . equals ( ARCH ) | | " ppc64le " . equals ( ARCH ) <nl> | | " sparcv9 " . equals ( ARCH ) <nl> | | " amd64 " . equals ( ARCH ) ) { <nl> return true ; <nl> @ @ - 186 , 21 + 186 , 14 @ @ public final class Platform { <nl> } <nl> <nl> public static final boolean isIntel ( ) { <nl> - if ( ARCH . equals ( " i386 " ) <nl> - | | ARCH . startsWith ( " i686 " ) <nl> - | | ARCH . equals ( " x86 " ) <nl> - | | ARCH . equals ( " x86 _ 64 " ) <nl> - | | ARCH . equals ( " amd64 " ) ) { <nl> + if ( ARCH . equals ( " x86 " ) | | ARCH . equals ( " x86 - 64 " ) ) { <nl> return true ; <nl> } <nl> return false ; <nl> } <nl> <nl> public static final boolean isPPC ( ) { <nl> - if ( ARCH . equals ( " ppc " ) <nl> - | | ARCH . equals ( " ppc64 " ) <nl> - | | ARCH . equals ( " powerpc " ) <nl> - | | ARCH . equals ( " powerpc64 " ) ) { <nl> + if ( ARCH . startsWith ( " ppc " ) ) { <nl> return true ; <nl> } <nl> return false ; <nl> @ @ - 214 , 6 + 207 , 28 @ @ public final class Platform { <nl> return ARCH . startsWith ( " sparc " ) ; <nl> } <nl> <nl> + static String getCanonicalArchitecture ( String arch ) { <nl> + 	 / / Work around OpenJDK mis - reporting os . arch <nl> + 	 / / https : / / bugs . openjdk . java . net / browse / JDK - 8073139 <nl> + 	 arch = arch . toLowerCase ( ) . trim ( ) ; <nl> + if ( " powerpc " . equals ( arch ) ) { <nl> + arch = " ppc " ; <nl> + } <nl> + else if ( " powerpc64 " . equals ( arch ) ) { <nl> + arch = " ppc64 " ; <nl> + } <nl> + else if ( " i386 " . equals ( arch ) | | " i686 " . equals ( arch ) ) { <nl> + arch = " x86 " ; <nl> + } <nl> + else if ( " x86 _ 64 " . equals ( arch ) | | " amd64 " . equals ( arch ) ) { <nl> + arch = " x86 - 64 " ; <nl> + } <nl> + 	 if ( " ppc64 " . equals ( arch ) & & " little " . equals ( System . getProperty ( " sun . cpu . endian " ) ) ) { <nl> + 	 arch = " ppc64le " ; <nl> + 	 } <nl> + 	 return arch ; <nl> + } <nl> + <nl> / * * Generate a canonical String prefix based on the current OS <nl> type / arch / name . <nl> * / <nl> @ @ - 229 , 19 + 244 , 7 @ @ public final class Platform { <nl> * / <nl> static String getNativeLibraryResourcePrefix ( int osType , String arch , String name ) { <nl> String osPrefix ; <nl> - arch = arch . toLowerCase ( ) . trim ( ) ; <nl> - if ( " powerpc " . equals ( arch ) ) { <nl> - arch = " ppc " ; <nl> - } <nl> - else if ( " powerpc64 " . equals ( arch ) ) { <nl> - arch = " ppc64 " ; <nl> - } <nl> - else if ( " i386 " . equals ( arch ) ) { <nl> - arch = " x86 " ; <nl> - } <nl> - else if ( " x86 _ 64 " . equals ( arch ) | | " amd64 " . equals ( arch ) ) { <nl> - arch = " x86 - 64 " ; <nl> - } <nl> + arch = getCanonicalArchitecture ( arch ) ; <nl> switch ( osType ) { <nl> case Platform . ANDROID : <nl> if ( arch . startsWith ( " arm " ) ) {
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / build . xml b / build . xml 
 index a046976 . . b426dde 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 212 , 12 + 212 , 18 @ @ 
 < condition property = " jre . arch " value = " ppc " > 
 < matches pattern = " ( powerpc | power ) " string = " $ { os . arch } " / > 
 < / condition > 
 + < condition property = " jre . arch " value = " ppc64le " > 
 + < or > 
 + 	 < matches pattern = " ( powerpc64le | power64le | ppc64le ) " string = " $ { os . arch } " / > 
 + 	 < and > 
 + 	 < matches pattern = " ( powerpc64 | power64 | ppc64 ) " string = " $ { os . arch } " / > 
 + 	 < matches pattern = " little " string = " $ { sun . cpu . endian } " / > 
 + 	 < / and > 
 + < / or > 
 + < / condition > 
 < condition property = " jre . arch " value = " ppc64 " > 
 < matches pattern = " ( powerpc64 | power64 ) " string = " $ { os . arch } " / > 
 < / condition > 
 - < condition property = " jre . arch " value = " ppc64le " > 
 - < matches pattern = " ( powerpc64le | power64le ) " string = " $ { os . arch } " / > 
 - < / condition > 
 < property name = " jre . arch " value = " $ { os . arch } " / > 
 < condition property = " os . prefix " value = " linux - $ { jre . arch } " > 
 < os name = " Linux " / > 
 @ @ - 286 , 7 + 292 , 7 @ @ 
 < echo > java . library . path = $ { java . library . path } < / echo > 
 < echo > os . prefix = $ { os . prefix } < / echo > 
 < echo > os . name = $ { os . name } < / echo > 
 - < echo > os . arch = $ { os . arch } < / echo > 
 + < echo > os . arch = $ { os . arch } ( $ { sun . cpu . endian } ) < / echo > 
 < echo > build = $ { build } < / echo > 
 < echo > build . native = $ { build . native } < / echo > 
 
 diff - - git a / src / com / sun / jna / Platform . java b / src / com / sun / jna / Platform . java 
 index 593cba8 . . 89d7f08 100644 
 - - - a / src / com / sun / jna / Platform . java 
 + + + b / src / com / sun / jna / Platform . java 
 @ @ - 112 , 8 + 112 , 8 @ @ public final class Platform { 
 C _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " c " ; 
 MATH _ LIBRARY _ NAME = osType = = WINDOWS ? " msvcrt " : osType = = WINDOWSCE ? " coredll " : " m " ; 
 HAS _ DLL _ CALLBACKS = osType = = WINDOWS ; 
 + 	 ARCH = getCanonicalArchitecture ( System . getProperty ( " os . arch " ) ) ; 
 RESOURCE _ PREFIX = getNativeLibraryResourcePrefix ( ) ; 
 - ARCH = System . getProperty ( " os . arch " ) . toLowerCase ( ) . trim ( ) ; 
 } 
 private Platform ( ) { } 
 public static final int getOSType ( ) { 
 @ @ - 175 , 9 + 175 , 9 @ @ public final class Platform { 
 if ( model ! = null ) { 
 return " 64 " . equals ( model ) ; 
 } 
 - if ( " x86 _ 64 " . equals ( ARCH ) 
 + if ( " x86 - 64 " . equals ( ARCH ) 
 | | " ia64 " . equals ( ARCH ) 
 - | | " ppc64 " . equals ( ARCH ) 
 + | | " ppc64 " . equals ( ARCH ) | | " ppc64le " . equals ( ARCH ) 
 | | " sparcv9 " . equals ( ARCH ) 
 | | " amd64 " . equals ( ARCH ) ) { 
 return true ; 
 @ @ - 186 , 21 + 186 , 14 @ @ public final class Platform { 
 } 
 
 public static final boolean isIntel ( ) { 
 - if ( ARCH . equals ( " i386 " ) 
 - | | ARCH . startsWith ( " i686 " ) 
 - | | ARCH . equals ( " x86 " ) 
 - | | ARCH . equals ( " x86 _ 64 " ) 
 - | | ARCH . equals ( " amd64 " ) ) { 
 + if ( ARCH . equals ( " x86 " ) | | ARCH . equals ( " x86 - 64 " ) ) { 
 return true ; 
 } 
 return false ; 
 } 
 
 public static final boolean isPPC ( ) { 
 - if ( ARCH . equals ( " ppc " ) 
 - | | ARCH . equals ( " ppc64 " ) 
 - | | ARCH . equals ( " powerpc " ) 
 - | | ARCH . equals ( " powerpc64 " ) ) { 
 + if ( ARCH . startsWith ( " ppc " ) ) { 
 return true ; 
 } 
 return false ; 
 @ @ - 214 , 6 + 207 , 28 @ @ public final class Platform { 
 return ARCH . startsWith ( " sparc " ) ; 
 } 
 
 + static String getCanonicalArchitecture ( String arch ) { 
 + 	 / / Work around OpenJDK mis - reporting os . arch 
 + 	 / / https : / / bugs . openjdk . java . net / browse / JDK - 8073139 
 + 	 arch = arch . toLowerCase ( ) . trim ( ) ; 
 + if ( " powerpc " . equals ( arch ) ) { 
 + arch = " ppc " ; 
 + } 
 + else if ( " powerpc64 " . equals ( arch ) ) { 
 + arch = " ppc64 " ; 
 + } 
 + else if ( " i386 " . equals ( arch ) | | " i686 " . equals ( arch ) ) { 
 + arch = " x86 " ; 
 + } 
 + else if ( " x86 _ 64 " . equals ( arch ) | | " amd64 " . equals ( arch ) ) { 
 + arch = " x86 - 64 " ; 
 + } 
 + 	 if ( " ppc64 " . equals ( arch ) & & " little " . equals ( System . getProperty ( " sun . cpu . endian " ) ) ) { 
 + 	 arch = " ppc64le " ; 
 + 	 } 
 + 	 return arch ; 
 + } 
 + 
 / * * Generate a canonical String prefix based on the current OS 
 type / arch / name . 
 * / 
 @ @ - 229 , 19 + 244 , 7 @ @ public final class Platform { 
 * / 
 static String getNativeLibraryResourcePrefix ( int osType , String arch , String name ) { 
 String osPrefix ; 
 - arch = arch . toLowerCase ( ) . trim ( ) ; 
 - if ( " powerpc " . equals ( arch ) ) { 
 - arch = " ppc " ; 
 - } 
 - else if ( " powerpc64 " . equals ( arch ) ) { 
 - arch = " ppc64 " ; 
 - } 
 - else if ( " i386 " . equals ( arch ) ) { 
 - arch = " x86 " ; 
 - } 
 - else if ( " x86 _ 64 " . equals ( arch ) | | " amd64 " . equals ( arch ) ) { 
 - arch = " x86 - 64 " ; 
 - } 
 + arch = getCanonicalArchitecture ( arch ) ; 
 switch ( osType ) { 
 case Platform . ANDROID : 
 if ( arch . startsWith ( " arm " ) ) {

NEAREST DIFF:
ELIMINATEDSENTENCE
