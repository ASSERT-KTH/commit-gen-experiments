BLEU SCORE: 0.020980574531482755

TEST MSG: add testing workarounds for JVM thread handling bug on OSX
GENERATED MSG: note platforms where test fails

TEST DIFF (one line): diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java <nl> index 62987d6 . . bb91833 100644 <nl> - - - a / test / com / sun / jna / CallbacksTest . java <nl> + + + b / test / com / sun / jna / CallbacksTest . java <nl> @ @ - 39 , 6 + 39 , 12 @ @ import com . sun . jna . win32 . W32APIOptions ; <nl> / / @ SuppressWarnings ( " unused " ) <nl> public class CallbacksTest extends TestCase implements Paths { <nl> <nl> + / / On OSX , on Oracle JVM 1 . 8 + , pthread cleanup thinks the native thread is <nl> + / / not attached , and the JVM never unmaps the defunct native thread . In <nl> + / / order to avoid this situation causing tests to time out , we need to <nl> + / / explicitly detach the native thread after our Java code is done with it . <nl> + private static final boolean THREAD _ DETACH _ BUG = Platform . isMac ( ) ; <nl> + <nl> private static final String UNICODE = " [ \ u0444 ] " ; <nl> <nl> private static final double DOUBLE _ MAGIC = - 118 . 625d ; <nl> @ @ - 1111 , 6 + 1117 , 9 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> } <nl> <nl> + + called [ 0 ] ; <nl> + if ( THREAD _ DETACH _ BUG & & called [ 0 ] = = 2 ) { <nl> + Native . detach ( true ) ; <nl> + } <nl> } <nl> } ; <nl> callThreadedCallback ( cb , init , 2 , 2000 , called , 1 ) ; <nl> @ @ - 1151 , 6 + 1160 , 9 @ @ public class CallbacksTest extends TestCase implements Paths { <nl> public void callback ( ) { <nl> threads . add ( Thread . currentThread ( ) ) ; <nl> + + called [ 0 ] ; <nl> + if ( THREAD _ DETACH _ BUG & & called [ 0 ] = = COUNT ) { <nl> + Native . detach ( true ) ; <nl> + } <nl> } <nl> } ; <nl> callThreadedCallback ( cb , init , COUNT , 100 , called ) ;
NEAREST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 2321abf . . 872fd21 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 29 , 6 + 29 , 7 @ @ <nl> < ! - - ( all build - related props should go in - dynamic - properties ) - - > <nl> < property name = " name " value = " jna " / > <nl> < property name = " jar " value = " $ { name } . jar " / > <nl> + < property name = " minjar " value = " $ { name } - min . jar " / > <nl> < property name = " testjar " value = " $ { name } - test . jar " / > <nl> < property name = " debug " value = " true " / > <nl> < property name = " debug . native " value = " false " / > <nl> @ @ - 281 , 6 + 282 , 9 @ @ <nl> < / target > <nl> < target name = " jar " depends = " - setup , native , : jar " unless = " - jar " <nl> description = " Build primary jar " > <nl> + < ! - - Bundle native components with primary jar to facilitate <nl> + easy distribution to common platforms . <nl> + - - > <nl> < jar jarfile = " $ { build } / $ { jar } " duplicate = " preserve " > <nl> < manifest > <nl> < attribute name = " Main - Class " value = " com . sun . jna . Native " / > <nl> @ @ - 416 , 6 + 420 , 9 @ @ osname = macos <nl> includes = " * jnidispatch * " <nl> prefix = " com / sun / jna / w32ce - arm " / > <nl> < / jar > <nl> + < zip zipfile = " $ { build } / $ { minjar } " > <nl> + < zipfileset src = " $ { build } / $ { jar } " excludes = " * * / * jnidispatch * " / > <nl> + < / zip > <nl> < / target > <nl> <nl> < target name = " platform - jar " depends = " jar " > <nl> @ @ - 893 , 7 + 900 , 7 @ @ osname = macos <nl> < target name = " dist " depends = " jar , javadoc , contrib - jars , compile - tests , native " <nl> description = " Build distribution files " > <nl> < copy todir = " $ { dist } " > <nl> - < fileset dir = " $ { build } " includes = " $ { jar } " / > <nl> + < fileset dir = " $ { build } " includes = " $ { jar } , $ { minjar } " / > <nl> < fileset dir = " $ { contrib } / platform / dist " includes = " platform . jar " / > <nl> < fileset dir = " $ { lib . native } " > <nl> < include name = " * . jar " / >

TEST DIFF:
diff - - git a / test / com / sun / jna / CallbacksTest . java b / test / com / sun / jna / CallbacksTest . java 
 index 62987d6 . . bb91833 100644 
 - - - a / test / com / sun / jna / CallbacksTest . java 
 + + + b / test / com / sun / jna / CallbacksTest . java 
 @ @ - 39 , 6 + 39 , 12 @ @ import com . sun . jna . win32 . W32APIOptions ; 
 / / @ SuppressWarnings ( " unused " ) 
 public class CallbacksTest extends TestCase implements Paths { 
 
 + / / On OSX , on Oracle JVM 1 . 8 + , pthread cleanup thinks the native thread is 
 + / / not attached , and the JVM never unmaps the defunct native thread . In 
 + / / order to avoid this situation causing tests to time out , we need to 
 + / / explicitly detach the native thread after our Java code is done with it . 
 + private static final boolean THREAD _ DETACH _ BUG = Platform . isMac ( ) ; 
 + 
 private static final String UNICODE = " [ \ u0444 ] " ; 
 
 private static final double DOUBLE _ MAGIC = - 118 . 625d ; 
 @ @ - 1111 , 6 + 1117 , 9 @ @ public class CallbacksTest extends TestCase implements Paths { 
 } 
 
 + + called [ 0 ] ; 
 + if ( THREAD _ DETACH _ BUG & & called [ 0 ] = = 2 ) { 
 + Native . detach ( true ) ; 
 + } 
 } 
 } ; 
 callThreadedCallback ( cb , init , 2 , 2000 , called , 1 ) ; 
 @ @ - 1151 , 6 + 1160 , 9 @ @ public class CallbacksTest extends TestCase implements Paths { 
 public void callback ( ) { 
 threads . add ( Thread . currentThread ( ) ) ; 
 + + called [ 0 ] ; 
 + if ( THREAD _ DETACH _ BUG & & called [ 0 ] = = COUNT ) { 
 + Native . detach ( true ) ; 
 + } 
 } 
 } ; 
 callThreadedCallback ( cb , init , COUNT , 100 , called ) ;

NEAREST DIFF:
diff - - git a / build . xml b / build . xml 
 index 2321abf . . 872fd21 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 29 , 6 + 29 , 7 @ @ 
 < ! - - ( all build - related props should go in - dynamic - properties ) - - > 
 < property name = " name " value = " jna " / > 
 < property name = " jar " value = " $ { name } . jar " / > 
 + < property name = " minjar " value = " $ { name } - min . jar " / > 
 < property name = " testjar " value = " $ { name } - test . jar " / > 
 < property name = " debug " value = " true " / > 
 < property name = " debug . native " value = " false " / > 
 @ @ - 281 , 6 + 282 , 9 @ @ 
 < / target > 
 < target name = " jar " depends = " - setup , native , : jar " unless = " - jar " 
 description = " Build primary jar " > 
 + < ! - - Bundle native components with primary jar to facilitate 
 + easy distribution to common platforms . 
 + - - > 
 < jar jarfile = " $ { build } / $ { jar } " duplicate = " preserve " > 
 < manifest > 
 < attribute name = " Main - Class " value = " com . sun . jna . Native " / > 
 @ @ - 416 , 6 + 420 , 9 @ @ osname = macos 
 includes = " * jnidispatch * " 
 prefix = " com / sun / jna / w32ce - arm " / > 
 < / jar > 
 + < zip zipfile = " $ { build } / $ { minjar } " > 
 + < zipfileset src = " $ { build } / $ { jar } " excludes = " * * / * jnidispatch * " / > 
 + < / zip > 
 < / target > 
 
 < target name = " platform - jar " depends = " jar " > 
 @ @ - 893 , 7 + 900 , 7 @ @ osname = macos 
 < target name = " dist " depends = " jar , javadoc , contrib - jars , compile - tests , native " 
 description = " Build distribution files " > 
 < copy todir = " $ { dist } " > 
 - < fileset dir = " $ { build } " includes = " $ { jar } " / > 
 + < fileset dir = " $ { build } " includes = " $ { jar } , $ { minjar } " / > 
 < fileset dir = " $ { contrib } / platform / dist " includes = " platform . jar " / > 
 < fileset dir = " $ { lib . native } " > 
 < include name = " * . jar " / >
