BLEU SCORE: 0.05341087579952926

TEST MSG: last error now always preserved
GENERATED MSG: fix more tests

TEST DIFF (one line): diff - - git a / test / com / sun / jna / LastErrorTest . java b / test / com / sun / jna / LastErrorTest . java <nl> index a900428 . . 53e545a 100644 <nl> - - - a / test / com / sun / jna / LastErrorTest . java <nl> + + + b / test / com / sun / jna / LastErrorTest . java <nl> @ @ - 51 , 28 + 51 , 21 @ @ public class LastErrorTest extends TestCase { <nl> public void testLastErrorPerThreadStorage ( ) throws Exception { <nl> final TestLibrary lib = ( TestLibrary ) Native . loadLibrary ( " testlib " , TestLibrary . class ) ; <nl> final int [ ] errors = new int [ 2 ] ; <nl> - boolean last = Native . getPreserveLastError ( ) ; <nl> - try { <nl> - Native . setPreserveLastError ( true ) ; <nl> - Thread t1 = new Thread ( ) { public void run ( ) { <nl> - lib . setLastError ( - 1 ) ; <nl> - errors [ 0 ] = Native . getLastError ( ) ; <nl> - } } ; <nl> - Thread t2 = new Thread ( ) { public void run ( ) { <nl> - lib . setLastError ( - 2 ) ; <nl> - errors [ 1 ] = Native . getLastError ( ) ; <nl> - } } ; <nl> - lib . setLastError ( - 3 ) ; <nl> - <nl> - t1 . start ( ) ; t2 . start ( ) ; <nl> - t1 . join ( ) ; t2 . join ( ) ; <nl> - assertEquals ( " Wrong error on main thread " , - 3 , Native . getLastError ( ) ) ; <nl> - assertEquals ( " Wrong error on first thread " , - 1 , errors [ 0 ] ) ; <nl> - assertEquals ( " Wrong error on second thread " , - 2 , errors [ 1 ] ) ; <nl> - } <nl> - finally { <nl> - Native . setPreserveLastError ( last ) ; <nl> - } <nl> + Thread t1 = new Thread ( ) { public void run ( ) { <nl> + lib . setLastError ( - 1 ) ; <nl> + errors [ 0 ] = Native . getLastError ( ) ; <nl> + } } ; <nl> + Thread t2 = new Thread ( ) { public void run ( ) { <nl> + lib . setLastError ( - 2 ) ; <nl> + errors [ 1 ] = Native . getLastError ( ) ; <nl> + } } ; <nl> + lib . setLastError ( - 3 ) ; <nl> + <nl> + t1 . start ( ) ; t2 . start ( ) ; <nl> + t1 . join ( ) ; t2 . join ( ) ; <nl> + assertEquals ( " Wrong error on main thread " , - 3 , Native . getLastError ( ) ) ; <nl> + assertEquals ( " Wrong error on first thread " , - 1 , errors [ 0 ] ) ; <nl> + assertEquals ( " Wrong error on second thread " , - 2 , errors [ 1 ] ) ; <nl> } <nl> <nl> private final int ERROR = Platform . isWindows ( ) ? 1 : - 1 ;
NEAREST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 3764e99 . . 905477c 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 623 , 6 + 623 , 11 @ @ <nl> <nl> < target name = " dist " depends = " jar , contrib - jars , compile - tests , native , javadoc " <nl> description = " Build distribution files " > <nl> + < copy todir = " $ { dist } " > <nl> + < fileset dir = " $ { build } " > <nl> + < include name = " $ { native . jar } " / > <nl> + < / fileset > <nl> + < / copy > <nl> < jar jarfile = " $ { dist } / jna . jar " duplicate = " preserve " > <nl> < manifest > <nl> < attribute name = " Main - Class " value = " com . sun . jna . Native " / > <nl> @ @ - 655 , 6 + 660 , 8 @ @ com / sun / jna / win32 - x86 / jnidispatch . dll ; <nl> processor = x86 ; osname = win32 , <nl> com / sun / jna / win32 - amd64 / jnidispatch . dll ; <nl> processor = x86 - 64 ; osname = win32 , <nl> + com / sun / jna / w32ce - arm / jnidispatch . dll ; <nl> + processor = arm ; osname = wince , <nl> <nl> com / sun / jna / sunos - x86 / libjnidispatch . so ; <nl> processor = x86 ; osname = sunos , <nl> @ @ - 728 , 17 + 735 , 14 @ @ osname = macos , <nl> prefix = " com / sun / jna / w32ce - arm " / > <nl> < / jar > <nl> < copy todir = " $ { dist } " > <nl> - < fileset dir = " $ { build } " > <nl> - < include name = " $ { native . jar } " / > <nl> + < fileset dir = " $ { contrib } / platform / dist " > <nl> + 	 < include name = " platform . jar " / > <nl> < / fileset > <nl> - 	 < fileset dir = " $ { contrib } / platform / dist " > <nl> - 	 	 < include name = " platform . jar " / > <nl> - 	 < / fileset > <nl> < / copy > <nl> < copy todir = " $ { dist } / jnacontrib " flatten = " true " > <nl> - 	 < fileset dir = " $ { contrib } " > <nl> - 	 	 < include name = " * * / build / demo - * . jar " / > <nl> - 	 < / fileset > <nl> + < fileset dir = " $ { contrib } " > <nl> + 	 < include name = " * * / build / demo - * . jar " / > <nl> + < / fileset > <nl> < / copy > <nl> < zip zipfile = " $ { dist } / doc . zip " > <nl> < zipfileset dir = " $ { javadoc } " prefix = " javadoc " / >

TEST DIFF:
diff - - git a / test / com / sun / jna / LastErrorTest . java b / test / com / sun / jna / LastErrorTest . java 
 index a900428 . . 53e545a 100644 
 - - - a / test / com / sun / jna / LastErrorTest . java 
 + + + b / test / com / sun / jna / LastErrorTest . java 
 @ @ - 51 , 28 + 51 , 21 @ @ public class LastErrorTest extends TestCase { 
 public void testLastErrorPerThreadStorage ( ) throws Exception { 
 final TestLibrary lib = ( TestLibrary ) Native . loadLibrary ( " testlib " , TestLibrary . class ) ; 
 final int [ ] errors = new int [ 2 ] ; 
 - boolean last = Native . getPreserveLastError ( ) ; 
 - try { 
 - Native . setPreserveLastError ( true ) ; 
 - Thread t1 = new Thread ( ) { public void run ( ) { 
 - lib . setLastError ( - 1 ) ; 
 - errors [ 0 ] = Native . getLastError ( ) ; 
 - } } ; 
 - Thread t2 = new Thread ( ) { public void run ( ) { 
 - lib . setLastError ( - 2 ) ; 
 - errors [ 1 ] = Native . getLastError ( ) ; 
 - } } ; 
 - lib . setLastError ( - 3 ) ; 
 - 
 - t1 . start ( ) ; t2 . start ( ) ; 
 - t1 . join ( ) ; t2 . join ( ) ; 
 - assertEquals ( " Wrong error on main thread " , - 3 , Native . getLastError ( ) ) ; 
 - assertEquals ( " Wrong error on first thread " , - 1 , errors [ 0 ] ) ; 
 - assertEquals ( " Wrong error on second thread " , - 2 , errors [ 1 ] ) ; 
 - } 
 - finally { 
 - Native . setPreserveLastError ( last ) ; 
 - } 
 + Thread t1 = new Thread ( ) { public void run ( ) { 
 + lib . setLastError ( - 1 ) ; 
 + errors [ 0 ] = Native . getLastError ( ) ; 
 + } } ; 
 + Thread t2 = new Thread ( ) { public void run ( ) { 
 + lib . setLastError ( - 2 ) ; 
 + errors [ 1 ] = Native . getLastError ( ) ; 
 + } } ; 
 + lib . setLastError ( - 3 ) ; 
 + 
 + t1 . start ( ) ; t2 . start ( ) ; 
 + t1 . join ( ) ; t2 . join ( ) ; 
 + assertEquals ( " Wrong error on main thread " , - 3 , Native . getLastError ( ) ) ; 
 + assertEquals ( " Wrong error on first thread " , - 1 , errors [ 0 ] ) ; 
 + assertEquals ( " Wrong error on second thread " , - 2 , errors [ 1 ] ) ; 
 } 
 
 private final int ERROR = Platform . isWindows ( ) ? 1 : - 1 ;

NEAREST DIFF:
diff - - git a / build . xml b / build . xml 
 index 3764e99 . . 905477c 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 623 , 6 + 623 , 11 @ @ 
 
 < target name = " dist " depends = " jar , contrib - jars , compile - tests , native , javadoc " 
 description = " Build distribution files " > 
 + < copy todir = " $ { dist } " > 
 + < fileset dir = " $ { build } " > 
 + < include name = " $ { native . jar } " / > 
 + < / fileset > 
 + < / copy > 
 < jar jarfile = " $ { dist } / jna . jar " duplicate = " preserve " > 
 < manifest > 
 < attribute name = " Main - Class " value = " com . sun . jna . Native " / > 
 @ @ - 655 , 6 + 660 , 8 @ @ com / sun / jna / win32 - x86 / jnidispatch . dll ; 
 processor = x86 ; osname = win32 , 
 com / sun / jna / win32 - amd64 / jnidispatch . dll ; 
 processor = x86 - 64 ; osname = win32 , 
 + com / sun / jna / w32ce - arm / jnidispatch . dll ; 
 + processor = arm ; osname = wince , 
 
 com / sun / jna / sunos - x86 / libjnidispatch . so ; 
 processor = x86 ; osname = sunos , 
 @ @ - 728 , 17 + 735 , 14 @ @ osname = macos , 
 prefix = " com / sun / jna / w32ce - arm " / > 
 < / jar > 
 < copy todir = " $ { dist } " > 
 - < fileset dir = " $ { build } " > 
 - < include name = " $ { native . jar } " / > 
 + < fileset dir = " $ { contrib } / platform / dist " > 
 + 	 < include name = " platform . jar " / > 
 < / fileset > 
 - 	 < fileset dir = " $ { contrib } / platform / dist " > 
 - 	 	 < include name = " platform . jar " / > 
 - 	 < / fileset > 
 < / copy > 
 < copy todir = " $ { dist } / jnacontrib " flatten = " true " > 
 - 	 < fileset dir = " $ { contrib } " > 
 - 	 	 < include name = " * * / build / demo - * . jar " / > 
 - 	 < / fileset > 
 + < fileset dir = " $ { contrib } " > 
 + 	 < include name = " * * / build / demo - * . jar " / > 
 + < / fileset > 
 < / copy > 
 < zip zipfile = " $ { dist } / doc . zip " > 
 < zipfileset dir = " $ { javadoc } " prefix = " javadoc " / >
