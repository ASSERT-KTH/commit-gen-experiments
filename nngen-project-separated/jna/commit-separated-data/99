BLEU SCORE: 0.2259005009024612

TEST MSG: Fix javadoc warnings
GENERATED MSG: some changes

TEST DIFF (one line): diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java <nl> index bbe28d2 . . e28021e 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java <nl> @ @ - 32 , 8 + 32 , 12 @ @ import com . sun . jna . ptr . PointerByReference ; <nl> / * * <nl> * Wrapper class for the ITypeInfo interface <nl> * <nl> - * Method Name V - Table Offset IUnknown . QueryInterface 0 IUnknown . AddRef 4 <nl> - * IUnknown . Release 8 <nl> + * < table > <nl> + * < tr > < th > Method Name < / th > < th > V - Table Offset < / th > < / tr > <nl> + * < tr > < td > IUnknown . QueryInterface < / td > < td > 0 < / td > < / tr > <nl> + * < tr > < td > IUnknown . AddRef < / td > < td > 4 < / td > < / tr > <nl> + * < tr > < td > IUnknown . Release < / td > < td > 8 < / td > < / tr > <nl> + * < / table > <nl> * <nl> * @ author Tobias Wolf , wolf . tobias @ gmx . net <nl> * / <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java <nl> index bb3480a . . 7eaba39 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java <nl> @ @ - 447 , 7 + 447 , 7 @ @ public interface Ole32 extends StdCallLibrary { <nl> <nl> / * * <nl> * Puts an OLE compound document object into the running state . <nl> - * @ param pUnknown [ in ] Pointer to the { @ link IUnknown IUnknown } interface <nl> + * @ param pUnknown [ in ] Pointer to the { @ link com . sun . jna . platform . win32 . COM . IUnknown IUnknown } interface <nl> * on the object , with which it will query for a pointer to <nl> * the IRunnableObject interface , and then call its Run method . <nl> * @ return This function returns on success . <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index adc8111 . . f12dedc 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 3528 , 9 + 3528 , 9 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * construct the locale id from a language id and a sort id . <nl> * <nl> - * @ param lgid <nl> - * @ param srtid <nl> - * @ return <nl> + * @ param lgid language id <nl> + * @ param srtid sort id <nl> + * @ return locale id derived from ldig and srtid <nl> * / <nl> public static final LCID MAKELCID ( int lgid , int srtid ) { <nl> return new LCID ( _ MAKELCID ( lgid , srtid ) ) ; <nl> @ @ - 3539 , 10 + 3539 , 10 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * construct the locale id from a language id , sort id , and sort version . <nl> * <nl> - * @ param lgid <nl> - * @ param srtid <nl> - * @ param ver <nl> - * @ return <nl> + * @ param lgid locale id <nl> + * @ param srtid sort id <nl> + * @ param ver sort version <nl> + * @ return locale id derviced from a language id , sort id , and sort version . <nl> * / <nl> public static final LCID MAKESORTLCID ( int lgid , int srtid , int ver ) { <nl> return new LCID ( _ MAKELCID ( lgid , srtid ) | ( ver < < 20 ) ) ; <nl> @ @ - 3551 , 8 + 3551 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * extract the language id from a locale id . <nl> * <nl> - * @ param lcid <nl> - * @ return <nl> + * @ param lcid locale id <nl> + * @ return extracted language id <nl> * / <nl> public static final int LANGIDFROMLCID ( LCID lcid ) { <nl> return lcid . intValue ( ) & 0xFFFF ; <nl> @ @ - 3561 , 8 + 3561 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * extract the sort id from a locale id . <nl> * <nl> - * @ param lcid <nl> - * @ return <nl> + * @ param lcid locale id <nl> + * @ return extracted sort id <nl> * / <nl> public static final int SORTIDFROMLCID ( LCID lcid ) { <nl> return ( lcid . intValue ( ) > > > 16 ) & 0xf ; <nl> @ @ - 3571 , 8 + 3571 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * extract the sort version from a locale id . <nl> * <nl> - * @ param lcid <nl> - * @ return <nl> + * @ param lcid locale id <nl> + * @ return extracted sort version <nl> * / <nl> public static final int SORTVERSIONFROMLCID ( LCID lcid ) { <nl> return ( lcid . intValue ( ) > > > 20 ) & 0xf ; <nl> @ @ - 3581 , 9 + 3581 , 9 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * Construct language id from a primary language id and a sublanguage id . <nl> * <nl> - * @ param p Language ID <nl> - * @ param s Sublanguage ID <nl> - * @ return <nl> + * @ param p primary language ID <nl> + * @ param s sublanguage ID <nl> + * @ return constructed language id <nl> * / <nl> public static final int MAKELANGID ( int p , int s ) { <nl> return ( s < < 10 ) | ( p & 0xFFFF ) ; <nl> @ @ - 3592 , 8 + 3592 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * Extract primary language id from a language id . <nl> * <nl> - * @ param lgid Language ID <nl> - * @ return <nl> + * @ param lgid language ID <nl> + * @ return extracted primary language id <nl> * / <nl> public static final int PRIMARYLANGID ( int lgid ) { <nl> return lgid & 0x3ff ; <nl> @ @ - 3602 , 8 + 3602 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> / * * <nl> * Extract sublanguage id from a language id . <nl> * <nl> - * @ param lgid Language ID <nl> - * @ return <nl> + * @ param lgid language ID <nl> + * @ return extracted sublanguage id <nl> * / <nl> public static final int SUBLANGID ( int lgid ) { <nl> return ( lgid & 0xFFFF ) > > > 10 ;
NEAREST DIFF (one line): diff - - git a / ChangeLog b / ChangeLog <nl> index 289d195 . . ff76645 100644 <nl> - - - a / ChangeLog <nl> + + + b / ChangeLog <nl> @ @ - 1 , 3 + 1 , 13 @ @ <nl> + 2013 - 01 - 10 Anthony Green < green @ moxielogic . com > <nl> + <nl> + 	 * configure . ac : Put local . exp in the right place . <nl> + 	 * configure : Rebuilt . <nl> + <nl> + 	 * src / x86 / ffi . c : Update comment about regparm function attributes . <nl> + 	 * src / x86 / sysv . S ( ffi _ closure _ SYSV ) : The SUNPRO compiler requires <nl> + 	 that all function arguments be passed on the stack ( no regparm <nl> + 	 support ) . <nl> + <nl> 2013 - 01 - 08 Anthony Green < green @ moxielogic . com > <nl> <nl> 	 * configure . ac : Generate local . exp . This sets CC _ FOR _ TARGET <nl> diff - - git a / configure b / configure <nl> index 5876eb7 . . 4a12b96 100755 <nl> - - - a / configure <nl> + + + b / configure <nl> @ @ - 13068 , 10 + 13068 , 10 @ @ ac _ compiler _ gnu = $ ac _ cv _ c _ compiler _ gnu <nl> <nl> if test " x $ GCC " = " xyes " ; then <nl> CFLAGS = " $ CFLAGS - fexceptions " <nl> - touch testsuite / local . exp <nl> + touch local . exp <nl> else <nl> cat > local . exp < < EOF <nl> - set CC _ FOR _ TARGET $ CC <nl> + set CC _ FOR _ TARGET " $ CC " <nl> EOF <nl> fi <nl> <nl> diff - - git a / configure . ac b / configure . ac <nl> index 7ffb36c . . 13d5bc2 100644 <nl> - - - a / configure . ac <nl> + + + b / configure . ac <nl> @ @ - 40 , 10 + 40 , 10 @ @ AX _ CC _ MAXOPT <nl> AX _ CFLAGS _ WARN _ ALL <nl> if test " x $ GCC " = " xyes " ; then <nl> CFLAGS = " $ CFLAGS - fexceptions " <nl> - touch testsuite / local . exp <nl> + touch local . exp <nl> else <nl> cat > local . exp < < EOF <nl> - set CC _ FOR _ TARGET $ CC <nl> + set CC _ FOR _ TARGET " $ CC " <nl> EOF <nl> fi <nl> <nl> diff - - git a / src / x86 / ffi . c b / src / x86 / ffi . c <nl> index 611e221 . . 3f46693 100644 <nl> - - - a / src / x86 / ffi . c <nl> + + + b / src / x86 / ffi . c <nl> @ @ - 424 , 7 + 424 , 7 @ @ void ffi _ call ( ffi _ cif * cif , void ( * fn ) ( void ) , void * rvalue , void * * avalue ) <nl> / * * private members * * / <nl> <nl> / * The following _ _ attribute _ _ ( ( regparm ( 1 ) ) ) decorations will have no effect <nl> - on MSVC - standard cdecl convention applies . * / <nl> + on MSVC or SUNPRO _ C - - standard conventions apply . * / <nl> static void ffi _ prep _ incoming _ args _ SYSV ( char * stack , void * * ret , <nl> void * * args , ffi _ cif * cif ) ; <nl> void FFI _ HIDDEN ffi _ closure _ SYSV ( ffi _ closure * ) <nl> diff - - git a / src / x86 / sysv . S b / src / x86 / sysv . S <nl> index 69e7e8d . . 71502bb 100644 <nl> - - - a / src / x86 / sysv . S <nl> + + + b / src / x86 / sysv . S <nl> @ @ - 182 , 9 + 182 , 19 @ @ ffi _ closure _ SYSV : <nl> 	 leal 	 - 24 ( % ebp ) , % edx <nl> 	 movl 	 % edx , - 12 ( % ebp ) 	 / * resp * / <nl> 	 leal 	 8 ( % ebp ) , % edx <nl> + # ifdef _ _ SUNPRO _ C <nl> + 	 / * The SUNPRO compiler doesn ' t support GCC ' s regparm function <nl> + 	 attribute , so we have to pass all three arguments to <nl> + 	 ffi _ closure _ SYSV _ inner on the stack . * / <nl> + 	 movl 	 % edx , 8 ( % esp ) 	 / * args = _ _ builtin _ dwarf _ cfa ( ) * / <nl> + 	 leal 	 - 12 ( % ebp ) , % edx <nl> + 	 movl 	 % edx , 4 ( % esp ) 	 / * & resp * / <nl> + 	 movl % eax , ( % esp ) / * closure * / <nl> + # else <nl> 	 movl 	 % edx , 4 ( % esp ) 	 / * args = _ _ builtin _ dwarf _ cfa ( ) * / <nl> 	 leal 	 - 12 ( % ebp ) , % edx <nl> 	 movl 	 % edx , ( % esp ) 	 / * & resp * / <nl> + # endif <nl> # if defined HAVE _ HIDDEN _ VISIBILITY _ ATTRIBUTE | | ! defined _ _ PIC _ _ <nl> 	 call 	 ffi _ closure _ SYSV _ inner <nl> # else

TEST DIFF:
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java 
 index bbe28d2 . . e28021e 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / IUnknown . java 
 @ @ - 32 , 8 + 32 , 12 @ @ import com . sun . jna . ptr . PointerByReference ; 
 / * * 
 * Wrapper class for the ITypeInfo interface 
 * 
 - * Method Name V - Table Offset IUnknown . QueryInterface 0 IUnknown . AddRef 4 
 - * IUnknown . Release 8 
 + * < table > 
 + * < tr > < th > Method Name < / th > < th > V - Table Offset < / th > < / tr > 
 + * < tr > < td > IUnknown . QueryInterface < / td > < td > 0 < / td > < / tr > 
 + * < tr > < td > IUnknown . AddRef < / td > < td > 4 < / td > < / tr > 
 + * < tr > < td > IUnknown . Release < / td > < td > 8 < / td > < / tr > 
 + * < / table > 
 * 
 * @ author Tobias Wolf , wolf . tobias @ gmx . net 
 * / 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java 
 index bb3480a . . 7eaba39 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Ole32 . java 
 @ @ - 447 , 7 + 447 , 7 @ @ public interface Ole32 extends StdCallLibrary { 
 
 / * * 
 * Puts an OLE compound document object into the running state . 
 - * @ param pUnknown [ in ] Pointer to the { @ link IUnknown IUnknown } interface 
 + * @ param pUnknown [ in ] Pointer to the { @ link com . sun . jna . platform . win32 . COM . IUnknown IUnknown } interface 
 * on the object , with which it will query for a pointer to 
 * the IRunnableObject interface , and then call its Run method . 
 * @ return This function returns on success . 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 index adc8111 . . f12dedc 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 @ @ - 3528 , 9 + 3528 , 9 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { 
 / * * 
 * construct the locale id from a language id and a sort id . 
 * 
 - * @ param lgid 
 - * @ param srtid 
 - * @ return 
 + * @ param lgid language id 
 + * @ param srtid sort id 
 + * @ return locale id derived from ldig and srtid 
 * / 
 public static final LCID MAKELCID ( int lgid , int srtid ) { 
 return new LCID ( _ MAKELCID ( lgid , srtid ) ) ; 
 @ @ - 3539 , 10 + 3539 , 10 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { 
 / * * 
 * construct the locale id from a language id , sort id , and sort version . 
 * 
 - * @ param lgid 
 - * @ param srtid 
 - * @ param ver 
 - * @ return 
 + * @ param lgid locale id 
 + * @ param srtid sort id 
 + * @ param ver sort version 
 + * @ return locale id derviced from a language id , sort id , and sort version . 
 * / 
 public static final LCID MAKESORTLCID ( int lgid , int srtid , int ver ) { 
 return new LCID ( _ MAKELCID ( lgid , srtid ) | ( ver < < 20 ) ) ; 
 @ @ - 3551 , 8 + 3551 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { 
 / * * 
 * extract the language id from a locale id . 
 * 
 - * @ param lcid 
 - * @ return 
 + * @ param lcid locale id 
 + * @ return extracted language id 
 * / 
 public static final int LANGIDFROMLCID ( LCID lcid ) { 
 return lcid . intValue ( ) & 0xFFFF ; 
 @ @ - 3561 , 8 + 3561 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { 
 / * * 
 * extract the sort id from a locale id . 
 * 
 - * @ param lcid 
 - * @ return 
 + * @ param lcid locale id 
 + * @ return extracted sort id 
 * / 
 public static final int SORTIDFROMLCID ( LCID lcid ) { 
 return ( lcid . intValue ( ) > > > 16 ) & 0xf ; 
 @ @ - 3571 , 8 + 3571 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { 
 / * * 
 * extract the sort version from a locale id . 
 * 
 - * @ param lcid 
 - * @ return 
 + * @ param lcid locale id 
 + * @ return extracted sort version 
 * / 
 public static final int SORTVERSIONFROMLCID ( LCID lcid ) { 
 return ( lcid . intValue ( ) > > > 20 ) & 0xf ; 
 @ @ - 3581 , 9 + 3581 , 9 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { 
 / * * 
 * Construct language id from a primary language id and a sublanguage id . 
 * 
 - * @ param p Language ID 
 - * @ param s Sublanguage ID 
 - * @ return 
 + * @ param p primary language ID 
 + * @ param s sublanguage ID 
 + * @ return constructed language id 
 * / 
 public static final int MAKELANGID ( int p , int s ) { 
 return ( s < < 10 ) | ( p & 0xFFFF ) ; 
 @ @ - 3592 , 8 + 3592 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { 
 / * * 
 * Extract primary language id from a language id . 
 * 
 - * @ param lgid Language ID 
 - * @ return 
 + * @ param lgid language ID 
 + * @ return extracted primary language id 
 * / 
 public static final int PRIMARYLANGID ( int lgid ) { 
 return lgid & 0x3ff ; 
 @ @ - 3602 , 8 + 3602 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { 
 / * * 
 * Extract sublanguage id from a language id . 
 * 
 - * @ param lgid Language ID 
 - * @ return 
 + * @ param lgid language ID 
 + * @ return extracted sublanguage id 
 * / 
 public static final int SUBLANGID ( int lgid ) { 
 return ( lgid & 0xFFFF ) > > > 10 ;

NEAREST DIFF:
diff - - git a / ChangeLog b / ChangeLog 
 index 289d195 . . ff76645 100644 
 - - - a / ChangeLog 
 + + + b / ChangeLog 
 @ @ - 1 , 3 + 1 , 13 @ @ 
 + 2013 - 01 - 10 Anthony Green < green @ moxielogic . com > 
 + 
 + 	 * configure . ac : Put local . exp in the right place . 
 + 	 * configure : Rebuilt . 
 + 
 + 	 * src / x86 / ffi . c : Update comment about regparm function attributes . 
 + 	 * src / x86 / sysv . S ( ffi _ closure _ SYSV ) : The SUNPRO compiler requires 
 + 	 that all function arguments be passed on the stack ( no regparm 
 + 	 support ) . 
 + 
 2013 - 01 - 08 Anthony Green < green @ moxielogic . com > 
 
 	 * configure . ac : Generate local . exp . This sets CC _ FOR _ TARGET 
 diff - - git a / configure b / configure 
 index 5876eb7 . . 4a12b96 100755 
 - - - a / configure 
 + + + b / configure 
 @ @ - 13068 , 10 + 13068 , 10 @ @ ac _ compiler _ gnu = $ ac _ cv _ c _ compiler _ gnu 
 
 if test " x $ GCC " = " xyes " ; then 
 CFLAGS = " $ CFLAGS - fexceptions " 
 - touch testsuite / local . exp 
 + touch local . exp 
 else 
 cat > local . exp < < EOF 
 - set CC _ FOR _ TARGET $ CC 
 + set CC _ FOR _ TARGET " $ CC " 
 EOF 
 fi 
 
 diff - - git a / configure . ac b / configure . ac 
 index 7ffb36c . . 13d5bc2 100644 
 - - - a / configure . ac 
 + + + b / configure . ac 
 @ @ - 40 , 10 + 40 , 10 @ @ AX _ CC _ MAXOPT 
 AX _ CFLAGS _ WARN _ ALL 
 if test " x $ GCC " = " xyes " ; then 
 CFLAGS = " $ CFLAGS - fexceptions " 
 - touch testsuite / local . exp 
 + touch local . exp 
 else 
 cat > local . exp < < EOF 
 - set CC _ FOR _ TARGET $ CC 
 + set CC _ FOR _ TARGET " $ CC " 
 EOF 
 fi 
 
 diff - - git a / src / x86 / ffi . c b / src / x86 / ffi . c 
 index 611e221 . . 3f46693 100644 
 - - - a / src / x86 / ffi . c 
 + + + b / src / x86 / ffi . c 
 @ @ - 424 , 7 + 424 , 7 @ @ void ffi _ call ( ffi _ cif * cif , void ( * fn ) ( void ) , void * rvalue , void * * avalue ) 
 / * * private members * * / 
 
 / * The following _ _ attribute _ _ ( ( regparm ( 1 ) ) ) decorations will have no effect 
 - on MSVC - standard cdecl convention applies . * / 
 + on MSVC or SUNPRO _ C - - standard conventions apply . * / 
 static void ffi _ prep _ incoming _ args _ SYSV ( char * stack , void * * ret , 
 void * * args , ffi _ cif * cif ) ; 
 void FFI _ HIDDEN ffi _ closure _ SYSV ( ffi _ closure * ) 
 diff - - git a / src / x86 / sysv . S b / src / x86 / sysv . S 
 index 69e7e8d . . 71502bb 100644 
 - - - a / src / x86 / sysv . S 
 + + + b / src / x86 / sysv . S 
 @ @ - 182 , 9 + 182 , 19 @ @ ffi _ closure _ SYSV : 
 	 leal 	 - 24 ( % ebp ) , % edx 
 	 movl 	 % edx , - 12 ( % ebp ) 	 / * resp * / 
 	 leal 	 8 ( % ebp ) , % edx 
 + # ifdef _ _ SUNPRO _ C 
 + 	 / * The SUNPRO compiler doesn ' t support GCC ' s regparm function 
 + 	 attribute , so we have to pass all three arguments to 
 + 	 ffi _ closure _ SYSV _ inner on the stack . * / 
 + 	 movl 	 % edx , 8 ( % esp ) 	 / * args = _ _ builtin _ dwarf _ cfa ( ) * / 
 + 	 leal 	 - 12 ( % ebp ) , % edx 
 + 	 movl 	 % edx , 4 ( % esp ) 	 / * & resp * / 
 + 	 movl % eax , ( % esp ) / * closure * / 
 + # else 
 	 movl 	 % edx , 4 ( % esp ) 	 / * args = _ _ builtin _ dwarf _ cfa ( ) * / 
 	 leal 	 - 12 ( % ebp ) , % edx 
 	 movl 	 % edx , ( % esp ) 	 / * & resp * / 
 + # endif 
 # if defined HAVE _ HIDDEN _ VISIBILITY _ ATTRIBUTE | | ! defined _ _ PIC _ _ 
 	 call 	 ffi _ closure _ SYSV _ inner 
 # else
