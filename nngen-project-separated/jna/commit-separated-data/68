BLEU SCORE: 0.031251907639724415

TEST MSG: Unify ACEStructure and ACE _ HEADER and return ACE _ HEADER [ ] from ACL
GENERATED MSG: Cleaned up ACCESS _ ACEStructure

TEST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8aac775 . . 0d71935 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 15 , 6 + 15 , 7 @ @ Features <nl> * [ # 797 ] ( https : / / github . com / java - native - access / jna / issues / 797 ) : Binding ` Advapi32 # EnumDependendServices ` , ` Advapi32 # EnumServicesStatusEx ` and ` Advapi32 # QueryServiceStatus ` . ` W32Service # stopService ` was modified to be more resilent when stopping service - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * Bind ` com . sun . jna . platform . win32 . Kernel32 . ExpandEnvironmentStrings ` and add helper method for it as ` Kernel32Util # expandEnvironmentStrings ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 935 ] ( https : / / github . com / java - native - access / jna / pull / 935 ) : Add RegConnectRegistry to Advapi32 mappings . - [ @ cxcorp ] ( https : / / github . com / cxcorp ) . <nl> + * [ # 947 ] ( https : / / github . com / java - native - access / jna / pull / 947 ) : Allow retrieval of ` ACEs ` from ` com . sun . jna . platform . win32 . WinNT . ACL ` even if the contained ` ACE ` is not currently supported - [ @ jrobhoward ] ( https : / / github . com / jrobhoward ) . <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> @ @ - 84 , 6 + 85 , 14 @ @ Breaking Changes <nl> was changed from ` PointerByReference ` to ` STRRET ` and matching this , <nl> the first parameter of ` com . sun . jna . platform . win32 . Shlwapi . StrRetToStr ` was <nl> changed identically . <nl> + * ` ACE _ HEADER ` replaces ` ACEStructure ` as the base class for ` ACEs ` . <nl> + ` com . sun . jna . platform . win32 . WinNT . ACL ` was modified to support ACLS , that contain <nl> + ` ACEs ` other than ` ACCESS _ ALLOWED _ ACE _ TYPE ` and ` ACCESS _ DENIED _ ACE _ TYPE ` by <nl> + widening the return type of ` getACEStructures ` to ` ACE _ HEADER [ ] ` and renaming <nl> + the method to ` getACEs ` . In <nl> + consequence ` com . sun . jna . platform . win32 . Advapi32Util # getFileSecurity ` was <nl> + changed similarly . The SID accessors ` getSidString ` and ` getSID ` were moved <nl> + from ` ACEStructure ` to ` ACCESS _ ACEStructure ` . <nl> <nl> Release 4 . 5 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> index afa5985 . . 2c4eff7 100755 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java <nl> @ @ - 72 , 6 + 72 , 7 @ @ import com . sun . jna . platform . win32 . WinDef . ULONG ; <nl> import com . sun . jna . platform . win32 . WinDef . ULONGByReference ; <nl> import com . sun . jna . platform . win32 . WinNT . ACCESS _ ACEStructure ; <nl> import com . sun . jna . platform . win32 . WinNT . ACCESS _ ALLOWED _ ACE ; <nl> + import com . sun . jna . platform . win32 . WinNT . ACE _ HEADER ; <nl> import com . sun . jna . platform . win32 . WinNT . ACL ; <nl> import com . sun . jna . platform . win32 . WinNT . EVENTLOGRECORD ; <nl> import com . sun . jna . platform . win32 . WinNT . GENERIC _ MAPPING ; <nl> @ @ - 91 , 6 + 92 , 7 @ @ import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . LongByReference ; <nl> import com . sun . jna . ptr . PointerByReference ; <nl> import com . sun . jna . win32 . W32APITypeMapper ; <nl> + import java . util . List ; <nl> <nl> / * * <nl> * Advapi32 utility API . <nl> @ @ - 2200 , 7 + 2202 , 12 @ @ public abstract class Advapi32Util { <nl> 	 	 } <nl> 	 } <nl> <nl> - 	 public static ACCESS _ ACEStructure [ ] getFileSecurity ( String fileName , <nl> + / * * <nl> + * @ param fileName path to the file <nl> + * @ param compact if true compatible ACEs are merged if possible <nl> + * @ return <nl> + * / <nl> + 	 public static ACE _ HEADER [ ] getFileSecurity ( String fileName , <nl> 	 	 	 boolean compact ) { <nl> 	 	 int infoType = WinNT . DACL _ SECURITY _ INFORMATION ; <nl> 	 	 int nLength = 1024 ; <nl> @ @ - 2231 , 29 + 2238 , 35 @ @ public abstract class Advapi32Util { <nl> <nl> 	 	 SECURITY _ DESCRIPTOR _ RELATIVE sdr = new WinNT . SECURITY _ DESCRIPTOR _ RELATIVE ( <nl> 	 	 	 	 memory ) ; <nl> - 	 	 memory . clear ( ) ; <nl> 	 	 ACL dacl = sdr . getDiscretionaryACL ( ) ; <nl> - 	 	 ACCESS _ ACEStructure [ ] aceStructures = dacl . getACEStructures ( ) ; <nl> + 	 	 ACE _ HEADER [ ] aceStructures = dacl . getACEs ( ) ; <nl> <nl> 	 	 if ( compact ) { <nl> + List < ACE _ HEADER > result = new ArrayList < ACE _ HEADER > ( ) ; <nl> 	 	 	 Map < String , ACCESS _ ACEStructure > aceMap = new HashMap < String , ACCESS _ ACEStructure > ( ) ; <nl> - 	 	 	 for ( ACCESS _ ACEStructure aceStructure : aceStructures ) { <nl> - 	 	 	 	 boolean inherted = ( ( aceStructure . AceFlags & WinNT . VALID _ INHERIT _ FLAGS ) ! = 0 ) ; <nl> - 	 	 	 	 String key = aceStructure . getSidString ( ) + " / " + inherted + " / " <nl> - 	 	 	 	 	 	 + aceStructure . getClass ( ) . getName ( ) ; <nl> - 	 	 	 	 ACCESS _ ACEStructure aceStructure2 = aceMap . get ( key ) ; <nl> - 	 	 	 	 if ( aceStructure2 ! = null ) { <nl> - 	 	 	 	 	 int accessMask = aceStructure2 . Mask ; <nl> - 	 	 	 	 	 accessMask = accessMask | aceStructure . Mask ; <nl> - 	 	 	 	 	 aceStructure2 . Mask = accessMask ; <nl> - 	 	 	 	 } else { <nl> - 	 	 	 	 	 aceMap . put ( key , aceStructure ) ; <nl> - 	 	 	 	 } <nl> + 	 	 	 for ( ACE _ HEADER aceStructure : aceStructures ) { <nl> + if ( aceStructure instanceof ACCESS _ ACEStructure ) { <nl> + ACCESS _ ACEStructure accessACEStructure = ( ACCESS _ ACEStructure ) aceStructure ; <nl> + boolean inherted = ( ( aceStructure . AceFlags & WinNT . VALID _ INHERIT _ FLAGS ) ! = 0 ) ; <nl> + String key = accessACEStructure . getSidString ( ) + " / " + inherted + " / " <nl> + + aceStructure . getClass ( ) . getName ( ) ; <nl> + ACCESS _ ACEStructure aceStructure2 = aceMap . get ( key ) ; <nl> + if ( aceStructure2 ! = null ) { <nl> + int accessMask = aceStructure2 . Mask ; <nl> + accessMask = accessMask | accessACEStructure . Mask ; <nl> + aceStructure2 . Mask = accessMask ; <nl> + } else { <nl> + aceMap . put ( key , accessACEStructure ) ; <nl> + result . add ( aceStructure2 ) ; <nl> + } <nl> + } else { <nl> + result . add ( aceStructure ) ; <nl> + } <nl> 	 	 	 } <nl> - 	 	 	 return aceMap . values ( ) . toArray ( <nl> - 	 	 	 	 	 new ACCESS _ ACEStructure [ aceMap . size ( ) ] ) ; <nl> + 	 	 	 return result . toArray ( new ACE _ HEADER [ result . size ( ) ] ) ; <nl> 	 	 } <nl> - 	 	 return aceStructures ; <nl> + <nl> + return aceStructures ; <nl> 	 } <nl> <nl> public static enum AccessCheckPermission { <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> index fbfb929 . . 658240e 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java <nl> @ @ - 2568 , 40 + 2568 , 36 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> read ( ) ; <nl> } <nl> <nl> - public ACCESS _ ACEStructure [ ] getACEStructures ( ) { <nl> - return getACEStructures ( false ) ; <nl> - } <nl> - <nl> - public ACCESS _ ACEStructure [ ] getACEStructures ( boolean tolerateUnknownAceTypes ) { <nl> - final List < ACCESS _ ACEStructure > ACEs = new ArrayList < ACCESS _ ACEStructure > ( AceCount ) ; <nl> + / * * <nl> + * Extract the contained ACEs from the ACL . <nl> + * <nl> + * < p > ACE types as decoded to their native JNA counterparts . ACE types , <nl> + * that are currently unsupported by JNA are returned as <nl> + * { @ link WinNT . ACE _ HEADER } objects . < / p > <nl> + * <nl> + * @ return array holding the contained ACEs <nl> + * / <nl> + public ACE _ HEADER [ ] getACEs ( ) { <nl> + ACE _ HEADER [ ] ACEs = new ACE _ HEADER [ AceCount ] ; <nl> final Pointer pointer = this . getPointer ( ) ; <nl> int offset = size ( ) ; <nl> for ( int i = 0 ; i < AceCount ; i + + ) { <nl> final Pointer share = pointer . share ( offset ) ; <nl> final byte aceType = share . getByte ( 0 ) ; / / ACE _ HEADER . AceType <nl> - final short aceSize ; <nl> switch ( aceType ) { <nl> case ACCESS _ ALLOWED _ ACE _ TYPE : <nl> - final ACCESS _ ALLOWED _ ACE allowedAce = new ACCESS _ ALLOWED _ ACE ( share ) ; <nl> - aceSize = allowedAce . AceSize ; <nl> - ACEs . add ( allowedAce ) ; <nl> + ACEs [ i ] = new ACCESS _ ALLOWED _ ACE ( share ) ; <nl> break ; <nl> case ACCESS _ DENIED _ ACE _ TYPE : <nl> - final ACCESS _ DENIED _ ACE deniedAce = new ACCESS _ DENIED _ ACE ( share ) ; <nl> - aceSize = deniedAce . AceSize ; <nl> - ACEs . add ( deniedAce ) ; <nl> + ACEs [ i ] = new ACCESS _ DENIED _ ACE ( share ) ; <nl> break ; <nl> default : <nl> - if ( ! tolerateUnknownAceTypes ) { <nl> - throw new IllegalStateException ( " Unknown ACE type " + aceType ) ; <nl> - } <nl> - final ACE _ HEADER aceHeader = new ACE _ HEADER ( share ) ; <nl> - aceSize = aceHeader . AceSize ; <nl> + ACEs [ i ] = new ACE _ HEADER ( share ) ; <nl> break ; <nl> } <nl> - offset + = aceSize ; <nl> + offset + = ACEs [ i ] . AceSize ; <nl> } <nl> - return ACEs . toArray ( new ACCESS _ ACEStructure [ ACEs . size ( ) ] ) ; <nl> + return ACEs ; <nl> } <nl> <nl> @ Override <nl> @ @ - 2712 , 63 + 2708 , 41 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> } <nl> } <nl> <nl> - public static abstract class ACEStructure extends Structure { <nl> + public static class ACE _ HEADER extends Structure { <nl> public static final List < String > FIELDS = createFieldsOrder ( " AceType " , " AceFlags " , " AceSize " ) ; <nl> <nl> public byte AceType ; <nl> public byte AceFlags ; <nl> public short AceSize ; <nl> <nl> - PSID psid ; <nl> - <nl> - public ACEStructure ( ) { <nl> + public ACE _ HEADER ( ) { <nl> super ( ) ; <nl> } <nl> <nl> - public ACEStructure ( Pointer p ) { <nl> + public ACE _ HEADER ( Pointer p ) { <nl> super ( p ) ; <nl> + read ( ) ; <nl> } <nl> <nl> - public ACEStructure ( byte AceType , byte AceFlags , short AceSize , PSID psid ) { <nl> + public ACE _ HEADER ( byte AceType , byte AceFlags , short AceSize ) { <nl> super ( ) ; <nl> this . AceType = AceType ; <nl> this . AceFlags = AceFlags ; <nl> this . AceSize = AceSize ; <nl> - this . psid = psid ; <nl> write ( ) ; <nl> } <nl> <nl> - public String getSidString ( ) { <nl> - return Advapi32Util . convertSidToStringSid ( psid ) ; <nl> - } <nl> - <nl> - public PSID getSID ( ) { <nl> - return psid ; <nl> - } <nl> - <nl> @ Override <nl> protected List < String > getFieldOrder ( ) { <nl> return FIELDS ; <nl> } <nl> } <nl> - <nl> - / * ACE header * / <nl> - public static class ACE _ HEADER extends ACEStructure { <nl> - public ACE _ HEADER ( ) { <nl> - super ( ) ; <nl> - } <nl> - <nl> - public ACE _ HEADER ( Pointer p ) { <nl> - super ( p ) ; <nl> - read ( ) ; <nl> - } <nl> - } <nl> - <nl> + <nl> / * * <nl> * ACCESS _ ALLOWED _ ACE and ACCESS _ DENIED _ ACE have the same structure layout <nl> * / <nl> - public static abstract class ACCESS _ ACEStructure extends ACEStructure { <nl> - public static final List < String > FIELDS = createFieldsOrder ( ACEStructure . FIELDS , " Mask " , " SidStart " ) ; <nl> + public static abstract class ACCESS _ ACEStructure extends ACE _ HEADER { <nl> + public static final List < String > FIELDS = createFieldsOrder ( ACE _ HEADER . FIELDS , " Mask " , " SidStart " ) ; <nl> <nl> public int Mask ; <nl> / * * <nl> @ @ - 2777 , 6 + 2751 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> * / <nl> public byte [ ] SidStart = new byte [ 4 ] ; <nl> <nl> + PSID psid ; <nl> + <nl> public ACCESS _ ACEStructure ( ) { <nl> super ( ) ; <nl> } <nl> @ @ - 2799 , 6 + 2775 , 14 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { <nl> read ( ) ; <nl> } <nl> <nl> + public String getSidString ( ) { <nl> + return Advapi32Util . convertSidToStringSid ( psid ) ; <nl> + } <nl> + <nl> + public PSID getSID ( ) { <nl> + return psid ; <nl> + } <nl> + <nl> / * * <nl> * Write override due to psid not being a managed field <nl> * /
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 8aac775 . . 0d71935 100644 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 15 , 6 + 15 , 7 @ @ Features 
 * [ # 797 ] ( https : / / github . com / java - native - access / jna / issues / 797 ) : Binding ` Advapi32 # EnumDependendServices ` , ` Advapi32 # EnumServicesStatusEx ` and ` Advapi32 # QueryServiceStatus ` . ` W32Service # stopService ` was modified to be more resilent when stopping service - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 * Bind ` com . sun . jna . platform . win32 . Kernel32 . ExpandEnvironmentStrings ` and add helper method for it as ` Kernel32Util # expandEnvironmentStrings ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 * [ # 935 ] ( https : / / github . com / java - native - access / jna / pull / 935 ) : Add RegConnectRegistry to Advapi32 mappings . - [ @ cxcorp ] ( https : / / github . com / cxcorp ) . 
 + * [ # 947 ] ( https : / / github . com / java - native - access / jna / pull / 947 ) : Allow retrieval of ` ACEs ` from ` com . sun . jna . platform . win32 . WinNT . ACL ` even if the contained ` ACE ` is not currently supported - [ @ jrobhoward ] ( https : / / github . com / jrobhoward ) . 
 
 Bug Fixes 
 - - - - - - - - - 
 @ @ - 84 , 6 + 85 , 14 @ @ Breaking Changes 
 was changed from ` PointerByReference ` to ` STRRET ` and matching this , 
 the first parameter of ` com . sun . jna . platform . win32 . Shlwapi . StrRetToStr ` was 
 changed identically . 
 + * ` ACE _ HEADER ` replaces ` ACEStructure ` as the base class for ` ACEs ` . 
 + ` com . sun . jna . platform . win32 . WinNT . ACL ` was modified to support ACLS , that contain 
 + ` ACEs ` other than ` ACCESS _ ALLOWED _ ACE _ TYPE ` and ` ACCESS _ DENIED _ ACE _ TYPE ` by 
 + widening the return type of ` getACEStructures ` to ` ACE _ HEADER [ ] ` and renaming 
 + the method to ` getACEs ` . In 
 + consequence ` com . sun . jna . platform . win32 . Advapi32Util # getFileSecurity ` was 
 + changed similarly . The SID accessors ` getSidString ` and ` getSID ` were moved 
 + from ` ACEStructure ` to ` ACCESS _ ACEStructure ` . 
 
 Release 4 . 5 . 0 
 = = = = = = = = = = = = = 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java 
 index afa5985 . . 2c4eff7 100755 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Advapi32Util . java 
 @ @ - 72 , 6 + 72 , 7 @ @ import com . sun . jna . platform . win32 . WinDef . ULONG ; 
 import com . sun . jna . platform . win32 . WinDef . ULONGByReference ; 
 import com . sun . jna . platform . win32 . WinNT . ACCESS _ ACEStructure ; 
 import com . sun . jna . platform . win32 . WinNT . ACCESS _ ALLOWED _ ACE ; 
 + import com . sun . jna . platform . win32 . WinNT . ACE _ HEADER ; 
 import com . sun . jna . platform . win32 . WinNT . ACL ; 
 import com . sun . jna . platform . win32 . WinNT . EVENTLOGRECORD ; 
 import com . sun . jna . platform . win32 . WinNT . GENERIC _ MAPPING ; 
 @ @ - 91 , 6 + 92 , 7 @ @ import com . sun . jna . ptr . IntByReference ; 
 import com . sun . jna . ptr . LongByReference ; 
 import com . sun . jna . ptr . PointerByReference ; 
 import com . sun . jna . win32 . W32APITypeMapper ; 
 + import java . util . List ; 
 
 / * * 
 * Advapi32 utility API . 
 @ @ - 2200 , 7 + 2202 , 12 @ @ public abstract class Advapi32Util { 
 	 	 } 
 	 } 
 
 - 	 public static ACCESS _ ACEStructure [ ] getFileSecurity ( String fileName , 
 + / * * 
 + * @ param fileName path to the file 
 + * @ param compact if true compatible ACEs are merged if possible 
 + * @ return 
 + * / 
 + 	 public static ACE _ HEADER [ ] getFileSecurity ( String fileName , 
 	 	 	 boolean compact ) { 
 	 	 int infoType = WinNT . DACL _ SECURITY _ INFORMATION ; 
 	 	 int nLength = 1024 ; 
 @ @ - 2231 , 29 + 2238 , 35 @ @ public abstract class Advapi32Util { 
 
 	 	 SECURITY _ DESCRIPTOR _ RELATIVE sdr = new WinNT . SECURITY _ DESCRIPTOR _ RELATIVE ( 
 	 	 	 	 memory ) ; 
 - 	 	 memory . clear ( ) ; 
 	 	 ACL dacl = sdr . getDiscretionaryACL ( ) ; 
 - 	 	 ACCESS _ ACEStructure [ ] aceStructures = dacl . getACEStructures ( ) ; 
 + 	 	 ACE _ HEADER [ ] aceStructures = dacl . getACEs ( ) ; 
 
 	 	 if ( compact ) { 
 + List < ACE _ HEADER > result = new ArrayList < ACE _ HEADER > ( ) ; 
 	 	 	 Map < String , ACCESS _ ACEStructure > aceMap = new HashMap < String , ACCESS _ ACEStructure > ( ) ; 
 - 	 	 	 for ( ACCESS _ ACEStructure aceStructure : aceStructures ) { 
 - 	 	 	 	 boolean inherted = ( ( aceStructure . AceFlags & WinNT . VALID _ INHERIT _ FLAGS ) ! = 0 ) ; 
 - 	 	 	 	 String key = aceStructure . getSidString ( ) + " / " + inherted + " / " 
 - 	 	 	 	 	 	 + aceStructure . getClass ( ) . getName ( ) ; 
 - 	 	 	 	 ACCESS _ ACEStructure aceStructure2 = aceMap . get ( key ) ; 
 - 	 	 	 	 if ( aceStructure2 ! = null ) { 
 - 	 	 	 	 	 int accessMask = aceStructure2 . Mask ; 
 - 	 	 	 	 	 accessMask = accessMask | aceStructure . Mask ; 
 - 	 	 	 	 	 aceStructure2 . Mask = accessMask ; 
 - 	 	 	 	 } else { 
 - 	 	 	 	 	 aceMap . put ( key , aceStructure ) ; 
 - 	 	 	 	 } 
 + 	 	 	 for ( ACE _ HEADER aceStructure : aceStructures ) { 
 + if ( aceStructure instanceof ACCESS _ ACEStructure ) { 
 + ACCESS _ ACEStructure accessACEStructure = ( ACCESS _ ACEStructure ) aceStructure ; 
 + boolean inherted = ( ( aceStructure . AceFlags & WinNT . VALID _ INHERIT _ FLAGS ) ! = 0 ) ; 
 + String key = accessACEStructure . getSidString ( ) + " / " + inherted + " / " 
 + + aceStructure . getClass ( ) . getName ( ) ; 
 + ACCESS _ ACEStructure aceStructure2 = aceMap . get ( key ) ; 
 + if ( aceStructure2 ! = null ) { 
 + int accessMask = aceStructure2 . Mask ; 
 + accessMask = accessMask | accessACEStructure . Mask ; 
 + aceStructure2 . Mask = accessMask ; 
 + } else { 
 + aceMap . put ( key , accessACEStructure ) ; 
 + result . add ( aceStructure2 ) ; 
 + } 
 + } else { 
 + result . add ( aceStructure ) ; 
 + } 
 	 	 	 } 
 - 	 	 	 return aceMap . values ( ) . toArray ( 
 - 	 	 	 	 	 new ACCESS _ ACEStructure [ aceMap . size ( ) ] ) ; 
 + 	 	 	 return result . toArray ( new ACE _ HEADER [ result . size ( ) ] ) ; 
 	 	 } 
 - 	 	 return aceStructures ; 
 + 
 + return aceStructures ; 
 	 } 
 
 public static enum AccessCheckPermission { 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 index fbfb929 . . 658240e 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinNT . java 
 @ @ - 2568 , 40 + 2568 , 36 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { 
 read ( ) ; 
 } 
 
 - public ACCESS _ ACEStructure [ ] getACEStructures ( ) { 
 - return getACEStructures ( false ) ; 
 - } 
 - 
 - public ACCESS _ ACEStructure [ ] getACEStructures ( boolean tolerateUnknownAceTypes ) { 
 - final List < ACCESS _ ACEStructure > ACEs = new ArrayList < ACCESS _ ACEStructure > ( AceCount ) ; 
 + / * * 
 + * Extract the contained ACEs from the ACL . 
 + * 
 + * < p > ACE types as decoded to their native JNA counterparts . ACE types , 
 + * that are currently unsupported by JNA are returned as 
 + * { @ link WinNT . ACE _ HEADER } objects . < / p > 
 + * 
 + * @ return array holding the contained ACEs 
 + * / 
 + public ACE _ HEADER [ ] getACEs ( ) { 
 + ACE _ HEADER [ ] ACEs = new ACE _ HEADER [ AceCount ] ; 
 final Pointer pointer = this . getPointer ( ) ; 
 int offset = size ( ) ; 
 for ( int i = 0 ; i < AceCount ; i + + ) { 
 final Pointer share = pointer . share ( offset ) ; 
 final byte aceType = share . getByte ( 0 ) ; / / ACE _ HEADER . AceType 
 - final short aceSize ; 
 switch ( aceType ) { 
 case ACCESS _ ALLOWED _ ACE _ TYPE : 
 - final ACCESS _ ALLOWED _ ACE allowedAce = new ACCESS _ ALLOWED _ ACE ( share ) ; 
 - aceSize = allowedAce . AceSize ; 
 - ACEs . add ( allowedAce ) ; 
 + ACEs [ i ] = new ACCESS _ ALLOWED _ ACE ( share ) ; 
 break ; 
 case ACCESS _ DENIED _ ACE _ TYPE : 
 - final ACCESS _ DENIED _ ACE deniedAce = new ACCESS _ DENIED _ ACE ( share ) ; 
 - aceSize = deniedAce . AceSize ; 
 - ACEs . add ( deniedAce ) ; 
 + ACEs [ i ] = new ACCESS _ DENIED _ ACE ( share ) ; 
 break ; 
 default : 
 - if ( ! tolerateUnknownAceTypes ) { 
 - throw new IllegalStateException ( " Unknown ACE type " + aceType ) ; 
 - } 
 - final ACE _ HEADER aceHeader = new ACE _ HEADER ( share ) ; 
 - aceSize = aceHeader . AceSize ; 
 + ACEs [ i ] = new ACE _ HEADER ( share ) ; 
 break ; 
 } 
 - offset + = aceSize ; 
 + offset + = ACEs [ i ] . AceSize ; 
 } 
 - return ACEs . toArray ( new ACCESS _ ACEStructure [ ACEs . size ( ) ] ) ; 
 + return ACEs ; 
 } 
 
 @ Override 
 @ @ - 2712 , 63 + 2708 , 41 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { 
 } 
 } 
 
 - public static abstract class ACEStructure extends Structure { 
 + public static class ACE _ HEADER extends Structure { 
 public static final List < String > FIELDS = createFieldsOrder ( " AceType " , " AceFlags " , " AceSize " ) ; 
 
 public byte AceType ; 
 public byte AceFlags ; 
 public short AceSize ; 
 
 - PSID psid ; 
 - 
 - public ACEStructure ( ) { 
 + public ACE _ HEADER ( ) { 
 super ( ) ; 
 } 
 
 - public ACEStructure ( Pointer p ) { 
 + public ACE _ HEADER ( Pointer p ) { 
 super ( p ) ; 
 + read ( ) ; 
 } 
 
 - public ACEStructure ( byte AceType , byte AceFlags , short AceSize , PSID psid ) { 
 + public ACE _ HEADER ( byte AceType , byte AceFlags , short AceSize ) { 
 super ( ) ; 
 this . AceType = AceType ; 
 this . AceFlags = AceFlags ; 
 this . AceSize = AceSize ; 
 - this . psid = psid ; 
 write ( ) ; 
 } 
 
 - public String getSidString ( ) { 
 - return Advapi32Util . convertSidToStringSid ( psid ) ; 
 - } 
 - 
 - public PSID getSID ( ) { 
 - return psid ; 
 - } 
 - 
 @ Override 
 protected List < String > getFieldOrder ( ) { 
 return FIELDS ; 
 } 
 } 
 - 
 - / * ACE header * / 
 - public static class ACE _ HEADER extends ACEStructure { 
 - public ACE _ HEADER ( ) { 
 - super ( ) ; 
 - } 
 - 
 - public ACE _ HEADER ( Pointer p ) { 
 - super ( p ) ; 
 - read ( ) ; 
 - } 
 - } 
 - 
 + 
 / * * 
 * ACCESS _ ALLOWED _ ACE and ACCESS _ DENIED _ ACE have the same structure layout 
 * / 
 - public static abstract class ACCESS _ ACEStructure extends ACEStructure { 
 - public static final List < String > FIELDS = createFieldsOrder ( ACEStructure . FIELDS , " Mask " , " SidStart " ) ; 
 + public static abstract class ACCESS _ ACEStructure extends ACE _ HEADER { 
 + public static final List < String > FIELDS = createFieldsOrder ( ACE _ HEADER . FIELDS , " Mask " , " SidStart " ) ; 
 
 public int Mask ; 
 / * * 
 @ @ - 2777 , 6 + 2751 , 8 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { 
 * / 
 public byte [ ] SidStart = new byte [ 4 ] ; 
 
 + PSID psid ; 
 + 
 public ACCESS _ ACEStructure ( ) { 
 super ( ) ; 
 } 
 @ @ - 2799 , 6 + 2775 , 14 @ @ public interface WinNT extends WinError , WinDef , WinBase , BaseTSD { 
 read ( ) ; 
 } 
 
 + public String getSidString ( ) { 
 + return Advapi32Util . convertSidToStringSid ( psid ) ; 
 + } 
 + 
 + public PSID getSID ( ) { 
 + return psid ; 
 + } 
 + 
 / * * 
 * Write override due to psid not being a managed field 
 * /

NEAREST DIFF:
ELIMINATEDSENTENCE
