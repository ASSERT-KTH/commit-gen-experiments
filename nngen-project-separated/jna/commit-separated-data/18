BLEU SCORE: 0.020980574531482755

TEST MSG: [ GITHUB - 1044 ] Invalid field order on XResizeRequestEvent
GENERATED MSG: testToScanForGetFieldOrderIssues

TEST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 9b978ba . . d85df89 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 16 , 6 + 16 , 7 @ @ Bug Fixes <nl> * [ # 384 ] ( https : / / github . com / java - native - access / jna / issues / 384 ) : Android only supports loading libraries through the JVM ` System # loadLibrary ` mechanism , defaulting ` jna . nosys ` to ` true ` disabled that code path - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 1041 ] ( https : / / github . com / java - native - access / jna / pull / 1041 ) : Avoid IllegalArgumentException when reading xattrs with zero length - [ @ jrobhoward ] ( https : / / github . com / jrobhoward ) . <nl> * [ # 1042 ] ( https : / / github . com / java - native - access / jna / issues / 1042 ) : ` com . sun . jna . platform . WindowUtils . W32WindowUtils . getProcessFilePath ( HWND ) ` does not close process handle - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 1044 ] ( https : / / github . com / java - native - access / jna / issues / 1044 ) : ` com . sun . jna . platform . WindowUtils . W32WindowUtils . getProcessFilePath ( HWND ) ` does not close process handle - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 5 . 1 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index 0761e3e . . e489986 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 218 , 8 + 218 , 7 @ @ com . sun . jna . platform . wince ; version = $ { osgi . version } <nl> < batchtest todir = " $ { results . junit } " > <nl> < fileset dir = " $ { test . src . dir } " excludes = " $ { tests . exclude - patterns } " > <nl> < ! - - Until StructureFieldOrderTest gets fixed up a little - - > <nl> - < exclude name = " * * / StructureFieldOrderTest . java " / > <nl> - < exclude name = " com / sun / jna / platform / AbstractWin32TestSupport . java " / > <nl> + < include name = " com / sun / jna / platform / * Test . java " / > <nl> < include name = " $ { tests . platform . mac } " / > <nl> < include name = " $ { tests . platform . windows } " / > <nl> < include name = " $ { tests . platform . linux } " / > <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> index 6c20edf . . 43123cd 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java <nl> @ @ - 1752 , 7 + 1752 , 7 @ @ public interface X11 extends Library { <nl> public int x , y ; <nl> } <nl> <nl> - @ FieldOrder ( { " type " , " serial " , " send _ event " , " display " , " parent " , " window " , " x " , " y " , " width " , " height " , " border _ width " , " above " , " detail " , " value _ mask " } ) <nl> + @ FieldOrder ( { " type " , " serial " , " send _ event " , " display " , " window " , " width " , " height " } ) <nl> class XResizeRequestEvent extends Structure { <nl> public int type ; <nl> public NativeLong serial ; / / # of last request processed by server <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java b / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java <nl> deleted file mode 100644 <nl> index ebdd8b2 . . 0000000 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java <nl> + + + / dev / null <nl> @ @ - 1 , 76 + 0 , 0 @ @ <nl> - / * Copyright ( c ) 2007 - 2008 Timothy Wall , All Rights Reserved <nl> - * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation ; either <nl> - * version 2 . 1 of the License , or ( at your option ) any later version . <nl> - * <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> - * / <nl> - package com . sun . jna . platform ; <nl> - <nl> - <nl> - import com . sun . jna . Platform ; <nl> - import com . sun . jna . platform . unix . X11 ; <nl> - import com . sun . jna . platform . win32 . DBT ; <nl> - import junit . framework . TestCase ; <nl> - <nl> - import com . sun . jna . StructureFieldOrderInspector ; <nl> - <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - <nl> - public class StructureFieldOrderTest extends TestCase { <nl> - <nl> - private String origPropJNANoSys ; <nl> - <nl> - protected void setUp ( ) { <nl> - origPropJNANoSys = System . getProperty ( " jna . nosys " ) ; <nl> - System . setProperty ( " jna . nosys " , " true " ) ; / / would be set by ant script , set here for IDE usage <nl> - } <nl> - <nl> - protected void tearDown ( ) { <nl> - if ( origPropJNANoSys = = null ) { <nl> - System . getProperties ( ) . remove ( " jna . nosys " ) ; <nl> - } else { <nl> - System . setProperty ( " jna . nosys " , origPropJNANoSys ) ; <nl> - } <nl> - } <nl> - <nl> - <nl> - public void testMethodGetFieldOrder ( ) { <nl> - final List < String > ignoreConstructorError = new ArrayList < String > ( ) ; <nl> - <nl> - if ( Platform . isWindows ( ) ) { <nl> - ignoreConstructorError . add ( X11 . class . getName ( ) + " $ " ) ; <nl> - } else { <nl> - ignoreConstructorError . add ( com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 1 . class . getName ( ) ) ; <nl> - ignoreConstructorError . add ( com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 4 . class . getName ( ) ) ; <nl> - ignoreConstructorError . add ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVICE _ INTERFACE _ DATA . class . getName ( ) ) ; <nl> - ignoreConstructorError . add ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVINFO _ DATA . class . getName ( ) ) ; <nl> - } <nl> - <nl> - ignoreConstructorError . add ( DBT . DEV _ BROADCAST _ HANDLE . class . getName ( ) ) ; / / manually validated by wolftobias <nl> - ignoreConstructorError . add ( DBT . DEV _ BROADCAST _ PORT . class . getName ( ) ) ; / / manually validated by wolftobias <nl> - <nl> - StructureFieldOrderInspector . batchCheckStructureGetFieldOrder ( FileUtils . class , ignoreConstructorError ) ; <nl> - } <nl> - <nl> - / / test below is helpful when investigating failure cause of a specific Structure class , it shows full causes and traces . <nl> - / * <nl> - public void testMethodGetFieldOrderSingleClass ( ) { <nl> - final List < String > ignoreConstructorError = new ArrayList < String > ( ) ; <nl> - <nl> - if ( Platform . isWindows ( ) ) { <nl> - ignoreConstructorError . add ( X11 . class . getName ( ) + " $ " ) ; <nl> - } <nl> - <nl> - StructureFieldOrderInspector . checkMethodGetFieldOrder ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVICE _ INTERFACE _ DATA . class , ignoreConstructorError ) ; <nl> - } <nl> - / / * / <nl> - <nl> - <nl> - } <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java b / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> index 9b36717 . . 7981573 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ <nl> * / <nl> package com . sun . jna . platform . unix ; <nl> <nl> + import com . sun . jna . StructureFieldOrderInspector ; <nl> import java . awt . GraphicsEnvironment ; <nl> <nl> import com . sun . jna . ptr . PointerByReference ; <nl> @ @ - 104 , 6 + 105 , 10 @ @ public class X11Test extends TestCase { <nl> Assert . assertArrayEquals ( " Sent protocols were not equal to returned procols for XGetWMProtocols " , sentAtoms , receivedAtoms ) ; <nl> } <nl> <nl> + public void testStructureFieldOrder ( ) { <nl> + StructureFieldOrderInspector . batchCheckStructureGetFieldOrder ( X11 . class , null , true ) ; <nl> + } <nl> + <nl> public static void main ( java . lang . String [ ] argList ) { <nl> junit . textui . TestRunner . run ( X11Test . class ) ; <nl> } <nl> diff - - git a / test / com / sun / jna / StructureFieldOrderInspector . java b / test / com / sun / jna / StructureFieldOrderInspector . java <nl> index 4c4566f . . 463ac7c 100644 <nl> - - - a / test / com / sun / jna / StructureFieldOrderInspector . java <nl> + + + b / test / com / sun / jna / StructureFieldOrderInspector . java <nl> @ @ - 30 , 6 + 30 , 8 @ @ import org . reflections . util . ConfigurationBuilder ; <nl> <nl> import java . lang . reflect . * ; <nl> import java . util . ArrayList ; <nl> + import java . util . HashSet ; <nl> + import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Set ; <nl> <nl> @ @ - 56 , 7 + 58 , 21 @ @ public final class StructureFieldOrderInspector { <nl> * / <nl> public static void batchCheckStructureGetFieldOrder ( final Class < ? > classDeclaredInSourceTreeToSearch , <nl> final List < String > ignoreConstructorError ) { <nl> - final Set < Class < ? extends Structure > > classes = StructureFieldOrderInspector . findSubTypesOfStructure ( classDeclaredInSourceTreeToSearch ) ; <nl> + batchCheckStructureGetFieldOrder ( classDeclaredInSourceTreeToSearch , ignoreConstructorError , false ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Search for Structure sub types in the source tree of the given class , and validate the getFieldOrder ( ) method , <nl> + * and collects all errors into one exception . <nl> + * <nl> + * @ param classDeclaredInSourceTreeToSearch a class who ' s source tree will be searched for Structure sub types . <nl> + * @ param ignoreConstructorError list of classname prefixes for which to ignore construction errors . <nl> + * @ param onlyInnerClasses limit scan to inner classes of the supplied class <nl> + * / <nl> + public static void batchCheckStructureGetFieldOrder ( final Class < ? > classDeclaredInSourceTreeToSearch , <nl> + final List < String > ignoreConstructorError , <nl> + final boolean onlyInnerClasses ) { <nl> + final Set < Class < ? extends Structure > > classes = StructureFieldOrderInspector . findSubTypesOfStructure ( classDeclaredInSourceTreeToSearch , onlyInnerClasses ) ; <nl> <nl> final List < Throwable > problems = new ArrayList < Throwable > ( ) ; <nl> <nl> @ @ - 96 , 7 + 112 , 7 @ @ public final class StructureFieldOrderInspector { <nl> / * * <nl> * Find all classes that extend { @ link Structure } . <nl> * / <nl> - public static Set < Class < ? extends Structure > > findSubTypesOfStructure ( final Class < ? > classDeclaredInSourceTreeToSearch ) { <nl> + public static Set < Class < ? extends Structure > > findSubTypesOfStructure ( final Class < ? > classDeclaredInSourceTreeToSearch , boolean onlyInnerClasses ) { <nl> <nl> / / use : http : / / code . google . com / p / reflections / <nl> <nl> @ @ - 105 , 9 + 121 , 24 @ @ public final class StructureFieldOrderInspector { <nl> . setUrls ( ClasspathHelper . forClass ( classDeclaredInSourceTreeToSearch ) ) <nl> ) ; <nl> <nl> - return reflections . getSubTypesOf ( Structure . class ) ; <nl> + Set < Class < ? extends Structure > > types = new HashSet < Class < ? extends Structure > > ( reflections . getSubTypesOf ( Structure . class ) ) ; <nl> + if ( onlyInnerClasses ) { <nl> + Iterator < Class < ? extends Structure > > it = types . iterator ( ) ; <nl> + while ( it . hasNext ( ) ) { <nl> + if ( ! ( it . next ( ) . getEnclosingClass ( ) = = classDeclaredInSourceTreeToSearch ) ) { <nl> + it . remove ( ) ; <nl> + } <nl> + } <nl> + } <nl> + return types ; <nl> } <nl> <nl> + / * * <nl> + * Find all classes that extend { @ link Structure } . <nl> + * / <nl> + public static Set < Class < ? extends Structure > > findSubTypesOfStructure ( final Class < ? > classDeclaredInSourceTreeToSearch ) { <nl> + return findSubTypesOfStructure ( classDeclaredInSourceTreeToSearch , false ) ; <nl> + } <nl> <nl> public static void checkMethodGetFieldOrder ( final Class < ? extends Structure > structureSubType , <nl> final List < String > ignoreConstructorError ) { <nl> @ @ - 119 , 9 + 150 , 6 @ @ public final class StructureFieldOrderInspector { <nl> return ; <nl> } <nl> <nl> - final Method methodGetFieldOrder = getMethodGetFieldOrder ( structureSubType ) ; <nl> - <nl> - <nl> if ( Modifier . isAbstract ( structureSubType . getModifiers ( ) ) ) { <nl> / / do not try to construct abstract Structure sub types <nl> return ; <nl> @ @ - 161 , 58 + 189 , 27 @ @ public final class StructureFieldOrderInspector { <nl> throw new RuntimeException ( " Could not instantiate Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> } <nl> <nl> - if ( ! methodGetFieldOrder . isAccessible ( ) ) { <nl> - methodGetFieldOrder . setAccessible ( true ) ; <nl> - } <nl> - final List < ? > methodCallFieldList ; <nl> - try { <nl> - methodCallFieldList = ( List < ? > ) methodGetFieldOrder . invoke ( structure ) ; <nl> - } catch ( IllegalAccessException e ) { <nl> - throw new RuntimeException ( " Could not invoke getFieldOrder ( ) on Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> - } catch ( InvocationTargetException e ) { <nl> - throw new RuntimeException ( " Could not invoke getFieldOrder ( ) on Structure sub type : " + structureSubType . getName ( ) , e ) ; <nl> - } <nl> + final List < String > methodCallFieldOrder = structure . getFieldOrder ( ) ; <nl> <nl> - final Field [ ] actualFields = structureSubType . getFields ( ) ; / / include fields from super classes <nl> - final List < String > actualFieldNames = new ArrayList < String > ( actualFields . length ) ; <nl> + final List < Field > actualFields = structure . getFieldList ( ) ; <nl> + final List < String > actualFieldNames = new ArrayList < String > ( actualFields . size ( ) ) ; <nl> for ( final Field field : actualFields ) { <nl> / / ignore static fields <nl> if ( ! Modifier . isStatic ( field . getModifiers ( ) ) ) { <nl> final String actualFieldName = field . getName ( ) ; <nl> - if ( ! methodCallFieldList . contains ( actualFieldName ) ) { <nl> - throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldList <nl> + if ( ! methodCallFieldOrder . contains ( actualFieldName ) ) { <nl> + throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldOrder <nl> + " ] does not include declared field : " + actualFieldName ) ; <nl> } <nl> actualFieldNames . add ( actualFieldName ) ; <nl> } <nl> } <nl> <nl> - for ( final Object methodCallField : methodCallFieldList ) { <nl> + for ( final String methodCallField : methodCallFieldOrder ) { <nl> if ( ! actualFieldNames . contains ( methodCallField ) ) { <nl> - throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldList <nl> + throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldOrder <nl> + " ] includes undeclared field : " + methodCallField ) ; <nl> } <nl> } <nl> } <nl> - <nl> - / * * <nl> - * Find the getFieldOrder ( ) method in the given class , or any of it ' s parents . <nl> - * @ param structureSubType a structure sub type <nl> - * @ return the getFieldOrder ( ) method found in the given class , or any of it ' s parents . <nl> - * / <nl> - private static Method getMethodGetFieldOrder ( Class < ? extends Structure > structureSubType ) { <nl> - final Method methodGetFieldOrder ; <nl> - try { <nl> - methodGetFieldOrder = structureSubType . getDeclaredMethod ( " getFieldOrder " , new Class [ ] { } ) ; <nl> - } catch ( NoSuchMethodException e ) { <nl> - if ( structureSubType . getSuperclass ( ) ! = null ) { <nl> - / / look for method in parent <nl> - return getMethodGetFieldOrder ( ( Class < ? extends Structure > ) structureSubType . getSuperclass ( ) ) ; <nl> - } <nl> - throw new IllegalArgumentException ( " The Structure sub type : " + structureSubType . getName ( ) <nl> - + " must define the method : getFieldOrder ( ) . " <nl> - + " See the javadoc for Structure . getFieldOrder ( ) for details . " , e ) ; <nl> - } <nl> - return methodGetFieldOrder ; <nl> - } <nl> }
NEAREST DIFF (one line): diff - - git a / test / com / sun / jna / StructureFieldOrderInspector . java b / test / com / sun / jna / StructureFieldOrderInspector . java <nl> index 582cec7 . . d0eff7f 100644 <nl> - - - a / test / com / sun / jna / StructureFieldOrderInspector . java <nl> + + + b / test / com / sun / jna / StructureFieldOrderInspector . java <nl> @ @ - 43 , 7 + 43 , 7 @ @ public final class StructureFieldOrderInspector { <nl> . setUrls ( ClasspathHelper . forClass ( classDeclaredInSourceTreeToSearch ) ) <nl> ) ; <nl> <nl> - return ( Set < Class < ? extends Structure > > ) reflections . getSubTypesOf ( Structure . class ) ; <nl> + return reflections . getSubTypesOf ( Structure . class ) ; <nl> } <nl> <nl>

TEST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 9b978ba . . d85df89 100644 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 16 , 6 + 16 , 7 @ @ Bug Fixes 
 * [ # 384 ] ( https : / / github . com / java - native - access / jna / issues / 384 ) : Android only supports loading libraries through the JVM ` System # loadLibrary ` mechanism , defaulting ` jna . nosys ` to ` true ` disabled that code path - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 * [ # 1041 ] ( https : / / github . com / java - native - access / jna / pull / 1041 ) : Avoid IllegalArgumentException when reading xattrs with zero length - [ @ jrobhoward ] ( https : / / github . com / jrobhoward ) . 
 * [ # 1042 ] ( https : / / github . com / java - native - access / jna / issues / 1042 ) : ` com . sun . jna . platform . WindowUtils . W32WindowUtils . getProcessFilePath ( HWND ) ` does not close process handle - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 + * [ # 1044 ] ( https : / / github . com / java - native - access / jna / issues / 1044 ) : ` com . sun . jna . platform . WindowUtils . W32WindowUtils . getProcessFilePath ( HWND ) ` does not close process handle - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 
 Release 5 . 1 . 0 
 = = = = = = = = = = = = = 
 diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml 
 index 0761e3e . . e489986 100644 
 - - - a / contrib / platform / build . xml 
 + + + b / contrib / platform / build . xml 
 @ @ - 218 , 8 + 218 , 7 @ @ com . sun . jna . platform . wince ; version = $ { osgi . version } 
 < batchtest todir = " $ { results . junit } " > 
 < fileset dir = " $ { test . src . dir } " excludes = " $ { tests . exclude - patterns } " > 
 < ! - - Until StructureFieldOrderTest gets fixed up a little - - > 
 - < exclude name = " * * / StructureFieldOrderTest . java " / > 
 - < exclude name = " com / sun / jna / platform / AbstractWin32TestSupport . java " / > 
 + < include name = " com / sun / jna / platform / * Test . java " / > 
 < include name = " $ { tests . platform . mac } " / > 
 < include name = " $ { tests . platform . windows } " / > 
 < include name = " $ { tests . platform . linux } " / > 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java 
 index 6c20edf . . 43123cd 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / unix / X11 . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / unix / X11 . java 
 @ @ - 1752 , 7 + 1752 , 7 @ @ public interface X11 extends Library { 
 public int x , y ; 
 } 
 
 - @ FieldOrder ( { " type " , " serial " , " send _ event " , " display " , " parent " , " window " , " x " , " y " , " width " , " height " , " border _ width " , " above " , " detail " , " value _ mask " } ) 
 + @ FieldOrder ( { " type " , " serial " , " send _ event " , " display " , " window " , " width " , " height " } ) 
 class XResizeRequestEvent extends Structure { 
 public int type ; 
 public NativeLong serial ; / / # of last request processed by server 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java b / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java 
 deleted file mode 100644 
 index ebdd8b2 . . 0000000 
 - - - a / contrib / platform / test / com / sun / jna / platform / StructureFieldOrderTest . java 
 + + + / dev / null 
 @ @ - 1 , 76 + 0 , 0 @ @ 
 - / * Copyright ( c ) 2007 - 2008 Timothy Wall , All Rights Reserved 
 - * 
 - * This library is free software ; you can redistribute it and / or 
 - * modify it under the terms of the GNU Lesser General Public 
 - * License as published by the Free Software Foundation ; either 
 - * version 2 . 1 of the License , or ( at your option ) any later version . 
 - * 
 - * This library is distributed in the hope that it will be useful , 
 - * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 - * Lesser General Public License for more details . 
 - * / 
 - package com . sun . jna . platform ; 
 - 
 - 
 - import com . sun . jna . Platform ; 
 - import com . sun . jna . platform . unix . X11 ; 
 - import com . sun . jna . platform . win32 . DBT ; 
 - import junit . framework . TestCase ; 
 - 
 - import com . sun . jna . StructureFieldOrderInspector ; 
 - 
 - import java . util . ArrayList ; 
 - import java . util . List ; 
 - 
 - public class StructureFieldOrderTest extends TestCase { 
 - 
 - private String origPropJNANoSys ; 
 - 
 - protected void setUp ( ) { 
 - origPropJNANoSys = System . getProperty ( " jna . nosys " ) ; 
 - System . setProperty ( " jna . nosys " , " true " ) ; / / would be set by ant script , set here for IDE usage 
 - } 
 - 
 - protected void tearDown ( ) { 
 - if ( origPropJNANoSys = = null ) { 
 - System . getProperties ( ) . remove ( " jna . nosys " ) ; 
 - } else { 
 - System . setProperty ( " jna . nosys " , origPropJNANoSys ) ; 
 - } 
 - } 
 - 
 - 
 - public void testMethodGetFieldOrder ( ) { 
 - final List < String > ignoreConstructorError = new ArrayList < String > ( ) ; 
 - 
 - if ( Platform . isWindows ( ) ) { 
 - ignoreConstructorError . add ( X11 . class . getName ( ) + " $ " ) ; 
 - } else { 
 - ignoreConstructorError . add ( com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 1 . class . getName ( ) ) ; 
 - ignoreConstructorError . add ( com . sun . jna . platform . win32 . Winspool . PRINTER _ INFO _ 4 . class . getName ( ) ) ; 
 - ignoreConstructorError . add ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVICE _ INTERFACE _ DATA . class . getName ( ) ) ; 
 - ignoreConstructorError . add ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVINFO _ DATA . class . getName ( ) ) ; 
 - } 
 - 
 - ignoreConstructorError . add ( DBT . DEV _ BROADCAST _ HANDLE . class . getName ( ) ) ; / / manually validated by wolftobias 
 - ignoreConstructorError . add ( DBT . DEV _ BROADCAST _ PORT . class . getName ( ) ) ; / / manually validated by wolftobias 
 - 
 - StructureFieldOrderInspector . batchCheckStructureGetFieldOrder ( FileUtils . class , ignoreConstructorError ) ; 
 - } 
 - 
 - / / test below is helpful when investigating failure cause of a specific Structure class , it shows full causes and traces . 
 - / * 
 - public void testMethodGetFieldOrderSingleClass ( ) { 
 - final List < String > ignoreConstructorError = new ArrayList < String > ( ) ; 
 - 
 - if ( Platform . isWindows ( ) ) { 
 - ignoreConstructorError . add ( X11 . class . getName ( ) + " $ " ) ; 
 - } 
 - 
 - StructureFieldOrderInspector . checkMethodGetFieldOrder ( com . sun . jna . platform . win32 . SetupApi . SP _ DEVICE _ INTERFACE _ DATA . class , ignoreConstructorError ) ; 
 - } 
 - / / * / 
 - 
 - 
 - } 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java b / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java 
 index 9b36717 . . 7981573 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / unix / X11Test . java 
 @ @ - 12 , 6 + 12 , 7 @ @ 
 * / 
 package com . sun . jna . platform . unix ; 
 
 + import com . sun . jna . StructureFieldOrderInspector ; 
 import java . awt . GraphicsEnvironment ; 
 
 import com . sun . jna . ptr . PointerByReference ; 
 @ @ - 104 , 6 + 105 , 10 @ @ public class X11Test extends TestCase { 
 Assert . assertArrayEquals ( " Sent protocols were not equal to returned procols for XGetWMProtocols " , sentAtoms , receivedAtoms ) ; 
 } 
 
 + public void testStructureFieldOrder ( ) { 
 + StructureFieldOrderInspector . batchCheckStructureGetFieldOrder ( X11 . class , null , true ) ; 
 + } 
 + 
 public static void main ( java . lang . String [ ] argList ) { 
 junit . textui . TestRunner . run ( X11Test . class ) ; 
 } 
 diff - - git a / test / com / sun / jna / StructureFieldOrderInspector . java b / test / com / sun / jna / StructureFieldOrderInspector . java 
 index 4c4566f . . 463ac7c 100644 
 - - - a / test / com / sun / jna / StructureFieldOrderInspector . java 
 + + + b / test / com / sun / jna / StructureFieldOrderInspector . java 
 @ @ - 30 , 6 + 30 , 8 @ @ import org . reflections . util . ConfigurationBuilder ; 
 
 import java . lang . reflect . * ; 
 import java . util . ArrayList ; 
 + import java . util . HashSet ; 
 + import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . Set ; 
 
 @ @ - 56 , 7 + 58 , 21 @ @ public final class StructureFieldOrderInspector { 
 * / 
 public static void batchCheckStructureGetFieldOrder ( final Class < ? > classDeclaredInSourceTreeToSearch , 
 final List < String > ignoreConstructorError ) { 
 - final Set < Class < ? extends Structure > > classes = StructureFieldOrderInspector . findSubTypesOfStructure ( classDeclaredInSourceTreeToSearch ) ; 
 + batchCheckStructureGetFieldOrder ( classDeclaredInSourceTreeToSearch , ignoreConstructorError , false ) ; 
 + } 
 + 
 + / * * 
 + * Search for Structure sub types in the source tree of the given class , and validate the getFieldOrder ( ) method , 
 + * and collects all errors into one exception . 
 + * 
 + * @ param classDeclaredInSourceTreeToSearch a class who ' s source tree will be searched for Structure sub types . 
 + * @ param ignoreConstructorError list of classname prefixes for which to ignore construction errors . 
 + * @ param onlyInnerClasses limit scan to inner classes of the supplied class 
 + * / 
 + public static void batchCheckStructureGetFieldOrder ( final Class < ? > classDeclaredInSourceTreeToSearch , 
 + final List < String > ignoreConstructorError , 
 + final boolean onlyInnerClasses ) { 
 + final Set < Class < ? extends Structure > > classes = StructureFieldOrderInspector . findSubTypesOfStructure ( classDeclaredInSourceTreeToSearch , onlyInnerClasses ) ; 
 
 final List < Throwable > problems = new ArrayList < Throwable > ( ) ; 
 
 @ @ - 96 , 7 + 112 , 7 @ @ public final class StructureFieldOrderInspector { 
 / * * 
 * Find all classes that extend { @ link Structure } . 
 * / 
 - public static Set < Class < ? extends Structure > > findSubTypesOfStructure ( final Class < ? > classDeclaredInSourceTreeToSearch ) { 
 + public static Set < Class < ? extends Structure > > findSubTypesOfStructure ( final Class < ? > classDeclaredInSourceTreeToSearch , boolean onlyInnerClasses ) { 
 
 / / use : http : / / code . google . com / p / reflections / 
 
 @ @ - 105 , 9 + 121 , 24 @ @ public final class StructureFieldOrderInspector { 
 . setUrls ( ClasspathHelper . forClass ( classDeclaredInSourceTreeToSearch ) ) 
 ) ; 
 
 - return reflections . getSubTypesOf ( Structure . class ) ; 
 + Set < Class < ? extends Structure > > types = new HashSet < Class < ? extends Structure > > ( reflections . getSubTypesOf ( Structure . class ) ) ; 
 + if ( onlyInnerClasses ) { 
 + Iterator < Class < ? extends Structure > > it = types . iterator ( ) ; 
 + while ( it . hasNext ( ) ) { 
 + if ( ! ( it . next ( ) . getEnclosingClass ( ) = = classDeclaredInSourceTreeToSearch ) ) { 
 + it . remove ( ) ; 
 + } 
 + } 
 + } 
 + return types ; 
 } 
 
 + / * * 
 + * Find all classes that extend { @ link Structure } . 
 + * / 
 + public static Set < Class < ? extends Structure > > findSubTypesOfStructure ( final Class < ? > classDeclaredInSourceTreeToSearch ) { 
 + return findSubTypesOfStructure ( classDeclaredInSourceTreeToSearch , false ) ; 
 + } 
 
 public static void checkMethodGetFieldOrder ( final Class < ? extends Structure > structureSubType , 
 final List < String > ignoreConstructorError ) { 
 @ @ - 119 , 9 + 150 , 6 @ @ public final class StructureFieldOrderInspector { 
 return ; 
 } 
 
 - final Method methodGetFieldOrder = getMethodGetFieldOrder ( structureSubType ) ; 
 - 
 - 
 if ( Modifier . isAbstract ( structureSubType . getModifiers ( ) ) ) { 
 / / do not try to construct abstract Structure sub types 
 return ; 
 @ @ - 161 , 58 + 189 , 27 @ @ public final class StructureFieldOrderInspector { 
 throw new RuntimeException ( " Could not instantiate Structure sub type : " + structureSubType . getName ( ) , e ) ; 
 } 
 
 - if ( ! methodGetFieldOrder . isAccessible ( ) ) { 
 - methodGetFieldOrder . setAccessible ( true ) ; 
 - } 
 - final List < ? > methodCallFieldList ; 
 - try { 
 - methodCallFieldList = ( List < ? > ) methodGetFieldOrder . invoke ( structure ) ; 
 - } catch ( IllegalAccessException e ) { 
 - throw new RuntimeException ( " Could not invoke getFieldOrder ( ) on Structure sub type : " + structureSubType . getName ( ) , e ) ; 
 - } catch ( InvocationTargetException e ) { 
 - throw new RuntimeException ( " Could not invoke getFieldOrder ( ) on Structure sub type : " + structureSubType . getName ( ) , e ) ; 
 - } 
 + final List < String > methodCallFieldOrder = structure . getFieldOrder ( ) ; 
 
 - final Field [ ] actualFields = structureSubType . getFields ( ) ; / / include fields from super classes 
 - final List < String > actualFieldNames = new ArrayList < String > ( actualFields . length ) ; 
 + final List < Field > actualFields = structure . getFieldList ( ) ; 
 + final List < String > actualFieldNames = new ArrayList < String > ( actualFields . size ( ) ) ; 
 for ( final Field field : actualFields ) { 
 / / ignore static fields 
 if ( ! Modifier . isStatic ( field . getModifiers ( ) ) ) { 
 final String actualFieldName = field . getName ( ) ; 
 - if ( ! methodCallFieldList . contains ( actualFieldName ) ) { 
 - throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldList 
 + if ( ! methodCallFieldOrder . contains ( actualFieldName ) ) { 
 + throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldOrder 
 + " ] does not include declared field : " + actualFieldName ) ; 
 } 
 actualFieldNames . add ( actualFieldName ) ; 
 } 
 } 
 
 - for ( final Object methodCallField : methodCallFieldList ) { 
 + for ( final String methodCallField : methodCallFieldOrder ) { 
 if ( ! actualFieldNames . contains ( methodCallField ) ) { 
 - throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldList 
 + throw new IllegalArgumentException ( structureSubType . getName ( ) + " . getFieldOrder ( ) [ " + methodCallFieldOrder 
 + " ] includes undeclared field : " + methodCallField ) ; 
 } 
 } 
 } 
 - 
 - / * * 
 - * Find the getFieldOrder ( ) method in the given class , or any of it ' s parents . 
 - * @ param structureSubType a structure sub type 
 - * @ return the getFieldOrder ( ) method found in the given class , or any of it ' s parents . 
 - * / 
 - private static Method getMethodGetFieldOrder ( Class < ? extends Structure > structureSubType ) { 
 - final Method methodGetFieldOrder ; 
 - try { 
 - methodGetFieldOrder = structureSubType . getDeclaredMethod ( " getFieldOrder " , new Class [ ] { } ) ; 
 - } catch ( NoSuchMethodException e ) { 
 - if ( structureSubType . getSuperclass ( ) ! = null ) { 
 - / / look for method in parent 
 - return getMethodGetFieldOrder ( ( Class < ? extends Structure > ) structureSubType . getSuperclass ( ) ) ; 
 - } 
 - throw new IllegalArgumentException ( " The Structure sub type : " + structureSubType . getName ( ) 
 - + " must define the method : getFieldOrder ( ) . " 
 - + " See the javadoc for Structure . getFieldOrder ( ) for details . " , e ) ; 
 - } 
 - return methodGetFieldOrder ; 
 - } 
 }

NEAREST DIFF:
diff - - git a / test / com / sun / jna / StructureFieldOrderInspector . java b / test / com / sun / jna / StructureFieldOrderInspector . java 
 index 582cec7 . . d0eff7f 100644 
 - - - a / test / com / sun / jna / StructureFieldOrderInspector . java 
 + + + b / test / com / sun / jna / StructureFieldOrderInspector . java 
 @ @ - 43 , 7 + 43 , 7 @ @ public final class StructureFieldOrderInspector { 
 . setUrls ( ClasspathHelper . forClass ( classDeclaredInSourceTreeToSearch ) ) 
 ) ; 
 
 - return ( Set < Class < ? extends Structure > > ) reflections . getSubTypesOf ( Structure . class ) ; 
 + return reflections . getSubTypesOf ( Structure . class ) ; 
 } 
 

