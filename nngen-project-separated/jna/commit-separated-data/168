BLEU SCORE: 0.04027248192421852

TEST MSG: Staticly link the windows jnidispatch . dll when build with MSVC compiler
GENERATED MSG: Call Native . dispose when DLL unloaded

TEST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 9af3bfa . . ed99c47 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 72 , 6 + 72 , 7 @ @ Bug Fixes <nl> * [ # 633 ] ( https : / / github . com / java - native - access / jna / pull / 633 ) : Restore default usage of platform native encoding for Java strings passed to native functions ( was hard - coded to UTF - 8 in 4 . 0 and later ) [ @ amake ] ( https : / / github . com / amake ) <nl> * [ # 634 ] ( https : / / github . com / java - native - access / jna / pull / 634 ) : Improve BSTR handling and add ` SysStringByteLen ` and ` SysStringLen ` to ` com . sun . jna . platform . win32 . OleAuto ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> * [ # 646 ] ( https : / / github . com / java - native - access / jna / issues / 646 ) : ` platform . win32 . COM . COMBindingBaseObject ` swallows reason if instantiation fails - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> + * [ # 636 ] ( https : / / github . com / java - native - access / jna / issues / 636 ) ; Staticly link visual c + + runtime when building with MSVC - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 4 . 2 . 1 <nl> = = = = = = = = = = = = = <nl> diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar <nl> index 60006d3 . . a287977 100755 <nl> Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ <nl> diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar <nl> index 2270943 . . f3320ed 100644 <nl> Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index 8e30e62 . . 54bbc39 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 207 , 19 + 207 , 24 @ @ STRIP = @ echo <nl> LIBPFX = <nl> LIBSFX = . dll <nl> TESTLIB _ TRUNC = $ ( BUILD ) / testlib - truncated . dll <nl> + <nl> ifeq ( $ ( ARCH ) , amd64 ) <nl> MINGW _ PREFIX ? = x86 _ 64 - w64 - mingw32 - <nl> FFI _ CONFIG + = - - host = x86 _ 64 - w64 - mingw32 <nl> - # Need windres from mingw distribution , even if building with MSVC <nl> - WINDRES = $ ( MINGW _ PREFIX ) windres <nl> - MINGW = $ ( MINGW _ PREFIX ) gcc <nl> else <nl> - MINGW _ PREFIX ? = i686 - pc - mingw32 - <nl> + FFI _ CONFIG + = - - host = i686 - w64 - mingw32 <nl> + MINGW _ PREFIX ? = i686 - w64 - mingw32 - <nl> endif <nl> + # Need windres from mingw distribution , even if building with MSVC <nl> + WINDRES = $ ( MINGW _ PREFIX ) windres <nl> + MINGW = $ ( MINGW _ PREFIX ) gcc <nl> <nl> ifeq ( $ ( USE _ MSVC ) , true ) <nl> # MS compiler <nl> CC = $ ( FFI _ SRC ) / msvcc . sh <nl> + ifneq ( $ ( DYNAMIC _ LIBFFI ) , true ) <nl> + CDEFINES + = - DUSE _ STATIC _ RTL <nl> + endif <nl> COPT = <nl> CPP = cl - nologo - EP <nl> LD = link
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 9af3bfa . . ed99c47 100644 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 72 , 6 + 72 , 7 @ @ Bug Fixes 
 * [ # 633 ] ( https : / / github . com / java - native - access / jna / pull / 633 ) : Restore default usage of platform native encoding for Java strings passed to native functions ( was hard - coded to UTF - 8 in 4 . 0 and later ) [ @ amake ] ( https : / / github . com / amake ) 
 * [ # 634 ] ( https : / / github . com / java - native - access / jna / pull / 634 ) : Improve BSTR handling and add ` SysStringByteLen ` and ` SysStringLen ` to ` com . sun . jna . platform . win32 . OleAuto ` - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 * [ # 646 ] ( https : / / github . com / java - native - access / jna / issues / 646 ) : ` platform . win32 . COM . COMBindingBaseObject ` swallows reason if instantiation fails - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 + * [ # 636 ] ( https : / / github . com / java - native - access / jna / issues / 636 ) ; Staticly link visual c + + runtime when building with MSVC - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 
 Release 4 . 2 . 1 
 = = = = = = = = = = = = = 
 diff - - git a / lib / native / win32 - x86 - 64 . jar b / lib / native / win32 - x86 - 64 . jar 
 index 60006d3 . . a287977 100755 
 Binary files a / lib / native / win32 - x86 - 64 . jar and b / lib / native / win32 - x86 - 64 . jar differ 
 diff - - git a / lib / native / win32 - x86 . jar b / lib / native / win32 - x86 . jar 
 index 2270943 . . f3320ed 100644 
 Binary files a / lib / native / win32 - x86 . jar and b / lib / native / win32 - x86 . jar differ 
 diff - - git a / native / Makefile b / native / Makefile 
 index 8e30e62 . . 54bbc39 100644 
 - - - a / native / Makefile 
 + + + b / native / Makefile 
 @ @ - 207 , 19 + 207 , 24 @ @ STRIP = @ echo 
 LIBPFX = 
 LIBSFX = . dll 
 TESTLIB _ TRUNC = $ ( BUILD ) / testlib - truncated . dll 
 + 
 ifeq ( $ ( ARCH ) , amd64 ) 
 MINGW _ PREFIX ? = x86 _ 64 - w64 - mingw32 - 
 FFI _ CONFIG + = - - host = x86 _ 64 - w64 - mingw32 
 - # Need windres from mingw distribution , even if building with MSVC 
 - WINDRES = $ ( MINGW _ PREFIX ) windres 
 - MINGW = $ ( MINGW _ PREFIX ) gcc 
 else 
 - MINGW _ PREFIX ? = i686 - pc - mingw32 - 
 + FFI _ CONFIG + = - - host = i686 - w64 - mingw32 
 + MINGW _ PREFIX ? = i686 - w64 - mingw32 - 
 endif 
 + # Need windres from mingw distribution , even if building with MSVC 
 + WINDRES = $ ( MINGW _ PREFIX ) windres 
 + MINGW = $ ( MINGW _ PREFIX ) gcc 
 
 ifeq ( $ ( USE _ MSVC ) , true ) 
 # MS compiler 
 CC = $ ( FFI _ SRC ) / msvcc . sh 
 + ifneq ( $ ( DYNAMIC _ LIBFFI ) , true ) 
 + CDEFINES + = - DUSE _ STATIC _ RTL 
 + endif 
 COPT = 
 CPP = cl - nologo - EP 
 LD = link

NEAREST DIFF:
ELIMINATEDSENTENCE
