BLEU SCORE: 0.014199193612838947

TEST MSG: Fix Java 1 . 6 compatibility and introduce animal - sniffer to prevent regressions
GENERATED MSG: Derive android versionCode from major / minor / revision

TEST DIFF (one line): diff - - git a / . gitignore b / . gitignore <nl> index a9352f6 . . 21f5581 100644 <nl> - - - a / . gitignore <nl> + + + b / . gitignore <nl> @ @ - 29 , 4 + 29 , 5 @ @ pom - jna - platform . xml . asc <nl> * . iml <nl> / contrib / platform / $ { build . generated . sources . dir } / <nl> / contrib / platform / $ { build } / <nl> - / contrib / platform / nbproject / private / <nl> \ No newline at end of file <nl> + / contrib / platform / nbproject / private / <nl> + / nbproject / private / <nl> \ No newline at end of file <nl> diff - - git a / CHANGES . md b / CHANGES . md <nl> index 7dff5f7 . . 0b1f89b 100644 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 10 , 7 + 10 , 7 @ @ Features <nl> <nl> Bug Fixes <nl> - - - - - - - - - <nl> - <nl> + * [ # 1025 ] ( https : / / github . com / java - native - access / jna / pull / 1025 ) : Restore java 6 compatibility and introduce animal - sniffer to prevent regressions - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . <nl> <nl> Release 5 . 0 . 0 <nl> = = = = = = = = = = = = = <nl> diff - - git a / build . xml b / build . xml <nl> index c680c17 . . a4923b8 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 1 , 5 + 1 , 8 @ @ <nl> < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> - < project name = " JNA " default = " default " basedir = " . " xmlns : artifact = " antlib : org . apache . maven . artifact . ant " xmlns : if = " ant : if " > <nl> + < project name = " JNA " default = " default " basedir = " . " <nl> + xmlns : artifact = " antlib : org . apache . maven . artifact . ant " <nl> + xmlns : as = " antlib : org . codehaus . mojo . animal _ sniffer " <nl> + xmlns : if = " ant : if " > <nl> < description > Builds and tests JNA < / description > <nl> <nl> < ! - - Default build compiles all platform - independent stuff as well <nl> @ @ - 136 , 6 + 139 , 18 @ @ <nl> < target name = " compile - test - single " depends = " compile - tests " / > <nl> < target name = " compile - single " depends = " compile " / > <nl> <nl> + < ! - - Prepare additional ant task - - > <nl> + < path id = " maven - ant - tasks . classpath " > <nl> + < pathelement location = " lib / animal - sniffer - ant - tasks - 1 . 17 . jar " / > <nl> + < pathelement location = " lib / maven - ant - tasks - 2 . 1 . 3 . jar " / > <nl> + < / path > <nl> + < typedef resource = " org / apache / maven / artifact / ant / antlib . xml " <nl> + uri = " antlib : org . apache . maven . artifact . ant " <nl> + classpathref = " maven - ant - tasks . classpath " / > <nl> + < typedef resource = " org / codehaus / mojo / animal _ sniffer / antlib . xml " <nl> + uri = " antlib : org . codehaus . mojo . animal _ sniffer " <nl> + classpathref = " maven - ant - tasks . classpath " / > <nl> + <nl> < target name = " - prepare - anttools " > <nl> < mkdir dir = " $ { build } / ant - tools " / > <nl> < javac classpath = " lib / ant . jar " <nl> @ @ - 1127 , 6 + 1142 , 17 @ @ cd . . <nl> < ! - - to where the test library ( testlib ) is found . - - > <nl> < target name = " test " depends = " - enable - native , jar , compile - tests " unless = " cross - compile " <nl> description = " Run all unit tests " > <nl> + <nl> + < echo > Checking JDK compatibility 1 . 6 < / echo > <nl> + <nl> + < echo > < / echo > <nl> + <nl> + < as : check - signature signature = " lib / java16 - 1 . 1 . signature " > <nl> + < path path = " $ { classes } " / > <nl> + < / as : check - signature > <nl> + <nl> + < echo > < / echo > <nl> + <nl> < property name = " test . fork " value = " yes " / > <nl> < property name = " test . forkmode " value = " perTest " / > <nl> <nl> @ @ - 1370 , 12 + 1396 , 6 @ @ cd . . <nl> < / artifact : mvn > <nl> < / target > <nl> <nl> - <nl> - < path id = " maven - ant - tasks . classpath " path = " lib / maven - ant - tasks - 2 . 1 . 3 . jar " / > <nl> - < typedef resource = " org / apache / maven / artifact / ant / antlib . xml " <nl> - uri = " antlib : org . apache . maven . artifact . ant " <nl> - classpathref = " maven - ant - tasks . classpath " / > <nl> - <nl> < ! - - NOTE : The ' deploy ' target works only if the version ( jna . version in build . xml ) ends in ' - SNAPSHOT ' . - - > <nl> < target name = " deploy " depends = " dist " description = " deploy snapshot version to Maven snapshot repository " > <nl> < artifact : mvn failonerror = " true " > <nl> diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index 2d2f654 . . 2b771e7 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 1 , 5 + 1 , 8 @ @ <nl> < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> - < project name = " platform " default = " default " basedir = " . " > <nl> + < project name = " platform " <nl> + default = " default " <nl> + basedir = " . " <nl> + xmlns : as = " antlib : org . codehaus . mojo . animal _ sniffer " > <nl> < description > Builds and tests platform - specific code . < / description > <nl> < import file = " nbproject / build - impl . xml " / > <nl> < ! - - <nl> @ @ - 63 , 7 + 66 , 16 @ @ <nl> nbproject / build - impl . xml file . <nl> <nl> - - > <nl> - <nl> + <nl> + < ! - - Prepare additional ant task - - > <nl> + < path id = " maven - ant - tasks . classpath " > <nl> + < pathelement location = " . . / . . / lib / animal - sniffer - ant - tasks - 1 . 17 . jar " / > <nl> + < pathelement location = " . . / . . / lib / maven - ant - tasks - 2 . 1 . 3 . jar " / > <nl> + < / path > <nl> + < typedef resource = " org / codehaus / mojo / animal _ sniffer / antlib . xml " <nl> + uri = " antlib : org . codehaus . mojo . animal _ sniffer " <nl> + classpathref = " maven - ant - tasks . classpath " / > <nl> + <nl> < ! - - the - init - macrodef - copylibs target superseeds the target defined in <nl> build - impl . xml . The classpath that the base copylibs target adds to the <nl> MANIFEST . MF interferes with spring - boot and tomcat - - > <nl> @ @ - 98 , 7 + 110 , 7 @ @ <nl> < / sequential > <nl> < / macrodef > <nl> < / target > <nl> - <nl> + <nl> < target name = " - pre - jar " > <nl> < tempfile deleteonexit = " true " destdir = " $ { build . dir } " property = " tmp . manifest . file " / > <nl> < manifest file = " $ { tmp . manifest . file } " mode = " replace " > <nl> @ @ - 140 , 6 + 152 , 17 @ @ com . sun . jna . platform . wince ; version = $ { osgi . version } <nl> < / target > <nl> <nl> < target name = " test " depends = " init , compile , compile - test , - pre - test - run " description = " Run platform unit tests . " > <nl> + <nl> + < echo > Checking JDK compatibility 1 . 6 < / echo > <nl> + <nl> + < echo > < / echo > <nl> + <nl> + < as : check - signature signature = " . . / . . / lib / java16 - 1 . 1 . signature " classpath = " $ { javac . classpath } " > <nl> + < path path = " $ { build . classes . dir } " / > <nl> + < / as : check - signature > <nl> + <nl> + < echo > < / echo > <nl> + <nl> < echo > Running platform tests : $ { test . src . dir } < / echo > <nl> < property name = " test . fork " value = " yes " / > <nl> < property name = " reports . junit " location = " $ { build } / reports / junit / $ { os . prefix } " / > <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java <nl> index 32d4d91 . . 88f1968 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java <nl> @ @ - 120 , 8 + 120 , 9 @ @ class Convert { <nl> Constructor < VARIANT > constructor = null ; <nl> if ( value ! = null ) { <nl> for ( Constructor < VARIANT > m : ( Constructor < VARIANT > [ ] ) VARIANT . class . getConstructors ( ) ) { <nl> - if ( m . getParameterCount ( ) > 0 <nl> - & & m . getParameterTypes ( ) [ 0 ] . isAssignableFrom ( value . getClass ( ) ) ) { <nl> + Class < ? > [ ] parameters = m . getParameterTypes ( ) ; <nl> + if ( parameters . length = = 1 <nl> + & & parameters [ 0 ] . isAssignableFrom ( value . getClass ( ) ) ) { <nl> constructor = m ; <nl> } <nl> } <nl> diff - - git a / lib / animal - sniffer - ant - tasks - 1 . 17 . jar b / lib / animal - sniffer - ant - tasks - 1 . 17 . jar <nl> new file mode 100644 <nl> index 0000000 . . 06e7d7d <nl> Binary files / dev / null and b / lib / animal - sniffer - ant - tasks - 1 . 17 . jar differ <nl> diff - - git a / lib / java16 - 1 . 1 . signature b / lib / java16 - 1 . 1 . signature <nl> new file mode 100644 <nl> index 0000000 . . c31bed6 <nl> Binary files / dev / null and b / lib / java16 - 1 . 1 . signature differ <nl> diff - - git a / src / com / sun / jna / NativeString . java b / src / com / sun / jna / NativeString . java <nl> index 675470a . . a8c6d55 100644 <nl> - - - a / src / com / sun / jna / NativeString . java <nl> + + + b / src / com / sun / jna / NativeString . java <nl> @ @ - 21 , 9 + 21 , 6 @ @ <nl> * / <nl> package com . sun . jna ; <nl> <nl> - import java . nio . CharBuffer ; <nl> - <nl> - <nl> / * * Provides a temporary allocation of an immutable C string <nl> * ( < code > const char * < / code > or < code > const wchar _ t * < / code > ) for use when <nl> * converting a Java String into a native memory function argument . <nl> @ @ - 111 , 9 + 108 , 7 @ @ class NativeString implements CharSequence , Comparable { <nl> @ Override <nl> public String toString ( ) { <nl> boolean wide = WIDE _ STRING . equals ( encoding ) ; <nl> - String s = wide ? " const wchar _ t * " : " const char * " ; <nl> - s + = " ( " + ( wide ? pointer . getWideString ( 0 ) : pointer . getString ( 0 , encoding ) ) + " ) " ; <nl> - return s ; <nl> + return ( wide ? pointer . getWideString ( 0 ) : pointer . getString ( 0 , encoding ) ) ; <nl> } <nl> <nl> public Pointer getPointer ( ) { <nl> @ @ - 132 , 7 + 127 , 7 @ @ class NativeString implements CharSequence , Comparable { <nl> <nl> @ Override <nl> public CharSequence subSequence ( int start , int end ) { <nl> - return CharBuffer . wrap ( toString ( ) ) . subSequence ( start , end ) ; <nl> + return toString ( ) . subSequence ( start , end ) ; <nl> } <nl> <nl> @ Override
NEAREST DIFF (one line): ELIMINATEDSENTENCE

TEST DIFF:
diff - - git a / . gitignore b / . gitignore 
 index a9352f6 . . 21f5581 100644 
 - - - a / . gitignore 
 + + + b / . gitignore 
 @ @ - 29 , 4 + 29 , 5 @ @ pom - jna - platform . xml . asc 
 * . iml 
 / contrib / platform / $ { build . generated . sources . dir } / 
 / contrib / platform / $ { build } / 
 - / contrib / platform / nbproject / private / 
 \ No newline at end of file 
 + / contrib / platform / nbproject / private / 
 + / nbproject / private / 
 \ No newline at end of file 
 diff - - git a / CHANGES . md b / CHANGES . md 
 index 7dff5f7 . . 0b1f89b 100644 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 10 , 7 + 10 , 7 @ @ Features 
 
 Bug Fixes 
 - - - - - - - - - 
 - 
 + * [ # 1025 ] ( https : / / github . com / java - native - access / jna / pull / 1025 ) : Restore java 6 compatibility and introduce animal - sniffer to prevent regressions - [ @ matthiasblaesing ] ( https : / / github . com / matthiasblaesing ) . 
 
 Release 5 . 0 . 0 
 = = = = = = = = = = = = = 
 diff - - git a / build . xml b / build . xml 
 index c680c17 . . a4923b8 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 1 , 5 + 1 , 8 @ @ 
 < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > 
 - < project name = " JNA " default = " default " basedir = " . " xmlns : artifact = " antlib : org . apache . maven . artifact . ant " xmlns : if = " ant : if " > 
 + < project name = " JNA " default = " default " basedir = " . " 
 + xmlns : artifact = " antlib : org . apache . maven . artifact . ant " 
 + xmlns : as = " antlib : org . codehaus . mojo . animal _ sniffer " 
 + xmlns : if = " ant : if " > 
 < description > Builds and tests JNA < / description > 
 
 < ! - - Default build compiles all platform - independent stuff as well 
 @ @ - 136 , 6 + 139 , 18 @ @ 
 < target name = " compile - test - single " depends = " compile - tests " / > 
 < target name = " compile - single " depends = " compile " / > 
 
 + < ! - - Prepare additional ant task - - > 
 + < path id = " maven - ant - tasks . classpath " > 
 + < pathelement location = " lib / animal - sniffer - ant - tasks - 1 . 17 . jar " / > 
 + < pathelement location = " lib / maven - ant - tasks - 2 . 1 . 3 . jar " / > 
 + < / path > 
 + < typedef resource = " org / apache / maven / artifact / ant / antlib . xml " 
 + uri = " antlib : org . apache . maven . artifact . ant " 
 + classpathref = " maven - ant - tasks . classpath " / > 
 + < typedef resource = " org / codehaus / mojo / animal _ sniffer / antlib . xml " 
 + uri = " antlib : org . codehaus . mojo . animal _ sniffer " 
 + classpathref = " maven - ant - tasks . classpath " / > 
 + 
 < target name = " - prepare - anttools " > 
 < mkdir dir = " $ { build } / ant - tools " / > 
 < javac classpath = " lib / ant . jar " 
 @ @ - 1127 , 6 + 1142 , 17 @ @ cd . . 
 < ! - - to where the test library ( testlib ) is found . - - > 
 < target name = " test " depends = " - enable - native , jar , compile - tests " unless = " cross - compile " 
 description = " Run all unit tests " > 
 + 
 + < echo > Checking JDK compatibility 1 . 6 < / echo > 
 + 
 + < echo > < / echo > 
 + 
 + < as : check - signature signature = " lib / java16 - 1 . 1 . signature " > 
 + < path path = " $ { classes } " / > 
 + < / as : check - signature > 
 + 
 + < echo > < / echo > 
 + 
 < property name = " test . fork " value = " yes " / > 
 < property name = " test . forkmode " value = " perTest " / > 
 
 @ @ - 1370 , 12 + 1396 , 6 @ @ cd . . 
 < / artifact : mvn > 
 < / target > 
 
 - 
 - < path id = " maven - ant - tasks . classpath " path = " lib / maven - ant - tasks - 2 . 1 . 3 . jar " / > 
 - < typedef resource = " org / apache / maven / artifact / ant / antlib . xml " 
 - uri = " antlib : org . apache . maven . artifact . ant " 
 - classpathref = " maven - ant - tasks . classpath " / > 
 - 
 < ! - - NOTE : The ' deploy ' target works only if the version ( jna . version in build . xml ) ends in ' - SNAPSHOT ' . - - > 
 < target name = " deploy " depends = " dist " description = " deploy snapshot version to Maven snapshot repository " > 
 < artifact : mvn failonerror = " true " > 
 diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml 
 index 2d2f654 . . 2b771e7 100644 
 - - - a / contrib / platform / build . xml 
 + + + b / contrib / platform / build . xml 
 @ @ - 1 , 5 + 1 , 8 @ @ 
 < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > 
 - < project name = " platform " default = " default " basedir = " . " > 
 + < project name = " platform " 
 + default = " default " 
 + basedir = " . " 
 + xmlns : as = " antlib : org . codehaus . mojo . animal _ sniffer " > 
 < description > Builds and tests platform - specific code . < / description > 
 < import file = " nbproject / build - impl . xml " / > 
 < ! - - 
 @ @ - 63 , 7 + 66 , 16 @ @ 
 nbproject / build - impl . xml file . 
 
 - - > 
 - 
 + 
 + < ! - - Prepare additional ant task - - > 
 + < path id = " maven - ant - tasks . classpath " > 
 + < pathelement location = " . . / . . / lib / animal - sniffer - ant - tasks - 1 . 17 . jar " / > 
 + < pathelement location = " . . / . . / lib / maven - ant - tasks - 2 . 1 . 3 . jar " / > 
 + < / path > 
 + < typedef resource = " org / codehaus / mojo / animal _ sniffer / antlib . xml " 
 + uri = " antlib : org . codehaus . mojo . animal _ sniffer " 
 + classpathref = " maven - ant - tasks . classpath " / > 
 + 
 < ! - - the - init - macrodef - copylibs target superseeds the target defined in 
 build - impl . xml . The classpath that the base copylibs target adds to the 
 MANIFEST . MF interferes with spring - boot and tomcat - - > 
 @ @ - 98 , 7 + 110 , 7 @ @ 
 < / sequential > 
 < / macrodef > 
 < / target > 
 - 
 + 
 < target name = " - pre - jar " > 
 < tempfile deleteonexit = " true " destdir = " $ { build . dir } " property = " tmp . manifest . file " / > 
 < manifest file = " $ { tmp . manifest . file } " mode = " replace " > 
 @ @ - 140 , 6 + 152 , 17 @ @ com . sun . jna . platform . wince ; version = $ { osgi . version } 
 < / target > 
 
 < target name = " test " depends = " init , compile , compile - test , - pre - test - run " description = " Run platform unit tests . " > 
 + 
 + < echo > Checking JDK compatibility 1 . 6 < / echo > 
 + 
 + < echo > < / echo > 
 + 
 + < as : check - signature signature = " . . / . . / lib / java16 - 1 . 1 . signature " classpath = " $ { javac . classpath } " > 
 + < path path = " $ { build . classes . dir } " / > 
 + < / as : check - signature > 
 + 
 + < echo > < / echo > 
 + 
 < echo > Running platform tests : $ { test . src . dir } < / echo > 
 < property name = " test . fork " value = " yes " / > 
 < property name = " reports . junit " location = " $ { build } / reports / junit / $ { os . prefix } " / > 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java 
 index 32d4d91 . . 88f1968 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / COM / util / Convert . java 
 @ @ - 120 , 8 + 120 , 9 @ @ class Convert { 
 Constructor < VARIANT > constructor = null ; 
 if ( value ! = null ) { 
 for ( Constructor < VARIANT > m : ( Constructor < VARIANT > [ ] ) VARIANT . class . getConstructors ( ) ) { 
 - if ( m . getParameterCount ( ) > 0 
 - & & m . getParameterTypes ( ) [ 0 ] . isAssignableFrom ( value . getClass ( ) ) ) { 
 + Class < ? > [ ] parameters = m . getParameterTypes ( ) ; 
 + if ( parameters . length = = 1 
 + & & parameters [ 0 ] . isAssignableFrom ( value . getClass ( ) ) ) { 
 constructor = m ; 
 } 
 } 
 diff - - git a / lib / animal - sniffer - ant - tasks - 1 . 17 . jar b / lib / animal - sniffer - ant - tasks - 1 . 17 . jar 
 new file mode 100644 
 index 0000000 . . 06e7d7d 
 Binary files / dev / null and b / lib / animal - sniffer - ant - tasks - 1 . 17 . jar differ 
 diff - - git a / lib / java16 - 1 . 1 . signature b / lib / java16 - 1 . 1 . signature 
 new file mode 100644 
 index 0000000 . . c31bed6 
 Binary files / dev / null and b / lib / java16 - 1 . 1 . signature differ 
 diff - - git a / src / com / sun / jna / NativeString . java b / src / com / sun / jna / NativeString . java 
 index 675470a . . a8c6d55 100644 
 - - - a / src / com / sun / jna / NativeString . java 
 + + + b / src / com / sun / jna / NativeString . java 
 @ @ - 21 , 9 + 21 , 6 @ @ 
 * / 
 package com . sun . jna ; 
 
 - import java . nio . CharBuffer ; 
 - 
 - 
 / * * Provides a temporary allocation of an immutable C string 
 * ( < code > const char * < / code > or < code > const wchar _ t * < / code > ) for use when 
 * converting a Java String into a native memory function argument . 
 @ @ - 111 , 9 + 108 , 7 @ @ class NativeString implements CharSequence , Comparable { 
 @ Override 
 public String toString ( ) { 
 boolean wide = WIDE _ STRING . equals ( encoding ) ; 
 - String s = wide ? " const wchar _ t * " : " const char * " ; 
 - s + = " ( " + ( wide ? pointer . getWideString ( 0 ) : pointer . getString ( 0 , encoding ) ) + " ) " ; 
 - return s ; 
 + return ( wide ? pointer . getWideString ( 0 ) : pointer . getString ( 0 , encoding ) ) ; 
 } 
 
 public Pointer getPointer ( ) { 
 @ @ - 132 , 7 + 127 , 7 @ @ class NativeString implements CharSequence , Comparable { 
 
 @ Override 
 public CharSequence subSequence ( int start , int end ) { 
 - return CharBuffer . wrap ( toString ( ) ) . subSequence ( start , end ) ; 
 + return toString ( ) . subSequence ( start , end ) ; 
 } 
 
 @ Override

NEAREST DIFF:
ELIMINATEDSENTENCE
