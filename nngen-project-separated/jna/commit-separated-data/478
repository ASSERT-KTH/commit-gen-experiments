BLEU SCORE: 0.05522397783539471

TEST MSG: add tests for library loading from resource path
GENERATED MSG: fix more tests

TEST DIFF (one line): diff - - git a / CHANGES . md b / CHANGES . md <nl> index 8fb2883 . . f61603c 100755 <nl> - - - a / CHANGES . md <nl> + + + b / CHANGES . md <nl> @ @ - 15 , 6 + 15 , 7 @ @ Bug Fixes <nl> * Use TLS to indicate callback detach state , to avoid any potential conflicts with last error storage - [ @ twall ] ( https : / / github . com / twall ) . <nl> * [ # 173 ] ( https : / / github . com / twall / jna / issues / 173 ) : Fix OSX 10 . 8 / Xcode 4 + builds , web start path with Oracle 1 . 7 JDK - [ @ mkjellman ] ( https : / / github . com / mkjellman ) . <nl> * [ # 215 ] ( https : / / github . com / twall / jna / issues / 215 ) : Force use of XSI ` strerror _ r ` on linux - [ LionelCons ] ( https : / / github . com / LionelCons ) . <nl> + * [ # 214 ] ( https : / / github . com / twall / jna / issues / 214 ) : Don ' t map library names when an absolute path is provided - [ @ twall ] ( https : / / github . com / twall ) . <nl> <nl> Release 3 . 5 . 2 <nl> = = = = = = = = = = = = = <nl> diff - - git a / build . xml b / build . xml <nl> index a75a026 . . 198625c 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 725 , 26 + 725 , 26 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc <nl> < src path = " $ { test . src } " / > <nl> < exclude name = " $ { tests . exclude } " / > <nl> < / javac > <nl> - < ! - - Move ( not copy ) embedded testlib to test class folder so that it will be - - > <nl> - < ! - - packaged into the test jar and NOT available in the FS - based class path - - > <nl> - < move todir = " $ { test . classes } / $ { os . prefix } " > <nl> + < ! - - Set up versions of test library for resource path loading - - > <nl> + < copy todir = " $ { test . classes } / $ { os . prefix } " > <nl> < fileset dir = " $ { build . native } " > <nl> - < patternset id = " embedded - testlib " > <nl> - < include name = " * * / * embedded - testlib * " / > <nl> + < patternset > <nl> + < include name = " * * / * testlib - jar * " / > <nl> + < include name = " * * / * testlib - path * " / > <nl> < / patternset > <nl> < / fileset > <nl> - < / move > <nl> - < ! - - Create a jar for easy movement of tests , and embedded load test - - > <nl> + < / copy > <nl> + < ! - - Create a jar for easy movement of tests , and jar load test - - > <nl> < jar jarfile = " $ { build } / $ { testjar } " > <nl> < fileset dir = " $ { test . classes } " > <nl> < patternset refid = " jar - compiled " / > <nl> - < include name = " * * / * embedded - testlib * " / > <nl> + < include name = " * * / * testlib - jar * " / > <nl> < / fileset > <nl> < / jar > <nl> - < ! - - Ensure embedded library unavailable on FS - based class path - - > <nl> + < ! - - Ensure jar - based library unavailable on FS - based class path - - > <nl> < delete > <nl> < fileset dir = " $ { test . classes } " > <nl> - < include name = " * * / * embedded - testlib * " / > <nl> + < include name = " * * / * testlib - jar * " / > <nl> < / fileset > <nl> < / delete > <nl> < mkdir dir = " $ { build } / jws " / > <nl> diff - - git a / native / Makefile b / native / Makefile <nl> index 079cdd7 . . c027283 100644 <nl> - - - a / native / Makefile <nl> + + + b / native / Makefile <nl> @ @ - 67 , 7 + 67 , 9 @ @ FFI _ CONFIG = - - enable - static - - disable - shared - - with - pic = yes <nl> endif <nl> LIBRARY = $ ( BUILD ) / $ ( LIBPFX ) jnidispatch $ ( JNISFX ) <nl> TESTLIB = $ ( BUILD ) / $ ( LIBPFX ) testlib $ ( LIBSFX ) <nl> - TESTLIB _ EMBEDDED = $ ( BUILD ) / $ ( LIBPFX ) embedded - testlib $ ( LIBSFX ) <nl> + TESTLIB _ JAR = $ ( BUILD ) / $ ( LIBPFX ) testlib - jar $ ( LIBSFX ) <nl> + TESTLIB _ PATH = $ ( BUILD ) / $ ( LIBPFX ) testlib - path $ ( LIBSFX ) <nl> + TESTLIB _ TRUNC = $ ( BUILD ) / testlib - truncated <nl> TESTLIB2 = $ ( BUILD ) / $ ( LIBPFX ) testlib2 $ ( LIBSFX ) <nl> <nl> # Reasonable defaults based on GCC <nl> @ @ - 342 , 7 + 344 , 7 @ @ else <nl> 	 $ ( CC ) $ ( CFLAGS ) - c $ < $ ( COUT ) <nl> endif <nl> <nl> - all : $ ( LIBRARY ) $ ( TESTLIB ) $ ( TESTLIB2 ) $ ( TESTLIB _ EMBEDDED ) <nl> + all : $ ( LIBRARY ) $ ( TESTLIB ) $ ( TESTLIB2 ) $ ( TESTLIB _ JAR ) $ ( TESTLIB _ PATH ) $ ( TESTLIB _ TRUNC ) <nl> <nl> install : <nl> 	 mkdir $ ( INSTALLDIR ) <nl> @ @ - 365 , 8 + 367 , 8 @ @ $ ( LIBRARY ) : $ ( JNIDISPATCH _ OBJS ) $ ( FFI _ LIB ) <nl> $ ( TESTLIB ) : $ ( BUILD ) / testlib . o <nl> 	 $ ( LD ) $ ( LDFLAGS ) $ < $ ( LIBS ) <nl> <nl> - $ ( TESTLIB _ EMBEDDED ) : $ ( BUILD ) / testlib . o <nl> - 	 $ ( LD ) $ ( LDFLAGS ) $ < $ ( LIBS ) <nl> + $ ( TESTLIB _ JAR ) $ ( TESTLIB _ PATH ) $ ( TESTLIB _ TRUNC ) : $ ( TESTLIB ) <nl> + 	 @ cp $ < $ @ <nl> <nl> ifeq ( $ ( ARSFX ) , . lib ) <nl> TESTDEP = $ ( TESTLIB : . dll = . lib ) <nl> diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java <nl> index c608dc2 . . 5bf8b15 100644 <nl> - - - a / src / com / sun / jna / Native . java <nl> + + + b / src / com / sun / jna / Native . java <nl> @ @ - 699 , 7 + 699 , 7 @ @ public final class Native implements Version { <nl> * / <nl> private static void loadNativeDispatchLibraryFromClasspath ( ) { <nl> try { <nl> - String prefix = " com / sun / jna / " + getNativeLibraryResourcePrefix ( ) ; <nl> + String prefix = " / com / sun / jna / " + getNativeLibraryResourcePrefix ( ) ; <nl> File lib = extractFromResourcePath ( " jnidispatch " , prefix , Native . class . getClassLoader ( ) ) ; <nl> if ( lib = = null ) { <nl> throw new UnsatisfiedLinkError ( " Could not find JNA native support " ) ; <nl> @ @ - 733 , 7 + 733 , 7 @ @ public final class Native implements Version { <nl> * @ throws IOException if resource not found <nl> * / <nl> static File extractFromResourcePath ( String name ) throws IOException { <nl> - return extractFromResourcePath ( name , getNativeLibraryResourcePrefix ( ) , Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> + return extractFromResourcePath ( name , " / " + getNativeLibraryResourcePrefix ( ) , Thread . currentThread ( ) . getContextClassLoader ( ) ) ; <nl> } <nl> <nl> / * * Attempt to extract a native library from the current resource path . <nl> @ @ - 747 , 8 + 747 , 11 @ @ public final class Native implements Version { <nl> * @ throws IOException if resource not found <nl> * / <nl> static File extractFromResourcePath ( String name , String resourcePrefix , ClassLoader loader ) throws IOException { <nl> - String libname = System . mapLibraryName ( name ) ; <nl> - String resourcePath = resourcePrefix + " / " + libname ; <nl> + String libname = name . startsWith ( " / " ) ? name : System . mapLibraryName ( name ) ; <nl> + String resourcePath = name . startsWith ( " / " ) ? name : resourcePrefix + " / " + libname ; <nl> + if ( resourcePath . startsWith ( " / " ) ) { <nl> + resourcePath = resourcePath . substring ( 1 ) ; <nl> + } <nl> URL url = loader . getResource ( resourcePath ) ; <nl> <nl> / / User libraries will have ' . dylib ' <nl> @ @ - 764 , 7 + 767 , 7 @ @ public final class Native implements Version { <nl> url = loader . getResource ( resourcePath ) ; <nl> } <nl> if ( url = = null ) { <nl> - throw new IOException ( " JNA native support ( " + resourcePath + " ) not found in resource path ( " + System . getProperty ( " java . class . path " ) + " ) " ) ; <nl> + throw new IOException ( " Native library ( " + resourcePath + " ) not found in resource path ( " + System . getProperty ( " java . class . path " ) + " ) " ) ; <nl> } <nl> <nl> File lib = null ; <nl> diff - - git a / test / com / sun / jna / LibraryLoadTest . java b / test / com / sun / jna / LibraryLoadTest . java <nl> index 846192f . . 5f4a00a 100644 <nl> - - - a / test / com / sun / jna / LibraryLoadTest . java <nl> + + + b / test / com / sun / jna / LibraryLoadTest . java <nl> @ @ - 52 , 6 + 52 , 35 @ @ public class LibraryLoadTest extends TestCase { <nl> } <nl> } <nl> <nl> + public interface TestLibrary extends Library { <nl> + } <nl> + <nl> + public void testLoadFromJNALibraryPath ( ) { <nl> + NativeLibrary . getInstance ( " testlib " ) ; <nl> + } <nl> + <nl> + public void testLoadFromClasspath ( ) { <nl> + NativeLibrary . getInstance ( " testlib - path " ) ; <nl> + } <nl> + <nl> + public void testLoadFromClasspathAbsolute ( ) { <nl> + String name = System . mapLibraryName ( " testlib - path " ) . replace ( " . jnilib " , " . dylib " ) ; <nl> + NativeLibrary . getInstance ( " / " + Platform . RESOURCE _ PREFIX + " / " + name ) ; <nl> + } <nl> + <nl> + public void testLoadFromJar ( ) { <nl> + NativeLibrary . getInstance ( " testlib - jar " ) ; <nl> + } <nl> + <nl> + public void testLoadFromJarAbsolute ( ) { <nl> + String name = System . mapLibraryName ( " testlib - jar " ) . replace ( " . jnilib " , " . dylib " ) ; <nl> + NativeLibrary . getInstance ( " / " + Platform . RESOURCE _ PREFIX + " / " + name ) ; <nl> + } <nl> + <nl> + public void testLoadExplicitAbsolutePath ( ) { <nl> + NativeLibrary . getInstance ( new File ( BUILDDIR + " / native / testlib - truncated " ) . getAbsolutePath ( ) ) ; <nl> + } <nl> + <nl> public static interface CLibrary extends Library { <nl> int wcslen ( WString wstr ) ; <nl> int strlen ( String str ) ; <nl> diff - - git a / test / com / sun / jna / NativeLibraryTest . java b / test / com / sun / jna / NativeLibraryTest . java <nl> index 96b592b . . 73690ad 100644 <nl> - - - a / test / com / sun / jna / NativeLibraryTest . java <nl> + + + b / test / com / sun / jna / NativeLibraryTest . java <nl> @ @ - 249 , 10 + 249 , 6 @ @ public class NativeLibraryTest extends TestCase { <nl> Native . loadLibrary ( " testlib " , TestLibrary . class , options ) ; <nl> } <nl> <nl> - public void testEmbeddedLibrary ( ) { <nl> - Native . loadLibrary ( " embedded - testlib " , TestLibrary . class ) ; <nl> - } <nl> - <nl> public static void main ( String [ ] args ) { <nl> junit . textui . TestRunner . run ( NativeLibraryTest . class ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / build . xml b / build . xml <nl> index 3764e99 . . 905477c 100644 <nl> - - - a / build . xml <nl> + + + b / build . xml <nl> @ @ - 623 , 6 + 623 , 11 @ @ <nl> <nl> < target name = " dist " depends = " jar , contrib - jars , compile - tests , native , javadoc " <nl> description = " Build distribution files " > <nl> + < copy todir = " $ { dist } " > <nl> + < fileset dir = " $ { build } " > <nl> + < include name = " $ { native . jar } " / > <nl> + < / fileset > <nl> + < / copy > <nl> < jar jarfile = " $ { dist } / jna . jar " duplicate = " preserve " > <nl> < manifest > <nl> < attribute name = " Main - Class " value = " com . sun . jna . Native " / > <nl> @ @ - 655 , 6 + 660 , 8 @ @ com / sun / jna / win32 - x86 / jnidispatch . dll ; <nl> processor = x86 ; osname = win32 , <nl> com / sun / jna / win32 - amd64 / jnidispatch . dll ; <nl> processor = x86 - 64 ; osname = win32 , <nl> + com / sun / jna / w32ce - arm / jnidispatch . dll ; <nl> + processor = arm ; osname = wince , <nl> <nl> com / sun / jna / sunos - x86 / libjnidispatch . so ; <nl> processor = x86 ; osname = sunos , <nl> @ @ - 728 , 17 + 735 , 14 @ @ osname = macos , <nl> prefix = " com / sun / jna / w32ce - arm " / > <nl> < / jar > <nl> < copy todir = " $ { dist } " > <nl> - < fileset dir = " $ { build } " > <nl> - < include name = " $ { native . jar } " / > <nl> + < fileset dir = " $ { contrib } / platform / dist " > <nl> + 	 < include name = " platform . jar " / > <nl> < / fileset > <nl> - 	 < fileset dir = " $ { contrib } / platform / dist " > <nl> - 	 	 < include name = " platform . jar " / > <nl> - 	 < / fileset > <nl> < / copy > <nl> < copy todir = " $ { dist } / jnacontrib " flatten = " true " > <nl> - 	 < fileset dir = " $ { contrib } " > <nl> - 	 	 < include name = " * * / build / demo - * . jar " / > <nl> - 	 < / fileset > <nl> + < fileset dir = " $ { contrib } " > <nl> + 	 < include name = " * * / build / demo - * . jar " / > <nl> + < / fileset > <nl> < / copy > <nl> < zip zipfile = " $ { dist } / doc . zip " > <nl> < zipfileset dir = " $ { javadoc } " prefix = " javadoc " / >

TEST DIFF:
diff - - git a / CHANGES . md b / CHANGES . md 
 index 8fb2883 . . f61603c 100755 
 - - - a / CHANGES . md 
 + + + b / CHANGES . md 
 @ @ - 15 , 6 + 15 , 7 @ @ Bug Fixes 
 * Use TLS to indicate callback detach state , to avoid any potential conflicts with last error storage - [ @ twall ] ( https : / / github . com / twall ) . 
 * [ # 173 ] ( https : / / github . com / twall / jna / issues / 173 ) : Fix OSX 10 . 8 / Xcode 4 + builds , web start path with Oracle 1 . 7 JDK - [ @ mkjellman ] ( https : / / github . com / mkjellman ) . 
 * [ # 215 ] ( https : / / github . com / twall / jna / issues / 215 ) : Force use of XSI ` strerror _ r ` on linux - [ LionelCons ] ( https : / / github . com / LionelCons ) . 
 + * [ # 214 ] ( https : / / github . com / twall / jna / issues / 214 ) : Don ' t map library names when an absolute path is provided - [ @ twall ] ( https : / / github . com / twall ) . 
 
 Release 3 . 5 . 2 
 = = = = = = = = = = = = = 
 diff - - git a / build . xml b / build . xml 
 index a75a026 . . 198625c 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 725 , 26 + 725 , 26 @ @ osname = macosx ; processor = x86 ; processor = x86 - 64 ; processor = ppc 
 < src path = " $ { test . src } " / > 
 < exclude name = " $ { tests . exclude } " / > 
 < / javac > 
 - < ! - - Move ( not copy ) embedded testlib to test class folder so that it will be - - > 
 - < ! - - packaged into the test jar and NOT available in the FS - based class path - - > 
 - < move todir = " $ { test . classes } / $ { os . prefix } " > 
 + < ! - - Set up versions of test library for resource path loading - - > 
 + < copy todir = " $ { test . classes } / $ { os . prefix } " > 
 < fileset dir = " $ { build . native } " > 
 - < patternset id = " embedded - testlib " > 
 - < include name = " * * / * embedded - testlib * " / > 
 + < patternset > 
 + < include name = " * * / * testlib - jar * " / > 
 + < include name = " * * / * testlib - path * " / > 
 < / patternset > 
 < / fileset > 
 - < / move > 
 - < ! - - Create a jar for easy movement of tests , and embedded load test - - > 
 + < / copy > 
 + < ! - - Create a jar for easy movement of tests , and jar load test - - > 
 < jar jarfile = " $ { build } / $ { testjar } " > 
 < fileset dir = " $ { test . classes } " > 
 < patternset refid = " jar - compiled " / > 
 - < include name = " * * / * embedded - testlib * " / > 
 + < include name = " * * / * testlib - jar * " / > 
 < / fileset > 
 < / jar > 
 - < ! - - Ensure embedded library unavailable on FS - based class path - - > 
 + < ! - - Ensure jar - based library unavailable on FS - based class path - - > 
 < delete > 
 < fileset dir = " $ { test . classes } " > 
 - < include name = " * * / * embedded - testlib * " / > 
 + < include name = " * * / * testlib - jar * " / > 
 < / fileset > 
 < / delete > 
 < mkdir dir = " $ { build } / jws " / > 
 diff - - git a / native / Makefile b / native / Makefile 
 index 079cdd7 . . c027283 100644 
 - - - a / native / Makefile 
 + + + b / native / Makefile 
 @ @ - 67 , 7 + 67 , 9 @ @ FFI _ CONFIG = - - enable - static - - disable - shared - - with - pic = yes 
 endif 
 LIBRARY = $ ( BUILD ) / $ ( LIBPFX ) jnidispatch $ ( JNISFX ) 
 TESTLIB = $ ( BUILD ) / $ ( LIBPFX ) testlib $ ( LIBSFX ) 
 - TESTLIB _ EMBEDDED = $ ( BUILD ) / $ ( LIBPFX ) embedded - testlib $ ( LIBSFX ) 
 + TESTLIB _ JAR = $ ( BUILD ) / $ ( LIBPFX ) testlib - jar $ ( LIBSFX ) 
 + TESTLIB _ PATH = $ ( BUILD ) / $ ( LIBPFX ) testlib - path $ ( LIBSFX ) 
 + TESTLIB _ TRUNC = $ ( BUILD ) / testlib - truncated 
 TESTLIB2 = $ ( BUILD ) / $ ( LIBPFX ) testlib2 $ ( LIBSFX ) 
 
 # Reasonable defaults based on GCC 
 @ @ - 342 , 7 + 344 , 7 @ @ else 
 	 $ ( CC ) $ ( CFLAGS ) - c $ < $ ( COUT ) 
 endif 
 
 - all : $ ( LIBRARY ) $ ( TESTLIB ) $ ( TESTLIB2 ) $ ( TESTLIB _ EMBEDDED ) 
 + all : $ ( LIBRARY ) $ ( TESTLIB ) $ ( TESTLIB2 ) $ ( TESTLIB _ JAR ) $ ( TESTLIB _ PATH ) $ ( TESTLIB _ TRUNC ) 
 
 install : 
 	 mkdir $ ( INSTALLDIR ) 
 @ @ - 365 , 8 + 367 , 8 @ @ $ ( LIBRARY ) : $ ( JNIDISPATCH _ OBJS ) $ ( FFI _ LIB ) 
 $ ( TESTLIB ) : $ ( BUILD ) / testlib . o 
 	 $ ( LD ) $ ( LDFLAGS ) $ < $ ( LIBS ) 
 
 - $ ( TESTLIB _ EMBEDDED ) : $ ( BUILD ) / testlib . o 
 - 	 $ ( LD ) $ ( LDFLAGS ) $ < $ ( LIBS ) 
 + $ ( TESTLIB _ JAR ) $ ( TESTLIB _ PATH ) $ ( TESTLIB _ TRUNC ) : $ ( TESTLIB ) 
 + 	 @ cp $ < $ @ 
 
 ifeq ( $ ( ARSFX ) , . lib ) 
 TESTDEP = $ ( TESTLIB : . dll = . lib ) 
 diff - - git a / src / com / sun / jna / Native . java b / src / com / sun / jna / Native . java 
 index c608dc2 . . 5bf8b15 100644 
 - - - a / src / com / sun / jna / Native . java 
 + + + b / src / com / sun / jna / Native . java 
 @ @ - 699 , 7 + 699 , 7 @ @ public final class Native implements Version { 
 * / 
 private static void loadNativeDispatchLibraryFromClasspath ( ) { 
 try { 
 - String prefix = " com / sun / jna / " + getNativeLibraryResourcePrefix ( ) ; 
 + String prefix = " / com / sun / jna / " + getNativeLibraryResourcePrefix ( ) ; 
 File lib = extractFromResourcePath ( " jnidispatch " , prefix , Native . class . getClassLoader ( ) ) ; 
 if ( lib = = null ) { 
 throw new UnsatisfiedLinkError ( " Could not find JNA native support " ) ; 
 @ @ - 733 , 7 + 733 , 7 @ @ public final class Native implements Version { 
 * @ throws IOException if resource not found 
 * / 
 static File extractFromResourcePath ( String name ) throws IOException { 
 - return extractFromResourcePath ( name , getNativeLibraryResourcePrefix ( ) , Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 + return extractFromResourcePath ( name , " / " + getNativeLibraryResourcePrefix ( ) , Thread . currentThread ( ) . getContextClassLoader ( ) ) ; 
 } 
 
 / * * Attempt to extract a native library from the current resource path . 
 @ @ - 747 , 8 + 747 , 11 @ @ public final class Native implements Version { 
 * @ throws IOException if resource not found 
 * / 
 static File extractFromResourcePath ( String name , String resourcePrefix , ClassLoader loader ) throws IOException { 
 - String libname = System . mapLibraryName ( name ) ; 
 - String resourcePath = resourcePrefix + " / " + libname ; 
 + String libname = name . startsWith ( " / " ) ? name : System . mapLibraryName ( name ) ; 
 + String resourcePath = name . startsWith ( " / " ) ? name : resourcePrefix + " / " + libname ; 
 + if ( resourcePath . startsWith ( " / " ) ) { 
 + resourcePath = resourcePath . substring ( 1 ) ; 
 + } 
 URL url = loader . getResource ( resourcePath ) ; 
 
 / / User libraries will have ' . dylib ' 
 @ @ - 764 , 7 + 767 , 7 @ @ public final class Native implements Version { 
 url = loader . getResource ( resourcePath ) ; 
 } 
 if ( url = = null ) { 
 - throw new IOException ( " JNA native support ( " + resourcePath + " ) not found in resource path ( " + System . getProperty ( " java . class . path " ) + " ) " ) ; 
 + throw new IOException ( " Native library ( " + resourcePath + " ) not found in resource path ( " + System . getProperty ( " java . class . path " ) + " ) " ) ; 
 } 
 
 File lib = null ; 
 diff - - git a / test / com / sun / jna / LibraryLoadTest . java b / test / com / sun / jna / LibraryLoadTest . java 
 index 846192f . . 5f4a00a 100644 
 - - - a / test / com / sun / jna / LibraryLoadTest . java 
 + + + b / test / com / sun / jna / LibraryLoadTest . java 
 @ @ - 52 , 6 + 52 , 35 @ @ public class LibraryLoadTest extends TestCase { 
 } 
 } 
 
 + public interface TestLibrary extends Library { 
 + } 
 + 
 + public void testLoadFromJNALibraryPath ( ) { 
 + NativeLibrary . getInstance ( " testlib " ) ; 
 + } 
 + 
 + public void testLoadFromClasspath ( ) { 
 + NativeLibrary . getInstance ( " testlib - path " ) ; 
 + } 
 + 
 + public void testLoadFromClasspathAbsolute ( ) { 
 + String name = System . mapLibraryName ( " testlib - path " ) . replace ( " . jnilib " , " . dylib " ) ; 
 + NativeLibrary . getInstance ( " / " + Platform . RESOURCE _ PREFIX + " / " + name ) ; 
 + } 
 + 
 + public void testLoadFromJar ( ) { 
 + NativeLibrary . getInstance ( " testlib - jar " ) ; 
 + } 
 + 
 + public void testLoadFromJarAbsolute ( ) { 
 + String name = System . mapLibraryName ( " testlib - jar " ) . replace ( " . jnilib " , " . dylib " ) ; 
 + NativeLibrary . getInstance ( " / " + Platform . RESOURCE _ PREFIX + " / " + name ) ; 
 + } 
 + 
 + public void testLoadExplicitAbsolutePath ( ) { 
 + NativeLibrary . getInstance ( new File ( BUILDDIR + " / native / testlib - truncated " ) . getAbsolutePath ( ) ) ; 
 + } 
 + 
 public static interface CLibrary extends Library { 
 int wcslen ( WString wstr ) ; 
 int strlen ( String str ) ; 
 diff - - git a / test / com / sun / jna / NativeLibraryTest . java b / test / com / sun / jna / NativeLibraryTest . java 
 index 96b592b . . 73690ad 100644 
 - - - a / test / com / sun / jna / NativeLibraryTest . java 
 + + + b / test / com / sun / jna / NativeLibraryTest . java 
 @ @ - 249 , 10 + 249 , 6 @ @ public class NativeLibraryTest extends TestCase { 
 Native . loadLibrary ( " testlib " , TestLibrary . class , options ) ; 
 } 
 
 - public void testEmbeddedLibrary ( ) { 
 - Native . loadLibrary ( " embedded - testlib " , TestLibrary . class ) ; 
 - } 
 - 
 public static void main ( String [ ] args ) { 
 junit . textui . TestRunner . run ( NativeLibraryTest . class ) ; 
 }

NEAREST DIFF:
diff - - git a / build . xml b / build . xml 
 index 3764e99 . . 905477c 100644 
 - - - a / build . xml 
 + + + b / build . xml 
 @ @ - 623 , 6 + 623 , 11 @ @ 
 
 < target name = " dist " depends = " jar , contrib - jars , compile - tests , native , javadoc " 
 description = " Build distribution files " > 
 + < copy todir = " $ { dist } " > 
 + < fileset dir = " $ { build } " > 
 + < include name = " $ { native . jar } " / > 
 + < / fileset > 
 + < / copy > 
 < jar jarfile = " $ { dist } / jna . jar " duplicate = " preserve " > 
 < manifest > 
 < attribute name = " Main - Class " value = " com . sun . jna . Native " / > 
 @ @ - 655 , 6 + 660 , 8 @ @ com / sun / jna / win32 - x86 / jnidispatch . dll ; 
 processor = x86 ; osname = win32 , 
 com / sun / jna / win32 - amd64 / jnidispatch . dll ; 
 processor = x86 - 64 ; osname = win32 , 
 + com / sun / jna / w32ce - arm / jnidispatch . dll ; 
 + processor = arm ; osname = wince , 
 
 com / sun / jna / sunos - x86 / libjnidispatch . so ; 
 processor = x86 ; osname = sunos , 
 @ @ - 728 , 17 + 735 , 14 @ @ osname = macos , 
 prefix = " com / sun / jna / w32ce - arm " / > 
 < / jar > 
 < copy todir = " $ { dist } " > 
 - < fileset dir = " $ { build } " > 
 - < include name = " $ { native . jar } " / > 
 + < fileset dir = " $ { contrib } / platform / dist " > 
 + 	 < include name = " platform . jar " / > 
 < / fileset > 
 - 	 < fileset dir = " $ { contrib } / platform / dist " > 
 - 	 	 < include name = " platform . jar " / > 
 - 	 < / fileset > 
 < / copy > 
 < copy todir = " $ { dist } / jnacontrib " flatten = " true " > 
 - 	 < fileset dir = " $ { contrib } " > 
 - 	 	 < include name = " * * / build / demo - * . jar " / > 
 - 	 < / fileset > 
 + < fileset dir = " $ { contrib } " > 
 + 	 < include name = " * * / build / demo - * . jar " / > 
 + < / fileset > 
 < / copy > 
 < zip zipfile = " $ { dist } / doc . zip " > 
 < zipfileset dir = " $ { javadoc } " prefix = " javadoc " / >
