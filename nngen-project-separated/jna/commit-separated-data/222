BLEU SCORE: 0.03283637368030199

TEST MSG: Avoid overwriting test results from different platforms
GENERATED MSG: revise temporary file cleanup on win32

TEST DIFF (one line): diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml <nl> index 5aa5ece . . 65fd1c1 100644 <nl> - - - a / contrib / platform / build . xml <nl> + + + b / contrib / platform / build . xml <nl> @ @ - 108 , 9 + 108 , 10 @ @ com . sun . jna . platform . wince <nl> < target name = " test " depends = " init , compile , compile - test , - pre - test - run " description = " Run platform unit tests . " > <nl> < echo > Running platform tests : $ { test . src . dir } < / echo > <nl> < property name = " test . fork " value = " yes " / > <nl> - < property name = " build . test . results . dir . abs " location = " $ { build . test . results . dir } " / > <nl> - < mkdir dir = " $ { build . test . results . dir . abs } " / > <nl> - < echo > Saving test results in $ { build . test . results . dir . abs } < / echo > <nl> + < property name = " reports . junit " location = " $ { build } / reports / junit / $ { os . prefix } " / > <nl> + < property name = " results . junit " location = " $ { build } / junit - results / $ { os . prefix } " / > <nl> + < mkdir dir = " $ { results . junit } " / > <nl> + < echo > Saving test results in $ { results . junit } < / echo > <nl> < condition property = " tests . platform " value = " * * / mac / * * / * Test . java " > <nl> < os family = " mac " / > <nl> < / condition > <nl> @ @ - 151 , 7 + 152 , 7 @ @ com . sun . jna . platform . wince <nl> < classpath > < path path = " $ { run . test . classpath } " / > < path path = " $ { file . reference . jna . build } / test - classes " / > < / classpath > <nl> < formatter type = " brief " usefile = " false " / > <nl> < formatter type = " xml " / > <nl> - < batchtest todir = " $ { build . test . results . dir } " > <nl> + < batchtest todir = " $ { results . junit } " > <nl> < fileset dir = " $ { test . src . dir } " excludes = " $ { tests . exclude - patterns } " > <nl> < ! - - Until StructureFieldOrderTest gets fixed up a little - - > <nl> < exclude name = " * * / StructureFieldOrderTest . java " / > <nl> @ @ - 161 , 13 + 162 , 13 @ @ com . sun . jna . platform . wince <nl> < / fileset > <nl> < / batchtest > <nl> < / junit > <nl> - < junitreport todir = " $ { build . test . results . dir } " > <nl> - 	 < fileset dir = " $ { build . test . results . dir } " > <nl> + < junitreport todir = " $ { results . junit } " > <nl> + 	 < fileset dir = " $ { results . junit } " > <nl> 	 < include name = " TEST - * . xml " / > <nl> 	 < / fileset > <nl> - 	 < report todir = " $ { build . test . results . dir } " / > <nl> + 	 < report todir = " $ { reports . junit } " / > <nl> < / junitreport > <nl> - < echo message = " View test report in file : / / $ { build . test . results . dir . abs } / index . html " / > <nl> + < echo message = " View test report in file : / / $ { reports . junit } / index . html " / > <nl> < fail if = " testfailure " > One or more tests failed < / fail > <nl> < / target > <nl> <nl> diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> index 7ba2413 . . 609166e 100644 <nl> - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java <nl> @ @ - 36 , 7 + 36 , 8 @ @ import junit . framework . TestCase ; <nl> * / <nl> public class Shell32Test extends TestCase { <nl> <nl> - private static final int RESIZE _ HEIGHT = 500 ; <nl> + / / avoid disrupting the screen _ too _ much <nl> + private static final int RESIZE _ DELTA = 10 ; <nl> private static final int WM _ USER = 0x0400 ; <nl> <nl> public static void main ( String [ ] args ) { <nl> @ @ - 46 , 8 + 47 , 8 @ @ public class Shell32Test extends TestCase { <nl> public void testSHGetFolderPath ( ) { <nl> 	 char [ ] pszPath = new char [ WinDef . MAX _ PATH ] ; <nl> 	 assertEquals ( W32Errors . S _ OK , Shell32 . INSTANCE . SHGetFolderPath ( null , <nl> - 	 	 	 ShlObj . CSIDL _ PROGRAM _ FILES , null , ShlObj . SHGFP _ TYPE _ CURRENT , <nl> - 	 	 	 pszPath ) ) ; <nl> + ShlObj . CSIDL _ PROGRAM _ FILES , null , ShlObj . SHGFP _ TYPE _ CURRENT , <nl> + pszPath ) ) ; <nl> 	 assertTrue ( Native . toString ( pszPath ) . length ( ) > 0 ) ; <nl> } <nl> <nl> @ @ - 98 , 7 + 99 , 7 @ @ public class Shell32Test extends TestCase { <nl> APPBARDATA data = new APPBARDATA . ByReference ( ) ; <nl> <nl> data . uEdge . setValue ( ShellAPI . ABE _ BOTTOM ) ; <nl> - data . rc . top = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CYFULLSCREEN ) - RESIZE _ HEIGHT ; <nl> + data . rc . top = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CYFULLSCREEN ) - RESIZE _ DELTA ; <nl> data . rc . left = 0 ; <nl> data . rc . bottom = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CYFULLSCREEN ) ; <nl> data . rc . right = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CXFULLSCREEN ) ; <nl> @ @ - 121 , 7 + 122 , 7 @ @ public class Shell32Test extends TestCase { <nl> data . uEdge . setValue ( ShellAPI . ABE _ TOP ) ; <nl> data . rc . top = 0 ; <nl> data . rc . left = 0 ; <nl> - data . rc . bottom = RESIZE _ HEIGHT ; <nl> + data . rc . bottom = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CXFULLSCREEN ) - RESIZE _ DELTA ; <nl> data . rc . right = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CXFULLSCREEN ) ; <nl> <nl> queryPos ( data ) ; <nl> @ @ - 135 , 93 + 136 , 93 @ @ public class Shell32Test extends TestCase { <nl> <nl> } <nl> <nl> - 	 public void testSHGetKnownFolderPath ( ) { <nl> - 	 	 int flags = ShlObj . KNOWN _ FOLDER _ FLAG . NONE . getFlag ( ) ; <nl> - 	 	 PointerByReference outPath = new PointerByReference ( ) ; <nl> - 	 	 HANDLE token = null ; <nl> - 	 	 GUID guid = KnownFolders . FOLDERID _ Fonts ; <nl> - 	 	 HRESULT hr = Shell32 . INSTANCE . SHGetKnownFolderPath ( guid , flags , token , outPath ) ; <nl> - <nl> - 	 	 Ole32 . INSTANCE . CoTaskMemFree ( outPath . getValue ( ) ) ; <nl> - <nl> - 	 	 assertTrue ( W32Errors . SUCCEEDED ( hr . intValue ( ) ) ) ; <nl> - 	 } <nl> - <nl> - 	 public void testSHEmptyRecycleBin ( ) { <nl> - 	 	 File file = new File ( System . getProperty ( " java . io . tmpdir " ) , System . nanoTime ( ) + " . txt " ) ; <nl> - 	 	 try { <nl> - 	 	 	 / / Create a file and immediately send it to the recycle bin . <nl> - 	 	 	 try { <nl> - 	 	 	 	 fillTempFile ( file ) ; <nl> - 	 	 	 	 W32FileUtils . getInstance ( ) . moveToTrash ( new File [ ] { file } ) ; <nl> - 	 	 	 } catch ( IOException e ) { <nl> - 	 	 	 	 throw new RuntimeException ( e ) ; <nl> - 	 	 	 } <nl> - <nl> - 	 	 	 int result = Shell32 . INSTANCE . SHEmptyRecycleBin ( null , null , <nl> - 	 	 	 	 	 Shell32 . SHERB _ NOCONFIRMATION | Shell32 . SHERB _ NOPROGRESSUI | Shell32 . SHERB _ NOSOUND ) ; <nl> - 	 	 	 / / for reasons I can not find documented on MSDN , <nl> - 	 	 	 / / the function returns the following : <nl> - 	 	 	 / / 0 when the recycle bin has items in it <nl> - 	 	 	 / / - 2147418113 when the recycle bin has no items in it <nl> - 	 	 	 assertEquals ( " Result should have been ERROR _ SUCCESS when emptying Recycle Bin - there should have been a file in it . " , <nl> - 	 	 	 	 	 W32Errors . ERROR _ SUCCESS , result ) ; <nl> - 	 	 } finally { <nl> - 	 	 	 / / if the file wasn ' t sent to the recycle bin , delete it . <nl> - 	 	 	 if ( file . exists ( ) ) { <nl> - 	 	 	 	 file . delete ( ) ; <nl> - 	 	 	 } <nl> - 	 	 } <nl> - 	 } <nl> - <nl> - 	 public void testShellExecuteEx ( ) { <nl> - 	 	 File file = new File ( System . getProperty ( " java . io . tmpdir " ) , System . nanoTime ( ) + " . txt " ) ; <nl> - 	 	 try { <nl> - 	 	 	 try { <nl> - 	 	 	 	 fillTempFile ( file ) ; <nl> - 	 	 	 } catch ( IOException e ) { <nl> - 	 	 	 	 throw new RuntimeException ( e ) ; <nl> - 	 	 	 } <nl> - <nl> - 	 	 	 SHELLEXECUTEINFO lpExecInfo = new SHELLEXECUTEINFO ( ) ; <nl> - 	 	 	 / / to avoid opening something and having hProcess come up null <nl> - 	 	 	 / / ( meaning we opened something but can ' t close it ) <nl> - 	 	 	 / / we will do a negative test with a bogus action . <nl> - 	 	 	 lpExecInfo . lpVerb = " 0p3n " ; <nl> - 	 	 	 lpExecInfo . nShow = User32 . SW _ SHOWDEFAULT ; <nl> - 	 	 	 lpExecInfo . fMask = Shell32 . SEE _ MASK _ NOCLOSEPROCESS | Shell32 . SEE _ MASK _ FLAG _ NO _ UI ; <nl> - 	 	 	 lpExecInfo . lpFile = file . getAbsolutePath ( ) ; <nl> - <nl> - 	 	 	 assertFalse ( " ShellExecuteEx should have returned false - action verb was bogus . " , <nl> - 	 	 	 	 	 Shell32 . INSTANCE . ShellExecuteEx ( lpExecInfo ) ) ; <nl> - 	 	 	 assertEquals ( " GetLastError ( ) should have been set to ERROR _ NO _ ASSOCIATION because of bogus action " , <nl> - 	 	 	 	 	 W32Errors . ERROR _ NO _ ASSOCIATION , Native . getLastError ( ) ) ; <nl> - 	 	 } finally { <nl> - 	 	 	 if ( file . exists ( ) ) { <nl> - 	 	 	 	 file . delete ( ) ; <nl> - 	 	 	 } <nl> - 	 	 } <nl> - <nl> - 	 } <nl> - <nl> - 	 / * * <nl> - 	 * Creates ( if needed ) and fills the specified file with some content ( 10 lines of the same text ) <nl> - 	 * <nl> - 	 * @ param file <nl> - 	 * The file to fill with content <nl> - 	 * @ throws IOException <nl> - 	 * If writing the content fails <nl> - 	 * / <nl> - 	 private void fillTempFile ( File file ) throws IOException { <nl> - 	 	 file . createNewFile ( ) ; <nl> - 	 	 FileWriter fileWriter = new FileWriter ( file ) ; <nl> - 	 	 try { <nl> - 	 	 	 for ( int i = 0 ; i < 10 ; i + + ) { <nl> - 	 	 	 	 fileWriter . write ( " Sample line of text " ) ; <nl> - 	 	 	 	 fileWriter . write ( System . getProperty ( " line . separator " ) ) ; <nl> - 	 	 	 } <nl> - 	 	 } finally { <nl> - 	 	 	 fileWriter . close ( ) ; <nl> - 	 	 } <nl> - 	 } <nl> + public void testSHGetKnownFolderPath ( ) { <nl> + int flags = ShlObj . KNOWN _ FOLDER _ FLAG . NONE . getFlag ( ) ; <nl> + PointerByReference outPath = new PointerByReference ( ) ; <nl> + HANDLE token = null ; <nl> + GUID guid = KnownFolders . FOLDERID _ Fonts ; <nl> + HRESULT hr = Shell32 . INSTANCE . SHGetKnownFolderPath ( guid , flags , token , outPath ) ; <nl> + <nl> + Ole32 . INSTANCE . CoTaskMemFree ( outPath . getValue ( ) ) ; <nl> + <nl> + assertTrue ( W32Errors . SUCCEEDED ( hr . intValue ( ) ) ) ; <nl> + } <nl> + <nl> + public void testSHEmptyRecycleBin ( ) { <nl> + File file = new File ( System . getProperty ( " java . io . tmpdir " ) , System . nanoTime ( ) + " . txt " ) ; <nl> + try { <nl> + / / Create a file and immediately send it to the recycle bin . <nl> + try { <nl> + fillTempFile ( file ) ; <nl> + W32FileUtils . getInstance ( ) . moveToTrash ( new File [ ] { file } ) ; <nl> + } catch ( IOException e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + <nl> + int result = Shell32 . INSTANCE . SHEmptyRecycleBin ( null , null , <nl> + Shell32 . SHERB _ NOCONFIRMATION | Shell32 . SHERB _ NOPROGRESSUI | Shell32 . SHERB _ NOSOUND ) ; <nl> + / / for reasons I can not find documented on MSDN , <nl> + / / the function returns the following : <nl> + / / 0 when the recycle bin has items in it <nl> + / / - 2147418113 when the recycle bin has no items in it <nl> + assertEquals ( " Result should have been ERROR _ SUCCESS when emptying Recycle Bin - there should have been a file in it . " , <nl> + W32Errors . ERROR _ SUCCESS , result ) ; <nl> + } finally { <nl> + / / if the file wasn ' t sent to the recycle bin , delete it . <nl> + if ( file . exists ( ) ) { <nl> + file . delete ( ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + public void testShellExecuteEx ( ) { <nl> + File file = new File ( System . getProperty ( " java . io . tmpdir " ) , System . nanoTime ( ) + " . txt " ) ; <nl> + try { <nl> + try { <nl> + fillTempFile ( file ) ; <nl> + } catch ( IOException e ) { <nl> + throw new RuntimeException ( e ) ; <nl> + } <nl> + <nl> + SHELLEXECUTEINFO lpExecInfo = new SHELLEXECUTEINFO ( ) ; <nl> + / / to avoid opening something and having hProcess come up null <nl> + / / ( meaning we opened something but can ' t close it ) <nl> + / / we will do a negative test with a bogus action . <nl> + lpExecInfo . lpVerb = " 0p3n " ; <nl> + lpExecInfo . nShow = User32 . SW _ SHOWDEFAULT ; <nl> + lpExecInfo . fMask = Shell32 . SEE _ MASK _ NOCLOSEPROCESS | Shell32 . SEE _ MASK _ FLAG _ NO _ UI ; <nl> + lpExecInfo . lpFile = file . getAbsolutePath ( ) ; <nl> + <nl> + assertFalse ( " ShellExecuteEx should have returned false - action verb was bogus . " , <nl> + Shell32 . INSTANCE . ShellExecuteEx ( lpExecInfo ) ) ; <nl> + assertEquals ( " GetLastError ( ) should have been set to ERROR _ NO _ ASSOCIATION because of bogus action " , <nl> + W32Errors . ERROR _ NO _ ASSOCIATION , Native . getLastError ( ) ) ; <nl> + } finally { <nl> + if ( file . exists ( ) ) { <nl> + file . delete ( ) ; <nl> + } <nl> + } <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * Creates ( if needed ) and fills the specified file with some content ( 10 lines of the same text ) <nl> + * <nl> + * @ param file <nl> + * The file to fill with content <nl> + * @ throws IOException <nl> + * If writing the content fails <nl> + * / <nl> + private void fillTempFile ( File file ) throws IOException { <nl> + file . createNewFile ( ) ; <nl> + FileWriter fileWriter = new FileWriter ( file ) ; <nl> + try { <nl> + for ( int i = 0 ; i < 10 ; i + + ) { <nl> + fileWriter . write ( " Sample line of text " ) ; <nl> + fileWriter . write ( System . getProperty ( " line . separator " ) ) ; <nl> + } <nl> + } finally { <nl> + fileWriter . close ( ) ; <nl> + } <nl> + } <nl> }
NEAREST DIFF (one line): diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> index 2143425 . . f7c8611 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java <nl> @ @ - 25 , 7 + 25 , 6 @ @ import com . sun . jna . platform . win32 . WinNT . HANDLEByReference ; <nl> import com . sun . jna . platform . win32 . WinNT . LARGE _ INTEGER ; <nl> import com . sun . jna . platform . win32 . WinNT . OSVERSIONINFO ; <nl> import com . sun . jna . platform . win32 . WinNT . OSVERSIONINFOEX ; <nl> - import com . sun . jna . platform . win32 . structures . PROCESSENTRY32W ; <nl> import com . sun . jna . ptr . ByReference ; <nl> import com . sun . jna . ptr . IntByReference ; <nl> import com . sun . jna . ptr . LongByReference ; <nl> @ @ - 1385 , 7 + 1384 , 7 @ @ public interface Kernel32 extends StdCallLibrary { <nl> * ERROR _ NO _ MORE _ FILES error value is returned by the GetLastError function if no processes exist or the snapshot <nl> * does not contain process information . <nl> * / <nl> - boolean Process32FirstW ( HANDLE hSnapshot , PROCESSENTRY32W . ByReference lppe ) ; <nl> + boolean Process32FirstW ( HANDLE hSnapshot , Tlhelp32 . PROCESSENTRY32W . ByReference lppe ) ; <nl> <nl> / * * <nl> * Retrieves information about the next process recorded in a system snapshot . <nl> @ @ - 1397 , 5 + 1396 , 5 @ @ public interface Kernel32 extends StdCallLibrary { <nl> * ERROR _ NO _ MORE _ FILES error value is returned by the GetLastError function if no processes exist or the snapshot <nl> * does not contain process information . <nl> * / <nl> - boolean Process32NextW ( HANDLE hSnapshot , PROCESSENTRY32W . ByReference lppe ) ; <nl> + boolean Process32NextW ( HANDLE hSnapshot , Tlhelp32 . PROCESSENTRY32W . ByReference lppe ) ; <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Msi . java b / contrib / platform / src / com / sun / jna / platform / win32 / Msi . java <nl> new file mode 100644 <nl> index 0000000 . . c263a43 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Msi . java <nl> @ @ - 0 , 0 + 1 , 39 @ @ <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . WString ; <nl> + import com . sun . jna . ptr . IntByReference ; <nl> + import com . sun . jna . win32 . StdCallLibrary ; <nl> + import com . sun . jna . win32 . W32APIOptions ; <nl> + <nl> + / * * <nl> + * Provides access to the w32 MSI installer library . <nl> + * / <nl> + public interface Msi extends StdCallLibrary { <nl> + <nl> + Msi INSTANCE = ( Msi ) <nl> + Native . loadLibrary ( " msi " , Msi . class , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> + <nl> + static int INSTALLSTATE _ NOTUSED = - 7 ; <nl> + static int INSTALLSTATE _ BADCONFIG = - 6 ; <nl> + static int INSTALLSTATE _ INCOMPLETE = - 5 ; <nl> + static int INSTALLSTATE _ SOURCEABSENT = - 4 ; <nl> + static int INSTALLSTATE _ MOREDATA = - 3 ; <nl> + static int INSTALLSTATE _ INVALIDARG = - 2 ; <nl> + static int INSTALLSTATE _ UNKNOWN = - 1 ; <nl> + static int INSTALLSTATE _ BROKEN = 0 ; <nl> + static int INSTALLSTATE _ ADVERTISED = 1 ; <nl> + static int INSTALLSTATE _ REMOVED = 1 ; <nl> + static int INSTALLSTATE _ ABSENT = 2 ; <nl> + static int INSTALLSTATE _ LOCAL = 3 ; <nl> + static int INSTALLSTATE _ SOURCE = 4 ; <nl> + static int INSTALLSTATE _ DEFAULT = 5 ; <nl> + <nl> + int MsiGetComponentPathW ( WString szProduct , WString szComponent , char [ ] lpPathBuf , IntByReference pcchBuf ) ; <nl> + <nl> + int MsiLocateComponentW ( WString szComponent , char [ ] lpPathBuf , IntByReference pcchBuf ) ; <nl> + <nl> + int MsiGetProductCodeW ( WString szComponent , char [ ] lpProductBuf ) ; <nl> + <nl> + int MsiEnumComponents ( WinDef . DWORD iComponentIndex , char [ ] lpComponentBuf ) ; <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java b / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java <nl> new file mode 100644 <nl> index 0000000 . . 5dacf90 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java <nl> @ @ - 0 , 0 + 1 , 97 @ @ <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . Structure ; <nl> + import com . sun . jna . ptr . IntByReference ; <nl> + import com . sun . jna . win32 . StdCallLibrary ; <nl> + import com . sun . jna . win32 . W32APIOptions ; <nl> + <nl> + public interface SetupApi extends StdCallLibrary { <nl> + <nl> + SetupApi INSTANCE = ( SetupApi ) <nl> + Native . loadLibrary ( " setupapi " , SetupApi . class , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> + <nl> + public static Guid . GUID GUID _ DEVINTERFACE _ DISK = new Guid . GUID ( new byte [ ] <nl> + { <nl> + 0x07 , 0x63 , ( byte ) 0xf5 , 0x53 , ( byte ) 0xbf , ( byte ) 0xb6 , ( byte ) 0xd0 , 0x11 , <nl> + ( byte ) 0x94 , ( byte ) 0xf2 , 0x00 , ( byte ) 0xa0 , ( byte ) 0xc9 , ( byte ) 0x1e , ( byte ) 0xfb , ( byte ) 0x8b <nl> + } ) ; <nl> + <nl> + public int DIGCF _ DEFAULT = 0x1 ; <nl> + public int DIGCF _ PRESENT = 0x2 ; <nl> + public int DIGCF _ ALLCLASSES = 0x4 ; <nl> + public int DIGCF _ PROFILE = 0x8 ; <nl> + public int DIGCF _ DEVICEINTERFACE = 0x10 ; <nl> + <nl> + public int SPDRP _ REMOVAL _ POLICY = 0x0000001F ; <nl> + public int CM _ DEVCAP _ REMOVABLE = 0x00000004 ; <nl> + <nl> + WinNT . HANDLE SetupDiGetClassDevs ( Guid . GUID . ByReference classGuid , Pointer enumerator , Pointer hwndParent , int flags ) ; <nl> + <nl> + boolean SetupDiDestroyDeviceInfoList ( WinNT . HANDLE hDevInfo ) ; <nl> + <nl> + boolean SetupDiEnumDeviceInterfaces ( WinNT . HANDLE hDevInfo , Pointer devInfo , Guid . GUID . ByReference interfaceClassGuid , <nl> + int memberIndex , SP _ DEVICE _ INTERFACE _ DATA . ByReference deviceInterfaceData ) ; <nl> + <nl> + boolean SetupDiGetDeviceInterfaceDetail ( WinNT . HANDLE hDevInfo , SP _ DEVICE _ INTERFACE _ DATA . ByReference deviceInterfaceData , <nl> + Pointer deviceInterfaceDetailData , int deviceInterfaceDetailDataSize , <nl> + IntByReference requiredSize , SP _ DEVINFO _ DATA . ByReference deviceInfoData ) ; <nl> + <nl> + boolean SetupDiGetDeviceRegistryProperty ( WinNT . HANDLE DeviceInfoSet , SP _ DEVINFO _ DATA . ByReference DeviceInfoData , int Property , <nl> + IntByReference PropertyRegDataType , Pointer PropertyBuffer , int PropertyBufferSize , <nl> + IntByReference RequiredSize ) ; <nl> + <nl> + public static class SP _ DEVICE _ INTERFACE _ DATA extends Structure { <nl> + <nl> + public static class ByReference extends SP _ DEVINFO _ DATA implements Structure . ByReference { <nl> + public ByReference ( ) { <nl> + } <nl> + <nl> + public ByReference ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + } <nl> + <nl> + public SP _ DEVICE _ INTERFACE _ DATA ( ) { <nl> + cbSize = size ( ) ; <nl> + } <nl> + <nl> + public SP _ DEVICE _ INTERFACE _ DATA ( Pointer memory ) { <nl> + useMemory ( memory ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public int cbSize ; <nl> + public Guid . GUID InterfaceClassGuid ; <nl> + public int Flags ; <nl> + public Pointer Reserved ; <nl> + } <nl> + <nl> + public static class SP _ DEVINFO _ DATA extends Structure { <nl> + <nl> + public static class ByReference extends SP _ DEVINFO _ DATA implements Structure . ByReference { <nl> + public ByReference ( ) { <nl> + } <nl> + <nl> + public ByReference ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + } <nl> + <nl> + public SP _ DEVINFO _ DATA ( ) { <nl> + cbSize = size ( ) ; <nl> + } <nl> + <nl> + public SP _ DEVINFO _ DATA ( Pointer memory ) { <nl> + useMemory ( memory ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public int cbSize ; <nl> + public Guid . GUID InterfaceClassGuid ; <nl> + public int Flags ; <nl> + public Pointer Reserved ; <nl> + } <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Tlhelp32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Tlhelp32 . java <nl> new file mode 100644 <nl> index 0000000 . . 918b6a0 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Tlhelp32 . java <nl> @ @ - 0 , 0 + 1 , 40 @ @ <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . Structure ; <nl> + import com . sun . jna . win32 . StdCallLibrary ; <nl> + <nl> + public interface Tlhelp32 extends StdCallLibrary { <nl> + <nl> + public static class PROCESSENTRY32W extends Structure { <nl> + <nl> + public static class ByReference extends PROCESSENTRY32W implements Structure . ByReference { <nl> + public ByReference ( ) { <nl> + } <nl> + <nl> + public ByReference ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + } <nl> + <nl> + public PROCESSENTRY32W ( ) { <nl> + dwSize = new WinDef . DWORD ( size ( ) ) ; <nl> + } <nl> + <nl> + public PROCESSENTRY32W ( Pointer memory ) { <nl> + useMemory ( memory ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public WinDef . DWORD dwSize ; <nl> + public WinDef . DWORD cntUsage ; <nl> + public WinDef . DWORD th32ProcessID ; <nl> + public BaseTSD . ULONG _ PTR th32DefaultHeapID ; <nl> + public WinDef . DWORD th32ModuleID ; <nl> + public WinDef . DWORD cntThreads ; <nl> + public WinDef . DWORD th32ParentProcessID ; <nl> + public WinDef . LONG pcPriClassBase ; <nl> + public WinDef . DWORD dwFlags ; <nl> + public char [ ] szExeFile = new char [ WinDef . MAX _ PATH ] ; <nl> + } <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> index f3ec1fa . . d7bd11a 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java <nl> @ @ - 28 , 7 + 28 , 6 @ @ import com . sun . jna . platform . win32 . WinDef . WPARAM ; <nl> import com . sun . jna . platform . win32 . WinNT . HANDLE ; <nl> import com . sun . jna . platform . win32 . WinUser . BLENDFUNCTION ; <nl> import com . sun . jna . platform . win32 . WinUser . FLASHWINFO ; <nl> - import com . sun . jna . platform . win32 . structures . INPUT ; <nl> import com . sun . jna . platform . win32 . WinUser . GUITHREADINFO ; <nl> import com . sun . jna . platform . win32 . WinUser . HHOOK ; <nl> import com . sun . jna . platform . win32 . WinUser . HOOKPROC ; <nl> @ @ - 915 , 7 + 914 , 7 @ @ public interface User32 extends StdCallLibrary { <nl> * This function fails when it is blocked by UIPI . Note that neither GetLastError nor the return value will <nl> * indicate the failure was caused by UIPI blocking . <nl> * / <nl> - DWORD SendInput ( DWORD nInputs , INPUT [ ] pInputs , int cbSize ) ; <nl> + DWORD SendInput ( DWORD nInputs , WinUser . INPUT [ ] pInputs , int cbSize ) ; <nl> <nl> / * * <nl> * Waits until the specified process has finished processing its initial input and is waiting for user input with no <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / VerRsrc . java b / contrib / platform / src / com / sun / jna / platform / win32 / VerRsrc . java <nl> new file mode 100644 <nl> index 0000000 . . 1c3b50b <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / VerRsrc . java <nl> @ @ - 0 , 0 + 1 , 42 @ @ <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . Structure ; <nl> + import com . sun . jna . win32 . StdCallLibrary ; <nl> + <nl> + public interface VerRsrc extends StdCallLibrary { <nl> + <nl> + public static class VS _ FIXEDFILEINFO extends Structure { <nl> + <nl> + public static class ByReference extends VS _ FIXEDFILEINFO implements Structure . ByReference { <nl> + public ByReference ( ) { <nl> + } <nl> + <nl> + public ByReference ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + } <nl> + <nl> + public VS _ FIXEDFILEINFO ( ) { <nl> + } <nl> + <nl> + public VS _ FIXEDFILEINFO ( Pointer memory ) { <nl> + useMemory ( memory ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public int Signature ; <nl> + public int StrucVersion ; <nl> + public int FileVersionMS ; <nl> + public int FileVersionLS ; <nl> + public int ProductVersionMS ; <nl> + public int ProductVersionLS ; <nl> + public int FileFlagsMask ; <nl> + public int FileFlags ; <nl> + public int FileOS ; <nl> + public int FileType ; <nl> + public int FileSubtype ; <nl> + public int FileDateMS ; <nl> + public int FileDateLS ; <nl> + } <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Version . java b / contrib / platform / src / com / sun / jna / platform / win32 / Version . java <nl> new file mode 100644 <nl> index 0000000 . . f2a1727 <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Version . java <nl> @ @ - 0 , 0 + 1 , 23 @ @ <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Native ; <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . ptr . IntByReference ; <nl> + import com . sun . jna . ptr . PointerByReference ; <nl> + import com . sun . jna . win32 . StdCallLibrary ; <nl> + import com . sun . jna . win32 . W32APIOptions ; <nl> + <nl> + / * * <nl> + * Provides access to the w32 version library . <nl> + * / <nl> + public interface Version extends StdCallLibrary { <nl> + <nl> + Version INSTANCE = ( Version ) <nl> + Native . loadLibrary ( " version " , Version . class , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> + <nl> + int GetFileVersionInfoSize ( String lptstrFilename , IntByReference lpdwHandle ) ; <nl> + <nl> + boolean GetFileVersionInfo ( String lptstrFilename , int dwHandle , int dwLen , Pointer lpData ) ; <nl> + <nl> + boolean VerQueryValue ( Pointer pBlock , String lpSubBlock , PointerByReference lplpBuffer , IntByReference puLen ) ; <nl> + } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> index 74eabcf . . a35a9db 100644 <nl> - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java <nl> @ @ - 14 , 6 + 14 , 7 @ @ package com . sun . jna . platform . win32 ; <nl> <nl> import com . sun . jna . Pointer ; <nl> import com . sun . jna . Structure ; <nl> + import com . sun . jna . Union ; <nl> import com . sun . jna . platform . win32 . BaseTSD . ULONG _ PTR ; <nl> import com . sun . jna . platform . win32 . WinDef . HWND ; <nl> import com . sun . jna . platform . win32 . WinDef . LPARAM ; <nl> @ @ - 300 , 4 + 301 , 188 @ @ public interface WinUser extends StdCallLibrary { <nl> 	 public int SM _ SHUTTINGDOWN = 0x2000 ; <nl> 	 public int SM _ REMOTECONTROL = 0x2001 ; <nl> 	 public int SM _ CARETBLINKINGENABLED = 0x2002 ; <nl> + <nl> + / * * <nl> + * Contains information about a simulated message generated by an input device other than a keyboard or mouse . <nl> + * / <nl> + public static class HARDWAREINPUT extends Structure { <nl> + <nl> + public static class ByReference extends HARDWAREINPUT implements Structure . ByReference { <nl> + public ByReference ( ) { <nl> + } <nl> + <nl> + public ByReference ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + } <nl> + <nl> + public HARDWAREINPUT ( ) { <nl> + setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> + } <nl> + <nl> + public HARDWAREINPUT ( Pointer memory ) { <nl> + setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> + useMemory ( memory ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public WinDef . DWORD uMsg ; <nl> + public WinDef . WORD wParamL ; <nl> + public WinDef . WORD wParamH ; <nl> + } <nl> + <nl> + / * * <nl> + * Used by SendInput to store information for synthesizing input events such as keystrokes , mouse movement , and mouse <nl> + * clicks . <nl> + * / <nl> + public static class INPUT extends Structure { <nl> + <nl> + public static final int INPUT _ MOUSE = 0 ; <nl> + public static final int INPUT _ KEYBOARD = 1 ; <nl> + public static final int INPUT _ HARDWARE = 2 ; <nl> + <nl> + public static class ByReference extends INPUT implements Structure . ByReference { <nl> + public ByReference ( ) { <nl> + } <nl> + <nl> + public ByReference ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + } <nl> + <nl> + public INPUT ( ) { <nl> + setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> + } <nl> + <nl> + public INPUT ( Pointer memory ) { <nl> + setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> + useMemory ( memory ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public WinDef . DWORD type ; <nl> + public INPUT _ UNION input = new INPUT _ UNION ( ) ; <nl> + <nl> + public static class INPUT _ UNION extends Union { <nl> + <nl> + public INPUT _ UNION ( ) { <nl> + } <nl> + <nl> + public INPUT _ UNION ( Pointer memory ) { <nl> + useMemory ( memory ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public MOUSEINPUT mi ; <nl> + public KEYBDINPUT ki ; <nl> + public HARDWAREINPUT hi ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Contains information about a simulated keyboard event . <nl> + * / <nl> + public static class KEYBDINPUT extends Structure { <nl> + <nl> + / * * <nl> + * If specified , the scan code was preceded by a prefix byte that has the value 0xE0 ( 224 ) . <nl> + * / <nl> + public static final int KEYEVENTF _ EXTENDEDKEY = 0x0001 ; <nl> + <nl> + / * * <nl> + * If specified , the key is being released . If not specified , the key is being pressed . <nl> + * / <nl> + public static final int KEYEVENTF _ KEYUP = 0x0002 ; <nl> + <nl> + / * * <nl> + * If specified , the system synthesizes a VK _ PACKET keystroke . The wVk parameter must be zero . This flag can only be <nl> + * combined with the KEYEVENTF _ KEYUP flag . For more information , see the Remarks section . <nl> + * / <nl> + public static final int KEYEVENTF _ UNICODE = 0x0004 ; <nl> + <nl> + / * * <nl> + * If specified , wScan identifies the key and wVk is ignored . <nl> + * / <nl> + public static final int KEYEVENTF _ SCANCODE = 0x0008 ; <nl> + <nl> + public static class ByReference extends KEYBDINPUT implements Structure . ByReference { <nl> + public ByReference ( ) { <nl> + } <nl> + <nl> + public ByReference ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + } <nl> + <nl> + public KEYBDINPUT ( ) { <nl> + setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> + } <nl> + <nl> + public KEYBDINPUT ( Pointer memory ) { <nl> + setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> + useMemory ( memory ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * A virtual - key code . The code must be a value in the range 1 to 254 . If the dwFlags member specifies <nl> + * KEYEVENTF _ UNICODE , wVk must be 0 . <nl> + * / <nl> + public WinDef . WORD wVk ; <nl> + <nl> + / * * <nl> + * A hardware scan code for the key . If dwFlags specifies KEYEVENTF _ UNICODE , wScan specifies a Unicode character <nl> + * which is to be sent to the foreground application . <nl> + * / <nl> + public WinDef . WORD wScan ; <nl> + <nl> + / * * <nl> + * Specifies various aspects of a keystroke . This member can be certain combinations of the following values . <nl> + * / <nl> + public WinDef . DWORD dwFlags ; <nl> + <nl> + / * * <nl> + * The time stamp for the event , in milliseconds . If this parameter is zero , the system will provide its own time <nl> + * stamp . <nl> + * / <nl> + public WinDef . DWORD time ; <nl> + <nl> + / * * <nl> + * An additional value associated with the keystroke . Use the GetMessageExtraInfo function to obtain this <nl> + * information . <nl> + * / <nl> + public BaseTSD . ULONG _ PTR dwExtraInfo ; <nl> + } <nl> + <nl> + / * * <nl> + * Contains information about a simulated mouse event . <nl> + * / <nl> + public static class MOUSEINPUT extends Structure { <nl> + <nl> + public static class ByReference extends MOUSEINPUT implements Structure . ByReference { <nl> + public ByReference ( ) { <nl> + } <nl> + <nl> + public ByReference ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + } <nl> + <nl> + public MOUSEINPUT ( ) { <nl> + setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> + } <nl> + <nl> + public MOUSEINPUT ( Pointer memory ) { <nl> + setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> + useMemory ( memory ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public WinDef . LONG dx ; <nl> + public WinDef . LONG dy ; <nl> + public WinDef . DWORD mouseData ; <nl> + public WinDef . DWORD dwFlags ; <nl> + public WinDef . DWORD time ; <nl> + public BaseTSD . ULONG _ PTR dwExtraInfo ; <nl> + } <nl> } <nl> diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Winioctl . java b / contrib / platform / src / com / sun / jna / platform / win32 / Winioctl . java <nl> new file mode 100644 <nl> index 0000000 . . 314a97d <nl> - - - / dev / null <nl> + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Winioctl . java <nl> @ @ - 0 , 0 + 1 , 32 @ @ <nl> + package com . sun . jna . platform . win32 ; <nl> + <nl> + import com . sun . jna . Pointer ; <nl> + import com . sun . jna . Structure ; <nl> + import com . sun . jna . win32 . StdCallLibrary ; <nl> + <nl> + public interface Winioctl extends StdCallLibrary { <nl> + <nl> + public static class STORAGE _ DEVICE _ NUMBER extends Structure { <nl> + <nl> + public static class ByReference extends STORAGE _ DEVICE _ NUMBER implements Structure . ByReference { <nl> + public ByReference ( ) { <nl> + } <nl> + <nl> + public ByReference ( Pointer memory ) { <nl> + super ( memory ) ; <nl> + } <nl> + } <nl> + <nl> + public STORAGE _ DEVICE _ NUMBER ( ) { <nl> + } <nl> + <nl> + public STORAGE _ DEVICE _ NUMBER ( Pointer memory ) { <nl> + useMemory ( memory ) ; <nl> + read ( ) ; <nl> + } <nl> + <nl> + public int DeviceType ; <nl> + public int DeviceNumber ; <nl> + public int PartitionNumber ; <nl> + } <nl> + } <nl> diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Msi . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Msi . java <nl> deleted file mode 100644 <nl> index ad83860 . . 0000000 <nl> - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Msi . java <nl> + + + / dev / null <nl> @ @ - 1 , 39 + 0 , 0 @ @ <nl> - package com . sun . jna . platform . win32 ; <nl> - <nl> - import com . sun . jna . Native ; <nl> - import com . sun . jna . WString ; <nl> - import com . sun . jna . ptr . IntByReference ; <nl> - import com . sun . jna . win32 . StdCallLibrary ; <nl> - import com . sun . jna . win32 . W32APIOptions ; <nl> - <nl> - / * * <nl> - * Provides access to the w32 MSI installer library . <nl> - * / <nl> - public interface Msi extends StdCallLibrary { <nl> - <nl> - Msi INSTANCE = ( Msi ) <nl> - Native . loadLibrary ( " msi " , Msi . class , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> - <nl> - static int INSTALLSTATE _ NOTUSED = - 7 ; <nl> - static int INSTALLSTATE _ BADCONFIG = - 6 ; <nl> - static int INSTALLSTATE _ INCOMPLETE = - 5 ; <nl> - static int INSTALLSTATE _ SOURCEABSENT = - 4 ; <nl> - static int INSTALLSTATE _ MOREDATA = - 3 ; <nl> - static int INSTALLSTATE _ INVALIDARG = - 2 ; <nl> - static int INSTALLSTATE _ UNKNOWN = - 1 ; <nl> - static int INSTALLSTATE _ BROKEN = 0 ; <nl> - static int INSTALLSTATE _ ADVERTISED = 1 ; <nl> - static int INSTALLSTATE _ REMOVED = 1 ; <nl> - static int INSTALLSTATE _ ABSENT = 2 ; <nl> - static int INSTALLSTATE _ LOCAL = 3 ; <nl> - static int INSTALLSTATE _ SOURCE = 4 ; <nl> - static int INSTALLSTATE _ DEFAULT = 5 ; <nl> - <nl> - int MsiGetComponentPathW ( WString szProduct , WString szComponent , char [ ] lpPathBuf , IntByReference pcchBuf ) ; <nl> - <nl> - int MsiLocateComponentW ( WString szComponent , char [ ] lpPathBuf , IntByReference pcchBuf ) ; <nl> - <nl> - int MsiGetProductCodeW ( WString szComponent , char [ ] lpProductBuf ) ; <nl> - <nl> - int MsiEnumComponents ( WinDef . DWORD iComponentIndex , char [ ] lpComponentBuf ) ; <nl> - } <nl> diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java <nl> deleted file mode 100644 <nl> index 72572c5 . . 0000000 <nl> - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java <nl> + + + / dev / null <nl> @ @ - 1 , 46 + 0 , 0 @ @ <nl> - package com . sun . jna . platform . win32 ; <nl> - <nl> - import com . sun . jna . Native ; <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . platform . win32 . Guid . GUID ; <nl> - import com . sun . jna . platform . win32 . structures . SP _ DEVICE _ INTERFACE _ DATA ; <nl> - import com . sun . jna . platform . win32 . structures . SP _ DEVINFO _ DATA ; <nl> - import com . sun . jna . ptr . IntByReference ; <nl> - import com . sun . jna . win32 . StdCallLibrary ; <nl> - import com . sun . jna . win32 . W32APIOptions ; <nl> - <nl> - public interface SetupApi extends StdCallLibrary { <nl> - <nl> - SetupApi INSTANCE = ( SetupApi ) <nl> - Native . loadLibrary ( " setupapi " , SetupApi . class , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> - <nl> - public static GUID GUID _ DEVINTERFACE _ DISK = new GUID ( new byte [ ] <nl> - { <nl> - 0x07 , 0x63 , ( byte ) 0xf5 , 0x53 , ( byte ) 0xbf , ( byte ) 0xb6 , ( byte ) 0xd0 , 0x11 , <nl> - ( byte ) 0x94 , ( byte ) 0xf2 , 0x00 , ( byte ) 0xa0 , ( byte ) 0xc9 , ( byte ) 0x1e , ( byte ) 0xfb , ( byte ) 0x8b <nl> - } ) ; <nl> - <nl> - public int DIGCF _ DEFAULT = 0x1 ; <nl> - public int DIGCF _ PRESENT = 0x2 ; <nl> - public int DIGCF _ ALLCLASSES = 0x4 ; <nl> - public int DIGCF _ PROFILE = 0x8 ; <nl> - public int DIGCF _ DEVICEINTERFACE = 0x10 ; <nl> - <nl> - public int SPDRP _ REMOVAL _ POLICY = 0x0000001F ; <nl> - public int CM _ DEVCAP _ REMOVABLE = 0x00000004 ; <nl> - <nl> - WinNT . HANDLE SetupDiGetClassDevs ( GUID . ByReference classGuid , Pointer enumerator , Pointer hwndParent , int flags ) ; <nl> - <nl> - boolean SetupDiDestroyDeviceInfoList ( WinNT . HANDLE hDevInfo ) ; <nl> - <nl> - boolean SetupDiEnumDeviceInterfaces ( WinNT . HANDLE hDevInfo , Pointer devInfo , GUID . ByReference interfaceClassGuid , <nl> - int memberIndex , SP _ DEVICE _ INTERFACE _ DATA . ByReference deviceInterfaceData ) ; <nl> - <nl> - boolean SetupDiGetDeviceInterfaceDetail ( WinNT . HANDLE hDevInfo , SP _ DEVICE _ INTERFACE _ DATA . ByReference deviceInterfaceData , <nl> - Pointer deviceInterfaceDetailData , int deviceInterfaceDetailDataSize , <nl> - IntByReference requiredSize , SP _ DEVINFO _ DATA . ByReference deviceInfoData ) ; <nl> - <nl> - boolean SetupDiGetDeviceRegistryProperty ( WinNT . HANDLE DeviceInfoSet , SP _ DEVINFO _ DATA . ByReference DeviceInfoData , int Property , <nl> - IntByReference PropertyRegDataType , Pointer PropertyBuffer , int PropertyBufferSize , <nl> - IntByReference RequiredSize ) ; <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Version . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Version . java <nl> deleted file mode 100644 <nl> index 093dc00 . . 0000000 <nl> - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Version . java <nl> + + + / dev / null <nl> @ @ - 1 , 23 + 0 , 0 @ @ <nl> - package com . sun . jna . platform . win32 ; <nl> - <nl> - import com . sun . jna . Native ; <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . ptr . IntByReference ; <nl> - import com . sun . jna . ptr . PointerByReference ; <nl> - import com . sun . jna . win32 . StdCallLibrary ; <nl> - import com . sun . jna . win32 . W32APIOptions ; <nl> - <nl> - / * * <nl> - * Provides access to the w32 version library . <nl> - * / <nl> - public interface Version extends StdCallLibrary { <nl> - <nl> - Version INSTANCE = ( Version ) <nl> - Native . loadLibrary ( " version " , Version . class , W32APIOptions . DEFAULT _ OPTIONS ) ; <nl> - <nl> - int GetFileVersionInfoSize ( String lptstrFilename , IntByReference lpdwHandle ) ; <nl> - <nl> - boolean GetFileVersionInfo ( String lptstrFilename , int dwHandle , int dwLen , Pointer lpData ) ; <nl> - <nl> - boolean VerQueryValue ( Pointer pBlock , String lpSubBlock , PointerByReference lplpBuffer , IntByReference puLen ) ; <nl> - } <nl> diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / HARDWAREINPUT . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / HARDWAREINPUT . java <nl> deleted file mode 100644 <nl> index 9a212dc . . 0000000 <nl> - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / HARDWAREINPUT . java <nl> + + + / dev / null <nl> @ @ - 1 , 34 + 0 , 0 @ @ <nl> - package com . sun . jna . platform . win32 . structures ; <nl> - <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . Structure ; <nl> - import com . sun . jna . platform . win32 . WinDef ; <nl> - <nl> - / * * <nl> - * Contains information about a simulated message generated by an input device other than a keyboard or mouse . <nl> - * / <nl> - public class HARDWAREINPUT extends Structure { <nl> - <nl> - public static class ByReference extends HARDWAREINPUT implements Structure . ByReference { <nl> - public ByReference ( ) { <nl> - } <nl> - <nl> - public ByReference ( Pointer memory ) { <nl> - super ( memory ) ; <nl> - } <nl> - } <nl> - <nl> - public HARDWAREINPUT ( ) { <nl> - setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> - } <nl> - <nl> - public HARDWAREINPUT ( Pointer memory ) { <nl> - setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> - useMemory ( memory ) ; <nl> - read ( ) ; <nl> - } <nl> - <nl> - public WinDef . DWORD uMsg ; <nl> - public WinDef . WORD wParamL ; <nl> - public WinDef . WORD wParamH ; <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / INPUT . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / INPUT . java <nl> deleted file mode 100644 <nl> index 28e0e3b . . 0000000 <nl> - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / INPUT . java <nl> + + + / dev / null <nl> @ @ - 1 , 54 + 0 , 0 @ @ <nl> - package com . sun . jna . platform . win32 . structures ; <nl> - <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . Structure ; <nl> - import com . sun . jna . Union ; <nl> - import com . sun . jna . platform . win32 . WinDef ; <nl> - <nl> - / * * <nl> - * Used by SendInput to store information for synthesizing input events such as keystrokes , mouse movement , and mouse <nl> - * clicks . <nl> - * / <nl> - public class INPUT extends Structure { <nl> - <nl> - public static final int INPUT _ MOUSE = 0 ; <nl> - public static final int INPUT _ KEYBOARD = 1 ; <nl> - public static final int INPUT _ HARDWARE = 2 ; <nl> - <nl> - public static class ByReference extends INPUT implements Structure . ByReference { <nl> - public ByReference ( ) { <nl> - } <nl> - <nl> - public ByReference ( Pointer memory ) { <nl> - super ( memory ) ; <nl> - } <nl> - } <nl> - <nl> - public INPUT ( ) { <nl> - setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> - } <nl> - <nl> - public INPUT ( Pointer memory ) { <nl> - setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> - useMemory ( memory ) ; <nl> - read ( ) ; <nl> - } <nl> - <nl> - public WinDef . DWORD type ; <nl> - public INPUT _ UNION input = new INPUT _ UNION ( ) ; <nl> - <nl> - public static class INPUT _ UNION extends Union { <nl> - <nl> - public INPUT _ UNION ( ) { <nl> - } <nl> - <nl> - public INPUT _ UNION ( Pointer memory ) { <nl> - useMemory ( memory ) ; <nl> - read ( ) ; <nl> - } <nl> - <nl> - public MOUSEINPUT mi ; <nl> - public KEYBDINPUT ki ; <nl> - public HARDWAREINPUT hi ; <nl> - } <nl> - } <nl> diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / KEYBDINPUT . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / KEYBDINPUT . java <nl> deleted file mode 100644 <nl> index 6abfe61 . . 0000000 <nl> - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / KEYBDINPUT . java <nl> + + + / dev / null <nl> @ @ - 1 , 81 + 0 , 0 @ @ <nl> - package com . sun . jna . platform . win32 . structures ; <nl> - <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . Structure ; <nl> - import com . sun . jna . platform . win32 . BaseTSD ; <nl> - import com . sun . jna . platform . win32 . WinDef ; <nl> - <nl> - / * * <nl> - * Contains information about a simulated keyboard event . <nl> - * / <nl> - public class KEYBDINPUT extends Structure { <nl> - <nl> - / * * <nl> - * If specified , the scan code was preceded by a prefix byte that has the value 0xE0 ( 224 ) . <nl> - * / <nl> - public static final int KEYEVENTF _ EXTENDEDKEY = 0x0001 ; <nl> - <nl> - / * * <nl> - * If specified , the key is being released . If not specified , the key is being pressed . <nl> - * / <nl> - public static final int KEYEVENTF _ KEYUP = 0x0002 ; <nl> - <nl> - / * * <nl> - * If specified , the system synthesizes a VK _ PACKET keystroke . The wVk parameter must be zero . This flag can only be <nl> - * combined with the KEYEVENTF _ KEYUP flag . For more information , see the Remarks section . <nl> - * / <nl> - public static final int KEYEVENTF _ UNICODE = 0x0004 ; <nl> - <nl> - / * * <nl> - * If specified , wScan identifies the key and wVk is ignored . <nl> - * / <nl> - public static final int KEYEVENTF _ SCANCODE = 0x0008 ; <nl> - <nl> - public static class ByReference extends KEYBDINPUT implements Structure . ByReference { <nl> - public ByReference ( ) { <nl> - } <nl> - <nl> - public ByReference ( Pointer memory ) { <nl> - super ( memory ) ; <nl> - } <nl> - } <nl> - <nl> - public KEYBDINPUT ( ) { <nl> - setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> - } <nl> - <nl> - public KEYBDINPUT ( Pointer memory ) { <nl> - setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> - useMemory ( memory ) ; <nl> - read ( ) ; <nl> - } <nl> - <nl> - / * * <nl> - * A virtual - key code . The code must be a value in the range 1 to 254 . If the dwFlags member specifies <nl> - * KEYEVENTF _ UNICODE , wVk must be 0 . <nl> - * / <nl> - public WinDef . WORD wVk ; <nl> - <nl> - / * * <nl> - * A hardware scan code for the key . If dwFlags specifies KEYEVENTF _ UNICODE , wScan specifies a Unicode character <nl> - * which is to be sent to the foreground application . <nl> - * / <nl> - public WinDef . WORD wScan ; <nl> - <nl> - / * * <nl> - * Specifies various aspects of a keystroke . This member can be certain combinations of the following values . <nl> - * / <nl> - public WinDef . DWORD dwFlags ; <nl> - <nl> - / * * <nl> - * The time stamp for the event , in milliseconds . If this parameter is zero , the system will provide its own time <nl> - * stamp . <nl> - * / <nl> - public WinDef . DWORD time ; <nl> - <nl> - / * * <nl> - * An additional value associated with the keystroke . Use the GetMessageExtraInfo function to obtain this <nl> - * information . <nl> - * / <nl> - public BaseTSD . ULONG _ PTR dwExtraInfo ; <nl> - } <nl> diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / MOUSEINPUT . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / MOUSEINPUT . java <nl> deleted file mode 100644 <nl> index 41a294b . . 0000000 <nl> - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / MOUSEINPUT . java <nl> + + + / dev / null <nl> @ @ - 1 , 38 + 0 , 0 @ @ <nl> - package com . sun . jna . platform . win32 . structures ; <nl> - <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . Structure ; <nl> - import com . sun . jna . platform . win32 . BaseTSD ; <nl> - import com . sun . jna . platform . win32 . WinDef ; <nl> - <nl> - / * * <nl> - * Contains information about a simulated mouse event . <nl> - * / <nl> - public class MOUSEINPUT extends Structure { <nl> - <nl> - public static class ByReference extends MOUSEINPUT implements Structure . ByReference { <nl> - public ByReference ( ) { <nl> - } <nl> - <nl> - public ByReference ( Pointer memory ) { <nl> - super ( memory ) ; <nl> - } <nl> - } <nl> - <nl> - public MOUSEINPUT ( ) { <nl> - setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> - } <nl> - <nl> - public MOUSEINPUT ( Pointer memory ) { <nl> - setAlignType ( Structure . ALIGN _ MSVC ) ; <nl> - useMemory ( memory ) ; <nl> - read ( ) ; <nl> - } <nl> - <nl> - public WinDef . LONG dx ; <nl> - public WinDef . LONG dy ; <nl> - public WinDef . DWORD mouseData ; <nl> - public WinDef . DWORD dwFlags ; <nl> - public WinDef . DWORD time ; <nl> - public BaseTSD . ULONG _ PTR dwExtraInfo ; <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / PROCESSENTRY32W . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / PROCESSENTRY32W . java <nl> deleted file mode 100644 <nl> index 9c75727 . . 0000000 <nl> - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / PROCESSENTRY32W . java <nl> + + + / dev / null <nl> @ @ - 1 , 38 + 0 , 0 @ @ <nl> - package com . sun . jna . platform . win32 . structures ; <nl> - <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . Structure ; <nl> - import com . sun . jna . platform . win32 . BaseTSD ; <nl> - import com . sun . jna . platform . win32 . WinDef ; <nl> - <nl> - public class PROCESSENTRY32W extends Structure { <nl> - <nl> - public static class ByReference extends PROCESSENTRY32W implements Structure . ByReference { <nl> - public ByReference ( ) { <nl> - } <nl> - <nl> - public ByReference ( Pointer memory ) { <nl> - super ( memory ) ; <nl> - } <nl> - } <nl> - <nl> - public PROCESSENTRY32W ( ) { <nl> - dwSize = new WinDef . DWORD ( size ( ) ) ; <nl> - } <nl> - <nl> - public PROCESSENTRY32W ( Pointer memory ) { <nl> - useMemory ( memory ) ; <nl> - read ( ) ; <nl> - } <nl> - <nl> - public WinDef . DWORD dwSize ; <nl> - public WinDef . DWORD cntUsage ; <nl> - public WinDef . DWORD th32ProcessID ; <nl> - public BaseTSD . ULONG _ PTR th32DefaultHeapID ; <nl> - public WinDef . DWORD th32ModuleID ; <nl> - public WinDef . DWORD cntThreads ; <nl> - public WinDef . DWORD th32ParentProcessID ; <nl> - public WinDef . LONG pcPriClassBase ; <nl> - public WinDef . DWORD dwFlags ; <nl> - public char [ ] szExeFile = new char [ WinDef . MAX _ PATH ] ; <nl> - } <nl> diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / SP _ DEVICE _ INTERFACE _ DATA . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / SP _ DEVICE _ INTERFACE _ DATA . java <nl> deleted file mode 100644 <nl> index 6ea5e18 . . 0000000 <nl> - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / SP _ DEVICE _ INTERFACE _ DATA . java <nl> + + + / dev / null <nl> @ @ - 1 , 31 + 0 , 0 @ @ <nl> - package com . sun . jna . platform . win32 . structures ; <nl> - <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . Structure ; <nl> - import com . sun . jna . platform . win32 . Guid . GUID ; <nl> - <nl> - public class SP _ DEVICE _ INTERFACE _ DATA extends Structure { <nl> - <nl> - public static class ByReference extends SP _ DEVINFO _ DATA implements Structure . ByReference { <nl> - public ByReference ( ) { <nl> - } <nl> - <nl> - public ByReference ( Pointer memory ) { <nl> - super ( memory ) ; <nl> - } <nl> - } <nl> - <nl> - public SP _ DEVICE _ INTERFACE _ DATA ( ) { <nl> - cbSize = size ( ) ; <nl> - } <nl> - <nl> - public SP _ DEVICE _ INTERFACE _ DATA ( Pointer memory ) { <nl> - useMemory ( memory ) ; <nl> - read ( ) ; <nl> - } <nl> - <nl> - public int cbSize ; <nl> - public GUID InterfaceClassGuid ; <nl> - public int Flags ; <nl> - public Pointer Reserved ; <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / SP _ DEVINFO _ DATA . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / SP _ DEVINFO _ DATA . java <nl> deleted file mode 100644 <nl> index 714ef57 . . 0000000 <nl> - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / SP _ DEVINFO _ DATA . java <nl> + + + / dev / null <nl> @ @ - 1 , 31 + 0 , 0 @ @ <nl> - package com . sun . jna . platform . win32 . structures ; <nl> - <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . Structure ; <nl> - import com . sun . jna . platform . win32 . Guid . GUID ; <nl> - <nl> - public class SP _ DEVINFO _ DATA extends Structure { <nl> - <nl> - public static class ByReference extends SP _ DEVINFO _ DATA implements Structure . ByReference { <nl> - public ByReference ( ) { <nl> - } <nl> - <nl> - public ByReference ( Pointer memory ) { <nl> - super ( memory ) ; <nl> - } <nl> - } <nl> - <nl> - public SP _ DEVINFO _ DATA ( ) { <nl> - cbSize = size ( ) ; <nl> - } <nl> - <nl> - public SP _ DEVINFO _ DATA ( Pointer memory ) { <nl> - useMemory ( memory ) ; <nl> - read ( ) ; <nl> - } <nl> - <nl> - public int cbSize ; <nl> - public GUID InterfaceClassGuid ; <nl> - public int Flags ; <nl> - public Pointer Reserved ; <nl> - } <nl> diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / STORAGE _ DEVICE _ NUMBER . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / STORAGE _ DEVICE _ NUMBER . java <nl> deleted file mode 100644 <nl> index 4ad5afb . . 0000000 <nl> - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / STORAGE _ DEVICE _ NUMBER . java <nl> + + + / dev / null <nl> @ @ - 1 , 28 + 0 , 0 @ @ <nl> - package com . sun . jna . platform . win32 . structures ; <nl> - <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . Structure ; <nl> - <nl> - public class STORAGE _ DEVICE _ NUMBER extends Structure { <nl> - <nl> - public static class ByReference extends STORAGE _ DEVICE _ NUMBER implements Structure . ByReference { <nl> - public ByReference ( ) { <nl> - } <nl> - <nl> - public ByReference ( Pointer memory ) { <nl> - super ( memory ) ; <nl> - } <nl> - } <nl> - <nl> - public STORAGE _ DEVICE _ NUMBER ( ) { <nl> - } <nl> - <nl> - public STORAGE _ DEVICE _ NUMBER ( Pointer memory ) { <nl> - useMemory ( memory ) ; <nl> - read ( ) ; <nl> - } <nl> - <nl> - public int DeviceType ; <nl> - public int DeviceNumber ; <nl> - public int PartitionNumber ; <nl> - } <nl> diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / VS _ FIXEDFILEINFO . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / VS _ FIXEDFILEINFO . java <nl> deleted file mode 100644 <nl> index c580fe3 . . 0000000 <nl> - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / VS _ FIXEDFILEINFO . java <nl> + + + / dev / null <nl> @ @ - 1 , 38 + 0 , 0 @ @ <nl> - package com . sun . jna . platform . win32 . structures ; <nl> - <nl> - import com . sun . jna . Pointer ; <nl> - import com . sun . jna . Structure ; <nl> - <nl> - public class VS _ FIXEDFILEINFO extends Structure { <nl> - <nl> - public static class ByReference extends VS _ FIXEDFILEINFO implements Structure . ByReference { <nl> - public ByReference ( ) { <nl> - } <nl> - <nl> - public ByReference ( Pointer memory ) { <nl> - super ( memory ) ; <nl> - } <nl> - } <nl> - <nl> - public VS _ FIXEDFILEINFO ( ) { <nl> - } <nl> - <nl> - public VS _ FIXEDFILEINFO ( Pointer memory ) { <nl> - useMemory ( memory ) ; <nl> - read ( ) ; <nl> - } <nl> - <nl> - public int Signature ; <nl> - public int StrucVersion ; <nl> - public int FileVersionMS ; <nl> - public int FileVersionLS ; <nl> - public int ProductVersionMS ; <nl> - public int ProductVersionLS ; <nl> - public int FileFlagsMask ; <nl> - public int FileFlags ; <nl> - public int FileOS ; <nl> - public int FileType ; <nl> - public int FileSubtype ; <nl> - public int FileDateMS ; <nl> - public int FileDateLS ; <nl> - }

TEST DIFF:
diff - - git a / contrib / platform / build . xml b / contrib / platform / build . xml 
 index 5aa5ece . . 65fd1c1 100644 
 - - - a / contrib / platform / build . xml 
 + + + b / contrib / platform / build . xml 
 @ @ - 108 , 9 + 108 , 10 @ @ com . sun . jna . platform . wince 
 < target name = " test " depends = " init , compile , compile - test , - pre - test - run " description = " Run platform unit tests . " > 
 < echo > Running platform tests : $ { test . src . dir } < / echo > 
 < property name = " test . fork " value = " yes " / > 
 - < property name = " build . test . results . dir . abs " location = " $ { build . test . results . dir } " / > 
 - < mkdir dir = " $ { build . test . results . dir . abs } " / > 
 - < echo > Saving test results in $ { build . test . results . dir . abs } < / echo > 
 + < property name = " reports . junit " location = " $ { build } / reports / junit / $ { os . prefix } " / > 
 + < property name = " results . junit " location = " $ { build } / junit - results / $ { os . prefix } " / > 
 + < mkdir dir = " $ { results . junit } " / > 
 + < echo > Saving test results in $ { results . junit } < / echo > 
 < condition property = " tests . platform " value = " * * / mac / * * / * Test . java " > 
 < os family = " mac " / > 
 < / condition > 
 @ @ - 151 , 7 + 152 , 7 @ @ com . sun . jna . platform . wince 
 < classpath > < path path = " $ { run . test . classpath } " / > < path path = " $ { file . reference . jna . build } / test - classes " / > < / classpath > 
 < formatter type = " brief " usefile = " false " / > 
 < formatter type = " xml " / > 
 - < batchtest todir = " $ { build . test . results . dir } " > 
 + < batchtest todir = " $ { results . junit } " > 
 < fileset dir = " $ { test . src . dir } " excludes = " $ { tests . exclude - patterns } " > 
 < ! - - Until StructureFieldOrderTest gets fixed up a little - - > 
 < exclude name = " * * / StructureFieldOrderTest . java " / > 
 @ @ - 161 , 13 + 162 , 13 @ @ com . sun . jna . platform . wince 
 < / fileset > 
 < / batchtest > 
 < / junit > 
 - < junitreport todir = " $ { build . test . results . dir } " > 
 - 	 < fileset dir = " $ { build . test . results . dir } " > 
 + < junitreport todir = " $ { results . junit } " > 
 + 	 < fileset dir = " $ { results . junit } " > 
 	 < include name = " TEST - * . xml " / > 
 	 < / fileset > 
 - 	 < report todir = " $ { build . test . results . dir } " / > 
 + 	 < report todir = " $ { reports . junit } " / > 
 < / junitreport > 
 - < echo message = " View test report in file : / / $ { build . test . results . dir . abs } / index . html " / > 
 + < echo message = " View test report in file : / / $ { reports . junit } / index . html " / > 
 < fail if = " testfailure " > One or more tests failed < / fail > 
 < / target > 
 
 diff - - git a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java 
 index 7ba2413 . . 609166e 100644 
 - - - a / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java 
 + + + b / contrib / platform / test / com / sun / jna / platform / win32 / Shell32Test . java 
 @ @ - 36 , 7 + 36 , 8 @ @ import junit . framework . TestCase ; 
 * / 
 public class Shell32Test extends TestCase { 
 
 - private static final int RESIZE _ HEIGHT = 500 ; 
 + / / avoid disrupting the screen _ too _ much 
 + private static final int RESIZE _ DELTA = 10 ; 
 private static final int WM _ USER = 0x0400 ; 
 
 public static void main ( String [ ] args ) { 
 @ @ - 46 , 8 + 47 , 8 @ @ public class Shell32Test extends TestCase { 
 public void testSHGetFolderPath ( ) { 
 	 char [ ] pszPath = new char [ WinDef . MAX _ PATH ] ; 
 	 assertEquals ( W32Errors . S _ OK , Shell32 . INSTANCE . SHGetFolderPath ( null , 
 - 	 	 	 ShlObj . CSIDL _ PROGRAM _ FILES , null , ShlObj . SHGFP _ TYPE _ CURRENT , 
 - 	 	 	 pszPath ) ) ; 
 + ShlObj . CSIDL _ PROGRAM _ FILES , null , ShlObj . SHGFP _ TYPE _ CURRENT , 
 + pszPath ) ) ; 
 	 assertTrue ( Native . toString ( pszPath ) . length ( ) > 0 ) ; 
 } 
 
 @ @ - 98 , 7 + 99 , 7 @ @ public class Shell32Test extends TestCase { 
 APPBARDATA data = new APPBARDATA . ByReference ( ) ; 
 
 data . uEdge . setValue ( ShellAPI . ABE _ BOTTOM ) ; 
 - data . rc . top = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CYFULLSCREEN ) - RESIZE _ HEIGHT ; 
 + data . rc . top = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CYFULLSCREEN ) - RESIZE _ DELTA ; 
 data . rc . left = 0 ; 
 data . rc . bottom = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CYFULLSCREEN ) ; 
 data . rc . right = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CXFULLSCREEN ) ; 
 @ @ - 121 , 7 + 122 , 7 @ @ public class Shell32Test extends TestCase { 
 data . uEdge . setValue ( ShellAPI . ABE _ TOP ) ; 
 data . rc . top = 0 ; 
 data . rc . left = 0 ; 
 - data . rc . bottom = RESIZE _ HEIGHT ; 
 + data . rc . bottom = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CXFULLSCREEN ) - RESIZE _ DELTA ; 
 data . rc . right = User32 . INSTANCE . GetSystemMetrics ( User32 . SM _ CXFULLSCREEN ) ; 
 
 queryPos ( data ) ; 
 @ @ - 135 , 93 + 136 , 93 @ @ public class Shell32Test extends TestCase { 
 
 } 
 
 - 	 public void testSHGetKnownFolderPath ( ) { 
 - 	 	 int flags = ShlObj . KNOWN _ FOLDER _ FLAG . NONE . getFlag ( ) ; 
 - 	 	 PointerByReference outPath = new PointerByReference ( ) ; 
 - 	 	 HANDLE token = null ; 
 - 	 	 GUID guid = KnownFolders . FOLDERID _ Fonts ; 
 - 	 	 HRESULT hr = Shell32 . INSTANCE . SHGetKnownFolderPath ( guid , flags , token , outPath ) ; 
 - 
 - 	 	 Ole32 . INSTANCE . CoTaskMemFree ( outPath . getValue ( ) ) ; 
 - 
 - 	 	 assertTrue ( W32Errors . SUCCEEDED ( hr . intValue ( ) ) ) ; 
 - 	 } 
 - 
 - 	 public void testSHEmptyRecycleBin ( ) { 
 - 	 	 File file = new File ( System . getProperty ( " java . io . tmpdir " ) , System . nanoTime ( ) + " . txt " ) ; 
 - 	 	 try { 
 - 	 	 	 / / Create a file and immediately send it to the recycle bin . 
 - 	 	 	 try { 
 - 	 	 	 	 fillTempFile ( file ) ; 
 - 	 	 	 	 W32FileUtils . getInstance ( ) . moveToTrash ( new File [ ] { file } ) ; 
 - 	 	 	 } catch ( IOException e ) { 
 - 	 	 	 	 throw new RuntimeException ( e ) ; 
 - 	 	 	 } 
 - 
 - 	 	 	 int result = Shell32 . INSTANCE . SHEmptyRecycleBin ( null , null , 
 - 	 	 	 	 	 Shell32 . SHERB _ NOCONFIRMATION | Shell32 . SHERB _ NOPROGRESSUI | Shell32 . SHERB _ NOSOUND ) ; 
 - 	 	 	 / / for reasons I can not find documented on MSDN , 
 - 	 	 	 / / the function returns the following : 
 - 	 	 	 / / 0 when the recycle bin has items in it 
 - 	 	 	 / / - 2147418113 when the recycle bin has no items in it 
 - 	 	 	 assertEquals ( " Result should have been ERROR _ SUCCESS when emptying Recycle Bin - there should have been a file in it . " , 
 - 	 	 	 	 	 W32Errors . ERROR _ SUCCESS , result ) ; 
 - 	 	 } finally { 
 - 	 	 	 / / if the file wasn ' t sent to the recycle bin , delete it . 
 - 	 	 	 if ( file . exists ( ) ) { 
 - 	 	 	 	 file . delete ( ) ; 
 - 	 	 	 } 
 - 	 	 } 
 - 	 } 
 - 
 - 	 public void testShellExecuteEx ( ) { 
 - 	 	 File file = new File ( System . getProperty ( " java . io . tmpdir " ) , System . nanoTime ( ) + " . txt " ) ; 
 - 	 	 try { 
 - 	 	 	 try { 
 - 	 	 	 	 fillTempFile ( file ) ; 
 - 	 	 	 } catch ( IOException e ) { 
 - 	 	 	 	 throw new RuntimeException ( e ) ; 
 - 	 	 	 } 
 - 
 - 	 	 	 SHELLEXECUTEINFO lpExecInfo = new SHELLEXECUTEINFO ( ) ; 
 - 	 	 	 / / to avoid opening something and having hProcess come up null 
 - 	 	 	 / / ( meaning we opened something but can ' t close it ) 
 - 	 	 	 / / we will do a negative test with a bogus action . 
 - 	 	 	 lpExecInfo . lpVerb = " 0p3n " ; 
 - 	 	 	 lpExecInfo . nShow = User32 . SW _ SHOWDEFAULT ; 
 - 	 	 	 lpExecInfo . fMask = Shell32 . SEE _ MASK _ NOCLOSEPROCESS | Shell32 . SEE _ MASK _ FLAG _ NO _ UI ; 
 - 	 	 	 lpExecInfo . lpFile = file . getAbsolutePath ( ) ; 
 - 
 - 	 	 	 assertFalse ( " ShellExecuteEx should have returned false - action verb was bogus . " , 
 - 	 	 	 	 	 Shell32 . INSTANCE . ShellExecuteEx ( lpExecInfo ) ) ; 
 - 	 	 	 assertEquals ( " GetLastError ( ) should have been set to ERROR _ NO _ ASSOCIATION because of bogus action " , 
 - 	 	 	 	 	 W32Errors . ERROR _ NO _ ASSOCIATION , Native . getLastError ( ) ) ; 
 - 	 	 } finally { 
 - 	 	 	 if ( file . exists ( ) ) { 
 - 	 	 	 	 file . delete ( ) ; 
 - 	 	 	 } 
 - 	 	 } 
 - 
 - 	 } 
 - 
 - 	 / * * 
 - 	 * Creates ( if needed ) and fills the specified file with some content ( 10 lines of the same text ) 
 - 	 * 
 - 	 * @ param file 
 - 	 * The file to fill with content 
 - 	 * @ throws IOException 
 - 	 * If writing the content fails 
 - 	 * / 
 - 	 private void fillTempFile ( File file ) throws IOException { 
 - 	 	 file . createNewFile ( ) ; 
 - 	 	 FileWriter fileWriter = new FileWriter ( file ) ; 
 - 	 	 try { 
 - 	 	 	 for ( int i = 0 ; i < 10 ; i + + ) { 
 - 	 	 	 	 fileWriter . write ( " Sample line of text " ) ; 
 - 	 	 	 	 fileWriter . write ( System . getProperty ( " line . separator " ) ) ; 
 - 	 	 	 } 
 - 	 	 } finally { 
 - 	 	 	 fileWriter . close ( ) ; 
 - 	 	 } 
 - 	 } 
 + public void testSHGetKnownFolderPath ( ) { 
 + int flags = ShlObj . KNOWN _ FOLDER _ FLAG . NONE . getFlag ( ) ; 
 + PointerByReference outPath = new PointerByReference ( ) ; 
 + HANDLE token = null ; 
 + GUID guid = KnownFolders . FOLDERID _ Fonts ; 
 + HRESULT hr = Shell32 . INSTANCE . SHGetKnownFolderPath ( guid , flags , token , outPath ) ; 
 + 
 + Ole32 . INSTANCE . CoTaskMemFree ( outPath . getValue ( ) ) ; 
 + 
 + assertTrue ( W32Errors . SUCCEEDED ( hr . intValue ( ) ) ) ; 
 + } 
 + 
 + public void testSHEmptyRecycleBin ( ) { 
 + File file = new File ( System . getProperty ( " java . io . tmpdir " ) , System . nanoTime ( ) + " . txt " ) ; 
 + try { 
 + / / Create a file and immediately send it to the recycle bin . 
 + try { 
 + fillTempFile ( file ) ; 
 + W32FileUtils . getInstance ( ) . moveToTrash ( new File [ ] { file } ) ; 
 + } catch ( IOException e ) { 
 + throw new RuntimeException ( e ) ; 
 + } 
 + 
 + int result = Shell32 . INSTANCE . SHEmptyRecycleBin ( null , null , 
 + Shell32 . SHERB _ NOCONFIRMATION | Shell32 . SHERB _ NOPROGRESSUI | Shell32 . SHERB _ NOSOUND ) ; 
 + / / for reasons I can not find documented on MSDN , 
 + / / the function returns the following : 
 + / / 0 when the recycle bin has items in it 
 + / / - 2147418113 when the recycle bin has no items in it 
 + assertEquals ( " Result should have been ERROR _ SUCCESS when emptying Recycle Bin - there should have been a file in it . " , 
 + W32Errors . ERROR _ SUCCESS , result ) ; 
 + } finally { 
 + / / if the file wasn ' t sent to the recycle bin , delete it . 
 + if ( file . exists ( ) ) { 
 + file . delete ( ) ; 
 + } 
 + } 
 + } 
 + 
 + public void testShellExecuteEx ( ) { 
 + File file = new File ( System . getProperty ( " java . io . tmpdir " ) , System . nanoTime ( ) + " . txt " ) ; 
 + try { 
 + try { 
 + fillTempFile ( file ) ; 
 + } catch ( IOException e ) { 
 + throw new RuntimeException ( e ) ; 
 + } 
 + 
 + SHELLEXECUTEINFO lpExecInfo = new SHELLEXECUTEINFO ( ) ; 
 + / / to avoid opening something and having hProcess come up null 
 + / / ( meaning we opened something but can ' t close it ) 
 + / / we will do a negative test with a bogus action . 
 + lpExecInfo . lpVerb = " 0p3n " ; 
 + lpExecInfo . nShow = User32 . SW _ SHOWDEFAULT ; 
 + lpExecInfo . fMask = Shell32 . SEE _ MASK _ NOCLOSEPROCESS | Shell32 . SEE _ MASK _ FLAG _ NO _ UI ; 
 + lpExecInfo . lpFile = file . getAbsolutePath ( ) ; 
 + 
 + assertFalse ( " ShellExecuteEx should have returned false - action verb was bogus . " , 
 + Shell32 . INSTANCE . ShellExecuteEx ( lpExecInfo ) ) ; 
 + assertEquals ( " GetLastError ( ) should have been set to ERROR _ NO _ ASSOCIATION because of bogus action " , 
 + W32Errors . ERROR _ NO _ ASSOCIATION , Native . getLastError ( ) ) ; 
 + } finally { 
 + if ( file . exists ( ) ) { 
 + file . delete ( ) ; 
 + } 
 + } 
 + 
 + } 
 + 
 + / * * 
 + * Creates ( if needed ) and fills the specified file with some content ( 10 lines of the same text ) 
 + * 
 + * @ param file 
 + * The file to fill with content 
 + * @ throws IOException 
 + * If writing the content fails 
 + * / 
 + private void fillTempFile ( File file ) throws IOException { 
 + file . createNewFile ( ) ; 
 + FileWriter fileWriter = new FileWriter ( file ) ; 
 + try { 
 + for ( int i = 0 ; i < 10 ; i + + ) { 
 + fileWriter . write ( " Sample line of text " ) ; 
 + fileWriter . write ( System . getProperty ( " line . separator " ) ) ; 
 + } 
 + } finally { 
 + fileWriter . close ( ) ; 
 + } 
 + } 
 }

NEAREST DIFF:
diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java 
 index 2143425 . . f7c8611 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Kernel32 . java 
 @ @ - 25 , 7 + 25 , 6 @ @ import com . sun . jna . platform . win32 . WinNT . HANDLEByReference ; 
 import com . sun . jna . platform . win32 . WinNT . LARGE _ INTEGER ; 
 import com . sun . jna . platform . win32 . WinNT . OSVERSIONINFO ; 
 import com . sun . jna . platform . win32 . WinNT . OSVERSIONINFOEX ; 
 - import com . sun . jna . platform . win32 . structures . PROCESSENTRY32W ; 
 import com . sun . jna . ptr . ByReference ; 
 import com . sun . jna . ptr . IntByReference ; 
 import com . sun . jna . ptr . LongByReference ; 
 @ @ - 1385 , 7 + 1384 , 7 @ @ public interface Kernel32 extends StdCallLibrary { 
 * ERROR _ NO _ MORE _ FILES error value is returned by the GetLastError function if no processes exist or the snapshot 
 * does not contain process information . 
 * / 
 - boolean Process32FirstW ( HANDLE hSnapshot , PROCESSENTRY32W . ByReference lppe ) ; 
 + boolean Process32FirstW ( HANDLE hSnapshot , Tlhelp32 . PROCESSENTRY32W . ByReference lppe ) ; 
 
 / * * 
 * Retrieves information about the next process recorded in a system snapshot . 
 @ @ - 1397 , 5 + 1396 , 5 @ @ public interface Kernel32 extends StdCallLibrary { 
 * ERROR _ NO _ MORE _ FILES error value is returned by the GetLastError function if no processes exist or the snapshot 
 * does not contain process information . 
 * / 
 - boolean Process32NextW ( HANDLE hSnapshot , PROCESSENTRY32W . ByReference lppe ) ; 
 + boolean Process32NextW ( HANDLE hSnapshot , Tlhelp32 . PROCESSENTRY32W . ByReference lppe ) ; 
 } 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Msi . java b / contrib / platform / src / com / sun / jna / platform / win32 / Msi . java 
 new file mode 100644 
 index 0000000 . . c263a43 
 - - - / dev / null 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Msi . java 
 @ @ - 0 , 0 + 1 , 39 @ @ 
 + package com . sun . jna . platform . win32 ; 
 + 
 + import com . sun . jna . Native ; 
 + import com . sun . jna . WString ; 
 + import com . sun . jna . ptr . IntByReference ; 
 + import com . sun . jna . win32 . StdCallLibrary ; 
 + import com . sun . jna . win32 . W32APIOptions ; 
 + 
 + / * * 
 + * Provides access to the w32 MSI installer library . 
 + * / 
 + public interface Msi extends StdCallLibrary { 
 + 
 + Msi INSTANCE = ( Msi ) 
 + Native . loadLibrary ( " msi " , Msi . class , W32APIOptions . DEFAULT _ OPTIONS ) ; 
 + 
 + static int INSTALLSTATE _ NOTUSED = - 7 ; 
 + static int INSTALLSTATE _ BADCONFIG = - 6 ; 
 + static int INSTALLSTATE _ INCOMPLETE = - 5 ; 
 + static int INSTALLSTATE _ SOURCEABSENT = - 4 ; 
 + static int INSTALLSTATE _ MOREDATA = - 3 ; 
 + static int INSTALLSTATE _ INVALIDARG = - 2 ; 
 + static int INSTALLSTATE _ UNKNOWN = - 1 ; 
 + static int INSTALLSTATE _ BROKEN = 0 ; 
 + static int INSTALLSTATE _ ADVERTISED = 1 ; 
 + static int INSTALLSTATE _ REMOVED = 1 ; 
 + static int INSTALLSTATE _ ABSENT = 2 ; 
 + static int INSTALLSTATE _ LOCAL = 3 ; 
 + static int INSTALLSTATE _ SOURCE = 4 ; 
 + static int INSTALLSTATE _ DEFAULT = 5 ; 
 + 
 + int MsiGetComponentPathW ( WString szProduct , WString szComponent , char [ ] lpPathBuf , IntByReference pcchBuf ) ; 
 + 
 + int MsiLocateComponentW ( WString szComponent , char [ ] lpPathBuf , IntByReference pcchBuf ) ; 
 + 
 + int MsiGetProductCodeW ( WString szComponent , char [ ] lpProductBuf ) ; 
 + 
 + int MsiEnumComponents ( WinDef . DWORD iComponentIndex , char [ ] lpComponentBuf ) ; 
 + } 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java b / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java 
 new file mode 100644 
 index 0000000 . . 5dacf90 
 - - - / dev / null 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java 
 @ @ - 0 , 0 + 1 , 97 @ @ 
 + package com . sun . jna . platform . win32 ; 
 + 
 + 
 + import com . sun . jna . Native ; 
 + import com . sun . jna . Pointer ; 
 + import com . sun . jna . Structure ; 
 + import com . sun . jna . ptr . IntByReference ; 
 + import com . sun . jna . win32 . StdCallLibrary ; 
 + import com . sun . jna . win32 . W32APIOptions ; 
 + 
 + public interface SetupApi extends StdCallLibrary { 
 + 
 + SetupApi INSTANCE = ( SetupApi ) 
 + Native . loadLibrary ( " setupapi " , SetupApi . class , W32APIOptions . DEFAULT _ OPTIONS ) ; 
 + 
 + public static Guid . GUID GUID _ DEVINTERFACE _ DISK = new Guid . GUID ( new byte [ ] 
 + { 
 + 0x07 , 0x63 , ( byte ) 0xf5 , 0x53 , ( byte ) 0xbf , ( byte ) 0xb6 , ( byte ) 0xd0 , 0x11 , 
 + ( byte ) 0x94 , ( byte ) 0xf2 , 0x00 , ( byte ) 0xa0 , ( byte ) 0xc9 , ( byte ) 0x1e , ( byte ) 0xfb , ( byte ) 0x8b 
 + } ) ; 
 + 
 + public int DIGCF _ DEFAULT = 0x1 ; 
 + public int DIGCF _ PRESENT = 0x2 ; 
 + public int DIGCF _ ALLCLASSES = 0x4 ; 
 + public int DIGCF _ PROFILE = 0x8 ; 
 + public int DIGCF _ DEVICEINTERFACE = 0x10 ; 
 + 
 + public int SPDRP _ REMOVAL _ POLICY = 0x0000001F ; 
 + public int CM _ DEVCAP _ REMOVABLE = 0x00000004 ; 
 + 
 + WinNT . HANDLE SetupDiGetClassDevs ( Guid . GUID . ByReference classGuid , Pointer enumerator , Pointer hwndParent , int flags ) ; 
 + 
 + boolean SetupDiDestroyDeviceInfoList ( WinNT . HANDLE hDevInfo ) ; 
 + 
 + boolean SetupDiEnumDeviceInterfaces ( WinNT . HANDLE hDevInfo , Pointer devInfo , Guid . GUID . ByReference interfaceClassGuid , 
 + int memberIndex , SP _ DEVICE _ INTERFACE _ DATA . ByReference deviceInterfaceData ) ; 
 + 
 + boolean SetupDiGetDeviceInterfaceDetail ( WinNT . HANDLE hDevInfo , SP _ DEVICE _ INTERFACE _ DATA . ByReference deviceInterfaceData , 
 + Pointer deviceInterfaceDetailData , int deviceInterfaceDetailDataSize , 
 + IntByReference requiredSize , SP _ DEVINFO _ DATA . ByReference deviceInfoData ) ; 
 + 
 + boolean SetupDiGetDeviceRegistryProperty ( WinNT . HANDLE DeviceInfoSet , SP _ DEVINFO _ DATA . ByReference DeviceInfoData , int Property , 
 + IntByReference PropertyRegDataType , Pointer PropertyBuffer , int PropertyBufferSize , 
 + IntByReference RequiredSize ) ; 
 + 
 + public static class SP _ DEVICE _ INTERFACE _ DATA extends Structure { 
 + 
 + public static class ByReference extends SP _ DEVINFO _ DATA implements Structure . ByReference { 
 + public ByReference ( ) { 
 + } 
 + 
 + public ByReference ( Pointer memory ) { 
 + super ( memory ) ; 
 + } 
 + } 
 + 
 + public SP _ DEVICE _ INTERFACE _ DATA ( ) { 
 + cbSize = size ( ) ; 
 + } 
 + 
 + public SP _ DEVICE _ INTERFACE _ DATA ( Pointer memory ) { 
 + useMemory ( memory ) ; 
 + read ( ) ; 
 + } 
 + 
 + public int cbSize ; 
 + public Guid . GUID InterfaceClassGuid ; 
 + public int Flags ; 
 + public Pointer Reserved ; 
 + } 
 + 
 + public static class SP _ DEVINFO _ DATA extends Structure { 
 + 
 + public static class ByReference extends SP _ DEVINFO _ DATA implements Structure . ByReference { 
 + public ByReference ( ) { 
 + } 
 + 
 + public ByReference ( Pointer memory ) { 
 + super ( memory ) ; 
 + } 
 + } 
 + 
 + public SP _ DEVINFO _ DATA ( ) { 
 + cbSize = size ( ) ; 
 + } 
 + 
 + public SP _ DEVINFO _ DATA ( Pointer memory ) { 
 + useMemory ( memory ) ; 
 + read ( ) ; 
 + } 
 + 
 + public int cbSize ; 
 + public Guid . GUID InterfaceClassGuid ; 
 + public int Flags ; 
 + public Pointer Reserved ; 
 + } 
 + } 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Tlhelp32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / Tlhelp32 . java 
 new file mode 100644 
 index 0000000 . . 918b6a0 
 - - - / dev / null 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Tlhelp32 . java 
 @ @ - 0 , 0 + 1 , 40 @ @ 
 + package com . sun . jna . platform . win32 ; 
 + 
 + import com . sun . jna . Pointer ; 
 + import com . sun . jna . Structure ; 
 + import com . sun . jna . win32 . StdCallLibrary ; 
 + 
 + public interface Tlhelp32 extends StdCallLibrary { 
 + 
 + public static class PROCESSENTRY32W extends Structure { 
 + 
 + public static class ByReference extends PROCESSENTRY32W implements Structure . ByReference { 
 + public ByReference ( ) { 
 + } 
 + 
 + public ByReference ( Pointer memory ) { 
 + super ( memory ) ; 
 + } 
 + } 
 + 
 + public PROCESSENTRY32W ( ) { 
 + dwSize = new WinDef . DWORD ( size ( ) ) ; 
 + } 
 + 
 + public PROCESSENTRY32W ( Pointer memory ) { 
 + useMemory ( memory ) ; 
 + read ( ) ; 
 + } 
 + 
 + public WinDef . DWORD dwSize ; 
 + public WinDef . DWORD cntUsage ; 
 + public WinDef . DWORD th32ProcessID ; 
 + public BaseTSD . ULONG _ PTR th32DefaultHeapID ; 
 + public WinDef . DWORD th32ModuleID ; 
 + public WinDef . DWORD cntThreads ; 
 + public WinDef . DWORD th32ParentProcessID ; 
 + public WinDef . LONG pcPriClassBase ; 
 + public WinDef . DWORD dwFlags ; 
 + public char [ ] szExeFile = new char [ WinDef . MAX _ PATH ] ; 
 + } 
 + } 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java b / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java 
 index f3ec1fa . . d7bd11a 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / User32 . java 
 @ @ - 28 , 7 + 28 , 6 @ @ import com . sun . jna . platform . win32 . WinDef . WPARAM ; 
 import com . sun . jna . platform . win32 . WinNT . HANDLE ; 
 import com . sun . jna . platform . win32 . WinUser . BLENDFUNCTION ; 
 import com . sun . jna . platform . win32 . WinUser . FLASHWINFO ; 
 - import com . sun . jna . platform . win32 . structures . INPUT ; 
 import com . sun . jna . platform . win32 . WinUser . GUITHREADINFO ; 
 import com . sun . jna . platform . win32 . WinUser . HHOOK ; 
 import com . sun . jna . platform . win32 . WinUser . HOOKPROC ; 
 @ @ - 915 , 7 + 914 , 7 @ @ public interface User32 extends StdCallLibrary { 
 * This function fails when it is blocked by UIPI . Note that neither GetLastError nor the return value will 
 * indicate the failure was caused by UIPI blocking . 
 * / 
 - DWORD SendInput ( DWORD nInputs , INPUT [ ] pInputs , int cbSize ) ; 
 + DWORD SendInput ( DWORD nInputs , WinUser . INPUT [ ] pInputs , int cbSize ) ; 
 
 / * * 
 * Waits until the specified process has finished processing its initial input and is waiting for user input with no 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / VerRsrc . java b / contrib / platform / src / com / sun / jna / platform / win32 / VerRsrc . java 
 new file mode 100644 
 index 0000000 . . 1c3b50b 
 - - - / dev / null 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / VerRsrc . java 
 @ @ - 0 , 0 + 1 , 42 @ @ 
 + package com . sun . jna . platform . win32 ; 
 + 
 + import com . sun . jna . Pointer ; 
 + import com . sun . jna . Structure ; 
 + import com . sun . jna . win32 . StdCallLibrary ; 
 + 
 + public interface VerRsrc extends StdCallLibrary { 
 + 
 + public static class VS _ FIXEDFILEINFO extends Structure { 
 + 
 + public static class ByReference extends VS _ FIXEDFILEINFO implements Structure . ByReference { 
 + public ByReference ( ) { 
 + } 
 + 
 + public ByReference ( Pointer memory ) { 
 + super ( memory ) ; 
 + } 
 + } 
 + 
 + public VS _ FIXEDFILEINFO ( ) { 
 + } 
 + 
 + public VS _ FIXEDFILEINFO ( Pointer memory ) { 
 + useMemory ( memory ) ; 
 + read ( ) ; 
 + } 
 + 
 + public int Signature ; 
 + public int StrucVersion ; 
 + public int FileVersionMS ; 
 + public int FileVersionLS ; 
 + public int ProductVersionMS ; 
 + public int ProductVersionLS ; 
 + public int FileFlagsMask ; 
 + public int FileFlags ; 
 + public int FileOS ; 
 + public int FileType ; 
 + public int FileSubtype ; 
 + public int FileDateMS ; 
 + public int FileDateLS ; 
 + } 
 + } 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Version . java b / contrib / platform / src / com / sun / jna / platform / win32 / Version . java 
 new file mode 100644 
 index 0000000 . . f2a1727 
 - - - / dev / null 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Version . java 
 @ @ - 0 , 0 + 1 , 23 @ @ 
 + package com . sun . jna . platform . win32 ; 
 + 
 + import com . sun . jna . Native ; 
 + import com . sun . jna . Pointer ; 
 + import com . sun . jna . ptr . IntByReference ; 
 + import com . sun . jna . ptr . PointerByReference ; 
 + import com . sun . jna . win32 . StdCallLibrary ; 
 + import com . sun . jna . win32 . W32APIOptions ; 
 + 
 + / * * 
 + * Provides access to the w32 version library . 
 + * / 
 + public interface Version extends StdCallLibrary { 
 + 
 + Version INSTANCE = ( Version ) 
 + Native . loadLibrary ( " version " , Version . class , W32APIOptions . DEFAULT _ OPTIONS ) ; 
 + 
 + int GetFileVersionInfoSize ( String lptstrFilename , IntByReference lpdwHandle ) ; 
 + 
 + boolean GetFileVersionInfo ( String lptstrFilename , int dwHandle , int dwLen , Pointer lpData ) ; 
 + 
 + boolean VerQueryValue ( Pointer pBlock , String lpSubBlock , PointerByReference lplpBuffer , IntByReference puLen ) ; 
 + } 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java b / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java 
 index 74eabcf . . a35a9db 100644 
 - - - a / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / WinUser . java 
 @ @ - 14 , 6 + 14 , 7 @ @ package com . sun . jna . platform . win32 ; 
 
 import com . sun . jna . Pointer ; 
 import com . sun . jna . Structure ; 
 + import com . sun . jna . Union ; 
 import com . sun . jna . platform . win32 . BaseTSD . ULONG _ PTR ; 
 import com . sun . jna . platform . win32 . WinDef . HWND ; 
 import com . sun . jna . platform . win32 . WinDef . LPARAM ; 
 @ @ - 300 , 4 + 301 , 188 @ @ public interface WinUser extends StdCallLibrary { 
 	 public int SM _ SHUTTINGDOWN = 0x2000 ; 
 	 public int SM _ REMOTECONTROL = 0x2001 ; 
 	 public int SM _ CARETBLINKINGENABLED = 0x2002 ; 
 + 
 + / * * 
 + * Contains information about a simulated message generated by an input device other than a keyboard or mouse . 
 + * / 
 + public static class HARDWAREINPUT extends Structure { 
 + 
 + public static class ByReference extends HARDWAREINPUT implements Structure . ByReference { 
 + public ByReference ( ) { 
 + } 
 + 
 + public ByReference ( Pointer memory ) { 
 + super ( memory ) ; 
 + } 
 + } 
 + 
 + public HARDWAREINPUT ( ) { 
 + setAlignType ( Structure . ALIGN _ MSVC ) ; 
 + } 
 + 
 + public HARDWAREINPUT ( Pointer memory ) { 
 + setAlignType ( Structure . ALIGN _ MSVC ) ; 
 + useMemory ( memory ) ; 
 + read ( ) ; 
 + } 
 + 
 + public WinDef . DWORD uMsg ; 
 + public WinDef . WORD wParamL ; 
 + public WinDef . WORD wParamH ; 
 + } 
 + 
 + / * * 
 + * Used by SendInput to store information for synthesizing input events such as keystrokes , mouse movement , and mouse 
 + * clicks . 
 + * / 
 + public static class INPUT extends Structure { 
 + 
 + public static final int INPUT _ MOUSE = 0 ; 
 + public static final int INPUT _ KEYBOARD = 1 ; 
 + public static final int INPUT _ HARDWARE = 2 ; 
 + 
 + public static class ByReference extends INPUT implements Structure . ByReference { 
 + public ByReference ( ) { 
 + } 
 + 
 + public ByReference ( Pointer memory ) { 
 + super ( memory ) ; 
 + } 
 + } 
 + 
 + public INPUT ( ) { 
 + setAlignType ( Structure . ALIGN _ MSVC ) ; 
 + } 
 + 
 + public INPUT ( Pointer memory ) { 
 + setAlignType ( Structure . ALIGN _ MSVC ) ; 
 + useMemory ( memory ) ; 
 + read ( ) ; 
 + } 
 + 
 + public WinDef . DWORD type ; 
 + public INPUT _ UNION input = new INPUT _ UNION ( ) ; 
 + 
 + public static class INPUT _ UNION extends Union { 
 + 
 + public INPUT _ UNION ( ) { 
 + } 
 + 
 + public INPUT _ UNION ( Pointer memory ) { 
 + useMemory ( memory ) ; 
 + read ( ) ; 
 + } 
 + 
 + public MOUSEINPUT mi ; 
 + public KEYBDINPUT ki ; 
 + public HARDWAREINPUT hi ; 
 + } 
 + } 
 + 
 + / * * 
 + * Contains information about a simulated keyboard event . 
 + * / 
 + public static class KEYBDINPUT extends Structure { 
 + 
 + / * * 
 + * If specified , the scan code was preceded by a prefix byte that has the value 0xE0 ( 224 ) . 
 + * / 
 + public static final int KEYEVENTF _ EXTENDEDKEY = 0x0001 ; 
 + 
 + / * * 
 + * If specified , the key is being released . If not specified , the key is being pressed . 
 + * / 
 + public static final int KEYEVENTF _ KEYUP = 0x0002 ; 
 + 
 + / * * 
 + * If specified , the system synthesizes a VK _ PACKET keystroke . The wVk parameter must be zero . This flag can only be 
 + * combined with the KEYEVENTF _ KEYUP flag . For more information , see the Remarks section . 
 + * / 
 + public static final int KEYEVENTF _ UNICODE = 0x0004 ; 
 + 
 + / * * 
 + * If specified , wScan identifies the key and wVk is ignored . 
 + * / 
 + public static final int KEYEVENTF _ SCANCODE = 0x0008 ; 
 + 
 + public static class ByReference extends KEYBDINPUT implements Structure . ByReference { 
 + public ByReference ( ) { 
 + } 
 + 
 + public ByReference ( Pointer memory ) { 
 + super ( memory ) ; 
 + } 
 + } 
 + 
 + public KEYBDINPUT ( ) { 
 + setAlignType ( Structure . ALIGN _ MSVC ) ; 
 + } 
 + 
 + public KEYBDINPUT ( Pointer memory ) { 
 + setAlignType ( Structure . ALIGN _ MSVC ) ; 
 + useMemory ( memory ) ; 
 + read ( ) ; 
 + } 
 + 
 + / * * 
 + * A virtual - key code . The code must be a value in the range 1 to 254 . If the dwFlags member specifies 
 + * KEYEVENTF _ UNICODE , wVk must be 0 . 
 + * / 
 + public WinDef . WORD wVk ; 
 + 
 + / * * 
 + * A hardware scan code for the key . If dwFlags specifies KEYEVENTF _ UNICODE , wScan specifies a Unicode character 
 + * which is to be sent to the foreground application . 
 + * / 
 + public WinDef . WORD wScan ; 
 + 
 + / * * 
 + * Specifies various aspects of a keystroke . This member can be certain combinations of the following values . 
 + * / 
 + public WinDef . DWORD dwFlags ; 
 + 
 + / * * 
 + * The time stamp for the event , in milliseconds . If this parameter is zero , the system will provide its own time 
 + * stamp . 
 + * / 
 + public WinDef . DWORD time ; 
 + 
 + / * * 
 + * An additional value associated with the keystroke . Use the GetMessageExtraInfo function to obtain this 
 + * information . 
 + * / 
 + public BaseTSD . ULONG _ PTR dwExtraInfo ; 
 + } 
 + 
 + / * * 
 + * Contains information about a simulated mouse event . 
 + * / 
 + public static class MOUSEINPUT extends Structure { 
 + 
 + public static class ByReference extends MOUSEINPUT implements Structure . ByReference { 
 + public ByReference ( ) { 
 + } 
 + 
 + public ByReference ( Pointer memory ) { 
 + super ( memory ) ; 
 + } 
 + } 
 + 
 + public MOUSEINPUT ( ) { 
 + setAlignType ( Structure . ALIGN _ MSVC ) ; 
 + } 
 + 
 + public MOUSEINPUT ( Pointer memory ) { 
 + setAlignType ( Structure . ALIGN _ MSVC ) ; 
 + useMemory ( memory ) ; 
 + read ( ) ; 
 + } 
 + 
 + public WinDef . LONG dx ; 
 + public WinDef . LONG dy ; 
 + public WinDef . DWORD mouseData ; 
 + public WinDef . DWORD dwFlags ; 
 + public WinDef . DWORD time ; 
 + public BaseTSD . ULONG _ PTR dwExtraInfo ; 
 + } 
 } 
 diff - - git a / contrib / platform / src / com / sun / jna / platform / win32 / Winioctl . java b / contrib / platform / src / com / sun / jna / platform / win32 / Winioctl . java 
 new file mode 100644 
 index 0000000 . . 314a97d 
 - - - / dev / null 
 + + + b / contrib / platform / src / com / sun / jna / platform / win32 / Winioctl . java 
 @ @ - 0 , 0 + 1 , 32 @ @ 
 + package com . sun . jna . platform . win32 ; 
 + 
 + import com . sun . jna . Pointer ; 
 + import com . sun . jna . Structure ; 
 + import com . sun . jna . win32 . StdCallLibrary ; 
 + 
 + public interface Winioctl extends StdCallLibrary { 
 + 
 + public static class STORAGE _ DEVICE _ NUMBER extends Structure { 
 + 
 + public static class ByReference extends STORAGE _ DEVICE _ NUMBER implements Structure . ByReference { 
 + public ByReference ( ) { 
 + } 
 + 
 + public ByReference ( Pointer memory ) { 
 + super ( memory ) ; 
 + } 
 + } 
 + 
 + public STORAGE _ DEVICE _ NUMBER ( ) { 
 + } 
 + 
 + public STORAGE _ DEVICE _ NUMBER ( Pointer memory ) { 
 + useMemory ( memory ) ; 
 + read ( ) ; 
 + } 
 + 
 + public int DeviceType ; 
 + public int DeviceNumber ; 
 + public int PartitionNumber ; 
 + } 
 + } 
 diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Msi . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Msi . java 
 deleted file mode 100644 
 index ad83860 . . 0000000 
 - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Msi . java 
 + + + / dev / null 
 @ @ - 1 , 39 + 0 , 0 @ @ 
 - package com . sun . jna . platform . win32 ; 
 - 
 - import com . sun . jna . Native ; 
 - import com . sun . jna . WString ; 
 - import com . sun . jna . ptr . IntByReference ; 
 - import com . sun . jna . win32 . StdCallLibrary ; 
 - import com . sun . jna . win32 . W32APIOptions ; 
 - 
 - / * * 
 - * Provides access to the w32 MSI installer library . 
 - * / 
 - public interface Msi extends StdCallLibrary { 
 - 
 - Msi INSTANCE = ( Msi ) 
 - Native . loadLibrary ( " msi " , Msi . class , W32APIOptions . DEFAULT _ OPTIONS ) ; 
 - 
 - static int INSTALLSTATE _ NOTUSED = - 7 ; 
 - static int INSTALLSTATE _ BADCONFIG = - 6 ; 
 - static int INSTALLSTATE _ INCOMPLETE = - 5 ; 
 - static int INSTALLSTATE _ SOURCEABSENT = - 4 ; 
 - static int INSTALLSTATE _ MOREDATA = - 3 ; 
 - static int INSTALLSTATE _ INVALIDARG = - 2 ; 
 - static int INSTALLSTATE _ UNKNOWN = - 1 ; 
 - static int INSTALLSTATE _ BROKEN = 0 ; 
 - static int INSTALLSTATE _ ADVERTISED = 1 ; 
 - static int INSTALLSTATE _ REMOVED = 1 ; 
 - static int INSTALLSTATE _ ABSENT = 2 ; 
 - static int INSTALLSTATE _ LOCAL = 3 ; 
 - static int INSTALLSTATE _ SOURCE = 4 ; 
 - static int INSTALLSTATE _ DEFAULT = 5 ; 
 - 
 - int MsiGetComponentPathW ( WString szProduct , WString szComponent , char [ ] lpPathBuf , IntByReference pcchBuf ) ; 
 - 
 - int MsiLocateComponentW ( WString szComponent , char [ ] lpPathBuf , IntByReference pcchBuf ) ; 
 - 
 - int MsiGetProductCodeW ( WString szComponent , char [ ] lpProductBuf ) ; 
 - 
 - int MsiEnumComponents ( WinDef . DWORD iComponentIndex , char [ ] lpComponentBuf ) ; 
 - } 
 diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java 
 deleted file mode 100644 
 index 72572c5 . . 0000000 
 - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / SetupApi . java 
 + + + / dev / null 
 @ @ - 1 , 46 + 0 , 0 @ @ 
 - package com . sun . jna . platform . win32 ; 
 - 
 - import com . sun . jna . Native ; 
 - import com . sun . jna . Pointer ; 
 - import com . sun . jna . platform . win32 . Guid . GUID ; 
 - import com . sun . jna . platform . win32 . structures . SP _ DEVICE _ INTERFACE _ DATA ; 
 - import com . sun . jna . platform . win32 . structures . SP _ DEVINFO _ DATA ; 
 - import com . sun . jna . ptr . IntByReference ; 
 - import com . sun . jna . win32 . StdCallLibrary ; 
 - import com . sun . jna . win32 . W32APIOptions ; 
 - 
 - public interface SetupApi extends StdCallLibrary { 
 - 
 - SetupApi INSTANCE = ( SetupApi ) 
 - Native . loadLibrary ( " setupapi " , SetupApi . class , W32APIOptions . DEFAULT _ OPTIONS ) ; 
 - 
 - public static GUID GUID _ DEVINTERFACE _ DISK = new GUID ( new byte [ ] 
 - { 
 - 0x07 , 0x63 , ( byte ) 0xf5 , 0x53 , ( byte ) 0xbf , ( byte ) 0xb6 , ( byte ) 0xd0 , 0x11 , 
 - ( byte ) 0x94 , ( byte ) 0xf2 , 0x00 , ( byte ) 0xa0 , ( byte ) 0xc9 , ( byte ) 0x1e , ( byte ) 0xfb , ( byte ) 0x8b 
 - } ) ; 
 - 
 - public int DIGCF _ DEFAULT = 0x1 ; 
 - public int DIGCF _ PRESENT = 0x2 ; 
 - public int DIGCF _ ALLCLASSES = 0x4 ; 
 - public int DIGCF _ PROFILE = 0x8 ; 
 - public int DIGCF _ DEVICEINTERFACE = 0x10 ; 
 - 
 - public int SPDRP _ REMOVAL _ POLICY = 0x0000001F ; 
 - public int CM _ DEVCAP _ REMOVABLE = 0x00000004 ; 
 - 
 - WinNT . HANDLE SetupDiGetClassDevs ( GUID . ByReference classGuid , Pointer enumerator , Pointer hwndParent , int flags ) ; 
 - 
 - boolean SetupDiDestroyDeviceInfoList ( WinNT . HANDLE hDevInfo ) ; 
 - 
 - boolean SetupDiEnumDeviceInterfaces ( WinNT . HANDLE hDevInfo , Pointer devInfo , GUID . ByReference interfaceClassGuid , 
 - int memberIndex , SP _ DEVICE _ INTERFACE _ DATA . ByReference deviceInterfaceData ) ; 
 - 
 - boolean SetupDiGetDeviceInterfaceDetail ( WinNT . HANDLE hDevInfo , SP _ DEVICE _ INTERFACE _ DATA . ByReference deviceInterfaceData , 
 - Pointer deviceInterfaceDetailData , int deviceInterfaceDetailDataSize , 
 - IntByReference requiredSize , SP _ DEVINFO _ DATA . ByReference deviceInfoData ) ; 
 - 
 - boolean SetupDiGetDeviceRegistryProperty ( WinNT . HANDLE DeviceInfoSet , SP _ DEVINFO _ DATA . ByReference DeviceInfoData , int Property , 
 - IntByReference PropertyRegDataType , Pointer PropertyBuffer , int PropertyBufferSize , 
 - IntByReference RequiredSize ) ; 
 - } 
 \ No newline at end of file 
 diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Version . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Version . java 
 deleted file mode 100644 
 index 093dc00 . . 0000000 
 - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / Version . java 
 + + + / dev / null 
 @ @ - 1 , 23 + 0 , 0 @ @ 
 - package com . sun . jna . platform . win32 ; 
 - 
 - import com . sun . jna . Native ; 
 - import com . sun . jna . Pointer ; 
 - import com . sun . jna . ptr . IntByReference ; 
 - import com . sun . jna . ptr . PointerByReference ; 
 - import com . sun . jna . win32 . StdCallLibrary ; 
 - import com . sun . jna . win32 . W32APIOptions ; 
 - 
 - / * * 
 - * Provides access to the w32 version library . 
 - * / 
 - public interface Version extends StdCallLibrary { 
 - 
 - Version INSTANCE = ( Version ) 
 - Native . loadLibrary ( " version " , Version . class , W32APIOptions . DEFAULT _ OPTIONS ) ; 
 - 
 - int GetFileVersionInfoSize ( String lptstrFilename , IntByReference lpdwHandle ) ; 
 - 
 - boolean GetFileVersionInfo ( String lptstrFilename , int dwHandle , int dwLen , Pointer lpData ) ; 
 - 
 - boolean VerQueryValue ( Pointer pBlock , String lpSubBlock , PointerByReference lplpBuffer , IntByReference puLen ) ; 
 - } 
 diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / HARDWAREINPUT . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / HARDWAREINPUT . java 
 deleted file mode 100644 
 index 9a212dc . . 0000000 
 - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / HARDWAREINPUT . java 
 + + + / dev / null 
 @ @ - 1 , 34 + 0 , 0 @ @ 
 - package com . sun . jna . platform . win32 . structures ; 
 - 
 - import com . sun . jna . Pointer ; 
 - import com . sun . jna . Structure ; 
 - import com . sun . jna . platform . win32 . WinDef ; 
 - 
 - / * * 
 - * Contains information about a simulated message generated by an input device other than a keyboard or mouse . 
 - * / 
 - public class HARDWAREINPUT extends Structure { 
 - 
 - public static class ByReference extends HARDWAREINPUT implements Structure . ByReference { 
 - public ByReference ( ) { 
 - } 
 - 
 - public ByReference ( Pointer memory ) { 
 - super ( memory ) ; 
 - } 
 - } 
 - 
 - public HARDWAREINPUT ( ) { 
 - setAlignType ( Structure . ALIGN _ MSVC ) ; 
 - } 
 - 
 - public HARDWAREINPUT ( Pointer memory ) { 
 - setAlignType ( Structure . ALIGN _ MSVC ) ; 
 - useMemory ( memory ) ; 
 - read ( ) ; 
 - } 
 - 
 - public WinDef . DWORD uMsg ; 
 - public WinDef . WORD wParamL ; 
 - public WinDef . WORD wParamH ; 
 - } 
 \ No newline at end of file 
 diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / INPUT . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / INPUT . java 
 deleted file mode 100644 
 index 28e0e3b . . 0000000 
 - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / INPUT . java 
 + + + / dev / null 
 @ @ - 1 , 54 + 0 , 0 @ @ 
 - package com . sun . jna . platform . win32 . structures ; 
 - 
 - import com . sun . jna . Pointer ; 
 - import com . sun . jna . Structure ; 
 - import com . sun . jna . Union ; 
 - import com . sun . jna . platform . win32 . WinDef ; 
 - 
 - / * * 
 - * Used by SendInput to store information for synthesizing input events such as keystrokes , mouse movement , and mouse 
 - * clicks . 
 - * / 
 - public class INPUT extends Structure { 
 - 
 - public static final int INPUT _ MOUSE = 0 ; 
 - public static final int INPUT _ KEYBOARD = 1 ; 
 - public static final int INPUT _ HARDWARE = 2 ; 
 - 
 - public static class ByReference extends INPUT implements Structure . ByReference { 
 - public ByReference ( ) { 
 - } 
 - 
 - public ByReference ( Pointer memory ) { 
 - super ( memory ) ; 
 - } 
 - } 
 - 
 - public INPUT ( ) { 
 - setAlignType ( Structure . ALIGN _ MSVC ) ; 
 - } 
 - 
 - public INPUT ( Pointer memory ) { 
 - setAlignType ( Structure . ALIGN _ MSVC ) ; 
 - useMemory ( memory ) ; 
 - read ( ) ; 
 - } 
 - 
 - public WinDef . DWORD type ; 
 - public INPUT _ UNION input = new INPUT _ UNION ( ) ; 
 - 
 - public static class INPUT _ UNION extends Union { 
 - 
 - public INPUT _ UNION ( ) { 
 - } 
 - 
 - public INPUT _ UNION ( Pointer memory ) { 
 - useMemory ( memory ) ; 
 - read ( ) ; 
 - } 
 - 
 - public MOUSEINPUT mi ; 
 - public KEYBDINPUT ki ; 
 - public HARDWAREINPUT hi ; 
 - } 
 - } 
 diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / KEYBDINPUT . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / KEYBDINPUT . java 
 deleted file mode 100644 
 index 6abfe61 . . 0000000 
 - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / KEYBDINPUT . java 
 + + + / dev / null 
 @ @ - 1 , 81 + 0 , 0 @ @ 
 - package com . sun . jna . platform . win32 . structures ; 
 - 
 - import com . sun . jna . Pointer ; 
 - import com . sun . jna . Structure ; 
 - import com . sun . jna . platform . win32 . BaseTSD ; 
 - import com . sun . jna . platform . win32 . WinDef ; 
 - 
 - / * * 
 - * Contains information about a simulated keyboard event . 
 - * / 
 - public class KEYBDINPUT extends Structure { 
 - 
 - / * * 
 - * If specified , the scan code was preceded by a prefix byte that has the value 0xE0 ( 224 ) . 
 - * / 
 - public static final int KEYEVENTF _ EXTENDEDKEY = 0x0001 ; 
 - 
 - / * * 
 - * If specified , the key is being released . If not specified , the key is being pressed . 
 - * / 
 - public static final int KEYEVENTF _ KEYUP = 0x0002 ; 
 - 
 - / * * 
 - * If specified , the system synthesizes a VK _ PACKET keystroke . The wVk parameter must be zero . This flag can only be 
 - * combined with the KEYEVENTF _ KEYUP flag . For more information , see the Remarks section . 
 - * / 
 - public static final int KEYEVENTF _ UNICODE = 0x0004 ; 
 - 
 - / * * 
 - * If specified , wScan identifies the key and wVk is ignored . 
 - * / 
 - public static final int KEYEVENTF _ SCANCODE = 0x0008 ; 
 - 
 - public static class ByReference extends KEYBDINPUT implements Structure . ByReference { 
 - public ByReference ( ) { 
 - } 
 - 
 - public ByReference ( Pointer memory ) { 
 - super ( memory ) ; 
 - } 
 - } 
 - 
 - public KEYBDINPUT ( ) { 
 - setAlignType ( Structure . ALIGN _ MSVC ) ; 
 - } 
 - 
 - public KEYBDINPUT ( Pointer memory ) { 
 - setAlignType ( Structure . ALIGN _ MSVC ) ; 
 - useMemory ( memory ) ; 
 - read ( ) ; 
 - } 
 - 
 - / * * 
 - * A virtual - key code . The code must be a value in the range 1 to 254 . If the dwFlags member specifies 
 - * KEYEVENTF _ UNICODE , wVk must be 0 . 
 - * / 
 - public WinDef . WORD wVk ; 
 - 
 - / * * 
 - * A hardware scan code for the key . If dwFlags specifies KEYEVENTF _ UNICODE , wScan specifies a Unicode character 
 - * which is to be sent to the foreground application . 
 - * / 
 - public WinDef . WORD wScan ; 
 - 
 - / * * 
 - * Specifies various aspects of a keystroke . This member can be certain combinations of the following values . 
 - * / 
 - public WinDef . DWORD dwFlags ; 
 - 
 - / * * 
 - * The time stamp for the event , in milliseconds . If this parameter is zero , the system will provide its own time 
 - * stamp . 
 - * / 
 - public WinDef . DWORD time ; 
 - 
 - / * * 
 - * An additional value associated with the keystroke . Use the GetMessageExtraInfo function to obtain this 
 - * information . 
 - * / 
 - public BaseTSD . ULONG _ PTR dwExtraInfo ; 
 - } 
 diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / MOUSEINPUT . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / MOUSEINPUT . java 
 deleted file mode 100644 
 index 41a294b . . 0000000 
 - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / MOUSEINPUT . java 
 + + + / dev / null 
 @ @ - 1 , 38 + 0 , 0 @ @ 
 - package com . sun . jna . platform . win32 . structures ; 
 - 
 - import com . sun . jna . Pointer ; 
 - import com . sun . jna . Structure ; 
 - import com . sun . jna . platform . win32 . BaseTSD ; 
 - import com . sun . jna . platform . win32 . WinDef ; 
 - 
 - / * * 
 - * Contains information about a simulated mouse event . 
 - * / 
 - public class MOUSEINPUT extends Structure { 
 - 
 - public static class ByReference extends MOUSEINPUT implements Structure . ByReference { 
 - public ByReference ( ) { 
 - } 
 - 
 - public ByReference ( Pointer memory ) { 
 - super ( memory ) ; 
 - } 
 - } 
 - 
 - public MOUSEINPUT ( ) { 
 - setAlignType ( Structure . ALIGN _ MSVC ) ; 
 - } 
 - 
 - public MOUSEINPUT ( Pointer memory ) { 
 - setAlignType ( Structure . ALIGN _ MSVC ) ; 
 - useMemory ( memory ) ; 
 - read ( ) ; 
 - } 
 - 
 - public WinDef . LONG dx ; 
 - public WinDef . LONG dy ; 
 - public WinDef . DWORD mouseData ; 
 - public WinDef . DWORD dwFlags ; 
 - public WinDef . DWORD time ; 
 - public BaseTSD . ULONG _ PTR dwExtraInfo ; 
 - } 
 \ No newline at end of file 
 diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / PROCESSENTRY32W . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / PROCESSENTRY32W . java 
 deleted file mode 100644 
 index 9c75727 . . 0000000 
 - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / PROCESSENTRY32W . java 
 + + + / dev / null 
 @ @ - 1 , 38 + 0 , 0 @ @ 
 - package com . sun . jna . platform . win32 . structures ; 
 - 
 - import com . sun . jna . Pointer ; 
 - import com . sun . jna . Structure ; 
 - import com . sun . jna . platform . win32 . BaseTSD ; 
 - import com . sun . jna . platform . win32 . WinDef ; 
 - 
 - public class PROCESSENTRY32W extends Structure { 
 - 
 - public static class ByReference extends PROCESSENTRY32W implements Structure . ByReference { 
 - public ByReference ( ) { 
 - } 
 - 
 - public ByReference ( Pointer memory ) { 
 - super ( memory ) ; 
 - } 
 - } 
 - 
 - public PROCESSENTRY32W ( ) { 
 - dwSize = new WinDef . DWORD ( size ( ) ) ; 
 - } 
 - 
 - public PROCESSENTRY32W ( Pointer memory ) { 
 - useMemory ( memory ) ; 
 - read ( ) ; 
 - } 
 - 
 - public WinDef . DWORD dwSize ; 
 - public WinDef . DWORD cntUsage ; 
 - public WinDef . DWORD th32ProcessID ; 
 - public BaseTSD . ULONG _ PTR th32DefaultHeapID ; 
 - public WinDef . DWORD th32ModuleID ; 
 - public WinDef . DWORD cntThreads ; 
 - public WinDef . DWORD th32ParentProcessID ; 
 - public WinDef . LONG pcPriClassBase ; 
 - public WinDef . DWORD dwFlags ; 
 - public char [ ] szExeFile = new char [ WinDef . MAX _ PATH ] ; 
 - } 
 diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / SP _ DEVICE _ INTERFACE _ DATA . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / SP _ DEVICE _ INTERFACE _ DATA . java 
 deleted file mode 100644 
 index 6ea5e18 . . 0000000 
 - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / SP _ DEVICE _ INTERFACE _ DATA . java 
 + + + / dev / null 
 @ @ - 1 , 31 + 0 , 0 @ @ 
 - package com . sun . jna . platform . win32 . structures ; 
 - 
 - import com . sun . jna . Pointer ; 
 - import com . sun . jna . Structure ; 
 - import com . sun . jna . platform . win32 . Guid . GUID ; 
 - 
 - public class SP _ DEVICE _ INTERFACE _ DATA extends Structure { 
 - 
 - public static class ByReference extends SP _ DEVINFO _ DATA implements Structure . ByReference { 
 - public ByReference ( ) { 
 - } 
 - 
 - public ByReference ( Pointer memory ) { 
 - super ( memory ) ; 
 - } 
 - } 
 - 
 - public SP _ DEVICE _ INTERFACE _ DATA ( ) { 
 - cbSize = size ( ) ; 
 - } 
 - 
 - public SP _ DEVICE _ INTERFACE _ DATA ( Pointer memory ) { 
 - useMemory ( memory ) ; 
 - read ( ) ; 
 - } 
 - 
 - public int cbSize ; 
 - public GUID InterfaceClassGuid ; 
 - public int Flags ; 
 - public Pointer Reserved ; 
 - } 
 \ No newline at end of file 
 diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / SP _ DEVINFO _ DATA . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / SP _ DEVINFO _ DATA . java 
 deleted file mode 100644 
 index 714ef57 . . 0000000 
 - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / SP _ DEVINFO _ DATA . java 
 + + + / dev / null 
 @ @ - 1 , 31 + 0 , 0 @ @ 
 - package com . sun . jna . platform . win32 . structures ; 
 - 
 - import com . sun . jna . Pointer ; 
 - import com . sun . jna . Structure ; 
 - import com . sun . jna . platform . win32 . Guid . GUID ; 
 - 
 - public class SP _ DEVINFO _ DATA extends Structure { 
 - 
 - public static class ByReference extends SP _ DEVINFO _ DATA implements Structure . ByReference { 
 - public ByReference ( ) { 
 - } 
 - 
 - public ByReference ( Pointer memory ) { 
 - super ( memory ) ; 
 - } 
 - } 
 - 
 - public SP _ DEVINFO _ DATA ( ) { 
 - cbSize = size ( ) ; 
 - } 
 - 
 - public SP _ DEVINFO _ DATA ( Pointer memory ) { 
 - useMemory ( memory ) ; 
 - read ( ) ; 
 - } 
 - 
 - public int cbSize ; 
 - public GUID InterfaceClassGuid ; 
 - public int Flags ; 
 - public Pointer Reserved ; 
 - } 
 diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / STORAGE _ DEVICE _ NUMBER . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / STORAGE _ DEVICE _ NUMBER . java 
 deleted file mode 100644 
 index 4ad5afb . . 0000000 
 - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / STORAGE _ DEVICE _ NUMBER . java 
 + + + / dev / null 
 @ @ - 1 , 28 + 0 , 0 @ @ 
 - package com . sun . jna . platform . win32 . structures ; 
 - 
 - import com . sun . jna . Pointer ; 
 - import com . sun . jna . Structure ; 
 - 
 - public class STORAGE _ DEVICE _ NUMBER extends Structure { 
 - 
 - public static class ByReference extends STORAGE _ DEVICE _ NUMBER implements Structure . ByReference { 
 - public ByReference ( ) { 
 - } 
 - 
 - public ByReference ( Pointer memory ) { 
 - super ( memory ) ; 
 - } 
 - } 
 - 
 - public STORAGE _ DEVICE _ NUMBER ( ) { 
 - } 
 - 
 - public STORAGE _ DEVICE _ NUMBER ( Pointer memory ) { 
 - useMemory ( memory ) ; 
 - read ( ) ; 
 - } 
 - 
 - public int DeviceType ; 
 - public int DeviceNumber ; 
 - public int PartitionNumber ; 
 - } 
 diff - - git a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / VS _ FIXEDFILEINFO . java b / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / VS _ FIXEDFILEINFO . java 
 deleted file mode 100644 
 index c580fe3 . . 0000000 
 - - - a / jnalib / contrib / platform / src / com / sun / jna / platform / win32 / structures / VS _ FIXEDFILEINFO . java 
 + + + / dev / null 
 @ @ - 1 , 38 + 0 , 0 @ @ 
 - package com . sun . jna . platform . win32 . structures ; 
 - 
 - import com . sun . jna . Pointer ; 
 - import com . sun . jna . Structure ; 
 - 
 - public class VS _ FIXEDFILEINFO extends Structure { 
 - 
 - public static class ByReference extends VS _ FIXEDFILEINFO implements Structure . ByReference { 
 - public ByReference ( ) { 
 - } 
 - 
 - public ByReference ( Pointer memory ) { 
 - super ( memory ) ; 
 - } 
 - } 
 - 
 - public VS _ FIXEDFILEINFO ( ) { 
 - } 
 - 
 - public VS _ FIXEDFILEINFO ( Pointer memory ) { 
 - useMemory ( memory ) ; 
 - read ( ) ; 
 - } 
 - 
 - public int Signature ; 
 - public int StrucVersion ; 
 - public int FileVersionMS ; 
 - public int FileVersionLS ; 
 - public int ProductVersionMS ; 
 - public int ProductVersionLS ; 
 - public int FileFlagsMask ; 
 - public int FileFlags ; 
 - public int FileOS ; 
 - public int FileType ; 
 - public int FileSubtype ; 
 - public int FileDateMS ; 
 - public int FileDateLS ; 
 - }
