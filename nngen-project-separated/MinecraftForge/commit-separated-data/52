BLEU SCORE: 0.02407485903547034

TEST MSG: Fix max entity radius not being settable by making it a instance method on world . Closes # 5601
GENERATED MSG: Fix some code holding client world references longer than needed

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / world / World . java . patch b / patches / minecraft / net / minecraft / world / World . java . patch <nl> index c2c42c0 . . 7471335 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / World . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / World . java . patch <nl> @ @ - 610 , 10 + 610 , 10 @ @ <nl> - int j = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72336 _ d + 2 . 0D ) / 16 . 0D ) ; <nl> - int k = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72339 _ c - 2 . 0D ) / 16 . 0D ) ; <nl> - int l = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72334 _ f + 2 . 0D ) / 16 . 0D ) ; <nl> - + int i = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72340 _ a - MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; <nl> - + int j = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72336 _ d + MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; <nl> - + int k = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72339 _ c - MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; <nl> - + int l = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72334 _ f + MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; <nl> + + int i = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72340 _ a - getMaxEntityRadius ( ) ) / 16 . 0D ) ; <nl> + + int j = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72336 _ d + getMaxEntityRadius ( ) ) / 16 . 0D ) ; <nl> + + int k = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72339 _ c - getMaxEntityRadius ( ) ) / 16 . 0D ) ; <nl> + + int l = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72334 _ f + getMaxEntityRadius ( ) ) / 16 . 0D ) ; <nl> <nl> for ( int i1 = i ; i1 < = j ; + + i1 ) { <nl> for ( int j1 = k ; j1 < = l ; + + j1 ) { <nl> @ @ - 625 , 10 + 625 , 10 @ @ <nl> - int j = MathHelper . func _ 76143 _ f ( ( p _ 175647 _ 2 _ . field _ 72336 _ d + 2 . 0D ) / 16 . 0D ) ; <nl> - int k = MathHelper . func _ 76128 _ c ( ( p _ 175647 _ 2 _ . field _ 72339 _ c - 2 . 0D ) / 16 . 0D ) ; <nl> - int l = MathHelper . func _ 76143 _ f ( ( p _ 175647 _ 2 _ . field _ 72334 _ f + 2 . 0D ) / 16 . 0D ) ; <nl> - + int i = MathHelper . func _ 76128 _ c ( ( p _ 175647 _ 2 _ . field _ 72340 _ a - MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; <nl> - + int j = MathHelper . func _ 76143 _ f ( ( p _ 175647 _ 2 _ . field _ 72336 _ d + MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; <nl> - + int k = MathHelper . func _ 76128 _ c ( ( p _ 175647 _ 2 _ . field _ 72339 _ c - MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; <nl> - + int l = MathHelper . func _ 76143 _ f ( ( p _ 175647 _ 2 _ . field _ 72334 _ f + MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; <nl> + + int i = MathHelper . func _ 76128 _ c ( ( p _ 175647 _ 2 _ . field _ 72340 _ a - getMaxEntityRadius ( ) ) / 16 . 0D ) ; <nl> + + int j = MathHelper . func _ 76143 _ f ( ( p _ 175647 _ 2 _ . field _ 72336 _ d + getMaxEntityRadius ( ) ) / 16 . 0D ) ; <nl> + + int k = MathHelper . func _ 76128 _ c ( ( p _ 175647 _ 2 _ . field _ 72339 _ c - getMaxEntityRadius ( ) ) / 16 . 0D ) ; <nl> + + int l = MathHelper . func _ 76143 _ f ( ( p _ 175647 _ 2 _ . field _ 72334 _ f + getMaxEntityRadius ( ) ) / 16 . 0D ) ; <nl> List < T > list = Lists . newArrayList ( ) ; <nl> <nl> for ( int i1 = i ; i1 < j ; + + i1 ) { <nl> @ @ - 766 , 7 + 766 , 7 @ @ <nl> iblockstate . func _ 189546 _ a ( this , blockpos , p _ 175666 _ 2 _ , p _ 175666 _ 1 _ ) ; <nl> } <nl> } <nl> - @ @ - 2464 , 4 + 2590 , 28 @ @ <nl> + @ @ - 2464 , 4 + 2590 , 40 @ @ <nl> public abstract RecipeManager func _ 199532 _ z ( ) ; <nl> <nl> public abstract NetworkTagManager func _ 205772 _ D ( ) ; <nl> @ @ - 794 , 4 + 794 , 16 @ @ <nl> + } <nl> + return ret ; <nl> + } <nl> + + <nl> + + private double maxEntityRadius = 2 . 0D ; <nl> + + @ Override <nl> + + public double getMaxEntityRadius ( ) { <nl> + + return maxEntityRadius ; <nl> + + } <nl> + + @ Override <nl> + + public double increaseMaxEntityRadius ( double value ) { <nl> + + if ( value > maxEntityRadius ) <nl> + + maxEntityRadius = value ; <nl> + + return maxEntityRadius ; <nl> + + } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> index 9498681 . . 9af1b75 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> @ @ - 165 , 8 + 165 , 8 @ @ <nl> public void func _ 177414 _ a ( @ Nullable Entity p _ 177414 _ 1 _ , AxisAlignedBB p _ 177414 _ 2 _ , List < Entity > p _ 177414 _ 3 _ , Predicate < ? super Entity > p _ 177414 _ 4 _ ) { <nl> - int i = MathHelper . func _ 76128 _ c ( ( p _ 177414 _ 2 _ . field _ 72338 _ b - 2 . 0D ) / 16 . 0D ) ; <nl> - int j = MathHelper . func _ 76128 _ c ( ( p _ 177414 _ 2 _ . field _ 72337 _ e + 2 . 0D ) / 16 . 0D ) ; <nl> - + int i = MathHelper . func _ 76128 _ c ( ( p _ 177414 _ 2 _ . field _ 72338 _ b - net . minecraftforge . common . extensions . IForgeWorld . MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; <nl> - + int j = MathHelper . func _ 76128 _ c ( ( p _ 177414 _ 2 _ . field _ 72337 _ e + net . minecraftforge . common . extensions . IForgeWorld . MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; <nl> + + int i = MathHelper . func _ 76128 _ c ( ( p _ 177414 _ 2 _ . field _ 72338 _ b - this . field _ 76637 _ e . getMaxEntityRadius ( ) ) / 16 . 0D ) ; <nl> + + int j = MathHelper . func _ 76128 _ c ( ( p _ 177414 _ 2 _ . field _ 72337 _ e + this . field _ 76637 _ e . getMaxEntityRadius ( ) ) / 16 . 0D ) ; <nl> i = MathHelper . func _ 76125 _ a ( i , 0 , this . field _ 76645 _ j . length - 1 ) ; <nl> j = MathHelper . func _ 76125 _ a ( j , 0 , this . field _ 76645 _ j . length - 1 ) ; <nl> <nl> @ @ - 176 , 8 + 176 , 8 @ @ <nl> public < T extends Entity > void func _ 177430 _ a ( Class < ? extends T > p _ 177430 _ 1 _ , AxisAlignedBB p _ 177430 _ 2 _ , List < T > p _ 177430 _ 3 _ , @ Nullable Predicate < ? super T > p _ 177430 _ 4 _ ) { <nl> - int i = MathHelper . func _ 76128 _ c ( ( p _ 177430 _ 2 _ . field _ 72338 _ b - 2 . 0D ) / 16 . 0D ) ; <nl> - int j = MathHelper . func _ 76128 _ c ( ( p _ 177430 _ 2 _ . field _ 72337 _ e + 2 . 0D ) / 16 . 0D ) ; <nl> - + int i = MathHelper . func _ 76128 _ c ( ( p _ 177430 _ 2 _ . field _ 72338 _ b - net . minecraftforge . common . extensions . IForgeWorld . MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; <nl> - + int j = MathHelper . func _ 76128 _ c ( ( p _ 177430 _ 2 _ . field _ 72337 _ e + net . minecraftforge . common . extensions . IForgeWorld . MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; <nl> + + int i = MathHelper . func _ 76128 _ c ( ( p _ 177430 _ 2 _ . field _ 72338 _ b - this . field _ 76637 _ e . getMaxEntityRadius ( ) ) / 16 . 0D ) ; <nl> + + int j = MathHelper . func _ 76128 _ c ( ( p _ 177430 _ 2 _ . field _ 72337 _ e + this . field _ 76637 _ e . getMaxEntityRadius ( ) ) / 16 . 0D ) ; <nl> i = MathHelper . func _ 76125 _ a ( i , 0 , this . field _ 76645 _ j . length - 1 ) ; <nl> j = MathHelper . func _ 76125 _ a ( j , 0 , this . field _ 76645 _ j . length - 1 ) ; <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / extensions / IForgeWorld . java b / src / main / java / net / minecraftforge / common / extensions / IForgeWorld . java <nl> index ea6c50a . . b51c5df 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / extensions / IForgeWorld . java <nl> + + + b / src / main / java / net / minecraftforge / common / extensions / IForgeWorld . java <nl> @ @ - 24 , 9 + 24 , 16 @ @ import net . minecraftforge . common . capabilities . ICapabilityProvider ; <nl> public interface IForgeWorld extends ICapabilityProvider <nl> { <nl> / * * <nl> - * Used in the getEntitiesWithinAABB functions to expand the search area for entities . <nl> - * Modders should change this variable to a higher value if it is less then the radius <nl> - * of one of there entities . <nl> + * The maximum radius to scan for entities when trying to check bounding boxes . Vanilla ' s default is <nl> + * 2 . 0D But mods that add larger entities may increase this . <nl> * / <nl> - public static double MAX _ ENTITY _ RADIUS = 2 . 0D ; <nl> + public double getMaxEntityRadius ( ) ; <nl> + / * * <nl> + * Increases the max entity radius , this is safe to call with any value . <nl> + * The setter will verify the input value is larger then the current setting . <nl> + * <nl> + * @ param value New max radius to set . <nl> + * @ return The new max radius <nl> + * / <nl> + public double increaseMaxEntityRadius ( double value ) ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / capability / templates / VoidFluidHandler . java b / src / main / java / net / minecraftforge / fluids / capability / templates / VoidFluidHandler . java <nl> index 16bc43e . . c608b98 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / capability / templates / VoidFluidHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / capability / templates / VoidFluidHandler . java <nl> @ @ - 36 , 7 + 36 , 7 @ @ import static net . minecraftforge . fluids . capability . templates . EmptyFluidHandler . E <nl> * / <nl> public class VoidFluidHandler implements IFluidHandler , IFluidTank <nl> { <nl> - public static final EmptyFluidHandler INSTANCE = new EmptyFluidHandler ( ) ; <nl> + public static final VoidFluidHandler INSTANCE = new VoidFluidHandler ( ) ; <nl> <nl> public VoidFluidHandler ( ) { } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / items / IItemHandler . java b / src / main / java / net / minecraftforge / items / IItemHandler . java <nl> index 6710fb6 . . d6bd9fc 100644 <nl> - - - a / src / main / java / net / minecraftforge / items / IItemHandler . java <nl> + + + b / src / main / java / net / minecraftforge / items / IItemHandler . java <nl> @ @ - 117 , 6 + 117 , 5 @ @ public interface IItemHandler <nl> * @ return true if the slot can insert the ItemStack , not considering the current state of the inventory . <nl> * false if the slot can never insert the ItemStack in any situation . <nl> * / <nl> - / / todo Make non - default and / or replace in 1 . 13 <nl> - default boolean isItemValid ( int slot , @ Nonnull ItemStack stack ) { return true ; } <nl> + boolean isItemValid ( int slot , @ Nonnull ItemStack stack ) ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / items / SlotItemHandler . java b / src / main / java / net / minecraftforge / items / SlotItemHandler . java <nl> index df398ed . . 25e05c6 100644 <nl> - - - a / src / main / java / net / minecraftforge / items / SlotItemHandler . java <nl> + + + b / src / main / java / net / minecraftforge / items / SlotItemHandler . java <nl> @ @ - 44 , 27 + 44 , 9 @ @ public class SlotItemHandler extends Slot <nl> @ Override <nl> public boolean isItemValid ( @ Nonnull ItemStack stack ) <nl> { <nl> - if ( stack . isEmpty ( ) | | ! itemHandler . isItemValid ( index , stack ) ) <nl> + if ( stack . isEmpty ( ) ) <nl> return false ; <nl> - <nl> - IItemHandler handler = this . getItemHandler ( ) ; <nl> - ItemStack remainder ; <nl> - if ( handler instanceof IItemHandlerModifiable ) <nl> - { <nl> - IItemHandlerModifiable handlerModifiable = ( IItemHandlerModifiable ) handler ; <nl> - ItemStack currentStack = handlerModifiable . getStackInSlot ( index ) ; <nl> - <nl> - handlerModifiable . setStackInSlot ( index , ItemStack . EMPTY ) ; <nl> - <nl> - remainder = handlerModifiable . insertItem ( index , stack , true ) ; <nl> - <nl> - handlerModifiable . setStackInSlot ( index , currentStack ) ; <nl> - } <nl> - else <nl> - { <nl> - remainder = handler . insertItem ( index , stack , true ) ; <nl> - } <nl> - return remainder . getCount ( ) < stack . getCount ( ) ; <nl> + return itemHandler . isItemValid ( index , stack ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / net / minecraftforge / items / wrapper / EntityEquipmentInvWrapper . java b / src / main / java / net / minecraftforge / items / wrapper / EntityEquipmentInvWrapper . java <nl> index 8f1523c . . 6158c53 100644 <nl> - - - a / src / main / java / net / minecraftforge / items / wrapper / EntityEquipmentInvWrapper . java <nl> + + + b / src / main / java / net / minecraftforge / items / wrapper / EntityEquipmentInvWrapper . java <nl> @ @ - 183 , 7 + 183 , 7 @ @ public abstract class EntityEquipmentInvWrapper implements IItemHandlerModifiabl <nl> @ Override <nl> public boolean isItemValid ( int slot , @ Nonnull ItemStack stack ) <nl> { <nl> - return IItemHandlerModifiable . super . isItemValid ( slot , stack ) ; <nl> + return true ; <nl> } <nl> <nl> protected EntityEquipmentSlot validateSlotIndex ( final int slot )
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> index b581a32 . . df9bf75 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> @ @ - 334 , 7 + 334 , 15 @ @ <nl> } <nl> <nl> this . field _ 147127 _ av . func _ 147690 _ c ( ) ; <nl> - @ @ - 2535 , 159 + 2597 , 8 @ @ <nl> + @ @ - 2434 , 6 + 2496 , 7 @ @ <nl> + } <nl> + <nl> + TileEntityRendererDispatcher . field _ 147556 _ a . func _ 147543 _ a ( p _ 71353 _ 1 _ ) ; <nl> + + net . minecraftforge . client . MinecraftForgeClient . clearRenderCache ( ) ; <nl> + <nl> + if ( p _ 71353 _ 1 _ ! = null ) <nl> + { <nl> + @ @ - 2535 , 159 + 2598 , 8 @ @ <nl> { <nl> if ( this . field _ 71476 _ x ! = null & & this . field _ 71476 _ x . field _ 72313 _ a ! = RayTraceResult . Type . MISS ) <nl> { <nl> @ @ - 496 , 7 + 504 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 3009 , 18 + 2920 , 8 @ @ <nl> + @ @ - 3009 , 18 + 2921 , 8 @ @ <nl> <nl> public static int func _ 71369 _ N ( ) <nl> { <nl> @ @ - 517 , 7 + 525 , 7 @ @ <nl> } <nl> <nl> public boolean func _ 70002 _ Q ( ) <nl> - @ @ - 3152 , 6 + 3053 , 9 @ @ <nl> + @ @ - 3152 , 6 + 3054 , 9 @ @ <nl> } <nl> else if ( this . field _ 71439 _ g ! = null ) <nl> { <nl> @ @ - 527 , 7 + 535 , 7 @ @ <nl> if ( this . field _ 71439 _ g . field _ 70170 _ p . field _ 73011 _ w instanceof WorldProviderHell ) <nl> { <nl> return MusicTicker . MusicType . NETHER ; <nl> - @ @ - 3181 , 11 + 3085 , 11 @ @ <nl> + @ @ - 3181 , 11 + 3086 , 11 @ @ <nl> { <nl> if ( Keyboard . getEventKeyState ( ) ) <nl> { <nl> @ @ - 541 , 7 + 549 , 7 @ @ <nl> { <nl> this . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( ScreenShotHelper . func _ 148260 _ a ( this . field _ 71412 _ D , this . field _ 71443 _ c , this . field _ 71440 _ d , this . field _ 147124 _ at ) ) ; <nl> } <nl> - @ @ - 3199 , 6 + 3103 , 7 @ @ <nl> + @ @ - 3199 , 6 + 3104 , 7 @ @ <nl> } <nl> } <nl> } <nl> @ @ - 549 , 7 + 557 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 3328 , 6 + 3233 , 12 @ @ <nl> + @ @ - 3328 , 6 + 3234 , 12 @ @ <nl> return this . field _ 184127 _ aH ; <nl> } <nl> <nl> @ @ - 562 , 7 + 570 , 7 @ @ <nl> public boolean func _ 189648 _ am ( ) <nl> { <nl> return this . field _ 71439 _ g ! = null & & this . field _ 71439 _ g . func _ 175140 _ cp ( ) | | this . field _ 71474 _ y . field _ 178879 _ v ; <nl> - @ @ - 3342 , 4 + 3253 , 9 @ @ <nl> + @ @ - 3342 , 4 + 3254 , 9 @ @ <nl> { <nl> return this . field _ 193035 _ aW ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> index 856d1e1 . . 183335c 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> @ @ - 100 , 7 + 100 , 7 @ @ public class MinecraftForgeClient <nl> . build ( new CacheLoader < Pair < World , BlockPos > , ChunkCache > ( ) <nl> { <nl> @ Override <nl> - public ChunkCache load ( Pair < World , BlockPos > key ) throws Exception <nl> + public ChunkCache load ( Pair < World , BlockPos > key ) <nl> { <nl> return new ChunkCache ( key . getLeft ( ) , key . getRight ( ) . add ( - 1 , - 1 , - 1 ) , key . getRight ( ) . add ( 16 , 16 , 16 ) , 1 ) ; <nl> } <nl> @ @ - 118 , 4 + 118 , 10 @ @ public class MinecraftForgeClient <nl> int z = pos . getZ ( ) & ~ 0xF ; <nl> return regionCache . getUnchecked ( Pair . of ( world , new BlockPos ( x , y , z ) ) ) ; <nl> } <nl> + <nl> + public static void clearRenderCache ( ) <nl> + { <nl> + regionCache . invalidateAll ( ) ; <nl> + regionCache . cleanUp ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / BlockInfo . java b / src / main / java / net / minecraftforge / client / model / pipeline / BlockInfo . java <nl> index b49fa87 . . 23074d7 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / pipeline / BlockInfo . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / BlockInfo . java <nl> @ @ - 94 , 6 + 94 , 16 @ @ public class BlockInfo <nl> shx = shy = shz = 0 ; <nl> } <nl> <nl> + public void reset ( ) <nl> + { <nl> + this . world = null ; <nl> + this . state = null ; <nl> + this . blockPos = null ; <nl> + cachedTint = - 1 ; <nl> + cachedMultiplier = - 1 ; <nl> + shx = shy = shz = 0 ; <nl> + } <nl> + <nl> private float combine ( int c , int s1 , int s2 , int s3 , boolean t0 , boolean t1 , boolean t2 , boolean t3 ) <nl> { <nl> if ( c = = 0 & & ! t0 ) c = Math . max ( 0 , Math . max ( s1 , s2 ) - 1 ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / ForgeBlockModelRenderer . java b / src / main / java / net / minecraftforge / client / model / pipeline / ForgeBlockModelRenderer . java <nl> index bd522e6 . . 8e82c3a 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / pipeline / ForgeBlockModelRenderer . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / ForgeBlockModelRenderer . java <nl> @ @ - 122 , 6 + 122 , 7 @ @ public class ForgeBlockModelRenderer extends BlockModelRenderer <nl> } <nl> } <nl> } <nl> + lighter . resetBlockInfo ( ) ; <nl> return ! empty ; <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java <nl> index 7480c90 . . b9419b9 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java <nl> @ @ - 302 , 6 + 302 , 11 @ @ public class VertexLighterFlat extends QuadGatheringTransformer <nl> blockInfo . setBlockPos ( blockPos ) ; <nl> } <nl> <nl> + public void resetBlockInfo ( ) <nl> + { <nl> + blockInfo . reset ( ) ; <nl> + } <nl> + <nl> public void updateBlockInfo ( ) <nl> { <nl> blockInfo . updateShift ( ) ;

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / world / World . java . patch b / patches / minecraft / net / minecraft / world / World . java . patch 
 index c2c42c0 . . 7471335 100644 
 - - - a / patches / minecraft / net / minecraft / world / World . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / World . java . patch 
 @ @ - 610 , 10 + 610 , 10 @ @ 
 - int j = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72336 _ d + 2 . 0D ) / 16 . 0D ) ; 
 - int k = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72339 _ c - 2 . 0D ) / 16 . 0D ) ; 
 - int l = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72334 _ f + 2 . 0D ) / 16 . 0D ) ; 
 - + int i = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72340 _ a - MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; 
 - + int j = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72336 _ d + MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; 
 - + int k = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72339 _ c - MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; 
 - + int l = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72334 _ f + MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; 
 + + int i = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72340 _ a - getMaxEntityRadius ( ) ) / 16 . 0D ) ; 
 + + int j = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72336 _ d + getMaxEntityRadius ( ) ) / 16 . 0D ) ; 
 + + int k = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72339 _ c - getMaxEntityRadius ( ) ) / 16 . 0D ) ; 
 + + int l = MathHelper . func _ 76128 _ c ( ( p _ 175674 _ 2 _ . field _ 72334 _ f + getMaxEntityRadius ( ) ) / 16 . 0D ) ; 
 
 for ( int i1 = i ; i1 < = j ; + + i1 ) { 
 for ( int j1 = k ; j1 < = l ; + + j1 ) { 
 @ @ - 625 , 10 + 625 , 10 @ @ 
 - int j = MathHelper . func _ 76143 _ f ( ( p _ 175647 _ 2 _ . field _ 72336 _ d + 2 . 0D ) / 16 . 0D ) ; 
 - int k = MathHelper . func _ 76128 _ c ( ( p _ 175647 _ 2 _ . field _ 72339 _ c - 2 . 0D ) / 16 . 0D ) ; 
 - int l = MathHelper . func _ 76143 _ f ( ( p _ 175647 _ 2 _ . field _ 72334 _ f + 2 . 0D ) / 16 . 0D ) ; 
 - + int i = MathHelper . func _ 76128 _ c ( ( p _ 175647 _ 2 _ . field _ 72340 _ a - MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; 
 - + int j = MathHelper . func _ 76143 _ f ( ( p _ 175647 _ 2 _ . field _ 72336 _ d + MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; 
 - + int k = MathHelper . func _ 76128 _ c ( ( p _ 175647 _ 2 _ . field _ 72339 _ c - MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; 
 - + int l = MathHelper . func _ 76143 _ f ( ( p _ 175647 _ 2 _ . field _ 72334 _ f + MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; 
 + + int i = MathHelper . func _ 76128 _ c ( ( p _ 175647 _ 2 _ . field _ 72340 _ a - getMaxEntityRadius ( ) ) / 16 . 0D ) ; 
 + + int j = MathHelper . func _ 76143 _ f ( ( p _ 175647 _ 2 _ . field _ 72336 _ d + getMaxEntityRadius ( ) ) / 16 . 0D ) ; 
 + + int k = MathHelper . func _ 76128 _ c ( ( p _ 175647 _ 2 _ . field _ 72339 _ c - getMaxEntityRadius ( ) ) / 16 . 0D ) ; 
 + + int l = MathHelper . func _ 76143 _ f ( ( p _ 175647 _ 2 _ . field _ 72334 _ f + getMaxEntityRadius ( ) ) / 16 . 0D ) ; 
 List < T > list = Lists . newArrayList ( ) ; 
 
 for ( int i1 = i ; i1 < j ; + + i1 ) { 
 @ @ - 766 , 7 + 766 , 7 @ @ 
 iblockstate . func _ 189546 _ a ( this , blockpos , p _ 175666 _ 2 _ , p _ 175666 _ 1 _ ) ; 
 } 
 } 
 - @ @ - 2464 , 4 + 2590 , 28 @ @ 
 + @ @ - 2464 , 4 + 2590 , 40 @ @ 
 public abstract RecipeManager func _ 199532 _ z ( ) ; 
 
 public abstract NetworkTagManager func _ 205772 _ D ( ) ; 
 @ @ - 794 , 4 + 794 , 16 @ @ 
 + } 
 + return ret ; 
 + } 
 + + 
 + + private double maxEntityRadius = 2 . 0D ; 
 + + @ Override 
 + + public double getMaxEntityRadius ( ) { 
 + + return maxEntityRadius ; 
 + + } 
 + + @ Override 
 + + public double increaseMaxEntityRadius ( double value ) { 
 + + if ( value > maxEntityRadius ) 
 + + maxEntityRadius = value ; 
 + + return maxEntityRadius ; 
 + + } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 index 9498681 . . 9af1b75 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 @ @ - 165 , 8 + 165 , 8 @ @ 
 public void func _ 177414 _ a ( @ Nullable Entity p _ 177414 _ 1 _ , AxisAlignedBB p _ 177414 _ 2 _ , List < Entity > p _ 177414 _ 3 _ , Predicate < ? super Entity > p _ 177414 _ 4 _ ) { 
 - int i = MathHelper . func _ 76128 _ c ( ( p _ 177414 _ 2 _ . field _ 72338 _ b - 2 . 0D ) / 16 . 0D ) ; 
 - int j = MathHelper . func _ 76128 _ c ( ( p _ 177414 _ 2 _ . field _ 72337 _ e + 2 . 0D ) / 16 . 0D ) ; 
 - + int i = MathHelper . func _ 76128 _ c ( ( p _ 177414 _ 2 _ . field _ 72338 _ b - net . minecraftforge . common . extensions . IForgeWorld . MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; 
 - + int j = MathHelper . func _ 76128 _ c ( ( p _ 177414 _ 2 _ . field _ 72337 _ e + net . minecraftforge . common . extensions . IForgeWorld . MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; 
 + + int i = MathHelper . func _ 76128 _ c ( ( p _ 177414 _ 2 _ . field _ 72338 _ b - this . field _ 76637 _ e . getMaxEntityRadius ( ) ) / 16 . 0D ) ; 
 + + int j = MathHelper . func _ 76128 _ c ( ( p _ 177414 _ 2 _ . field _ 72337 _ e + this . field _ 76637 _ e . getMaxEntityRadius ( ) ) / 16 . 0D ) ; 
 i = MathHelper . func _ 76125 _ a ( i , 0 , this . field _ 76645 _ j . length - 1 ) ; 
 j = MathHelper . func _ 76125 _ a ( j , 0 , this . field _ 76645 _ j . length - 1 ) ; 
 
 @ @ - 176 , 8 + 176 , 8 @ @ 
 public < T extends Entity > void func _ 177430 _ a ( Class < ? extends T > p _ 177430 _ 1 _ , AxisAlignedBB p _ 177430 _ 2 _ , List < T > p _ 177430 _ 3 _ , @ Nullable Predicate < ? super T > p _ 177430 _ 4 _ ) { 
 - int i = MathHelper . func _ 76128 _ c ( ( p _ 177430 _ 2 _ . field _ 72338 _ b - 2 . 0D ) / 16 . 0D ) ; 
 - int j = MathHelper . func _ 76128 _ c ( ( p _ 177430 _ 2 _ . field _ 72337 _ e + 2 . 0D ) / 16 . 0D ) ; 
 - + int i = MathHelper . func _ 76128 _ c ( ( p _ 177430 _ 2 _ . field _ 72338 _ b - net . minecraftforge . common . extensions . IForgeWorld . MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; 
 - + int j = MathHelper . func _ 76128 _ c ( ( p _ 177430 _ 2 _ . field _ 72337 _ e + net . minecraftforge . common . extensions . IForgeWorld . MAX _ ENTITY _ RADIUS ) / 16 . 0D ) ; 
 + + int i = MathHelper . func _ 76128 _ c ( ( p _ 177430 _ 2 _ . field _ 72338 _ b - this . field _ 76637 _ e . getMaxEntityRadius ( ) ) / 16 . 0D ) ; 
 + + int j = MathHelper . func _ 76128 _ c ( ( p _ 177430 _ 2 _ . field _ 72337 _ e + this . field _ 76637 _ e . getMaxEntityRadius ( ) ) / 16 . 0D ) ; 
 i = MathHelper . func _ 76125 _ a ( i , 0 , this . field _ 76645 _ j . length - 1 ) ; 
 j = MathHelper . func _ 76125 _ a ( j , 0 , this . field _ 76645 _ j . length - 1 ) ; 
 
 diff - - git a / src / main / java / net / minecraftforge / common / extensions / IForgeWorld . java b / src / main / java / net / minecraftforge / common / extensions / IForgeWorld . java 
 index ea6c50a . . b51c5df 100644 
 - - - a / src / main / java / net / minecraftforge / common / extensions / IForgeWorld . java 
 + + + b / src / main / java / net / minecraftforge / common / extensions / IForgeWorld . java 
 @ @ - 24 , 9 + 24 , 16 @ @ import net . minecraftforge . common . capabilities . ICapabilityProvider ; 
 public interface IForgeWorld extends ICapabilityProvider 
 { 
 / * * 
 - * Used in the getEntitiesWithinAABB functions to expand the search area for entities . 
 - * Modders should change this variable to a higher value if it is less then the radius 
 - * of one of there entities . 
 + * The maximum radius to scan for entities when trying to check bounding boxes . Vanilla ' s default is 
 + * 2 . 0D But mods that add larger entities may increase this . 
 * / 
 - public static double MAX _ ENTITY _ RADIUS = 2 . 0D ; 
 + public double getMaxEntityRadius ( ) ; 
 + / * * 
 + * Increases the max entity radius , this is safe to call with any value . 
 + * The setter will verify the input value is larger then the current setting . 
 + * 
 + * @ param value New max radius to set . 
 + * @ return The new max radius 
 + * / 
 + public double increaseMaxEntityRadius ( double value ) ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fluids / capability / templates / VoidFluidHandler . java b / src / main / java / net / minecraftforge / fluids / capability / templates / VoidFluidHandler . java 
 index 16bc43e . . c608b98 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / capability / templates / VoidFluidHandler . java 
 + + + b / src / main / java / net / minecraftforge / fluids / capability / templates / VoidFluidHandler . java 
 @ @ - 36 , 7 + 36 , 7 @ @ import static net . minecraftforge . fluids . capability . templates . EmptyFluidHandler . E 
 * / 
 public class VoidFluidHandler implements IFluidHandler , IFluidTank 
 { 
 - public static final EmptyFluidHandler INSTANCE = new EmptyFluidHandler ( ) ; 
 + public static final VoidFluidHandler INSTANCE = new VoidFluidHandler ( ) ; 
 
 public VoidFluidHandler ( ) { } 
 
 diff - - git a / src / main / java / net / minecraftforge / items / IItemHandler . java b / src / main / java / net / minecraftforge / items / IItemHandler . java 
 index 6710fb6 . . d6bd9fc 100644 
 - - - a / src / main / java / net / minecraftforge / items / IItemHandler . java 
 + + + b / src / main / java / net / minecraftforge / items / IItemHandler . java 
 @ @ - 117 , 6 + 117 , 5 @ @ public interface IItemHandler 
 * @ return true if the slot can insert the ItemStack , not considering the current state of the inventory . 
 * false if the slot can never insert the ItemStack in any situation . 
 * / 
 - / / todo Make non - default and / or replace in 1 . 13 
 - default boolean isItemValid ( int slot , @ Nonnull ItemStack stack ) { return true ; } 
 + boolean isItemValid ( int slot , @ Nonnull ItemStack stack ) ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / items / SlotItemHandler . java b / src / main / java / net / minecraftforge / items / SlotItemHandler . java 
 index df398ed . . 25e05c6 100644 
 - - - a / src / main / java / net / minecraftforge / items / SlotItemHandler . java 
 + + + b / src / main / java / net / minecraftforge / items / SlotItemHandler . java 
 @ @ - 44 , 27 + 44 , 9 @ @ public class SlotItemHandler extends Slot 
 @ Override 
 public boolean isItemValid ( @ Nonnull ItemStack stack ) 
 { 
 - if ( stack . isEmpty ( ) | | ! itemHandler . isItemValid ( index , stack ) ) 
 + if ( stack . isEmpty ( ) ) 
 return false ; 
 - 
 - IItemHandler handler = this . getItemHandler ( ) ; 
 - ItemStack remainder ; 
 - if ( handler instanceof IItemHandlerModifiable ) 
 - { 
 - IItemHandlerModifiable handlerModifiable = ( IItemHandlerModifiable ) handler ; 
 - ItemStack currentStack = handlerModifiable . getStackInSlot ( index ) ; 
 - 
 - handlerModifiable . setStackInSlot ( index , ItemStack . EMPTY ) ; 
 - 
 - remainder = handlerModifiable . insertItem ( index , stack , true ) ; 
 - 
 - handlerModifiable . setStackInSlot ( index , currentStack ) ; 
 - } 
 - else 
 - { 
 - remainder = handler . insertItem ( index , stack , true ) ; 
 - } 
 - return remainder . getCount ( ) < stack . getCount ( ) ; 
 + return itemHandler . isItemValid ( index , stack ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / net / minecraftforge / items / wrapper / EntityEquipmentInvWrapper . java b / src / main / java / net / minecraftforge / items / wrapper / EntityEquipmentInvWrapper . java 
 index 8f1523c . . 6158c53 100644 
 - - - a / src / main / java / net / minecraftforge / items / wrapper / EntityEquipmentInvWrapper . java 
 + + + b / src / main / java / net / minecraftforge / items / wrapper / EntityEquipmentInvWrapper . java 
 @ @ - 183 , 7 + 183 , 7 @ @ public abstract class EntityEquipmentInvWrapper implements IItemHandlerModifiabl 
 @ Override 
 public boolean isItemValid ( int slot , @ Nonnull ItemStack stack ) 
 { 
 - return IItemHandlerModifiable . super . isItemValid ( slot , stack ) ; 
 + return true ; 
 } 
 
 protected EntityEquipmentSlot validateSlotIndex ( final int slot )

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 index b581a32 . . df9bf75 100644 
 - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 @ @ - 334 , 7 + 334 , 15 @ @ 
 } 
 
 this . field _ 147127 _ av . func _ 147690 _ c ( ) ; 
 - @ @ - 2535 , 159 + 2597 , 8 @ @ 
 + @ @ - 2434 , 6 + 2496 , 7 @ @ 
 + } 
 + 
 + TileEntityRendererDispatcher . field _ 147556 _ a . func _ 147543 _ a ( p _ 71353 _ 1 _ ) ; 
 + + net . minecraftforge . client . MinecraftForgeClient . clearRenderCache ( ) ; 
 + 
 + if ( p _ 71353 _ 1 _ ! = null ) 
 + { 
 + @ @ - 2535 , 159 + 2598 , 8 @ @ 
 { 
 if ( this . field _ 71476 _ x ! = null & & this . field _ 71476 _ x . field _ 72313 _ a ! = RayTraceResult . Type . MISS ) 
 { 
 @ @ - 496 , 7 + 504 , 7 @ @ 
 } 
 } 
 
 - @ @ - 3009 , 18 + 2920 , 8 @ @ 
 + @ @ - 3009 , 18 + 2921 , 8 @ @ 
 
 public static int func _ 71369 _ N ( ) 
 { 
 @ @ - 517 , 7 + 525 , 7 @ @ 
 } 
 
 public boolean func _ 70002 _ Q ( ) 
 - @ @ - 3152 , 6 + 3053 , 9 @ @ 
 + @ @ - 3152 , 6 + 3054 , 9 @ @ 
 } 
 else if ( this . field _ 71439 _ g ! = null ) 
 { 
 @ @ - 527 , 7 + 535 , 7 @ @ 
 if ( this . field _ 71439 _ g . field _ 70170 _ p . field _ 73011 _ w instanceof WorldProviderHell ) 
 { 
 return MusicTicker . MusicType . NETHER ; 
 - @ @ - 3181 , 11 + 3085 , 11 @ @ 
 + @ @ - 3181 , 11 + 3086 , 11 @ @ 
 { 
 if ( Keyboard . getEventKeyState ( ) ) 
 { 
 @ @ - 541 , 7 + 549 , 7 @ @ 
 { 
 this . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( ScreenShotHelper . func _ 148260 _ a ( this . field _ 71412 _ D , this . field _ 71443 _ c , this . field _ 71440 _ d , this . field _ 147124 _ at ) ) ; 
 } 
 - @ @ - 3199 , 6 + 3103 , 7 @ @ 
 + @ @ - 3199 , 6 + 3104 , 7 @ @ 
 } 
 } 
 } 
 @ @ - 549 , 7 + 557 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 3328 , 6 + 3233 , 12 @ @ 
 + @ @ - 3328 , 6 + 3234 , 12 @ @ 
 return this . field _ 184127 _ aH ; 
 } 
 
 @ @ - 562 , 7 + 570 , 7 @ @ 
 public boolean func _ 189648 _ am ( ) 
 { 
 return this . field _ 71439 _ g ! = null & & this . field _ 71439 _ g . func _ 175140 _ cp ( ) | | this . field _ 71474 _ y . field _ 178879 _ v ; 
 - @ @ - 3342 , 4 + 3253 , 9 @ @ 
 + @ @ - 3342 , 4 + 3254 , 9 @ @ 
 { 
 return this . field _ 193035 _ aW ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 index 856d1e1 . . 183335c 100644 
 - - - a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 + + + b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 @ @ - 100 , 7 + 100 , 7 @ @ public class MinecraftForgeClient 
 . build ( new CacheLoader < Pair < World , BlockPos > , ChunkCache > ( ) 
 { 
 @ Override 
 - public ChunkCache load ( Pair < World , BlockPos > key ) throws Exception 
 + public ChunkCache load ( Pair < World , BlockPos > key ) 
 { 
 return new ChunkCache ( key . getLeft ( ) , key . getRight ( ) . add ( - 1 , - 1 , - 1 ) , key . getRight ( ) . add ( 16 , 16 , 16 ) , 1 ) ; 
 } 
 @ @ - 118 , 4 + 118 , 10 @ @ public class MinecraftForgeClient 
 int z = pos . getZ ( ) & ~ 0xF ; 
 return regionCache . getUnchecked ( Pair . of ( world , new BlockPos ( x , y , z ) ) ) ; 
 } 
 + 
 + public static void clearRenderCache ( ) 
 + { 
 + regionCache . invalidateAll ( ) ; 
 + regionCache . cleanUp ( ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / BlockInfo . java b / src / main / java / net / minecraftforge / client / model / pipeline / BlockInfo . java 
 index b49fa87 . . 23074d7 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / pipeline / BlockInfo . java 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / BlockInfo . java 
 @ @ - 94 , 6 + 94 , 16 @ @ public class BlockInfo 
 shx = shy = shz = 0 ; 
 } 
 
 + public void reset ( ) 
 + { 
 + this . world = null ; 
 + this . state = null ; 
 + this . blockPos = null ; 
 + cachedTint = - 1 ; 
 + cachedMultiplier = - 1 ; 
 + shx = shy = shz = 0 ; 
 + } 
 + 
 private float combine ( int c , int s1 , int s2 , int s3 , boolean t0 , boolean t1 , boolean t2 , boolean t3 ) 
 { 
 if ( c = = 0 & & ! t0 ) c = Math . max ( 0 , Math . max ( s1 , s2 ) - 1 ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / ForgeBlockModelRenderer . java b / src / main / java / net / minecraftforge / client / model / pipeline / ForgeBlockModelRenderer . java 
 index bd522e6 . . 8e82c3a 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / pipeline / ForgeBlockModelRenderer . java 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / ForgeBlockModelRenderer . java 
 @ @ - 122 , 6 + 122 , 7 @ @ public class ForgeBlockModelRenderer extends BlockModelRenderer 
 } 
 } 
 } 
 + lighter . resetBlockInfo ( ) ; 
 return ! empty ; 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java 
 index 7480c90 . . b9419b9 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java 
 @ @ - 302 , 6 + 302 , 11 @ @ public class VertexLighterFlat extends QuadGatheringTransformer 
 blockInfo . setBlockPos ( blockPos ) ; 
 } 
 
 + public void resetBlockInfo ( ) 
 + { 
 + blockInfo . reset ( ) ; 
 + } 
 + 
 public void updateBlockInfo ( ) 
 { 
 blockInfo . updateShift ( ) ;
