BLEU SCORE: 0.026279617104084448

TEST MSG: Remove our entity position fixer . Vanilla fixed the bug in 1 . 9 .
GENERATED MSG: Some fixups for FML , and use the FML registry for potions

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / EntityTrackerEntry . java . patch b / patches / minecraft / net / minecraft / entity / EntityTrackerEntry . java . patch <nl> index c8af86c . . af71613 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntityTrackerEntry . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityTrackerEntry . java . patch <nl> @ @ - 1 , 21 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / entity / EntityTrackerEntry . java <nl> + + + . . / src - work / minecraft / net / minecraft / entity / EntityTrackerEntry . java <nl> - @ @ - 398 , 6 + 398 , 14 @ @ <nl> - this . field _ 73138 _ k = this . field _ 73132 _ a . field _ 70181 _ x ; <nl> - this . field _ 73135 _ l = this . field _ 73132 _ a . field _ 70179 _ y ; <nl> - <nl> - + int posX = MathHelper . func _ 76128 _ c ( this . field _ 73132 _ a . field _ 70165 _ t * 32 . 0D ) ; <nl> - + int posY = MathHelper . func _ 76128 _ c ( this . field _ 73132 _ a . field _ 70163 _ u * 32 . 0D ) ; <nl> - + int posZ = MathHelper . func _ 76128 _ c ( this . field _ 73132 _ a . field _ 70161 _ v * 32 . 0D ) ; <nl> - + if ( posX ! = this . field _ 73128 _ d | | posY ! = this . field _ 73129 _ e | | posZ ! = this . field _ 73126 _ f ) <nl> - + { <nl> - + net . minecraftforge . fml . common . network . internal . FMLNetworkHandler . makeEntitySpawnAdjustment ( this . field _ 73132 _ a , p _ 73117 _ 1 _ , this . field _ 73128 _ d , this . field _ 73129 _ e , this . field _ 73126 _ f ) ; <nl> - + } <nl> - + <nl> - if ( flag & & ! ( packet instanceof SPacketSpawnMob ) ) <nl> - { <nl> - p _ 73117 _ 1 _ . field _ 71135 _ a . func _ 147359 _ a ( new SPacketEntityVelocity ( this . field _ 73132 _ a . func _ 145782 _ y ( ) , this . field _ 73132 _ a . field _ 70159 _ w , this . field _ 73132 _ a . field _ 70181 _ x , this . field _ 73132 _ a . field _ 70179 _ y ) ) ; <nl> - @ @ - 438 , 6 + 446 , 7 @ @ <nl> + @ @ - 438 , 6 + 438 , 7 @ @ <nl> <nl> this . field _ 73132 _ a . func _ 184178 _ b ( p _ 73117 _ 1 _ ) ; <nl> p _ 73117 _ 1 _ . func _ 184848 _ d ( this . field _ 73132 _ a ) ; <nl> @ @ - 23 , 7 + 8 , 7 @ @ <nl> } <nl> } <nl> else if ( this . field _ 73134 _ o . contains ( p _ 73117 _ 1 _ ) ) <nl> - @ @ - 445 , 6 + 454 , 7 @ @ <nl> + @ @ - 445 , 6 + 446 , 7 @ @ <nl> this . field _ 73134 _ o . remove ( p _ 73117 _ 1 _ ) ; <nl> this . field _ 73132 _ a . func _ 184203 _ c ( p _ 73117 _ 1 _ ) ; <nl> p _ 73117 _ 1 _ . func _ 152339 _ d ( this . field _ 73132 _ a ) ; <nl> @ @ - 31 , 7 + 16 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 477 , 6 + 487 , 9 @ @ <nl> + @ @ - 477 , 6 + 479 , 9 @ @ <nl> field _ 151262 _ p . warn ( " Fetching addPacket for removed entity " ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> index 4d6675d . . 2cf6b6e 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> @ @ - 17 , 7 + 17 , 6 @ @ import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . Loader ; <nl> import net . minecraftforge . fml . common . ModContainer ; <nl> import net . minecraftforge . fml . common . network . NetworkRegistry ; <nl> - import net . minecraftforge . fml . common . network . internal . FMLMessage . EntityAdjustMessage ; <nl> import net . minecraftforge . fml . common . network . internal . FMLMessage . EntityMessage ; <nl> import net . minecraftforge . fml . common . registry . EntityRegistry ; <nl> import net . minecraftforge . fml . common . registry . IEntityAdditionalSpawnData ; <nl> @ @ - 53 , 25 + 52 , 6 @ @ public class EntitySpawnHandler extends SimpleChannelInboundHandler < FMLMessage . E <nl> { <nl> spawnEntity ( ( FMLMessage . EntitySpawnMessage ) msg ) ; <nl> } <nl> - else if ( msg . getClass ( ) . equals ( FMLMessage . EntityAdjustMessage . class ) ) <nl> - { <nl> - adjustEntity ( ( FMLMessage . EntityAdjustMessage ) msg ) ; <nl> - } <nl> - } <nl> - <nl> - private void adjustEntity ( EntityAdjustMessage msg ) <nl> - { <nl> - Entity ent = FMLClientHandler . instance ( ) . getWorldClient ( ) . getEntityByID ( msg . entityId ) ; <nl> - if ( ent ! = null ) <nl> - { <nl> - ent . serverPosX = msg . serverX ; <nl> - ent . serverPosY = msg . serverY ; <nl> - ent . serverPosZ = msg . serverZ ; <nl> - } <nl> - else <nl> - { <nl> - FMLLog . fine ( " Attempted to adjust the position of entity % d which is not present on the client " , msg . entityId ) ; <nl> - } <nl> } <nl> <nl> private void spawnEntity ( FMLMessage . EntitySpawnMessage spawnMsg ) <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java <nl> index 7f6a89a . . 5100f2d 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java <nl> @ @ - 109 , 38 + 109 , 6 @ @ public abstract class FMLMessage { <nl> } <nl> } <nl> <nl> - public static class EntityAdjustMessage extends EntityMessage { <nl> - long serverX ; <nl> - long serverY ; <nl> - long serverZ ; <nl> - <nl> - public EntityAdjustMessage ( ) { } <nl> - public EntityAdjustMessage ( Entity entity , long serverX , long serverY , long serverZ ) <nl> - { <nl> - super ( entity ) ; <nl> - this . serverX = serverX ; <nl> - this . serverY = serverY ; <nl> - this . serverZ = serverZ ; <nl> - } <nl> - <nl> - @ Override <nl> - void toBytes ( ByteBuf buf ) <nl> - { <nl> - super . toBytes ( buf ) ; <nl> - buf . writeLong ( serverX ) ; <nl> - buf . writeLong ( serverY ) ; <nl> - buf . writeLong ( serverZ ) ; <nl> - } <nl> - <nl> - @ Override <nl> - void fromBytes ( ByteBuf buf ) <nl> - { <nl> - super . fromBytes ( buf ) ; <nl> - serverX = buf . readInt ( ) ; <nl> - serverY = buf . readInt ( ) ; <nl> - serverZ = buf . readInt ( ) ; <nl> - } <nl> - } <nl> public static class EntitySpawnMessage extends EntityMessage { <nl> String modId ; <nl> int modEntityTypeId ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> index 6dd4839 . . 2ac130b 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> @ @ - 109 , 14 + 109 , 6 @ @ public class FMLNetworkHandler <nl> <nl> } <nl> <nl> - public static void makeEntitySpawnAdjustment ( Entity entity , EntityPlayerMP player , long serverX , long serverY , long serverZ ) <nl> - { <nl> - EmbeddedChannel embeddedChannel = channelPair . get ( Side . SERVER ) ; <nl> - embeddedChannel . attr ( FMLOutboundHandler . FML _ MESSAGETARGET ) . set ( OutboundTarget . PLAYER ) ; <nl> - embeddedChannel . attr ( FMLOutboundHandler . FML _ MESSAGETARGETARGS ) . set ( player ) ; <nl> - embeddedChannel . writeOutbound ( new FMLMessage . EntityAdjustMessage ( entity , serverX , serverY , serverZ ) ) ; <nl> - } <nl> - <nl> public static Packet < ? > getEntitySpawningPacket ( Entity entity ) <nl> { <nl> EntityRegistration er = EntityRegistry . instance ( ) . lookupModSpawn ( entity . getClass ( ) , false ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLRuntimeCodec . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLRuntimeCodec . java <nl> index 0212fe9 . . 8dfbe99 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLRuntimeCodec . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLRuntimeCodec . java <nl> @ @ - 16 , 7 + 16 , 6 @ @ public class FMLRuntimeCodec extends FMLIndexedMessageToMessageCodec < FMLMessage > <nl> addDiscriminator ( 0 , FMLMessage . CompleteHandshake . class ) ; <nl> addDiscriminator ( 1 , FMLMessage . OpenGui . class ) ; <nl> addDiscriminator ( 2 , FMLMessage . EntitySpawnMessage . class ) ; <nl> - addDiscriminator ( 3 , FMLMessage . EntityAdjustMessage . class ) ; <nl> } <nl> @ Override <nl> public void encodeInto ( ChannelHandlerContext ctx , FMLMessage msg , ByteBuf target ) throws Exception
NEAREST DIFF (one line): diff - - git a / patches . mcp / minecraft / net / minecraft / potion / Potion . java . patch b / patches . mcp / minecraft / net / minecraft / potion / Potion . java . patch <nl> index 98abf73 . . e908c64 100644 <nl> - - - a / patches . mcp / minecraft / net / minecraft / potion / Potion . java . patch <nl> + + + b / patches . mcp / minecraft / net / minecraft / potion / Potion . java . patch <nl> @ @ - 1 , 6 + 1 , 21 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / potion / Potion . java <nl> + + + . . / src - work / minecraft / net / minecraft / potion / Potion . java <nl> - @ @ - 195 , 7 + 195 , 6 @ @ <nl> + @ @ - 18 , 12 + 18 , 13 @ @ <nl> + import net . minecraft . util . StringUtils ; <nl> + import net . minecraft . util . math . MathHelper ; <nl> + import net . minecraft . util . registry . RegistryNamespaced ; <nl> + + import net . minecraftforge . fml . common . registry . GameData ; <nl> + import net . minecraftforge . fml . relauncher . Side ; <nl> + import net . minecraftforge . fml . relauncher . SideOnly ; <nl> + <nl> + public class Potion <nl> + { <nl> + - public static final RegistryNamespaced < ResourceLocation , Potion > field _ 188414 _ b = new RegistryNamespaced ( ) ; <nl> + + public static final RegistryNamespaced < ResourceLocation , Potion > field _ 188414 _ b = GameData . getPotionRegistry ( ) ; <nl> + private final Map < IAttribute , AttributeModifier > attributeModifierMap = Maps . < IAttribute , AttributeModifier > newHashMap ( ) ; <nl> + private final boolean isBadEffect ; <nl> + private final int liquidColor ; <nl> + @ @ - 195 , 7 + 196 , 6 @ @ <nl> return this . statusIconIndex ; <nl> } <nl> <nl> @ @ - 8 , 7 + 23 , 7 @ @ <nl> public boolean isBadEffect ( ) <nl> { <nl> return this . isBadEffect ; <nl> - @ @ - 266 , 7 + 265 , 37 @ @ <nl> + @ @ - 266 , 7 + 266 , 37 @ @ <nl> return modifier . getAmount ( ) * ( double ) ( p _ 111183 _ 1 _ + 1 ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> index 00c1f70 . . be45fec 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> @ @ - 126 , 7 + 126 , 7 @ @ public class EntitySpawnHandler extends SimpleChannelInboundHandler < FMLMessage . E <nl> <nl> if ( spawnMsg . dataWatcherList ! = null ) <nl> { <nl> - entity . getDataWatcher ( ) . updateWatchedObjectsFromList ( spawnMsg . dataWatcherList ) ; <nl> + entity . func _ 184212 _ Q ( ) . func _ 187218 _ a ( spawnMsg . dataWatcherList ) ; <nl> } <nl> <nl> if ( spawnMsg . throwerId > 0 ) <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java <nl> index a19c461 . . 2a70bbe 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java <nl> @ @ - 6 , 11 + 6 , 11 @ @ import io . netty . buffer . Unpooled ; <nl> import java . io . IOException ; <nl> import java . util . List ; <nl> <nl> + import net . minecraft . network . datasync . EntityDataManager ; <nl> import org . apache . logging . log4j . Level ; <nl> <nl> import com . google . common . base . Throwables ; <nl> <nl> - import net . minecraft . entity . DataWatcher ; <nl> import net . minecraft . entity . Entity ; <nl> import net . minecraft . entity . EntityLivingBase ; <nl> import net . minecraft . network . PacketBuffer ; <nl> @ @ - 157 , 7 + 157 , 7 @ @ public abstract class FMLMessage { <nl> double speedScaledX ; <nl> double speedScaledY ; <nl> double speedScaledZ ; <nl> - List < DataWatcher . WatchableObject > dataWatcherList ; <nl> + List < EntityDataManager . DataEntry < ? > > dataWatcherList ; <nl> ByteBuf dataStream ; <nl> <nl> public EntitySpawnMessage ( ) { } <nl> @ @ - 193 , 7 + 193 , 7 @ @ public abstract class FMLMessage { <nl> PacketBuffer pb = new PacketBuffer ( tmpBuf ) ; <nl> try <nl> { <nl> - entity . getDataWatcher ( ) . writeTo ( pb ) ; <nl> + entity . func _ 184212 _ Q ( ) . func _ 187216 _ a ( pb ) ; <nl> } catch ( IOException e ) <nl> { <nl> FMLLog . log ( Level . FATAL , e , " Encountered fatal exception trying to send entity spawn data watchers " ) ; <nl> @ @ - 247 , 7 + 247 , 7 @ @ public abstract class FMLMessage { <nl> scaledHeadYaw = dat . readByte ( ) * 360F / 256F ; <nl> try <nl> { <nl> - dataWatcherList = DataWatcher . readWatchedListFromPacketBuffer ( new PacketBuffer ( dat ) ) ; <nl> + dataWatcherList = EntityDataManager . func _ 187215 _ b ( new PacketBuffer ( dat ) ) ; <nl> } catch ( IOException e ) <nl> { <nl> FMLLog . log ( Level . FATAL , e , " There was a critical error decoding the datawatcher stream for a mod entity . " ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> index 2bbafe3 . . 6dd4839 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> @ @ - 27 , 7 + 27 , 7 @ @ import net . minecraft . entity . player . EntityPlayerMP ; <nl> import net . minecraft . inventory . Container ; <nl> import net . minecraft . network . NetworkManager ; <nl> import net . minecraft . network . Packet ; <nl> - import net . minecraft . server . management . ServerConfigurationManager ; <nl> + import net . minecraft . server . management . PlayerList ; <nl> import net . minecraft . world . World ; <nl> import net . minecraftforge . common . util . FakePlayer ; <nl> import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> @ @ - 59 , 7 + 59 , 7 @ @ public class FMLNetworkHandler <nl> public static final int LOGIN _ TIMEOUT = Integers . parseInt ( System . getProperty ( " fml . loginTimeout " , " 600 " ) , 600 ) ; <nl> private static EnumMap < Side , FMLEmbeddedChannel > channelPair ; <nl> <nl> - public static void fmlServerHandshake ( ServerConfigurationManager scm , NetworkManager manager , EntityPlayerMP player ) <nl> + public static void fmlServerHandshake ( PlayerList scm , NetworkManager manager , EntityPlayerMP player ) <nl> { <nl> NetworkDispatcher dispatcher = NetworkDispatcher . allocAndSet ( manager , scm ) ; <nl> dispatcher . serverToClientHandshake ( player ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / GameData . java b / src / main / java / net / minecraftforge / fml / common / registry / GameData . java <nl> index 80e9456 . . 525f9cd 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / GameData . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / GameData . java <nl> @ @ - 254 , 9 + 254 , 7 @ @ public class GameData <nl> <nl> @ Override <nl> public void onAdd ( Potion potion , int id ) { <nl> - / / fix the data in the potion and the potions - array <nl> - potion . id = id ; <nl> - Potion . potionTypes [ id ] = potion ; <nl> + / / no op for the minute ? <nl> } <nl> } <nl> } <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / EntityTrackerEntry . java . patch b / patches / minecraft / net / minecraft / entity / EntityTrackerEntry . java . patch 
 index c8af86c . . af71613 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntityTrackerEntry . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntityTrackerEntry . java . patch 
 @ @ - 1 , 21 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / entity / EntityTrackerEntry . java 
 + + + . . / src - work / minecraft / net / minecraft / entity / EntityTrackerEntry . java 
 - @ @ - 398 , 6 + 398 , 14 @ @ 
 - this . field _ 73138 _ k = this . field _ 73132 _ a . field _ 70181 _ x ; 
 - this . field _ 73135 _ l = this . field _ 73132 _ a . field _ 70179 _ y ; 
 - 
 - + int posX = MathHelper . func _ 76128 _ c ( this . field _ 73132 _ a . field _ 70165 _ t * 32 . 0D ) ; 
 - + int posY = MathHelper . func _ 76128 _ c ( this . field _ 73132 _ a . field _ 70163 _ u * 32 . 0D ) ; 
 - + int posZ = MathHelper . func _ 76128 _ c ( this . field _ 73132 _ a . field _ 70161 _ v * 32 . 0D ) ; 
 - + if ( posX ! = this . field _ 73128 _ d | | posY ! = this . field _ 73129 _ e | | posZ ! = this . field _ 73126 _ f ) 
 - + { 
 - + net . minecraftforge . fml . common . network . internal . FMLNetworkHandler . makeEntitySpawnAdjustment ( this . field _ 73132 _ a , p _ 73117 _ 1 _ , this . field _ 73128 _ d , this . field _ 73129 _ e , this . field _ 73126 _ f ) ; 
 - + } 
 - + 
 - if ( flag & & ! ( packet instanceof SPacketSpawnMob ) ) 
 - { 
 - p _ 73117 _ 1 _ . field _ 71135 _ a . func _ 147359 _ a ( new SPacketEntityVelocity ( this . field _ 73132 _ a . func _ 145782 _ y ( ) , this . field _ 73132 _ a . field _ 70159 _ w , this . field _ 73132 _ a . field _ 70181 _ x , this . field _ 73132 _ a . field _ 70179 _ y ) ) ; 
 - @ @ - 438 , 6 + 446 , 7 @ @ 
 + @ @ - 438 , 6 + 438 , 7 @ @ 
 
 this . field _ 73132 _ a . func _ 184178 _ b ( p _ 73117 _ 1 _ ) ; 
 p _ 73117 _ 1 _ . func _ 184848 _ d ( this . field _ 73132 _ a ) ; 
 @ @ - 23 , 7 + 8 , 7 @ @ 
 } 
 } 
 else if ( this . field _ 73134 _ o . contains ( p _ 73117 _ 1 _ ) ) 
 - @ @ - 445 , 6 + 454 , 7 @ @ 
 + @ @ - 445 , 6 + 446 , 7 @ @ 
 this . field _ 73134 _ o . remove ( p _ 73117 _ 1 _ ) ; 
 this . field _ 73132 _ a . func _ 184203 _ c ( p _ 73117 _ 1 _ ) ; 
 p _ 73117 _ 1 _ . func _ 152339 _ d ( this . field _ 73132 _ a ) ; 
 @ @ - 31 , 7 + 16 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 477 , 6 + 487 , 9 @ @ 
 + @ @ - 477 , 6 + 479 , 9 @ @ 
 field _ 151262 _ p . warn ( " Fetching addPacket for removed entity " ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 index 4d6675d . . 2cf6b6e 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 @ @ - 17 , 7 + 17 , 6 @ @ import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . Loader ; 
 import net . minecraftforge . fml . common . ModContainer ; 
 import net . minecraftforge . fml . common . network . NetworkRegistry ; 
 - import net . minecraftforge . fml . common . network . internal . FMLMessage . EntityAdjustMessage ; 
 import net . minecraftforge . fml . common . network . internal . FMLMessage . EntityMessage ; 
 import net . minecraftforge . fml . common . registry . EntityRegistry ; 
 import net . minecraftforge . fml . common . registry . IEntityAdditionalSpawnData ; 
 @ @ - 53 , 25 + 52 , 6 @ @ public class EntitySpawnHandler extends SimpleChannelInboundHandler < FMLMessage . E 
 { 
 spawnEntity ( ( FMLMessage . EntitySpawnMessage ) msg ) ; 
 } 
 - else if ( msg . getClass ( ) . equals ( FMLMessage . EntityAdjustMessage . class ) ) 
 - { 
 - adjustEntity ( ( FMLMessage . EntityAdjustMessage ) msg ) ; 
 - } 
 - } 
 - 
 - private void adjustEntity ( EntityAdjustMessage msg ) 
 - { 
 - Entity ent = FMLClientHandler . instance ( ) . getWorldClient ( ) . getEntityByID ( msg . entityId ) ; 
 - if ( ent ! = null ) 
 - { 
 - ent . serverPosX = msg . serverX ; 
 - ent . serverPosY = msg . serverY ; 
 - ent . serverPosZ = msg . serverZ ; 
 - } 
 - else 
 - { 
 - FMLLog . fine ( " Attempted to adjust the position of entity % d which is not present on the client " , msg . entityId ) ; 
 - } 
 } 
 
 private void spawnEntity ( FMLMessage . EntitySpawnMessage spawnMsg ) 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java 
 index 7f6a89a . . 5100f2d 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java 
 @ @ - 109 , 38 + 109 , 6 @ @ public abstract class FMLMessage { 
 } 
 } 
 
 - public static class EntityAdjustMessage extends EntityMessage { 
 - long serverX ; 
 - long serverY ; 
 - long serverZ ; 
 - 
 - public EntityAdjustMessage ( ) { } 
 - public EntityAdjustMessage ( Entity entity , long serverX , long serverY , long serverZ ) 
 - { 
 - super ( entity ) ; 
 - this . serverX = serverX ; 
 - this . serverY = serverY ; 
 - this . serverZ = serverZ ; 
 - } 
 - 
 - @ Override 
 - void toBytes ( ByteBuf buf ) 
 - { 
 - super . toBytes ( buf ) ; 
 - buf . writeLong ( serverX ) ; 
 - buf . writeLong ( serverY ) ; 
 - buf . writeLong ( serverZ ) ; 
 - } 
 - 
 - @ Override 
 - void fromBytes ( ByteBuf buf ) 
 - { 
 - super . fromBytes ( buf ) ; 
 - serverX = buf . readInt ( ) ; 
 - serverY = buf . readInt ( ) ; 
 - serverZ = buf . readInt ( ) ; 
 - } 
 - } 
 public static class EntitySpawnMessage extends EntityMessage { 
 String modId ; 
 int modEntityTypeId ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 index 6dd4839 . . 2ac130b 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 @ @ - 109 , 14 + 109 , 6 @ @ public class FMLNetworkHandler 
 
 } 
 
 - public static void makeEntitySpawnAdjustment ( Entity entity , EntityPlayerMP player , long serverX , long serverY , long serverZ ) 
 - { 
 - EmbeddedChannel embeddedChannel = channelPair . get ( Side . SERVER ) ; 
 - embeddedChannel . attr ( FMLOutboundHandler . FML _ MESSAGETARGET ) . set ( OutboundTarget . PLAYER ) ; 
 - embeddedChannel . attr ( FMLOutboundHandler . FML _ MESSAGETARGETARGS ) . set ( player ) ; 
 - embeddedChannel . writeOutbound ( new FMLMessage . EntityAdjustMessage ( entity , serverX , serverY , serverZ ) ) ; 
 - } 
 - 
 public static Packet < ? > getEntitySpawningPacket ( Entity entity ) 
 { 
 EntityRegistration er = EntityRegistry . instance ( ) . lookupModSpawn ( entity . getClass ( ) , false ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLRuntimeCodec . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLRuntimeCodec . java 
 index 0212fe9 . . 8dfbe99 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLRuntimeCodec . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLRuntimeCodec . java 
 @ @ - 16 , 7 + 16 , 6 @ @ public class FMLRuntimeCodec extends FMLIndexedMessageToMessageCodec < FMLMessage > 
 addDiscriminator ( 0 , FMLMessage . CompleteHandshake . class ) ; 
 addDiscriminator ( 1 , FMLMessage . OpenGui . class ) ; 
 addDiscriminator ( 2 , FMLMessage . EntitySpawnMessage . class ) ; 
 - addDiscriminator ( 3 , FMLMessage . EntityAdjustMessage . class ) ; 
 } 
 @ Override 
 public void encodeInto ( ChannelHandlerContext ctx , FMLMessage msg , ByteBuf target ) throws Exception

NEAREST DIFF:
diff - - git a / patches . mcp / minecraft / net / minecraft / potion / Potion . java . patch b / patches . mcp / minecraft / net / minecraft / potion / Potion . java . patch 
 index 98abf73 . . e908c64 100644 
 - - - a / patches . mcp / minecraft / net / minecraft / potion / Potion . java . patch 
 + + + b / patches . mcp / minecraft / net / minecraft / potion / Potion . java . patch 
 @ @ - 1 , 6 + 1 , 21 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / potion / Potion . java 
 + + + . . / src - work / minecraft / net / minecraft / potion / Potion . java 
 - @ @ - 195 , 7 + 195 , 6 @ @ 
 + @ @ - 18 , 12 + 18 , 13 @ @ 
 + import net . minecraft . util . StringUtils ; 
 + import net . minecraft . util . math . MathHelper ; 
 + import net . minecraft . util . registry . RegistryNamespaced ; 
 + + import net . minecraftforge . fml . common . registry . GameData ; 
 + import net . minecraftforge . fml . relauncher . Side ; 
 + import net . minecraftforge . fml . relauncher . SideOnly ; 
 + 
 + public class Potion 
 + { 
 + - public static final RegistryNamespaced < ResourceLocation , Potion > field _ 188414 _ b = new RegistryNamespaced ( ) ; 
 + + public static final RegistryNamespaced < ResourceLocation , Potion > field _ 188414 _ b = GameData . getPotionRegistry ( ) ; 
 + private final Map < IAttribute , AttributeModifier > attributeModifierMap = Maps . < IAttribute , AttributeModifier > newHashMap ( ) ; 
 + private final boolean isBadEffect ; 
 + private final int liquidColor ; 
 + @ @ - 195 , 7 + 196 , 6 @ @ 
 return this . statusIconIndex ; 
 } 
 
 @ @ - 8 , 7 + 23 , 7 @ @ 
 public boolean isBadEffect ( ) 
 { 
 return this . isBadEffect ; 
 - @ @ - 266 , 7 + 265 , 37 @ @ 
 + @ @ - 266 , 7 + 266 , 37 @ @ 
 return modifier . getAmount ( ) * ( double ) ( p _ 111183 _ 1 _ + 1 ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 index 00c1f70 . . be45fec 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 @ @ - 126 , 7 + 126 , 7 @ @ public class EntitySpawnHandler extends SimpleChannelInboundHandler < FMLMessage . E 
 
 if ( spawnMsg . dataWatcherList ! = null ) 
 { 
 - entity . getDataWatcher ( ) . updateWatchedObjectsFromList ( spawnMsg . dataWatcherList ) ; 
 + entity . func _ 184212 _ Q ( ) . func _ 187218 _ a ( spawnMsg . dataWatcherList ) ; 
 } 
 
 if ( spawnMsg . throwerId > 0 ) 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java 
 index a19c461 . . 2a70bbe 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java 
 @ @ - 6 , 11 + 6 , 11 @ @ import io . netty . buffer . Unpooled ; 
 import java . io . IOException ; 
 import java . util . List ; 
 
 + import net . minecraft . network . datasync . EntityDataManager ; 
 import org . apache . logging . log4j . Level ; 
 
 import com . google . common . base . Throwables ; 
 
 - import net . minecraft . entity . DataWatcher ; 
 import net . minecraft . entity . Entity ; 
 import net . minecraft . entity . EntityLivingBase ; 
 import net . minecraft . network . PacketBuffer ; 
 @ @ - 157 , 7 + 157 , 7 @ @ public abstract class FMLMessage { 
 double speedScaledX ; 
 double speedScaledY ; 
 double speedScaledZ ; 
 - List < DataWatcher . WatchableObject > dataWatcherList ; 
 + List < EntityDataManager . DataEntry < ? > > dataWatcherList ; 
 ByteBuf dataStream ; 
 
 public EntitySpawnMessage ( ) { } 
 @ @ - 193 , 7 + 193 , 7 @ @ public abstract class FMLMessage { 
 PacketBuffer pb = new PacketBuffer ( tmpBuf ) ; 
 try 
 { 
 - entity . getDataWatcher ( ) . writeTo ( pb ) ; 
 + entity . func _ 184212 _ Q ( ) . func _ 187216 _ a ( pb ) ; 
 } catch ( IOException e ) 
 { 
 FMLLog . log ( Level . FATAL , e , " Encountered fatal exception trying to send entity spawn data watchers " ) ; 
 @ @ - 247 , 7 + 247 , 7 @ @ public abstract class FMLMessage { 
 scaledHeadYaw = dat . readByte ( ) * 360F / 256F ; 
 try 
 { 
 - dataWatcherList = DataWatcher . readWatchedListFromPacketBuffer ( new PacketBuffer ( dat ) ) ; 
 + dataWatcherList = EntityDataManager . func _ 187215 _ b ( new PacketBuffer ( dat ) ) ; 
 } catch ( IOException e ) 
 { 
 FMLLog . log ( Level . FATAL , e , " There was a critical error decoding the datawatcher stream for a mod entity . " ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 index 2bbafe3 . . 6dd4839 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 @ @ - 27 , 7 + 27 , 7 @ @ import net . minecraft . entity . player . EntityPlayerMP ; 
 import net . minecraft . inventory . Container ; 
 import net . minecraft . network . NetworkManager ; 
 import net . minecraft . network . Packet ; 
 - import net . minecraft . server . management . ServerConfigurationManager ; 
 + import net . minecraft . server . management . PlayerList ; 
 import net . minecraft . world . World ; 
 import net . minecraftforge . common . util . FakePlayer ; 
 import net . minecraftforge . fml . common . FMLCommonHandler ; 
 @ @ - 59 , 7 + 59 , 7 @ @ public class FMLNetworkHandler 
 public static final int LOGIN _ TIMEOUT = Integers . parseInt ( System . getProperty ( " fml . loginTimeout " , " 600 " ) , 600 ) ; 
 private static EnumMap < Side , FMLEmbeddedChannel > channelPair ; 
 
 - public static void fmlServerHandshake ( ServerConfigurationManager scm , NetworkManager manager , EntityPlayerMP player ) 
 + public static void fmlServerHandshake ( PlayerList scm , NetworkManager manager , EntityPlayerMP player ) 
 { 
 NetworkDispatcher dispatcher = NetworkDispatcher . allocAndSet ( manager , scm ) ; 
 dispatcher . serverToClientHandshake ( player ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / GameData . java b / src / main / java / net / minecraftforge / fml / common / registry / GameData . java 
 index 80e9456 . . 525f9cd 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / GameData . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / GameData . java 
 @ @ - 254 , 9 + 254 , 7 @ @ public class GameData 
 
 @ Override 
 public void onAdd ( Potion potion , int id ) { 
 - / / fix the data in the potion and the potions - array 
 - potion . id = id ; 
 - Potion . potionTypes [ id ] = potion ; 
 + / / no op for the minute ? 
 } 
 } 
 } 
 \ No newline at end of file
