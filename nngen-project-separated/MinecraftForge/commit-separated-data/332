BLEU SCORE: 0.016932492841722675

TEST MSG: [ 1 . 12 ] Replace ThrowableImpactEvent with a more generic version
GENERATED MSG: Add EntityTravelToDimensionEvent

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / projectile / EntityArrow . java . patch b / patches / minecraft / net / minecraft / entity / projectile / EntityArrow . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 726c3d7 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / entity / projectile / EntityArrow . java . patch <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / entity / projectile / EntityArrow . java <nl> + + + + . . / src - work / minecraft / net / minecraft / entity / projectile / EntityArrow . java <nl> + @ @ - 262 , 7 + 262 , 7 @ @ <nl> + } <nl> + } <nl> + <nl> + - if ( raytraceresult ! = null ) <nl> + + if ( raytraceresult ! = null & & ! net . minecraftforge . event . ForgeEventFactory . onProjectileImpact ( this , raytraceresult ) ) <nl> + { <nl> + this . func _ 184549 _ a ( raytraceresult ) ; <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / projectile / EntityFireball . java . patch b / patches / minecraft / net / minecraft / entity / projectile / EntityFireball . java . patch <nl> new file mode 100644 <nl> index 0000000 . . d33aa12 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / entity / projectile / EntityFireball . java . patch <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / entity / projectile / EntityFireball . java <nl> + + + + . . / src - work / minecraft / net / minecraft / entity / projectile / EntityFireball . java <nl> + @ @ - 93 , 7 + 93 , 7 @ @ <nl> + + + this . field _ 70234 _ an ; <nl> + RayTraceResult raytraceresult = ProjectileHelper . func _ 188802 _ a ( this , true , this . field _ 70234 _ an > = 25 , this . field _ 70235 _ a ) ; <nl> + <nl> + - if ( raytraceresult ! = null ) <nl> + + if ( raytraceresult ! = null & & ! net . minecraftforge . event . ForgeEventFactory . onProjectileImpact ( this , raytraceresult ) ) <nl> + { <nl> + this . func _ 70227 _ a ( raytraceresult ) ; <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / projectile / EntityLlamaSpit . java . patch b / patches / minecraft / net / minecraft / entity / projectile / EntityLlamaSpit . java . patch <nl> new file mode 100644 <nl> index 0000000 . . e68d05f <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / entity / projectile / EntityLlamaSpit . java . patch <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / entity / projectile / EntityLlamaSpit . java <nl> + + + + . . / src - work / minecraft / net / minecraft / entity / projectile / EntityLlamaSpit . java <nl> + @ @ - 80 , 7 + 80 , 7 @ @ <nl> + raytraceresult = new RayTraceResult ( entity ) ; <nl> + } <nl> + <nl> + - if ( raytraceresult ! = null ) <nl> + + if ( raytraceresult ! = null & & ! net . minecraftforge . event . ForgeEventFactory . onProjectileImpact ( this , raytraceresult ) ) <nl> + { <nl> + this . func _ 190536 _ a ( raytraceresult ) ; <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / projectile / EntityShulkerBullet . java . patch b / patches / minecraft / net / minecraft / entity / projectile / EntityShulkerBullet . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 3707a37 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / entity / projectile / EntityShulkerBullet . java . patch <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / entity / projectile / EntityShulkerBullet . java <nl> + + + + . . / src - work / minecraft / net / minecraft / entity / projectile / EntityShulkerBullet . java <nl> + @ @ - 310 , 7 + 310 , 7 @ @ <nl> + <nl> + RayTraceResult raytraceresult = ProjectileHelper . func _ 188802 _ a ( this , true , false , this . field _ 184570 _ a ) ; <nl> + <nl> + - if ( raytraceresult ! = null ) <nl> + + if ( raytraceresult ! = null & & ! net . minecraftforge . event . ForgeEventFactory . onProjectileImpact ( this , raytraceresult ) ) <nl> + { <nl> + this . func _ 184567 _ a ( raytraceresult ) ; <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / projectile / EntityThrowable . java . patch b / patches / minecraft / net / minecraft / entity / projectile / EntityThrowable . java . patch <nl> index 6b7ef40 . . 8d06225 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / projectile / EntityThrowable . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / projectile / EntityThrowable . java . patch <nl> @ @ - 1 , 10 + 1 , 11 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / entity / projectile / EntityThrowable . java <nl> + + + . . / src - work / minecraft / net / minecraft / entity / projectile / EntityThrowable . java <nl> - @ @ - 246 , 6 + 246 , 7 @ @ <nl> + @ @ - 244 , 7 + 244 , 7 @ @ <nl> + { <nl> + this . func _ 181015 _ d ( raytraceresult . func _ 178782 _ a ( ) ) ; <nl> } <nl> - else <nl> + - else <nl> + + else if ( ! net . minecraftforge . event . ForgeEventFactory . onProjectileImpact ( this , raytraceresult ) ) <nl> { <nl> - + if ( ! net . minecraftforge . common . ForgeHooks . onThrowableImpact ( this , raytraceresult ) ) <nl> this . func _ 70184 _ a ( raytraceresult ) ; <nl> } <nl> - } <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 8fd4472 . . 1ca656a 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 111 , 7 + 111 , 6 @ @ import net . minecraftforge . event . DifficultyChangeEvent ; <nl> import net . minecraftforge . event . ForgeEventFactory ; <nl> import net . minecraftforge . event . ServerChatEvent ; <nl> import net . minecraftforge . event . entity . EntityTravelToDimensionEvent ; <nl> - import net . minecraftforge . event . entity . ThrowableImpactEvent ; <nl> import net . minecraftforge . event . entity . item . ItemTossEvent ; <nl> import net . minecraftforge . event . entity . living . LivingAttackEvent ; <nl> import net . minecraftforge . event . entity . living . LivingDeathEvent ; <nl> @ @ - 1239 , 9 + 1238 , 11 @ @ public class ForgeHooks <nl> public static LootEntry deserializeJsonLootEntry ( String type , JsonObject json , int weight , int quality , LootCondition [ ] conditions ) { return null ; } <nl> public static String getLootEntryType ( LootEntry entry ) { return null ; } / / Companion to above function <nl> <nl> + / * * @ deprecated use { @ link ForgeEventFactory # onProjectileImpact ( EntityThrowable , RayTraceResult ) } * / <nl> + @ Deprecated / / TODO : remove ( 1 . 13 ) <nl> public static boolean onThrowableImpact ( EntityThrowable throwable , RayTraceResult ray ) <nl> { <nl> - return MinecraftForge . EVENT _ BUS . post ( new ThrowableImpactEvent ( throwable , ray ) ) ; <nl> + return ForgeEventFactory . onProjectileImpact ( throwable , ray ) ; <nl> } <nl> <nl> public static boolean onCropsGrowPre ( World worldIn , BlockPos pos , IBlockState state , boolean def ) <nl> diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> index ab8dfa6 . . a319a7a 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 36 , 6 + 36 , 9 @ @ import net . minecraft . entity . monster . EntityZombie ; <nl> import net . minecraft . entity . passive . EntityAnimal ; <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . entity . player . EntityPlayer . SleepResult ; <nl> + import net . minecraft . entity . projectile . EntityArrow ; <nl> + import net . minecraft . entity . projectile . EntityFireball ; <nl> + import net . minecraft . entity . projectile . EntityThrowable ; <nl> import net . minecraft . init . Blocks ; <nl> import net . minecraft . item . Item ; <nl> import net . minecraft . item . ItemStack ; <nl> @ @ - 81 , 6 + 84 , 8 @ @ import net . minecraftforge . event . entity . EntityEvent ; <nl> import net . minecraftforge . event . entity . EntityMountEvent ; <nl> import net . minecraftforge . event . entity . EntityStruckByLightningEvent ; <nl> import net . minecraftforge . event . entity . PlaySoundAtEntityEvent ; <nl> + import net . minecraftforge . event . entity . ProjectileImpactEvent ; <nl> + import net . minecraftforge . event . entity . ThrowableImpactEvent ; <nl> import net . minecraftforge . event . entity . item . ItemExpireEvent ; <nl> import net . minecraftforge . event . entity . living . AnimalTameEvent ; <nl> import net . minecraftforge . event . entity . living . LivingDestroyBlockEvent ; <nl> @ @ - 644 , 6 + 649 , 28 @ @ public class ForgeEventFactory <nl> return event . getCharge ( ) ; <nl> } <nl> <nl> + public static boolean onProjectileImpact ( Entity entity , RayTraceResult ray ) <nl> + { <nl> + return MinecraftForge . EVENT _ BUS . post ( new ProjectileImpactEvent ( entity , ray ) ) ; <nl> + } <nl> + <nl> + public static boolean onProjectileImpact ( EntityArrow arrow , RayTraceResult ray ) <nl> + { <nl> + return MinecraftForge . EVENT _ BUS . post ( new ProjectileImpactEvent . Arrow ( arrow , ray ) ) ; <nl> + } <nl> + <nl> + public static boolean onProjectileImpact ( EntityFireball fireball , RayTraceResult ray ) <nl> + { <nl> + return MinecraftForge . EVENT _ BUS . post ( new ProjectileImpactEvent . Fireball ( fireball , ray ) ) ; <nl> + } <nl> + <nl> + public static boolean onProjectileImpact ( EntityThrowable throwable , RayTraceResult ray ) <nl> + { <nl> + boolean oldEvent = MinecraftForge . EVENT _ BUS . post ( new ThrowableImpactEvent ( throwable , ray ) ) ; <nl> + boolean newEvent = MinecraftForge . EVENT _ BUS . post ( new ProjectileImpactEvent . Throwable ( throwable , ray ) ) ; <nl> + return oldEvent | | newEvent ; / / TODO : clean up when old event is removed <nl> + } <nl> + <nl> public static boolean onReplaceBiomeBlocks ( IChunkGenerator gen , int x , int z , ChunkPrimer primer , World world ) <nl> { <nl> ChunkGeneratorEvent . ReplaceBiomeBlocks event = new ChunkGeneratorEvent . ReplaceBiomeBlocks ( gen , x , z , primer , world ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / ProjectileImpactEvent . java b / src / main / java / net / minecraftforge / event / entity / ProjectileImpactEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 5e099ac <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / event / entity / ProjectileImpactEvent . java <nl> @ @ - 0 , 0 + 1 , 107 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . event . entity ; <nl> + <nl> + import net . minecraft . entity . Entity ; <nl> + import net . minecraft . entity . projectile . EntityArrow ; <nl> + import net . minecraft . entity . projectile . EntityFireball ; <nl> + import net . minecraft . entity . projectile . EntityThrowable ; <nl> + import net . minecraft . util . math . RayTraceResult ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . event . ForgeEventFactory ; <nl> + import net . minecraftforge . fml . common . eventhandler . Cancelable ; <nl> + <nl> + / * * <nl> + * This event is fired when a projectile entity impacts something . <nl> + * This event is fired via { @ link ForgeEventFactory # onProjectileImpact ( Entity , RayTraceResult ) } <nl> + * Subclasses of this event exist for more specific types of projectile . <nl> + * This event is fired for all vanilla projectiles by Forge , <nl> + * custom projectiles should fire this event and check the result in a similar fashion . <nl> + * This event is cancelable . When canceled , the impact will not be processed . <nl> + * Killing or other handling of the entity after event cancellation is up to the modder . <nl> + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . <nl> + * / <nl> + @ Cancelable <nl> + public class ProjectileImpactEvent extends EntityEvent <nl> + { <nl> + private final RayTraceResult ray ; <nl> + <nl> + public ProjectileImpactEvent ( Entity entity , RayTraceResult ray ) <nl> + { <nl> + super ( entity ) ; <nl> + this . ray = ray ; <nl> + } <nl> + <nl> + public RayTraceResult getRayTraceResult ( ) <nl> + { <nl> + return ray ; <nl> + } <nl> + <nl> + @ Cancelable <nl> + public static class Arrow extends ProjectileImpactEvent <nl> + { <nl> + private final EntityArrow arrow ; <nl> + <nl> + public Arrow ( EntityArrow arrow , RayTraceResult ray ) <nl> + { <nl> + super ( arrow , ray ) ; <nl> + this . arrow = arrow ; <nl> + } <nl> + <nl> + public EntityArrow getArrow ( ) <nl> + { <nl> + return arrow ; <nl> + } <nl> + } <nl> + <nl> + @ Cancelable <nl> + public static class Fireball extends ProjectileImpactEvent <nl> + { <nl> + private final EntityFireball fireball ; <nl> + <nl> + public Fireball ( EntityFireball fireball , RayTraceResult ray ) <nl> + { <nl> + super ( fireball , ray ) ; <nl> + this . fireball = fireball ; <nl> + } <nl> + <nl> + public EntityFireball getFireball ( ) <nl> + { <nl> + return fireball ; <nl> + } <nl> + } <nl> + <nl> + @ Cancelable <nl> + public static class Throwable extends ProjectileImpactEvent <nl> + { <nl> + private final EntityThrowable throwable ; <nl> + <nl> + public Throwable ( EntityThrowable throwable , RayTraceResult ray ) <nl> + { <nl> + super ( throwable , ray ) ; <nl> + this . throwable = throwable ; <nl> + } <nl> + <nl> + public EntityThrowable getThrowable ( ) <nl> + { <nl> + return throwable ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / ThrowableImpactEvent . java b / src / main / java / net / minecraftforge / event / entity / ThrowableImpactEvent . java <nl> index a06ca54 . . ad340a0 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / entity / ThrowableImpactEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / entity / ThrowableImpactEvent . java <nl> @ @ - 10 , 7 + 10 , 10 @ @ import net . minecraftforge . fml . common . eventhandler . Cancelable ; <nl> * This event is cancelable . When canceled , { @ link EntityThrowable # onImpact } will not be called . <nl> * Killing or other handling of the entity after event cancellation is up to the modder . <nl> * This event is fired on the { @ link net . minecraftforge . common . MinecraftForge # EVENT _ BUS } . <nl> + * <nl> + * @ deprecated use { @ link ProjectileImpactEvent . Throwable } <nl> * / <nl> + @ Deprecated / / TODO : remove ( 1 . 13 ) <nl> @ Cancelable <nl> public class ThrowableImpactEvent extends EntityEvent <nl> { <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ProjectileImpactEventTest . java b / src / test / java / net / minecraftforge / debug / ProjectileImpactEventTest . java <nl> new file mode 100644 <nl> index 0000000 . . e9cdd76 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / ProjectileImpactEventTest . java <nl> @ @ - 0 , 0 + 1 , 32 @ @ <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . event . entity . ProjectileImpactEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + import org . apache . logging . log4j . Logger ; <nl> + <nl> + @ Mod ( modid = " projectile _ event _ test " , name = " ProjectileImpactEvent test mod " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> + public class ProjectileImpactEventTest <nl> + { <nl> + private static final boolean ENABLED = false ; <nl> + private static Logger logger ; <nl> + <nl> + @ Mod . EventHandler <nl> + public void preInit ( FMLPreInitializationEvent event ) <nl> + { <nl> + logger = event . getModLog ( ) ; <nl> + <nl> + if ( ENABLED ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . register ( ProjectileImpactEventTest . class ) ; <nl> + } <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public static void onProjectileImpact ( ProjectileImpactEvent event ) <nl> + { <nl> + logger . info ( " projectile : { } , impact : { } " , event . getEntity ( ) . getName ( ) , event . getRayTraceResult ( ) ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / Entity . java . patch b / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> index a679974 . . 9fb1608 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> @ @ - 131 , 7 + 131 , 15 @ @ <nl> } <nl> <nl> public boolean func _ 70093 _ af ( ) <nl> - @ @ - 2092 , 7 + 2146 , 7 @ @ <nl> + @ @ - 2049 , 6 + 2103 , 7 @ @ <nl> + { <nl> + if ( ! this . field _ 70170 _ p . field _ 72995 _ K & & ! this . field _ 70128 _ L ) <nl> + { <nl> + + if ( ! net . minecraftforge . common . ForgeHooks . onTravelToDimension ( this , p _ 71027 _ 1 _ ) ) return ; <nl> + this . field _ 70170 _ p . field _ 72984 _ F . func _ 76320 _ a ( " changeDimension " ) ; <nl> + MinecraftServer minecraftserver = MinecraftServer . func _ 71276 _ C ( ) ; <nl> + int i = this . field _ 71093 _ bK ; <nl> + @ @ - 2092 , 7 + 2147 , 7 @ @ <nl> <nl> public float func _ 180428 _ a ( Explosion p _ 180428 _ 1 _ , World p _ 180428 _ 2 _ , BlockPos p _ 180428 _ 3 _ , IBlockState p _ 180428 _ 4 _ ) <nl> { <nl> @ @ - 140 , 7 + 148 , 7 @ @ <nl> } <nl> <nl> public boolean func _ 174816 _ a ( Explosion p _ 174816 _ 1 _ , World p _ 174816 _ 2 _ , BlockPos p _ 174816 _ 3 _ , IBlockState p _ 174816 _ 4 _ , float p _ 174816 _ 5 _ ) <nl> - @ @ - 2353 , 4 + 2407 , 209 @ @ <nl> + @ @ - 2353 , 4 + 2408 , 209 @ @ <nl> <nl> EnchantmentHelper . func _ 151385 _ b ( p _ 174815 _ 1 _ , p _ 174815 _ 2 _ ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> index cda8667 . . 0dd5fb6 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> @ @ - 72 , 7 + 72 , 15 @ @ <nl> <nl> if ( entitylist $ entityegginfo ! = null ) <nl> { <nl> - @ @ - 831 , 6 + 848 , 7 @ @ <nl> + @ @ - 528 , 6 + 545 , 7 @ @ <nl> + <nl> + public void func _ 71027 _ c ( int p _ 71027 _ 1 _ ) <nl> + { <nl> + + if ( ! net . minecraftforge . common . ForgeHooks . onTravelToDimension ( this , p _ 71027 _ 1 _ ) ) return ; <nl> + if ( this . field _ 71093 _ bK = = 1 & & p _ 71027 _ 1 _ = = 1 ) <nl> + { <nl> + this . func _ 71029 _ a ( AchievementList . field _ 76003 _ C ) ; <nl> + @ @ - 831 , 6 + 849 , 7 @ @ <nl> { <nl> if ( p _ 71064 _ 1 _ ! = null ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index ec12a14 . . 660de80 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import net . minecraft . client . gui . GuiScreen ; <nl> import net . minecraft . entity . Entity ; <nl> import net . minecraft . entity . EntityLivingBase ; <nl> import net . minecraft . entity . item . EntityItem ; <nl> + import net . minecraft . entity . item . EntityMinecartContainer ; <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . entity . player . EntityPlayerMP ; <nl> import net . minecraft . event . ClickEvent ; <nl> @ @ - 73 , 6 + 74 , 7 @ @ import net . minecraftforge . common . util . BlockSnapshot ; <nl> import net . minecraftforge . event . AnvilUpdateEvent ; <nl> import net . minecraftforge . event . ForgeEventFactory ; <nl> import net . minecraftforge . event . ServerChatEvent ; <nl> + import net . minecraftforge . event . entity . EntityTravelToDimensionEvent ; <nl> import net . minecraftforge . event . entity . item . ItemTossEvent ; <nl> import net . minecraftforge . event . entity . living . LivingAttackEvent ; <nl> import net . minecraftforge . event . entity . living . LivingDeathEvent ; <nl> @ @ - 906 , 4 + 908 , 19 @ @ public class ForgeHooks <nl> if ( stack ! = null & & stack . getItem ( ) . onLeftClickEntity ( stack , player , target ) ) return false ; <nl> return true ; <nl> } <nl> - } <nl> + <nl> + public static boolean onTravelToDimension ( Entity entity , int dimension ) <nl> + { <nl> + EntityTravelToDimensionEvent event = new EntityTravelToDimensionEvent ( entity , dimension ) ; <nl> + MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> + if ( event . isCanceled ( ) ) <nl> + { <nl> + / / Revert variable back to true as it would have been set to false <nl> + if ( entity instanceof EntityMinecartContainer ) <nl> + { <nl> + ( ( EntityMinecartContainer ) entity ) . dropContentsWhenDead = true ; <nl> + } <nl> + } <nl> + return ! event . isCanceled ( ) ; <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / EntityTravelToDimensionEvent . java b / src / main / java / net / minecraftforge / event / entity / EntityTravelToDimensionEvent . java <nl> new file mode 100644 <nl> index 0000000 . . d62c276 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / event / entity / EntityTravelToDimensionEvent . java <nl> @ @ - 0 , 0 + 1 , 29 @ @ <nl> + package net . minecraftforge . event . entity ; <nl> + <nl> + import net . minecraft . entity . Entity ; <nl> + import net . minecraftforge . fml . common . eventhandler . Cancelable ; <nl> + import net . minecraftforge . fml . common . eventhandler . Event . HasResult ; <nl> + <nl> + / * * <nl> + * EntityTravelToDimensionEvent is fired before an Entity travels to a dimension . < br > <nl> + * < br > <nl> + * { @ link # dimension } contains the id of the dimension the entity is traveling to . < br > <nl> + * < br > <nl> + * This event is { @ link Cancelable } . < br > <nl> + * If this event is canceled , the Entity does not travel to the dimension . < br > <nl> + * < br > <nl> + * This event does not have a result . { @ link HasResult } < br > <nl> + * < br > <nl> + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . < br > <nl> + * * / <nl> + @ Cancelable <nl> + public class EntityTravelToDimensionEvent extends EntityEvent <nl> + { <nl> + public final int dimension ; <nl> + <nl> + public EntityTravelToDimensionEvent ( Entity entity , int dimension ) <nl> + { <nl> + super ( entity ) ; <nl> + this . dimension = dimension ; <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg <nl> index 70b6348 . . 5166343 100644 <nl> - - - a / src / main / resources / forge _ at . cfg <nl> + + + b / src / main / resources / forge _ at . cfg <nl> @ @ - 173 , 6 + 173 , 8 @ @ public net . minecraft . entity . ai . EntityAITasks $ EntityAITaskEntry <nl> # # EntityLiving <nl> public net . minecraft . entity . EntityLiving field _ 70714 _ bg # tasks <nl> public net . minecraft . entity . EntityLiving field _ 70715 _ bh # targetTasks <nl> + # # EntityMinecartContainer <nl> + public net . minecraft . entity . item . EntityMinecartContainer field _ 94112 _ b # dropContentsWhenDead <nl> # GuiScreen <nl> public net . minecraft . client . gui . GuiScreen field _ 146297 _ k # minecraft instance - public because gui ' s outside access it <nl> # Minecraft <nl> diff - - git a / src / test / java / net / minecraftforge / test / EntityTravelToDimensionEventTest . java b / src / test / java / net / minecraftforge / test / EntityTravelToDimensionEventTest . java <nl> new file mode 100644 <nl> index 0000000 . . a95b22d <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / test / EntityTravelToDimensionEventTest . java <nl> @ @ - 0 , 0 + 1 , 29 @ @ <nl> + package net . minecraftforge . test ; <nl> + <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . event . entity . EntityTravelToDimensionEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . Mod . EventHandler ; <nl> + import net . minecraftforge . fml . common . event . FMLInitializationEvent ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + <nl> + @ Mod ( modid = " EntityTravelToDimensionEventTest " , name = " EntityTravelToDimensionEventTest " , version = " 0 . 0 . 0 " ) <nl> + public class EntityTravelToDimensionEventTest <nl> + { <nl> + public static final boolean ENABLE = false ; <nl> + <nl> + @ EventHandler <nl> + public void init ( FMLInitializationEvent event ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public void onDimensionTravel ( EntityTravelToDimensionEvent event ) <nl> + { <nl> + if ( ENABLE ) { <nl> + System . out . println ( " Travelling to Dimension " + event . dimension ) ; <nl> + event . setCanceled ( true ) ; <nl> + } <nl> + } <nl> + }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / projectile / EntityArrow . java . patch b / patches / minecraft / net / minecraft / entity / projectile / EntityArrow . java . patch 
 new file mode 100644 
 index 0000000 . . 726c3d7 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / entity / projectile / EntityArrow . java . patch 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / entity / projectile / EntityArrow . java 
 + + + + . . / src - work / minecraft / net / minecraft / entity / projectile / EntityArrow . java 
 + @ @ - 262 , 7 + 262 , 7 @ @ 
 + } 
 + } 
 + 
 + - if ( raytraceresult ! = null ) 
 + + if ( raytraceresult ! = null & & ! net . minecraftforge . event . ForgeEventFactory . onProjectileImpact ( this , raytraceresult ) ) 
 + { 
 + this . func _ 184549 _ a ( raytraceresult ) ; 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / entity / projectile / EntityFireball . java . patch b / patches / minecraft / net / minecraft / entity / projectile / EntityFireball . java . patch 
 new file mode 100644 
 index 0000000 . . d33aa12 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / entity / projectile / EntityFireball . java . patch 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / entity / projectile / EntityFireball . java 
 + + + + . . / src - work / minecraft / net / minecraft / entity / projectile / EntityFireball . java 
 + @ @ - 93 , 7 + 93 , 7 @ @ 
 + + + this . field _ 70234 _ an ; 
 + RayTraceResult raytraceresult = ProjectileHelper . func _ 188802 _ a ( this , true , this . field _ 70234 _ an > = 25 , this . field _ 70235 _ a ) ; 
 + 
 + - if ( raytraceresult ! = null ) 
 + + if ( raytraceresult ! = null & & ! net . minecraftforge . event . ForgeEventFactory . onProjectileImpact ( this , raytraceresult ) ) 
 + { 
 + this . func _ 70227 _ a ( raytraceresult ) ; 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / entity / projectile / EntityLlamaSpit . java . patch b / patches / minecraft / net / minecraft / entity / projectile / EntityLlamaSpit . java . patch 
 new file mode 100644 
 index 0000000 . . e68d05f 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / entity / projectile / EntityLlamaSpit . java . patch 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / entity / projectile / EntityLlamaSpit . java 
 + + + + . . / src - work / minecraft / net / minecraft / entity / projectile / EntityLlamaSpit . java 
 + @ @ - 80 , 7 + 80 , 7 @ @ 
 + raytraceresult = new RayTraceResult ( entity ) ; 
 + } 
 + 
 + - if ( raytraceresult ! = null ) 
 + + if ( raytraceresult ! = null & & ! net . minecraftforge . event . ForgeEventFactory . onProjectileImpact ( this , raytraceresult ) ) 
 + { 
 + this . func _ 190536 _ a ( raytraceresult ) ; 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / entity / projectile / EntityShulkerBullet . java . patch b / patches / minecraft / net / minecraft / entity / projectile / EntityShulkerBullet . java . patch 
 new file mode 100644 
 index 0000000 . . 3707a37 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / entity / projectile / EntityShulkerBullet . java . patch 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / entity / projectile / EntityShulkerBullet . java 
 + + + + . . / src - work / minecraft / net / minecraft / entity / projectile / EntityShulkerBullet . java 
 + @ @ - 310 , 7 + 310 , 7 @ @ 
 + 
 + RayTraceResult raytraceresult = ProjectileHelper . func _ 188802 _ a ( this , true , false , this . field _ 184570 _ a ) ; 
 + 
 + - if ( raytraceresult ! = null ) 
 + + if ( raytraceresult ! = null & & ! net . minecraftforge . event . ForgeEventFactory . onProjectileImpact ( this , raytraceresult ) ) 
 + { 
 + this . func _ 184567 _ a ( raytraceresult ) ; 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / entity / projectile / EntityThrowable . java . patch b / patches / minecraft / net / minecraft / entity / projectile / EntityThrowable . java . patch 
 index 6b7ef40 . . 8d06225 100644 
 - - - a / patches / minecraft / net / minecraft / entity / projectile / EntityThrowable . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / projectile / EntityThrowable . java . patch 
 @ @ - 1 , 10 + 1 , 11 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / entity / projectile / EntityThrowable . java 
 + + + . . / src - work / minecraft / net / minecraft / entity / projectile / EntityThrowable . java 
 - @ @ - 246 , 6 + 246 , 7 @ @ 
 + @ @ - 244 , 7 + 244 , 7 @ @ 
 + { 
 + this . func _ 181015 _ d ( raytraceresult . func _ 178782 _ a ( ) ) ; 
 } 
 - else 
 + - else 
 + + else if ( ! net . minecraftforge . event . ForgeEventFactory . onProjectileImpact ( this , raytraceresult ) ) 
 { 
 - + if ( ! net . minecraftforge . common . ForgeHooks . onThrowableImpact ( this , raytraceresult ) ) 
 this . func _ 70184 _ a ( raytraceresult ) ; 
 } 
 - } 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 8fd4472 . . 1ca656a 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 111 , 7 + 111 , 6 @ @ import net . minecraftforge . event . DifficultyChangeEvent ; 
 import net . minecraftforge . event . ForgeEventFactory ; 
 import net . minecraftforge . event . ServerChatEvent ; 
 import net . minecraftforge . event . entity . EntityTravelToDimensionEvent ; 
 - import net . minecraftforge . event . entity . ThrowableImpactEvent ; 
 import net . minecraftforge . event . entity . item . ItemTossEvent ; 
 import net . minecraftforge . event . entity . living . LivingAttackEvent ; 
 import net . minecraftforge . event . entity . living . LivingDeathEvent ; 
 @ @ - 1239 , 9 + 1238 , 11 @ @ public class ForgeHooks 
 public static LootEntry deserializeJsonLootEntry ( String type , JsonObject json , int weight , int quality , LootCondition [ ] conditions ) { return null ; } 
 public static String getLootEntryType ( LootEntry entry ) { return null ; } / / Companion to above function 
 
 + / * * @ deprecated use { @ link ForgeEventFactory # onProjectileImpact ( EntityThrowable , RayTraceResult ) } * / 
 + @ Deprecated / / TODO : remove ( 1 . 13 ) 
 public static boolean onThrowableImpact ( EntityThrowable throwable , RayTraceResult ray ) 
 { 
 - return MinecraftForge . EVENT _ BUS . post ( new ThrowableImpactEvent ( throwable , ray ) ) ; 
 + return ForgeEventFactory . onProjectileImpact ( throwable , ray ) ; 
 } 
 
 public static boolean onCropsGrowPre ( World worldIn , BlockPos pos , IBlockState state , boolean def ) 
 diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 index ab8dfa6 . . a319a7a 100644 
 - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 36 , 6 + 36 , 9 @ @ import net . minecraft . entity . monster . EntityZombie ; 
 import net . minecraft . entity . passive . EntityAnimal ; 
 import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . entity . player . EntityPlayer . SleepResult ; 
 + import net . minecraft . entity . projectile . EntityArrow ; 
 + import net . minecraft . entity . projectile . EntityFireball ; 
 + import net . minecraft . entity . projectile . EntityThrowable ; 
 import net . minecraft . init . Blocks ; 
 import net . minecraft . item . Item ; 
 import net . minecraft . item . ItemStack ; 
 @ @ - 81 , 6 + 84 , 8 @ @ import net . minecraftforge . event . entity . EntityEvent ; 
 import net . minecraftforge . event . entity . EntityMountEvent ; 
 import net . minecraftforge . event . entity . EntityStruckByLightningEvent ; 
 import net . minecraftforge . event . entity . PlaySoundAtEntityEvent ; 
 + import net . minecraftforge . event . entity . ProjectileImpactEvent ; 
 + import net . minecraftforge . event . entity . ThrowableImpactEvent ; 
 import net . minecraftforge . event . entity . item . ItemExpireEvent ; 
 import net . minecraftforge . event . entity . living . AnimalTameEvent ; 
 import net . minecraftforge . event . entity . living . LivingDestroyBlockEvent ; 
 @ @ - 644 , 6 + 649 , 28 @ @ public class ForgeEventFactory 
 return event . getCharge ( ) ; 
 } 
 
 + public static boolean onProjectileImpact ( Entity entity , RayTraceResult ray ) 
 + { 
 + return MinecraftForge . EVENT _ BUS . post ( new ProjectileImpactEvent ( entity , ray ) ) ; 
 + } 
 + 
 + public static boolean onProjectileImpact ( EntityArrow arrow , RayTraceResult ray ) 
 + { 
 + return MinecraftForge . EVENT _ BUS . post ( new ProjectileImpactEvent . Arrow ( arrow , ray ) ) ; 
 + } 
 + 
 + public static boolean onProjectileImpact ( EntityFireball fireball , RayTraceResult ray ) 
 + { 
 + return MinecraftForge . EVENT _ BUS . post ( new ProjectileImpactEvent . Fireball ( fireball , ray ) ) ; 
 + } 
 + 
 + public static boolean onProjectileImpact ( EntityThrowable throwable , RayTraceResult ray ) 
 + { 
 + boolean oldEvent = MinecraftForge . EVENT _ BUS . post ( new ThrowableImpactEvent ( throwable , ray ) ) ; 
 + boolean newEvent = MinecraftForge . EVENT _ BUS . post ( new ProjectileImpactEvent . Throwable ( throwable , ray ) ) ; 
 + return oldEvent | | newEvent ; / / TODO : clean up when old event is removed 
 + } 
 + 
 public static boolean onReplaceBiomeBlocks ( IChunkGenerator gen , int x , int z , ChunkPrimer primer , World world ) 
 { 
 ChunkGeneratorEvent . ReplaceBiomeBlocks event = new ChunkGeneratorEvent . ReplaceBiomeBlocks ( gen , x , z , primer , world ) ; 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / ProjectileImpactEvent . java b / src / main / java / net / minecraftforge / event / entity / ProjectileImpactEvent . java 
 new file mode 100644 
 index 0000000 . . 5e099ac 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / event / entity / ProjectileImpactEvent . java 
 @ @ - 0 , 0 + 1 , 107 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . event . entity ; 
 + 
 + import net . minecraft . entity . Entity ; 
 + import net . minecraft . entity . projectile . EntityArrow ; 
 + import net . minecraft . entity . projectile . EntityFireball ; 
 + import net . minecraft . entity . projectile . EntityThrowable ; 
 + import net . minecraft . util . math . RayTraceResult ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . event . ForgeEventFactory ; 
 + import net . minecraftforge . fml . common . eventhandler . Cancelable ; 
 + 
 + / * * 
 + * This event is fired when a projectile entity impacts something . 
 + * This event is fired via { @ link ForgeEventFactory # onProjectileImpact ( Entity , RayTraceResult ) } 
 + * Subclasses of this event exist for more specific types of projectile . 
 + * This event is fired for all vanilla projectiles by Forge , 
 + * custom projectiles should fire this event and check the result in a similar fashion . 
 + * This event is cancelable . When canceled , the impact will not be processed . 
 + * Killing or other handling of the entity after event cancellation is up to the modder . 
 + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . 
 + * / 
 + @ Cancelable 
 + public class ProjectileImpactEvent extends EntityEvent 
 + { 
 + private final RayTraceResult ray ; 
 + 
 + public ProjectileImpactEvent ( Entity entity , RayTraceResult ray ) 
 + { 
 + super ( entity ) ; 
 + this . ray = ray ; 
 + } 
 + 
 + public RayTraceResult getRayTraceResult ( ) 
 + { 
 + return ray ; 
 + } 
 + 
 + @ Cancelable 
 + public static class Arrow extends ProjectileImpactEvent 
 + { 
 + private final EntityArrow arrow ; 
 + 
 + public Arrow ( EntityArrow arrow , RayTraceResult ray ) 
 + { 
 + super ( arrow , ray ) ; 
 + this . arrow = arrow ; 
 + } 
 + 
 + public EntityArrow getArrow ( ) 
 + { 
 + return arrow ; 
 + } 
 + } 
 + 
 + @ Cancelable 
 + public static class Fireball extends ProjectileImpactEvent 
 + { 
 + private final EntityFireball fireball ; 
 + 
 + public Fireball ( EntityFireball fireball , RayTraceResult ray ) 
 + { 
 + super ( fireball , ray ) ; 
 + this . fireball = fireball ; 
 + } 
 + 
 + public EntityFireball getFireball ( ) 
 + { 
 + return fireball ; 
 + } 
 + } 
 + 
 + @ Cancelable 
 + public static class Throwable extends ProjectileImpactEvent 
 + { 
 + private final EntityThrowable throwable ; 
 + 
 + public Throwable ( EntityThrowable throwable , RayTraceResult ray ) 
 + { 
 + super ( throwable , ray ) ; 
 + this . throwable = throwable ; 
 + } 
 + 
 + public EntityThrowable getThrowable ( ) 
 + { 
 + return throwable ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / ThrowableImpactEvent . java b / src / main / java / net / minecraftforge / event / entity / ThrowableImpactEvent . java 
 index a06ca54 . . ad340a0 100644 
 - - - a / src / main / java / net / minecraftforge / event / entity / ThrowableImpactEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / entity / ThrowableImpactEvent . java 
 @ @ - 10 , 7 + 10 , 10 @ @ import net . minecraftforge . fml . common . eventhandler . Cancelable ; 
 * This event is cancelable . When canceled , { @ link EntityThrowable # onImpact } will not be called . 
 * Killing or other handling of the entity after event cancellation is up to the modder . 
 * This event is fired on the { @ link net . minecraftforge . common . MinecraftForge # EVENT _ BUS } . 
 + * 
 + * @ deprecated use { @ link ProjectileImpactEvent . Throwable } 
 * / 
 + @ Deprecated / / TODO : remove ( 1 . 13 ) 
 @ Cancelable 
 public class ThrowableImpactEvent extends EntityEvent 
 { 
 diff - - git a / src / test / java / net / minecraftforge / debug / ProjectileImpactEventTest . java b / src / test / java / net / minecraftforge / debug / ProjectileImpactEventTest . java 
 new file mode 100644 
 index 0000000 . . e9cdd76 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / ProjectileImpactEventTest . java 
 @ @ - 0 , 0 + 1 , 32 @ @ 
 + package net . minecraftforge . debug ; 
 + 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . event . entity . ProjectileImpactEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + import org . apache . logging . log4j . Logger ; 
 + 
 + @ Mod ( modid = " projectile _ event _ test " , name = " ProjectileImpactEvent test mod " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 + public class ProjectileImpactEventTest 
 + { 
 + private static final boolean ENABLED = false ; 
 + private static Logger logger ; 
 + 
 + @ Mod . EventHandler 
 + public void preInit ( FMLPreInitializationEvent event ) 
 + { 
 + logger = event . getModLog ( ) ; 
 + 
 + if ( ENABLED ) 
 + { 
 + MinecraftForge . EVENT _ BUS . register ( ProjectileImpactEventTest . class ) ; 
 + } 
 + } 
 + 
 + @ SubscribeEvent 
 + public static void onProjectileImpact ( ProjectileImpactEvent event ) 
 + { 
 + logger . info ( " projectile : { } , impact : { } " , event . getEntity ( ) . getName ( ) , event . getRayTraceResult ( ) ) ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / Entity . java . patch b / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 index a679974 . . 9fb1608 100644 
 - - - a / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 @ @ - 131 , 7 + 131 , 15 @ @ 
 } 
 
 public boolean func _ 70093 _ af ( ) 
 - @ @ - 2092 , 7 + 2146 , 7 @ @ 
 + @ @ - 2049 , 6 + 2103 , 7 @ @ 
 + { 
 + if ( ! this . field _ 70170 _ p . field _ 72995 _ K & & ! this . field _ 70128 _ L ) 
 + { 
 + + if ( ! net . minecraftforge . common . ForgeHooks . onTravelToDimension ( this , p _ 71027 _ 1 _ ) ) return ; 
 + this . field _ 70170 _ p . field _ 72984 _ F . func _ 76320 _ a ( " changeDimension " ) ; 
 + MinecraftServer minecraftserver = MinecraftServer . func _ 71276 _ C ( ) ; 
 + int i = this . field _ 71093 _ bK ; 
 + @ @ - 2092 , 7 + 2147 , 7 @ @ 
 
 public float func _ 180428 _ a ( Explosion p _ 180428 _ 1 _ , World p _ 180428 _ 2 _ , BlockPos p _ 180428 _ 3 _ , IBlockState p _ 180428 _ 4 _ ) 
 { 
 @ @ - 140 , 7 + 148 , 7 @ @ 
 } 
 
 public boolean func _ 174816 _ a ( Explosion p _ 174816 _ 1 _ , World p _ 174816 _ 2 _ , BlockPos p _ 174816 _ 3 _ , IBlockState p _ 174816 _ 4 _ , float p _ 174816 _ 5 _ ) 
 - @ @ - 2353 , 4 + 2407 , 209 @ @ 
 + @ @ - 2353 , 4 + 2408 , 209 @ @ 
 
 EnchantmentHelper . func _ 151385 _ b ( p _ 174815 _ 1 _ , p _ 174815 _ 2 _ ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 index cda8667 . . 0dd5fb6 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 @ @ - 72 , 7 + 72 , 15 @ @ 
 
 if ( entitylist $ entityegginfo ! = null ) 
 { 
 - @ @ - 831 , 6 + 848 , 7 @ @ 
 + @ @ - 528 , 6 + 545 , 7 @ @ 
 + 
 + public void func _ 71027 _ c ( int p _ 71027 _ 1 _ ) 
 + { 
 + + if ( ! net . minecraftforge . common . ForgeHooks . onTravelToDimension ( this , p _ 71027 _ 1 _ ) ) return ; 
 + if ( this . field _ 71093 _ bK = = 1 & & p _ 71027 _ 1 _ = = 1 ) 
 + { 
 + this . func _ 71029 _ a ( AchievementList . field _ 76003 _ C ) ; 
 + @ @ - 831 , 6 + 849 , 7 @ @ 
 { 
 if ( p _ 71064 _ 1 _ ! = null ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index ec12a14 . . 660de80 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import net . minecraft . client . gui . GuiScreen ; 
 import net . minecraft . entity . Entity ; 
 import net . minecraft . entity . EntityLivingBase ; 
 import net . minecraft . entity . item . EntityItem ; 
 + import net . minecraft . entity . item . EntityMinecartContainer ; 
 import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . entity . player . EntityPlayerMP ; 
 import net . minecraft . event . ClickEvent ; 
 @ @ - 73 , 6 + 74 , 7 @ @ import net . minecraftforge . common . util . BlockSnapshot ; 
 import net . minecraftforge . event . AnvilUpdateEvent ; 
 import net . minecraftforge . event . ForgeEventFactory ; 
 import net . minecraftforge . event . ServerChatEvent ; 
 + import net . minecraftforge . event . entity . EntityTravelToDimensionEvent ; 
 import net . minecraftforge . event . entity . item . ItemTossEvent ; 
 import net . minecraftforge . event . entity . living . LivingAttackEvent ; 
 import net . minecraftforge . event . entity . living . LivingDeathEvent ; 
 @ @ - 906 , 4 + 908 , 19 @ @ public class ForgeHooks 
 if ( stack ! = null & & stack . getItem ( ) . onLeftClickEntity ( stack , player , target ) ) return false ; 
 return true ; 
 } 
 - } 
 + 
 + public static boolean onTravelToDimension ( Entity entity , int dimension ) 
 + { 
 + EntityTravelToDimensionEvent event = new EntityTravelToDimensionEvent ( entity , dimension ) ; 
 + MinecraftForge . EVENT _ BUS . post ( event ) ; 
 + if ( event . isCanceled ( ) ) 
 + { 
 + / / Revert variable back to true as it would have been set to false 
 + if ( entity instanceof EntityMinecartContainer ) 
 + { 
 + ( ( EntityMinecartContainer ) entity ) . dropContentsWhenDead = true ; 
 + } 
 + } 
 + return ! event . isCanceled ( ) ; 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / EntityTravelToDimensionEvent . java b / src / main / java / net / minecraftforge / event / entity / EntityTravelToDimensionEvent . java 
 new file mode 100644 
 index 0000000 . . d62c276 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / event / entity / EntityTravelToDimensionEvent . java 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + package net . minecraftforge . event . entity ; 
 + 
 + import net . minecraft . entity . Entity ; 
 + import net . minecraftforge . fml . common . eventhandler . Cancelable ; 
 + import net . minecraftforge . fml . common . eventhandler . Event . HasResult ; 
 + 
 + / * * 
 + * EntityTravelToDimensionEvent is fired before an Entity travels to a dimension . < br > 
 + * < br > 
 + * { @ link # dimension } contains the id of the dimension the entity is traveling to . < br > 
 + * < br > 
 + * This event is { @ link Cancelable } . < br > 
 + * If this event is canceled , the Entity does not travel to the dimension . < br > 
 + * < br > 
 + * This event does not have a result . { @ link HasResult } < br > 
 + * < br > 
 + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . < br > 
 + * * / 
 + @ Cancelable 
 + public class EntityTravelToDimensionEvent extends EntityEvent 
 + { 
 + public final int dimension ; 
 + 
 + public EntityTravelToDimensionEvent ( Entity entity , int dimension ) 
 + { 
 + super ( entity ) ; 
 + this . dimension = dimension ; 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg 
 index 70b6348 . . 5166343 100644 
 - - - a / src / main / resources / forge _ at . cfg 
 + + + b / src / main / resources / forge _ at . cfg 
 @ @ - 173 , 6 + 173 , 8 @ @ public net . minecraft . entity . ai . EntityAITasks $ EntityAITaskEntry 
 # # EntityLiving 
 public net . minecraft . entity . EntityLiving field _ 70714 _ bg # tasks 
 public net . minecraft . entity . EntityLiving field _ 70715 _ bh # targetTasks 
 + # # EntityMinecartContainer 
 + public net . minecraft . entity . item . EntityMinecartContainer field _ 94112 _ b # dropContentsWhenDead 
 # GuiScreen 
 public net . minecraft . client . gui . GuiScreen field _ 146297 _ k # minecraft instance - public because gui ' s outside access it 
 # Minecraft 
 diff - - git a / src / test / java / net / minecraftforge / test / EntityTravelToDimensionEventTest . java b / src / test / java / net / minecraftforge / test / EntityTravelToDimensionEventTest . java 
 new file mode 100644 
 index 0000000 . . a95b22d 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / test / EntityTravelToDimensionEventTest . java 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + package net . minecraftforge . test ; 
 + 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . event . entity . EntityTravelToDimensionEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . Mod . EventHandler ; 
 + import net . minecraftforge . fml . common . event . FMLInitializationEvent ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + 
 + @ Mod ( modid = " EntityTravelToDimensionEventTest " , name = " EntityTravelToDimensionEventTest " , version = " 0 . 0 . 0 " ) 
 + public class EntityTravelToDimensionEventTest 
 + { 
 + public static final boolean ENABLE = false ; 
 + 
 + @ EventHandler 
 + public void init ( FMLInitializationEvent event ) 
 + { 
 + MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public void onDimensionTravel ( EntityTravelToDimensionEvent event ) 
 + { 
 + if ( ENABLE ) { 
 + System . out . println ( " Travelling to Dimension " + event . dimension ) ; 
 + event . setCanceled ( true ) ; 
 + } 
 + } 
 + }
