BLEU SCORE: 0.016932492841722675

TEST MSG: A few tweaks , things are starting to work now . .
GENERATED MSG: Update forge

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch <nl> index 0eec18b . . 35d3804 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch <nl> @ @ - 30 , 7 + 30 , 7 @ @ <nl> <nl> - this . drawString ( this . fontRendererObj , s , 2 , this . height - 10 , - 1 ) ; <nl> + java . util . List < String > brandings = com . google . common . collect . Lists . reverse ( net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getBrandings ( true ) ) ; <nl> - + for ( int brdline = 0 ; i < brandings . size ( ) ; i + + ) <nl> + + for ( int brdline = 0 ; brdline < brandings . size ( ) ; brdline + + ) <nl> + { <nl> + String brd = brandings . get ( brdline ) ; <nl> + if ( ! com . google . common . base . Strings . isNullOrEmpty ( brd ) ) <nl> diff - - git a / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch b / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch <nl> index 3400720 . . a731967 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch <nl> @ @ - 94 , 18 + 94 , 19 @ @ <nl> int j1 = Math . min ( j , k ) ; <nl> int k1 = MathHelper . calculateLogBaseTwo ( j1 ) ; <nl> <nl> - @ @ - 175 , 8 + 207 , 10 @ @ <nl> + @ @ - 175 , 8 + 207 , 11 @ @ <nl> this . mipmapLevels = k1 ; <nl> } <nl> <nl> + bar = net . minecraftforge . fml . common . ProgressManager . push ( " Mipmap generation " , skipFirst ? 0 : this . mapRegisteredSprites . size ( ) ) ; <nl> for ( final TextureAtlasSprite textureatlassprite1 : this . mapRegisteredSprites . values ( ) ) <nl> { <nl> + + if ( skipFirst ) break ; <nl> + bar . step ( textureatlassprite1 . getIconName ( ) ) ; <nl> try <nl> { <nl> textureatlassprite1 . generateMipmaps ( this . mipmapLevels ) ; <nl> - @ @ - 213 , 9 + 247 , 13 @ @ <nl> + @ @ - 213 , 9 + 248 , 13 @ @ <nl> <nl> this . missingImage . generateMipmaps ( this . mipmapLevels ) ; <nl> stitcher . addSprite ( this . missingImage ) ; <nl> @ @ - 119 , 7 + 120 , 7 @ @ <nl> stitcher . doStitch ( ) ; <nl> } <nl> catch ( StitcherException stitcherexception ) <nl> - @ @ - 224 , 9 + 262 , 11 @ @ <nl> + @ @ - 224 , 9 + 263 , 11 @ @ <nl> } <nl> <nl> logger . info ( " Created : { } x { } { } - atlas " , new Object [ ] { Integer . valueOf ( stitcher . getCurrentWidth ( ) ) , Integer . valueOf ( stitcher . getCurrentHeight ( ) ) , this . basePath } ) ; <nl> @ @ - 131 , 7 + 132 , 7 @ @ <nl> for ( TextureAtlasSprite textureatlassprite2 : stitcher . getStichSlots ( ) ) <nl> { <nl> String s = textureatlassprite2 . getIconName ( ) ; <nl> - @ @ - 256 , 6 + 296 , 13 @ @ <nl> + @ @ - 256 , 6 + 297 , 13 @ @ <nl> { <nl> textureatlassprite3 . copyFrom ( this . missingImage ) ; <nl> } <nl> @ @ - 145 , 7 + 146 , 7 @ @ <nl> } <nl> <nl> private ResourceLocation completeResourceLocation ( ResourceLocation location , int p _ 147634 _ 2 _ ) <nl> - @ @ - 319 , 4 + 366 , 37 @ @ <nl> + @ @ - 319 , 4 + 367 , 37 @ @ <nl> { <nl> return this . missingImage ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> index 3805d49 . . b55dbad 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> @ @ - 89 , 14 + 89 , 14 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> ModMetadata meta = getMetadata ( ) ; <nl> meta . modId = " Forge " ; <nl> meta . name = " Minecraft Forge " ; <nl> - meta . version = String . format ( " % d . % d . % d . % d " , majorVersion , minorVersion , revisionVersion , buildVersion ) ; <nl> + meta . version = ForgeVersion . getVersion ( ) ; <nl> meta . credits = " Made possible with help from many people " ; <nl> - meta . authorList = Arrays . asList ( " LexManos " , " Cpw " ) ; <nl> + meta . authorList = Arrays . asList ( " LexManos " , " cpw " ) ; <nl> meta . description = " Minecraft Forge is a common open source API allowing a broad range of mods " + <nl> " to work cooperatively together . It allows many mods to be created without " + <nl> " them editing the main Minecraft code . " ; <nl> - meta . url = " http : / / MinecraftForge . net " ; <nl> - meta . updateUrl = " http : / / MinecraftForge . net / forum / index . php / topic , 5 . 0 . html " ; <nl> + meta . url = " http : / / minecraftforge . net " ; <nl> + meta . updateUrl = " http : / / minecraftforge . net / forum / index . php / topic , 5 . 0 . html " ; <nl> meta . screenshots = new String [ 0 ] ; <nl> meta . logoFile = " / forge _ logo . png " ; <nl> try { <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeVersion . java b / src / main / java / net / minecraftforge / common / ForgeVersion . java <nl> index fcc8796 . . cb621ac 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeVersion . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeVersion . java <nl> @ @ - 39 , 9 + 39 , 9 @ @ public class ForgeVersion <nl> / / This number is incremented every time Jenkins builds Forge , and never reset . Should always be 0 in the repo code . <nl> public static final int buildVersion = 0 ; <nl> / / This is the minecraft version we ' re building for - used in various places in Forge / FML code <nl> - public static final String mcVersion = " 1 . 8 " ; <nl> + public static final String mcVersion = " 1 . 8 . 8 " ; <nl> / / This is the MCP data version we ' re using <nl> - public static final String mcpVersion = " 9 . 10 " ; <nl> + public static final String mcpVersion = " 9 . 18 " ; <nl> private static Status status = PENDING ; <nl> private static String target = null ; <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / MinecraftForge . java b / src / main / java / net / minecraftforge / common / MinecraftForge . java <nl> index 5083905 . . 1621801 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / MinecraftForge . java <nl> + + + b / src / main / java / net / minecraftforge / common / MinecraftForge . java <nl> @ @ - 166 , 9 + 166 , 4 @ @ public class MinecraftForge <nl> / / Load before all the mods , so MC owns the MC fluids <nl> FluidRegistry . validateFluidRegistry ( ) ; <nl> } <nl> - <nl> - public static String getBrandingVersion ( ) <nl> - { <nl> - return " Minecraft Forge " + ForgeVersion . getVersion ( ) ; <nl> - } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> index d8ee59c . . a5015ac 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> @ @ - 49 , 6 + 49 , 8 @ @ import net . minecraft . util . IThreadListener ; <nl> import net . minecraft . world . World ; <nl> import net . minecraft . world . storage . SaveHandler ; <nl> import net . minecraft . world . storage . WorldInfo ; <nl> + import net . minecraftforge . common . ForgeVersion ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . fml . common . eventhandler . EventBus ; <nl> import net . minecraftforge . fml . common . gameevent . InputEvent ; <nl> import net . minecraftforge . fml . common . gameevent . PlayerEvent ; <nl> @ @ - 143 , 10 + 145 , 8 @ @ public class FMLCommonHandler <nl> public void beginLoading ( IFMLSidedHandler handler ) <nl> { <nl> sidedDelegate = handler ; <nl> - FMLLog . log ( " MinecraftForge " , Level . INFO , " Attempting early MinecraftForge initialization " ) ; <nl> - callForgeMethod ( " initialize " ) ; <nl> - callForgeMethod ( " registerCrashCallable " ) ; <nl> - FMLLog . log ( " MinecraftForge " , Level . INFO , " Completed early MinecraftForge initialization " ) ; <nl> + MinecraftForge . initialize ( ) ; <nl> + / / MinecraftForge . registerCrashCallable ( ) ; <nl> } <nl> <nl> / * * <nl> @ @ - 213 , 34 + 213 , 6 @ @ public class FMLCommonHandler <nl> } <nl> <nl> <nl> - private Class < ? > findMinecraftForge ( ) <nl> - { <nl> - if ( forge = = null & & ! noForge ) <nl> - { <nl> - try { <nl> - forge = Class . forName ( " net . minecraftforge . common . MinecraftForge " ) ; <nl> - } catch ( Exception ex ) { <nl> - noForge = true ; <nl> - } <nl> - } <nl> - return forge ; <nl> - } <nl> - <nl> - private Object callForgeMethod ( String method ) <nl> - { <nl> - if ( noForge ) <nl> - return null ; <nl> - try <nl> - { <nl> - return findMinecraftForge ( ) . getMethod ( method ) . invoke ( null ) ; <nl> - } <nl> - catch ( Exception e ) <nl> - { <nl> - / / No Forge installation <nl> - return null ; <nl> - } <nl> - } <nl> - <nl> public void computeBranding ( ) <nl> { <nl> if ( brandings = = null ) <nl> @ @ - 248 , 12 + 220 , 7 @ @ public class FMLCommonHandler <nl> Builder < String > brd = ImmutableList . < String > builder ( ) ; <nl> brd . add ( Loader . instance ( ) . getMCVersionString ( ) ) ; <nl> brd . add ( Loader . instance ( ) . getMCPVersionString ( ) ) ; <nl> - brd . add ( " FML v " + Loader . instance ( ) . getFMLVersionString ( ) ) ; <nl> - String forgeBranding = ( String ) callForgeMethod ( " getBrandingVersion " ) ; <nl> - if ( ! Strings . isNullOrEmpty ( forgeBranding ) ) <nl> - { <nl> - brd . add ( forgeBranding ) ; <nl> - } <nl> + brd . add ( " Powered by Forge " + ForgeVersion . getVersion ( ) ) ; <nl> if ( sidedDelegate ! = null ) <nl> { <nl> brd . addAll ( sidedDelegate . getAdditionalBrandingInformation ( ) ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / Loader . java b / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> index 55efa62 . . 3d19c14 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> @ @ - 114 , 7 + 114 , 7 @ @ import com . google . gson . JsonParser ; <nl> * / <nl> public class Loader <nl> { <nl> - public static final String MC _ VERSION = " 1 . 8 " ; <nl> + public static final String MC _ VERSION = " 1 . 8 . 8 " ; <nl> private static final Splitter DEPENDENCYPARTSPLITTER = Splitter . on ( " : " ) . omitEmptyStrings ( ) . trimResults ( ) ; <nl> private static final Splitter DEPENDENCYSPLITTER = Splitter . on ( " ; " ) . omitEmptyStrings ( ) . trimResults ( ) ; <nl> / * * <nl> @ @ - 833 , 7 + 833 , 7 @ @ public class Loader <nl> <nl> public String getMCPVersionString ( ) <nl> { <nl> - return String . format ( " MCP v % s " , mcpversion ) ; <nl> + return String . format ( " MCP % s " , mcpversion ) ; <nl> } <nl> <nl> public void serverStopped ( ) <nl> diff - - git a / src / main / resources / mcpmod . info b / src / main / resources / mcpmod . info <nl> index 7f044fb . . f745895 100644 <nl> - - - a / src / main / resources / mcpmod . info <nl> + + + b / src / main / resources / mcpmod . info <nl> @ @ - 3 , 8 + 3 , 8 @ @ <nl> " modid " : " mcp " , <nl> " name " : " Minecraft Coder Pack " , <nl> " description " : " Modding toolkit to decompile and deobfuscate the Minecraft client and server files . " , <nl> - " version " : " 9 . 05 " , <nl> - " mcversion " : " 1 . 8 . 0 " , <nl> + " version " : " 9 . 18 " , <nl> + " mcversion " : " 1 . 8 . 8 " , <nl> " logoFile " : " / mcplogo . png " , <nl> " url " : " http : / / www . modcoderpack . com / website / " , <nl> " updateUrl " : " " ,
NEAREST DIFF (one line): diff - - git a / fml b / fml <nl> index a6dc03a . . 4d46abf 160000 <nl> - - - a / fml <nl> + + + b / fml <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c <nl> + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e <nl> diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> index 0ef9b48 . . 63a9622 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> @ @ - 21 , 10 + 21 , 10 @ @ <nl> this . disconnected = true ; <nl> this . mc . loadWorld ( ( WorldClient ) null ) ; <nl> <nl> - @ @ - 866 , 7 + 871 , 11 @ @ <nl> - public void handleChat ( Packet3Chat par1Packet3Chat ) <nl> - { <nl> - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; <nl> + @ @ - 870 , 7 + 875 , 11 @ @ <nl> + { <nl> + return ; <nl> + } <nl> - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; <nl> + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; <nl> + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) <nl> @ @ - 34 , 7 + 34 , 7 @ @ <nl> } <nl> <nl> public void handleAnimation ( Packet18Animation par1Packet18Animation ) <nl> - @ @ - 1354 , 6 + 1363 , 10 @ @ <nl> + @ @ - 1358 , 6 + 1367 , 10 @ @ <nl> { <nl> tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> index 6d2c8e1 . . a186e0f 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> @ @ - 13 , 11 + 13 , 16 @ @ <nl> public class EntityPlayerMP extends EntityPlayer implements ICrafting <nl> { <nl> private String translator = " en _ US " ; <nl> - @ @ - 165 , 18 + 171 , 10 @ @ <nl> + @ @ - 164 , 19 + 170 , 14 @ @ <nl> + super ( par2World , par3Str ) ; <nl> par4ItemInWorldManager . thisPlayerMP = this ; <nl> this . theItemInWorldManager = par4ItemInWorldManager ; <nl> - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; <nl> + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . <nl> + + this . renderDistance = 0 ; <nl> + + else <nl> + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; <nl> int i = chunkcoordinates . posX ; <nl> int j = chunkcoordinates . posZ ; <nl> @ @ - 33 , 7 + 38 , 7 @ @ <nl> <nl> this . mcServer = par1MinecraftServer ; <nl> this . stepHeight = 0 . 0F ; <nl> - @ @ - 240 , 11 + 238 , 6 @ @ <nl> + @ @ - 240 , 11 + 241 , 6 @ @ <nl> this . yOffset = 0 . 0F ; <nl> } <nl> <nl> @ @ - 45 , 7 + 50 , 7 @ @ <nl> / * * <nl> * Called to update the entity ' s position / logic . <nl> * / <nl> - @ @ - 254 , 7 + 247 , 7 @ @ <nl> + @ @ - 254 , 7 + 250 , 7 @ @ <nl> - - this . initialInvulnerability ; <nl> this . openContainer . detectAndSendChanges ( ) ; <nl> <nl> @ @ - 54 , 7 + 59 , 7 @ @ <nl> { <nl> this . closeScreen ( ) ; <nl> this . openContainer = this . inventoryContainer ; <nl> - @ @ - 290 , 7 + 283 , 10 @ @ <nl> + @ @ - 290 , 7 + 286 , 10 @ @ <nl> if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) <nl> { <nl> arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; <nl> @ @ - 66 , 7 + 71 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 311 , 6 + 307 , 7 @ @ <nl> + @ @ - 311 , 6 + 310 , 7 @ @ <nl> { <nl> Chunk chunk = ( Chunk ) iterator2 . next ( ) ; <nl> this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; <nl> @ @ - 74 , 7 + 79 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 383 , 11 + 380 , 25 @ @ <nl> + @ @ - 383 , 11 + 383 , 25 @ @ <nl> * / <nl> public void onDeath ( DamageSource par1DamageSource ) <nl> { <nl> @ @ - 100 , 7 + 105 , 7 @ @ <nl> } <nl> <nl> Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; <nl> - @ @ - 1054 , 4 + 1065 , 16 @ @ <nl> + @ @ - 1054 , 4 + 1068 , 16 @ @ <nl> { <nl> this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> index d28a430 . . 7e6a155 100644 <nl> - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> @ @ - 127 , 7 + 127 , 7 @ @ <nl> { <nl> this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; <nl> } <nl> - @ @ - 695 , 6 + 733 , 8 @ @ <nl> + @ @ - 698 , 6 + 736 , 8 @ @ <nl> } <nl> <nl> ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; <nl> @ @ - 136 , 7 + 136 , 7 @ @ <nl> this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; <nl> } <nl> <nl> - @ @ - 849 , 7 + 889 , 7 @ @ <nl> + @ @ - 852 , 7 + 892 , 7 @ @ <nl> return ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> index 7d63255 . . 7413a7d 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> @ @ - 1 , 11 + 1 , 15 @ @ <nl> package net . minecraftforge . common ; <nl> <nl> import cpw . mods . fml . common . FMLCommonHandler ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . entity . player . EntityPlayerMP ; <nl> import net . minecraft . item . ItemInWorldManager ; <nl> + import net . minecraft . network . packet . Packet204ClientInfo ; <nl> import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . stats . StatBase ; <nl> import net . minecraft . util . ChatMessageComponent ; <nl> import net . minecraft . util . ChunkCoordinates ; <nl> + import net . minecraft . util . DamageSource ; <nl> import net . minecraft . world . World ; <nl> <nl> / / Preliminary , simple Fake Player class <nl> @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP <nl> <nl> @ Override <nl> public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } <nl> + @ Override <nl> + public void addStat ( StatBase par1StatBase , int par2 ) { } <nl> + @ Override <nl> + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } <nl> + @ Override <nl> + public boolean isEntityInvulnerable ( ) { return true ; } <nl> + @ Override <nl> + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } <nl> + @ Override <nl> + public void onDeath ( DamageSource source ) { return ; } <nl> + @ Override <nl> + public void onUpdate ( ) { return ; } <nl> + @ Override <nl> + public void travelToDimension ( int dim ) { return ; } <nl> + @ Override <nl> + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 43dbe83 . . 8d98241 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; <nl> import net . minecraft . item . ItemStack ; <nl> import net . minecraft . item . ItemSword ; <nl> import net . minecraft . network . NetServerHandler ; <nl> + import net . minecraft . network . packet . Packet ; <nl> import net . minecraft . network . packet . Packet53BlockChange ; <nl> import net . minecraft . tileentity . TileEntity ; <nl> import net . minecraft . util . AxisAlignedBB ; <nl> @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks <nl> TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; <nl> if ( tileentity ! = null ) <nl> { <nl> - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; <nl> + Packet pkt = tileentity . getDescriptionPacket ( ) ; <nl> + if ( pkt ! = null ) <nl> + { <nl> + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; <nl> + } <nl> } <nl> } <nl> return event ; <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> index 5031fa6 . . 16d011f 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; <nl> import java . util . Map ; <nl> <nl> import net . minecraft . block . Block ; <nl> + import net . minecraft . util . StatCollector ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . event . Event ; <nl> <nl> @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry <nl> static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; <nl> static BiMap < Block , Fluid > fluidBlocks ; <nl> <nl> - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> + public static final Fluid WATER = new Fluid ( " water " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . water . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> + <nl> + public static final Fluid LAVA = new Fluid ( " lava " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . lava . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> <nl> public static int renderIdFluid = - 1 ; <nl>

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch 
 index 0eec18b . . 35d3804 100644 
 - - - a / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiMainMenu . java . patch 
 @ @ - 30 , 7 + 30 , 7 @ @ 
 
 - this . drawString ( this . fontRendererObj , s , 2 , this . height - 10 , - 1 ) ; 
 + java . util . List < String > brandings = com . google . common . collect . Lists . reverse ( net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getBrandings ( true ) ) ; 
 - + for ( int brdline = 0 ; i < brandings . size ( ) ; i + + ) 
 + + for ( int brdline = 0 ; brdline < brandings . size ( ) ; brdline + + ) 
 + { 
 + String brd = brandings . get ( brdline ) ; 
 + if ( ! com . google . common . base . Strings . isNullOrEmpty ( brd ) ) 
 diff - - git a / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch b / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch 
 index 3400720 . . a731967 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch 
 @ @ - 94 , 18 + 94 , 19 @ @ 
 int j1 = Math . min ( j , k ) ; 
 int k1 = MathHelper . calculateLogBaseTwo ( j1 ) ; 
 
 - @ @ - 175 , 8 + 207 , 10 @ @ 
 + @ @ - 175 , 8 + 207 , 11 @ @ 
 this . mipmapLevels = k1 ; 
 } 
 
 + bar = net . minecraftforge . fml . common . ProgressManager . push ( " Mipmap generation " , skipFirst ? 0 : this . mapRegisteredSprites . size ( ) ) ; 
 for ( final TextureAtlasSprite textureatlassprite1 : this . mapRegisteredSprites . values ( ) ) 
 { 
 + + if ( skipFirst ) break ; 
 + bar . step ( textureatlassprite1 . getIconName ( ) ) ; 
 try 
 { 
 textureatlassprite1 . generateMipmaps ( this . mipmapLevels ) ; 
 - @ @ - 213 , 9 + 247 , 13 @ @ 
 + @ @ - 213 , 9 + 248 , 13 @ @ 
 
 this . missingImage . generateMipmaps ( this . mipmapLevels ) ; 
 stitcher . addSprite ( this . missingImage ) ; 
 @ @ - 119 , 7 + 120 , 7 @ @ 
 stitcher . doStitch ( ) ; 
 } 
 catch ( StitcherException stitcherexception ) 
 - @ @ - 224 , 9 + 262 , 11 @ @ 
 + @ @ - 224 , 9 + 263 , 11 @ @ 
 } 
 
 logger . info ( " Created : { } x { } { } - atlas " , new Object [ ] { Integer . valueOf ( stitcher . getCurrentWidth ( ) ) , Integer . valueOf ( stitcher . getCurrentHeight ( ) ) , this . basePath } ) ; 
 @ @ - 131 , 7 + 132 , 7 @ @ 
 for ( TextureAtlasSprite textureatlassprite2 : stitcher . getStichSlots ( ) ) 
 { 
 String s = textureatlassprite2 . getIconName ( ) ; 
 - @ @ - 256 , 6 + 296 , 13 @ @ 
 + @ @ - 256 , 6 + 297 , 13 @ @ 
 { 
 textureatlassprite3 . copyFrom ( this . missingImage ) ; 
 } 
 @ @ - 145 , 7 + 146 , 7 @ @ 
 } 
 
 private ResourceLocation completeResourceLocation ( ResourceLocation location , int p _ 147634 _ 2 _ ) 
 - @ @ - 319 , 4 + 366 , 37 @ @ 
 + @ @ - 319 , 4 + 367 , 37 @ @ 
 { 
 return this . missingImage ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 index 3805d49 . . b55dbad 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 @ @ - 89 , 14 + 89 , 14 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 ModMetadata meta = getMetadata ( ) ; 
 meta . modId = " Forge " ; 
 meta . name = " Minecraft Forge " ; 
 - meta . version = String . format ( " % d . % d . % d . % d " , majorVersion , minorVersion , revisionVersion , buildVersion ) ; 
 + meta . version = ForgeVersion . getVersion ( ) ; 
 meta . credits = " Made possible with help from many people " ; 
 - meta . authorList = Arrays . asList ( " LexManos " , " Cpw " ) ; 
 + meta . authorList = Arrays . asList ( " LexManos " , " cpw " ) ; 
 meta . description = " Minecraft Forge is a common open source API allowing a broad range of mods " + 
 " to work cooperatively together . It allows many mods to be created without " + 
 " them editing the main Minecraft code . " ; 
 - meta . url = " http : / / MinecraftForge . net " ; 
 - meta . updateUrl = " http : / / MinecraftForge . net / forum / index . php / topic , 5 . 0 . html " ; 
 + meta . url = " http : / / minecraftforge . net " ; 
 + meta . updateUrl = " http : / / minecraftforge . net / forum / index . php / topic , 5 . 0 . html " ; 
 meta . screenshots = new String [ 0 ] ; 
 meta . logoFile = " / forge _ logo . png " ; 
 try { 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeVersion . java b / src / main / java / net / minecraftforge / common / ForgeVersion . java 
 index fcc8796 . . cb621ac 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeVersion . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeVersion . java 
 @ @ - 39 , 9 + 39 , 9 @ @ public class ForgeVersion 
 / / This number is incremented every time Jenkins builds Forge , and never reset . Should always be 0 in the repo code . 
 public static final int buildVersion = 0 ; 
 / / This is the minecraft version we ' re building for - used in various places in Forge / FML code 
 - public static final String mcVersion = " 1 . 8 " ; 
 + public static final String mcVersion = " 1 . 8 . 8 " ; 
 / / This is the MCP data version we ' re using 
 - public static final String mcpVersion = " 9 . 10 " ; 
 + public static final String mcpVersion = " 9 . 18 " ; 
 private static Status status = PENDING ; 
 private static String target = null ; 
 
 diff - - git a / src / main / java / net / minecraftforge / common / MinecraftForge . java b / src / main / java / net / minecraftforge / common / MinecraftForge . java 
 index 5083905 . . 1621801 100644 
 - - - a / src / main / java / net / minecraftforge / common / MinecraftForge . java 
 + + + b / src / main / java / net / minecraftforge / common / MinecraftForge . java 
 @ @ - 166 , 9 + 166 , 4 @ @ public class MinecraftForge 
 / / Load before all the mods , so MC owns the MC fluids 
 FluidRegistry . validateFluidRegistry ( ) ; 
 } 
 - 
 - public static String getBrandingVersion ( ) 
 - { 
 - return " Minecraft Forge " + ForgeVersion . getVersion ( ) ; 
 - } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 index d8ee59c . . a5015ac 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 @ @ - 49 , 6 + 49 , 8 @ @ import net . minecraft . util . IThreadListener ; 
 import net . minecraft . world . World ; 
 import net . minecraft . world . storage . SaveHandler ; 
 import net . minecraft . world . storage . WorldInfo ; 
 + import net . minecraftforge . common . ForgeVersion ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . fml . common . eventhandler . EventBus ; 
 import net . minecraftforge . fml . common . gameevent . InputEvent ; 
 import net . minecraftforge . fml . common . gameevent . PlayerEvent ; 
 @ @ - 143 , 10 + 145 , 8 @ @ public class FMLCommonHandler 
 public void beginLoading ( IFMLSidedHandler handler ) 
 { 
 sidedDelegate = handler ; 
 - FMLLog . log ( " MinecraftForge " , Level . INFO , " Attempting early MinecraftForge initialization " ) ; 
 - callForgeMethod ( " initialize " ) ; 
 - callForgeMethod ( " registerCrashCallable " ) ; 
 - FMLLog . log ( " MinecraftForge " , Level . INFO , " Completed early MinecraftForge initialization " ) ; 
 + MinecraftForge . initialize ( ) ; 
 + / / MinecraftForge . registerCrashCallable ( ) ; 
 } 
 
 / * * 
 @ @ - 213 , 34 + 213 , 6 @ @ public class FMLCommonHandler 
 } 
 
 
 - private Class < ? > findMinecraftForge ( ) 
 - { 
 - if ( forge = = null & & ! noForge ) 
 - { 
 - try { 
 - forge = Class . forName ( " net . minecraftforge . common . MinecraftForge " ) ; 
 - } catch ( Exception ex ) { 
 - noForge = true ; 
 - } 
 - } 
 - return forge ; 
 - } 
 - 
 - private Object callForgeMethod ( String method ) 
 - { 
 - if ( noForge ) 
 - return null ; 
 - try 
 - { 
 - return findMinecraftForge ( ) . getMethod ( method ) . invoke ( null ) ; 
 - } 
 - catch ( Exception e ) 
 - { 
 - / / No Forge installation 
 - return null ; 
 - } 
 - } 
 - 
 public void computeBranding ( ) 
 { 
 if ( brandings = = null ) 
 @ @ - 248 , 12 + 220 , 7 @ @ public class FMLCommonHandler 
 Builder < String > brd = ImmutableList . < String > builder ( ) ; 
 brd . add ( Loader . instance ( ) . getMCVersionString ( ) ) ; 
 brd . add ( Loader . instance ( ) . getMCPVersionString ( ) ) ; 
 - brd . add ( " FML v " + Loader . instance ( ) . getFMLVersionString ( ) ) ; 
 - String forgeBranding = ( String ) callForgeMethod ( " getBrandingVersion " ) ; 
 - if ( ! Strings . isNullOrEmpty ( forgeBranding ) ) 
 - { 
 - brd . add ( forgeBranding ) ; 
 - } 
 + brd . add ( " Powered by Forge " + ForgeVersion . getVersion ( ) ) ; 
 if ( sidedDelegate ! = null ) 
 { 
 brd . addAll ( sidedDelegate . getAdditionalBrandingInformation ( ) ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / Loader . java b / src / main / java / net / minecraftforge / fml / common / Loader . java 
 index 55efa62 . . 3d19c14 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / Loader . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / Loader . java 
 @ @ - 114 , 7 + 114 , 7 @ @ import com . google . gson . JsonParser ; 
 * / 
 public class Loader 
 { 
 - public static final String MC _ VERSION = " 1 . 8 " ; 
 + public static final String MC _ VERSION = " 1 . 8 . 8 " ; 
 private static final Splitter DEPENDENCYPARTSPLITTER = Splitter . on ( " : " ) . omitEmptyStrings ( ) . trimResults ( ) ; 
 private static final Splitter DEPENDENCYSPLITTER = Splitter . on ( " ; " ) . omitEmptyStrings ( ) . trimResults ( ) ; 
 / * * 
 @ @ - 833 , 7 + 833 , 7 @ @ public class Loader 
 
 public String getMCPVersionString ( ) 
 { 
 - return String . format ( " MCP v % s " , mcpversion ) ; 
 + return String . format ( " MCP % s " , mcpversion ) ; 
 } 
 
 public void serverStopped ( ) 
 diff - - git a / src / main / resources / mcpmod . info b / src / main / resources / mcpmod . info 
 index 7f044fb . . f745895 100644 
 - - - a / src / main / resources / mcpmod . info 
 + + + b / src / main / resources / mcpmod . info 
 @ @ - 3 , 8 + 3 , 8 @ @ 
 " modid " : " mcp " , 
 " name " : " Minecraft Coder Pack " , 
 " description " : " Modding toolkit to decompile and deobfuscate the Minecraft client and server files . " , 
 - " version " : " 9 . 05 " , 
 - " mcversion " : " 1 . 8 . 0 " , 
 + " version " : " 9 . 18 " , 
 + " mcversion " : " 1 . 8 . 8 " , 
 " logoFile " : " / mcplogo . png " , 
 " url " : " http : / / www . modcoderpack . com / website / " , 
 " updateUrl " : " " ,

NEAREST DIFF:
diff - - git a / fml b / fml 
 index a6dc03a . . 4d46abf 160000 
 - - - a / fml 
 + + + b / fml 
 @ @ - 1 + 1 @ @ 
 - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c 
 + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e 
 diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 index 0ef9b48 . . 63a9622 100644 
 - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 @ @ - 21 , 10 + 21 , 10 @ @ 
 this . disconnected = true ; 
 this . mc . loadWorld ( ( WorldClient ) null ) ; 
 
 - @ @ - 866 , 7 + 871 , 11 @ @ 
 - public void handleChat ( Packet3Chat par1Packet3Chat ) 
 - { 
 - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; 
 + @ @ - 870 , 7 + 875 , 11 @ @ 
 + { 
 + return ; 
 + } 
 - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; 
 + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; 
 + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) 
 @ @ - 34 , 7 + 34 , 7 @ @ 
 } 
 
 public void handleAnimation ( Packet18Animation par1Packet18Animation ) 
 - @ @ - 1354 , 6 + 1363 , 10 @ @ 
 + @ @ - 1358 , 6 + 1367 , 10 @ @ 
 { 
 tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 index 6d2c8e1 . . a186e0f 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 @ @ - 13 , 11 + 13 , 16 @ @ 
 public class EntityPlayerMP extends EntityPlayer implements ICrafting 
 { 
 private String translator = " en _ US " ; 
 - @ @ - 165 , 18 + 171 , 10 @ @ 
 + @ @ - 164 , 19 + 170 , 14 @ @ 
 + super ( par2World , par3Str ) ; 
 par4ItemInWorldManager . thisPlayerMP = this ; 
 this . theItemInWorldManager = par4ItemInWorldManager ; 
 - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; 
 + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . 
 + + this . renderDistance = 0 ; 
 + + else 
 + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; 
 int i = chunkcoordinates . posX ; 
 int j = chunkcoordinates . posZ ; 
 @ @ - 33 , 7 + 38 , 7 @ @ 
 
 this . mcServer = par1MinecraftServer ; 
 this . stepHeight = 0 . 0F ; 
 - @ @ - 240 , 11 + 238 , 6 @ @ 
 + @ @ - 240 , 11 + 241 , 6 @ @ 
 this . yOffset = 0 . 0F ; 
 } 
 
 @ @ - 45 , 7 + 50 , 7 @ @ 
 / * * 
 * Called to update the entity ' s position / logic . 
 * / 
 - @ @ - 254 , 7 + 247 , 7 @ @ 
 + @ @ - 254 , 7 + 250 , 7 @ @ 
 - - this . initialInvulnerability ; 
 this . openContainer . detectAndSendChanges ( ) ; 
 
 @ @ - 54 , 7 + 59 , 7 @ @ 
 { 
 this . closeScreen ( ) ; 
 this . openContainer = this . inventoryContainer ; 
 - @ @ - 290 , 7 + 283 , 10 @ @ 
 + @ @ - 290 , 7 + 286 , 10 @ @ 
 if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) 
 { 
 arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; 
 @ @ - 66 , 7 + 71 , 7 @ @ 
 } 
 } 
 
 - @ @ - 311 , 6 + 307 , 7 @ @ 
 + @ @ - 311 , 6 + 310 , 7 @ @ 
 { 
 Chunk chunk = ( Chunk ) iterator2 . next ( ) ; 
 this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; 
 @ @ - 74 , 7 + 79 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 383 , 11 + 380 , 25 @ @ 
 + @ @ - 383 , 11 + 383 , 25 @ @ 
 * / 
 public void onDeath ( DamageSource par1DamageSource ) 
 { 
 @ @ - 100 , 7 + 105 , 7 @ @ 
 } 
 
 Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; 
 - @ @ - 1054 , 4 + 1065 , 16 @ @ 
 + @ @ - 1054 , 4 + 1068 , 16 @ @ 
 { 
 this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 index d28a430 . . 7e6a155 100644 
 - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 @ @ - 127 , 7 + 127 , 7 @ @ 
 { 
 this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; 
 } 
 - @ @ - 695 , 6 + 733 , 8 @ @ 
 + @ @ - 698 , 6 + 736 , 8 @ @ 
 } 
 
 ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; 
 @ @ - 136 , 7 + 136 , 7 @ @ 
 this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; 
 } 
 
 - @ @ - 849 , 7 + 889 , 7 @ @ 
 + @ @ - 852 , 7 + 892 , 7 @ @ 
 return ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 index 7d63255 . . 7413a7d 100644 
 - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java 
 + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 @ @ - 1 , 11 + 1 , 15 @ @ 
 package net . minecraftforge . common ; 
 
 import cpw . mods . fml . common . FMLCommonHandler ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . entity . player . EntityPlayerMP ; 
 import net . minecraft . item . ItemInWorldManager ; 
 + import net . minecraft . network . packet . Packet204ClientInfo ; 
 import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . stats . StatBase ; 
 import net . minecraft . util . ChatMessageComponent ; 
 import net . minecraft . util . ChunkCoordinates ; 
 + import net . minecraft . util . DamageSource ; 
 import net . minecraft . world . World ; 
 
 / / Preliminary , simple Fake Player class 
 @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP 
 
 @ Override 
 public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } 
 + @ Override 
 + public void addStat ( StatBase par1StatBase , int par2 ) { } 
 + @ Override 
 + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } 
 + @ Override 
 + public boolean isEntityInvulnerable ( ) { return true ; } 
 + @ Override 
 + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } 
 + @ Override 
 + public void onDeath ( DamageSource source ) { return ; } 
 + @ Override 
 + public void onUpdate ( ) { return ; } 
 + @ Override 
 + public void travelToDimension ( int dim ) { return ; } 
 + @ Override 
 + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 43dbe83 . . 8d98241 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; 
 import net . minecraft . item . ItemStack ; 
 import net . minecraft . item . ItemSword ; 
 import net . minecraft . network . NetServerHandler ; 
 + import net . minecraft . network . packet . Packet ; 
 import net . minecraft . network . packet . Packet53BlockChange ; 
 import net . minecraft . tileentity . TileEntity ; 
 import net . minecraft . util . AxisAlignedBB ; 
 @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks 
 TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; 
 if ( tileentity ! = null ) 
 { 
 - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; 
 + Packet pkt = tileentity . getDescriptionPacket ( ) ; 
 + if ( pkt ! = null ) 
 + { 
 + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; 
 + } 
 } 
 } 
 return event ; 
 diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 index 5031fa6 . . 16d011f 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; 
 import java . util . Map ; 
 
 import net . minecraft . block . Block ; 
 + import net . minecraft . util . StatCollector ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . event . Event ; 
 
 @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry 
 static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; 
 static BiMap < Block , Fluid > fluidBlocks ; 
 
 - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 + public static final Fluid WATER = new Fluid ( " water " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . water . name " ) ; 
 + } 
 + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 + 
 + public static final Fluid LAVA = new Fluid ( " lava " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . lava . name " ) ; 
 + } 
 + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 
 public static int renderIdFluid = - 1 ; 

