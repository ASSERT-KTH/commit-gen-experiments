BLEU SCORE: 0.033864985683445356

TEST MSG: Allow result of PlayerInteractEvent to be changed when it ' s cancelled
GENERATED MSG: First pass at exposing data fixers to modders .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch <nl> index e186be4 . . fdaf7f6 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch <nl> @ @ - 108 , 7 + 108 , 7 @ @ <nl> + { <nl> + / / Give the server a chance to fire event as well . That way server event is not dependant on client event . <nl> + this . field _ 78774 _ b . func _ 147297 _ a ( new CPacketPlayerTryUseItemOnBlock ( p _ 187099 _ 3 _ , p _ 187099 _ 4 _ , p _ 187099 _ 6 _ , f , f1 , f2 ) ) ; <nl> - + return EnumActionResult . PASS ; <nl> + + return event . getCancellationResult ( ) ; <nl> + } <nl> + EnumActionResult result = EnumActionResult . PASS ; <nl> + <nl> @ @ - 161 , 15 + 161 , 16 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 457 , 6 + 490 , 7 @ @ <nl> + @ @ - 457 , 6 + 490 , 8 @ @ <nl> } <nl> else <nl> { <nl> - + if ( net . minecraftforge . common . ForgeHooks . onItemRightClick ( p _ 187101 _ 1 _ , p _ 187101 _ 3 _ ) ) return net . minecraft . util . EnumActionResult . PASS ; <nl> + + EnumActionResult cancelResult = net . minecraftforge . common . ForgeHooks . onItemRightClickAction ( p _ 187101 _ 1 _ , p _ 187101 _ 3 _ ) ; <nl> + + if ( cancelResult ! = null ) return cancelResult ; <nl> int i = itemstack . func _ 190916 _ E ( ) ; <nl> ActionResult < ItemStack > actionresult = itemstack . func _ 77957 _ a ( p _ 187101 _ 2 _ , p _ 187101 _ 1 _ , p _ 187101 _ 3 _ ) ; <nl> ItemStack itemstack1 = ( ItemStack ) actionresult . func _ 188398 _ b ( ) ; <nl> - @ @ - 464 , 6 + 498 , 10 @ @ <nl> + @ @ - 464 , 6 + 499 , 10 @ @ <nl> if ( itemstack1 ! = itemstack | | itemstack1 . func _ 190916 _ E ( ) ! = i ) <nl> { <nl> p _ 187101 _ 1 _ . func _ 184611 _ a ( p _ 187101 _ 3 _ , itemstack1 ) ; <nl> @ @ - 180 , 11 + 181 , 13 @ @ <nl> } <nl> <nl> return actionresult . func _ 188397 _ a ( ) ; <nl> - @ @ - 500 , 6 + 538 , 7 @ @ <nl> + @ @ - 500 , 6 + 539 , 9 @ @ <nl> this . func _ 78750 _ j ( ) ; <nl> Vec3d vec3d = new Vec3d ( p _ 187102 _ 3 _ . field _ 72307 _ f . field _ 72450 _ a - p _ 187102 _ 2 _ . field _ 70165 _ t , p _ 187102 _ 3 _ . field _ 72307 _ f . field _ 72448 _ b - p _ 187102 _ 2 _ . field _ 70163 _ u , p _ 187102 _ 3 _ . field _ 72307 _ f . field _ 72449 _ c - p _ 187102 _ 2 _ . field _ 70161 _ v ) ; <nl> this . field _ 78774 _ b . func _ 147297 _ a ( new CPacketUseEntity ( p _ 187102 _ 2 _ , p _ 187102 _ 4 _ , vec3d ) ) ; <nl> - + if ( net . minecraftforge . common . ForgeHooks . onInteractEntityAt ( p _ 187102 _ 1 _ , p _ 187102 _ 2 _ , p _ 187102 _ 3 _ , p _ 187102 _ 4 _ ) ) return EnumActionResult . PASS ; <nl> + + if ( this . field _ 78779 _ k = = GameType . SPECTATOR ) return EnumActionResult . PASS ; / / don ' t fire for spectators to match non - specific EntityInteract <nl> + + EnumActionResult cancelResult = net . minecraftforge . common . ForgeHooks . onInteractEntityAtAction ( p _ 187102 _ 1 _ , p _ 187102 _ 2 _ , p _ 187102 _ 3 _ , p _ 187102 _ 4 _ ) ; <nl> + + if ( cancelResult ! = null ) return cancelResult ; <nl> return this . field _ 78779 _ k = = GameType . SPECTATOR ? EnumActionResult . PASS : p _ 187102 _ 2 _ . func _ 184199 _ a ( p _ 187102 _ 1 _ , vec3d , p _ 187102 _ 4 _ ) ; <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> index b8d6b4a . . 1d0f089 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> @ @ - 217 , 15 + 217 , 16 @ @ <nl> p _ 70665 _ 2 _ = this . func _ 70672 _ c ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; <nl> float f = p _ 70665 _ 2 _ ; <nl> p _ 70665 _ 2 _ = Math . max ( p _ 70665 _ 2 _ - this . func _ 110139 _ bj ( ) , 0 . 0F ) ; <nl> - @ @ - 1111 , 6 + 1183 , 7 @ @ <nl> + @ @ - 1111 , 6 + 1183 , 8 @ @ <nl> } <nl> else <nl> { <nl> - + if ( net . minecraftforge . common . ForgeHooks . onInteractEntity ( this , p _ 190775 _ 1 _ , p _ 190775 _ 2 _ ) ) return EnumActionResult . PASS ; <nl> + + EnumActionResult cancelResult = net . minecraftforge . common . ForgeHooks . onInteractEntityAction ( this , p _ 190775 _ 1 _ , p _ 190775 _ 2 _ ) ; <nl> + + if ( cancelResult ! = null ) return cancelResult ; <nl> ItemStack itemstack = this . func _ 184586 _ b ( p _ 190775 _ 2 _ ) ; <nl> ItemStack itemstack1 = itemstack . func _ 190926 _ b ( ) ? ItemStack . field _ 190927 _ a : itemstack . func _ 77946 _ l ( ) ; <nl> <nl> - @ @ - 1120 , 7 + 1193 , 10 @ @ <nl> + @ @ - 1120 , 7 + 1194 , 10 @ @ <nl> { <nl> itemstack . func _ 190920 _ e ( itemstack1 . func _ 190916 _ E ( ) ) ; <nl> } <nl> @ @ - 237 , 7 + 238 , 7 @ @ <nl> return EnumActionResult . SUCCESS ; <nl> } <nl> else <nl> - @ @ - 1136 , 6 + 1212 , 7 @ @ <nl> + @ @ - 1136 , 6 + 1213 , 7 @ @ <nl> { <nl> if ( itemstack . func _ 190926 _ b ( ) & & ! this . field _ 71075 _ bZ . field _ 75098 _ d ) <nl> { <nl> @ @ - 245 , 7 + 246 , 7 @ @ <nl> this . func _ 184611 _ a ( p _ 190775 _ 2 _ , ItemStack . field _ 190927 _ a ) ; <nl> } <nl> <nl> - @ @ - 1161 , 6 + 1238 , 7 @ @ <nl> + @ @ - 1161 , 6 + 1239 , 7 @ @ <nl> <nl> public void func _ 71059 _ n ( Entity p _ 71059 _ 1 _ ) <nl> { <nl> @ @ - 253 , 7 + 254 , 7 @ @ <nl> if ( p _ 71059 _ 1 _ . func _ 70075 _ an ( ) ) <nl> { <nl> if ( ! p _ 71059 _ 1 _ . func _ 85031 _ j ( this ) ) <nl> - @ @ - 1333 , 11 + 1411 , 13 @ @ <nl> + @ @ - 1333 , 11 + 1412 , 13 @ @ <nl> <nl> if ( ! itemstack1 . func _ 190926 _ b ( ) & & entity instanceof EntityLivingBase ) <nl> { <nl> @ @ - 267 , 7 + 268 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 1443 , 6 + 1523 , 8 @ @ <nl> + @ @ - 1443 , 6 + 1524 , 8 @ @ <nl> <nl> public EntityPlayer . SleepResult func _ 180469 _ a ( BlockPos p _ 180469 _ 1 _ ) <nl> { <nl> @ @ - 276 , 7 + 277 , 7 @ @ <nl> EnumFacing enumfacing = ( EnumFacing ) this . field _ 70170 _ p . func _ 180495 _ p ( p _ 180469 _ 1 _ ) . func _ 177229 _ b ( BlockHorizontal . field _ 185512 _ D ) ; <nl> <nl> if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) <nl> - @ @ - 1484 , 8 + 1566 , 9 @ @ <nl> + @ @ - 1484 , 8 + 1567 , 9 @ @ <nl> <nl> this . func _ 70105 _ a ( 0 . 2F , 0 . 2F ) ; <nl> <nl> @ @ - 288 , 7 + 289 , 7 @ @ <nl> float f1 = 0 . 5F + ( float ) enumfacing . func _ 82601 _ c ( ) * 0 . 4F ; <nl> float f = 0 . 5F + ( float ) enumfacing . func _ 82599 _ e ( ) * 0 . 4F ; <nl> this . func _ 175139 _ a ( enumfacing ) ; <nl> - @ @ - 1532 , 13 + 1615 , 14 @ @ <nl> + @ @ - 1532 , 13 + 1616 , 14 @ @ <nl> <nl> public void func _ 70999 _ a ( boolean p _ 70999 _ 1 _ , boolean p _ 70999 _ 2 _ , boolean p _ 70999 _ 3 _ ) <nl> { <nl> @ @ - 306 , 7 + 307 , 7 @ @ <nl> <nl> if ( blockpos = = null ) <nl> { <nl> - @ @ - 1547 , 6 + 1631 , 10 @ @ <nl> + @ @ - 1547 , 6 + 1632 , 10 @ @ <nl> <nl> this . func _ 70107 _ b ( ( double ) ( ( float ) blockpos . func _ 177958 _ n ( ) + 0 . 5F ) , ( double ) ( ( float ) blockpos . func _ 177956 _ o ( ) + 0 . 1F ) , ( double ) ( ( float ) blockpos . func _ 177952 _ p ( ) + 0 . 5F ) ) ; <nl> } <nl> @ @ - 317 , 7 + 318 , 7 @ @ <nl> <nl> this . field _ 71083 _ bS = false ; <nl> <nl> - @ @ - 1565 , 15 + 1653 , 16 @ @ <nl> + @ @ - 1565 , 15 + 1654 , 16 @ @ <nl> <nl> private boolean func _ 175143 _ p ( ) <nl> { <nl> @ @ - 337 , 7 + 338 , 7 @ @ <nl> { <nl> if ( ! p _ 180467 _ 2 _ ) <nl> { <nl> - @ @ - 1588 , 16 + 1677 , 17 @ @ <nl> + @ @ - 1588 , 16 + 1678 , 17 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 358 , 7 + 359 , 7 @ @ <nl> <nl> switch ( enumfacing ) <nl> { <nl> - @ @ - 1637 , 16 + 1727 , 24 @ @ <nl> + @ @ - 1637 , 16 + 1728 , 24 @ @ <nl> <nl> public BlockPos func _ 180470 _ cg ( ) <nl> { <nl> @ @ - 385 , 7 + 386 , 7 @ @ <nl> if ( p _ 180473 _ 1 _ ! = null ) <nl> { <nl> this . field _ 71077 _ c = p _ 180473 _ 1 _ ; <nl> - @ @ - 1841 , 6 + 1939 , 10 @ @ <nl> + @ @ - 1841 , 6 + 1940 , 10 @ @ <nl> <nl> super . func _ 180430 _ e ( p _ 180430 _ 1 _ , p _ 180430 _ 2 _ ) ; <nl> } <nl> @ @ - 396 , 7 + 397 , 7 @ @ <nl> } <nl> <nl> protected void func _ 71061 _ d _ ( ) <nl> - @ @ - 2041 , 6 + 2143 , 18 @ @ <nl> + @ @ - 2041 , 6 + 2144 , 18 @ @ <nl> this . field _ 175152 _ f = p _ 71049 _ 1 _ . field _ 175152 _ f ; <nl> this . field _ 71078 _ a = p _ 71049 _ 1 _ . field _ 71078 _ a ; <nl> this . func _ 184212 _ Q ( ) . func _ 187227 _ b ( field _ 184827 _ bp , p _ 71049 _ 1 _ . func _ 184212 _ Q ( ) . func _ 187225 _ a ( field _ 184827 _ bp ) ) ; <nl> @ @ - 415 , 7 + 416 , 7 @ @ <nl> } <nl> <nl> protected boolean func _ 70041 _ e _ ( ) <nl> - @ @ - 2145 , 7 + 2259 , 10 @ @ <nl> + @ @ - 2145 , 7 + 2260 , 10 @ @ <nl> <nl> public ITextComponent func _ 145748 _ c _ ( ) <nl> { <nl> @ @ - 427 , 7 + 428 , 7 @ @ <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 150241 _ a ( new ClickEvent ( ClickEvent . Action . SUGGEST _ COMMAND , " / msg " + this . func _ 70005 _ c _ ( ) + " " ) ) ; <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 150209 _ a ( this . func _ 174823 _ aP ( ) ) ; <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 179989 _ a ( this . func _ 70005 _ c _ ( ) ) ; <nl> - @ @ - 2154 , 7 + 2271 , 7 @ @ <nl> + @ @ - 2154 , 7 + 2272 , 7 @ @ <nl> <nl> public float func _ 70047 _ e ( ) <nl> { <nl> @ @ - 436 , 7 + 437 , 7 @ @ <nl> <nl> if ( this . func _ 70608 _ bn ( ) ) <nl> { <nl> - @ @ - 2370 , 6 + 2487 , 168 @ @ <nl> + @ @ - 2370 , 6 + 2488 , 168 @ @ <nl> return this . field _ 71075 _ bZ . field _ 75098 _ d & & this . func _ 70003 _ b ( 2 , " " ) ; <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch b / patches / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch <nl> index 715e35d . . 77d87e9 100644 <nl> - - - a / patches / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch <nl> @ @ - 38 , 7 + 38 , 7 @ @ <nl> else if ( p _ 147340 _ 1 _ . func _ 149565 _ c ( ) = = CPacketUseEntity . Action . INTERACT _ AT ) <nl> { <nl> EnumHand enumhand1 = p _ 147340 _ 1 _ . func _ 186994 _ b ( ) ; <nl> - + if ( net . minecraftforge . common . ForgeHooks . onInteractEntityAt ( field _ 147369 _ b , entity , p _ 147340 _ 1 _ . func _ 179712 _ b ( ) , enumhand1 ) ) return ; <nl> + + if ( net . minecraftforge . common . ForgeHooks . onInteractEntityAtAction ( field _ 147369 _ b , entity , p _ 147340 _ 1 _ . func _ 179712 _ b ( ) , enumhand1 ) ! = null ) return ; <nl> entity . func _ 184199 _ a ( this . field _ 147369 _ b , p _ 147340 _ 1 _ . func _ 179712 _ b ( ) , enumhand1 ) ; <nl> } <nl> else if ( p _ 147340 _ 1 _ . func _ 149565 _ c ( ) = = CPacketUseEntity . Action . ATTACK ) <nl> diff - - git a / patches / minecraft / net / minecraft / server / management / PlayerInteractionManager . java . patch b / patches / minecraft / net / minecraft / server / management / PlayerInteractionManager . java . patch <nl> index d72c68a . . df28ae3 100644 <nl> - - - a / patches / minecraft / net / minecraft / server / management / PlayerInteractionManager . java . patch <nl> + + + b / patches / minecraft / net / minecraft / server / management / PlayerInteractionManager . java . patch <nl> @ @ - 199 , 18 + 199 , 19 @ @ <nl> return flag1 ; <nl> } <nl> } <nl> - @ @ - 330 , 8 + 352 , 10 @ @ <nl> + @ @ - 330 , 8 + 352 , 11 @ @ <nl> } <nl> else <nl> { <nl> - + if ( net . minecraftforge . common . ForgeHooks . onItemRightClick ( p _ 187250 _ 1 _ , p _ 187250 _ 4 _ ) ) return net . minecraft . util . EnumActionResult . PASS ; <nl> + + EnumActionResult cancelResult = net . minecraftforge . common . ForgeHooks . onItemRightClickAction ( p _ 187250 _ 1 _ , p _ 187250 _ 4 _ ) ; <nl> + + if ( cancelResult ! = null ) return cancelResult ; <nl> int i = p _ 187250 _ 3 _ . func _ 190916 _ E ( ) ; <nl> int j = p _ 187250 _ 3 _ . func _ 77960 _ j ( ) ; <nl> + ItemStack copyBeforeUse = p _ 187250 _ 3 _ . func _ 77946 _ l ( ) ; <nl> ActionResult < ItemStack > actionresult = p _ 187250 _ 3 _ . func _ 77957 _ a ( p _ 187250 _ 2 _ , p _ 187250 _ 1 _ , p _ 187250 _ 4 _ ) ; <nl> ItemStack itemstack = ( ItemStack ) actionresult . func _ 188398 _ b ( ) ; <nl> <nl> - @ @ - 360 , 6 + 384 , 7 @ @ <nl> + @ @ - 360 , 6 + 385 , 7 @ @ <nl> if ( itemstack . func _ 190926 _ b ( ) ) <nl> { <nl> p _ 187250 _ 1 _ . func _ 184611 _ a ( p _ 187250 _ 4 _ , ItemStack . field _ 190927 _ a ) ; <nl> @ @ - 218 , 14 + 219 , 14 @ @ <nl> } <nl> <nl> if ( ! p _ 187250 _ 1 _ . func _ 184587 _ cr ( ) ) <nl> - @ @ - 404 , 13 + 429 , 23 @ @ <nl> + @ @ - 404 , 13 + 430 , 23 @ @ <nl> } <nl> else <nl> { <nl> - if ( ! p _ 187251 _ 1 _ . func _ 70093 _ af ( ) | | p _ 187251 _ 1 _ . func _ 184614 _ ca ( ) . func _ 190926 _ b ( ) & & p _ 187251 _ 1 _ . func _ 184592 _ cb ( ) . func _ 190926 _ b ( ) ) <nl> + net . minecraftforge . event . entity . player . PlayerInteractEvent . RightClickBlock event = net . minecraftforge . common . ForgeHooks <nl> + . onRightClickBlock ( p _ 187251 _ 1 _ , p _ 187251 _ 4 _ , p _ 187251 _ 5 _ , p _ 187251 _ 6 _ , net . minecraftforge . common . ForgeHooks . rayTraceEyeHitVec ( p _ 187251 _ 1 _ , getBlockReachDistance ( ) + 1 ) ) ; <nl> - + if ( event . isCanceled ( ) ) return EnumActionResult . PASS ; <nl> + + if ( event . isCanceled ( ) ) return event . getCancellationResult ( ) ; <nl> + <nl> + EnumActionResult ret = p _ 187251 _ 3 _ . onItemUseFirst ( p _ 187251 _ 1 _ , p _ 187251 _ 2 _ , p _ 187251 _ 5 _ , p _ 187251 _ 4 _ , p _ 187251 _ 6 _ , p _ 187251 _ 7 _ , p _ 187251 _ 8 _ , p _ 187251 _ 9 _ ) ; <nl> + if ( ret ! = EnumActionResult . PASS ) return ret ; <nl> @ @ - 245 , 7 + 246 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 438 , 14 + 473 , 20 @ @ <nl> + @ @ - 438 , 14 + 474 , 20 @ @ <nl> { <nl> int j = p _ 187251 _ 3 _ . func _ 77960 _ j ( ) ; <nl> int i = p _ 187251 _ 3 _ . func _ 190916 _ E ( ) ; <nl> @ @ - 266 , 7 + 267 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 455 , 4 + 496 , 13 @ @ <nl> + @ @ - 455 , 4 + 497 , 13 @ @ <nl> { <nl> this . field _ 73092 _ a = p _ 73080 _ 1 _ ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index ad4cbcc . . 809aa56 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 1035 , 25 + 1035 , 56 @ @ public class ForgeHooks <nl> return git = = null ? null : git . hitVec ; <nl> } <nl> <nl> + / / TODO 1 . 12 remove these three <nl> + @ Deprecated <nl> public static boolean onInteractEntityAt ( EntityPlayer player , Entity entity , RayTraceResult ray , EnumHand hand ) <nl> { <nl> - Vec3d vec3d = new Vec3d ( ray . hitVec . xCoord - entity . posX , ray . hitVec . yCoord - entity . posY , ray . hitVec . zCoord - entity . posZ ) ; <nl> - return onInteractEntityAt ( player , entity , vec3d , hand ) ; <nl> + return onInteractEntityAtAction ( player , entity , ray , hand ) ! = null ; <nl> } <nl> <nl> + @ Deprecated <nl> public static boolean onInteractEntityAt ( EntityPlayer player , Entity entity , Vec3d vec3d , EnumHand hand ) <nl> { <nl> - return MinecraftForge . EVENT _ BUS . post ( new PlayerInteractEvent . EntityInteractSpecific ( player , hand , entity , vec3d ) ) ; <nl> + return onInteractEntityAtAction ( player , entity , vec3d , hand ) ! = null ; <nl> } <nl> <nl> + @ Deprecated <nl> public static boolean onInteractEntity ( EntityPlayer player , Entity entity , EnumHand hand ) <nl> { <nl> - return MinecraftForge . EVENT _ BUS . post ( new PlayerInteractEvent . EntityInteract ( player , hand , entity ) ) ; <nl> + return onInteractEntityAction ( player , entity , hand ) ! = null ; <nl> + } <nl> + <nl> + public static EnumActionResult onInteractEntityAtAction ( EntityPlayer player , Entity entity , RayTraceResult ray , EnumHand hand ) <nl> + { <nl> + Vec3d vec3d = new Vec3d ( ray . hitVec . xCoord - entity . posX , ray . hitVec . yCoord - entity . posY , ray . hitVec . zCoord - entity . posZ ) ; <nl> + return onInteractEntityAtAction ( player , entity , vec3d , hand ) ; <nl> + } <nl> + <nl> + public static EnumActionResult onInteractEntityAtAction ( EntityPlayer player , Entity entity , Vec3d vec3d , EnumHand hand ) <nl> + { <nl> + PlayerInteractEvent . EntityInteractSpecific evt = new PlayerInteractEvent . EntityInteractSpecific ( player , hand , entity , vec3d ) ; <nl> + MinecraftForge . EVENT _ BUS . post ( evt ) ; <nl> + return evt . isCanceled ( ) ? evt . getCancellationResult ( ) : null ; <nl> + } <nl> + <nl> + public static EnumActionResult onInteractEntityAction ( EntityPlayer player , Entity entity , EnumHand hand ) <nl> + { <nl> + PlayerInteractEvent . EntityInteract evt = new PlayerInteractEvent . EntityInteract ( player , hand , entity ) ; <nl> + MinecraftForge . EVENT _ BUS . post ( evt ) ; <nl> + return evt . isCanceled ( ) ? evt . getCancellationResult ( ) : null ; <nl> } <nl> <nl> + @ Deprecated / / TODO 1 . 12 remove <nl> public static boolean onItemRightClick ( EntityPlayer player , EnumHand hand ) <nl> { <nl> - return MinecraftForge . EVENT _ BUS . post ( new PlayerInteractEvent . RightClickItem ( player , hand ) ) ; <nl> + return onItemRightClickAction ( player , hand ) ! = null ; <nl> + } <nl> + <nl> + public static EnumActionResult onItemRightClickAction ( EntityPlayer player , EnumHand hand ) <nl> + { <nl> + PlayerInteractEvent . RightClickItem evt = new PlayerInteractEvent . RightClickItem ( player , hand ) ; <nl> + MinecraftForge . EVENT _ BUS . post ( evt ) ; <nl> + return evt . isCanceled ( ) ? evt . getCancellationResult ( ) : null ; <nl> } <nl> <nl> public static PlayerInteractEvent . LeftClickBlock onLeftClickBlock ( EntityPlayer player , BlockPos pos , EnumFacing face , Vec3d hitVec ) <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / player / PlayerInteractEvent . java b / src / main / java / net / minecraftforge / event / entity / player / PlayerInteractEvent . java <nl> index 4192786 . . fb256b9 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / entity / player / PlayerInteractEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / entity / player / PlayerInteractEvent . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ import com . google . common . base . Preconditions ; <nl> import net . minecraft . entity . Entity ; <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . item . ItemStack ; <nl> + import net . minecraft . util . EnumActionResult ; <nl> import net . minecraft . util . EnumFacing ; <nl> import net . minecraft . util . EnumHand ; <nl> import net . minecraft . util . math . BlockPos ; <nl> @ @ - 49 , 6 + 50 , 7 @ @ public class PlayerInteractEvent extends PlayerEvent <nl> private final BlockPos pos ; <nl> @ Nullable <nl> private final EnumFacing face ; <nl> + private EnumActionResult cancellationResult = EnumActionResult . PASS ; <nl> <nl> private PlayerInteractEvent ( EntityPlayer player , EnumHand hand , BlockPos pos , @ Nullable EnumFacing face ) <nl> { <nl> @ @ - 63 , 11 + 65 , 9 @ @ public class PlayerInteractEvent extends PlayerEvent <nl> * <nl> * " Interact at " is an interact where the local vector ( which part of the entity you clicked ) is known . <nl> * The state of this event affects whether { @ link Entity # applyPlayerInteraction } is called . <nl> - * If { @ link Entity # applyPlayerInteraction } returns { @ link net . minecraft . util . EnumActionResult # SUCCESS } , then processing ends . <nl> - * Otherwise processing will continue to { @ link EntityInteract } <nl> * <nl> - * Canceling the event clientside will cause processing to continue to { @ link EntityInteract } , <nl> - * while canceling serverside will simply do no further processing . <nl> + * Let result be the return value of { @ link Entity # applyPlayerInteraction } , or { @ link # cancellationResult } if the event is cancelled . <nl> + * If we are on the client and result is not { @ link EnumActionResult # SUCCESS } , the client will then try { @ link EntityInteract } . <nl> * / <nl> @ Cancelable <nl> public static class EntityInteractSpecific extends PlayerInteractEvent <nl> @ @ - 103 , 14 + 103 , 12 @ @ public class PlayerInteractEvent extends PlayerEvent <nl> * This event is fired on both sides when the player right clicks an entity . <nl> * It is responsible for all general entity interactions . <nl> * <nl> - * This event is fired completely independently of the above { @ link EntityInteractSpecific } , except for the case <nl> - * where the above call to { @ link Entity # applyPlayerInteraction } returns { @ link net . minecraft . util . EnumActionResult # SUCCESS } . <nl> - * In that case , general entity interactions , and hence this event , will not be called . See the above javadoc for more details . <nl> - * <nl> + * This event is fired only if the result of the above { @ link EntityInteractSpecific } is not { @ link EnumActionResult # SUCCESS } . <nl> * This event ' s state affects whether { @ link Entity # processInitialInteract } and { @ link net . minecraft . item . Item # itemInteractionForEntity } are called . <nl> * <nl> - * Canceling the event clientside will cause processing to continue to { @ link RightClickItem } , <nl> - * while canceling serverside will simply do no further processing . <nl> + * Let result be { @ link EnumActionResult # SUCCESS } if { @ link Entity # processInitialInteract } or { @ link net . minecraft . item . Item # itemInteractionForEntity } return true , <nl> + * or { @ link # cancellationResult } if the event is cancelled . <nl> + * If we are on the client and result is not { @ link EnumActionResult # SUCCESS } , the client will then try { @ link RightClickItem } . <nl> * / <nl> @ Cancelable <nl> public static class EntityInteract extends PlayerInteractEvent <nl> @ @ - 133 , 7 + 131 , 11 @ @ public class PlayerInteractEvent extends PlayerEvent <nl> * This event is fired on both sides whenever the player right clicks while targeting a block . <nl> * This event controls which of { @ link net . minecraft . block . Block # onBlockActivated } and / or { @ link net . minecraft . item . Item # onItemUse } <nl> * will be called after { @ link net . minecraft . item . Item # onItemUseFirst } is called . <nl> - * Canceling the event will cause none of the above three to be called . <nl> + * Canceling the event will cause none of the above three to be called <nl> + * <nl> + * Let result be a return value of the above three methods , or { @ link # cancellationResult } if the event is cancelled . <nl> + * If we are on the client and result is not { @ link EnumActionResult # SUCCESS } , the client will then try { @ link RightClickItem } . <nl> + * <nl> * There are various results to this event , see the getters below . <nl> * Note that handling things differently on the client vs server may cause desynchronizations ! <nl> * / <nl> @ @ - 207 , 9 + 209 , 10 @ @ public class PlayerInteractEvent extends PlayerEvent <nl> <nl> / * * <nl> * This event is fired on both sides before the player triggers { @ link net . minecraft . item . Item # onItemRightClick } . <nl> - * Note that this is NOT fired if the player is targeting a block . For that case , see { @ link RightClickBlock } . <nl> - * Canceling the event clientside causes processing to continue to the other hands , <nl> - * while canceling serverside will simply do no further processing . <nl> + * Note that this is NOT fired if the player is targeting a block { @ link RightClickBlock } or entity { @ link EntityInteract } { @ link EntityInteractSpecific } . <nl> + * <nl> + * Let result be the return value of { @ link net . minecraft . item . Item # onItemRightClick } , or { @ link # cancellationResult } if the event is cancelled . <nl> + * If we are on the client and result is not { @ link EnumActionResult # SUCCESS } , the client will then continue to other hands . <nl> * / <nl> @ Cancelable <nl> public static class RightClickItem extends PlayerInteractEvent <nl> @ @ - 381 , 4 + 384 , 24 @ @ public class PlayerInteractEvent extends PlayerEvent <nl> return getWorld ( ) . isRemote ? Side . CLIENT : Side . SERVER ; <nl> } <nl> <nl> + / * * <nl> + * @ return The EnumActionResult that will be returned to vanilla if the event is cancelled , instead of calling the relevant <nl> + * method of the event . By default , this is { @ link EnumActionResult # PASS } , meaning cancelled events will cause <nl> + * the client to keep trying more interactions until something works . <nl> + * / <nl> + public EnumActionResult getCancellationResult ( ) <nl> + { <nl> + return cancellationResult ; <nl> + } <nl> + <nl> + / * * <nl> + * Set the EnumActionResult that will be returned to vanilla if the event is cancelled , instead of calling the relevant <nl> + * method of the event . <nl> + * Note that this only has an effect on { @ link RightClickBlock } , { @ link RightClickItem } , { @ link EntityInteract } , and { @ link EntityInteractSpecific } . <nl> + * / <nl> + public void setCancellationResult ( EnumActionResult result ) <nl> + { <nl> + this . cancellationResult = result ; <nl> + } <nl> + <nl> } <nl> diff - - git a / src / test / java / net / minecraftforge / test / PlayerInteractEventTest . java b / src / test / java / net / minecraftforge / test / PlayerInteractEventTest . java <nl> index 116186b . . 4dea7c2 100644 <nl> - - - a / src / test / java / net / minecraftforge / test / PlayerInteractEventTest . java <nl> + + + b / src / test / java / net / minecraftforge / test / PlayerInteractEventTest . java <nl> @ @ - 5 , 9 + 5 , 11 @ @ import net . minecraft . entity . monster . EntityCreeper ; <nl> import net . minecraft . entity . monster . EntitySkeleton ; <nl> import net . minecraft . entity . passive . EntityHorse ; <nl> import net . minecraft . init . Items ; <nl> + import net . minecraft . item . ItemBlock ; <nl> import net . minecraft . tileentity . TileEntity ; <nl> import net . minecraft . tileentity . TileEntityChest ; <nl> import net . minecraft . tileentity . TileEntityDropper ; <nl> + import net . minecraft . util . EnumActionResult ; <nl> import net . minecraft . util . EnumHand ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . event . entity . player . PlayerInteractEvent ; <nl> @ @ - 49 , 7 + 51 , 7 @ @ public class PlayerInteractEventTest <nl> if ( ! ENABLE ) return ; <nl> logger . info ( " HIT VEC : { } " , evt . getHitVec ( ) ) ; <nl> <nl> - if ( evt . getItemStack ( ) ! = null ) <nl> + if ( ! evt . getItemStack ( ) . isEmpty ( ) ) <nl> { <nl> if ( evt . getItemStack ( ) . getItem ( ) = = Items . GOLDEN _ PICKAXE ) <nl> evt . setCanceled ( true ) ; / / Redstone should not activate and pick should not be able to dig anything <nl> @ @ - 89 , 22 + 91 , 34 @ @ public class PlayerInteractEventTest <nl> / / Case : Flint and steel in main hand on top of a TE will light a fire , not open the TE . <nl> / / Note that if you do this on a chest , the f + s will fail , but then your off hand will open the chest <nl> / / If you dual wield flints and steels and right click a chest nothing should happen <nl> - if ( evt . getItemStack ( ) ! = null & & evt . getItemStack ( ) . getItem ( ) = = Items . FLINT _ AND _ STEEL ) <nl> + if ( ! evt . getItemStack ( ) . isEmpty ( ) & & evt . getItemStack ( ) . getItem ( ) = = Items . FLINT _ AND _ STEEL ) <nl> evt . setUseBlock ( Event . Result . DENY ) ; <nl> <nl> / / Case : Painting in main hand <nl> / / Opening a TE will also place a painting on the TE if possible <nl> - if ( evt . getHand ( ) = = EnumHand . MAIN _ HAND & & evt . getItemStack ( ) ! = null & & evt . getItemStack ( ) . getItem ( ) = = Items . PAINTING ) { <nl> + if ( evt . getHand ( ) = = EnumHand . MAIN _ HAND & & ! evt . getItemStack ( ) . isEmpty ( ) & & evt . getItemStack ( ) . getItem ( ) = = Items . PAINTING ) { <nl> evt . setUseItem ( Event . Result . ALLOW ) ; <nl> } <nl> <nl> / / Spawn egg in main hand , block in offhand - > block should be placed <nl> - / / Sword in main hand , spawn egg in offhand - > nothing should happen <nl> - if ( evt . getItemStack ( ) ! = null & & evt . getItemStack ( ) . getItem ( ) = = Items . SPAWN _ EGG ) { <nl> + if ( ! evt . getItemStack ( ) . isEmpty ( ) <nl> + & & evt . getItemStack ( ) . getItem ( ) = = Items . SPAWN _ EGG <nl> + & & evt . getHand ( ) = = EnumHand . MAIN _ HAND <nl> + & & ! evt . getEntityPlayer ( ) . getHeldItemOffhand ( ) . isEmpty ( ) <nl> + & & evt . getEntityPlayer ( ) . getHeldItemOffhand ( ) . getItem ( ) instanceof ItemBlock ) { <nl> evt . setCanceled ( true ) ; <nl> } <nl> <nl> - <nl> + / / Spawn egg in main hand , potion in offhand - > potion should NOT be thrown <nl> + if ( ! evt . getItemStack ( ) . isEmpty ( ) <nl> + & & evt . getItemStack ( ) . getItem ( ) = = Items . SPAWN _ EGG <nl> + & & evt . getHand ( ) = = EnumHand . MAIN _ HAND <nl> + & & ! evt . getEntityPlayer ( ) . getHeldItemOffhand ( ) . isEmpty ( ) <nl> + & & evt . getEntityPlayer ( ) . getHeldItemOffhand ( ) . getItem ( ) = = Items . SPLASH _ POTION ) { <nl> + evt . setCanceled ( true ) ; <nl> + / / Fake spawn egg success so splash potion does not trigger <nl> + evt . setCancellationResult ( EnumActionResult . SUCCESS ) ; <nl> + } <nl> } <nl> <nl> @ SubscribeEvent <nl> @ @ - 112 , 12 + 126 , 24 @ @ public class PlayerInteractEventTest <nl> { <nl> if ( ! ENABLE ) return ; <nl> <nl> - / / Use survival mode <nl> + / / Case : Ender pearl in main hand , block in offhand - > Block is NOT placed <nl> + if ( ! evt . getItemStack ( ) . isEmpty ( ) <nl> + & & evt . getItemStack ( ) . getItem ( ) = = Items . ENDER _ PEARL <nl> + & & evt . getHand ( ) = = EnumHand . MAIN _ HAND <nl> + & & ! evt . getEntityPlayer ( ) . getHeldItemOffhand ( ) . isEmpty ( ) <nl> + & & evt . getEntityPlayer ( ) . getHeldItemOffhand ( ) . getItem ( ) instanceof ItemBlock ) <nl> + { <nl> + evt . setCanceled ( true ) ; <nl> + evt . setCancellationResult ( EnumActionResult . SUCCESS ) ; / / We fake success on the ender pearl so block is not placed <nl> + return ; <nl> + } <nl> + <nl> / / Case : Ender pearl in main hand , bow in offhand with arrows in inv - > Bow should trigger <nl> / / Case : Sword in main hand , ender pearl in offhand - > Nothing should happen <nl> - <nl> - if ( evt . getItemStack ( ) ! = null & & evt . getItemStack ( ) . getItem ( ) = = Items . ENDER _ PEARL ) <nl> + if ( ! evt . getItemStack ( ) . isEmpty ( ) & & evt . getItemStack ( ) . getItem ( ) = = Items . ENDER _ PEARL ) <nl> + { <nl> evt . setCanceled ( true ) ; <nl> + } <nl> } <nl> <nl> @ SubscribeEvent <nl> @ @ - 126 , 17 + 152 , 27 @ @ public class PlayerInteractEventTest <nl> if ( ! ENABLE ) return ; <nl> logger . info ( " LOCAL POS : { } " , evt . getLocalPos ( ) ) ; <nl> <nl> - if ( evt . getItemStack ( ) ! = null <nl> + if ( ! evt . getItemStack ( ) . isEmpty ( ) <nl> & & evt . getTarget ( ) instanceof EntityArmorStand <nl> & & evt . getItemStack ( ) . getItem ( ) = = Items . IRON _ HELMET ) <nl> evt . setCanceled ( true ) ; / / Should not be able to place iron helmet onto armor stand ( you will put it on instead ) <nl> <nl> - if ( evt . getWorld ( ) . isRemote <nl> + if ( ! evt . getItemStack ( ) . isEmpty ( ) <nl> + & & evt . getTarget ( ) instanceof EntityArmorStand <nl> + & & evt . getItemStack ( ) . getItem ( ) = = Items . GOLDEN _ HELMET ) <nl> + { <nl> + evt . setCanceled ( true ) ; <nl> + evt . setCancellationResult ( EnumActionResult . SUCCESS ) ; <nl> + / / Should not be able to place golden helmet onto armor stand <nl> + / / However you will NOT put it on because we fake success on the armorstand . <nl> + } <nl> + <nl> + if ( ! evt . getWorld ( ) . isRemote <nl> & & evt . getTarget ( ) instanceof EntitySkeleton <nl> & & evt . getLocalPos ( ) . yCoord > evt . getTarget ( ) . height / 2 . 0 ) <nl> { <nl> / / If we right click the upper half of a skeleton it dies . <nl> - ( ( EntitySkeleton ) evt . getTarget ( ) ) . setDead ( ) ; <nl> + evt . getTarget ( ) . setDead ( ) ; <nl> evt . setCanceled ( true ) ; <nl> } <nl> } <nl> @ @ - 146 , 10 + 182 , 18 @ @ public class PlayerInteractEventTest <nl> { <nl> if ( ! ENABLE ) return ; <nl> <nl> - if ( evt . getItemStack ( ) ! = null & & ( evt . getTarget ( ) instanceof EntityHorse | | evt . getTarget ( ) instanceof EntityCreeper ) ) <nl> + if ( ! evt . getItemStack ( ) . isEmpty ( ) & & evt . getTarget ( ) instanceof EntityHorse ) { <nl> / / Should not be able to feed wild horses with golden apple ( you will start eating it in survival ) <nl> - / / Should not be able to ignite creeper with F + S <nl> - / / Applies to both hands <nl> - evt . setCanceled ( true ) ; <nl> + if ( evt . getItemStack ( ) . getItem ( ) = = Items . GOLDEN _ APPLE <nl> + & & evt . getItemStack ( ) . getItemDamage ( ) = = 0 ) <nl> + evt . setCanceled ( true ) ; <nl> + / / Should not be able to feed wild horses with notch apple but you will NOT eat it <nl> + if ( evt . getItemStack ( ) . getItem ( ) = = Items . GOLDEN _ APPLE <nl> + & & evt . getItemStack ( ) . getItemDamage ( ) = = 1 ) <nl> + { <nl> + evt . setCanceled ( true ) ; <nl> + evt . setCancellationResult ( EnumActionResult . SUCCESS ) ; <nl> + } <nl> + } <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> index 5637ab8 . . eaf179b 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> @ @ - 152 , 7 + 152 , 15 @ @ <nl> this . field _ 71100 _ bB . func _ 75112 _ a ( p _ 70037 _ 1 _ ) ; <nl> this . field _ 71075 _ bZ . func _ 75095 _ b ( p _ 70037 _ 1 _ ) ; <nl> <nl> - @ @ - 921 , 6 + 965 , 23 @ @ <nl> + @ @ - 903 , 6 + 947 , 7 @ @ <nl> + { <nl> + super . func _ 70014 _ b ( p _ 70014 _ 1 _ ) ; <nl> + p _ 70014 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 70014 _ 1 _ ) ; <nl> + p _ 70014 _ 1 _ . func _ 74782 _ a ( " Inventory " , this . field _ 71071 _ by . func _ 70442 _ a ( new NBTTagList ( ) ) ) ; <nl> + p _ 70014 _ 1 _ . func _ 74768 _ a ( " SelectedItemSlot " , this . field _ 71071 _ by . field _ 70461 _ c ) ; <nl> + p _ 70014 _ 1 _ . func _ 74757 _ a ( " Sleeping " , this . field _ 71083 _ bS ) ; <nl> + @ @ - 921 , 6 + 966 , 23 @ @ <nl> p _ 70014 _ 1 _ . func _ 74757 _ a ( " SpawnForced " , this . field _ 82248 _ d ) ; <nl> } <nl> <nl> @ @ - 176 , 7 + 184 , 7 @ @ <nl> this . field _ 71100 _ bB . func _ 75117 _ b ( p _ 70014 _ 1 _ ) ; <nl> this . field _ 71075 _ bZ . func _ 75091 _ a ( p _ 70014 _ 1 _ ) ; <nl> p _ 70014 _ 1 _ . func _ 74782 _ a ( " EnderItems " , this . field _ 71078 _ a . func _ 70487 _ g ( ) ) ; <nl> - @ @ - 928 , 6 + 989 , 7 @ @ <nl> + @ @ - 928 , 6 + 990 , 7 @ @ <nl> <nl> public boolean func _ 70097 _ a ( DamageSource p _ 70097 _ 1 _ , float p _ 70097 _ 2 _ ) <nl> { <nl> @ @ - 184 , 7 + 192 , 7 @ @ <nl> if ( this . func _ 180431 _ b ( p _ 70097 _ 1 _ ) ) <nl> { <nl> return false ; <nl> - @ @ - 1006 , 6 + 1068 , 7 @ @ <nl> + @ @ - 1006 , 6 + 1069 , 7 @ @ <nl> if ( this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) <nl> { <nl> EnumHand enumhand = this . func _ 184600 _ cs ( ) ; <nl> @ @ - 192 , 7 + 200 , 7 @ @ <nl> <nl> if ( enumhand = = EnumHand . MAIN _ HAND ) <nl> { <nl> - @ @ - 1041 , 7 + 1104 , 10 @ @ <nl> + @ @ - 1041 , 7 + 1105 , 10 @ @ <nl> { <nl> if ( ! this . func _ 180431 _ b ( p _ 70665 _ 1 _ ) ) <nl> { <nl> @ @ - 204 , 7 + 212 , 7 @ @ <nl> p _ 70665 _ 2 _ = this . func _ 70672 _ c ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; <nl> float f = p _ 70665 _ 2 _ ; <nl> p _ 70665 _ 2 _ = Math . max ( p _ 70665 _ 2 _ - this . func _ 110139 _ bj ( ) , 0 . 0F ) ; <nl> - @ @ - 1111 , 6 + 1177 , 7 @ @ <nl> + @ @ - 1111 , 6 + 1178 , 7 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 212 , 7 + 220 , 7 @ @ <nl> ItemStack itemstack = this . func _ 184586 _ b ( p _ 190775 _ 2 _ ) ; <nl> ItemStack itemstack1 = itemstack . func _ 190926 _ b ( ) ? ItemStack . field _ 190927 _ a : itemstack . func _ 77946 _ l ( ) ; <nl> <nl> - @ @ - 1120 , 7 + 1187 , 10 @ @ <nl> + @ @ - 1120 , 7 + 1188 , 10 @ @ <nl> { <nl> itemstack . func _ 190920 _ e ( itemstack1 . func _ 190916 _ E ( ) ) ; <nl> } <nl> @ @ - 224 , 7 + 232 , 7 @ @ <nl> return EnumActionResult . SUCCESS ; <nl> } <nl> else <nl> - @ @ - 1136 , 6 + 1206 , 7 @ @ <nl> + @ @ - 1136 , 6 + 1207 , 7 @ @ <nl> { <nl> if ( itemstack . func _ 190926 _ b ( ) & & ! this . field _ 71075 _ bZ . field _ 75098 _ d ) <nl> { <nl> @ @ - 232 , 7 + 240 , 7 @ @ <nl> this . func _ 184611 _ a ( p _ 190775 _ 2 _ , ItemStack . field _ 190927 _ a ) ; <nl> } <nl> <nl> - @ @ - 1161 , 6 + 1232 , 7 @ @ <nl> + @ @ - 1161 , 6 + 1233 , 7 @ @ <nl> <nl> public void func _ 71059 _ n ( Entity p _ 71059 _ 1 _ ) <nl> { <nl> @ @ - 240 , 7 + 248 , 7 @ @ <nl> if ( p _ 71059 _ 1 _ . func _ 70075 _ an ( ) ) <nl> { <nl> if ( ! p _ 71059 _ 1 _ . func _ 85031 _ j ( this ) ) <nl> - @ @ - 1331 , 11 + 1403 , 13 @ @ <nl> + @ @ - 1331 , 11 + 1404 , 13 @ @ <nl> <nl> if ( ! itemstack1 . func _ 190926 _ b ( ) & & entity instanceof EntityLivingBase ) <nl> { <nl> @ @ - 254 , 7 + 262 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 1441 , 6 + 1515 , 8 @ @ <nl> + @ @ - 1441 , 6 + 1516 , 8 @ @ <nl> <nl> public EntityPlayer . SleepResult func _ 180469 _ a ( BlockPos p _ 180469 _ 1 _ ) <nl> { <nl> @ @ - 263 , 7 + 271 , 7 @ @ <nl> EnumFacing enumfacing = ( EnumFacing ) this . field _ 70170 _ p . func _ 180495 _ p ( p _ 180469 _ 1 _ ) . func _ 177229 _ b ( BlockHorizontal . field _ 185512 _ D ) ; <nl> <nl> if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) <nl> - @ @ - 1482 , 8 + 1558 , 9 @ @ <nl> + @ @ - 1482 , 8 + 1559 , 9 @ @ <nl> <nl> this . func _ 70105 _ a ( 0 . 2F , 0 . 2F ) ; <nl> <nl> @ @ - 275 , 7 + 283 , 7 @ @ <nl> float f1 = 0 . 5F + ( float ) enumfacing . func _ 82601 _ c ( ) * 0 . 4F ; <nl> float f = 0 . 5F + ( float ) enumfacing . func _ 82599 _ e ( ) * 0 . 4F ; <nl> this . func _ 175139 _ a ( enumfacing ) ; <nl> - @ @ - 1530 , 13 + 1607 , 14 @ @ <nl> + @ @ - 1530 , 13 + 1608 , 14 @ @ <nl> <nl> public void func _ 70999 _ a ( boolean p _ 70999 _ 1 _ , boolean p _ 70999 _ 2 _ , boolean p _ 70999 _ 3 _ ) <nl> { <nl> @ @ - 293 , 7 + 301 , 7 @ @ <nl> <nl> if ( blockpos = = null ) <nl> { <nl> - @ @ - 1545 , 6 + 1623 , 10 @ @ <nl> + @ @ - 1545 , 6 + 1624 , 10 @ @ <nl> <nl> this . func _ 70107 _ b ( ( double ) ( ( float ) blockpos . func _ 177958 _ n ( ) + 0 . 5F ) , ( double ) ( ( float ) blockpos . func _ 177956 _ o ( ) + 0 . 1F ) , ( double ) ( ( float ) blockpos . func _ 177952 _ p ( ) + 0 . 5F ) ) ; <nl> } <nl> @ @ - 304 , 7 + 312 , 7 @ @ <nl> <nl> this . field _ 71083 _ bS = false ; <nl> <nl> - @ @ - 1563 , 15 + 1645 , 16 @ @ <nl> + @ @ - 1563 , 15 + 1646 , 16 @ @ <nl> <nl> private boolean func _ 175143 _ p ( ) <nl> { <nl> @ @ - 324 , 7 + 332 , 7 @ @ <nl> { <nl> if ( ! p _ 180467 _ 2 _ ) <nl> { <nl> - @ @ - 1586 , 16 + 1669 , 17 @ @ <nl> + @ @ - 1586 , 16 + 1670 , 17 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 345 , 7 + 353 , 7 @ @ <nl> <nl> switch ( enumfacing ) <nl> { <nl> - @ @ - 1635 , 16 + 1719 , 24 @ @ <nl> + @ @ - 1635 , 16 + 1720 , 24 @ @ <nl> <nl> public BlockPos func _ 180470 _ cg ( ) <nl> { <nl> @ @ - 372 , 7 + 380 , 7 @ @ <nl> if ( p _ 180473 _ 1 _ ! = null ) <nl> { <nl> this . field _ 71077 _ c = p _ 180473 _ 1 _ ; <nl> - @ @ - 1839 , 6 + 1931 , 10 @ @ <nl> + @ @ - 1839 , 6 + 1932 , 10 @ @ <nl> <nl> super . func _ 180430 _ e ( p _ 180430 _ 1 _ , p _ 180430 _ 2 _ ) ; <nl> } <nl> @ @ - 383 , 7 + 391 , 7 @ @ <nl> } <nl> <nl> protected void func _ 71061 _ d _ ( ) <nl> - @ @ - 2039 , 6 + 2135 , 18 @ @ <nl> + @ @ - 2039 , 6 + 2136 , 18 @ @ <nl> this . field _ 175152 _ f = p _ 71049 _ 1 _ . field _ 175152 _ f ; <nl> this . field _ 71078 _ a = p _ 71049 _ 1 _ . field _ 71078 _ a ; <nl> this . func _ 184212 _ Q ( ) . func _ 187227 _ b ( field _ 184827 _ bp , p _ 71049 _ 1 _ . func _ 184212 _ Q ( ) . func _ 187225 _ a ( field _ 184827 _ bp ) ) ; <nl> @ @ - 402 , 7 + 410 , 7 @ @ <nl> } <nl> <nl> protected boolean func _ 70041 _ e _ ( ) <nl> - @ @ - 2137 , 7 + 2245 , 10 @ @ <nl> + @ @ - 2137 , 7 + 2246 , 10 @ @ <nl> <nl> public ITextComponent func _ 145748 _ c _ ( ) <nl> { <nl> @ @ - 414 , 7 + 422 , 7 @ @ <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 150241 _ a ( new ClickEvent ( ClickEvent . Action . SUGGEST _ COMMAND , " / msg " + this . func _ 70005 _ c _ ( ) + " " ) ) ; <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 150209 _ a ( this . func _ 174823 _ aP ( ) ) ; <nl> itextcomponent . func _ 150256 _ b ( ) . func _ 179989 _ a ( this . func _ 70005 _ c _ ( ) ) ; <nl> - @ @ - 2146 , 7 + 2257 , 7 @ @ <nl> + @ @ - 2146 , 7 + 2258 , 7 @ @ <nl> <nl> public float func _ 70047 _ e ( ) <nl> { <nl> @ @ - 423 , 7 + 431 , 7 @ @ <nl> <nl> if ( this . func _ 70608 _ bn ( ) ) <nl> { <nl> - @ @ - 2362 , 6 + 2473 , 162 @ @ <nl> + @ @ - 2362 , 6 + 2474 , 162 @ @ <nl> return this . field _ 71075 _ bZ . field _ 75098 _ d & & this . func _ 70003 _ b ( 2 , " " ) ; <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch b / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch <nl> new file mode 100644 <nl> index 0000000 . . ad8f719 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / util / datafix / DataFixesManager . java <nl> + + + + . . / src - work / minecraft / net / minecraft / util / datafix / DataFixesManager . java <nl> + @ @ - 158 , 6 + 158 , 7 @ @ <nl> + public static DataFixer func _ 188279 _ a ( ) <nl> + { <nl> + DataFixer datafixer = new DataFixer ( 819 ) ; <nl> + + datafixer = new net . minecraftforge . common . util . CompoundDataFixer ( datafixer ) ; <nl> + WorldInfo . func _ 189967 _ a ( datafixer ) ; <nl> + EntityPlayer . func _ 189806 _ a ( datafixer ) ; <nl> + AnvilChunkLoader . func _ 189889 _ a ( datafixer ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> index 5ac3cdd . . 22b5152 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> @ @ - 97 , 15 + 97 , 17 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 122 , 6 + 181 , 7 @ @ <nl> + @ @ - 121 , 7 + 180 , 9 @ @ <nl> + NBTTagCompound nbttagcompound1 = new NBTTagCompound ( ) ; <nl> nbttagcompound . func _ 74782 _ a ( " Level " , nbttagcompound1 ) ; <nl> nbttagcompound . func _ 74768 _ a ( " DataVersion " , 819 ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( nbttagcompound ) ; <nl> this . func _ 75820 _ a ( p _ 75816 _ 2 _ , p _ 75816 _ 1 _ , nbttagcompound1 ) ; <nl> + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . world . ChunkDataEvent . Save ( p _ 75816 _ 2 _ , nbttagcompound ) ) ; <nl> this . func _ 75824 _ a ( p _ 75816 _ 2 _ . func _ 76632 _ l ( ) , nbttagcompound ) ; <nl> } <nl> catch ( Exception exception ) <nl> - @ @ - 307 , 8 + 367 , 17 @ @ <nl> + @ @ - 307 , 8 + 368 , 17 @ @ <nl> <nl> if ( entity . func _ 70039 _ c ( nbttagcompound2 ) ) <nl> { <nl> @ @ - 123 , 7 + 125 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 318 , 8 + 387 , 17 @ @ <nl> + @ @ - 318 , 8 + 388 , 17 @ @ <nl> <nl> for ( TileEntity tileentity : p _ 75820 _ 1 _ . func _ 177434 _ r ( ) . values ( ) ) <nl> { <nl> @ @ - 141 , 7 + 143 , 7 @ @ <nl> } <nl> <nl> p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileEntities " , nbttaglist2 ) ; <nl> - @ @ - 388 , 6 + 466 , 12 @ @ <nl> + @ @ - 388 , 6 + 467 , 12 @ @ <nl> chunk . func _ 76616 _ a ( p _ 75823 _ 2 _ . func _ 74770 _ j ( " Biomes " ) ) ; <nl> } <nl> <nl> @ @ - 154 , 7 + 156 , 7 @ @ <nl> NBTTagList nbttaglist1 = p _ 75823 _ 2 _ . func _ 150295 _ c ( " Entities " , 10 ) ; <nl> <nl> for ( int j1 = 0 ; j1 < nbttaglist1 . func _ 74745 _ c ( ) ; + + j1 ) <nl> - @ @ - 431 , 8 + 515 , 6 @ @ <nl> + @ @ - 431 , 8 + 516 , 6 @ @ <nl> p _ 75823 _ 1 _ . func _ 180497 _ b ( new BlockPos ( nbttagcompound3 . func _ 74762 _ e ( " x " ) , nbttagcompound3 . func _ 74762 _ e ( " y " ) , nbttagcompound3 . func _ 74762 _ e ( " z " ) ) , block , nbttagcompound3 . func _ 74762 _ e ( " t " ) , nbttagcompound3 . func _ 74762 _ e ( " p " ) ) ; <nl> } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch b / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 4e7e0db <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / world / gen / structure / template / Template . java <nl> + + + + . . / src - work / minecraft / net / minecraft / world / gen / structure / template / Template . java <nl> + @ @ - 520 , 6 + 520 , 7 @ @ <nl> + p _ 189552 _ 1 _ . func _ 74782 _ a ( " size " , this . func _ 186267 _ a ( new int [ ] { this . field _ 186272 _ c . func _ 177958 _ n ( ) , this . field _ 186272 _ c . func _ 177956 _ o ( ) , this . field _ 186272 _ c . func _ 177952 _ p ( ) } ) ) ; <nl> + p _ 189552 _ 1 _ . func _ 74778 _ a ( " author " , this . field _ 186273 _ d ) ; <nl> + p _ 189552 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 189552 _ 1 _ ) ; <nl> + return p _ 189552 _ 1 _ ; <nl> + } <nl> + <nl> diff - - git a / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch b / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch <nl> index d3dbb53 . . e4a0e53 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch <nl> @ @ - 8 , 7 + 8 , 15 @ @ <nl> <nl> protected WorldInfo ( ) <nl> { <nl> - @ @ - 807 , 6 + 808 , 26 @ @ <nl> + @ @ - 335 , 6 + 336 , 7 @ @ <nl> + nbttagcompound . func _ 74757 _ a ( " Snapshot " , false ) ; <nl> + p _ 76064 _ 1 _ . func _ 74782 _ a ( " Version " , nbttagcompound ) ; <nl> + p _ 76064 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 76064 _ 1 _ ) ; <nl> + p _ 76064 _ 1 _ . func _ 74772 _ a ( " RandomSeed " , this . field _ 76100 _ a ) ; <nl> + p _ 76064 _ 1 _ . func _ 74778 _ a ( " generatorName " , this . field _ 76098 _ b . func _ 77127 _ a ( ) ) ; <nl> + p _ 76064 _ 1 _ . func _ 74768 _ a ( " generatorVersion " , this . field _ 76098 _ b . func _ 77131 _ c ( ) ) ; <nl> + @ @ - 807 , 6 + 809 , 26 @ @ <nl> } ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java <nl> new file mode 100644 <nl> index 0000000 . . da32e17 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java <nl> @ @ - 0 , 0 + 1 , 190 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + package net . minecraftforge . common . util ; <nl> + <nl> + import java . util . List ; <nl> + import java . util . Locale ; <nl> + import java . util . Map ; <nl> + import java . util . Map . Entry ; <nl> + <nl> + import com . google . common . collect . Lists ; <nl> + import com . google . common . collect . Maps ; <nl> + <nl> + import net . minecraft . nbt . NBTTagCompound ; <nl> + import net . minecraft . util . datafix . DataFixer ; <nl> + import net . minecraft . util . datafix . FixTypes ; <nl> + import net . minecraft . util . datafix . IDataWalker ; <nl> + import net . minecraft . util . datafix . IFixType ; <nl> + import net . minecraft . util . datafix . IFixableData ; <nl> + <nl> + public class CompoundDataFixer extends DataFixer <nl> + { <nl> + private final ModFixs vanilla ; <nl> + private final Map < String , ModFixs > modFixers = Maps . newHashMap ( ) ; <nl> + private final Map < IFixType , List < IDataWalker > > walkers = Maps . newHashMap ( ) ; <nl> + <nl> + public CompoundDataFixer ( DataFixer vanilla ) <nl> + { <nl> + super ( 0 ) ; <nl> + this . vanilla = init ( " minecraft " , vanilla . version ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt ) <nl> + { <nl> + final Map < String , Integer > versions = getVersions ( nbt ) ; <nl> + final int mcversion = versions . get ( " minecraft " ) = = null ? - 1 : versions . get ( " minecraft " ) ; <nl> + final IDataFixerData holder = new IDataFixerData ( ) <nl> + { <nl> + @ Override <nl> + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt , int version ) <nl> + { <nl> + for ( Entry < String , ModFixs > e : modFixers . entrySet ( ) ) <nl> + { <nl> + / / This is a potential performance hot spot . As it walks all the data for all <nl> + / / of the fixers . . . But with the vanilla api there isn ' t a way to pass down <nl> + / / the mod specific version numbers , so redundant . . but not hacky . . . <nl> + / / Actually , this wont work as the data walkers take versions into account . . . <nl> + ModFixs fixer = e . getValue ( ) ; <nl> + int ver = getVersion ( e . getKey ( ) ) ; <nl> + if ( ver < fixer . version ) <nl> + { <nl> + for ( IFixableData fix : fixer . getFixes ( type ) ) <nl> + { <nl> + if ( fix . getFixVersion ( ) > ver ) <nl> + nbt = fix . fixTagCompound ( nbt ) ; <nl> + } <nl> + <nl> + for ( IDataWalker walker : getWalkers ( type ) ) <nl> + nbt = walker . process ( this , nbt , version ) ; / / We pass in the holder , in case a walker wants to know a mod version <nl> + } <nl> + } <nl> + return nbt ; <nl> + } <nl> + <nl> + @ Override <nl> + public int getVersion ( String mod ) <nl> + { <nl> + Integer ret = versions . get ( mod ) ; <nl> + return ret = = null ? - 1 : ret ; <nl> + } <nl> + } ; <nl> + return holder . process ( type , nbt , mcversion ) ; <nl> + } <nl> + <nl> + @ Override <nl> + @ Deprecated / / MODDERS DO NOT CALL DIRECTLY ! Only use from DataWalker ! <nl> + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt , int mcversion ) <nl> + { <nl> + if ( type ! = FixTypes . OPTIONS ) / / Options are vanilla only <nl> + throw new IllegalStateException ( " Do not call recursive process directly on DataFixer ! " ) ; <nl> + <nl> + for ( IFixableData fix : vanilla . getFixes ( type ) ) <nl> + { <nl> + if ( fix . getFixVersion ( ) > mcversion ) <nl> + nbt = fix . fixTagCompound ( nbt ) ; <nl> + } <nl> + / / Options is a hack , and doesn ' t have any nested components <nl> + / / for ( IDataWalker walker : getWalkers ( type ) ) <nl> + / / nbt = walker . process ( this , nbt , version ) ; <nl> + return nbt ; <nl> + } <nl> + <nl> + private List < IDataWalker > getWalkers ( IFixType type ) <nl> + { <nl> + List < IDataWalker > ret = walkers . get ( type ) ; <nl> + if ( ret = = null ) <nl> + { <nl> + ret = Lists . newArrayList ( ) ; <nl> + walkers . put ( type , ret ) ; <nl> + } <nl> + return ret ; <nl> + } <nl> + <nl> + @ Override <nl> + @ Deprecated / / Modders do not use this , this will register you as vanilla . Use the ModID version below . <nl> + public void registerFix ( IFixType type , IFixableData fixable ) <nl> + { <nl> + vanilla . registerFix ( type , fixable ) ; <nl> + } <nl> + <nl> + <nl> + @ Override <nl> + @ Deprecated / / Modders do not use this , use add below , To better allow custom fix types . <nl> + public void registerWalker ( FixTypes type , IDataWalker walker ) <nl> + { <nl> + registerWalkerAdd ( type , walker ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void registerWalkerAdd ( IFixType type , IDataWalker walker ) <nl> + { <nl> + getWalkers ( type ) . add ( walker ) ; <nl> + } <nl> + <nl> + private void validateModId ( String mod ) <nl> + { <nl> + / / String current = Loader . instance ( ) . activeModContainer ( ) = = null ? " minecraft " : Loader . instance ( ) . activeModContainer ( ) . getModId ( ) ; <nl> + / / Test active modid ? <nl> + if ( ! mod . equals ( mod . toLowerCase ( Locale . ENGLISH ) ) ) <nl> + throw new IllegalArgumentException ( " Mod ID is not lower case : " + mod ) ; <nl> + if ( mod . length ( ) > 64 ) <nl> + throw new IllegalArgumentException ( " Mod ID is to long : " + mod ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Initialize your mod specific data fixer . <nl> + * <nl> + * @ param modid You mod id , must be lower case . <nl> + * @ param version The current data version of your mod <nl> + * / <nl> + public ModFixs init ( String modid , int version ) <nl> + { <nl> + validateModId ( modid ) ; <nl> + if ( modFixers . containsKey ( modid ) ) <nl> + throw new IllegalStateException ( " Attempted to initalize DataFixer for " + modid + " twice " ) ; <nl> + ModFixs ret = new ModFixs ( modid , version ) ; <nl> + modFixers . put ( modid , ret ) ; <nl> + return ret ; <nl> + } <nl> + <nl> + private Map < String , Integer > getVersions ( NBTTagCompound nbt ) <nl> + { <nl> + Map < String , Integer > ret = Maps . newHashMap ( ) ; <nl> + ret . put ( " minecraft " , nbt . hasKey ( " DataVersion " , 99 ) ? nbt . getInteger ( " DataVersion " ) : - 1 ) ; <nl> + if ( nbt . hasKey ( " ForgeDataVersion " , 10 ) ) <nl> + { <nl> + NBTTagCompound sub = nbt . getCompoundTag ( " ForgeDataVersion " ) ; <nl> + for ( String key : sub . getKeySet ( ) ) <nl> + { <nl> + ret . put ( key , sub . hasKey ( key , 99 ) ? sub . getInteger ( key ) : - 1 ) ; <nl> + } <nl> + } <nl> + return ret ; <nl> + } <nl> + <nl> + public void writeVersionData ( NBTTagCompound nbt ) <nl> + { <nl> + / / nbt . setInteger ( " DataVersion " , vanilla . version ) ; <nl> + NBTTagCompound sub = new NBTTagCompound ( ) ; <nl> + nbt . setTag ( " ForgeDataVersion " , sub ) ; <nl> + for ( ModFixs mod : modFixers . values ( ) ) <nl> + sub . setInteger ( mod . mod , mod . version ) ; <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / IDataFixerData . java b / src / main / java / net / minecraftforge / common / util / IDataFixerData . java <nl> new file mode 100644 <nl> index 0000000 . . da6b05c <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / common / util / IDataFixerData . java <nl> @ @ - 0 , 0 + 1 , 26 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + package net . minecraftforge . common . util ; <nl> + <nl> + import net . minecraft . util . datafix . IDataFixer ; <nl> + <nl> + public interface IDataFixerData extends IDataFixer <nl> + { <nl> + public int getVersion ( String mod ) ; <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / ModFixs . java b / src / main / java / net / minecraftforge / common / util / ModFixs . java <nl> new file mode 100644 <nl> index 0000000 . . 2dc01f2 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / common / util / ModFixs . java <nl> @ @ - 0 , 0 + 1 , 83 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + package net . minecraftforge . common . util ; <nl> + <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + <nl> + import org . apache . logging . log4j . LogManager ; <nl> + import org . apache . logging . log4j . Logger ; <nl> + <nl> + import com . google . common . collect . Lists ; <nl> + import com . google . common . collect . Maps ; <nl> + <nl> + import net . minecraft . util . datafix . IFixType ; <nl> + import net . minecraft . util . datafix . IFixableData ; <nl> + <nl> + public class ModFixs <nl> + { <nl> + private static final Logger LOGGER = LogManager . getLogger ( ) ; <nl> + final String mod ; <nl> + final int version ; <nl> + private final Map < IFixType , List < IFixableData > > fixes = Maps . newHashMap ( ) ; <nl> + <nl> + ModFixs ( String mod , int version ) <nl> + { <nl> + this . mod = mod ; <nl> + this . version = version ; <nl> + } <nl> + <nl> + public List < IFixableData > getFixes ( IFixType type ) <nl> + { <nl> + List < IFixableData > ret = this . fixes . get ( type ) ; <nl> + if ( ret = = null ) <nl> + { <nl> + ret = Lists . newArrayList ( ) ; <nl> + this . fixes . put ( type , ret ) ; <nl> + } <nl> + return ret ; <nl> + } <nl> + <nl> + public void registerFix ( IFixType type , IFixableData fixer ) <nl> + { <nl> + List < IFixableData > list = getFixes ( type ) ; <nl> + int ver = fixer . getFixVersion ( ) ; <nl> + <nl> + if ( ver > this . version ) <nl> + { <nl> + LOGGER . warn ( " [ { } ] Ignored fix registered for version : { } as the DataVersion of the game is : { } " , mod , ver , this . version ) ; <nl> + return ; <nl> + } <nl> + <nl> + if ( ! list . isEmpty ( ) & & list . get ( list . size ( ) - 1 ) . getFixVersion ( ) > ver ) <nl> + { <nl> + for ( int x = 0 ; x < list . size ( ) ; + + x ) <nl> + { <nl> + if ( list . get ( x ) . getFixVersion ( ) > ver ) <nl> + { <nl> + list . add ( x , fixer ) ; <nl> + break ; <nl> + } <nl> + } <nl> + } <nl> + else <nl> + list . add ( fixer ) ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> index c796af8 . . a78247c 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> @ @ - 82 , 6 + 82 , 7 @ @ import net . minecraft . world . storage . SaveFormatOld ; <nl> import net . minecraftforge . client . event . ModelRegistryEvent ; <nl> import net . minecraftforge . common . ForgeModContainer ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . common . util . CompoundDataFixer ; <nl> import net . minecraftforge . fml . client . registry . RenderingRegistry ; <nl> import net . minecraftforge . fml . common . DummyModContainer ; <nl> import net . minecraftforge . fml . common . DuplicateModsFoundException ; <nl> @ @ - 1060 , 4 + 1061 , 10 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> { <nl> MinecraftForge . EVENT _ BUS . post ( new ModelRegistryEvent ( ) ) ; <nl> } <nl> + <nl> + @ Override <nl> + public CompoundDataFixer getDataFixer ( ) <nl> + { <nl> + return ( CompoundDataFixer ) this . client . getDataFixer ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> index d4863c7 . . 1411eda 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> @ @ - 57 , 6 + 57 , 7 @ @ import net . minecraft . world . storage . WorldInfo ; <nl> import net . minecraftforge . client . model . animation . Animation ; <nl> import net . minecraftforge . common . ForgeVersion ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . common . util . CompoundDataFixer ; <nl> import net . minecraftforge . fml . common . eventhandler . EventBus ; <nl> import net . minecraftforge . fml . common . gameevent . InputEvent ; <nl> import net . minecraftforge . fml . common . gameevent . PlayerEvent ; <nl> @ @ - 751 , 4 + 752 , 9 @ @ public class FMLCommonHandler <nl> { <nl> sidedDelegate . fireSidedRegistryEvents ( ) ; <nl> } <nl> + <nl> + public CompoundDataFixer getDataFixer ( ) <nl> + { <nl> + return ( CompoundDataFixer ) sidedDelegate . getDataFixer ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> index aea07ff . . 4cff064 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> @ @ - 27 , 6 + 27 , 7 @ @ import net . minecraft . network . INetHandler ; <nl> import net . minecraft . network . NetworkManager ; <nl> import net . minecraft . server . MinecraftServer ; <nl> import net . minecraft . util . IThreadListener ; <nl> + import net . minecraftforge . common . util . CompoundDataFixer ; <nl> import net . minecraftforge . fml . common . eventhandler . EventBus ; <nl> import net . minecraftforge . fml . relauncher . Side ; <nl> <nl> @ @ - 77 , 4 + 78 , 6 @ @ public interface IFMLSidedHandler <nl> void reloadRenderers ( ) ; <nl> <nl> void fireSidedRegistryEvents ( ) ; <nl> + <nl> + CompoundDataFixer getDataFixer ( ) ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> index 54c25b1 . . fa4f6a5 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> @ @ - 35 , 6 + 35 , 7 @ @ import net . minecraft . server . dedicated . PendingCommand ; <nl> import net . minecraft . util . IThreadListener ; <nl> import net . minecraft . util . text . translation . LanguageMap ; <nl> import net . minecraft . world . storage . SaveFormatOld ; <nl> + import net . minecraftforge . common . util . CompoundDataFixer ; <nl> import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . IFMLSidedHandler ; <nl> @ @ - 339 , 4 + 340 , 9 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> { <nl> / / NOOP <nl> } <nl> + @ Override <nl> + public CompoundDataFixer getDataFixer ( ) <nl> + { <nl> + return ( CompoundDataFixer ) this . server . getDataFixer ( ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg <nl> index 14df9d2 . . 586b68e 100644 <nl> - - - a / src / main / resources / forge _ at . cfg <nl> + + + b / src / main / resources / forge _ at . cfg <nl> @ @ - 287 , 4 + 287 , 7 @ @ public net . minecraft . potion . PotionHelper func _ 185204 _ a ( Lnet / minecraft / potion / Pot <nl> <nl> # TileEntityHopper <nl> public net . minecraft . tileentity . TileEntityHopper func _ 174914 _ o ( ) Z # mayTransfer <nl> - public net . minecraft . tileentity . TileEntityHopper func _ 145896 _ c ( I ) V # setTransferCooldown <nl> \ No newline at end of file <nl> + public net . minecraft . tileentity . TileEntityHopper func _ 145896 _ c ( I ) V # setTransferCooldown <nl> + <nl> + # DataFixer <nl> + public net . minecraft . util . datafix . DataFixer field _ 188262 _ d # version <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch 
 index e186be4 . . fdaf7f6 100644 
 - - - a / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch 
 @ @ - 108 , 7 + 108 , 7 @ @ 
 + { 
 + / / Give the server a chance to fire event as well . That way server event is not dependant on client event . 
 + this . field _ 78774 _ b . func _ 147297 _ a ( new CPacketPlayerTryUseItemOnBlock ( p _ 187099 _ 3 _ , p _ 187099 _ 4 _ , p _ 187099 _ 6 _ , f , f1 , f2 ) ) ; 
 - + return EnumActionResult . PASS ; 
 + + return event . getCancellationResult ( ) ; 
 + } 
 + EnumActionResult result = EnumActionResult . PASS ; 
 + 
 @ @ - 161 , 15 + 161 , 16 @ @ 
 } 
 } 
 } 
 - @ @ - 457 , 6 + 490 , 7 @ @ 
 + @ @ - 457 , 6 + 490 , 8 @ @ 
 } 
 else 
 { 
 - + if ( net . minecraftforge . common . ForgeHooks . onItemRightClick ( p _ 187101 _ 1 _ , p _ 187101 _ 3 _ ) ) return net . minecraft . util . EnumActionResult . PASS ; 
 + + EnumActionResult cancelResult = net . minecraftforge . common . ForgeHooks . onItemRightClickAction ( p _ 187101 _ 1 _ , p _ 187101 _ 3 _ ) ; 
 + + if ( cancelResult ! = null ) return cancelResult ; 
 int i = itemstack . func _ 190916 _ E ( ) ; 
 ActionResult < ItemStack > actionresult = itemstack . func _ 77957 _ a ( p _ 187101 _ 2 _ , p _ 187101 _ 1 _ , p _ 187101 _ 3 _ ) ; 
 ItemStack itemstack1 = ( ItemStack ) actionresult . func _ 188398 _ b ( ) ; 
 - @ @ - 464 , 6 + 498 , 10 @ @ 
 + @ @ - 464 , 6 + 499 , 10 @ @ 
 if ( itemstack1 ! = itemstack | | itemstack1 . func _ 190916 _ E ( ) ! = i ) 
 { 
 p _ 187101 _ 1 _ . func _ 184611 _ a ( p _ 187101 _ 3 _ , itemstack1 ) ; 
 @ @ - 180 , 11 + 181 , 13 @ @ 
 } 
 
 return actionresult . func _ 188397 _ a ( ) ; 
 - @ @ - 500 , 6 + 538 , 7 @ @ 
 + @ @ - 500 , 6 + 539 , 9 @ @ 
 this . func _ 78750 _ j ( ) ; 
 Vec3d vec3d = new Vec3d ( p _ 187102 _ 3 _ . field _ 72307 _ f . field _ 72450 _ a - p _ 187102 _ 2 _ . field _ 70165 _ t , p _ 187102 _ 3 _ . field _ 72307 _ f . field _ 72448 _ b - p _ 187102 _ 2 _ . field _ 70163 _ u , p _ 187102 _ 3 _ . field _ 72307 _ f . field _ 72449 _ c - p _ 187102 _ 2 _ . field _ 70161 _ v ) ; 
 this . field _ 78774 _ b . func _ 147297 _ a ( new CPacketUseEntity ( p _ 187102 _ 2 _ , p _ 187102 _ 4 _ , vec3d ) ) ; 
 - + if ( net . minecraftforge . common . ForgeHooks . onInteractEntityAt ( p _ 187102 _ 1 _ , p _ 187102 _ 2 _ , p _ 187102 _ 3 _ , p _ 187102 _ 4 _ ) ) return EnumActionResult . PASS ; 
 + + if ( this . field _ 78779 _ k = = GameType . SPECTATOR ) return EnumActionResult . PASS ; / / don ' t fire for spectators to match non - specific EntityInteract 
 + + EnumActionResult cancelResult = net . minecraftforge . common . ForgeHooks . onInteractEntityAtAction ( p _ 187102 _ 1 _ , p _ 187102 _ 2 _ , p _ 187102 _ 3 _ , p _ 187102 _ 4 _ ) ; 
 + + if ( cancelResult ! = null ) return cancelResult ; 
 return this . field _ 78779 _ k = = GameType . SPECTATOR ? EnumActionResult . PASS : p _ 187102 _ 2 _ . func _ 184199 _ a ( p _ 187102 _ 1 _ , vec3d , p _ 187102 _ 4 _ ) ; 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 index b8d6b4a . . 1d0f089 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 @ @ - 217 , 15 + 217 , 16 @ @ 
 p _ 70665 _ 2 _ = this . func _ 70672 _ c ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; 
 float f = p _ 70665 _ 2 _ ; 
 p _ 70665 _ 2 _ = Math . max ( p _ 70665 _ 2 _ - this . func _ 110139 _ bj ( ) , 0 . 0F ) ; 
 - @ @ - 1111 , 6 + 1183 , 7 @ @ 
 + @ @ - 1111 , 6 + 1183 , 8 @ @ 
 } 
 else 
 { 
 - + if ( net . minecraftforge . common . ForgeHooks . onInteractEntity ( this , p _ 190775 _ 1 _ , p _ 190775 _ 2 _ ) ) return EnumActionResult . PASS ; 
 + + EnumActionResult cancelResult = net . minecraftforge . common . ForgeHooks . onInteractEntityAction ( this , p _ 190775 _ 1 _ , p _ 190775 _ 2 _ ) ; 
 + + if ( cancelResult ! = null ) return cancelResult ; 
 ItemStack itemstack = this . func _ 184586 _ b ( p _ 190775 _ 2 _ ) ; 
 ItemStack itemstack1 = itemstack . func _ 190926 _ b ( ) ? ItemStack . field _ 190927 _ a : itemstack . func _ 77946 _ l ( ) ; 
 
 - @ @ - 1120 , 7 + 1193 , 10 @ @ 
 + @ @ - 1120 , 7 + 1194 , 10 @ @ 
 { 
 itemstack . func _ 190920 _ e ( itemstack1 . func _ 190916 _ E ( ) ) ; 
 } 
 @ @ - 237 , 7 + 238 , 7 @ @ 
 return EnumActionResult . SUCCESS ; 
 } 
 else 
 - @ @ - 1136 , 6 + 1212 , 7 @ @ 
 + @ @ - 1136 , 6 + 1213 , 7 @ @ 
 { 
 if ( itemstack . func _ 190926 _ b ( ) & & ! this . field _ 71075 _ bZ . field _ 75098 _ d ) 
 { 
 @ @ - 245 , 7 + 246 , 7 @ @ 
 this . func _ 184611 _ a ( p _ 190775 _ 2 _ , ItemStack . field _ 190927 _ a ) ; 
 } 
 
 - @ @ - 1161 , 6 + 1238 , 7 @ @ 
 + @ @ - 1161 , 6 + 1239 , 7 @ @ 
 
 public void func _ 71059 _ n ( Entity p _ 71059 _ 1 _ ) 
 { 
 @ @ - 253 , 7 + 254 , 7 @ @ 
 if ( p _ 71059 _ 1 _ . func _ 70075 _ an ( ) ) 
 { 
 if ( ! p _ 71059 _ 1 _ . func _ 85031 _ j ( this ) ) 
 - @ @ - 1333 , 11 + 1411 , 13 @ @ 
 + @ @ - 1333 , 11 + 1412 , 13 @ @ 
 
 if ( ! itemstack1 . func _ 190926 _ b ( ) & & entity instanceof EntityLivingBase ) 
 { 
 @ @ - 267 , 7 + 268 , 7 @ @ 
 } 
 } 
 
 - @ @ - 1443 , 6 + 1523 , 8 @ @ 
 + @ @ - 1443 , 6 + 1524 , 8 @ @ 
 
 public EntityPlayer . SleepResult func _ 180469 _ a ( BlockPos p _ 180469 _ 1 _ ) 
 { 
 @ @ - 276 , 7 + 277 , 7 @ @ 
 EnumFacing enumfacing = ( EnumFacing ) this . field _ 70170 _ p . func _ 180495 _ p ( p _ 180469 _ 1 _ ) . func _ 177229 _ b ( BlockHorizontal . field _ 185512 _ D ) ; 
 
 if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) 
 - @ @ - 1484 , 8 + 1566 , 9 @ @ 
 + @ @ - 1484 , 8 + 1567 , 9 @ @ 
 
 this . func _ 70105 _ a ( 0 . 2F , 0 . 2F ) ; 
 
 @ @ - 288 , 7 + 289 , 7 @ @ 
 float f1 = 0 . 5F + ( float ) enumfacing . func _ 82601 _ c ( ) * 0 . 4F ; 
 float f = 0 . 5F + ( float ) enumfacing . func _ 82599 _ e ( ) * 0 . 4F ; 
 this . func _ 175139 _ a ( enumfacing ) ; 
 - @ @ - 1532 , 13 + 1615 , 14 @ @ 
 + @ @ - 1532 , 13 + 1616 , 14 @ @ 
 
 public void func _ 70999 _ a ( boolean p _ 70999 _ 1 _ , boolean p _ 70999 _ 2 _ , boolean p _ 70999 _ 3 _ ) 
 { 
 @ @ - 306 , 7 + 307 , 7 @ @ 
 
 if ( blockpos = = null ) 
 { 
 - @ @ - 1547 , 6 + 1631 , 10 @ @ 
 + @ @ - 1547 , 6 + 1632 , 10 @ @ 
 
 this . func _ 70107 _ b ( ( double ) ( ( float ) blockpos . func _ 177958 _ n ( ) + 0 . 5F ) , ( double ) ( ( float ) blockpos . func _ 177956 _ o ( ) + 0 . 1F ) , ( double ) ( ( float ) blockpos . func _ 177952 _ p ( ) + 0 . 5F ) ) ; 
 } 
 @ @ - 317 , 7 + 318 , 7 @ @ 
 
 this . field _ 71083 _ bS = false ; 
 
 - @ @ - 1565 , 15 + 1653 , 16 @ @ 
 + @ @ - 1565 , 15 + 1654 , 16 @ @ 
 
 private boolean func _ 175143 _ p ( ) 
 { 
 @ @ - 337 , 7 + 338 , 7 @ @ 
 { 
 if ( ! p _ 180467 _ 2 _ ) 
 { 
 - @ @ - 1588 , 16 + 1677 , 17 @ @ 
 + @ @ - 1588 , 16 + 1678 , 17 @ @ 
 } 
 else 
 { 
 @ @ - 358 , 7 + 359 , 7 @ @ 
 
 switch ( enumfacing ) 
 { 
 - @ @ - 1637 , 16 + 1727 , 24 @ @ 
 + @ @ - 1637 , 16 + 1728 , 24 @ @ 
 
 public BlockPos func _ 180470 _ cg ( ) 
 { 
 @ @ - 385 , 7 + 386 , 7 @ @ 
 if ( p _ 180473 _ 1 _ ! = null ) 
 { 
 this . field _ 71077 _ c = p _ 180473 _ 1 _ ; 
 - @ @ - 1841 , 6 + 1939 , 10 @ @ 
 + @ @ - 1841 , 6 + 1940 , 10 @ @ 
 
 super . func _ 180430 _ e ( p _ 180430 _ 1 _ , p _ 180430 _ 2 _ ) ; 
 } 
 @ @ - 396 , 7 + 397 , 7 @ @ 
 } 
 
 protected void func _ 71061 _ d _ ( ) 
 - @ @ - 2041 , 6 + 2143 , 18 @ @ 
 + @ @ - 2041 , 6 + 2144 , 18 @ @ 
 this . field _ 175152 _ f = p _ 71049 _ 1 _ . field _ 175152 _ f ; 
 this . field _ 71078 _ a = p _ 71049 _ 1 _ . field _ 71078 _ a ; 
 this . func _ 184212 _ Q ( ) . func _ 187227 _ b ( field _ 184827 _ bp , p _ 71049 _ 1 _ . func _ 184212 _ Q ( ) . func _ 187225 _ a ( field _ 184827 _ bp ) ) ; 
 @ @ - 415 , 7 + 416 , 7 @ @ 
 } 
 
 protected boolean func _ 70041 _ e _ ( ) 
 - @ @ - 2145 , 7 + 2259 , 10 @ @ 
 + @ @ - 2145 , 7 + 2260 , 10 @ @ 
 
 public ITextComponent func _ 145748 _ c _ ( ) 
 { 
 @ @ - 427 , 7 + 428 , 7 @ @ 
 itextcomponent . func _ 150256 _ b ( ) . func _ 150241 _ a ( new ClickEvent ( ClickEvent . Action . SUGGEST _ COMMAND , " / msg " + this . func _ 70005 _ c _ ( ) + " " ) ) ; 
 itextcomponent . func _ 150256 _ b ( ) . func _ 150209 _ a ( this . func _ 174823 _ aP ( ) ) ; 
 itextcomponent . func _ 150256 _ b ( ) . func _ 179989 _ a ( this . func _ 70005 _ c _ ( ) ) ; 
 - @ @ - 2154 , 7 + 2271 , 7 @ @ 
 + @ @ - 2154 , 7 + 2272 , 7 @ @ 
 
 public float func _ 70047 _ e ( ) 
 { 
 @ @ - 436 , 7 + 437 , 7 @ @ 
 
 if ( this . func _ 70608 _ bn ( ) ) 
 { 
 - @ @ - 2370 , 6 + 2487 , 168 @ @ 
 + @ @ - 2370 , 6 + 2488 , 168 @ @ 
 return this . field _ 71075 _ bZ . field _ 75098 _ d & & this . func _ 70003 _ b ( 2 , " " ) ; 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch b / patches / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch 
 index 715e35d . . 77d87e9 100644 
 - - - a / patches / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch 
 + + + b / patches / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch 
 @ @ - 38 , 7 + 38 , 7 @ @ 
 else if ( p _ 147340 _ 1 _ . func _ 149565 _ c ( ) = = CPacketUseEntity . Action . INTERACT _ AT ) 
 { 
 EnumHand enumhand1 = p _ 147340 _ 1 _ . func _ 186994 _ b ( ) ; 
 - + if ( net . minecraftforge . common . ForgeHooks . onInteractEntityAt ( field _ 147369 _ b , entity , p _ 147340 _ 1 _ . func _ 179712 _ b ( ) , enumhand1 ) ) return ; 
 + + if ( net . minecraftforge . common . ForgeHooks . onInteractEntityAtAction ( field _ 147369 _ b , entity , p _ 147340 _ 1 _ . func _ 179712 _ b ( ) , enumhand1 ) ! = null ) return ; 
 entity . func _ 184199 _ a ( this . field _ 147369 _ b , p _ 147340 _ 1 _ . func _ 179712 _ b ( ) , enumhand1 ) ; 
 } 
 else if ( p _ 147340 _ 1 _ . func _ 149565 _ c ( ) = = CPacketUseEntity . Action . ATTACK ) 
 diff - - git a / patches / minecraft / net / minecraft / server / management / PlayerInteractionManager . java . patch b / patches / minecraft / net / minecraft / server / management / PlayerInteractionManager . java . patch 
 index d72c68a . . df28ae3 100644 
 - - - a / patches / minecraft / net / minecraft / server / management / PlayerInteractionManager . java . patch 
 + + + b / patches / minecraft / net / minecraft / server / management / PlayerInteractionManager . java . patch 
 @ @ - 199 , 18 + 199 , 19 @ @ 
 return flag1 ; 
 } 
 } 
 - @ @ - 330 , 8 + 352 , 10 @ @ 
 + @ @ - 330 , 8 + 352 , 11 @ @ 
 } 
 else 
 { 
 - + if ( net . minecraftforge . common . ForgeHooks . onItemRightClick ( p _ 187250 _ 1 _ , p _ 187250 _ 4 _ ) ) return net . minecraft . util . EnumActionResult . PASS ; 
 + + EnumActionResult cancelResult = net . minecraftforge . common . ForgeHooks . onItemRightClickAction ( p _ 187250 _ 1 _ , p _ 187250 _ 4 _ ) ; 
 + + if ( cancelResult ! = null ) return cancelResult ; 
 int i = p _ 187250 _ 3 _ . func _ 190916 _ E ( ) ; 
 int j = p _ 187250 _ 3 _ . func _ 77960 _ j ( ) ; 
 + ItemStack copyBeforeUse = p _ 187250 _ 3 _ . func _ 77946 _ l ( ) ; 
 ActionResult < ItemStack > actionresult = p _ 187250 _ 3 _ . func _ 77957 _ a ( p _ 187250 _ 2 _ , p _ 187250 _ 1 _ , p _ 187250 _ 4 _ ) ; 
 ItemStack itemstack = ( ItemStack ) actionresult . func _ 188398 _ b ( ) ; 
 
 - @ @ - 360 , 6 + 384 , 7 @ @ 
 + @ @ - 360 , 6 + 385 , 7 @ @ 
 if ( itemstack . func _ 190926 _ b ( ) ) 
 { 
 p _ 187250 _ 1 _ . func _ 184611 _ a ( p _ 187250 _ 4 _ , ItemStack . field _ 190927 _ a ) ; 
 @ @ - 218 , 14 + 219 , 14 @ @ 
 } 
 
 if ( ! p _ 187250 _ 1 _ . func _ 184587 _ cr ( ) ) 
 - @ @ - 404 , 13 + 429 , 23 @ @ 
 + @ @ - 404 , 13 + 430 , 23 @ @ 
 } 
 else 
 { 
 - if ( ! p _ 187251 _ 1 _ . func _ 70093 _ af ( ) | | p _ 187251 _ 1 _ . func _ 184614 _ ca ( ) . func _ 190926 _ b ( ) & & p _ 187251 _ 1 _ . func _ 184592 _ cb ( ) . func _ 190926 _ b ( ) ) 
 + net . minecraftforge . event . entity . player . PlayerInteractEvent . RightClickBlock event = net . minecraftforge . common . ForgeHooks 
 + . onRightClickBlock ( p _ 187251 _ 1 _ , p _ 187251 _ 4 _ , p _ 187251 _ 5 _ , p _ 187251 _ 6 _ , net . minecraftforge . common . ForgeHooks . rayTraceEyeHitVec ( p _ 187251 _ 1 _ , getBlockReachDistance ( ) + 1 ) ) ; 
 - + if ( event . isCanceled ( ) ) return EnumActionResult . PASS ; 
 + + if ( event . isCanceled ( ) ) return event . getCancellationResult ( ) ; 
 + 
 + EnumActionResult ret = p _ 187251 _ 3 _ . onItemUseFirst ( p _ 187251 _ 1 _ , p _ 187251 _ 2 _ , p _ 187251 _ 5 _ , p _ 187251 _ 4 _ , p _ 187251 _ 6 _ , p _ 187251 _ 7 _ , p _ 187251 _ 8 _ , p _ 187251 _ 9 _ ) ; 
 + if ( ret ! = EnumActionResult . PASS ) return ret ; 
 @ @ - 245 , 7 + 246 , 7 @ @ 
 } 
 } 
 
 - @ @ - 438 , 14 + 473 , 20 @ @ 
 + @ @ - 438 , 14 + 474 , 20 @ @ 
 { 
 int j = p _ 187251 _ 3 _ . func _ 77960 _ j ( ) ; 
 int i = p _ 187251 _ 3 _ . func _ 190916 _ E ( ) ; 
 @ @ - 266 , 7 + 267 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 455 , 4 + 496 , 13 @ @ 
 + @ @ - 455 , 4 + 497 , 13 @ @ 
 { 
 this . field _ 73092 _ a = p _ 73080 _ 1 _ ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index ad4cbcc . . 809aa56 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 1035 , 25 + 1035 , 56 @ @ public class ForgeHooks 
 return git = = null ? null : git . hitVec ; 
 } 
 
 + / / TODO 1 . 12 remove these three 
 + @ Deprecated 
 public static boolean onInteractEntityAt ( EntityPlayer player , Entity entity , RayTraceResult ray , EnumHand hand ) 
 { 
 - Vec3d vec3d = new Vec3d ( ray . hitVec . xCoord - entity . posX , ray . hitVec . yCoord - entity . posY , ray . hitVec . zCoord - entity . posZ ) ; 
 - return onInteractEntityAt ( player , entity , vec3d , hand ) ; 
 + return onInteractEntityAtAction ( player , entity , ray , hand ) ! = null ; 
 } 
 
 + @ Deprecated 
 public static boolean onInteractEntityAt ( EntityPlayer player , Entity entity , Vec3d vec3d , EnumHand hand ) 
 { 
 - return MinecraftForge . EVENT _ BUS . post ( new PlayerInteractEvent . EntityInteractSpecific ( player , hand , entity , vec3d ) ) ; 
 + return onInteractEntityAtAction ( player , entity , vec3d , hand ) ! = null ; 
 } 
 
 + @ Deprecated 
 public static boolean onInteractEntity ( EntityPlayer player , Entity entity , EnumHand hand ) 
 { 
 - return MinecraftForge . EVENT _ BUS . post ( new PlayerInteractEvent . EntityInteract ( player , hand , entity ) ) ; 
 + return onInteractEntityAction ( player , entity , hand ) ! = null ; 
 + } 
 + 
 + public static EnumActionResult onInteractEntityAtAction ( EntityPlayer player , Entity entity , RayTraceResult ray , EnumHand hand ) 
 + { 
 + Vec3d vec3d = new Vec3d ( ray . hitVec . xCoord - entity . posX , ray . hitVec . yCoord - entity . posY , ray . hitVec . zCoord - entity . posZ ) ; 
 + return onInteractEntityAtAction ( player , entity , vec3d , hand ) ; 
 + } 
 + 
 + public static EnumActionResult onInteractEntityAtAction ( EntityPlayer player , Entity entity , Vec3d vec3d , EnumHand hand ) 
 + { 
 + PlayerInteractEvent . EntityInteractSpecific evt = new PlayerInteractEvent . EntityInteractSpecific ( player , hand , entity , vec3d ) ; 
 + MinecraftForge . EVENT _ BUS . post ( evt ) ; 
 + return evt . isCanceled ( ) ? evt . getCancellationResult ( ) : null ; 
 + } 
 + 
 + public static EnumActionResult onInteractEntityAction ( EntityPlayer player , Entity entity , EnumHand hand ) 
 + { 
 + PlayerInteractEvent . EntityInteract evt = new PlayerInteractEvent . EntityInteract ( player , hand , entity ) ; 
 + MinecraftForge . EVENT _ BUS . post ( evt ) ; 
 + return evt . isCanceled ( ) ? evt . getCancellationResult ( ) : null ; 
 } 
 
 + @ Deprecated / / TODO 1 . 12 remove 
 public static boolean onItemRightClick ( EntityPlayer player , EnumHand hand ) 
 { 
 - return MinecraftForge . EVENT _ BUS . post ( new PlayerInteractEvent . RightClickItem ( player , hand ) ) ; 
 + return onItemRightClickAction ( player , hand ) ! = null ; 
 + } 
 + 
 + public static EnumActionResult onItemRightClickAction ( EntityPlayer player , EnumHand hand ) 
 + { 
 + PlayerInteractEvent . RightClickItem evt = new PlayerInteractEvent . RightClickItem ( player , hand ) ; 
 + MinecraftForge . EVENT _ BUS . post ( evt ) ; 
 + return evt . isCanceled ( ) ? evt . getCancellationResult ( ) : null ; 
 } 
 
 public static PlayerInteractEvent . LeftClickBlock onLeftClickBlock ( EntityPlayer player , BlockPos pos , EnumFacing face , Vec3d hitVec ) 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / player / PlayerInteractEvent . java b / src / main / java / net / minecraftforge / event / entity / player / PlayerInteractEvent . java 
 index 4192786 . . fb256b9 100644 
 - - - a / src / main / java / net / minecraftforge / event / entity / player / PlayerInteractEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / entity / player / PlayerInteractEvent . java 
 @ @ - 23 , 6 + 23 , 7 @ @ import com . google . common . base . Preconditions ; 
 import net . minecraft . entity . Entity ; 
 import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . item . ItemStack ; 
 + import net . minecraft . util . EnumActionResult ; 
 import net . minecraft . util . EnumFacing ; 
 import net . minecraft . util . EnumHand ; 
 import net . minecraft . util . math . BlockPos ; 
 @ @ - 49 , 6 + 50 , 7 @ @ public class PlayerInteractEvent extends PlayerEvent 
 private final BlockPos pos ; 
 @ Nullable 
 private final EnumFacing face ; 
 + private EnumActionResult cancellationResult = EnumActionResult . PASS ; 
 
 private PlayerInteractEvent ( EntityPlayer player , EnumHand hand , BlockPos pos , @ Nullable EnumFacing face ) 
 { 
 @ @ - 63 , 11 + 65 , 9 @ @ public class PlayerInteractEvent extends PlayerEvent 
 * 
 * " Interact at " is an interact where the local vector ( which part of the entity you clicked ) is known . 
 * The state of this event affects whether { @ link Entity # applyPlayerInteraction } is called . 
 - * If { @ link Entity # applyPlayerInteraction } returns { @ link net . minecraft . util . EnumActionResult # SUCCESS } , then processing ends . 
 - * Otherwise processing will continue to { @ link EntityInteract } 
 * 
 - * Canceling the event clientside will cause processing to continue to { @ link EntityInteract } , 
 - * while canceling serverside will simply do no further processing . 
 + * Let result be the return value of { @ link Entity # applyPlayerInteraction } , or { @ link # cancellationResult } if the event is cancelled . 
 + * If we are on the client and result is not { @ link EnumActionResult # SUCCESS } , the client will then try { @ link EntityInteract } . 
 * / 
 @ Cancelable 
 public static class EntityInteractSpecific extends PlayerInteractEvent 
 @ @ - 103 , 14 + 103 , 12 @ @ public class PlayerInteractEvent extends PlayerEvent 
 * This event is fired on both sides when the player right clicks an entity . 
 * It is responsible for all general entity interactions . 
 * 
 - * This event is fired completely independently of the above { @ link EntityInteractSpecific } , except for the case 
 - * where the above call to { @ link Entity # applyPlayerInteraction } returns { @ link net . minecraft . util . EnumActionResult # SUCCESS } . 
 - * In that case , general entity interactions , and hence this event , will not be called . See the above javadoc for more details . 
 - * 
 + * This event is fired only if the result of the above { @ link EntityInteractSpecific } is not { @ link EnumActionResult # SUCCESS } . 
 * This event ' s state affects whether { @ link Entity # processInitialInteract } and { @ link net . minecraft . item . Item # itemInteractionForEntity } are called . 
 * 
 - * Canceling the event clientside will cause processing to continue to { @ link RightClickItem } , 
 - * while canceling serverside will simply do no further processing . 
 + * Let result be { @ link EnumActionResult # SUCCESS } if { @ link Entity # processInitialInteract } or { @ link net . minecraft . item . Item # itemInteractionForEntity } return true , 
 + * or { @ link # cancellationResult } if the event is cancelled . 
 + * If we are on the client and result is not { @ link EnumActionResult # SUCCESS } , the client will then try { @ link RightClickItem } . 
 * / 
 @ Cancelable 
 public static class EntityInteract extends PlayerInteractEvent 
 @ @ - 133 , 7 + 131 , 11 @ @ public class PlayerInteractEvent extends PlayerEvent 
 * This event is fired on both sides whenever the player right clicks while targeting a block . 
 * This event controls which of { @ link net . minecraft . block . Block # onBlockActivated } and / or { @ link net . minecraft . item . Item # onItemUse } 
 * will be called after { @ link net . minecraft . item . Item # onItemUseFirst } is called . 
 - * Canceling the event will cause none of the above three to be called . 
 + * Canceling the event will cause none of the above three to be called 
 + * 
 + * Let result be a return value of the above three methods , or { @ link # cancellationResult } if the event is cancelled . 
 + * If we are on the client and result is not { @ link EnumActionResult # SUCCESS } , the client will then try { @ link RightClickItem } . 
 + * 
 * There are various results to this event , see the getters below . 
 * Note that handling things differently on the client vs server may cause desynchronizations ! 
 * / 
 @ @ - 207 , 9 + 209 , 10 @ @ public class PlayerInteractEvent extends PlayerEvent 
 
 / * * 
 * This event is fired on both sides before the player triggers { @ link net . minecraft . item . Item # onItemRightClick } . 
 - * Note that this is NOT fired if the player is targeting a block . For that case , see { @ link RightClickBlock } . 
 - * Canceling the event clientside causes processing to continue to the other hands , 
 - * while canceling serverside will simply do no further processing . 
 + * Note that this is NOT fired if the player is targeting a block { @ link RightClickBlock } or entity { @ link EntityInteract } { @ link EntityInteractSpecific } . 
 + * 
 + * Let result be the return value of { @ link net . minecraft . item . Item # onItemRightClick } , or { @ link # cancellationResult } if the event is cancelled . 
 + * If we are on the client and result is not { @ link EnumActionResult # SUCCESS } , the client will then continue to other hands . 
 * / 
 @ Cancelable 
 public static class RightClickItem extends PlayerInteractEvent 
 @ @ - 381 , 4 + 384 , 24 @ @ public class PlayerInteractEvent extends PlayerEvent 
 return getWorld ( ) . isRemote ? Side . CLIENT : Side . SERVER ; 
 } 
 
 + / * * 
 + * @ return The EnumActionResult that will be returned to vanilla if the event is cancelled , instead of calling the relevant 
 + * method of the event . By default , this is { @ link EnumActionResult # PASS } , meaning cancelled events will cause 
 + * the client to keep trying more interactions until something works . 
 + * / 
 + public EnumActionResult getCancellationResult ( ) 
 + { 
 + return cancellationResult ; 
 + } 
 + 
 + / * * 
 + * Set the EnumActionResult that will be returned to vanilla if the event is cancelled , instead of calling the relevant 
 + * method of the event . 
 + * Note that this only has an effect on { @ link RightClickBlock } , { @ link RightClickItem } , { @ link EntityInteract } , and { @ link EntityInteractSpecific } . 
 + * / 
 + public void setCancellationResult ( EnumActionResult result ) 
 + { 
 + this . cancellationResult = result ; 
 + } 
 + 
 } 
 diff - - git a / src / test / java / net / minecraftforge / test / PlayerInteractEventTest . java b / src / test / java / net / minecraftforge / test / PlayerInteractEventTest . java 
 index 116186b . . 4dea7c2 100644 
 - - - a / src / test / java / net / minecraftforge / test / PlayerInteractEventTest . java 
 + + + b / src / test / java / net / minecraftforge / test / PlayerInteractEventTest . java 
 @ @ - 5 , 9 + 5 , 11 @ @ import net . minecraft . entity . monster . EntityCreeper ; 
 import net . minecraft . entity . monster . EntitySkeleton ; 
 import net . minecraft . entity . passive . EntityHorse ; 
 import net . minecraft . init . Items ; 
 + import net . minecraft . item . ItemBlock ; 
 import net . minecraft . tileentity . TileEntity ; 
 import net . minecraft . tileentity . TileEntityChest ; 
 import net . minecraft . tileentity . TileEntityDropper ; 
 + import net . minecraft . util . EnumActionResult ; 
 import net . minecraft . util . EnumHand ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . event . entity . player . PlayerInteractEvent ; 
 @ @ - 49 , 7 + 51 , 7 @ @ public class PlayerInteractEventTest 
 if ( ! ENABLE ) return ; 
 logger . info ( " HIT VEC : { } " , evt . getHitVec ( ) ) ; 
 
 - if ( evt . getItemStack ( ) ! = null ) 
 + if ( ! evt . getItemStack ( ) . isEmpty ( ) ) 
 { 
 if ( evt . getItemStack ( ) . getItem ( ) = = Items . GOLDEN _ PICKAXE ) 
 evt . setCanceled ( true ) ; / / Redstone should not activate and pick should not be able to dig anything 
 @ @ - 89 , 22 + 91 , 34 @ @ public class PlayerInteractEventTest 
 / / Case : Flint and steel in main hand on top of a TE will light a fire , not open the TE . 
 / / Note that if you do this on a chest , the f + s will fail , but then your off hand will open the chest 
 / / If you dual wield flints and steels and right click a chest nothing should happen 
 - if ( evt . getItemStack ( ) ! = null & & evt . getItemStack ( ) . getItem ( ) = = Items . FLINT _ AND _ STEEL ) 
 + if ( ! evt . getItemStack ( ) . isEmpty ( ) & & evt . getItemStack ( ) . getItem ( ) = = Items . FLINT _ AND _ STEEL ) 
 evt . setUseBlock ( Event . Result . DENY ) ; 
 
 / / Case : Painting in main hand 
 / / Opening a TE will also place a painting on the TE if possible 
 - if ( evt . getHand ( ) = = EnumHand . MAIN _ HAND & & evt . getItemStack ( ) ! = null & & evt . getItemStack ( ) . getItem ( ) = = Items . PAINTING ) { 
 + if ( evt . getHand ( ) = = EnumHand . MAIN _ HAND & & ! evt . getItemStack ( ) . isEmpty ( ) & & evt . getItemStack ( ) . getItem ( ) = = Items . PAINTING ) { 
 evt . setUseItem ( Event . Result . ALLOW ) ; 
 } 
 
 / / Spawn egg in main hand , block in offhand - > block should be placed 
 - / / Sword in main hand , spawn egg in offhand - > nothing should happen 
 - if ( evt . getItemStack ( ) ! = null & & evt . getItemStack ( ) . getItem ( ) = = Items . SPAWN _ EGG ) { 
 + if ( ! evt . getItemStack ( ) . isEmpty ( ) 
 + & & evt . getItemStack ( ) . getItem ( ) = = Items . SPAWN _ EGG 
 + & & evt . getHand ( ) = = EnumHand . MAIN _ HAND 
 + & & ! evt . getEntityPlayer ( ) . getHeldItemOffhand ( ) . isEmpty ( ) 
 + & & evt . getEntityPlayer ( ) . getHeldItemOffhand ( ) . getItem ( ) instanceof ItemBlock ) { 
 evt . setCanceled ( true ) ; 
 } 
 
 - 
 + / / Spawn egg in main hand , potion in offhand - > potion should NOT be thrown 
 + if ( ! evt . getItemStack ( ) . isEmpty ( ) 
 + & & evt . getItemStack ( ) . getItem ( ) = = Items . SPAWN _ EGG 
 + & & evt . getHand ( ) = = EnumHand . MAIN _ HAND 
 + & & ! evt . getEntityPlayer ( ) . getHeldItemOffhand ( ) . isEmpty ( ) 
 + & & evt . getEntityPlayer ( ) . getHeldItemOffhand ( ) . getItem ( ) = = Items . SPLASH _ POTION ) { 
 + evt . setCanceled ( true ) ; 
 + / / Fake spawn egg success so splash potion does not trigger 
 + evt . setCancellationResult ( EnumActionResult . SUCCESS ) ; 
 + } 
 } 
 
 @ SubscribeEvent 
 @ @ - 112 , 12 + 126 , 24 @ @ public class PlayerInteractEventTest 
 { 
 if ( ! ENABLE ) return ; 
 
 - / / Use survival mode 
 + / / Case : Ender pearl in main hand , block in offhand - > Block is NOT placed 
 + if ( ! evt . getItemStack ( ) . isEmpty ( ) 
 + & & evt . getItemStack ( ) . getItem ( ) = = Items . ENDER _ PEARL 
 + & & evt . getHand ( ) = = EnumHand . MAIN _ HAND 
 + & & ! evt . getEntityPlayer ( ) . getHeldItemOffhand ( ) . isEmpty ( ) 
 + & & evt . getEntityPlayer ( ) . getHeldItemOffhand ( ) . getItem ( ) instanceof ItemBlock ) 
 + { 
 + evt . setCanceled ( true ) ; 
 + evt . setCancellationResult ( EnumActionResult . SUCCESS ) ; / / We fake success on the ender pearl so block is not placed 
 + return ; 
 + } 
 + 
 / / Case : Ender pearl in main hand , bow in offhand with arrows in inv - > Bow should trigger 
 / / Case : Sword in main hand , ender pearl in offhand - > Nothing should happen 
 - 
 - if ( evt . getItemStack ( ) ! = null & & evt . getItemStack ( ) . getItem ( ) = = Items . ENDER _ PEARL ) 
 + if ( ! evt . getItemStack ( ) . isEmpty ( ) & & evt . getItemStack ( ) . getItem ( ) = = Items . ENDER _ PEARL ) 
 + { 
 evt . setCanceled ( true ) ; 
 + } 
 } 
 
 @ SubscribeEvent 
 @ @ - 126 , 17 + 152 , 27 @ @ public class PlayerInteractEventTest 
 if ( ! ENABLE ) return ; 
 logger . info ( " LOCAL POS : { } " , evt . getLocalPos ( ) ) ; 
 
 - if ( evt . getItemStack ( ) ! = null 
 + if ( ! evt . getItemStack ( ) . isEmpty ( ) 
 & & evt . getTarget ( ) instanceof EntityArmorStand 
 & & evt . getItemStack ( ) . getItem ( ) = = Items . IRON _ HELMET ) 
 evt . setCanceled ( true ) ; / / Should not be able to place iron helmet onto armor stand ( you will put it on instead ) 
 
 - if ( evt . getWorld ( ) . isRemote 
 + if ( ! evt . getItemStack ( ) . isEmpty ( ) 
 + & & evt . getTarget ( ) instanceof EntityArmorStand 
 + & & evt . getItemStack ( ) . getItem ( ) = = Items . GOLDEN _ HELMET ) 
 + { 
 + evt . setCanceled ( true ) ; 
 + evt . setCancellationResult ( EnumActionResult . SUCCESS ) ; 
 + / / Should not be able to place golden helmet onto armor stand 
 + / / However you will NOT put it on because we fake success on the armorstand . 
 + } 
 + 
 + if ( ! evt . getWorld ( ) . isRemote 
 & & evt . getTarget ( ) instanceof EntitySkeleton 
 & & evt . getLocalPos ( ) . yCoord > evt . getTarget ( ) . height / 2 . 0 ) 
 { 
 / / If we right click the upper half of a skeleton it dies . 
 - ( ( EntitySkeleton ) evt . getTarget ( ) ) . setDead ( ) ; 
 + evt . getTarget ( ) . setDead ( ) ; 
 evt . setCanceled ( true ) ; 
 } 
 } 
 @ @ - 146 , 10 + 182 , 18 @ @ public class PlayerInteractEventTest 
 { 
 if ( ! ENABLE ) return ; 
 
 - if ( evt . getItemStack ( ) ! = null & & ( evt . getTarget ( ) instanceof EntityHorse | | evt . getTarget ( ) instanceof EntityCreeper ) ) 
 + if ( ! evt . getItemStack ( ) . isEmpty ( ) & & evt . getTarget ( ) instanceof EntityHorse ) { 
 / / Should not be able to feed wild horses with golden apple ( you will start eating it in survival ) 
 - / / Should not be able to ignite creeper with F + S 
 - / / Applies to both hands 
 - evt . setCanceled ( true ) ; 
 + if ( evt . getItemStack ( ) . getItem ( ) = = Items . GOLDEN _ APPLE 
 + & & evt . getItemStack ( ) . getItemDamage ( ) = = 0 ) 
 + evt . setCanceled ( true ) ; 
 + / / Should not be able to feed wild horses with notch apple but you will NOT eat it 
 + if ( evt . getItemStack ( ) . getItem ( ) = = Items . GOLDEN _ APPLE 
 + & & evt . getItemStack ( ) . getItemDamage ( ) = = 1 ) 
 + { 
 + evt . setCanceled ( true ) ; 
 + evt . setCancellationResult ( EnumActionResult . SUCCESS ) ; 
 + } 
 + } 
 } 
 }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 index 5637ab8 . . eaf179b 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 @ @ - 152 , 7 + 152 , 15 @ @ 
 this . field _ 71100 _ bB . func _ 75112 _ a ( p _ 70037 _ 1 _ ) ; 
 this . field _ 71075 _ bZ . func _ 75095 _ b ( p _ 70037 _ 1 _ ) ; 
 
 - @ @ - 921 , 6 + 965 , 23 @ @ 
 + @ @ - 903 , 6 + 947 , 7 @ @ 
 + { 
 + super . func _ 70014 _ b ( p _ 70014 _ 1 _ ) ; 
 + p _ 70014 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 70014 _ 1 _ ) ; 
 + p _ 70014 _ 1 _ . func _ 74782 _ a ( " Inventory " , this . field _ 71071 _ by . func _ 70442 _ a ( new NBTTagList ( ) ) ) ; 
 + p _ 70014 _ 1 _ . func _ 74768 _ a ( " SelectedItemSlot " , this . field _ 71071 _ by . field _ 70461 _ c ) ; 
 + p _ 70014 _ 1 _ . func _ 74757 _ a ( " Sleeping " , this . field _ 71083 _ bS ) ; 
 + @ @ - 921 , 6 + 966 , 23 @ @ 
 p _ 70014 _ 1 _ . func _ 74757 _ a ( " SpawnForced " , this . field _ 82248 _ d ) ; 
 } 
 
 @ @ - 176 , 7 + 184 , 7 @ @ 
 this . field _ 71100 _ bB . func _ 75117 _ b ( p _ 70014 _ 1 _ ) ; 
 this . field _ 71075 _ bZ . func _ 75091 _ a ( p _ 70014 _ 1 _ ) ; 
 p _ 70014 _ 1 _ . func _ 74782 _ a ( " EnderItems " , this . field _ 71078 _ a . func _ 70487 _ g ( ) ) ; 
 - @ @ - 928 , 6 + 989 , 7 @ @ 
 + @ @ - 928 , 6 + 990 , 7 @ @ 
 
 public boolean func _ 70097 _ a ( DamageSource p _ 70097 _ 1 _ , float p _ 70097 _ 2 _ ) 
 { 
 @ @ - 184 , 7 + 192 , 7 @ @ 
 if ( this . func _ 180431 _ b ( p _ 70097 _ 1 _ ) ) 
 { 
 return false ; 
 - @ @ - 1006 , 6 + 1068 , 7 @ @ 
 + @ @ - 1006 , 6 + 1069 , 7 @ @ 
 if ( this . field _ 184627 _ bm . func _ 190926 _ b ( ) ) 
 { 
 EnumHand enumhand = this . func _ 184600 _ cs ( ) ; 
 @ @ - 192 , 7 + 200 , 7 @ @ 
 
 if ( enumhand = = EnumHand . MAIN _ HAND ) 
 { 
 - @ @ - 1041 , 7 + 1104 , 10 @ @ 
 + @ @ - 1041 , 7 + 1105 , 10 @ @ 
 { 
 if ( ! this . func _ 180431 _ b ( p _ 70665 _ 1 _ ) ) 
 { 
 @ @ - 204 , 7 + 212 , 7 @ @ 
 p _ 70665 _ 2 _ = this . func _ 70672 _ c ( p _ 70665 _ 1 _ , p _ 70665 _ 2 _ ) ; 
 float f = p _ 70665 _ 2 _ ; 
 p _ 70665 _ 2 _ = Math . max ( p _ 70665 _ 2 _ - this . func _ 110139 _ bj ( ) , 0 . 0F ) ; 
 - @ @ - 1111 , 6 + 1177 , 7 @ @ 
 + @ @ - 1111 , 6 + 1178 , 7 @ @ 
 } 
 else 
 { 
 @ @ - 212 , 7 + 220 , 7 @ @ 
 ItemStack itemstack = this . func _ 184586 _ b ( p _ 190775 _ 2 _ ) ; 
 ItemStack itemstack1 = itemstack . func _ 190926 _ b ( ) ? ItemStack . field _ 190927 _ a : itemstack . func _ 77946 _ l ( ) ; 
 
 - @ @ - 1120 , 7 + 1187 , 10 @ @ 
 + @ @ - 1120 , 7 + 1188 , 10 @ @ 
 { 
 itemstack . func _ 190920 _ e ( itemstack1 . func _ 190916 _ E ( ) ) ; 
 } 
 @ @ - 224 , 7 + 232 , 7 @ @ 
 return EnumActionResult . SUCCESS ; 
 } 
 else 
 - @ @ - 1136 , 6 + 1206 , 7 @ @ 
 + @ @ - 1136 , 6 + 1207 , 7 @ @ 
 { 
 if ( itemstack . func _ 190926 _ b ( ) & & ! this . field _ 71075 _ bZ . field _ 75098 _ d ) 
 { 
 @ @ - 232 , 7 + 240 , 7 @ @ 
 this . func _ 184611 _ a ( p _ 190775 _ 2 _ , ItemStack . field _ 190927 _ a ) ; 
 } 
 
 - @ @ - 1161 , 6 + 1232 , 7 @ @ 
 + @ @ - 1161 , 6 + 1233 , 7 @ @ 
 
 public void func _ 71059 _ n ( Entity p _ 71059 _ 1 _ ) 
 { 
 @ @ - 240 , 7 + 248 , 7 @ @ 
 if ( p _ 71059 _ 1 _ . func _ 70075 _ an ( ) ) 
 { 
 if ( ! p _ 71059 _ 1 _ . func _ 85031 _ j ( this ) ) 
 - @ @ - 1331 , 11 + 1403 , 13 @ @ 
 + @ @ - 1331 , 11 + 1404 , 13 @ @ 
 
 if ( ! itemstack1 . func _ 190926 _ b ( ) & & entity instanceof EntityLivingBase ) 
 { 
 @ @ - 254 , 7 + 262 , 7 @ @ 
 } 
 } 
 
 - @ @ - 1441 , 6 + 1515 , 8 @ @ 
 + @ @ - 1441 , 6 + 1516 , 8 @ @ 
 
 public EntityPlayer . SleepResult func _ 180469 _ a ( BlockPos p _ 180469 _ 1 _ ) 
 { 
 @ @ - 263 , 7 + 271 , 7 @ @ 
 EnumFacing enumfacing = ( EnumFacing ) this . field _ 70170 _ p . func _ 180495 _ p ( p _ 180469 _ 1 _ ) . func _ 177229 _ b ( BlockHorizontal . field _ 185512 _ D ) ; 
 
 if ( ! this . field _ 70170 _ p . field _ 72995 _ K ) 
 - @ @ - 1482 , 8 + 1558 , 9 @ @ 
 + @ @ - 1482 , 8 + 1559 , 9 @ @ 
 
 this . func _ 70105 _ a ( 0 . 2F , 0 . 2F ) ; 
 
 @ @ - 275 , 7 + 283 , 7 @ @ 
 float f1 = 0 . 5F + ( float ) enumfacing . func _ 82601 _ c ( ) * 0 . 4F ; 
 float f = 0 . 5F + ( float ) enumfacing . func _ 82599 _ e ( ) * 0 . 4F ; 
 this . func _ 175139 _ a ( enumfacing ) ; 
 - @ @ - 1530 , 13 + 1607 , 14 @ @ 
 + @ @ - 1530 , 13 + 1608 , 14 @ @ 
 
 public void func _ 70999 _ a ( boolean p _ 70999 _ 1 _ , boolean p _ 70999 _ 2 _ , boolean p _ 70999 _ 3 _ ) 
 { 
 @ @ - 293 , 7 + 301 , 7 @ @ 
 
 if ( blockpos = = null ) 
 { 
 - @ @ - 1545 , 6 + 1623 , 10 @ @ 
 + @ @ - 1545 , 6 + 1624 , 10 @ @ 
 
 this . func _ 70107 _ b ( ( double ) ( ( float ) blockpos . func _ 177958 _ n ( ) + 0 . 5F ) , ( double ) ( ( float ) blockpos . func _ 177956 _ o ( ) + 0 . 1F ) , ( double ) ( ( float ) blockpos . func _ 177952 _ p ( ) + 0 . 5F ) ) ; 
 } 
 @ @ - 304 , 7 + 312 , 7 @ @ 
 
 this . field _ 71083 _ bS = false ; 
 
 - @ @ - 1563 , 15 + 1645 , 16 @ @ 
 + @ @ - 1563 , 15 + 1646 , 16 @ @ 
 
 private boolean func _ 175143 _ p ( ) 
 { 
 @ @ - 324 , 7 + 332 , 7 @ @ 
 { 
 if ( ! p _ 180467 _ 2 _ ) 
 { 
 - @ @ - 1586 , 16 + 1669 , 17 @ @ 
 + @ @ - 1586 , 16 + 1670 , 17 @ @ 
 } 
 else 
 { 
 @ @ - 345 , 7 + 353 , 7 @ @ 
 
 switch ( enumfacing ) 
 { 
 - @ @ - 1635 , 16 + 1719 , 24 @ @ 
 + @ @ - 1635 , 16 + 1720 , 24 @ @ 
 
 public BlockPos func _ 180470 _ cg ( ) 
 { 
 @ @ - 372 , 7 + 380 , 7 @ @ 
 if ( p _ 180473 _ 1 _ ! = null ) 
 { 
 this . field _ 71077 _ c = p _ 180473 _ 1 _ ; 
 - @ @ - 1839 , 6 + 1931 , 10 @ @ 
 + @ @ - 1839 , 6 + 1932 , 10 @ @ 
 
 super . func _ 180430 _ e ( p _ 180430 _ 1 _ , p _ 180430 _ 2 _ ) ; 
 } 
 @ @ - 383 , 7 + 391 , 7 @ @ 
 } 
 
 protected void func _ 71061 _ d _ ( ) 
 - @ @ - 2039 , 6 + 2135 , 18 @ @ 
 + @ @ - 2039 , 6 + 2136 , 18 @ @ 
 this . field _ 175152 _ f = p _ 71049 _ 1 _ . field _ 175152 _ f ; 
 this . field _ 71078 _ a = p _ 71049 _ 1 _ . field _ 71078 _ a ; 
 this . func _ 184212 _ Q ( ) . func _ 187227 _ b ( field _ 184827 _ bp , p _ 71049 _ 1 _ . func _ 184212 _ Q ( ) . func _ 187225 _ a ( field _ 184827 _ bp ) ) ; 
 @ @ - 402 , 7 + 410 , 7 @ @ 
 } 
 
 protected boolean func _ 70041 _ e _ ( ) 
 - @ @ - 2137 , 7 + 2245 , 10 @ @ 
 + @ @ - 2137 , 7 + 2246 , 10 @ @ 
 
 public ITextComponent func _ 145748 _ c _ ( ) 
 { 
 @ @ - 414 , 7 + 422 , 7 @ @ 
 itextcomponent . func _ 150256 _ b ( ) . func _ 150241 _ a ( new ClickEvent ( ClickEvent . Action . SUGGEST _ COMMAND , " / msg " + this . func _ 70005 _ c _ ( ) + " " ) ) ; 
 itextcomponent . func _ 150256 _ b ( ) . func _ 150209 _ a ( this . func _ 174823 _ aP ( ) ) ; 
 itextcomponent . func _ 150256 _ b ( ) . func _ 179989 _ a ( this . func _ 70005 _ c _ ( ) ) ; 
 - @ @ - 2146 , 7 + 2257 , 7 @ @ 
 + @ @ - 2146 , 7 + 2258 , 7 @ @ 
 
 public float func _ 70047 _ e ( ) 
 { 
 @ @ - 423 , 7 + 431 , 7 @ @ 
 
 if ( this . func _ 70608 _ bn ( ) ) 
 { 
 - @ @ - 2362 , 6 + 2473 , 162 @ @ 
 + @ @ - 2362 , 6 + 2474 , 162 @ @ 
 return this . field _ 71075 _ bZ . field _ 75098 _ d & & this . func _ 70003 _ b ( 2 , " " ) ; 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch b / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch 
 new file mode 100644 
 index 0000000 . . ad8f719 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / util / datafix / DataFixesManager . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / util / datafix / DataFixesManager . java 
 + + + + . . / src - work / minecraft / net / minecraft / util / datafix / DataFixesManager . java 
 + @ @ - 158 , 6 + 158 , 7 @ @ 
 + public static DataFixer func _ 188279 _ a ( ) 
 + { 
 + DataFixer datafixer = new DataFixer ( 819 ) ; 
 + + datafixer = new net . minecraftforge . common . util . CompoundDataFixer ( datafixer ) ; 
 + WorldInfo . func _ 189967 _ a ( datafixer ) ; 
 + EntityPlayer . func _ 189806 _ a ( datafixer ) ; 
 + AnvilChunkLoader . func _ 189889 _ a ( datafixer ) ; 
 diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 index 5ac3cdd . . 22b5152 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 @ @ - 97 , 15 + 97 , 17 @ @ 
 } 
 } 
 } 
 - @ @ - 122 , 6 + 181 , 7 @ @ 
 + @ @ - 121 , 7 + 180 , 9 @ @ 
 + NBTTagCompound nbttagcompound1 = new NBTTagCompound ( ) ; 
 nbttagcompound . func _ 74782 _ a ( " Level " , nbttagcompound1 ) ; 
 nbttagcompound . func _ 74768 _ a ( " DataVersion " , 819 ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( nbttagcompound ) ; 
 this . func _ 75820 _ a ( p _ 75816 _ 2 _ , p _ 75816 _ 1 _ , nbttagcompound1 ) ; 
 + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . world . ChunkDataEvent . Save ( p _ 75816 _ 2 _ , nbttagcompound ) ) ; 
 this . func _ 75824 _ a ( p _ 75816 _ 2 _ . func _ 76632 _ l ( ) , nbttagcompound ) ; 
 } 
 catch ( Exception exception ) 
 - @ @ - 307 , 8 + 367 , 17 @ @ 
 + @ @ - 307 , 8 + 368 , 17 @ @ 
 
 if ( entity . func _ 70039 _ c ( nbttagcompound2 ) ) 
 { 
 @ @ - 123 , 7 + 125 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 318 , 8 + 387 , 17 @ @ 
 + @ @ - 318 , 8 + 388 , 17 @ @ 
 
 for ( TileEntity tileentity : p _ 75820 _ 1 _ . func _ 177434 _ r ( ) . values ( ) ) 
 { 
 @ @ - 141 , 7 + 143 , 7 @ @ 
 } 
 
 p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileEntities " , nbttaglist2 ) ; 
 - @ @ - 388 , 6 + 466 , 12 @ @ 
 + @ @ - 388 , 6 + 467 , 12 @ @ 
 chunk . func _ 76616 _ a ( p _ 75823 _ 2 _ . func _ 74770 _ j ( " Biomes " ) ) ; 
 } 
 
 @ @ - 154 , 7 + 156 , 7 @ @ 
 NBTTagList nbttaglist1 = p _ 75823 _ 2 _ . func _ 150295 _ c ( " Entities " , 10 ) ; 
 
 for ( int j1 = 0 ; j1 < nbttaglist1 . func _ 74745 _ c ( ) ; + + j1 ) 
 - @ @ - 431 , 8 + 515 , 6 @ @ 
 + @ @ - 431 , 8 + 516 , 6 @ @ 
 p _ 75823 _ 1 _ . func _ 180497 _ b ( new BlockPos ( nbttagcompound3 . func _ 74762 _ e ( " x " ) , nbttagcompound3 . func _ 74762 _ e ( " y " ) , nbttagcompound3 . func _ 74762 _ e ( " z " ) ) , block , nbttagcompound3 . func _ 74762 _ e ( " t " ) , nbttagcompound3 . func _ 74762 _ e ( " p " ) ) ; 
 } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch b / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch 
 new file mode 100644 
 index 0000000 . . 4e7e0db 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / world / gen / structure / template / Template . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / world / gen / structure / template / Template . java 
 + + + + . . / src - work / minecraft / net / minecraft / world / gen / structure / template / Template . java 
 + @ @ - 520 , 6 + 520 , 7 @ @ 
 + p _ 189552 _ 1 _ . func _ 74782 _ a ( " size " , this . func _ 186267 _ a ( new int [ ] { this . field _ 186272 _ c . func _ 177958 _ n ( ) , this . field _ 186272 _ c . func _ 177956 _ o ( ) , this . field _ 186272 _ c . func _ 177952 _ p ( ) } ) ) ; 
 + p _ 189552 _ 1 _ . func _ 74778 _ a ( " author " , this . field _ 186273 _ d ) ; 
 + p _ 189552 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 189552 _ 1 _ ) ; 
 + return p _ 189552 _ 1 _ ; 
 + } 
 + 
 diff - - git a / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch b / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch 
 index d3dbb53 . . e4a0e53 100644 
 - - - a / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / storage / WorldInfo . java . patch 
 @ @ - 8 , 7 + 8 , 15 @ @ 
 
 protected WorldInfo ( ) 
 { 
 - @ @ - 807 , 6 + 808 , 26 @ @ 
 + @ @ - 335 , 6 + 336 , 7 @ @ 
 + nbttagcompound . func _ 74757 _ a ( " Snapshot " , false ) ; 
 + p _ 76064 _ 1 _ . func _ 74782 _ a ( " Version " , nbttagcompound ) ; 
 + p _ 76064 _ 1 _ . func _ 74768 _ a ( " DataVersion " , 819 ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . getDataFixer ( ) . writeVersionData ( p _ 76064 _ 1 _ ) ; 
 + p _ 76064 _ 1 _ . func _ 74772 _ a ( " RandomSeed " , this . field _ 76100 _ a ) ; 
 + p _ 76064 _ 1 _ . func _ 74778 _ a ( " generatorName " , this . field _ 76098 _ b . func _ 77127 _ a ( ) ) ; 
 + p _ 76064 _ 1 _ . func _ 74768 _ a ( " generatorVersion " , this . field _ 76098 _ b . func _ 77131 _ c ( ) ) ; 
 + @ @ - 807 , 6 + 809 , 26 @ @ 
 } ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java 
 new file mode 100644 
 index 0000000 . . da32e17 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / common / util / CompoundDataFixer . java 
 @ @ - 0 , 0 + 1 , 190 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + package net . minecraftforge . common . util ; 
 + 
 + import java . util . List ; 
 + import java . util . Locale ; 
 + import java . util . Map ; 
 + import java . util . Map . Entry ; 
 + 
 + import com . google . common . collect . Lists ; 
 + import com . google . common . collect . Maps ; 
 + 
 + import net . minecraft . nbt . NBTTagCompound ; 
 + import net . minecraft . util . datafix . DataFixer ; 
 + import net . minecraft . util . datafix . FixTypes ; 
 + import net . minecraft . util . datafix . IDataWalker ; 
 + import net . minecraft . util . datafix . IFixType ; 
 + import net . minecraft . util . datafix . IFixableData ; 
 + 
 + public class CompoundDataFixer extends DataFixer 
 + { 
 + private final ModFixs vanilla ; 
 + private final Map < String , ModFixs > modFixers = Maps . newHashMap ( ) ; 
 + private final Map < IFixType , List < IDataWalker > > walkers = Maps . newHashMap ( ) ; 
 + 
 + public CompoundDataFixer ( DataFixer vanilla ) 
 + { 
 + super ( 0 ) ; 
 + this . vanilla = init ( " minecraft " , vanilla . version ) ; 
 + } 
 + 
 + @ Override 
 + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt ) 
 + { 
 + final Map < String , Integer > versions = getVersions ( nbt ) ; 
 + final int mcversion = versions . get ( " minecraft " ) = = null ? - 1 : versions . get ( " minecraft " ) ; 
 + final IDataFixerData holder = new IDataFixerData ( ) 
 + { 
 + @ Override 
 + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt , int version ) 
 + { 
 + for ( Entry < String , ModFixs > e : modFixers . entrySet ( ) ) 
 + { 
 + / / This is a potential performance hot spot . As it walks all the data for all 
 + / / of the fixers . . . But with the vanilla api there isn ' t a way to pass down 
 + / / the mod specific version numbers , so redundant . . but not hacky . . . 
 + / / Actually , this wont work as the data walkers take versions into account . . . 
 + ModFixs fixer = e . getValue ( ) ; 
 + int ver = getVersion ( e . getKey ( ) ) ; 
 + if ( ver < fixer . version ) 
 + { 
 + for ( IFixableData fix : fixer . getFixes ( type ) ) 
 + { 
 + if ( fix . getFixVersion ( ) > ver ) 
 + nbt = fix . fixTagCompound ( nbt ) ; 
 + } 
 + 
 + for ( IDataWalker walker : getWalkers ( type ) ) 
 + nbt = walker . process ( this , nbt , version ) ; / / We pass in the holder , in case a walker wants to know a mod version 
 + } 
 + } 
 + return nbt ; 
 + } 
 + 
 + @ Override 
 + public int getVersion ( String mod ) 
 + { 
 + Integer ret = versions . get ( mod ) ; 
 + return ret = = null ? - 1 : ret ; 
 + } 
 + } ; 
 + return holder . process ( type , nbt , mcversion ) ; 
 + } 
 + 
 + @ Override 
 + @ Deprecated / / MODDERS DO NOT CALL DIRECTLY ! Only use from DataWalker ! 
 + public NBTTagCompound process ( IFixType type , NBTTagCompound nbt , int mcversion ) 
 + { 
 + if ( type ! = FixTypes . OPTIONS ) / / Options are vanilla only 
 + throw new IllegalStateException ( " Do not call recursive process directly on DataFixer ! " ) ; 
 + 
 + for ( IFixableData fix : vanilla . getFixes ( type ) ) 
 + { 
 + if ( fix . getFixVersion ( ) > mcversion ) 
 + nbt = fix . fixTagCompound ( nbt ) ; 
 + } 
 + / / Options is a hack , and doesn ' t have any nested components 
 + / / for ( IDataWalker walker : getWalkers ( type ) ) 
 + / / nbt = walker . process ( this , nbt , version ) ; 
 + return nbt ; 
 + } 
 + 
 + private List < IDataWalker > getWalkers ( IFixType type ) 
 + { 
 + List < IDataWalker > ret = walkers . get ( type ) ; 
 + if ( ret = = null ) 
 + { 
 + ret = Lists . newArrayList ( ) ; 
 + walkers . put ( type , ret ) ; 
 + } 
 + return ret ; 
 + } 
 + 
 + @ Override 
 + @ Deprecated / / Modders do not use this , this will register you as vanilla . Use the ModID version below . 
 + public void registerFix ( IFixType type , IFixableData fixable ) 
 + { 
 + vanilla . registerFix ( type , fixable ) ; 
 + } 
 + 
 + 
 + @ Override 
 + @ Deprecated / / Modders do not use this , use add below , To better allow custom fix types . 
 + public void registerWalker ( FixTypes type , IDataWalker walker ) 
 + { 
 + registerWalkerAdd ( type , walker ) ; 
 + } 
 + 
 + @ Override 
 + public void registerWalkerAdd ( IFixType type , IDataWalker walker ) 
 + { 
 + getWalkers ( type ) . add ( walker ) ; 
 + } 
 + 
 + private void validateModId ( String mod ) 
 + { 
 + / / String current = Loader . instance ( ) . activeModContainer ( ) = = null ? " minecraft " : Loader . instance ( ) . activeModContainer ( ) . getModId ( ) ; 
 + / / Test active modid ? 
 + if ( ! mod . equals ( mod . toLowerCase ( Locale . ENGLISH ) ) ) 
 + throw new IllegalArgumentException ( " Mod ID is not lower case : " + mod ) ; 
 + if ( mod . length ( ) > 64 ) 
 + throw new IllegalArgumentException ( " Mod ID is to long : " + mod ) ; 
 + } 
 + 
 + / * * 
 + * Initialize your mod specific data fixer . 
 + * 
 + * @ param modid You mod id , must be lower case . 
 + * @ param version The current data version of your mod 
 + * / 
 + public ModFixs init ( String modid , int version ) 
 + { 
 + validateModId ( modid ) ; 
 + if ( modFixers . containsKey ( modid ) ) 
 + throw new IllegalStateException ( " Attempted to initalize DataFixer for " + modid + " twice " ) ; 
 + ModFixs ret = new ModFixs ( modid , version ) ; 
 + modFixers . put ( modid , ret ) ; 
 + return ret ; 
 + } 
 + 
 + private Map < String , Integer > getVersions ( NBTTagCompound nbt ) 
 + { 
 + Map < String , Integer > ret = Maps . newHashMap ( ) ; 
 + ret . put ( " minecraft " , nbt . hasKey ( " DataVersion " , 99 ) ? nbt . getInteger ( " DataVersion " ) : - 1 ) ; 
 + if ( nbt . hasKey ( " ForgeDataVersion " , 10 ) ) 
 + { 
 + NBTTagCompound sub = nbt . getCompoundTag ( " ForgeDataVersion " ) ; 
 + for ( String key : sub . getKeySet ( ) ) 
 + { 
 + ret . put ( key , sub . hasKey ( key , 99 ) ? sub . getInteger ( key ) : - 1 ) ; 
 + } 
 + } 
 + return ret ; 
 + } 
 + 
 + public void writeVersionData ( NBTTagCompound nbt ) 
 + { 
 + / / nbt . setInteger ( " DataVersion " , vanilla . version ) ; 
 + NBTTagCompound sub = new NBTTagCompound ( ) ; 
 + nbt . setTag ( " ForgeDataVersion " , sub ) ; 
 + for ( ModFixs mod : modFixers . values ( ) ) 
 + sub . setInteger ( mod . mod , mod . version ) ; 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / common / util / IDataFixerData . java b / src / main / java / net / minecraftforge / common / util / IDataFixerData . java 
 new file mode 100644 
 index 0000000 . . da6b05c 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / common / util / IDataFixerData . java 
 @ @ - 0 , 0 + 1 , 26 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + package net . minecraftforge . common . util ; 
 + 
 + import net . minecraft . util . datafix . IDataFixer ; 
 + 
 + public interface IDataFixerData extends IDataFixer 
 + { 
 + public int getVersion ( String mod ) ; 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / common / util / ModFixs . java b / src / main / java / net / minecraftforge / common / util / ModFixs . java 
 new file mode 100644 
 index 0000000 . . 2dc01f2 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / common / util / ModFixs . java 
 @ @ - 0 , 0 + 1 , 83 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + package net . minecraftforge . common . util ; 
 + 
 + import java . util . List ; 
 + import java . util . Map ; 
 + 
 + import org . apache . logging . log4j . LogManager ; 
 + import org . apache . logging . log4j . Logger ; 
 + 
 + import com . google . common . collect . Lists ; 
 + import com . google . common . collect . Maps ; 
 + 
 + import net . minecraft . util . datafix . IFixType ; 
 + import net . minecraft . util . datafix . IFixableData ; 
 + 
 + public class ModFixs 
 + { 
 + private static final Logger LOGGER = LogManager . getLogger ( ) ; 
 + final String mod ; 
 + final int version ; 
 + private final Map < IFixType , List < IFixableData > > fixes = Maps . newHashMap ( ) ; 
 + 
 + ModFixs ( String mod , int version ) 
 + { 
 + this . mod = mod ; 
 + this . version = version ; 
 + } 
 + 
 + public List < IFixableData > getFixes ( IFixType type ) 
 + { 
 + List < IFixableData > ret = this . fixes . get ( type ) ; 
 + if ( ret = = null ) 
 + { 
 + ret = Lists . newArrayList ( ) ; 
 + this . fixes . put ( type , ret ) ; 
 + } 
 + return ret ; 
 + } 
 + 
 + public void registerFix ( IFixType type , IFixableData fixer ) 
 + { 
 + List < IFixableData > list = getFixes ( type ) ; 
 + int ver = fixer . getFixVersion ( ) ; 
 + 
 + if ( ver > this . version ) 
 + { 
 + LOGGER . warn ( " [ { } ] Ignored fix registered for version : { } as the DataVersion of the game is : { } " , mod , ver , this . version ) ; 
 + return ; 
 + } 
 + 
 + if ( ! list . isEmpty ( ) & & list . get ( list . size ( ) - 1 ) . getFixVersion ( ) > ver ) 
 + { 
 + for ( int x = 0 ; x < list . size ( ) ; + + x ) 
 + { 
 + if ( list . get ( x ) . getFixVersion ( ) > ver ) 
 + { 
 + list . add ( x , fixer ) ; 
 + break ; 
 + } 
 + } 
 + } 
 + else 
 + list . add ( fixer ) ; 
 + } 
 + 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 index c796af8 . . a78247c 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 @ @ - 82 , 6 + 82 , 7 @ @ import net . minecraft . world . storage . SaveFormatOld ; 
 import net . minecraftforge . client . event . ModelRegistryEvent ; 
 import net . minecraftforge . common . ForgeModContainer ; 
 import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . common . util . CompoundDataFixer ; 
 import net . minecraftforge . fml . client . registry . RenderingRegistry ; 
 import net . minecraftforge . fml . common . DummyModContainer ; 
 import net . minecraftforge . fml . common . DuplicateModsFoundException ; 
 @ @ - 1060 , 4 + 1061 , 10 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 { 
 MinecraftForge . EVENT _ BUS . post ( new ModelRegistryEvent ( ) ) ; 
 } 
 + 
 + @ Override 
 + public CompoundDataFixer getDataFixer ( ) 
 + { 
 + return ( CompoundDataFixer ) this . client . getDataFixer ( ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 index d4863c7 . . 1411eda 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 @ @ - 57 , 6 + 57 , 7 @ @ import net . minecraft . world . storage . WorldInfo ; 
 import net . minecraftforge . client . model . animation . Animation ; 
 import net . minecraftforge . common . ForgeVersion ; 
 import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . common . util . CompoundDataFixer ; 
 import net . minecraftforge . fml . common . eventhandler . EventBus ; 
 import net . minecraftforge . fml . common . gameevent . InputEvent ; 
 import net . minecraftforge . fml . common . gameevent . PlayerEvent ; 
 @ @ - 751 , 4 + 752 , 9 @ @ public class FMLCommonHandler 
 { 
 sidedDelegate . fireSidedRegistryEvents ( ) ; 
 } 
 + 
 + public CompoundDataFixer getDataFixer ( ) 
 + { 
 + return ( CompoundDataFixer ) sidedDelegate . getDataFixer ( ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 index aea07ff . . 4cff064 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 @ @ - 27 , 6 + 27 , 7 @ @ import net . minecraft . network . INetHandler ; 
 import net . minecraft . network . NetworkManager ; 
 import net . minecraft . server . MinecraftServer ; 
 import net . minecraft . util . IThreadListener ; 
 + import net . minecraftforge . common . util . CompoundDataFixer ; 
 import net . minecraftforge . fml . common . eventhandler . EventBus ; 
 import net . minecraftforge . fml . relauncher . Side ; 
 
 @ @ - 77 , 4 + 78 , 6 @ @ public interface IFMLSidedHandler 
 void reloadRenderers ( ) ; 
 
 void fireSidedRegistryEvents ( ) ; 
 + 
 + CompoundDataFixer getDataFixer ( ) ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 index 54c25b1 . . fa4f6a5 100644 
 - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 @ @ - 35 , 6 + 35 , 7 @ @ import net . minecraft . server . dedicated . PendingCommand ; 
 import net . minecraft . util . IThreadListener ; 
 import net . minecraft . util . text . translation . LanguageMap ; 
 import net . minecraft . world . storage . SaveFormatOld ; 
 + import net . minecraftforge . common . util . CompoundDataFixer ; 
 import net . minecraftforge . fml . common . FMLCommonHandler ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . IFMLSidedHandler ; 
 @ @ - 339 , 4 + 340 , 9 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 { 
 / / NOOP 
 } 
 + @ Override 
 + public CompoundDataFixer getDataFixer ( ) 
 + { 
 + return ( CompoundDataFixer ) this . server . getDataFixer ( ) ; 
 + } 
 } 
 diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg 
 index 14df9d2 . . 586b68e 100644 
 - - - a / src / main / resources / forge _ at . cfg 
 + + + b / src / main / resources / forge _ at . cfg 
 @ @ - 287 , 4 + 287 , 7 @ @ public net . minecraft . potion . PotionHelper func _ 185204 _ a ( Lnet / minecraft / potion / Pot 
 
 # TileEntityHopper 
 public net . minecraft . tileentity . TileEntityHopper func _ 174914 _ o ( ) Z # mayTransfer 
 - public net . minecraft . tileentity . TileEntityHopper func _ 145896 _ c ( I ) V # setTransferCooldown 
 \ No newline at end of file 
 + public net . minecraft . tileentity . TileEntityHopper func _ 145896 _ c ( I ) V # setTransferCooldown 
 + 
 + # DataFixer 
 + public net . minecraft . util . datafix . DataFixer field _ 188262 _ d # version 
 \ No newline at end of file
