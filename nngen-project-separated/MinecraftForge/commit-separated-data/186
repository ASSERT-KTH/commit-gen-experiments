BLEU SCORE: 0.007210668640486208

TEST MSG: Fix AnvilChunkLoader not having access to chunk cap dispatcher
GENERATED MSG: Most requested feature of all time ? TileEntity init method called after it ' s ready to roll . remove all the if ( firstTicks )

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> index 434707f . . 6dbc926 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> @ @ - 17 , 3 + 17 , 33 @ @ <nl> } <nl> <nl> public Chunk ( World p _ i48703 _ 1 _ , ChunkPrimer p _ i48703 _ 2 _ , int p _ i48703 _ 3 _ , int p _ i48703 _ 4 _ ) { <nl> + @ @ - 1164 , 4 + 1165 , 29 @ @ <nl> + QUEUED , <nl> + CHECK ; <nl> + } <nl> + + <nl> + + / / FORGE start <nl> + + <nl> + + / * * <nl> + + * < strong > FOR INTERNAL USE ONLY < / strong > <nl> + + * < p > <nl> + + * Only public for use in { @ link AnvilChunkLoader } . <nl> + + * / <nl> + + @ java . lang . Deprecated <nl> + + @ javax . annotation . Nullable <nl> + + public final NBTTagCompound writeCapsToNBT ( ) <nl> + + { <nl> + + return this . serializeCaps ( ) ; <nl> + } <nl> + + <nl> + + / * * <nl> + + * < strong > FOR INTERNAL USE ONLY < / strong > <nl> + + * < p > <nl> + + * Only public for use in { @ link AnvilChunkLoader } . <nl> + + * / <nl> + + @ java . lang . Deprecated <nl> + + public final void readCapsFromNBT ( NBTTagCompound tag ) <nl> + + { <nl> + + this . deserializeCaps ( tag ) ; <nl> + + } <nl> + + } <nl> diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> index fad6efd . . 88c6d51 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> @ @ - 1 , 31 + 1 , 32 @ @ <nl> - - - a / net / minecraft / world / chunk / storage / AnvilChunkLoader . java <nl> + + + b / net / minecraft / world / chunk / storage / AnvilChunkLoader . java <nl> - @ @ - 445 , 7 + 445 , 19 @ @ <nl> + @ @ - 445 , 7 + 445 , 20 @ @ <nl> <nl> compound . setTag ( " Heightmaps " , nbttagcompound2 ) ; <nl> compound . setTag ( " Structures " , this . func _ 202160 _ a ( chunkIn . x , chunkIn . z , chunkIn . func _ 201609 _ c ( ) , chunkIn . func _ 201604 _ d ( ) ) ) ; <nl> + <nl> - + if ( chunkIn . getCapabilities ( ) ! = null ) <nl> + + try <nl> + { <nl> - + try <nl> + + final NBTTagCompound capTag = chunkIn . writeCapsToNBT ( ) ; <nl> + + if ( capTag ! = null ) <nl> + { <nl> - + compound . setTag ( " ForgeCaps " , chunkIn . getCapabilities ( ) . serializeNBT ( ) ) ; <nl> + + compound . setTag ( " ForgeCaps " , capTag ) ; <nl> } <nl> - + catch ( Exception exception ) <nl> - + { <nl> - + org . apache . logging . log4j . LogManager . getLogger ( ) . error ( " A capability provider has thrown an exception trying to write state . It will not persist . Report this to the mod author " , exception ) ; <nl> - + } <nl> + + } <nl> + + catch ( Exception exception ) <nl> + + { <nl> + + org . apache . logging . log4j . LogManager . getLogger ( ) . error ( " A capability provider has thrown an exception trying to write state . It will not persist . Report this to the mod author " , exception ) ; <nl> + } <nl> + } <nl> <nl> private Chunk readChunkFromNBT ( IWorld worldIn , NBTTagCompound compound ) { <nl> int i = compound . getInteger ( " xPos " ) ; <nl> - @ @ - 511 , 6 + 523 , 10 @ @ <nl> + @ @ - 511 , 6 + 524 , 10 @ @ <nl> chunk . setModified ( true ) ; <nl> } <nl> <nl> - + if ( chunk . getCapabilities ( ) ! = null & & compound . hasKey ( " ForgeCaps " ) ) { <nl> - + chunk . getCapabilities ( ) . deserializeNBT ( compound . getCompoundTag ( " ForgeCaps " ) ) ; <nl> + + if ( compound . hasKey ( " ForgeCaps " ) ) { <nl> + + chunk . readCapsFromNBT ( compound . getCompoundTag ( " ForgeCaps " ) ) ; <nl> + } <nl> + <nl> return chunk ;
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch <nl> index 5e2a3c3 . . ac86c28 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch <nl> @ @ - 54 , 7 + 54 , 7 @ @ <nl> public double func _ 145835 _ a ( double p _ 145835 _ 1 _ , double p _ 145835 _ 3 _ , double p _ 145835 _ 5 _ ) <nl> { <nl> double d0 = ( double ) this . field _ 174879 _ c . func _ 177958 _ n ( ) + 0 . 5D - p _ 145835 _ 1 _ ; <nl> - @ @ - 279 , 4 + 291 , 135 @ @ <nl> + @ @ - 279 , 4 + 291 , 146 @ @ <nl> func _ 145826 _ a ( TileEntityFlowerPot . class , " FlowerPot " ) ; <nl> func _ 145826 _ a ( TileEntityBanner . class , " Banner " ) ; <nl> } <nl> @ @ - 189 , 4 + 189 , 15 @ @ <nl> + this instanceof TileEntityMobSpawner | | <nl> + this instanceof TileEntitySign ; <nl> + } <nl> + + <nl> + + <nl> + + / * * <nl> + + * Called from the Chunk when this is first added to the world . Override instead of adding <nl> + + * if ( firstTick ) stuff in update . Happens after validate and after it has been placed into the Chunk tileEntity <nl> + + * map . <nl> + + * / <nl> + + public void onLoad ( ) <nl> + + { <nl> + + / / NOOP <nl> + + } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> index 2c8ef52 . . 1903a69 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> @ @ - 1 , 6 + 1 , 14 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / world / chunk / Chunk . java <nl> + + + . . / src - work / minecraft / net / minecraft / world / chunk / Chunk . java <nl> - @ @ - 167 , 7 + 167 , 7 @ @ <nl> + @ @ - 10 , 7 + 10 , 6 @ @ <nl> + import java . util . concurrent . Callable ; <nl> + import java . util . concurrent . ConcurrentLinkedQueue ; <nl> + import net . minecraft . block . Block ; <nl> + - import net . minecraft . block . ITileEntityProvider ; <nl> + import net . minecraft . block . material . Material ; <nl> + import net . minecraft . block . state . IBlockState ; <nl> + import net . minecraft . crash . CrashReport ; <nl> + @ @ - 167 , 7 + 166 , 7 @ @ <nl> { <nl> Block block = this . func _ 150810 _ a ( j , l - 1 , k ) ; <nl> <nl> @ @ - 9 , 7 + 17 , 7 @ @ <nl> { <nl> this . field _ 76634 _ f [ k < < 4 | j ] = l ; <nl> <nl> - @ @ - 440 , 12 + 440 , 12 @ @ <nl> + @ @ - 440 , 12 + 439 , 12 @ @ <nl> <nl> public int func _ 177437 _ b ( BlockPos p _ 177437 _ 1 _ ) <nl> { <nl> @ @ - 24 , 7 + 32 , 7 @ @ <nl> } <nl> <nl> private Block func _ 150810 _ a ( int p _ 150810 _ 1 _ , int p _ 150810 _ 2 _ , int p _ 150810 _ 3 _ ) <nl> - @ @ - 623 , 14 + 623 , 19 @ @ <nl> + @ @ - 623 , 14 + 622 , 19 @ @ <nl> <nl> extendedblockstorage . func _ 177484 _ a ( i , j & 15 , k , p _ 177436 _ 2 _ ) ; <nl> <nl> @ @ - 46 , 7 + 54 , 7 @ @ <nl> this . field _ 76637 _ e . func _ 175713 _ t ( p _ 177436 _ 1 _ ) ; <nl> } <nl> } <nl> - @ @ - 647 , 8 + 652 , 8 @ @ <nl> + @ @ - 647 , 8 + 651 , 8 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 57 , 7 + 65 , 7 @ @ <nl> <nl> if ( j1 > 0 ) <nl> { <nl> - @ @ - 668 , 28 + 673 , 18 @ @ <nl> + @ @ - 668 , 28 + 672 , 18 @ @ <nl> } <nl> } <nl> <nl> @ @ - 88 , 7 + 96 , 7 @ @ <nl> this . field _ 76637 _ e . func _ 175690 _ a ( p _ 177436 _ 1 _ , tileentity1 ) ; <nl> } <nl> <nl> - @ @ - 792 , 6 + 787 , 7 @ @ <nl> + @ @ - 792 , 6 + 786 , 7 @ @ <nl> k = this . field _ 76645 _ j . length - 1 ; <nl> } <nl> <nl> @ @ - 96 , 7 + 104 , 7 @ @ <nl> p _ 76612 _ 1 _ . field _ 70175 _ ag = true ; <nl> p _ 76612 _ 1 _ . field _ 70176 _ ah = this . field _ 76635 _ g ; <nl> p _ 76612 _ 1 _ . field _ 70162 _ ai = k ; <nl> - @ @ - 830 , 13 + 826 , 20 @ @ <nl> + @ @ - 830 , 13 + 825 , 20 @ @ <nl> private TileEntity func _ 177422 _ i ( BlockPos p _ 177422 _ 1 _ ) <nl> { <nl> Block block = this . func _ 177428 _ a ( p _ 177422 _ 1 _ ) ; <nl> @ @ - 118 , 7 + 126 , 7 @ @ <nl> if ( tileentity = = null ) <nl> { <nl> if ( p _ 177424 _ 2 _ = = Chunk . EnumCreateEntityType . IMMEDIATE ) <nl> - @ @ - 849 , 11 + 852 , 6 @ @ <nl> + @ @ - 849 , 11 + 851 , 6 @ @ <nl> this . field _ 177447 _ w . add ( p _ 177424 _ 1 _ ) ; <nl> } <nl> } <nl> @ @ - 130 , 7 + 138 , 7 @ @ <nl> <nl> return tileentity ; <nl> } <nl> - @ @ - 873 , 7 + 871 , 7 @ @ <nl> + @ @ - 873 , 7 + 870 , 7 @ @ <nl> p _ 177426 _ 2 _ . func _ 145834 _ a ( this . field _ 76637 _ e ) ; <nl> p _ 177426 _ 2 _ . func _ 174878 _ a ( p _ 177426 _ 1 _ ) ; <nl> <nl> @ @ - 139 , 6 + 147 , 14 @ @ <nl> { <nl> if ( this . field _ 150816 _ i . containsKey ( p _ 177426 _ 1 _ ) ) <nl> { <nl> + @ @ - 882 , 6 + 879 , 7 @ @ <nl> + <nl> + p _ 177426 _ 2 _ . func _ 145829 _ t ( ) ; <nl> + this . field _ 150816 _ i . put ( p _ 177426 _ 1 _ , p _ 177426 _ 2 _ ) ; <nl> + + p _ 177426 _ 2 _ . onLoad ( ) ; <nl> + } <nl> + } <nl> + <nl> @ @ - 910 , 8 + 908 , 9 @ @ <nl> entity . func _ 110123 _ P ( ) ; <nl> }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 index 434707f . . 6dbc926 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 @ @ - 17 , 3 + 17 , 33 @ @ 
 } 
 
 public Chunk ( World p _ i48703 _ 1 _ , ChunkPrimer p _ i48703 _ 2 _ , int p _ i48703 _ 3 _ , int p _ i48703 _ 4 _ ) { 
 + @ @ - 1164 , 4 + 1165 , 29 @ @ 
 + QUEUED , 
 + CHECK ; 
 + } 
 + + 
 + + / / FORGE start 
 + + 
 + + / * * 
 + + * < strong > FOR INTERNAL USE ONLY < / strong > 
 + + * < p > 
 + + * Only public for use in { @ link AnvilChunkLoader } . 
 + + * / 
 + + @ java . lang . Deprecated 
 + + @ javax . annotation . Nullable 
 + + public final NBTTagCompound writeCapsToNBT ( ) 
 + + { 
 + + return this . serializeCaps ( ) ; 
 + } 
 + + 
 + + / * * 
 + + * < strong > FOR INTERNAL USE ONLY < / strong > 
 + + * < p > 
 + + * Only public for use in { @ link AnvilChunkLoader } . 
 + + * / 
 + + @ java . lang . Deprecated 
 + + public final void readCapsFromNBT ( NBTTagCompound tag ) 
 + + { 
 + + this . deserializeCaps ( tag ) ; 
 + + } 
 + + } 
 diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 index fad6efd . . 88c6d51 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 @ @ - 1 , 31 + 1 , 32 @ @ 
 - - - a / net / minecraft / world / chunk / storage / AnvilChunkLoader . java 
 + + + b / net / minecraft / world / chunk / storage / AnvilChunkLoader . java 
 - @ @ - 445 , 7 + 445 , 19 @ @ 
 + @ @ - 445 , 7 + 445 , 20 @ @ 
 
 compound . setTag ( " Heightmaps " , nbttagcompound2 ) ; 
 compound . setTag ( " Structures " , this . func _ 202160 _ a ( chunkIn . x , chunkIn . z , chunkIn . func _ 201609 _ c ( ) , chunkIn . func _ 201604 _ d ( ) ) ) ; 
 + 
 - + if ( chunkIn . getCapabilities ( ) ! = null ) 
 + + try 
 + { 
 - + try 
 + + final NBTTagCompound capTag = chunkIn . writeCapsToNBT ( ) ; 
 + + if ( capTag ! = null ) 
 + { 
 - + compound . setTag ( " ForgeCaps " , chunkIn . getCapabilities ( ) . serializeNBT ( ) ) ; 
 + + compound . setTag ( " ForgeCaps " , capTag ) ; 
 } 
 - + catch ( Exception exception ) 
 - + { 
 - + org . apache . logging . log4j . LogManager . getLogger ( ) . error ( " A capability provider has thrown an exception trying to write state . It will not persist . Report this to the mod author " , exception ) ; 
 - + } 
 + + } 
 + + catch ( Exception exception ) 
 + + { 
 + + org . apache . logging . log4j . LogManager . getLogger ( ) . error ( " A capability provider has thrown an exception trying to write state . It will not persist . Report this to the mod author " , exception ) ; 
 + } 
 + } 
 
 private Chunk readChunkFromNBT ( IWorld worldIn , NBTTagCompound compound ) { 
 int i = compound . getInteger ( " xPos " ) ; 
 - @ @ - 511 , 6 + 523 , 10 @ @ 
 + @ @ - 511 , 6 + 524 , 10 @ @ 
 chunk . setModified ( true ) ; 
 } 
 
 - + if ( chunk . getCapabilities ( ) ! = null & & compound . hasKey ( " ForgeCaps " ) ) { 
 - + chunk . getCapabilities ( ) . deserializeNBT ( compound . getCompoundTag ( " ForgeCaps " ) ) ; 
 + + if ( compound . hasKey ( " ForgeCaps " ) ) { 
 + + chunk . readCapsFromNBT ( compound . getCompoundTag ( " ForgeCaps " ) ) ; 
 + } 
 + 
 return chunk ;

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch 
 index 5e2a3c3 . . ac86c28 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntity . java . patch 
 @ @ - 54 , 7 + 54 , 7 @ @ 
 public double func _ 145835 _ a ( double p _ 145835 _ 1 _ , double p _ 145835 _ 3 _ , double p _ 145835 _ 5 _ ) 
 { 
 double d0 = ( double ) this . field _ 174879 _ c . func _ 177958 _ n ( ) + 0 . 5D - p _ 145835 _ 1 _ ; 
 - @ @ - 279 , 4 + 291 , 135 @ @ 
 + @ @ - 279 , 4 + 291 , 146 @ @ 
 func _ 145826 _ a ( TileEntityFlowerPot . class , " FlowerPot " ) ; 
 func _ 145826 _ a ( TileEntityBanner . class , " Banner " ) ; 
 } 
 @ @ - 189 , 4 + 189 , 15 @ @ 
 + this instanceof TileEntityMobSpawner | | 
 + this instanceof TileEntitySign ; 
 + } 
 + + 
 + + 
 + + / * * 
 + + * Called from the Chunk when this is first added to the world . Override instead of adding 
 + + * if ( firstTick ) stuff in update . Happens after validate and after it has been placed into the Chunk tileEntity 
 + + * map . 
 + + * / 
 + + public void onLoad ( ) 
 + + { 
 + + / / NOOP 
 + + } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 index 2c8ef52 . . 1903a69 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 @ @ - 1 , 6 + 1 , 14 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / world / chunk / Chunk . java 
 + + + . . / src - work / minecraft / net / minecraft / world / chunk / Chunk . java 
 - @ @ - 167 , 7 + 167 , 7 @ @ 
 + @ @ - 10 , 7 + 10 , 6 @ @ 
 + import java . util . concurrent . Callable ; 
 + import java . util . concurrent . ConcurrentLinkedQueue ; 
 + import net . minecraft . block . Block ; 
 + - import net . minecraft . block . ITileEntityProvider ; 
 + import net . minecraft . block . material . Material ; 
 + import net . minecraft . block . state . IBlockState ; 
 + import net . minecraft . crash . CrashReport ; 
 + @ @ - 167 , 7 + 166 , 7 @ @ 
 { 
 Block block = this . func _ 150810 _ a ( j , l - 1 , k ) ; 
 
 @ @ - 9 , 7 + 17 , 7 @ @ 
 { 
 this . field _ 76634 _ f [ k < < 4 | j ] = l ; 
 
 - @ @ - 440 , 12 + 440 , 12 @ @ 
 + @ @ - 440 , 12 + 439 , 12 @ @ 
 
 public int func _ 177437 _ b ( BlockPos p _ 177437 _ 1 _ ) 
 { 
 @ @ - 24 , 7 + 32 , 7 @ @ 
 } 
 
 private Block func _ 150810 _ a ( int p _ 150810 _ 1 _ , int p _ 150810 _ 2 _ , int p _ 150810 _ 3 _ ) 
 - @ @ - 623 , 14 + 623 , 19 @ @ 
 + @ @ - 623 , 14 + 622 , 19 @ @ 
 
 extendedblockstorage . func _ 177484 _ a ( i , j & 15 , k , p _ 177436 _ 2 _ ) ; 
 
 @ @ - 46 , 7 + 54 , 7 @ @ 
 this . field _ 76637 _ e . func _ 175713 _ t ( p _ 177436 _ 1 _ ) ; 
 } 
 } 
 - @ @ - 647 , 8 + 652 , 8 @ @ 
 + @ @ - 647 , 8 + 651 , 8 @ @ 
 } 
 else 
 { 
 @ @ - 57 , 7 + 65 , 7 @ @ 
 
 if ( j1 > 0 ) 
 { 
 - @ @ - 668 , 28 + 673 , 18 @ @ 
 + @ @ - 668 , 28 + 672 , 18 @ @ 
 } 
 } 
 
 @ @ - 88 , 7 + 96 , 7 @ @ 
 this . field _ 76637 _ e . func _ 175690 _ a ( p _ 177436 _ 1 _ , tileentity1 ) ; 
 } 
 
 - @ @ - 792 , 6 + 787 , 7 @ @ 
 + @ @ - 792 , 6 + 786 , 7 @ @ 
 k = this . field _ 76645 _ j . length - 1 ; 
 } 
 
 @ @ - 96 , 7 + 104 , 7 @ @ 
 p _ 76612 _ 1 _ . field _ 70175 _ ag = true ; 
 p _ 76612 _ 1 _ . field _ 70176 _ ah = this . field _ 76635 _ g ; 
 p _ 76612 _ 1 _ . field _ 70162 _ ai = k ; 
 - @ @ - 830 , 13 + 826 , 20 @ @ 
 + @ @ - 830 , 13 + 825 , 20 @ @ 
 private TileEntity func _ 177422 _ i ( BlockPos p _ 177422 _ 1 _ ) 
 { 
 Block block = this . func _ 177428 _ a ( p _ 177422 _ 1 _ ) ; 
 @ @ - 118 , 7 + 126 , 7 @ @ 
 if ( tileentity = = null ) 
 { 
 if ( p _ 177424 _ 2 _ = = Chunk . EnumCreateEntityType . IMMEDIATE ) 
 - @ @ - 849 , 11 + 852 , 6 @ @ 
 + @ @ - 849 , 11 + 851 , 6 @ @ 
 this . field _ 177447 _ w . add ( p _ 177424 _ 1 _ ) ; 
 } 
 } 
 @ @ - 130 , 7 + 138 , 7 @ @ 
 
 return tileentity ; 
 } 
 - @ @ - 873 , 7 + 871 , 7 @ @ 
 + @ @ - 873 , 7 + 870 , 7 @ @ 
 p _ 177426 _ 2 _ . func _ 145834 _ a ( this . field _ 76637 _ e ) ; 
 p _ 177426 _ 2 _ . func _ 174878 _ a ( p _ 177426 _ 1 _ ) ; 
 
 @ @ - 139 , 6 + 147 , 14 @ @ 
 { 
 if ( this . field _ 150816 _ i . containsKey ( p _ 177426 _ 1 _ ) ) 
 { 
 + @ @ - 882 , 6 + 879 , 7 @ @ 
 + 
 + p _ 177426 _ 2 _ . func _ 145829 _ t ( ) ; 
 + this . field _ 150816 _ i . put ( p _ 177426 _ 1 _ , p _ 177426 _ 2 _ ) ; 
 + + p _ 177426 _ 2 _ . onLoad ( ) ; 
 + } 
 + } 
 + 
 @ @ - 910 , 8 + 908 , 9 @ @ 
 entity . func _ 110123 _ P ( ) ; 
 }
