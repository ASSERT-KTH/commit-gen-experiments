BLEU SCORE: 0.016932492841722675

TEST MSG: Reimplemented TileEntity and Entity Update Profiling in the / forge track command
GENERATED MSG: Clean up some formatting .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / world / World . java . patch b / patches / minecraft / net / minecraft / world / World . java . patch <nl> index 0afb51c . . ddf3c1a 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / World . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / World . java . patch <nl> @ @ - 402 , 7 + 402 , 16 @ @ <nl> throw new ReportedException ( crashreport ) ; <nl> } <nl> <nl> - @ @ - 1648 , 6 + 1759 , 12 @ @ <nl> + @ @ - 1641 , 13 + 1752 , 21 @ @ <nl> + { <nl> + try <nl> + { <nl> + + net . minecraftforge . server . timings . TimeTracker . ENTITY _ UPDATE . trackStart ( entity2 ) ; <nl> + this . func _ 72870 _ g ( entity2 ) ; <nl> + + net . minecraftforge . server . timings . TimeTracker . ENTITY _ UPDATE . trackEnd ( entity2 ) ; <nl> + } <nl> + catch ( Throwable throwable1 ) <nl> + { <nl> CrashReport crashreport1 = CrashReport . func _ 85055 _ a ( throwable1 , " Ticking entity " ) ; <nl> CrashReportCategory crashreportcategory1 = crashreport1 . func _ 85058 _ a ( " Entity being ticked " ) ; <nl> entity2 . func _ 85029 _ a ( crashreportcategory1 ) ; <nl> @ @ - 415 , 7 + 424 , 7 @ @ <nl> throw new ReportedException ( crashreport1 ) ; <nl> } <nl> } <nl> - @ @ - 1674 , 14 + 1791 , 23 @ @ <nl> + @ @ - 1674 , 14 + 1793 , 23 @ @ <nl> <nl> this . field _ 72984 _ F . func _ 76318 _ c ( " blockEntities " ) ; <nl> <nl> @ @ - 442 , 7 + 451 , 7 @ @ <nl> Iterator < TileEntity > iterator = this . field _ 175730 _ i . iterator ( ) ; <nl> <nl> while ( iterator . hasNext ( ) ) <nl> - @ @ - 1692 , 7 + 1818 , 7 @ @ <nl> + @ @ - 1692 , 7 + 1820 , 7 @ @ <nl> { <nl> BlockPos blockpos = tileentity . func _ 174877 _ v ( ) ; <nl> <nl> @ @ - 451 , 7 + 460 , 17 @ @ <nl> { <nl> try <nl> { <nl> - @ @ - 1708 , 6 + 1834 , 13 @ @ <nl> + @ @ - 1700 , 7 + 1828 , 9 @ @ <nl> + { <nl> + return String . valueOf ( ( Object ) TileEntity . func _ 190559 _ a ( tileentity . getClass ( ) ) ) ; <nl> + } ) ; <nl> + + net . minecraftforge . server . timings . TimeTracker . TILE _ ENTITY _ UPDATE . trackStart ( tileentity ) ; <nl> + ( ( ITickable ) tileentity ) . func _ 73660 _ a ( ) ; <nl> + + net . minecraftforge . server . timings . TimeTracker . TILE _ ENTITY _ UPDATE . trackEnd ( tileentity ) ; <nl> + this . field _ 72984 _ F . func _ 76319 _ b ( ) ; <nl> + } <nl> + catch ( Throwable throwable ) <nl> + @ @ - 1708 , 6 + 1838 , 13 @ @ <nl> CrashReport crashreport2 = CrashReport . func _ 85055 _ a ( throwable , " Ticking block entity " ) ; <nl> CrashReportCategory crashreportcategory2 = crashreport2 . func _ 85058 _ a ( " Block entity being ticked " ) ; <nl> tileentity . func _ 145828 _ a ( crashreportcategory2 ) ; <nl> @ @ - 465 , 7 + 484 , 7 @ @ <nl> throw new ReportedException ( crashreport2 ) ; <nl> } <nl> } <nl> - @ @ - 1720 , 7 + 1853 , 10 @ @ <nl> + @ @ - 1720 , 7 + 1857 , 10 @ @ <nl> <nl> if ( this . func _ 175667 _ e ( tileentity . func _ 174877 _ v ( ) ) ) <nl> { <nl> @ @ - 477 , 7 + 496 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 1764 , 12 + 1900 , 18 @ @ <nl> + @ @ - 1764 , 12 + 1904 , 18 @ @ <nl> <nl> public boolean func _ 175700 _ a ( TileEntity p _ 175700 _ 1 _ ) <nl> { <nl> @ @ - 496 , 7 + 515 , 7 @ @ <nl> <nl> if ( this . field _ 72995 _ K ) <nl> { <nl> - @ @ - 1785 , 6 + 1927 , 11 @ @ <nl> + @ @ - 1785 , 6 + 1931 , 11 @ @ <nl> { <nl> if ( this . field _ 147481 _ N ) <nl> { <nl> @ @ - 508 , 7 + 527 , 7 @ @ <nl> this . field _ 147484 _ a . addAll ( p _ 147448 _ 1 _ ) ; <nl> } <nl> else <nl> - @ @ - 1807 , 9 + 1954 , 13 @ @ <nl> + @ @ - 1807 , 9 + 1958 , 13 @ @ <nl> { <nl> int j2 = MathHelper . func _ 76128 _ c ( p _ 72866 _ 1 _ . field _ 70165 _ t ) ; <nl> int k2 = MathHelper . func _ 76128 _ c ( p _ 72866 _ 1 _ . field _ 70161 _ v ) ; <nl> @ @ - 524 , 7 + 543 , 7 @ @ <nl> { <nl> return ; <nl> } <nl> - @ @ - 1831 , 6 + 1982 , 7 @ @ <nl> + @ @ - 1831 , 6 + 1986 , 7 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 532 , 7 + 551 , 7 @ @ <nl> p _ 72866 _ 1 _ . func _ 70071 _ h _ ( ) ; <nl> } <nl> } <nl> - @ @ - 1914 , 7 + 2066 , 7 @ @ <nl> + @ @ - 1914 , 7 + 2070 , 7 @ @ <nl> { <nl> Entity entity4 = list . get ( j2 ) ; <nl> <nl> @ @ - 541 , 7 + 560 , 7 @ @ <nl> { <nl> return false ; <nl> } <nl> - @ @ - 2011 , 6 + 2163 , 11 @ @ <nl> + @ @ - 2011 , 6 + 2167 , 11 @ @ <nl> blockpos $ pooledmutableblockpos . func _ 185344 _ t ( ) ; <nl> return true ; <nl> } <nl> @ @ - 553 , 7 + 572 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 2050 , 6 + 2207 , 16 @ @ <nl> + @ @ - 2050 , 6 + 2211 , 16 @ @ <nl> IBlockState iblockstate1 = this . func _ 180495 _ p ( blockpos $ pooledmutableblockpos ) ; <nl> Block block = iblockstate1 . func _ 177230 _ c ( ) ; <nl> <nl> @ @ - 570 , 7 + 589 , 7 @ @ <nl> if ( iblockstate1 . func _ 185904 _ a ( ) = = p _ 72918 _ 2 _ ) <nl> { <nl> double d0 = ( double ) ( ( float ) ( i4 + 1 ) - BlockLiquid . func _ 149801 _ b ( ( ( Integer ) iblockstate1 . func _ 177229 _ b ( BlockLiquid . field _ 176367 _ b ) ) . intValue ( ) ) ) ; <nl> - @ @ - 2116 , 6 + 2283 , 7 @ @ <nl> + @ @ - 2116 , 6 + 2287 , 7 @ @ <nl> public Explosion func _ 72885 _ a ( @ Nullable Entity p _ 72885 _ 1 _ , double p _ 72885 _ 2 _ , double p _ 72885 _ 4 _ , double p _ 72885 _ 6 _ , float p _ 72885 _ 8 _ , boolean p _ 72885 _ 9 _ , boolean p _ 72885 _ 10 _ ) <nl> { <nl> Explosion explosion = new Explosion ( this , p _ 72885 _ 1 _ , p _ 72885 _ 2 _ , p _ 72885 _ 4 _ , p _ 72885 _ 6 _ , p _ 72885 _ 8 _ , p _ 72885 _ 9 _ , p _ 72885 _ 10 _ ) ; <nl> @ @ - 578 , 7 + 597 , 7 @ @ <nl> explosion . func _ 77278 _ a ( ) ; <nl> explosion . func _ 77279 _ a ( true ) ; <nl> return explosion ; <nl> - @ @ - 2238 , 6 + 2406 , 7 @ @ <nl> + @ @ - 2238 , 6 + 2410 , 7 @ @ <nl> <nl> public void func _ 175690 _ a ( BlockPos p _ 175690 _ 1 _ , @ Nullable TileEntity p _ 175690 _ 2 _ ) <nl> { <nl> @ @ - 586 , 7 + 605 , 7 @ @ <nl> if ( ! this . func _ 189509 _ E ( p _ 175690 _ 1 _ ) ) <nl> { <nl> if ( p _ 175690 _ 2 _ ! = null & & ! p _ 175690 _ 2 _ . func _ 145837 _ r ( ) ) <nl> - @ @ - 2245 , 6 + 2414 , 8 @ @ <nl> + @ @ - 2245 , 6 + 2418 , 8 @ @ <nl> if ( this . field _ 147481 _ N ) <nl> { <nl> p _ 175690 _ 2 _ . func _ 174878 _ a ( p _ 175690 _ 1 _ ) ; <nl> @ @ - 595 , 7 + 614 , 7 @ @ <nl> Iterator < TileEntity > iterator1 = this . field _ 147484 _ a . iterator ( ) ; <nl> <nl> while ( iterator1 . hasNext ( ) ) <nl> - @ @ - 2262 , 7 + 2433 , 8 @ @ <nl> + @ @ - 2262 , 7 + 2437 , 8 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 605 , 7 + 624 , 7 @ @ <nl> this . func _ 175700 _ a ( p _ 175690 _ 2 _ ) ; <nl> } <nl> } <nl> - @ @ - 2277 , 6 + 2449 , 8 @ @ <nl> + @ @ - 2277 , 6 + 2453 , 8 @ @ <nl> { <nl> tileentity2 . func _ 145843 _ s ( ) ; <nl> this . field _ 147484 _ a . remove ( tileentity2 ) ; <nl> @ @ - 614 , 7 + 633 , 7 @ @ <nl> } <nl> else <nl> { <nl> - @ @ - 2289 , 6 + 2463 , 7 @ @ <nl> + @ @ - 2289 , 6 + 2467 , 7 @ @ <nl> <nl> this . func _ 175726 _ f ( p _ 175713 _ 1 _ ) . func _ 177425 _ e ( p _ 175713 _ 1 _ ) ; <nl> } <nl> @ @ - 622 , 7 + 641 , 7 @ @ <nl> } <nl> <nl> public void func _ 147457 _ a ( TileEntity p _ 147457 _ 1 _ ) <nl> - @ @ - 2315 , 7 + 2490 , 7 @ @ <nl> + @ @ - 2315 , 7 + 2494 , 7 @ @ <nl> if ( chunk1 ! = null & & ! chunk1 . func _ 76621 _ g ( ) ) <nl> { <nl> IBlockState iblockstate1 = this . func _ 180495 _ p ( p _ 175677 _ 1 _ ) ; <nl> @ @ - 631 , 7 + 650 , 7 @ @ <nl> } <nl> else <nl> { <nl> - @ @ - 2338 , 6 + 2513 , 7 @ @ <nl> + @ @ - 2338 , 6 + 2517 , 7 @ @ <nl> { <nl> this . field _ 72985 _ G = p _ 72891 _ 1 _ ; <nl> this . field _ 72992 _ H = p _ 72891 _ 2 _ ; <nl> @ @ - 639 , 7 + 658 , 7 @ @ <nl> } <nl> <nl> public void func _ 72835 _ b ( ) <nl> - @ @ - 2347 , 6 + 2523 , 11 @ @ <nl> + @ @ - 2347 , 6 + 2527 , 11 @ @ <nl> <nl> protected void func _ 72947 _ a ( ) <nl> { <nl> @ @ - 651 , 7 + 670 , 7 @ @ <nl> if ( this . field _ 72986 _ A . func _ 76059 _ o ( ) ) <nl> { <nl> this . field _ 73004 _ o = 1 . 0F ; <nl> - @ @ - 2360 , 6 + 2541 , 11 @ @ <nl> + @ @ - 2360 , 6 + 2545 , 11 @ @ <nl> <nl> protected void func _ 72979 _ l ( ) <nl> { <nl> @ @ - 663 , 7 + 682 , 7 @ @ <nl> if ( this . field _ 73011 _ w . func _ 191066 _ m ( ) ) <nl> { <nl> if ( ! this . field _ 72995 _ K ) <nl> - @ @ - 2484 , 6 + 2670 , 11 @ @ <nl> + @ @ - 2484 , 6 + 2674 , 11 @ @ <nl> <nl> public boolean func _ 175670 _ e ( BlockPos p _ 175670 _ 1 _ , boolean p _ 175670 _ 2 _ ) <nl> { <nl> @ @ - 675 , 7 + 694 , 7 @ @ <nl> Biome biome = this . func _ 180494 _ b ( p _ 175670 _ 1 _ ) ; <nl> float f = biome . func _ 180626 _ a ( p _ 175670 _ 1 _ ) ; <nl> <nl> - @ @ - 2525 , 6 + 2716 , 11 @ @ <nl> + @ @ - 2525 , 6 + 2720 , 11 @ @ <nl> <nl> public boolean func _ 175708 _ f ( BlockPos p _ 175708 _ 1 _ , boolean p _ 175708 _ 2 _ ) <nl> { <nl> @ @ - 687 , 7 + 706 , 7 @ @ <nl> Biome biome = this . func _ 180494 _ b ( p _ 175708 _ 1 _ ) ; <nl> float f = biome . func _ 180626 _ a ( p _ 175708 _ 1 _ ) ; <nl> <nl> - @ @ - 2542 , 7 + 2738 , 7 @ @ <nl> + @ @ - 2542 , 7 + 2742 , 7 @ @ <nl> { <nl> IBlockState iblockstate1 = this . func _ 180495 _ p ( p _ 175708 _ 1 _ ) ; <nl> <nl> @ @ - 696 , 7 + 715 , 7 @ @ <nl> { <nl> return true ; <nl> } <nl> - @ @ - 2574 , 10 + 2770 , 11 @ @ <nl> + @ @ - 2574 , 10 + 2774 , 11 @ @ <nl> else <nl> { <nl> IBlockState iblockstate1 = this . func _ 180495 _ p ( p _ 175638 _ 1 _ ) ; <nl> @ @ - 711 , 7 + 730 , 7 @ @ <nl> { <nl> k2 = 1 ; <nl> } <nl> - @ @ - 2683 , 7 + 2880 , 8 @ @ <nl> + @ @ - 2683 , 7 + 2884 , 8 @ @ <nl> int k6 = k4 + enumfacing . func _ 96559 _ d ( ) ; <nl> int l6 = l4 + enumfacing . func _ 82599 _ e ( ) ; <nl> blockpos $ pooledmutableblockpos . func _ 181079 _ c ( j6 , k6 , l6 ) ; <nl> @ @ - 721 , 7 + 740 , 7 @ @ <nl> j5 = this . func _ 175642 _ b ( p _ 180500 _ 1 _ , blockpos $ pooledmutableblockpos ) ; <nl> <nl> if ( j5 = = i5 - i7 & & k2 < this . field _ 72994 _ J . length ) <nl> - @ @ - 2791 , 10 + 2989 , 10 @ @ <nl> + @ @ - 2791 , 10 + 2993 , 10 @ @ <nl> public List < Entity > func _ 175674 _ a ( @ Nullable Entity p _ 175674 _ 1 _ , AxisAlignedBB p _ 175674 _ 2 _ , @ Nullable Predicate < ? super Entity > p _ 175674 _ 3 _ ) <nl> { <nl> List < Entity > list = Lists . < Entity > newArrayList ( ) ; <nl> @ @ - 736 , 7 + 755 , 7 @ @ <nl> <nl> for ( int j3 = j2 ; j3 < = k2 ; + + j3 ) <nl> { <nl> - @ @ - 2847 , 10 + 3045 , 10 @ @ <nl> + @ @ - 2847 , 10 + 3049 , 10 @ @ <nl> <nl> public < T extends Entity > List < T > func _ 175647 _ a ( Class < ? extends T > p _ 175647 _ 1 _ , AxisAlignedBB p _ 175647 _ 2 _ , @ Nullable Predicate < ? super T > p _ 175647 _ 3 _ ) <nl> { <nl> @ @ - 751 , 7 + 770 , 7 @ @ <nl> List < T > list = Lists . < T > newArrayList ( ) ; <nl> <nl> for ( int j3 = j2 ; j3 < k2 ; + + j3 ) <nl> - @ @ - 2930 , 11 + 3128 , 13 @ @ <nl> + @ @ - 2930 , 11 + 3132 , 13 @ @ <nl> <nl> public void func _ 175650 _ b ( Collection < Entity > p _ 175650 _ 1 _ ) <nl> { <nl> @ @ - 768 , 7 + 787 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 2958 , 7 + 3158 , 7 @ @ <nl> + @ @ - 2958 , 7 + 3162 , 7 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 777 , 7 + 796 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 3042 , 7 + 3242 , 7 @ @ <nl> + @ @ - 3042 , 7 + 3246 , 7 @ @ <nl> public int func _ 175651 _ c ( BlockPos p _ 175651 _ 1 _ , EnumFacing p _ 175651 _ 2 _ ) <nl> { <nl> IBlockState iblockstate1 = this . func _ 180495 _ p ( p _ 175651 _ 1 _ ) ; <nl> @ @ - 786 , 7 + 805 , 7 @ @ <nl> } <nl> <nl> public boolean func _ 175640 _ z ( BlockPos p _ 175640 _ 1 _ ) <nl> - @ @ - 3208 , 6 + 3408 , 8 @ @ <nl> + @ @ - 3208 , 6 + 3412 , 8 @ @ <nl> d2 * = ( ( Double ) MoreObjects . firstNonNull ( p _ 184150 _ 11 _ . apply ( entityplayer1 ) , Double . valueOf ( 1 . 0D ) ) ) . doubleValue ( ) ; <nl> } <nl> <nl> @ @ - 795 , 7 + 814 , 7 @ @ <nl> if ( ( p _ 184150 _ 9 _ < 0 . 0D | | Math . abs ( entityplayer1 . field _ 70163 _ u - p _ 184150 _ 3 _ ) < p _ 184150 _ 9 _ * p _ 184150 _ 9 _ ) & & ( p _ 184150 _ 7 _ < 0 . 0D | | d1 < d2 * d2 ) & & ( d0 = = - 1 . 0D | | d1 < d0 ) ) <nl> { <nl> d0 = d1 ; <nl> - @ @ - 3269 , 7 + 3471 , 7 @ @ <nl> + @ @ - 3269 , 7 + 3475 , 7 @ @ <nl> <nl> public long func _ 72905 _ C ( ) <nl> { <nl> @ @ - 804 , 7 + 823 , 7 @ @ <nl> } <nl> <nl> public long func _ 82737 _ E ( ) <nl> - @ @ - 3279 , 17 + 3481 , 17 @ @ <nl> + @ @ - 3279 , 17 + 3485 , 17 @ @ <nl> <nl> public long func _ 72820 _ D ( ) <nl> { <nl> @ @ - 825 , 7 + 844 , 7 @ @ <nl> <nl> if ( ! this . func _ 175723 _ af ( ) . func _ 177746 _ a ( blockpos1 ) ) <nl> { <nl> - @ @ - 3301 , 7 + 3503 , 7 @ @ <nl> + @ @ - 3301 , 7 + 3507 , 7 @ @ <nl> <nl> public void func _ 175652 _ B ( BlockPos p _ 175652 _ 1 _ ) <nl> { <nl> @ @ - 834 , 7 + 853 , 7 @ @ <nl> } <nl> <nl> @ SideOnly ( Side . CLIENT ) <nl> - @ @ - 3321 , 12 + 3523 , 18 @ @ <nl> + @ @ - 3321 , 12 + 3527 , 18 @ @ <nl> <nl> if ( ! this . field _ 72996 _ f . contains ( p _ 72897 _ 1 _ ) ) <nl> { <nl> @ @ - 853 , 7 + 872 , 7 @ @ <nl> return true ; <nl> } <nl> <nl> - @ @ - 3428 , 8 + 3636 , 7 @ @ <nl> + @ @ - 3428 , 8 + 3640 , 7 @ @ <nl> <nl> public boolean func _ 180502 _ D ( BlockPos p _ 180502 _ 1 _ ) <nl> { <nl> @ @ - 863 , 7 + 882 , 7 @ @ <nl> } <nl> <nl> @ Nullable <nl> - @ @ - 3490 , 12 + 3697 , 12 @ @ <nl> + @ @ - 3490 , 12 + 3701 , 12 @ @ <nl> <nl> public int func _ 72800 _ K ( ) <nl> { <nl> @ @ - 878 , 7 + 897 , 7 @ @ <nl> } <nl> <nl> public Random func _ 72843 _ D ( int p _ 72843 _ 1 _ , int p _ 72843 _ 2 _ , int p _ 72843 _ 3 _ ) <nl> - @ @ - 3539 , 7 + 3746 , 7 @ @ <nl> + @ @ - 3539 , 7 + 3750 , 7 @ @ <nl> @ SideOnly ( Side . CLIENT ) <nl> public double func _ 72919 _ O ( ) <nl> { <nl> @ @ - 887 , 7 + 906 , 7 @ @ <nl> } <nl> <nl> public void func _ 175715 _ c ( int p _ 175715 _ 1 _ , BlockPos p _ 175715 _ 2 _ , int p _ 175715 _ 3 _ ) <nl> - @ @ - 3573 , 7 + 3780 , 7 @ @ <nl> + @ @ - 3573 , 7 + 3784 , 7 @ @ <nl> <nl> public void func _ 175666 _ e ( BlockPos p _ 175666 _ 1 _ , Block p _ 175666 _ 2 _ ) <nl> { <nl> @ @ - 896 , 7 + 915 , 7 @ @ <nl> { <nl> BlockPos blockpos1 = p _ 175666 _ 1 _ . func _ 177972 _ a ( enumfacing ) ; <nl> <nl> - @ @ - 3581 , 18 + 3788 , 15 @ @ <nl> + @ @ - 3581 , 18 + 3792 , 15 @ @ <nl> { <nl> IBlockState iblockstate1 = this . func _ 180495 _ p ( blockpos1 ) ; <nl> <nl> @ @ - 919 , 7 + 938 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 3658 , 6 + 3862 , 124 @ @ <nl> + @ @ - 3658 , 6 + 3866 , 124 @ @ <nl> return j2 > = - 128 & & j2 < = 128 & & k2 > = - 128 & & k2 < = 128 ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java b / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java <nl> index 53a7372 . . 698a183 100644 <nl> - - - a / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java <nl> + + + b / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java <nl> @ @ - 20 , 34 + 20 , 54 @ @ <nl> package net . minecraftforge . server ; <nl> <nl> import java . lang . ref . WeakReference ; <nl> - import java . util . Arrays ; <nl> import java . util . Map ; <nl> - import java . util . Map . Entry ; <nl> <nl> import com . google . common . collect . ImmutableMap ; <nl> - import com . google . common . collect . ImmutableMap . Builder ; <nl> import com . google . common . collect . MapMaker ; <nl> <nl> import net . minecraft . entity . Entity ; <nl> import net . minecraft . tileentity . TileEntity ; <nl> + import net . minecraftforge . server . timings . TimeTracker ; <nl> <nl> + / * * <nl> + * @ deprecated To be removed in 1 . 13 - Implementation has been moved <nl> + * @ see net . minecraftforge . server . timings . TimeTracker <nl> + * / <nl> + @ Deprecated <nl> public class ForgeTimeTracker { <nl> + / * * <nl> + * @ deprecated To be removed in 1 . 13 - Implementation has been moved <nl> + * @ see net . minecraftforge . server . timings . TimeTracker <nl> + * / <nl> + @ Deprecated <nl> public static boolean tileEntityTracking ; <nl> + <nl> + / * * <nl> + * @ deprecated To be removed in 1 . 13 - Implementation has been moved <nl> + * @ see net . minecraftforge . server . timings . TimeTracker <nl> + * / <nl> + @ Deprecated <nl> public static int tileEntityTrackingDuration ; <nl> + <nl> + / * * <nl> + * @ deprecated To be removed in 1 . 13 - Implementation has been moved <nl> + * @ see net . minecraftforge . server . timings . TimeTracker <nl> + * / <nl> + @ Deprecated <nl> public static long tileEntityTrackingTime ; <nl> - <nl> + <nl> private Map < TileEntity , int [ ] > tileEntityTimings ; <nl> private WeakReference < TileEntity > tile ; <nl> - <nl> + <nl> private static final ForgeTimeTracker INSTANCE = new ForgeTimeTracker ( ) ; <nl> <nl> / * not implemented <nl> private WeakReference < Entity > entity ; <nl> private Map < Entity , int [ ] > entityTimings ; <nl> * / <nl> - <nl> + <nl> private long timing ; <nl> - <nl> + <nl> private ForgeTimeTracker ( ) <nl> { <nl> MapMaker mm = new MapMaker ( ) ; <nl> @ @ - 55 , 7 + 75 , 7 @ @ public class ForgeTimeTracker { <nl> tileEntityTimings = mm . makeMap ( ) ; <nl> / / entityTimings = mm . makeMap ( ) ; <nl> } <nl> - <nl> + <nl> <nl> private void trackTileStart ( TileEntity tileEntity , long nanoTime ) <nl> { <nl> @ @ - 67 , 7 + 87 , 7 @ @ public class ForgeTimeTracker { <nl> { <nl> tileEntityTracking = false ; <nl> tileEntityTrackingTime = 0 ; <nl> - <nl> + <nl> return ; <nl> } <nl> tile = new WeakReference < TileEntity > ( tileEntity ) ; <nl> @ @ - 88 , 42 + 108 , 61 @ @ public class ForgeTimeTracker { <nl> timings [ idx ] = ( int ) ( nanoTime - timing ) ; <nl> } <nl> <nl> + / * * <nl> + * @ deprecated To be removed in 1 . 13 - Implementation has been moved <nl> + * @ see TimeTracker # getTimingData ( ) <nl> + * / <nl> + @ Deprecated <nl> public static ImmutableMap < TileEntity , int [ ] > getTileTimings ( ) <nl> { <nl> return INSTANCE . buildImmutableTileEntityTimingMap ( ) ; <nl> } <nl> - <nl> + <nl> private ImmutableMap < TileEntity , int [ ] > buildImmutableTileEntityTimingMap ( ) <nl> { <nl> - Builder < TileEntity , int [ ] > builder = ImmutableMap . builder ( ) ; <nl> - for ( Entry < TileEntity , int [ ] > entry : tileEntityTimings . entrySet ( ) ) <nl> - { <nl> - builder . put ( entry . getKey ( ) , Arrays . copyOfRange ( entry . getValue ( ) , 0 , 100 ) ) ; <nl> - } <nl> + ImmutableMap . Builder < TileEntity , int [ ] > builder = new ImmutableMap . Builder < > ( ) ; <nl> + TimeTracker . TILE _ ENTITY _ UPDATE . getTimingData ( ) . stream ( ) <nl> + . filter ( t - > t . getObject ( ) . get ( ) ! = null ) . forEach ( e - > builder . put ( e . getObject ( ) . get ( ) , e . getRawTimingData ( ) ) ) ; <nl> return builder . build ( ) ; <nl> } <nl> <nl> - <nl> + / * * <nl> + * @ deprecated To be removed in 1 . 13 - Implementation has been moved <nl> + * @ see TimeTracker # trackStart ( Object ) <nl> + * / <nl> + @ Deprecated <nl> public static void trackStart ( TileEntity tileEntity ) <nl> { <nl> - if ( ! tileEntityTracking ) return ; <nl> - INSTANCE . trackTileStart ( tileEntity , System . nanoTime ( ) ) ; <nl> + TimeTracker . TILE _ ENTITY _ UPDATE . trackStart ( tileEntity ) ; <nl> } <nl> <nl> + / * * <nl> + * @ deprecated To be removed in 1 . 13 - Implementation has been moved <nl> + * @ see TimeTracker # trackEnd ( Object ) <nl> + * / <nl> + @ Deprecated <nl> public static void trackEnd ( TileEntity tileEntity ) <nl> { <nl> - if ( ! tileEntityTracking ) return ; <nl> - INSTANCE . trackTileEnd ( tileEntity , System . nanoTime ( ) ) ; <nl> + TimeTracker . TILE _ ENTITY _ UPDATE . trackEnd ( tileEntity ) ; <nl> } <nl> <nl> + / * * <nl> + * @ deprecated To be removed in 1 . 13 - Implementation has been moved <nl> + * @ see TimeTracker # trackStart ( Object ) <nl> + * / <nl> + @ Deprecated <nl> public static void trackStart ( Entity par1Entity ) <nl> { <nl> - <nl> } <nl> <nl> + / * * <nl> + * @ deprecated To be removed in 1 . 13 - Implementation has been moved <nl> + * @ see TimeTracker # trackEnd ( Object ) <nl> + * / <nl> + @ Deprecated <nl> public static void trackEnd ( Entity par1Entity ) <nl> { <nl> - <nl> + <nl> } <nl> <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / server / command / CommandTrack . java b / src / main / java / net / minecraftforge / server / command / CommandTrack . java <nl> index fd3e4f8 . . a5b0a22 100644 <nl> - - - a / src / main / java / net / minecraftforge / server / command / CommandTrack . java <nl> + + + b / src / main / java / net / minecraftforge / server / command / CommandTrack . java <nl> @ @ - 19 , 19 + 19 , 42 @ @ <nl> package net . minecraftforge . server . command ; <nl> <nl> import javax . annotation . Nullable ; <nl> + import java . text . DecimalFormat ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> import java . util . Collections ; <nl> + import java . util . Comparator ; <nl> import java . util . List ; <nl> <nl> import net . minecraft . command . CommandBase ; <nl> import net . minecraft . command . CommandException ; <nl> import net . minecraft . command . ICommandSender ; <nl> import net . minecraft . command . WrongUsageException ; <nl> + import net . minecraft . entity . Entity ; <nl> import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . tileentity . TileEntity ; <nl> + import net . minecraft . util . ResourceLocation ; <nl> import net . minecraft . util . math . BlockPos ; <nl> - import net . minecraftforge . server . ForgeTimeTracker ; <nl> + import net . minecraft . util . text . ITextComponent ; <nl> + import net . minecraft . world . DimensionType ; <nl> + import net . minecraftforge . common . DimensionManager ; <nl> + import net . minecraftforge . server . timings . ForgeTimings ; <nl> + import net . minecraftforge . server . timings . TimeTracker ; <nl> <nl> - class CommandTrack extends CommandBase <nl> + class CommandTrack extends CommandTreeBase <nl> { <nl> + <nl> + private static final DecimalFormat TIME _ FORMAT = new DecimalFormat ( " # # # # # 0 . 00 " ) ; <nl> + <nl> + public CommandTrack ( ) <nl> + { <nl> + addSubcommand ( new StartTrackingCommand ( ) ) ; <nl> + addSubcommand ( new ResetTrackingCommand ( ) ) ; <nl> + addSubcommand ( new TrackResultsTileEntity ( ) ) ; <nl> + addSubcommand ( new TrackResultsEntity ( ) ) ; <nl> + addSubcommand ( new CommandTreeHelp ( this ) ) ; <nl> + } <nl> + <nl> @ Override <nl> public String getName ( ) <nl> { <nl> @ @ - 47 , 38 + 70 , 289 @ @ class CommandTrack extends CommandBase <nl> @ Override <nl> public String getUsage ( ICommandSender sender ) <nl> { <nl> - return " commands . forge . usage . tracking " ; <nl> + return " commands . forge . tracking . usage " ; <nl> } <nl> <nl> - @ Override <nl> - public void execute ( MinecraftServer server , ICommandSender sender , String [ ] args ) throws CommandException <nl> + private static class StartTrackingCommand extends CommandBase <nl> { <nl> - if ( args . length ! = 2 ) <nl> + <nl> + @ Override <nl> + public void execute ( MinecraftServer server , ICommandSender sender , String [ ] args ) throws CommandException <nl> + { <nl> + if ( args . length ! = 2 ) <nl> + { <nl> + throw new WrongUsageException ( getUsage ( sender ) ) ; <nl> + } <nl> + String type = args [ 0 ] ; <nl> + int duration = parseInt ( args [ 1 ] , 1 , 60 ) ; <nl> + if ( " te " . equals ( type ) ) <nl> + { <nl> + TimeTracker . TILE _ ENTITY _ UPDATE . reset ( ) ; <nl> + TimeTracker . TILE _ ENTITY _ UPDATE . enable ( duration ) ; <nl> + sender . sendMessage ( TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . te . enabled " , duration ) ) ; <nl> + } <nl> + else if ( " entity " . equals ( type ) ) <nl> + { <nl> + TimeTracker . ENTITY _ UPDATE . reset ( ) ; <nl> + TimeTracker . ENTITY _ UPDATE . enable ( duration ) ; <nl> + sender . sendMessage ( TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . entity . enabled " , duration ) ) ; <nl> + } <nl> + else <nl> + { <nl> + throw new WrongUsageException ( getUsage ( sender ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + public List < String > getTabCompletions ( MinecraftServer server , ICommandSender sender , String [ ] args , @ Nullable BlockPos targetPos ) <nl> + { <nl> + return Arrays . asList ( " te " , " entity " ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getName ( ) <nl> { <nl> - throw new WrongUsageException ( " commands . forge . usage . tracking " ) ; <nl> + return " start " ; <nl> } <nl> - String type = args [ 0 ] ; <nl> - int duration = parseInt ( args [ 1 ] , 1 , 60 ) ; <nl> <nl> - if ( " te " . equals ( type ) ) <nl> + @ Override <nl> + public int getRequiredPermissionLevel ( ) <nl> { <nl> - ForgeTimeTracker . tileEntityTrackingDuration = duration ; <nl> - ForgeTimeTracker . tileEntityTracking = true ; <nl> - sender . sendMessage ( TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . te . enabled " , duration ) ) ; <nl> + return 2 ; <nl> } <nl> - else <nl> + <nl> + @ Override <nl> + public String getUsage ( ICommandSender sender ) <nl> { <nl> - throw new WrongUsageException ( " commands . forge . usage . tracking " ) ; <nl> + return " commands . forge . tracking . start . usage " ; <nl> } <nl> } <nl> <nl> - @ Override <nl> - public List < String > getTabCompletions ( MinecraftServer server , ICommandSender sender , String [ ] args , @ Nullable BlockPos targetPos ) <nl> + private static class ResetTrackingCommand extends CommandBase <nl> { <nl> - if ( args . length = = 1 ) <nl> + @ Override <nl> + public String getName ( ) <nl> + { <nl> + return " reset " ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getUsage ( ICommandSender sender ) <nl> + { <nl> + return " commands . forge . tracking . reset . usage " ; <nl> + } <nl> + <nl> + @ Override <nl> + public int getRequiredPermissionLevel ( ) <nl> + { <nl> + return 2 ; <nl> + } <nl> + <nl> + @ Override <nl> + public void execute ( MinecraftServer server , ICommandSender sender , String [ ] args ) throws CommandException <nl> + { <nl> + if ( args . length ! = 1 ) <nl> + { <nl> + throw new WrongUsageException ( getUsage ( sender ) ) ; <nl> + } <nl> + String type = args [ 0 ] ; <nl> + if ( " te " . equals ( type ) ) <nl> + { <nl> + TimeTracker . TILE _ ENTITY _ UPDATE . reset ( ) ; <nl> + sender . sendMessage ( TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . reset " ) ) ; <nl> + } <nl> + else if ( " entity " . equals ( type ) ) <nl> + { <nl> + TimeTracker . ENTITY _ UPDATE . reset ( ) ; <nl> + sender . sendMessage ( TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . reset " ) ) ; <nl> + } <nl> + else <nl> + { <nl> + throw new WrongUsageException ( getUsage ( sender ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + public List < String > getTabCompletions ( MinecraftServer server , ICommandSender sender , String [ ] args , @ Nullable BlockPos targetPos ) <nl> + { <nl> + return Arrays . asList ( " te " , " entity " ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * A base command for all the tracking results commands <nl> + * <nl> + * @ param < T > <nl> + * / <nl> + private static abstract class TrackResultsBaseCommand < T > extends CommandBase <nl> + { <nl> + <nl> + private TimeTracker < T > tracker ; <nl> + <nl> + protected TrackResultsBaseCommand ( TimeTracker < T > tracker ) <nl> + { <nl> + this . tracker = tracker ; <nl> + } <nl> + <nl> + / * * <nl> + * Returns the time objects recorded by the time tracker sorted by average time <nl> + * <nl> + * @ return A list of time objects <nl> + * / <nl> + protected List < ForgeTimings < T > > getSortedTimings ( ) <nl> + { <nl> + ArrayList < ForgeTimings < T > > list = new ArrayList < > ( ) ; <nl> + <nl> + list . addAll ( tracker . getTimingData ( ) ) ; <nl> + list . sort ( Comparator . comparingDouble ( ForgeTimings : : getAverageTimings ) ) ; <nl> + Collections . reverse ( list ) ; <nl> + <nl> + return list ; <nl> + } <nl> + <nl> + @ Override <nl> + public void execute ( MinecraftServer server , ICommandSender sender , String [ ] args ) throws CommandException <nl> + { <nl> + List < ForgeTimings < T > > timingsList = getSortedTimings ( ) ; <nl> + if ( timingsList . isEmpty ( ) ) <nl> + { <nl> + sender . sendMessage ( TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . noData " ) ) ; <nl> + } <nl> + else <nl> + { <nl> + timingsList . stream ( ) <nl> + . filter ( timings - > timings . getObject ( ) . get ( ) ! = null ) <nl> + . limit ( 10 ) <nl> + . forEach ( timings - > sender . sendMessage ( buildTrackString ( sender , timings ) ) <nl> + ) ; <nl> + } <nl> + } <nl> + <nl> + protected abstract ITextComponent buildTrackString ( ICommandSender sender , ForgeTimings < T > data ) ; <nl> + <nl> + / * * <nl> + * Gets the time suffix for the provided time in nanoseconds <nl> + * <nl> + * @ param time The time in nanoseconds <nl> + * @ return The time suffix <nl> + * / <nl> + protected String getTimeSuffix ( double time ) <nl> + { <nl> + if ( time < 1000 ) <nl> + { <nl> + return " µ s " ; <nl> + } <nl> + else <nl> + { <nl> + return " ms " ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Translates a world dimension ID into a name <nl> + * <nl> + * @ param dimId The dimension ID <nl> + * @ return The name of the dimension <nl> + * / <nl> + protected String getWorldName ( int dimId ) <nl> + { <nl> + DimensionType type = DimensionManager . getProviderType ( dimId ) ; <nl> + if ( type = = null ) <nl> + { <nl> + return " Dim " + dimId ; <nl> + } <nl> + else <nl> + { <nl> + return type . getName ( ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + private static class TrackResultsEntity extends TrackResultsBaseCommand < Entity > <nl> + { <nl> + public TrackResultsEntity ( ) <nl> + { <nl> + super ( TimeTracker . ENTITY _ UPDATE ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getName ( ) <nl> + { <nl> + return " entity " ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getUsage ( ICommandSender sender ) <nl> + { <nl> + return " commands . forge . tracking . entity . usage " ; <nl> + } <nl> + <nl> + @ Override <nl> + protected ITextComponent buildTrackString ( ICommandSender sender , ForgeTimings < Entity > data ) <nl> + { <nl> + Entity entity = data . getObject ( ) . get ( ) ; <nl> + if ( entity = = null ) <nl> + return TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . invalid " ) ; <nl> + <nl> + BlockPos currentPos = entity . getPosition ( ) ; <nl> + String world = getWorldName ( entity . world . provider . getDimension ( ) ) ; <nl> + double averageTimings = data . getAverageTimings ( ) ; <nl> + String tickTime = ( averageTimings > 1000 ? TIME _ FORMAT . format ( averageTimings / 1000 ) : TIME _ FORMAT . format ( averageTimings ) ) + getTimeSuffix ( <nl> + averageTimings ) ; <nl> + <nl> + return TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . timingEntry " , entity . getName ( ) , <nl> + world , currentPos . getX ( ) , currentPos . getY ( ) , currentPos . getZ ( ) , tickTime ) ; <nl> + } <nl> + } <nl> + <nl> + private static class TrackResultsTileEntity extends TrackResultsBaseCommand < TileEntity > <nl> + { <nl> + <nl> + public TrackResultsTileEntity ( ) <nl> + { <nl> + super ( TimeTracker . TILE _ ENTITY _ UPDATE ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getName ( ) <nl> + { <nl> + return " te " ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getUsage ( ICommandSender sender ) <nl> + { <nl> + return " commands . forge . tracking . te . usage " ; <nl> + } <nl> + <nl> + @ Override <nl> + protected ITextComponent buildTrackString ( ICommandSender sender , ForgeTimings < TileEntity > data ) <nl> + { <nl> + TileEntity te = data . getObject ( ) . get ( ) ; <nl> + if ( te = = null ) <nl> + return TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . invalid " ) ; <nl> + <nl> + String name = getTileEntityName ( te ) ; <nl> + BlockPos pos = te . getPos ( ) ; <nl> + <nl> + double averageTimings = data . getAverageTimings ( ) ; <nl> + String tickTime = ( averageTimings > 1000 ? TIME _ FORMAT . format ( averageTimings / 1000 ) : TIME _ FORMAT . format ( averageTimings ) ) + getTimeSuffix ( <nl> + averageTimings ) ; <nl> + return TextComponentHelper <nl> + . createComponentTranslation ( sender , " commands . forge . tracking . timingEntry " , name , <nl> + getWorldName ( te . getWorld ( ) . provider . getDimension ( ) ) , <nl> + pos . getX ( ) , pos . getY ( ) , pos . getZ ( ) , tickTime ) ; <nl> + } <nl> + <nl> + private String getTileEntityName ( TileEntity tileEntity ) <nl> { <nl> - return Collections . singletonList ( " te " ) ; <nl> + ResourceLocation registryId = TileEntity . getKey ( tileEntity . getClass ( ) ) ; <nl> + if ( registryId = = null ) <nl> + return tileEntity . getClass ( ) . getSimpleName ( ) ; <nl> + else <nl> + { <nl> + return registryId . toString ( ) ; <nl> + } <nl> } <nl> - return Collections . emptyList ( ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / server / timings / ForgeTimings . java b / src / main / java / net / minecraftforge / server / timings / ForgeTimings . java <nl> new file mode 100644 <nl> index 0000000 . . fa37a24 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / server / timings / ForgeTimings . java <nl> @ @ - 0 , 0 + 1 , 80 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . server . timings ; <nl> + <nl> + import java . lang . ref . WeakReference ; <nl> + import java . util . Arrays ; <nl> + <nl> + / * * <nl> + * ForgeTimings aggregates timings data collected by { @ link TimeTracker } for an Object <nl> + * and performs operations for interpretation of the data . <nl> + * <nl> + * @ param < T > <nl> + * / <nl> + public class ForgeTimings < T > <nl> + { <nl> + <nl> + private WeakReference < T > object ; <nl> + <nl> + private int [ ] rawTimingData ; <nl> + <nl> + public ForgeTimings ( T object , int [ ] rawTimingData ) <nl> + { <nl> + this . object = new WeakReference < T > ( object ) ; <nl> + this . rawTimingData = rawTimingData ; <nl> + } <nl> + <nl> + / * * <nl> + * Retrieves the object that the timings are for <nl> + * <nl> + * @ return The object <nl> + * / <nl> + public WeakReference < T > getObject ( ) <nl> + { <nl> + return object ; <nl> + } <nl> + <nl> + <nl> + / * * <nl> + * Averages the raw timings data collected <nl> + * <nl> + * @ return An average of the raw timing data <nl> + * / <nl> + public double getAverageTimings ( ) <nl> + { <nl> + double sum = 0 . 0 ; <nl> + <nl> + for ( int data : rawTimingData ) <nl> + { <nl> + sum + = data ; <nl> + } <nl> + <nl> + return sum / rawTimingData . length ; <nl> + } <nl> + <nl> + / * * <nl> + * Returns a copy of the raw timings data collected by the tracker <nl> + * @ return The raw timing data <nl> + * @ deprecated Added for compatibility , remove in 1 . 13 <nl> + * / <nl> + public int [ ] getRawTimingData ( ) { <nl> + return Arrays . copyOfRange ( rawTimingData , 0 , rawTimingData . length ) ; <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / server / timings / TimeTracker . java b / src / main / java / net / minecraftforge / server / timings / TimeTracker . java <nl> new file mode 100644 <nl> index 0000000 . . f48dbc3 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / server / timings / TimeTracker . java <nl> @ @ - 0 , 0 + 1 , 145 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . server . timings ; <nl> + <nl> + import java . lang . ref . WeakReference ; <nl> + import java . util . Arrays ; <nl> + import java . util . Map ; <nl> + import java . util . concurrent . TimeUnit ; <nl> + <nl> + import com . google . common . collect . ImmutableList ; <nl> + import com . google . common . collect . MapMaker ; <nl> + <nl> + import net . minecraft . entity . Entity ; <nl> + import net . minecraft . tileentity . TileEntity ; <nl> + <nl> + / * * <nl> + * A class to assist in the collection of data to measure the update times of ticking objects { currently Tile Entities and Entities } <nl> + * <nl> + * @ param < T > <nl> + * / <nl> + public class TimeTracker < T > <nl> + { <nl> + <nl> + / * * <nl> + * A tracker for timing tile entity update <nl> + * / <nl> + public static final TimeTracker < TileEntity > TILE _ ENTITY _ UPDATE = new TimeTracker < > ( ) ; <nl> + / * * <nl> + * A tracker for timing entity updates <nl> + * / <nl> + public static final TimeTracker < Entity > ENTITY _ UPDATE = new TimeTracker < > ( ) ; <nl> + <nl> + private boolean enabled ; <nl> + private int trackingDuration ; <nl> + private Map < T , int [ ] > timings = new MapMaker ( ) . weakKeys ( ) . makeMap ( ) ; <nl> + private WeakReference < T > currentlyTracking ; <nl> + private long trackTime ; <nl> + private long timing ; <nl> + <nl> + / * * <nl> + * Returns the timings data recorded by the tracker <nl> + * <nl> + * @ return An immutable list of timings data collected by this tracker <nl> + * / <nl> + public ImmutableList < ForgeTimings < T > > getTimingData ( ) <nl> + { <nl> + ImmutableList . Builder < ForgeTimings < T > > builder = ImmutableList . builder ( ) ; <nl> + <nl> + for ( Map . Entry < T , int [ ] > entry : timings . entrySet ( ) ) <nl> + { <nl> + builder . add ( new ForgeTimings < > ( entry . getKey ( ) , Arrays . copyOfRange ( entry . getValue ( ) , 0 , 99 ) ) ) ; <nl> + } <nl> + return builder . build ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Resets the tracker ( clears timings and stops any in - progress timings ) <nl> + * / <nl> + public void reset ( ) <nl> + { <nl> + enabled = false ; <nl> + trackTime = 0 ; <nl> + timings . clear ( ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Ends the timing of the currently tracking object <nl> + * <nl> + * @ param tracking The object to stop timing <nl> + * / <nl> + public void trackEnd ( T tracking ) <nl> + { <nl> + if ( ! enabled ) <nl> + return ; <nl> + this . trackEnd ( tracking , System . nanoTime ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Starts recording tracking data for the given duration in seconds <nl> + * <nl> + * @ param duration The duration for the time to track <nl> + * / <nl> + public void enable ( int duration ) <nl> + { <nl> + this . trackingDuration = duration ; <nl> + this . enabled = true ; <nl> + } <nl> + <nl> + / * * <nl> + * Starts timing of the provided object <nl> + * <nl> + * @ param toTrack The object to start timing <nl> + * / <nl> + public void trackStart ( T toTrack ) <nl> + { <nl> + if ( ! enabled ) <nl> + return ; <nl> + this . trackStart ( toTrack , System . nanoTime ( ) ) ; <nl> + } <nl> + <nl> + private void trackEnd ( T object , long nanoTime ) <nl> + { <nl> + if ( currentlyTracking = = null | | currentlyTracking . get ( ) ! = object ) <nl> + { <nl> + currentlyTracking = null ; <nl> + return ; <nl> + } <nl> + int [ ] timings = this . timings . computeIfAbsent ( object , k - > new int [ 101 ] ) ; <nl> + int idx = timings [ 100 ] = ( timings [ 100 ] + 1 ) % 100 ; <nl> + timings [ idx ] = ( int ) ( nanoTime - timing ) ; <nl> + } <nl> + <nl> + private void trackStart ( T toTrack , long nanoTime ) <nl> + { <nl> + if ( trackTime = = 0 ) <nl> + { <nl> + trackTime = nanoTime ; <nl> + } <nl> + else if ( trackTime + TimeUnit . NANOSECONDS . convert ( trackingDuration , TimeUnit . SECONDS ) < nanoTime ) <nl> + { <nl> + enabled = false ; <nl> + trackTime = 0 ; <nl> + } <nl> + <nl> + currentlyTracking = new WeakReference < > ( toTrack ) ; <nl> + timing = nanoTime ; <nl> + } <nl> + } <nl> diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang <nl> index ee27f1b . . 38e3b60 100644 <nl> - - - a / src / main / resources / assets / forge / lang / en _ US . lang <nl> + + + b / src / main / resources / assets / forge / lang / en _ US . lang <nl> @ @ - 17 , 6 + 17 , 15 @ @ commands . forge . entity . list . single . header = Entity : % s Total : % d <nl> commands . forge . entity . list . multiple . header = Total : % d <nl> <nl> commands . forge . tracking . te . enabled = Tile Entity tracking enabled for % d seconds . <nl> + commands . forge . tracking . entity . enabled = Entity tracking enabled for % d seconds . <nl> + commands . forge . tracking . usage = Use / forge track help for more information on tracking subcommands . <nl> + commands . forge . tracking . start . usage = Use / forge track start < te | entity > < duration > <nl> + commands . forge . tracking . reset . usage = Use / forge track reset < te | entity > <nl> + commands . forge . tracking . reset = Timings data has been cleared ! <nl> + commands . forge . tracking . te . usage = Use / forge track te <nl> + <nl> + commands . forge . tracking . timingEntry = % s - % s [ % d , % d , % d ] : % s <nl> + commands . forge . tracking . noData = No data has been recorded yet . <nl> commands . tree _ base . invalid _ cmd = Invalid subcommand ' % s ' ! <nl> commands . tree _ base . invalid _ cmd . list _ subcommands = Invalid subcommand ' % s ' ! Available subcommands : % s <nl> commands . tree _ base . available _ subcommands = Available SubCommands : % s
NEAREST DIFF (one line): diff - - git a / common / net / minecraftforge / common / DimensionManager . java b / common / net / minecraftforge / common / DimensionManager . java <nl> index 8d39723 . . 8ea6785 100644 <nl> - - - a / common / net / minecraftforge / common / DimensionManager . java <nl> + + + b / common / net / minecraftforge / common / DimensionManager . java <nl> @ @ - 197 , 12 + 197 , 15 @ @ public class DimensionManager <nl> <nl> public static void setWorld ( int id , WorldServer world ) <nl> { <nl> - if ( world ! = null ) { <nl> + if ( world ! = null ) <nl> + { <nl> worlds . put ( id , world ) ; <nl> weakWorldMap . put ( world , world ) ; <nl> MinecraftServer . getServer ( ) . worldTickTimes . put ( id , new long [ 100 ] ) ; <nl> FMLLog . info ( " Loading dimension % d ( % s ) ( % s ) " , id , world . getWorldInfo ( ) . getWorldName ( ) , world . getMinecraftServer ( ) ) ; <nl> - } else { <nl> + } <nl> + else <nl> + { <nl> worlds . remove ( id ) ; <nl> MinecraftServer . getServer ( ) . worldTickTimes . remove ( id ) ; <nl> FMLLog . info ( " Unloading dimension % d " , id ) ; <nl> @ @ - 231 , 14 + 234 , 18 @ @ public class DimensionManager <nl> <nl> public static void initDimension ( int dim ) { <nl> WorldServer overworld = getWorld ( 0 ) ; <nl> - if ( overworld = = null ) { <nl> + if ( overworld = = null ) <nl> + { <nl> throw new RuntimeException ( " Cannot Hotload Dim : Overworld is not Loaded ! " ) ; <nl> } <nl> - try { <nl> + try <nl> + { <nl> DimensionManager . getProviderType ( dim ) ; <nl> - } catch ( Exception e ) { <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> System . err . println ( " Cannot Hotload Dim : " + e . getMessage ( ) ) ; <nl> - return ; / / If a provider hasn ' t been registered then we can ' t hotload the dim <nl> + return ; / / If a provider hasn ' t been registered then we can ' t hotload the dim <nl> } <nl> MinecraftServer mcServer = overworld . getMinecraftServer ( ) ; <nl> ISaveHandler savehandler = overworld . getSaveHandler ( ) ; <nl> diff - - git a / common / net / minecraftforge / common / ForgeChunkManager . java b / common / net / minecraftforge / common / ForgeChunkManager . java <nl> index ee00212 . . 03d8714 100644 <nl> - - - a / common / net / minecraftforge / common / ForgeChunkManager . java <nl> + + + b / common / net / minecraftforge / common / ForgeChunkManager . java <nl> @ @ - 816 , 7 + 816 , 10 @ @ public class ForgeChunkManager <nl> static void saveWorld ( World world ) <nl> { <nl> / / only persist persistent worlds <nl> - if ( ! ( world instanceof WorldServer ) ) { return ; } <nl> + if ( ! ( world instanceof WorldServer ) ) <nl> + { <nl> + return ; <nl> + } <nl> WorldServer worldServer = ( WorldServer ) world ; <nl> File chunkDir = worldServer . getChunkSaveLocation ( ) ; <nl> File chunkLoaderData = new File ( chunkDir , " forcedchunks . dat " ) ; <nl> diff - - git a / common / net / minecraftforge / fluids / BlockFluidFinite . java b / common / net / minecraftforge / fluids / BlockFluidFinite . java <nl> index 6a6edf7 . . 0dc2d0b 100644 <nl> - - - a / common / net / minecraftforge / fluids / BlockFluidFinite . java <nl> + + + b / common / net / minecraftforge / fluids / BlockFluidFinite . java <nl> @ @ - 31 , 7 + 31 , 8 @ @ public class BlockFluidFinite extends BlockFluidBase <nl> return 0 ; <nl> } <nl> <nl> - if ( world . getBlockId ( x , y , z ) ! = blockID ) { <nl> + if ( world . getBlockId ( x , y , z ) ! = blockID ) <nl> + { <nl> return - 1 ; <nl> } <nl> <nl> @ @ - 110 , 7 + 111 , 8 @ @ public class BlockFluidFinite extends BlockFluidBase <nl> total + = west ; <nl> } <nl> <nl> - if ( east > = 0 ) { <nl> + if ( east > = 0 ) <nl> + { <nl> + + count ; <nl> total + = east ; <nl> } <nl> @ @ - 182 , 10 + 184 , 14 @ @ public class BlockFluidFinite extends BlockFluidBase <nl> + + newwest ; <nl> - - rem ; <nl> } <nl> - if ( newwest ! = west ) { <nl> - if ( newwest = = 0 ) { <nl> + if ( newwest ! = west ) <nl> + { <nl> + if ( newwest = = 0 ) <nl> + { <nl> world . setBlock ( x - 1 , y , z , 0 ) ; <nl> - } else { <nl> + } <nl> + else <nl> + { <nl> world . setBlock ( x - 1 , y , z , blockID , newwest - 1 , 2 ) ; <nl> } <nl> world . scheduleBlockUpdate ( x - 1 , y , z , blockID , tickRate ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch <nl> index e401b0d . . 810ebea 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch <nl> @ @ - 9 , 11 + 9 , 14 @ @ <nl> <nl> @ SideOnly ( Side . CLIENT ) <nl> public class EntityPlayerSP extends AbstractClientPlayer <nl> - @ @ - 570 , 18 + 572 , 63 @ @ <nl> + @ @ - 570 , 18 + 572 , 66 @ @ <nl> * / <nl> protected boolean pushOutOfBlocks ( double par1 , double par3 , double par5 ) <nl> { <nl> - + if ( this . noClip ) { return false ; } <nl> + + if ( this . noClip ) <nl> + + { <nl> + + return false ; <nl> + + } <nl> int i = MathHelper . floor _ double ( par1 ) ; <nl> int j = MathHelper . floor _ double ( par3 ) ; <nl> int k = MathHelper . floor _ double ( par5 ) ; <nl> @ @ - 79 , 7 + 82 , 7 @ @ <nl> byte b0 = - 1 ; <nl> double d5 = 9999 . 0D ; <nl> <nl> - @ @ - 685 , 6 + 732 , 12 @ @ <nl> + @ @ - 685 , 6 + 735 , 12 @ @ <nl> <nl> public void playSound ( String par1Str , float par2 , float par3 ) <nl> { <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> index 168d019 . . 3ef5937 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> @ @ - 453 , 18 + 453 , 19 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 1650 , 6 + 1803 , 10 @ @ <nl> + @ @ - 1650 , 6 + 1803 , 11 @ @ <nl> * / <nl> public void setSpawnChunk ( ChunkCoordinates par1ChunkCoordinates , boolean par2 ) <nl> { <nl> - + if ( this . dimension ! = 0 ) { <nl> + + if ( this . dimension ! = 0 ) <nl> + + { <nl> + setSpawnChunk ( par1ChunkCoordinates , par2 , this . dimension ) ; <nl> + return ; <nl> + } <nl> if ( par1ChunkCoordinates ! = null ) <nl> { <nl> this . spawnChunk = new ChunkCoordinates ( par1ChunkCoordinates ) ; <nl> - @ @ - 1661 , 7 + 1818 , 32 @ @ <nl> + @ @ - 1661 , 7 + 1819 , 39 @ @ <nl> this . spawnForced = false ; <nl> } <nl> } <nl> @ @ - 477 , 20 + 478 , 27 @ @ <nl> + * @ param dimension Which dimension to apply the player - specific respawn point to <nl> + * / <nl> + public void setSpawnChunk ( ChunkCoordinates chunkCoordinates , boolean forced , int dimension ) { <nl> - + if ( dimension = = 0 ) { <nl> - + if ( chunkCoordinates ! = null ) { <nl> + + if ( dimension = = 0 ) <nl> + + { <nl> + + if ( chunkCoordinates ! = null ) <nl> + + { <nl> + this . spawnChunk = new ChunkCoordinates ( chunkCoordinates ) ; <nl> + this . spawnForced = forced ; <nl> - + } else { <nl> + + } <nl> + + else <nl> + + { <nl> + this . spawnChunk = null ; <nl> + this . spawnForced = false ; <nl> + } <nl> + return ; <nl> + } <nl> - + if ( chunkCoordinates ! = null ) { <nl> + + if ( chunkCoordinates ! = null ) <nl> + + { <nl> + this . spawnChunkMap . put ( dimension , new ChunkCoordinates ( chunkCoordinates ) ) ; <nl> + this . spawnForcedMap . put ( dimension , forced ) ; <nl> - + } else { <nl> + + } <nl> + + else <nl> + + { <nl> + this . spawnChunkMap . remove ( dimension ) ; <nl> + this . spawnForcedMap . remove ( dimension ) ; <nl> + } <nl> @ @ - 498 , 7 + 506 , 7 @ @ <nl> / * * <nl> * Will trigger the specified trigger . <nl> * / <nl> - @ @ - 1843 , 6 + 2025 , 10 @ @ <nl> + @ @ - 1843 , 6 + 2033 , 10 @ @ <nl> <nl> super . fall ( par1 ) ; <nl> } <nl> @ @ - 509 , 7 + 517 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 1884 , 7 + 2070 , 7 @ @ <nl> + @ @ - 1884 , 7 + 2078 , 7 @ @ <nl> { <nl> if ( par1ItemStack . getItem ( ) . requiresMultipleRenderPasses ( ) ) <nl> { <nl> @ @ - 518 , 7 + 526 , 7 @ @ <nl> } <nl> <nl> if ( this . itemInUse ! = null & & par1ItemStack . itemID = = Item . bow . itemID ) <nl> - @ @ - 1906 , 6 + 2092 , 7 @ @ <nl> + @ @ - 1906 , 6 + 2100 , 7 @ @ <nl> return Item . bow . getItemIconForUseDuration ( 0 ) ; <nl> } <nl> } <nl> @ @ - 526 , 7 + 534 , 7 @ @ <nl> } <nl> <nl> return icon ; <nl> - @ @ - 2127 , 7 + 2314 , 17 @ @ <nl> + @ @ - 2127 , 7 + 2322 , 17 @ @ <nl> this . setScore ( par1EntityPlayer . getScore ( ) ) ; <nl> } <nl> <nl> @ @ - 544 , 7 + 552 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 2191 , 7 + 2388 , 14 @ @ <nl> + @ @ - 2191 , 7 + 2396 , 14 @ @ <nl> * / <nl> public void setCurrentItemOrArmor ( int par1 , ItemStack par2ItemStack ) <nl> { <nl> @ @ - 560 , 7 + 568 , 7 @ @ <nl> } <nl> <nl> @ SideOnly ( Side . CLIENT ) <nl> - @ @ - 2245 , 7 + 2449 , 7 @ @ <nl> + @ @ - 2245 , 7 + 2457 , 7 @ @ <nl> * / <nl> public String getTranslatedEntityName ( ) <nl> { <nl> @ @ - 569 , 7 + 577 , 7 @ @ <nl> } <nl> <nl> public void setAbsorptionAmount ( float par1 ) <nl> - @ @ - 2267 , 4 + 2471 , 39 @ @ <nl> + @ @ - 2267 , 4 + 2479 , 39 @ @ <nl> { <nl> FMLNetworkHandler . openGui ( this , mod , modGuiId , world , x , y , z ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / World . java . patch b / patches / minecraft / net / minecraft / world / World . java . patch <nl> index 68e76d6 . . 92fdbc5 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / World . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / World . java . patch <nl> @ @ - 114 , 7 + 114 , 7 @ @ <nl> } <nl> else <nl> { <nl> - @ @ - 290 , 6 + 337 , 19 @ @ <nl> + @ @ - 290 , 6 + 337 , 20 @ @ <nl> <nl> this . calculateInitialSkylight ( ) ; <nl> this . calculateInitialWeather ( ) ; <nl> @ @ - 126 , 7 + 126 , 8 @ @ <nl> + / / Buildcraft has suffered from the issue this fixes . If you load the same data from two different worlds they can get two different copies of the same object , thus the last saved gets final say . <nl> + private MapStorage getMapStorage ( ISaveHandler savehandler ) <nl> + { <nl> - + if ( s _ savehandler ! = savehandler | | s _ mapStorage = = null ) { <nl> + + if ( s _ savehandler ! = savehandler | | s _ mapStorage = = null ) <nl> + + { <nl> + s _ mapStorage = new MapStorage ( savehandler ) ; <nl> + s _ savehandler = savehandler ; <nl> + } <nl> @ @ - 134 , 7 + 135 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 373 , 7 + 433 , 8 @ @ <nl> + @ @ - 373 , 7 + 434 , 8 @ @ <nl> * / <nl> public boolean isAirBlock ( int par1 , int par2 , int par3 ) <nl> { <nl> @ @ - 144 , 7 + 145 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 382 , 7 + 443 , 8 @ @ <nl> + @ @ - 382 , 7 + 444 , 8 @ @ <nl> public boolean blockHasTileEntity ( int par1 , int par2 , int par3 ) <nl> { <nl> int l = this . getBlockId ( par1 , par2 , par3 ) ; <nl> @ @ - 154 , 7 + 155 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 1157 , 7 + 1219 , 7 @ @ <nl> + @ @ - 1157 , 7 + 1220 , 7 @ @ <nl> * / <nl> public boolean isDaytime ( ) <nl> { <nl> @ @ - 163 , 7 + 164 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 1192 , 7 + 1254 , 7 @ @ <nl> + @ @ - 1192 , 7 + 1255 , 7 @ @ <nl> int l1 = this . getBlockMetadata ( l , i1 , j1 ) ; <nl> Block block = Block . blocksList [ k1 ] ; <nl> <nl> @ @ - 172 , 7 + 173 , 7 @ @ <nl> { <nl> MovingObjectPosition movingobjectposition = block . collisionRayTrace ( this , l , i1 , j1 , par1Vec3 , par2Vec3 ) ; <nl> <nl> - @ @ - 1392 , 6 + 1454 , 12 @ @ <nl> + @ @ - 1392 , 6 + 1455 , 12 @ @ <nl> * / <nl> public void playSoundAtEntity ( Entity par1Entity , String par2Str , float par3 , float par4 ) <nl> { <nl> @ @ - 185 , 7 + 186 , 7 @ @ <nl> if ( par1Entity ! = null & & par2Str ! = null ) <nl> { <nl> for ( int i = 0 ; i < this . worldAccesses . size ( ) ; + + i ) <nl> - @ @ - 1406 , 6 + 1474 , 12 @ @ <nl> + @ @ - 1406 , 6 + 1475 , 12 @ @ <nl> * / <nl> public void playSoundToNearExcept ( EntityPlayer par1EntityPlayer , String par2Str , float par3 , float par4 ) <nl> { <nl> @ @ - 198 , 7 + 199 , 7 @ @ <nl> if ( par1EntityPlayer ! = null & & par2Str ! = null ) <nl> { <nl> for ( int i = 0 ; i < this . worldAccesses . size ( ) ; + + i ) <nl> - @ @ - 1492 , 6 + 1566 , 11 @ @ <nl> + @ @ - 1492 , 6 + 1567 , 11 @ @ <nl> EntityPlayer entityplayer = ( EntityPlayer ) par1Entity ; <nl> this . playerEntities . add ( entityplayer ) ; <nl> this . updateAllPlayersSleepingFlag ( ) ; <nl> @ @ - 210 , 7 + 211 , 7 @ @ <nl> } <nl> <nl> this . getChunkFromChunkCoords ( i , j ) . addEntity ( par1Entity ) ; <nl> - @ @ - 1732 , 6 + 1811 , 12 @ @ <nl> + @ @ - 1732 , 6 + 1812 , 12 @ @ <nl> * Calculates the color for the skybox <nl> * / <nl> public Vec3 getSkyColor ( Entity par1Entity , float par2 ) <nl> @ @ - 223 , 7 + 224 , 7 @ @ <nl> { <nl> float f1 = this . getCelestialAngle ( par2 ) ; <nl> float f2 = MathHelper . cos ( f1 * ( float ) Math . PI * 2 . 0F ) * 2 . 0F + 0 . 5F ; <nl> - @ @ - 1833 , 6 + 1918 , 12 @ @ <nl> + @ @ - 1833 , 6 + 1919 , 12 @ @ <nl> @ SideOnly ( Side . CLIENT ) <nl> public Vec3 getCloudColour ( float par1 ) <nl> { <nl> @ @ - 236 , 7 + 237 , 7 @ @ <nl> float f1 = this . getCelestialAngle ( par1 ) ; <nl> float f2 = MathHelper . cos ( f1 * ( float ) Math . PI * 2 . 0F ) * 2 . 0F + 0 . 5F ; <nl> <nl> - @ @ - 1904 , 6 + 1995 , 8 @ @ <nl> + @ @ - 1904 , 6 + 1996 , 8 @ @ <nl> public int getTopSolidOrLiquidBlock ( int par1 , int par2 ) <nl> { <nl> Chunk chunk = this . getChunkFromBlockCoords ( par1 , par2 ) ; <nl> @ @ - 245 , 7 + 246 , 7 @ @ <nl> int k = chunk . getTopFilledSegment ( ) + 15 ; <nl> par1 & = 15 ; <nl> <nl> - @ @ - 1911 , 7 + 2004 , 7 @ @ <nl> + @ @ - 1911 , 7 + 2005 , 7 @ @ <nl> { <nl> int l = chunk . getBlockID ( par1 , k , par2 ) ; <nl> <nl> @ @ - 254 , 7 + 255 , 7 @ @ <nl> { <nl> return k + 1 ; <nl> } <nl> - @ @ - 1926 , 6 + 2019 , 12 @ @ <nl> + @ @ - 1926 , 6 + 2020 , 12 @ @ <nl> * How bright are stars in the sky <nl> * / <nl> public float getStarBrightness ( float par1 ) <nl> @ @ - 267 , 7 + 268 , 7 @ @ <nl> { <nl> float f1 = this . getCelestialAngle ( par1 ) ; <nl> float f2 = 1 . 0F - ( MathHelper . cos ( f1 * ( float ) Math . PI * 2 . 0F ) * 2 . 0F + 0 . 25F ) ; <nl> - @ @ - 1990 , 7 + 2089 , 15 @ @ <nl> + @ @ - 1990 , 7 + 2090 , 15 @ @ <nl> entity . addEntityCrashInfo ( crashreportcategory ) ; <nl> } <nl> <nl> @ @ - 284 , 7 + 285 , 7 @ @ <nl> } <nl> <nl> if ( entity . isDead ) <nl> - @ @ - 2052 , 7 + 2159 , 16 @ @ <nl> + @ @ - 2052 , 7 + 2160 , 16 @ @ <nl> crashreport = CrashReport . makeCrashReport ( throwable1 , " Ticking entity " ) ; <nl> crashreportcategory = crashreport . makeCategory ( " Entity being ticked " ) ; <nl> entity . addEntityCrashInfo ( crashreportcategory ) ; <nl> @ @ - 302 , 7 + 303 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 2095 , 7 + 2211 , 16 @ @ <nl> + @ @ - 2095 , 7 + 2212 , 16 @ @ <nl> crashreport = CrashReport . makeCrashReport ( throwable2 , " Ticking tile entity " ) ; <nl> crashreportcategory = crashreport . makeCategory ( " Tile entity being ticked " ) ; <nl> tileentity . func _ 85027 _ a ( crashreportcategory ) ; <nl> @ @ - 320 , 7 + 321 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 2109 , 7 + 2234 , 7 @ @ <nl> + @ @ - 2109 , 7 + 2235 , 7 @ @ <nl> <nl> if ( chunk ! = null ) <nl> { <nl> @ @ - 329 , 7 + 330 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 2118 , 6 + 2243 , 10 @ @ <nl> + @ @ - 2118 , 6 + 2244 , 10 @ @ <nl> <nl> if ( ! this . entityRemoval . isEmpty ( ) ) <nl> { <nl> @ @ - 340 , 7 + 341 , 7 @ @ <nl> this . loadedTileEntityList . removeAll ( this . entityRemoval ) ; <nl> this . entityRemoval . clear ( ) ; <nl> } <nl> - @ @ - 2138 , 18 + 2267 , 18 @ @ <nl> + @ @ - 2138 , 18 + 2268 , 18 @ @ <nl> { <nl> this . loadedTileEntityList . add ( tileentity1 ) ; <nl> } <nl> @ @ - 363 , 7 + 364 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 2162 , 13 + 2291 , 13 @ @ <nl> + @ @ - 2162 , 13 + 2292 , 13 @ @ <nl> <nl> public void addTileEntity ( Collection par1Collection ) <nl> { <nl> @ @ - 384 , 7 + 385 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 2188 , 9 + 2317 , 17 @ @ <nl> + @ @ - 2188 , 9 + 2318 , 17 @ @ <nl> { <nl> int i = MathHelper . floor _ double ( par1Entity . posX ) ; <nl> int j = MathHelper . floor _ double ( par1Entity . posZ ) ; <nl> @ @ - 405 , 7 + 406 , 7 @ @ <nl> { <nl> par1Entity . lastTickPosX = par1Entity . posX ; <nl> par1Entity . lastTickPosY = par1Entity . posY ; <nl> - @ @ - 2424 , 6 + 2561 , 14 @ @ <nl> + @ @ - 2424 , 6 + 2562 , 14 @ @ <nl> { <nl> return true ; <nl> } <nl> @ @ - 420 , 7 + 421 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 2746 , 15 + 2891 , 16 @ @ <nl> + @ @ - 2746 , 15 + 2892 , 16 @ @ <nl> * / <nl> public void setBlockTileEntity ( int par1 , int par2 , int par3 , TileEntity par4TileEntity ) <nl> { <nl> @ @ - 446 , 7 + 447 , 7 @ @ <nl> while ( iterator . hasNext ( ) ) <nl> { <nl> TileEntity tileentity1 = ( TileEntity ) iterator . next ( ) ; <nl> - @ @ - 2765 , 20 + 2911 , 21 @ @ <nl> + @ @ - 2765 , 20 + 2912 , 21 @ @ <nl> iterator . remove ( ) ; <nl> } <nl> } <nl> @ @ - 479 , 7 + 480 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 2786 , 28 + 2933 , 13 @ @ <nl> + @ @ - 2786 , 28 + 2934 , 13 @ @ <nl> * / <nl> public void removeBlockTileEntity ( int par1 , int par2 , int par3 ) <nl> { <nl> @ @ - 515 , 7 + 516 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 2832 , 7 + 2964 , 8 @ @ <nl> + @ @ - 2832 , 7 + 2965 , 8 @ @ <nl> * / <nl> public boolean isBlockNormalCube ( int par1 , int par2 , int par3 ) <nl> { <nl> @ @ - 525 , 7 + 526 , 7 @ @ <nl> } <nl> <nl> public boolean isBlockFullCube ( int par1 , int par2 , int par3 ) <nl> - @ @ - 2855 , 16 + 2988 , 17 @ @ <nl> + @ @ - 2855 , 16 + 2989 , 17 @ @ <nl> * / <nl> public boolean doesBlockHaveSolidTopSurface ( int par1 , int par2 , int par3 ) <nl> { <nl> @ @ - 545 , 7 + 546 , 7 @ @ <nl> return par1Block = = null ? false : ( par1Block . blockMaterial . isOpaque ( ) & & par1Block . renderAsNormalBlock ( ) ? true : ( par1Block instanceof BlockStairs ? ( par2 & 4 ) = = 4 : ( par1Block instanceof BlockHalfSlab ? ( par2 & 8 ) = = 8 : ( par1Block instanceof BlockHopper ? true : ( par1Block instanceof BlockSnow ? ( par2 & 7 ) = = 7 : false ) ) ) ) ) ; <nl> } <nl> <nl> - @ @ - 2881 , 7 + 3015 , 7 @ @ <nl> + @ @ - 2881 , 7 + 3016 , 7 @ @ <nl> if ( chunk ! = null & & ! chunk . isEmpty ( ) ) <nl> { <nl> Block block = Block . blocksList [ this . getBlockId ( par1 , par2 , par3 ) ] ; <nl> @ @ - 554 , 7 + 555 , 7 @ @ <nl> } <nl> else <nl> { <nl> - @ @ - 2912 , 8 + 3046 , 7 @ @ <nl> + @ @ - 2912 , 8 + 3047 , 7 @ @ <nl> * / <nl> public void setAllowedSpawnTypes ( boolean par1 , boolean par2 ) <nl> { <nl> @ @ - 564 , 7 + 565 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 2929 , 6 + 3062 , 11 @ @ <nl> + @ @ - 2929 , 6 + 3063 , 11 @ @ <nl> * / <nl> private void calculateInitialWeather ( ) <nl> { <nl> @ @ - 576 , 7 + 577 , 7 @ @ <nl> if ( this . worldInfo . isRaining ( ) ) <nl> { <nl> this . rainingStrength = 1 . 0F ; <nl> - @ @ - 2944 , 6 + 3082 , 11 @ @ <nl> + @ @ - 2944 , 6 + 3083 , 11 @ @ <nl> * Updates all weather states . <nl> * / <nl> protected void updateWeather ( ) <nl> @ @ - 588 , 7 + 589 , 7 @ @ <nl> { <nl> if ( ! this . provider . hasNoSky ) <nl> { <nl> - @ @ - 3041 , 12 + 3184 , 14 @ @ <nl> + @ @ - 3041 , 12 + 3185 , 14 @ @ <nl> <nl> public void toggleRain ( ) <nl> { <nl> @ @ - 604 , 7 + 605 , 7 @ @ <nl> this . theProfiler . startSection ( " buildList " ) ; <nl> int i ; <nl> EntityPlayer entityplayer ; <nl> - @ @ - 3153 , 6 + 3298 , 11 @ @ <nl> + @ @ - 3153 , 6 + 3299 , 11 @ @ <nl> * / <nl> public boolean canBlockFreeze ( int par1 , int par2 , int par3 , boolean par4 ) <nl> { <nl> @ @ - 616 , 7 + 617 , 7 @ @ <nl> BiomeGenBase biomegenbase = this . getBiomeGenForCoords ( par1 , par3 ) ; <nl> float f = biomegenbase . getFloatTemperature ( ) ; <nl> <nl> - @ @ - 3211 , 6 + 3361 , 11 @ @ <nl> + @ @ - 3211 , 6 + 3362 , 11 @ @ <nl> * / <nl> public boolean canSnowAt ( int par1 , int par2 , int par3 ) <nl> { <nl> @ @ - 628 , 7 + 629 , 7 @ @ <nl> BiomeGenBase biomegenbase = this . getBiomeGenForCoords ( par1 , par3 ) ; <nl> float f = biomegenbase . getFloatTemperature ( ) ; <nl> <nl> - @ @ - 3254 , 10 + 3409 , 12 @ @ <nl> + @ @ - 3254 , 10 + 3410 , 12 @ @ <nl> else <nl> { <nl> int l = this . getBlockId ( par1 , par2 , par3 ) ; <nl> @ @ - 645 , 7 + 646 , 7 @ @ <nl> { <nl> j1 = 1 ; <nl> } <nl> - @ @ - 3353 , 7 + 3510 , 9 @ @ <nl> + @ @ - 3353 , 7 + 3511 , 9 @ @ <nl> int j4 = i2 + Facing . offsetsXForSide [ i4 ] ; <nl> int k4 = j2 + Facing . offsetsYForSide [ i4 ] ; <nl> int l4 = k2 + Facing . offsetsZForSide [ i4 ] ; <nl> @ @ - 656 , 7 + 657 , 7 @ @ <nl> i3 = this . getSavedLightValue ( par1EnumSkyBlock , j4 , k4 , l4 ) ; <nl> <nl> if ( i3 = = l2 - i5 & & i1 < this . lightUpdateBlockList . length ) <nl> - @ @ - 3456 , 10 + 3615 , 10 @ @ <nl> + @ @ - 3456 , 10 + 3616 , 10 @ @ <nl> public List getEntitiesWithinAABBExcludingEntity ( Entity par1Entity , AxisAlignedBB par2AxisAlignedBB , IEntitySelector par3IEntitySelector ) <nl> { <nl> ArrayList arraylist = new ArrayList ( ) ; <nl> @ @ - 671 , 7 + 672 , 7 @ @ <nl> <nl> for ( int i1 = i ; i1 < = j ; + + i1 ) <nl> { <nl> - @ @ - 3485 , 10 + 3644 , 10 @ @ <nl> + @ @ - 3485 , 10 + 3645 , 10 @ @ <nl> <nl> public List selectEntitiesWithinAABB ( Class par1Class , AxisAlignedBB par2AxisAlignedBB , IEntitySelector par3IEntitySelector ) <nl> { <nl> @ @ - 686 , 7 + 687 , 7 @ @ <nl> ArrayList arraylist = new ArrayList ( ) ; <nl> <nl> for ( int i1 = i ; i1 < = j ; + + i1 ) <nl> - @ @ - 3582 , 11 + 3741 , 14 @ @ <nl> + @ @ - 3582 , 11 + 3742 , 14 @ @ <nl> * / <nl> public void addLoadedEntities ( List par1List ) <nl> { <nl> @ @ - 704 , 7 + 705 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 3620 , 6 + 3782 , 11 @ @ <nl> + @ @ - 3620 , 6 + 3783 , 11 @ @ <nl> else <nl> { <nl> if ( block ! = null & & ( block = = Block . waterMoving | | block = = Block . waterStill | | block = = Block . lavaMoving | | block = = Block . lavaStill | | block = = Block . fire | | block . blockMaterial . isReplaceable ( ) ) ) <nl> @ @ - 716 , 7 + 717 , 7 @ @ <nl> { <nl> block = null ; <nl> } <nl> - @ @ - 3914 , 7 + 4081 , 7 @ @ <nl> + @ @ - 3914 , 7 + 4082 , 7 @ @ <nl> * / <nl> public long getSeed ( ) <nl> { <nl> @ @ - 725 , 7 + 726 , 7 @ @ <nl> } <nl> <nl> public long getTotalWorldTime ( ) <nl> - @ @ - 3924 , 7 + 4091 , 7 @ @ <nl> + @ @ - 3924 , 7 + 4092 , 7 @ @ <nl> <nl> public long getWorldTime ( ) <nl> { <nl> @ @ - 734 , 7 + 735 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 3932 , 7 + 4099 , 7 @ @ <nl> + @ @ - 3932 , 7 + 4100 , 7 @ @ <nl> * / <nl> public void setWorldTime ( long par1 ) <nl> { <nl> @ @ - 743 , 7 + 744 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 3940 , 13 + 4107 , 13 @ @ <nl> + @ @ - 3940 , 13 + 4108 , 13 @ @ <nl> * / <nl> public ChunkCoordinates getSpawnPoint ( ) <nl> { <nl> @ @ - 759 , 7 + 760 , 7 @ @ <nl> } <nl> <nl> @ SideOnly ( Side . CLIENT ) <nl> - @ @ - 3970 , 7 + 4137 , 10 @ @ <nl> + @ @ - 3970 , 7 + 4138 , 10 @ @ <nl> <nl> if ( ! this . loadedEntityList . contains ( par1Entity ) ) <nl> { <nl> @ @ - 771 , 7 + 772 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 3978 , 6 + 4148 , 11 @ @ <nl> + @ @ - 3978 , 6 + 4149 , 11 @ @ <nl> * Called when checking if a certain block can be mined or not . The ' spawn safe zone ' check is located here . <nl> * / <nl> public boolean canMineBlock ( EntityPlayer par1EntityPlayer , int par2 , int par3 , int par4 ) <nl> @ @ - 783 , 7 + 784 , 7 @ @ <nl> { <nl> return true ; <nl> } <nl> - @ @ - 4098 , 8 + 4273 , 7 @ @ <nl> + @ @ - 4098 , 8 + 4274 , 7 @ @ <nl> * / <nl> public boolean isBlockHighHumidity ( int par1 , int par2 , int par3 ) <nl> { <nl> @ @ - 793 , 7 + 794 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 4174 , 7 + 4348 , 7 @ @ <nl> + @ @ - 4174 , 7 + 4349 , 7 @ @ <nl> * / <nl> public int getHeight ( ) <nl> { <nl> @ @ - 802 , 7 + 803 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 4182 , 7 + 4356 , 7 @ @ <nl> + @ @ - 4182 , 7 + 4357 , 7 @ @ <nl> * / <nl> public int getActualHeight ( ) <nl> { <nl> @ @ - 811 , 7 + 812 , 7 @ @ <nl> } <nl> <nl> public IUpdatePlayerListBox getMinecartSoundUpdater ( EntityMinecart par1EntityMinecart ) <nl> - @ @ - 4225 , 7 + 4399 , 7 @ @ <nl> + @ @ - 4225 , 7 + 4400 , 7 @ @ <nl> * / <nl> public double getHorizon ( ) <nl> { <nl> @ @ - 820 , 7 + 821 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 4294 , 30 + 4468 , 28 @ @ <nl> + @ @ - 4294 , 30 + 4469 , 28 @ @ <nl> <nl> public void func _ 96440 _ m ( int par1 , int par2 , int par3 , int par4 ) <nl> { <nl> @ @ - 872 , 7 + 873 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 4363 , 4 + 4535 , 115 @ @ <nl> + @ @ - 4363 , 4 + 4536 , 115 @ @ <nl> <nl> return MathHelper . clamp _ float ( f , 0 . 0F , flag ? 1 . 5F : 1 . 0F ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> index fa2590f . . 89f4e50 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> @ @ - 22 , 7 + 22 , 7 @ @ <nl> <nl> if ( b0 ! = 0 ) <nl> { <nl> - @ @ - 159 , 6 + 165 , 90 @ @ <nl> + @ @ - 159 , 6 + 165 , 92 @ @ <nl> } <nl> <nl> / * * <nl> @ @ - 94 , 13 + 94 , 15 @ @ <nl> + int id = ids [ idx ] & 0xFFFFFF ; <nl> + int meta = metadata [ idx ] ; <nl> + <nl> - + if ( id ! = 0 ) { <nl> + + if ( id ! = 0 ) <nl> + + { <nl> + int storageBlock = y > > 4 ; <nl> + <nl> - + if ( this . storageArrays [ storageBlock ] = = null ) { <nl> - + this . storageArrays [ storageBlock ] = new ExtendedBlockStorage ( storageBlock < < 4 , ! world . provider . hasNoSky ) ; <nl> + + if ( this . storageArrays [ storageBlock ] = = null ) <nl> + + { <nl> + + this . storageArrays [ storageBlock ] = new ExtendedBlockStorage ( storageBlock < < 4 , ! world . provider . hasNoSky ) ; <nl> + } <nl> - + <nl> + + <nl> + this . storageArrays [ storageBlock ] . setExtBlockID ( x , y & 15 , z , id ) ; <nl> + this . storageArrays [ storageBlock ] . setExtBlockMetadata ( x , y & 15 , z , meta ) ; <nl> + } <nl> @ @ - 113 , 7 + 115 , 7 @ @ <nl> * Checks whether the chunk is at the X / Z location specified <nl> * / <nl> public boolean isAtLocation ( int par1 , int par2 ) <nl> - @ @ - 222 , 7 + 312 , 7 @ @ <nl> + @ @ - 222 , 7 + 314 , 7 @ @ <nl> { <nl> int i1 = this . getBlockID ( j , l - 1 , k ) ; <nl> <nl> @ @ - 122 , 7 + 124 , 7 @ @ <nl> { <nl> - - l ; <nl> continue ; <nl> - @ @ - 528 , 7 + 618 , 10 @ @ <nl> + @ @ - 528 , 7 + 620 , 10 @ @ <nl> <nl> public int getBlockLightOpacity ( int par1 , int par2 , int par3 ) <nl> { <nl> @ @ - 134 , 7 + 136 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 615 , 9 + 708 , 13 @ @ <nl> + @ @ - 615 , 9 + 710 , 13 @ @ <nl> { <nl> Block . blocksList [ l1 ] . breakBlock ( this . worldObj , j2 , par2 , k2 , l1 , i2 ) ; <nl> } <nl> @ @ - 151 , 7 + 153 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 635 , 7 + 732 , 7 @ @ <nl> + @ @ - 635 , 7 + 734 , 7 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 160 , 7 + 162 , 7 @ @ <nl> { <nl> if ( par2 > = k1 ) <nl> { <nl> - @ @ - 659 , 29 + 756 , 21 @ @ <nl> + @ @ - 659 , 29 + 758 , 21 @ @ <nl> Block . blocksList [ par4 ] . onBlockAdded ( this . worldObj , j2 , par2 , k2 ) ; <nl> } <nl> <nl> @ @ - 193 , 7 + 195 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 716 , 7 + 805 , 7 @ @ <nl> + @ @ - 716 , 7 + 807 , 7 @ @ <nl> extendedblockstorage . setExtBlockMetadata ( par1 , par2 & 15 , par3 , par4 ) ; <nl> int j1 = extendedblockstorage . getExtBlockID ( par1 , par2 & 15 , par3 ) ; <nl> <nl> @ @ - 202 , 7 + 204 , 7 @ @ <nl> { <nl> TileEntity tileentity = this . getChunkBlockTileEntity ( par1 , par2 , par3 ) ; <nl> <nl> - @ @ - 829 , 6 + 918 , 7 @ @ <nl> + @ @ - 829 , 6 + 920 , 7 @ @ <nl> k = this . entityLists . length - 1 ; <nl> } <nl> <nl> @ @ - 210 , 7 + 212 , 7 @ @ <nl> par1Entity . addedToChunk = true ; <nl> par1Entity . chunkCoordX = this . xPosition ; <nl> par1Entity . chunkCoordY = k ; <nl> - @ @ - 878 , 33 + 968 , 32 @ @ <nl> + @ @ - 878 , 33 + 970 , 32 @ @ <nl> ChunkPosition chunkposition = new ChunkPosition ( par1 , par2 , par3 ) ; <nl> TileEntity tileentity = ( TileEntity ) this . chunkTileEntityMap . get ( chunkposition ) ; <nl> <nl> @ @ - 255 , 7 + 257 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 919 , 7 + 1008 , 7 @ @ <nl> + @ @ - 919 , 7 + 1010 , 7 @ @ <nl> <nl> if ( this . isChunkLoaded ) <nl> { <nl> @ @ - 264 , 7 + 266 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 934 , 7 + 1023 , 8 @ @ <nl> + @ @ - 934 , 7 + 1025 , 8 @ @ <nl> par4TileEntity . yCoord = par2 ; <nl> par4TileEntity . zCoord = this . zPosition * 16 + par3 ; <nl> <nl> @ @ - 274 , 7 + 276 , 7 @ @ <nl> { <nl> if ( this . chunkTileEntityMap . containsKey ( chunkposition ) ) <nl> { <nl> - @ @ - 984 , 6 + 1074 , 7 @ @ <nl> + @ @ - 984 , 6 + 1076 , 7 @ @ <nl> <nl> this . worldObj . addLoadedEntities ( this . entityLists [ i ] ) ; <nl> } <nl> @ @ - 282 , 7 + 284 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 1004 , 6 + 1095 , 7 @ @ <nl> + @ @ - 1004 , 6 + 1097 , 7 @ @ <nl> { <nl> this . worldObj . unloadEntities ( this . entityLists [ i ] ) ; <nl> } <nl> @ @ - 290 , 7 + 292 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 1020 , 8 + 1112 , 8 @ @ <nl> + @ @ - 1020 , 8 + 1114 , 8 @ @ <nl> * / <nl> public void getEntitiesWithinAABBForEntity ( Entity par1Entity , AxisAlignedBB par2AxisAlignedBB , List par3List , IEntitySelector par4IEntitySelector ) <nl> { <nl> @ @ - 301 , 7 + 303 , 7 @ @ <nl> <nl> if ( i < 0 ) <nl> { <nl> - @ @ - 1070 , 8 + 1162 , 8 @ @ <nl> + @ @ - 1070 , 8 + 1164 , 8 @ @ <nl> * / <nl> public void getEntitiesOfTypeWithinAAAB ( Class par1Class , AxisAlignedBB par2AxisAlignedBB , List par3List , IEntitySelector par4IEntitySelector ) <nl> { <nl> @ @ - 312 , 7 + 314 , 7 @ @ <nl> <nl> if ( i < 0 ) <nl> { <nl> - @ @ - 1254 , 6 + 1346 , 15 @ @ <nl> + @ @ - 1254 , 6 + 1348 , 15 @ @ <nl> * / <nl> public void fillChunk ( byte [ ] par1ArrayOfByte , int par2 , int par3 , boolean par4 ) <nl> { <nl> @ @ - 328 , 7 + 330 , 7 @ @ <nl> int k = 0 ; <nl> boolean flag1 = ! this . worldObj . provider . hasNoSky ; <nl> int l ; <nl> - @ @ - 1354 , 12 + 1455 , 26 @ @ <nl> + @ @ - 1354 , 12 + 1457 , 26 @ @ <nl> } <nl> <nl> this . generateHeightMap ( ) ; <nl> @ @ - 359 , 7 + 361 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 1468 , 4 + 1583 , 18 @ @ <nl> + @ @ - 1468 , 4 + 1585 , 18 @ @ <nl> } <nl> } <nl> }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / world / World . java . patch b / patches / minecraft / net / minecraft / world / World . java . patch 
 index 0afb51c . . ddf3c1a 100644 
 - - - a / patches / minecraft / net / minecraft / world / World . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / World . java . patch 
 @ @ - 402 , 7 + 402 , 16 @ @ 
 throw new ReportedException ( crashreport ) ; 
 } 
 
 - @ @ - 1648 , 6 + 1759 , 12 @ @ 
 + @ @ - 1641 , 13 + 1752 , 21 @ @ 
 + { 
 + try 
 + { 
 + + net . minecraftforge . server . timings . TimeTracker . ENTITY _ UPDATE . trackStart ( entity2 ) ; 
 + this . func _ 72870 _ g ( entity2 ) ; 
 + + net . minecraftforge . server . timings . TimeTracker . ENTITY _ UPDATE . trackEnd ( entity2 ) ; 
 + } 
 + catch ( Throwable throwable1 ) 
 + { 
 CrashReport crashreport1 = CrashReport . func _ 85055 _ a ( throwable1 , " Ticking entity " ) ; 
 CrashReportCategory crashreportcategory1 = crashreport1 . func _ 85058 _ a ( " Entity being ticked " ) ; 
 entity2 . func _ 85029 _ a ( crashreportcategory1 ) ; 
 @ @ - 415 , 7 + 424 , 7 @ @ 
 throw new ReportedException ( crashreport1 ) ; 
 } 
 } 
 - @ @ - 1674 , 14 + 1791 , 23 @ @ 
 + @ @ - 1674 , 14 + 1793 , 23 @ @ 
 
 this . field _ 72984 _ F . func _ 76318 _ c ( " blockEntities " ) ; 
 
 @ @ - 442 , 7 + 451 , 7 @ @ 
 Iterator < TileEntity > iterator = this . field _ 175730 _ i . iterator ( ) ; 
 
 while ( iterator . hasNext ( ) ) 
 - @ @ - 1692 , 7 + 1818 , 7 @ @ 
 + @ @ - 1692 , 7 + 1820 , 7 @ @ 
 { 
 BlockPos blockpos = tileentity . func _ 174877 _ v ( ) ; 
 
 @ @ - 451 , 7 + 460 , 17 @ @ 
 { 
 try 
 { 
 - @ @ - 1708 , 6 + 1834 , 13 @ @ 
 + @ @ - 1700 , 7 + 1828 , 9 @ @ 
 + { 
 + return String . valueOf ( ( Object ) TileEntity . func _ 190559 _ a ( tileentity . getClass ( ) ) ) ; 
 + } ) ; 
 + + net . minecraftforge . server . timings . TimeTracker . TILE _ ENTITY _ UPDATE . trackStart ( tileentity ) ; 
 + ( ( ITickable ) tileentity ) . func _ 73660 _ a ( ) ; 
 + + net . minecraftforge . server . timings . TimeTracker . TILE _ ENTITY _ UPDATE . trackEnd ( tileentity ) ; 
 + this . field _ 72984 _ F . func _ 76319 _ b ( ) ; 
 + } 
 + catch ( Throwable throwable ) 
 + @ @ - 1708 , 6 + 1838 , 13 @ @ 
 CrashReport crashreport2 = CrashReport . func _ 85055 _ a ( throwable , " Ticking block entity " ) ; 
 CrashReportCategory crashreportcategory2 = crashreport2 . func _ 85058 _ a ( " Block entity being ticked " ) ; 
 tileentity . func _ 145828 _ a ( crashreportcategory2 ) ; 
 @ @ - 465 , 7 + 484 , 7 @ @ 
 throw new ReportedException ( crashreport2 ) ; 
 } 
 } 
 - @ @ - 1720 , 7 + 1853 , 10 @ @ 
 + @ @ - 1720 , 7 + 1857 , 10 @ @ 
 
 if ( this . func _ 175667 _ e ( tileentity . func _ 174877 _ v ( ) ) ) 
 { 
 @ @ - 477 , 7 + 496 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 1764 , 12 + 1900 , 18 @ @ 
 + @ @ - 1764 , 12 + 1904 , 18 @ @ 
 
 public boolean func _ 175700 _ a ( TileEntity p _ 175700 _ 1 _ ) 
 { 
 @ @ - 496 , 7 + 515 , 7 @ @ 
 
 if ( this . field _ 72995 _ K ) 
 { 
 - @ @ - 1785 , 6 + 1927 , 11 @ @ 
 + @ @ - 1785 , 6 + 1931 , 11 @ @ 
 { 
 if ( this . field _ 147481 _ N ) 
 { 
 @ @ - 508 , 7 + 527 , 7 @ @ 
 this . field _ 147484 _ a . addAll ( p _ 147448 _ 1 _ ) ; 
 } 
 else 
 - @ @ - 1807 , 9 + 1954 , 13 @ @ 
 + @ @ - 1807 , 9 + 1958 , 13 @ @ 
 { 
 int j2 = MathHelper . func _ 76128 _ c ( p _ 72866 _ 1 _ . field _ 70165 _ t ) ; 
 int k2 = MathHelper . func _ 76128 _ c ( p _ 72866 _ 1 _ . field _ 70161 _ v ) ; 
 @ @ - 524 , 7 + 543 , 7 @ @ 
 { 
 return ; 
 } 
 - @ @ - 1831 , 6 + 1982 , 7 @ @ 
 + @ @ - 1831 , 6 + 1986 , 7 @ @ 
 } 
 else 
 { 
 @ @ - 532 , 7 + 551 , 7 @ @ 
 p _ 72866 _ 1 _ . func _ 70071 _ h _ ( ) ; 
 } 
 } 
 - @ @ - 1914 , 7 + 2066 , 7 @ @ 
 + @ @ - 1914 , 7 + 2070 , 7 @ @ 
 { 
 Entity entity4 = list . get ( j2 ) ; 
 
 @ @ - 541 , 7 + 560 , 7 @ @ 
 { 
 return false ; 
 } 
 - @ @ - 2011 , 6 + 2163 , 11 @ @ 
 + @ @ - 2011 , 6 + 2167 , 11 @ @ 
 blockpos $ pooledmutableblockpos . func _ 185344 _ t ( ) ; 
 return true ; 
 } 
 @ @ - 553 , 7 + 572 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 2050 , 6 + 2207 , 16 @ @ 
 + @ @ - 2050 , 6 + 2211 , 16 @ @ 
 IBlockState iblockstate1 = this . func _ 180495 _ p ( blockpos $ pooledmutableblockpos ) ; 
 Block block = iblockstate1 . func _ 177230 _ c ( ) ; 
 
 @ @ - 570 , 7 + 589 , 7 @ @ 
 if ( iblockstate1 . func _ 185904 _ a ( ) = = p _ 72918 _ 2 _ ) 
 { 
 double d0 = ( double ) ( ( float ) ( i4 + 1 ) - BlockLiquid . func _ 149801 _ b ( ( ( Integer ) iblockstate1 . func _ 177229 _ b ( BlockLiquid . field _ 176367 _ b ) ) . intValue ( ) ) ) ; 
 - @ @ - 2116 , 6 + 2283 , 7 @ @ 
 + @ @ - 2116 , 6 + 2287 , 7 @ @ 
 public Explosion func _ 72885 _ a ( @ Nullable Entity p _ 72885 _ 1 _ , double p _ 72885 _ 2 _ , double p _ 72885 _ 4 _ , double p _ 72885 _ 6 _ , float p _ 72885 _ 8 _ , boolean p _ 72885 _ 9 _ , boolean p _ 72885 _ 10 _ ) 
 { 
 Explosion explosion = new Explosion ( this , p _ 72885 _ 1 _ , p _ 72885 _ 2 _ , p _ 72885 _ 4 _ , p _ 72885 _ 6 _ , p _ 72885 _ 8 _ , p _ 72885 _ 9 _ , p _ 72885 _ 10 _ ) ; 
 @ @ - 578 , 7 + 597 , 7 @ @ 
 explosion . func _ 77278 _ a ( ) ; 
 explosion . func _ 77279 _ a ( true ) ; 
 return explosion ; 
 - @ @ - 2238 , 6 + 2406 , 7 @ @ 
 + @ @ - 2238 , 6 + 2410 , 7 @ @ 
 
 public void func _ 175690 _ a ( BlockPos p _ 175690 _ 1 _ , @ Nullable TileEntity p _ 175690 _ 2 _ ) 
 { 
 @ @ - 586 , 7 + 605 , 7 @ @ 
 if ( ! this . func _ 189509 _ E ( p _ 175690 _ 1 _ ) ) 
 { 
 if ( p _ 175690 _ 2 _ ! = null & & ! p _ 175690 _ 2 _ . func _ 145837 _ r ( ) ) 
 - @ @ - 2245 , 6 + 2414 , 8 @ @ 
 + @ @ - 2245 , 6 + 2418 , 8 @ @ 
 if ( this . field _ 147481 _ N ) 
 { 
 p _ 175690 _ 2 _ . func _ 174878 _ a ( p _ 175690 _ 1 _ ) ; 
 @ @ - 595 , 7 + 614 , 7 @ @ 
 Iterator < TileEntity > iterator1 = this . field _ 147484 _ a . iterator ( ) ; 
 
 while ( iterator1 . hasNext ( ) ) 
 - @ @ - 2262 , 7 + 2433 , 8 @ @ 
 + @ @ - 2262 , 7 + 2437 , 8 @ @ 
 } 
 else 
 { 
 @ @ - 605 , 7 + 624 , 7 @ @ 
 this . func _ 175700 _ a ( p _ 175690 _ 2 _ ) ; 
 } 
 } 
 - @ @ - 2277 , 6 + 2449 , 8 @ @ 
 + @ @ - 2277 , 6 + 2453 , 8 @ @ 
 { 
 tileentity2 . func _ 145843 _ s ( ) ; 
 this . field _ 147484 _ a . remove ( tileentity2 ) ; 
 @ @ - 614 , 7 + 633 , 7 @ @ 
 } 
 else 
 { 
 - @ @ - 2289 , 6 + 2463 , 7 @ @ 
 + @ @ - 2289 , 6 + 2467 , 7 @ @ 
 
 this . func _ 175726 _ f ( p _ 175713 _ 1 _ ) . func _ 177425 _ e ( p _ 175713 _ 1 _ ) ; 
 } 
 @ @ - 622 , 7 + 641 , 7 @ @ 
 } 
 
 public void func _ 147457 _ a ( TileEntity p _ 147457 _ 1 _ ) 
 - @ @ - 2315 , 7 + 2490 , 7 @ @ 
 + @ @ - 2315 , 7 + 2494 , 7 @ @ 
 if ( chunk1 ! = null & & ! chunk1 . func _ 76621 _ g ( ) ) 
 { 
 IBlockState iblockstate1 = this . func _ 180495 _ p ( p _ 175677 _ 1 _ ) ; 
 @ @ - 631 , 7 + 650 , 7 @ @ 
 } 
 else 
 { 
 - @ @ - 2338 , 6 + 2513 , 7 @ @ 
 + @ @ - 2338 , 6 + 2517 , 7 @ @ 
 { 
 this . field _ 72985 _ G = p _ 72891 _ 1 _ ; 
 this . field _ 72992 _ H = p _ 72891 _ 2 _ ; 
 @ @ - 639 , 7 + 658 , 7 @ @ 
 } 
 
 public void func _ 72835 _ b ( ) 
 - @ @ - 2347 , 6 + 2523 , 11 @ @ 
 + @ @ - 2347 , 6 + 2527 , 11 @ @ 
 
 protected void func _ 72947 _ a ( ) 
 { 
 @ @ - 651 , 7 + 670 , 7 @ @ 
 if ( this . field _ 72986 _ A . func _ 76059 _ o ( ) ) 
 { 
 this . field _ 73004 _ o = 1 . 0F ; 
 - @ @ - 2360 , 6 + 2541 , 11 @ @ 
 + @ @ - 2360 , 6 + 2545 , 11 @ @ 
 
 protected void func _ 72979 _ l ( ) 
 { 
 @ @ - 663 , 7 + 682 , 7 @ @ 
 if ( this . field _ 73011 _ w . func _ 191066 _ m ( ) ) 
 { 
 if ( ! this . field _ 72995 _ K ) 
 - @ @ - 2484 , 6 + 2670 , 11 @ @ 
 + @ @ - 2484 , 6 + 2674 , 11 @ @ 
 
 public boolean func _ 175670 _ e ( BlockPos p _ 175670 _ 1 _ , boolean p _ 175670 _ 2 _ ) 
 { 
 @ @ - 675 , 7 + 694 , 7 @ @ 
 Biome biome = this . func _ 180494 _ b ( p _ 175670 _ 1 _ ) ; 
 float f = biome . func _ 180626 _ a ( p _ 175670 _ 1 _ ) ; 
 
 - @ @ - 2525 , 6 + 2716 , 11 @ @ 
 + @ @ - 2525 , 6 + 2720 , 11 @ @ 
 
 public boolean func _ 175708 _ f ( BlockPos p _ 175708 _ 1 _ , boolean p _ 175708 _ 2 _ ) 
 { 
 @ @ - 687 , 7 + 706 , 7 @ @ 
 Biome biome = this . func _ 180494 _ b ( p _ 175708 _ 1 _ ) ; 
 float f = biome . func _ 180626 _ a ( p _ 175708 _ 1 _ ) ; 
 
 - @ @ - 2542 , 7 + 2738 , 7 @ @ 
 + @ @ - 2542 , 7 + 2742 , 7 @ @ 
 { 
 IBlockState iblockstate1 = this . func _ 180495 _ p ( p _ 175708 _ 1 _ ) ; 
 
 @ @ - 696 , 7 + 715 , 7 @ @ 
 { 
 return true ; 
 } 
 - @ @ - 2574 , 10 + 2770 , 11 @ @ 
 + @ @ - 2574 , 10 + 2774 , 11 @ @ 
 else 
 { 
 IBlockState iblockstate1 = this . func _ 180495 _ p ( p _ 175638 _ 1 _ ) ; 
 @ @ - 711 , 7 + 730 , 7 @ @ 
 { 
 k2 = 1 ; 
 } 
 - @ @ - 2683 , 7 + 2880 , 8 @ @ 
 + @ @ - 2683 , 7 + 2884 , 8 @ @ 
 int k6 = k4 + enumfacing . func _ 96559 _ d ( ) ; 
 int l6 = l4 + enumfacing . func _ 82599 _ e ( ) ; 
 blockpos $ pooledmutableblockpos . func _ 181079 _ c ( j6 , k6 , l6 ) ; 
 @ @ - 721 , 7 + 740 , 7 @ @ 
 j5 = this . func _ 175642 _ b ( p _ 180500 _ 1 _ , blockpos $ pooledmutableblockpos ) ; 
 
 if ( j5 = = i5 - i7 & & k2 < this . field _ 72994 _ J . length ) 
 - @ @ - 2791 , 10 + 2989 , 10 @ @ 
 + @ @ - 2791 , 10 + 2993 , 10 @ @ 
 public List < Entity > func _ 175674 _ a ( @ Nullable Entity p _ 175674 _ 1 _ , AxisAlignedBB p _ 175674 _ 2 _ , @ Nullable Predicate < ? super Entity > p _ 175674 _ 3 _ ) 
 { 
 List < Entity > list = Lists . < Entity > newArrayList ( ) ; 
 @ @ - 736 , 7 + 755 , 7 @ @ 
 
 for ( int j3 = j2 ; j3 < = k2 ; + + j3 ) 
 { 
 - @ @ - 2847 , 10 + 3045 , 10 @ @ 
 + @ @ - 2847 , 10 + 3049 , 10 @ @ 
 
 public < T extends Entity > List < T > func _ 175647 _ a ( Class < ? extends T > p _ 175647 _ 1 _ , AxisAlignedBB p _ 175647 _ 2 _ , @ Nullable Predicate < ? super T > p _ 175647 _ 3 _ ) 
 { 
 @ @ - 751 , 7 + 770 , 7 @ @ 
 List < T > list = Lists . < T > newArrayList ( ) ; 
 
 for ( int j3 = j2 ; j3 < k2 ; + + j3 ) 
 - @ @ - 2930 , 11 + 3128 , 13 @ @ 
 + @ @ - 2930 , 11 + 3132 , 13 @ @ 
 
 public void func _ 175650 _ b ( Collection < Entity > p _ 175650 _ 1 _ ) 
 { 
 @ @ - 768 , 7 + 787 , 7 @ @ 
 } 
 } 
 
 - @ @ - 2958 , 7 + 3158 , 7 @ @ 
 + @ @ - 2958 , 7 + 3162 , 7 @ @ 
 } 
 else 
 { 
 @ @ - 777 , 7 + 796 , 7 @ @ 
 } 
 } 
 
 - @ @ - 3042 , 7 + 3242 , 7 @ @ 
 + @ @ - 3042 , 7 + 3246 , 7 @ @ 
 public int func _ 175651 _ c ( BlockPos p _ 175651 _ 1 _ , EnumFacing p _ 175651 _ 2 _ ) 
 { 
 IBlockState iblockstate1 = this . func _ 180495 _ p ( p _ 175651 _ 1 _ ) ; 
 @ @ - 786 , 7 + 805 , 7 @ @ 
 } 
 
 public boolean func _ 175640 _ z ( BlockPos p _ 175640 _ 1 _ ) 
 - @ @ - 3208 , 6 + 3408 , 8 @ @ 
 + @ @ - 3208 , 6 + 3412 , 8 @ @ 
 d2 * = ( ( Double ) MoreObjects . firstNonNull ( p _ 184150 _ 11 _ . apply ( entityplayer1 ) , Double . valueOf ( 1 . 0D ) ) ) . doubleValue ( ) ; 
 } 
 
 @ @ - 795 , 7 + 814 , 7 @ @ 
 if ( ( p _ 184150 _ 9 _ < 0 . 0D | | Math . abs ( entityplayer1 . field _ 70163 _ u - p _ 184150 _ 3 _ ) < p _ 184150 _ 9 _ * p _ 184150 _ 9 _ ) & & ( p _ 184150 _ 7 _ < 0 . 0D | | d1 < d2 * d2 ) & & ( d0 = = - 1 . 0D | | d1 < d0 ) ) 
 { 
 d0 = d1 ; 
 - @ @ - 3269 , 7 + 3471 , 7 @ @ 
 + @ @ - 3269 , 7 + 3475 , 7 @ @ 
 
 public long func _ 72905 _ C ( ) 
 { 
 @ @ - 804 , 7 + 823 , 7 @ @ 
 } 
 
 public long func _ 82737 _ E ( ) 
 - @ @ - 3279 , 17 + 3481 , 17 @ @ 
 + @ @ - 3279 , 17 + 3485 , 17 @ @ 
 
 public long func _ 72820 _ D ( ) 
 { 
 @ @ - 825 , 7 + 844 , 7 @ @ 
 
 if ( ! this . func _ 175723 _ af ( ) . func _ 177746 _ a ( blockpos1 ) ) 
 { 
 - @ @ - 3301 , 7 + 3503 , 7 @ @ 
 + @ @ - 3301 , 7 + 3507 , 7 @ @ 
 
 public void func _ 175652 _ B ( BlockPos p _ 175652 _ 1 _ ) 
 { 
 @ @ - 834 , 7 + 853 , 7 @ @ 
 } 
 
 @ SideOnly ( Side . CLIENT ) 
 - @ @ - 3321 , 12 + 3523 , 18 @ @ 
 + @ @ - 3321 , 12 + 3527 , 18 @ @ 
 
 if ( ! this . field _ 72996 _ f . contains ( p _ 72897 _ 1 _ ) ) 
 { 
 @ @ - 853 , 7 + 872 , 7 @ @ 
 return true ; 
 } 
 
 - @ @ - 3428 , 8 + 3636 , 7 @ @ 
 + @ @ - 3428 , 8 + 3640 , 7 @ @ 
 
 public boolean func _ 180502 _ D ( BlockPos p _ 180502 _ 1 _ ) 
 { 
 @ @ - 863 , 7 + 882 , 7 @ @ 
 } 
 
 @ Nullable 
 - @ @ - 3490 , 12 + 3697 , 12 @ @ 
 + @ @ - 3490 , 12 + 3701 , 12 @ @ 
 
 public int func _ 72800 _ K ( ) 
 { 
 @ @ - 878 , 7 + 897 , 7 @ @ 
 } 
 
 public Random func _ 72843 _ D ( int p _ 72843 _ 1 _ , int p _ 72843 _ 2 _ , int p _ 72843 _ 3 _ ) 
 - @ @ - 3539 , 7 + 3746 , 7 @ @ 
 + @ @ - 3539 , 7 + 3750 , 7 @ @ 
 @ SideOnly ( Side . CLIENT ) 
 public double func _ 72919 _ O ( ) 
 { 
 @ @ - 887 , 7 + 906 , 7 @ @ 
 } 
 
 public void func _ 175715 _ c ( int p _ 175715 _ 1 _ , BlockPos p _ 175715 _ 2 _ , int p _ 175715 _ 3 _ ) 
 - @ @ - 3573 , 7 + 3780 , 7 @ @ 
 + @ @ - 3573 , 7 + 3784 , 7 @ @ 
 
 public void func _ 175666 _ e ( BlockPos p _ 175666 _ 1 _ , Block p _ 175666 _ 2 _ ) 
 { 
 @ @ - 896 , 7 + 915 , 7 @ @ 
 { 
 BlockPos blockpos1 = p _ 175666 _ 1 _ . func _ 177972 _ a ( enumfacing ) ; 
 
 - @ @ - 3581 , 18 + 3788 , 15 @ @ 
 + @ @ - 3581 , 18 + 3792 , 15 @ @ 
 { 
 IBlockState iblockstate1 = this . func _ 180495 _ p ( blockpos1 ) ; 
 
 @ @ - 919 , 7 + 938 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 3658 , 6 + 3862 , 124 @ @ 
 + @ @ - 3658 , 6 + 3866 , 124 @ @ 
 return j2 > = - 128 & & j2 < = 128 & & k2 > = - 128 & & k2 < = 128 ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java b / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java 
 index 53a7372 . . 698a183 100644 
 - - - a / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java 
 + + + b / src / main / java / net / minecraftforge / server / ForgeTimeTracker . java 
 @ @ - 20 , 34 + 20 , 54 @ @ 
 package net . minecraftforge . server ; 
 
 import java . lang . ref . WeakReference ; 
 - import java . util . Arrays ; 
 import java . util . Map ; 
 - import java . util . Map . Entry ; 
 
 import com . google . common . collect . ImmutableMap ; 
 - import com . google . common . collect . ImmutableMap . Builder ; 
 import com . google . common . collect . MapMaker ; 
 
 import net . minecraft . entity . Entity ; 
 import net . minecraft . tileentity . TileEntity ; 
 + import net . minecraftforge . server . timings . TimeTracker ; 
 
 + / * * 
 + * @ deprecated To be removed in 1 . 13 - Implementation has been moved 
 + * @ see net . minecraftforge . server . timings . TimeTracker 
 + * / 
 + @ Deprecated 
 public class ForgeTimeTracker { 
 + / * * 
 + * @ deprecated To be removed in 1 . 13 - Implementation has been moved 
 + * @ see net . minecraftforge . server . timings . TimeTracker 
 + * / 
 + @ Deprecated 
 public static boolean tileEntityTracking ; 
 + 
 + / * * 
 + * @ deprecated To be removed in 1 . 13 - Implementation has been moved 
 + * @ see net . minecraftforge . server . timings . TimeTracker 
 + * / 
 + @ Deprecated 
 public static int tileEntityTrackingDuration ; 
 + 
 + / * * 
 + * @ deprecated To be removed in 1 . 13 - Implementation has been moved 
 + * @ see net . minecraftforge . server . timings . TimeTracker 
 + * / 
 + @ Deprecated 
 public static long tileEntityTrackingTime ; 
 - 
 + 
 private Map < TileEntity , int [ ] > tileEntityTimings ; 
 private WeakReference < TileEntity > tile ; 
 - 
 + 
 private static final ForgeTimeTracker INSTANCE = new ForgeTimeTracker ( ) ; 
 
 / * not implemented 
 private WeakReference < Entity > entity ; 
 private Map < Entity , int [ ] > entityTimings ; 
 * / 
 - 
 + 
 private long timing ; 
 - 
 + 
 private ForgeTimeTracker ( ) 
 { 
 MapMaker mm = new MapMaker ( ) ; 
 @ @ - 55 , 7 + 75 , 7 @ @ public class ForgeTimeTracker { 
 tileEntityTimings = mm . makeMap ( ) ; 
 / / entityTimings = mm . makeMap ( ) ; 
 } 
 - 
 + 
 
 private void trackTileStart ( TileEntity tileEntity , long nanoTime ) 
 { 
 @ @ - 67 , 7 + 87 , 7 @ @ public class ForgeTimeTracker { 
 { 
 tileEntityTracking = false ; 
 tileEntityTrackingTime = 0 ; 
 - 
 + 
 return ; 
 } 
 tile = new WeakReference < TileEntity > ( tileEntity ) ; 
 @ @ - 88 , 42 + 108 , 61 @ @ public class ForgeTimeTracker { 
 timings [ idx ] = ( int ) ( nanoTime - timing ) ; 
 } 
 
 + / * * 
 + * @ deprecated To be removed in 1 . 13 - Implementation has been moved 
 + * @ see TimeTracker # getTimingData ( ) 
 + * / 
 + @ Deprecated 
 public static ImmutableMap < TileEntity , int [ ] > getTileTimings ( ) 
 { 
 return INSTANCE . buildImmutableTileEntityTimingMap ( ) ; 
 } 
 - 
 + 
 private ImmutableMap < TileEntity , int [ ] > buildImmutableTileEntityTimingMap ( ) 
 { 
 - Builder < TileEntity , int [ ] > builder = ImmutableMap . builder ( ) ; 
 - for ( Entry < TileEntity , int [ ] > entry : tileEntityTimings . entrySet ( ) ) 
 - { 
 - builder . put ( entry . getKey ( ) , Arrays . copyOfRange ( entry . getValue ( ) , 0 , 100 ) ) ; 
 - } 
 + ImmutableMap . Builder < TileEntity , int [ ] > builder = new ImmutableMap . Builder < > ( ) ; 
 + TimeTracker . TILE _ ENTITY _ UPDATE . getTimingData ( ) . stream ( ) 
 + . filter ( t - > t . getObject ( ) . get ( ) ! = null ) . forEach ( e - > builder . put ( e . getObject ( ) . get ( ) , e . getRawTimingData ( ) ) ) ; 
 return builder . build ( ) ; 
 } 
 
 - 
 + / * * 
 + * @ deprecated To be removed in 1 . 13 - Implementation has been moved 
 + * @ see TimeTracker # trackStart ( Object ) 
 + * / 
 + @ Deprecated 
 public static void trackStart ( TileEntity tileEntity ) 
 { 
 - if ( ! tileEntityTracking ) return ; 
 - INSTANCE . trackTileStart ( tileEntity , System . nanoTime ( ) ) ; 
 + TimeTracker . TILE _ ENTITY _ UPDATE . trackStart ( tileEntity ) ; 
 } 
 
 + / * * 
 + * @ deprecated To be removed in 1 . 13 - Implementation has been moved 
 + * @ see TimeTracker # trackEnd ( Object ) 
 + * / 
 + @ Deprecated 
 public static void trackEnd ( TileEntity tileEntity ) 
 { 
 - if ( ! tileEntityTracking ) return ; 
 - INSTANCE . trackTileEnd ( tileEntity , System . nanoTime ( ) ) ; 
 + TimeTracker . TILE _ ENTITY _ UPDATE . trackEnd ( tileEntity ) ; 
 } 
 
 + / * * 
 + * @ deprecated To be removed in 1 . 13 - Implementation has been moved 
 + * @ see TimeTracker # trackStart ( Object ) 
 + * / 
 + @ Deprecated 
 public static void trackStart ( Entity par1Entity ) 
 { 
 - 
 } 
 
 + / * * 
 + * @ deprecated To be removed in 1 . 13 - Implementation has been moved 
 + * @ see TimeTracker # trackEnd ( Object ) 
 + * / 
 + @ Deprecated 
 public static void trackEnd ( Entity par1Entity ) 
 { 
 - 
 + 
 } 
 
 } 
 diff - - git a / src / main / java / net / minecraftforge / server / command / CommandTrack . java b / src / main / java / net / minecraftforge / server / command / CommandTrack . java 
 index fd3e4f8 . . a5b0a22 100644 
 - - - a / src / main / java / net / minecraftforge / server / command / CommandTrack . java 
 + + + b / src / main / java / net / minecraftforge / server / command / CommandTrack . java 
 @ @ - 19 , 19 + 19 , 42 @ @ 
 package net . minecraftforge . server . command ; 
 
 import javax . annotation . Nullable ; 
 + import java . text . DecimalFormat ; 
 + import java . util . ArrayList ; 
 + import java . util . Arrays ; 
 import java . util . Collections ; 
 + import java . util . Comparator ; 
 import java . util . List ; 
 
 import net . minecraft . command . CommandBase ; 
 import net . minecraft . command . CommandException ; 
 import net . minecraft . command . ICommandSender ; 
 import net . minecraft . command . WrongUsageException ; 
 + import net . minecraft . entity . Entity ; 
 import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . tileentity . TileEntity ; 
 + import net . minecraft . util . ResourceLocation ; 
 import net . minecraft . util . math . BlockPos ; 
 - import net . minecraftforge . server . ForgeTimeTracker ; 
 + import net . minecraft . util . text . ITextComponent ; 
 + import net . minecraft . world . DimensionType ; 
 + import net . minecraftforge . common . DimensionManager ; 
 + import net . minecraftforge . server . timings . ForgeTimings ; 
 + import net . minecraftforge . server . timings . TimeTracker ; 
 
 - class CommandTrack extends CommandBase 
 + class CommandTrack extends CommandTreeBase 
 { 
 + 
 + private static final DecimalFormat TIME _ FORMAT = new DecimalFormat ( " # # # # # 0 . 00 " ) ; 
 + 
 + public CommandTrack ( ) 
 + { 
 + addSubcommand ( new StartTrackingCommand ( ) ) ; 
 + addSubcommand ( new ResetTrackingCommand ( ) ) ; 
 + addSubcommand ( new TrackResultsTileEntity ( ) ) ; 
 + addSubcommand ( new TrackResultsEntity ( ) ) ; 
 + addSubcommand ( new CommandTreeHelp ( this ) ) ; 
 + } 
 + 
 @ Override 
 public String getName ( ) 
 { 
 @ @ - 47 , 38 + 70 , 289 @ @ class CommandTrack extends CommandBase 
 @ Override 
 public String getUsage ( ICommandSender sender ) 
 { 
 - return " commands . forge . usage . tracking " ; 
 + return " commands . forge . tracking . usage " ; 
 } 
 
 - @ Override 
 - public void execute ( MinecraftServer server , ICommandSender sender , String [ ] args ) throws CommandException 
 + private static class StartTrackingCommand extends CommandBase 
 { 
 - if ( args . length ! = 2 ) 
 + 
 + @ Override 
 + public void execute ( MinecraftServer server , ICommandSender sender , String [ ] args ) throws CommandException 
 + { 
 + if ( args . length ! = 2 ) 
 + { 
 + throw new WrongUsageException ( getUsage ( sender ) ) ; 
 + } 
 + String type = args [ 0 ] ; 
 + int duration = parseInt ( args [ 1 ] , 1 , 60 ) ; 
 + if ( " te " . equals ( type ) ) 
 + { 
 + TimeTracker . TILE _ ENTITY _ UPDATE . reset ( ) ; 
 + TimeTracker . TILE _ ENTITY _ UPDATE . enable ( duration ) ; 
 + sender . sendMessage ( TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . te . enabled " , duration ) ) ; 
 + } 
 + else if ( " entity " . equals ( type ) ) 
 + { 
 + TimeTracker . ENTITY _ UPDATE . reset ( ) ; 
 + TimeTracker . ENTITY _ UPDATE . enable ( duration ) ; 
 + sender . sendMessage ( TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . entity . enabled " , duration ) ) ; 
 + } 
 + else 
 + { 
 + throw new WrongUsageException ( getUsage ( sender ) ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public List < String > getTabCompletions ( MinecraftServer server , ICommandSender sender , String [ ] args , @ Nullable BlockPos targetPos ) 
 + { 
 + return Arrays . asList ( " te " , " entity " ) ; 
 + } 
 + 
 + @ Override 
 + public String getName ( ) 
 { 
 - throw new WrongUsageException ( " commands . forge . usage . tracking " ) ; 
 + return " start " ; 
 } 
 - String type = args [ 0 ] ; 
 - int duration = parseInt ( args [ 1 ] , 1 , 60 ) ; 
 
 - if ( " te " . equals ( type ) ) 
 + @ Override 
 + public int getRequiredPermissionLevel ( ) 
 { 
 - ForgeTimeTracker . tileEntityTrackingDuration = duration ; 
 - ForgeTimeTracker . tileEntityTracking = true ; 
 - sender . sendMessage ( TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . te . enabled " , duration ) ) ; 
 + return 2 ; 
 } 
 - else 
 + 
 + @ Override 
 + public String getUsage ( ICommandSender sender ) 
 { 
 - throw new WrongUsageException ( " commands . forge . usage . tracking " ) ; 
 + return " commands . forge . tracking . start . usage " ; 
 } 
 } 
 
 - @ Override 
 - public List < String > getTabCompletions ( MinecraftServer server , ICommandSender sender , String [ ] args , @ Nullable BlockPos targetPos ) 
 + private static class ResetTrackingCommand extends CommandBase 
 { 
 - if ( args . length = = 1 ) 
 + @ Override 
 + public String getName ( ) 
 + { 
 + return " reset " ; 
 + } 
 + 
 + @ Override 
 + public String getUsage ( ICommandSender sender ) 
 + { 
 + return " commands . forge . tracking . reset . usage " ; 
 + } 
 + 
 + @ Override 
 + public int getRequiredPermissionLevel ( ) 
 + { 
 + return 2 ; 
 + } 
 + 
 + @ Override 
 + public void execute ( MinecraftServer server , ICommandSender sender , String [ ] args ) throws CommandException 
 + { 
 + if ( args . length ! = 1 ) 
 + { 
 + throw new WrongUsageException ( getUsage ( sender ) ) ; 
 + } 
 + String type = args [ 0 ] ; 
 + if ( " te " . equals ( type ) ) 
 + { 
 + TimeTracker . TILE _ ENTITY _ UPDATE . reset ( ) ; 
 + sender . sendMessage ( TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . reset " ) ) ; 
 + } 
 + else if ( " entity " . equals ( type ) ) 
 + { 
 + TimeTracker . ENTITY _ UPDATE . reset ( ) ; 
 + sender . sendMessage ( TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . reset " ) ) ; 
 + } 
 + else 
 + { 
 + throw new WrongUsageException ( getUsage ( sender ) ) ; 
 + } 
 + } 
 + 
 + @ Override 
 + public List < String > getTabCompletions ( MinecraftServer server , ICommandSender sender , String [ ] args , @ Nullable BlockPos targetPos ) 
 + { 
 + return Arrays . asList ( " te " , " entity " ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * A base command for all the tracking results commands 
 + * 
 + * @ param < T > 
 + * / 
 + private static abstract class TrackResultsBaseCommand < T > extends CommandBase 
 + { 
 + 
 + private TimeTracker < T > tracker ; 
 + 
 + protected TrackResultsBaseCommand ( TimeTracker < T > tracker ) 
 + { 
 + this . tracker = tracker ; 
 + } 
 + 
 + / * * 
 + * Returns the time objects recorded by the time tracker sorted by average time 
 + * 
 + * @ return A list of time objects 
 + * / 
 + protected List < ForgeTimings < T > > getSortedTimings ( ) 
 + { 
 + ArrayList < ForgeTimings < T > > list = new ArrayList < > ( ) ; 
 + 
 + list . addAll ( tracker . getTimingData ( ) ) ; 
 + list . sort ( Comparator . comparingDouble ( ForgeTimings : : getAverageTimings ) ) ; 
 + Collections . reverse ( list ) ; 
 + 
 + return list ; 
 + } 
 + 
 + @ Override 
 + public void execute ( MinecraftServer server , ICommandSender sender , String [ ] args ) throws CommandException 
 + { 
 + List < ForgeTimings < T > > timingsList = getSortedTimings ( ) ; 
 + if ( timingsList . isEmpty ( ) ) 
 + { 
 + sender . sendMessage ( TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . noData " ) ) ; 
 + } 
 + else 
 + { 
 + timingsList . stream ( ) 
 + . filter ( timings - > timings . getObject ( ) . get ( ) ! = null ) 
 + . limit ( 10 ) 
 + . forEach ( timings - > sender . sendMessage ( buildTrackString ( sender , timings ) ) 
 + ) ; 
 + } 
 + } 
 + 
 + protected abstract ITextComponent buildTrackString ( ICommandSender sender , ForgeTimings < T > data ) ; 
 + 
 + / * * 
 + * Gets the time suffix for the provided time in nanoseconds 
 + * 
 + * @ param time The time in nanoseconds 
 + * @ return The time suffix 
 + * / 
 + protected String getTimeSuffix ( double time ) 
 + { 
 + if ( time < 1000 ) 
 + { 
 + return " µ s " ; 
 + } 
 + else 
 + { 
 + return " ms " ; 
 + } 
 + } 
 + 
 + / * * 
 + * Translates a world dimension ID into a name 
 + * 
 + * @ param dimId The dimension ID 
 + * @ return The name of the dimension 
 + * / 
 + protected String getWorldName ( int dimId ) 
 + { 
 + DimensionType type = DimensionManager . getProviderType ( dimId ) ; 
 + if ( type = = null ) 
 + { 
 + return " Dim " + dimId ; 
 + } 
 + else 
 + { 
 + return type . getName ( ) ; 
 + } 
 + } 
 + } 
 + 
 + private static class TrackResultsEntity extends TrackResultsBaseCommand < Entity > 
 + { 
 + public TrackResultsEntity ( ) 
 + { 
 + super ( TimeTracker . ENTITY _ UPDATE ) ; 
 + } 
 + 
 + @ Override 
 + public String getName ( ) 
 + { 
 + return " entity " ; 
 + } 
 + 
 + @ Override 
 + public String getUsage ( ICommandSender sender ) 
 + { 
 + return " commands . forge . tracking . entity . usage " ; 
 + } 
 + 
 + @ Override 
 + protected ITextComponent buildTrackString ( ICommandSender sender , ForgeTimings < Entity > data ) 
 + { 
 + Entity entity = data . getObject ( ) . get ( ) ; 
 + if ( entity = = null ) 
 + return TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . invalid " ) ; 
 + 
 + BlockPos currentPos = entity . getPosition ( ) ; 
 + String world = getWorldName ( entity . world . provider . getDimension ( ) ) ; 
 + double averageTimings = data . getAverageTimings ( ) ; 
 + String tickTime = ( averageTimings > 1000 ? TIME _ FORMAT . format ( averageTimings / 1000 ) : TIME _ FORMAT . format ( averageTimings ) ) + getTimeSuffix ( 
 + averageTimings ) ; 
 + 
 + return TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . timingEntry " , entity . getName ( ) , 
 + world , currentPos . getX ( ) , currentPos . getY ( ) , currentPos . getZ ( ) , tickTime ) ; 
 + } 
 + } 
 + 
 + private static class TrackResultsTileEntity extends TrackResultsBaseCommand < TileEntity > 
 + { 
 + 
 + public TrackResultsTileEntity ( ) 
 + { 
 + super ( TimeTracker . TILE _ ENTITY _ UPDATE ) ; 
 + } 
 + 
 + @ Override 
 + public String getName ( ) 
 + { 
 + return " te " ; 
 + } 
 + 
 + @ Override 
 + public String getUsage ( ICommandSender sender ) 
 + { 
 + return " commands . forge . tracking . te . usage " ; 
 + } 
 + 
 + @ Override 
 + protected ITextComponent buildTrackString ( ICommandSender sender , ForgeTimings < TileEntity > data ) 
 + { 
 + TileEntity te = data . getObject ( ) . get ( ) ; 
 + if ( te = = null ) 
 + return TextComponentHelper . createComponentTranslation ( sender , " commands . forge . tracking . invalid " ) ; 
 + 
 + String name = getTileEntityName ( te ) ; 
 + BlockPos pos = te . getPos ( ) ; 
 + 
 + double averageTimings = data . getAverageTimings ( ) ; 
 + String tickTime = ( averageTimings > 1000 ? TIME _ FORMAT . format ( averageTimings / 1000 ) : TIME _ FORMAT . format ( averageTimings ) ) + getTimeSuffix ( 
 + averageTimings ) ; 
 + return TextComponentHelper 
 + . createComponentTranslation ( sender , " commands . forge . tracking . timingEntry " , name , 
 + getWorldName ( te . getWorld ( ) . provider . getDimension ( ) ) , 
 + pos . getX ( ) , pos . getY ( ) , pos . getZ ( ) , tickTime ) ; 
 + } 
 + 
 + private String getTileEntityName ( TileEntity tileEntity ) 
 { 
 - return Collections . singletonList ( " te " ) ; 
 + ResourceLocation registryId = TileEntity . getKey ( tileEntity . getClass ( ) ) ; 
 + if ( registryId = = null ) 
 + return tileEntity . getClass ( ) . getSimpleName ( ) ; 
 + else 
 + { 
 + return registryId . toString ( ) ; 
 + } 
 } 
 - return Collections . emptyList ( ) ; 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / server / timings / ForgeTimings . java b / src / main / java / net / minecraftforge / server / timings / ForgeTimings . java 
 new file mode 100644 
 index 0000000 . . fa37a24 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / server / timings / ForgeTimings . java 
 @ @ - 0 , 0 + 1 , 80 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . server . timings ; 
 + 
 + import java . lang . ref . WeakReference ; 
 + import java . util . Arrays ; 
 + 
 + / * * 
 + * ForgeTimings aggregates timings data collected by { @ link TimeTracker } for an Object 
 + * and performs operations for interpretation of the data . 
 + * 
 + * @ param < T > 
 + * / 
 + public class ForgeTimings < T > 
 + { 
 + 
 + private WeakReference < T > object ; 
 + 
 + private int [ ] rawTimingData ; 
 + 
 + public ForgeTimings ( T object , int [ ] rawTimingData ) 
 + { 
 + this . object = new WeakReference < T > ( object ) ; 
 + this . rawTimingData = rawTimingData ; 
 + } 
 + 
 + / * * 
 + * Retrieves the object that the timings are for 
 + * 
 + * @ return The object 
 + * / 
 + public WeakReference < T > getObject ( ) 
 + { 
 + return object ; 
 + } 
 + 
 + 
 + / * * 
 + * Averages the raw timings data collected 
 + * 
 + * @ return An average of the raw timing data 
 + * / 
 + public double getAverageTimings ( ) 
 + { 
 + double sum = 0 . 0 ; 
 + 
 + for ( int data : rawTimingData ) 
 + { 
 + sum + = data ; 
 + } 
 + 
 + return sum / rawTimingData . length ; 
 + } 
 + 
 + / * * 
 + * Returns a copy of the raw timings data collected by the tracker 
 + * @ return The raw timing data 
 + * @ deprecated Added for compatibility , remove in 1 . 13 
 + * / 
 + public int [ ] getRawTimingData ( ) { 
 + return Arrays . copyOfRange ( rawTimingData , 0 , rawTimingData . length ) ; 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / server / timings / TimeTracker . java b / src / main / java / net / minecraftforge / server / timings / TimeTracker . java 
 new file mode 100644 
 index 0000000 . . f48dbc3 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / server / timings / TimeTracker . java 
 @ @ - 0 , 0 + 1 , 145 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . server . timings ; 
 + 
 + import java . lang . ref . WeakReference ; 
 + import java . util . Arrays ; 
 + import java . util . Map ; 
 + import java . util . concurrent . TimeUnit ; 
 + 
 + import com . google . common . collect . ImmutableList ; 
 + import com . google . common . collect . MapMaker ; 
 + 
 + import net . minecraft . entity . Entity ; 
 + import net . minecraft . tileentity . TileEntity ; 
 + 
 + / * * 
 + * A class to assist in the collection of data to measure the update times of ticking objects { currently Tile Entities and Entities } 
 + * 
 + * @ param < T > 
 + * / 
 + public class TimeTracker < T > 
 + { 
 + 
 + / * * 
 + * A tracker for timing tile entity update 
 + * / 
 + public static final TimeTracker < TileEntity > TILE _ ENTITY _ UPDATE = new TimeTracker < > ( ) ; 
 + / * * 
 + * A tracker for timing entity updates 
 + * / 
 + public static final TimeTracker < Entity > ENTITY _ UPDATE = new TimeTracker < > ( ) ; 
 + 
 + private boolean enabled ; 
 + private int trackingDuration ; 
 + private Map < T , int [ ] > timings = new MapMaker ( ) . weakKeys ( ) . makeMap ( ) ; 
 + private WeakReference < T > currentlyTracking ; 
 + private long trackTime ; 
 + private long timing ; 
 + 
 + / * * 
 + * Returns the timings data recorded by the tracker 
 + * 
 + * @ return An immutable list of timings data collected by this tracker 
 + * / 
 + public ImmutableList < ForgeTimings < T > > getTimingData ( ) 
 + { 
 + ImmutableList . Builder < ForgeTimings < T > > builder = ImmutableList . builder ( ) ; 
 + 
 + for ( Map . Entry < T , int [ ] > entry : timings . entrySet ( ) ) 
 + { 
 + builder . add ( new ForgeTimings < > ( entry . getKey ( ) , Arrays . copyOfRange ( entry . getValue ( ) , 0 , 99 ) ) ) ; 
 + } 
 + return builder . build ( ) ; 
 + } 
 + 
 + / * * 
 + * Resets the tracker ( clears timings and stops any in - progress timings ) 
 + * / 
 + public void reset ( ) 
 + { 
 + enabled = false ; 
 + trackTime = 0 ; 
 + timings . clear ( ) ; 
 + } 
 + 
 + / * * 
 + * Ends the timing of the currently tracking object 
 + * 
 + * @ param tracking The object to stop timing 
 + * / 
 + public void trackEnd ( T tracking ) 
 + { 
 + if ( ! enabled ) 
 + return ; 
 + this . trackEnd ( tracking , System . nanoTime ( ) ) ; 
 + } 
 + 
 + / * * 
 + * Starts recording tracking data for the given duration in seconds 
 + * 
 + * @ param duration The duration for the time to track 
 + * / 
 + public void enable ( int duration ) 
 + { 
 + this . trackingDuration = duration ; 
 + this . enabled = true ; 
 + } 
 + 
 + / * * 
 + * Starts timing of the provided object 
 + * 
 + * @ param toTrack The object to start timing 
 + * / 
 + public void trackStart ( T toTrack ) 
 + { 
 + if ( ! enabled ) 
 + return ; 
 + this . trackStart ( toTrack , System . nanoTime ( ) ) ; 
 + } 
 + 
 + private void trackEnd ( T object , long nanoTime ) 
 + { 
 + if ( currentlyTracking = = null | | currentlyTracking . get ( ) ! = object ) 
 + { 
 + currentlyTracking = null ; 
 + return ; 
 + } 
 + int [ ] timings = this . timings . computeIfAbsent ( object , k - > new int [ 101 ] ) ; 
 + int idx = timings [ 100 ] = ( timings [ 100 ] + 1 ) % 100 ; 
 + timings [ idx ] = ( int ) ( nanoTime - timing ) ; 
 + } 
 + 
 + private void trackStart ( T toTrack , long nanoTime ) 
 + { 
 + if ( trackTime = = 0 ) 
 + { 
 + trackTime = nanoTime ; 
 + } 
 + else if ( trackTime + TimeUnit . NANOSECONDS . convert ( trackingDuration , TimeUnit . SECONDS ) < nanoTime ) 
 + { 
 + enabled = false ; 
 + trackTime = 0 ; 
 + } 
 + 
 + currentlyTracking = new WeakReference < > ( toTrack ) ; 
 + timing = nanoTime ; 
 + } 
 + } 
 diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang 
 index ee27f1b . . 38e3b60 100644 
 - - - a / src / main / resources / assets / forge / lang / en _ US . lang 
 + + + b / src / main / resources / assets / forge / lang / en _ US . lang 
 @ @ - 17 , 6 + 17 , 15 @ @ commands . forge . entity . list . single . header = Entity : % s Total : % d 
 commands . forge . entity . list . multiple . header = Total : % d 
 
 commands . forge . tracking . te . enabled = Tile Entity tracking enabled for % d seconds . 
 + commands . forge . tracking . entity . enabled = Entity tracking enabled for % d seconds . 
 + commands . forge . tracking . usage = Use / forge track help for more information on tracking subcommands . 
 + commands . forge . tracking . start . usage = Use / forge track start < te | entity > < duration > 
 + commands . forge . tracking . reset . usage = Use / forge track reset < te | entity > 
 + commands . forge . tracking . reset = Timings data has been cleared ! 
 + commands . forge . tracking . te . usage = Use / forge track te 
 + 
 + commands . forge . tracking . timingEntry = % s - % s [ % d , % d , % d ] : % s 
 + commands . forge . tracking . noData = No data has been recorded yet . 
 commands . tree _ base . invalid _ cmd = Invalid subcommand ' % s ' ! 
 commands . tree _ base . invalid _ cmd . list _ subcommands = Invalid subcommand ' % s ' ! Available subcommands : % s 
 commands . tree _ base . available _ subcommands = Available SubCommands : % s

NEAREST DIFF:
diff - - git a / common / net / minecraftforge / common / DimensionManager . java b / common / net / minecraftforge / common / DimensionManager . java 
 index 8d39723 . . 8ea6785 100644 
 - - - a / common / net / minecraftforge / common / DimensionManager . java 
 + + + b / common / net / minecraftforge / common / DimensionManager . java 
 @ @ - 197 , 12 + 197 , 15 @ @ public class DimensionManager 
 
 public static void setWorld ( int id , WorldServer world ) 
 { 
 - if ( world ! = null ) { 
 + if ( world ! = null ) 
 + { 
 worlds . put ( id , world ) ; 
 weakWorldMap . put ( world , world ) ; 
 MinecraftServer . getServer ( ) . worldTickTimes . put ( id , new long [ 100 ] ) ; 
 FMLLog . info ( " Loading dimension % d ( % s ) ( % s ) " , id , world . getWorldInfo ( ) . getWorldName ( ) , world . getMinecraftServer ( ) ) ; 
 - } else { 
 + } 
 + else 
 + { 
 worlds . remove ( id ) ; 
 MinecraftServer . getServer ( ) . worldTickTimes . remove ( id ) ; 
 FMLLog . info ( " Unloading dimension % d " , id ) ; 
 @ @ - 231 , 14 + 234 , 18 @ @ public class DimensionManager 
 
 public static void initDimension ( int dim ) { 
 WorldServer overworld = getWorld ( 0 ) ; 
 - if ( overworld = = null ) { 
 + if ( overworld = = null ) 
 + { 
 throw new RuntimeException ( " Cannot Hotload Dim : Overworld is not Loaded ! " ) ; 
 } 
 - try { 
 + try 
 + { 
 DimensionManager . getProviderType ( dim ) ; 
 - } catch ( Exception e ) { 
 + } 
 + catch ( Exception e ) 
 + { 
 System . err . println ( " Cannot Hotload Dim : " + e . getMessage ( ) ) ; 
 - return ; / / If a provider hasn ' t been registered then we can ' t hotload the dim 
 + return ; / / If a provider hasn ' t been registered then we can ' t hotload the dim 
 } 
 MinecraftServer mcServer = overworld . getMinecraftServer ( ) ; 
 ISaveHandler savehandler = overworld . getSaveHandler ( ) ; 
 diff - - git a / common / net / minecraftforge / common / ForgeChunkManager . java b / common / net / minecraftforge / common / ForgeChunkManager . java 
 index ee00212 . . 03d8714 100644 
 - - - a / common / net / minecraftforge / common / ForgeChunkManager . java 
 + + + b / common / net / minecraftforge / common / ForgeChunkManager . java 
 @ @ - 816 , 7 + 816 , 10 @ @ public class ForgeChunkManager 
 static void saveWorld ( World world ) 
 { 
 / / only persist persistent worlds 
 - if ( ! ( world instanceof WorldServer ) ) { return ; } 
 + if ( ! ( world instanceof WorldServer ) ) 
 + { 
 + return ; 
 + } 
 WorldServer worldServer = ( WorldServer ) world ; 
 File chunkDir = worldServer . getChunkSaveLocation ( ) ; 
 File chunkLoaderData = new File ( chunkDir , " forcedchunks . dat " ) ; 
 diff - - git a / common / net / minecraftforge / fluids / BlockFluidFinite . java b / common / net / minecraftforge / fluids / BlockFluidFinite . java 
 index 6a6edf7 . . 0dc2d0b 100644 
 - - - a / common / net / minecraftforge / fluids / BlockFluidFinite . java 
 + + + b / common / net / minecraftforge / fluids / BlockFluidFinite . java 
 @ @ - 31 , 7 + 31 , 8 @ @ public class BlockFluidFinite extends BlockFluidBase 
 return 0 ; 
 } 
 
 - if ( world . getBlockId ( x , y , z ) ! = blockID ) { 
 + if ( world . getBlockId ( x , y , z ) ! = blockID ) 
 + { 
 return - 1 ; 
 } 
 
 @ @ - 110 , 7 + 111 , 8 @ @ public class BlockFluidFinite extends BlockFluidBase 
 total + = west ; 
 } 
 
 - if ( east > = 0 ) { 
 + if ( east > = 0 ) 
 + { 
 + + count ; 
 total + = east ; 
 } 
 @ @ - 182 , 10 + 184 , 14 @ @ public class BlockFluidFinite extends BlockFluidBase 
 + + newwest ; 
 - - rem ; 
 } 
 - if ( newwest ! = west ) { 
 - if ( newwest = = 0 ) { 
 + if ( newwest ! = west ) 
 + { 
 + if ( newwest = = 0 ) 
 + { 
 world . setBlock ( x - 1 , y , z , 0 ) ; 
 - } else { 
 + } 
 + else 
 + { 
 world . setBlock ( x - 1 , y , z , blockID , newwest - 1 , 2 ) ; 
 } 
 world . scheduleBlockUpdate ( x - 1 , y , z , blockID , tickRate ) ; 
 diff - - git a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch 
 index e401b0d . . 810ebea 100644 
 - - - a / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / entity / EntityPlayerSP . java . patch 
 @ @ - 9 , 11 + 9 , 14 @ @ 
 
 @ SideOnly ( Side . CLIENT ) 
 public class EntityPlayerSP extends AbstractClientPlayer 
 - @ @ - 570 , 18 + 572 , 63 @ @ 
 + @ @ - 570 , 18 + 572 , 66 @ @ 
 * / 
 protected boolean pushOutOfBlocks ( double par1 , double par3 , double par5 ) 
 { 
 - + if ( this . noClip ) { return false ; } 
 + + if ( this . noClip ) 
 + + { 
 + + return false ; 
 + + } 
 int i = MathHelper . floor _ double ( par1 ) ; 
 int j = MathHelper . floor _ double ( par3 ) ; 
 int k = MathHelper . floor _ double ( par5 ) ; 
 @ @ - 79 , 7 + 82 , 7 @ @ 
 byte b0 = - 1 ; 
 double d5 = 9999 . 0D ; 
 
 - @ @ - 685 , 6 + 732 , 12 @ @ 
 + @ @ - 685 , 6 + 735 , 12 @ @ 
 
 public void playSound ( String par1Str , float par2 , float par3 ) 
 { 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 index 168d019 . . 3ef5937 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 @ @ - 453 , 18 + 453 , 19 @ @ 
 } 
 
 / * * 
 - @ @ - 1650 , 6 + 1803 , 10 @ @ 
 + @ @ - 1650 , 6 + 1803 , 11 @ @ 
 * / 
 public void setSpawnChunk ( ChunkCoordinates par1ChunkCoordinates , boolean par2 ) 
 { 
 - + if ( this . dimension ! = 0 ) { 
 + + if ( this . dimension ! = 0 ) 
 + + { 
 + setSpawnChunk ( par1ChunkCoordinates , par2 , this . dimension ) ; 
 + return ; 
 + } 
 if ( par1ChunkCoordinates ! = null ) 
 { 
 this . spawnChunk = new ChunkCoordinates ( par1ChunkCoordinates ) ; 
 - @ @ - 1661 , 7 + 1818 , 32 @ @ 
 + @ @ - 1661 , 7 + 1819 , 39 @ @ 
 this . spawnForced = false ; 
 } 
 } 
 @ @ - 477 , 20 + 478 , 27 @ @ 
 + * @ param dimension Which dimension to apply the player - specific respawn point to 
 + * / 
 + public void setSpawnChunk ( ChunkCoordinates chunkCoordinates , boolean forced , int dimension ) { 
 - + if ( dimension = = 0 ) { 
 - + if ( chunkCoordinates ! = null ) { 
 + + if ( dimension = = 0 ) 
 + + { 
 + + if ( chunkCoordinates ! = null ) 
 + + { 
 + this . spawnChunk = new ChunkCoordinates ( chunkCoordinates ) ; 
 + this . spawnForced = forced ; 
 - + } else { 
 + + } 
 + + else 
 + + { 
 + this . spawnChunk = null ; 
 + this . spawnForced = false ; 
 + } 
 + return ; 
 + } 
 - + if ( chunkCoordinates ! = null ) { 
 + + if ( chunkCoordinates ! = null ) 
 + + { 
 + this . spawnChunkMap . put ( dimension , new ChunkCoordinates ( chunkCoordinates ) ) ; 
 + this . spawnForcedMap . put ( dimension , forced ) ; 
 - + } else { 
 + + } 
 + + else 
 + + { 
 + this . spawnChunkMap . remove ( dimension ) ; 
 + this . spawnForcedMap . remove ( dimension ) ; 
 + } 
 @ @ - 498 , 7 + 506 , 7 @ @ 
 / * * 
 * Will trigger the specified trigger . 
 * / 
 - @ @ - 1843 , 6 + 2025 , 10 @ @ 
 + @ @ - 1843 , 6 + 2033 , 10 @ @ 
 
 super . fall ( par1 ) ; 
 } 
 @ @ - 509 , 7 + 517 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 1884 , 7 + 2070 , 7 @ @ 
 + @ @ - 1884 , 7 + 2078 , 7 @ @ 
 { 
 if ( par1ItemStack . getItem ( ) . requiresMultipleRenderPasses ( ) ) 
 { 
 @ @ - 518 , 7 + 526 , 7 @ @ 
 } 
 
 if ( this . itemInUse ! = null & & par1ItemStack . itemID = = Item . bow . itemID ) 
 - @ @ - 1906 , 6 + 2092 , 7 @ @ 
 + @ @ - 1906 , 6 + 2100 , 7 @ @ 
 return Item . bow . getItemIconForUseDuration ( 0 ) ; 
 } 
 } 
 @ @ - 526 , 7 + 534 , 7 @ @ 
 } 
 
 return icon ; 
 - @ @ - 2127 , 7 + 2314 , 17 @ @ 
 + @ @ - 2127 , 7 + 2322 , 17 @ @ 
 this . setScore ( par1EntityPlayer . getScore ( ) ) ; 
 } 
 
 @ @ - 544 , 7 + 552 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 2191 , 7 + 2388 , 14 @ @ 
 + @ @ - 2191 , 7 + 2396 , 14 @ @ 
 * / 
 public void setCurrentItemOrArmor ( int par1 , ItemStack par2ItemStack ) 
 { 
 @ @ - 560 , 7 + 568 , 7 @ @ 
 } 
 
 @ SideOnly ( Side . CLIENT ) 
 - @ @ - 2245 , 7 + 2449 , 7 @ @ 
 + @ @ - 2245 , 7 + 2457 , 7 @ @ 
 * / 
 public String getTranslatedEntityName ( ) 
 { 
 @ @ - 569 , 7 + 577 , 7 @ @ 
 } 
 
 public void setAbsorptionAmount ( float par1 ) 
 - @ @ - 2267 , 4 + 2471 , 39 @ @ 
 + @ @ - 2267 , 4 + 2479 , 39 @ @ 
 { 
 FMLNetworkHandler . openGui ( this , mod , modGuiId , world , x , y , z ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / World . java . patch b / patches / minecraft / net / minecraft / world / World . java . patch 
 index 68e76d6 . . 92fdbc5 100644 
 - - - a / patches / minecraft / net / minecraft / world / World . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / World . java . patch 
 @ @ - 114 , 7 + 114 , 7 @ @ 
 } 
 else 
 { 
 - @ @ - 290 , 6 + 337 , 19 @ @ 
 + @ @ - 290 , 6 + 337 , 20 @ @ 
 
 this . calculateInitialSkylight ( ) ; 
 this . calculateInitialWeather ( ) ; 
 @ @ - 126 , 7 + 126 , 8 @ @ 
 + / / Buildcraft has suffered from the issue this fixes . If you load the same data from two different worlds they can get two different copies of the same object , thus the last saved gets final say . 
 + private MapStorage getMapStorage ( ISaveHandler savehandler ) 
 + { 
 - + if ( s _ savehandler ! = savehandler | | s _ mapStorage = = null ) { 
 + + if ( s _ savehandler ! = savehandler | | s _ mapStorage = = null ) 
 + + { 
 + s _ mapStorage = new MapStorage ( savehandler ) ; 
 + s _ savehandler = savehandler ; 
 + } 
 @ @ - 134 , 7 + 135 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 373 , 7 + 433 , 8 @ @ 
 + @ @ - 373 , 7 + 434 , 8 @ @ 
 * / 
 public boolean isAirBlock ( int par1 , int par2 , int par3 ) 
 { 
 @ @ - 144 , 7 + 145 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 382 , 7 + 443 , 8 @ @ 
 + @ @ - 382 , 7 + 444 , 8 @ @ 
 public boolean blockHasTileEntity ( int par1 , int par2 , int par3 ) 
 { 
 int l = this . getBlockId ( par1 , par2 , par3 ) ; 
 @ @ - 154 , 7 + 155 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 1157 , 7 + 1219 , 7 @ @ 
 + @ @ - 1157 , 7 + 1220 , 7 @ @ 
 * / 
 public boolean isDaytime ( ) 
 { 
 @ @ - 163 , 7 + 164 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 1192 , 7 + 1254 , 7 @ @ 
 + @ @ - 1192 , 7 + 1255 , 7 @ @ 
 int l1 = this . getBlockMetadata ( l , i1 , j1 ) ; 
 Block block = Block . blocksList [ k1 ] ; 
 
 @ @ - 172 , 7 + 173 , 7 @ @ 
 { 
 MovingObjectPosition movingobjectposition = block . collisionRayTrace ( this , l , i1 , j1 , par1Vec3 , par2Vec3 ) ; 
 
 - @ @ - 1392 , 6 + 1454 , 12 @ @ 
 + @ @ - 1392 , 6 + 1455 , 12 @ @ 
 * / 
 public void playSoundAtEntity ( Entity par1Entity , String par2Str , float par3 , float par4 ) 
 { 
 @ @ - 185 , 7 + 186 , 7 @ @ 
 if ( par1Entity ! = null & & par2Str ! = null ) 
 { 
 for ( int i = 0 ; i < this . worldAccesses . size ( ) ; + + i ) 
 - @ @ - 1406 , 6 + 1474 , 12 @ @ 
 + @ @ - 1406 , 6 + 1475 , 12 @ @ 
 * / 
 public void playSoundToNearExcept ( EntityPlayer par1EntityPlayer , String par2Str , float par3 , float par4 ) 
 { 
 @ @ - 198 , 7 + 199 , 7 @ @ 
 if ( par1EntityPlayer ! = null & & par2Str ! = null ) 
 { 
 for ( int i = 0 ; i < this . worldAccesses . size ( ) ; + + i ) 
 - @ @ - 1492 , 6 + 1566 , 11 @ @ 
 + @ @ - 1492 , 6 + 1567 , 11 @ @ 
 EntityPlayer entityplayer = ( EntityPlayer ) par1Entity ; 
 this . playerEntities . add ( entityplayer ) ; 
 this . updateAllPlayersSleepingFlag ( ) ; 
 @ @ - 210 , 7 + 211 , 7 @ @ 
 } 
 
 this . getChunkFromChunkCoords ( i , j ) . addEntity ( par1Entity ) ; 
 - @ @ - 1732 , 6 + 1811 , 12 @ @ 
 + @ @ - 1732 , 6 + 1812 , 12 @ @ 
 * Calculates the color for the skybox 
 * / 
 public Vec3 getSkyColor ( Entity par1Entity , float par2 ) 
 @ @ - 223 , 7 + 224 , 7 @ @ 
 { 
 float f1 = this . getCelestialAngle ( par2 ) ; 
 float f2 = MathHelper . cos ( f1 * ( float ) Math . PI * 2 . 0F ) * 2 . 0F + 0 . 5F ; 
 - @ @ - 1833 , 6 + 1918 , 12 @ @ 
 + @ @ - 1833 , 6 + 1919 , 12 @ @ 
 @ SideOnly ( Side . CLIENT ) 
 public Vec3 getCloudColour ( float par1 ) 
 { 
 @ @ - 236 , 7 + 237 , 7 @ @ 
 float f1 = this . getCelestialAngle ( par1 ) ; 
 float f2 = MathHelper . cos ( f1 * ( float ) Math . PI * 2 . 0F ) * 2 . 0F + 0 . 5F ; 
 
 - @ @ - 1904 , 6 + 1995 , 8 @ @ 
 + @ @ - 1904 , 6 + 1996 , 8 @ @ 
 public int getTopSolidOrLiquidBlock ( int par1 , int par2 ) 
 { 
 Chunk chunk = this . getChunkFromBlockCoords ( par1 , par2 ) ; 
 @ @ - 245 , 7 + 246 , 7 @ @ 
 int k = chunk . getTopFilledSegment ( ) + 15 ; 
 par1 & = 15 ; 
 
 - @ @ - 1911 , 7 + 2004 , 7 @ @ 
 + @ @ - 1911 , 7 + 2005 , 7 @ @ 
 { 
 int l = chunk . getBlockID ( par1 , k , par2 ) ; 
 
 @ @ - 254 , 7 + 255 , 7 @ @ 
 { 
 return k + 1 ; 
 } 
 - @ @ - 1926 , 6 + 2019 , 12 @ @ 
 + @ @ - 1926 , 6 + 2020 , 12 @ @ 
 * How bright are stars in the sky 
 * / 
 public float getStarBrightness ( float par1 ) 
 @ @ - 267 , 7 + 268 , 7 @ @ 
 { 
 float f1 = this . getCelestialAngle ( par1 ) ; 
 float f2 = 1 . 0F - ( MathHelper . cos ( f1 * ( float ) Math . PI * 2 . 0F ) * 2 . 0F + 0 . 25F ) ; 
 - @ @ - 1990 , 7 + 2089 , 15 @ @ 
 + @ @ - 1990 , 7 + 2090 , 15 @ @ 
 entity . addEntityCrashInfo ( crashreportcategory ) ; 
 } 
 
 @ @ - 284 , 7 + 285 , 7 @ @ 
 } 
 
 if ( entity . isDead ) 
 - @ @ - 2052 , 7 + 2159 , 16 @ @ 
 + @ @ - 2052 , 7 + 2160 , 16 @ @ 
 crashreport = CrashReport . makeCrashReport ( throwable1 , " Ticking entity " ) ; 
 crashreportcategory = crashreport . makeCategory ( " Entity being ticked " ) ; 
 entity . addEntityCrashInfo ( crashreportcategory ) ; 
 @ @ - 302 , 7 + 303 , 7 @ @ 
 } 
 } 
 
 - @ @ - 2095 , 7 + 2211 , 16 @ @ 
 + @ @ - 2095 , 7 + 2212 , 16 @ @ 
 crashreport = CrashReport . makeCrashReport ( throwable2 , " Ticking tile entity " ) ; 
 crashreportcategory = crashreport . makeCategory ( " Tile entity being ticked " ) ; 
 tileentity . func _ 85027 _ a ( crashreportcategory ) ; 
 @ @ - 320 , 7 + 321 , 7 @ @ 
 } 
 } 
 
 - @ @ - 2109 , 7 + 2234 , 7 @ @ 
 + @ @ - 2109 , 7 + 2235 , 7 @ @ 
 
 if ( chunk ! = null ) 
 { 
 @ @ - 329 , 7 + 330 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 2118 , 6 + 2243 , 10 @ @ 
 + @ @ - 2118 , 6 + 2244 , 10 @ @ 
 
 if ( ! this . entityRemoval . isEmpty ( ) ) 
 { 
 @ @ - 340 , 7 + 341 , 7 @ @ 
 this . loadedTileEntityList . removeAll ( this . entityRemoval ) ; 
 this . entityRemoval . clear ( ) ; 
 } 
 - @ @ - 2138 , 18 + 2267 , 18 @ @ 
 + @ @ - 2138 , 18 + 2268 , 18 @ @ 
 { 
 this . loadedTileEntityList . add ( tileentity1 ) ; 
 } 
 @ @ - 363 , 7 + 364 , 7 @ @ 
 } 
 } 
 
 - @ @ - 2162 , 13 + 2291 , 13 @ @ 
 + @ @ - 2162 , 13 + 2292 , 13 @ @ 
 
 public void addTileEntity ( Collection par1Collection ) 
 { 
 @ @ - 384 , 7 + 385 , 7 @ @ 
 } 
 } 
 
 - @ @ - 2188 , 9 + 2317 , 17 @ @ 
 + @ @ - 2188 , 9 + 2318 , 17 @ @ 
 { 
 int i = MathHelper . floor _ double ( par1Entity . posX ) ; 
 int j = MathHelper . floor _ double ( par1Entity . posZ ) ; 
 @ @ - 405 , 7 + 406 , 7 @ @ 
 { 
 par1Entity . lastTickPosX = par1Entity . posX ; 
 par1Entity . lastTickPosY = par1Entity . posY ; 
 - @ @ - 2424 , 6 + 2561 , 14 @ @ 
 + @ @ - 2424 , 6 + 2562 , 14 @ @ 
 { 
 return true ; 
 } 
 @ @ - 420 , 7 + 421 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 2746 , 15 + 2891 , 16 @ @ 
 + @ @ - 2746 , 15 + 2892 , 16 @ @ 
 * / 
 public void setBlockTileEntity ( int par1 , int par2 , int par3 , TileEntity par4TileEntity ) 
 { 
 @ @ - 446 , 7 + 447 , 7 @ @ 
 while ( iterator . hasNext ( ) ) 
 { 
 TileEntity tileentity1 = ( TileEntity ) iterator . next ( ) ; 
 - @ @ - 2765 , 20 + 2911 , 21 @ @ 
 + @ @ - 2765 , 20 + 2912 , 21 @ @ 
 iterator . remove ( ) ; 
 } 
 } 
 @ @ - 479 , 7 + 480 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 2786 , 28 + 2933 , 13 @ @ 
 + @ @ - 2786 , 28 + 2934 , 13 @ @ 
 * / 
 public void removeBlockTileEntity ( int par1 , int par2 , int par3 ) 
 { 
 @ @ - 515 , 7 + 516 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 2832 , 7 + 2964 , 8 @ @ 
 + @ @ - 2832 , 7 + 2965 , 8 @ @ 
 * / 
 public boolean isBlockNormalCube ( int par1 , int par2 , int par3 ) 
 { 
 @ @ - 525 , 7 + 526 , 7 @ @ 
 } 
 
 public boolean isBlockFullCube ( int par1 , int par2 , int par3 ) 
 - @ @ - 2855 , 16 + 2988 , 17 @ @ 
 + @ @ - 2855 , 16 + 2989 , 17 @ @ 
 * / 
 public boolean doesBlockHaveSolidTopSurface ( int par1 , int par2 , int par3 ) 
 { 
 @ @ - 545 , 7 + 546 , 7 @ @ 
 return par1Block = = null ? false : ( par1Block . blockMaterial . isOpaque ( ) & & par1Block . renderAsNormalBlock ( ) ? true : ( par1Block instanceof BlockStairs ? ( par2 & 4 ) = = 4 : ( par1Block instanceof BlockHalfSlab ? ( par2 & 8 ) = = 8 : ( par1Block instanceof BlockHopper ? true : ( par1Block instanceof BlockSnow ? ( par2 & 7 ) = = 7 : false ) ) ) ) ) ; 
 } 
 
 - @ @ - 2881 , 7 + 3015 , 7 @ @ 
 + @ @ - 2881 , 7 + 3016 , 7 @ @ 
 if ( chunk ! = null & & ! chunk . isEmpty ( ) ) 
 { 
 Block block = Block . blocksList [ this . getBlockId ( par1 , par2 , par3 ) ] ; 
 @ @ - 554 , 7 + 555 , 7 @ @ 
 } 
 else 
 { 
 - @ @ - 2912 , 8 + 3046 , 7 @ @ 
 + @ @ - 2912 , 8 + 3047 , 7 @ @ 
 * / 
 public void setAllowedSpawnTypes ( boolean par1 , boolean par2 ) 
 { 
 @ @ - 564 , 7 + 565 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 2929 , 6 + 3062 , 11 @ @ 
 + @ @ - 2929 , 6 + 3063 , 11 @ @ 
 * / 
 private void calculateInitialWeather ( ) 
 { 
 @ @ - 576 , 7 + 577 , 7 @ @ 
 if ( this . worldInfo . isRaining ( ) ) 
 { 
 this . rainingStrength = 1 . 0F ; 
 - @ @ - 2944 , 6 + 3082 , 11 @ @ 
 + @ @ - 2944 , 6 + 3083 , 11 @ @ 
 * Updates all weather states . 
 * / 
 protected void updateWeather ( ) 
 @ @ - 588 , 7 + 589 , 7 @ @ 
 { 
 if ( ! this . provider . hasNoSky ) 
 { 
 - @ @ - 3041 , 12 + 3184 , 14 @ @ 
 + @ @ - 3041 , 12 + 3185 , 14 @ @ 
 
 public void toggleRain ( ) 
 { 
 @ @ - 604 , 7 + 605 , 7 @ @ 
 this . theProfiler . startSection ( " buildList " ) ; 
 int i ; 
 EntityPlayer entityplayer ; 
 - @ @ - 3153 , 6 + 3298 , 11 @ @ 
 + @ @ - 3153 , 6 + 3299 , 11 @ @ 
 * / 
 public boolean canBlockFreeze ( int par1 , int par2 , int par3 , boolean par4 ) 
 { 
 @ @ - 616 , 7 + 617 , 7 @ @ 
 BiomeGenBase biomegenbase = this . getBiomeGenForCoords ( par1 , par3 ) ; 
 float f = biomegenbase . getFloatTemperature ( ) ; 
 
 - @ @ - 3211 , 6 + 3361 , 11 @ @ 
 + @ @ - 3211 , 6 + 3362 , 11 @ @ 
 * / 
 public boolean canSnowAt ( int par1 , int par2 , int par3 ) 
 { 
 @ @ - 628 , 7 + 629 , 7 @ @ 
 BiomeGenBase biomegenbase = this . getBiomeGenForCoords ( par1 , par3 ) ; 
 float f = biomegenbase . getFloatTemperature ( ) ; 
 
 - @ @ - 3254 , 10 + 3409 , 12 @ @ 
 + @ @ - 3254 , 10 + 3410 , 12 @ @ 
 else 
 { 
 int l = this . getBlockId ( par1 , par2 , par3 ) ; 
 @ @ - 645 , 7 + 646 , 7 @ @ 
 { 
 j1 = 1 ; 
 } 
 - @ @ - 3353 , 7 + 3510 , 9 @ @ 
 + @ @ - 3353 , 7 + 3511 , 9 @ @ 
 int j4 = i2 + Facing . offsetsXForSide [ i4 ] ; 
 int k4 = j2 + Facing . offsetsYForSide [ i4 ] ; 
 int l4 = k2 + Facing . offsetsZForSide [ i4 ] ; 
 @ @ - 656 , 7 + 657 , 7 @ @ 
 i3 = this . getSavedLightValue ( par1EnumSkyBlock , j4 , k4 , l4 ) ; 
 
 if ( i3 = = l2 - i5 & & i1 < this . lightUpdateBlockList . length ) 
 - @ @ - 3456 , 10 + 3615 , 10 @ @ 
 + @ @ - 3456 , 10 + 3616 , 10 @ @ 
 public List getEntitiesWithinAABBExcludingEntity ( Entity par1Entity , AxisAlignedBB par2AxisAlignedBB , IEntitySelector par3IEntitySelector ) 
 { 
 ArrayList arraylist = new ArrayList ( ) ; 
 @ @ - 671 , 7 + 672 , 7 @ @ 
 
 for ( int i1 = i ; i1 < = j ; + + i1 ) 
 { 
 - @ @ - 3485 , 10 + 3644 , 10 @ @ 
 + @ @ - 3485 , 10 + 3645 , 10 @ @ 
 
 public List selectEntitiesWithinAABB ( Class par1Class , AxisAlignedBB par2AxisAlignedBB , IEntitySelector par3IEntitySelector ) 
 { 
 @ @ - 686 , 7 + 687 , 7 @ @ 
 ArrayList arraylist = new ArrayList ( ) ; 
 
 for ( int i1 = i ; i1 < = j ; + + i1 ) 
 - @ @ - 3582 , 11 + 3741 , 14 @ @ 
 + @ @ - 3582 , 11 + 3742 , 14 @ @ 
 * / 
 public void addLoadedEntities ( List par1List ) 
 { 
 @ @ - 704 , 7 + 705 , 7 @ @ 
 } 
 } 
 
 - @ @ - 3620 , 6 + 3782 , 11 @ @ 
 + @ @ - 3620 , 6 + 3783 , 11 @ @ 
 else 
 { 
 if ( block ! = null & & ( block = = Block . waterMoving | | block = = Block . waterStill | | block = = Block . lavaMoving | | block = = Block . lavaStill | | block = = Block . fire | | block . blockMaterial . isReplaceable ( ) ) ) 
 @ @ - 716 , 7 + 717 , 7 @ @ 
 { 
 block = null ; 
 } 
 - @ @ - 3914 , 7 + 4081 , 7 @ @ 
 + @ @ - 3914 , 7 + 4082 , 7 @ @ 
 * / 
 public long getSeed ( ) 
 { 
 @ @ - 725 , 7 + 726 , 7 @ @ 
 } 
 
 public long getTotalWorldTime ( ) 
 - @ @ - 3924 , 7 + 4091 , 7 @ @ 
 + @ @ - 3924 , 7 + 4092 , 7 @ @ 
 
 public long getWorldTime ( ) 
 { 
 @ @ - 734 , 7 + 735 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 3932 , 7 + 4099 , 7 @ @ 
 + @ @ - 3932 , 7 + 4100 , 7 @ @ 
 * / 
 public void setWorldTime ( long par1 ) 
 { 
 @ @ - 743 , 7 + 744 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 3940 , 13 + 4107 , 13 @ @ 
 + @ @ - 3940 , 13 + 4108 , 13 @ @ 
 * / 
 public ChunkCoordinates getSpawnPoint ( ) 
 { 
 @ @ - 759 , 7 + 760 , 7 @ @ 
 } 
 
 @ SideOnly ( Side . CLIENT ) 
 - @ @ - 3970 , 7 + 4137 , 10 @ @ 
 + @ @ - 3970 , 7 + 4138 , 10 @ @ 
 
 if ( ! this . loadedEntityList . contains ( par1Entity ) ) 
 { 
 @ @ - 771 , 7 + 772 , 7 @ @ 
 } 
 } 
 
 - @ @ - 3978 , 6 + 4148 , 11 @ @ 
 + @ @ - 3978 , 6 + 4149 , 11 @ @ 
 * Called when checking if a certain block can be mined or not . The ' spawn safe zone ' check is located here . 
 * / 
 public boolean canMineBlock ( EntityPlayer par1EntityPlayer , int par2 , int par3 , int par4 ) 
 @ @ - 783 , 7 + 784 , 7 @ @ 
 { 
 return true ; 
 } 
 - @ @ - 4098 , 8 + 4273 , 7 @ @ 
 + @ @ - 4098 , 8 + 4274 , 7 @ @ 
 * / 
 public boolean isBlockHighHumidity ( int par1 , int par2 , int par3 ) 
 { 
 @ @ - 793 , 7 + 794 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 4174 , 7 + 4348 , 7 @ @ 
 + @ @ - 4174 , 7 + 4349 , 7 @ @ 
 * / 
 public int getHeight ( ) 
 { 
 @ @ - 802 , 7 + 803 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 4182 , 7 + 4356 , 7 @ @ 
 + @ @ - 4182 , 7 + 4357 , 7 @ @ 
 * / 
 public int getActualHeight ( ) 
 { 
 @ @ - 811 , 7 + 812 , 7 @ @ 
 } 
 
 public IUpdatePlayerListBox getMinecartSoundUpdater ( EntityMinecart par1EntityMinecart ) 
 - @ @ - 4225 , 7 + 4399 , 7 @ @ 
 + @ @ - 4225 , 7 + 4400 , 7 @ @ 
 * / 
 public double getHorizon ( ) 
 { 
 @ @ - 820 , 7 + 821 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 4294 , 30 + 4468 , 28 @ @ 
 + @ @ - 4294 , 30 + 4469 , 28 @ @ 
 
 public void func _ 96440 _ m ( int par1 , int par2 , int par3 , int par4 ) 
 { 
 @ @ - 872 , 7 + 873 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 4363 , 4 + 4535 , 115 @ @ 
 + @ @ - 4363 , 4 + 4536 , 115 @ @ 
 
 return MathHelper . clamp _ float ( f , 0 . 0F , flag ? 1 . 5F : 1 . 0F ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 index fa2590f . . 89f4e50 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 @ @ - 22 , 7 + 22 , 7 @ @ 
 
 if ( b0 ! = 0 ) 
 { 
 - @ @ - 159 , 6 + 165 , 90 @ @ 
 + @ @ - 159 , 6 + 165 , 92 @ @ 
 } 
 
 / * * 
 @ @ - 94 , 13 + 94 , 15 @ @ 
 + int id = ids [ idx ] & 0xFFFFFF ; 
 + int meta = metadata [ idx ] ; 
 + 
 - + if ( id ! = 0 ) { 
 + + if ( id ! = 0 ) 
 + + { 
 + int storageBlock = y > > 4 ; 
 + 
 - + if ( this . storageArrays [ storageBlock ] = = null ) { 
 - + this . storageArrays [ storageBlock ] = new ExtendedBlockStorage ( storageBlock < < 4 , ! world . provider . hasNoSky ) ; 
 + + if ( this . storageArrays [ storageBlock ] = = null ) 
 + + { 
 + + this . storageArrays [ storageBlock ] = new ExtendedBlockStorage ( storageBlock < < 4 , ! world . provider . hasNoSky ) ; 
 + } 
 - + 
 + + 
 + this . storageArrays [ storageBlock ] . setExtBlockID ( x , y & 15 , z , id ) ; 
 + this . storageArrays [ storageBlock ] . setExtBlockMetadata ( x , y & 15 , z , meta ) ; 
 + } 
 @ @ - 113 , 7 + 115 , 7 @ @ 
 * Checks whether the chunk is at the X / Z location specified 
 * / 
 public boolean isAtLocation ( int par1 , int par2 ) 
 - @ @ - 222 , 7 + 312 , 7 @ @ 
 + @ @ - 222 , 7 + 314 , 7 @ @ 
 { 
 int i1 = this . getBlockID ( j , l - 1 , k ) ; 
 
 @ @ - 122 , 7 + 124 , 7 @ @ 
 { 
 - - l ; 
 continue ; 
 - @ @ - 528 , 7 + 618 , 10 @ @ 
 + @ @ - 528 , 7 + 620 , 10 @ @ 
 
 public int getBlockLightOpacity ( int par1 , int par2 , int par3 ) 
 { 
 @ @ - 134 , 7 + 136 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 615 , 9 + 708 , 13 @ @ 
 + @ @ - 615 , 9 + 710 , 13 @ @ 
 { 
 Block . blocksList [ l1 ] . breakBlock ( this . worldObj , j2 , par2 , k2 , l1 , i2 ) ; 
 } 
 @ @ - 151 , 7 + 153 , 7 @ @ 
 } 
 } 
 
 - @ @ - 635 , 7 + 732 , 7 @ @ 
 + @ @ - 635 , 7 + 734 , 7 @ @ 
 } 
 else 
 { 
 @ @ - 160 , 7 + 162 , 7 @ @ 
 { 
 if ( par2 > = k1 ) 
 { 
 - @ @ - 659 , 29 + 756 , 21 @ @ 
 + @ @ - 659 , 29 + 758 , 21 @ @ 
 Block . blocksList [ par4 ] . onBlockAdded ( this . worldObj , j2 , par2 , k2 ) ; 
 } 
 
 @ @ - 193 , 7 + 195 , 7 @ @ 
 } 
 } 
 
 - @ @ - 716 , 7 + 805 , 7 @ @ 
 + @ @ - 716 , 7 + 807 , 7 @ @ 
 extendedblockstorage . setExtBlockMetadata ( par1 , par2 & 15 , par3 , par4 ) ; 
 int j1 = extendedblockstorage . getExtBlockID ( par1 , par2 & 15 , par3 ) ; 
 
 @ @ - 202 , 7 + 204 , 7 @ @ 
 { 
 TileEntity tileentity = this . getChunkBlockTileEntity ( par1 , par2 , par3 ) ; 
 
 - @ @ - 829 , 6 + 918 , 7 @ @ 
 + @ @ - 829 , 6 + 920 , 7 @ @ 
 k = this . entityLists . length - 1 ; 
 } 
 
 @ @ - 210 , 7 + 212 , 7 @ @ 
 par1Entity . addedToChunk = true ; 
 par1Entity . chunkCoordX = this . xPosition ; 
 par1Entity . chunkCoordY = k ; 
 - @ @ - 878 , 33 + 968 , 32 @ @ 
 + @ @ - 878 , 33 + 970 , 32 @ @ 
 ChunkPosition chunkposition = new ChunkPosition ( par1 , par2 , par3 ) ; 
 TileEntity tileentity = ( TileEntity ) this . chunkTileEntityMap . get ( chunkposition ) ; 
 
 @ @ - 255 , 7 + 257 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 919 , 7 + 1008 , 7 @ @ 
 + @ @ - 919 , 7 + 1010 , 7 @ @ 
 
 if ( this . isChunkLoaded ) 
 { 
 @ @ - 264 , 7 + 266 , 7 @ @ 
 } 
 } 
 
 - @ @ - 934 , 7 + 1023 , 8 @ @ 
 + @ @ - 934 , 7 + 1025 , 8 @ @ 
 par4TileEntity . yCoord = par2 ; 
 par4TileEntity . zCoord = this . zPosition * 16 + par3 ; 
 
 @ @ - 274 , 7 + 276 , 7 @ @ 
 { 
 if ( this . chunkTileEntityMap . containsKey ( chunkposition ) ) 
 { 
 - @ @ - 984 , 6 + 1074 , 7 @ @ 
 + @ @ - 984 , 6 + 1076 , 7 @ @ 
 
 this . worldObj . addLoadedEntities ( this . entityLists [ i ] ) ; 
 } 
 @ @ - 282 , 7 + 284 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 1004 , 6 + 1095 , 7 @ @ 
 + @ @ - 1004 , 6 + 1097 , 7 @ @ 
 { 
 this . worldObj . unloadEntities ( this . entityLists [ i ] ) ; 
 } 
 @ @ - 290 , 7 + 292 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 1020 , 8 + 1112 , 8 @ @ 
 + @ @ - 1020 , 8 + 1114 , 8 @ @ 
 * / 
 public void getEntitiesWithinAABBForEntity ( Entity par1Entity , AxisAlignedBB par2AxisAlignedBB , List par3List , IEntitySelector par4IEntitySelector ) 
 { 
 @ @ - 301 , 7 + 303 , 7 @ @ 
 
 if ( i < 0 ) 
 { 
 - @ @ - 1070 , 8 + 1162 , 8 @ @ 
 + @ @ - 1070 , 8 + 1164 , 8 @ @ 
 * / 
 public void getEntitiesOfTypeWithinAAAB ( Class par1Class , AxisAlignedBB par2AxisAlignedBB , List par3List , IEntitySelector par4IEntitySelector ) 
 { 
 @ @ - 312 , 7 + 314 , 7 @ @ 
 
 if ( i < 0 ) 
 { 
 - @ @ - 1254 , 6 + 1346 , 15 @ @ 
 + @ @ - 1254 , 6 + 1348 , 15 @ @ 
 * / 
 public void fillChunk ( byte [ ] par1ArrayOfByte , int par2 , int par3 , boolean par4 ) 
 { 
 @ @ - 328 , 7 + 330 , 7 @ @ 
 int k = 0 ; 
 boolean flag1 = ! this . worldObj . provider . hasNoSky ; 
 int l ; 
 - @ @ - 1354 , 12 + 1455 , 26 @ @ 
 + @ @ - 1354 , 12 + 1457 , 26 @ @ 
 } 
 
 this . generateHeightMap ( ) ; 
 @ @ - 359 , 7 + 361 , 7 @ @ 
 } 
 } 
 
 - @ @ - 1468 , 4 + 1583 , 18 @ @ 
 + @ @ - 1468 , 4 + 1585 , 18 @ @ 
 } 
 } 
 }
