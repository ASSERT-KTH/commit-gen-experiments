BLEU SCORE: 0.11598118436136108

TEST MSG: MDK progress .
GENERATED MSG: Step 3 : The Rebirth

TEST DIFF (one line): diff - - git a / . gitignore b / . gitignore <nl> index 28d7cec . . 3ad106c 100644 <nl> - - - a / . gitignore <nl> + + + b / . gitignore <nl> @ @ - 15 , 6 + 15 , 8 @ @ <nl> # gradle <nl> / build <nl> / . gradle <nl> + / mdk / . gradle <nl> + / mdk / build <nl> <nl> # occupational hazards <nl> / projects / <nl> diff - - git a / build . gradle b / build . gradle <nl> index e069476 . . f129677 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 103 , 7 + 103 , 6 @ @ project ( ' : forge ' ) { <nl> accessTransformer = file ( " $ rootDir / src / main / resources / forge _ at . cfg " ) <nl> exc = file ( " $ rootDir / src / main / resources / forge . exc " ) <nl> srgPatches = true <nl> - srgUniversal = true <nl> clientRun { <nl> main = ' net . minecraftforge . fml . LaunchTesting ' <nl> environment = [ <nl> @ @ - 621 , 7 + 620 , 8 @ @ project ( ' : forge ' ) { <nl> universalJar . finalizedBy ( signUniversal ) <nl> <nl> task downloadInstaller ( type : DownloadMavenArtifact ) { <nl> - artifact = ' net . minecraftforge : installer : 2 . + : shrunk ' <nl> + artifact = ' net . minecraftforge : installer : 2 . 0 . + : shrunk ' <nl> + changing = true <nl> } <nl> <nl> task installerJar ( type : Zip , dependsOn : [ downloadInstaller , signUniversal , installerJson , launcherJson , genClientBinPatches , genServerBinPatches ] ) { <nl> @ @ - 690 , 6 + 690 , 13 @ @ project ( ' : forge ' ) { <nl> } <nl> } <nl> <nl> + userdevConfig { <nl> + def artifacts = getArtifacts ( project , project . configurations . installer , true ) <nl> + artifacts . each { key , lib - > <nl> + addLibrary ( lib . name ) <nl> + } <nl> + } <nl> + <nl> license { <nl> header = file ( " $ rootDir / LICENSE - header . txt " ) <nl> <nl> @ @ - 709 , 7 + 716 , 7 @ @ project ( ' : forge ' ) { <nl> files = files ( " $ rootDir / src / test / java " ) <nl> } <nl> } <nl> - } <nl> + } <nl> <nl> publishing { <nl> publications { <nl> @ @ - 720 , 6 + 727 , 7 @ @ project ( ' : forge ' ) { <nl> / / TODO : installer - win <nl> artifact makeMdk <nl> artifact userdevJar <nl> + artifact sourcesJar <nl> <nl> pom { <nl> name = ' forge ' <nl> diff - - git a / mdk / build . gradle b / mdk / build . gradle <nl> index 6dead0b . . 1b9f242 100644 <nl> - - - a / mdk / build . gradle <nl> + + + b / mdk / build . gradle <nl> @ @ - 1 , 19 + 1 , 31 @ @ <nl> buildscript { <nl> repositories { <nl> + mavenLocal ( ) <nl> + maven { url = ' http : / / files . minecraftforge . net / maven ' } <nl> jcenter ( ) <nl> - maven { url = " http : / / files . minecraftforge . net / maven " } <nl> + mavenCentral ( ) <nl> + } <nl> + / / This is only here while i ' m activly developing FG , Remind me to remove when we publically release <nl> + configurations { <nl> + classpath . resolutionStrategy { <nl> + cacheDynamicVersionsFor 10 , ' seconds ' <nl> + cacheChangingModulesFor 0 , ' seconds ' <nl> + } <nl> } <nl> dependencies { <nl> - classpath ' net . minecraftforge . gradle : ForgeGradle : 3 . + ' <nl> + classpath group : ' net . minecraftforge . gradle ' , name : ' ForgeGradle ' , version : ' 3 . + ' , changing : true <nl> } <nl> } <nl> - apply plugin : ' net . minecraftforge . gradle . forge ' <nl> + apply plugin : ' net . minecraftforge . gradle ' <nl> / / Only edit below this line , the above code adds and enables the necessary things for Forge to be setup . <nl> <nl> + repositories { <nl> + maven { url = ' file : / / ' + file ( ' . . / repo ' ) . absolutePath } / / Used by Forge development testing only , you can delete this . <nl> + } <nl> <nl> - version = " 1 . 0 " <nl> - group = " com . yourname . modid " / / http : / / maven . apache . org / guides / mini / guide - naming - conventions . html <nl> - archivesBaseName = " modid " <nl> + version = ' 1 . 0 ' <nl> + group = ' com . yourname . modid ' / / http : / / maven . apache . org / guides / mini / guide - naming - conventions . html <nl> + archivesBaseName = ' modid ' <nl> <nl> sourceCompatibility = targetCompatibility = ' 1 . 8 ' / / Need this here so eclipse task generates correctly . <nl> compileJava { <nl> @ @ - 21 , 24 + 33 , 27 @ @ compileJava { <nl> } <nl> <nl> minecraft { <nl> - version = " @ VERSION @ " <nl> - runDir = " run " <nl> - <nl> / / the mappings can be changed at any time , and must be in the following format . <nl> / / snapshot _ YYYYMMDD snapshot are built nightly . <nl> / / stable _ # stables are built at the discretion of the MCP team . <nl> / / Use non - default mappings at your own risk . they may not always work . <nl> / / simply re - run your setup task after changing the mappings to update your workspace . <nl> - mappings = " @ MAPPINGS @ " <nl> + mappings channel : ' snapshot ' , version : ' 20180921 - 1 . 13 ' <nl> / / makeObfSourceJar = false / / an Srg named sources jar is made by default . uncomment this to disable . <nl> + <nl> + accessTransformer = file ( ' test _ at . cfg ' ) <nl> } <nl> <nl> dependencies { <nl> + / / Specify the version of Minecraft to use , If this is any group other then ' net . minecraft ' it is assumed <nl> + / / that the dep is a ForgeGradle ' patcher ' dependency . And it ' s patches will be applied . <nl> + minecraft ' net . minecraftforge : forge : 1 . 13 - 15 . 24 . 0 . 0 - 1 . 13 - pre ' <nl> + <nl> / / you may put jars on which you depend on in . / libs <nl> / / or you may define them like so . . <nl> / / compile " some . group : artifact : version : classifier " <nl> / / compile " some . group : artifact : version " <nl> - <nl> + <nl> / / real examples <nl> / / compile ' com . mod - buildcraft : buildcraft : 6 . 0 . 8 : dev ' / / adds buildcraft to the dev env <nl> / / compile ' com . googlecode . efficient - java - matrix - library : ejml : 0 . 24 ' / / adds ejml to the dev env <nl> @ @ - 59 , 17 + 74 , 17 @ @ dependencies { <nl> <nl> processResources { <nl> / / this will ensure that this task is redone when the versions change . <nl> - inputs . property " version " , project . version <nl> - inputs . property " mcversion " , project . minecraft . version <nl> + inputs . property ' version ' , project . version <nl> + inputs . property ' mcversion ' , ' 1 . 13 ' <nl> <nl> / / replace stuff in mcmod . info , nothing else <nl> from ( sourceSets . main . resources . srcDirs ) { <nl> include ' mcmod . info ' <nl> <nl> / / replace version and mcversion <nl> - expand ' version ' : project . version , ' mcversion ' : project . minecraft . version <nl> + expand ' version ' : project . version , ' mcversion ' : ' 1 . 13 ' <nl> } <nl> - <nl> + <nl> / / copy everything else except the mcmod . info <nl> from ( sourceSets . main . resources . srcDirs ) { <nl> exclude ' mcmod . info ' <nl> diff - - git a / mdk / test _ at . cfg b / mdk / test _ at . cfg <nl> new file mode 100644 <nl> index 0000000 . . fe3639d <nl> - - - / dev / null <nl> + + + b / mdk / test _ at . cfg <nl> @ @ - 0 , 0 + 1 @ @ <nl> + public net . minecraft . block . Block field _ 196273 _ d # LOGGER <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / fml / . gitattributes b / fml / . gitattributes <nl> index 809a906 . . 758843d 100644 <nl> - - - a / fml / . gitattributes <nl> + + + b / fml / . gitattributes <nl> @ @ - 1 , 9 + 1 , 13 @ @ <nl> * text eol = lf <nl> * . bat text eol = crlf <nl> * . patch text eol = lf <nl> + * . java text eol = lf <nl> + * . gradle text eol = crlf <nl> * . png binary <nl> * . exe binary <nl> * . dll binary <nl> + * . jar binary <nl> + * . lzma binary <nl> * . zip binary <nl> * . pyd binary <nl> * . cfg text eol = lf <nl> diff - - git a / fml / . gitignore b / fml / . gitignore <nl> index 27935ea . . a09824b 100644 <nl> - - - a / fml / . gitignore <nl> + + + b / fml / . gitignore <nl> @ @ - 1 , 20 + 1 , 15 @ @ <nl> + # eclipse <nl> / bin <nl> - / minecraft _ server <nl> - / mods <nl> - / fmlbuild . properties <nl> - / fmlversion . properties <nl> - / difflist . txt <nl> - / target <nl> - fmlbranding . properties <nl> - / fernflower . zip <nl> - / commands . py . bck <nl> - / mcp * . zip <nl> - / mcp <nl> + / . settings <nl> + / . classpath <nl> + <nl> + # idea <nl> + / . idea <nl> + * . iml <nl> + <nl> + # gradle <nl> + / build <nl> + / . gradle <nl> + <nl> + # occupational hazards <nl> / eclipse <nl> - / deobfuscation _ data * . zip <nl> - / binpatch <nl> - / mcp _ data / <nl> - / map _ client . txt <nl> - / * . lzma <nl> - * * / * . lzma <nl> - / installer _ base . jar <nl> diff - - git a / fml / build . gradle b / fml / build . gradle <nl> new file mode 100644 <nl> index 0000000 . . e9448bd <nl> - - - / dev / null <nl> + + + b / fml / build . gradle <nl> @ @ - 0 , 0 + 1 , 100 @ @ <nl> + buildscript { <nl> + repositories { <nl> + mavenCentral ( ) <nl> + maven { <nl> + name = " forge " <nl> + url = " http : / / files . minecraftforge . net / maven " <nl> + } <nl> + } <nl> + dependencies { <nl> + classpath ' net . minecraftforge . gradle : ForgeGradle : 1 . 0 - SNAPSHOT ' <nl> + } <nl> + } <nl> + <nl> + import static net . minecraftforge . gradle . dev . FmlDevPlugin . * <nl> + <nl> + apply plugin : ' maven ' <nl> + apply plugin : ' fmldev ' <nl> + <nl> + repositories { <nl> + flatDir { <nl> + name " fileRepo " <nl> + dirs " repo " <nl> + } <nl> + } <nl> + <nl> + minecraft { <nl> + version = ' 1 . 6 . 4 ' <nl> + fmlDir = projectDir . getAbsolutePath ( ) ; <nl> + mainClass = ' cpw . mods . fml . relauncher . ServerLaunchWrapper ' <nl> + installerVersion = " 1 . 4 " <nl> + } <nl> + <nl> + group = ' cpw . mods ' <nl> + version = getVersionFromGit ( project ) <nl> + <nl> + jenkins { <nl> + job = ' fml ' <nl> + } <nl> + <nl> + uploadArchives { <nl> + repositories { <nl> + if ( project . hasProperty ( " filesmaven " ) ) { <nl> + logger . info ( ' Publishing to files server ' ) <nl> + <nl> + mavenDeployer { <nl> + configuration = configurations . deployerJars <nl> + <nl> + repository ( url : project . filesmaven . url ) { <nl> + authentication ( userName : project . filesmaven . username , privateKey : project . filesmaven . key ) <nl> + } <nl> + <nl> + pom { <nl> + groupId = project . group <nl> + version = project . version <nl> + artifactId = project . archivesBaseName <nl> + project { <nl> + name project . archivesBaseName <nl> + packaging ' jar ' <nl> + description ' ForgeModLoader ' <nl> + url ' https : / / github . com / MinecraftForge / FML ' <nl> + <nl> + scm { <nl> + url ' https : / / github . com / MinecraftForge / FML ' <nl> + connection ' scm : git : git : / / github . com / MinecraftForge / FML . git ' <nl> + developerConnection ' scm : git : git @ github . com : MinecraftForge / FML . git ' <nl> + } <nl> + <nl> + issueManagement { <nl> + system ' github ' <nl> + url ' https : / / github . com / MinecraftForge / FML / issues ' <nl> + } <nl> + <nl> + licenses { <nl> + license { <nl> + name ' GNU Lesser Public License ( LGPL ) , Version 3 ' <nl> + url ' http : / / www . gnu . org / licenses / lgpl - 3 . 0 . txt ' <nl> + distribution ' repo ' <nl> + } <nl> + } <nl> + <nl> + developers { <nl> + developer { <nl> + id ' LexManos ' <nl> + name ' Lex Manos ' <nl> + roles { role ' developer ' } <nl> + } <nl> + } <nl> + developers { <nl> + developer { <nl> + id ' cpw ' <nl> + name ' Christian Weeks ' <nl> + roles { role ' developer ' } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / fml / eclipse - workspace - dev . zip b / fml / eclipse - workspace - dev . zip <nl> index 3443e18 . . a3dd79e 100644 <nl> Binary files a / fml / eclipse - workspace - dev . zip and b / fml / eclipse - workspace - dev . zip differ <nl> diff - - git a / fml / settings . gradle b / fml / settings . gradle <nl> new file mode 100644 <nl> index 0000000 . . bcecb1a <nl> - - - / dev / null <nl> + + + b / fml / settings . gradle <nl> @ @ - 0 , 0 + 1 @ @ <nl> + rootProject . name = ' fml ' <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / . gitignore b / . gitignore 
 index 28d7cec . . 3ad106c 100644 
 - - - a / . gitignore 
 + + + b / . gitignore 
 @ @ - 15 , 6 + 15 , 8 @ @ 
 # gradle 
 / build 
 / . gradle 
 + / mdk / . gradle 
 + / mdk / build 
 
 # occupational hazards 
 / projects / 
 diff - - git a / build . gradle b / build . gradle 
 index e069476 . . f129677 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 103 , 7 + 103 , 6 @ @ project ( ' : forge ' ) { 
 accessTransformer = file ( " $ rootDir / src / main / resources / forge _ at . cfg " ) 
 exc = file ( " $ rootDir / src / main / resources / forge . exc " ) 
 srgPatches = true 
 - srgUniversal = true 
 clientRun { 
 main = ' net . minecraftforge . fml . LaunchTesting ' 
 environment = [ 
 @ @ - 621 , 7 + 620 , 8 @ @ project ( ' : forge ' ) { 
 universalJar . finalizedBy ( signUniversal ) 
 
 task downloadInstaller ( type : DownloadMavenArtifact ) { 
 - artifact = ' net . minecraftforge : installer : 2 . + : shrunk ' 
 + artifact = ' net . minecraftforge : installer : 2 . 0 . + : shrunk ' 
 + changing = true 
 } 
 
 task installerJar ( type : Zip , dependsOn : [ downloadInstaller , signUniversal , installerJson , launcherJson , genClientBinPatches , genServerBinPatches ] ) { 
 @ @ - 690 , 6 + 690 , 13 @ @ project ( ' : forge ' ) { 
 } 
 } 
 
 + userdevConfig { 
 + def artifacts = getArtifacts ( project , project . configurations . installer , true ) 
 + artifacts . each { key , lib - > 
 + addLibrary ( lib . name ) 
 + } 
 + } 
 + 
 license { 
 header = file ( " $ rootDir / LICENSE - header . txt " ) 
 
 @ @ - 709 , 7 + 716 , 7 @ @ project ( ' : forge ' ) { 
 files = files ( " $ rootDir / src / test / java " ) 
 } 
 } 
 - } 
 + } 
 
 publishing { 
 publications { 
 @ @ - 720 , 6 + 727 , 7 @ @ project ( ' : forge ' ) { 
 / / TODO : installer - win 
 artifact makeMdk 
 artifact userdevJar 
 + artifact sourcesJar 
 
 pom { 
 name = ' forge ' 
 diff - - git a / mdk / build . gradle b / mdk / build . gradle 
 index 6dead0b . . 1b9f242 100644 
 - - - a / mdk / build . gradle 
 + + + b / mdk / build . gradle 
 @ @ - 1 , 19 + 1 , 31 @ @ 
 buildscript { 
 repositories { 
 + mavenLocal ( ) 
 + maven { url = ' http : / / files . minecraftforge . net / maven ' } 
 jcenter ( ) 
 - maven { url = " http : / / files . minecraftforge . net / maven " } 
 + mavenCentral ( ) 
 + } 
 + / / This is only here while i ' m activly developing FG , Remind me to remove when we publically release 
 + configurations { 
 + classpath . resolutionStrategy { 
 + cacheDynamicVersionsFor 10 , ' seconds ' 
 + cacheChangingModulesFor 0 , ' seconds ' 
 + } 
 } 
 dependencies { 
 - classpath ' net . minecraftforge . gradle : ForgeGradle : 3 . + ' 
 + classpath group : ' net . minecraftforge . gradle ' , name : ' ForgeGradle ' , version : ' 3 . + ' , changing : true 
 } 
 } 
 - apply plugin : ' net . minecraftforge . gradle . forge ' 
 + apply plugin : ' net . minecraftforge . gradle ' 
 / / Only edit below this line , the above code adds and enables the necessary things for Forge to be setup . 
 
 + repositories { 
 + maven { url = ' file : / / ' + file ( ' . . / repo ' ) . absolutePath } / / Used by Forge development testing only , you can delete this . 
 + } 
 
 - version = " 1 . 0 " 
 - group = " com . yourname . modid " / / http : / / maven . apache . org / guides / mini / guide - naming - conventions . html 
 - archivesBaseName = " modid " 
 + version = ' 1 . 0 ' 
 + group = ' com . yourname . modid ' / / http : / / maven . apache . org / guides / mini / guide - naming - conventions . html 
 + archivesBaseName = ' modid ' 
 
 sourceCompatibility = targetCompatibility = ' 1 . 8 ' / / Need this here so eclipse task generates correctly . 
 compileJava { 
 @ @ - 21 , 24 + 33 , 27 @ @ compileJava { 
 } 
 
 minecraft { 
 - version = " @ VERSION @ " 
 - runDir = " run " 
 - 
 / / the mappings can be changed at any time , and must be in the following format . 
 / / snapshot _ YYYYMMDD snapshot are built nightly . 
 / / stable _ # stables are built at the discretion of the MCP team . 
 / / Use non - default mappings at your own risk . they may not always work . 
 / / simply re - run your setup task after changing the mappings to update your workspace . 
 - mappings = " @ MAPPINGS @ " 
 + mappings channel : ' snapshot ' , version : ' 20180921 - 1 . 13 ' 
 / / makeObfSourceJar = false / / an Srg named sources jar is made by default . uncomment this to disable . 
 + 
 + accessTransformer = file ( ' test _ at . cfg ' ) 
 } 
 
 dependencies { 
 + / / Specify the version of Minecraft to use , If this is any group other then ' net . minecraft ' it is assumed 
 + / / that the dep is a ForgeGradle ' patcher ' dependency . And it ' s patches will be applied . 
 + minecraft ' net . minecraftforge : forge : 1 . 13 - 15 . 24 . 0 . 0 - 1 . 13 - pre ' 
 + 
 / / you may put jars on which you depend on in . / libs 
 / / or you may define them like so . . 
 / / compile " some . group : artifact : version : classifier " 
 / / compile " some . group : artifact : version " 
 - 
 + 
 / / real examples 
 / / compile ' com . mod - buildcraft : buildcraft : 6 . 0 . 8 : dev ' / / adds buildcraft to the dev env 
 / / compile ' com . googlecode . efficient - java - matrix - library : ejml : 0 . 24 ' / / adds ejml to the dev env 
 @ @ - 59 , 17 + 74 , 17 @ @ dependencies { 
 
 processResources { 
 / / this will ensure that this task is redone when the versions change . 
 - inputs . property " version " , project . version 
 - inputs . property " mcversion " , project . minecraft . version 
 + inputs . property ' version ' , project . version 
 + inputs . property ' mcversion ' , ' 1 . 13 ' 
 
 / / replace stuff in mcmod . info , nothing else 
 from ( sourceSets . main . resources . srcDirs ) { 
 include ' mcmod . info ' 
 
 / / replace version and mcversion 
 - expand ' version ' : project . version , ' mcversion ' : project . minecraft . version 
 + expand ' version ' : project . version , ' mcversion ' : ' 1 . 13 ' 
 } 
 - 
 + 
 / / copy everything else except the mcmod . info 
 from ( sourceSets . main . resources . srcDirs ) { 
 exclude ' mcmod . info ' 
 diff - - git a / mdk / test _ at . cfg b / mdk / test _ at . cfg 
 new file mode 100644 
 index 0000000 . . fe3639d 
 - - - / dev / null 
 + + + b / mdk / test _ at . cfg 
 @ @ - 0 , 0 + 1 @ @ 
 + public net . minecraft . block . Block field _ 196273 _ d # LOGGER 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / fml / . gitattributes b / fml / . gitattributes 
 index 809a906 . . 758843d 100644 
 - - - a / fml / . gitattributes 
 + + + b / fml / . gitattributes 
 @ @ - 1 , 9 + 1 , 13 @ @ 
 * text eol = lf 
 * . bat text eol = crlf 
 * . patch text eol = lf 
 + * . java text eol = lf 
 + * . gradle text eol = crlf 
 * . png binary 
 * . exe binary 
 * . dll binary 
 + * . jar binary 
 + * . lzma binary 
 * . zip binary 
 * . pyd binary 
 * . cfg text eol = lf 
 diff - - git a / fml / . gitignore b / fml / . gitignore 
 index 27935ea . . a09824b 100644 
 - - - a / fml / . gitignore 
 + + + b / fml / . gitignore 
 @ @ - 1 , 20 + 1 , 15 @ @ 
 + # eclipse 
 / bin 
 - / minecraft _ server 
 - / mods 
 - / fmlbuild . properties 
 - / fmlversion . properties 
 - / difflist . txt 
 - / target 
 - fmlbranding . properties 
 - / fernflower . zip 
 - / commands . py . bck 
 - / mcp * . zip 
 - / mcp 
 + / . settings 
 + / . classpath 
 + 
 + # idea 
 + / . idea 
 + * . iml 
 + 
 + # gradle 
 + / build 
 + / . gradle 
 + 
 + # occupational hazards 
 / eclipse 
 - / deobfuscation _ data * . zip 
 - / binpatch 
 - / mcp _ data / 
 - / map _ client . txt 
 - / * . lzma 
 - * * / * . lzma 
 - / installer _ base . jar 
 diff - - git a / fml / build . gradle b / fml / build . gradle 
 new file mode 100644 
 index 0000000 . . e9448bd 
 - - - / dev / null 
 + + + b / fml / build . gradle 
 @ @ - 0 , 0 + 1 , 100 @ @ 
 + buildscript { 
 + repositories { 
 + mavenCentral ( ) 
 + maven { 
 + name = " forge " 
 + url = " http : / / files . minecraftforge . net / maven " 
 + } 
 + } 
 + dependencies { 
 + classpath ' net . minecraftforge . gradle : ForgeGradle : 1 . 0 - SNAPSHOT ' 
 + } 
 + } 
 + 
 + import static net . minecraftforge . gradle . dev . FmlDevPlugin . * 
 + 
 + apply plugin : ' maven ' 
 + apply plugin : ' fmldev ' 
 + 
 + repositories { 
 + flatDir { 
 + name " fileRepo " 
 + dirs " repo " 
 + } 
 + } 
 + 
 + minecraft { 
 + version = ' 1 . 6 . 4 ' 
 + fmlDir = projectDir . getAbsolutePath ( ) ; 
 + mainClass = ' cpw . mods . fml . relauncher . ServerLaunchWrapper ' 
 + installerVersion = " 1 . 4 " 
 + } 
 + 
 + group = ' cpw . mods ' 
 + version = getVersionFromGit ( project ) 
 + 
 + jenkins { 
 + job = ' fml ' 
 + } 
 + 
 + uploadArchives { 
 + repositories { 
 + if ( project . hasProperty ( " filesmaven " ) ) { 
 + logger . info ( ' Publishing to files server ' ) 
 + 
 + mavenDeployer { 
 + configuration = configurations . deployerJars 
 + 
 + repository ( url : project . filesmaven . url ) { 
 + authentication ( userName : project . filesmaven . username , privateKey : project . filesmaven . key ) 
 + } 
 + 
 + pom { 
 + groupId = project . group 
 + version = project . version 
 + artifactId = project . archivesBaseName 
 + project { 
 + name project . archivesBaseName 
 + packaging ' jar ' 
 + description ' ForgeModLoader ' 
 + url ' https : / / github . com / MinecraftForge / FML ' 
 + 
 + scm { 
 + url ' https : / / github . com / MinecraftForge / FML ' 
 + connection ' scm : git : git : / / github . com / MinecraftForge / FML . git ' 
 + developerConnection ' scm : git : git @ github . com : MinecraftForge / FML . git ' 
 + } 
 + 
 + issueManagement { 
 + system ' github ' 
 + url ' https : / / github . com / MinecraftForge / FML / issues ' 
 + } 
 + 
 + licenses { 
 + license { 
 + name ' GNU Lesser Public License ( LGPL ) , Version 3 ' 
 + url ' http : / / www . gnu . org / licenses / lgpl - 3 . 0 . txt ' 
 + distribution ' repo ' 
 + } 
 + } 
 + 
 + developers { 
 + developer { 
 + id ' LexManos ' 
 + name ' Lex Manos ' 
 + roles { role ' developer ' } 
 + } 
 + } 
 + developers { 
 + developer { 
 + id ' cpw ' 
 + name ' Christian Weeks ' 
 + roles { role ' developer ' } 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / fml / eclipse - workspace - dev . zip b / fml / eclipse - workspace - dev . zip 
 index 3443e18 . . a3dd79e 100644 
 Binary files a / fml / eclipse - workspace - dev . zip and b / fml / eclipse - workspace - dev . zip differ 
 diff - - git a / fml / settings . gradle b / fml / settings . gradle 
 new file mode 100644 
 index 0000000 . . bcecb1a 
 - - - / dev / null 
 + + + b / fml / settings . gradle 
 @ @ - 0 , 0 + 1 @ @ 
 + rootProject . name = ' fml ' 
 \ No newline at end of file
