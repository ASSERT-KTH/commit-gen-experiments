BLEU SCORE: 0.028398387225677897

TEST MSG: Fix # 3561 import io . IOUtils instead of compress . utils . IOUtils
GENERATED MSG: Ensure that EntitySpawn and OpenGUI packets are handled in the world thread .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / config / Configuration . java b / src / main / java / net / minecraftforge / common / config / Configuration . java <nl> index dc68d66 . . 56ba102 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / config / Configuration . java <nl> + + + b / src / main / java / net / minecraftforge / common / config / Configuration . java <nl> @ @ - 62 , 7 + 62 , 7 @ @ import net . minecraftforge . fml . client . config . IConfigElement ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . Loader ; <nl> import net . minecraftforge . fml . relauncher . FMLInjectionData ; <nl> - import org . apache . commons . compress . utils . IOUtils ; <nl> + import org . apache . commons . io . IOUtils ; <nl> <nl> / * * <nl> * This class offers advanced configurations capabilities , allowing to provide <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> index 5791429 . . fda26de 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> @ @ - 108 , 7 + 108 , 7 @ @ import net . minecraftforge . fml . common . registry . PersistentRegistryManager ; <nl> import net . minecraftforge . fml . common . toposort . ModSortingException ; <nl> import net . minecraftforge . fml . relauncher . Side ; <nl> <nl> - import org . apache . commons . compress . utils . IOUtils ; <nl> + import org . apache . commons . io . IOUtils ; <nl> import org . apache . logging . log4j . Level ; <nl> import org . apache . logging . log4j . LogManager ; <nl> import org . apache . logging . log4j . Logger ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLModContainer . java b / src / main / java / net / minecraftforge / fml / common / FMLModContainer . java <nl> index 92a809e . . a42f8b5 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / FMLModContainer . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / FMLModContainer . java <nl> @ @ - 54 , 7 + 54 , 7 @ @ import net . minecraftforge . fml . common . versioning . VersionParser ; <nl> import net . minecraftforge . fml . common . versioning . VersionRange ; <nl> import net . minecraftforge . fml . relauncher . Side ; <nl> <nl> - import org . apache . commons . compress . utils . IOUtils ; <nl> + import org . apache . commons . io . IOUtils ; <nl> import org . apache . commons . lang3 . StringUtils ; <nl> import org . apache . logging . log4j . Level ; <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / Loader . java b / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> index 8b482a6 . . 32fbff0 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / Loader . java <nl> @ @ - 60 , 7 + 60 , 7 @ @ import net . minecraftforge . fml . common . versioning . VersionParser ; <nl> import net . minecraftforge . fml . relauncher . ModListHelper ; <nl> import net . minecraftforge . fml . relauncher . Side ; <nl> <nl> - import org . apache . commons . compress . utils . IOUtils ; <nl> + import org . apache . commons . io . IOUtils ; <nl> import org . apache . logging . log4j . Level ; <nl> <nl> import com . google . common . base . CharMatcher ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java b / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java <nl> index a461fa4 . . 4464f7d 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java <nl> @ @ - 29 , 7 + 29 , 7 @ @ import java . util . Map ; <nl> import java . util . jar . JarEntry ; <nl> import java . util . jar . JarFile ; <nl> <nl> - import org . apache . commons . compress . utils . IOUtils ; <nl> + import org . apache . commons . io . IOUtils ; <nl> import org . apache . logging . log4j . Level ; <nl> <nl> import net . minecraft . launchwrapper . LaunchClassLoader ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java b / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java <nl> index aa048b0 . . 3e7e691 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java <nl> @ @ - 45 , 7 + 45 , 7 @ @ import java . util . zip . ZipOutputStream ; <nl> import net . minecraft . launchwrapper . IClassTransformer ; <nl> import net . minecraftforge . fml . relauncher . FMLRelaunchLog ; <nl> <nl> - import org . apache . commons . compress . utils . IOUtils ; <nl> + import org . apache . commons . io . IOUtils ; <nl> import org . objectweb . asm . ClassReader ; <nl> import org . objectweb . asm . ClassWriter ; <nl> import org . objectweb . asm . tree . AbstractInsnNode ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / asm / transformers / MarkerTransformer . java b / src / main / java / net / minecraftforge / fml / common / asm / transformers / MarkerTransformer . java <nl> index 7be0c74 . . 91a4951 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / asm / transformers / MarkerTransformer . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / asm / transformers / MarkerTransformer . java <nl> @ @ - 35 , 7 + 35 , 7 @ @ import java . util . zip . ZipOutputStream ; <nl> <nl> import net . minecraft . launchwrapper . IClassTransformer ; <nl> <nl> - import org . apache . commons . compress . utils . IOUtils ; <nl> + import org . apache . commons . io . IOUtils ; <nl> import org . objectweb . asm . ClassReader ; <nl> import org . objectweb . asm . ClassWriter ; <nl> import org . objectweb . asm . tree . ClassNode ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java b / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java <nl> index 3848717 . . 77fde78 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java <nl> @ @ - 33 , 7 + 33 , 7 @ @ import net . minecraftforge . fml . common . ModContainer ; <nl> import net . minecraftforge . fml . common . ModContainerFactory ; <nl> import net . minecraftforge . fml . common . discovery . asm . ASMModParser ; <nl> <nl> - import org . apache . commons . compress . utils . IOUtils ; <nl> + import org . apache . commons . io . IOUtils ; <nl> import org . apache . logging . log4j . Level ; <nl> <nl> import com . google . common . base . Throwables ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java b / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java <nl> index 816cc1f . . 396198e 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ import net . minecraftforge . fml . common . ModContainer ; <nl> import net . minecraftforge . fml . common . ModContainerFactory ; <nl> import net . minecraftforge . fml . common . discovery . asm . ASMModParser ; <nl> <nl> - import org . apache . commons . compress . utils . IOUtils ; <nl> + import org . apache . commons . io . IOUtils ; <nl> import org . apache . logging . log4j . Level ; <nl> <nl> import java . util . regex . Matcher ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / patcher / GenDiffSet . java b / src / main / java / net / minecraftforge / fml / common / patcher / GenDiffSet . java <nl> index 2a9b107 . . b104a5a 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / patcher / GenDiffSet . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / patcher / GenDiffSet . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ import java . util . jar . JarFile ; <nl> import net . minecraftforge . fml . common . asm . transformers . deobf . FMLDeobfuscatingRemapper ; <nl> import net . minecraftforge . fml . repackage . com . nothome . delta . Delta ; <nl> <nl> - import org . apache . commons . compress . utils . IOUtils ; <nl> + import org . apache . commons . io . IOUtils ; <nl> import org . apache . logging . log4j . Level ; <nl> import org . apache . logging . log4j . LogManager ; <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / fml / relauncher / CoreModManager . java b / src / main / java / net / minecraftforge / fml / relauncher / CoreModManager . java <nl> index cdfb7e0 . . 0914cd1 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / relauncher / CoreModManager . java <nl> + + + b / src / main / java / net / minecraftforge / fml / relauncher / CoreModManager . java <nl> @ @ - 56 , 7 + 56 , 7 @ @ import net . minecraftforge . fml . relauncher . IFMLLoadingPlugin . Name ; <nl> import net . minecraftforge . fml . relauncher . IFMLLoadingPlugin . SortingIndex ; <nl> import net . minecraftforge . fml . relauncher . IFMLLoadingPlugin . TransformerExclusions ; <nl> <nl> - import org . apache . commons . compress . utils . IOUtils ; <nl> + import org . apache . commons . io . IOUtils ; <nl> import org . apache . logging . log4j . Level ; <nl> <nl> import com . google . common . base . Strings ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / repackage / com / nothome / delta / GDiffPatcher . java b / src / main / java / net / minecraftforge / fml / repackage / com / nothome / delta / GDiffPatcher . java <nl> index 6b40f80 . . a27316f 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / repackage / com / nothome / delta / GDiffPatcher . java <nl> + + + b / src / main / java / net / minecraftforge / fml / repackage / com / nothome / delta / GDiffPatcher . java <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> <nl> package net . minecraftforge . fml . repackage . com . nothome . delta ; <nl> <nl> - import org . apache . commons . compress . utils . IOUtils ; <nl> + import org . apache . commons . io . IOUtils ; <nl> <nl> import static net . minecraftforge . fml . repackage . com . nothome . delta . GDiffWriter . COPY _ INT _ INT ; <nl> import static net . minecraftforge . fml . repackage . com . nothome . delta . GDiffWriter . COPY _ INT _ UBYTE ;
NEAREST DIFF (one line): diff - - git a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> index e2c272a . . da90e83 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> @ @ - 59 , 6 + 59 , 15 @ @ <nl> } <nl> <nl> public boolean func _ 152349 _ b ( ) <nl> + @ @ - 1000 , 7 + 1004 , 7 @ @ <nl> + { <nl> + while ( ! this . field _ 152351 _ aB . isEmpty ( ) ) <nl> + { <nl> + - ( ( FutureTask ) this . field _ 152351 _ aB . poll ( ) ) . run ( ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . callFuture ( ( ( FutureTask ) this . field _ 152351 _ aB . poll ( ) ) ) ; <nl> + } <nl> + } <nl> + <nl> @ @ - 1035 , 9 + 1039 , 11 @ @ <nl> <nl> if ( ! this . field _ 71454 _ w ) <nl> diff - - git a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> index 450fde2 . . 55f72e5 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> @ @ - 71 , 6 + 71 , 15 @ @ <nl> } <nl> <nl> public void func _ 71190 _ q ( ) <nl> + @ @ - 657 , 7 + 671 , 7 @ @ <nl> + { <nl> + try <nl> + { <nl> + - ( ( FutureTask ) this . field _ 175589 _ i . poll ( ) ) . run ( ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . callFuture ( ( ( FutureTask ) this . field _ 175589 _ i . poll ( ) ) ) ; <nl> + } <nl> + catch ( Throwable throwable2 ) <nl> + { <nl> @ @ - 686 , 6 + 700 , 7 @ @ <nl> } <nl> <nl> diff - - git a / fml / patches / minecraft / net / minecraft / server / integrated / IntegratedServer . java . patch b / fml / patches / minecraft / net / minecraft / server / integrated / IntegratedServer . java . patch <nl> index d08b9da . . 4f0ce86 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / server / integrated / IntegratedServer . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / server / integrated / IntegratedServer . java . patch <nl> @ @ - 12 , 3 + 12 , 12 @ @ <nl> } <nl> <nl> public void func _ 71217 _ p ( ) <nl> + @ @ - 171 , 7 + 172 , 7 @ @ <nl> + { <nl> + try <nl> + { <nl> + - ( ( FutureTask ) this . field _ 175589 _ i . poll ( ) ) . run ( ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . callFuture ( ( ( FutureTask ) this . field _ 175589 _ i . poll ( ) ) ) ; <nl> + } <nl> + catch ( Throwable throwable ) <nl> + { <nl> diff - - git a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> index a5f39e9 . . b680df2 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> @ @ - 53 , 7 + 53 , 15 @ @ import net . minecraft . network . INetHandler ; <nl> import net . minecraft . network . NetHandlerPlayServer ; <nl> import net . minecraft . network . NetworkManager ; <nl> import net . minecraft . network . ServerStatusResponse ; <nl> + import net . minecraft . network . handshake . INetHandlerHandshakeServer ; <nl> + import net . minecraft . network . login . INetHandlerLoginClient ; <nl> + import net . minecraft . network . login . INetHandlerLoginServer ; <nl> + import net . minecraft . network . play . INetHandlerPlayClient ; <nl> + import net . minecraft . network . play . INetHandlerPlayServer ; <nl> + import net . minecraft . network . status . INetHandlerStatusClient ; <nl> + import net . minecraft . network . status . INetHandlerStatusServer ; <nl> import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . util . IThreadListener ; <nl> import net . minecraft . util . ResourceLocation ; <nl> import net . minecraft . world . WorldSettings ; <nl> import net . minecraft . world . storage . SaveFormatOld ; <nl> @ @ - 842 , 4 + 850 , 17 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> public void allowLogins ( ) { <nl> / / NOOP for integrated server <nl> } <nl> + <nl> + @ Override <nl> + public IThreadListener getWorldThread ( INetHandler net ) <nl> + { <nl> + if ( net instanceof INetHandlerPlayClient | | <nl> + net instanceof INetHandlerLoginClient | | <nl> + net instanceof INetHandlerStatusClient ) return getClient ( ) ; <nl> + if ( net instanceof INetHandlerHandshakeServer | | <nl> + net instanceof INetHandlerLoginServer | | <nl> + net instanceof INetHandlerPlayServer | | <nl> + net instanceof INetHandlerStatusServer ) return getServer ( ) ; <nl> + throw new RuntimeException ( " Unknown INetHandler : " + net ) ; <nl> + } <nl> } <nl> diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> index 6689a23 . . 521f2f1 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> @ @ - 18 , 6 + 18 , 8 @ @ import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Set ; <nl> import java . util . concurrent . CountDownLatch ; <nl> + import java . util . concurrent . ExecutionException ; <nl> + import java . util . concurrent . FutureTask ; <nl> import java . util . concurrent . TimeUnit ; <nl> <nl> import net . minecraft . crash . CrashReport ; <nl> @ @ - 35 , 6 + 37 , 7 @ @ import net . minecraft . network . handshake . client . C00Handshake ; <nl> import net . minecraft . network . login . server . S00PacketDisconnect ; <nl> import net . minecraft . server . MinecraftServer ; <nl> import net . minecraft . util . ChatComponentText ; <nl> + import net . minecraft . util . IThreadListener ; <nl> import net . minecraft . world . World ; <nl> import net . minecraft . world . storage . SaveHandler ; <nl> import net . minecraft . world . storage . WorldInfo ; <nl> @ @ - 660 , 4 + 663 , 26 @ @ public class FMLCommonHandler <nl> Runtime . getRuntime ( ) . exit ( exitCode ) ; <nl> } <nl> } <nl> + <nl> + public IThreadListener getWorldThread ( INetHandler net ) <nl> + { <nl> + return sidedDelegate . getWorldThread ( net ) ; <nl> + } <nl> + <nl> + public static void callFuture ( FutureTask task ) <nl> + { <nl> + try <nl> + { <nl> + task . run ( ) ; <nl> + task . get ( ) ; / / Forces the exception to be thrown if any <nl> + } <nl> + catch ( InterruptedException e ) <nl> + { <nl> + FMLLog . log ( Level . FATAL , e , " Exception caught executing FutureTask : " + e . toString ( ) ) ; <nl> + } <nl> + catch ( ExecutionException e ) <nl> + { <nl> + FMLLog . log ( Level . FATAL , e , " Exception caught executing FutureTask : " + e . toString ( ) ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java b / fml / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> index 6b2614a . . 0c94391 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ import java . util . Set ; <nl> import net . minecraft . network . INetHandler ; <nl> import net . minecraft . network . NetworkManager ; <nl> import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . util . IThreadListener ; <nl> import net . minecraftforge . fml . common . eventhandler . EventBus ; <nl> import net . minecraftforge . fml . relauncher . Side ; <nl> <nl> @ @ - 59 , 4 + 60 , 6 @ @ public interface IFMLSidedHandler <nl> boolean shouldAllowPlayerLogins ( ) ; <nl> <nl> void allowLogins ( ) ; <nl> + <nl> + IThreadListener getWorldThread ( INetHandler net ) ; <nl> } <nl> diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java b / fml / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> index ad9f348 . . bf5eb7b 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> @ @ - 11 , 11 + 11 , 14 @ @ import net . minecraft . client . entity . EntityPlayerSP ; <nl> import net . minecraft . client . multiplayer . WorldClient ; <nl> import net . minecraft . entity . Entity ; <nl> import net . minecraft . entity . EntityLiving ; <nl> + import net . minecraft . util . IThreadListener ; <nl> import net . minecraft . world . World ; <nl> import net . minecraftforge . fml . client . FMLClientHandler ; <nl> + import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . Loader ; <nl> import net . minecraftforge . fml . common . ModContainer ; <nl> + import net . minecraftforge . fml . common . network . NetworkRegistry ; <nl> import net . minecraftforge . fml . common . network . internal . FMLMessage . EntityAdjustMessage ; <nl> import net . minecraftforge . fml . common . network . internal . FMLMessage . EntityMessage ; <nl> import net . minecraftforge . fml . common . registry . EntityRegistry ; <nl> @ @ - 27 , 7 + 30 , 26 @ @ import com . google . common . base . Throwables ; <nl> <nl> public class EntitySpawnHandler extends SimpleChannelInboundHandler < FMLMessage . EntityMessage > { <nl> @ Override <nl> - protected void channelRead0 ( ChannelHandlerContext ctx , EntityMessage msg ) throws Exception <nl> + protected void channelRead0 ( ChannelHandlerContext ctx , final EntityMessage msg ) throws Exception <nl> + { <nl> + IThreadListener thread = FMLCommonHandler . instance ( ) . getWorldThread ( ctx . channel ( ) . attr ( NetworkRegistry . NET _ HANDLER ) . get ( ) ) ; <nl> + if ( thread . isCallingFromMinecraftThread ( ) ) <nl> + { <nl> + process ( msg ) ; <nl> + } <nl> + else <nl> + { <nl> + thread . addScheduledTask ( new Runnable ( ) <nl> + { <nl> + public void run ( ) <nl> + { <nl> + EntitySpawnHandler . this . process ( msg ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + } <nl> + <nl> + private void process ( EntityMessage msg ) <nl> { <nl> if ( msg . getClass ( ) . equals ( FMLMessage . EntitySpawnMessage . class ) ) <nl> { <nl> @ @ - 52 , 7 + 74 , 6 @ @ public class EntitySpawnHandler extends SimpleChannelInboundHandler < FMLMessage . E <nl> { <nl> FMLLog . fine ( " Attempted to adjust the position of entity % d which is not present on the client " , msg . entityId ) ; <nl> } <nl> - <nl> } <nl> <nl> private void spawnEntity ( FMLMessage . EntitySpawnMessage spawnMsg ) <nl> diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / network / internal / OpenGuiHandler . java b / fml / src / main / java / net / minecraftforge / fml / common / network / internal / OpenGuiHandler . java <nl> index 6a5f82e . . b414fa6 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / network / internal / OpenGuiHandler . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / network / internal / OpenGuiHandler . java <nl> @ @ - 3 , 15 + 3 , 37 @ @ package net . minecraftforge . fml . common . network . internal ; <nl> import org . apache . logging . log4j . Level ; <nl> <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> + import net . minecraft . util . IThreadListener ; <nl> import net . minecraftforge . fml . client . FMLClientHandler ; <nl> + import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> + import net . minecraftforge . fml . common . network . NetworkRegistry ; <nl> import net . minecraftforge . fml . common . network . internal . FMLMessage . OpenGui ; <nl> import io . netty . channel . ChannelHandlerContext ; <nl> import io . netty . channel . SimpleChannelInboundHandler ; <nl> <nl> public class OpenGuiHandler extends SimpleChannelInboundHandler < FMLMessage . OpenGui > { <nl> @ Override <nl> - protected void channelRead0 ( ChannelHandlerContext ctx , OpenGui msg ) throws Exception <nl> + protected void channelRead0 ( ChannelHandlerContext ctx , final OpenGui msg ) throws Exception <nl> + { <nl> + IThreadListener thread = FMLCommonHandler . instance ( ) . getWorldThread ( ctx . channel ( ) . attr ( NetworkRegistry . NET _ HANDLER ) . get ( ) ) ; <nl> + if ( thread . isCallingFromMinecraftThread ( ) ) <nl> + { <nl> + process ( msg ) ; <nl> + } <nl> + else <nl> + { <nl> + thread . addScheduledTask ( new Runnable ( ) <nl> + { <nl> + public void run ( ) <nl> + { <nl> + OpenGuiHandler . this . process ( msg ) ; <nl> + } <nl> + } ) ; <nl> + } <nl> + } <nl> + <nl> + private void process ( OpenGui msg ) <nl> { <nl> EntityPlayer player = FMLClientHandler . instance ( ) . getClient ( ) . thePlayer ; <nl> player . openGui ( msg . modId , msg . modGuiId , player . worldObj , msg . x , msg . y , msg . z ) ; <nl> diff - - git a / fml / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / fml / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> index bbb64e0 . . 11e2ac2 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> @ @ - 23 , 6 + 23 , 7 @ @ import net . minecraft . network . NetHandlerPlayServer ; <nl> import net . minecraft . network . NetworkManager ; <nl> import net . minecraft . server . MinecraftServer ; <nl> import net . minecraft . server . dedicated . DedicatedServer ; <nl> + import net . minecraft . util . IThreadListener ; <nl> import net . minecraft . world . storage . SaveFormatOld ; <nl> import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> @ @ - 258 , 4 + 259 , 11 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> public void allowLogins ( ) { <nl> DedicatedServer . allowPlayerLogins = true ; <nl> } <nl> + <nl> + @ Override <nl> + public IThreadListener getWorldThread ( INetHandler net ) <nl> + { <nl> + / / Always the server on the dedicated server , eventually add Per - World if Mojang adds world stuff . <nl> + return getServer ( ) ; <nl> + } <nl> }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / config / Configuration . java b / src / main / java / net / minecraftforge / common / config / Configuration . java 
 index dc68d66 . . 56ba102 100644 
 - - - a / src / main / java / net / minecraftforge / common / config / Configuration . java 
 + + + b / src / main / java / net / minecraftforge / common / config / Configuration . java 
 @ @ - 62 , 7 + 62 , 7 @ @ import net . minecraftforge . fml . client . config . IConfigElement ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . Loader ; 
 import net . minecraftforge . fml . relauncher . FMLInjectionData ; 
 - import org . apache . commons . compress . utils . IOUtils ; 
 + import org . apache . commons . io . IOUtils ; 
 
 / * * 
 * This class offers advanced configurations capabilities , allowing to provide 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 index 5791429 . . fda26de 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 @ @ - 108 , 7 + 108 , 7 @ @ import net . minecraftforge . fml . common . registry . PersistentRegistryManager ; 
 import net . minecraftforge . fml . common . toposort . ModSortingException ; 
 import net . minecraftforge . fml . relauncher . Side ; 
 
 - import org . apache . commons . compress . utils . IOUtils ; 
 + import org . apache . commons . io . IOUtils ; 
 import org . apache . logging . log4j . Level ; 
 import org . apache . logging . log4j . LogManager ; 
 import org . apache . logging . log4j . Logger ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / FMLModContainer . java b / src / main / java / net / minecraftforge / fml / common / FMLModContainer . java 
 index 92a809e . . a42f8b5 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / FMLModContainer . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / FMLModContainer . java 
 @ @ - 54 , 7 + 54 , 7 @ @ import net . minecraftforge . fml . common . versioning . VersionParser ; 
 import net . minecraftforge . fml . common . versioning . VersionRange ; 
 import net . minecraftforge . fml . relauncher . Side ; 
 
 - import org . apache . commons . compress . utils . IOUtils ; 
 + import org . apache . commons . io . IOUtils ; 
 import org . apache . commons . lang3 . StringUtils ; 
 import org . apache . logging . log4j . Level ; 
 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / Loader . java b / src / main / java / net / minecraftforge / fml / common / Loader . java 
 index 8b482a6 . . 32fbff0 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / Loader . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / Loader . java 
 @ @ - 60 , 7 + 60 , 7 @ @ import net . minecraftforge . fml . common . versioning . VersionParser ; 
 import net . minecraftforge . fml . relauncher . ModListHelper ; 
 import net . minecraftforge . fml . relauncher . Side ; 
 
 - import org . apache . commons . compress . utils . IOUtils ; 
 + import org . apache . commons . io . IOUtils ; 
 import org . apache . logging . log4j . Level ; 
 
 import com . google . common . base . CharMatcher ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java b / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java 
 index a461fa4 . . 4464f7d 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / asm / FMLSanityChecker . java 
 @ @ - 29 , 7 + 29 , 7 @ @ import java . util . Map ; 
 import java . util . jar . JarEntry ; 
 import java . util . jar . JarFile ; 
 
 - import org . apache . commons . compress . utils . IOUtils ; 
 + import org . apache . commons . io . IOUtils ; 
 import org . apache . logging . log4j . Level ; 
 
 import net . minecraft . launchwrapper . LaunchClassLoader ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java b / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java 
 index aa048b0 . . 3e7e691 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / asm / transformers / AccessTransformer . java 
 @ @ - 45 , 7 + 45 , 7 @ @ import java . util . zip . ZipOutputStream ; 
 import net . minecraft . launchwrapper . IClassTransformer ; 
 import net . minecraftforge . fml . relauncher . FMLRelaunchLog ; 
 
 - import org . apache . commons . compress . utils . IOUtils ; 
 + import org . apache . commons . io . IOUtils ; 
 import org . objectweb . asm . ClassReader ; 
 import org . objectweb . asm . ClassWriter ; 
 import org . objectweb . asm . tree . AbstractInsnNode ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / asm / transformers / MarkerTransformer . java b / src / main / java / net / minecraftforge / fml / common / asm / transformers / MarkerTransformer . java 
 index 7be0c74 . . 91a4951 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / asm / transformers / MarkerTransformer . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / asm / transformers / MarkerTransformer . java 
 @ @ - 35 , 7 + 35 , 7 @ @ import java . util . zip . ZipOutputStream ; 
 
 import net . minecraft . launchwrapper . IClassTransformer ; 
 
 - import org . apache . commons . compress . utils . IOUtils ; 
 + import org . apache . commons . io . IOUtils ; 
 import org . objectweb . asm . ClassReader ; 
 import org . objectweb . asm . ClassWriter ; 
 import org . objectweb . asm . tree . ClassNode ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java b / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java 
 index 3848717 . . 77fde78 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / discovery / DirectoryDiscoverer . java 
 @ @ - 33 , 7 + 33 , 7 @ @ import net . minecraftforge . fml . common . ModContainer ; 
 import net . minecraftforge . fml . common . ModContainerFactory ; 
 import net . minecraftforge . fml . common . discovery . asm . ASMModParser ; 
 
 - import org . apache . commons . compress . utils . IOUtils ; 
 + import org . apache . commons . io . IOUtils ; 
 import org . apache . logging . log4j . Level ; 
 
 import com . google . common . base . Throwables ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java b / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java 
 index 816cc1f . . 396198e 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / discovery / JarDiscoverer . java 
 @ @ - 31 , 7 + 31 , 7 @ @ import net . minecraftforge . fml . common . ModContainer ; 
 import net . minecraftforge . fml . common . ModContainerFactory ; 
 import net . minecraftforge . fml . common . discovery . asm . ASMModParser ; 
 
 - import org . apache . commons . compress . utils . IOUtils ; 
 + import org . apache . commons . io . IOUtils ; 
 import org . apache . logging . log4j . Level ; 
 
 import java . util . regex . Matcher ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / patcher / GenDiffSet . java b / src / main / java / net / minecraftforge / fml / common / patcher / GenDiffSet . java 
 index 2a9b107 . . b104a5a 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / patcher / GenDiffSet . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / patcher / GenDiffSet . java 
 @ @ - 31 , 7 + 31 , 7 @ @ import java . util . jar . JarFile ; 
 import net . minecraftforge . fml . common . asm . transformers . deobf . FMLDeobfuscatingRemapper ; 
 import net . minecraftforge . fml . repackage . com . nothome . delta . Delta ; 
 
 - import org . apache . commons . compress . utils . IOUtils ; 
 + import org . apache . commons . io . IOUtils ; 
 import org . apache . logging . log4j . Level ; 
 import org . apache . logging . log4j . LogManager ; 
 
 diff - - git a / src / main / java / net / minecraftforge / fml / relauncher / CoreModManager . java b / src / main / java / net / minecraftforge / fml / relauncher / CoreModManager . java 
 index cdfb7e0 . . 0914cd1 100644 
 - - - a / src / main / java / net / minecraftforge / fml / relauncher / CoreModManager . java 
 + + + b / src / main / java / net / minecraftforge / fml / relauncher / CoreModManager . java 
 @ @ - 56 , 7 + 56 , 7 @ @ import net . minecraftforge . fml . relauncher . IFMLLoadingPlugin . Name ; 
 import net . minecraftforge . fml . relauncher . IFMLLoadingPlugin . SortingIndex ; 
 import net . minecraftforge . fml . relauncher . IFMLLoadingPlugin . TransformerExclusions ; 
 
 - import org . apache . commons . compress . utils . IOUtils ; 
 + import org . apache . commons . io . IOUtils ; 
 import org . apache . logging . log4j . Level ; 
 
 import com . google . common . base . Strings ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / repackage / com / nothome / delta / GDiffPatcher . java b / src / main / java / net / minecraftforge / fml / repackage / com / nothome / delta / GDiffPatcher . java 
 index 6b40f80 . . a27316f 100644 
 - - - a / src / main / java / net / minecraftforge / fml / repackage / com / nothome / delta / GDiffPatcher . java 
 + + + b / src / main / java / net / minecraftforge / fml / repackage / com / nothome / delta / GDiffPatcher . java 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 
 package net . minecraftforge . fml . repackage . com . nothome . delta ; 
 
 - import org . apache . commons . compress . utils . IOUtils ; 
 + import org . apache . commons . io . IOUtils ; 
 
 import static net . minecraftforge . fml . repackage . com . nothome . delta . GDiffWriter . COPY _ INT _ INT ; 
 import static net . minecraftforge . fml . repackage . com . nothome . delta . GDiffWriter . COPY _ INT _ UBYTE ;

NEAREST DIFF:
diff - - git a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 index e2c272a . . da90e83 100644 
 - - - a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 @ @ - 59 , 6 + 59 , 15 @ @ 
 } 
 
 public boolean func _ 152349 _ b ( ) 
 + @ @ - 1000 , 7 + 1004 , 7 @ @ 
 + { 
 + while ( ! this . field _ 152351 _ aB . isEmpty ( ) ) 
 + { 
 + - ( ( FutureTask ) this . field _ 152351 _ aB . poll ( ) ) . run ( ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . callFuture ( ( ( FutureTask ) this . field _ 152351 _ aB . poll ( ) ) ) ; 
 + } 
 + } 
 + 
 @ @ - 1035 , 9 + 1039 , 11 @ @ 
 
 if ( ! this . field _ 71454 _ w ) 
 diff - - git a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 index 450fde2 . . 55f72e5 100644 
 - - - a / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 @ @ - 71 , 6 + 71 , 15 @ @ 
 } 
 
 public void func _ 71190 _ q ( ) 
 + @ @ - 657 , 7 + 671 , 7 @ @ 
 + { 
 + try 
 + { 
 + - ( ( FutureTask ) this . field _ 175589 _ i . poll ( ) ) . run ( ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . callFuture ( ( ( FutureTask ) this . field _ 175589 _ i . poll ( ) ) ) ; 
 + } 
 + catch ( Throwable throwable2 ) 
 + { 
 @ @ - 686 , 6 + 700 , 7 @ @ 
 } 
 
 diff - - git a / fml / patches / minecraft / net / minecraft / server / integrated / IntegratedServer . java . patch b / fml / patches / minecraft / net / minecraft / server / integrated / IntegratedServer . java . patch 
 index d08b9da . . 4f0ce86 100644 
 - - - a / fml / patches / minecraft / net / minecraft / server / integrated / IntegratedServer . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / server / integrated / IntegratedServer . java . patch 
 @ @ - 12 , 3 + 12 , 12 @ @ 
 } 
 
 public void func _ 71217 _ p ( ) 
 + @ @ - 171 , 7 + 172 , 7 @ @ 
 + { 
 + try 
 + { 
 + - ( ( FutureTask ) this . field _ 175589 _ i . poll ( ) ) . run ( ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . callFuture ( ( ( FutureTask ) this . field _ 175589 _ i . poll ( ) ) ) ; 
 + } 
 + catch ( Throwable throwable ) 
 + { 
 diff - - git a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 index a5f39e9 . . b680df2 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 @ @ - 53 , 7 + 53 , 15 @ @ import net . minecraft . network . INetHandler ; 
 import net . minecraft . network . NetHandlerPlayServer ; 
 import net . minecraft . network . NetworkManager ; 
 import net . minecraft . network . ServerStatusResponse ; 
 + import net . minecraft . network . handshake . INetHandlerHandshakeServer ; 
 + import net . minecraft . network . login . INetHandlerLoginClient ; 
 + import net . minecraft . network . login . INetHandlerLoginServer ; 
 + import net . minecraft . network . play . INetHandlerPlayClient ; 
 + import net . minecraft . network . play . INetHandlerPlayServer ; 
 + import net . minecraft . network . status . INetHandlerStatusClient ; 
 + import net . minecraft . network . status . INetHandlerStatusServer ; 
 import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . util . IThreadListener ; 
 import net . minecraft . util . ResourceLocation ; 
 import net . minecraft . world . WorldSettings ; 
 import net . minecraft . world . storage . SaveFormatOld ; 
 @ @ - 842 , 4 + 850 , 17 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 public void allowLogins ( ) { 
 / / NOOP for integrated server 
 } 
 + 
 + @ Override 
 + public IThreadListener getWorldThread ( INetHandler net ) 
 + { 
 + if ( net instanceof INetHandlerPlayClient | | 
 + net instanceof INetHandlerLoginClient | | 
 + net instanceof INetHandlerStatusClient ) return getClient ( ) ; 
 + if ( net instanceof INetHandlerHandshakeServer | | 
 + net instanceof INetHandlerLoginServer | | 
 + net instanceof INetHandlerPlayServer | | 
 + net instanceof INetHandlerStatusServer ) return getServer ( ) ; 
 + throw new RuntimeException ( " Unknown INetHandler : " + net ) ; 
 + } 
 } 
 diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 index 6689a23 . . 521f2f1 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 @ @ - 18 , 6 + 18 , 8 @ @ import java . util . List ; 
 import java . util . Map ; 
 import java . util . Set ; 
 import java . util . concurrent . CountDownLatch ; 
 + import java . util . concurrent . ExecutionException ; 
 + import java . util . concurrent . FutureTask ; 
 import java . util . concurrent . TimeUnit ; 
 
 import net . minecraft . crash . CrashReport ; 
 @ @ - 35 , 6 + 37 , 7 @ @ import net . minecraft . network . handshake . client . C00Handshake ; 
 import net . minecraft . network . login . server . S00PacketDisconnect ; 
 import net . minecraft . server . MinecraftServer ; 
 import net . minecraft . util . ChatComponentText ; 
 + import net . minecraft . util . IThreadListener ; 
 import net . minecraft . world . World ; 
 import net . minecraft . world . storage . SaveHandler ; 
 import net . minecraft . world . storage . WorldInfo ; 
 @ @ - 660 , 4 + 663 , 26 @ @ public class FMLCommonHandler 
 Runtime . getRuntime ( ) . exit ( exitCode ) ; 
 } 
 } 
 + 
 + public IThreadListener getWorldThread ( INetHandler net ) 
 + { 
 + return sidedDelegate . getWorldThread ( net ) ; 
 + } 
 + 
 + public static void callFuture ( FutureTask task ) 
 + { 
 + try 
 + { 
 + task . run ( ) ; 
 + task . get ( ) ; / / Forces the exception to be thrown if any 
 + } 
 + catch ( InterruptedException e ) 
 + { 
 + FMLLog . log ( Level . FATAL , e , " Exception caught executing FutureTask : " + e . toString ( ) ) ; 
 + } 
 + catch ( ExecutionException e ) 
 + { 
 + FMLLog . log ( Level . FATAL , e , " Exception caught executing FutureTask : " + e . toString ( ) ) ; 
 + } 
 + } 
 } 
 diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java b / fml / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 index 6b2614a . . 0c94391 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / IFMLSidedHandler . java 
 @ @ - 19 , 6 + 19 , 7 @ @ import java . util . Set ; 
 import net . minecraft . network . INetHandler ; 
 import net . minecraft . network . NetworkManager ; 
 import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . util . IThreadListener ; 
 import net . minecraftforge . fml . common . eventhandler . EventBus ; 
 import net . minecraftforge . fml . relauncher . Side ; 
 
 @ @ - 59 , 4 + 60 , 6 @ @ public interface IFMLSidedHandler 
 boolean shouldAllowPlayerLogins ( ) ; 
 
 void allowLogins ( ) ; 
 + 
 + IThreadListener getWorldThread ( INetHandler net ) ; 
 } 
 diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java b / fml / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 index ad9f348 . . bf5eb7b 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 @ @ - 11 , 11 + 11 , 14 @ @ import net . minecraft . client . entity . EntityPlayerSP ; 
 import net . minecraft . client . multiplayer . WorldClient ; 
 import net . minecraft . entity . Entity ; 
 import net . minecraft . entity . EntityLiving ; 
 + import net . minecraft . util . IThreadListener ; 
 import net . minecraft . world . World ; 
 import net . minecraftforge . fml . client . FMLClientHandler ; 
 + import net . minecraftforge . fml . common . FMLCommonHandler ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . Loader ; 
 import net . minecraftforge . fml . common . ModContainer ; 
 + import net . minecraftforge . fml . common . network . NetworkRegistry ; 
 import net . minecraftforge . fml . common . network . internal . FMLMessage . EntityAdjustMessage ; 
 import net . minecraftforge . fml . common . network . internal . FMLMessage . EntityMessage ; 
 import net . minecraftforge . fml . common . registry . EntityRegistry ; 
 @ @ - 27 , 7 + 30 , 26 @ @ import com . google . common . base . Throwables ; 
 
 public class EntitySpawnHandler extends SimpleChannelInboundHandler < FMLMessage . EntityMessage > { 
 @ Override 
 - protected void channelRead0 ( ChannelHandlerContext ctx , EntityMessage msg ) throws Exception 
 + protected void channelRead0 ( ChannelHandlerContext ctx , final EntityMessage msg ) throws Exception 
 + { 
 + IThreadListener thread = FMLCommonHandler . instance ( ) . getWorldThread ( ctx . channel ( ) . attr ( NetworkRegistry . NET _ HANDLER ) . get ( ) ) ; 
 + if ( thread . isCallingFromMinecraftThread ( ) ) 
 + { 
 + process ( msg ) ; 
 + } 
 + else 
 + { 
 + thread . addScheduledTask ( new Runnable ( ) 
 + { 
 + public void run ( ) 
 + { 
 + EntitySpawnHandler . this . process ( msg ) ; 
 + } 
 + } ) ; 
 + } 
 + } 
 + 
 + private void process ( EntityMessage msg ) 
 { 
 if ( msg . getClass ( ) . equals ( FMLMessage . EntitySpawnMessage . class ) ) 
 { 
 @ @ - 52 , 7 + 74 , 6 @ @ public class EntitySpawnHandler extends SimpleChannelInboundHandler < FMLMessage . E 
 { 
 FMLLog . fine ( " Attempted to adjust the position of entity % d which is not present on the client " , msg . entityId ) ; 
 } 
 - 
 } 
 
 private void spawnEntity ( FMLMessage . EntitySpawnMessage spawnMsg ) 
 diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / network / internal / OpenGuiHandler . java b / fml / src / main / java / net / minecraftforge / fml / common / network / internal / OpenGuiHandler . java 
 index 6a5f82e . . b414fa6 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / network / internal / OpenGuiHandler . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / network / internal / OpenGuiHandler . java 
 @ @ - 3 , 15 + 3 , 37 @ @ package net . minecraftforge . fml . common . network . internal ; 
 import org . apache . logging . log4j . Level ; 
 
 import net . minecraft . entity . player . EntityPlayer ; 
 + import net . minecraft . util . IThreadListener ; 
 import net . minecraftforge . fml . client . FMLClientHandler ; 
 + import net . minecraftforge . fml . common . FMLCommonHandler ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 + import net . minecraftforge . fml . common . network . NetworkRegistry ; 
 import net . minecraftforge . fml . common . network . internal . FMLMessage . OpenGui ; 
 import io . netty . channel . ChannelHandlerContext ; 
 import io . netty . channel . SimpleChannelInboundHandler ; 
 
 public class OpenGuiHandler extends SimpleChannelInboundHandler < FMLMessage . OpenGui > { 
 @ Override 
 - protected void channelRead0 ( ChannelHandlerContext ctx , OpenGui msg ) throws Exception 
 + protected void channelRead0 ( ChannelHandlerContext ctx , final OpenGui msg ) throws Exception 
 + { 
 + IThreadListener thread = FMLCommonHandler . instance ( ) . getWorldThread ( ctx . channel ( ) . attr ( NetworkRegistry . NET _ HANDLER ) . get ( ) ) ; 
 + if ( thread . isCallingFromMinecraftThread ( ) ) 
 + { 
 + process ( msg ) ; 
 + } 
 + else 
 + { 
 + thread . addScheduledTask ( new Runnable ( ) 
 + { 
 + public void run ( ) 
 + { 
 + OpenGuiHandler . this . process ( msg ) ; 
 + } 
 + } ) ; 
 + } 
 + } 
 + 
 + private void process ( OpenGui msg ) 
 { 
 EntityPlayer player = FMLClientHandler . instance ( ) . getClient ( ) . thePlayer ; 
 player . openGui ( msg . modId , msg . modGuiId , player . worldObj , msg . x , msg . y , msg . z ) ; 
 diff - - git a / fml / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / fml / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 index bbb64e0 . . 11e2ac2 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 @ @ - 23 , 6 + 23 , 7 @ @ import net . minecraft . network . NetHandlerPlayServer ; 
 import net . minecraft . network . NetworkManager ; 
 import net . minecraft . server . MinecraftServer ; 
 import net . minecraft . server . dedicated . DedicatedServer ; 
 + import net . minecraft . util . IThreadListener ; 
 import net . minecraft . world . storage . SaveFormatOld ; 
 import net . minecraftforge . fml . common . FMLCommonHandler ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 @ @ - 258 , 4 + 259 , 11 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 public void allowLogins ( ) { 
 DedicatedServer . allowPlayerLogins = true ; 
 } 
 + 
 + @ Override 
 + public IThreadListener getWorldThread ( INetHandler net ) 
 + { 
 + / / Always the server on the dedicated server , eventually add Per - World if Mojang adds world stuff . 
 + return getServer ( ) ; 
 + } 
 }
