BLEU SCORE: 0.058544976940240155

TEST MSG: Fix missing IMC message query .
GENERATED MSG: Fix up persistent substitution . Should close # 2259

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / event / FMLInterModComms . java b / src / main / java / net / minecraftforge / fml / common / event / FMLInterModComms . java <nl> index caf03a0 . . 4e9947f 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / event / FMLInterModComms . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / event / FMLInterModComms . java <nl> @ @ - 222 , 6 + 222 , 15 @ @ public class FMLInterModComms { <nl> } <nl> <nl> / * * <nl> + * Is this an { @ link ResourceLocation } type message <nl> + * @ return if this is an NBT type message <nl> + * / <nl> + public boolean isResourceLocationMessage ( ) <nl> + { <nl> + return ResourceLocation . class . isAssignableFrom ( getMessageType ( ) ) ; <nl> + } <nl> + <nl> + / * * <nl> * Is this a { @ link Function } type message <nl> * @ return if this is a function type message <nl> * /
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> index 073f07a . . 0789301 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> @ @ - 160 , 6 + 160 , 8 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul <nl> this . minId = otherRegistry . minId ; <nl> this . aliases . clear ( ) ; <nl> this . aliases . putAll ( otherRegistry . aliases ) ; <nl> + this . persistentSubstitutions . clear ( ) ; <nl> + this . persistentSubstitutions . putAll ( otherRegistry . getPersistentSubstitutions ( ) ) ; <nl> this . activeSubstitutions . clear ( ) ; <nl> <nl> underlyingIntegerMap = new ObjectIntIdentityMap < I > ( ) ; <nl> @ @ - 599 , 7 + 601 , 7 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul <nl> getPersistentSubstitutions ( ) . put ( nameToReplace , replacement ) ; <nl> } <nl> <nl> - private BiMap < ResourceLocation , I > getPersistentSubstitutions ( ) <nl> + BiMap < ResourceLocation , I > getPersistentSubstitutions ( ) <nl> { <nl> return persistentSubstitutions ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / GameData . java b / src / main / java / net / minecraftforge / fml / common / registry / GameData . java <nl> index 8833d69 . . e094bd6 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / GameData . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / GameData . java <nl> @ @ - 185 , 7 + 185 , 7 @ @ public class GameData <nl> <nl> void registerSubstitutionAlias ( String name , GameRegistry . Type type , Object toReplace ) throws ExistingSubstitutionException <nl> { <nl> - ResourceLocation nameToSubstitute = new ResourceLocation ( Loader . instance ( ) . activeModContainer ( ) . getModId ( ) , name ) ; <nl> + ResourceLocation nameToSubstitute = new ResourceLocation ( name ) ; <nl> if ( type = = GameRegistry . Type . BLOCK ) <nl> { <nl> iBlockRegistry . addSubstitutionAlias ( Loader . instance ( ) . activeModContainer ( ) . getModId ( ) , nameToSubstitute , ( Block ) toReplace ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java <nl> index 955c6b4 . . 2940832 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java <nl> @ @ - 269 , 6 + 269 , 8 @ @ public class PersistentRegistryManager <nl> StartupQuery . abort ( ) ; <nl> } <nl> FMLControlledNamespacedRegistry < T > newRegistry = PersistentRegistry . STAGING . getOrShallowCopyRegistry ( registryName , regType , currentRegistry ) ; <nl> + / / Copy the persistent substitution set from the currently active one into the new registry <nl> + newRegistry . getPersistentSubstitutions ( ) . putAll ( currentRegistry . getPersistentSubstitutions ( ) ) ; <nl> GameDataSnapshot . Entry snapshotEntry = snapEntry . getValue ( ) ; <nl> Set < ResourceLocation > substitutions = snapshotEntry . substitutions ; <nl> if ( injectFrozenData )

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / event / FMLInterModComms . java b / src / main / java / net / minecraftforge / fml / common / event / FMLInterModComms . java 
 index caf03a0 . . 4e9947f 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / event / FMLInterModComms . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / event / FMLInterModComms . java 
 @ @ - 222 , 6 + 222 , 15 @ @ public class FMLInterModComms { 
 } 
 
 / * * 
 + * Is this an { @ link ResourceLocation } type message 
 + * @ return if this is an NBT type message 
 + * / 
 + public boolean isResourceLocationMessage ( ) 
 + { 
 + return ResourceLocation . class . isAssignableFrom ( getMessageType ( ) ) ; 
 + } 
 + 
 + / * * 
 * Is this a { @ link Function } type message 
 * @ return if this is a function type message 
 * /

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 index 073f07a . . 0789301 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 @ @ - 160 , 6 + 160 , 8 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul 
 this . minId = otherRegistry . minId ; 
 this . aliases . clear ( ) ; 
 this . aliases . putAll ( otherRegistry . aliases ) ; 
 + this . persistentSubstitutions . clear ( ) ; 
 + this . persistentSubstitutions . putAll ( otherRegistry . getPersistentSubstitutions ( ) ) ; 
 this . activeSubstitutions . clear ( ) ; 
 
 underlyingIntegerMap = new ObjectIntIdentityMap < I > ( ) ; 
 @ @ - 599 , 7 + 601 , 7 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul 
 getPersistentSubstitutions ( ) . put ( nameToReplace , replacement ) ; 
 } 
 
 - private BiMap < ResourceLocation , I > getPersistentSubstitutions ( ) 
 + BiMap < ResourceLocation , I > getPersistentSubstitutions ( ) 
 { 
 return persistentSubstitutions ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / GameData . java b / src / main / java / net / minecraftforge / fml / common / registry / GameData . java 
 index 8833d69 . . e094bd6 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / GameData . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / GameData . java 
 @ @ - 185 , 7 + 185 , 7 @ @ public class GameData 
 
 void registerSubstitutionAlias ( String name , GameRegistry . Type type , Object toReplace ) throws ExistingSubstitutionException 
 { 
 - ResourceLocation nameToSubstitute = new ResourceLocation ( Loader . instance ( ) . activeModContainer ( ) . getModId ( ) , name ) ; 
 + ResourceLocation nameToSubstitute = new ResourceLocation ( name ) ; 
 if ( type = = GameRegistry . Type . BLOCK ) 
 { 
 iBlockRegistry . addSubstitutionAlias ( Loader . instance ( ) . activeModContainer ( ) . getModId ( ) , nameToSubstitute , ( Block ) toReplace ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java 
 index 955c6b4 . . 2940832 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java 
 @ @ - 269 , 6 + 269 , 8 @ @ public class PersistentRegistryManager 
 StartupQuery . abort ( ) ; 
 } 
 FMLControlledNamespacedRegistry < T > newRegistry = PersistentRegistry . STAGING . getOrShallowCopyRegistry ( registryName , regType , currentRegistry ) ; 
 + / / Copy the persistent substitution set from the currently active one into the new registry 
 + newRegistry . getPersistentSubstitutions ( ) . putAll ( currentRegistry . getPersistentSubstitutions ( ) ) ; 
 GameDataSnapshot . Entry snapshotEntry = snapEntry . getValue ( ) ; 
 Set < ResourceLocation > substitutions = snapshotEntry . substitutions ; 
 if ( injectFrozenData )
