BLEU SCORE: 1.0

TEST MSG: B3D loader : removed 2 redundand null checks , changed constructor args to final to fix ( java6 ? ) inner arg error .
GENERATED MSG: B3D loader : removed 2 redundand null checks , changed constructor args to final to fix ( java6 ? ) inner arg error .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> index 5cfad73 . . 91130d2 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> @ @ - 313 , 7 + 313 , 7 @ @ public class B3DLoader implements ICustomModelLoader <nl> TRSRTransformation ret = TRSRTransformation . identity ( ) ; <nl> Key key = null ; <nl> if ( animation ! = null ) key = animation . getKeys ( ) . get ( frame , node ) ; <nl> - else if ( key = = null & & node . getAnimation ( ) ! = null & & node . getAnimation ( ) ! = animation ) key = node . getAnimation ( ) . getKeys ( ) . get ( frame , node ) ; <nl> + else if ( node . getAnimation ( ) ! = null & & node . getAnimation ( ) ! = animation ) key = node . getAnimation ( ) . getKeys ( ) . get ( frame , node ) ; <nl> if ( key ! = null ) <nl> { <nl> Node < ? > parent = node . getParent ( ) ; <nl> @ @ - 710 , 7 + 710 , 7 @ @ public class B3DLoader implements ICustomModelLoader <nl> <nl> private ImmutableList < BakedQuad > quads ; <nl> <nl> - public BakedWrapper ( Node < ? > node , IModelState state , VertexFormat format , ImmutableSet < String > meshes , ImmutableMap < String , TextureAtlasSprite > textures ) <nl> + public BakedWrapper ( final Node < ? > node , final IModelState state , final VertexFormat format , final ImmutableSet < String > meshes , final ImmutableMap < String , TextureAtlasSprite > textures ) <nl> { <nl> this ( node , state , format , meshes , textures , CacheBuilder . newBuilder ( ) <nl> . maximumSize ( 128 ) <nl> @ @ - 720 , 16 + 720 , 12 @ @ public class B3DLoader implements ICustomModelLoader <nl> public BakedWrapper load ( Integer frame ) throws Exception <nl> { <nl> IModelState parent = state ; <nl> - Animation newAnimation = null ; <nl> + Animation newAnimation = node . getAnimation ( ) ; <nl> if ( parent instanceof B3DState ) <nl> { <nl> B3DState ps = ( B3DState ) parent ; <nl> parent = ps . getParent ( ) ; <nl> } <nl> - if ( newAnimation = = null ) <nl> - { <nl> - newAnimation = node . getAnimation ( ) ; <nl> - } <nl> return new BakedWrapper ( node , new B3DState ( newAnimation , frame , frame , 0 , parent ) , format , meshes , textures ) ; <nl> } <nl> } ) ) ;
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> index 5cfad73 . . 91130d2 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> @ @ - 313 , 7 + 313 , 7 @ @ public class B3DLoader implements ICustomModelLoader <nl> TRSRTransformation ret = TRSRTransformation . identity ( ) ; <nl> Key key = null ; <nl> if ( animation ! = null ) key = animation . getKeys ( ) . get ( frame , node ) ; <nl> - else if ( key = = null & & node . getAnimation ( ) ! = null & & node . getAnimation ( ) ! = animation ) key = node . getAnimation ( ) . getKeys ( ) . get ( frame , node ) ; <nl> + else if ( node . getAnimation ( ) ! = null & & node . getAnimation ( ) ! = animation ) key = node . getAnimation ( ) . getKeys ( ) . get ( frame , node ) ; <nl> if ( key ! = null ) <nl> { <nl> Node < ? > parent = node . getParent ( ) ; <nl> @ @ - 710 , 7 + 710 , 7 @ @ public class B3DLoader implements ICustomModelLoader <nl> <nl> private ImmutableList < BakedQuad > quads ; <nl> <nl> - public BakedWrapper ( Node < ? > node , IModelState state , VertexFormat format , ImmutableSet < String > meshes , ImmutableMap < String , TextureAtlasSprite > textures ) <nl> + public BakedWrapper ( final Node < ? > node , final IModelState state , final VertexFormat format , final ImmutableSet < String > meshes , final ImmutableMap < String , TextureAtlasSprite > textures ) <nl> { <nl> this ( node , state , format , meshes , textures , CacheBuilder . newBuilder ( ) <nl> . maximumSize ( 128 ) <nl> @ @ - 720 , 16 + 720 , 12 @ @ public class B3DLoader implements ICustomModelLoader <nl> public BakedWrapper load ( Integer frame ) throws Exception <nl> { <nl> IModelState parent = state ; <nl> - Animation newAnimation = null ; <nl> + Animation newAnimation = node . getAnimation ( ) ; <nl> if ( parent instanceof B3DState ) <nl> { <nl> B3DState ps = ( B3DState ) parent ; <nl> parent = ps . getParent ( ) ; <nl> } <nl> - if ( newAnimation = = null ) <nl> - { <nl> - newAnimation = node . getAnimation ( ) ; <nl> - } <nl> return new BakedWrapper ( node , new B3DState ( newAnimation , frame , frame , 0 , parent ) , format , meshes , textures ) ; <nl> } <nl> } ) ) ;

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 index 5cfad73 . . 91130d2 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 + + + b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 @ @ - 313 , 7 + 313 , 7 @ @ public class B3DLoader implements ICustomModelLoader 
 TRSRTransformation ret = TRSRTransformation . identity ( ) ; 
 Key key = null ; 
 if ( animation ! = null ) key = animation . getKeys ( ) . get ( frame , node ) ; 
 - else if ( key = = null & & node . getAnimation ( ) ! = null & & node . getAnimation ( ) ! = animation ) key = node . getAnimation ( ) . getKeys ( ) . get ( frame , node ) ; 
 + else if ( node . getAnimation ( ) ! = null & & node . getAnimation ( ) ! = animation ) key = node . getAnimation ( ) . getKeys ( ) . get ( frame , node ) ; 
 if ( key ! = null ) 
 { 
 Node < ? > parent = node . getParent ( ) ; 
 @ @ - 710 , 7 + 710 , 7 @ @ public class B3DLoader implements ICustomModelLoader 
 
 private ImmutableList < BakedQuad > quads ; 
 
 - public BakedWrapper ( Node < ? > node , IModelState state , VertexFormat format , ImmutableSet < String > meshes , ImmutableMap < String , TextureAtlasSprite > textures ) 
 + public BakedWrapper ( final Node < ? > node , final IModelState state , final VertexFormat format , final ImmutableSet < String > meshes , final ImmutableMap < String , TextureAtlasSprite > textures ) 
 { 
 this ( node , state , format , meshes , textures , CacheBuilder . newBuilder ( ) 
 . maximumSize ( 128 ) 
 @ @ - 720 , 16 + 720 , 12 @ @ public class B3DLoader implements ICustomModelLoader 
 public BakedWrapper load ( Integer frame ) throws Exception 
 { 
 IModelState parent = state ; 
 - Animation newAnimation = null ; 
 + Animation newAnimation = node . getAnimation ( ) ; 
 if ( parent instanceof B3DState ) 
 { 
 B3DState ps = ( B3DState ) parent ; 
 parent = ps . getParent ( ) ; 
 } 
 - if ( newAnimation = = null ) 
 - { 
 - newAnimation = node . getAnimation ( ) ; 
 - } 
 return new BakedWrapper ( node , new B3DState ( newAnimation , frame , frame , 0 , parent ) , format , meshes , textures ) ; 
 } 
 } ) ) ;

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 index 5cfad73 . . 91130d2 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 + + + b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 @ @ - 313 , 7 + 313 , 7 @ @ public class B3DLoader implements ICustomModelLoader 
 TRSRTransformation ret = TRSRTransformation . identity ( ) ; 
 Key key = null ; 
 if ( animation ! = null ) key = animation . getKeys ( ) . get ( frame , node ) ; 
 - else if ( key = = null & & node . getAnimation ( ) ! = null & & node . getAnimation ( ) ! = animation ) key = node . getAnimation ( ) . getKeys ( ) . get ( frame , node ) ; 
 + else if ( node . getAnimation ( ) ! = null & & node . getAnimation ( ) ! = animation ) key = node . getAnimation ( ) . getKeys ( ) . get ( frame , node ) ; 
 if ( key ! = null ) 
 { 
 Node < ? > parent = node . getParent ( ) ; 
 @ @ - 710 , 7 + 710 , 7 @ @ public class B3DLoader implements ICustomModelLoader 
 
 private ImmutableList < BakedQuad > quads ; 
 
 - public BakedWrapper ( Node < ? > node , IModelState state , VertexFormat format , ImmutableSet < String > meshes , ImmutableMap < String , TextureAtlasSprite > textures ) 
 + public BakedWrapper ( final Node < ? > node , final IModelState state , final VertexFormat format , final ImmutableSet < String > meshes , final ImmutableMap < String , TextureAtlasSprite > textures ) 
 { 
 this ( node , state , format , meshes , textures , CacheBuilder . newBuilder ( ) 
 . maximumSize ( 128 ) 
 @ @ - 720 , 16 + 720 , 12 @ @ public class B3DLoader implements ICustomModelLoader 
 public BakedWrapper load ( Integer frame ) throws Exception 
 { 
 IModelState parent = state ; 
 - Animation newAnimation = null ; 
 + Animation newAnimation = node . getAnimation ( ) ; 
 if ( parent instanceof B3DState ) 
 { 
 B3DState ps = ( B3DState ) parent ; 
 parent = ps . getParent ( ) ; 
 } 
 - if ( newAnimation = = null ) 
 - { 
 - newAnimation = node . getAnimation ( ) ; 
 - } 
 return new BakedWrapper ( node , new B3DState ( newAnimation , frame , frame , 0 , parent ) , format , meshes , textures ) ; 
 } 
 } ) ) ;
