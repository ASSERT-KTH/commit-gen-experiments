BLEU SCORE: 0.11598118436136108

TEST MSG: added MDK package
GENERATED MSG: Step 3 : The Rebirth

TEST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index f198c38 . . a83bbfe 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 157 , 6 + 157 , 30 @ @ task signUniversal ( type : SignJar , dependsOn : ' outputJar ' ) { <nl> uploadArchives . dependsOn signUniversal <nl> build . dependsOn signUniversal <nl> <nl> + / / MDK package <nl> + <nl> + import org . apache . tools . ant . filters . ReplaceTokens <nl> + task makeMdk ( type : Zip ) { <nl> + baseName = project . name <nl> + classifier = " mdk " <nl> + version = project . version <nl> + destinationDir = file ( ' build / distributions ' ) <nl> + <nl> + from ' mdk ' <nl> + filter ( ReplaceTokens , tokens : [ <nl> + VERSION : project . version , <nl> + MAPPINGS : minecraft . mappings . replace ( ' nodoc _ ' , ' ' ) <nl> + ] ) <nl> + rename ' gitignore \ \ . txt ' , ' . gitignore ' <nl> + from ' MinecraftForge - Credits . txt ' <nl> + from ' MinecraftForge - License . txt ' <nl> + from ' Paulscode IBXM Library License . txt ' <nl> + from ' Paulscode SoundSystem CodecIBXM License . txt ' <nl> + from ' LICENSE - fml . txt ' <nl> + from changelog . output <nl> + } <nl> + tasks . build . dependsOn madeMdk <nl> + <nl> / / launch4j <nl> <nl> launch4j { <nl> @ @ - 176 , 6 + 200 , 7 @ @ tasks . build . dependsOn ' launch4j ' <nl> artifacts { <nl> archives changelog . output <nl> archives file ( " build / distributions / $ { project . name } - $ { project . version } - installer - win . exe " ) <nl> + archives makdeMdk . output <nl> } <nl> <nl> uploadArchives { <nl> diff - - git a / mdk / build . gradle b / mdk / build . gradle <nl> index 1b50aeb . . e29d90f 100644 <nl> - - - a / mdk / build . gradle <nl> + + + b / mdk / build . gradle <nl> @ @ - 1 , 6 + 1 , 8 @ @ <nl> + / * <nl> + / / For those who want the bleeding edge <nl> buildscript { <nl> repositories { <nl> - mavenCentral ( ) <nl> + jcenter ( ) <nl> maven { <nl> name = " forge " <nl> url = " http : / / files . minecraftforge . net / maven " <nl> @ @ - 10 , 15 + 12 , 20 @ @ buildscript { <nl> classpath ' net . minecraftforge . gradle : ForgeGradle : 2 . 0 - SNAPSHOT ' <nl> } <nl> } <nl> + apply plugin : ' net . minecraftforge . gradle . forge ' <nl> + * / <nl> <nl> - apply plugin : ' $ { name } ' <nl> + / / for people who want stable <nl> + plugins { <nl> + id " net . minecraftforge . gradle . forge " version " 2 . 0 . 0 " <nl> + } <nl> <nl> version = " 1 . 0 " <nl> group = " com . yourname . modid " / / http : / / maven . apache . org / guides / mini / guide - naming - conventions . html <nl> archivesBaseName = " modid " <nl> <nl> minecraft { <nl> - version = " $ { version } " <nl> + version = " @ VERSION @ " <nl> runDir = " eclipse " <nl> <nl> / / the mappings can be changed at any time , and must be in the following format . <nl> @ @ - 26 , 7 + 33 , 7 @ @ minecraft { <nl> / / stable _ # stables are built at the discretion of the MCP team . <nl> / / Use non - default mappings at your own risk . they may not allways work . <nl> / / simply re - run your setup task after changing the mappings to update your workspace . <nl> - mappings = " $ { mappings } " <nl> + mappings = " @ MAPPINGS @ " <nl> } <nl> <nl> dependencies { <nl> @ @ - 39 , 7 + 46 , 7 @ @ dependencies { <nl> / / compile ' com . mod - buildcraft : buildcraft : 6 . 0 . 8 : dev ' / / adds buildcraft to the dev env <nl> / / compile ' com . googlecode . efficient - java - matrix - library : ejml : 0 . 24 ' / / adds ejml to the dev env <nl> <nl> - / / the ' provided ' configuration is for optioanl dependencies <nl> + / / the ' provided ' configuration is for optional dependencies that exist at compile - time but might not at runtime . <nl> / / provided ' com . mod - buildcraft : buildcraft : 6 . 0 . 8 : dev ' <nl> <nl> / / the deobf configurations : ' deobfCompile ' and ' deobfProvided ' are the same as the normal compile and provided , <nl> diff - - git a / mdk / gitignore . txt b / mdk / gitignore . txt <nl> new file mode 100644 <nl> index 0000000 . . 43654d1 <nl> - - - / dev / null <nl> + + + b / mdk / gitignore . txt <nl> @ @ - 0 , 0 + 1 , 21 @ @ <nl> + # eclipse <nl> + bin <nl> + * . launch <nl> + . settings <nl> + . metadata <nl> + . classpath <nl> + . project <nl> + <nl> + # idea <nl> + out <nl> + * . ipr <nl> + * . iws <nl> + * . iml <nl> + . idea <nl> + <nl> + # gradle <nl> + build <nl> + . gradle <nl> + <nl> + # other <nl> + eclipse
NEAREST DIFF (one line): diff - - git a / fml / . gitattributes b / fml / . gitattributes <nl> index 809a906 . . 758843d 100644 <nl> - - - a / fml / . gitattributes <nl> + + + b / fml / . gitattributes <nl> @ @ - 1 , 9 + 1 , 13 @ @ <nl> * text eol = lf <nl> * . bat text eol = crlf <nl> * . patch text eol = lf <nl> + * . java text eol = lf <nl> + * . gradle text eol = crlf <nl> * . png binary <nl> * . exe binary <nl> * . dll binary <nl> + * . jar binary <nl> + * . lzma binary <nl> * . zip binary <nl> * . pyd binary <nl> * . cfg text eol = lf <nl> diff - - git a / fml / . gitignore b / fml / . gitignore <nl> index 27935ea . . a09824b 100644 <nl> - - - a / fml / . gitignore <nl> + + + b / fml / . gitignore <nl> @ @ - 1 , 20 + 1 , 15 @ @ <nl> + # eclipse <nl> / bin <nl> - / minecraft _ server <nl> - / mods <nl> - / fmlbuild . properties <nl> - / fmlversion . properties <nl> - / difflist . txt <nl> - / target <nl> - fmlbranding . properties <nl> - / fernflower . zip <nl> - / commands . py . bck <nl> - / mcp * . zip <nl> - / mcp <nl> + / . settings <nl> + / . classpath <nl> + <nl> + # idea <nl> + / . idea <nl> + * . iml <nl> + <nl> + # gradle <nl> + / build <nl> + / . gradle <nl> + <nl> + # occupational hazards <nl> / eclipse <nl> - / deobfuscation _ data * . zip <nl> - / binpatch <nl> - / mcp _ data / <nl> - / map _ client . txt <nl> - / * . lzma <nl> - * * / * . lzma <nl> - / installer _ base . jar <nl> diff - - git a / fml / build . gradle b / fml / build . gradle <nl> new file mode 100644 <nl> index 0000000 . . e9448bd <nl> - - - / dev / null <nl> + + + b / fml / build . gradle <nl> @ @ - 0 , 0 + 1 , 100 @ @ <nl> + buildscript { <nl> + repositories { <nl> + mavenCentral ( ) <nl> + maven { <nl> + name = " forge " <nl> + url = " http : / / files . minecraftforge . net / maven " <nl> + } <nl> + } <nl> + dependencies { <nl> + classpath ' net . minecraftforge . gradle : ForgeGradle : 1 . 0 - SNAPSHOT ' <nl> + } <nl> + } <nl> + <nl> + import static net . minecraftforge . gradle . dev . FmlDevPlugin . * <nl> + <nl> + apply plugin : ' maven ' <nl> + apply plugin : ' fmldev ' <nl> + <nl> + repositories { <nl> + flatDir { <nl> + name " fileRepo " <nl> + dirs " repo " <nl> + } <nl> + } <nl> + <nl> + minecraft { <nl> + version = ' 1 . 6 . 4 ' <nl> + fmlDir = projectDir . getAbsolutePath ( ) ; <nl> + mainClass = ' cpw . mods . fml . relauncher . ServerLaunchWrapper ' <nl> + installerVersion = " 1 . 4 " <nl> + } <nl> + <nl> + group = ' cpw . mods ' <nl> + version = getVersionFromGit ( project ) <nl> + <nl> + jenkins { <nl> + job = ' fml ' <nl> + } <nl> + <nl> + uploadArchives { <nl> + repositories { <nl> + if ( project . hasProperty ( " filesmaven " ) ) { <nl> + logger . info ( ' Publishing to files server ' ) <nl> + <nl> + mavenDeployer { <nl> + configuration = configurations . deployerJars <nl> + <nl> + repository ( url : project . filesmaven . url ) { <nl> + authentication ( userName : project . filesmaven . username , privateKey : project . filesmaven . key ) <nl> + } <nl> + <nl> + pom { <nl> + groupId = project . group <nl> + version = project . version <nl> + artifactId = project . archivesBaseName <nl> + project { <nl> + name project . archivesBaseName <nl> + packaging ' jar ' <nl> + description ' ForgeModLoader ' <nl> + url ' https : / / github . com / MinecraftForge / FML ' <nl> + <nl> + scm { <nl> + url ' https : / / github . com / MinecraftForge / FML ' <nl> + connection ' scm : git : git : / / github . com / MinecraftForge / FML . git ' <nl> + developerConnection ' scm : git : git @ github . com : MinecraftForge / FML . git ' <nl> + } <nl> + <nl> + issueManagement { <nl> + system ' github ' <nl> + url ' https : / / github . com / MinecraftForge / FML / issues ' <nl> + } <nl> + <nl> + licenses { <nl> + license { <nl> + name ' GNU Lesser Public License ( LGPL ) , Version 3 ' <nl> + url ' http : / / www . gnu . org / licenses / lgpl - 3 . 0 . txt ' <nl> + distribution ' repo ' <nl> + } <nl> + } <nl> + <nl> + developers { <nl> + developer { <nl> + id ' LexManos ' <nl> + name ' Lex Manos ' <nl> + roles { role ' developer ' } <nl> + } <nl> + } <nl> + developers { <nl> + developer { <nl> + id ' cpw ' <nl> + name ' Christian Weeks ' <nl> + roles { role ' developer ' } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / fml / eclipse - workspace - dev . zip b / fml / eclipse - workspace - dev . zip <nl> index 3443e18 . . a3dd79e 100644 <nl> Binary files a / fml / eclipse - workspace - dev . zip and b / fml / eclipse - workspace - dev . zip differ <nl> diff - - git a / fml / settings . gradle b / fml / settings . gradle <nl> new file mode 100644 <nl> index 0000000 . . bcecb1a <nl> - - - / dev / null <nl> + + + b / fml / settings . gradle <nl> @ @ - 0 , 0 + 1 @ @ <nl> + rootProject . name = ' fml ' <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index f198c38 . . a83bbfe 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 157 , 6 + 157 , 30 @ @ task signUniversal ( type : SignJar , dependsOn : ' outputJar ' ) { 
 uploadArchives . dependsOn signUniversal 
 build . dependsOn signUniversal 
 
 + / / MDK package 
 + 
 + import org . apache . tools . ant . filters . ReplaceTokens 
 + task makeMdk ( type : Zip ) { 
 + baseName = project . name 
 + classifier = " mdk " 
 + version = project . version 
 + destinationDir = file ( ' build / distributions ' ) 
 + 
 + from ' mdk ' 
 + filter ( ReplaceTokens , tokens : [ 
 + VERSION : project . version , 
 + MAPPINGS : minecraft . mappings . replace ( ' nodoc _ ' , ' ' ) 
 + ] ) 
 + rename ' gitignore \ \ . txt ' , ' . gitignore ' 
 + from ' MinecraftForge - Credits . txt ' 
 + from ' MinecraftForge - License . txt ' 
 + from ' Paulscode IBXM Library License . txt ' 
 + from ' Paulscode SoundSystem CodecIBXM License . txt ' 
 + from ' LICENSE - fml . txt ' 
 + from changelog . output 
 + } 
 + tasks . build . dependsOn madeMdk 
 + 
 / / launch4j 
 
 launch4j { 
 @ @ - 176 , 6 + 200 , 7 @ @ tasks . build . dependsOn ' launch4j ' 
 artifacts { 
 archives changelog . output 
 archives file ( " build / distributions / $ { project . name } - $ { project . version } - installer - win . exe " ) 
 + archives makdeMdk . output 
 } 
 
 uploadArchives { 
 diff - - git a / mdk / build . gradle b / mdk / build . gradle 
 index 1b50aeb . . e29d90f 100644 
 - - - a / mdk / build . gradle 
 + + + b / mdk / build . gradle 
 @ @ - 1 , 6 + 1 , 8 @ @ 
 + / * 
 + / / For those who want the bleeding edge 
 buildscript { 
 repositories { 
 - mavenCentral ( ) 
 + jcenter ( ) 
 maven { 
 name = " forge " 
 url = " http : / / files . minecraftforge . net / maven " 
 @ @ - 10 , 15 + 12 , 20 @ @ buildscript { 
 classpath ' net . minecraftforge . gradle : ForgeGradle : 2 . 0 - SNAPSHOT ' 
 } 
 } 
 + apply plugin : ' net . minecraftforge . gradle . forge ' 
 + * / 
 
 - apply plugin : ' $ { name } ' 
 + / / for people who want stable 
 + plugins { 
 + id " net . minecraftforge . gradle . forge " version " 2 . 0 . 0 " 
 + } 
 
 version = " 1 . 0 " 
 group = " com . yourname . modid " / / http : / / maven . apache . org / guides / mini / guide - naming - conventions . html 
 archivesBaseName = " modid " 
 
 minecraft { 
 - version = " $ { version } " 
 + version = " @ VERSION @ " 
 runDir = " eclipse " 
 
 / / the mappings can be changed at any time , and must be in the following format . 
 @ @ - 26 , 7 + 33 , 7 @ @ minecraft { 
 / / stable _ # stables are built at the discretion of the MCP team . 
 / / Use non - default mappings at your own risk . they may not allways work . 
 / / simply re - run your setup task after changing the mappings to update your workspace . 
 - mappings = " $ { mappings } " 
 + mappings = " @ MAPPINGS @ " 
 } 
 
 dependencies { 
 @ @ - 39 , 7 + 46 , 7 @ @ dependencies { 
 / / compile ' com . mod - buildcraft : buildcraft : 6 . 0 . 8 : dev ' / / adds buildcraft to the dev env 
 / / compile ' com . googlecode . efficient - java - matrix - library : ejml : 0 . 24 ' / / adds ejml to the dev env 
 
 - / / the ' provided ' configuration is for optioanl dependencies 
 + / / the ' provided ' configuration is for optional dependencies that exist at compile - time but might not at runtime . 
 / / provided ' com . mod - buildcraft : buildcraft : 6 . 0 . 8 : dev ' 
 
 / / the deobf configurations : ' deobfCompile ' and ' deobfProvided ' are the same as the normal compile and provided , 
 diff - - git a / mdk / gitignore . txt b / mdk / gitignore . txt 
 new file mode 100644 
 index 0000000 . . 43654d1 
 - - - / dev / null 
 + + + b / mdk / gitignore . txt 
 @ @ - 0 , 0 + 1 , 21 @ @ 
 + # eclipse 
 + bin 
 + * . launch 
 + . settings 
 + . metadata 
 + . classpath 
 + . project 
 + 
 + # idea 
 + out 
 + * . ipr 
 + * . iws 
 + * . iml 
 + . idea 
 + 
 + # gradle 
 + build 
 + . gradle 
 + 
 + # other 
 + eclipse

NEAREST DIFF:
diff - - git a / fml / . gitattributes b / fml / . gitattributes 
 index 809a906 . . 758843d 100644 
 - - - a / fml / . gitattributes 
 + + + b / fml / . gitattributes 
 @ @ - 1 , 9 + 1 , 13 @ @ 
 * text eol = lf 
 * . bat text eol = crlf 
 * . patch text eol = lf 
 + * . java text eol = lf 
 + * . gradle text eol = crlf 
 * . png binary 
 * . exe binary 
 * . dll binary 
 + * . jar binary 
 + * . lzma binary 
 * . zip binary 
 * . pyd binary 
 * . cfg text eol = lf 
 diff - - git a / fml / . gitignore b / fml / . gitignore 
 index 27935ea . . a09824b 100644 
 - - - a / fml / . gitignore 
 + + + b / fml / . gitignore 
 @ @ - 1 , 20 + 1 , 15 @ @ 
 + # eclipse 
 / bin 
 - / minecraft _ server 
 - / mods 
 - / fmlbuild . properties 
 - / fmlversion . properties 
 - / difflist . txt 
 - / target 
 - fmlbranding . properties 
 - / fernflower . zip 
 - / commands . py . bck 
 - / mcp * . zip 
 - / mcp 
 + / . settings 
 + / . classpath 
 + 
 + # idea 
 + / . idea 
 + * . iml 
 + 
 + # gradle 
 + / build 
 + / . gradle 
 + 
 + # occupational hazards 
 / eclipse 
 - / deobfuscation _ data * . zip 
 - / binpatch 
 - / mcp _ data / 
 - / map _ client . txt 
 - / * . lzma 
 - * * / * . lzma 
 - / installer _ base . jar 
 diff - - git a / fml / build . gradle b / fml / build . gradle 
 new file mode 100644 
 index 0000000 . . e9448bd 
 - - - / dev / null 
 + + + b / fml / build . gradle 
 @ @ - 0 , 0 + 1 , 100 @ @ 
 + buildscript { 
 + repositories { 
 + mavenCentral ( ) 
 + maven { 
 + name = " forge " 
 + url = " http : / / files . minecraftforge . net / maven " 
 + } 
 + } 
 + dependencies { 
 + classpath ' net . minecraftforge . gradle : ForgeGradle : 1 . 0 - SNAPSHOT ' 
 + } 
 + } 
 + 
 + import static net . minecraftforge . gradle . dev . FmlDevPlugin . * 
 + 
 + apply plugin : ' maven ' 
 + apply plugin : ' fmldev ' 
 + 
 + repositories { 
 + flatDir { 
 + name " fileRepo " 
 + dirs " repo " 
 + } 
 + } 
 + 
 + minecraft { 
 + version = ' 1 . 6 . 4 ' 
 + fmlDir = projectDir . getAbsolutePath ( ) ; 
 + mainClass = ' cpw . mods . fml . relauncher . ServerLaunchWrapper ' 
 + installerVersion = " 1 . 4 " 
 + } 
 + 
 + group = ' cpw . mods ' 
 + version = getVersionFromGit ( project ) 
 + 
 + jenkins { 
 + job = ' fml ' 
 + } 
 + 
 + uploadArchives { 
 + repositories { 
 + if ( project . hasProperty ( " filesmaven " ) ) { 
 + logger . info ( ' Publishing to files server ' ) 
 + 
 + mavenDeployer { 
 + configuration = configurations . deployerJars 
 + 
 + repository ( url : project . filesmaven . url ) { 
 + authentication ( userName : project . filesmaven . username , privateKey : project . filesmaven . key ) 
 + } 
 + 
 + pom { 
 + groupId = project . group 
 + version = project . version 
 + artifactId = project . archivesBaseName 
 + project { 
 + name project . archivesBaseName 
 + packaging ' jar ' 
 + description ' ForgeModLoader ' 
 + url ' https : / / github . com / MinecraftForge / FML ' 
 + 
 + scm { 
 + url ' https : / / github . com / MinecraftForge / FML ' 
 + connection ' scm : git : git : / / github . com / MinecraftForge / FML . git ' 
 + developerConnection ' scm : git : git @ github . com : MinecraftForge / FML . git ' 
 + } 
 + 
 + issueManagement { 
 + system ' github ' 
 + url ' https : / / github . com / MinecraftForge / FML / issues ' 
 + } 
 + 
 + licenses { 
 + license { 
 + name ' GNU Lesser Public License ( LGPL ) , Version 3 ' 
 + url ' http : / / www . gnu . org / licenses / lgpl - 3 . 0 . txt ' 
 + distribution ' repo ' 
 + } 
 + } 
 + 
 + developers { 
 + developer { 
 + id ' LexManos ' 
 + name ' Lex Manos ' 
 + roles { role ' developer ' } 
 + } 
 + } 
 + developers { 
 + developer { 
 + id ' cpw ' 
 + name ' Christian Weeks ' 
 + roles { role ' developer ' } 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / fml / eclipse - workspace - dev . zip b / fml / eclipse - workspace - dev . zip 
 index 3443e18 . . a3dd79e 100644 
 Binary files a / fml / eclipse - workspace - dev . zip and b / fml / eclipse - workspace - dev . zip differ 
 diff - - git a / fml / settings . gradle b / fml / settings . gradle 
 new file mode 100644 
 index 0000000 . . bcecb1a 
 - - - / dev / null 
 + + + b / fml / settings . gradle 
 @ @ - 0 , 0 + 1 @ @ 
 + rootProject . name = ' fml ' 
 \ No newline at end of file
