BLEU SCORE: 0.025275658895144486

TEST MSG: Fix universal bucket logging an exception
GENERATED MSG: Correctly handle error caused by missing / malformed bucket model definition file .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoader . java b / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> index 453b1c1 . . 1b43fbc 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> @ @ - 219 , 13 + 219 , 13 @ @ public class ModelLoader extends ModelBakery <nl> <nl> private void loadItems ( ) <nl> { <nl> - registerVariantNames ( ) ; <nl> - <nl> / / register model for the universal bucket , if it exists <nl> if ( FluidRegistry . isUniversalBucketEnabled ( ) ) <nl> { <nl> setBucketModelDefinition ( ForgeModContainer . getInstance ( ) . universalBucket ) ; <nl> } <nl> + <nl> + registerVariantNames ( ) ; <nl> <nl> List < String > itemVariants = Lists . newArrayList ( ) ; <nl> for ( Item item : GameData . getItemRegistry ( ) . typeSafeIterable ( ) )
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoader . java b / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> index d3a25ae . . c130a0e 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> @ @ - 256 , 8 + 256 , 15 @ @ public class ModelLoader extends ModelBakery <nl> if ( ! stateModels . containsKey ( ModelDynBucket . LOCATION ) ) <nl> { <nl> / / load forges blockstate json for it <nl> - ModelResourceLocation memory = getInventoryVariant ( " forge : dynbucket " ) ; <nl> - registerVariant ( getModelBlockDefinition ( memory ) , memory ) ; <nl> + try <nl> + { <nl> + registerVariant ( getModelBlockDefinition ( ModelDynBucket . LOCATION ) , ModelDynBucket . LOCATION ) ; <nl> + } <nl> + catch ( Exception exception ) <nl> + { <nl> + FMLLog . getLogger ( ) . error ( " Could not load the forge bucket model from the blockstate " , exception ) ; <nl> + return ; <nl> + } <nl> } <nl> <nl> / / empty bucket

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoader . java b / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 index 453b1c1 . . 1b43fbc 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 @ @ - 219 , 13 + 219 , 13 @ @ public class ModelLoader extends ModelBakery 
 
 private void loadItems ( ) 
 { 
 - registerVariantNames ( ) ; 
 - 
 / / register model for the universal bucket , if it exists 
 if ( FluidRegistry . isUniversalBucketEnabled ( ) ) 
 { 
 setBucketModelDefinition ( ForgeModContainer . getInstance ( ) . universalBucket ) ; 
 } 
 + 
 + registerVariantNames ( ) ; 
 
 List < String > itemVariants = Lists . newArrayList ( ) ; 
 for ( Item item : GameData . getItemRegistry ( ) . typeSafeIterable ( ) )

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoader . java b / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 index d3a25ae . . c130a0e 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 @ @ - 256 , 8 + 256 , 15 @ @ public class ModelLoader extends ModelBakery 
 if ( ! stateModels . containsKey ( ModelDynBucket . LOCATION ) ) 
 { 
 / / load forges blockstate json for it 
 - ModelResourceLocation memory = getInventoryVariant ( " forge : dynbucket " ) ; 
 - registerVariant ( getModelBlockDefinition ( memory ) , memory ) ; 
 + try 
 + { 
 + registerVariant ( getModelBlockDefinition ( ModelDynBucket . LOCATION ) , ModelDynBucket . LOCATION ) ; 
 + } 
 + catch ( Exception exception ) 
 + { 
 + FMLLog . getLogger ( ) . error ( " Could not load the forge bucket model from the blockstate " , exception ) ; 
 + return ; 
 + } 
 } 
 
 / / empty bucket
