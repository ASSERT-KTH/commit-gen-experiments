BLEU SCORE: 0.05868924818816534

TEST MSG: Add modifier support to vanilla keybindings .
GENERATED MSG: Re - Add key binding modifiers and contexts .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> index 3d1788e . . 91a4491 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> @ @ - 21 , 6 + 21 , 15 @ @ <nl> this . field _ 152350 _ aA = new SkinManager ( this . field _ 71446 _ o , new File ( this . field _ 110446 _ Y , " skins " ) , this . field _ 152355 _ az ) ; <nl> this . field _ 71469 _ aa = new AnvilSaveConverter ( new File ( this . field _ 71412 _ D , " saves " ) , this . field _ 184131 _ U ) ; <nl> this . field _ 147127 _ av = new SoundHandler ( this . field _ 110451 _ am , this . field _ 71474 _ y ) ; <nl> + @ @ - 460 , 7 + 459 , 7 @ @ <nl> + { <nl> + try <nl> + { <nl> + - return String . format ( p _ 74535 _ 1 _ , new Object [ ] { GameSettings . func _ 74298 _ c ( Minecraft . this . field _ 71474 _ y . field _ 151445 _ Q . func _ 151463 _ i ( ) ) } ) ; <nl> + + return String . format ( p _ 74535 _ 1 _ , new Object [ ] { Minecraft . this . field _ 71474 _ y . field _ 151445 _ Q . getDisplayName ( ) } ) ; <nl> + } <nl> + catch ( Exception exception ) <nl> + { <nl> @ @ - 469 , 6 + 468 , 8 @ @ <nl> } <nl> } ) ; <nl> @ @ - 474 , 7 + 483 , 18 @ @ <nl> } <nl> <nl> public boolean func _ 70002 _ Q ( ) <nl> - @ @ - 3066 , 6 + 2958 , 7 @ @ <nl> + @ @ - 3057 , 15 + 2949 , 16 @ @ <nl> + { <nl> + if ( Keyboard . getEventKeyState ( ) ) <nl> + { <nl> + - if ( i = = this . field _ 71474 _ y . field _ 152395 _ am . func _ 151463 _ i ( ) ) <nl> + + if ( this . field _ 71474 _ y . field _ 152395 _ am . isActiveAndMatches ( i ) ) <nl> + { <nl> + this . func _ 71352 _ k ( ) ; <nl> + } <nl> + - else if ( i = = this . field _ 71474 _ y . field _ 151447 _ Z . func _ 151463 _ i ( ) ) <nl> + + else if ( this . field _ 71474 _ y . field _ 151447 _ Z . isActiveAndMatches ( i ) ) <nl> + { <nl> this . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( ScreenShotHelper . func _ 148260 _ a ( this . field _ 71412 _ D , this . field _ 71443 _ c , this . field _ 71440 _ d , this . field _ 147124 _ at ) ) ; <nl> } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch <nl> index ee31589 . . 5a9cdd7 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch <nl> @ @ - 1 , 36 + 1 , 37 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiControls . java <nl> + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiControls . java <nl> - @ @ - 66 , 6 + 66 , 7 @ @ <nl> + @ @ - 65 , 7 + 65 , 7 @ @ <nl> + { <nl> for ( KeyBinding keybinding : this . field _ 146297 _ k . field _ 71474 _ y . field _ 74324 _ K ) <nl> { <nl> - keybinding . func _ 151462 _ b ( keybinding . func _ 151469 _ h ( ) ) ; <nl> - + keybinding . setKeyModifier ( keybinding . getKeyModifierDefault ( ) ) ; <nl> + - keybinding . func _ 151462 _ b ( keybinding . func _ 151469 _ h ( ) ) ; <nl> + + keybinding . setToDefault ( ) ; <nl> } <nl> <nl> KeyBinding . func _ 74508 _ b ( ) ; <nl> - @ @ - 81 , 6 + 82 , 7 @ @ <nl> + @ @ - 81 , 6 + 81 , 7 @ @ <nl> { <nl> if ( this . field _ 146491 _ f ! = null ) <nl> { <nl> - + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; <nl> + + this . field _ 146491 _ f . setKeyModifierAndCode ( net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) , - 100 + p _ 73864 _ 3 _ ) ; <nl> this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , - 100 + p _ 73864 _ 3 _ ) ; <nl> this . field _ 146491 _ f = null ; <nl> KeyBinding . func _ 74508 _ b ( ) ; <nl> - @ @ - 105 , 17 + 107 , 21 @ @ <nl> + @ @ - 105 , 17 + 106 , 21 @ @ <nl> { <nl> if ( p _ 73869 _ 2 _ = = 1 ) <nl> { <nl> - + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . NONE ) ; <nl> + + this . field _ 146491 _ f . setKeyModifierAndCode ( net . minecraftforge . client . settings . KeyModifier . NONE , 0 ) ; <nl> this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , 0 ) ; <nl> } <nl> else if ( p _ 73869 _ 2 _ ! = 0 ) <nl> { <nl> - + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ? net . minecraftforge . client . settings . KeyModifier . NONE : net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; <nl> + + this . field _ 146491 _ f . setKeyModifierAndCode ( net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) , p _ 73869 _ 2 _ ) ; <nl> this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , p _ 73869 _ 2 _ ) ; <nl> } <nl> else if ( p _ 73869 _ 1 _ > 0 ) <nl> { <nl> - + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ? net . minecraftforge . client . settings . KeyModifier . NONE : net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; <nl> + + this . field _ 146491 _ f . setKeyModifierAndCode ( net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) , p _ 73869 _ 1 _ + 256 ) ; <nl> this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , p _ 73869 _ 1 _ + 256 ) ; <nl> } <nl> <nl> @ @ - 38 , 12 + 39 , 12 @ @ <nl> this . field _ 146491 _ f = null ; <nl> this . field _ 152177 _ g = Minecraft . func _ 71386 _ F ( ) ; <nl> KeyBinding . func _ 74508 _ b ( ) ; <nl> - @ @ - 135 , 7 + 141 , 7 @ @ <nl> + @ @ - 135 , 7 + 140 , 7 @ @ <nl> <nl> for ( KeyBinding keybinding : this . field _ 146497 _ i . field _ 74324 _ K ) <nl> { <nl> - if ( keybinding . func _ 151463 _ i ( ) ! = keybinding . func _ 151469 _ h ( ) ) <nl> - + if ( keybinding . func _ 151463 _ i ( ) ! = keybinding . func _ 151469 _ h ( ) | | keybinding . getKeyModifier ( ) ! = keybinding . getKeyModifierDefault ( ) ) <nl> + + if ( ! keybinding . isSetToDefaultValue ( ) ) <nl> { <nl> flag = false ; <nl> break ; <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch <nl> index b3c50b3 . . 2471d1b 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch <nl> @ @ - 18 , 7 + 18 , 7 @ @ <nl> this . field _ 148281 _ e = new GuiButton ( 0 , 0 , 0 , 50 , 20 , I18n . func _ 135052 _ a ( " controls . reset " , new Object [ 0 ] ) ) ; <nl> } <nl> <nl> - @ @ - 121 , 20 + 121 , 20 @ @ <nl> + @ @ - 121 , 23 + 121 , 24 @ @ <nl> { <nl> boolean flag = GuiKeyBindingList . this . field _ 148191 _ k . field _ 146491 _ f = = this . field _ 148282 _ b ; <nl> GuiKeyBindingList . this . field _ 148189 _ l . field _ 71466 _ p . func _ 78276 _ b ( this . field _ 148283 _ c , p _ 180790 _ 2 _ + 90 - GuiKeyBindingList . this . field _ 148188 _ n , p _ 180790 _ 3 _ + p _ 180790 _ 5 _ / 2 - GuiKeyBindingList . this . field _ 148189 _ l . field _ 71466 _ p . field _ 78288 _ b / 2 , 16777215 ) ; <nl> @ @ - 26 , 13 + 26 , 14 @ @ <nl> + this . field _ 148281 _ e . field _ 146128 _ h = p _ 180790 _ 2 _ + 210 ; <nl> this . field _ 148281 _ e . field _ 146129 _ i = p _ 180790 _ 3 _ ; <nl> - this . field _ 148281 _ e . field _ 146124 _ l = this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = this . field _ 148282 _ b . func _ 151469 _ h ( ) ; <nl> - + this . field _ 148281 _ e . field _ 146124 _ l = this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = this . field _ 148282 _ b . func _ 151469 _ h ( ) | | this . field _ 148282 _ b . getKeyModifier ( ) ! = this . field _ 148282 _ b . getKeyModifierDefault ( ) ; <nl> + + this . field _ 148281 _ e . field _ 146124 _ l = ! this . field _ 148282 _ b . isSetToDefaultValue ( ) ; <nl> this . field _ 148281 _ e . func _ 146112 _ a ( GuiKeyBindingList . this . field _ 148189 _ l , p _ 180790 _ 6 _ , p _ 180790 _ 7 _ ) ; <nl> this . field _ 148280 _ d . field _ 146128 _ h = p _ 180790 _ 2 _ + 105 ; <nl> this . field _ 148280 _ d . field _ 146129 _ i = p _ 180790 _ 3 _ ; <nl> - this . field _ 148280 _ d . field _ 146126 _ j = GameSettings . func _ 74298 _ c ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ) ; <nl> - + this . field _ 148280 _ d . field _ 146126 _ j = this . field _ 148282 _ b . getKeyModifier ( ) . getLocalizedComboName ( GameSettings . func _ 74298 _ c ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ) ) ; <nl> + + this . field _ 148280 _ d . field _ 146126 _ j = this . field _ 148282 _ b . getDisplayName ( ) ; <nl> boolean flag1 = false ; <nl> + + boolean keyCodeModifierConflict = true ; / / less severe form of conflict , like SHIFT conflicting with SHIFT + G <nl> <nl> if ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = 0 ) <nl> { <nl> @ @ - 42 , 12 + 43 , 25 @ @ <nl> + if ( keybinding ! = this . field _ 148282 _ b & & keybinding . conflicts ( this . field _ 148282 _ b ) ) <nl> { <nl> flag1 = true ; <nl> - break ; <nl> - @ @ - 163 , 6 + 163 , 7 @ @ <nl> + - break ; <nl> + + keyCodeModifierConflict & = keybinding . hasKeyCodeModifierConflict ( this . field _ 148282 _ b ) ; <nl> + } <nl> + } <nl> + } <nl> + @ @ - 148 , 7 + 149 , 7 @ @ <nl> + } <nl> + else if ( flag1 ) <nl> + { <nl> + - this . field _ 148280 _ d . field _ 146126 _ j = TextFormatting . RED + this . field _ 148280 _ d . field _ 146126 _ j ; <nl> + + this . field _ 148280 _ d . field _ 146126 _ j = ( keyCodeModifierConflict ? TextFormatting . GOLD : TextFormatting . RED ) + this . field _ 148280 _ d . field _ 146126 _ j ; <nl> + } <nl> + <nl> + this . field _ 148280 _ d . func _ 146112 _ a ( GuiKeyBindingList . this . field _ 148189 _ l , p _ 180790 _ 6 _ , p _ 180790 _ 7 _ ) ; <nl> + @ @ - 163 , 6 + 164 , 7 @ @ <nl> } <nl> else if ( this . field _ 148281 _ e . func _ 146116 _ c ( GuiKeyBindingList . this . field _ 148189 _ l , p _ 148278 _ 2 _ , p _ 148278 _ 3 _ ) ) <nl> { <nl> - + this . field _ 148282 _ b . setKeyModifier ( this . field _ 148282 _ b . getKeyModifierDefault ( ) ) ; <nl> + + this . field _ 148282 _ b . setToDefault ( ) ; <nl> GuiKeyBindingList . this . field _ 148189 _ l . field _ 71474 _ y . func _ 151440 _ a ( this . field _ 148282 _ b , this . field _ 148282 _ b . func _ 151469 _ h ( ) ) ; <nl> KeyBinding . func _ 74508 _ b ( ) ; <nl> return true ; <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiScreenDemo . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiScreenDemo . java . patch <nl> new file mode 100644 <nl> index 0000000 . . bc19530 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiScreenDemo . java . patch <nl> @ @ - 0 , 0 + 1 , 16 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiScreenDemo . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiScreenDemo . java <nl> + @ @ - 73 , 10 + 73 , 10 @ @ <nl> + this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . title " , new Object [ 0 ] ) , i , j , 2039583 ) ; <nl> + j = j + 12 ; <nl> + GameSettings gamesettings = this . field _ 146297 _ k . field _ 71474 _ y ; <nl> + - this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . movementShort " , new Object [ ] { GameSettings . func _ 74298 _ c ( gamesettings . field _ 74351 _ w . func _ 151463 _ i ( ) ) , GameSettings . func _ 74298 _ c ( gamesettings . field _ 74370 _ x . func _ 151463 _ i ( ) ) , GameSettings . func _ 74298 _ c ( gamesettings . field _ 74368 _ y . func _ 151463 _ i ( ) ) , GameSettings . func _ 74298 _ c ( gamesettings . field _ 74366 _ z . func _ 151463 _ i ( ) ) } ) , i , j , 5197647 ) ; <nl> + + this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . movementShort " , new Object [ ] { gamesettings . field _ 74351 _ w . getDisplayName ( ) , gamesettings . field _ 74370 _ x . getDisplayName ( ) , gamesettings . field _ 74368 _ y . getDisplayName ( ) , gamesettings . field _ 74366 _ z . getDisplayName ( ) } ) , i , j , 5197647 ) ; <nl> + this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . movementMouse " , new Object [ 0 ] ) , i , j + 12 , 5197647 ) ; <nl> + - this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . jump " , new Object [ ] { GameSettings . func _ 74298 _ c ( gamesettings . field _ 74314 _ A . func _ 151463 _ i ( ) ) } ) , i , j + 24 , 5197647 ) ; <nl> + - this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . inventory " , new Object [ ] { GameSettings . func _ 74298 _ c ( gamesettings . field _ 151445 _ Q . func _ 151463 _ i ( ) ) } ) , i , j + 36 , 5197647 ) ; <nl> + + this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . jump " , new Object [ ] { gamesettings . field _ 74314 _ A . getDisplayName ( ) } ) , i , j + 24 , 5197647 ) ; <nl> + + this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . inventory " , new Object [ ] { gamesettings . field _ 151445 _ Q . getDisplayName ( ) } ) , i , j + 36 , 5197647 ) ; <nl> + this . field _ 146289 _ q . func _ 78279 _ b ( I18n . func _ 135052 _ a ( " demo . help . fullWrapped " , new Object [ 0 ] ) , i , j + 68 , 218 , 2039583 ) ; <nl> + super . func _ 73863 _ a ( p _ 73863 _ 1 _ , p _ 73863 _ 2 _ , p _ 73863 _ 3 _ ) ; <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiSpectator . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiSpectator . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 75838ae <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiSpectator . java . patch <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiSpectator . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiSpectator . java <nl> + @ @ - 109 , 7 + 109 , 7 @ @ <nl> + GlStateManager . func _ 179131 _ c ( f , f , f , p _ 175266 _ 4 _ ) ; <nl> + p _ 175266 _ 5 _ . func _ 178663 _ a ( f , i ) ; <nl> + GlStateManager . func _ 179121 _ F ( ) ; <nl> + - String s = String . valueOf ( ( Object ) GameSettings . func _ 74298 _ c ( this . field _ 175268 _ g . field _ 71474 _ y . field _ 151456 _ ac [ p _ 175266 _ 1 _ ] . func _ 151463 _ i ( ) ) ) ; <nl> + + String s = String . valueOf ( this . field _ 175268 _ g . field _ 71474 _ y . field _ 151456 _ ac [ p _ 175266 _ 1 _ ] . getDisplayName ( ) ) ; <nl> + <nl> + if ( i > 3 & & p _ 175266 _ 5 _ . func _ 178662 _ A _ ( ) ) <nl> + { <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / achievement / GuiAchievements . java . patch b / patches / minecraft / net / minecraft / client / gui / achievement / GuiAchievements . java . patch <nl> index bba2f8a . . 0155153 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / achievement / GuiAchievements . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / gui / achievement / GuiAchievements . java . patch <nl> @ @ - 34 , 7 + 34 , 7 @ @ <nl> } <nl> <nl> protected void func _ 146284 _ a ( GuiButton p _ 146284 _ 1 _ ) throws IOException <nl> - @ @ - 74 , 6 + 87 , 16 @ @ <nl> + @ @ - 74 , 12 + 87 , 22 @ @ <nl> { <nl> this . field _ 146297 _ k . func _ 147108 _ a ( this . field _ 146562 _ a ) ; <nl> } <nl> @ @ - 51 , 6 + 51 , 13 @ @ <nl> } <nl> } <nl> <nl> + protected void func _ 73869 _ a ( char p _ 73869 _ 1 _ , int p _ 73869 _ 2 _ ) throws IOException <nl> + { <nl> + - if ( p _ 73869 _ 2 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 151445 _ Q . func _ 151463 _ i ( ) ) <nl> + + if ( this . field _ 146297 _ k . field _ 71474 _ y . field _ 151445 _ Q . isActiveAndMatches ( p _ 73869 _ 2 _ ) ) <nl> + { <nl> + this . field _ 146297 _ k . func _ 147108 _ a ( ( GuiScreen ) null ) ; <nl> + this . field _ 146297 _ k . func _ 71381 _ h ( ) ; <nl> @ @ - 257 , 7 + 280 , 9 @ @ <nl> GlStateManager . func _ 179143 _ c ( 518 ) ; <nl> GlStateManager . func _ 179094 _ E ( ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch b / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch <nl> index 1b2794a . . 145e92e 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch <nl> @ @ - 30 , 6 + 30 , 15 @ @ <nl> this . func _ 175175 _ a ( i , j , textureatlassprite , 16 , 16 ) ; <nl> GlStateManager . func _ 179145 _ e ( ) ; <nl> flag1 = true ; <nl> + @ @ - 316 , 7 + 318 , 7 @ @ <nl> + protected void func _ 73864 _ a ( int p _ 73864 _ 1 _ , int p _ 73864 _ 2 _ , int p _ 73864 _ 3 _ ) throws IOException <nl> + { <nl> + super . func _ 73864 _ a ( p _ 73864 _ 1 _ , p _ 73864 _ 2 _ , p _ 73864 _ 3 _ ) ; <nl> + - boolean flag = p _ 73864 _ 3 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . func _ 151463 _ i ( ) + 100 ; <nl> + + boolean flag = this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . isActiveAndMatches ( p _ 73864 _ 3 _ + 100 ) ; <nl> + Slot slot = this . func _ 146975 _ c ( p _ 73864 _ 1 _ , p _ 73864 _ 2 _ ) ; <nl> + long i = Minecraft . func _ 71386 _ F ( ) ; <nl> + this . field _ 146993 _ M = this . field _ 146998 _ K = = slot & & i - this . field _ 146997 _ J < 250L & & this . field _ 146992 _ L = = p _ 73864 _ 3 _ ; <nl> @ @ - 327 , 6 + 329 , 7 @ @ <nl> int j = this . field _ 147003 _ i ; <nl> int k = this . field _ 147009 _ r ; <nl> @ @ - 38 , 6 + 47 , 24 @ @ <nl> int l = - 1 ; <nl> <nl> if ( slot ! = null ) <nl> + @ @ - 364 , 7 + 367 , 7 @ @ <nl> + { <nl> + if ( this . field _ 146297 _ k . field _ 71439 _ g . field _ 71071 _ by . func _ 70445 _ o ( ) = = null ) <nl> + { <nl> + - if ( p _ 73864 _ 3 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . func _ 151463 _ i ( ) + 100 ) <nl> + + if ( this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . isActiveAndMatches ( p _ 73864 _ 3 _ + 100 ) ) <nl> + { <nl> + this . func _ 184098 _ a ( slot , l , p _ 73864 _ 3 _ , ClickType . CLONE ) ; <nl> + } <nl> + @ @ - 402 , 7 + 405 , 7 @ @ <nl> + { <nl> + this . field _ 146987 _ F = 1 ; <nl> + } <nl> + - else if ( p _ 73864 _ 3 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . func _ 151463 _ i ( ) + 100 ) <nl> + + else if ( this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . isActiveAndMatches ( p _ 73864 _ 3 _ + 100 ) ) <nl> + { <nl> + this . field _ 146987 _ F = 2 ; <nl> + } <nl> @ @ - 464 , 10 + 467 , 12 @ @ <nl> <nl> protected void func _ 146286 _ b ( int p _ 146286 _ 1 _ , int p _ 146286 _ 2 _ , int p _ 146286 _ 3 _ ) <nl> @ @ - 51 , 6 + 78 , 38 @ @ <nl> int k = - 1 ; <nl> <nl> if ( slot ! = null ) <nl> + @ @ - 627 , 7 + 632 , 7 @ @ <nl> + <nl> + protected void func _ 73869 _ a ( char p _ 73869 _ 1 _ , int p _ 73869 _ 2 _ ) throws IOException <nl> + { <nl> + - if ( p _ 73869 _ 2 _ = = 1 | | p _ 73869 _ 2 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 151445 _ Q . func _ 151463 _ i ( ) ) <nl> + + if ( p _ 73869 _ 2 _ = = 1 | | this . field _ 146297 _ k . field _ 71474 _ y . field _ 151445 _ Q . isActiveAndMatches ( p _ 73869 _ 2 _ ) ) <nl> + { <nl> + this . field _ 146297 _ k . field _ 71439 _ g . func _ 71053 _ j ( ) ; <nl> + } <nl> + @ @ - 636 , 11 + 641 , 11 @ @ <nl> + <nl> + if ( this . field _ 147006 _ u ! = null & & this . field _ 147006 _ u . func _ 75216 _ d ( ) ) <nl> + { <nl> + - if ( p _ 73869 _ 2 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . func _ 151463 _ i ( ) ) <nl> + + if ( this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . isActiveAndMatches ( p _ 73869 _ 2 _ ) ) <nl> + { <nl> + this . func _ 184098 _ a ( this . field _ 147006 _ u , this . field _ 147006 _ u . field _ 75222 _ d , 0 , ClickType . CLONE ) ; <nl> + } <nl> + - else if ( p _ 73869 _ 2 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 74316 _ C . func _ 151463 _ i ( ) ) <nl> + + else if ( this . field _ 146297 _ k . field _ 71474 _ y . field _ 74316 _ C . isActiveAndMatches ( p _ 73869 _ 2 _ ) ) <nl> + { <nl> + this . func _ 184098 _ a ( this . field _ 147006 _ u , this . field _ 147006 _ u . field _ 75222 _ d , func _ 146271 _ m ( ) ? 1 : 0 , ClickType . THROW ) ; <nl> + } <nl> + @ @ - 653 , 7 + 658 , 7 @ @ <nl> + { <nl> + for ( int i = 0 ; i < 9 ; + + i ) <nl> + { <nl> + - if ( p _ 146983 _ 1 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 151456 _ ac [ i ] . func _ 151463 _ i ( ) ) <nl> + + if ( this . field _ 146297 _ k . field _ 71474 _ y . field _ 151456 _ ac [ i ] . isActiveAndMatches ( p _ 146983 _ 1 _ ) ) <nl> + { <nl> + this . func _ 184098 _ a ( this . field _ 147006 _ u , this . field _ 147006 _ u . field _ 75222 _ d , i , ClickType . SWAP ) ; <nl> + return true ; <nl> @ @ - 686 , 4 + 691 , 16 @ @ <nl> this . field _ 146297 _ k . field _ 71439 _ g . func _ 71053 _ j ( ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch b / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch <nl> index 54911d8 . . 61b8bd1 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch <nl> @ @ - 40 , 6 + 40 , 15 @ @ <nl> EntityTracker . func _ 187254 _ a ( entitylivingbase , d0 , d1 , d2 ) ; <nl> entitylivingbase . field _ 70761 _ aq = entitylivingbase . field _ 70759 _ as = ( float ) ( p _ 147281 _ 1 _ . func _ 149032 _ n ( ) * 360 ) / 256 . 0F ; <nl> Entity [ ] aentity = entitylivingbase . func _ 70021 _ al ( ) ; <nl> + @ @ - 919 , 7 + 926 , 7 @ @ <nl> + <nl> + if ( entity1 = = this . field _ 147299 _ f . field _ 71439 _ g & & ! flag ) <nl> + { <nl> + - this . field _ 147299 _ f . field _ 71456 _ v . func _ 110326 _ a ( I18n . func _ 135052 _ a ( " mount . onboard " , new Object [ ] { GameSettings . func _ 74298 _ c ( this . field _ 147299 _ f . field _ 71474 _ y . field _ 74311 _ E . func _ 151463 _ i ( ) ) } ) , false ) ; <nl> + + this . field _ 147299 _ f . field _ 71456 _ v . func _ 110326 _ a ( I18n . func _ 135052 _ a ( " mount . onboard " , new Object [ ] { this . field _ 147299 _ f . field _ 71474 _ y . field _ 74311 _ E . getDisplayName ( ) } ) , false ) ; <nl> + } <nl> + } <nl> + } <nl> @ @ - 1179 , 6 + 1186 , 10 @ @ <nl> { <nl> tileentity . func _ 145839 _ a ( p _ 147273 _ 1 _ . func _ 148857 _ g ( ) ) ; <nl> @ @ - 51 , 6 + 60 , 25 @ @ <nl> <nl> if ( flag & & this . field _ 147299 _ f . field _ 71462 _ r instanceof GuiCommandBlock ) <nl> { <nl> + @ @ - 1276 , 15 + 1287 , 15 @ @ <nl> + } <nl> + else if ( f = = 101 . 0F ) <nl> + { <nl> + - this . field _ 147299 _ f . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( new TextComponentTranslation ( " demo . help . movement " , new Object [ ] { GameSettings . func _ 74298 _ c ( gamesettings . field _ 74351 _ w . func _ 151463 _ i ( ) ) , GameSettings . func _ 74298 _ c ( gamesettings . field _ 74370 _ x . func _ 151463 _ i ( ) ) , GameSettings . func _ 74298 _ c ( gamesettings . field _ 74368 _ y . func _ 151463 _ i ( ) ) , GameSettings . func _ 74298 _ c ( gamesettings . field _ 74366 _ z . func _ 151463 _ i ( ) ) } ) ) ; <nl> + + this . field _ 147299 _ f . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( new TextComponentTranslation ( " demo . help . movement " , new Object [ ] { gamesettings . field _ 74351 _ w . getDisplayName ( ) , gamesettings . field _ 74370 _ x . getDisplayName ( ) , gamesettings . field _ 74368 _ y . getDisplayName ( ) , gamesettings . field _ 74366 _ z . getDisplayName ( ) } ) ) ; <nl> + } <nl> + else if ( f = = 102 . 0F ) <nl> + { <nl> + - this . field _ 147299 _ f . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( new TextComponentTranslation ( " demo . help . jump " , new Object [ ] { GameSettings . func _ 74298 _ c ( gamesettings . field _ 74314 _ A . func _ 151463 _ i ( ) ) } ) ) ; <nl> + + this . field _ 147299 _ f . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( new TextComponentTranslation ( " demo . help . jump " , new Object [ ] { gamesettings . field _ 74314 _ A . getDisplayName ( ) } ) ) ; <nl> + } <nl> + else if ( f = = 103 . 0F ) <nl> + { <nl> + - this . field _ 147299 _ f . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( new TextComponentTranslation ( " demo . help . inventory " , new Object [ ] { GameSettings . func _ 74298 _ c ( gamesettings . field _ 151445 _ Q . func _ 151463 _ i ( ) ) } ) ) ; <nl> + + this . field _ 147299 _ f . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( new TextComponentTranslation ( " demo . help . inventory " , new Object [ ] { gamesettings . field _ 151445 _ Q . getDisplayName ( ) } ) ) ; <nl> + } <nl> + } <nl> + else if ( i = = 6 ) <nl> @ @ - 1378 , 7 + 1389 , 7 @ @ <nl> <nl> if ( entity instanceof EntityLivingBase ) <nl> diff - - git a / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch b / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch <nl> index a62941d . . 3ed2135 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch <nl> @ @ - 20 , 7 + 20 , 7 @ @ <nl> if ( astring [ 0 ] . equals ( " key _ " + keybinding . func _ 151464 _ g ( ) ) ) <nl> { <nl> keybinding . func _ 151462 _ b ( Integer . parseInt ( astring [ 1 ] ) ) ; <nl> - + if ( astring . length = = 3 ) keybinding . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . valueOf ( astring [ 2 ] ) ) ; <nl> + + if ( astring . length = = 3 ) keybinding . setKeyModifierAndCode ( net . minecraftforge . client . settings . KeyModifier . valueOf ( astring [ 2 ] ) , Integer . parseInt ( astring [ 1 ] ) ) ; <nl> } <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch b / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch <nl> index f80019f . . d238490 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch <nl> @ @ - 57 , 7 + 57 , 7 @ @ <nl> } <nl> <nl> public String func _ 151466 _ e ( ) <nl> - @ @ - 158 , 4 + 158 , 102 @ @ <nl> + @ @ - 158 , 4 + 158 , 130 @ @ <nl> <nl> return i ; <nl> } <nl> @ @ - 66 , 7 + 66 , 6 @ @ <nl> + private net . minecraftforge . client . settings . KeyModifier keyModifierDefault = net . minecraftforge . client . settings . KeyModifier . NONE ; <nl> + private net . minecraftforge . client . settings . KeyModifier keyModifier = net . minecraftforge . client . settings . KeyModifier . NONE ; <nl> + private net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext = net . minecraftforge . client . settings . KeyConflictContext . UNIVERSAL ; <nl> - + private boolean allowsKeyModifiers = false ; <nl> + <nl> + / * * <nl> + * Convenience constructor for creating KeyBindings with keyConflictContext set . <nl> @ @ - 88 , 24 + 87 , 16 @ @ <nl> + this . keyConflictContext = keyConflictContext ; <nl> + this . keyModifier = keyModifier ; <nl> + this . keyModifierDefault = keyModifier ; <nl> - + if ( keyModifier ! = net . minecraftforge . client . settings . KeyModifier . NONE ) <nl> - + setAllowsKeyModifiers ( ) ; <nl> + + if ( this . keyModifier . matches ( keyCode ) ) <nl> + + { <nl> + + this . keyModifier = net . minecraftforge . client . settings . KeyModifier . NONE ; <nl> + + } <nl> + field _ 74516 _ a . add ( this ) ; <nl> + field _ 74514 _ b . addKey ( keyCode , this ) ; <nl> + field _ 151473 _ c . add ( category ) ; <nl> + } <nl> + <nl> + / * * <nl> - + * Call this method to let Forge know that your KeyBinding and code can handle players setting modifiers . <nl> - + * Handling modifiers is made easy by using { @ link KeyBinding # isActiveAndMatches ( int ) } or { @ link KeyBinding # isPressed ( ) } <nl> - + * Vanilla code does not handle modifiers , so vanilla keyBinds do not have this set . <nl> - + * / <nl> - + public void setAllowsKeyModifiers ( ) <nl> - + { <nl> - + this . allowsKeyModifiers = true ; <nl> - + } <nl> - + <nl> - + / * * <nl> + * Checks that the key conflict context and modifier are active , and that the keyCode matches this binding . <nl> + * / <nl> + public boolean isActiveAndMatches ( int keyCode ) <nl> @ @ - 130 , 33 + 121 , 70 @ @ <nl> + <nl> + public net . minecraftforge . client . settings . KeyModifier getKeyModifier ( ) <nl> + { <nl> - + if ( allowsKeyModifiers ) <nl> - + { <nl> - + return keyModifier ; <nl> - + } <nl> - + else <nl> - + { <nl> - + return net . minecraftforge . client . settings . KeyModifier . NOT _ SUPPORTED ; <nl> - + } <nl> + + return keyModifier ; <nl> + } <nl> + <nl> - + public void setKeyModifier ( net . minecraftforge . client . settings . KeyModifier keyModifier ) <nl> + + public void setKeyModifierAndCode ( net . minecraftforge . client . settings . KeyModifier keyModifier , int keyCode ) <nl> + { <nl> + + this . field _ 74512 _ d = keyCode ; <nl> + + if ( keyModifier . matches ( keyCode ) ) <nl> + + { <nl> + + keyModifier = net . minecraftforge . client . settings . KeyModifier . NONE ; <nl> + + } <nl> + field _ 74514 _ b . removeKey ( this ) ; <nl> + this . keyModifier = keyModifier ; <nl> - + field _ 74514 _ b . addKey ( field _ 74512 _ d , this ) ; <nl> + + field _ 74514 _ b . addKey ( keyCode , this ) ; <nl> + + } <nl> + + <nl> + + public void setToDefault ( ) <nl> + + { <nl> + + setKeyModifierAndCode ( getKeyModifierDefault ( ) , func _ 151469 _ h ( ) ) ; <nl> + + } <nl> + + <nl> + + public boolean isSetToDefaultValue ( ) <nl> + + { <nl> + + return func _ 151463 _ i ( ) = = func _ 151469 _ h ( ) & & getKeyModifier ( ) = = getKeyModifierDefault ( ) ; <nl> + } <nl> + <nl> + + 	 / * * <nl> + + * Returns true when the other keyBinding conflicts with this one <nl> + + * / <nl> + public boolean conflicts ( KeyBinding other ) <nl> + { <nl> + if ( getKeyConflictContext ( ) . conflicts ( other . getKeyConflictContext ( ) ) | | other . getKeyConflictContext ( ) . conflicts ( getKeyConflictContext ( ) ) ) <nl> + { <nl> - + if ( ! allowsKeyModifiers | | ! other . allowsKeyModifiers | | getKeyModifier ( ) = = other . getKeyModifier ( ) ) <nl> + + net . minecraftforge . client . settings . KeyModifier keyModifier = getKeyModifier ( ) ; <nl> + + net . minecraftforge . client . settings . KeyModifier otherKeyModifier = other . getKeyModifier ( ) ; <nl> + + if ( keyModifier . matches ( other . func _ 151463 _ i ( ) ) | | otherKeyModifier . matches ( func _ 151463 _ i ( ) ) ) <nl> + + { <nl> + + return true ; <nl> + + } <nl> + + else if ( keyModifier = = otherKeyModifier | | keyModifier = = net . minecraftforge . client . settings . KeyModifier . NONE | | otherKeyModifier = = net . minecraftforge . client . settings . KeyModifier . NONE ) <nl> + { <nl> + return func _ 151463 _ i ( ) = = other . func _ 151463 _ i ( ) ; <nl> + } <nl> + } <nl> + return false ; <nl> + } <nl> + + <nl> + + / * * <nl> + + * Returns true when one of the bindings ' key codes conflicts with the other ' s modifier . <nl> + + * / <nl> + + public boolean hasKeyCodeModifierConflict ( KeyBinding other ) <nl> + + { <nl> + + if ( getKeyConflictContext ( ) . conflicts ( other . getKeyConflictContext ( ) ) | | other . getKeyConflictContext ( ) . conflicts ( getKeyConflictContext ( ) ) ) <nl> + + { <nl> + + if ( getKeyModifier ( ) . matches ( other . func _ 151463 _ i ( ) ) | | other . getKeyModifier ( ) . matches ( func _ 151463 _ i ( ) ) ) <nl> + + { <nl> + + return true ; <nl> + + } <nl> + + } <nl> + + return false ; <nl> + + } <nl> + + <nl> + + public String getDisplayName ( ) <nl> + + { <nl> + + return getKeyModifier ( ) . getLocalizedComboName ( func _ 151463 _ i ( ) ) ; <nl> + + } <nl> + / * * * * * * * * * * * * * * * * * * Forge End * * * * * * * * * * * * * * * * * * * * * * * * * * * * * / <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java b / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java <nl> index 4524544 . . b50af08 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java <nl> + + + b / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java <nl> @ @ - 21 , 13 + 21 , 12 @ @ public class KeyBindingMap <nl> <nl> public KeyBinding lookupActive ( int keyCode ) <nl> { <nl> - KeyModifier activeModifier = KeyModifier . isKeyCodeModifier ( keyCode ) ? KeyModifier . NONE : KeyModifier . getActiveModifier ( ) ; <nl> - KeyBinding binding = getBinding ( keyCode , activeModifier ) ; <nl> - if ( binding ! = null ) <nl> + KeyModifier activeModifier = KeyModifier . getActiveModifier ( ) ; <nl> + if ( activeModifier . matches ( keyCode ) ) <nl> { <nl> - return binding ; <nl> + activeModifier = KeyModifier . NONE ; <nl> } <nl> - return getBinding ( keyCode , KeyModifier . NOT _ SUPPORTED ) ; <nl> + return getBinding ( keyCode , activeModifier ) ; <nl> } <nl> <nl> private KeyBinding getBinding ( int keyCode , KeyModifier keyModifier ) <nl> diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyModifier . java b / src / main / java / net / minecraftforge / client / settings / KeyModifier . java <nl> index 54c0c88 . . 9838251 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / settings / KeyModifier . java <nl> + + + b / src / main / java / net / minecraftforge / client / settings / KeyModifier . java <nl> @ @ - 3 , 12 + 3 , 13 @ @ package net . minecraftforge . client . settings ; <nl> import net . minecraft . client . Minecraft ; <nl> import net . minecraft . client . gui . GuiScreen ; <nl> import net . minecraft . client . resources . I18n ; <nl> + import net . minecraft . client . settings . GameSettings ; <nl> import org . lwjgl . input . Keyboard ; <nl> <nl> public enum KeyModifier { <nl> CONTROL { <nl> @ Override <nl> - protected boolean matches ( int keyCode ) <nl> + public boolean matches ( int keyCode ) <nl> { <nl> if ( Minecraft . isRunningOnMac ) <nl> { <nl> @ @ - 27 , 14 + 28 , 15 @ @ public enum KeyModifier { <nl> } <nl> <nl> @ Override <nl> - public String getLocalizedComboName ( String keyName ) <nl> + public String getLocalizedComboName ( int keyCode ) <nl> { <nl> + String keyName = GameSettings . getKeyDisplayString ( keyCode ) ; <nl> return I18n . format ( " forge . controlsgui . control " , keyName ) ; <nl> } <nl> } , <nl> SHIFT { <nl> @ Override <nl> - protected boolean matches ( int keyCode ) <nl> + public boolean matches ( int keyCode ) <nl> { <nl> return keyCode = = Keyboard . KEY _ LSHIFT | | keyCode = = Keyboard . KEY _ RSHIFT ; <nl> } <nl> @ @ - 46 , 14 + 48 , 15 @ @ public enum KeyModifier { <nl> } <nl> <nl> @ Override <nl> - public String getLocalizedComboName ( String keyName ) <nl> + public String getLocalizedComboName ( int keyCode ) <nl> { <nl> + String keyName = GameSettings . getKeyDisplayString ( keyCode ) ; <nl> return I18n . format ( " forge . controlsgui . shift " , keyName ) ; <nl> } <nl> } , <nl> ALT { <nl> @ Override <nl> - protected boolean matches ( int keyCode ) <nl> + public boolean matches ( int keyCode ) <nl> { <nl> return keyCode = = Keyboard . KEY _ LMENU | | keyCode = = Keyboard . KEY _ RMENU ; <nl> } <nl> @ @ - 65 , 35 + 68 , 17 @ @ public enum KeyModifier { <nl> } <nl> <nl> @ Override <nl> - public String getLocalizedComboName ( String keyName ) <nl> + public String getLocalizedComboName ( int keyCode ) <nl> { <nl> + String keyName = GameSettings . getKeyDisplayString ( keyCode ) ; <nl> return I18n . format ( " forge . controlsgui . alt " , keyName ) ; <nl> } <nl> } , <nl> NONE { <nl> @ Override <nl> - protected boolean matches ( int keyCode ) <nl> + public boolean matches ( int keyCode ) <nl> { <nl> - return true ; <nl> - } <nl> - <nl> - @ Override <nl> - public boolean isActive ( ) <nl> - { <nl> - return ! SHIFT . isActive ( ) & & ! CONTROL . isActive ( ) & & ! ALT . isActive ( ) ; <nl> - } <nl> - <nl> - @ Override <nl> - public String getLocalizedComboName ( String keyName ) <nl> - { <nl> - return keyName ; <nl> - } <nl> - } , <nl> - NOT _ SUPPORTED { <nl> - @ Override <nl> - protected boolean matches ( int keyCode ) <nl> - { <nl> - return true ; <nl> + return false ; <nl> } <nl> <nl> @ Override <nl> @ @ - 103 , 9 + 88 , 9 @ @ public enum KeyModifier { <nl> } <nl> <nl> @ Override <nl> - public String getLocalizedComboName ( String keyName ) <nl> + public String getLocalizedComboName ( int keyCode ) <nl> { <nl> - return keyName ; <nl> + return GameSettings . getKeyDisplayString ( keyCode ) ; <nl> } <nl> } ; <nl> <nl> @ @ - 135 , 9 + 120 , 9 @ @ public enum KeyModifier { <nl> return false ; <nl> } <nl> <nl> - protected abstract boolean matches ( int keyCode ) ; <nl> + public abstract boolean matches ( int keyCode ) ; <nl> <nl> public abstract boolean isActive ( ) ; <nl> <nl> - public abstract String getLocalizedComboName ( String keyName ) ; <nl> + public abstract String getLocalizedComboName ( int keyCode ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> index 7ceb60e . . 3d1788e 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> @ @ - 474 , 7 + 474 , 15 @ @ <nl> } <nl> <nl> public boolean func _ 70002 _ Q ( ) <nl> - @ @ - 3192 , 4 + 3084 , 10 @ @ <nl> + @ @ - 3066 , 6 + 2958 , 7 @ @ <nl> + this . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( ScreenShotHelper . func _ 148260 _ a ( this . field _ 71412 _ D , this . field _ 71443 _ c , this . field _ 71440 _ d , this . field _ 147124 _ at ) ) ; <nl> + } <nl> + } <nl> + + else if ( this . field _ 71462 _ r instanceof GuiControls ) ( ( GuiControls ) this . field _ 71462 _ r ) . field _ 146491 _ f = null ; <nl> + } <nl> + } <nl> + } <nl> + @ @ - 3192 , 4 + 3085 , 10 @ @ <nl> { <nl> return this . field _ 184127 _ aH ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch <nl> new file mode 100644 <nl> index 0000000 . . ee31589 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch <nl> @ @ - 0 , 0 + 1 , 49 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiControls . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiControls . java <nl> + @ @ - 66 , 6 + 66 , 7 @ @ <nl> + for ( KeyBinding keybinding : this . field _ 146297 _ k . field _ 71474 _ y . field _ 74324 _ K ) <nl> + { <nl> + keybinding . func _ 151462 _ b ( keybinding . func _ 151469 _ h ( ) ) ; <nl> + + keybinding . setKeyModifier ( keybinding . getKeyModifierDefault ( ) ) ; <nl> + } <nl> + <nl> + KeyBinding . func _ 74508 _ b ( ) ; <nl> + @ @ - 81 , 6 + 82 , 7 @ @ <nl> + { <nl> + if ( this . field _ 146491 _ f ! = null ) <nl> + { <nl> + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; <nl> + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , - 100 + p _ 73864 _ 3 _ ) ; <nl> + this . field _ 146491 _ f = null ; <nl> + KeyBinding . func _ 74508 _ b ( ) ; <nl> + @ @ - 105 , 17 + 107 , 21 @ @ <nl> + { <nl> + if ( p _ 73869 _ 2 _ = = 1 ) <nl> + { <nl> + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . NONE ) ; <nl> + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , 0 ) ; <nl> + } <nl> + else if ( p _ 73869 _ 2 _ ! = 0 ) <nl> + { <nl> + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ? net . minecraftforge . client . settings . KeyModifier . NONE : net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; <nl> + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , p _ 73869 _ 2 _ ) ; <nl> + } <nl> + else if ( p _ 73869 _ 1 _ > 0 ) <nl> + { <nl> + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ? net . minecraftforge . client . settings . KeyModifier . NONE : net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; <nl> + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , p _ 73869 _ 1 _ + 256 ) ; <nl> + } <nl> + <nl> + + if ( ! net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ) <nl> + this . field _ 146491 _ f = null ; <nl> + this . field _ 152177 _ g = Minecraft . func _ 71386 _ F ( ) ; <nl> + KeyBinding . func _ 74508 _ b ( ) ; <nl> + @ @ - 135 , 7 + 141 , 7 @ @ <nl> + <nl> + for ( KeyBinding keybinding : this . field _ 146497 _ i . field _ 74324 _ K ) <nl> + { <nl> + - if ( keybinding . func _ 151463 _ i ( ) ! = keybinding . func _ 151469 _ h ( ) ) <nl> + + if ( keybinding . func _ 151463 _ i ( ) ! = keybinding . func _ 151469 _ h ( ) | | keybinding . getKeyModifier ( ) ! = keybinding . getKeyModifierDefault ( ) ) <nl> + { <nl> + flag = false ; <nl> + break ; <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch <nl> new file mode 100644 <nl> index 0000000 . . b3c50b3 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch <nl> @ @ - 0 , 0 + 1 , 53 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java <nl> + @ @ - 62 , 7 + 62 , 7 @ @ <nl> + <nl> + protected int func _ 148137 _ d ( ) <nl> + { <nl> + - return super . func _ 148137 _ d ( ) + 15 ; <nl> + + return super . func _ 148137 _ d ( ) + 35 ; <nl> + } <nl> + <nl> + public int func _ 148139 _ c ( ) <nl> + @ @ - 113 , 7 + 113 , 7 @ @ <nl> + { <nl> + this . field _ 148282 _ b = p _ i45029 _ 2 _ ; <nl> + this . field _ 148283 _ c = I18n . func _ 135052 _ a ( p _ i45029 _ 2 _ . func _ 151464 _ g ( ) , new Object [ 0 ] ) ; <nl> + - this . field _ 148280 _ d = new GuiButton ( 0 , 0 , 0 , 75 , 20 , I18n . func _ 135052 _ a ( p _ i45029 _ 2 _ . func _ 151464 _ g ( ) , new Object [ 0 ] ) ) ; <nl> + + this . field _ 148280 _ d = new GuiButton ( 0 , 0 , 0 , 95 , 20 , I18n . func _ 135052 _ a ( p _ i45029 _ 2 _ . func _ 151464 _ g ( ) , new Object [ 0 ] ) ) ; <nl> + this . field _ 148281 _ e = new GuiButton ( 0 , 0 , 0 , 50 , 20 , I18n . func _ 135052 _ a ( " controls . reset " , new Object [ 0 ] ) ) ; <nl> + } <nl> + <nl> + @ @ - 121 , 20 + 121 , 20 @ @ <nl> + { <nl> + boolean flag = GuiKeyBindingList . this . field _ 148191 _ k . field _ 146491 _ f = = this . field _ 148282 _ b ; <nl> + GuiKeyBindingList . this . field _ 148189 _ l . field _ 71466 _ p . func _ 78276 _ b ( this . field _ 148283 _ c , p _ 180790 _ 2 _ + 90 - GuiKeyBindingList . this . field _ 148188 _ n , p _ 180790 _ 3 _ + p _ 180790 _ 5 _ / 2 - GuiKeyBindingList . this . field _ 148189 _ l . field _ 71466 _ p . field _ 78288 _ b / 2 , 16777215 ) ; <nl> + - this . field _ 148281 _ e . field _ 146128 _ h = p _ 180790 _ 2 _ + 190 ; <nl> + + this . field _ 148281 _ e . field _ 146128 _ h = p _ 180790 _ 2 _ + 210 ; <nl> + this . field _ 148281 _ e . field _ 146129 _ i = p _ 180790 _ 3 _ ; <nl> + - this . field _ 148281 _ e . field _ 146124 _ l = this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = this . field _ 148282 _ b . func _ 151469 _ h ( ) ; <nl> + + this . field _ 148281 _ e . field _ 146124 _ l = this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = this . field _ 148282 _ b . func _ 151469 _ h ( ) | | this . field _ 148282 _ b . getKeyModifier ( ) ! = this . field _ 148282 _ b . getKeyModifierDefault ( ) ; <nl> + this . field _ 148281 _ e . func _ 146112 _ a ( GuiKeyBindingList . this . field _ 148189 _ l , p _ 180790 _ 6 _ , p _ 180790 _ 7 _ ) ; <nl> + this . field _ 148280 _ d . field _ 146128 _ h = p _ 180790 _ 2 _ + 105 ; <nl> + this . field _ 148280 _ d . field _ 146129 _ i = p _ 180790 _ 3 _ ; <nl> + - this . field _ 148280 _ d . field _ 146126 _ j = GameSettings . func _ 74298 _ c ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ) ; <nl> + + this . field _ 148280 _ d . field _ 146126 _ j = this . field _ 148282 _ b . getKeyModifier ( ) . getLocalizedComboName ( GameSettings . func _ 74298 _ c ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ) ) ; <nl> + boolean flag1 = false ; <nl> + <nl> + if ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = 0 ) <nl> + { <nl> + for ( KeyBinding keybinding : GuiKeyBindingList . this . field _ 148189 _ l . field _ 71474 _ y . field _ 74324 _ K ) <nl> + { <nl> + - if ( keybinding ! = this . field _ 148282 _ b & & keybinding . func _ 151463 _ i ( ) = = this . field _ 148282 _ b . func _ 151463 _ i ( ) ) <nl> + + if ( keybinding ! = this . field _ 148282 _ b & & keybinding . conflicts ( this . field _ 148282 _ b ) ) <nl> + { <nl> + flag1 = true ; <nl> + break ; <nl> + @ @ - 163 , 6 + 163 , 7 @ @ <nl> + } <nl> + else if ( this . field _ 148281 _ e . func _ 146116 _ c ( GuiKeyBindingList . this . field _ 148189 _ l , p _ 148278 _ 2 _ , p _ 148278 _ 3 _ ) ) <nl> + { <nl> + + this . field _ 148282 _ b . setKeyModifier ( this . field _ 148282 _ b . getKeyModifierDefault ( ) ) ; <nl> + GuiKeyBindingList . this . field _ 148189 _ l . field _ 71474 _ y . func _ 151440 _ a ( this . field _ 148282 _ b , this . field _ 148282 _ b . func _ 151469 _ h ( ) ) ; <nl> + KeyBinding . func _ 74508 _ b ( ) ; <nl> + return true ; <nl> diff - - git a / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch b / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch <nl> index 5a85b1f . . a62941d 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch <nl> @ @ - 1 , 6 + 1 , 30 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / client / settings / GameSettings . java <nl> + + + . . / src - work / minecraft / net / minecraft / client / settings / GameSettings . java <nl> - @ @ - 887 , 6 + 887 , 7 @ @ <nl> + @ @ - 147 , 6 + 147 , 7 @ @ <nl> + <nl> + public GameSettings ( Minecraft p _ i46326 _ 1 _ , File p _ i46326 _ 2 _ ) <nl> + { <nl> + + setForgeKeybindProperties ( ) ; <nl> + this . field _ 74324 _ K = ( KeyBinding [ ] ) ArrayUtils . addAll ( new KeyBinding [ ] { this . field _ 74312 _ F , this . field _ 74313 _ G , this . field _ 74351 _ w , this . field _ 74370 _ x , this . field _ 74368 _ y , this . field _ 74366 _ z , this . field _ 74314 _ A , this . field _ 74311 _ E , this . field _ 151444 _ V , this . field _ 74316 _ C , this . field _ 151445 _ Q , this . field _ 74310 _ D , this . field _ 74321 _ H , this . field _ 74322 _ I , this . field _ 74323 _ J , this . field _ 151447 _ Z , this . field _ 151457 _ aa , this . field _ 151458 _ ab , this . field _ 152395 _ am , this . field _ 178883 _ an , this . field _ 186718 _ X } , this . field _ 151456 _ ac ) ; <nl> + this . field _ 74318 _ M = EnumDifficulty . NORMAL ; <nl> + this . field _ 74332 _ R = " " ; <nl> + @ @ - 171 , 6 + 172 , 7 @ @ <nl> + <nl> + public GameSettings ( ) <nl> + { <nl> + + setForgeKeybindProperties ( ) ; <nl> + this . field _ 74324 _ K = ( KeyBinding [ ] ) ArrayUtils . addAll ( new KeyBinding [ ] { this . field _ 74312 _ F , this . field _ 74313 _ G , this . field _ 74351 _ w , this . field _ 74370 _ x , this . field _ 74368 _ y , this . field _ 74366 _ z , this . field _ 74314 _ A , this . field _ 74311 _ E , this . field _ 151444 _ V , this . field _ 74316 _ C , this . field _ 151445 _ Q , this . field _ 74310 _ D , this . field _ 74321 _ H , this . field _ 74322 _ I , this . field _ 74323 _ J , this . field _ 151447 _ Z , this . field _ 151457 _ aa , this . field _ 151458 _ ab , this . field _ 152395 _ am , this . field _ 178883 _ an , this . field _ 186718 _ X } , this . field _ 151456 _ ac ) ; <nl> + this . field _ 74318 _ M = EnumDifficulty . NORMAL ; <nl> + this . field _ 74332 _ R = " " ; <nl> + @ @ - 846 , 6 + 848 , 7 @ @ <nl> + if ( astring [ 0 ] . equals ( " key _ " + keybinding . func _ 151464 _ g ( ) ) ) <nl> + { <nl> + keybinding . func _ 151462 _ b ( Integer . parseInt ( astring [ 1 ] ) ) ; <nl> + + if ( astring . length = = 3 ) keybinding . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . valueOf ( astring [ 2 ] ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ @ - 887 , 6 + 890 , 7 @ @ <nl> <nl> public void func _ 74303 _ b ( ) <nl> { <nl> @ @ - 8 , 3 + 32 , 39 @ @ <nl> try <nl> { <nl> PrintWriter printwriter = new PrintWriter ( new FileWriter ( this . field _ 74354 _ ai ) ) ; <nl> + @ @ - 955 , 7 + 959 , 8 @ @ <nl> + <nl> + for ( KeyBinding keybinding : this . field _ 74324 _ K ) <nl> + { <nl> + - printwriter . println ( " key _ " + keybinding . func _ 151464 _ g ( ) + " : " + keybinding . func _ 151463 _ i ( ) ) ; <nl> + + String keyString = " key _ " + keybinding . func _ 151464 _ g ( ) + " : " + keybinding . func _ 151463 _ i ( ) ; <nl> + + printwriter . println ( keybinding . getKeyModifier ( ) ! = net . minecraftforge . client . settings . KeyModifier . NONE ? keyString + " : " + keybinding . getKeyModifier ( ) : keyString ) ; <nl> + } <nl> + <nl> + for ( SoundCategory soundcategory : SoundCategory . values ( ) ) <nl> + @ @ - 1184 , 4 + 1189 , 25 @ @ <nl> + return p _ 148264 _ 1 _ ; <nl> + } <nl> + } <nl> + + <nl> + + / * * * * * * * Forge Start * * * * * * * * * * * / <nl> + + private void setForgeKeybindProperties ( ) { <nl> + + net . minecraftforge . client . settings . KeyConflictContext inGame = net . minecraftforge . client . settings . KeyConflictContext . IN _ GAME ; <nl> + + field _ 74351 _ w . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74370 _ x . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74368 _ y . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74366 _ z . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74314 _ A . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74311 _ E . setKeyConflictContext ( inGame ) ; <nl> + + field _ 151444 _ V . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74312 _ F . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74322 _ I . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74310 _ D . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74321 _ H . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74323 _ J . setKeyConflictContext ( inGame ) ; <nl> + + field _ 151457 _ aa . setKeyConflictContext ( inGame ) ; <nl> + + field _ 151458 _ ab . setKeyConflictContext ( inGame ) ; <nl> + + field _ 186718 _ X . setKeyConflictContext ( inGame ) ; <nl> + + } <nl> + + / * * * * * * * Forge End * * * * * * * * * * * / <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch b / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 41a80a2 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch <nl> @ @ - 0 , 0 + 1 , 162 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / settings / KeyBinding . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / settings / KeyBinding . java <nl> + @ @ - 14 , 7 + 14 , 7 @ @ <nl> + public class KeyBinding implements Comparable < KeyBinding > <nl> + { <nl> + private static final List < KeyBinding > field _ 74516 _ a = Lists . < KeyBinding > newArrayList ( ) ; <nl> + - private static final IntHashMap < KeyBinding > field _ 74514 _ b = new IntHashMap ( ) ; <nl> + + private static final net . minecraftforge . client . settings . KeyBindingMap field _ 74514 _ b = new net . minecraftforge . client . settings . KeyBindingMap ( ) ; <nl> + private static final Set < String > field _ 151473 _ c = Sets . < String > newHashSet ( ) ; <nl> + private final String field _ 74515 _ c ; <nl> + private final int field _ 151472 _ e ; <nl> + @ @ - 27 , 7 + 27 , 7 @ @ <nl> + { <nl> + if ( p _ 74507 _ 0 _ ! = 0 ) <nl> + { <nl> + - KeyBinding keybinding = ( KeyBinding ) field _ 74514 _ b . func _ 76041 _ a ( p _ 74507 _ 0 _ ) ; <nl> + + KeyBinding keybinding = field _ 74514 _ b . lookupActive ( p _ 74507 _ 0 _ ) ; <nl> + <nl> + if ( keybinding ! = null ) <nl> + { <nl> + @ @ - 40 , 7 + 40 , 7 @ @ <nl> + { <nl> + if ( p _ 74510 _ 0 _ ! = 0 ) <nl> + { <nl> + - KeyBinding keybinding = ( KeyBinding ) field _ 74514 _ b . func _ 76041 _ a ( p _ 74510 _ 0 _ ) ; <nl> + + for ( KeyBinding keybinding : field _ 74514 _ b . lookupAll ( p _ 74510 _ 0 _ ) ) <nl> + <nl> + if ( keybinding ! = null ) <nl> + { <nl> + @ @ - 74 , 11 + 74 , 11 @ @ <nl> + <nl> + public static void func _ 74508 _ b ( ) <nl> + { <nl> + - field _ 74514 _ b . func _ 76046 _ c ( ) ; <nl> + + field _ 74514 _ b . clearMap ( ) ; <nl> + <nl> + for ( KeyBinding keybinding : field _ 74516 _ a ) <nl> + { <nl> + - field _ 74514 _ b . func _ 76038 _ a ( keybinding . field _ 74512 _ d , keybinding ) ; <nl> + + field _ 74514 _ b . addKey ( keybinding . field _ 74512 _ d , keybinding ) ; <nl> + } <nl> + } <nl> + <nl> + @ @ - 94 , 13 + 94 , 13 @ @ <nl> + this . field _ 151472 _ e = p _ i45001 _ 2 _ ; <nl> + this . field _ 151471 _ f = p _ i45001 _ 3 _ ; <nl> + field _ 74516 _ a . add ( this ) ; <nl> + - field _ 74514 _ b . func _ 76038 _ a ( p _ i45001 _ 2 _ , this ) ; <nl> + + field _ 74514 _ b . addKey ( p _ i45001 _ 2 _ , this ) ; <nl> + field _ 151473 _ c . add ( p _ i45001 _ 3 _ ) ; <nl> + } <nl> + <nl> + public boolean func _ 151470 _ d ( ) <nl> + { <nl> + - return this . field _ 74513 _ e ; <nl> + + return this . field _ 74513 _ e & & getKeyConflictContext ( ) . isActive ( ) & & ( ! allowsKeyModifiers | | getKeyModifier ( ) . isActive ( ) ) ; <nl> + } <nl> + <nl> + public String func _ 151466 _ e ( ) <nl> + @ @ - 158 , 4 + 158 , 102 @ @ <nl> + <nl> + return i ; <nl> + } <nl> + + <nl> + + / * * * * * * * * * * * * * * * * * * Forge Start * * * * * * * * * * * * * * * * * * * * * * * * * * * * * / <nl> + + private net . minecraftforge . client . settings . KeyModifier keyModifierDefault = net . minecraftforge . client . settings . KeyModifier . NONE ; <nl> + + private net . minecraftforge . client . settings . KeyModifier keyModifier = net . minecraftforge . client . settings . KeyModifier . NONE ; <nl> + + private net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext = net . minecraftforge . client . settings . KeyConflictContext . UNIVERSAL ; <nl> + + private boolean allowsKeyModifiers = false ; <nl> + + <nl> + + / * * <nl> + + * Convenience constructor for creating KeyBindings with keyConflictContext set . <nl> + + * / <nl> + + public KeyBinding ( String description , net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext , int keyCode , String category ) <nl> + + { <nl> + + this ( description , keyConflictContext , net . minecraftforge . client . settings . KeyModifier . NONE , keyCode , category ) ; <nl> + + } <nl> + + <nl> + + / * * <nl> + + * Convenience constructor for creating KeyBindings with keyConflictContext and keyModifier set . <nl> + + * / <nl> + + public KeyBinding ( String description , net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext , net . minecraftforge . client . settings . KeyModifier keyModifier , int keyCode , String category ) <nl> + + { <nl> + + this . field _ 74515 _ c = description ; <nl> + + this . field _ 74512 _ d = keyCode ; <nl> + + this . field _ 151472 _ e = keyCode ; <nl> + + this . field _ 151471 _ f = category ; <nl> + + this . keyConflictContext = keyConflictContext ; <nl> + + this . keyModifier = keyModifier ; <nl> + + this . keyModifierDefault = keyModifier ; <nl> + + if ( keyModifier ! = net . minecraftforge . client . settings . KeyModifier . NONE ) <nl> + + setAllowsKeyModifiers ( ) ; <nl> + + field _ 74516 _ a . add ( this ) ; <nl> + + field _ 74514 _ b . addKey ( keyCode , this ) ; <nl> + + field _ 151473 _ c . add ( category ) ; <nl> + + } <nl> + + <nl> + + / * * <nl> + + * Call this method to let Forge know that your KeyBinding and code can handle players setting modifiers . <nl> + + * Handling modifiers is made easy by using { @ link KeyBinding # isActiveAndMatches ( int ) } or { @ link KeyBinding # isPressed ( ) } <nl> + + * Vanilla code does not handle modifiers , so vanilla keyBinds do not have this set . <nl> + + * / <nl> + + public void setAllowsKeyModifiers ( ) <nl> + + { <nl> + + this . allowsKeyModifiers = true ; <nl> + + } <nl> + + <nl> + + / * * <nl> + + * Checks that the key conflict context and modifier are active , and that the keyCode matches this binding . <nl> + + * / <nl> + + public boolean isActiveAndMatches ( int keyCode ) <nl> + + { <nl> + + return keyCode = = this . func _ 151463 _ i ( ) & & getKeyConflictContext ( ) . isActive ( ) & & ( ! allowsKeyModifiers | | getKeyModifier ( ) . isActive ( ) ) ; <nl> + + } <nl> + + <nl> + + public void setKeyConflictContext ( net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext ) <nl> + + { <nl> + + this . keyConflictContext = keyConflictContext ; <nl> + + } <nl> + + <nl> + + public net . minecraftforge . client . settings . IKeyConflictContext getKeyConflictContext ( ) <nl> + + { <nl> + + return keyConflictContext ; <nl> + + } <nl> + + <nl> + + public net . minecraftforge . client . settings . KeyModifier getKeyModifierDefault ( ) <nl> + + { <nl> + + return keyModifierDefault ; <nl> + + } <nl> + + <nl> + + public net . minecraftforge . client . settings . KeyModifier getKeyModifier ( ) <nl> + + { <nl> + + if ( allowsKeyModifiers ) <nl> + + { <nl> + + return keyModifier ; <nl> + + } <nl> + + else <nl> + + { <nl> + + return net . minecraftforge . client . settings . KeyModifier . NONE ; <nl> + + } <nl> + + } <nl> + + <nl> + + public void setKeyModifier ( net . minecraftforge . client . settings . KeyModifier keyModifier ) <nl> + + { <nl> + + field _ 74514 _ b . removeKey ( this ) ; <nl> + + this . keyModifier = keyModifier ; <nl> + + field _ 74514 _ b . addKey ( field _ 74512 _ d , this ) ; <nl> + + } <nl> + + <nl> + + public boolean conflicts ( KeyBinding other ) <nl> + + { <nl> + + if ( getKeyConflictContext ( ) . conflicts ( other . getKeyConflictContext ( ) ) | | other . getKeyConflictContext ( ) . conflicts ( getKeyConflictContext ( ) ) ) <nl> + + { <nl> + + if ( ! allowsKeyModifiers | | ! other . allowsKeyModifiers | | getKeyModifier ( ) = = other . getKeyModifier ( ) ) <nl> + + { <nl> + + return func _ 151463 _ i ( ) = = other . func _ 151463 _ i ( ) ; <nl> + + } <nl> + + } <nl> + + return false ; <nl> + + } <nl> + + / * * * * * * * * * * * * * * * * * * Forge End * * * * * * * * * * * * * * * * * * * * * * * * * * * * * / <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / client / settings / IKeyConflictContext . java b / src / main / java / net / minecraftforge / client / settings / IKeyConflictContext . java <nl> new file mode 100644 <nl> index 0000000 . . 0029721 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / settings / IKeyConflictContext . java <nl> @ @ - 0 , 0 + 1 , 20 @ @ <nl> + package net . minecraftforge . client . settings ; <nl> + <nl> + import net . minecraft . client . settings . KeyBinding ; <nl> + <nl> + / * * <nl> + * Defines the context that a { @ link KeyBinding } is used . <nl> + * Key conflicts occur when a { @ link KeyBinding } has the same { @ link IKeyConflictContext } and has conflicting modifiers and keyCodes . <nl> + * / <nl> + public interface IKeyConflictContext { <nl> + / * * <nl> + * @ return true if conditions are met to activate { @ link KeyBinding } s with this context <nl> + * / <nl> + boolean isActive ( ) ; <nl> + <nl> + / * * <nl> + * @ return true if the other context can have { @ link KeyBinding } conflicts with this one . <nl> + * This will be called on both contexts to check for conflicts . <nl> + * / <nl> + boolean conflicts ( IKeyConflictContext other ) ; <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java b / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java <nl> new file mode 100644 <nl> index 0000000 . . e1c5f4e <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java <nl> @ @ - 0 , 0 + 1 , 89 @ @ <nl> + package net . minecraftforge . client . settings ; <nl> + <nl> + import net . minecraft . client . settings . KeyBinding ; <nl> + import net . minecraft . util . IntHashMap ; <nl> + <nl> + import java . util . ArrayList ; <nl> + import java . util . Collection ; <nl> + import java . util . EnumMap ; <nl> + import java . util . List ; <nl> + <nl> + public class KeyBindingMap <nl> + { <nl> + private static final EnumMap < KeyModifier , IntHashMap < Collection < KeyBinding > > > map = new java . util . EnumMap < KeyModifier , IntHashMap < Collection < KeyBinding > > > ( KeyModifier . class ) ; <nl> + static <nl> + { <nl> + for ( KeyModifier modifier : KeyModifier . values ( ) ) <nl> + { <nl> + map . put ( modifier , new IntHashMap < Collection < KeyBinding > > ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + public KeyBinding lookupActive ( int keyCode ) <nl> + { <nl> + KeyModifier activeModifier = KeyModifier . isKeyCodeModifier ( keyCode ) ? KeyModifier . NONE : KeyModifier . getActiveModifier ( ) ; <nl> + Collection < KeyBinding > bindings = map . get ( activeModifier ) . lookup ( keyCode ) ; <nl> + if ( bindings ! = null ) <nl> + { <nl> + for ( KeyBinding binding : bindings ) <nl> + { <nl> + if ( binding . isActiveAndMatches ( keyCode ) ) <nl> + { <nl> + return binding ; <nl> + } <nl> + } <nl> + } <nl> + return null ; <nl> + } <nl> + <nl> + public List < KeyBinding > lookupAll ( int keyCode ) <nl> + { <nl> + List < KeyBinding > matchingBindings = new ArrayList < KeyBinding > ( ) ; <nl> + for ( IntHashMap < Collection < KeyBinding > > bindingsMap : map . values ( ) ) <nl> + { <nl> + Collection < KeyBinding > bindings = bindingsMap . lookup ( keyCode ) ; <nl> + if ( bindings ! = null ) <nl> + { <nl> + matchingBindings . addAll ( bindings ) ; <nl> + } <nl> + } <nl> + return matchingBindings ; <nl> + } <nl> + <nl> + public void addKey ( int keyCode , KeyBinding keyBinding ) <nl> + { <nl> + KeyModifier keyModifier = keyBinding . getKeyModifier ( ) ; <nl> + IntHashMap < Collection < KeyBinding > > bindingsMap = map . get ( keyModifier ) ; <nl> + Collection < KeyBinding > bindingsForKey = bindingsMap . lookup ( keyCode ) ; <nl> + if ( bindingsForKey = = null ) <nl> + { <nl> + bindingsForKey = new ArrayList < KeyBinding > ( ) ; <nl> + bindingsMap . addKey ( keyCode , bindingsForKey ) ; <nl> + } <nl> + bindingsForKey . add ( keyBinding ) ; <nl> + } <nl> + <nl> + public void removeKey ( KeyBinding keyBinding ) <nl> + { <nl> + KeyModifier keyModifier = keyBinding . getKeyModifier ( ) ; <nl> + int keyCode = keyBinding . getKeyCode ( ) ; <nl> + IntHashMap < Collection < KeyBinding > > bindingsMap = map . get ( keyModifier ) ; <nl> + Collection < KeyBinding > bindingsForKey = bindingsMap . lookup ( keyCode ) ; <nl> + if ( bindingsForKey ! = null ) <nl> + { <nl> + bindingsForKey . remove ( keyBinding ) ; <nl> + if ( bindingsForKey . isEmpty ( ) ) <nl> + { <nl> + bindingsMap . removeObject ( keyCode ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + public void clearMap ( ) <nl> + { <nl> + for ( IntHashMap < Collection < KeyBinding > > bindings : map . values ( ) ) <nl> + { <nl> + bindings . clearMap ( ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyConflictContext . java b / src / main / java / net / minecraftforge / client / settings / KeyConflictContext . java <nl> new file mode 100644 <nl> index 0000000 . . 964dadd <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / settings / KeyConflictContext . java <nl> @ @ - 0 , 0 + 1 , 59 @ @ <nl> + package net . minecraftforge . client . settings ; <nl> + <nl> + import net . minecraft . client . Minecraft ; <nl> + import net . minecraft . client . gui . GuiScreen ; <nl> + <nl> + public enum KeyConflictContext implements IKeyConflictContext <nl> + { <nl> + / * * <nl> + * Universal key bindings are used in every context and will conflict with any other context . <nl> + * Key Bindings are universal by default . <nl> + * / <nl> + UNIVERSAL { <nl> + @ Override <nl> + public boolean isActive ( ) <nl> + { <nl> + return true ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean conflicts ( IKeyConflictContext other ) <nl> + { <nl> + return true ; <nl> + } <nl> + } , <nl> + <nl> + / * * <nl> + * Gui key bindings are only used when a { @ link GuiScreen } is open . <nl> + * / <nl> + GUI { <nl> + @ Override <nl> + public boolean isActive ( ) <nl> + { <nl> + return Minecraft . getMinecraft ( ) . currentScreen ! = null ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean conflicts ( IKeyConflictContext other ) <nl> + { <nl> + return this = = other ; <nl> + } <nl> + } , <nl> + <nl> + / * * <nl> + * In - game key bindings are only used when a { @ link GuiScreen } is not open . <nl> + * / <nl> + IN _ GAME { <nl> + @ Override <nl> + public boolean isActive ( ) <nl> + { <nl> + return ! GUI . isActive ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean conflicts ( IKeyConflictContext other ) <nl> + { <nl> + return this = = other ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyModifier . java b / src / main / java / net / minecraftforge / client / settings / KeyModifier . java <nl> new file mode 100644 <nl> index 0000000 . . 6eb699f <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / settings / KeyModifier . java <nl> @ @ - 0 , 0 + 1 , 124 @ @ <nl> + package net . minecraftforge . client . settings ; <nl> + <nl> + import net . minecraft . client . Minecraft ; <nl> + import net . minecraft . client . gui . GuiScreen ; <nl> + import net . minecraft . client . resources . I18n ; <nl> + import org . lwjgl . input . Keyboard ; <nl> + <nl> + public enum KeyModifier { <nl> + CONTROL { <nl> + @ Override <nl> + protected boolean matches ( int keyCode ) <nl> + { <nl> + if ( Minecraft . isRunningOnMac ) <nl> + { <nl> + return keyCode = = Keyboard . KEY _ LMETA | | keyCode = = Keyboard . KEY _ RMETA ; <nl> + } <nl> + else <nl> + { <nl> + return keyCode = = Keyboard . KEY _ LCONTROL | | keyCode = = Keyboard . KEY _ RCONTROL ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + public boolean isActive ( ) <nl> + { <nl> + return GuiScreen . isCtrlKeyDown ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getLocalizedComboName ( String keyName ) <nl> + { <nl> + return I18n . format ( " forge . controlsgui . control " , keyName ) ; <nl> + } <nl> + } , <nl> + SHIFT { <nl> + @ Override <nl> + protected boolean matches ( int keyCode ) <nl> + { <nl> + return keyCode = = Keyboard . KEY _ LSHIFT | | keyCode = = Keyboard . KEY _ RSHIFT ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean isActive ( ) <nl> + { <nl> + return GuiScreen . isShiftKeyDown ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getLocalizedComboName ( String keyName ) <nl> + { <nl> + return I18n . format ( " forge . controlsgui . shift " , keyName ) ; <nl> + } <nl> + } , <nl> + ALT { <nl> + @ Override <nl> + protected boolean matches ( int keyCode ) <nl> + { <nl> + return keyCode = = Keyboard . KEY _ LMENU | | keyCode = = Keyboard . KEY _ RMENU ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean isActive ( ) <nl> + { <nl> + return GuiScreen . isAltKeyDown ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getLocalizedComboName ( String keyName ) <nl> + { <nl> + return I18n . format ( " forge . controlsgui . alt " , keyName ) ; <nl> + } <nl> + } , <nl> + NONE { <nl> + @ Override <nl> + protected boolean matches ( int keyCode ) <nl> + { <nl> + return true ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean isActive ( ) <nl> + { <nl> + return ! SHIFT . isActive ( ) & & ! CONTROL . isActive ( ) & & ! ALT . isActive ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getLocalizedComboName ( String keyName ) <nl> + { <nl> + return keyName ; <nl> + } <nl> + } ; <nl> + <nl> + public static final KeyModifier [ ] MODIFIER _ VALUES = { SHIFT , CONTROL , ALT } ; <nl> + <nl> + public static KeyModifier getActiveModifier ( ) <nl> + { <nl> + for ( KeyModifier keyModifier : MODIFIER _ VALUES ) <nl> + { <nl> + if ( keyModifier . isActive ( ) ) <nl> + { <nl> + return keyModifier ; <nl> + } <nl> + } <nl> + return NONE ; <nl> + } <nl> + <nl> + public static boolean isKeyCodeModifier ( int keyCode ) <nl> + { <nl> + for ( KeyModifier keyModifier : MODIFIER _ VALUES ) <nl> + { <nl> + if ( keyModifier . matches ( keyCode ) ) <nl> + { <nl> + return true ; <nl> + } <nl> + } <nl> + return false ; <nl> + } <nl> + <nl> + protected abstract boolean matches ( int keyCode ) ; <nl> + <nl> + public abstract boolean isActive ( ) ; <nl> + <nl> + public abstract String getLocalizedComboName ( String keyName ) ; <nl> + } <nl> diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang <nl> index 507a84a . . 4155a94 100644 <nl> - - - a / src / main / resources / assets / forge / lang / en _ US . lang <nl> + + + b / src / main / resources / assets / forge / lang / en _ US . lang <nl> @ @ - 143 , 6 + 143 , 10 @ @ fml . configgui . tooltip . undoChanges = Undo Changes <nl> fml . configgui . tooltip . default = [ default : % s ] <nl> fml . configgui . tooltip . defaultNumeric = [ range : % s ~ % s , default : % s ] <nl> <nl> + forge . controlsgui . shift = SHIFT + % s <nl> + forge . controlsgui . control = CTRL + % s <nl> + forge . controlsgui . alt = ALT + % s <nl> + <nl> fml . menu . mods = Mods <nl> fml . menu . mods . normal = Normal <nl> fml . menu . mods . search = Search :

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 index 3d1788e . . 91a4491 100644 
 - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 @ @ - 21 , 6 + 21 , 15 @ @ 
 this . field _ 152350 _ aA = new SkinManager ( this . field _ 71446 _ o , new File ( this . field _ 110446 _ Y , " skins " ) , this . field _ 152355 _ az ) ; 
 this . field _ 71469 _ aa = new AnvilSaveConverter ( new File ( this . field _ 71412 _ D , " saves " ) , this . field _ 184131 _ U ) ; 
 this . field _ 147127 _ av = new SoundHandler ( this . field _ 110451 _ am , this . field _ 71474 _ y ) ; 
 + @ @ - 460 , 7 + 459 , 7 @ @ 
 + { 
 + try 
 + { 
 + - return String . format ( p _ 74535 _ 1 _ , new Object [ ] { GameSettings . func _ 74298 _ c ( Minecraft . this . field _ 71474 _ y . field _ 151445 _ Q . func _ 151463 _ i ( ) ) } ) ; 
 + + return String . format ( p _ 74535 _ 1 _ , new Object [ ] { Minecraft . this . field _ 71474 _ y . field _ 151445 _ Q . getDisplayName ( ) } ) ; 
 + } 
 + catch ( Exception exception ) 
 + { 
 @ @ - 469 , 6 + 468 , 8 @ @ 
 } 
 } ) ; 
 @ @ - 474 , 7 + 483 , 18 @ @ 
 } 
 
 public boolean func _ 70002 _ Q ( ) 
 - @ @ - 3066 , 6 + 2958 , 7 @ @ 
 + @ @ - 3057 , 15 + 2949 , 16 @ @ 
 + { 
 + if ( Keyboard . getEventKeyState ( ) ) 
 + { 
 + - if ( i = = this . field _ 71474 _ y . field _ 152395 _ am . func _ 151463 _ i ( ) ) 
 + + if ( this . field _ 71474 _ y . field _ 152395 _ am . isActiveAndMatches ( i ) ) 
 + { 
 + this . func _ 71352 _ k ( ) ; 
 + } 
 + - else if ( i = = this . field _ 71474 _ y . field _ 151447 _ Z . func _ 151463 _ i ( ) ) 
 + + else if ( this . field _ 71474 _ y . field _ 151447 _ Z . isActiveAndMatches ( i ) ) 
 + { 
 this . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( ScreenShotHelper . func _ 148260 _ a ( this . field _ 71412 _ D , this . field _ 71443 _ c , this . field _ 71440 _ d , this . field _ 147124 _ at ) ) ; 
 } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch 
 index ee31589 . . 5a9cdd7 100644 
 - - - a / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch 
 @ @ - 1 , 36 + 1 , 37 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiControls . java 
 + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiControls . java 
 - @ @ - 66 , 6 + 66 , 7 @ @ 
 + @ @ - 65 , 7 + 65 , 7 @ @ 
 + { 
 for ( KeyBinding keybinding : this . field _ 146297 _ k . field _ 71474 _ y . field _ 74324 _ K ) 
 { 
 - keybinding . func _ 151462 _ b ( keybinding . func _ 151469 _ h ( ) ) ; 
 - + keybinding . setKeyModifier ( keybinding . getKeyModifierDefault ( ) ) ; 
 + - keybinding . func _ 151462 _ b ( keybinding . func _ 151469 _ h ( ) ) ; 
 + + keybinding . setToDefault ( ) ; 
 } 
 
 KeyBinding . func _ 74508 _ b ( ) ; 
 - @ @ - 81 , 6 + 82 , 7 @ @ 
 + @ @ - 81 , 6 + 81 , 7 @ @ 
 { 
 if ( this . field _ 146491 _ f ! = null ) 
 { 
 - + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; 
 + + this . field _ 146491 _ f . setKeyModifierAndCode ( net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) , - 100 + p _ 73864 _ 3 _ ) ; 
 this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , - 100 + p _ 73864 _ 3 _ ) ; 
 this . field _ 146491 _ f = null ; 
 KeyBinding . func _ 74508 _ b ( ) ; 
 - @ @ - 105 , 17 + 107 , 21 @ @ 
 + @ @ - 105 , 17 + 106 , 21 @ @ 
 { 
 if ( p _ 73869 _ 2 _ = = 1 ) 
 { 
 - + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . NONE ) ; 
 + + this . field _ 146491 _ f . setKeyModifierAndCode ( net . minecraftforge . client . settings . KeyModifier . NONE , 0 ) ; 
 this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , 0 ) ; 
 } 
 else if ( p _ 73869 _ 2 _ ! = 0 ) 
 { 
 - + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ? net . minecraftforge . client . settings . KeyModifier . NONE : net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; 
 + + this . field _ 146491 _ f . setKeyModifierAndCode ( net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) , p _ 73869 _ 2 _ ) ; 
 this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , p _ 73869 _ 2 _ ) ; 
 } 
 else if ( p _ 73869 _ 1 _ > 0 ) 
 { 
 - + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ? net . minecraftforge . client . settings . KeyModifier . NONE : net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; 
 + + this . field _ 146491 _ f . setKeyModifierAndCode ( net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) , p _ 73869 _ 1 _ + 256 ) ; 
 this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , p _ 73869 _ 1 _ + 256 ) ; 
 } 
 
 @ @ - 38 , 12 + 39 , 12 @ @ 
 this . field _ 146491 _ f = null ; 
 this . field _ 152177 _ g = Minecraft . func _ 71386 _ F ( ) ; 
 KeyBinding . func _ 74508 _ b ( ) ; 
 - @ @ - 135 , 7 + 141 , 7 @ @ 
 + @ @ - 135 , 7 + 140 , 7 @ @ 
 
 for ( KeyBinding keybinding : this . field _ 146497 _ i . field _ 74324 _ K ) 
 { 
 - if ( keybinding . func _ 151463 _ i ( ) ! = keybinding . func _ 151469 _ h ( ) ) 
 - + if ( keybinding . func _ 151463 _ i ( ) ! = keybinding . func _ 151469 _ h ( ) | | keybinding . getKeyModifier ( ) ! = keybinding . getKeyModifierDefault ( ) ) 
 + + if ( ! keybinding . isSetToDefaultValue ( ) ) 
 { 
 flag = false ; 
 break ; 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch 
 index b3c50b3 . . 2471d1b 100644 
 - - - a / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch 
 @ @ - 18 , 7 + 18 , 7 @ @ 
 this . field _ 148281 _ e = new GuiButton ( 0 , 0 , 0 , 50 , 20 , I18n . func _ 135052 _ a ( " controls . reset " , new Object [ 0 ] ) ) ; 
 } 
 
 - @ @ - 121 , 20 + 121 , 20 @ @ 
 + @ @ - 121 , 23 + 121 , 24 @ @ 
 { 
 boolean flag = GuiKeyBindingList . this . field _ 148191 _ k . field _ 146491 _ f = = this . field _ 148282 _ b ; 
 GuiKeyBindingList . this . field _ 148189 _ l . field _ 71466 _ p . func _ 78276 _ b ( this . field _ 148283 _ c , p _ 180790 _ 2 _ + 90 - GuiKeyBindingList . this . field _ 148188 _ n , p _ 180790 _ 3 _ + p _ 180790 _ 5 _ / 2 - GuiKeyBindingList . this . field _ 148189 _ l . field _ 71466 _ p . field _ 78288 _ b / 2 , 16777215 ) ; 
 @ @ - 26 , 13 + 26 , 14 @ @ 
 + this . field _ 148281 _ e . field _ 146128 _ h = p _ 180790 _ 2 _ + 210 ; 
 this . field _ 148281 _ e . field _ 146129 _ i = p _ 180790 _ 3 _ ; 
 - this . field _ 148281 _ e . field _ 146124 _ l = this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = this . field _ 148282 _ b . func _ 151469 _ h ( ) ; 
 - + this . field _ 148281 _ e . field _ 146124 _ l = this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = this . field _ 148282 _ b . func _ 151469 _ h ( ) | | this . field _ 148282 _ b . getKeyModifier ( ) ! = this . field _ 148282 _ b . getKeyModifierDefault ( ) ; 
 + + this . field _ 148281 _ e . field _ 146124 _ l = ! this . field _ 148282 _ b . isSetToDefaultValue ( ) ; 
 this . field _ 148281 _ e . func _ 146112 _ a ( GuiKeyBindingList . this . field _ 148189 _ l , p _ 180790 _ 6 _ , p _ 180790 _ 7 _ ) ; 
 this . field _ 148280 _ d . field _ 146128 _ h = p _ 180790 _ 2 _ + 105 ; 
 this . field _ 148280 _ d . field _ 146129 _ i = p _ 180790 _ 3 _ ; 
 - this . field _ 148280 _ d . field _ 146126 _ j = GameSettings . func _ 74298 _ c ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ) ; 
 - + this . field _ 148280 _ d . field _ 146126 _ j = this . field _ 148282 _ b . getKeyModifier ( ) . getLocalizedComboName ( GameSettings . func _ 74298 _ c ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ) ) ; 
 + + this . field _ 148280 _ d . field _ 146126 _ j = this . field _ 148282 _ b . getDisplayName ( ) ; 
 boolean flag1 = false ; 
 + + boolean keyCodeModifierConflict = true ; / / less severe form of conflict , like SHIFT conflicting with SHIFT + G 
 
 if ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = 0 ) 
 { 
 @ @ - 42 , 12 + 43 , 25 @ @ 
 + if ( keybinding ! = this . field _ 148282 _ b & & keybinding . conflicts ( this . field _ 148282 _ b ) ) 
 { 
 flag1 = true ; 
 - break ; 
 - @ @ - 163 , 6 + 163 , 7 @ @ 
 + - break ; 
 + + keyCodeModifierConflict & = keybinding . hasKeyCodeModifierConflict ( this . field _ 148282 _ b ) ; 
 + } 
 + } 
 + } 
 + @ @ - 148 , 7 + 149 , 7 @ @ 
 + } 
 + else if ( flag1 ) 
 + { 
 + - this . field _ 148280 _ d . field _ 146126 _ j = TextFormatting . RED + this . field _ 148280 _ d . field _ 146126 _ j ; 
 + + this . field _ 148280 _ d . field _ 146126 _ j = ( keyCodeModifierConflict ? TextFormatting . GOLD : TextFormatting . RED ) + this . field _ 148280 _ d . field _ 146126 _ j ; 
 + } 
 + 
 + this . field _ 148280 _ d . func _ 146112 _ a ( GuiKeyBindingList . this . field _ 148189 _ l , p _ 180790 _ 6 _ , p _ 180790 _ 7 _ ) ; 
 + @ @ - 163 , 6 + 164 , 7 @ @ 
 } 
 else if ( this . field _ 148281 _ e . func _ 146116 _ c ( GuiKeyBindingList . this . field _ 148189 _ l , p _ 148278 _ 2 _ , p _ 148278 _ 3 _ ) ) 
 { 
 - + this . field _ 148282 _ b . setKeyModifier ( this . field _ 148282 _ b . getKeyModifierDefault ( ) ) ; 
 + + this . field _ 148282 _ b . setToDefault ( ) ; 
 GuiKeyBindingList . this . field _ 148189 _ l . field _ 71474 _ y . func _ 151440 _ a ( this . field _ 148282 _ b , this . field _ 148282 _ b . func _ 151469 _ h ( ) ) ; 
 KeyBinding . func _ 74508 _ b ( ) ; 
 return true ; 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiScreenDemo . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiScreenDemo . java . patch 
 new file mode 100644 
 index 0000000 . . bc19530 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiScreenDemo . java . patch 
 @ @ - 0 , 0 + 1 , 16 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiScreenDemo . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiScreenDemo . java 
 + @ @ - 73 , 10 + 73 , 10 @ @ 
 + this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . title " , new Object [ 0 ] ) , i , j , 2039583 ) ; 
 + j = j + 12 ; 
 + GameSettings gamesettings = this . field _ 146297 _ k . field _ 71474 _ y ; 
 + - this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . movementShort " , new Object [ ] { GameSettings . func _ 74298 _ c ( gamesettings . field _ 74351 _ w . func _ 151463 _ i ( ) ) , GameSettings . func _ 74298 _ c ( gamesettings . field _ 74370 _ x . func _ 151463 _ i ( ) ) , GameSettings . func _ 74298 _ c ( gamesettings . field _ 74368 _ y . func _ 151463 _ i ( ) ) , GameSettings . func _ 74298 _ c ( gamesettings . field _ 74366 _ z . func _ 151463 _ i ( ) ) } ) , i , j , 5197647 ) ; 
 + + this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . movementShort " , new Object [ ] { gamesettings . field _ 74351 _ w . getDisplayName ( ) , gamesettings . field _ 74370 _ x . getDisplayName ( ) , gamesettings . field _ 74368 _ y . getDisplayName ( ) , gamesettings . field _ 74366 _ z . getDisplayName ( ) } ) , i , j , 5197647 ) ; 
 + this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . movementMouse " , new Object [ 0 ] ) , i , j + 12 , 5197647 ) ; 
 + - this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . jump " , new Object [ ] { GameSettings . func _ 74298 _ c ( gamesettings . field _ 74314 _ A . func _ 151463 _ i ( ) ) } ) , i , j + 24 , 5197647 ) ; 
 + - this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . inventory " , new Object [ ] { GameSettings . func _ 74298 _ c ( gamesettings . field _ 151445 _ Q . func _ 151463 _ i ( ) ) } ) , i , j + 36 , 5197647 ) ; 
 + + this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . jump " , new Object [ ] { gamesettings . field _ 74314 _ A . getDisplayName ( ) } ) , i , j + 24 , 5197647 ) ; 
 + + this . field _ 146289 _ q . func _ 78276 _ b ( I18n . func _ 135052 _ a ( " demo . help . inventory " , new Object [ ] { gamesettings . field _ 151445 _ Q . getDisplayName ( ) } ) , i , j + 36 , 5197647 ) ; 
 + this . field _ 146289 _ q . func _ 78279 _ b ( I18n . func _ 135052 _ a ( " demo . help . fullWrapped " , new Object [ 0 ] ) , i , j + 68 , 218 , 2039583 ) ; 
 + super . func _ 73863 _ a ( p _ 73863 _ 1 _ , p _ 73863 _ 2 _ , p _ 73863 _ 3 _ ) ; 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiSpectator . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiSpectator . java . patch 
 new file mode 100644 
 index 0000000 . . 75838ae 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiSpectator . java . patch 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiSpectator . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiSpectator . java 
 + @ @ - 109 , 7 + 109 , 7 @ @ 
 + GlStateManager . func _ 179131 _ c ( f , f , f , p _ 175266 _ 4 _ ) ; 
 + p _ 175266 _ 5 _ . func _ 178663 _ a ( f , i ) ; 
 + GlStateManager . func _ 179121 _ F ( ) ; 
 + - String s = String . valueOf ( ( Object ) GameSettings . func _ 74298 _ c ( this . field _ 175268 _ g . field _ 71474 _ y . field _ 151456 _ ac [ p _ 175266 _ 1 _ ] . func _ 151463 _ i ( ) ) ) ; 
 + + String s = String . valueOf ( this . field _ 175268 _ g . field _ 71474 _ y . field _ 151456 _ ac [ p _ 175266 _ 1 _ ] . getDisplayName ( ) ) ; 
 + 
 + if ( i > 3 & & p _ 175266 _ 5 _ . func _ 178662 _ A _ ( ) ) 
 + { 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / achievement / GuiAchievements . java . patch b / patches / minecraft / net / minecraft / client / gui / achievement / GuiAchievements . java . patch 
 index bba2f8a . . 0155153 100644 
 - - - a / patches / minecraft / net / minecraft / client / gui / achievement / GuiAchievements . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / gui / achievement / GuiAchievements . java . patch 
 @ @ - 34 , 7 + 34 , 7 @ @ 
 } 
 
 protected void func _ 146284 _ a ( GuiButton p _ 146284 _ 1 _ ) throws IOException 
 - @ @ - 74 , 6 + 87 , 16 @ @ 
 + @ @ - 74 , 12 + 87 , 22 @ @ 
 { 
 this . field _ 146297 _ k . func _ 147108 _ a ( this . field _ 146562 _ a ) ; 
 } 
 @ @ - 51 , 6 + 51 , 13 @ @ 
 } 
 } 
 
 + protected void func _ 73869 _ a ( char p _ 73869 _ 1 _ , int p _ 73869 _ 2 _ ) throws IOException 
 + { 
 + - if ( p _ 73869 _ 2 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 151445 _ Q . func _ 151463 _ i ( ) ) 
 + + if ( this . field _ 146297 _ k . field _ 71474 _ y . field _ 151445 _ Q . isActiveAndMatches ( p _ 73869 _ 2 _ ) ) 
 + { 
 + this . field _ 146297 _ k . func _ 147108 _ a ( ( GuiScreen ) null ) ; 
 + this . field _ 146297 _ k . func _ 71381 _ h ( ) ; 
 @ @ - 257 , 7 + 280 , 9 @ @ 
 GlStateManager . func _ 179143 _ c ( 518 ) ; 
 GlStateManager . func _ 179094 _ E ( ) ; 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch b / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch 
 index 1b2794a . . 145e92e 100644 
 - - - a / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainer . java . patch 
 @ @ - 30 , 6 + 30 , 15 @ @ 
 this . func _ 175175 _ a ( i , j , textureatlassprite , 16 , 16 ) ; 
 GlStateManager . func _ 179145 _ e ( ) ; 
 flag1 = true ; 
 + @ @ - 316 , 7 + 318 , 7 @ @ 
 + protected void func _ 73864 _ a ( int p _ 73864 _ 1 _ , int p _ 73864 _ 2 _ , int p _ 73864 _ 3 _ ) throws IOException 
 + { 
 + super . func _ 73864 _ a ( p _ 73864 _ 1 _ , p _ 73864 _ 2 _ , p _ 73864 _ 3 _ ) ; 
 + - boolean flag = p _ 73864 _ 3 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . func _ 151463 _ i ( ) + 100 ; 
 + + boolean flag = this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . isActiveAndMatches ( p _ 73864 _ 3 _ + 100 ) ; 
 + Slot slot = this . func _ 146975 _ c ( p _ 73864 _ 1 _ , p _ 73864 _ 2 _ ) ; 
 + long i = Minecraft . func _ 71386 _ F ( ) ; 
 + this . field _ 146993 _ M = this . field _ 146998 _ K = = slot & & i - this . field _ 146997 _ J < 250L & & this . field _ 146992 _ L = = p _ 73864 _ 3 _ ; 
 @ @ - 327 , 6 + 329 , 7 @ @ 
 int j = this . field _ 147003 _ i ; 
 int k = this . field _ 147009 _ r ; 
 @ @ - 38 , 6 + 47 , 24 @ @ 
 int l = - 1 ; 
 
 if ( slot ! = null ) 
 + @ @ - 364 , 7 + 367 , 7 @ @ 
 + { 
 + if ( this . field _ 146297 _ k . field _ 71439 _ g . field _ 71071 _ by . func _ 70445 _ o ( ) = = null ) 
 + { 
 + - if ( p _ 73864 _ 3 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . func _ 151463 _ i ( ) + 100 ) 
 + + if ( this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . isActiveAndMatches ( p _ 73864 _ 3 _ + 100 ) ) 
 + { 
 + this . func _ 184098 _ a ( slot , l , p _ 73864 _ 3 _ , ClickType . CLONE ) ; 
 + } 
 + @ @ - 402 , 7 + 405 , 7 @ @ 
 + { 
 + this . field _ 146987 _ F = 1 ; 
 + } 
 + - else if ( p _ 73864 _ 3 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . func _ 151463 _ i ( ) + 100 ) 
 + + else if ( this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . isActiveAndMatches ( p _ 73864 _ 3 _ + 100 ) ) 
 + { 
 + this . field _ 146987 _ F = 2 ; 
 + } 
 @ @ - 464 , 10 + 467 , 12 @ @ 
 
 protected void func _ 146286 _ b ( int p _ 146286 _ 1 _ , int p _ 146286 _ 2 _ , int p _ 146286 _ 3 _ ) 
 @ @ - 51 , 6 + 78 , 38 @ @ 
 int k = - 1 ; 
 
 if ( slot ! = null ) 
 + @ @ - 627 , 7 + 632 , 7 @ @ 
 + 
 + protected void func _ 73869 _ a ( char p _ 73869 _ 1 _ , int p _ 73869 _ 2 _ ) throws IOException 
 + { 
 + - if ( p _ 73869 _ 2 _ = = 1 | | p _ 73869 _ 2 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 151445 _ Q . func _ 151463 _ i ( ) ) 
 + + if ( p _ 73869 _ 2 _ = = 1 | | this . field _ 146297 _ k . field _ 71474 _ y . field _ 151445 _ Q . isActiveAndMatches ( p _ 73869 _ 2 _ ) ) 
 + { 
 + this . field _ 146297 _ k . field _ 71439 _ g . func _ 71053 _ j ( ) ; 
 + } 
 + @ @ - 636 , 11 + 641 , 11 @ @ 
 + 
 + if ( this . field _ 147006 _ u ! = null & & this . field _ 147006 _ u . func _ 75216 _ d ( ) ) 
 + { 
 + - if ( p _ 73869 _ 2 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . func _ 151463 _ i ( ) ) 
 + + if ( this . field _ 146297 _ k . field _ 71474 _ y . field _ 74322 _ I . isActiveAndMatches ( p _ 73869 _ 2 _ ) ) 
 + { 
 + this . func _ 184098 _ a ( this . field _ 147006 _ u , this . field _ 147006 _ u . field _ 75222 _ d , 0 , ClickType . CLONE ) ; 
 + } 
 + - else if ( p _ 73869 _ 2 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 74316 _ C . func _ 151463 _ i ( ) ) 
 + + else if ( this . field _ 146297 _ k . field _ 71474 _ y . field _ 74316 _ C . isActiveAndMatches ( p _ 73869 _ 2 _ ) ) 
 + { 
 + this . func _ 184098 _ a ( this . field _ 147006 _ u , this . field _ 147006 _ u . field _ 75222 _ d , func _ 146271 _ m ( ) ? 1 : 0 , ClickType . THROW ) ; 
 + } 
 + @ @ - 653 , 7 + 658 , 7 @ @ 
 + { 
 + for ( int i = 0 ; i < 9 ; + + i ) 
 + { 
 + - if ( p _ 146983 _ 1 _ = = this . field _ 146297 _ k . field _ 71474 _ y . field _ 151456 _ ac [ i ] . func _ 151463 _ i ( ) ) 
 + + if ( this . field _ 146297 _ k . field _ 71474 _ y . field _ 151456 _ ac [ i ] . isActiveAndMatches ( p _ 146983 _ 1 _ ) ) 
 + { 
 + this . func _ 184098 _ a ( this . field _ 147006 _ u , this . field _ 147006 _ u . field _ 75222 _ d , i , ClickType . SWAP ) ; 
 + return true ; 
 @ @ - 686 , 4 + 691 , 16 @ @ 
 this . field _ 146297 _ k . field _ 71439 _ g . func _ 71053 _ j ( ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch b / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch 
 index 54911d8 . . 61b8bd1 100644 
 - - - a / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch 
 @ @ - 40 , 6 + 40 , 15 @ @ 
 EntityTracker . func _ 187254 _ a ( entitylivingbase , d0 , d1 , d2 ) ; 
 entitylivingbase . field _ 70761 _ aq = entitylivingbase . field _ 70759 _ as = ( float ) ( p _ 147281 _ 1 _ . func _ 149032 _ n ( ) * 360 ) / 256 . 0F ; 
 Entity [ ] aentity = entitylivingbase . func _ 70021 _ al ( ) ; 
 + @ @ - 919 , 7 + 926 , 7 @ @ 
 + 
 + if ( entity1 = = this . field _ 147299 _ f . field _ 71439 _ g & & ! flag ) 
 + { 
 + - this . field _ 147299 _ f . field _ 71456 _ v . func _ 110326 _ a ( I18n . func _ 135052 _ a ( " mount . onboard " , new Object [ ] { GameSettings . func _ 74298 _ c ( this . field _ 147299 _ f . field _ 71474 _ y . field _ 74311 _ E . func _ 151463 _ i ( ) ) } ) , false ) ; 
 + + this . field _ 147299 _ f . field _ 71456 _ v . func _ 110326 _ a ( I18n . func _ 135052 _ a ( " mount . onboard " , new Object [ ] { this . field _ 147299 _ f . field _ 71474 _ y . field _ 74311 _ E . getDisplayName ( ) } ) , false ) ; 
 + } 
 + } 
 + } 
 @ @ - 1179 , 6 + 1186 , 10 @ @ 
 { 
 tileentity . func _ 145839 _ a ( p _ 147273 _ 1 _ . func _ 148857 _ g ( ) ) ; 
 @ @ - 51 , 6 + 60 , 25 @ @ 
 
 if ( flag & & this . field _ 147299 _ f . field _ 71462 _ r instanceof GuiCommandBlock ) 
 { 
 + @ @ - 1276 , 15 + 1287 , 15 @ @ 
 + } 
 + else if ( f = = 101 . 0F ) 
 + { 
 + - this . field _ 147299 _ f . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( new TextComponentTranslation ( " demo . help . movement " , new Object [ ] { GameSettings . func _ 74298 _ c ( gamesettings . field _ 74351 _ w . func _ 151463 _ i ( ) ) , GameSettings . func _ 74298 _ c ( gamesettings . field _ 74370 _ x . func _ 151463 _ i ( ) ) , GameSettings . func _ 74298 _ c ( gamesettings . field _ 74368 _ y . func _ 151463 _ i ( ) ) , GameSettings . func _ 74298 _ c ( gamesettings . field _ 74366 _ z . func _ 151463 _ i ( ) ) } ) ) ; 
 + + this . field _ 147299 _ f . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( new TextComponentTranslation ( " demo . help . movement " , new Object [ ] { gamesettings . field _ 74351 _ w . getDisplayName ( ) , gamesettings . field _ 74370 _ x . getDisplayName ( ) , gamesettings . field _ 74368 _ y . getDisplayName ( ) , gamesettings . field _ 74366 _ z . getDisplayName ( ) } ) ) ; 
 + } 
 + else if ( f = = 102 . 0F ) 
 + { 
 + - this . field _ 147299 _ f . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( new TextComponentTranslation ( " demo . help . jump " , new Object [ ] { GameSettings . func _ 74298 _ c ( gamesettings . field _ 74314 _ A . func _ 151463 _ i ( ) ) } ) ) ; 
 + + this . field _ 147299 _ f . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( new TextComponentTranslation ( " demo . help . jump " , new Object [ ] { gamesettings . field _ 74314 _ A . getDisplayName ( ) } ) ) ; 
 + } 
 + else if ( f = = 103 . 0F ) 
 + { 
 + - this . field _ 147299 _ f . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( new TextComponentTranslation ( " demo . help . inventory " , new Object [ ] { GameSettings . func _ 74298 _ c ( gamesettings . field _ 151445 _ Q . func _ 151463 _ i ( ) ) } ) ) ; 
 + + this . field _ 147299 _ f . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( new TextComponentTranslation ( " demo . help . inventory " , new Object [ ] { gamesettings . field _ 151445 _ Q . getDisplayName ( ) } ) ) ; 
 + } 
 + } 
 + else if ( i = = 6 ) 
 @ @ - 1378 , 7 + 1389 , 7 @ @ 
 
 if ( entity instanceof EntityLivingBase ) 
 diff - - git a / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch b / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch 
 index a62941d . . 3ed2135 100644 
 - - - a / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch 
 @ @ - 20 , 7 + 20 , 7 @ @ 
 if ( astring [ 0 ] . equals ( " key _ " + keybinding . func _ 151464 _ g ( ) ) ) 
 { 
 keybinding . func _ 151462 _ b ( Integer . parseInt ( astring [ 1 ] ) ) ; 
 - + if ( astring . length = = 3 ) keybinding . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . valueOf ( astring [ 2 ] ) ) ; 
 + + if ( astring . length = = 3 ) keybinding . setKeyModifierAndCode ( net . minecraftforge . client . settings . KeyModifier . valueOf ( astring [ 2 ] ) , Integer . parseInt ( astring [ 1 ] ) ) ; 
 } 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch b / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch 
 index f80019f . . d238490 100644 
 - - - a / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch 
 @ @ - 57 , 7 + 57 , 7 @ @ 
 } 
 
 public String func _ 151466 _ e ( ) 
 - @ @ - 158 , 4 + 158 , 102 @ @ 
 + @ @ - 158 , 4 + 158 , 130 @ @ 
 
 return i ; 
 } 
 @ @ - 66 , 7 + 66 , 6 @ @ 
 + private net . minecraftforge . client . settings . KeyModifier keyModifierDefault = net . minecraftforge . client . settings . KeyModifier . NONE ; 
 + private net . minecraftforge . client . settings . KeyModifier keyModifier = net . minecraftforge . client . settings . KeyModifier . NONE ; 
 + private net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext = net . minecraftforge . client . settings . KeyConflictContext . UNIVERSAL ; 
 - + private boolean allowsKeyModifiers = false ; 
 + 
 + / * * 
 + * Convenience constructor for creating KeyBindings with keyConflictContext set . 
 @ @ - 88 , 24 + 87 , 16 @ @ 
 + this . keyConflictContext = keyConflictContext ; 
 + this . keyModifier = keyModifier ; 
 + this . keyModifierDefault = keyModifier ; 
 - + if ( keyModifier ! = net . minecraftforge . client . settings . KeyModifier . NONE ) 
 - + setAllowsKeyModifiers ( ) ; 
 + + if ( this . keyModifier . matches ( keyCode ) ) 
 + + { 
 + + this . keyModifier = net . minecraftforge . client . settings . KeyModifier . NONE ; 
 + + } 
 + field _ 74516 _ a . add ( this ) ; 
 + field _ 74514 _ b . addKey ( keyCode , this ) ; 
 + field _ 151473 _ c . add ( category ) ; 
 + } 
 + 
 + / * * 
 - + * Call this method to let Forge know that your KeyBinding and code can handle players setting modifiers . 
 - + * Handling modifiers is made easy by using { @ link KeyBinding # isActiveAndMatches ( int ) } or { @ link KeyBinding # isPressed ( ) } 
 - + * Vanilla code does not handle modifiers , so vanilla keyBinds do not have this set . 
 - + * / 
 - + public void setAllowsKeyModifiers ( ) 
 - + { 
 - + this . allowsKeyModifiers = true ; 
 - + } 
 - + 
 - + / * * 
 + * Checks that the key conflict context and modifier are active , and that the keyCode matches this binding . 
 + * / 
 + public boolean isActiveAndMatches ( int keyCode ) 
 @ @ - 130 , 33 + 121 , 70 @ @ 
 + 
 + public net . minecraftforge . client . settings . KeyModifier getKeyModifier ( ) 
 + { 
 - + if ( allowsKeyModifiers ) 
 - + { 
 - + return keyModifier ; 
 - + } 
 - + else 
 - + { 
 - + return net . minecraftforge . client . settings . KeyModifier . NOT _ SUPPORTED ; 
 - + } 
 + + return keyModifier ; 
 + } 
 + 
 - + public void setKeyModifier ( net . minecraftforge . client . settings . KeyModifier keyModifier ) 
 + + public void setKeyModifierAndCode ( net . minecraftforge . client . settings . KeyModifier keyModifier , int keyCode ) 
 + { 
 + + this . field _ 74512 _ d = keyCode ; 
 + + if ( keyModifier . matches ( keyCode ) ) 
 + + { 
 + + keyModifier = net . minecraftforge . client . settings . KeyModifier . NONE ; 
 + + } 
 + field _ 74514 _ b . removeKey ( this ) ; 
 + this . keyModifier = keyModifier ; 
 - + field _ 74514 _ b . addKey ( field _ 74512 _ d , this ) ; 
 + + field _ 74514 _ b . addKey ( keyCode , this ) ; 
 + + } 
 + + 
 + + public void setToDefault ( ) 
 + + { 
 + + setKeyModifierAndCode ( getKeyModifierDefault ( ) , func _ 151469 _ h ( ) ) ; 
 + + } 
 + + 
 + + public boolean isSetToDefaultValue ( ) 
 + + { 
 + + return func _ 151463 _ i ( ) = = func _ 151469 _ h ( ) & & getKeyModifier ( ) = = getKeyModifierDefault ( ) ; 
 + } 
 + 
 + + 	 / * * 
 + + * Returns true when the other keyBinding conflicts with this one 
 + + * / 
 + public boolean conflicts ( KeyBinding other ) 
 + { 
 + if ( getKeyConflictContext ( ) . conflicts ( other . getKeyConflictContext ( ) ) | | other . getKeyConflictContext ( ) . conflicts ( getKeyConflictContext ( ) ) ) 
 + { 
 - + if ( ! allowsKeyModifiers | | ! other . allowsKeyModifiers | | getKeyModifier ( ) = = other . getKeyModifier ( ) ) 
 + + net . minecraftforge . client . settings . KeyModifier keyModifier = getKeyModifier ( ) ; 
 + + net . minecraftforge . client . settings . KeyModifier otherKeyModifier = other . getKeyModifier ( ) ; 
 + + if ( keyModifier . matches ( other . func _ 151463 _ i ( ) ) | | otherKeyModifier . matches ( func _ 151463 _ i ( ) ) ) 
 + + { 
 + + return true ; 
 + + } 
 + + else if ( keyModifier = = otherKeyModifier | | keyModifier = = net . minecraftforge . client . settings . KeyModifier . NONE | | otherKeyModifier = = net . minecraftforge . client . settings . KeyModifier . NONE ) 
 + { 
 + return func _ 151463 _ i ( ) = = other . func _ 151463 _ i ( ) ; 
 + } 
 + } 
 + return false ; 
 + } 
 + + 
 + + / * * 
 + + * Returns true when one of the bindings ' key codes conflicts with the other ' s modifier . 
 + + * / 
 + + public boolean hasKeyCodeModifierConflict ( KeyBinding other ) 
 + + { 
 + + if ( getKeyConflictContext ( ) . conflicts ( other . getKeyConflictContext ( ) ) | | other . getKeyConflictContext ( ) . conflicts ( getKeyConflictContext ( ) ) ) 
 + + { 
 + + if ( getKeyModifier ( ) . matches ( other . func _ 151463 _ i ( ) ) | | other . getKeyModifier ( ) . matches ( func _ 151463 _ i ( ) ) ) 
 + + { 
 + + return true ; 
 + + } 
 + + } 
 + + return false ; 
 + + } 
 + + 
 + + public String getDisplayName ( ) 
 + + { 
 + + return getKeyModifier ( ) . getLocalizedComboName ( func _ 151463 _ i ( ) ) ; 
 + + } 
 + / * * * * * * * * * * * * * * * * * * Forge End * * * * * * * * * * * * * * * * * * * * * * * * * * * * * / 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java b / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java 
 index 4524544 . . b50af08 100644 
 - - - a / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java 
 + + + b / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java 
 @ @ - 21 , 13 + 21 , 12 @ @ public class KeyBindingMap 
 
 public KeyBinding lookupActive ( int keyCode ) 
 { 
 - KeyModifier activeModifier = KeyModifier . isKeyCodeModifier ( keyCode ) ? KeyModifier . NONE : KeyModifier . getActiveModifier ( ) ; 
 - KeyBinding binding = getBinding ( keyCode , activeModifier ) ; 
 - if ( binding ! = null ) 
 + KeyModifier activeModifier = KeyModifier . getActiveModifier ( ) ; 
 + if ( activeModifier . matches ( keyCode ) ) 
 { 
 - return binding ; 
 + activeModifier = KeyModifier . NONE ; 
 } 
 - return getBinding ( keyCode , KeyModifier . NOT _ SUPPORTED ) ; 
 + return getBinding ( keyCode , activeModifier ) ; 
 } 
 
 private KeyBinding getBinding ( int keyCode , KeyModifier keyModifier ) 
 diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyModifier . java b / src / main / java / net / minecraftforge / client / settings / KeyModifier . java 
 index 54c0c88 . . 9838251 100644 
 - - - a / src / main / java / net / minecraftforge / client / settings / KeyModifier . java 
 + + + b / src / main / java / net / minecraftforge / client / settings / KeyModifier . java 
 @ @ - 3 , 12 + 3 , 13 @ @ package net . minecraftforge . client . settings ; 
 import net . minecraft . client . Minecraft ; 
 import net . minecraft . client . gui . GuiScreen ; 
 import net . minecraft . client . resources . I18n ; 
 + import net . minecraft . client . settings . GameSettings ; 
 import org . lwjgl . input . Keyboard ; 
 
 public enum KeyModifier { 
 CONTROL { 
 @ Override 
 - protected boolean matches ( int keyCode ) 
 + public boolean matches ( int keyCode ) 
 { 
 if ( Minecraft . isRunningOnMac ) 
 { 
 @ @ - 27 , 14 + 28 , 15 @ @ public enum KeyModifier { 
 } 
 
 @ Override 
 - public String getLocalizedComboName ( String keyName ) 
 + public String getLocalizedComboName ( int keyCode ) 
 { 
 + String keyName = GameSettings . getKeyDisplayString ( keyCode ) ; 
 return I18n . format ( " forge . controlsgui . control " , keyName ) ; 
 } 
 } , 
 SHIFT { 
 @ Override 
 - protected boolean matches ( int keyCode ) 
 + public boolean matches ( int keyCode ) 
 { 
 return keyCode = = Keyboard . KEY _ LSHIFT | | keyCode = = Keyboard . KEY _ RSHIFT ; 
 } 
 @ @ - 46 , 14 + 48 , 15 @ @ public enum KeyModifier { 
 } 
 
 @ Override 
 - public String getLocalizedComboName ( String keyName ) 
 + public String getLocalizedComboName ( int keyCode ) 
 { 
 + String keyName = GameSettings . getKeyDisplayString ( keyCode ) ; 
 return I18n . format ( " forge . controlsgui . shift " , keyName ) ; 
 } 
 } , 
 ALT { 
 @ Override 
 - protected boolean matches ( int keyCode ) 
 + public boolean matches ( int keyCode ) 
 { 
 return keyCode = = Keyboard . KEY _ LMENU | | keyCode = = Keyboard . KEY _ RMENU ; 
 } 
 @ @ - 65 , 35 + 68 , 17 @ @ public enum KeyModifier { 
 } 
 
 @ Override 
 - public String getLocalizedComboName ( String keyName ) 
 + public String getLocalizedComboName ( int keyCode ) 
 { 
 + String keyName = GameSettings . getKeyDisplayString ( keyCode ) ; 
 return I18n . format ( " forge . controlsgui . alt " , keyName ) ; 
 } 
 } , 
 NONE { 
 @ Override 
 - protected boolean matches ( int keyCode ) 
 + public boolean matches ( int keyCode ) 
 { 
 - return true ; 
 - } 
 - 
 - @ Override 
 - public boolean isActive ( ) 
 - { 
 - return ! SHIFT . isActive ( ) & & ! CONTROL . isActive ( ) & & ! ALT . isActive ( ) ; 
 - } 
 - 
 - @ Override 
 - public String getLocalizedComboName ( String keyName ) 
 - { 
 - return keyName ; 
 - } 
 - } , 
 - NOT _ SUPPORTED { 
 - @ Override 
 - protected boolean matches ( int keyCode ) 
 - { 
 - return true ; 
 + return false ; 
 } 
 
 @ Override 
 @ @ - 103 , 9 + 88 , 9 @ @ public enum KeyModifier { 
 } 
 
 @ Override 
 - public String getLocalizedComboName ( String keyName ) 
 + public String getLocalizedComboName ( int keyCode ) 
 { 
 - return keyName ; 
 + return GameSettings . getKeyDisplayString ( keyCode ) ; 
 } 
 } ; 
 
 @ @ - 135 , 9 + 120 , 9 @ @ public enum KeyModifier { 
 return false ; 
 } 
 
 - protected abstract boolean matches ( int keyCode ) ; 
 + public abstract boolean matches ( int keyCode ) ; 
 
 public abstract boolean isActive ( ) ; 
 
 - public abstract String getLocalizedComboName ( String keyName ) ; 
 + public abstract String getLocalizedComboName ( int keyCode ) ; 
 }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 index 7ceb60e . . 3d1788e 100644 
 - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 @ @ - 474 , 7 + 474 , 15 @ @ 
 } 
 
 public boolean func _ 70002 _ Q ( ) 
 - @ @ - 3192 , 4 + 3084 , 10 @ @ 
 + @ @ - 3066 , 6 + 2958 , 7 @ @ 
 + this . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( ScreenShotHelper . func _ 148260 _ a ( this . field _ 71412 _ D , this . field _ 71443 _ c , this . field _ 71440 _ d , this . field _ 147124 _ at ) ) ; 
 + } 
 + } 
 + + else if ( this . field _ 71462 _ r instanceof GuiControls ) ( ( GuiControls ) this . field _ 71462 _ r ) . field _ 146491 _ f = null ; 
 + } 
 + } 
 + } 
 + @ @ - 3192 , 4 + 3085 , 10 @ @ 
 { 
 return this . field _ 184127 _ aH ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch 
 new file mode 100644 
 index 0000000 . . ee31589 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch 
 @ @ - 0 , 0 + 1 , 49 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiControls . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiControls . java 
 + @ @ - 66 , 6 + 66 , 7 @ @ 
 + for ( KeyBinding keybinding : this . field _ 146297 _ k . field _ 71474 _ y . field _ 74324 _ K ) 
 + { 
 + keybinding . func _ 151462 _ b ( keybinding . func _ 151469 _ h ( ) ) ; 
 + + keybinding . setKeyModifier ( keybinding . getKeyModifierDefault ( ) ) ; 
 + } 
 + 
 + KeyBinding . func _ 74508 _ b ( ) ; 
 + @ @ - 81 , 6 + 82 , 7 @ @ 
 + { 
 + if ( this . field _ 146491 _ f ! = null ) 
 + { 
 + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; 
 + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , - 100 + p _ 73864 _ 3 _ ) ; 
 + this . field _ 146491 _ f = null ; 
 + KeyBinding . func _ 74508 _ b ( ) ; 
 + @ @ - 105 , 17 + 107 , 21 @ @ 
 + { 
 + if ( p _ 73869 _ 2 _ = = 1 ) 
 + { 
 + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . NONE ) ; 
 + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , 0 ) ; 
 + } 
 + else if ( p _ 73869 _ 2 _ ! = 0 ) 
 + { 
 + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ? net . minecraftforge . client . settings . KeyModifier . NONE : net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; 
 + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , p _ 73869 _ 2 _ ) ; 
 + } 
 + else if ( p _ 73869 _ 1 _ > 0 ) 
 + { 
 + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ? net . minecraftforge . client . settings . KeyModifier . NONE : net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; 
 + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , p _ 73869 _ 1 _ + 256 ) ; 
 + } 
 + 
 + + if ( ! net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ) 
 + this . field _ 146491 _ f = null ; 
 + this . field _ 152177 _ g = Minecraft . func _ 71386 _ F ( ) ; 
 + KeyBinding . func _ 74508 _ b ( ) ; 
 + @ @ - 135 , 7 + 141 , 7 @ @ 
 + 
 + for ( KeyBinding keybinding : this . field _ 146497 _ i . field _ 74324 _ K ) 
 + { 
 + - if ( keybinding . func _ 151463 _ i ( ) ! = keybinding . func _ 151469 _ h ( ) ) 
 + + if ( keybinding . func _ 151463 _ i ( ) ! = keybinding . func _ 151469 _ h ( ) | | keybinding . getKeyModifier ( ) ! = keybinding . getKeyModifierDefault ( ) ) 
 + { 
 + flag = false ; 
 + break ; 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch 
 new file mode 100644 
 index 0000000 . . b3c50b3 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch 
 @ @ - 0 , 0 + 1 , 53 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java 
 + @ @ - 62 , 7 + 62 , 7 @ @ 
 + 
 + protected int func _ 148137 _ d ( ) 
 + { 
 + - return super . func _ 148137 _ d ( ) + 15 ; 
 + + return super . func _ 148137 _ d ( ) + 35 ; 
 + } 
 + 
 + public int func _ 148139 _ c ( ) 
 + @ @ - 113 , 7 + 113 , 7 @ @ 
 + { 
 + this . field _ 148282 _ b = p _ i45029 _ 2 _ ; 
 + this . field _ 148283 _ c = I18n . func _ 135052 _ a ( p _ i45029 _ 2 _ . func _ 151464 _ g ( ) , new Object [ 0 ] ) ; 
 + - this . field _ 148280 _ d = new GuiButton ( 0 , 0 , 0 , 75 , 20 , I18n . func _ 135052 _ a ( p _ i45029 _ 2 _ . func _ 151464 _ g ( ) , new Object [ 0 ] ) ) ; 
 + + this . field _ 148280 _ d = new GuiButton ( 0 , 0 , 0 , 95 , 20 , I18n . func _ 135052 _ a ( p _ i45029 _ 2 _ . func _ 151464 _ g ( ) , new Object [ 0 ] ) ) ; 
 + this . field _ 148281 _ e = new GuiButton ( 0 , 0 , 0 , 50 , 20 , I18n . func _ 135052 _ a ( " controls . reset " , new Object [ 0 ] ) ) ; 
 + } 
 + 
 + @ @ - 121 , 20 + 121 , 20 @ @ 
 + { 
 + boolean flag = GuiKeyBindingList . this . field _ 148191 _ k . field _ 146491 _ f = = this . field _ 148282 _ b ; 
 + GuiKeyBindingList . this . field _ 148189 _ l . field _ 71466 _ p . func _ 78276 _ b ( this . field _ 148283 _ c , p _ 180790 _ 2 _ + 90 - GuiKeyBindingList . this . field _ 148188 _ n , p _ 180790 _ 3 _ + p _ 180790 _ 5 _ / 2 - GuiKeyBindingList . this . field _ 148189 _ l . field _ 71466 _ p . field _ 78288 _ b / 2 , 16777215 ) ; 
 + - this . field _ 148281 _ e . field _ 146128 _ h = p _ 180790 _ 2 _ + 190 ; 
 + + this . field _ 148281 _ e . field _ 146128 _ h = p _ 180790 _ 2 _ + 210 ; 
 + this . field _ 148281 _ e . field _ 146129 _ i = p _ 180790 _ 3 _ ; 
 + - this . field _ 148281 _ e . field _ 146124 _ l = this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = this . field _ 148282 _ b . func _ 151469 _ h ( ) ; 
 + + this . field _ 148281 _ e . field _ 146124 _ l = this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = this . field _ 148282 _ b . func _ 151469 _ h ( ) | | this . field _ 148282 _ b . getKeyModifier ( ) ! = this . field _ 148282 _ b . getKeyModifierDefault ( ) ; 
 + this . field _ 148281 _ e . func _ 146112 _ a ( GuiKeyBindingList . this . field _ 148189 _ l , p _ 180790 _ 6 _ , p _ 180790 _ 7 _ ) ; 
 + this . field _ 148280 _ d . field _ 146128 _ h = p _ 180790 _ 2 _ + 105 ; 
 + this . field _ 148280 _ d . field _ 146129 _ i = p _ 180790 _ 3 _ ; 
 + - this . field _ 148280 _ d . field _ 146126 _ j = GameSettings . func _ 74298 _ c ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ) ; 
 + + this . field _ 148280 _ d . field _ 146126 _ j = this . field _ 148282 _ b . getKeyModifier ( ) . getLocalizedComboName ( GameSettings . func _ 74298 _ c ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ) ) ; 
 + boolean flag1 = false ; 
 + 
 + if ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = 0 ) 
 + { 
 + for ( KeyBinding keybinding : GuiKeyBindingList . this . field _ 148189 _ l . field _ 71474 _ y . field _ 74324 _ K ) 
 + { 
 + - if ( keybinding ! = this . field _ 148282 _ b & & keybinding . func _ 151463 _ i ( ) = = this . field _ 148282 _ b . func _ 151463 _ i ( ) ) 
 + + if ( keybinding ! = this . field _ 148282 _ b & & keybinding . conflicts ( this . field _ 148282 _ b ) ) 
 + { 
 + flag1 = true ; 
 + break ; 
 + @ @ - 163 , 6 + 163 , 7 @ @ 
 + } 
 + else if ( this . field _ 148281 _ e . func _ 146116 _ c ( GuiKeyBindingList . this . field _ 148189 _ l , p _ 148278 _ 2 _ , p _ 148278 _ 3 _ ) ) 
 + { 
 + + this . field _ 148282 _ b . setKeyModifier ( this . field _ 148282 _ b . getKeyModifierDefault ( ) ) ; 
 + GuiKeyBindingList . this . field _ 148189 _ l . field _ 71474 _ y . func _ 151440 _ a ( this . field _ 148282 _ b , this . field _ 148282 _ b . func _ 151469 _ h ( ) ) ; 
 + KeyBinding . func _ 74508 _ b ( ) ; 
 + return true ; 
 diff - - git a / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch b / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch 
 index 5a85b1f . . a62941d 100644 
 - - - a / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch 
 @ @ - 1 , 6 + 1 , 30 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / client / settings / GameSettings . java 
 + + + . . / src - work / minecraft / net / minecraft / client / settings / GameSettings . java 
 - @ @ - 887 , 6 + 887 , 7 @ @ 
 + @ @ - 147 , 6 + 147 , 7 @ @ 
 + 
 + public GameSettings ( Minecraft p _ i46326 _ 1 _ , File p _ i46326 _ 2 _ ) 
 + { 
 + + setForgeKeybindProperties ( ) ; 
 + this . field _ 74324 _ K = ( KeyBinding [ ] ) ArrayUtils . addAll ( new KeyBinding [ ] { this . field _ 74312 _ F , this . field _ 74313 _ G , this . field _ 74351 _ w , this . field _ 74370 _ x , this . field _ 74368 _ y , this . field _ 74366 _ z , this . field _ 74314 _ A , this . field _ 74311 _ E , this . field _ 151444 _ V , this . field _ 74316 _ C , this . field _ 151445 _ Q , this . field _ 74310 _ D , this . field _ 74321 _ H , this . field _ 74322 _ I , this . field _ 74323 _ J , this . field _ 151447 _ Z , this . field _ 151457 _ aa , this . field _ 151458 _ ab , this . field _ 152395 _ am , this . field _ 178883 _ an , this . field _ 186718 _ X } , this . field _ 151456 _ ac ) ; 
 + this . field _ 74318 _ M = EnumDifficulty . NORMAL ; 
 + this . field _ 74332 _ R = " " ; 
 + @ @ - 171 , 6 + 172 , 7 @ @ 
 + 
 + public GameSettings ( ) 
 + { 
 + + setForgeKeybindProperties ( ) ; 
 + this . field _ 74324 _ K = ( KeyBinding [ ] ) ArrayUtils . addAll ( new KeyBinding [ ] { this . field _ 74312 _ F , this . field _ 74313 _ G , this . field _ 74351 _ w , this . field _ 74370 _ x , this . field _ 74368 _ y , this . field _ 74366 _ z , this . field _ 74314 _ A , this . field _ 74311 _ E , this . field _ 151444 _ V , this . field _ 74316 _ C , this . field _ 151445 _ Q , this . field _ 74310 _ D , this . field _ 74321 _ H , this . field _ 74322 _ I , this . field _ 74323 _ J , this . field _ 151447 _ Z , this . field _ 151457 _ aa , this . field _ 151458 _ ab , this . field _ 152395 _ am , this . field _ 178883 _ an , this . field _ 186718 _ X } , this . field _ 151456 _ ac ) ; 
 + this . field _ 74318 _ M = EnumDifficulty . NORMAL ; 
 + this . field _ 74332 _ R = " " ; 
 + @ @ - 846 , 6 + 848 , 7 @ @ 
 + if ( astring [ 0 ] . equals ( " key _ " + keybinding . func _ 151464 _ g ( ) ) ) 
 + { 
 + keybinding . func _ 151462 _ b ( Integer . parseInt ( astring [ 1 ] ) ) ; 
 + + if ( astring . length = = 3 ) keybinding . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . valueOf ( astring [ 2 ] ) ) ; 
 + } 
 + } 
 + 
 + @ @ - 887 , 6 + 890 , 7 @ @ 
 
 public void func _ 74303 _ b ( ) 
 { 
 @ @ - 8 , 3 + 32 , 39 @ @ 
 try 
 { 
 PrintWriter printwriter = new PrintWriter ( new FileWriter ( this . field _ 74354 _ ai ) ) ; 
 + @ @ - 955 , 7 + 959 , 8 @ @ 
 + 
 + for ( KeyBinding keybinding : this . field _ 74324 _ K ) 
 + { 
 + - printwriter . println ( " key _ " + keybinding . func _ 151464 _ g ( ) + " : " + keybinding . func _ 151463 _ i ( ) ) ; 
 + + String keyString = " key _ " + keybinding . func _ 151464 _ g ( ) + " : " + keybinding . func _ 151463 _ i ( ) ; 
 + + printwriter . println ( keybinding . getKeyModifier ( ) ! = net . minecraftforge . client . settings . KeyModifier . NONE ? keyString + " : " + keybinding . getKeyModifier ( ) : keyString ) ; 
 + } 
 + 
 + for ( SoundCategory soundcategory : SoundCategory . values ( ) ) 
 + @ @ - 1184 , 4 + 1189 , 25 @ @ 
 + return p _ 148264 _ 1 _ ; 
 + } 
 + } 
 + + 
 + + / * * * * * * * Forge Start * * * * * * * * * * * / 
 + + private void setForgeKeybindProperties ( ) { 
 + + net . minecraftforge . client . settings . KeyConflictContext inGame = net . minecraftforge . client . settings . KeyConflictContext . IN _ GAME ; 
 + + field _ 74351 _ w . setKeyConflictContext ( inGame ) ; 
 + + field _ 74370 _ x . setKeyConflictContext ( inGame ) ; 
 + + field _ 74368 _ y . setKeyConflictContext ( inGame ) ; 
 + + field _ 74366 _ z . setKeyConflictContext ( inGame ) ; 
 + + field _ 74314 _ A . setKeyConflictContext ( inGame ) ; 
 + + field _ 74311 _ E . setKeyConflictContext ( inGame ) ; 
 + + field _ 151444 _ V . setKeyConflictContext ( inGame ) ; 
 + + field _ 74312 _ F . setKeyConflictContext ( inGame ) ; 
 + + field _ 74322 _ I . setKeyConflictContext ( inGame ) ; 
 + + field _ 74310 _ D . setKeyConflictContext ( inGame ) ; 
 + + field _ 74321 _ H . setKeyConflictContext ( inGame ) ; 
 + + field _ 74323 _ J . setKeyConflictContext ( inGame ) ; 
 + + field _ 151457 _ aa . setKeyConflictContext ( inGame ) ; 
 + + field _ 151458 _ ab . setKeyConflictContext ( inGame ) ; 
 + + field _ 186718 _ X . setKeyConflictContext ( inGame ) ; 
 + + } 
 + + / * * * * * * * Forge End * * * * * * * * * * * / 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch b / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch 
 new file mode 100644 
 index 0000000 . . 41a80a2 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch 
 @ @ - 0 , 0 + 1 , 162 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / settings / KeyBinding . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / settings / KeyBinding . java 
 + @ @ - 14 , 7 + 14 , 7 @ @ 
 + public class KeyBinding implements Comparable < KeyBinding > 
 + { 
 + private static final List < KeyBinding > field _ 74516 _ a = Lists . < KeyBinding > newArrayList ( ) ; 
 + - private static final IntHashMap < KeyBinding > field _ 74514 _ b = new IntHashMap ( ) ; 
 + + private static final net . minecraftforge . client . settings . KeyBindingMap field _ 74514 _ b = new net . minecraftforge . client . settings . KeyBindingMap ( ) ; 
 + private static final Set < String > field _ 151473 _ c = Sets . < String > newHashSet ( ) ; 
 + private final String field _ 74515 _ c ; 
 + private final int field _ 151472 _ e ; 
 + @ @ - 27 , 7 + 27 , 7 @ @ 
 + { 
 + if ( p _ 74507 _ 0 _ ! = 0 ) 
 + { 
 + - KeyBinding keybinding = ( KeyBinding ) field _ 74514 _ b . func _ 76041 _ a ( p _ 74507 _ 0 _ ) ; 
 + + KeyBinding keybinding = field _ 74514 _ b . lookupActive ( p _ 74507 _ 0 _ ) ; 
 + 
 + if ( keybinding ! = null ) 
 + { 
 + @ @ - 40 , 7 + 40 , 7 @ @ 
 + { 
 + if ( p _ 74510 _ 0 _ ! = 0 ) 
 + { 
 + - KeyBinding keybinding = ( KeyBinding ) field _ 74514 _ b . func _ 76041 _ a ( p _ 74510 _ 0 _ ) ; 
 + + for ( KeyBinding keybinding : field _ 74514 _ b . lookupAll ( p _ 74510 _ 0 _ ) ) 
 + 
 + if ( keybinding ! = null ) 
 + { 
 + @ @ - 74 , 11 + 74 , 11 @ @ 
 + 
 + public static void func _ 74508 _ b ( ) 
 + { 
 + - field _ 74514 _ b . func _ 76046 _ c ( ) ; 
 + + field _ 74514 _ b . clearMap ( ) ; 
 + 
 + for ( KeyBinding keybinding : field _ 74516 _ a ) 
 + { 
 + - field _ 74514 _ b . func _ 76038 _ a ( keybinding . field _ 74512 _ d , keybinding ) ; 
 + + field _ 74514 _ b . addKey ( keybinding . field _ 74512 _ d , keybinding ) ; 
 + } 
 + } 
 + 
 + @ @ - 94 , 13 + 94 , 13 @ @ 
 + this . field _ 151472 _ e = p _ i45001 _ 2 _ ; 
 + this . field _ 151471 _ f = p _ i45001 _ 3 _ ; 
 + field _ 74516 _ a . add ( this ) ; 
 + - field _ 74514 _ b . func _ 76038 _ a ( p _ i45001 _ 2 _ , this ) ; 
 + + field _ 74514 _ b . addKey ( p _ i45001 _ 2 _ , this ) ; 
 + field _ 151473 _ c . add ( p _ i45001 _ 3 _ ) ; 
 + } 
 + 
 + public boolean func _ 151470 _ d ( ) 
 + { 
 + - return this . field _ 74513 _ e ; 
 + + return this . field _ 74513 _ e & & getKeyConflictContext ( ) . isActive ( ) & & ( ! allowsKeyModifiers | | getKeyModifier ( ) . isActive ( ) ) ; 
 + } 
 + 
 + public String func _ 151466 _ e ( ) 
 + @ @ - 158 , 4 + 158 , 102 @ @ 
 + 
 + return i ; 
 + } 
 + + 
 + + / * * * * * * * * * * * * * * * * * * Forge Start * * * * * * * * * * * * * * * * * * * * * * * * * * * * * / 
 + + private net . minecraftforge . client . settings . KeyModifier keyModifierDefault = net . minecraftforge . client . settings . KeyModifier . NONE ; 
 + + private net . minecraftforge . client . settings . KeyModifier keyModifier = net . minecraftforge . client . settings . KeyModifier . NONE ; 
 + + private net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext = net . minecraftforge . client . settings . KeyConflictContext . UNIVERSAL ; 
 + + private boolean allowsKeyModifiers = false ; 
 + + 
 + + / * * 
 + + * Convenience constructor for creating KeyBindings with keyConflictContext set . 
 + + * / 
 + + public KeyBinding ( String description , net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext , int keyCode , String category ) 
 + + { 
 + + this ( description , keyConflictContext , net . minecraftforge . client . settings . KeyModifier . NONE , keyCode , category ) ; 
 + + } 
 + + 
 + + / * * 
 + + * Convenience constructor for creating KeyBindings with keyConflictContext and keyModifier set . 
 + + * / 
 + + public KeyBinding ( String description , net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext , net . minecraftforge . client . settings . KeyModifier keyModifier , int keyCode , String category ) 
 + + { 
 + + this . field _ 74515 _ c = description ; 
 + + this . field _ 74512 _ d = keyCode ; 
 + + this . field _ 151472 _ e = keyCode ; 
 + + this . field _ 151471 _ f = category ; 
 + + this . keyConflictContext = keyConflictContext ; 
 + + this . keyModifier = keyModifier ; 
 + + this . keyModifierDefault = keyModifier ; 
 + + if ( keyModifier ! = net . minecraftforge . client . settings . KeyModifier . NONE ) 
 + + setAllowsKeyModifiers ( ) ; 
 + + field _ 74516 _ a . add ( this ) ; 
 + + field _ 74514 _ b . addKey ( keyCode , this ) ; 
 + + field _ 151473 _ c . add ( category ) ; 
 + + } 
 + + 
 + + / * * 
 + + * Call this method to let Forge know that your KeyBinding and code can handle players setting modifiers . 
 + + * Handling modifiers is made easy by using { @ link KeyBinding # isActiveAndMatches ( int ) } or { @ link KeyBinding # isPressed ( ) } 
 + + * Vanilla code does not handle modifiers , so vanilla keyBinds do not have this set . 
 + + * / 
 + + public void setAllowsKeyModifiers ( ) 
 + + { 
 + + this . allowsKeyModifiers = true ; 
 + + } 
 + + 
 + + / * * 
 + + * Checks that the key conflict context and modifier are active , and that the keyCode matches this binding . 
 + + * / 
 + + public boolean isActiveAndMatches ( int keyCode ) 
 + + { 
 + + return keyCode = = this . func _ 151463 _ i ( ) & & getKeyConflictContext ( ) . isActive ( ) & & ( ! allowsKeyModifiers | | getKeyModifier ( ) . isActive ( ) ) ; 
 + + } 
 + + 
 + + public void setKeyConflictContext ( net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext ) 
 + + { 
 + + this . keyConflictContext = keyConflictContext ; 
 + + } 
 + + 
 + + public net . minecraftforge . client . settings . IKeyConflictContext getKeyConflictContext ( ) 
 + + { 
 + + return keyConflictContext ; 
 + + } 
 + + 
 + + public net . minecraftforge . client . settings . KeyModifier getKeyModifierDefault ( ) 
 + + { 
 + + return keyModifierDefault ; 
 + + } 
 + + 
 + + public net . minecraftforge . client . settings . KeyModifier getKeyModifier ( ) 
 + + { 
 + + if ( allowsKeyModifiers ) 
 + + { 
 + + return keyModifier ; 
 + + } 
 + + else 
 + + { 
 + + return net . minecraftforge . client . settings . KeyModifier . NONE ; 
 + + } 
 + + } 
 + + 
 + + public void setKeyModifier ( net . minecraftforge . client . settings . KeyModifier keyModifier ) 
 + + { 
 + + field _ 74514 _ b . removeKey ( this ) ; 
 + + this . keyModifier = keyModifier ; 
 + + field _ 74514 _ b . addKey ( field _ 74512 _ d , this ) ; 
 + + } 
 + + 
 + + public boolean conflicts ( KeyBinding other ) 
 + + { 
 + + if ( getKeyConflictContext ( ) . conflicts ( other . getKeyConflictContext ( ) ) | | other . getKeyConflictContext ( ) . conflicts ( getKeyConflictContext ( ) ) ) 
 + + { 
 + + if ( ! allowsKeyModifiers | | ! other . allowsKeyModifiers | | getKeyModifier ( ) = = other . getKeyModifier ( ) ) 
 + + { 
 + + return func _ 151463 _ i ( ) = = other . func _ 151463 _ i ( ) ; 
 + + } 
 + + } 
 + + return false ; 
 + + } 
 + + / * * * * * * * * * * * * * * * * * * Forge End * * * * * * * * * * * * * * * * * * * * * * * * * * * * * / 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / client / settings / IKeyConflictContext . java b / src / main / java / net / minecraftforge / client / settings / IKeyConflictContext . java 
 new file mode 100644 
 index 0000000 . . 0029721 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / settings / IKeyConflictContext . java 
 @ @ - 0 , 0 + 1 , 20 @ @ 
 + package net . minecraftforge . client . settings ; 
 + 
 + import net . minecraft . client . settings . KeyBinding ; 
 + 
 + / * * 
 + * Defines the context that a { @ link KeyBinding } is used . 
 + * Key conflicts occur when a { @ link KeyBinding } has the same { @ link IKeyConflictContext } and has conflicting modifiers and keyCodes . 
 + * / 
 + public interface IKeyConflictContext { 
 + / * * 
 + * @ return true if conditions are met to activate { @ link KeyBinding } s with this context 
 + * / 
 + boolean isActive ( ) ; 
 + 
 + / * * 
 + * @ return true if the other context can have { @ link KeyBinding } conflicts with this one . 
 + * This will be called on both contexts to check for conflicts . 
 + * / 
 + boolean conflicts ( IKeyConflictContext other ) ; 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java b / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java 
 new file mode 100644 
 index 0000000 . . e1c5f4e 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java 
 @ @ - 0 , 0 + 1 , 89 @ @ 
 + package net . minecraftforge . client . settings ; 
 + 
 + import net . minecraft . client . settings . KeyBinding ; 
 + import net . minecraft . util . IntHashMap ; 
 + 
 + import java . util . ArrayList ; 
 + import java . util . Collection ; 
 + import java . util . EnumMap ; 
 + import java . util . List ; 
 + 
 + public class KeyBindingMap 
 + { 
 + private static final EnumMap < KeyModifier , IntHashMap < Collection < KeyBinding > > > map = new java . util . EnumMap < KeyModifier , IntHashMap < Collection < KeyBinding > > > ( KeyModifier . class ) ; 
 + static 
 + { 
 + for ( KeyModifier modifier : KeyModifier . values ( ) ) 
 + { 
 + map . put ( modifier , new IntHashMap < Collection < KeyBinding > > ( ) ) ; 
 + } 
 + } 
 + 
 + public KeyBinding lookupActive ( int keyCode ) 
 + { 
 + KeyModifier activeModifier = KeyModifier . isKeyCodeModifier ( keyCode ) ? KeyModifier . NONE : KeyModifier . getActiveModifier ( ) ; 
 + Collection < KeyBinding > bindings = map . get ( activeModifier ) . lookup ( keyCode ) ; 
 + if ( bindings ! = null ) 
 + { 
 + for ( KeyBinding binding : bindings ) 
 + { 
 + if ( binding . isActiveAndMatches ( keyCode ) ) 
 + { 
 + return binding ; 
 + } 
 + } 
 + } 
 + return null ; 
 + } 
 + 
 + public List < KeyBinding > lookupAll ( int keyCode ) 
 + { 
 + List < KeyBinding > matchingBindings = new ArrayList < KeyBinding > ( ) ; 
 + for ( IntHashMap < Collection < KeyBinding > > bindingsMap : map . values ( ) ) 
 + { 
 + Collection < KeyBinding > bindings = bindingsMap . lookup ( keyCode ) ; 
 + if ( bindings ! = null ) 
 + { 
 + matchingBindings . addAll ( bindings ) ; 
 + } 
 + } 
 + return matchingBindings ; 
 + } 
 + 
 + public void addKey ( int keyCode , KeyBinding keyBinding ) 
 + { 
 + KeyModifier keyModifier = keyBinding . getKeyModifier ( ) ; 
 + IntHashMap < Collection < KeyBinding > > bindingsMap = map . get ( keyModifier ) ; 
 + Collection < KeyBinding > bindingsForKey = bindingsMap . lookup ( keyCode ) ; 
 + if ( bindingsForKey = = null ) 
 + { 
 + bindingsForKey = new ArrayList < KeyBinding > ( ) ; 
 + bindingsMap . addKey ( keyCode , bindingsForKey ) ; 
 + } 
 + bindingsForKey . add ( keyBinding ) ; 
 + } 
 + 
 + public void removeKey ( KeyBinding keyBinding ) 
 + { 
 + KeyModifier keyModifier = keyBinding . getKeyModifier ( ) ; 
 + int keyCode = keyBinding . getKeyCode ( ) ; 
 + IntHashMap < Collection < KeyBinding > > bindingsMap = map . get ( keyModifier ) ; 
 + Collection < KeyBinding > bindingsForKey = bindingsMap . lookup ( keyCode ) ; 
 + if ( bindingsForKey ! = null ) 
 + { 
 + bindingsForKey . remove ( keyBinding ) ; 
 + if ( bindingsForKey . isEmpty ( ) ) 
 + { 
 + bindingsMap . removeObject ( keyCode ) ; 
 + } 
 + } 
 + } 
 + 
 + public void clearMap ( ) 
 + { 
 + for ( IntHashMap < Collection < KeyBinding > > bindings : map . values ( ) ) 
 + { 
 + bindings . clearMap ( ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyConflictContext . java b / src / main / java / net / minecraftforge / client / settings / KeyConflictContext . java 
 new file mode 100644 
 index 0000000 . . 964dadd 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / settings / KeyConflictContext . java 
 @ @ - 0 , 0 + 1 , 59 @ @ 
 + package net . minecraftforge . client . settings ; 
 + 
 + import net . minecraft . client . Minecraft ; 
 + import net . minecraft . client . gui . GuiScreen ; 
 + 
 + public enum KeyConflictContext implements IKeyConflictContext 
 + { 
 + / * * 
 + * Universal key bindings are used in every context and will conflict with any other context . 
 + * Key Bindings are universal by default . 
 + * / 
 + UNIVERSAL { 
 + @ Override 
 + public boolean isActive ( ) 
 + { 
 + return true ; 
 + } 
 + 
 + @ Override 
 + public boolean conflicts ( IKeyConflictContext other ) 
 + { 
 + return true ; 
 + } 
 + } , 
 + 
 + / * * 
 + * Gui key bindings are only used when a { @ link GuiScreen } is open . 
 + * / 
 + GUI { 
 + @ Override 
 + public boolean isActive ( ) 
 + { 
 + return Minecraft . getMinecraft ( ) . currentScreen ! = null ; 
 + } 
 + 
 + @ Override 
 + public boolean conflicts ( IKeyConflictContext other ) 
 + { 
 + return this = = other ; 
 + } 
 + } , 
 + 
 + / * * 
 + * In - game key bindings are only used when a { @ link GuiScreen } is not open . 
 + * / 
 + IN _ GAME { 
 + @ Override 
 + public boolean isActive ( ) 
 + { 
 + return ! GUI . isActive ( ) ; 
 + } 
 + 
 + @ Override 
 + public boolean conflicts ( IKeyConflictContext other ) 
 + { 
 + return this = = other ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyModifier . java b / src / main / java / net / minecraftforge / client / settings / KeyModifier . java 
 new file mode 100644 
 index 0000000 . . 6eb699f 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / settings / KeyModifier . java 
 @ @ - 0 , 0 + 1 , 124 @ @ 
 + package net . minecraftforge . client . settings ; 
 + 
 + import net . minecraft . client . Minecraft ; 
 + import net . minecraft . client . gui . GuiScreen ; 
 + import net . minecraft . client . resources . I18n ; 
 + import org . lwjgl . input . Keyboard ; 
 + 
 + public enum KeyModifier { 
 + CONTROL { 
 + @ Override 
 + protected boolean matches ( int keyCode ) 
 + { 
 + if ( Minecraft . isRunningOnMac ) 
 + { 
 + return keyCode = = Keyboard . KEY _ LMETA | | keyCode = = Keyboard . KEY _ RMETA ; 
 + } 
 + else 
 + { 
 + return keyCode = = Keyboard . KEY _ LCONTROL | | keyCode = = Keyboard . KEY _ RCONTROL ; 
 + } 
 + } 
 + 
 + @ Override 
 + public boolean isActive ( ) 
 + { 
 + return GuiScreen . isCtrlKeyDown ( ) ; 
 + } 
 + 
 + @ Override 
 + public String getLocalizedComboName ( String keyName ) 
 + { 
 + return I18n . format ( " forge . controlsgui . control " , keyName ) ; 
 + } 
 + } , 
 + SHIFT { 
 + @ Override 
 + protected boolean matches ( int keyCode ) 
 + { 
 + return keyCode = = Keyboard . KEY _ LSHIFT | | keyCode = = Keyboard . KEY _ RSHIFT ; 
 + } 
 + 
 + @ Override 
 + public boolean isActive ( ) 
 + { 
 + return GuiScreen . isShiftKeyDown ( ) ; 
 + } 
 + 
 + @ Override 
 + public String getLocalizedComboName ( String keyName ) 
 + { 
 + return I18n . format ( " forge . controlsgui . shift " , keyName ) ; 
 + } 
 + } , 
 + ALT { 
 + @ Override 
 + protected boolean matches ( int keyCode ) 
 + { 
 + return keyCode = = Keyboard . KEY _ LMENU | | keyCode = = Keyboard . KEY _ RMENU ; 
 + } 
 + 
 + @ Override 
 + public boolean isActive ( ) 
 + { 
 + return GuiScreen . isAltKeyDown ( ) ; 
 + } 
 + 
 + @ Override 
 + public String getLocalizedComboName ( String keyName ) 
 + { 
 + return I18n . format ( " forge . controlsgui . alt " , keyName ) ; 
 + } 
 + } , 
 + NONE { 
 + @ Override 
 + protected boolean matches ( int keyCode ) 
 + { 
 + return true ; 
 + } 
 + 
 + @ Override 
 + public boolean isActive ( ) 
 + { 
 + return ! SHIFT . isActive ( ) & & ! CONTROL . isActive ( ) & & ! ALT . isActive ( ) ; 
 + } 
 + 
 + @ Override 
 + public String getLocalizedComboName ( String keyName ) 
 + { 
 + return keyName ; 
 + } 
 + } ; 
 + 
 + public static final KeyModifier [ ] MODIFIER _ VALUES = { SHIFT , CONTROL , ALT } ; 
 + 
 + public static KeyModifier getActiveModifier ( ) 
 + { 
 + for ( KeyModifier keyModifier : MODIFIER _ VALUES ) 
 + { 
 + if ( keyModifier . isActive ( ) ) 
 + { 
 + return keyModifier ; 
 + } 
 + } 
 + return NONE ; 
 + } 
 + 
 + public static boolean isKeyCodeModifier ( int keyCode ) 
 + { 
 + for ( KeyModifier keyModifier : MODIFIER _ VALUES ) 
 + { 
 + if ( keyModifier . matches ( keyCode ) ) 
 + { 
 + return true ; 
 + } 
 + } 
 + return false ; 
 + } 
 + 
 + protected abstract boolean matches ( int keyCode ) ; 
 + 
 + public abstract boolean isActive ( ) ; 
 + 
 + public abstract String getLocalizedComboName ( String keyName ) ; 
 + } 
 diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang 
 index 507a84a . . 4155a94 100644 
 - - - a / src / main / resources / assets / forge / lang / en _ US . lang 
 + + + b / src / main / resources / assets / forge / lang / en _ US . lang 
 @ @ - 143 , 6 + 143 , 10 @ @ fml . configgui . tooltip . undoChanges = Undo Changes 
 fml . configgui . tooltip . default = [ default : % s ] 
 fml . configgui . tooltip . defaultNumeric = [ range : % s ~ % s , default : % s ] 
 
 + forge . controlsgui . shift = SHIFT + % s 
 + forge . controlsgui . control = CTRL + % s 
 + forge . controlsgui . alt = ALT + % s 
 + 
 fml . menu . mods = Mods 
 fml . menu . mods . normal = Normal 
 fml . menu . mods . search = Search :
