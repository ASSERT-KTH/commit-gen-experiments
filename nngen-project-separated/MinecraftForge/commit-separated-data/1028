BLEU SCORE: 0.024675789207681903

TEST MSG: Fixed missing import in last merge .
GENERATED MSG: Fix crash when texture loading throws RuntimeException without message

TEST DIFF (one line): diff - - git a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> index 6226abb . . 8943b8e 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> @ @ - 100 , 6 + 100 , 7 @ @ import org . lwjgl . LWJGLUtil ; <nl> import org . lwjgl . input . Mouse ; <nl> import org . lwjgl . opengl . Display ; <nl> <nl> + import com . google . common . base . CharMatcher ; <nl> import com . google . common . base . Objects ; <nl> import com . google . common . base . Strings ; <nl> import com . google . common . base . Throwables ;
NEAREST DIFF (one line): diff - - git a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> index b270de9 . . 1515920 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java <nl> @ @ - 99 , 6 + 99 , 7 @ @ import org . lwjgl . LWJGLUtil ; <nl> import org . lwjgl . input . Mouse ; <nl> import org . lwjgl . opengl . Display ; <nl> <nl> + import com . google . common . base . Objects ; <nl> import com . google . common . base . Strings ; <nl> import com . google . common . base . Throwables ; <nl> import com . google . common . collect . BiMap ; <nl> @ @ - 906 , 7 + 907 , 7 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> if ( badType = = null ) <nl> { <nl> badType = Sets . newHashSet ( ) ; <nl> - brokenTextures . put ( resourceLocation . getResourceDomain ( ) , error , badType ) ; <nl> + brokenTextures . put ( resourceLocation . getResourceDomain ( ) , Objects . firstNonNull ( error , " Unknown error " ) , badType ) ; <nl> } <nl> badType . add ( resourceLocation ) ; <nl> }

TEST DIFF:
diff - - git a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 index 6226abb . . 8943b8e 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 @ @ - 100 , 6 + 100 , 7 @ @ import org . lwjgl . LWJGLUtil ; 
 import org . lwjgl . input . Mouse ; 
 import org . lwjgl . opengl . Display ; 
 
 + import com . google . common . base . CharMatcher ; 
 import com . google . common . base . Objects ; 
 import com . google . common . base . Strings ; 
 import com . google . common . base . Throwables ;

NEAREST DIFF:
diff - - git a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 index b270de9 . . 1515920 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / client / FMLClientHandler . java 
 @ @ - 99 , 6 + 99 , 7 @ @ import org . lwjgl . LWJGLUtil ; 
 import org . lwjgl . input . Mouse ; 
 import org . lwjgl . opengl . Display ; 
 
 + import com . google . common . base . Objects ; 
 import com . google . common . base . Strings ; 
 import com . google . common . base . Throwables ; 
 import com . google . common . collect . BiMap ; 
 @ @ - 906 , 7 + 907 , 7 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 if ( badType = = null ) 
 { 
 badType = Sets . newHashSet ( ) ; 
 - brokenTextures . put ( resourceLocation . getResourceDomain ( ) , error , badType ) ; 
 + brokenTextures . put ( resourceLocation . getResourceDomain ( ) , Objects . firstNonNull ( error , " Unknown error " ) , badType ) ; 
 } 
 badType . add ( resourceLocation ) ; 
 }
