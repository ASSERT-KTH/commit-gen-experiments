BLEU SCORE: 0.016021319366618693

TEST MSG: Fixed MultiLayerModel not getting correct submodels ; Unified the gui lighting of normal and custom models - diffuse lighting is now done in the pipeline , no need for IColoredBakedQuad anymore .
GENERATED MSG: Model UV lock handling from the state to the model , fixed most compile errors in ModelLoader , disabled it ( and ModelBakeEvent ) until it ' s functional , fixed some errors in ForgeHooksClient .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / block / model / ModelBakery . java . patch b / patches / minecraft / net / minecraft / client / renderer / block / model / ModelBakery . java . patch <nl> index 4f6cd2e . . 78f75f8 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / block / model / ModelBakery . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / block / model / ModelBakery . java . patch <nl> @ @ - 132 , 7 + 132 , 7 @ @ <nl> <nl> + protected BakedQuad makeBakedQuad ( BlockPart p _ 177589 _ 1 _ , BlockPartFace p _ 177589 _ 2 _ , TextureAtlasSprite p _ 177589 _ 3 _ , EnumFacing p _ 177589 _ 4 _ , net . minecraftforge . client . model . ITransformation p _ 177589 _ 5 _ , boolean p _ 177589 _ 6 _ ) <nl> + { <nl> - + return this . field _ 177607 _ l . makeBakedQuad ( p _ 177589 _ 1 _ . field _ 178241 _ a , p _ 177589 _ 1 _ . field _ 178239 _ b , p _ 177589 _ 2 _ , p _ 177589 _ 3 _ , p _ 177589 _ 4 _ , p _ 177589 _ 5 _ , p _ 177589 _ 1 _ . field _ 178237 _ d , p _ 177589 _ 6 _ , p _ 177589 _ 1 _ . field _ 178238 _ e ) ; <nl> + + return this . field _ 177607 _ l . makeBakedQuad ( p _ 177589 _ 1 _ . field _ 178241 _ a , p _ 177589 _ 1 _ . field _ 178239 _ b , p _ 177589 _ 2 _ , p _ 177589 _ 3 _ , p _ 177589 _ 4 _ , p _ 177589 _ 5 _ , p _ 177589 _ 1 _ . field _ 178237 _ d , p _ 177589 _ 6 _ , false ) ; <nl> + } <nl> + <nl> private void func _ 177597 _ h ( ) <nl> diff - - git a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch <nl> index e256ce3 . . 00f4a4f 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch <nl> @ @ - 31 , 15 + 31 , 16 @ @ <nl> int j = blockrenderlayer1 . ordinal ( ) ; <nl> <nl> if ( block . func _ 176223 _ P ( ) . func _ 185901 _ i ( ) ! = EnumBlockRenderType . INVISIBLE ) <nl> - @ @ - 191 , 6 + 195 , 7 @ @ <nl> + @ @ - 191 , 6 + 195 , 8 @ @ <nl> <nl> aboolean [ j ] | = blockrendererdispatcher . func _ 175018 _ a ( iblockstate , blockpos $ mutableblockpos , iblockaccess , vertexbuffer ) ; <nl> } <nl> + } <nl> + + net . minecraftforge . client . ForgeHooksClient . setRenderLayer ( null ) ; <nl> } <nl> <nl> for ( BlockRenderLayer blockrenderlayer : BlockRenderLayer . values ( ) ) <nl> - @ @ - 413 , 6 + 418 , 26 @ @ <nl> + @ @ - 413 , 6 + 419 , 26 @ @ <nl> return this . field _ 178593 _ n & & this . field _ 188284 _ q ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index 541683a . . 111dad6 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 149 , 13 + 149 , 7 @ @ public class ForgeHooksClient <nl> renderPass = pass ; <nl> } <nl> <nl> - static final ThreadLocal < BlockRenderLayer > renderLayer = new ThreadLocal < BlockRenderLayer > ( ) <nl> - { <nl> - protected BlockRenderLayer initialValue ( ) <nl> - { <nl> - return BlockRenderLayer . SOLID ; <nl> - } <nl> - } ; <nl> + static final ThreadLocal < BlockRenderLayer > renderLayer = new ThreadLocal < BlockRenderLayer > ( ) ; <nl> <nl> public static void setRenderLayer ( BlockRenderLayer layer ) <nl> { <nl> @ @ - 525 , 13 + 519 , 16 @ @ public class ForgeHooksClient <nl> <nl> public static void putQuadColor ( VertexBuffer renderer , BakedQuad quad , int color ) <nl> { <nl> - float cr = color & 0xFF ; <nl> + float cb = color & 0xFF ; <nl> float cg = ( color > > > 8 ) & 0xFF ; <nl> - float cb = ( color > > > 16 ) & 0xFF ; <nl> + float cr = ( color > > > 16 ) & 0xFF ; <nl> float ca = ( color > > > 24 ) & 0xFF ; <nl> + VertexFormat format = quad . getFormat ( ) ; <nl> + int size = format . getIntegerSize ( ) ; <nl> + int offset = format . getColorOffset ( ) / 4 ; / / assumes that color is aligned <nl> for ( int i = 0 ; i < 4 ; i + + ) <nl> { <nl> - int vc = quad . getVertexData ( ) [ 3 + 7 * i ] ; <nl> + int vc = quad . getVertexData ( ) [ offset + size * i ] ; <nl> float vcr = vc & 0xFF ; <nl> float vcg = ( vc > > > 8 ) & 0xFF ; <nl> float vcb = ( vc > > > 16 ) & 0xFF ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / IColoredBakedQuad . java b / src / main / java / net / minecraftforge / client / model / IColoredBakedQuad . java <nl> deleted file mode 100644 <nl> index e8acab1 . . 0000000 <nl> - - - a / src / main / java / net / minecraftforge / client / model / IColoredBakedQuad . java <nl> + + + / dev / null <nl> @ @ - 1 , 16 + 0 , 0 @ @ <nl> - package net . minecraftforge . client . model ; <nl> - <nl> - import net . minecraft . client . renderer . block . model . BakedQuad ; <nl> - import net . minecraft . client . renderer . texture . TextureAtlasSprite ; <nl> - import net . minecraft . client . renderer . vertex . VertexFormat ; <nl> - import net . minecraft . util . EnumFacing ; <nl> - <nl> - public interface IColoredBakedQuad { <nl> - public static class ColoredBakedQuad extends BakedQuad implements IColoredBakedQuad <nl> - { <nl> - public ColoredBakedQuad ( int [ ] data , int tintIndex , EnumFacing side , TextureAtlasSprite sprite , VertexFormat format ) <nl> - { <nl> - super ( data , tintIndex , side , sprite , format ) ; <nl> - } <nl> - } <nl> - } <nl> \ No newline at end of file <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / ItemTextureQuadConverter . java b / src / main / java / net / minecraftforge / client / model / ItemTextureQuadConverter . java <nl> index 074e687 . . c946739 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ItemTextureQuadConverter . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ItemTextureQuadConverter . java <nl> @ @ - 206 , 7 + 206 , 6 @ @ public final class ItemTextureQuadConverter <nl> UnpackedBakedQuad . Builder builder = new UnpackedBakedQuad . Builder ( format ) ; <nl> builder . setQuadTint ( - 1 ) ; <nl> builder . setQuadOrientation ( side ) ; <nl> - builder . setQuadColored ( ) ; <nl> <nl> if ( side = = EnumFacing . NORTH ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / ModelFluid . java b / src / main / java / net / minecraftforge / client / model / ModelFluid . java <nl> index a876fc4 . . be1134a 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ModelFluid . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ModelFluid . java <nl> @ @ - 209 , 7 + 209 , 6 @ @ public final class ModelFluid implements IModelCustomData <nl> EnumFacing side = gas ? EnumFacing . DOWN : EnumFacing . UP ; <nl> UnpackedBakedQuad . Builder builder = new UnpackedBakedQuad . Builder ( format ) ; <nl> builder . setQuadOrientation ( side ) ; <nl> - builder . setQuadColored ( ) ; <nl> for ( int i = gas ? 3 : 0 ; i ! = ( gas ? - 1 : 4 ) ; i + = ( gas ? - 1 : 1 ) ) <nl> { <nl> putVertex ( <nl> @ @ - 225 , 7 + 224 , 6 @ @ public final class ModelFluid implements IModelCustomData <nl> side = side . getOpposite ( ) ; <nl> builder = new UnpackedBakedQuad . Builder ( format ) ; <nl> builder . setQuadOrientation ( side ) ; <nl> - builder . setQuadColored ( ) ; <nl> for ( int i = gas ? 3 : 0 ; i ! = ( gas ? - 1 : 4 ) ; i + = ( gas ? - 1 : 1 ) ) <nl> { <nl> putVertex ( <nl> @ @ - 247 , 7 + 245 , 6 @ @ public final class ModelFluid implements IModelCustomData <nl> { <nl> builder = new UnpackedBakedQuad . Builder ( format ) ; <nl> builder . setQuadOrientation ( side ) ; <nl> - builder . setQuadColored ( ) ; <nl> for ( int j = 0 ; j < 4 ; j + + ) <nl> { <nl> int l = ( k * 3 ) + ( 1 - 2 * k ) * j ; <nl> @ @ - 269 , 7 + 266 , 6 @ @ public final class ModelFluid implements IModelCustomData <nl> / / 1 quad for inventory <nl> UnpackedBakedQuad . Builder builder = new UnpackedBakedQuad . Builder ( format ) ; <nl> builder . setQuadOrientation ( EnumFacing . UP ) ; <nl> - builder . setQuadColored ( ) ; <nl> for ( int i = 0 ; i < 4 ; i + + ) <nl> { <nl> putVertex ( <nl> @ @ - 299 , 11 + 295 , 10 @ @ public final class ModelFluid implements IModelCustomData <nl> builder . put ( e , data ) ; <nl> break ; <nl> case COLOR : <nl> - float d = LightUtil . diffuseLight ( side ) ; <nl> builder . put ( e , <nl> - d * ( ( color > > 16 ) & 0xFF ) / 255f , <nl> - d * ( ( color > > 8 ) & 0xFF ) / 255f , <nl> - d * ( color & 0xFF ) / 255f , <nl> + ( ( color > > 16 ) & 0xFF ) / 255f , <nl> + ( ( color > > 8 ) & 0xFF ) / 255f , <nl> + ( color & 0xFF ) / 255f , <nl> ( ( color > > 24 ) & 0xFF ) / 255f ) ; <nl> break ; <nl> case UV : if ( format . getElement ( e ) . getIndex ( ) = = 0 ) <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java b / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java <nl> index b110763 . . 3478841 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java <nl> @ @ - 164 , 7 + 164 , 7 @ @ public final class MultiLayerModel implements IModelCustomData <nl> { <nl> return quads . get ( Optional . fromNullable ( side ) ) ; <nl> } <nl> - else if ( ! models . containsKey ( layer ) ) <nl> + else if ( ! models . containsKey ( Optional . of ( layer ) ) ) <nl> { <nl> model = missing ; <nl> } <nl> @ @ - 172 , 6 + 172 , 7 @ @ public final class MultiLayerModel implements IModelCustomData <nl> { <nl> model = models . get ( Optional . of ( layer ) ) ; <nl> } <nl> + / / assumes that child model will handle this state properly . FIXME ? <nl> return model . getQuads ( state , side , rand ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> index 7196cda . . 34371c5 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> @ @ - 717 , 7 + 717 , 6 @ @ public final class B3DLoader implements ICustomModelLoader <nl> { <nl> UnpackedBakedQuad . Builder quadBuilder = new UnpackedBakedQuad . Builder ( format ) ; <nl> quadBuilder . setQuadOrientation ( EnumFacing . getFacingFromVector ( f . getNormal ( ) . x , f . getNormal ( ) . y , f . getNormal ( ) . z ) ) ; <nl> - quadBuilder . setQuadColored ( ) ; <nl> List < Texture > textures = null ; <nl> if ( f . getBrush ( ) ! = null ) textures = f . getBrush ( ) . getTextures ( ) ; <nl> TextureAtlasSprite sprite ; <nl> @ @ - 744 , 14 + 743 , 13 @ @ public final class B3DLoader implements ICustomModelLoader <nl> builder . put ( e , v . getPos ( ) . x , v . getPos ( ) . y , v . getPos ( ) . z , 1 ) ; <nl> break ; <nl> case COLOR : <nl> - float d = LightUtil . diffuseLight ( faceNormal . x , faceNormal . y , faceNormal . z ) ; <nl> if ( v . getColor ( ) ! = null ) <nl> { <nl> - builder . put ( e , d * v . getColor ( ) . x , d * v . getColor ( ) . y , d * v . getColor ( ) . z , v . getColor ( ) . w ) ; <nl> + builder . put ( e , v . getColor ( ) . x , v . getColor ( ) . y , v . getColor ( ) . z , v . getColor ( ) . w ) ; <nl> } <nl> else <nl> { <nl> - builder . put ( e , d , d , d , 1 ) ; <nl> + builder . put ( e , 1 , 1 , 1 , 1 ) ; <nl> } <nl> break ; <nl> case UV : <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / obj / OBJModel . java b / src / main / java / net / minecraftforge / client / model / obj / OBJModel . java <nl> index 5c9df53 . . fc53067 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / obj / OBJModel . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / obj / OBJModel . java <nl> @ @ - 1400 , 7 + 1400 , 6 @ @ public class OBJModel implements IRetexturableModel , IModelCustomData <nl> } else sprite = this . textures . get ( f . getMaterialName ( ) ) ; <nl> UnpackedBakedQuad . Builder builder = new UnpackedBakedQuad . Builder ( format ) ; <nl> builder . setQuadOrientation ( EnumFacing . getFacingFromVector ( f . getNormal ( ) . x , f . getNormal ( ) . y , f . getNormal ( ) . z ) ) ; <nl> - builder . setQuadColored ( ) ; <nl> Normal faceNormal = f . getNormal ( ) ; <nl> putVertexData ( builder , f . verts [ 0 ] , faceNormal , TextureCoordinate . getDefaultUVs ( ) [ 0 ] , sprite ) ; <nl> putVertexData ( builder , f . verts [ 1 ] , faceNormal , TextureCoordinate . getDefaultUVs ( ) [ 1 ] , sprite ) ; <nl> @ @ - 1423 , 20 + 1422 , 14 @ @ public class OBJModel implements IRetexturableModel , IModelCustomData <nl> builder . put ( e , v . getPos ( ) . x , v . getPos ( ) . y , v . getPos ( ) . z , v . getPos ( ) . w ) ; <nl> break ; <nl> case COLOR : <nl> - float d ; <nl> - if ( v . hasNormal ( ) ) <nl> - d = LightUtil . diffuseLight ( v . getNormal ( ) . x , v . getNormal ( ) . y , v . getNormal ( ) . z ) ; <nl> - else <nl> - d = LightUtil . diffuseLight ( faceNormal . x , faceNormal . y , faceNormal . z ) ; <nl> - <nl> if ( v . getMaterial ( ) ! = null ) <nl> builder . put ( e , <nl> - d * v . getMaterial ( ) . getColor ( ) . x , <nl> - d * v . getMaterial ( ) . getColor ( ) . y , <nl> - d * v . getMaterial ( ) . getColor ( ) . z , <nl> + v . getMaterial ( ) . getColor ( ) . x , <nl> + v . getMaterial ( ) . getColor ( ) . y , <nl> + v . getMaterial ( ) . getColor ( ) . z , <nl> v . getMaterial ( ) . getColor ( ) . w ) ; <nl> else <nl> - builder . put ( e , d , d , d , 1 ) ; <nl> + builder . put ( e , 1 , 1 , 1 , 1 ) ; <nl> break ; <nl> case UV : <nl> if ( ! v . hasTextureCoordinate ( ) ) <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / IVertexConsumer . java b / src / main / java / net / minecraftforge / client / model / pipeline / IVertexConsumer . java <nl> index 92cf355 . . f079cb1 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / pipeline / IVertexConsumer . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / IVertexConsumer . java <nl> @ @ - 17 , 7 + 17 , 6 @ @ public interface IVertexConsumer <nl> <nl> void setQuadTint ( int tint ) ; <nl> void setQuadOrientation ( EnumFacing orientation ) ; <nl> - void setQuadColored ( ) ; <nl> <nl> void put ( int element , float . . . data ) ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java b / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java <nl> index de273c2 . . c6e7bdb 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java <nl> @ @ - 8 , 7 + 8 , 6 @ @ import net . minecraft . client . renderer . vertex . VertexFormatElement ; <nl> import net . minecraft . client . renderer . vertex . VertexFormatElement . EnumUsage ; <nl> import net . minecraft . util . EnumFacing ; <nl> import net . minecraftforge . client . ForgeHooksClient ; <nl> - import net . minecraftforge . client . model . IColoredBakedQuad ; <nl> <nl> import org . apache . commons . lang3 . tuple . Pair ; <nl> <nl> @ @ - 89 , 10 + 88 , 6 @ @ public class LightUtil <nl> { <nl> consumer . setQuadTint ( quad . getTintIndex ( ) ) ; <nl> } <nl> - if ( quad instanceof IColoredBakedQuad ) <nl> - { <nl> - consumer . setQuadColored ( ) ; <nl> - } <nl> / / int [ ] eMap = mapFormats ( consumer . getVertexFormat ( ) , DefaultVertexFormats . ITEM ) ; <nl> float [ ] data = new float [ 4 ] ; <nl> VertexFormat formatFrom = consumer . getVertexFormat ( ) ; <nl> @ @ - 281 , 19 + 276 , 11 @ @ public class LightUtil <nl> public static void renderQuadColor ( VertexBuffer wr , BakedQuad quad , int auxColor ) <nl> { <nl> wr . addVertexData ( quad . getVertexData ( ) ) ; <nl> - if ( quad instanceof IColoredBakedQuad ) <nl> - { <nl> - ForgeHooksClient . putQuadColor ( wr , quad , auxColor ) ; <nl> - } <nl> - else <nl> - { <nl> - wr . putColor4 ( auxColor ) ; <nl> - } <nl> + ForgeHooksClient . putQuadColor ( wr , quad , auxColor ) ; <nl> } <nl> <nl> public static class ItemConsumer extends VertexTransformer <nl> { <nl> - private boolean colored = false ; <nl> private int vertices = 0 ; <nl> <nl> private float [ ] auxColor = new float [ ] { 1 , 1 , 1 , 1 } ; <nl> @ @ - 309 , 23 + 296 , 14 @ @ public class LightUtil <nl> System . arraycopy ( auxColor , 0 , this . auxColor , 0 , this . auxColor . length ) ; <nl> } <nl> <nl> - @ Override <nl> - public void setQuadColored ( ) <nl> - { <nl> - colored = true ; <nl> - } <nl> - <nl> public void put ( int element , float . . . data ) <nl> { <nl> if ( getVertexFormat ( ) . getElement ( element ) . getUsage ( ) = = EnumUsage . COLOR ) <nl> { <nl> System . arraycopy ( auxColor , 0 , buf , 0 , buf . length ) ; <nl> - if ( colored ) <nl> + for ( int i = 0 ; i < 4 ; i + + ) <nl> { <nl> - for ( int i = 0 ; i < 4 ; i + + ) <nl> - { <nl> - buf [ i ] * = data [ i ] ; <nl> - } <nl> + buf [ i ] * = data [ i ] ; <nl> } <nl> super . put ( element , buf ) ; <nl> } <nl> @ @ - 339 , 7 + 317 , 6 @ @ public class LightUtil <nl> if ( vertices = = 4 ) <nl> { <nl> vertices = 0 ; <nl> - colored = false ; <nl> } <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / UnpackedBakedQuad . java b / src / main / java / net / minecraftforge / client / model / pipeline / UnpackedBakedQuad . java <nl> index 8e04342 . . 1dc298b 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / pipeline / UnpackedBakedQuad . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / UnpackedBakedQuad . java <nl> @ @ - 4 , 7 + 4 , 6 @ @ import net . minecraft . client . renderer . block . model . BakedQuad ; <nl> import net . minecraft . client . renderer . texture . TextureAtlasSprite ; <nl> import net . minecraft . client . renderer . vertex . VertexFormat ; <nl> import net . minecraft . util . EnumFacing ; <nl> - import net . minecraftforge . client . model . IColoredBakedQuad ; <nl> <nl> / / advantages : non - fixed - length vertex format , no overhead of packing and unpacking attributes to transform the model <nl> / / disadvantages : ( possibly ) larger memory footprint , overhead on packing the attributes at the final rendering stage <nl> @ @ - 48 , 10 + 47 , 6 @ @ public class UnpackedBakedQuad extends BakedQuad <nl> consumer . setQuadTint ( getTintIndex ( ) ) ; <nl> } <nl> consumer . setQuadOrientation ( getFace ( ) ) ; <nl> - if ( this instanceof IColoredBakedQuad ) <nl> - { <nl> - consumer . setQuadColored ( ) ; <nl> - } <nl> for ( int v = 0 ; v < 4 ; v + + ) <nl> { <nl> for ( int e = 0 ; e < consumer . getVertexFormat ( ) . getElementCount ( ) ; e + + ) <nl> @ @ - 68 , 14 + 63 , 6 @ @ public class UnpackedBakedQuad extends BakedQuad <nl> } <nl> } <nl> <nl> - public static class Colored extends UnpackedBakedQuad implements IColoredBakedQuad <nl> - { <nl> - public Colored ( float [ ] [ ] [ ] unpackedData , int tint , EnumFacing orientation , TextureAtlasSprite texture , VertexFormat format ) <nl> - { <nl> - super ( unpackedData , tint , orientation , texture , format ) ; <nl> - } <nl> - } <nl> - <nl> public static class Builder implements IVertexConsumer <nl> { <nl> private final VertexFormat format ; <nl> @ @ - 83 , 7 + 70 , 6 @ @ public class UnpackedBakedQuad extends BakedQuad <nl> private int tint = - 1 ; <nl> private EnumFacing orientation ; <nl> private TextureAtlasSprite texture ; <nl> - private boolean isColored = false ; <nl> <nl> private int vertices = 0 ; <nl> private int elements = 0 ; <nl> @ @ - 115 , 11 + 101 , 6 @ @ public class UnpackedBakedQuad extends BakedQuad <nl> this . texture = texture ; <nl> } <nl> <nl> - public void setQuadColored ( ) <nl> - { <nl> - this . isColored = true ; <nl> - } <nl> - <nl> public void put ( int element , float . . . data ) <nl> { <nl> for ( int i = 0 ; i < 4 ; i + + ) <nl> @ @ - 151 , 10 + 132 , 6 @ @ public class UnpackedBakedQuad extends BakedQuad <nl> { <nl> throw new IllegalStateException ( " not enough data " ) ; <nl> } <nl> - if ( isColored ) <nl> - { <nl> - return new Colored ( unpackedData , tint , orientation , texture , format ) ; <nl> - } <nl> return new UnpackedBakedQuad ( unpackedData , tint , orientation , texture , format ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / VertexBufferConsumer . java b / src / main / java / net / minecraftforge / client / model / pipeline / VertexBufferConsumer . java <nl> index 7a783b4 . . f07e149 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / pipeline / VertexBufferConsumer . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / VertexBufferConsumer . java <nl> @ @ - 57 , 5 + 57 , 4 @ @ public class VertexBufferConsumer implements IVertexConsumer <nl> <nl> public void setQuadTint ( int tint ) { } <nl> public void setQuadOrientation ( EnumFacing orientation ) { } <nl> - public void setQuadColored ( ) { } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java <nl> index 5ffd67f . . 3f5d913 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java <nl> @ @ - 148 , 6 + 148 , 11 @ @ public class VertexLighterFlat extends QuadGatheringTransformer <nl> if ( skyLight > lightmap [ v ] [ 1 ] ) lightmap [ v ] [ 1 ] = skyLight ; <nl> } <nl> updateColor ( normal [ v ] , color [ v ] , x , y , z , tint , multiplier ) ; <nl> + float diffuse = LightUtil . diffuseLight ( normal [ v ] [ 0 ] , normal [ v ] [ 1 ] , normal [ v ] [ 2 ] ) ; <nl> + for ( int i = 0 ; i < 3 ; i + + ) <nl> + { <nl> + color [ v ] [ i ] * = diffuse ; <nl> + } <nl> if ( EntityRenderer . anaglyphEnable ) <nl> { <nl> applyAnaglyph ( color [ v ] ) ; <nl> @ @ - 234 , 7 + 239 , 6 @ @ public class VertexLighterFlat extends QuadGatheringTransformer <nl> } <nl> public void setQuadOrientation ( EnumFacing orientation ) { } <nl> public void setQuadCulled ( ) { } <nl> - public void setQuadColored ( ) { } <nl> <nl> public void setWorld ( IBlockAccess world ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / VertexTransformer . java b / src / main / java / net / minecraftforge / client / model / pipeline / VertexTransformer . java <nl> index 5fe6565 . . 7a38467 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / pipeline / VertexTransformer . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / VertexTransformer . java <nl> @ @ - 27 , 11 + 27 , 6 @ @ public class VertexTransformer implements IVertexConsumer <nl> parent . setQuadOrientation ( orientation ) ; <nl> } <nl> <nl> - public void setQuadColored ( ) <nl> - { <nl> - parent . setQuadColored ( ) ; <nl> - } <nl> - <nl> public void put ( int element , float . . . data ) <nl> { <nl> parent . put ( element , data ) ; <nl> diff - - git a / src / test / resources / assets / forgedebugmodelanimation / blockstates / test _ animation _ block . json b / src / test / resources / assets / forgedebugmodelanimation / blockstates / test _ animation _ block . json <nl> index 6fc5602 . . f2faef7 100644 <nl> - - - a / src / test / resources / assets / forgedebugmodelanimation / blockstates / test _ animation _ block . json <nl> + + + b / src / test / resources / assets / forgedebugmodelanimation / blockstates / test _ animation _ block . json <nl> @ @ - 16 , 14 + 16 , 7 @ @ <nl> " variants " : { <nl> " normal " : [ { } ] , <nl> " inventory " : [ { <nl> - " transform " : { <nl> - " rotation " : { " y " : 180 } , <nl> - " thirdperson " : { <nl> - " rotation " : [ { " z " : 170 } , { " y " : - 45 } , { " z " : 20 } ] , <nl> - " translation " : [ 0 , 0 . 09375 , - 0 . 171875 ] , <nl> - " scale " : 0 . 375 <nl> - } <nl> - } , <nl> + " transform " : " forge : default - block " , <nl> " model " : " forgedebugmodelanimation : engine " , <nl> " submodel " : { <nl> " ring " : { " model " : " forgedebugmodelanimation : engine _ ring " } <nl> diff - - git a / src / test / resources / assets / forgedebugmodelloaderregistry / blockstates / CustomModelBlock . json b / src / test / resources / assets / forgedebugmodelloaderregistry / blockstates / CustomModelBlock . json <nl> index e4e82e0 . . ced7cff 100644 <nl> - - - a / src / test / resources / assets / forgedebugmodelloaderregistry / blockstates / CustomModelBlock . json <nl> + + + b / src / test / resources / assets / forgedebugmodelloaderregistry / blockstates / CustomModelBlock . json <nl> @ @ - 13 , 14 + 13 , 7 @ @ <nl> " variants " : { <nl> " normal " : [ { } ] , <nl> " inventory " : [ { <nl> - " transform " : { <nl> - " rotation " : { " y " : 180 } , <nl> - " thirdperson " : { <nl> - " rotation " : [ { " z " : 170 } , { " y " : - 45 } , { " z " : 20 } ] , <nl> - " translation " : [ 0 , 0 . 09375 , - 0 . 171875 ] , <nl> - " scale " : 0 . 375 <nl> - } <nl> - } <nl> + " transform " : " forge : default - block " <nl> } ] , <nl> " facing " : { <nl> " down " : { " x " : 90 } , <nl> diff - - git a / src / test / resources / assets / forgedebugmultilayermodel / blockstates / test _ layer _ block . json b / src / test / resources / assets / forgedebugmultilayermodel / blockstates / test _ layer _ block . json <nl> index 15a23f0 . . e5ff027 100644 <nl> - - - a / src / test / resources / assets / forgedebugmultilayermodel / blockstates / test _ layer _ block . json <nl> + + + b / src / test / resources / assets / forgedebugmultilayermodel / blockstates / test _ layer _ block . json <nl> @ @ - 7 , 13 + 7 , 16 @ @ <nl> " base " : " forgedebugmultilayermodel : test _ layer _ block # aux " , <nl> / / per - layer models <nl> " Solid " : " forgedebugmultilayermodel : test _ layer _ block # aux " , <nl> - " Translucent " : " minecraft : pink _ stained _ glass _ pane # east = true , north = false , south = false , west = true " <nl> + " Translucent " : " forgedebugmultilayermodel : test _ layer _ block # pane " <nl> } , <nl> " transform " : " forge : default - block " <nl> } , <nl> " variants " : { <nl> " normal " : [ { } ] , <nl> " inventory " : [ { } ] , <nl> + " pane " : [ { <nl> + " model " : " minecraft : pink _ stained _ glass _ pane _ noside " <nl> + } ] , <nl> " aux " : [ { <nl> " model " : " cube _ all " , <nl> " textures " : { " all " : " blocks / slime " } ,
NEAREST DIFF (one line): diff - - git a / patches . mcp / minecraft / net / minecraft / client / renderer / block / model / ModelManager . java . patch b / patches . mcp / minecraft / net / minecraft / client / renderer / block / model / ModelManager . java . patch <nl> index 6ce4d19 . . 54256d1 100644 <nl> - - - a / patches . mcp / minecraft / net / minecraft / client / renderer / block / model / ModelManager . java . patch <nl> + + + b / patches . mcp / minecraft / net / minecraft / client / renderer / block / model / ModelManager . java . patch <nl> @ @ - 1 , 14 + 1 , 15 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / client / renderer / block / model / ModelManager . java <nl> + + + . . / src - work / minecraft / net / minecraft / client / renderer / block / model / ModelManager . java <nl> - @ @ - 24 , 9 + 24 , 10 @ @ <nl> + @ @ - 24 , 9 + 24 , 11 @ @ <nl> <nl> public void onResourceManagerReload ( IResourceManager resourceManager ) <nl> { <nl> - ModelBakery modelbakery = new ModelBakery ( resourceManager , this . texMap , this . modelProvider ) ; <nl> - + ModelBakery modelbakery = new net . minecraftforge . client . model . ModelLoader ( resourceManager , this . texMap , this . modelProvider ) ; <nl> + + / / FIXME : reenable after ModelLoader is fixed <nl> + + ModelBakery modelbakery = new ModelBakery ( resourceManager , this . texMap , this . modelProvider ) ; / / new net . minecraftforge . client . model . ModelLoader ( resourceManager , this . texMap , this . modelProvider ) ; <nl> this . modelRegistry = modelbakery . setupModelRegistry ( ) ; <nl> this . defaultModel = ( IBakedModel ) this . modelRegistry . getObject ( ModelBakery . MODEL _ MISSING ) ; <nl> - + net . minecraftforge . client . ForgeHooksClient . onModelBake ( this , this . modelRegistry , modelbakery ) ; <nl> + + / / net . minecraftforge . client . ForgeHooksClient . onModelBake ( this , this . modelRegistry , modelbakery ) ; <nl> this . modelProvider . reloadModels ( ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index 7d258b2 . . 106a8e7 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 71 , 7 + 71 , 6 @ @ import net . minecraftforge . client . event . RenderHandEvent ; <nl> import net . minecraftforge . client . event . RenderWorldLastEvent ; <nl> import net . minecraftforge . client . event . TextureStitchEvent ; <nl> import net . minecraftforge . client . event . sound . PlaySoundEvent ; <nl> - import net . minecraftforge . client . model . IFlexibleBakedModel ; <nl> import net . minecraftforge . client . model . IModelPart ; <nl> import net . minecraftforge . client . model . IPerspectiveAwareModel ; <nl> import net . minecraftforge . client . model . ModelLoader ; <nl> @ @ - 356 , 11 + 355 , 10 @ @ public class ForgeHooksClient <nl> } <nl> * / <nl> <nl> - public static void onModelBake ( ModelManager modelManager , IRegistry < ModelResourceLocation , IBakedModel > modelRegistry , ModelBakery modelBakery ) <nl> + public static void onModelBake ( ModelManager modelManager , IRegistry < ModelResourceLocation , IBakedModel > modelRegistry , ModelLoader modelLoader ) <nl> { <nl> - ModelLoader loader = ( ModelLoader ) modelBakery ; <nl> - MinecraftForge . EVENT _ BUS . post ( new ModelBakeEvent ( modelManager , modelRegistry , loader ) ) ; <nl> - loader . onPostBakeEvent ( modelRegistry ) ; <nl> + MinecraftForge . EVENT _ BUS . post ( new ModelBakeEvent ( modelManager , modelRegistry , modelLoader ) ) ; <nl> + modelLoader . onPostBakeEvent ( modelRegistry ) ; <nl> } <nl> <nl> 	 public static Matrix4f getMatrix ( ItemTransformVec3f transform ) <nl> @ @ - 389 , 7 + 387 , 7 @ @ public class ForgeHooksClient <nl> { <nl> if ( model instanceof IPerspectiveAwareModel ) <nl> { <nl> - Pair < ? extends IFlexibleBakedModel , Matrix4f > pair = ( ( IPerspectiveAwareModel ) model ) . handlePerspective ( cameraTransformType ) ; <nl> + Pair < ? extends IBakedModel , Matrix4f > pair = ( ( IPerspectiveAwareModel ) model ) . handlePerspective ( cameraTransformType ) ; <nl> <nl> if ( pair . getRight ( ) ! = null ) multiplyCurrentGlMatrix ( pair . getRight ( ) ) ; <nl> return pair . getLeft ( ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / event / ModelBakeEvent . java b / src / main / java / net / minecraftforge / client / event / ModelBakeEvent . java <nl> index 4a0210e . . dd20b20 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / event / ModelBakeEvent . java <nl> + + + b / src / main / java / net / minecraftforge / client / event / ModelBakeEvent . java <nl> @ @ - 1 , 7 + 1 , 6 @ @ <nl> package net . minecraftforge . client . event ; <nl> <nl> import net . minecraft . client . renderer . block . model . IBakedModel ; <nl> - import net . minecraft . client . renderer . block . model . ModelBakery ; <nl> import net . minecraft . client . renderer . block . model . ModelManager ; <nl> import net . minecraft . client . renderer . block . model . ModelResourceLocation ; <nl> import net . minecraft . util . registry . IRegistry ; <nl> @ @ - 12 , 25 + 11 , 32 @ @ import net . minecraftforge . fml . common . eventhandler . Event ; <nl> * Fired when the ModelManager is notified of the resource manager reloading . <nl> * Called after model registry is setup , but before it ' s passed to BlockModelShapes . <nl> * / <nl> + / / TODO : try to merge with ICustomModelLoader <nl> public class ModelBakeEvent extends Event <nl> { <nl> - public final ModelManager modelManager ; <nl> - public final IRegistry < ModelResourceLocation , IBakedModel > modelRegistry ; <nl> - @ Deprecated <nl> - public final ModelBakery modelBakery ; <nl> - public final ModelLoader modelLoader ; <nl> - <nl> - @ Deprecated <nl> - public ModelBakeEvent ( ModelManager modelManager , IRegistry < ModelResourceLocation , IBakedModel > modelRegistry , ModelBakery modelBakery ) <nl> - { <nl> - this ( modelManager , modelRegistry , ( ModelLoader ) modelBakery ) ; <nl> - } <nl> + private final ModelManager modelManager ; <nl> + private final IRegistry < ModelResourceLocation , IBakedModel > modelRegistry ; <nl> + private final ModelLoader modelLoader ; <nl> <nl> public ModelBakeEvent ( ModelManager modelManager , IRegistry < ModelResourceLocation , IBakedModel > modelRegistry , ModelLoader modelLoader ) <nl> { <nl> this . modelManager = modelManager ; <nl> this . modelRegistry = modelRegistry ; <nl> - this . modelBakery = modelLoader ; <nl> this . modelLoader = modelLoader ; <nl> } <nl> + <nl> + public ModelManager getModelManager ( ) <nl> + { <nl> + return modelManager ; <nl> + } <nl> + <nl> + public IRegistry < ModelResourceLocation , IBakedModel > getModelRegistry ( ) <nl> + { <nl> + return modelRegistry ; <nl> + } <nl> + <nl> + public ModelLoader getModelLoader ( ) <nl> + { <nl> + return modelLoader ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / BlockStateLoader . java b / src / main / java / net / minecraftforge / client / model / BlockStateLoader . java <nl> index 65f40be . . 4e70d85 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / BlockStateLoader . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / BlockStateLoader . java <nl> @ @ - 146 , 12 + 146 , 13 @ @ public class BlockStateLoader <nl> this . gui3d = gui3d ; <nl> } <nl> <nl> - private IModel runModelHooks ( IModel base , boolean smooth , boolean gui3d , ImmutableMap < String , String > textureMap , ImmutableMap < String , String > customData ) <nl> + private IModel runModelHooks ( IModel base , boolean smooth , boolean gui3d , boolean uvlock , ImmutableMap < String , String > textureMap , ImmutableMap < String , String > customData ) <nl> { <nl> base = ModelProcessingHelper . customData ( base , customData ) ; <nl> base = ModelProcessingHelper . retexture ( base , textureMap ) ; <nl> base = ModelProcessingHelper . smoothLighting ( base , smooth ) ; <nl> base = ModelProcessingHelper . gui3d ( base , gui3d ) ; <nl> + base = ModelProcessingHelper . uvlock ( base , uvlock ) ; <nl> return base ; <nl> } <nl> <nl> @ @ - 166 , 7 + 167 , 7 @ @ public class BlockStateLoader <nl> <nl> if ( hasBase ) <nl> { <nl> - base = runModelHooks ( base , smooth , gui3d , textures , customData ) ; <nl> + base = runModelHooks ( base , smooth , gui3d , this . func _ 188049 _ c ( ) , textures , customData ) ; <nl> <nl> if ( size < = 0 ) <nl> return base ; <nl> @ @ - 193 , 9 + 194 , 8 @ @ public class BlockStateLoader <nl> } <nl> <nl> IModelState partState = new ModelStateComposition ( baseTr , part . getState ( ) ) ; <nl> - if ( part . isUVLock ( ) ) partState = new ModelLoader . UVLock ( partState ) ; <nl> <nl> - models . put ( entry . getKey ( ) , Pair . < IModel , IModelState > of ( runModelHooks ( model , part . smooth , part . gui3d , part . getTextures ( ) , part . getCustomData ( ) ) , partState ) ) ; <nl> + models . put ( entry . getKey ( ) , Pair . < IModel , IModelState > of ( runModelHooks ( model , part . smooth , part . gui3d , part . uvLock , part . getTextures ( ) , part . getCustomData ( ) ) , partState ) ) ; <nl> } <nl> <nl> return new MultiModel ( func _ 188046 _ a ( ) , hasBase ? base : null , baseTr , models . build ( ) ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / IModelUVLock . java b / src / main / java / net / minecraftforge / client / model / IModelUVLock . java <nl> new file mode 100644 <nl> index 0000000 . . aa3dd8f <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / model / IModelUVLock . java <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + package net . minecraftforge . client . model ; <nl> + <nl> + public interface IModelUVLock extends IModel <nl> + { <nl> + public IModel uvlock ( boolean value ) ; <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoader . java b / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> index cac257b . . 77de536 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ModelLoader . java <nl> @ @ - 17 , 12 + 17 , 14 @ @ import java . util . Set ; <nl> <nl> import com . google . common . base . Joiner ; <nl> import com . google . common . collect . * ; <nl> + <nl> import net . minecraft . block . Block ; <nl> import net . minecraft . block . state . IBlockState ; <nl> import net . minecraft . client . Minecraft ; <nl> import net . minecraft . client . renderer . BlockModelShapes ; <nl> import net . minecraft . client . renderer . ItemMeshDefinition ; <nl> import net . minecraft . client . renderer . ItemModelMesher ; <nl> + import net . minecraft . client . renderer . block . model . BakedQuad ; <nl> import net . minecraft . client . renderer . block . model . BlockPart ; <nl> import net . minecraft . client . renderer . block . model . BlockPartFace ; <nl> import net . minecraft . client . renderer . block . model . BlockPartRotation ; <nl> @ @ - 162 , 16 + 164 , 42 @ @ public class ModelLoader extends ModelBakery <nl> ProgressBar blockBar = ProgressManager . push ( " ModelLoader : blocks " , variants . size ( ) ) ; <nl> for ( ModelResourceLocation variant : variants ) <nl> { <nl> - loadVariants ( ImmutableList . of ( variant ) ) ; <nl> + loadVariant ( variant ) ; <nl> blockBar . step ( variant . toString ( ) ) ; <nl> } <nl> ProgressManager . pop ( blockBar ) ; <nl> } <nl> <nl> + / / FIXME : all the new shiny multipart things <nl> + private void loadVariant ( ModelResourceLocation variant ) <nl> + { <nl> + try <nl> + { <nl> + ModelBlockDefinition modelblockdefinition = this . getModelBlockDefinition ( variant ) ; <nl> + <nl> + try <nl> + { <nl> + this . registerVariant ( modelblockdefinition , variant ) ; <nl> + } <nl> + catch ( Exception ex ) <nl> + { <nl> + FMLLog . getLogger ( ) . warn ( " Unable to load variant : " + variant . getVariant ( ) + " from " + variant , ex ) ; <nl> + } <nl> + } <nl> + catch ( Exception ex ) <nl> + { <nl> + FMLLog . getLogger ( ) . warn ( " Unable to load definition " + variant , ex ) ; <nl> + } <nl> + } <nl> + <nl> + / / FIXME : this is probably not the hook point anymore <nl> @ Override <nl> protected void registerVariant ( ModelBlockDefinition definition , ModelResourceLocation location ) <nl> { <nl> - VariantList variants = null ; <nl> + / / for now <nl> + super . registerVariant ( definition , location ) ; <nl> + <nl> + / * VariantList variants = null ; <nl> try <nl> { <nl> variants = definition . getVariants ( location . getVariant ( ) ) ; <nl> @ @ - 190 , 7 + 218 , 7 @ @ public class ModelLoader extends ModelBakery <nl> { <nl> throw new RuntimeException ( e ) ; <nl> } <nl> - } <nl> + } * / <nl> } <nl> <nl> private void storeException ( ResourceLocation location , Exception exception ) <nl> @ @ - 387 , 7 + 415 , 7 @ @ public class ModelLoader extends ModelBakery <nl> <nl> IModel getVariantModel ( ModelResourceLocation location ) <nl> { <nl> - loadVariants ( ImmutableList . of ( location ) ) ; <nl> + loadVariant ( location ) ; <nl> IModel model = stateModels . get ( location ) ; <nl> if ( model = = null ) model = getMissingModel ( ) ; <nl> return model ; <nl> @ @ - 409 , 16 + 437 , 18 @ @ public class ModelLoader extends ModelBakery <nl> textures . addAll ( model . getTextures ( ) ) ; <nl> } <nl> <nl> - private class VanillaModelWrapper implements IRetexturableModel , IModelSimpleProperties , IAnimatedModel <nl> + private class VanillaModelWrapper implements IRetexturableModel , IModelSimpleProperties , IModelUVLock , IAnimatedModel <nl> { <nl> private final ResourceLocation location ; <nl> private final ModelBlock model ; <nl> + private final boolean uvlock ; <nl> private final ModelBlockAnimation animation ; <nl> <nl> - public VanillaModelWrapper ( ResourceLocation location , ModelBlock model , ModelBlockAnimation animation ) <nl> + public VanillaModelWrapper ( ResourceLocation location , ModelBlock model , boolean uvlock , ModelBlockAnimation animation ) <nl> { <nl> this . location = location ; <nl> this . model = model ; <nl> + this . uvlock = uvlock ; <nl> this . animation = animation ; <nl> } <nl> <nl> @ @ - 500 , 7 + 530 , 7 @ @ public class ModelLoader extends ModelBakery <nl> return builder . build ( ) ; <nl> } <nl> <nl> - public IBakedModel bake ( IModelState state , VertexFormat format , Function < ResourceLocation , TextureAtlasSprite > bakedTextureGetter ) <nl> + public IBakedModel bake ( IModelState state , final VertexFormat format , Function < ResourceLocation , TextureAtlasSprite > bakedTextureGetter ) <nl> { <nl> if ( ! Attributes . moreSpecific ( format , Attributes . DEFAULT _ BAKED _ FORMAT ) ) <nl> { <nl> @ @ - 517 , 12 + 547 , 6 @ @ public class ModelLoader extends ModelBakery <nl> } <nl> <nl> ItemCameraTransforms transforms = model . func _ 181682 _ g ( ) ; <nl> - boolean uvlock = false ; <nl> - if ( state instanceof UVLock ) <nl> - { <nl> - uvlock = true ; <nl> - state = ( ( UVLock ) state ) . getParent ( ) ; <nl> - } <nl> Map < TransformType , TRSRTransformation > tMap = Maps . newHashMap ( ) ; <nl> tMap . putAll ( IPerspectiveAwareModel . MapWrapper . getTransforms ( transforms ) ) ; <nl> tMap . putAll ( IPerspectiveAwareModel . MapWrapper . getTransforms ( state ) ) ; <nl> @ @ - 532 , 14 + 556 , 14 @ @ public class ModelLoader extends ModelBakery <nl> { <nl> return new ItemLayerModel ( model ) . bake ( perState , format , bakedTextureGetter ) ; <nl> } <nl> - if ( isCustomRenderer ( model ) ) return new BuiltInModel ( transforms ) ; <nl> + if ( isCustomRenderer ( model ) ) return new BuiltInModel ( transforms , model . func _ 187967 _ g ( ) ) ; <nl> return bakeNormal ( model , perState , state . apply ( Optional . < IModelPart > absent ( ) ) . or ( TRSRTransformation . identity ( ) ) , newTransforms , format , bakedTextureGetter , uvlock ) ; <nl> } <nl> <nl> private IBakedModel bakeNormal ( ModelBlock model , IModelState perState , final TRSRTransformation modelState , List < TRSRTransformation > newTransforms , VertexFormat format , final Function < ResourceLocation , TextureAtlasSprite > bakedTextureGetter , boolean uvLocked ) <nl> { <nl> TextureAtlasSprite particle = bakedTextureGetter . apply ( new ResourceLocation ( model . resolveTextureName ( " particle " ) ) ) ; <nl> - SimpleBakedModel . Builder builder = ( new SimpleBakedModel . Builder ( model ) ) . setTexture ( particle ) ; <nl> + SimpleBakedModel . Builder builder = ( new SimpleBakedModel . Builder ( model , model . func _ 187967 _ g ( ) ) ) . setTexture ( particle ) ; <nl> for ( int i = 0 ; i < model . getElements ( ) . size ( ) ; i + + ) <nl> { <nl> BlockPart part = model . getElements ( ) . get ( i ) ; <nl> @ @ - 566 , 31 + 590 , 27 @ @ public class ModelLoader extends ModelBakery <nl> } <nl> } <nl> <nl> - / / FIXME <nl> - return new ISmartBlockModel . PerspectiveWrapper ( new IPerspectiveAwareModel . MapWrapper ( builder . makeBakedModel ( ) , perState ) ) <nl> - { <nl> - public IBakedModel handleBlockState ( IBlockState state ) <nl> - { <nl> - return VanillaModelWrapper . this . handleBlockState ( parent , bakedTextureGetter , modelState , state ) ; <nl> - } <nl> - } ; <nl> - } <nl> - <nl> - private IBakedModel handleBlockState ( IBakedModel model , Function < ResourceLocation , TextureAtlasSprite > bakedTextureGetter , TRSRTransformation modelState , IBlockState state ) <nl> - { <nl> - if ( state instanceof IExtendedBlockState ) <nl> + return new IPerspectiveAwareModel . MapWrapper ( builder . makeBakedModel ( ) , perState ) <nl> { <nl> - IExtendedBlockState exState = ( IExtendedBlockState ) state ; <nl> - if ( exState . getUnlistedNames ( ) . contains ( Properties . AnimationProperty ) ) <nl> + @ Override <nl> + public List < BakedQuad > func _ 188616 _ a ( IBlockState state , EnumFacing side , long rand ) <nl> { <nl> - IModelState newState = exState . getValue ( Properties . AnimationProperty ) ; <nl> - if ( newState ! = null ) <nl> + if ( state instanceof IExtendedBlockState ) <nl> { <nl> - return VanillaModelWrapper . this . bake ( new ModelStateComposition ( modelState , newState ) , model . getFormat ( ) , bakedTextureGetter ) ; <nl> + IExtendedBlockState exState = ( IExtendedBlockState ) state ; <nl> + if ( exState . getUnlistedNames ( ) . contains ( Properties . AnimationProperty ) ) <nl> + { <nl> + IModelState newState = exState . getValue ( Properties . AnimationProperty ) ; <nl> + IExtendedBlockState newExState = exState . withProperty ( Properties . AnimationProperty , null ) ; <nl> + if ( newState ! = null ) <nl> + { <nl> + return VanillaModelWrapper . this . bake ( new ModelStateComposition ( modelState , newState ) , format , bakedTextureGetter ) . func _ 188616 _ a ( newExState , side , rand ) ; <nl> + } <nl> + } <nl> } <nl> - } <nl> - } <nl> - return model ; <nl> + return super . func _ 188616 _ a ( state , side , rand ) ; <nl> + } ; <nl> + } ; <nl> } <nl> <nl> @ Override <nl> @ @ - 607 , 7 + 627 , 7 @ @ public class ModelLoader extends ModelBakery <nl> <nl> ModelBlock newModel = new ModelBlock ( this . model . getParentLocation ( ) , elements , <nl> Maps . newHashMap ( this . model . textures ) , this . model . isAmbientOcclusion ( ) , this . model . isGui3d ( ) , / / New Textures man VERY IMPORTANT <nl> - model . func _ 181682 _ g ( ) ) ; <nl> + model . func _ 181682 _ g ( ) , Lists . newArrayList ( model . func _ 187966 _ f ( ) ) ) ; <nl> newModel . name = this . model . name ; <nl> newModel . parent = this . model . parent ; <nl> <nl> @ @ - 651 , 7 + 671 , 7 @ @ public class ModelLoader extends ModelBakery <nl> } <nl> } <nl> <nl> - return new VanillaModelWrapper ( location , newModel , animation ) ; <nl> + return new VanillaModelWrapper ( location , newModel , uvlock , animation ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 676 , 10 + 696 , 10 @ @ public class ModelLoader extends ModelBakery <nl> { <nl> return this ; <nl> } <nl> - ModelBlock newModel = new ModelBlock ( model . getParentLocation ( ) , model . getElements ( ) , model . textures , value , model . isGui3d ( ) , model . func _ 181682 _ g ( ) ) ; <nl> + ModelBlock newModel = new ModelBlock ( model . getParentLocation ( ) , model . getElements ( ) , model . textures , value , model . isGui3d ( ) , model . func _ 181682 _ g ( ) , Lists . newArrayList ( model . func _ 187966 _ f ( ) ) ) ; <nl> newModel . parent = model . parent ; <nl> newModel . name = model . name ; <nl> - return new VanillaModelWrapper ( location , newModel , animation ) ; <nl> + return new VanillaModelWrapper ( location , newModel , uvlock , animation ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 689 , 31 + 709 , 20 @ @ public class ModelLoader extends ModelBakery <nl> { <nl> return this ; <nl> } <nl> - ModelBlock newModel = new ModelBlock ( model . getParentLocation ( ) , model . getElements ( ) , model . textures , model . ambientOcclusion , value , model . func _ 181682 _ g ( ) ) ; <nl> + ModelBlock newModel = new ModelBlock ( model . getParentLocation ( ) , model . getElements ( ) , model . textures , model . ambientOcclusion , value , model . func _ 181682 _ g ( ) , Lists . newArrayList ( model . func _ 187966 _ f ( ) ) ) ; <nl> newModel . parent = model . parent ; <nl> newModel . name = model . name ; <nl> - return new VanillaModelWrapper ( location , newModel , animation ) ; <nl> - } <nl> - } <nl> - <nl> - @ Deprecated / / rework in 1 . 9 <nl> - public static class UVLock implements IModelState <nl> - { <nl> - private final IModelState parent ; <nl> - <nl> - public UVLock ( IModelState parent ) <nl> - { <nl> - this . parent = parent ; <nl> - } <nl> - <nl> - public IModelState getParent ( ) <nl> - { <nl> - return parent ; <nl> + return new VanillaModelWrapper ( location , newModel , uvlock , animation ) ; <nl> } <nl> <nl> - public Optional < TRSRTransformation > apply ( Optional < ? extends IModelPart > part ) <nl> + @ Override <nl> + public IModel uvlock ( boolean value ) <nl> { <nl> - return parent . apply ( part ) ; <nl> + if ( uvlock = = value ) <nl> + { <nl> + return this ; <nl> + } <nl> + return new VanillaModelWrapper ( location , model , value , animation ) ; <nl> } <nl> } <nl> <nl> @ @ - 730 , 7 + 739 , 7 @ @ public class ModelLoader extends ModelBakery <nl> ImmutableList . Builder < Pair < IModel , IModelState > > builder = ImmutableList . builder ( ) ; <nl> for ( Variant v : this . variants ) <nl> { <nl> - ResourceLocation loc = v . getModelLocation ( ) ; <nl> + ResourceLocation loc = v . func _ 188046 _ a ( ) ; <nl> locations . add ( loc ) ; <nl> <nl> IModel model = null ; <nl> @ @ - 787 , 12 + 796 , 6 @ @ public class ModelLoader extends ModelBakery <nl> return Collections . emptyList ( ) ; <nl> } <nl> <nl> - private IModelState addUV ( boolean uv , IModelState state ) <nl> - { <nl> - if ( uv ) return new UVLock ( state ) ; <nl> - return state ; <nl> - } <nl> - <nl> public IBakedModel bake ( IModelState state , VertexFormat format , Function < ResourceLocation , TextureAtlasSprite > bakedTextureGetter ) <nl> { <nl> if ( ! Attributes . moreSpecific ( format , Attributes . DEFAULT _ BAKED _ FORMAT ) ) <nl> @ @ - 803 , 14 + 806 , 14 @ @ public class ModelLoader extends ModelBakery <nl> { <nl> Variant v = variants . get ( 0 ) ; <nl> IModel model = models . get ( 0 ) ; <nl> - return model . bake ( addUV ( v . isUvLocked ( ) , MultiModelState . getPartState ( state , model , 0 ) ) , format , bakedTextureGetter ) ; <nl> + return model . bake ( MultiModelState . getPartState ( state , model , 0 ) , format , bakedTextureGetter ) ; <nl> } <nl> WeightedBakedModel . Builder builder = new WeightedBakedModel . Builder ( ) ; <nl> for ( int i = 0 ; i < variants . size ( ) ; i + + ) <nl> { <nl> IModel model = models . get ( i ) ; <nl> Variant v = variants . get ( i ) ; <nl> - builder . add ( model . bake ( addUV ( v . isUvLocked ( ) , MultiModelState . getPartState ( state , model , i ) ) , format , bakedTextureGetter ) , variants . get ( i ) . getWeight ( ) ) ; <nl> + builder . add ( model . bake ( MultiModelState . getPartState ( state , model , i ) , format , bakedTextureGetter ) , variants . get ( i ) . func _ 188047 _ d ( ) ) ; <nl> } <nl> return builder . build ( ) ; <nl> } <nl> @ @ - 878 , 7 + 881 , 7 @ @ public class ModelLoader extends ModelBakery <nl> } <nl> ResourceLocation armatureLocation = new ResourceLocation ( modelLocation . getResourceDomain ( ) , " armatures / " + modelPath + " . json " ) ; <nl> ModelBlockAnimation animation = Animation . INSTANCE . loadVanillaAnimation ( armatureLocation ) ; <nl> - return loader . new VanillaModelWrapper ( modelLocation , loader . loadModel ( modelLocation ) , animation ) ; <nl> + return loader . new VanillaModelWrapper ( modelLocation , loader . loadModel ( modelLocation ) , false , animation ) ; <nl> } <nl> } <nl> <nl> @ @ - 898 , 6 + 901 , 7 @ @ public class ModelLoader extends ModelBakery <nl> return true ; <nl> } <nl> <nl> + / / TODO : check if this code is correct <nl> @ Override <nl> public boolean load ( IResourceManager manager , ResourceLocation location ) <nl> { <nl> @ @ - 905 , 16 + 909 , 10 @ @ public class ModelLoader extends ModelBakery <nl> Graphics2D graphics = image . createGraphics ( ) ; <nl> graphics . setBackground ( Color . WHITE ) ; <nl> graphics . clearRect ( 0 , 0 , 16 , 16 ) ; <nl> - BufferedImage [ ] images = new BufferedImage [ Minecraft . getMinecraft ( ) . gameSettings . mipmapLevels + 1 ] ; <nl> - images [ 0 ] = image ; <nl> - try <nl> - { <nl> - loadSprite ( images , null ) ; <nl> - } <nl> - catch ( IOException e ) <nl> - { <nl> - throw new RuntimeException ( e ) ; <nl> - } <nl> + int [ ] [ ] pixels = new int [ Minecraft . getMinecraft ( ) . gameSettings . mipmapLevels + 1 ] [ ] ; <nl> + pixels [ 0 ] = new int [ image . getWidth ( ) * image . getHeight ( ) ] ; <nl> + image . getRGB ( 0 , 0 , image . getWidth ( ) , image . getHeight ( ) , pixels [ 0 ] , 0 , image . getWidth ( ) ) ; <nl> + this . framesTextureData . add ( pixels ) ; <nl> return false ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / ModelProcessingHelper . java b / src / main / java / net / minecraftforge / client / model / ModelProcessingHelper . java <nl> index a9b9e26 . . c4d5d82 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ModelProcessingHelper . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ModelProcessingHelper . java <nl> @ @ - 39 , 4 + 39 , 13 @ @ public class ModelProcessingHelper <nl> } <nl> return model ; <nl> } <nl> + <nl> + public static IModel uvlock ( IModel model , boolean uvlock ) <nl> + { <nl> + if ( model instanceof IModelUVLock ) <nl> + { <nl> + model = ( ( IModelUVLock ) model ) . uvlock ( uvlock ) ; <nl> + } <nl> + return model ; <nl> + } <nl> } <nl> diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg <nl> index 4f78e56 . . 3eaa618 100644 <nl> - - - a / src / main / resources / forge _ at . cfg <nl> + + + b / src / main / resources / forge _ at . cfg <nl> @ @ - 115 , 6 + 115 , 7 @ @ protected net . minecraft . block . state . BlockStateContainer $ StateImplementation fiel <nl> public net . minecraft . client . renderer . block . model . ModelBlock field _ 178318 _ c # textures <nl> public net . minecraft . client . renderer . block . model . ModelBlock field _ 178315 _ d # parent <nl> public net . minecraft . client . renderer . block . model . ModelBlock field _ 178322 _ i # ambientOcclusion <nl> + public net . minecraft . client . renderer . block . model . ModelBlock func _ 187966 _ f ( ) Ljava / util / List ; # getOverrides <nl> protected net . minecraft . client . renderer . block . model . ModelBakery field _ 177602 _ b # LOCATIONS _ BUILTIN _ TEXTURES <nl> protected net . minecraft . client . renderer . block . model . ModelBakery field _ 177598 _ f # resourceManager <nl> protected net . minecraft . client . renderer . block . model . ModelBakery field _ 177599 _ g # sprites <nl> @ @ - 141 , 8 + 142 , 8 @ @ protected net . minecraft . client . renderer . block . model . ModelBakery func _ 177580 _ d ( Ln <nl> # EnumFacing <nl> public net . minecraft . util . EnumFacing field _ 82609 _ l # VALUES <nl> public net . minecraft . util . EnumFacing field _ 176754 _ o # HORIZONTALS <nl> - # public net . minecraft . client . renderer . VertexBuffer func _ 78909 _ a ( I ) I # getColorIndex <nl> - # public net . minecraft . client . renderer . VertexBuffer func _ 178972 _ a ( IIIII ) V # putColorRGBA <nl> + public net . minecraft . client . renderer . VertexBuffer func _ 78909 _ a ( I ) I # getColorIndex <nl> + public net . minecraft . client . renderer . VertexBuffer func _ 178972 _ a ( IIIII ) V # putColorRGBA <nl> # ModelBlock Constructor <nl> # public net . minecraft . client . renderer . block . model . ModelBlock < init > ( Lnet / minecraft / util / ResourceLocation ; Ljava / util / List ; Ljava / util / Map ; ZZLnet / minecraft / client / renderer / block / model / ItemCameraTransforms ; ) V <nl> # RenderLivingEntity <nl> @ @ - 263 , 4 + 264 , 4 @ @ private - f net / minecraft / world / gen / ChunkProviderHell / field _ 73174 _ n # perlin3 <nl> public - f net / minecraft / world / gen / ChunkProviderHell / field _ 185946 _ g # scale <nl> public - f net / minecraft / world / gen / ChunkProviderHell / field _ 185947 _ h # depth <nl> private - f net / minecraft / world / gen / ChunkProviderHell / field _ 185939 _ I # netherCaveGenerator <nl> - private - f net / minecraft / world / gen / ChunkProviderHell / field _ 73172 _ c # netherBridgeGenerator <nl> \ No newline at end of file <nl> + private - f net / minecraft / world / gen / ChunkProviderHell / field _ 73172 _ c # netherBridgeGenerator <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ItemTileDebug . java b / src / test / java / net / minecraftforge / debug / ItemTileDebug . java <nl> index 0539661 . . 6441558 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ItemTileDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ItemTileDebug . java <nl> @ @ - 83 , 7 + 83 , 7 @ @ public class ItemTileDebug <nl> @ SubscribeEvent <nl> public void onModelBakeEvent ( ModelBakeEvent event ) <nl> { <nl> - event . modelManager . getBlockModelShapes ( ) . registerBuiltInBlocks ( TestBlock . instance ) ; <nl> + event . getModelManager ( ) . getBlockModelShapes ( ) . registerBuiltInBlocks ( TestBlock . instance ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java b / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java <nl> index 7f3dfcc . . 654f773 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java <nl> @ @ - 117 , 8 + 117 , 8 @ @ public class ModelBakeEventDebug <nl> TextureAtlasSprite base = Minecraft . getMinecraft ( ) . getTextureMapBlocks ( ) . getAtlasSprite ( " minecraft : blocks / slime " ) ; <nl> TextureAtlasSprite overlay = Minecraft . getMinecraft ( ) . getTextureMapBlocks ( ) . getAtlasSprite ( " minecraft : blocks / redstone _ block " ) ; <nl> IBakedModel customModel = new CustomModel ( base , overlay ) ; <nl> - event . modelRegistry . putObject ( ClientProxy . blockLocation , customModel ) ; <nl> - event . modelRegistry . putObject ( ClientProxy . itemLocation , customModel ) ; <nl> + event . getModelRegistry ( ) . putObject ( ClientProxy . blockLocation , customModel ) ; <nl> + event . getModelRegistry ( ) . putObject ( ClientProxy . itemLocation , customModel ) ; <nl> } <nl> } <nl>

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / block / model / ModelBakery . java . patch b / patches / minecraft / net / minecraft / client / renderer / block / model / ModelBakery . java . patch 
 index 4f6cd2e . . 78f75f8 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / block / model / ModelBakery . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / block / model / ModelBakery . java . patch 
 @ @ - 132 , 7 + 132 , 7 @ @ 
 
 + protected BakedQuad makeBakedQuad ( BlockPart p _ 177589 _ 1 _ , BlockPartFace p _ 177589 _ 2 _ , TextureAtlasSprite p _ 177589 _ 3 _ , EnumFacing p _ 177589 _ 4 _ , net . minecraftforge . client . model . ITransformation p _ 177589 _ 5 _ , boolean p _ 177589 _ 6 _ ) 
 + { 
 - + return this . field _ 177607 _ l . makeBakedQuad ( p _ 177589 _ 1 _ . field _ 178241 _ a , p _ 177589 _ 1 _ . field _ 178239 _ b , p _ 177589 _ 2 _ , p _ 177589 _ 3 _ , p _ 177589 _ 4 _ , p _ 177589 _ 5 _ , p _ 177589 _ 1 _ . field _ 178237 _ d , p _ 177589 _ 6 _ , p _ 177589 _ 1 _ . field _ 178238 _ e ) ; 
 + + return this . field _ 177607 _ l . makeBakedQuad ( p _ 177589 _ 1 _ . field _ 178241 _ a , p _ 177589 _ 1 _ . field _ 178239 _ b , p _ 177589 _ 2 _ , p _ 177589 _ 3 _ , p _ 177589 _ 4 _ , p _ 177589 _ 5 _ , p _ 177589 _ 1 _ . field _ 178237 _ d , p _ 177589 _ 6 _ , false ) ; 
 + } 
 + 
 private void func _ 177597 _ h ( ) 
 diff - - git a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch 
 index e256ce3 . . 00f4a4f 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch 
 @ @ - 31 , 15 + 31 , 16 @ @ 
 int j = blockrenderlayer1 . ordinal ( ) ; 
 
 if ( block . func _ 176223 _ P ( ) . func _ 185901 _ i ( ) ! = EnumBlockRenderType . INVISIBLE ) 
 - @ @ - 191 , 6 + 195 , 7 @ @ 
 + @ @ - 191 , 6 + 195 , 8 @ @ 
 
 aboolean [ j ] | = blockrendererdispatcher . func _ 175018 _ a ( iblockstate , blockpos $ mutableblockpos , iblockaccess , vertexbuffer ) ; 
 } 
 + } 
 + + net . minecraftforge . client . ForgeHooksClient . setRenderLayer ( null ) ; 
 } 
 
 for ( BlockRenderLayer blockrenderlayer : BlockRenderLayer . values ( ) ) 
 - @ @ - 413 , 6 + 418 , 26 @ @ 
 + @ @ - 413 , 6 + 419 , 26 @ @ 
 return this . field _ 178593 _ n & & this . field _ 188284 _ q ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index 541683a . . 111dad6 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 149 , 13 + 149 , 7 @ @ public class ForgeHooksClient 
 renderPass = pass ; 
 } 
 
 - static final ThreadLocal < BlockRenderLayer > renderLayer = new ThreadLocal < BlockRenderLayer > ( ) 
 - { 
 - protected BlockRenderLayer initialValue ( ) 
 - { 
 - return BlockRenderLayer . SOLID ; 
 - } 
 - } ; 
 + static final ThreadLocal < BlockRenderLayer > renderLayer = new ThreadLocal < BlockRenderLayer > ( ) ; 
 
 public static void setRenderLayer ( BlockRenderLayer layer ) 
 { 
 @ @ - 525 , 13 + 519 , 16 @ @ public class ForgeHooksClient 
 
 public static void putQuadColor ( VertexBuffer renderer , BakedQuad quad , int color ) 
 { 
 - float cr = color & 0xFF ; 
 + float cb = color & 0xFF ; 
 float cg = ( color > > > 8 ) & 0xFF ; 
 - float cb = ( color > > > 16 ) & 0xFF ; 
 + float cr = ( color > > > 16 ) & 0xFF ; 
 float ca = ( color > > > 24 ) & 0xFF ; 
 + VertexFormat format = quad . getFormat ( ) ; 
 + int size = format . getIntegerSize ( ) ; 
 + int offset = format . getColorOffset ( ) / 4 ; / / assumes that color is aligned 
 for ( int i = 0 ; i < 4 ; i + + ) 
 { 
 - int vc = quad . getVertexData ( ) [ 3 + 7 * i ] ; 
 + int vc = quad . getVertexData ( ) [ offset + size * i ] ; 
 float vcr = vc & 0xFF ; 
 float vcg = ( vc > > > 8 ) & 0xFF ; 
 float vcb = ( vc > > > 16 ) & 0xFF ; 
 diff - - git a / src / main / java / net / minecraftforge / client / model / IColoredBakedQuad . java b / src / main / java / net / minecraftforge / client / model / IColoredBakedQuad . java 
 deleted file mode 100644 
 index e8acab1 . . 0000000 
 - - - a / src / main / java / net / minecraftforge / client / model / IColoredBakedQuad . java 
 + + + / dev / null 
 @ @ - 1 , 16 + 0 , 0 @ @ 
 - package net . minecraftforge . client . model ; 
 - 
 - import net . minecraft . client . renderer . block . model . BakedQuad ; 
 - import net . minecraft . client . renderer . texture . TextureAtlasSprite ; 
 - import net . minecraft . client . renderer . vertex . VertexFormat ; 
 - import net . minecraft . util . EnumFacing ; 
 - 
 - public interface IColoredBakedQuad { 
 - public static class ColoredBakedQuad extends BakedQuad implements IColoredBakedQuad 
 - { 
 - public ColoredBakedQuad ( int [ ] data , int tintIndex , EnumFacing side , TextureAtlasSprite sprite , VertexFormat format ) 
 - { 
 - super ( data , tintIndex , side , sprite , format ) ; 
 - } 
 - } 
 - } 
 \ No newline at end of file 
 diff - - git a / src / main / java / net / minecraftforge / client / model / ItemTextureQuadConverter . java b / src / main / java / net / minecraftforge / client / model / ItemTextureQuadConverter . java 
 index 074e687 . . c946739 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ItemTextureQuadConverter . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ItemTextureQuadConverter . java 
 @ @ - 206 , 7 + 206 , 6 @ @ public final class ItemTextureQuadConverter 
 UnpackedBakedQuad . Builder builder = new UnpackedBakedQuad . Builder ( format ) ; 
 builder . setQuadTint ( - 1 ) ; 
 builder . setQuadOrientation ( side ) ; 
 - builder . setQuadColored ( ) ; 
 
 if ( side = = EnumFacing . NORTH ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / client / model / ModelFluid . java b / src / main / java / net / minecraftforge / client / model / ModelFluid . java 
 index a876fc4 . . be1134a 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ModelFluid . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ModelFluid . java 
 @ @ - 209 , 7 + 209 , 6 @ @ public final class ModelFluid implements IModelCustomData 
 EnumFacing side = gas ? EnumFacing . DOWN : EnumFacing . UP ; 
 UnpackedBakedQuad . Builder builder = new UnpackedBakedQuad . Builder ( format ) ; 
 builder . setQuadOrientation ( side ) ; 
 - builder . setQuadColored ( ) ; 
 for ( int i = gas ? 3 : 0 ; i ! = ( gas ? - 1 : 4 ) ; i + = ( gas ? - 1 : 1 ) ) 
 { 
 putVertex ( 
 @ @ - 225 , 7 + 224 , 6 @ @ public final class ModelFluid implements IModelCustomData 
 side = side . getOpposite ( ) ; 
 builder = new UnpackedBakedQuad . Builder ( format ) ; 
 builder . setQuadOrientation ( side ) ; 
 - builder . setQuadColored ( ) ; 
 for ( int i = gas ? 3 : 0 ; i ! = ( gas ? - 1 : 4 ) ; i + = ( gas ? - 1 : 1 ) ) 
 { 
 putVertex ( 
 @ @ - 247 , 7 + 245 , 6 @ @ public final class ModelFluid implements IModelCustomData 
 { 
 builder = new UnpackedBakedQuad . Builder ( format ) ; 
 builder . setQuadOrientation ( side ) ; 
 - builder . setQuadColored ( ) ; 
 for ( int j = 0 ; j < 4 ; j + + ) 
 { 
 int l = ( k * 3 ) + ( 1 - 2 * k ) * j ; 
 @ @ - 269 , 7 + 266 , 6 @ @ public final class ModelFluid implements IModelCustomData 
 / / 1 quad for inventory 
 UnpackedBakedQuad . Builder builder = new UnpackedBakedQuad . Builder ( format ) ; 
 builder . setQuadOrientation ( EnumFacing . UP ) ; 
 - builder . setQuadColored ( ) ; 
 for ( int i = 0 ; i < 4 ; i + + ) 
 { 
 putVertex ( 
 @ @ - 299 , 11 + 295 , 10 @ @ public final class ModelFluid implements IModelCustomData 
 builder . put ( e , data ) ; 
 break ; 
 case COLOR : 
 - float d = LightUtil . diffuseLight ( side ) ; 
 builder . put ( e , 
 - d * ( ( color > > 16 ) & 0xFF ) / 255f , 
 - d * ( ( color > > 8 ) & 0xFF ) / 255f , 
 - d * ( color & 0xFF ) / 255f , 
 + ( ( color > > 16 ) & 0xFF ) / 255f , 
 + ( ( color > > 8 ) & 0xFF ) / 255f , 
 + ( color & 0xFF ) / 255f , 
 ( ( color > > 24 ) & 0xFF ) / 255f ) ; 
 break ; 
 case UV : if ( format . getElement ( e ) . getIndex ( ) = = 0 ) 
 diff - - git a / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java b / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java 
 index b110763 . . 3478841 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java 
 + + + b / src / main / java / net / minecraftforge / client / model / MultiLayerModel . java 
 @ @ - 164 , 7 + 164 , 7 @ @ public final class MultiLayerModel implements IModelCustomData 
 { 
 return quads . get ( Optional . fromNullable ( side ) ) ; 
 } 
 - else if ( ! models . containsKey ( layer ) ) 
 + else if ( ! models . containsKey ( Optional . of ( layer ) ) ) 
 { 
 model = missing ; 
 } 
 @ @ - 172 , 6 + 172 , 7 @ @ public final class MultiLayerModel implements IModelCustomData 
 { 
 model = models . get ( Optional . of ( layer ) ) ; 
 } 
 + / / assumes that child model will handle this state properly . FIXME ? 
 return model . getQuads ( state , side , rand ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 index 7196cda . . 34371c5 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 + + + b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 @ @ - 717 , 7 + 717 , 6 @ @ public final class B3DLoader implements ICustomModelLoader 
 { 
 UnpackedBakedQuad . Builder quadBuilder = new UnpackedBakedQuad . Builder ( format ) ; 
 quadBuilder . setQuadOrientation ( EnumFacing . getFacingFromVector ( f . getNormal ( ) . x , f . getNormal ( ) . y , f . getNormal ( ) . z ) ) ; 
 - quadBuilder . setQuadColored ( ) ; 
 List < Texture > textures = null ; 
 if ( f . getBrush ( ) ! = null ) textures = f . getBrush ( ) . getTextures ( ) ; 
 TextureAtlasSprite sprite ; 
 @ @ - 744 , 14 + 743 , 13 @ @ public final class B3DLoader implements ICustomModelLoader 
 builder . put ( e , v . getPos ( ) . x , v . getPos ( ) . y , v . getPos ( ) . z , 1 ) ; 
 break ; 
 case COLOR : 
 - float d = LightUtil . diffuseLight ( faceNormal . x , faceNormal . y , faceNormal . z ) ; 
 if ( v . getColor ( ) ! = null ) 
 { 
 - builder . put ( e , d * v . getColor ( ) . x , d * v . getColor ( ) . y , d * v . getColor ( ) . z , v . getColor ( ) . w ) ; 
 + builder . put ( e , v . getColor ( ) . x , v . getColor ( ) . y , v . getColor ( ) . z , v . getColor ( ) . w ) ; 
 } 
 else 
 { 
 - builder . put ( e , d , d , d , 1 ) ; 
 + builder . put ( e , 1 , 1 , 1 , 1 ) ; 
 } 
 break ; 
 case UV : 
 diff - - git a / src / main / java / net / minecraftforge / client / model / obj / OBJModel . java b / src / main / java / net / minecraftforge / client / model / obj / OBJModel . java 
 index 5c9df53 . . fc53067 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / obj / OBJModel . java 
 + + + b / src / main / java / net / minecraftforge / client / model / obj / OBJModel . java 
 @ @ - 1400 , 7 + 1400 , 6 @ @ public class OBJModel implements IRetexturableModel , IModelCustomData 
 } else sprite = this . textures . get ( f . getMaterialName ( ) ) ; 
 UnpackedBakedQuad . Builder builder = new UnpackedBakedQuad . Builder ( format ) ; 
 builder . setQuadOrientation ( EnumFacing . getFacingFromVector ( f . getNormal ( ) . x , f . getNormal ( ) . y , f . getNormal ( ) . z ) ) ; 
 - builder . setQuadColored ( ) ; 
 Normal faceNormal = f . getNormal ( ) ; 
 putVertexData ( builder , f . verts [ 0 ] , faceNormal , TextureCoordinate . getDefaultUVs ( ) [ 0 ] , sprite ) ; 
 putVertexData ( builder , f . verts [ 1 ] , faceNormal , TextureCoordinate . getDefaultUVs ( ) [ 1 ] , sprite ) ; 
 @ @ - 1423 , 20 + 1422 , 14 @ @ public class OBJModel implements IRetexturableModel , IModelCustomData 
 builder . put ( e , v . getPos ( ) . x , v . getPos ( ) . y , v . getPos ( ) . z , v . getPos ( ) . w ) ; 
 break ; 
 case COLOR : 
 - float d ; 
 - if ( v . hasNormal ( ) ) 
 - d = LightUtil . diffuseLight ( v . getNormal ( ) . x , v . getNormal ( ) . y , v . getNormal ( ) . z ) ; 
 - else 
 - d = LightUtil . diffuseLight ( faceNormal . x , faceNormal . y , faceNormal . z ) ; 
 - 
 if ( v . getMaterial ( ) ! = null ) 
 builder . put ( e , 
 - d * v . getMaterial ( ) . getColor ( ) . x , 
 - d * v . getMaterial ( ) . getColor ( ) . y , 
 - d * v . getMaterial ( ) . getColor ( ) . z , 
 + v . getMaterial ( ) . getColor ( ) . x , 
 + v . getMaterial ( ) . getColor ( ) . y , 
 + v . getMaterial ( ) . getColor ( ) . z , 
 v . getMaterial ( ) . getColor ( ) . w ) ; 
 else 
 - builder . put ( e , d , d , d , 1 ) ; 
 + builder . put ( e , 1 , 1 , 1 , 1 ) ; 
 break ; 
 case UV : 
 if ( ! v . hasTextureCoordinate ( ) ) 
 diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / IVertexConsumer . java b / src / main / java / net / minecraftforge / client / model / pipeline / IVertexConsumer . java 
 index 92cf355 . . f079cb1 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / pipeline / IVertexConsumer . java 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / IVertexConsumer . java 
 @ @ - 17 , 7 + 17 , 6 @ @ public interface IVertexConsumer 
 
 void setQuadTint ( int tint ) ; 
 void setQuadOrientation ( EnumFacing orientation ) ; 
 - void setQuadColored ( ) ; 
 
 void put ( int element , float . . . data ) ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java b / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java 
 index de273c2 . . c6e7bdb 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / LightUtil . java 
 @ @ - 8 , 7 + 8 , 6 @ @ import net . minecraft . client . renderer . vertex . VertexFormatElement ; 
 import net . minecraft . client . renderer . vertex . VertexFormatElement . EnumUsage ; 
 import net . minecraft . util . EnumFacing ; 
 import net . minecraftforge . client . ForgeHooksClient ; 
 - import net . minecraftforge . client . model . IColoredBakedQuad ; 
 
 import org . apache . commons . lang3 . tuple . Pair ; 
 
 @ @ - 89 , 10 + 88 , 6 @ @ public class LightUtil 
 { 
 consumer . setQuadTint ( quad . getTintIndex ( ) ) ; 
 } 
 - if ( quad instanceof IColoredBakedQuad ) 
 - { 
 - consumer . setQuadColored ( ) ; 
 - } 
 / / int [ ] eMap = mapFormats ( consumer . getVertexFormat ( ) , DefaultVertexFormats . ITEM ) ; 
 float [ ] data = new float [ 4 ] ; 
 VertexFormat formatFrom = consumer . getVertexFormat ( ) ; 
 @ @ - 281 , 19 + 276 , 11 @ @ public class LightUtil 
 public static void renderQuadColor ( VertexBuffer wr , BakedQuad quad , int auxColor ) 
 { 
 wr . addVertexData ( quad . getVertexData ( ) ) ; 
 - if ( quad instanceof IColoredBakedQuad ) 
 - { 
 - ForgeHooksClient . putQuadColor ( wr , quad , auxColor ) ; 
 - } 
 - else 
 - { 
 - wr . putColor4 ( auxColor ) ; 
 - } 
 + ForgeHooksClient . putQuadColor ( wr , quad , auxColor ) ; 
 } 
 
 public static class ItemConsumer extends VertexTransformer 
 { 
 - private boolean colored = false ; 
 private int vertices = 0 ; 
 
 private float [ ] auxColor = new float [ ] { 1 , 1 , 1 , 1 } ; 
 @ @ - 309 , 23 + 296 , 14 @ @ public class LightUtil 
 System . arraycopy ( auxColor , 0 , this . auxColor , 0 , this . auxColor . length ) ; 
 } 
 
 - @ Override 
 - public void setQuadColored ( ) 
 - { 
 - colored = true ; 
 - } 
 - 
 public void put ( int element , float . . . data ) 
 { 
 if ( getVertexFormat ( ) . getElement ( element ) . getUsage ( ) = = EnumUsage . COLOR ) 
 { 
 System . arraycopy ( auxColor , 0 , buf , 0 , buf . length ) ; 
 - if ( colored ) 
 + for ( int i = 0 ; i < 4 ; i + + ) 
 { 
 - for ( int i = 0 ; i < 4 ; i + + ) 
 - { 
 - buf [ i ] * = data [ i ] ; 
 - } 
 + buf [ i ] * = data [ i ] ; 
 } 
 super . put ( element , buf ) ; 
 } 
 @ @ - 339 , 7 + 317 , 6 @ @ public class LightUtil 
 if ( vertices = = 4 ) 
 { 
 vertices = 0 ; 
 - colored = false ; 
 } 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / UnpackedBakedQuad . java b / src / main / java / net / minecraftforge / client / model / pipeline / UnpackedBakedQuad . java 
 index 8e04342 . . 1dc298b 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / pipeline / UnpackedBakedQuad . java 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / UnpackedBakedQuad . java 
 @ @ - 4 , 7 + 4 , 6 @ @ import net . minecraft . client . renderer . block . model . BakedQuad ; 
 import net . minecraft . client . renderer . texture . TextureAtlasSprite ; 
 import net . minecraft . client . renderer . vertex . VertexFormat ; 
 import net . minecraft . util . EnumFacing ; 
 - import net . minecraftforge . client . model . IColoredBakedQuad ; 
 
 / / advantages : non - fixed - length vertex format , no overhead of packing and unpacking attributes to transform the model 
 / / disadvantages : ( possibly ) larger memory footprint , overhead on packing the attributes at the final rendering stage 
 @ @ - 48 , 10 + 47 , 6 @ @ public class UnpackedBakedQuad extends BakedQuad 
 consumer . setQuadTint ( getTintIndex ( ) ) ; 
 } 
 consumer . setQuadOrientation ( getFace ( ) ) ; 
 - if ( this instanceof IColoredBakedQuad ) 
 - { 
 - consumer . setQuadColored ( ) ; 
 - } 
 for ( int v = 0 ; v < 4 ; v + + ) 
 { 
 for ( int e = 0 ; e < consumer . getVertexFormat ( ) . getElementCount ( ) ; e + + ) 
 @ @ - 68 , 14 + 63 , 6 @ @ public class UnpackedBakedQuad extends BakedQuad 
 } 
 } 
 
 - public static class Colored extends UnpackedBakedQuad implements IColoredBakedQuad 
 - { 
 - public Colored ( float [ ] [ ] [ ] unpackedData , int tint , EnumFacing orientation , TextureAtlasSprite texture , VertexFormat format ) 
 - { 
 - super ( unpackedData , tint , orientation , texture , format ) ; 
 - } 
 - } 
 - 
 public static class Builder implements IVertexConsumer 
 { 
 private final VertexFormat format ; 
 @ @ - 83 , 7 + 70 , 6 @ @ public class UnpackedBakedQuad extends BakedQuad 
 private int tint = - 1 ; 
 private EnumFacing orientation ; 
 private TextureAtlasSprite texture ; 
 - private boolean isColored = false ; 
 
 private int vertices = 0 ; 
 private int elements = 0 ; 
 @ @ - 115 , 11 + 101 , 6 @ @ public class UnpackedBakedQuad extends BakedQuad 
 this . texture = texture ; 
 } 
 
 - public void setQuadColored ( ) 
 - { 
 - this . isColored = true ; 
 - } 
 - 
 public void put ( int element , float . . . data ) 
 { 
 for ( int i = 0 ; i < 4 ; i + + ) 
 @ @ - 151 , 10 + 132 , 6 @ @ public class UnpackedBakedQuad extends BakedQuad 
 { 
 throw new IllegalStateException ( " not enough data " ) ; 
 } 
 - if ( isColored ) 
 - { 
 - return new Colored ( unpackedData , tint , orientation , texture , format ) ; 
 - } 
 return new UnpackedBakedQuad ( unpackedData , tint , orientation , texture , format ) ; 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / VertexBufferConsumer . java b / src / main / java / net / minecraftforge / client / model / pipeline / VertexBufferConsumer . java 
 index 7a783b4 . . f07e149 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / pipeline / VertexBufferConsumer . java 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / VertexBufferConsumer . java 
 @ @ - 57 , 5 + 57 , 4 @ @ public class VertexBufferConsumer implements IVertexConsumer 
 
 public void setQuadTint ( int tint ) { } 
 public void setQuadOrientation ( EnumFacing orientation ) { } 
 - public void setQuadColored ( ) { } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java 
 index 5ffd67f . . 3f5d913 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java 
 @ @ - 148 , 6 + 148 , 11 @ @ public class VertexLighterFlat extends QuadGatheringTransformer 
 if ( skyLight > lightmap [ v ] [ 1 ] ) lightmap [ v ] [ 1 ] = skyLight ; 
 } 
 updateColor ( normal [ v ] , color [ v ] , x , y , z , tint , multiplier ) ; 
 + float diffuse = LightUtil . diffuseLight ( normal [ v ] [ 0 ] , normal [ v ] [ 1 ] , normal [ v ] [ 2 ] ) ; 
 + for ( int i = 0 ; i < 3 ; i + + ) 
 + { 
 + color [ v ] [ i ] * = diffuse ; 
 + } 
 if ( EntityRenderer . anaglyphEnable ) 
 { 
 applyAnaglyph ( color [ v ] ) ; 
 @ @ - 234 , 7 + 239 , 6 @ @ public class VertexLighterFlat extends QuadGatheringTransformer 
 } 
 public void setQuadOrientation ( EnumFacing orientation ) { } 
 public void setQuadCulled ( ) { } 
 - public void setQuadColored ( ) { } 
 
 public void setWorld ( IBlockAccess world ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / VertexTransformer . java b / src / main / java / net / minecraftforge / client / model / pipeline / VertexTransformer . java 
 index 5fe6565 . . 7a38467 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / pipeline / VertexTransformer . java 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / VertexTransformer . java 
 @ @ - 27 , 11 + 27 , 6 @ @ public class VertexTransformer implements IVertexConsumer 
 parent . setQuadOrientation ( orientation ) ; 
 } 
 
 - public void setQuadColored ( ) 
 - { 
 - parent . setQuadColored ( ) ; 
 - } 
 - 
 public void put ( int element , float . . . data ) 
 { 
 parent . put ( element , data ) ; 
 diff - - git a / src / test / resources / assets / forgedebugmodelanimation / blockstates / test _ animation _ block . json b / src / test / resources / assets / forgedebugmodelanimation / blockstates / test _ animation _ block . json 
 index 6fc5602 . . f2faef7 100644 
 - - - a / src / test / resources / assets / forgedebugmodelanimation / blockstates / test _ animation _ block . json 
 + + + b / src / test / resources / assets / forgedebugmodelanimation / blockstates / test _ animation _ block . json 
 @ @ - 16 , 14 + 16 , 7 @ @ 
 " variants " : { 
 " normal " : [ { } ] , 
 " inventory " : [ { 
 - " transform " : { 
 - " rotation " : { " y " : 180 } , 
 - " thirdperson " : { 
 - " rotation " : [ { " z " : 170 } , { " y " : - 45 } , { " z " : 20 } ] , 
 - " translation " : [ 0 , 0 . 09375 , - 0 . 171875 ] , 
 - " scale " : 0 . 375 
 - } 
 - } , 
 + " transform " : " forge : default - block " , 
 " model " : " forgedebugmodelanimation : engine " , 
 " submodel " : { 
 " ring " : { " model " : " forgedebugmodelanimation : engine _ ring " } 
 diff - - git a / src / test / resources / assets / forgedebugmodelloaderregistry / blockstates / CustomModelBlock . json b / src / test / resources / assets / forgedebugmodelloaderregistry / blockstates / CustomModelBlock . json 
 index e4e82e0 . . ced7cff 100644 
 - - - a / src / test / resources / assets / forgedebugmodelloaderregistry / blockstates / CustomModelBlock . json 
 + + + b / src / test / resources / assets / forgedebugmodelloaderregistry / blockstates / CustomModelBlock . json 
 @ @ - 13 , 14 + 13 , 7 @ @ 
 " variants " : { 
 " normal " : [ { } ] , 
 " inventory " : [ { 
 - " transform " : { 
 - " rotation " : { " y " : 180 } , 
 - " thirdperson " : { 
 - " rotation " : [ { " z " : 170 } , { " y " : - 45 } , { " z " : 20 } ] , 
 - " translation " : [ 0 , 0 . 09375 , - 0 . 171875 ] , 
 - " scale " : 0 . 375 
 - } 
 - } 
 + " transform " : " forge : default - block " 
 } ] , 
 " facing " : { 
 " down " : { " x " : 90 } , 
 diff - - git a / src / test / resources / assets / forgedebugmultilayermodel / blockstates / test _ layer _ block . json b / src / test / resources / assets / forgedebugmultilayermodel / blockstates / test _ layer _ block . json 
 index 15a23f0 . . e5ff027 100644 
 - - - a / src / test / resources / assets / forgedebugmultilayermodel / blockstates / test _ layer _ block . json 
 + + + b / src / test / resources / assets / forgedebugmultilayermodel / blockstates / test _ layer _ block . json 
 @ @ - 7 , 13 + 7 , 16 @ @ 
 " base " : " forgedebugmultilayermodel : test _ layer _ block # aux " , 
 / / per - layer models 
 " Solid " : " forgedebugmultilayermodel : test _ layer _ block # aux " , 
 - " Translucent " : " minecraft : pink _ stained _ glass _ pane # east = true , north = false , south = false , west = true " 
 + " Translucent " : " forgedebugmultilayermodel : test _ layer _ block # pane " 
 } , 
 " transform " : " forge : default - block " 
 } , 
 " variants " : { 
 " normal " : [ { } ] , 
 " inventory " : [ { } ] , 
 + " pane " : [ { 
 + " model " : " minecraft : pink _ stained _ glass _ pane _ noside " 
 + } ] , 
 " aux " : [ { 
 " model " : " cube _ all " , 
 " textures " : { " all " : " blocks / slime " } ,

NEAREST DIFF:
diff - - git a / patches . mcp / minecraft / net / minecraft / client / renderer / block / model / ModelManager . java . patch b / patches . mcp / minecraft / net / minecraft / client / renderer / block / model / ModelManager . java . patch 
 index 6ce4d19 . . 54256d1 100644 
 - - - a / patches . mcp / minecraft / net / minecraft / client / renderer / block / model / ModelManager . java . patch 
 + + + b / patches . mcp / minecraft / net / minecraft / client / renderer / block / model / ModelManager . java . patch 
 @ @ - 1 , 14 + 1 , 15 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / client / renderer / block / model / ModelManager . java 
 + + + . . / src - work / minecraft / net / minecraft / client / renderer / block / model / ModelManager . java 
 - @ @ - 24 , 9 + 24 , 10 @ @ 
 + @ @ - 24 , 9 + 24 , 11 @ @ 
 
 public void onResourceManagerReload ( IResourceManager resourceManager ) 
 { 
 - ModelBakery modelbakery = new ModelBakery ( resourceManager , this . texMap , this . modelProvider ) ; 
 - + ModelBakery modelbakery = new net . minecraftforge . client . model . ModelLoader ( resourceManager , this . texMap , this . modelProvider ) ; 
 + + / / FIXME : reenable after ModelLoader is fixed 
 + + ModelBakery modelbakery = new ModelBakery ( resourceManager , this . texMap , this . modelProvider ) ; / / new net . minecraftforge . client . model . ModelLoader ( resourceManager , this . texMap , this . modelProvider ) ; 
 this . modelRegistry = modelbakery . setupModelRegistry ( ) ; 
 this . defaultModel = ( IBakedModel ) this . modelRegistry . getObject ( ModelBakery . MODEL _ MISSING ) ; 
 - + net . minecraftforge . client . ForgeHooksClient . onModelBake ( this , this . modelRegistry , modelbakery ) ; 
 + + / / net . minecraftforge . client . ForgeHooksClient . onModelBake ( this , this . modelRegistry , modelbakery ) ; 
 this . modelProvider . reloadModels ( ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index 7d258b2 . . 106a8e7 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 71 , 7 + 71 , 6 @ @ import net . minecraftforge . client . event . RenderHandEvent ; 
 import net . minecraftforge . client . event . RenderWorldLastEvent ; 
 import net . minecraftforge . client . event . TextureStitchEvent ; 
 import net . minecraftforge . client . event . sound . PlaySoundEvent ; 
 - import net . minecraftforge . client . model . IFlexibleBakedModel ; 
 import net . minecraftforge . client . model . IModelPart ; 
 import net . minecraftforge . client . model . IPerspectiveAwareModel ; 
 import net . minecraftforge . client . model . ModelLoader ; 
 @ @ - 356 , 11 + 355 , 10 @ @ public class ForgeHooksClient 
 } 
 * / 
 
 - public static void onModelBake ( ModelManager modelManager , IRegistry < ModelResourceLocation , IBakedModel > modelRegistry , ModelBakery modelBakery ) 
 + public static void onModelBake ( ModelManager modelManager , IRegistry < ModelResourceLocation , IBakedModel > modelRegistry , ModelLoader modelLoader ) 
 { 
 - ModelLoader loader = ( ModelLoader ) modelBakery ; 
 - MinecraftForge . EVENT _ BUS . post ( new ModelBakeEvent ( modelManager , modelRegistry , loader ) ) ; 
 - loader . onPostBakeEvent ( modelRegistry ) ; 
 + MinecraftForge . EVENT _ BUS . post ( new ModelBakeEvent ( modelManager , modelRegistry , modelLoader ) ) ; 
 + modelLoader . onPostBakeEvent ( modelRegistry ) ; 
 } 
 
 	 public static Matrix4f getMatrix ( ItemTransformVec3f transform ) 
 @ @ - 389 , 7 + 387 , 7 @ @ public class ForgeHooksClient 
 { 
 if ( model instanceof IPerspectiveAwareModel ) 
 { 
 - Pair < ? extends IFlexibleBakedModel , Matrix4f > pair = ( ( IPerspectiveAwareModel ) model ) . handlePerspective ( cameraTransformType ) ; 
 + Pair < ? extends IBakedModel , Matrix4f > pair = ( ( IPerspectiveAwareModel ) model ) . handlePerspective ( cameraTransformType ) ; 
 
 if ( pair . getRight ( ) ! = null ) multiplyCurrentGlMatrix ( pair . getRight ( ) ) ; 
 return pair . getLeft ( ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / event / ModelBakeEvent . java b / src / main / java / net / minecraftforge / client / event / ModelBakeEvent . java 
 index 4a0210e . . dd20b20 100644 
 - - - a / src / main / java / net / minecraftforge / client / event / ModelBakeEvent . java 
 + + + b / src / main / java / net / minecraftforge / client / event / ModelBakeEvent . java 
 @ @ - 1 , 7 + 1 , 6 @ @ 
 package net . minecraftforge . client . event ; 
 
 import net . minecraft . client . renderer . block . model . IBakedModel ; 
 - import net . minecraft . client . renderer . block . model . ModelBakery ; 
 import net . minecraft . client . renderer . block . model . ModelManager ; 
 import net . minecraft . client . renderer . block . model . ModelResourceLocation ; 
 import net . minecraft . util . registry . IRegistry ; 
 @ @ - 12 , 25 + 11 , 32 @ @ import net . minecraftforge . fml . common . eventhandler . Event ; 
 * Fired when the ModelManager is notified of the resource manager reloading . 
 * Called after model registry is setup , but before it ' s passed to BlockModelShapes . 
 * / 
 + / / TODO : try to merge with ICustomModelLoader 
 public class ModelBakeEvent extends Event 
 { 
 - public final ModelManager modelManager ; 
 - public final IRegistry < ModelResourceLocation , IBakedModel > modelRegistry ; 
 - @ Deprecated 
 - public final ModelBakery modelBakery ; 
 - public final ModelLoader modelLoader ; 
 - 
 - @ Deprecated 
 - public ModelBakeEvent ( ModelManager modelManager , IRegistry < ModelResourceLocation , IBakedModel > modelRegistry , ModelBakery modelBakery ) 
 - { 
 - this ( modelManager , modelRegistry , ( ModelLoader ) modelBakery ) ; 
 - } 
 + private final ModelManager modelManager ; 
 + private final IRegistry < ModelResourceLocation , IBakedModel > modelRegistry ; 
 + private final ModelLoader modelLoader ; 
 
 public ModelBakeEvent ( ModelManager modelManager , IRegistry < ModelResourceLocation , IBakedModel > modelRegistry , ModelLoader modelLoader ) 
 { 
 this . modelManager = modelManager ; 
 this . modelRegistry = modelRegistry ; 
 - this . modelBakery = modelLoader ; 
 this . modelLoader = modelLoader ; 
 } 
 + 
 + public ModelManager getModelManager ( ) 
 + { 
 + return modelManager ; 
 + } 
 + 
 + public IRegistry < ModelResourceLocation , IBakedModel > getModelRegistry ( ) 
 + { 
 + return modelRegistry ; 
 + } 
 + 
 + public ModelLoader getModelLoader ( ) 
 + { 
 + return modelLoader ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / model / BlockStateLoader . java b / src / main / java / net / minecraftforge / client / model / BlockStateLoader . java 
 index 65f40be . . 4e70d85 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / BlockStateLoader . java 
 + + + b / src / main / java / net / minecraftforge / client / model / BlockStateLoader . java 
 @ @ - 146 , 12 + 146 , 13 @ @ public class BlockStateLoader 
 this . gui3d = gui3d ; 
 } 
 
 - private IModel runModelHooks ( IModel base , boolean smooth , boolean gui3d , ImmutableMap < String , String > textureMap , ImmutableMap < String , String > customData ) 
 + private IModel runModelHooks ( IModel base , boolean smooth , boolean gui3d , boolean uvlock , ImmutableMap < String , String > textureMap , ImmutableMap < String , String > customData ) 
 { 
 base = ModelProcessingHelper . customData ( base , customData ) ; 
 base = ModelProcessingHelper . retexture ( base , textureMap ) ; 
 base = ModelProcessingHelper . smoothLighting ( base , smooth ) ; 
 base = ModelProcessingHelper . gui3d ( base , gui3d ) ; 
 + base = ModelProcessingHelper . uvlock ( base , uvlock ) ; 
 return base ; 
 } 
 
 @ @ - 166 , 7 + 167 , 7 @ @ public class BlockStateLoader 
 
 if ( hasBase ) 
 { 
 - base = runModelHooks ( base , smooth , gui3d , textures , customData ) ; 
 + base = runModelHooks ( base , smooth , gui3d , this . func _ 188049 _ c ( ) , textures , customData ) ; 
 
 if ( size < = 0 ) 
 return base ; 
 @ @ - 193 , 9 + 194 , 8 @ @ public class BlockStateLoader 
 } 
 
 IModelState partState = new ModelStateComposition ( baseTr , part . getState ( ) ) ; 
 - if ( part . isUVLock ( ) ) partState = new ModelLoader . UVLock ( partState ) ; 
 
 - models . put ( entry . getKey ( ) , Pair . < IModel , IModelState > of ( runModelHooks ( model , part . smooth , part . gui3d , part . getTextures ( ) , part . getCustomData ( ) ) , partState ) ) ; 
 + models . put ( entry . getKey ( ) , Pair . < IModel , IModelState > of ( runModelHooks ( model , part . smooth , part . gui3d , part . uvLock , part . getTextures ( ) , part . getCustomData ( ) ) , partState ) ) ; 
 } 
 
 return new MultiModel ( func _ 188046 _ a ( ) , hasBase ? base : null , baseTr , models . build ( ) ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / model / IModelUVLock . java b / src / main / java / net / minecraftforge / client / model / IModelUVLock . java 
 new file mode 100644 
 index 0000000 . . aa3dd8f 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / model / IModelUVLock . java 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + package net . minecraftforge . client . model ; 
 + 
 + public interface IModelUVLock extends IModel 
 + { 
 + public IModel uvlock ( boolean value ) ; 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / client / model / ModelLoader . java b / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 index cac257b . . 77de536 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ModelLoader . java 
 @ @ - 17 , 12 + 17 , 14 @ @ import java . util . Set ; 
 
 import com . google . common . base . Joiner ; 
 import com . google . common . collect . * ; 
 + 
 import net . minecraft . block . Block ; 
 import net . minecraft . block . state . IBlockState ; 
 import net . minecraft . client . Minecraft ; 
 import net . minecraft . client . renderer . BlockModelShapes ; 
 import net . minecraft . client . renderer . ItemMeshDefinition ; 
 import net . minecraft . client . renderer . ItemModelMesher ; 
 + import net . minecraft . client . renderer . block . model . BakedQuad ; 
 import net . minecraft . client . renderer . block . model . BlockPart ; 
 import net . minecraft . client . renderer . block . model . BlockPartFace ; 
 import net . minecraft . client . renderer . block . model . BlockPartRotation ; 
 @ @ - 162 , 16 + 164 , 42 @ @ public class ModelLoader extends ModelBakery 
 ProgressBar blockBar = ProgressManager . push ( " ModelLoader : blocks " , variants . size ( ) ) ; 
 for ( ModelResourceLocation variant : variants ) 
 { 
 - loadVariants ( ImmutableList . of ( variant ) ) ; 
 + loadVariant ( variant ) ; 
 blockBar . step ( variant . toString ( ) ) ; 
 } 
 ProgressManager . pop ( blockBar ) ; 
 } 
 
 + / / FIXME : all the new shiny multipart things 
 + private void loadVariant ( ModelResourceLocation variant ) 
 + { 
 + try 
 + { 
 + ModelBlockDefinition modelblockdefinition = this . getModelBlockDefinition ( variant ) ; 
 + 
 + try 
 + { 
 + this . registerVariant ( modelblockdefinition , variant ) ; 
 + } 
 + catch ( Exception ex ) 
 + { 
 + FMLLog . getLogger ( ) . warn ( " Unable to load variant : " + variant . getVariant ( ) + " from " + variant , ex ) ; 
 + } 
 + } 
 + catch ( Exception ex ) 
 + { 
 + FMLLog . getLogger ( ) . warn ( " Unable to load definition " + variant , ex ) ; 
 + } 
 + } 
 + 
 + / / FIXME : this is probably not the hook point anymore 
 @ Override 
 protected void registerVariant ( ModelBlockDefinition definition , ModelResourceLocation location ) 
 { 
 - VariantList variants = null ; 
 + / / for now 
 + super . registerVariant ( definition , location ) ; 
 + 
 + / * VariantList variants = null ; 
 try 
 { 
 variants = definition . getVariants ( location . getVariant ( ) ) ; 
 @ @ - 190 , 7 + 218 , 7 @ @ public class ModelLoader extends ModelBakery 
 { 
 throw new RuntimeException ( e ) ; 
 } 
 - } 
 + } * / 
 } 
 
 private void storeException ( ResourceLocation location , Exception exception ) 
 @ @ - 387 , 7 + 415 , 7 @ @ public class ModelLoader extends ModelBakery 
 
 IModel getVariantModel ( ModelResourceLocation location ) 
 { 
 - loadVariants ( ImmutableList . of ( location ) ) ; 
 + loadVariant ( location ) ; 
 IModel model = stateModels . get ( location ) ; 
 if ( model = = null ) model = getMissingModel ( ) ; 
 return model ; 
 @ @ - 409 , 16 + 437 , 18 @ @ public class ModelLoader extends ModelBakery 
 textures . addAll ( model . getTextures ( ) ) ; 
 } 
 
 - private class VanillaModelWrapper implements IRetexturableModel , IModelSimpleProperties , IAnimatedModel 
 + private class VanillaModelWrapper implements IRetexturableModel , IModelSimpleProperties , IModelUVLock , IAnimatedModel 
 { 
 private final ResourceLocation location ; 
 private final ModelBlock model ; 
 + private final boolean uvlock ; 
 private final ModelBlockAnimation animation ; 
 
 - public VanillaModelWrapper ( ResourceLocation location , ModelBlock model , ModelBlockAnimation animation ) 
 + public VanillaModelWrapper ( ResourceLocation location , ModelBlock model , boolean uvlock , ModelBlockAnimation animation ) 
 { 
 this . location = location ; 
 this . model = model ; 
 + this . uvlock = uvlock ; 
 this . animation = animation ; 
 } 
 
 @ @ - 500 , 7 + 530 , 7 @ @ public class ModelLoader extends ModelBakery 
 return builder . build ( ) ; 
 } 
 
 - public IBakedModel bake ( IModelState state , VertexFormat format , Function < ResourceLocation , TextureAtlasSprite > bakedTextureGetter ) 
 + public IBakedModel bake ( IModelState state , final VertexFormat format , Function < ResourceLocation , TextureAtlasSprite > bakedTextureGetter ) 
 { 
 if ( ! Attributes . moreSpecific ( format , Attributes . DEFAULT _ BAKED _ FORMAT ) ) 
 { 
 @ @ - 517 , 12 + 547 , 6 @ @ public class ModelLoader extends ModelBakery 
 } 
 
 ItemCameraTransforms transforms = model . func _ 181682 _ g ( ) ; 
 - boolean uvlock = false ; 
 - if ( state instanceof UVLock ) 
 - { 
 - uvlock = true ; 
 - state = ( ( UVLock ) state ) . getParent ( ) ; 
 - } 
 Map < TransformType , TRSRTransformation > tMap = Maps . newHashMap ( ) ; 
 tMap . putAll ( IPerspectiveAwareModel . MapWrapper . getTransforms ( transforms ) ) ; 
 tMap . putAll ( IPerspectiveAwareModel . MapWrapper . getTransforms ( state ) ) ; 
 @ @ - 532 , 14 + 556 , 14 @ @ public class ModelLoader extends ModelBakery 
 { 
 return new ItemLayerModel ( model ) . bake ( perState , format , bakedTextureGetter ) ; 
 } 
 - if ( isCustomRenderer ( model ) ) return new BuiltInModel ( transforms ) ; 
 + if ( isCustomRenderer ( model ) ) return new BuiltInModel ( transforms , model . func _ 187967 _ g ( ) ) ; 
 return bakeNormal ( model , perState , state . apply ( Optional . < IModelPart > absent ( ) ) . or ( TRSRTransformation . identity ( ) ) , newTransforms , format , bakedTextureGetter , uvlock ) ; 
 } 
 
 private IBakedModel bakeNormal ( ModelBlock model , IModelState perState , final TRSRTransformation modelState , List < TRSRTransformation > newTransforms , VertexFormat format , final Function < ResourceLocation , TextureAtlasSprite > bakedTextureGetter , boolean uvLocked ) 
 { 
 TextureAtlasSprite particle = bakedTextureGetter . apply ( new ResourceLocation ( model . resolveTextureName ( " particle " ) ) ) ; 
 - SimpleBakedModel . Builder builder = ( new SimpleBakedModel . Builder ( model ) ) . setTexture ( particle ) ; 
 + SimpleBakedModel . Builder builder = ( new SimpleBakedModel . Builder ( model , model . func _ 187967 _ g ( ) ) ) . setTexture ( particle ) ; 
 for ( int i = 0 ; i < model . getElements ( ) . size ( ) ; i + + ) 
 { 
 BlockPart part = model . getElements ( ) . get ( i ) ; 
 @ @ - 566 , 31 + 590 , 27 @ @ public class ModelLoader extends ModelBakery 
 } 
 } 
 
 - / / FIXME 
 - return new ISmartBlockModel . PerspectiveWrapper ( new IPerspectiveAwareModel . MapWrapper ( builder . makeBakedModel ( ) , perState ) ) 
 - { 
 - public IBakedModel handleBlockState ( IBlockState state ) 
 - { 
 - return VanillaModelWrapper . this . handleBlockState ( parent , bakedTextureGetter , modelState , state ) ; 
 - } 
 - } ; 
 - } 
 - 
 - private IBakedModel handleBlockState ( IBakedModel model , Function < ResourceLocation , TextureAtlasSprite > bakedTextureGetter , TRSRTransformation modelState , IBlockState state ) 
 - { 
 - if ( state instanceof IExtendedBlockState ) 
 + return new IPerspectiveAwareModel . MapWrapper ( builder . makeBakedModel ( ) , perState ) 
 { 
 - IExtendedBlockState exState = ( IExtendedBlockState ) state ; 
 - if ( exState . getUnlistedNames ( ) . contains ( Properties . AnimationProperty ) ) 
 + @ Override 
 + public List < BakedQuad > func _ 188616 _ a ( IBlockState state , EnumFacing side , long rand ) 
 { 
 - IModelState newState = exState . getValue ( Properties . AnimationProperty ) ; 
 - if ( newState ! = null ) 
 + if ( state instanceof IExtendedBlockState ) 
 { 
 - return VanillaModelWrapper . this . bake ( new ModelStateComposition ( modelState , newState ) , model . getFormat ( ) , bakedTextureGetter ) ; 
 + IExtendedBlockState exState = ( IExtendedBlockState ) state ; 
 + if ( exState . getUnlistedNames ( ) . contains ( Properties . AnimationProperty ) ) 
 + { 
 + IModelState newState = exState . getValue ( Properties . AnimationProperty ) ; 
 + IExtendedBlockState newExState = exState . withProperty ( Properties . AnimationProperty , null ) ; 
 + if ( newState ! = null ) 
 + { 
 + return VanillaModelWrapper . this . bake ( new ModelStateComposition ( modelState , newState ) , format , bakedTextureGetter ) . func _ 188616 _ a ( newExState , side , rand ) ; 
 + } 
 + } 
 } 
 - } 
 - } 
 - return model ; 
 + return super . func _ 188616 _ a ( state , side , rand ) ; 
 + } ; 
 + } ; 
 } 
 
 @ Override 
 @ @ - 607 , 7 + 627 , 7 @ @ public class ModelLoader extends ModelBakery 
 
 ModelBlock newModel = new ModelBlock ( this . model . getParentLocation ( ) , elements , 
 Maps . newHashMap ( this . model . textures ) , this . model . isAmbientOcclusion ( ) , this . model . isGui3d ( ) , / / New Textures man VERY IMPORTANT 
 - model . func _ 181682 _ g ( ) ) ; 
 + model . func _ 181682 _ g ( ) , Lists . newArrayList ( model . func _ 187966 _ f ( ) ) ) ; 
 newModel . name = this . model . name ; 
 newModel . parent = this . model . parent ; 
 
 @ @ - 651 , 7 + 671 , 7 @ @ public class ModelLoader extends ModelBakery 
 } 
 } 
 
 - return new VanillaModelWrapper ( location , newModel , animation ) ; 
 + return new VanillaModelWrapper ( location , newModel , uvlock , animation ) ; 
 } 
 
 @ Override 
 @ @ - 676 , 10 + 696 , 10 @ @ public class ModelLoader extends ModelBakery 
 { 
 return this ; 
 } 
 - ModelBlock newModel = new ModelBlock ( model . getParentLocation ( ) , model . getElements ( ) , model . textures , value , model . isGui3d ( ) , model . func _ 181682 _ g ( ) ) ; 
 + ModelBlock newModel = new ModelBlock ( model . getParentLocation ( ) , model . getElements ( ) , model . textures , value , model . isGui3d ( ) , model . func _ 181682 _ g ( ) , Lists . newArrayList ( model . func _ 187966 _ f ( ) ) ) ; 
 newModel . parent = model . parent ; 
 newModel . name = model . name ; 
 - return new VanillaModelWrapper ( location , newModel , animation ) ; 
 + return new VanillaModelWrapper ( location , newModel , uvlock , animation ) ; 
 } 
 
 @ Override 
 @ @ - 689 , 31 + 709 , 20 @ @ public class ModelLoader extends ModelBakery 
 { 
 return this ; 
 } 
 - ModelBlock newModel = new ModelBlock ( model . getParentLocation ( ) , model . getElements ( ) , model . textures , model . ambientOcclusion , value , model . func _ 181682 _ g ( ) ) ; 
 + ModelBlock newModel = new ModelBlock ( model . getParentLocation ( ) , model . getElements ( ) , model . textures , model . ambientOcclusion , value , model . func _ 181682 _ g ( ) , Lists . newArrayList ( model . func _ 187966 _ f ( ) ) ) ; 
 newModel . parent = model . parent ; 
 newModel . name = model . name ; 
 - return new VanillaModelWrapper ( location , newModel , animation ) ; 
 - } 
 - } 
 - 
 - @ Deprecated / / rework in 1 . 9 
 - public static class UVLock implements IModelState 
 - { 
 - private final IModelState parent ; 
 - 
 - public UVLock ( IModelState parent ) 
 - { 
 - this . parent = parent ; 
 - } 
 - 
 - public IModelState getParent ( ) 
 - { 
 - return parent ; 
 + return new VanillaModelWrapper ( location , newModel , uvlock , animation ) ; 
 } 
 
 - public Optional < TRSRTransformation > apply ( Optional < ? extends IModelPart > part ) 
 + @ Override 
 + public IModel uvlock ( boolean value ) 
 { 
 - return parent . apply ( part ) ; 
 + if ( uvlock = = value ) 
 + { 
 + return this ; 
 + } 
 + return new VanillaModelWrapper ( location , model , value , animation ) ; 
 } 
 } 
 
 @ @ - 730 , 7 + 739 , 7 @ @ public class ModelLoader extends ModelBakery 
 ImmutableList . Builder < Pair < IModel , IModelState > > builder = ImmutableList . builder ( ) ; 
 for ( Variant v : this . variants ) 
 { 
 - ResourceLocation loc = v . getModelLocation ( ) ; 
 + ResourceLocation loc = v . func _ 188046 _ a ( ) ; 
 locations . add ( loc ) ; 
 
 IModel model = null ; 
 @ @ - 787 , 12 + 796 , 6 @ @ public class ModelLoader extends ModelBakery 
 return Collections . emptyList ( ) ; 
 } 
 
 - private IModelState addUV ( boolean uv , IModelState state ) 
 - { 
 - if ( uv ) return new UVLock ( state ) ; 
 - return state ; 
 - } 
 - 
 public IBakedModel bake ( IModelState state , VertexFormat format , Function < ResourceLocation , TextureAtlasSprite > bakedTextureGetter ) 
 { 
 if ( ! Attributes . moreSpecific ( format , Attributes . DEFAULT _ BAKED _ FORMAT ) ) 
 @ @ - 803 , 14 + 806 , 14 @ @ public class ModelLoader extends ModelBakery 
 { 
 Variant v = variants . get ( 0 ) ; 
 IModel model = models . get ( 0 ) ; 
 - return model . bake ( addUV ( v . isUvLocked ( ) , MultiModelState . getPartState ( state , model , 0 ) ) , format , bakedTextureGetter ) ; 
 + return model . bake ( MultiModelState . getPartState ( state , model , 0 ) , format , bakedTextureGetter ) ; 
 } 
 WeightedBakedModel . Builder builder = new WeightedBakedModel . Builder ( ) ; 
 for ( int i = 0 ; i < variants . size ( ) ; i + + ) 
 { 
 IModel model = models . get ( i ) ; 
 Variant v = variants . get ( i ) ; 
 - builder . add ( model . bake ( addUV ( v . isUvLocked ( ) , MultiModelState . getPartState ( state , model , i ) ) , format , bakedTextureGetter ) , variants . get ( i ) . getWeight ( ) ) ; 
 + builder . add ( model . bake ( MultiModelState . getPartState ( state , model , i ) , format , bakedTextureGetter ) , variants . get ( i ) . func _ 188047 _ d ( ) ) ; 
 } 
 return builder . build ( ) ; 
 } 
 @ @ - 878 , 7 + 881 , 7 @ @ public class ModelLoader extends ModelBakery 
 } 
 ResourceLocation armatureLocation = new ResourceLocation ( modelLocation . getResourceDomain ( ) , " armatures / " + modelPath + " . json " ) ; 
 ModelBlockAnimation animation = Animation . INSTANCE . loadVanillaAnimation ( armatureLocation ) ; 
 - return loader . new VanillaModelWrapper ( modelLocation , loader . loadModel ( modelLocation ) , animation ) ; 
 + return loader . new VanillaModelWrapper ( modelLocation , loader . loadModel ( modelLocation ) , false , animation ) ; 
 } 
 } 
 
 @ @ - 898 , 6 + 901 , 7 @ @ public class ModelLoader extends ModelBakery 
 return true ; 
 } 
 
 + / / TODO : check if this code is correct 
 @ Override 
 public boolean load ( IResourceManager manager , ResourceLocation location ) 
 { 
 @ @ - 905 , 16 + 909 , 10 @ @ public class ModelLoader extends ModelBakery 
 Graphics2D graphics = image . createGraphics ( ) ; 
 graphics . setBackground ( Color . WHITE ) ; 
 graphics . clearRect ( 0 , 0 , 16 , 16 ) ; 
 - BufferedImage [ ] images = new BufferedImage [ Minecraft . getMinecraft ( ) . gameSettings . mipmapLevels + 1 ] ; 
 - images [ 0 ] = image ; 
 - try 
 - { 
 - loadSprite ( images , null ) ; 
 - } 
 - catch ( IOException e ) 
 - { 
 - throw new RuntimeException ( e ) ; 
 - } 
 + int [ ] [ ] pixels = new int [ Minecraft . getMinecraft ( ) . gameSettings . mipmapLevels + 1 ] [ ] ; 
 + pixels [ 0 ] = new int [ image . getWidth ( ) * image . getHeight ( ) ] ; 
 + image . getRGB ( 0 , 0 , image . getWidth ( ) , image . getHeight ( ) , pixels [ 0 ] , 0 , image . getWidth ( ) ) ; 
 + this . framesTextureData . add ( pixels ) ; 
 return false ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / client / model / ModelProcessingHelper . java b / src / main / java / net / minecraftforge / client / model / ModelProcessingHelper . java 
 index a9b9e26 . . c4d5d82 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ModelProcessingHelper . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ModelProcessingHelper . java 
 @ @ - 39 , 4 + 39 , 13 @ @ public class ModelProcessingHelper 
 } 
 return model ; 
 } 
 + 
 + public static IModel uvlock ( IModel model , boolean uvlock ) 
 + { 
 + if ( model instanceof IModelUVLock ) 
 + { 
 + model = ( ( IModelUVLock ) model ) . uvlock ( uvlock ) ; 
 + } 
 + return model ; 
 + } 
 } 
 diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg 
 index 4f78e56 . . 3eaa618 100644 
 - - - a / src / main / resources / forge _ at . cfg 
 + + + b / src / main / resources / forge _ at . cfg 
 @ @ - 115 , 6 + 115 , 7 @ @ protected net . minecraft . block . state . BlockStateContainer $ StateImplementation fiel 
 public net . minecraft . client . renderer . block . model . ModelBlock field _ 178318 _ c # textures 
 public net . minecraft . client . renderer . block . model . ModelBlock field _ 178315 _ d # parent 
 public net . minecraft . client . renderer . block . model . ModelBlock field _ 178322 _ i # ambientOcclusion 
 + public net . minecraft . client . renderer . block . model . ModelBlock func _ 187966 _ f ( ) Ljava / util / List ; # getOverrides 
 protected net . minecraft . client . renderer . block . model . ModelBakery field _ 177602 _ b # LOCATIONS _ BUILTIN _ TEXTURES 
 protected net . minecraft . client . renderer . block . model . ModelBakery field _ 177598 _ f # resourceManager 
 protected net . minecraft . client . renderer . block . model . ModelBakery field _ 177599 _ g # sprites 
 @ @ - 141 , 8 + 142 , 8 @ @ protected net . minecraft . client . renderer . block . model . ModelBakery func _ 177580 _ d ( Ln 
 # EnumFacing 
 public net . minecraft . util . EnumFacing field _ 82609 _ l # VALUES 
 public net . minecraft . util . EnumFacing field _ 176754 _ o # HORIZONTALS 
 - # public net . minecraft . client . renderer . VertexBuffer func _ 78909 _ a ( I ) I # getColorIndex 
 - # public net . minecraft . client . renderer . VertexBuffer func _ 178972 _ a ( IIIII ) V # putColorRGBA 
 + public net . minecraft . client . renderer . VertexBuffer func _ 78909 _ a ( I ) I # getColorIndex 
 + public net . minecraft . client . renderer . VertexBuffer func _ 178972 _ a ( IIIII ) V # putColorRGBA 
 # ModelBlock Constructor 
 # public net . minecraft . client . renderer . block . model . ModelBlock < init > ( Lnet / minecraft / util / ResourceLocation ; Ljava / util / List ; Ljava / util / Map ; ZZLnet / minecraft / client / renderer / block / model / ItemCameraTransforms ; ) V 
 # RenderLivingEntity 
 @ @ - 263 , 4 + 264 , 4 @ @ private - f net / minecraft / world / gen / ChunkProviderHell / field _ 73174 _ n # perlin3 
 public - f net / minecraft / world / gen / ChunkProviderHell / field _ 185946 _ g # scale 
 public - f net / minecraft / world / gen / ChunkProviderHell / field _ 185947 _ h # depth 
 private - f net / minecraft / world / gen / ChunkProviderHell / field _ 185939 _ I # netherCaveGenerator 
 - private - f net / minecraft / world / gen / ChunkProviderHell / field _ 73172 _ c # netherBridgeGenerator 
 \ No newline at end of file 
 + private - f net / minecraft / world / gen / ChunkProviderHell / field _ 73172 _ c # netherBridgeGenerator 
 diff - - git a / src / test / java / net / minecraftforge / debug / ItemTileDebug . java b / src / test / java / net / minecraftforge / debug / ItemTileDebug . java 
 index 0539661 . . 6441558 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ItemTileDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ItemTileDebug . java 
 @ @ - 83 , 7 + 83 , 7 @ @ public class ItemTileDebug 
 @ SubscribeEvent 
 public void onModelBakeEvent ( ModelBakeEvent event ) 
 { 
 - event . modelManager . getBlockModelShapes ( ) . registerBuiltInBlocks ( TestBlock . instance ) ; 
 + event . getModelManager ( ) . getBlockModelShapes ( ) . registerBuiltInBlocks ( TestBlock . instance ) ; 
 } 
 } 
 
 diff - - git a / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java b / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java 
 index 7f3dfcc . . 654f773 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ModelBakeEventDebug . java 
 @ @ - 117 , 8 + 117 , 8 @ @ public class ModelBakeEventDebug 
 TextureAtlasSprite base = Minecraft . getMinecraft ( ) . getTextureMapBlocks ( ) . getAtlasSprite ( " minecraft : blocks / slime " ) ; 
 TextureAtlasSprite overlay = Minecraft . getMinecraft ( ) . getTextureMapBlocks ( ) . getAtlasSprite ( " minecraft : blocks / redstone _ block " ) ; 
 IBakedModel customModel = new CustomModel ( base , overlay ) ; 
 - event . modelRegistry . putObject ( ClientProxy . blockLocation , customModel ) ; 
 - event . modelRegistry . putObject ( ClientProxy . itemLocation , customModel ) ; 
 + event . getModelRegistry ( ) . putObject ( ClientProxy . blockLocation , customModel ) ; 
 + event . getModelRegistry ( ) . putObject ( ClientProxy . itemLocation , customModel ) ; 
 } 
 } 

