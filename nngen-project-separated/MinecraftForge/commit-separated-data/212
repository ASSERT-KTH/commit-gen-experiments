BLEU SCORE: 0.0188543596416306

TEST MSG: Write full class name in undefined packet error messages .
GENERATED MSG: Fixed problem with LAN connections seeing the original ProxyPacket and consuming the first byte . Closes # 2373

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> index e30d8cb . . 490b2d8 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> @ @ - 73 , 7 + 73 , 7 @ @ public abstract class FMLIndexedMessageToMessageCodec < A > extends MessageToMessag <nl> Class < ? > clazz = msg . getClass ( ) ; <nl> if ( ! types . containsKey ( clazz ) ) <nl> { <nl> - throw new RuntimeException ( " Undefined discriminator for message type " + clazz . getSimpleName ( ) + " in channel " + channel ) ; <nl> + throw new RuntimeException ( " Undefined discriminator for message type " + clazz . getName ( ) + " in channel " + channel ) ; <nl> } <nl> byte discriminator = types . getByte ( clazz ) ; <nl> PacketBuffer buffer = new PacketBuffer ( Unpooled . buffer ( ) ) ;
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> index 613e7c3 . . 1e4444a 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> @ @ - 69 , 7 + 69 , 7 @ @ public abstract class FMLIndexedMessageToMessageCodec < A > extends MessageToMessag <nl> protected final void decode ( ChannelHandlerContext ctx , FMLProxyPacket msg , List < Object > out ) throws Exception <nl> { <nl> testMessageValidity ( msg ) ; <nl> - ByteBuf payload = msg . payload ( ) ; <nl> + ByteBuf payload = msg . payload ( ) . copy ( ) ; <nl> byte discriminator = payload . readByte ( ) ; <nl> Class < ? extends A > clazz = discriminators . get ( discriminator ) ; <nl> if ( clazz = = null )

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 index e30d8cb . . 490b2d8 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 @ @ - 73 , 7 + 73 , 7 @ @ public abstract class FMLIndexedMessageToMessageCodec < A > extends MessageToMessag 
 Class < ? > clazz = msg . getClass ( ) ; 
 if ( ! types . containsKey ( clazz ) ) 
 { 
 - throw new RuntimeException ( " Undefined discriminator for message type " + clazz . getSimpleName ( ) + " in channel " + channel ) ; 
 + throw new RuntimeException ( " Undefined discriminator for message type " + clazz . getName ( ) + " in channel " + channel ) ; 
 } 
 byte discriminator = types . getByte ( clazz ) ; 
 PacketBuffer buffer = new PacketBuffer ( Unpooled . buffer ( ) ) ;

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 index 613e7c3 . . 1e4444a 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 @ @ - 69 , 7 + 69 , 7 @ @ public abstract class FMLIndexedMessageToMessageCodec < A > extends MessageToMessag 
 protected final void decode ( ChannelHandlerContext ctx , FMLProxyPacket msg , List < Object > out ) throws Exception 
 { 
 testMessageValidity ( msg ) ; 
 - ByteBuf payload = msg . payload ( ) ; 
 + ByteBuf payload = msg . payload ( ) . copy ( ) ; 
 byte discriminator = payload . readByte ( ) ; 
 Class < ? extends A > clazz = discriminators . get ( discriminator ) ; 
 if ( clazz = = null )
