BLEU SCORE: 0.018231094563196566

TEST MSG: Fix ModList cache never being updated
GENERATED MSG: Fix libraries not being added to the modlist when using external metadata . Closes # 4879

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java b / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java <nl> index ef4d229 . . c7e2bc3 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java <nl> + + + b / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java <nl> @ @ - 99 , 8 + 99 , 11 @ @ public class LibraryManager <nl> for ( ModList list : ModList . getKnownLists ( minecraftHome ) ) <nl> { <nl> Repository repo = list . getRepository ( ) = = null ? libraries _ dir : list . getRepository ( ) ; <nl> - for ( Artifact artifact : list . getArtifacts ( ) ) <nl> + List < Artifact > artifacts = list . getArtifacts ( ) ; <nl> + / / extractPacked adds artifacts to the list . As such , we can ' t use an Iterator to traverse it . <nl> + for ( int i = 0 ; i < artifacts . size ( ) ; i + + ) <nl> { <nl> + Artifact artifact = artifacts . get ( i ) ; <nl> Artifact resolved = repo . resolve ( artifact ) ; <nl> if ( resolved ! = null ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / fml / relauncher / libraries / ModList . java b / src / main / java / net / minecraftforge / fml / relauncher / libraries / ModList . java <nl> index 0791d4d . . 2d12d1b 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / relauncher / libraries / ModList . java <nl> + + + b / src / main / java / net / minecraftforge / fml / relauncher / libraries / ModList . java <nl> @ @ - 50 , 8 + 50 , 7 @ @ public class ModList <nl> try <nl> { <nl> String key = json . getCanonicalFile ( ) . getAbsolutePath ( ) ; <nl> - if ( cache . containsKey ( key ) ) <nl> - return cache . get ( key ) ; <nl> + return cache . computeIfAbsent ( key , k - > new ModList ( json , mcdir ) ) ; <nl> } <nl> catch ( IOException e ) <nl> {
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / relauncher / libraries / Artifact . java b / src / main / java / net / minecraftforge / fml / relauncher / libraries / Artifact . java <nl> index 80475b9 . . 2a634bf 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / relauncher / libraries / Artifact . java <nl> + + + b / src / main / java / net / minecraftforge / fml / relauncher / libraries / Artifact . java <nl> @ @ - 123 , 7 + 123 , 7 @ @ public class Artifact implements Comparable < Artifact > <nl> if ( folder = = null ) <nl> { <nl> StringBuilder sb = new StringBuilder ( ) ; <nl> - for ( String part : group . split ( " . " ) ) <nl> + for ( String part : group . split ( " \ \ . " ) ) <nl> sb . append ( part ) . append ( File . separatorChar ) ; <nl> sb . append ( artifact ) . append ( File . separatorChar ) ; <nl> sb . append ( version ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java b / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java <nl> index 3b4f34a . . 783442d 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java <nl> + + + b / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java <nl> @ @ - 317 , 14 + 317 , 18 @ @ public class LibraryManager <nl> { <nl> try <nl> { <nl> - 	 Artifact artifact = readArtifact ( modlist . getRepository ( ) , meta ) ; <nl> + Artifact artifact = readArtifact ( modlist . getRepository ( ) , meta ) ; <nl> File target = artifact . getFile ( ) ; <nl> if ( target . exists ( ) ) <nl> { <nl> FMLLog . log . debug ( " Found existing ContainedDep { } ( { } ) from { } extracted to { } , skipping extraction " , dep , artifact . toString ( ) , target . getCanonicalPath ( ) , jar . getName ( ) ) ; <nl> if ( ! ENABLE _ AUTO _ MOD _ MOVEMENT ) <nl> { <nl> - extractPacked ( target , modlist , modDirs ) ; / / If we ' re not building a real list we have to re - build the dep list every run . So search down . <nl> + Pair < ? , ? > child = extractPacked ( target , modlist , modDirs ) ; / / If we ' re not building a real list we have to re - build the dep list every run . So search down . <nl> + if ( child = = null & & metaEntry ! = null ) / / External meta with no internal name . . . If there is a internal name , we trust that that name is the correct one . <nl> + { <nl> + modlist . add ( artifact ) ; <nl> + } <nl> } <nl> } <nl> else <nl> @ @ - 353 , 7 + 357 , 11 @ @ public class LibraryManager <nl> File meta _ target = new File ( target . getAbsolutePath ( ) + " . meta " ) ; <nl> Files . write ( manifest _ data , meta _ target ) ; <nl> } <nl> - extractPacked ( target , modlist , modDirs ) ; <nl> + Pair < ? , ? > child = extractPacked ( target , modlist , modDirs ) ; <nl> + if ( child = = null & & metaEntry ! = null ) / / External meta with no internal name . . . If there is a internal name , we trust that that name is the correct one . <nl> + { <nl> + modlist . add ( artifact ) ; <nl> + } <nl> } <nl> } <nl> catch ( NumberFormatException nfe ) <nl> @ @ - 368 , 15 + 376 , 15 @ @ public class LibraryManager <nl> } <nl> } <nl> <nl> - if ( attrs . containsKey ( MAVEN _ ARTIFACT ) ) <nl> + if ( attrs . containsKey ( MAVEN _ ARTIFACT ) ) <nl> { <nl> - 	 Artifact artifact = readArtifact ( modlist . getRepository ( ) , attrs ) ; <nl> - 	 modlist . add ( artifact ) ; <nl> - 	 return Pair . of ( artifact , readAll ( jar . getInputStream ( manifest _ entry ) ) ) ; <nl> + Artifact artifact = readArtifact ( modlist . getRepository ( ) , attrs ) ; <nl> + modlist . add ( artifact ) ; <nl> + return Pair . of ( artifact , readAll ( jar . getInputStream ( manifest _ entry ) ) ) ; <nl> } <nl> return null ; <nl> } <nl> - <nl> + <nl> private static Artifact readArtifact ( Repository repo , Attributes meta ) <nl> { <nl> String timestamp = meta . getValue ( TIMESTAMP ) ;

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java b / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java 
 index ef4d229 . . c7e2bc3 100644 
 - - - a / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java 
 + + + b / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java 
 @ @ - 99 , 8 + 99 , 11 @ @ public class LibraryManager 
 for ( ModList list : ModList . getKnownLists ( minecraftHome ) ) 
 { 
 Repository repo = list . getRepository ( ) = = null ? libraries _ dir : list . getRepository ( ) ; 
 - for ( Artifact artifact : list . getArtifacts ( ) ) 
 + List < Artifact > artifacts = list . getArtifacts ( ) ; 
 + / / extractPacked adds artifacts to the list . As such , we can ' t use an Iterator to traverse it . 
 + for ( int i = 0 ; i < artifacts . size ( ) ; i + + ) 
 { 
 + Artifact artifact = artifacts . get ( i ) ; 
 Artifact resolved = repo . resolve ( artifact ) ; 
 if ( resolved ! = null ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / fml / relauncher / libraries / ModList . java b / src / main / java / net / minecraftforge / fml / relauncher / libraries / ModList . java 
 index 0791d4d . . 2d12d1b 100644 
 - - - a / src / main / java / net / minecraftforge / fml / relauncher / libraries / ModList . java 
 + + + b / src / main / java / net / minecraftforge / fml / relauncher / libraries / ModList . java 
 @ @ - 50 , 8 + 50 , 7 @ @ public class ModList 
 try 
 { 
 String key = json . getCanonicalFile ( ) . getAbsolutePath ( ) ; 
 - if ( cache . containsKey ( key ) ) 
 - return cache . get ( key ) ; 
 + return cache . computeIfAbsent ( key , k - > new ModList ( json , mcdir ) ) ; 
 } 
 catch ( IOException e ) 
 {

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / relauncher / libraries / Artifact . java b / src / main / java / net / minecraftforge / fml / relauncher / libraries / Artifact . java 
 index 80475b9 . . 2a634bf 100644 
 - - - a / src / main / java / net / minecraftforge / fml / relauncher / libraries / Artifact . java 
 + + + b / src / main / java / net / minecraftforge / fml / relauncher / libraries / Artifact . java 
 @ @ - 123 , 7 + 123 , 7 @ @ public class Artifact implements Comparable < Artifact > 
 if ( folder = = null ) 
 { 
 StringBuilder sb = new StringBuilder ( ) ; 
 - for ( String part : group . split ( " . " ) ) 
 + for ( String part : group . split ( " \ \ . " ) ) 
 sb . append ( part ) . append ( File . separatorChar ) ; 
 sb . append ( artifact ) . append ( File . separatorChar ) ; 
 sb . append ( version ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java b / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java 
 index 3b4f34a . . 783442d 100644 
 - - - a / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java 
 + + + b / src / main / java / net / minecraftforge / fml / relauncher / libraries / LibraryManager . java 
 @ @ - 317 , 14 + 317 , 18 @ @ public class LibraryManager 
 { 
 try 
 { 
 - 	 Artifact artifact = readArtifact ( modlist . getRepository ( ) , meta ) ; 
 + Artifact artifact = readArtifact ( modlist . getRepository ( ) , meta ) ; 
 File target = artifact . getFile ( ) ; 
 if ( target . exists ( ) ) 
 { 
 FMLLog . log . debug ( " Found existing ContainedDep { } ( { } ) from { } extracted to { } , skipping extraction " , dep , artifact . toString ( ) , target . getCanonicalPath ( ) , jar . getName ( ) ) ; 
 if ( ! ENABLE _ AUTO _ MOD _ MOVEMENT ) 
 { 
 - extractPacked ( target , modlist , modDirs ) ; / / If we ' re not building a real list we have to re - build the dep list every run . So search down . 
 + Pair < ? , ? > child = extractPacked ( target , modlist , modDirs ) ; / / If we ' re not building a real list we have to re - build the dep list every run . So search down . 
 + if ( child = = null & & metaEntry ! = null ) / / External meta with no internal name . . . If there is a internal name , we trust that that name is the correct one . 
 + { 
 + modlist . add ( artifact ) ; 
 + } 
 } 
 } 
 else 
 @ @ - 353 , 7 + 357 , 11 @ @ public class LibraryManager 
 File meta _ target = new File ( target . getAbsolutePath ( ) + " . meta " ) ; 
 Files . write ( manifest _ data , meta _ target ) ; 
 } 
 - extractPacked ( target , modlist , modDirs ) ; 
 + Pair < ? , ? > child = extractPacked ( target , modlist , modDirs ) ; 
 + if ( child = = null & & metaEntry ! = null ) / / External meta with no internal name . . . If there is a internal name , we trust that that name is the correct one . 
 + { 
 + modlist . add ( artifact ) ; 
 + } 
 } 
 } 
 catch ( NumberFormatException nfe ) 
 @ @ - 368 , 15 + 376 , 15 @ @ public class LibraryManager 
 } 
 } 
 
 - if ( attrs . containsKey ( MAVEN _ ARTIFACT ) ) 
 + if ( attrs . containsKey ( MAVEN _ ARTIFACT ) ) 
 { 
 - 	 Artifact artifact = readArtifact ( modlist . getRepository ( ) , attrs ) ; 
 - 	 modlist . add ( artifact ) ; 
 - 	 return Pair . of ( artifact , readAll ( jar . getInputStream ( manifest _ entry ) ) ) ; 
 + Artifact artifact = readArtifact ( modlist . getRepository ( ) , attrs ) ; 
 + modlist . add ( artifact ) ; 
 + return Pair . of ( artifact , readAll ( jar . getInputStream ( manifest _ entry ) ) ) ; 
 } 
 return null ; 
 } 
 - 
 + 
 private static Artifact readArtifact ( Repository repo , Attributes meta ) 
 { 
 String timestamp = meta . getValue ( TIMESTAMP ) ;
