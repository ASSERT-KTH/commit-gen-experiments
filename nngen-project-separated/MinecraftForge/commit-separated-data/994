BLEU SCORE: 0.005126350474233546

TEST MSG: DeobfuscationData no longer required at dev time
GENERATED MSG: Harden the security manager and make it less spammy . Clean up a bunch of deprecation warnings from guava .

TEST DIFF (one line): diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java b / fml / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java <nl> index 4698bfe . . 0ac23ed 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java <nl> @ @ - 45 , 6 + 45 , 7 @ @ import com . google . common . collect . Iterables ; <nl> import com . google . common . collect . Maps ; <nl> import com . google . common . collect . Sets ; <nl> import com . google . common . io . CharSource ; <nl> + import com . google . common . io . Files ; <nl> <nl> public class FMLDeobfuscatingRemapper extends Remapper { <nl> public static final FMLDeobfuscatingRemapper INSTANCE = new FMLDeobfuscatingRemapper ( ) ; <nl> @ @ - 113 , 10 + 114 , 22 @ @ public class FMLDeobfuscatingRemapper extends Remapper { <nl> this . classLoader = classLoader ; <nl> try <nl> { <nl> - InputStream classData = getClass ( ) . getResourceAsStream ( deobfFileName ) ; <nl> - LZMAInputSupplier zis = new LZMAInputSupplier ( classData ) ; <nl> - CharSource srgSource = zis . asCharSource ( Charsets . UTF _ 8 ) ; <nl> - List < String > srgList = srgSource . readLines ( ) ; <nl> + List < String > srgList ; <nl> + final String gradleStartProp = System . getProperty ( " net . minecraftforge . gradle . GradleStart . srg . srg - mcp " ) ; <nl> + <nl> + if ( Strings . isNullOrEmpty ( gradleStartProp ) ) <nl> + { <nl> + / / get as a resource <nl> + InputStream classData = getClass ( ) . getResourceAsStream ( deobfFileName ) ; <nl> + LZMAInputSupplier zis = new LZMAInputSupplier ( classData ) ; <nl> + CharSource srgSource = zis . asCharSource ( Charsets . UTF _ 8 ) ; <nl> + srgList = srgSource . readLines ( ) ; <nl> + } <nl> + else <nl> + { <nl> + srgList = Files . readLines ( new File ( gradleStartProp ) , Charsets . UTF _ 8 ) ; <nl> + } <nl> + <nl> rawMethodMaps = Maps . newHashMap ( ) ; <nl> rawFieldMaps = Maps . newHashMap ( ) ; <nl> Builder < String , String > builder = ImmutableBiMap . < String , String > builder ( ) ;
NEAREST DIFF (one line): diff - - git a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java <nl> index 2d6d451 . . a144acc 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java <nl> @ @ - 16 , 7 + 16 , 6 @ @ import java . io . File ; <nl> import java . io . FileInputStream ; <nl> import java . io . IOException ; <nl> import java . io . InputStream ; <nl> - import java . io . InputStreamReader ; <nl> import java . util . Arrays ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> @ @ - 43 , 8 + 42 , 7 @ @ import com . google . common . collect . ImmutableSet ; <nl> import com . google . common . collect . Iterables ; <nl> import com . google . common . collect . Maps ; <nl> import com . google . common . collect . Sets ; <nl> - import com . google . common . io . CharStreams ; <nl> - import com . google . common . io . InputSupplier ; <nl> + import com . google . common . io . CharSource ; <nl> <nl> import cpw . mods . fml . common . patcher . ClassPatchManager ; <nl> import cpw . mods . fml . relauncher . FMLRelaunchLog ; <nl> @ @ - 78 , 8 + 76 , 8 @ @ public class FMLDeobfuscatingRemapper extends Remapper { <nl> { <nl> File mapData = new File ( deobfFileName ) ; <nl> LZMAInputSupplier zis = new LZMAInputSupplier ( new FileInputStream ( mapData ) ) ; <nl> - InputSupplier < InputStreamReader > srgSupplier = CharStreams . newReaderSupplier ( zis , Charsets . UTF _ 8 ) ; <nl> - List < String > srgList = CharStreams . readLines ( srgSupplier ) ; <nl> + CharSource srgSource = zis . asCharSource ( Charsets . UTF _ 8 ) ; <nl> + List < String > srgList = srgSource . readLines ( ) ; <nl> rawMethodMaps = Maps . newHashMap ( ) ; <nl> rawFieldMaps = Maps . newHashMap ( ) ; <nl> Builder < String , String > builder = ImmutableBiMap . < String , String > builder ( ) ; <nl> @ @ - 118 , 8 + 116 , 8 @ @ public class FMLDeobfuscatingRemapper extends Remapper { <nl> { <nl> InputStream classData = getClass ( ) . getResourceAsStream ( deobfFileName ) ; <nl> LZMAInputSupplier zis = new LZMAInputSupplier ( classData ) ; <nl> - InputSupplier < InputStreamReader > srgSupplier = CharStreams . newReaderSupplier ( zis , Charsets . UTF _ 8 ) ; <nl> - List < String > srgList = CharStreams . readLines ( srgSupplier ) ; <nl> + CharSource srgSource = zis . asCharSource ( Charsets . UTF _ 8 ) ; <nl> + List < String > srgList = srgSource . readLines ( ) ; <nl> rawMethodMaps = Maps . newHashMap ( ) ; <nl> rawFieldMaps = Maps . newHashMap ( ) ; <nl> Builder < String , String > builder = ImmutableBiMap . < String , String > builder ( ) ; <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / LZMAInputSupplier . java b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / LZMAInputSupplier . java <nl> index bd22a0a . . 9bc6e39 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / LZMAInputSupplier . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / LZMAInputSupplier . java <nl> @ @ - 17 , 9 + 17 , 9 @ @ import java . io . InputStream ; <nl> <nl> import LZMA . LzmaInputStream ; <nl> <nl> - import com . google . common . io . InputSupplier ; <nl> + import com . google . common . io . ByteSource ; <nl> <nl> - public class LZMAInputSupplier implements InputSupplier < InputStream > { <nl> + public class LZMAInputSupplier extends ByteSource { <nl> private InputStream compressedData ; <nl> <nl> public LZMAInputSupplier ( InputStream compressedData ) <nl> @ @ - 28 , 7 + 28 , 7 @ @ public class LZMAInputSupplier implements InputSupplier < InputStream > { <nl> } <nl> <nl> @ Override <nl> - public InputStream getInput ( ) throws IOException <nl> + public InputStream openStream ( ) throws IOException <nl> { <nl> return new LzmaInputStream ( this . compressedData ) ; <nl> } <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / relauncher / FMLSecurityManager . java b / fml / src / main / java / cpw / mods / fml / relauncher / FMLSecurityManager . java <nl> index 4c7fba0 . . e5f7db3 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / relauncher / FMLSecurityManager . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / relauncher / FMLSecurityManager . java <nl> @ @ - 16 , 9 + 16 , 11 @ @ public class FMLSecurityManager extends SecurityManager { <nl> String permName = perm . getName ( ) ! = null ? perm . getName ( ) : " missing " ; <nl> if ( permName . startsWith ( " exitVM " ) ) <nl> { <nl> - String callingClass = getClassContext ( ) [ 4 ] . getName ( ) ; <nl> - / / FML is allowed to call system exit <nl> - if ( ! callingClass . startsWith ( " cpw . mods . fml . " ) ) <nl> + Class < ? > [ ] classContexts = getClassContext ( ) ; <nl> + String callingClass = classContexts . length > 3 ? classContexts [ 4 ] . getName ( ) : " none " ; <nl> + String callingParent = classContexts . length > 4 ? classContexts [ 5 ] . getName ( ) : " none " ; <nl> + / / FML is allowed to call system exit and the Minecraft applet ( from the quit button ) <nl> + if ( ! ( callingClass . startsWith ( " cpw . mods . fml . " ) | | ( " net . minecraft . client . Minecraft " . equals ( callingClass ) & & " net . minecraft . client . Minecraft " . equals ( callingParent ) ) ) ) <nl> { <nl> throw new ExitTrappedException ( ) ; <nl> }

TEST DIFF:
diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java b / fml / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java 
 index 4698bfe . . 0ac23ed 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java 
 @ @ - 45 , 6 + 45 , 7 @ @ import com . google . common . collect . Iterables ; 
 import com . google . common . collect . Maps ; 
 import com . google . common . collect . Sets ; 
 import com . google . common . io . CharSource ; 
 + import com . google . common . io . Files ; 
 
 public class FMLDeobfuscatingRemapper extends Remapper { 
 public static final FMLDeobfuscatingRemapper INSTANCE = new FMLDeobfuscatingRemapper ( ) ; 
 @ @ - 113 , 10 + 114 , 22 @ @ public class FMLDeobfuscatingRemapper extends Remapper { 
 this . classLoader = classLoader ; 
 try 
 { 
 - InputStream classData = getClass ( ) . getResourceAsStream ( deobfFileName ) ; 
 - LZMAInputSupplier zis = new LZMAInputSupplier ( classData ) ; 
 - CharSource srgSource = zis . asCharSource ( Charsets . UTF _ 8 ) ; 
 - List < String > srgList = srgSource . readLines ( ) ; 
 + List < String > srgList ; 
 + final String gradleStartProp = System . getProperty ( " net . minecraftforge . gradle . GradleStart . srg . srg - mcp " ) ; 
 + 
 + if ( Strings . isNullOrEmpty ( gradleStartProp ) ) 
 + { 
 + / / get as a resource 
 + InputStream classData = getClass ( ) . getResourceAsStream ( deobfFileName ) ; 
 + LZMAInputSupplier zis = new LZMAInputSupplier ( classData ) ; 
 + CharSource srgSource = zis . asCharSource ( Charsets . UTF _ 8 ) ; 
 + srgList = srgSource . readLines ( ) ; 
 + } 
 + else 
 + { 
 + srgList = Files . readLines ( new File ( gradleStartProp ) , Charsets . UTF _ 8 ) ; 
 + } 
 + 
 rawMethodMaps = Maps . newHashMap ( ) ; 
 rawFieldMaps = Maps . newHashMap ( ) ; 
 Builder < String , String > builder = ImmutableBiMap . < String , String > builder ( ) ;

NEAREST DIFF:
diff - - git a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java 
 index 2d6d451 . . a144acc 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / FMLDeobfuscatingRemapper . java 
 @ @ - 16 , 7 + 16 , 6 @ @ import java . io . File ; 
 import java . io . FileInputStream ; 
 import java . io . IOException ; 
 import java . io . InputStream ; 
 - import java . io . InputStreamReader ; 
 import java . util . Arrays ; 
 import java . util . List ; 
 import java . util . Map ; 
 @ @ - 43 , 8 + 42 , 7 @ @ import com . google . common . collect . ImmutableSet ; 
 import com . google . common . collect . Iterables ; 
 import com . google . common . collect . Maps ; 
 import com . google . common . collect . Sets ; 
 - import com . google . common . io . CharStreams ; 
 - import com . google . common . io . InputSupplier ; 
 + import com . google . common . io . CharSource ; 
 
 import cpw . mods . fml . common . patcher . ClassPatchManager ; 
 import cpw . mods . fml . relauncher . FMLRelaunchLog ; 
 @ @ - 78 , 8 + 76 , 8 @ @ public class FMLDeobfuscatingRemapper extends Remapper { 
 { 
 File mapData = new File ( deobfFileName ) ; 
 LZMAInputSupplier zis = new LZMAInputSupplier ( new FileInputStream ( mapData ) ) ; 
 - InputSupplier < InputStreamReader > srgSupplier = CharStreams . newReaderSupplier ( zis , Charsets . UTF _ 8 ) ; 
 - List < String > srgList = CharStreams . readLines ( srgSupplier ) ; 
 + CharSource srgSource = zis . asCharSource ( Charsets . UTF _ 8 ) ; 
 + List < String > srgList = srgSource . readLines ( ) ; 
 rawMethodMaps = Maps . newHashMap ( ) ; 
 rawFieldMaps = Maps . newHashMap ( ) ; 
 Builder < String , String > builder = ImmutableBiMap . < String , String > builder ( ) ; 
 @ @ - 118 , 8 + 116 , 8 @ @ public class FMLDeobfuscatingRemapper extends Remapper { 
 { 
 InputStream classData = getClass ( ) . getResourceAsStream ( deobfFileName ) ; 
 LZMAInputSupplier zis = new LZMAInputSupplier ( classData ) ; 
 - InputSupplier < InputStreamReader > srgSupplier = CharStreams . newReaderSupplier ( zis , Charsets . UTF _ 8 ) ; 
 - List < String > srgList = CharStreams . readLines ( srgSupplier ) ; 
 + CharSource srgSource = zis . asCharSource ( Charsets . UTF _ 8 ) ; 
 + List < String > srgList = srgSource . readLines ( ) ; 
 rawMethodMaps = Maps . newHashMap ( ) ; 
 rawFieldMaps = Maps . newHashMap ( ) ; 
 Builder < String , String > builder = ImmutableBiMap . < String , String > builder ( ) ; 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / LZMAInputSupplier . java b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / LZMAInputSupplier . java 
 index bd22a0a . . 9bc6e39 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / LZMAInputSupplier . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / deobf / LZMAInputSupplier . java 
 @ @ - 17 , 9 + 17 , 9 @ @ import java . io . InputStream ; 
 
 import LZMA . LzmaInputStream ; 
 
 - import com . google . common . io . InputSupplier ; 
 + import com . google . common . io . ByteSource ; 
 
 - public class LZMAInputSupplier implements InputSupplier < InputStream > { 
 + public class LZMAInputSupplier extends ByteSource { 
 private InputStream compressedData ; 
 
 public LZMAInputSupplier ( InputStream compressedData ) 
 @ @ - 28 , 7 + 28 , 7 @ @ public class LZMAInputSupplier implements InputSupplier < InputStream > { 
 } 
 
 @ Override 
 - public InputStream getInput ( ) throws IOException 
 + public InputStream openStream ( ) throws IOException 
 { 
 return new LzmaInputStream ( this . compressedData ) ; 
 } 
 diff - - git a / fml / src / main / java / cpw / mods / fml / relauncher / FMLSecurityManager . java b / fml / src / main / java / cpw / mods / fml / relauncher / FMLSecurityManager . java 
 index 4c7fba0 . . e5f7db3 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / relauncher / FMLSecurityManager . java 
 + + + b / fml / src / main / java / cpw / mods / fml / relauncher / FMLSecurityManager . java 
 @ @ - 16 , 9 + 16 , 11 @ @ public class FMLSecurityManager extends SecurityManager { 
 String permName = perm . getName ( ) ! = null ? perm . getName ( ) : " missing " ; 
 if ( permName . startsWith ( " exitVM " ) ) 
 { 
 - String callingClass = getClassContext ( ) [ 4 ] . getName ( ) ; 
 - / / FML is allowed to call system exit 
 - if ( ! callingClass . startsWith ( " cpw . mods . fml . " ) ) 
 + Class < ? > [ ] classContexts = getClassContext ( ) ; 
 + String callingClass = classContexts . length > 3 ? classContexts [ 4 ] . getName ( ) : " none " ; 
 + String callingParent = classContexts . length > 4 ? classContexts [ 5 ] . getName ( ) : " none " ; 
 + / / FML is allowed to call system exit and the Minecraft applet ( from the quit button ) 
 + if ( ! ( callingClass . startsWith ( " cpw . mods . fml . " ) | | ( " net . minecraft . client . Minecraft " . equals ( callingClass ) & & " net . minecraft . client . Minecraft " . equals ( callingParent ) ) ) ) 
 { 
 throw new ExitTrappedException ( ) ; 
 }
