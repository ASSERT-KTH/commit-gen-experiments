BLEU SCORE: 0.007869270985473822

TEST MSG: Make async chunk loading a config option
GENERATED MSG: [ 1 . 12 ] Remove patches adding chunkExists ( ) function , switch to vanilla code

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> index 9bce5f4 . . bafb37b 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java <nl> + + + . . / src - work / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java <nl> - @ @ - 49 , 9 + 49 , 30 @ @ <nl> + @ @ - 49 , 9 + 49 , 31 @ @ <nl> this . field _ 193416 _ e = p _ i46673 _ 2 _ ; <nl> } <nl> <nl> @ @ - 26 , 12 + 26 , 13 @ @ <nl> + return null ; <nl> + } <nl> + <nl> + + @ Nullable <nl> + public Object [ ] loadChunk _ _ Async ( World p _ 75815 _ 1 _ , int p _ 75815 _ 2 _ , int p _ 75815 _ 3 _ ) throws IOException <nl> + { <nl> ChunkPos chunkpos = new ChunkPos ( p _ 75815 _ 2 _ , p _ 75815 _ 3 _ ) ; <nl> NBTTagCompound nbttagcompound = this . field _ 75828 _ a . get ( chunkpos ) ; <nl> <nl> - @ @ - 67 , 7 + 88 , 7 @ @ <nl> + @ @ - 67 , 7 + 89 , 7 @ @ <nl> nbttagcompound = this . field _ 193416 _ e . func _ 188257 _ a ( FixTypes . CHUNK , CompressedStreamTools . func _ 74794 _ a ( datainputstream ) ) ; <nl> } <nl> <nl> @ @ - 40 , 7 + 41 , 7 @ @ <nl> } <nl> <nl> public boolean func _ 191063 _ a ( int p _ 191063 _ 1 _ , int p _ 191063 _ 2 _ ) <nl> - @ @ - 80 , 6 + 101 , 12 @ @ <nl> + @ @ - 80 , 6 + 102 , 13 @ @ <nl> @ Nullable <nl> protected Chunk func _ 75822 _ a ( World p _ 75822 _ 1 _ , int p _ 75822 _ 2 _ , int p _ 75822 _ 3 _ , NBTTagCompound p _ 75822 _ 4 _ ) <nl> { <nl> @ @ - 48 , 12 + 49 , 13 @ @ <nl> + return data ! = null ? ( Chunk ) data [ 0 ] : null ; <nl> + } <nl> + <nl> + + @ Nullable <nl> + protected Object [ ] checkedReadChunkFromNBT _ _ Async ( World p _ 75822 _ 1 _ , int p _ 75822 _ 2 _ , int p _ 75822 _ 3 _ , NBTTagCompound p _ 75822 _ 4 _ ) <nl> + { <nl> if ( ! p _ 75822 _ 4 _ . func _ 150297 _ b ( " Level " , 10 ) ) <nl> { <nl> field _ 151505 _ a . error ( " Chunk file at { } , { } is missing level data , skipping " , Integer . valueOf ( p _ 75822 _ 2 _ ) , Integer . valueOf ( p _ 75822 _ 3 _ ) ) ; <nl> - @ @ - 103 , 10 + 130 , 29 @ @ <nl> + @ @ - 103 , 10 + 132 , 29 @ @ <nl> field _ 151505 _ a . error ( " Chunk file at { } , { } is in the wrong location ; relocating . ( Expected { } , { } , got { } , { } ) " , Integer . valueOf ( p _ 75822 _ 2 _ ) , Integer . valueOf ( p _ 75822 _ 3 _ ) , Integer . valueOf ( p _ 75822 _ 2 _ ) , Integer . valueOf ( p _ 75822 _ 3 _ ) , Integer . valueOf ( chunk . field _ 76635 _ g ) , Integer . valueOf ( chunk . field _ 76647 _ h ) ) ; <nl> nbttagcompound . func _ 74768 _ a ( " xPos " , p _ 75822 _ 2 _ ) ; <nl> nbttagcompound . func _ 74768 _ a ( " zPos " , p _ 75822 _ 3 _ ) ; <nl> @ @ - 84 , 7 + 86 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 121 , 7 + 167 , 10 @ @ <nl> + @ @ - 121 , 7 + 169 , 10 @ @ <nl> NBTTagCompound nbttagcompound1 = new NBTTagCompound ( ) ; <nl> nbttagcompound . func _ 74782 _ a ( " Level " , nbttagcompound1 ) ; <nl> nbttagcompound . func _ 74768 _ a ( " DataVersion " , 1343 ) ; <nl> @ @ - 95 , 7 + 97 , 7 @ @ <nl> this . func _ 75824 _ a ( p _ 75816 _ 2 _ . func _ 76632 _ l ( ) , nbttagcompound ) ; <nl> } <nl> catch ( Exception exception ) <nl> - @ @ - 305 , 11 + 354 , 19 @ @ <nl> + @ @ - 305 , 11 + 356 , 19 @ @ <nl> { <nl> NBTTagCompound nbttagcompound2 = new NBTTagCompound ( ) ; <nl> <nl> @ @ - 115 , 7 + 117 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 318 , 8 + 375 , 16 @ @ <nl> + @ @ - 318 , 8 + 377 , 16 @ @ <nl> <nl> for ( TileEntity tileentity : p _ 75820 _ 1 _ . func _ 177434 _ r ( ) . values ( ) ) <nl> { <nl> @ @ - 132 , 7 + 134 , 7 @ @ <nl> } <nl> <nl> p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileEntities " , nbttaglist2 ) ; <nl> - @ @ - 345 , 6 + 410 , 18 @ @ <nl> + @ @ - 345 , 6 + 412 , 18 @ @ <nl> <nl> p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileTicks " , nbttaglist3 ) ; <nl> } <nl> @ @ - 151 , 7 + 153 , 7 @ @ <nl> } <nl> <nl> private Chunk func _ 75823 _ a ( World p _ 75823 _ 1 _ , NBTTagCompound p _ 75823 _ 2 _ ) <nl> - @ @ - 388 , 6 + 465 , 16 @ @ <nl> + @ @ - 388 , 6 + 467 , 16 @ @ <nl> chunk . func _ 76616 _ a ( p _ 75823 _ 2 _ . func _ 74770 _ j ( " Biomes " ) ) ; <nl> } <nl> <nl> @ @ - 168 , 7 + 170 , 7 @ @ <nl> NBTTagList nbttaglist1 = p _ 75823 _ 2 _ . func _ 150295 _ c ( " Entities " , 10 ) ; <nl> <nl> for ( int j1 = 0 ; j1 < nbttaglist1 . func _ 74745 _ c ( ) ; + + j1 ) <nl> - @ @ - 431 , 8 + 518 , 6 @ @ <nl> + @ @ - 431 , 8 + 520 , 6 @ @ <nl> p _ 75823 _ 1 _ . func _ 180497 _ b ( new BlockPos ( nbttagcompound3 . func _ 74762 _ e ( " x " ) , nbttagcompound3 . func _ 74762 _ e ( " y " ) , nbttagcompound3 . func _ 74762 _ e ( " z " ) ) , block , nbttagcompound3 . func _ 74762 _ e ( " t " ) , nbttagcompound3 . func _ 74762 _ e ( " p " ) ) ; <nl> } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch b / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch <nl> index 67dfb4c . . e20daa4 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch <nl> @ @ - 4 , 7 + 4 , 7 @ @ <nl> public final IChunkLoader field _ 73247 _ e ; <nl> public final Long2ObjectMap < Chunk > field _ 73244 _ f = new Long2ObjectOpenHashMap < Chunk > ( 8192 ) ; <nl> public final WorldServer field _ 73251 _ h ; <nl> - + private Set < Long > loadingChunks = com . google . common . collect . Sets . newHashSet ( ) ; <nl> + + private final Set < Long > loadingChunks = com . google . common . collect . Sets . newHashSet ( ) ; <nl> <nl> public ChunkProviderServer ( WorldServer p _ i46838 _ 1 _ , IChunkLoader p _ i46838 _ 2 _ , IChunkGenerator p _ i46838 _ 3 _ ) <nl> { <nl> @ @ - 17 , 7 + 17 , 7 @ @ <nl> + } <nl> <nl> + @ Nullable <nl> - + public Chunk loadChunk ( int p _ 186028 _ 1 _ , int p _ 186028 _ 2 _ , Runnable runnable ) <nl> + + public Chunk loadChunk ( int p _ 186028 _ 1 _ , int p _ 186028 _ 2 _ , @ Nullable Runnable runnable ) <nl> + { <nl> + Chunk chunk = this . func _ 186026 _ b ( p _ 186028 _ 1 _ , p _ 186028 _ 2 _ ) ; <nl> if ( chunk = = null ) <nl> @ @ - 44 , 7 + 44 , 7 @ @ <nl> + else <nl> + { <nl> + net . minecraft . world . chunk . storage . AnvilChunkLoader loader = ( net . minecraft . world . chunk . storage . AnvilChunkLoader ) this . field _ 73247 _ e ; <nl> - + if ( runnable = = null ) <nl> + + if ( runnable = = null | | ! net . minecraftforge . common . ForgeChunkManager . asyncChunkLoading ) <nl> + chunk = net . minecraftforge . common . chunkio . ChunkIOExecutor . syncChunkLoad ( this . field _ 73251 _ h , loader , this , p _ 186028 _ 1 _ , p _ 186028 _ 2 _ ) ; <nl> + else if ( loader . func _ 191063 _ a ( p _ 186028 _ 1 _ , p _ 186028 _ 2 _ ) ) <nl> + { <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeChunkManager . java b / src / main / java / net / minecraftforge / common / ForgeChunkManager . java <nl> index 274ac7f . . d87e705 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeChunkManager . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeChunkManager . java <nl> @ @ - 113 , 6 + 113 , 8 @ @ public class ForgeChunkManager <nl> private static int playerTicketLength ; <nl> private static int dormantChunkCacheSize ; <nl> <nl> + public static boolean asyncChunkLoading ; <nl> + <nl> public static final List < String > MOD _ PROP _ ORDER = new ArrayList < String > ( 2 ) ; <nl> <nl> private static Set < String > warnedMods = Sets . newHashSet ( ) ; <nl> @ @ - 1101 , 6 + 1103 , 13 @ @ public class ForgeChunkManager <nl> propOrder . add ( " dormantChunkCacheSize " ) ; <nl> FMLLog . log . info ( " Configured a dormant chunk cache size of { } " , temp . getInt ( 0 ) ) ; <nl> <nl> + temp = config . get ( " defaults " , " asyncChunkLoading " , true ) ; <nl> + temp . setComment ( " Load chunks asynchronously for players , reducing load on the server thread . \ n " + <nl> + " Can be disabled to help troubleshoot chunk loading issues . " ) ; <nl> + temp . setLanguageKey ( " forge . configgui . asyncChunkLoading " ) ; <nl> + asyncChunkLoading = temp . getBoolean ( true ) ; <nl> + propOrder . add ( " asyncChunkLoading " ) ; <nl> + <nl> config . setCategoryPropertyOrder ( " defaults " , propOrder ) ; <nl> <nl> config . addCustomCategoryComment ( ForgeVersion . MOD _ ID , " Sample mod specific control section . \ n " + <nl> diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang <nl> index 38e3b60 . . ba6b6c6 100644 <nl> - - - a / src / main / resources / assets / forge / lang / en _ US . lang <nl> + + + b / src / main / resources / assets / forge / lang / en _ US . lang <nl> @ @ - 84 , 6 + 84 , 8 @ @ forge . configgui . alwaysSetupTerrainOffThread . tooltip = Enable forge to queue all ch <nl> <nl> forge . configgui . modID . tooltip = The mod ID that you want to define override settings for . <nl> forge . configgui . modID = Mod ID <nl> + forge . configgui . asyncChunkLoading = Async Chunk Loading <nl> + forge . configgui . asyncChunkLoading . tooltip = Load chunks asynchronously for players , reducing load on the server thread . Can be disabled to help troubleshoot chunk loading issues . <nl> forge . configgui . dormantChunkCacheSize . tooltip = Unloaded chunks can first be kept in a dormant cache for quicker loading times . Specify the size ( in chunks ) of that cache here . <nl> forge . configgui . dormantChunkCacheSize = Dormant Chunk Cache Size <nl> forge . configgui . enableModOverrides . tooltip = Enable this setting to allow custom per - mod settings to be defined .
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> index 81db8d5 . . 0bf7e3d 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> @ @ - 1 , 28 + 1 , 15 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java <nl> + + + . . / src - work / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java <nl> - @ @ - 49 , 9 + 49 , 43 @ @ <nl> + @ @ - 49 , 9 + 49 , 30 @ @ <nl> this . field _ 193416 _ e = p _ i46673 _ 2 _ ; <nl> } <nl> <nl> + + @ Deprecated / / TODO : remove ( 1 . 13 ) <nl> + public boolean chunkExists ( World world , int x , int z ) <nl> + { <nl> - + ChunkPos chunkcoordintpair = new ChunkPos ( x , z ) ; <nl> - + <nl> - + if ( this . field _ 193415 _ c . contains ( chunkcoordintpair ) ) <nl> - + { <nl> - + for ( ChunkPos pendingChunkCoord : this . field _ 75828 _ a . keySet ( ) ) <nl> - + { <nl> - + if ( pendingChunkCoord . equals ( chunkcoordintpair ) ) <nl> - + { <nl> - + return true ; <nl> - + } <nl> - + } <nl> - + } <nl> - + <nl> - + return RegionFileCache . func _ 76550 _ a ( this . field _ 75825 _ d , x , z ) . chunkExists ( x & 31 , z & 31 ) ; <nl> + + return func _ 191063 _ a ( x , z ) ; <nl> + } <nl> + <nl> - + <nl> @ Nullable <nl> public Chunk func _ 75815 _ a ( World p _ 75815 _ 1 _ , int p _ 75815 _ 2 _ , int p _ 75815 _ 3 _ ) throws IOException <nl> { <nl> @ @ - 44 , 7 + 31 , 7 @ @ <nl> ChunkPos chunkpos = new ChunkPos ( p _ 75815 _ 2 _ , p _ 75815 _ 3 _ ) ; <nl> NBTTagCompound nbttagcompound = this . field _ 75828 _ a . get ( chunkpos ) ; <nl> <nl> - @ @ - 67 , 7 + 101 , 7 @ @ <nl> + @ @ - 67 , 7 + 88 , 7 @ @ <nl> nbttagcompound = this . field _ 193416 _ e . func _ 188257 _ a ( FixTypes . CHUNK , CompressedStreamTools . func _ 74794 _ a ( datainputstream ) ) ; <nl> } <nl> <nl> @ @ - 53 , 7 + 40 , 7 @ @ <nl> } <nl> <nl> public boolean func _ 191063 _ a ( int p _ 191063 _ 1 _ , int p _ 191063 _ 2 _ ) <nl> - @ @ - 80 , 6 + 114 , 12 @ @ <nl> + @ @ - 80 , 6 + 101 , 12 @ @ <nl> @ Nullable <nl> protected Chunk func _ 75822 _ a ( World p _ 75822 _ 1 _ , int p _ 75822 _ 2 _ , int p _ 75822 _ 3 _ , NBTTagCompound p _ 75822 _ 4 _ ) <nl> { <nl> @ @ - 66 , 7 + 53 , 7 @ @ <nl> if ( ! p _ 75822 _ 4 _ . func _ 150297 _ b ( " Level " , 10 ) ) <nl> { <nl> field _ 151505 _ a . error ( " Chunk file at { } , { } is missing level data , skipping " , Integer . valueOf ( p _ 75822 _ 2 _ ) , Integer . valueOf ( p _ 75822 _ 3 _ ) ) ; <nl> - @ @ - 103 , 10 + 143 , 29 @ @ <nl> + @ @ - 103 , 10 + 130 , 29 @ @ <nl> field _ 151505 _ a . error ( " Chunk file at { } , { } is in the wrong location ; relocating . ( Expected { } , { } , got { } , { } ) " , Integer . valueOf ( p _ 75822 _ 2 _ ) , Integer . valueOf ( p _ 75822 _ 3 _ ) , Integer . valueOf ( p _ 75822 _ 2 _ ) , Integer . valueOf ( p _ 75822 _ 3 _ ) , Integer . valueOf ( chunk . field _ 76635 _ g ) , Integer . valueOf ( chunk . field _ 76647 _ h ) ) ; <nl> nbttagcompound . func _ 74768 _ a ( " xPos " , p _ 75822 _ 2 _ ) ; <nl> nbttagcompound . func _ 74768 _ a ( " zPos " , p _ 75822 _ 3 _ ) ; <nl> @ @ - 97 , 7 + 84 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 121 , 7 + 180 , 9 @ @ <nl> + @ @ - 121 , 7 + 167 , 9 @ @ <nl> NBTTagCompound nbttagcompound1 = new NBTTagCompound ( ) ; <nl> nbttagcompound . func _ 74782 _ a ( " Level " , nbttagcompound1 ) ; <nl> nbttagcompound . func _ 74768 _ a ( " DataVersion " , 1241 ) ; <nl> @ @ - 107 , 7 + 94 , 7 @ @ <nl> this . func _ 75824 _ a ( p _ 75816 _ 2 _ . func _ 76632 _ l ( ) , nbttagcompound ) ; <nl> } <nl> catch ( Exception exception ) <nl> - @ @ - 305 , 11 + 366 , 19 @ @ <nl> + @ @ - 305 , 11 + 353 , 19 @ @ <nl> { <nl> NBTTagCompound nbttagcompound2 = new NBTTagCompound ( ) ; <nl> <nl> @ @ - 127 , 7 + 114 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 318 , 8 + 387 , 16 @ @ <nl> + @ @ - 318 , 8 + 374 , 16 @ @ <nl> <nl> for ( TileEntity tileentity : p _ 75820 _ 1 _ . func _ 177434 _ r ( ) . values ( ) ) <nl> { <nl> @ @ - 144 , 7 + 131 , 7 @ @ <nl> } <nl> <nl> p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileEntities " , nbttaglist2 ) ; <nl> - @ @ - 388 , 6 + 465 , 12 @ @ <nl> + @ @ - 388 , 6 + 452 , 12 @ @ <nl> chunk . func _ 76616 _ a ( p _ 75823 _ 2 _ . func _ 74770 _ j ( " Biomes " ) ) ; <nl> } <nl> <nl> @ @ - 157 , 7 + 144 , 7 @ @ <nl> NBTTagList nbttaglist1 = p _ 75823 _ 2 _ . func _ 150295 _ c ( " Entities " , 10 ) ; <nl> <nl> for ( int j1 = 0 ; j1 < nbttaglist1 . func _ 74745 _ c ( ) ; + + j1 ) <nl> - @ @ - 431 , 8 + 514 , 6 @ @ <nl> + @ @ - 431 , 8 + 501 , 6 @ @ <nl> p _ 75823 _ 1 _ . func _ 180497 _ b ( new BlockPos ( nbttagcompound3 . func _ 74762 _ e ( " x " ) , nbttagcompound3 . func _ 74762 _ e ( " y " ) , nbttagcompound3 . func _ 74762 _ e ( " z " ) ) , block , nbttagcompound3 . func _ 74762 _ e ( " t " ) , nbttagcompound3 . func _ 74762 _ e ( " p " ) ) ; <nl> } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / RegionFile . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / RegionFile . java . patch <nl> index 2e1978b . . 59c2aaa 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / storage / RegionFile . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / storage / RegionFile . java . patch <nl> @ @ - 1 , 40 + 1 , 13 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / world / chunk / storage / RegionFile . java <nl> + + + . . / src - work / minecraft / net / minecraft / world / chunk / storage / RegionFile . java <nl> - @ @ - 95 , 6 + 95 , 39 @ @ <nl> + @ @ - 95 , 6 + 95 , 12 @ @ <nl> } <nl> } <nl> <nl> - + / / This is a copy ( sort of ) of the method below it , make sure they stay in sync <nl> + + @ Deprecated / / TODO : remove ( 1 . 13 ) <nl> + public synchronized boolean chunkExists ( int x , int z ) <nl> + { <nl> - + if ( this . func _ 76705 _ d ( x , z ) ) return false ; <nl> - + <nl> - + try <nl> - + { <nl> - + int offset = this . func _ 76707 _ e ( x , z ) ; <nl> - + <nl> - + if ( offset = = 0 ) return false ; <nl> - + <nl> - + int sectorNumber = offset > > 8 ; <nl> - + int numSectors = offset & 255 ; <nl> - + <nl> - + if ( sectorNumber + numSectors > this . field _ 76714 _ f . size ( ) ) return false ; <nl> - + <nl> - + this . field _ 76719 _ c . seek ( ( long ) ( sectorNumber * 4096 ) ) ; <nl> - + int length = this . field _ 76719 _ c . readInt ( ) ; <nl> - + <nl> - + if ( length > 4096 * numSectors | | length < = 0 ) return false ; <nl> - + <nl> - + byte version = this . field _ 76719 _ c . readByte ( ) ; <nl> - + <nl> - + if ( version = = 1 | | version = = 2 ) return true ; <nl> - + } <nl> - + catch ( IOException ioexception ) <nl> - + { <nl> - + return false ; <nl> - + } <nl> - + <nl> - + return false ; <nl> + + return func _ 76709 _ c ( x , z ) ; <nl> + } <nl> + <nl> @ Nullable <nl> diff - - git a / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch b / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch <nl> index bbb9529 . . 7834557 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch <nl> @ @ - 46 , 7 + 46 , 7 @ @ <nl> + net . minecraft . world . chunk . storage . AnvilChunkLoader loader = ( net . minecraft . world . chunk . storage . AnvilChunkLoader ) this . field _ 73247 _ e ; <nl> + if ( runnable = = null ) <nl> + chunk = net . minecraftforge . common . chunkio . ChunkIOExecutor . syncChunkLoad ( this . field _ 73251 _ h , loader , this , p _ 186028 _ 1 _ , p _ 186028 _ 2 _ ) ; <nl> - + else if ( loader . chunkExists ( this . field _ 73251 _ h , p _ 186028 _ 1 _ , p _ 186028 _ 2 _ ) ) <nl> + + else if ( loader . func _ 191063 _ a ( p _ 186028 _ 1 _ , p _ 186028 _ 2 _ ) ) <nl> + { <nl> + / / We can only use the async queue for already generated chunks <nl> + net . minecraftforge . common . chunkio . ChunkIOExecutor . queueChunkLoad ( this . field _ 73251 _ h , loader , this , p _ 186028 _ 1 _ , p _ 186028 _ 2 _ , runnable ) ;

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 index 9bce5f4 . . bafb37b 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java 
 + + + . . / src - work / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java 
 - @ @ - 49 , 9 + 49 , 30 @ @ 
 + @ @ - 49 , 9 + 49 , 31 @ @ 
 this . field _ 193416 _ e = p _ i46673 _ 2 _ ; 
 } 
 
 @ @ - 26 , 12 + 26 , 13 @ @ 
 + return null ; 
 + } 
 + 
 + + @ Nullable 
 + public Object [ ] loadChunk _ _ Async ( World p _ 75815 _ 1 _ , int p _ 75815 _ 2 _ , int p _ 75815 _ 3 _ ) throws IOException 
 + { 
 ChunkPos chunkpos = new ChunkPos ( p _ 75815 _ 2 _ , p _ 75815 _ 3 _ ) ; 
 NBTTagCompound nbttagcompound = this . field _ 75828 _ a . get ( chunkpos ) ; 
 
 - @ @ - 67 , 7 + 88 , 7 @ @ 
 + @ @ - 67 , 7 + 89 , 7 @ @ 
 nbttagcompound = this . field _ 193416 _ e . func _ 188257 _ a ( FixTypes . CHUNK , CompressedStreamTools . func _ 74794 _ a ( datainputstream ) ) ; 
 } 
 
 @ @ - 40 , 7 + 41 , 7 @ @ 
 } 
 
 public boolean func _ 191063 _ a ( int p _ 191063 _ 1 _ , int p _ 191063 _ 2 _ ) 
 - @ @ - 80 , 6 + 101 , 12 @ @ 
 + @ @ - 80 , 6 + 102 , 13 @ @ 
 @ Nullable 
 protected Chunk func _ 75822 _ a ( World p _ 75822 _ 1 _ , int p _ 75822 _ 2 _ , int p _ 75822 _ 3 _ , NBTTagCompound p _ 75822 _ 4 _ ) 
 { 
 @ @ - 48 , 12 + 49 , 13 @ @ 
 + return data ! = null ? ( Chunk ) data [ 0 ] : null ; 
 + } 
 + 
 + + @ Nullable 
 + protected Object [ ] checkedReadChunkFromNBT _ _ Async ( World p _ 75822 _ 1 _ , int p _ 75822 _ 2 _ , int p _ 75822 _ 3 _ , NBTTagCompound p _ 75822 _ 4 _ ) 
 + { 
 if ( ! p _ 75822 _ 4 _ . func _ 150297 _ b ( " Level " , 10 ) ) 
 { 
 field _ 151505 _ a . error ( " Chunk file at { } , { } is missing level data , skipping " , Integer . valueOf ( p _ 75822 _ 2 _ ) , Integer . valueOf ( p _ 75822 _ 3 _ ) ) ; 
 - @ @ - 103 , 10 + 130 , 29 @ @ 
 + @ @ - 103 , 10 + 132 , 29 @ @ 
 field _ 151505 _ a . error ( " Chunk file at { } , { } is in the wrong location ; relocating . ( Expected { } , { } , got { } , { } ) " , Integer . valueOf ( p _ 75822 _ 2 _ ) , Integer . valueOf ( p _ 75822 _ 3 _ ) , Integer . valueOf ( p _ 75822 _ 2 _ ) , Integer . valueOf ( p _ 75822 _ 3 _ ) , Integer . valueOf ( chunk . field _ 76635 _ g ) , Integer . valueOf ( chunk . field _ 76647 _ h ) ) ; 
 nbttagcompound . func _ 74768 _ a ( " xPos " , p _ 75822 _ 2 _ ) ; 
 nbttagcompound . func _ 74768 _ a ( " zPos " , p _ 75822 _ 3 _ ) ; 
 @ @ - 84 , 7 + 86 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 121 , 7 + 167 , 10 @ @ 
 + @ @ - 121 , 7 + 169 , 10 @ @ 
 NBTTagCompound nbttagcompound1 = new NBTTagCompound ( ) ; 
 nbttagcompound . func _ 74782 _ a ( " Level " , nbttagcompound1 ) ; 
 nbttagcompound . func _ 74768 _ a ( " DataVersion " , 1343 ) ; 
 @ @ - 95 , 7 + 97 , 7 @ @ 
 this . func _ 75824 _ a ( p _ 75816 _ 2 _ . func _ 76632 _ l ( ) , nbttagcompound ) ; 
 } 
 catch ( Exception exception ) 
 - @ @ - 305 , 11 + 354 , 19 @ @ 
 + @ @ - 305 , 11 + 356 , 19 @ @ 
 { 
 NBTTagCompound nbttagcompound2 = new NBTTagCompound ( ) ; 
 
 @ @ - 115 , 7 + 117 , 7 @ @ 
 } 
 } 
 
 - @ @ - 318 , 8 + 375 , 16 @ @ 
 + @ @ - 318 , 8 + 377 , 16 @ @ 
 
 for ( TileEntity tileentity : p _ 75820 _ 1 _ . func _ 177434 _ r ( ) . values ( ) ) 
 { 
 @ @ - 132 , 7 + 134 , 7 @ @ 
 } 
 
 p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileEntities " , nbttaglist2 ) ; 
 - @ @ - 345 , 6 + 410 , 18 @ @ 
 + @ @ - 345 , 6 + 412 , 18 @ @ 
 
 p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileTicks " , nbttaglist3 ) ; 
 } 
 @ @ - 151 , 7 + 153 , 7 @ @ 
 } 
 
 private Chunk func _ 75823 _ a ( World p _ 75823 _ 1 _ , NBTTagCompound p _ 75823 _ 2 _ ) 
 - @ @ - 388 , 6 + 465 , 16 @ @ 
 + @ @ - 388 , 6 + 467 , 16 @ @ 
 chunk . func _ 76616 _ a ( p _ 75823 _ 2 _ . func _ 74770 _ j ( " Biomes " ) ) ; 
 } 
 
 @ @ - 168 , 7 + 170 , 7 @ @ 
 NBTTagList nbttaglist1 = p _ 75823 _ 2 _ . func _ 150295 _ c ( " Entities " , 10 ) ; 
 
 for ( int j1 = 0 ; j1 < nbttaglist1 . func _ 74745 _ c ( ) ; + + j1 ) 
 - @ @ - 431 , 8 + 518 , 6 @ @ 
 + @ @ - 431 , 8 + 520 , 6 @ @ 
 p _ 75823 _ 1 _ . func _ 180497 _ b ( new BlockPos ( nbttagcompound3 . func _ 74762 _ e ( " x " ) , nbttagcompound3 . func _ 74762 _ e ( " y " ) , nbttagcompound3 . func _ 74762 _ e ( " z " ) ) , block , nbttagcompound3 . func _ 74762 _ e ( " t " ) , nbttagcompound3 . func _ 74762 _ e ( " p " ) ) ; 
 } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch b / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch 
 index 67dfb4c . . e20daa4 100644 
 - - - a / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch 
 @ @ - 4 , 7 + 4 , 7 @ @ 
 public final IChunkLoader field _ 73247 _ e ; 
 public final Long2ObjectMap < Chunk > field _ 73244 _ f = new Long2ObjectOpenHashMap < Chunk > ( 8192 ) ; 
 public final WorldServer field _ 73251 _ h ; 
 - + private Set < Long > loadingChunks = com . google . common . collect . Sets . newHashSet ( ) ; 
 + + private final Set < Long > loadingChunks = com . google . common . collect . Sets . newHashSet ( ) ; 
 
 public ChunkProviderServer ( WorldServer p _ i46838 _ 1 _ , IChunkLoader p _ i46838 _ 2 _ , IChunkGenerator p _ i46838 _ 3 _ ) 
 { 
 @ @ - 17 , 7 + 17 , 7 @ @ 
 + } 
 
 + @ Nullable 
 - + public Chunk loadChunk ( int p _ 186028 _ 1 _ , int p _ 186028 _ 2 _ , Runnable runnable ) 
 + + public Chunk loadChunk ( int p _ 186028 _ 1 _ , int p _ 186028 _ 2 _ , @ Nullable Runnable runnable ) 
 + { 
 + Chunk chunk = this . func _ 186026 _ b ( p _ 186028 _ 1 _ , p _ 186028 _ 2 _ ) ; 
 if ( chunk = = null ) 
 @ @ - 44 , 7 + 44 , 7 @ @ 
 + else 
 + { 
 + net . minecraft . world . chunk . storage . AnvilChunkLoader loader = ( net . minecraft . world . chunk . storage . AnvilChunkLoader ) this . field _ 73247 _ e ; 
 - + if ( runnable = = null ) 
 + + if ( runnable = = null | | ! net . minecraftforge . common . ForgeChunkManager . asyncChunkLoading ) 
 + chunk = net . minecraftforge . common . chunkio . ChunkIOExecutor . syncChunkLoad ( this . field _ 73251 _ h , loader , this , p _ 186028 _ 1 _ , p _ 186028 _ 2 _ ) ; 
 + else if ( loader . func _ 191063 _ a ( p _ 186028 _ 1 _ , p _ 186028 _ 2 _ ) ) 
 + { 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeChunkManager . java b / src / main / java / net / minecraftforge / common / ForgeChunkManager . java 
 index 274ac7f . . d87e705 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeChunkManager . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeChunkManager . java 
 @ @ - 113 , 6 + 113 , 8 @ @ public class ForgeChunkManager 
 private static int playerTicketLength ; 
 private static int dormantChunkCacheSize ; 
 
 + public static boolean asyncChunkLoading ; 
 + 
 public static final List < String > MOD _ PROP _ ORDER = new ArrayList < String > ( 2 ) ; 
 
 private static Set < String > warnedMods = Sets . newHashSet ( ) ; 
 @ @ - 1101 , 6 + 1103 , 13 @ @ public class ForgeChunkManager 
 propOrder . add ( " dormantChunkCacheSize " ) ; 
 FMLLog . log . info ( " Configured a dormant chunk cache size of { } " , temp . getInt ( 0 ) ) ; 
 
 + temp = config . get ( " defaults " , " asyncChunkLoading " , true ) ; 
 + temp . setComment ( " Load chunks asynchronously for players , reducing load on the server thread . \ n " + 
 + " Can be disabled to help troubleshoot chunk loading issues . " ) ; 
 + temp . setLanguageKey ( " forge . configgui . asyncChunkLoading " ) ; 
 + asyncChunkLoading = temp . getBoolean ( true ) ; 
 + propOrder . add ( " asyncChunkLoading " ) ; 
 + 
 config . setCategoryPropertyOrder ( " defaults " , propOrder ) ; 
 
 config . addCustomCategoryComment ( ForgeVersion . MOD _ ID , " Sample mod specific control section . \ n " + 
 diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang 
 index 38e3b60 . . ba6b6c6 100644 
 - - - a / src / main / resources / assets / forge / lang / en _ US . lang 
 + + + b / src / main / resources / assets / forge / lang / en _ US . lang 
 @ @ - 84 , 6 + 84 , 8 @ @ forge . configgui . alwaysSetupTerrainOffThread . tooltip = Enable forge to queue all ch 
 
 forge . configgui . modID . tooltip = The mod ID that you want to define override settings for . 
 forge . configgui . modID = Mod ID 
 + forge . configgui . asyncChunkLoading = Async Chunk Loading 
 + forge . configgui . asyncChunkLoading . tooltip = Load chunks asynchronously for players , reducing load on the server thread . Can be disabled to help troubleshoot chunk loading issues . 
 forge . configgui . dormantChunkCacheSize . tooltip = Unloaded chunks can first be kept in a dormant cache for quicker loading times . Specify the size ( in chunks ) of that cache here . 
 forge . configgui . dormantChunkCacheSize = Dormant Chunk Cache Size 
 forge . configgui . enableModOverrides . tooltip = Enable this setting to allow custom per - mod settings to be defined .

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 index 81db8d5 . . 0bf7e3d 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 @ @ - 1 , 28 + 1 , 15 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java 
 + + + . . / src - work / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java 
 - @ @ - 49 , 9 + 49 , 43 @ @ 
 + @ @ - 49 , 9 + 49 , 30 @ @ 
 this . field _ 193416 _ e = p _ i46673 _ 2 _ ; 
 } 
 
 + + @ Deprecated / / TODO : remove ( 1 . 13 ) 
 + public boolean chunkExists ( World world , int x , int z ) 
 + { 
 - + ChunkPos chunkcoordintpair = new ChunkPos ( x , z ) ; 
 - + 
 - + if ( this . field _ 193415 _ c . contains ( chunkcoordintpair ) ) 
 - + { 
 - + for ( ChunkPos pendingChunkCoord : this . field _ 75828 _ a . keySet ( ) ) 
 - + { 
 - + if ( pendingChunkCoord . equals ( chunkcoordintpair ) ) 
 - + { 
 - + return true ; 
 - + } 
 - + } 
 - + } 
 - + 
 - + return RegionFileCache . func _ 76550 _ a ( this . field _ 75825 _ d , x , z ) . chunkExists ( x & 31 , z & 31 ) ; 
 + + return func _ 191063 _ a ( x , z ) ; 
 + } 
 + 
 - + 
 @ Nullable 
 public Chunk func _ 75815 _ a ( World p _ 75815 _ 1 _ , int p _ 75815 _ 2 _ , int p _ 75815 _ 3 _ ) throws IOException 
 { 
 @ @ - 44 , 7 + 31 , 7 @ @ 
 ChunkPos chunkpos = new ChunkPos ( p _ 75815 _ 2 _ , p _ 75815 _ 3 _ ) ; 
 NBTTagCompound nbttagcompound = this . field _ 75828 _ a . get ( chunkpos ) ; 
 
 - @ @ - 67 , 7 + 101 , 7 @ @ 
 + @ @ - 67 , 7 + 88 , 7 @ @ 
 nbttagcompound = this . field _ 193416 _ e . func _ 188257 _ a ( FixTypes . CHUNK , CompressedStreamTools . func _ 74794 _ a ( datainputstream ) ) ; 
 } 
 
 @ @ - 53 , 7 + 40 , 7 @ @ 
 } 
 
 public boolean func _ 191063 _ a ( int p _ 191063 _ 1 _ , int p _ 191063 _ 2 _ ) 
 - @ @ - 80 , 6 + 114 , 12 @ @ 
 + @ @ - 80 , 6 + 101 , 12 @ @ 
 @ Nullable 
 protected Chunk func _ 75822 _ a ( World p _ 75822 _ 1 _ , int p _ 75822 _ 2 _ , int p _ 75822 _ 3 _ , NBTTagCompound p _ 75822 _ 4 _ ) 
 { 
 @ @ - 66 , 7 + 53 , 7 @ @ 
 if ( ! p _ 75822 _ 4 _ . func _ 150297 _ b ( " Level " , 10 ) ) 
 { 
 field _ 151505 _ a . error ( " Chunk file at { } , { } is missing level data , skipping " , Integer . valueOf ( p _ 75822 _ 2 _ ) , Integer . valueOf ( p _ 75822 _ 3 _ ) ) ; 
 - @ @ - 103 , 10 + 143 , 29 @ @ 
 + @ @ - 103 , 10 + 130 , 29 @ @ 
 field _ 151505 _ a . error ( " Chunk file at { } , { } is in the wrong location ; relocating . ( Expected { } , { } , got { } , { } ) " , Integer . valueOf ( p _ 75822 _ 2 _ ) , Integer . valueOf ( p _ 75822 _ 3 _ ) , Integer . valueOf ( p _ 75822 _ 2 _ ) , Integer . valueOf ( p _ 75822 _ 3 _ ) , Integer . valueOf ( chunk . field _ 76635 _ g ) , Integer . valueOf ( chunk . field _ 76647 _ h ) ) ; 
 nbttagcompound . func _ 74768 _ a ( " xPos " , p _ 75822 _ 2 _ ) ; 
 nbttagcompound . func _ 74768 _ a ( " zPos " , p _ 75822 _ 3 _ ) ; 
 @ @ - 97 , 7 + 84 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 121 , 7 + 180 , 9 @ @ 
 + @ @ - 121 , 7 + 167 , 9 @ @ 
 NBTTagCompound nbttagcompound1 = new NBTTagCompound ( ) ; 
 nbttagcompound . func _ 74782 _ a ( " Level " , nbttagcompound1 ) ; 
 nbttagcompound . func _ 74768 _ a ( " DataVersion " , 1241 ) ; 
 @ @ - 107 , 7 + 94 , 7 @ @ 
 this . func _ 75824 _ a ( p _ 75816 _ 2 _ . func _ 76632 _ l ( ) , nbttagcompound ) ; 
 } 
 catch ( Exception exception ) 
 - @ @ - 305 , 11 + 366 , 19 @ @ 
 + @ @ - 305 , 11 + 353 , 19 @ @ 
 { 
 NBTTagCompound nbttagcompound2 = new NBTTagCompound ( ) ; 
 
 @ @ - 127 , 7 + 114 , 7 @ @ 
 } 
 } 
 
 - @ @ - 318 , 8 + 387 , 16 @ @ 
 + @ @ - 318 , 8 + 374 , 16 @ @ 
 
 for ( TileEntity tileentity : p _ 75820 _ 1 _ . func _ 177434 _ r ( ) . values ( ) ) 
 { 
 @ @ - 144 , 7 + 131 , 7 @ @ 
 } 
 
 p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileEntities " , nbttaglist2 ) ; 
 - @ @ - 388 , 6 + 465 , 12 @ @ 
 + @ @ - 388 , 6 + 452 , 12 @ @ 
 chunk . func _ 76616 _ a ( p _ 75823 _ 2 _ . func _ 74770 _ j ( " Biomes " ) ) ; 
 } 
 
 @ @ - 157 , 7 + 144 , 7 @ @ 
 NBTTagList nbttaglist1 = p _ 75823 _ 2 _ . func _ 150295 _ c ( " Entities " , 10 ) ; 
 
 for ( int j1 = 0 ; j1 < nbttaglist1 . func _ 74745 _ c ( ) ; + + j1 ) 
 - @ @ - 431 , 8 + 514 , 6 @ @ 
 + @ @ - 431 , 8 + 501 , 6 @ @ 
 p _ 75823 _ 1 _ . func _ 180497 _ b ( new BlockPos ( nbttagcompound3 . func _ 74762 _ e ( " x " ) , nbttagcompound3 . func _ 74762 _ e ( " y " ) , nbttagcompound3 . func _ 74762 _ e ( " z " ) ) , block , nbttagcompound3 . func _ 74762 _ e ( " t " ) , nbttagcompound3 . func _ 74762 _ e ( " p " ) ) ; 
 } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / RegionFile . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / RegionFile . java . patch 
 index 2e1978b . . 59c2aaa 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / storage / RegionFile . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / storage / RegionFile . java . patch 
 @ @ - 1 , 40 + 1 , 13 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / world / chunk / storage / RegionFile . java 
 + + + . . / src - work / minecraft / net / minecraft / world / chunk / storage / RegionFile . java 
 - @ @ - 95 , 6 + 95 , 39 @ @ 
 + @ @ - 95 , 6 + 95 , 12 @ @ 
 } 
 } 
 
 - + / / This is a copy ( sort of ) of the method below it , make sure they stay in sync 
 + + @ Deprecated / / TODO : remove ( 1 . 13 ) 
 + public synchronized boolean chunkExists ( int x , int z ) 
 + { 
 - + if ( this . func _ 76705 _ d ( x , z ) ) return false ; 
 - + 
 - + try 
 - + { 
 - + int offset = this . func _ 76707 _ e ( x , z ) ; 
 - + 
 - + if ( offset = = 0 ) return false ; 
 - + 
 - + int sectorNumber = offset > > 8 ; 
 - + int numSectors = offset & 255 ; 
 - + 
 - + if ( sectorNumber + numSectors > this . field _ 76714 _ f . size ( ) ) return false ; 
 - + 
 - + this . field _ 76719 _ c . seek ( ( long ) ( sectorNumber * 4096 ) ) ; 
 - + int length = this . field _ 76719 _ c . readInt ( ) ; 
 - + 
 - + if ( length > 4096 * numSectors | | length < = 0 ) return false ; 
 - + 
 - + byte version = this . field _ 76719 _ c . readByte ( ) ; 
 - + 
 - + if ( version = = 1 | | version = = 2 ) return true ; 
 - + } 
 - + catch ( IOException ioexception ) 
 - + { 
 - + return false ; 
 - + } 
 - + 
 - + return false ; 
 + + return func _ 76709 _ c ( x , z ) ; 
 + } 
 + 
 @ Nullable 
 diff - - git a / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch b / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch 
 index bbb9529 . . 7834557 100644 
 - - - a / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / gen / ChunkProviderServer . java . patch 
 @ @ - 46 , 7 + 46 , 7 @ @ 
 + net . minecraft . world . chunk . storage . AnvilChunkLoader loader = ( net . minecraft . world . chunk . storage . AnvilChunkLoader ) this . field _ 73247 _ e ; 
 + if ( runnable = = null ) 
 + chunk = net . minecraftforge . common . chunkio . ChunkIOExecutor . syncChunkLoad ( this . field _ 73251 _ h , loader , this , p _ 186028 _ 1 _ , p _ 186028 _ 2 _ ) ; 
 - + else if ( loader . chunkExists ( this . field _ 73251 _ h , p _ 186028 _ 1 _ , p _ 186028 _ 2 _ ) ) 
 + + else if ( loader . func _ 191063 _ a ( p _ 186028 _ 1 _ , p _ 186028 _ 2 _ ) ) 
 + { 
 + / / We can only use the async queue for already generated chunks 
 + net . minecraftforge . common . chunkio . ChunkIOExecutor . queueChunkLoad ( this . field _ 73251 _ h , loader , this , p _ 186028 _ 1 _ , p _ 186028 _ 2 _ , runnable ) ;
