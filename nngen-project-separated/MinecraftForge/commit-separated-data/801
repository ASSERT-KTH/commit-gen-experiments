BLEU SCORE: 0.037052472057637634

TEST MSG: Move the patch into the fml override handler , for less patch
GENERATED MSG: Fix race condition between server ticks and the netlogin code handshaking for FML

TEST DIFF (one line): diff - - git a / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch b / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch <nl> index 6af352b . . 2facd3b 100644 <nl> - - - a / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch <nl> + + + b / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch <nl> @ @ - 1 , 14 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / network / NetHandlerPlayServer . java <nl> + + + . . / src - work / minecraft / net / minecraft / network / NetHandlerPlayServer . java <nl> - @ @ - 159 , 6 + 159 , 7 @ @ <nl> - <nl> - public void update ( ) <nl> - { <nl> - + if ( this . playerEntity . playerNetServerHandler ! = this ) return ; / / FORGE : sometimes the netqueue will tick while login is occuring , causing an NPE . We shouldn ' t tick until the connection is complete <nl> - this . func _ 184342 _ d ( ) ; <nl> - this . playerEntity . onUpdateEntity ( ) ; <nl> - this . playerEntity . setPositionAndRotation ( this . field _ 184349 _ l , this . field _ 184350 _ m , this . field _ 184351 _ n , this . playerEntity . rotationYaw , this . playerEntity . rotationPitch ) ; <nl> - @ @ - 612 , 7 + 613 , 10 @ @ <nl> + @ @ - 612 , 7 + 612 , 10 @ @ <nl> double d2 = this . playerEntity . posZ - ( ( double ) blockpos . getZ ( ) + 0 . 5D ) ; <nl> double d3 = d0 * d0 + d1 * d1 + d2 * d2 ; <nl> <nl> @ @ - 20 , 7 + 12 , 7 @ @ <nl> { <nl> return ; <nl> } <nl> - @ @ - 670 , 7 + 674 , 9 @ @ <nl> + @ @ - 670 , 7 + 673 , 9 @ @ <nl> <nl> if ( blockpos . getY ( ) < this . serverController . getBuildLimit ( ) - 1 | | enumfacing ! = EnumFacing . UP & & blockpos . getY ( ) < this . serverController . getBuildLimit ( ) ) <nl> { <nl> @ @ - 31 , 7 + 23 , 7 @ @ <nl> { <nl> this . playerEntity . theItemInWorldManager . func _ 187251 _ a ( this . playerEntity , worldserver , itemstack , enumhand , blockpos , enumfacing , p _ 184337 _ 1 _ . func _ 187026 _ d ( ) , p _ 184337 _ 1 _ . func _ 187025 _ e ( ) , p _ 184337 _ 1 _ . func _ 187020 _ f ( ) ) ; <nl> } <nl> - @ @ - 689 , 6 + 695 , 7 @ @ <nl> + @ @ - 689 , 6 + 694 , 7 @ @ <nl> if ( itemstack ! = null & & itemstack . stackSize = = 0 ) <nl> { <nl> this . playerEntity . func _ 184611 _ a ( enumhand , ( ItemStack ) null ) ; <nl> @ @ - 39 , 7 + 31 , 7 @ @ <nl> itemstack = null ; <nl> } <nl> } <nl> - @ @ - 703 , 12 + 710 , 14 @ @ <nl> + @ @ - 703 , 12 + 709 , 14 @ @ <nl> <nl> if ( itemstack ! = null ) <nl> { <nl> @ @ - 54 , 7 + 46 , 7 @ @ <nl> itemstack = null ; <nl> } <nl> } <nl> - @ @ - 888 , 7 + 897 , 9 @ @ <nl> + @ @ - 888 , 7 + 896 , 9 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 65 , 7 + 57 , 7 @ @ <nl> this . serverController . func _ 184103 _ al ( ) . sendChatMsgImpl ( itextcomponent , false ) ; <nl> } <nl> <nl> - @ @ - 1057 , 7 + 1068 , 7 @ @ <nl> + @ @ - 1057 , 7 + 1067 , 7 @ @ <nl> return ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java b / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java <nl> index e99d597 . . 86c135f 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java <nl> @ @ - 189 , 6 + 189 , 8 @ @ public class NetworkDispatcher extends SimpleChannelInboundHandler < Packet > imple <nl> { <nl> completeServerSideConnection ( ConnectionType . MODDED ) ; <nl> } <nl> + / / FORGE : sometimes the netqueue will tick while login is occuring , causing an NPE . We shouldn ' t tick until the connection is complete <nl> + if ( this . playerEntity . playerNetServerHandler ! = this ) return ; <nl> super . update ( ) ; <nl> } <nl> } ;
NEAREST DIFF (one line): diff - - git a / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch b / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch <nl> index 2facd3b . . 6af352b 100644 <nl> - - - a / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch <nl> + + + b / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch <nl> @ @ - 1 , 6 + 1 , 14 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / network / NetHandlerPlayServer . java <nl> + + + . . / src - work / minecraft / net / minecraft / network / NetHandlerPlayServer . java <nl> - @ @ - 612 , 7 + 612 , 10 @ @ <nl> + @ @ - 159 , 6 + 159 , 7 @ @ <nl> + <nl> + public void update ( ) <nl> + { <nl> + + if ( this . playerEntity . playerNetServerHandler ! = this ) return ; / / FORGE : sometimes the netqueue will tick while login is occuring , causing an NPE . We shouldn ' t tick until the connection is complete <nl> + this . func _ 184342 _ d ( ) ; <nl> + this . playerEntity . onUpdateEntity ( ) ; <nl> + this . playerEntity . setPositionAndRotation ( this . field _ 184349 _ l , this . field _ 184350 _ m , this . field _ 184351 _ n , this . playerEntity . rotationYaw , this . playerEntity . rotationPitch ) ; <nl> + @ @ - 612 , 7 + 613 , 10 @ @ <nl> double d2 = this . playerEntity . posZ - ( ( double ) blockpos . getZ ( ) + 0 . 5D ) ; <nl> double d3 = d0 * d0 + d1 * d1 + d2 * d2 ; <nl> <nl> @ @ - 12 , 7 + 20 , 7 @ @ <nl> { <nl> return ; <nl> } <nl> - @ @ - 670 , 7 + 673 , 9 @ @ <nl> + @ @ - 670 , 7 + 674 , 9 @ @ <nl> <nl> if ( blockpos . getY ( ) < this . serverController . getBuildLimit ( ) - 1 | | enumfacing ! = EnumFacing . UP & & blockpos . getY ( ) < this . serverController . getBuildLimit ( ) ) <nl> { <nl> @ @ - 23 , 7 + 31 , 7 @ @ <nl> { <nl> this . playerEntity . theItemInWorldManager . func _ 187251 _ a ( this . playerEntity , worldserver , itemstack , enumhand , blockpos , enumfacing , p _ 184337 _ 1 _ . func _ 187026 _ d ( ) , p _ 184337 _ 1 _ . func _ 187025 _ e ( ) , p _ 184337 _ 1 _ . func _ 187020 _ f ( ) ) ; <nl> } <nl> - @ @ - 689 , 6 + 694 , 7 @ @ <nl> + @ @ - 689 , 6 + 695 , 7 @ @ <nl> if ( itemstack ! = null & & itemstack . stackSize = = 0 ) <nl> { <nl> this . playerEntity . func _ 184611 _ a ( enumhand , ( ItemStack ) null ) ; <nl> @ @ - 31 , 7 + 39 , 7 @ @ <nl> itemstack = null ; <nl> } <nl> } <nl> - @ @ - 703 , 12 + 709 , 14 @ @ <nl> + @ @ - 703 , 12 + 710 , 14 @ @ <nl> <nl> if ( itemstack ! = null ) <nl> { <nl> @ @ - 46 , 7 + 54 , 7 @ @ <nl> itemstack = null ; <nl> } <nl> } <nl> - @ @ - 888 , 7 + 896 , 9 @ @ <nl> + @ @ - 888 , 7 + 897 , 9 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 57 , 7 + 65 , 7 @ @ <nl> this . serverController . func _ 184103 _ al ( ) . sendChatMsgImpl ( itextcomponent , false ) ; <nl> } <nl> <nl> - @ @ - 1057 , 7 + 1067 , 7 @ @ <nl> + @ @ - 1057 , 7 + 1068 , 7 @ @ <nl> return ; <nl> } <nl>

TEST DIFF:
diff - - git a / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch b / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch 
 index 6af352b . . 2facd3b 100644 
 - - - a / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch 
 + + + b / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch 
 @ @ - 1 , 14 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / network / NetHandlerPlayServer . java 
 + + + . . / src - work / minecraft / net / minecraft / network / NetHandlerPlayServer . java 
 - @ @ - 159 , 6 + 159 , 7 @ @ 
 - 
 - public void update ( ) 
 - { 
 - + if ( this . playerEntity . playerNetServerHandler ! = this ) return ; / / FORGE : sometimes the netqueue will tick while login is occuring , causing an NPE . We shouldn ' t tick until the connection is complete 
 - this . func _ 184342 _ d ( ) ; 
 - this . playerEntity . onUpdateEntity ( ) ; 
 - this . playerEntity . setPositionAndRotation ( this . field _ 184349 _ l , this . field _ 184350 _ m , this . field _ 184351 _ n , this . playerEntity . rotationYaw , this . playerEntity . rotationPitch ) ; 
 - @ @ - 612 , 7 + 613 , 10 @ @ 
 + @ @ - 612 , 7 + 612 , 10 @ @ 
 double d2 = this . playerEntity . posZ - ( ( double ) blockpos . getZ ( ) + 0 . 5D ) ; 
 double d3 = d0 * d0 + d1 * d1 + d2 * d2 ; 
 
 @ @ - 20 , 7 + 12 , 7 @ @ 
 { 
 return ; 
 } 
 - @ @ - 670 , 7 + 674 , 9 @ @ 
 + @ @ - 670 , 7 + 673 , 9 @ @ 
 
 if ( blockpos . getY ( ) < this . serverController . getBuildLimit ( ) - 1 | | enumfacing ! = EnumFacing . UP & & blockpos . getY ( ) < this . serverController . getBuildLimit ( ) ) 
 { 
 @ @ - 31 , 7 + 23 , 7 @ @ 
 { 
 this . playerEntity . theItemInWorldManager . func _ 187251 _ a ( this . playerEntity , worldserver , itemstack , enumhand , blockpos , enumfacing , p _ 184337 _ 1 _ . func _ 187026 _ d ( ) , p _ 184337 _ 1 _ . func _ 187025 _ e ( ) , p _ 184337 _ 1 _ . func _ 187020 _ f ( ) ) ; 
 } 
 - @ @ - 689 , 6 + 695 , 7 @ @ 
 + @ @ - 689 , 6 + 694 , 7 @ @ 
 if ( itemstack ! = null & & itemstack . stackSize = = 0 ) 
 { 
 this . playerEntity . func _ 184611 _ a ( enumhand , ( ItemStack ) null ) ; 
 @ @ - 39 , 7 + 31 , 7 @ @ 
 itemstack = null ; 
 } 
 } 
 - @ @ - 703 , 12 + 710 , 14 @ @ 
 + @ @ - 703 , 12 + 709 , 14 @ @ 
 
 if ( itemstack ! = null ) 
 { 
 @ @ - 54 , 7 + 46 , 7 @ @ 
 itemstack = null ; 
 } 
 } 
 - @ @ - 888 , 7 + 897 , 9 @ @ 
 + @ @ - 888 , 7 + 896 , 9 @ @ 
 } 
 else 
 { 
 @ @ - 65 , 7 + 57 , 7 @ @ 
 this . serverController . func _ 184103 _ al ( ) . sendChatMsgImpl ( itextcomponent , false ) ; 
 } 
 
 - @ @ - 1057 , 7 + 1068 , 7 @ @ 
 + @ @ - 1057 , 7 + 1067 , 7 @ @ 
 return ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java b / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java 
 index e99d597 . . 86c135f 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java 
 @ @ - 189 , 6 + 189 , 8 @ @ public class NetworkDispatcher extends SimpleChannelInboundHandler < Packet > imple 
 { 
 completeServerSideConnection ( ConnectionType . MODDED ) ; 
 } 
 + / / FORGE : sometimes the netqueue will tick while login is occuring , causing an NPE . We shouldn ' t tick until the connection is complete 
 + if ( this . playerEntity . playerNetServerHandler ! = this ) return ; 
 super . update ( ) ; 
 } 
 } ;

NEAREST DIFF:
diff - - git a / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch b / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch 
 index 2facd3b . . 6af352b 100644 
 - - - a / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch 
 + + + b / patches . mcp / minecraft / net / minecraft / network / NetHandlerPlayServer . java . patch 
 @ @ - 1 , 6 + 1 , 14 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / network / NetHandlerPlayServer . java 
 + + + . . / src - work / minecraft / net / minecraft / network / NetHandlerPlayServer . java 
 - @ @ - 612 , 7 + 612 , 10 @ @ 
 + @ @ - 159 , 6 + 159 , 7 @ @ 
 + 
 + public void update ( ) 
 + { 
 + + if ( this . playerEntity . playerNetServerHandler ! = this ) return ; / / FORGE : sometimes the netqueue will tick while login is occuring , causing an NPE . We shouldn ' t tick until the connection is complete 
 + this . func _ 184342 _ d ( ) ; 
 + this . playerEntity . onUpdateEntity ( ) ; 
 + this . playerEntity . setPositionAndRotation ( this . field _ 184349 _ l , this . field _ 184350 _ m , this . field _ 184351 _ n , this . playerEntity . rotationYaw , this . playerEntity . rotationPitch ) ; 
 + @ @ - 612 , 7 + 613 , 10 @ @ 
 double d2 = this . playerEntity . posZ - ( ( double ) blockpos . getZ ( ) + 0 . 5D ) ; 
 double d3 = d0 * d0 + d1 * d1 + d2 * d2 ; 
 
 @ @ - 12 , 7 + 20 , 7 @ @ 
 { 
 return ; 
 } 
 - @ @ - 670 , 7 + 673 , 9 @ @ 
 + @ @ - 670 , 7 + 674 , 9 @ @ 
 
 if ( blockpos . getY ( ) < this . serverController . getBuildLimit ( ) - 1 | | enumfacing ! = EnumFacing . UP & & blockpos . getY ( ) < this . serverController . getBuildLimit ( ) ) 
 { 
 @ @ - 23 , 7 + 31 , 7 @ @ 
 { 
 this . playerEntity . theItemInWorldManager . func _ 187251 _ a ( this . playerEntity , worldserver , itemstack , enumhand , blockpos , enumfacing , p _ 184337 _ 1 _ . func _ 187026 _ d ( ) , p _ 184337 _ 1 _ . func _ 187025 _ e ( ) , p _ 184337 _ 1 _ . func _ 187020 _ f ( ) ) ; 
 } 
 - @ @ - 689 , 6 + 694 , 7 @ @ 
 + @ @ - 689 , 6 + 695 , 7 @ @ 
 if ( itemstack ! = null & & itemstack . stackSize = = 0 ) 
 { 
 this . playerEntity . func _ 184611 _ a ( enumhand , ( ItemStack ) null ) ; 
 @ @ - 31 , 7 + 39 , 7 @ @ 
 itemstack = null ; 
 } 
 } 
 - @ @ - 703 , 12 + 709 , 14 @ @ 
 + @ @ - 703 , 12 + 710 , 14 @ @ 
 
 if ( itemstack ! = null ) 
 { 
 @ @ - 46 , 7 + 54 , 7 @ @ 
 itemstack = null ; 
 } 
 } 
 - @ @ - 888 , 7 + 896 , 9 @ @ 
 + @ @ - 888 , 7 + 897 , 9 @ @ 
 } 
 else 
 { 
 @ @ - 57 , 7 + 65 , 7 @ @ 
 this . serverController . func _ 184103 _ al ( ) . sendChatMsgImpl ( itextcomponent , false ) ; 
 } 
 
 - @ @ - 1057 , 7 + 1067 , 7 @ @ 
 + @ @ - 1057 , 7 + 1068 , 7 @ @ 
 return ; 
 } 

