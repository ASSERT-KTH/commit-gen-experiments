BLEU SCORE: 0.016932492841722675

TEST MSG: Fix changelog classifier , and prevent jenkins from running concurrent builds .
GENERATED MSG: Step 3 : The Rebirth

TEST DIFF (one line): diff - - git a / Jenkinsfile b / Jenkinsfile <nl> index a070d06 . . 886cfaf 100644 <nl> - - - a / Jenkinsfile <nl> + + + b / Jenkinsfile <nl> @ @ - 1 , 6 + 1 , 9 @ @ <nl> @ Library ( ' forge - shared - library ' ) _ <nl> <nl> pipeline { <nl> + options { <nl> + disableConcurrentBuilds ( ) <nl> + } <nl> agent { <nl> docker { <nl> image ' gradlewrapper : latest ' <nl> @ @ - 19 , 11 + 22 , 7 @ @ pipeline { <nl> } <nl> stage ( ' setup ' ) { <nl> steps { <nl> - cache ( maxCacheSize : 250 / * MB * / , caches : [ <nl> - [ $ class : ' ArbitraryFileCache ' , excludes : ' ' , includes : ' output . txt ' , path : ' $ { WORKSPACE } / projects / forge / build / extractRangeMap / ' ] / / Cache the rangemap to help speed up builds <nl> - ] ) { <nl> - sh ' . / gradlew $ { GRADLE _ ARGS } - - refresh - dependencies - - continue setup ' <nl> - } <nl> + sh ' . / gradlew $ { GRADLE _ ARGS } - - refresh - dependencies - - continue setup ' <nl> script { <nl> env . MYVERSION = sh ( returnStdout : true , script : ' . / gradlew : forge : properties - q | grep " version : " | awk \ ' { print $ 2 } \ ' ' ) . trim ( ) <nl> } <nl> diff - - git a / build . gradle b / build . gradle <nl> index 5e9f884 . . 6ade675 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 242 , 15 + 242 , 9 @ @ project ( ' : forge ' ) { <nl> rootProject . file ( ' LICENSE . txt ' ) <nl> ] <nl> <nl> - def jenkinsChangelog = rootProject . file ( ' build / changelog . txt ' ) <nl> - def changelog = file ( " build / libs / $ { project . name } - $ { project . version } - changelog . txt " ) <nl> - if ( jenkinsChangelog . exists ( ) ) { <nl> - if ( ! changelog . parentFile . exists ( ) ) <nl> - changelog . parentFile . mkdirs ( ) <nl> - java . nio . file . Files . copy ( jenkinsChangelog . toPath ( ) , changelog . toPath ( ) , java . nio . file . StandardCopyOption . REPLACE _ EXISTING ) <nl> + def changelog = rootProject . file ( ' build / changelog . txt ' ) <nl> + if ( changelog . exists ( ) ) <nl> extraTxts + = changelog <nl> - println extraTxts <nl> - } <nl> <nl> task downloadCrowdin ( ) { <nl> ext { <nl> @ @ - 749 , 8 + 743 , 11 @ @ project ( ' : forge ' ) { <nl> publications { <nl> mavenJava ( MavenPublication ) { <nl> artifact universalJar <nl> - if ( changelog . exists ( ) ) <nl> - artifact changelog <nl> + if ( changelog . exists ( ) ) { <nl> + artifact ( changelog ) { <nl> + classifier = ' changelog ' <nl> + } <nl> + } <nl> artifact installerJar <nl> / / TODO : installer - win <nl> artifact makeMdk
NEAREST DIFF (one line): diff - - git a / fml / . gitattributes b / fml / . gitattributes <nl> index 809a906 . . 758843d 100644 <nl> - - - a / fml / . gitattributes <nl> + + + b / fml / . gitattributes <nl> @ @ - 1 , 9 + 1 , 13 @ @ <nl> * text eol = lf <nl> * . bat text eol = crlf <nl> * . patch text eol = lf <nl> + * . java text eol = lf <nl> + * . gradle text eol = crlf <nl> * . png binary <nl> * . exe binary <nl> * . dll binary <nl> + * . jar binary <nl> + * . lzma binary <nl> * . zip binary <nl> * . pyd binary <nl> * . cfg text eol = lf <nl> diff - - git a / fml / . gitignore b / fml / . gitignore <nl> index 27935ea . . a09824b 100644 <nl> - - - a / fml / . gitignore <nl> + + + b / fml / . gitignore <nl> @ @ - 1 , 20 + 1 , 15 @ @ <nl> + # eclipse <nl> / bin <nl> - / minecraft _ server <nl> - / mods <nl> - / fmlbuild . properties <nl> - / fmlversion . properties <nl> - / difflist . txt <nl> - / target <nl> - fmlbranding . properties <nl> - / fernflower . zip <nl> - / commands . py . bck <nl> - / mcp * . zip <nl> - / mcp <nl> + / . settings <nl> + / . classpath <nl> + <nl> + # idea <nl> + / . idea <nl> + * . iml <nl> + <nl> + # gradle <nl> + / build <nl> + / . gradle <nl> + <nl> + # occupational hazards <nl> / eclipse <nl> - / deobfuscation _ data * . zip <nl> - / binpatch <nl> - / mcp _ data / <nl> - / map _ client . txt <nl> - / * . lzma <nl> - * * / * . lzma <nl> - / installer _ base . jar <nl> diff - - git a / fml / build . gradle b / fml / build . gradle <nl> new file mode 100644 <nl> index 0000000 . . e9448bd <nl> - - - / dev / null <nl> + + + b / fml / build . gradle <nl> @ @ - 0 , 0 + 1 , 100 @ @ <nl> + buildscript { <nl> + repositories { <nl> + mavenCentral ( ) <nl> + maven { <nl> + name = " forge " <nl> + url = " http : / / files . minecraftforge . net / maven " <nl> + } <nl> + } <nl> + dependencies { <nl> + classpath ' net . minecraftforge . gradle : ForgeGradle : 1 . 0 - SNAPSHOT ' <nl> + } <nl> + } <nl> + <nl> + import static net . minecraftforge . gradle . dev . FmlDevPlugin . * <nl> + <nl> + apply plugin : ' maven ' <nl> + apply plugin : ' fmldev ' <nl> + <nl> + repositories { <nl> + flatDir { <nl> + name " fileRepo " <nl> + dirs " repo " <nl> + } <nl> + } <nl> + <nl> + minecraft { <nl> + version = ' 1 . 6 . 4 ' <nl> + fmlDir = projectDir . getAbsolutePath ( ) ; <nl> + mainClass = ' cpw . mods . fml . relauncher . ServerLaunchWrapper ' <nl> + installerVersion = " 1 . 4 " <nl> + } <nl> + <nl> + group = ' cpw . mods ' <nl> + version = getVersionFromGit ( project ) <nl> + <nl> + jenkins { <nl> + job = ' fml ' <nl> + } <nl> + <nl> + uploadArchives { <nl> + repositories { <nl> + if ( project . hasProperty ( " filesmaven " ) ) { <nl> + logger . info ( ' Publishing to files server ' ) <nl> + <nl> + mavenDeployer { <nl> + configuration = configurations . deployerJars <nl> + <nl> + repository ( url : project . filesmaven . url ) { <nl> + authentication ( userName : project . filesmaven . username , privateKey : project . filesmaven . key ) <nl> + } <nl> + <nl> + pom { <nl> + groupId = project . group <nl> + version = project . version <nl> + artifactId = project . archivesBaseName <nl> + project { <nl> + name project . archivesBaseName <nl> + packaging ' jar ' <nl> + description ' ForgeModLoader ' <nl> + url ' https : / / github . com / MinecraftForge / FML ' <nl> + <nl> + scm { <nl> + url ' https : / / github . com / MinecraftForge / FML ' <nl> + connection ' scm : git : git : / / github . com / MinecraftForge / FML . git ' <nl> + developerConnection ' scm : git : git @ github . com : MinecraftForge / FML . git ' <nl> + } <nl> + <nl> + issueManagement { <nl> + system ' github ' <nl> + url ' https : / / github . com / MinecraftForge / FML / issues ' <nl> + } <nl> + <nl> + licenses { <nl> + license { <nl> + name ' GNU Lesser Public License ( LGPL ) , Version 3 ' <nl> + url ' http : / / www . gnu . org / licenses / lgpl - 3 . 0 . txt ' <nl> + distribution ' repo ' <nl> + } <nl> + } <nl> + <nl> + developers { <nl> + developer { <nl> + id ' LexManos ' <nl> + name ' Lex Manos ' <nl> + roles { role ' developer ' } <nl> + } <nl> + } <nl> + developers { <nl> + developer { <nl> + id ' cpw ' <nl> + name ' Christian Weeks ' <nl> + roles { role ' developer ' } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / fml / eclipse - workspace - dev . zip b / fml / eclipse - workspace - dev . zip <nl> index 3443e18 . . a3dd79e 100644 <nl> Binary files a / fml / eclipse - workspace - dev . zip and b / fml / eclipse - workspace - dev . zip differ <nl> diff - - git a / fml / settings . gradle b / fml / settings . gradle <nl> new file mode 100644 <nl> index 0000000 . . bcecb1a <nl> - - - / dev / null <nl> + + + b / fml / settings . gradle <nl> @ @ - 0 , 0 + 1 @ @ <nl> + rootProject . name = ' fml ' <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / Jenkinsfile b / Jenkinsfile 
 index a070d06 . . 886cfaf 100644 
 - - - a / Jenkinsfile 
 + + + b / Jenkinsfile 
 @ @ - 1 , 6 + 1 , 9 @ @ 
 @ Library ( ' forge - shared - library ' ) _ 
 
 pipeline { 
 + options { 
 + disableConcurrentBuilds ( ) 
 + } 
 agent { 
 docker { 
 image ' gradlewrapper : latest ' 
 @ @ - 19 , 11 + 22 , 7 @ @ pipeline { 
 } 
 stage ( ' setup ' ) { 
 steps { 
 - cache ( maxCacheSize : 250 / * MB * / , caches : [ 
 - [ $ class : ' ArbitraryFileCache ' , excludes : ' ' , includes : ' output . txt ' , path : ' $ { WORKSPACE } / projects / forge / build / extractRangeMap / ' ] / / Cache the rangemap to help speed up builds 
 - ] ) { 
 - sh ' . / gradlew $ { GRADLE _ ARGS } - - refresh - dependencies - - continue setup ' 
 - } 
 + sh ' . / gradlew $ { GRADLE _ ARGS } - - refresh - dependencies - - continue setup ' 
 script { 
 env . MYVERSION = sh ( returnStdout : true , script : ' . / gradlew : forge : properties - q | grep " version : " | awk \ ' { print $ 2 } \ ' ' ) . trim ( ) 
 } 
 diff - - git a / build . gradle b / build . gradle 
 index 5e9f884 . . 6ade675 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 242 , 15 + 242 , 9 @ @ project ( ' : forge ' ) { 
 rootProject . file ( ' LICENSE . txt ' ) 
 ] 
 
 - def jenkinsChangelog = rootProject . file ( ' build / changelog . txt ' ) 
 - def changelog = file ( " build / libs / $ { project . name } - $ { project . version } - changelog . txt " ) 
 - if ( jenkinsChangelog . exists ( ) ) { 
 - if ( ! changelog . parentFile . exists ( ) ) 
 - changelog . parentFile . mkdirs ( ) 
 - java . nio . file . Files . copy ( jenkinsChangelog . toPath ( ) , changelog . toPath ( ) , java . nio . file . StandardCopyOption . REPLACE _ EXISTING ) 
 + def changelog = rootProject . file ( ' build / changelog . txt ' ) 
 + if ( changelog . exists ( ) ) 
 extraTxts + = changelog 
 - println extraTxts 
 - } 
 
 task downloadCrowdin ( ) { 
 ext { 
 @ @ - 749 , 8 + 743 , 11 @ @ project ( ' : forge ' ) { 
 publications { 
 mavenJava ( MavenPublication ) { 
 artifact universalJar 
 - if ( changelog . exists ( ) ) 
 - artifact changelog 
 + if ( changelog . exists ( ) ) { 
 + artifact ( changelog ) { 
 + classifier = ' changelog ' 
 + } 
 + } 
 artifact installerJar 
 / / TODO : installer - win 
 artifact makeMdk

NEAREST DIFF:
diff - - git a / fml / . gitattributes b / fml / . gitattributes 
 index 809a906 . . 758843d 100644 
 - - - a / fml / . gitattributes 
 + + + b / fml / . gitattributes 
 @ @ - 1 , 9 + 1 , 13 @ @ 
 * text eol = lf 
 * . bat text eol = crlf 
 * . patch text eol = lf 
 + * . java text eol = lf 
 + * . gradle text eol = crlf 
 * . png binary 
 * . exe binary 
 * . dll binary 
 + * . jar binary 
 + * . lzma binary 
 * . zip binary 
 * . pyd binary 
 * . cfg text eol = lf 
 diff - - git a / fml / . gitignore b / fml / . gitignore 
 index 27935ea . . a09824b 100644 
 - - - a / fml / . gitignore 
 + + + b / fml / . gitignore 
 @ @ - 1 , 20 + 1 , 15 @ @ 
 + # eclipse 
 / bin 
 - / minecraft _ server 
 - / mods 
 - / fmlbuild . properties 
 - / fmlversion . properties 
 - / difflist . txt 
 - / target 
 - fmlbranding . properties 
 - / fernflower . zip 
 - / commands . py . bck 
 - / mcp * . zip 
 - / mcp 
 + / . settings 
 + / . classpath 
 + 
 + # idea 
 + / . idea 
 + * . iml 
 + 
 + # gradle 
 + / build 
 + / . gradle 
 + 
 + # occupational hazards 
 / eclipse 
 - / deobfuscation _ data * . zip 
 - / binpatch 
 - / mcp _ data / 
 - / map _ client . txt 
 - / * . lzma 
 - * * / * . lzma 
 - / installer _ base . jar 
 diff - - git a / fml / build . gradle b / fml / build . gradle 
 new file mode 100644 
 index 0000000 . . e9448bd 
 - - - / dev / null 
 + + + b / fml / build . gradle 
 @ @ - 0 , 0 + 1 , 100 @ @ 
 + buildscript { 
 + repositories { 
 + mavenCentral ( ) 
 + maven { 
 + name = " forge " 
 + url = " http : / / files . minecraftforge . net / maven " 
 + } 
 + } 
 + dependencies { 
 + classpath ' net . minecraftforge . gradle : ForgeGradle : 1 . 0 - SNAPSHOT ' 
 + } 
 + } 
 + 
 + import static net . minecraftforge . gradle . dev . FmlDevPlugin . * 
 + 
 + apply plugin : ' maven ' 
 + apply plugin : ' fmldev ' 
 + 
 + repositories { 
 + flatDir { 
 + name " fileRepo " 
 + dirs " repo " 
 + } 
 + } 
 + 
 + minecraft { 
 + version = ' 1 . 6 . 4 ' 
 + fmlDir = projectDir . getAbsolutePath ( ) ; 
 + mainClass = ' cpw . mods . fml . relauncher . ServerLaunchWrapper ' 
 + installerVersion = " 1 . 4 " 
 + } 
 + 
 + group = ' cpw . mods ' 
 + version = getVersionFromGit ( project ) 
 + 
 + jenkins { 
 + job = ' fml ' 
 + } 
 + 
 + uploadArchives { 
 + repositories { 
 + if ( project . hasProperty ( " filesmaven " ) ) { 
 + logger . info ( ' Publishing to files server ' ) 
 + 
 + mavenDeployer { 
 + configuration = configurations . deployerJars 
 + 
 + repository ( url : project . filesmaven . url ) { 
 + authentication ( userName : project . filesmaven . username , privateKey : project . filesmaven . key ) 
 + } 
 + 
 + pom { 
 + groupId = project . group 
 + version = project . version 
 + artifactId = project . archivesBaseName 
 + project { 
 + name project . archivesBaseName 
 + packaging ' jar ' 
 + description ' ForgeModLoader ' 
 + url ' https : / / github . com / MinecraftForge / FML ' 
 + 
 + scm { 
 + url ' https : / / github . com / MinecraftForge / FML ' 
 + connection ' scm : git : git : / / github . com / MinecraftForge / FML . git ' 
 + developerConnection ' scm : git : git @ github . com : MinecraftForge / FML . git ' 
 + } 
 + 
 + issueManagement { 
 + system ' github ' 
 + url ' https : / / github . com / MinecraftForge / FML / issues ' 
 + } 
 + 
 + licenses { 
 + license { 
 + name ' GNU Lesser Public License ( LGPL ) , Version 3 ' 
 + url ' http : / / www . gnu . org / licenses / lgpl - 3 . 0 . txt ' 
 + distribution ' repo ' 
 + } 
 + } 
 + 
 + developers { 
 + developer { 
 + id ' LexManos ' 
 + name ' Lex Manos ' 
 + roles { role ' developer ' } 
 + } 
 + } 
 + developers { 
 + developer { 
 + id ' cpw ' 
 + name ' Christian Weeks ' 
 + roles { role ' developer ' } 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / fml / eclipse - workspace - dev . zip b / fml / eclipse - workspace - dev . zip 
 index 3443e18 . . a3dd79e 100644 
 Binary files a / fml / eclipse - workspace - dev . zip and b / fml / eclipse - workspace - dev . zip differ 
 diff - - git a / fml / settings . gradle b / fml / settings . gradle 
 new file mode 100644 
 index 0000000 . . bcecb1a 
 - - - / dev / null 
 + + + b / fml / settings . gradle 
 @ @ - 0 , 0 + 1 @ @ 
 + rootProject . name = ' fml ' 
 \ No newline at end of file
