BLEU SCORE: 0.016087046643979717

TEST MSG: Small renames before bed .
GENERATED MSG: Add jline - based console with colors and tab - completion

TEST DIFF (one line): diff - - git a / rejects / minecraft / net / minecraft / entity / item / EntityMinecart . java . patch . rej b / rejects / minecraft / net / minecraft / entity / item / EntityMinecart . java . patch . rej <nl> deleted file mode 100644 <nl> index bab388b . . 0000000 <nl> - - - a / rejects / minecraft / net / minecraft / entity / item / EntityMinecart . java . patch . rej <nl> + + + / dev / null <nl> @ @ - 1 , 289 + 0 , 0 @ @ <nl> - + + + + REJECTED PATCH 10 <nl> - this . posX = d19 + d1 * d18 ; <nl> - this . posZ = d20 + d2 * d18 ; <nl> - this . setPosition ( this . posX , this . posY , this . posZ ) ; <nl> - - double d22 = this . motionX ; <nl> - - double d23 = this . motionZ ; <nl> - + this . moveMinecartOnRail ( p _ 180460 _ 1 _ ) ; <nl> - <nl> - - if ( this . riddenByEntity ! = null ) <nl> - - { <nl> - - d22 * = 0 . 75D ; <nl> - - d23 * = 0 . 75D ; <nl> - - } <nl> - - <nl> - - double d13 = this . getMaximumSpeed ( ) ; <nl> - - d22 = MathHelper . clamp _ double ( d22 , - d13 , d13 ) ; <nl> - - d23 = MathHelper . clamp _ double ( d23 , - d13 , d13 ) ; <nl> - - this . moveEntity ( d22 , 0 . 0D , d23 ) ; <nl> - - <nl> - if ( aint [ 0 ] [ 1 ] ! = 0 & & MathHelper . floor _ double ( this . posX ) - p _ 180460 _ 1 _ . getX ( ) = = aint [ 0 ] [ 0 ] & & MathHelper . floor _ double ( this . posZ ) - p _ 180460 _ 1 _ . getZ ( ) = = aint [ 0 ] [ 2 ] ) <nl> - { <nl> - this . setPosition ( this . posX , this . posY + ( double ) aint [ 0 ] [ 1 ] , this . posZ ) ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 12 <nl> - <nl> - public void applyEntityCollision ( Entity entityIn ) <nl> - { <nl> - + <nl> - + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . entity . minecart . MinecartCollisionEvent ( this , entityIn ) ) ; <nl> - + if ( getCollisionHandler ( ) ! = null ) <nl> - + { <nl> - + getCollisionHandler ( ) . onEntityCollision ( this , entityIn ) ; <nl> - + return ; <nl> - + } <nl> - if ( ! this . worldObj . isRemote ) <nl> - { <nl> - if ( ! entityIn . noClip & & ! this . noClip ) <nl> - { <nl> - if ( entityIn ! = this . riddenByEntity ) <nl> - { <nl> - - if ( entityIn instanceof EntityLivingBase & & ! ( entityIn instanceof EntityPlayer ) & & ! ( entityIn instanceof EntityIronGolem ) & & this . getMinecartType ( ) = = EntityMinecart . EnumMinecartType . RIDEABLE & & this . motionX * this . motionX + this . motionZ * this . motionZ > 0 . 01D & & this . riddenByEntity = = null & & entityIn . ridingEntity = = null ) <nl> - + if ( entityIn instanceof EntityLivingBase & & ! ( entityIn instanceof EntityPlayer ) & & ! ( entityIn instanceof EntityIronGolem ) & & canBeRidden ( ) & & this . motionX * this . motionX + this . motionZ * this . motionZ > 0 . 01D & & this . riddenByEntity = = null & & entityIn . ridingEntity = = null ) <nl> - { <nl> - entityIn . mountEntity ( this ) ; <nl> - } <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 13 <nl> - double d7 = entityIn . motionX + this . motionX ; <nl> - double d8 = entityIn . motionZ + this . motionZ ; <nl> - <nl> - - if ( ( ( EntityMinecart ) entityIn ) . getMinecartType ( ) = = EntityMinecart . EnumMinecartType . FURNACE & & this . getMinecartType ( ) ! = EntityMinecart . EnumMinecartType . FURNACE ) <nl> - + if ( ( ( EntityMinecart ) entityIn ) . isPoweredCart ( ) & & ! isPoweredCart ( ) ) <nl> - { <nl> - this . motionX * = 0 . 20000000298023224D ; <nl> - this . motionZ * = 0 . 20000000298023224D ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 14 <nl> - entityIn . motionX * = 0 . 949999988079071D ; <nl> - entityIn . motionZ * = 0 . 949999988079071D ; <nl> - } <nl> - - else if ( ( ( EntityMinecart ) entityIn ) . getMinecartType ( ) ! = EntityMinecart . EnumMinecartType . FURNACE & & this . getMinecartType ( ) = = EntityMinecart . EnumMinecartType . FURNACE ) <nl> - + else if ( ( ( EntityMinecart ) entityIn ) . isPoweredCart ( ) & & isPoweredCart ( ) ) <nl> - { <nl> - entityIn . motionX * = 0 . 20000000298023224D ; <nl> - entityIn . motionZ * = 0 . 20000000298023224D ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 15 <nl> - } <nl> - } <nl> - <nl> - + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> - + private BlockPos getCurrentRailPosition ( ) <nl> - + { <nl> - + int x = MathHelper . floor _ double ( this . posX ) ; <nl> - + int y = MathHelper . floor _ double ( this . posY ) ; <nl> - + int z = MathHelper . floor _ double ( this . posZ ) ; <nl> - + <nl> - + if ( BlockRailBase . isRailBlock ( this . worldObj , new BlockPos ( x , y - 1 , z ) ) ) y - - ; <nl> - + return new BlockPos ( x , y , z ) ; <nl> - + } <nl> - + <nl> - + protected double getMaxSpeed ( ) <nl> - + { <nl> - + if ( ! canUseRail ( ) ) return getMaximumSpeed ( ) ; <nl> - + BlockPos pos = this . getCurrentRailPosition ( ) ; <nl> - + IBlockState state = this . worldObj . getBlockState ( pos ) ; <nl> - + if ( ! BlockRailBase . isRailBlock ( state ) ) return getMaximumSpeed ( ) ; <nl> - + <nl> - + float railMaxSpeed = ( ( BlockRailBase ) state . getBlock ( ) ) . getRailMaxSpeed ( worldObj , this , pos ) ; <nl> - + return Math . min ( railMaxSpeed , getCurrentCartSpeedCapOnRail ( ) ) ; <nl> - + } <nl> - + <nl> - + / * * <nl> - + * Moved to allow overrides . <nl> - + * This code handles minecart movement and speed capping when on a rail . <nl> - + * / <nl> - + public void moveMinecartOnRail ( BlockPos pos ) <nl> - + { <nl> - + double mX = this . motionX ; <nl> - + double mZ = this . motionZ ; <nl> - + <nl> - + if ( this . riddenByEntity ! = null ) <nl> - + { <nl> - + mX * = 0 . 75D ; <nl> - + mZ * = 0 . 75D ; <nl> - + } <nl> - + <nl> - + double max = this . getMaxSpeed ( ) ; <nl> - + mX = MathHelper . clamp _ double ( mX , - max , max ) ; <nl> - + mZ = MathHelper . clamp _ double ( mZ , - max , max ) ; <nl> - + this . moveEntity ( mX , 0 . 0D , mZ ) ; <nl> - + } <nl> - + <nl> - + / * * <nl> - + * Gets the current global Minecart Collision handler if none <nl> - + * is registered , returns null <nl> - + * @ return The collision handler or null <nl> - + * / <nl> - + public static net . minecraftforge . common . IMinecartCollisionHandler getCollisionHandler ( ) <nl> - + { <nl> - + return collisionHandler ; <nl> - + } <nl> - + <nl> - + / * * <nl> - + * Sets the global Minecart Collision handler , overwrites any <nl> - + * that is currently set . <nl> - + * @ param handler The new handler <nl> - + * / <nl> - + public static void setCollisionHandler ( net . minecraftforge . common . IMinecartCollisionHandler handler ) <nl> - + { <nl> - + collisionHandler = handler ; <nl> - + } <nl> - + <nl> - + / * * <nl> - + * This function returns an ItemStack that represents this cart . <nl> - + * This should be an ItemStack that can be used by the player to place the cart , <nl> - + * but is not necessary the item the cart drops when destroyed . <nl> - + * @ return An ItemStack that can be used to place the cart . <nl> - + * / <nl> - + public ItemStack getCartItem ( ) <nl> - + { <nl> - + if ( this instanceof EntityMinecartFurnace ) <nl> - + { <nl> - + return new ItemStack ( Items . furnace _ minecart ) ; <nl> - + } <nl> - + else if ( this instanceof EntityMinecartChest ) <nl> - + { <nl> - + return new ItemStack ( Items . chest _ minecart ) ; <nl> - + } <nl> - + else if ( this instanceof EntityMinecartTNT ) <nl> - + { <nl> - + return new ItemStack ( Items . tnt _ minecart ) ; <nl> - + } <nl> - + else if ( this instanceof EntityMinecartHopper ) <nl> - + { <nl> - + return new ItemStack ( Items . hopper _ minecart ) ; <nl> - + } <nl> - + else if ( this instanceof EntityMinecartCommandBlock ) <nl> - + { <nl> - + return new ItemStack ( Items . command _ block _ minecart ) ; <nl> - + } <nl> - + return new ItemStack ( Items . minecart ) ; <nl> - + } <nl> - + <nl> - + / * * <nl> - + * Returns true if this cart can currently use rails . <nl> - + * This function is mainly used to gracefully detach a minecart from a rail . <nl> - + * @ return True if the minecart can use rails . <nl> - + * / <nl> - + public boolean canUseRail ( ) <nl> - + { <nl> - + return canUseRail ; <nl> - + } <nl> - + <nl> - + / * * <nl> - + * Set whether the minecart can use rails . <nl> - + * This function is mainly used to gracefully detach a minecart from a rail . <nl> - + * @ param use Whether the minecart can currently use rails . <nl> - + * / <nl> - + public void setCanUseRail ( boolean use ) <nl> - + { <nl> - + canUseRail = use ; <nl> - + } <nl> - + <nl> - + / * * <nl> - + * Return false if this cart should not call onMinecartPass ( ) and should ignore Powered Rails . <nl> - + * @ return True if this cart should call onMinecartPass ( ) . <nl> - + * / <nl> - + public boolean shouldDoRailFunctions ( ) <nl> - + { <nl> - + return true ; <nl> - + } <nl> - + <nl> - + / * * <nl> - + * Returns true if this cart is self propelled . <nl> - + * @ return True if powered . <nl> - + * / <nl> - + public boolean isPoweredCart ( ) <nl> - + { <nl> - + return getMinecartType ( ) = = EntityMinecart . EnumMinecartType . FURNACE ; <nl> - + } <nl> - + <nl> - + / * * <nl> - + * Returns true if this cart can be ridden by an Entity . <nl> - + * @ return True if this cart can be ridden . <nl> - + * / <nl> - + public boolean canBeRidden ( ) <nl> - + { <nl> - + return this . getMinecartType ( ) = = EntityMinecart . EnumMinecartType . RIDEABLE ; <nl> - + } <nl> - + <nl> - + / * * <nl> - + * Getters / setters for physics variables <nl> - + * / <nl> - + <nl> - + / * * <nl> - + * Returns the carts max speed when traveling on rails . Carts going faster <nl> - + * than 1 . 1 cause issues with chunk loading . Carts cant traverse slopes or <nl> - + * corners at greater than 0 . 5 - 0 . 6 . This value is compared with the rails <nl> - + * max speed and the carts current speed cap to determine the carts current <nl> - + * max speed . A normal rail ' s max speed is 0 . 4 . <nl> - + * <nl> - + * @ return Carts max speed . <nl> - + * / <nl> - + public float getMaxCartSpeedOnRail ( ) <nl> - + { <nl> - + return 1 . 2f ; <nl> - + } <nl> - + <nl> - + / * * <nl> - + * Returns the current speed cap for the cart when traveling on rails . This <nl> - + * functions differs from getMaxCartSpeedOnRail ( ) in that it controls <nl> - + * current movement and cannot be overridden . The value however can never be <nl> - + * higher than getMaxCartSpeedOnRail ( ) . <nl> - + * <nl> - + * @ return <nl> - + * / <nl> - + public final float getCurrentCartSpeedCapOnRail ( ) <nl> - + { <nl> - + return currentSpeedRail ; <nl> - + } <nl> - + <nl> - + public final void setCurrentCartSpeedCapOnRail ( float value ) <nl> - + { <nl> - + value = Math . min ( value , getMaxCartSpeedOnRail ( ) ) ; <nl> - + currentSpeedRail = value ; <nl> - + } <nl> - + <nl> - + public float getMaxSpeedAirLateral ( ) <nl> - + { <nl> - + return maxSpeedAirLateral ; <nl> - + } <nl> - + <nl> - + public void setMaxSpeedAirLateral ( float value ) <nl> - + { <nl> - + maxSpeedAirLateral = value ; <nl> - + } <nl> - + <nl> - + public float getMaxSpeedAirVertical ( ) <nl> - + { <nl> - + return maxSpeedAirVertical ; <nl> - + } <nl> - + <nl> - + public void setMaxSpeedAirVertical ( float value ) <nl> - + { <nl> - + maxSpeedAirVertical = value ; <nl> - + } <nl> - + <nl> - + public double getDragAir ( ) <nl> - + { <nl> - + return dragAir ; <nl> - + } <nl> - + <nl> - + public void setDragAir ( double value ) <nl> - + { <nl> - + dragAir = value ; <nl> - + } <nl> - + <nl> - + public double getSlopeAdjustment ( ) <nl> - + { <nl> - + return 0 . 0078125D ; <nl> - + } <nl> - + <nl> - + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> - + <nl> - public static enum EnumMinecartType <nl> - { <nl> - RIDEABLE ( 0 , " MinecartRideable " ) , <nl> - + + + + END PATCH <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 2b7c2fc . . f8816cf 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 56 , 7 + 56 , 9 @ @ import net . minecraft . util . EnumActionResult ; <nl> import net . minecraft . util . EnumFacing ; <nl> import net . minecraft . util . EnumHand ; <nl> import net . minecraft . util . WeightedRandom ; <nl> + import net . minecraft . util . math . AxisAlignedBB ; <nl> import net . minecraft . util . math . BlockPos ; <nl> + import net . minecraft . util . math . MathHelper ; <nl> import net . minecraft . util . text . ITextComponent ; <nl> import net . minecraft . util . text . TextComponentString ; <nl> import net . minecraft . util . text . TextFormatting ; <nl> diff - - git a / src / main / java / net / minecraftforge / common / IMinecartCollisionHandler . java b / src / main / java / net / minecraftforge / common / IMinecartCollisionHandler . java <nl> index 2346273 . . b0251dc 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / IMinecartCollisionHandler . java <nl> + + + b / src / main / java / net / minecraftforge / common / IMinecartCollisionHandler . java <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> package net . minecraftforge . common ; <nl> <nl> - import net . minecraft . util . AxisAlignedBB ; <nl> + import net . minecraft . util . math . AxisAlignedBB ; <nl> import net . minecraft . entity . Entity ; <nl> import net . minecraft . entity . item . EntityMinecart ; <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / EnumHelper . java b / src / main / java / net / minecraftforge / common / util / EnumHelper . java <nl> index 066d0a8 . . 8fee636 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / util / EnumHelper . java <nl> + + + b / src / main / java / net / minecraftforge / common / util / EnumHelper . java <nl> @ @ - 15 , 8 + 15 , 8 @ @ import net . minecraft . item . EnumAction ; <nl> import net . minecraft . item . EnumRarity ; <nl> import net . minecraft . item . Item . ToolMaterial ; <nl> import net . minecraft . item . ItemArmor . ArmorMaterial ; <nl> - import net . minecraft . util . EnumChatFormatting ; <nl> - import net . minecraft . util . MovingObjectPosition . MovingObjectType ; <nl> + import net . minecraft . util . math . RayTraceResult ; <nl> + import net . minecraft . util . text . TextFormatting ; <nl> import net . minecraft . world . EnumSkyBlock ; <nl> import net . minecraft . world . gen . structure . StructureStrongholdPieces . Stronghold . Door ; <nl> import net . minecraftforge . classloading . FMLForgePlugin ; <nl> @ @ - 42 , 11 + 42 , 11 @ @ public class EnumHelper <nl> { Door . class } , <nl> { EnumEnchantmentType . class } , <nl> { Sensitivity . class } , <nl> - { MovingObjectType . class } , <nl> + { RayTraceResult . Type . class } , <nl> { EnumSkyBlock . class , int . class } , <nl> { EnumStatus . class } , <nl> { ToolMaterial . class , int . class , int . class , float . class , float . class , int . class } , <nl> - { EnumRarity . class , EnumChatFormatting . class , String . class } <nl> + { EnumRarity . class , TextFormatting . class , String . class } <nl> } ; <nl> <nl> public static EnumAction addAction ( String name ) <nl> @ @ - 82 , 9 + 82 , 9 @ @ public class EnumHelper <nl> { <nl> return addEnum ( Sensitivity . class , name ) ; <nl> } <nl> - public static MovingObjectType addMovingObjectType ( String name ) <nl> + public static RayTraceResult . Type addMovingObjectType ( String name ) <nl> { <nl> - return addEnum ( MovingObjectType . class , name ) ; <nl> + return addEnum ( RayTraceResult . Type . class , name ) ; <nl> } <nl> public static EnumSkyBlock addSkyBlock ( String name , int lightValue ) <nl> { <nl> @ @ - 98 , 7 + 98 , 7 @ @ public class EnumHelper <nl> { <nl> return addEnum ( ToolMaterial . class , name , harvestLevel , maxUses , efficiency , damage , enchantability ) ; <nl> } <nl> - public static EnumRarity addRarity ( String name , EnumChatFormatting color , String displayName ) <nl> + public static EnumRarity addRarity ( String name , TextFormatting color , String displayName ) <nl> { <nl> return addEnum ( EnumRarity . class , name , color , displayName ) ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java b / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java <nl> index b7b5b22 . . dd93553 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java <nl> @ @ - 25 , 7 + 25 , 7 @ @ import net . minecraft . client . gui . GuiListExtended ; <nl> import net . minecraft . client . gui . GuiScreen ; <nl> import net . minecraft . client . gui . GuiTextField ; <nl> import net . minecraft . client . resources . I18n ; <nl> - import net . minecraft . util . EnumChatFormatting ; <nl> + import net . minecraft . util . text . TextFormatting ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . Loader ; <nl> import net . minecraftforge . fml . common . ModContainer ; <nl> @ @ - 1499 , 25 + 1499 , 25 @ @ public class GuiConfigEntries extends GuiListExtended <nl> <nl> if ( ! comment . equals ( configElement . getLanguageKey ( ) + " . tooltip " ) ) <nl> toolTip = new ArrayList < String > ( this . mc . fontRendererObj . listFormattedStringToWidth ( <nl> - EnumChatFormatting . GREEN + name + " \ n " + EnumChatFormatting . YELLOW + comment , 300 ) ) ; <nl> + TextFormatting . GREEN + name + " \ n " + TextFormatting . YELLOW + comment , 300 ) ) ; <nl> else if ( configElement . getComment ( ) ! = null & & ! configElement . getComment ( ) . trim ( ) . isEmpty ( ) ) <nl> toolTip = new ArrayList < String > ( this . mc . fontRendererObj . listFormattedStringToWidth ( <nl> - EnumChatFormatting . GREEN + name + " \ n " + EnumChatFormatting . YELLOW + configElement . getComment ( ) , 300 ) ) ; <nl> + TextFormatting . GREEN + name + " \ n " + TextFormatting . YELLOW + configElement . getComment ( ) , 300 ) ) ; <nl> else <nl> toolTip = new ArrayList < String > ( this . mc . fontRendererObj . listFormattedStringToWidth ( <nl> - EnumChatFormatting . GREEN + name + " \ n " + EnumChatFormatting . RED + " No tooltip defined . " , 300 ) ) ; <nl> + TextFormatting . GREEN + name + " \ n " + TextFormatting . RED + " No tooltip defined . " , 300 ) ) ; <nl> <nl> if ( ( configElement . getType ( ) = = ConfigGuiType . INTEGER <nl> & & ( Integer . valueOf ( configElement . getMinValue ( ) . toString ( ) ) ! = Integer . MIN _ VALUE | | Integer . valueOf ( configElement . getMaxValue ( ) . toString ( ) ) ! = Integer . MAX _ VALUE ) ) <nl> | | ( configElement . getType ( ) = = ConfigGuiType . DOUBLE <nl> & & ( Double . valueOf ( configElement . getMinValue ( ) . toString ( ) ) ! = - Double . MAX _ VALUE | | Double . valueOf ( configElement . getMaxValue ( ) . toString ( ) ) ! = Double . MAX _ VALUE ) ) ) <nl> toolTip . addAll ( this . mc . fontRendererObj . listFormattedStringToWidth ( <nl> - EnumChatFormatting . AQUA + I18n . format ( " fml . configgui . tooltip . defaultNumeric " , configElement . getMinValue ( ) , configElement . getMaxValue ( ) , configElement . getDefault ( ) ) , 300 ) ) ; <nl> + TextFormatting . AQUA + I18n . format ( " fml . configgui . tooltip . defaultNumeric " , configElement . getMinValue ( ) , configElement . getMaxValue ( ) , configElement . getDefault ( ) ) , 300 ) ) ; <nl> else if ( configElement . getType ( ) ! = ConfigGuiType . CONFIG _ CATEGORY ) <nl> - toolTip . addAll ( this . mc . fontRendererObj . listFormattedStringToWidth ( EnumChatFormatting . AQUA + I18n . format ( " fml . configgui . tooltip . default " , configElement . getDefault ( ) ) , 300 ) ) ; <nl> + toolTip . addAll ( this . mc . fontRendererObj . listFormattedStringToWidth ( TextFormatting . AQUA + I18n . format ( " fml . configgui . tooltip . default " , configElement . getDefault ( ) ) , 300 ) ) ; <nl> <nl> if ( configElement . requiresMcRestart ( ) | | owningScreen . allRequireMcRestart ) <nl> - toolTip . add ( EnumChatFormatting . RED + " [ " + I18n . format ( " fml . configgui . gameRestartTitle " ) + " ] " ) ; <nl> + toolTip . add ( TextFormatting . RED + " [ " + I18n . format ( " fml . configgui . gameRestartTitle " ) + " ] " ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 1527 , 9 + 1527 , 9 @ @ public class GuiConfigEntries extends GuiListExtended <nl> <nl> if ( drawLabel ) <nl> { <nl> - String label = ( ! isValidValue ? EnumChatFormatting . RED . toString ( ) : <nl> - ( isChanged ? EnumChatFormatting . WHITE . toString ( ) : EnumChatFormatting . GRAY . toString ( ) ) ) <nl> - + ( isChanged ? EnumChatFormatting . ITALIC . toString ( ) : " " ) + this . name ; <nl> + String label = ( ! isValidValue ? TextFormatting . RED . toString ( ) : <nl> + ( isChanged ? TextFormatting . WHITE . toString ( ) : TextFormatting . GRAY . toString ( ) ) ) <nl> + + ( isChanged ? TextFormatting . ITALIC . toString ( ) : " " ) + this . name ; <nl> this . mc . fontRendererObj . drawString ( <nl> label , <nl> this . owningScreen . entryList . labelX , <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiEditArray . java b / src / main / java / net / minecraftforge / fml / client / config / GuiEditArray . java <nl> index 1202b7e . . 13e4cc9 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiEditArray . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiEditArray . java <nl> @ @ - 21 , 7 + 21 , 7 @ @ import net . minecraft . client . Minecraft ; <nl> import net . minecraft . client . gui . GuiButton ; <nl> import net . minecraft . client . gui . GuiScreen ; <nl> import net . minecraft . client . resources . I18n ; <nl> - import net . minecraft . util . EnumChatFormatting ; <nl> + import net . minecraft . util . text . TextFormatting ; <nl> import static net . minecraftforge . fml . client . config . GuiUtils . RESET _ CHAR ; <nl> import static net . minecraftforge . fml . client . config . GuiUtils . UNDO _ CHAR ; <nl> <nl> @ @ - 63 , 17 + 63 , 17 @ @ public class GuiEditArray extends GuiScreen <nl> String comment ; <nl> <nl> comment = I18n . format ( configElement . getLanguageKey ( ) + " . tooltip " , <nl> - " \ n " + EnumChatFormatting . AQUA , configElement . getDefault ( ) , configElement . getMinValue ( ) , configElement . getMaxValue ( ) ) ; <nl> + " \ n " + TextFormatting . AQUA , configElement . getDefault ( ) , configElement . getMinValue ( ) , configElement . getMaxValue ( ) ) ; <nl> <nl> if ( ! comment . equals ( configElement . getLanguageKey ( ) + " . tooltip " ) ) <nl> toolTip = mc . fontRendererObj . listFormattedStringToWidth ( <nl> - EnumChatFormatting . GREEN + propName + " \ n " + EnumChatFormatting . YELLOW + comment , 300 ) ; <nl> + TextFormatting . GREEN + propName + " \ n " + TextFormatting . YELLOW + comment , 300 ) ; <nl> else if ( configElement . getComment ( ) ! = null & & ! configElement . getComment ( ) . trim ( ) . isEmpty ( ) ) <nl> toolTip = mc . fontRendererObj . listFormattedStringToWidth ( <nl> - EnumChatFormatting . GREEN + propName + " \ n " + EnumChatFormatting . YELLOW + configElement . getComment ( ) , 300 ) ; <nl> + TextFormatting . GREEN + propName + " \ n " + TextFormatting . YELLOW + configElement . getComment ( ) , 300 ) ; <nl> else <nl> toolTip = mc . fontRendererObj . listFormattedStringToWidth ( <nl> - EnumChatFormatting . GREEN + propName + " \ n " + EnumChatFormatting . RED + " No tooltip defined . " , 300 ) ; <nl> + TextFormatting . GREEN + propName + " \ n " + TextFormatting . RED + " No tooltip defined . " , 300 ) ; <nl> <nl> if ( parentScreen instanceof GuiConfig ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java b / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java <nl> index 85088e8 . . ac86dcb 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java <nl> @ @ - 20 , 7 + 20 , 7 @ @ import net . minecraft . client . Minecraft ; <nl> import net . minecraft . client . gui . GuiListExtended ; <nl> import net . minecraft . client . gui . GuiTextField ; <nl> import net . minecraft . client . resources . I18n ; <nl> - import net . minecraft . util . EnumChatFormatting ; <nl> + import net . minecraft . util . text . TextFormatting ; <nl> import net . minecraftforge . fml . client . config . GuiConfigEntries . ArrayEntry ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> <nl> @ @ - 560 , 7 + 560 , 7 @ @ public class GuiEditArrayEntries extends GuiListExtended <nl> { <nl> if ( this . getValue ( ) ! = null & & this . isValidated ) <nl> owningEntryList . mc . fontRendererObj . drawString ( <nl> - isValidValue ? EnumChatFormatting . GREEN + VALID : EnumChatFormatting . RED + INVALID , <nl> + isValidValue ? TextFormatting . GREEN + VALID : TextFormatting . RED + INVALID , <nl> listWidth / 4 - owningEntryList . mc . fontRendererObj . getStringWidth ( VALID ) - 2 , <nl> y + slotHeight / 2 - owningEntryList . mc . fontRendererObj . FONT _ HEIGHT / 2 , <nl> 16777215 ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiSelectString . java b / src / main / java / net / minecraftforge / fml / client / config / GuiSelectString . java <nl> index e4975fc . . df245bd 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiSelectString . java <nl> + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiSelectString . java <nl> @ @ - 21 , 7 + 21 , 8 @ @ import net . minecraft . client . Minecraft ; <nl> import net . minecraft . client . gui . GuiButton ; <nl> import net . minecraft . client . gui . GuiScreen ; <nl> import net . minecraft . client . resources . I18n ; <nl> - import net . minecraft . util . EnumChatFormatting ; <nl> + import net . minecraft . util . text . TextFormatting ; <nl> + <nl> import static net . minecraftforge . fml . client . config . GuiUtils . RESET _ CHAR ; <nl> import static net . minecraftforge . fml . client . config . GuiUtils . UNDO _ CHAR ; <nl> <nl> @ @ - 62 , 17 + 63 , 17 @ @ public class GuiSelectString extends GuiScreen <nl> String comment ; <nl> <nl> comment = I18n . format ( configElement . getLanguageKey ( ) + " . tooltip " , <nl> - " \ n " + EnumChatFormatting . AQUA , configElement . getDefault ( ) , configElement . getMinValue ( ) , configElement . getMaxValue ( ) ) ; <nl> + " \ n " + TextFormatting . AQUA , configElement . getDefault ( ) , configElement . getMinValue ( ) , configElement . getMaxValue ( ) ) ; <nl> <nl> if ( ! comment . equals ( configElement . getLanguageKey ( ) + " . tooltip " ) ) <nl> toolTip = mc . fontRendererObj . listFormattedStringToWidth ( <nl> - EnumChatFormatting . GREEN + propName + " \ n " + EnumChatFormatting . YELLOW + comment , 300 ) ; <nl> + TextFormatting . GREEN + propName + " \ n " + TextFormatting . YELLOW + comment , 300 ) ; <nl> else if ( configElement . getComment ( ) ! = null & & ! configElement . getComment ( ) . trim ( ) . isEmpty ( ) ) <nl> toolTip = mc . fontRendererObj . listFormattedStringToWidth ( <nl> - EnumChatFormatting . GREEN + propName + " \ n " + EnumChatFormatting . YELLOW + configElement . getComment ( ) , 300 ) ; <nl> + TextFormatting . GREEN + propName + " \ n " + TextFormatting . YELLOW + configElement . getComment ( ) , 300 ) ; <nl> else <nl> toolTip = mc . fontRendererObj . listFormattedStringToWidth ( <nl> - EnumChatFormatting . GREEN + propName + " \ n " + EnumChatFormatting . RED + " No tooltip defined . " , 300 ) ; <nl> + TextFormatting . GREEN + propName + " \ n " + TextFormatting . RED + " No tooltip defined . " , 300 ) ; <nl> <nl> if ( parentScreen instanceof GuiConfig ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / server / console / ConsoleFormatter . java b / src / main / java / net / minecraftforge / server / console / ConsoleFormatter . java <nl> index 51719e0 . . 69796f7 100644 <nl> - - - a / src / main / java / net / minecraftforge / server / console / ConsoleFormatter . java <nl> + + + b / src / main / java / net / minecraftforge / server / console / ConsoleFormatter . java <nl> @ @ - 8 , 7 + 8 , 7 @ @ import org . fusesource . jansi . Ansi ; <nl> import com . google . common . base . Function ; <nl> import com . google . common . collect . ImmutableMap ; <nl> <nl> - import net . minecraft . util . EnumChatFormatting ; <nl> + import net . minecraft . util . text . TextFormatting ; <nl> <nl> public final class ConsoleFormatter implements Function < String , String > <nl> { <nl> @ @ - 20 , 31 + 20 , 31 @ @ public final class ConsoleFormatter implements Function < String , String > <nl> private static final String RESET = Ansi . ansi ( ) . reset ( ) . toString ( ) ; <nl> <nl> private static final ImmutableMap < Pattern , String > REPLACEMENTS = ImmutableMap . < Pattern , String > builder ( ) <nl> - . put ( compile ( EnumChatFormatting . BLACK ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLACK ) . boldOff ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . DARK _ BLUE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLUE ) . boldOff ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . DARK _ GREEN ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . GREEN ) . boldOff ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . DARK _ AQUA ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . CYAN ) . boldOff ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . DARK _ RED ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . RED ) . boldOff ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . DARK _ PURPLE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . MAGENTA ) . boldOff ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . GOLD ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . YELLOW ) . boldOff ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . GRAY ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . WHITE ) . boldOff ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . DARK _ GRAY ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLACK ) . bold ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . BLUE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLUE ) . bold ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . GREEN ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . GREEN ) . bold ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . AQUA ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . CYAN ) . bold ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . RED ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . RED ) . bold ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . LIGHT _ PURPLE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . MAGENTA ) . bold ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . YELLOW ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . YELLOW ) . bold ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . WHITE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . WHITE ) . bold ( ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . OBFUSCATED ) , Ansi . ansi ( ) . a ( Ansi . Attribute . BLINK _ SLOW ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . BOLD ) , Ansi . ansi ( ) . a ( Ansi . Attribute . UNDERLINE _ DOUBLE ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . STRIKETHROUGH ) , Ansi . ansi ( ) . a ( Ansi . Attribute . STRIKETHROUGH _ ON ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . UNDERLINE ) , Ansi . ansi ( ) . a ( Ansi . Attribute . UNDERLINE ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . ITALIC ) , Ansi . ansi ( ) . a ( Ansi . Attribute . ITALIC ) . toString ( ) ) <nl> - . put ( compile ( EnumChatFormatting . RESET ) , RESET ) <nl> + . put ( compile ( TextFormatting . BLACK ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLACK ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . DARK _ BLUE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLUE ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . DARK _ GREEN ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . GREEN ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . DARK _ AQUA ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . CYAN ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . DARK _ RED ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . RED ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . DARK _ PURPLE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . MAGENTA ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . GOLD ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . YELLOW ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . GRAY ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . WHITE ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . DARK _ GRAY ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLACK ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . BLUE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLUE ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . GREEN ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . GREEN ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . AQUA ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . CYAN ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . RED ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . RED ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . LIGHT _ PURPLE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . MAGENTA ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . YELLOW ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . YELLOW ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . WHITE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . WHITE ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . OBFUSCATED ) , Ansi . ansi ( ) . a ( Ansi . Attribute . BLINK _ SLOW ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . BOLD ) , Ansi . ansi ( ) . a ( Ansi . Attribute . UNDERLINE _ DOUBLE ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . STRIKETHROUGH ) , Ansi . ansi ( ) . a ( Ansi . Attribute . STRIKETHROUGH _ ON ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . UNDERLINE ) , Ansi . ansi ( ) . a ( Ansi . Attribute . UNDERLINE ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . ITALIC ) , Ansi . ansi ( ) . a ( Ansi . Attribute . ITALIC ) . toString ( ) ) <nl> + . put ( compile ( TextFormatting . RESET ) , RESET ) <nl> . build ( ) ; <nl> <nl> - private static Pattern compile ( EnumChatFormatting formatting ) <nl> + private static Pattern compile ( TextFormatting formatting ) <nl> { <nl> return Pattern . compile ( formatting . toString ( ) , Pattern . LITERAL | Pattern . CASE _ INSENSITIVE ) ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / server / console / TerminalHandler . java b / src / main / java / net / minecraftforge / server / console / TerminalHandler . java <nl> index 142b32b . . 6bf0a2e 100644 <nl> - - - a / src / main / java / net / minecraftforge / server / console / TerminalHandler . java <nl> + + + b / src / main / java / net / minecraftforge / server / console / TerminalHandler . java <nl> @ @ - 9 , 7 + 9 , 7 @ @ import com . google . common . base . Function ; <nl> <nl> import jline . console . ConsoleReader ; <nl> import net . minecraft . server . dedicated . DedicatedServer ; <nl> - import net . minecraft . util . EnumChatFormatting ; <nl> + import net . minecraft . util . text . TextFormatting ; <nl> <nl> public final class TerminalHandler <nl> { <nl> @ @ - 60 , 7 + 60 , 7 @ @ public final class TerminalHandler <nl> @ Override <nl> public String apply ( String text ) <nl> { <nl> - return EnumChatFormatting . getTextWithoutFormattingCodes ( text ) ; <nl> + return TextFormatting . getTextWithoutFormattingCodes ( text ) ; <nl> } <nl> <nl> } ) ;
NEAREST DIFF (one line): diff - - git a / jsons / 1 . 8 - dev . json b / jsons / 1 . 8 - dev . json <nl> index 97f9b7f . . bd8984d 100644 <nl> - - - a / jsons / 1 . 8 - dev . json <nl> + + + b / jsons / 1 . 8 - dev . json <nl> @ @ - 9 , 6 + 9 , 11 @ @ <nl> " name " : " net . minecraft : launchwrapper : 1 . 12 " <nl> } , <nl> { <nl> + " name " : " jline : jline : 2 . 13 " , <nl> + " children " : [ " sources " ] , <nl> + " url " : " http : / / repo . maven . apache . org / maven2 " <nl> + } , <nl> + { <nl> " name " : " com . google . code . findbugs : jsr305 : 1 . 3 . 9 " , <nl> " children " : [ " sources " ] , <nl> " url " : " http : / / repo . maven . apache . org / maven2 " <nl> diff - - git a / jsons / 1 . 8 - rel . json b / jsons / 1 . 8 - rel . json <nl> index debf80a . . 266f768 100644 <nl> - - - a / jsons / 1 . 8 - rel . json <nl> + + + b / jsons / 1 . 8 - rel . json <nl> @ @ - 40 , 6 + 40 , 13 @ @ <nl> " serverreq " : true <nl> } , <nl> { <nl> + " name " : " jline : jline : 2 . 13 " , <nl> + " url " : " http : / / files . minecraftforge . net / maven / " , <nl> + " checksums " : [ " TODO " , " TODO " ] , <nl> + " serverreq " : true , <nl> + " clientreq " : false <nl> + } , <nl> + { <nl> " name " : " com . typesafe . akka : akka - actor _ 2 . 11 : 2 . 3 . 3 " , <nl> " url " : " http : / / files . minecraftforge . net / maven / " , <nl> " checksums " : [ " ed62e9fc709ca0f2ff1a3220daa8b70a2870078e " , " 25a86ccfdb6f6dfe08971f4825d0a01be83a6f2e " ] , <nl> @ @ - 126 , 4 + 133 , 4 @ @ <nl> } <nl> ] <nl> } <nl> - } <nl> \ No newline at end of file <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch b / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch <nl> index 1af800c . . dd05105 100644 <nl> - - - a / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch <nl> @ @ - 8 , 7 + 8 , 15 @ @ <nl> private static final String _ _ OBFID = " CL _ 00001784 " ; <nl> <nl> public DedicatedServer ( File p _ i1508 _ 1 _ ) <nl> - @ @ - 113 , 6 + 114 , 8 @ @ <nl> + @ @ - 88 , 6 + 89 , 7 @ @ <nl> + private static final String _ _ OBFID = " CL _ 00001786 " ; <nl> + public void run ( ) <nl> + { <nl> + + if ( net . minecraftforge . server . console . TerminalHandler . handleCommands ( DedicatedServer . this ) ) return ; <nl> + BufferedReader bufferedreader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; <nl> + String s4 ; <nl> + <nl> + @ @ - 113 , 6 + 115 , 8 @ @ <nl> field _ 155771 _ h . warn ( " To start the server with more ram , launch it as \ " java - Xmx1024M - Xms1024M - jar minecraft _ server . jar \ " " ) ; <nl> } <nl> <nl> @ @ - 17 , 7 + 25 , 7 @ @ <nl> field _ 155771 _ h . info ( " Loading properties " ) ; <nl> this . field _ 71340 _ o = new PropertyManager ( new File ( " server . properties " ) ) ; <nl> this . field _ 154332 _ n = new ServerEula ( new File ( " eula . txt " ) ) ; <nl> - @ @ - 204 , 6 + 207 , 7 @ @ <nl> + @ @ - 204 , 6 + 208 , 7 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 25 , 7 + 33 , 7 @ @ <nl> this . func _ 152361 _ a ( new DedicatedPlayerList ( this ) ) ; <nl> long j = System . nanoTime ( ) ; <nl> <nl> - @ @ - 250 , 6 + 254 , 7 @ @ <nl> + @ @ - 250 , 6 + 255 , 7 @ @ <nl> this . func _ 71191 _ d ( ( this . func _ 71207 _ Z ( ) + 8 ) / 16 * 16 ) ; <nl> this . func _ 71191 _ d ( MathHelper . func _ 76125 _ a ( this . func _ 71207 _ Z ( ) , 64 , 256 ) ) ; <nl> this . field _ 71340 _ o . func _ 73667 _ a ( " max - build - height " , Integer . valueOf ( this . func _ 71207 _ Z ( ) ) ) ; <nl> @ @ - 33 , 7 + 41 , 7 @ @ <nl> field _ 155771 _ h . info ( " Preparing level \ " " + this . func _ 71270 _ I ( ) + " \ " " ) ; <nl> this . func _ 71247 _ a ( this . func _ 71270 _ I ( ) , this . func _ 71270 _ I ( ) , k , worldtype , s2 ) ; <nl> long i1 = System . nanoTime ( ) - j ; <nl> - @ @ - 278 , 7 + 283 , 7 @ @ <nl> + @ @ - 278 , 10 + 284 , 11 @ @ <nl> thread1 . start ( ) ; <nl> } <nl> <nl> @ @ - 42 , 3 + 50 , 7 @ @ <nl> } <nl> } <nl> } <nl> + + public void func _ 145747 _ a ( net . minecraft . util . IChatComponent message ) { field _ 155771 _ h . info ( message . func _ 150254 _ d ( ) ) ; } <nl> + <nl> + public void func _ 71235 _ a ( WorldSettings . GameType p _ 71235 _ 1 _ ) <nl> + { <nl> diff - - git a / patches / minecraft / net / minecraft / util / ChatComponentStyle . java . patch b / patches / minecraft / net / minecraft / util / ChatComponentStyle . java . patch <nl> new file mode 100644 <nl> index 0000000 . . c8a5e73 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / util / ChatComponentStyle . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / util / ChatComponentStyle . java <nl> + + + + . . / src - work / minecraft / net / minecraft / util / ChatComponentStyle . java <nl> + @ @ - 81 , 7 + 81 , 6 @ @ <nl> + return stringbuilder . toString ( ) ; <nl> + } <nl> + <nl> + - @ SideOnly ( Side . CLIENT ) <nl> + public final String func _ 150254 _ d ( ) <nl> + { <nl> + StringBuilder stringbuilder = new StringBuilder ( ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / util / ChatStyle . java . patch b / patches / minecraft / net / minecraft / util / ChatStyle . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 2622b5e <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / util / ChatStyle . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / util / ChatStyle . java <nl> + + + + . . / src - work / minecraft / net / minecraft / util / ChatStyle . java <nl> + @ @ - 230 , 7 + 230 , 6 @ @ <nl> + return this ; <nl> + } <nl> + <nl> + - @ SideOnly ( Side . CLIENT ) <nl> + public String func _ 150218 _ j ( ) <nl> + { <nl> + if ( this . func _ 150229 _ g ( ) ) <nl> diff - - git a / patches / minecraft / net / minecraft / util / IChatComponent . java . patch b / patches / minecraft / net / minecraft / util / IChatComponent . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 2605247 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / util / IChatComponent . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / util / IChatComponent . java <nl> + + + + . . / src - work / minecraft / net / minecraft / util / IChatComponent . java <nl> + @ @ - 32 , 7 + 32 , 6 @ @ <nl> + <nl> + String func _ 150260 _ c ( ) ; <nl> + <nl> + - @ SideOnly ( Side . CLIENT ) <nl> + String func _ 150254 _ d ( ) ; <nl> + <nl> + List func _ 150253 _ a ( ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / launcher / FMLServerTweaker . java b / src / main / java / net / minecraftforge / fml / common / launcher / FMLServerTweaker . java <nl> index 7eeed43 . . 359b190 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / launcher / FMLServerTweaker . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / launcher / FMLServerTweaker . java <nl> @ @ - 1 , 9 + 1 , 28 @ @ <nl> package net . minecraftforge . fml . common . launcher ; <nl> <nl> + import java . io . File ; <nl> + import java . util . List ; <nl> + <nl> + import org . apache . logging . log4j . LogManager ; <nl> + import org . apache . logging . log4j . core . LoggerContext ; <nl> + <nl> import net . minecraft . launchwrapper . LaunchClassLoader ; <nl> import net . minecraftforge . fml . relauncher . FMLLaunchHandler ; <nl> <nl> public class FMLServerTweaker extends FMLTweaker { <nl> + <nl> + @ Override <nl> + public void acceptOptions ( List < String > args , File gameDir , File assetsDir , String profile ) <nl> + { <nl> + super . acceptOptions ( args , gameDir , assetsDir , profile ) ; <nl> + <nl> + if ( System . getProperty ( " log4j . configurationFile " ) = = null ) <nl> + { <nl> + System . setProperty ( " log4j . configurationFile " , " log4j2 _ server . xml " ) ; <nl> + ( ( LoggerContext ) LogManager . getContext ( false ) ) . reconfigure ( ) ; <nl> + } <nl> + } <nl> + <nl> @ Override <nl> public String getLaunchTarget ( ) <nl> { <nl> @ @ - 16 , 6 + 35 , 11 @ @ public class FMLServerTweaker extends FMLTweaker { <nl> / / The log4j2 queue is excluded so it is correctly visible from the obfuscated <nl> / / and deobfuscated parts of the code . Without , the UI won ' t show anything <nl> classLoader . addClassLoaderExclusion ( " com . mojang . util . QueueLogAppender " ) ; <nl> + <nl> + classLoader . addClassLoaderExclusion ( " jline . " ) ; <nl> + classLoader . addClassLoaderExclusion ( " org . fusesource . " ) ; <nl> + classLoader . addClassLoaderExclusion ( " net . minecraftforge . server . console . TerminalConsoleAppender " ) ; <nl> + <nl> FMLLaunchHandler . configureForServerLaunch ( classLoader , this ) ; <nl> FMLLaunchHandler . appendCoreMods ( ) ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / server / console / ConsoleCommandCompleter . java b / src / main / java / net / minecraftforge / server / console / ConsoleCommandCompleter . java <nl> new file mode 100644 <nl> index 0000000 . . af0216e <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / server / console / ConsoleCommandCompleter . java <nl> @ @ - 0 , 0 + 1 , 96 @ @ <nl> + package net . minecraftforge . server . console ; <nl> + <nl> + import static com . google . common . base . Preconditions . checkNotNull ; <nl> + <nl> + import java . util . List ; <nl> + import java . util . concurrent . Callable ; <nl> + import java . util . concurrent . ExecutionException ; <nl> + import java . util . concurrent . Future ; <nl> + <nl> + import org . apache . logging . log4j . LogManager ; <nl> + import org . apache . logging . log4j . Logger ; <nl> + <nl> + import jline . console . completer . Completer ; <nl> + import net . minecraft . server . dedicated . DedicatedServer ; <nl> + <nl> + public final class ConsoleCommandCompleter implements Completer <nl> + { <nl> + <nl> + private static final Logger logger = LogManager . getLogger ( ) ; <nl> + private final DedicatedServer server ; <nl> + <nl> + public ConsoleCommandCompleter ( DedicatedServer server ) <nl> + { <nl> + this . server = checkNotNull ( server , " server " ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public int complete ( String buffer , int cursor , List < CharSequence > candidates ) <nl> + { <nl> + int len = buffer . length ( ) ; <nl> + buffer = buffer . trim ( ) ; <nl> + if ( buffer . isEmpty ( ) ) <nl> + { <nl> + return cursor ; <nl> + } <nl> + <nl> + boolean prefix ; <nl> + if ( buffer . charAt ( 0 ) ! = ' / ' ) <nl> + { <nl> + buffer = ' / ' + buffer ; <nl> + prefix = false ; <nl> + } <nl> + else <nl> + { <nl> + prefix = true ; <nl> + } <nl> + <nl> + final String input = buffer ; <nl> + @ SuppressWarnings ( " unchecked " ) <nl> + Future < List < String > > tabComplete = this . server . callFromMainThread ( new Callable < List < String > > ( ) { <nl> + <nl> + @ Override <nl> + public List < String > call ( ) throws Exception <nl> + { <nl> + return ConsoleCommandCompleter . this . server . getTabCompletions ( ConsoleCommandCompleter . this . server , input , <nl> + ConsoleCommandCompleter . this . server . getPosition ( ) ) ; <nl> + } <nl> + } ) ; <nl> + try <nl> + { <nl> + List < String > completions = tabComplete . get ( ) ; <nl> + if ( prefix ) <nl> + { <nl> + candidates . addAll ( completions ) ; <nl> + } <nl> + else <nl> + { <nl> + for ( String completion : completions ) <nl> + { <nl> + candidates . add ( completion . charAt ( 0 ) = = ' / ' ? completion . substring ( 1 ) : completion ) ; <nl> + } <nl> + } <nl> + <nl> + int pos = buffer . lastIndexOf ( ' ' ) ; <nl> + if ( pos = = - 1 ) <nl> + { <nl> + return cursor - len ; <nl> + } <nl> + else <nl> + { <nl> + return cursor - len + pos ; <nl> + } <nl> + } <nl> + catch ( InterruptedException e ) <nl> + { <nl> + Thread . currentThread ( ) . interrupt ( ) ; <nl> + } <nl> + catch ( ExecutionException e ) <nl> + { <nl> + logger . error ( " Failed to tab complete " , e ) ; <nl> + } <nl> + <nl> + return cursor ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / server / console / ConsoleFormatter . java b / src / main / java / net / minecraftforge / server / console / ConsoleFormatter . java <nl> new file mode 100644 <nl> index 0000000 . . 51719e0 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / server / console / ConsoleFormatter . java <nl> @ @ - 0 , 0 + 1 , 63 @ @ <nl> + package net . minecraftforge . server . console ; <nl> + <nl> + import java . util . Map ; <nl> + import java . util . regex . Pattern ; <nl> + <nl> + import org . fusesource . jansi . Ansi ; <nl> + <nl> + import com . google . common . base . Function ; <nl> + import com . google . common . collect . ImmutableMap ; <nl> + <nl> + import net . minecraft . util . EnumChatFormatting ; <nl> + <nl> + public final class ConsoleFormatter implements Function < String , String > <nl> + { <nl> + <nl> + public ConsoleFormatter ( ) <nl> + { <nl> + } <nl> + <nl> + private static final String RESET = Ansi . ansi ( ) . reset ( ) . toString ( ) ; <nl> + <nl> + private static final ImmutableMap < Pattern , String > REPLACEMENTS = ImmutableMap . < Pattern , String > builder ( ) <nl> + . put ( compile ( EnumChatFormatting . BLACK ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLACK ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . DARK _ BLUE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLUE ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . DARK _ GREEN ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . GREEN ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . DARK _ AQUA ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . CYAN ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . DARK _ RED ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . RED ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . DARK _ PURPLE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . MAGENTA ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . GOLD ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . YELLOW ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . GRAY ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . WHITE ) . boldOff ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . DARK _ GRAY ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLACK ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . BLUE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLUE ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . GREEN ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . GREEN ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . AQUA ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . CYAN ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . RED ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . RED ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . LIGHT _ PURPLE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . MAGENTA ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . YELLOW ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . YELLOW ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . WHITE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . WHITE ) . bold ( ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . OBFUSCATED ) , Ansi . ansi ( ) . a ( Ansi . Attribute . BLINK _ SLOW ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . BOLD ) , Ansi . ansi ( ) . a ( Ansi . Attribute . UNDERLINE _ DOUBLE ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . STRIKETHROUGH ) , Ansi . ansi ( ) . a ( Ansi . Attribute . STRIKETHROUGH _ ON ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . UNDERLINE ) , Ansi . ansi ( ) . a ( Ansi . Attribute . UNDERLINE ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . ITALIC ) , Ansi . ansi ( ) . a ( Ansi . Attribute . ITALIC ) . toString ( ) ) <nl> + . put ( compile ( EnumChatFormatting . RESET ) , RESET ) <nl> + . build ( ) ; <nl> + <nl> + private static Pattern compile ( EnumChatFormatting formatting ) <nl> + { <nl> + return Pattern . compile ( formatting . toString ( ) , Pattern . LITERAL | Pattern . CASE _ INSENSITIVE ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String apply ( String text ) <nl> + { <nl> + for ( Map . Entry < Pattern , String > entry : REPLACEMENTS . entrySet ( ) ) <nl> + { <nl> + text = entry . getKey ( ) . matcher ( text ) . replaceAll ( entry . getValue ( ) ) ; <nl> + } <nl> + <nl> + return text + RESET ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / server / console / TerminalConsoleAppender . java b / src / main / java / net / minecraftforge / server / console / TerminalConsoleAppender . java <nl> new file mode 100644 <nl> index 0000000 . . d32f25f <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / server / console / TerminalConsoleAppender . java <nl> @ @ - 0 , 0 + 1 , 168 @ @ <nl> + package net . minecraftforge . server . console ; <nl> + <nl> + import static jline . TerminalFactory . OFF ; <nl> + import static jline . console . ConsoleReader . RESET _ LINE ; <nl> + import static org . apache . logging . log4j . core . helpers . Booleans . parseBoolean ; <nl> + <nl> + import java . io . IOException ; <nl> + import java . io . PrintStream ; <nl> + import java . io . Serializable ; <nl> + import java . io . Writer ; <nl> + <nl> + import org . apache . logging . log4j . core . Filter ; <nl> + import org . apache . logging . log4j . core . Layout ; <nl> + import org . apache . logging . log4j . core . LogEvent ; <nl> + import org . apache . logging . log4j . core . appender . AbstractAppender ; <nl> + import org . apache . logging . log4j . core . config . plugins . Plugin ; <nl> + import org . apache . logging . log4j . core . config . plugins . PluginAttribute ; <nl> + import org . apache . logging . log4j . core . config . plugins . PluginElement ; <nl> + import org . apache . logging . log4j . core . config . plugins . PluginFactory ; <nl> + import org . apache . logging . log4j . core . layout . PatternLayout ; <nl> + import org . apache . logging . log4j . util . PropertiesUtil ; <nl> + import org . fusesource . jansi . AnsiConsole ; <nl> + <nl> + import com . google . common . base . Function ; <nl> + import com . google . common . base . Functions ; <nl> + <nl> + import jline . TerminalFactory ; <nl> + import jline . console . ConsoleReader ; <nl> + <nl> + @ Plugin ( name = " TerminalConsole " , category = " Core " , elementType = " appender " , printObject = true ) <nl> + public class TerminalConsoleAppender extends AbstractAppender <nl> + { <nl> + <nl> + private static final boolean ENABLE _ JLINE = PropertiesUtil . getProperties ( ) . getBooleanProperty ( " jline . enable " , true ) ; <nl> + <nl> + private static final PrintStream out = System . out ; <nl> + <nl> + private static boolean initialized ; <nl> + private static ConsoleReader reader ; <nl> + <nl> + public static ConsoleReader getReader ( ) <nl> + { <nl> + return reader ; <nl> + } <nl> + <nl> + private static Function < String , String > formatter = Functions . identity ( ) ; <nl> + <nl> + public static void setFormatter ( Function < String , String > format ) <nl> + { <nl> + formatter = format ! = null ? format : Functions . < String > identity ( ) ; <nl> + } <nl> + <nl> + protected TerminalConsoleAppender ( String name , Filter filter , Layout < ? extends Serializable > layout , boolean ignoreExceptions ) <nl> + { <nl> + super ( name , filter , layout , ignoreExceptions ) ; <nl> + } <nl> + <nl> + @ PluginFactory <nl> + public static TerminalConsoleAppender createAppender ( @ PluginAttribute ( " name " ) String name , @ PluginElement ( " Filters " ) Filter filter , <nl> + @ PluginElement ( " Layout " ) Layout < ? extends Serializable > layout , @ PluginAttribute ( " ignoreExceptions " ) String ignore ) <nl> + { <nl> + <nl> + if ( name = = null ) <nl> + { <nl> + LOGGER . error ( " No name provided for TerminalConsoleAppender " ) ; <nl> + return null ; <nl> + } <nl> + if ( layout = = null ) <nl> + { <nl> + layout = PatternLayout . createLayout ( null , null , null , null , null ) ; <nl> + } <nl> + <nl> + boolean ignoreExceptions = parseBoolean ( ignore , true ) ; <nl> + <nl> + / / This is handled by jline <nl> + System . setProperty ( " log4j . skipJansi " , " true " ) ; <nl> + return new TerminalConsoleAppender ( name , filter , layout , ignoreExceptions ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void start ( ) <nl> + { <nl> + / / Initialize the reader if that hasn ' t happened yet <nl> + if ( ! initialized & & reader = = null ) <nl> + { <nl> + initialized = true ; <nl> + <nl> + if ( ENABLE _ JLINE ) <nl> + { <nl> + final boolean hasConsole = System . console ( ) ! = null ; <nl> + if ( hasConsole ) <nl> + { <nl> + try <nl> + { <nl> + AnsiConsole . systemInstall ( ) ; <nl> + reader = new ConsoleReader ( ) ; <nl> + reader . setExpandEvents ( false ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + LOGGER . warn ( " Failed to initialize terminal . Falling back to default . " , e ) ; <nl> + } <nl> + } <nl> + <nl> + if ( reader = = null ) <nl> + { <nl> + / / Eclipse doesn ' t support colors and characters like \ r so enabling jline2 on it will <nl> + / / just cause a lot of issues with empty lines and weird characters . <nl> + / / Enable jline2 only on IntelliJ IDEA to prevent that . <nl> + / / Also see : https : / / bugs . eclipse . org / bugs / show _ bug . cgi ? id = 76936 <nl> + <nl> + if ( hasConsole | | System . getProperty ( " java . class . path " ) . contains ( " idea _ rt . jar " ) ) <nl> + { <nl> + / / Disable advanced jline features <nl> + TerminalFactory . configure ( OFF ) ; <nl> + TerminalFactory . reset ( ) ; <nl> + <nl> + try <nl> + { <nl> + reader = new ConsoleReader ( ) ; <nl> + reader . setExpandEvents ( false ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + LOGGER . warn ( " Failed to initialize fallback terminal . Falling back to standard output console . " , e ) ; <nl> + } <nl> + } <nl> + else <nl> + { <nl> + LOGGER . warn ( " Disabling terminal , you ' re running in an unsupported environment . " ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + super . start ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void append ( LogEvent event ) <nl> + { <nl> + if ( reader ! = null ) <nl> + { <nl> + try <nl> + { <nl> + Writer out = reader . getOutput ( ) ; <nl> + out . write ( RESET _ LINE ) ; <nl> + out . write ( formatEvent ( event ) ) ; <nl> + <nl> + reader . drawLine ( ) ; <nl> + reader . flush ( ) ; <nl> + } <nl> + catch ( IOException ignored ) <nl> + { <nl> + } <nl> + } <nl> + else <nl> + { <nl> + out . print ( formatEvent ( event ) ) ; <nl> + } <nl> + } <nl> + <nl> + protected String formatEvent ( LogEvent event ) <nl> + { <nl> + return formatter . apply ( getLayout ( ) . toSerializable ( event ) . toString ( ) ) ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / server / console / TerminalHandler . java b / src / main / java / net / minecraftforge / server / console / TerminalHandler . java <nl> new file mode 100644 <nl> index 0000000 . . 3c9f6af <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / server / console / TerminalHandler . java <nl> @ @ - 0 , 0 + 1 , 70 @ @ <nl> + package net . minecraftforge . server . console ; <nl> + <nl> + import java . io . IOException ; <nl> + <nl> + import org . apache . logging . log4j . LogManager ; <nl> + import org . apache . logging . log4j . Logger ; <nl> + <nl> + import com . google . common . base . Function ; <nl> + <nl> + import jline . console . ConsoleReader ; <nl> + import net . minecraft . server . dedicated . DedicatedServer ; <nl> + import net . minecraft . util . EnumChatFormatting ; <nl> + <nl> + public final class TerminalHandler <nl> + { <nl> + <nl> + private static final Logger logger = LogManager . getLogger ( ) ; <nl> + <nl> + private TerminalHandler ( ) <nl> + { <nl> + } <nl> + <nl> + public static boolean handleCommands ( DedicatedServer server ) <nl> + { <nl> + final ConsoleReader reader = TerminalConsoleAppender . getReader ( ) ; <nl> + if ( reader ! = null ) <nl> + { <nl> + TerminalConsoleAppender . setFormatter ( new ConsoleFormatter ( ) ) ; <nl> + reader . addCompleter ( new ConsoleCommandCompleter ( server ) ) ; <nl> + <nl> + String line ; <nl> + while ( ! server . isServerStopped ( ) & & server . isServerRunning ( ) ) <nl> + { <nl> + try <nl> + { <nl> + line = reader . readLine ( " > " ) ; <nl> + <nl> + if ( line ! = null ) <nl> + { <nl> + line = line . trim ( ) ; <nl> + if ( ! line . isEmpty ( ) ) <nl> + { <nl> + server . addPendingCommand ( line , server ) ; <nl> + } <nl> + } <nl> + } <nl> + catch ( IOException e ) <nl> + { <nl> + logger . error ( " Exception handling console input " , e ) ; <nl> + } <nl> + } <nl> + <nl> + return true ; <nl> + } <nl> + else <nl> + { <nl> + TerminalConsoleAppender . setFormatter ( new Function < String , String > ( ) { <nl> + <nl> + @ Override <nl> + public String apply ( String text ) <nl> + { <nl> + return EnumChatFormatting . getTextWithoutFormattingCodes ( text ) ; <nl> + } <nl> + <nl> + } ) ; <nl> + return false ; <nl> + } <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / main / resources / log4j2 _ server . xml b / src / main / resources / log4j2 _ server . xml <nl> new file mode 100644 <nl> index 0000000 . . 49f8f3d <nl> - - - / dev / null <nl> + + + b / src / main / resources / log4j2 _ server . xml <nl> @ @ - 0 , 0 + 1 , 61 @ @ <nl> + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > <nl> + < Configuration status = " WARN " packages = " com . mojang . util , net . minecraftforge . server . console " > <nl> + < Appenders > <nl> + < TerminalConsole name = " FmlConsole " > <nl> + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] [ % logger ] : % msg % n " / > <nl> + < / TerminalConsole > <nl> + < TerminalConsole name = " Console " > <nl> + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] : % msg % n " / > <nl> + < / TerminalConsole > <nl> + < ! - - Keep a console appender open so log4j2 doesn ' t close our main out stream if we redirect System . out to the logger - - > <nl> + < Console name = " SysOut " target = " SYSTEM _ OUT " / > <nl> + < Queue name = " ServerGuiConsole " > <nl> + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] [ % logger ] : % replace { % msg } { ( ? i ) \ u00A7 [ 0 - 9A - FK - OR ] } { } % n " / > <nl> + < / Queue > <nl> + < RollingRandomAccessFile name = " File " fileName = " logs / latest . log " filePattern = " logs / % d { yyyy - MM - dd } - % i . log . gz " > <nl> + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] : % msg % n " / > <nl> + < Policies > <nl> + < TimeBasedTriggeringPolicy / > <nl> + < OnStartupTriggeringPolicy / > <nl> + < / Policies > <nl> + < / RollingRandomAccessFile > <nl> + < Routing name = " FmlFile " > <nl> + < Routes pattern = " $ $ { ctx : side } " > <nl> + < Route > <nl> + < RollingRandomAccessFile name = " FmlFile " fileName = " logs / fml - $ { ctx : side } - latest . log " filePattern = " logs / fml - $ { ctx : side } - % i . log " > <nl> + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] [ % logger / % X { mod } ] : % replace { % msg } { ( ? i ) \ u00A7 [ 0 - 9A - FK - OR ] } { } % n " / > <nl> + < DefaultRolloverStrategy max = " 3 " fileIndex = " max " / > <nl> + < Policies > <nl> + < OnStartupTriggeringPolicy / > <nl> + < / Policies > <nl> + < / RollingRandomAccessFile > <nl> + < / Route > <nl> + < Route key = " $ $ { ctx : side } " > <nl> + < RandomAccessFile name = " FmlFile " fileName = " logs / fml - junk - earlystartup . log " > <nl> + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] [ % logger ] : % replace { % msg } { ( ? i ) \ u00A7 [ 0 - 9A - FK - OR ] } { } % n " / > <nl> + < / RandomAccessFile > <nl> + < / Route > <nl> + < / Routes > <nl> + < / Routing > <nl> + < / Appenders > <nl> + < Loggers > <nl> + < Logger level = " info " name = " com . mojang " additivity = " false " > <nl> + < AppenderRef ref = " Console " level = " INFO " / > <nl> + < AppenderRef ref = " File " / > <nl> + < AppenderRef ref = " ServerGuiConsole " level = " INFO " / > <nl> + < / Logger > <nl> + < Logger level = " info " name = " net . minecraft " additivity = " false " > <nl> + < filters > <nl> + < MarkerFilter marker = " NETWORK _ PACKETS " onMatch = " DENY " onMismatch = " NEUTRAL " / > <nl> + < / filters > <nl> + < AppenderRef ref = " Console " level = " INFO " / > <nl> + < AppenderRef ref = " File " / > <nl> + < AppenderRef ref = " ServerGuiConsole " level = " INFO " / > <nl> + < / Logger > <nl> + < Root level = " all " > <nl> + < AppenderRef ref = " FmlConsole " level = " INFO " / > <nl> + < AppenderRef ref = " ServerGuiConsole " level = " INFO " / > <nl> + < AppenderRef ref = " FmlFile " / > <nl> + < / Root > <nl> + < / Loggers > <nl> + < / Configuration >

TEST DIFF:
diff - - git a / rejects / minecraft / net / minecraft / entity / item / EntityMinecart . java . patch . rej b / rejects / minecraft / net / minecraft / entity / item / EntityMinecart . java . patch . rej 
 deleted file mode 100644 
 index bab388b . . 0000000 
 - - - a / rejects / minecraft / net / minecraft / entity / item / EntityMinecart . java . patch . rej 
 + + + / dev / null 
 @ @ - 1 , 289 + 0 , 0 @ @ 
 - + + + + REJECTED PATCH 10 
 - this . posX = d19 + d1 * d18 ; 
 - this . posZ = d20 + d2 * d18 ; 
 - this . setPosition ( this . posX , this . posY , this . posZ ) ; 
 - - double d22 = this . motionX ; 
 - - double d23 = this . motionZ ; 
 - + this . moveMinecartOnRail ( p _ 180460 _ 1 _ ) ; 
 - 
 - - if ( this . riddenByEntity ! = null ) 
 - - { 
 - - d22 * = 0 . 75D ; 
 - - d23 * = 0 . 75D ; 
 - - } 
 - - 
 - - double d13 = this . getMaximumSpeed ( ) ; 
 - - d22 = MathHelper . clamp _ double ( d22 , - d13 , d13 ) ; 
 - - d23 = MathHelper . clamp _ double ( d23 , - d13 , d13 ) ; 
 - - this . moveEntity ( d22 , 0 . 0D , d23 ) ; 
 - - 
 - if ( aint [ 0 ] [ 1 ] ! = 0 & & MathHelper . floor _ double ( this . posX ) - p _ 180460 _ 1 _ . getX ( ) = = aint [ 0 ] [ 0 ] & & MathHelper . floor _ double ( this . posZ ) - p _ 180460 _ 1 _ . getZ ( ) = = aint [ 0 ] [ 2 ] ) 
 - { 
 - this . setPosition ( this . posX , this . posY + ( double ) aint [ 0 ] [ 1 ] , this . posZ ) ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 12 
 - 
 - public void applyEntityCollision ( Entity entityIn ) 
 - { 
 - + 
 - + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . entity . minecart . MinecartCollisionEvent ( this , entityIn ) ) ; 
 - + if ( getCollisionHandler ( ) ! = null ) 
 - + { 
 - + getCollisionHandler ( ) . onEntityCollision ( this , entityIn ) ; 
 - + return ; 
 - + } 
 - if ( ! this . worldObj . isRemote ) 
 - { 
 - if ( ! entityIn . noClip & & ! this . noClip ) 
 - { 
 - if ( entityIn ! = this . riddenByEntity ) 
 - { 
 - - if ( entityIn instanceof EntityLivingBase & & ! ( entityIn instanceof EntityPlayer ) & & ! ( entityIn instanceof EntityIronGolem ) & & this . getMinecartType ( ) = = EntityMinecart . EnumMinecartType . RIDEABLE & & this . motionX * this . motionX + this . motionZ * this . motionZ > 0 . 01D & & this . riddenByEntity = = null & & entityIn . ridingEntity = = null ) 
 - + if ( entityIn instanceof EntityLivingBase & & ! ( entityIn instanceof EntityPlayer ) & & ! ( entityIn instanceof EntityIronGolem ) & & canBeRidden ( ) & & this . motionX * this . motionX + this . motionZ * this . motionZ > 0 . 01D & & this . riddenByEntity = = null & & entityIn . ridingEntity = = null ) 
 - { 
 - entityIn . mountEntity ( this ) ; 
 - } 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 13 
 - double d7 = entityIn . motionX + this . motionX ; 
 - double d8 = entityIn . motionZ + this . motionZ ; 
 - 
 - - if ( ( ( EntityMinecart ) entityIn ) . getMinecartType ( ) = = EntityMinecart . EnumMinecartType . FURNACE & & this . getMinecartType ( ) ! = EntityMinecart . EnumMinecartType . FURNACE ) 
 - + if ( ( ( EntityMinecart ) entityIn ) . isPoweredCart ( ) & & ! isPoweredCart ( ) ) 
 - { 
 - this . motionX * = 0 . 20000000298023224D ; 
 - this . motionZ * = 0 . 20000000298023224D ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 14 
 - entityIn . motionX * = 0 . 949999988079071D ; 
 - entityIn . motionZ * = 0 . 949999988079071D ; 
 - } 
 - - else if ( ( ( EntityMinecart ) entityIn ) . getMinecartType ( ) ! = EntityMinecart . EnumMinecartType . FURNACE & & this . getMinecartType ( ) = = EntityMinecart . EnumMinecartType . FURNACE ) 
 - + else if ( ( ( EntityMinecart ) entityIn ) . isPoweredCart ( ) & & isPoweredCart ( ) ) 
 - { 
 - entityIn . motionX * = 0 . 20000000298023224D ; 
 - entityIn . motionZ * = 0 . 20000000298023224D ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 15 
 - } 
 - } 
 - 
 - + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 - + private BlockPos getCurrentRailPosition ( ) 
 - + { 
 - + int x = MathHelper . floor _ double ( this . posX ) ; 
 - + int y = MathHelper . floor _ double ( this . posY ) ; 
 - + int z = MathHelper . floor _ double ( this . posZ ) ; 
 - + 
 - + if ( BlockRailBase . isRailBlock ( this . worldObj , new BlockPos ( x , y - 1 , z ) ) ) y - - ; 
 - + return new BlockPos ( x , y , z ) ; 
 - + } 
 - + 
 - + protected double getMaxSpeed ( ) 
 - + { 
 - + if ( ! canUseRail ( ) ) return getMaximumSpeed ( ) ; 
 - + BlockPos pos = this . getCurrentRailPosition ( ) ; 
 - + IBlockState state = this . worldObj . getBlockState ( pos ) ; 
 - + if ( ! BlockRailBase . isRailBlock ( state ) ) return getMaximumSpeed ( ) ; 
 - + 
 - + float railMaxSpeed = ( ( BlockRailBase ) state . getBlock ( ) ) . getRailMaxSpeed ( worldObj , this , pos ) ; 
 - + return Math . min ( railMaxSpeed , getCurrentCartSpeedCapOnRail ( ) ) ; 
 - + } 
 - + 
 - + / * * 
 - + * Moved to allow overrides . 
 - + * This code handles minecart movement and speed capping when on a rail . 
 - + * / 
 - + public void moveMinecartOnRail ( BlockPos pos ) 
 - + { 
 - + double mX = this . motionX ; 
 - + double mZ = this . motionZ ; 
 - + 
 - + if ( this . riddenByEntity ! = null ) 
 - + { 
 - + mX * = 0 . 75D ; 
 - + mZ * = 0 . 75D ; 
 - + } 
 - + 
 - + double max = this . getMaxSpeed ( ) ; 
 - + mX = MathHelper . clamp _ double ( mX , - max , max ) ; 
 - + mZ = MathHelper . clamp _ double ( mZ , - max , max ) ; 
 - + this . moveEntity ( mX , 0 . 0D , mZ ) ; 
 - + } 
 - + 
 - + / * * 
 - + * Gets the current global Minecart Collision handler if none 
 - + * is registered , returns null 
 - + * @ return The collision handler or null 
 - + * / 
 - + public static net . minecraftforge . common . IMinecartCollisionHandler getCollisionHandler ( ) 
 - + { 
 - + return collisionHandler ; 
 - + } 
 - + 
 - + / * * 
 - + * Sets the global Minecart Collision handler , overwrites any 
 - + * that is currently set . 
 - + * @ param handler The new handler 
 - + * / 
 - + public static void setCollisionHandler ( net . minecraftforge . common . IMinecartCollisionHandler handler ) 
 - + { 
 - + collisionHandler = handler ; 
 - + } 
 - + 
 - + / * * 
 - + * This function returns an ItemStack that represents this cart . 
 - + * This should be an ItemStack that can be used by the player to place the cart , 
 - + * but is not necessary the item the cart drops when destroyed . 
 - + * @ return An ItemStack that can be used to place the cart . 
 - + * / 
 - + public ItemStack getCartItem ( ) 
 - + { 
 - + if ( this instanceof EntityMinecartFurnace ) 
 - + { 
 - + return new ItemStack ( Items . furnace _ minecart ) ; 
 - + } 
 - + else if ( this instanceof EntityMinecartChest ) 
 - + { 
 - + return new ItemStack ( Items . chest _ minecart ) ; 
 - + } 
 - + else if ( this instanceof EntityMinecartTNT ) 
 - + { 
 - + return new ItemStack ( Items . tnt _ minecart ) ; 
 - + } 
 - + else if ( this instanceof EntityMinecartHopper ) 
 - + { 
 - + return new ItemStack ( Items . hopper _ minecart ) ; 
 - + } 
 - + else if ( this instanceof EntityMinecartCommandBlock ) 
 - + { 
 - + return new ItemStack ( Items . command _ block _ minecart ) ; 
 - + } 
 - + return new ItemStack ( Items . minecart ) ; 
 - + } 
 - + 
 - + / * * 
 - + * Returns true if this cart can currently use rails . 
 - + * This function is mainly used to gracefully detach a minecart from a rail . 
 - + * @ return True if the minecart can use rails . 
 - + * / 
 - + public boolean canUseRail ( ) 
 - + { 
 - + return canUseRail ; 
 - + } 
 - + 
 - + / * * 
 - + * Set whether the minecart can use rails . 
 - + * This function is mainly used to gracefully detach a minecart from a rail . 
 - + * @ param use Whether the minecart can currently use rails . 
 - + * / 
 - + public void setCanUseRail ( boolean use ) 
 - + { 
 - + canUseRail = use ; 
 - + } 
 - + 
 - + / * * 
 - + * Return false if this cart should not call onMinecartPass ( ) and should ignore Powered Rails . 
 - + * @ return True if this cart should call onMinecartPass ( ) . 
 - + * / 
 - + public boolean shouldDoRailFunctions ( ) 
 - + { 
 - + return true ; 
 - + } 
 - + 
 - + / * * 
 - + * Returns true if this cart is self propelled . 
 - + * @ return True if powered . 
 - + * / 
 - + public boolean isPoweredCart ( ) 
 - + { 
 - + return getMinecartType ( ) = = EntityMinecart . EnumMinecartType . FURNACE ; 
 - + } 
 - + 
 - + / * * 
 - + * Returns true if this cart can be ridden by an Entity . 
 - + * @ return True if this cart can be ridden . 
 - + * / 
 - + public boolean canBeRidden ( ) 
 - + { 
 - + return this . getMinecartType ( ) = = EntityMinecart . EnumMinecartType . RIDEABLE ; 
 - + } 
 - + 
 - + / * * 
 - + * Getters / setters for physics variables 
 - + * / 
 - + 
 - + / * * 
 - + * Returns the carts max speed when traveling on rails . Carts going faster 
 - + * than 1 . 1 cause issues with chunk loading . Carts cant traverse slopes or 
 - + * corners at greater than 0 . 5 - 0 . 6 . This value is compared with the rails 
 - + * max speed and the carts current speed cap to determine the carts current 
 - + * max speed . A normal rail ' s max speed is 0 . 4 . 
 - + * 
 - + * @ return Carts max speed . 
 - + * / 
 - + public float getMaxCartSpeedOnRail ( ) 
 - + { 
 - + return 1 . 2f ; 
 - + } 
 - + 
 - + / * * 
 - + * Returns the current speed cap for the cart when traveling on rails . This 
 - + * functions differs from getMaxCartSpeedOnRail ( ) in that it controls 
 - + * current movement and cannot be overridden . The value however can never be 
 - + * higher than getMaxCartSpeedOnRail ( ) . 
 - + * 
 - + * @ return 
 - + * / 
 - + public final float getCurrentCartSpeedCapOnRail ( ) 
 - + { 
 - + return currentSpeedRail ; 
 - + } 
 - + 
 - + public final void setCurrentCartSpeedCapOnRail ( float value ) 
 - + { 
 - + value = Math . min ( value , getMaxCartSpeedOnRail ( ) ) ; 
 - + currentSpeedRail = value ; 
 - + } 
 - + 
 - + public float getMaxSpeedAirLateral ( ) 
 - + { 
 - + return maxSpeedAirLateral ; 
 - + } 
 - + 
 - + public void setMaxSpeedAirLateral ( float value ) 
 - + { 
 - + maxSpeedAirLateral = value ; 
 - + } 
 - + 
 - + public float getMaxSpeedAirVertical ( ) 
 - + { 
 - + return maxSpeedAirVertical ; 
 - + } 
 - + 
 - + public void setMaxSpeedAirVertical ( float value ) 
 - + { 
 - + maxSpeedAirVertical = value ; 
 - + } 
 - + 
 - + public double getDragAir ( ) 
 - + { 
 - + return dragAir ; 
 - + } 
 - + 
 - + public void setDragAir ( double value ) 
 - + { 
 - + dragAir = value ; 
 - + } 
 - + 
 - + public double getSlopeAdjustment ( ) 
 - + { 
 - + return 0 . 0078125D ; 
 - + } 
 - + 
 - + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 - + 
 - public static enum EnumMinecartType 
 - { 
 - RIDEABLE ( 0 , " MinecartRideable " ) , 
 - + + + + END PATCH 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 2b7c2fc . . f8816cf 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 56 , 7 + 56 , 9 @ @ import net . minecraft . util . EnumActionResult ; 
 import net . minecraft . util . EnumFacing ; 
 import net . minecraft . util . EnumHand ; 
 import net . minecraft . util . WeightedRandom ; 
 + import net . minecraft . util . math . AxisAlignedBB ; 
 import net . minecraft . util . math . BlockPos ; 
 + import net . minecraft . util . math . MathHelper ; 
 import net . minecraft . util . text . ITextComponent ; 
 import net . minecraft . util . text . TextComponentString ; 
 import net . minecraft . util . text . TextFormatting ; 
 diff - - git a / src / main / java / net / minecraftforge / common / IMinecartCollisionHandler . java b / src / main / java / net / minecraftforge / common / IMinecartCollisionHandler . java 
 index 2346273 . . b0251dc 100644 
 - - - a / src / main / java / net / minecraftforge / common / IMinecartCollisionHandler . java 
 + + + b / src / main / java / net / minecraftforge / common / IMinecartCollisionHandler . java 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 package net . minecraftforge . common ; 
 
 - import net . minecraft . util . AxisAlignedBB ; 
 + import net . minecraft . util . math . AxisAlignedBB ; 
 import net . minecraft . entity . Entity ; 
 import net . minecraft . entity . item . EntityMinecart ; 
 
 diff - - git a / src / main / java / net / minecraftforge / common / util / EnumHelper . java b / src / main / java / net / minecraftforge / common / util / EnumHelper . java 
 index 066d0a8 . . 8fee636 100644 
 - - - a / src / main / java / net / minecraftforge / common / util / EnumHelper . java 
 + + + b / src / main / java / net / minecraftforge / common / util / EnumHelper . java 
 @ @ - 15 , 8 + 15 , 8 @ @ import net . minecraft . item . EnumAction ; 
 import net . minecraft . item . EnumRarity ; 
 import net . minecraft . item . Item . ToolMaterial ; 
 import net . minecraft . item . ItemArmor . ArmorMaterial ; 
 - import net . minecraft . util . EnumChatFormatting ; 
 - import net . minecraft . util . MovingObjectPosition . MovingObjectType ; 
 + import net . minecraft . util . math . RayTraceResult ; 
 + import net . minecraft . util . text . TextFormatting ; 
 import net . minecraft . world . EnumSkyBlock ; 
 import net . minecraft . world . gen . structure . StructureStrongholdPieces . Stronghold . Door ; 
 import net . minecraftforge . classloading . FMLForgePlugin ; 
 @ @ - 42 , 11 + 42 , 11 @ @ public class EnumHelper 
 { Door . class } , 
 { EnumEnchantmentType . class } , 
 { Sensitivity . class } , 
 - { MovingObjectType . class } , 
 + { RayTraceResult . Type . class } , 
 { EnumSkyBlock . class , int . class } , 
 { EnumStatus . class } , 
 { ToolMaterial . class , int . class , int . class , float . class , float . class , int . class } , 
 - { EnumRarity . class , EnumChatFormatting . class , String . class } 
 + { EnumRarity . class , TextFormatting . class , String . class } 
 } ; 
 
 public static EnumAction addAction ( String name ) 
 @ @ - 82 , 9 + 82 , 9 @ @ public class EnumHelper 
 { 
 return addEnum ( Sensitivity . class , name ) ; 
 } 
 - public static MovingObjectType addMovingObjectType ( String name ) 
 + public static RayTraceResult . Type addMovingObjectType ( String name ) 
 { 
 - return addEnum ( MovingObjectType . class , name ) ; 
 + return addEnum ( RayTraceResult . Type . class , name ) ; 
 } 
 public static EnumSkyBlock addSkyBlock ( String name , int lightValue ) 
 { 
 @ @ - 98 , 7 + 98 , 7 @ @ public class EnumHelper 
 { 
 return addEnum ( ToolMaterial . class , name , harvestLevel , maxUses , efficiency , damage , enchantability ) ; 
 } 
 - public static EnumRarity addRarity ( String name , EnumChatFormatting color , String displayName ) 
 + public static EnumRarity addRarity ( String name , TextFormatting color , String displayName ) 
 { 
 return addEnum ( EnumRarity . class , name , color , displayName ) ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java b / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java 
 index b7b5b22 . . dd93553 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiConfigEntries . java 
 @ @ - 25 , 7 + 25 , 7 @ @ import net . minecraft . client . gui . GuiListExtended ; 
 import net . minecraft . client . gui . GuiScreen ; 
 import net . minecraft . client . gui . GuiTextField ; 
 import net . minecraft . client . resources . I18n ; 
 - import net . minecraft . util . EnumChatFormatting ; 
 + import net . minecraft . util . text . TextFormatting ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . Loader ; 
 import net . minecraftforge . fml . common . ModContainer ; 
 @ @ - 1499 , 25 + 1499 , 25 @ @ public class GuiConfigEntries extends GuiListExtended 
 
 if ( ! comment . equals ( configElement . getLanguageKey ( ) + " . tooltip " ) ) 
 toolTip = new ArrayList < String > ( this . mc . fontRendererObj . listFormattedStringToWidth ( 
 - EnumChatFormatting . GREEN + name + " \ n " + EnumChatFormatting . YELLOW + comment , 300 ) ) ; 
 + TextFormatting . GREEN + name + " \ n " + TextFormatting . YELLOW + comment , 300 ) ) ; 
 else if ( configElement . getComment ( ) ! = null & & ! configElement . getComment ( ) . trim ( ) . isEmpty ( ) ) 
 toolTip = new ArrayList < String > ( this . mc . fontRendererObj . listFormattedStringToWidth ( 
 - EnumChatFormatting . GREEN + name + " \ n " + EnumChatFormatting . YELLOW + configElement . getComment ( ) , 300 ) ) ; 
 + TextFormatting . GREEN + name + " \ n " + TextFormatting . YELLOW + configElement . getComment ( ) , 300 ) ) ; 
 else 
 toolTip = new ArrayList < String > ( this . mc . fontRendererObj . listFormattedStringToWidth ( 
 - EnumChatFormatting . GREEN + name + " \ n " + EnumChatFormatting . RED + " No tooltip defined . " , 300 ) ) ; 
 + TextFormatting . GREEN + name + " \ n " + TextFormatting . RED + " No tooltip defined . " , 300 ) ) ; 
 
 if ( ( configElement . getType ( ) = = ConfigGuiType . INTEGER 
 & & ( Integer . valueOf ( configElement . getMinValue ( ) . toString ( ) ) ! = Integer . MIN _ VALUE | | Integer . valueOf ( configElement . getMaxValue ( ) . toString ( ) ) ! = Integer . MAX _ VALUE ) ) 
 | | ( configElement . getType ( ) = = ConfigGuiType . DOUBLE 
 & & ( Double . valueOf ( configElement . getMinValue ( ) . toString ( ) ) ! = - Double . MAX _ VALUE | | Double . valueOf ( configElement . getMaxValue ( ) . toString ( ) ) ! = Double . MAX _ VALUE ) ) ) 
 toolTip . addAll ( this . mc . fontRendererObj . listFormattedStringToWidth ( 
 - EnumChatFormatting . AQUA + I18n . format ( " fml . configgui . tooltip . defaultNumeric " , configElement . getMinValue ( ) , configElement . getMaxValue ( ) , configElement . getDefault ( ) ) , 300 ) ) ; 
 + TextFormatting . AQUA + I18n . format ( " fml . configgui . tooltip . defaultNumeric " , configElement . getMinValue ( ) , configElement . getMaxValue ( ) , configElement . getDefault ( ) ) , 300 ) ) ; 
 else if ( configElement . getType ( ) ! = ConfigGuiType . CONFIG _ CATEGORY ) 
 - toolTip . addAll ( this . mc . fontRendererObj . listFormattedStringToWidth ( EnumChatFormatting . AQUA + I18n . format ( " fml . configgui . tooltip . default " , configElement . getDefault ( ) ) , 300 ) ) ; 
 + toolTip . addAll ( this . mc . fontRendererObj . listFormattedStringToWidth ( TextFormatting . AQUA + I18n . format ( " fml . configgui . tooltip . default " , configElement . getDefault ( ) ) , 300 ) ) ; 
 
 if ( configElement . requiresMcRestart ( ) | | owningScreen . allRequireMcRestart ) 
 - toolTip . add ( EnumChatFormatting . RED + " [ " + I18n . format ( " fml . configgui . gameRestartTitle " ) + " ] " ) ; 
 + toolTip . add ( TextFormatting . RED + " [ " + I18n . format ( " fml . configgui . gameRestartTitle " ) + " ] " ) ; 
 } 
 
 @ Override 
 @ @ - 1527 , 9 + 1527 , 9 @ @ public class GuiConfigEntries extends GuiListExtended 
 
 if ( drawLabel ) 
 { 
 - String label = ( ! isValidValue ? EnumChatFormatting . RED . toString ( ) : 
 - ( isChanged ? EnumChatFormatting . WHITE . toString ( ) : EnumChatFormatting . GRAY . toString ( ) ) ) 
 - + ( isChanged ? EnumChatFormatting . ITALIC . toString ( ) : " " ) + this . name ; 
 + String label = ( ! isValidValue ? TextFormatting . RED . toString ( ) : 
 + ( isChanged ? TextFormatting . WHITE . toString ( ) : TextFormatting . GRAY . toString ( ) ) ) 
 + + ( isChanged ? TextFormatting . ITALIC . toString ( ) : " " ) + this . name ; 
 this . mc . fontRendererObj . drawString ( 
 label , 
 this . owningScreen . entryList . labelX , 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiEditArray . java b / src / main / java / net / minecraftforge / fml / client / config / GuiEditArray . java 
 index 1202b7e . . 13e4cc9 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiEditArray . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiEditArray . java 
 @ @ - 21 , 7 + 21 , 7 @ @ import net . minecraft . client . Minecraft ; 
 import net . minecraft . client . gui . GuiButton ; 
 import net . minecraft . client . gui . GuiScreen ; 
 import net . minecraft . client . resources . I18n ; 
 - import net . minecraft . util . EnumChatFormatting ; 
 + import net . minecraft . util . text . TextFormatting ; 
 import static net . minecraftforge . fml . client . config . GuiUtils . RESET _ CHAR ; 
 import static net . minecraftforge . fml . client . config . GuiUtils . UNDO _ CHAR ; 
 
 @ @ - 63 , 17 + 63 , 17 @ @ public class GuiEditArray extends GuiScreen 
 String comment ; 
 
 comment = I18n . format ( configElement . getLanguageKey ( ) + " . tooltip " , 
 - " \ n " + EnumChatFormatting . AQUA , configElement . getDefault ( ) , configElement . getMinValue ( ) , configElement . getMaxValue ( ) ) ; 
 + " \ n " + TextFormatting . AQUA , configElement . getDefault ( ) , configElement . getMinValue ( ) , configElement . getMaxValue ( ) ) ; 
 
 if ( ! comment . equals ( configElement . getLanguageKey ( ) + " . tooltip " ) ) 
 toolTip = mc . fontRendererObj . listFormattedStringToWidth ( 
 - EnumChatFormatting . GREEN + propName + " \ n " + EnumChatFormatting . YELLOW + comment , 300 ) ; 
 + TextFormatting . GREEN + propName + " \ n " + TextFormatting . YELLOW + comment , 300 ) ; 
 else if ( configElement . getComment ( ) ! = null & & ! configElement . getComment ( ) . trim ( ) . isEmpty ( ) ) 
 toolTip = mc . fontRendererObj . listFormattedStringToWidth ( 
 - EnumChatFormatting . GREEN + propName + " \ n " + EnumChatFormatting . YELLOW + configElement . getComment ( ) , 300 ) ; 
 + TextFormatting . GREEN + propName + " \ n " + TextFormatting . YELLOW + configElement . getComment ( ) , 300 ) ; 
 else 
 toolTip = mc . fontRendererObj . listFormattedStringToWidth ( 
 - EnumChatFormatting . GREEN + propName + " \ n " + EnumChatFormatting . RED + " No tooltip defined . " , 300 ) ; 
 + TextFormatting . GREEN + propName + " \ n " + TextFormatting . RED + " No tooltip defined . " , 300 ) ; 
 
 if ( parentScreen instanceof GuiConfig ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java b / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java 
 index 85088e8 . . ac86dcb 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiEditArrayEntries . java 
 @ @ - 20 , 7 + 20 , 7 @ @ import net . minecraft . client . Minecraft ; 
 import net . minecraft . client . gui . GuiListExtended ; 
 import net . minecraft . client . gui . GuiTextField ; 
 import net . minecraft . client . resources . I18n ; 
 - import net . minecraft . util . EnumChatFormatting ; 
 + import net . minecraft . util . text . TextFormatting ; 
 import net . minecraftforge . fml . client . config . GuiConfigEntries . ArrayEntry ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 
 @ @ - 560 , 7 + 560 , 7 @ @ public class GuiEditArrayEntries extends GuiListExtended 
 { 
 if ( this . getValue ( ) ! = null & & this . isValidated ) 
 owningEntryList . mc . fontRendererObj . drawString ( 
 - isValidValue ? EnumChatFormatting . GREEN + VALID : EnumChatFormatting . RED + INVALID , 
 + isValidValue ? TextFormatting . GREEN + VALID : TextFormatting . RED + INVALID , 
 listWidth / 4 - owningEntryList . mc . fontRendererObj . getStringWidth ( VALID ) - 2 , 
 y + slotHeight / 2 - owningEntryList . mc . fontRendererObj . FONT _ HEIGHT / 2 , 
 16777215 ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / client / config / GuiSelectString . java b / src / main / java / net / minecraftforge / fml / client / config / GuiSelectString . java 
 index e4975fc . . df245bd 100644 
 - - - a / src / main / java / net / minecraftforge / fml / client / config / GuiSelectString . java 
 + + + b / src / main / java / net / minecraftforge / fml / client / config / GuiSelectString . java 
 @ @ - 21 , 7 + 21 , 8 @ @ import net . minecraft . client . Minecraft ; 
 import net . minecraft . client . gui . GuiButton ; 
 import net . minecraft . client . gui . GuiScreen ; 
 import net . minecraft . client . resources . I18n ; 
 - import net . minecraft . util . EnumChatFormatting ; 
 + import net . minecraft . util . text . TextFormatting ; 
 + 
 import static net . minecraftforge . fml . client . config . GuiUtils . RESET _ CHAR ; 
 import static net . minecraftforge . fml . client . config . GuiUtils . UNDO _ CHAR ; 
 
 @ @ - 62 , 17 + 63 , 17 @ @ public class GuiSelectString extends GuiScreen 
 String comment ; 
 
 comment = I18n . format ( configElement . getLanguageKey ( ) + " . tooltip " , 
 - " \ n " + EnumChatFormatting . AQUA , configElement . getDefault ( ) , configElement . getMinValue ( ) , configElement . getMaxValue ( ) ) ; 
 + " \ n " + TextFormatting . AQUA , configElement . getDefault ( ) , configElement . getMinValue ( ) , configElement . getMaxValue ( ) ) ; 
 
 if ( ! comment . equals ( configElement . getLanguageKey ( ) + " . tooltip " ) ) 
 toolTip = mc . fontRendererObj . listFormattedStringToWidth ( 
 - EnumChatFormatting . GREEN + propName + " \ n " + EnumChatFormatting . YELLOW + comment , 300 ) ; 
 + TextFormatting . GREEN + propName + " \ n " + TextFormatting . YELLOW + comment , 300 ) ; 
 else if ( configElement . getComment ( ) ! = null & & ! configElement . getComment ( ) . trim ( ) . isEmpty ( ) ) 
 toolTip = mc . fontRendererObj . listFormattedStringToWidth ( 
 - EnumChatFormatting . GREEN + propName + " \ n " + EnumChatFormatting . YELLOW + configElement . getComment ( ) , 300 ) ; 
 + TextFormatting . GREEN + propName + " \ n " + TextFormatting . YELLOW + configElement . getComment ( ) , 300 ) ; 
 else 
 toolTip = mc . fontRendererObj . listFormattedStringToWidth ( 
 - EnumChatFormatting . GREEN + propName + " \ n " + EnumChatFormatting . RED + " No tooltip defined . " , 300 ) ; 
 + TextFormatting . GREEN + propName + " \ n " + TextFormatting . RED + " No tooltip defined . " , 300 ) ; 
 
 if ( parentScreen instanceof GuiConfig ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / server / console / ConsoleFormatter . java b / src / main / java / net / minecraftforge / server / console / ConsoleFormatter . java 
 index 51719e0 . . 69796f7 100644 
 - - - a / src / main / java / net / minecraftforge / server / console / ConsoleFormatter . java 
 + + + b / src / main / java / net / minecraftforge / server / console / ConsoleFormatter . java 
 @ @ - 8 , 7 + 8 , 7 @ @ import org . fusesource . jansi . Ansi ; 
 import com . google . common . base . Function ; 
 import com . google . common . collect . ImmutableMap ; 
 
 - import net . minecraft . util . EnumChatFormatting ; 
 + import net . minecraft . util . text . TextFormatting ; 
 
 public final class ConsoleFormatter implements Function < String , String > 
 { 
 @ @ - 20 , 31 + 20 , 31 @ @ public final class ConsoleFormatter implements Function < String , String > 
 private static final String RESET = Ansi . ansi ( ) . reset ( ) . toString ( ) ; 
 
 private static final ImmutableMap < Pattern , String > REPLACEMENTS = ImmutableMap . < Pattern , String > builder ( ) 
 - . put ( compile ( EnumChatFormatting . BLACK ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLACK ) . boldOff ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . DARK _ BLUE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLUE ) . boldOff ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . DARK _ GREEN ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . GREEN ) . boldOff ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . DARK _ AQUA ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . CYAN ) . boldOff ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . DARK _ RED ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . RED ) . boldOff ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . DARK _ PURPLE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . MAGENTA ) . boldOff ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . GOLD ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . YELLOW ) . boldOff ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . GRAY ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . WHITE ) . boldOff ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . DARK _ GRAY ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLACK ) . bold ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . BLUE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLUE ) . bold ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . GREEN ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . GREEN ) . bold ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . AQUA ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . CYAN ) . bold ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . RED ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . RED ) . bold ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . LIGHT _ PURPLE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . MAGENTA ) . bold ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . YELLOW ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . YELLOW ) . bold ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . WHITE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . WHITE ) . bold ( ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . OBFUSCATED ) , Ansi . ansi ( ) . a ( Ansi . Attribute . BLINK _ SLOW ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . BOLD ) , Ansi . ansi ( ) . a ( Ansi . Attribute . UNDERLINE _ DOUBLE ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . STRIKETHROUGH ) , Ansi . ansi ( ) . a ( Ansi . Attribute . STRIKETHROUGH _ ON ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . UNDERLINE ) , Ansi . ansi ( ) . a ( Ansi . Attribute . UNDERLINE ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . ITALIC ) , Ansi . ansi ( ) . a ( Ansi . Attribute . ITALIC ) . toString ( ) ) 
 - . put ( compile ( EnumChatFormatting . RESET ) , RESET ) 
 + . put ( compile ( TextFormatting . BLACK ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLACK ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . DARK _ BLUE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLUE ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . DARK _ GREEN ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . GREEN ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . DARK _ AQUA ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . CYAN ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . DARK _ RED ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . RED ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . DARK _ PURPLE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . MAGENTA ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . GOLD ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . YELLOW ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . GRAY ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . WHITE ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . DARK _ GRAY ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLACK ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . BLUE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLUE ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . GREEN ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . GREEN ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . AQUA ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . CYAN ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . RED ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . RED ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . LIGHT _ PURPLE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . MAGENTA ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . YELLOW ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . YELLOW ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . WHITE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . WHITE ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . OBFUSCATED ) , Ansi . ansi ( ) . a ( Ansi . Attribute . BLINK _ SLOW ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . BOLD ) , Ansi . ansi ( ) . a ( Ansi . Attribute . UNDERLINE _ DOUBLE ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . STRIKETHROUGH ) , Ansi . ansi ( ) . a ( Ansi . Attribute . STRIKETHROUGH _ ON ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . UNDERLINE ) , Ansi . ansi ( ) . a ( Ansi . Attribute . UNDERLINE ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . ITALIC ) , Ansi . ansi ( ) . a ( Ansi . Attribute . ITALIC ) . toString ( ) ) 
 + . put ( compile ( TextFormatting . RESET ) , RESET ) 
 . build ( ) ; 
 
 - private static Pattern compile ( EnumChatFormatting formatting ) 
 + private static Pattern compile ( TextFormatting formatting ) 
 { 
 return Pattern . compile ( formatting . toString ( ) , Pattern . LITERAL | Pattern . CASE _ INSENSITIVE ) ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / server / console / TerminalHandler . java b / src / main / java / net / minecraftforge / server / console / TerminalHandler . java 
 index 142b32b . . 6bf0a2e 100644 
 - - - a / src / main / java / net / minecraftforge / server / console / TerminalHandler . java 
 + + + b / src / main / java / net / minecraftforge / server / console / TerminalHandler . java 
 @ @ - 9 , 7 + 9 , 7 @ @ import com . google . common . base . Function ; 
 
 import jline . console . ConsoleReader ; 
 import net . minecraft . server . dedicated . DedicatedServer ; 
 - import net . minecraft . util . EnumChatFormatting ; 
 + import net . minecraft . util . text . TextFormatting ; 
 
 public final class TerminalHandler 
 { 
 @ @ - 60 , 7 + 60 , 7 @ @ public final class TerminalHandler 
 @ Override 
 public String apply ( String text ) 
 { 
 - return EnumChatFormatting . getTextWithoutFormattingCodes ( text ) ; 
 + return TextFormatting . getTextWithoutFormattingCodes ( text ) ; 
 } 
 
 } ) ;

NEAREST DIFF:
diff - - git a / jsons / 1 . 8 - dev . json b / jsons / 1 . 8 - dev . json 
 index 97f9b7f . . bd8984d 100644 
 - - - a / jsons / 1 . 8 - dev . json 
 + + + b / jsons / 1 . 8 - dev . json 
 @ @ - 9 , 6 + 9 , 11 @ @ 
 " name " : " net . minecraft : launchwrapper : 1 . 12 " 
 } , 
 { 
 + " name " : " jline : jline : 2 . 13 " , 
 + " children " : [ " sources " ] , 
 + " url " : " http : / / repo . maven . apache . org / maven2 " 
 + } , 
 + { 
 " name " : " com . google . code . findbugs : jsr305 : 1 . 3 . 9 " , 
 " children " : [ " sources " ] , 
 " url " : " http : / / repo . maven . apache . org / maven2 " 
 diff - - git a / jsons / 1 . 8 - rel . json b / jsons / 1 . 8 - rel . json 
 index debf80a . . 266f768 100644 
 - - - a / jsons / 1 . 8 - rel . json 
 + + + b / jsons / 1 . 8 - rel . json 
 @ @ - 40 , 6 + 40 , 13 @ @ 
 " serverreq " : true 
 } , 
 { 
 + " name " : " jline : jline : 2 . 13 " , 
 + " url " : " http : / / files . minecraftforge . net / maven / " , 
 + " checksums " : [ " TODO " , " TODO " ] , 
 + " serverreq " : true , 
 + " clientreq " : false 
 + } , 
 + { 
 " name " : " com . typesafe . akka : akka - actor _ 2 . 11 : 2 . 3 . 3 " , 
 " url " : " http : / / files . minecraftforge . net / maven / " , 
 " checksums " : [ " ed62e9fc709ca0f2ff1a3220daa8b70a2870078e " , " 25a86ccfdb6f6dfe08971f4825d0a01be83a6f2e " ] , 
 @ @ - 126 , 4 + 133 , 4 @ @ 
 } 
 ] 
 } 
 - } 
 \ No newline at end of file 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch b / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch 
 index 1af800c . . dd05105 100644 
 - - - a / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch 
 + + + b / patches / minecraft / net / minecraft / server / dedicated / DedicatedServer . java . patch 
 @ @ - 8 , 7 + 8 , 15 @ @ 
 private static final String _ _ OBFID = " CL _ 00001784 " ; 
 
 public DedicatedServer ( File p _ i1508 _ 1 _ ) 
 - @ @ - 113 , 6 + 114 , 8 @ @ 
 + @ @ - 88 , 6 + 89 , 7 @ @ 
 + private static final String _ _ OBFID = " CL _ 00001786 " ; 
 + public void run ( ) 
 + { 
 + + if ( net . minecraftforge . server . console . TerminalHandler . handleCommands ( DedicatedServer . this ) ) return ; 
 + BufferedReader bufferedreader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; 
 + String s4 ; 
 + 
 + @ @ - 113 , 6 + 115 , 8 @ @ 
 field _ 155771 _ h . warn ( " To start the server with more ram , launch it as \ " java - Xmx1024M - Xms1024M - jar minecraft _ server . jar \ " " ) ; 
 } 
 
 @ @ - 17 , 7 + 25 , 7 @ @ 
 field _ 155771 _ h . info ( " Loading properties " ) ; 
 this . field _ 71340 _ o = new PropertyManager ( new File ( " server . properties " ) ) ; 
 this . field _ 154332 _ n = new ServerEula ( new File ( " eula . txt " ) ) ; 
 - @ @ - 204 , 6 + 207 , 7 @ @ 
 + @ @ - 204 , 6 + 208 , 7 @ @ 
 } 
 else 
 { 
 @ @ - 25 , 7 + 33 , 7 @ @ 
 this . func _ 152361 _ a ( new DedicatedPlayerList ( this ) ) ; 
 long j = System . nanoTime ( ) ; 
 
 - @ @ - 250 , 6 + 254 , 7 @ @ 
 + @ @ - 250 , 6 + 255 , 7 @ @ 
 this . func _ 71191 _ d ( ( this . func _ 71207 _ Z ( ) + 8 ) / 16 * 16 ) ; 
 this . func _ 71191 _ d ( MathHelper . func _ 76125 _ a ( this . func _ 71207 _ Z ( ) , 64 , 256 ) ) ; 
 this . field _ 71340 _ o . func _ 73667 _ a ( " max - build - height " , Integer . valueOf ( this . func _ 71207 _ Z ( ) ) ) ; 
 @ @ - 33 , 7 + 41 , 7 @ @ 
 field _ 155771 _ h . info ( " Preparing level \ " " + this . func _ 71270 _ I ( ) + " \ " " ) ; 
 this . func _ 71247 _ a ( this . func _ 71270 _ I ( ) , this . func _ 71270 _ I ( ) , k , worldtype , s2 ) ; 
 long i1 = System . nanoTime ( ) - j ; 
 - @ @ - 278 , 7 + 283 , 7 @ @ 
 + @ @ - 278 , 10 + 284 , 11 @ @ 
 thread1 . start ( ) ; 
 } 
 
 @ @ - 42 , 3 + 50 , 7 @ @ 
 } 
 } 
 } 
 + + public void func _ 145747 _ a ( net . minecraft . util . IChatComponent message ) { field _ 155771 _ h . info ( message . func _ 150254 _ d ( ) ) ; } 
 + 
 + public void func _ 71235 _ a ( WorldSettings . GameType p _ 71235 _ 1 _ ) 
 + { 
 diff - - git a / patches / minecraft / net / minecraft / util / ChatComponentStyle . java . patch b / patches / minecraft / net / minecraft / util / ChatComponentStyle . java . patch 
 new file mode 100644 
 index 0000000 . . c8a5e73 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / util / ChatComponentStyle . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / util / ChatComponentStyle . java 
 + + + + . . / src - work / minecraft / net / minecraft / util / ChatComponentStyle . java 
 + @ @ - 81 , 7 + 81 , 6 @ @ 
 + return stringbuilder . toString ( ) ; 
 + } 
 + 
 + - @ SideOnly ( Side . CLIENT ) 
 + public final String func _ 150254 _ d ( ) 
 + { 
 + StringBuilder stringbuilder = new StringBuilder ( ) ; 
 diff - - git a / patches / minecraft / net / minecraft / util / ChatStyle . java . patch b / patches / minecraft / net / minecraft / util / ChatStyle . java . patch 
 new file mode 100644 
 index 0000000 . . 2622b5e 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / util / ChatStyle . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / util / ChatStyle . java 
 + + + + . . / src - work / minecraft / net / minecraft / util / ChatStyle . java 
 + @ @ - 230 , 7 + 230 , 6 @ @ 
 + return this ; 
 + } 
 + 
 + - @ SideOnly ( Side . CLIENT ) 
 + public String func _ 150218 _ j ( ) 
 + { 
 + if ( this . func _ 150229 _ g ( ) ) 
 diff - - git a / patches / minecraft / net / minecraft / util / IChatComponent . java . patch b / patches / minecraft / net / minecraft / util / IChatComponent . java . patch 
 new file mode 100644 
 index 0000000 . . 2605247 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / util / IChatComponent . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / util / IChatComponent . java 
 + + + + . . / src - work / minecraft / net / minecraft / util / IChatComponent . java 
 + @ @ - 32 , 7 + 32 , 6 @ @ 
 + 
 + String func _ 150260 _ c ( ) ; 
 + 
 + - @ SideOnly ( Side . CLIENT ) 
 + String func _ 150254 _ d ( ) ; 
 + 
 + List func _ 150253 _ a ( ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / launcher / FMLServerTweaker . java b / src / main / java / net / minecraftforge / fml / common / launcher / FMLServerTweaker . java 
 index 7eeed43 . . 359b190 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / launcher / FMLServerTweaker . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / launcher / FMLServerTweaker . java 
 @ @ - 1 , 9 + 1 , 28 @ @ 
 package net . minecraftforge . fml . common . launcher ; 
 
 + import java . io . File ; 
 + import java . util . List ; 
 + 
 + import org . apache . logging . log4j . LogManager ; 
 + import org . apache . logging . log4j . core . LoggerContext ; 
 + 
 import net . minecraft . launchwrapper . LaunchClassLoader ; 
 import net . minecraftforge . fml . relauncher . FMLLaunchHandler ; 
 
 public class FMLServerTweaker extends FMLTweaker { 
 + 
 + @ Override 
 + public void acceptOptions ( List < String > args , File gameDir , File assetsDir , String profile ) 
 + { 
 + super . acceptOptions ( args , gameDir , assetsDir , profile ) ; 
 + 
 + if ( System . getProperty ( " log4j . configurationFile " ) = = null ) 
 + { 
 + System . setProperty ( " log4j . configurationFile " , " log4j2 _ server . xml " ) ; 
 + ( ( LoggerContext ) LogManager . getContext ( false ) ) . reconfigure ( ) ; 
 + } 
 + } 
 + 
 @ Override 
 public String getLaunchTarget ( ) 
 { 
 @ @ - 16 , 6 + 35 , 11 @ @ public class FMLServerTweaker extends FMLTweaker { 
 / / The log4j2 queue is excluded so it is correctly visible from the obfuscated 
 / / and deobfuscated parts of the code . Without , the UI won ' t show anything 
 classLoader . addClassLoaderExclusion ( " com . mojang . util . QueueLogAppender " ) ; 
 + 
 + classLoader . addClassLoaderExclusion ( " jline . " ) ; 
 + classLoader . addClassLoaderExclusion ( " org . fusesource . " ) ; 
 + classLoader . addClassLoaderExclusion ( " net . minecraftforge . server . console . TerminalConsoleAppender " ) ; 
 + 
 FMLLaunchHandler . configureForServerLaunch ( classLoader , this ) ; 
 FMLLaunchHandler . appendCoreMods ( ) ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / server / console / ConsoleCommandCompleter . java b / src / main / java / net / minecraftforge / server / console / ConsoleCommandCompleter . java 
 new file mode 100644 
 index 0000000 . . af0216e 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / server / console / ConsoleCommandCompleter . java 
 @ @ - 0 , 0 + 1 , 96 @ @ 
 + package net . minecraftforge . server . console ; 
 + 
 + import static com . google . common . base . Preconditions . checkNotNull ; 
 + 
 + import java . util . List ; 
 + import java . util . concurrent . Callable ; 
 + import java . util . concurrent . ExecutionException ; 
 + import java . util . concurrent . Future ; 
 + 
 + import org . apache . logging . log4j . LogManager ; 
 + import org . apache . logging . log4j . Logger ; 
 + 
 + import jline . console . completer . Completer ; 
 + import net . minecraft . server . dedicated . DedicatedServer ; 
 + 
 + public final class ConsoleCommandCompleter implements Completer 
 + { 
 + 
 + private static final Logger logger = LogManager . getLogger ( ) ; 
 + private final DedicatedServer server ; 
 + 
 + public ConsoleCommandCompleter ( DedicatedServer server ) 
 + { 
 + this . server = checkNotNull ( server , " server " ) ; 
 + } 
 + 
 + @ Override 
 + public int complete ( String buffer , int cursor , List < CharSequence > candidates ) 
 + { 
 + int len = buffer . length ( ) ; 
 + buffer = buffer . trim ( ) ; 
 + if ( buffer . isEmpty ( ) ) 
 + { 
 + return cursor ; 
 + } 
 + 
 + boolean prefix ; 
 + if ( buffer . charAt ( 0 ) ! = ' / ' ) 
 + { 
 + buffer = ' / ' + buffer ; 
 + prefix = false ; 
 + } 
 + else 
 + { 
 + prefix = true ; 
 + } 
 + 
 + final String input = buffer ; 
 + @ SuppressWarnings ( " unchecked " ) 
 + Future < List < String > > tabComplete = this . server . callFromMainThread ( new Callable < List < String > > ( ) { 
 + 
 + @ Override 
 + public List < String > call ( ) throws Exception 
 + { 
 + return ConsoleCommandCompleter . this . server . getTabCompletions ( ConsoleCommandCompleter . this . server , input , 
 + ConsoleCommandCompleter . this . server . getPosition ( ) ) ; 
 + } 
 + } ) ; 
 + try 
 + { 
 + List < String > completions = tabComplete . get ( ) ; 
 + if ( prefix ) 
 + { 
 + candidates . addAll ( completions ) ; 
 + } 
 + else 
 + { 
 + for ( String completion : completions ) 
 + { 
 + candidates . add ( completion . charAt ( 0 ) = = ' / ' ? completion . substring ( 1 ) : completion ) ; 
 + } 
 + } 
 + 
 + int pos = buffer . lastIndexOf ( ' ' ) ; 
 + if ( pos = = - 1 ) 
 + { 
 + return cursor - len ; 
 + } 
 + else 
 + { 
 + return cursor - len + pos ; 
 + } 
 + } 
 + catch ( InterruptedException e ) 
 + { 
 + Thread . currentThread ( ) . interrupt ( ) ; 
 + } 
 + catch ( ExecutionException e ) 
 + { 
 + logger . error ( " Failed to tab complete " , e ) ; 
 + } 
 + 
 + return cursor ; 
 + } 
 + 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / server / console / ConsoleFormatter . java b / src / main / java / net / minecraftforge / server / console / ConsoleFormatter . java 
 new file mode 100644 
 index 0000000 . . 51719e0 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / server / console / ConsoleFormatter . java 
 @ @ - 0 , 0 + 1 , 63 @ @ 
 + package net . minecraftforge . server . console ; 
 + 
 + import java . util . Map ; 
 + import java . util . regex . Pattern ; 
 + 
 + import org . fusesource . jansi . Ansi ; 
 + 
 + import com . google . common . base . Function ; 
 + import com . google . common . collect . ImmutableMap ; 
 + 
 + import net . minecraft . util . EnumChatFormatting ; 
 + 
 + public final class ConsoleFormatter implements Function < String , String > 
 + { 
 + 
 + public ConsoleFormatter ( ) 
 + { 
 + } 
 + 
 + private static final String RESET = Ansi . ansi ( ) . reset ( ) . toString ( ) ; 
 + 
 + private static final ImmutableMap < Pattern , String > REPLACEMENTS = ImmutableMap . < Pattern , String > builder ( ) 
 + . put ( compile ( EnumChatFormatting . BLACK ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLACK ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . DARK _ BLUE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLUE ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . DARK _ GREEN ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . GREEN ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . DARK _ AQUA ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . CYAN ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . DARK _ RED ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . RED ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . DARK _ PURPLE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . MAGENTA ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . GOLD ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . YELLOW ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . GRAY ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . WHITE ) . boldOff ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . DARK _ GRAY ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLACK ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . BLUE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . BLUE ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . GREEN ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . GREEN ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . AQUA ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . CYAN ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . RED ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . RED ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . LIGHT _ PURPLE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . MAGENTA ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . YELLOW ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . YELLOW ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . WHITE ) , Ansi . ansi ( ) . reset ( ) . fg ( Ansi . Color . WHITE ) . bold ( ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . OBFUSCATED ) , Ansi . ansi ( ) . a ( Ansi . Attribute . BLINK _ SLOW ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . BOLD ) , Ansi . ansi ( ) . a ( Ansi . Attribute . UNDERLINE _ DOUBLE ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . STRIKETHROUGH ) , Ansi . ansi ( ) . a ( Ansi . Attribute . STRIKETHROUGH _ ON ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . UNDERLINE ) , Ansi . ansi ( ) . a ( Ansi . Attribute . UNDERLINE ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . ITALIC ) , Ansi . ansi ( ) . a ( Ansi . Attribute . ITALIC ) . toString ( ) ) 
 + . put ( compile ( EnumChatFormatting . RESET ) , RESET ) 
 + . build ( ) ; 
 + 
 + private static Pattern compile ( EnumChatFormatting formatting ) 
 + { 
 + return Pattern . compile ( formatting . toString ( ) , Pattern . LITERAL | Pattern . CASE _ INSENSITIVE ) ; 
 + } 
 + 
 + @ Override 
 + public String apply ( String text ) 
 + { 
 + for ( Map . Entry < Pattern , String > entry : REPLACEMENTS . entrySet ( ) ) 
 + { 
 + text = entry . getKey ( ) . matcher ( text ) . replaceAll ( entry . getValue ( ) ) ; 
 + } 
 + 
 + return text + RESET ; 
 + } 
 + 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / server / console / TerminalConsoleAppender . java b / src / main / java / net / minecraftforge / server / console / TerminalConsoleAppender . java 
 new file mode 100644 
 index 0000000 . . d32f25f 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / server / console / TerminalConsoleAppender . java 
 @ @ - 0 , 0 + 1 , 168 @ @ 
 + package net . minecraftforge . server . console ; 
 + 
 + import static jline . TerminalFactory . OFF ; 
 + import static jline . console . ConsoleReader . RESET _ LINE ; 
 + import static org . apache . logging . log4j . core . helpers . Booleans . parseBoolean ; 
 + 
 + import java . io . IOException ; 
 + import java . io . PrintStream ; 
 + import java . io . Serializable ; 
 + import java . io . Writer ; 
 + 
 + import org . apache . logging . log4j . core . Filter ; 
 + import org . apache . logging . log4j . core . Layout ; 
 + import org . apache . logging . log4j . core . LogEvent ; 
 + import org . apache . logging . log4j . core . appender . AbstractAppender ; 
 + import org . apache . logging . log4j . core . config . plugins . Plugin ; 
 + import org . apache . logging . log4j . core . config . plugins . PluginAttribute ; 
 + import org . apache . logging . log4j . core . config . plugins . PluginElement ; 
 + import org . apache . logging . log4j . core . config . plugins . PluginFactory ; 
 + import org . apache . logging . log4j . core . layout . PatternLayout ; 
 + import org . apache . logging . log4j . util . PropertiesUtil ; 
 + import org . fusesource . jansi . AnsiConsole ; 
 + 
 + import com . google . common . base . Function ; 
 + import com . google . common . base . Functions ; 
 + 
 + import jline . TerminalFactory ; 
 + import jline . console . ConsoleReader ; 
 + 
 + @ Plugin ( name = " TerminalConsole " , category = " Core " , elementType = " appender " , printObject = true ) 
 + public class TerminalConsoleAppender extends AbstractAppender 
 + { 
 + 
 + private static final boolean ENABLE _ JLINE = PropertiesUtil . getProperties ( ) . getBooleanProperty ( " jline . enable " , true ) ; 
 + 
 + private static final PrintStream out = System . out ; 
 + 
 + private static boolean initialized ; 
 + private static ConsoleReader reader ; 
 + 
 + public static ConsoleReader getReader ( ) 
 + { 
 + return reader ; 
 + } 
 + 
 + private static Function < String , String > formatter = Functions . identity ( ) ; 
 + 
 + public static void setFormatter ( Function < String , String > format ) 
 + { 
 + formatter = format ! = null ? format : Functions . < String > identity ( ) ; 
 + } 
 + 
 + protected TerminalConsoleAppender ( String name , Filter filter , Layout < ? extends Serializable > layout , boolean ignoreExceptions ) 
 + { 
 + super ( name , filter , layout , ignoreExceptions ) ; 
 + } 
 + 
 + @ PluginFactory 
 + public static TerminalConsoleAppender createAppender ( @ PluginAttribute ( " name " ) String name , @ PluginElement ( " Filters " ) Filter filter , 
 + @ PluginElement ( " Layout " ) Layout < ? extends Serializable > layout , @ PluginAttribute ( " ignoreExceptions " ) String ignore ) 
 + { 
 + 
 + if ( name = = null ) 
 + { 
 + LOGGER . error ( " No name provided for TerminalConsoleAppender " ) ; 
 + return null ; 
 + } 
 + if ( layout = = null ) 
 + { 
 + layout = PatternLayout . createLayout ( null , null , null , null , null ) ; 
 + } 
 + 
 + boolean ignoreExceptions = parseBoolean ( ignore , true ) ; 
 + 
 + / / This is handled by jline 
 + System . setProperty ( " log4j . skipJansi " , " true " ) ; 
 + return new TerminalConsoleAppender ( name , filter , layout , ignoreExceptions ) ; 
 + } 
 + 
 + @ Override 
 + public void start ( ) 
 + { 
 + / / Initialize the reader if that hasn ' t happened yet 
 + if ( ! initialized & & reader = = null ) 
 + { 
 + initialized = true ; 
 + 
 + if ( ENABLE _ JLINE ) 
 + { 
 + final boolean hasConsole = System . console ( ) ! = null ; 
 + if ( hasConsole ) 
 + { 
 + try 
 + { 
 + AnsiConsole . systemInstall ( ) ; 
 + reader = new ConsoleReader ( ) ; 
 + reader . setExpandEvents ( false ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + LOGGER . warn ( " Failed to initialize terminal . Falling back to default . " , e ) ; 
 + } 
 + } 
 + 
 + if ( reader = = null ) 
 + { 
 + / / Eclipse doesn ' t support colors and characters like \ r so enabling jline2 on it will 
 + / / just cause a lot of issues with empty lines and weird characters . 
 + / / Enable jline2 only on IntelliJ IDEA to prevent that . 
 + / / Also see : https : / / bugs . eclipse . org / bugs / show _ bug . cgi ? id = 76936 
 + 
 + if ( hasConsole | | System . getProperty ( " java . class . path " ) . contains ( " idea _ rt . jar " ) ) 
 + { 
 + / / Disable advanced jline features 
 + TerminalFactory . configure ( OFF ) ; 
 + TerminalFactory . reset ( ) ; 
 + 
 + try 
 + { 
 + reader = new ConsoleReader ( ) ; 
 + reader . setExpandEvents ( false ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + LOGGER . warn ( " Failed to initialize fallback terminal . Falling back to standard output console . " , e ) ; 
 + } 
 + } 
 + else 
 + { 
 + LOGGER . warn ( " Disabling terminal , you ' re running in an unsupported environment . " ) ; 
 + } 
 + } 
 + } 
 + } 
 + 
 + super . start ( ) ; 
 + } 
 + 
 + @ Override 
 + public void append ( LogEvent event ) 
 + { 
 + if ( reader ! = null ) 
 + { 
 + try 
 + { 
 + Writer out = reader . getOutput ( ) ; 
 + out . write ( RESET _ LINE ) ; 
 + out . write ( formatEvent ( event ) ) ; 
 + 
 + reader . drawLine ( ) ; 
 + reader . flush ( ) ; 
 + } 
 + catch ( IOException ignored ) 
 + { 
 + } 
 + } 
 + else 
 + { 
 + out . print ( formatEvent ( event ) ) ; 
 + } 
 + } 
 + 
 + protected String formatEvent ( LogEvent event ) 
 + { 
 + return formatter . apply ( getLayout ( ) . toSerializable ( event ) . toString ( ) ) ; 
 + } 
 + 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / server / console / TerminalHandler . java b / src / main / java / net / minecraftforge / server / console / TerminalHandler . java 
 new file mode 100644 
 index 0000000 . . 3c9f6af 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / server / console / TerminalHandler . java 
 @ @ - 0 , 0 + 1 , 70 @ @ 
 + package net . minecraftforge . server . console ; 
 + 
 + import java . io . IOException ; 
 + 
 + import org . apache . logging . log4j . LogManager ; 
 + import org . apache . logging . log4j . Logger ; 
 + 
 + import com . google . common . base . Function ; 
 + 
 + import jline . console . ConsoleReader ; 
 + import net . minecraft . server . dedicated . DedicatedServer ; 
 + import net . minecraft . util . EnumChatFormatting ; 
 + 
 + public final class TerminalHandler 
 + { 
 + 
 + private static final Logger logger = LogManager . getLogger ( ) ; 
 + 
 + private TerminalHandler ( ) 
 + { 
 + } 
 + 
 + public static boolean handleCommands ( DedicatedServer server ) 
 + { 
 + final ConsoleReader reader = TerminalConsoleAppender . getReader ( ) ; 
 + if ( reader ! = null ) 
 + { 
 + TerminalConsoleAppender . setFormatter ( new ConsoleFormatter ( ) ) ; 
 + reader . addCompleter ( new ConsoleCommandCompleter ( server ) ) ; 
 + 
 + String line ; 
 + while ( ! server . isServerStopped ( ) & & server . isServerRunning ( ) ) 
 + { 
 + try 
 + { 
 + line = reader . readLine ( " > " ) ; 
 + 
 + if ( line ! = null ) 
 + { 
 + line = line . trim ( ) ; 
 + if ( ! line . isEmpty ( ) ) 
 + { 
 + server . addPendingCommand ( line , server ) ; 
 + } 
 + } 
 + } 
 + catch ( IOException e ) 
 + { 
 + logger . error ( " Exception handling console input " , e ) ; 
 + } 
 + } 
 + 
 + return true ; 
 + } 
 + else 
 + { 
 + TerminalConsoleAppender . setFormatter ( new Function < String , String > ( ) { 
 + 
 + @ Override 
 + public String apply ( String text ) 
 + { 
 + return EnumChatFormatting . getTextWithoutFormattingCodes ( text ) ; 
 + } 
 + 
 + } ) ; 
 + return false ; 
 + } 
 + } 
 + 
 + } 
 diff - - git a / src / main / resources / log4j2 _ server . xml b / src / main / resources / log4j2 _ server . xml 
 new file mode 100644 
 index 0000000 . . 49f8f3d 
 - - - / dev / null 
 + + + b / src / main / resources / log4j2 _ server . xml 
 @ @ - 0 , 0 + 1 , 61 @ @ 
 + < ? xml version = " 1 . 0 " encoding = " UTF - 8 " ? > 
 + < Configuration status = " WARN " packages = " com . mojang . util , net . minecraftforge . server . console " > 
 + < Appenders > 
 + < TerminalConsole name = " FmlConsole " > 
 + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] [ % logger ] : % msg % n " / > 
 + < / TerminalConsole > 
 + < TerminalConsole name = " Console " > 
 + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] : % msg % n " / > 
 + < / TerminalConsole > 
 + < ! - - Keep a console appender open so log4j2 doesn ' t close our main out stream if we redirect System . out to the logger - - > 
 + < Console name = " SysOut " target = " SYSTEM _ OUT " / > 
 + < Queue name = " ServerGuiConsole " > 
 + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] [ % logger ] : % replace { % msg } { ( ? i ) \ u00A7 [ 0 - 9A - FK - OR ] } { } % n " / > 
 + < / Queue > 
 + < RollingRandomAccessFile name = " File " fileName = " logs / latest . log " filePattern = " logs / % d { yyyy - MM - dd } - % i . log . gz " > 
 + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] : % msg % n " / > 
 + < Policies > 
 + < TimeBasedTriggeringPolicy / > 
 + < OnStartupTriggeringPolicy / > 
 + < / Policies > 
 + < / RollingRandomAccessFile > 
 + < Routing name = " FmlFile " > 
 + < Routes pattern = " $ $ { ctx : side } " > 
 + < Route > 
 + < RollingRandomAccessFile name = " FmlFile " fileName = " logs / fml - $ { ctx : side } - latest . log " filePattern = " logs / fml - $ { ctx : side } - % i . log " > 
 + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] [ % logger / % X { mod } ] : % replace { % msg } { ( ? i ) \ u00A7 [ 0 - 9A - FK - OR ] } { } % n " / > 
 + < DefaultRolloverStrategy max = " 3 " fileIndex = " max " / > 
 + < Policies > 
 + < OnStartupTriggeringPolicy / > 
 + < / Policies > 
 + < / RollingRandomAccessFile > 
 + < / Route > 
 + < Route key = " $ $ { ctx : side } " > 
 + < RandomAccessFile name = " FmlFile " fileName = " logs / fml - junk - earlystartup . log " > 
 + < PatternLayout pattern = " [ % d { HH : mm : ss } ] [ % t / % level ] [ % logger ] : % replace { % msg } { ( ? i ) \ u00A7 [ 0 - 9A - FK - OR ] } { } % n " / > 
 + < / RandomAccessFile > 
 + < / Route > 
 + < / Routes > 
 + < / Routing > 
 + < / Appenders > 
 + < Loggers > 
 + < Logger level = " info " name = " com . mojang " additivity = " false " > 
 + < AppenderRef ref = " Console " level = " INFO " / > 
 + < AppenderRef ref = " File " / > 
 + < AppenderRef ref = " ServerGuiConsole " level = " INFO " / > 
 + < / Logger > 
 + < Logger level = " info " name = " net . minecraft " additivity = " false " > 
 + < filters > 
 + < MarkerFilter marker = " NETWORK _ PACKETS " onMatch = " DENY " onMismatch = " NEUTRAL " / > 
 + < / filters > 
 + < AppenderRef ref = " Console " level = " INFO " / > 
 + < AppenderRef ref = " File " / > 
 + < AppenderRef ref = " ServerGuiConsole " level = " INFO " / > 
 + < / Logger > 
 + < Root level = " all " > 
 + < AppenderRef ref = " FmlConsole " level = " INFO " / > 
 + < AppenderRef ref = " ServerGuiConsole " level = " INFO " / > 
 + < AppenderRef ref = " FmlFile " / > 
 + < / Root > 
 + < / Loggers > 
 + < / Configuration >
