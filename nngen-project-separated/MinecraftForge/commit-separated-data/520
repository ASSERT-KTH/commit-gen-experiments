BLEU SCORE: 0.028465126651392333

TEST MSG: Improve performance of inserting into inventory wrappers
GENERATED MSG: Fix SidedInvWrapper accessing wrong slots for setStackInSlot .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / items / wrapper / InvWrapper . java b / src / main / java / net / minecraftforge / items / wrapper / InvWrapper . java <nl> index 88c60bb . . 6a41634 100644 <nl> - - - a / src / main / java / net / minecraftforge / items / wrapper / InvWrapper . java <nl> + + + b / src / main / java / net / minecraftforge / items / wrapper / InvWrapper . java <nl> @ @ - 75 , 9 + 75 , 6 @ @ public class InvWrapper implements IItemHandlerModifiable <nl> if ( stack . isEmpty ( ) ) <nl> return ItemStack . EMPTY ; <nl> <nl> - if ( ! getInv ( ) . isItemValidForSlot ( slot , stack ) ) <nl> - return stack ; <nl> - <nl> ItemStack stackInSlot = getInv ( ) . getStackInSlot ( slot ) ; <nl> <nl> int m ; <nl> @ @ - 86 , 6 + 83 , 9 @ @ public class InvWrapper implements IItemHandlerModifiable <nl> if ( ! ItemHandlerHelper . canItemStacksStack ( stack , stackInSlot ) ) <nl> return stack ; <nl> <nl> + if ( ! getInv ( ) . isItemValidForSlot ( slot , stack ) ) <nl> + return stack ; <nl> + <nl> m = Math . min ( stack . getMaxStackSize ( ) , getSlotLimit ( slot ) ) - stackInSlot . getCount ( ) ; <nl> <nl> if ( stack . getCount ( ) < = m ) <nl> @ @ - 121 , 6 + 121 , 9 @ @ public class InvWrapper implements IItemHandlerModifiable <nl> } <nl> else <nl> { <nl> + if ( ! getInv ( ) . isItemValidForSlot ( slot , stack ) ) <nl> + return stack ; <nl> + <nl> m = Math . min ( stack . getMaxStackSize ( ) , getSlotLimit ( slot ) ) ; <nl> if ( m < stack . getCount ( ) ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java b / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java <nl> index c71bedf . . 8e5e32f 100644 <nl> - - - a / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java <nl> + + + b / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java <nl> @ @ - 93 , 9 + 93 , 6 @ @ public class SidedInvWrapper implements IItemHandlerModifiable <nl> if ( slot1 = = - 1 ) <nl> return stack ; <nl> <nl> - if ( ! inv . isItemValidForSlot ( slot1 , stack ) | | ! inv . canInsertItem ( slot1 , stack , side ) ) <nl> - return stack ; <nl> - <nl> ItemStack stackInSlot = inv . getStackInSlot ( slot1 ) ; <nl> <nl> int m ; <nl> @ @ - 104 , 6 + 101 , 9 @ @ public class SidedInvWrapper implements IItemHandlerModifiable <nl> if ( ! ItemHandlerHelper . canItemStacksStack ( stack , stackInSlot ) ) <nl> return stack ; <nl> <nl> + if ( ! inv . isItemValidForSlot ( slot1 , stack ) | | ! inv . canInsertItem ( slot1 , stack , side ) ) <nl> + return stack ; <nl> + <nl> m = Math . min ( stack . getMaxStackSize ( ) , getSlotLimit ( slot ) ) - stackInSlot . getCount ( ) ; <nl> <nl> if ( stack . getCount ( ) < = m ) <nl> @ @ - 137 , 6 + 137 , 9 @ @ public class SidedInvWrapper implements IItemHandlerModifiable <nl> } <nl> else <nl> { <nl> + if ( ! inv . isItemValidForSlot ( slot1 , stack ) | | ! inv . canInsertItem ( slot1 , stack , side ) ) <nl> + return stack ; <nl> + <nl> m = Math . min ( stack . getMaxStackSize ( ) , getSlotLimit ( slot ) ) ; <nl> if ( m < stack . getCount ( ) ) <nl> {
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / items / VanillaDoubleChestItemHandler . java b / src / main / java / net / minecraftforge / items / VanillaDoubleChestItemHandler . java <nl> index 90232a6 . . 05839f6 100644 <nl> - - - a / src / main / java / net / minecraftforge / items / VanillaDoubleChestItemHandler . java <nl> + + + b / src / main / java / net / minecraftforge / items / VanillaDoubleChestItemHandler . java <nl> @ @ - 12 , 7 + 12 , 7 @ @ import java . lang . ref . WeakReference ; <nl> <nl> import com . google . common . base . Objects ; <nl> <nl> - public class VanillaDoubleChestItemHandler extends WeakReference < TileEntityChest > implements IItemHandler <nl> + public class VanillaDoubleChestItemHandler extends WeakReference < TileEntityChest > implements IItemHandlerModifiable <nl> { <nl> / / Dummy cache value to signify that we have checked and definitely found no adjacent chests <nl> public static final VanillaDoubleChestItemHandler NO _ ADJACENT _ CHESTS _ INSTANCE = new VanillaDoubleChestItemHandler ( null , null , false ) ; <nl> @ @ - 92 , 6 + 92 , 22 @ @ public class VanillaDoubleChestItemHandler extends WeakReference < TileEntityChest <nl> } <nl> <nl> @ Override <nl> + public void setStackInSlot ( int slot , ItemStack stack ) <nl> + { <nl> + boolean accessingUpperChest = slot < 27 ; <nl> + int targetSlot = accessingUpperChest ? slot : slot - 27 ; <nl> + TileEntityChest chest = getChest ( accessingUpperChest ) ; <nl> + if ( chest ! = null ) <nl> + { <nl> + IItemHandler singleHandler = chest . getSingleChestHandler ( ) ; <nl> + if ( singleHandler instanceof IItemHandlerModifiable ) <nl> + { <nl> + ( ( IItemHandlerModifiable ) singleHandler ) . setStackInSlot ( targetSlot , stack ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> public ItemStack insertItem ( int slot , ItemStack stack , boolean simulate ) <nl> { <nl> boolean accessingUpperChest = slot < 27 ; <nl> diff - - git a / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java b / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java <nl> index 8d0d61a . . 8139a94 100644 <nl> - - - a / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java <nl> + + + b / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java <nl> @ @ - 144 , 7 + 144 , 10 @ @ public class SidedInvWrapper implements IItemHandlerModifiable <nl> @ Override <nl> public void setStackInSlot ( int slot , ItemStack stack ) <nl> { <nl> - inv . setInventorySlotContents ( slot , stack ) ; <nl> + int slot1 = getSlot ( inv , slot , side ) ; <nl> + <nl> + if ( slot1 ! = - 1 ) <nl> + inv . setInventorySlotContents ( slot1 , stack ) ; <nl> } <nl> <nl> @ Override

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / items / wrapper / InvWrapper . java b / src / main / java / net / minecraftforge / items / wrapper / InvWrapper . java 
 index 88c60bb . . 6a41634 100644 
 - - - a / src / main / java / net / minecraftforge / items / wrapper / InvWrapper . java 
 + + + b / src / main / java / net / minecraftforge / items / wrapper / InvWrapper . java 
 @ @ - 75 , 9 + 75 , 6 @ @ public class InvWrapper implements IItemHandlerModifiable 
 if ( stack . isEmpty ( ) ) 
 return ItemStack . EMPTY ; 
 
 - if ( ! getInv ( ) . isItemValidForSlot ( slot , stack ) ) 
 - return stack ; 
 - 
 ItemStack stackInSlot = getInv ( ) . getStackInSlot ( slot ) ; 
 
 int m ; 
 @ @ - 86 , 6 + 83 , 9 @ @ public class InvWrapper implements IItemHandlerModifiable 
 if ( ! ItemHandlerHelper . canItemStacksStack ( stack , stackInSlot ) ) 
 return stack ; 
 
 + if ( ! getInv ( ) . isItemValidForSlot ( slot , stack ) ) 
 + return stack ; 
 + 
 m = Math . min ( stack . getMaxStackSize ( ) , getSlotLimit ( slot ) ) - stackInSlot . getCount ( ) ; 
 
 if ( stack . getCount ( ) < = m ) 
 @ @ - 121 , 6 + 121 , 9 @ @ public class InvWrapper implements IItemHandlerModifiable 
 } 
 else 
 { 
 + if ( ! getInv ( ) . isItemValidForSlot ( slot , stack ) ) 
 + return stack ; 
 + 
 m = Math . min ( stack . getMaxStackSize ( ) , getSlotLimit ( slot ) ) ; 
 if ( m < stack . getCount ( ) ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java b / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java 
 index c71bedf . . 8e5e32f 100644 
 - - - a / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java 
 + + + b / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java 
 @ @ - 93 , 9 + 93 , 6 @ @ public class SidedInvWrapper implements IItemHandlerModifiable 
 if ( slot1 = = - 1 ) 
 return stack ; 
 
 - if ( ! inv . isItemValidForSlot ( slot1 , stack ) | | ! inv . canInsertItem ( slot1 , stack , side ) ) 
 - return stack ; 
 - 
 ItemStack stackInSlot = inv . getStackInSlot ( slot1 ) ; 
 
 int m ; 
 @ @ - 104 , 6 + 101 , 9 @ @ public class SidedInvWrapper implements IItemHandlerModifiable 
 if ( ! ItemHandlerHelper . canItemStacksStack ( stack , stackInSlot ) ) 
 return stack ; 
 
 + if ( ! inv . isItemValidForSlot ( slot1 , stack ) | | ! inv . canInsertItem ( slot1 , stack , side ) ) 
 + return stack ; 
 + 
 m = Math . min ( stack . getMaxStackSize ( ) , getSlotLimit ( slot ) ) - stackInSlot . getCount ( ) ; 
 
 if ( stack . getCount ( ) < = m ) 
 @ @ - 137 , 6 + 137 , 9 @ @ public class SidedInvWrapper implements IItemHandlerModifiable 
 } 
 else 
 { 
 + if ( ! inv . isItemValidForSlot ( slot1 , stack ) | | ! inv . canInsertItem ( slot1 , stack , side ) ) 
 + return stack ; 
 + 
 m = Math . min ( stack . getMaxStackSize ( ) , getSlotLimit ( slot ) ) ; 
 if ( m < stack . getCount ( ) ) 
 {

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / items / VanillaDoubleChestItemHandler . java b / src / main / java / net / minecraftforge / items / VanillaDoubleChestItemHandler . java 
 index 90232a6 . . 05839f6 100644 
 - - - a / src / main / java / net / minecraftforge / items / VanillaDoubleChestItemHandler . java 
 + + + b / src / main / java / net / minecraftforge / items / VanillaDoubleChestItemHandler . java 
 @ @ - 12 , 7 + 12 , 7 @ @ import java . lang . ref . WeakReference ; 
 
 import com . google . common . base . Objects ; 
 
 - public class VanillaDoubleChestItemHandler extends WeakReference < TileEntityChest > implements IItemHandler 
 + public class VanillaDoubleChestItemHandler extends WeakReference < TileEntityChest > implements IItemHandlerModifiable 
 { 
 / / Dummy cache value to signify that we have checked and definitely found no adjacent chests 
 public static final VanillaDoubleChestItemHandler NO _ ADJACENT _ CHESTS _ INSTANCE = new VanillaDoubleChestItemHandler ( null , null , false ) ; 
 @ @ - 92 , 6 + 92 , 22 @ @ public class VanillaDoubleChestItemHandler extends WeakReference < TileEntityChest 
 } 
 
 @ Override 
 + public void setStackInSlot ( int slot , ItemStack stack ) 
 + { 
 + boolean accessingUpperChest = slot < 27 ; 
 + int targetSlot = accessingUpperChest ? slot : slot - 27 ; 
 + TileEntityChest chest = getChest ( accessingUpperChest ) ; 
 + if ( chest ! = null ) 
 + { 
 + IItemHandler singleHandler = chest . getSingleChestHandler ( ) ; 
 + if ( singleHandler instanceof IItemHandlerModifiable ) 
 + { 
 + ( ( IItemHandlerModifiable ) singleHandler ) . setStackInSlot ( targetSlot , stack ) ; 
 + } 
 + } 
 + } 
 + 
 + @ Override 
 public ItemStack insertItem ( int slot , ItemStack stack , boolean simulate ) 
 { 
 boolean accessingUpperChest = slot < 27 ; 
 diff - - git a / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java b / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java 
 index 8d0d61a . . 8139a94 100644 
 - - - a / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java 
 + + + b / src / main / java / net / minecraftforge / items / wrapper / SidedInvWrapper . java 
 @ @ - 144 , 7 + 144 , 10 @ @ public class SidedInvWrapper implements IItemHandlerModifiable 
 @ Override 
 public void setStackInSlot ( int slot , ItemStack stack ) 
 { 
 - inv . setInventorySlotContents ( slot , stack ) ; 
 + int slot1 = getSlot ( inv , slot , side ) ; 
 + 
 + if ( slot1 ! = - 1 ) 
 + inv . setInventorySlotContents ( slot1 , stack ) ; 
 } 
 
 @ Override
