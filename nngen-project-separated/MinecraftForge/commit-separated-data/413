BLEU SCORE: 0.0114347838903095

TEST MSG: Added Block : : getFogColor to allow custom blocks to control fog colors while inside them .
GENERATED MSG: Stop rotation of extended pistons , beds , and double chests Fixes # 3634

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> index b6bb5f4 . . b34d024 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / Block . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> @ @ - 227 , 7 + 227 , 7 @ @ <nl> public SoundType func _ 185467 _ w ( ) <nl> { <nl> return this . field _ 149762 _ H ; <nl> - @ @ - 936 , 6 + 951 , 1218 @ @ <nl> + @ @ - 936 , 6 + 951 , 1255 @ @ <nl> { <nl> } <nl> <nl> @ @ - 1400 , 6 + 1400 , 43 @ @ <nl> + } <nl> + <nl> + / * * <nl> + + * Use this to change the fog color used when the entity is " inside " a material . <nl> + + * Vec3d is used here as " r / g / b " 0 - 1 values . <nl> + + * <nl> + + * @ param world The world . <nl> + + * @ param pos The position at the entity viewport . <nl> + + * @ param state The state at the entity viewport . <nl> + + * @ param entity the entity <nl> + + * @ param originalColor The current fog color , You are not expected to use this , Return as the default if applicable . <nl> + + * @ return The new fog color . <nl> + + * / <nl> + + @ SideOnly ( Side . CLIENT ) <nl> + + public Vec3d getFogColor ( World world , BlockPos pos , IBlockState state , Entity entity , Vec3d originalColor , float partialTicks ) <nl> + + { <nl> + + if ( state . func _ 185904 _ a ( ) = = Material . field _ 151586 _ h ) <nl> + + { <nl> + + float f12 = 0 . 0F ; <nl> + + <nl> + + if ( entity instanceof net . minecraft . entity . EntityLivingBase ) <nl> + + { <nl> + + net . minecraft . entity . EntityLivingBase ent = ( net . minecraft . entity . EntityLivingBase ) entity ; <nl> + + f12 = ( float ) net . minecraft . enchantment . EnchantmentHelper . func _ 185292 _ c ( ent ) * 0 . 2F ; <nl> + + <nl> + + if ( ent . func _ 70644 _ a ( net . minecraft . init . MobEffects . field _ 76427 _ o ) ) <nl> + + { <nl> + + f12 = f12 * 0 . 3F + 0 . 6F ; <nl> + + } <nl> + + } <nl> + + return new Vec3d ( 0 . 02F + f12 , 0 . 02F + f12 , 0 . 2F + f12 ) ; <nl> + + } <nl> + + else if ( state . func _ 185904 _ a ( ) = = Material . field _ 151587 _ i ) <nl> + + { <nl> + + return new Vec3d ( 0 . 6F , 0 . 1F , 0 . 0F ) ; <nl> + + } <nl> + + return originalColor ; <nl> + + } <nl> + + <nl> + + / * * <nl> + * Gets the { @ link IBlockState } to place <nl> + * @ param world The world the block is being placed in <nl> + * @ param pos The position the block is being placed at <nl> @ @ - 1446 , 7 + 1483 , 7 @ @ <nl> public static void func _ 149671 _ p ( ) <nl> { <nl> func _ 176215 _ a ( 0 , field _ 176230 _ a , ( new BlockAir ( ) ) . func _ 149663 _ c ( " air " ) ) ; <nl> - @ @ - 1247 , 14 + 2474 , 7 @ @ <nl> + @ @ - 1247 , 14 + 2511 , 7 @ @ <nl> } <nl> else <nl> { <nl> diff - - git a / patches / minecraft / net / minecraft / block / BlockLiquid . java . patch b / patches / minecraft / net / minecraft / block / BlockLiquid . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 778caf7 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / block / BlockLiquid . java . patch <nl> @ @ - 0 , 0 + 1 , 32 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / block / BlockLiquid . java <nl> + + + + . . / src - work / minecraft / net / minecraft / block / BlockLiquid . java <nl> + @ @ - 452 , 4 + 452 , 29 @ @ <nl> + { <nl> + return BlockFaceShape . UNDEFINED ; <nl> + } <nl> + + <nl> + + @ Override <nl> + + @ SideOnly ( Side . CLIENT ) <nl> + + public Vec3d getFogColor ( World world , BlockPos pos , IBlockState state , Entity entity , Vec3d originalColor , float partialTicks ) <nl> + + { <nl> + + Vec3d viewport = net . minecraft . client . renderer . ActiveRenderInfo . func _ 178806 _ a ( entity , partialTicks ) ; <nl> + + <nl> + + if ( state . func _ 185904 _ a ( ) . func _ 76224 _ d ( ) ) <nl> + + { <nl> + + float height = 0 . 0F ; <nl> + + if ( state . func _ 177230 _ c ( ) instanceof BlockLiquid ) <nl> + + { <nl> + + height = func _ 149801 _ b ( state . func _ 177229 _ b ( field _ 176367 _ b ) ) - 0 . 11111111F ; <nl> + + } <nl> + + float f1 = ( float ) ( pos . func _ 177956 _ o ( ) + 1 ) - height ; <nl> + + if ( viewport . field _ 72448 _ b > ( double ) f1 ) <nl> + + { <nl> + + BlockPos upPos = pos . func _ 177984 _ a ( ) ; <nl> + + IBlockState upState = world . func _ 180495 _ p ( upPos ) ; <nl> + + return upState . func _ 177230 _ c ( ) . getFogColor ( world , upPos , upState , entity , originalColor , partialTicks ) ; <nl> + + } <nl> + + } <nl> + + <nl> + + return super . getFogColor ( world , pos , state , entity , originalColor , partialTicks ) ; <nl> + + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch <nl> index 874491c . . d5c8782 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch <nl> @ @ - 167 , 7 + 167 , 47 @ @ <nl> float f = this . field _ 78531 _ r . field _ 71441 _ e . func _ 72867 _ j ( p _ 78474 _ 1 _ ) ; <nl> <nl> if ( f > 0 . 0F ) <nl> - @ @ - 1845 , 6 + 1872 , 13 @ @ <nl> + @ @ - 1749 , 30 + 1776 , 17 @ @ <nl> + this . field _ 175082 _ R = ( float ) vec3d3 . field _ 72448 _ b ; <nl> + this . field _ 175081 _ S = ( float ) vec3d3 . field _ 72449 _ c ; <nl> + } <nl> + - else if ( iblockstate . func _ 185904 _ a ( ) = = Material . field _ 151586 _ h ) <nl> + + else <nl> + { <nl> + - float f12 = 0 . 0F ; <nl> + - <nl> + - if ( entity instanceof EntityLivingBase ) <nl> + - { <nl> + - f12 = ( float ) EnchantmentHelper . func _ 185292 _ c ( ( EntityLivingBase ) entity ) * 0 . 2F ; <nl> + - <nl> + - if ( ( ( EntityLivingBase ) entity ) . func _ 70644 _ a ( MobEffects . field _ 76427 _ o ) ) <nl> + - { <nl> + - f12 = f12 * 0 . 3F + 0 . 6F ; <nl> + - } <nl> + - } <nl> + - <nl> + - this . field _ 175080 _ Q = 0 . 02F + f12 ; <nl> + - this . field _ 175082 _ R = 0 . 02F + f12 ; <nl> + - this . field _ 175081 _ S = 0 . 2F + f12 ; <nl> + + / / Forge Moved to Block . <nl> + + Vec3d viewport = ActiveRenderInfo . func _ 178806 _ a ( entity , p _ 78466 _ 1 _ ) ; <nl> + + BlockPos viewportPos = new BlockPos ( viewport ) ; <nl> + + IBlockState viewportState = this . field _ 78531 _ r . field _ 71441 _ e . func _ 180495 _ p ( viewportPos ) ; <nl> + + Vec3d inMaterialColor = viewportState . func _ 177230 _ c ( ) . getFogColor ( this . field _ 78531 _ r . field _ 71441 _ e , viewportPos , viewportState , entity , new Vec3d ( field _ 175080 _ Q , field _ 175082 _ R , field _ 175081 _ S ) , p _ 78466 _ 1 _ ) ; <nl> + + this . field _ 175080 _ Q = ( float ) inMaterialColor . field _ 72450 _ a ; <nl> + + this . field _ 175082 _ R = ( float ) inMaterialColor . field _ 72448 _ b ; <nl> + + this . field _ 175081 _ S = ( float ) inMaterialColor . field _ 72449 _ c ; <nl> + } <nl> + - else if ( iblockstate . func _ 185904 _ a ( ) = = Material . field _ 151587 _ i ) <nl> + - { <nl> + - this . field _ 175080 _ Q = 0 . 6F ; <nl> + - this . field _ 175082 _ R = 0 . 1F ; <nl> + - this . field _ 175081 _ S = 0 . 0F ; <nl> + - } <nl> + <nl> + float f13 = this . field _ 78535 _ ad + ( this . field _ 78539 _ ae - this . field _ 78535 _ ad ) * p _ 78466 _ 1 _ ; <nl> + this . field _ 175080 _ Q * = f13 ; <nl> + @ @ - 1845 , 6 + 1859 , 13 @ @ <nl> this . field _ 175081 _ S = f7 ; <nl> } <nl> <nl> @ @ - 181 , 7 + 221 , 7 @ @ <nl> GlStateManager . func _ 179082 _ a ( this . field _ 175080 _ Q , this . field _ 175082 _ R , this . field _ 175081 _ S , 0 . 0F ) ; <nl> } <nl> <nl> - @ @ - 1855 , 7 + 1889 , 9 @ @ <nl> + @ @ - 1855 , 7 + 1876 , 9 @ @ <nl> GlStateManager . func _ 187432 _ a ( 0 . 0F , - 1 . 0F , 0 . 0F ) ; <nl> GlStateManager . func _ 179131 _ c ( 1 . 0F , 1 . 0F , 1 . 0F , 1 . 0F ) ; <nl> IBlockState iblockstate = ActiveRenderInfo . func _ 186703 _ a ( this . field _ 78531 _ r . field _ 71441 _ e , entity , p _ 78468 _ 2 _ ) ; <nl> @ @ - 192 , 7 + 232 , 7 @ @ <nl> if ( entity instanceof EntityLivingBase & & ( ( EntityLivingBase ) entity ) . func _ 70644 _ a ( MobEffects . field _ 76440 _ q ) ) <nl> { <nl> float f1 = 5 . 0F ; <nl> - @ @ - 1940 , 6 + 1976 , 7 @ @ <nl> + @ @ - 1940 , 6 + 1963 , 7 @ @ <nl> GlStateManager . func _ 179102 _ b ( f * 0 . 05F ) ; <nl> GlStateManager . func _ 179153 _ c ( Math . min ( f , 192 . 0F ) * 0 . 5F ) ; <nl> } <nl> diff - - git a / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java <nl> new file mode 100644 <nl> index 0000000 . . caa4e3a <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java <nl> @ @ - 0 , 0 + 1 , 76 @ @ <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import net . minecraft . block . Block ; <nl> + import net . minecraft . block . material . Material ; <nl> + import net . minecraft . block . state . IBlockState ; <nl> + import net . minecraft . client . renderer . block . model . ModelResourceLocation ; <nl> + import net . minecraft . client . renderer . block . statemap . StateMapperBase ; <nl> + import net . minecraft . creativetab . CreativeTabs ; <nl> + import net . minecraft . entity . Entity ; <nl> + import net . minecraft . item . Item ; <nl> + import net . minecraft . item . ItemBlock ; <nl> + import net . minecraft . util . math . BlockPos ; <nl> + import net . minecraft . util . math . Vec3d ; <nl> + import net . minecraft . world . World ; <nl> + import net . minecraftforge . client . event . ModelRegistryEvent ; <nl> + import net . minecraftforge . client . model . ModelLoader ; <nl> + import net . minecraftforge . event . RegistryEvent ; <nl> + import net . minecraftforge . fluids . BlockFluidClassic ; <nl> + import net . minecraftforge . fluids . FluidRegistry ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . Mod . EventBusSubscriber ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + import net . minecraftforge . fml . common . registry . GameRegistry . ObjectHolder ; <nl> + <nl> + @ EventBusSubscriber <nl> + @ Mod ( modid = FogColorInsideMaterialTest . MOD _ ID , name = " FogColor inside material debug . " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> + public class FogColorInsideMaterialTest <nl> + { <nl> + <nl> + public static final String MOD _ ID = " fogcolorinsidematerialtest " ; <nl> + <nl> + @ ObjectHolder ( " test _ fluid " ) <nl> + public static final Block FLUID _ BLOCK = null ; <nl> + @ ObjectHolder ( " test _ fluid " ) <nl> + public static final Item FLUID _ ITEM = null ; <nl> + <nl> + @ SubscribeEvent <nl> + public static void registerBlocks ( RegistryEvent . Register < Block > event ) <nl> + { <nl> + Block fluid = new BlockFluidClassic ( FluidRegistry . WATER , Material . WATER ) <nl> + { <nl> + @ Override <nl> + public Vec3d getFogColor ( World world , BlockPos pos , IBlockState state , Entity entity , Vec3d originalColor , float partialTicks ) <nl> + { <nl> + return new Vec3d ( 0 . 6F , 0 . 1F , 0 . 0F ) ; <nl> + } <nl> + } ; <nl> + fluid . setCreativeTab ( CreativeTabs . BUILDING _ BLOCKS ) ; <nl> + fluid . setUnlocalizedName ( MOD _ ID + " : " + " test _ fluid " ) ; <nl> + fluid . setRegistryName ( " test _ fluid " ) ; <nl> + event . getRegistry ( ) . register ( fluid ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public static void registerItems ( RegistryEvent . Register < Item > event ) <nl> + { <nl> + event . getRegistry ( ) . register ( new ItemBlock ( FLUID _ BLOCK ) . setRegistryName ( FLUID _ BLOCK . getRegistryName ( ) ) ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public static void registerModels ( ModelRegistryEvent event ) <nl> + { <nl> + ModelResourceLocation fluidLocation = new ModelResourceLocation ( MOD _ ID . toLowerCase ( ) + " : test _ fluid " , " fluid " ) ; <nl> + ModelLoader . registerItemVariants ( FLUID _ ITEM ) ; <nl> + ModelLoader . setCustomMeshDefinition ( FLUID _ ITEM , stack - > fluidLocation ) ; <nl> + ModelLoader . setCustomStateMapper ( FLUID _ BLOCK , new StateMapperBase ( ) <nl> + { <nl> + @ Override <nl> + protected ModelResourceLocation getModelResourceLocation ( IBlockState state ) <nl> + { <nl> + return fluidLocation ; <nl> + } <nl> + } ) ; <nl> + } <nl> + <nl> + } <nl> diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json <nl> new file mode 100644 <nl> index 0000000 . . c9f4933 <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json <nl> @ @ - 0 , 0 + 1 , 15 @ @ <nl> + { <nl> + 	 " forge _ marker " : 1 , <nl> + 	 " defaults " : { <nl> + 	 	 " model " : " forge : fluid " <nl> + 	 } , <nl> + 	 " variants " : { <nl> + 	 	 " fluid " : [ <nl> + 	 	 	 { <nl> + 	 	 	 	 " custom " : { <nl> + 	 	 	 	 	 " fluid " : " test _ fluid " <nl> + 	 	 	 	 } <nl> + 	 	 	 } <nl> + 	 	 ] <nl> + 	 } <nl> + }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> index 8df9a21 . . cbf7f64 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / Block . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> @ @ - 197 , 7 + 197 , 7 @ @ <nl> public SoundType func _ 185467 _ w ( ) <nl> { <nl> return this . field _ 149762 _ H ; <nl> - @ @ - 908 , 6 + 932 , 1188 @ @ <nl> + @ @ - 908 , 6 + 932 , 1217 @ @ <nl> { <nl> } <nl> <nl> @ @ - 1037 , 10 + 1037 , 39 @ @ <nl> + IBlockState state = world . func _ 180495 _ p ( pos ) ; <nl> + for ( IProperty < ? > prop : state . func _ 177228 _ b ( ) . keySet ( ) ) <nl> + { <nl> - + if ( prop . func _ 177701 _ a ( ) . equals ( " facing " ) | | prop . func _ 177701 _ a ( ) . equals ( " rotation " ) ) <nl> + + if ( ( prop . func _ 177701 _ a ( ) . equals ( " facing " ) | | prop . func _ 177701 _ a ( ) . equals ( " rotation " ) ) & & prop . func _ 177699 _ b ( ) = = EnumFacing . class ) <nl> + { <nl> - + world . func _ 175656 _ a ( pos , state . func _ 177231 _ a ( prop ) ) ; <nl> - + return true ; <nl> + + Block block = state . func _ 177230 _ c ( ) ; <nl> + + if ( ! ( block instanceof BlockBed ) & & ! ( block instanceof BlockPistonExtension ) ) <nl> + + { <nl> + + IBlockState newState ; <nl> + + / / noinspection unchecked <nl> + + IProperty < EnumFacing > facingProperty = ( IProperty < EnumFacing > ) prop ; <nl> + + EnumFacing facing = state . func _ 177229 _ b ( facingProperty ) ; <nl> + + java . util . Collection < EnumFacing > validFacings = facingProperty . func _ 177700 _ c ( ) ; <nl> + + <nl> + + / / rotate horizontal facings clockwise <nl> + + if ( validFacings . size ( ) = = 4 & & ! validFacings . contains ( EnumFacing . UP ) & & ! validFacings . contains ( EnumFacing . DOWN ) ) <nl> + + { <nl> + + newState = state . func _ 177226 _ a ( facingProperty , facing . func _ 176746 _ e ( ) ) ; <nl> + + } <nl> + + else <nl> + + { <nl> + + / / rotate other facings about the axis <nl> + + EnumFacing rotatedFacing = facing . func _ 176732 _ a ( axis . func _ 176740 _ k ( ) ) ; <nl> + + if ( validFacings . contains ( rotatedFacing ) ) <nl> + + { <nl> + + newState = state . func _ 177226 _ a ( facingProperty , rotatedFacing ) ; <nl> + + } <nl> + + else / / abnormal facing property , just cycle it <nl> + + { <nl> + + newState = state . func _ 177231 _ a ( facingProperty ) ; <nl> + + } <nl> + + } <nl> + + <nl> + + world . func _ 175656 _ a ( pos , newState ) ; <nl> + + return true ; <nl> + + } <nl> + } <nl> + } <nl> + return false ; <nl> @ @ - 1059 , 7 + 1088 , 7 @ @ <nl> + IBlockState state = world . func _ 180495 _ p ( pos ) ; <nl> + for ( IProperty < ? > prop : state . func _ 177228 _ b ( ) . keySet ( ) ) <nl> + { <nl> - + if ( prop . func _ 177701 _ a ( ) . equals ( " facing " ) & & prop . func _ 177699 _ b ( ) = = EnumFacing . class ) <nl> + + if ( ( prop . func _ 177701 _ a ( ) . equals ( " facing " ) | | prop . func _ 177701 _ a ( ) . equals ( " rotation " ) ) & & prop . func _ 177699 _ b ( ) = = EnumFacing . class ) <nl> + { <nl> + @ SuppressWarnings ( " unchecked " ) <nl> + java . util . Collection < EnumFacing > values = ( ( java . util . Collection < EnumFacing > ) prop . func _ 177700 _ c ( ) ) ; <nl> @ @ - 1386 , 7 + 1415 , 7 @ @ <nl> public static void func _ 149671 _ p ( ) <nl> { <nl> func _ 176215 _ a ( 0 , field _ 176230 _ a , ( new BlockAir ( ) ) . func _ 149663 _ c ( " air " ) ) ; <nl> - @ @ - 1201 , 14 + 2407 , 7 @ @ <nl> + @ @ - 1201 , 14 + 2436 , 7 @ @ <nl> } <nl> else <nl> { <nl> diff - - git a / patches / minecraft / net / minecraft / block / BlockChest . java . patch b / patches / minecraft / net / minecraft / block / BlockChest . java . patch <nl> index 55d6a84 . . 338a9c4 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / BlockChest . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / BlockChest . java . patch <nl> @ @ - 9 , 3 + 9 , 14 @ @ <nl> } <nl> <nl> private boolean func _ 176453 _ o ( World p _ 176453 _ 1 _ , BlockPos p _ 176453 _ 2 _ ) <nl> + @ @ - 587 , 4 + 587 , 10 @ @ <nl> + BASIC , <nl> + TRAP ; <nl> + } <nl> + + <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + + public boolean rotateBlock ( World world , BlockPos pos , EnumFacing axis ) <nl> + + { <nl> + + return ! func _ 176454 _ e ( world , pos ) & & super . rotateBlock ( world , pos , axis ) ; <nl> + + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / block / BlockPistonBase . java . patch b / patches / minecraft / net / minecraft / block / BlockPistonBase . java . patch <nl> index de7791e . . 7acd5d4 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / BlockPistonBase . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / BlockPistonBase . java . patch <nl> @ @ - 29 , 3 + 29 , 15 @ @ <nl> p _ 176319 _ 1 _ . func _ 180501 _ a ( blockpos1 , Blocks . field _ 150350 _ a . func _ 176223 _ P ( ) , 4 ) ; <nl> - - k ; <nl> aiblockstate [ k ] = iblockstate ; <nl> + @ @ - 432 , 4 + 434 , 11 @ @ <nl> + { <nl> + return new BlockStateContainer ( this , new IProperty [ ] { field _ 176387 _ N , field _ 176320 _ b } ) ; <nl> + } <nl> + + <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + + public boolean rotateBlock ( World world , BlockPos pos , EnumFacing axis ) <nl> + + { <nl> + + IBlockState state = world . func _ 180495 _ p ( pos ) ; <nl> + + return ! state . func _ 177229 _ b ( field _ 176320 _ b ) & & super . rotateBlock ( world , pos , axis ) ; <nl> + + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / block / BlockRedstoneDiode . java . patch b / patches / minecraft / net / minecraft / block / BlockRedstoneDiode . java . patch <nl> index 43c5d17 . . 7225c69 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / BlockRedstoneDiode . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / BlockRedstoneDiode . java . patch <nl> @ @ - 9 , 3 + 9 , 27 @ @ <nl> p _ 176400 _ 1 _ . func _ 190524 _ a ( blockpos , this , p _ 176400 _ 2 _ ) ; <nl> p _ 176400 _ 1 _ . func _ 175695 _ a ( blockpos , this , enumfacing ) ; <nl> } <nl> + @ @ - 275 , 4 + 277 , 23 @ @ <nl> + { <nl> + return BlockRenderLayer . CUTOUT ; <nl> + } <nl> + + <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + + @ Override <nl> + + public boolean rotateBlock ( World world , BlockPos pos , EnumFacing axis ) <nl> + + { <nl> + + if ( super . rotateBlock ( world , pos , axis ) ) <nl> + + { <nl> + + IBlockState state = world . func _ 180495 _ p ( pos ) ; <nl> + + state = func _ 180675 _ k ( state ) ; <nl> + + world . func _ 175656 _ a ( pos , state ) ; <nl> + + <nl> + + if ( func _ 176404 _ e ( world , pos , state ) ) <nl> + + { <nl> + + world . func _ 175684 _ a ( pos , this , 1 ) ; <nl> + + } <nl> + + return true ; <nl> + + } <nl> + + return false ; <nl> + + } <nl> + } <nl> diff - - git a / src / test / java / net / minecraftforge / debug / WrenchRotateDebug . java b / src / test / java / net / minecraftforge / debug / WrenchRotateDebug . java <nl> new file mode 100644 <nl> index 0000000 . . 412f1de <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / WrenchRotateDebug . java <nl> @ @ - 0 , 0 + 1 , 106 @ @ <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import net . minecraft . block . Block ; <nl> + import net . minecraft . block . state . IBlockState ; <nl> + import net . minecraft . client . renderer . ItemMeshDefinition ; <nl> + import net . minecraft . client . renderer . block . model . ModelBakery ; <nl> + import net . minecraft . client . renderer . block . model . ModelResourceLocation ; <nl> + import net . minecraft . creativetab . CreativeTabs ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> + import net . minecraft . item . Item ; <nl> + import net . minecraft . item . ItemStack ; <nl> + import net . minecraft . util . EnumActionResult ; <nl> + import net . minecraft . util . EnumFacing ; <nl> + import net . minecraft . util . EnumHand ; <nl> + import net . minecraft . util . ResourceLocation ; <nl> + import net . minecraft . util . math . BlockPos ; <nl> + import net . minecraft . world . World ; <nl> + import net . minecraftforge . client . model . ModelLoader ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . SidedProxy ; <nl> + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> + import net . minecraftforge . fml . common . registry . GameRegistry ; <nl> + <nl> + @ Mod ( modid = WrenchRotateDebug . modID , name = " Wrench Rotate Debug " , version = " 0 . 0 . 0 " ) <nl> + public class WrenchRotateDebug <nl> + { <nl> + public static final String modID = " wrenchrotatedebug " ; <nl> + private static final ResourceLocation testWrenchName = new ResourceLocation ( modID , " test _ wrench " ) ; <nl> + <nl> + @ SidedProxy <nl> + public static CommonProxy proxy ; <nl> + <nl> + @ Mod . EventHandler <nl> + public void preInit ( FMLPreInitializationEvent event ) <nl> + { <nl> + TestWrench wrench = new TestWrench ( ) ; <nl> + wrench . setRegistryName ( testWrenchName ) ; <nl> + <nl> + GameRegistry . register ( wrench ) ; <nl> + proxy . setupModel ( wrench ) ; <nl> + } <nl> + <nl> + public static class CommonProxy <nl> + { <nl> + void setupModel ( TestWrench wrench ) <nl> + { <nl> + } <nl> + } <nl> + <nl> + public static class ServerProxy extends CommonProxy <nl> + { <nl> + } <nl> + <nl> + public static class ClientProxy extends CommonProxy <nl> + { <nl> + @ SuppressWarnings ( " unused " ) <nl> + @ Override <nl> + void setupModel ( TestWrench wrench ) <nl> + { <nl> + final ModelResourceLocation wrenchName = new ModelResourceLocation ( testWrenchName , " inventory " ) ; <nl> + ModelBakery . registerItemVariants ( wrench , wrenchName ) ; <nl> + ModelLoader . setCustomMeshDefinition ( wrench , new ItemMeshDefinition ( ) <nl> + { <nl> + @ Override <nl> + public ModelResourceLocation getModelLocation ( ItemStack stack ) <nl> + { <nl> + return wrenchName ; <nl> + } <nl> + } ) ; <nl> + } <nl> + } <nl> + <nl> + public static class TestWrench extends Item <nl> + { <nl> + public TestWrench ( ) <nl> + { <nl> + setCreativeTab ( CreativeTabs . TOOLS ) ; <nl> + setMaxStackSize ( 1 ) ; <nl> + setHarvestLevel ( " wrench " , 0 ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public EnumActionResult onItemUse ( EntityPlayer player , World worldIn , BlockPos pos , EnumHand hand , EnumFacing facing , float hitX , float hitY , float hitZ ) <nl> + { <nl> + ItemStack wrench = player . getHeldItem ( hand ) ; <nl> + if ( player . canPlayerEdit ( pos , facing , wrench ) & & worldIn . isBlockModifiable ( player , pos ) ) <nl> + { <nl> + IBlockState blockState = worldIn . getBlockState ( pos ) ; <nl> + Block block = blockState . getBlock ( ) ; <nl> + if ( block . rotateBlock ( worldIn , pos , facing ) ) <nl> + { <nl> + player . swingArm ( hand ) ; <nl> + worldIn . notifyNeighborsOfStateChange ( pos , block , false ) ; <nl> + return EnumActionResult . SUCCESS ; <nl> + } <nl> + } <nl> + return EnumActionResult . FAIL ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getItemStackDisplayName ( ItemStack stack ) <nl> + { <nl> + return " Forge Test Wrench " ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / assets / wrenchrotatedebug / models / item / test _ wrench . json b / src / test / resources / assets / wrenchrotatedebug / models / item / test _ wrench . json <nl> new file mode 100644 <nl> index 0000000 . . c4b504f <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / wrenchrotatedebug / models / item / test _ wrench . json <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + { <nl> + " parent " : " item / generated " , <nl> + " textures " : { <nl> + " layer0 " : " wrenchrotatedebug : items / test _ wrench " <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / assets / wrenchrotatedebug / textures / items / test _ wrench . png b / src / test / resources / assets / wrenchrotatedebug / textures / items / test _ wrench . png <nl> new file mode 100644 <nl> index 0000000 . . 3a6ce07 <nl> Binary files / dev / null and b / src / test / resources / assets / wrenchrotatedebug / textures / items / test _ wrench . png differ

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch 
 index b6bb5f4 . . b34d024 100644 
 - - - a / patches / minecraft / net / minecraft / block / Block . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / Block . java . patch 
 @ @ - 227 , 7 + 227 , 7 @ @ 
 public SoundType func _ 185467 _ w ( ) 
 { 
 return this . field _ 149762 _ H ; 
 - @ @ - 936 , 6 + 951 , 1218 @ @ 
 + @ @ - 936 , 6 + 951 , 1255 @ @ 
 { 
 } 
 
 @ @ - 1400 , 6 + 1400 , 43 @ @ 
 + } 
 + 
 + / * * 
 + + * Use this to change the fog color used when the entity is " inside " a material . 
 + + * Vec3d is used here as " r / g / b " 0 - 1 values . 
 + + * 
 + + * @ param world The world . 
 + + * @ param pos The position at the entity viewport . 
 + + * @ param state The state at the entity viewport . 
 + + * @ param entity the entity 
 + + * @ param originalColor The current fog color , You are not expected to use this , Return as the default if applicable . 
 + + * @ return The new fog color . 
 + + * / 
 + + @ SideOnly ( Side . CLIENT ) 
 + + public Vec3d getFogColor ( World world , BlockPos pos , IBlockState state , Entity entity , Vec3d originalColor , float partialTicks ) 
 + + { 
 + + if ( state . func _ 185904 _ a ( ) = = Material . field _ 151586 _ h ) 
 + + { 
 + + float f12 = 0 . 0F ; 
 + + 
 + + if ( entity instanceof net . minecraft . entity . EntityLivingBase ) 
 + + { 
 + + net . minecraft . entity . EntityLivingBase ent = ( net . minecraft . entity . EntityLivingBase ) entity ; 
 + + f12 = ( float ) net . minecraft . enchantment . EnchantmentHelper . func _ 185292 _ c ( ent ) * 0 . 2F ; 
 + + 
 + + if ( ent . func _ 70644 _ a ( net . minecraft . init . MobEffects . field _ 76427 _ o ) ) 
 + + { 
 + + f12 = f12 * 0 . 3F + 0 . 6F ; 
 + + } 
 + + } 
 + + return new Vec3d ( 0 . 02F + f12 , 0 . 02F + f12 , 0 . 2F + f12 ) ; 
 + + } 
 + + else if ( state . func _ 185904 _ a ( ) = = Material . field _ 151587 _ i ) 
 + + { 
 + + return new Vec3d ( 0 . 6F , 0 . 1F , 0 . 0F ) ; 
 + + } 
 + + return originalColor ; 
 + + } 
 + + 
 + + / * * 
 + * Gets the { @ link IBlockState } to place 
 + * @ param world The world the block is being placed in 
 + * @ param pos The position the block is being placed at 
 @ @ - 1446 , 7 + 1483 , 7 @ @ 
 public static void func _ 149671 _ p ( ) 
 { 
 func _ 176215 _ a ( 0 , field _ 176230 _ a , ( new BlockAir ( ) ) . func _ 149663 _ c ( " air " ) ) ; 
 - @ @ - 1247 , 14 + 2474 , 7 @ @ 
 + @ @ - 1247 , 14 + 2511 , 7 @ @ 
 } 
 else 
 { 
 diff - - git a / patches / minecraft / net / minecraft / block / BlockLiquid . java . patch b / patches / minecraft / net / minecraft / block / BlockLiquid . java . patch 
 new file mode 100644 
 index 0000000 . . 778caf7 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / block / BlockLiquid . java . patch 
 @ @ - 0 , 0 + 1 , 32 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / block / BlockLiquid . java 
 + + + + . . / src - work / minecraft / net / minecraft / block / BlockLiquid . java 
 + @ @ - 452 , 4 + 452 , 29 @ @ 
 + { 
 + return BlockFaceShape . UNDEFINED ; 
 + } 
 + + 
 + + @ Override 
 + + @ SideOnly ( Side . CLIENT ) 
 + + public Vec3d getFogColor ( World world , BlockPos pos , IBlockState state , Entity entity , Vec3d originalColor , float partialTicks ) 
 + + { 
 + + Vec3d viewport = net . minecraft . client . renderer . ActiveRenderInfo . func _ 178806 _ a ( entity , partialTicks ) ; 
 + + 
 + + if ( state . func _ 185904 _ a ( ) . func _ 76224 _ d ( ) ) 
 + + { 
 + + float height = 0 . 0F ; 
 + + if ( state . func _ 177230 _ c ( ) instanceof BlockLiquid ) 
 + + { 
 + + height = func _ 149801 _ b ( state . func _ 177229 _ b ( field _ 176367 _ b ) ) - 0 . 11111111F ; 
 + + } 
 + + float f1 = ( float ) ( pos . func _ 177956 _ o ( ) + 1 ) - height ; 
 + + if ( viewport . field _ 72448 _ b > ( double ) f1 ) 
 + + { 
 + + BlockPos upPos = pos . func _ 177984 _ a ( ) ; 
 + + IBlockState upState = world . func _ 180495 _ p ( upPos ) ; 
 + + return upState . func _ 177230 _ c ( ) . getFogColor ( world , upPos , upState , entity , originalColor , partialTicks ) ; 
 + + } 
 + + } 
 + + 
 + + return super . getFogColor ( world , pos , state , entity , originalColor , partialTicks ) ; 
 + + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch 
 index 874491c . . d5c8782 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / EntityRenderer . java . patch 
 @ @ - 167 , 7 + 167 , 47 @ @ 
 float f = this . field _ 78531 _ r . field _ 71441 _ e . func _ 72867 _ j ( p _ 78474 _ 1 _ ) ; 
 
 if ( f > 0 . 0F ) 
 - @ @ - 1845 , 6 + 1872 , 13 @ @ 
 + @ @ - 1749 , 30 + 1776 , 17 @ @ 
 + this . field _ 175082 _ R = ( float ) vec3d3 . field _ 72448 _ b ; 
 + this . field _ 175081 _ S = ( float ) vec3d3 . field _ 72449 _ c ; 
 + } 
 + - else if ( iblockstate . func _ 185904 _ a ( ) = = Material . field _ 151586 _ h ) 
 + + else 
 + { 
 + - float f12 = 0 . 0F ; 
 + - 
 + - if ( entity instanceof EntityLivingBase ) 
 + - { 
 + - f12 = ( float ) EnchantmentHelper . func _ 185292 _ c ( ( EntityLivingBase ) entity ) * 0 . 2F ; 
 + - 
 + - if ( ( ( EntityLivingBase ) entity ) . func _ 70644 _ a ( MobEffects . field _ 76427 _ o ) ) 
 + - { 
 + - f12 = f12 * 0 . 3F + 0 . 6F ; 
 + - } 
 + - } 
 + - 
 + - this . field _ 175080 _ Q = 0 . 02F + f12 ; 
 + - this . field _ 175082 _ R = 0 . 02F + f12 ; 
 + - this . field _ 175081 _ S = 0 . 2F + f12 ; 
 + + / / Forge Moved to Block . 
 + + Vec3d viewport = ActiveRenderInfo . func _ 178806 _ a ( entity , p _ 78466 _ 1 _ ) ; 
 + + BlockPos viewportPos = new BlockPos ( viewport ) ; 
 + + IBlockState viewportState = this . field _ 78531 _ r . field _ 71441 _ e . func _ 180495 _ p ( viewportPos ) ; 
 + + Vec3d inMaterialColor = viewportState . func _ 177230 _ c ( ) . getFogColor ( this . field _ 78531 _ r . field _ 71441 _ e , viewportPos , viewportState , entity , new Vec3d ( field _ 175080 _ Q , field _ 175082 _ R , field _ 175081 _ S ) , p _ 78466 _ 1 _ ) ; 
 + + this . field _ 175080 _ Q = ( float ) inMaterialColor . field _ 72450 _ a ; 
 + + this . field _ 175082 _ R = ( float ) inMaterialColor . field _ 72448 _ b ; 
 + + this . field _ 175081 _ S = ( float ) inMaterialColor . field _ 72449 _ c ; 
 + } 
 + - else if ( iblockstate . func _ 185904 _ a ( ) = = Material . field _ 151587 _ i ) 
 + - { 
 + - this . field _ 175080 _ Q = 0 . 6F ; 
 + - this . field _ 175082 _ R = 0 . 1F ; 
 + - this . field _ 175081 _ S = 0 . 0F ; 
 + - } 
 + 
 + float f13 = this . field _ 78535 _ ad + ( this . field _ 78539 _ ae - this . field _ 78535 _ ad ) * p _ 78466 _ 1 _ ; 
 + this . field _ 175080 _ Q * = f13 ; 
 + @ @ - 1845 , 6 + 1859 , 13 @ @ 
 this . field _ 175081 _ S = f7 ; 
 } 
 
 @ @ - 181 , 7 + 221 , 7 @ @ 
 GlStateManager . func _ 179082 _ a ( this . field _ 175080 _ Q , this . field _ 175082 _ R , this . field _ 175081 _ S , 0 . 0F ) ; 
 } 
 
 - @ @ - 1855 , 7 + 1889 , 9 @ @ 
 + @ @ - 1855 , 7 + 1876 , 9 @ @ 
 GlStateManager . func _ 187432 _ a ( 0 . 0F , - 1 . 0F , 0 . 0F ) ; 
 GlStateManager . func _ 179131 _ c ( 1 . 0F , 1 . 0F , 1 . 0F , 1 . 0F ) ; 
 IBlockState iblockstate = ActiveRenderInfo . func _ 186703 _ a ( this . field _ 78531 _ r . field _ 71441 _ e , entity , p _ 78468 _ 2 _ ) ; 
 @ @ - 192 , 7 + 232 , 7 @ @ 
 if ( entity instanceof EntityLivingBase & & ( ( EntityLivingBase ) entity ) . func _ 70644 _ a ( MobEffects . field _ 76440 _ q ) ) 
 { 
 float f1 = 5 . 0F ; 
 - @ @ - 1940 , 6 + 1976 , 7 @ @ 
 + @ @ - 1940 , 6 + 1963 , 7 @ @ 
 GlStateManager . func _ 179102 _ b ( f * 0 . 05F ) ; 
 GlStateManager . func _ 179153 _ c ( Math . min ( f , 192 . 0F ) * 0 . 5F ) ; 
 } 
 diff - - git a / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java 
 new file mode 100644 
 index 0000000 . . caa4e3a 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java 
 @ @ - 0 , 0 + 1 , 76 @ @ 
 + package net . minecraftforge . debug ; 
 + 
 + import net . minecraft . block . Block ; 
 + import net . minecraft . block . material . Material ; 
 + import net . minecraft . block . state . IBlockState ; 
 + import net . minecraft . client . renderer . block . model . ModelResourceLocation ; 
 + import net . minecraft . client . renderer . block . statemap . StateMapperBase ; 
 + import net . minecraft . creativetab . CreativeTabs ; 
 + import net . minecraft . entity . Entity ; 
 + import net . minecraft . item . Item ; 
 + import net . minecraft . item . ItemBlock ; 
 + import net . minecraft . util . math . BlockPos ; 
 + import net . minecraft . util . math . Vec3d ; 
 + import net . minecraft . world . World ; 
 + import net . minecraftforge . client . event . ModelRegistryEvent ; 
 + import net . minecraftforge . client . model . ModelLoader ; 
 + import net . minecraftforge . event . RegistryEvent ; 
 + import net . minecraftforge . fluids . BlockFluidClassic ; 
 + import net . minecraftforge . fluids . FluidRegistry ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . Mod . EventBusSubscriber ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + import net . minecraftforge . fml . common . registry . GameRegistry . ObjectHolder ; 
 + 
 + @ EventBusSubscriber 
 + @ Mod ( modid = FogColorInsideMaterialTest . MOD _ ID , name = " FogColor inside material debug . " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 + public class FogColorInsideMaterialTest 
 + { 
 + 
 + public static final String MOD _ ID = " fogcolorinsidematerialtest " ; 
 + 
 + @ ObjectHolder ( " test _ fluid " ) 
 + public static final Block FLUID _ BLOCK = null ; 
 + @ ObjectHolder ( " test _ fluid " ) 
 + public static final Item FLUID _ ITEM = null ; 
 + 
 + @ SubscribeEvent 
 + public static void registerBlocks ( RegistryEvent . Register < Block > event ) 
 + { 
 + Block fluid = new BlockFluidClassic ( FluidRegistry . WATER , Material . WATER ) 
 + { 
 + @ Override 
 + public Vec3d getFogColor ( World world , BlockPos pos , IBlockState state , Entity entity , Vec3d originalColor , float partialTicks ) 
 + { 
 + return new Vec3d ( 0 . 6F , 0 . 1F , 0 . 0F ) ; 
 + } 
 + } ; 
 + fluid . setCreativeTab ( CreativeTabs . BUILDING _ BLOCKS ) ; 
 + fluid . setUnlocalizedName ( MOD _ ID + " : " + " test _ fluid " ) ; 
 + fluid . setRegistryName ( " test _ fluid " ) ; 
 + event . getRegistry ( ) . register ( fluid ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public static void registerItems ( RegistryEvent . Register < Item > event ) 
 + { 
 + event . getRegistry ( ) . register ( new ItemBlock ( FLUID _ BLOCK ) . setRegistryName ( FLUID _ BLOCK . getRegistryName ( ) ) ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public static void registerModels ( ModelRegistryEvent event ) 
 + { 
 + ModelResourceLocation fluidLocation = new ModelResourceLocation ( MOD _ ID . toLowerCase ( ) + " : test _ fluid " , " fluid " ) ; 
 + ModelLoader . registerItemVariants ( FLUID _ ITEM ) ; 
 + ModelLoader . setCustomMeshDefinition ( FLUID _ ITEM , stack - > fluidLocation ) ; 
 + ModelLoader . setCustomStateMapper ( FLUID _ BLOCK , new StateMapperBase ( ) 
 + { 
 + @ Override 
 + protected ModelResourceLocation getModelResourceLocation ( IBlockState state ) 
 + { 
 + return fluidLocation ; 
 + } 
 + } ) ; 
 + } 
 + 
 + } 
 diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json 
 new file mode 100644 
 index 0000000 . . c9f4933 
 - - - / dev / null 
 + + + b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + { 
 + 	 " forge _ marker " : 1 , 
 + 	 " defaults " : { 
 + 	 	 " model " : " forge : fluid " 
 + 	 } , 
 + 	 " variants " : { 
 + 	 	 " fluid " : [ 
 + 	 	 	 { 
 + 	 	 	 	 " custom " : { 
 + 	 	 	 	 	 " fluid " : " test _ fluid " 
 + 	 	 	 	 } 
 + 	 	 	 } 
 + 	 	 ] 
 + 	 } 
 + }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch 
 index 8df9a21 . . cbf7f64 100644 
 - - - a / patches / minecraft / net / minecraft / block / Block . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / Block . java . patch 
 @ @ - 197 , 7 + 197 , 7 @ @ 
 public SoundType func _ 185467 _ w ( ) 
 { 
 return this . field _ 149762 _ H ; 
 - @ @ - 908 , 6 + 932 , 1188 @ @ 
 + @ @ - 908 , 6 + 932 , 1217 @ @ 
 { 
 } 
 
 @ @ - 1037 , 10 + 1037 , 39 @ @ 
 + IBlockState state = world . func _ 180495 _ p ( pos ) ; 
 + for ( IProperty < ? > prop : state . func _ 177228 _ b ( ) . keySet ( ) ) 
 + { 
 - + if ( prop . func _ 177701 _ a ( ) . equals ( " facing " ) | | prop . func _ 177701 _ a ( ) . equals ( " rotation " ) ) 
 + + if ( ( prop . func _ 177701 _ a ( ) . equals ( " facing " ) | | prop . func _ 177701 _ a ( ) . equals ( " rotation " ) ) & & prop . func _ 177699 _ b ( ) = = EnumFacing . class ) 
 + { 
 - + world . func _ 175656 _ a ( pos , state . func _ 177231 _ a ( prop ) ) ; 
 - + return true ; 
 + + Block block = state . func _ 177230 _ c ( ) ; 
 + + if ( ! ( block instanceof BlockBed ) & & ! ( block instanceof BlockPistonExtension ) ) 
 + + { 
 + + IBlockState newState ; 
 + + / / noinspection unchecked 
 + + IProperty < EnumFacing > facingProperty = ( IProperty < EnumFacing > ) prop ; 
 + + EnumFacing facing = state . func _ 177229 _ b ( facingProperty ) ; 
 + + java . util . Collection < EnumFacing > validFacings = facingProperty . func _ 177700 _ c ( ) ; 
 + + 
 + + / / rotate horizontal facings clockwise 
 + + if ( validFacings . size ( ) = = 4 & & ! validFacings . contains ( EnumFacing . UP ) & & ! validFacings . contains ( EnumFacing . DOWN ) ) 
 + + { 
 + + newState = state . func _ 177226 _ a ( facingProperty , facing . func _ 176746 _ e ( ) ) ; 
 + + } 
 + + else 
 + + { 
 + + / / rotate other facings about the axis 
 + + EnumFacing rotatedFacing = facing . func _ 176732 _ a ( axis . func _ 176740 _ k ( ) ) ; 
 + + if ( validFacings . contains ( rotatedFacing ) ) 
 + + { 
 + + newState = state . func _ 177226 _ a ( facingProperty , rotatedFacing ) ; 
 + + } 
 + + else / / abnormal facing property , just cycle it 
 + + { 
 + + newState = state . func _ 177231 _ a ( facingProperty ) ; 
 + + } 
 + + } 
 + + 
 + + world . func _ 175656 _ a ( pos , newState ) ; 
 + + return true ; 
 + + } 
 + } 
 + } 
 + return false ; 
 @ @ - 1059 , 7 + 1088 , 7 @ @ 
 + IBlockState state = world . func _ 180495 _ p ( pos ) ; 
 + for ( IProperty < ? > prop : state . func _ 177228 _ b ( ) . keySet ( ) ) 
 + { 
 - + if ( prop . func _ 177701 _ a ( ) . equals ( " facing " ) & & prop . func _ 177699 _ b ( ) = = EnumFacing . class ) 
 + + if ( ( prop . func _ 177701 _ a ( ) . equals ( " facing " ) | | prop . func _ 177701 _ a ( ) . equals ( " rotation " ) ) & & prop . func _ 177699 _ b ( ) = = EnumFacing . class ) 
 + { 
 + @ SuppressWarnings ( " unchecked " ) 
 + java . util . Collection < EnumFacing > values = ( ( java . util . Collection < EnumFacing > ) prop . func _ 177700 _ c ( ) ) ; 
 @ @ - 1386 , 7 + 1415 , 7 @ @ 
 public static void func _ 149671 _ p ( ) 
 { 
 func _ 176215 _ a ( 0 , field _ 176230 _ a , ( new BlockAir ( ) ) . func _ 149663 _ c ( " air " ) ) ; 
 - @ @ - 1201 , 14 + 2407 , 7 @ @ 
 + @ @ - 1201 , 14 + 2436 , 7 @ @ 
 } 
 else 
 { 
 diff - - git a / patches / minecraft / net / minecraft / block / BlockChest . java . patch b / patches / minecraft / net / minecraft / block / BlockChest . java . patch 
 index 55d6a84 . . 338a9c4 100644 
 - - - a / patches / minecraft / net / minecraft / block / BlockChest . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / BlockChest . java . patch 
 @ @ - 9 , 3 + 9 , 14 @ @ 
 } 
 
 private boolean func _ 176453 _ o ( World p _ 176453 _ 1 _ , BlockPos p _ 176453 _ 2 _ ) 
 + @ @ - 587 , 4 + 587 , 10 @ @ 
 + BASIC , 
 + TRAP ; 
 + } 
 + + 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + + public boolean rotateBlock ( World world , BlockPos pos , EnumFacing axis ) 
 + + { 
 + + return ! func _ 176454 _ e ( world , pos ) & & super . rotateBlock ( world , pos , axis ) ; 
 + + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / block / BlockPistonBase . java . patch b / patches / minecraft / net / minecraft / block / BlockPistonBase . java . patch 
 index de7791e . . 7acd5d4 100644 
 - - - a / patches / minecraft / net / minecraft / block / BlockPistonBase . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / BlockPistonBase . java . patch 
 @ @ - 29 , 3 + 29 , 15 @ @ 
 p _ 176319 _ 1 _ . func _ 180501 _ a ( blockpos1 , Blocks . field _ 150350 _ a . func _ 176223 _ P ( ) , 4 ) ; 
 - - k ; 
 aiblockstate [ k ] = iblockstate ; 
 + @ @ - 432 , 4 + 434 , 11 @ @ 
 + { 
 + return new BlockStateContainer ( this , new IProperty [ ] { field _ 176387 _ N , field _ 176320 _ b } ) ; 
 + } 
 + + 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + + public boolean rotateBlock ( World world , BlockPos pos , EnumFacing axis ) 
 + + { 
 + + IBlockState state = world . func _ 180495 _ p ( pos ) ; 
 + + return ! state . func _ 177229 _ b ( field _ 176320 _ b ) & & super . rotateBlock ( world , pos , axis ) ; 
 + + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / block / BlockRedstoneDiode . java . patch b / patches / minecraft / net / minecraft / block / BlockRedstoneDiode . java . patch 
 index 43c5d17 . . 7225c69 100644 
 - - - a / patches / minecraft / net / minecraft / block / BlockRedstoneDiode . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / BlockRedstoneDiode . java . patch 
 @ @ - 9 , 3 + 9 , 27 @ @ 
 p _ 176400 _ 1 _ . func _ 190524 _ a ( blockpos , this , p _ 176400 _ 2 _ ) ; 
 p _ 176400 _ 1 _ . func _ 175695 _ a ( blockpos , this , enumfacing ) ; 
 } 
 + @ @ - 275 , 4 + 277 , 23 @ @ 
 + { 
 + return BlockRenderLayer . CUTOUT ; 
 + } 
 + + 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + + @ Override 
 + + public boolean rotateBlock ( World world , BlockPos pos , EnumFacing axis ) 
 + + { 
 + + if ( super . rotateBlock ( world , pos , axis ) ) 
 + + { 
 + + IBlockState state = world . func _ 180495 _ p ( pos ) ; 
 + + state = func _ 180675 _ k ( state ) ; 
 + + world . func _ 175656 _ a ( pos , state ) ; 
 + + 
 + + if ( func _ 176404 _ e ( world , pos , state ) ) 
 + + { 
 + + world . func _ 175684 _ a ( pos , this , 1 ) ; 
 + + } 
 + + return true ; 
 + + } 
 + + return false ; 
 + + } 
 + } 
 diff - - git a / src / test / java / net / minecraftforge / debug / WrenchRotateDebug . java b / src / test / java / net / minecraftforge / debug / WrenchRotateDebug . java 
 new file mode 100644 
 index 0000000 . . 412f1de 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / WrenchRotateDebug . java 
 @ @ - 0 , 0 + 1 , 106 @ @ 
 + package net . minecraftforge . debug ; 
 + 
 + import net . minecraft . block . Block ; 
 + import net . minecraft . block . state . IBlockState ; 
 + import net . minecraft . client . renderer . ItemMeshDefinition ; 
 + import net . minecraft . client . renderer . block . model . ModelBakery ; 
 + import net . minecraft . client . renderer . block . model . ModelResourceLocation ; 
 + import net . minecraft . creativetab . CreativeTabs ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 + import net . minecraft . item . Item ; 
 + import net . minecraft . item . ItemStack ; 
 + import net . minecraft . util . EnumActionResult ; 
 + import net . minecraft . util . EnumFacing ; 
 + import net . minecraft . util . EnumHand ; 
 + import net . minecraft . util . ResourceLocation ; 
 + import net . minecraft . util . math . BlockPos ; 
 + import net . minecraft . world . World ; 
 + import net . minecraftforge . client . model . ModelLoader ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . SidedProxy ; 
 + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 + import net . minecraftforge . fml . common . registry . GameRegistry ; 
 + 
 + @ Mod ( modid = WrenchRotateDebug . modID , name = " Wrench Rotate Debug " , version = " 0 . 0 . 0 " ) 
 + public class WrenchRotateDebug 
 + { 
 + public static final String modID = " wrenchrotatedebug " ; 
 + private static final ResourceLocation testWrenchName = new ResourceLocation ( modID , " test _ wrench " ) ; 
 + 
 + @ SidedProxy 
 + public static CommonProxy proxy ; 
 + 
 + @ Mod . EventHandler 
 + public void preInit ( FMLPreInitializationEvent event ) 
 + { 
 + TestWrench wrench = new TestWrench ( ) ; 
 + wrench . setRegistryName ( testWrenchName ) ; 
 + 
 + GameRegistry . register ( wrench ) ; 
 + proxy . setupModel ( wrench ) ; 
 + } 
 + 
 + public static class CommonProxy 
 + { 
 + void setupModel ( TestWrench wrench ) 
 + { 
 + } 
 + } 
 + 
 + public static class ServerProxy extends CommonProxy 
 + { 
 + } 
 + 
 + public static class ClientProxy extends CommonProxy 
 + { 
 + @ SuppressWarnings ( " unused " ) 
 + @ Override 
 + void setupModel ( TestWrench wrench ) 
 + { 
 + final ModelResourceLocation wrenchName = new ModelResourceLocation ( testWrenchName , " inventory " ) ; 
 + ModelBakery . registerItemVariants ( wrench , wrenchName ) ; 
 + ModelLoader . setCustomMeshDefinition ( wrench , new ItemMeshDefinition ( ) 
 + { 
 + @ Override 
 + public ModelResourceLocation getModelLocation ( ItemStack stack ) 
 + { 
 + return wrenchName ; 
 + } 
 + } ) ; 
 + } 
 + } 
 + 
 + public static class TestWrench extends Item 
 + { 
 + public TestWrench ( ) 
 + { 
 + setCreativeTab ( CreativeTabs . TOOLS ) ; 
 + setMaxStackSize ( 1 ) ; 
 + setHarvestLevel ( " wrench " , 0 ) ; 
 + } 
 + 
 + @ Override 
 + public EnumActionResult onItemUse ( EntityPlayer player , World worldIn , BlockPos pos , EnumHand hand , EnumFacing facing , float hitX , float hitY , float hitZ ) 
 + { 
 + ItemStack wrench = player . getHeldItem ( hand ) ; 
 + if ( player . canPlayerEdit ( pos , facing , wrench ) & & worldIn . isBlockModifiable ( player , pos ) ) 
 + { 
 + IBlockState blockState = worldIn . getBlockState ( pos ) ; 
 + Block block = blockState . getBlock ( ) ; 
 + if ( block . rotateBlock ( worldIn , pos , facing ) ) 
 + { 
 + player . swingArm ( hand ) ; 
 + worldIn . notifyNeighborsOfStateChange ( pos , block , false ) ; 
 + return EnumActionResult . SUCCESS ; 
 + } 
 + } 
 + return EnumActionResult . FAIL ; 
 + } 
 + 
 + @ Override 
 + public String getItemStackDisplayName ( ItemStack stack ) 
 + { 
 + return " Forge Test Wrench " ; 
 + } 
 + } 
 + } 
 diff - - git a / src / test / resources / assets / wrenchrotatedebug / models / item / test _ wrench . json b / src / test / resources / assets / wrenchrotatedebug / models / item / test _ wrench . json 
 new file mode 100644 
 index 0000000 . . c4b504f 
 - - - / dev / null 
 + + + b / src / test / resources / assets / wrenchrotatedebug / models / item / test _ wrench . json 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + { 
 + " parent " : " item / generated " , 
 + " textures " : { 
 + " layer0 " : " wrenchrotatedebug : items / test _ wrench " 
 + } 
 + } 
 diff - - git a / src / test / resources / assets / wrenchrotatedebug / textures / items / test _ wrench . png b / src / test / resources / assets / wrenchrotatedebug / textures / items / test _ wrench . png 
 new file mode 100644 
 index 0000000 . . 3a6ce07 
 Binary files / dev / null and b / src / test / resources / assets / wrenchrotatedebug / textures / items / test _ wrench . png differ
