BLEU SCORE: 0.09103526405546068

TEST MSG: Compleetly skip FML handshake for Vanilla connections . Should fix race condition . Closes # 3084
GENERATED MSG: Fix network close events never getting called . Closes # 381 # 382

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java b / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java <nl> index 8339db7 . . 65c5f7a 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java <nl> @ @ - 147 , 12 + 147 , 12 @ @ public class NetworkDispatcher extends SimpleChannelInboundHandler < Packet < ? > > im <nl> public void serverToClientHandshake ( EntityPlayerMP player ) <nl> { <nl> this . player = player ; <nl> - insertIntoChannel ( ) ; <nl> Boolean fml = this . manager . channel ( ) . attr ( NetworkRegistry . FML _ MARKER ) . get ( ) ; <nl> if ( fml ! = null & & fml ) <nl> { <nl> / / FML on client , send server hello <nl> / / TODO : Make this cleaner as it uses netty magic 0 . o <nl> + insertIntoChannel ( ) ; <nl> } <nl> else <nl> {
NEAREST DIFF (one line): diff - - git a / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java b / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java <nl> index 2409903 . . bcd1b36 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java <nl> @ @ - 374 , 6 + 374 , 14 @ @ public class NetworkDispatcher extends SimpleChannelInboundHandler < Packet > imple <nl> @ Override <nl> public void close ( ChannelHandlerContext ctx , ChannelPromise promise ) throws Exception <nl> { <nl> + if ( side = = Side . CLIENT ) <nl> + { <nl> + FMLCommonHandler . instance ( ) . bus ( ) . post ( new FMLNetworkEvent . ClientDisconnectionFromServerEvent ( manager ) ) ; <nl> + } <nl> + else <nl> + { <nl> + FMLCommonHandler . instance ( ) . bus ( ) . post ( new FMLNetworkEvent . ServerDisconnectionFromClientEvent ( manager ) ) ; <nl> + } <nl> ctx . close ( promise ) ; <nl> } <nl>

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java b / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java 
 index 8339db7 . . 65c5f7a 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / handshake / NetworkDispatcher . java 
 @ @ - 147 , 12 + 147 , 12 @ @ public class NetworkDispatcher extends SimpleChannelInboundHandler < Packet < ? > > im 
 public void serverToClientHandshake ( EntityPlayerMP player ) 
 { 
 this . player = player ; 
 - insertIntoChannel ( ) ; 
 Boolean fml = this . manager . channel ( ) . attr ( NetworkRegistry . FML _ MARKER ) . get ( ) ; 
 if ( fml ! = null & & fml ) 
 { 
 / / FML on client , send server hello 
 / / TODO : Make this cleaner as it uses netty magic 0 . o 
 + insertIntoChannel ( ) ; 
 } 
 else 
 {

NEAREST DIFF:
diff - - git a / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java b / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java 
 index 2409903 . . bcd1b36 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / network / handshake / NetworkDispatcher . java 
 @ @ - 374 , 6 + 374 , 14 @ @ public class NetworkDispatcher extends SimpleChannelInboundHandler < Packet > imple 
 @ Override 
 public void close ( ChannelHandlerContext ctx , ChannelPromise promise ) throws Exception 
 { 
 + if ( side = = Side . CLIENT ) 
 + { 
 + FMLCommonHandler . instance ( ) . bus ( ) . post ( new FMLNetworkEvent . ClientDisconnectionFromServerEvent ( manager ) ) ; 
 + } 
 + else 
 + { 
 + FMLCommonHandler . instance ( ) . bus ( ) . post ( new FMLNetworkEvent . ServerDisconnectionFromClientEvent ( manager ) ) ; 
 + } 
 ctx . close ( promise ) ; 
 } 

