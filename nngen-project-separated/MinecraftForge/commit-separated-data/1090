BLEU SCORE: 0.014445809981770858

TEST MSG: You shouldn ' t be creating FluidStacks from unregistered Fluids . Warn clearly on failed registrations , and make a useful log message for failed fluidstack
GENERATED MSG: Adds getLocalizedName and getUnlocalizedName to FluidStack

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> index bff9007 . . 866f0db 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ import com . google . common . collect . HashBiMap ; <nl> import com . google . common . collect . ImmutableMap ; <nl> import com . google . common . collect . Maps ; <nl> <nl> + import cpw . mods . fml . common . FMLLog ; <nl> import cpw . mods . fml . common . eventhandler . Event ; <nl> <nl> / * * <nl> @ @ - 75 , 6 + 76 , 7 @ @ public abstract class FluidRegistry <nl> { <nl> if ( fluidIDs . containsKey ( fluid . getName ( ) ) ) <nl> { <nl> + FMLLog . bigWarning ( " Duplicate registration attempt for fluid % s ( type % s ) has occurred . This is not a problem itself , but subsequent failed FluidStacks might be a result if not handled properly " , fluid . getName ( ) , fluid . getClass ( ) . getName ( ) ) ; <nl> return false ; <nl> } <nl> fluids . put ( fluid . getName ( ) , fluid ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / FluidStack . java b / src / main / java / net / minecraftforge / fluids / FluidStack . java <nl> index 16e3868 . . b485170 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidStack . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidStack . java <nl> @ @ - 2 , 7 + 2 , 10 @ @ <nl> package net . minecraftforge . fluids ; <nl> <nl> import java . util . Locale ; <nl> + <nl> import com . google . common . base . Strings ; <nl> + <nl> + import cpw . mods . fml . common . FMLLog ; <nl> import net . minecraft . item . ItemStack ; <nl> import net . minecraft . nbt . NBTTagCompound ; <nl> <nl> @ @ - 24 , 6 + 27 , 11 @ @ public class FluidStack <nl> <nl> public FluidStack ( Fluid fluid , int amount ) <nl> { <nl> + if ( ! FluidRegistry . isFluidRegistered ( fluid ) ) <nl> + { <nl> + FMLLog . bigWarning ( " Failed attempt to create a FluidStack for an unregistered Fluid % s ( type % s ) " , fluid . getName ( ) , fluid . getClass ( ) . getName ( ) ) ; <nl> + throw new IllegalArgumentException ( " Cannot create a fluidstack from an unregistered fluid " ) ; <nl> + } <nl> 	 this . fluid = fluid ; <nl> this . amount = amount ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fluids / Fluid . java b / src / main / java / net / minecraftforge / fluids / Fluid . java <nl> index 32af741 . . 8ef8b9b 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / Fluid . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / Fluid . java <nl> @ @ - 206 , 6 + 206 , 14 @ @ public class Fluid <nl> } <nl> <nl> / * * <nl> + * A FluidStack sensitive version of getUnlocalizedName <nl> + * / <nl> + public String getUnlocalizedName ( FluidStack stack ) <nl> + { <nl> + return this . getUnlocalizedName ( ) ; <nl> + } <nl> + <nl> + / * * <nl> * Returns the unlocalized name of this fluid . <nl> * / <nl> public String getUnlocalizedName ( ) <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / FluidStack . java b / src / main / java / net / minecraftforge / fluids / FluidStack . java <nl> index c41a9fc . . c186c18 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidStack . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidStack . java <nl> @ @ - 100 , 6 + 100 , 16 @ @ public class FluidStack <nl> return FluidRegistry . getFluid ( fluidID ) ; <nl> } <nl> <nl> + public String getLocalizedName ( ) <nl> + { <nl> + return this . getFluid ( ) . getLocalizedName ( this ) ; <nl> + } <nl> + <nl> + public String getUnlocalizedName ( ) <nl> + { <nl> + return this . getFluid ( ) . getUnlocalizedName ( this ) ; <nl> + } <nl> + <nl> / * * <nl> * @ return A copy of this FluidStack <nl> * /

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 index bff9007 . . 866f0db 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 @ @ - 13 , 6 + 13 , 7 @ @ import com . google . common . collect . HashBiMap ; 
 import com . google . common . collect . ImmutableMap ; 
 import com . google . common . collect . Maps ; 
 
 + import cpw . mods . fml . common . FMLLog ; 
 import cpw . mods . fml . common . eventhandler . Event ; 
 
 / * * 
 @ @ - 75 , 6 + 76 , 7 @ @ public abstract class FluidRegistry 
 { 
 if ( fluidIDs . containsKey ( fluid . getName ( ) ) ) 
 { 
 + FMLLog . bigWarning ( " Duplicate registration attempt for fluid % s ( type % s ) has occurred . This is not a problem itself , but subsequent failed FluidStacks might be a result if not handled properly " , fluid . getName ( ) , fluid . getClass ( ) . getName ( ) ) ; 
 return false ; 
 } 
 fluids . put ( fluid . getName ( ) , fluid ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fluids / FluidStack . java b / src / main / java / net / minecraftforge / fluids / FluidStack . java 
 index 16e3868 . . b485170 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidStack . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidStack . java 
 @ @ - 2 , 7 + 2 , 10 @ @ 
 package net . minecraftforge . fluids ; 
 
 import java . util . Locale ; 
 + 
 import com . google . common . base . Strings ; 
 + 
 + import cpw . mods . fml . common . FMLLog ; 
 import net . minecraft . item . ItemStack ; 
 import net . minecraft . nbt . NBTTagCompound ; 
 
 @ @ - 24 , 6 + 27 , 11 @ @ public class FluidStack 
 
 public FluidStack ( Fluid fluid , int amount ) 
 { 
 + if ( ! FluidRegistry . isFluidRegistered ( fluid ) ) 
 + { 
 + FMLLog . bigWarning ( " Failed attempt to create a FluidStack for an unregistered Fluid % s ( type % s ) " , fluid . getName ( ) , fluid . getClass ( ) . getName ( ) ) ; 
 + throw new IllegalArgumentException ( " Cannot create a fluidstack from an unregistered fluid " ) ; 
 + } 
 	 this . fluid = fluid ; 
 this . amount = amount ; 
 }

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fluids / Fluid . java b / src / main / java / net / minecraftforge / fluids / Fluid . java 
 index 32af741 . . 8ef8b9b 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / Fluid . java 
 + + + b / src / main / java / net / minecraftforge / fluids / Fluid . java 
 @ @ - 206 , 6 + 206 , 14 @ @ public class Fluid 
 } 
 
 / * * 
 + * A FluidStack sensitive version of getUnlocalizedName 
 + * / 
 + public String getUnlocalizedName ( FluidStack stack ) 
 + { 
 + return this . getUnlocalizedName ( ) ; 
 + } 
 + 
 + / * * 
 * Returns the unlocalized name of this fluid . 
 * / 
 public String getUnlocalizedName ( ) 
 diff - - git a / src / main / java / net / minecraftforge / fluids / FluidStack . java b / src / main / java / net / minecraftforge / fluids / FluidStack . java 
 index c41a9fc . . c186c18 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidStack . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidStack . java 
 @ @ - 100 , 6 + 100 , 16 @ @ public class FluidStack 
 return FluidRegistry . getFluid ( fluidID ) ; 
 } 
 
 + public String getLocalizedName ( ) 
 + { 
 + return this . getFluid ( ) . getLocalizedName ( this ) ; 
 + } 
 + 
 + public String getUnlocalizedName ( ) 
 + { 
 + return this . getFluid ( ) . getUnlocalizedName ( this ) ; 
 + } 
 + 
 / * * 
 * @ return A copy of this FluidStack 
 * /
