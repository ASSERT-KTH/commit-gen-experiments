BLEU SCORE: 0.010122231330332757

TEST MSG: Add shouldCauseBlockBreakReset callback to Item . This allows to keep breaking blocks if the NBT or similar changes .
GENERATED MSG: Update forge

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch <nl> index 0a87b49 . . c729a08 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch <nl> @ @ - 77 , 6 + 77 , 15 @ @ <nl> if ( flag & & iblockstate . func _ 185903 _ a ( this . field _ 78776 _ a . field _ 71439 _ g , this . field _ 78776 _ a . field _ 71439 _ g . field _ 70170 _ p , p _ 180511 _ 1 _ ) > = 1 . 0F ) <nl> { <nl> this . func _ 187103 _ a ( p _ 180511 _ 1 _ ) ; <nl> + @ @ - 342 , 7 + 352 , 7 @ @ <nl> + <nl> + if ( this . field _ 85183 _ f ! = null & & itemstack ! = null ) <nl> + { <nl> + - flag = itemstack . func _ 77973 _ b ( ) = = this . field _ 85183 _ f . func _ 77973 _ b ( ) & & ItemStack . func _ 77970 _ a ( itemstack , this . field _ 85183 _ f ) & & ( itemstack . func _ 77984 _ f ( ) | | itemstack . func _ 77960 _ j ( ) = = this . field _ 85183 _ f . func _ 77960 _ j ( ) ) ; <nl> + + flag = ! net . minecraftforge . client . ForgeHooksClient . shouldCauseBlockBreakReset ( this . field _ 85183 _ f , itemstack ) ; <nl> + } <nl> + <nl> + return p _ 178893 _ 1 _ . equals ( this . field _ 178895 _ c ) & & flag ; <nl> @ @ - 373 , 13 + 383 , 32 @ @ <nl> } <nl> else <nl> diff - - git a / patches / minecraft / net / minecraft / item / Item . java . patch b / patches / minecraft / net / minecraft / item / Item . java . patch <nl> index 3f1556f . . a8abb75 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / Item . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / Item . java . patch <nl> @ @ - 52 , 7 + 52 , 7 @ @ <nl> return p _ 77621 _ 1 _ . func _ 147447 _ a ( vec3d , vec3d1 , p _ 77621 _ 3 _ , ! p _ 77621 _ 3 _ , false ) ; <nl> } <nl> <nl> - @ @ - 426 , 11 + 432 , 557 @ @ <nl> + @ @ - 426 , 11 + 432 , 569 @ @ <nl> return false ; <nl> } <nl> <nl> @ @ - 571 , 6 + 571 , 18 @ @ <nl> + } <nl> + <nl> + / * * <nl> + + * Called when the player is mining a block and the item in his hand changes . <nl> + + * Allows to not reset blockbreaking if only NBT or similar changes . <nl> + + * @ param oldStack The old stack that was used for mining . Item in players main hand <nl> + + * @ param newStack The new stack <nl> + + * @ return True to reset block break progress <nl> + + * / <nl> + + public boolean shouldCauseBlockBreakReset ( ItemStack oldStack , ItemStack newStack ) <nl> + + { <nl> + + return ! ( newStack . func _ 77973 _ b ( ) = = oldStack . func _ 77973 _ b ( ) & & ItemStack . func _ 77970 _ a ( newStack , oldStack ) & & ( newStack . func _ 77984 _ f ( ) | | newStack . func _ 77960 _ j ( ) = = oldStack . func _ 77960 _ j ( ) ) ) ; <nl> + + } <nl> + + <nl> + + / * * <nl> + * Called from ItemStack . setItem , will hold extra data for the life of this ItemStack . <nl> + * Can be retrieved from stack . getCapabilities ( ) <nl> + * The NBT can be null if this is not called from readNBT or if the item the stack is <nl> @ @ - 610 , 7 + 622 , 7 @ @ <nl> public static void func _ 150900 _ l ( ) <nl> { <nl> func _ 179214 _ a ( Blocks . field _ 150348 _ b , ( new ItemMultiTexture ( Blocks . field _ 150348 _ b , Blocks . field _ 150348 _ b , new Function < ItemStack , String > ( ) <nl> - @ @ - 962 , 6 + 1514 , 10 @ @ <nl> + @ @ - 962 , 6 + 1526 , 10 @ @ <nl> private final float field _ 78011 _ i ; <nl> private final int field _ 78008 _ j ; <nl> <nl> @ @ - 621 , 7 + 633 , 7 @ @ <nl> private ToolMaterial ( int p _ i1874 _ 3 _ , int p _ i1874 _ 4 _ , float p _ i1874 _ 5 _ , float p _ i1874 _ 6 _ , int p _ i1874 _ 7 _ ) <nl> { <nl> this . field _ 78001 _ f = p _ i1874 _ 3 _ ; <nl> - @ @ - 996 , 9 + 1552 , 36 @ @ <nl> + @ @ - 996 , 9 + 1564 , 36 @ @ <nl> return this . field _ 78008 _ j ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index c76503a . . 9475d22 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 32 , 6 + 32 , 7 @ @ import java . nio . FloatBuffer ; <nl> import java . util . Collections ; <nl> import java . util . Map ; <nl> <nl> + import javax . annotation . Nonnull ; <nl> import javax . vecmath . Matrix3f ; <nl> import javax . vecmath . Matrix4f ; <nl> import javax . vecmath . Vector3f ; <nl> @ @ - 677 , 6 + 678 , 11 @ @ public class ForgeHooksClient <nl> return from . getItem ( ) . shouldCauseReequipAnimation ( from , to , changed ) ; <nl> } <nl> <nl> + public static boolean shouldCauseBlockBreakReset ( @ Nonnull ItemStack from , @ Nonnull ItemStack to ) <nl> + { <nl> + return from . getItem ( ) . shouldCauseBlockBreakReset ( from , to ) ; <nl> + } <nl> + <nl> public static BlockFaceUV applyUVLock ( BlockFaceUV blockFaceUV , EnumFacing originalSide , ITransformation rotation ) <nl> { <nl> TRSRTransformation global = new TRSRTransformation ( rotation . getMatrix ( ) ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java b / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java <nl> index b46dcf9 . . ad2445b 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java <nl> @ @ - 2 , 8 + 2 , 12 @ @ package net . minecraftforge . debug ; <nl> <nl> import net . minecraft . client . renderer . block . model . ModelResourceLocation ; <nl> import net . minecraft . creativetab . CreativeTabs ; <nl> + import net . minecraft . entity . Entity ; <nl> import net . minecraft . item . Item ; <nl> + import net . minecraft . item . ItemStack ; <nl> + import net . minecraft . nbt . NBTTagCompound ; <nl> import net . minecraft . util . ResourceLocation ; <nl> + import net . minecraft . world . World ; <nl> import net . minecraftforge . client . model . ModelLoader ; <nl> import net . minecraftforge . fml . common . Mod ; <nl> import net . minecraftforge . fml . common . Mod . EventHandler ; <nl> @ @ - 11 , 6 + 15 , 8 @ @ import net . minecraftforge . fml . common . SidedProxy ; <nl> import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> import net . minecraftforge . fml . common . registry . GameRegistry ; <nl> <nl> + import java . util . Random ; <nl> + <nl> @ Mod ( modid = ItemLayerModelDebug . MODID , version = ItemLayerModelDebug . VERSION ) <nl> public class ItemLayerModelDebug <nl> { <nl> @ @ - 55 , 5 + 61 , 30 @ @ public class ItemLayerModelDebug <nl> setUnlocalizedName ( MODID + " : " + name ) ; <nl> setRegistryName ( new ResourceLocation ( MODID , name ) ) ; <nl> } <nl> + <nl> + @ Override <nl> + public void onUpdate ( ItemStack stack , World worldIn , Entity entityIn , int itemSlot , boolean isSelected ) <nl> + { <nl> + NBTTagCompound tag = new NBTTagCompound ( ) ; <nl> + tag . setInteger ( " foo " , new Random ( ) . nextInt ( ) ) ; <nl> + stack . setTagCompound ( tag ) ; <nl> + stack . setStackDisplayName ( String . valueOf ( new Random ( ) . nextInt ( ) ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean shouldCauseBlockBreakReset ( ItemStack oldStack , ItemStack newStack ) <nl> + { <nl> + return shouldCauseReequipAnimation ( oldStack , newStack , false ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean shouldCauseReequipAnimation ( ItemStack oldStack , ItemStack newStack , boolean slotChanged ) <nl> + { <nl> + oldStack = oldStack . copy ( ) ; <nl> + oldStack . setTagCompound ( null ) ; <nl> + newStack = newStack . copy ( ) ; <nl> + newStack . setTagCompound ( null ) ; <nl> + return ! ItemStack . areItemStacksEqual ( oldStack , newStack ) ; <nl> + } <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / fml b / fml <nl> index a6dc03a . . 4d46abf 160000 <nl> - - - a / fml <nl> + + + b / fml <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c <nl> + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e <nl> diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> index 0ef9b48 . . 63a9622 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> @ @ - 21 , 10 + 21 , 10 @ @ <nl> this . disconnected = true ; <nl> this . mc . loadWorld ( ( WorldClient ) null ) ; <nl> <nl> - @ @ - 866 , 7 + 871 , 11 @ @ <nl> - public void handleChat ( Packet3Chat par1Packet3Chat ) <nl> - { <nl> - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; <nl> + @ @ - 870 , 7 + 875 , 11 @ @ <nl> + { <nl> + return ; <nl> + } <nl> - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; <nl> + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; <nl> + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) <nl> @ @ - 34 , 7 + 34 , 7 @ @ <nl> } <nl> <nl> public void handleAnimation ( Packet18Animation par1Packet18Animation ) <nl> - @ @ - 1354 , 6 + 1363 , 10 @ @ <nl> + @ @ - 1358 , 6 + 1367 , 10 @ @ <nl> { <nl> tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> index 6d2c8e1 . . a186e0f 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> @ @ - 13 , 11 + 13 , 16 @ @ <nl> public class EntityPlayerMP extends EntityPlayer implements ICrafting <nl> { <nl> private String translator = " en _ US " ; <nl> - @ @ - 165 , 18 + 171 , 10 @ @ <nl> + @ @ - 164 , 19 + 170 , 14 @ @ <nl> + super ( par2World , par3Str ) ; <nl> par4ItemInWorldManager . thisPlayerMP = this ; <nl> this . theItemInWorldManager = par4ItemInWorldManager ; <nl> - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; <nl> + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . <nl> + + this . renderDistance = 0 ; <nl> + + else <nl> + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; <nl> int i = chunkcoordinates . posX ; <nl> int j = chunkcoordinates . posZ ; <nl> @ @ - 33 , 7 + 38 , 7 @ @ <nl> <nl> this . mcServer = par1MinecraftServer ; <nl> this . stepHeight = 0 . 0F ; <nl> - @ @ - 240 , 11 + 238 , 6 @ @ <nl> + @ @ - 240 , 11 + 241 , 6 @ @ <nl> this . yOffset = 0 . 0F ; <nl> } <nl> <nl> @ @ - 45 , 7 + 50 , 7 @ @ <nl> / * * <nl> * Called to update the entity ' s position / logic . <nl> * / <nl> - @ @ - 254 , 7 + 247 , 7 @ @ <nl> + @ @ - 254 , 7 + 250 , 7 @ @ <nl> - - this . initialInvulnerability ; <nl> this . openContainer . detectAndSendChanges ( ) ; <nl> <nl> @ @ - 54 , 7 + 59 , 7 @ @ <nl> { <nl> this . closeScreen ( ) ; <nl> this . openContainer = this . inventoryContainer ; <nl> - @ @ - 290 , 7 + 283 , 10 @ @ <nl> + @ @ - 290 , 7 + 286 , 10 @ @ <nl> if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) <nl> { <nl> arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; <nl> @ @ - 66 , 7 + 71 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 311 , 6 + 307 , 7 @ @ <nl> + @ @ - 311 , 6 + 310 , 7 @ @ <nl> { <nl> Chunk chunk = ( Chunk ) iterator2 . next ( ) ; <nl> this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; <nl> @ @ - 74 , 7 + 79 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 383 , 11 + 380 , 25 @ @ <nl> + @ @ - 383 , 11 + 383 , 25 @ @ <nl> * / <nl> public void onDeath ( DamageSource par1DamageSource ) <nl> { <nl> @ @ - 100 , 7 + 105 , 7 @ @ <nl> } <nl> <nl> Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; <nl> - @ @ - 1054 , 4 + 1065 , 16 @ @ <nl> + @ @ - 1054 , 4 + 1068 , 16 @ @ <nl> { <nl> this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> index d28a430 . . 7e6a155 100644 <nl> - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> @ @ - 127 , 7 + 127 , 7 @ @ <nl> { <nl> this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; <nl> } <nl> - @ @ - 695 , 6 + 733 , 8 @ @ <nl> + @ @ - 698 , 6 + 736 , 8 @ @ <nl> } <nl> <nl> ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; <nl> @ @ - 136 , 7 + 136 , 7 @ @ <nl> this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; <nl> } <nl> <nl> - @ @ - 849 , 7 + 889 , 7 @ @ <nl> + @ @ - 852 , 7 + 892 , 7 @ @ <nl> return ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> index 7d63255 . . 7413a7d 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> @ @ - 1 , 11 + 1 , 15 @ @ <nl> package net . minecraftforge . common ; <nl> <nl> import cpw . mods . fml . common . FMLCommonHandler ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . entity . player . EntityPlayerMP ; <nl> import net . minecraft . item . ItemInWorldManager ; <nl> + import net . minecraft . network . packet . Packet204ClientInfo ; <nl> import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . stats . StatBase ; <nl> import net . minecraft . util . ChatMessageComponent ; <nl> import net . minecraft . util . ChunkCoordinates ; <nl> + import net . minecraft . util . DamageSource ; <nl> import net . minecraft . world . World ; <nl> <nl> / / Preliminary , simple Fake Player class <nl> @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP <nl> <nl> @ Override <nl> public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } <nl> + @ Override <nl> + public void addStat ( StatBase par1StatBase , int par2 ) { } <nl> + @ Override <nl> + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } <nl> + @ Override <nl> + public boolean isEntityInvulnerable ( ) { return true ; } <nl> + @ Override <nl> + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } <nl> + @ Override <nl> + public void onDeath ( DamageSource source ) { return ; } <nl> + @ Override <nl> + public void onUpdate ( ) { return ; } <nl> + @ Override <nl> + public void travelToDimension ( int dim ) { return ; } <nl> + @ Override <nl> + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 43dbe83 . . 8d98241 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; <nl> import net . minecraft . item . ItemStack ; <nl> import net . minecraft . item . ItemSword ; <nl> import net . minecraft . network . NetServerHandler ; <nl> + import net . minecraft . network . packet . Packet ; <nl> import net . minecraft . network . packet . Packet53BlockChange ; <nl> import net . minecraft . tileentity . TileEntity ; <nl> import net . minecraft . util . AxisAlignedBB ; <nl> @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks <nl> TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; <nl> if ( tileentity ! = null ) <nl> { <nl> - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; <nl> + Packet pkt = tileentity . getDescriptionPacket ( ) ; <nl> + if ( pkt ! = null ) <nl> + { <nl> + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; <nl> + } <nl> } <nl> } <nl> return event ; <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> index 5031fa6 . . 16d011f 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; <nl> import java . util . Map ; <nl> <nl> import net . minecraft . block . Block ; <nl> + import net . minecraft . util . StatCollector ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . event . Event ; <nl> <nl> @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry <nl> static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; <nl> static BiMap < Block , Fluid > fluidBlocks ; <nl> <nl> - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> + public static final Fluid WATER = new Fluid ( " water " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . water . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> + <nl> + public static final Fluid LAVA = new Fluid ( " lava " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . lava . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> <nl> public static int renderIdFluid = - 1 ; <nl>

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch 
 index 0a87b49 . . c729a08 100644 
 - - - a / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / multiplayer / PlayerControllerMP . java . patch 
 @ @ - 77 , 6 + 77 , 15 @ @ 
 if ( flag & & iblockstate . func _ 185903 _ a ( this . field _ 78776 _ a . field _ 71439 _ g , this . field _ 78776 _ a . field _ 71439 _ g . field _ 70170 _ p , p _ 180511 _ 1 _ ) > = 1 . 0F ) 
 { 
 this . func _ 187103 _ a ( p _ 180511 _ 1 _ ) ; 
 + @ @ - 342 , 7 + 352 , 7 @ @ 
 + 
 + if ( this . field _ 85183 _ f ! = null & & itemstack ! = null ) 
 + { 
 + - flag = itemstack . func _ 77973 _ b ( ) = = this . field _ 85183 _ f . func _ 77973 _ b ( ) & & ItemStack . func _ 77970 _ a ( itemstack , this . field _ 85183 _ f ) & & ( itemstack . func _ 77984 _ f ( ) | | itemstack . func _ 77960 _ j ( ) = = this . field _ 85183 _ f . func _ 77960 _ j ( ) ) ; 
 + + flag = ! net . minecraftforge . client . ForgeHooksClient . shouldCauseBlockBreakReset ( this . field _ 85183 _ f , itemstack ) ; 
 + } 
 + 
 + return p _ 178893 _ 1 _ . equals ( this . field _ 178895 _ c ) & & flag ; 
 @ @ - 373 , 13 + 383 , 32 @ @ 
 } 
 else 
 diff - - git a / patches / minecraft / net / minecraft / item / Item . java . patch b / patches / minecraft / net / minecraft / item / Item . java . patch 
 index 3f1556f . . a8abb75 100644 
 - - - a / patches / minecraft / net / minecraft / item / Item . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / Item . java . patch 
 @ @ - 52 , 7 + 52 , 7 @ @ 
 return p _ 77621 _ 1 _ . func _ 147447 _ a ( vec3d , vec3d1 , p _ 77621 _ 3 _ , ! p _ 77621 _ 3 _ , false ) ; 
 } 
 
 - @ @ - 426 , 11 + 432 , 557 @ @ 
 + @ @ - 426 , 11 + 432 , 569 @ @ 
 return false ; 
 } 
 
 @ @ - 571 , 6 + 571 , 18 @ @ 
 + } 
 + 
 + / * * 
 + + * Called when the player is mining a block and the item in his hand changes . 
 + + * Allows to not reset blockbreaking if only NBT or similar changes . 
 + + * @ param oldStack The old stack that was used for mining . Item in players main hand 
 + + * @ param newStack The new stack 
 + + * @ return True to reset block break progress 
 + + * / 
 + + public boolean shouldCauseBlockBreakReset ( ItemStack oldStack , ItemStack newStack ) 
 + + { 
 + + return ! ( newStack . func _ 77973 _ b ( ) = = oldStack . func _ 77973 _ b ( ) & & ItemStack . func _ 77970 _ a ( newStack , oldStack ) & & ( newStack . func _ 77984 _ f ( ) | | newStack . func _ 77960 _ j ( ) = = oldStack . func _ 77960 _ j ( ) ) ) ; 
 + + } 
 + + 
 + + / * * 
 + * Called from ItemStack . setItem , will hold extra data for the life of this ItemStack . 
 + * Can be retrieved from stack . getCapabilities ( ) 
 + * The NBT can be null if this is not called from readNBT or if the item the stack is 
 @ @ - 610 , 7 + 622 , 7 @ @ 
 public static void func _ 150900 _ l ( ) 
 { 
 func _ 179214 _ a ( Blocks . field _ 150348 _ b , ( new ItemMultiTexture ( Blocks . field _ 150348 _ b , Blocks . field _ 150348 _ b , new Function < ItemStack , String > ( ) 
 - @ @ - 962 , 6 + 1514 , 10 @ @ 
 + @ @ - 962 , 6 + 1526 , 10 @ @ 
 private final float field _ 78011 _ i ; 
 private final int field _ 78008 _ j ; 
 
 @ @ - 621 , 7 + 633 , 7 @ @ 
 private ToolMaterial ( int p _ i1874 _ 3 _ , int p _ i1874 _ 4 _ , float p _ i1874 _ 5 _ , float p _ i1874 _ 6 _ , int p _ i1874 _ 7 _ ) 
 { 
 this . field _ 78001 _ f = p _ i1874 _ 3 _ ; 
 - @ @ - 996 , 9 + 1552 , 36 @ @ 
 + @ @ - 996 , 9 + 1564 , 36 @ @ 
 return this . field _ 78008 _ j ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index c76503a . . 9475d22 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 32 , 6 + 32 , 7 @ @ import java . nio . FloatBuffer ; 
 import java . util . Collections ; 
 import java . util . Map ; 
 
 + import javax . annotation . Nonnull ; 
 import javax . vecmath . Matrix3f ; 
 import javax . vecmath . Matrix4f ; 
 import javax . vecmath . Vector3f ; 
 @ @ - 677 , 6 + 678 , 11 @ @ public class ForgeHooksClient 
 return from . getItem ( ) . shouldCauseReequipAnimation ( from , to , changed ) ; 
 } 
 
 + public static boolean shouldCauseBlockBreakReset ( @ Nonnull ItemStack from , @ Nonnull ItemStack to ) 
 + { 
 + return from . getItem ( ) . shouldCauseBlockBreakReset ( from , to ) ; 
 + } 
 + 
 public static BlockFaceUV applyUVLock ( BlockFaceUV blockFaceUV , EnumFacing originalSide , ITransformation rotation ) 
 { 
 TRSRTransformation global = new TRSRTransformation ( rotation . getMatrix ( ) ) ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java b / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java 
 index b46dcf9 . . ad2445b 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ItemLayerModelDebug . java 
 @ @ - 2 , 8 + 2 , 12 @ @ package net . minecraftforge . debug ; 
 
 import net . minecraft . client . renderer . block . model . ModelResourceLocation ; 
 import net . minecraft . creativetab . CreativeTabs ; 
 + import net . minecraft . entity . Entity ; 
 import net . minecraft . item . Item ; 
 + import net . minecraft . item . ItemStack ; 
 + import net . minecraft . nbt . NBTTagCompound ; 
 import net . minecraft . util . ResourceLocation ; 
 + import net . minecraft . world . World ; 
 import net . minecraftforge . client . model . ModelLoader ; 
 import net . minecraftforge . fml . common . Mod ; 
 import net . minecraftforge . fml . common . Mod . EventHandler ; 
 @ @ - 11 , 6 + 15 , 8 @ @ import net . minecraftforge . fml . common . SidedProxy ; 
 import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 import net . minecraftforge . fml . common . registry . GameRegistry ; 
 
 + import java . util . Random ; 
 + 
 @ Mod ( modid = ItemLayerModelDebug . MODID , version = ItemLayerModelDebug . VERSION ) 
 public class ItemLayerModelDebug 
 { 
 @ @ - 55 , 5 + 61 , 30 @ @ public class ItemLayerModelDebug 
 setUnlocalizedName ( MODID + " : " + name ) ; 
 setRegistryName ( new ResourceLocation ( MODID , name ) ) ; 
 } 
 + 
 + @ Override 
 + public void onUpdate ( ItemStack stack , World worldIn , Entity entityIn , int itemSlot , boolean isSelected ) 
 + { 
 + NBTTagCompound tag = new NBTTagCompound ( ) ; 
 + tag . setInteger ( " foo " , new Random ( ) . nextInt ( ) ) ; 
 + stack . setTagCompound ( tag ) ; 
 + stack . setStackDisplayName ( String . valueOf ( new Random ( ) . nextInt ( ) ) ) ; 
 + } 
 + 
 + @ Override 
 + public boolean shouldCauseBlockBreakReset ( ItemStack oldStack , ItemStack newStack ) 
 + { 
 + return shouldCauseReequipAnimation ( oldStack , newStack , false ) ; 
 + } 
 + 
 + @ Override 
 + public boolean shouldCauseReequipAnimation ( ItemStack oldStack , ItemStack newStack , boolean slotChanged ) 
 + { 
 + oldStack = oldStack . copy ( ) ; 
 + oldStack . setTagCompound ( null ) ; 
 + newStack = newStack . copy ( ) ; 
 + newStack . setTagCompound ( null ) ; 
 + return ! ItemStack . areItemStacksEqual ( oldStack , newStack ) ; 
 + } 
 } 
 }

NEAREST DIFF:
diff - - git a / fml b / fml 
 index a6dc03a . . 4d46abf 160000 
 - - - a / fml 
 + + + b / fml 
 @ @ - 1 + 1 @ @ 
 - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c 
 + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e 
 diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 index 0ef9b48 . . 63a9622 100644 
 - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 @ @ - 21 , 10 + 21 , 10 @ @ 
 this . disconnected = true ; 
 this . mc . loadWorld ( ( WorldClient ) null ) ; 
 
 - @ @ - 866 , 7 + 871 , 11 @ @ 
 - public void handleChat ( Packet3Chat par1Packet3Chat ) 
 - { 
 - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; 
 + @ @ - 870 , 7 + 875 , 11 @ @ 
 + { 
 + return ; 
 + } 
 - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; 
 + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; 
 + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) 
 @ @ - 34 , 7 + 34 , 7 @ @ 
 } 
 
 public void handleAnimation ( Packet18Animation par1Packet18Animation ) 
 - @ @ - 1354 , 6 + 1363 , 10 @ @ 
 + @ @ - 1358 , 6 + 1367 , 10 @ @ 
 { 
 tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 index 6d2c8e1 . . a186e0f 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 @ @ - 13 , 11 + 13 , 16 @ @ 
 public class EntityPlayerMP extends EntityPlayer implements ICrafting 
 { 
 private String translator = " en _ US " ; 
 - @ @ - 165 , 18 + 171 , 10 @ @ 
 + @ @ - 164 , 19 + 170 , 14 @ @ 
 + super ( par2World , par3Str ) ; 
 par4ItemInWorldManager . thisPlayerMP = this ; 
 this . theItemInWorldManager = par4ItemInWorldManager ; 
 - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; 
 + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . 
 + + this . renderDistance = 0 ; 
 + + else 
 + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; 
 int i = chunkcoordinates . posX ; 
 int j = chunkcoordinates . posZ ; 
 @ @ - 33 , 7 + 38 , 7 @ @ 
 
 this . mcServer = par1MinecraftServer ; 
 this . stepHeight = 0 . 0F ; 
 - @ @ - 240 , 11 + 238 , 6 @ @ 
 + @ @ - 240 , 11 + 241 , 6 @ @ 
 this . yOffset = 0 . 0F ; 
 } 
 
 @ @ - 45 , 7 + 50 , 7 @ @ 
 / * * 
 * Called to update the entity ' s position / logic . 
 * / 
 - @ @ - 254 , 7 + 247 , 7 @ @ 
 + @ @ - 254 , 7 + 250 , 7 @ @ 
 - - this . initialInvulnerability ; 
 this . openContainer . detectAndSendChanges ( ) ; 
 
 @ @ - 54 , 7 + 59 , 7 @ @ 
 { 
 this . closeScreen ( ) ; 
 this . openContainer = this . inventoryContainer ; 
 - @ @ - 290 , 7 + 283 , 10 @ @ 
 + @ @ - 290 , 7 + 286 , 10 @ @ 
 if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) 
 { 
 arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; 
 @ @ - 66 , 7 + 71 , 7 @ @ 
 } 
 } 
 
 - @ @ - 311 , 6 + 307 , 7 @ @ 
 + @ @ - 311 , 6 + 310 , 7 @ @ 
 { 
 Chunk chunk = ( Chunk ) iterator2 . next ( ) ; 
 this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; 
 @ @ - 74 , 7 + 79 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 383 , 11 + 380 , 25 @ @ 
 + @ @ - 383 , 11 + 383 , 25 @ @ 
 * / 
 public void onDeath ( DamageSource par1DamageSource ) 
 { 
 @ @ - 100 , 7 + 105 , 7 @ @ 
 } 
 
 Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; 
 - @ @ - 1054 , 4 + 1065 , 16 @ @ 
 + @ @ - 1054 , 4 + 1068 , 16 @ @ 
 { 
 this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 index d28a430 . . 7e6a155 100644 
 - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 @ @ - 127 , 7 + 127 , 7 @ @ 
 { 
 this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; 
 } 
 - @ @ - 695 , 6 + 733 , 8 @ @ 
 + @ @ - 698 , 6 + 736 , 8 @ @ 
 } 
 
 ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; 
 @ @ - 136 , 7 + 136 , 7 @ @ 
 this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; 
 } 
 
 - @ @ - 849 , 7 + 889 , 7 @ @ 
 + @ @ - 852 , 7 + 892 , 7 @ @ 
 return ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 index 7d63255 . . 7413a7d 100644 
 - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java 
 + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 @ @ - 1 , 11 + 1 , 15 @ @ 
 package net . minecraftforge . common ; 
 
 import cpw . mods . fml . common . FMLCommonHandler ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . entity . player . EntityPlayerMP ; 
 import net . minecraft . item . ItemInWorldManager ; 
 + import net . minecraft . network . packet . Packet204ClientInfo ; 
 import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . stats . StatBase ; 
 import net . minecraft . util . ChatMessageComponent ; 
 import net . minecraft . util . ChunkCoordinates ; 
 + import net . minecraft . util . DamageSource ; 
 import net . minecraft . world . World ; 
 
 / / Preliminary , simple Fake Player class 
 @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP 
 
 @ Override 
 public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } 
 + @ Override 
 + public void addStat ( StatBase par1StatBase , int par2 ) { } 
 + @ Override 
 + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } 
 + @ Override 
 + public boolean isEntityInvulnerable ( ) { return true ; } 
 + @ Override 
 + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } 
 + @ Override 
 + public void onDeath ( DamageSource source ) { return ; } 
 + @ Override 
 + public void onUpdate ( ) { return ; } 
 + @ Override 
 + public void travelToDimension ( int dim ) { return ; } 
 + @ Override 
 + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 43dbe83 . . 8d98241 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; 
 import net . minecraft . item . ItemStack ; 
 import net . minecraft . item . ItemSword ; 
 import net . minecraft . network . NetServerHandler ; 
 + import net . minecraft . network . packet . Packet ; 
 import net . minecraft . network . packet . Packet53BlockChange ; 
 import net . minecraft . tileentity . TileEntity ; 
 import net . minecraft . util . AxisAlignedBB ; 
 @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks 
 TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; 
 if ( tileentity ! = null ) 
 { 
 - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; 
 + Packet pkt = tileentity . getDescriptionPacket ( ) ; 
 + if ( pkt ! = null ) 
 + { 
 + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; 
 + } 
 } 
 } 
 return event ; 
 diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 index 5031fa6 . . 16d011f 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; 
 import java . util . Map ; 
 
 import net . minecraft . block . Block ; 
 + import net . minecraft . util . StatCollector ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . event . Event ; 
 
 @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry 
 static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; 
 static BiMap < Block , Fluid > fluidBlocks ; 
 
 - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 + public static final Fluid WATER = new Fluid ( " water " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . water . name " ) ; 
 + } 
 + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 + 
 + public static final Fluid LAVA = new Fluid ( " lava " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . lava . name " ) ; 
 + } 
 + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 
 public static int renderIdFluid = - 1 ; 

