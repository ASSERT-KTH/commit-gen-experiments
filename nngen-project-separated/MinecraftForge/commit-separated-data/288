BLEU SCORE: 0.0167475178542289

TEST MSG: Add MobSpawnerBaseLogic reference to SpecialSpawn and CheckSpawn events
GENERATED MSG: New world event for controlling potential entity spawnlists . For # 430

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityMinecartMobSpawner . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityMinecartMobSpawner . java . patch <nl> new file mode 100644 <nl> index 0000000 . . b3f36c8 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / entity / item / EntityMinecartMobSpawner . java . patch <nl> @ @ - 0 , 0 + 1 , 12 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / entity / item / EntityMinecartMobSpawner . java <nl> + + + + . . / src - work / minecraft / net / minecraft / entity / item / EntityMinecartMobSpawner . java <nl> + @ @ - 33 , 6 + 33 , 9 @ @ <nl> + { <nl> + return new BlockPos ( EntityMinecartMobSpawner . this ) ; <nl> + } <nl> + + public net . minecraft . entity . Entity getSpawnerEntity ( ) { <nl> + + return EntityMinecartMobSpawner . this ; <nl> + + } <nl> + } ; <nl> + <nl> + public EntityMinecartMobSpawner ( World p _ i46752 _ 1 _ ) <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / MobSpawnerBaseLogic . java . patch b / patches / minecraft / net / minecraft / tileentity / MobSpawnerBaseLogic . java . patch <nl> index 2fa117c . . 15fb0ac 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / MobSpawnerBaseLogic . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / MobSpawnerBaseLogic . java . patch <nl> @ @ - 5 , 11 + 5 , 19 @ @ <nl> entity . func _ 70012 _ b ( entity . field _ 70165 _ t , entity . field _ 70163 _ u , entity . field _ 70161 _ v , world . field _ 73012 _ v . nextFloat ( ) * 360 . 0F , 0 . 0F ) ; <nl> <nl> - if ( entityliving = = null | | entityliving . func _ 70601 _ bi ( ) & & entityliving . func _ 70058 _ J ( ) ) <nl> - + if ( entityliving = = null | | net . minecraftforge . event . ForgeEventFactory . canEntitySpawnSpawner ( entityliving , func _ 98271 _ a ( ) , ( float ) entity . field _ 70165 _ t , ( float ) entity . field _ 70163 _ u , ( float ) entity . field _ 70161 _ v ) ) <nl> + + if ( entityliving = = null | | net . minecraftforge . event . ForgeEventFactory . canEntitySpawnSpawner ( entityliving , func _ 98271 _ a ( ) , ( float ) entity . field _ 70165 _ t , ( float ) entity . field _ 70163 _ u , ( float ) entity . field _ 70161 _ v , this ) ) <nl> { <nl> if ( this . field _ 98282 _ f . func _ 185277 _ b ( ) . func _ 186856 _ d ( ) = = 1 & & this . field _ 98282 _ f . func _ 185277 _ b ( ) . func _ 150297 _ b ( " id " , 8 ) & & entity instanceof EntityLiving ) <nl> { <nl> - + if ( ! net . minecraftforge . event . ForgeEventFactory . doSpecialSpawn ( entityliving , this . func _ 98271 _ a ( ) , ( float ) entity . field _ 70165 _ t , ( float ) entity . field _ 70163 _ u , ( float ) entity . field _ 70161 _ v ) ) <nl> + + if ( ! net . minecraftforge . event . ForgeEventFactory . doSpecialSpawn ( entityliving , this . func _ 98271 _ a ( ) , ( float ) entity . field _ 70165 _ t , ( float ) entity . field _ 70163 _ u , ( float ) entity . field _ 70161 _ v , this ) ) <nl> ( ( EntityLiving ) entity ) . func _ 180482 _ a ( world . func _ 175649 _ E ( new BlockPos ( entity ) ) , ( IEntityLivingData ) null ) ; <nl> } <nl> <nl> + @ @ - 307 , 4 + 308 , 7 @ @ <nl> + { <nl> + return this . field _ 98284 _ d ; <nl> + } <nl> + + <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + + @ Nullable public Entity getSpawnerEntity ( ) { return null ; } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> index a319a7a . . 2f9d1e3 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 42 , 6 + 42 , 7 @ @ import net . minecraft . entity . projectile . EntityThrowable ; <nl> import net . minecraft . init . Blocks ; <nl> import net . minecraft . item . Item ; <nl> import net . minecraft . item . ItemStack ; <nl> + import net . minecraft . tileentity . MobSpawnerBaseLogic ; <nl> import net . minecraft . tileentity . TileEntity ; <nl> import net . minecraft . util . ActionResult ; <nl> import net . minecraft . util . DamageSource ; <nl> @ @ - 176 , 23 + 177 , 52 @ @ public class ForgeEventFactory <nl> } <nl> <nl> / * * <nl> - * @ deprecated use { @ link # canEntitySpawn ( EntityLiving , World , float , float , float , boolean ) } instead <nl> + * @ deprecated use { @ link # canEntitySpawn ( EntityLiving , World , float , float , float , MobSpawnerBaseLogic ) } instead <nl> * / <nl> - @ Deprecated <nl> + @ Deprecated / / TODO remove in 1 . 13 <nl> public static Result canEntitySpawn ( EntityLiving entity , World world , float x , float y , float z ) <nl> { <nl> return canEntitySpawn ( entity , world , x , y , z , true ) ; <nl> } <nl> - <nl> + / * * <nl> + * @ deprecated use { @ link # canEntitySpawn ( EntityLiving , World , float , float , float , MobSpawnerBaseLogic ) } instead <nl> + * / <nl> + @ Deprecated / / Still used in base game for non - spawner spawns , which is safe <nl> public static Result canEntitySpawn ( EntityLiving entity , World world , float x , float y , float z , boolean isSpawner ) <nl> { <nl> if ( entity = = null ) <nl> return Result . DEFAULT ; <nl> - LivingSpawnEvent . CheckSpawn event = new LivingSpawnEvent . CheckSpawn ( entity , world , x , y , z , isSpawner ) ; <nl> + LivingSpawnEvent . CheckSpawn event = new LivingSpawnEvent . CheckSpawn ( entity , world , x , y , z , isSpawner ) ; / / TODO : replace isSpawner with null in 1 . 13 <nl> + MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> + return event . getResult ( ) ; <nl> + } <nl> + <nl> + public static Result canEntitySpawn ( EntityLiving entity , World world , float x , float y , float z , MobSpawnerBaseLogic spawner ) <nl> + { <nl> + if ( entity = = null ) <nl> + return Result . DEFAULT ; <nl> + LivingSpawnEvent . CheckSpawn event = new LivingSpawnEvent . CheckSpawn ( entity , world , x , y , z , spawner ) ; <nl> MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> return event . getResult ( ) ; <nl> } <nl> <nl> + public static boolean canEntitySpawnSpawner ( EntityLiving entity , World world , float x , float y , float z , MobSpawnerBaseLogic spawner ) <nl> + { <nl> + Result result = canEntitySpawn ( entity , world , x , y , z , spawner ) ; <nl> + if ( result = = Result . DEFAULT ) <nl> + { <nl> + return entity . getCanSpawnHere ( ) & & entity . isNotColliding ( ) ; / / vanilla logic <nl> + } <nl> + else <nl> + { <nl> + return result = = Result . ALLOW ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * @ deprecated Use { @ link # canEntitySpawnSpawner ( EntityLiving , World , float , float , float , MobSpawnerBaseLogic ) } <nl> + * / <nl> + @ Deprecated / / TODO remove in 1 . 13 <nl> public static boolean canEntitySpawnSpawner ( EntityLiving entity , World world , float x , float y , float z ) <nl> { <nl> Result result = canEntitySpawn ( entity , world , x , y , z , true ) ; <nl> @ @ - 206 , 9 + 236 , 18 @ @ public class ForgeEventFactory <nl> } <nl> } <nl> <nl> + / * * <nl> + * @ deprecated Use { @ link # canEntitySpawnSpawner ( EntityLiving , World , float , float , float , MobSpawnerBaseLogic ) } <nl> + * / <nl> + @ Deprecated / / Still used in base game for non - spawner spawns , which is safe <nl> public static boolean doSpecialSpawn ( EntityLiving entity , World world , float x , float y , float z ) <nl> { <nl> - return MinecraftForge . EVENT _ BUS . post ( new LivingSpawnEvent . SpecialSpawn ( entity , world , x , y , z ) ) ; <nl> + return MinecraftForge . EVENT _ BUS . post ( new LivingSpawnEvent . SpecialSpawn ( entity , world , x , y , z , null ) ) ; <nl> + } <nl> + <nl> + public static boolean doSpecialSpawn ( EntityLiving entity , World world , float x , float y , float z , MobSpawnerBaseLogic spawner ) <nl> + { <nl> + return MinecraftForge . EVENT _ BUS . post ( new LivingSpawnEvent . SpecialSpawn ( entity , world , x , y , z , spawner ) ) ; <nl> } <nl> <nl> public static Result canEntityDespawn ( EntityLiving entity ) <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LivingSpawnEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LivingSpawnEvent . java <nl> index 29484f2 . . 71788aa 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / entity / living / LivingSpawnEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / entity / living / LivingSpawnEvent . java <nl> @ @ - 19 , 6 + 19 , 9 @ @ <nl> <nl> package net . minecraftforge . event . entity . living ; <nl> <nl> + import javax . annotation . Nullable ; <nl> + import net . minecraft . tileentity . MobSpawnerBaseLogic ; <nl> + import net . minecraft . util . math . BlockPos ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . event . ForgeEventFactory ; <nl> import net . minecraftforge . fml . common . eventhandler . Cancelable ; <nl> @ @ - 70 , 7 + 73 , 10 @ @ public class LivingSpawnEvent extends LivingEvent <nl> @ HasResult <nl> public static class CheckSpawn extends LivingSpawnEvent <nl> { <nl> - private final boolean isSpawner ; <nl> + private final boolean isSpawner ; / / TODO : remove in 1 . 13 <nl> + @ Nullable <nl> + private final MobSpawnerBaseLogic spawner ; <nl> + <nl> <nl> / * * <nl> * CheckSpawn is fired when an Entity is about to be spawned . <nl> @ @ - 79 , 25 + 85 , 55 @ @ public class LivingSpawnEvent extends LivingEvent <nl> * @ param x x coordinate <nl> * @ param y y coordinate <nl> * @ param z z coordinate <nl> + * @ param spawner position of the MobSpawner <nl> + * null if it this spawn is coming from a WorldSpawner <nl> + * / <nl> + public CheckSpawn ( EntityLiving entity , World world , float x , float y , float z , @ Nullable MobSpawnerBaseLogic spawner ) <nl> + { <nl> + super ( entity , world , x , y , z ) ; <nl> + this . isSpawner = spawner ! = null ; <nl> + this . spawner = spawner ; <nl> + } <nl> + <nl> + / * * <nl> + * @ deprecated Use { @ link CheckSpawn # # CheckSpawn ( EntityLiving , World , float , float , float , MobSpawnerBaseLogic ) } <nl> + * with a spawner instance , or null if not a spawner <nl> + * CheckSpawn is fired when an Entity is about to be spawned . <nl> + * @ param entity the spawning entity <nl> + * @ param world the world to spawn in <nl> + * @ param x x coordinate <nl> + * @ param y y coordinate <nl> + * @ param z z coordinate <nl> * @ param isSpawner true if this spawn is done by a MobSpawner , <nl> * false if it this spawn is coming from a WorldSpawner <nl> * / <nl> + @ Deprecated / / TODO : Remove in 1 . 13 <nl> public CheckSpawn ( EntityLiving entity , World world , float x , float y , float z , boolean isSpawner ) <nl> { <nl> super ( entity , world , x , y , z ) ; <nl> this . isSpawner = isSpawner ; <nl> + spawner = null ; <nl> } <nl> <nl> / * * <nl> - * @ deprecated Use { @ link CheckSpawn # CheckSpawn ( EntityLiving , World , float , float , float , boolean ) } instead <nl> + * @ deprecated Use { @ link CheckSpawn # CheckSpawn ( EntityLiving , World , float , float , float , MobSpawnerBaseLogic ) } instead <nl> * / <nl> - @ Deprecated <nl> + @ Deprecated / / TODO : Remove in 1 . 13 <nl> public CheckSpawn ( EntityLiving entity , World world , float x , float y , float z ) <nl> { <nl> this ( entity , world , x , y , z , true ) ; <nl> } <nl> <nl> - public boolean isSpawner ( ) { return isSpawner ; } <nl> + public boolean isSpawner ( ) <nl> + { <nl> + return isSpawner ; / / TODO : replace with spawner null check in 1 . 13 <nl> + } <nl> + <nl> + @ Nullable <nl> + public MobSpawnerBaseLogic getSpawner ( ) <nl> + { <nl> + return spawner ; <nl> + } <nl> } <nl> <nl> / * * <nl> @ @ - 116 , 9 + 152 , 33 @ @ public class LivingSpawnEvent extends LivingEvent <nl> @ Cancelable <nl> public static class SpecialSpawn extends LivingSpawnEvent <nl> { <nl> + @ Nullable <nl> + private final MobSpawnerBaseLogic spawner ; <nl> + <nl> + / * * <nl> + * @ deprecated Use { @ link SpecialSpawn # SpecialSpawn ( EntityLiving , World , float , float , float , MobSpawnerBaseLogic ) } <nl> + * with originating spawner instance or null <nl> + * / <nl> + @ Deprecated / / TODO : remove in 1 . 13 <nl> public SpecialSpawn ( EntityLiving entity , World world , float x , float y , float z ) <nl> { <nl> super ( entity , world , x , y , z ) ; <nl> + spawner = null ; <nl> + } <nl> + <nl> + / * * <nl> + * @ param spawner the position of a tileentity or approximate position of an entity that initiated the spawn if any <nl> + * / <nl> + public SpecialSpawn ( EntityLiving entity , World world , float x , float y , float z , @ Nullable MobSpawnerBaseLogic spawner ) <nl> + { <nl> + super ( entity , world , x , y , z ) ; <nl> + this . spawner = spawner ; <nl> + } <nl> + <nl> + @ Nullable <nl> + public MobSpawnerBaseLogic getSpawner ( ) <nl> + { <nl> + return spawner ; <nl> } <nl> } <nl> <nl> diff - - git a / src / test / java / net / minecraftforge / fml / test / SpecialSpawnEventTest . java b / src / test / java / net / minecraftforge / fml / test / SpecialSpawnEventTest . java <nl> new file mode 100644 <nl> index 0000000 . . 4823705 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / fml / test / SpecialSpawnEventTest . java <nl> @ @ - 0 , 0 + 1 , 46 @ @ <nl> + package net . minecraftforge . fml . test ; <nl> + <nl> + import net . minecraft . entity . Entity ; <nl> + import net . minecraft . entity . passive . EntityChicken ; <nl> + import net . minecraft . init . Blocks ; <nl> + import net . minecraft . tileentity . MobSpawnerBaseLogic ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . event . entity . living . LivingSpawnEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . Mod . EventHandler ; <nl> + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + <nl> + @ Mod ( modid = SpecialSpawnEventTest . MOD _ ID , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> + public class SpecialSpawnEventTest { <nl> + private static final boolean ENABLED = false ; <nl> + public static final String MOD _ ID = " spawnerduratest " ; <nl> + <nl> + @ EventHandler <nl> + public void onPreInit ( FMLPreInitializationEvent e ) <nl> + { <nl> + if ( ENABLED ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + } <nl> + <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public void specialSpawnEvent ( LivingSpawnEvent . SpecialSpawn e ) <nl> + { <nl> + MobSpawnerBaseLogic spawner = e . getSpawner ( ) ; <nl> + if ( spawner = = null ) return ; <nl> + if ( spawner . getSpawnerEntity ( ) ! = null ) <nl> + { <nl> + Entity spawn = new EntityChicken ( e . getWorld ( ) ) ; <nl> + spawn . copyLocationAndAnglesFrom ( spawner . getSpawnerEntity ( ) ) ; <nl> + e . getWorld ( ) . spawnEntity ( spawn ) ; <nl> + spawner . getSpawnerEntity ( ) . setDead ( ) ; <nl> + } <nl> + else <nl> + { <nl> + e . getWorld ( ) . setBlockState ( spawner . getSpawnerPosition ( ) , Blocks . FIRE . getDefaultState ( ) ) ; <nl> + } <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / common / net / minecraftforge / event / ForgeEventFactory . java b / common / net / minecraftforge / event / ForgeEventFactory . java <nl> index 0210321 . . 3f1deed 100644 <nl> - - - a / common / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / common / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 1 , 16 + 1 , 23 @ @ <nl> package net . minecraftforge . event ; <nl> <nl> + import java . util . List ; <nl> + <nl> import net . minecraft . block . Block ; <nl> import net . minecraft . entity . EntityLiving ; <nl> + import net . minecraft . entity . EnumCreatureType ; <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . item . ItemStack ; <nl> import net . minecraft . world . World ; <nl> + import net . minecraft . world . WorldServer ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . event . Event . Result ; <nl> import net . minecraftforge . event . entity . living . LivingSpawnEvent ; <nl> import net . minecraftforge . event . entity . living . LivingSpecialSpawnEvent ; <nl> - import net . minecraftforge . event . entity . player . * ; <nl> + import net . minecraftforge . event . entity . player . PlayerDestroyItemEvent ; <nl> + import net . minecraftforge . event . entity . player . PlayerEvent ; <nl> + import net . minecraftforge . event . entity . player . PlayerInteractEvent ; <nl> import net . minecraftforge . event . entity . player . PlayerInteractEvent . Action ; <nl> + import net . minecraftforge . event . world . WorldEvent ; <nl> <nl> @ SuppressWarnings ( " deprecation " ) <nl> public class ForgeEventFactory <nl> @ @ - 49 , 14 + 56 , 16 @ @ public class ForgeEventFactory <nl> <nl> public static boolean doSpecialSpawn ( EntityLiving entity , World world , float x , float y , float z ) <nl> { <nl> - boolean result = MinecraftForge . EVENT _ BUS . post ( new LivingSpecialSpawnEvent ( entity , world , x , y , z ) ) ; <nl> - LivingSpawnEvent . SpecialSpawn nEvent = new LivingSpawnEvent . SpecialSpawn ( entity , world , x , y , z ) ; <nl> + return MinecraftForge . EVENT _ BUS . post ( new LivingSpawnEvent . SpecialSpawn ( entity , world , x , y , z ) ) ; <nl> + } <nl> <nl> - if ( result ) / / For the time being , copy the canceled state from the old legacy event <nl> - { / / Remove when we remove LivingSpecialSpawnEvent . <nl> - nEvent . setCanceled ( true ) ; <nl> + public static List getPotentialSpawns ( WorldServer world , EnumCreatureType type , int x , int y , int z , List oldList ) <nl> + { <nl> + WorldEvent . PotentialSpawns event = new WorldEvent . PotentialSpawns ( world , type , x , y , z , oldList ) ; <nl> + if ( MinecraftForge . EVENT _ BUS . post ( event ) ) <nl> + { <nl> + return null ; <nl> } <nl> - <nl> - return MinecraftForge . EVENT _ BUS . post ( nEvent ) ; <nl> + return event . list ; <nl> } <nl> } <nl> diff - - git a / common / net / minecraftforge / event / entity / living / LivingSpecialSpawnEvent . java b / common / net / minecraftforge / event / entity / living / LivingSpecialSpawnEvent . java <nl> deleted file mode 100644 <nl> index d8c2d4d . . 0000000 <nl> - - - a / common / net / minecraftforge / event / entity / living / LivingSpecialSpawnEvent . java <nl> + + + / dev / null <nl> @ @ - 1 , 25 + 0 , 0 @ @ <nl> - package net . minecraftforge . event . entity . living ; <nl> - <nl> - import net . minecraft . entity . EntityLiving ; <nl> - import net . minecraft . world . World ; <nl> - import net . minecraftforge . event . Cancelable ; <nl> - <nl> - @ Deprecated / / Remove next MC Version <nl> - @ Cancelable <nl> - public class LivingSpecialSpawnEvent extends LivingEvent <nl> - { <nl> - public final World world ; <nl> - public final float x ; <nl> - public final float y ; <nl> - public final float z ; <nl> - private boolean handeled = false ; <nl> - <nl> - public LivingSpecialSpawnEvent ( EntityLiving entity , World world , float x , float y , float z ) <nl> - { <nl> - super ( entity ) ; <nl> - this . world = world ; <nl> - this . x = x ; <nl> - this . y = y ; <nl> - this . z = z ; <nl> - } <nl> - } <nl> diff - - git a / common / net / minecraftforge / event / world / WorldEvent . java b / common / net / minecraftforge / event / world / WorldEvent . java <nl> index 4e15651 . . 6ebbffb 100644 <nl> - - - a / common / net / minecraftforge / event / world / WorldEvent . java <nl> + + + b / common / net / minecraftforge / event / world / WorldEvent . java <nl> @ @ - 1 , 6 + 1 , 12 @ @ <nl> package net . minecraftforge . event . world ; <nl> <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + <nl> + import net . minecraft . entity . EnumCreatureType ; <nl> import net . minecraft . world . World ; <nl> + import net . minecraft . world . biome . SpawnListEntry ; <nl> + import net . minecraftforge . event . Cancelable ; <nl> import net . minecraftforge . event . Event ; <nl> <nl> public class WorldEvent extends Event <nl> @ @ - 26 , 4 + 32 , 35 @ @ public class WorldEvent extends Event <nl> { <nl> public Save ( World world ) { super ( world ) ; } <nl> } <nl> + <nl> + / * * <nl> + * Called by WorldServer to gather a list of all possible entities that can spawn at the specified location . <nl> + * Canceling the event will result in a empty list , meaning no entity will be spawned . <nl> + * / <nl> + @ Cancelable <nl> + public static class PotentialSpawns extends WorldEvent <nl> + { <nl> + public final EnumCreatureType type ; <nl> + public final int x ; <nl> + public final int y ; <nl> + public final int z ; <nl> + public final List < SpawnListEntry > list ; <nl> + <nl> + public PotentialSpawns ( World world , EnumCreatureType type , int x , int y , int z , List oldList ) <nl> + { <nl> + super ( world ) ; <nl> + this . x = x ; <nl> + this . y = y ; <nl> + this . z = z ; <nl> + this . type = type ; <nl> + if ( oldList ! = null ) <nl> + { <nl> + this . list = ( List < SpawnListEntry > ) oldList ; <nl> + } <nl> + else <nl> + { <nl> + this . list = new ArrayList < SpawnListEntry > ( ) ; <nl> + } <nl> + } <nl> + } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / WorldServer . java . patch b / patches / minecraft / net / minecraft / world / WorldServer . java . patch <nl> index 4316755 . . ef72331 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / WorldServer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / WorldServer . java . patch <nl> @ @ - 9 , 7 + 9 , 7 @ @ <nl> import java . util . ArrayList ; <nl> import java . util . HashSet ; <nl> import java . util . Iterator ; <nl> - @ @ - 47 , 11 + 49 , 18 @ @ <nl> + @ @ - 47 , 11 + 49 , 19 @ @ <nl> import net . minecraft . world . biome . WorldChunkManager ; <nl> import net . minecraft . world . chunk . Chunk ; <nl> import net . minecraft . world . chunk . IChunkProvider ; <nl> @ @ - 24 , 11 + 24 , 12 @ @ <nl> + import static net . minecraftforge . common . ChestGenHooks . * ; <nl> + import net . minecraftforge . common . DimensionManager ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + + import net . minecraftforge . event . ForgeEventFactory ; <nl> + import net . minecraftforge . event . world . WorldEvent ; <nl> <nl> public class WorldServer extends World <nl> { <nl> - @ @ - 88 , 6 + 97 , 10 @ @ <nl> + @ @ - 88 , 6 + 98 , 10 @ @ <nl> / * * An IntHashMap of entity IDs ( integers ) to their Entity objects . * / <nl> private IntHashMap entityIdMap ; <nl> <nl> @ @ - 39 , 7 + 40 , 7 @ @ <nl> public WorldServer ( MinecraftServer par1MinecraftServer , ISaveHandler par2ISaveHandler , String par3Str , int par4 , WorldSettings par5WorldSettings , Profiler par6Profiler , ILogAgent par7ILogAgent ) <nl> { <nl> super ( par2ISaveHandler , par3Str , par5WorldSettings , WorldProvider . getProviderForDimension ( par4 ) , par6Profiler , par7ILogAgent ) ; <nl> - @ @ - 122 , 6 + 135 , 7 @ @ <nl> + @ @ - 122 , 6 + 136 , 7 @ @ <nl> <nl> scoreboardsavedata . func _ 96499 _ a ( this . field _ 96442 _ D ) ; <nl> ( ( ServerScoreboard ) this . field _ 96442 _ D ) . func _ 96547 _ a ( scoreboardsavedata ) ; <nl> @ @ - 47 , 7 + 48 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 184 , 6 + 198 , 10 @ @ <nl> + @ @ - 184 , 6 + 199 , 10 @ @ <nl> this . villageSiegeObj . tick ( ) ; <nl> this . theProfiler . endStartSection ( " portalForcer " ) ; <nl> this . field _ 85177 _ Q . func _ 85189 _ a ( this . getTotalWorldTime ( ) ) ; <nl> @ @ - 58 , 7 + 59 , 15 @ @ <nl> this . theProfiler . endSection ( ) ; <nl> this . sendAndApplyBlockEvents ( ) ; <nl> } <nl> - @ @ - 237 , 10 + 255 , 7 @ @ <nl> + @ @ - 194 , 6 + 213 , 7 @ @ <nl> + public SpawnListEntry spawnRandomCreature ( EnumCreatureType par1EnumCreatureType , int par2 , int par3 , int par4 ) <nl> + { <nl> + List list = this . getChunkProvider ( ) . getPossibleCreatures ( par1EnumCreatureType , par2 , par3 , par4 ) ; <nl> + + list = ForgeEventFactory . getPotentialSpawns ( this , par1EnumCreatureType , par2 , par3 , par4 , list ) ; <nl> + return list ! = null & & ! list . isEmpty ( ) ? ( SpawnListEntry ) WeightedRandom . getRandomItem ( this . rand , list ) : null ; <nl> + } <nl> + <nl> + @ @ - 237 , 10 + 257 , 7 @ @ <nl> <nl> private void resetRainAndThunder ( ) <nl> { <nl> @ @ - 70 , 7 + 79 , 7 @ @ <nl> } <nl> <nl> public boolean areAllPlayersAsleep ( ) <nl> - @ @ - 311 , 6 + 326 , 14 @ @ <nl> + @ @ - 311 , 6 + 328 , 14 @ @ <nl> int i = 0 ; <nl> int j = 0 ; <nl> Iterator iterator = this . activeChunkSet . iterator ( ) ; <nl> @ @ - 85 , 7 + 94 , 7 @ @ <nl> <nl> while ( iterator . hasNext ( ) ) <nl> { <nl> - @ @ - 321 , 14 + 344 , 18 @ @ <nl> + @ @ - 321 , 14 + 346 , 18 @ @ <nl> Chunk chunk = this . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ; <nl> this . moodSoundAndLightCheck ( k , l , chunk ) ; <nl> this . theProfiler . endStartSection ( " tickChunk " ) ; <nl> @ @ - 106 , 7 + 115 , 7 @ @ <nl> { <nl> this . updateLCG = this . updateLCG * 3 + 1013904223 ; <nl> i1 = this . updateLCG > > 2 ; <nl> - @ @ - 345 , 7 + 372 , 7 @ @ <nl> + @ @ - 345 , 7 + 374 , 7 @ @ <nl> this . theProfiler . endStartSection ( " iceandsnow " ) ; <nl> int i2 ; <nl> <nl> @ @ - 115 , 7 + 124 , 7 @ @ <nl> { <nl> this . updateLCG = this . updateLCG * 3 + 1013904223 ; <nl> i1 = this . updateLCG > > 2 ; <nl> - @ @ - 430 , 7 + 457 , 8 @ @ <nl> + @ @ - 430 , 7 + 459 , 8 @ @ <nl> public void func _ 82740 _ a ( int par1 , int par2 , int par3 , int par4 , int par5 , int par6 ) <nl> { <nl> NextTickListEntry nextticklistentry = new NextTickListEntry ( par1 , par2 , par3 , par4 ) ; <nl> @ @ - 125 , 7 + 134 , 7 @ @ <nl> <nl> if ( this . scheduledUpdatesAreImmediate & & par4 > 0 ) <nl> { <nl> - @ @ - 493 , 7 + 521 , 7 @ @ <nl> + @ @ - 493 , 7 + 523 , 7 @ @ <nl> * / <nl> public void updateEntities ( ) <nl> { <nl> @ @ - 134 , 7 + 143 , 7 @ @ <nl> { <nl> if ( this . updateEntityTick + + > = 1200 ) <nl> { <nl> - @ @ - 559 , 7 + 587 , 8 @ @ <nl> + @ @ - 559 , 7 + 589 , 8 @ @ <nl> { <nl> nextticklistentry = ( NextTickListEntry ) iterator . next ( ) ; <nl> iterator . remove ( ) ; <nl> @ @ - 144 , 7 + 153 , 7 @ @ <nl> <nl> if ( this . checkChunksExist ( nextticklistentry . xCoord - b0 , nextticklistentry . yCoord - b0 , nextticklistentry . zCoord - b0 , nextticklistentry . xCoord + b0 , nextticklistentry . yCoord + b0 , nextticklistentry . zCoord + b0 ) ) <nl> { <nl> - @ @ - 698 , 16 + 727 , 28 @ @ <nl> + @ @ - 698 , 16 + 729 , 28 @ @ <nl> { <nl> ArrayList arraylist = new ArrayList ( ) ; <nl> <nl> @ @ - 183 , 7 + 192 , 7 @ @ <nl> return arraylist ; <nl> } <nl> <nl> - @ @ - 715 , 6 + 756 , 11 @ @ <nl> + @ @ - 715 , 6 + 758 , 11 @ @ <nl> * Called when checking if a certain block can be mined or not . The ' spawn safe zone ' check is located here . <nl> * / <nl> public boolean canMineBlock ( EntityPlayer par1EntityPlayer , int par2 , int par3 , int par4 ) <nl> @ @ - 195 , 7 + 204 , 7 @ @ <nl> { <nl> return ! this . mcServer . func _ 96290 _ a ( this , par2 , par3 , par4 , par1EntityPlayer ) ; <nl> } <nl> - @ @ - 799 , 7 + 845 , 7 @ @ <nl> + @ @ - 799 , 7 + 847 , 7 @ @ <nl> * / <nl> protected void createBonusChest ( ) <nl> { <nl> @ @ - 204 , 7 + 213 , 7 @ @ <nl> <nl> for ( int i = 0 ; i < 10 ; + + i ) <nl> { <nl> - @ @ - 842 , 6 + 888 , 7 @ @ <nl> + @ @ - 842 , 6 + 890 , 7 @ @ <nl> } <nl> <nl> this . chunkProvider . saveChunks ( par1 , par2IProgressUpdate ) ; <nl> @ @ - 212 , 7 + 221 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 853 , 6 + 900 , 7 @ @ <nl> + @ @ - 853 , 6 + 902 , 7 @ @ <nl> this . checkSessionLock ( ) ; <nl> this . saveHandler . saveWorldInfoWithPlayer ( this . worldInfo , this . mcServer . getConfigurationManager ( ) . getHostPlayerData ( ) ) ; <nl> this . mapStorage . saveAllData ( ) ; <nl> @ @ - 220 , 7 + 229 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 1066 , 4 + 1114 , 9 @ @ <nl> + @ @ - 1066 , 4 + 1116 , 9 @ @ <nl> { <nl> return this . field _ 85177 _ Q ; <nl> }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityMinecartMobSpawner . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityMinecartMobSpawner . java . patch 
 new file mode 100644 
 index 0000000 . . b3f36c8 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / entity / item / EntityMinecartMobSpawner . java . patch 
 @ @ - 0 , 0 + 1 , 12 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / entity / item / EntityMinecartMobSpawner . java 
 + + + + . . / src - work / minecraft / net / minecraft / entity / item / EntityMinecartMobSpawner . java 
 + @ @ - 33 , 6 + 33 , 9 @ @ 
 + { 
 + return new BlockPos ( EntityMinecartMobSpawner . this ) ; 
 + } 
 + + public net . minecraft . entity . Entity getSpawnerEntity ( ) { 
 + + return EntityMinecartMobSpawner . this ; 
 + + } 
 + } ; 
 + 
 + public EntityMinecartMobSpawner ( World p _ i46752 _ 1 _ ) 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / MobSpawnerBaseLogic . java . patch b / patches / minecraft / net / minecraft / tileentity / MobSpawnerBaseLogic . java . patch 
 index 2fa117c . . 15fb0ac 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / MobSpawnerBaseLogic . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / MobSpawnerBaseLogic . java . patch 
 @ @ - 5 , 11 + 5 , 19 @ @ 
 entity . func _ 70012 _ b ( entity . field _ 70165 _ t , entity . field _ 70163 _ u , entity . field _ 70161 _ v , world . field _ 73012 _ v . nextFloat ( ) * 360 . 0F , 0 . 0F ) ; 
 
 - if ( entityliving = = null | | entityliving . func _ 70601 _ bi ( ) & & entityliving . func _ 70058 _ J ( ) ) 
 - + if ( entityliving = = null | | net . minecraftforge . event . ForgeEventFactory . canEntitySpawnSpawner ( entityliving , func _ 98271 _ a ( ) , ( float ) entity . field _ 70165 _ t , ( float ) entity . field _ 70163 _ u , ( float ) entity . field _ 70161 _ v ) ) 
 + + if ( entityliving = = null | | net . minecraftforge . event . ForgeEventFactory . canEntitySpawnSpawner ( entityliving , func _ 98271 _ a ( ) , ( float ) entity . field _ 70165 _ t , ( float ) entity . field _ 70163 _ u , ( float ) entity . field _ 70161 _ v , this ) ) 
 { 
 if ( this . field _ 98282 _ f . func _ 185277 _ b ( ) . func _ 186856 _ d ( ) = = 1 & & this . field _ 98282 _ f . func _ 185277 _ b ( ) . func _ 150297 _ b ( " id " , 8 ) & & entity instanceof EntityLiving ) 
 { 
 - + if ( ! net . minecraftforge . event . ForgeEventFactory . doSpecialSpawn ( entityliving , this . func _ 98271 _ a ( ) , ( float ) entity . field _ 70165 _ t , ( float ) entity . field _ 70163 _ u , ( float ) entity . field _ 70161 _ v ) ) 
 + + if ( ! net . minecraftforge . event . ForgeEventFactory . doSpecialSpawn ( entityliving , this . func _ 98271 _ a ( ) , ( float ) entity . field _ 70165 _ t , ( float ) entity . field _ 70163 _ u , ( float ) entity . field _ 70161 _ v , this ) ) 
 ( ( EntityLiving ) entity ) . func _ 180482 _ a ( world . func _ 175649 _ E ( new BlockPos ( entity ) ) , ( IEntityLivingData ) null ) ; 
 } 
 
 + @ @ - 307 , 4 + 308 , 7 @ @ 
 + { 
 + return this . field _ 98284 _ d ; 
 + } 
 + + 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + + @ Nullable public Entity getSpawnerEntity ( ) { return null ; } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 index a319a7a . . 2f9d1e3 100644 
 - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 42 , 6 + 42 , 7 @ @ import net . minecraft . entity . projectile . EntityThrowable ; 
 import net . minecraft . init . Blocks ; 
 import net . minecraft . item . Item ; 
 import net . minecraft . item . ItemStack ; 
 + import net . minecraft . tileentity . MobSpawnerBaseLogic ; 
 import net . minecraft . tileentity . TileEntity ; 
 import net . minecraft . util . ActionResult ; 
 import net . minecraft . util . DamageSource ; 
 @ @ - 176 , 23 + 177 , 52 @ @ public class ForgeEventFactory 
 } 
 
 / * * 
 - * @ deprecated use { @ link # canEntitySpawn ( EntityLiving , World , float , float , float , boolean ) } instead 
 + * @ deprecated use { @ link # canEntitySpawn ( EntityLiving , World , float , float , float , MobSpawnerBaseLogic ) } instead 
 * / 
 - @ Deprecated 
 + @ Deprecated / / TODO remove in 1 . 13 
 public static Result canEntitySpawn ( EntityLiving entity , World world , float x , float y , float z ) 
 { 
 return canEntitySpawn ( entity , world , x , y , z , true ) ; 
 } 
 - 
 + / * * 
 + * @ deprecated use { @ link # canEntitySpawn ( EntityLiving , World , float , float , float , MobSpawnerBaseLogic ) } instead 
 + * / 
 + @ Deprecated / / Still used in base game for non - spawner spawns , which is safe 
 public static Result canEntitySpawn ( EntityLiving entity , World world , float x , float y , float z , boolean isSpawner ) 
 { 
 if ( entity = = null ) 
 return Result . DEFAULT ; 
 - LivingSpawnEvent . CheckSpawn event = new LivingSpawnEvent . CheckSpawn ( entity , world , x , y , z , isSpawner ) ; 
 + LivingSpawnEvent . CheckSpawn event = new LivingSpawnEvent . CheckSpawn ( entity , world , x , y , z , isSpawner ) ; / / TODO : replace isSpawner with null in 1 . 13 
 + MinecraftForge . EVENT _ BUS . post ( event ) ; 
 + return event . getResult ( ) ; 
 + } 
 + 
 + public static Result canEntitySpawn ( EntityLiving entity , World world , float x , float y , float z , MobSpawnerBaseLogic spawner ) 
 + { 
 + if ( entity = = null ) 
 + return Result . DEFAULT ; 
 + LivingSpawnEvent . CheckSpawn event = new LivingSpawnEvent . CheckSpawn ( entity , world , x , y , z , spawner ) ; 
 MinecraftForge . EVENT _ BUS . post ( event ) ; 
 return event . getResult ( ) ; 
 } 
 
 + public static boolean canEntitySpawnSpawner ( EntityLiving entity , World world , float x , float y , float z , MobSpawnerBaseLogic spawner ) 
 + { 
 + Result result = canEntitySpawn ( entity , world , x , y , z , spawner ) ; 
 + if ( result = = Result . DEFAULT ) 
 + { 
 + return entity . getCanSpawnHere ( ) & & entity . isNotColliding ( ) ; / / vanilla logic 
 + } 
 + else 
 + { 
 + return result = = Result . ALLOW ; 
 + } 
 + } 
 + 
 + / * * 
 + * @ deprecated Use { @ link # canEntitySpawnSpawner ( EntityLiving , World , float , float , float , MobSpawnerBaseLogic ) } 
 + * / 
 + @ Deprecated / / TODO remove in 1 . 13 
 public static boolean canEntitySpawnSpawner ( EntityLiving entity , World world , float x , float y , float z ) 
 { 
 Result result = canEntitySpawn ( entity , world , x , y , z , true ) ; 
 @ @ - 206 , 9 + 236 , 18 @ @ public class ForgeEventFactory 
 } 
 } 
 
 + / * * 
 + * @ deprecated Use { @ link # canEntitySpawnSpawner ( EntityLiving , World , float , float , float , MobSpawnerBaseLogic ) } 
 + * / 
 + @ Deprecated / / Still used in base game for non - spawner spawns , which is safe 
 public static boolean doSpecialSpawn ( EntityLiving entity , World world , float x , float y , float z ) 
 { 
 - return MinecraftForge . EVENT _ BUS . post ( new LivingSpawnEvent . SpecialSpawn ( entity , world , x , y , z ) ) ; 
 + return MinecraftForge . EVENT _ BUS . post ( new LivingSpawnEvent . SpecialSpawn ( entity , world , x , y , z , null ) ) ; 
 + } 
 + 
 + public static boolean doSpecialSpawn ( EntityLiving entity , World world , float x , float y , float z , MobSpawnerBaseLogic spawner ) 
 + { 
 + return MinecraftForge . EVENT _ BUS . post ( new LivingSpawnEvent . SpecialSpawn ( entity , world , x , y , z , spawner ) ) ; 
 } 
 
 public static Result canEntityDespawn ( EntityLiving entity ) 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LivingSpawnEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LivingSpawnEvent . java 
 index 29484f2 . . 71788aa 100644 
 - - - a / src / main / java / net / minecraftforge / event / entity / living / LivingSpawnEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / entity / living / LivingSpawnEvent . java 
 @ @ - 19 , 6 + 19 , 9 @ @ 
 
 package net . minecraftforge . event . entity . living ; 
 
 + import javax . annotation . Nullable ; 
 + import net . minecraft . tileentity . MobSpawnerBaseLogic ; 
 + import net . minecraft . util . math . BlockPos ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . event . ForgeEventFactory ; 
 import net . minecraftforge . fml . common . eventhandler . Cancelable ; 
 @ @ - 70 , 7 + 73 , 10 @ @ public class LivingSpawnEvent extends LivingEvent 
 @ HasResult 
 public static class CheckSpawn extends LivingSpawnEvent 
 { 
 - private final boolean isSpawner ; 
 + private final boolean isSpawner ; / / TODO : remove in 1 . 13 
 + @ Nullable 
 + private final MobSpawnerBaseLogic spawner ; 
 + 
 
 / * * 
 * CheckSpawn is fired when an Entity is about to be spawned . 
 @ @ - 79 , 25 + 85 , 55 @ @ public class LivingSpawnEvent extends LivingEvent 
 * @ param x x coordinate 
 * @ param y y coordinate 
 * @ param z z coordinate 
 + * @ param spawner position of the MobSpawner 
 + * null if it this spawn is coming from a WorldSpawner 
 + * / 
 + public CheckSpawn ( EntityLiving entity , World world , float x , float y , float z , @ Nullable MobSpawnerBaseLogic spawner ) 
 + { 
 + super ( entity , world , x , y , z ) ; 
 + this . isSpawner = spawner ! = null ; 
 + this . spawner = spawner ; 
 + } 
 + 
 + / * * 
 + * @ deprecated Use { @ link CheckSpawn # # CheckSpawn ( EntityLiving , World , float , float , float , MobSpawnerBaseLogic ) } 
 + * with a spawner instance , or null if not a spawner 
 + * CheckSpawn is fired when an Entity is about to be spawned . 
 + * @ param entity the spawning entity 
 + * @ param world the world to spawn in 
 + * @ param x x coordinate 
 + * @ param y y coordinate 
 + * @ param z z coordinate 
 * @ param isSpawner true if this spawn is done by a MobSpawner , 
 * false if it this spawn is coming from a WorldSpawner 
 * / 
 + @ Deprecated / / TODO : Remove in 1 . 13 
 public CheckSpawn ( EntityLiving entity , World world , float x , float y , float z , boolean isSpawner ) 
 { 
 super ( entity , world , x , y , z ) ; 
 this . isSpawner = isSpawner ; 
 + spawner = null ; 
 } 
 
 / * * 
 - * @ deprecated Use { @ link CheckSpawn # CheckSpawn ( EntityLiving , World , float , float , float , boolean ) } instead 
 + * @ deprecated Use { @ link CheckSpawn # CheckSpawn ( EntityLiving , World , float , float , float , MobSpawnerBaseLogic ) } instead 
 * / 
 - @ Deprecated 
 + @ Deprecated / / TODO : Remove in 1 . 13 
 public CheckSpawn ( EntityLiving entity , World world , float x , float y , float z ) 
 { 
 this ( entity , world , x , y , z , true ) ; 
 } 
 
 - public boolean isSpawner ( ) { return isSpawner ; } 
 + public boolean isSpawner ( ) 
 + { 
 + return isSpawner ; / / TODO : replace with spawner null check in 1 . 13 
 + } 
 + 
 + @ Nullable 
 + public MobSpawnerBaseLogic getSpawner ( ) 
 + { 
 + return spawner ; 
 + } 
 } 
 
 / * * 
 @ @ - 116 , 9 + 152 , 33 @ @ public class LivingSpawnEvent extends LivingEvent 
 @ Cancelable 
 public static class SpecialSpawn extends LivingSpawnEvent 
 { 
 + @ Nullable 
 + private final MobSpawnerBaseLogic spawner ; 
 + 
 + / * * 
 + * @ deprecated Use { @ link SpecialSpawn # SpecialSpawn ( EntityLiving , World , float , float , float , MobSpawnerBaseLogic ) } 
 + * with originating spawner instance or null 
 + * / 
 + @ Deprecated / / TODO : remove in 1 . 13 
 public SpecialSpawn ( EntityLiving entity , World world , float x , float y , float z ) 
 { 
 super ( entity , world , x , y , z ) ; 
 + spawner = null ; 
 + } 
 + 
 + / * * 
 + * @ param spawner the position of a tileentity or approximate position of an entity that initiated the spawn if any 
 + * / 
 + public SpecialSpawn ( EntityLiving entity , World world , float x , float y , float z , @ Nullable MobSpawnerBaseLogic spawner ) 
 + { 
 + super ( entity , world , x , y , z ) ; 
 + this . spawner = spawner ; 
 + } 
 + 
 + @ Nullable 
 + public MobSpawnerBaseLogic getSpawner ( ) 
 + { 
 + return spawner ; 
 } 
 } 
 
 diff - - git a / src / test / java / net / minecraftforge / fml / test / SpecialSpawnEventTest . java b / src / test / java / net / minecraftforge / fml / test / SpecialSpawnEventTest . java 
 new file mode 100644 
 index 0000000 . . 4823705 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / fml / test / SpecialSpawnEventTest . java 
 @ @ - 0 , 0 + 1 , 46 @ @ 
 + package net . minecraftforge . fml . test ; 
 + 
 + import net . minecraft . entity . Entity ; 
 + import net . minecraft . entity . passive . EntityChicken ; 
 + import net . minecraft . init . Blocks ; 
 + import net . minecraft . tileentity . MobSpawnerBaseLogic ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . event . entity . living . LivingSpawnEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . Mod . EventHandler ; 
 + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + 
 + @ Mod ( modid = SpecialSpawnEventTest . MOD _ ID , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 + public class SpecialSpawnEventTest { 
 + private static final boolean ENABLED = false ; 
 + public static final String MOD _ ID = " spawnerduratest " ; 
 + 
 + @ EventHandler 
 + public void onPreInit ( FMLPreInitializationEvent e ) 
 + { 
 + if ( ENABLED ) 
 + { 
 + MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + } 
 + 
 + } 
 + 
 + @ SubscribeEvent 
 + public void specialSpawnEvent ( LivingSpawnEvent . SpecialSpawn e ) 
 + { 
 + MobSpawnerBaseLogic spawner = e . getSpawner ( ) ; 
 + if ( spawner = = null ) return ; 
 + if ( spawner . getSpawnerEntity ( ) ! = null ) 
 + { 
 + Entity spawn = new EntityChicken ( e . getWorld ( ) ) ; 
 + spawn . copyLocationAndAnglesFrom ( spawner . getSpawnerEntity ( ) ) ; 
 + e . getWorld ( ) . spawnEntity ( spawn ) ; 
 + spawner . getSpawnerEntity ( ) . setDead ( ) ; 
 + } 
 + else 
 + { 
 + e . getWorld ( ) . setBlockState ( spawner . getSpawnerPosition ( ) , Blocks . FIRE . getDefaultState ( ) ) ; 
 + } 
 + } 
 + }

NEAREST DIFF:
diff - - git a / common / net / minecraftforge / event / ForgeEventFactory . java b / common / net / minecraftforge / event / ForgeEventFactory . java 
 index 0210321 . . 3f1deed 100644 
 - - - a / common / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / common / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 1 , 16 + 1 , 23 @ @ 
 package net . minecraftforge . event ; 
 
 + import java . util . List ; 
 + 
 import net . minecraft . block . Block ; 
 import net . minecraft . entity . EntityLiving ; 
 + import net . minecraft . entity . EnumCreatureType ; 
 import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . item . ItemStack ; 
 import net . minecraft . world . World ; 
 + import net . minecraft . world . WorldServer ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . event . Event . Result ; 
 import net . minecraftforge . event . entity . living . LivingSpawnEvent ; 
 import net . minecraftforge . event . entity . living . LivingSpecialSpawnEvent ; 
 - import net . minecraftforge . event . entity . player . * ; 
 + import net . minecraftforge . event . entity . player . PlayerDestroyItemEvent ; 
 + import net . minecraftforge . event . entity . player . PlayerEvent ; 
 + import net . minecraftforge . event . entity . player . PlayerInteractEvent ; 
 import net . minecraftforge . event . entity . player . PlayerInteractEvent . Action ; 
 + import net . minecraftforge . event . world . WorldEvent ; 
 
 @ SuppressWarnings ( " deprecation " ) 
 public class ForgeEventFactory 
 @ @ - 49 , 14 + 56 , 16 @ @ public class ForgeEventFactory 
 
 public static boolean doSpecialSpawn ( EntityLiving entity , World world , float x , float y , float z ) 
 { 
 - boolean result = MinecraftForge . EVENT _ BUS . post ( new LivingSpecialSpawnEvent ( entity , world , x , y , z ) ) ; 
 - LivingSpawnEvent . SpecialSpawn nEvent = new LivingSpawnEvent . SpecialSpawn ( entity , world , x , y , z ) ; 
 + return MinecraftForge . EVENT _ BUS . post ( new LivingSpawnEvent . SpecialSpawn ( entity , world , x , y , z ) ) ; 
 + } 
 
 - if ( result ) / / For the time being , copy the canceled state from the old legacy event 
 - { / / Remove when we remove LivingSpecialSpawnEvent . 
 - nEvent . setCanceled ( true ) ; 
 + public static List getPotentialSpawns ( WorldServer world , EnumCreatureType type , int x , int y , int z , List oldList ) 
 + { 
 + WorldEvent . PotentialSpawns event = new WorldEvent . PotentialSpawns ( world , type , x , y , z , oldList ) ; 
 + if ( MinecraftForge . EVENT _ BUS . post ( event ) ) 
 + { 
 + return null ; 
 } 
 - 
 - return MinecraftForge . EVENT _ BUS . post ( nEvent ) ; 
 + return event . list ; 
 } 
 } 
 diff - - git a / common / net / minecraftforge / event / entity / living / LivingSpecialSpawnEvent . java b / common / net / minecraftforge / event / entity / living / LivingSpecialSpawnEvent . java 
 deleted file mode 100644 
 index d8c2d4d . . 0000000 
 - - - a / common / net / minecraftforge / event / entity / living / LivingSpecialSpawnEvent . java 
 + + + / dev / null 
 @ @ - 1 , 25 + 0 , 0 @ @ 
 - package net . minecraftforge . event . entity . living ; 
 - 
 - import net . minecraft . entity . EntityLiving ; 
 - import net . minecraft . world . World ; 
 - import net . minecraftforge . event . Cancelable ; 
 - 
 - @ Deprecated / / Remove next MC Version 
 - @ Cancelable 
 - public class LivingSpecialSpawnEvent extends LivingEvent 
 - { 
 - public final World world ; 
 - public final float x ; 
 - public final float y ; 
 - public final float z ; 
 - private boolean handeled = false ; 
 - 
 - public LivingSpecialSpawnEvent ( EntityLiving entity , World world , float x , float y , float z ) 
 - { 
 - super ( entity ) ; 
 - this . world = world ; 
 - this . x = x ; 
 - this . y = y ; 
 - this . z = z ; 
 - } 
 - } 
 diff - - git a / common / net / minecraftforge / event / world / WorldEvent . java b / common / net / minecraftforge / event / world / WorldEvent . java 
 index 4e15651 . . 6ebbffb 100644 
 - - - a / common / net / minecraftforge / event / world / WorldEvent . java 
 + + + b / common / net / minecraftforge / event / world / WorldEvent . java 
 @ @ - 1 , 6 + 1 , 12 @ @ 
 package net . minecraftforge . event . world ; 
 
 + import java . util . ArrayList ; 
 + import java . util . List ; 
 + 
 + import net . minecraft . entity . EnumCreatureType ; 
 import net . minecraft . world . World ; 
 + import net . minecraft . world . biome . SpawnListEntry ; 
 + import net . minecraftforge . event . Cancelable ; 
 import net . minecraftforge . event . Event ; 
 
 public class WorldEvent extends Event 
 @ @ - 26 , 4 + 32 , 35 @ @ public class WorldEvent extends Event 
 { 
 public Save ( World world ) { super ( world ) ; } 
 } 
 + 
 + / * * 
 + * Called by WorldServer to gather a list of all possible entities that can spawn at the specified location . 
 + * Canceling the event will result in a empty list , meaning no entity will be spawned . 
 + * / 
 + @ Cancelable 
 + public static class PotentialSpawns extends WorldEvent 
 + { 
 + public final EnumCreatureType type ; 
 + public final int x ; 
 + public final int y ; 
 + public final int z ; 
 + public final List < SpawnListEntry > list ; 
 + 
 + public PotentialSpawns ( World world , EnumCreatureType type , int x , int y , int z , List oldList ) 
 + { 
 + super ( world ) ; 
 + this . x = x ; 
 + this . y = y ; 
 + this . z = z ; 
 + this . type = type ; 
 + if ( oldList ! = null ) 
 + { 
 + this . list = ( List < SpawnListEntry > ) oldList ; 
 + } 
 + else 
 + { 
 + this . list = new ArrayList < SpawnListEntry > ( ) ; 
 + } 
 + } 
 + } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / WorldServer . java . patch b / patches / minecraft / net / minecraft / world / WorldServer . java . patch 
 index 4316755 . . ef72331 100644 
 - - - a / patches / minecraft / net / minecraft / world / WorldServer . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / WorldServer . java . patch 
 @ @ - 9 , 7 + 9 , 7 @ @ 
 import java . util . ArrayList ; 
 import java . util . HashSet ; 
 import java . util . Iterator ; 
 - @ @ - 47 , 11 + 49 , 18 @ @ 
 + @ @ - 47 , 11 + 49 , 19 @ @ 
 import net . minecraft . world . biome . WorldChunkManager ; 
 import net . minecraft . world . chunk . Chunk ; 
 import net . minecraft . world . chunk . IChunkProvider ; 
 @ @ - 24 , 11 + 24 , 12 @ @ 
 + import static net . minecraftforge . common . ChestGenHooks . * ; 
 + import net . minecraftforge . common . DimensionManager ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + + import net . minecraftforge . event . ForgeEventFactory ; 
 + import net . minecraftforge . event . world . WorldEvent ; 
 
 public class WorldServer extends World 
 { 
 - @ @ - 88 , 6 + 97 , 10 @ @ 
 + @ @ - 88 , 6 + 98 , 10 @ @ 
 / * * An IntHashMap of entity IDs ( integers ) to their Entity objects . * / 
 private IntHashMap entityIdMap ; 
 
 @ @ - 39 , 7 + 40 , 7 @ @ 
 public WorldServer ( MinecraftServer par1MinecraftServer , ISaveHandler par2ISaveHandler , String par3Str , int par4 , WorldSettings par5WorldSettings , Profiler par6Profiler , ILogAgent par7ILogAgent ) 
 { 
 super ( par2ISaveHandler , par3Str , par5WorldSettings , WorldProvider . getProviderForDimension ( par4 ) , par6Profiler , par7ILogAgent ) ; 
 - @ @ - 122 , 6 + 135 , 7 @ @ 
 + @ @ - 122 , 6 + 136 , 7 @ @ 
 
 scoreboardsavedata . func _ 96499 _ a ( this . field _ 96442 _ D ) ; 
 ( ( ServerScoreboard ) this . field _ 96442 _ D ) . func _ 96547 _ a ( scoreboardsavedata ) ; 
 @ @ - 47 , 7 + 48 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 184 , 6 + 198 , 10 @ @ 
 + @ @ - 184 , 6 + 199 , 10 @ @ 
 this . villageSiegeObj . tick ( ) ; 
 this . theProfiler . endStartSection ( " portalForcer " ) ; 
 this . field _ 85177 _ Q . func _ 85189 _ a ( this . getTotalWorldTime ( ) ) ; 
 @ @ - 58 , 7 + 59 , 15 @ @ 
 this . theProfiler . endSection ( ) ; 
 this . sendAndApplyBlockEvents ( ) ; 
 } 
 - @ @ - 237 , 10 + 255 , 7 @ @ 
 + @ @ - 194 , 6 + 213 , 7 @ @ 
 + public SpawnListEntry spawnRandomCreature ( EnumCreatureType par1EnumCreatureType , int par2 , int par3 , int par4 ) 
 + { 
 + List list = this . getChunkProvider ( ) . getPossibleCreatures ( par1EnumCreatureType , par2 , par3 , par4 ) ; 
 + + list = ForgeEventFactory . getPotentialSpawns ( this , par1EnumCreatureType , par2 , par3 , par4 , list ) ; 
 + return list ! = null & & ! list . isEmpty ( ) ? ( SpawnListEntry ) WeightedRandom . getRandomItem ( this . rand , list ) : null ; 
 + } 
 + 
 + @ @ - 237 , 10 + 257 , 7 @ @ 
 
 private void resetRainAndThunder ( ) 
 { 
 @ @ - 70 , 7 + 79 , 7 @ @ 
 } 
 
 public boolean areAllPlayersAsleep ( ) 
 - @ @ - 311 , 6 + 326 , 14 @ @ 
 + @ @ - 311 , 6 + 328 , 14 @ @ 
 int i = 0 ; 
 int j = 0 ; 
 Iterator iterator = this . activeChunkSet . iterator ( ) ; 
 @ @ - 85 , 7 + 94 , 7 @ @ 
 
 while ( iterator . hasNext ( ) ) 
 { 
 - @ @ - 321 , 14 + 344 , 18 @ @ 
 + @ @ - 321 , 14 + 346 , 18 @ @ 
 Chunk chunk = this . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ; 
 this . moodSoundAndLightCheck ( k , l , chunk ) ; 
 this . theProfiler . endStartSection ( " tickChunk " ) ; 
 @ @ - 106 , 7 + 115 , 7 @ @ 
 { 
 this . updateLCG = this . updateLCG * 3 + 1013904223 ; 
 i1 = this . updateLCG > > 2 ; 
 - @ @ - 345 , 7 + 372 , 7 @ @ 
 + @ @ - 345 , 7 + 374 , 7 @ @ 
 this . theProfiler . endStartSection ( " iceandsnow " ) ; 
 int i2 ; 
 
 @ @ - 115 , 7 + 124 , 7 @ @ 
 { 
 this . updateLCG = this . updateLCG * 3 + 1013904223 ; 
 i1 = this . updateLCG > > 2 ; 
 - @ @ - 430 , 7 + 457 , 8 @ @ 
 + @ @ - 430 , 7 + 459 , 8 @ @ 
 public void func _ 82740 _ a ( int par1 , int par2 , int par3 , int par4 , int par5 , int par6 ) 
 { 
 NextTickListEntry nextticklistentry = new NextTickListEntry ( par1 , par2 , par3 , par4 ) ; 
 @ @ - 125 , 7 + 134 , 7 @ @ 
 
 if ( this . scheduledUpdatesAreImmediate & & par4 > 0 ) 
 { 
 - @ @ - 493 , 7 + 521 , 7 @ @ 
 + @ @ - 493 , 7 + 523 , 7 @ @ 
 * / 
 public void updateEntities ( ) 
 { 
 @ @ - 134 , 7 + 143 , 7 @ @ 
 { 
 if ( this . updateEntityTick + + > = 1200 ) 
 { 
 - @ @ - 559 , 7 + 587 , 8 @ @ 
 + @ @ - 559 , 7 + 589 , 8 @ @ 
 { 
 nextticklistentry = ( NextTickListEntry ) iterator . next ( ) ; 
 iterator . remove ( ) ; 
 @ @ - 144 , 7 + 153 , 7 @ @ 
 
 if ( this . checkChunksExist ( nextticklistentry . xCoord - b0 , nextticklistentry . yCoord - b0 , nextticklistentry . zCoord - b0 , nextticklistentry . xCoord + b0 , nextticklistentry . yCoord + b0 , nextticklistentry . zCoord + b0 ) ) 
 { 
 - @ @ - 698 , 16 + 727 , 28 @ @ 
 + @ @ - 698 , 16 + 729 , 28 @ @ 
 { 
 ArrayList arraylist = new ArrayList ( ) ; 
 
 @ @ - 183 , 7 + 192 , 7 @ @ 
 return arraylist ; 
 } 
 
 - @ @ - 715 , 6 + 756 , 11 @ @ 
 + @ @ - 715 , 6 + 758 , 11 @ @ 
 * Called when checking if a certain block can be mined or not . The ' spawn safe zone ' check is located here . 
 * / 
 public boolean canMineBlock ( EntityPlayer par1EntityPlayer , int par2 , int par3 , int par4 ) 
 @ @ - 195 , 7 + 204 , 7 @ @ 
 { 
 return ! this . mcServer . func _ 96290 _ a ( this , par2 , par3 , par4 , par1EntityPlayer ) ; 
 } 
 - @ @ - 799 , 7 + 845 , 7 @ @ 
 + @ @ - 799 , 7 + 847 , 7 @ @ 
 * / 
 protected void createBonusChest ( ) 
 { 
 @ @ - 204 , 7 + 213 , 7 @ @ 
 
 for ( int i = 0 ; i < 10 ; + + i ) 
 { 
 - @ @ - 842 , 6 + 888 , 7 @ @ 
 + @ @ - 842 , 6 + 890 , 7 @ @ 
 } 
 
 this . chunkProvider . saveChunks ( par1 , par2IProgressUpdate ) ; 
 @ @ - 212 , 7 + 221 , 7 @ @ 
 } 
 } 
 
 - @ @ - 853 , 6 + 900 , 7 @ @ 
 + @ @ - 853 , 6 + 902 , 7 @ @ 
 this . checkSessionLock ( ) ; 
 this . saveHandler . saveWorldInfoWithPlayer ( this . worldInfo , this . mcServer . getConfigurationManager ( ) . getHostPlayerData ( ) ) ; 
 this . mapStorage . saveAllData ( ) ; 
 @ @ - 220 , 7 + 229 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 1066 , 4 + 1114 , 9 @ @ 
 + @ @ - 1066 , 4 + 1116 , 9 @ @ 
 { 
 return this . field _ 85177 _ Q ; 
 }
