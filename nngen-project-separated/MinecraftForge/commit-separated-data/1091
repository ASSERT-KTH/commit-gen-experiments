BLEU SCORE: 0.11156508007421491

TEST MSG: Fix formatting
GENERATED MSG: Remove all references to ModLoader

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java <nl> index 2bda1e3 . . 7e36157 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java <nl> @ @ - 42 , 7 + 42 , 7 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> protected float quantaPerBlockFloat = 8F ; <nl> protected int density = 1 ; <nl> protected int densityDir = - 1 ; <nl> - 	 protected int temperature = 300 ; <nl> + protected int temperature = 300 ; <nl> <nl> protected int tickRate = 20 ; <nl> protected int renderPass = 1 ; <nl> @ @ - 135 , 18 + 135 , 18 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> } <nl> <nl> int density = getDensity ( world , x , y , z ) ; <nl> - if ( density = = Integer . MAX _ VALUE ) <nl> + if ( density = = Integer . MAX _ VALUE ) <nl> { <nl> - 	 return true ; <nl> + return true ; <nl> } <nl> - <nl> + <nl> if ( this . density > density ) <nl> { <nl> - 	 return true ; <nl> + return true ; <nl> } <nl> else <nl> { <nl> - 	 return false ; <nl> + return false ; <nl> } <nl> } <nl> <nl> @ @ - 183 , 19 + 183 , 19 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> } <nl> <nl> int density = getDensity ( world , x , y , z ) ; <nl> - if ( density = = Integer . MAX _ VALUE ) <nl> + if ( density = = Integer . MAX _ VALUE ) <nl> { <nl> - 	 block . dropBlockAsItem ( world , x , y , z , world . getBlockMetadata ( x , y , z ) , 0 ) ; <nl> - 	 return true ; <nl> + block . dropBlockAsItem ( world , x , y , z , world . getBlockMetadata ( x , y , z ) , 0 ) ; <nl> + return true ; <nl> } <nl> - <nl> + <nl> if ( this . density > density ) <nl> { <nl> - 	 return true ; <nl> + return true ; <nl> } <nl> else <nl> { <nl> - 	 return false ; <nl> + return false ; <nl> } <nl> } <nl> <nl> @ @ - 231 , 7 + 231 , 7 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> { <nl> return canDisplace ( world , x , y , z ) ; <nl> } <nl> - <nl> + <nl> @ Override <nl> public boolean getBlocksMovement ( IBlockAccess world , int x , int y , int z ) <nl> { <nl> @ @ - 309 , 7 + 309 , 7 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> float lightUp = world . getLightBrightness ( x , y + 1 , z ) ; <nl> return lightThis > lightUp ? lightThis : lightUp ; <nl> } <nl> - * / <nl> + * / <nl> <nl> @ Override <nl> public int getMixedBrightnessForBlock ( IBlockAccess world , int x , int y , int z ) <nl> @ @ - 321 , 7 + 321 , 7 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> int lightThisExt = lightThis > > 16 & 255 ; <nl> int lightUpExt = lightUp > > 16 & 255 ; <nl> return ( lightThisBase > lightUpBase ? lightThisBase : lightUpBase ) | <nl> - ( ( lightThisExt > lightUpExt ? lightThisExt : lightUpExt ) < < 16 ) ; <nl> + ( ( lightThisExt > lightUpExt ? lightThisExt : lightUpExt ) < < 16 ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 351 , 7 + 351 , 7 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> } <nl> return ( ( BlockFluidBase ) block ) . density ; <nl> } <nl> - 	 <nl> + <nl> public static final int getTemperature ( IBlockAccess world , int x , int y , int z ) <nl> { <nl> Block block = world . getBlock ( x , y , z ) ; <nl> @ @ - 411 , 10 + 411 , 10 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> <nl> switch ( side ) <nl> { <nl> - case 0 : - - x2 ; break ; <nl> - case 1 : - - z2 ; break ; <nl> - case 2 : + + x2 ; break ; <nl> - case 3 : + + z2 ; break ; <nl> + case 0 : - - x2 ; break ; <nl> + case 1 : - - z2 ; break ; <nl> + case 2 : + + x2 ; break ; <nl> + case 3 : + + z2 ; break ; <nl> } <nl> <nl> int otherDecay = quantaPerBlock - getQuantaValue ( world , x2 , y , z2 ) ; <nl> @ @ - 440 , 14 + 440 , 14 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> if ( world . getBlock ( x , y + 1 , z ) = = this ) <nl> { <nl> boolean flag = <nl> - isBlockSolid ( world , x , y , z - 1 , 2 ) | | <nl> - isBlockSolid ( world , x , y , z + 1 , 3 ) | | <nl> - isBlockSolid ( world , x - 1 , y , z , 4 ) | | <nl> - isBlockSolid ( world , x + 1 , y , z , 5 ) | | <nl> - isBlockSolid ( world , x , y + 1 , z - 1 , 2 ) | | <nl> - isBlockSolid ( world , x , y + 1 , z + 1 , 3 ) | | <nl> - isBlockSolid ( world , x - 1 , y + 1 , z , 4 ) | | <nl> - isBlockSolid ( world , x + 1 , y + 1 , z , 5 ) ; <nl> + isBlockSolid ( world , x , y , z - 1 , 2 ) | | <nl> + isBlockSolid ( world , x , y , z + 1 , 3 ) | | <nl> + isBlockSolid ( world , x - 1 , y , z , 4 ) | | <nl> + isBlockSolid ( world , x + 1 , y , z , 5 ) | | <nl> + isBlockSolid ( world , x , y + 1 , z - 1 , 2 ) | | <nl> + isBlockSolid ( world , x , y + 1 , z + 1 , 3 ) | | <nl> + isBlockSolid ( world , x - 1 , y + 1 , z , 4 ) | | <nl> + isBlockSolid ( world , x + 1 , y + 1 , z , 5 ) ; <nl> <nl> if ( flag ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / Fluid . java b / src / main / java / net / minecraftforge / fluids / Fluid . java <nl> index 548e82e . . 28096dd 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / Fluid . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / Fluid . java <nl> @ @ - 33 , 7 + 33 , 7 @ @ import net . minecraft . item . EnumRarity ; <nl> * <nl> * / <nl> public class Fluid <nl> - { 	 <nl> + { <nl> / * * The unique identification name for this fluid . * / <nl> protected final String fluidName ; <nl> <nl> @ @ - 62 , 7 + 62 , 7 @ @ public class Fluid <nl> / * * <nl> * Temperature of the fluid - completely arbitrary ; higher temperature indicates that the fluid is <nl> * hotter than air . <nl> - * <nl> + * <nl> * Default value is approximately the real - life room temperature of water in degrees Kelvin . <nl> * / <nl> protected int temperature = 300 ; <nl> @ @ - 72 , 10 + 72 , 10 @ @ public class Fluid <nl> * permissible . <nl> * <nl> * Default value is approximately the real - life density of water in m / s ^ 2 ( x10 ^ - 3 ) . <nl> - * <nl> + * <nl> * Higher viscosity means that a fluid flows more slowly , like molasses . <nl> * Lower viscosity means that a fluid flows more quickly , like helium . <nl> - * <nl> + * <nl> * / <nl> protected int viscosity = 1000 ; <nl> <nl> @ @ - 198 , 7 + 198 , 7 @ @ public class Fluid <nl> { <nl> return getLocalizedName ( ) ; <nl> } <nl> - <nl> + <nl> / * * <nl> * Use the FluidStack sensitive version above <nl> * / <nl> @ @ - 258 , 7 + 258 , 7 @ @ public class Fluid <nl> { <nl> return this . isGaseous ; <nl> } <nl> - <nl> + <nl> public EnumRarity getRarity ( ) <nl> { <nl> return rarity ; <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / FluidContainerRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidContainerRegistry . java <nl> index 5ff1336 . . 33c47f2 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidContainerRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidContainerRegistry . java <nl> @ @ - 20 , 16 + 20 , 16 @ @ import net . minecraftforge . common . MinecraftForge ; <nl> / * * <nl> * Register simple items that contain fluids here . Useful for buckets , bottles , and things that have <nl> * ID / metadata mappings . <nl> - * <nl> + * <nl> * For more complex items , use { @ link IFluidContainerItem } instead . <nl> - * <nl> + * <nl> * @ author King Lemming <nl> - * <nl> + * <nl> * / <nl> public abstract class FluidContainerRegistry <nl> { <nl> - / / Holder object that implements HashCode for an ItemStack , <nl> - / / the local maps are not guaranteed to have the same internal generic structure , <nl> + / / Holder object that implements HashCode for an ItemStack , <nl> + / / the local maps are not guaranteed to have the same internal generic structure , <nl> / / but the external interface for checking ItemStacks will still exist . <nl> private static class ContainerKey <nl> { <nl> @ @ - 89 , 7 + 89 , 7 @ @ public abstract class FluidContainerRegistry <nl> <nl> / * * <nl> * Register a new fluid containing item . <nl> - * <nl> + * <nl> * @ param stack <nl> * FluidStack containing the type and amount of the fluid stored in the item . <nl> * @ param filledContainer <nl> @ @ - 106 , 7 + 106 , 7 @ @ public abstract class FluidContainerRegistry <nl> / * * <nl> * Register a new fluid containing item . The item is assumed to hold 1000 mB of fluid . Also <nl> * registers the Fluid if possible . <nl> - * <nl> + * <nl> * @ param fluid <nl> * Fluid type that is stored in the item . <nl> * @ param filledContainer <nl> @ @ - 126 , 7 + 126 , 7 @ @ public abstract class FluidContainerRegistry <nl> <nl> / * * <nl> * Register a new fluid containing item that does not have an empty container . <nl> - * <nl> + * <nl> * @ param stack <nl> * FluidStack containing the type and amount of the fluid stored in the item . <nl> * @ param filledContainer <nl> @ @ - 141 , 7 + 141 , 7 @ @ public abstract class FluidContainerRegistry <nl> / * * <nl> * Register a new fluid containing item that does not have an empty container . The item is <nl> * assumed to hold 1000 mB of fluid . Also registers the Fluid if possible . <nl> - * <nl> + * <nl> * @ param fluid <nl> * Fluid type that is stored in the item . <nl> * @ param filledContainer <nl> @ @ - 159 , 7 + 159 , 7 @ @ public abstract class FluidContainerRegistry <nl> <nl> / * * <nl> * Register a new fluid containing item . <nl> - * <nl> + * <nl> * @ param data <nl> * See { @ link FluidContainerData } . <nl> * @ return True if container was successfully registered ; false if it already is . <nl> @ @ - 184 , 7 + 184 , 7 @ @ public abstract class FluidContainerRegistry <nl> <nl> / * * <nl> * Determines the fluid type and amount inside a container . <nl> - * <nl> + * <nl> * @ param container <nl> * The fluid container . <nl> * @ return FluidStack representing stored fluid . <nl> @ @ - 202 , 9 + 202 , 9 @ @ public abstract class FluidContainerRegistry <nl> <nl> / * * <nl> * Attempts to fill an empty container with a fluid . <nl> - * <nl> + * <nl> * NOTE : Returns null on fail , NOT the empty container . <nl> - * <nl> + * <nl> * @ param fluid <nl> * FluidStack containing the type and amount of fluid to fill . <nl> * @ param container <nl> @ @ - 228 , 7 + 228 , 7 @ @ public abstract class FluidContainerRegistry <nl> <nl> / * * <nl> * Attempts to empty a full container . <nl> - * <nl> + * <nl> * @ param container <nl> * ItemStack representing the full container . <nl> * @ return Empty container if successful , otherwise null . <nl> @ @ - 251 , 7 + 251 , 7 @ @ public abstract class FluidContainerRegistry <nl> <nl> / * * <nl> * Determines the capacity of a full container . <nl> - * <nl> + * <nl> * @ param container <nl> * The full container . <nl> * @ return The containers capacity , or 0 if the ItemStack does not represent <nl> @ @ - 264 , 7 + 264 , 7 @ @ public abstract class FluidContainerRegistry <nl> <nl> / * * <nl> * Determines the capacity of a container . <nl> - * <nl> + * <nl> * @ param fluid <nl> * FluidStack containing the type of fluid the capacity should be <nl> * determined for ( ignored for full containers ) . <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> index 89476af . . bff9007 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> @ @ - 28 , 14 + 28 , 14 @ @ public abstract class FluidRegistry <nl> static BiMap < String , Fluid > fluids = HashBiMap . create ( ) ; <nl> static BiMap < Fluid , Integer > fluidIDs = HashBiMap . create ( ) ; <nl> static BiMap < Block , Fluid > fluidBlocks ; <nl> - <nl> + <nl> public static final Fluid WATER = new Fluid ( " water " ) { <nl> @ Override <nl> public String getLocalizedName ( ) { <nl> return StatCollector . translateToLocal ( " tile . water . name " ) ; <nl> } <nl> } . setBlock ( Blocks . water ) . setUnlocalizedName ( Blocks . water . getUnlocalizedName ( ) ) ; <nl> - <nl> + <nl> public static final Fluid LAVA = new Fluid ( " lava " ) { <nl> @ Override <nl> public String getLocalizedName ( ) { <nl> @ @ - 165 , 7 + 165 , 7 @ @ public abstract class FluidRegistry <nl> } <nl> return fluidBlocks . get ( block ) ; <nl> } <nl> - <nl> + <nl> public static class FluidRegisterEvent extends Event <nl> { <nl> public final String fluidName ; <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / FluidStack . java b / src / main / java / net / minecraftforge / fluids / FluidStack . java <nl> index f23bb0b . . 16e3868 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidStack . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidStack . java <nl> @ @ - 56 , 7 + 56 , 7 @ @ public class FluidStack <nl> { <nl> 	 this ( FluidRegistry . getFluid ( fluidID ) , amount , nbt ) ; <nl> } <nl> - <nl> + <nl> / * * <nl> * This provides a safe method for retrieving a FluidStack - if the Fluid is invalid , the stack <nl> * will return as null . <nl> @ @ - 103 , 7 + 103 , 7 @ @ public class FluidStack <nl> { <nl> 	 return FluidRegistry . getFluidID ( fluid ) ; <nl> } <nl> - <nl> + <nl> public String getLocalizedName ( ) <nl> { <nl> return this . getFluid ( ) . getLocalizedName ( this ) ;
NEAREST DIFF (one line): diff - - git a / client / net / minecraftforge / client / ForgeHooksClient . java b / client / net / minecraftforge / client / ForgeHooksClient . java <nl> index d4423e3 . . 0e2647e 100644 <nl> - - - a / client / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / client / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 7 , 6 + 7 , 8 @ @ import java . util . TreeSet ; <nl> import org . lwjgl . opengl . GL11 ; <nl> import org . lwjgl . opengl . GL12 ; <nl> <nl> + import cpw . mods . fml . client . FMLClientHandler ; <nl> + <nl> import net . minecraft . client . Minecraft ; <nl> import net . minecraft . src . Block ; <nl> import net . minecraft . src . EntityItem ; <nl> @ @ - 16 , 7 + 18 , 6 @ @ import net . minecraft . src . Item ; <nl> import net . minecraft . src . ItemBlock ; <nl> import net . minecraft . src . ItemStack ; <nl> import net . minecraft . src . MathHelper ; <nl> - import net . minecraft . src . ModLoader ; <nl> import net . minecraft . src . MovingObjectPosition ; <nl> import net . minecraft . src . RenderBlocks ; <nl> import net . minecraft . src . RenderEngine ; <nl> @ @ - 41 , 7 + 42 , 7 @ @ public class ForgeHooksClient <nl> texture = textureID ; <nl> subid = subID ; <nl> } <nl> - <nl> + <nl> public int compareTo ( TesKey key ) <nl> { <nl> if ( subid = = key . subid ) <nl> @ @ - 50 , 18 + 51 , 18 @ @ public class ForgeHooksClient <nl> } <nl> return subid - key . subid ; <nl> } <nl> - <nl> + <nl> public boolean equals ( Object obj ) <nl> { <nl> return compareTo ( ( TesKey ) obj ) = = 0 ; <nl> } <nl> - <nl> + <nl> public int hashCode ( ) <nl> { <nl> return texture + 31 * subid ; <nl> } <nl> } <nl> - <nl> + <nl> public static HashMap < TesKey , Tessellator > tessellators = new HashMap < TesKey , Tessellator > ( ) ; <nl> public static HashMap < String , Integer > textures = new HashMap < String , Integer > ( ) ; <nl> public static TreeSet < TesKey > renderTextures = new TreeSet < TesKey > ( ) ; <nl> @ @ - 69 , 24 + 70 , 28 @ @ public class ForgeHooksClient <nl> public static boolean inWorld = false ; <nl> public static HashMap < TesKey , IRenderContextHandler > renderHandlers = new HashMap < TesKey , IRenderContextHandler > ( ) ; <nl> public static IRenderContextHandler unbindContext = null ; <nl> - <nl> + <nl> protected static void registerRenderContextHandler ( String texture , int subID , IRenderContextHandler handler ) <nl> { <nl> Integer texID = textures . get ( texture ) ; <nl> if ( texID = = null ) <nl> { <nl> - texID = ModLoader . getMinecraftInstance ( ) . renderEngine . getTexture ( texture ) ; <nl> + texID = engine ( ) . getTexture ( texture ) ; <nl> textures . put ( texture , texID ) ; <nl> } <nl> renderHandlers . put ( new TesKey ( texID , subID ) , handler ) ; <nl> } <nl> <nl> + static RenderEngine engine ( ) <nl> + { <nl> + return FMLClientHandler . instance ( ) . getClient ( ) . renderEngine ; <nl> + } <nl> public static void bindTexture ( String texture , int subID ) <nl> { <nl> Integer texID = textures . get ( texture ) ; <nl> if ( texID = = null ) <nl> { <nl> - texID = ModLoader . getMinecraftInstance ( ) . renderEngine . getTexture ( texture ) ; <nl> + texID = engine ( ) . getTexture ( texture ) ; <nl> textures . put ( texture , texID ) ; <nl> } <nl> if ( ! inWorld ) <nl> @ @ - 132 , 11 + 137 , 11 @ @ public class ForgeHooksClient <nl> } <nl> Tessellator . instance . startDrawing ( mode ) ; <nl> } <nl> - GL11 . glBindTexture ( GL11 . GL _ TEXTURE _ 2D , ModLoader . getMinecraftInstance ( ) . renderEngine . getTexture ( " / terrain . png " ) ) ; <nl> + GL11 . glBindTexture ( GL11 . GL _ TEXTURE _ 2D , engine ( ) . getTexture ( " / terrain . png " ) ) ; <nl> return ; <nl> } <nl> } <nl> - <nl> + <nl> protected static void bindTessellator ( int texture , int subID ) <nl> { <nl> TesKey key = new TesKey ( texture , subID ) ; <nl> @ @ - 158 , 14 + 163 , 14 @ @ public class ForgeHooksClient <nl> <nl> Tessellator . instance = tess ; <nl> } <nl> - <nl> + <nl> static int renderPass = - 1 ; <nl> public static void beforeRenderPass ( int pass ) <nl> { <nl> renderPass = pass ; <nl> defaultTessellator = Tessellator . instance ; <nl> Tessellator . renderingWorldRenderer = true ; <nl> - GL11 . glBindTexture ( GL11 . GL _ TEXTURE _ 2D , ModLoader . getMinecraftInstance ( ) . renderEngine . getTexture ( " / terrain . png " ) ) ; <nl> + GL11 . glBindTexture ( GL11 . GL _ TEXTURE _ 2D , engine ( ) . getTexture ( " / terrain . png " ) ) ; <nl> renderTextures . clear ( ) ; <nl> inWorld = true ; <nl> } <nl> @ @ - 191 , 7 + 196 , 7 @ @ public class ForgeHooksClient <nl> handler . afterRenderContext ( ) ; <nl> } <nl> } <nl> - GL11 . glBindTexture ( GL11 . GL _ TEXTURE _ 2D , ModLoader . getMinecraftInstance ( ) . renderEngine . getTexture ( " / terrain . png " ) ) ; <nl> + GL11 . glBindTexture ( GL11 . GL _ TEXTURE _ 2D , engine ( ) . getTexture ( " / terrain . png " ) ) ; <nl> Tessellator . renderingWorldRenderer = false ; <nl> Tessellator . instance = defaultTessellator ; <nl> } <nl> @ @ - 211 , 7 + 216 , 7 @ @ public class ForgeHooksClient <nl> unbindTexture ( ) ; <nl> } <nl> } <nl> - <nl> + <nl> public static String getArmorTexture ( ItemStack armor , String _ default ) <nl> { <nl> if ( armor . getItem ( ) instanceof IArmorTextureProvider ) <nl> @ @ - 248 , 7 + 253 , 7 @ @ public class ForgeHooksClient <nl> GL11 . glScalef ( scale , scale , scale ) ; <nl> int size = entity . item . stackSize ; <nl> int count = ( size > 20 ? 4 : ( size > 5 ? 3 : ( size > 1 ? 2 : 1 ) ) ) ; <nl> - <nl> + <nl> for ( int j = 0 ; j < size ; j + + ) <nl> { <nl> GL11 . glPushMatrix ( ) ; <nl> @ @ - 271 , 7 + 276 , 7 @ @ public class ForgeHooksClient <nl> } <nl> return true ; <nl> } <nl> - <nl> + <nl> public static boolean renderInventoryItem ( RenderBlocks renderBlocks , RenderEngine engine , ItemStack item , boolean inColor , float zLevel , float x , float y ) <nl> { <nl> IItemRenderer customRenderer = MinecraftForgeClient . getItemRenderer ( item , INVENTORY ) ; <nl> @ @ - 327 , 7 + 332 , 7 @ @ public class ForgeHooksClient <nl> } <nl> return true ; <nl> } <nl> - <nl> + <nl> public static void renderEquippedItem ( IItemRenderer customRenderer , RenderBlocks renderBlocks , EntityLiving entity , ItemStack item ) <nl> { <nl> if ( customRenderer . shouldUseRenderHelper ( EQUIPPED , item , EQUIPPED _ BLOCK ) ) <nl> @ @ - 398 , 7 + 403 , 7 @ @ public class ForgeHooksClient <nl> { <nl> if ( Tessellator . class . getPackage ( ) . equals ( " net . minecraft . src " ) ) <nl> { <nl> - Minecraft mc = ModLoader . getMinecraftInstance ( ) ; <nl> + Minecraft mc = FMLClientHandler . instance ( ) . getClient ( ) ; <nl> if ( mc . ingameGUI ! = null ) <nl> { <nl> mc . ingameGUI . getChatGUI ( ) . printChatMessage ( msg ) ; <nl> diff - - git a / client / net / minecraftforge / client / MinecraftForgeClient . java b / client / net / minecraftforge / client / MinecraftForgeClient . java <nl> index 35f66eb . . cd68a7a 100644 <nl> - - - a / client / net / minecraftforge / client / MinecraftForgeClient . java <nl> + + + b / client / net / minecraftforge / client / MinecraftForgeClient . java <nl> @ @ - 11 , 7 + 11 , 6 @ @ import net . minecraft . src . Block ; <nl> import net . minecraft . src . Entity ; <nl> import net . minecraft . src . Item ; <nl> import net . minecraft . src . ItemStack ; <nl> - import net . minecraft . src . ModLoader ; <nl> import net . minecraft . src . RenderBlocks ; <nl> import net . minecraft . src . World ; <nl> import net . minecraftforge . client . IItemRenderer . ItemRenderType ; <nl> @ @ - 33 , 13 + 32 , 13 @ @ public class MinecraftForgeClient <nl> ForgeHooksClient . registerRenderContextHandler ( texture , subid , handler ) ; <nl> } <nl> <nl> - / * * <nl> + / * * <nl> * Preload a texture . Textures must be preloaded before the first <nl> * use , or they will cause visual anomalies . <nl> * / <nl> public static void preloadTexture ( String texture ) <nl> { <nl> - ModLoader . getMinecraftInstance ( ) . renderEngine . getTexture ( texture ) ; <nl> + ForgeHooksClient . engine ( ) . getTexture ( texture ) ; <nl> } <nl> <nl> / * * Render a block . Render a block which may have a custom texture . <nl> @ @ - 51 , 17 + 50 , 17 @ @ public class MinecraftForgeClient <nl> ForgeHooksClient . afterBlockRender ( block , render ) ; <nl> } <nl> <nl> - / * * <nl> + / * * <nl> * Get the current render pass . <nl> * / <nl> public static int getRenderPass ( ) <nl> { <nl> return ForgeHooksClient . renderPass ; <nl> } <nl> - <nl> + <nl> private static IItemRenderer [ ] customItemRenderers = new IItemRenderer [ Item . itemsList . length ] ; <nl> <nl> - / * * <nl> + / * * <nl> * Register a custom renderer for a specific item . This can be used to <nl> * render the item in - world as an EntityItem , when the item is equipped , or <nl> * when the item is in an inventory slot . <nl> @ @ - 77 , 7 + 76 , 7 @ @ public class MinecraftForgeClient <nl> public static IItemRenderer getItemRenderer ( ItemStack item , ItemRenderType type ) <nl> { <nl> IItemRenderer renderer = customItemRenderers [ item . itemID ] ; <nl> - if ( renderer ! = null & & renderer . handleRenderType ( item , type ) ) <nl> + if ( renderer ! = null & & renderer . handleRenderType ( item , type ) ) <nl> { <nl> return customItemRenderers [ item . itemID ] ; <nl> } <nl> diff - - git a / client / net / minecraftforge / client / ModCompatibilityClient . java b / client / net / minecraftforge / client / ModCompatibilityClient . java <nl> index c625dea . . 258f6ff 100644 <nl> - - - a / client / net / minecraftforge / client / ModCompatibilityClient . java <nl> + + + b / client / net / minecraftforge / client / ModCompatibilityClient . java <nl> @ @ - 3 , 6 + 3 , 10 @ @ package net . minecraftforge . client ; <nl> import java . io . File ; <nl> import java . io . IOException ; <nl> import java . lang . reflect . Field ; <nl> + import java . util . logging . Level ; <nl> + <nl> + import cpw . mods . fml . client . FMLClientHandler ; <nl> + import cpw . mods . fml . common . FMLLog ; <nl> <nl> import paulscode . sound . SoundSystemConfig ; <nl> import paulscode . sound . codecs . CodecIBXM ; <nl> @ @ - 10 , 19 + 14 , 19 @ @ import paulscode . sound . codecs . CodecIBXM ; <nl> import net . minecraft . client . Minecraft ; <nl> import net . minecraft . src . * ; <nl> <nl> - public class ModCompatibilityClient <nl> + public class ModCompatibilityClient <nl> { <nl> / * * <nl> - * Trys to get the class for the specified name , will also try the <nl> + * Trys to get the class for the specified name , will also try the <nl> * net . minecraft . src package in case we are in MCP <nl> * Returns null if not found . <nl> - * <nl> + * <nl> * @ param name The class name <nl> * @ return The Class , or null if not found <nl> * / <nl> private static Class getClass ( String name ) <nl> { <nl> - try <nl> + try <nl> { <nl> return Class . forName ( name ) ; <nl> } <nl> @ @ - 38 , 23 + 42 , 23 @ @ public class ModCompatibilityClient <nl> } <nl> } <nl> } <nl> - <nl> + <nl> / * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * <nl> * Risugami ' s AudioMod Compatibility <nl> * http : / / www . minecraftforum . net / topic / 75440 - <nl> - * <nl> + * <nl> * AudioMod adds a few extra codecs , loads audio from / resources / mods / * , <nl> - * introduces the concept of ' cave ' sounds , which are determined by if <nl> + * introduces the concept of ' cave ' sounds , which are determined by if <nl> * the player is underneath a solid block . <nl> - * <nl> + * <nl> * It also lowers the interval between background music songs to 6000 <nl> * / <nl> public static SoundPool audioModSoundPoolCave ; <nl> - <nl> + <nl> / * * <nl> * Populates the sound pools with with sounds from the / resources / mods folder <nl> * And sets the interval between background music to 6000 <nl> - * <nl> + * <nl> * @ param mngr The SoundManager instance <nl> * / <nl> public static void audioModLoad ( SoundManager mngr ) <nl> @ @ - 64 , 13 + 68 , 13 @ @ public class ModCompatibilityClient <nl> audioModLoadModAudio ( " resources / mod / streaming " , mngr . soundPoolStreaming ) ; <nl> audioModLoadModAudio ( " resources / mod / music " , mngr . soundPoolMusic ) ; <nl> audioModLoadModAudio ( " resources / mod / cavemusic " , audioModSoundPoolCave ) ; <nl> - <nl> + <nl> if ( mngr . MUSIC _ INTERVAL = = 12000 ) <nl> { <nl> mngr . MUSIC _ INTERVAL = 6000 ; <nl> } <nl> } <nl> - <nl> + <nl> / * * <nl> * Walks the given path in the Minecraft app directory and adds audio to the SoundPool <nl> * @ param path The path to walk <nl> @ @ - 86 , 15 + 90 , 14 @ @ public class ModCompatibilityClient <nl> } <nl> catch ( IOException ex ) <nl> { <nl> - ModLoader . getLogger ( ) . fine ( " Loading Mod audio failed for folder : " + path ) ; <nl> - ModLoader . getLogger ( ) . fine ( ex . toString ( ) ) ; <nl> + FMLLog . log ( Level . FINE , ex , " Loading Mod audio failed for folder : % s " , path ) ; <nl> ex . printStackTrace ( ) ; <nl> } <nl> } <nl> - <nl> + <nl> / * * <nl> * Walks the folder path recursively and calls pool . addSound on any file it finds . <nl> - * <nl> + * <nl> * @ param base The base path for the folder , determines the name when calling addSound <nl> * @ param folder The current folder <nl> * @ param pool The SoundPool to add the sound to <nl> @ @ - 105 , 7 + 108 , 7 @ @ public class ModCompatibilityClient <nl> if ( folder . exists ( ) | | folder . mkdirs ( ) ) <nl> { <nl> for ( File file : folder . listFiles ( ) ) <nl> - { <nl> + { <nl> if ( ! file . getName ( ) . startsWith ( " . " ) ) <nl> { <nl> if ( file . isDirectory ( ) ) <nl> @ @ - 125 , 7 + 128 , 7 @ @ public class ModCompatibilityClient <nl> / * * <nl> * Adds the IBXM codec and associates it with . xm , . s3m , and . mod <nl> * / <nl> - public static void audioModAddCodecs ( ) <nl> + public static void audioModAddCodecs ( ) <nl> { <nl> SoundSystemConfig . setCodec ( " xm " , CodecIBXM . class ) ; <nl> SoundSystemConfig . setCodec ( " s3m " , CodecIBXM . class ) ; <nl> @ @ - 135 , 14 + 138 , 14 @ @ public class ModCompatibilityClient <nl> / * * <nl> * If the current player is underground , it picks a random song from the cave sound pool , <nl> * if they are not it returns the passed in entry . <nl> - * <nl> + * <nl> * @ param soundManager The SoundManager instance <nl> * @ param current The currently selected entry <nl> * @ return A soundPool entry to be played as the background music <nl> * / <nl> - public static SoundPoolEntry audioModPickBackgroundMusic ( SoundManager soundManager , SoundPoolEntry current ) <nl> + public static SoundPoolEntry audioModPickBackgroundMusic ( SoundManager soundManager , SoundPoolEntry current ) <nl> { <nl> - Minecraft mc = ModLoader . getMinecraftInstance ( ) ; <nl> + Minecraft mc = FMLClientHandler . instance ( ) . getClient ( ) ; <nl> if ( mc ! = null & & mc . theWorld ! = null & & audioModSoundPoolCave ! = null ) <nl> { <nl> Entity ent = mc . renderViewEntity ; <nl> @ @ - 153 , 19 + 156 , 19 @ @ public class ModCompatibilityClient <nl> } <nl> return current ; <nl> } <nl> - <nl> + <nl> / * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * <nl> * SDK ' s ModLoaderMP <nl> * http : / / www . minecraftforum . net / topic / 86765 - <nl> - * <nl> - * ModLoaderMP was supposed to be a reliable server side version of ModLoader , however it has <nl> + * <nl> + * ModLoaderMP was supposed to be a reliable server side version of ModLoader , however it has <nl> * gotten the reputation of being really slow to update . Never having bugfixes , breaking compatibility <nl> * with the client side ModLoader . <nl> - * <nl> + * <nl> * So we have replaced it with our own system called FML ( Forge ModLoader ) <nl> * it is a stand alone mod , that Forge relies on , and that is open source / community driven . <nl> * https : / / github . com / cpw / FML <nl> - * <nl> + * <nl> * However , for compatibilities sake , we provide the ModLoaderMP ' s hooks so that the end user <nl> * does not need to make a choice between the two on the client side . <nl> * * / <nl> @ @ - 185 , 9 + 188 , 9 @ @ public class ModCompatibilityClient <nl> } <nl> <nl> / * * <nl> - * Attempts to spawn a vehicle using ModLoaderMP ' s vehicle spawn registry , if MLMP is not installed <nl> + * Attempts to spawn a vehicle using ModLoaderMP ' s vehicle spawn registry , if MLMP is not installed <nl> * it returns the passed in currentEntity <nl> - * <nl> + * <nl> * @ param type The Type ID of the vehicle <nl> * @ param world The current world <nl> * @ param x The spawn X position <nl> @ @ - 200 , 18 + 203 , 18 @ @ public class ModCompatibilityClient <nl> * / <nl> public static Object mlmpVehicleSpawn ( int type , World world , double x , double y , double z , Entity thrower , Object currentEntity ) throws Exception <nl> { <nl> - Class mlmp = getClass ( " ModLoaderMp " ) ; <nl> + Class mlmp = getClass ( " ModLoaderMp " ) ; <nl> if ( ! isMLMPInstalled ( ) | | mlmp = = null ) <nl> { <nl> return currentEntity ; <nl> } <nl> - <nl> + <nl> Object entry = mlmp . getDeclaredMethod ( " handleNetClientHandlerEntities " , int . class ) . invoke ( null , type ) ; <nl> if ( entry = = null ) <nl> { <nl> return currentEntity ; <nl> } <nl> - <nl> + <nl> Class entityClass = ( Class ) entry . getClass ( ) . getDeclaredField ( " entityClass " ) . get ( entry ) ; <nl> Object ret = ( Entity ) entityClass . getConstructor ( World . class , Double . TYPE , Double . TYPE , Double . TYPE ) . newInstance ( world , x , y , z ) ; <nl> <nl> @ @ - 227 , 7 + 230 , 7 @ @ public class ModCompatibilityClient <nl> if ( thrower = = null ) <nl> { <nl> System . out . println ( " Received spawn packet for entity with owner , but owner was not found . " ) ; <nl> - ModLoader . getLogger ( ) . fine ( " Received spawn packet for entity with owner , but owner was not found . " ) ; <nl> + FMLLog . fine ( " Received spawn packet for entity with owner , but owner was not found . " ) ; <nl> } <nl> else <nl> { <nl> @ @ - 241 , 26 + 244 , 26 @ @ public class ModCompatibilityClient <nl> } <nl> return ret ; <nl> } <nl> - <nl> + <nl> / * * <nl> * Attempts to invoke ModLoaderMp . handleGUI if ModLoaderMP is installed . <nl> * If not , it does nothing <nl> - * <nl> + * <nl> * @ param pkt The open window packet <nl> * / <nl> - public static void mlmpOpenWindow ( Packet100OpenWindow pkt ) <nl> + public static void mlmpOpenWindow ( Packet100OpenWindow pkt ) <nl> { <nl> - Class mlmp = getClass ( " ModLoaderMp " ) ; <nl> + Class mlmp = getClass ( " ModLoaderMp " ) ; <nl> if ( ! isMLMPInstalled ( ) | | mlmp = = null ) <nl> { <nl> return ; <nl> } <nl> - <nl> - try <nl> + <nl> + try <nl> { <nl> mlmp . getDeclaredMethod ( " handleGUI " , Packet100OpenWindow . class ) . invoke ( null , pkt ) ; <nl> - } <nl> - catch ( Exception e ) <nl> + } <nl> + catch ( Exception e ) <nl> { <nl> e . printStackTrace ( ) ; <nl> } <nl> diff - - git a / common / net / minecraftforge / common / ForgeHooks . java b / common / net / minecraftforge / common / ForgeHooks . java <nl> index b42dd50 . . dd1cd6d 100644 <nl> - - - a / common / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / common / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 2 , 6 + 2 , 8 @ @ package net . minecraftforge . common ; <nl> <nl> import java . util . * ; <nl> <nl> + import cpw . mods . fml . common . FMLLog ; <nl> + <nl> import net . minecraft . src . * ; <nl> import net . minecraftforge . event . entity . living . * ; <nl> import net . minecraftforge . event . entity . living . LivingEvent . * ; <nl> @ @ - 19 , 7 + 21 , 7 @ @ public class ForgeHooks <nl> this . metadata = meta ; <nl> } <nl> } <nl> - <nl> + <nl> static class SeedEntry extends WeightedRandomItem <nl> { <nl> public final ItemStack seed ; <nl> @ @ - 31 , 7 + 33 , 7 @ @ public class ForgeHooks <nl> } <nl> static final List < GrassEntry > grassList = new ArrayList < GrassEntry > ( ) ; <nl> static final List < SeedEntry > seedList = new ArrayList < SeedEntry > ( ) ; <nl> - <nl> + <nl> public static void plantGrass ( World world , int x , int y , int z ) <nl> { <nl> GrassEntry grass = ( GrassEntry ) WeightedRandom . getRandomItem ( world . rand , grassList ) ; <nl> @ @ - 51 , 12 + 53 , 12 @ @ public class ForgeHooks <nl> } <nl> return entry . seed . copy ( ) ; <nl> } <nl> - <nl> + <nl> private static boolean toolInit = false ; <nl> static HashMap < Item , List > toolClasses = new HashMap < Item , List > ( ) ; <nl> static HashMap < List , Integer > toolHarvestLevels = new HashMap < List , Integer > ( ) ; <nl> static HashSet < List > toolEffectiveness = new HashSet < List > ( ) ; <nl> - <nl> + <nl> public static boolean canHarvestBlock ( Block block , EntityPlayer player , int metadata ) <nl> { <nl> if ( block . blockMaterial . isHarvestable ( ) ) <nl> @ @ - 121 , 7 + 123 , 7 @ @ public class ForgeHooks <nl> } <nl> return toolEffectiveness . contains ( Arrays . asList ( block , metadata , ( String ) toolClass . get ( 0 ) ) ) ; <nl> } <nl> - <nl> + <nl> static void initTools ( ) <nl> { <nl> if ( toolInit ) <nl> @ @ - 213 , 7 + 215 , 7 @ @ public class ForgeHooks <nl> } <nl> return ret ; <nl> } <nl> - <nl> + <nl> static <nl> { <nl> grassList . add ( new GrassEntry ( Block . plantYellow , 0 , 20 ) ) ; <nl> @ @ - 221 , 7 + 223 , 7 @ @ public class ForgeHooks <nl> seedList . add ( new SeedEntry ( new ItemStack ( Item . seeds ) , 10 ) ) ; <nl> initTools ( ) ; <nl> System . out . printf ( " MinecraftForge v % s Initialized \ n " , ForgeVersion . getVersion ( ) ) ; <nl> - ModLoader . getLogger ( ) . info ( String . format ( " MinecraftForge v % s Initialized " , ForgeVersion . getVersion ( ) ) ) ; <nl> + FMLLog . info ( " MinecraftForge v % s Initialized " , ForgeVersion . getVersion ( ) ) ; <nl> } <nl> <nl> / * *

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java 
 index 2bda1e3 . . 7e36157 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java 
 + + + b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java 
 @ @ - 42 , 7 + 42 , 7 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 protected float quantaPerBlockFloat = 8F ; 
 protected int density = 1 ; 
 protected int densityDir = - 1 ; 
 - 	 protected int temperature = 300 ; 
 + protected int temperature = 300 ; 
 
 protected int tickRate = 20 ; 
 protected int renderPass = 1 ; 
 @ @ - 135 , 18 + 135 , 18 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 } 
 
 int density = getDensity ( world , x , y , z ) ; 
 - if ( density = = Integer . MAX _ VALUE ) 
 + if ( density = = Integer . MAX _ VALUE ) 
 { 
 - 	 return true ; 
 + return true ; 
 } 
 - 
 + 
 if ( this . density > density ) 
 { 
 - 	 return true ; 
 + return true ; 
 } 
 else 
 { 
 - 	 return false ; 
 + return false ; 
 } 
 } 
 
 @ @ - 183 , 19 + 183 , 19 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 } 
 
 int density = getDensity ( world , x , y , z ) ; 
 - if ( density = = Integer . MAX _ VALUE ) 
 + if ( density = = Integer . MAX _ VALUE ) 
 { 
 - 	 block . dropBlockAsItem ( world , x , y , z , world . getBlockMetadata ( x , y , z ) , 0 ) ; 
 - 	 return true ; 
 + block . dropBlockAsItem ( world , x , y , z , world . getBlockMetadata ( x , y , z ) , 0 ) ; 
 + return true ; 
 } 
 - 
 + 
 if ( this . density > density ) 
 { 
 - 	 return true ; 
 + return true ; 
 } 
 else 
 { 
 - 	 return false ; 
 + return false ; 
 } 
 } 
 
 @ @ - 231 , 7 + 231 , 7 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 { 
 return canDisplace ( world , x , y , z ) ; 
 } 
 - 
 + 
 @ Override 
 public boolean getBlocksMovement ( IBlockAccess world , int x , int y , int z ) 
 { 
 @ @ - 309 , 7 + 309 , 7 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 float lightUp = world . getLightBrightness ( x , y + 1 , z ) ; 
 return lightThis > lightUp ? lightThis : lightUp ; 
 } 
 - * / 
 + * / 
 
 @ Override 
 public int getMixedBrightnessForBlock ( IBlockAccess world , int x , int y , int z ) 
 @ @ - 321 , 7 + 321 , 7 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 int lightThisExt = lightThis > > 16 & 255 ; 
 int lightUpExt = lightUp > > 16 & 255 ; 
 return ( lightThisBase > lightUpBase ? lightThisBase : lightUpBase ) | 
 - ( ( lightThisExt > lightUpExt ? lightThisExt : lightUpExt ) < < 16 ) ; 
 + ( ( lightThisExt > lightUpExt ? lightThisExt : lightUpExt ) < < 16 ) ; 
 } 
 
 @ Override 
 @ @ - 351 , 7 + 351 , 7 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 } 
 return ( ( BlockFluidBase ) block ) . density ; 
 } 
 - 	 
 + 
 public static final int getTemperature ( IBlockAccess world , int x , int y , int z ) 
 { 
 Block block = world . getBlock ( x , y , z ) ; 
 @ @ - 411 , 10 + 411 , 10 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 
 switch ( side ) 
 { 
 - case 0 : - - x2 ; break ; 
 - case 1 : - - z2 ; break ; 
 - case 2 : + + x2 ; break ; 
 - case 3 : + + z2 ; break ; 
 + case 0 : - - x2 ; break ; 
 + case 1 : - - z2 ; break ; 
 + case 2 : + + x2 ; break ; 
 + case 3 : + + z2 ; break ; 
 } 
 
 int otherDecay = quantaPerBlock - getQuantaValue ( world , x2 , y , z2 ) ; 
 @ @ - 440 , 14 + 440 , 14 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 if ( world . getBlock ( x , y + 1 , z ) = = this ) 
 { 
 boolean flag = 
 - isBlockSolid ( world , x , y , z - 1 , 2 ) | | 
 - isBlockSolid ( world , x , y , z + 1 , 3 ) | | 
 - isBlockSolid ( world , x - 1 , y , z , 4 ) | | 
 - isBlockSolid ( world , x + 1 , y , z , 5 ) | | 
 - isBlockSolid ( world , x , y + 1 , z - 1 , 2 ) | | 
 - isBlockSolid ( world , x , y + 1 , z + 1 , 3 ) | | 
 - isBlockSolid ( world , x - 1 , y + 1 , z , 4 ) | | 
 - isBlockSolid ( world , x + 1 , y + 1 , z , 5 ) ; 
 + isBlockSolid ( world , x , y , z - 1 , 2 ) | | 
 + isBlockSolid ( world , x , y , z + 1 , 3 ) | | 
 + isBlockSolid ( world , x - 1 , y , z , 4 ) | | 
 + isBlockSolid ( world , x + 1 , y , z , 5 ) | | 
 + isBlockSolid ( world , x , y + 1 , z - 1 , 2 ) | | 
 + isBlockSolid ( world , x , y + 1 , z + 1 , 3 ) | | 
 + isBlockSolid ( world , x - 1 , y + 1 , z , 4 ) | | 
 + isBlockSolid ( world , x + 1 , y + 1 , z , 5 ) ; 
 
 if ( flag ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / fluids / Fluid . java b / src / main / java / net / minecraftforge / fluids / Fluid . java 
 index 548e82e . . 28096dd 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / Fluid . java 
 + + + b / src / main / java / net / minecraftforge / fluids / Fluid . java 
 @ @ - 33 , 7 + 33 , 7 @ @ import net . minecraft . item . EnumRarity ; 
 * 
 * / 
 public class Fluid 
 - { 	 
 + { 
 / * * The unique identification name for this fluid . * / 
 protected final String fluidName ; 
 
 @ @ - 62 , 7 + 62 , 7 @ @ public class Fluid 
 / * * 
 * Temperature of the fluid - completely arbitrary ; higher temperature indicates that the fluid is 
 * hotter than air . 
 - * 
 + * 
 * Default value is approximately the real - life room temperature of water in degrees Kelvin . 
 * / 
 protected int temperature = 300 ; 
 @ @ - 72 , 10 + 72 , 10 @ @ public class Fluid 
 * permissible . 
 * 
 * Default value is approximately the real - life density of water in m / s ^ 2 ( x10 ^ - 3 ) . 
 - * 
 + * 
 * Higher viscosity means that a fluid flows more slowly , like molasses . 
 * Lower viscosity means that a fluid flows more quickly , like helium . 
 - * 
 + * 
 * / 
 protected int viscosity = 1000 ; 
 
 @ @ - 198 , 7 + 198 , 7 @ @ public class Fluid 
 { 
 return getLocalizedName ( ) ; 
 } 
 - 
 + 
 / * * 
 * Use the FluidStack sensitive version above 
 * / 
 @ @ - 258 , 7 + 258 , 7 @ @ public class Fluid 
 { 
 return this . isGaseous ; 
 } 
 - 
 + 
 public EnumRarity getRarity ( ) 
 { 
 return rarity ; 
 diff - - git a / src / main / java / net / minecraftforge / fluids / FluidContainerRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidContainerRegistry . java 
 index 5ff1336 . . 33c47f2 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidContainerRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidContainerRegistry . java 
 @ @ - 20 , 16 + 20 , 16 @ @ import net . minecraftforge . common . MinecraftForge ; 
 / * * 
 * Register simple items that contain fluids here . Useful for buckets , bottles , and things that have 
 * ID / metadata mappings . 
 - * 
 + * 
 * For more complex items , use { @ link IFluidContainerItem } instead . 
 - * 
 + * 
 * @ author King Lemming 
 - * 
 + * 
 * / 
 public abstract class FluidContainerRegistry 
 { 
 - / / Holder object that implements HashCode for an ItemStack , 
 - / / the local maps are not guaranteed to have the same internal generic structure , 
 + / / Holder object that implements HashCode for an ItemStack , 
 + / / the local maps are not guaranteed to have the same internal generic structure , 
 / / but the external interface for checking ItemStacks will still exist . 
 private static class ContainerKey 
 { 
 @ @ - 89 , 7 + 89 , 7 @ @ public abstract class FluidContainerRegistry 
 
 / * * 
 * Register a new fluid containing item . 
 - * 
 + * 
 * @ param stack 
 * FluidStack containing the type and amount of the fluid stored in the item . 
 * @ param filledContainer 
 @ @ - 106 , 7 + 106 , 7 @ @ public abstract class FluidContainerRegistry 
 / * * 
 * Register a new fluid containing item . The item is assumed to hold 1000 mB of fluid . Also 
 * registers the Fluid if possible . 
 - * 
 + * 
 * @ param fluid 
 * Fluid type that is stored in the item . 
 * @ param filledContainer 
 @ @ - 126 , 7 + 126 , 7 @ @ public abstract class FluidContainerRegistry 
 
 / * * 
 * Register a new fluid containing item that does not have an empty container . 
 - * 
 + * 
 * @ param stack 
 * FluidStack containing the type and amount of the fluid stored in the item . 
 * @ param filledContainer 
 @ @ - 141 , 7 + 141 , 7 @ @ public abstract class FluidContainerRegistry 
 / * * 
 * Register a new fluid containing item that does not have an empty container . The item is 
 * assumed to hold 1000 mB of fluid . Also registers the Fluid if possible . 
 - * 
 + * 
 * @ param fluid 
 * Fluid type that is stored in the item . 
 * @ param filledContainer 
 @ @ - 159 , 7 + 159 , 7 @ @ public abstract class FluidContainerRegistry 
 
 / * * 
 * Register a new fluid containing item . 
 - * 
 + * 
 * @ param data 
 * See { @ link FluidContainerData } . 
 * @ return True if container was successfully registered ; false if it already is . 
 @ @ - 184 , 7 + 184 , 7 @ @ public abstract class FluidContainerRegistry 
 
 / * * 
 * Determines the fluid type and amount inside a container . 
 - * 
 + * 
 * @ param container 
 * The fluid container . 
 * @ return FluidStack representing stored fluid . 
 @ @ - 202 , 9 + 202 , 9 @ @ public abstract class FluidContainerRegistry 
 
 / * * 
 * Attempts to fill an empty container with a fluid . 
 - * 
 + * 
 * NOTE : Returns null on fail , NOT the empty container . 
 - * 
 + * 
 * @ param fluid 
 * FluidStack containing the type and amount of fluid to fill . 
 * @ param container 
 @ @ - 228 , 7 + 228 , 7 @ @ public abstract class FluidContainerRegistry 
 
 / * * 
 * Attempts to empty a full container . 
 - * 
 + * 
 * @ param container 
 * ItemStack representing the full container . 
 * @ return Empty container if successful , otherwise null . 
 @ @ - 251 , 7 + 251 , 7 @ @ public abstract class FluidContainerRegistry 
 
 / * * 
 * Determines the capacity of a full container . 
 - * 
 + * 
 * @ param container 
 * The full container . 
 * @ return The containers capacity , or 0 if the ItemStack does not represent 
 @ @ - 264 , 7 + 264 , 7 @ @ public abstract class FluidContainerRegistry 
 
 / * * 
 * Determines the capacity of a container . 
 - * 
 + * 
 * @ param fluid 
 * FluidStack containing the type of fluid the capacity should be 
 * determined for ( ignored for full containers ) . 
 diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 index 89476af . . bff9007 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 @ @ - 28 , 14 + 28 , 14 @ @ public abstract class FluidRegistry 
 static BiMap < String , Fluid > fluids = HashBiMap . create ( ) ; 
 static BiMap < Fluid , Integer > fluidIDs = HashBiMap . create ( ) ; 
 static BiMap < Block , Fluid > fluidBlocks ; 
 - 
 + 
 public static final Fluid WATER = new Fluid ( " water " ) { 
 @ Override 
 public String getLocalizedName ( ) { 
 return StatCollector . translateToLocal ( " tile . water . name " ) ; 
 } 
 } . setBlock ( Blocks . water ) . setUnlocalizedName ( Blocks . water . getUnlocalizedName ( ) ) ; 
 - 
 + 
 public static final Fluid LAVA = new Fluid ( " lava " ) { 
 @ Override 
 public String getLocalizedName ( ) { 
 @ @ - 165 , 7 + 165 , 7 @ @ public abstract class FluidRegistry 
 } 
 return fluidBlocks . get ( block ) ; 
 } 
 - 
 + 
 public static class FluidRegisterEvent extends Event 
 { 
 public final String fluidName ; 
 diff - - git a / src / main / java / net / minecraftforge / fluids / FluidStack . java b / src / main / java / net / minecraftforge / fluids / FluidStack . java 
 index f23bb0b . . 16e3868 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidStack . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidStack . java 
 @ @ - 56 , 7 + 56 , 7 @ @ public class FluidStack 
 { 
 	 this ( FluidRegistry . getFluid ( fluidID ) , amount , nbt ) ; 
 } 
 - 
 + 
 / * * 
 * This provides a safe method for retrieving a FluidStack - if the Fluid is invalid , the stack 
 * will return as null . 
 @ @ - 103 , 7 + 103 , 7 @ @ public class FluidStack 
 { 
 	 return FluidRegistry . getFluidID ( fluid ) ; 
 } 
 - 
 + 
 public String getLocalizedName ( ) 
 { 
 return this . getFluid ( ) . getLocalizedName ( this ) ;

NEAREST DIFF:
diff - - git a / client / net / minecraftforge / client / ForgeHooksClient . java b / client / net / minecraftforge / client / ForgeHooksClient . java 
 index d4423e3 . . 0e2647e 100644 
 - - - a / client / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / client / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 7 , 6 + 7 , 8 @ @ import java . util . TreeSet ; 
 import org . lwjgl . opengl . GL11 ; 
 import org . lwjgl . opengl . GL12 ; 
 
 + import cpw . mods . fml . client . FMLClientHandler ; 
 + 
 import net . minecraft . client . Minecraft ; 
 import net . minecraft . src . Block ; 
 import net . minecraft . src . EntityItem ; 
 @ @ - 16 , 7 + 18 , 6 @ @ import net . minecraft . src . Item ; 
 import net . minecraft . src . ItemBlock ; 
 import net . minecraft . src . ItemStack ; 
 import net . minecraft . src . MathHelper ; 
 - import net . minecraft . src . ModLoader ; 
 import net . minecraft . src . MovingObjectPosition ; 
 import net . minecraft . src . RenderBlocks ; 
 import net . minecraft . src . RenderEngine ; 
 @ @ - 41 , 7 + 42 , 7 @ @ public class ForgeHooksClient 
 texture = textureID ; 
 subid = subID ; 
 } 
 - 
 + 
 public int compareTo ( TesKey key ) 
 { 
 if ( subid = = key . subid ) 
 @ @ - 50 , 18 + 51 , 18 @ @ public class ForgeHooksClient 
 } 
 return subid - key . subid ; 
 } 
 - 
 + 
 public boolean equals ( Object obj ) 
 { 
 return compareTo ( ( TesKey ) obj ) = = 0 ; 
 } 
 - 
 + 
 public int hashCode ( ) 
 { 
 return texture + 31 * subid ; 
 } 
 } 
 - 
 + 
 public static HashMap < TesKey , Tessellator > tessellators = new HashMap < TesKey , Tessellator > ( ) ; 
 public static HashMap < String , Integer > textures = new HashMap < String , Integer > ( ) ; 
 public static TreeSet < TesKey > renderTextures = new TreeSet < TesKey > ( ) ; 
 @ @ - 69 , 24 + 70 , 28 @ @ public class ForgeHooksClient 
 public static boolean inWorld = false ; 
 public static HashMap < TesKey , IRenderContextHandler > renderHandlers = new HashMap < TesKey , IRenderContextHandler > ( ) ; 
 public static IRenderContextHandler unbindContext = null ; 
 - 
 + 
 protected static void registerRenderContextHandler ( String texture , int subID , IRenderContextHandler handler ) 
 { 
 Integer texID = textures . get ( texture ) ; 
 if ( texID = = null ) 
 { 
 - texID = ModLoader . getMinecraftInstance ( ) . renderEngine . getTexture ( texture ) ; 
 + texID = engine ( ) . getTexture ( texture ) ; 
 textures . put ( texture , texID ) ; 
 } 
 renderHandlers . put ( new TesKey ( texID , subID ) , handler ) ; 
 } 
 
 + static RenderEngine engine ( ) 
 + { 
 + return FMLClientHandler . instance ( ) . getClient ( ) . renderEngine ; 
 + } 
 public static void bindTexture ( String texture , int subID ) 
 { 
 Integer texID = textures . get ( texture ) ; 
 if ( texID = = null ) 
 { 
 - texID = ModLoader . getMinecraftInstance ( ) . renderEngine . getTexture ( texture ) ; 
 + texID = engine ( ) . getTexture ( texture ) ; 
 textures . put ( texture , texID ) ; 
 } 
 if ( ! inWorld ) 
 @ @ - 132 , 11 + 137 , 11 @ @ public class ForgeHooksClient 
 } 
 Tessellator . instance . startDrawing ( mode ) ; 
 } 
 - GL11 . glBindTexture ( GL11 . GL _ TEXTURE _ 2D , ModLoader . getMinecraftInstance ( ) . renderEngine . getTexture ( " / terrain . png " ) ) ; 
 + GL11 . glBindTexture ( GL11 . GL _ TEXTURE _ 2D , engine ( ) . getTexture ( " / terrain . png " ) ) ; 
 return ; 
 } 
 } 
 - 
 + 
 protected static void bindTessellator ( int texture , int subID ) 
 { 
 TesKey key = new TesKey ( texture , subID ) ; 
 @ @ - 158 , 14 + 163 , 14 @ @ public class ForgeHooksClient 
 
 Tessellator . instance = tess ; 
 } 
 - 
 + 
 static int renderPass = - 1 ; 
 public static void beforeRenderPass ( int pass ) 
 { 
 renderPass = pass ; 
 defaultTessellator = Tessellator . instance ; 
 Tessellator . renderingWorldRenderer = true ; 
 - GL11 . glBindTexture ( GL11 . GL _ TEXTURE _ 2D , ModLoader . getMinecraftInstance ( ) . renderEngine . getTexture ( " / terrain . png " ) ) ; 
 + GL11 . glBindTexture ( GL11 . GL _ TEXTURE _ 2D , engine ( ) . getTexture ( " / terrain . png " ) ) ; 
 renderTextures . clear ( ) ; 
 inWorld = true ; 
 } 
 @ @ - 191 , 7 + 196 , 7 @ @ public class ForgeHooksClient 
 handler . afterRenderContext ( ) ; 
 } 
 } 
 - GL11 . glBindTexture ( GL11 . GL _ TEXTURE _ 2D , ModLoader . getMinecraftInstance ( ) . renderEngine . getTexture ( " / terrain . png " ) ) ; 
 + GL11 . glBindTexture ( GL11 . GL _ TEXTURE _ 2D , engine ( ) . getTexture ( " / terrain . png " ) ) ; 
 Tessellator . renderingWorldRenderer = false ; 
 Tessellator . instance = defaultTessellator ; 
 } 
 @ @ - 211 , 7 + 216 , 7 @ @ public class ForgeHooksClient 
 unbindTexture ( ) ; 
 } 
 } 
 - 
 + 
 public static String getArmorTexture ( ItemStack armor , String _ default ) 
 { 
 if ( armor . getItem ( ) instanceof IArmorTextureProvider ) 
 @ @ - 248 , 7 + 253 , 7 @ @ public class ForgeHooksClient 
 GL11 . glScalef ( scale , scale , scale ) ; 
 int size = entity . item . stackSize ; 
 int count = ( size > 20 ? 4 : ( size > 5 ? 3 : ( size > 1 ? 2 : 1 ) ) ) ; 
 - 
 + 
 for ( int j = 0 ; j < size ; j + + ) 
 { 
 GL11 . glPushMatrix ( ) ; 
 @ @ - 271 , 7 + 276 , 7 @ @ public class ForgeHooksClient 
 } 
 return true ; 
 } 
 - 
 + 
 public static boolean renderInventoryItem ( RenderBlocks renderBlocks , RenderEngine engine , ItemStack item , boolean inColor , float zLevel , float x , float y ) 
 { 
 IItemRenderer customRenderer = MinecraftForgeClient . getItemRenderer ( item , INVENTORY ) ; 
 @ @ - 327 , 7 + 332 , 7 @ @ public class ForgeHooksClient 
 } 
 return true ; 
 } 
 - 
 + 
 public static void renderEquippedItem ( IItemRenderer customRenderer , RenderBlocks renderBlocks , EntityLiving entity , ItemStack item ) 
 { 
 if ( customRenderer . shouldUseRenderHelper ( EQUIPPED , item , EQUIPPED _ BLOCK ) ) 
 @ @ - 398 , 7 + 403 , 7 @ @ public class ForgeHooksClient 
 { 
 if ( Tessellator . class . getPackage ( ) . equals ( " net . minecraft . src " ) ) 
 { 
 - Minecraft mc = ModLoader . getMinecraftInstance ( ) ; 
 + Minecraft mc = FMLClientHandler . instance ( ) . getClient ( ) ; 
 if ( mc . ingameGUI ! = null ) 
 { 
 mc . ingameGUI . getChatGUI ( ) . printChatMessage ( msg ) ; 
 diff - - git a / client / net / minecraftforge / client / MinecraftForgeClient . java b / client / net / minecraftforge / client / MinecraftForgeClient . java 
 index 35f66eb . . cd68a7a 100644 
 - - - a / client / net / minecraftforge / client / MinecraftForgeClient . java 
 + + + b / client / net / minecraftforge / client / MinecraftForgeClient . java 
 @ @ - 11 , 7 + 11 , 6 @ @ import net . minecraft . src . Block ; 
 import net . minecraft . src . Entity ; 
 import net . minecraft . src . Item ; 
 import net . minecraft . src . ItemStack ; 
 - import net . minecraft . src . ModLoader ; 
 import net . minecraft . src . RenderBlocks ; 
 import net . minecraft . src . World ; 
 import net . minecraftforge . client . IItemRenderer . ItemRenderType ; 
 @ @ - 33 , 13 + 32 , 13 @ @ public class MinecraftForgeClient 
 ForgeHooksClient . registerRenderContextHandler ( texture , subid , handler ) ; 
 } 
 
 - / * * 
 + / * * 
 * Preload a texture . Textures must be preloaded before the first 
 * use , or they will cause visual anomalies . 
 * / 
 public static void preloadTexture ( String texture ) 
 { 
 - ModLoader . getMinecraftInstance ( ) . renderEngine . getTexture ( texture ) ; 
 + ForgeHooksClient . engine ( ) . getTexture ( texture ) ; 
 } 
 
 / * * Render a block . Render a block which may have a custom texture . 
 @ @ - 51 , 17 + 50 , 17 @ @ public class MinecraftForgeClient 
 ForgeHooksClient . afterBlockRender ( block , render ) ; 
 } 
 
 - / * * 
 + / * * 
 * Get the current render pass . 
 * / 
 public static int getRenderPass ( ) 
 { 
 return ForgeHooksClient . renderPass ; 
 } 
 - 
 + 
 private static IItemRenderer [ ] customItemRenderers = new IItemRenderer [ Item . itemsList . length ] ; 
 
 - / * * 
 + / * * 
 * Register a custom renderer for a specific item . This can be used to 
 * render the item in - world as an EntityItem , when the item is equipped , or 
 * when the item is in an inventory slot . 
 @ @ - 77 , 7 + 76 , 7 @ @ public class MinecraftForgeClient 
 public static IItemRenderer getItemRenderer ( ItemStack item , ItemRenderType type ) 
 { 
 IItemRenderer renderer = customItemRenderers [ item . itemID ] ; 
 - if ( renderer ! = null & & renderer . handleRenderType ( item , type ) ) 
 + if ( renderer ! = null & & renderer . handleRenderType ( item , type ) ) 
 { 
 return customItemRenderers [ item . itemID ] ; 
 } 
 diff - - git a / client / net / minecraftforge / client / ModCompatibilityClient . java b / client / net / minecraftforge / client / ModCompatibilityClient . java 
 index c625dea . . 258f6ff 100644 
 - - - a / client / net / minecraftforge / client / ModCompatibilityClient . java 
 + + + b / client / net / minecraftforge / client / ModCompatibilityClient . java 
 @ @ - 3 , 6 + 3 , 10 @ @ package net . minecraftforge . client ; 
 import java . io . File ; 
 import java . io . IOException ; 
 import java . lang . reflect . Field ; 
 + import java . util . logging . Level ; 
 + 
 + import cpw . mods . fml . client . FMLClientHandler ; 
 + import cpw . mods . fml . common . FMLLog ; 
 
 import paulscode . sound . SoundSystemConfig ; 
 import paulscode . sound . codecs . CodecIBXM ; 
 @ @ - 10 , 19 + 14 , 19 @ @ import paulscode . sound . codecs . CodecIBXM ; 
 import net . minecraft . client . Minecraft ; 
 import net . minecraft . src . * ; 
 
 - public class ModCompatibilityClient 
 + public class ModCompatibilityClient 
 { 
 / * * 
 - * Trys to get the class for the specified name , will also try the 
 + * Trys to get the class for the specified name , will also try the 
 * net . minecraft . src package in case we are in MCP 
 * Returns null if not found . 
 - * 
 + * 
 * @ param name The class name 
 * @ return The Class , or null if not found 
 * / 
 private static Class getClass ( String name ) 
 { 
 - try 
 + try 
 { 
 return Class . forName ( name ) ; 
 } 
 @ @ - 38 , 23 + 42 , 23 @ @ public class ModCompatibilityClient 
 } 
 } 
 } 
 - 
 + 
 / * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 * Risugami ' s AudioMod Compatibility 
 * http : / / www . minecraftforum . net / topic / 75440 - 
 - * 
 + * 
 * AudioMod adds a few extra codecs , loads audio from / resources / mods / * , 
 - * introduces the concept of ' cave ' sounds , which are determined by if 
 + * introduces the concept of ' cave ' sounds , which are determined by if 
 * the player is underneath a solid block . 
 - * 
 + * 
 * It also lowers the interval between background music songs to 6000 
 * / 
 public static SoundPool audioModSoundPoolCave ; 
 - 
 + 
 / * * 
 * Populates the sound pools with with sounds from the / resources / mods folder 
 * And sets the interval between background music to 6000 
 - * 
 + * 
 * @ param mngr The SoundManager instance 
 * / 
 public static void audioModLoad ( SoundManager mngr ) 
 @ @ - 64 , 13 + 68 , 13 @ @ public class ModCompatibilityClient 
 audioModLoadModAudio ( " resources / mod / streaming " , mngr . soundPoolStreaming ) ; 
 audioModLoadModAudio ( " resources / mod / music " , mngr . soundPoolMusic ) ; 
 audioModLoadModAudio ( " resources / mod / cavemusic " , audioModSoundPoolCave ) ; 
 - 
 + 
 if ( mngr . MUSIC _ INTERVAL = = 12000 ) 
 { 
 mngr . MUSIC _ INTERVAL = 6000 ; 
 } 
 } 
 - 
 + 
 / * * 
 * Walks the given path in the Minecraft app directory and adds audio to the SoundPool 
 * @ param path The path to walk 
 @ @ - 86 , 15 + 90 , 14 @ @ public class ModCompatibilityClient 
 } 
 catch ( IOException ex ) 
 { 
 - ModLoader . getLogger ( ) . fine ( " Loading Mod audio failed for folder : " + path ) ; 
 - ModLoader . getLogger ( ) . fine ( ex . toString ( ) ) ; 
 + FMLLog . log ( Level . FINE , ex , " Loading Mod audio failed for folder : % s " , path ) ; 
 ex . printStackTrace ( ) ; 
 } 
 } 
 - 
 + 
 / * * 
 * Walks the folder path recursively and calls pool . addSound on any file it finds . 
 - * 
 + * 
 * @ param base The base path for the folder , determines the name when calling addSound 
 * @ param folder The current folder 
 * @ param pool The SoundPool to add the sound to 
 @ @ - 105 , 7 + 108 , 7 @ @ public class ModCompatibilityClient 
 if ( folder . exists ( ) | | folder . mkdirs ( ) ) 
 { 
 for ( File file : folder . listFiles ( ) ) 
 - { 
 + { 
 if ( ! file . getName ( ) . startsWith ( " . " ) ) 
 { 
 if ( file . isDirectory ( ) ) 
 @ @ - 125 , 7 + 128 , 7 @ @ public class ModCompatibilityClient 
 / * * 
 * Adds the IBXM codec and associates it with . xm , . s3m , and . mod 
 * / 
 - public static void audioModAddCodecs ( ) 
 + public static void audioModAddCodecs ( ) 
 { 
 SoundSystemConfig . setCodec ( " xm " , CodecIBXM . class ) ; 
 SoundSystemConfig . setCodec ( " s3m " , CodecIBXM . class ) ; 
 @ @ - 135 , 14 + 138 , 14 @ @ public class ModCompatibilityClient 
 / * * 
 * If the current player is underground , it picks a random song from the cave sound pool , 
 * if they are not it returns the passed in entry . 
 - * 
 + * 
 * @ param soundManager The SoundManager instance 
 * @ param current The currently selected entry 
 * @ return A soundPool entry to be played as the background music 
 * / 
 - public static SoundPoolEntry audioModPickBackgroundMusic ( SoundManager soundManager , SoundPoolEntry current ) 
 + public static SoundPoolEntry audioModPickBackgroundMusic ( SoundManager soundManager , SoundPoolEntry current ) 
 { 
 - Minecraft mc = ModLoader . getMinecraftInstance ( ) ; 
 + Minecraft mc = FMLClientHandler . instance ( ) . getClient ( ) ; 
 if ( mc ! = null & & mc . theWorld ! = null & & audioModSoundPoolCave ! = null ) 
 { 
 Entity ent = mc . renderViewEntity ; 
 @ @ - 153 , 19 + 156 , 19 @ @ public class ModCompatibilityClient 
 } 
 return current ; 
 } 
 - 
 + 
 / * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 * SDK ' s ModLoaderMP 
 * http : / / www . minecraftforum . net / topic / 86765 - 
 - * 
 - * ModLoaderMP was supposed to be a reliable server side version of ModLoader , however it has 
 + * 
 + * ModLoaderMP was supposed to be a reliable server side version of ModLoader , however it has 
 * gotten the reputation of being really slow to update . Never having bugfixes , breaking compatibility 
 * with the client side ModLoader . 
 - * 
 + * 
 * So we have replaced it with our own system called FML ( Forge ModLoader ) 
 * it is a stand alone mod , that Forge relies on , and that is open source / community driven . 
 * https : / / github . com / cpw / FML 
 - * 
 + * 
 * However , for compatibilities sake , we provide the ModLoaderMP ' s hooks so that the end user 
 * does not need to make a choice between the two on the client side . 
 * * / 
 @ @ - 185 , 9 + 188 , 9 @ @ public class ModCompatibilityClient 
 } 
 
 / * * 
 - * Attempts to spawn a vehicle using ModLoaderMP ' s vehicle spawn registry , if MLMP is not installed 
 + * Attempts to spawn a vehicle using ModLoaderMP ' s vehicle spawn registry , if MLMP is not installed 
 * it returns the passed in currentEntity 
 - * 
 + * 
 * @ param type The Type ID of the vehicle 
 * @ param world The current world 
 * @ param x The spawn X position 
 @ @ - 200 , 18 + 203 , 18 @ @ public class ModCompatibilityClient 
 * / 
 public static Object mlmpVehicleSpawn ( int type , World world , double x , double y , double z , Entity thrower , Object currentEntity ) throws Exception 
 { 
 - Class mlmp = getClass ( " ModLoaderMp " ) ; 
 + Class mlmp = getClass ( " ModLoaderMp " ) ; 
 if ( ! isMLMPInstalled ( ) | | mlmp = = null ) 
 { 
 return currentEntity ; 
 } 
 - 
 + 
 Object entry = mlmp . getDeclaredMethod ( " handleNetClientHandlerEntities " , int . class ) . invoke ( null , type ) ; 
 if ( entry = = null ) 
 { 
 return currentEntity ; 
 } 
 - 
 + 
 Class entityClass = ( Class ) entry . getClass ( ) . getDeclaredField ( " entityClass " ) . get ( entry ) ; 
 Object ret = ( Entity ) entityClass . getConstructor ( World . class , Double . TYPE , Double . TYPE , Double . TYPE ) . newInstance ( world , x , y , z ) ; 
 
 @ @ - 227 , 7 + 230 , 7 @ @ public class ModCompatibilityClient 
 if ( thrower = = null ) 
 { 
 System . out . println ( " Received spawn packet for entity with owner , but owner was not found . " ) ; 
 - ModLoader . getLogger ( ) . fine ( " Received spawn packet for entity with owner , but owner was not found . " ) ; 
 + FMLLog . fine ( " Received spawn packet for entity with owner , but owner was not found . " ) ; 
 } 
 else 
 { 
 @ @ - 241 , 26 + 244 , 26 @ @ public class ModCompatibilityClient 
 } 
 return ret ; 
 } 
 - 
 + 
 / * * 
 * Attempts to invoke ModLoaderMp . handleGUI if ModLoaderMP is installed . 
 * If not , it does nothing 
 - * 
 + * 
 * @ param pkt The open window packet 
 * / 
 - public static void mlmpOpenWindow ( Packet100OpenWindow pkt ) 
 + public static void mlmpOpenWindow ( Packet100OpenWindow pkt ) 
 { 
 - Class mlmp = getClass ( " ModLoaderMp " ) ; 
 + Class mlmp = getClass ( " ModLoaderMp " ) ; 
 if ( ! isMLMPInstalled ( ) | | mlmp = = null ) 
 { 
 return ; 
 } 
 - 
 - try 
 + 
 + try 
 { 
 mlmp . getDeclaredMethod ( " handleGUI " , Packet100OpenWindow . class ) . invoke ( null , pkt ) ; 
 - } 
 - catch ( Exception e ) 
 + } 
 + catch ( Exception e ) 
 { 
 e . printStackTrace ( ) ; 
 } 
 diff - - git a / common / net / minecraftforge / common / ForgeHooks . java b / common / net / minecraftforge / common / ForgeHooks . java 
 index b42dd50 . . dd1cd6d 100644 
 - - - a / common / net / minecraftforge / common / ForgeHooks . java 
 + + + b / common / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 2 , 6 + 2 , 8 @ @ package net . minecraftforge . common ; 
 
 import java . util . * ; 
 
 + import cpw . mods . fml . common . FMLLog ; 
 + 
 import net . minecraft . src . * ; 
 import net . minecraftforge . event . entity . living . * ; 
 import net . minecraftforge . event . entity . living . LivingEvent . * ; 
 @ @ - 19 , 7 + 21 , 7 @ @ public class ForgeHooks 
 this . metadata = meta ; 
 } 
 } 
 - 
 + 
 static class SeedEntry extends WeightedRandomItem 
 { 
 public final ItemStack seed ; 
 @ @ - 31 , 7 + 33 , 7 @ @ public class ForgeHooks 
 } 
 static final List < GrassEntry > grassList = new ArrayList < GrassEntry > ( ) ; 
 static final List < SeedEntry > seedList = new ArrayList < SeedEntry > ( ) ; 
 - 
 + 
 public static void plantGrass ( World world , int x , int y , int z ) 
 { 
 GrassEntry grass = ( GrassEntry ) WeightedRandom . getRandomItem ( world . rand , grassList ) ; 
 @ @ - 51 , 12 + 53 , 12 @ @ public class ForgeHooks 
 } 
 return entry . seed . copy ( ) ; 
 } 
 - 
 + 
 private static boolean toolInit = false ; 
 static HashMap < Item , List > toolClasses = new HashMap < Item , List > ( ) ; 
 static HashMap < List , Integer > toolHarvestLevels = new HashMap < List , Integer > ( ) ; 
 static HashSet < List > toolEffectiveness = new HashSet < List > ( ) ; 
 - 
 + 
 public static boolean canHarvestBlock ( Block block , EntityPlayer player , int metadata ) 
 { 
 if ( block . blockMaterial . isHarvestable ( ) ) 
 @ @ - 121 , 7 + 123 , 7 @ @ public class ForgeHooks 
 } 
 return toolEffectiveness . contains ( Arrays . asList ( block , metadata , ( String ) toolClass . get ( 0 ) ) ) ; 
 } 
 - 
 + 
 static void initTools ( ) 
 { 
 if ( toolInit ) 
 @ @ - 213 , 7 + 215 , 7 @ @ public class ForgeHooks 
 } 
 return ret ; 
 } 
 - 
 + 
 static 
 { 
 grassList . add ( new GrassEntry ( Block . plantYellow , 0 , 20 ) ) ; 
 @ @ - 221 , 7 + 223 , 7 @ @ public class ForgeHooks 
 seedList . add ( new SeedEntry ( new ItemStack ( Item . seeds ) , 10 ) ) ; 
 initTools ( ) ; 
 System . out . printf ( " MinecraftForge v % s Initialized \ n " , ForgeVersion . getVersion ( ) ) ; 
 - ModLoader . getLogger ( ) . info ( String . format ( " MinecraftForge v % s Initialized " , ForgeVersion . getVersion ( ) ) ) ; 
 + FMLLog . info ( " MinecraftForge v % s Initialized " , ForgeVersion . getVersion ( ) ) ; 
 } 
 
 / * *
