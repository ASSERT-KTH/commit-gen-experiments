BLEU SCORE: 0.009451258377819046

TEST MSG: Tweak build file slightly - allow passing buildNumber using gradle parameters ( - PbuildNumber = . . . ) and provide a " resetBuildNumber " function to reset the buildNumber to zero in the ForgeVersion file . Means builds can be reproducible in - IDE .
GENERATED MSG: Fix ciWriteBuildNumber task . Ugly , but it works .

TEST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index 6d739dd . . b3344ee 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 89 , 7 + 89 , 7 @ @ task changelog ( type : JenkinsChangelog ) { <nl> outputs . upToDateWhen { false } / / never up to date <nl> serverRoot = " http : / / ci . jenkins . minecraftforge . net / " <nl> jobName = " minecraftforge " <nl> - targetBuild = System . env [ ' BUILD _ NUMBER ' ] ? : 0 ; <nl> + targetBuild = System . env [ ' BUILD _ NUMBER ' ] ? : project . ext . properties . buildNumber ? : 0 ; <nl> authName = " console _ script " <nl> authPassword = project . hasProperty ( ' forgeJenkinsPass ' ) ? project . getProperty ( ' forgeJenkinsPass ' ) : " " ; <nl> output = " build / distributions / $ { project . name } - $ { project . version } - changelog . txt " <nl> @ @ - 218 , 14 + 218 , 13 @ @ artifacts { <nl> <nl> task ciWriteBuildNumber < < { <nl> def file = file ( " src / main / java / net / minecraftforge / common / ForgeVersion . java " ) ; <nl> - def bn = System . getenv ( " BUILD _ NUMBER " ) ? : 0 ; <nl> + def bn = System . getenv ( " BUILD _ NUMBER " ) ? : project . ext . properties . buildNumber ? : 0 ; <nl> def outfile = " " ; <nl> def ln = System . getProperty ( ' line . separator ' ) <nl> <nl> file . eachLine { String s - > <nl> - if ( s . contains ( " buildVersion " ) & & s . contains ( " = 0 ; " ) ) { <nl> + if ( s . matches ( " ^ public static final int buildVersion = [ \ \ d ] + ; \ $ " ) ) <nl> s = " public static final int buildVersion = $ { bn } ; " ; <nl> - } <nl> outfile + = ( s + ln ) ; <nl> } <nl> file . write ( outfile ) ; <nl> @ @ - 345 , 10 + 344 , 8 @ @ String getVersionFromJava ( File file ) <nl> } <nl> } <nl> <nl> - if ( System . getenv ( ) . containsKey ( " BUILD _ NUMBER " ) ) <nl> - { <nl> - build = System . getenv ( " BUILD _ NUMBER " ) ; <nl> - } <nl> + build = System . getenv ( " BUILD _ NUMBER " ) ? : project . ext . properties . buildNumber ? : 0 <nl> + <nl> <nl> String branch = null ; <nl> if ( ! System . getenv ( ) . containsKey ( " GIT _ BRANCH " ) ) <nl> @ @ - 370 , 6 + 367 , 10 @ @ String getVersionFromJava ( File file ) <nl> return out ; <nl> } <nl> <nl> + task resetBuildNumber < < { <nl> + project . ext . properties . buildNumber = 0 ; <nl> + ciWriteBuildNumber . execute ( ) <nl> + } <nl> / / re - add old tasks for jenkins compat <nl> / / should be remvoed , and the jenkisn fixed when no longer building with FG 1 . 2 <nl> task setupForge { dependsOn ' setup ' } <nl> @ @ - 386 , 4 + 387 , 4 @ @ task fixParams < < { <nl> } <nl> fixParams . dependsOn ( ' extractMcpMappings ' ) <nl> extractMcpMappings . finalizedBy ( ' fixParams ' ) <nl> - * / <nl> \ No newline at end of file <nl> + * /
NEAREST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index 01134cc . . b618878 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 209 , 6 + 209 , 21 @ @ artifacts { <nl> archives makeMdk <nl> } <nl> <nl> + task ciWriteBuildNumber < < { <nl> + def file = file ( " src / main / java / net / minecraftforge / common / ForgeVersion . java " ) ; <nl> + def bn = System . getenv ( " BUILD _ NUMBER " ) ? : 0 ; <nl> + def outfile = " " ; <nl> + def ln = System . getProperty ( ' line . separator ' ) <nl> + <nl> + file . eachLine { String s - > <nl> + if ( s . contains ( " buildVersion " ) & & s . contains ( " = 0 ; " ) ) { <nl> + 	 s = " public static final int buildVersion = $ { bn } ; " ; <nl> + } <nl> + outfile + = ( s + ln ) ; <nl> + } <nl> + file . write ( outfile ) ; <nl> + } <nl> + <nl> uploadArchives { <nl> repositories . mavenDeployer { <nl>

TEST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index 6d739dd . . b3344ee 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 89 , 7 + 89 , 7 @ @ task changelog ( type : JenkinsChangelog ) { 
 outputs . upToDateWhen { false } / / never up to date 
 serverRoot = " http : / / ci . jenkins . minecraftforge . net / " 
 jobName = " minecraftforge " 
 - targetBuild = System . env [ ' BUILD _ NUMBER ' ] ? : 0 ; 
 + targetBuild = System . env [ ' BUILD _ NUMBER ' ] ? : project . ext . properties . buildNumber ? : 0 ; 
 authName = " console _ script " 
 authPassword = project . hasProperty ( ' forgeJenkinsPass ' ) ? project . getProperty ( ' forgeJenkinsPass ' ) : " " ; 
 output = " build / distributions / $ { project . name } - $ { project . version } - changelog . txt " 
 @ @ - 218 , 14 + 218 , 13 @ @ artifacts { 
 
 task ciWriteBuildNumber < < { 
 def file = file ( " src / main / java / net / minecraftforge / common / ForgeVersion . java " ) ; 
 - def bn = System . getenv ( " BUILD _ NUMBER " ) ? : 0 ; 
 + def bn = System . getenv ( " BUILD _ NUMBER " ) ? : project . ext . properties . buildNumber ? : 0 ; 
 def outfile = " " ; 
 def ln = System . getProperty ( ' line . separator ' ) 
 
 file . eachLine { String s - > 
 - if ( s . contains ( " buildVersion " ) & & s . contains ( " = 0 ; " ) ) { 
 + if ( s . matches ( " ^ public static final int buildVersion = [ \ \ d ] + ; \ $ " ) ) 
 s = " public static final int buildVersion = $ { bn } ; " ; 
 - } 
 outfile + = ( s + ln ) ; 
 } 
 file . write ( outfile ) ; 
 @ @ - 345 , 10 + 344 , 8 @ @ String getVersionFromJava ( File file ) 
 } 
 } 
 
 - if ( System . getenv ( ) . containsKey ( " BUILD _ NUMBER " ) ) 
 - { 
 - build = System . getenv ( " BUILD _ NUMBER " ) ; 
 - } 
 + build = System . getenv ( " BUILD _ NUMBER " ) ? : project . ext . properties . buildNumber ? : 0 
 + 
 
 String branch = null ; 
 if ( ! System . getenv ( ) . containsKey ( " GIT _ BRANCH " ) ) 
 @ @ - 370 , 6 + 367 , 10 @ @ String getVersionFromJava ( File file ) 
 return out ; 
 } 
 
 + task resetBuildNumber < < { 
 + project . ext . properties . buildNumber = 0 ; 
 + ciWriteBuildNumber . execute ( ) 
 + } 
 / / re - add old tasks for jenkins compat 
 / / should be remvoed , and the jenkisn fixed when no longer building with FG 1 . 2 
 task setupForge { dependsOn ' setup ' } 
 @ @ - 386 , 4 + 387 , 4 @ @ task fixParams < < { 
 } 
 fixParams . dependsOn ( ' extractMcpMappings ' ) 
 extractMcpMappings . finalizedBy ( ' fixParams ' ) 
 - * / 
 \ No newline at end of file 
 + * /

NEAREST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index 01134cc . . b618878 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 209 , 6 + 209 , 21 @ @ artifacts { 
 archives makeMdk 
 } 
 
 + task ciWriteBuildNumber < < { 
 + def file = file ( " src / main / java / net / minecraftforge / common / ForgeVersion . java " ) ; 
 + def bn = System . getenv ( " BUILD _ NUMBER " ) ? : 0 ; 
 + def outfile = " " ; 
 + def ln = System . getProperty ( ' line . separator ' ) 
 + 
 + file . eachLine { String s - > 
 + if ( s . contains ( " buildVersion " ) & & s . contains ( " = 0 ; " ) ) { 
 + 	 s = " public static final int buildVersion = $ { bn } ; " ; 
 + } 
 + outfile + = ( s + ln ) ; 
 + } 
 + file . write ( outfile ) ; 
 + } 
 + 
 uploadArchives { 
 repositories . mavenDeployer { 

