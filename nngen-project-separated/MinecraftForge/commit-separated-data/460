BLEU SCORE: 0.02383853510228548

TEST MSG: Tweak vertex lighter to avoid causing excess array initialisations
GENERATED MSG: Added back in the lost class

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java <nl> index 7be971e . . 9e21232 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java <nl> @ @ - 35 , 6 + 35 , 8 @ @ import com . google . common . base . Objects ; <nl> <nl> public class VertexLighterFlat extends QuadGatheringTransformer <nl> { <nl> + protected static final VertexFormatElement NORMAL _ 4F = new VertexFormatElement ( 0 , VertexFormatElement . EnumType . FLOAT , VertexFormatElement . EnumUsage . NORMAL , 4 ) ; <nl> + <nl> protected final BlockInfo blockInfo ; <nl> private int tint = - 1 ; <nl> private boolean diffuse = true ; <nl> @ @ - 53 , 8 + 55 , 9 @ @ public class VertexLighterFlat extends QuadGatheringTransformer <nl> public void setParent ( IVertexConsumer parent ) <nl> { <nl> super . setParent ( parent ) ; <nl> - if ( Objects . equal ( getVertexFormat ( ) , parent . getVertexFormat ( ) ) ) return ; <nl> - setVertexFormat ( getVertexFormat ( parent ) ) ; <nl> + VertexFormat format = getVertexFormat ( parent ) ; <nl> + if ( Objects . equal ( format , getVertexFormat ( ) ) ) return ; <nl> + setVertexFormat ( format ) ; <nl> for ( int i = 0 ; i < getVertexFormat ( ) . getElementCount ( ) ; i + + ) <nl> { <nl> switch ( getVertexFormat ( ) . getElement ( i ) . getUsage ( ) ) <nl> @ @ - 94 , 9 + 97 , 9 @ @ public class VertexLighterFlat extends QuadGatheringTransformer <nl> private static VertexFormat getVertexFormat ( IVertexConsumer parent ) <nl> { <nl> VertexFormat format = parent . getVertexFormat ( ) ; <nl> - if ( format . hasNormal ( ) ) return format ; <nl> + if ( format = = null | | format . hasNormal ( ) ) return format ; <nl> format = new VertexFormat ( format ) ; <nl> - format . addElement ( new VertexFormatElement ( 0 , VertexFormatElement . EnumType . FLOAT , VertexFormatElement . EnumUsage . NORMAL , 4 ) ) ; <nl> + format . addElement ( NORMAL _ 4F ) ; <nl> return format ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / VertexTransformer . java b / src / main / java / net / minecraftforge / client / model / pipeline / VertexTransformer . java <nl> new file mode 100644 <nl> index 0000000 . . 5fe6565 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / model / pipeline / VertexTransformer . java <nl> @ @ - 0 , 0 + 1 , 39 @ @ <nl> + package net . minecraftforge . client . model . pipeline ; <nl> + <nl> + import net . minecraft . client . renderer . vertex . VertexFormat ; <nl> + import net . minecraft . util . EnumFacing ; <nl> + <nl> + public class VertexTransformer implements IVertexConsumer <nl> + { <nl> + protected final IVertexConsumer parent ; <nl> + <nl> + public VertexTransformer ( IVertexConsumer parent ) <nl> + { <nl> + this . parent = parent ; <nl> + } <nl> + <nl> + public VertexFormat getVertexFormat ( ) <nl> + { <nl> + return parent . getVertexFormat ( ) ; <nl> + } <nl> + <nl> + public void setQuadTint ( int tint ) <nl> + { <nl> + parent . setQuadTint ( tint ) ; <nl> + } <nl> + <nl> + public void setQuadOrientation ( EnumFacing orientation ) <nl> + { <nl> + parent . setQuadOrientation ( orientation ) ; <nl> + } <nl> + <nl> + public void setQuadColored ( ) <nl> + { <nl> + parent . setQuadColored ( ) ; <nl> + } <nl> + <nl> + public void put ( int element , float . . . data ) <nl> + { <nl> + parent . put ( element , data ) ; <nl> + } <nl> + }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java 
 index 7be971e . . 9e21232 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / VertexLighterFlat . java 
 @ @ - 35 , 6 + 35 , 8 @ @ import com . google . common . base . Objects ; 
 
 public class VertexLighterFlat extends QuadGatheringTransformer 
 { 
 + protected static final VertexFormatElement NORMAL _ 4F = new VertexFormatElement ( 0 , VertexFormatElement . EnumType . FLOAT , VertexFormatElement . EnumUsage . NORMAL , 4 ) ; 
 + 
 protected final BlockInfo blockInfo ; 
 private int tint = - 1 ; 
 private boolean diffuse = true ; 
 @ @ - 53 , 8 + 55 , 9 @ @ public class VertexLighterFlat extends QuadGatheringTransformer 
 public void setParent ( IVertexConsumer parent ) 
 { 
 super . setParent ( parent ) ; 
 - if ( Objects . equal ( getVertexFormat ( ) , parent . getVertexFormat ( ) ) ) return ; 
 - setVertexFormat ( getVertexFormat ( parent ) ) ; 
 + VertexFormat format = getVertexFormat ( parent ) ; 
 + if ( Objects . equal ( format , getVertexFormat ( ) ) ) return ; 
 + setVertexFormat ( format ) ; 
 for ( int i = 0 ; i < getVertexFormat ( ) . getElementCount ( ) ; i + + ) 
 { 
 switch ( getVertexFormat ( ) . getElement ( i ) . getUsage ( ) ) 
 @ @ - 94 , 9 + 97 , 9 @ @ public class VertexLighterFlat extends QuadGatheringTransformer 
 private static VertexFormat getVertexFormat ( IVertexConsumer parent ) 
 { 
 VertexFormat format = parent . getVertexFormat ( ) ; 
 - if ( format . hasNormal ( ) ) return format ; 
 + if ( format = = null | | format . hasNormal ( ) ) return format ; 
 format = new VertexFormat ( format ) ; 
 - format . addElement ( new VertexFormatElement ( 0 , VertexFormatElement . EnumType . FLOAT , VertexFormatElement . EnumUsage . NORMAL , 4 ) ) ; 
 + format . addElement ( NORMAL _ 4F ) ; 
 return format ; 
 } 


NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / model / pipeline / VertexTransformer . java b / src / main / java / net / minecraftforge / client / model / pipeline / VertexTransformer . java 
 new file mode 100644 
 index 0000000 . . 5fe6565 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / model / pipeline / VertexTransformer . java 
 @ @ - 0 , 0 + 1 , 39 @ @ 
 + package net . minecraftforge . client . model . pipeline ; 
 + 
 + import net . minecraft . client . renderer . vertex . VertexFormat ; 
 + import net . minecraft . util . EnumFacing ; 
 + 
 + public class VertexTransformer implements IVertexConsumer 
 + { 
 + protected final IVertexConsumer parent ; 
 + 
 + public VertexTransformer ( IVertexConsumer parent ) 
 + { 
 + this . parent = parent ; 
 + } 
 + 
 + public VertexFormat getVertexFormat ( ) 
 + { 
 + return parent . getVertexFormat ( ) ; 
 + } 
 + 
 + public void setQuadTint ( int tint ) 
 + { 
 + parent . setQuadTint ( tint ) ; 
 + } 
 + 
 + public void setQuadOrientation ( EnumFacing orientation ) 
 + { 
 + parent . setQuadOrientation ( orientation ) ; 
 + } 
 + 
 + public void setQuadColored ( ) 
 + { 
 + parent . setQuadColored ( ) ; 
 + } 
 + 
 + public void put ( int element , float . . . data ) 
 + { 
 + parent . put ( element , data ) ; 
 + } 
 + }
