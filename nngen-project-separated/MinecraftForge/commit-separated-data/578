BLEU SCORE: 0.018738883683389617

TEST MSG: Add hand argument to BlockEvent . PlaceEvent ( # 3221 )
GENERATED MSG: Added ItemTooltipEvent

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / item / ItemLilyPad . java . patch b / patches / minecraft / net / minecraft / item / ItemLilyPad . java . patch <nl> index 784e8a2 . . 75b8ed9 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / ItemLilyPad . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / ItemLilyPad . java . patch <nl> @ @ - 7 , 7 + 7 , 7 @ @ <nl> + / / special case for handling block placement with water lilies <nl> + net . minecraftforge . common . util . BlockSnapshot blocksnapshot = net . minecraftforge . common . util . BlockSnapshot . getBlockSnapshot ( p _ 77659 _ 2 _ , blockpos1 ) ; <nl> + p _ 77659 _ 2 _ . func _ 175656 _ a ( blockpos1 , Blocks . field _ 150392 _ bi . func _ 176223 _ P ( ) ) ; <nl> - + if ( net . minecraftforge . event . ForgeEventFactory . onPlayerBlockPlace ( p _ 77659 _ 3 _ , blocksnapshot , net . minecraft . util . EnumFacing . UP ) . isCanceled ( ) ) <nl> + + if ( net . minecraftforge . event . ForgeEventFactory . onPlayerBlockPlace ( p _ 77659 _ 3 _ , blocksnapshot , net . minecraft . util . EnumFacing . UP , p _ 77659 _ 4 _ ) . isCanceled ( ) ) <nl> + { <nl> + blocksnapshot . restore ( true , false ) ; <nl> + return new ActionResult < ItemStack > ( EnumActionResult . FAIL , p _ 77659 _ 1 _ ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 290cf88 . . 6350107 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 795 , 11 + 795 , 11 @ @ public class ForgeHooks <nl> } <nl> if ( blockSnapshots . size ( ) > 1 ) <nl> { <nl> - placeEvent = ForgeEventFactory . onPlayerMultiBlockPlace ( player , blockSnapshots , side ) ; <nl> + placeEvent = ForgeEventFactory . onPlayerMultiBlockPlace ( player , blockSnapshots , side , hand ) ; <nl> } <nl> else if ( blockSnapshots . size ( ) = = 1 ) <nl> { <nl> - placeEvent = ForgeEventFactory . onPlayerBlockPlace ( player , blockSnapshots . get ( 0 ) , side ) ; <nl> + placeEvent = ForgeEventFactory . onPlayerBlockPlace ( player , blockSnapshots . get ( 0 ) , side , hand ) ; <nl> } <nl> <nl> if ( placeEvent ! = null & & ( placeEvent . isCanceled ( ) ) ) <nl> diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> index 8f8043c . . 5aa9ee0 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 109 , 22 + 109 , 42 @ @ import net . minecraftforge . fml . common . ObfuscationReflectionHelper ; <nl> import net . minecraftforge . fml . common . eventhandler . Event ; <nl> import net . minecraftforge . fml . common . eventhandler . Event . Result ; <nl> <nl> + import javax . annotation . Nullable ; <nl> + <nl> public class ForgeEventFactory <nl> { <nl> <nl> + / * * <nl> + * @ deprecated Use { @ link # onPlayerMultiBlockPlace ( EntityPlayer , List , EnumFacing , EnumHand ) } instead . <nl> + * / <nl> + @ Deprecated <nl> public static MultiPlaceEvent onPlayerMultiBlockPlace ( EntityPlayer player , List < BlockSnapshot > blockSnapshots , EnumFacing direction ) <nl> { <nl> + return onPlayerMultiBlockPlace ( player , blockSnapshots , direction , null ) ; <nl> + } <nl> + <nl> + public static MultiPlaceEvent onPlayerMultiBlockPlace ( EntityPlayer player , List < BlockSnapshot > blockSnapshots , EnumFacing direction , @ Nullable EnumHand hand ) <nl> + { <nl> BlockSnapshot snap = blockSnapshots . get ( 0 ) ; <nl> IBlockState placedAgainst = snap . getWorld ( ) . getBlockState ( snap . getPos ( ) . offset ( direction . getOpposite ( ) ) ) ; <nl> - MultiPlaceEvent event = new MultiPlaceEvent ( blockSnapshots , placedAgainst , player ) ; <nl> + MultiPlaceEvent event = new MultiPlaceEvent ( blockSnapshots , placedAgainst , player , hand ) ; <nl> MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> return event ; <nl> } <nl> <nl> + / * * <nl> + * @ deprecated Use { @ link # onPlayerBlockPlace ( EntityPlayer , BlockSnapshot , EnumFacing , EnumHand ) } instead . <nl> + * / <nl> + @ Deprecated <nl> public static PlaceEvent onPlayerBlockPlace ( EntityPlayer player , BlockSnapshot blockSnapshot , EnumFacing direction ) <nl> { <nl> + return onPlayerBlockPlace ( player , blockSnapshot , direction , null ) ; <nl> + } <nl> + <nl> + public static PlaceEvent onPlayerBlockPlace ( EntityPlayer player , BlockSnapshot blockSnapshot , EnumFacing direction , @ Nullable EnumHand hand ) <nl> + { <nl> IBlockState placedAgainst = blockSnapshot . getWorld ( ) . getBlockState ( blockSnapshot . getPos ( ) . offset ( direction . getOpposite ( ) ) ) ; <nl> - PlaceEvent event = new PlaceEvent ( blockSnapshot , placedAgainst , player ) ; <nl> + PlaceEvent event = new PlaceEvent ( blockSnapshot , placedAgainst , player , hand ) ; <nl> MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> return event ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / event / world / BlockEvent . java b / src / main / java / net / minecraftforge / event / world / BlockEvent . java <nl> index b5a33b9 . . 6f4c769 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / world / BlockEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / world / BlockEvent . java <nl> @ @ - 27 , 6 + 27 , 7 @ @ import net . minecraft . enchantment . EnchantmentHelper ; <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . init . Enchantments ; <nl> import net . minecraft . item . ItemStack ; <nl> + import net . minecraft . util . EnumHand ; <nl> import net . minecraft . util . math . BlockPos ; <nl> import net . minecraft . util . EnumFacing ; <nl> import net . minecraft . world . World ; <nl> @ @ - 37 , 6 + 38 , 8 @ @ import net . minecraftforge . fml . common . eventhandler . Event ; <nl> <nl> import com . google . common . collect . ImmutableList ; <nl> <nl> + import javax . annotation . Nullable ; <nl> + <nl> public class BlockEvent extends Event <nl> { <nl> private static final boolean DEBUG = Boolean . parseBoolean ( System . getProperty ( " forge . debugBlockEvent " , " false " ) ) ; <nl> @ @ - 170 , 26 + 173 , 36 @ @ public class BlockEvent extends Event <nl> private final BlockSnapshot blockSnapshot ; <nl> private final IBlockState placedBlock ; <nl> private final IBlockState placedAgainst ; <nl> + private final EnumHand hand ; <nl> <nl> + @ Deprecated <nl> public PlaceEvent ( BlockSnapshot blockSnapshot , IBlockState placedAgainst , EntityPlayer player ) <nl> { <nl> + this ( blockSnapshot , placedAgainst , player , null ) ; <nl> + } <nl> + <nl> + public PlaceEvent ( BlockSnapshot blockSnapshot , IBlockState placedAgainst , EntityPlayer player , @ Nullable EnumHand hand ) { <nl> super ( blockSnapshot . getWorld ( ) , blockSnapshot . getPos ( ) , blockSnapshot . getCurrentBlock ( ) ) ; <nl> this . player = player ; <nl> - this . itemInHand = player . getHeldItemMainhand ( ) ; <nl> + this . itemInHand = player . getHeldItem ( hand ! = null ? hand : EnumHand . MAIN _ HAND ) ; <nl> this . blockSnapshot = blockSnapshot ; <nl> this . placedBlock = blockSnapshot . getCurrentBlock ( ) ; <nl> this . placedAgainst = placedAgainst ; <nl> + this . hand = hand ; <nl> if ( DEBUG ) <nl> { <nl> - System . out . printf ( " Created PlaceEvent - [ PlacedBlock : % s ] [ PlacedAgainst : % s ] [ ItemStack : % s ] [ Player : % s ] \ n " , getPlacedBlock ( ) , placedAgainst , getItemInHand ( ) , player ) ; <nl> + System . out . printf ( " Created PlaceEvent - [ PlacedBlock : % s ] [ PlacedAgainst : % s ] [ ItemStack : % s ] [ Player : % s ] [ Hand : % s ] \ n " , getPlacedBlock ( ) , placedAgainst , getItemInHand ( ) , player , hand ) ; <nl> } <nl> } <nl> <nl> public EntityPlayer getPlayer ( ) { return player ; } <nl> + @ Nullable <nl> public ItemStack getItemInHand ( ) { return itemInHand ; } <nl> public BlockSnapshot getBlockSnapshot ( ) { return blockSnapshot ; } <nl> public IBlockState getPlacedBlock ( ) { return placedBlock ; } <nl> public IBlockState getPlacedAgainst ( ) { return placedAgainst ; } <nl> + @ Nullable <nl> + public EnumHand getHand ( ) { return hand ; } <nl> } <nl> <nl> / * * <nl> @ @ - 204 , 9 + 217 , 14 @ @ public class BlockEvent extends Event <nl> { <nl> private final List < BlockSnapshot > blockSnapshots ; <nl> <nl> + @ Deprecated <nl> public MultiPlaceEvent ( List < BlockSnapshot > blockSnapshots , IBlockState placedAgainst , EntityPlayer player ) <nl> { <nl> - super ( blockSnapshots . get ( 0 ) , placedAgainst , player ) ; <nl> + this ( blockSnapshots , placedAgainst , player , null ) ; <nl> + } <nl> + <nl> + public MultiPlaceEvent ( List < BlockSnapshot > blockSnapshots , IBlockState placedAgainst , EntityPlayer player , @ Nullable EnumHand hand ) { <nl> + super ( blockSnapshots . get ( 0 ) , placedAgainst , player , hand ) ; <nl> this . blockSnapshots = ImmutableList . copyOf ( blockSnapshots ) ; <nl> if ( DEBUG ) <nl> {
NEAREST DIFF (one line): diff - - git a / common / net / minecraftforge / event / ForgeEventFactory . java b / common / net / minecraftforge / event / ForgeEventFactory . java <nl> index 716a7e0 . . 852f8b7 100644 <nl> - - - a / common / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / common / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 15 , 6 + 15 , 7 @ @ import net . minecraftforge . event . Event . Result ; <nl> import net . minecraftforge . event . entity . living . LivingPackSizeEvent ; <nl> import net . minecraftforge . event . entity . living . LivingSpawnEvent ; <nl> import net . minecraftforge . event . entity . living . LivingSpawnEvent . AllowDespawn ; <nl> + import net . minecraftforge . event . entity . player . ItemTooltipEvent ; <nl> import net . minecraftforge . event . entity . player . PlayerDestroyItemEvent ; <nl> import net . minecraftforge . event . entity . player . PlayerEvent ; <nl> import net . minecraftforge . event . entity . player . PlayerInteractEvent ; <nl> @ @ - 99 , 4 + 100 , 11 @ @ public class ForgeEventFactory <nl> MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> return event . dropChance ; <nl> } <nl> + <nl> + public static ItemTooltipEvent onItemTooltip ( ItemStack itemStack , EntityPlayer entityPlayer , List < String > toolTip , boolean showAdvancedItemTooltips ) <nl> + { <nl> + ItemTooltipEvent event = new ItemTooltipEvent ( itemStack , entityPlayer , toolTip , showAdvancedItemTooltips ) ; <nl> + MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> + return event ; <nl> + } <nl> } <nl> diff - - git a / common / net / minecraftforge / event / entity / player / ItemTooltipEvent . java b / common / net / minecraftforge / event / entity / player / ItemTooltipEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 7194aba <nl> - - - / dev / null <nl> + + + b / common / net / minecraftforge / event / entity / player / ItemTooltipEvent . java <nl> @ @ - 0 , 0 + 1 , 32 @ @ <nl> + package net . minecraftforge . event . entity . player ; <nl> + <nl> + import java . util . List ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> + import net . minecraft . item . ItemStack ; <nl> + <nl> + public class ItemTooltipEvent extends PlayerEvent <nl> + { <nl> + / * * <nl> + * Whether the advanced information on item tooltips is being shown , toggled by F3 + H . <nl> + * / <nl> + public final boolean showAdvancedItemTooltips ; <nl> + / * * <nl> + * The { @ link ItemStack } with the tooltip . <nl> + * / <nl> + public final ItemStack itemStack ; <nl> + / * * <nl> + * The { @ link ItemStack } tooltip . <nl> + * / <nl> + public final List < String > toolTip ; <nl> + <nl> + / * * <nl> + * This event is fired in { @ link ItemStack # getTooltip ( EntityPlayer , boolean ) } , which in turn is called from it ' s respective GUIContainer . <nl> + * / <nl> + public ItemTooltipEvent ( ItemStack itemStack , EntityPlayer entityPlayer , List < String > toolTip , boolean showAdvancedItemTooltips ) <nl> + { <nl> + super ( entityPlayer ) ; <nl> + this . itemStack = itemStack ; <nl> + this . toolTip = toolTip ; <nl> + this . showAdvancedItemTooltips = showAdvancedItemTooltips ; <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / patches / minecraft / net / minecraft / item / ItemStack . java . patch b / patches / minecraft / net / minecraft / item / ItemStack . java . patch <nl> index 0a0f0f6 . . 6f21cf1 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / ItemStack . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / ItemStack . java . patch <nl> @ @ - 1 , 6 + 1 , 14 @ @ <nl> - - - . . / src _ base / minecraft / net / minecraft / item / ItemStack . java <nl> + + + . . / src _ work / minecraft / net / minecraft / item / ItemStack . java <nl> - @ @ - 252 , 7 + 252 , 9 @ @ <nl> + @ @ - 29 , 6 + 29 , 7 @ @ <nl> + import net . minecraft . util . Icon ; <nl> + import net . minecraft . util . StatCollector ; <nl> + import net . minecraft . world . World ; <nl> + + import net . minecraftforge . event . ForgeEventFactory ; <nl> + <nl> + public final class ItemStack <nl> + { <nl> + @ @ - 252 , 7 + 253 , 9 @ @ <nl> * / <nl> public boolean isItemDamaged ( ) <nl> { <nl> @ @ - 11 , 7 + 19 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 260 , 6 + 262 , 10 @ @ <nl> + @ @ - 260 , 6 + 263 , 10 @ @ <nl> * / <nl> public int getItemDamageForDisplay ( ) <nl> { <nl> @ @ - 22 , 7 + 30 , 7 @ @ <nl> return this . itemDamage ; <nl> } <nl> <nl> - @ @ - 268 , 6 + 274 , 10 @ @ <nl> + @ @ - 268 , 6 + 275 , 10 @ @ <nl> * / <nl> public int getItemDamage ( ) <nl> { <nl> @ @ - 33 , 7 + 41 , 7 @ @ <nl> return this . itemDamage ; <nl> } <nl> <nl> - @ @ - 276 , 6 + 286 , 12 @ @ <nl> + @ @ - 276 , 6 + 287 , 12 @ @ <nl> * / <nl> public void setItemDamage ( int par1 ) <nl> { <nl> @ @ - 46 , 7 + 54 , 7 @ @ <nl> this . itemDamage = par1 ; <nl> <nl> if ( this . itemDamage < 0 ) <nl> - @ @ - 289 , 7 + 305 , 7 @ @ <nl> + @ @ - 289 , 7 + 306 , 7 @ @ <nl> * / <nl> public int getMaxDamage ( ) <nl> { <nl> @ @ - 55 , 7 + 63 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 327 , 8 + 343 , 8 @ @ <nl> + @ @ - 327 , 8 + 344 , 8 @ @ <nl> } <nl> } <nl> <nl> @ @ - 66 , 7 + 74 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 396 , 7 + 412 , 7 @ @ <nl> + @ @ - 396 , 7 + 413 , 7 @ @ <nl> * / <nl> public boolean canHarvestBlock ( Block par1Block ) <nl> { <nl> @ @ - 75 , 7 + 83 , 12 @ @ <nl> } <nl> <nl> public boolean func _ 111282 _ a ( EntityPlayer par1EntityPlayer , EntityLivingBase par2EntityLivingBase ) <nl> - @ @ - 737 , 10 + 753 , 16 @ @ <nl> + @ @ - 733 , 14 + 750 , 21 @ @ <nl> + { <nl> + arraylist . add ( " Durability : " + ( this . getMaxDamage ( ) - this . getItemDamageForDisplay ( ) ) + " / " + this . getMaxDamage ( ) ) ; <nl> + } <nl> + + ForgeEventFactory . onItemTooltip ( this , par1EntityPlayer , arraylist , par2 ) ; <nl> + <nl> return arraylist ; <nl> } <nl>

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / item / ItemLilyPad . java . patch b / patches / minecraft / net / minecraft / item / ItemLilyPad . java . patch 
 index 784e8a2 . . 75b8ed9 100644 
 - - - a / patches / minecraft / net / minecraft / item / ItemLilyPad . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / ItemLilyPad . java . patch 
 @ @ - 7 , 7 + 7 , 7 @ @ 
 + / / special case for handling block placement with water lilies 
 + net . minecraftforge . common . util . BlockSnapshot blocksnapshot = net . minecraftforge . common . util . BlockSnapshot . getBlockSnapshot ( p _ 77659 _ 2 _ , blockpos1 ) ; 
 + p _ 77659 _ 2 _ . func _ 175656 _ a ( blockpos1 , Blocks . field _ 150392 _ bi . func _ 176223 _ P ( ) ) ; 
 - + if ( net . minecraftforge . event . ForgeEventFactory . onPlayerBlockPlace ( p _ 77659 _ 3 _ , blocksnapshot , net . minecraft . util . EnumFacing . UP ) . isCanceled ( ) ) 
 + + if ( net . minecraftforge . event . ForgeEventFactory . onPlayerBlockPlace ( p _ 77659 _ 3 _ , blocksnapshot , net . minecraft . util . EnumFacing . UP , p _ 77659 _ 4 _ ) . isCanceled ( ) ) 
 + { 
 + blocksnapshot . restore ( true , false ) ; 
 + return new ActionResult < ItemStack > ( EnumActionResult . FAIL , p _ 77659 _ 1 _ ) ; 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 290cf88 . . 6350107 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 795 , 11 + 795 , 11 @ @ public class ForgeHooks 
 } 
 if ( blockSnapshots . size ( ) > 1 ) 
 { 
 - placeEvent = ForgeEventFactory . onPlayerMultiBlockPlace ( player , blockSnapshots , side ) ; 
 + placeEvent = ForgeEventFactory . onPlayerMultiBlockPlace ( player , blockSnapshots , side , hand ) ; 
 } 
 else if ( blockSnapshots . size ( ) = = 1 ) 
 { 
 - placeEvent = ForgeEventFactory . onPlayerBlockPlace ( player , blockSnapshots . get ( 0 ) , side ) ; 
 + placeEvent = ForgeEventFactory . onPlayerBlockPlace ( player , blockSnapshots . get ( 0 ) , side , hand ) ; 
 } 
 
 if ( placeEvent ! = null & & ( placeEvent . isCanceled ( ) ) ) 
 diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 index 8f8043c . . 5aa9ee0 100644 
 - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 109 , 22 + 109 , 42 @ @ import net . minecraftforge . fml . common . ObfuscationReflectionHelper ; 
 import net . minecraftforge . fml . common . eventhandler . Event ; 
 import net . minecraftforge . fml . common . eventhandler . Event . Result ; 
 
 + import javax . annotation . Nullable ; 
 + 
 public class ForgeEventFactory 
 { 
 
 + / * * 
 + * @ deprecated Use { @ link # onPlayerMultiBlockPlace ( EntityPlayer , List , EnumFacing , EnumHand ) } instead . 
 + * / 
 + @ Deprecated 
 public static MultiPlaceEvent onPlayerMultiBlockPlace ( EntityPlayer player , List < BlockSnapshot > blockSnapshots , EnumFacing direction ) 
 { 
 + return onPlayerMultiBlockPlace ( player , blockSnapshots , direction , null ) ; 
 + } 
 + 
 + public static MultiPlaceEvent onPlayerMultiBlockPlace ( EntityPlayer player , List < BlockSnapshot > blockSnapshots , EnumFacing direction , @ Nullable EnumHand hand ) 
 + { 
 BlockSnapshot snap = blockSnapshots . get ( 0 ) ; 
 IBlockState placedAgainst = snap . getWorld ( ) . getBlockState ( snap . getPos ( ) . offset ( direction . getOpposite ( ) ) ) ; 
 - MultiPlaceEvent event = new MultiPlaceEvent ( blockSnapshots , placedAgainst , player ) ; 
 + MultiPlaceEvent event = new MultiPlaceEvent ( blockSnapshots , placedAgainst , player , hand ) ; 
 MinecraftForge . EVENT _ BUS . post ( event ) ; 
 return event ; 
 } 
 
 + / * * 
 + * @ deprecated Use { @ link # onPlayerBlockPlace ( EntityPlayer , BlockSnapshot , EnumFacing , EnumHand ) } instead . 
 + * / 
 + @ Deprecated 
 public static PlaceEvent onPlayerBlockPlace ( EntityPlayer player , BlockSnapshot blockSnapshot , EnumFacing direction ) 
 { 
 + return onPlayerBlockPlace ( player , blockSnapshot , direction , null ) ; 
 + } 
 + 
 + public static PlaceEvent onPlayerBlockPlace ( EntityPlayer player , BlockSnapshot blockSnapshot , EnumFacing direction , @ Nullable EnumHand hand ) 
 + { 
 IBlockState placedAgainst = blockSnapshot . getWorld ( ) . getBlockState ( blockSnapshot . getPos ( ) . offset ( direction . getOpposite ( ) ) ) ; 
 - PlaceEvent event = new PlaceEvent ( blockSnapshot , placedAgainst , player ) ; 
 + PlaceEvent event = new PlaceEvent ( blockSnapshot , placedAgainst , player , hand ) ; 
 MinecraftForge . EVENT _ BUS . post ( event ) ; 
 return event ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / event / world / BlockEvent . java b / src / main / java / net / minecraftforge / event / world / BlockEvent . java 
 index b5a33b9 . . 6f4c769 100644 
 - - - a / src / main / java / net / minecraftforge / event / world / BlockEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / world / BlockEvent . java 
 @ @ - 27 , 6 + 27 , 7 @ @ import net . minecraft . enchantment . EnchantmentHelper ; 
 import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . init . Enchantments ; 
 import net . minecraft . item . ItemStack ; 
 + import net . minecraft . util . EnumHand ; 
 import net . minecraft . util . math . BlockPos ; 
 import net . minecraft . util . EnumFacing ; 
 import net . minecraft . world . World ; 
 @ @ - 37 , 6 + 38 , 8 @ @ import net . minecraftforge . fml . common . eventhandler . Event ; 
 
 import com . google . common . collect . ImmutableList ; 
 
 + import javax . annotation . Nullable ; 
 + 
 public class BlockEvent extends Event 
 { 
 private static final boolean DEBUG = Boolean . parseBoolean ( System . getProperty ( " forge . debugBlockEvent " , " false " ) ) ; 
 @ @ - 170 , 26 + 173 , 36 @ @ public class BlockEvent extends Event 
 private final BlockSnapshot blockSnapshot ; 
 private final IBlockState placedBlock ; 
 private final IBlockState placedAgainst ; 
 + private final EnumHand hand ; 
 
 + @ Deprecated 
 public PlaceEvent ( BlockSnapshot blockSnapshot , IBlockState placedAgainst , EntityPlayer player ) 
 { 
 + this ( blockSnapshot , placedAgainst , player , null ) ; 
 + } 
 + 
 + public PlaceEvent ( BlockSnapshot blockSnapshot , IBlockState placedAgainst , EntityPlayer player , @ Nullable EnumHand hand ) { 
 super ( blockSnapshot . getWorld ( ) , blockSnapshot . getPos ( ) , blockSnapshot . getCurrentBlock ( ) ) ; 
 this . player = player ; 
 - this . itemInHand = player . getHeldItemMainhand ( ) ; 
 + this . itemInHand = player . getHeldItem ( hand ! = null ? hand : EnumHand . MAIN _ HAND ) ; 
 this . blockSnapshot = blockSnapshot ; 
 this . placedBlock = blockSnapshot . getCurrentBlock ( ) ; 
 this . placedAgainst = placedAgainst ; 
 + this . hand = hand ; 
 if ( DEBUG ) 
 { 
 - System . out . printf ( " Created PlaceEvent - [ PlacedBlock : % s ] [ PlacedAgainst : % s ] [ ItemStack : % s ] [ Player : % s ] \ n " , getPlacedBlock ( ) , placedAgainst , getItemInHand ( ) , player ) ; 
 + System . out . printf ( " Created PlaceEvent - [ PlacedBlock : % s ] [ PlacedAgainst : % s ] [ ItemStack : % s ] [ Player : % s ] [ Hand : % s ] \ n " , getPlacedBlock ( ) , placedAgainst , getItemInHand ( ) , player , hand ) ; 
 } 
 } 
 
 public EntityPlayer getPlayer ( ) { return player ; } 
 + @ Nullable 
 public ItemStack getItemInHand ( ) { return itemInHand ; } 
 public BlockSnapshot getBlockSnapshot ( ) { return blockSnapshot ; } 
 public IBlockState getPlacedBlock ( ) { return placedBlock ; } 
 public IBlockState getPlacedAgainst ( ) { return placedAgainst ; } 
 + @ Nullable 
 + public EnumHand getHand ( ) { return hand ; } 
 } 
 
 / * * 
 @ @ - 204 , 9 + 217 , 14 @ @ public class BlockEvent extends Event 
 { 
 private final List < BlockSnapshot > blockSnapshots ; 
 
 + @ Deprecated 
 public MultiPlaceEvent ( List < BlockSnapshot > blockSnapshots , IBlockState placedAgainst , EntityPlayer player ) 
 { 
 - super ( blockSnapshots . get ( 0 ) , placedAgainst , player ) ; 
 + this ( blockSnapshots , placedAgainst , player , null ) ; 
 + } 
 + 
 + public MultiPlaceEvent ( List < BlockSnapshot > blockSnapshots , IBlockState placedAgainst , EntityPlayer player , @ Nullable EnumHand hand ) { 
 + super ( blockSnapshots . get ( 0 ) , placedAgainst , player , hand ) ; 
 this . blockSnapshots = ImmutableList . copyOf ( blockSnapshots ) ; 
 if ( DEBUG ) 
 {

NEAREST DIFF:
diff - - git a / common / net / minecraftforge / event / ForgeEventFactory . java b / common / net / minecraftforge / event / ForgeEventFactory . java 
 index 716a7e0 . . 852f8b7 100644 
 - - - a / common / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / common / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 15 , 6 + 15 , 7 @ @ import net . minecraftforge . event . Event . Result ; 
 import net . minecraftforge . event . entity . living . LivingPackSizeEvent ; 
 import net . minecraftforge . event . entity . living . LivingSpawnEvent ; 
 import net . minecraftforge . event . entity . living . LivingSpawnEvent . AllowDespawn ; 
 + import net . minecraftforge . event . entity . player . ItemTooltipEvent ; 
 import net . minecraftforge . event . entity . player . PlayerDestroyItemEvent ; 
 import net . minecraftforge . event . entity . player . PlayerEvent ; 
 import net . minecraftforge . event . entity . player . PlayerInteractEvent ; 
 @ @ - 99 , 4 + 100 , 11 @ @ public class ForgeEventFactory 
 MinecraftForge . EVENT _ BUS . post ( event ) ; 
 return event . dropChance ; 
 } 
 + 
 + public static ItemTooltipEvent onItemTooltip ( ItemStack itemStack , EntityPlayer entityPlayer , List < String > toolTip , boolean showAdvancedItemTooltips ) 
 + { 
 + ItemTooltipEvent event = new ItemTooltipEvent ( itemStack , entityPlayer , toolTip , showAdvancedItemTooltips ) ; 
 + MinecraftForge . EVENT _ BUS . post ( event ) ; 
 + return event ; 
 + } 
 } 
 diff - - git a / common / net / minecraftforge / event / entity / player / ItemTooltipEvent . java b / common / net / minecraftforge / event / entity / player / ItemTooltipEvent . java 
 new file mode 100644 
 index 0000000 . . 7194aba 
 - - - / dev / null 
 + + + b / common / net / minecraftforge / event / entity / player / ItemTooltipEvent . java 
 @ @ - 0 , 0 + 1 , 32 @ @ 
 + package net . minecraftforge . event . entity . player ; 
 + 
 + import java . util . List ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 + import net . minecraft . item . ItemStack ; 
 + 
 + public class ItemTooltipEvent extends PlayerEvent 
 + { 
 + / * * 
 + * Whether the advanced information on item tooltips is being shown , toggled by F3 + H . 
 + * / 
 + public final boolean showAdvancedItemTooltips ; 
 + / * * 
 + * The { @ link ItemStack } with the tooltip . 
 + * / 
 + public final ItemStack itemStack ; 
 + / * * 
 + * The { @ link ItemStack } tooltip . 
 + * / 
 + public final List < String > toolTip ; 
 + 
 + / * * 
 + * This event is fired in { @ link ItemStack # getTooltip ( EntityPlayer , boolean ) } , which in turn is called from it ' s respective GUIContainer . 
 + * / 
 + public ItemTooltipEvent ( ItemStack itemStack , EntityPlayer entityPlayer , List < String > toolTip , boolean showAdvancedItemTooltips ) 
 + { 
 + super ( entityPlayer ) ; 
 + this . itemStack = itemStack ; 
 + this . toolTip = toolTip ; 
 + this . showAdvancedItemTooltips = showAdvancedItemTooltips ; 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / patches / minecraft / net / minecraft / item / ItemStack . java . patch b / patches / minecraft / net / minecraft / item / ItemStack . java . patch 
 index 0a0f0f6 . . 6f21cf1 100644 
 - - - a / patches / minecraft / net / minecraft / item / ItemStack . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / ItemStack . java . patch 
 @ @ - 1 , 6 + 1 , 14 @ @ 
 - - - . . / src _ base / minecraft / net / minecraft / item / ItemStack . java 
 + + + . . / src _ work / minecraft / net / minecraft / item / ItemStack . java 
 - @ @ - 252 , 7 + 252 , 9 @ @ 
 + @ @ - 29 , 6 + 29 , 7 @ @ 
 + import net . minecraft . util . Icon ; 
 + import net . minecraft . util . StatCollector ; 
 + import net . minecraft . world . World ; 
 + + import net . minecraftforge . event . ForgeEventFactory ; 
 + 
 + public final class ItemStack 
 + { 
 + @ @ - 252 , 7 + 253 , 9 @ @ 
 * / 
 public boolean isItemDamaged ( ) 
 { 
 @ @ - 11 , 7 + 19 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 260 , 6 + 262 , 10 @ @ 
 + @ @ - 260 , 6 + 263 , 10 @ @ 
 * / 
 public int getItemDamageForDisplay ( ) 
 { 
 @ @ - 22 , 7 + 30 , 7 @ @ 
 return this . itemDamage ; 
 } 
 
 - @ @ - 268 , 6 + 274 , 10 @ @ 
 + @ @ - 268 , 6 + 275 , 10 @ @ 
 * / 
 public int getItemDamage ( ) 
 { 
 @ @ - 33 , 7 + 41 , 7 @ @ 
 return this . itemDamage ; 
 } 
 
 - @ @ - 276 , 6 + 286 , 12 @ @ 
 + @ @ - 276 , 6 + 287 , 12 @ @ 
 * / 
 public void setItemDamage ( int par1 ) 
 { 
 @ @ - 46 , 7 + 54 , 7 @ @ 
 this . itemDamage = par1 ; 
 
 if ( this . itemDamage < 0 ) 
 - @ @ - 289 , 7 + 305 , 7 @ @ 
 + @ @ - 289 , 7 + 306 , 7 @ @ 
 * / 
 public int getMaxDamage ( ) 
 { 
 @ @ - 55 , 7 + 63 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 327 , 8 + 343 , 8 @ @ 
 + @ @ - 327 , 8 + 344 , 8 @ @ 
 } 
 } 
 
 @ @ - 66 , 7 + 74 , 7 @ @ 
 } 
 } 
 
 - @ @ - 396 , 7 + 412 , 7 @ @ 
 + @ @ - 396 , 7 + 413 , 7 @ @ 
 * / 
 public boolean canHarvestBlock ( Block par1Block ) 
 { 
 @ @ - 75 , 7 + 83 , 12 @ @ 
 } 
 
 public boolean func _ 111282 _ a ( EntityPlayer par1EntityPlayer , EntityLivingBase par2EntityLivingBase ) 
 - @ @ - 737 , 10 + 753 , 16 @ @ 
 + @ @ - 733 , 14 + 750 , 21 @ @ 
 + { 
 + arraylist . add ( " Durability : " + ( this . getMaxDamage ( ) - this . getItemDamageForDisplay ( ) ) + " / " + this . getMaxDamage ( ) ) ; 
 + } 
 + + ForgeEventFactory . onItemTooltip ( this , par1EntityPlayer , arraylist , par2 ) ; 
 + 
 return arraylist ; 
 } 

