BLEU SCORE: 0.016932492841722675

TEST MSG: [ 1 . 11 . 2 ] Added support for Village capabilities
GENERATED MSG: Update forge

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / village / Village . java . patch b / patches / minecraft / net / minecraft / village / Village . java . patch <nl> index 92422fc . . 38af139 100644 <nl> - - - a / patches / minecraft / net / minecraft / village / Village . java . patch <nl> + + + b / patches / minecraft / net / minecraft / village / Village . java . patch <nl> @ @ - 1 , 6 + 1 , 15 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / village / Village . java <nl> + + + . . / src - work / minecraft / net / minecraft / village / Village . java <nl> - @ @ - 37 , 7 + 37 , 7 @ @ <nl> + @ @ - 26 , 7 + 26 , 7 @ @ <nl> + import net . minecraft . util . math . Vec3d ; <nl> + import net . minecraft . world . World ; <nl> + <nl> + - public class Village <nl> + + public class Village implements net . minecraftforge . common . capabilities . ICapabilitySerializable < NBTTagCompound > <nl> + { <nl> + private World field _ 75586 _ a ; <nl> + private final List < VillageDoorInfo > field _ 75584 _ b = Lists . < VillageDoorInfo > newArrayList ( ) ; <nl> + @ @ - 37 , 17 + 37 , 19 @ @ <nl> private int field _ 75581 _ g ; <nl> private int field _ 75588 _ h ; <nl> private int field _ 82694 _ i ; <nl> @ @ - 9 , 7 + 18 , 19 @ @ <nl> private final List < Village . VillageAggressor > field _ 75589 _ i = Lists . < Village . VillageAggressor > newArrayList ( ) ; <nl> private int field _ 75587 _ j ; <nl> <nl> - @ @ - 310 , 11 + 310 , 11 @ @ <nl> + public Village ( ) <nl> + { <nl> + + this . capabilities = net . minecraftforge . event . ForgeEventFactory . gatherCapabilities ( this ) ; <nl> + } <nl> + <nl> + public Village ( World p _ i1675 _ 1 _ ) <nl> + { <nl> + this . field _ 75586 _ a = p _ i1675 _ 1 _ ; <nl> + + this . capabilities = net . minecraftforge . event . ForgeEventFactory . gatherCapabilities ( this ) ; <nl> + } <nl> + <nl> + public void func _ 82691 _ a ( World p _ 82691 _ 1 _ ) <nl> + @ @ - 310 , 11 + 312 , 11 @ @ <nl> double d0 = Double . MAX _ VALUE ; <nl> EntityPlayer entityplayer = null ; <nl> <nl> @ @ - 24 , 7 + 45 , 7 @ @ <nl> <nl> if ( entityplayer1 ! = null ) <nl> { <nl> - @ @ - 407 , 25 + 407 , 51 @ @ <nl> + @ @ - 407 , 25 + 409 , 51 @ @ <nl> } <nl> } <nl> <nl> @ @ - 78 , 7 + 99 , 7 @ @ <nl> public void func _ 82690 _ a ( NBTTagCompound p _ 82690 _ 1 _ ) <nl> { <nl> this . field _ 75588 _ h = p _ 82690 _ 1 _ . func _ 74762 _ e ( " PopSize " ) ; <nl> - @ @ - 451 , 19 + 477 , 14 @ @ <nl> + @ @ - 451 , 21 + 479 , 17 @ @ <nl> { <nl> NBTTagCompound nbttagcompound1 = nbttaglist1 . func _ 150305 _ b ( j ) ; <nl> <nl> @ @ - 101 , 8 + 122 , 11 @ @ <nl> + this . field _ 82693 _ j . put ( findUUID ( nbttagcompound1 . func _ 74779 _ i ( " Name " ) ) , Integer . valueOf ( nbttagcompound1 . func _ 74762 _ e ( " S " ) ) ) ; <nl> } <nl> } <nl> + + if ( this . capabilities ! = null & & p _ 82690 _ 1 _ . func _ 74764 _ b ( " ForgeCaps " ) ) this . capabilities . deserializeNBT ( p _ 82690 _ 1 _ . func _ 74775 _ l ( " ForgeCaps " ) ) ; <nl> } <nl> - @ @ - 499 , 18 + 520 , 14 @ @ <nl> + <nl> + public void func _ 82689 _ b ( NBTTagCompound p _ 82689 _ 1 _ ) <nl> + @ @ - 499 , 18 + 523 , 14 @ @ <nl> p _ 82689 _ 1 _ . func _ 74782 _ a ( " Doors " , nbttaglist ) ; <nl> NBTTagList nbttaglist1 = new NBTTagList ( ) ; <nl> <nl> @ @ - 123 , 7 + 147 , 15 @ @ <nl> nbttagcompound1 . func _ 74768 _ a ( " S " , ( ( Integer ) this . field _ 82693 _ j . get ( s ) ) . intValue ( ) ) ; <nl> nbttaglist1 . func _ 74742 _ a ( nbttagcompound1 ) ; <nl> } <nl> - @ @ - 536 , 9 + 553 , 9 @ @ <nl> + @ @ - 522 , 6 + 542 , 7 @ @ <nl> + } <nl> + <nl> + p _ 82689 _ 1 _ . func _ 74782 _ a ( " Players " , nbttaglist1 ) ; <nl> + + if ( this . capabilities ! = null ) p _ 82689 _ 1 _ . func _ 74782 _ a ( " ForgeCaps " , this . capabilities . serializeNBT ( ) ) ; <nl> + } <nl> + <nl> + public void func _ 82692 _ h ( ) <nl> + @ @ - 536 , 9 + 557 , 9 @ @ <nl> <nl> public void func _ 82683 _ b ( int p _ 82683 _ 1 _ ) <nl> { <nl> @ @ - 135 , 3 + 167 , 34 @ @ <nl> } <nl> } <nl> <nl> + @ @ - 553 , 4 + 574 , 30 @ @ <nl> + this . field _ 75590 _ b = p _ i1674 _ 3 _ ; <nl> + } <nl> + } <nl> + + <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + + private net . minecraftforge . common . capabilities . CapabilityDispatcher capabilities ; <nl> + + public boolean hasCapability ( net . minecraftforge . common . capabilities . Capability < ? > capability , @ Nullable net . minecraft . util . EnumFacing facing ) <nl> + + { <nl> + + return capabilities = = null ? false : capabilities . hasCapability ( capability , facing ) ; <nl> + + } <nl> + + <nl> + + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable net . minecraft . util . EnumFacing facing ) <nl> + + { <nl> + + return capabilities = = null ? null : capabilities . getCapability ( capability , facing ) ; <nl> + + } <nl> + + <nl> + + public void deserializeNBT ( NBTTagCompound nbt ) <nl> + + { <nl> + + this . func _ 82690 _ a ( nbt ) ; ; <nl> + + } <nl> + + <nl> + + public NBTTagCompound serializeNBT ( ) <nl> + + { <nl> + + NBTTagCompound ret = new NBTTagCompound ( ) ; <nl> + + this . func _ 82689 _ b ( ret ) ; <nl> + + return ret ; <nl> + + } <nl> + + <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> index ce244b5 . . aad6244 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 55 , 6 + 55 , 7 @ @ import net . minecraft . util . math . BlockPos ; <nl> import net . minecraft . util . math . RayTraceResult ; <nl> import net . minecraft . util . math . Vec3d ; <nl> import net . minecraft . util . text . ITextComponent ; <nl> + import net . minecraft . village . Village ; <nl> import net . minecraft . world . Explosion ; <nl> import net . minecraft . world . World ; <nl> import net . minecraft . world . WorldServer ; <nl> @ @ - 587 , 6 + 588 , 12 @ @ public class ForgeEventFactory <nl> { <nl> return gatherCapabilities ( new AttachCapabilitiesEvent . Entity ( entity ) , null ) ; <nl> } <nl> + <nl> + @ Nullable <nl> + public static CapabilityDispatcher gatherCapabilities ( Village village ) <nl> + { <nl> + return gatherCapabilities ( new AttachCapabilitiesEvent < Village > ( Village . class , village ) , null ) ; <nl> + } <nl> <nl> @ Nullable <nl> public static CapabilityDispatcher gatherCapabilities ( Item item , ItemStack stack , ICapabilityProvider parent ) <nl> diff - - git a / src / test / java / net / minecraftforge / test / TestCapabilityMod . java b / src / test / java / net / minecraftforge / test / TestCapabilityMod . java <nl> index 9b1b868 . . 8850bb2 100644 <nl> - - - a / src / test / java / net / minecraftforge / test / TestCapabilityMod . java <nl> + + + b / src / test / java / net / minecraftforge / test / TestCapabilityMod . java <nl> @ @ - 1 , 5 + 1 , 9 @ @ <nl> package net . minecraftforge . test ; <nl> <nl> + import java . util . List ; <nl> + import javax . annotation . Nonnull ; <nl> + import javax . annotation . Nullable ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . init . Blocks ; <nl> import net . minecraft . init . Items ; <nl> import net . minecraft . item . Item ; <nl> @ @ - 7 , 10 + 11 , 12 @ @ import net . minecraft . item . ItemStack ; <nl> import net . minecraft . nbt . NBTBase ; <nl> import net . minecraft . nbt . NBTTagCompound ; <nl> import net . minecraft . tileentity . TileEntity ; <nl> - import net . minecraft . util . text . TextComponentString ; <nl> - import net . minecraft . util . text . TextFormatting ; <nl> import net . minecraft . util . EnumFacing ; <nl> import net . minecraft . util . ResourceLocation ; <nl> + import net . minecraft . util . math . Vec3d ; <nl> + import net . minecraft . util . text . TextComponentString ; <nl> + import net . minecraft . util . text . TextFormatting ; <nl> + import net . minecraft . village . Village ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . common . capabilities . Capability ; <nl> import net . minecraftforge . common . capabilities . Capability . IStorage ; <nl> @ @ - 22 , 9 + 28 , 7 @ @ import net . minecraftforge . event . entity . player . PlayerInteractEvent ; <nl> import net . minecraftforge . fml . common . Mod ; <nl> import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> - <nl> - import javax . annotation . Nonnull ; <nl> - import javax . annotation . Nullable ; <nl> + import net . minecraftforge . fml . common . gameevent . TickEvent ; <nl> <nl> @ Mod ( modid = " forge . testcapmod " , name = " Forge TestCapMod " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> public class TestCapabilityMod <nl> @ @ - 186 , 7 + 190 , 54 @ @ public class TestCapabilityMod <nl> if ( ! ( event . getObject ( ) instanceof TileEntity ) ) <nl> throw new IllegalArgumentException ( " Generic event handler failed ! Expected Tile Entity got " + event . getObject ( ) ) ; <nl> } <nl> + <nl> + @ SubscribeEvent <nl> + public void attachVillage ( AttachCapabilitiesEvent < Village > event ) <nl> + { <nl> + System . out . println ( event . getObject ( ) ) ; <nl> + event . addCapability ( new ResourceLocation ( " forge . testcapmod : dummy _ cap " ) , new Provider ( event . getObject ( ) ) ) ; <nl> + } <nl> <nl> + / / Detects if a player has entered the radius of a village <nl> + @ SubscribeEvent <nl> + public void tick ( TickEvent . WorldTickEvent event ) <nl> + { <nl> + if ( ! event . world . isRemote ) <nl> + { <nl> + List < EntityPlayer > players = event . world . playerEntities ; <nl> + int i = 0 ; <nl> + for ( Village village : event . world . villageCollectionObj . getVillageList ( ) ) <nl> + { <nl> + if ( village . hasCapability ( TEST _ CAP , null ) ) <nl> + { <nl> + boolean playerInRadius = false ; <nl> + for ( EntityPlayer player : players ) <nl> + { <nl> + <nl> + if ( new Vec3d ( player . posX , 0 , player . posZ ) . squareDistanceTo ( new Vec3d ( village . getCenter ( ) . getX ( ) , 0 , village . getCenter ( ) . getZ ( ) ) ) < = village . getVillageRadius ( ) * village . getVillageRadius ( ) ) <nl> + { <nl> + playerInRadius = playerInRadius | | true ; <nl> + } <nl> + } <nl> + / / If the test cap is true but no players are in radius <nl> + if ( village . getCapability ( TEST _ CAP , null ) . getVal ( ) & & ! playerInRadius ) <nl> + { <nl> + village . getCapability ( TEST _ CAP , null ) . toggleVal ( ) ; <nl> + for ( EntityPlayer player : players ) <nl> + player . sendMessage ( new TextComponentString ( TextFormatting . RED + " All Players Have Exited Village " + i ) ) ; <nl> + } <nl> + / / If the test cap is false but there are players in radius <nl> + else if ( ! village . getCapability ( TEST _ CAP , null ) . getVal ( ) & & playerInRadius ) <nl> + { <nl> + village . getCapability ( TEST _ CAP , null ) . toggleVal ( ) ; <nl> + for ( EntityPlayer player : players ) <nl> + player . sendMessage ( new TextComponentString ( TextFormatting . GREEN + " Some Players Have Entered Village " + i ) ) ; <nl> + } <nl> + } <nl> + i + + ; <nl> + } <nl> + } <nl> + } <nl> / / Capabilities SHOULD be interfaces , NOT concrete classes , this allows for <nl> / / the most flexibility for the implementors . <nl> public static interface IExampleCapability
NEAREST DIFF (one line): diff - - git a / fml b / fml <nl> index a6dc03a . . 4d46abf 160000 <nl> - - - a / fml <nl> + + + b / fml <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c <nl> + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e <nl> diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> index 0ef9b48 . . 63a9622 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> @ @ - 21 , 10 + 21 , 10 @ @ <nl> this . disconnected = true ; <nl> this . mc . loadWorld ( ( WorldClient ) null ) ; <nl> <nl> - @ @ - 866 , 7 + 871 , 11 @ @ <nl> - public void handleChat ( Packet3Chat par1Packet3Chat ) <nl> - { <nl> - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; <nl> + @ @ - 870 , 7 + 875 , 11 @ @ <nl> + { <nl> + return ; <nl> + } <nl> - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; <nl> + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; <nl> + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) <nl> @ @ - 34 , 7 + 34 , 7 @ @ <nl> } <nl> <nl> public void handleAnimation ( Packet18Animation par1Packet18Animation ) <nl> - @ @ - 1354 , 6 + 1363 , 10 @ @ <nl> + @ @ - 1358 , 6 + 1367 , 10 @ @ <nl> { <nl> tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> index 6d2c8e1 . . a186e0f 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> @ @ - 13 , 11 + 13 , 16 @ @ <nl> public class EntityPlayerMP extends EntityPlayer implements ICrafting <nl> { <nl> private String translator = " en _ US " ; <nl> - @ @ - 165 , 18 + 171 , 10 @ @ <nl> + @ @ - 164 , 19 + 170 , 14 @ @ <nl> + super ( par2World , par3Str ) ; <nl> par4ItemInWorldManager . thisPlayerMP = this ; <nl> this . theItemInWorldManager = par4ItemInWorldManager ; <nl> - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; <nl> + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . <nl> + + this . renderDistance = 0 ; <nl> + + else <nl> + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; <nl> int i = chunkcoordinates . posX ; <nl> int j = chunkcoordinates . posZ ; <nl> @ @ - 33 , 7 + 38 , 7 @ @ <nl> <nl> this . mcServer = par1MinecraftServer ; <nl> this . stepHeight = 0 . 0F ; <nl> - @ @ - 240 , 11 + 238 , 6 @ @ <nl> + @ @ - 240 , 11 + 241 , 6 @ @ <nl> this . yOffset = 0 . 0F ; <nl> } <nl> <nl> @ @ - 45 , 7 + 50 , 7 @ @ <nl> / * * <nl> * Called to update the entity ' s position / logic . <nl> * / <nl> - @ @ - 254 , 7 + 247 , 7 @ @ <nl> + @ @ - 254 , 7 + 250 , 7 @ @ <nl> - - this . initialInvulnerability ; <nl> this . openContainer . detectAndSendChanges ( ) ; <nl> <nl> @ @ - 54 , 7 + 59 , 7 @ @ <nl> { <nl> this . closeScreen ( ) ; <nl> this . openContainer = this . inventoryContainer ; <nl> - @ @ - 290 , 7 + 283 , 10 @ @ <nl> + @ @ - 290 , 7 + 286 , 10 @ @ <nl> if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) <nl> { <nl> arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; <nl> @ @ - 66 , 7 + 71 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 311 , 6 + 307 , 7 @ @ <nl> + @ @ - 311 , 6 + 310 , 7 @ @ <nl> { <nl> Chunk chunk = ( Chunk ) iterator2 . next ( ) ; <nl> this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; <nl> @ @ - 74 , 7 + 79 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 383 , 11 + 380 , 25 @ @ <nl> + @ @ - 383 , 11 + 383 , 25 @ @ <nl> * / <nl> public void onDeath ( DamageSource par1DamageSource ) <nl> { <nl> @ @ - 100 , 7 + 105 , 7 @ @ <nl> } <nl> <nl> Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; <nl> - @ @ - 1054 , 4 + 1065 , 16 @ @ <nl> + @ @ - 1054 , 4 + 1068 , 16 @ @ <nl> { <nl> this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> index d28a430 . . 7e6a155 100644 <nl> - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> @ @ - 127 , 7 + 127 , 7 @ @ <nl> { <nl> this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; <nl> } <nl> - @ @ - 695 , 6 + 733 , 8 @ @ <nl> + @ @ - 698 , 6 + 736 , 8 @ @ <nl> } <nl> <nl> ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; <nl> @ @ - 136 , 7 + 136 , 7 @ @ <nl> this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; <nl> } <nl> <nl> - @ @ - 849 , 7 + 889 , 7 @ @ <nl> + @ @ - 852 , 7 + 892 , 7 @ @ <nl> return ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> index 7d63255 . . 7413a7d 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> @ @ - 1 , 11 + 1 , 15 @ @ <nl> package net . minecraftforge . common ; <nl> <nl> import cpw . mods . fml . common . FMLCommonHandler ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . entity . player . EntityPlayerMP ; <nl> import net . minecraft . item . ItemInWorldManager ; <nl> + import net . minecraft . network . packet . Packet204ClientInfo ; <nl> import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . stats . StatBase ; <nl> import net . minecraft . util . ChatMessageComponent ; <nl> import net . minecraft . util . ChunkCoordinates ; <nl> + import net . minecraft . util . DamageSource ; <nl> import net . minecraft . world . World ; <nl> <nl> / / Preliminary , simple Fake Player class <nl> @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP <nl> <nl> @ Override <nl> public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } <nl> + @ Override <nl> + public void addStat ( StatBase par1StatBase , int par2 ) { } <nl> + @ Override <nl> + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } <nl> + @ Override <nl> + public boolean isEntityInvulnerable ( ) { return true ; } <nl> + @ Override <nl> + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } <nl> + @ Override <nl> + public void onDeath ( DamageSource source ) { return ; } <nl> + @ Override <nl> + public void onUpdate ( ) { return ; } <nl> + @ Override <nl> + public void travelToDimension ( int dim ) { return ; } <nl> + @ Override <nl> + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 43dbe83 . . 8d98241 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; <nl> import net . minecraft . item . ItemStack ; <nl> import net . minecraft . item . ItemSword ; <nl> import net . minecraft . network . NetServerHandler ; <nl> + import net . minecraft . network . packet . Packet ; <nl> import net . minecraft . network . packet . Packet53BlockChange ; <nl> import net . minecraft . tileentity . TileEntity ; <nl> import net . minecraft . util . AxisAlignedBB ; <nl> @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks <nl> TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; <nl> if ( tileentity ! = null ) <nl> { <nl> - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; <nl> + Packet pkt = tileentity . getDescriptionPacket ( ) ; <nl> + if ( pkt ! = null ) <nl> + { <nl> + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; <nl> + } <nl> } <nl> } <nl> return event ; <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> index 5031fa6 . . 16d011f 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; <nl> import java . util . Map ; <nl> <nl> import net . minecraft . block . Block ; <nl> + import net . minecraft . util . StatCollector ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . event . Event ; <nl> <nl> @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry <nl> static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; <nl> static BiMap < Block , Fluid > fluidBlocks ; <nl> <nl> - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> + public static final Fluid WATER = new Fluid ( " water " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . water . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> + <nl> + public static final Fluid LAVA = new Fluid ( " lava " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . lava . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> <nl> public static int renderIdFluid = - 1 ; <nl>

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / village / Village . java . patch b / patches / minecraft / net / minecraft / village / Village . java . patch 
 index 92422fc . . 38af139 100644 
 - - - a / patches / minecraft / net / minecraft / village / Village . java . patch 
 + + + b / patches / minecraft / net / minecraft / village / Village . java . patch 
 @ @ - 1 , 6 + 1 , 15 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / village / Village . java 
 + + + . . / src - work / minecraft / net / minecraft / village / Village . java 
 - @ @ - 37 , 7 + 37 , 7 @ @ 
 + @ @ - 26 , 7 + 26 , 7 @ @ 
 + import net . minecraft . util . math . Vec3d ; 
 + import net . minecraft . world . World ; 
 + 
 + - public class Village 
 + + public class Village implements net . minecraftforge . common . capabilities . ICapabilitySerializable < NBTTagCompound > 
 + { 
 + private World field _ 75586 _ a ; 
 + private final List < VillageDoorInfo > field _ 75584 _ b = Lists . < VillageDoorInfo > newArrayList ( ) ; 
 + @ @ - 37 , 17 + 37 , 19 @ @ 
 private int field _ 75581 _ g ; 
 private int field _ 75588 _ h ; 
 private int field _ 82694 _ i ; 
 @ @ - 9 , 7 + 18 , 19 @ @ 
 private final List < Village . VillageAggressor > field _ 75589 _ i = Lists . < Village . VillageAggressor > newArrayList ( ) ; 
 private int field _ 75587 _ j ; 
 
 - @ @ - 310 , 11 + 310 , 11 @ @ 
 + public Village ( ) 
 + { 
 + + this . capabilities = net . minecraftforge . event . ForgeEventFactory . gatherCapabilities ( this ) ; 
 + } 
 + 
 + public Village ( World p _ i1675 _ 1 _ ) 
 + { 
 + this . field _ 75586 _ a = p _ i1675 _ 1 _ ; 
 + + this . capabilities = net . minecraftforge . event . ForgeEventFactory . gatherCapabilities ( this ) ; 
 + } 
 + 
 + public void func _ 82691 _ a ( World p _ 82691 _ 1 _ ) 
 + @ @ - 310 , 11 + 312 , 11 @ @ 
 double d0 = Double . MAX _ VALUE ; 
 EntityPlayer entityplayer = null ; 
 
 @ @ - 24 , 7 + 45 , 7 @ @ 
 
 if ( entityplayer1 ! = null ) 
 { 
 - @ @ - 407 , 25 + 407 , 51 @ @ 
 + @ @ - 407 , 25 + 409 , 51 @ @ 
 } 
 } 
 
 @ @ - 78 , 7 + 99 , 7 @ @ 
 public void func _ 82690 _ a ( NBTTagCompound p _ 82690 _ 1 _ ) 
 { 
 this . field _ 75588 _ h = p _ 82690 _ 1 _ . func _ 74762 _ e ( " PopSize " ) ; 
 - @ @ - 451 , 19 + 477 , 14 @ @ 
 + @ @ - 451 , 21 + 479 , 17 @ @ 
 { 
 NBTTagCompound nbttagcompound1 = nbttaglist1 . func _ 150305 _ b ( j ) ; 
 
 @ @ - 101 , 8 + 122 , 11 @ @ 
 + this . field _ 82693 _ j . put ( findUUID ( nbttagcompound1 . func _ 74779 _ i ( " Name " ) ) , Integer . valueOf ( nbttagcompound1 . func _ 74762 _ e ( " S " ) ) ) ; 
 } 
 } 
 + + if ( this . capabilities ! = null & & p _ 82690 _ 1 _ . func _ 74764 _ b ( " ForgeCaps " ) ) this . capabilities . deserializeNBT ( p _ 82690 _ 1 _ . func _ 74775 _ l ( " ForgeCaps " ) ) ; 
 } 
 - @ @ - 499 , 18 + 520 , 14 @ @ 
 + 
 + public void func _ 82689 _ b ( NBTTagCompound p _ 82689 _ 1 _ ) 
 + @ @ - 499 , 18 + 523 , 14 @ @ 
 p _ 82689 _ 1 _ . func _ 74782 _ a ( " Doors " , nbttaglist ) ; 
 NBTTagList nbttaglist1 = new NBTTagList ( ) ; 
 
 @ @ - 123 , 7 + 147 , 15 @ @ 
 nbttagcompound1 . func _ 74768 _ a ( " S " , ( ( Integer ) this . field _ 82693 _ j . get ( s ) ) . intValue ( ) ) ; 
 nbttaglist1 . func _ 74742 _ a ( nbttagcompound1 ) ; 
 } 
 - @ @ - 536 , 9 + 553 , 9 @ @ 
 + @ @ - 522 , 6 + 542 , 7 @ @ 
 + } 
 + 
 + p _ 82689 _ 1 _ . func _ 74782 _ a ( " Players " , nbttaglist1 ) ; 
 + + if ( this . capabilities ! = null ) p _ 82689 _ 1 _ . func _ 74782 _ a ( " ForgeCaps " , this . capabilities . serializeNBT ( ) ) ; 
 + } 
 + 
 + public void func _ 82692 _ h ( ) 
 + @ @ - 536 , 9 + 557 , 9 @ @ 
 
 public void func _ 82683 _ b ( int p _ 82683 _ 1 _ ) 
 { 
 @ @ - 135 , 3 + 167 , 34 @ @ 
 } 
 } 
 
 + @ @ - 553 , 4 + 574 , 30 @ @ 
 + this . field _ 75590 _ b = p _ i1674 _ 3 _ ; 
 + } 
 + } 
 + + 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + + private net . minecraftforge . common . capabilities . CapabilityDispatcher capabilities ; 
 + + public boolean hasCapability ( net . minecraftforge . common . capabilities . Capability < ? > capability , @ Nullable net . minecraft . util . EnumFacing facing ) 
 + + { 
 + + return capabilities = = null ? false : capabilities . hasCapability ( capability , facing ) ; 
 + + } 
 + + 
 + + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable net . minecraft . util . EnumFacing facing ) 
 + + { 
 + + return capabilities = = null ? null : capabilities . getCapability ( capability , facing ) ; 
 + + } 
 + + 
 + + public void deserializeNBT ( NBTTagCompound nbt ) 
 + + { 
 + + this . func _ 82690 _ a ( nbt ) ; ; 
 + + } 
 + + 
 + + public NBTTagCompound serializeNBT ( ) 
 + + { 
 + + NBTTagCompound ret = new NBTTagCompound ( ) ; 
 + + this . func _ 82689 _ b ( ret ) ; 
 + + return ret ; 
 + + } 
 + + 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 index ce244b5 . . aad6244 100644 
 - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 55 , 6 + 55 , 7 @ @ import net . minecraft . util . math . BlockPos ; 
 import net . minecraft . util . math . RayTraceResult ; 
 import net . minecraft . util . math . Vec3d ; 
 import net . minecraft . util . text . ITextComponent ; 
 + import net . minecraft . village . Village ; 
 import net . minecraft . world . Explosion ; 
 import net . minecraft . world . World ; 
 import net . minecraft . world . WorldServer ; 
 @ @ - 587 , 6 + 588 , 12 @ @ public class ForgeEventFactory 
 { 
 return gatherCapabilities ( new AttachCapabilitiesEvent . Entity ( entity ) , null ) ; 
 } 
 + 
 + @ Nullable 
 + public static CapabilityDispatcher gatherCapabilities ( Village village ) 
 + { 
 + return gatherCapabilities ( new AttachCapabilitiesEvent < Village > ( Village . class , village ) , null ) ; 
 + } 
 
 @ Nullable 
 public static CapabilityDispatcher gatherCapabilities ( Item item , ItemStack stack , ICapabilityProvider parent ) 
 diff - - git a / src / test / java / net / minecraftforge / test / TestCapabilityMod . java b / src / test / java / net / minecraftforge / test / TestCapabilityMod . java 
 index 9b1b868 . . 8850bb2 100644 
 - - - a / src / test / java / net / minecraftforge / test / TestCapabilityMod . java 
 + + + b / src / test / java / net / minecraftforge / test / TestCapabilityMod . java 
 @ @ - 1 , 5 + 1 , 9 @ @ 
 package net . minecraftforge . test ; 
 
 + import java . util . List ; 
 + import javax . annotation . Nonnull ; 
 + import javax . annotation . Nullable ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . init . Blocks ; 
 import net . minecraft . init . Items ; 
 import net . minecraft . item . Item ; 
 @ @ - 7 , 10 + 11 , 12 @ @ import net . minecraft . item . ItemStack ; 
 import net . minecraft . nbt . NBTBase ; 
 import net . minecraft . nbt . NBTTagCompound ; 
 import net . minecraft . tileentity . TileEntity ; 
 - import net . minecraft . util . text . TextComponentString ; 
 - import net . minecraft . util . text . TextFormatting ; 
 import net . minecraft . util . EnumFacing ; 
 import net . minecraft . util . ResourceLocation ; 
 + import net . minecraft . util . math . Vec3d ; 
 + import net . minecraft . util . text . TextComponentString ; 
 + import net . minecraft . util . text . TextFormatting ; 
 + import net . minecraft . village . Village ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . common . capabilities . Capability ; 
 import net . minecraftforge . common . capabilities . Capability . IStorage ; 
 @ @ - 22 , 9 + 28 , 7 @ @ import net . minecraftforge . event . entity . player . PlayerInteractEvent ; 
 import net . minecraftforge . fml . common . Mod ; 
 import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 - 
 - import javax . annotation . Nonnull ; 
 - import javax . annotation . Nullable ; 
 + import net . minecraftforge . fml . common . gameevent . TickEvent ; 
 
 @ Mod ( modid = " forge . testcapmod " , name = " Forge TestCapMod " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 public class TestCapabilityMod 
 @ @ - 186 , 7 + 190 , 54 @ @ public class TestCapabilityMod 
 if ( ! ( event . getObject ( ) instanceof TileEntity ) ) 
 throw new IllegalArgumentException ( " Generic event handler failed ! Expected Tile Entity got " + event . getObject ( ) ) ; 
 } 
 + 
 + @ SubscribeEvent 
 + public void attachVillage ( AttachCapabilitiesEvent < Village > event ) 
 + { 
 + System . out . println ( event . getObject ( ) ) ; 
 + event . addCapability ( new ResourceLocation ( " forge . testcapmod : dummy _ cap " ) , new Provider ( event . getObject ( ) ) ) ; 
 + } 
 
 + / / Detects if a player has entered the radius of a village 
 + @ SubscribeEvent 
 + public void tick ( TickEvent . WorldTickEvent event ) 
 + { 
 + if ( ! event . world . isRemote ) 
 + { 
 + List < EntityPlayer > players = event . world . playerEntities ; 
 + int i = 0 ; 
 + for ( Village village : event . world . villageCollectionObj . getVillageList ( ) ) 
 + { 
 + if ( village . hasCapability ( TEST _ CAP , null ) ) 
 + { 
 + boolean playerInRadius = false ; 
 + for ( EntityPlayer player : players ) 
 + { 
 + 
 + if ( new Vec3d ( player . posX , 0 , player . posZ ) . squareDistanceTo ( new Vec3d ( village . getCenter ( ) . getX ( ) , 0 , village . getCenter ( ) . getZ ( ) ) ) < = village . getVillageRadius ( ) * village . getVillageRadius ( ) ) 
 + { 
 + playerInRadius = playerInRadius | | true ; 
 + } 
 + } 
 + / / If the test cap is true but no players are in radius 
 + if ( village . getCapability ( TEST _ CAP , null ) . getVal ( ) & & ! playerInRadius ) 
 + { 
 + village . getCapability ( TEST _ CAP , null ) . toggleVal ( ) ; 
 + for ( EntityPlayer player : players ) 
 + player . sendMessage ( new TextComponentString ( TextFormatting . RED + " All Players Have Exited Village " + i ) ) ; 
 + } 
 + / / If the test cap is false but there are players in radius 
 + else if ( ! village . getCapability ( TEST _ CAP , null ) . getVal ( ) & & playerInRadius ) 
 + { 
 + village . getCapability ( TEST _ CAP , null ) . toggleVal ( ) ; 
 + for ( EntityPlayer player : players ) 
 + player . sendMessage ( new TextComponentString ( TextFormatting . GREEN + " Some Players Have Entered Village " + i ) ) ; 
 + } 
 + } 
 + i + + ; 
 + } 
 + } 
 + } 
 / / Capabilities SHOULD be interfaces , NOT concrete classes , this allows for 
 / / the most flexibility for the implementors . 
 public static interface IExampleCapability

NEAREST DIFF:
diff - - git a / fml b / fml 
 index a6dc03a . . 4d46abf 160000 
 - - - a / fml 
 + + + b / fml 
 @ @ - 1 + 1 @ @ 
 - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c 
 + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e 
 diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 index 0ef9b48 . . 63a9622 100644 
 - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 @ @ - 21 , 10 + 21 , 10 @ @ 
 this . disconnected = true ; 
 this . mc . loadWorld ( ( WorldClient ) null ) ; 
 
 - @ @ - 866 , 7 + 871 , 11 @ @ 
 - public void handleChat ( Packet3Chat par1Packet3Chat ) 
 - { 
 - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; 
 + @ @ - 870 , 7 + 875 , 11 @ @ 
 + { 
 + return ; 
 + } 
 - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; 
 + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; 
 + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) 
 @ @ - 34 , 7 + 34 , 7 @ @ 
 } 
 
 public void handleAnimation ( Packet18Animation par1Packet18Animation ) 
 - @ @ - 1354 , 6 + 1363 , 10 @ @ 
 + @ @ - 1358 , 6 + 1367 , 10 @ @ 
 { 
 tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 index 6d2c8e1 . . a186e0f 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 @ @ - 13 , 11 + 13 , 16 @ @ 
 public class EntityPlayerMP extends EntityPlayer implements ICrafting 
 { 
 private String translator = " en _ US " ; 
 - @ @ - 165 , 18 + 171 , 10 @ @ 
 + @ @ - 164 , 19 + 170 , 14 @ @ 
 + super ( par2World , par3Str ) ; 
 par4ItemInWorldManager . thisPlayerMP = this ; 
 this . theItemInWorldManager = par4ItemInWorldManager ; 
 - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; 
 + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . 
 + + this . renderDistance = 0 ; 
 + + else 
 + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; 
 int i = chunkcoordinates . posX ; 
 int j = chunkcoordinates . posZ ; 
 @ @ - 33 , 7 + 38 , 7 @ @ 
 
 this . mcServer = par1MinecraftServer ; 
 this . stepHeight = 0 . 0F ; 
 - @ @ - 240 , 11 + 238 , 6 @ @ 
 + @ @ - 240 , 11 + 241 , 6 @ @ 
 this . yOffset = 0 . 0F ; 
 } 
 
 @ @ - 45 , 7 + 50 , 7 @ @ 
 / * * 
 * Called to update the entity ' s position / logic . 
 * / 
 - @ @ - 254 , 7 + 247 , 7 @ @ 
 + @ @ - 254 , 7 + 250 , 7 @ @ 
 - - this . initialInvulnerability ; 
 this . openContainer . detectAndSendChanges ( ) ; 
 
 @ @ - 54 , 7 + 59 , 7 @ @ 
 { 
 this . closeScreen ( ) ; 
 this . openContainer = this . inventoryContainer ; 
 - @ @ - 290 , 7 + 283 , 10 @ @ 
 + @ @ - 290 , 7 + 286 , 10 @ @ 
 if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) 
 { 
 arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; 
 @ @ - 66 , 7 + 71 , 7 @ @ 
 } 
 } 
 
 - @ @ - 311 , 6 + 307 , 7 @ @ 
 + @ @ - 311 , 6 + 310 , 7 @ @ 
 { 
 Chunk chunk = ( Chunk ) iterator2 . next ( ) ; 
 this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; 
 @ @ - 74 , 7 + 79 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 383 , 11 + 380 , 25 @ @ 
 + @ @ - 383 , 11 + 383 , 25 @ @ 
 * / 
 public void onDeath ( DamageSource par1DamageSource ) 
 { 
 @ @ - 100 , 7 + 105 , 7 @ @ 
 } 
 
 Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; 
 - @ @ - 1054 , 4 + 1065 , 16 @ @ 
 + @ @ - 1054 , 4 + 1068 , 16 @ @ 
 { 
 this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 index d28a430 . . 7e6a155 100644 
 - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 @ @ - 127 , 7 + 127 , 7 @ @ 
 { 
 this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; 
 } 
 - @ @ - 695 , 6 + 733 , 8 @ @ 
 + @ @ - 698 , 6 + 736 , 8 @ @ 
 } 
 
 ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; 
 @ @ - 136 , 7 + 136 , 7 @ @ 
 this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; 
 } 
 
 - @ @ - 849 , 7 + 889 , 7 @ @ 
 + @ @ - 852 , 7 + 892 , 7 @ @ 
 return ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 index 7d63255 . . 7413a7d 100644 
 - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java 
 + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 @ @ - 1 , 11 + 1 , 15 @ @ 
 package net . minecraftforge . common ; 
 
 import cpw . mods . fml . common . FMLCommonHandler ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . entity . player . EntityPlayerMP ; 
 import net . minecraft . item . ItemInWorldManager ; 
 + import net . minecraft . network . packet . Packet204ClientInfo ; 
 import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . stats . StatBase ; 
 import net . minecraft . util . ChatMessageComponent ; 
 import net . minecraft . util . ChunkCoordinates ; 
 + import net . minecraft . util . DamageSource ; 
 import net . minecraft . world . World ; 
 
 / / Preliminary , simple Fake Player class 
 @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP 
 
 @ Override 
 public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } 
 + @ Override 
 + public void addStat ( StatBase par1StatBase , int par2 ) { } 
 + @ Override 
 + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } 
 + @ Override 
 + public boolean isEntityInvulnerable ( ) { return true ; } 
 + @ Override 
 + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } 
 + @ Override 
 + public void onDeath ( DamageSource source ) { return ; } 
 + @ Override 
 + public void onUpdate ( ) { return ; } 
 + @ Override 
 + public void travelToDimension ( int dim ) { return ; } 
 + @ Override 
 + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 43dbe83 . . 8d98241 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; 
 import net . minecraft . item . ItemStack ; 
 import net . minecraft . item . ItemSword ; 
 import net . minecraft . network . NetServerHandler ; 
 + import net . minecraft . network . packet . Packet ; 
 import net . minecraft . network . packet . Packet53BlockChange ; 
 import net . minecraft . tileentity . TileEntity ; 
 import net . minecraft . util . AxisAlignedBB ; 
 @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks 
 TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; 
 if ( tileentity ! = null ) 
 { 
 - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; 
 + Packet pkt = tileentity . getDescriptionPacket ( ) ; 
 + if ( pkt ! = null ) 
 + { 
 + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; 
 + } 
 } 
 } 
 return event ; 
 diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 index 5031fa6 . . 16d011f 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; 
 import java . util . Map ; 
 
 import net . minecraft . block . Block ; 
 + import net . minecraft . util . StatCollector ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . event . Event ; 
 
 @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry 
 static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; 
 static BiMap < Block , Fluid > fluidBlocks ; 
 
 - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 + public static final Fluid WATER = new Fluid ( " water " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . water . name " ) ; 
 + } 
 + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 + 
 + public static final Fluid LAVA = new Fluid ( " lava " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . lava . name " ) ; 
 + } 
 + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 
 public static int renderIdFluid = - 1 ; 

