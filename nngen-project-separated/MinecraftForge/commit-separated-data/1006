BLEU SCORE: 0.016932492841722675

TEST MSG: New system in EntityRegistry to allow modders to register spawn eggs .
GENERATED MSG: Update some stuff

TEST DIFF (one line): diff - - git a / fml / patches / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch b / fml / patches / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch <nl> new file mode 100644 <nl> index 0000000 . . da29b12 <nl> - - - / dev / null <nl> + + + b / fml / patches / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch <nl> @ @ - 0 , 0 + 1 , 19 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / gui / achievement / GuiStats . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / gui / achievement / GuiStats . java <nl> + @ @ - 769 , 6 + 769 , 7 @ @ <nl> + super ( p _ i45510 _ 2 _ , GuiStats . this . field _ 146294 _ l , GuiStats . this . field _ 146295 _ m , 32 , GuiStats . this . field _ 146295 _ m - 64 , GuiStats . this . field _ 146289 _ q . field _ 78288 _ b * 4 ) ; <nl> + this . func _ 148130 _ a ( false ) ; <nl> + Iterator iterator = EntityList . field _ 75627 _ a . values ( ) . iterator ( ) ; <nl> + + iterator = com . google . common . collect . Iterators . concat ( iterator , net . minecraftforge . fml . common . registry . EntityRegistry . getEggs ( ) . values ( ) . iterator ( ) ) ; <nl> + <nl> + while ( iterator . hasNext ( ) ) <nl> + { <nl> + @ @ - 806 , 7 + 807 , 7 @ @ <nl> + protected void func _ 180791 _ a ( int p _ 180791 _ 1 _ , int p _ 180791 _ 2 _ , int p _ 180791 _ 3 _ , int p _ 180791 _ 4 _ , int p _ 180791 _ 5 _ , int p _ 180791 _ 6 _ ) <nl> + { <nl> + EntityList . EntityEggInfo entityegginfo = ( EntityList . EntityEggInfo ) this . field _ 148222 _ l . get ( p _ 180791 _ 1 _ ) ; <nl> + - String s = I18n . func _ 135052 _ a ( " entity . " + EntityList . func _ 75617 _ a ( entityegginfo . field _ 75613 _ a ) + " . name " , new Object [ 0 ] ) ; <nl> + + String s = I18n . func _ 135052 _ a ( " entity . " + entityegginfo . name + " . name " , new Object [ 0 ] ) ; <nl> + int k1 = GuiStats . this . field _ 146546 _ t . func _ 77444 _ a ( entityegginfo . field _ 151512 _ d ) ; <nl> + int l1 = GuiStats . this . field _ 146546 _ t . func _ 77444 _ a ( entityegginfo . field _ 151513 _ e ) ; <nl> + String s1 = I18n . func _ 135052 _ a ( " stat . entityKills " , new Object [ ] { Integer . valueOf ( k1 ) , s } ) ; <nl> diff - - git a / fml / patches / minecraft / net / minecraft / entity / EntityList . java . patch b / fml / patches / minecraft / net / minecraft / entity / EntityList . java . patch <nl> index 494d91d . . 5cd79b2 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / entity / EntityList . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / entity / EntityList . java . patch <nl> @ @ - 30 , 3 + 30 , 31 @ @ <nl> } <nl> else <nl> { <nl> + @ @ - 344 , 7 + 355 , 9 @ @ <nl> + <nl> + public static class EntityEggInfo <nl> + { <nl> + + @ Deprecated / / This is not always a valid number in the global ID list . <nl> + public final int field _ 75613 _ a ; <nl> + + public final String name ; <nl> + public final int field _ 75611 _ b ; <nl> + public final int field _ 75612 _ c ; <nl> + public final StatBase field _ 151512 _ d ; <nl> + @ @ - 358 , 6 + 371 , 17 @ @ <nl> + this . field _ 75612 _ c = p _ i1583 _ 3 _ ; <nl> + this . field _ 151512 _ d = StatList . func _ 151182 _ a ( this ) ; <nl> + this . field _ 151513 _ e = StatList . func _ 151176 _ b ( this ) ; <nl> + + this . name = EntityList . func _ 75617 _ a ( p _ i1583 _ 1 _ ) ; <nl> + } <nl> + + <nl> + + public EntityEggInfo ( String name , int primaryColor , int secondaryColor ) <nl> + + { <nl> + + this . field _ 75613 _ a = - 1 ; <nl> + + this . name = name ; <nl> + + this . field _ 75611 _ b = primaryColor ; <nl> + + this . field _ 75612 _ c = secondaryColor ; <nl> + + this . field _ 151512 _ d = ( new StatBase ( " stat . killEntity . " + name , new net . minecraft . util . ChatComponentTranslation ( " stat . entityKill " , new net . minecraft . util . ChatComponentTranslation ( " entity . " + name + " . name " ) ) ) ) . func _ 75971 _ g ( ) ; <nl> + + this . field _ 151513 _ e = ( new StatBase ( " stat . entityKilledBy . " + name , new net . minecraft . util . ChatComponentTranslation ( " stat . entityKilledBy " , new net . minecraft . util . ChatComponentTranslation ( " entity . " + name + " . name " ) ) ) ) . func _ 75971 _ g ( ) ; <nl> + + } <nl> + } <nl> + } <nl> diff - - git a / fml / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / fml / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> index 4b36387 . . 78c6c36 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch <nl> @ @ - 16 , 7 + 16 , 15 @ @ <nl> } <nl> <nl> public int func _ 82145 _ z ( ) <nl> - @ @ - 2139 , 6 + 2141 , 22 @ @ <nl> + @ @ - 1725 , 6 + 1727 , 7 @ @ <nl> + } <nl> + <nl> + EntityList . EntityEggInfo entityegginfo = ( EntityList . EntityEggInfo ) EntityList . field _ 75627 _ a . get ( Integer . valueOf ( EntityList . func _ 75619 _ a ( p _ 70074 _ 1 _ ) ) ) ; <nl> + + if ( entityegginfo = = null ) entityegginfo = net . minecraftforge . fml . common . registry . EntityRegistry . getEggs ( ) . get ( EntityList . func _ 75621 _ b ( p _ 70074 _ 1 _ ) ) ; <nl> + <nl> + if ( entityegginfo ! = null ) <nl> + { <nl> + @ @ - 2139 , 6 + 2142 , 22 @ @ <nl> this . field _ 175153 _ bG = p _ 175150 _ 1 _ ; <nl> } <nl> <nl> diff - - git a / fml / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / fml / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 9f8fc06 <nl> - - - / dev / null <nl> + + + b / fml / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / entity / player / EntityPlayerMP . java <nl> + + + + . . / src - work / minecraft / net / minecraft / entity / player / EntityPlayerMP . java <nl> + @ @ - 481 , 6 + 481 , 7 @ @ <nl> + if ( entitylivingbase ! = null ) <nl> + { <nl> + EntityList . EntityEggInfo entityegginfo = ( EntityList . EntityEggInfo ) EntityList . field _ 75627 _ a . get ( Integer . valueOf ( EntityList . func _ 75619 _ a ( entitylivingbase ) ) ) ; <nl> + + if ( entityegginfo = = null ) entityegginfo = net . minecraftforge . fml . common . registry . EntityRegistry . getEggs ( ) . get ( EntityList . func _ 75621 _ b ( entitylivingbase ) ) ; <nl> + <nl> + if ( entityegginfo ! = null ) <nl> + { <nl> diff - - git a / fml / patches / minecraft / net / minecraft / item / ItemMonsterPlacer . java . patch b / fml / patches / minecraft / net / minecraft / item / ItemMonsterPlacer . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 1b4c966 <nl> - - - / dev / null <nl> + + + b / fml / patches / minecraft / net / minecraft / item / ItemMonsterPlacer . java . patch <nl> @ @ - 0 , 0 + 1 , 107 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / item / ItemMonsterPlacer . java <nl> + + + + . . / src - work / minecraft / net / minecraft / item / ItemMonsterPlacer . java <nl> + @ @ - 39 , 7 + 39 , 7 @ @ <nl> + public String func _ 77653 _ i ( ItemStack p _ 77653 _ 1 _ ) <nl> + { <nl> + String s = ( " " + StatCollector . func _ 74838 _ a ( this . func _ 77658 _ a ( ) + " . name " ) ) . trim ( ) ; <nl> + - String s1 = EntityList . func _ 75617 _ a ( p _ 77653 _ 1 _ . func _ 77960 _ j ( ) ) ; <nl> + + String s1 = ItemMonsterPlacer . getEntityName ( p _ 77653 _ 1 _ ) ; <nl> + <nl> + if ( s1 ! = null ) <nl> + { <nl> + @ @ - 52 , 7 + 52 , 7 @ @ <nl> + @ SideOnly ( Side . CLIENT ) <nl> + public int func _ 82790 _ a ( ItemStack p _ 82790 _ 1 _ , int p _ 82790 _ 2 _ ) <nl> + { <nl> + - EntityList . EntityEggInfo entityegginfo = ( EntityList . EntityEggInfo ) EntityList . field _ 75627 _ a . get ( Integer . valueOf ( p _ 82790 _ 1 _ . func _ 77960 _ j ( ) ) ) ; <nl> + + EntityList . EntityEggInfo entityegginfo = ItemMonsterPlacer . getEggInfo ( p _ 82790 _ 1 _ ) ; <nl> + return entityegginfo ! = null ? ( p _ 82790 _ 2 _ = = 0 ? entityegginfo . field _ 75611 _ b : entityegginfo . field _ 75612 _ c ) : 16777215 ; <nl> + } <nl> + <nl> + @ @ - 77 , 7 + 77 , 7 @ @ <nl> + if ( tileentity instanceof TileEntityMobSpawner ) <nl> + { <nl> + MobSpawnerBaseLogic mobspawnerbaselogic = ( ( TileEntityMobSpawner ) tileentity ) . func _ 145881 _ a ( ) ; <nl> + - mobspawnerbaselogic . func _ 98272 _ a ( EntityList . func _ 75617 _ a ( p _ 180614 _ 1 _ . func _ 77960 _ j ( ) ) ) ; <nl> + + mobspawnerbaselogic . func _ 98272 _ a ( ItemMonsterPlacer . getEntityName ( p _ 180614 _ 1 _ ) ) ; <nl> + tileentity . func _ 70296 _ d ( ) ; <nl> + p _ 180614 _ 3 _ . func _ 175689 _ h ( p _ 180614 _ 4 _ ) ; <nl> + <nl> + @ @ - 98 , 7 + 98 , 7 @ @ <nl> + d0 = 0 . 5D ; <nl> + } <nl> + <nl> + - Entity entity = func _ 77840 _ a ( p _ 180614 _ 3 _ , p _ 180614 _ 1 _ . func _ 77960 _ j ( ) , ( double ) p _ 180614 _ 4 _ . func _ 177958 _ n ( ) + 0 . 5D , ( double ) p _ 180614 _ 4 _ . func _ 177956 _ o ( ) + d0 , ( double ) p _ 180614 _ 4 _ . func _ 177952 _ p ( ) + 0 . 5D ) ; <nl> + + Entity entity = spawnCreature ( p _ 180614 _ 3 _ , ItemMonsterPlacer . getEntityName ( p _ 180614 _ 1 _ ) , ( double ) p _ 180614 _ 4 _ . func _ 177958 _ n ( ) + 0 . 5D , ( double ) p _ 180614 _ 4 _ . func _ 177956 _ o ( ) + d0 , ( double ) p _ 180614 _ 4 _ . func _ 177952 _ p ( ) + 0 . 5D ) ; <nl> + <nl> + if ( entity ! = null ) <nl> + { <nl> + @ @ - 149 , 7 + 149 , 7 @ @ <nl> + <nl> + if ( p _ 77659 _ 2 _ . func _ 180495 _ p ( blockpos ) . func _ 177230 _ c ( ) instanceof BlockLiquid ) <nl> + { <nl> + - Entity entity = func _ 77840 _ a ( p _ 77659 _ 2 _ , p _ 77659 _ 1 _ . func _ 77960 _ j ( ) , ( double ) blockpos . func _ 177958 _ n ( ) + 0 . 5D , ( double ) blockpos . func _ 177956 _ o ( ) + 0 . 5D , ( double ) blockpos . func _ 177952 _ p ( ) + 0 . 5D ) ; <nl> + + Entity entity = spawnCreature ( p _ 77659 _ 2 _ , ItemMonsterPlacer . getEntityName ( p _ 77659 _ 1 _ ) , ( double ) blockpos . func _ 177958 _ n ( ) + 0 . 5D , ( double ) blockpos . func _ 177956 _ o ( ) + 0 . 5D , ( double ) blockpos . func _ 177952 _ p ( ) + 0 . 5D ) ; <nl> + <nl> + if ( entity ! = null ) <nl> + { <nl> + @ @ - 173 , 19 + 173 , 29 @ @ <nl> + } <nl> + } <nl> + <nl> + + @ Deprecated / / Use string version below . <nl> + public static Entity func _ 77840 _ a ( World p _ 77840 _ 0 _ , int p _ 77840 _ 1 _ , double p _ 77840 _ 2 _ , double p _ 77840 _ 4 _ , double p _ 77840 _ 6 _ ) <nl> + { <nl> + if ( ! EntityList . field _ 75627 _ a . containsKey ( Integer . valueOf ( p _ 77840 _ 1 _ ) ) ) <nl> + { <nl> + return null ; <nl> + } <nl> + + return spawnCreature ( p _ 77840 _ 0 _ , EntityList . func _ 75617 _ a ( p _ 77840 _ 1 _ ) , p _ 77840 _ 2 _ , p _ 77840 _ 4 _ , p _ 77840 _ 6 _ ) ; <nl> + + } <nl> + + <nl> + + public static Entity spawnCreature ( World p _ 77840 _ 0 _ , String name , double p _ 77840 _ 2 _ , double p _ 77840 _ 4 _ , double p _ 77840 _ 6 _ ) <nl> + + { <nl> + + if ( ! EntityList . field _ 75625 _ b . containsKey ( name ) ) <nl> + + { <nl> + + return null ; <nl> + + } <nl> + else <nl> + { <nl> + Entity entity = null ; <nl> + <nl> + for ( int j = 0 ; j < 1 ; + + j ) <nl> + { <nl> + - entity = EntityList . func _ 75616 _ a ( p _ 77840 _ 1 _ , p _ 77840 _ 0 _ ) ; <nl> + + entity = EntityList . func _ 75620 _ a ( name , p _ 77840 _ 0 _ ) ; <nl> + <nl> + if ( entity instanceof EntityLivingBase ) <nl> + { <nl> + @ @ - 213 , 5 + 223 , 28 @ @ <nl> + EntityList . EntityEggInfo entityegginfo = ( EntityList . EntityEggInfo ) iterator . next ( ) ; <nl> + p _ 150895 _ 3 _ . add ( new ItemStack ( p _ 150895 _ 1 _ , 1 , entityegginfo . field _ 75613 _ a ) ) ; <nl> + } <nl> + + <nl> + + for ( String name : net . minecraftforge . fml . common . registry . EntityRegistry . getEggs ( ) . keySet ( ) ) <nl> + + { <nl> + + ItemStack stack = new ItemStack ( p _ 150895 _ 1 _ ) ; <nl> + + net . minecraft . nbt . NBTTagCompound nbt = new net . minecraft . nbt . NBTTagCompound ( ) ; <nl> + + nbt . func _ 74778 _ a ( " entity _ name " , name ) ; <nl> + + stack . func _ 77982 _ d ( nbt ) ; <nl> + + p _ 150895 _ 3 _ . add ( stack ) ; <nl> + + } <nl> + } <nl> + + <nl> + + private static String getEntityName ( ItemStack stack ) <nl> + + { <nl> + + if ( stack . func _ 77942 _ o ( ) & & stack . func _ 77978 _ p ( ) . func _ 150297 _ b ( " entity _ name " , 8 ) ) <nl> + + return stack . func _ 77978 _ p ( ) . func _ 74779 _ i ( " entity _ name " ) ; <nl> + + return EntityList . func _ 75617 _ a ( stack . func _ 77960 _ j ( ) ) ; <nl> + + } <nl> + + <nl> + + private static EntityList . EntityEggInfo getEggInfo ( ItemStack stack ) <nl> + + { <nl> + + if ( stack . func _ 77942 _ o ( ) & & stack . func _ 77978 _ p ( ) . func _ 150297 _ b ( " entity _ name " , 8 ) ) <nl> + + net . minecraftforge . fml . common . registry . EntityRegistry . getEggs ( ) . get ( stack . func _ 77978 _ p ( ) . func _ 74779 _ i ( " entity _ name " ) ) ; <nl> + + return ( EntityList . EntityEggInfo ) EntityList . field _ 75627 _ a . get ( stack . func _ 77960 _ j ( ) ) ; <nl> + + } <nl> + } <nl> diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java b / fml / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java <nl> index 5bcea3f . . 6e4c099 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java <nl> @ @ - 13 , 6 + 13 , 7 @ @ <nl> package net . minecraftforge . fml . common . registry ; <nl> <nl> import java . util . BitSet ; <nl> + import java . util . Collections ; <nl> import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> @ @ - 117 , 6 + 118 , 9 @ @ public class EntityRegistry <nl> private ListMultimap < ModContainer , EntityRegistration > entityRegistrations = ArrayListMultimap . create ( ) ; <nl> private Map < String , ModContainer > entityNames = Maps . newHashMap ( ) ; <nl> private BiMap < Class < ? extends Entity > , EntityRegistration > entityClassRegistrations = HashBiMap . create ( ) ; <nl> + private Map < String , EntityList . EntityEggInfo > entityEggs = Maps . newHashMap ( ) ; <nl> + private Map < String , EntityList . EntityEggInfo > entityEggsUn = Collections . unmodifiableMap ( entityEggs ) ; <nl> + <nl> public static EntityRegistry instance ( ) <nl> { <nl> return INSTANCE ; <nl> @ @ - 148 , 6 + 152 , 26 @ @ public class EntityRegistry <nl> instance ( ) . doModEntityRegistration ( entityClass , entityName , id , mod , trackingRange , updateFrequency , sendsVelocityUpdates ) ; <nl> } <nl> <nl> + / * * <nl> + * Register the mod entity type with FML <nl> + * This will also register a spawn egg . <nl> + <nl> + * @ param entityClass The entity class <nl> + * @ param entityName A unique name for the entity <nl> + * @ param id A mod specific ID for the entity <nl> + * @ param mod The mod <nl> + * @ param trackingRange The range at which MC will send tracking updates <nl> + * @ param updateFrequency The frequency of tracking updates <nl> + * @ param sendsVelocityUpdates Whether to send velocity information packets as well <nl> + * @ param eggPrimary Primary egg color <nl> + * @ param eggSecondary Secondary egg color <nl> + * / <nl> + public static void registerModEntity ( Class < ? extends Entity > entityClass , String entityName , int id , Object mod , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates , int eggPrimary , int eggSecondary ) <nl> + { <nl> + instance ( ) . doModEntityRegistration ( entityClass , entityName , id , mod , trackingRange , updateFrequency , sendsVelocityUpdates ) ; <nl> + EntityRegistry . registerEgg ( entityClass , eggPrimary , eggSecondary ) ; <nl> + } <nl> + <nl> @ SuppressWarnings ( " unchecked " ) <nl> private void doModEntityRegistration ( Class < ? extends Entity > entityClass , String entityName , int id , Object mod , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates ) <nl> { <nl> @ @ - 177 , 6 + 201 , 40 @ @ public class EntityRegistry <nl> entityRegistrations . put ( mc , er ) ; <nl> } <nl> <nl> + / * * <nl> + * Registers a spawn egg for the specified entity class . <nl> + * The class must already be registered in the EntityList . classToStringMapping . <nl> + * This can be done either by using the global ID system , or preferably the registerModEntity functions above . <nl> + * Once registered mob eggs can be created by using minecraft : spawn _ egg with NBT entry ' entity _ name ' with <nl> + * value of the name this class is registered in the classToStringMapping with . <nl> + * <nl> + * @ param entityClass The entity class <nl> + * @ param primary Primary egg color <nl> + * @ param secondary Secondary egg color <nl> + * <nl> + * @ throws IllegalArgumentException if entityClass is not registered in classToStringMapping . <nl> + * <nl> + * / <nl> + public static void registerEgg ( Class < ? extends Entity > entityClass , int primary , int secondary ) <nl> + { <nl> + if ( ! EntityList . classToStringMapping . containsKey ( entityClass ) ) <nl> + throw new IllegalArgumentException ( " Entity not registered in classToString map : " + entityClass ) ; <nl> + <nl> + String name = ( String ) EntityList . classToStringMapping . get ( entityClass ) ; <nl> + EntityRegistry . instance ( ) . entityEggs . put ( name , new EntityList . EntityEggInfo ( name , primary , secondary ) ) ; <nl> + FMLLog . fine ( " Registering entity egg ' % s ' for % s " , name , entityClass ) ; <nl> + } <nl> + <nl> + / * * <nl> + * Returns a Unmodifiable view of the registered entity eggs list . <nl> + * <nl> + * @ return An Unmodifiable view of the registered entity eggs list . <nl> + * / <nl> + public static Map < String , EntityList . EntityEggInfo > getEggs ( ) <nl> + { <nl> + return instance ( ) . entityEggsUn ; <nl> + } <nl> + <nl> public static void registerGlobalEntityID ( Class < ? extends Entity > entityClass , String entityName , int id ) <nl> { <nl> if ( EntityList . classToStringMapping . containsKey ( entityClass ) ) <nl> diff - - git a / fml / src / main / resources / fml . exc b / fml / src / main / resources / fml . exc <nl> index 860fdd9 . . 9d98f14 100644 <nl> - - - a / fml / src / main / resources / fml . exc <nl> + + + b / fml / src / main / resources / fml . exc <nl> @ @ - 1 + 1 , 2 @ @ <nl> net / minecraft / server / management / ServerConfigurationManager . initializeConnectionToPlayer ( Lnet / minecraft / network / NetworkManager ; Lnet / minecraft / entity / player / EntityPlayerMP ; Lnet / minecraft / network / NetHandlerPlayServer ; ) V = | p _ 72355 _ 1 _ , p _ 72355 _ 2 _ , nethandlerplayserver <nl> + net / minecraft / item / ItemMonsterPlacer . spawnCreature ( Lnet / minecraft / world / World ; Ljava / lang / String ; DDD ) Lnet / minecraft / entity / Entity ; = | p _ 77840 _ 0 _ , name , p _ 77840 _ 2 _ , p _ 77840 _ 4 _ , p _ 77840 _ 6 _
NEAREST DIFF (one line): diff - - git a / fml / build . xml b / fml / build . xml <nl> index f10e348 . . d4351ea 100644 <nl> - - - a / fml / build . xml <nl> + + + b / fml / build . xml <nl> @ @ - 126 , 6 + 126 , 7 @ @ <nl> < side prop = " merge - to " src = " mcp . srcdir " side = " $ { side } " / > <nl> < side prop = " side - from " src = " src . dir " side = " $ { side } " / > <nl> <nl> + < delete dir = " $ { merge - to } / argo " / > <nl> < copy todir = " $ { merge - to } " overwrite = " true " verbose = " true " > <nl> < fileset dir = " $ { side - from } " includes = " * * / * . java " / > <nl> < fileset dir = " $ { common . src . dir } " includes = " * * / * . java " / > <nl> diff - - git a / fml / client / cpw / mods / fml / client / FMLClientHandler . java b / fml / client / cpw / mods / fml / client / FMLClientHandler . java <nl> index adcde06 . . 4ce2275 100644 <nl> - - - a / fml / client / cpw / mods / fml / client / FMLClientHandler . java <nl> + + + b / fml / client / cpw / mods / fml / client / FMLClientHandler . java <nl> @ @ - 794 , 11 + 794 , 11 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> @ Override <nl> public ModMetadata readMetadataFrom ( InputStream input , ModContainer mod ) throws Exception <nl> { <nl> - JsonNode root = new JdomParser ( ) . func _ 27366 _ a ( new InputStreamReader ( input ) ) ; <nl> - List < JsonNode > lst = root . func _ 27217 _ b ( ) ; <nl> + JsonNode root = new JdomParser ( ) . parse ( new InputStreamReader ( input ) ) ; <nl> + List < JsonNode > lst = root . getArrayNode ( ) ; <nl> JsonNode modinfo = null ; <nl> for ( JsonNode tmodinfo : lst ) { <nl> - if ( mod . getName ( ) . equals ( tmodinfo . func _ 27213 _ a ( " modid " ) ) ) { <nl> + if ( mod . getName ( ) . equals ( tmodinfo . getStringValue ( " modid " ) ) ) { <nl> modinfo = tmodinfo ; <nl> break ; <nl> } <nl> @ @ - 809 , 23 + 809 , 23 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> } <nl> ModMetadata meta = new ModMetadata ( mod ) ; <nl> try { <nl> - meta . name = modinfo . func _ 27213 _ a ( " name " ) ; <nl> - meta . description = modinfo . func _ 27213 _ a ( " description " ) . replace ( " \ r " , " " ) ; <nl> - meta . version = modinfo . func _ 27213 _ a ( " version " ) ; <nl> - meta . credits = modinfo . func _ 27213 _ a ( " credits " ) ; <nl> - List authors = modinfo . func _ 27217 _ b ( " authors " ) ; <nl> + meta . name = modinfo . getStringValue ( " name " ) ; <nl> + meta . description = modinfo . getStringValue ( " description " ) . replace ( " \ r " , " " ) ; <nl> + meta . version = modinfo . getStringValue ( " version " ) ; <nl> + meta . credits = modinfo . getStringValue ( " credits " ) ; <nl> + List < JsonNode > authors = modinfo . getArrayNode ( " authors " ) ; <nl> StringBuilder sb = new StringBuilder ( ) ; <nl> for ( int i = 0 ; i < authors . size ( ) ; i + + ) { <nl> - meta . authorList . add ( ( ( JsonNode ) authors . get ( i ) ) . func _ 27216 _ b ( ) ) ; <nl> + meta . authorList . add ( ( ( JsonNode ) authors . get ( i ) ) . getText ( ) ) ; <nl> } <nl> - meta . logoFile = modinfo . func _ 27213 _ a ( " logoFile " ) ; <nl> - meta . url = modinfo . func _ 27213 _ a ( " url " ) ; <nl> - meta . updateUrl = modinfo . func _ 27213 _ a ( " updateUrl " ) ; <nl> - meta . parent = modinfo . func _ 27213 _ a ( " parent " ) ; <nl> - List screenshots = modinfo . func _ 27217 _ b ( " screenshots " ) ; <nl> + meta . logoFile = modinfo . getStringValue ( " logoFile " ) ; <nl> + meta . url = modinfo . getStringValue ( " url " ) ; <nl> + meta . updateUrl = modinfo . getStringValue ( " updateUrl " ) ; <nl> + meta . parent = modinfo . getStringValue ( " parent " ) ; <nl> + List < JsonNode > screenshots = modinfo . getArrayNode ( " screenshots " ) ; <nl> meta . screenshots = new String [ screenshots . size ( ) ] ; <nl> for ( int i = 0 ; i < screenshots . size ( ) ; i + + ) { <nl> - meta . screenshots [ i ] = ( ( JsonNode ) screenshots . get ( i ) ) . func _ 27216 _ b ( ) ; <nl> + meta . screenshots [ i ] = ( ( JsonNode ) screenshots . get ( i ) ) . getText ( ) ; <nl> } <nl> } catch ( Exception e ) { <nl> FMLCommonHandler . instance ( ) . getFMLLogger ( ) . log ( Level . FINE , String . format ( " An error occured reading the info file for % s " , mod . getName ( ) ) , e ) ; <nl> @ @ - 918 , 15 + 918 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler <nl> Profiler . func _ 40662 _ b ( ) ; <nl> } <nl> <nl> - / * * <nl> - * <nl> - * / <nl> - public void preGameLoad ( String [ ] args ) <nl> - { <nl> - / / Currently this does nothing , but it ' s possible I could relaunch Minecraft in a new classloader if I wished <nl> - Minecraft . fmlReentry ( args ) ; <nl> - } <nl> - <nl> public void onTexturePackChange ( RenderEngine engine , TexturePackBase texturepack , List < TextureFX > effects ) <nl> { <nl> FMLClientHandler . instance ( ) . pruneOldTextureFX ( texturepack , effects ) ; <nl> diff - - git a / fml / common / cpw / mods / fml / relauncher / ArgsWrapper . java b / fml / common / cpw / mods / fml / relauncher / ArgsWrapper . java <nl> new file mode 100644 <nl> index 0000000 . . 141b9cd <nl> - - - / dev / null <nl> + + + b / fml / common / cpw / mods / fml / relauncher / ArgsWrapper . java <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + package cpw . mods . fml . relauncher ; <nl> + <nl> + public class ArgsWrapper <nl> + { <nl> + public ArgsWrapper ( String [ ] args ) <nl> + { <nl> + this . args = args ; <nl> + } <nl> + <nl> + public String [ ] args ; <nl> + } <nl> diff - - git a / fml / common / cpw / mods / fml / relauncher / FMLEmbeddingRelauncher . java b / fml / common / cpw / mods / fml / relauncher / FMLEmbeddingRelauncher . java <nl> new file mode 100644 <nl> index 0000000 . . d924f81 <nl> - - - / dev / null <nl> + + + b / fml / common / cpw / mods / fml / relauncher / FMLEmbeddingRelauncher . java <nl> @ @ - 0 , 0 + 1 , 48 @ @ <nl> + package cpw . mods . fml . relauncher ; <nl> + <nl> + import java . lang . reflect . Field ; <nl> + import java . lang . reflect . InvocationTargetException ; <nl> + import java . net . URLClassLoader ; <nl> + <nl> + import net . minecraft . client . Minecraft ; <nl> + import net . minecraft . src . WorldSettings ; <nl> + <nl> + public class FMLEmbeddingRelauncher <nl> + { <nl> + private static FMLEmbeddingRelauncher INSTANCE ; <nl> + private RelaunchClassLoader clientLoader ; <nl> + private RelaunchClassLoader serverLoader ; <nl> + <nl> + public static void relaunch ( ArgsWrapper wrap ) <nl> + { <nl> + INSTANCE = new FMLEmbeddingRelauncher ( ) ; <nl> + INSTANCE . relaunchClient ( wrap ) ; <nl> + } <nl> + <nl> + private FMLEmbeddingRelauncher ( ) <nl> + { <nl> + URLClassLoader ucl = ( URLClassLoader ) getClass ( ) . getClassLoader ( ) ; <nl> + <nl> + clientLoader = new RelaunchClassLoader ( ucl . getURLs ( ) ) ; <nl> + serverLoader = new RelaunchClassLoader ( ucl . getURLs ( ) ) ; <nl> + } <nl> + <nl> + private void relaunchClient ( ArgsWrapper wrap ) <nl> + { <nl> + try <nl> + { <nl> + Class < ? > original = Class . forName ( " net . minecraft . client . Minecraft " , false , getClass ( ) . getClassLoader ( ) ) ; <nl> + Field origDir = original . getDeclaredField ( " field _ 6275 _ Z " ) ; <nl> + origDir . setAccessible ( true ) ; <nl> + Class client = Class . forName ( " net . minecraft . client . Minecraft " , false , clientLoader ) ; <nl> + Field homeDir = client . getDeclaredField ( " field _ 6275 _ Z " ) ; <nl> + homeDir . setAccessible ( true ) ; <nl> + homeDir . set ( null , origDir . get ( null ) ) ; <nl> + client . getMethod ( " fmlReentry " , ArgsWrapper . class ) . invoke ( null , wrap ) ; <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + e . printStackTrace ( ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / fml / common / cpw / mods / fml / relauncher / RelaunchClassLoader . java b / fml / common / cpw / mods / fml / relauncher / RelaunchClassLoader . java <nl> new file mode 100644 <nl> index 0000000 . . 5a4e720 <nl> - - - / dev / null <nl> + + + b / fml / common / cpw / mods / fml / relauncher / RelaunchClassLoader . java <nl> @ @ - 0 , 0 + 1 , 31 @ @ <nl> + package cpw . mods . fml . relauncher ; <nl> + <nl> + import java . net . URL ; <nl> + import java . net . URLClassLoader ; <nl> + import java . util . Arrays ; <nl> + <nl> + public class RelaunchClassLoader extends URLClassLoader <nl> + { <nl> + public RelaunchClassLoader ( URL [ ] sources ) <nl> + { <nl> + super ( sources ) ; <nl> + System . out . println ( Arrays . toString ( sources ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public Class < ? > loadClass ( String name ) throws ClassNotFoundException <nl> + { <nl> + if ( name . startsWith ( " cpw . mods . fml . relauncher " ) ) <nl> + { <nl> + return super . loadClass ( name ) ; <nl> + } <nl> + try <nl> + { <nl> + return findClass ( name ) ; <nl> + } <nl> + catch ( ClassNotFoundException cnfe ) <nl> + { <nl> + return super . loadClass ( name ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / fml / eclipse / FML - Client / . classpath b / fml / eclipse / FML - Client / . classpath <nl> index d2da61e . . d750167 100644 <nl> - - - a / fml / eclipse / FML - Client / . classpath <nl> + + + b / fml / eclipse / FML - Client / . classpath <nl> @ @ - 20 , 5 + 20 , 6 @ @ <nl> 	 	 < / attributes > <nl> 	 < / classpathentry > <nl> 	 < classpathentry kind = " lib " path = " jars / bin / minecraft . jar " / > <nl> + 	 < classpathentry kind = " lib " path = " / home / cpw / projects / FML / mcsnapshot / lib / argo - 2 . 25 . jar " / > <nl> 	 < classpathentry kind = " output " path = " bin " / > <nl> < / classpath > <nl> diff - - git a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> index 82f67e0 . . 8083e15 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> @ @ - 1 , 16 + 1 , 18 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / client / Minecraft . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 <nl> + + + . . / src - work / minecraft / net / minecraft / client / Minecraft . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 <nl> - @ @ - 120 , 6 + 120 , 9 @ @ <nl> + @ @ - 120 , 6 + 120 , 11 @ @ <nl> import org . lwjgl . opengl . PixelFormat ; <nl> import org . lwjgl . util . glu . GLU ; <nl> <nl> + import cpw . mods . fml . client . FMLClientHandler ; <nl> + import cpw . mods . fml . common . FMLCommonHandler ; <nl> + + import cpw . mods . fml . relauncher . ArgsWrapper ; <nl> + + import cpw . mods . fml . relauncher . FMLEmbeddingRelauncher ; <nl> + <nl> public abstract class Minecraft implements IPlayerUsage , Runnable <nl> { <nl> public static byte [ ] field _ 28006 _ b = new byte [ 10485760 ] ; <nl> - @ @ - 301 , 6 + 304 , 7 @ @ <nl> + @ @ - 301 , 6 + 306 , 7 @ @ <nl> this . field _ 6315 _ n = new RenderEngine ( this . field _ 6298 _ C , this . field _ 6304 _ y ) ; <nl> this . func _ 6257 _ q ( ) ; <nl> this . field _ 6314 _ o = new FontRenderer ( this . field _ 6304 _ y , " / font / default . png " , this . field _ 6315 _ n , false ) ; <nl> @ @ - 18 , 7 + 20 , 7 @ @ <nl> this . field _ 40007 _ r = new FontRenderer ( this . field _ 6304 _ y , " / font / alternate . png " , this . field _ 6315 _ n , false ) ; <nl> <nl> if ( this . field _ 6304 _ y . field _ 44018 _ Q ! = null ) <nl> - @ @ - 332 , 6 + 336 , 9 @ @ <nl> + @ @ - 332 , 6 + 338 , 9 @ @ <nl> GL11 . glMatrixMode ( GL11 . GL _ PROJECTION ) ; <nl> GL11 . glLoadIdentity ( ) ; <nl> GL11 . glMatrixMode ( GL11 . GL _ MODELVIEW ) ; <nl> @ @ - 28 , 9 + 30 , 9 @ @ <nl> this . func _ 6250 _ c ( " Startup " ) ; <nl> this . field _ 6301 _ A . func _ 340 _ a ( this . field _ 6304 _ y ) ; <nl> this . field _ 6315 _ n . func _ 1066 _ a ( this . field _ 9231 _ Y ) ; <nl> - @ @ - 1337 , 11 + 1344 , 13 @ @ <nl> + @ @ - 1318 , 11 + 1327 , 13 @ @ <nl> <nl> - public void func _ 6246 _ i ( ) throws IOException <nl> + public void func _ 6246 _ i ( ) <nl> { <nl> + FMLCommonHandler . instance ( ) . rescheduleTicks ( ) ; <nl> if ( this . field _ 35001 _ ab > 0 ) <nl> @ @ - 42 , 7 + 44 , 7 @ @ <nl> Profiler . func _ 40663 _ a ( " stats " ) ; <nl> this . field _ 25001 _ G . func _ 27178 _ d ( ) ; <nl> Profiler . func _ 40661 _ c ( " gui " ) ; <nl> - @ @ - 1710 , 6 + 1719 , 7 @ @ <nl> + @ @ - 1691 , 6 + 1702 , 7 @ @ <nl> } <nl> <nl> Profiler . func _ 40662 _ b ( ) ; <nl> @ @ - 50 , 7 + 52 , 7 @ @ <nl> this . field _ 6287 _ N = System . currentTimeMillis ( ) ; <nl> } <nl> <nl> - @ @ - 1854 , 6 + 1864 , 7 @ @ <nl> + @ @ - 1849 , 6 + 1861 , 7 @ @ <nl> <nl> System . gc ( ) ; <nl> this . field _ 6287 _ N = 0L ; <nl> @ @ - 58 , 14 + 60 , 15 @ @ <nl> } <nl> <nl> public void func _ 6268 _ a ( String p _ 6268 _ 1 _ , File p _ 6268 _ 2 _ ) <nl> - @ @ - 1944 , 6 + 1955 , 10 @ @ <nl> + @ @ - 1940 , 6 + 1953 , 11 @ @ <nl> <nl> public static void main ( String [ ] p _ main _ 0 _ ) <nl> { <nl> - + FMLClientHandler . instance ( ) . preGameLoad ( p _ main _ 0 _ ) ; <nl> + + FMLEmbeddingRelauncher . relaunch ( new ArgsWrapper ( p _ main _ 0 _ ) ) ; <nl> + } <nl> - + public static void fmlReentry ( String [ ] p _ main _ 0 _ ) <nl> + + public static void fmlReentry ( ArgsWrapper wrapper ) <nl> + { <nl> + + String [ ] p _ main _ 0 _ = wrapper . args ; <nl> HashMap var1 = new HashMap ( ) ; <nl> boolean var2 = false ; <nl> boolean var3 = true ; <nl> diff - - git a / fml / patches / minecraft / net / minecraft / src / GuiMainMenu . java . patch b / fml / patches / minecraft / net / minecraft / src / GuiMainMenu . java . patch <nl> index d0d7e93 . . f962ba9 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / src / GuiMainMenu . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / src / GuiMainMenu . java . patch <nl> @ @ - 39 , 7 + 39 , 7 @ @ <nl> + } <nl> if ( p _ 572 _ 1 _ . field _ 938 _ f = = 11 ) <nl> { <nl> - this . field _ 945 _ b . func _ 56442 _ a ( " Demo _ World " , DemoWorldServer . field _ 56874 _ a ) ; <nl> + this . field _ 945 _ b . func _ 58039 _ a ( " Demo _ World " , " Demo _ World " , DemoWorldServer . field _ 56874 _ a ) ; <nl> @ @ - 399 , 7 + 409 , 11 @ @ <nl> var9 = var9 + " Demo " ; <nl> } <nl> diff - - git a / fml / patches / minecraft / net / minecraft / src / NetClientHandler . java . patch b / fml / patches / minecraft / net / minecraft / src / NetClientHandler . java . patch <nl> index fc19b95 . . b4c7180 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / src / NetClientHandler . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / src / NetClientHandler . java . patch <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / src / NetClientHandler . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 <nl> + + + . . / src - work / minecraft / net / minecraft / src / NetClientHandler . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 <nl> - @ @ - 22 , 6 + 22 , 8 @ @ <nl> + @ @ - 20 , 6 + 20 , 8 @ @ <nl> import net . minecraft . client . Minecraft ; <nl> import org . lwjgl . input . Keyboard ; <nl> <nl> @ @ - 9 , 7 + 9 , 7 @ @ <nl> public class NetClientHandler extends NetHandler <nl> { <nl> private boolean field _ 55324 _ f = false ; <nl> - @ @ - 1157 , 4 + 1159 , 13 @ @ <nl> + @ @ - 1165 , 4 + 1167 , 13 @ @ <nl> { <nl> return this . field _ 1213 _ d ; <nl> } <nl> diff - - git a / fml / patches / minecraft / net / minecraft / src / StatFileWriter . java . patch b / fml / patches / minecraft / net / minecraft / src / StatFileWriter . java . patch <nl> new file mode 100644 <nl> index 0000000 . . f88f0d3 <nl> - - - / dev / null <nl> + + + b / fml / patches / minecraft / net / minecraft / src / StatFileWriter . java . patch <nl> @ @ - 0 , 0 + 1 , 34 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / src / StatFileWriter . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 <nl> + + + + . . / src - work / minecraft / net / minecraft / src / StatFileWriter . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 <nl> + @ @ - 124 , 17 + 124 , 17 @ @ <nl> + { <nl> + String var2 = " local " ; <nl> + StringBuilder var3 = new StringBuilder ( ) ; <nl> + - JsonRootNode var4 = ( new JdomParser ( ) ) . func _ 27367 _ a ( p _ 27177 _ 0 _ ) ; <nl> + - List var5 = var4 . func _ 27217 _ b ( new Object [ ] { " stats - change " } ) ; <nl> + + JsonRootNode var4 = ( new JdomParser ( ) ) . parse ( p _ 27177 _ 0 _ ) ; <nl> + + List var5 = var4 . getArrayNode ( new Object [ ] { " stats - change " } ) ; <nl> + Iterator var6 = var5 . iterator ( ) ; <nl> + <nl> + while ( var6 . hasNext ( ) ) <nl> + { <nl> + JsonNode var7 = ( JsonNode ) var6 . next ( ) ; <nl> + - Map var8 = var7 . func _ 27214 _ c ( ) ; <nl> + + Map var8 = var7 . getFields ( ) ; <nl> + Entry var9 = ( Entry ) var8 . entrySet ( ) . iterator ( ) . next ( ) ; <nl> + - int var10 = Integer . parseInt ( ( ( JsonStringNode ) var9 . getKey ( ) ) . func _ 27216 _ b ( ) ) ; <nl> + - int var11 = Integer . parseInt ( ( ( JsonNode ) var9 . getValue ( ) ) . func _ 27216 _ b ( ) ) ; <nl> + + int var10 = Integer . parseInt ( ( ( JsonStringNode ) var9 . getKey ( ) ) . getText ( ) ) ; <nl> + + int var11 = Integer . parseInt ( ( ( JsonNode ) var9 . getValue ( ) ) . getText ( ) ) ; <nl> + StatBase var12 = StatList . func _ 27361 _ a ( var10 ) ; <nl> + <nl> + if ( var12 = = null ) <nl> + @ @ - 152 , 7 + 152 , 7 @ @ <nl> + MD5String var14 = new MD5String ( var2 ) ; <nl> + String var15 = var14 . func _ 27369 _ a ( var3 . toString ( ) ) ; <nl> + <nl> + - if ( ! var15 . equals ( var4 . func _ 27213 _ a ( new Object [ ] { " checksum " } ) ) ) <nl> + + if ( ! var15 . equals ( var4 . getNode ( new Object [ ] { " checksum " } ) ) ) <nl> + { <nl> + System . out . println ( " CHECKSUM MISMATCH " ) ; <nl> + return null ; <nl> diff - - git a / fml / patches / minecraft / net / minecraft / src / World . java . patch b / fml / patches / minecraft / net / minecraft / src / World . java . patch <nl> index 75b95e4 . . f3d419d 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / src / World . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / src / World . java . patch <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / src / World . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 <nl> + + + . . / src - work / minecraft / net / minecraft / src / World . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 <nl> - @ @ - 3320 , 7 + 3320 , 7 @ @ <nl> + @ @ - 3322 , 7 + 3322 , 7 @ @ <nl> <nl> public double func _ 46068 _ G ( ) <nl> { <nl> diff - - git a / fml / patches / minecraft _ server / net / minecraft / src / ChunkProviderServer . java . patch b / fml / patches / minecraft _ server / net / minecraft / src / ChunkProviderServer . java . patch <nl> index d869896 . . 76fda3e 100644 <nl> - - - a / fml / patches / minecraft _ server / net / minecraft / src / ChunkProviderServer . java . patch <nl> + + + b / fml / patches / minecraft _ server / net / minecraft / src / ChunkProviderServer . java . patch <nl> @ @ - 9 , 7 + 9 , 7 @ @ <nl> public class ChunkProviderServer implements IChunkProvider <nl> { <nl> private Set field _ 725 _ a = new HashSet ( ) ; <nl> - @ @ - 173 , 6 + 175 , 7 @ @ <nl> + @ @ - 177 , 6 + 179 , 7 @ @ <nl> if ( this . field _ 730 _ c ! = null ) <nl> { <nl> this . field _ 730 _ c . func _ 4055 _ a ( p _ 4055 _ 1 _ , p _ 4055 _ 2 _ , p _ 4055 _ 3 _ ) ; <nl> diff - - git a / fml / patches / minecraft _ server / net / minecraft / src / Entity . java . patch b / fml / patches / minecraft _ server / net / minecraft / src / Entity . java . patch <nl> index 127adfd . . 5beea42 100644 <nl> - - - a / fml / patches / minecraft _ server / net / minecraft / src / Entity . java . patch <nl> + + + b / fml / patches / minecraft _ server / net / minecraft / src / Entity . java . patch <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft _ server / net / minecraft / src / Entity . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 <nl> + + + . . / src - work / minecraft _ server / net / minecraft / src / Entity . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 <nl> - @ @ - 1525 , 4 + 1525 , 8 @ @ <nl> + @ @ - 1539 , 4 + 1539 , 8 @ @ <nl> { <nl> return String . format ( " % s [ \ ' % s \ ' / % d , l = \ ' % s \ ' , x = % . 2f , y = % . 2f , z = % . 2f ] " , new Object [ ] { this . getClass ( ) . getSimpleName ( ) , this . func _ 35150 _ Y ( ) , Integer . valueOf ( this . field _ 331 _ c ) , this . field _ 9093 _ l = = null ? " ~ NULL ~ " : this . field _ 9093 _ l . func _ 22081 _ n ( ) . func _ 55310 _ h ( ) , Double . valueOf ( this . field _ 322 _ l ) , Double . valueOf ( this . field _ 321 _ m ) , Double . valueOf ( this . field _ 320 _ n ) } ) ; <nl> } <nl> diff - - git a / fml / patches / minecraft _ server / net / minecraft / src / NetServerHandler . java . patch b / fml / patches / minecraft _ server / net / minecraft / src / NetServerHandler . java . patch <nl> index df87718 . . ee18da9 100644 <nl> - - - a / fml / patches / minecraft _ server / net / minecraft / src / NetServerHandler . java . patch <nl> + + + b / fml / patches / minecraft _ server / net / minecraft / src / NetServerHandler . java . patch <nl> @ @ - 9 , 7 + 9 , 7 @ @ <nl> import net . minecraft . server . MinecraftServer ; <nl> <nl> public class NetServerHandler extends NetHandler <nl> - @ @ - 1011 , 4 + 1013 , 9 @ @ <nl> + @ @ - 1014 , 4 + 1016 , 9 @ @ <nl> } <nl> } <nl> } <nl> diff - - git a / fml / patches / minecraft _ server / net / minecraft / src / ServerConfigurationManager . java . patch b / fml / patches / minecraft _ server / net / minecraft / src / ServerConfigurationManager . java . patch <nl> index 8bc2914 . . b8a3b0a 100644 <nl> - - - a / fml / patches / minecraft _ server / net / minecraft / src / ServerConfigurationManager . java . patch <nl> + + + b / fml / patches / minecraft _ server / net / minecraft / src / ServerConfigurationManager . java . patch <nl> @ @ - 9 , 7 + 9 , 7 @ @ <nl> import net . minecraft . server . MinecraftServer ; <nl> <nl> public abstract class ServerConfigurationManager <nl> - @ @ - 359 , 6 + 361 , 8 @ @ <nl> + @ @ - 355 , 6 + 357 , 8 @ @ <nl> p _ 28168 _ 1 _ . field _ 425 _ ad . func _ 35694 _ a ( var5 ) ; <nl> this . func _ 28170 _ a ( p _ 28168 _ 1 _ , var5 ) ; <nl> this . func _ 30008 _ g ( p _ 28168 _ 1 _ ) ;

TEST DIFF:
diff - - git a / fml / patches / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch b / fml / patches / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch 
 new file mode 100644 
 index 0000000 . . da29b12 
 - - - / dev / null 
 + + + b / fml / patches / minecraft / net / minecraft / client / gui / achievement / GuiStats . java . patch 
 @ @ - 0 , 0 + 1 , 19 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / gui / achievement / GuiStats . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / gui / achievement / GuiStats . java 
 + @ @ - 769 , 6 + 769 , 7 @ @ 
 + super ( p _ i45510 _ 2 _ , GuiStats . this . field _ 146294 _ l , GuiStats . this . field _ 146295 _ m , 32 , GuiStats . this . field _ 146295 _ m - 64 , GuiStats . this . field _ 146289 _ q . field _ 78288 _ b * 4 ) ; 
 + this . func _ 148130 _ a ( false ) ; 
 + Iterator iterator = EntityList . field _ 75627 _ a . values ( ) . iterator ( ) ; 
 + + iterator = com . google . common . collect . Iterators . concat ( iterator , net . minecraftforge . fml . common . registry . EntityRegistry . getEggs ( ) . values ( ) . iterator ( ) ) ; 
 + 
 + while ( iterator . hasNext ( ) ) 
 + { 
 + @ @ - 806 , 7 + 807 , 7 @ @ 
 + protected void func _ 180791 _ a ( int p _ 180791 _ 1 _ , int p _ 180791 _ 2 _ , int p _ 180791 _ 3 _ , int p _ 180791 _ 4 _ , int p _ 180791 _ 5 _ , int p _ 180791 _ 6 _ ) 
 + { 
 + EntityList . EntityEggInfo entityegginfo = ( EntityList . EntityEggInfo ) this . field _ 148222 _ l . get ( p _ 180791 _ 1 _ ) ; 
 + - String s = I18n . func _ 135052 _ a ( " entity . " + EntityList . func _ 75617 _ a ( entityegginfo . field _ 75613 _ a ) + " . name " , new Object [ 0 ] ) ; 
 + + String s = I18n . func _ 135052 _ a ( " entity . " + entityegginfo . name + " . name " , new Object [ 0 ] ) ; 
 + int k1 = GuiStats . this . field _ 146546 _ t . func _ 77444 _ a ( entityegginfo . field _ 151512 _ d ) ; 
 + int l1 = GuiStats . this . field _ 146546 _ t . func _ 77444 _ a ( entityegginfo . field _ 151513 _ e ) ; 
 + String s1 = I18n . func _ 135052 _ a ( " stat . entityKills " , new Object [ ] { Integer . valueOf ( k1 ) , s } ) ; 
 diff - - git a / fml / patches / minecraft / net / minecraft / entity / EntityList . java . patch b / fml / patches / minecraft / net / minecraft / entity / EntityList . java . patch 
 index 494d91d . . 5cd79b2 100644 
 - - - a / fml / patches / minecraft / net / minecraft / entity / EntityList . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / entity / EntityList . java . patch 
 @ @ - 30 , 3 + 30 , 31 @ @ 
 } 
 else 
 { 
 + @ @ - 344 , 7 + 355 , 9 @ @ 
 + 
 + public static class EntityEggInfo 
 + { 
 + + @ Deprecated / / This is not always a valid number in the global ID list . 
 + public final int field _ 75613 _ a ; 
 + + public final String name ; 
 + public final int field _ 75611 _ b ; 
 + public final int field _ 75612 _ c ; 
 + public final StatBase field _ 151512 _ d ; 
 + @ @ - 358 , 6 + 371 , 17 @ @ 
 + this . field _ 75612 _ c = p _ i1583 _ 3 _ ; 
 + this . field _ 151512 _ d = StatList . func _ 151182 _ a ( this ) ; 
 + this . field _ 151513 _ e = StatList . func _ 151176 _ b ( this ) ; 
 + + this . name = EntityList . func _ 75617 _ a ( p _ i1583 _ 1 _ ) ; 
 + } 
 + + 
 + + public EntityEggInfo ( String name , int primaryColor , int secondaryColor ) 
 + + { 
 + + this . field _ 75613 _ a = - 1 ; 
 + + this . name = name ; 
 + + this . field _ 75611 _ b = primaryColor ; 
 + + this . field _ 75612 _ c = secondaryColor ; 
 + + this . field _ 151512 _ d = ( new StatBase ( " stat . killEntity . " + name , new net . minecraft . util . ChatComponentTranslation ( " stat . entityKill " , new net . minecraft . util . ChatComponentTranslation ( " entity . " + name + " . name " ) ) ) ) . func _ 75971 _ g ( ) ; 
 + + this . field _ 151513 _ e = ( new StatBase ( " stat . entityKilledBy . " + name , new net . minecraft . util . ChatComponentTranslation ( " stat . entityKilledBy " , new net . minecraft . util . ChatComponentTranslation ( " entity . " + name + " . name " ) ) ) ) . func _ 75971 _ g ( ) ; 
 + + } 
 + } 
 + } 
 diff - - git a / fml / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch b / fml / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 index 4b36387 . . 78c6c36 100644 
 - - - a / fml / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / entity / player / EntityPlayer . java . patch 
 @ @ - 16 , 7 + 16 , 15 @ @ 
 } 
 
 public int func _ 82145 _ z ( ) 
 - @ @ - 2139 , 6 + 2141 , 22 @ @ 
 + @ @ - 1725 , 6 + 1727 , 7 @ @ 
 + } 
 + 
 + EntityList . EntityEggInfo entityegginfo = ( EntityList . EntityEggInfo ) EntityList . field _ 75627 _ a . get ( Integer . valueOf ( EntityList . func _ 75619 _ a ( p _ 70074 _ 1 _ ) ) ) ; 
 + + if ( entityegginfo = = null ) entityegginfo = net . minecraftforge . fml . common . registry . EntityRegistry . getEggs ( ) . get ( EntityList . func _ 75621 _ b ( p _ 70074 _ 1 _ ) ) ; 
 + 
 + if ( entityegginfo ! = null ) 
 + { 
 + @ @ - 2139 , 6 + 2142 , 22 @ @ 
 this . field _ 175153 _ bG = p _ 175150 _ 1 _ ; 
 } 
 
 diff - - git a / fml / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / fml / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 new file mode 100644 
 index 0000000 . . 9f8fc06 
 - - - / dev / null 
 + + + b / fml / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / entity / player / EntityPlayerMP . java 
 + + + + . . / src - work / minecraft / net / minecraft / entity / player / EntityPlayerMP . java 
 + @ @ - 481 , 6 + 481 , 7 @ @ 
 + if ( entitylivingbase ! = null ) 
 + { 
 + EntityList . EntityEggInfo entityegginfo = ( EntityList . EntityEggInfo ) EntityList . field _ 75627 _ a . get ( Integer . valueOf ( EntityList . func _ 75619 _ a ( entitylivingbase ) ) ) ; 
 + + if ( entityegginfo = = null ) entityegginfo = net . minecraftforge . fml . common . registry . EntityRegistry . getEggs ( ) . get ( EntityList . func _ 75621 _ b ( entitylivingbase ) ) ; 
 + 
 + if ( entityegginfo ! = null ) 
 + { 
 diff - - git a / fml / patches / minecraft / net / minecraft / item / ItemMonsterPlacer . java . patch b / fml / patches / minecraft / net / minecraft / item / ItemMonsterPlacer . java . patch 
 new file mode 100644 
 index 0000000 . . 1b4c966 
 - - - / dev / null 
 + + + b / fml / patches / minecraft / net / minecraft / item / ItemMonsterPlacer . java . patch 
 @ @ - 0 , 0 + 1 , 107 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / item / ItemMonsterPlacer . java 
 + + + + . . / src - work / minecraft / net / minecraft / item / ItemMonsterPlacer . java 
 + @ @ - 39 , 7 + 39 , 7 @ @ 
 + public String func _ 77653 _ i ( ItemStack p _ 77653 _ 1 _ ) 
 + { 
 + String s = ( " " + StatCollector . func _ 74838 _ a ( this . func _ 77658 _ a ( ) + " . name " ) ) . trim ( ) ; 
 + - String s1 = EntityList . func _ 75617 _ a ( p _ 77653 _ 1 _ . func _ 77960 _ j ( ) ) ; 
 + + String s1 = ItemMonsterPlacer . getEntityName ( p _ 77653 _ 1 _ ) ; 
 + 
 + if ( s1 ! = null ) 
 + { 
 + @ @ - 52 , 7 + 52 , 7 @ @ 
 + @ SideOnly ( Side . CLIENT ) 
 + public int func _ 82790 _ a ( ItemStack p _ 82790 _ 1 _ , int p _ 82790 _ 2 _ ) 
 + { 
 + - EntityList . EntityEggInfo entityegginfo = ( EntityList . EntityEggInfo ) EntityList . field _ 75627 _ a . get ( Integer . valueOf ( p _ 82790 _ 1 _ . func _ 77960 _ j ( ) ) ) ; 
 + + EntityList . EntityEggInfo entityegginfo = ItemMonsterPlacer . getEggInfo ( p _ 82790 _ 1 _ ) ; 
 + return entityegginfo ! = null ? ( p _ 82790 _ 2 _ = = 0 ? entityegginfo . field _ 75611 _ b : entityegginfo . field _ 75612 _ c ) : 16777215 ; 
 + } 
 + 
 + @ @ - 77 , 7 + 77 , 7 @ @ 
 + if ( tileentity instanceof TileEntityMobSpawner ) 
 + { 
 + MobSpawnerBaseLogic mobspawnerbaselogic = ( ( TileEntityMobSpawner ) tileentity ) . func _ 145881 _ a ( ) ; 
 + - mobspawnerbaselogic . func _ 98272 _ a ( EntityList . func _ 75617 _ a ( p _ 180614 _ 1 _ . func _ 77960 _ j ( ) ) ) ; 
 + + mobspawnerbaselogic . func _ 98272 _ a ( ItemMonsterPlacer . getEntityName ( p _ 180614 _ 1 _ ) ) ; 
 + tileentity . func _ 70296 _ d ( ) ; 
 + p _ 180614 _ 3 _ . func _ 175689 _ h ( p _ 180614 _ 4 _ ) ; 
 + 
 + @ @ - 98 , 7 + 98 , 7 @ @ 
 + d0 = 0 . 5D ; 
 + } 
 + 
 + - Entity entity = func _ 77840 _ a ( p _ 180614 _ 3 _ , p _ 180614 _ 1 _ . func _ 77960 _ j ( ) , ( double ) p _ 180614 _ 4 _ . func _ 177958 _ n ( ) + 0 . 5D , ( double ) p _ 180614 _ 4 _ . func _ 177956 _ o ( ) + d0 , ( double ) p _ 180614 _ 4 _ . func _ 177952 _ p ( ) + 0 . 5D ) ; 
 + + Entity entity = spawnCreature ( p _ 180614 _ 3 _ , ItemMonsterPlacer . getEntityName ( p _ 180614 _ 1 _ ) , ( double ) p _ 180614 _ 4 _ . func _ 177958 _ n ( ) + 0 . 5D , ( double ) p _ 180614 _ 4 _ . func _ 177956 _ o ( ) + d0 , ( double ) p _ 180614 _ 4 _ . func _ 177952 _ p ( ) + 0 . 5D ) ; 
 + 
 + if ( entity ! = null ) 
 + { 
 + @ @ - 149 , 7 + 149 , 7 @ @ 
 + 
 + if ( p _ 77659 _ 2 _ . func _ 180495 _ p ( blockpos ) . func _ 177230 _ c ( ) instanceof BlockLiquid ) 
 + { 
 + - Entity entity = func _ 77840 _ a ( p _ 77659 _ 2 _ , p _ 77659 _ 1 _ . func _ 77960 _ j ( ) , ( double ) blockpos . func _ 177958 _ n ( ) + 0 . 5D , ( double ) blockpos . func _ 177956 _ o ( ) + 0 . 5D , ( double ) blockpos . func _ 177952 _ p ( ) + 0 . 5D ) ; 
 + + Entity entity = spawnCreature ( p _ 77659 _ 2 _ , ItemMonsterPlacer . getEntityName ( p _ 77659 _ 1 _ ) , ( double ) blockpos . func _ 177958 _ n ( ) + 0 . 5D , ( double ) blockpos . func _ 177956 _ o ( ) + 0 . 5D , ( double ) blockpos . func _ 177952 _ p ( ) + 0 . 5D ) ; 
 + 
 + if ( entity ! = null ) 
 + { 
 + @ @ - 173 , 19 + 173 , 29 @ @ 
 + } 
 + } 
 + 
 + + @ Deprecated / / Use string version below . 
 + public static Entity func _ 77840 _ a ( World p _ 77840 _ 0 _ , int p _ 77840 _ 1 _ , double p _ 77840 _ 2 _ , double p _ 77840 _ 4 _ , double p _ 77840 _ 6 _ ) 
 + { 
 + if ( ! EntityList . field _ 75627 _ a . containsKey ( Integer . valueOf ( p _ 77840 _ 1 _ ) ) ) 
 + { 
 + return null ; 
 + } 
 + + return spawnCreature ( p _ 77840 _ 0 _ , EntityList . func _ 75617 _ a ( p _ 77840 _ 1 _ ) , p _ 77840 _ 2 _ , p _ 77840 _ 4 _ , p _ 77840 _ 6 _ ) ; 
 + + } 
 + + 
 + + public static Entity spawnCreature ( World p _ 77840 _ 0 _ , String name , double p _ 77840 _ 2 _ , double p _ 77840 _ 4 _ , double p _ 77840 _ 6 _ ) 
 + + { 
 + + if ( ! EntityList . field _ 75625 _ b . containsKey ( name ) ) 
 + + { 
 + + return null ; 
 + + } 
 + else 
 + { 
 + Entity entity = null ; 
 + 
 + for ( int j = 0 ; j < 1 ; + + j ) 
 + { 
 + - entity = EntityList . func _ 75616 _ a ( p _ 77840 _ 1 _ , p _ 77840 _ 0 _ ) ; 
 + + entity = EntityList . func _ 75620 _ a ( name , p _ 77840 _ 0 _ ) ; 
 + 
 + if ( entity instanceof EntityLivingBase ) 
 + { 
 + @ @ - 213 , 5 + 223 , 28 @ @ 
 + EntityList . EntityEggInfo entityegginfo = ( EntityList . EntityEggInfo ) iterator . next ( ) ; 
 + p _ 150895 _ 3 _ . add ( new ItemStack ( p _ 150895 _ 1 _ , 1 , entityegginfo . field _ 75613 _ a ) ) ; 
 + } 
 + + 
 + + for ( String name : net . minecraftforge . fml . common . registry . EntityRegistry . getEggs ( ) . keySet ( ) ) 
 + + { 
 + + ItemStack stack = new ItemStack ( p _ 150895 _ 1 _ ) ; 
 + + net . minecraft . nbt . NBTTagCompound nbt = new net . minecraft . nbt . NBTTagCompound ( ) ; 
 + + nbt . func _ 74778 _ a ( " entity _ name " , name ) ; 
 + + stack . func _ 77982 _ d ( nbt ) ; 
 + + p _ 150895 _ 3 _ . add ( stack ) ; 
 + + } 
 + } 
 + + 
 + + private static String getEntityName ( ItemStack stack ) 
 + + { 
 + + if ( stack . func _ 77942 _ o ( ) & & stack . func _ 77978 _ p ( ) . func _ 150297 _ b ( " entity _ name " , 8 ) ) 
 + + return stack . func _ 77978 _ p ( ) . func _ 74779 _ i ( " entity _ name " ) ; 
 + + return EntityList . func _ 75617 _ a ( stack . func _ 77960 _ j ( ) ) ; 
 + + } 
 + + 
 + + private static EntityList . EntityEggInfo getEggInfo ( ItemStack stack ) 
 + + { 
 + + if ( stack . func _ 77942 _ o ( ) & & stack . func _ 77978 _ p ( ) . func _ 150297 _ b ( " entity _ name " , 8 ) ) 
 + + net . minecraftforge . fml . common . registry . EntityRegistry . getEggs ( ) . get ( stack . func _ 77978 _ p ( ) . func _ 74779 _ i ( " entity _ name " ) ) ; 
 + + return ( EntityList . EntityEggInfo ) EntityList . field _ 75627 _ a . get ( stack . func _ 77960 _ j ( ) ) ; 
 + + } 
 + } 
 diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java b / fml / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java 
 index 5bcea3f . . 6e4c099 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / registry / EntityRegistry . java 
 @ @ - 13 , 6 + 13 , 7 @ @ 
 package net . minecraftforge . fml . common . registry ; 
 
 import java . util . BitSet ; 
 + import java . util . Collections ; 
 import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . Map ; 
 @ @ - 117 , 6 + 118 , 9 @ @ public class EntityRegistry 
 private ListMultimap < ModContainer , EntityRegistration > entityRegistrations = ArrayListMultimap . create ( ) ; 
 private Map < String , ModContainer > entityNames = Maps . newHashMap ( ) ; 
 private BiMap < Class < ? extends Entity > , EntityRegistration > entityClassRegistrations = HashBiMap . create ( ) ; 
 + private Map < String , EntityList . EntityEggInfo > entityEggs = Maps . newHashMap ( ) ; 
 + private Map < String , EntityList . EntityEggInfo > entityEggsUn = Collections . unmodifiableMap ( entityEggs ) ; 
 + 
 public static EntityRegistry instance ( ) 
 { 
 return INSTANCE ; 
 @ @ - 148 , 6 + 152 , 26 @ @ public class EntityRegistry 
 instance ( ) . doModEntityRegistration ( entityClass , entityName , id , mod , trackingRange , updateFrequency , sendsVelocityUpdates ) ; 
 } 
 
 + / * * 
 + * Register the mod entity type with FML 
 + * This will also register a spawn egg . 
 + 
 + * @ param entityClass The entity class 
 + * @ param entityName A unique name for the entity 
 + * @ param id A mod specific ID for the entity 
 + * @ param mod The mod 
 + * @ param trackingRange The range at which MC will send tracking updates 
 + * @ param updateFrequency The frequency of tracking updates 
 + * @ param sendsVelocityUpdates Whether to send velocity information packets as well 
 + * @ param eggPrimary Primary egg color 
 + * @ param eggSecondary Secondary egg color 
 + * / 
 + public static void registerModEntity ( Class < ? extends Entity > entityClass , String entityName , int id , Object mod , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates , int eggPrimary , int eggSecondary ) 
 + { 
 + instance ( ) . doModEntityRegistration ( entityClass , entityName , id , mod , trackingRange , updateFrequency , sendsVelocityUpdates ) ; 
 + EntityRegistry . registerEgg ( entityClass , eggPrimary , eggSecondary ) ; 
 + } 
 + 
 @ SuppressWarnings ( " unchecked " ) 
 private void doModEntityRegistration ( Class < ? extends Entity > entityClass , String entityName , int id , Object mod , int trackingRange , int updateFrequency , boolean sendsVelocityUpdates ) 
 { 
 @ @ - 177 , 6 + 201 , 40 @ @ public class EntityRegistry 
 entityRegistrations . put ( mc , er ) ; 
 } 
 
 + / * * 
 + * Registers a spawn egg for the specified entity class . 
 + * The class must already be registered in the EntityList . classToStringMapping . 
 + * This can be done either by using the global ID system , or preferably the registerModEntity functions above . 
 + * Once registered mob eggs can be created by using minecraft : spawn _ egg with NBT entry ' entity _ name ' with 
 + * value of the name this class is registered in the classToStringMapping with . 
 + * 
 + * @ param entityClass The entity class 
 + * @ param primary Primary egg color 
 + * @ param secondary Secondary egg color 
 + * 
 + * @ throws IllegalArgumentException if entityClass is not registered in classToStringMapping . 
 + * 
 + * / 
 + public static void registerEgg ( Class < ? extends Entity > entityClass , int primary , int secondary ) 
 + { 
 + if ( ! EntityList . classToStringMapping . containsKey ( entityClass ) ) 
 + throw new IllegalArgumentException ( " Entity not registered in classToString map : " + entityClass ) ; 
 + 
 + String name = ( String ) EntityList . classToStringMapping . get ( entityClass ) ; 
 + EntityRegistry . instance ( ) . entityEggs . put ( name , new EntityList . EntityEggInfo ( name , primary , secondary ) ) ; 
 + FMLLog . fine ( " Registering entity egg ' % s ' for % s " , name , entityClass ) ; 
 + } 
 + 
 + / * * 
 + * Returns a Unmodifiable view of the registered entity eggs list . 
 + * 
 + * @ return An Unmodifiable view of the registered entity eggs list . 
 + * / 
 + public static Map < String , EntityList . EntityEggInfo > getEggs ( ) 
 + { 
 + return instance ( ) . entityEggsUn ; 
 + } 
 + 
 public static void registerGlobalEntityID ( Class < ? extends Entity > entityClass , String entityName , int id ) 
 { 
 if ( EntityList . classToStringMapping . containsKey ( entityClass ) ) 
 diff - - git a / fml / src / main / resources / fml . exc b / fml / src / main / resources / fml . exc 
 index 860fdd9 . . 9d98f14 100644 
 - - - a / fml / src / main / resources / fml . exc 
 + + + b / fml / src / main / resources / fml . exc 
 @ @ - 1 + 1 , 2 @ @ 
 net / minecraft / server / management / ServerConfigurationManager . initializeConnectionToPlayer ( Lnet / minecraft / network / NetworkManager ; Lnet / minecraft / entity / player / EntityPlayerMP ; Lnet / minecraft / network / NetHandlerPlayServer ; ) V = | p _ 72355 _ 1 _ , p _ 72355 _ 2 _ , nethandlerplayserver 
 + net / minecraft / item / ItemMonsterPlacer . spawnCreature ( Lnet / minecraft / world / World ; Ljava / lang / String ; DDD ) Lnet / minecraft / entity / Entity ; = | p _ 77840 _ 0 _ , name , p _ 77840 _ 2 _ , p _ 77840 _ 4 _ , p _ 77840 _ 6 _

NEAREST DIFF:
diff - - git a / fml / build . xml b / fml / build . xml 
 index f10e348 . . d4351ea 100644 
 - - - a / fml / build . xml 
 + + + b / fml / build . xml 
 @ @ - 126 , 6 + 126 , 7 @ @ 
 < side prop = " merge - to " src = " mcp . srcdir " side = " $ { side } " / > 
 < side prop = " side - from " src = " src . dir " side = " $ { side } " / > 
 
 + < delete dir = " $ { merge - to } / argo " / > 
 < copy todir = " $ { merge - to } " overwrite = " true " verbose = " true " > 
 < fileset dir = " $ { side - from } " includes = " * * / * . java " / > 
 < fileset dir = " $ { common . src . dir } " includes = " * * / * . java " / > 
 diff - - git a / fml / client / cpw / mods / fml / client / FMLClientHandler . java b / fml / client / cpw / mods / fml / client / FMLClientHandler . java 
 index adcde06 . . 4ce2275 100644 
 - - - a / fml / client / cpw / mods / fml / client / FMLClientHandler . java 
 + + + b / fml / client / cpw / mods / fml / client / FMLClientHandler . java 
 @ @ - 794 , 11 + 794 , 11 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 @ Override 
 public ModMetadata readMetadataFrom ( InputStream input , ModContainer mod ) throws Exception 
 { 
 - JsonNode root = new JdomParser ( ) . func _ 27366 _ a ( new InputStreamReader ( input ) ) ; 
 - List < JsonNode > lst = root . func _ 27217 _ b ( ) ; 
 + JsonNode root = new JdomParser ( ) . parse ( new InputStreamReader ( input ) ) ; 
 + List < JsonNode > lst = root . getArrayNode ( ) ; 
 JsonNode modinfo = null ; 
 for ( JsonNode tmodinfo : lst ) { 
 - if ( mod . getName ( ) . equals ( tmodinfo . func _ 27213 _ a ( " modid " ) ) ) { 
 + if ( mod . getName ( ) . equals ( tmodinfo . getStringValue ( " modid " ) ) ) { 
 modinfo = tmodinfo ; 
 break ; 
 } 
 @ @ - 809 , 23 + 809 , 23 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 } 
 ModMetadata meta = new ModMetadata ( mod ) ; 
 try { 
 - meta . name = modinfo . func _ 27213 _ a ( " name " ) ; 
 - meta . description = modinfo . func _ 27213 _ a ( " description " ) . replace ( " \ r " , " " ) ; 
 - meta . version = modinfo . func _ 27213 _ a ( " version " ) ; 
 - meta . credits = modinfo . func _ 27213 _ a ( " credits " ) ; 
 - List authors = modinfo . func _ 27217 _ b ( " authors " ) ; 
 + meta . name = modinfo . getStringValue ( " name " ) ; 
 + meta . description = modinfo . getStringValue ( " description " ) . replace ( " \ r " , " " ) ; 
 + meta . version = modinfo . getStringValue ( " version " ) ; 
 + meta . credits = modinfo . getStringValue ( " credits " ) ; 
 + List < JsonNode > authors = modinfo . getArrayNode ( " authors " ) ; 
 StringBuilder sb = new StringBuilder ( ) ; 
 for ( int i = 0 ; i < authors . size ( ) ; i + + ) { 
 - meta . authorList . add ( ( ( JsonNode ) authors . get ( i ) ) . func _ 27216 _ b ( ) ) ; 
 + meta . authorList . add ( ( ( JsonNode ) authors . get ( i ) ) . getText ( ) ) ; 
 } 
 - meta . logoFile = modinfo . func _ 27213 _ a ( " logoFile " ) ; 
 - meta . url = modinfo . func _ 27213 _ a ( " url " ) ; 
 - meta . updateUrl = modinfo . func _ 27213 _ a ( " updateUrl " ) ; 
 - meta . parent = modinfo . func _ 27213 _ a ( " parent " ) ; 
 - List screenshots = modinfo . func _ 27217 _ b ( " screenshots " ) ; 
 + meta . logoFile = modinfo . getStringValue ( " logoFile " ) ; 
 + meta . url = modinfo . getStringValue ( " url " ) ; 
 + meta . updateUrl = modinfo . getStringValue ( " updateUrl " ) ; 
 + meta . parent = modinfo . getStringValue ( " parent " ) ; 
 + List < JsonNode > screenshots = modinfo . getArrayNode ( " screenshots " ) ; 
 meta . screenshots = new String [ screenshots . size ( ) ] ; 
 for ( int i = 0 ; i < screenshots . size ( ) ; i + + ) { 
 - meta . screenshots [ i ] = ( ( JsonNode ) screenshots . get ( i ) ) . func _ 27216 _ b ( ) ; 
 + meta . screenshots [ i ] = ( ( JsonNode ) screenshots . get ( i ) ) . getText ( ) ; 
 } 
 } catch ( Exception e ) { 
 FMLCommonHandler . instance ( ) . getFMLLogger ( ) . log ( Level . FINE , String . format ( " An error occured reading the info file for % s " , mod . getName ( ) ) , e ) ; 
 @ @ - 918 , 15 + 918 , 6 @ @ public class FMLClientHandler implements IFMLSidedHandler 
 Profiler . func _ 40662 _ b ( ) ; 
 } 
 
 - / * * 
 - * 
 - * / 
 - public void preGameLoad ( String [ ] args ) 
 - { 
 - / / Currently this does nothing , but it ' s possible I could relaunch Minecraft in a new classloader if I wished 
 - Minecraft . fmlReentry ( args ) ; 
 - } 
 - 
 public void onTexturePackChange ( RenderEngine engine , TexturePackBase texturepack , List < TextureFX > effects ) 
 { 
 FMLClientHandler . instance ( ) . pruneOldTextureFX ( texturepack , effects ) ; 
 diff - - git a / fml / common / cpw / mods / fml / relauncher / ArgsWrapper . java b / fml / common / cpw / mods / fml / relauncher / ArgsWrapper . java 
 new file mode 100644 
 index 0000000 . . 141b9cd 
 - - - / dev / null 
 + + + b / fml / common / cpw / mods / fml / relauncher / ArgsWrapper . java 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + package cpw . mods . fml . relauncher ; 
 + 
 + public class ArgsWrapper 
 + { 
 + public ArgsWrapper ( String [ ] args ) 
 + { 
 + this . args = args ; 
 + } 
 + 
 + public String [ ] args ; 
 + } 
 diff - - git a / fml / common / cpw / mods / fml / relauncher / FMLEmbeddingRelauncher . java b / fml / common / cpw / mods / fml / relauncher / FMLEmbeddingRelauncher . java 
 new file mode 100644 
 index 0000000 . . d924f81 
 - - - / dev / null 
 + + + b / fml / common / cpw / mods / fml / relauncher / FMLEmbeddingRelauncher . java 
 @ @ - 0 , 0 + 1 , 48 @ @ 
 + package cpw . mods . fml . relauncher ; 
 + 
 + import java . lang . reflect . Field ; 
 + import java . lang . reflect . InvocationTargetException ; 
 + import java . net . URLClassLoader ; 
 + 
 + import net . minecraft . client . Minecraft ; 
 + import net . minecraft . src . WorldSettings ; 
 + 
 + public class FMLEmbeddingRelauncher 
 + { 
 + private static FMLEmbeddingRelauncher INSTANCE ; 
 + private RelaunchClassLoader clientLoader ; 
 + private RelaunchClassLoader serverLoader ; 
 + 
 + public static void relaunch ( ArgsWrapper wrap ) 
 + { 
 + INSTANCE = new FMLEmbeddingRelauncher ( ) ; 
 + INSTANCE . relaunchClient ( wrap ) ; 
 + } 
 + 
 + private FMLEmbeddingRelauncher ( ) 
 + { 
 + URLClassLoader ucl = ( URLClassLoader ) getClass ( ) . getClassLoader ( ) ; 
 + 
 + clientLoader = new RelaunchClassLoader ( ucl . getURLs ( ) ) ; 
 + serverLoader = new RelaunchClassLoader ( ucl . getURLs ( ) ) ; 
 + } 
 + 
 + private void relaunchClient ( ArgsWrapper wrap ) 
 + { 
 + try 
 + { 
 + Class < ? > original = Class . forName ( " net . minecraft . client . Minecraft " , false , getClass ( ) . getClassLoader ( ) ) ; 
 + Field origDir = original . getDeclaredField ( " field _ 6275 _ Z " ) ; 
 + origDir . setAccessible ( true ) ; 
 + Class client = Class . forName ( " net . minecraft . client . Minecraft " , false , clientLoader ) ; 
 + Field homeDir = client . getDeclaredField ( " field _ 6275 _ Z " ) ; 
 + homeDir . setAccessible ( true ) ; 
 + homeDir . set ( null , origDir . get ( null ) ) ; 
 + client . getMethod ( " fmlReentry " , ArgsWrapper . class ) . invoke ( null , wrap ) ; 
 + } 
 + catch ( Exception e ) 
 + { 
 + e . printStackTrace ( ) ; 
 + } 
 + } 
 + } 
 diff - - git a / fml / common / cpw / mods / fml / relauncher / RelaunchClassLoader . java b / fml / common / cpw / mods / fml / relauncher / RelaunchClassLoader . java 
 new file mode 100644 
 index 0000000 . . 5a4e720 
 - - - / dev / null 
 + + + b / fml / common / cpw / mods / fml / relauncher / RelaunchClassLoader . java 
 @ @ - 0 , 0 + 1 , 31 @ @ 
 + package cpw . mods . fml . relauncher ; 
 + 
 + import java . net . URL ; 
 + import java . net . URLClassLoader ; 
 + import java . util . Arrays ; 
 + 
 + public class RelaunchClassLoader extends URLClassLoader 
 + { 
 + public RelaunchClassLoader ( URL [ ] sources ) 
 + { 
 + super ( sources ) ; 
 + System . out . println ( Arrays . toString ( sources ) ) ; 
 + } 
 + 
 + @ Override 
 + public Class < ? > loadClass ( String name ) throws ClassNotFoundException 
 + { 
 + if ( name . startsWith ( " cpw . mods . fml . relauncher " ) ) 
 + { 
 + return super . loadClass ( name ) ; 
 + } 
 + try 
 + { 
 + return findClass ( name ) ; 
 + } 
 + catch ( ClassNotFoundException cnfe ) 
 + { 
 + return super . loadClass ( name ) ; 
 + } 
 + } 
 + } 
 diff - - git a / fml / eclipse / FML - Client / . classpath b / fml / eclipse / FML - Client / . classpath 
 index d2da61e . . d750167 100644 
 - - - a / fml / eclipse / FML - Client / . classpath 
 + + + b / fml / eclipse / FML - Client / . classpath 
 @ @ - 20 , 5 + 20 , 6 @ @ 
 	 	 < / attributes > 
 	 < / classpathentry > 
 	 < classpathentry kind = " lib " path = " jars / bin / minecraft . jar " / > 
 + 	 < classpathentry kind = " lib " path = " / home / cpw / projects / FML / mcsnapshot / lib / argo - 2 . 25 . jar " / > 
 	 < classpathentry kind = " output " path = " bin " / > 
 < / classpath > 
 diff - - git a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 index 82f67e0 . . 8083e15 100644 
 - - - a / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 @ @ - 1 , 16 + 1 , 18 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / client / Minecraft . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 
 + + + . . / src - work / minecraft / net / minecraft / client / Minecraft . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 
 - @ @ - 120 , 6 + 120 , 9 @ @ 
 + @ @ - 120 , 6 + 120 , 11 @ @ 
 import org . lwjgl . opengl . PixelFormat ; 
 import org . lwjgl . util . glu . GLU ; 
 
 + import cpw . mods . fml . client . FMLClientHandler ; 
 + import cpw . mods . fml . common . FMLCommonHandler ; 
 + + import cpw . mods . fml . relauncher . ArgsWrapper ; 
 + + import cpw . mods . fml . relauncher . FMLEmbeddingRelauncher ; 
 + 
 public abstract class Minecraft implements IPlayerUsage , Runnable 
 { 
 public static byte [ ] field _ 28006 _ b = new byte [ 10485760 ] ; 
 - @ @ - 301 , 6 + 304 , 7 @ @ 
 + @ @ - 301 , 6 + 306 , 7 @ @ 
 this . field _ 6315 _ n = new RenderEngine ( this . field _ 6298 _ C , this . field _ 6304 _ y ) ; 
 this . func _ 6257 _ q ( ) ; 
 this . field _ 6314 _ o = new FontRenderer ( this . field _ 6304 _ y , " / font / default . png " , this . field _ 6315 _ n , false ) ; 
 @ @ - 18 , 7 + 20 , 7 @ @ 
 this . field _ 40007 _ r = new FontRenderer ( this . field _ 6304 _ y , " / font / alternate . png " , this . field _ 6315 _ n , false ) ; 
 
 if ( this . field _ 6304 _ y . field _ 44018 _ Q ! = null ) 
 - @ @ - 332 , 6 + 336 , 9 @ @ 
 + @ @ - 332 , 6 + 338 , 9 @ @ 
 GL11 . glMatrixMode ( GL11 . GL _ PROJECTION ) ; 
 GL11 . glLoadIdentity ( ) ; 
 GL11 . glMatrixMode ( GL11 . GL _ MODELVIEW ) ; 
 @ @ - 28 , 9 + 30 , 9 @ @ 
 this . func _ 6250 _ c ( " Startup " ) ; 
 this . field _ 6301 _ A . func _ 340 _ a ( this . field _ 6304 _ y ) ; 
 this . field _ 6315 _ n . func _ 1066 _ a ( this . field _ 9231 _ Y ) ; 
 - @ @ - 1337 , 11 + 1344 , 13 @ @ 
 + @ @ - 1318 , 11 + 1327 , 13 @ @ 
 
 - public void func _ 6246 _ i ( ) throws IOException 
 + public void func _ 6246 _ i ( ) 
 { 
 + FMLCommonHandler . instance ( ) . rescheduleTicks ( ) ; 
 if ( this . field _ 35001 _ ab > 0 ) 
 @ @ - 42 , 7 + 44 , 7 @ @ 
 Profiler . func _ 40663 _ a ( " stats " ) ; 
 this . field _ 25001 _ G . func _ 27178 _ d ( ) ; 
 Profiler . func _ 40661 _ c ( " gui " ) ; 
 - @ @ - 1710 , 6 + 1719 , 7 @ @ 
 + @ @ - 1691 , 6 + 1702 , 7 @ @ 
 } 
 
 Profiler . func _ 40662 _ b ( ) ; 
 @ @ - 50 , 7 + 52 , 7 @ @ 
 this . field _ 6287 _ N = System . currentTimeMillis ( ) ; 
 } 
 
 - @ @ - 1854 , 6 + 1864 , 7 @ @ 
 + @ @ - 1849 , 6 + 1861 , 7 @ @ 
 
 System . gc ( ) ; 
 this . field _ 6287 _ N = 0L ; 
 @ @ - 58 , 14 + 60 , 15 @ @ 
 } 
 
 public void func _ 6268 _ a ( String p _ 6268 _ 1 _ , File p _ 6268 _ 2 _ ) 
 - @ @ - 1944 , 6 + 1955 , 10 @ @ 
 + @ @ - 1940 , 6 + 1953 , 11 @ @ 
 
 public static void main ( String [ ] p _ main _ 0 _ ) 
 { 
 - + FMLClientHandler . instance ( ) . preGameLoad ( p _ main _ 0 _ ) ; 
 + + FMLEmbeddingRelauncher . relaunch ( new ArgsWrapper ( p _ main _ 0 _ ) ) ; 
 + } 
 - + public static void fmlReentry ( String [ ] p _ main _ 0 _ ) 
 + + public static void fmlReentry ( ArgsWrapper wrapper ) 
 + { 
 + + String [ ] p _ main _ 0 _ = wrapper . args ; 
 HashMap var1 = new HashMap ( ) ; 
 boolean var2 = false ; 
 boolean var3 = true ; 
 diff - - git a / fml / patches / minecraft / net / minecraft / src / GuiMainMenu . java . patch b / fml / patches / minecraft / net / minecraft / src / GuiMainMenu . java . patch 
 index d0d7e93 . . f962ba9 100644 
 - - - a / fml / patches / minecraft / net / minecraft / src / GuiMainMenu . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / src / GuiMainMenu . java . patch 
 @ @ - 39 , 7 + 39 , 7 @ @ 
 + } 
 if ( p _ 572 _ 1 _ . field _ 938 _ f = = 11 ) 
 { 
 - this . field _ 945 _ b . func _ 56442 _ a ( " Demo _ World " , DemoWorldServer . field _ 56874 _ a ) ; 
 + this . field _ 945 _ b . func _ 58039 _ a ( " Demo _ World " , " Demo _ World " , DemoWorldServer . field _ 56874 _ a ) ; 
 @ @ - 399 , 7 + 409 , 11 @ @ 
 var9 = var9 + " Demo " ; 
 } 
 diff - - git a / fml / patches / minecraft / net / minecraft / src / NetClientHandler . java . patch b / fml / patches / minecraft / net / minecraft / src / NetClientHandler . java . patch 
 index fc19b95 . . b4c7180 100644 
 - - - a / fml / patches / minecraft / net / minecraft / src / NetClientHandler . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / src / NetClientHandler . java . patch 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / src / NetClientHandler . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 
 + + + . . / src - work / minecraft / net / minecraft / src / NetClientHandler . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 
 - @ @ - 22 , 6 + 22 , 8 @ @ 
 + @ @ - 20 , 6 + 20 , 8 @ @ 
 import net . minecraft . client . Minecraft ; 
 import org . lwjgl . input . Keyboard ; 
 
 @ @ - 9 , 7 + 9 , 7 @ @ 
 public class NetClientHandler extends NetHandler 
 { 
 private boolean field _ 55324 _ f = false ; 
 - @ @ - 1157 , 4 + 1159 , 13 @ @ 
 + @ @ - 1165 , 4 + 1167 , 13 @ @ 
 { 
 return this . field _ 1213 _ d ; 
 } 
 diff - - git a / fml / patches / minecraft / net / minecraft / src / StatFileWriter . java . patch b / fml / patches / minecraft / net / minecraft / src / StatFileWriter . java . patch 
 new file mode 100644 
 index 0000000 . . f88f0d3 
 - - - / dev / null 
 + + + b / fml / patches / minecraft / net / minecraft / src / StatFileWriter . java . patch 
 @ @ - 0 , 0 + 1 , 34 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / src / StatFileWriter . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 
 + + + + . . / src - work / minecraft / net / minecraft / src / StatFileWriter . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 
 + @ @ - 124 , 17 + 124 , 17 @ @ 
 + { 
 + String var2 = " local " ; 
 + StringBuilder var3 = new StringBuilder ( ) ; 
 + - JsonRootNode var4 = ( new JdomParser ( ) ) . func _ 27367 _ a ( p _ 27177 _ 0 _ ) ; 
 + - List var5 = var4 . func _ 27217 _ b ( new Object [ ] { " stats - change " } ) ; 
 + + JsonRootNode var4 = ( new JdomParser ( ) ) . parse ( p _ 27177 _ 0 _ ) ; 
 + + List var5 = var4 . getArrayNode ( new Object [ ] { " stats - change " } ) ; 
 + Iterator var6 = var5 . iterator ( ) ; 
 + 
 + while ( var6 . hasNext ( ) ) 
 + { 
 + JsonNode var7 = ( JsonNode ) var6 . next ( ) ; 
 + - Map var8 = var7 . func _ 27214 _ c ( ) ; 
 + + Map var8 = var7 . getFields ( ) ; 
 + Entry var9 = ( Entry ) var8 . entrySet ( ) . iterator ( ) . next ( ) ; 
 + - int var10 = Integer . parseInt ( ( ( JsonStringNode ) var9 . getKey ( ) ) . func _ 27216 _ b ( ) ) ; 
 + - int var11 = Integer . parseInt ( ( ( JsonNode ) var9 . getValue ( ) ) . func _ 27216 _ b ( ) ) ; 
 + + int var10 = Integer . parseInt ( ( ( JsonStringNode ) var9 . getKey ( ) ) . getText ( ) ) ; 
 + + int var11 = Integer . parseInt ( ( ( JsonNode ) var9 . getValue ( ) ) . getText ( ) ) ; 
 + StatBase var12 = StatList . func _ 27361 _ a ( var10 ) ; 
 + 
 + if ( var12 = = null ) 
 + @ @ - 152 , 7 + 152 , 7 @ @ 
 + MD5String var14 = new MD5String ( var2 ) ; 
 + String var15 = var14 . func _ 27369 _ a ( var3 . toString ( ) ) ; 
 + 
 + - if ( ! var15 . equals ( var4 . func _ 27213 _ a ( new Object [ ] { " checksum " } ) ) ) 
 + + if ( ! var15 . equals ( var4 . getNode ( new Object [ ] { " checksum " } ) ) ) 
 + { 
 + System . out . println ( " CHECKSUM MISMATCH " ) ; 
 + return null ; 
 diff - - git a / fml / patches / minecraft / net / minecraft / src / World . java . patch b / fml / patches / minecraft / net / minecraft / src / World . java . patch 
 index 75b95e4 . . f3d419d 100644 
 - - - a / fml / patches / minecraft / net / minecraft / src / World . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / src / World . java . patch 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / src / World . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 
 + + + . . / src - work / minecraft / net / minecraft / src / World . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 
 - @ @ - 3320 , 7 + 3320 , 7 @ @ 
 + @ @ - 3322 , 7 + 3322 , 7 @ @ 
 
 public double func _ 46068 _ G ( ) 
 { 
 diff - - git a / fml / patches / minecraft _ server / net / minecraft / src / ChunkProviderServer . java . patch b / fml / patches / minecraft _ server / net / minecraft / src / ChunkProviderServer . java . patch 
 index d869896 . . 76fda3e 100644 
 - - - a / fml / patches / minecraft _ server / net / minecraft / src / ChunkProviderServer . java . patch 
 + + + b / fml / patches / minecraft _ server / net / minecraft / src / ChunkProviderServer . java . patch 
 @ @ - 9 , 7 + 9 , 7 @ @ 
 public class ChunkProviderServer implements IChunkProvider 
 { 
 private Set field _ 725 _ a = new HashSet ( ) ; 
 - @ @ - 173 , 6 + 175 , 7 @ @ 
 + @ @ - 177 , 6 + 179 , 7 @ @ 
 if ( this . field _ 730 _ c ! = null ) 
 { 
 this . field _ 730 _ c . func _ 4055 _ a ( p _ 4055 _ 1 _ , p _ 4055 _ 2 _ , p _ 4055 _ 3 _ ) ; 
 diff - - git a / fml / patches / minecraft _ server / net / minecraft / src / Entity . java . patch b / fml / patches / minecraft _ server / net / minecraft / src / Entity . java . patch 
 index 127adfd . . 5beea42 100644 
 - - - a / fml / patches / minecraft _ server / net / minecraft / src / Entity . java . patch 
 + + + b / fml / patches / minecraft _ server / net / minecraft / src / Entity . java . patch 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft _ server / net / minecraft / src / Entity . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 
 + + + . . / src - work / minecraft _ server / net / minecraft / src / Entity . java 	 0000 - 00 - 00 00 : 00 : 00 . 000000000 - 0000 
 - @ @ - 1525 , 4 + 1525 , 8 @ @ 
 + @ @ - 1539 , 4 + 1539 , 8 @ @ 
 { 
 return String . format ( " % s [ \ ' % s \ ' / % d , l = \ ' % s \ ' , x = % . 2f , y = % . 2f , z = % . 2f ] " , new Object [ ] { this . getClass ( ) . getSimpleName ( ) , this . func _ 35150 _ Y ( ) , Integer . valueOf ( this . field _ 331 _ c ) , this . field _ 9093 _ l = = null ? " ~ NULL ~ " : this . field _ 9093 _ l . func _ 22081 _ n ( ) . func _ 55310 _ h ( ) , Double . valueOf ( this . field _ 322 _ l ) , Double . valueOf ( this . field _ 321 _ m ) , Double . valueOf ( this . field _ 320 _ n ) } ) ; 
 } 
 diff - - git a / fml / patches / minecraft _ server / net / minecraft / src / NetServerHandler . java . patch b / fml / patches / minecraft _ server / net / minecraft / src / NetServerHandler . java . patch 
 index df87718 . . ee18da9 100644 
 - - - a / fml / patches / minecraft _ server / net / minecraft / src / NetServerHandler . java . patch 
 + + + b / fml / patches / minecraft _ server / net / minecraft / src / NetServerHandler . java . patch 
 @ @ - 9 , 7 + 9 , 7 @ @ 
 import net . minecraft . server . MinecraftServer ; 
 
 public class NetServerHandler extends NetHandler 
 - @ @ - 1011 , 4 + 1013 , 9 @ @ 
 + @ @ - 1014 , 4 + 1016 , 9 @ @ 
 } 
 } 
 } 
 diff - - git a / fml / patches / minecraft _ server / net / minecraft / src / ServerConfigurationManager . java . patch b / fml / patches / minecraft _ server / net / minecraft / src / ServerConfigurationManager . java . patch 
 index 8bc2914 . . b8a3b0a 100644 
 - - - a / fml / patches / minecraft _ server / net / minecraft / src / ServerConfigurationManager . java . patch 
 + + + b / fml / patches / minecraft _ server / net / minecraft / src / ServerConfigurationManager . java . patch 
 @ @ - 9 , 7 + 9 , 7 @ @ 
 import net . minecraft . server . MinecraftServer ; 
 
 public abstract class ServerConfigurationManager 
 - @ @ - 359 , 6 + 361 , 8 @ @ 
 + @ @ - 355 , 6 + 357 , 8 @ @ 
 p _ 28168 _ 1 _ . field _ 425 _ ad . func _ 35694 _ a ( var5 ) ; 
 this . func _ 28170 _ a ( p _ 28168 _ 1 _ , var5 ) ; 
 this . func _ 30008 _ g ( p _ 28168 _ 1 _ ) ;
