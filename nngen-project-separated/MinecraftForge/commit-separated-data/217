BLEU SCORE: 0.03089055318156698

TEST MSG: Added Fluid Place Block Event for when fluid changes blocks in world .
GENERATED MSG: Add Farmland Trample Event

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / block / BlockDynamicLiquid . java . patch b / patches / minecraft / net / minecraft / block / BlockDynamicLiquid . java . patch <nl> index 00faef8 . . 6cb2700 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / BlockDynamicLiquid . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / BlockDynamicLiquid . java . patch <nl> @ @ - 17 , 6 + 17 , 15 @ @ <nl> { <nl> IBlockState iblockstate = p _ 180650 _ 1 _ . func _ 180495 _ p ( p _ 180650 _ 2 _ . func _ 177977 _ b ( ) ) ; <nl> <nl> + @ @ - 118 , 7 + 119 , 7 @ @ <nl> + { <nl> + if ( this . field _ 149764 _ J = = Material . field _ 151587 _ i & & p _ 180650 _ 1 _ . func _ 180495 _ p ( p _ 180650 _ 2 _ . func _ 177977 _ b ( ) ) . func _ 185904 _ a ( ) = = Material . field _ 151586 _ h ) <nl> + { <nl> + - p _ 180650 _ 1 _ . func _ 175656 _ a ( p _ 180650 _ 2 _ . func _ 177977 _ b ( ) , Blocks . field _ 150348 _ b . func _ 176223 _ P ( ) ) ; <nl> + + p _ 180650 _ 1 _ . func _ 175656 _ a ( p _ 180650 _ 2 _ . func _ 177977 _ b ( ) , net . minecraftforge . event . ForgeEventFactory . fireFluidPlaceBlockEvent ( p _ 180650 _ 1 _ , p _ 180650 _ 2 _ . func _ 177977 _ b ( ) , p _ 180650 _ 2 _ , Blocks . field _ 150348 _ b . func _ 176223 _ P ( ) ) ) ; <nl> + this . func _ 180688 _ d ( p _ 180650 _ 1 _ , p _ 180650 _ 2 _ . func _ 177977 _ b ( ) ) ; <nl> + return ; <nl> + } <nl> @ @ - 166 , 6 + 167 , 7 @ @ <nl> } <nl> else <nl> diff - - git a / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch b / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch <nl> index 56847f0 . . cabce54 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / block / BlockFarmland . java <nl> + + + . . / src - work / minecraft / net / minecraft / block / BlockFarmland . java <nl> - @ @ - 72 , 9 + 72 , 10 @ @ <nl> + @ @ - 72 , 7 + 72 , 7 @ @ <nl> <nl> public void func _ 180658 _ a ( World p _ 180658 _ 1 _ , BlockPos p _ 180658 _ 2 _ , Entity p _ 180658 _ 3 _ , float p _ 180658 _ 4 _ ) <nl> { <nl> @ @ - 9 , 9 + 9 , 7 @ @ <nl> { <nl> func _ 190970 _ b ( p _ 180658 _ 1 _ , p _ 180658 _ 2 _ ) ; <nl> } <nl> - <nl> - super . func _ 180658 _ a ( p _ 180658 _ 1 _ , p _ 180658 _ 2 _ , p _ 180658 _ 3 _ , p _ 180658 _ 4 _ ) ; <nl> - @ @ - 95 , 7 + 96 , 7 @ @ <nl> + @ @ - 95 , 7 + 95 , 7 @ @ <nl> private boolean func _ 176529 _ d ( World p _ 176529 _ 1 _ , BlockPos p _ 176529 _ 2 _ ) <nl> { <nl> Block block = p _ 176529 _ 1 _ . func _ 180495 _ p ( p _ 176529 _ 2 _ . func _ 177984 _ a ( ) ) . func _ 177230 _ c ( ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / block / BlockLiquid . java . patch b / patches / minecraft / net / minecraft / block / BlockLiquid . java . patch <nl> index 778caf7 . . f5635a5 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / BlockLiquid . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / BlockLiquid . java . patch <nl> @ @ - 1 , 5 + 1 , 22 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / block / BlockLiquid . java <nl> + + + . . / src - work / minecraft / net / minecraft / block / BlockLiquid . java <nl> + @ @ - 284 , 14 + 284 , 14 @ @ <nl> + <nl> + if ( integer . intValue ( ) = = 0 ) <nl> + { <nl> + - p _ 176365 _ 1 _ . func _ 175656 _ a ( p _ 176365 _ 2 _ , Blocks . field _ 150343 _ Z . func _ 176223 _ P ( ) ) ; <nl> + + p _ 176365 _ 1 _ . func _ 175656 _ a ( p _ 176365 _ 2 _ , net . minecraftforge . event . ForgeEventFactory . fireFluidPlaceBlockEvent ( p _ 176365 _ 1 _ , p _ 176365 _ 2 _ , p _ 176365 _ 2 _ , Blocks . field _ 150343 _ Z . func _ 176223 _ P ( ) ) ) ; <nl> + this . func _ 180688 _ d ( p _ 176365 _ 1 _ , p _ 176365 _ 2 _ ) ; <nl> + return true ; <nl> + } <nl> + <nl> + if ( integer . intValue ( ) < = 4 ) <nl> + { <nl> + - p _ 176365 _ 1 _ . func _ 175656 _ a ( p _ 176365 _ 2 _ , Blocks . field _ 150347 _ e . func _ 176223 _ P ( ) ) ; <nl> + + p _ 176365 _ 1 _ . func _ 175656 _ a ( p _ 176365 _ 2 _ , net . minecraftforge . event . ForgeEventFactory . fireFluidPlaceBlockEvent ( p _ 176365 _ 1 _ , p _ 176365 _ 2 _ , p _ 176365 _ 2 _ , Blocks . field _ 150347 _ e . func _ 176223 _ P ( ) ) ) ; <nl> + this . func _ 180688 _ d ( p _ 176365 _ 1 _ , p _ 176365 _ 2 _ ) ; <nl> + return true ; <nl> + } <nl> @ @ - 452 , 4 + 452 , 29 @ @ <nl> { <nl> return BlockFaceShape . UNDEFINED ; <nl> diff - - git a / patches / minecraft / net / minecraft / block / BlockStaticLiquid . java . patch b / patches / minecraft / net / minecraft / block / BlockStaticLiquid . java . patch <nl> index 52938b4 . . 20d78ab 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / BlockStaticLiquid . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / BlockStaticLiquid . java . patch <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / block / BlockStaticLiquid . java <nl> + + + . . / src - work / minecraft / net / minecraft / block / BlockStaticLiquid . java <nl> - @ @ - 52 , 14 + 52 , 14 @ @ <nl> + @ @ - 52 , 22 + 52 , 22 @ @ <nl> { <nl> blockpos = blockpos . func _ 177982 _ a ( p _ 180650 _ 4 _ . nextInt ( 3 ) - 1 , 1 , p _ 180650 _ 4 _ . nextInt ( 3 ) - 1 ) ; <nl> <nl> @ @ - 18 , 7 + 18 , 8 @ @ <nl> { <nl> if ( this . func _ 176369 _ e ( p _ 180650 _ 1 _ , blockpos ) ) <nl> { <nl> - @ @ - 67 , 7 + 67 , 7 @ @ <nl> + - p _ 180650 _ 1 _ . func _ 175656 _ a ( blockpos , Blocks . field _ 150480 _ ab . func _ 176223 _ P ( ) ) ; <nl> + + p _ 180650 _ 1 _ . func _ 175656 _ a ( blockpos , net . minecraftforge . event . ForgeEventFactory . fireFluidPlaceBlockEvent ( p _ 180650 _ 1 _ , blockpos , p _ 180650 _ 2 _ , Blocks . field _ 150480 _ ab . func _ 176223 _ P ( ) ) ) ; <nl> return ; <nl> } <nl> } <nl> @ @ - 27 , 3 + 28 , 12 @ @ <nl> { <nl> return ; <nl> } <nl> + @ @ - 86 , 7 + 86 , 7 @ @ <nl> + <nl> + if ( p _ 180650 _ 1 _ . func _ 175623 _ d ( blockpos1 . func _ 177984 _ a ( ) ) & & this . func _ 176368 _ m ( p _ 180650 _ 1 _ , blockpos1 ) ) <nl> + { <nl> + - p _ 180650 _ 1 _ . func _ 175656 _ a ( blockpos1 . func _ 177984 _ a ( ) , Blocks . field _ 150480 _ ab . func _ 176223 _ P ( ) ) ; <nl> + + p _ 180650 _ 1 _ . func _ 175656 _ a ( blockpos1 . func _ 177984 _ a ( ) , net . minecraftforge . event . ForgeEventFactory . fireFluidPlaceBlockEvent ( p _ 180650 _ 1 _ , blockpos1 . func _ 177984 _ a ( ) , p _ 180650 _ 2 _ , Blocks . field _ 150480 _ ab . func _ 176223 _ P ( ) ) ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> index e2e49c0 . . ebd87c0 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 25 , 6 + 25 , 7 @ @ import java . util . List ; <nl> import java . util . Random ; <nl> <nl> import net . minecraft . block . BlockPortal ; <nl> + import net . minecraft . block . material . Material ; <nl> import net . minecraft . block . state . IBlockState ; <nl> import net . minecraft . client . util . ITooltipFlag ; <nl> import net . minecraft . entity . Entity ; <nl> @ @ - 319 , 6 + 320 , 13 @ @ public class ForgeEventFactory <nl> return event . getDropChance ( ) ; <nl> } <nl> <nl> + public static IBlockState fireFluidPlaceBlockEvent ( World world , BlockPos pos , BlockPos liquidPos , IBlockState state ) <nl> + { <nl> + BlockEvent . FluidPlaceBlockEvent event = new BlockEvent . FluidPlaceBlockEvent ( world , pos , liquidPos , state ) ; <nl> + MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> + return event . getNewState ( ) ; <nl> + } <nl> + <nl> public static ItemTooltipEvent onItemTooltip ( ItemStack itemStack , @ Nullable EntityPlayer entityPlayer , List < String > toolTip , ITooltipFlag flags ) <nl> { <nl> ItemTooltipEvent event = new ItemTooltipEvent ( itemStack , entityPlayer , toolTip , flags ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / event / world / BlockEvent . java b / src / main / java / net / minecraftforge / event / world / BlockEvent . java <nl> index c0ad8c7 . . aeccfc5 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / world / BlockEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / world / BlockEvent . java <nl> @ @ - 24 , 6 + 24 , 7 @ @ import java . util . List ; <nl> <nl> import net . minecraft . block . Block ; <nl> import net . minecraft . block . BlockPortal ; <nl> + import net . minecraft . block . material . Material ; <nl> import net . minecraft . block . state . IBlockState ; <nl> import net . minecraft . enchantment . EnchantmentHelper ; <nl> import net . minecraft . entity . Entity ; <nl> @ @ - 127 , 7 + 128 , 7 @ @ public class BlockEvent extends Event <nl> this . player = player ; <nl> <nl> if ( state = = null | | ! ForgeHooks . canHarvestBlock ( state . getBlock ( ) , player , world , pos ) | | / / Handle empty block or player unable to break block scenario <nl> - ( state . getBlock ( ) . canSilkHarvest ( world , pos , world . getBlockState ( pos ) , player ) & & EnchantmentHelper . getEnchantmentLevel ( Enchantments . SILK _ TOUCH , player . getHeldItemMainhand ( ) ) > 0 ) ) / / If the block is being silk harvested , the exp dropped is 0 <nl> + ( state . getBlock ( ) . canSilkHarvest ( world , pos , world . getBlockState ( pos ) , player ) & & EnchantmentHelper . getEnchantmentLevel ( Enchantments . SILK _ TOUCH , player . getHeldItemMainhand ( ) ) > 0 ) ) / / If the block is being silk harvested , the exp dropped is 0 <nl> { <nl> this . exp = 0 ; <nl> } <nl> @ @ - 288 , 6 + 289 , 59 @ @ public class BlockEvent extends Event <nl> } <nl> <nl> / * * <nl> + * Fired when a liquid places a block . Use { @ link # setNewState ( IBlockState ) } to change the result of <nl> + * a cobblestone generator or add variants of obsidian . Alternatively , you could execute <nl> + * arbitrary code when lava sets blocks on fire , even preventing it . <nl> + * <nl> + * { @ link # getState ( ) } will return the block that was originally going to be placed . <nl> + * { @ link # getPos ( ) } will return the position of the block to be changed . <nl> + * / <nl> + @ Cancelable <nl> + public static class FluidPlaceBlockEvent extends BlockEvent <nl> + { <nl> + private final BlockPos liquidPos ; <nl> + private IBlockState newState ; <nl> + private IBlockState origState ; <nl> + <nl> + public FluidPlaceBlockEvent ( World world , BlockPos pos , BlockPos liquidPos , IBlockState state ) <nl> + { <nl> + super ( world , pos , state ) ; <nl> + this . liquidPos = liquidPos ; <nl> + this . newState = state ; <nl> + this . origState = world . getBlockState ( pos ) ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return The position of the liquid this event originated from . This may be the same as { @ link # getPos ( ) } . <nl> + * / <nl> + public BlockPos getLiquidPos ( ) <nl> + { <nl> + return liquidPos ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return The block state that will be placed after this event resolves . <nl> + * / <nl> + public IBlockState getNewState ( ) <nl> + { <nl> + return newState ; <nl> + } <nl> + <nl> + public void setNewState ( IBlockState state ) <nl> + { <nl> + this . newState = state ; <nl> + } <nl> + <nl> + / * * <nl> + * @ return The state of the block to be changed before the event was fired . <nl> + * / <nl> + public IBlockState getOriginalState ( ) <nl> + { <nl> + return origState ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> * Fired when a crop block grows . See subevents . <nl> * <nl> * / <nl> diff - - git a / src / test / java / net / minecraftforge / debug / FluidPlaceBlockTest . java b / src / test / java / net / minecraftforge / debug / FluidPlaceBlockTest . java <nl> new file mode 100644 <nl> index 0000000 . . 95b97e2 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / FluidPlaceBlockTest . java <nl> @ @ - 0 , 0 + 1 , 45 @ @ <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import net . minecraft . block . BlockStone ; <nl> + import net . minecraft . init . Blocks ; <nl> + import net . minecraft . world . biome . Biome ; <nl> + import net . minecraft . world . biome . BiomeHills ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . event . world . BlockEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + <nl> + / * * <nl> + * This test will : <nl> + * - Cause lava to turn into gold when touched by water . <nl> + * - Replace the result of a cobblestone generator with granite . <nl> + * - Replace the result of a stone generator with either diamond , or emerald when in a biome where emerald spawns naturally . <nl> + * - Prevent lava from setting surrounding blocks on fire . <nl> + * / <nl> + @ Mod ( modid = " fluidplaceblocktest " , name = " FluidPlaceBlockTest " , version = " 0 . 0 . 0 " , acceptableRemoteVersions = " * " ) <nl> + public class FluidPlaceBlockTest <nl> + { <nl> + private static final boolean ENABLED = false ; <nl> + <nl> + @ Mod . EventHandler <nl> + public void preinit ( FMLPreInitializationEvent event ) <nl> + { <nl> + if ( ! ENABLED ) return ; <nl> + MinecraftForge . EVENT _ BUS . register ( FluidPlaceBlockTest . class ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent @ SuppressWarnings ( " unused " ) <nl> + public static void onFluidPlaceBlockEvent ( BlockEvent . FluidPlaceBlockEvent event ) <nl> + { <nl> + if ( event . getState ( ) . getBlock ( ) = = Blocks . OBSIDIAN ) event . setNewState ( Blocks . GOLD _ BLOCK . getDefaultState ( ) ) ; <nl> + if ( event . getState ( ) . getBlock ( ) = = Blocks . COBBLESTONE ) event . setNewState ( Blocks . STONE . getDefaultState ( ) . withProperty ( BlockStone . VARIANT , BlockStone . EnumType . GRANITE ) ) ; <nl> + if ( event . getState ( ) = = Blocks . STONE . getDefaultState ( ) ) <nl> + { <nl> + Biome biome = event . getWorld ( ) . getBiome ( event . getPos ( ) ) ; <nl> + if ( biome instanceof BiomeHills ) event . setNewState ( Blocks . EMERALD _ BLOCK . getDefaultState ( ) ) ; <nl> + else event . setNewState ( Blocks . DIAMOND _ BLOCK . getDefaultState ( ) ) ; <nl> + } <nl> + if ( event . getState ( ) . getBlock ( ) = = Blocks . FIRE ) event . setNewState ( event . getOriginalState ( ) ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch b / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch <nl> index 07766e3 . . 56847f0 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch <nl> @ @ - 1 , 15 + 1 , 17 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / block / BlockFarmland . java <nl> + + + . . / src - work / minecraft / net / minecraft / block / BlockFarmland . java <nl> - @ @ - 72 , 7 + 72 , 7 @ @ <nl> + @ @ - 72 , 9 + 72 , 10 @ @ <nl> <nl> public void func _ 180658 _ a ( World p _ 180658 _ 1 _ , BlockPos p _ 180658 _ 2 _ , Entity p _ 180658 _ 3 _ , float p _ 180658 _ 4 _ ) <nl> { <nl> - if ( ! p _ 180658 _ 1 _ . field _ 72995 _ K & & p _ 180658 _ 1 _ . field _ 73012 _ v . nextFloat ( ) < p _ 180658 _ 4 _ - 0 . 5F & & p _ 180658 _ 3 _ instanceof EntityLivingBase & & ( p _ 180658 _ 3 _ instanceof EntityPlayer | | p _ 180658 _ 1 _ . func _ 82736 _ K ( ) . func _ 82766 _ b ( " mobGriefing " ) ) & & p _ 180658 _ 3 _ . field _ 70130 _ N * p _ 180658 _ 3 _ . field _ 70130 _ N * p _ 180658 _ 3 _ . field _ 70131 _ O > 0 . 512F ) <nl> - + if ( ! p _ 180658 _ 1 _ . field _ 72995 _ K & & p _ 180658 _ 3 _ . canTrample ( p _ 180658 _ 1 _ , this , p _ 180658 _ 2 _ , p _ 180658 _ 4 _ ) ) / / Forge : Move logic to Entity # canTrample <nl> + + if ( net . minecraftforge . common . ForgeHooks . onFarmlandTrample ( p _ 180658 _ 1 _ , p _ 180658 _ 2 _ , Blocks . field _ 150346 _ d . func _ 176223 _ P ( ) , p _ 180658 _ 4 _ , p _ 180658 _ 3 _ ) ) / / Forge : Move logic to Entity # canTrample <nl> { <nl> func _ 190970 _ b ( p _ 180658 _ 1 _ , p _ 180658 _ 2 _ ) ; <nl> } <nl> - @ @ - 95 , 7 + 95 , 7 @ @ <nl> + <nl> + super . func _ 180658 _ a ( p _ 180658 _ 1 _ , p _ 180658 _ 2 _ , p _ 180658 _ 3 _ , p _ 180658 _ 4 _ ) ; <nl> + @ @ - 95 , 7 + 96 , 7 @ @ <nl> private boolean func _ 176529 _ d ( World p _ 176529 _ 1 _ , BlockPos p _ 176529 _ 2 _ ) <nl> { <nl> Block block = p _ 176529 _ 1 _ . func _ 180495 _ p ( p _ 176529 _ 2 _ . func _ 177984 _ a ( ) ) . func _ 177230 _ c ( ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index dce44e1 . . 5c08a3d 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 45 , 6 + 45 , 7 @ @ import com . google . gson . JsonParseException ; <nl> import net . minecraft . advancements . Advancement ; <nl> import net . minecraft . advancements . AdvancementManager ; <nl> import net . minecraft . block . Block ; <nl> + import net . minecraft . block . BlockFarmland ; <nl> import net . minecraft . block . BlockLiquid ; <nl> import net . minecraft . block . material . Material ; <nl> import net . minecraft . block . state . IBlockState ; <nl> @ @ - 1450 , 4 + 1451 , 17 @ @ public class ForgeHooks <nl> } <nl> return modId ; <nl> } <nl> + <nl> + public static boolean onFarmlandTrample ( World world , BlockPos pos , IBlockState state , float fallDistance , Entity entity ) <nl> + { <nl> + <nl> + if ( entity . canTrample ( world , state . getBlock ( ) , pos , fallDistance ) ) <nl> + { <nl> + BlockEvent . FarmlandTrampleEvent event = new BlockEvent . FarmlandTrampleEvent ( world , pos , state , fallDistance , entity ) ; <nl> + MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> + return ! event . isCanceled ( ) ; <nl> + } <nl> + return false ; <nl> + } <nl> + <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / event / world / BlockEvent . java b / src / main / java / net / minecraftforge / event / world / BlockEvent . java <nl> index baf3dbe . . c0ad8c7 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / world / BlockEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / world / BlockEvent . java <nl> @ @ - 22 , 9 + 22 , 12 @ @ package net . minecraftforge . event . world ; <nl> import java . util . EnumSet ; <nl> import java . util . List ; <nl> <nl> + import net . minecraft . block . Block ; <nl> import net . minecraft . block . BlockPortal ; <nl> import net . minecraft . block . state . IBlockState ; <nl> import net . minecraft . enchantment . EnchantmentHelper ; <nl> + import net . minecraft . entity . Entity ; <nl> + import net . minecraft . entity . EntityLivingBase ; <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . init . Enchantments ; <nl> import net . minecraft . item . ItemStack ; <nl> @ @ - 124 , 7 + 127 , 7 @ @ public class BlockEvent extends Event <nl> this . player = player ; <nl> <nl> if ( state = = null | | ! ForgeHooks . canHarvestBlock ( state . getBlock ( ) , player , world , pos ) | | / / Handle empty block or player unable to break block scenario <nl> - ( state . getBlock ( ) . canSilkHarvest ( world , pos , world . getBlockState ( pos ) , player ) & & EnchantmentHelper . getEnchantmentLevel ( Enchantments . SILK _ TOUCH , player . getHeldItemMainhand ( ) ) > 0 ) ) / / If the block is being silk harvested , the exp dropped is 0 <nl> + ( state . getBlock ( ) . canSilkHarvest ( world , pos , world . getBlockState ( pos ) , player ) & & EnchantmentHelper . getEnchantmentLevel ( Enchantments . SILK _ TOUCH , player . getHeldItemMainhand ( ) ) > 0 ) ) / / If the block is being silk harvested , the exp dropped is 0 <nl> { <nl> this . exp = 0 ; <nl> } <nl> @ @ - 283 , 7 + 286 , 7 @ @ public class BlockEvent extends Event <nl> super ( world , pos , state ) ; <nl> } <nl> } <nl> - <nl> + <nl> / * * <nl> * Fired when a crop block grows . See subevents . <nl> * <nl> @ @ - 341 , 7 + 344 , 34 @ @ public class BlockEvent extends Event <nl> } <nl> <nl> / * * <nl> - * Fired when an attempt is made to spawn a nether portal from <nl> + * Fired when when farmland gets trampled <nl> + * This event is { @ link Cancelable } <nl> + * / <nl> + @ Cancelable <nl> + public static class FarmlandTrampleEvent extends BlockEvent <nl> + { <nl> + <nl> + private final Entity entity ; <nl> + private final float fallDistance ; <nl> + <nl> + public FarmlandTrampleEvent ( World world , BlockPos pos , IBlockState state , float fallDistance , Entity entity ) <nl> + { <nl> + super ( world , pos , state ) ; <nl> + this . entity = entity ; <nl> + this . fallDistance = fallDistance ; <nl> + } <nl> + <nl> + public Entity getEntity ( ) { <nl> + return entity ; <nl> + } <nl> + <nl> + public float getFallDistance ( ) { <nl> + return fallDistance ; <nl> + } <nl> + <nl> + } <nl> + <nl> + / * Fired when an attempt is made to spawn a nether portal from <nl> * { @ link net . minecraft . block . BlockPortal # trySpawnPortal ( World , BlockPos ) } . <nl> * <nl> * If cancelled , the portal will not be spawned . <nl> diff - - git a / src / test / java / net / minecraftforge / debug / block / FarmlandTrampleEventTest . java b / src / test / java / net / minecraftforge / debug / block / FarmlandTrampleEventTest . java <nl> new file mode 100644 <nl> index 0000000 . . 5314e46 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / block / FarmlandTrampleEventTest . java <nl> @ @ - 0 , 0 + 1 , 27 @ @ <nl> + package net . minecraftforge . debug . block ; <nl> + <nl> + import net . minecraftforge . event . world . BlockEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . eventhandler . Event ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + <nl> + @ Mod ( modid = FarmlandTrampleEventTest . MOD _ ID , name = " Farmland Trample Event Test " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> + @ Mod . EventBusSubscriber <nl> + public class FarmlandTrampleEventTest <nl> + { <nl> + static final String MOD _ ID = " farmland _ trample _ test " ; <nl> + static final boolean ENABLED = true ; <nl> + <nl> + @ SubscribeEvent <nl> + public static void onFarmlandTrampled ( BlockEvent . FarmlandTrampleEvent event ) <nl> + { <nl> + if ( ! ENABLED ) <nl> + { <nl> + return ; <nl> + } <nl> + if ( event . getEntity ( ) . isSneaking ( ) ) <nl> + { <nl> + event . setCanceled ( true ) ; <nl> + } <nl> + } <nl> + }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / block / BlockDynamicLiquid . java . patch b / patches / minecraft / net / minecraft / block / BlockDynamicLiquid . java . patch 
 index 00faef8 . . 6cb2700 100644 
 - - - a / patches / minecraft / net / minecraft / block / BlockDynamicLiquid . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / BlockDynamicLiquid . java . patch 
 @ @ - 17 , 6 + 17 , 15 @ @ 
 { 
 IBlockState iblockstate = p _ 180650 _ 1 _ . func _ 180495 _ p ( p _ 180650 _ 2 _ . func _ 177977 _ b ( ) ) ; 
 
 + @ @ - 118 , 7 + 119 , 7 @ @ 
 + { 
 + if ( this . field _ 149764 _ J = = Material . field _ 151587 _ i & & p _ 180650 _ 1 _ . func _ 180495 _ p ( p _ 180650 _ 2 _ . func _ 177977 _ b ( ) ) . func _ 185904 _ a ( ) = = Material . field _ 151586 _ h ) 
 + { 
 + - p _ 180650 _ 1 _ . func _ 175656 _ a ( p _ 180650 _ 2 _ . func _ 177977 _ b ( ) , Blocks . field _ 150348 _ b . func _ 176223 _ P ( ) ) ; 
 + + p _ 180650 _ 1 _ . func _ 175656 _ a ( p _ 180650 _ 2 _ . func _ 177977 _ b ( ) , net . minecraftforge . event . ForgeEventFactory . fireFluidPlaceBlockEvent ( p _ 180650 _ 1 _ , p _ 180650 _ 2 _ . func _ 177977 _ b ( ) , p _ 180650 _ 2 _ , Blocks . field _ 150348 _ b . func _ 176223 _ P ( ) ) ) ; 
 + this . func _ 180688 _ d ( p _ 180650 _ 1 _ , p _ 180650 _ 2 _ . func _ 177977 _ b ( ) ) ; 
 + return ; 
 + } 
 @ @ - 166 , 6 + 167 , 7 @ @ 
 } 
 else 
 diff - - git a / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch b / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch 
 index 56847f0 . . cabce54 100644 
 - - - a / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / block / BlockFarmland . java 
 + + + . . / src - work / minecraft / net / minecraft / block / BlockFarmland . java 
 - @ @ - 72 , 9 + 72 , 10 @ @ 
 + @ @ - 72 , 7 + 72 , 7 @ @ 
 
 public void func _ 180658 _ a ( World p _ 180658 _ 1 _ , BlockPos p _ 180658 _ 2 _ , Entity p _ 180658 _ 3 _ , float p _ 180658 _ 4 _ ) 
 { 
 @ @ - 9 , 9 + 9 , 7 @ @ 
 { 
 func _ 190970 _ b ( p _ 180658 _ 1 _ , p _ 180658 _ 2 _ ) ; 
 } 
 - 
 - super . func _ 180658 _ a ( p _ 180658 _ 1 _ , p _ 180658 _ 2 _ , p _ 180658 _ 3 _ , p _ 180658 _ 4 _ ) ; 
 - @ @ - 95 , 7 + 96 , 7 @ @ 
 + @ @ - 95 , 7 + 95 , 7 @ @ 
 private boolean func _ 176529 _ d ( World p _ 176529 _ 1 _ , BlockPos p _ 176529 _ 2 _ ) 
 { 
 Block block = p _ 176529 _ 1 _ . func _ 180495 _ p ( p _ 176529 _ 2 _ . func _ 177984 _ a ( ) ) . func _ 177230 _ c ( ) ; 
 diff - - git a / patches / minecraft / net / minecraft / block / BlockLiquid . java . patch b / patches / minecraft / net / minecraft / block / BlockLiquid . java . patch 
 index 778caf7 . . f5635a5 100644 
 - - - a / patches / minecraft / net / minecraft / block / BlockLiquid . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / BlockLiquid . java . patch 
 @ @ - 1 , 5 + 1 , 22 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / block / BlockLiquid . java 
 + + + . . / src - work / minecraft / net / minecraft / block / BlockLiquid . java 
 + @ @ - 284 , 14 + 284 , 14 @ @ 
 + 
 + if ( integer . intValue ( ) = = 0 ) 
 + { 
 + - p _ 176365 _ 1 _ . func _ 175656 _ a ( p _ 176365 _ 2 _ , Blocks . field _ 150343 _ Z . func _ 176223 _ P ( ) ) ; 
 + + p _ 176365 _ 1 _ . func _ 175656 _ a ( p _ 176365 _ 2 _ , net . minecraftforge . event . ForgeEventFactory . fireFluidPlaceBlockEvent ( p _ 176365 _ 1 _ , p _ 176365 _ 2 _ , p _ 176365 _ 2 _ , Blocks . field _ 150343 _ Z . func _ 176223 _ P ( ) ) ) ; 
 + this . func _ 180688 _ d ( p _ 176365 _ 1 _ , p _ 176365 _ 2 _ ) ; 
 + return true ; 
 + } 
 + 
 + if ( integer . intValue ( ) < = 4 ) 
 + { 
 + - p _ 176365 _ 1 _ . func _ 175656 _ a ( p _ 176365 _ 2 _ , Blocks . field _ 150347 _ e . func _ 176223 _ P ( ) ) ; 
 + + p _ 176365 _ 1 _ . func _ 175656 _ a ( p _ 176365 _ 2 _ , net . minecraftforge . event . ForgeEventFactory . fireFluidPlaceBlockEvent ( p _ 176365 _ 1 _ , p _ 176365 _ 2 _ , p _ 176365 _ 2 _ , Blocks . field _ 150347 _ e . func _ 176223 _ P ( ) ) ) ; 
 + this . func _ 180688 _ d ( p _ 176365 _ 1 _ , p _ 176365 _ 2 _ ) ; 
 + return true ; 
 + } 
 @ @ - 452 , 4 + 452 , 29 @ @ 
 { 
 return BlockFaceShape . UNDEFINED ; 
 diff - - git a / patches / minecraft / net / minecraft / block / BlockStaticLiquid . java . patch b / patches / minecraft / net / minecraft / block / BlockStaticLiquid . java . patch 
 index 52938b4 . . 20d78ab 100644 
 - - - a / patches / minecraft / net / minecraft / block / BlockStaticLiquid . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / BlockStaticLiquid . java . patch 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / block / BlockStaticLiquid . java 
 + + + . . / src - work / minecraft / net / minecraft / block / BlockStaticLiquid . java 
 - @ @ - 52 , 14 + 52 , 14 @ @ 
 + @ @ - 52 , 22 + 52 , 22 @ @ 
 { 
 blockpos = blockpos . func _ 177982 _ a ( p _ 180650 _ 4 _ . nextInt ( 3 ) - 1 , 1 , p _ 180650 _ 4 _ . nextInt ( 3 ) - 1 ) ; 
 
 @ @ - 18 , 7 + 18 , 8 @ @ 
 { 
 if ( this . func _ 176369 _ e ( p _ 180650 _ 1 _ , blockpos ) ) 
 { 
 - @ @ - 67 , 7 + 67 , 7 @ @ 
 + - p _ 180650 _ 1 _ . func _ 175656 _ a ( blockpos , Blocks . field _ 150480 _ ab . func _ 176223 _ P ( ) ) ; 
 + + p _ 180650 _ 1 _ . func _ 175656 _ a ( blockpos , net . minecraftforge . event . ForgeEventFactory . fireFluidPlaceBlockEvent ( p _ 180650 _ 1 _ , blockpos , p _ 180650 _ 2 _ , Blocks . field _ 150480 _ ab . func _ 176223 _ P ( ) ) ) ; 
 return ; 
 } 
 } 
 @ @ - 27 , 3 + 28 , 12 @ @ 
 { 
 return ; 
 } 
 + @ @ - 86 , 7 + 86 , 7 @ @ 
 + 
 + if ( p _ 180650 _ 1 _ . func _ 175623 _ d ( blockpos1 . func _ 177984 _ a ( ) ) & & this . func _ 176368 _ m ( p _ 180650 _ 1 _ , blockpos1 ) ) 
 + { 
 + - p _ 180650 _ 1 _ . func _ 175656 _ a ( blockpos1 . func _ 177984 _ a ( ) , Blocks . field _ 150480 _ ab . func _ 176223 _ P ( ) ) ; 
 + + p _ 180650 _ 1 _ . func _ 175656 _ a ( blockpos1 . func _ 177984 _ a ( ) , net . minecraftforge . event . ForgeEventFactory . fireFluidPlaceBlockEvent ( p _ 180650 _ 1 _ , blockpos1 . func _ 177984 _ a ( ) , p _ 180650 _ 2 _ , Blocks . field _ 150480 _ ab . func _ 176223 _ P ( ) ) ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 index e2e49c0 . . ebd87c0 100644 
 - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 25 , 6 + 25 , 7 @ @ import java . util . List ; 
 import java . util . Random ; 
 
 import net . minecraft . block . BlockPortal ; 
 + import net . minecraft . block . material . Material ; 
 import net . minecraft . block . state . IBlockState ; 
 import net . minecraft . client . util . ITooltipFlag ; 
 import net . minecraft . entity . Entity ; 
 @ @ - 319 , 6 + 320 , 13 @ @ public class ForgeEventFactory 
 return event . getDropChance ( ) ; 
 } 
 
 + public static IBlockState fireFluidPlaceBlockEvent ( World world , BlockPos pos , BlockPos liquidPos , IBlockState state ) 
 + { 
 + BlockEvent . FluidPlaceBlockEvent event = new BlockEvent . FluidPlaceBlockEvent ( world , pos , liquidPos , state ) ; 
 + MinecraftForge . EVENT _ BUS . post ( event ) ; 
 + return event . getNewState ( ) ; 
 + } 
 + 
 public static ItemTooltipEvent onItemTooltip ( ItemStack itemStack , @ Nullable EntityPlayer entityPlayer , List < String > toolTip , ITooltipFlag flags ) 
 { 
 ItemTooltipEvent event = new ItemTooltipEvent ( itemStack , entityPlayer , toolTip , flags ) ; 
 diff - - git a / src / main / java / net / minecraftforge / event / world / BlockEvent . java b / src / main / java / net / minecraftforge / event / world / BlockEvent . java 
 index c0ad8c7 . . aeccfc5 100644 
 - - - a / src / main / java / net / minecraftforge / event / world / BlockEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / world / BlockEvent . java 
 @ @ - 24 , 6 + 24 , 7 @ @ import java . util . List ; 
 
 import net . minecraft . block . Block ; 
 import net . minecraft . block . BlockPortal ; 
 + import net . minecraft . block . material . Material ; 
 import net . minecraft . block . state . IBlockState ; 
 import net . minecraft . enchantment . EnchantmentHelper ; 
 import net . minecraft . entity . Entity ; 
 @ @ - 127 , 7 + 128 , 7 @ @ public class BlockEvent extends Event 
 this . player = player ; 
 
 if ( state = = null | | ! ForgeHooks . canHarvestBlock ( state . getBlock ( ) , player , world , pos ) | | / / Handle empty block or player unable to break block scenario 
 - ( state . getBlock ( ) . canSilkHarvest ( world , pos , world . getBlockState ( pos ) , player ) & & EnchantmentHelper . getEnchantmentLevel ( Enchantments . SILK _ TOUCH , player . getHeldItemMainhand ( ) ) > 0 ) ) / / If the block is being silk harvested , the exp dropped is 0 
 + ( state . getBlock ( ) . canSilkHarvest ( world , pos , world . getBlockState ( pos ) , player ) & & EnchantmentHelper . getEnchantmentLevel ( Enchantments . SILK _ TOUCH , player . getHeldItemMainhand ( ) ) > 0 ) ) / / If the block is being silk harvested , the exp dropped is 0 
 { 
 this . exp = 0 ; 
 } 
 @ @ - 288 , 6 + 289 , 59 @ @ public class BlockEvent extends Event 
 } 
 
 / * * 
 + * Fired when a liquid places a block . Use { @ link # setNewState ( IBlockState ) } to change the result of 
 + * a cobblestone generator or add variants of obsidian . Alternatively , you could execute 
 + * arbitrary code when lava sets blocks on fire , even preventing it . 
 + * 
 + * { @ link # getState ( ) } will return the block that was originally going to be placed . 
 + * { @ link # getPos ( ) } will return the position of the block to be changed . 
 + * / 
 + @ Cancelable 
 + public static class FluidPlaceBlockEvent extends BlockEvent 
 + { 
 + private final BlockPos liquidPos ; 
 + private IBlockState newState ; 
 + private IBlockState origState ; 
 + 
 + public FluidPlaceBlockEvent ( World world , BlockPos pos , BlockPos liquidPos , IBlockState state ) 
 + { 
 + super ( world , pos , state ) ; 
 + this . liquidPos = liquidPos ; 
 + this . newState = state ; 
 + this . origState = world . getBlockState ( pos ) ; 
 + } 
 + 
 + / * * 
 + * @ return The position of the liquid this event originated from . This may be the same as { @ link # getPos ( ) } . 
 + * / 
 + public BlockPos getLiquidPos ( ) 
 + { 
 + return liquidPos ; 
 + } 
 + 
 + / * * 
 + * @ return The block state that will be placed after this event resolves . 
 + * / 
 + public IBlockState getNewState ( ) 
 + { 
 + return newState ; 
 + } 
 + 
 + public void setNewState ( IBlockState state ) 
 + { 
 + this . newState = state ; 
 + } 
 + 
 + / * * 
 + * @ return The state of the block to be changed before the event was fired . 
 + * / 
 + public IBlockState getOriginalState ( ) 
 + { 
 + return origState ; 
 + } 
 + } 
 + 
 + / * * 
 * Fired when a crop block grows . See subevents . 
 * 
 * / 
 diff - - git a / src / test / java / net / minecraftforge / debug / FluidPlaceBlockTest . java b / src / test / java / net / minecraftforge / debug / FluidPlaceBlockTest . java 
 new file mode 100644 
 index 0000000 . . 95b97e2 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / FluidPlaceBlockTest . java 
 @ @ - 0 , 0 + 1 , 45 @ @ 
 + package net . minecraftforge . debug ; 
 + 
 + import net . minecraft . block . BlockStone ; 
 + import net . minecraft . init . Blocks ; 
 + import net . minecraft . world . biome . Biome ; 
 + import net . minecraft . world . biome . BiomeHills ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . event . world . BlockEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + 
 + / * * 
 + * This test will : 
 + * - Cause lava to turn into gold when touched by water . 
 + * - Replace the result of a cobblestone generator with granite . 
 + * - Replace the result of a stone generator with either diamond , or emerald when in a biome where emerald spawns naturally . 
 + * - Prevent lava from setting surrounding blocks on fire . 
 + * / 
 + @ Mod ( modid = " fluidplaceblocktest " , name = " FluidPlaceBlockTest " , version = " 0 . 0 . 0 " , acceptableRemoteVersions = " * " ) 
 + public class FluidPlaceBlockTest 
 + { 
 + private static final boolean ENABLED = false ; 
 + 
 + @ Mod . EventHandler 
 + public void preinit ( FMLPreInitializationEvent event ) 
 + { 
 + if ( ! ENABLED ) return ; 
 + MinecraftForge . EVENT _ BUS . register ( FluidPlaceBlockTest . class ) ; 
 + } 
 + 
 + @ SubscribeEvent @ SuppressWarnings ( " unused " ) 
 + public static void onFluidPlaceBlockEvent ( BlockEvent . FluidPlaceBlockEvent event ) 
 + { 
 + if ( event . getState ( ) . getBlock ( ) = = Blocks . OBSIDIAN ) event . setNewState ( Blocks . GOLD _ BLOCK . getDefaultState ( ) ) ; 
 + if ( event . getState ( ) . getBlock ( ) = = Blocks . COBBLESTONE ) event . setNewState ( Blocks . STONE . getDefaultState ( ) . withProperty ( BlockStone . VARIANT , BlockStone . EnumType . GRANITE ) ) ; 
 + if ( event . getState ( ) = = Blocks . STONE . getDefaultState ( ) ) 
 + { 
 + Biome biome = event . getWorld ( ) . getBiome ( event . getPos ( ) ) ; 
 + if ( biome instanceof BiomeHills ) event . setNewState ( Blocks . EMERALD _ BLOCK . getDefaultState ( ) ) ; 
 + else event . setNewState ( Blocks . DIAMOND _ BLOCK . getDefaultState ( ) ) ; 
 + } 
 + if ( event . getState ( ) . getBlock ( ) = = Blocks . FIRE ) event . setNewState ( event . getOriginalState ( ) ) ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch b / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch 
 index 07766e3 . . 56847f0 100644 
 - - - a / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / BlockFarmland . java . patch 
 @ @ - 1 , 15 + 1 , 17 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / block / BlockFarmland . java 
 + + + . . / src - work / minecraft / net / minecraft / block / BlockFarmland . java 
 - @ @ - 72 , 7 + 72 , 7 @ @ 
 + @ @ - 72 , 9 + 72 , 10 @ @ 
 
 public void func _ 180658 _ a ( World p _ 180658 _ 1 _ , BlockPos p _ 180658 _ 2 _ , Entity p _ 180658 _ 3 _ , float p _ 180658 _ 4 _ ) 
 { 
 - if ( ! p _ 180658 _ 1 _ . field _ 72995 _ K & & p _ 180658 _ 1 _ . field _ 73012 _ v . nextFloat ( ) < p _ 180658 _ 4 _ - 0 . 5F & & p _ 180658 _ 3 _ instanceof EntityLivingBase & & ( p _ 180658 _ 3 _ instanceof EntityPlayer | | p _ 180658 _ 1 _ . func _ 82736 _ K ( ) . func _ 82766 _ b ( " mobGriefing " ) ) & & p _ 180658 _ 3 _ . field _ 70130 _ N * p _ 180658 _ 3 _ . field _ 70130 _ N * p _ 180658 _ 3 _ . field _ 70131 _ O > 0 . 512F ) 
 - + if ( ! p _ 180658 _ 1 _ . field _ 72995 _ K & & p _ 180658 _ 3 _ . canTrample ( p _ 180658 _ 1 _ , this , p _ 180658 _ 2 _ , p _ 180658 _ 4 _ ) ) / / Forge : Move logic to Entity # canTrample 
 + + if ( net . minecraftforge . common . ForgeHooks . onFarmlandTrample ( p _ 180658 _ 1 _ , p _ 180658 _ 2 _ , Blocks . field _ 150346 _ d . func _ 176223 _ P ( ) , p _ 180658 _ 4 _ , p _ 180658 _ 3 _ ) ) / / Forge : Move logic to Entity # canTrample 
 { 
 func _ 190970 _ b ( p _ 180658 _ 1 _ , p _ 180658 _ 2 _ ) ; 
 } 
 - @ @ - 95 , 7 + 95 , 7 @ @ 
 + 
 + super . func _ 180658 _ a ( p _ 180658 _ 1 _ , p _ 180658 _ 2 _ , p _ 180658 _ 3 _ , p _ 180658 _ 4 _ ) ; 
 + @ @ - 95 , 7 + 96 , 7 @ @ 
 private boolean func _ 176529 _ d ( World p _ 176529 _ 1 _ , BlockPos p _ 176529 _ 2 _ ) 
 { 
 Block block = p _ 176529 _ 1 _ . func _ 180495 _ p ( p _ 176529 _ 2 _ . func _ 177984 _ a ( ) ) . func _ 177230 _ c ( ) ; 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index dce44e1 . . 5c08a3d 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 45 , 6 + 45 , 7 @ @ import com . google . gson . JsonParseException ; 
 import net . minecraft . advancements . Advancement ; 
 import net . minecraft . advancements . AdvancementManager ; 
 import net . minecraft . block . Block ; 
 + import net . minecraft . block . BlockFarmland ; 
 import net . minecraft . block . BlockLiquid ; 
 import net . minecraft . block . material . Material ; 
 import net . minecraft . block . state . IBlockState ; 
 @ @ - 1450 , 4 + 1451 , 17 @ @ public class ForgeHooks 
 } 
 return modId ; 
 } 
 + 
 + public static boolean onFarmlandTrample ( World world , BlockPos pos , IBlockState state , float fallDistance , Entity entity ) 
 + { 
 + 
 + if ( entity . canTrample ( world , state . getBlock ( ) , pos , fallDistance ) ) 
 + { 
 + BlockEvent . FarmlandTrampleEvent event = new BlockEvent . FarmlandTrampleEvent ( world , pos , state , fallDistance , entity ) ; 
 + MinecraftForge . EVENT _ BUS . post ( event ) ; 
 + return ! event . isCanceled ( ) ; 
 + } 
 + return false ; 
 + } 
 + 
 } 
 diff - - git a / src / main / java / net / minecraftforge / event / world / BlockEvent . java b / src / main / java / net / minecraftforge / event / world / BlockEvent . java 
 index baf3dbe . . c0ad8c7 100644 
 - - - a / src / main / java / net / minecraftforge / event / world / BlockEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / world / BlockEvent . java 
 @ @ - 22 , 9 + 22 , 12 @ @ package net . minecraftforge . event . world ; 
 import java . util . EnumSet ; 
 import java . util . List ; 
 
 + import net . minecraft . block . Block ; 
 import net . minecraft . block . BlockPortal ; 
 import net . minecraft . block . state . IBlockState ; 
 import net . minecraft . enchantment . EnchantmentHelper ; 
 + import net . minecraft . entity . Entity ; 
 + import net . minecraft . entity . EntityLivingBase ; 
 import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . init . Enchantments ; 
 import net . minecraft . item . ItemStack ; 
 @ @ - 124 , 7 + 127 , 7 @ @ public class BlockEvent extends Event 
 this . player = player ; 
 
 if ( state = = null | | ! ForgeHooks . canHarvestBlock ( state . getBlock ( ) , player , world , pos ) | | / / Handle empty block or player unable to break block scenario 
 - ( state . getBlock ( ) . canSilkHarvest ( world , pos , world . getBlockState ( pos ) , player ) & & EnchantmentHelper . getEnchantmentLevel ( Enchantments . SILK _ TOUCH , player . getHeldItemMainhand ( ) ) > 0 ) ) / / If the block is being silk harvested , the exp dropped is 0 
 + ( state . getBlock ( ) . canSilkHarvest ( world , pos , world . getBlockState ( pos ) , player ) & & EnchantmentHelper . getEnchantmentLevel ( Enchantments . SILK _ TOUCH , player . getHeldItemMainhand ( ) ) > 0 ) ) / / If the block is being silk harvested , the exp dropped is 0 
 { 
 this . exp = 0 ; 
 } 
 @ @ - 283 , 7 + 286 , 7 @ @ public class BlockEvent extends Event 
 super ( world , pos , state ) ; 
 } 
 } 
 - 
 + 
 / * * 
 * Fired when a crop block grows . See subevents . 
 * 
 @ @ - 341 , 7 + 344 , 34 @ @ public class BlockEvent extends Event 
 } 
 
 / * * 
 - * Fired when an attempt is made to spawn a nether portal from 
 + * Fired when when farmland gets trampled 
 + * This event is { @ link Cancelable } 
 + * / 
 + @ Cancelable 
 + public static class FarmlandTrampleEvent extends BlockEvent 
 + { 
 + 
 + private final Entity entity ; 
 + private final float fallDistance ; 
 + 
 + public FarmlandTrampleEvent ( World world , BlockPos pos , IBlockState state , float fallDistance , Entity entity ) 
 + { 
 + super ( world , pos , state ) ; 
 + this . entity = entity ; 
 + this . fallDistance = fallDistance ; 
 + } 
 + 
 + public Entity getEntity ( ) { 
 + return entity ; 
 + } 
 + 
 + public float getFallDistance ( ) { 
 + return fallDistance ; 
 + } 
 + 
 + } 
 + 
 + / * Fired when an attempt is made to spawn a nether portal from 
 * { @ link net . minecraft . block . BlockPortal # trySpawnPortal ( World , BlockPos ) } . 
 * 
 * If cancelled , the portal will not be spawned . 
 diff - - git a / src / test / java / net / minecraftforge / debug / block / FarmlandTrampleEventTest . java b / src / test / java / net / minecraftforge / debug / block / FarmlandTrampleEventTest . java 
 new file mode 100644 
 index 0000000 . . 5314e46 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / block / FarmlandTrampleEventTest . java 
 @ @ - 0 , 0 + 1 , 27 @ @ 
 + package net . minecraftforge . debug . block ; 
 + 
 + import net . minecraftforge . event . world . BlockEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . eventhandler . Event ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + 
 + @ Mod ( modid = FarmlandTrampleEventTest . MOD _ ID , name = " Farmland Trample Event Test " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 + @ Mod . EventBusSubscriber 
 + public class FarmlandTrampleEventTest 
 + { 
 + static final String MOD _ ID = " farmland _ trample _ test " ; 
 + static final boolean ENABLED = true ; 
 + 
 + @ SubscribeEvent 
 + public static void onFarmlandTrampled ( BlockEvent . FarmlandTrampleEvent event ) 
 + { 
 + if ( ! ENABLED ) 
 + { 
 + return ; 
 + } 
 + if ( event . getEntity ( ) . isSneaking ( ) ) 
 + { 
 + event . setCanceled ( true ) ; 
 + } 
 + } 
 + }
