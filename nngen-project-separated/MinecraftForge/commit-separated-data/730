BLEU SCORE: 4.8349628851221274E-4

TEST MSG: Update ore dictionary
GENERATED MSG: Add Glass , Colored glass , ore storage blocks , alines , and a few others to ore dicitonary . Closes # 1011

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / oredict / OreDictionary . java b / src / main / java / net / minecraftforge / oredict / OreDictionary . java <nl> index 5202172 . . d420e62 100644 <nl> - - - a / src / main / java / net / minecraftforge / oredict / OreDictionary . java <nl> + + + b / src / main / java / net / minecraftforge / oredict / OreDictionary . java <nl> @ @ - 8 , 6 + 8 , 7 @ @ import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Set ; <nl> <nl> + import net . minecraft . block . BlockPrismarine ; <nl> import net . minecraft . util . ResourceLocation ; <nl> import org . apache . logging . log4j . Level ; <nl> <nl> @ @ - 55 , 6 + 56 , 7 @ @ public class OreDictionary <nl> { <nl> if ( ! hasInit ) <nl> { <nl> + / / tree - and wood - related things <nl> registerOre ( " logWood " , new ItemStack ( Blocks . log , 1 , WILDCARD _ VALUE ) ) ; <nl> registerOre ( " logWood " , new ItemStack ( Blocks . log2 , 1 , WILDCARD _ VALUE ) ) ; <nl> registerOre ( " plankWood " , new ItemStack ( Blocks . planks , 1 , WILDCARD _ VALUE ) ) ; <nl> @ @ - 69 , 6 + 71 , 9 @ @ public class OreDictionary <nl> registerOre ( " treeSapling " , new ItemStack ( Blocks . sapling , 1 , WILDCARD _ VALUE ) ) ; <nl> registerOre ( " treeLeaves " , new ItemStack ( Blocks . leaves , 1 , WILDCARD _ VALUE ) ) ; <nl> registerOre ( " treeLeaves " , new ItemStack ( Blocks . leaves2 , 1 , WILDCARD _ VALUE ) ) ; <nl> + registerOre ( " vine " , Blocks . vine ) ; <nl> + <nl> + / / Ores <nl> registerOre ( " oreGold " , Blocks . gold _ ore ) ; <nl> registerOre ( " oreIron " , Blocks . iron _ ore ) ; <nl> registerOre ( " oreLapis " , Blocks . lapis _ ore ) ; <nl> @ @ - 77 , 43 + 82 , 58 @ @ public class OreDictionary <nl> registerOre ( " oreEmerald " , Blocks . emerald _ ore ) ; <nl> registerOre ( " oreQuartz " , Blocks . quartz _ ore ) ; <nl> registerOre ( " oreCoal " , Blocks . coal _ ore ) ; <nl> - registerOre ( " blockGold " , Blocks . gold _ block ) ; <nl> - registerOre ( " blockIron " , Blocks . iron _ block ) ; <nl> - registerOre ( " blockLapis " , Blocks . lapis _ block ) ; <nl> - registerOre ( " blockDiamond " , Blocks . diamond _ block ) ; <nl> - registerOre ( " blockRedstone " , Blocks . redstone _ block ) ; <nl> - registerOre ( " blockEmerald " , Blocks . emerald _ block ) ; <nl> - registerOre ( " blockQuartz " , Blocks . quartz _ block ) ; <nl> - registerOre ( " blockCoal " , Blocks . coal _ block ) ; <nl> - registerOre ( " blockGlassColorless " , Blocks . glass ) ; <nl> - registerOre ( " blockGlass " , Blocks . glass ) ; <nl> - registerOre ( " blockGlass " , new ItemStack ( Blocks . stained _ glass , 1 , WILDCARD _ VALUE ) ) ; <nl> - / / blockGlass { Color } is added below with dyes <nl> - registerOre ( " paneGlassColorless " , Blocks . glass _ pane ) ; <nl> - registerOre ( " paneGlass " , Blocks . glass _ pane ) ; <nl> - registerOre ( " paneGlass " , new ItemStack ( Blocks . stained _ glass _ pane , 1 , WILDCARD _ VALUE ) ) ; <nl> - / / paneGlass { Color } is added below with dyes <nl> + <nl> + / / ingots / nuggets <nl> registerOre ( " ingotIron " , Items . iron _ ingot ) ; <nl> registerOre ( " ingotGold " , Items . gold _ ingot ) ; <nl> registerOre ( " ingotBrick " , Items . brick ) ; <nl> registerOre ( " ingotBrickNether " , Items . netherbrick ) ; <nl> registerOre ( " nuggetGold " , Items . gold _ nugget ) ; <nl> + <nl> + / / gems and dusts <nl> registerOre ( " gemDiamond " , Items . diamond ) ; <nl> registerOre ( " gemEmerald " , Items . emerald ) ; <nl> registerOre ( " gemQuartz " , Items . quartz ) ; <nl> + registerOre ( " gemPrismarine " , Items . prismarine _ shard ) ; <nl> + registerOre ( " dustPrismarine " , Items . prismarine _ crystals ) ; <nl> registerOre ( " dustRedstone " , Items . redstone ) ; <nl> registerOre ( " dustGlowstone " , Items . glowstone _ dust ) ; <nl> registerOre ( " gemLapis " , new ItemStack ( Items . dye , 1 , 4 ) ) ; <nl> - registerOre ( " slimeball " , Items . slime _ ball ) ; <nl> - registerOre ( " glowstone " , Blocks . glowstone ) ; <nl> + <nl> + / / storage blocks <nl> + registerOre ( " blockGold " , Blocks . gold _ block ) ; <nl> + registerOre ( " blockIron " , Blocks . iron _ block ) ; <nl> + registerOre ( " blockLapis " , Blocks . lapis _ block ) ; <nl> + registerOre ( " blockDiamond " , Blocks . diamond _ block ) ; <nl> + registerOre ( " blockRedstone " , Blocks . redstone _ block ) ; <nl> + registerOre ( " blockEmerald " , Blocks . emerald _ block ) ; <nl> + registerOre ( " blockQuartz " , Blocks . quartz _ block ) ; <nl> + registerOre ( " blockCoal " , Blocks . coal _ block ) ; <nl> + <nl> + / / crops <nl> registerOre ( " cropWheat " , Items . wheat ) ; <nl> registerOre ( " cropPotato " , Items . potato ) ; <nl> registerOre ( " cropCarrot " , Items . carrot ) ; <nl> - registerOre ( " stone " , Blocks . stone ) ; <nl> - registerOre ( " cobblestone " , Blocks . cobblestone ) ; <nl> - registerOre ( " sandstone " , new ItemStack ( Blocks . sandstone , 1 , WILDCARD _ VALUE ) ) ; <nl> - registerOre ( " sand " , new ItemStack ( Blocks . sand , 1 , WILDCARD _ VALUE ) ) ; <nl> + registerOre ( " cropNetherWart " , Items . nether _ wart ) ; <nl> + registerOre ( " sugarcane " , Items . reeds ) ; <nl> + registerOre ( " blockCactus " , Blocks . cactus ) ; <nl> + <nl> + / / misc materials <nl> registerOre ( " dye " , new ItemStack ( Items . dye , 1 , WILDCARD _ VALUE ) ) ; <nl> + registerOre ( " paper " , new ItemStack ( Items . paper ) ) ; <nl> + <nl> + / / mob drops <nl> + registerOre ( " slimeball " , Items . slime _ ball ) ; <nl> + registerOre ( " enderpearl " , Items . ender _ pearl ) ; <nl> + registerOre ( " bone " , Items . bone ) ; <nl> + registerOre ( " gunpowder " , Items . gunpowder ) ; <nl> + registerOre ( " string " , Items . string ) ; <nl> + registerOre ( " netherStar " , Items . nether _ star ) ; <nl> + registerOre ( " leather " , Items . leather ) ; <nl> + registerOre ( " feather " , Items . feather ) ; <nl> + registerOre ( " egg " , Items . egg ) ; <nl> + <nl> + / / records <nl> registerOre ( " record " , Items . record _ 13 ) ; <nl> registerOre ( " record " , Items . record _ cat ) ; <nl> registerOre ( " record " , Items . record _ blocks ) ; <nl> @ @ - 126 , 6 + 146 , 42 @ @ public class OreDictionary <nl> registerOre ( " record " , Items . record _ ward ) ; <nl> registerOre ( " record " , Items . record _ 11 ) ; <nl> registerOre ( " record " , Items . record _ wait ) ; <nl> + <nl> + / / blocks <nl> + registerOre ( " dirt " , Blocks . dirt ) ; <nl> + registerOre ( " grass " , Blocks . grass ) ; <nl> + registerOre ( " stone " , Blocks . stone ) ; <nl> + registerOre ( " cobblestone " , Blocks . cobblestone ) ; <nl> + registerOre ( " gravel " , Blocks . gravel ) ; <nl> + registerOre ( " sand " , new ItemStack ( Blocks . sand , 1 , WILDCARD _ VALUE ) ) ; <nl> + registerOre ( " sandstone " , new ItemStack ( Blocks . sandstone , 1 , WILDCARD _ VALUE ) ) ; <nl> + registerOre ( " sandstone " , new ItemStack ( Blocks . red _ sandstone , 1 , WILDCARD _ VALUE ) ) ; <nl> + registerOre ( " netherrack " , Blocks . netherrack ) ; <nl> + registerOre ( " obsidian " , Blocks . obsidian ) ; <nl> + registerOre ( " glowstone " , Blocks . glowstone ) ; <nl> + registerOre ( " endstone " , Blocks . end _ stone ) ; <nl> + registerOre ( " torch " , Blocks . torch ) ; <nl> + registerOre ( " workbench " , Blocks . crafting _ table ) ; <nl> + registerOre ( " blockSlime " , Blocks . slime _ block ) ; <nl> + registerOre ( " blockPrismarine " , new ItemStack ( Blocks . prismarine , 1 , BlockPrismarine . EnumType . ROUGH . getMetadata ( ) ) ) ; <nl> + registerOre ( " blockPrismarineBrick " , new ItemStack ( Blocks . prismarine , 1 , BlockPrismarine . EnumType . BRICKS . getMetadata ( ) ) ) ; <nl> + registerOre ( " blockPrismarineDark " , new ItemStack ( Blocks . prismarine , 1 , BlockPrismarine . EnumType . DARK . getMetadata ( ) ) ) ; <nl> + registerOre ( " stoneGranite " , new ItemStack ( Blocks . stone , 1 , 1 ) ) ; <nl> + registerOre ( " stoneGranitePolished " , new ItemStack ( Blocks . stone , 1 , 2 ) ) ; <nl> + registerOre ( " stoneDiorite " , new ItemStack ( Blocks . stone , 1 , 3 ) ) ; <nl> + registerOre ( " stoneDioritePolished " , new ItemStack ( Blocks . stone , 1 , 4 ) ) ; <nl> + registerOre ( " stoneAndesite " , new ItemStack ( Blocks . stone , 1 , 5 ) ) ; <nl> + registerOre ( " stoneAndesitePolished " , new ItemStack ( Blocks . stone , 1 , 6 ) ) ; <nl> + registerOre ( " blockGlassColorless " , Blocks . glass ) ; <nl> + registerOre ( " blockGlass " , Blocks . glass ) ; <nl> + registerOre ( " blockGlass " , new ItemStack ( Blocks . stained _ glass , 1 , WILDCARD _ VALUE ) ) ; <nl> + / / blockGlass { Color } is added below with dyes <nl> + registerOre ( " paneGlassColorless " , Blocks . glass _ pane ) ; <nl> + registerOre ( " paneGlass " , Blocks . glass _ pane ) ; <nl> + registerOre ( " paneGlass " , new ItemStack ( Blocks . stained _ glass _ pane , 1 , WILDCARD _ VALUE ) ) ; <nl> + / / paneGlass { Color } is added below with dyes <nl> + <nl> + / / chests <nl> registerOre ( " chest " , Blocks . chest ) ; <nl> registerOre ( " chest " , Blocks . ender _ chest ) ; <nl> registerOre ( " chest " , Blocks . trapped _ chest ) ; <nl> @ @ - 136 , 23 + 192 , 58 @ @ public class OreDictionary <nl> <nl> / / Build our list of items to replace with ore tags <nl> Map < ItemStack , String > replacements = new HashMap < ItemStack , String > ( ) ; <nl> + <nl> + / / wood - related things <nl> replacements . put ( new ItemStack ( Items . stick ) , " stickWood " ) ; <nl> replacements . put ( new ItemStack ( Blocks . planks ) , " plankWood " ) ; <nl> replacements . put ( new ItemStack ( Blocks . planks , 1 , WILDCARD _ VALUE ) , " plankWood " ) ; <nl> replacements . put ( new ItemStack ( Blocks . wooden _ slab , 1 , WILDCARD _ VALUE ) , " slabWood " ) ; <nl> - replacements . put ( new ItemStack ( Blocks . stone ) , " stone " ) ; <nl> - / / replacements . put ( new ItemStack ( Blocks . stone , 1 , WILDCARD _ VALUE ) , " stone " ) ; <nl> - replacements . put ( new ItemStack ( Blocks . cobblestone ) , " cobblestone " ) ; <nl> - replacements . put ( new ItemStack ( Blocks . cobblestone , 1 , WILDCARD _ VALUE ) , " cobblestone " ) ; <nl> + <nl> + / / ingots / nuggets <nl> replacements . put ( new ItemStack ( Items . gold _ ingot ) , " ingotGold " ) ; <nl> replacements . put ( new ItemStack ( Items . iron _ ingot ) , " ingotIron " ) ; <nl> + <nl> + / / gems and dusts <nl> replacements . put ( new ItemStack ( Items . diamond ) , " gemDiamond " ) ; <nl> replacements . put ( new ItemStack ( Items . emerald ) , " gemEmerald " ) ; <nl> + replacements . put ( new ItemStack ( Items . prismarine _ shard ) , " gemPrismarine " ) ; <nl> + replacements . put ( new ItemStack ( Items . prismarine _ crystals ) , " dustPrismarine " ) ; <nl> replacements . put ( new ItemStack ( Items . redstone ) , " dustRedstone " ) ; <nl> replacements . put ( new ItemStack ( Items . glowstone _ dust ) , " dustGlowstone " ) ; <nl> - replacements . put ( new ItemStack ( Blocks . glowstone ) , " glowstone " ) ; <nl> + <nl> + / / crops <nl> + replacements . put ( new ItemStack ( Items . reeds ) , " sugarcane " ) ; <nl> + replacements . put ( new ItemStack ( Blocks . cactus ) , " blockCactus " ) ; <nl> + <nl> + / / misc materials <nl> + replacements . put ( new ItemStack ( Items . paper ) , " paper " ) ; <nl> + <nl> + / / mob drops <nl> replacements . put ( new ItemStack ( Items . slime _ ball ) , " slimeball " ) ; <nl> + replacements . put ( new ItemStack ( Items . string ) , " string " ) ; <nl> + replacements . put ( new ItemStack ( Items . leather ) , " leather " ) ; <nl> + replacements . put ( new ItemStack ( Items . ender _ pearl ) , " enderpearl " ) ; <nl> + replacements . put ( new ItemStack ( Items . gunpowder ) , " gunpowder " ) ; <nl> + replacements . put ( new ItemStack ( Items . nether _ star ) , " netherStar " ) ; <nl> + replacements . put ( new ItemStack ( Items . feather ) , " feather " ) ; <nl> + replacements . put ( new ItemStack ( Items . bone ) , " bone " ) ; <nl> + replacements . put ( new ItemStack ( Items . egg ) , " egg " ) ; <nl> + <nl> + / / blocks <nl> + replacements . put ( new ItemStack ( Blocks . stone ) , " stone " ) ; <nl> + replacements . put ( new ItemStack ( Blocks . cobblestone ) , " cobblestone " ) ; <nl> + replacements . put ( new ItemStack ( Blocks . cobblestone , 1 , WILDCARD _ VALUE ) , " cobblestone " ) ; <nl> + replacements . put ( new ItemStack ( Blocks . glowstone ) , " glowstone " ) ; <nl> replacements . put ( new ItemStack ( Blocks . glass ) , " blockGlassColorless " ) ; <nl> + replacements . put ( new ItemStack ( Blocks . prismarine ) , " prismarine " ) ; <nl> + replacements . put ( new ItemStack ( Blocks . stone , 1 , 1 ) , " stoneGranite " ) ; <nl> + replacements . put ( new ItemStack ( Blocks . stone , 1 , 2 ) , " stoneGranitePolished " ) ; <nl> + replacements . put ( new ItemStack ( Blocks . stone , 1 , 3 ) , " stoneDiorite " ) ; <nl> + replacements . put ( new ItemStack ( Blocks . stone , 1 , 4 ) , " stoneDioritePolished " ) ; <nl> + replacements . put ( new ItemStack ( Blocks . stone , 1 , 5 ) , " stoneAndesite " ) ; <nl> + replacements . put ( new ItemStack ( Blocks . stone , 1 , 6 ) , " stoneAndesitePolished " ) ; <nl> + <nl> + / / chests <nl> replacements . put ( new ItemStack ( Blocks . chest ) , " chestWood " ) ; <nl> replacements . put ( new ItemStack ( Blocks . ender _ chest ) , " chestEnder " ) ; <nl> replacements . put ( new ItemStack ( Blocks . trapped _ chest ) , " chestTrapped " ) ;
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / oredict / OreDictionary . java b / src / main / java / net / minecraftforge / oredict / OreDictionary . java <nl> index 186690a . . 74fa602 100644 <nl> - - - a / src / main / java / net / minecraftforge / oredict / OreDictionary . java <nl> + + + b / src / main / java / net / minecraftforge / oredict / OreDictionary . java <nl> @ @ - 63 , 16 + 63 , 42 @ @ public class OreDictionary <nl> registerOre ( " oreEmerald " , Blocks . emerald _ ore ) ; <nl> registerOre ( " oreQuartz " , Blocks . quartz _ ore ) ; <nl> registerOre ( " oreCoal " , Blocks . coal _ ore ) ; <nl> + registerOre ( " blockGold " , Blocks . gold _ block ) ; <nl> + registerOre ( " blockIron " , Blocks . iron _ block ) ; <nl> + registerOre ( " blockLapis " , Blocks . lapis _ block ) ; <nl> + registerOre ( " blockDiamond " , Blocks . diamond _ block ) ; <nl> + registerOre ( " blockRedstone " , Blocks . redstone _ block ) ; <nl> + registerOre ( " blockEmerald " , Blocks . emerald _ block ) ; <nl> + registerOre ( " blockQuartz " , Blocks . quartz _ block ) ; <nl> + registerOre ( " blockCoal " , Blocks . coal _ block ) ; <nl> + registerOre ( " blockGlassColorless " , Blocks . glass ) ; <nl> + registerOre ( " blockGlass " , Blocks . glass ) ; <nl> + registerOre ( " blockGlass " , new ItemStack ( Blocks . stained _ glass , 1 , WILDCARD _ VALUE ) ) ; <nl> + / / blockGlass { Color } is added below with dyes <nl> + registerOre ( " paneGlassColorless " , Blocks . glass _ pane ) ; <nl> + registerOre ( " paneGlass " , Blocks . glass _ pane ) ; <nl> + registerOre ( " paneGlass " , new ItemStack ( Blocks . stained _ glass _ pane , 1 , WILDCARD _ VALUE ) ) ; <nl> + / / paneGlass { Color } is added below with dyes <nl> + registerOre ( " ingotIron " , Items . iron _ ingot ) ; <nl> + registerOre ( " ingotGold " , Items . gold _ ingot ) ; <nl> + registerOre ( " ingotBrick " , Items . brick ) ; <nl> + registerOre ( " ingotBrickNether " , Items . netherbrick ) ; <nl> + registerOre ( " nuggetGold " , Items . gold _ nugget ) ; <nl> registerOre ( " gemDiamond " , Items . diamond ) ; <nl> registerOre ( " gemEmerald " , Items . emerald ) ; <nl> + registerOre ( " gemQuartz " , Items . quartz ) ; <nl> registerOre ( " dustRedstone " , Items . redstone ) ; <nl> registerOre ( " dustGlowstone " , Items . glowstone _ dust ) ; <nl> + registerOre ( " dustLapis " , new ItemStack ( Items . dye , 1 , 4 ) ) ; <nl> + registerOre ( " slimeball " , Items . slime _ ball ) ; <nl> registerOre ( " glowstone " , Blocks . glowstone ) ; <nl> registerOre ( " cropWheat " , Items . wheat ) ; <nl> registerOre ( " cropPotato " , Items . potato ) ; <nl> registerOre ( " cropCarrot " , Items . carrot ) ; <nl> registerOre ( " stone " , Blocks . stone ) ; <nl> registerOre ( " cobblestone " , Blocks . cobblestone ) ; <nl> + registerOre ( " sandstone " , new ItemStack ( Blocks . sandstone , 1 , WILDCARD _ VALUE ) ) ; <nl> + registerOre ( " dye " , new ItemStack ( Items . dye , 1 , WILDCARD _ VALUE ) ) ; <nl> registerOre ( " record " , Items . record _ 13 ) ; <nl> registerOre ( " record " , Items . record _ cat ) ; <nl> registerOre ( " record " , Items . record _ blocks ) ; <nl> @ @ - 96 , 41 + 122 , 51 @ @ public class OreDictionary <nl> replacements . put ( new ItemStack ( Blocks . stone , 1 , WILDCARD _ VALUE ) , " stone " ) ; <nl> replacements . put ( new ItemStack ( Blocks . cobblestone ) , " cobblestone " ) ; <nl> replacements . put ( new ItemStack ( Blocks . cobblestone , 1 , WILDCARD _ VALUE ) , " cobblestone " ) ; <nl> + replacements . put ( new ItemStack ( Items . gold _ ingot ) , " ingotGold " ) ; <nl> + replacements . put ( new ItemStack ( Items . iron _ ingot ) , " ingotIron " ) ; <nl> replacements . put ( new ItemStack ( Items . diamond ) , " gemDiamond " ) ; <nl> replacements . put ( new ItemStack ( Items . emerald ) , " gemEmerald " ) ; <nl> replacements . put ( new ItemStack ( Items . redstone ) , " dustRedstone " ) ; <nl> replacements . put ( new ItemStack ( Items . glowstone _ dust ) , " dustGlowstone " ) ; <nl> replacements . put ( new ItemStack ( Blocks . glowstone ) , " glowstone " ) ; <nl> + replacements . put ( new ItemStack ( Items . slime _ ball ) , " slimeball " ) ; <nl> + replacements . put ( new ItemStack ( Blocks . glass ) , " blockGlassColorless " ) ; <nl> <nl> / / Register dyes <nl> String [ ] dyes = <nl> { <nl> - " dyeBlack " , <nl> - " dyeRed " , <nl> - " dyeGreen " , <nl> - " dyeBrown " , <nl> - " dyeBlue " , <nl> - " dyePurple " , <nl> - " dyeCyan " , <nl> - " dyeLightGray " , <nl> - " dyeGray " , <nl> - " dyePink " , <nl> - " dyeLime " , <nl> - " dyeYellow " , <nl> - " dyeLightBlue " , <nl> - " dyeMagenta " , <nl> - " dyeOrange " , <nl> - " dyeWhite " <nl> + " Black " , <nl> + " Red " , <nl> + " Green " , <nl> + " Brown " , <nl> + " Blue " , <nl> + " Purple " , <nl> + " Cyan " , <nl> + " LightGray " , <nl> + " Gray " , <nl> + " Pink " , <nl> + " Lime " , <nl> + " Yellow " , <nl> + " LightBlue " , <nl> + " Magenta " , <nl> + " Orange " , <nl> + " White " <nl> } ; <nl> <nl> for ( int i = 0 ; i < 16 ; i + + ) <nl> { <nl> ItemStack dye = new ItemStack ( Items . dye , 1 , i ) ; <nl> + ItemStack block = new ItemStack ( Blocks . stained _ glass , 1 , 15 - i ) ; <nl> + ItemStack pane = new ItemStack ( Blocks . stained _ glass _ pane , 1 , 15 - i ) ; <nl> if ( ! hasInit ) <nl> { <nl> - registerOre ( dyes [ i ] , dye ) ; <nl> + registerOre ( " dye " + dyes [ i ] , dye ) ; <nl> + registerOre ( " blockGlass " + dyes [ i ] , block ) ; <nl> + registerOre ( " paneGlass " + dyes [ i ] , pane ) ; <nl> } <nl> - replacements . put ( dye , dyes [ i ] ) ; <nl> + replacements . put ( dye , " dye " + dyes [ i ] ) ; <nl> + replacements . put ( block , " blockGlass " + dyes [ i ] ) ; <nl> + replacements . put ( pane , " paneGlass " + dyes [ i ] ) ; <nl> } <nl> hasInit = true ; <nl> <nl> @ @ - 150 , 7 + 186 , 9 @ @ public class OreDictionary <nl> new ItemStack ( Blocks . birch _ stairs ) , <nl> new ItemStack ( Blocks . jungle _ stairs ) , <nl> new ItemStack ( Blocks . acacia _ stairs ) , <nl> - new ItemStack ( Blocks . dark _ oak _ stairs ) <nl> + new ItemStack ( Blocks . dark _ oak _ stairs ) , <nl> + new ItemStack ( Blocks . glass _ pane ) , <nl> + new ItemStack ( Blocks . stained _ glass ) <nl> } ; <nl> <nl> List < IRecipe > recipes = CraftingManager . getInstance ( ) . getRecipeList ( ) ;

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / oredict / OreDictionary . java b / src / main / java / net / minecraftforge / oredict / OreDictionary . java 
 index 5202172 . . d420e62 100644 
 - - - a / src / main / java / net / minecraftforge / oredict / OreDictionary . java 
 + + + b / src / main / java / net / minecraftforge / oredict / OreDictionary . java 
 @ @ - 8 , 6 + 8 , 7 @ @ import java . util . List ; 
 import java . util . Map ; 
 import java . util . Set ; 
 
 + import net . minecraft . block . BlockPrismarine ; 
 import net . minecraft . util . ResourceLocation ; 
 import org . apache . logging . log4j . Level ; 
 
 @ @ - 55 , 6 + 56 , 7 @ @ public class OreDictionary 
 { 
 if ( ! hasInit ) 
 { 
 + / / tree - and wood - related things 
 registerOre ( " logWood " , new ItemStack ( Blocks . log , 1 , WILDCARD _ VALUE ) ) ; 
 registerOre ( " logWood " , new ItemStack ( Blocks . log2 , 1 , WILDCARD _ VALUE ) ) ; 
 registerOre ( " plankWood " , new ItemStack ( Blocks . planks , 1 , WILDCARD _ VALUE ) ) ; 
 @ @ - 69 , 6 + 71 , 9 @ @ public class OreDictionary 
 registerOre ( " treeSapling " , new ItemStack ( Blocks . sapling , 1 , WILDCARD _ VALUE ) ) ; 
 registerOre ( " treeLeaves " , new ItemStack ( Blocks . leaves , 1 , WILDCARD _ VALUE ) ) ; 
 registerOre ( " treeLeaves " , new ItemStack ( Blocks . leaves2 , 1 , WILDCARD _ VALUE ) ) ; 
 + registerOre ( " vine " , Blocks . vine ) ; 
 + 
 + / / Ores 
 registerOre ( " oreGold " , Blocks . gold _ ore ) ; 
 registerOre ( " oreIron " , Blocks . iron _ ore ) ; 
 registerOre ( " oreLapis " , Blocks . lapis _ ore ) ; 
 @ @ - 77 , 43 + 82 , 58 @ @ public class OreDictionary 
 registerOre ( " oreEmerald " , Blocks . emerald _ ore ) ; 
 registerOre ( " oreQuartz " , Blocks . quartz _ ore ) ; 
 registerOre ( " oreCoal " , Blocks . coal _ ore ) ; 
 - registerOre ( " blockGold " , Blocks . gold _ block ) ; 
 - registerOre ( " blockIron " , Blocks . iron _ block ) ; 
 - registerOre ( " blockLapis " , Blocks . lapis _ block ) ; 
 - registerOre ( " blockDiamond " , Blocks . diamond _ block ) ; 
 - registerOre ( " blockRedstone " , Blocks . redstone _ block ) ; 
 - registerOre ( " blockEmerald " , Blocks . emerald _ block ) ; 
 - registerOre ( " blockQuartz " , Blocks . quartz _ block ) ; 
 - registerOre ( " blockCoal " , Blocks . coal _ block ) ; 
 - registerOre ( " blockGlassColorless " , Blocks . glass ) ; 
 - registerOre ( " blockGlass " , Blocks . glass ) ; 
 - registerOre ( " blockGlass " , new ItemStack ( Blocks . stained _ glass , 1 , WILDCARD _ VALUE ) ) ; 
 - / / blockGlass { Color } is added below with dyes 
 - registerOre ( " paneGlassColorless " , Blocks . glass _ pane ) ; 
 - registerOre ( " paneGlass " , Blocks . glass _ pane ) ; 
 - registerOre ( " paneGlass " , new ItemStack ( Blocks . stained _ glass _ pane , 1 , WILDCARD _ VALUE ) ) ; 
 - / / paneGlass { Color } is added below with dyes 
 + 
 + / / ingots / nuggets 
 registerOre ( " ingotIron " , Items . iron _ ingot ) ; 
 registerOre ( " ingotGold " , Items . gold _ ingot ) ; 
 registerOre ( " ingotBrick " , Items . brick ) ; 
 registerOre ( " ingotBrickNether " , Items . netherbrick ) ; 
 registerOre ( " nuggetGold " , Items . gold _ nugget ) ; 
 + 
 + / / gems and dusts 
 registerOre ( " gemDiamond " , Items . diamond ) ; 
 registerOre ( " gemEmerald " , Items . emerald ) ; 
 registerOre ( " gemQuartz " , Items . quartz ) ; 
 + registerOre ( " gemPrismarine " , Items . prismarine _ shard ) ; 
 + registerOre ( " dustPrismarine " , Items . prismarine _ crystals ) ; 
 registerOre ( " dustRedstone " , Items . redstone ) ; 
 registerOre ( " dustGlowstone " , Items . glowstone _ dust ) ; 
 registerOre ( " gemLapis " , new ItemStack ( Items . dye , 1 , 4 ) ) ; 
 - registerOre ( " slimeball " , Items . slime _ ball ) ; 
 - registerOre ( " glowstone " , Blocks . glowstone ) ; 
 + 
 + / / storage blocks 
 + registerOre ( " blockGold " , Blocks . gold _ block ) ; 
 + registerOre ( " blockIron " , Blocks . iron _ block ) ; 
 + registerOre ( " blockLapis " , Blocks . lapis _ block ) ; 
 + registerOre ( " blockDiamond " , Blocks . diamond _ block ) ; 
 + registerOre ( " blockRedstone " , Blocks . redstone _ block ) ; 
 + registerOre ( " blockEmerald " , Blocks . emerald _ block ) ; 
 + registerOre ( " blockQuartz " , Blocks . quartz _ block ) ; 
 + registerOre ( " blockCoal " , Blocks . coal _ block ) ; 
 + 
 + / / crops 
 registerOre ( " cropWheat " , Items . wheat ) ; 
 registerOre ( " cropPotato " , Items . potato ) ; 
 registerOre ( " cropCarrot " , Items . carrot ) ; 
 - registerOre ( " stone " , Blocks . stone ) ; 
 - registerOre ( " cobblestone " , Blocks . cobblestone ) ; 
 - registerOre ( " sandstone " , new ItemStack ( Blocks . sandstone , 1 , WILDCARD _ VALUE ) ) ; 
 - registerOre ( " sand " , new ItemStack ( Blocks . sand , 1 , WILDCARD _ VALUE ) ) ; 
 + registerOre ( " cropNetherWart " , Items . nether _ wart ) ; 
 + registerOre ( " sugarcane " , Items . reeds ) ; 
 + registerOre ( " blockCactus " , Blocks . cactus ) ; 
 + 
 + / / misc materials 
 registerOre ( " dye " , new ItemStack ( Items . dye , 1 , WILDCARD _ VALUE ) ) ; 
 + registerOre ( " paper " , new ItemStack ( Items . paper ) ) ; 
 + 
 + / / mob drops 
 + registerOre ( " slimeball " , Items . slime _ ball ) ; 
 + registerOre ( " enderpearl " , Items . ender _ pearl ) ; 
 + registerOre ( " bone " , Items . bone ) ; 
 + registerOre ( " gunpowder " , Items . gunpowder ) ; 
 + registerOre ( " string " , Items . string ) ; 
 + registerOre ( " netherStar " , Items . nether _ star ) ; 
 + registerOre ( " leather " , Items . leather ) ; 
 + registerOre ( " feather " , Items . feather ) ; 
 + registerOre ( " egg " , Items . egg ) ; 
 + 
 + / / records 
 registerOre ( " record " , Items . record _ 13 ) ; 
 registerOre ( " record " , Items . record _ cat ) ; 
 registerOre ( " record " , Items . record _ blocks ) ; 
 @ @ - 126 , 6 + 146 , 42 @ @ public class OreDictionary 
 registerOre ( " record " , Items . record _ ward ) ; 
 registerOre ( " record " , Items . record _ 11 ) ; 
 registerOre ( " record " , Items . record _ wait ) ; 
 + 
 + / / blocks 
 + registerOre ( " dirt " , Blocks . dirt ) ; 
 + registerOre ( " grass " , Blocks . grass ) ; 
 + registerOre ( " stone " , Blocks . stone ) ; 
 + registerOre ( " cobblestone " , Blocks . cobblestone ) ; 
 + registerOre ( " gravel " , Blocks . gravel ) ; 
 + registerOre ( " sand " , new ItemStack ( Blocks . sand , 1 , WILDCARD _ VALUE ) ) ; 
 + registerOre ( " sandstone " , new ItemStack ( Blocks . sandstone , 1 , WILDCARD _ VALUE ) ) ; 
 + registerOre ( " sandstone " , new ItemStack ( Blocks . red _ sandstone , 1 , WILDCARD _ VALUE ) ) ; 
 + registerOre ( " netherrack " , Blocks . netherrack ) ; 
 + registerOre ( " obsidian " , Blocks . obsidian ) ; 
 + registerOre ( " glowstone " , Blocks . glowstone ) ; 
 + registerOre ( " endstone " , Blocks . end _ stone ) ; 
 + registerOre ( " torch " , Blocks . torch ) ; 
 + registerOre ( " workbench " , Blocks . crafting _ table ) ; 
 + registerOre ( " blockSlime " , Blocks . slime _ block ) ; 
 + registerOre ( " blockPrismarine " , new ItemStack ( Blocks . prismarine , 1 , BlockPrismarine . EnumType . ROUGH . getMetadata ( ) ) ) ; 
 + registerOre ( " blockPrismarineBrick " , new ItemStack ( Blocks . prismarine , 1 , BlockPrismarine . EnumType . BRICKS . getMetadata ( ) ) ) ; 
 + registerOre ( " blockPrismarineDark " , new ItemStack ( Blocks . prismarine , 1 , BlockPrismarine . EnumType . DARK . getMetadata ( ) ) ) ; 
 + registerOre ( " stoneGranite " , new ItemStack ( Blocks . stone , 1 , 1 ) ) ; 
 + registerOre ( " stoneGranitePolished " , new ItemStack ( Blocks . stone , 1 , 2 ) ) ; 
 + registerOre ( " stoneDiorite " , new ItemStack ( Blocks . stone , 1 , 3 ) ) ; 
 + registerOre ( " stoneDioritePolished " , new ItemStack ( Blocks . stone , 1 , 4 ) ) ; 
 + registerOre ( " stoneAndesite " , new ItemStack ( Blocks . stone , 1 , 5 ) ) ; 
 + registerOre ( " stoneAndesitePolished " , new ItemStack ( Blocks . stone , 1 , 6 ) ) ; 
 + registerOre ( " blockGlassColorless " , Blocks . glass ) ; 
 + registerOre ( " blockGlass " , Blocks . glass ) ; 
 + registerOre ( " blockGlass " , new ItemStack ( Blocks . stained _ glass , 1 , WILDCARD _ VALUE ) ) ; 
 + / / blockGlass { Color } is added below with dyes 
 + registerOre ( " paneGlassColorless " , Blocks . glass _ pane ) ; 
 + registerOre ( " paneGlass " , Blocks . glass _ pane ) ; 
 + registerOre ( " paneGlass " , new ItemStack ( Blocks . stained _ glass _ pane , 1 , WILDCARD _ VALUE ) ) ; 
 + / / paneGlass { Color } is added below with dyes 
 + 
 + / / chests 
 registerOre ( " chest " , Blocks . chest ) ; 
 registerOre ( " chest " , Blocks . ender _ chest ) ; 
 registerOre ( " chest " , Blocks . trapped _ chest ) ; 
 @ @ - 136 , 23 + 192 , 58 @ @ public class OreDictionary 
 
 / / Build our list of items to replace with ore tags 
 Map < ItemStack , String > replacements = new HashMap < ItemStack , String > ( ) ; 
 + 
 + / / wood - related things 
 replacements . put ( new ItemStack ( Items . stick ) , " stickWood " ) ; 
 replacements . put ( new ItemStack ( Blocks . planks ) , " plankWood " ) ; 
 replacements . put ( new ItemStack ( Blocks . planks , 1 , WILDCARD _ VALUE ) , " plankWood " ) ; 
 replacements . put ( new ItemStack ( Blocks . wooden _ slab , 1 , WILDCARD _ VALUE ) , " slabWood " ) ; 
 - replacements . put ( new ItemStack ( Blocks . stone ) , " stone " ) ; 
 - / / replacements . put ( new ItemStack ( Blocks . stone , 1 , WILDCARD _ VALUE ) , " stone " ) ; 
 - replacements . put ( new ItemStack ( Blocks . cobblestone ) , " cobblestone " ) ; 
 - replacements . put ( new ItemStack ( Blocks . cobblestone , 1 , WILDCARD _ VALUE ) , " cobblestone " ) ; 
 + 
 + / / ingots / nuggets 
 replacements . put ( new ItemStack ( Items . gold _ ingot ) , " ingotGold " ) ; 
 replacements . put ( new ItemStack ( Items . iron _ ingot ) , " ingotIron " ) ; 
 + 
 + / / gems and dusts 
 replacements . put ( new ItemStack ( Items . diamond ) , " gemDiamond " ) ; 
 replacements . put ( new ItemStack ( Items . emerald ) , " gemEmerald " ) ; 
 + replacements . put ( new ItemStack ( Items . prismarine _ shard ) , " gemPrismarine " ) ; 
 + replacements . put ( new ItemStack ( Items . prismarine _ crystals ) , " dustPrismarine " ) ; 
 replacements . put ( new ItemStack ( Items . redstone ) , " dustRedstone " ) ; 
 replacements . put ( new ItemStack ( Items . glowstone _ dust ) , " dustGlowstone " ) ; 
 - replacements . put ( new ItemStack ( Blocks . glowstone ) , " glowstone " ) ; 
 + 
 + / / crops 
 + replacements . put ( new ItemStack ( Items . reeds ) , " sugarcane " ) ; 
 + replacements . put ( new ItemStack ( Blocks . cactus ) , " blockCactus " ) ; 
 + 
 + / / misc materials 
 + replacements . put ( new ItemStack ( Items . paper ) , " paper " ) ; 
 + 
 + / / mob drops 
 replacements . put ( new ItemStack ( Items . slime _ ball ) , " slimeball " ) ; 
 + replacements . put ( new ItemStack ( Items . string ) , " string " ) ; 
 + replacements . put ( new ItemStack ( Items . leather ) , " leather " ) ; 
 + replacements . put ( new ItemStack ( Items . ender _ pearl ) , " enderpearl " ) ; 
 + replacements . put ( new ItemStack ( Items . gunpowder ) , " gunpowder " ) ; 
 + replacements . put ( new ItemStack ( Items . nether _ star ) , " netherStar " ) ; 
 + replacements . put ( new ItemStack ( Items . feather ) , " feather " ) ; 
 + replacements . put ( new ItemStack ( Items . bone ) , " bone " ) ; 
 + replacements . put ( new ItemStack ( Items . egg ) , " egg " ) ; 
 + 
 + / / blocks 
 + replacements . put ( new ItemStack ( Blocks . stone ) , " stone " ) ; 
 + replacements . put ( new ItemStack ( Blocks . cobblestone ) , " cobblestone " ) ; 
 + replacements . put ( new ItemStack ( Blocks . cobblestone , 1 , WILDCARD _ VALUE ) , " cobblestone " ) ; 
 + replacements . put ( new ItemStack ( Blocks . glowstone ) , " glowstone " ) ; 
 replacements . put ( new ItemStack ( Blocks . glass ) , " blockGlassColorless " ) ; 
 + replacements . put ( new ItemStack ( Blocks . prismarine ) , " prismarine " ) ; 
 + replacements . put ( new ItemStack ( Blocks . stone , 1 , 1 ) , " stoneGranite " ) ; 
 + replacements . put ( new ItemStack ( Blocks . stone , 1 , 2 ) , " stoneGranitePolished " ) ; 
 + replacements . put ( new ItemStack ( Blocks . stone , 1 , 3 ) , " stoneDiorite " ) ; 
 + replacements . put ( new ItemStack ( Blocks . stone , 1 , 4 ) , " stoneDioritePolished " ) ; 
 + replacements . put ( new ItemStack ( Blocks . stone , 1 , 5 ) , " stoneAndesite " ) ; 
 + replacements . put ( new ItemStack ( Blocks . stone , 1 , 6 ) , " stoneAndesitePolished " ) ; 
 + 
 + / / chests 
 replacements . put ( new ItemStack ( Blocks . chest ) , " chestWood " ) ; 
 replacements . put ( new ItemStack ( Blocks . ender _ chest ) , " chestEnder " ) ; 
 replacements . put ( new ItemStack ( Blocks . trapped _ chest ) , " chestTrapped " ) ;

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / oredict / OreDictionary . java b / src / main / java / net / minecraftforge / oredict / OreDictionary . java 
 index 186690a . . 74fa602 100644 
 - - - a / src / main / java / net / minecraftforge / oredict / OreDictionary . java 
 + + + b / src / main / java / net / minecraftforge / oredict / OreDictionary . java 
 @ @ - 63 , 16 + 63 , 42 @ @ public class OreDictionary 
 registerOre ( " oreEmerald " , Blocks . emerald _ ore ) ; 
 registerOre ( " oreQuartz " , Blocks . quartz _ ore ) ; 
 registerOre ( " oreCoal " , Blocks . coal _ ore ) ; 
 + registerOre ( " blockGold " , Blocks . gold _ block ) ; 
 + registerOre ( " blockIron " , Blocks . iron _ block ) ; 
 + registerOre ( " blockLapis " , Blocks . lapis _ block ) ; 
 + registerOre ( " blockDiamond " , Blocks . diamond _ block ) ; 
 + registerOre ( " blockRedstone " , Blocks . redstone _ block ) ; 
 + registerOre ( " blockEmerald " , Blocks . emerald _ block ) ; 
 + registerOre ( " blockQuartz " , Blocks . quartz _ block ) ; 
 + registerOre ( " blockCoal " , Blocks . coal _ block ) ; 
 + registerOre ( " blockGlassColorless " , Blocks . glass ) ; 
 + registerOre ( " blockGlass " , Blocks . glass ) ; 
 + registerOre ( " blockGlass " , new ItemStack ( Blocks . stained _ glass , 1 , WILDCARD _ VALUE ) ) ; 
 + / / blockGlass { Color } is added below with dyes 
 + registerOre ( " paneGlassColorless " , Blocks . glass _ pane ) ; 
 + registerOre ( " paneGlass " , Blocks . glass _ pane ) ; 
 + registerOre ( " paneGlass " , new ItemStack ( Blocks . stained _ glass _ pane , 1 , WILDCARD _ VALUE ) ) ; 
 + / / paneGlass { Color } is added below with dyes 
 + registerOre ( " ingotIron " , Items . iron _ ingot ) ; 
 + registerOre ( " ingotGold " , Items . gold _ ingot ) ; 
 + registerOre ( " ingotBrick " , Items . brick ) ; 
 + registerOre ( " ingotBrickNether " , Items . netherbrick ) ; 
 + registerOre ( " nuggetGold " , Items . gold _ nugget ) ; 
 registerOre ( " gemDiamond " , Items . diamond ) ; 
 registerOre ( " gemEmerald " , Items . emerald ) ; 
 + registerOre ( " gemQuartz " , Items . quartz ) ; 
 registerOre ( " dustRedstone " , Items . redstone ) ; 
 registerOre ( " dustGlowstone " , Items . glowstone _ dust ) ; 
 + registerOre ( " dustLapis " , new ItemStack ( Items . dye , 1 , 4 ) ) ; 
 + registerOre ( " slimeball " , Items . slime _ ball ) ; 
 registerOre ( " glowstone " , Blocks . glowstone ) ; 
 registerOre ( " cropWheat " , Items . wheat ) ; 
 registerOre ( " cropPotato " , Items . potato ) ; 
 registerOre ( " cropCarrot " , Items . carrot ) ; 
 registerOre ( " stone " , Blocks . stone ) ; 
 registerOre ( " cobblestone " , Blocks . cobblestone ) ; 
 + registerOre ( " sandstone " , new ItemStack ( Blocks . sandstone , 1 , WILDCARD _ VALUE ) ) ; 
 + registerOre ( " dye " , new ItemStack ( Items . dye , 1 , WILDCARD _ VALUE ) ) ; 
 registerOre ( " record " , Items . record _ 13 ) ; 
 registerOre ( " record " , Items . record _ cat ) ; 
 registerOre ( " record " , Items . record _ blocks ) ; 
 @ @ - 96 , 41 + 122 , 51 @ @ public class OreDictionary 
 replacements . put ( new ItemStack ( Blocks . stone , 1 , WILDCARD _ VALUE ) , " stone " ) ; 
 replacements . put ( new ItemStack ( Blocks . cobblestone ) , " cobblestone " ) ; 
 replacements . put ( new ItemStack ( Blocks . cobblestone , 1 , WILDCARD _ VALUE ) , " cobblestone " ) ; 
 + replacements . put ( new ItemStack ( Items . gold _ ingot ) , " ingotGold " ) ; 
 + replacements . put ( new ItemStack ( Items . iron _ ingot ) , " ingotIron " ) ; 
 replacements . put ( new ItemStack ( Items . diamond ) , " gemDiamond " ) ; 
 replacements . put ( new ItemStack ( Items . emerald ) , " gemEmerald " ) ; 
 replacements . put ( new ItemStack ( Items . redstone ) , " dustRedstone " ) ; 
 replacements . put ( new ItemStack ( Items . glowstone _ dust ) , " dustGlowstone " ) ; 
 replacements . put ( new ItemStack ( Blocks . glowstone ) , " glowstone " ) ; 
 + replacements . put ( new ItemStack ( Items . slime _ ball ) , " slimeball " ) ; 
 + replacements . put ( new ItemStack ( Blocks . glass ) , " blockGlassColorless " ) ; 
 
 / / Register dyes 
 String [ ] dyes = 
 { 
 - " dyeBlack " , 
 - " dyeRed " , 
 - " dyeGreen " , 
 - " dyeBrown " , 
 - " dyeBlue " , 
 - " dyePurple " , 
 - " dyeCyan " , 
 - " dyeLightGray " , 
 - " dyeGray " , 
 - " dyePink " , 
 - " dyeLime " , 
 - " dyeYellow " , 
 - " dyeLightBlue " , 
 - " dyeMagenta " , 
 - " dyeOrange " , 
 - " dyeWhite " 
 + " Black " , 
 + " Red " , 
 + " Green " , 
 + " Brown " , 
 + " Blue " , 
 + " Purple " , 
 + " Cyan " , 
 + " LightGray " , 
 + " Gray " , 
 + " Pink " , 
 + " Lime " , 
 + " Yellow " , 
 + " LightBlue " , 
 + " Magenta " , 
 + " Orange " , 
 + " White " 
 } ; 
 
 for ( int i = 0 ; i < 16 ; i + + ) 
 { 
 ItemStack dye = new ItemStack ( Items . dye , 1 , i ) ; 
 + ItemStack block = new ItemStack ( Blocks . stained _ glass , 1 , 15 - i ) ; 
 + ItemStack pane = new ItemStack ( Blocks . stained _ glass _ pane , 1 , 15 - i ) ; 
 if ( ! hasInit ) 
 { 
 - registerOre ( dyes [ i ] , dye ) ; 
 + registerOre ( " dye " + dyes [ i ] , dye ) ; 
 + registerOre ( " blockGlass " + dyes [ i ] , block ) ; 
 + registerOre ( " paneGlass " + dyes [ i ] , pane ) ; 
 } 
 - replacements . put ( dye , dyes [ i ] ) ; 
 + replacements . put ( dye , " dye " + dyes [ i ] ) ; 
 + replacements . put ( block , " blockGlass " + dyes [ i ] ) ; 
 + replacements . put ( pane , " paneGlass " + dyes [ i ] ) ; 
 } 
 hasInit = true ; 
 
 @ @ - 150 , 7 + 186 , 9 @ @ public class OreDictionary 
 new ItemStack ( Blocks . birch _ stairs ) , 
 new ItemStack ( Blocks . jungle _ stairs ) , 
 new ItemStack ( Blocks . acacia _ stairs ) , 
 - new ItemStack ( Blocks . dark _ oak _ stairs ) 
 + new ItemStack ( Blocks . dark _ oak _ stairs ) , 
 + new ItemStack ( Blocks . glass _ pane ) , 
 + new ItemStack ( Blocks . stained _ glass ) 
 } ; 
 
 List < IRecipe > recipes = CraftingManager . getInstance ( ) . getRecipeList ( ) ;
