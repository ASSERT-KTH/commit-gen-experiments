BLEU SCORE: 0.04932351569489709

TEST MSG: New hook in WorldProvider to control client lighting re - checks
GENERATED MSG: Allow WorldProviders to specify in - game music

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch b / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch <nl> index a15519d . . 36e3609 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch <nl> @ @ - 9 , 6 + 9 , 15 @ @ <nl> this . field _ 147299 _ f . field _ 71474 _ y . field _ 74318 _ M = p _ 147282 _ 1 _ . func _ 149192 _ g ( ) ; <nl> this . field _ 147299 _ f . func _ 71403 _ a ( this . field _ 147300 _ g ) ; <nl> this . field _ 147299 _ f . field _ 71439 _ g . field _ 71093 _ bK = p _ 147282 _ 1 _ . func _ 149194 _ f ( ) ; <nl> + @ @ - 745 , 7 + 745 , 7 @ @ <nl> + chunk . func _ 186033 _ a ( p _ 147263 _ 1 _ . func _ 186946 _ a ( ) , p _ 147263 _ 1 _ . func _ 149276 _ g ( ) , p _ 147263 _ 1 _ . func _ 149274 _ i ( ) ) ; <nl> + this . field _ 147300 _ g . func _ 147458 _ c ( p _ 147263 _ 1 _ . func _ 149273 _ e ( ) < < 4 , 0 , p _ 147263 _ 1 _ . func _ 149271 _ f ( ) < < 4 , ( p _ 147263 _ 1 _ . func _ 149273 _ e ( ) < < 4 ) + 15 , 256 , ( p _ 147263 _ 1 _ . func _ 149271 _ f ( ) < < 4 ) + 15 ) ; <nl> + <nl> + - if ( ! p _ 147263 _ 1 _ . func _ 149274 _ i ( ) | | ! ( this . field _ 147300 _ g . field _ 73011 _ w instanceof WorldProviderSurface ) ) <nl> + + if ( ! p _ 147263 _ 1 _ . func _ 149274 _ i ( ) | | this . field _ 147300 _ g . field _ 73011 _ w . shouldClientCheckLighting ( ) ) <nl> + { <nl> + chunk . func _ 76613 _ n ( ) ; <nl> + } <nl> @ @ - 757 , 7 + 757 , 7 @ @ <nl> <nl> if ( tileentity ! = null ) <nl> diff - - git a / patches / minecraft / net / minecraft / world / WorldProvider . java . patch b / patches / minecraft / net / minecraft / world / WorldProvider . java . patch <nl> index 7c6b9c5 . . 06d6a46 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / WorldProvider . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / WorldProvider . java . patch <nl> @ @ - 65 , 7 + 65 , 7 @ @ <nl> } <nl> <nl> @ SideOnly ( Side . CLIENT ) <nl> - @ @ - 241 , 6 + 216 , 336 @ @ <nl> + @ @ - 241 , 6 + 216 , 352 @ @ <nl> return new WorldBorder ( ) ; <nl> } <nl> <nl> @ @ - 118 , 6 + 118 , 22 @ @ <nl> + return 1 . 0 ; <nl> + } <nl> + <nl> + + / * * <nl> + + * If this method returns true , then chunks received by the client will <nl> + + * have { @ link net . minecraft . world . chunk . Chunk # resetRelightChecks } called <nl> + + * on them , queuing lighting checks for all air blocks in the chunk ( and <nl> + + * any adjacent light - emitting blocks ) . <nl> + + * <nl> + + * Returning true here is recommended if the chunk generator used also <nl> + + * does this for newly generated chunks . <nl> + + * <nl> + + * @ return true if lighting checks should be performed <nl> + + * / <nl> + + public boolean shouldClientCheckLighting ( ) <nl> + + { <nl> + + return ! ( this instanceof WorldProviderSurface ) ; <nl> + + } <nl> + + <nl> + @ Nullable <nl> + @ SideOnly ( Side . CLIENT ) <nl> + public net . minecraftforge . client . IRenderHandler getSkyRenderer ( )
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> index ab735cf . . f5a02b3 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> @ @ - 523 , 7 + 523 , 17 @ @ <nl> } <nl> <nl> public boolean func _ 70002 _ Q ( ) <nl> - @ @ - 3181 , 11 + 3093 , 11 @ @ <nl> + @ @ - 3152 , 6 + 3064 , 9 @ @ <nl> + } <nl> + else if ( this . field _ 71439 _ g ! = null ) <nl> + { <nl> + + MusicTicker . MusicType type = this . field _ 71441 _ e . field _ 73011 _ w . getMusicType ( ) ; <nl> + + if ( type ! = null ) return type ; <nl> + + <nl> + if ( this . field _ 71439 _ g . field _ 70170 _ p . field _ 73011 _ w instanceof WorldProviderHell ) <nl> + { <nl> + return MusicTicker . MusicType . NETHER ; <nl> + @ @ - 3181 , 11 + 3096 , 11 @ @ <nl> { <nl> if ( Keyboard . getEventKeyState ( ) ) <nl> { <nl> @ @ - 537 , 7 + 547 , 7 @ @ <nl> { <nl> this . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( ScreenShotHelper . func _ 148260 _ a ( this . field _ 71412 _ D , this . field _ 71443 _ c , this . field _ 71440 _ d , this . field _ 147124 _ at ) ) ; <nl> } <nl> - @ @ - 3199 , 6 + 3111 , 7 @ @ <nl> + @ @ - 3199 , 6 + 3114 , 7 @ @ <nl> } <nl> } <nl> } <nl> @ @ - 545 , 7 + 555 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 3328 , 6 + 3241 , 12 @ @ <nl> + @ @ - 3328 , 6 + 3244 , 12 @ @ <nl> return this . field _ 184127 _ aH ; <nl> } <nl> <nl> @ @ - 558 , 7 + 568 , 7 @ @ <nl> public boolean func _ 189648 _ am ( ) <nl> { <nl> return this . field _ 71439 _ g ! = null & & this . field _ 71439 _ g . func _ 175140 _ cp ( ) | | this . field _ 71474 _ y . field _ 178879 _ v ; <nl> - @ @ - 3342 , 4 + 3261 , 9 @ @ <nl> + @ @ - 3342 , 4 + 3264 , 9 @ @ <nl> { <nl> return this . field _ 193035 _ aW ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / WorldProvider . java . patch b / patches / minecraft / net / minecraft / world / WorldProvider . java . patch <nl> index 538e5ff . . 7c6b9c5 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / WorldProvider . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / WorldProvider . java . patch <nl> @ @ - 65 , 7 + 65 , 7 @ @ <nl> } <nl> <nl> @ SideOnly ( Side . CLIENT ) <nl> - @ @ - 241 , 6 + 216 , 323 @ @ <nl> + @ @ - 241 , 6 + 216 , 336 @ @ <nl> return new WorldBorder ( ) ; <nl> } <nl> <nl> @ @ - 227 , 6 + 227 , 19 @ @ <nl> + public net . minecraftforge . common . capabilities . ICapabilityProvider initCapabilities ( ) { <nl> + return null ; <nl> + } <nl> + + <nl> + + / * * <nl> + + * Called on the client to get the music type to play when in this world type . <nl> + + * At the time of calling , the client player and world are guaranteed to be non - null <nl> + + * @ return null to use vanilla logic , otherwise a MusicType to play in this world <nl> + + * / <nl> + + @ Nullable <nl> + + @ SideOnly ( Side . CLIENT ) <nl> + + public net . minecraft . client . audio . MusicTicker . MusicType getMusicType ( ) <nl> + + { <nl> + + return null ; <nl> + + } <nl> + + <nl> + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = Start Moved From World = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + <nl> + public Biome getBiomeForCoords ( BlockPos pos ) <nl> diff - - git a / src / main / java / net / minecraftforge / client / EnumHelperClient . java b / src / main / java / net / minecraftforge / client / EnumHelperClient . java <nl> index 6eddcbd . . 69f2a92 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / EnumHelperClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / EnumHelperClient . java <nl> @ @ - 19 , 6 + 19 , 8 @ @ <nl> <nl> package net . minecraftforge . client ; <nl> <nl> + import net . minecraft . client . audio . MusicTicker ; <nl> + import net . minecraft . util . SoundEvent ; <nl> import net . minecraft . util . Util . EnumOS ; <nl> import net . minecraft . world . GameType ; <nl> import net . minecraft . client . settings . GameSettings . Options ; <nl> @ @ - 62 , 6 + 64 , 12 @ @ public class EnumHelperClient extends EnumHelper <nl> } <nl> <nl> @ Nullable <nl> + public static MusicTicker . MusicType addMusicType ( String name , SoundEvent sound , int minDelay , int maxDelay ) <nl> + { <nl> + return addEnum ( MusicTicker . MusicType . class , name , sound , minDelay , maxDelay ) ; <nl> + } <nl> + <nl> + @ Nullable <nl> private static < T extends Enum < ? > > T addEnum ( Class < T > enumType , String enumName , Object . . . paramValues ) <nl> { <nl> return addEnum ( clientTypes , enumType , enumName , paramValues ) ;

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch b / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch 
 index a15519d . . 36e3609 100644 
 - - - a / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / network / NetHandlerPlayClient . java . patch 
 @ @ - 9 , 6 + 9 , 15 @ @ 
 this . field _ 147299 _ f . field _ 71474 _ y . field _ 74318 _ M = p _ 147282 _ 1 _ . func _ 149192 _ g ( ) ; 
 this . field _ 147299 _ f . func _ 71403 _ a ( this . field _ 147300 _ g ) ; 
 this . field _ 147299 _ f . field _ 71439 _ g . field _ 71093 _ bK = p _ 147282 _ 1 _ . func _ 149194 _ f ( ) ; 
 + @ @ - 745 , 7 + 745 , 7 @ @ 
 + chunk . func _ 186033 _ a ( p _ 147263 _ 1 _ . func _ 186946 _ a ( ) , p _ 147263 _ 1 _ . func _ 149276 _ g ( ) , p _ 147263 _ 1 _ . func _ 149274 _ i ( ) ) ; 
 + this . field _ 147300 _ g . func _ 147458 _ c ( p _ 147263 _ 1 _ . func _ 149273 _ e ( ) < < 4 , 0 , p _ 147263 _ 1 _ . func _ 149271 _ f ( ) < < 4 , ( p _ 147263 _ 1 _ . func _ 149273 _ e ( ) < < 4 ) + 15 , 256 , ( p _ 147263 _ 1 _ . func _ 149271 _ f ( ) < < 4 ) + 15 ) ; 
 + 
 + - if ( ! p _ 147263 _ 1 _ . func _ 149274 _ i ( ) | | ! ( this . field _ 147300 _ g . field _ 73011 _ w instanceof WorldProviderSurface ) ) 
 + + if ( ! p _ 147263 _ 1 _ . func _ 149274 _ i ( ) | | this . field _ 147300 _ g . field _ 73011 _ w . shouldClientCheckLighting ( ) ) 
 + { 
 + chunk . func _ 76613 _ n ( ) ; 
 + } 
 @ @ - 757 , 7 + 757 , 7 @ @ 
 
 if ( tileentity ! = null ) 
 diff - - git a / patches / minecraft / net / minecraft / world / WorldProvider . java . patch b / patches / minecraft / net / minecraft / world / WorldProvider . java . patch 
 index 7c6b9c5 . . 06d6a46 100644 
 - - - a / patches / minecraft / net / minecraft / world / WorldProvider . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / WorldProvider . java . patch 
 @ @ - 65 , 7 + 65 , 7 @ @ 
 } 
 
 @ SideOnly ( Side . CLIENT ) 
 - @ @ - 241 , 6 + 216 , 336 @ @ 
 + @ @ - 241 , 6 + 216 , 352 @ @ 
 return new WorldBorder ( ) ; 
 } 
 
 @ @ - 118 , 6 + 118 , 22 @ @ 
 + return 1 . 0 ; 
 + } 
 + 
 + + / * * 
 + + * If this method returns true , then chunks received by the client will 
 + + * have { @ link net . minecraft . world . chunk . Chunk # resetRelightChecks } called 
 + + * on them , queuing lighting checks for all air blocks in the chunk ( and 
 + + * any adjacent light - emitting blocks ) . 
 + + * 
 + + * Returning true here is recommended if the chunk generator used also 
 + + * does this for newly generated chunks . 
 + + * 
 + + * @ return true if lighting checks should be performed 
 + + * / 
 + + public boolean shouldClientCheckLighting ( ) 
 + + { 
 + + return ! ( this instanceof WorldProviderSurface ) ; 
 + + } 
 + + 
 + @ Nullable 
 + @ SideOnly ( Side . CLIENT ) 
 + public net . minecraftforge . client . IRenderHandler getSkyRenderer ( )

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 index ab735cf . . f5a02b3 100644 
 - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 @ @ - 523 , 7 + 523 , 17 @ @ 
 } 
 
 public boolean func _ 70002 _ Q ( ) 
 - @ @ - 3181 , 11 + 3093 , 11 @ @ 
 + @ @ - 3152 , 6 + 3064 , 9 @ @ 
 + } 
 + else if ( this . field _ 71439 _ g ! = null ) 
 + { 
 + + MusicTicker . MusicType type = this . field _ 71441 _ e . field _ 73011 _ w . getMusicType ( ) ; 
 + + if ( type ! = null ) return type ; 
 + + 
 + if ( this . field _ 71439 _ g . field _ 70170 _ p . field _ 73011 _ w instanceof WorldProviderHell ) 
 + { 
 + return MusicTicker . MusicType . NETHER ; 
 + @ @ - 3181 , 11 + 3096 , 11 @ @ 
 { 
 if ( Keyboard . getEventKeyState ( ) ) 
 { 
 @ @ - 537 , 7 + 547 , 7 @ @ 
 { 
 this . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( ScreenShotHelper . func _ 148260 _ a ( this . field _ 71412 _ D , this . field _ 71443 _ c , this . field _ 71440 _ d , this . field _ 147124 _ at ) ) ; 
 } 
 - @ @ - 3199 , 6 + 3111 , 7 @ @ 
 + @ @ - 3199 , 6 + 3114 , 7 @ @ 
 } 
 } 
 } 
 @ @ - 545 , 7 + 555 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 3328 , 6 + 3241 , 12 @ @ 
 + @ @ - 3328 , 6 + 3244 , 12 @ @ 
 return this . field _ 184127 _ aH ; 
 } 
 
 @ @ - 558 , 7 + 568 , 7 @ @ 
 public boolean func _ 189648 _ am ( ) 
 { 
 return this . field _ 71439 _ g ! = null & & this . field _ 71439 _ g . func _ 175140 _ cp ( ) | | this . field _ 71474 _ y . field _ 178879 _ v ; 
 - @ @ - 3342 , 4 + 3261 , 9 @ @ 
 + @ @ - 3342 , 4 + 3264 , 9 @ @ 
 { 
 return this . field _ 193035 _ aW ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / WorldProvider . java . patch b / patches / minecraft / net / minecraft / world / WorldProvider . java . patch 
 index 538e5ff . . 7c6b9c5 100644 
 - - - a / patches / minecraft / net / minecraft / world / WorldProvider . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / WorldProvider . java . patch 
 @ @ - 65 , 7 + 65 , 7 @ @ 
 } 
 
 @ SideOnly ( Side . CLIENT ) 
 - @ @ - 241 , 6 + 216 , 323 @ @ 
 + @ @ - 241 , 6 + 216 , 336 @ @ 
 return new WorldBorder ( ) ; 
 } 
 
 @ @ - 227 , 6 + 227 , 19 @ @ 
 + public net . minecraftforge . common . capabilities . ICapabilityProvider initCapabilities ( ) { 
 + return null ; 
 + } 
 + + 
 + + / * * 
 + + * Called on the client to get the music type to play when in this world type . 
 + + * At the time of calling , the client player and world are guaranteed to be non - null 
 + + * @ return null to use vanilla logic , otherwise a MusicType to play in this world 
 + + * / 
 + + @ Nullable 
 + + @ SideOnly ( Side . CLIENT ) 
 + + public net . minecraft . client . audio . MusicTicker . MusicType getMusicType ( ) 
 + + { 
 + + return null ; 
 + + } 
 + + 
 + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = Start Moved From World = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + 
 + public Biome getBiomeForCoords ( BlockPos pos ) 
 diff - - git a / src / main / java / net / minecraftforge / client / EnumHelperClient . java b / src / main / java / net / minecraftforge / client / EnumHelperClient . java 
 index 6eddcbd . . 69f2a92 100644 
 - - - a / src / main / java / net / minecraftforge / client / EnumHelperClient . java 
 + + + b / src / main / java / net / minecraftforge / client / EnumHelperClient . java 
 @ @ - 19 , 6 + 19 , 8 @ @ 
 
 package net . minecraftforge . client ; 
 
 + import net . minecraft . client . audio . MusicTicker ; 
 + import net . minecraft . util . SoundEvent ; 
 import net . minecraft . util . Util . EnumOS ; 
 import net . minecraft . world . GameType ; 
 import net . minecraft . client . settings . GameSettings . Options ; 
 @ @ - 62 , 6 + 64 , 12 @ @ public class EnumHelperClient extends EnumHelper 
 } 
 
 @ Nullable 
 + public static MusicTicker . MusicType addMusicType ( String name , SoundEvent sound , int minDelay , int maxDelay ) 
 + { 
 + return addEnum ( MusicTicker . MusicType . class , name , sound , minDelay , maxDelay ) ; 
 + } 
 + 
 + @ Nullable 
 private static < T extends Enum < ? > > T addEnum ( Class < T > enumType , String enumName , Object . . . paramValues ) 
 { 
 return addEnum ( clientTypes , enumType , enumName , paramValues ) ;
