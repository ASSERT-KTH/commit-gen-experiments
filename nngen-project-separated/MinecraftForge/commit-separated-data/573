BLEU SCORE: 0.08116697886877475

TEST MSG: Fix build . gradle problems :
GENERATED MSG: Step 3 : The Rebirth

TEST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index 44973d8 . . 73e2c12 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 84 , 8 + 84 , 6 @ @ task changelog ( type : JenkinsChangelog ) { <nl> / / skip if there is no forge jenkins pass <nl> onlyIf { <nl> project . hasProperty ( ' forgeJenkinsPass ' ) <nl> - / / Not sure what abrar was trying to do here . . . <nl> - / / project . file ( " build / distributions / $ { project . name } - $ { project . version } - changelog . txt " ) . text = " " <nl> } <nl> <nl> outputs . upToDateWhen { false } / / never up to date <nl> @ @ - 108 , 13 + 106 , 14 @ @ task crowdin ( type : CrowdinDownload ) { <nl> } <nl> <nl> def extraTxts = [ <nl> - changelog , / / yeah we can do thi , because gradle and groovy are awesome <nl> " CREDITS - fml . txt " , <nl> " LICENSE - new . txt " , <nl> " MinecraftForge - Credits . txt " , <nl> " Paulscode SoundSystem CodecIBXM License . txt " , <nl> " Paulscode IBXM Library License . txt " <nl> ] <nl> + if ( project . hasProperty ( ' forgeJenkinsPass ' ) ) <nl> + extraTxts + = changelog <nl> <nl> outputJar { <nl> classifier = ' universal ' <nl> @ @ - 135 , 6 + 134 , 7 @ @ installer { <nl> classifier = ' installer ' <nl> from extraTxts <nl> from " src / main / resources / forge _ logo . png " <nl> + from " src / main / resources / url . png " <nl> rename " forge _ logo \ \ . png " , " big _ logo . png " <nl> } <nl> <nl> @ @ - 177 , 7 + 177 , 8 @ @ task makeMdk ( type : Zip ) { <nl> into ( ' eclipse ' ) { <nl> from ' mdk / eclipse ' <nl> } <nl> - from changelog . output <nl> + if ( project . hasProperty ( ' forgeJenkinsPass ' ) ) <nl> + from changelog . output <nl> from ( ' mdk ' ) { <nl> filter ( ReplaceTokens , tokens : [ <nl> VERSION : project . version , <nl> @ @ - 211 , 7 + 212 , 8 @ @ tasks . build . dependsOn ' launch4j ' <nl> / / MAVEN <nl> <nl> artifacts { <nl> - archives changelog . output <nl> + if ( project . hasProperty ( ' forgeJenkinsPass ' ) ) <nl> + archives changelog . output <nl> archives file ( " build / distributions / $ { project . name } - $ { project . version } - installer - win . exe " ) <nl> archives makeMdk <nl> } <nl> @ @ - 365 , 7 + 367 , 7 @ @ String getVersionFromJava ( File file ) <nl> <nl> if ( branch & & branch ! = ' master ' & & branch ! = ' HEAD ' & & branch ! = minecraft . version & & branch ! = minecraft . version + ' . 0 ' ) <nl> { <nl> - if ( ! ( branch . endsWith ( ' . x ' ) & & minecraft . version . startsWith ( branch . substring ( 0 , branch . length ( ) - 1 ) ) ) ) <nl> + if ( ! ( branch . endsWith ( ' . x ' ) & & minecraft . version . startsWith ( branch . substring ( 0 , branch . length ( ) - 2 ) ) ) ) <nl> out + = " - $ branch " <nl> } <nl> <nl> diff - - git a / src / main / resources / url . png b / src / main / resources / url . png <nl> new file mode 100644 <nl> index 0000000 . . e6926d9 <nl> Binary files / dev / null and b / src / main / resources / url . png differ
NEAREST DIFF (one line): diff - - git a / fml / . gitattributes b / fml / . gitattributes <nl> index 809a906 . . 758843d 100644 <nl> - - - a / fml / . gitattributes <nl> + + + b / fml / . gitattributes <nl> @ @ - 1 , 9 + 1 , 13 @ @ <nl> * text eol = lf <nl> * . bat text eol = crlf <nl> * . patch text eol = lf <nl> + * . java text eol = lf <nl> + * . gradle text eol = crlf <nl> * . png binary <nl> * . exe binary <nl> * . dll binary <nl> + * . jar binary <nl> + * . lzma binary <nl> * . zip binary <nl> * . pyd binary <nl> * . cfg text eol = lf <nl> diff - - git a / fml / . gitignore b / fml / . gitignore <nl> index 27935ea . . a09824b 100644 <nl> - - - a / fml / . gitignore <nl> + + + b / fml / . gitignore <nl> @ @ - 1 , 20 + 1 , 15 @ @ <nl> + # eclipse <nl> / bin <nl> - / minecraft _ server <nl> - / mods <nl> - / fmlbuild . properties <nl> - / fmlversion . properties <nl> - / difflist . txt <nl> - / target <nl> - fmlbranding . properties <nl> - / fernflower . zip <nl> - / commands . py . bck <nl> - / mcp * . zip <nl> - / mcp <nl> + / . settings <nl> + / . classpath <nl> + <nl> + # idea <nl> + / . idea <nl> + * . iml <nl> + <nl> + # gradle <nl> + / build <nl> + / . gradle <nl> + <nl> + # occupational hazards <nl> / eclipse <nl> - / deobfuscation _ data * . zip <nl> - / binpatch <nl> - / mcp _ data / <nl> - / map _ client . txt <nl> - / * . lzma <nl> - * * / * . lzma <nl> - / installer _ base . jar <nl> diff - - git a / fml / build . gradle b / fml / build . gradle <nl> new file mode 100644 <nl> index 0000000 . . e9448bd <nl> - - - / dev / null <nl> + + + b / fml / build . gradle <nl> @ @ - 0 , 0 + 1 , 100 @ @ <nl> + buildscript { <nl> + repositories { <nl> + mavenCentral ( ) <nl> + maven { <nl> + name = " forge " <nl> + url = " http : / / files . minecraftforge . net / maven " <nl> + } <nl> + } <nl> + dependencies { <nl> + classpath ' net . minecraftforge . gradle : ForgeGradle : 1 . 0 - SNAPSHOT ' <nl> + } <nl> + } <nl> + <nl> + import static net . minecraftforge . gradle . dev . FmlDevPlugin . * <nl> + <nl> + apply plugin : ' maven ' <nl> + apply plugin : ' fmldev ' <nl> + <nl> + repositories { <nl> + flatDir { <nl> + name " fileRepo " <nl> + dirs " repo " <nl> + } <nl> + } <nl> + <nl> + minecraft { <nl> + version = ' 1 . 6 . 4 ' <nl> + fmlDir = projectDir . getAbsolutePath ( ) ; <nl> + mainClass = ' cpw . mods . fml . relauncher . ServerLaunchWrapper ' <nl> + installerVersion = " 1 . 4 " <nl> + } <nl> + <nl> + group = ' cpw . mods ' <nl> + version = getVersionFromGit ( project ) <nl> + <nl> + jenkins { <nl> + job = ' fml ' <nl> + } <nl> + <nl> + uploadArchives { <nl> + repositories { <nl> + if ( project . hasProperty ( " filesmaven " ) ) { <nl> + logger . info ( ' Publishing to files server ' ) <nl> + <nl> + mavenDeployer { <nl> + configuration = configurations . deployerJars <nl> + <nl> + repository ( url : project . filesmaven . url ) { <nl> + authentication ( userName : project . filesmaven . username , privateKey : project . filesmaven . key ) <nl> + } <nl> + <nl> + pom { <nl> + groupId = project . group <nl> + version = project . version <nl> + artifactId = project . archivesBaseName <nl> + project { <nl> + name project . archivesBaseName <nl> + packaging ' jar ' <nl> + description ' ForgeModLoader ' <nl> + url ' https : / / github . com / MinecraftForge / FML ' <nl> + <nl> + scm { <nl> + url ' https : / / github . com / MinecraftForge / FML ' <nl> + connection ' scm : git : git : / / github . com / MinecraftForge / FML . git ' <nl> + developerConnection ' scm : git : git @ github . com : MinecraftForge / FML . git ' <nl> + } <nl> + <nl> + issueManagement { <nl> + system ' github ' <nl> + url ' https : / / github . com / MinecraftForge / FML / issues ' <nl> + } <nl> + <nl> + licenses { <nl> + license { <nl> + name ' GNU Lesser Public License ( LGPL ) , Version 3 ' <nl> + url ' http : / / www . gnu . org / licenses / lgpl - 3 . 0 . txt ' <nl> + distribution ' repo ' <nl> + } <nl> + } <nl> + <nl> + developers { <nl> + developer { <nl> + id ' LexManos ' <nl> + name ' Lex Manos ' <nl> + roles { role ' developer ' } <nl> + } <nl> + } <nl> + developers { <nl> + developer { <nl> + id ' cpw ' <nl> + name ' Christian Weeks ' <nl> + roles { role ' developer ' } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / fml / eclipse - workspace - dev . zip b / fml / eclipse - workspace - dev . zip <nl> index 3443e18 . . a3dd79e 100644 <nl> Binary files a / fml / eclipse - workspace - dev . zip and b / fml / eclipse - workspace - dev . zip differ <nl> diff - - git a / fml / settings . gradle b / fml / settings . gradle <nl> new file mode 100644 <nl> index 0000000 . . bcecb1a <nl> - - - / dev / null <nl> + + + b / fml / settings . gradle <nl> @ @ - 0 , 0 + 1 @ @ <nl> + rootProject . name = ' fml ' <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index 44973d8 . . 73e2c12 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 84 , 8 + 84 , 6 @ @ task changelog ( type : JenkinsChangelog ) { 
 / / skip if there is no forge jenkins pass 
 onlyIf { 
 project . hasProperty ( ' forgeJenkinsPass ' ) 
 - / / Not sure what abrar was trying to do here . . . 
 - / / project . file ( " build / distributions / $ { project . name } - $ { project . version } - changelog . txt " ) . text = " " 
 } 
 
 outputs . upToDateWhen { false } / / never up to date 
 @ @ - 108 , 13 + 106 , 14 @ @ task crowdin ( type : CrowdinDownload ) { 
 } 
 
 def extraTxts = [ 
 - changelog , / / yeah we can do thi , because gradle and groovy are awesome 
 " CREDITS - fml . txt " , 
 " LICENSE - new . txt " , 
 " MinecraftForge - Credits . txt " , 
 " Paulscode SoundSystem CodecIBXM License . txt " , 
 " Paulscode IBXM Library License . txt " 
 ] 
 + if ( project . hasProperty ( ' forgeJenkinsPass ' ) ) 
 + extraTxts + = changelog 
 
 outputJar { 
 classifier = ' universal ' 
 @ @ - 135 , 6 + 134 , 7 @ @ installer { 
 classifier = ' installer ' 
 from extraTxts 
 from " src / main / resources / forge _ logo . png " 
 + from " src / main / resources / url . png " 
 rename " forge _ logo \ \ . png " , " big _ logo . png " 
 } 
 
 @ @ - 177 , 7 + 177 , 8 @ @ task makeMdk ( type : Zip ) { 
 into ( ' eclipse ' ) { 
 from ' mdk / eclipse ' 
 } 
 - from changelog . output 
 + if ( project . hasProperty ( ' forgeJenkinsPass ' ) ) 
 + from changelog . output 
 from ( ' mdk ' ) { 
 filter ( ReplaceTokens , tokens : [ 
 VERSION : project . version , 
 @ @ - 211 , 7 + 212 , 8 @ @ tasks . build . dependsOn ' launch4j ' 
 / / MAVEN 
 
 artifacts { 
 - archives changelog . output 
 + if ( project . hasProperty ( ' forgeJenkinsPass ' ) ) 
 + archives changelog . output 
 archives file ( " build / distributions / $ { project . name } - $ { project . version } - installer - win . exe " ) 
 archives makeMdk 
 } 
 @ @ - 365 , 7 + 367 , 7 @ @ String getVersionFromJava ( File file ) 
 
 if ( branch & & branch ! = ' master ' & & branch ! = ' HEAD ' & & branch ! = minecraft . version & & branch ! = minecraft . version + ' . 0 ' ) 
 { 
 - if ( ! ( branch . endsWith ( ' . x ' ) & & minecraft . version . startsWith ( branch . substring ( 0 , branch . length ( ) - 1 ) ) ) ) 
 + if ( ! ( branch . endsWith ( ' . x ' ) & & minecraft . version . startsWith ( branch . substring ( 0 , branch . length ( ) - 2 ) ) ) ) 
 out + = " - $ branch " 
 } 
 
 diff - - git a / src / main / resources / url . png b / src / main / resources / url . png 
 new file mode 100644 
 index 0000000 . . e6926d9 
 Binary files / dev / null and b / src / main / resources / url . png differ

NEAREST DIFF:
diff - - git a / fml / . gitattributes b / fml / . gitattributes 
 index 809a906 . . 758843d 100644 
 - - - a / fml / . gitattributes 
 + + + b / fml / . gitattributes 
 @ @ - 1 , 9 + 1 , 13 @ @ 
 * text eol = lf 
 * . bat text eol = crlf 
 * . patch text eol = lf 
 + * . java text eol = lf 
 + * . gradle text eol = crlf 
 * . png binary 
 * . exe binary 
 * . dll binary 
 + * . jar binary 
 + * . lzma binary 
 * . zip binary 
 * . pyd binary 
 * . cfg text eol = lf 
 diff - - git a / fml / . gitignore b / fml / . gitignore 
 index 27935ea . . a09824b 100644 
 - - - a / fml / . gitignore 
 + + + b / fml / . gitignore 
 @ @ - 1 , 20 + 1 , 15 @ @ 
 + # eclipse 
 / bin 
 - / minecraft _ server 
 - / mods 
 - / fmlbuild . properties 
 - / fmlversion . properties 
 - / difflist . txt 
 - / target 
 - fmlbranding . properties 
 - / fernflower . zip 
 - / commands . py . bck 
 - / mcp * . zip 
 - / mcp 
 + / . settings 
 + / . classpath 
 + 
 + # idea 
 + / . idea 
 + * . iml 
 + 
 + # gradle 
 + / build 
 + / . gradle 
 + 
 + # occupational hazards 
 / eclipse 
 - / deobfuscation _ data * . zip 
 - / binpatch 
 - / mcp _ data / 
 - / map _ client . txt 
 - / * . lzma 
 - * * / * . lzma 
 - / installer _ base . jar 
 diff - - git a / fml / build . gradle b / fml / build . gradle 
 new file mode 100644 
 index 0000000 . . e9448bd 
 - - - / dev / null 
 + + + b / fml / build . gradle 
 @ @ - 0 , 0 + 1 , 100 @ @ 
 + buildscript { 
 + repositories { 
 + mavenCentral ( ) 
 + maven { 
 + name = " forge " 
 + url = " http : / / files . minecraftforge . net / maven " 
 + } 
 + } 
 + dependencies { 
 + classpath ' net . minecraftforge . gradle : ForgeGradle : 1 . 0 - SNAPSHOT ' 
 + } 
 + } 
 + 
 + import static net . minecraftforge . gradle . dev . FmlDevPlugin . * 
 + 
 + apply plugin : ' maven ' 
 + apply plugin : ' fmldev ' 
 + 
 + repositories { 
 + flatDir { 
 + name " fileRepo " 
 + dirs " repo " 
 + } 
 + } 
 + 
 + minecraft { 
 + version = ' 1 . 6 . 4 ' 
 + fmlDir = projectDir . getAbsolutePath ( ) ; 
 + mainClass = ' cpw . mods . fml . relauncher . ServerLaunchWrapper ' 
 + installerVersion = " 1 . 4 " 
 + } 
 + 
 + group = ' cpw . mods ' 
 + version = getVersionFromGit ( project ) 
 + 
 + jenkins { 
 + job = ' fml ' 
 + } 
 + 
 + uploadArchives { 
 + repositories { 
 + if ( project . hasProperty ( " filesmaven " ) ) { 
 + logger . info ( ' Publishing to files server ' ) 
 + 
 + mavenDeployer { 
 + configuration = configurations . deployerJars 
 + 
 + repository ( url : project . filesmaven . url ) { 
 + authentication ( userName : project . filesmaven . username , privateKey : project . filesmaven . key ) 
 + } 
 + 
 + pom { 
 + groupId = project . group 
 + version = project . version 
 + artifactId = project . archivesBaseName 
 + project { 
 + name project . archivesBaseName 
 + packaging ' jar ' 
 + description ' ForgeModLoader ' 
 + url ' https : / / github . com / MinecraftForge / FML ' 
 + 
 + scm { 
 + url ' https : / / github . com / MinecraftForge / FML ' 
 + connection ' scm : git : git : / / github . com / MinecraftForge / FML . git ' 
 + developerConnection ' scm : git : git @ github . com : MinecraftForge / FML . git ' 
 + } 
 + 
 + issueManagement { 
 + system ' github ' 
 + url ' https : / / github . com / MinecraftForge / FML / issues ' 
 + } 
 + 
 + licenses { 
 + license { 
 + name ' GNU Lesser Public License ( LGPL ) , Version 3 ' 
 + url ' http : / / www . gnu . org / licenses / lgpl - 3 . 0 . txt ' 
 + distribution ' repo ' 
 + } 
 + } 
 + 
 + developers { 
 + developer { 
 + id ' LexManos ' 
 + name ' Lex Manos ' 
 + roles { role ' developer ' } 
 + } 
 + } 
 + developers { 
 + developer { 
 + id ' cpw ' 
 + name ' Christian Weeks ' 
 + roles { role ' developer ' } 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / fml / eclipse - workspace - dev . zip b / fml / eclipse - workspace - dev . zip 
 index 3443e18 . . a3dd79e 100644 
 Binary files a / fml / eclipse - workspace - dev . zip and b / fml / eclipse - workspace - dev . zip differ 
 diff - - git a / fml / settings . gradle b / fml / settings . gradle 
 new file mode 100644 
 index 0000000 . . bcecb1a 
 - - - / dev / null 
 + + + b / fml / settings . gradle 
 @ @ - 0 , 0 + 1 @ @ 
 + rootProject . name = ' fml ' 
 \ No newline at end of file
