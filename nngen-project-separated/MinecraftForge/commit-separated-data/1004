BLEU SCORE: 0.006282878523720715

TEST MSG: Add TextureManager to loading screen .
GENERATED MSG: Add in simple texture management for mods using the stitcher . Scope with " { domain } : { texture } " to

TEST DIFF (one line): diff - - git a / fml / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch b / fml / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 364d0cd <nl> - - - / dev / null <nl> + + + b / fml / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch <nl> @ @ - 0 , 0 + 1 , 18 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / renderer / texture / TextureManager . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / renderer / texture / TextureManager . java <nl> + @ @ - 162 , 12 + 162 , 15 @ @ <nl> + <nl> + public void func _ 110549 _ a ( IResourceManager p _ 110549 _ 1 _ ) <nl> + { <nl> + + cpw . mods . fml . common . ProgressManager . ProgressBar bar = cpw . mods . fml . common . ProgressManager . push ( " Reloading Texture Manager " , this . field _ 110585 _ a . keySet ( ) . size ( ) , true ) ; <nl> + Iterator iterator = this . field _ 110585 _ a . entrySet ( ) . iterator ( ) ; <nl> + <nl> + while ( iterator . hasNext ( ) ) <nl> + { <nl> + Entry entry = ( Entry ) iterator . next ( ) ; <nl> + + bar . step ( entry . getKey ( ) . toString ( ) ) ; <nl> + this . func _ 110579 _ a ( ( ResourceLocation ) entry . getKey ( ) , ( ITextureObject ) entry . getValue ( ) ) ; <nl> + } <nl> + + cpw . mods . fml . common . ProgressManager . pop ( bar ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch b / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 2d7ffaa <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch <nl> @ @ - 0 , 0 + 1 , 25 @ @ <nl> + - - - . . / src _ base / minecraft / net / minecraft / client / renderer / texture / TextureManager . java <nl> + + + + . . / src _ work / minecraft / net / minecraft / client / renderer / texture / TextureManager . java <nl> + @ @ - 66 , 15 + 66 , 20 @ @ <nl> + <nl> + public List func _ 94266 _ e ( String par1Str ) <nl> + { <nl> + + return createNewTexture ( par1Str , par1Str ) ; <nl> + + } <nl> + + public List createNewTexture ( String textureName , String textureFile ) <nl> + + { <nl> + + String par1Str = textureFile ; <nl> + ArrayList arraylist = new ArrayList ( ) ; <nl> + ITexturePack itexturepack = Minecraft . getMinecraft ( ) . texturePackList . getSelectedTexturePack ( ) ; <nl> + <nl> + try <nl> + { <nl> + - BufferedImage bufferedimage = ImageIO . read ( itexturepack . getResourceAsStream ( " / " + par1Str ) ) ; <nl> + + BufferedImage bufferedimage = ImageIO . read ( itexturepack . getResourceAsStream ( " / " + textureFile ) ) ; <nl> + int i = bufferedimage . getHeight ( ) ; <nl> + int j = bufferedimage . getWidth ( ) ; <nl> + - String s1 = this . func _ 98146 _ d ( par1Str ) ; <nl> + + String s1 = textureName ; <nl> + <nl> + if ( this . func _ 98147 _ a ( par1Str , itexturepack ) ) <nl> + { <nl> diff - - git a / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch b / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 24687d3 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch <nl> @ @ - 0 , 0 + 1 , 23 @ @ <nl> + - - - . . / src _ base / minecraft / net / minecraft / client / renderer / texture / TextureMap . java <nl> + + + + . . / src _ work / minecraft / net / minecraft / client / renderer / texture / TextureMap . java <nl> + @ @ - 95 , 8 + 95 , 18 @ @ <nl> + while ( iterator . hasNext ( ) ) <nl> + { <nl> + String s = ( String ) iterator . next ( ) ; <nl> + - String s1 = this . field _ 94254 _ c + s + this . field _ 94251 _ d ; <nl> + - List list = TextureManager . func _ 94267 _ b ( ) . func _ 94266 _ e ( s1 ) ; <nl> + + String s1 ; <nl> + + if ( s . indexOf ( ' : ' ) = = - 1 ) <nl> + + { <nl> + + s1 = this . field _ 94254 _ c + s + this . field _ 94251 _ d ; <nl> + + } <nl> + + else <nl> + + { <nl> + + String domain = s . substring ( 0 , s . indexOf ( ' : ' ) ) ; <nl> + + String file = s . substring ( s . indexOf ( ' : ' ) + 1 ) ; <nl> + + s1 = " mods / " + domain + " / " + this . field _ 94254 _ c + file + this . field _ 94251 _ d ; <nl> + + } <nl> + + List list = TextureManager . func _ 94267 _ b ( ) . createNewTexture ( s , s1 ) ; <nl> + <nl> + if ( ! list . isEmpty ( ) ) <nl> + {

TEST DIFF:
diff - - git a / fml / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch b / fml / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch 
 new file mode 100644 
 index 0000000 . . 364d0cd 
 - - - / dev / null 
 + + + b / fml / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch 
 @ @ - 0 , 0 + 1 , 18 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / renderer / texture / TextureManager . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / renderer / texture / TextureManager . java 
 + @ @ - 162 , 12 + 162 , 15 @ @ 
 + 
 + public void func _ 110549 _ a ( IResourceManager p _ 110549 _ 1 _ ) 
 + { 
 + + cpw . mods . fml . common . ProgressManager . ProgressBar bar = cpw . mods . fml . common . ProgressManager . push ( " Reloading Texture Manager " , this . field _ 110585 _ a . keySet ( ) . size ( ) , true ) ; 
 + Iterator iterator = this . field _ 110585 _ a . entrySet ( ) . iterator ( ) ; 
 + 
 + while ( iterator . hasNext ( ) ) 
 + { 
 + Entry entry = ( Entry ) iterator . next ( ) ; 
 + + bar . step ( entry . getKey ( ) . toString ( ) ) ; 
 + this . func _ 110579 _ a ( ( ResourceLocation ) entry . getKey ( ) , ( ITextureObject ) entry . getValue ( ) ) ; 
 + } 
 + + cpw . mods . fml . common . ProgressManager . pop ( bar ) ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch b / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch 
 new file mode 100644 
 index 0000000 . . 2d7ffaa 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch 
 @ @ - 0 , 0 + 1 , 25 @ @ 
 + - - - . . / src _ base / minecraft / net / minecraft / client / renderer / texture / TextureManager . java 
 + + + + . . / src _ work / minecraft / net / minecraft / client / renderer / texture / TextureManager . java 
 + @ @ - 66 , 15 + 66 , 20 @ @ 
 + 
 + public List func _ 94266 _ e ( String par1Str ) 
 + { 
 + + return createNewTexture ( par1Str , par1Str ) ; 
 + + } 
 + + public List createNewTexture ( String textureName , String textureFile ) 
 + + { 
 + + String par1Str = textureFile ; 
 + ArrayList arraylist = new ArrayList ( ) ; 
 + ITexturePack itexturepack = Minecraft . getMinecraft ( ) . texturePackList . getSelectedTexturePack ( ) ; 
 + 
 + try 
 + { 
 + - BufferedImage bufferedimage = ImageIO . read ( itexturepack . getResourceAsStream ( " / " + par1Str ) ) ; 
 + + BufferedImage bufferedimage = ImageIO . read ( itexturepack . getResourceAsStream ( " / " + textureFile ) ) ; 
 + int i = bufferedimage . getHeight ( ) ; 
 + int j = bufferedimage . getWidth ( ) ; 
 + - String s1 = this . func _ 98146 _ d ( par1Str ) ; 
 + + String s1 = textureName ; 
 + 
 + if ( this . func _ 98147 _ a ( par1Str , itexturepack ) ) 
 + { 
 diff - - git a / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch b / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch 
 new file mode 100644 
 index 0000000 . . 24687d3 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / renderer / texture / TextureMap . java . patch 
 @ @ - 0 , 0 + 1 , 23 @ @ 
 + - - - . . / src _ base / minecraft / net / minecraft / client / renderer / texture / TextureMap . java 
 + + + + . . / src _ work / minecraft / net / minecraft / client / renderer / texture / TextureMap . java 
 + @ @ - 95 , 8 + 95 , 18 @ @ 
 + while ( iterator . hasNext ( ) ) 
 + { 
 + String s = ( String ) iterator . next ( ) ; 
 + - String s1 = this . field _ 94254 _ c + s + this . field _ 94251 _ d ; 
 + - List list = TextureManager . func _ 94267 _ b ( ) . func _ 94266 _ e ( s1 ) ; 
 + + String s1 ; 
 + + if ( s . indexOf ( ' : ' ) = = - 1 ) 
 + + { 
 + + s1 = this . field _ 94254 _ c + s + this . field _ 94251 _ d ; 
 + + } 
 + + else 
 + + { 
 + + String domain = s . substring ( 0 , s . indexOf ( ' : ' ) ) ; 
 + + String file = s . substring ( s . indexOf ( ' : ' ) + 1 ) ; 
 + + s1 = " mods / " + domain + " / " + this . field _ 94254 _ c + file + this . field _ 94251 _ d ; 
 + + } 
 + + List list = TextureManager . func _ 94267 _ b ( ) . createNewTexture ( s , s1 ) ; 
 + 
 + if ( ! list . isEmpty ( ) ) 
 + {
