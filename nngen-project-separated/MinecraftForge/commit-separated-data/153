BLEU SCORE: 0.020980574531482755

TEST MSG: Change getWorld function name to prevent inheritance change in Chunk
GENERATED MSG: Finish world , chunkloading should work again ?

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> index 491d45c . . c7fd732 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> @ @ - 17 , 33 + 17 , 34 @ @ <nl> } <nl> <nl> public Chunk ( World p _ i48703 _ 1 _ , ChunkPrimer p _ i48703 _ 2 _ , int p _ i48703 _ 3 _ , int p _ i48703 _ 4 _ ) { <nl> - @ @ - 1164 , 4 + 1165 , 29 @ @ <nl> + @ @ - 1164 , 4 + 1165 , 30 @ @ <nl> QUEUED , <nl> CHECK ; <nl> } <nl> - + <nl> - + / / FORGE start <nl> - + <nl> + + <nl> + / * * <nl> + * < strong > FOR INTERNAL USE ONLY < / strong > <nl> + * < p > <nl> - + * Only public for use in { @ link AnvilChunkLoader } . <nl> + + * Only public for use in { @ link AnvilChunkLoader } . <nl> + * / <nl> + @ java . lang . Deprecated <nl> + @ javax . annotation . Nullable <nl> - + public final NBTTagCompound writeCapsToNBT ( ) <nl> - + { <nl> - + return this . serializeCaps ( ) ; <nl> - } <nl> - + <nl> + + public final NBTTagCompound writeCapsToNBT ( ) { <nl> + + return this . serializeCaps ( ) ; <nl> + + } <nl> + + <nl> + / * * <nl> + * < strong > FOR INTERNAL USE ONLY < / strong > <nl> + * < p > <nl> - + * Only public for use in { @ link AnvilChunkLoader } . <nl> + + * Only public for use in { @ link AnvilChunkLoader } . <nl> + * / <nl> + @ java . lang . Deprecated <nl> - + public final void readCapsFromNBT ( NBTTagCompound tag ) <nl> - + { <nl> - + this . deserializeCaps ( tag ) ; <nl> + + public final void readCapsFromNBT ( NBTTagCompound tag ) { <nl> + + this . deserializeCaps ( tag ) ; <nl> + } <nl> - + } <nl> + + <nl> + + @ Override <nl> + + public World getWorldForge ( ) { <nl> + + return func _ 177412 _ p ( ) ; <nl> + + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / world / chunk / IChunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / IChunk . java . patch <nl> index cd3f49a . . d683810 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / IChunk . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / IChunk . java . patch <nl> @ @ - 6 , 7 + 6 , 7 @ @ <nl> BitSet func _ 205749 _ a ( GenerationStage . Carving p _ 205749 _ 1 _ ) ; <nl> + <nl> + @ Nullable <nl> - + default net . minecraft . world . IWorld getWorld ( ) { <nl> + + default net . minecraft . world . IWorld getWorldForge ( ) { <nl> + return null ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / event / world / ChunkEvent . java b / src / main / java / net / minecraftforge / event / world / ChunkEvent . java <nl> index e42983d . . f85e2e8 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / world / ChunkEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / world / ChunkEvent . java <nl> @ @ - 38 , 7 + 38 , 7 @ @ public class ChunkEvent extends WorldEvent <nl> <nl> public ChunkEvent ( IChunk chunk ) <nl> { <nl> - super ( chunk . getWorld ( ) ) ; <nl> + super ( chunk . getWorldForge ( ) ) ; <nl> this . chunk = chunk ; <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / patches . mcp / minecraft / net / minecraft / world / World . java . patch b / patches . mcp / minecraft / net / minecraft / world / World . java . patch <nl> index 1d0df9c . . b061459 100644 <nl> - - - a / patches . mcp / minecraft / net / minecraft / world / World . java . patch <nl> + + + b / patches . mcp / minecraft / net / minecraft / world / World . java . patch <nl> @ @ - 792 , 7 + 792 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 3600 , 6 + 3781 , 83 @ @ <nl> + @ @ - 3600 , 6 + 3781 , 87 @ @ <nl> return i > = - k & & i < = k & & j > = - k & & j < = k ; <nl> } <nl> <nl> @ @ - 839 , 6 + 839 , 10 @ @ <nl> + return net . minecraftforge . common . ForgeChunkManager . getPersistentChunksFor ( this ) ; <nl> + } <nl> + <nl> + + public Iterator < Chunk > getPersistentChunkIterable ( Iterator < Chunk > chunkIterator ) <nl> + + { <nl> + + return net . minecraftforge . common . ForgeChunkManager . getPersistentChunksIterableFor ( this , chunkIterator ) ; <nl> + + } <nl> + / * * <nl> + * Readded as it was removed , very useful helper function <nl> + * <nl> diff - - git a / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch b / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch <nl> index 0b06244 . . 3c4eda1 100644 <nl> - - - a / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch <nl> + + + b / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch <nl> @ @ - 80 , 6 + 80 , 15 @ @ <nl> } <nl> <nl> public boolean areAllPlayersAsleep ( ) <nl> + @ @ - 368 , 7 + 380 , 7 @ @ <nl> + boolean flag1 = this . isThundering ( ) ; <nl> + this . theProfiler . startSection ( " pollingChunks " ) ; <nl> + <nl> + - for ( Iterator < Chunk > iterator = this . thePlayerManager . func _ 187300 _ b ( ) ; iterator . hasNext ( ) ; this . theProfiler . endSection ( ) ) <nl> + + for ( Iterator < Chunk > iterator = getPersistentChunkIterable ( this . thePlayerManager . func _ 187300 _ b ( ) ) ; iterator . hasNext ( ) ; this . theProfiler . endSection ( ) ) <nl> + { <nl> + this . theProfiler . startSection ( " getChunk " ) ; <nl> + Chunk chunk = ( Chunk ) iterator . next ( ) ; <nl> @ @ - 380 , 7 + 392 , 7 @ @ <nl> chunk . func _ 150804 _ b ( false ) ; <nl> this . theProfiler . endStartSection ( " thunder " ) ; <nl> diff - - git a / rejects / minecraft / net / minecraft / world / World . java . patch . rej b / rejects / minecraft / net / minecraft / world / World . java . patch . rej <nl> deleted file mode 100644 <nl> index bc80f23 . . 0000000 <nl> - - - a / rejects / minecraft / net / minecraft / world / World . java . patch . rej <nl> + + + / dev / null <nl> @ @ - 1 , 9 + 0 , 0 @ @ <nl> - + + + + REJECTED PATCH 40 <nl> - { <nl> - this . activeChunkSet . clear ( ) ; <nl> - this . theProfiler . startSection ( " buildList " ) ; <nl> - + this . activeChunkSet . addAll ( getPersistentChunks ( ) . keySet ( ) ) ; <nl> - <nl> - for ( int i = 0 ; i < this . playerEntities . size ( ) ; + + i ) <nl> - { <nl> - + + + + END PATCH <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeChunkManager . java b / src / main / java / net / minecraftforge / common / ForgeChunkManager . java <nl> index 8c52939 . . c5eb772 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeChunkManager . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeChunkManager . java <nl> @ @ - 14 , 6 + 14 , 10 @ @ import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Set ; <nl> import java . util . UUID ; <nl> + <nl> + import com . google . common . base . Function ; <nl> + import com . google . common . collect . Iterables ; <nl> + import com . google . common . collect . Iterators ; <nl> import org . apache . logging . log4j . Level ; <nl> import com . google . common . cache . Cache ; <nl> import com . google . common . cache . CacheBuilder ; <nl> @ @ - 54 , 6 + 58 , 8 @ @ import net . minecraftforge . common . config . Configuration ; <nl> import net . minecraftforge . common . config . Property ; <nl> import net . minecraftforge . common . util . Constants ; <nl> <nl> + import javax . annotation . Nullable ; <nl> + <nl> / * * <nl> * Manages chunkloading for mods . <nl> * <nl> @ @ - 105 , 6 + 111 , 25 @ @ public class ForgeChunkManager <nl> MOD _ PROP _ ORDER . add ( " maximumChunksPerTicket " ) ; <nl> } <nl> <nl> + public static Iterator < Chunk > getPersistentChunksIterableFor ( final World world , Iterator < Chunk > chunkIterator ) <nl> + { <nl> + final ImmutableSetMultimap < ChunkCoordIntPair , Ticket > persistentChunksFor = getPersistentChunksFor ( world ) ; <nl> + final ImmutableSet . Builder < Chunk > builder = ImmutableSet . builder ( ) ; <nl> + world . theProfiler . startSection ( " forcedChunkLoading " ) ; <nl> + builder . addAll ( Iterators . transform ( persistentChunksFor . keys ( ) . iterator ( ) , new Function < ChunkCoordIntPair , Chunk > ( ) { <nl> + @ Nullable <nl> + @ Override <nl> + public Chunk apply ( @ Nullable ChunkCoordIntPair input ) <nl> + { <nl> + return world . getChunkFromChunkCoords ( input . chunkXPos , input . chunkZPos ) ; <nl> + } <nl> + } ) ) ; <nl> + world . theProfiler . endStartSection ( " regularChunkLoading " ) ; <nl> + builder . addAll ( chunkIterator ) ; <nl> + world . theProfiler . endSection ( ) ; <nl> + return builder . build ( ) . iterator ( ) ; <nl> + } <nl> + <nl> / * * <nl> * All mods requiring chunkloading need to implement this to handle the <nl> * re - registration of chunk tickets at world loading time <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / player / PlayerDropsEvent . java b / src / main / java / net / minecraftforge / event / entity / player / PlayerDropsEvent . java <nl> index d3f5246 . . d9f12ca 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / entity / player / PlayerDropsEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / entity / player / PlayerDropsEvent . java <nl> @ @ - 31 , 7 + 31 , 7 @ @ public class PlayerDropsEvent extends LivingDropsEvent <nl> { <nl> super ( entity , source , drops , <nl> ( source . getEntity ( ) instanceof EntityPlayer ) ? <nl> - EnchantmentHelper . getLootingModifier ( ( ( EntityPlayer ) source . getEntity ( ) ) ) : 0 , <nl> + EnchantmentHelper . func _ 185283 _ h ( ( ( EntityPlayer ) source . getEntity ( ) ) ) : 0 , <nl> recentlyHit ) ; <nl> <nl> this . entityPlayer = entity ;

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 index 491d45c . . c7fd732 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 @ @ - 17 , 33 + 17 , 34 @ @ 
 } 
 
 public Chunk ( World p _ i48703 _ 1 _ , ChunkPrimer p _ i48703 _ 2 _ , int p _ i48703 _ 3 _ , int p _ i48703 _ 4 _ ) { 
 - @ @ - 1164 , 4 + 1165 , 29 @ @ 
 + @ @ - 1164 , 4 + 1165 , 30 @ @ 
 QUEUED , 
 CHECK ; 
 } 
 - + 
 - + / / FORGE start 
 - + 
 + + 
 + / * * 
 + * < strong > FOR INTERNAL USE ONLY < / strong > 
 + * < p > 
 - + * Only public for use in { @ link AnvilChunkLoader } . 
 + + * Only public for use in { @ link AnvilChunkLoader } . 
 + * / 
 + @ java . lang . Deprecated 
 + @ javax . annotation . Nullable 
 - + public final NBTTagCompound writeCapsToNBT ( ) 
 - + { 
 - + return this . serializeCaps ( ) ; 
 - } 
 - + 
 + + public final NBTTagCompound writeCapsToNBT ( ) { 
 + + return this . serializeCaps ( ) ; 
 + + } 
 + + 
 + / * * 
 + * < strong > FOR INTERNAL USE ONLY < / strong > 
 + * < p > 
 - + * Only public for use in { @ link AnvilChunkLoader } . 
 + + * Only public for use in { @ link AnvilChunkLoader } . 
 + * / 
 + @ java . lang . Deprecated 
 - + public final void readCapsFromNBT ( NBTTagCompound tag ) 
 - + { 
 - + this . deserializeCaps ( tag ) ; 
 + + public final void readCapsFromNBT ( NBTTagCompound tag ) { 
 + + this . deserializeCaps ( tag ) ; 
 + } 
 - + } 
 + + 
 + + @ Override 
 + + public World getWorldForge ( ) { 
 + + return func _ 177412 _ p ( ) ; 
 + + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / world / chunk / IChunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / IChunk . java . patch 
 index cd3f49a . . d683810 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / IChunk . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / IChunk . java . patch 
 @ @ - 6 , 7 + 6 , 7 @ @ 
 BitSet func _ 205749 _ a ( GenerationStage . Carving p _ 205749 _ 1 _ ) ; 
 + 
 + @ Nullable 
 - + default net . minecraft . world . IWorld getWorld ( ) { 
 + + default net . minecraft . world . IWorld getWorldForge ( ) { 
 + return null ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / event / world / ChunkEvent . java b / src / main / java / net / minecraftforge / event / world / ChunkEvent . java 
 index e42983d . . f85e2e8 100644 
 - - - a / src / main / java / net / minecraftforge / event / world / ChunkEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / world / ChunkEvent . java 
 @ @ - 38 , 7 + 38 , 7 @ @ public class ChunkEvent extends WorldEvent 
 
 public ChunkEvent ( IChunk chunk ) 
 { 
 - super ( chunk . getWorld ( ) ) ; 
 + super ( chunk . getWorldForge ( ) ) ; 
 this . chunk = chunk ; 
 } 


NEAREST DIFF:
diff - - git a / patches . mcp / minecraft / net / minecraft / world / World . java . patch b / patches . mcp / minecraft / net / minecraft / world / World . java . patch 
 index 1d0df9c . . b061459 100644 
 - - - a / patches . mcp / minecraft / net / minecraft / world / World . java . patch 
 + + + b / patches . mcp / minecraft / net / minecraft / world / World . java . patch 
 @ @ - 792 , 7 + 792 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 3600 , 6 + 3781 , 83 @ @ 
 + @ @ - 3600 , 6 + 3781 , 87 @ @ 
 return i > = - k & & i < = k & & j > = - k & & j < = k ; 
 } 
 
 @ @ - 839 , 6 + 839 , 10 @ @ 
 + return net . minecraftforge . common . ForgeChunkManager . getPersistentChunksFor ( this ) ; 
 + } 
 + 
 + + public Iterator < Chunk > getPersistentChunkIterable ( Iterator < Chunk > chunkIterator ) 
 + + { 
 + + return net . minecraftforge . common . ForgeChunkManager . getPersistentChunksIterableFor ( this , chunkIterator ) ; 
 + + } 
 + / * * 
 + * Readded as it was removed , very useful helper function 
 + * 
 diff - - git a / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch b / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch 
 index 0b06244 . . 3c4eda1 100644 
 - - - a / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch 
 + + + b / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch 
 @ @ - 80 , 6 + 80 , 15 @ @ 
 } 
 
 public boolean areAllPlayersAsleep ( ) 
 + @ @ - 368 , 7 + 380 , 7 @ @ 
 + boolean flag1 = this . isThundering ( ) ; 
 + this . theProfiler . startSection ( " pollingChunks " ) ; 
 + 
 + - for ( Iterator < Chunk > iterator = this . thePlayerManager . func _ 187300 _ b ( ) ; iterator . hasNext ( ) ; this . theProfiler . endSection ( ) ) 
 + + for ( Iterator < Chunk > iterator = getPersistentChunkIterable ( this . thePlayerManager . func _ 187300 _ b ( ) ) ; iterator . hasNext ( ) ; this . theProfiler . endSection ( ) ) 
 + { 
 + this . theProfiler . startSection ( " getChunk " ) ; 
 + Chunk chunk = ( Chunk ) iterator . next ( ) ; 
 @ @ - 380 , 7 + 392 , 7 @ @ 
 chunk . func _ 150804 _ b ( false ) ; 
 this . theProfiler . endStartSection ( " thunder " ) ; 
 diff - - git a / rejects / minecraft / net / minecraft / world / World . java . patch . rej b / rejects / minecraft / net / minecraft / world / World . java . patch . rej 
 deleted file mode 100644 
 index bc80f23 . . 0000000 
 - - - a / rejects / minecraft / net / minecraft / world / World . java . patch . rej 
 + + + / dev / null 
 @ @ - 1 , 9 + 0 , 0 @ @ 
 - + + + + REJECTED PATCH 40 
 - { 
 - this . activeChunkSet . clear ( ) ; 
 - this . theProfiler . startSection ( " buildList " ) ; 
 - + this . activeChunkSet . addAll ( getPersistentChunks ( ) . keySet ( ) ) ; 
 - 
 - for ( int i = 0 ; i < this . playerEntities . size ( ) ; + + i ) 
 - { 
 - + + + + END PATCH 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeChunkManager . java b / src / main / java / net / minecraftforge / common / ForgeChunkManager . java 
 index 8c52939 . . c5eb772 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeChunkManager . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeChunkManager . java 
 @ @ - 14 , 6 + 14 , 10 @ @ import java . util . List ; 
 import java . util . Map ; 
 import java . util . Set ; 
 import java . util . UUID ; 
 + 
 + import com . google . common . base . Function ; 
 + import com . google . common . collect . Iterables ; 
 + import com . google . common . collect . Iterators ; 
 import org . apache . logging . log4j . Level ; 
 import com . google . common . cache . Cache ; 
 import com . google . common . cache . CacheBuilder ; 
 @ @ - 54 , 6 + 58 , 8 @ @ import net . minecraftforge . common . config . Configuration ; 
 import net . minecraftforge . common . config . Property ; 
 import net . minecraftforge . common . util . Constants ; 
 
 + import javax . annotation . Nullable ; 
 + 
 / * * 
 * Manages chunkloading for mods . 
 * 
 @ @ - 105 , 6 + 111 , 25 @ @ public class ForgeChunkManager 
 MOD _ PROP _ ORDER . add ( " maximumChunksPerTicket " ) ; 
 } 
 
 + public static Iterator < Chunk > getPersistentChunksIterableFor ( final World world , Iterator < Chunk > chunkIterator ) 
 + { 
 + final ImmutableSetMultimap < ChunkCoordIntPair , Ticket > persistentChunksFor = getPersistentChunksFor ( world ) ; 
 + final ImmutableSet . Builder < Chunk > builder = ImmutableSet . builder ( ) ; 
 + world . theProfiler . startSection ( " forcedChunkLoading " ) ; 
 + builder . addAll ( Iterators . transform ( persistentChunksFor . keys ( ) . iterator ( ) , new Function < ChunkCoordIntPair , Chunk > ( ) { 
 + @ Nullable 
 + @ Override 
 + public Chunk apply ( @ Nullable ChunkCoordIntPair input ) 
 + { 
 + return world . getChunkFromChunkCoords ( input . chunkXPos , input . chunkZPos ) ; 
 + } 
 + } ) ) ; 
 + world . theProfiler . endStartSection ( " regularChunkLoading " ) ; 
 + builder . addAll ( chunkIterator ) ; 
 + world . theProfiler . endSection ( ) ; 
 + return builder . build ( ) . iterator ( ) ; 
 + } 
 + 
 / * * 
 * All mods requiring chunkloading need to implement this to handle the 
 * re - registration of chunk tickets at world loading time 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / player / PlayerDropsEvent . java b / src / main / java / net / minecraftforge / event / entity / player / PlayerDropsEvent . java 
 index d3f5246 . . d9f12ca 100644 
 - - - a / src / main / java / net / minecraftforge / event / entity / player / PlayerDropsEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / entity / player / PlayerDropsEvent . java 
 @ @ - 31 , 7 + 31 , 7 @ @ public class PlayerDropsEvent extends LivingDropsEvent 
 { 
 super ( entity , source , drops , 
 ( source . getEntity ( ) instanceof EntityPlayer ) ? 
 - EnchantmentHelper . getLootingModifier ( ( ( EntityPlayer ) source . getEntity ( ) ) ) : 0 , 
 + EnchantmentHelper . func _ 185283 _ h ( ( ( EntityPlayer ) source . getEntity ( ) ) ) : 0 , 
 recentlyHit ) ; 
 
 this . entityPlayer = entity ;
