BLEU SCORE: 0.00957301534505126

TEST MSG: More fixups , removing chestgenstuff aggressively . Use loot tables . Any missing ones WILL be added by Mojang .
GENERATED MSG: Update forge

TEST DIFF (one line): diff - - git a / patches . mcp / minecraft / net / minecraft / item / Item . java . patch b / patches . mcp / minecraft / net / minecraft / item / Item . java . patch <nl> index d4adc40 . . b8507ed 100644 <nl> - - - a / patches . mcp / minecraft / net / minecraft / item / Item . java . patch <nl> + + + b / patches . mcp / minecraft / net / minecraft / item / Item . java . patch <nl> @ @ - 57 , 7 + 57 , 7 @ @ <nl> Vec3d vec3d1 = vec3d . addVector ( ( double ) f6 * d3 , ( double ) f5 * d3 , ( double ) f7 * d3 ) ; <nl> return worldIn . rayTraceBlocks ( vec3d , vec3d1 , useLiquids , ! useLiquids , false ) ; <nl> } <nl> - @ @ - 422 , 11 + 431 , 609 @ @ <nl> + @ @ - 422 , 11 + 431 , 588 @ @ <nl> return false ; <nl> } <nl> <nl> @ @ - 96 , 7 + 96 , 7 @ @ <nl> + * by a user in the displayed name , such as a mode of operation . <nl> + * <nl> + * @ param item the ItemStack for the item . <nl> - + * @ param the name that will be displayed unless it is changed in this method . <nl> + + * @ param displayName the name that will be displayed unless it is changed in this method . <nl> + * / <nl> + public String getHighlightTip ( ItemStack item , String displayName ) <nl> + { <nl> @ @ - 283 , 27 + 283 , 6 @ @ <nl> + } <nl> + <nl> + / * * <nl> - + * Generates the base Random item for a specific instance of the chest gen , <nl> - + * Enchanted books use this to pick a random enchantment . <nl> - + * <nl> - + * @ param chest The chest category to generate for <nl> - + * @ param rnd World RNG <nl> - + * @ param original Original result registered with the chest gen hooks . <nl> - + * @ return New values to use as the random item , typically this will be original <nl> - + * / <nl> - + @ Deprecated / / LootTables ! <nl> - + public net . minecraft . util . WeightedRandomChestContent getChestGenBase ( net . minecraftforge . common . ChestGenHooks chest , Random rnd , net . minecraft . util . WeightedRandomChestContent original ) <nl> - + { <nl> - + if ( this instanceof ItemEnchantedBook ) <nl> - + { <nl> - + return ( ( ItemEnchantedBook ) this ) . getRandom ( rnd , <nl> - + original . minStackSize , <nl> - + original . maxStackSize , original . itemWeight ) ; <nl> - + } <nl> - + return original ; <nl> - + } <nl> - + <nl> - + / * * <nl> + * <nl> + * Should this item , when held , allow sneak - clicks to pass through to the underlying block ? <nl> + * <nl> @ @ - 500 , 7 + 479 , 7 @ @ <nl> + } <nl> + <nl> + / * * <nl> - + * ItemStack sensitive version of { @ link # canHarvestBlock ( Block ) } <nl> + + * ItemStack sensitive version of { @ link # canHarvestBlock ( IBlockState ) } <nl> + * @ param state The block trying to harvest <nl> + * @ param stack The itemstack used to harvest the block <nl> + * @ return true if can harvest the block <nl> @ @ - 515 , 7 + 494 , 7 @ @ <nl> + * This is a ItemStack ( and thus NBT ) sensitive version of Item . getItemStackLimit ( ) <nl> + * <nl> + * @ param stack The ItemStack <nl> - + * @ return THe maximum number this item can be stacked to <nl> + + * @ return The maximum number this item can be stacked to <nl> + * / <nl> + public int getItemStackLimit ( ItemStack stack ) <nl> + { <nl> @ @ - 667 , 7 + 646 , 7 @ @ <nl> public static void registerItems ( ) <nl> { <nl> registerItemBlock ( Blocks . stone , ( new ItemMultiTexture ( Blocks . stone , Blocks . stone , new Function < ItemStack , String > ( ) <nl> - @ @ - 935 , 6 + 1542 , 10 @ @ <nl> + @ @ - 935 , 6 + 1521 , 10 @ @ <nl> private final float damageVsEntity ; <nl> private final int enchantability ; <nl> <nl> @ @ - 678 , 7 + 657 , 7 @ @ <nl> private ToolMaterial ( int harvestLevel , int maxUses , float efficiency , float damageVsEntity , int enchantability ) <nl> { <nl> this . harvestLevel = harvestLevel ; <nl> - @ @ - 969 , 9 + 1580 , 36 @ @ <nl> + @ @ - 969 , 9 + 1559 , 36 @ @ <nl> return this . enchantability ; <nl> } <nl> <nl> diff - - git a / patches . mcp / minecraft / net / minecraft / network / ServerStatusResponse . java . patch b / patches . mcp / minecraft / net / minecraft / network / ServerStatusResponse . java . patch <nl> index e893aca . . ce50f6b 100644 <nl> - - - a / patches . mcp / minecraft / net / minecraft / network / ServerStatusResponse . java . patch <nl> + + + b / patches . mcp / minecraft / net / minecraft / network / ServerStatusResponse . java . patch <nl> @ @ - 69 , 7 + 69 , 7 @ @ <nl> + ret = this . json ; <nl> + if ( ret = = null ) <nl> + { <nl> - + ret = net . minecraft . network . status . server . S00PacketServerInfo . GSON . toJson ( this ) ; <nl> + + ret = net . minecraft . network . status . server . SPacketServerInfo . GSON . toJson ( this ) ; <nl> + this . json = ret ; <nl> + } <nl> + mutex . release ( ) ; <nl> diff - - git a / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch b / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch <nl> index 5a29810 . . 0b06244 100644 <nl> - - - a / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch <nl> + + + b / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch <nl> @ @ - 103 , 7 + 103 , 7 @ @ <nl> { <nl> i = 8 ; <nl> + / / Keeping here as a note for future when it may be restored . <nl> - + boolean isForced = getPersistentChunks ( ) . containsKey ( new ChunkCoordIntPair ( nextticklistentry . position . getX ( ) > > 4 , nextticklistentry . position . getZ ( ) > > 4 ) ) ; <nl> + + boolean isForced = getPersistentChunks ( ) . containsKey ( new ChunkCoordIntPair ( pos . getX ( ) > > 4 , pos . getZ ( ) > > 4 ) ) ; <nl> + i = isForced ? 0 : 8 ; <nl> <nl> if ( this . isAreaLoaded ( pos . add ( - i , - i , - i ) , pos . add ( i , i , i ) ) ) <nl> @ @ - 241 , 7 + 241 , 7 @ @ <nl> <nl> + public java . io . File getChunkSaveLocation ( ) <nl> + { <nl> - + return ( ( net . minecraft . world . chunk . storage . AnvilChunkLoader ) theChunkProviderServer . chunkLoader ) . chunkSaveLocation ; <nl> + + return ( ( net . minecraft . world . chunk . storage . AnvilChunkLoader ) getChunkProvider ( ) . chunkLoader ) . chunkSaveLocation ; <nl> + } <nl> + <nl> static class ServerBlockEventList extends ArrayList < BlockEventData > <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / ModelDynBucket . java b / src / main / java / net / minecraftforge / client / model / ModelDynBucket . java <nl> index 6dd0d0e . . e0faedf 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / ModelDynBucket . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / ModelDynBucket . java <nl> @ @ - 14 , 6 + 14 , 7 @ @ import net . minecraft . client . renderer . block . model . BakedQuad ; <nl> import net . minecraft . client . renderer . block . model . IBakedModel ; <nl> import net . minecraft . client . renderer . block . model . ItemCameraTransforms ; <nl> import net . minecraft . client . renderer . block . model . ItemCameraTransforms . TransformType ; <nl> + import net . minecraft . client . renderer . block . model . ItemOverride ; <nl> import net . minecraft . client . renderer . block . model . ItemOverrideList ; <nl> import net . minecraft . client . renderer . block . model . ModelResourceLocation ; <nl> import net . minecraft . client . renderer . texture . TextureAtlasSprite ; <nl> @ @ - 228 , 7 + 229 , 7 @ @ public class ModelDynBucket implements IModel , IModelCustomData , IRetexturableMo <nl> public static final BakedDynBucketOverrideHandler INSTANCE = new BakedDynBucketOverrideHandler ( ) ; <nl> private BakedDynBucketOverrideHandler ( ) <nl> { <nl> - super ( ImmutableList . of ( ) ) ; <nl> + super ( ImmutableList . < ItemOverride > of ( ) ) ; <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 96b81ce . . 405e224 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 690 , 7 + 690 , 7 @ @ public class ForgeHooks <nl> if ( event . isCanceled ( ) ) <nl> { <nl> / / Let the client know the block still exists <nl> - entityPlayer . playerNetServerHandler . sendPacket ( new S23PacketBlockChange ( world , pos ) ) ; <nl> + entityPlayer . playerNetServerHandler . sendPacket ( new SPacketBlockChange ( world , pos ) ) ; <nl> <nl> / / Update any tile entity data for this block <nl> TileEntity tileentity = world . getTileEntity ( pos ) ; <nl> diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg <nl> index db03009 . . 9e50ea7 100644 <nl> - - - a / src / main / resources / forge _ at . cfg <nl> + + + b / src / main / resources / forge _ at . cfg <nl> @ @ - 150 , 7 + 150 , 7 @ @ public net . minecraft . client . renderer . VertexBuffer func _ 178972 _ a ( IIIII ) V # putCol <nl> # public net . minecraft . client . renderer . entity . RenderLivingBase func _ 177094 _ a ( Lnet / minecraft / client / renderer / entity / layers / LayerRenderer ; ) Z # addLayer <nl> <nl> # S00PacketServerInfo <nl> - # public net . minecraft . network . status . server . S00PacketServerInfo field _ 149297 _ a # GSON <nl> + public net . minecraft . network . status . server . SPacketServerInfo field _ 149297 _ a # GSON <nl> <nl> # Main FML Access Transformer configuration file <nl> # TileEntity addMapping
NEAREST DIFF (one line): diff - - git a / fml b / fml <nl> index a6dc03a . . 4d46abf 160000 <nl> - - - a / fml <nl> + + + b / fml <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c <nl> + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e <nl> diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> index 0ef9b48 . . 63a9622 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> @ @ - 21 , 10 + 21 , 10 @ @ <nl> this . disconnected = true ; <nl> this . mc . loadWorld ( ( WorldClient ) null ) ; <nl> <nl> - @ @ - 866 , 7 + 871 , 11 @ @ <nl> - public void handleChat ( Packet3Chat par1Packet3Chat ) <nl> - { <nl> - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; <nl> + @ @ - 870 , 7 + 875 , 11 @ @ <nl> + { <nl> + return ; <nl> + } <nl> - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; <nl> + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; <nl> + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) <nl> @ @ - 34 , 7 + 34 , 7 @ @ <nl> } <nl> <nl> public void handleAnimation ( Packet18Animation par1Packet18Animation ) <nl> - @ @ - 1354 , 6 + 1363 , 10 @ @ <nl> + @ @ - 1358 , 6 + 1367 , 10 @ @ <nl> { <nl> tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> index 6d2c8e1 . . a186e0f 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> @ @ - 13 , 11 + 13 , 16 @ @ <nl> public class EntityPlayerMP extends EntityPlayer implements ICrafting <nl> { <nl> private String translator = " en _ US " ; <nl> - @ @ - 165 , 18 + 171 , 10 @ @ <nl> + @ @ - 164 , 19 + 170 , 14 @ @ <nl> + super ( par2World , par3Str ) ; <nl> par4ItemInWorldManager . thisPlayerMP = this ; <nl> this . theItemInWorldManager = par4ItemInWorldManager ; <nl> - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; <nl> + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . <nl> + + this . renderDistance = 0 ; <nl> + + else <nl> + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; <nl> int i = chunkcoordinates . posX ; <nl> int j = chunkcoordinates . posZ ; <nl> @ @ - 33 , 7 + 38 , 7 @ @ <nl> <nl> this . mcServer = par1MinecraftServer ; <nl> this . stepHeight = 0 . 0F ; <nl> - @ @ - 240 , 11 + 238 , 6 @ @ <nl> + @ @ - 240 , 11 + 241 , 6 @ @ <nl> this . yOffset = 0 . 0F ; <nl> } <nl> <nl> @ @ - 45 , 7 + 50 , 7 @ @ <nl> / * * <nl> * Called to update the entity ' s position / logic . <nl> * / <nl> - @ @ - 254 , 7 + 247 , 7 @ @ <nl> + @ @ - 254 , 7 + 250 , 7 @ @ <nl> - - this . initialInvulnerability ; <nl> this . openContainer . detectAndSendChanges ( ) ; <nl> <nl> @ @ - 54 , 7 + 59 , 7 @ @ <nl> { <nl> this . closeScreen ( ) ; <nl> this . openContainer = this . inventoryContainer ; <nl> - @ @ - 290 , 7 + 283 , 10 @ @ <nl> + @ @ - 290 , 7 + 286 , 10 @ @ <nl> if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) <nl> { <nl> arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; <nl> @ @ - 66 , 7 + 71 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 311 , 6 + 307 , 7 @ @ <nl> + @ @ - 311 , 6 + 310 , 7 @ @ <nl> { <nl> Chunk chunk = ( Chunk ) iterator2 . next ( ) ; <nl> this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; <nl> @ @ - 74 , 7 + 79 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 383 , 11 + 380 , 25 @ @ <nl> + @ @ - 383 , 11 + 383 , 25 @ @ <nl> * / <nl> public void onDeath ( DamageSource par1DamageSource ) <nl> { <nl> @ @ - 100 , 7 + 105 , 7 @ @ <nl> } <nl> <nl> Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; <nl> - @ @ - 1054 , 4 + 1065 , 16 @ @ <nl> + @ @ - 1054 , 4 + 1068 , 16 @ @ <nl> { <nl> this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> index d28a430 . . 7e6a155 100644 <nl> - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> @ @ - 127 , 7 + 127 , 7 @ @ <nl> { <nl> this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; <nl> } <nl> - @ @ - 695 , 6 + 733 , 8 @ @ <nl> + @ @ - 698 , 6 + 736 , 8 @ @ <nl> } <nl> <nl> ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; <nl> @ @ - 136 , 7 + 136 , 7 @ @ <nl> this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; <nl> } <nl> <nl> - @ @ - 849 , 7 + 889 , 7 @ @ <nl> + @ @ - 852 , 7 + 892 , 7 @ @ <nl> return ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> index 7d63255 . . 7413a7d 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> @ @ - 1 , 11 + 1 , 15 @ @ <nl> package net . minecraftforge . common ; <nl> <nl> import cpw . mods . fml . common . FMLCommonHandler ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . entity . player . EntityPlayerMP ; <nl> import net . minecraft . item . ItemInWorldManager ; <nl> + import net . minecraft . network . packet . Packet204ClientInfo ; <nl> import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . stats . StatBase ; <nl> import net . minecraft . util . ChatMessageComponent ; <nl> import net . minecraft . util . ChunkCoordinates ; <nl> + import net . minecraft . util . DamageSource ; <nl> import net . minecraft . world . World ; <nl> <nl> / / Preliminary , simple Fake Player class <nl> @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP <nl> <nl> @ Override <nl> public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } <nl> + @ Override <nl> + public void addStat ( StatBase par1StatBase , int par2 ) { } <nl> + @ Override <nl> + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } <nl> + @ Override <nl> + public boolean isEntityInvulnerable ( ) { return true ; } <nl> + @ Override <nl> + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } <nl> + @ Override <nl> + public void onDeath ( DamageSource source ) { return ; } <nl> + @ Override <nl> + public void onUpdate ( ) { return ; } <nl> + @ Override <nl> + public void travelToDimension ( int dim ) { return ; } <nl> + @ Override <nl> + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 43dbe83 . . 8d98241 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; <nl> import net . minecraft . item . ItemStack ; <nl> import net . minecraft . item . ItemSword ; <nl> import net . minecraft . network . NetServerHandler ; <nl> + import net . minecraft . network . packet . Packet ; <nl> import net . minecraft . network . packet . Packet53BlockChange ; <nl> import net . minecraft . tileentity . TileEntity ; <nl> import net . minecraft . util . AxisAlignedBB ; <nl> @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks <nl> TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; <nl> if ( tileentity ! = null ) <nl> { <nl> - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; <nl> + Packet pkt = tileentity . getDescriptionPacket ( ) ; <nl> + if ( pkt ! = null ) <nl> + { <nl> + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; <nl> + } <nl> } <nl> } <nl> return event ; <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> index 5031fa6 . . 16d011f 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; <nl> import java . util . Map ; <nl> <nl> import net . minecraft . block . Block ; <nl> + import net . minecraft . util . StatCollector ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . event . Event ; <nl> <nl> @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry <nl> static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; <nl> static BiMap < Block , Fluid > fluidBlocks ; <nl> <nl> - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> + public static final Fluid WATER = new Fluid ( " water " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . water . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> + <nl> + public static final Fluid LAVA = new Fluid ( " lava " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . lava . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> <nl> public static int renderIdFluid = - 1 ; <nl>

TEST DIFF:
diff - - git a / patches . mcp / minecraft / net / minecraft / item / Item . java . patch b / patches . mcp / minecraft / net / minecraft / item / Item . java . patch 
 index d4adc40 . . b8507ed 100644 
 - - - a / patches . mcp / minecraft / net / minecraft / item / Item . java . patch 
 + + + b / patches . mcp / minecraft / net / minecraft / item / Item . java . patch 
 @ @ - 57 , 7 + 57 , 7 @ @ 
 Vec3d vec3d1 = vec3d . addVector ( ( double ) f6 * d3 , ( double ) f5 * d3 , ( double ) f7 * d3 ) ; 
 return worldIn . rayTraceBlocks ( vec3d , vec3d1 , useLiquids , ! useLiquids , false ) ; 
 } 
 - @ @ - 422 , 11 + 431 , 609 @ @ 
 + @ @ - 422 , 11 + 431 , 588 @ @ 
 return false ; 
 } 
 
 @ @ - 96 , 7 + 96 , 7 @ @ 
 + * by a user in the displayed name , such as a mode of operation . 
 + * 
 + * @ param item the ItemStack for the item . 
 - + * @ param the name that will be displayed unless it is changed in this method . 
 + + * @ param displayName the name that will be displayed unless it is changed in this method . 
 + * / 
 + public String getHighlightTip ( ItemStack item , String displayName ) 
 + { 
 @ @ - 283 , 27 + 283 , 6 @ @ 
 + } 
 + 
 + / * * 
 - + * Generates the base Random item for a specific instance of the chest gen , 
 - + * Enchanted books use this to pick a random enchantment . 
 - + * 
 - + * @ param chest The chest category to generate for 
 - + * @ param rnd World RNG 
 - + * @ param original Original result registered with the chest gen hooks . 
 - + * @ return New values to use as the random item , typically this will be original 
 - + * / 
 - + @ Deprecated / / LootTables ! 
 - + public net . minecraft . util . WeightedRandomChestContent getChestGenBase ( net . minecraftforge . common . ChestGenHooks chest , Random rnd , net . minecraft . util . WeightedRandomChestContent original ) 
 - + { 
 - + if ( this instanceof ItemEnchantedBook ) 
 - + { 
 - + return ( ( ItemEnchantedBook ) this ) . getRandom ( rnd , 
 - + original . minStackSize , 
 - + original . maxStackSize , original . itemWeight ) ; 
 - + } 
 - + return original ; 
 - + } 
 - + 
 - + / * * 
 + * 
 + * Should this item , when held , allow sneak - clicks to pass through to the underlying block ? 
 + * 
 @ @ - 500 , 7 + 479 , 7 @ @ 
 + } 
 + 
 + / * * 
 - + * ItemStack sensitive version of { @ link # canHarvestBlock ( Block ) } 
 + + * ItemStack sensitive version of { @ link # canHarvestBlock ( IBlockState ) } 
 + * @ param state The block trying to harvest 
 + * @ param stack The itemstack used to harvest the block 
 + * @ return true if can harvest the block 
 @ @ - 515 , 7 + 494 , 7 @ @ 
 + * This is a ItemStack ( and thus NBT ) sensitive version of Item . getItemStackLimit ( ) 
 + * 
 + * @ param stack The ItemStack 
 - + * @ return THe maximum number this item can be stacked to 
 + + * @ return The maximum number this item can be stacked to 
 + * / 
 + public int getItemStackLimit ( ItemStack stack ) 
 + { 
 @ @ - 667 , 7 + 646 , 7 @ @ 
 public static void registerItems ( ) 
 { 
 registerItemBlock ( Blocks . stone , ( new ItemMultiTexture ( Blocks . stone , Blocks . stone , new Function < ItemStack , String > ( ) 
 - @ @ - 935 , 6 + 1542 , 10 @ @ 
 + @ @ - 935 , 6 + 1521 , 10 @ @ 
 private final float damageVsEntity ; 
 private final int enchantability ; 
 
 @ @ - 678 , 7 + 657 , 7 @ @ 
 private ToolMaterial ( int harvestLevel , int maxUses , float efficiency , float damageVsEntity , int enchantability ) 
 { 
 this . harvestLevel = harvestLevel ; 
 - @ @ - 969 , 9 + 1580 , 36 @ @ 
 + @ @ - 969 , 9 + 1559 , 36 @ @ 
 return this . enchantability ; 
 } 
 
 diff - - git a / patches . mcp / minecraft / net / minecraft / network / ServerStatusResponse . java . patch b / patches . mcp / minecraft / net / minecraft / network / ServerStatusResponse . java . patch 
 index e893aca . . ce50f6b 100644 
 - - - a / patches . mcp / minecraft / net / minecraft / network / ServerStatusResponse . java . patch 
 + + + b / patches . mcp / minecraft / net / minecraft / network / ServerStatusResponse . java . patch 
 @ @ - 69 , 7 + 69 , 7 @ @ 
 + ret = this . json ; 
 + if ( ret = = null ) 
 + { 
 - + ret = net . minecraft . network . status . server . S00PacketServerInfo . GSON . toJson ( this ) ; 
 + + ret = net . minecraft . network . status . server . SPacketServerInfo . GSON . toJson ( this ) ; 
 + this . json = ret ; 
 + } 
 + mutex . release ( ) ; 
 diff - - git a / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch b / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch 
 index 5a29810 . . 0b06244 100644 
 - - - a / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch 
 + + + b / patches . mcp / minecraft / net / minecraft / world / WorldServer . java . patch 
 @ @ - 103 , 7 + 103 , 7 @ @ 
 { 
 i = 8 ; 
 + / / Keeping here as a note for future when it may be restored . 
 - + boolean isForced = getPersistentChunks ( ) . containsKey ( new ChunkCoordIntPair ( nextticklistentry . position . getX ( ) > > 4 , nextticklistentry . position . getZ ( ) > > 4 ) ) ; 
 + + boolean isForced = getPersistentChunks ( ) . containsKey ( new ChunkCoordIntPair ( pos . getX ( ) > > 4 , pos . getZ ( ) > > 4 ) ) ; 
 + i = isForced ? 0 : 8 ; 
 
 if ( this . isAreaLoaded ( pos . add ( - i , - i , - i ) , pos . add ( i , i , i ) ) ) 
 @ @ - 241 , 7 + 241 , 7 @ @ 
 
 + public java . io . File getChunkSaveLocation ( ) 
 + { 
 - + return ( ( net . minecraft . world . chunk . storage . AnvilChunkLoader ) theChunkProviderServer . chunkLoader ) . chunkSaveLocation ; 
 + + return ( ( net . minecraft . world . chunk . storage . AnvilChunkLoader ) getChunkProvider ( ) . chunkLoader ) . chunkSaveLocation ; 
 + } 
 + 
 static class ServerBlockEventList extends ArrayList < BlockEventData > 
 diff - - git a / src / main / java / net / minecraftforge / client / model / ModelDynBucket . java b / src / main / java / net / minecraftforge / client / model / ModelDynBucket . java 
 index 6dd0d0e . . e0faedf 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / ModelDynBucket . java 
 + + + b / src / main / java / net / minecraftforge / client / model / ModelDynBucket . java 
 @ @ - 14 , 6 + 14 , 7 @ @ import net . minecraft . client . renderer . block . model . BakedQuad ; 
 import net . minecraft . client . renderer . block . model . IBakedModel ; 
 import net . minecraft . client . renderer . block . model . ItemCameraTransforms ; 
 import net . minecraft . client . renderer . block . model . ItemCameraTransforms . TransformType ; 
 + import net . minecraft . client . renderer . block . model . ItemOverride ; 
 import net . minecraft . client . renderer . block . model . ItemOverrideList ; 
 import net . minecraft . client . renderer . block . model . ModelResourceLocation ; 
 import net . minecraft . client . renderer . texture . TextureAtlasSprite ; 
 @ @ - 228 , 7 + 229 , 7 @ @ public class ModelDynBucket implements IModel , IModelCustomData , IRetexturableMo 
 public static final BakedDynBucketOverrideHandler INSTANCE = new BakedDynBucketOverrideHandler ( ) ; 
 private BakedDynBucketOverrideHandler ( ) 
 { 
 - super ( ImmutableList . of ( ) ) ; 
 + super ( ImmutableList . < ItemOverride > of ( ) ) ; 
 } 
 
 @ Override 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 96b81ce . . 405e224 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 690 , 7 + 690 , 7 @ @ public class ForgeHooks 
 if ( event . isCanceled ( ) ) 
 { 
 / / Let the client know the block still exists 
 - entityPlayer . playerNetServerHandler . sendPacket ( new S23PacketBlockChange ( world , pos ) ) ; 
 + entityPlayer . playerNetServerHandler . sendPacket ( new SPacketBlockChange ( world , pos ) ) ; 
 
 / / Update any tile entity data for this block 
 TileEntity tileentity = world . getTileEntity ( pos ) ; 
 diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg 
 index db03009 . . 9e50ea7 100644 
 - - - a / src / main / resources / forge _ at . cfg 
 + + + b / src / main / resources / forge _ at . cfg 
 @ @ - 150 , 7 + 150 , 7 @ @ public net . minecraft . client . renderer . VertexBuffer func _ 178972 _ a ( IIIII ) V # putCol 
 # public net . minecraft . client . renderer . entity . RenderLivingBase func _ 177094 _ a ( Lnet / minecraft / client / renderer / entity / layers / LayerRenderer ; ) Z # addLayer 
 
 # S00PacketServerInfo 
 - # public net . minecraft . network . status . server . S00PacketServerInfo field _ 149297 _ a # GSON 
 + public net . minecraft . network . status . server . SPacketServerInfo field _ 149297 _ a # GSON 
 
 # Main FML Access Transformer configuration file 
 # TileEntity addMapping

NEAREST DIFF:
diff - - git a / fml b / fml 
 index a6dc03a . . 4d46abf 160000 
 - - - a / fml 
 + + + b / fml 
 @ @ - 1 + 1 @ @ 
 - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c 
 + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e 
 diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 index 0ef9b48 . . 63a9622 100644 
 - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 @ @ - 21 , 10 + 21 , 10 @ @ 
 this . disconnected = true ; 
 this . mc . loadWorld ( ( WorldClient ) null ) ; 
 
 - @ @ - 866 , 7 + 871 , 11 @ @ 
 - public void handleChat ( Packet3Chat par1Packet3Chat ) 
 - { 
 - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; 
 + @ @ - 870 , 7 + 875 , 11 @ @ 
 + { 
 + return ; 
 + } 
 - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; 
 + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; 
 + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) 
 @ @ - 34 , 7 + 34 , 7 @ @ 
 } 
 
 public void handleAnimation ( Packet18Animation par1Packet18Animation ) 
 - @ @ - 1354 , 6 + 1363 , 10 @ @ 
 + @ @ - 1358 , 6 + 1367 , 10 @ @ 
 { 
 tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 index 6d2c8e1 . . a186e0f 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 @ @ - 13 , 11 + 13 , 16 @ @ 
 public class EntityPlayerMP extends EntityPlayer implements ICrafting 
 { 
 private String translator = " en _ US " ; 
 - @ @ - 165 , 18 + 171 , 10 @ @ 
 + @ @ - 164 , 19 + 170 , 14 @ @ 
 + super ( par2World , par3Str ) ; 
 par4ItemInWorldManager . thisPlayerMP = this ; 
 this . theItemInWorldManager = par4ItemInWorldManager ; 
 - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; 
 + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . 
 + + this . renderDistance = 0 ; 
 + + else 
 + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; 
 int i = chunkcoordinates . posX ; 
 int j = chunkcoordinates . posZ ; 
 @ @ - 33 , 7 + 38 , 7 @ @ 
 
 this . mcServer = par1MinecraftServer ; 
 this . stepHeight = 0 . 0F ; 
 - @ @ - 240 , 11 + 238 , 6 @ @ 
 + @ @ - 240 , 11 + 241 , 6 @ @ 
 this . yOffset = 0 . 0F ; 
 } 
 
 @ @ - 45 , 7 + 50 , 7 @ @ 
 / * * 
 * Called to update the entity ' s position / logic . 
 * / 
 - @ @ - 254 , 7 + 247 , 7 @ @ 
 + @ @ - 254 , 7 + 250 , 7 @ @ 
 - - this . initialInvulnerability ; 
 this . openContainer . detectAndSendChanges ( ) ; 
 
 @ @ - 54 , 7 + 59 , 7 @ @ 
 { 
 this . closeScreen ( ) ; 
 this . openContainer = this . inventoryContainer ; 
 - @ @ - 290 , 7 + 283 , 10 @ @ 
 + @ @ - 290 , 7 + 286 , 10 @ @ 
 if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) 
 { 
 arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; 
 @ @ - 66 , 7 + 71 , 7 @ @ 
 } 
 } 
 
 - @ @ - 311 , 6 + 307 , 7 @ @ 
 + @ @ - 311 , 6 + 310 , 7 @ @ 
 { 
 Chunk chunk = ( Chunk ) iterator2 . next ( ) ; 
 this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; 
 @ @ - 74 , 7 + 79 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 383 , 11 + 380 , 25 @ @ 
 + @ @ - 383 , 11 + 383 , 25 @ @ 
 * / 
 public void onDeath ( DamageSource par1DamageSource ) 
 { 
 @ @ - 100 , 7 + 105 , 7 @ @ 
 } 
 
 Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; 
 - @ @ - 1054 , 4 + 1065 , 16 @ @ 
 + @ @ - 1054 , 4 + 1068 , 16 @ @ 
 { 
 this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 index d28a430 . . 7e6a155 100644 
 - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 @ @ - 127 , 7 + 127 , 7 @ @ 
 { 
 this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; 
 } 
 - @ @ - 695 , 6 + 733 , 8 @ @ 
 + @ @ - 698 , 6 + 736 , 8 @ @ 
 } 
 
 ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; 
 @ @ - 136 , 7 + 136 , 7 @ @ 
 this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; 
 } 
 
 - @ @ - 849 , 7 + 889 , 7 @ @ 
 + @ @ - 852 , 7 + 892 , 7 @ @ 
 return ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 index 7d63255 . . 7413a7d 100644 
 - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java 
 + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 @ @ - 1 , 11 + 1 , 15 @ @ 
 package net . minecraftforge . common ; 
 
 import cpw . mods . fml . common . FMLCommonHandler ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . entity . player . EntityPlayerMP ; 
 import net . minecraft . item . ItemInWorldManager ; 
 + import net . minecraft . network . packet . Packet204ClientInfo ; 
 import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . stats . StatBase ; 
 import net . minecraft . util . ChatMessageComponent ; 
 import net . minecraft . util . ChunkCoordinates ; 
 + import net . minecraft . util . DamageSource ; 
 import net . minecraft . world . World ; 
 
 / / Preliminary , simple Fake Player class 
 @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP 
 
 @ Override 
 public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } 
 + @ Override 
 + public void addStat ( StatBase par1StatBase , int par2 ) { } 
 + @ Override 
 + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } 
 + @ Override 
 + public boolean isEntityInvulnerable ( ) { return true ; } 
 + @ Override 
 + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } 
 + @ Override 
 + public void onDeath ( DamageSource source ) { return ; } 
 + @ Override 
 + public void onUpdate ( ) { return ; } 
 + @ Override 
 + public void travelToDimension ( int dim ) { return ; } 
 + @ Override 
 + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 43dbe83 . . 8d98241 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; 
 import net . minecraft . item . ItemStack ; 
 import net . minecraft . item . ItemSword ; 
 import net . minecraft . network . NetServerHandler ; 
 + import net . minecraft . network . packet . Packet ; 
 import net . minecraft . network . packet . Packet53BlockChange ; 
 import net . minecraft . tileentity . TileEntity ; 
 import net . minecraft . util . AxisAlignedBB ; 
 @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks 
 TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; 
 if ( tileentity ! = null ) 
 { 
 - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; 
 + Packet pkt = tileentity . getDescriptionPacket ( ) ; 
 + if ( pkt ! = null ) 
 + { 
 + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; 
 + } 
 } 
 } 
 return event ; 
 diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 index 5031fa6 . . 16d011f 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; 
 import java . util . Map ; 
 
 import net . minecraft . block . Block ; 
 + import net . minecraft . util . StatCollector ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . event . Event ; 
 
 @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry 
 static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; 
 static BiMap < Block , Fluid > fluidBlocks ; 
 
 - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 + public static final Fluid WATER = new Fluid ( " water " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . water . name " ) ; 
 + } 
 + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 + 
 + public static final Fluid LAVA = new Fluid ( " lava " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . lava . name " ) ; 
 + } 
 + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 
 public static int renderIdFluid = - 1 ; 

