BLEU SCORE: 0.0208362582256928

TEST MSG: Adjust EnumHelper # addCreatureType to EnumType
GENERATED MSG: Try and fix registry NPE when substitution is active .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / util / EnumHelper . java b / src / main / java / net / minecraftforge / common / util / EnumHelper . java <nl> index 7d2e30c . . 4a29e3a 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / util / EnumHelper . java <nl> + + + b / src / main / java / net / minecraftforge / common / util / EnumHelper . java <nl> @ @ - 25 , 6 + 25 , 7 @ @ import java . util . * ; <nl> import com . google . common . base . Predicate ; <nl> import com . google . common . collect . Lists ; <nl> <nl> + import net . minecraft . entity . passive . IAnimals ; <nl> import net . minecraftforge . fml . common . EnhancedRuntimeException ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraft . block . BlockPressurePlate . Sensitivity ; <nl> @ @ - 96 , 7 + 97 , 7 @ @ public class EnumHelper <nl> return addEnum ( EnumCreatureAttribute . class , name ) ; <nl> } <nl> @ Nullable <nl> - public static EnumCreatureType addCreatureType ( String name , Class < ? > typeClass , int maxNumber , Material material , boolean peaceful , boolean animal ) <nl> + public static EnumCreatureType addCreatureType ( String name , Class < ? extends IAnimals > typeClass , int maxNumber , Material material , boolean peaceful , boolean animal ) <nl> { <nl> return addEnum ( EnumCreatureType . class , name , typeClass , maxNumber , material , peaceful , animal ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> index 0cdd305 . . 607ac29 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> @ @ - 718 , 7 + 718 , 7 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul <nl> blockedIds . add ( id ) ; <nl> } <nl> <nl> - public void noitifyCallbacks ( ) <nl> + public void notifyCallbacks ( ) <nl> { <nl> if ( addCallback = = null ) <nl> return ; <nl> @ @ - 728 , 4 + 728 , 15 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul <nl> addCallback . onAdd ( i , this . underlyingIntegerMap . get ( i ) ) ; <nl> } <nl> } <nl> + <nl> + @ Override <nl> + public ResourceLocation getNameForObject ( I p _ 177774 _ 1 _ ) <nl> + { <nl> + ResourceLocation rl = super . getNameForObject ( p _ 177774 _ 1 _ ) ; <nl> + if ( rl = = null ) <nl> + { <nl> + rl = activeSubstitutions . inverse ( ) . get ( p _ 177774 _ 1 _ ) ; <nl> + } <nl> + return rl ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java <nl> index 723bb55 . . 6071989 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java <nl> @ @ - 23 , 7 + 23 , 6 @ @ import org . apache . logging . log4j . Level ; <nl> <nl> import net . minecraft . block . Block ; <nl> import net . minecraft . block . BlockAir ; <nl> - import net . minecraft . init . Blocks ; <nl> import net . minecraft . item . Item ; <nl> import net . minecraft . potion . Potion ; <nl> import net . minecraft . util . ResourceLocation ; <nl> @ @ - 33 , 7 + 32 , 6 @ @ import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . Loader ; <nl> import net . minecraftforge . fml . common . StartupQuery ; <nl> import net . minecraftforge . fml . common . ZipperUtil ; <nl> - import net . minecraftforge . fml . common . EnhancedRuntimeException . WrappedPrintStream ; <nl> import net . minecraftforge . fml . common . event . FMLMissingMappingsEvent ; <nl> <nl> / * * <nl> @ @ - 257 , 7 + 255 , 7 @ @ public class PersistentRegistryManager <nl> / / This happens when connecting to a server that doesn ' t have this registry . <nl> / / Such as a 1 . 8 . 0 Forge server with 1 . 8 . 8 + Forge . <nl> / / We must however , re - fire the callbacks as some internal data may be corrupted { potions } <nl> - toRegistry . noitifyCallbacks ( ) ; <nl> + toRegistry . notifyCallbacks ( ) ; <nl> } <nl> else <nl> {

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / util / EnumHelper . java b / src / main / java / net / minecraftforge / common / util / EnumHelper . java 
 index 7d2e30c . . 4a29e3a 100644 
 - - - a / src / main / java / net / minecraftforge / common / util / EnumHelper . java 
 + + + b / src / main / java / net / minecraftforge / common / util / EnumHelper . java 
 @ @ - 25 , 6 + 25 , 7 @ @ import java . util . * ; 
 import com . google . common . base . Predicate ; 
 import com . google . common . collect . Lists ; 
 
 + import net . minecraft . entity . passive . IAnimals ; 
 import net . minecraftforge . fml . common . EnhancedRuntimeException ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraft . block . BlockPressurePlate . Sensitivity ; 
 @ @ - 96 , 7 + 97 , 7 @ @ public class EnumHelper 
 return addEnum ( EnumCreatureAttribute . class , name ) ; 
 } 
 @ Nullable 
 - public static EnumCreatureType addCreatureType ( String name , Class < ? > typeClass , int maxNumber , Material material , boolean peaceful , boolean animal ) 
 + public static EnumCreatureType addCreatureType ( String name , Class < ? extends IAnimals > typeClass , int maxNumber , Material material , boolean peaceful , boolean animal ) 
 { 
 return addEnum ( EnumCreatureType . class , name , typeClass , maxNumber , material , peaceful , animal ) ; 
 }

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 index 0cdd305 . . 607ac29 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 @ @ - 718 , 7 + 718 , 7 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul 
 blockedIds . add ( id ) ; 
 } 
 
 - public void noitifyCallbacks ( ) 
 + public void notifyCallbacks ( ) 
 { 
 if ( addCallback = = null ) 
 return ; 
 @ @ - 728 , 4 + 728 , 15 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul 
 addCallback . onAdd ( i , this . underlyingIntegerMap . get ( i ) ) ; 
 } 
 } 
 + 
 + @ Override 
 + public ResourceLocation getNameForObject ( I p _ 177774 _ 1 _ ) 
 + { 
 + ResourceLocation rl = super . getNameForObject ( p _ 177774 _ 1 _ ) ; 
 + if ( rl = = null ) 
 + { 
 + rl = activeSubstitutions . inverse ( ) . get ( p _ 177774 _ 1 _ ) ; 
 + } 
 + return rl ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java 
 index 723bb55 . . 6071989 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java 
 @ @ - 23 , 7 + 23 , 6 @ @ import org . apache . logging . log4j . Level ; 
 
 import net . minecraft . block . Block ; 
 import net . minecraft . block . BlockAir ; 
 - import net . minecraft . init . Blocks ; 
 import net . minecraft . item . Item ; 
 import net . minecraft . potion . Potion ; 
 import net . minecraft . util . ResourceLocation ; 
 @ @ - 33 , 7 + 32 , 6 @ @ import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . Loader ; 
 import net . minecraftforge . fml . common . StartupQuery ; 
 import net . minecraftforge . fml . common . ZipperUtil ; 
 - import net . minecraftforge . fml . common . EnhancedRuntimeException . WrappedPrintStream ; 
 import net . minecraftforge . fml . common . event . FMLMissingMappingsEvent ; 
 
 / * * 
 @ @ - 257 , 7 + 255 , 7 @ @ public class PersistentRegistryManager 
 / / This happens when connecting to a server that doesn ' t have this registry . 
 / / Such as a 1 . 8 . 0 Forge server with 1 . 8 . 8 + Forge . 
 / / We must however , re - fire the callbacks as some internal data may be corrupted { potions } 
 - toRegistry . noitifyCallbacks ( ) ; 
 + toRegistry . notifyCallbacks ( ) ; 
 } 
 else 
 {
