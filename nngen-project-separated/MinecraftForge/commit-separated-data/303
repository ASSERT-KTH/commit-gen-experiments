BLEU SCORE: 0.0037717578954199896

TEST MSG: Delay egg creation to avoid null statistics
GENERATED MSG: In the time honoured tradition of trying to fix vanilla , we today attempt to patch the pathfinding AI so that it doesn ' t lag when

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / EntityList . java . patch b / patches / minecraft / net / minecraft / entity / EntityList . java . patch <nl> index 05ba260 . . a3d820b 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntityList . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityList . java . patch <nl> @ @ - 164 , 3 + 164 , 20 @ @ <nl> } <nl> <nl> public static class EntityEggInfo <nl> + @ @ - 428 , 5 + 449 , 16 @ @ <nl> + this . field _ 151512 _ d = StatList . func _ 151182 _ a ( this ) ; <nl> + this . field _ 151513 _ e = StatList . func _ 151176 _ b ( this ) ; <nl> + } <nl> + + <nl> + + / / Forge start <nl> + + public EntityEggInfo ( ResourceLocation id , int primaryColor , int secondaryColor , StatBase killEntityStatistic , StatBase entityKilledByStatistic ) <nl> + + { <nl> + + this . field _ 75613 _ a = id ; <nl> + + this . field _ 75611 _ b = primaryColor ; <nl> + + this . field _ 75612 _ c = secondaryColor ; <nl> + + this . field _ 151512 _ d = killEntityStatistic ; <nl> + + this . field _ 151513 _ e = entityKilledByStatistic ; <nl> + + } <nl> + + / / Forge end <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java b / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java <nl> index 0ddb90e . . 7e736a9 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java <nl> @ @ - 22 , 7 + 22 , 9 @ @ import net . minecraft . entity . Entity ; <nl> import net . minecraft . entity . EntityList ; <nl> import net . minecraft . entity . EntityLiving ; <nl> import net . minecraft . entity . EnumCreatureType ; <nl> + import net . minecraft . stats . StatBase ; <nl> import net . minecraft . util . ResourceLocation ; <nl> + import net . minecraft . util . text . TextComponentTranslation ; <nl> import net . minecraft . world . World ; <nl> import net . minecraft . world . biome . Biome ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> @ @ - 64 , 6 + 66 , 9 @ @ public final class EntityEntryBuilder < E extends Entity > <nl> private boolean eggProvided ; <nl> private int primaryEggColor ; <nl> private int secondaryEggColor ; <nl> + private boolean statisticsRegistered ; <nl> + @ Nullable private StatBase killEntityStatistic ; <nl> + @ Nullable private StatBase entityKilledByStatistic ; <nl> @ Nullable private Collection < Spawn > spawns ; <nl> <nl> / * * <nl> @ @ - 262 , 7 + 267 , 12 @ @ public final class EntityEntryBuilder < E extends Entity > <nl> } <nl> } ; <nl> entry . setRegistryName ( this . id ) ; <nl> - if ( this . eggProvided ) entry . setEgg ( new EntityList . EntityEggInfo ( this . id , this . primaryEggColor , this . secondaryEggColor ) ) ; <nl> + if ( this . eggProvided ) <nl> + { <nl> + this . killEntityStatistic = new StatBase ( " stat . killEntity . " + this . name , new TextComponentTranslation ( " stat . entityKill " , new TextComponentTranslation ( " entity . " + this . name + " . name " ) ) ) ; <nl> + this . entityKilledByStatistic = new StatBase ( " stat . entityKilledBy . " + this . name , new TextComponentTranslation ( " stat . entityKilledBy " , new TextComponentTranslation ( " entity . " + this . name + " . name " ) ) ) ; <nl> + entry . setEgg ( new EntityList . EntityEggInfo ( this . id , this . primaryEggColor , this . secondaryEggColor , this . killEntityStatistic , this . entityKilledByStatistic ) ) ; <nl> + } <nl> return entry ; <nl> } <nl> <nl> @ @ - 275 , 6 + 285 , 16 @ @ public final class EntityEntryBuilder < E extends Entity > <nl> ) ; <nl> } <nl> <nl> + private void registerStatistics ( ) <nl> + { <nl> + if ( ! this . statisticsRegistered & & ( this . killEntityStatistic ! = null & & this . entityKilledByStatistic ! = null ) ) <nl> + { <nl> + this . killEntityStatistic . registerStat ( ) ; <nl> + this . entityKilledByStatistic . registerStat ( ) ; <nl> + this . statisticsRegistered = true ; <nl> + } <nl> + } <nl> + <nl> static abstract class ConstructorFactory < E extends Entity > implements Function < World , E > <nl> { <nl> private final Constructor < ? extends E > constructor ; <nl> @ @ - 315 , 11 + 335 , 11 @ @ public final class EntityEntryBuilder < E extends Entity > <nl> / / NOOP - we handle this in build <nl> } <nl> <nl> - @ SuppressWarnings ( " ConstantConditions " ) <nl> public final void addedToRegistry ( ) <nl> { <nl> if ( this . added ) return ; <nl> this . added = true ; <nl> + EntityEntryBuilder . this . registerStatistics ( ) ; <nl> EntityRegistry . instance ( ) . insert ( EntityEntryBuilder . this . entity , EntityEntryBuilder . this . createRegistration ( ) ) ; <nl> if ( EntityEntryBuilder . this . spawns ! = null ) <nl> {
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / ai / EntityAIAttackOnCollide . java . patch b / patches / minecraft / net / minecraft / entity / ai / EntityAIAttackOnCollide . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 6be2dfe <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / entity / ai / EntityAIAttackOnCollide . java . patch <nl> @ @ - 0 , 0 + 1 , 64 @ @ <nl> + - - - . . / src _ base / minecraft / net / minecraft / entity / ai / EntityAIAttackOnCollide . java <nl> + + + + . . / src _ work / minecraft / net / minecraft / entity / ai / EntityAIAttackOnCollide . java <nl> + @ @ - 3 , 6 + 3 , 7 @ @ <nl> + import net . minecraft . entity . EntityCreature ; <nl> + import net . minecraft . entity . EntityLivingBase ; <nl> + import net . minecraft . pathfinding . PathEntity ; <nl> + + import net . minecraft . pathfinding . PathPoint ; <nl> + import net . minecraft . util . MathHelper ; <nl> + import net . minecraft . world . World ; <nl> + <nl> + @ @ - 22 , 6 + 23 , 8 @ @ <nl> + PathEntity entityPathEntity ; <nl> + Class classTarget ; <nl> + private int field _ 75445 _ i ; <nl> + + <nl> + + private int failedPathFindingPenalty ; <nl> + <nl> + public EntityAIAttackOnCollide ( EntityCreature par1EntityCreature , Class par2Class , double par3 , boolean par5 ) <nl> + { <nl> + @ @ - 59 , 8 + 62 , 16 @ @ <nl> + } <nl> + else <nl> + { <nl> + - this . entityPathEntity = this . attacker . getNavigator ( ) . getPathToEntityLiving ( entitylivingbase ) ; <nl> + - return this . entityPathEntity ! = null ; <nl> + + if ( - - this . field _ 75445 _ i < = 0 ) <nl> + + { <nl> + + this . entityPathEntity = this . attacker . getNavigator ( ) . getPathToEntityLiving ( entitylivingbase ) ; <nl> + + this . field _ 75445 _ i = 4 + this . attacker . getRNG ( ) . nextInt ( 7 ) ; <nl> + + return this . entityPathEntity ! = null ; <nl> + + } <nl> + + else <nl> + + { <nl> + + return true ; <nl> + + } <nl> + } <nl> + } <nl> + <nl> + @ @ - 100 , 8 + 111 , 24 @ @ <nl> + <nl> + if ( ( this . field _ 75437 _ f | | this . attacker . getEntitySenses ( ) . canSee ( entitylivingbase ) ) & & - - this . field _ 75445 _ i < = 0 ) <nl> + { <nl> + - this . field _ 75445 _ i = 4 + this . attacker . getRNG ( ) . nextInt ( 7 ) ; <nl> + + this . field _ 75445 _ i = failedPathFindingPenalty + 4 + this . attacker . getRNG ( ) . nextInt ( 7 ) ; <nl> + this . attacker . getNavigator ( ) . tryMoveToEntityLiving ( entitylivingbase , this . field _ 75440 _ e ) ; <nl> + + if ( this . attacker . getNavigator ( ) . getPath ( ) ! = null ) <nl> + + { <nl> + + PathPoint finalPathPoint = this . attacker . getNavigator ( ) . getPath ( ) . getFinalPathPoint ( ) ; <nl> + + if ( entitylivingbase . getDistanceSq ( finalPathPoint . xCoord , finalPathPoint . yCoord , finalPathPoint . zCoord ) < 1 ) <nl> + + { <nl> + + failedPathFindingPenalty = 0 ; <nl> + + } <nl> + + else <nl> + + { <nl> + + failedPathFindingPenalty + = 10 ; <nl> + + } <nl> + + } <nl> + + else <nl> + + { <nl> + + failedPathFindingPenalty + = 10 ; <nl> + + } <nl> + } <nl> + <nl> + this . attackTick = Math . max ( this . attackTick - 1 , 0 ) ;

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / EntityList . java . patch b / patches / minecraft / net / minecraft / entity / EntityList . java . patch 
 index 05ba260 . . a3d820b 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntityList . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntityList . java . patch 
 @ @ - 164 , 3 + 164 , 20 @ @ 
 } 
 
 public static class EntityEggInfo 
 + @ @ - 428 , 5 + 449 , 16 @ @ 
 + this . field _ 151512 _ d = StatList . func _ 151182 _ a ( this ) ; 
 + this . field _ 151513 _ e = StatList . func _ 151176 _ b ( this ) ; 
 + } 
 + + 
 + + / / Forge start 
 + + public EntityEggInfo ( ResourceLocation id , int primaryColor , int secondaryColor , StatBase killEntityStatistic , StatBase entityKilledByStatistic ) 
 + + { 
 + + this . field _ 75613 _ a = id ; 
 + + this . field _ 75611 _ b = primaryColor ; 
 + + this . field _ 75612 _ c = secondaryColor ; 
 + + this . field _ 151512 _ d = killEntityStatistic ; 
 + + this . field _ 151513 _ e = entityKilledByStatistic ; 
 + + } 
 + + / / Forge end 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java b / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java 
 index 0ddb90e . . 7e736a9 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / EntityEntryBuilder . java 
 @ @ - 22 , 7 + 22 , 9 @ @ import net . minecraft . entity . Entity ; 
 import net . minecraft . entity . EntityList ; 
 import net . minecraft . entity . EntityLiving ; 
 import net . minecraft . entity . EnumCreatureType ; 
 + import net . minecraft . stats . StatBase ; 
 import net . minecraft . util . ResourceLocation ; 
 + import net . minecraft . util . text . TextComponentTranslation ; 
 import net . minecraft . world . World ; 
 import net . minecraft . world . biome . Biome ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 @ @ - 64 , 6 + 66 , 9 @ @ public final class EntityEntryBuilder < E extends Entity > 
 private boolean eggProvided ; 
 private int primaryEggColor ; 
 private int secondaryEggColor ; 
 + private boolean statisticsRegistered ; 
 + @ Nullable private StatBase killEntityStatistic ; 
 + @ Nullable private StatBase entityKilledByStatistic ; 
 @ Nullable private Collection < Spawn > spawns ; 
 
 / * * 
 @ @ - 262 , 7 + 267 , 12 @ @ public final class EntityEntryBuilder < E extends Entity > 
 } 
 } ; 
 entry . setRegistryName ( this . id ) ; 
 - if ( this . eggProvided ) entry . setEgg ( new EntityList . EntityEggInfo ( this . id , this . primaryEggColor , this . secondaryEggColor ) ) ; 
 + if ( this . eggProvided ) 
 + { 
 + this . killEntityStatistic = new StatBase ( " stat . killEntity . " + this . name , new TextComponentTranslation ( " stat . entityKill " , new TextComponentTranslation ( " entity . " + this . name + " . name " ) ) ) ; 
 + this . entityKilledByStatistic = new StatBase ( " stat . entityKilledBy . " + this . name , new TextComponentTranslation ( " stat . entityKilledBy " , new TextComponentTranslation ( " entity . " + this . name + " . name " ) ) ) ; 
 + entry . setEgg ( new EntityList . EntityEggInfo ( this . id , this . primaryEggColor , this . secondaryEggColor , this . killEntityStatistic , this . entityKilledByStatistic ) ) ; 
 + } 
 return entry ; 
 } 
 
 @ @ - 275 , 6 + 285 , 16 @ @ public final class EntityEntryBuilder < E extends Entity > 
 ) ; 
 } 
 
 + private void registerStatistics ( ) 
 + { 
 + if ( ! this . statisticsRegistered & & ( this . killEntityStatistic ! = null & & this . entityKilledByStatistic ! = null ) ) 
 + { 
 + this . killEntityStatistic . registerStat ( ) ; 
 + this . entityKilledByStatistic . registerStat ( ) ; 
 + this . statisticsRegistered = true ; 
 + } 
 + } 
 + 
 static abstract class ConstructorFactory < E extends Entity > implements Function < World , E > 
 { 
 private final Constructor < ? extends E > constructor ; 
 @ @ - 315 , 11 + 335 , 11 @ @ public final class EntityEntryBuilder < E extends Entity > 
 / / NOOP - we handle this in build 
 } 
 
 - @ SuppressWarnings ( " ConstantConditions " ) 
 public final void addedToRegistry ( ) 
 { 
 if ( this . added ) return ; 
 this . added = true ; 
 + EntityEntryBuilder . this . registerStatistics ( ) ; 
 EntityRegistry . instance ( ) . insert ( EntityEntryBuilder . this . entity , EntityEntryBuilder . this . createRegistration ( ) ) ; 
 if ( EntityEntryBuilder . this . spawns ! = null ) 
 {

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / ai / EntityAIAttackOnCollide . java . patch b / patches / minecraft / net / minecraft / entity / ai / EntityAIAttackOnCollide . java . patch 
 new file mode 100644 
 index 0000000 . . 6be2dfe 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / entity / ai / EntityAIAttackOnCollide . java . patch 
 @ @ - 0 , 0 + 1 , 64 @ @ 
 + - - - . . / src _ base / minecraft / net / minecraft / entity / ai / EntityAIAttackOnCollide . java 
 + + + + . . / src _ work / minecraft / net / minecraft / entity / ai / EntityAIAttackOnCollide . java 
 + @ @ - 3 , 6 + 3 , 7 @ @ 
 + import net . minecraft . entity . EntityCreature ; 
 + import net . minecraft . entity . EntityLivingBase ; 
 + import net . minecraft . pathfinding . PathEntity ; 
 + + import net . minecraft . pathfinding . PathPoint ; 
 + import net . minecraft . util . MathHelper ; 
 + import net . minecraft . world . World ; 
 + 
 + @ @ - 22 , 6 + 23 , 8 @ @ 
 + PathEntity entityPathEntity ; 
 + Class classTarget ; 
 + private int field _ 75445 _ i ; 
 + + 
 + + private int failedPathFindingPenalty ; 
 + 
 + public EntityAIAttackOnCollide ( EntityCreature par1EntityCreature , Class par2Class , double par3 , boolean par5 ) 
 + { 
 + @ @ - 59 , 8 + 62 , 16 @ @ 
 + } 
 + else 
 + { 
 + - this . entityPathEntity = this . attacker . getNavigator ( ) . getPathToEntityLiving ( entitylivingbase ) ; 
 + - return this . entityPathEntity ! = null ; 
 + + if ( - - this . field _ 75445 _ i < = 0 ) 
 + + { 
 + + this . entityPathEntity = this . attacker . getNavigator ( ) . getPathToEntityLiving ( entitylivingbase ) ; 
 + + this . field _ 75445 _ i = 4 + this . attacker . getRNG ( ) . nextInt ( 7 ) ; 
 + + return this . entityPathEntity ! = null ; 
 + + } 
 + + else 
 + + { 
 + + return true ; 
 + + } 
 + } 
 + } 
 + 
 + @ @ - 100 , 8 + 111 , 24 @ @ 
 + 
 + if ( ( this . field _ 75437 _ f | | this . attacker . getEntitySenses ( ) . canSee ( entitylivingbase ) ) & & - - this . field _ 75445 _ i < = 0 ) 
 + { 
 + - this . field _ 75445 _ i = 4 + this . attacker . getRNG ( ) . nextInt ( 7 ) ; 
 + + this . field _ 75445 _ i = failedPathFindingPenalty + 4 + this . attacker . getRNG ( ) . nextInt ( 7 ) ; 
 + this . attacker . getNavigator ( ) . tryMoveToEntityLiving ( entitylivingbase , this . field _ 75440 _ e ) ; 
 + + if ( this . attacker . getNavigator ( ) . getPath ( ) ! = null ) 
 + + { 
 + + PathPoint finalPathPoint = this . attacker . getNavigator ( ) . getPath ( ) . getFinalPathPoint ( ) ; 
 + + if ( entitylivingbase . getDistanceSq ( finalPathPoint . xCoord , finalPathPoint . yCoord , finalPathPoint . zCoord ) < 1 ) 
 + + { 
 + + failedPathFindingPenalty = 0 ; 
 + + } 
 + + else 
 + + { 
 + + failedPathFindingPenalty + = 10 ; 
 + + } 
 + + } 
 + + else 
 + + { 
 + + failedPathFindingPenalty + = 10 ; 
 + + } 
 + } 
 + 
 + this . attackTick = Math . max ( this . attackTick - 1 , 0 ) ;
