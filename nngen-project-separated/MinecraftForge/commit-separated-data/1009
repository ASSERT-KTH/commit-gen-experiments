BLEU SCORE: 0.020540268312306348

TEST MSG: Add vanilla block rotation support back in for certain blocks that were missed in 1 . 8 update . Closes # 1903
GENERATED MSG: Fix bug with custom Fluids . You can now drown in them !

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> index 22c7184 . . e9efee3 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / Block . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> @ @ - 962 , 7 + 962 , 7 @ @ <nl> + IBlockState state = world . func _ 180495 _ p ( pos ) ; <nl> + for ( IProperty prop : ( java . util . Set < IProperty > ) state . func _ 177228 _ b ( ) . keySet ( ) ) <nl> + { <nl> - + if ( prop . func _ 177701 _ a ( ) . equals ( " facing " ) ) <nl> + + if ( prop . func _ 177701 _ a ( ) . equals ( " facing " ) | | prop . func _ 177701 _ a ( ) . equals ( " rotation " ) ) <nl> + { <nl> + world . func _ 175656 _ a ( pos , state . func _ 177231 _ a ( prop ) ) ; <nl> + return true ; <nl> diff - - git a / patches / minecraft / net / minecraft / block / BlockHugeMushroom . java . patch b / patches / minecraft / net / minecraft / block / BlockHugeMushroom . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 6f2f734 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / block / BlockHugeMushroom . java . patch <nl> @ @ - 0 , 0 + 1 , 23 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / block / BlockHugeMushroom . java <nl> + + + + . . / src - work / minecraft / net / minecraft / block / BlockHugeMushroom . java <nl> + @ @ - 64 , 6 + 64 , 20 @ @ <nl> + return new BlockState ( this , new IProperty [ ] { field _ 176380 _ a } ) ; <nl> + } <nl> + <nl> + + public boolean rotateBlock ( World world , BlockPos pos , EnumFacing axis ) <nl> + + { <nl> + + IBlockState state = world . func _ 180495 _ p ( pos ) ; <nl> + + for ( IProperty prop : ( java . util . Set < IProperty > ) state . func _ 177228 _ b ( ) . keySet ( ) ) <nl> + + { <nl> + + if ( prop . func _ 177701 _ a ( ) . equals ( " variant " ) ) <nl> + + { <nl> + + world . func _ 175656 _ a ( pos , state . func _ 177231 _ a ( prop ) ) ; <nl> + + return true ; <nl> + + } <nl> + + } <nl> + + return false ; <nl> + + } <nl> + + <nl> + public static enum EnumType implements IStringSerializable <nl> + { <nl> + NORTH _ WEST ( 1 , " north _ west " ) , <nl> diff - - git a / patches / minecraft / net / minecraft / block / BlockQuartz . java . patch b / patches / minecraft / net / minecraft / block / BlockQuartz . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 6a6a75d <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / block / BlockQuartz . java . patch <nl> @ @ - 0 , 0 + 1 , 29 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / block / BlockQuartz . java <nl> + + + + . . / src - work / minecraft / net / minecraft / block / BlockQuartz . java <nl> + @ @ - 91 , 6 + 91 , 26 @ @ <nl> + return new BlockState ( this , new IProperty [ ] { field _ 176335 _ a } ) ; <nl> + } <nl> + <nl> + + public boolean rotateBlock ( World world , BlockPos pos , EnumFacing axis ) <nl> + + { <nl> + + IBlockState state = world . func _ 180495 _ p ( pos ) ; <nl> + + for ( IProperty prop : ( java . util . Set < IProperty > ) state . func _ 177228 _ b ( ) . keySet ( ) ) <nl> + + { <nl> + + if ( prop . func _ 177701 _ a ( ) . equals ( " variant " ) & & prop . func _ 177699 _ b ( ) = = EnumType . class ) <nl> + + { <nl> + + EnumType current = ( EnumType ) state . func _ 177229 _ b ( prop ) ; <nl> + + EnumType next = current = = EnumType . LINES _ X ? EnumType . LINES _ Y : <nl> + + current = = EnumType . LINES _ Y ? EnumType . LINES _ Z : <nl> + + current = = EnumType . LINES _ Z ? EnumType . LINES _ X : current ; <nl> + + if ( next = = current ) <nl> + + return false ; <nl> + + world . func _ 175656 _ a ( pos , state . func _ 177226 _ a ( prop , next ) ) ; <nl> + + return true ; <nl> + + } <nl> + + } <nl> + + return false ; <nl> + + } <nl> + + <nl> + public static enum EnumType implements IStringSerializable <nl> + { <nl> + DEFAULT ( 0 , " default " , " default " ) , <nl> diff - - git a / patches / minecraft / net / minecraft / block / BlockRailBase . java . patch b / patches / minecraft / net / minecraft / block / BlockRailBase . java . patch <nl> index 51ca5cb . . 8c3b154 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / BlockRailBase . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / BlockRailBase . java . patch <nl> @ @ - 9 , 7 + 9 , 7 @ @ <nl> } <nl> <nl> protected BlockRailBase ( boolean p _ i45389 _ 1 _ ) <nl> - @ @ - 174 , 7 + 174 , 56 @ @ <nl> + @ @ - 174 , 7 + 174 , 81 @ @ <nl> } <nl> <nl> public abstract IProperty func _ 176560 _ l ( ) ; <nl> @ @ - 61 , 12 + 61 , 37 @ @ <nl> + { <nl> + } <nl> + <nl> + + / * * <nl> + + * Rotate the block . For vanilla blocks this rotates around the axis passed in ( generally , it should be the " face " that was hit ) . <nl> + + * Note : for mod blocks , this is up to the block and modder to decide . It is not mandated that it be a rotation around the <nl> + + * face , but could be a rotation to orient * to * that face , or a visiting of possible rotations . <nl> + + * The method should return true if the rotation was successful though . <nl> + + * <nl> + + * @ param world The world <nl> + + * @ param pos Block position in world <nl> + + * @ param axis The axis to rotate around <nl> + + * @ return True if the rotation was successful , False if the rotation failed , or is not possible <nl> + + * / <nl> + + public boolean rotateBlock ( World world , BlockPos pos , EnumFacing axis ) <nl> + + { <nl> + + IBlockState state = world . func _ 180495 _ p ( pos ) ; <nl> + + for ( IProperty prop : ( java . util . Set < IProperty > ) state . func _ 177228 _ b ( ) . keySet ( ) ) <nl> + + { <nl> + + if ( prop . func _ 177701 _ a ( ) . equals ( " shape " ) ) <nl> + + { <nl> + + world . func _ 175656 _ a ( pos , state . func _ 177231 _ a ( prop ) ) ; <nl> + + return true ; <nl> + + } <nl> + + } <nl> + + return false ; <nl> + + } <nl> + + <nl> + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + <nl> public static enum EnumRailDirection implements IStringSerializable <nl> { <nl> NORTH _ SOUTH ( 0 , " north _ south " ) , <nl> - @ @ - 251 , 6 + 300 , 7 @ @ <nl> + @ @ - 251 , 6 + 325 , 7 @ @ <nl> private final boolean field _ 150656 _ f ; <nl> private final List field _ 150657 _ g = Lists . newArrayList ( ) ; <nl> private static final String _ _ OBFID = " CL _ 00000196 " ; <nl> @ @ - 74 , 7 + 99 , 7 @ @ <nl> <nl> public Rail ( World p _ i45739 _ 2 _ , BlockPos p _ i45739 _ 3 _ , IBlockState p _ i45739 _ 4 _ ) <nl> { <nl> - @ @ - 259 , 7 + 309 , 8 @ @ <nl> + @ @ - 259 , 7 + 334 , 8 @ @ <nl> this . field _ 180366 _ e = p _ i45739 _ 4 _ ; <nl> this . field _ 180365 _ d = ( BlockRailBase ) p _ i45739 _ 4 _ . func _ 177230 _ c ( ) ; <nl> BlockRailBase . EnumRailDirection enumraildirection = ( BlockRailBase . EnumRailDirection ) p _ i45739 _ 4 _ . func _ 177229 _ b ( BlockRailBase . this . func _ 176560 _ l ( ) ) ; <nl> @ @ - 84 , 7 + 109 , 7 @ @ <nl> this . func _ 180360 _ a ( enumraildirection ) ; <nl> } <nl> <nl> - @ @ - 448 , 7 + 499 , 7 @ @ <nl> + @ @ - 448 , 7 + 524 , 7 @ @ <nl> } <nl> } <nl> <nl> @ @ - 93 , 7 + 118 , 7 @ @ <nl> { <nl> if ( BlockRailBase . func _ 176562 _ d ( this . field _ 150660 _ b , blockpos . func _ 177984 _ a ( ) ) ) <nl> { <nl> - @ @ - 461 , 7 + 512 , 7 @ @ <nl> + @ @ - 461 , 7 + 537 , 7 @ @ <nl> } <nl> } <nl> <nl> @ @ - 102 , 7 + 127 , 7 @ @ <nl> { <nl> if ( BlockRailBase . func _ 176562 _ d ( this . field _ 150660 _ b , blockpos3 . func _ 177984 _ a ( ) ) ) <nl> { <nl> - @ @ - 604 , 7 + 655 , 7 @ @ <nl> + @ @ - 604 , 7 + 680 , 7 @ @ <nl> } <nl> } <nl> <nl> @ @ - 111 , 7 + 136 , 7 @ @ <nl> { <nl> if ( BlockRailBase . func _ 176562 _ d ( this . field _ 150660 _ b , blockpos . func _ 177984 _ a ( ) ) ) <nl> { <nl> - @ @ - 617 , 7 + 668 , 7 @ @ <nl> + @ @ - 617 , 7 + 693 , 7 @ @ <nl> } <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / block / BlockRotatedPillar . java . patch b / patches / minecraft / net / minecraft / block / BlockRotatedPillar . java . patch <nl> new file mode 100644 <nl> index 0000000 . . dd9715e <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / block / BlockRotatedPillar . java . patch <nl> @ @ - 0 , 0 + 1 , 29 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / block / BlockRotatedPillar . java <nl> + + + + . . / src - work / minecraft / net / minecraft / block / BlockRotatedPillar . java <nl> + @ @ - 2 , 6 + 2 , 7 @ @ <nl> + <nl> + import net . minecraft . block . material . Material ; <nl> + import net . minecraft . block . properties . PropertyEnum ; <nl> + + import net . minecraft . block . state . IBlockState ; <nl> + import net . minecraft . util . EnumFacing ; <nl> + <nl> + public abstract class BlockRotatedPillar extends Block <nl> + @ @ - 13 , 4 + 14 , 18 @ @ <nl> + { <nl> + super ( p _ i45425 _ 1 _ ) ; <nl> + } <nl> + + <nl> + + public boolean rotateBlock ( net . minecraft . world . World world , net . minecraft . util . BlockPos pos , EnumFacing axis ) <nl> + + { <nl> + + IBlockState state = world . func _ 180495 _ p ( pos ) ; <nl> + + for ( net . minecraft . block . properties . IProperty prop : ( java . util . Set < net . minecraft . block . properties . IProperty > ) state . func _ 177228 _ b ( ) . keySet ( ) ) <nl> + + { <nl> + + if ( prop . func _ 177701 _ a ( ) . equals ( " axis " ) ) <nl> + + { <nl> + + world . func _ 175656 _ a ( pos , state . func _ 177231 _ a ( prop ) ) ; <nl> + + return true ; <nl> + + } <nl> + + } <nl> + + return false ; <nl> + + } <nl> + }
NEAREST DIFF (one line): diff - - git a / common / net / minecraftforge / fluids / BlockFluidBase . java b / common / net / minecraftforge / fluids / BlockFluidBase . java <nl> index 5ec9f92 . . 91716d0 100644 <nl> - - - a / common / net / minecraftforge / fluids / BlockFluidBase . java <nl> + + + b / common / net / minecraftforge / fluids / BlockFluidBase . java <nl> @ @ - 451 , 4 + 451 , 13 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> { <nl> return FluidRegistry . getFluid ( fluidName ) ; <nl> } <nl> + <nl> + @ Override <nl> + public float getFilledPercentage ( World world , int x , int y , int z ) <nl> + { <nl> + int quantaRemaining = getQuantaValue ( world , x , y , z ) + 1 ; <nl> + float remaining = quantaRemaining / quantaPerBlockFloat ; <nl> + if ( remaining > 1 ) remaining = 1 . 0f ; <nl> + return remaining * ( density > 0 ? 1 : - 1 ) ; <nl> + } <nl> } <nl> diff - - git a / common / net / minecraftforge / fluids / IFluidBlock . java b / common / net / minecraftforge / fluids / IFluidBlock . java <nl> index f2f13b2 . . 3f5bec6 100644 <nl> - - - a / common / net / minecraftforge / fluids / IFluidBlock . java <nl> + + + b / common / net / minecraftforge / fluids / IFluidBlock . java <nl> @ @ - 37 , 4 + 37 , 15 @ @ public interface IFluidBlock <nl> * @ return <nl> * / <nl> boolean canDrain ( World world , int x , int y , int z ) ; <nl> + <nl> + / * * <nl> + * Returns the amount of a single block is filled . Value between 0 and 1 . <nl> + * 1 meaning the entire 1x1x1 cube is full , 0 meaning completely empty . <nl> + * <nl> + * If the return value is negative . It will be treated as filling the block <nl> + * from the top down instead of bottom up . <nl> + * <nl> + * @ return <nl> + * / <nl> + float getFilledPercentage ( World world , int x , int y , int z ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> index 07ccb81 . . df12f20 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / Block . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> @ @ - 167 , 7 + 167 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 1454 , 4 + 1477 , 975 @ @ <nl> + @ @ - 1454 , 4 + 1477 , 979 @ @ <nl> canBlockGrass [ 0 ] = true ; <nl> StatList . initBreakableStats ( ) ; <nl> } <nl> @ @ - 1142 , 4 + 1142 , 8 @ @ <nl> + { <nl> + return false ; <nl> + } <nl> + + <nl> + + @ Deprecated / / Implemented here as we changed the IFluidBlock interface , and this allows us to do so without breaking exisitng mods . <nl> + + / / To be removed next MC version { 1 . 6 . 3 + } <nl> + + public float getFilledPercentage ( World world , int x , int y , int z ) { return 1 ; } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / block / BlockFluid . java . patch b / patches / minecraft / net / minecraft / block / BlockFluid . java . patch <nl> index 5c0bfbc . . 5aa1d6c 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / BlockFluid . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / BlockFluid . java . patch <nl> @ @ - 9 , 3 + 9 , 17 @ @ <nl> l + = ( i2 & 16711680 ) > > 16 ; <nl> i1 + = ( i2 & 65280 ) > > 8 ; <nl> j1 + = i2 & 255 ; <nl> + @ @ - 81 , 6 + 81 , 13 @ @ <nl> + } <nl> + <nl> + return ( float ) ( par0 + 1 ) / 9 . 0F ; <nl> + + } <nl> + + <nl> + + <nl> + + @ Deprecated / / Implemented here for compatibility , need to change this when we make vanilla fluids use our fluid methods . <nl> + + public float getFilledPercentage ( IBlockAccess world , int x , int y , int z ) <nl> + + { <nl> + + return 1 - BlockFluid . getFluidHeightPercent ( world . getBlockMetadata ( x , y , z ) ) ; <nl> + } <nl> + <nl> + @ SideOnly ( Side . CLIENT ) <nl> diff - - git a / patches / minecraft / net / minecraft / entity / Entity . java . patch b / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> index 9eada44 . . 3a73289 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> @ @ - 1 , 17 + 1 , 22 @ @ <nl> - - - . . / src _ base / minecraft / net / minecraft / entity / Entity . java <nl> + + + . . / src _ work / minecraft / net / minecraft / entity / Entity . java <nl> - @ @ - 1 , 7 + 1 , 10 @ @ <nl> + @ @ - 1 , 10 + 1 , 15 @ @ <nl> package net . minecraft . entity ; <nl> <nl> + import cpw . mods . fml . common . FMLLog ; <nl> import cpw . mods . fml . relauncher . Side ; <nl> import cpw . mods . fml . relauncher . SideOnly ; <nl> + + <nl> + import java . util . ArrayList ; <nl> + import java . util . HashMap ; <nl> import java . util . List ; <nl> import java . util . Random ; <nl> import java . util . UUID ; <nl> - @ @ - 13 , 8 + 16 , 13 @ @ <nl> + + <nl> + import net . minecraft . block . Block ; <nl> + import net . minecraft . block . BlockFluid ; <nl> + import net . minecraft . block . StepSound ; <nl> + @ @ - 13 , 8 + 18 , 13 @ @ <nl> import net . minecraft . crash . CrashReportCategory ; <nl> import net . minecraft . enchantment . EnchantmentProtection ; <nl> import net . minecraft . entity . effect . EntityLightningBolt ; <nl> @ @ - 25 , 7 + 30 , 7 @ @ <nl> import net . minecraft . item . ItemStack ; <nl> import net . minecraft . nbt . NBTTagCompound ; <nl> import net . minecraft . nbt . NBTTagDouble ; <nl> - @ @ - 26 , 12 + 34 , 16 @ @ <nl> + @ @ - 26 , 12 + 36 , 18 @ @ <nl> import net . minecraft . util . DamageSource ; <nl> import net . minecraft . util . Direction ; <nl> import net . minecraft . util . MathHelper ; <nl> @ @ - 39 , 10 + 44 , 12 @ @ <nl> + import net . minecraftforge . common . IExtendedEntityProperties ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . event . entity . EntityEvent ; <nl> + + import net . minecraftforge . fluids . Fluid ; <nl> + + import net . minecraftforge . fluids . IFluidBlock ; <nl> <nl> public abstract class Entity <nl> { <nl> - @ @ - 218 , 6 + 230 , 13 @ @ <nl> + @ @ - 218 , 6 + 234 , 13 @ @ <nl> private boolean invulnerable ; <nl> private UUID entityUniqueID ; <nl> public EnumEntitySize myEntitySize ; <nl> @ @ - 56 , 7 + 63 , 7 @ @ <nl> <nl> public Entity ( World par1World ) <nl> { <nl> - @ @ - 245 , 6 + 264 , 15 @ @ <nl> + @ @ - 245 , 6 + 268 , 15 @ @ <nl> this . dataWatcher . addObject ( 0 , Byte . valueOf ( ( byte ) 0 ) ) ; <nl> this . dataWatcher . addObject ( 1 , Short . valueOf ( ( short ) 300 ) ) ; <nl> this . entityInit ( ) ; <nl> @ @ - 72 , 7 + 79 , 33 @ @ <nl> } <nl> <nl> protected abstract void entityInit ( ) ; <nl> - @ @ - 1523 , 6 + 1551 , 21 @ @ <nl> + @ @ - 1164 , 11 + 1196 , 20 @ @ <nl> + int k = MathHelper . floor _ double ( this . posZ ) ; <nl> + int l = this . worldObj . getBlockId ( i , j , k ) ; <nl> + <nl> + - if ( l ! = 0 & & Block . blocksList [ l ] . blockMaterial = = par1Material ) <nl> + - { <nl> + - float f = BlockFluid . getFluidHeightPercent ( this . worldObj . getBlockMetadata ( i , j , k ) ) - 0 . 11111111F ; <nl> + - float f1 = ( float ) ( j + 1 ) - f ; <nl> + - return d0 < ( double ) f1 ; <nl> + + Block block = Block . blocksList [ l ] ; <nl> + + if ( block ! = null & & block . blockMaterial = = par1Material ) <nl> + + { <nl> + + double filled = block . getFilledPercentage ( worldObj , i , j , k ) ; <nl> + + if ( filled < 0 ) <nl> + + { <nl> + + filled * = - 1 ; <nl> + + / / filled - = 0 . 11111111F ; / / Why this is needed . . not sure . . . <nl> + + return d0 > ( double ) ( j + ( 1 - filled ) ) ; <nl> + + } <nl> + + else <nl> + + { <nl> + + return d0 < ( double ) ( j + filled ) ; <nl> + + } <nl> + } <nl> + else <nl> + { <nl> + @ @ - 1523 , 6 + 1564 , 21 @ @ <nl> par1NBTTagCompound . setInteger ( " PortalCooldown " , this . timeUntilPortal ) ; <nl> par1NBTTagCompound . setLong ( " UUIDMost " , this . entityUniqueID . getMostSignificantBits ( ) ) ; <nl> par1NBTTagCompound . setLong ( " UUIDLeast " , this . entityUniqueID . getLeastSignificantBits ( ) ) ; <nl> @ @ - 94 , 7 + 127 , 7 @ @ <nl> this . writeEntityToNBT ( par1NBTTagCompound ) ; <nl> <nl> if ( this . ridingEntity ! = null ) <nl> - @ @ - 1593 , 6 + 1636 , 26 @ @ <nl> + @ @ - 1593 , 6 + 1649 , 26 @ @ <nl> <nl> this . setPosition ( this . posX , this . posY , this . posZ ) ; <nl> this . setRotation ( this . rotationYaw , this . rotationPitch ) ; <nl> @ @ - 121 , 7 + 154 , 7 @ @ <nl> this . readEntityFromNBT ( par1NBTTagCompound ) ; <nl> <nl> if ( this . func _ 142008 _ O ( ) ) <nl> - @ @ - 1705 , 7 + 1768 , 14 @ @ <nl> + @ @ - 1705 , 7 + 1781 , 14 @ @ <nl> { <nl> EntityItem entityitem = new EntityItem ( this . worldObj , this . posX , this . posY + ( double ) par2 , this . posZ , par1ItemStack ) ; <nl> entityitem . delayBeforeCanPickup = 10 ; <nl> @ @ - 137 , 7 + 170 , 7 @ @ <nl> return entityitem ; <nl> } <nl> } <nl> - @ @ - 2001 , 7 + 2071 , 7 @ @ <nl> + @ @ - 2001 , 7 + 2084 , 7 @ @ <nl> * / <nl> public boolean isRiding ( ) <nl> { <nl> @ @ - 146 , 7 + 179 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 2363 , 7 + 2433 , 7 @ @ <nl> + @ @ - 2363 , 7 + 2446 , 7 @ @ <nl> <nl> public float func _ 82146 _ a ( Explosion par1Explosion , World par2World , int par3 , int par4 , int par5 , Block par6Block ) <nl> { <nl> @ @ - 155 , 7 + 188 , 7 @ @ <nl> } <nl> <nl> public boolean func _ 96091 _ a ( Explosion par1Explosion , World par2World , int par3 , int par4 , int par5 , int par6 , float par7 ) <nl> - @ @ - 2426 , 4 + 2496 , 170 @ @ <nl> + @ @ - 2426 , 4 + 2509 , 170 @ @ <nl> { <nl> return this . getEntityName ( ) ; <nl> }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch 
 index 22c7184 . . e9efee3 100644 
 - - - a / patches / minecraft / net / minecraft / block / Block . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / Block . java . patch 
 @ @ - 962 , 7 + 962 , 7 @ @ 
 + IBlockState state = world . func _ 180495 _ p ( pos ) ; 
 + for ( IProperty prop : ( java . util . Set < IProperty > ) state . func _ 177228 _ b ( ) . keySet ( ) ) 
 + { 
 - + if ( prop . func _ 177701 _ a ( ) . equals ( " facing " ) ) 
 + + if ( prop . func _ 177701 _ a ( ) . equals ( " facing " ) | | prop . func _ 177701 _ a ( ) . equals ( " rotation " ) ) 
 + { 
 + world . func _ 175656 _ a ( pos , state . func _ 177231 _ a ( prop ) ) ; 
 + return true ; 
 diff - - git a / patches / minecraft / net / minecraft / block / BlockHugeMushroom . java . patch b / patches / minecraft / net / minecraft / block / BlockHugeMushroom . java . patch 
 new file mode 100644 
 index 0000000 . . 6f2f734 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / block / BlockHugeMushroom . java . patch 
 @ @ - 0 , 0 + 1 , 23 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / block / BlockHugeMushroom . java 
 + + + + . . / src - work / minecraft / net / minecraft / block / BlockHugeMushroom . java 
 + @ @ - 64 , 6 + 64 , 20 @ @ 
 + return new BlockState ( this , new IProperty [ ] { field _ 176380 _ a } ) ; 
 + } 
 + 
 + + public boolean rotateBlock ( World world , BlockPos pos , EnumFacing axis ) 
 + + { 
 + + IBlockState state = world . func _ 180495 _ p ( pos ) ; 
 + + for ( IProperty prop : ( java . util . Set < IProperty > ) state . func _ 177228 _ b ( ) . keySet ( ) ) 
 + + { 
 + + if ( prop . func _ 177701 _ a ( ) . equals ( " variant " ) ) 
 + + { 
 + + world . func _ 175656 _ a ( pos , state . func _ 177231 _ a ( prop ) ) ; 
 + + return true ; 
 + + } 
 + + } 
 + + return false ; 
 + + } 
 + + 
 + public static enum EnumType implements IStringSerializable 
 + { 
 + NORTH _ WEST ( 1 , " north _ west " ) , 
 diff - - git a / patches / minecraft / net / minecraft / block / BlockQuartz . java . patch b / patches / minecraft / net / minecraft / block / BlockQuartz . java . patch 
 new file mode 100644 
 index 0000000 . . 6a6a75d 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / block / BlockQuartz . java . patch 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / block / BlockQuartz . java 
 + + + + . . / src - work / minecraft / net / minecraft / block / BlockQuartz . java 
 + @ @ - 91 , 6 + 91 , 26 @ @ 
 + return new BlockState ( this , new IProperty [ ] { field _ 176335 _ a } ) ; 
 + } 
 + 
 + + public boolean rotateBlock ( World world , BlockPos pos , EnumFacing axis ) 
 + + { 
 + + IBlockState state = world . func _ 180495 _ p ( pos ) ; 
 + + for ( IProperty prop : ( java . util . Set < IProperty > ) state . func _ 177228 _ b ( ) . keySet ( ) ) 
 + + { 
 + + if ( prop . func _ 177701 _ a ( ) . equals ( " variant " ) & & prop . func _ 177699 _ b ( ) = = EnumType . class ) 
 + + { 
 + + EnumType current = ( EnumType ) state . func _ 177229 _ b ( prop ) ; 
 + + EnumType next = current = = EnumType . LINES _ X ? EnumType . LINES _ Y : 
 + + current = = EnumType . LINES _ Y ? EnumType . LINES _ Z : 
 + + current = = EnumType . LINES _ Z ? EnumType . LINES _ X : current ; 
 + + if ( next = = current ) 
 + + return false ; 
 + + world . func _ 175656 _ a ( pos , state . func _ 177226 _ a ( prop , next ) ) ; 
 + + return true ; 
 + + } 
 + + } 
 + + return false ; 
 + + } 
 + + 
 + public static enum EnumType implements IStringSerializable 
 + { 
 + DEFAULT ( 0 , " default " , " default " ) , 
 diff - - git a / patches / minecraft / net / minecraft / block / BlockRailBase . java . patch b / patches / minecraft / net / minecraft / block / BlockRailBase . java . patch 
 index 51ca5cb . . 8c3b154 100644 
 - - - a / patches / minecraft / net / minecraft / block / BlockRailBase . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / BlockRailBase . java . patch 
 @ @ - 9 , 7 + 9 , 7 @ @ 
 } 
 
 protected BlockRailBase ( boolean p _ i45389 _ 1 _ ) 
 - @ @ - 174 , 7 + 174 , 56 @ @ 
 + @ @ - 174 , 7 + 174 , 81 @ @ 
 } 
 
 public abstract IProperty func _ 176560 _ l ( ) ; 
 @ @ - 61 , 12 + 61 , 37 @ @ 
 + { 
 + } 
 + 
 + + / * * 
 + + * Rotate the block . For vanilla blocks this rotates around the axis passed in ( generally , it should be the " face " that was hit ) . 
 + + * Note : for mod blocks , this is up to the block and modder to decide . It is not mandated that it be a rotation around the 
 + + * face , but could be a rotation to orient * to * that face , or a visiting of possible rotations . 
 + + * The method should return true if the rotation was successful though . 
 + + * 
 + + * @ param world The world 
 + + * @ param pos Block position in world 
 + + * @ param axis The axis to rotate around 
 + + * @ return True if the rotation was successful , False if the rotation failed , or is not possible 
 + + * / 
 + + public boolean rotateBlock ( World world , BlockPos pos , EnumFacing axis ) 
 + + { 
 + + IBlockState state = world . func _ 180495 _ p ( pos ) ; 
 + + for ( IProperty prop : ( java . util . Set < IProperty > ) state . func _ 177228 _ b ( ) . keySet ( ) ) 
 + + { 
 + + if ( prop . func _ 177701 _ a ( ) . equals ( " shape " ) ) 
 + + { 
 + + world . func _ 175656 _ a ( pos , state . func _ 177231 _ a ( prop ) ) ; 
 + + return true ; 
 + + } 
 + + } 
 + + return false ; 
 + + } 
 + + 
 + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + 
 public static enum EnumRailDirection implements IStringSerializable 
 { 
 NORTH _ SOUTH ( 0 , " north _ south " ) , 
 - @ @ - 251 , 6 + 300 , 7 @ @ 
 + @ @ - 251 , 6 + 325 , 7 @ @ 
 private final boolean field _ 150656 _ f ; 
 private final List field _ 150657 _ g = Lists . newArrayList ( ) ; 
 private static final String _ _ OBFID = " CL _ 00000196 " ; 
 @ @ - 74 , 7 + 99 , 7 @ @ 
 
 public Rail ( World p _ i45739 _ 2 _ , BlockPos p _ i45739 _ 3 _ , IBlockState p _ i45739 _ 4 _ ) 
 { 
 - @ @ - 259 , 7 + 309 , 8 @ @ 
 + @ @ - 259 , 7 + 334 , 8 @ @ 
 this . field _ 180366 _ e = p _ i45739 _ 4 _ ; 
 this . field _ 180365 _ d = ( BlockRailBase ) p _ i45739 _ 4 _ . func _ 177230 _ c ( ) ; 
 BlockRailBase . EnumRailDirection enumraildirection = ( BlockRailBase . EnumRailDirection ) p _ i45739 _ 4 _ . func _ 177229 _ b ( BlockRailBase . this . func _ 176560 _ l ( ) ) ; 
 @ @ - 84 , 7 + 109 , 7 @ @ 
 this . func _ 180360 _ a ( enumraildirection ) ; 
 } 
 
 - @ @ - 448 , 7 + 499 , 7 @ @ 
 + @ @ - 448 , 7 + 524 , 7 @ @ 
 } 
 } 
 
 @ @ - 93 , 7 + 118 , 7 @ @ 
 { 
 if ( BlockRailBase . func _ 176562 _ d ( this . field _ 150660 _ b , blockpos . func _ 177984 _ a ( ) ) ) 
 { 
 - @ @ - 461 , 7 + 512 , 7 @ @ 
 + @ @ - 461 , 7 + 537 , 7 @ @ 
 } 
 } 
 
 @ @ - 102 , 7 + 127 , 7 @ @ 
 { 
 if ( BlockRailBase . func _ 176562 _ d ( this . field _ 150660 _ b , blockpos3 . func _ 177984 _ a ( ) ) ) 
 { 
 - @ @ - 604 , 7 + 655 , 7 @ @ 
 + @ @ - 604 , 7 + 680 , 7 @ @ 
 } 
 } 
 
 @ @ - 111 , 7 + 136 , 7 @ @ 
 { 
 if ( BlockRailBase . func _ 176562 _ d ( this . field _ 150660 _ b , blockpos . func _ 177984 _ a ( ) ) ) 
 { 
 - @ @ - 617 , 7 + 668 , 7 @ @ 
 + @ @ - 617 , 7 + 693 , 7 @ @ 
 } 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / block / BlockRotatedPillar . java . patch b / patches / minecraft / net / minecraft / block / BlockRotatedPillar . java . patch 
 new file mode 100644 
 index 0000000 . . dd9715e 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / block / BlockRotatedPillar . java . patch 
 @ @ - 0 , 0 + 1 , 29 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / block / BlockRotatedPillar . java 
 + + + + . . / src - work / minecraft / net / minecraft / block / BlockRotatedPillar . java 
 + @ @ - 2 , 6 + 2 , 7 @ @ 
 + 
 + import net . minecraft . block . material . Material ; 
 + import net . minecraft . block . properties . PropertyEnum ; 
 + + import net . minecraft . block . state . IBlockState ; 
 + import net . minecraft . util . EnumFacing ; 
 + 
 + public abstract class BlockRotatedPillar extends Block 
 + @ @ - 13 , 4 + 14 , 18 @ @ 
 + { 
 + super ( p _ i45425 _ 1 _ ) ; 
 + } 
 + + 
 + + public boolean rotateBlock ( net . minecraft . world . World world , net . minecraft . util . BlockPos pos , EnumFacing axis ) 
 + + { 
 + + IBlockState state = world . func _ 180495 _ p ( pos ) ; 
 + + for ( net . minecraft . block . properties . IProperty prop : ( java . util . Set < net . minecraft . block . properties . IProperty > ) state . func _ 177228 _ b ( ) . keySet ( ) ) 
 + + { 
 + + if ( prop . func _ 177701 _ a ( ) . equals ( " axis " ) ) 
 + + { 
 + + world . func _ 175656 _ a ( pos , state . func _ 177231 _ a ( prop ) ) ; 
 + + return true ; 
 + + } 
 + + } 
 + + return false ; 
 + + } 
 + }

NEAREST DIFF:
diff - - git a / common / net / minecraftforge / fluids / BlockFluidBase . java b / common / net / minecraftforge / fluids / BlockFluidBase . java 
 index 5ec9f92 . . 91716d0 100644 
 - - - a / common / net / minecraftforge / fluids / BlockFluidBase . java 
 + + + b / common / net / minecraftforge / fluids / BlockFluidBase . java 
 @ @ - 451 , 4 + 451 , 13 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 { 
 return FluidRegistry . getFluid ( fluidName ) ; 
 } 
 + 
 + @ Override 
 + public float getFilledPercentage ( World world , int x , int y , int z ) 
 + { 
 + int quantaRemaining = getQuantaValue ( world , x , y , z ) + 1 ; 
 + float remaining = quantaRemaining / quantaPerBlockFloat ; 
 + if ( remaining > 1 ) remaining = 1 . 0f ; 
 + return remaining * ( density > 0 ? 1 : - 1 ) ; 
 + } 
 } 
 diff - - git a / common / net / minecraftforge / fluids / IFluidBlock . java b / common / net / minecraftforge / fluids / IFluidBlock . java 
 index f2f13b2 . . 3f5bec6 100644 
 - - - a / common / net / minecraftforge / fluids / IFluidBlock . java 
 + + + b / common / net / minecraftforge / fluids / IFluidBlock . java 
 @ @ - 37 , 4 + 37 , 15 @ @ public interface IFluidBlock 
 * @ return 
 * / 
 boolean canDrain ( World world , int x , int y , int z ) ; 
 + 
 + / * * 
 + * Returns the amount of a single block is filled . Value between 0 and 1 . 
 + * 1 meaning the entire 1x1x1 cube is full , 0 meaning completely empty . 
 + * 
 + * If the return value is negative . It will be treated as filling the block 
 + * from the top down instead of bottom up . 
 + * 
 + * @ return 
 + * / 
 + float getFilledPercentage ( World world , int x , int y , int z ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch 
 index 07ccb81 . . df12f20 100644 
 - - - a / patches / minecraft / net / minecraft / block / Block . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / Block . java . patch 
 @ @ - 167 , 7 + 167 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 1454 , 4 + 1477 , 975 @ @ 
 + @ @ - 1454 , 4 + 1477 , 979 @ @ 
 canBlockGrass [ 0 ] = true ; 
 StatList . initBreakableStats ( ) ; 
 } 
 @ @ - 1142 , 4 + 1142 , 8 @ @ 
 + { 
 + return false ; 
 + } 
 + + 
 + + @ Deprecated / / Implemented here as we changed the IFluidBlock interface , and this allows us to do so without breaking exisitng mods . 
 + + / / To be removed next MC version { 1 . 6 . 3 + } 
 + + public float getFilledPercentage ( World world , int x , int y , int z ) { return 1 ; } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / block / BlockFluid . java . patch b / patches / minecraft / net / minecraft / block / BlockFluid . java . patch 
 index 5c0bfbc . . 5aa1d6c 100644 
 - - - a / patches / minecraft / net / minecraft / block / BlockFluid . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / BlockFluid . java . patch 
 @ @ - 9 , 3 + 9 , 17 @ @ 
 l + = ( i2 & 16711680 ) > > 16 ; 
 i1 + = ( i2 & 65280 ) > > 8 ; 
 j1 + = i2 & 255 ; 
 + @ @ - 81 , 6 + 81 , 13 @ @ 
 + } 
 + 
 + return ( float ) ( par0 + 1 ) / 9 . 0F ; 
 + + } 
 + + 
 + + 
 + + @ Deprecated / / Implemented here for compatibility , need to change this when we make vanilla fluids use our fluid methods . 
 + + public float getFilledPercentage ( IBlockAccess world , int x , int y , int z ) 
 + + { 
 + + return 1 - BlockFluid . getFluidHeightPercent ( world . getBlockMetadata ( x , y , z ) ) ; 
 + } 
 + 
 + @ SideOnly ( Side . CLIENT ) 
 diff - - git a / patches / minecraft / net / minecraft / entity / Entity . java . patch b / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 index 9eada44 . . 3a73289 100644 
 - - - a / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 @ @ - 1 , 17 + 1 , 22 @ @ 
 - - - . . / src _ base / minecraft / net / minecraft / entity / Entity . java 
 + + + . . / src _ work / minecraft / net / minecraft / entity / Entity . java 
 - @ @ - 1 , 7 + 1 , 10 @ @ 
 + @ @ - 1 , 10 + 1 , 15 @ @ 
 package net . minecraft . entity ; 
 
 + import cpw . mods . fml . common . FMLLog ; 
 import cpw . mods . fml . relauncher . Side ; 
 import cpw . mods . fml . relauncher . SideOnly ; 
 + + 
 + import java . util . ArrayList ; 
 + import java . util . HashMap ; 
 import java . util . List ; 
 import java . util . Random ; 
 import java . util . UUID ; 
 - @ @ - 13 , 8 + 16 , 13 @ @ 
 + + 
 + import net . minecraft . block . Block ; 
 + import net . minecraft . block . BlockFluid ; 
 + import net . minecraft . block . StepSound ; 
 + @ @ - 13 , 8 + 18 , 13 @ @ 
 import net . minecraft . crash . CrashReportCategory ; 
 import net . minecraft . enchantment . EnchantmentProtection ; 
 import net . minecraft . entity . effect . EntityLightningBolt ; 
 @ @ - 25 , 7 + 30 , 7 @ @ 
 import net . minecraft . item . ItemStack ; 
 import net . minecraft . nbt . NBTTagCompound ; 
 import net . minecraft . nbt . NBTTagDouble ; 
 - @ @ - 26 , 12 + 34 , 16 @ @ 
 + @ @ - 26 , 12 + 36 , 18 @ @ 
 import net . minecraft . util . DamageSource ; 
 import net . minecraft . util . Direction ; 
 import net . minecraft . util . MathHelper ; 
 @ @ - 39 , 10 + 44 , 12 @ @ 
 + import net . minecraftforge . common . IExtendedEntityProperties ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . event . entity . EntityEvent ; 
 + + import net . minecraftforge . fluids . Fluid ; 
 + + import net . minecraftforge . fluids . IFluidBlock ; 
 
 public abstract class Entity 
 { 
 - @ @ - 218 , 6 + 230 , 13 @ @ 
 + @ @ - 218 , 6 + 234 , 13 @ @ 
 private boolean invulnerable ; 
 private UUID entityUniqueID ; 
 public EnumEntitySize myEntitySize ; 
 @ @ - 56 , 7 + 63 , 7 @ @ 
 
 public Entity ( World par1World ) 
 { 
 - @ @ - 245 , 6 + 264 , 15 @ @ 
 + @ @ - 245 , 6 + 268 , 15 @ @ 
 this . dataWatcher . addObject ( 0 , Byte . valueOf ( ( byte ) 0 ) ) ; 
 this . dataWatcher . addObject ( 1 , Short . valueOf ( ( short ) 300 ) ) ; 
 this . entityInit ( ) ; 
 @ @ - 72 , 7 + 79 , 33 @ @ 
 } 
 
 protected abstract void entityInit ( ) ; 
 - @ @ - 1523 , 6 + 1551 , 21 @ @ 
 + @ @ - 1164 , 11 + 1196 , 20 @ @ 
 + int k = MathHelper . floor _ double ( this . posZ ) ; 
 + int l = this . worldObj . getBlockId ( i , j , k ) ; 
 + 
 + - if ( l ! = 0 & & Block . blocksList [ l ] . blockMaterial = = par1Material ) 
 + - { 
 + - float f = BlockFluid . getFluidHeightPercent ( this . worldObj . getBlockMetadata ( i , j , k ) ) - 0 . 11111111F ; 
 + - float f1 = ( float ) ( j + 1 ) - f ; 
 + - return d0 < ( double ) f1 ; 
 + + Block block = Block . blocksList [ l ] ; 
 + + if ( block ! = null & & block . blockMaterial = = par1Material ) 
 + + { 
 + + double filled = block . getFilledPercentage ( worldObj , i , j , k ) ; 
 + + if ( filled < 0 ) 
 + + { 
 + + filled * = - 1 ; 
 + + / / filled - = 0 . 11111111F ; / / Why this is needed . . not sure . . . 
 + + return d0 > ( double ) ( j + ( 1 - filled ) ) ; 
 + + } 
 + + else 
 + + { 
 + + return d0 < ( double ) ( j + filled ) ; 
 + + } 
 + } 
 + else 
 + { 
 + @ @ - 1523 , 6 + 1564 , 21 @ @ 
 par1NBTTagCompound . setInteger ( " PortalCooldown " , this . timeUntilPortal ) ; 
 par1NBTTagCompound . setLong ( " UUIDMost " , this . entityUniqueID . getMostSignificantBits ( ) ) ; 
 par1NBTTagCompound . setLong ( " UUIDLeast " , this . entityUniqueID . getLeastSignificantBits ( ) ) ; 
 @ @ - 94 , 7 + 127 , 7 @ @ 
 this . writeEntityToNBT ( par1NBTTagCompound ) ; 
 
 if ( this . ridingEntity ! = null ) 
 - @ @ - 1593 , 6 + 1636 , 26 @ @ 
 + @ @ - 1593 , 6 + 1649 , 26 @ @ 
 
 this . setPosition ( this . posX , this . posY , this . posZ ) ; 
 this . setRotation ( this . rotationYaw , this . rotationPitch ) ; 
 @ @ - 121 , 7 + 154 , 7 @ @ 
 this . readEntityFromNBT ( par1NBTTagCompound ) ; 
 
 if ( this . func _ 142008 _ O ( ) ) 
 - @ @ - 1705 , 7 + 1768 , 14 @ @ 
 + @ @ - 1705 , 7 + 1781 , 14 @ @ 
 { 
 EntityItem entityitem = new EntityItem ( this . worldObj , this . posX , this . posY + ( double ) par2 , this . posZ , par1ItemStack ) ; 
 entityitem . delayBeforeCanPickup = 10 ; 
 @ @ - 137 , 7 + 170 , 7 @ @ 
 return entityitem ; 
 } 
 } 
 - @ @ - 2001 , 7 + 2071 , 7 @ @ 
 + @ @ - 2001 , 7 + 2084 , 7 @ @ 
 * / 
 public boolean isRiding ( ) 
 { 
 @ @ - 146 , 7 + 179 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 2363 , 7 + 2433 , 7 @ @ 
 + @ @ - 2363 , 7 + 2446 , 7 @ @ 
 
 public float func _ 82146 _ a ( Explosion par1Explosion , World par2World , int par3 , int par4 , int par5 , Block par6Block ) 
 { 
 @ @ - 155 , 7 + 188 , 7 @ @ 
 } 
 
 public boolean func _ 96091 _ a ( Explosion par1Explosion , World par2World , int par3 , int par4 , int par5 , int par6 , float par7 ) 
 - @ @ - 2426 , 4 + 2496 , 170 @ @ 
 + @ @ - 2426 , 4 + 2509 , 170 @ @ 
 { 
 return this . getEntityName ( ) ; 
 }
