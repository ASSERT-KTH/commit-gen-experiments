BLEU SCORE: 0.019146030690102508

TEST MSG: Fix vanilla bug with GLFW init error display - actually the error , not the memory address containing the message
GENERATED MSG: Fix launching in dev

TEST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index 203e744 . . 7d6cc87 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 62 , 6 + 62 , 7 @ @ project ( ' : forge ' ) { <nl> } <nl> } <nl> repositories { <nl> + mavenLocal ( ) <nl> mavenCentral ( ) <nl> } <nl> patcher { <nl> @ @ - 115 , 11 + 116 , 11 @ @ project ( ' : forge ' ) { <nl> options . failOnError = false <nl> options . forkOptions . with { <nl> executable = ' java ' <nl> - jvmArgs = [ ' - classpath ' , project . configurations . ecj . asPath , ' org . eclipse . jdt . internal . compiler . batch . Main ' , ' - nowarn ' ] <nl> + jvmArgs = [ ' - classpath ' , project . configurations . ecj . asPath , ' org . eclipse . jdt . internal . compiler . batch . Main ' , ' - nowarn ' , ' - proceedOnError ' , ' - preserveAllLocals ' , ' - parameters ' ] <nl> } <nl> } <nl> <nl> - task runclient ( type : JavaExec ) { <nl> + task runclient ( type : JavaExec , dependsOn : [ " : forge : downloadAssets " , " : forge : extractNatives " ] ) { <nl> doFirst { <nl> mkdir ' runclient ' <nl> } <nl> @ @ - 132 , 7 + 133 , 15 @ @ project ( ' : forge ' ) { <nl> / / jvmArgs = [ ' - verbose : class ' ] <nl> classpath sourceSets . main . runtimeClasspath <nl> main ' net . minecraftforge . fml . LaunchTesting ' <nl> - environment target : ' fmldevclient ' <nl> + systemProperties = [ <nl> + " org . lwjgl . util . Debug " : " true " , <nl> + " org . lwjgl . util . DebugLoader " : " true " <nl> + ] <nl> + environment + = [ <nl> + target : ' fmldevclient ' , <nl> + assetDirectory : file ( " $ { gradle . getGradleUserHomeDir ( ) } / caches / forge _ gradle / assets / " ) , <nl> + nativesDirectory : extractNatives . output <nl> + ] <nl> workingDir ' runclient ' <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> index 616ad24 . . 0e61972 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> @ @ - 24 , 6 + 24 , 15 @ @ <nl> if ( this . gameSettings . fullScreen & & ! this . field _ 195558 _ d . func _ 198113 _ j ( ) ) { <nl> this . field _ 195558 _ d . func _ 198077 _ g ( ) ; <nl> } <nl> + @ @ - 485 , 7 + 488 , 7 @ @ <nl> + } ) ; <nl> + List < String > list = Lists . < String > newArrayList ( ) ; <nl> + GLFWErrorCallback glfwerrorcallback = GLFW . glfwSetErrorCallback ( ( p _ 211100 _ 1 _ , p _ 211100 _ 2 _ ) - > { <nl> + - list . add ( String . format ( " GLFW error during init : [ 0x % X ] % s " , p _ 211100 _ 1 _ , p _ 211100 _ 2 _ ) ) ; <nl> + + list . add ( String . format ( " GLFW error during init : [ 0x % X ] % s " , p _ 211100 _ 1 _ , GLFWErrorCallback . getDescription ( p _ 211100 _ 2 _ ) ) ) ; <nl> + } ) ; <nl> + if ( ! GLFW . glfwInit ( ) ) { <nl> + throw new IllegalStateException ( " Failed to initialize GLFW , errors : " + Joiner . on ( " , " ) . join ( list ) ) ; <nl> @ @ - 1392 , 6 + 1395 , 7 @ @ <nl> NetworkManager networkmanager = NetworkManager . provideLocalClient ( socketaddress ) ; <nl> networkmanager . setNetHandler ( new NetHandlerLoginClient ( networkmanager , this , ( GuiScreen ) null , ( p _ 209507 _ 0 _ ) - > { <nl> diff - - git a / src / main / java / net / minecraftforge / fml / LaunchTesting . java b / src / main / java / net / minecraftforge / fml / LaunchTesting . java <nl> index 2abc2e2 . . 9435c63 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / LaunchTesting . java <nl> + + + b / src / main / java / net / minecraftforge / fml / LaunchTesting . java <nl> @ @ - 70 , 7 + 70 , 7 @ @ public class LaunchTesting <nl> private static void hackNatives ( ) <nl> { <nl> String paths = System . getProperty ( " java . library . path " ) ; <nl> - String nativesDir = " / home / cpw / . gradle / caches / minecraft / net / minecraft / natives / 1 . 12 . 2 " ; / / TODO Not hardcode this , FG setups us a natives folder . And sets it in the eclipse run configs . <nl> + String nativesDir = System . getenv ( ) . get ( " nativesDirectory " ) ; <nl> <nl> if ( Strings . isNullOrEmpty ( paths ) ) <nl> paths = nativesDir ;
NEAREST DIFF (one line): diff - - git a / build . gradle b / build . gradle <nl> index ef1db7c . . 203e744 100644 <nl> - - - a / build . gradle <nl> + + + b / build . gradle <nl> @ @ - 70 , 6 + 70 , 18 @ @ project ( ' : forge ' ) { <nl> patchedSrc = file ( ' src / main / java ' ) <nl> accessTransformer = file ( " $ rootDir / src / main / resources / forge _ at . cfg " ) <nl> srgPatches = false <nl> + clientRun { <nl> + main = ' net . minecraftforge . fml . LaunchTesting ' <nl> + env = [ <nl> + target : ' fmldevclient ' <nl> + ] <nl> + } <nl> + serverRun { <nl> + main = ' net . minecraftforge . fml . LaunchTesting ' <nl> + env = [ <nl> + target : ' fmldevserver ' <nl> + ] <nl> + } <nl> } <nl> applyPatches { <nl> canonicalizeAccess true <nl> @ @ - 77 , 8 + 89 , 8 @ @ project ( ' : forge ' ) { <nl> maxFuzz 3 <nl> } <nl> dependencies { <nl> - implementation project ( ' : clean ' ) <nl> - implementation ' cpw . mods : modlauncher : 0 . 1 + ' <nl> + implementation ' net . minecraft : client : 1 . 13 : extra ' <nl> + implementation ' cpw . mods : modlauncher : 0 . 1 . 0 - rc . 3 ' / / Pinned until cpw fixes getCommonSupertype <nl> implementation ' net . minecraftforge : accesstransformers : 0 . 10 + : shadowed ' <nl> implementation ' net . minecraftforge : eventbus : 0 . 1 + : service ' <nl> implementation ' net . minecraftforge : forgespi : 0 . 1 + ' <nl> @ @ - 120 , 7 + 132 , 7 @ @ project ( ' : forge ' ) { <nl> / / jvmArgs = [ ' - verbose : class ' ] <nl> classpath sourceSets . main . runtimeClasspath <nl> main ' net . minecraftforge . fml . LaunchTesting ' <nl> - systemProperties target : ' fmldevclient ' <nl> + environment target : ' fmldevclient ' <nl> workingDir ' runclient ' <nl> } <nl> <nl> @ @ - 131 , 7 + 143 , 7 @ @ project ( ' : forge ' ) { <nl> classpath sourceSets . main . runtimeClasspath <nl> main ' net . minecraftforge . fml . LaunchTesting ' <nl> args ' nogui ' <nl> - systemProperties target : ' fmldevserver ' <nl> + environment target : ' fmldevserver ' <nl> workingDir ' runserver ' <nl> } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / item / Item . java . patch b / patches / minecraft / net / minecraft / item / Item . java . patch <nl> index f9fc9f0 . . 736b9ea 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / Item . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / Item . java . patch <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> this . maxStackSize = p _ i48487 _ 1 _ . field _ 200920 _ a ; <nl> + this . canRepair = p _ i48487 _ 1 _ . canRepair ; <nl> + this . toolClasses . putAll ( p _ i48487 _ 1 _ . toolClasses ) ; <nl> - + Object tmp = net . minecraftforge . fml . DistExecutor . callWhenOn ( Dist . CLIENT , p _ i48487 _ 1 _ . teisr ) ; <nl> + + Object tmp = p _ i48487 _ 1 _ . teisr = = null ? null : net . minecraftforge . fml . DistExecutor . callWhenOn ( Dist . CLIENT , p _ i48487 _ 1 _ . teisr ) ; <nl> + this . teisr = tmp = = null ? null : ( ) - > ( net . minecraft . client . renderer . tileentity . TileEntityItemStackRenderer ) tmp ; <nl> if ( this . maxDamage > 0 ) { <nl> this . addPropertyOverride ( new ResourceLocation ( " damaged " ) , DAMAGED _ GETTER ) ; <nl> @ @ - 86 , 7 + 86 , 7 @ @ <nl> + <nl> + @ Nullable <nl> + private final java . util . function . Supplier < net . minecraft . client . renderer . tileentity . TileEntityItemStackRenderer > teisr ; <nl> - + <nl> + + <nl> + private final java . util . Map < String , Integer > toolClasses = new java . util . HashMap < String , Integer > ( ) ; <nl> + <nl> + protected final boolean canRepair ; <nl> @ @ - 119 , 7 + 119 , 7 @ @ <nl> + } <nl> + <nl> + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> - + <nl> + + <nl> public static void registerItems ( ) { <nl> registerItemBlock ( Blocks . AIR , new ItemAir ( Blocks . AIR , new Item . Builder ( ) ) ) ; <nl> func _ 200879 _ a ( Blocks . STONE , ItemGroup . BUILDING _ BLOCKS ) ; <nl> @ @ - 137 , 7 + 137 , 7 @ @ <nl> this . field _ 208104 _ e = p _ 208103 _ 1 _ ; <nl> return this ; <nl> } <nl> - + <nl> + + <nl> + public Item . Builder setNoRepair ( ) { <nl> + canRepair = false ; <nl> + return this ; <nl> @ @ - 154 , 10 + 154 , 10 @ @ <nl> + toolClasses . remove ( toolClass ) ; <nl> + else <nl> + toolClasses . put ( toolClass , level ) ; <nl> - } <nl> + + } <nl> + <nl> + public void setTileEntityItemStackRenderer ( java . util . function . Supplier < java . util . concurrent . Callable < net . minecraft . client . renderer . tileentity . TileEntityItemStackRenderer > > teisrSupplier ) { <nl> + this . teisr = teisrSupplier ; <nl> + } <nl> + } <nl> - + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / LaunchTesting . java b / src / main / java / net / minecraftforge / fml / LaunchTesting . java <nl> index 739d177 . . 2abc2e2 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / LaunchTesting . java <nl> + + + b / src / main / java / net / minecraftforge / fml / LaunchTesting . java <nl> @ @ - 45 , 11 + 45 , 24 @ @ public class LaunchTesting <nl> logcontext . getConfiguration ( ) . addFilter ( axformFilter ) ; <nl> logcontext . getConfiguration ( ) . addFilter ( eventbusFilter ) ; <nl> logcontext . updateLoggers ( ) ; <nl> - System . setProperty ( " fml . explodedDir " , " / home / cpw / projects / mods / inventorysorter / classes " ) ; <nl> + File invsorter = new File ( " / home / cpw / projects / mods / inventorysorter / classes " ) ; <nl> + if ( invsorter . exists ( ) ) { <nl> + System . setProperty ( " fml . explodedDir " , " / home / cpw / projects / mods / inventorysorter / classes " ) ; / / TODO : Move this to a example included in our tests , not a random location . . . <nl> + } <nl> + String assets = System . getenv ( ) . getOrDefault ( " assetDirectory " , " assets " ) ; <nl> + String target = System . getenv ( ) . get ( " target " ) ; <nl> + <nl> + if ( target = = null ) { <nl> + throw new IllegalArgumentException ( " Environment variable target must be set . " ) ; <nl> + } <nl> + <nl> hackNatives ( ) ; <nl> - Launcher . main ( " - - launchTarget " , System . getProperty ( " target " ) , " - - gameDir " , " . " , <nl> - " - - accessToken " , " blah " , " - - version " , " FMLDev " , " - - assetIndex " , " 1 . 13 " , <nl> - " - - assetsDir " , " / home / cpw / MultiMC / assets " , <nl> + Launcher . main ( " - - launchTarget " , target , <nl> + " - - gameDir " , " . " , <nl> + " - - accessToken " , " blah " , <nl> + " - - version " , " FMLDev " , <nl> + " - - assetIndex " , " 1 . 13 " , <nl> + " - - assetsDir " , assets , <nl> " - - userProperties " , " { } " ) ; <nl> Thread . sleep ( 10000 ) ; <nl> } <nl> @ @ - 57 , 7 + 70 , 7 @ @ public class LaunchTesting <nl> private static void hackNatives ( ) <nl> { <nl> String paths = System . getProperty ( " java . library . path " ) ; <nl> - String nativesDir = " / home / cpw / . gradle / caches / minecraft / net / minecraft / natives / 1 . 12 . 2 " ; <nl> + String nativesDir = " / home / cpw / . gradle / caches / minecraft / net / minecraft / natives / 1 . 12 . 2 " ; / / TODO Not hardcode this , FG setups us a natives folder . And sets it in the eclipse run configs . <nl> <nl> if ( Strings . isNullOrEmpty ( paths ) ) <nl> paths = nativesDir ; <nl> diff - - git a / src / main / java / net / minecraftforge / registries / GameData . java b / src / main / java / net / minecraftforge / registries / GameData . java <nl> index 3c54e67 . . 74afcf1 100644 <nl> - - - a / src / main / java / net / minecraftforge / registries / GameData . java <nl> + + + b / src / main / java / net / minecraftforge / registries / GameData . java <nl> @ @ - 165 , 9 + 165 , 9 @ @ public class GameData <nl> } <nl> <nl> @ SuppressWarnings ( " unchecked " ) <nl> - public static BiMap < Block , Item > getBlockItemMap ( ) <nl> + public static Map < Block , Item > getBlockItemMap ( ) <nl> { <nl> - return RegistryManager . ACTIVE . getRegistry ( Item . class ) . getSlaveMap ( BLOCK _ TO _ ITEM , BiMap . class ) ; <nl> + return RegistryManager . ACTIVE . getRegistry ( Item . class ) . getSlaveMap ( BLOCK _ TO _ ITEM , Map . class ) ; <nl> } <nl> <nl> @ SuppressWarnings ( " unchecked " ) <nl> @ @ - 345 , 7 + 345 , 7 @ @ public class GameData <nl> } ; <nl> owner . setSlaveMap ( BLOCKSTATE _ TO _ ID , idMap ) ; <nl> * / <nl> - owner . setSlaveMap ( BLOCK _ TO _ ITEM , HashBiMap . create ( ) ) ; <nl> + owner . setSlaveMap ( BLOCK _ TO _ ITEM , Maps . newHashMap ( ) ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 380 , 22 + 380 , 22 @ @ public class GameData <nl> if ( item instanceof ItemBlock ) <nl> { <nl> @ SuppressWarnings ( " unchecked " ) <nl> - BiMap < Block , Item > blockToItem = owner . getSlaveMap ( BLOCK _ TO _ ITEM , BiMap . class ) ; <nl> - blockToItem . forcePut ( ( ( ItemBlock ) item ) . getBlock ( ) , item ) ; <nl> + Map < Block , Item > blockToItem = owner . getSlaveMap ( BLOCK _ TO _ ITEM , Map . class ) ; <nl> + ( ( ItemBlock ) item ) . func _ 195946 _ a ( blockToItem , item ) ; <nl> } <nl> } <nl> <nl> @ Override <nl> public void onClear ( IForgeRegistryInternal < Item > owner , RegistryManager stage ) <nl> { <nl> - owner . getSlaveMap ( BLOCK _ TO _ ITEM , BiMap . class ) . clear ( ) ; <nl> + owner . getSlaveMap ( BLOCK _ TO _ ITEM , Map . class ) . clear ( ) ; <nl> } <nl> <nl> @ Override <nl> public void onCreate ( IForgeRegistryInternal < Item > owner , RegistryManager stage ) <nl> { <nl> / / We share the blockItem map between items and blocks registries <nl> - BiMap < ? , ? > map = stage . getRegistry ( BLOCKS ) . getSlaveMap ( BLOCK _ TO _ ITEM , BiMap . class ) ; <nl> + Map < ? , ? > map = stage . getRegistry ( BLOCKS ) . getSlaveMap ( BLOCK _ TO _ ITEM , Map . class ) ; <nl> owner . setSlaveMap ( BLOCK _ TO _ ITEM , map ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index 203e744 . . 7d6cc87 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 62 , 6 + 62 , 7 @ @ project ( ' : forge ' ) { 
 } 
 } 
 repositories { 
 + mavenLocal ( ) 
 mavenCentral ( ) 
 } 
 patcher { 
 @ @ - 115 , 11 + 116 , 11 @ @ project ( ' : forge ' ) { 
 options . failOnError = false 
 options . forkOptions . with { 
 executable = ' java ' 
 - jvmArgs = [ ' - classpath ' , project . configurations . ecj . asPath , ' org . eclipse . jdt . internal . compiler . batch . Main ' , ' - nowarn ' ] 
 + jvmArgs = [ ' - classpath ' , project . configurations . ecj . asPath , ' org . eclipse . jdt . internal . compiler . batch . Main ' , ' - nowarn ' , ' - proceedOnError ' , ' - preserveAllLocals ' , ' - parameters ' ] 
 } 
 } 
 
 - task runclient ( type : JavaExec ) { 
 + task runclient ( type : JavaExec , dependsOn : [ " : forge : downloadAssets " , " : forge : extractNatives " ] ) { 
 doFirst { 
 mkdir ' runclient ' 
 } 
 @ @ - 132 , 7 + 133 , 15 @ @ project ( ' : forge ' ) { 
 / / jvmArgs = [ ' - verbose : class ' ] 
 classpath sourceSets . main . runtimeClasspath 
 main ' net . minecraftforge . fml . LaunchTesting ' 
 - environment target : ' fmldevclient ' 
 + systemProperties = [ 
 + " org . lwjgl . util . Debug " : " true " , 
 + " org . lwjgl . util . DebugLoader " : " true " 
 + ] 
 + environment + = [ 
 + target : ' fmldevclient ' , 
 + assetDirectory : file ( " $ { gradle . getGradleUserHomeDir ( ) } / caches / forge _ gradle / assets / " ) , 
 + nativesDirectory : extractNatives . output 
 + ] 
 workingDir ' runclient ' 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 index 616ad24 . . 0e61972 100644 
 - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 @ @ - 24 , 6 + 24 , 15 @ @ 
 if ( this . gameSettings . fullScreen & & ! this . field _ 195558 _ d . func _ 198113 _ j ( ) ) { 
 this . field _ 195558 _ d . func _ 198077 _ g ( ) ; 
 } 
 + @ @ - 485 , 7 + 488 , 7 @ @ 
 + } ) ; 
 + List < String > list = Lists . < String > newArrayList ( ) ; 
 + GLFWErrorCallback glfwerrorcallback = GLFW . glfwSetErrorCallback ( ( p _ 211100 _ 1 _ , p _ 211100 _ 2 _ ) - > { 
 + - list . add ( String . format ( " GLFW error during init : [ 0x % X ] % s " , p _ 211100 _ 1 _ , p _ 211100 _ 2 _ ) ) ; 
 + + list . add ( String . format ( " GLFW error during init : [ 0x % X ] % s " , p _ 211100 _ 1 _ , GLFWErrorCallback . getDescription ( p _ 211100 _ 2 _ ) ) ) ; 
 + } ) ; 
 + if ( ! GLFW . glfwInit ( ) ) { 
 + throw new IllegalStateException ( " Failed to initialize GLFW , errors : " + Joiner . on ( " , " ) . join ( list ) ) ; 
 @ @ - 1392 , 6 + 1395 , 7 @ @ 
 NetworkManager networkmanager = NetworkManager . provideLocalClient ( socketaddress ) ; 
 networkmanager . setNetHandler ( new NetHandlerLoginClient ( networkmanager , this , ( GuiScreen ) null , ( p _ 209507 _ 0 _ ) - > { 
 diff - - git a / src / main / java / net / minecraftforge / fml / LaunchTesting . java b / src / main / java / net / minecraftforge / fml / LaunchTesting . java 
 index 2abc2e2 . . 9435c63 100644 
 - - - a / src / main / java / net / minecraftforge / fml / LaunchTesting . java 
 + + + b / src / main / java / net / minecraftforge / fml / LaunchTesting . java 
 @ @ - 70 , 7 + 70 , 7 @ @ public class LaunchTesting 
 private static void hackNatives ( ) 
 { 
 String paths = System . getProperty ( " java . library . path " ) ; 
 - String nativesDir = " / home / cpw / . gradle / caches / minecraft / net / minecraft / natives / 1 . 12 . 2 " ; / / TODO Not hardcode this , FG setups us a natives folder . And sets it in the eclipse run configs . 
 + String nativesDir = System . getenv ( ) . get ( " nativesDirectory " ) ; 
 
 if ( Strings . isNullOrEmpty ( paths ) ) 
 paths = nativesDir ;

NEAREST DIFF:
diff - - git a / build . gradle b / build . gradle 
 index ef1db7c . . 203e744 100644 
 - - - a / build . gradle 
 + + + b / build . gradle 
 @ @ - 70 , 6 + 70 , 18 @ @ project ( ' : forge ' ) { 
 patchedSrc = file ( ' src / main / java ' ) 
 accessTransformer = file ( " $ rootDir / src / main / resources / forge _ at . cfg " ) 
 srgPatches = false 
 + clientRun { 
 + main = ' net . minecraftforge . fml . LaunchTesting ' 
 + env = [ 
 + target : ' fmldevclient ' 
 + ] 
 + } 
 + serverRun { 
 + main = ' net . minecraftforge . fml . LaunchTesting ' 
 + env = [ 
 + target : ' fmldevserver ' 
 + ] 
 + } 
 } 
 applyPatches { 
 canonicalizeAccess true 
 @ @ - 77 , 8 + 89 , 8 @ @ project ( ' : forge ' ) { 
 maxFuzz 3 
 } 
 dependencies { 
 - implementation project ( ' : clean ' ) 
 - implementation ' cpw . mods : modlauncher : 0 . 1 + ' 
 + implementation ' net . minecraft : client : 1 . 13 : extra ' 
 + implementation ' cpw . mods : modlauncher : 0 . 1 . 0 - rc . 3 ' / / Pinned until cpw fixes getCommonSupertype 
 implementation ' net . minecraftforge : accesstransformers : 0 . 10 + : shadowed ' 
 implementation ' net . minecraftforge : eventbus : 0 . 1 + : service ' 
 implementation ' net . minecraftforge : forgespi : 0 . 1 + ' 
 @ @ - 120 , 7 + 132 , 7 @ @ project ( ' : forge ' ) { 
 / / jvmArgs = [ ' - verbose : class ' ] 
 classpath sourceSets . main . runtimeClasspath 
 main ' net . minecraftforge . fml . LaunchTesting ' 
 - systemProperties target : ' fmldevclient ' 
 + environment target : ' fmldevclient ' 
 workingDir ' runclient ' 
 } 
 
 @ @ - 131 , 7 + 143 , 7 @ @ project ( ' : forge ' ) { 
 classpath sourceSets . main . runtimeClasspath 
 main ' net . minecraftforge . fml . LaunchTesting ' 
 args ' nogui ' 
 - systemProperties target : ' fmldevserver ' 
 + environment target : ' fmldevserver ' 
 workingDir ' runserver ' 
 } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / item / Item . java . patch b / patches / minecraft / net / minecraft / item / Item . java . patch 
 index f9fc9f0 . . 736b9ea 100644 
 - - - a / patches / minecraft / net / minecraft / item / Item . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / Item . java . patch 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 this . maxStackSize = p _ i48487 _ 1 _ . field _ 200920 _ a ; 
 + this . canRepair = p _ i48487 _ 1 _ . canRepair ; 
 + this . toolClasses . putAll ( p _ i48487 _ 1 _ . toolClasses ) ; 
 - + Object tmp = net . minecraftforge . fml . DistExecutor . callWhenOn ( Dist . CLIENT , p _ i48487 _ 1 _ . teisr ) ; 
 + + Object tmp = p _ i48487 _ 1 _ . teisr = = null ? null : net . minecraftforge . fml . DistExecutor . callWhenOn ( Dist . CLIENT , p _ i48487 _ 1 _ . teisr ) ; 
 + this . teisr = tmp = = null ? null : ( ) - > ( net . minecraft . client . renderer . tileentity . TileEntityItemStackRenderer ) tmp ; 
 if ( this . maxDamage > 0 ) { 
 this . addPropertyOverride ( new ResourceLocation ( " damaged " ) , DAMAGED _ GETTER ) ; 
 @ @ - 86 , 7 + 86 , 7 @ @ 
 + 
 + @ Nullable 
 + private final java . util . function . Supplier < net . minecraft . client . renderer . tileentity . TileEntityItemStackRenderer > teisr ; 
 - + 
 + + 
 + private final java . util . Map < String , Integer > toolClasses = new java . util . HashMap < String , Integer > ( ) ; 
 + 
 + protected final boolean canRepair ; 
 @ @ - 119 , 7 + 119 , 7 @ @ 
 + } 
 + 
 + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 - + 
 + + 
 public static void registerItems ( ) { 
 registerItemBlock ( Blocks . AIR , new ItemAir ( Blocks . AIR , new Item . Builder ( ) ) ) ; 
 func _ 200879 _ a ( Blocks . STONE , ItemGroup . BUILDING _ BLOCKS ) ; 
 @ @ - 137 , 7 + 137 , 7 @ @ 
 this . field _ 208104 _ e = p _ 208103 _ 1 _ ; 
 return this ; 
 } 
 - + 
 + + 
 + public Item . Builder setNoRepair ( ) { 
 + canRepair = false ; 
 + return this ; 
 @ @ - 154 , 10 + 154 , 10 @ @ 
 + toolClasses . remove ( toolClass ) ; 
 + else 
 + toolClasses . put ( toolClass , level ) ; 
 - } 
 + + } 
 + 
 + public void setTileEntityItemStackRenderer ( java . util . function . Supplier < java . util . concurrent . Callable < net . minecraft . client . renderer . tileentity . TileEntityItemStackRenderer > > teisrSupplier ) { 
 + this . teisr = teisrSupplier ; 
 + } 
 + } 
 - + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / fml / LaunchTesting . java b / src / main / java / net / minecraftforge / fml / LaunchTesting . java 
 index 739d177 . . 2abc2e2 100644 
 - - - a / src / main / java / net / minecraftforge / fml / LaunchTesting . java 
 + + + b / src / main / java / net / minecraftforge / fml / LaunchTesting . java 
 @ @ - 45 , 11 + 45 , 24 @ @ public class LaunchTesting 
 logcontext . getConfiguration ( ) . addFilter ( axformFilter ) ; 
 logcontext . getConfiguration ( ) . addFilter ( eventbusFilter ) ; 
 logcontext . updateLoggers ( ) ; 
 - System . setProperty ( " fml . explodedDir " , " / home / cpw / projects / mods / inventorysorter / classes " ) ; 
 + File invsorter = new File ( " / home / cpw / projects / mods / inventorysorter / classes " ) ; 
 + if ( invsorter . exists ( ) ) { 
 + System . setProperty ( " fml . explodedDir " , " / home / cpw / projects / mods / inventorysorter / classes " ) ; / / TODO : Move this to a example included in our tests , not a random location . . . 
 + } 
 + String assets = System . getenv ( ) . getOrDefault ( " assetDirectory " , " assets " ) ; 
 + String target = System . getenv ( ) . get ( " target " ) ; 
 + 
 + if ( target = = null ) { 
 + throw new IllegalArgumentException ( " Environment variable target must be set . " ) ; 
 + } 
 + 
 hackNatives ( ) ; 
 - Launcher . main ( " - - launchTarget " , System . getProperty ( " target " ) , " - - gameDir " , " . " , 
 - " - - accessToken " , " blah " , " - - version " , " FMLDev " , " - - assetIndex " , " 1 . 13 " , 
 - " - - assetsDir " , " / home / cpw / MultiMC / assets " , 
 + Launcher . main ( " - - launchTarget " , target , 
 + " - - gameDir " , " . " , 
 + " - - accessToken " , " blah " , 
 + " - - version " , " FMLDev " , 
 + " - - assetIndex " , " 1 . 13 " , 
 + " - - assetsDir " , assets , 
 " - - userProperties " , " { } " ) ; 
 Thread . sleep ( 10000 ) ; 
 } 
 @ @ - 57 , 7 + 70 , 7 @ @ public class LaunchTesting 
 private static void hackNatives ( ) 
 { 
 String paths = System . getProperty ( " java . library . path " ) ; 
 - String nativesDir = " / home / cpw / . gradle / caches / minecraft / net / minecraft / natives / 1 . 12 . 2 " ; 
 + String nativesDir = " / home / cpw / . gradle / caches / minecraft / net / minecraft / natives / 1 . 12 . 2 " ; / / TODO Not hardcode this , FG setups us a natives folder . And sets it in the eclipse run configs . 
 
 if ( Strings . isNullOrEmpty ( paths ) ) 
 paths = nativesDir ; 
 diff - - git a / src / main / java / net / minecraftforge / registries / GameData . java b / src / main / java / net / minecraftforge / registries / GameData . java 
 index 3c54e67 . . 74afcf1 100644 
 - - - a / src / main / java / net / minecraftforge / registries / GameData . java 
 + + + b / src / main / java / net / minecraftforge / registries / GameData . java 
 @ @ - 165 , 9 + 165 , 9 @ @ public class GameData 
 } 
 
 @ SuppressWarnings ( " unchecked " ) 
 - public static BiMap < Block , Item > getBlockItemMap ( ) 
 + public static Map < Block , Item > getBlockItemMap ( ) 
 { 
 - return RegistryManager . ACTIVE . getRegistry ( Item . class ) . getSlaveMap ( BLOCK _ TO _ ITEM , BiMap . class ) ; 
 + return RegistryManager . ACTIVE . getRegistry ( Item . class ) . getSlaveMap ( BLOCK _ TO _ ITEM , Map . class ) ; 
 } 
 
 @ SuppressWarnings ( " unchecked " ) 
 @ @ - 345 , 7 + 345 , 7 @ @ public class GameData 
 } ; 
 owner . setSlaveMap ( BLOCKSTATE _ TO _ ID , idMap ) ; 
 * / 
 - owner . setSlaveMap ( BLOCK _ TO _ ITEM , HashBiMap . create ( ) ) ; 
 + owner . setSlaveMap ( BLOCK _ TO _ ITEM , Maps . newHashMap ( ) ) ; 
 } 
 
 @ Override 
 @ @ - 380 , 22 + 380 , 22 @ @ public class GameData 
 if ( item instanceof ItemBlock ) 
 { 
 @ SuppressWarnings ( " unchecked " ) 
 - BiMap < Block , Item > blockToItem = owner . getSlaveMap ( BLOCK _ TO _ ITEM , BiMap . class ) ; 
 - blockToItem . forcePut ( ( ( ItemBlock ) item ) . getBlock ( ) , item ) ; 
 + Map < Block , Item > blockToItem = owner . getSlaveMap ( BLOCK _ TO _ ITEM , Map . class ) ; 
 + ( ( ItemBlock ) item ) . func _ 195946 _ a ( blockToItem , item ) ; 
 } 
 } 
 
 @ Override 
 public void onClear ( IForgeRegistryInternal < Item > owner , RegistryManager stage ) 
 { 
 - owner . getSlaveMap ( BLOCK _ TO _ ITEM , BiMap . class ) . clear ( ) ; 
 + owner . getSlaveMap ( BLOCK _ TO _ ITEM , Map . class ) . clear ( ) ; 
 } 
 
 @ Override 
 public void onCreate ( IForgeRegistryInternal < Item > owner , RegistryManager stage ) 
 { 
 / / We share the blockItem map between items and blocks registries 
 - BiMap < ? , ? > map = stage . getRegistry ( BLOCKS ) . getSlaveMap ( BLOCK _ TO _ ITEM , BiMap . class ) ; 
 + Map < ? , ? > map = stage . getRegistry ( BLOCKS ) . getSlaveMap ( BLOCK _ TO _ ITEM , Map . class ) ; 
 owner . setSlaveMap ( BLOCK _ TO _ ITEM , map ) ; 
 } 
 }
