BLEU SCORE: 0.026279617104084448

TEST MSG: TESRs registering in preinit don ' t break pistons anymore . Fixes # 2298 .
GENERATED MSG: Allow blocks to render in multiple layers

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / tileentity / TileEntityPistonRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / tileentity / TileEntityPistonRenderer . java . patch <nl> new file mode 100644 <nl> index 0000000 . . d70da76 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / tileentity / TileEntityPistonRenderer . java . patch <nl> @ @ - 0 , 0 + 1 , 15 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / renderer / tileentity / TileEntityPistonRenderer . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / renderer / tileentity / TileEntityPistonRenderer . java <nl> + @ @ - 23 , 10 + 23 , 11 @ @ <nl> + @ SideOnly ( Side . CLIENT ) <nl> + public class TileEntityPistonRenderer extends TileEntitySpecialRenderer < TileEntityPiston > <nl> + { <nl> + - private final BlockRendererDispatcher field _ 178462 _ c = Minecraft . func _ 71410 _ x ( ) . func _ 175602 _ ab ( ) ; <nl> + + private BlockRendererDispatcher field _ 178462 _ c ; <nl> + <nl> + public void func _ 180535 _ a ( TileEntityPiston p _ 180535 _ 1 _ , double p _ 180535 _ 2 _ , double p _ 180535 _ 4 _ , double p _ 180535 _ 6 _ , float p _ 180535 _ 8 _ , int p _ 180535 _ 9 _ ) <nl> + { <nl> + + if ( field _ 178462 _ c = = null ) field _ 178462 _ c = Minecraft . func _ 71410 _ x ( ) . func _ 175602 _ ab ( ) ; <nl> + BlockPos blockpos = p _ 180535 _ 1 _ . func _ 174877 _ v ( ) ; <nl> + IBlockState iblockstate = p _ 180535 _ 1 _ . func _ 174927 _ b ( ) ; <nl> + Block block = iblockstate . func _ 177230 _ c ( ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java <nl> index 4ea71f0 . . 8a1de58 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java <nl> @ @ - 150 , 13 + 150 , 13 @ @ public class ModelAnimationDebug <nl> super . preInit ( event ) ; <nl> B3DLoader . instance . addDomain ( MODID ) ; <nl> ModelLoader . setCustomModelResourceLocation ( Item . getItemFromBlock ( GameRegistry . findBlock ( MODID , blockName ) ) , 0 , new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + blockName , " inventory " ) ) ; <nl> + ClientRegistry . bindTileEntitySpecialRenderer ( Chest . class , ChestRenderer . instance ) ; <nl> } <nl> <nl> @ Override <nl> public void init ( FMLInitializationEvent event ) <nl> { <nl> super . init ( event ) ; <nl> - ClientRegistry . bindTileEntitySpecialRenderer ( Chest . class , ChestRenderer . instance ) ; <nl> } <nl> } <nl> <nl> @ @ - 239 , 10 + 239 , 11 @ @ public class ModelAnimationDebug <nl> public static ChestRenderer instance = new ChestRenderer ( ) ; <nl> private ChestRenderer ( ) { } <nl> <nl> - private final BlockRendererDispatcher blockRenderer = Minecraft . getMinecraft ( ) . getBlockRendererDispatcher ( ) ; <nl> + private BlockRendererDispatcher blockRenderer ; <nl> <nl> public void renderTileEntityAt ( Chest te , double x , double y , double z , float partialTick , int breakStage ) <nl> { <nl> + if ( blockRenderer = = null ) blockRenderer = Minecraft . getMinecraft ( ) . getBlockRendererDispatcher ( ) ; <nl> IBlockState state = te . getWorld ( ) . getBlockState ( te . getPos ( ) ) ; <nl> state = state . withProperty ( STATIC , false ) ; <nl> IBakedModel model = this . blockRenderer . getBlockModelShapes ( ) . getModelForState ( state ) ;
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> index a946cbd . . 7a24cd0 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / Block . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> @ @ - 161 , 7 + 161 , 7 @ @ <nl> } <nl> <nl> protected ItemStack func _ 180643 _ i ( IBlockState p _ 180643 _ 1 _ ) <nl> - @ @ - 971 , 6 + 989 , 1019 @ @ <nl> + @ @ - 971 , 6 + 989 , 1028 @ @ <nl> return Block . EnumOffsetType . NONE ; <nl> } <nl> <nl> @ @ - 1153 , 6 + 1153 , 15 @ @ <nl> + return func _ 176221 _ a ( state , world , pos ) ; <nl> + } <nl> + <nl> + + / * * <nl> + + * Queries if this block should render in a given layer . <nl> + + * ISmartBlockModel can use MinecraftForgeClient . getRenderLayer to alter their model based on layer <nl> + + * / <nl> + + public boolean canRenderInLayer ( EnumWorldBlockLayer layer ) <nl> + + { <nl> + + return func _ 180664 _ k ( ) = = layer ; <nl> + + } <nl> + + <nl> + / / For Internal use only to capture droped items inside getDrops <nl> + protected static ThreadLocal < Boolean > captureDrops = new ThreadLocal < Boolean > ( ) <nl> + { <nl> diff - - git a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch <nl> index d223b06 . . 6b33267 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch <nl> @ @ - 9 , 3 + 9 , 22 @ @ <nl> { <nl> TileEntity tileentity = regionrendercache . func _ 175625 _ s ( new BlockPos ( mutableblockpos ) ) ; <nl> <nl> + @ @ - 160 , 7 + 160 , 9 @ @ <nl> + } <nl> + } <nl> + <nl> + - EnumWorldBlockLayer enumworldblocklayer1 = block . func _ 180664 _ k ( ) ; <nl> + + for ( EnumWorldBlockLayer enumworldblocklayer1 : EnumWorldBlockLayer . values ( ) ) { <nl> + + if ( ! block . canRenderInLayer ( enumworldblocklayer1 ) ) continue ; <nl> + + net . minecraftforge . client . ForgeHooksClient . setRenderLayer ( enumworldblocklayer1 ) ; <nl> + int i = enumworldblocklayer1 . ordinal ( ) ; <nl> + <nl> + if ( block . func _ 149645 _ b ( ) ! = - 1 ) <nl> + @ @ - 178 , 6 + 180 , 7 @ @ <nl> + compiledchunk . func _ 178486 _ a ( enumworldblocklayer1 ) ; <nl> + } <nl> + } <nl> + + } <nl> + } <nl> + <nl> + EnumWorldBlockLayer [ ] aenumworldblocklayer = EnumWorldBlockLayer . values ( ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index d0126b6 . . 521ef8a 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . item . ItemStack ; <nl> import net . minecraft . util . BlockPos ; <nl> import net . minecraft . util . EnumChatFormatting ; <nl> + import net . minecraft . util . EnumWorldBlockLayer ; <nl> import net . minecraft . util . IRegistry ; <nl> import net . minecraft . util . MovingObjectPosition ; <nl> import net . minecraft . world . IBlockAccess ; <nl> @ @ - 272 , 6 + 273 , 12 @ @ public class ForgeHooksClient <nl> renderPass = pass ; <nl> } <nl> <nl> + static EnumWorldBlockLayer renderLayer = EnumWorldBlockLayer . SOLID ; <nl> + public static void setRenderLayer ( EnumWorldBlockLayer layer ) <nl> + { <nl> + renderLayer = layer ; <nl> + } <nl> + <nl> public static ModelBase getArmorModel ( EntityLivingBase entityLiving , ItemStack itemStack , int slotID , ModelBase _ default ) <nl> { <nl> ModelBase modelbase = itemStack . getItem ( ) . getArmorModel ( entityLiving , itemStack , slotID ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> index 2c31fef . . 39afb26 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java <nl> @ @ - 12 , 6 + 12 , 7 @ @ import com . google . common . collect . Maps ; <nl> <nl> import net . minecraft . item . Item ; <nl> import net . minecraft . item . ItemStack ; <nl> + import net . minecraft . util . EnumWorldBlockLayer ; <nl> import net . minecraftforge . client . IItemRenderer . ItemRenderType ; <nl> <nl> public class MinecraftForgeClient <nl> @ @ - 46 , 6 + 47 , 11 @ @ public class MinecraftForgeClient <nl> return ForgeHooksClient . renderPass ; <nl> } <nl> <nl> + public static EnumWorldBlockLayer getRenderLayer ( ) <nl> + { <nl> + return ForgeHooksClient . renderLayer ; <nl> + } <nl> + <nl> private static BitSet stencilBits = new BitSet ( 8 ) ; <nl> static <nl> {

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / tileentity / TileEntityPistonRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / tileentity / TileEntityPistonRenderer . java . patch 
 new file mode 100644 
 index 0000000 . . d70da76 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / renderer / tileentity / TileEntityPistonRenderer . java . patch 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / renderer / tileentity / TileEntityPistonRenderer . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / renderer / tileentity / TileEntityPistonRenderer . java 
 + @ @ - 23 , 10 + 23 , 11 @ @ 
 + @ SideOnly ( Side . CLIENT ) 
 + public class TileEntityPistonRenderer extends TileEntitySpecialRenderer < TileEntityPiston > 
 + { 
 + - private final BlockRendererDispatcher field _ 178462 _ c = Minecraft . func _ 71410 _ x ( ) . func _ 175602 _ ab ( ) ; 
 + + private BlockRendererDispatcher field _ 178462 _ c ; 
 + 
 + public void func _ 180535 _ a ( TileEntityPiston p _ 180535 _ 1 _ , double p _ 180535 _ 2 _ , double p _ 180535 _ 4 _ , double p _ 180535 _ 6 _ , float p _ 180535 _ 8 _ , int p _ 180535 _ 9 _ ) 
 + { 
 + + if ( field _ 178462 _ c = = null ) field _ 178462 _ c = Minecraft . func _ 71410 _ x ( ) . func _ 175602 _ ab ( ) ; 
 + BlockPos blockpos = p _ 180535 _ 1 _ . func _ 174877 _ v ( ) ; 
 + IBlockState iblockstate = p _ 180535 _ 1 _ . func _ 174927 _ b ( ) ; 
 + Block block = iblockstate . func _ 177230 _ c ( ) ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java 
 index 4ea71f0 . . 8a1de58 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java 
 + + + b / src / test / java / net / minecraftforge / debug / ModelAnimationDebug . java 
 @ @ - 150 , 13 + 150 , 13 @ @ public class ModelAnimationDebug 
 super . preInit ( event ) ; 
 B3DLoader . instance . addDomain ( MODID ) ; 
 ModelLoader . setCustomModelResourceLocation ( Item . getItemFromBlock ( GameRegistry . findBlock ( MODID , blockName ) ) , 0 , new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + blockName , " inventory " ) ) ; 
 + ClientRegistry . bindTileEntitySpecialRenderer ( Chest . class , ChestRenderer . instance ) ; 
 } 
 
 @ Override 
 public void init ( FMLInitializationEvent event ) 
 { 
 super . init ( event ) ; 
 - ClientRegistry . bindTileEntitySpecialRenderer ( Chest . class , ChestRenderer . instance ) ; 
 } 
 } 
 
 @ @ - 239 , 10 + 239 , 11 @ @ public class ModelAnimationDebug 
 public static ChestRenderer instance = new ChestRenderer ( ) ; 
 private ChestRenderer ( ) { } 
 
 - private final BlockRendererDispatcher blockRenderer = Minecraft . getMinecraft ( ) . getBlockRendererDispatcher ( ) ; 
 + private BlockRendererDispatcher blockRenderer ; 
 
 public void renderTileEntityAt ( Chest te , double x , double y , double z , float partialTick , int breakStage ) 
 { 
 + if ( blockRenderer = = null ) blockRenderer = Minecraft . getMinecraft ( ) . getBlockRendererDispatcher ( ) ; 
 IBlockState state = te . getWorld ( ) . getBlockState ( te . getPos ( ) ) ; 
 state = state . withProperty ( STATIC , false ) ; 
 IBakedModel model = this . blockRenderer . getBlockModelShapes ( ) . getModelForState ( state ) ;

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch 
 index a946cbd . . 7a24cd0 100644 
 - - - a / patches / minecraft / net / minecraft / block / Block . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / Block . java . patch 
 @ @ - 161 , 7 + 161 , 7 @ @ 
 } 
 
 protected ItemStack func _ 180643 _ i ( IBlockState p _ 180643 _ 1 _ ) 
 - @ @ - 971 , 6 + 989 , 1019 @ @ 
 + @ @ - 971 , 6 + 989 , 1028 @ @ 
 return Block . EnumOffsetType . NONE ; 
 } 
 
 @ @ - 1153 , 6 + 1153 , 15 @ @ 
 + return func _ 176221 _ a ( state , world , pos ) ; 
 + } 
 + 
 + + / * * 
 + + * Queries if this block should render in a given layer . 
 + + * ISmartBlockModel can use MinecraftForgeClient . getRenderLayer to alter their model based on layer 
 + + * / 
 + + public boolean canRenderInLayer ( EnumWorldBlockLayer layer ) 
 + + { 
 + + return func _ 180664 _ k ( ) = = layer ; 
 + + } 
 + + 
 + / / For Internal use only to capture droped items inside getDrops 
 + protected static ThreadLocal < Boolean > captureDrops = new ThreadLocal < Boolean > ( ) 
 + { 
 diff - - git a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch 
 index d223b06 . . 6b33267 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / chunk / RenderChunk . java . patch 
 @ @ - 9 , 3 + 9 , 22 @ @ 
 { 
 TileEntity tileentity = regionrendercache . func _ 175625 _ s ( new BlockPos ( mutableblockpos ) ) ; 
 
 + @ @ - 160 , 7 + 160 , 9 @ @ 
 + } 
 + } 
 + 
 + - EnumWorldBlockLayer enumworldblocklayer1 = block . func _ 180664 _ k ( ) ; 
 + + for ( EnumWorldBlockLayer enumworldblocklayer1 : EnumWorldBlockLayer . values ( ) ) { 
 + + if ( ! block . canRenderInLayer ( enumworldblocklayer1 ) ) continue ; 
 + + net . minecraftforge . client . ForgeHooksClient . setRenderLayer ( enumworldblocklayer1 ) ; 
 + int i = enumworldblocklayer1 . ordinal ( ) ; 
 + 
 + if ( block . func _ 149645 _ b ( ) ! = - 1 ) 
 + @ @ - 178 , 6 + 180 , 7 @ @ 
 + compiledchunk . func _ 178486 _ a ( enumworldblocklayer1 ) ; 
 + } 
 + } 
 + + } 
 + } 
 + 
 + EnumWorldBlockLayer [ ] aenumworldblocklayer = EnumWorldBlockLayer . values ( ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index d0126b6 . . 521ef8a 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . item . ItemStack ; 
 import net . minecraft . util . BlockPos ; 
 import net . minecraft . util . EnumChatFormatting ; 
 + import net . minecraft . util . EnumWorldBlockLayer ; 
 import net . minecraft . util . IRegistry ; 
 import net . minecraft . util . MovingObjectPosition ; 
 import net . minecraft . world . IBlockAccess ; 
 @ @ - 272 , 6 + 273 , 12 @ @ public class ForgeHooksClient 
 renderPass = pass ; 
 } 
 
 + static EnumWorldBlockLayer renderLayer = EnumWorldBlockLayer . SOLID ; 
 + public static void setRenderLayer ( EnumWorldBlockLayer layer ) 
 + { 
 + renderLayer = layer ; 
 + } 
 + 
 public static ModelBase getArmorModel ( EntityLivingBase entityLiving , ItemStack itemStack , int slotID , ModelBase _ default ) 
 { 
 ModelBase modelbase = itemStack . getItem ( ) . getArmorModel ( entityLiving , itemStack , slotID ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 index 2c31fef . . 39afb26 100644 
 - - - a / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 + + + b / src / main / java / net / minecraftforge / client / MinecraftForgeClient . java 
 @ @ - 12 , 6 + 12 , 7 @ @ import com . google . common . collect . Maps ; 
 
 import net . minecraft . item . Item ; 
 import net . minecraft . item . ItemStack ; 
 + import net . minecraft . util . EnumWorldBlockLayer ; 
 import net . minecraftforge . client . IItemRenderer . ItemRenderType ; 
 
 public class MinecraftForgeClient 
 @ @ - 46 , 6 + 47 , 11 @ @ public class MinecraftForgeClient 
 return ForgeHooksClient . renderPass ; 
 } 
 
 + public static EnumWorldBlockLayer getRenderLayer ( ) 
 + { 
 + return ForgeHooksClient . renderLayer ; 
 + } 
 + 
 private static BitSet stencilBits = new BitSet ( 8 ) ; 
 static 
 {
