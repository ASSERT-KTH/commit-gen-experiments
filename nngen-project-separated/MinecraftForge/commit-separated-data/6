BLEU SCORE: 0.03057230827292727

TEST MSG: Added more Constants
GENERATED MSG: [ 1 . 13 . x ] Fire InputEvents

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java b / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java <nl> index 7138498 . . 6d31021 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java <nl> + + + b / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java <nl> @ @ - 176 , 11 + 176 , 13 @ @ public class BlockSnapshot <nl> IBlockState current = getCurrentBlock ( ) ; <nl> IBlockState replaced = getReplacedBlock ( ) ; <nl> <nl> + int flags = notifyNeighbors ? Constants . BlockFlags . DEFAULT : Constants . BlockFlags . SEND _ TO _ CLIENTS ; <nl> + <nl> if ( current ! = replaced ) <nl> { <nl> if ( force ) <nl> { <nl> - world . setBlockState ( pos , replaced , notifyNeighbors ? 3 : 2 ) ; <nl> + world . setBlockState ( pos , replaced , flags ) ; <nl> } <nl> else <nl> { <nl> @ @ - 188 , 8 + 190 , 8 @ @ public class BlockSnapshot <nl> } <nl> } <nl> <nl> - world . setBlockState ( pos , replaced , notifyNeighbors ? 3 : 2 ) ; <nl> - world . notifyBlockUpdate ( pos , current , replaced , notifyNeighbors ? 3 : 2 ) ; <nl> + world . setBlockState ( pos , replaced , flags ) ; <nl> + world . notifyBlockUpdate ( pos , current , replaced , flags ) ; <nl> <nl> TileEntity te = null ; <nl> if ( getNbt ( ) ! = null ) <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / Constants . java b / src / main / java / net / minecraftforge / common / util / Constants . java <nl> index 7d6c40b . . c66197d 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / util / Constants . java <nl> + + + b / src / main / java / net / minecraftforge / common / util / Constants . java <nl> @ @ - 19 , 6 + 19 , 9 @ @ <nl> <nl> package net . minecraftforge . common . util ; <nl> <nl> + import net . minecraft . block . Block ; <nl> + import net . minecraft . entity . ai . attributes . ModifiableAttributeInstance ; <nl> + <nl> / * * <nl> * A class containing constants for magic numbers used in the minecraft codebase . <nl> * Everything here should be checked each update , and have a comment relating to where to check it . <nl> @ @ - 26 , 9 + 29 , 9 @ @ package net . minecraftforge . common . util ; <nl> public class Constants <nl> { <nl> / * * <nl> - * NBT Tag type IDS , used when storing the nbt to disc , Should align with NBTBase . getId , <nl> + * NBT Tag type IDS , used when storing the nbt to disc , Should align with NBTBase . getId , <nl> * table used in NBTBase . func _ 150283 _ g <nl> - * <nl> + * <nl> * Main use is checking tag type in NBTTagCompound . contains ( String , int ) <nl> * <nl> * / <nl> @ @ - 49 , 4 + 52 , 170 @ @ public class Constants <nl> public static final int TAG _ LONG _ ARRAY = 12 ; <nl> public static final int TAG _ ANY _ NUMERIC = 99 ; <nl> } <nl> + <nl> + / * * <nl> + * The world event IDS , used when calling { @ link net . minecraft . world . World # playEvent ( net . minecraft . entity . player . EntityPlayer , int , net . minecraft . util . math . BlockPos , int ) } . < br > <nl> + * Can be found from { @ link net . minecraft . client . renderer . RenderGlobal # playEvent } < br > <nl> + * Some of the events use the { @ code data } parameter . If this is the case , an explanation of what { @ code data } does is also provided <nl> + * / <nl> + public static class WorldEvents { <nl> + public static final int DISPENSER _ DISPENSE _ SOUND = 1000 ; <nl> + public static final int DISPENSER _ FAIL _ SOUND = 1001 ; <nl> + / * * <nl> + * Like DISPENSER _ DISPENSE _ SOUND , but for items that are fired ( arrows , eggs , snowballs ) <nl> + * / <nl> + public static final int DISPENSER _ LAUNCH _ SOUND = 1002 ; <nl> + public static final int ENDEREYE _ LAUNCH _ SOUND = 1003 ; <nl> + public static final int FIREWORK _ SHOOT _ SOUND = 1004 ; <nl> + public static final int IRON _ DOOR _ OPEN _ SOUND = 1005 ; <nl> + public static final int WOODEN _ DOOR _ OPEN _ SOUND = 1006 ; <nl> + public static final int WOODEN _ TRAPDOOR _ OPEN _ SOUND = 1007 ; <nl> + public static final int FENCE _ GATE _ OPEN _ SOUND = 1008 ; <nl> + public static final int FIRE _ EXTINGUISH _ SOUND = 1009 ; <nl> + / * * <nl> + * { @ code data } is the item ID of the record you want to play <nl> + * / <nl> + public static final int PLAY _ RECORD _ SOUND = 1010 ; <nl> + public static final int IRON _ DOOR _ CLOSE _ SOUND = 1011 ; <nl> + public static final int WOODEN _ DOOR _ CLOSE _ SOUND = 1012 ; <nl> + public static final int WOODEN _ TRAPDOOR _ CLOSE _ SOUND = 1013 ; <nl> + public static final int FENCE _ GATE _ CLOSE _ SOUND = 1014 ; <nl> + public static final int GHAST _ WARN _ SOUND = 1015 ; <nl> + public static final int GHAST _ SHOOT _ SOUND = 1016 ; <nl> + public static final int ENDERDRAGON _ SHOOT _ SOUND = 1017 ; <nl> + public static final int BLAZE _ SHOOT _ SOUND = 1018 ; <nl> + public static final int ZOMBIE _ ATTACK _ DOOR _ WOOD _ SOUND = 1019 ; <nl> + public static final int ZOMBIE _ ATTACK _ DOOR _ IRON _ SOUND = 1020 ; <nl> + public static final int ZOMBIE _ BREAK _ DOOR _ WOOD _ SOUND = 1021 ; <nl> + public static final int WITHER _ BREAK _ BLOCK _ SOUND = 1022 ; <nl> + public static final int WITHER _ BREAK _ BLOCK = 1023 ; <nl> + public static final int WITHER _ SHOOT _ SOUND = 1024 ; <nl> + public static final int BAT _ TAKEOFF _ SOUND = 1025 ; <nl> + public static final int ZOMBIE _ INFECT _ SOUND = 1026 ; <nl> + public static final int ZOMBIE _ VILLAGER _ CONVERTED _ SOUND = 1027 ; <nl> + public static final int ANVIL _ DESTROYED _ SOUND = 1029 ; <nl> + public static final int ANVIL _ USE _ SOUND = 1030 ; <nl> + public static final int ANVIL _ LAND _ SOUND = 1031 ; <nl> + public static final int PORTAL _ TRAVEL _ SOUND = 1032 ; <nl> + public static final int CHORUS _ FLOWER _ GROW _ SOUND = 1033 ; <nl> + public static final int CHORUS _ FLOWER _ DEATH _ SOUND = 1034 ; <nl> + public static final int BREWING _ STAND _ BREW _ SOUND = 1035 ; <nl> + public static final int IRON _ TRAPDOOR _ CLOSE _ SOUND = 1036 ; <nl> + public static final int IRON _ TRAPDOOR _ OPEN _ SOUND = 1037 ; <nl> + / * * <nl> + * { @ code data } is the direction of the smoke , as a grid around the dispenser as follows ( with 4 being the position of the dispenser ) : <nl> + * < pre > <nl> + * N <nl> + * 0 | 1 | 2 <nl> + * - - - - - - - - - - <nl> + * W 3 | 4 | 5 E <nl> + * - - - - - - - - - - <nl> + * 6 | 7 | 8 <nl> + * S <nl> + * < / pre > <nl> + * Setting the { @ code data } to 4 will mean the particles won ' t spawn <nl> + * / <nl> + public static final int DISPENSER _ SMOKE = 2000 ; <nl> + <nl> + / * * <nl> + * { @ code data } is the { @ link net . minecraft . block . Block # getStateId state id } of the block broken <nl> + * / <nl> + public static final int BREAK _ BLOCK _ EFFECTS = 2001 ; <nl> + / * * <nl> + * { @ code data } is the rgb color int that should be used for the potion particles <nl> + * / <nl> + public static final int SPLASH _ POTION _ EFFECT = 2002 ; <nl> + public static final int ENDER _ EYE _ SHATTER = 2003 ; <nl> + public static final int MOB _ SPAWNER _ PARTICLES = 2004 ; <nl> + / * * <nl> + * { @ code data } is the amount of particles to spawn . If { @ code data } is 0 then there will be 15 particles spawned <nl> + * / <nl> + public static final int BONEMEAL _ PARTICLES = 2005 ; <nl> + public static final int DRAGON _ FIREBALL _ HIT = 2006 ; <nl> + / * * <nl> + * { @ code data } is the rgb color int that should be used for the potion particles <nl> + * / <nl> + public static final int LINGERING _ POTION _ EFFECT = 2007 ; <nl> + public static final int GATEWAY _ SPAWN _ EFFECTS = 3000 ; <nl> + public static final int ENDERMAN _ GROWL _ SOUND = 3001 ; <nl> + } <nl> + <nl> + <nl> + / * * <nl> + * The flags used when calling { @ link net . minecraft . world . World # setBlockState } < br > <nl> + * Can be found from { @ link net . minecraft . world . World # markAndNotifyBlock } and { @ link net . minecraft . client . renderer . WorldRenderer # notifyBlockUpdate } < br > <nl> + * Flags can be combined with bitwise OR <nl> + * / <nl> + public static class BlockFlags { <nl> + / * * <nl> + * Calls { @ link Block # neighborChanged ( net . minecraft . block . state . IBlockState , net . minecraft . world . World , net . minecraft . util . math . BlockPos , Block , net . minecraft . util . math . BlockPos ) neighborChanged } on surrounding blocks <nl> + * / <nl> + public static final int NOTIFY _ NEIGHBORS = 0b00001 ; <nl> + / * * <nl> + * Sends the update to the client <nl> + * / <nl> + public static final int SEND _ TO _ CLIENTS = 0b00010 ; <nl> + / * * <nl> + * Stops the blocks from being marked for a render update <nl> + * / <nl> + public static final int NO _ RERENDER = 0b00100 ; <nl> + / * * <nl> + * Makes the block be re - rendered immediately , on the main thread . <nl> + * If NO _ RERENDER is set , then this will be ignored <nl> + * / <nl> + public static final int RERENDER _ MAIN _ THREAD = 0b01000 ; <nl> + / * * <nl> + * Disables observers from seeing this update <nl> + * / <nl> + public static final int NO _ OBSERVERS = 0b10000 ; <nl> + <nl> + public static final int DEFAULT = NOTIFY _ NEIGHBORS | SEND _ TO _ CLIENTS ; <nl> + public static final int DEFAULT _ AND _ RERENDER = DEFAULT | RERENDER _ MAIN _ THREAD ; <nl> + } <nl> + <nl> + / * * <nl> + * The mutex bits used for AI tasks { @ link net . minecraft . entity . ai . EntityAIBase # setMutexBits ( int ) } <nl> + * Bits can be combined with bitwise OR <nl> + * / <nl> + public static class AiMutexBits { <nl> + public static final int MOVE = 0b001 ; <nl> + public static final int LOOK = 0b010 ; <nl> + public static final int JUMP = 0b100 ; <nl> + } <nl> + <nl> + / * * <nl> + * The flags used for { @ link net . minecraft . entity . Entity # getFlag ( int ) } and { @ link net . minecraft . entity . Entity # setFlag ( int , boolean ) } } < br > <nl> + * Can be found by searching for the usages of getFlag <nl> + * / <nl> + public static class EntityFlags { <nl> + public static final int BURNING = 0 ; <nl> + public static final int SNEAKING = 1 ; <nl> + public static final int SPRINTING = 3 ; <nl> + public static final int INVISIBLE = 5 ; <nl> + public static final int GLOWING = 6 ; <nl> + public static final int ELYTRA _ FLYING = 7 ; <nl> + } <nl> + <nl> + / * * <nl> + * The operation used for Attribute modifier operations , { @ link net . minecraft . entity . ai . attributes . AttributeModifier # AttributeModifier ( String , double , int ) } < br > <nl> + * Can be found at { @ link ModifiableAttributeInstance # computeValue ( ) } < br > <nl> + * The total value starts with the base value . < br > <nl> + * Order of operations are { @ link # ADD } , { @ link # ADD _ MULTIPLE } , { @ link # MULTIPLY } <nl> + * @ see < a href = " https : / / minecraft . gamepedia . com / Attribute # Operations " > Minecraft Wiki < / a > <nl> + * / <nl> + public static class AttributeModifierOperation { <nl> + / * * <nl> + * The modifier value is added onto the total value <nl> + * / <nl> + public static final int ADD = 0 ; <nl> + / * * <nl> + * The modifier value is multiplied by the original base value then added onto the total value <nl> + * / <nl> + public static final int ADD _ MULTIPLE = 1 ; <nl> + / * * <nl> + * The total value is multiplied by 1 + the modifier value <nl> + * / <nl> + public static final int MULTIPLY = 2 ; <nl> + } <nl> + <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockLiquidWrapper . java b / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockLiquidWrapper . java <nl> index 2af4dbd . . 5412d8d 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockLiquidWrapper . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockLiquidWrapper . java <nl> @ @ - 30 , 6 + 30 , 7 @ @ import net . minecraft . item . ItemBucket ; <nl> import net . minecraft . util . EnumHand ; <nl> import net . minecraft . util . math . BlockPos ; <nl> import net . minecraft . world . World ; <nl> + import net . minecraftforge . common . util . Constants ; <nl> import net . minecraftforge . fluids . Fluid ; <nl> import net . minecraftforge . fluids . FluidRegistry ; <nl> import net . minecraftforge . fluids . FluidStack ; <nl> @ @ - 102 , 7 + 103 , 7 @ @ public class BlockLiquidWrapper implements IFluidHandler <nl> { <nl> if ( doDrain ) <nl> { <nl> - world . setBlockState ( blockPos , Blocks . AIR . getDefaultState ( ) , 11 ) ; <nl> + world . setBlockState ( blockPos , Blocks . AIR . getDefaultState ( ) , Constants . BlockFlags . DEFAULT _ AND _ RERENDER ) ; <nl> } <nl> return containedStack ; <nl> } <nl> @ @ - 128 , 7 + 129 , 7 @ @ public class BlockLiquidWrapper implements IFluidHandler <nl> { <nl> if ( doDrain ) <nl> { <nl> - world . setBlockState ( blockPos , Blocks . AIR . getDefaultState ( ) , 11 ) ; <nl> + world . setBlockState ( blockPos , Blocks . AIR . getDefaultState ( ) , Constants . BlockFlags . DEFAULT _ AND _ RERENDER ) ; <nl> } <nl> return containedStack ; <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockWrapper . java b / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockWrapper . java <nl> index 0d29ed6 . . 5f6f50b 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockWrapper . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockWrapper . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ package net . minecraftforge . fluids . capability . wrappers ; <nl> import net . minecraft . block . Block ; <nl> import net . minecraft . util . math . BlockPos ; <nl> import net . minecraft . world . World ; <nl> + import net . minecraftforge . common . util . Constants ; <nl> import net . minecraftforge . fluids . Fluid ; <nl> import net . minecraftforge . fluids . FluidStack ; <nl> import net . minecraftforge . fluids . FluidUtil ; <nl> @ @ - 56 , 7 + 57 , 7 @ @ public class BlockWrapper extends VoidFluidHandler <nl> if ( doFill ) <nl> { <nl> FluidUtil . destroyBlockOnFluidPlacement ( world , blockPos ) ; <nl> - world . setBlockState ( blockPos , block . getDefaultState ( ) , 11 ) ; <nl> + world . setBlockState ( blockPos , block . getDefaultState ( ) , Constants . BlockFlags . DEFAULT _ AND _ RERENDER ) ; <nl> } <nl> return Fluid . BUCKET _ VOLUME ; <nl> }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch b / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch <nl> index 7bce8fd . . 8ab9e8b 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch <nl> @ @ - 36 , 6 + 36 , 15 @ @ <nl> } <nl> <nl> } , " keyPressed event handler " , iguieventlistener . getClass ( ) . getCanonicalName ( ) ) ; <nl> + @ @ - 341 , 7 + 348 , 7 @ @ <nl> + } <nl> + } <nl> + } <nl> + - <nl> + + net . minecraftforge . client . ForgeHooksClient . fireKeyInput ( p _ 197961 _ 3 _ , p _ 197961 _ 4 _ , p _ 197961 _ 5 _ , p _ 197961 _ 6 _ ) ; <nl> + } <nl> + } <nl> + <nl> @ @ - 351 , 12 + 358 , 16 @ @ <nl> if ( iguieventlistener ! = null ) { <nl> if ( Character . charCount ( p _ 197963 _ 3 _ ) = = 1 ) { <nl> diff - - git a / patches / minecraft / net / minecraft / client / MouseHelper . java . patch b / patches / minecraft / net / minecraft / client / MouseHelper . java . patch <nl> index 83522d3 . . 78581d4 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / MouseHelper . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / MouseHelper . java . patch <nl> @ @ - 18 , 6 + 18 , 15 @ @ <nl> } , " mouseReleased event handler " , this . field _ 198036 _ a . field _ 71462 _ r . getClass ( ) . getCanonicalName ( ) ) ; <nl> } <nl> } <nl> + @ @ - 103 , 7 + 107 , 7 @ @ <nl> + } <nl> + } <nl> + } <nl> + - <nl> + + net . minecraftforge . client . ForgeHooksClient . fireMouseInput ( p _ 198023 _ 3 _ , p _ 198023 _ 4 _ , p _ 198023 _ 5 _ ) ; <nl> + } <nl> + } <nl> + <nl> @ @ - 111 , 7 + 115 , 9 @ @ <nl> if ( p _ 198020 _ 1 _ = = Minecraft . func _ 71410 _ x ( ) . field _ 195558 _ d . func _ 198092 _ i ( ) ) { <nl> double d0 = p _ 198020 _ 5 _ * this . field _ 198036 _ a . field _ 71474 _ y . field _ 208033 _ V ; <nl> diff - - git a / patches _ old _ unknown / Minecraft . java . patch b / patches _ old _ unknown / Minecraft . java . patch <nl> index 7a9fad1 . . 48b53fd 100644 <nl> - - - a / patches _ old _ unknown / Minecraft . java . patch <nl> + + + b / patches _ old _ unknown / Minecraft . java . patch <nl> @ @ - 18 , 14 + 18 , 6 @ @ <nl> Display . setVSyncEnabled ( this . field _ 71474 _ y . field _ 74352 _ v ) ; <nl> this . func _ 175601 _ h ( ) ; <nl> } <nl> - @ @ - 1982 , 6 + 2013 , 7 @ @ <nl> - } <nl> - } <nl> - } <nl> - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . fireKeyInput ( ) ; <nl> - } <nl> - <nl> - this . func _ 184117 _ aA ( ) ; <nl> @ @ - 2239 , 6 + 2271 , 8 @ @ <nl> { <nl> while ( Mouse . next ( ) ) <nl> @ @ - 35 , 14 + 27 , 6 @ @ <nl> int i = Mouse . getEventButton ( ) ; <nl> KeyBinding . func _ 74510 _ a ( i - 100 , Mouse . getEventButtonState ( ) ) ; <nl> <nl> - @ @ - 2294 , 6 + 2328 , 7 @ @ <nl> - this . field _ 71462 _ r . func _ 146274 _ d ( ) ; <nl> - } <nl> - } <nl> - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . fireMouseInput ( ) ; <nl> - } <nl> - } <nl> - <nl> @ @ - 2304 , 6 + 2339 , 7 @ @ <nl> <nl> public void func _ 71371 _ a ( String p _ 71371 _ 1 _ , String p _ 71371 _ 2 _ , @ Nullable WorldSettings p _ 71371 _ 3 _ ) <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index 057e7a9 . . 0622268 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 127 , 6 + 127 , 7 @ @ import net . minecraftforge . client . model . ModelDynBucket ; <nl> import net . minecraftforge . client . model . ModelLoader ; <nl> import net . minecraftforge . client . model . animation . Animation ; <nl> import net . minecraftforge . client . model . pipeline . QuadGatheringTransformer ; <nl> + import net . minecraftforge . client . event . InputEvent ; <nl> import net . minecraftforge . common . ForgeMod ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . common . model . IModelPart ; <nl> @ @ - 1036 , 4 + 1037 , 14 @ @ public class ForgeHooksClient <nl> LOGGER . error ( " Unable to invalidate log4j thread cache , thread fields in logs may be inaccurate " , e ) ; <nl> } <nl> } <nl> + <nl> + public static void fireMouseInput ( int button , int action , int mods ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . post ( new InputEvent . MouseInputEvent ( button , action , mods ) ) ; <nl> + } <nl> + <nl> + public static void fireKeyInput ( int key , int scanCode , int action , int modifiers ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . post ( new InputEvent . KeyInputEvent ( key , scanCode , action , modifiers ) ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / event / InputEvent . java b / src / main / java / net / minecraftforge / client / event / InputEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 54bce01 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / event / InputEvent . java <nl> @ @ - 0 , 0 + 1 , 119 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 - 2019 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . client . event ; <nl> + <nl> + import net . minecraft . client . util . InputMappings ; <nl> + import net . minecraftforge . eventbus . api . Event ; <nl> + <nl> + import org . lwjgl . glfw . GLFW ; <nl> + <nl> + public class InputEvent extends Event <nl> + { <nl> + / * * <nl> + * This event fires when a mouse button is pressed . <nl> + * / <nl> + public static class MouseInputEvent extends InputEvent <nl> + { <nl> + private final int button ; <nl> + private final int action ; <nl> + private final int mods ; <nl> + public MouseInputEvent ( int button , int action , int mods ) <nl> + { <nl> + this . button = button ; <nl> + this . action = action ; <nl> + this . mods = mods ; <nl> + } <nl> + <nl> + public int getButton ( ) <nl> + { <nl> + return this . button ; <nl> + } <nl> + <nl> + public int getAction ( ) <nl> + { <nl> + return this . action ; <nl> + } <nl> + <nl> + public int getMods ( ) <nl> + { <nl> + return this . mods ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * This event fires when keyboard input is detected . <nl> + * / <nl> + public static class KeyInputEvent extends InputEvent <nl> + { <nl> + private final int key ; <nl> + private final int scanCode ; <nl> + private final int action ; <nl> + private final int modifiers ; <nl> + public KeyInputEvent ( int key , int scanCode , int action , int modifiers ) <nl> + { <nl> + this . key = key ; <nl> + this . scanCode = scanCode ; <nl> + this . action = action ; <nl> + this . modifiers = modifiers ; <nl> + } <nl> + <nl> + / * * <nl> + * The keyboard key that was pressed or released <nl> + * https : / / www . glfw . org / docs / latest / group _ _ keys . html <nl> + * <nl> + * @ see GLFW key constants starting with " GLFW _ KEY _ " <nl> + * / <nl> + public int getKey ( ) <nl> + { <nl> + return this . key ; <nl> + } <nl> + <nl> + / * * <nl> + * Platform - specific scan code . <nl> + * Used for { @ link InputMappings # getInputByCode ( int , int ) } <nl> + * <nl> + * The scan code is unique for every key , regardless of whether it has a key code . <nl> + * Scan codes are platform - specific but consistent over time , so keys will have different scan codes depending <nl> + * on the platform but they are safe to save to disk as custom key bindings . <nl> + * / <nl> + public int getScanCode ( ) <nl> + { <nl> + return this . scanCode ; <nl> + } <nl> + <nl> + public int getAction ( ) <nl> + { <nl> + return this . action ; <nl> + } <nl> + <nl> + / * * <nl> + * Bit field representing the modifier keys pressed . <nl> + * <nl> + * @ see GLFW # GLFW _ MOD _ SHIFT <nl> + * @ see GLFW # GLFW _ MOD _ CONTROL <nl> + * @ see GLFW # GLFW _ MOD _ ALT <nl> + * @ see GLFW # GLFW _ MOD _ SUPER <nl> + * / <nl> + public int getModifiers ( ) <nl> + { <nl> + return this . modifiers ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / gameevent / InputEvent . java b / src / main / java / net / minecraftforge / fml / common / gameevent / InputEvent . java <nl> deleted file mode 100644 <nl> index 9be287e . . 0000000 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / gameevent / InputEvent . java <nl> + + + / dev / null <nl> @ @ - 1 , 27 + 0 , 0 @ @ <nl> - / * <nl> - * Minecraft Forge <nl> - * Copyright ( c ) 2016 - 2019 . <nl> - * <nl> - * This library is free software ; you can redistribute it and / or <nl> - * modify it under the terms of the GNU Lesser General Public <nl> - * License as published by the Free Software Foundation version 2 . 1 <nl> - * of the License . <nl> - * <nl> - * This library is distributed in the hope that it will be useful , <nl> - * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> - * Lesser General Public License for more details . <nl> - * <nl> - * You should have received a copy of the GNU Lesser General Public <nl> - * License along with this library ; if not , write to the Free Software <nl> - * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> - * / <nl> - <nl> - package net . minecraftforge . fml . common . gameevent ; <nl> - <nl> - import net . minecraftforge . eventbus . api . Event ; <nl> - <nl> - public class InputEvent extends Event { <nl> - public static class MouseInputEvent extends InputEvent { } <nl> - public static class KeyInputEvent extends InputEvent { } <nl> - } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java b / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java <nl> index 6f063cb . . af6848d 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java <nl> + + + b / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java <nl> @ @ - 28 , 22 + 28 , 11 @ @ import net . minecraft . world . dimension . DimensionType ; <nl> import net . minecraftforge . client . model . animation . Animation ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . fml . LogicalSide ; <nl> - import net . minecraftforge . fml . common . gameevent . InputEvent ; <nl> import net . minecraftforge . fml . common . gameevent . PlayerEvent ; <nl> import net . minecraftforge . fml . common . gameevent . TickEvent ; <nl> <nl> public class BasicEventHooks <nl> { <nl> - public static void fireMouseInput ( ) <nl> - { <nl> - MinecraftForge . EVENT _ BUS . post ( new InputEvent . MouseInputEvent ( ) ) ; <nl> - } <nl> - <nl> - public static void fireKeyInput ( ) <nl> - { <nl> - MinecraftForge . EVENT _ BUS . post ( new InputEvent . KeyInputEvent ( ) ) ; <nl> - } <nl> - <nl> public static void firePlayerChangedDimensionEvent ( EntityPlayer player , DimensionType fromDim , DimensionType toDim ) <nl> { <nl> MinecraftForge . EVENT _ BUS . post ( new PlayerEvent . PlayerChangedDimensionEvent ( player , fromDim , toDim ) ) ;

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java b / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java 
 index 7138498 . . 6d31021 100644 
 - - - a / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java 
 + + + b / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java 
 @ @ - 176 , 11 + 176 , 13 @ @ public class BlockSnapshot 
 IBlockState current = getCurrentBlock ( ) ; 
 IBlockState replaced = getReplacedBlock ( ) ; 
 
 + int flags = notifyNeighbors ? Constants . BlockFlags . DEFAULT : Constants . BlockFlags . SEND _ TO _ CLIENTS ; 
 + 
 if ( current ! = replaced ) 
 { 
 if ( force ) 
 { 
 - world . setBlockState ( pos , replaced , notifyNeighbors ? 3 : 2 ) ; 
 + world . setBlockState ( pos , replaced , flags ) ; 
 } 
 else 
 { 
 @ @ - 188 , 8 + 190 , 8 @ @ public class BlockSnapshot 
 } 
 } 
 
 - world . setBlockState ( pos , replaced , notifyNeighbors ? 3 : 2 ) ; 
 - world . notifyBlockUpdate ( pos , current , replaced , notifyNeighbors ? 3 : 2 ) ; 
 + world . setBlockState ( pos , replaced , flags ) ; 
 + world . notifyBlockUpdate ( pos , current , replaced , flags ) ; 
 
 TileEntity te = null ; 
 if ( getNbt ( ) ! = null ) 
 diff - - git a / src / main / java / net / minecraftforge / common / util / Constants . java b / src / main / java / net / minecraftforge / common / util / Constants . java 
 index 7d6c40b . . c66197d 100644 
 - - - a / src / main / java / net / minecraftforge / common / util / Constants . java 
 + + + b / src / main / java / net / minecraftforge / common / util / Constants . java 
 @ @ - 19 , 6 + 19 , 9 @ @ 
 
 package net . minecraftforge . common . util ; 
 
 + import net . minecraft . block . Block ; 
 + import net . minecraft . entity . ai . attributes . ModifiableAttributeInstance ; 
 + 
 / * * 
 * A class containing constants for magic numbers used in the minecraft codebase . 
 * Everything here should be checked each update , and have a comment relating to where to check it . 
 @ @ - 26 , 9 + 29 , 9 @ @ package net . minecraftforge . common . util ; 
 public class Constants 
 { 
 / * * 
 - * NBT Tag type IDS , used when storing the nbt to disc , Should align with NBTBase . getId , 
 + * NBT Tag type IDS , used when storing the nbt to disc , Should align with NBTBase . getId , 
 * table used in NBTBase . func _ 150283 _ g 
 - * 
 + * 
 * Main use is checking tag type in NBTTagCompound . contains ( String , int ) 
 * 
 * / 
 @ @ - 49 , 4 + 52 , 170 @ @ public class Constants 
 public static final int TAG _ LONG _ ARRAY = 12 ; 
 public static final int TAG _ ANY _ NUMERIC = 99 ; 
 } 
 + 
 + / * * 
 + * The world event IDS , used when calling { @ link net . minecraft . world . World # playEvent ( net . minecraft . entity . player . EntityPlayer , int , net . minecraft . util . math . BlockPos , int ) } . < br > 
 + * Can be found from { @ link net . minecraft . client . renderer . RenderGlobal # playEvent } < br > 
 + * Some of the events use the { @ code data } parameter . If this is the case , an explanation of what { @ code data } does is also provided 
 + * / 
 + public static class WorldEvents { 
 + public static final int DISPENSER _ DISPENSE _ SOUND = 1000 ; 
 + public static final int DISPENSER _ FAIL _ SOUND = 1001 ; 
 + / * * 
 + * Like DISPENSER _ DISPENSE _ SOUND , but for items that are fired ( arrows , eggs , snowballs ) 
 + * / 
 + public static final int DISPENSER _ LAUNCH _ SOUND = 1002 ; 
 + public static final int ENDEREYE _ LAUNCH _ SOUND = 1003 ; 
 + public static final int FIREWORK _ SHOOT _ SOUND = 1004 ; 
 + public static final int IRON _ DOOR _ OPEN _ SOUND = 1005 ; 
 + public static final int WOODEN _ DOOR _ OPEN _ SOUND = 1006 ; 
 + public static final int WOODEN _ TRAPDOOR _ OPEN _ SOUND = 1007 ; 
 + public static final int FENCE _ GATE _ OPEN _ SOUND = 1008 ; 
 + public static final int FIRE _ EXTINGUISH _ SOUND = 1009 ; 
 + / * * 
 + * { @ code data } is the item ID of the record you want to play 
 + * / 
 + public static final int PLAY _ RECORD _ SOUND = 1010 ; 
 + public static final int IRON _ DOOR _ CLOSE _ SOUND = 1011 ; 
 + public static final int WOODEN _ DOOR _ CLOSE _ SOUND = 1012 ; 
 + public static final int WOODEN _ TRAPDOOR _ CLOSE _ SOUND = 1013 ; 
 + public static final int FENCE _ GATE _ CLOSE _ SOUND = 1014 ; 
 + public static final int GHAST _ WARN _ SOUND = 1015 ; 
 + public static final int GHAST _ SHOOT _ SOUND = 1016 ; 
 + public static final int ENDERDRAGON _ SHOOT _ SOUND = 1017 ; 
 + public static final int BLAZE _ SHOOT _ SOUND = 1018 ; 
 + public static final int ZOMBIE _ ATTACK _ DOOR _ WOOD _ SOUND = 1019 ; 
 + public static final int ZOMBIE _ ATTACK _ DOOR _ IRON _ SOUND = 1020 ; 
 + public static final int ZOMBIE _ BREAK _ DOOR _ WOOD _ SOUND = 1021 ; 
 + public static final int WITHER _ BREAK _ BLOCK _ SOUND = 1022 ; 
 + public static final int WITHER _ BREAK _ BLOCK = 1023 ; 
 + public static final int WITHER _ SHOOT _ SOUND = 1024 ; 
 + public static final int BAT _ TAKEOFF _ SOUND = 1025 ; 
 + public static final int ZOMBIE _ INFECT _ SOUND = 1026 ; 
 + public static final int ZOMBIE _ VILLAGER _ CONVERTED _ SOUND = 1027 ; 
 + public static final int ANVIL _ DESTROYED _ SOUND = 1029 ; 
 + public static final int ANVIL _ USE _ SOUND = 1030 ; 
 + public static final int ANVIL _ LAND _ SOUND = 1031 ; 
 + public static final int PORTAL _ TRAVEL _ SOUND = 1032 ; 
 + public static final int CHORUS _ FLOWER _ GROW _ SOUND = 1033 ; 
 + public static final int CHORUS _ FLOWER _ DEATH _ SOUND = 1034 ; 
 + public static final int BREWING _ STAND _ BREW _ SOUND = 1035 ; 
 + public static final int IRON _ TRAPDOOR _ CLOSE _ SOUND = 1036 ; 
 + public static final int IRON _ TRAPDOOR _ OPEN _ SOUND = 1037 ; 
 + / * * 
 + * { @ code data } is the direction of the smoke , as a grid around the dispenser as follows ( with 4 being the position of the dispenser ) : 
 + * < pre > 
 + * N 
 + * 0 | 1 | 2 
 + * - - - - - - - - - - 
 + * W 3 | 4 | 5 E 
 + * - - - - - - - - - - 
 + * 6 | 7 | 8 
 + * S 
 + * < / pre > 
 + * Setting the { @ code data } to 4 will mean the particles won ' t spawn 
 + * / 
 + public static final int DISPENSER _ SMOKE = 2000 ; 
 + 
 + / * * 
 + * { @ code data } is the { @ link net . minecraft . block . Block # getStateId state id } of the block broken 
 + * / 
 + public static final int BREAK _ BLOCK _ EFFECTS = 2001 ; 
 + / * * 
 + * { @ code data } is the rgb color int that should be used for the potion particles 
 + * / 
 + public static final int SPLASH _ POTION _ EFFECT = 2002 ; 
 + public static final int ENDER _ EYE _ SHATTER = 2003 ; 
 + public static final int MOB _ SPAWNER _ PARTICLES = 2004 ; 
 + / * * 
 + * { @ code data } is the amount of particles to spawn . If { @ code data } is 0 then there will be 15 particles spawned 
 + * / 
 + public static final int BONEMEAL _ PARTICLES = 2005 ; 
 + public static final int DRAGON _ FIREBALL _ HIT = 2006 ; 
 + / * * 
 + * { @ code data } is the rgb color int that should be used for the potion particles 
 + * / 
 + public static final int LINGERING _ POTION _ EFFECT = 2007 ; 
 + public static final int GATEWAY _ SPAWN _ EFFECTS = 3000 ; 
 + public static final int ENDERMAN _ GROWL _ SOUND = 3001 ; 
 + } 
 + 
 + 
 + / * * 
 + * The flags used when calling { @ link net . minecraft . world . World # setBlockState } < br > 
 + * Can be found from { @ link net . minecraft . world . World # markAndNotifyBlock } and { @ link net . minecraft . client . renderer . WorldRenderer # notifyBlockUpdate } < br > 
 + * Flags can be combined with bitwise OR 
 + * / 
 + public static class BlockFlags { 
 + / * * 
 + * Calls { @ link Block # neighborChanged ( net . minecraft . block . state . IBlockState , net . minecraft . world . World , net . minecraft . util . math . BlockPos , Block , net . minecraft . util . math . BlockPos ) neighborChanged } on surrounding blocks 
 + * / 
 + public static final int NOTIFY _ NEIGHBORS = 0b00001 ; 
 + / * * 
 + * Sends the update to the client 
 + * / 
 + public static final int SEND _ TO _ CLIENTS = 0b00010 ; 
 + / * * 
 + * Stops the blocks from being marked for a render update 
 + * / 
 + public static final int NO _ RERENDER = 0b00100 ; 
 + / * * 
 + * Makes the block be re - rendered immediately , on the main thread . 
 + * If NO _ RERENDER is set , then this will be ignored 
 + * / 
 + public static final int RERENDER _ MAIN _ THREAD = 0b01000 ; 
 + / * * 
 + * Disables observers from seeing this update 
 + * / 
 + public static final int NO _ OBSERVERS = 0b10000 ; 
 + 
 + public static final int DEFAULT = NOTIFY _ NEIGHBORS | SEND _ TO _ CLIENTS ; 
 + public static final int DEFAULT _ AND _ RERENDER = DEFAULT | RERENDER _ MAIN _ THREAD ; 
 + } 
 + 
 + / * * 
 + * The mutex bits used for AI tasks { @ link net . minecraft . entity . ai . EntityAIBase # setMutexBits ( int ) } 
 + * Bits can be combined with bitwise OR 
 + * / 
 + public static class AiMutexBits { 
 + public static final int MOVE = 0b001 ; 
 + public static final int LOOK = 0b010 ; 
 + public static final int JUMP = 0b100 ; 
 + } 
 + 
 + / * * 
 + * The flags used for { @ link net . minecraft . entity . Entity # getFlag ( int ) } and { @ link net . minecraft . entity . Entity # setFlag ( int , boolean ) } } < br > 
 + * Can be found by searching for the usages of getFlag 
 + * / 
 + public static class EntityFlags { 
 + public static final int BURNING = 0 ; 
 + public static final int SNEAKING = 1 ; 
 + public static final int SPRINTING = 3 ; 
 + public static final int INVISIBLE = 5 ; 
 + public static final int GLOWING = 6 ; 
 + public static final int ELYTRA _ FLYING = 7 ; 
 + } 
 + 
 + / * * 
 + * The operation used for Attribute modifier operations , { @ link net . minecraft . entity . ai . attributes . AttributeModifier # AttributeModifier ( String , double , int ) } < br > 
 + * Can be found at { @ link ModifiableAttributeInstance # computeValue ( ) } < br > 
 + * The total value starts with the base value . < br > 
 + * Order of operations are { @ link # ADD } , { @ link # ADD _ MULTIPLE } , { @ link # MULTIPLY } 
 + * @ see < a href = " https : / / minecraft . gamepedia . com / Attribute # Operations " > Minecraft Wiki < / a > 
 + * / 
 + public static class AttributeModifierOperation { 
 + / * * 
 + * The modifier value is added onto the total value 
 + * / 
 + public static final int ADD = 0 ; 
 + / * * 
 + * The modifier value is multiplied by the original base value then added onto the total value 
 + * / 
 + public static final int ADD _ MULTIPLE = 1 ; 
 + / * * 
 + * The total value is multiplied by 1 + the modifier value 
 + * / 
 + public static final int MULTIPLY = 2 ; 
 + } 
 + 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockLiquidWrapper . java b / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockLiquidWrapper . java 
 index 2af4dbd . . 5412d8d 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockLiquidWrapper . java 
 + + + b / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockLiquidWrapper . java 
 @ @ - 30 , 6 + 30 , 7 @ @ import net . minecraft . item . ItemBucket ; 
 import net . minecraft . util . EnumHand ; 
 import net . minecraft . util . math . BlockPos ; 
 import net . minecraft . world . World ; 
 + import net . minecraftforge . common . util . Constants ; 
 import net . minecraftforge . fluids . Fluid ; 
 import net . minecraftforge . fluids . FluidRegistry ; 
 import net . minecraftforge . fluids . FluidStack ; 
 @ @ - 102 , 7 + 103 , 7 @ @ public class BlockLiquidWrapper implements IFluidHandler 
 { 
 if ( doDrain ) 
 { 
 - world . setBlockState ( blockPos , Blocks . AIR . getDefaultState ( ) , 11 ) ; 
 + world . setBlockState ( blockPos , Blocks . AIR . getDefaultState ( ) , Constants . BlockFlags . DEFAULT _ AND _ RERENDER ) ; 
 } 
 return containedStack ; 
 } 
 @ @ - 128 , 7 + 129 , 7 @ @ public class BlockLiquidWrapper implements IFluidHandler 
 { 
 if ( doDrain ) 
 { 
 - world . setBlockState ( blockPos , Blocks . AIR . getDefaultState ( ) , 11 ) ; 
 + world . setBlockState ( blockPos , Blocks . AIR . getDefaultState ( ) , Constants . BlockFlags . DEFAULT _ AND _ RERENDER ) ; 
 } 
 return containedStack ; 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockWrapper . java b / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockWrapper . java 
 index 0d29ed6 . . 5f6f50b 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockWrapper . java 
 + + + b / src / main / java / net / minecraftforge / fluids / capability / wrappers / BlockWrapper . java 
 @ @ - 22 , 6 + 22 , 7 @ @ package net . minecraftforge . fluids . capability . wrappers ; 
 import net . minecraft . block . Block ; 
 import net . minecraft . util . math . BlockPos ; 
 import net . minecraft . world . World ; 
 + import net . minecraftforge . common . util . Constants ; 
 import net . minecraftforge . fluids . Fluid ; 
 import net . minecraftforge . fluids . FluidStack ; 
 import net . minecraftforge . fluids . FluidUtil ; 
 @ @ - 56 , 7 + 57 , 7 @ @ public class BlockWrapper extends VoidFluidHandler 
 if ( doFill ) 
 { 
 FluidUtil . destroyBlockOnFluidPlacement ( world , blockPos ) ; 
 - world . setBlockState ( blockPos , block . getDefaultState ( ) , 11 ) ; 
 + world . setBlockState ( blockPos , block . getDefaultState ( ) , Constants . BlockFlags . DEFAULT _ AND _ RERENDER ) ; 
 } 
 return Fluid . BUCKET _ VOLUME ; 
 }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch b / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch 
 index 7bce8fd . . 8ab9e8b 100644 
 - - - a / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / KeyboardListener . java . patch 
 @ @ - 36 , 6 + 36 , 15 @ @ 
 } 
 
 } , " keyPressed event handler " , iguieventlistener . getClass ( ) . getCanonicalName ( ) ) ; 
 + @ @ - 341 , 7 + 348 , 7 @ @ 
 + } 
 + } 
 + } 
 + - 
 + + net . minecraftforge . client . ForgeHooksClient . fireKeyInput ( p _ 197961 _ 3 _ , p _ 197961 _ 4 _ , p _ 197961 _ 5 _ , p _ 197961 _ 6 _ ) ; 
 + } 
 + } 
 + 
 @ @ - 351 , 12 + 358 , 16 @ @ 
 if ( iguieventlistener ! = null ) { 
 if ( Character . charCount ( p _ 197963 _ 3 _ ) = = 1 ) { 
 diff - - git a / patches / minecraft / net / minecraft / client / MouseHelper . java . patch b / patches / minecraft / net / minecraft / client / MouseHelper . java . patch 
 index 83522d3 . . 78581d4 100644 
 - - - a / patches / minecraft / net / minecraft / client / MouseHelper . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / MouseHelper . java . patch 
 @ @ - 18 , 6 + 18 , 15 @ @ 
 } , " mouseReleased event handler " , this . field _ 198036 _ a . field _ 71462 _ r . getClass ( ) . getCanonicalName ( ) ) ; 
 } 
 } 
 + @ @ - 103 , 7 + 107 , 7 @ @ 
 + } 
 + } 
 + } 
 + - 
 + + net . minecraftforge . client . ForgeHooksClient . fireMouseInput ( p _ 198023 _ 3 _ , p _ 198023 _ 4 _ , p _ 198023 _ 5 _ ) ; 
 + } 
 + } 
 + 
 @ @ - 111 , 7 + 115 , 9 @ @ 
 if ( p _ 198020 _ 1 _ = = Minecraft . func _ 71410 _ x ( ) . field _ 195558 _ d . func _ 198092 _ i ( ) ) { 
 double d0 = p _ 198020 _ 5 _ * this . field _ 198036 _ a . field _ 71474 _ y . field _ 208033 _ V ; 
 diff - - git a / patches _ old _ unknown / Minecraft . java . patch b / patches _ old _ unknown / Minecraft . java . patch 
 index 7a9fad1 . . 48b53fd 100644 
 - - - a / patches _ old _ unknown / Minecraft . java . patch 
 + + + b / patches _ old _ unknown / Minecraft . java . patch 
 @ @ - 18 , 14 + 18 , 6 @ @ 
 Display . setVSyncEnabled ( this . field _ 71474 _ y . field _ 74352 _ v ) ; 
 this . func _ 175601 _ h ( ) ; 
 } 
 - @ @ - 1982 , 6 + 2013 , 7 @ @ 
 - } 
 - } 
 - } 
 - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . fireKeyInput ( ) ; 
 - } 
 - 
 - this . func _ 184117 _ aA ( ) ; 
 @ @ - 2239 , 6 + 2271 , 8 @ @ 
 { 
 while ( Mouse . next ( ) ) 
 @ @ - 35 , 14 + 27 , 6 @ @ 
 int i = Mouse . getEventButton ( ) ; 
 KeyBinding . func _ 74510 _ a ( i - 100 , Mouse . getEventButtonState ( ) ) ; 
 
 - @ @ - 2294 , 6 + 2328 , 7 @ @ 
 - this . field _ 71462 _ r . func _ 146274 _ d ( ) ; 
 - } 
 - } 
 - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . fireMouseInput ( ) ; 
 - } 
 - } 
 - 
 @ @ - 2304 , 6 + 2339 , 7 @ @ 
 
 public void func _ 71371 _ a ( String p _ 71371 _ 1 _ , String p _ 71371 _ 2 _ , @ Nullable WorldSettings p _ 71371 _ 3 _ ) 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index 057e7a9 . . 0622268 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 127 , 6 + 127 , 7 @ @ import net . minecraftforge . client . model . ModelDynBucket ; 
 import net . minecraftforge . client . model . ModelLoader ; 
 import net . minecraftforge . client . model . animation . Animation ; 
 import net . minecraftforge . client . model . pipeline . QuadGatheringTransformer ; 
 + import net . minecraftforge . client . event . InputEvent ; 
 import net . minecraftforge . common . ForgeMod ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . common . model . IModelPart ; 
 @ @ - 1036 , 4 + 1037 , 14 @ @ public class ForgeHooksClient 
 LOGGER . error ( " Unable to invalidate log4j thread cache , thread fields in logs may be inaccurate " , e ) ; 
 } 
 } 
 + 
 + public static void fireMouseInput ( int button , int action , int mods ) 
 + { 
 + MinecraftForge . EVENT _ BUS . post ( new InputEvent . MouseInputEvent ( button , action , mods ) ) ; 
 + } 
 + 
 + public static void fireKeyInput ( int key , int scanCode , int action , int modifiers ) 
 + { 
 + MinecraftForge . EVENT _ BUS . post ( new InputEvent . KeyInputEvent ( key , scanCode , action , modifiers ) ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / event / InputEvent . java b / src / main / java / net / minecraftforge / client / event / InputEvent . java 
 new file mode 100644 
 index 0000000 . . 54bce01 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / event / InputEvent . java 
 @ @ - 0 , 0 + 1 , 119 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 - 2019 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . client . event ; 
 + 
 + import net . minecraft . client . util . InputMappings ; 
 + import net . minecraftforge . eventbus . api . Event ; 
 + 
 + import org . lwjgl . glfw . GLFW ; 
 + 
 + public class InputEvent extends Event 
 + { 
 + / * * 
 + * This event fires when a mouse button is pressed . 
 + * / 
 + public static class MouseInputEvent extends InputEvent 
 + { 
 + private final int button ; 
 + private final int action ; 
 + private final int mods ; 
 + public MouseInputEvent ( int button , int action , int mods ) 
 + { 
 + this . button = button ; 
 + this . action = action ; 
 + this . mods = mods ; 
 + } 
 + 
 + public int getButton ( ) 
 + { 
 + return this . button ; 
 + } 
 + 
 + public int getAction ( ) 
 + { 
 + return this . action ; 
 + } 
 + 
 + public int getMods ( ) 
 + { 
 + return this . mods ; 
 + } 
 + } 
 + 
 + / * * 
 + * This event fires when keyboard input is detected . 
 + * / 
 + public static class KeyInputEvent extends InputEvent 
 + { 
 + private final int key ; 
 + private final int scanCode ; 
 + private final int action ; 
 + private final int modifiers ; 
 + public KeyInputEvent ( int key , int scanCode , int action , int modifiers ) 
 + { 
 + this . key = key ; 
 + this . scanCode = scanCode ; 
 + this . action = action ; 
 + this . modifiers = modifiers ; 
 + } 
 + 
 + / * * 
 + * The keyboard key that was pressed or released 
 + * https : / / www . glfw . org / docs / latest / group _ _ keys . html 
 + * 
 + * @ see GLFW key constants starting with " GLFW _ KEY _ " 
 + * / 
 + public int getKey ( ) 
 + { 
 + return this . key ; 
 + } 
 + 
 + / * * 
 + * Platform - specific scan code . 
 + * Used for { @ link InputMappings # getInputByCode ( int , int ) } 
 + * 
 + * The scan code is unique for every key , regardless of whether it has a key code . 
 + * Scan codes are platform - specific but consistent over time , so keys will have different scan codes depending 
 + * on the platform but they are safe to save to disk as custom key bindings . 
 + * / 
 + public int getScanCode ( ) 
 + { 
 + return this . scanCode ; 
 + } 
 + 
 + public int getAction ( ) 
 + { 
 + return this . action ; 
 + } 
 + 
 + / * * 
 + * Bit field representing the modifier keys pressed . 
 + * 
 + * @ see GLFW # GLFW _ MOD _ SHIFT 
 + * @ see GLFW # GLFW _ MOD _ CONTROL 
 + * @ see GLFW # GLFW _ MOD _ ALT 
 + * @ see GLFW # GLFW _ MOD _ SUPER 
 + * / 
 + public int getModifiers ( ) 
 + { 
 + return this . modifiers ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / gameevent / InputEvent . java b / src / main / java / net / minecraftforge / fml / common / gameevent / InputEvent . java 
 deleted file mode 100644 
 index 9be287e . . 0000000 
 - - - a / src / main / java / net / minecraftforge / fml / common / gameevent / InputEvent . java 
 + + + / dev / null 
 @ @ - 1 , 27 + 0 , 0 @ @ 
 - / * 
 - * Minecraft Forge 
 - * Copyright ( c ) 2016 - 2019 . 
 - * 
 - * This library is free software ; you can redistribute it and / or 
 - * modify it under the terms of the GNU Lesser General Public 
 - * License as published by the Free Software Foundation version 2 . 1 
 - * of the License . 
 - * 
 - * This library is distributed in the hope that it will be useful , 
 - * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 - * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 - * Lesser General Public License for more details . 
 - * 
 - * You should have received a copy of the GNU Lesser General Public 
 - * License along with this library ; if not , write to the Free Software 
 - * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 - * / 
 - 
 - package net . minecraftforge . fml . common . gameevent ; 
 - 
 - import net . minecraftforge . eventbus . api . Event ; 
 - 
 - public class InputEvent extends Event { 
 - public static class MouseInputEvent extends InputEvent { } 
 - public static class KeyInputEvent extends InputEvent { } 
 - } 
 diff - - git a / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java b / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java 
 index 6f063cb . . af6848d 100644 
 - - - a / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java 
 + + + b / src / main / java / net / minecraftforge / fml / hooks / BasicEventHooks . java 
 @ @ - 28 , 22 + 28 , 11 @ @ import net . minecraft . world . dimension . DimensionType ; 
 import net . minecraftforge . client . model . animation . Animation ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . fml . LogicalSide ; 
 - import net . minecraftforge . fml . common . gameevent . InputEvent ; 
 import net . minecraftforge . fml . common . gameevent . PlayerEvent ; 
 import net . minecraftforge . fml . common . gameevent . TickEvent ; 
 
 public class BasicEventHooks 
 { 
 - public static void fireMouseInput ( ) 
 - { 
 - MinecraftForge . EVENT _ BUS . post ( new InputEvent . MouseInputEvent ( ) ) ; 
 - } 
 - 
 - public static void fireKeyInput ( ) 
 - { 
 - MinecraftForge . EVENT _ BUS . post ( new InputEvent . KeyInputEvent ( ) ) ; 
 - } 
 - 
 public static void firePlayerChangedDimensionEvent ( EntityPlayer player , DimensionType fromDim , DimensionType toDim ) 
 { 
 MinecraftForge . EVENT _ BUS . post ( new PlayerEvent . PlayerChangedDimensionEvent ( player , fromDim , toDim ) ) ;
