BLEU SCORE: 0.04278179264606696

TEST MSG: Add IExtensibleEnum , fix DimensionType create method
GENERATED MSG: Add missing nullability annotations to some Forge - added methods

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / enchantment / EnumEnchantmentType . java . patch b / patches / minecraft / net / minecraft / enchantment / EnumEnchantmentType . java . patch <nl> index 37bfabc . . 0232f42 100644 <nl> - - - a / patches / minecraft / net / minecraft / enchantment / EnumEnchantmentType . java . patch <nl> + + + b / patches / minecraft / net / minecraft / enchantment / EnumEnchantmentType . java . patch <nl> @ @ - 1 , 5 + 1 , 14 @ @ <nl> - - - a / net / minecraft / enchantment / EnumEnchantmentType . java <nl> + + + b / net / minecraft / enchantment / EnumEnchantmentType . java <nl> + @ @ - 13 , 7 + 13 , 7 @ @ <nl> + import net . minecraft . item . ItemTool ; <nl> + import net . minecraft . item . ItemTrident ; <nl> + <nl> + - public enum EnumEnchantmentType { <nl> + + public enum EnumEnchantmentType implements net . minecraftforge . common . IExtensibleEnum { <nl> + ALL { <nl> + public boolean func _ 77557 _ a ( Item p _ 77557 _ 1 _ ) { <nl> + for ( EnumEnchantmentType enumenchantmenttype : EnumEnchantmentType . values ( ) ) { <nl> @ @ - 90 , 5 + 90 , 16 @ @ <nl> private EnumEnchantmentType ( ) { <nl> } <nl> @ @ - 11 , 7 + 20 , 7 @ @ <nl> + } <nl> + <nl> + public static EnumEnchantmentType create ( String name , java . util . function . Predicate < Item > delegate ) { <nl> - + return null ; <nl> + + throw new IllegalStateException ( " Enum not extended " ) ; <nl> + } <nl> + <nl> + public boolean func _ 77557 _ a ( Item p _ 77557 _ 1 _ ) { <nl> diff - - git a / patches / minecraft / net / minecraft / entity / EnumCreatureType . java . patch b / patches / minecraft / net / minecraft / entity / EnumCreatureType . java . patch <nl> index fe2fb98 . . 695908b 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EnumCreatureType . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EnumCreatureType . java . patch <nl> @ @ - 1 , 11 + 1 , 20 @ @ <nl> - - - a / net / minecraft / entity / EnumCreatureType . java <nl> + + + b / net / minecraft / entity / EnumCreatureType . java <nl> + @ @ - 6 , 7 + 6 , 7 @ @ <nl> + import net . minecraft . entity . passive . EntityWaterMob ; <nl> + import net . minecraft . entity . passive . IAnimal ; <nl> + <nl> + - public enum EnumCreatureType { <nl> + + public enum EnumCreatureType implements net . minecraftforge . common . IExtensibleEnum { <nl> + MONSTER ( IMob . class , 70 , false , false ) , <nl> + CREATURE ( EntityAnimal . class , 10 , true , true ) , <nl> + AMBIENT ( EntityAmbientCreature . class , 15 , true , false ) , <nl> @ @ - 39 , 4 + 39 , 8 @ @ <nl> public boolean func _ 82705 _ e ( ) { <nl> return this . field _ 82707 _ i ; <nl> } <nl> + <nl> + public static EnumCreatureType create ( String name , Class < ? extends IAnimal > p _ i47849 _ 3 _ , int p _ i47849 _ 4 _ , boolean p _ i47849 _ 5 _ , boolean p _ i47849 _ 6 _ ) { <nl> - + return null ; <nl> + + throw new IllegalStateException ( " Enum not extended " ) ; <nl> + } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / passive / HorseArmorType . java . patch b / patches / minecraft / net / minecraft / entity / passive / HorseArmorType . java . patch <nl> index 06ce551 . . cadcab2 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / passive / HorseArmorType . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / passive / HorseArmorType . java . patch <nl> @ @ - 1 , 5 + 1 , 14 @ @ <nl> - - - a / net / minecraft / entity / passive / HorseArmorType . java <nl> + + + b / net / minecraft / entity / passive / HorseArmorType . java <nl> + @ @ - 7 , 7 + 7 , 7 @ @ <nl> + import net . minecraftforge . api . distmarker . Dist ; <nl> + import net . minecraftforge . api . distmarker . OnlyIn ; <nl> + <nl> + - public enum HorseArmorType { <nl> + + public enum HorseArmorType implements net . minecraftforge . common . IExtensibleEnum { <nl> + NONE ( 0 ) , <nl> + IRON ( 5 , " iron " , " meo " ) , <nl> + GOLD ( 7 , " gold " , " goo " ) , <nl> @ @ - 16 , 6 + 16 , 7 @ @ <nl> private final String field _ 188586 _ e ; <nl> private final String field _ 188587 _ f ; <nl> @ @ - 18 , 7 + 27 , 7 @ @ <nl> + } <nl> + <nl> + public static HorseArmorType create ( String name , int strength , String texture , String hash , Item item ) { <nl> - + return null ; <nl> + + throw new IllegalStateException ( " Enum not extended " ) ; <nl> + } <nl> + <nl> public int func _ 188579 _ a ( ) { <nl> diff - - git a / patches / minecraft / net / minecraft / item / ArmorMaterial . java . patch b / patches / minecraft / net / minecraft / item / ArmorMaterial . java . patch <nl> index d0b6c41 . . e03ab01 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / ArmorMaterial . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / ArmorMaterial . java . patch <nl> @ @ - 1 , 11 + 1 , 20 @ @ <nl> - - - a / net / minecraft / item / ArmorMaterial . java <nl> + + + b / net / minecraft / item / ArmorMaterial . java <nl> + @ @ - 10 , 7 + 10 , 7 @ @ <nl> + import net . minecraftforge . api . distmarker . Dist ; <nl> + import net . minecraftforge . api . distmarker . OnlyIn ; <nl> + <nl> + - public enum ArmorMaterial implements IArmorMaterial { <nl> + + public enum ArmorMaterial implements IArmorMaterial , net . minecraftforge . common . IExtensibleEnum { <nl> + LEATHER ( " leather " , 5 , new int [ ] { 1 , 2 , 3 , 1 } , 15 , SoundEvents . field _ 187728 _ s , 0 . 0F , ( ) - > { <nl> + return Ingredient . func _ 199804 _ a ( Items . field _ 151116 _ aA ) ; <nl> + } ) , <nl> @ @ - 77 , 4 + 77 , 8 @ @ <nl> public float func _ 200901 _ e ( ) { <nl> return this . field _ 189417 _ k ; <nl> } <nl> + <nl> + public static ArmorMaterial create ( String name , String p _ i48533 _ 3 _ , int p _ i48533 _ 4 _ , int [ ] p _ i48533 _ 5 _ , int p _ i48533 _ 6 _ , SoundEvent p _ i48533 _ 7 _ , float p _ i48533 _ 8 _ , Supplier < Ingredient > p _ i48533 _ 9 _ ) { <nl> - + return null ; <nl> + + throw new IllegalStateException ( " Enum not extended " ) ; <nl> + + } <nl> } <nl> - + } <nl> diff - - git a / patches / minecraft / net / minecraft / world / dimension / DimensionType . java . patch b / patches / minecraft / net / minecraft / world / dimension / DimensionType . java . patch <nl> index 3528251 . . 5c2a89e 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / dimension / DimensionType . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / dimension / DimensionType . java . patch <nl> @ @ - 1 , 5 + 1 , 14 @ @ <nl> - - - a / net / minecraft / world / dimension / DimensionType . java <nl> + + + b / net / minecraft / world / dimension / DimensionType . java <nl> + @ @ - 2 , 7 + 2 , 7 @ @ <nl> + <nl> + import java . util . function . Supplier ; <nl> + <nl> + - public enum DimensionType { <nl> + + public enum DimensionType implements net . minecraftforge . common . IExtensibleEnum { <nl> + OVERWORLD ( 0 , " overworld " , " " , OverworldDimension : : new ) , <nl> + NETHER ( - 1 , " the _ nether " , " _ nether " , NetherDimension : : new ) , <nl> + THE _ END ( 1 , " the _ end " , " _ end " , EndDimension : : new ) ; <nl> @ @ - 11 , 12 + 11 , 19 @ @ <nl> private final String field _ 186075 _ e ; <nl> private final String field _ 186076 _ f ; <nl> @ @ - 20 , 15 + 29 , 14 @ @ <nl> } <nl> <nl> public int func _ 186068 _ a ( ) { <nl> - @ @ - 54 , 4 + 61 , 11 @ @ <nl> + @ @ - 54 , 4 + 61 , 10 @ @ <nl> <nl> throw new IllegalArgumentException ( " Invalid dimension " + p _ 193417 _ 0 _ ) ; <nl> } <nl> + <nl> + public boolean shouldLoadSpawn ( ) { return this . shouldLoadSpawn ; } <nl> + <nl> - + public static DimensionType create ( int id , String name , String suffix , Supplier < ? extends Dimension > provider , boolean shouldLoadSpawn ) <nl> - + { <nl> - + return null ; <nl> + + public static DimensionType create ( String enumName , int id , String name , String suffix , Supplier < ? extends Dimension > provider , boolean shouldLoadSpawn ) { <nl> + + throw new IllegalStateException ( " Enum not extended " ) ; <nl> + } <nl> } <nl> diff - - git a / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java b / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java <nl> index 1ebed7d . . 92f9423 100644 <nl> - - - a / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java <nl> + + + b / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java <nl> @ @ - 20 , 6 + 20 , 8 @ @ <nl> package net . minecraftforge . common . asm ; <nl> <nl> import java . nio . file . Path ; <nl> + import java . util . List ; <nl> + import java . util . stream . Collectors ; <nl> <nl> import net . minecraftforge . fml . loading . AdvancedLogMessageAdapter ; <nl> import org . apache . logging . log4j . LogManager ; <nl> @ @ - 43 , 6 + 45 , 7 @ @ public class RuntimeEnumExtender implements ILaunchPluginService { <nl> private static final Logger LOGGER = LogManager . getLogger ( ) ; <nl> private final Type STRING = Type . getType ( String . class ) ; <nl> private final Type ENUM = Type . getType ( Enum . class ) ; <nl> + private final Type MARKER _ IFACE = Type . getType ( " Lnet / minecraftforge / common / IExtensibleEnum ; " ) ; <nl> private final Type ARRAY _ UTILS = Type . getType ( " Lorg / apache / commons / lang3 / ArrayUtils ; " ) ; / / Don ' t directly reference this to prevent class loading . <nl> private final String ADD _ DESC = Type . getMethodDescriptor ( Type . getType ( Object [ ] . class ) , Type . getType ( Object [ ] . class ) , Type . getType ( Object . class ) ) ; <nl> private final Type UNSAFE _ HACKS = Type . getType ( " Lnet / minecraftforge / fml / UnsafeHacks ; " ) ; / / Again , not direct reference to prevent class loading . <nl> @ @ - 75 , 13 + 78 , 28 @ @ public class RuntimeEnumExtender implements ILaunchPluginService { <nl> final int flags = Opcodes . ACC _ PRIVATE | Opcodes . ACC _ STATIC | Opcodes . ACC _ FINAL | Opcodes . ACC _ SYNTHETIC ; <nl> <nl> FieldNode values = classNode . fields . stream ( ) . filter ( f - > f . desc . contentEquals ( array . getDescriptor ( ) ) & & ( ( f . access & flags ) = = flags ) ) . findFirst ( ) . orElse ( null ) ; <nl> + <nl> + if ( ! classNode . interfaces . contains ( MARKER _ IFACE . getInternalName ( ) ) ) { <nl> + return classNode ; <nl> + } <nl> + <nl> / / Static methods named " create " , with first argument as a string , and returning this type <nl> - classNode . methods . stream ( ) . filter ( m - > ( ( m . access & Opcodes . ACC _ STATIC ) ! = 0 ) & & m . name . equals ( " create " ) & & Type . getReturnType ( m . desc ) . equals ( classType ) ) . forEach ( mtd - > <nl> + List < MethodNode > candidates = classNode . methods . stream ( ) <nl> + . filter ( m - > ( ( m . access & Opcodes . ACC _ STATIC ) ! = 0 ) & & m . name . equals ( " create " ) & & Type . getReturnType ( m . desc ) . equals ( classType ) ) <nl> + . collect ( Collectors . toList ( ) ) ; <nl> + <nl> + candidates . forEach ( mtd - > <nl> { <nl> Type [ ] args = Type . getArgumentTypes ( mtd . desc ) ; <nl> - if ( args . length = = 0 | | ! args [ 0 ] . equals ( STRING ) ) <nl> - return ; <nl> - <nl> + if ( args . length = = 0 | | ! args [ 0 ] . equals ( STRING ) ) { <nl> + LOGGER . fatal ( ( ) - > new AdvancedLogMessageAdapter ( sb - > { <nl> + sb . append ( " Enum has create method without String as first parameter : \ n " ) ; <nl> + sb . append ( " Enum : " + classType . getDescriptor ( ) ) . append ( " \ n " ) ; <nl> + sb . append ( " Target : " ) . append ( mtd . name + mtd . desc ) . append ( " \ n " ) ; <nl> + } ) ) ; <nl> + throw new IllegalStateException ( " Enum has create method without String as first parameter : " + mtd . name + mtd . desc ) ; <nl> + } <nl> + <nl> Type [ ] ctrArgs = new Type [ args . length + 1 ] ; <nl> ctrArgs [ 0 ] = STRING ; <nl> ctrArgs [ 1 ] = Type . INT _ TYPE ; <nl> @ @ - 95 , 7 + 113 , 8 @ @ public class RuntimeEnumExtender implements ILaunchPluginService { <nl> { <nl> LOGGER . fatal ( ( ) - > new AdvancedLogMessageAdapter ( sb - > { <nl> sb . append ( " Enum has create method with no matching constructor : \ n " ) ; <nl> - sb . append ( " Enum : " + classType . getDescriptor ( ) ) . append ( " \ n " ) ; <nl> + sb . append ( " Enum : " ) . append ( classType . getDescriptor ( ) ) . append ( " \ n " ) ; <nl> + sb . append ( " Candidate : " ) . append ( mtd . desc ) . append ( " \ n " ) ; <nl> sb . append ( " Target : " ) . append ( desc ) . append ( " \ n " ) ; <nl> classNode . methods . stream ( ) . filter ( m - > m . name . equals ( " < init > " ) ) . forEach ( m - > sb . append ( " : " ) . append ( m . desc ) . append ( " \ n " ) ) ; <nl> } ) ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / common / IExtensibleEnum . java b / src / main / java / net / minecraftforge / common / IExtensibleEnum . java <nl> new file mode 100644 <nl> index 0000000 . . 7c8b051 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / common / IExtensibleEnum . java <nl> @ @ - 0 , 0 + 1 , 25 @ @ <nl> + package net . minecraftforge . common ; <nl> + <nl> + / * * <nl> + * To be implemented on vanilla enums that should be enhanced with ASM to be <nl> + * extensible . If this is implemented on a class , the class must define a static <nl> + * method called " create " which takes a String ( enum name ) , and the rest of the <nl> + * parameters matching a constructor . <nl> + * < p > <nl> + * For example , an enum with the constructor { @ code MyEnum ( Object foo ) } would <nl> + * require the method : <nl> + * <nl> + * < pre > <nl> + * public static MyEnum create ( String name , Object foo ) <nl> + * { <nl> + * throw new IllegalStateException ( " Enum not extended " ) ; <nl> + * } <nl> + * < / pre > <nl> + * <nl> + * The method contents will be replaced with ASM at runtime . Multiple <nl> + * { @ code create } methods < strong > can < / strong > be defined as long as each <nl> + * matches a constructor . <nl> + * / <nl> + public interface IExtensibleEnum <nl> + { <nl> + } <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / block / state / BlockStateBase . java . patch b / patches / minecraft / net / minecraft / block / state / BlockStateBase . java . patch <nl> index 6460176 . . ac50e35 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / state / BlockStateBase . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / state / BlockStateBase . java . patch <nl> @ @ - 1 , 10 + 1 , 11 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / block / state / BlockStateBase . java <nl> + + + . . / src - work / minecraft / net / minecraft / block / state / BlockStateBase . java <nl> - @ @ - 73 , 4 + 73 , 9 @ @ <nl> + @ @ - 73 , 4 + 73 , 10 @ @ <nl> <nl> return stringbuilder . toString ( ) ; <nl> } <nl> + <nl> + + @ Nullable <nl> + public com . google . common . collect . ImmutableTable < IProperty < ? > , Comparable < ? > , IBlockState > getPropertyValueTable ( ) <nl> + { <nl> + return null ; <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainerCreative . java . patch b / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainerCreative . java . patch <nl> index 597f763 . . 875d189 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainerCreative . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainerCreative . java . patch <nl> @ @ - 264 , 7 + 264 , 7 @ @ <nl> } <nl> <nl> public int func _ 147056 _ g ( ) <nl> - @ @ - 1031 , 6 + 1145 , 38 @ @ <nl> + @ @ - 1031 , 6 + 1145 , 39 @ @ <nl> { <nl> return this . field _ 148332 _ b . func _ 82869 _ a ( p _ 82869 _ 1 _ ) ; <nl> } <nl> @ @ - 280 , 11 + 280 , 12 @ @ <nl> + this . field _ 148332 _ b . setBackgroundLocation ( texture ) ; <nl> + } <nl> + <nl> - + public void setBackgroundName ( String name ) <nl> + + public void setBackgroundName ( @ Nullable String name ) <nl> + { <nl> + this . field _ 148332 _ b . setBackgroundName ( name ) ; <nl> + } <nl> + <nl> + + @ Nullable <nl> + public net . minecraft . client . renderer . texture . TextureAtlasSprite getBackgroundSprite ( ) <nl> + { <nl> + return this . field _ 148332 _ b . getBackgroundSprite ( ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / entity / EntityList . java . patch b / patches / minecraft / net / minecraft / entity / EntityList . java . patch <nl> index c535780 . . 05ba260 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntityList . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityList . java . patch <nl> @ @ - 12 , 7 + 12 , 7 @ @ <nl> <nl> @ Nullable <nl> public static ResourceLocation func _ 191301 _ a ( Entity p _ 191301 _ 0 _ ) <nl> - @ @ - 121 , 37 + 119 , 52 @ @ <nl> + @ @ - 121 , 38 + 119 , 54 @ @ <nl> @ Nullable <nl> public static ResourceLocation func _ 191306 _ a ( Class < ? extends Entity > p _ 191306 _ 0 _ ) <nl> { <nl> @ @ - 63 , 16 + 63 , 18 @ @ <nl> + return entry = = null ? - 1 : net . minecraftforge . registries . GameData . getEntityRegistry ( ) . getID ( entry ) ; <nl> + } <nl> + <nl> + @ Nullable <nl> + public static Class < ? extends Entity > getClass ( ResourceLocation key ) <nl> + { <nl> + net . minecraftforge . fml . common . registry . EntityEntry entry = net . minecraftforge . fml . common . registry . ForgeRegistries . ENTITIES . getValue ( key ) ; <nl> + return entry = = null ? null : entry . getEntityClass ( ) ; <nl> + } <nl> + <nl> - @ Nullable <nl> + + @ Nullable <nl> public static Entity func _ 191304 _ a ( @ Nullable Class < ? extends Entity > p _ 191304 _ 0 _ , World p _ 191304 _ 1 _ ) <nl> { <nl> - @ @ - 163 , 6 + 176 , 8 @ @ <nl> + if ( p _ 191304 _ 0 _ = = null ) <nl> + @ @ - 163 , 6 + 177 , 8 @ @ <nl> { <nl> try <nl> { <nl> @ @ - 81 , 7 + 83 , 7 @ @ <nl> return p _ 191304 _ 0 _ . getConstructor ( World . class ) . newInstance ( p _ 191304 _ 1 _ ) ; <nl> } <nl> catch ( Exception exception ) <nl> - @ @ - 177 , 13 + 192 , 15 @ @ <nl> + @ @ - 177 , 13 + 193 , 15 @ @ <nl> @ SideOnly ( Side . CLIENT ) <nl> public static Entity func _ 75616 _ a ( int p _ 75616 _ 0 _ , World p _ 75616 _ 1 _ ) <nl> { <nl> @ @ - 99 , 7 + 101 , 7 @ @ <nl> } <nl> <nl> @ Nullable <nl> - @ @ - 198 , 7 + 215 , 16 @ @ <nl> + @ @ - 198 , 7 + 216 , 16 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 116 , 7 + 118 , 7 @ @ <nl> } <nl> <nl> return entity ; <nl> - @ @ - 206 , 7 + 232 , 7 @ @ <nl> + @ @ - 206 , 7 + 233 , 7 @ @ <nl> <nl> public static Set < ResourceLocation > func _ 180124 _ b ( ) <nl> { <nl> @ @ - 125 , 7 + 127 , 7 @ @ <nl> } <nl> <nl> public static boolean func _ 180123 _ a ( Entity p _ 180123 _ 0 _ , ResourceLocation p _ 180123 _ 1 _ ) <nl> - @ @ - 373 , 7 + 399 , 7 @ @ <nl> + @ @ - 373 , 7 + 400 , 7 @ @ <nl> func _ 191305 _ a ( " zombie _ horse " , 3232308 , 9945732 ) ; <nl> func _ 191305 _ a ( " zombie _ pigman " , 15373203 , 5009705 ) ; <nl> func _ 191305 _ a ( " zombie _ villager " , 5651507 , 7969893 ) ; <nl> @ @ - 134 , 7 + 136 , 7 @ @ <nl> } <nl> <nl> private static void func _ 191303 _ a ( int p _ 191303 _ 0 _ , String p _ 191303 _ 1 _ , Class < ? extends Entity > p _ 191303 _ 2 _ , String p _ 191303 _ 3 _ ) <nl> - @ @ - 394 , 22 + 420 , 17 @ @ <nl> + @ @ - 394 , 22 + 421 , 17 @ @ <nl> else <nl> { <nl> ResourceLocation resourcelocation = new ResourceLocation ( p _ 191303 _ 1 _ ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityMinecart . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityMinecart . java . patch <nl> index 3b14fc7 . . 4d087d7 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / item / EntityMinecart . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / item / EntityMinecart . java . patch <nl> @ @ - 254 , 7 + 254 , 7 @ @ <nl> { <nl> p _ 70108 _ 1 _ . field _ 70159 _ w * = 0 . 20000000298023224D ; <nl> p _ 70108 _ 1 _ . field _ 70179 _ y * = 0 . 20000000298023224D ; <nl> - @ @ - 1015 , 6 + 1047 , 229 @ @ <nl> + @ @ - 1015 , 6 + 1047 , 230 @ @ <nl> this . func _ 184212 _ Q ( ) . func _ 187227 _ b ( field _ 184270 _ f , Boolean . valueOf ( p _ 94096 _ 1 _ ) ) ; <nl> } <nl> <nl> @ @ - 306 , 6 + 306 , 7 @ @ <nl> + * is registered , returns null <nl> + * @ return The collision handler or null <nl> + * / <nl> + + @ Nullable <nl> + public static net . minecraftforge . common . IMinecartCollisionHandler getCollisionHandler ( ) <nl> + { <nl> + return collisionHandler ; <nl> diff - - git a / patches / minecraft / net / minecraft / inventory / Slot . java . patch b / patches / minecraft / net / minecraft / inventory / Slot . java . patch <nl> index c6296c0 . . be2b820 100644 <nl> - - - a / patches / minecraft / net / minecraft / inventory / Slot . java . patch <nl> + + + b / patches / minecraft / net / minecraft / inventory / Slot . java . patch <nl> @ @ - 9 , 7 + 9 , 7 @ @ <nl> } <nl> <nl> public ItemStack func _ 75209 _ a ( int p _ 75209 _ 1 _ ) <nl> - @ @ - 113 , 4 + 113 , 73 @ @ <nl> + @ @ - 113 , 4 + 113 , 74 @ @ <nl> { <nl> return true ; <nl> } <nl> @ @ - 42 , 11 + 42 , 12 @ @ <nl> + * Sets which icon index to use as the background image of the slot when it ' s empty . <nl> + * @ param name The icon to use , null for none <nl> + * / <nl> - + public void setBackgroundName ( String name ) <nl> + + public void setBackgroundName ( @ Nullable String name ) <nl> + { <nl> + this . backgroundName = name ; <nl> + } <nl> + <nl> + + @ Nullable <nl> + @ SideOnly ( Side . CLIENT ) <nl> + public net . minecraft . client . renderer . texture . TextureAtlasSprite getBackgroundSprite ( ) <nl> + { <nl> diff - - git a / patches / minecraft / net / minecraft / item / ItemStack . java . patch b / patches / minecraft / net / minecraft / item / ItemStack . java . patch <nl> index bc3d3d7 . . 9ecf73b 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / ItemStack . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / ItemStack . java . patch <nl> @ @ - 232 , 7 + 232 , 7 @ @ <nl> } <nl> <nl> return multimap ; <nl> - @ @ - 1130 , 4 + 1155 , 127 @ @ <nl> + @ @ - 1130 , 4 + 1155 , 128 @ @ <nl> { <nl> this . func _ 190917 _ f ( - p _ 190918 _ 1 _ ) ; <nl> } <nl> @ @ - 303 , 6 + 303 , 7 @ @ <nl> + * Internal call to get the actual item , not the delegate . <nl> + * In all other methods , FML replaces calls to this . item with the item delegate . <nl> + * / <nl> + + @ Nullable <nl> + private Item getItemRaw ( ) <nl> + { <nl> + return this . field _ 151002 _ e ; <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> index 760f505 . . 2c38614 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> @ @ - 58 , 7 + 58 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 377 , 6 + 377 , 26 @ @ <nl> + @ @ - 377 , 6 + 377 , 27 @ @ <nl> } <nl> } <nl> <nl> @ @ - 68 , 6 + 68 , 7 @ @ <nl> + <nl> + @ SuppressWarnings ( " unchecked " ) <nl> + @ Override <nl> + + @ javax . annotation . Nullable <nl> + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ javax . annotation . Nullable net . minecraft . util . EnumFacing facing ) <nl> + { <nl> + if ( facing ! = null & & capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch <nl> index f0be156 . . 09dabdc 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch <nl> @ @ - 8 , 7 + 8 , 7 @ @ <nl> } <nl> <nl> @ SuppressWarnings ( " incomplete - switch " ) <nl> - @ @ - 349 , 6 + 350 , 28 @ @ <nl> + @ @ - 349 , 6 + 350 , 29 @ @ <nl> } <nl> } <nl> <nl> @ @ - 16 , 6 + 16 , 7 @ @ <nl> + <nl> + @ SuppressWarnings ( " unchecked " ) <nl> + @ Override <nl> + + @ Nullable <nl> + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable net . minecraft . util . EnumFacing facing ) <nl> + { <nl> + if ( capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) <nl> diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch <nl> index 27cb14c . . d1b9be1 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch <nl> @ @ - 71 , 7 + 71 , 7 @ @ <nl> Item item = p _ 145952 _ 0 _ . func _ 77973 _ b ( ) ; <nl> <nl> if ( item = = Item . func _ 150898 _ a ( Blocks . field _ 150376 _ bx ) ) <nl> - @ @ - 530 , 4 + 532 , 22 @ @ <nl> + @ @ - 530 , 4 + 532 , 23 @ @ <nl> { <nl> this . field _ 145957 _ n . clear ( ) ; <nl> } <nl> @ @ - 82 , 6 + 82 , 7 @ @ <nl> + <nl> + @ SuppressWarnings ( " unchecked " ) <nl> + @ Override <nl> + + @ javax . annotation . Nullable <nl> + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ javax . annotation . Nullable net . minecraft . util . EnumFacing facing ) <nl> + { <nl> + if ( facing ! = null & & capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) <nl> diff - - git a / patches / minecraft / net / minecraft / village / Village . java . patch b / patches / minecraft / net / minecraft / village / Village . java . patch <nl> index 564e3bd . . bf5691c 100644 <nl> - - - a / patches / minecraft / net / minecraft / village / Village . java . patch <nl> + + + b / patches / minecraft / net / minecraft / village / Village . java . patch <nl> @ @ - 167 , 7 + 167 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 561 , 4 + 582 , 30 @ @ <nl> + @ @ - 561 , 4 + 582 , 31 @ @ <nl> this . field _ 75590 _ b = p _ i1674 _ 3 _ ; <nl> } <nl> } <nl> @ @ - 179 , 6 + 179 , 7 @ @ <nl> + return capabilities = = null ? false : capabilities . hasCapability ( capability , facing ) ; <nl> + } <nl> + <nl> + + @ Nullable <nl> + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable net . minecraft . util . EnumFacing facing ) <nl> + { <nl> + return capabilities = = null ? null : capabilities . getCapability ( capability , facing ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / world / WorldProvider . java . patch b / patches / minecraft / net / minecraft / world / WorldProvider . java . patch <nl> index 7520cd2 . . 538e5ff 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / WorldProvider . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / WorldProvider . java . patch <nl> @ @ - 65 , 7 + 65 , 7 @ @ <nl> } <nl> <nl> @ SideOnly ( Side . CLIENT ) <nl> - @ @ - 241 , 6 + 216 , 318 @ @ <nl> + @ @ - 241 , 6 + 216 , 323 @ @ <nl> return new WorldBorder ( ) ; <nl> } <nl> <nl> @ @ - 96 , 6 + 96 , 7 @ @ <nl> + * EXA : DIM1 , DIM - 1 <nl> + * @ return The sub - folder name to save this world ' s chunks to . <nl> + * / <nl> + + @ Nullable <nl> + public String getSaveFolder ( ) <nl> + { <nl> + return ( dimensionId = = 0 ? null : " DIM " + dimensionId ) ; <nl> @ @ - 117 , 6 + 118 , 7 @ @ <nl> + return 1 . 0 ; <nl> + } <nl> + <nl> + + @ Nullable <nl> + @ SideOnly ( Side . CLIENT ) <nl> + public net . minecraftforge . client . IRenderHandler getSkyRenderer ( ) <nl> + { <nl> @ @ - 129 , 6 + 131 , 7 @ @ <nl> + this . skyRenderer = skyRenderer ; <nl> + } <nl> + <nl> + + @ Nullable <nl> + @ SideOnly ( Side . CLIENT ) <nl> + public net . minecraftforge . client . IRenderHandler getCloudRenderer ( ) <nl> + { <nl> @ @ - 141 , 6 + 144 , 7 @ @ <nl> + cloudRenderer = renderer ; <nl> + } <nl> + <nl> + + @ Nullable <nl> + @ SideOnly ( Side . CLIENT ) <nl> + public net . minecraftforge . client . IRenderHandler getWeatherRenderer ( ) <nl> + { <nl> @ @ - 219 , 6 + 223 , 7 @ @ <nl> + * Note that this method is always called before the world load event . <nl> + * @ return initial holder for capabilities on the world <nl> + * / <nl> + + @ Nullable <nl> + public net . minecraftforge . common . capabilities . ICapabilityProvider initCapabilities ( ) { <nl> + return null ; <nl> + }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / enchantment / EnumEnchantmentType . java . patch b / patches / minecraft / net / minecraft / enchantment / EnumEnchantmentType . java . patch 
 index 37bfabc . . 0232f42 100644 
 - - - a / patches / minecraft / net / minecraft / enchantment / EnumEnchantmentType . java . patch 
 + + + b / patches / minecraft / net / minecraft / enchantment / EnumEnchantmentType . java . patch 
 @ @ - 1 , 5 + 1 , 14 @ @ 
 - - - a / net / minecraft / enchantment / EnumEnchantmentType . java 
 + + + b / net / minecraft / enchantment / EnumEnchantmentType . java 
 + @ @ - 13 , 7 + 13 , 7 @ @ 
 + import net . minecraft . item . ItemTool ; 
 + import net . minecraft . item . ItemTrident ; 
 + 
 + - public enum EnumEnchantmentType { 
 + + public enum EnumEnchantmentType implements net . minecraftforge . common . IExtensibleEnum { 
 + ALL { 
 + public boolean func _ 77557 _ a ( Item p _ 77557 _ 1 _ ) { 
 + for ( EnumEnchantmentType enumenchantmenttype : EnumEnchantmentType . values ( ) ) { 
 @ @ - 90 , 5 + 90 , 16 @ @ 
 private EnumEnchantmentType ( ) { 
 } 
 @ @ - 11 , 7 + 20 , 7 @ @ 
 + } 
 + 
 + public static EnumEnchantmentType create ( String name , java . util . function . Predicate < Item > delegate ) { 
 - + return null ; 
 + + throw new IllegalStateException ( " Enum not extended " ) ; 
 + } 
 + 
 + public boolean func _ 77557 _ a ( Item p _ 77557 _ 1 _ ) { 
 diff - - git a / patches / minecraft / net / minecraft / entity / EnumCreatureType . java . patch b / patches / minecraft / net / minecraft / entity / EnumCreatureType . java . patch 
 index fe2fb98 . . 695908b 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EnumCreatureType . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EnumCreatureType . java . patch 
 @ @ - 1 , 11 + 1 , 20 @ @ 
 - - - a / net / minecraft / entity / EnumCreatureType . java 
 + + + b / net / minecraft / entity / EnumCreatureType . java 
 + @ @ - 6 , 7 + 6 , 7 @ @ 
 + import net . minecraft . entity . passive . EntityWaterMob ; 
 + import net . minecraft . entity . passive . IAnimal ; 
 + 
 + - public enum EnumCreatureType { 
 + + public enum EnumCreatureType implements net . minecraftforge . common . IExtensibleEnum { 
 + MONSTER ( IMob . class , 70 , false , false ) , 
 + CREATURE ( EntityAnimal . class , 10 , true , true ) , 
 + AMBIENT ( EntityAmbientCreature . class , 15 , true , false ) , 
 @ @ - 39 , 4 + 39 , 8 @ @ 
 public boolean func _ 82705 _ e ( ) { 
 return this . field _ 82707 _ i ; 
 } 
 + 
 + public static EnumCreatureType create ( String name , Class < ? extends IAnimal > p _ i47849 _ 3 _ , int p _ i47849 _ 4 _ , boolean p _ i47849 _ 5 _ , boolean p _ i47849 _ 6 _ ) { 
 - + return null ; 
 + + throw new IllegalStateException ( " Enum not extended " ) ; 
 + } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / entity / passive / HorseArmorType . java . patch b / patches / minecraft / net / minecraft / entity / passive / HorseArmorType . java . patch 
 index 06ce551 . . cadcab2 100644 
 - - - a / patches / minecraft / net / minecraft / entity / passive / HorseArmorType . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / passive / HorseArmorType . java . patch 
 @ @ - 1 , 5 + 1 , 14 @ @ 
 - - - a / net / minecraft / entity / passive / HorseArmorType . java 
 + + + b / net / minecraft / entity / passive / HorseArmorType . java 
 + @ @ - 7 , 7 + 7 , 7 @ @ 
 + import net . minecraftforge . api . distmarker . Dist ; 
 + import net . minecraftforge . api . distmarker . OnlyIn ; 
 + 
 + - public enum HorseArmorType { 
 + + public enum HorseArmorType implements net . minecraftforge . common . IExtensibleEnum { 
 + NONE ( 0 ) , 
 + IRON ( 5 , " iron " , " meo " ) , 
 + GOLD ( 7 , " gold " , " goo " ) , 
 @ @ - 16 , 6 + 16 , 7 @ @ 
 private final String field _ 188586 _ e ; 
 private final String field _ 188587 _ f ; 
 @ @ - 18 , 7 + 27 , 7 @ @ 
 + } 
 + 
 + public static HorseArmorType create ( String name , int strength , String texture , String hash , Item item ) { 
 - + return null ; 
 + + throw new IllegalStateException ( " Enum not extended " ) ; 
 + } 
 + 
 public int func _ 188579 _ a ( ) { 
 diff - - git a / patches / minecraft / net / minecraft / item / ArmorMaterial . java . patch b / patches / minecraft / net / minecraft / item / ArmorMaterial . java . patch 
 index d0b6c41 . . e03ab01 100644 
 - - - a / patches / minecraft / net / minecraft / item / ArmorMaterial . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / ArmorMaterial . java . patch 
 @ @ - 1 , 11 + 1 , 20 @ @ 
 - - - a / net / minecraft / item / ArmorMaterial . java 
 + + + b / net / minecraft / item / ArmorMaterial . java 
 + @ @ - 10 , 7 + 10 , 7 @ @ 
 + import net . minecraftforge . api . distmarker . Dist ; 
 + import net . minecraftforge . api . distmarker . OnlyIn ; 
 + 
 + - public enum ArmorMaterial implements IArmorMaterial { 
 + + public enum ArmorMaterial implements IArmorMaterial , net . minecraftforge . common . IExtensibleEnum { 
 + LEATHER ( " leather " , 5 , new int [ ] { 1 , 2 , 3 , 1 } , 15 , SoundEvents . field _ 187728 _ s , 0 . 0F , ( ) - > { 
 + return Ingredient . func _ 199804 _ a ( Items . field _ 151116 _ aA ) ; 
 + } ) , 
 @ @ - 77 , 4 + 77 , 8 @ @ 
 public float func _ 200901 _ e ( ) { 
 return this . field _ 189417 _ k ; 
 } 
 + 
 + public static ArmorMaterial create ( String name , String p _ i48533 _ 3 _ , int p _ i48533 _ 4 _ , int [ ] p _ i48533 _ 5 _ , int p _ i48533 _ 6 _ , SoundEvent p _ i48533 _ 7 _ , float p _ i48533 _ 8 _ , Supplier < Ingredient > p _ i48533 _ 9 _ ) { 
 - + return null ; 
 + + throw new IllegalStateException ( " Enum not extended " ) ; 
 + + } 
 } 
 - + } 
 diff - - git a / patches / minecraft / net / minecraft / world / dimension / DimensionType . java . patch b / patches / minecraft / net / minecraft / world / dimension / DimensionType . java . patch 
 index 3528251 . . 5c2a89e 100644 
 - - - a / patches / minecraft / net / minecraft / world / dimension / DimensionType . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / dimension / DimensionType . java . patch 
 @ @ - 1 , 5 + 1 , 14 @ @ 
 - - - a / net / minecraft / world / dimension / DimensionType . java 
 + + + b / net / minecraft / world / dimension / DimensionType . java 
 + @ @ - 2 , 7 + 2 , 7 @ @ 
 + 
 + import java . util . function . Supplier ; 
 + 
 + - public enum DimensionType { 
 + + public enum DimensionType implements net . minecraftforge . common . IExtensibleEnum { 
 + OVERWORLD ( 0 , " overworld " , " " , OverworldDimension : : new ) , 
 + NETHER ( - 1 , " the _ nether " , " _ nether " , NetherDimension : : new ) , 
 + THE _ END ( 1 , " the _ end " , " _ end " , EndDimension : : new ) ; 
 @ @ - 11 , 12 + 11 , 19 @ @ 
 private final String field _ 186075 _ e ; 
 private final String field _ 186076 _ f ; 
 @ @ - 20 , 15 + 29 , 14 @ @ 
 } 
 
 public int func _ 186068 _ a ( ) { 
 - @ @ - 54 , 4 + 61 , 11 @ @ 
 + @ @ - 54 , 4 + 61 , 10 @ @ 
 
 throw new IllegalArgumentException ( " Invalid dimension " + p _ 193417 _ 0 _ ) ; 
 } 
 + 
 + public boolean shouldLoadSpawn ( ) { return this . shouldLoadSpawn ; } 
 + 
 - + public static DimensionType create ( int id , String name , String suffix , Supplier < ? extends Dimension > provider , boolean shouldLoadSpawn ) 
 - + { 
 - + return null ; 
 + + public static DimensionType create ( String enumName , int id , String name , String suffix , Supplier < ? extends Dimension > provider , boolean shouldLoadSpawn ) { 
 + + throw new IllegalStateException ( " Enum not extended " ) ; 
 + } 
 } 
 diff - - git a / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java b / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java 
 index 1ebed7d . . 92f9423 100644 
 - - - a / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java 
 + + + b / src / fmllauncher / java / net / minecraftforge / common / asm / RuntimeEnumExtender . java 
 @ @ - 20 , 6 + 20 , 8 @ @ 
 package net . minecraftforge . common . asm ; 
 
 import java . nio . file . Path ; 
 + import java . util . List ; 
 + import java . util . stream . Collectors ; 
 
 import net . minecraftforge . fml . loading . AdvancedLogMessageAdapter ; 
 import org . apache . logging . log4j . LogManager ; 
 @ @ - 43 , 6 + 45 , 7 @ @ public class RuntimeEnumExtender implements ILaunchPluginService { 
 private static final Logger LOGGER = LogManager . getLogger ( ) ; 
 private final Type STRING = Type . getType ( String . class ) ; 
 private final Type ENUM = Type . getType ( Enum . class ) ; 
 + private final Type MARKER _ IFACE = Type . getType ( " Lnet / minecraftforge / common / IExtensibleEnum ; " ) ; 
 private final Type ARRAY _ UTILS = Type . getType ( " Lorg / apache / commons / lang3 / ArrayUtils ; " ) ; / / Don ' t directly reference this to prevent class loading . 
 private final String ADD _ DESC = Type . getMethodDescriptor ( Type . getType ( Object [ ] . class ) , Type . getType ( Object [ ] . class ) , Type . getType ( Object . class ) ) ; 
 private final Type UNSAFE _ HACKS = Type . getType ( " Lnet / minecraftforge / fml / UnsafeHacks ; " ) ; / / Again , not direct reference to prevent class loading . 
 @ @ - 75 , 13 + 78 , 28 @ @ public class RuntimeEnumExtender implements ILaunchPluginService { 
 final int flags = Opcodes . ACC _ PRIVATE | Opcodes . ACC _ STATIC | Opcodes . ACC _ FINAL | Opcodes . ACC _ SYNTHETIC ; 
 
 FieldNode values = classNode . fields . stream ( ) . filter ( f - > f . desc . contentEquals ( array . getDescriptor ( ) ) & & ( ( f . access & flags ) = = flags ) ) . findFirst ( ) . orElse ( null ) ; 
 + 
 + if ( ! classNode . interfaces . contains ( MARKER _ IFACE . getInternalName ( ) ) ) { 
 + return classNode ; 
 + } 
 + 
 / / Static methods named " create " , with first argument as a string , and returning this type 
 - classNode . methods . stream ( ) . filter ( m - > ( ( m . access & Opcodes . ACC _ STATIC ) ! = 0 ) & & m . name . equals ( " create " ) & & Type . getReturnType ( m . desc ) . equals ( classType ) ) . forEach ( mtd - > 
 + List < MethodNode > candidates = classNode . methods . stream ( ) 
 + . filter ( m - > ( ( m . access & Opcodes . ACC _ STATIC ) ! = 0 ) & & m . name . equals ( " create " ) & & Type . getReturnType ( m . desc ) . equals ( classType ) ) 
 + . collect ( Collectors . toList ( ) ) ; 
 + 
 + candidates . forEach ( mtd - > 
 { 
 Type [ ] args = Type . getArgumentTypes ( mtd . desc ) ; 
 - if ( args . length = = 0 | | ! args [ 0 ] . equals ( STRING ) ) 
 - return ; 
 - 
 + if ( args . length = = 0 | | ! args [ 0 ] . equals ( STRING ) ) { 
 + LOGGER . fatal ( ( ) - > new AdvancedLogMessageAdapter ( sb - > { 
 + sb . append ( " Enum has create method without String as first parameter : \ n " ) ; 
 + sb . append ( " Enum : " + classType . getDescriptor ( ) ) . append ( " \ n " ) ; 
 + sb . append ( " Target : " ) . append ( mtd . name + mtd . desc ) . append ( " \ n " ) ; 
 + } ) ) ; 
 + throw new IllegalStateException ( " Enum has create method without String as first parameter : " + mtd . name + mtd . desc ) ; 
 + } 
 + 
 Type [ ] ctrArgs = new Type [ args . length + 1 ] ; 
 ctrArgs [ 0 ] = STRING ; 
 ctrArgs [ 1 ] = Type . INT _ TYPE ; 
 @ @ - 95 , 7 + 113 , 8 @ @ public class RuntimeEnumExtender implements ILaunchPluginService { 
 { 
 LOGGER . fatal ( ( ) - > new AdvancedLogMessageAdapter ( sb - > { 
 sb . append ( " Enum has create method with no matching constructor : \ n " ) ; 
 - sb . append ( " Enum : " + classType . getDescriptor ( ) ) . append ( " \ n " ) ; 
 + sb . append ( " Enum : " ) . append ( classType . getDescriptor ( ) ) . append ( " \ n " ) ; 
 + sb . append ( " Candidate : " ) . append ( mtd . desc ) . append ( " \ n " ) ; 
 sb . append ( " Target : " ) . append ( desc ) . append ( " \ n " ) ; 
 classNode . methods . stream ( ) . filter ( m - > m . name . equals ( " < init > " ) ) . forEach ( m - > sb . append ( " : " ) . append ( m . desc ) . append ( " \ n " ) ) ; 
 } ) ) ; 
 diff - - git a / src / main / java / net / minecraftforge / common / IExtensibleEnum . java b / src / main / java / net / minecraftforge / common / IExtensibleEnum . java 
 new file mode 100644 
 index 0000000 . . 7c8b051 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / common / IExtensibleEnum . java 
 @ @ - 0 , 0 + 1 , 25 @ @ 
 + package net . minecraftforge . common ; 
 + 
 + / * * 
 + * To be implemented on vanilla enums that should be enhanced with ASM to be 
 + * extensible . If this is implemented on a class , the class must define a static 
 + * method called " create " which takes a String ( enum name ) , and the rest of the 
 + * parameters matching a constructor . 
 + * < p > 
 + * For example , an enum with the constructor { @ code MyEnum ( Object foo ) } would 
 + * require the method : 
 + * 
 + * < pre > 
 + * public static MyEnum create ( String name , Object foo ) 
 + * { 
 + * throw new IllegalStateException ( " Enum not extended " ) ; 
 + * } 
 + * < / pre > 
 + * 
 + * The method contents will be replaced with ASM at runtime . Multiple 
 + * { @ code create } methods < strong > can < / strong > be defined as long as each 
 + * matches a constructor . 
 + * / 
 + public interface IExtensibleEnum 
 + { 
 + } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / block / state / BlockStateBase . java . patch b / patches / minecraft / net / minecraft / block / state / BlockStateBase . java . patch 
 index 6460176 . . ac50e35 100644 
 - - - a / patches / minecraft / net / minecraft / block / state / BlockStateBase . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / state / BlockStateBase . java . patch 
 @ @ - 1 , 10 + 1 , 11 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / block / state / BlockStateBase . java 
 + + + . . / src - work / minecraft / net / minecraft / block / state / BlockStateBase . java 
 - @ @ - 73 , 4 + 73 , 9 @ @ 
 + @ @ - 73 , 4 + 73 , 10 @ @ 
 
 return stringbuilder . toString ( ) ; 
 } 
 + 
 + + @ Nullable 
 + public com . google . common . collect . ImmutableTable < IProperty < ? > , Comparable < ? > , IBlockState > getPropertyValueTable ( ) 
 + { 
 + return null ; 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainerCreative . java . patch b / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainerCreative . java . patch 
 index 597f763 . . 875d189 100644 
 - - - a / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainerCreative . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / gui / inventory / GuiContainerCreative . java . patch 
 @ @ - 264 , 7 + 264 , 7 @ @ 
 } 
 
 public int func _ 147056 _ g ( ) 
 - @ @ - 1031 , 6 + 1145 , 38 @ @ 
 + @ @ - 1031 , 6 + 1145 , 39 @ @ 
 { 
 return this . field _ 148332 _ b . func _ 82869 _ a ( p _ 82869 _ 1 _ ) ; 
 } 
 @ @ - 280 , 11 + 280 , 12 @ @ 
 + this . field _ 148332 _ b . setBackgroundLocation ( texture ) ; 
 + } 
 + 
 - + public void setBackgroundName ( String name ) 
 + + public void setBackgroundName ( @ Nullable String name ) 
 + { 
 + this . field _ 148332 _ b . setBackgroundName ( name ) ; 
 + } 
 + 
 + + @ Nullable 
 + public net . minecraft . client . renderer . texture . TextureAtlasSprite getBackgroundSprite ( ) 
 + { 
 + return this . field _ 148332 _ b . getBackgroundSprite ( ) ; 
 diff - - git a / patches / minecraft / net / minecraft / entity / EntityList . java . patch b / patches / minecraft / net / minecraft / entity / EntityList . java . patch 
 index c535780 . . 05ba260 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntityList . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntityList . java . patch 
 @ @ - 12 , 7 + 12 , 7 @ @ 
 
 @ Nullable 
 public static ResourceLocation func _ 191301 _ a ( Entity p _ 191301 _ 0 _ ) 
 - @ @ - 121 , 37 + 119 , 52 @ @ 
 + @ @ - 121 , 38 + 119 , 54 @ @ 
 @ Nullable 
 public static ResourceLocation func _ 191306 _ a ( Class < ? extends Entity > p _ 191306 _ 0 _ ) 
 { 
 @ @ - 63 , 16 + 63 , 18 @ @ 
 + return entry = = null ? - 1 : net . minecraftforge . registries . GameData . getEntityRegistry ( ) . getID ( entry ) ; 
 + } 
 + 
 + @ Nullable 
 + public static Class < ? extends Entity > getClass ( ResourceLocation key ) 
 + { 
 + net . minecraftforge . fml . common . registry . EntityEntry entry = net . minecraftforge . fml . common . registry . ForgeRegistries . ENTITIES . getValue ( key ) ; 
 + return entry = = null ? null : entry . getEntityClass ( ) ; 
 + } 
 + 
 - @ Nullable 
 + + @ Nullable 
 public static Entity func _ 191304 _ a ( @ Nullable Class < ? extends Entity > p _ 191304 _ 0 _ , World p _ 191304 _ 1 _ ) 
 { 
 - @ @ - 163 , 6 + 176 , 8 @ @ 
 + if ( p _ 191304 _ 0 _ = = null ) 
 + @ @ - 163 , 6 + 177 , 8 @ @ 
 { 
 try 
 { 
 @ @ - 81 , 7 + 83 , 7 @ @ 
 return p _ 191304 _ 0 _ . getConstructor ( World . class ) . newInstance ( p _ 191304 _ 1 _ ) ; 
 } 
 catch ( Exception exception ) 
 - @ @ - 177 , 13 + 192 , 15 @ @ 
 + @ @ - 177 , 13 + 193 , 15 @ @ 
 @ SideOnly ( Side . CLIENT ) 
 public static Entity func _ 75616 _ a ( int p _ 75616 _ 0 _ , World p _ 75616 _ 1 _ ) 
 { 
 @ @ - 99 , 7 + 101 , 7 @ @ 
 } 
 
 @ Nullable 
 - @ @ - 198 , 7 + 215 , 16 @ @ 
 + @ @ - 198 , 7 + 216 , 16 @ @ 
 } 
 else 
 { 
 @ @ - 116 , 7 + 118 , 7 @ @ 
 } 
 
 return entity ; 
 - @ @ - 206 , 7 + 232 , 7 @ @ 
 + @ @ - 206 , 7 + 233 , 7 @ @ 
 
 public static Set < ResourceLocation > func _ 180124 _ b ( ) 
 { 
 @ @ - 125 , 7 + 127 , 7 @ @ 
 } 
 
 public static boolean func _ 180123 _ a ( Entity p _ 180123 _ 0 _ , ResourceLocation p _ 180123 _ 1 _ ) 
 - @ @ - 373 , 7 + 399 , 7 @ @ 
 + @ @ - 373 , 7 + 400 , 7 @ @ 
 func _ 191305 _ a ( " zombie _ horse " , 3232308 , 9945732 ) ; 
 func _ 191305 _ a ( " zombie _ pigman " , 15373203 , 5009705 ) ; 
 func _ 191305 _ a ( " zombie _ villager " , 5651507 , 7969893 ) ; 
 @ @ - 134 , 7 + 136 , 7 @ @ 
 } 
 
 private static void func _ 191303 _ a ( int p _ 191303 _ 0 _ , String p _ 191303 _ 1 _ , Class < ? extends Entity > p _ 191303 _ 2 _ , String p _ 191303 _ 3 _ ) 
 - @ @ - 394 , 22 + 420 , 17 @ @ 
 + @ @ - 394 , 22 + 421 , 17 @ @ 
 else 
 { 
 ResourceLocation resourcelocation = new ResourceLocation ( p _ 191303 _ 1 _ ) ; 
 diff - - git a / patches / minecraft / net / minecraft / entity / item / EntityMinecart . java . patch b / patches / minecraft / net / minecraft / entity / item / EntityMinecart . java . patch 
 index 3b14fc7 . . 4d087d7 100644 
 - - - a / patches / minecraft / net / minecraft / entity / item / EntityMinecart . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / item / EntityMinecart . java . patch 
 @ @ - 254 , 7 + 254 , 7 @ @ 
 { 
 p _ 70108 _ 1 _ . field _ 70159 _ w * = 0 . 20000000298023224D ; 
 p _ 70108 _ 1 _ . field _ 70179 _ y * = 0 . 20000000298023224D ; 
 - @ @ - 1015 , 6 + 1047 , 229 @ @ 
 + @ @ - 1015 , 6 + 1047 , 230 @ @ 
 this . func _ 184212 _ Q ( ) . func _ 187227 _ b ( field _ 184270 _ f , Boolean . valueOf ( p _ 94096 _ 1 _ ) ) ; 
 } 
 
 @ @ - 306 , 6 + 306 , 7 @ @ 
 + * is registered , returns null 
 + * @ return The collision handler or null 
 + * / 
 + + @ Nullable 
 + public static net . minecraftforge . common . IMinecartCollisionHandler getCollisionHandler ( ) 
 + { 
 + return collisionHandler ; 
 diff - - git a / patches / minecraft / net / minecraft / inventory / Slot . java . patch b / patches / minecraft / net / minecraft / inventory / Slot . java . patch 
 index c6296c0 . . be2b820 100644 
 - - - a / patches / minecraft / net / minecraft / inventory / Slot . java . patch 
 + + + b / patches / minecraft / net / minecraft / inventory / Slot . java . patch 
 @ @ - 9 , 7 + 9 , 7 @ @ 
 } 
 
 public ItemStack func _ 75209 _ a ( int p _ 75209 _ 1 _ ) 
 - @ @ - 113 , 4 + 113 , 73 @ @ 
 + @ @ - 113 , 4 + 113 , 74 @ @ 
 { 
 return true ; 
 } 
 @ @ - 42 , 11 + 42 , 12 @ @ 
 + * Sets which icon index to use as the background image of the slot when it ' s empty . 
 + * @ param name The icon to use , null for none 
 + * / 
 - + public void setBackgroundName ( String name ) 
 + + public void setBackgroundName ( @ Nullable String name ) 
 + { 
 + this . backgroundName = name ; 
 + } 
 + 
 + + @ Nullable 
 + @ SideOnly ( Side . CLIENT ) 
 + public net . minecraft . client . renderer . texture . TextureAtlasSprite getBackgroundSprite ( ) 
 + { 
 diff - - git a / patches / minecraft / net / minecraft / item / ItemStack . java . patch b / patches / minecraft / net / minecraft / item / ItemStack . java . patch 
 index bc3d3d7 . . 9ecf73b 100644 
 - - - a / patches / minecraft / net / minecraft / item / ItemStack . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / ItemStack . java . patch 
 @ @ - 232 , 7 + 232 , 7 @ @ 
 } 
 
 return multimap ; 
 - @ @ - 1130 , 4 + 1155 , 127 @ @ 
 + @ @ - 1130 , 4 + 1155 , 128 @ @ 
 { 
 this . func _ 190917 _ f ( - p _ 190918 _ 1 _ ) ; 
 } 
 @ @ - 303 , 6 + 303 , 7 @ @ 
 + * Internal call to get the actual item , not the delegate . 
 + * In all other methods , FML replaces calls to this . item with the item delegate . 
 + * / 
 + + @ Nullable 
 + private Item getItemRaw ( ) 
 + { 
 + return this . field _ 151002 _ e ; 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 index 760f505 . . 2c38614 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 @ @ - 58 , 7 + 58 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 377 , 6 + 377 , 26 @ @ 
 + @ @ - 377 , 6 + 377 , 27 @ @ 
 } 
 } 
 
 @ @ - 68 , 6 + 68 , 7 @ @ 
 + 
 + @ SuppressWarnings ( " unchecked " ) 
 + @ Override 
 + + @ javax . annotation . Nullable 
 + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ javax . annotation . Nullable net . minecraft . util . EnumFacing facing ) 
 + { 
 + if ( facing ! = null & & capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch 
 index f0be156 . . 09dabdc 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityChest . java . patch 
 @ @ - 8 , 7 + 8 , 7 @ @ 
 } 
 
 @ SuppressWarnings ( " incomplete - switch " ) 
 - @ @ - 349 , 6 + 350 , 28 @ @ 
 + @ @ - 349 , 6 + 350 , 29 @ @ 
 } 
 } 
 
 @ @ - 16 , 6 + 16 , 7 @ @ 
 + 
 + @ SuppressWarnings ( " unchecked " ) 
 + @ Override 
 + + @ Nullable 
 + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable net . minecraft . util . EnumFacing facing ) 
 + { 
 + if ( capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) 
 diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch 
 index 27cb14c . . d1b9be1 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityFurnace . java . patch 
 @ @ - 71 , 7 + 71 , 7 @ @ 
 Item item = p _ 145952 _ 0 _ . func _ 77973 _ b ( ) ; 
 
 if ( item = = Item . func _ 150898 _ a ( Blocks . field _ 150376 _ bx ) ) 
 - @ @ - 530 , 4 + 532 , 22 @ @ 
 + @ @ - 530 , 4 + 532 , 23 @ @ 
 { 
 this . field _ 145957 _ n . clear ( ) ; 
 } 
 @ @ - 82 , 6 + 82 , 7 @ @ 
 + 
 + @ SuppressWarnings ( " unchecked " ) 
 + @ Override 
 + + @ javax . annotation . Nullable 
 + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ javax . annotation . Nullable net . minecraft . util . EnumFacing facing ) 
 + { 
 + if ( facing ! = null & & capability = = net . minecraftforge . items . CapabilityItemHandler . ITEM _ HANDLER _ CAPABILITY ) 
 diff - - git a / patches / minecraft / net / minecraft / village / Village . java . patch b / patches / minecraft / net / minecraft / village / Village . java . patch 
 index 564e3bd . . bf5691c 100644 
 - - - a / patches / minecraft / net / minecraft / village / Village . java . patch 
 + + + b / patches / minecraft / net / minecraft / village / Village . java . patch 
 @ @ - 167 , 7 + 167 , 7 @ @ 
 } 
 } 
 
 - @ @ - 561 , 4 + 582 , 30 @ @ 
 + @ @ - 561 , 4 + 582 , 31 @ @ 
 this . field _ 75590 _ b = p _ i1674 _ 3 _ ; 
 } 
 } 
 @ @ - 179 , 6 + 179 , 7 @ @ 
 + return capabilities = = null ? false : capabilities . hasCapability ( capability , facing ) ; 
 + } 
 + 
 + + @ Nullable 
 + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable net . minecraft . util . EnumFacing facing ) 
 + { 
 + return capabilities = = null ? null : capabilities . getCapability ( capability , facing ) ; 
 diff - - git a / patches / minecraft / net / minecraft / world / WorldProvider . java . patch b / patches / minecraft / net / minecraft / world / WorldProvider . java . patch 
 index 7520cd2 . . 538e5ff 100644 
 - - - a / patches / minecraft / net / minecraft / world / WorldProvider . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / WorldProvider . java . patch 
 @ @ - 65 , 7 + 65 , 7 @ @ 
 } 
 
 @ SideOnly ( Side . CLIENT ) 
 - @ @ - 241 , 6 + 216 , 318 @ @ 
 + @ @ - 241 , 6 + 216 , 323 @ @ 
 return new WorldBorder ( ) ; 
 } 
 
 @ @ - 96 , 6 + 96 , 7 @ @ 
 + * EXA : DIM1 , DIM - 1 
 + * @ return The sub - folder name to save this world ' s chunks to . 
 + * / 
 + + @ Nullable 
 + public String getSaveFolder ( ) 
 + { 
 + return ( dimensionId = = 0 ? null : " DIM " + dimensionId ) ; 
 @ @ - 117 , 6 + 118 , 7 @ @ 
 + return 1 . 0 ; 
 + } 
 + 
 + + @ Nullable 
 + @ SideOnly ( Side . CLIENT ) 
 + public net . minecraftforge . client . IRenderHandler getSkyRenderer ( ) 
 + { 
 @ @ - 129 , 6 + 131 , 7 @ @ 
 + this . skyRenderer = skyRenderer ; 
 + } 
 + 
 + + @ Nullable 
 + @ SideOnly ( Side . CLIENT ) 
 + public net . minecraftforge . client . IRenderHandler getCloudRenderer ( ) 
 + { 
 @ @ - 141 , 6 + 144 , 7 @ @ 
 + cloudRenderer = renderer ; 
 + } 
 + 
 + + @ Nullable 
 + @ SideOnly ( Side . CLIENT ) 
 + public net . minecraftforge . client . IRenderHandler getWeatherRenderer ( ) 
 + { 
 @ @ - 219 , 6 + 223 , 7 @ @ 
 + * Note that this method is always called before the world load event . 
 + * @ return initial holder for capabilities on the world 
 + * / 
 + + @ Nullable 
 + public net . minecraftforge . common . capabilities . ICapabilityProvider initCapabilities ( ) { 
 + return null ; 
 + }
