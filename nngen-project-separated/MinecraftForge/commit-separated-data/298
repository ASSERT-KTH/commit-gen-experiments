BLEU SCORE: 1.0

TEST MSG: Fix missing call to release ( ) in the event channel handler
GENERATED MSG: Fix missing call to release ( ) in the event channel handler

TEST DIFF (one line): diff - - git a / jsons / 1 . 12 . 2 . json b / jsons / 1 . 12 . 2 . json <nl> index 7f8876c . . 77f9b7f 100644 <nl> - - - a / jsons / 1 . 12 . 2 . json <nl> + + + b / jsons / 1 . 12 . 2 . json <nl> @ @ - 1 , 10 + 1 , 10 @ @ <nl> { <nl> " assetIndex " : { <nl> " id " : " 1 . 12 " , <nl> - " sha1 " : " c2ba0c4da30cce204c70db2ebc32a942cea8c7dd " , <nl> - " size " : 169015 , <nl> - " url " : " https : / / launchermeta . mojang . com / mc / assets / 1 . 12 / c2ba0c4da30cce204c70db2ebc32a942cea8c7dd / 1 . 12 . json " , <nl> - " totalSize " : 127300317 <nl> + " sha1 " : " 3b666765bafa02e84e24b371d9efd7a4d1b6e188 " , <nl> + " size " : 169254 , <nl> + " url " : " https : / / launchermeta . mojang . com / mc / assets / 1 . 12 / 3b666765bafa02e84e24b371d9efd7a4d1b6e188 / 1 . 12 . json " , <nl> + " totalSize " : 127589960 <nl> } , <nl> " assets " : " 1 . 12 " , <nl> " downloads " : { <nl> @ @ - 719 , 6 + 719 , 6 @ @ <nl> " minecraftArguments " : " - - username $ { auth _ player _ name } - - version $ { version _ name } - - gameDir $ { game _ directory } - - assetsDir $ { assets _ root } - - assetIndex $ { assets _ index _ name } - - uuid $ { auth _ uuid } - - accessToken $ { auth _ access _ token } - - userType $ { user _ type } - - versionType $ { version _ type } " , <nl> " minimumLauncherVersion " : 18 , <nl> " releaseTime " : " 2017 - 09 - 18T08 : 39 : 46 + 00 : 00 " , <nl> - " time " : " 2017 - 09 - 18T08 : 41 : 11 + 00 : 00 " , <nl> + " time " : " 2017 - 12 - 07T09 : 55 : 13 + 00 : 00 " , <nl> " type " : " release " <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java b / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java <nl> index 92d3c2c . . d1a375c 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java <nl> @ @ - 22 , 6 + 22 , 8 @ @ package net . minecraftforge . fml . common . network ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . network . internal . FMLProxyPacket ; <nl> <nl> + import org . apache . logging . log4j . Level ; <nl> + <nl> import io . netty . channel . ChannelHandler . Sharable ; <nl> import io . netty . channel . ChannelHandlerContext ; <nl> import io . netty . channel . SimpleChannelInboundHandler ; <nl> @ @ - 47 , 7 + 49 , 6 @ @ public class NetworkEventFiringHandler extends SimpleChannelInboundHandler < FMLPr <nl> protected void channelRead0 ( ChannelHandlerContext ctx , FMLProxyPacket msg ) throws Exception <nl> { <nl> eventChannel . fireRead ( msg , ctx ) ; <nl> - msg . payload ( ) . release ( ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 55 , 7 + 56 , 6 @ @ public class NetworkEventFiringHandler extends SimpleChannelInboundHandler < FMLPr <nl> { <nl> eventChannel . fireUserEvent ( evt , ctx ) ; <nl> } <nl> - <nl> @ Override <nl> public void exceptionCaught ( ChannelHandlerContext ctx , Throwable cause ) throws Exception <nl> { <nl> diff - - git a / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java b / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java <nl> index 7a3867c . . 0a4b9ac 100644 <nl> - - - a / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java <nl> + + + b / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java <nl> @ @ - 10 , 60 + 10 , 37 @ @ import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> import net . minecraftforge . fml . common . gameevent . PlayerEvent . PlayerLoggedInEvent ; <nl> import net . minecraftforge . fml . common . network . FMLEventChannel ; <nl> - import net . minecraftforge . fml . common . network . FMLNetworkEvent ; <nl> import net . minecraftforge . fml . common . network . NetworkRegistry ; <nl> import net . minecraftforge . fml . common . network . internal . FMLProxyPacket ; <nl> - import org . apache . logging . log4j . Logger ; <nl> + import net . minecraftforge . fml . relauncher . Side ; <nl> <nl> @ Mod ( modid = ForgeNetworkTestMod . MOD _ ID , name = ForgeNetworkTestMod . MOD _ ID , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> public class ForgeNetworkTestMod <nl> { <nl> private static final boolean ENABLED = false ; <nl> - public static final String MOD _ ID = " forge _ network _ test " ; <nl> - <nl> + public static final String MOD _ ID = " forgenetworktest " ; <nl> private FMLEventChannel channel ; <nl> - private Logger logger ; <nl> <nl> @ EventHandler <nl> public void onPreInit ( FMLPreInitializationEvent e ) <nl> { <nl> - if ( ENABLED ) <nl> + if ( ENABLED & & e . getSide ( ) = = Side . SERVER ) <nl> { <nl> MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> channel = NetworkRegistry . INSTANCE . newEventDrivenChannel ( MOD _ ID ) ; <nl> channel . register ( this ) ; <nl> - logger = e . getModLog ( ) ; <nl> } <nl> } <nl> <nl> @ SubscribeEvent <nl> public void onPlayerLogin ( PlayerLoggedInEvent e ) <nl> { <nl> - if ( ENABLED ) <nl> + if ( channel = = null ) <nl> { <nl> - PacketBuffer buffer = new PacketBuffer ( Unpooled . buffer ( ) ) ; <nl> - buffer . writeString ( " Welcome to the server ! " ) ; <nl> - channel . sendTo ( new FMLProxyPacket ( buffer , MOD _ ID ) , ( EntityPlayerMP ) e . player ) ; / / disconnects vanilla clients in 1 . 11 <nl> - logger . info ( " Welcomed player to the server " ) ; <nl> + return ; <nl> } <nl> - } <nl> - <nl> - @ SubscribeEvent <nl> - public void onPacketReceived ( FMLNetworkEvent . ClientCustomPacketEvent e ) <nl> - { <nl> - PacketBuffer payload = new PacketBuffer ( e . getPacket ( ) . payload ( ) ) ; <nl> - logger . info ( " Received message from server : { } " , payload . readString ( 64 ) ) ; <nl> - <nl> - PacketBuffer reply = new PacketBuffer ( Unpooled . buffer ( ) ) ; <nl> - reply . writeString ( " Thanks ! " ) ; <nl> - e . setReply ( new FMLProxyPacket ( reply , MOD _ ID ) ) ; <nl> - logger . info ( " Sent a reply " ) ; <nl> - } <nl> - <nl> - @ SubscribeEvent <nl> - public void onPacketReceived ( FMLNetworkEvent . ServerCustomPacketEvent e ) <nl> - { <nl> - PacketBuffer payload = new PacketBuffer ( e . getPacket ( ) . payload ( ) ) ; <nl> - logger . info ( " Received reply from client : { } " , payload . readString ( 64 ) ) ; <nl> + PacketBuffer buffer = new PacketBuffer ( Unpooled . buffer ( ) ) ; <nl> + buffer . writeByte ( 0 ) ; <nl> + channel . sendTo ( new FMLProxyPacket ( buffer , MOD _ ID ) , ( EntityPlayerMP ) e . player ) ; / / disconnects vanilla clients in 1 . 11 <nl> } <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java b / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java <nl> index d1a375c . . 92d3c2c 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java <nl> @ @ - 22 , 8 + 22 , 6 @ @ package net . minecraftforge . fml . common . network ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraftforge . fml . common . network . internal . FMLProxyPacket ; <nl> <nl> - import org . apache . logging . log4j . Level ; <nl> - <nl> import io . netty . channel . ChannelHandler . Sharable ; <nl> import io . netty . channel . ChannelHandlerContext ; <nl> import io . netty . channel . SimpleChannelInboundHandler ; <nl> @ @ - 49 , 6 + 47 , 7 @ @ public class NetworkEventFiringHandler extends SimpleChannelInboundHandler < FMLPr <nl> protected void channelRead0 ( ChannelHandlerContext ctx , FMLProxyPacket msg ) throws Exception <nl> { <nl> eventChannel . fireRead ( msg , ctx ) ; <nl> + msg . payload ( ) . release ( ) ; <nl> } <nl> <nl> @ Override <nl> @ @ - 56 , 6 + 55 , 7 @ @ public class NetworkEventFiringHandler extends SimpleChannelInboundHandler < FMLPr <nl> { <nl> eventChannel . fireUserEvent ( evt , ctx ) ; <nl> } <nl> + <nl> @ Override <nl> public void exceptionCaught ( ChannelHandlerContext ctx , Throwable cause ) throws Exception <nl> { <nl> diff - - git a / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java b / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java <nl> index 0a4b9ac . . 7a3867c 100644 <nl> - - - a / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java <nl> + + + b / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java <nl> @ @ - 10 , 37 + 10 , 60 @ @ import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> import net . minecraftforge . fml . common . gameevent . PlayerEvent . PlayerLoggedInEvent ; <nl> import net . minecraftforge . fml . common . network . FMLEventChannel ; <nl> + import net . minecraftforge . fml . common . network . FMLNetworkEvent ; <nl> import net . minecraftforge . fml . common . network . NetworkRegistry ; <nl> import net . minecraftforge . fml . common . network . internal . FMLProxyPacket ; <nl> - import net . minecraftforge . fml . relauncher . Side ; <nl> + import org . apache . logging . log4j . Logger ; <nl> <nl> @ Mod ( modid = ForgeNetworkTestMod . MOD _ ID , name = ForgeNetworkTestMod . MOD _ ID , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> public class ForgeNetworkTestMod <nl> { <nl> private static final boolean ENABLED = false ; <nl> - public static final String MOD _ ID = " forgenetworktest " ; <nl> + public static final String MOD _ ID = " forge _ network _ test " ; <nl> + <nl> private FMLEventChannel channel ; <nl> + private Logger logger ; <nl> <nl> @ EventHandler <nl> public void onPreInit ( FMLPreInitializationEvent e ) <nl> { <nl> - if ( ENABLED & & e . getSide ( ) = = Side . SERVER ) <nl> + if ( ENABLED ) <nl> { <nl> MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> channel = NetworkRegistry . INSTANCE . newEventDrivenChannel ( MOD _ ID ) ; <nl> channel . register ( this ) ; <nl> + logger = e . getModLog ( ) ; <nl> } <nl> } <nl> <nl> @ SubscribeEvent <nl> public void onPlayerLogin ( PlayerLoggedInEvent e ) <nl> { <nl> - if ( channel = = null ) <nl> + if ( ENABLED ) <nl> { <nl> - return ; <nl> + PacketBuffer buffer = new PacketBuffer ( Unpooled . buffer ( ) ) ; <nl> + buffer . writeString ( " Welcome to the server ! " ) ; <nl> + channel . sendTo ( new FMLProxyPacket ( buffer , MOD _ ID ) , ( EntityPlayerMP ) e . player ) ; / / disconnects vanilla clients in 1 . 11 <nl> + logger . info ( " Welcomed player to the server " ) ; <nl> } <nl> - PacketBuffer buffer = new PacketBuffer ( Unpooled . buffer ( ) ) ; <nl> - buffer . writeByte ( 0 ) ; <nl> - channel . sendTo ( new FMLProxyPacket ( buffer , MOD _ ID ) , ( EntityPlayerMP ) e . player ) ; / / disconnects vanilla clients in 1 . 11 <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public void onPacketReceived ( FMLNetworkEvent . ClientCustomPacketEvent e ) <nl> + { <nl> + PacketBuffer payload = new PacketBuffer ( e . getPacket ( ) . payload ( ) ) ; <nl> + logger . info ( " Received message from server : { } " , payload . readString ( 64 ) ) ; <nl> + <nl> + PacketBuffer reply = new PacketBuffer ( Unpooled . buffer ( ) ) ; <nl> + reply . writeString ( " Thanks ! " ) ; <nl> + e . setReply ( new FMLProxyPacket ( reply , MOD _ ID ) ) ; <nl> + logger . info ( " Sent a reply " ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public void onPacketReceived ( FMLNetworkEvent . ServerCustomPacketEvent e ) <nl> + { <nl> + PacketBuffer payload = new PacketBuffer ( e . getPacket ( ) . payload ( ) ) ; <nl> + logger . info ( " Received reply from client : { } " , payload . readString ( 64 ) ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / jsons / 1 . 12 . 2 . json b / jsons / 1 . 12 . 2 . json 
 index 7f8876c . . 77f9b7f 100644 
 - - - a / jsons / 1 . 12 . 2 . json 
 + + + b / jsons / 1 . 12 . 2 . json 
 @ @ - 1 , 10 + 1 , 10 @ @ 
 { 
 " assetIndex " : { 
 " id " : " 1 . 12 " , 
 - " sha1 " : " c2ba0c4da30cce204c70db2ebc32a942cea8c7dd " , 
 - " size " : 169015 , 
 - " url " : " https : / / launchermeta . mojang . com / mc / assets / 1 . 12 / c2ba0c4da30cce204c70db2ebc32a942cea8c7dd / 1 . 12 . json " , 
 - " totalSize " : 127300317 
 + " sha1 " : " 3b666765bafa02e84e24b371d9efd7a4d1b6e188 " , 
 + " size " : 169254 , 
 + " url " : " https : / / launchermeta . mojang . com / mc / assets / 1 . 12 / 3b666765bafa02e84e24b371d9efd7a4d1b6e188 / 1 . 12 . json " , 
 + " totalSize " : 127589960 
 } , 
 " assets " : " 1 . 12 " , 
 " downloads " : { 
 @ @ - 719 , 6 + 719 , 6 @ @ 
 " minecraftArguments " : " - - username $ { auth _ player _ name } - - version $ { version _ name } - - gameDir $ { game _ directory } - - assetsDir $ { assets _ root } - - assetIndex $ { assets _ index _ name } - - uuid $ { auth _ uuid } - - accessToken $ { auth _ access _ token } - - userType $ { user _ type } - - versionType $ { version _ type } " , 
 " minimumLauncherVersion " : 18 , 
 " releaseTime " : " 2017 - 09 - 18T08 : 39 : 46 + 00 : 00 " , 
 - " time " : " 2017 - 09 - 18T08 : 41 : 11 + 00 : 00 " , 
 + " time " : " 2017 - 12 - 07T09 : 55 : 13 + 00 : 00 " , 
 " type " : " release " 
 } 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java b / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java 
 index 92d3c2c . . d1a375c 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java 
 @ @ - 22 , 6 + 22 , 8 @ @ package net . minecraftforge . fml . common . network ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . network . internal . FMLProxyPacket ; 
 
 + import org . apache . logging . log4j . Level ; 
 + 
 import io . netty . channel . ChannelHandler . Sharable ; 
 import io . netty . channel . ChannelHandlerContext ; 
 import io . netty . channel . SimpleChannelInboundHandler ; 
 @ @ - 47 , 7 + 49 , 6 @ @ public class NetworkEventFiringHandler extends SimpleChannelInboundHandler < FMLPr 
 protected void channelRead0 ( ChannelHandlerContext ctx , FMLProxyPacket msg ) throws Exception 
 { 
 eventChannel . fireRead ( msg , ctx ) ; 
 - msg . payload ( ) . release ( ) ; 
 } 
 
 @ Override 
 @ @ - 55 , 7 + 56 , 6 @ @ public class NetworkEventFiringHandler extends SimpleChannelInboundHandler < FMLPr 
 { 
 eventChannel . fireUserEvent ( evt , ctx ) ; 
 } 
 - 
 @ Override 
 public void exceptionCaught ( ChannelHandlerContext ctx , Throwable cause ) throws Exception 
 { 
 diff - - git a / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java b / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java 
 index 7a3867c . . 0a4b9ac 100644 
 - - - a / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java 
 + + + b / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java 
 @ @ - 10 , 60 + 10 , 37 @ @ import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 import net . minecraftforge . fml . common . gameevent . PlayerEvent . PlayerLoggedInEvent ; 
 import net . minecraftforge . fml . common . network . FMLEventChannel ; 
 - import net . minecraftforge . fml . common . network . FMLNetworkEvent ; 
 import net . minecraftforge . fml . common . network . NetworkRegistry ; 
 import net . minecraftforge . fml . common . network . internal . FMLProxyPacket ; 
 - import org . apache . logging . log4j . Logger ; 
 + import net . minecraftforge . fml . relauncher . Side ; 
 
 @ Mod ( modid = ForgeNetworkTestMod . MOD _ ID , name = ForgeNetworkTestMod . MOD _ ID , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 public class ForgeNetworkTestMod 
 { 
 private static final boolean ENABLED = false ; 
 - public static final String MOD _ ID = " forge _ network _ test " ; 
 - 
 + public static final String MOD _ ID = " forgenetworktest " ; 
 private FMLEventChannel channel ; 
 - private Logger logger ; 
 
 @ EventHandler 
 public void onPreInit ( FMLPreInitializationEvent e ) 
 { 
 - if ( ENABLED ) 
 + if ( ENABLED & & e . getSide ( ) = = Side . SERVER ) 
 { 
 MinecraftForge . EVENT _ BUS . register ( this ) ; 
 channel = NetworkRegistry . INSTANCE . newEventDrivenChannel ( MOD _ ID ) ; 
 channel . register ( this ) ; 
 - logger = e . getModLog ( ) ; 
 } 
 } 
 
 @ SubscribeEvent 
 public void onPlayerLogin ( PlayerLoggedInEvent e ) 
 { 
 - if ( ENABLED ) 
 + if ( channel = = null ) 
 { 
 - PacketBuffer buffer = new PacketBuffer ( Unpooled . buffer ( ) ) ; 
 - buffer . writeString ( " Welcome to the server ! " ) ; 
 - channel . sendTo ( new FMLProxyPacket ( buffer , MOD _ ID ) , ( EntityPlayerMP ) e . player ) ; / / disconnects vanilla clients in 1 . 11 
 - logger . info ( " Welcomed player to the server " ) ; 
 + return ; 
 } 
 - } 
 - 
 - @ SubscribeEvent 
 - public void onPacketReceived ( FMLNetworkEvent . ClientCustomPacketEvent e ) 
 - { 
 - PacketBuffer payload = new PacketBuffer ( e . getPacket ( ) . payload ( ) ) ; 
 - logger . info ( " Received message from server : { } " , payload . readString ( 64 ) ) ; 
 - 
 - PacketBuffer reply = new PacketBuffer ( Unpooled . buffer ( ) ) ; 
 - reply . writeString ( " Thanks ! " ) ; 
 - e . setReply ( new FMLProxyPacket ( reply , MOD _ ID ) ) ; 
 - logger . info ( " Sent a reply " ) ; 
 - } 
 - 
 - @ SubscribeEvent 
 - public void onPacketReceived ( FMLNetworkEvent . ServerCustomPacketEvent e ) 
 - { 
 - PacketBuffer payload = new PacketBuffer ( e . getPacket ( ) . payload ( ) ) ; 
 - logger . info ( " Received reply from client : { } " , payload . readString ( 64 ) ) ; 
 + PacketBuffer buffer = new PacketBuffer ( Unpooled . buffer ( ) ) ; 
 + buffer . writeByte ( 0 ) ; 
 + channel . sendTo ( new FMLProxyPacket ( buffer , MOD _ ID ) , ( EntityPlayerMP ) e . player ) ; / / disconnects vanilla clients in 1 . 11 
 } 
 }

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java b / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java 
 index d1a375c . . 92d3c2c 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / NetworkEventFiringHandler . java 
 @ @ - 22 , 8 + 22 , 6 @ @ package net . minecraftforge . fml . common . network ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraftforge . fml . common . network . internal . FMLProxyPacket ; 
 
 - import org . apache . logging . log4j . Level ; 
 - 
 import io . netty . channel . ChannelHandler . Sharable ; 
 import io . netty . channel . ChannelHandlerContext ; 
 import io . netty . channel . SimpleChannelInboundHandler ; 
 @ @ - 49 , 6 + 47 , 7 @ @ public class NetworkEventFiringHandler extends SimpleChannelInboundHandler < FMLPr 
 protected void channelRead0 ( ChannelHandlerContext ctx , FMLProxyPacket msg ) throws Exception 
 { 
 eventChannel . fireRead ( msg , ctx ) ; 
 + msg . payload ( ) . release ( ) ; 
 } 
 
 @ Override 
 @ @ - 56 , 6 + 55 , 7 @ @ public class NetworkEventFiringHandler extends SimpleChannelInboundHandler < FMLPr 
 { 
 eventChannel . fireUserEvent ( evt , ctx ) ; 
 } 
 + 
 @ Override 
 public void exceptionCaught ( ChannelHandlerContext ctx , Throwable cause ) throws Exception 
 { 
 diff - - git a / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java b / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java 
 index 0a4b9ac . . 7a3867c 100644 
 - - - a / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java 
 + + + b / src / test / java / net / minecraftforge / fml / test / ForgeNetworkTestMod . java 
 @ @ - 10 , 37 + 10 , 60 @ @ import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 import net . minecraftforge . fml . common . gameevent . PlayerEvent . PlayerLoggedInEvent ; 
 import net . minecraftforge . fml . common . network . FMLEventChannel ; 
 + import net . minecraftforge . fml . common . network . FMLNetworkEvent ; 
 import net . minecraftforge . fml . common . network . NetworkRegistry ; 
 import net . minecraftforge . fml . common . network . internal . FMLProxyPacket ; 
 - import net . minecraftforge . fml . relauncher . Side ; 
 + import org . apache . logging . log4j . Logger ; 
 
 @ Mod ( modid = ForgeNetworkTestMod . MOD _ ID , name = ForgeNetworkTestMod . MOD _ ID , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 public class ForgeNetworkTestMod 
 { 
 private static final boolean ENABLED = false ; 
 - public static final String MOD _ ID = " forgenetworktest " ; 
 + public static final String MOD _ ID = " forge _ network _ test " ; 
 + 
 private FMLEventChannel channel ; 
 + private Logger logger ; 
 
 @ EventHandler 
 public void onPreInit ( FMLPreInitializationEvent e ) 
 { 
 - if ( ENABLED & & e . getSide ( ) = = Side . SERVER ) 
 + if ( ENABLED ) 
 { 
 MinecraftForge . EVENT _ BUS . register ( this ) ; 
 channel = NetworkRegistry . INSTANCE . newEventDrivenChannel ( MOD _ ID ) ; 
 channel . register ( this ) ; 
 + logger = e . getModLog ( ) ; 
 } 
 } 
 
 @ SubscribeEvent 
 public void onPlayerLogin ( PlayerLoggedInEvent e ) 
 { 
 - if ( channel = = null ) 
 + if ( ENABLED ) 
 { 
 - return ; 
 + PacketBuffer buffer = new PacketBuffer ( Unpooled . buffer ( ) ) ; 
 + buffer . writeString ( " Welcome to the server ! " ) ; 
 + channel . sendTo ( new FMLProxyPacket ( buffer , MOD _ ID ) , ( EntityPlayerMP ) e . player ) ; / / disconnects vanilla clients in 1 . 11 
 + logger . info ( " Welcomed player to the server " ) ; 
 } 
 - PacketBuffer buffer = new PacketBuffer ( Unpooled . buffer ( ) ) ; 
 - buffer . writeByte ( 0 ) ; 
 - channel . sendTo ( new FMLProxyPacket ( buffer , MOD _ ID ) , ( EntityPlayerMP ) e . player ) ; / / disconnects vanilla clients in 1 . 11 
 + } 
 + 
 + @ SubscribeEvent 
 + public void onPacketReceived ( FMLNetworkEvent . ClientCustomPacketEvent e ) 
 + { 
 + PacketBuffer payload = new PacketBuffer ( e . getPacket ( ) . payload ( ) ) ; 
 + logger . info ( " Received message from server : { } " , payload . readString ( 64 ) ) ; 
 + 
 + PacketBuffer reply = new PacketBuffer ( Unpooled . buffer ( ) ) ; 
 + reply . writeString ( " Thanks ! " ) ; 
 + e . setReply ( new FMLProxyPacket ( reply , MOD _ ID ) ) ; 
 + logger . info ( " Sent a reply " ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public void onPacketReceived ( FMLNetworkEvent . ServerCustomPacketEvent e ) 
 + { 
 + PacketBuffer payload = new PacketBuffer ( e . getPacket ( ) . payload ( ) ) ; 
 + logger . info ( " Received reply from client : { } " , payload . readString ( 64 ) ) ; 
 } 
 }
