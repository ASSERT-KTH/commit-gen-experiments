BLEU SCORE: 0.08761630906541493

TEST MSG: Another fix for registry substitutions . Closes # 3212
GENERATED MSG: Fixed dummy blocks not being removed from registry on dedicated server correctly . Closes # 2487

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> index c2884f6 . . 07c501e 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> @ @ - 180 , 6 + 180 , 7 @ @ public class FMLControlledNamespacedRegistry < I extends IForgeRegistryEntry < I > > e <nl> this . persistentSubstitutions . clear ( ) ; <nl> this . persistentSubstitutions . putAll ( otherRegistry . getPersistentSubstitutions ( ) ) ; <nl> this . activeSubstitutions . clear ( ) ; <nl> + this . substitutionOriginals . clear ( ) ; <nl> this . dummiedLocations . clear ( ) ; <nl> this . dummiedLocations . addAll ( otherRegistry . dummiedLocations ) ; <nl> <nl> @ @ - 188 , 7 + 189 , 11 @ @ public class FMLControlledNamespacedRegistry < I extends IForgeRegistryEntry < I > > e <nl> <nl> for ( I thing : otherRegistry . typeSafeIterable ( ) ) <nl> { <nl> - addObjectRaw ( otherRegistry . getId ( thing ) , otherRegistry . getNameForObject ( thing ) , thing ) ; <nl> + ResourceLocation name = otherRegistry . getNameForObject ( thing ) ; <nl> + if ( otherRegistry . activeSubstitutions . containsKey ( name ) ) / / If this is subed , use the orig , the loop below will reinstate the sub . <nl> + addObjectRaw ( otherRegistry . getId ( thing ) , name , otherRegistry . substitutionOriginals . get ( name ) ) ; <nl> + else <nl> + addObjectRaw ( otherRegistry . getId ( thing ) , name , thing ) ; <nl> } <nl> for ( ResourceLocation resloc : otherRegistry . activeSubstitutions . keySet ( ) ) <nl> { <nl> @ @ - 762 , 6 + 767 , 8 @ @ public class FMLControlledNamespacedRegistry < I extends IForgeRegistryEntry < I > > e <nl> FMLLog . fine ( " Fixed % s id mismatch % s : % d ( init ) - > % d ( map ) . " , registryName , itemName , currId , newId ) ; <nl> remappedIds . put ( itemName , new Integer [ ] { currId , newId } ) ; <nl> } <nl> + if ( " minecraft : stone " . equals ( itemName . toString ( ) ) ) <nl> + System . currentTimeMillis ( ) ; <nl> I obj = currentRegistry . getRaw ( itemName ) ; <nl> I sub = obj ; <nl> / / If we have an object in the originals set , we use that for initial adding - substitute activation will readd the substitute if neceessary later
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> index 3e2a5c6 . . d2385f3 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java <nl> @ @ - 10 , 6 + 10 , 7 @ @ import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Set ; <nl> <nl> + import com . google . common . base . Joiner ; <nl> import com . google . common . base . Throwables ; <nl> import com . google . common . collect . BiMap ; <nl> import com . google . common . collect . HashBiMap ; <nl> @ @ - 463 , 7 + 464 , 11 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul <nl> { <nl> getExistingDelegate ( thing ) . setResourceName ( name ) ; <nl> } <nl> - this . dummiedLocations . remove ( name ) ; <nl> + <nl> + if ( this . dummiedLocations . remove ( name ) & & DEBUG ) <nl> + { <nl> + FMLLog . fine ( " Registry Dummy Remove : % s " , name ) ; <nl> + } <nl> <nl> if ( DEBUG ) <nl> { <nl> @ @ - 474 , 6 + 479 , 10 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul <nl> <nl> void markDummy ( ResourceLocation rl , Integer id , I thing ) <nl> { <nl> + if ( DEBUG ) <nl> + { <nl> + FMLLog . finer ( " Registry Dummy Add : % s % d - > % s " , rl , id , thing ) ; <nl> + } <nl> this . dummiedLocations . add ( rl ) ; <nl> this . addObjectRaw ( id , rl , thing ) ; <nl> } <nl> @ @ - 705 , 6 + 714 , 10 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul <nl> <nl> public void loadDummied ( Set < ResourceLocation > dummied ) <nl> { <nl> + if ( DEBUG & & dummied . size ( ) > 0 ) <nl> + { <nl> + FMLLog . fine ( " Registry Dummy Load : [ % s ] " , Joiner . on ( " , " ) . join ( dummied ) ) ; <nl> + } <nl> this . dummiedLocations . addAll ( dummied ) ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java <nl> index 3085cc0 . . 8e8c4f7 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java <nl> @ @ - 174 , 6 + 174 , 10 @ @ public class PersistentRegistryManager <nl> else if ( isLocalWorld ) <nl> { <nl> / / Carry on , we resuscitated the block <nl> + if ( FMLControlledNamespacedRegistry . DEBUG ) <nl> + { <nl> + FMLLog . log ( Level . DEBUG , " Registry : Resuscitating dummy block % s " , dummy ) ; <nl> + } <nl> } <nl> else <nl> { <nl> @ @ - 324 , 10 + 328 , 11 @ @ public class PersistentRegistryManager <nl> newRegistry . loadBlocked ( snapshotEntry . blocked ) ; <nl> missing . put ( registryName , Maps . < ResourceLocation , Integer > newLinkedHashMap ( ) ) ; <nl> remaps . put ( registryName , Maps . < ResourceLocation , Integer [ ] > newHashMap ( ) ) ; <nl> + / / Load current dummies BEFORE the snapshot is loaded so that add ( ) will remove from the list . <nl> + / / Potentially causes issues from cpw ' s previous comment . Must keep eye on . <nl> + newRegistry . loadDummied ( snapshotEntry . dummied ) ; <nl> newRegistry . loadIds ( snapshotEntry . ids , missing . get ( registryName ) , remaps . get ( registryName ) , currentRegistry , registryName ) ; <nl> newRegistry . loadSubstitutions ( substitutions ) ; <nl> - / / Load current dummies AFTER the snapshot is loaded <nl> - newRegistry . loadDummied ( snapshotEntry . dummied ) ; <nl> } <nl> <nl> public static boolean isFrozen ( FMLControlledNamespacedRegistry < ? > registry )

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 index c2884f6 . . 07c501e 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 @ @ - 180 , 6 + 180 , 7 @ @ public class FMLControlledNamespacedRegistry < I extends IForgeRegistryEntry < I > > e 
 this . persistentSubstitutions . clear ( ) ; 
 this . persistentSubstitutions . putAll ( otherRegistry . getPersistentSubstitutions ( ) ) ; 
 this . activeSubstitutions . clear ( ) ; 
 + this . substitutionOriginals . clear ( ) ; 
 this . dummiedLocations . clear ( ) ; 
 this . dummiedLocations . addAll ( otherRegistry . dummiedLocations ) ; 
 
 @ @ - 188 , 7 + 189 , 11 @ @ public class FMLControlledNamespacedRegistry < I extends IForgeRegistryEntry < I > > e 
 
 for ( I thing : otherRegistry . typeSafeIterable ( ) ) 
 { 
 - addObjectRaw ( otherRegistry . getId ( thing ) , otherRegistry . getNameForObject ( thing ) , thing ) ; 
 + ResourceLocation name = otherRegistry . getNameForObject ( thing ) ; 
 + if ( otherRegistry . activeSubstitutions . containsKey ( name ) ) / / If this is subed , use the orig , the loop below will reinstate the sub . 
 + addObjectRaw ( otherRegistry . getId ( thing ) , name , otherRegistry . substitutionOriginals . get ( name ) ) ; 
 + else 
 + addObjectRaw ( otherRegistry . getId ( thing ) , name , thing ) ; 
 } 
 for ( ResourceLocation resloc : otherRegistry . activeSubstitutions . keySet ( ) ) 
 { 
 @ @ - 762 , 6 + 767 , 8 @ @ public class FMLControlledNamespacedRegistry < I extends IForgeRegistryEntry < I > > e 
 FMLLog . fine ( " Fixed % s id mismatch % s : % d ( init ) - > % d ( map ) . " , registryName , itemName , currId , newId ) ; 
 remappedIds . put ( itemName , new Integer [ ] { currId , newId } ) ; 
 } 
 + if ( " minecraft : stone " . equals ( itemName . toString ( ) ) ) 
 + System . currentTimeMillis ( ) ; 
 I obj = currentRegistry . getRaw ( itemName ) ; 
 I sub = obj ; 
 / / If we have an object in the originals set , we use that for initial adding - substitute activation will readd the substitute if neceessary later

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 index 3e2a5c6 . . d2385f3 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry . java 
 @ @ - 10 , 6 + 10 , 7 @ @ import java . util . List ; 
 import java . util . Map ; 
 import java . util . Set ; 
 
 + import com . google . common . base . Joiner ; 
 import com . google . common . base . Throwables ; 
 import com . google . common . collect . BiMap ; 
 import com . google . common . collect . HashBiMap ; 
 @ @ - 463 , 7 + 464 , 11 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul 
 { 
 getExistingDelegate ( thing ) . setResourceName ( name ) ; 
 } 
 - this . dummiedLocations . remove ( name ) ; 
 + 
 + if ( this . dummiedLocations . remove ( name ) & & DEBUG ) 
 + { 
 + FMLLog . fine ( " Registry Dummy Remove : % s " , name ) ; 
 + } 
 
 if ( DEBUG ) 
 { 
 @ @ - 474 , 6 + 479 , 10 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul 
 
 void markDummy ( ResourceLocation rl , Integer id , I thing ) 
 { 
 + if ( DEBUG ) 
 + { 
 + FMLLog . finer ( " Registry Dummy Add : % s % d - > % s " , rl , id , thing ) ; 
 + } 
 this . dummiedLocations . add ( rl ) ; 
 this . addObjectRaw ( id , rl , thing ) ; 
 } 
 @ @ - 705 , 6 + 714 , 10 @ @ public class FMLControlledNamespacedRegistry < I > extends RegistryNamespacedDefaul 
 
 public void loadDummied ( Set < ResourceLocation > dummied ) 
 { 
 + if ( DEBUG & & dummied . size ( ) > 0 ) 
 + { 
 + FMLLog . fine ( " Registry Dummy Load : [ % s ] " , Joiner . on ( " , " ) . join ( dummied ) ) ; 
 + } 
 this . dummiedLocations . addAll ( dummied ) ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java 
 index 3085cc0 . . 8e8c4f7 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / PersistentRegistryManager . java 
 @ @ - 174 , 6 + 174 , 10 @ @ public class PersistentRegistryManager 
 else if ( isLocalWorld ) 
 { 
 / / Carry on , we resuscitated the block 
 + if ( FMLControlledNamespacedRegistry . DEBUG ) 
 + { 
 + FMLLog . log ( Level . DEBUG , " Registry : Resuscitating dummy block % s " , dummy ) ; 
 + } 
 } 
 else 
 { 
 @ @ - 324 , 10 + 328 , 11 @ @ public class PersistentRegistryManager 
 newRegistry . loadBlocked ( snapshotEntry . blocked ) ; 
 missing . put ( registryName , Maps . < ResourceLocation , Integer > newLinkedHashMap ( ) ) ; 
 remaps . put ( registryName , Maps . < ResourceLocation , Integer [ ] > newHashMap ( ) ) ; 
 + / / Load current dummies BEFORE the snapshot is loaded so that add ( ) will remove from the list . 
 + / / Potentially causes issues from cpw ' s previous comment . Must keep eye on . 
 + newRegistry . loadDummied ( snapshotEntry . dummied ) ; 
 newRegistry . loadIds ( snapshotEntry . ids , missing . get ( registryName ) , remaps . get ( registryName ) , currentRegistry , registryName ) ; 
 newRegistry . loadSubstitutions ( substitutions ) ; 
 - / / Load current dummies AFTER the snapshot is loaded 
 - newRegistry . loadDummied ( snapshotEntry . dummied ) ; 
 } 
 
 public static boolean isFrozen ( FMLControlledNamespacedRegistry < ? > registry )
