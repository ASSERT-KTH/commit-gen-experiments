BLEU SCORE: 0.020289699885655793

TEST MSG: Fixed ' reset to defaults ' button not working on some Forge config fields .
GENERATED MSG: Clean up some legacy settings , making sure there ' s translation strings . Closes # 2965 Thanks for the prompt Zaggy !

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> index f2ebb8f . . 391d1c9 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> @ @ - 219 , 7 + 219 , 7 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> prop = config . get ( CATEGORY _ GENERAL , " sortRecipies " , true ) ; <nl> prop . setComment ( " Set to true to enable the post initialization sorting of crafting recipes using Forge ' s sorter . May cause desyncing on conflicting recipes . MUST RESTART MINECRAFT IF CHANGED FROM THE CONFIG GUI . " ) ; <nl> prop . setLanguageKey ( " forge . configgui . sortRecipies " ) . setRequiresMcRestart ( true ) ; <nl> - shouldSortRecipies = prop . getBoolean ( shouldSortRecipies ) ; <nl> + shouldSortRecipies = prop . getBoolean ( true ) ; <nl> propOrder . add ( prop . getName ( ) ) ; <nl> <nl> prop = config . get ( Configuration . CATEGORY _ GENERAL , " removeErroringEntities " , false ) ; <nl> @ @ - 268 , 9 + 268 , 9 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> zombieBabyChance = ( float ) prop . getDouble ( 0 . 05 ) ; <nl> propOrder . add ( prop . getName ( ) ) ; <nl> <nl> - prop = config . get ( Configuration . CATEGORY _ GENERAL , " forgeLightPipelineEnabled " , Boolean . TRUE , <nl> + prop = config . get ( Configuration . CATEGORY _ GENERAL , " forgeLightPipelineEnabled " , true , <nl> " Enable the forge block rendering pipeline - fixes the lighting of custom models . " ) ; <nl> - forgeLightPipelineEnabled = prop . getBoolean ( Boolean . TRUE ) ; <nl> + forgeLightPipelineEnabled = prop . getBoolean ( true ) ; <nl> prop . setLanguageKey ( " forge . configgui . forgeLightPipelineEnabled " ) ; <nl> propOrder . add ( prop . getName ( ) ) ; <nl> <nl> @ @ - 285 , 34 + 285 , 34 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> / / Client - Side only properties <nl> propOrder = new ArrayList < String > ( ) ; <nl> <nl> - prop = config . get ( Configuration . CATEGORY _ CLIENT , " replaceVanillaBucketModel " , Boolean . FALSE , <nl> + prop = config . get ( Configuration . CATEGORY _ CLIENT , " replaceVanillaBucketModel " , false , <nl> " Replace the vanilla bucket models with Forges own dynamic bucket model . Unifies bucket visuals if a mod uses the Forge bucket model . " ) ; <nl> prop . setLanguageKey ( " forge . configgui . replaceBuckets " ) . setRequiresMcRestart ( true ) ; <nl> - replaceVanillaBucketModel = prop . getBoolean ( Boolean . FALSE ) ; <nl> + replaceVanillaBucketModel = prop . getBoolean ( false ) ; <nl> propOrder . add ( prop . getName ( ) ) ; <nl> <nl> - prop = config . get ( Configuration . CATEGORY _ CLIENT , " zoomInMissingModelTextInGui " , Boolean . FALSE , <nl> + prop = config . get ( Configuration . CATEGORY _ CLIENT , " zoomInMissingModelTextInGui " , false , <nl> " Toggle off to make missing model text in the gui fit inside the slot . " ) ; <nl> - zoomInMissingModelTextInGui = prop . getBoolean ( Boolean . FALSE ) ; <nl> + zoomInMissingModelTextInGui = prop . getBoolean ( false ) ; <nl> prop . setLanguageKey ( " forge . configgui . zoomInMissingModelTextInGui " ) ; <nl> propOrder . add ( prop . getName ( ) ) ; <nl> <nl> - prop = config . get ( Configuration . CATEGORY _ CLIENT , " java8Reminder " , java8Reminder , <nl> + prop = config . get ( Configuration . CATEGORY _ CLIENT , " java8Reminder " , 0 , <nl> " The timestamp of the last reminder to update to Java 8 in number of milliseconds since January 1 , 1970 , 00 : 00 : 00 GMT . Nag will show only once every 24 hours . To disable it set this to some really high number . " ) ; <nl> - java8Reminder = prop . getLong ( java8Reminder ) ; <nl> + java8Reminder = prop . getLong ( 0 ) ; <nl> prop . setLanguageKey ( " forge . configgui . java8Reminder " ) ; <nl> propOrder . add ( prop . getName ( ) ) ; <nl> <nl> - prop = config . get ( Configuration . CATEGORY _ CLIENT , " disableStairSlabCulling " , disableStairSlabCulling , <nl> + prop = config . get ( Configuration . CATEGORY _ CLIENT , " disableStairSlabCulling " , false , <nl> " Disable culling of hidden faces next to stairs and slabs . Causes extra rendering , but may fix some resource packs that exploit this vanilla mechanic . " ) ; <nl> - disableStairSlabCulling = prop . getBoolean ( disableStairSlabCulling ) ; <nl> - prop . setLanguageKey ( " forge . configgui . disableStairSlabCulling " ) . setRequiresMcRestart ( false ) ; <nl> + disableStairSlabCulling = prop . getBoolean ( false ) ; <nl> + prop . setLanguageKey ( " forge . configgui . disableStairSlabCulling " ) ; <nl> propOrder . add ( prop . getName ( ) ) ; <nl> <nl> - prop = config . get ( Configuration . CATEGORY _ CLIENT , " alwaysSetupTerrainOffThread " , Boolean . FALSE , <nl> + prop = config . get ( Configuration . CATEGORY _ CLIENT , " alwaysSetupTerrainOffThread " , false , <nl> " Enable forge to queue all chunk updates to the Chunk Update thread . May increase FPS significantly , but may also cause weird rendering lag . Not recommended for computers " + <nl> " without a significant number of cores available . " ) ; <nl> - alwaysSetupTerrainOffThread = prop . getBoolean ( Boolean . FALSE ) ; <nl> + alwaysSetupTerrainOffThread = prop . getBoolean ( false ) ; <nl> prop . setLanguageKey ( " forge . configgui . alwaysSetupTerrainOffThread " ) ; <nl> propOrder . add ( prop . getName ( ) ) ; <nl>
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> index 486c161 . . a49b0b1 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java <nl> @ @ - 96 , 15 + 96 , 12 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> public static int clumpingThreshold = 64 ; <nl> public static boolean removeErroringEntities = false ; <nl> public static boolean removeErroringTileEntities = false ; <nl> - public static boolean disableStitchedFileSaving = false ; <nl> public static boolean fullBoundingBoxLadders = false ; <nl> public static double zombieSummonBaseChance = 0 . 1 ; <nl> public static int [ ] blendRanges = { 2 , 4 , 6 , 8 , 10 , 12 , 14 , 16 , 18 , 20 , 22 , 24 , 26 , 28 , 30 , 32 , 34 } ; <nl> public static float zombieBabyChance = 0 . 05f ; <nl> public static boolean shouldSortRecipies = true ; <nl> public static boolean disableVersionCheck = false ; <nl> - public static int defaultSpawnFuzz = 20 ; <nl> - public static boolean defaultHasSpawnFuzz = true ; <nl> public static boolean forgeLightPipelineEnabled = true ; <nl> public static boolean replaceVanillaBucketModel = true ; <nl> public static long java8Reminder = 0 ; <nl> @ @ - 182 , 6 + 179 , 11 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> <nl> Property prop ; <nl> <nl> + / / clean up old properties that are not used anymore <nl> + if ( config . getCategory ( CATEGORY _ GENERAL ) . containsKey ( " defaultSpawnFuzz " ) ) config . getCategory ( CATEGORY _ GENERAL ) . remove ( " defaultSpawnFuzz " ) ; <nl> + if ( config . getCategory ( CATEGORY _ GENERAL ) . containsKey ( " spawnHasFuzz " ) ) config . getCategory ( CATEGORY _ GENERAL ) . remove ( " spawnHasFuzz " ) ; <nl> + if ( config . getCategory ( CATEGORY _ GENERAL ) . containsKey ( " disableStitchedFileSaving " ) ) config . getCategory ( CATEGORY _ GENERAL ) . remove ( " disableStitchedFileSaving " ) ; <nl> + <nl> prop = config . get ( CATEGORY _ GENERAL , " disableVersionCheck " , false ) ; <nl> prop . setComment ( " Set to true to disable Forge ' s version check mechanics . Forge queries a small json file on our server for version information . For more details see the ForgeVersion class in our github . " ) ; <nl> / / Language keys are a good idea to implement if you are using config GUIs . This allows you to use a . lang file that will hold the <nl> @ @ - 231 , 10 + 233 , 6 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> FMLLog . warning ( " Enabling removal of erroring Tile Entities - USE AT YOUR OWN RISK " ) ; <nl> } <nl> <nl> - prop = config . get ( Configuration . CATEGORY _ GENERAL , " disableStitchedFileSaving " , true ) ; <nl> - prop . setComment ( " Set this to just disable the texture stitcher from writing the ' { name } _ { mipmap } . png files to disc . Just a small performance tweak . Default : true " ) ; <nl> - disableStitchedFileSaving = prop . getBoolean ( true ) ; <nl> - <nl> prop = config . get ( Configuration . CATEGORY _ GENERAL , " fullBoundingBoxLadders " , false ) ; <nl> prop . setComment ( " Set this to true to check the entire entity ' s collision bounding box for ladders instead of just the block they are in . Causes noticeable differences in mechanics so default is vanilla behavior . Default : false " ) ; <nl> prop . setLanguageKey ( " forge . configgui . fullBoundingBoxLadders " ) . setRequiresWorldRestart ( true ) ; <nl> @ @ - 259 , 22 + 257 , 10 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> zombieBabyChance = ( float ) prop . getDouble ( 0 . 05 ) ; <nl> propOrder . add ( prop . getName ( ) ) ; <nl> <nl> - prop = config . get ( Configuration . CATEGORY _ GENERAL , " defaultSpawnFuzz " , 20 , <nl> - " The spawn fuzz when a player respawns in the world , this is controllable by WorldType , this config option is for the default overworld . " , <nl> - 1 , Integer . MAX _ VALUE ) ; <nl> - prop . setLanguageKey ( " forge . configgui . spawnfuzz " ) . setRequiresWorldRestart ( false ) ; <nl> - defaultSpawnFuzz = prop . getInt ( 20 ) ; <nl> - propOrder . add ( prop . getName ( ) ) ; <nl> - <nl> - prop = config . get ( Configuration . CATEGORY _ GENERAL , " spawnHasFuzz " , Boolean . TRUE , <nl> - " If the overworld has ANY spawn fuzz at all . If not , the spawn will always be the exact same location . " ) ; <nl> - prop . setLanguageKey ( " forge . configgui . hasspawnfuzz " ) . setRequiresWorldRestart ( false ) ; <nl> - defaultHasSpawnFuzz = prop . getBoolean ( Boolean . TRUE ) ; <nl> - propOrder . add ( prop . getName ( ) ) ; <nl> - <nl> prop = config . get ( Configuration . CATEGORY _ GENERAL , " forgeLightPipelineEnabled " , Boolean . TRUE , <nl> " Enable the forge block rendering pipeline - fixes the lighting of custom models . " ) ; <nl> forgeLightPipelineEnabled = prop . getBoolean ( Boolean . TRUE ) ; <nl> + prop . setLanguageKey ( " forge . configgui . forgeLightPipelineEnabled " ) ; <nl> propOrder . add ( prop . getName ( ) ) ; <nl> <nl> config . setCategoryPropertyOrder ( CATEGORY _ GENERAL , propOrder ) ; <nl> @ @ - 296 , 6 + 282 , 7 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC <nl> prop = config . get ( Configuration . CATEGORY _ CLIENT , " java8Reminder " , java8Reminder , <nl> " The timestamp of the last reminder to update to Java 8 in number of milliseconds since January 1 , 1970 , 00 : 00 : 00 GMT . Nag will show only once every 24 hours . To disable it set this to some really high number . " ) ; <nl> java8Reminder = prop . getLong ( java8Reminder ) ; <nl> + prop . setLanguageKey ( " forge . configgui . java8Reminder " ) ; <nl> propOrder . add ( prop . getName ( ) ) ; <nl> <nl> config . setCategoryPropertyOrder ( CATEGORY _ CLIENT , propOrder ) ; <nl> diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang <nl> index 93bc982 . . ab72a1b 100644 <nl> - - - a / src / main / resources / assets / forge / lang / en _ US . lang <nl> + + + b / src / main / resources / assets / forge / lang / en _ US . lang <nl> @ @ - 44 , 8 + 44 , 9 @ @ forge . configgui . zombieBabyChance = Zombie Baby Chance <nl> forge . configgui . zombieBaseSummonChance . tooltip = Base zombie summoning spawn chance . Allows changing the bonus zombie summoning mechanic . <nl> forge . configgui . zombieBaseSummonChance = Zombie Summon Chance <nl> forge . configgui . stencilbits = Enable GL Stencil Bits <nl> - forge . configgui . spawnfuzz = Respawn Fuzz Diameter <nl> - forge . configgui . replaceBuckets = Use Forges ' bucket model <nl> + forge . configgui . replaceBuckets = Use Forge ' s bucket model <nl> + forge . configgui . forgeLightPipelineEnabled = Forge Light Pipeline Enabled <nl> + forge . configgui . java8Reminder = Java 8 Reminder timestamp <nl> <nl> forge . configgui . modID . tooltip = The mod ID that you want to define override settings for . <nl> forge . configgui . modID = Mod ID

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 index f2ebb8f . . 391d1c9 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 @ @ - 219 , 7 + 219 , 7 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 prop = config . get ( CATEGORY _ GENERAL , " sortRecipies " , true ) ; 
 prop . setComment ( " Set to true to enable the post initialization sorting of crafting recipes using Forge ' s sorter . May cause desyncing on conflicting recipes . MUST RESTART MINECRAFT IF CHANGED FROM THE CONFIG GUI . " ) ; 
 prop . setLanguageKey ( " forge . configgui . sortRecipies " ) . setRequiresMcRestart ( true ) ; 
 - shouldSortRecipies = prop . getBoolean ( shouldSortRecipies ) ; 
 + shouldSortRecipies = prop . getBoolean ( true ) ; 
 propOrder . add ( prop . getName ( ) ) ; 
 
 prop = config . get ( Configuration . CATEGORY _ GENERAL , " removeErroringEntities " , false ) ; 
 @ @ - 268 , 9 + 268 , 9 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 zombieBabyChance = ( float ) prop . getDouble ( 0 . 05 ) ; 
 propOrder . add ( prop . getName ( ) ) ; 
 
 - prop = config . get ( Configuration . CATEGORY _ GENERAL , " forgeLightPipelineEnabled " , Boolean . TRUE , 
 + prop = config . get ( Configuration . CATEGORY _ GENERAL , " forgeLightPipelineEnabled " , true , 
 " Enable the forge block rendering pipeline - fixes the lighting of custom models . " ) ; 
 - forgeLightPipelineEnabled = prop . getBoolean ( Boolean . TRUE ) ; 
 + forgeLightPipelineEnabled = prop . getBoolean ( true ) ; 
 prop . setLanguageKey ( " forge . configgui . forgeLightPipelineEnabled " ) ; 
 propOrder . add ( prop . getName ( ) ) ; 
 
 @ @ - 285 , 34 + 285 , 34 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 / / Client - Side only properties 
 propOrder = new ArrayList < String > ( ) ; 
 
 - prop = config . get ( Configuration . CATEGORY _ CLIENT , " replaceVanillaBucketModel " , Boolean . FALSE , 
 + prop = config . get ( Configuration . CATEGORY _ CLIENT , " replaceVanillaBucketModel " , false , 
 " Replace the vanilla bucket models with Forges own dynamic bucket model . Unifies bucket visuals if a mod uses the Forge bucket model . " ) ; 
 prop . setLanguageKey ( " forge . configgui . replaceBuckets " ) . setRequiresMcRestart ( true ) ; 
 - replaceVanillaBucketModel = prop . getBoolean ( Boolean . FALSE ) ; 
 + replaceVanillaBucketModel = prop . getBoolean ( false ) ; 
 propOrder . add ( prop . getName ( ) ) ; 
 
 - prop = config . get ( Configuration . CATEGORY _ CLIENT , " zoomInMissingModelTextInGui " , Boolean . FALSE , 
 + prop = config . get ( Configuration . CATEGORY _ CLIENT , " zoomInMissingModelTextInGui " , false , 
 " Toggle off to make missing model text in the gui fit inside the slot . " ) ; 
 - zoomInMissingModelTextInGui = prop . getBoolean ( Boolean . FALSE ) ; 
 + zoomInMissingModelTextInGui = prop . getBoolean ( false ) ; 
 prop . setLanguageKey ( " forge . configgui . zoomInMissingModelTextInGui " ) ; 
 propOrder . add ( prop . getName ( ) ) ; 
 
 - prop = config . get ( Configuration . CATEGORY _ CLIENT , " java8Reminder " , java8Reminder , 
 + prop = config . get ( Configuration . CATEGORY _ CLIENT , " java8Reminder " , 0 , 
 " The timestamp of the last reminder to update to Java 8 in number of milliseconds since January 1 , 1970 , 00 : 00 : 00 GMT . Nag will show only once every 24 hours . To disable it set this to some really high number . " ) ; 
 - java8Reminder = prop . getLong ( java8Reminder ) ; 
 + java8Reminder = prop . getLong ( 0 ) ; 
 prop . setLanguageKey ( " forge . configgui . java8Reminder " ) ; 
 propOrder . add ( prop . getName ( ) ) ; 
 
 - prop = config . get ( Configuration . CATEGORY _ CLIENT , " disableStairSlabCulling " , disableStairSlabCulling , 
 + prop = config . get ( Configuration . CATEGORY _ CLIENT , " disableStairSlabCulling " , false , 
 " Disable culling of hidden faces next to stairs and slabs . Causes extra rendering , but may fix some resource packs that exploit this vanilla mechanic . " ) ; 
 - disableStairSlabCulling = prop . getBoolean ( disableStairSlabCulling ) ; 
 - prop . setLanguageKey ( " forge . configgui . disableStairSlabCulling " ) . setRequiresMcRestart ( false ) ; 
 + disableStairSlabCulling = prop . getBoolean ( false ) ; 
 + prop . setLanguageKey ( " forge . configgui . disableStairSlabCulling " ) ; 
 propOrder . add ( prop . getName ( ) ) ; 
 
 - prop = config . get ( Configuration . CATEGORY _ CLIENT , " alwaysSetupTerrainOffThread " , Boolean . FALSE , 
 + prop = config . get ( Configuration . CATEGORY _ CLIENT , " alwaysSetupTerrainOffThread " , false , 
 " Enable forge to queue all chunk updates to the Chunk Update thread . May increase FPS significantly , but may also cause weird rendering lag . Not recommended for computers " + 
 " without a significant number of cores available . " ) ; 
 - alwaysSetupTerrainOffThread = prop . getBoolean ( Boolean . FALSE ) ; 
 + alwaysSetupTerrainOffThread = prop . getBoolean ( false ) ; 
 prop . setLanguageKey ( " forge . configgui . alwaysSetupTerrainOffThread " ) ; 
 propOrder . add ( prop . getName ( ) ) ; 


NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / ForgeModContainer . java b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 index 486c161 . . a49b0b1 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeModContainer . java 
 @ @ - 96 , 15 + 96 , 12 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 public static int clumpingThreshold = 64 ; 
 public static boolean removeErroringEntities = false ; 
 public static boolean removeErroringTileEntities = false ; 
 - public static boolean disableStitchedFileSaving = false ; 
 public static boolean fullBoundingBoxLadders = false ; 
 public static double zombieSummonBaseChance = 0 . 1 ; 
 public static int [ ] blendRanges = { 2 , 4 , 6 , 8 , 10 , 12 , 14 , 16 , 18 , 20 , 22 , 24 , 26 , 28 , 30 , 32 , 34 } ; 
 public static float zombieBabyChance = 0 . 05f ; 
 public static boolean shouldSortRecipies = true ; 
 public static boolean disableVersionCheck = false ; 
 - public static int defaultSpawnFuzz = 20 ; 
 - public static boolean defaultHasSpawnFuzz = true ; 
 public static boolean forgeLightPipelineEnabled = true ; 
 public static boolean replaceVanillaBucketModel = true ; 
 public static long java8Reminder = 0 ; 
 @ @ - 182 , 6 + 179 , 11 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 
 Property prop ; 
 
 + / / clean up old properties that are not used anymore 
 + if ( config . getCategory ( CATEGORY _ GENERAL ) . containsKey ( " defaultSpawnFuzz " ) ) config . getCategory ( CATEGORY _ GENERAL ) . remove ( " defaultSpawnFuzz " ) ; 
 + if ( config . getCategory ( CATEGORY _ GENERAL ) . containsKey ( " spawnHasFuzz " ) ) config . getCategory ( CATEGORY _ GENERAL ) . remove ( " spawnHasFuzz " ) ; 
 + if ( config . getCategory ( CATEGORY _ GENERAL ) . containsKey ( " disableStitchedFileSaving " ) ) config . getCategory ( CATEGORY _ GENERAL ) . remove ( " disableStitchedFileSaving " ) ; 
 + 
 prop = config . get ( CATEGORY _ GENERAL , " disableVersionCheck " , false ) ; 
 prop . setComment ( " Set to true to disable Forge ' s version check mechanics . Forge queries a small json file on our server for version information . For more details see the ForgeVersion class in our github . " ) ; 
 / / Language keys are a good idea to implement if you are using config GUIs . This allows you to use a . lang file that will hold the 
 @ @ - 231 , 10 + 233 , 6 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 FMLLog . warning ( " Enabling removal of erroring Tile Entities - USE AT YOUR OWN RISK " ) ; 
 } 
 
 - prop = config . get ( Configuration . CATEGORY _ GENERAL , " disableStitchedFileSaving " , true ) ; 
 - prop . setComment ( " Set this to just disable the texture stitcher from writing the ' { name } _ { mipmap } . png files to disc . Just a small performance tweak . Default : true " ) ; 
 - disableStitchedFileSaving = prop . getBoolean ( true ) ; 
 - 
 prop = config . get ( Configuration . CATEGORY _ GENERAL , " fullBoundingBoxLadders " , false ) ; 
 prop . setComment ( " Set this to true to check the entire entity ' s collision bounding box for ladders instead of just the block they are in . Causes noticeable differences in mechanics so default is vanilla behavior . Default : false " ) ; 
 prop . setLanguageKey ( " forge . configgui . fullBoundingBoxLadders " ) . setRequiresWorldRestart ( true ) ; 
 @ @ - 259 , 22 + 257 , 10 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 zombieBabyChance = ( float ) prop . getDouble ( 0 . 05 ) ; 
 propOrder . add ( prop . getName ( ) ) ; 
 
 - prop = config . get ( Configuration . CATEGORY _ GENERAL , " defaultSpawnFuzz " , 20 , 
 - " The spawn fuzz when a player respawns in the world , this is controllable by WorldType , this config option is for the default overworld . " , 
 - 1 , Integer . MAX _ VALUE ) ; 
 - prop . setLanguageKey ( " forge . configgui . spawnfuzz " ) . setRequiresWorldRestart ( false ) ; 
 - defaultSpawnFuzz = prop . getInt ( 20 ) ; 
 - propOrder . add ( prop . getName ( ) ) ; 
 - 
 - prop = config . get ( Configuration . CATEGORY _ GENERAL , " spawnHasFuzz " , Boolean . TRUE , 
 - " If the overworld has ANY spawn fuzz at all . If not , the spawn will always be the exact same location . " ) ; 
 - prop . setLanguageKey ( " forge . configgui . hasspawnfuzz " ) . setRequiresWorldRestart ( false ) ; 
 - defaultHasSpawnFuzz = prop . getBoolean ( Boolean . TRUE ) ; 
 - propOrder . add ( prop . getName ( ) ) ; 
 - 
 prop = config . get ( Configuration . CATEGORY _ GENERAL , " forgeLightPipelineEnabled " , Boolean . TRUE , 
 " Enable the forge block rendering pipeline - fixes the lighting of custom models . " ) ; 
 forgeLightPipelineEnabled = prop . getBoolean ( Boolean . TRUE ) ; 
 + prop . setLanguageKey ( " forge . configgui . forgeLightPipelineEnabled " ) ; 
 propOrder . add ( prop . getName ( ) ) ; 
 
 config . setCategoryPropertyOrder ( CATEGORY _ GENERAL , propOrder ) ; 
 @ @ - 296 , 6 + 282 , 7 @ @ public class ForgeModContainer extends DummyModContainer implements WorldAccessC 
 prop = config . get ( Configuration . CATEGORY _ CLIENT , " java8Reminder " , java8Reminder , 
 " The timestamp of the last reminder to update to Java 8 in number of milliseconds since January 1 , 1970 , 00 : 00 : 00 GMT . Nag will show only once every 24 hours . To disable it set this to some really high number . " ) ; 
 java8Reminder = prop . getLong ( java8Reminder ) ; 
 + prop . setLanguageKey ( " forge . configgui . java8Reminder " ) ; 
 propOrder . add ( prop . getName ( ) ) ; 
 
 config . setCategoryPropertyOrder ( CATEGORY _ CLIENT , propOrder ) ; 
 diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang 
 index 93bc982 . . ab72a1b 100644 
 - - - a / src / main / resources / assets / forge / lang / en _ US . lang 
 + + + b / src / main / resources / assets / forge / lang / en _ US . lang 
 @ @ - 44 , 8 + 44 , 9 @ @ forge . configgui . zombieBabyChance = Zombie Baby Chance 
 forge . configgui . zombieBaseSummonChance . tooltip = Base zombie summoning spawn chance . Allows changing the bonus zombie summoning mechanic . 
 forge . configgui . zombieBaseSummonChance = Zombie Summon Chance 
 forge . configgui . stencilbits = Enable GL Stencil Bits 
 - forge . configgui . spawnfuzz = Respawn Fuzz Diameter 
 - forge . configgui . replaceBuckets = Use Forges ' bucket model 
 + forge . configgui . replaceBuckets = Use Forge ' s bucket model 
 + forge . configgui . forgeLightPipelineEnabled = Forge Light Pipeline Enabled 
 + forge . configgui . java8Reminder = Java 8 Reminder timestamp 
 
 forge . configgui . modID . tooltip = The mod ID that you want to define override settings for . 
 forge . configgui . modID = Mod ID
