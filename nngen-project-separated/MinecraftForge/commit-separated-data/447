BLEU SCORE: 0.028398387225677897

TEST MSG: Filter any recipe starting with _ , Such names are reserved for metadata .
GENERATED MSG: Fix parseShaped missing Empty slot item . Closes # 3990

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> index bbcb5e3 . . 0db0418 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> @ @ - 710 , 9 + 710 , 7 @ @ public class CraftingHelper { <nl> while ( itr ! = null & & itr . hasNext ( ) ) <nl> { <nl> Path f = itr . next ( ) ; <nl> - if ( ! " json " . equals ( FilenameUtils . getExtension ( f . toString ( ) ) ) | | <nl> - " _ factories . json " . equals ( FilenameUtils . getName ( f . toString ( ) ) ) | | <nl> - " _ constants . json " . equals ( FilenameUtils . getName ( f . toString ( ) ) ) ) <nl> + if ( ! " json " . equals ( FilenameUtils . getExtension ( f . toString ( ) ) ) | | root . relativize ( f ) . toString ( ) . startsWith ( " _ " ) ) <nl> continue ; <nl> <nl> String name = FilenameUtils . removeExtension ( root . relativize ( f ) . toString ( ) ) . replaceAll ( " \ \ \ \ " , " / " ) ; <nl> @ @ - 723 , 6 + 721 , 8 @ @ public class CraftingHelper { <nl> { <nl> reader = Files . newBufferedReader ( f ) ; <nl> JsonObject json = JsonUtils . func _ 193839 _ a ( GSON , reader , JsonObject . class ) ; <nl> + if ( json . has ( " conditions " ) & & ! CraftingHelper . processConditions ( json . getAsJsonArray ( " conditions " ) , ctx ) ) <nl> + continue ; <nl> IRecipe recipe = CraftingHelper . getRecipe ( json , ctx ) ; <nl> ForgeRegistries . RECIPES . register ( recipe . setRegistryName ( key ) ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> index 788f8d1 . . abc31a2 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> @ @ - 308 , 6 + 308 , 7 @ @ public class CraftingHelper { <nl> } <nl> <nl> HashMap < Character , Ingredient > itemMap = Maps . newHashMap ( ) ; <nl> + itemMap . put ( ' ' , Ingredient . field _ 193370 _ a ) ; <nl> <nl> for ( ; idx < recipe . length ; idx + = 2 ) <nl> { <nl> @ @ - 315 , 6 + 316 , 9 @ @ public class CraftingHelper { <nl> Object in = recipe [ idx + 1 ] ; <nl> Ingredient ing = CraftingHelper . getIngredient ( in ) ; <nl> <nl> + if ( ' ' = = chr . charValue ( ) ) <nl> + throw new JsonSyntaxException ( " Invalid key entry : ' ' is a reserved symbol . " ) ; <nl> + <nl> if ( ing ! = null ) <nl> { <nl> itemMap . put ( chr , ing ) ;

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 index bbcb5e3 . . 0db0418 100644 
 - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 @ @ - 710 , 9 + 710 , 7 @ @ public class CraftingHelper { 
 while ( itr ! = null & & itr . hasNext ( ) ) 
 { 
 Path f = itr . next ( ) ; 
 - if ( ! " json " . equals ( FilenameUtils . getExtension ( f . toString ( ) ) ) | | 
 - " _ factories . json " . equals ( FilenameUtils . getName ( f . toString ( ) ) ) | | 
 - " _ constants . json " . equals ( FilenameUtils . getName ( f . toString ( ) ) ) ) 
 + if ( ! " json " . equals ( FilenameUtils . getExtension ( f . toString ( ) ) ) | | root . relativize ( f ) . toString ( ) . startsWith ( " _ " ) ) 
 continue ; 
 
 String name = FilenameUtils . removeExtension ( root . relativize ( f ) . toString ( ) ) . replaceAll ( " \ \ \ \ " , " / " ) ; 
 @ @ - 723 , 6 + 721 , 8 @ @ public class CraftingHelper { 
 { 
 reader = Files . newBufferedReader ( f ) ; 
 JsonObject json = JsonUtils . func _ 193839 _ a ( GSON , reader , JsonObject . class ) ; 
 + if ( json . has ( " conditions " ) & & ! CraftingHelper . processConditions ( json . getAsJsonArray ( " conditions " ) , ctx ) ) 
 + continue ; 
 IRecipe recipe = CraftingHelper . getRecipe ( json , ctx ) ; 
 ForgeRegistries . RECIPES . register ( recipe . setRegistryName ( key ) ) ; 
 }

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 index 788f8d1 . . abc31a2 100644 
 - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 @ @ - 308 , 6 + 308 , 7 @ @ public class CraftingHelper { 
 } 
 
 HashMap < Character , Ingredient > itemMap = Maps . newHashMap ( ) ; 
 + itemMap . put ( ' ' , Ingredient . field _ 193370 _ a ) ; 
 
 for ( ; idx < recipe . length ; idx + = 2 ) 
 { 
 @ @ - 315 , 6 + 316 , 9 @ @ public class CraftingHelper { 
 Object in = recipe [ idx + 1 ] ; 
 Ingredient ing = CraftingHelper . getIngredient ( in ) ; 
 
 + if ( ' ' = = chr . charValue ( ) ) 
 + throw new JsonSyntaxException ( " Invalid key entry : ' ' is a reserved symbol . " ) ; 
 + 
 if ( ing ! = null ) 
 { 
 itemMap . put ( chr , ing ) ;
