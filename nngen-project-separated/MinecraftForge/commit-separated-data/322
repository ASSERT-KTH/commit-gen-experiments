BLEU SCORE: 0.05795599612995367

TEST MSG: Fix entity spawn messages not handling buffer correctly
GENERATED MSG: Fix network buffers not being released in some places

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> index 80822de . . cc7dc3c 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java <nl> @ @ - 60 , 7 + 60 , 9 @ @ public class EntitySpawnHandler extends SimpleChannelInboundHandler < FMLMessage . E <nl> { <nl> if ( msg . getClass ( ) . equals ( FMLMessage . EntitySpawnMessage . class ) ) <nl> { <nl> - spawnEntity ( ( FMLMessage . EntitySpawnMessage ) msg ) ; <nl> + FMLMessage . EntitySpawnMessage spawnMsg = ( FMLMessage . EntitySpawnMessage ) msg ; <nl> + spawnEntity ( spawnMsg ) ; <nl> + spawnMsg . dataStream . release ( ) ; <nl> } <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java <nl> index ba66f26 . . 2c2ecc7 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java <nl> @ @ - 244 , 7 + 244 , 7 @ @ public abstract class FMLMessage { <nl> speedScaledY = dat . readInt ( ) / 8000D ; <nl> speedScaledZ = dat . readInt ( ) / 8000D ; <nl> } <nl> - this . dataStream = dat ; <nl> + this . dataStream = dat . retain ( ) ; <nl> } <nl> } <nl> abstract void toBytes ( ByteBuf buf ) ;
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> index 1318f8f . . 1244a2a 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java <nl> @ @ - 100 , 6 + 100 , 7 @ @ public abstract class FMLIndexedMessageToMessageCodec < A > extends MessageToMessag <nl> ctx . channel ( ) . attr ( INBOUNDPACKETTRACKER ) . get ( ) . set ( new WeakReference < FMLProxyPacket > ( msg ) ) ; <nl> decodeInto ( ctx , payload . slice ( ) , newMsg ) ; <nl> out . add ( newMsg ) ; <nl> + payload . release ( ) ; <nl> } <nl> <nl> / * * <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / network / handshake / ChannelRegistrationHandler . java b / src / main / java / net / minecraftforge / fml / common / network / handshake / ChannelRegistrationHandler . java <nl> index c42021c . . d6074a1 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / handshake / ChannelRegistrationHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / handshake / ChannelRegistrationHandler . java <nl> @ @ - 47 , 6 + 47 , 7 @ @ public class ChannelRegistrationHandler extends SimpleChannelInboundHandler < FMLP <nl> String [ ] split = channels . split ( " \ 0 " ) ; <nl> Set < String > channelSet = ImmutableSet . copyOf ( split ) ; <nl> FMLCommonHandler . instance ( ) . fireNetRegistrationEvent ( manager , channelSet , msg . channel ( ) , side ) ; <nl> + msg . payload ( ) . release ( ) ; <nl> } <nl> else <nl> {

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 index 80822de . . cc7dc3c 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / EntitySpawnHandler . java 
 @ @ - 60 , 7 + 60 , 9 @ @ public class EntitySpawnHandler extends SimpleChannelInboundHandler < FMLMessage . E 
 { 
 if ( msg . getClass ( ) . equals ( FMLMessage . EntitySpawnMessage . class ) ) 
 { 
 - spawnEntity ( ( FMLMessage . EntitySpawnMessage ) msg ) ; 
 + FMLMessage . EntitySpawnMessage spawnMsg = ( FMLMessage . EntitySpawnMessage ) msg ; 
 + spawnEntity ( spawnMsg ) ; 
 + spawnMsg . dataStream . release ( ) ; 
 } 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java 
 index ba66f26 . . 2c2ecc7 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLMessage . java 
 @ @ - 244 , 7 + 244 , 7 @ @ public abstract class FMLMessage { 
 speedScaledY = dat . readInt ( ) / 8000D ; 
 speedScaledZ = dat . readInt ( ) / 8000D ; 
 } 
 - this . dataStream = dat ; 
 + this . dataStream = dat . retain ( ) ; 
 } 
 } 
 abstract void toBytes ( ByteBuf buf ) ;

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 index 1318f8f . . 1244a2a 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / FMLIndexedMessageToMessageCodec . java 
 @ @ - 100 , 6 + 100 , 7 @ @ public abstract class FMLIndexedMessageToMessageCodec < A > extends MessageToMessag 
 ctx . channel ( ) . attr ( INBOUNDPACKETTRACKER ) . get ( ) . set ( new WeakReference < FMLProxyPacket > ( msg ) ) ; 
 decodeInto ( ctx , payload . slice ( ) , newMsg ) ; 
 out . add ( newMsg ) ; 
 + payload . release ( ) ; 
 } 
 
 / * * 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / network / handshake / ChannelRegistrationHandler . java b / src / main / java / net / minecraftforge / fml / common / network / handshake / ChannelRegistrationHandler . java 
 index c42021c . . d6074a1 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / handshake / ChannelRegistrationHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / handshake / ChannelRegistrationHandler . java 
 @ @ - 47 , 6 + 47 , 7 @ @ public class ChannelRegistrationHandler extends SimpleChannelInboundHandler < FMLP 
 String [ ] split = channels . split ( " \ 0 " ) ; 
 Set < String > channelSet = ImmutableSet . copyOf ( split ) ; 
 FMLCommonHandler . instance ( ) . fireNetRegistrationEvent ( manager , channelSet , msg . channel ( ) , side ) ; 
 + msg . payload ( ) . release ( ) ; 
 } 
 else 
 {
