BLEU SCORE: 0.014199193612838947

TEST MSG: FMLNetworkHandler . openGui should not try and open a GUI on a FakePlayer .
GENERATED MSG: Add exception logging to forge channel handlers as well

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> index 01ac4a2 . . 657bb22 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java <nl> @ @ - 29 , 6 + 29 , 7 @ @ import net . minecraft . network . NetworkManager ; <nl> import net . minecraft . network . Packet ; <nl> import net . minecraft . server . management . ServerConfigurationManager ; <nl> import net . minecraft . world . World ; <nl> + import net . minecraftforge . common . util . FakePlayer ; <nl> import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> import net . minecraftforge . fml . common . FMLContainer ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> @ @ - 73 , 7 + 74 , 7 @ @ public class FMLNetworkHandler <nl> public static void openGui ( EntityPlayer entityPlayer , Object mod , int modGuiId , World world , int x , int y , int z ) <nl> { <nl> ModContainer mc = FMLCommonHandler . instance ( ) . findContainerFor ( mod ) ; <nl> - if ( entityPlayer instanceof EntityPlayerMP ) <nl> + if ( entityPlayer instanceof EntityPlayerMP & & ! ( entityPlayer instanceof FakePlayer ) ) <nl> { <nl> EntityPlayerMP entityPlayerMP = ( EntityPlayerMP ) entityPlayer ; <nl> Container remoteGuiContainer = NetworkRegistry . INSTANCE . getRemoteGuiContainer ( mc , entityPlayerMP , modGuiId , world , x , y , z ) ; <nl> @ @ - 92 , 6 + 93 , 10 @ @ public class FMLNetworkHandler <nl> entityPlayerMP . openContainer . addCraftingToCrafters ( entityPlayerMP ) ; <nl> } <nl> } <nl> + else if ( entityPlayer instanceof FakePlayer ) <nl> + { <nl> + / / NO OP - I won ' t even log a message ! <nl> + } <nl> else if ( FMLCommonHandler . instance ( ) . getSide ( ) . equals ( Side . CLIENT ) ) <nl> { <nl> Object guiContainer = NetworkRegistry . INSTANCE . getLocalGuiContainer ( mc , entityPlayer , modGuiId , world , x , y , z ) ;
NEAREST DIFF (one line): diff - - git a / fml b / fml <nl> index 9c96ca4 . . 53557dc 160000 <nl> - - - a / fml <nl> + + + b / fml <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit 9c96ca4402e4c231285f170281dd543bfffa191a <nl> + Subproject commit 53557dcd0582e09f7f35eb3bc2fd130fba3be4a0 <nl> diff - - git a / src / main / java / net / minecraftforge / common / network / DimensionMessageHandler . java b / src / main / java / net / minecraftforge / common / network / DimensionMessageHandler . java <nl> index ae6dc23 . . 7922109 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / network / DimensionMessageHandler . java <nl> + + + b / src / main / java / net / minecraftforge / common / network / DimensionMessageHandler . java <nl> @ @ - 1 , 10 + 1 , 11 @ @ <nl> package net . minecraftforge . common . network ; <nl> <nl> - import net . minecraft . entity . player . EntityPlayerMP ; <nl> - import net . minecraftforge . common . DimensionManager ; <nl> - import net . minecraftforge . common . network . ForgeMessage . DimensionRegisterMessage ; <nl> import io . netty . channel . ChannelHandlerContext ; <nl> import io . netty . channel . SimpleChannelInboundHandler ; <nl> + import net . minecraftforge . common . DimensionManager ; <nl> + import net . minecraftforge . common . network . ForgeMessage . DimensionRegisterMessage ; <nl> + import org . apache . logging . log4j . Level ; <nl> + import cpw . mods . fml . common . FMLLog ; <nl> <nl> public class DimensionMessageHandler extends SimpleChannelInboundHandler < ForgeMessage . DimensionRegisterMessage > { <nl> @ Override <nl> @ @ - 15 , 5 + 16 , 11 @ @ public class DimensionMessageHandler extends SimpleChannelInboundHandler < ForgeMe <nl> DimensionManager . registerDimension ( msg . dimensionId , msg . providerId ) ; <nl> } <nl> } <nl> + @ Override <nl> + public void exceptionCaught ( ChannelHandlerContext ctx , Throwable cause ) throws Exception <nl> + { <nl> + FMLLog . log ( Level . ERROR , cause , " DimensionMessageHandler exception " ) ; <nl> + super . exceptionCaught ( ctx , cause ) ; <nl> + } <nl> <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / network / FluidIdRegistryMessageHandler . java b / src / main / java / net / minecraftforge / common / network / FluidIdRegistryMessageHandler . java <nl> index 7ba0825 . . 8694113 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / network / FluidIdRegistryMessageHandler . java <nl> + + + b / src / main / java / net / minecraftforge / common / network / FluidIdRegistryMessageHandler . java <nl> @ @ - 1 , 5 + 1 , 7 @ @ <nl> package net . minecraftforge . common . network ; <nl> <nl> + import org . apache . logging . log4j . Level ; <nl> + import cpw . mods . fml . common . FMLLog ; <nl> import io . netty . channel . ChannelHandlerContext ; <nl> import io . netty . channel . SimpleChannelInboundHandler ; <nl> <nl> @ @ - 9 , 4 + 11 , 11 @ @ public class FluidIdRegistryMessageHandler extends SimpleChannelInboundHandler < F <nl> { <nl> / / Do something with the message <nl> } <nl> + @ Override <nl> + public void exceptionCaught ( ChannelHandlerContext ctx , Throwable cause ) throws Exception <nl> + { <nl> + FMLLog . log ( Level . ERROR , cause , " FluidIdRegistryMessageHandler exception " ) ; <nl> + super . exceptionCaught ( ctx , cause ) ; <nl> + } <nl> + <nl> }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 index 01ac4a2 . . 657bb22 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / network / internal / FMLNetworkHandler . java 
 @ @ - 29 , 6 + 29 , 7 @ @ import net . minecraft . network . NetworkManager ; 
 import net . minecraft . network . Packet ; 
 import net . minecraft . server . management . ServerConfigurationManager ; 
 import net . minecraft . world . World ; 
 + import net . minecraftforge . common . util . FakePlayer ; 
 import net . minecraftforge . fml . common . FMLCommonHandler ; 
 import net . minecraftforge . fml . common . FMLContainer ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 @ @ - 73 , 7 + 74 , 7 @ @ public class FMLNetworkHandler 
 public static void openGui ( EntityPlayer entityPlayer , Object mod , int modGuiId , World world , int x , int y , int z ) 
 { 
 ModContainer mc = FMLCommonHandler . instance ( ) . findContainerFor ( mod ) ; 
 - if ( entityPlayer instanceof EntityPlayerMP ) 
 + if ( entityPlayer instanceof EntityPlayerMP & & ! ( entityPlayer instanceof FakePlayer ) ) 
 { 
 EntityPlayerMP entityPlayerMP = ( EntityPlayerMP ) entityPlayer ; 
 Container remoteGuiContainer = NetworkRegistry . INSTANCE . getRemoteGuiContainer ( mc , entityPlayerMP , modGuiId , world , x , y , z ) ; 
 @ @ - 92 , 6 + 93 , 10 @ @ public class FMLNetworkHandler 
 entityPlayerMP . openContainer . addCraftingToCrafters ( entityPlayerMP ) ; 
 } 
 } 
 + else if ( entityPlayer instanceof FakePlayer ) 
 + { 
 + / / NO OP - I won ' t even log a message ! 
 + } 
 else if ( FMLCommonHandler . instance ( ) . getSide ( ) . equals ( Side . CLIENT ) ) 
 { 
 Object guiContainer = NetworkRegistry . INSTANCE . getLocalGuiContainer ( mc , entityPlayer , modGuiId , world , x , y , z ) ;

NEAREST DIFF:
diff - - git a / fml b / fml 
 index 9c96ca4 . . 53557dc 160000 
 - - - a / fml 
 + + + b / fml 
 @ @ - 1 + 1 @ @ 
 - Subproject commit 9c96ca4402e4c231285f170281dd543bfffa191a 
 + Subproject commit 53557dcd0582e09f7f35eb3bc2fd130fba3be4a0 
 diff - - git a / src / main / java / net / minecraftforge / common / network / DimensionMessageHandler . java b / src / main / java / net / minecraftforge / common / network / DimensionMessageHandler . java 
 index ae6dc23 . . 7922109 100644 
 - - - a / src / main / java / net / minecraftforge / common / network / DimensionMessageHandler . java 
 + + + b / src / main / java / net / minecraftforge / common / network / DimensionMessageHandler . java 
 @ @ - 1 , 10 + 1 , 11 @ @ 
 package net . minecraftforge . common . network ; 
 
 - import net . minecraft . entity . player . EntityPlayerMP ; 
 - import net . minecraftforge . common . DimensionManager ; 
 - import net . minecraftforge . common . network . ForgeMessage . DimensionRegisterMessage ; 
 import io . netty . channel . ChannelHandlerContext ; 
 import io . netty . channel . SimpleChannelInboundHandler ; 
 + import net . minecraftforge . common . DimensionManager ; 
 + import net . minecraftforge . common . network . ForgeMessage . DimensionRegisterMessage ; 
 + import org . apache . logging . log4j . Level ; 
 + import cpw . mods . fml . common . FMLLog ; 
 
 public class DimensionMessageHandler extends SimpleChannelInboundHandler < ForgeMessage . DimensionRegisterMessage > { 
 @ Override 
 @ @ - 15 , 5 + 16 , 11 @ @ public class DimensionMessageHandler extends SimpleChannelInboundHandler < ForgeMe 
 DimensionManager . registerDimension ( msg . dimensionId , msg . providerId ) ; 
 } 
 } 
 + @ Override 
 + public void exceptionCaught ( ChannelHandlerContext ctx , Throwable cause ) throws Exception 
 + { 
 + FMLLog . log ( Level . ERROR , cause , " DimensionMessageHandler exception " ) ; 
 + super . exceptionCaught ( ctx , cause ) ; 
 + } 
 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / network / FluidIdRegistryMessageHandler . java b / src / main / java / net / minecraftforge / common / network / FluidIdRegistryMessageHandler . java 
 index 7ba0825 . . 8694113 100644 
 - - - a / src / main / java / net / minecraftforge / common / network / FluidIdRegistryMessageHandler . java 
 + + + b / src / main / java / net / minecraftforge / common / network / FluidIdRegistryMessageHandler . java 
 @ @ - 1 , 5 + 1 , 7 @ @ 
 package net . minecraftforge . common . network ; 
 
 + import org . apache . logging . log4j . Level ; 
 + import cpw . mods . fml . common . FMLLog ; 
 import io . netty . channel . ChannelHandlerContext ; 
 import io . netty . channel . SimpleChannelInboundHandler ; 
 
 @ @ - 9 , 4 + 11 , 11 @ @ public class FluidIdRegistryMessageHandler extends SimpleChannelInboundHandler < F 
 { 
 / / Do something with the message 
 } 
 + @ Override 
 + public void exceptionCaught ( ChannelHandlerContext ctx , Throwable cause ) throws Exception 
 + { 
 + FMLLog . log ( Level . ERROR , cause , " FluidIdRegistryMessageHandler exception " ) ; 
 + super . exceptionCaught ( ctx , cause ) ; 
 + } 
 + 
 }
