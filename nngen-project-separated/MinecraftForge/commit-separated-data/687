BLEU SCORE: 0.12605968092174913

TEST MSG: Fix Thorns enchantment bypassing ISpecialArmor . damageArmor function . Closes # 2463
GENERATED MSG: Added support for custom dyes with Banners . Closes # 2596

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / enchantment / EnchantmentThorns . java . patch b / patches / minecraft / net / minecraft / enchantment / EnchantmentThorns . java . patch <nl> new file mode 100644 <nl> index 0000000 . . fb21368 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / enchantment / EnchantmentThorns . java . patch <nl> @ @ - 0 , 0 + 1 , 43 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / enchantment / EnchantmentThorns . java <nl> + + + + . . / src - work / minecraft / net / minecraft / enchantment / EnchantmentThorns . java <nl> + @ @ - 51 , 12 + 51 , 12 @ @ <nl> + <nl> + if ( itemstack ! = null ) <nl> + { <nl> + - itemstack . func _ 77972 _ a ( 3 , p _ 151367 _ 1 _ ) ; <nl> + + damageArmor ( itemstack , 3 , p _ 151367 _ 1 _ ) ; <nl> + } <nl> + } <nl> + else if ( itemstack ! = null ) <nl> + { <nl> + - itemstack . func _ 77972 _ a ( 1 , p _ 151367 _ 1 _ ) ; <nl> + + damageArmor ( itemstack , 1 , p _ 151367 _ 1 _ ) ; <nl> + } <nl> + } <nl> + <nl> + @ @ - 69 , 4 + 69 , 25 @ @ <nl> + { <nl> + return p _ 92095 _ 0 _ > 10 ? p _ 92095 _ 0 _ - 10 : 1 + p _ 92095 _ 1 _ . nextInt ( 4 ) ; <nl> + } <nl> + + <nl> + + private void damageArmor ( ItemStack stack , int amount , EntityLivingBase entity ) <nl> + + { <nl> + + int slot = - 1 ; <nl> + + int x = 0 ; <nl> + + for ( ItemStack i : entity . func _ 184193 _ aE ( ) ) <nl> + + { <nl> + + if ( i = = stack ) { <nl> + + slot = x ; <nl> + + break ; <nl> + + } <nl> + + x + + ; <nl> + + } <nl> + + if ( slot = = - 1 | | ! ( stack . func _ 77973 _ b ( ) instanceof net . minecraftforge . common . ISpecialArmor ) ) <nl> + + { <nl> + + stack . func _ 77972 _ a ( 1 , entity ) ; <nl> + + return ; <nl> + + } <nl> + + net . minecraftforge . common . ISpecialArmor armor = ( net . minecraftforge . common . ISpecialArmor ) stack . func _ 77973 _ b ( ) ; <nl> + + armor . damageArmor ( entity , stack , DamageSource . func _ 92087 _ a ( entity ) , amount , slot ) ; <nl> + + } <nl> + }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / item / crafting / RecipesBanners . java . patch b / patches / minecraft / net / minecraft / item / crafting / RecipesBanners . java . patch <nl> index bddf21f . . d5afab9 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / crafting / RecipesBanners . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / crafting / RecipesBanners . java . patch <nl> @ @ - 1 , 6 + 1 , 19 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / item / crafting / RecipesBanners . java <nl> + + + . . / src - work / minecraft / net / minecraft / item / crafting / RecipesBanners . java <nl> - @ @ - 135 , 11 + 135 , 7 @ @ <nl> + @ @ - 89 , 9 + 89 , 10 @ @ <nl> + { <nl> + ItemStack itemstack2 = p _ 77572 _ 1 _ . func _ 70301 _ a ( j ) ; <nl> + <nl> + - if ( itemstack2 ! = null & & itemstack2 . func _ 77973 _ b ( ) = = Items . field _ 151100 _ aR ) <nl> + + int color = getColor ( itemstack2 ) ; <nl> + + if ( color ! = - 1 ) <nl> + { <nl> + - k = itemstack2 . func _ 77960 _ j ( ) ; <nl> + + k = color ; <nl> + break ; <nl> + } <nl> + } <nl> + @ @ - 135 , 11 + 136 , 7 @ @ <nl> for ( int i = 0 ; i < aitemstack . length ; + + i ) <nl> { <nl> ItemStack itemstack = p _ 179532 _ 1 _ . func _ 70301 _ a ( i ) ; <nl> @ @ - 13 , 7 + 26 , 64 @ @ <nl> } <nl> <nl> return aitemstack ; <nl> - @ @ - 356 , 9 + 352 , 9 @ @ <nl> + @ @ - 164 , 7 + 161 , 7 @ @ <nl> + <nl> + if ( itemstack ! = null & & itemstack . func _ 77973 _ b ( ) ! = Items . field _ 179564 _ cE ) <nl> + { <nl> + - if ( itemstack . func _ 77973 _ b ( ) = = Items . field _ 151100 _ aR ) <nl> + + if ( isDye ( itemstack ) ) <nl> + { <nl> + if ( flag2 ) <nl> + { <nl> + @ @ - 204 , 7 + 201 , 7 @ @ <nl> + <nl> + if ( itemstack1 ! = null & & itemstack1 . func _ 77973 _ b ( ) ! = Items . field _ 179564 _ cE ) <nl> + { <nl> + - if ( itemstack1 . func _ 77973 _ b ( ) ! = Items . field _ 151100 _ aR ) <nl> + + if ( ! isDye ( itemstack1 ) ) <nl> + { <nl> + flag = false ; <nl> + break ; <nl> + @ @ - 245 , 6 + 242 , 38 @ @ <nl> + <nl> + return null ; <nl> + } <nl> + + <nl> + + private static String [ ] colors = { " Black " , " Red " , " Green " , " Brown " , " Blue " , " Purple " , " Cyan " , " LightGray " , " Gray " , " Pink " , " Lime " , " Yellow " , " LightBlue " , " Magenta " , " Orange " , " White " } ; <nl> + + @ SuppressWarnings ( " unchecked " ) / / Why java . . . <nl> + + private static java . util . List < ItemStack > [ ] colored = new java . util . List [ colors . length ] ; <nl> + + private static java . util . List < ItemStack > dyes ; <nl> + + private static boolean hasInit = false ; <nl> + + private static void init ( ) <nl> + + { <nl> + + if ( hasInit ) return ; <nl> + + for ( int x = 0 ; x < colors . length ; x + + ) <nl> + + colored [ x ] = net . minecraftforge . oredict . OreDictionary . getOres ( " dye " + colors [ x ] ) ; <nl> + + dyes = net . minecraftforge . oredict . OreDictionary . getOres ( " dye " ) ; <nl> + + hasInit = true ; <nl> + + } <nl> + + private boolean isDye ( ItemStack stack ) <nl> + + { <nl> + + init ( ) ; <nl> + + for ( ItemStack ore : dyes ) <nl> + + if ( net . minecraftforge . oredict . OreDictionary . itemMatches ( ore , stack , false ) ) <nl> + + return true ; <nl> + + return false ; <nl> + + } <nl> + + private int getColor ( ItemStack stack ) <nl> + + { <nl> + + init ( ) ; <nl> + + if ( stack = = null ) return - 1 ; <nl> + + for ( int x = 0 ; x < colored . length ; x + + ) <nl> + + for ( ItemStack ore : colored [ x ] ) <nl> + + if ( net . minecraftforge . oredict . OreDictionary . itemMatches ( ore , stack , true ) ) <nl> + + return x ; <nl> + + return - 1 ; <nl> + + } <nl> + } <nl> + <nl> + public static class RecipeDuplicatePattern implements IRecipe <nl> + @ @ - 356 , 9 + 385 , 9 @ @ <nl> <nl> if ( itemstack ! = null ) <nl> {

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / enchantment / EnchantmentThorns . java . patch b / patches / minecraft / net / minecraft / enchantment / EnchantmentThorns . java . patch 
 new file mode 100644 
 index 0000000 . . fb21368 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / enchantment / EnchantmentThorns . java . patch 
 @ @ - 0 , 0 + 1 , 43 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / enchantment / EnchantmentThorns . java 
 + + + + . . / src - work / minecraft / net / minecraft / enchantment / EnchantmentThorns . java 
 + @ @ - 51 , 12 + 51 , 12 @ @ 
 + 
 + if ( itemstack ! = null ) 
 + { 
 + - itemstack . func _ 77972 _ a ( 3 , p _ 151367 _ 1 _ ) ; 
 + + damageArmor ( itemstack , 3 , p _ 151367 _ 1 _ ) ; 
 + } 
 + } 
 + else if ( itemstack ! = null ) 
 + { 
 + - itemstack . func _ 77972 _ a ( 1 , p _ 151367 _ 1 _ ) ; 
 + + damageArmor ( itemstack , 1 , p _ 151367 _ 1 _ ) ; 
 + } 
 + } 
 + 
 + @ @ - 69 , 4 + 69 , 25 @ @ 
 + { 
 + return p _ 92095 _ 0 _ > 10 ? p _ 92095 _ 0 _ - 10 : 1 + p _ 92095 _ 1 _ . nextInt ( 4 ) ; 
 + } 
 + + 
 + + private void damageArmor ( ItemStack stack , int amount , EntityLivingBase entity ) 
 + + { 
 + + int slot = - 1 ; 
 + + int x = 0 ; 
 + + for ( ItemStack i : entity . func _ 184193 _ aE ( ) ) 
 + + { 
 + + if ( i = = stack ) { 
 + + slot = x ; 
 + + break ; 
 + + } 
 + + x + + ; 
 + + } 
 + + if ( slot = = - 1 | | ! ( stack . func _ 77973 _ b ( ) instanceof net . minecraftforge . common . ISpecialArmor ) ) 
 + + { 
 + + stack . func _ 77972 _ a ( 1 , entity ) ; 
 + + return ; 
 + + } 
 + + net . minecraftforge . common . ISpecialArmor armor = ( net . minecraftforge . common . ISpecialArmor ) stack . func _ 77973 _ b ( ) ; 
 + + armor . damageArmor ( entity , stack , DamageSource . func _ 92087 _ a ( entity ) , amount , slot ) ; 
 + + } 
 + }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / item / crafting / RecipesBanners . java . patch b / patches / minecraft / net / minecraft / item / crafting / RecipesBanners . java . patch 
 index bddf21f . . d5afab9 100644 
 - - - a / patches / minecraft / net / minecraft / item / crafting / RecipesBanners . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / crafting / RecipesBanners . java . patch 
 @ @ - 1 , 6 + 1 , 19 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / item / crafting / RecipesBanners . java 
 + + + . . / src - work / minecraft / net / minecraft / item / crafting / RecipesBanners . java 
 - @ @ - 135 , 11 + 135 , 7 @ @ 
 + @ @ - 89 , 9 + 89 , 10 @ @ 
 + { 
 + ItemStack itemstack2 = p _ 77572 _ 1 _ . func _ 70301 _ a ( j ) ; 
 + 
 + - if ( itemstack2 ! = null & & itemstack2 . func _ 77973 _ b ( ) = = Items . field _ 151100 _ aR ) 
 + + int color = getColor ( itemstack2 ) ; 
 + + if ( color ! = - 1 ) 
 + { 
 + - k = itemstack2 . func _ 77960 _ j ( ) ; 
 + + k = color ; 
 + break ; 
 + } 
 + } 
 + @ @ - 135 , 11 + 136 , 7 @ @ 
 for ( int i = 0 ; i < aitemstack . length ; + + i ) 
 { 
 ItemStack itemstack = p _ 179532 _ 1 _ . func _ 70301 _ a ( i ) ; 
 @ @ - 13 , 7 + 26 , 64 @ @ 
 } 
 
 return aitemstack ; 
 - @ @ - 356 , 9 + 352 , 9 @ @ 
 + @ @ - 164 , 7 + 161 , 7 @ @ 
 + 
 + if ( itemstack ! = null & & itemstack . func _ 77973 _ b ( ) ! = Items . field _ 179564 _ cE ) 
 + { 
 + - if ( itemstack . func _ 77973 _ b ( ) = = Items . field _ 151100 _ aR ) 
 + + if ( isDye ( itemstack ) ) 
 + { 
 + if ( flag2 ) 
 + { 
 + @ @ - 204 , 7 + 201 , 7 @ @ 
 + 
 + if ( itemstack1 ! = null & & itemstack1 . func _ 77973 _ b ( ) ! = Items . field _ 179564 _ cE ) 
 + { 
 + - if ( itemstack1 . func _ 77973 _ b ( ) ! = Items . field _ 151100 _ aR ) 
 + + if ( ! isDye ( itemstack1 ) ) 
 + { 
 + flag = false ; 
 + break ; 
 + @ @ - 245 , 6 + 242 , 38 @ @ 
 + 
 + return null ; 
 + } 
 + + 
 + + private static String [ ] colors = { " Black " , " Red " , " Green " , " Brown " , " Blue " , " Purple " , " Cyan " , " LightGray " , " Gray " , " Pink " , " Lime " , " Yellow " , " LightBlue " , " Magenta " , " Orange " , " White " } ; 
 + + @ SuppressWarnings ( " unchecked " ) / / Why java . . . 
 + + private static java . util . List < ItemStack > [ ] colored = new java . util . List [ colors . length ] ; 
 + + private static java . util . List < ItemStack > dyes ; 
 + + private static boolean hasInit = false ; 
 + + private static void init ( ) 
 + + { 
 + + if ( hasInit ) return ; 
 + + for ( int x = 0 ; x < colors . length ; x + + ) 
 + + colored [ x ] = net . minecraftforge . oredict . OreDictionary . getOres ( " dye " + colors [ x ] ) ; 
 + + dyes = net . minecraftforge . oredict . OreDictionary . getOres ( " dye " ) ; 
 + + hasInit = true ; 
 + + } 
 + + private boolean isDye ( ItemStack stack ) 
 + + { 
 + + init ( ) ; 
 + + for ( ItemStack ore : dyes ) 
 + + if ( net . minecraftforge . oredict . OreDictionary . itemMatches ( ore , stack , false ) ) 
 + + return true ; 
 + + return false ; 
 + + } 
 + + private int getColor ( ItemStack stack ) 
 + + { 
 + + init ( ) ; 
 + + if ( stack = = null ) return - 1 ; 
 + + for ( int x = 0 ; x < colored . length ; x + + ) 
 + + for ( ItemStack ore : colored [ x ] ) 
 + + if ( net . minecraftforge . oredict . OreDictionary . itemMatches ( ore , stack , true ) ) 
 + + return x ; 
 + + return - 1 ; 
 + + } 
 + } 
 + 
 + public static class RecipeDuplicatePattern implements IRecipe 
 + @ @ - 356 , 9 + 385 , 9 @ @ 
 
 if ( itemstack ! = null ) 
 {
