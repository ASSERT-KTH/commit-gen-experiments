BLEU SCORE: 0.02735488212061132

TEST MSG: Lets just simply this . Fixes last commit .
GENERATED MSG: Add modder facing API for Villager Career level trades . Ref : # 2854

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java <nl> index bfb9fd17 . . 650a7f8 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java <nl> @ @ - 228 , 7 + 228 , 6 @ @ public class VillagerRegistry <nl> private String name ; <nl> private int id ; <nl> private List < List < ITradeList > > trades = Lists . newArrayList ( ) ; <nl> - private List < List < ITradeList > > imm = Lists . newArrayList ( ) ; <nl> <nl> public VillagerCareer ( VillagerProfession parent , String name ) <nl> { <nl> @ @ - 251 , 20 + 250 , 16 @ @ public class VillagerRegistry <nl> List < ITradeList > levelTrades = level < = this . trades . size ( ) ? this . trades . get ( level - 1 ) : null ; <nl> if ( levelTrades = = null ) <nl> { <nl> - List < ITradeList > tmp = null ; <nl> while ( this . trades . size ( ) < level ) <nl> { <nl> - tmp = Lists . newArrayList ( ) ; <nl> - this . trades . add ( tmp ) ; <nl> - this . imm . add ( Collections . unmodifiableList ( tmp ) ) ; <nl> + levelTrades = Lists . newArrayList ( ) ; <nl> + this . trades . add ( levelTrades ) ; <nl> } <nl> - levelTrades = tmp ; <nl> } <nl> if ( levelTrades = = null ) / / Not sure how this could happen , but screw it <nl> { <nl> levelTrades = Lists . newArrayList ( ) ; <nl> this . trades . set ( level - 1 , levelTrades ) ; <nl> - this . imm . set ( level - 1 , Collections . unmodifiableList ( levelTrades ) ) ; <nl> } <nl> for ( ITradeList t : trades ) <nl> levelTrades . add ( t ) ; <nl> @ @ - 274 , 7 + 269 , 7 @ @ public class VillagerRegistry <nl> <nl> public List < ITradeList > getTrades ( int level ) <nl> { <nl> - return level > = 0 & & level < this . imm . size ( ) ? this . imm . get ( level ) : null ; <nl> + return level > = 0 & & level < this . trades . size ( ) ? Collections . unmodifiableList ( this . trades . get ( level ) ) : null ; <nl> } <nl> private VillagerCareer init ( EntityVillager . ITradeList [ ] [ ] trades ) <nl> {
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch b / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch <nl> index f6a41fe . . 84bc38a 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch <nl> @ @ - 120 , 16 + 120 , 24 @ @ <nl> this . field _ 175562 _ bw = 1 ; <nl> } <nl> <nl> - @ @ - 552 , 7 + 596 , 7 @ @ <nl> + @ @ - 552 , 13 + 596 , 11 @ @ <nl> <nl> int i = this . field _ 175563 _ bv - 1 ; <nl> int j = this . field _ 175562 _ bw - 1 ; <nl> - EntityVillager . ITradeList [ ] [ ] aentityvillager $ itradelist1 = aentityvillager $ itradelist [ i ] ; <nl> - + EntityVillager . ITradeList [ ] [ ] aentityvillager $ itradelist1 = this . getProfessionForge ( ) . getCareer ( i ) . getTrades ( ) ; <nl> + + java . util . List < EntityVillager . ITradeList > trades = this . getProfessionForge ( ) . getCareer ( i ) . getTrades ( j ) ; <nl> <nl> - if ( j > = 0 & & j < aentityvillager $ itradelist1 . length ) <nl> + - if ( j > = 0 & & j < aentityvillager $ itradelist1 . length ) <nl> + + if ( trades ! = null ) <nl> { <nl> - @ @ - 647 , 9 + 691 , 14 @ @ <nl> + - EntityVillager . ITradeList [ ] aentityvillager $ itradelist2 = aentityvillager $ itradelist1 [ j ] ; <nl> + - <nl> + - for ( EntityVillager . ITradeList entityvillager $ itradelist : aentityvillager $ itradelist2 ) <nl> + + for ( EntityVillager . ITradeList entityvillager $ itradelist : trades ) <nl> + { <nl> + entityvillager $ itradelist . func _ 179401 _ a ( this . field _ 70963 _ i , this . field _ 70146 _ Z ) ; <nl> + } <nl> + @ @ - 647 , 9 + 689 , 14 @ @ <nl> } <nl> } <nl> <nl> @ @ - 145 , 7 + 153 , 7 @ @ <nl> textcomponenttranslation . func _ 150256 _ b ( ) . func _ 150209 _ a ( this . func _ 174823 _ aP ( ) ) ; <nl> textcomponenttranslation . func _ 150256 _ b ( ) . func _ 179989 _ a ( this . func _ 110124 _ au ( ) . toString ( ) ) ; <nl> <nl> - @ @ - 708 , 7 + 757 , 7 @ @ <nl> + @ @ - 708 , 7 + 755 , 7 @ @ <nl> public IEntityLivingData func _ 180482 _ a ( DifficultyInstance p _ 180482 _ 1 _ , IEntityLivingData p _ 180482 _ 2 _ ) <nl> { <nl> p _ 180482 _ 2 _ = super . func _ 180482 _ a ( p _ 180482 _ 1 _ , p _ 180482 _ 2 _ ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java <nl> index 0c02d63 . . bfb9fd17 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java <nl> @ @ - 12 , 11 + 12 , 14 @ @ <nl> <nl> package net . minecraftforge . fml . common . registry ; <nl> <nl> + import java . util . ArrayList ; <nl> + import java . util . Collections ; <nl> import java . util . List ; <nl> import java . util . Map ; <nl> import java . util . Random ; <nl> import java . util . Set ; <nl> <nl> + import com . google . common . collect . ImmutableList ; <nl> import com . google . common . collect . Lists ; <nl> import com . google . common . collect . Maps ; <nl> import org . apache . commons . lang3 . Validate ; <nl> @ @ - 224 , 7 + 227 , 8 @ @ public class VillagerRegistry <nl> private VillagerProfession profession ; <nl> private String name ; <nl> private int id ; <nl> - private ITradeList [ ] [ ] trades ; <nl> + private List < List < ITradeList > > trades = Lists . newArrayList ( ) ; <nl> + private List < List < ITradeList > > imm = Lists . newArrayList ( ) ; <nl> <nl> public VillagerCareer ( VillagerProfession parent , String name ) <nl> { <nl> @ @ - 238 , 14 + 242 , 44 @ @ public class VillagerRegistry <nl> return this . name ; <nl> } <nl> <nl> - public ITradeList [ ] [ ] getTrades ( ) <nl> + <nl> + public VillagerCareer addTrade ( int level , ITradeList . . . trades ) <nl> { <nl> - return this . trades ; <nl> + if ( level < = 0 ) <nl> + throw new IllegalArgumentException ( " Levels start at 1 " ) ; <nl> + <nl> + List < ITradeList > levelTrades = level < = this . trades . size ( ) ? this . trades . get ( level - 1 ) : null ; <nl> + if ( levelTrades = = null ) <nl> + { <nl> + List < ITradeList > tmp = null ; <nl> + while ( this . trades . size ( ) < level ) <nl> + { <nl> + tmp = Lists . newArrayList ( ) ; <nl> + this . trades . add ( tmp ) ; <nl> + this . imm . add ( Collections . unmodifiableList ( tmp ) ) ; <nl> + } <nl> + levelTrades = tmp ; <nl> + } <nl> + if ( levelTrades = = null ) / / Not sure how this could happen , but screw it <nl> + { <nl> + levelTrades = Lists . newArrayList ( ) ; <nl> + this . trades . set ( level - 1 , levelTrades ) ; <nl> + this . imm . set ( level - 1 , Collections . unmodifiableList ( levelTrades ) ) ; <nl> + } <nl> + for ( ITradeList t : trades ) <nl> + levelTrades . add ( t ) ; <nl> + return this ; <nl> } <nl> <nl> + <nl> + public List < ITradeList > getTrades ( int level ) <nl> + { <nl> + return level > = 0 & & level < this . imm . size ( ) ? this . imm . get ( level ) : null ; <nl> + } <nl> private VillagerCareer init ( EntityVillager . ITradeList [ ] [ ] trades ) <nl> { <nl> - this . trades = trades ; <nl> + for ( int x = 0 ; x < trades . length ; x + + ) <nl> + this . trades . add ( Lists . newArrayList ( trades [ x ] ) ) ; <nl> return this ; <nl> } <nl>

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java 
 index bfb9fd17 . . 650a7f8 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java 
 @ @ - 228 , 7 + 228 , 6 @ @ public class VillagerRegistry 
 private String name ; 
 private int id ; 
 private List < List < ITradeList > > trades = Lists . newArrayList ( ) ; 
 - private List < List < ITradeList > > imm = Lists . newArrayList ( ) ; 
 
 public VillagerCareer ( VillagerProfession parent , String name ) 
 { 
 @ @ - 251 , 20 + 250 , 16 @ @ public class VillagerRegistry 
 List < ITradeList > levelTrades = level < = this . trades . size ( ) ? this . trades . get ( level - 1 ) : null ; 
 if ( levelTrades = = null ) 
 { 
 - List < ITradeList > tmp = null ; 
 while ( this . trades . size ( ) < level ) 
 { 
 - tmp = Lists . newArrayList ( ) ; 
 - this . trades . add ( tmp ) ; 
 - this . imm . add ( Collections . unmodifiableList ( tmp ) ) ; 
 + levelTrades = Lists . newArrayList ( ) ; 
 + this . trades . add ( levelTrades ) ; 
 } 
 - levelTrades = tmp ; 
 } 
 if ( levelTrades = = null ) / / Not sure how this could happen , but screw it 
 { 
 levelTrades = Lists . newArrayList ( ) ; 
 this . trades . set ( level - 1 , levelTrades ) ; 
 - this . imm . set ( level - 1 , Collections . unmodifiableList ( levelTrades ) ) ; 
 } 
 for ( ITradeList t : trades ) 
 levelTrades . add ( t ) ; 
 @ @ - 274 , 7 + 269 , 7 @ @ public class VillagerRegistry 
 
 public List < ITradeList > getTrades ( int level ) 
 { 
 - return level > = 0 & & level < this . imm . size ( ) ? this . imm . get ( level ) : null ; 
 + return level > = 0 & & level < this . trades . size ( ) ? Collections . unmodifiableList ( this . trades . get ( level ) ) : null ; 
 } 
 private VillagerCareer init ( EntityVillager . ITradeList [ ] [ ] trades ) 
 {

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch b / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch 
 index f6a41fe . . 84bc38a 100644 
 - - - a / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / passive / EntityVillager . java . patch 
 @ @ - 120 , 16 + 120 , 24 @ @ 
 this . field _ 175562 _ bw = 1 ; 
 } 
 
 - @ @ - 552 , 7 + 596 , 7 @ @ 
 + @ @ - 552 , 13 + 596 , 11 @ @ 
 
 int i = this . field _ 175563 _ bv - 1 ; 
 int j = this . field _ 175562 _ bw - 1 ; 
 - EntityVillager . ITradeList [ ] [ ] aentityvillager $ itradelist1 = aentityvillager $ itradelist [ i ] ; 
 - + EntityVillager . ITradeList [ ] [ ] aentityvillager $ itradelist1 = this . getProfessionForge ( ) . getCareer ( i ) . getTrades ( ) ; 
 + + java . util . List < EntityVillager . ITradeList > trades = this . getProfessionForge ( ) . getCareer ( i ) . getTrades ( j ) ; 
 
 - if ( j > = 0 & & j < aentityvillager $ itradelist1 . length ) 
 + - if ( j > = 0 & & j < aentityvillager $ itradelist1 . length ) 
 + + if ( trades ! = null ) 
 { 
 - @ @ - 647 , 9 + 691 , 14 @ @ 
 + - EntityVillager . ITradeList [ ] aentityvillager $ itradelist2 = aentityvillager $ itradelist1 [ j ] ; 
 + - 
 + - for ( EntityVillager . ITradeList entityvillager $ itradelist : aentityvillager $ itradelist2 ) 
 + + for ( EntityVillager . ITradeList entityvillager $ itradelist : trades ) 
 + { 
 + entityvillager $ itradelist . func _ 179401 _ a ( this . field _ 70963 _ i , this . field _ 70146 _ Z ) ; 
 + } 
 + @ @ - 647 , 9 + 689 , 14 @ @ 
 } 
 } 
 
 @ @ - 145 , 7 + 153 , 7 @ @ 
 textcomponenttranslation . func _ 150256 _ b ( ) . func _ 150209 _ a ( this . func _ 174823 _ aP ( ) ) ; 
 textcomponenttranslation . func _ 150256 _ b ( ) . func _ 179989 _ a ( this . func _ 110124 _ au ( ) . toString ( ) ) ; 
 
 - @ @ - 708 , 7 + 757 , 7 @ @ 
 + @ @ - 708 , 7 + 755 , 7 @ @ 
 public IEntityLivingData func _ 180482 _ a ( DifficultyInstance p _ 180482 _ 1 _ , IEntityLivingData p _ 180482 _ 2 _ ) 
 { 
 p _ 180482 _ 2 _ = super . func _ 180482 _ a ( p _ 180482 _ 1 _ , p _ 180482 _ 2 _ ) ; 
 diff - - git a / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java b / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java 
 index 0c02d63 . . bfb9fd17 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / registry / VillagerRegistry . java 
 @ @ - 12 , 11 + 12 , 14 @ @ 
 
 package net . minecraftforge . fml . common . registry ; 
 
 + import java . util . ArrayList ; 
 + import java . util . Collections ; 
 import java . util . List ; 
 import java . util . Map ; 
 import java . util . Random ; 
 import java . util . Set ; 
 
 + import com . google . common . collect . ImmutableList ; 
 import com . google . common . collect . Lists ; 
 import com . google . common . collect . Maps ; 
 import org . apache . commons . lang3 . Validate ; 
 @ @ - 224 , 7 + 227 , 8 @ @ public class VillagerRegistry 
 private VillagerProfession profession ; 
 private String name ; 
 private int id ; 
 - private ITradeList [ ] [ ] trades ; 
 + private List < List < ITradeList > > trades = Lists . newArrayList ( ) ; 
 + private List < List < ITradeList > > imm = Lists . newArrayList ( ) ; 
 
 public VillagerCareer ( VillagerProfession parent , String name ) 
 { 
 @ @ - 238 , 14 + 242 , 44 @ @ public class VillagerRegistry 
 return this . name ; 
 } 
 
 - public ITradeList [ ] [ ] getTrades ( ) 
 + 
 + public VillagerCareer addTrade ( int level , ITradeList . . . trades ) 
 { 
 - return this . trades ; 
 + if ( level < = 0 ) 
 + throw new IllegalArgumentException ( " Levels start at 1 " ) ; 
 + 
 + List < ITradeList > levelTrades = level < = this . trades . size ( ) ? this . trades . get ( level - 1 ) : null ; 
 + if ( levelTrades = = null ) 
 + { 
 + List < ITradeList > tmp = null ; 
 + while ( this . trades . size ( ) < level ) 
 + { 
 + tmp = Lists . newArrayList ( ) ; 
 + this . trades . add ( tmp ) ; 
 + this . imm . add ( Collections . unmodifiableList ( tmp ) ) ; 
 + } 
 + levelTrades = tmp ; 
 + } 
 + if ( levelTrades = = null ) / / Not sure how this could happen , but screw it 
 + { 
 + levelTrades = Lists . newArrayList ( ) ; 
 + this . trades . set ( level - 1 , levelTrades ) ; 
 + this . imm . set ( level - 1 , Collections . unmodifiableList ( levelTrades ) ) ; 
 + } 
 + for ( ITradeList t : trades ) 
 + levelTrades . add ( t ) ; 
 + return this ; 
 } 
 
 + 
 + public List < ITradeList > getTrades ( int level ) 
 + { 
 + return level > = 0 & & level < this . imm . size ( ) ? this . imm . get ( level ) : null ; 
 + } 
 private VillagerCareer init ( EntityVillager . ITradeList [ ] [ ] trades ) 
 { 
 - this . trades = trades ; 
 + for ( int x = 0 ; x < trades . length ; x + + ) 
 + this . trades . add ( Lists . newArrayList ( trades [ x ] ) ) ; 
 return this ; 
 } 

