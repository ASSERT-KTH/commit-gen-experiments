BLEU SCORE: 0.7071067811865476

TEST MSG: Added PlayerBrewedPotionEvent
GENERATED MSG: Added ItemTooltipEvent

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / inventory / ContainerBrewingStand . java . patch b / patches / minecraft / net / minecraft / inventory / ContainerBrewingStand . java . patch <nl> index 29d7458 . . cee1b84 100644 <nl> - - - a / patches / minecraft / net / minecraft / inventory / ContainerBrewingStand . java . patch <nl> + + + b / patches / minecraft / net / minecraft / inventory / ContainerBrewingStand . java . patch <nl> @ @ - 9 , 7 + 9 , 15 @ @ <nl> } <nl> <nl> public int func _ 75219 _ a ( ) <nl> - @ @ - 245 , 8 + 245 , 7 @ @ <nl> + @ @ - 231 , 6 + 231 , 7 @ @ <nl> + { <nl> + if ( PotionUtils . func _ 185191 _ c ( p _ 82870 _ 2 _ ) ! = PotionTypes . field _ 185230 _ b ) <nl> + { <nl> + + net . minecraftforge . event . ForgeEventFactory . onPlayerBrewedPotion ( p _ 82870 _ 1 _ , p _ 82870 _ 2 _ ) ; <nl> + this . field _ 75244 _ a . func _ 71029 _ a ( AchievementList . field _ 187970 _ B ) ; <nl> + } <nl> + <nl> + @ @ - 245 , 8 + 246 , 7 @ @ <nl> } <nl> else <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> index 0459550 . . aa88ccc 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 67 , 6 + 67 , 7 @ @ import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . common . capabilities . CapabilityDispatcher ; <nl> import net . minecraftforge . common . capabilities . ICapabilityProvider ; <nl> import net . minecraftforge . common . util . BlockSnapshot ; <nl> + import net . minecraftforge . event . brewing . PlayerBrewedPotionEvent ; <nl> import net . minecraftforge . event . brewing . PotionBrewEvent ; <nl> import net . minecraftforge . event . entity . EntityEvent ; <nl> import net . minecraftforge . event . entity . EntityMountEvent ; <nl> @ @ - 488 , 6 + 489 , 11 @ @ public class ForgeEventFactory <nl> { <nl> MinecraftForge . EVENT _ BUS . post ( new PotionBrewEvent . Post ( brewingItemStacks ) ) ; <nl> } <nl> + <nl> + public static void onPlayerBrewedPotion ( EntityPlayer player , ItemStack stack ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . post ( new PlayerBrewedPotionEvent ( player , stack ) ) ; <nl> + } <nl> <nl> public static boolean renderFireOverlay ( EntityPlayer player , float renderPartialTicks ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / event / brewing / PlayerBrewedPotionEvent . java b / src / main / java / net / minecraftforge / event / brewing / PlayerBrewedPotionEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 5c3e80e <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / event / brewing / PlayerBrewedPotionEvent . java <nl> @ @ - 0 , 0 + 1 , 46 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . event . brewing ; <nl> + <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> + import net . minecraft . item . ItemStack ; <nl> + import net . minecraftforge . event . entity . player . PlayerEvent ; <nl> + <nl> + / * * <nl> + * This event is called when a player picks up a potion from a brewing stand . <nl> + * / <nl> + public class PlayerBrewedPotionEvent extends PlayerEvent <nl> + { <nl> + private final ItemStack stack ; <nl> + <nl> + public PlayerBrewedPotionEvent ( EntityPlayer player , ItemStack stack ) <nl> + { <nl> + super ( player ) ; <nl> + this . stack = stack ; <nl> + } <nl> + <nl> + / * * <nl> + * The ItemStack of the potion . <nl> + * / <nl> + public ItemStack getStack ( ) <nl> + { <nl> + return stack ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / common / net / minecraftforge / event / ForgeEventFactory . java b / common / net / minecraftforge / event / ForgeEventFactory . java <nl> index 716a7e0 . . 852f8b7 100644 <nl> - - - a / common / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / common / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 15 , 6 + 15 , 7 @ @ import net . minecraftforge . event . Event . Result ; <nl> import net . minecraftforge . event . entity . living . LivingPackSizeEvent ; <nl> import net . minecraftforge . event . entity . living . LivingSpawnEvent ; <nl> import net . minecraftforge . event . entity . living . LivingSpawnEvent . AllowDespawn ; <nl> + import net . minecraftforge . event . entity . player . ItemTooltipEvent ; <nl> import net . minecraftforge . event . entity . player . PlayerDestroyItemEvent ; <nl> import net . minecraftforge . event . entity . player . PlayerEvent ; <nl> import net . minecraftforge . event . entity . player . PlayerInteractEvent ; <nl> @ @ - 99 , 4 + 100 , 11 @ @ public class ForgeEventFactory <nl> MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> return event . dropChance ; <nl> } <nl> + <nl> + public static ItemTooltipEvent onItemTooltip ( ItemStack itemStack , EntityPlayer entityPlayer , List < String > toolTip , boolean showAdvancedItemTooltips ) <nl> + { <nl> + ItemTooltipEvent event = new ItemTooltipEvent ( itemStack , entityPlayer , toolTip , showAdvancedItemTooltips ) ; <nl> + MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> + return event ; <nl> + } <nl> } <nl> diff - - git a / common / net / minecraftforge / event / entity / player / ItemTooltipEvent . java b / common / net / minecraftforge / event / entity / player / ItemTooltipEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 7194aba <nl> - - - / dev / null <nl> + + + b / common / net / minecraftforge / event / entity / player / ItemTooltipEvent . java <nl> @ @ - 0 , 0 + 1 , 32 @ @ <nl> + package net . minecraftforge . event . entity . player ; <nl> + <nl> + import java . util . List ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> + import net . minecraft . item . ItemStack ; <nl> + <nl> + public class ItemTooltipEvent extends PlayerEvent <nl> + { <nl> + / * * <nl> + * Whether the advanced information on item tooltips is being shown , toggled by F3 + H . <nl> + * / <nl> + public final boolean showAdvancedItemTooltips ; <nl> + / * * <nl> + * The { @ link ItemStack } with the tooltip . <nl> + * / <nl> + public final ItemStack itemStack ; <nl> + / * * <nl> + * The { @ link ItemStack } tooltip . <nl> + * / <nl> + public final List < String > toolTip ; <nl> + <nl> + / * * <nl> + * This event is fired in { @ link ItemStack # getTooltip ( EntityPlayer , boolean ) } , which in turn is called from it ' s respective GUIContainer . <nl> + * / <nl> + public ItemTooltipEvent ( ItemStack itemStack , EntityPlayer entityPlayer , List < String > toolTip , boolean showAdvancedItemTooltips ) <nl> + { <nl> + super ( entityPlayer ) ; <nl> + this . itemStack = itemStack ; <nl> + this . toolTip = toolTip ; <nl> + this . showAdvancedItemTooltips = showAdvancedItemTooltips ; <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / patches / minecraft / net / minecraft / item / ItemStack . java . patch b / patches / minecraft / net / minecraft / item / ItemStack . java . patch <nl> index 0a0f0f6 . . 6f21cf1 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / ItemStack . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / ItemStack . java . patch <nl> @ @ - 1 , 6 + 1 , 14 @ @ <nl> - - - . . / src _ base / minecraft / net / minecraft / item / ItemStack . java <nl> + + + . . / src _ work / minecraft / net / minecraft / item / ItemStack . java <nl> - @ @ - 252 , 7 + 252 , 9 @ @ <nl> + @ @ - 29 , 6 + 29 , 7 @ @ <nl> + import net . minecraft . util . Icon ; <nl> + import net . minecraft . util . StatCollector ; <nl> + import net . minecraft . world . World ; <nl> + + import net . minecraftforge . event . ForgeEventFactory ; <nl> + <nl> + public final class ItemStack <nl> + { <nl> + @ @ - 252 , 7 + 253 , 9 @ @ <nl> * / <nl> public boolean isItemDamaged ( ) <nl> { <nl> @ @ - 11 , 7 + 19 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 260 , 6 + 262 , 10 @ @ <nl> + @ @ - 260 , 6 + 263 , 10 @ @ <nl> * / <nl> public int getItemDamageForDisplay ( ) <nl> { <nl> @ @ - 22 , 7 + 30 , 7 @ @ <nl> return this . itemDamage ; <nl> } <nl> <nl> - @ @ - 268 , 6 + 274 , 10 @ @ <nl> + @ @ - 268 , 6 + 275 , 10 @ @ <nl> * / <nl> public int getItemDamage ( ) <nl> { <nl> @ @ - 33 , 7 + 41 , 7 @ @ <nl> return this . itemDamage ; <nl> } <nl> <nl> - @ @ - 276 , 6 + 286 , 12 @ @ <nl> + @ @ - 276 , 6 + 287 , 12 @ @ <nl> * / <nl> public void setItemDamage ( int par1 ) <nl> { <nl> @ @ - 46 , 7 + 54 , 7 @ @ <nl> this . itemDamage = par1 ; <nl> <nl> if ( this . itemDamage < 0 ) <nl> - @ @ - 289 , 7 + 305 , 7 @ @ <nl> + @ @ - 289 , 7 + 306 , 7 @ @ <nl> * / <nl> public int getMaxDamage ( ) <nl> { <nl> @ @ - 55 , 7 + 63 , 7 @ @ <nl> } <nl> <nl> / * * <nl> - @ @ - 327 , 8 + 343 , 8 @ @ <nl> + @ @ - 327 , 8 + 344 , 8 @ @ <nl> } <nl> } <nl> <nl> @ @ - 66 , 7 + 74 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 396 , 7 + 412 , 7 @ @ <nl> + @ @ - 396 , 7 + 413 , 7 @ @ <nl> * / <nl> public boolean canHarvestBlock ( Block par1Block ) <nl> { <nl> @ @ - 75 , 7 + 83 , 12 @ @ <nl> } <nl> <nl> public boolean func _ 111282 _ a ( EntityPlayer par1EntityPlayer , EntityLivingBase par2EntityLivingBase ) <nl> - @ @ - 737 , 10 + 753 , 16 @ @ <nl> + @ @ - 733 , 14 + 750 , 21 @ @ <nl> + { <nl> + arraylist . add ( " Durability : " + ( this . getMaxDamage ( ) - this . getItemDamageForDisplay ( ) ) + " / " + this . getMaxDamage ( ) ) ; <nl> + } <nl> + + ForgeEventFactory . onItemTooltip ( this , par1EntityPlayer , arraylist , par2 ) ; <nl> + <nl> return arraylist ; <nl> } <nl>

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / inventory / ContainerBrewingStand . java . patch b / patches / minecraft / net / minecraft / inventory / ContainerBrewingStand . java . patch 
 index 29d7458 . . cee1b84 100644 
 - - - a / patches / minecraft / net / minecraft / inventory / ContainerBrewingStand . java . patch 
 + + + b / patches / minecraft / net / minecraft / inventory / ContainerBrewingStand . java . patch 
 @ @ - 9 , 7 + 9 , 15 @ @ 
 } 
 
 public int func _ 75219 _ a ( ) 
 - @ @ - 245 , 8 + 245 , 7 @ @ 
 + @ @ - 231 , 6 + 231 , 7 @ @ 
 + { 
 + if ( PotionUtils . func _ 185191 _ c ( p _ 82870 _ 2 _ ) ! = PotionTypes . field _ 185230 _ b ) 
 + { 
 + + net . minecraftforge . event . ForgeEventFactory . onPlayerBrewedPotion ( p _ 82870 _ 1 _ , p _ 82870 _ 2 _ ) ; 
 + this . field _ 75244 _ a . func _ 71029 _ a ( AchievementList . field _ 187970 _ B ) ; 
 + } 
 + 
 + @ @ - 245 , 8 + 246 , 7 @ @ 
 } 
 else 
 { 
 diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 index 0459550 . . aa88ccc 100644 
 - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 67 , 6 + 67 , 7 @ @ import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . common . capabilities . CapabilityDispatcher ; 
 import net . minecraftforge . common . capabilities . ICapabilityProvider ; 
 import net . minecraftforge . common . util . BlockSnapshot ; 
 + import net . minecraftforge . event . brewing . PlayerBrewedPotionEvent ; 
 import net . minecraftforge . event . brewing . PotionBrewEvent ; 
 import net . minecraftforge . event . entity . EntityEvent ; 
 import net . minecraftforge . event . entity . EntityMountEvent ; 
 @ @ - 488 , 6 + 489 , 11 @ @ public class ForgeEventFactory 
 { 
 MinecraftForge . EVENT _ BUS . post ( new PotionBrewEvent . Post ( brewingItemStacks ) ) ; 
 } 
 + 
 + public static void onPlayerBrewedPotion ( EntityPlayer player , ItemStack stack ) 
 + { 
 + MinecraftForge . EVENT _ BUS . post ( new PlayerBrewedPotionEvent ( player , stack ) ) ; 
 + } 
 
 public static boolean renderFireOverlay ( EntityPlayer player , float renderPartialTicks ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / event / brewing / PlayerBrewedPotionEvent . java b / src / main / java / net / minecraftforge / event / brewing / PlayerBrewedPotionEvent . java 
 new file mode 100644 
 index 0000000 . . 5c3e80e 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / event / brewing / PlayerBrewedPotionEvent . java 
 @ @ - 0 , 0 + 1 , 46 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . event . brewing ; 
 + 
 + import net . minecraft . entity . player . EntityPlayer ; 
 + import net . minecraft . item . ItemStack ; 
 + import net . minecraftforge . event . entity . player . PlayerEvent ; 
 + 
 + / * * 
 + * This event is called when a player picks up a potion from a brewing stand . 
 + * / 
 + public class PlayerBrewedPotionEvent extends PlayerEvent 
 + { 
 + private final ItemStack stack ; 
 + 
 + public PlayerBrewedPotionEvent ( EntityPlayer player , ItemStack stack ) 
 + { 
 + super ( player ) ; 
 + this . stack = stack ; 
 + } 
 + 
 + / * * 
 + * The ItemStack of the potion . 
 + * / 
 + public ItemStack getStack ( ) 
 + { 
 + return stack ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / common / net / minecraftforge / event / ForgeEventFactory . java b / common / net / minecraftforge / event / ForgeEventFactory . java 
 index 716a7e0 . . 852f8b7 100644 
 - - - a / common / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / common / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 15 , 6 + 15 , 7 @ @ import net . minecraftforge . event . Event . Result ; 
 import net . minecraftforge . event . entity . living . LivingPackSizeEvent ; 
 import net . minecraftforge . event . entity . living . LivingSpawnEvent ; 
 import net . minecraftforge . event . entity . living . LivingSpawnEvent . AllowDespawn ; 
 + import net . minecraftforge . event . entity . player . ItemTooltipEvent ; 
 import net . minecraftforge . event . entity . player . PlayerDestroyItemEvent ; 
 import net . minecraftforge . event . entity . player . PlayerEvent ; 
 import net . minecraftforge . event . entity . player . PlayerInteractEvent ; 
 @ @ - 99 , 4 + 100 , 11 @ @ public class ForgeEventFactory 
 MinecraftForge . EVENT _ BUS . post ( event ) ; 
 return event . dropChance ; 
 } 
 + 
 + public static ItemTooltipEvent onItemTooltip ( ItemStack itemStack , EntityPlayer entityPlayer , List < String > toolTip , boolean showAdvancedItemTooltips ) 
 + { 
 + ItemTooltipEvent event = new ItemTooltipEvent ( itemStack , entityPlayer , toolTip , showAdvancedItemTooltips ) ; 
 + MinecraftForge . EVENT _ BUS . post ( event ) ; 
 + return event ; 
 + } 
 } 
 diff - - git a / common / net / minecraftforge / event / entity / player / ItemTooltipEvent . java b / common / net / minecraftforge / event / entity / player / ItemTooltipEvent . java 
 new file mode 100644 
 index 0000000 . . 7194aba 
 - - - / dev / null 
 + + + b / common / net / minecraftforge / event / entity / player / ItemTooltipEvent . java 
 @ @ - 0 , 0 + 1 , 32 @ @ 
 + package net . minecraftforge . event . entity . player ; 
 + 
 + import java . util . List ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 + import net . minecraft . item . ItemStack ; 
 + 
 + public class ItemTooltipEvent extends PlayerEvent 
 + { 
 + / * * 
 + * Whether the advanced information on item tooltips is being shown , toggled by F3 + H . 
 + * / 
 + public final boolean showAdvancedItemTooltips ; 
 + / * * 
 + * The { @ link ItemStack } with the tooltip . 
 + * / 
 + public final ItemStack itemStack ; 
 + / * * 
 + * The { @ link ItemStack } tooltip . 
 + * / 
 + public final List < String > toolTip ; 
 + 
 + / * * 
 + * This event is fired in { @ link ItemStack # getTooltip ( EntityPlayer , boolean ) } , which in turn is called from it ' s respective GUIContainer . 
 + * / 
 + public ItemTooltipEvent ( ItemStack itemStack , EntityPlayer entityPlayer , List < String > toolTip , boolean showAdvancedItemTooltips ) 
 + { 
 + super ( entityPlayer ) ; 
 + this . itemStack = itemStack ; 
 + this . toolTip = toolTip ; 
 + this . showAdvancedItemTooltips = showAdvancedItemTooltips ; 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / patches / minecraft / net / minecraft / item / ItemStack . java . patch b / patches / minecraft / net / minecraft / item / ItemStack . java . patch 
 index 0a0f0f6 . . 6f21cf1 100644 
 - - - a / patches / minecraft / net / minecraft / item / ItemStack . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / ItemStack . java . patch 
 @ @ - 1 , 6 + 1 , 14 @ @ 
 - - - . . / src _ base / minecraft / net / minecraft / item / ItemStack . java 
 + + + . . / src _ work / minecraft / net / minecraft / item / ItemStack . java 
 - @ @ - 252 , 7 + 252 , 9 @ @ 
 + @ @ - 29 , 6 + 29 , 7 @ @ 
 + import net . minecraft . util . Icon ; 
 + import net . minecraft . util . StatCollector ; 
 + import net . minecraft . world . World ; 
 + + import net . minecraftforge . event . ForgeEventFactory ; 
 + 
 + public final class ItemStack 
 + { 
 + @ @ - 252 , 7 + 253 , 9 @ @ 
 * / 
 public boolean isItemDamaged ( ) 
 { 
 @ @ - 11 , 7 + 19 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 260 , 6 + 262 , 10 @ @ 
 + @ @ - 260 , 6 + 263 , 10 @ @ 
 * / 
 public int getItemDamageForDisplay ( ) 
 { 
 @ @ - 22 , 7 + 30 , 7 @ @ 
 return this . itemDamage ; 
 } 
 
 - @ @ - 268 , 6 + 274 , 10 @ @ 
 + @ @ - 268 , 6 + 275 , 10 @ @ 
 * / 
 public int getItemDamage ( ) 
 { 
 @ @ - 33 , 7 + 41 , 7 @ @ 
 return this . itemDamage ; 
 } 
 
 - @ @ - 276 , 6 + 286 , 12 @ @ 
 + @ @ - 276 , 6 + 287 , 12 @ @ 
 * / 
 public void setItemDamage ( int par1 ) 
 { 
 @ @ - 46 , 7 + 54 , 7 @ @ 
 this . itemDamage = par1 ; 
 
 if ( this . itemDamage < 0 ) 
 - @ @ - 289 , 7 + 305 , 7 @ @ 
 + @ @ - 289 , 7 + 306 , 7 @ @ 
 * / 
 public int getMaxDamage ( ) 
 { 
 @ @ - 55 , 7 + 63 , 7 @ @ 
 } 
 
 / * * 
 - @ @ - 327 , 8 + 343 , 8 @ @ 
 + @ @ - 327 , 8 + 344 , 8 @ @ 
 } 
 } 
 
 @ @ - 66 , 7 + 74 , 7 @ @ 
 } 
 } 
 
 - @ @ - 396 , 7 + 412 , 7 @ @ 
 + @ @ - 396 , 7 + 413 , 7 @ @ 
 * / 
 public boolean canHarvestBlock ( Block par1Block ) 
 { 
 @ @ - 75 , 7 + 83 , 12 @ @ 
 } 
 
 public boolean func _ 111282 _ a ( EntityPlayer par1EntityPlayer , EntityLivingBase par2EntityLivingBase ) 
 - @ @ - 737 , 10 + 753 , 16 @ @ 
 + @ @ - 733 , 14 + 750 , 21 @ @ 
 + { 
 + arraylist . add ( " Durability : " + ( this . getMaxDamage ( ) - this . getItemDamageForDisplay ( ) ) + " / " + this . getMaxDamage ( ) ) ; 
 + } 
 + + ForgeEventFactory . onItemTooltip ( this , par1EntityPlayer , arraylist , par2 ) ; 
 + 
 return arraylist ; 
 } 

