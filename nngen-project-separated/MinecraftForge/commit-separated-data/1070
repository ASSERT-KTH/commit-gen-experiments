BLEU SCORE: 1.0

TEST MSG: Fixed NBTSizeTracker missing a lot of data being read . Also made new NBT object allocation claim 32 - bits in the size tracker .
GENERATED MSG: Fixed NBTSizeTracker missing a lot of data being read . Also made new NBT object allocation claim 32 - bits in the size tracker .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch b / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch <nl> index 3e1d582 . . 749a98d 100644 <nl> - - - a / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch <nl> + + + b / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch <nl> @ @ - 16 , 7 + 16 , 25 @ @ <nl> public static void func _ 74793 _ a ( NBTTagCompound p _ 74793 _ 0 _ , File p _ 74793 _ 1 _ ) throws IOException <nl> { <nl> File file2 = new File ( p _ 74793 _ 1 _ . getAbsolutePath ( ) + " _ tmp " ) ; <nl> - @ @ - 182 , 7 + 179 , 6 @ @ <nl> + @ @ - 156 , 6 + 153 , 7 @ @ <nl> + private static NBTBase func _ 152455 _ a ( DataInput p _ 152455 _ 0 _ , int p _ 152455 _ 1 _ , NBTSizeTracker p _ 152455 _ 2 _ ) throws IOException <nl> + { <nl> + byte b0 = p _ 152455 _ 0 _ . readByte ( ) ; <nl> + + p _ 152455 _ 2 _ . func _ 152450 _ a ( 8 ) ; / / Forge : Count everything ! <nl> + <nl> + if ( b0 = = 0 ) <nl> + { <nl> + @ @ - 163 , 7 + 161 , 8 @ @ <nl> + } <nl> + else <nl> + { <nl> + - p _ 152455 _ 0 _ . readUTF ( ) ; <nl> + + NBTSizeTracker . readUTF ( p _ 152455 _ 2 _ , p _ 152455 _ 0 _ . readUTF ( ) ) ; / / Forge : Count this string . <nl> + + p _ 152455 _ 2 _ . func _ 152450 _ a ( 32 ) ; / / Forge : 4 extra bytes for the object allocation . <nl> + NBTBase nbtbase = NBTBase . func _ 150284 _ a ( b0 ) ; <nl> + <nl> + try <nl> + @ @ - 182 , 7 + 181 , 6 @ @ <nl> } <nl> } <nl> <nl> @ @ - 24 , 7 + 42 , 7 @ @ <nl> public static void func _ 74795 _ b ( NBTTagCompound p _ 74795 _ 0 _ , File p _ 74795 _ 1 _ ) throws IOException <nl> { <nl> DataOutputStream dataoutputstream = new DataOutputStream ( new FileOutputStream ( p _ 74795 _ 1 _ ) ) ; <nl> - @ @ - 197 , 13 + 193 , 11 @ @ <nl> + @ @ - 197 , 13 + 195 , 11 @ @ <nl> } <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / nbt / NBTSizeTracker . java . patch b / patches / minecraft / net / minecraft / nbt / NBTSizeTracker . java . patch <nl> new file mode 100644 <nl> index 0000000 . . c7720b7 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / nbt / NBTSizeTracker . java . patch <nl> @ @ - 0 , 0 + 1 , 37 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTSizeTracker . java <nl> + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTSizeTracker . java <nl> + @ @ - 25 , 4 + 25 , 34 @ @ <nl> + throw new RuntimeException ( " Tried to read NBT tag that was too big ; tried to allocate : " + this . field _ 152453 _ c + " bytes where max allowed : " + this . field _ 152452 _ b ) ; <nl> + } <nl> + } <nl> + + <nl> + + / * <nl> + + * UTF8 is not a simple encoding system , each character can be either <nl> + + * 1 , 2 , or 3 bytes . Depending on where it ' s numerical value falls . <nl> + + * We have to count up each character individually to see the true <nl> + + * length of the data . <nl> + + * <nl> + + * Basic concept is that it uses the MSB of each byte as a ' read more ' signal . <nl> + + * So it has to shift each 7 - bit segment . <nl> + + * <nl> + + * This will accurately count the correct byte length to encode this string , plus the 2 bytes for it ' s length prefix . <nl> + + * / <nl> + + public static void readUTF ( NBTSizeTracker tracker , String data ) <nl> + + { <nl> + + tracker . func _ 152450 _ a ( 16 ) ; / / Header length <nl> + + if ( data = = null ) <nl> + + return ; <nl> + + <nl> + + int len = data . length ( ) ; <nl> + + int utflen = 0 ; <nl> + + <nl> + + for ( int i = 0 ; i < len ; i + + ) <nl> + + { <nl> + + int c = data . charAt ( i ) ; <nl> + + if ( ( c > = 0x0001 ) & & ( c < = 0x007F ) ) utflen + = 1 ; <nl> + + else if ( c > 0x07FF ) utflen + = 3 ; <nl> + + else utflen + = 2 ; <nl> + + } <nl> + + tracker . func _ 152450 _ a ( 8 * utflen ) ; <nl> + + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagByteArray . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagByteArray . java . patch <nl> new file mode 100644 <nl> index 0000000 . . ead6ffc <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / nbt / NBTTagByteArray . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagByteArray . java <nl> + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagByteArray . java <nl> + @ @ - 25 , 6 + 25 , 7 @ @ <nl> + <nl> + void func _ 152446 _ a ( DataInput p _ 152446 _ 1 _ , int p _ 152446 _ 2 _ , NBTSizeTracker p _ 152446 _ 3 _ ) throws IOException <nl> + { <nl> + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : Count the length as well <nl> + int j = p _ 152446 _ 1 _ . readInt ( ) ; <nl> + p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 8 * j ) ) ; <nl> + this . field _ 74754 _ a = new byte [ j ] ; <nl> diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagCompound . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagCompound . java . patch <nl> new file mode 100644 <nl> index 0000000 . . f98f85e <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / nbt / NBTTagCompound . java . patch <nl> @ @ - 0 , 0 + 1 , 27 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagCompound . java <nl> + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagCompound . java <nl> + @ @ - 48 , 7 + 48 , 7 @ @ <nl> + while ( ( b0 = func _ 152447 _ a ( p _ 152446 _ 1 _ , p _ 152446 _ 3 _ ) ) ! = 0 ) <nl> + { <nl> + String s = func _ 152448 _ b ( p _ 152446 _ 1 _ , p _ 152446 _ 3 _ ) ; <nl> + - p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 16 * s . length ( ) ) ) ; <nl> + + NBTSizeTracker . readUTF ( p _ 152446 _ 3 _ , s ) ; / / Forge : Correctly read String length including header . <nl> + NBTBase nbtbase = func _ 152449 _ a ( b0 , s , p _ 152446 _ 1 _ , p _ 152446 _ 2 _ + 1 , p _ 152446 _ 3 _ ) ; <nl> + this . field _ 74784 _ a . put ( s , nbtbase ) ; <nl> + } <nl> + @ @ - 379 , 6 + 379 , 7 @ @ <nl> + <nl> + private static byte func _ 152447 _ a ( DataInput p _ 152447 _ 0 _ , NBTSizeTracker p _ 152447 _ 1 _ ) throws IOException <nl> + { <nl> + + p _ 152447 _ 1 _ . func _ 152450 _ a ( 8 ) ; <nl> + return p _ 152447 _ 0 _ . readByte ( ) ; <nl> + } <nl> + <nl> + @ @ - 389 , 6 + 390 , 7 @ @ <nl> + <nl> + static NBTBase func _ 152449 _ a ( byte p _ 152449 _ 0 _ , String p _ 152449 _ 1 _ , DataInput p _ 152449 _ 2 _ , int p _ 152449 _ 3 _ , NBTSizeTracker p _ 152449 _ 4 _ ) <nl> + { <nl> + + p _ 152449 _ 4 _ . func _ 152450 _ a ( 32 ) ; / / Forge : 4 extra bytes for the object allocation . <nl> + NBTBase nbtbase = NBTBase . func _ 150284 _ a ( p _ 152449 _ 0 _ ) ; <nl> + <nl> + try <nl> diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagIntArray . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagIntArray . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 40a4b4c <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / nbt / NBTTagIntArray . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagIntArray . java <nl> + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagIntArray . java <nl> + @ @ - 29 , 6 + 29 , 7 @ @ <nl> + <nl> + void func _ 152446 _ a ( DataInput p _ 152446 _ 1 _ , int p _ 152446 _ 2 _ , NBTSizeTracker p _ 152446 _ 3 _ ) throws IOException <nl> + { <nl> + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : Count the length as well <nl> + int j = p _ 152446 _ 1 _ . readInt ( ) ; <nl> + p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 32 * j ) ) ; <nl> + this . field _ 74749 _ a = new int [ j ] ; <nl> diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagList . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagList . java . patch <nl> index 5d16574 . . 7fc49f2 100644 <nl> - - - a / patches / minecraft / net / minecraft / nbt / NBTTagList . java . patch <nl> + + + b / patches / minecraft / net / minecraft / nbt / NBTTagList . java . patch <nl> @ @ - 8 , 7 + 8 , 21 @ @ <nl> import java . io . DataInput ; <nl> import java . io . DataOutput ; <nl> import java . io . IOException ; <nl> - @ @ - 91 , 7 + 89 , 6 @ @ <nl> + @ @ - 45 , 11 + 43 , 13 @ @ <nl> + { <nl> + p _ 152446 _ 3 _ . func _ 152450 _ a ( 8L ) ; <nl> + this . field _ 74746 _ b = p _ 152446 _ 1 _ . readByte ( ) ; <nl> + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : Count the length as well <nl> + int j = p _ 152446 _ 1 _ . readInt ( ) ; <nl> + this . field _ 74747 _ a = new ArrayList ( ) ; <nl> + <nl> + for ( int k = 0 ; k < j ; + + k ) <nl> + { <nl> + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : 4 extra bytes for the object allocation . <nl> + NBTBase nbtbase = NBTBase . func _ 150284 _ a ( this . field _ 74746 _ b ) ; <nl> + nbtbase . func _ 152446 _ a ( p _ 152446 _ 1 _ , p _ 152446 _ 2 _ + 1 , p _ 152446 _ 3 _ ) ; <nl> + this . field _ 74747 _ a . add ( nbtbase ) ; <nl> + @ @ - 91 , 7 + 91 , 6 @ @ <nl> this . field _ 74747 _ a . add ( p _ 74742 _ 1 _ ) ; <nl> } <nl> <nl> @ @ - 16 , 7 + 30 , 7 @ @ <nl> public void func _ 150304 _ a ( int p _ 150304 _ 1 _ , NBTBase p _ 150304 _ 2 _ ) <nl> { <nl> if ( p _ 150304 _ 1 _ > = 0 & & p _ 150304 _ 1 _ < this . field _ 74747 _ a . size ( ) ) <nl> - @ @ - 114 , 7 + 111 , 6 @ @ <nl> + @ @ - 114 , 7 + 113 , 6 @ @ <nl> } <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagString . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagString . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 56efede <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / nbt / NBTTagString . java . patch <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagString . java <nl> + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagString . java <nl> + @ @ - 32 , 7 + 32 , 7 @ @ <nl> + void func _ 152446 _ a ( DataInput p _ 152446 _ 1 _ , int p _ 152446 _ 2 _ , NBTSizeTracker p _ 152446 _ 3 _ ) throws IOException <nl> + { <nl> + this . field _ 74751 _ a = p _ 152446 _ 1 _ . readUTF ( ) ; <nl> + - p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 16 * this . field _ 74751 _ a . length ( ) ) ) ; <nl> + + NBTSizeTracker . readUTF ( p _ 152446 _ 3 _ , field _ 74751 _ a ) ; / / Forge : Correctly read String length including header . <nl> + } <nl> + <nl> + public byte func _ 74732 _ a ( )
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch b / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch <nl> index 4c3ac60 . . 3c63504 100644 <nl> - - - a / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch <nl> + + + b / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch <nl> @ @ - 17 , 7 + 17 , 25 @ @ <nl> public static void func _ 74793 _ a ( NBTTagCompound p _ 74793 _ 0 _ , File p _ 74793 _ 1 _ ) throws IOException <nl> { <nl> File file2 = new File ( p _ 74793 _ 1 _ . getAbsolutePath ( ) + " _ tmp " ) ; <nl> - @ @ - 146 , 7 + 143 , 6 @ @ <nl> + @ @ - 120 , 6 + 117 , 7 @ @ <nl> + private static NBTBase func _ 152455 _ a ( DataInput p _ 152455 _ 0 _ , int p _ 152455 _ 1 _ , NBTSizeTracker p _ 152455 _ 2 _ ) throws IOException <nl> + { <nl> + byte b0 = p _ 152455 _ 0 _ . readByte ( ) ; <nl> + + p _ 152455 _ 2 _ . func _ 152450 _ a ( 8 ) ; / / Forge : Count everything ! <nl> + <nl> + if ( b0 = = 0 ) <nl> + { <nl> + @ @ - 127 , 7 + 125 , 8 @ @ <nl> + } <nl> + else <nl> + { <nl> + - p _ 152455 _ 0 _ . readUTF ( ) ; <nl> + + NBTSizeTracker . readUTF ( p _ 152455 _ 2 _ , p _ 152455 _ 0 _ . readUTF ( ) ) ; / / Forge : Count this string . <nl> + + p _ 152455 _ 2 _ . func _ 152450 _ a ( 32 ) ; / / Forge : 4 extra bytes for the object allocation . <nl> + NBTBase nbtbase = NBTBase . func _ 150284 _ a ( b0 ) ; <nl> + <nl> + try <nl> + @ @ - 146 , 7 + 145 , 6 @ @ <nl> } <nl> } <nl> <nl> @ @ - 25 , 7 + 43 , 7 @ @ <nl> public static void func _ 74795 _ b ( NBTTagCompound p _ 74795 _ 0 _ , File p _ 74795 _ 1 _ ) throws IOException <nl> { <nl> DataOutputStream dataoutputstream = new DataOutputStream ( new FileOutputStream ( p _ 74795 _ 1 _ ) ) ; <nl> - @ @ - 161 , 7 + 157 , 6 @ @ <nl> + @ @ - 161 , 7 + 159 , 6 @ @ <nl> } <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / nbt / NBTSizeTracker . java . patch b / patches / minecraft / net / minecraft / nbt / NBTSizeTracker . java . patch <nl> new file mode 100644 <nl> index 0000000 . . c7720b7 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / nbt / NBTSizeTracker . java . patch <nl> @ @ - 0 , 0 + 1 , 37 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTSizeTracker . java <nl> + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTSizeTracker . java <nl> + @ @ - 25 , 4 + 25 , 34 @ @ <nl> + throw new RuntimeException ( " Tried to read NBT tag that was too big ; tried to allocate : " + this . field _ 152453 _ c + " bytes where max allowed : " + this . field _ 152452 _ b ) ; <nl> + } <nl> + } <nl> + + <nl> + + / * <nl> + + * UTF8 is not a simple encoding system , each character can be either <nl> + + * 1 , 2 , or 3 bytes . Depending on where it ' s numerical value falls . <nl> + + * We have to count up each character individually to see the true <nl> + + * length of the data . <nl> + + * <nl> + + * Basic concept is that it uses the MSB of each byte as a ' read more ' signal . <nl> + + * So it has to shift each 7 - bit segment . <nl> + + * <nl> + + * This will accurately count the correct byte length to encode this string , plus the 2 bytes for it ' s length prefix . <nl> + + * / <nl> + + public static void readUTF ( NBTSizeTracker tracker , String data ) <nl> + + { <nl> + + tracker . func _ 152450 _ a ( 16 ) ; / / Header length <nl> + + if ( data = = null ) <nl> + + return ; <nl> + + <nl> + + int len = data . length ( ) ; <nl> + + int utflen = 0 ; <nl> + + <nl> + + for ( int i = 0 ; i < len ; i + + ) <nl> + + { <nl> + + int c = data . charAt ( i ) ; <nl> + + if ( ( c > = 0x0001 ) & & ( c < = 0x007F ) ) utflen + = 1 ; <nl> + + else if ( c > 0x07FF ) utflen + = 3 ; <nl> + + else utflen + = 2 ; <nl> + + } <nl> + + tracker . func _ 152450 _ a ( 8 * utflen ) ; <nl> + + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagByteArray . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagByteArray . java . patch <nl> new file mode 100644 <nl> index 0000000 . . ead6ffc <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / nbt / NBTTagByteArray . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagByteArray . java <nl> + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagByteArray . java <nl> + @ @ - 25 , 6 + 25 , 7 @ @ <nl> + <nl> + void func _ 152446 _ a ( DataInput p _ 152446 _ 1 _ , int p _ 152446 _ 2 _ , NBTSizeTracker p _ 152446 _ 3 _ ) throws IOException <nl> + { <nl> + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : Count the length as well <nl> + int j = p _ 152446 _ 1 _ . readInt ( ) ; <nl> + p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 8 * j ) ) ; <nl> + this . field _ 74754 _ a = new byte [ j ] ; <nl> diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagCompound . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagCompound . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 236610d <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / nbt / NBTTagCompound . java . patch <nl> @ @ - 0 , 0 + 1 , 27 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagCompound . java <nl> + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagCompound . java <nl> + @ @ - 48 , 7 + 48 , 7 @ @ <nl> + while ( ( b0 = func _ 152447 _ a ( p _ 152446 _ 1 _ , p _ 152446 _ 3 _ ) ) ! = 0 ) <nl> + { <nl> + String s = func _ 152448 _ b ( p _ 152446 _ 1 _ , p _ 152446 _ 3 _ ) ; <nl> + - p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 16 * s . length ( ) ) ) ; <nl> + + NBTSizeTracker . readUTF ( p _ 152446 _ 3 _ , s ) ; / / Forge : Correctly read String length including header . <nl> + NBTBase nbtbase = func _ 152449 _ a ( b0 , s , p _ 152446 _ 1 _ , p _ 152446 _ 2 _ + 1 , p _ 152446 _ 3 _ ) ; <nl> + this . field _ 74784 _ a . put ( s , nbtbase ) ; <nl> + } <nl> + @ @ - 396 , 6 + 396 , 7 @ @ <nl> + <nl> + private static byte func _ 152447 _ a ( DataInput p _ 152447 _ 0 _ , NBTSizeTracker p _ 152447 _ 1 _ ) throws IOException <nl> + { <nl> + + p _ 152447 _ 1 _ . func _ 152450 _ a ( 8 ) ; <nl> + return p _ 152447 _ 0 _ . readByte ( ) ; <nl> + } <nl> + <nl> + @ @ - 406 , 6 + 407 , 7 @ @ <nl> + <nl> + static NBTBase func _ 152449 _ a ( byte p _ 152449 _ 0 _ , String p _ 152449 _ 1 _ , DataInput p _ 152449 _ 2 _ , int p _ 152449 _ 3 _ , NBTSizeTracker p _ 152449 _ 4 _ ) <nl> + { <nl> + + p _ 152449 _ 4 _ . func _ 152450 _ a ( 32 ) ; / / Forge : 4 extra bytes for the object allocation . <nl> + NBTBase nbtbase = NBTBase . func _ 150284 _ a ( p _ 152449 _ 0 _ ) ; <nl> + <nl> + try <nl> diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagIntArray . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagIntArray . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 40a4b4c <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / nbt / NBTTagIntArray . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagIntArray . java <nl> + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagIntArray . java <nl> + @ @ - 29 , 6 + 29 , 7 @ @ <nl> + <nl> + void func _ 152446 _ a ( DataInput p _ 152446 _ 1 _ , int p _ 152446 _ 2 _ , NBTSizeTracker p _ 152446 _ 3 _ ) throws IOException <nl> + { <nl> + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : Count the length as well <nl> + int j = p _ 152446 _ 1 _ . readInt ( ) ; <nl> + p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 32 * j ) ) ; <nl> + this . field _ 74749 _ a = new int [ j ] ; <nl> diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagList . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagList . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 1cafa5e <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / nbt / NBTTagList . java . patch <nl> @ @ - 0 , 0 + 1 , 16 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagList . java <nl> + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagList . java <nl> + @ @ - 46 , 11 + 46 , 13 @ @ <nl> + { <nl> + p _ 152446 _ 3 _ . func _ 152450 _ a ( 8L ) ; <nl> + this . field _ 74746 _ b = p _ 152446 _ 1 _ . readByte ( ) ; <nl> + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : Count the length as well <nl> + int j = p _ 152446 _ 1 _ . readInt ( ) ; <nl> + this . field _ 74747 _ a = Lists . newArrayList ( ) ; <nl> + <nl> + for ( int k = 0 ; k < j ; + + k ) <nl> + { <nl> + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : 4 extra bytes for the object allocation . <nl> + NBTBase nbtbase = NBTBase . func _ 150284 _ a ( this . field _ 74746 _ b ) ; <nl> + nbtbase . func _ 152446 _ a ( p _ 152446 _ 1 _ , p _ 152446 _ 2 _ + 1 , p _ 152446 _ 3 _ ) ; <nl> + this . field _ 74747 _ a . add ( nbtbase ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagString . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagString . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 56efede <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / nbt / NBTTagString . java . patch <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagString . java <nl> + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagString . java <nl> + @ @ - 32 , 7 + 32 , 7 @ @ <nl> + void func _ 152446 _ a ( DataInput p _ 152446 _ 1 _ , int p _ 152446 _ 2 _ , NBTSizeTracker p _ 152446 _ 3 _ ) throws IOException <nl> + { <nl> + this . field _ 74751 _ a = p _ 152446 _ 1 _ . readUTF ( ) ; <nl> + - p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 16 * this . field _ 74751 _ a . length ( ) ) ) ; <nl> + + NBTSizeTracker . readUTF ( p _ 152446 _ 3 _ , field _ 74751 _ a ) ; / / Forge : Correctly read String length including header . <nl> + } <nl> + <nl> + public byte func _ 74732 _ a ( )

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch b / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch 
 index 3e1d582 . . 749a98d 100644 
 - - - a / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch 
 + + + b / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch 
 @ @ - 16 , 7 + 16 , 25 @ @ 
 public static void func _ 74793 _ a ( NBTTagCompound p _ 74793 _ 0 _ , File p _ 74793 _ 1 _ ) throws IOException 
 { 
 File file2 = new File ( p _ 74793 _ 1 _ . getAbsolutePath ( ) + " _ tmp " ) ; 
 - @ @ - 182 , 7 + 179 , 6 @ @ 
 + @ @ - 156 , 6 + 153 , 7 @ @ 
 + private static NBTBase func _ 152455 _ a ( DataInput p _ 152455 _ 0 _ , int p _ 152455 _ 1 _ , NBTSizeTracker p _ 152455 _ 2 _ ) throws IOException 
 + { 
 + byte b0 = p _ 152455 _ 0 _ . readByte ( ) ; 
 + + p _ 152455 _ 2 _ . func _ 152450 _ a ( 8 ) ; / / Forge : Count everything ! 
 + 
 + if ( b0 = = 0 ) 
 + { 
 + @ @ - 163 , 7 + 161 , 8 @ @ 
 + } 
 + else 
 + { 
 + - p _ 152455 _ 0 _ . readUTF ( ) ; 
 + + NBTSizeTracker . readUTF ( p _ 152455 _ 2 _ , p _ 152455 _ 0 _ . readUTF ( ) ) ; / / Forge : Count this string . 
 + + p _ 152455 _ 2 _ . func _ 152450 _ a ( 32 ) ; / / Forge : 4 extra bytes for the object allocation . 
 + NBTBase nbtbase = NBTBase . func _ 150284 _ a ( b0 ) ; 
 + 
 + try 
 + @ @ - 182 , 7 + 181 , 6 @ @ 
 } 
 } 
 
 @ @ - 24 , 7 + 42 , 7 @ @ 
 public static void func _ 74795 _ b ( NBTTagCompound p _ 74795 _ 0 _ , File p _ 74795 _ 1 _ ) throws IOException 
 { 
 DataOutputStream dataoutputstream = new DataOutputStream ( new FileOutputStream ( p _ 74795 _ 1 _ ) ) ; 
 - @ @ - 197 , 13 + 193 , 11 @ @ 
 + @ @ - 197 , 13 + 195 , 11 @ @ 
 } 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / nbt / NBTSizeTracker . java . patch b / patches / minecraft / net / minecraft / nbt / NBTSizeTracker . java . patch 
 new file mode 100644 
 index 0000000 . . c7720b7 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / nbt / NBTSizeTracker . java . patch 
 @ @ - 0 , 0 + 1 , 37 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTSizeTracker . java 
 + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTSizeTracker . java 
 + @ @ - 25 , 4 + 25 , 34 @ @ 
 + throw new RuntimeException ( " Tried to read NBT tag that was too big ; tried to allocate : " + this . field _ 152453 _ c + " bytes where max allowed : " + this . field _ 152452 _ b ) ; 
 + } 
 + } 
 + + 
 + + / * 
 + + * UTF8 is not a simple encoding system , each character can be either 
 + + * 1 , 2 , or 3 bytes . Depending on where it ' s numerical value falls . 
 + + * We have to count up each character individually to see the true 
 + + * length of the data . 
 + + * 
 + + * Basic concept is that it uses the MSB of each byte as a ' read more ' signal . 
 + + * So it has to shift each 7 - bit segment . 
 + + * 
 + + * This will accurately count the correct byte length to encode this string , plus the 2 bytes for it ' s length prefix . 
 + + * / 
 + + public static void readUTF ( NBTSizeTracker tracker , String data ) 
 + + { 
 + + tracker . func _ 152450 _ a ( 16 ) ; / / Header length 
 + + if ( data = = null ) 
 + + return ; 
 + + 
 + + int len = data . length ( ) ; 
 + + int utflen = 0 ; 
 + + 
 + + for ( int i = 0 ; i < len ; i + + ) 
 + + { 
 + + int c = data . charAt ( i ) ; 
 + + if ( ( c > = 0x0001 ) & & ( c < = 0x007F ) ) utflen + = 1 ; 
 + + else if ( c > 0x07FF ) utflen + = 3 ; 
 + + else utflen + = 2 ; 
 + + } 
 + + tracker . func _ 152450 _ a ( 8 * utflen ) ; 
 + + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagByteArray . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagByteArray . java . patch 
 new file mode 100644 
 index 0000000 . . ead6ffc 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / nbt / NBTTagByteArray . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagByteArray . java 
 + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagByteArray . java 
 + @ @ - 25 , 6 + 25 , 7 @ @ 
 + 
 + void func _ 152446 _ a ( DataInput p _ 152446 _ 1 _ , int p _ 152446 _ 2 _ , NBTSizeTracker p _ 152446 _ 3 _ ) throws IOException 
 + { 
 + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : Count the length as well 
 + int j = p _ 152446 _ 1 _ . readInt ( ) ; 
 + p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 8 * j ) ) ; 
 + this . field _ 74754 _ a = new byte [ j ] ; 
 diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagCompound . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagCompound . java . patch 
 new file mode 100644 
 index 0000000 . . f98f85e 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / nbt / NBTTagCompound . java . patch 
 @ @ - 0 , 0 + 1 , 27 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagCompound . java 
 + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagCompound . java 
 + @ @ - 48 , 7 + 48 , 7 @ @ 
 + while ( ( b0 = func _ 152447 _ a ( p _ 152446 _ 1 _ , p _ 152446 _ 3 _ ) ) ! = 0 ) 
 + { 
 + String s = func _ 152448 _ b ( p _ 152446 _ 1 _ , p _ 152446 _ 3 _ ) ; 
 + - p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 16 * s . length ( ) ) ) ; 
 + + NBTSizeTracker . readUTF ( p _ 152446 _ 3 _ , s ) ; / / Forge : Correctly read String length including header . 
 + NBTBase nbtbase = func _ 152449 _ a ( b0 , s , p _ 152446 _ 1 _ , p _ 152446 _ 2 _ + 1 , p _ 152446 _ 3 _ ) ; 
 + this . field _ 74784 _ a . put ( s , nbtbase ) ; 
 + } 
 + @ @ - 379 , 6 + 379 , 7 @ @ 
 + 
 + private static byte func _ 152447 _ a ( DataInput p _ 152447 _ 0 _ , NBTSizeTracker p _ 152447 _ 1 _ ) throws IOException 
 + { 
 + + p _ 152447 _ 1 _ . func _ 152450 _ a ( 8 ) ; 
 + return p _ 152447 _ 0 _ . readByte ( ) ; 
 + } 
 + 
 + @ @ - 389 , 6 + 390 , 7 @ @ 
 + 
 + static NBTBase func _ 152449 _ a ( byte p _ 152449 _ 0 _ , String p _ 152449 _ 1 _ , DataInput p _ 152449 _ 2 _ , int p _ 152449 _ 3 _ , NBTSizeTracker p _ 152449 _ 4 _ ) 
 + { 
 + + p _ 152449 _ 4 _ . func _ 152450 _ a ( 32 ) ; / / Forge : 4 extra bytes for the object allocation . 
 + NBTBase nbtbase = NBTBase . func _ 150284 _ a ( p _ 152449 _ 0 _ ) ; 
 + 
 + try 
 diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagIntArray . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagIntArray . java . patch 
 new file mode 100644 
 index 0000000 . . 40a4b4c 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / nbt / NBTTagIntArray . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagIntArray . java 
 + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagIntArray . java 
 + @ @ - 29 , 6 + 29 , 7 @ @ 
 + 
 + void func _ 152446 _ a ( DataInput p _ 152446 _ 1 _ , int p _ 152446 _ 2 _ , NBTSizeTracker p _ 152446 _ 3 _ ) throws IOException 
 + { 
 + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : Count the length as well 
 + int j = p _ 152446 _ 1 _ . readInt ( ) ; 
 + p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 32 * j ) ) ; 
 + this . field _ 74749 _ a = new int [ j ] ; 
 diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagList . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagList . java . patch 
 index 5d16574 . . 7fc49f2 100644 
 - - - a / patches / minecraft / net / minecraft / nbt / NBTTagList . java . patch 
 + + + b / patches / minecraft / net / minecraft / nbt / NBTTagList . java . patch 
 @ @ - 8 , 7 + 8 , 21 @ @ 
 import java . io . DataInput ; 
 import java . io . DataOutput ; 
 import java . io . IOException ; 
 - @ @ - 91 , 7 + 89 , 6 @ @ 
 + @ @ - 45 , 11 + 43 , 13 @ @ 
 + { 
 + p _ 152446 _ 3 _ . func _ 152450 _ a ( 8L ) ; 
 + this . field _ 74746 _ b = p _ 152446 _ 1 _ . readByte ( ) ; 
 + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : Count the length as well 
 + int j = p _ 152446 _ 1 _ . readInt ( ) ; 
 + this . field _ 74747 _ a = new ArrayList ( ) ; 
 + 
 + for ( int k = 0 ; k < j ; + + k ) 
 + { 
 + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : 4 extra bytes for the object allocation . 
 + NBTBase nbtbase = NBTBase . func _ 150284 _ a ( this . field _ 74746 _ b ) ; 
 + nbtbase . func _ 152446 _ a ( p _ 152446 _ 1 _ , p _ 152446 _ 2 _ + 1 , p _ 152446 _ 3 _ ) ; 
 + this . field _ 74747 _ a . add ( nbtbase ) ; 
 + @ @ - 91 , 7 + 91 , 6 @ @ 
 this . field _ 74747 _ a . add ( p _ 74742 _ 1 _ ) ; 
 } 
 
 @ @ - 16 , 7 + 30 , 7 @ @ 
 public void func _ 150304 _ a ( int p _ 150304 _ 1 _ , NBTBase p _ 150304 _ 2 _ ) 
 { 
 if ( p _ 150304 _ 1 _ > = 0 & & p _ 150304 _ 1 _ < this . field _ 74747 _ a . size ( ) ) 
 - @ @ - 114 , 7 + 111 , 6 @ @ 
 + @ @ - 114 , 7 + 113 , 6 @ @ 
 } 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagString . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagString . java . patch 
 new file mode 100644 
 index 0000000 . . 56efede 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / nbt / NBTTagString . java . patch 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagString . java 
 + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagString . java 
 + @ @ - 32 , 7 + 32 , 7 @ @ 
 + void func _ 152446 _ a ( DataInput p _ 152446 _ 1 _ , int p _ 152446 _ 2 _ , NBTSizeTracker p _ 152446 _ 3 _ ) throws IOException 
 + { 
 + this . field _ 74751 _ a = p _ 152446 _ 1 _ . readUTF ( ) ; 
 + - p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 16 * this . field _ 74751 _ a . length ( ) ) ) ; 
 + + NBTSizeTracker . readUTF ( p _ 152446 _ 3 _ , field _ 74751 _ a ) ; / / Forge : Correctly read String length including header . 
 + } 
 + 
 + public byte func _ 74732 _ a ( )

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch b / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch 
 index 4c3ac60 . . 3c63504 100644 
 - - - a / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch 
 + + + b / patches / minecraft / net / minecraft / nbt / CompressedStreamTools . java . patch 
 @ @ - 17 , 7 + 17 , 25 @ @ 
 public static void func _ 74793 _ a ( NBTTagCompound p _ 74793 _ 0 _ , File p _ 74793 _ 1 _ ) throws IOException 
 { 
 File file2 = new File ( p _ 74793 _ 1 _ . getAbsolutePath ( ) + " _ tmp " ) ; 
 - @ @ - 146 , 7 + 143 , 6 @ @ 
 + @ @ - 120 , 6 + 117 , 7 @ @ 
 + private static NBTBase func _ 152455 _ a ( DataInput p _ 152455 _ 0 _ , int p _ 152455 _ 1 _ , NBTSizeTracker p _ 152455 _ 2 _ ) throws IOException 
 + { 
 + byte b0 = p _ 152455 _ 0 _ . readByte ( ) ; 
 + + p _ 152455 _ 2 _ . func _ 152450 _ a ( 8 ) ; / / Forge : Count everything ! 
 + 
 + if ( b0 = = 0 ) 
 + { 
 + @ @ - 127 , 7 + 125 , 8 @ @ 
 + } 
 + else 
 + { 
 + - p _ 152455 _ 0 _ . readUTF ( ) ; 
 + + NBTSizeTracker . readUTF ( p _ 152455 _ 2 _ , p _ 152455 _ 0 _ . readUTF ( ) ) ; / / Forge : Count this string . 
 + + p _ 152455 _ 2 _ . func _ 152450 _ a ( 32 ) ; / / Forge : 4 extra bytes for the object allocation . 
 + NBTBase nbtbase = NBTBase . func _ 150284 _ a ( b0 ) ; 
 + 
 + try 
 + @ @ - 146 , 7 + 145 , 6 @ @ 
 } 
 } 
 
 @ @ - 25 , 7 + 43 , 7 @ @ 
 public static void func _ 74795 _ b ( NBTTagCompound p _ 74795 _ 0 _ , File p _ 74795 _ 1 _ ) throws IOException 
 { 
 DataOutputStream dataoutputstream = new DataOutputStream ( new FileOutputStream ( p _ 74795 _ 1 _ ) ) ; 
 - @ @ - 161 , 7 + 157 , 6 @ @ 
 + @ @ - 161 , 7 + 159 , 6 @ @ 
 } 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / nbt / NBTSizeTracker . java . patch b / patches / minecraft / net / minecraft / nbt / NBTSizeTracker . java . patch 
 new file mode 100644 
 index 0000000 . . c7720b7 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / nbt / NBTSizeTracker . java . patch 
 @ @ - 0 , 0 + 1 , 37 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTSizeTracker . java 
 + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTSizeTracker . java 
 + @ @ - 25 , 4 + 25 , 34 @ @ 
 + throw new RuntimeException ( " Tried to read NBT tag that was too big ; tried to allocate : " + this . field _ 152453 _ c + " bytes where max allowed : " + this . field _ 152452 _ b ) ; 
 + } 
 + } 
 + + 
 + + / * 
 + + * UTF8 is not a simple encoding system , each character can be either 
 + + * 1 , 2 , or 3 bytes . Depending on where it ' s numerical value falls . 
 + + * We have to count up each character individually to see the true 
 + + * length of the data . 
 + + * 
 + + * Basic concept is that it uses the MSB of each byte as a ' read more ' signal . 
 + + * So it has to shift each 7 - bit segment . 
 + + * 
 + + * This will accurately count the correct byte length to encode this string , plus the 2 bytes for it ' s length prefix . 
 + + * / 
 + + public static void readUTF ( NBTSizeTracker tracker , String data ) 
 + + { 
 + + tracker . func _ 152450 _ a ( 16 ) ; / / Header length 
 + + if ( data = = null ) 
 + + return ; 
 + + 
 + + int len = data . length ( ) ; 
 + + int utflen = 0 ; 
 + + 
 + + for ( int i = 0 ; i < len ; i + + ) 
 + + { 
 + + int c = data . charAt ( i ) ; 
 + + if ( ( c > = 0x0001 ) & & ( c < = 0x007F ) ) utflen + = 1 ; 
 + + else if ( c > 0x07FF ) utflen + = 3 ; 
 + + else utflen + = 2 ; 
 + + } 
 + + tracker . func _ 152450 _ a ( 8 * utflen ) ; 
 + + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagByteArray . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagByteArray . java . patch 
 new file mode 100644 
 index 0000000 . . ead6ffc 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / nbt / NBTTagByteArray . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagByteArray . java 
 + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagByteArray . java 
 + @ @ - 25 , 6 + 25 , 7 @ @ 
 + 
 + void func _ 152446 _ a ( DataInput p _ 152446 _ 1 _ , int p _ 152446 _ 2 _ , NBTSizeTracker p _ 152446 _ 3 _ ) throws IOException 
 + { 
 + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : Count the length as well 
 + int j = p _ 152446 _ 1 _ . readInt ( ) ; 
 + p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 8 * j ) ) ; 
 + this . field _ 74754 _ a = new byte [ j ] ; 
 diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagCompound . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagCompound . java . patch 
 new file mode 100644 
 index 0000000 . . 236610d 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / nbt / NBTTagCompound . java . patch 
 @ @ - 0 , 0 + 1 , 27 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagCompound . java 
 + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagCompound . java 
 + @ @ - 48 , 7 + 48 , 7 @ @ 
 + while ( ( b0 = func _ 152447 _ a ( p _ 152446 _ 1 _ , p _ 152446 _ 3 _ ) ) ! = 0 ) 
 + { 
 + String s = func _ 152448 _ b ( p _ 152446 _ 1 _ , p _ 152446 _ 3 _ ) ; 
 + - p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 16 * s . length ( ) ) ) ; 
 + + NBTSizeTracker . readUTF ( p _ 152446 _ 3 _ , s ) ; / / Forge : Correctly read String length including header . 
 + NBTBase nbtbase = func _ 152449 _ a ( b0 , s , p _ 152446 _ 1 _ , p _ 152446 _ 2 _ + 1 , p _ 152446 _ 3 _ ) ; 
 + this . field _ 74784 _ a . put ( s , nbtbase ) ; 
 + } 
 + @ @ - 396 , 6 + 396 , 7 @ @ 
 + 
 + private static byte func _ 152447 _ a ( DataInput p _ 152447 _ 0 _ , NBTSizeTracker p _ 152447 _ 1 _ ) throws IOException 
 + { 
 + + p _ 152447 _ 1 _ . func _ 152450 _ a ( 8 ) ; 
 + return p _ 152447 _ 0 _ . readByte ( ) ; 
 + } 
 + 
 + @ @ - 406 , 6 + 407 , 7 @ @ 
 + 
 + static NBTBase func _ 152449 _ a ( byte p _ 152449 _ 0 _ , String p _ 152449 _ 1 _ , DataInput p _ 152449 _ 2 _ , int p _ 152449 _ 3 _ , NBTSizeTracker p _ 152449 _ 4 _ ) 
 + { 
 + + p _ 152449 _ 4 _ . func _ 152450 _ a ( 32 ) ; / / Forge : 4 extra bytes for the object allocation . 
 + NBTBase nbtbase = NBTBase . func _ 150284 _ a ( p _ 152449 _ 0 _ ) ; 
 + 
 + try 
 diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagIntArray . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagIntArray . java . patch 
 new file mode 100644 
 index 0000000 . . 40a4b4c 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / nbt / NBTTagIntArray . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagIntArray . java 
 + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagIntArray . java 
 + @ @ - 29 , 6 + 29 , 7 @ @ 
 + 
 + void func _ 152446 _ a ( DataInput p _ 152446 _ 1 _ , int p _ 152446 _ 2 _ , NBTSizeTracker p _ 152446 _ 3 _ ) throws IOException 
 + { 
 + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : Count the length as well 
 + int j = p _ 152446 _ 1 _ . readInt ( ) ; 
 + p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 32 * j ) ) ; 
 + this . field _ 74749 _ a = new int [ j ] ; 
 diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagList . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagList . java . patch 
 new file mode 100644 
 index 0000000 . . 1cafa5e 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / nbt / NBTTagList . java . patch 
 @ @ - 0 , 0 + 1 , 16 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagList . java 
 + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagList . java 
 + @ @ - 46 , 11 + 46 , 13 @ @ 
 + { 
 + p _ 152446 _ 3 _ . func _ 152450 _ a ( 8L ) ; 
 + this . field _ 74746 _ b = p _ 152446 _ 1 _ . readByte ( ) ; 
 + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : Count the length as well 
 + int j = p _ 152446 _ 1 _ . readInt ( ) ; 
 + this . field _ 74747 _ a = Lists . newArrayList ( ) ; 
 + 
 + for ( int k = 0 ; k < j ; + + k ) 
 + { 
 + + p _ 152446 _ 3 _ . func _ 152450 _ a ( 32 ) ; / / Forge : 4 extra bytes for the object allocation . 
 + NBTBase nbtbase = NBTBase . func _ 150284 _ a ( this . field _ 74746 _ b ) ; 
 + nbtbase . func _ 152446 _ a ( p _ 152446 _ 1 _ , p _ 152446 _ 2 _ + 1 , p _ 152446 _ 3 _ ) ; 
 + this . field _ 74747 _ a . add ( nbtbase ) ; 
 diff - - git a / patches / minecraft / net / minecraft / nbt / NBTTagString . java . patch b / patches / minecraft / net / minecraft / nbt / NBTTagString . java . patch 
 new file mode 100644 
 index 0000000 . . 56efede 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / nbt / NBTTagString . java . patch 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / nbt / NBTTagString . java 
 + + + + . . / src - work / minecraft / net / minecraft / nbt / NBTTagString . java 
 + @ @ - 32 , 7 + 32 , 7 @ @ 
 + void func _ 152446 _ a ( DataInput p _ 152446 _ 1 _ , int p _ 152446 _ 2 _ , NBTSizeTracker p _ 152446 _ 3 _ ) throws IOException 
 + { 
 + this . field _ 74751 _ a = p _ 152446 _ 1 _ . readUTF ( ) ; 
 + - p _ 152446 _ 3 _ . func _ 152450 _ a ( ( long ) ( 16 * this . field _ 74751 _ a . length ( ) ) ) ; 
 + + NBTSizeTracker . readUTF ( p _ 152446 _ 3 _ , field _ 74751 _ a ) ; / / Forge : Correctly read String length including header . 
 + } 
 + 
 + public byte func _ 74732 _ a ( )
