BLEU SCORE: 0.05522397783539469

TEST MSG: [ 1 . 11 ] Fix null checks in shouldCauseReequipAnimation
GENERATED MSG: Fix items rendering too low in first person .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index 4ed9f91 . . 04ef10c 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 669 , 12 + 669 , 15 @ @ public class ForgeHooksClient <nl> } <nl> <nl> private static int slotMainHand = 0 ; <nl> - / / FIXME <nl> - public static boolean shouldCauseReequipAnimation ( ItemStack from , ItemStack to , int slot ) <nl> + <nl> + public static boolean shouldCauseReequipAnimation ( @ Nonnull ItemStack from , @ Nonnull ItemStack to , int slot ) <nl> { <nl> - if ( from = = null & & to ! = null ) return true ; <nl> - if ( from = = null & & to = = null ) return false ; <nl> - if ( from ! = null & & to = = null ) return true ; <nl> + boolean fromInvalid = from . func _ 190926 _ b ( ) ; <nl> + boolean toInvalid = to . func _ 190926 _ b ( ) ; <nl> + <nl> + if ( fromInvalid & & toInvalid ) return false ; <nl> + if ( fromInvalid | | toInvalid ) return true ; <nl> + <nl> boolean changed = false ; <nl> if ( slot ! = - 1 ) <nl> {
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index 41c4343 . . 7fc1226 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 608 , 6 + 608 , 7 @ @ public class ForgeHooksClient <nl> } <nl> <nl> private static int slotMainHand = 0 ; <nl> + / / FIXME <nl> public static boolean shouldCauseReequipAnimation ( ItemStack from , ItemStack to , int slot ) <nl> { <nl> if ( ! Objects . equal ( from , to ) | | from = = null ) <nl> @ @ - 620 , 6 + 621 , 6 @ @ public class ForgeHooksClient <nl> changed = slot ! = slotMainHand ; <nl> slotMainHand = slot ; <nl> } <nl> - return from . getItem ( ) . shouldCauseReequipAnimation ( from , to , changed ) ; <nl> + return ! from . getItem ( ) . shouldCauseReequipAnimation ( from , to , changed ) ; <nl> } <nl> }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index 4ed9f91 . . 04ef10c 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 669 , 12 + 669 , 15 @ @ public class ForgeHooksClient 
 } 
 
 private static int slotMainHand = 0 ; 
 - / / FIXME 
 - public static boolean shouldCauseReequipAnimation ( ItemStack from , ItemStack to , int slot ) 
 + 
 + public static boolean shouldCauseReequipAnimation ( @ Nonnull ItemStack from , @ Nonnull ItemStack to , int slot ) 
 { 
 - if ( from = = null & & to ! = null ) return true ; 
 - if ( from = = null & & to = = null ) return false ; 
 - if ( from ! = null & & to = = null ) return true ; 
 + boolean fromInvalid = from . func _ 190926 _ b ( ) ; 
 + boolean toInvalid = to . func _ 190926 _ b ( ) ; 
 + 
 + if ( fromInvalid & & toInvalid ) return false ; 
 + if ( fromInvalid | | toInvalid ) return true ; 
 + 
 boolean changed = false ; 
 if ( slot ! = - 1 ) 
 {

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index 41c4343 . . 7fc1226 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 608 , 6 + 608 , 7 @ @ public class ForgeHooksClient 
 } 
 
 private static int slotMainHand = 0 ; 
 + / / FIXME 
 public static boolean shouldCauseReequipAnimation ( ItemStack from , ItemStack to , int slot ) 
 { 
 if ( ! Objects . equal ( from , to ) | | from = = null ) 
 @ @ - 620 , 6 + 621 , 6 @ @ public class ForgeHooksClient 
 changed = slot ! = slotMainHand ; 
 slotMainHand = slot ; 
 } 
 - return from . getItem ( ) . shouldCauseReequipAnimation ( from , to , changed ) ; 
 + return ! from . getItem ( ) . shouldCauseReequipAnimation ( from , to , changed ) ; 
 } 
 }
