BLEU SCORE: 0.010157883052674562

TEST MSG: Remove hack to force enum configs to strings
GENERATED MSG: Fixed invalid erroring case during loading Advancements form mods that don ' t have advancements .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / ForgeConfigSpec . java b / src / main / java / net / minecraftforge / common / ForgeConfigSpec . java <nl> index c02f1c8 . . 4becc3f 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeConfigSpec . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeConfigSpec . java <nl> @ @ - 362 , 12 + 362 , 7 @ @ public class ForgeConfigSpec extends UnmodifiableConfigWrapper < Config > <nl> } <nl> public < V extends Enum < V > > EnumValue < V > defineEnum ( List < String > path , Supplier < V > defaultSupplier , EnumGetMethod converter , Predicate < Object > validator , Class < V > clazz ) { <nl> context . setClazz ( clazz ) ; <nl> - return new EnumValue < V > ( this , define ( path , new ValueSpec ( defaultSupplier , validator , context ) { <nl> - @ Override <nl> - public Object correct ( Object value ) { <nl> - return ( ( Enum < ? > ) super . correct ( value ) ) . name ( ) ; <nl> - } <nl> - } , defaultSupplier ) . getPath ( ) , defaultSupplier , converter , clazz ) ; <nl> + return new EnumValue < V > ( this , define ( path , new ValueSpec ( defaultSupplier , validator , context ) , defaultSupplier ) . getPath ( ) , defaultSupplier , converter , clazz ) ; <nl> } <nl> <nl> / / boolean
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 80b9376 . . 542a662 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 1305 , 7 + 1305 , 8 @ @ public class ForgeHooks <nl> } <nl> <nl> return true ; <nl> - } <nl> + } , <nl> + true <nl> ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> index b470caf . . df78433 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java <nl> @ @ - 727 , 13 + 727 , 20 @ @ public class CraftingHelper { <nl> <nl> public static boolean findFiles ( ModContainer mod , String base , Function < Path , Boolean > preprocessor , BiFunction < Path , Path , Boolean > processor ) <nl> { <nl> + return findFiles ( mod , base , preprocessor , processor , false ) ; <nl> + } <nl> + public static boolean findFiles ( ModContainer mod , String base , Function < Path , Boolean > preprocessor , BiFunction < Path , Path , Boolean > processor , boolean defaultUnfoundRoot ) <nl> + { <nl> FileSystem fs = null ; <nl> try <nl> { <nl> File source = mod . getSource ( ) ; <nl> <nl> - if ( " minecraft " . equals ( mod . getModId ( ) ) & & DEBUG _ LOAD _ MINECRAFT ) <nl> + if ( " minecraft " . equals ( mod . getModId ( ) ) ) <nl> { <nl> + if ( ! DEBUG _ LOAD _ MINECRAFT ) <nl> + return true ; <nl> + <nl> try <nl> { <nl> URI tmp = CraftingManager . class . getResource ( " / assets / . mcassetsroot " ) . toURI ( ) ; <nl> @ @ - 766 , 7 + 773 , 7 @ @ public class CraftingHelper { <nl> } <nl> <nl> if ( root = = null | | ! Files . exists ( root ) ) <nl> - return false ; <nl> + return defaultUnfoundRoot ; <nl> <nl> if ( preprocessor ! = null ) <nl> {

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / ForgeConfigSpec . java b / src / main / java / net / minecraftforge / common / ForgeConfigSpec . java 
 index c02f1c8 . . 4becc3f 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeConfigSpec . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeConfigSpec . java 
 @ @ - 362 , 12 + 362 , 7 @ @ public class ForgeConfigSpec extends UnmodifiableConfigWrapper < Config > 
 } 
 public < V extends Enum < V > > EnumValue < V > defineEnum ( List < String > path , Supplier < V > defaultSupplier , EnumGetMethod converter , Predicate < Object > validator , Class < V > clazz ) { 
 context . setClazz ( clazz ) ; 
 - return new EnumValue < V > ( this , define ( path , new ValueSpec ( defaultSupplier , validator , context ) { 
 - @ Override 
 - public Object correct ( Object value ) { 
 - return ( ( Enum < ? > ) super . correct ( value ) ) . name ( ) ; 
 - } 
 - } , defaultSupplier ) . getPath ( ) , defaultSupplier , converter , clazz ) ; 
 + return new EnumValue < V > ( this , define ( path , new ValueSpec ( defaultSupplier , validator , context ) , defaultSupplier ) . getPath ( ) , defaultSupplier , converter , clazz ) ; 
 } 
 
 / / boolean

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 80b9376 . . 542a662 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 1305 , 7 + 1305 , 8 @ @ public class ForgeHooks 
 } 
 
 return true ; 
 - } 
 + } , 
 + true 
 ) ; 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 index b470caf . . df78433 100644 
 - - - a / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 + + + b / src / main / java / net / minecraftforge / common / crafting / CraftingHelper . java 
 @ @ - 727 , 13 + 727 , 20 @ @ public class CraftingHelper { 
 
 public static boolean findFiles ( ModContainer mod , String base , Function < Path , Boolean > preprocessor , BiFunction < Path , Path , Boolean > processor ) 
 { 
 + return findFiles ( mod , base , preprocessor , processor , false ) ; 
 + } 
 + public static boolean findFiles ( ModContainer mod , String base , Function < Path , Boolean > preprocessor , BiFunction < Path , Path , Boolean > processor , boolean defaultUnfoundRoot ) 
 + { 
 FileSystem fs = null ; 
 try 
 { 
 File source = mod . getSource ( ) ; 
 
 - if ( " minecraft " . equals ( mod . getModId ( ) ) & & DEBUG _ LOAD _ MINECRAFT ) 
 + if ( " minecraft " . equals ( mod . getModId ( ) ) ) 
 { 
 + if ( ! DEBUG _ LOAD _ MINECRAFT ) 
 + return true ; 
 + 
 try 
 { 
 URI tmp = CraftingManager . class . getResource ( " / assets / . mcassetsroot " ) . toURI ( ) ; 
 @ @ - 766 , 7 + 773 , 7 @ @ public class CraftingHelper { 
 } 
 
 if ( root = = null | | ! Files . exists ( root ) ) 
 - return false ; 
 + return defaultUnfoundRoot ; 
 
 if ( preprocessor ! = null ) 
 {
