BLEU SCORE: 0.031021609279760068

TEST MSG: Add configuration for probot - stale for github
GENERATED MSG: Add in detection for MLMP and try to fail with a graceful message .

TEST DIFF (one line): diff - - git a / . github / stale . yml b / . github / stale . yml <nl> new file mode 100644 <nl> index 0000000 . . 3a83d7b <nl> - - - / dev / null <nl> + + + b / . github / stale . yml <nl> @ @ - 0 , 0 + 1 , 24 @ @ <nl> + # Configuration for probot - stale - https : / / github . com / probot / stale <nl> + <nl> + # Number of days of inactivity before an Issue or Pull Request becomes stale <nl> + daysUntilStale : 30 <nl> + # Number of days of inactivity before a stale Issue or Pull Request is closed <nl> + daysUntilClose : 7 <nl> + # Issues or Pull Requests with these labels will never be considered stale . Set to ` [ ] ` to disable <nl> + exemptLabels : <nl> + - Assigned <nl> + # Label to use when marking as stale <nl> + staleLabel : Stale <nl> + # Comment to post when marking as stale . Set to ` false ` to disable <nl> + markComment : > <nl> + This has been automatically marked as stale because it has not had <nl> + recent activity . It will be closed if no further activity occurs . Thank you <nl> + for your contributions . <nl> + # Comment to post when removing the stale label . Set to ` false ` to disable <nl> + unmarkComment : false <nl> + # Comment to post when closing a stale Issue or Pull Request . Set to ` false ` to disable <nl> + closeComment : > <nl> + This has been automatically closed because it has not had <nl> + recent activity . Please feel free to update or reopen it . <nl> + # Limit to only ` issues ` or ` pulls ` <nl> + only : pulls
NEAREST DIFF (one line): diff - - git a / fml / server / cpw / mods / fml / server / FMLServerHandler . java b / fml / server / cpw / mods / fml / server / FMLServerHandler . java <nl> index 0aa90e7 . . 50a81f0 100644 <nl> - - - a / fml / server / cpw / mods / fml / server / FMLServerHandler . java <nl> + + + b / fml / server / cpw / mods / fml / server / FMLServerHandler . java <nl> @ @ - 44 , 18 + 44 , 21 @ @ import cpw . mods . fml . common . ModContainer ; <nl> / * * <nl> * Handles primary communication from hooked code into the system <nl> * <nl> - * The FML entry point is { @ link # onPreLoad ( MinecraftServer ) } called from { @ link MinecraftServer } <nl> + * The FML entry point is { @ link # onPreLoad ( MinecraftServer ) } called from <nl> + * { @ link MinecraftServer } <nl> * <nl> - * Obfuscated code should focus on this class and other members of the " server " ( or " client " ) code <nl> + * Obfuscated code should focus on this class and other members of the " server " <nl> + * ( or " client " ) code <nl> * <nl> * The actual mod loading is handled at arms length by { @ link Loader } <nl> * <nl> - * It is expected that a similar class will exist for each target environment : Bukkit and Client side . <nl> + * It is expected that a similar class will exist for each target environment : <nl> + * Bukkit and Client side . <nl> * <nl> * It should not be directly modified . <nl> * <nl> * @ author cpw <nl> - * <nl> + * <nl> * / <nl> public class FMLServerHandler implements IFMLSidedHandler <nl> { <nl> @ @ - 75 , 11 + 78 , 41 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> private BiomeGenBase [ ] defaultOverworldBiomes ; <nl> <nl> / * * <nl> - * Called to start the whole game off from { @ link MinecraftServer # startServer } <nl> + * Called to start the whole game off from <nl> + * { @ link MinecraftServer # startServer } <nl> + * <nl> * @ param minecraftServer <nl> * / <nl> public void onPreLoad ( MinecraftServer minecraftServer ) <nl> { <nl> + try <nl> + { <nl> + Class . forName ( " BaseModMp " , false , getClass ( ) . getClassLoader ( ) ) ; <nl> + MinecraftServer . field _ 6038 _ a . severe ( " " <nl> + + " Forge Mod Loader has detected that this server has an ModLoaderMP installed alongside Forge Mod Loader . \ n " <nl> + + " This will cause a serious problem with compatibility . To protect your worlds , this minecraft server will now shutdown . \ n " <nl> + + " You should follow the installation instructions of either Minecraft Forge of Forge Mod Loader and NOT install ModLoaderMP " <nl> + + " into the minecraft _ server . jar file " <nl> + + " before this server will be allowed to start up . Failure to do so will simply result in more startup failures . \ n " <nl> + + " The authors of Minecraft Forge and Forge Mod Loader strongly suggest you talk to your mod ' s authors and get them to update their " <nl> + + " requirements . ModLoaderMP is not compatible with Minecraft Forge on the server and they will need to update their mod " <nl> + + " for Minecraft Forge and other server compatibility , unless they are Minecraft Forge mods , in which case they already " <nl> + + " don ' t need ModLoaderMP and the mod author simply has failed to update his requirements and should be informed appropriately . \ n " <nl> + + " The authors of Forge Mod Loader would like to be compatible with ModLoaderMP but it is closed source and owned by SDK . " <nl> + + " SDK , the author of ModLoaderMP , has a standing invitation to submit compatibility patches " <nl> + + " to the open source community project that is Forge Mod Loader so that this incompatibility doesn ' t last . " <nl> + + " Users who wish to enjoy mods of both types are " <nl> + + " encouraged to request of SDK that he submit a compatibility patch to the Forge Mod Loader project at " <nl> + + " http : / / github . com / cpw / FML . Posting on the minecraft forums at http : / / www . minecraftforum . net / topic / 86765 - ( the MLMP thread ) " <nl> + + " may encourage him in this effort . However , I ask that your requests be polite . " <nl> + + " Now , the server has to shutdown so you can reinstall your minecraft _ server . jar properly , until such time as we can work together . " ) ; <nl> + throw new RuntimeException ( <nl> + " This FML based server has detected an installation of ModLoaderMP alongside . This will cause serious compatibility issues , so the server will now shut down . " ) ; <nl> + } <nl> + catch ( ClassNotFoundException e ) <nl> + { <nl> + / / We ' re safe . continue <nl> + } <nl> server = minecraftServer ; <nl> FMLCommonHandler . instance ( ) . registerSidedDelegate ( this ) ; <nl> CommonRegistry . registerRegistry ( new ServerRegistry ( ) ) ; <nl> @ @ - 112 , 6 + 145 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> <nl> / * * <nl> * Get the server instance <nl> + * <nl> * @ return <nl> * / <nl> public MinecraftServer getServer ( ) <nl> @ @ - 130 , 8 + 164 , 8 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> / * * <nl> * Called from ChunkProviderServer when a chunk needs to be populated <nl> * <nl> - * To avoid polluting the worldgen seed , we generate a new random from the world seed and <nl> - * generate a seed from that <nl> + * To avoid polluting the worldgen seed , we generate a new random from the <nl> + * world seed and generate a seed from that <nl> * <nl> * @ param chunkProvider <nl> * @ param chunkX <nl> @ @ - 175 , 7 + 209 , 8 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> } <nl> <nl> / * * <nl> - * Is the offered class and instance of BaseMod and therefore a ModLoader mod ? <nl> + * Is the offered class and instance of BaseMod and therefore a ModLoader <nl> + * mod ? <nl> * / <nl> public boolean isModLoaderMod ( Class < ? > clazz ) <nl> { <nl> @ @ - 188 , 12 + 223 , 13 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> public ModContainer loadBaseModMod ( Class < ? > clazz , File canonicalFile ) <nl> { <nl> @ SuppressWarnings ( " unchecked " ) <nl> - Class < ? extends BaseMod > bmClazz = ( Class < ? extends BaseMod > ) clazz ; <nl> + Class < ? extends BaseMod > bmClazz = ( Class < ? extends BaseMod > ) clazz ; <nl> return new ModLoaderModContainer ( bmClazz , canonicalFile ) ; <nl> } <nl> <nl> / * * <nl> * Called to notify that an item was picked up from the world <nl> + * <nl> * @ param entityItem <nl> * @ param entityPlayer <nl> * / <nl> @ @ - 210 , 6 + 246 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> <nl> / * * <nl> * Raise an exception <nl> + * <nl> * @ param exception <nl> * @ param message <nl> * @ param stopGame <nl> @ @ - 221 , 7 + 258 , 8 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> } <nl> <nl> / * * <nl> - * Attempt to dispense the item as an entity other than just as a the item itself <nl> + * Attempt to dispense the item as an entity other than just as a the item <nl> + * itself <nl> * <nl> * @ param world <nl> * @ param x <nl> @ @ - 255 , 6 + 293 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> <nl> / * * <nl> * Build a list of default overworld biomes <nl> + * <nl> * @ return <nl> * / <nl> public BiomeGenBase [ ] getDefaultOverworldBiomes ( ) <nl> @ @ - 282 , 6 + 321 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> <nl> / * * <nl> * Called when an item is crafted <nl> + * <nl> * @ param player <nl> * @ param craftedItem <nl> * @ param craftingGrid <nl> @ @ - 319 , 7 + 359 , 8 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> * <nl> * @ param chat <nl> * @ param player <nl> - * @ return true if you want the packet to stop processing and not echo to the rest of the world <nl> + * @ return true if you want the packet to stop processing and not echo to <nl> + * the rest of the world <nl> * / <nl> public boolean handleChatPacket ( Packet3Chat chat , EntityPlayer player ) <nl> { <nl> @ @ - 336 , 6 + 377 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> <nl> / * * <nl> * Called when a packet 250 packet is received from the player <nl> + * <nl> * @ param packet <nl> * @ param player <nl> * / <nl> @ @ - 357 , 11 + 399 , 13 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> <nl> / * * <nl> * Handle register requests for packet 250 channels <nl> + * <nl> * @ param packet <nl> * / <nl> private void handleClientRegistration ( Packet250CustomPayload packet , EntityPlayer player ) <nl> { <nl> - if ( packet . field _ 44004 _ c = = null ) { <nl> + if ( packet . field _ 44004 _ c = = null ) <nl> + { <nl> return ; <nl> } <nl> try <nl> @ @ - 392 , 6 + 436 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> <nl> / * * <nl> * Handle a login <nl> + * <nl> * @ param loginPacket <nl> * @ param networkManager <nl> * / <nl> @ @ - 401 , 12 + 446 , 14 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> packet . field _ 44005 _ a = " REGISTER " ; <nl> packet . field _ 44004 _ c = FMLCommonHandler . instance ( ) . getPacketRegistry ( ) ; <nl> packet . field _ 44003 _ b = packet . field _ 44004 _ c . length ; <nl> - if ( packet . field _ 44003 _ b > 0 ) { <nl> + if ( packet . field _ 44003 _ b > 0 ) <nl> + { <nl> networkManager . func _ 745 _ a ( packet ) ; <nl> } <nl> } <nl> <nl> - public void announceLogin ( EntityPlayer player ) { <nl> + public void announceLogin ( EntityPlayer player ) <nl> + { <nl> for ( ModContainer mod : Loader . getModList ( ) ) <nl> { <nl> if ( mod . wantsPlayerTracking ( ) ) <nl> @ @ - 415 , 6 + 462 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> } <nl> } <nl> } <nl> + <nl> / * * <nl> * Are we a server ? <nl> * / <nl> @ @ - 436 , 9 + 484 , 12 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> @ Override <nl> public File getMinecraftRootDirectory ( ) <nl> { <nl> - try { <nl> + try <nl> + { <nl> return server . func _ 6009 _ a ( " . " ) . getCanonicalFile ( ) ; <nl> - } catch ( IOException ioe ) { <nl> + } <nl> + catch ( IOException ioe ) <nl> + { <nl> return new File ( " . " ) ; <nl> } <nl> } <nl> @ @ - 449 , 8 + 500 , 10 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> * / <nl> public boolean handleServerCommand ( String command , String player , ICommandListener listener ) <nl> { <nl> - for ( ModContainer mod : Loader . getModList ( ) ) { <nl> - if ( mod . wantsConsoleCommands ( ) & & mod . getConsoleHandler ( ) . handleCommand ( command , player , listener ) ) { <nl> + for ( ModContainer mod : Loader . getModList ( ) ) <nl> + { <nl> + if ( mod . wantsConsoleCommands ( ) & & mod . getConsoleHandler ( ) . handleCommand ( command , player , listener ) ) <nl> + { <nl> return true ; <nl> } <nl> }

TEST DIFF:
diff - - git a / . github / stale . yml b / . github / stale . yml 
 new file mode 100644 
 index 0000000 . . 3a83d7b 
 - - - / dev / null 
 + + + b / . github / stale . yml 
 @ @ - 0 , 0 + 1 , 24 @ @ 
 + # Configuration for probot - stale - https : / / github . com / probot / stale 
 + 
 + # Number of days of inactivity before an Issue or Pull Request becomes stale 
 + daysUntilStale : 30 
 + # Number of days of inactivity before a stale Issue or Pull Request is closed 
 + daysUntilClose : 7 
 + # Issues or Pull Requests with these labels will never be considered stale . Set to ` [ ] ` to disable 
 + exemptLabels : 
 + - Assigned 
 + # Label to use when marking as stale 
 + staleLabel : Stale 
 + # Comment to post when marking as stale . Set to ` false ` to disable 
 + markComment : > 
 + This has been automatically marked as stale because it has not had 
 + recent activity . It will be closed if no further activity occurs . Thank you 
 + for your contributions . 
 + # Comment to post when removing the stale label . Set to ` false ` to disable 
 + unmarkComment : false 
 + # Comment to post when closing a stale Issue or Pull Request . Set to ` false ` to disable 
 + closeComment : > 
 + This has been automatically closed because it has not had 
 + recent activity . Please feel free to update or reopen it . 
 + # Limit to only ` issues ` or ` pulls ` 
 + only : pulls

NEAREST DIFF:
diff - - git a / fml / server / cpw / mods / fml / server / FMLServerHandler . java b / fml / server / cpw / mods / fml / server / FMLServerHandler . java 
 index 0aa90e7 . . 50a81f0 100644 
 - - - a / fml / server / cpw / mods / fml / server / FMLServerHandler . java 
 + + + b / fml / server / cpw / mods / fml / server / FMLServerHandler . java 
 @ @ - 44 , 18 + 44 , 21 @ @ import cpw . mods . fml . common . ModContainer ; 
 / * * 
 * Handles primary communication from hooked code into the system 
 * 
 - * The FML entry point is { @ link # onPreLoad ( MinecraftServer ) } called from { @ link MinecraftServer } 
 + * The FML entry point is { @ link # onPreLoad ( MinecraftServer ) } called from 
 + * { @ link MinecraftServer } 
 * 
 - * Obfuscated code should focus on this class and other members of the " server " ( or " client " ) code 
 + * Obfuscated code should focus on this class and other members of the " server " 
 + * ( or " client " ) code 
 * 
 * The actual mod loading is handled at arms length by { @ link Loader } 
 * 
 - * It is expected that a similar class will exist for each target environment : Bukkit and Client side . 
 + * It is expected that a similar class will exist for each target environment : 
 + * Bukkit and Client side . 
 * 
 * It should not be directly modified . 
 * 
 * @ author cpw 
 - * 
 + * 
 * / 
 public class FMLServerHandler implements IFMLSidedHandler 
 { 
 @ @ - 75 , 11 + 78 , 41 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 private BiomeGenBase [ ] defaultOverworldBiomes ; 
 
 / * * 
 - * Called to start the whole game off from { @ link MinecraftServer # startServer } 
 + * Called to start the whole game off from 
 + * { @ link MinecraftServer # startServer } 
 + * 
 * @ param minecraftServer 
 * / 
 public void onPreLoad ( MinecraftServer minecraftServer ) 
 { 
 + try 
 + { 
 + Class . forName ( " BaseModMp " , false , getClass ( ) . getClassLoader ( ) ) ; 
 + MinecraftServer . field _ 6038 _ a . severe ( " " 
 + + " Forge Mod Loader has detected that this server has an ModLoaderMP installed alongside Forge Mod Loader . \ n " 
 + + " This will cause a serious problem with compatibility . To protect your worlds , this minecraft server will now shutdown . \ n " 
 + + " You should follow the installation instructions of either Minecraft Forge of Forge Mod Loader and NOT install ModLoaderMP " 
 + + " into the minecraft _ server . jar file " 
 + + " before this server will be allowed to start up . Failure to do so will simply result in more startup failures . \ n " 
 + + " The authors of Minecraft Forge and Forge Mod Loader strongly suggest you talk to your mod ' s authors and get them to update their " 
 + + " requirements . ModLoaderMP is not compatible with Minecraft Forge on the server and they will need to update their mod " 
 + + " for Minecraft Forge and other server compatibility , unless they are Minecraft Forge mods , in which case they already " 
 + + " don ' t need ModLoaderMP and the mod author simply has failed to update his requirements and should be informed appropriately . \ n " 
 + + " The authors of Forge Mod Loader would like to be compatible with ModLoaderMP but it is closed source and owned by SDK . " 
 + + " SDK , the author of ModLoaderMP , has a standing invitation to submit compatibility patches " 
 + + " to the open source community project that is Forge Mod Loader so that this incompatibility doesn ' t last . " 
 + + " Users who wish to enjoy mods of both types are " 
 + + " encouraged to request of SDK that he submit a compatibility patch to the Forge Mod Loader project at " 
 + + " http : / / github . com / cpw / FML . Posting on the minecraft forums at http : / / www . minecraftforum . net / topic / 86765 - ( the MLMP thread ) " 
 + + " may encourage him in this effort . However , I ask that your requests be polite . " 
 + + " Now , the server has to shutdown so you can reinstall your minecraft _ server . jar properly , until such time as we can work together . " ) ; 
 + throw new RuntimeException ( 
 + " This FML based server has detected an installation of ModLoaderMP alongside . This will cause serious compatibility issues , so the server will now shut down . " ) ; 
 + } 
 + catch ( ClassNotFoundException e ) 
 + { 
 + / / We ' re safe . continue 
 + } 
 server = minecraftServer ; 
 FMLCommonHandler . instance ( ) . registerSidedDelegate ( this ) ; 
 CommonRegistry . registerRegistry ( new ServerRegistry ( ) ) ; 
 @ @ - 112 , 6 + 145 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 
 / * * 
 * Get the server instance 
 + * 
 * @ return 
 * / 
 public MinecraftServer getServer ( ) 
 @ @ - 130 , 8 + 164 , 8 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 / * * 
 * Called from ChunkProviderServer when a chunk needs to be populated 
 * 
 - * To avoid polluting the worldgen seed , we generate a new random from the world seed and 
 - * generate a seed from that 
 + * To avoid polluting the worldgen seed , we generate a new random from the 
 + * world seed and generate a seed from that 
 * 
 * @ param chunkProvider 
 * @ param chunkX 
 @ @ - 175 , 7 + 209 , 8 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 } 
 
 / * * 
 - * Is the offered class and instance of BaseMod and therefore a ModLoader mod ? 
 + * Is the offered class and instance of BaseMod and therefore a ModLoader 
 + * mod ? 
 * / 
 public boolean isModLoaderMod ( Class < ? > clazz ) 
 { 
 @ @ - 188 , 12 + 223 , 13 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 public ModContainer loadBaseModMod ( Class < ? > clazz , File canonicalFile ) 
 { 
 @ SuppressWarnings ( " unchecked " ) 
 - Class < ? extends BaseMod > bmClazz = ( Class < ? extends BaseMod > ) clazz ; 
 + Class < ? extends BaseMod > bmClazz = ( Class < ? extends BaseMod > ) clazz ; 
 return new ModLoaderModContainer ( bmClazz , canonicalFile ) ; 
 } 
 
 / * * 
 * Called to notify that an item was picked up from the world 
 + * 
 * @ param entityItem 
 * @ param entityPlayer 
 * / 
 @ @ - 210 , 6 + 246 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 
 / * * 
 * Raise an exception 
 + * 
 * @ param exception 
 * @ param message 
 * @ param stopGame 
 @ @ - 221 , 7 + 258 , 8 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 } 
 
 / * * 
 - * Attempt to dispense the item as an entity other than just as a the item itself 
 + * Attempt to dispense the item as an entity other than just as a the item 
 + * itself 
 * 
 * @ param world 
 * @ param x 
 @ @ - 255 , 6 + 293 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 
 / * * 
 * Build a list of default overworld biomes 
 + * 
 * @ return 
 * / 
 public BiomeGenBase [ ] getDefaultOverworldBiomes ( ) 
 @ @ - 282 , 6 + 321 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 
 / * * 
 * Called when an item is crafted 
 + * 
 * @ param player 
 * @ param craftedItem 
 * @ param craftingGrid 
 @ @ - 319 , 7 + 359 , 8 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 * 
 * @ param chat 
 * @ param player 
 - * @ return true if you want the packet to stop processing and not echo to the rest of the world 
 + * @ return true if you want the packet to stop processing and not echo to 
 + * the rest of the world 
 * / 
 public boolean handleChatPacket ( Packet3Chat chat , EntityPlayer player ) 
 { 
 @ @ - 336 , 6 + 377 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 
 / * * 
 * Called when a packet 250 packet is received from the player 
 + * 
 * @ param packet 
 * @ param player 
 * / 
 @ @ - 357 , 11 + 399 , 13 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 
 / * * 
 * Handle register requests for packet 250 channels 
 + * 
 * @ param packet 
 * / 
 private void handleClientRegistration ( Packet250CustomPayload packet , EntityPlayer player ) 
 { 
 - if ( packet . field _ 44004 _ c = = null ) { 
 + if ( packet . field _ 44004 _ c = = null ) 
 + { 
 return ; 
 } 
 try 
 @ @ - 392 , 6 + 436 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 
 / * * 
 * Handle a login 
 + * 
 * @ param loginPacket 
 * @ param networkManager 
 * / 
 @ @ - 401 , 12 + 446 , 14 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 packet . field _ 44005 _ a = " REGISTER " ; 
 packet . field _ 44004 _ c = FMLCommonHandler . instance ( ) . getPacketRegistry ( ) ; 
 packet . field _ 44003 _ b = packet . field _ 44004 _ c . length ; 
 - if ( packet . field _ 44003 _ b > 0 ) { 
 + if ( packet . field _ 44003 _ b > 0 ) 
 + { 
 networkManager . func _ 745 _ a ( packet ) ; 
 } 
 } 
 
 - public void announceLogin ( EntityPlayer player ) { 
 + public void announceLogin ( EntityPlayer player ) 
 + { 
 for ( ModContainer mod : Loader . getModList ( ) ) 
 { 
 if ( mod . wantsPlayerTracking ( ) ) 
 @ @ - 415 , 6 + 462 , 7 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 } 
 } 
 } 
 + 
 / * * 
 * Are we a server ? 
 * / 
 @ @ - 436 , 9 + 484 , 12 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 @ Override 
 public File getMinecraftRootDirectory ( ) 
 { 
 - try { 
 + try 
 + { 
 return server . func _ 6009 _ a ( " . " ) . getCanonicalFile ( ) ; 
 - } catch ( IOException ioe ) { 
 + } 
 + catch ( IOException ioe ) 
 + { 
 return new File ( " . " ) ; 
 } 
 } 
 @ @ - 449 , 8 + 500 , 10 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 * / 
 public boolean handleServerCommand ( String command , String player , ICommandListener listener ) 
 { 
 - for ( ModContainer mod : Loader . getModList ( ) ) { 
 - if ( mod . wantsConsoleCommands ( ) & & mod . getConsoleHandler ( ) . handleCommand ( command , player , listener ) ) { 
 + for ( ModContainer mod : Loader . getModList ( ) ) 
 + { 
 + if ( mod . wantsConsoleCommands ( ) & & mod . getConsoleHandler ( ) . handleCommand ( command , player , listener ) ) 
 + { 
 return true ; 
 } 
 }
