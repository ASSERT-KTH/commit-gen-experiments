BLEU SCORE: 0.028265205879007455

TEST MSG: Changed Event . setCanceled To throw UnsupportedOperationException instead of IllegalArgumetnException when called on a non - cancelable object
GENERATED MSG: Added PotionBrewEvent . Pre / Post . To allow for modification and cancelation of Brewing .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / common / eventhandler / Event . java b / src / main / java / net / minecraftforge / fml / common / eventhandler / Event . java <nl> index 41fa28c . . 3f4dddb 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / common / eventhandler / Event . java <nl> + + + b / src / main / java / net / minecraftforge / fml / common / eventhandler / Event . java <nl> @ @ - 79 , 8 + 79 , 9 @ @ public class Event <nl> } <nl> <nl> / * * <nl> - * Sets the state of this event , not all events are cancelable , and any attempt to <nl> - * cancel a event that can ' t be will result in a IllegalArgumentException . <nl> + * Sets the cancel state of this event . Note , not all events are cancelable , and any attempt to <nl> + * invoke this method on an event that is not cancelable ( as determined by { @ link # isCancelable } <nl> + * will result in an { @ link UnsupportedOperationException } . <nl> * <nl> * The functionality of setting the canceled state is defined on a per - event bases . <nl> * <nl> @ @ - 90 , 7 + 91 , 10 @ @ public class Event <nl> { <nl> if ( ! isCancelable ( ) ) <nl> { <nl> - throw new IllegalArgumentException ( " Attempted to cancel a non cancellable event " ) ; <nl> + throw new UnsupportedOperationException ( <nl> + " Attempted to call Event # setCanceled ( ) on a non - cancelable event of type : " <nl> + + this . getClass ( ) . getCanonicalName ( ) <nl> + ) ; <nl> } <nl> isCanceled = cancel ; <nl> } <nl> @ @ - 126 , 6 + 130 , 7 @ @ public class Event <nl> { <nl> result = value ; <nl> } <nl> + <nl> / * * <nl> * Called by the base constructor , this is used by ASM generated <nl> * event classes to setup various functionality such as the listener list .
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> index 95c8887 . . df91475 100644 <nl> - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch <nl> @ @ - 9 , 7 + 9 , 14 @ @ <nl> { <nl> int j = this . field _ 145945 _ j [ i ] . func _ 77960 _ j ( ) ; <nl> int k = this . func _ 145936 _ c ( j , itemstack ) ; <nl> - @ @ - 157 , 7 + 157 , 7 @ @ <nl> + @ @ - 151 , 13 + 151 , 14 @ @ <nl> + <nl> + private void func _ 145940 _ l ( ) <nl> + { <nl> + + if ( net . minecraftforge . event . ForgeEventFactory . onPotionAttemptBreaw ( field _ 145945 _ j ) ) return ; <nl> + if ( this . func _ 145934 _ k ( ) ) <nl> + { <nl> + ItemStack itemstack = this . field _ 145945 _ j [ 3 ] ; <nl> <nl> for ( int i = 0 ; i < 3 ; + + i ) <nl> { <nl> @ @ - 18 , 7 + 25 , 7 @ @ <nl> { <nl> int j = this . field _ 145945 _ j [ i ] . func _ 77960 _ j ( ) ; <nl> int k = this . func _ 145936 _ c ( j , itemstack ) ; <nl> - @ @ - 178 , 9 + 178 , 9 @ @ <nl> + @ @ - 178 , 9 + 179 , 9 @ @ <nl> } <nl> } <nl> <nl> @ @ - 30 , 15 + 37 , 15 @ @ <nl> } <nl> else <nl> { <nl> - @ @ - 191 , 6 + 191 , 7 @ @ <nl> + @ @ - 191 , 6 + 192 , 7 @ @ <nl> this . field _ 145945 _ j [ 3 ] = null ; <nl> } <nl> } <nl> - + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . brewing . PotionBrewedEvent ( field _ 145945 _ j ) ) ; <nl> + + net . minecraftforge . event . ForgeEventFactory . onPotionBrewed ( field _ 145945 _ j ) ; <nl> } <nl> } <nl> <nl> - @ @ - 306 , 7 + 307 , 7 @ @ <nl> + @ @ - 306 , 7 + 308 , 7 @ @ <nl> <nl> public boolean func _ 94041 _ b ( int p _ 94041 _ 1 _ , ItemStack p _ 94041 _ 2 _ ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> index 7cb7664 . . 343d2b8 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 36 , 6 + 36 , 7 @ @ import net . minecraftforge . common . ForgeHooks ; <nl> import net . minecraftforge . common . IExtendedEntityProperties ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . common . util . BlockSnapshot ; <nl> + import net . minecraftforge . event . brewing . PotionBrewEvent ; <nl> import net . minecraftforge . event . entity . EntityEvent ; <nl> import net . minecraftforge . event . entity . EntityStruckByLightningEvent ; <nl> import net . minecraftforge . event . entity . PlaySoundAtEntityEvent ; <nl> @ @ - 385 , 4 + 386 , 30 @ @ public class ForgeEventFactory <nl> LivingHealEvent event = new LivingHealEvent ( entity , amount ) ; <nl> return ( MinecraftForge . EVENT _ BUS . post ( event ) ? 0 : event . amount ) ; <nl> } <nl> + <nl> + public static boolean onPotionAttemptBreaw ( ItemStack [ ] stacks ) <nl> + { <nl> + ItemStack [ ] tmp = new ItemStack [ stacks . length ] ; <nl> + for ( int x = 0 ; x < tmp . length ; x + + ) <nl> + tmp [ x ] = stacks [ x ] . copy ( ) ; <nl> + <nl> + PotionBrewEvent . Pre event = new PotionBrewEvent . Pre ( tmp ) ; <nl> + if ( MinecraftForge . EVENT _ BUS . post ( event ) ) <nl> + { <nl> + boolean changed = false ; <nl> + for ( int x = 0 ; x < stacks . length ; x + + ) <nl> + { <nl> + changed | = ItemStack . areItemStacksEqual ( tmp [ x ] , stacks [ x ] ) ; <nl> + stacks [ x ] = event . getItem ( x ) ; <nl> + } <nl> + onPotionBrewed ( stacks ) ; <nl> + return true ; <nl> + } <nl> + return false ; <nl> + } <nl> + <nl> + public static void onPotionBrewed ( ItemStack [ ] brewingItemStacks ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . post ( new PotionBrewEvent . Post ( brewingItemStacks ) ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / event / brewing / PotionBrewEvent . java b / src / main / java / net / minecraftforge / event / brewing / PotionBrewEvent . java <nl> new file mode 100644 <nl> index 0000000 . . d7c3d1b <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / event / brewing / PotionBrewEvent . java <nl> @ @ - 0 , 0 + 1 , 83 @ @ <nl> + package net . minecraftforge . event . brewing ; <nl> + <nl> + import net . minecraft . item . ItemStack ; <nl> + import net . minecraftforge . fml . common . eventhandler . Cancelable ; <nl> + import net . minecraftforge . fml . common . eventhandler . Event ; <nl> + import net . minecraftforge . fml . common . eventhandler . Event . HasResult ; <nl> + <nl> + <nl> + public class PotionBrewEvent extends Event <nl> + { <nl> + private ItemStack [ ] stacks ; <nl> + <nl> + protected PotionBrewEvent ( ItemStack [ ] stacks ) <nl> + { <nl> + this . stacks = stacks ; <nl> + } <nl> + <nl> + public ItemStack getItem ( int index ) <nl> + { <nl> + if ( index > = stacks . length ) return null ; <nl> + return stacks [ index ] ; <nl> + } <nl> + <nl> + public void setItem ( int index , ItemStack stack ) <nl> + { <nl> + if ( index < stacks . length ) <nl> + { <nl> + stacks [ index ] = stack ; <nl> + } <nl> + } <nl> + <nl> + public int getLength ( ) <nl> + { <nl> + return stacks . length ; <nl> + } <nl> + <nl> + / * * <nl> + * PotionBrewEvent . Pre is fired before vanilla brewing takes place . <nl> + * All changes made to the event ' s array will be made to the TileEntity if the event is canceled . <nl> + * < br > <nl> + * The event is fired during the TileEntityBrewingStand # brewPotions ( ) method invocation . < br > <nl> + * < br > <nl> + * { @ link # brewingStacks } contains the itemstack array from the TileEntityBrewer holding all items in Brewer . < br > <nl> + * < br > <nl> + * This event is { @ link Cancelable } . < br > <nl> + * If the event is not canceled , the vanilla brewing will take place instead of modded brewing . <nl> + * < br > <nl> + * This event does not have a result . { @ link HasResult } < br > <nl> + * < br > <nl> + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . < br > <nl> + * < br > <nl> + * If this event is canceled , and items have been modified , PotionBrewEvent . Post will automatically be fired . <nl> + * * / <nl> + @ Cancelable <nl> + public static class Pre extends PotionBrewEvent <nl> + { <nl> + public Pre ( ItemStack [ ] stacks ) <nl> + { <nl> + super ( stacks ) ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * PotionBrewEvent . Post is fired when a potion is brewed in the brewing stand . <nl> + * < br > <nl> + * The event is fired during the TileEntityBrewingStand # brewPotions ( ) method invocation . < br > <nl> + * < br > <nl> + * { @ link # brewingStacks } contains the itemstack array from the TileEntityBrewer holding all items in Brewer . < br > <nl> + * < br > <nl> + * This event is not { @ link Cancelable } . < br > <nl> + * < br > <nl> + * This event does not have a result . { @ link HasResult } < br > <nl> + * < br > <nl> + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . < br > <nl> + * * / <nl> + public static class Post extends PotionBrewedEvent <nl> + { <nl> + public Post ( ItemStack [ ] stacks ) <nl> + { <nl> + super ( stacks ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java b / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java <nl> index 7fe80e6 . . c18cfab 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java <nl> @ @ - 16 , 14 + 16 , 18 @ @ import net . minecraft . item . ItemStack ; <nl> * < br > <nl> * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . < br > <nl> * * / <nl> - public class PotionBrewedEvent extends Event <nl> + @ Deprecated <nl> + public class PotionBrewedEvent extends PotionBrewEvent <nl> { <nl> / * * <nl> * The brewing stacks in the brewing stand . Each index has the possibility to be null , so make sure you check . <nl> + * Changing this array to another one has no effect . <nl> * / <nl> + @ Deprecated <nl> public ItemStack [ ] brewingStacks ; <nl> public PotionBrewedEvent ( ItemStack [ ] brewingStacks ) <nl> { <nl> + super ( brewingStacks ) ; <nl> this . brewingStacks = brewingStacks ; <nl> } <nl> }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / common / eventhandler / Event . java b / src / main / java / net / minecraftforge / fml / common / eventhandler / Event . java 
 index 41fa28c . . 3f4dddb 100644 
 - - - a / src / main / java / net / minecraftforge / fml / common / eventhandler / Event . java 
 + + + b / src / main / java / net / minecraftforge / fml / common / eventhandler / Event . java 
 @ @ - 79 , 8 + 79 , 9 @ @ public class Event 
 } 
 
 / * * 
 - * Sets the state of this event , not all events are cancelable , and any attempt to 
 - * cancel a event that can ' t be will result in a IllegalArgumentException . 
 + * Sets the cancel state of this event . Note , not all events are cancelable , and any attempt to 
 + * invoke this method on an event that is not cancelable ( as determined by { @ link # isCancelable } 
 + * will result in an { @ link UnsupportedOperationException } . 
 * 
 * The functionality of setting the canceled state is defined on a per - event bases . 
 * 
 @ @ - 90 , 7 + 91 , 10 @ @ public class Event 
 { 
 if ( ! isCancelable ( ) ) 
 { 
 - throw new IllegalArgumentException ( " Attempted to cancel a non cancellable event " ) ; 
 + throw new UnsupportedOperationException ( 
 + " Attempted to call Event # setCanceled ( ) on a non - cancelable event of type : " 
 + + this . getClass ( ) . getCanonicalName ( ) 
 + ) ; 
 } 
 isCanceled = cancel ; 
 } 
 @ @ - 126 , 6 + 130 , 7 @ @ public class Event 
 { 
 result = value ; 
 } 
 + 
 / * * 
 * Called by the base constructor , this is used by ASM generated 
 * event classes to setup various functionality such as the listener list .

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 index 95c8887 . . df91475 100644 
 - - - a / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 + + + b / patches / minecraft / net / minecraft / tileentity / TileEntityBrewingStand . java . patch 
 @ @ - 9 , 7 + 9 , 14 @ @ 
 { 
 int j = this . field _ 145945 _ j [ i ] . func _ 77960 _ j ( ) ; 
 int k = this . func _ 145936 _ c ( j , itemstack ) ; 
 - @ @ - 157 , 7 + 157 , 7 @ @ 
 + @ @ - 151 , 13 + 151 , 14 @ @ 
 + 
 + private void func _ 145940 _ l ( ) 
 + { 
 + + if ( net . minecraftforge . event . ForgeEventFactory . onPotionAttemptBreaw ( field _ 145945 _ j ) ) return ; 
 + if ( this . func _ 145934 _ k ( ) ) 
 + { 
 + ItemStack itemstack = this . field _ 145945 _ j [ 3 ] ; 
 
 for ( int i = 0 ; i < 3 ; + + i ) 
 { 
 @ @ - 18 , 7 + 25 , 7 @ @ 
 { 
 int j = this . field _ 145945 _ j [ i ] . func _ 77960 _ j ( ) ; 
 int k = this . func _ 145936 _ c ( j , itemstack ) ; 
 - @ @ - 178 , 9 + 178 , 9 @ @ 
 + @ @ - 178 , 9 + 179 , 9 @ @ 
 } 
 } 
 
 @ @ - 30 , 15 + 37 , 15 @ @ 
 } 
 else 
 { 
 - @ @ - 191 , 6 + 191 , 7 @ @ 
 + @ @ - 191 , 6 + 192 , 7 @ @ 
 this . field _ 145945 _ j [ 3 ] = null ; 
 } 
 } 
 - + net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( new net . minecraftforge . event . brewing . PotionBrewedEvent ( field _ 145945 _ j ) ) ; 
 + + net . minecraftforge . event . ForgeEventFactory . onPotionBrewed ( field _ 145945 _ j ) ; 
 } 
 } 
 
 - @ @ - 306 , 7 + 307 , 7 @ @ 
 + @ @ - 306 , 7 + 308 , 7 @ @ 
 
 public boolean func _ 94041 _ b ( int p _ 94041 _ 1 _ , ItemStack p _ 94041 _ 2 _ ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 index 7cb7664 . . 343d2b8 100644 
 - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 36 , 6 + 36 , 7 @ @ import net . minecraftforge . common . ForgeHooks ; 
 import net . minecraftforge . common . IExtendedEntityProperties ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . common . util . BlockSnapshot ; 
 + import net . minecraftforge . event . brewing . PotionBrewEvent ; 
 import net . minecraftforge . event . entity . EntityEvent ; 
 import net . minecraftforge . event . entity . EntityStruckByLightningEvent ; 
 import net . minecraftforge . event . entity . PlaySoundAtEntityEvent ; 
 @ @ - 385 , 4 + 386 , 30 @ @ public class ForgeEventFactory 
 LivingHealEvent event = new LivingHealEvent ( entity , amount ) ; 
 return ( MinecraftForge . EVENT _ BUS . post ( event ) ? 0 : event . amount ) ; 
 } 
 + 
 + public static boolean onPotionAttemptBreaw ( ItemStack [ ] stacks ) 
 + { 
 + ItemStack [ ] tmp = new ItemStack [ stacks . length ] ; 
 + for ( int x = 0 ; x < tmp . length ; x + + ) 
 + tmp [ x ] = stacks [ x ] . copy ( ) ; 
 + 
 + PotionBrewEvent . Pre event = new PotionBrewEvent . Pre ( tmp ) ; 
 + if ( MinecraftForge . EVENT _ BUS . post ( event ) ) 
 + { 
 + boolean changed = false ; 
 + for ( int x = 0 ; x < stacks . length ; x + + ) 
 + { 
 + changed | = ItemStack . areItemStacksEqual ( tmp [ x ] , stacks [ x ] ) ; 
 + stacks [ x ] = event . getItem ( x ) ; 
 + } 
 + onPotionBrewed ( stacks ) ; 
 + return true ; 
 + } 
 + return false ; 
 + } 
 + 
 + public static void onPotionBrewed ( ItemStack [ ] brewingItemStacks ) 
 + { 
 + MinecraftForge . EVENT _ BUS . post ( new PotionBrewEvent . Post ( brewingItemStacks ) ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / event / brewing / PotionBrewEvent . java b / src / main / java / net / minecraftforge / event / brewing / PotionBrewEvent . java 
 new file mode 100644 
 index 0000000 . . d7c3d1b 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / event / brewing / PotionBrewEvent . java 
 @ @ - 0 , 0 + 1 , 83 @ @ 
 + package net . minecraftforge . event . brewing ; 
 + 
 + import net . minecraft . item . ItemStack ; 
 + import net . minecraftforge . fml . common . eventhandler . Cancelable ; 
 + import net . minecraftforge . fml . common . eventhandler . Event ; 
 + import net . minecraftforge . fml . common . eventhandler . Event . HasResult ; 
 + 
 + 
 + public class PotionBrewEvent extends Event 
 + { 
 + private ItemStack [ ] stacks ; 
 + 
 + protected PotionBrewEvent ( ItemStack [ ] stacks ) 
 + { 
 + this . stacks = stacks ; 
 + } 
 + 
 + public ItemStack getItem ( int index ) 
 + { 
 + if ( index > = stacks . length ) return null ; 
 + return stacks [ index ] ; 
 + } 
 + 
 + public void setItem ( int index , ItemStack stack ) 
 + { 
 + if ( index < stacks . length ) 
 + { 
 + stacks [ index ] = stack ; 
 + } 
 + } 
 + 
 + public int getLength ( ) 
 + { 
 + return stacks . length ; 
 + } 
 + 
 + / * * 
 + * PotionBrewEvent . Pre is fired before vanilla brewing takes place . 
 + * All changes made to the event ' s array will be made to the TileEntity if the event is canceled . 
 + * < br > 
 + * The event is fired during the TileEntityBrewingStand # brewPotions ( ) method invocation . < br > 
 + * < br > 
 + * { @ link # brewingStacks } contains the itemstack array from the TileEntityBrewer holding all items in Brewer . < br > 
 + * < br > 
 + * This event is { @ link Cancelable } . < br > 
 + * If the event is not canceled , the vanilla brewing will take place instead of modded brewing . 
 + * < br > 
 + * This event does not have a result . { @ link HasResult } < br > 
 + * < br > 
 + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . < br > 
 + * < br > 
 + * If this event is canceled , and items have been modified , PotionBrewEvent . Post will automatically be fired . 
 + * * / 
 + @ Cancelable 
 + public static class Pre extends PotionBrewEvent 
 + { 
 + public Pre ( ItemStack [ ] stacks ) 
 + { 
 + super ( stacks ) ; 
 + } 
 + } 
 + 
 + / * * 
 + * PotionBrewEvent . Post is fired when a potion is brewed in the brewing stand . 
 + * < br > 
 + * The event is fired during the TileEntityBrewingStand # brewPotions ( ) method invocation . < br > 
 + * < br > 
 + * { @ link # brewingStacks } contains the itemstack array from the TileEntityBrewer holding all items in Brewer . < br > 
 + * < br > 
 + * This event is not { @ link Cancelable } . < br > 
 + * < br > 
 + * This event does not have a result . { @ link HasResult } < br > 
 + * < br > 
 + * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . < br > 
 + * * / 
 + public static class Post extends PotionBrewedEvent 
 + { 
 + public Post ( ItemStack [ ] stacks ) 
 + { 
 + super ( stacks ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java b / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java 
 index 7fe80e6 . . c18cfab 100644 
 - - - a / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / brewing / PotionBrewedEvent . java 
 @ @ - 16 , 14 + 16 , 18 @ @ import net . minecraft . item . ItemStack ; 
 * < br > 
 * This event is fired on the { @ link MinecraftForge # EVENT _ BUS } . < br > 
 * * / 
 - public class PotionBrewedEvent extends Event 
 + @ Deprecated 
 + public class PotionBrewedEvent extends PotionBrewEvent 
 { 
 / * * 
 * The brewing stacks in the brewing stand . Each index has the possibility to be null , so make sure you check . 
 + * Changing this array to another one has no effect . 
 * / 
 + @ Deprecated 
 public ItemStack [ ] brewingStacks ; 
 public PotionBrewedEvent ( ItemStack [ ] brewingStacks ) 
 { 
 + super ( brewingStacks ) ; 
 this . brewingStacks = brewingStacks ; 
 } 
 }
