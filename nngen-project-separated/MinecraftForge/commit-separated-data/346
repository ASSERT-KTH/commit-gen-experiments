BLEU SCORE: 2.703417156956587E-6

TEST MSG: Add Chunk capabilities
GENERATED MSG: Replace Forge ' s ` BlockPos # getImmutable ` method with the included ` BlockPos # toImmutable ` ( func _ 185334 _ h ) , while keeping the override in PooledMutableBlockPos to prevent mutable leaks .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> index 444dee2 . . e5aaf06 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> @ @ - 1 , 6 + 1 , 23 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / world / chunk / Chunk . java <nl> + + + . . / src - work / minecraft / net / minecraft / world / chunk / Chunk . java <nl> - @ @ - 179 , 7 + 179 , 7 @ @ <nl> + @ @ - 41 , 7 + 41 , 7 @ @ <nl> + import org . apache . logging . log4j . LogManager ; <nl> + import org . apache . logging . log4j . Logger ; <nl> + <nl> + - public class Chunk <nl> + + public class Chunk implements net . minecraftforge . common . capabilities . ICapabilityProvider <nl> + { <nl> + private static final Logger field _ 150817 _ t = LogManager . getLogger ( ) ; <nl> + public static final ExtendedBlockStorage field _ 186036 _ a = null ; <nl> + @ @ - 91 , 6 + 91 , 7 @ @ <nl> + <nl> + Arrays . fill ( this . field _ 76638 _ b , - 999 ) ; <nl> + Arrays . fill ( this . field _ 76651 _ r , ( byte ) - 1 ) ; <nl> + + capabilities = net . minecraftforge . event . ForgeEventFactory . gatherCapabilities ( this ) ; <nl> + } <nl> + <nl> + public Chunk ( World p _ i45645 _ 1 _ , ChunkPrimer p _ i45645 _ 2 _ , int p _ i45645 _ 3 _ , int p _ i45645 _ 4 _ ) <nl> + @ @ - 179 , 7 + 180 , 7 @ @ <nl> { <nl> IBlockState iblockstate = this . func _ 186032 _ a ( j , l - 1 , k ) ; <nl> <nl> @ @ - 9 , 7 + 26 , 7 @ @ <nl> { <nl> this . field _ 76634 _ f [ k < < 4 | j ] = l ; <nl> <nl> - @ @ - 452 , 12 + 452 , 13 @ @ <nl> + @ @ - 452 , 12 + 453 , 13 @ @ <nl> <nl> public int func _ 177437 _ b ( BlockPos p _ 177437 _ 1 _ ) <nl> { <nl> @ @ - 25 , 7 + 42 , 7 @ @ <nl> } <nl> <nl> public IBlockState func _ 177435 _ g ( BlockPos p _ 177435 _ 1 _ ) <nl> - @ @ - 539 , 6 + 540 , 7 @ @ <nl> + @ @ - 539 , 6 + 541 , 7 @ @ <nl> { <nl> Block block = p _ 177436 _ 2 _ . func _ 177230 _ c ( ) ; <nl> Block block1 = iblockstate . func _ 177230 _ c ( ) ; <nl> @ @ - 33 , 7 + 50 , 7 @ @ <nl> ExtendedBlockStorage extendedblockstorage = this . field _ 76652 _ q [ j > > 4 ] ; <nl> boolean flag = false ; <nl> <nl> - @ @ - 556 , 14 + 558 , 19 @ @ <nl> + @ @ - 556 , 14 + 559 , 19 @ @ <nl> <nl> extendedblockstorage . func _ 177484 _ a ( i , j & 15 , k , p _ 177436 _ 2 _ ) ; <nl> <nl> @ @ - 55 , 7 + 72 , 7 @ @ <nl> this . field _ 76637 _ e . func _ 175713 _ t ( p _ 177436 _ 1 _ ) ; <nl> } <nl> } <nl> - @ @ - 580 , 8 + 587 , 7 @ @ <nl> + @ @ - 580 , 8 + 588 , 7 @ @ <nl> } <nl> else <nl> { <nl> @ @ - 65 , 7 + 82 , 7 @ @ <nl> <nl> if ( j1 > 0 ) <nl> { <nl> - @ @ - 601 , 28 + 607 , 19 @ @ <nl> + @ @ - 601 , 28 + 608 , 19 @ @ <nl> } <nl> } <nl> <nl> @ @ - 98 , 7 + 115 , 7 @ @ <nl> this . field _ 76637 _ e . func _ 175690 _ a ( p _ 177436 _ 1 _ , tileentity1 ) ; <nl> } <nl> <nl> - @ @ - 738 , 6 + 735 , 7 @ @ <nl> + @ @ - 738 , 6 + 736 , 7 @ @ <nl> k = this . field _ 76645 _ j . length - 1 ; <nl> } <nl> <nl> @ @ - 106 , 7 + 123 , 7 @ @ <nl> p _ 76612 _ 1 _ . field _ 70175 _ ag = true ; <nl> p _ 76612 _ 1 _ . field _ 70176 _ ah = this . field _ 76635 _ g ; <nl> p _ 76612 _ 1 _ . field _ 70162 _ ai = k ; <nl> - @ @ - 778 , 7 + 776 , 7 @ @ <nl> + @ @ - 778 , 7 + 777 , 7 @ @ <nl> { <nl> IBlockState iblockstate = this . func _ 177435 _ g ( p _ 177422 _ 1 _ ) ; <nl> Block block = iblockstate . func _ 177230 _ c ( ) ; <nl> @ @ - 115 , 7 + 132 , 7 @ @ <nl> } <nl> <nl> @ Nullable <nl> - @ @ - 786 , 6 + 784 , 12 @ @ <nl> + @ @ - 786 , 6 + 785 , 12 @ @ <nl> { <nl> TileEntity tileentity = this . field _ 150816 _ i . get ( p _ 177424 _ 1 _ ) ; <nl> <nl> @ @ - 128 , 7 + 145 , 7 @ @ <nl> if ( tileentity = = null ) <nl> { <nl> if ( p _ 177424 _ 2 _ = = Chunk . EnumCreateEntityType . IMMEDIATE ) <nl> - @ @ - 795 , 14 + 799 , 9 @ @ <nl> + @ @ - 795 , 14 + 800 , 9 @ @ <nl> } <nl> else if ( p _ 177424 _ 2 _ = = Chunk . EnumCreateEntityType . QUEUED ) <nl> { <nl> @ @ - 144 , 7 + 161 , 7 @ @ <nl> <nl> return tileentity ; <nl> } <nl> - @ @ - 819 , 10 + 818 , 11 @ @ <nl> + @ @ - 819 , 10 + 819 , 11 @ @ <nl> <nl> public void func _ 177426 _ a ( BlockPos p _ 177426 _ 1 _ , TileEntity p _ 177426 _ 2 _ ) <nl> { <nl> @ @ - 157 , 7 + 174 , 7 @ @ <nl> { <nl> if ( this . field _ 150816 _ i . containsKey ( p _ 177426 _ 1 _ ) ) <nl> { <nl> - @ @ - 854 , 8 + 854 , 9 @ @ <nl> + @ @ - 854 , 8 + 855 , 9 @ @ <nl> <nl> for ( ClassInheritanceMultiMap < Entity > classinheritancemultimap : this . field _ 76645 _ j ) <nl> { <nl> @ @ - 168 , 7 + 185 , 7 @ @ <nl> } <nl> <nl> public void func _ 76623 _ d ( ) <nl> - @ @ - 871 , 6 + 872 , 7 @ @ <nl> + @ @ - 871 , 6 + 873 , 7 @ @ <nl> { <nl> this . field _ 76637 _ e . func _ 175681 _ c ( classinheritancemultimap ) ; <nl> } <nl> @ @ - 176 , 7 + 193 , 7 @ @ <nl> } <nl> <nl> public void func _ 76630 _ e ( ) <nl> - @ @ - 880 , 8 + 882 , 8 @ @ <nl> + @ @ - 880 , 8 + 883 , 8 @ @ <nl> <nl> public void func _ 177414 _ a ( @ Nullable Entity p _ 177414 _ 1 _ , AxisAlignedBB p _ 177414 _ 2 _ , List < Entity > p _ 177414 _ 3 _ , Predicate < ? super Entity > p _ 177414 _ 4 _ ) <nl> { <nl> @ @ - 187 , 7 + 204 , 7 @ @ <nl> i = MathHelper . func _ 76125 _ a ( i , 0 , this . field _ 76645 _ j . length - 1 ) ; <nl> j = MathHelper . func _ 76125 _ a ( j , 0 , this . field _ 76645 _ j . length - 1 ) ; <nl> <nl> - @ @ - 918 , 8 + 920 , 8 @ @ <nl> + @ @ - 918 , 8 + 921 , 8 @ @ <nl> <nl> public < T extends Entity > void func _ 177430 _ a ( Class < ? extends T > p _ 177430 _ 1 _ , AxisAlignedBB p _ 177430 _ 2 _ , List < T > p _ 177430 _ 3 _ , Predicate < ? super T > p _ 177430 _ 4 _ ) <nl> { <nl> @ @ - 198 , 7 + 215 , 7 @ @ <nl> i = MathHelper . func _ 76125 _ a ( i , 0 , this . field _ 76645 _ j . length - 1 ) ; <nl> j = MathHelper . func _ 76125 _ a ( j , 0 , this . field _ 76645 _ j . length - 1 ) ; <nl> <nl> - @ @ - 997 , 6 + 999 , 8 @ @ <nl> + @ @ - 997 , 6 + 100 , 8 @ @ <nl> <nl> protected void func _ 186034 _ a ( IChunkGenerator p _ 186034 _ 1 _ ) <nl> { <nl> @ @ - 207 , 7 + 224 , 7 @ @ <nl> if ( this . func _ 177419 _ t ( ) ) <nl> { <nl> if ( p _ 186034 _ 1 _ . func _ 185933 _ a ( this , this . field _ 76635 _ g , this . field _ 76647 _ h ) ) <nl> - @ @ - 1008 , 8 + 1012 , 10 @ @ <nl> + @ @ - 1008 , 8 + 1013 , 10 @ @ <nl> { <nl> this . func _ 150809 _ p ( ) ; <nl> p _ 186034 _ 1 _ . func _ 185931 _ b ( this . field _ 76635 _ g , this . field _ 76647 _ h ) ; <nl> @ @ - 218 , 7 + 235 , 7 @ @ <nl> } <nl> <nl> public BlockPos func _ 177440 _ h ( BlockPos p _ 177440 _ 1 _ ) <nl> - @ @ - 1064 , 7 + 1070 , 7 @ @ <nl> + @ @ - 1064 , 7 + 1071 , 7 @ @ <nl> { <nl> BlockPos blockpos = this . field _ 177447 _ w . poll ( ) ; <nl> <nl> @ @ - 227 , 7 + 244 , 7 @ @ <nl> { <nl> TileEntity tileentity = this . func _ 177422 _ i ( blockpos ) ; <nl> this . field _ 76637 _ e . func _ 175690 _ a ( blockpos , tileentity ) ; <nl> - @ @ - 1128 , 6 + 1134 , 13 @ @ <nl> + @ @ - 1128 , 6 + 1135 , 13 @ @ <nl> @ SideOnly ( Side . CLIENT ) <nl> public void func _ 186033 _ a ( PacketBuffer p _ 186033 _ 1 _ , int p _ 186033 _ 2 _ , boolean p _ 186033 _ 3 _ ) <nl> { <nl> @ @ - 241 , 7 + 258 , 7 @ @ <nl> boolean flag = this . field _ 76637 _ e . field _ 73011 _ w . func _ 191066 _ m ( ) ; <nl> <nl> for ( int i = 0 ; i < this . field _ 76652 _ q . length ; + + i ) <nl> - @ @ - 1176 , 10 + 1189 , 16 @ @ <nl> + @ @ - 1176 , 10 + 1190 , 16 @ @ <nl> this . field _ 76646 _ k = true ; <nl> this . func _ 76590 _ a ( ) ; <nl> <nl> @ @ - 258 , 7 + 275 , 7 @ @ <nl> } <nl> <nl> public Biome func _ 177411 _ a ( BlockPos p _ 177411 _ 1 _ , BiomeProvider p _ 177411 _ 2 _ ) <nl> - @ @ - 1244 , 13 + 1263 , 13 @ @ <nl> + @ @ - 1244 , 13 + 1264 , 13 @ @ <nl> BlockPos blockpos1 = blockpos . func _ 177982 _ a ( k , ( j < < 4 ) + i1 , l ) ; <nl> boolean flag = i1 = = 0 | | i1 = = 15 | | k = = 0 | | k = = 15 | | l = = 0 | | l = = 15 ; <nl> <nl> @ @ - 274 , 7 + 291 , 7 @ @ <nl> { <nl> this . field _ 76637 _ e . func _ 175664 _ x ( blockpos2 ) ; <nl> } <nl> - @ @ - 1381 , 7 + 1400 , 7 @ @ <nl> + @ @ - 1381 , 7 + 1401 , 7 @ @ <nl> { <nl> blockpos $ mutableblockpos . func _ 181079 _ c ( blockpos $ mutableblockpos . func _ 177958 _ n ( ) , l , blockpos $ mutableblockpos . func _ 177952 _ p ( ) ) ; <nl> <nl> @ @ - 283 , 7 + 300 , 7 @ @ <nl> { <nl> this . field _ 76637 _ e . func _ 175664 _ x ( blockpos $ mutableblockpos ) ; <nl> } <nl> - @ @ - 1489 , 4 + 1508 , 34 @ @ <nl> + @ @ - 1489 , 4 + 1509 , 34 @ @ <nl> QUEUED , <nl> CHECK ; <nl> } <nl> @ @ - 317 , 4 + 334 , 22 @ @ <nl> + else <nl> + net . minecraftforge . fml . common . FMLLog . log . warn ( format , activeModContainer . getName ( ) , this . field _ 76635 _ g , this . field _ 76647 _ h , this . field _ 76637 _ e . field _ 73011 _ w . getDimension ( ) ) ; <nl> + } <nl> + + <nl> + + private final net . minecraftforge . common . capabilities . CapabilityDispatcher capabilities ; <nl> + + @ Nullable <nl> + + public net . minecraftforge . common . capabilities . CapabilityDispatcher getCapabilities ( ) <nl> + + { <nl> + + return capabilities ; <nl> + + } <nl> + + @ Override <nl> + + public boolean hasCapability ( net . minecraftforge . common . capabilities . Capability < ? > capability , @ Nullable EnumFacing facing ) <nl> + + { <nl> + + return capabilities = = null ? false : capabilities . hasCapability ( capability , facing ) ; <nl> + + } <nl> + + @ Override <nl> + + @ Nullable <nl> + + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) <nl> + + { <nl> + + return capabilities = = null ? null : capabilities . getCapability ( capability , facing ) ; <nl> + + } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> index 887a351 . . 9bce5f4 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch <nl> @ @ - 132 , 10 + 132 , 33 @ @ <nl> } <nl> <nl> p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileEntities " , nbttaglist2 ) ; <nl> - @ @ - 388 , 6 + 453 , 12 @ @ <nl> + @ @ - 345 , 6 + 410 , 18 @ @ <nl> + <nl> + p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileTicks " , nbttaglist3 ) ; <nl> + } <nl> + + <nl> + + if ( p _ 75820 _ 1 _ . getCapabilities ( ) ! = null ) <nl> + + { <nl> + + try <nl> + + { <nl> + + p _ 75820 _ 3 _ . func _ 74782 _ a ( " ForgeCaps " , p _ 75820 _ 1 _ . getCapabilities ( ) . serializeNBT ( ) ) ; <nl> + + } <nl> + + catch ( Exception exception ) <nl> + + { <nl> + + net . minecraftforge . fml . common . FMLLog . log . error ( " A capability provider has thrown an exception trying to write state . It will not persist . Report this to the mod author " , exception ) ; <nl> + + } <nl> + + } <nl> + } <nl> + <nl> + private Chunk func _ 75823 _ a ( World p _ 75823 _ 1 _ , NBTTagCompound p _ 75823 _ 2 _ ) <nl> + @ @ - 388 , 6 + 465 , 16 @ @ <nl> chunk . func _ 76616 _ a ( p _ 75823 _ 2 _ . func _ 74770 _ j ( " Biomes " ) ) ; <nl> } <nl> <nl> + + if ( chunk . getCapabilities ( ) ! = null & & p _ 75823 _ 2 _ . func _ 74764 _ b ( " ForgeCaps " ) ) { <nl> + + chunk . getCapabilities ( ) . deserializeNBT ( p _ 75823 _ 2 _ . func _ 74775 _ l ( " ForgeCaps " ) ) ; <nl> + + } <nl> + + <nl> + / / End this method here and split off entity loading to another method <nl> + return chunk ; <nl> + } <nl> @ @ - 145 , 7 + 168 , 7 @ @ <nl> NBTTagList nbttaglist1 = p _ 75823 _ 2 _ . func _ 150295 _ c ( " Entities " , 10 ) ; <nl> <nl> for ( int j1 = 0 ; j1 < nbttaglist1 . func _ 74745 _ c ( ) ; + + j1 ) <nl> - @ @ - 431 , 8 + 502 , 6 @ @ <nl> + @ @ - 431 , 8 + 518 , 6 @ @ <nl> p _ 75823 _ 1 _ . func _ 180497 _ b ( new BlockPos ( nbttagcompound3 . func _ 74762 _ e ( " x " ) , nbttagcompound3 . func _ 74762 _ e ( " y " ) , nbttagcompound3 . func _ 74762 _ e ( " z " ) ) , block , nbttagcompound3 . func _ 74762 _ e ( " t " ) , nbttagcompound3 . func _ 74762 _ e ( " p " ) ) ; <nl> } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> index 6ee1fa1 . . 89da108 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 59 , 6 + 59 , 7 @ @ import net . minecraft . world . World ; <nl> import net . minecraft . world . WorldServer ; <nl> import net . minecraft . world . WorldSettings ; <nl> import net . minecraft . world . biome . Biome ; <nl> + import net . minecraft . world . chunk . Chunk ; <nl> import net . minecraft . world . chunk . ChunkPrimer ; <nl> import net . minecraft . world . gen . IChunkGenerator ; <nl> import net . minecraft . world . storage . IPlayerFileData ; <nl> @ @ - 598 , 6 + 599 , 12 @ @ public class ForgeEventFactory <nl> } <nl> <nl> @ Nullable <nl> + public static CapabilityDispatcher gatherCapabilities ( Chunk chunk ) <nl> + { <nl> + return gatherCapabilities ( new AttachCapabilitiesEvent < Chunk > ( Chunk . class , chunk ) , null ) ; <nl> + } <nl> + <nl> + @ Nullable <nl> private static CapabilityDispatcher gatherCapabilities ( AttachCapabilitiesEvent < ? > event , @ Nullable ICapabilityProvider parent ) <nl> { <nl> MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ChunkCapabilityPollutionTest . java b / src / test / java / net / minecraftforge / debug / ChunkCapabilityPollutionTest . java <nl> new file mode 100644 <nl> index 0000000 . . d4cd182 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / ChunkCapabilityPollutionTest . java <nl> @ @ - 0 , 0 + 1 , 177 @ @ <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import net . minecraft . init . Blocks ; <nl> + import net . minecraft . init . Items ; <nl> + import net . minecraft . item . Item ; <nl> + import net . minecraft . item . ItemStack ; <nl> + import net . minecraft . nbt . NBTBase ; <nl> + import net . minecraft . nbt . NBTTagInt ; <nl> + import net . minecraft . util . EnumFacing ; <nl> + import net . minecraft . util . ResourceLocation ; <nl> + import net . minecraft . util . text . TextComponentString ; <nl> + import net . minecraft . world . chunk . Chunk ; <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . common . capabilities . Capability ; <nl> + import net . minecraftforge . common . capabilities . CapabilityInject ; <nl> + import net . minecraftforge . common . capabilities . CapabilityManager ; <nl> + import net . minecraftforge . common . capabilities . ICapabilitySerializable ; <nl> + import net . minecraftforge . event . AttachCapabilitiesEvent ; <nl> + import net . minecraftforge . event . entity . player . PlayerInteractEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . event . FMLInitializationEvent ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + <nl> + import javax . annotation . Nonnull ; <nl> + import javax . annotation . Nullable ; <nl> + <nl> + / * * <nl> + * Simple mod to test chunk capabilities . <nl> + * Use flint and steel to increase pollution in a chunk and saplings to decrease pollution in a chunk . <nl> + * / <nl> + @ Mod ( modid = ChunkCapabilityPollutionTest . MODID , name = " Chunk Capability Test " , version = " 0 . 0 . 0 " ) <nl> + public class ChunkCapabilityPollutionTest { <nl> + public static final String MODID = " chunkcapabilitypollutiontest " ; <nl> + public static final boolean ENABLE = false ; <nl> + <nl> + public interface IPollution <nl> + { <nl> + int get ( ) ; <nl> + <nl> + void set ( int value , boolean markDirty ) ; <nl> + } <nl> + <nl> + public static class PollutionStorage implements Capability . IStorage < IPollution > <nl> + { <nl> + @ Nullable <nl> + @ Override <nl> + public NBTBase writeNBT ( Capability < IPollution > capability , IPollution instance , EnumFacing side ) { <nl> + return new NBTTagInt ( instance . get ( ) ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void readNBT ( Capability < IPollution > capability , IPollution instance , EnumFacing side , NBTBase nbt ) { <nl> + if ( nbt instanceof NBTTagInt ) <nl> + { <nl> + / / The state is being loaded and not updated . We set the value silently to avoid unnecessary dirty chunks <nl> + instance . set ( ( ( NBTTagInt ) nbt ) . getInt ( ) , false ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + public static class DefaultPollution implements IPollution <nl> + { <nl> + private int value ; <nl> + <nl> + @ Override <nl> + public int get ( ) { <nl> + return value ; <nl> + } <nl> + <nl> + @ Override <nl> + public void set ( int value , boolean markDirty ) { <nl> + this . value = value ; <nl> + } <nl> + } <nl> + <nl> + / * * <nl> + * Marks the chunk as dirty when the value changes . <nl> + * Cannot be the default implementation because it requires a chunk in the constructor <nl> + * / <nl> + public static class SafePollution extends DefaultPollution <nl> + { <nl> + private final Chunk chunk ; <nl> + <nl> + public SafePollution ( Chunk chunk ) <nl> + { <nl> + this . chunk = chunk ; <nl> + } <nl> + <nl> + @ Override <nl> + public void set ( int value , boolean markDirty ) { <nl> + super . set ( value , markDirty ) ; <nl> + if ( markDirty ) { <nl> + chunk . markDirty ( ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + public static class PollutionProvider implements ICapabilitySerializable < NBTBase > <nl> + { <nl> + private final IPollution pollution ; <nl> + <nl> + public PollutionProvider ( Chunk chunk ) <nl> + { <nl> + pollution = new SafePollution ( chunk ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public NBTBase serializeNBT ( ) { <nl> + return POLLUTION _ CAPABILITY . getStorage ( ) . writeNBT ( POLLUTION _ CAPABILITY , pollution , null ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public void deserializeNBT ( NBTBase nbt ) { <nl> + POLLUTION _ CAPABILITY . getStorage ( ) . readNBT ( POLLUTION _ CAPABILITY , pollution , null , nbt ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean hasCapability ( @ Nonnull Capability < ? > capability , @ Nullable EnumFacing facing ) { <nl> + return capability = = POLLUTION _ CAPABILITY ; <nl> + } <nl> + <nl> + @ Nullable <nl> + @ Override <nl> + public < T > T getCapability ( @ Nonnull Capability < T > capability , @ Nullable EnumFacing facing ) { <nl> + return capability = = POLLUTION _ CAPABILITY ? POLLUTION _ CAPABILITY . cast ( pollution ) : null ; <nl> + } <nl> + } <nl> + <nl> + public static class EventBusHandler <nl> + { <nl> + @ SubscribeEvent <nl> + public void onAttachChunkCapabilities ( AttachCapabilitiesEvent < Chunk > event ) <nl> + { <nl> + event . addCapability ( new ResourceLocation ( MODID , " pollution " ) , new PollutionProvider ( event . getObject ( ) ) ) ; <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public void onUseItem ( PlayerInteractEvent . RightClickBlock event ) <nl> + { <nl> + if ( ! event . getWorld ( ) . isRemote ) { <nl> + ItemStack stack = event . getEntityPlayer ( ) . getHeldItem ( event . getHand ( ) ) ; <nl> + int delta = 0 ; <nl> + if ( stack . getItem ( ) = = Items . FLINT _ AND _ STEEL ) <nl> + { <nl> + delta = 1 ; <nl> + } <nl> + else if ( stack . getItem ( ) = = Item . getItemFromBlock ( Blocks . SAPLING ) ) <nl> + { <nl> + delta = - 1 ; <nl> + } <nl> + <nl> + if ( delta ! = 0 ) <nl> + { <nl> + Chunk chunk = event . getWorld ( ) . getChunkFromBlockCoords ( event . getPos ( ) ) ; <nl> + IPollution pollution = chunk . getCapability ( POLLUTION _ CAPABILITY , null ) ; <nl> + pollution . set ( pollution . get ( ) + delta , true ) ; <nl> + <nl> + event . getEntityPlayer ( ) . sendStatusMessage ( new TextComponentString ( " Chunk pollution : " + pollution . get ( ) ) , true ) ; <nl> + } <nl> + } <nl> + } <nl> + } <nl> + <nl> + @ CapabilityInject ( IPollution . class ) <nl> + public static final Capability < IPollution > POLLUTION _ CAPABILITY = null ; <nl> + <nl> + @ Mod . EventHandler <nl> + public void init ( FMLInitializationEvent event ) <nl> + { <nl> + if ( ENABLE ) <nl> + { <nl> + CapabilityManager . INSTANCE . register ( IPollution . class , new PollutionStorage ( ) , DefaultPollution . class ) ; <nl> + MinecraftForge . EVENT _ BUS . register ( new EventBusHandler ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / util / math / BlockPos . java . patch b / patches / minecraft / net / minecraft / util / math / BlockPos . java . patch <nl> index 70319c0 . . 33fca8b 100644 <nl> - - - a / patches / minecraft / net / minecraft / util / math / BlockPos . java . patch <nl> + + + b / patches / minecraft / net / minecraft / util / math / BlockPos . java . patch <nl> @ @ - 1 , 41 + 1 , 11 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / util / math / BlockPos . java <nl> + + + . . / src - work / minecraft / net / minecraft / util / math / BlockPos . java <nl> - @ @ - 270 , 6 + 270 , 21 @ @ <nl> - } ; <nl> - } <nl> - <nl> - + / * * <nl> - + * Returns a version of this BlockPos that is guaranteed to be Immutable . <nl> - + * In most cases this will return ' this ' , but if ' this ' is an instance of <nl> - + * MutableBlockPos it will return a new instance of BlockPos with the same values . <nl> - + * <nl> - + * When storing a parameter given to you for an extended period of time , make sure you <nl> - + * use this in case the value is changed internally . <nl> - + * <nl> - + * @ return An immutable BlockPos . <nl> - + * / <nl> - + public BlockPos getImmutable ( ) <nl> - + { <nl> - + return this ; <nl> - + } <nl> - + <nl> - public static final class MutableBlockPos extends BlockPos <nl> - { <nl> - private int field _ 177997 _ b ; <nl> - @ @ - 333 , 6 + 348 , 8 @ @ <nl> - { <nl> - return new BlockPos ( this ) ; <nl> - } <nl> - + <nl> - + @ Override public BlockPos getImmutable ( ) { return new BlockPos ( this ) ; } <nl> - } <nl> - <nl> - public static final class PooledMutableBlockPos extends BlockPos <nl> - @ @ - 443 , 5 + 460 , 7 @ @ <nl> + @ @ - 443 , 5 + 443 , 8 @ @ <nl> { <nl> return this . func _ 185343 _ d ( this . field _ 185347 _ c + p _ 185341 _ 1 _ . func _ 82601 _ c ( ) , this . field _ 185348 _ d + p _ 185341 _ 1 _ . func _ 96559 _ d ( ) , this . field _ 185349 _ e + p _ 185341 _ 1 _ . func _ 82599 _ e ( ) ) ; <nl> } <nl> + <nl> - + @ Override public BlockPos getImmutable ( ) { return new BlockPos ( this ) ; } <nl> + + / / This method can safely be removed once vanilla adds it - MC - 100165 <nl> + + @ Override public BlockPos func _ 185334 _ h ( ) { return new BlockPos ( this ) ; } <nl> } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / world / World . java . patch b / patches / minecraft / net / minecraft / world / World . java . patch <nl> index 9164dab . . cae7214 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / World . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / World . java . patch <nl> @ @ - 550 , 7 + 550 , 15 @ @ <nl> explosion . func _ 77278 _ a ( ) ; <nl> explosion . func _ 77279 _ a ( true ) ; <nl> return explosion ; <nl> - @ @ - 2276 , 19 + 2423 , 27 @ @ <nl> + @ @ - 2253 , 6 + 2400 , 7 @ @ <nl> + <nl> + public void func _ 175690 _ a ( BlockPos p _ 175690 _ 1 _ , TileEntity p _ 175690 _ 2 _ ) <nl> + { <nl> + + p _ 175690 _ 1 _ = p _ 175690 _ 1 _ . func _ 185334 _ h ( ) ; / / Forge - prevent mutable BlockPos leaks <nl> + if ( p _ 175690 _ 2 _ ! = null & & ! p _ 175690 _ 2 _ . func _ 145837 _ r ( ) ) <nl> + { <nl> + if ( this . field _ 147481 _ N ) <nl> + @ @ - 2276 , 19 + 2424 , 27 @ @ <nl> else <nl> { <nl> this . func _ 175700 _ a ( p _ 175690 _ 2 _ ) ; <nl> @ @ - 579 , 7 + 587 , 7 @ @ <nl> } <nl> else <nl> { <nl> - @ @ - 2301 , 6 + 2456 , 7 @ @ <nl> + @ @ - 2301 , 6 + 2457 , 7 @ @ <nl> <nl> this . func _ 175726 _ f ( p _ 175713 _ 1 _ ) . func _ 177425 _ e ( p _ 175713 _ 1 _ ) ; <nl> } <nl> @ @ - 587 , 7 + 595 , 7 @ @ <nl> } <nl> <nl> public void func _ 147457 _ a ( TileEntity p _ 147457 _ 1 _ ) <nl> - @ @ - 2327 , 7 + 2483 , 7 @ @ <nl> + @ @ - 2327 , 7 + 2484 , 7 @ @ <nl> if ( chunk ! = null & & ! chunk . func _ 76621 _ g ( ) ) <nl> { <nl> IBlockState iblockstate = this . func _ 180495 _ p ( p _ 175677 _ 1 _ ) ; <nl> @ @ - 596 , 7 + 604 , 7 @ @ <nl> } <nl> else <nl> { <nl> - @ @ - 2350 , 6 + 2506 , 7 @ @ <nl> + @ @ - 2350 , 6 + 2507 , 7 @ @ <nl> { <nl> this . field _ 72985 _ G = p _ 72891 _ 1 _ ; <nl> this . field _ 72992 _ H = p _ 72891 _ 2 _ ; <nl> @ @ - 604 , 7 + 612 , 7 @ @ <nl> } <nl> <nl> public void func _ 72835 _ b ( ) <nl> - @ @ - 2359 , 6 + 2516 , 11 @ @ <nl> + @ @ - 2359 , 6 + 2517 , 11 @ @ <nl> <nl> protected void func _ 72947 _ a ( ) <nl> { <nl> @ @ - 616 , 7 + 624 , 7 @ @ <nl> if ( this . field _ 72986 _ A . func _ 76059 _ o ( ) ) <nl> { <nl> this . field _ 73004 _ o = 1 . 0F ; <nl> - @ @ - 2372 , 6 + 2534 , 11 @ @ <nl> + @ @ - 2372 , 6 + 2535 , 11 @ @ <nl> <nl> protected void func _ 72979 _ l ( ) <nl> { <nl> @ @ - 628 , 7 + 636 , 7 @ @ <nl> if ( ! this . field _ 73011 _ w . func _ 177495 _ o ( ) ) <nl> { <nl> if ( ! this . field _ 72995 _ K ) <nl> - @ @ - 2491 , 28 + 2658 , 33 @ @ <nl> + @ @ - 2491 , 28 + 2659 , 33 @ @ <nl> <nl> public boolean func _ 175670 _ e ( BlockPos p _ 175670 _ 1 _ , boolean p _ 175670 _ 2 _ ) <nl> { <nl> @ @ - 668 , 7 + 676 , 7 @ @ <nl> <nl> if ( ! flag ) <nl> { <nl> - @ @ - 2532 , 24 + 2704 , 29 @ @ <nl> + @ @ - 2532 , 24 + 2705 , 29 @ @ <nl> <nl> public boolean func _ 175708 _ f ( BlockPos p _ 175708 _ 1 _ , boolean p _ 175708 _ 2 _ ) <nl> { <nl> @ @ - 704 , 7 + 712 , 7 @ @ <nl> { <nl> return true ; <nl> } <nl> - @ @ - 2581 , 10 + 2758 , 11 @ @ <nl> + @ @ - 2581 , 10 + 2759 , 11 @ @ <nl> else <nl> { <nl> IBlockState iblockstate = this . func _ 180495 _ p ( p _ 175638 _ 1 _ ) ; <nl> @ @ - 719 , 7 + 727 , 7 @ @ <nl> { <nl> j = 1 ; <nl> } <nl> - @ @ - 2683 , 7 + 2861 , 7 @ @ <nl> + @ @ - 2683 , 7 + 2862 , 7 @ @ <nl> int j4 = j2 + enumfacing . func _ 96559 _ d ( ) ; <nl> int k4 = k2 + enumfacing . func _ 82599 _ e ( ) ; <nl> blockpos $ pooledmutableblockpos . func _ 185343 _ d ( i4 , j4 , k4 ) ; <nl> @ @ - 728 , 7 + 736 , 7 @ @ <nl> i3 = this . func _ 175642 _ b ( p _ 180500 _ 1 _ , blockpos $ pooledmutableblockpos ) ; <nl> <nl> if ( i3 = = l2 - l4 & & j < this . field _ 72994 _ J . length ) <nl> - @ @ - 2789 , 10 + 2967 , 10 @ @ <nl> + @ @ - 2789 , 10 + 2968 , 10 @ @ <nl> public List < Entity > func _ 175674 _ a ( Entity p _ 175674 _ 1 _ , AxisAlignedBB p _ 175674 _ 2 _ , Predicate < ? super Entity > p _ 175674 _ 3 _ ) <nl> { <nl> List < Entity > list = Lists . < Entity > newArrayList ( ) ; <nl> @ @ - 743 , 7 + 751 , 7 @ @ <nl> <nl> for ( int i1 = i ; i1 < = j ; + + i1 ) <nl> { <nl> - @ @ - 2845 , 10 + 3023 , 10 @ @ <nl> + @ @ - 2845 , 10 + 3024 , 10 @ @ <nl> <nl> public < T extends Entity > List < T > func _ 175647 _ a ( Class < ? extends T > p _ 175647 _ 1 _ , AxisAlignedBB p _ 175647 _ 2 _ , Predicate < ? super T > p _ 175647 _ 3 _ ) <nl> { <nl> @ @ - 758 , 7 + 766 , 7 @ @ <nl> List < T > list = Lists . < T > newArrayList ( ) ; <nl> <nl> for ( int i1 = i ; i1 < j ; + + i1 ) <nl> - @ @ - 2926 , 11 + 3104 , 13 @ @ <nl> + @ @ - 2926 , 11 + 3105 , 13 @ @ <nl> <nl> public void func _ 175650 _ b ( Collection < Entity > p _ 175650 _ 1 _ ) <nl> { <nl> @ @ - 775 , 7 + 783 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 2943 , 7 + 3123 , 7 @ @ <nl> + @ @ - 2943 , 7 + 3124 , 7 @ @ <nl> { <nl> IBlockState iblockstate = this . func _ 180495 _ p ( p _ 175716 _ 2 _ ) ; <nl> AxisAlignedBB axisalignedbb = p _ 175716 _ 3 _ ? null : p _ 175716 _ 1 _ . func _ 176223 _ P ( ) . func _ 185890 _ d ( this , p _ 175716 _ 2 _ ) ; <nl> @ @ - 784 , 7 + 792 , 7 @ @ <nl> } <nl> <nl> public int func _ 181545 _ F ( ) <nl> - @ @ - 3026 , 7 + 3206 , 7 @ @ <nl> + @ @ - 3026 , 7 + 3207 , 7 @ @ <nl> public int func _ 175651 _ c ( BlockPos p _ 175651 _ 1 _ , EnumFacing p _ 175651 _ 2 _ ) <nl> { <nl> IBlockState iblockstate = this . func _ 180495 _ p ( p _ 175651 _ 1 _ ) ; <nl> @ @ - 793 , 7 + 801 , 7 @ @ <nl> } <nl> <nl> public boolean func _ 175640 _ z ( BlockPos p _ 175640 _ 1 _ ) <nl> - @ @ - 3215 , 7 + 3395 , 7 @ @ <nl> + @ @ - 3215 , 7 + 3396 , 7 @ @ <nl> <nl> public long func _ 72905 _ C ( ) <nl> { <nl> @ @ - 802 , 7 + 810 , 7 @ @ <nl> } <nl> <nl> public long func _ 82737 _ E ( ) <nl> - @ @ - 3225 , 17 + 3405 , 17 @ @ <nl> + @ @ - 3225 , 17 + 3406 , 17 @ @ <nl> <nl> public long func _ 72820 _ D ( ) <nl> { <nl> @ @ - 823 , 7 + 831 , 7 @ @ <nl> <nl> if ( ! this . func _ 175723 _ af ( ) . func _ 177746 _ a ( blockpos ) ) <nl> { <nl> - @ @ - 3247 , 7 + 3427 , 7 @ @ <nl> + @ @ - 3247 , 7 + 3428 , 7 @ @ <nl> <nl> public void func _ 175652 _ B ( BlockPos p _ 175652 _ 1 _ ) <nl> { <nl> @ @ - 832 , 7 + 840 , 7 @ @ <nl> } <nl> <nl> @ SideOnly ( Side . CLIENT ) <nl> - @ @ - 3267 , 12 + 3447 , 18 @ @ <nl> + @ @ - 3267 , 12 + 3448 , 18 @ @ <nl> <nl> if ( ! this . field _ 72996 _ f . contains ( p _ 72897 _ 1 _ ) ) <nl> { <nl> @ @ - 851 , 7 + 859 , 7 @ @ <nl> return true ; <nl> } <nl> <nl> - @ @ - 3366 , 8 + 3552 , 7 @ @ <nl> + @ @ - 3366 , 8 + 3553 , 7 @ @ <nl> <nl> public boolean func _ 180502 _ D ( BlockPos p _ 180502 _ 1 _ ) <nl> { <nl> @ @ - 861 , 7 + 869 , 7 @ @ <nl> } <nl> <nl> public MapStorage func _ 175693 _ T ( ) <nl> - @ @ - 3426 , 12 + 3611 , 12 @ @ <nl> + @ @ - 3426 , 12 + 3612 , 12 @ @ <nl> <nl> public int func _ 72800 _ K ( ) <nl> { <nl> @ @ - 876 , 7 + 884 , 7 @ @ <nl> } <nl> <nl> public Random func _ 72843 _ D ( int p _ 72843 _ 1 _ , int p _ 72843 _ 2 _ , int p _ 72843 _ 3 _ ) <nl> - @ @ - 3481 , 7 + 3666 , 7 @ @ <nl> + @ @ - 3481 , 7 + 3667 , 7 @ @ <nl> @ SideOnly ( Side . CLIENT ) <nl> public double func _ 72919 _ O ( ) <nl> { <nl> @ @ - 885 , 7 + 893 , 7 @ @ <nl> } <nl> <nl> public void func _ 175715 _ c ( int p _ 175715 _ 1 _ , BlockPos p _ 175715 _ 2 _ , int p _ 175715 _ 3 _ ) <nl> - @ @ - 3515 , 7 + 3700 , 7 @ @ <nl> + @ @ - 3515 , 7 + 3701 , 7 @ @ <nl> <nl> public void func _ 175666 _ e ( BlockPos p _ 175666 _ 1 _ , Block p _ 175666 _ 2 _ ) <nl> { <nl> @ @ - 894 , 7 + 902 , 7 @ @ <nl> { <nl> BlockPos blockpos = p _ 175666 _ 1 _ . func _ 177972 _ a ( enumfacing ) ; <nl> <nl> - @ @ - 3523 , 18 + 3708 , 14 @ @ <nl> + @ @ - 3523 , 18 + 3709 , 14 @ @ <nl> { <nl> IBlockState iblockstate = this . func _ 180495 _ p ( blockpos ) ; <nl> <nl> @ @ - 917 , 7 + 925 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 3600 , 6 + 3781 , 87 @ @ <nl> + @ @ - 3600 , 6 + 3782 , 87 @ @ <nl> return i > = - k & & i < = k & & j > = - k & & j < = k ; <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> index 7db81e4 . . 71b1ade 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch <nl> @ @ - 129 , 7 + 129 , 7 @ @ <nl> else if ( p _ 177424 _ 2 _ = = Chunk . EnumCreateEntityType . QUEUED ) <nl> { <nl> - this . field _ 177447 _ w . add ( p _ 177424 _ 1 _ ) ; <nl> - + this . field _ 177447 _ w . add ( p _ 177424 _ 1 _ . getImmutable ( ) ) ; <nl> + + this . field _ 177447 _ w . add ( p _ 177424 _ 1 _ . func _ 185334 _ h ( ) ) ; <nl> } <nl> } <nl> - else if ( tileentity . func _ 145837 _ r ( ) ) <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java b / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java <nl> index 1e29527 . . d1a2618 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java <nl> + + + b / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java <nl> @ @ - 58 , 7 + 58 , 7 @ @ public class BlockSnapshot implements Serializable <nl> { <nl> this . setWorld ( world ) ; <nl> this . dimId = world . provider . getDimension ( ) ; <nl> - this . pos = pos . getImmutable ( ) ; <nl> + this . pos = pos . toImmutable ( ) ; <nl> this . setReplacedBlock ( state ) ; <nl> this . registryName = new ResourceLocation ( state . getBlock ( ) . getRegistryName ( ) ) ; <nl> this . meta = state . getBlock ( ) . getMetaFromState ( state ) ; <nl> @ @ - 82 , 7 + 82 , 7 @ @ public class BlockSnapshot implements Serializable <nl> public BlockSnapshot ( int dimension , BlockPos pos , String modId , String blockName , int meta , int flag , NBTTagCompound nbt ) <nl> { <nl> this . dimId = dimension ; <nl> - this . pos = pos . getImmutable ( ) ; <nl> + this . pos = pos . toImmutable ( ) ; <nl> this . setFlag ( flag ) ; <nl> this . registryName = new ResourceLocation ( modId , blockName ) ; <nl> this . meta = meta ;

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 index 444dee2 . . e5aaf06 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 @ @ - 1 , 6 + 1 , 23 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / world / chunk / Chunk . java 
 + + + . . / src - work / minecraft / net / minecraft / world / chunk / Chunk . java 
 - @ @ - 179 , 7 + 179 , 7 @ @ 
 + @ @ - 41 , 7 + 41 , 7 @ @ 
 + import org . apache . logging . log4j . LogManager ; 
 + import org . apache . logging . log4j . Logger ; 
 + 
 + - public class Chunk 
 + + public class Chunk implements net . minecraftforge . common . capabilities . ICapabilityProvider 
 + { 
 + private static final Logger field _ 150817 _ t = LogManager . getLogger ( ) ; 
 + public static final ExtendedBlockStorage field _ 186036 _ a = null ; 
 + @ @ - 91 , 6 + 91 , 7 @ @ 
 + 
 + Arrays . fill ( this . field _ 76638 _ b , - 999 ) ; 
 + Arrays . fill ( this . field _ 76651 _ r , ( byte ) - 1 ) ; 
 + + capabilities = net . minecraftforge . event . ForgeEventFactory . gatherCapabilities ( this ) ; 
 + } 
 + 
 + public Chunk ( World p _ i45645 _ 1 _ , ChunkPrimer p _ i45645 _ 2 _ , int p _ i45645 _ 3 _ , int p _ i45645 _ 4 _ ) 
 + @ @ - 179 , 7 + 180 , 7 @ @ 
 { 
 IBlockState iblockstate = this . func _ 186032 _ a ( j , l - 1 , k ) ; 
 
 @ @ - 9 , 7 + 26 , 7 @ @ 
 { 
 this . field _ 76634 _ f [ k < < 4 | j ] = l ; 
 
 - @ @ - 452 , 12 + 452 , 13 @ @ 
 + @ @ - 452 , 12 + 453 , 13 @ @ 
 
 public int func _ 177437 _ b ( BlockPos p _ 177437 _ 1 _ ) 
 { 
 @ @ - 25 , 7 + 42 , 7 @ @ 
 } 
 
 public IBlockState func _ 177435 _ g ( BlockPos p _ 177435 _ 1 _ ) 
 - @ @ - 539 , 6 + 540 , 7 @ @ 
 + @ @ - 539 , 6 + 541 , 7 @ @ 
 { 
 Block block = p _ 177436 _ 2 _ . func _ 177230 _ c ( ) ; 
 Block block1 = iblockstate . func _ 177230 _ c ( ) ; 
 @ @ - 33 , 7 + 50 , 7 @ @ 
 ExtendedBlockStorage extendedblockstorage = this . field _ 76652 _ q [ j > > 4 ] ; 
 boolean flag = false ; 
 
 - @ @ - 556 , 14 + 558 , 19 @ @ 
 + @ @ - 556 , 14 + 559 , 19 @ @ 
 
 extendedblockstorage . func _ 177484 _ a ( i , j & 15 , k , p _ 177436 _ 2 _ ) ; 
 
 @ @ - 55 , 7 + 72 , 7 @ @ 
 this . field _ 76637 _ e . func _ 175713 _ t ( p _ 177436 _ 1 _ ) ; 
 } 
 } 
 - @ @ - 580 , 8 + 587 , 7 @ @ 
 + @ @ - 580 , 8 + 588 , 7 @ @ 
 } 
 else 
 { 
 @ @ - 65 , 7 + 82 , 7 @ @ 
 
 if ( j1 > 0 ) 
 { 
 - @ @ - 601 , 28 + 607 , 19 @ @ 
 + @ @ - 601 , 28 + 608 , 19 @ @ 
 } 
 } 
 
 @ @ - 98 , 7 + 115 , 7 @ @ 
 this . field _ 76637 _ e . func _ 175690 _ a ( p _ 177436 _ 1 _ , tileentity1 ) ; 
 } 
 
 - @ @ - 738 , 6 + 735 , 7 @ @ 
 + @ @ - 738 , 6 + 736 , 7 @ @ 
 k = this . field _ 76645 _ j . length - 1 ; 
 } 
 
 @ @ - 106 , 7 + 123 , 7 @ @ 
 p _ 76612 _ 1 _ . field _ 70175 _ ag = true ; 
 p _ 76612 _ 1 _ . field _ 70176 _ ah = this . field _ 76635 _ g ; 
 p _ 76612 _ 1 _ . field _ 70162 _ ai = k ; 
 - @ @ - 778 , 7 + 776 , 7 @ @ 
 + @ @ - 778 , 7 + 777 , 7 @ @ 
 { 
 IBlockState iblockstate = this . func _ 177435 _ g ( p _ 177422 _ 1 _ ) ; 
 Block block = iblockstate . func _ 177230 _ c ( ) ; 
 @ @ - 115 , 7 + 132 , 7 @ @ 
 } 
 
 @ Nullable 
 - @ @ - 786 , 6 + 784 , 12 @ @ 
 + @ @ - 786 , 6 + 785 , 12 @ @ 
 { 
 TileEntity tileentity = this . field _ 150816 _ i . get ( p _ 177424 _ 1 _ ) ; 
 
 @ @ - 128 , 7 + 145 , 7 @ @ 
 if ( tileentity = = null ) 
 { 
 if ( p _ 177424 _ 2 _ = = Chunk . EnumCreateEntityType . IMMEDIATE ) 
 - @ @ - 795 , 14 + 799 , 9 @ @ 
 + @ @ - 795 , 14 + 800 , 9 @ @ 
 } 
 else if ( p _ 177424 _ 2 _ = = Chunk . EnumCreateEntityType . QUEUED ) 
 { 
 @ @ - 144 , 7 + 161 , 7 @ @ 
 
 return tileentity ; 
 } 
 - @ @ - 819 , 10 + 818 , 11 @ @ 
 + @ @ - 819 , 10 + 819 , 11 @ @ 
 
 public void func _ 177426 _ a ( BlockPos p _ 177426 _ 1 _ , TileEntity p _ 177426 _ 2 _ ) 
 { 
 @ @ - 157 , 7 + 174 , 7 @ @ 
 { 
 if ( this . field _ 150816 _ i . containsKey ( p _ 177426 _ 1 _ ) ) 
 { 
 - @ @ - 854 , 8 + 854 , 9 @ @ 
 + @ @ - 854 , 8 + 855 , 9 @ @ 
 
 for ( ClassInheritanceMultiMap < Entity > classinheritancemultimap : this . field _ 76645 _ j ) 
 { 
 @ @ - 168 , 7 + 185 , 7 @ @ 
 } 
 
 public void func _ 76623 _ d ( ) 
 - @ @ - 871 , 6 + 872 , 7 @ @ 
 + @ @ - 871 , 6 + 873 , 7 @ @ 
 { 
 this . field _ 76637 _ e . func _ 175681 _ c ( classinheritancemultimap ) ; 
 } 
 @ @ - 176 , 7 + 193 , 7 @ @ 
 } 
 
 public void func _ 76630 _ e ( ) 
 - @ @ - 880 , 8 + 882 , 8 @ @ 
 + @ @ - 880 , 8 + 883 , 8 @ @ 
 
 public void func _ 177414 _ a ( @ Nullable Entity p _ 177414 _ 1 _ , AxisAlignedBB p _ 177414 _ 2 _ , List < Entity > p _ 177414 _ 3 _ , Predicate < ? super Entity > p _ 177414 _ 4 _ ) 
 { 
 @ @ - 187 , 7 + 204 , 7 @ @ 
 i = MathHelper . func _ 76125 _ a ( i , 0 , this . field _ 76645 _ j . length - 1 ) ; 
 j = MathHelper . func _ 76125 _ a ( j , 0 , this . field _ 76645 _ j . length - 1 ) ; 
 
 - @ @ - 918 , 8 + 920 , 8 @ @ 
 + @ @ - 918 , 8 + 921 , 8 @ @ 
 
 public < T extends Entity > void func _ 177430 _ a ( Class < ? extends T > p _ 177430 _ 1 _ , AxisAlignedBB p _ 177430 _ 2 _ , List < T > p _ 177430 _ 3 _ , Predicate < ? super T > p _ 177430 _ 4 _ ) 
 { 
 @ @ - 198 , 7 + 215 , 7 @ @ 
 i = MathHelper . func _ 76125 _ a ( i , 0 , this . field _ 76645 _ j . length - 1 ) ; 
 j = MathHelper . func _ 76125 _ a ( j , 0 , this . field _ 76645 _ j . length - 1 ) ; 
 
 - @ @ - 997 , 6 + 999 , 8 @ @ 
 + @ @ - 997 , 6 + 100 , 8 @ @ 
 
 protected void func _ 186034 _ a ( IChunkGenerator p _ 186034 _ 1 _ ) 
 { 
 @ @ - 207 , 7 + 224 , 7 @ @ 
 if ( this . func _ 177419 _ t ( ) ) 
 { 
 if ( p _ 186034 _ 1 _ . func _ 185933 _ a ( this , this . field _ 76635 _ g , this . field _ 76647 _ h ) ) 
 - @ @ - 1008 , 8 + 1012 , 10 @ @ 
 + @ @ - 1008 , 8 + 1013 , 10 @ @ 
 { 
 this . func _ 150809 _ p ( ) ; 
 p _ 186034 _ 1 _ . func _ 185931 _ b ( this . field _ 76635 _ g , this . field _ 76647 _ h ) ; 
 @ @ - 218 , 7 + 235 , 7 @ @ 
 } 
 
 public BlockPos func _ 177440 _ h ( BlockPos p _ 177440 _ 1 _ ) 
 - @ @ - 1064 , 7 + 1070 , 7 @ @ 
 + @ @ - 1064 , 7 + 1071 , 7 @ @ 
 { 
 BlockPos blockpos = this . field _ 177447 _ w . poll ( ) ; 
 
 @ @ - 227 , 7 + 244 , 7 @ @ 
 { 
 TileEntity tileentity = this . func _ 177422 _ i ( blockpos ) ; 
 this . field _ 76637 _ e . func _ 175690 _ a ( blockpos , tileentity ) ; 
 - @ @ - 1128 , 6 + 1134 , 13 @ @ 
 + @ @ - 1128 , 6 + 1135 , 13 @ @ 
 @ SideOnly ( Side . CLIENT ) 
 public void func _ 186033 _ a ( PacketBuffer p _ 186033 _ 1 _ , int p _ 186033 _ 2 _ , boolean p _ 186033 _ 3 _ ) 
 { 
 @ @ - 241 , 7 + 258 , 7 @ @ 
 boolean flag = this . field _ 76637 _ e . field _ 73011 _ w . func _ 191066 _ m ( ) ; 
 
 for ( int i = 0 ; i < this . field _ 76652 _ q . length ; + + i ) 
 - @ @ - 1176 , 10 + 1189 , 16 @ @ 
 + @ @ - 1176 , 10 + 1190 , 16 @ @ 
 this . field _ 76646 _ k = true ; 
 this . func _ 76590 _ a ( ) ; 
 
 @ @ - 258 , 7 + 275 , 7 @ @ 
 } 
 
 public Biome func _ 177411 _ a ( BlockPos p _ 177411 _ 1 _ , BiomeProvider p _ 177411 _ 2 _ ) 
 - @ @ - 1244 , 13 + 1263 , 13 @ @ 
 + @ @ - 1244 , 13 + 1264 , 13 @ @ 
 BlockPos blockpos1 = blockpos . func _ 177982 _ a ( k , ( j < < 4 ) + i1 , l ) ; 
 boolean flag = i1 = = 0 | | i1 = = 15 | | k = = 0 | | k = = 15 | | l = = 0 | | l = = 15 ; 
 
 @ @ - 274 , 7 + 291 , 7 @ @ 
 { 
 this . field _ 76637 _ e . func _ 175664 _ x ( blockpos2 ) ; 
 } 
 - @ @ - 1381 , 7 + 1400 , 7 @ @ 
 + @ @ - 1381 , 7 + 1401 , 7 @ @ 
 { 
 blockpos $ mutableblockpos . func _ 181079 _ c ( blockpos $ mutableblockpos . func _ 177958 _ n ( ) , l , blockpos $ mutableblockpos . func _ 177952 _ p ( ) ) ; 
 
 @ @ - 283 , 7 + 300 , 7 @ @ 
 { 
 this . field _ 76637 _ e . func _ 175664 _ x ( blockpos $ mutableblockpos ) ; 
 } 
 - @ @ - 1489 , 4 + 1508 , 34 @ @ 
 + @ @ - 1489 , 4 + 1509 , 34 @ @ 
 QUEUED , 
 CHECK ; 
 } 
 @ @ - 317 , 4 + 334 , 22 @ @ 
 + else 
 + net . minecraftforge . fml . common . FMLLog . log . warn ( format , activeModContainer . getName ( ) , this . field _ 76635 _ g , this . field _ 76647 _ h , this . field _ 76637 _ e . field _ 73011 _ w . getDimension ( ) ) ; 
 + } 
 + + 
 + + private final net . minecraftforge . common . capabilities . CapabilityDispatcher capabilities ; 
 + + @ Nullable 
 + + public net . minecraftforge . common . capabilities . CapabilityDispatcher getCapabilities ( ) 
 + + { 
 + + return capabilities ; 
 + + } 
 + + @ Override 
 + + public boolean hasCapability ( net . minecraftforge . common . capabilities . Capability < ? > capability , @ Nullable EnumFacing facing ) 
 + + { 
 + + return capabilities = = null ? false : capabilities . hasCapability ( capability , facing ) ; 
 + + } 
 + + @ Override 
 + + @ Nullable 
 + + public < T > T getCapability ( net . minecraftforge . common . capabilities . Capability < T > capability , @ Nullable EnumFacing facing ) 
 + + { 
 + + return capabilities = = null ? null : capabilities . getCapability ( capability , facing ) ; 
 + + } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 index 887a351 . . 9bce5f4 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / storage / AnvilChunkLoader . java . patch 
 @ @ - 132 , 10 + 132 , 33 @ @ 
 } 
 
 p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileEntities " , nbttaglist2 ) ; 
 - @ @ - 388 , 6 + 453 , 12 @ @ 
 + @ @ - 345 , 6 + 410 , 18 @ @ 
 + 
 + p _ 75820 _ 3 _ . func _ 74782 _ a ( " TileTicks " , nbttaglist3 ) ; 
 + } 
 + + 
 + + if ( p _ 75820 _ 1 _ . getCapabilities ( ) ! = null ) 
 + + { 
 + + try 
 + + { 
 + + p _ 75820 _ 3 _ . func _ 74782 _ a ( " ForgeCaps " , p _ 75820 _ 1 _ . getCapabilities ( ) . serializeNBT ( ) ) ; 
 + + } 
 + + catch ( Exception exception ) 
 + + { 
 + + net . minecraftforge . fml . common . FMLLog . log . error ( " A capability provider has thrown an exception trying to write state . It will not persist . Report this to the mod author " , exception ) ; 
 + + } 
 + + } 
 + } 
 + 
 + private Chunk func _ 75823 _ a ( World p _ 75823 _ 1 _ , NBTTagCompound p _ 75823 _ 2 _ ) 
 + @ @ - 388 , 6 + 465 , 16 @ @ 
 chunk . func _ 76616 _ a ( p _ 75823 _ 2 _ . func _ 74770 _ j ( " Biomes " ) ) ; 
 } 
 
 + + if ( chunk . getCapabilities ( ) ! = null & & p _ 75823 _ 2 _ . func _ 74764 _ b ( " ForgeCaps " ) ) { 
 + + chunk . getCapabilities ( ) . deserializeNBT ( p _ 75823 _ 2 _ . func _ 74775 _ l ( " ForgeCaps " ) ) ; 
 + + } 
 + + 
 + / / End this method here and split off entity loading to another method 
 + return chunk ; 
 + } 
 @ @ - 145 , 7 + 168 , 7 @ @ 
 NBTTagList nbttaglist1 = p _ 75823 _ 2 _ . func _ 150295 _ c ( " Entities " , 10 ) ; 
 
 for ( int j1 = 0 ; j1 < nbttaglist1 . func _ 74745 _ c ( ) ; + + j1 ) 
 - @ @ - 431 , 8 + 502 , 6 @ @ 
 + @ @ - 431 , 8 + 518 , 6 @ @ 
 p _ 75823 _ 1 _ . func _ 180497 _ b ( new BlockPos ( nbttagcompound3 . func _ 74762 _ e ( " x " ) , nbttagcompound3 . func _ 74762 _ e ( " y " ) , nbttagcompound3 . func _ 74762 _ e ( " z " ) ) , block , nbttagcompound3 . func _ 74762 _ e ( " t " ) , nbttagcompound3 . func _ 74762 _ e ( " p " ) ) ; 
 } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 index 6ee1fa1 . . 89da108 100644 
 - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 59 , 6 + 59 , 7 @ @ import net . minecraft . world . World ; 
 import net . minecraft . world . WorldServer ; 
 import net . minecraft . world . WorldSettings ; 
 import net . minecraft . world . biome . Biome ; 
 + import net . minecraft . world . chunk . Chunk ; 
 import net . minecraft . world . chunk . ChunkPrimer ; 
 import net . minecraft . world . gen . IChunkGenerator ; 
 import net . minecraft . world . storage . IPlayerFileData ; 
 @ @ - 598 , 6 + 599 , 12 @ @ public class ForgeEventFactory 
 } 
 
 @ Nullable 
 + public static CapabilityDispatcher gatherCapabilities ( Chunk chunk ) 
 + { 
 + return gatherCapabilities ( new AttachCapabilitiesEvent < Chunk > ( Chunk . class , chunk ) , null ) ; 
 + } 
 + 
 + @ Nullable 
 private static CapabilityDispatcher gatherCapabilities ( AttachCapabilitiesEvent < ? > event , @ Nullable ICapabilityProvider parent ) 
 { 
 MinecraftForge . EVENT _ BUS . post ( event ) ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / ChunkCapabilityPollutionTest . java b / src / test / java / net / minecraftforge / debug / ChunkCapabilityPollutionTest . java 
 new file mode 100644 
 index 0000000 . . d4cd182 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / ChunkCapabilityPollutionTest . java 
 @ @ - 0 , 0 + 1 , 177 @ @ 
 + package net . minecraftforge . debug ; 
 + 
 + import net . minecraft . init . Blocks ; 
 + import net . minecraft . init . Items ; 
 + import net . minecraft . item . Item ; 
 + import net . minecraft . item . ItemStack ; 
 + import net . minecraft . nbt . NBTBase ; 
 + import net . minecraft . nbt . NBTTagInt ; 
 + import net . minecraft . util . EnumFacing ; 
 + import net . minecraft . util . ResourceLocation ; 
 + import net . minecraft . util . text . TextComponentString ; 
 + import net . minecraft . world . chunk . Chunk ; 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . common . capabilities . Capability ; 
 + import net . minecraftforge . common . capabilities . CapabilityInject ; 
 + import net . minecraftforge . common . capabilities . CapabilityManager ; 
 + import net . minecraftforge . common . capabilities . ICapabilitySerializable ; 
 + import net . minecraftforge . event . AttachCapabilitiesEvent ; 
 + import net . minecraftforge . event . entity . player . PlayerInteractEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . event . FMLInitializationEvent ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + 
 + import javax . annotation . Nonnull ; 
 + import javax . annotation . Nullable ; 
 + 
 + / * * 
 + * Simple mod to test chunk capabilities . 
 + * Use flint and steel to increase pollution in a chunk and saplings to decrease pollution in a chunk . 
 + * / 
 + @ Mod ( modid = ChunkCapabilityPollutionTest . MODID , name = " Chunk Capability Test " , version = " 0 . 0 . 0 " ) 
 + public class ChunkCapabilityPollutionTest { 
 + public static final String MODID = " chunkcapabilitypollutiontest " ; 
 + public static final boolean ENABLE = false ; 
 + 
 + public interface IPollution 
 + { 
 + int get ( ) ; 
 + 
 + void set ( int value , boolean markDirty ) ; 
 + } 
 + 
 + public static class PollutionStorage implements Capability . IStorage < IPollution > 
 + { 
 + @ Nullable 
 + @ Override 
 + public NBTBase writeNBT ( Capability < IPollution > capability , IPollution instance , EnumFacing side ) { 
 + return new NBTTagInt ( instance . get ( ) ) ; 
 + } 
 + 
 + @ Override 
 + public void readNBT ( Capability < IPollution > capability , IPollution instance , EnumFacing side , NBTBase nbt ) { 
 + if ( nbt instanceof NBTTagInt ) 
 + { 
 + / / The state is being loaded and not updated . We set the value silently to avoid unnecessary dirty chunks 
 + instance . set ( ( ( NBTTagInt ) nbt ) . getInt ( ) , false ) ; 
 + } 
 + } 
 + } 
 + 
 + public static class DefaultPollution implements IPollution 
 + { 
 + private int value ; 
 + 
 + @ Override 
 + public int get ( ) { 
 + return value ; 
 + } 
 + 
 + @ Override 
 + public void set ( int value , boolean markDirty ) { 
 + this . value = value ; 
 + } 
 + } 
 + 
 + / * * 
 + * Marks the chunk as dirty when the value changes . 
 + * Cannot be the default implementation because it requires a chunk in the constructor 
 + * / 
 + public static class SafePollution extends DefaultPollution 
 + { 
 + private final Chunk chunk ; 
 + 
 + public SafePollution ( Chunk chunk ) 
 + { 
 + this . chunk = chunk ; 
 + } 
 + 
 + @ Override 
 + public void set ( int value , boolean markDirty ) { 
 + super . set ( value , markDirty ) ; 
 + if ( markDirty ) { 
 + chunk . markDirty ( ) ; 
 + } 
 + } 
 + } 
 + 
 + public static class PollutionProvider implements ICapabilitySerializable < NBTBase > 
 + { 
 + private final IPollution pollution ; 
 + 
 + public PollutionProvider ( Chunk chunk ) 
 + { 
 + pollution = new SafePollution ( chunk ) ; 
 + } 
 + 
 + @ Override 
 + public NBTBase serializeNBT ( ) { 
 + return POLLUTION _ CAPABILITY . getStorage ( ) . writeNBT ( POLLUTION _ CAPABILITY , pollution , null ) ; 
 + } 
 + 
 + @ Override 
 + public void deserializeNBT ( NBTBase nbt ) { 
 + POLLUTION _ CAPABILITY . getStorage ( ) . readNBT ( POLLUTION _ CAPABILITY , pollution , null , nbt ) ; 
 + } 
 + 
 + @ Override 
 + public boolean hasCapability ( @ Nonnull Capability < ? > capability , @ Nullable EnumFacing facing ) { 
 + return capability = = POLLUTION _ CAPABILITY ; 
 + } 
 + 
 + @ Nullable 
 + @ Override 
 + public < T > T getCapability ( @ Nonnull Capability < T > capability , @ Nullable EnumFacing facing ) { 
 + return capability = = POLLUTION _ CAPABILITY ? POLLUTION _ CAPABILITY . cast ( pollution ) : null ; 
 + } 
 + } 
 + 
 + public static class EventBusHandler 
 + { 
 + @ SubscribeEvent 
 + public void onAttachChunkCapabilities ( AttachCapabilitiesEvent < Chunk > event ) 
 + { 
 + event . addCapability ( new ResourceLocation ( MODID , " pollution " ) , new PollutionProvider ( event . getObject ( ) ) ) ; 
 + } 
 + 
 + @ SubscribeEvent 
 + public void onUseItem ( PlayerInteractEvent . RightClickBlock event ) 
 + { 
 + if ( ! event . getWorld ( ) . isRemote ) { 
 + ItemStack stack = event . getEntityPlayer ( ) . getHeldItem ( event . getHand ( ) ) ; 
 + int delta = 0 ; 
 + if ( stack . getItem ( ) = = Items . FLINT _ AND _ STEEL ) 
 + { 
 + delta = 1 ; 
 + } 
 + else if ( stack . getItem ( ) = = Item . getItemFromBlock ( Blocks . SAPLING ) ) 
 + { 
 + delta = - 1 ; 
 + } 
 + 
 + if ( delta ! = 0 ) 
 + { 
 + Chunk chunk = event . getWorld ( ) . getChunkFromBlockCoords ( event . getPos ( ) ) ; 
 + IPollution pollution = chunk . getCapability ( POLLUTION _ CAPABILITY , null ) ; 
 + pollution . set ( pollution . get ( ) + delta , true ) ; 
 + 
 + event . getEntityPlayer ( ) . sendStatusMessage ( new TextComponentString ( " Chunk pollution : " + pollution . get ( ) ) , true ) ; 
 + } 
 + } 
 + } 
 + } 
 + 
 + @ CapabilityInject ( IPollution . class ) 
 + public static final Capability < IPollution > POLLUTION _ CAPABILITY = null ; 
 + 
 + @ Mod . EventHandler 
 + public void init ( FMLInitializationEvent event ) 
 + { 
 + if ( ENABLE ) 
 + { 
 + CapabilityManager . INSTANCE . register ( IPollution . class , new PollutionStorage ( ) , DefaultPollution . class ) ; 
 + MinecraftForge . EVENT _ BUS . register ( new EventBusHandler ( ) ) ; 
 + } 
 + } 
 + 
 + }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / util / math / BlockPos . java . patch b / patches / minecraft / net / minecraft / util / math / BlockPos . java . patch 
 index 70319c0 . . 33fca8b 100644 
 - - - a / patches / minecraft / net / minecraft / util / math / BlockPos . java . patch 
 + + + b / patches / minecraft / net / minecraft / util / math / BlockPos . java . patch 
 @ @ - 1 , 41 + 1 , 11 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / util / math / BlockPos . java 
 + + + . . / src - work / minecraft / net / minecraft / util / math / BlockPos . java 
 - @ @ - 270 , 6 + 270 , 21 @ @ 
 - } ; 
 - } 
 - 
 - + / * * 
 - + * Returns a version of this BlockPos that is guaranteed to be Immutable . 
 - + * In most cases this will return ' this ' , but if ' this ' is an instance of 
 - + * MutableBlockPos it will return a new instance of BlockPos with the same values . 
 - + * 
 - + * When storing a parameter given to you for an extended period of time , make sure you 
 - + * use this in case the value is changed internally . 
 - + * 
 - + * @ return An immutable BlockPos . 
 - + * / 
 - + public BlockPos getImmutable ( ) 
 - + { 
 - + return this ; 
 - + } 
 - + 
 - public static final class MutableBlockPos extends BlockPos 
 - { 
 - private int field _ 177997 _ b ; 
 - @ @ - 333 , 6 + 348 , 8 @ @ 
 - { 
 - return new BlockPos ( this ) ; 
 - } 
 - + 
 - + @ Override public BlockPos getImmutable ( ) { return new BlockPos ( this ) ; } 
 - } 
 - 
 - public static final class PooledMutableBlockPos extends BlockPos 
 - @ @ - 443 , 5 + 460 , 7 @ @ 
 + @ @ - 443 , 5 + 443 , 8 @ @ 
 { 
 return this . func _ 185343 _ d ( this . field _ 185347 _ c + p _ 185341 _ 1 _ . func _ 82601 _ c ( ) , this . field _ 185348 _ d + p _ 185341 _ 1 _ . func _ 96559 _ d ( ) , this . field _ 185349 _ e + p _ 185341 _ 1 _ . func _ 82599 _ e ( ) ) ; 
 } 
 + 
 - + @ Override public BlockPos getImmutable ( ) { return new BlockPos ( this ) ; } 
 + + / / This method can safely be removed once vanilla adds it - MC - 100165 
 + + @ Override public BlockPos func _ 185334 _ h ( ) { return new BlockPos ( this ) ; } 
 } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / world / World . java . patch b / patches / minecraft / net / minecraft / world / World . java . patch 
 index 9164dab . . cae7214 100644 
 - - - a / patches / minecraft / net / minecraft / world / World . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / World . java . patch 
 @ @ - 550 , 7 + 550 , 15 @ @ 
 explosion . func _ 77278 _ a ( ) ; 
 explosion . func _ 77279 _ a ( true ) ; 
 return explosion ; 
 - @ @ - 2276 , 19 + 2423 , 27 @ @ 
 + @ @ - 2253 , 6 + 2400 , 7 @ @ 
 + 
 + public void func _ 175690 _ a ( BlockPos p _ 175690 _ 1 _ , TileEntity p _ 175690 _ 2 _ ) 
 + { 
 + + p _ 175690 _ 1 _ = p _ 175690 _ 1 _ . func _ 185334 _ h ( ) ; / / Forge - prevent mutable BlockPos leaks 
 + if ( p _ 175690 _ 2 _ ! = null & & ! p _ 175690 _ 2 _ . func _ 145837 _ r ( ) ) 
 + { 
 + if ( this . field _ 147481 _ N ) 
 + @ @ - 2276 , 19 + 2424 , 27 @ @ 
 else 
 { 
 this . func _ 175700 _ a ( p _ 175690 _ 2 _ ) ; 
 @ @ - 579 , 7 + 587 , 7 @ @ 
 } 
 else 
 { 
 - @ @ - 2301 , 6 + 2456 , 7 @ @ 
 + @ @ - 2301 , 6 + 2457 , 7 @ @ 
 
 this . func _ 175726 _ f ( p _ 175713 _ 1 _ ) . func _ 177425 _ e ( p _ 175713 _ 1 _ ) ; 
 } 
 @ @ - 587 , 7 + 595 , 7 @ @ 
 } 
 
 public void func _ 147457 _ a ( TileEntity p _ 147457 _ 1 _ ) 
 - @ @ - 2327 , 7 + 2483 , 7 @ @ 
 + @ @ - 2327 , 7 + 2484 , 7 @ @ 
 if ( chunk ! = null & & ! chunk . func _ 76621 _ g ( ) ) 
 { 
 IBlockState iblockstate = this . func _ 180495 _ p ( p _ 175677 _ 1 _ ) ; 
 @ @ - 596 , 7 + 604 , 7 @ @ 
 } 
 else 
 { 
 - @ @ - 2350 , 6 + 2506 , 7 @ @ 
 + @ @ - 2350 , 6 + 2507 , 7 @ @ 
 { 
 this . field _ 72985 _ G = p _ 72891 _ 1 _ ; 
 this . field _ 72992 _ H = p _ 72891 _ 2 _ ; 
 @ @ - 604 , 7 + 612 , 7 @ @ 
 } 
 
 public void func _ 72835 _ b ( ) 
 - @ @ - 2359 , 6 + 2516 , 11 @ @ 
 + @ @ - 2359 , 6 + 2517 , 11 @ @ 
 
 protected void func _ 72947 _ a ( ) 
 { 
 @ @ - 616 , 7 + 624 , 7 @ @ 
 if ( this . field _ 72986 _ A . func _ 76059 _ o ( ) ) 
 { 
 this . field _ 73004 _ o = 1 . 0F ; 
 - @ @ - 2372 , 6 + 2534 , 11 @ @ 
 + @ @ - 2372 , 6 + 2535 , 11 @ @ 
 
 protected void func _ 72979 _ l ( ) 
 { 
 @ @ - 628 , 7 + 636 , 7 @ @ 
 if ( ! this . field _ 73011 _ w . func _ 177495 _ o ( ) ) 
 { 
 if ( ! this . field _ 72995 _ K ) 
 - @ @ - 2491 , 28 + 2658 , 33 @ @ 
 + @ @ - 2491 , 28 + 2659 , 33 @ @ 
 
 public boolean func _ 175670 _ e ( BlockPos p _ 175670 _ 1 _ , boolean p _ 175670 _ 2 _ ) 
 { 
 @ @ - 668 , 7 + 676 , 7 @ @ 
 
 if ( ! flag ) 
 { 
 - @ @ - 2532 , 24 + 2704 , 29 @ @ 
 + @ @ - 2532 , 24 + 2705 , 29 @ @ 
 
 public boolean func _ 175708 _ f ( BlockPos p _ 175708 _ 1 _ , boolean p _ 175708 _ 2 _ ) 
 { 
 @ @ - 704 , 7 + 712 , 7 @ @ 
 { 
 return true ; 
 } 
 - @ @ - 2581 , 10 + 2758 , 11 @ @ 
 + @ @ - 2581 , 10 + 2759 , 11 @ @ 
 else 
 { 
 IBlockState iblockstate = this . func _ 180495 _ p ( p _ 175638 _ 1 _ ) ; 
 @ @ - 719 , 7 + 727 , 7 @ @ 
 { 
 j = 1 ; 
 } 
 - @ @ - 2683 , 7 + 2861 , 7 @ @ 
 + @ @ - 2683 , 7 + 2862 , 7 @ @ 
 int j4 = j2 + enumfacing . func _ 96559 _ d ( ) ; 
 int k4 = k2 + enumfacing . func _ 82599 _ e ( ) ; 
 blockpos $ pooledmutableblockpos . func _ 185343 _ d ( i4 , j4 , k4 ) ; 
 @ @ - 728 , 7 + 736 , 7 @ @ 
 i3 = this . func _ 175642 _ b ( p _ 180500 _ 1 _ , blockpos $ pooledmutableblockpos ) ; 
 
 if ( i3 = = l2 - l4 & & j < this . field _ 72994 _ J . length ) 
 - @ @ - 2789 , 10 + 2967 , 10 @ @ 
 + @ @ - 2789 , 10 + 2968 , 10 @ @ 
 public List < Entity > func _ 175674 _ a ( Entity p _ 175674 _ 1 _ , AxisAlignedBB p _ 175674 _ 2 _ , Predicate < ? super Entity > p _ 175674 _ 3 _ ) 
 { 
 List < Entity > list = Lists . < Entity > newArrayList ( ) ; 
 @ @ - 743 , 7 + 751 , 7 @ @ 
 
 for ( int i1 = i ; i1 < = j ; + + i1 ) 
 { 
 - @ @ - 2845 , 10 + 3023 , 10 @ @ 
 + @ @ - 2845 , 10 + 3024 , 10 @ @ 
 
 public < T extends Entity > List < T > func _ 175647 _ a ( Class < ? extends T > p _ 175647 _ 1 _ , AxisAlignedBB p _ 175647 _ 2 _ , Predicate < ? super T > p _ 175647 _ 3 _ ) 
 { 
 @ @ - 758 , 7 + 766 , 7 @ @ 
 List < T > list = Lists . < T > newArrayList ( ) ; 
 
 for ( int i1 = i ; i1 < j ; + + i1 ) 
 - @ @ - 2926 , 11 + 3104 , 13 @ @ 
 + @ @ - 2926 , 11 + 3105 , 13 @ @ 
 
 public void func _ 175650 _ b ( Collection < Entity > p _ 175650 _ 1 _ ) 
 { 
 @ @ - 775 , 7 + 783 , 7 @ @ 
 } 
 } 
 
 - @ @ - 2943 , 7 + 3123 , 7 @ @ 
 + @ @ - 2943 , 7 + 3124 , 7 @ @ 
 { 
 IBlockState iblockstate = this . func _ 180495 _ p ( p _ 175716 _ 2 _ ) ; 
 AxisAlignedBB axisalignedbb = p _ 175716 _ 3 _ ? null : p _ 175716 _ 1 _ . func _ 176223 _ P ( ) . func _ 185890 _ d ( this , p _ 175716 _ 2 _ ) ; 
 @ @ - 784 , 7 + 792 , 7 @ @ 
 } 
 
 public int func _ 181545 _ F ( ) 
 - @ @ - 3026 , 7 + 3206 , 7 @ @ 
 + @ @ - 3026 , 7 + 3207 , 7 @ @ 
 public int func _ 175651 _ c ( BlockPos p _ 175651 _ 1 _ , EnumFacing p _ 175651 _ 2 _ ) 
 { 
 IBlockState iblockstate = this . func _ 180495 _ p ( p _ 175651 _ 1 _ ) ; 
 @ @ - 793 , 7 + 801 , 7 @ @ 
 } 
 
 public boolean func _ 175640 _ z ( BlockPos p _ 175640 _ 1 _ ) 
 - @ @ - 3215 , 7 + 3395 , 7 @ @ 
 + @ @ - 3215 , 7 + 3396 , 7 @ @ 
 
 public long func _ 72905 _ C ( ) 
 { 
 @ @ - 802 , 7 + 810 , 7 @ @ 
 } 
 
 public long func _ 82737 _ E ( ) 
 - @ @ - 3225 , 17 + 3405 , 17 @ @ 
 + @ @ - 3225 , 17 + 3406 , 17 @ @ 
 
 public long func _ 72820 _ D ( ) 
 { 
 @ @ - 823 , 7 + 831 , 7 @ @ 
 
 if ( ! this . func _ 175723 _ af ( ) . func _ 177746 _ a ( blockpos ) ) 
 { 
 - @ @ - 3247 , 7 + 3427 , 7 @ @ 
 + @ @ - 3247 , 7 + 3428 , 7 @ @ 
 
 public void func _ 175652 _ B ( BlockPos p _ 175652 _ 1 _ ) 
 { 
 @ @ - 832 , 7 + 840 , 7 @ @ 
 } 
 
 @ SideOnly ( Side . CLIENT ) 
 - @ @ - 3267 , 12 + 3447 , 18 @ @ 
 + @ @ - 3267 , 12 + 3448 , 18 @ @ 
 
 if ( ! this . field _ 72996 _ f . contains ( p _ 72897 _ 1 _ ) ) 
 { 
 @ @ - 851 , 7 + 859 , 7 @ @ 
 return true ; 
 } 
 
 - @ @ - 3366 , 8 + 3552 , 7 @ @ 
 + @ @ - 3366 , 8 + 3553 , 7 @ @ 
 
 public boolean func _ 180502 _ D ( BlockPos p _ 180502 _ 1 _ ) 
 { 
 @ @ - 861 , 7 + 869 , 7 @ @ 
 } 
 
 public MapStorage func _ 175693 _ T ( ) 
 - @ @ - 3426 , 12 + 3611 , 12 @ @ 
 + @ @ - 3426 , 12 + 3612 , 12 @ @ 
 
 public int func _ 72800 _ K ( ) 
 { 
 @ @ - 876 , 7 + 884 , 7 @ @ 
 } 
 
 public Random func _ 72843 _ D ( int p _ 72843 _ 1 _ , int p _ 72843 _ 2 _ , int p _ 72843 _ 3 _ ) 
 - @ @ - 3481 , 7 + 3666 , 7 @ @ 
 + @ @ - 3481 , 7 + 3667 , 7 @ @ 
 @ SideOnly ( Side . CLIENT ) 
 public double func _ 72919 _ O ( ) 
 { 
 @ @ - 885 , 7 + 893 , 7 @ @ 
 } 
 
 public void func _ 175715 _ c ( int p _ 175715 _ 1 _ , BlockPos p _ 175715 _ 2 _ , int p _ 175715 _ 3 _ ) 
 - @ @ - 3515 , 7 + 3700 , 7 @ @ 
 + @ @ - 3515 , 7 + 3701 , 7 @ @ 
 
 public void func _ 175666 _ e ( BlockPos p _ 175666 _ 1 _ , Block p _ 175666 _ 2 _ ) 
 { 
 @ @ - 894 , 7 + 902 , 7 @ @ 
 { 
 BlockPos blockpos = p _ 175666 _ 1 _ . func _ 177972 _ a ( enumfacing ) ; 
 
 - @ @ - 3523 , 18 + 3708 , 14 @ @ 
 + @ @ - 3523 , 18 + 3709 , 14 @ @ 
 { 
 IBlockState iblockstate = this . func _ 180495 _ p ( blockpos ) ; 
 
 @ @ - 917 , 7 + 925 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 3600 , 6 + 3781 , 87 @ @ 
 + @ @ - 3600 , 6 + 3782 , 87 @ @ 
 return i > = - k & & i < = k & & j > = - k & & j < = k ; 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 index 7db81e4 . . 71b1ade 100644 
 - - - a / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / chunk / Chunk . java . patch 
 @ @ - 129 , 7 + 129 , 7 @ @ 
 else if ( p _ 177424 _ 2 _ = = Chunk . EnumCreateEntityType . QUEUED ) 
 { 
 - this . field _ 177447 _ w . add ( p _ 177424 _ 1 _ ) ; 
 - + this . field _ 177447 _ w . add ( p _ 177424 _ 1 _ . getImmutable ( ) ) ; 
 + + this . field _ 177447 _ w . add ( p _ 177424 _ 1 _ . func _ 185334 _ h ( ) ) ; 
 } 
 } 
 - else if ( tileentity . func _ 145837 _ r ( ) ) 
 diff - - git a / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java b / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java 
 index 1e29527 . . d1a2618 100644 
 - - - a / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java 
 + + + b / src / main / java / net / minecraftforge / common / util / BlockSnapshot . java 
 @ @ - 58 , 7 + 58 , 7 @ @ public class BlockSnapshot implements Serializable 
 { 
 this . setWorld ( world ) ; 
 this . dimId = world . provider . getDimension ( ) ; 
 - this . pos = pos . getImmutable ( ) ; 
 + this . pos = pos . toImmutable ( ) ; 
 this . setReplacedBlock ( state ) ; 
 this . registryName = new ResourceLocation ( state . getBlock ( ) . getRegistryName ( ) ) ; 
 this . meta = state . getBlock ( ) . getMetaFromState ( state ) ; 
 @ @ - 82 , 7 + 82 , 7 @ @ public class BlockSnapshot implements Serializable 
 public BlockSnapshot ( int dimension , BlockPos pos , String modId , String blockName , int meta , int flag , NBTTagCompound nbt ) 
 { 
 this . dimId = dimension ; 
 - this . pos = pos . getImmutable ( ) ; 
 + this . pos = pos . toImmutable ( ) ; 
 this . setFlag ( flag ) ; 
 this . registryName = new ResourceLocation ( modId , blockName ) ; 
 this . meta = meta ;
