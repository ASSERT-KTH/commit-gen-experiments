BLEU SCORE: 0.021590567826234357

TEST MSG: Add key binding modifiers and contexts .
GENERATED MSG: Try and fix invalid framebuffer depth / stencil setup , Thanks Ivoforce . Closes # 1032

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> index 7ceb60e . . 3d1788e 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> @ @ - 474 , 7 + 474 , 15 @ @ <nl> } <nl> <nl> public boolean func _ 70002 _ Q ( ) <nl> - @ @ - 3192 , 4 + 3084 , 10 @ @ <nl> + @ @ - 3066 , 6 + 2958 , 7 @ @ <nl> + this . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( ScreenShotHelper . func _ 148260 _ a ( this . field _ 71412 _ D , this . field _ 71443 _ c , this . field _ 71440 _ d , this . field _ 147124 _ at ) ) ; <nl> + } <nl> + } <nl> + + else if ( this . field _ 71462 _ r instanceof GuiControls ) ( ( GuiControls ) this . field _ 71462 _ r ) . field _ 146491 _ f = null ; <nl> + } <nl> + } <nl> + } <nl> + @ @ - 3192 , 4 + 3085 , 10 @ @ <nl> { <nl> return this . field _ 184127 _ aH ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch <nl> new file mode 100644 <nl> index 0000000 . . ee31589 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch <nl> @ @ - 0 , 0 + 1 , 49 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiControls . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiControls . java <nl> + @ @ - 66 , 6 + 66 , 7 @ @ <nl> + for ( KeyBinding keybinding : this . field _ 146297 _ k . field _ 71474 _ y . field _ 74324 _ K ) <nl> + { <nl> + keybinding . func _ 151462 _ b ( keybinding . func _ 151469 _ h ( ) ) ; <nl> + + keybinding . setKeyModifier ( keybinding . getKeyModifierDefault ( ) ) ; <nl> + } <nl> + <nl> + KeyBinding . func _ 74508 _ b ( ) ; <nl> + @ @ - 81 , 6 + 82 , 7 @ @ <nl> + { <nl> + if ( this . field _ 146491 _ f ! = null ) <nl> + { <nl> + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; <nl> + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , - 100 + p _ 73864 _ 3 _ ) ; <nl> + this . field _ 146491 _ f = null ; <nl> + KeyBinding . func _ 74508 _ b ( ) ; <nl> + @ @ - 105 , 17 + 107 , 21 @ @ <nl> + { <nl> + if ( p _ 73869 _ 2 _ = = 1 ) <nl> + { <nl> + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . NONE ) ; <nl> + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , 0 ) ; <nl> + } <nl> + else if ( p _ 73869 _ 2 _ ! = 0 ) <nl> + { <nl> + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ? net . minecraftforge . client . settings . KeyModifier . NONE : net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; <nl> + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , p _ 73869 _ 2 _ ) ; <nl> + } <nl> + else if ( p _ 73869 _ 1 _ > 0 ) <nl> + { <nl> + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ? net . minecraftforge . client . settings . KeyModifier . NONE : net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; <nl> + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , p _ 73869 _ 1 _ + 256 ) ; <nl> + } <nl> + <nl> + + if ( ! net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ) <nl> + this . field _ 146491 _ f = null ; <nl> + this . field _ 152177 _ g = Minecraft . func _ 71386 _ F ( ) ; <nl> + KeyBinding . func _ 74508 _ b ( ) ; <nl> + @ @ - 135 , 7 + 141 , 7 @ @ <nl> + <nl> + for ( KeyBinding keybinding : this . field _ 146497 _ i . field _ 74324 _ K ) <nl> + { <nl> + - if ( keybinding . func _ 151463 _ i ( ) ! = keybinding . func _ 151469 _ h ( ) ) <nl> + + if ( keybinding . func _ 151463 _ i ( ) ! = keybinding . func _ 151469 _ h ( ) | | keybinding . getKeyModifier ( ) ! = keybinding . getKeyModifierDefault ( ) ) <nl> + { <nl> + flag = false ; <nl> + break ; <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch <nl> new file mode 100644 <nl> index 0000000 . . b3c50b3 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch <nl> @ @ - 0 , 0 + 1 , 53 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java <nl> + @ @ - 62 , 7 + 62 , 7 @ @ <nl> + <nl> + protected int func _ 148137 _ d ( ) <nl> + { <nl> + - return super . func _ 148137 _ d ( ) + 15 ; <nl> + + return super . func _ 148137 _ d ( ) + 35 ; <nl> + } <nl> + <nl> + public int func _ 148139 _ c ( ) <nl> + @ @ - 113 , 7 + 113 , 7 @ @ <nl> + { <nl> + this . field _ 148282 _ b = p _ i45029 _ 2 _ ; <nl> + this . field _ 148283 _ c = I18n . func _ 135052 _ a ( p _ i45029 _ 2 _ . func _ 151464 _ g ( ) , new Object [ 0 ] ) ; <nl> + - this . field _ 148280 _ d = new GuiButton ( 0 , 0 , 0 , 75 , 20 , I18n . func _ 135052 _ a ( p _ i45029 _ 2 _ . func _ 151464 _ g ( ) , new Object [ 0 ] ) ) ; <nl> + + this . field _ 148280 _ d = new GuiButton ( 0 , 0 , 0 , 95 , 20 , I18n . func _ 135052 _ a ( p _ i45029 _ 2 _ . func _ 151464 _ g ( ) , new Object [ 0 ] ) ) ; <nl> + this . field _ 148281 _ e = new GuiButton ( 0 , 0 , 0 , 50 , 20 , I18n . func _ 135052 _ a ( " controls . reset " , new Object [ 0 ] ) ) ; <nl> + } <nl> + <nl> + @ @ - 121 , 20 + 121 , 20 @ @ <nl> + { <nl> + boolean flag = GuiKeyBindingList . this . field _ 148191 _ k . field _ 146491 _ f = = this . field _ 148282 _ b ; <nl> + GuiKeyBindingList . this . field _ 148189 _ l . field _ 71466 _ p . func _ 78276 _ b ( this . field _ 148283 _ c , p _ 180790 _ 2 _ + 90 - GuiKeyBindingList . this . field _ 148188 _ n , p _ 180790 _ 3 _ + p _ 180790 _ 5 _ / 2 - GuiKeyBindingList . this . field _ 148189 _ l . field _ 71466 _ p . field _ 78288 _ b / 2 , 16777215 ) ; <nl> + - this . field _ 148281 _ e . field _ 146128 _ h = p _ 180790 _ 2 _ + 190 ; <nl> + + this . field _ 148281 _ e . field _ 146128 _ h = p _ 180790 _ 2 _ + 210 ; <nl> + this . field _ 148281 _ e . field _ 146129 _ i = p _ 180790 _ 3 _ ; <nl> + - this . field _ 148281 _ e . field _ 146124 _ l = this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = this . field _ 148282 _ b . func _ 151469 _ h ( ) ; <nl> + + this . field _ 148281 _ e . field _ 146124 _ l = this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = this . field _ 148282 _ b . func _ 151469 _ h ( ) | | this . field _ 148282 _ b . getKeyModifier ( ) ! = this . field _ 148282 _ b . getKeyModifierDefault ( ) ; <nl> + this . field _ 148281 _ e . func _ 146112 _ a ( GuiKeyBindingList . this . field _ 148189 _ l , p _ 180790 _ 6 _ , p _ 180790 _ 7 _ ) ; <nl> + this . field _ 148280 _ d . field _ 146128 _ h = p _ 180790 _ 2 _ + 105 ; <nl> + this . field _ 148280 _ d . field _ 146129 _ i = p _ 180790 _ 3 _ ; <nl> + - this . field _ 148280 _ d . field _ 146126 _ j = GameSettings . func _ 74298 _ c ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ) ; <nl> + + this . field _ 148280 _ d . field _ 146126 _ j = this . field _ 148282 _ b . getKeyModifier ( ) . getLocalizedComboName ( GameSettings . func _ 74298 _ c ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ) ) ; <nl> + boolean flag1 = false ; <nl> + <nl> + if ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = 0 ) <nl> + { <nl> + for ( KeyBinding keybinding : GuiKeyBindingList . this . field _ 148189 _ l . field _ 71474 _ y . field _ 74324 _ K ) <nl> + { <nl> + - if ( keybinding ! = this . field _ 148282 _ b & & keybinding . func _ 151463 _ i ( ) = = this . field _ 148282 _ b . func _ 151463 _ i ( ) ) <nl> + + if ( keybinding ! = this . field _ 148282 _ b & & keybinding . conflicts ( this . field _ 148282 _ b ) ) <nl> + { <nl> + flag1 = true ; <nl> + break ; <nl> + @ @ - 163 , 6 + 163 , 7 @ @ <nl> + } <nl> + else if ( this . field _ 148281 _ e . func _ 146116 _ c ( GuiKeyBindingList . this . field _ 148189 _ l , p _ 148278 _ 2 _ , p _ 148278 _ 3 _ ) ) <nl> + { <nl> + + this . field _ 148282 _ b . setKeyModifier ( this . field _ 148282 _ b . getKeyModifierDefault ( ) ) ; <nl> + GuiKeyBindingList . this . field _ 148189 _ l . field _ 71474 _ y . func _ 151440 _ a ( this . field _ 148282 _ b , this . field _ 148282 _ b . func _ 151469 _ h ( ) ) ; <nl> + KeyBinding . func _ 74508 _ b ( ) ; <nl> + return true ; <nl> diff - - git a / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch b / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch <nl> index 5a85b1f . . a62941d 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch <nl> @ @ - 1 , 6 + 1 , 30 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / client / settings / GameSettings . java <nl> + + + . . / src - work / minecraft / net / minecraft / client / settings / GameSettings . java <nl> - @ @ - 887 , 6 + 887 , 7 @ @ <nl> + @ @ - 147 , 6 + 147 , 7 @ @ <nl> + <nl> + public GameSettings ( Minecraft p _ i46326 _ 1 _ , File p _ i46326 _ 2 _ ) <nl> + { <nl> + + setForgeKeybindProperties ( ) ; <nl> + this . field _ 74324 _ K = ( KeyBinding [ ] ) ArrayUtils . addAll ( new KeyBinding [ ] { this . field _ 74312 _ F , this . field _ 74313 _ G , this . field _ 74351 _ w , this . field _ 74370 _ x , this . field _ 74368 _ y , this . field _ 74366 _ z , this . field _ 74314 _ A , this . field _ 74311 _ E , this . field _ 151444 _ V , this . field _ 74316 _ C , this . field _ 151445 _ Q , this . field _ 74310 _ D , this . field _ 74321 _ H , this . field _ 74322 _ I , this . field _ 74323 _ J , this . field _ 151447 _ Z , this . field _ 151457 _ aa , this . field _ 151458 _ ab , this . field _ 152395 _ am , this . field _ 178883 _ an , this . field _ 186718 _ X } , this . field _ 151456 _ ac ) ; <nl> + this . field _ 74318 _ M = EnumDifficulty . NORMAL ; <nl> + this . field _ 74332 _ R = " " ; <nl> + @ @ - 171 , 6 + 172 , 7 @ @ <nl> + <nl> + public GameSettings ( ) <nl> + { <nl> + + setForgeKeybindProperties ( ) ; <nl> + this . field _ 74324 _ K = ( KeyBinding [ ] ) ArrayUtils . addAll ( new KeyBinding [ ] { this . field _ 74312 _ F , this . field _ 74313 _ G , this . field _ 74351 _ w , this . field _ 74370 _ x , this . field _ 74368 _ y , this . field _ 74366 _ z , this . field _ 74314 _ A , this . field _ 74311 _ E , this . field _ 151444 _ V , this . field _ 74316 _ C , this . field _ 151445 _ Q , this . field _ 74310 _ D , this . field _ 74321 _ H , this . field _ 74322 _ I , this . field _ 74323 _ J , this . field _ 151447 _ Z , this . field _ 151457 _ aa , this . field _ 151458 _ ab , this . field _ 152395 _ am , this . field _ 178883 _ an , this . field _ 186718 _ X } , this . field _ 151456 _ ac ) ; <nl> + this . field _ 74318 _ M = EnumDifficulty . NORMAL ; <nl> + this . field _ 74332 _ R = " " ; <nl> + @ @ - 846 , 6 + 848 , 7 @ @ <nl> + if ( astring [ 0 ] . equals ( " key _ " + keybinding . func _ 151464 _ g ( ) ) ) <nl> + { <nl> + keybinding . func _ 151462 _ b ( Integer . parseInt ( astring [ 1 ] ) ) ; <nl> + + if ( astring . length = = 3 ) keybinding . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . valueOf ( astring [ 2 ] ) ) ; <nl> + } <nl> + } <nl> + <nl> + @ @ - 887 , 6 + 890 , 7 @ @ <nl> <nl> public void func _ 74303 _ b ( ) <nl> { <nl> @ @ - 8 , 3 + 32 , 39 @ @ <nl> try <nl> { <nl> PrintWriter printwriter = new PrintWriter ( new FileWriter ( this . field _ 74354 _ ai ) ) ; <nl> + @ @ - 955 , 7 + 959 , 8 @ @ <nl> + <nl> + for ( KeyBinding keybinding : this . field _ 74324 _ K ) <nl> + { <nl> + - printwriter . println ( " key _ " + keybinding . func _ 151464 _ g ( ) + " : " + keybinding . func _ 151463 _ i ( ) ) ; <nl> + + String keyString = " key _ " + keybinding . func _ 151464 _ g ( ) + " : " + keybinding . func _ 151463 _ i ( ) ; <nl> + + printwriter . println ( keybinding . getKeyModifier ( ) ! = net . minecraftforge . client . settings . KeyModifier . NONE ? keyString + " : " + keybinding . getKeyModifier ( ) : keyString ) ; <nl> + } <nl> + <nl> + for ( SoundCategory soundcategory : SoundCategory . values ( ) ) <nl> + @ @ - 1184 , 4 + 1189 , 25 @ @ <nl> + return p _ 148264 _ 1 _ ; <nl> + } <nl> + } <nl> + + <nl> + + / * * * * * * * Forge Start * * * * * * * * * * * / <nl> + + private void setForgeKeybindProperties ( ) { <nl> + + net . minecraftforge . client . settings . KeyConflictContext inGame = net . minecraftforge . client . settings . KeyConflictContext . IN _ GAME ; <nl> + + field _ 74351 _ w . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74370 _ x . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74368 _ y . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74366 _ z . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74314 _ A . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74311 _ E . setKeyConflictContext ( inGame ) ; <nl> + + field _ 151444 _ V . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74312 _ F . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74322 _ I . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74310 _ D . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74321 _ H . setKeyConflictContext ( inGame ) ; <nl> + + field _ 74323 _ J . setKeyConflictContext ( inGame ) ; <nl> + + field _ 151457 _ aa . setKeyConflictContext ( inGame ) ; <nl> + + field _ 151458 _ ab . setKeyConflictContext ( inGame ) ; <nl> + + field _ 186718 _ X . setKeyConflictContext ( inGame ) ; <nl> + + } <nl> + + / * * * * * * * Forge End * * * * * * * * * * * / <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch b / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 4f61d2e <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch <nl> @ @ - 0 , 0 + 1 , 155 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / settings / KeyBinding . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / settings / KeyBinding . java <nl> + @ @ - 14 , 7 + 14 , 7 @ @ <nl> + public class KeyBinding implements Comparable < KeyBinding > <nl> + { <nl> + private static final List < KeyBinding > field _ 74516 _ a = Lists . < KeyBinding > newArrayList ( ) ; <nl> + - private static final IntHashMap < KeyBinding > field _ 74514 _ b = new IntHashMap ( ) ; <nl> + + private static final net . minecraftforge . client . settings . KeyBindingMap field _ 74514 _ b = new net . minecraftforge . client . settings . KeyBindingMap ( ) ; <nl> + private static final Set < String > field _ 151473 _ c = Sets . < String > newHashSet ( ) ; <nl> + private final String field _ 74515 _ c ; <nl> + private final int field _ 151472 _ e ; <nl> + @ @ - 27 , 7 + 27 , 7 @ @ <nl> + { <nl> + if ( p _ 74507 _ 0 _ ! = 0 ) <nl> + { <nl> + - KeyBinding keybinding = ( KeyBinding ) field _ 74514 _ b . func _ 76041 _ a ( p _ 74507 _ 0 _ ) ; <nl> + + KeyBinding keybinding = ( KeyBinding ) field _ 74514 _ b . lookup ( p _ 74507 _ 0 _ ) ; <nl> + <nl> + if ( keybinding ! = null ) <nl> + { <nl> + @ @ - 40 , 7 + 40 , 7 @ @ <nl> + { <nl> + if ( p _ 74510 _ 0 _ ! = 0 ) <nl> + { <nl> + - KeyBinding keybinding = ( KeyBinding ) field _ 74514 _ b . func _ 76041 _ a ( p _ 74510 _ 0 _ ) ; <nl> + + KeyBinding keybinding = ( KeyBinding ) field _ 74514 _ b . lookup ( p _ 74510 _ 0 _ ) ; <nl> + <nl> + if ( keybinding ! = null ) <nl> + { <nl> + @ @ - 74 , 11 + 74 , 11 @ @ <nl> + <nl> + public static void func _ 74508 _ b ( ) <nl> + { <nl> + - field _ 74514 _ b . func _ 76046 _ c ( ) ; <nl> + + field _ 74514 _ b . clearMap ( ) ; <nl> + <nl> + for ( KeyBinding keybinding : field _ 74516 _ a ) <nl> + { <nl> + - field _ 74514 _ b . func _ 76038 _ a ( keybinding . field _ 74512 _ d , keybinding ) ; <nl> + + field _ 74514 _ b . addKey ( keybinding . field _ 74512 _ d , keybinding ) ; <nl> + } <nl> + } <nl> + <nl> + @ @ - 94 , 7 + 94 , 7 @ @ <nl> + this . field _ 151472 _ e = p _ i45001 _ 2 _ ; <nl> + this . field _ 151471 _ f = p _ i45001 _ 3 _ ; <nl> + field _ 74516 _ a . add ( this ) ; <nl> + - field _ 74514 _ b . func _ 76038 _ a ( p _ i45001 _ 2 _ , this ) ; <nl> + + field _ 74514 _ b . addKey ( p _ i45001 _ 2 _ , this ) ; <nl> + field _ 151473 _ c . add ( p _ i45001 _ 3 _ ) ; <nl> + } <nl> + <nl> + @ @ - 158 , 4 + 158 , 102 @ @ <nl> + <nl> + return i ; <nl> + } <nl> + + <nl> + + / * * * * * * * * * * * * * * * * * * Forge Start * * * * * * * * * * * * * * * * * * * * * * * * * * * * * / <nl> + + private net . minecraftforge . client . settings . KeyModifier keyModifierDefault = net . minecraftforge . client . settings . KeyModifier . NONE ; <nl> + + private net . minecraftforge . client . settings . KeyModifier keyModifier = net . minecraftforge . client . settings . KeyModifier . NONE ; <nl> + + private net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext = net . minecraftforge . client . settings . KeyConflictContext . UNIVERSAL ; <nl> + + private boolean allowsKeyModifiers = false ; <nl> + + <nl> + + / * * <nl> + + * Convenience constructor for creating KeyBindings with keyConflictContext set . <nl> + + * / <nl> + + public KeyBinding ( String description , net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext , int keyCode , String category ) <nl> + + { <nl> + + this ( description , keyConflictContext , net . minecraftforge . client . settings . KeyModifier . NONE , keyCode , category ) ; <nl> + + } <nl> + + <nl> + + / * * <nl> + + * Convenience constructor for creating KeyBindings with keyConflictContext and keyModifier set . <nl> + + * / <nl> + + public KeyBinding ( String description , net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext , net . minecraftforge . client . settings . KeyModifier keyModifier , int keyCode , String category ) <nl> + + { <nl> + + this . field _ 74515 _ c = description ; <nl> + + this . field _ 74512 _ d = keyCode ; <nl> + + this . field _ 151472 _ e = keyCode ; <nl> + + this . field _ 151471 _ f = category ; <nl> + + this . keyConflictContext = keyConflictContext ; <nl> + + this . keyModifier = keyModifier ; <nl> + + this . keyModifierDefault = keyModifier ; <nl> + + if ( keyModifier ! = net . minecraftforge . client . settings . KeyModifier . NONE ) <nl> + + setAllowsKeyModifiers ( ) ; <nl> + + field _ 74516 _ a . add ( this ) ; <nl> + + field _ 74514 _ b . addKey ( keyCode , this ) ; <nl> + + field _ 151473 _ c . add ( category ) ; <nl> + + } <nl> + + <nl> + + / * * <nl> + + * Call this method to let Forge know that your KeyBinding and code can handle players setting modifiers . <nl> + + * Handling modifiers is made easy by using { @ link KeyBinding # isActiveAndMatches ( int ) } or { @ link KeyBinding # isPressed ( ) } <nl> + + * Vanilla code does not handle modifiers , so vanilla keyBinds do not have this set . <nl> + + * / <nl> + + public void setAllowsKeyModifiers ( ) <nl> + + { <nl> + + this . allowsKeyModifiers = true ; <nl> + + } <nl> + + <nl> + + / * * <nl> + + * Checks that the key conflict context and modifier are active , and that the keyCode matches this binding . <nl> + + * / <nl> + + public boolean isActiveAndMatches ( int keyCode ) <nl> + + { <nl> + + return keyCode = = this . func _ 151463 _ i ( ) & & getKeyConflictContext ( ) . isActive ( ) & & getKeyModifier ( ) . isActive ( ) ; <nl> + + } <nl> + + <nl> + + public void setKeyConflictContext ( net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext ) <nl> + + { <nl> + + this . keyConflictContext = keyConflictContext ; <nl> + + } <nl> + + <nl> + + public net . minecraftforge . client . settings . IKeyConflictContext getKeyConflictContext ( ) <nl> + + { <nl> + + return keyConflictContext ; <nl> + + } <nl> + + <nl> + + public net . minecraftforge . client . settings . KeyModifier getKeyModifierDefault ( ) <nl> + + { <nl> + + return keyModifierDefault ; <nl> + + } <nl> + + <nl> + + public net . minecraftforge . client . settings . KeyModifier getKeyModifier ( ) <nl> + + { <nl> + + if ( allowsKeyModifiers ) <nl> + + { <nl> + + return keyModifier ; <nl> + + } <nl> + + else <nl> + + { <nl> + + return net . minecraftforge . client . settings . KeyModifier . NONE ; <nl> + + } <nl> + + } <nl> + + <nl> + + public void setKeyModifier ( net . minecraftforge . client . settings . KeyModifier keyModifier ) <nl> + + { <nl> + + field _ 74514 _ b . removeKey ( this ) ; <nl> + + this . keyModifier = keyModifier ; <nl> + + field _ 74514 _ b . addKey ( field _ 74512 _ d , this ) ; <nl> + + } <nl> + + <nl> + + public boolean conflicts ( KeyBinding other ) <nl> + + { <nl> + + if ( getKeyConflictContext ( ) . conflicts ( other . getKeyConflictContext ( ) ) | | other . getKeyConflictContext ( ) . conflicts ( getKeyConflictContext ( ) ) ) <nl> + + { <nl> + + if ( ! allowsKeyModifiers | | ! other . allowsKeyModifiers | | getKeyModifier ( ) = = other . getKeyModifier ( ) ) <nl> + + { <nl> + + return func _ 151463 _ i ( ) = = other . func _ 151463 _ i ( ) ; <nl> + + } <nl> + + } <nl> + + return false ; <nl> + + } <nl> + + / * * * * * * * * * * * * * * * * * * Forge End * * * * * * * * * * * * * * * * * * * * * * * * * * * * * / <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / client / settings / IKeyConflictContext . java b / src / main / java / net / minecraftforge / client / settings / IKeyConflictContext . java <nl> new file mode 100644 <nl> index 0000000 . . 0029721 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / settings / IKeyConflictContext . java <nl> @ @ - 0 , 0 + 1 , 20 @ @ <nl> + package net . minecraftforge . client . settings ; <nl> + <nl> + import net . minecraft . client . settings . KeyBinding ; <nl> + <nl> + / * * <nl> + * Defines the context that a { @ link KeyBinding } is used . <nl> + * Key conflicts occur when a { @ link KeyBinding } has the same { @ link IKeyConflictContext } and has conflicting modifiers and keyCodes . <nl> + * / <nl> + public interface IKeyConflictContext { <nl> + / * * <nl> + * @ return true if conditions are met to activate { @ link KeyBinding } s with this context <nl> + * / <nl> + boolean isActive ( ) ; <nl> + <nl> + / * * <nl> + * @ return true if the other context can have { @ link KeyBinding } conflicts with this one . <nl> + * This will be called on both contexts to check for conflicts . <nl> + * / <nl> + boolean conflicts ( IKeyConflictContext other ) ; <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java b / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java <nl> new file mode 100644 <nl> index 0000000 . . 729893e <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java <nl> @ @ - 0 , 0 + 1 , 74 @ @ <nl> + package net . minecraftforge . client . settings ; <nl> + <nl> + import net . minecraft . client . settings . KeyBinding ; <nl> + import net . minecraft . util . IntHashMap ; <nl> + <nl> + import java . util . ArrayList ; <nl> + import java . util . Collection ; <nl> + import java . util . EnumMap ; <nl> + <nl> + public class KeyBindingMap <nl> + { <nl> + private static final EnumMap < KeyModifier , IntHashMap < Collection < KeyBinding > > > map = new java . util . EnumMap < KeyModifier , IntHashMap < Collection < KeyBinding > > > ( KeyModifier . class ) ; <nl> + static <nl> + { <nl> + for ( KeyModifier modifier : KeyModifier . values ( ) ) <nl> + { <nl> + map . put ( modifier , new IntHashMap < Collection < KeyBinding > > ( ) ) ; <nl> + } <nl> + } <nl> + <nl> + public KeyBinding lookup ( int keyCode ) <nl> + { <nl> + KeyModifier activeModifier = KeyModifier . getActiveModifier ( ) ; <nl> + Collection < KeyBinding > bindings = map . get ( activeModifier ) . lookup ( keyCode ) ; <nl> + if ( bindings ! = null ) <nl> + { <nl> + for ( KeyBinding binding : bindings ) <nl> + { <nl> + if ( binding . isActiveAndMatches ( keyCode ) ) <nl> + { <nl> + return binding ; <nl> + } <nl> + } <nl> + } <nl> + return null ; <nl> + } <nl> + <nl> + public void addKey ( int keyCode , KeyBinding keyBinding ) <nl> + { <nl> + KeyModifier keyModifier = keyBinding . getKeyModifier ( ) ; <nl> + IntHashMap < Collection < KeyBinding > > bindingsMap = map . get ( keyModifier ) ; <nl> + Collection < KeyBinding > bindingsForKey = bindingsMap . lookup ( keyCode ) ; <nl> + if ( bindingsForKey = = null ) <nl> + { <nl> + bindingsForKey = new ArrayList < KeyBinding > ( ) ; <nl> + bindingsMap . addKey ( keyCode , bindingsForKey ) ; <nl> + } <nl> + bindingsForKey . add ( keyBinding ) ; <nl> + } <nl> + <nl> + public void removeKey ( KeyBinding keyBinding ) <nl> + { <nl> + KeyModifier keyModifier = keyBinding . getKeyModifier ( ) ; <nl> + int keyCode = keyBinding . getKeyCode ( ) ; <nl> + IntHashMap < Collection < KeyBinding > > bindingsMap = map . get ( keyModifier ) ; <nl> + Collection < KeyBinding > bindingsForKey = bindingsMap . lookup ( keyCode ) ; <nl> + if ( bindingsForKey ! = null ) <nl> + { <nl> + bindingsForKey . remove ( keyBinding ) ; <nl> + if ( bindingsForKey . isEmpty ( ) ) <nl> + { <nl> + bindingsMap . removeObject ( keyCode ) ; <nl> + } <nl> + } <nl> + } <nl> + <nl> + public void clearMap ( ) <nl> + { <nl> + for ( IntHashMap < Collection < KeyBinding > > bindings : map . values ( ) ) <nl> + { <nl> + bindings . clearMap ( ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyConflictContext . java b / src / main / java / net / minecraftforge / client / settings / KeyConflictContext . java <nl> new file mode 100644 <nl> index 0000000 . . 964dadd <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / settings / KeyConflictContext . java <nl> @ @ - 0 , 0 + 1 , 59 @ @ <nl> + package net . minecraftforge . client . settings ; <nl> + <nl> + import net . minecraft . client . Minecraft ; <nl> + import net . minecraft . client . gui . GuiScreen ; <nl> + <nl> + public enum KeyConflictContext implements IKeyConflictContext <nl> + { <nl> + / * * <nl> + * Universal key bindings are used in every context and will conflict with any other context . <nl> + * Key Bindings are universal by default . <nl> + * / <nl> + UNIVERSAL { <nl> + @ Override <nl> + public boolean isActive ( ) <nl> + { <nl> + return true ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean conflicts ( IKeyConflictContext other ) <nl> + { <nl> + return true ; <nl> + } <nl> + } , <nl> + <nl> + / * * <nl> + * Gui key bindings are only used when a { @ link GuiScreen } is open . <nl> + * / <nl> + GUI { <nl> + @ Override <nl> + public boolean isActive ( ) <nl> + { <nl> + return Minecraft . getMinecraft ( ) . currentScreen ! = null ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean conflicts ( IKeyConflictContext other ) <nl> + { <nl> + return this = = other ; <nl> + } <nl> + } , <nl> + <nl> + / * * <nl> + * In - game key bindings are only used when a { @ link GuiScreen } is not open . <nl> + * / <nl> + IN _ GAME { <nl> + @ Override <nl> + public boolean isActive ( ) <nl> + { <nl> + return ! GUI . isActive ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean conflicts ( IKeyConflictContext other ) <nl> + { <nl> + return this = = other ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyModifier . java b / src / main / java / net / minecraftforge / client / settings / KeyModifier . java <nl> new file mode 100644 <nl> index 0000000 . . 6eb699f <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / settings / KeyModifier . java <nl> @ @ - 0 , 0 + 1 , 124 @ @ <nl> + package net . minecraftforge . client . settings ; <nl> + <nl> + import net . minecraft . client . Minecraft ; <nl> + import net . minecraft . client . gui . GuiScreen ; <nl> + import net . minecraft . client . resources . I18n ; <nl> + import org . lwjgl . input . Keyboard ; <nl> + <nl> + public enum KeyModifier { <nl> + CONTROL { <nl> + @ Override <nl> + protected boolean matches ( int keyCode ) <nl> + { <nl> + if ( Minecraft . isRunningOnMac ) <nl> + { <nl> + return keyCode = = Keyboard . KEY _ LMETA | | keyCode = = Keyboard . KEY _ RMETA ; <nl> + } <nl> + else <nl> + { <nl> + return keyCode = = Keyboard . KEY _ LCONTROL | | keyCode = = Keyboard . KEY _ RCONTROL ; <nl> + } <nl> + } <nl> + <nl> + @ Override <nl> + public boolean isActive ( ) <nl> + { <nl> + return GuiScreen . isCtrlKeyDown ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getLocalizedComboName ( String keyName ) <nl> + { <nl> + return I18n . format ( " forge . controlsgui . control " , keyName ) ; <nl> + } <nl> + } , <nl> + SHIFT { <nl> + @ Override <nl> + protected boolean matches ( int keyCode ) <nl> + { <nl> + return keyCode = = Keyboard . KEY _ LSHIFT | | keyCode = = Keyboard . KEY _ RSHIFT ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean isActive ( ) <nl> + { <nl> + return GuiScreen . isShiftKeyDown ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getLocalizedComboName ( String keyName ) <nl> + { <nl> + return I18n . format ( " forge . controlsgui . shift " , keyName ) ; <nl> + } <nl> + } , <nl> + ALT { <nl> + @ Override <nl> + protected boolean matches ( int keyCode ) <nl> + { <nl> + return keyCode = = Keyboard . KEY _ LMENU | | keyCode = = Keyboard . KEY _ RMENU ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean isActive ( ) <nl> + { <nl> + return GuiScreen . isAltKeyDown ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getLocalizedComboName ( String keyName ) <nl> + { <nl> + return I18n . format ( " forge . controlsgui . alt " , keyName ) ; <nl> + } <nl> + } , <nl> + NONE { <nl> + @ Override <nl> + protected boolean matches ( int keyCode ) <nl> + { <nl> + return true ; <nl> + } <nl> + <nl> + @ Override <nl> + public boolean isActive ( ) <nl> + { <nl> + return ! SHIFT . isActive ( ) & & ! CONTROL . isActive ( ) & & ! ALT . isActive ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> + public String getLocalizedComboName ( String keyName ) <nl> + { <nl> + return keyName ; <nl> + } <nl> + } ; <nl> + <nl> + public static final KeyModifier [ ] MODIFIER _ VALUES = { SHIFT , CONTROL , ALT } ; <nl> + <nl> + public static KeyModifier getActiveModifier ( ) <nl> + { <nl> + for ( KeyModifier keyModifier : MODIFIER _ VALUES ) <nl> + { <nl> + if ( keyModifier . isActive ( ) ) <nl> + { <nl> + return keyModifier ; <nl> + } <nl> + } <nl> + return NONE ; <nl> + } <nl> + <nl> + public static boolean isKeyCodeModifier ( int keyCode ) <nl> + { <nl> + for ( KeyModifier keyModifier : MODIFIER _ VALUES ) <nl> + { <nl> + if ( keyModifier . matches ( keyCode ) ) <nl> + { <nl> + return true ; <nl> + } <nl> + } <nl> + return false ; <nl> + } <nl> + <nl> + protected abstract boolean matches ( int keyCode ) ; <nl> + <nl> + public abstract boolean isActive ( ) ; <nl> + <nl> + public abstract String getLocalizedComboName ( String keyName ) ; <nl> + } <nl> diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang <nl> index 507a84a . . 4155a94 100644 <nl> - - - a / src / main / resources / assets / forge / lang / en _ US . lang <nl> + + + b / src / main / resources / assets / forge / lang / en _ US . lang <nl> @ @ - 143 , 6 + 143 , 10 @ @ fml . configgui . tooltip . undoChanges = Undo Changes <nl> fml . configgui . tooltip . default = [ default : % s ] <nl> fml . configgui . tooltip . defaultNumeric = [ range : % s ~ % s , default : % s ] <nl> <nl> + forge . controlsgui . shift = SHIFT + % s <nl> + forge . controlsgui . control = CTRL + % s <nl> + forge . controlsgui . alt = ALT + % s <nl> + <nl> fml . menu . mods = Mods <nl> fml . menu . mods . normal = Normal <nl> fml . menu . mods . search = Search :
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> index b69cba7 . . b1c023d 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / client / Minecraft . java <nl> + + + . . / src - work / minecraft / net / minecraft / client / Minecraft . java <nl> - @ @ - 134 , 6 + 134 , 14 @ @ <nl> + @ @ - 135 , 6 + 135 , 14 @ @ <nl> import net . minecraft . world . storage . ISaveFormat ; <nl> import net . minecraft . world . storage . ISaveHandler ; <nl> import net . minecraft . world . storage . WorldInfo ; <nl> @ @ - 15 , 7 + 15 , 7 @ @ <nl> import org . apache . logging . log4j . LogManager ; <nl> import org . apache . logging . log4j . Logger ; <nl> import org . lwjgl . LWJGLException ; <nl> - @ @ - 245 , 7 + 253 , 7 @ @ <nl> + @ @ - 246 , 7 + 254 , 7 @ @ <nl> this . func _ 71389 _ H ( ) ; <nl> this . field _ 71449 _ j = p _ i1014 _ 1 _ ; <nl> field _ 147123 _ G . info ( " Setting user : " + p _ i1014 _ 1 _ . func _ 111285 _ a ( ) ) ; <nl> @ @ - 24 , 7 + 24 , 7 @ @ <nl> this . field _ 71459 _ aj = p _ i1014 _ 5 _ ; <nl> this . field _ 71443 _ c = p _ i1014 _ 2 _ ; <nl> this . field _ 71440 _ d = p _ i1014 _ 3 _ ; <nl> - @ @ - 419 , 7 + 427 , 7 @ @ <nl> + @ @ - 417 , 7 + 425 , 7 @ @ <nl> <nl> try <nl> { <nl> @ @ - 33 , 7 + 33 , 7 @ @ <nl> } <nl> catch ( LWJGLException lwjglexception ) <nl> { <nl> - @ @ - 518 , 7 + 526 , 7 @ @ <nl> + @ @ - 516 , 7 + 524 , 7 @ @ <nl> this . field _ 71452 _ i = new EffectRenderer ( this . field _ 71441 _ e , this . field _ 71446 _ o ) ; <nl> FMLClientHandler . instance ( ) . finishMinecraftLoading ( ) ; <nl> this . func _ 71361 _ d ( " Post startup " ) ; <nl> @ @ - 42 , 7 + 42 , 7 @ @ <nl> <nl> if ( this . field _ 71475 _ ae ! = null ) <nl> { <nl> - @ @ - 701 , 11 + 709 , 6 @ @ <nl> + @ @ - 699 , 11 + 707 , 6 @ @ <nl> <nl> public void func _ 147108 _ a ( GuiScreen p _ 147108 _ 1 _ ) <nl> { <nl> @ @ - 54 , 7 + 54 , 7 @ @ <nl> if ( p _ 147108 _ 1 _ = = null & & this . field _ 71441 _ e = = null ) <nl> { <nl> p _ 147108 _ 1 _ = new GuiMainMenu ( ) ; <nl> - @ @ - 715 , 6 + 718 , 17 @ @ <nl> + @ @ - 713 , 6 + 716 , 17 @ @ <nl> p _ 147108 _ 1 _ = new GuiGameOver ( ) ; <nl> } <nl> <nl> @ @ - 72 , 7 + 72 , 7 @ @ <nl> if ( p _ 147108 _ 1 _ instanceof GuiMainMenu ) <nl> { <nl> this . field _ 71474 _ y . field _ 74330 _ P = false ; <nl> - @ @ - 1297 , 7 + 1311 , 7 @ @ <nl> + @ @ - 1295 , 7 + 1309 , 7 @ @ <nl> <nl> if ( this . field _ 71439 _ g . func _ 82246 _ f ( i , j , k ) ) <nl> { <nl> @ @ - 81 , 7 + 81 , 7 @ @ <nl> this . field _ 71439 _ g . func _ 71038 _ i ( ) ; <nl> } <nl> } <nl> - @ @ - 1378 , 11 + 1392 , 12 @ @ <nl> + @ @ - 1376 , 11 + 1390 , 12 @ @ <nl> int j = this . field _ 71476 _ x . field _ 72312 _ c ; <nl> int k = this . field _ 71476 _ x . field _ 72309 _ d ; <nl> <nl> @ @ - 96 , 7 + 96 , 7 @ @ <nl> { <nl> flag = false ; <nl> this . field _ 71439 _ g . func _ 71038 _ i ( ) ; <nl> - @ @ - 1409 , 7 + 1424 , 8 @ @ <nl> + @ @ - 1407 , 7 + 1422 , 8 @ @ <nl> { <nl> ItemStack itemstack1 = this . field _ 71439 _ g . field _ 71071 _ by . func _ 70448 _ g ( ) ; <nl> <nl> @ @ - 106 , 7 + 106 , 7 @ @ <nl> { <nl> this . field _ 71460 _ t . field _ 78516 _ c . func _ 78445 _ c ( ) ; <nl> } <nl> - @ @ - 1608 , 6 + 1624 , 8 @ @ <nl> + @ @ - 1606 , 6 + 1622 , 8 @ @ <nl> <nl> while ( Mouse . next ( ) ) <nl> { <nl> @ @ - 115 , 7 + 115 , 7 @ @ <nl> i = Mouse . getEventButton ( ) ; <nl> <nl> if ( field _ 142025 _ a & & i = = 0 & & ( Keyboard . isKeyDown ( 29 ) | | Keyboard . isKeyDown ( 157 ) ) ) <nl> - @ @ - 2075 , 6 + 2093 , 11 @ @ <nl> + @ @ - 2079 , 6 + 2097 , 11 @ @ <nl> <nl> public void func _ 71353 _ a ( WorldClient p _ 71353 _ 1 _ , String p _ 71353 _ 2 _ ) <nl> { <nl> @ @ - 127 , 7 + 127 , 7 @ @ <nl> if ( p _ 71353 _ 1 _ = = null ) <nl> { <nl> NetHandlerPlayClient nethandlerplayclient = this . func _ 147114 _ u ( ) ; <nl> - @ @ - 2087 , 6 + 2110 , 18 @ @ <nl> + @ @ - 2091 , 6 + 2114 , 18 @ @ <nl> if ( this . field _ 71437 _ Z ! = null ) <nl> { <nl> this . field _ 71437 _ Z . func _ 71263 _ m ( ) ; <nl> @ @ - 146 , 7 + 146 , 7 @ @ <nl> } <nl> <nl> this . field _ 71437 _ Z = null ; <nl> - @ @ - 2235 , 113 + 2270 , 10 @ @ <nl> + @ @ - 2239 , 113 + 2274 , 10 @ @ <nl> if ( this . field _ 71476 _ x ! = null ) <nl> { <nl> boolean flag = this . field _ 71439 _ g . field _ 71075 _ bZ . field _ 75098 _ d ; <nl> @ @ - 262 , 7 + 262 , 7 @ @ <nl> if ( flag ) <nl> { <nl> j = this . field _ 71439 _ g . field _ 71069 _ bz . field _ 75151 _ b . size ( ) - 9 + this . field _ 71439 _ g . field _ 71071 _ by . field _ 70461 _ c ; <nl> - @ @ - 2508 , 8 + 2440 , 15 @ @ <nl> + @ @ - 2512 , 8 + 2444 , 15 @ @ <nl> p _ 70001 _ 1 _ . func _ 76472 _ a ( " gl _ max _ texture _ size " , Integer . valueOf ( func _ 71369 _ N ( ) ) ) ; <nl> } <nl> <nl> @ @ - 278 , 7 + 278 , 7 @ @ <nl> for ( int i = 16384 ; i > 0 ; i > > = 1 ) <nl> { <nl> GL11 . glTexImage2D ( GL11 . GL _ PROXY _ TEXTURE _ 2D , 0 , GL11 . GL _ RGBA , i , i , 0 , GL11 . GL _ RGBA , GL11 . GL _ UNSIGNED _ BYTE , ( ByteBuffer ) null ) ; <nl> - @ @ - 2517 , 6 + 2456 , 7 @ @ <nl> + @ @ - 2521 , 6 + 2460 , 7 @ @ <nl> <nl> if ( j ! = 0 ) <nl> { <nl> diff - - git a / patches / minecraft / net / minecraft / client / shader / Framebuffer . java . patch b / patches / minecraft / net / minecraft / client / shader / Framebuffer . java . patch <nl> index a17617b . . bf256e0 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / shader / Framebuffer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / shader / Framebuffer . java . patch <nl> @ @ - 1 , 21 + 1 , 29 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / client / shader / Framebuffer . java <nl> + + + . . / src - work / minecraft / net / minecraft / client / shader / Framebuffer . java <nl> - @ @ - 6 , 6 + 6 , 7 @ @ <nl> + @ @ - 6 , 6 + 6 , 9 @ @ <nl> import net . minecraft . client . renderer . OpenGlHelper ; <nl> import net . minecraft . client . renderer . Tessellator ; <nl> import net . minecraft . client . renderer . texture . TextureUtil ; <nl> + import net . minecraftforge . client . MinecraftForgeClient ; <nl> + + import static org . lwjgl . opengl . EXTPackedDepthStencil . * ; <nl> + + import static org . lwjgl . opengl . EXTFramebufferObject . * ; <nl> import org . lwjgl . opengl . EXTFramebufferObject ; <nl> import org . lwjgl . opengl . GL11 ; <nl> <nl> - @ @ - 120 , 6 + 121 , 11 @ @ <nl> + @ @ - 118 , 8 + 121 , 17 @ @ <nl> + if ( this . field _ 147619 _ e ) <nl> + { <nl> EXTFramebufferObject . glBindRenderbufferEXT ( 36161 , this . field _ 147624 _ h ) ; <nl> + + if ( MinecraftForgeClient . getStencilBits ( ) = = 0 ) <nl> + + { <nl> EXTFramebufferObject . glRenderbufferStorageEXT ( 36161 , 33190 , this . field _ 147622 _ a , this . field _ 147620 _ b ) ; <nl> EXTFramebufferObject . glFramebufferRenderbufferEXT ( 36160 , 36096 , 36161 , this . field _ 147624 _ h ) ; <nl> - + if ( MinecraftForgeClient . getStencilBits ( ) > 0 ) <nl> + + } <nl> + + else <nl> + { <nl> - + EXTFramebufferObject . glRenderbufferStorageEXT ( 36161 , EXTFramebufferObject . GL _ STENCIL _ INDEX8 _ EXT , this . field _ 147622 _ a , this . field _ 147620 _ b ) ; <nl> - + EXTFramebufferObject . glFramebufferRenderbufferEXT ( 36160 , EXTFramebufferObject . GL _ STENCIL _ ATTACHMENT _ EXT , 36161 , this . field _ 147624 _ h ) ; <nl> + + EXTFramebufferObject . glRenderbufferStorageEXT ( 36161 , GL _ DEPTH24 _ STENCIL8 _ EXT , this . field _ 147622 _ a , this . field _ 147620 _ b ) ; <nl> + + EXTFramebufferObject . glFramebufferRenderbufferEXT ( 36160 , GL _ DEPTH _ ATTACHMENT _ EXT , GL _ RENDERBUFFER _ EXT , this . field _ 147624 _ h ) ; <nl> + + EXTFramebufferObject . glFramebufferRenderbufferEXT ( 36160 , GL _ STENCIL _ ATTACHMENT _ EXT , GL _ RENDERBUFFER _ EXT , this . field _ 147624 _ h ) ; <nl> + } <nl> } <nl> <nl> diff - - git a / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch b / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> index 3082905 . . fafd4c8 100644 <nl> - - - a / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch <nl> @ @ - 1 , 6 + 1 , 6 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / server / MinecraftServer . java <nl> + + + . . / src - work / minecraft / net / minecraft / server / MinecraftServer . java <nl> - @ @ - 25 , 6 + 25 , 7 @ @ <nl> + @ @ - 26 , 6 + 26 , 7 @ @ <nl> import java . util . Arrays ; <nl> import java . util . Collections ; <nl> import java . util . Date ; <nl> @ @ - 8 , 7 + 8 , 7 @ @ <nl> import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Random ; <nl> - @ @ - 73 , 6 + 74 , 10 @ @ <nl> + @ @ - 74 , 6 + 75 , 10 @ @ <nl> import org . apache . logging . log4j . LogManager ; <nl> import org . apache . logging . log4j . Logger ; <nl> <nl> @ @ - 19 , 7 + 19 , 7 @ @ <nl> public abstract class MinecraftServer implements ICommandSender , Runnable , IPlayerUsage <nl> { <nl> private static final Logger field _ 147145 _ h = LogManager . getLogger ( ) ; <nl> - @ @ - 89 , 7 + 94 , 7 @ @ <nl> + @ @ - 90 , 7 + 95 , 7 @ @ <nl> @ SideOnly ( Side . SERVER ) <nl> private String field _ 71320 _ r ; <nl> private int field _ 71319 _ s = - 1 ; <nl> @ @ - 28 , 7 + 28 , 7 @ @ <nl> private ServerConfigurationManager field _ 71318 _ t ; <nl> private boolean field _ 71317 _ u = true ; <nl> private boolean field _ 71316 _ v ; <nl> - @ @ - 106 , 7 + 111 , 8 @ @ <nl> + @ @ - 107 , 7 + 112 , 8 @ @ <nl> private int field _ 71280 _ D ; <nl> private int field _ 143008 _ E = 0 ; <nl> public final long [ ] field _ 71311 _ j = new long [ 100 ] ; <nl> @ @ - 38 , 7 + 38 , 7 @ @ <nl> private KeyPair field _ 71292 _ I ; <nl> private String field _ 71293 _ J ; <nl> private String field _ 71294 _ K ; <nl> - @ @ - 182 , 8 + 188 , 6 @ @ <nl> + @ @ - 183 , 8 + 189 , 6 @ @ <nl> { <nl> this . func _ 71237 _ c ( p _ 71247 _ 1 _ ) ; <nl> this . func _ 71192 _ d ( " menu . loadingLevel " ) ; <nl> @ @ - 47 , 7 + 47 , 7 @ @ <nl> ISaveHandler isavehandler = this . field _ 71310 _ m . func _ 75804 _ a ( p _ 71247 _ 1 _ , true ) ; <nl> WorldInfo worldinfo = isavehandler . func _ 75757 _ d ( ) ; <nl> WorldSettings worldsettings ; <nl> - @ @ - 203 , 46 + 207 , 21 @ @ <nl> + @ @ - 204 , 46 + 208 , 21 @ @ <nl> worldsettings . func _ 77159 _ a ( ) ; <nl> } <nl> <nl> @ @ - 101 , 7 + 101 , 7 @ @ <nl> this . func _ 147139 _ a ( this . func _ 147135 _ j ( ) ) ; <nl> this . func _ 71222 _ d ( ) ; <nl> } <nl> - @ @ - 309 , 6 + 288 , 7 @ @ <nl> + @ @ - 310 , 6 + 289 , 7 @ @ <nl> if ( ! this . field _ 71290 _ O ) <nl> { <nl> WorldServer [ ] aworldserver = this . field _ 71305 _ c ; <nl> @ @ - 109 , 7 + 109 , 7 @ @ <nl> int i = aworldserver . length ; <nl> <nl> for ( int j = 0 ; j < i ; + + j ) <nl> - @ @ - 359 , 9 + 339 , 16 @ @ <nl> + @ @ - 360 , 9 + 340 , 16 @ @ <nl> for ( int i = 0 ; i < this . field _ 71305 _ c . length ; + + i ) <nl> { <nl> WorldServer worldserver = this . field _ 71305 _ c [ i ] ; <nl> @ @ - 126 , 7 + 126 , 7 @ @ <nl> if ( this . field _ 71307 _ n . func _ 76468 _ d ( ) ) <nl> { <nl> this . field _ 71307 _ n . func _ 76470 _ e ( ) ; <nl> - @ @ - 586 , 13 + 573 , 15 @ @ <nl> + @ @ - 588 , 13 + 575 , 15 @ @ <nl> this . field _ 71304 _ b . func _ 76320 _ a ( " levels " ) ; <nl> int i ; <nl> <nl> @ @ - 145 , 7 + 145 , 7 @ @ <nl> this . field _ 71304 _ b . func _ 76320 _ a ( worldserver . func _ 72912 _ H ( ) . func _ 76065 _ j ( ) ) ; <nl> this . field _ 71304 _ b . func _ 76320 _ a ( " pools " ) ; <nl> worldserver . func _ 82732 _ R ( ) . func _ 72343 _ a ( ) ; <nl> - @ @ - 639 , 9 + 628 , 11 @ @ <nl> + @ @ - 641 , 9 + 630 , 11 @ @ <nl> this . field _ 71304 _ b . func _ 76319 _ b ( ) ; <nl> } <nl> <nl> @ @ - 158 , 7 + 158 , 7 @ @ <nl> this . field _ 71304 _ b . func _ 76318 _ c ( " connection " ) ; <nl> this . func _ 147137 _ ag ( ) . func _ 151269 _ c ( ) ; <nl> this . field _ 71304 _ b . func _ 76318 _ c ( " players " ) ; <nl> - @ @ - 685 , 7 + 676 , 13 @ @ <nl> + @ @ - 688 , 7 + 679 , 13 @ @ <nl> <nl> public WorldServer func _ 71218 _ a ( int p _ 71218 _ 1 _ ) <nl> { <nl> @ @ - 173 , 7 + 173 , 7 @ @ <nl> } <nl> <nl> public String func _ 71249 _ w ( ) <nl> - @ @ - 944 , 6 + 941 , 7 @ @ <nl> + @ @ - 947 , 6 + 944 , 7 @ @ <nl> <nl> if ( worldserver ! = null ) <nl> { <nl> @ @ - 181 , 7 + 181 , 7 @ @ <nl> worldserver . func _ 73041 _ k ( ) ; <nl> } <nl> } <nl> - @ @ - 1414 , 7 + 1412 , 6 @ @ <nl> + @ @ - 1417 , 7 + 1415 , 6 @ @ <nl> this . field _ 147141 _ M = p _ 155759 _ 1 _ ; <nl> } <nl>

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 index 7ceb60e . . 3d1788e 100644 
 - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 @ @ - 474 , 7 + 474 , 15 @ @ 
 } 
 
 public boolean func _ 70002 _ Q ( ) 
 - @ @ - 3192 , 4 + 3084 , 10 @ @ 
 + @ @ - 3066 , 6 + 2958 , 7 @ @ 
 + this . field _ 71456 _ v . func _ 146158 _ b ( ) . func _ 146227 _ a ( ScreenShotHelper . func _ 148260 _ a ( this . field _ 71412 _ D , this . field _ 71443 _ c , this . field _ 71440 _ d , this . field _ 147124 _ at ) ) ; 
 + } 
 + } 
 + + else if ( this . field _ 71462 _ r instanceof GuiControls ) ( ( GuiControls ) this . field _ 71462 _ r ) . field _ 146491 _ f = null ; 
 + } 
 + } 
 + } 
 + @ @ - 3192 , 4 + 3085 , 10 @ @ 
 { 
 return this . field _ 184127 _ aH ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch 
 new file mode 100644 
 index 0000000 . . ee31589 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiControls . java . patch 
 @ @ - 0 , 0 + 1 , 49 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiControls . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiControls . java 
 + @ @ - 66 , 6 + 66 , 7 @ @ 
 + for ( KeyBinding keybinding : this . field _ 146297 _ k . field _ 71474 _ y . field _ 74324 _ K ) 
 + { 
 + keybinding . func _ 151462 _ b ( keybinding . func _ 151469 _ h ( ) ) ; 
 + + keybinding . setKeyModifier ( keybinding . getKeyModifierDefault ( ) ) ; 
 + } 
 + 
 + KeyBinding . func _ 74508 _ b ( ) ; 
 + @ @ - 81 , 6 + 82 , 7 @ @ 
 + { 
 + if ( this . field _ 146491 _ f ! = null ) 
 + { 
 + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; 
 + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , - 100 + p _ 73864 _ 3 _ ) ; 
 + this . field _ 146491 _ f = null ; 
 + KeyBinding . func _ 74508 _ b ( ) ; 
 + @ @ - 105 , 17 + 107 , 21 @ @ 
 + { 
 + if ( p _ 73869 _ 2 _ = = 1 ) 
 + { 
 + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . NONE ) ; 
 + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , 0 ) ; 
 + } 
 + else if ( p _ 73869 _ 2 _ ! = 0 ) 
 + { 
 + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ? net . minecraftforge . client . settings . KeyModifier . NONE : net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; 
 + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , p _ 73869 _ 2 _ ) ; 
 + } 
 + else if ( p _ 73869 _ 1 _ > 0 ) 
 + { 
 + + this . field _ 146491 _ f . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ? net . minecraftforge . client . settings . KeyModifier . NONE : net . minecraftforge . client . settings . KeyModifier . getActiveModifier ( ) ) ; 
 + this . field _ 146497 _ i . func _ 151440 _ a ( this . field _ 146491 _ f , p _ 73869 _ 1 _ + 256 ) ; 
 + } 
 + 
 + + if ( ! net . minecraftforge . client . settings . KeyModifier . isKeyCodeModifier ( p _ 73869 _ 2 _ ) ) 
 + this . field _ 146491 _ f = null ; 
 + this . field _ 152177 _ g = Minecraft . func _ 71386 _ F ( ) ; 
 + KeyBinding . func _ 74508 _ b ( ) ; 
 + @ @ - 135 , 7 + 141 , 7 @ @ 
 + 
 + for ( KeyBinding keybinding : this . field _ 146497 _ i . field _ 74324 _ K ) 
 + { 
 + - if ( keybinding . func _ 151463 _ i ( ) ! = keybinding . func _ 151469 _ h ( ) ) 
 + + if ( keybinding . func _ 151463 _ i ( ) ! = keybinding . func _ 151469 _ h ( ) | | keybinding . getKeyModifier ( ) ! = keybinding . getKeyModifierDefault ( ) ) 
 + { 
 + flag = false ; 
 + break ; 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch b / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch 
 new file mode 100644 
 index 0000000 . . b3c50b3 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java . patch 
 @ @ - 0 , 0 + 1 , 53 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / gui / GuiKeyBindingList . java 
 + @ @ - 62 , 7 + 62 , 7 @ @ 
 + 
 + protected int func _ 148137 _ d ( ) 
 + { 
 + - return super . func _ 148137 _ d ( ) + 15 ; 
 + + return super . func _ 148137 _ d ( ) + 35 ; 
 + } 
 + 
 + public int func _ 148139 _ c ( ) 
 + @ @ - 113 , 7 + 113 , 7 @ @ 
 + { 
 + this . field _ 148282 _ b = p _ i45029 _ 2 _ ; 
 + this . field _ 148283 _ c = I18n . func _ 135052 _ a ( p _ i45029 _ 2 _ . func _ 151464 _ g ( ) , new Object [ 0 ] ) ; 
 + - this . field _ 148280 _ d = new GuiButton ( 0 , 0 , 0 , 75 , 20 , I18n . func _ 135052 _ a ( p _ i45029 _ 2 _ . func _ 151464 _ g ( ) , new Object [ 0 ] ) ) ; 
 + + this . field _ 148280 _ d = new GuiButton ( 0 , 0 , 0 , 95 , 20 , I18n . func _ 135052 _ a ( p _ i45029 _ 2 _ . func _ 151464 _ g ( ) , new Object [ 0 ] ) ) ; 
 + this . field _ 148281 _ e = new GuiButton ( 0 , 0 , 0 , 50 , 20 , I18n . func _ 135052 _ a ( " controls . reset " , new Object [ 0 ] ) ) ; 
 + } 
 + 
 + @ @ - 121 , 20 + 121 , 20 @ @ 
 + { 
 + boolean flag = GuiKeyBindingList . this . field _ 148191 _ k . field _ 146491 _ f = = this . field _ 148282 _ b ; 
 + GuiKeyBindingList . this . field _ 148189 _ l . field _ 71466 _ p . func _ 78276 _ b ( this . field _ 148283 _ c , p _ 180790 _ 2 _ + 90 - GuiKeyBindingList . this . field _ 148188 _ n , p _ 180790 _ 3 _ + p _ 180790 _ 5 _ / 2 - GuiKeyBindingList . this . field _ 148189 _ l . field _ 71466 _ p . field _ 78288 _ b / 2 , 16777215 ) ; 
 + - this . field _ 148281 _ e . field _ 146128 _ h = p _ 180790 _ 2 _ + 190 ; 
 + + this . field _ 148281 _ e . field _ 146128 _ h = p _ 180790 _ 2 _ + 210 ; 
 + this . field _ 148281 _ e . field _ 146129 _ i = p _ 180790 _ 3 _ ; 
 + - this . field _ 148281 _ e . field _ 146124 _ l = this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = this . field _ 148282 _ b . func _ 151469 _ h ( ) ; 
 + + this . field _ 148281 _ e . field _ 146124 _ l = this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = this . field _ 148282 _ b . func _ 151469 _ h ( ) | | this . field _ 148282 _ b . getKeyModifier ( ) ! = this . field _ 148282 _ b . getKeyModifierDefault ( ) ; 
 + this . field _ 148281 _ e . func _ 146112 _ a ( GuiKeyBindingList . this . field _ 148189 _ l , p _ 180790 _ 6 _ , p _ 180790 _ 7 _ ) ; 
 + this . field _ 148280 _ d . field _ 146128 _ h = p _ 180790 _ 2 _ + 105 ; 
 + this . field _ 148280 _ d . field _ 146129 _ i = p _ 180790 _ 3 _ ; 
 + - this . field _ 148280 _ d . field _ 146126 _ j = GameSettings . func _ 74298 _ c ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ) ; 
 + + this . field _ 148280 _ d . field _ 146126 _ j = this . field _ 148282 _ b . getKeyModifier ( ) . getLocalizedComboName ( GameSettings . func _ 74298 _ c ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ) ) ; 
 + boolean flag1 = false ; 
 + 
 + if ( this . field _ 148282 _ b . func _ 151463 _ i ( ) ! = 0 ) 
 + { 
 + for ( KeyBinding keybinding : GuiKeyBindingList . this . field _ 148189 _ l . field _ 71474 _ y . field _ 74324 _ K ) 
 + { 
 + - if ( keybinding ! = this . field _ 148282 _ b & & keybinding . func _ 151463 _ i ( ) = = this . field _ 148282 _ b . func _ 151463 _ i ( ) ) 
 + + if ( keybinding ! = this . field _ 148282 _ b & & keybinding . conflicts ( this . field _ 148282 _ b ) ) 
 + { 
 + flag1 = true ; 
 + break ; 
 + @ @ - 163 , 6 + 163 , 7 @ @ 
 + } 
 + else if ( this . field _ 148281 _ e . func _ 146116 _ c ( GuiKeyBindingList . this . field _ 148189 _ l , p _ 148278 _ 2 _ , p _ 148278 _ 3 _ ) ) 
 + { 
 + + this . field _ 148282 _ b . setKeyModifier ( this . field _ 148282 _ b . getKeyModifierDefault ( ) ) ; 
 + GuiKeyBindingList . this . field _ 148189 _ l . field _ 71474 _ y . func _ 151440 _ a ( this . field _ 148282 _ b , this . field _ 148282 _ b . func _ 151469 _ h ( ) ) ; 
 + KeyBinding . func _ 74508 _ b ( ) ; 
 + return true ; 
 diff - - git a / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch b / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch 
 index 5a85b1f . . a62941d 100644 
 - - - a / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / settings / GameSettings . java . patch 
 @ @ - 1 , 6 + 1 , 30 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / client / settings / GameSettings . java 
 + + + . . / src - work / minecraft / net / minecraft / client / settings / GameSettings . java 
 - @ @ - 887 , 6 + 887 , 7 @ @ 
 + @ @ - 147 , 6 + 147 , 7 @ @ 
 + 
 + public GameSettings ( Minecraft p _ i46326 _ 1 _ , File p _ i46326 _ 2 _ ) 
 + { 
 + + setForgeKeybindProperties ( ) ; 
 + this . field _ 74324 _ K = ( KeyBinding [ ] ) ArrayUtils . addAll ( new KeyBinding [ ] { this . field _ 74312 _ F , this . field _ 74313 _ G , this . field _ 74351 _ w , this . field _ 74370 _ x , this . field _ 74368 _ y , this . field _ 74366 _ z , this . field _ 74314 _ A , this . field _ 74311 _ E , this . field _ 151444 _ V , this . field _ 74316 _ C , this . field _ 151445 _ Q , this . field _ 74310 _ D , this . field _ 74321 _ H , this . field _ 74322 _ I , this . field _ 74323 _ J , this . field _ 151447 _ Z , this . field _ 151457 _ aa , this . field _ 151458 _ ab , this . field _ 152395 _ am , this . field _ 178883 _ an , this . field _ 186718 _ X } , this . field _ 151456 _ ac ) ; 
 + this . field _ 74318 _ M = EnumDifficulty . NORMAL ; 
 + this . field _ 74332 _ R = " " ; 
 + @ @ - 171 , 6 + 172 , 7 @ @ 
 + 
 + public GameSettings ( ) 
 + { 
 + + setForgeKeybindProperties ( ) ; 
 + this . field _ 74324 _ K = ( KeyBinding [ ] ) ArrayUtils . addAll ( new KeyBinding [ ] { this . field _ 74312 _ F , this . field _ 74313 _ G , this . field _ 74351 _ w , this . field _ 74370 _ x , this . field _ 74368 _ y , this . field _ 74366 _ z , this . field _ 74314 _ A , this . field _ 74311 _ E , this . field _ 151444 _ V , this . field _ 74316 _ C , this . field _ 151445 _ Q , this . field _ 74310 _ D , this . field _ 74321 _ H , this . field _ 74322 _ I , this . field _ 74323 _ J , this . field _ 151447 _ Z , this . field _ 151457 _ aa , this . field _ 151458 _ ab , this . field _ 152395 _ am , this . field _ 178883 _ an , this . field _ 186718 _ X } , this . field _ 151456 _ ac ) ; 
 + this . field _ 74318 _ M = EnumDifficulty . NORMAL ; 
 + this . field _ 74332 _ R = " " ; 
 + @ @ - 846 , 6 + 848 , 7 @ @ 
 + if ( astring [ 0 ] . equals ( " key _ " + keybinding . func _ 151464 _ g ( ) ) ) 
 + { 
 + keybinding . func _ 151462 _ b ( Integer . parseInt ( astring [ 1 ] ) ) ; 
 + + if ( astring . length = = 3 ) keybinding . setKeyModifier ( net . minecraftforge . client . settings . KeyModifier . valueOf ( astring [ 2 ] ) ) ; 
 + } 
 + } 
 + 
 + @ @ - 887 , 6 + 890 , 7 @ @ 
 
 public void func _ 74303 _ b ( ) 
 { 
 @ @ - 8 , 3 + 32 , 39 @ @ 
 try 
 { 
 PrintWriter printwriter = new PrintWriter ( new FileWriter ( this . field _ 74354 _ ai ) ) ; 
 + @ @ - 955 , 7 + 959 , 8 @ @ 
 + 
 + for ( KeyBinding keybinding : this . field _ 74324 _ K ) 
 + { 
 + - printwriter . println ( " key _ " + keybinding . func _ 151464 _ g ( ) + " : " + keybinding . func _ 151463 _ i ( ) ) ; 
 + + String keyString = " key _ " + keybinding . func _ 151464 _ g ( ) + " : " + keybinding . func _ 151463 _ i ( ) ; 
 + + printwriter . println ( keybinding . getKeyModifier ( ) ! = net . minecraftforge . client . settings . KeyModifier . NONE ? keyString + " : " + keybinding . getKeyModifier ( ) : keyString ) ; 
 + } 
 + 
 + for ( SoundCategory soundcategory : SoundCategory . values ( ) ) 
 + @ @ - 1184 , 4 + 1189 , 25 @ @ 
 + return p _ 148264 _ 1 _ ; 
 + } 
 + } 
 + + 
 + + / * * * * * * * Forge Start * * * * * * * * * * * / 
 + + private void setForgeKeybindProperties ( ) { 
 + + net . minecraftforge . client . settings . KeyConflictContext inGame = net . minecraftforge . client . settings . KeyConflictContext . IN _ GAME ; 
 + + field _ 74351 _ w . setKeyConflictContext ( inGame ) ; 
 + + field _ 74370 _ x . setKeyConflictContext ( inGame ) ; 
 + + field _ 74368 _ y . setKeyConflictContext ( inGame ) ; 
 + + field _ 74366 _ z . setKeyConflictContext ( inGame ) ; 
 + + field _ 74314 _ A . setKeyConflictContext ( inGame ) ; 
 + + field _ 74311 _ E . setKeyConflictContext ( inGame ) ; 
 + + field _ 151444 _ V . setKeyConflictContext ( inGame ) ; 
 + + field _ 74312 _ F . setKeyConflictContext ( inGame ) ; 
 + + field _ 74322 _ I . setKeyConflictContext ( inGame ) ; 
 + + field _ 74310 _ D . setKeyConflictContext ( inGame ) ; 
 + + field _ 74321 _ H . setKeyConflictContext ( inGame ) ; 
 + + field _ 74323 _ J . setKeyConflictContext ( inGame ) ; 
 + + field _ 151457 _ aa . setKeyConflictContext ( inGame ) ; 
 + + field _ 151458 _ ab . setKeyConflictContext ( inGame ) ; 
 + + field _ 186718 _ X . setKeyConflictContext ( inGame ) ; 
 + + } 
 + + / * * * * * * * Forge End * * * * * * * * * * * / 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch b / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch 
 new file mode 100644 
 index 0000000 . . 4f61d2e 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / settings / KeyBinding . java . patch 
 @ @ - 0 , 0 + 1 , 155 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / settings / KeyBinding . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / settings / KeyBinding . java 
 + @ @ - 14 , 7 + 14 , 7 @ @ 
 + public class KeyBinding implements Comparable < KeyBinding > 
 + { 
 + private static final List < KeyBinding > field _ 74516 _ a = Lists . < KeyBinding > newArrayList ( ) ; 
 + - private static final IntHashMap < KeyBinding > field _ 74514 _ b = new IntHashMap ( ) ; 
 + + private static final net . minecraftforge . client . settings . KeyBindingMap field _ 74514 _ b = new net . minecraftforge . client . settings . KeyBindingMap ( ) ; 
 + private static final Set < String > field _ 151473 _ c = Sets . < String > newHashSet ( ) ; 
 + private final String field _ 74515 _ c ; 
 + private final int field _ 151472 _ e ; 
 + @ @ - 27 , 7 + 27 , 7 @ @ 
 + { 
 + if ( p _ 74507 _ 0 _ ! = 0 ) 
 + { 
 + - KeyBinding keybinding = ( KeyBinding ) field _ 74514 _ b . func _ 76041 _ a ( p _ 74507 _ 0 _ ) ; 
 + + KeyBinding keybinding = ( KeyBinding ) field _ 74514 _ b . lookup ( p _ 74507 _ 0 _ ) ; 
 + 
 + if ( keybinding ! = null ) 
 + { 
 + @ @ - 40 , 7 + 40 , 7 @ @ 
 + { 
 + if ( p _ 74510 _ 0 _ ! = 0 ) 
 + { 
 + - KeyBinding keybinding = ( KeyBinding ) field _ 74514 _ b . func _ 76041 _ a ( p _ 74510 _ 0 _ ) ; 
 + + KeyBinding keybinding = ( KeyBinding ) field _ 74514 _ b . lookup ( p _ 74510 _ 0 _ ) ; 
 + 
 + if ( keybinding ! = null ) 
 + { 
 + @ @ - 74 , 11 + 74 , 11 @ @ 
 + 
 + public static void func _ 74508 _ b ( ) 
 + { 
 + - field _ 74514 _ b . func _ 76046 _ c ( ) ; 
 + + field _ 74514 _ b . clearMap ( ) ; 
 + 
 + for ( KeyBinding keybinding : field _ 74516 _ a ) 
 + { 
 + - field _ 74514 _ b . func _ 76038 _ a ( keybinding . field _ 74512 _ d , keybinding ) ; 
 + + field _ 74514 _ b . addKey ( keybinding . field _ 74512 _ d , keybinding ) ; 
 + } 
 + } 
 + 
 + @ @ - 94 , 7 + 94 , 7 @ @ 
 + this . field _ 151472 _ e = p _ i45001 _ 2 _ ; 
 + this . field _ 151471 _ f = p _ i45001 _ 3 _ ; 
 + field _ 74516 _ a . add ( this ) ; 
 + - field _ 74514 _ b . func _ 76038 _ a ( p _ i45001 _ 2 _ , this ) ; 
 + + field _ 74514 _ b . addKey ( p _ i45001 _ 2 _ , this ) ; 
 + field _ 151473 _ c . add ( p _ i45001 _ 3 _ ) ; 
 + } 
 + 
 + @ @ - 158 , 4 + 158 , 102 @ @ 
 + 
 + return i ; 
 + } 
 + + 
 + + / * * * * * * * * * * * * * * * * * * Forge Start * * * * * * * * * * * * * * * * * * * * * * * * * * * * * / 
 + + private net . minecraftforge . client . settings . KeyModifier keyModifierDefault = net . minecraftforge . client . settings . KeyModifier . NONE ; 
 + + private net . minecraftforge . client . settings . KeyModifier keyModifier = net . minecraftforge . client . settings . KeyModifier . NONE ; 
 + + private net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext = net . minecraftforge . client . settings . KeyConflictContext . UNIVERSAL ; 
 + + private boolean allowsKeyModifiers = false ; 
 + + 
 + + / * * 
 + + * Convenience constructor for creating KeyBindings with keyConflictContext set . 
 + + * / 
 + + public KeyBinding ( String description , net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext , int keyCode , String category ) 
 + + { 
 + + this ( description , keyConflictContext , net . minecraftforge . client . settings . KeyModifier . NONE , keyCode , category ) ; 
 + + } 
 + + 
 + + / * * 
 + + * Convenience constructor for creating KeyBindings with keyConflictContext and keyModifier set . 
 + + * / 
 + + public KeyBinding ( String description , net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext , net . minecraftforge . client . settings . KeyModifier keyModifier , int keyCode , String category ) 
 + + { 
 + + this . field _ 74515 _ c = description ; 
 + + this . field _ 74512 _ d = keyCode ; 
 + + this . field _ 151472 _ e = keyCode ; 
 + + this . field _ 151471 _ f = category ; 
 + + this . keyConflictContext = keyConflictContext ; 
 + + this . keyModifier = keyModifier ; 
 + + this . keyModifierDefault = keyModifier ; 
 + + if ( keyModifier ! = net . minecraftforge . client . settings . KeyModifier . NONE ) 
 + + setAllowsKeyModifiers ( ) ; 
 + + field _ 74516 _ a . add ( this ) ; 
 + + field _ 74514 _ b . addKey ( keyCode , this ) ; 
 + + field _ 151473 _ c . add ( category ) ; 
 + + } 
 + + 
 + + / * * 
 + + * Call this method to let Forge know that your KeyBinding and code can handle players setting modifiers . 
 + + * Handling modifiers is made easy by using { @ link KeyBinding # isActiveAndMatches ( int ) } or { @ link KeyBinding # isPressed ( ) } 
 + + * Vanilla code does not handle modifiers , so vanilla keyBinds do not have this set . 
 + + * / 
 + + public void setAllowsKeyModifiers ( ) 
 + + { 
 + + this . allowsKeyModifiers = true ; 
 + + } 
 + + 
 + + / * * 
 + + * Checks that the key conflict context and modifier are active , and that the keyCode matches this binding . 
 + + * / 
 + + public boolean isActiveAndMatches ( int keyCode ) 
 + + { 
 + + return keyCode = = this . func _ 151463 _ i ( ) & & getKeyConflictContext ( ) . isActive ( ) & & getKeyModifier ( ) . isActive ( ) ; 
 + + } 
 + + 
 + + public void setKeyConflictContext ( net . minecraftforge . client . settings . IKeyConflictContext keyConflictContext ) 
 + + { 
 + + this . keyConflictContext = keyConflictContext ; 
 + + } 
 + + 
 + + public net . minecraftforge . client . settings . IKeyConflictContext getKeyConflictContext ( ) 
 + + { 
 + + return keyConflictContext ; 
 + + } 
 + + 
 + + public net . minecraftforge . client . settings . KeyModifier getKeyModifierDefault ( ) 
 + + { 
 + + return keyModifierDefault ; 
 + + } 
 + + 
 + + public net . minecraftforge . client . settings . KeyModifier getKeyModifier ( ) 
 + + { 
 + + if ( allowsKeyModifiers ) 
 + + { 
 + + return keyModifier ; 
 + + } 
 + + else 
 + + { 
 + + return net . minecraftforge . client . settings . KeyModifier . NONE ; 
 + + } 
 + + } 
 + + 
 + + public void setKeyModifier ( net . minecraftforge . client . settings . KeyModifier keyModifier ) 
 + + { 
 + + field _ 74514 _ b . removeKey ( this ) ; 
 + + this . keyModifier = keyModifier ; 
 + + field _ 74514 _ b . addKey ( field _ 74512 _ d , this ) ; 
 + + } 
 + + 
 + + public boolean conflicts ( KeyBinding other ) 
 + + { 
 + + if ( getKeyConflictContext ( ) . conflicts ( other . getKeyConflictContext ( ) ) | | other . getKeyConflictContext ( ) . conflicts ( getKeyConflictContext ( ) ) ) 
 + + { 
 + + if ( ! allowsKeyModifiers | | ! other . allowsKeyModifiers | | getKeyModifier ( ) = = other . getKeyModifier ( ) ) 
 + + { 
 + + return func _ 151463 _ i ( ) = = other . func _ 151463 _ i ( ) ; 
 + + } 
 + + } 
 + + return false ; 
 + + } 
 + + / * * * * * * * * * * * * * * * * * * Forge End * * * * * * * * * * * * * * * * * * * * * * * * * * * * * / 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / client / settings / IKeyConflictContext . java b / src / main / java / net / minecraftforge / client / settings / IKeyConflictContext . java 
 new file mode 100644 
 index 0000000 . . 0029721 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / settings / IKeyConflictContext . java 
 @ @ - 0 , 0 + 1 , 20 @ @ 
 + package net . minecraftforge . client . settings ; 
 + 
 + import net . minecraft . client . settings . KeyBinding ; 
 + 
 + / * * 
 + * Defines the context that a { @ link KeyBinding } is used . 
 + * Key conflicts occur when a { @ link KeyBinding } has the same { @ link IKeyConflictContext } and has conflicting modifiers and keyCodes . 
 + * / 
 + public interface IKeyConflictContext { 
 + / * * 
 + * @ return true if conditions are met to activate { @ link KeyBinding } s with this context 
 + * / 
 + boolean isActive ( ) ; 
 + 
 + / * * 
 + * @ return true if the other context can have { @ link KeyBinding } conflicts with this one . 
 + * This will be called on both contexts to check for conflicts . 
 + * / 
 + boolean conflicts ( IKeyConflictContext other ) ; 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java b / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java 
 new file mode 100644 
 index 0000000 . . 729893e 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / settings / KeyBindingMap . java 
 @ @ - 0 , 0 + 1 , 74 @ @ 
 + package net . minecraftforge . client . settings ; 
 + 
 + import net . minecraft . client . settings . KeyBinding ; 
 + import net . minecraft . util . IntHashMap ; 
 + 
 + import java . util . ArrayList ; 
 + import java . util . Collection ; 
 + import java . util . EnumMap ; 
 + 
 + public class KeyBindingMap 
 + { 
 + private static final EnumMap < KeyModifier , IntHashMap < Collection < KeyBinding > > > map = new java . util . EnumMap < KeyModifier , IntHashMap < Collection < KeyBinding > > > ( KeyModifier . class ) ; 
 + static 
 + { 
 + for ( KeyModifier modifier : KeyModifier . values ( ) ) 
 + { 
 + map . put ( modifier , new IntHashMap < Collection < KeyBinding > > ( ) ) ; 
 + } 
 + } 
 + 
 + public KeyBinding lookup ( int keyCode ) 
 + { 
 + KeyModifier activeModifier = KeyModifier . getActiveModifier ( ) ; 
 + Collection < KeyBinding > bindings = map . get ( activeModifier ) . lookup ( keyCode ) ; 
 + if ( bindings ! = null ) 
 + { 
 + for ( KeyBinding binding : bindings ) 
 + { 
 + if ( binding . isActiveAndMatches ( keyCode ) ) 
 + { 
 + return binding ; 
 + } 
 + } 
 + } 
 + return null ; 
 + } 
 + 
 + public void addKey ( int keyCode , KeyBinding keyBinding ) 
 + { 
 + KeyModifier keyModifier = keyBinding . getKeyModifier ( ) ; 
 + IntHashMap < Collection < KeyBinding > > bindingsMap = map . get ( keyModifier ) ; 
 + Collection < KeyBinding > bindingsForKey = bindingsMap . lookup ( keyCode ) ; 
 + if ( bindingsForKey = = null ) 
 + { 
 + bindingsForKey = new ArrayList < KeyBinding > ( ) ; 
 + bindingsMap . addKey ( keyCode , bindingsForKey ) ; 
 + } 
 + bindingsForKey . add ( keyBinding ) ; 
 + } 
 + 
 + public void removeKey ( KeyBinding keyBinding ) 
 + { 
 + KeyModifier keyModifier = keyBinding . getKeyModifier ( ) ; 
 + int keyCode = keyBinding . getKeyCode ( ) ; 
 + IntHashMap < Collection < KeyBinding > > bindingsMap = map . get ( keyModifier ) ; 
 + Collection < KeyBinding > bindingsForKey = bindingsMap . lookup ( keyCode ) ; 
 + if ( bindingsForKey ! = null ) 
 + { 
 + bindingsForKey . remove ( keyBinding ) ; 
 + if ( bindingsForKey . isEmpty ( ) ) 
 + { 
 + bindingsMap . removeObject ( keyCode ) ; 
 + } 
 + } 
 + } 
 + 
 + public void clearMap ( ) 
 + { 
 + for ( IntHashMap < Collection < KeyBinding > > bindings : map . values ( ) ) 
 + { 
 + bindings . clearMap ( ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyConflictContext . java b / src / main / java / net / minecraftforge / client / settings / KeyConflictContext . java 
 new file mode 100644 
 index 0000000 . . 964dadd 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / settings / KeyConflictContext . java 
 @ @ - 0 , 0 + 1 , 59 @ @ 
 + package net . minecraftforge . client . settings ; 
 + 
 + import net . minecraft . client . Minecraft ; 
 + import net . minecraft . client . gui . GuiScreen ; 
 + 
 + public enum KeyConflictContext implements IKeyConflictContext 
 + { 
 + / * * 
 + * Universal key bindings are used in every context and will conflict with any other context . 
 + * Key Bindings are universal by default . 
 + * / 
 + UNIVERSAL { 
 + @ Override 
 + public boolean isActive ( ) 
 + { 
 + return true ; 
 + } 
 + 
 + @ Override 
 + public boolean conflicts ( IKeyConflictContext other ) 
 + { 
 + return true ; 
 + } 
 + } , 
 + 
 + / * * 
 + * Gui key bindings are only used when a { @ link GuiScreen } is open . 
 + * / 
 + GUI { 
 + @ Override 
 + public boolean isActive ( ) 
 + { 
 + return Minecraft . getMinecraft ( ) . currentScreen ! = null ; 
 + } 
 + 
 + @ Override 
 + public boolean conflicts ( IKeyConflictContext other ) 
 + { 
 + return this = = other ; 
 + } 
 + } , 
 + 
 + / * * 
 + * In - game key bindings are only used when a { @ link GuiScreen } is not open . 
 + * / 
 + IN _ GAME { 
 + @ Override 
 + public boolean isActive ( ) 
 + { 
 + return ! GUI . isActive ( ) ; 
 + } 
 + 
 + @ Override 
 + public boolean conflicts ( IKeyConflictContext other ) 
 + { 
 + return this = = other ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / client / settings / KeyModifier . java b / src / main / java / net / minecraftforge / client / settings / KeyModifier . java 
 new file mode 100644 
 index 0000000 . . 6eb699f 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / settings / KeyModifier . java 
 @ @ - 0 , 0 + 1 , 124 @ @ 
 + package net . minecraftforge . client . settings ; 
 + 
 + import net . minecraft . client . Minecraft ; 
 + import net . minecraft . client . gui . GuiScreen ; 
 + import net . minecraft . client . resources . I18n ; 
 + import org . lwjgl . input . Keyboard ; 
 + 
 + public enum KeyModifier { 
 + CONTROL { 
 + @ Override 
 + protected boolean matches ( int keyCode ) 
 + { 
 + if ( Minecraft . isRunningOnMac ) 
 + { 
 + return keyCode = = Keyboard . KEY _ LMETA | | keyCode = = Keyboard . KEY _ RMETA ; 
 + } 
 + else 
 + { 
 + return keyCode = = Keyboard . KEY _ LCONTROL | | keyCode = = Keyboard . KEY _ RCONTROL ; 
 + } 
 + } 
 + 
 + @ Override 
 + public boolean isActive ( ) 
 + { 
 + return GuiScreen . isCtrlKeyDown ( ) ; 
 + } 
 + 
 + @ Override 
 + public String getLocalizedComboName ( String keyName ) 
 + { 
 + return I18n . format ( " forge . controlsgui . control " , keyName ) ; 
 + } 
 + } , 
 + SHIFT { 
 + @ Override 
 + protected boolean matches ( int keyCode ) 
 + { 
 + return keyCode = = Keyboard . KEY _ LSHIFT | | keyCode = = Keyboard . KEY _ RSHIFT ; 
 + } 
 + 
 + @ Override 
 + public boolean isActive ( ) 
 + { 
 + return GuiScreen . isShiftKeyDown ( ) ; 
 + } 
 + 
 + @ Override 
 + public String getLocalizedComboName ( String keyName ) 
 + { 
 + return I18n . format ( " forge . controlsgui . shift " , keyName ) ; 
 + } 
 + } , 
 + ALT { 
 + @ Override 
 + protected boolean matches ( int keyCode ) 
 + { 
 + return keyCode = = Keyboard . KEY _ LMENU | | keyCode = = Keyboard . KEY _ RMENU ; 
 + } 
 + 
 + @ Override 
 + public boolean isActive ( ) 
 + { 
 + return GuiScreen . isAltKeyDown ( ) ; 
 + } 
 + 
 + @ Override 
 + public String getLocalizedComboName ( String keyName ) 
 + { 
 + return I18n . format ( " forge . controlsgui . alt " , keyName ) ; 
 + } 
 + } , 
 + NONE { 
 + @ Override 
 + protected boolean matches ( int keyCode ) 
 + { 
 + return true ; 
 + } 
 + 
 + @ Override 
 + public boolean isActive ( ) 
 + { 
 + return ! SHIFT . isActive ( ) & & ! CONTROL . isActive ( ) & & ! ALT . isActive ( ) ; 
 + } 
 + 
 + @ Override 
 + public String getLocalizedComboName ( String keyName ) 
 + { 
 + return keyName ; 
 + } 
 + } ; 
 + 
 + public static final KeyModifier [ ] MODIFIER _ VALUES = { SHIFT , CONTROL , ALT } ; 
 + 
 + public static KeyModifier getActiveModifier ( ) 
 + { 
 + for ( KeyModifier keyModifier : MODIFIER _ VALUES ) 
 + { 
 + if ( keyModifier . isActive ( ) ) 
 + { 
 + return keyModifier ; 
 + } 
 + } 
 + return NONE ; 
 + } 
 + 
 + public static boolean isKeyCodeModifier ( int keyCode ) 
 + { 
 + for ( KeyModifier keyModifier : MODIFIER _ VALUES ) 
 + { 
 + if ( keyModifier . matches ( keyCode ) ) 
 + { 
 + return true ; 
 + } 
 + } 
 + return false ; 
 + } 
 + 
 + protected abstract boolean matches ( int keyCode ) ; 
 + 
 + public abstract boolean isActive ( ) ; 
 + 
 + public abstract String getLocalizedComboName ( String keyName ) ; 
 + } 
 diff - - git a / src / main / resources / assets / forge / lang / en _ US . lang b / src / main / resources / assets / forge / lang / en _ US . lang 
 index 507a84a . . 4155a94 100644 
 - - - a / src / main / resources / assets / forge / lang / en _ US . lang 
 + + + b / src / main / resources / assets / forge / lang / en _ US . lang 
 @ @ - 143 , 6 + 143 , 10 @ @ fml . configgui . tooltip . undoChanges = Undo Changes 
 fml . configgui . tooltip . default = [ default : % s ] 
 fml . configgui . tooltip . defaultNumeric = [ range : % s ~ % s , default : % s ] 
 
 + forge . controlsgui . shift = SHIFT + % s 
 + forge . controlsgui . control = CTRL + % s 
 + forge . controlsgui . alt = ALT + % s 
 + 
 fml . menu . mods = Mods 
 fml . menu . mods . normal = Normal 
 fml . menu . mods . search = Search :

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / Minecraft . java . patch b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 index b69cba7 . . b1c023d 100644 
 - - - a / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / Minecraft . java . patch 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / client / Minecraft . java 
 + + + . . / src - work / minecraft / net / minecraft / client / Minecraft . java 
 - @ @ - 134 , 6 + 134 , 14 @ @ 
 + @ @ - 135 , 6 + 135 , 14 @ @ 
 import net . minecraft . world . storage . ISaveFormat ; 
 import net . minecraft . world . storage . ISaveHandler ; 
 import net . minecraft . world . storage . WorldInfo ; 
 @ @ - 15 , 7 + 15 , 7 @ @ 
 import org . apache . logging . log4j . LogManager ; 
 import org . apache . logging . log4j . Logger ; 
 import org . lwjgl . LWJGLException ; 
 - @ @ - 245 , 7 + 253 , 7 @ @ 
 + @ @ - 246 , 7 + 254 , 7 @ @ 
 this . func _ 71389 _ H ( ) ; 
 this . field _ 71449 _ j = p _ i1014 _ 1 _ ; 
 field _ 147123 _ G . info ( " Setting user : " + p _ i1014 _ 1 _ . func _ 111285 _ a ( ) ) ; 
 @ @ - 24 , 7 + 24 , 7 @ @ 
 this . field _ 71459 _ aj = p _ i1014 _ 5 _ ; 
 this . field _ 71443 _ c = p _ i1014 _ 2 _ ; 
 this . field _ 71440 _ d = p _ i1014 _ 3 _ ; 
 - @ @ - 419 , 7 + 427 , 7 @ @ 
 + @ @ - 417 , 7 + 425 , 7 @ @ 
 
 try 
 { 
 @ @ - 33 , 7 + 33 , 7 @ @ 
 } 
 catch ( LWJGLException lwjglexception ) 
 { 
 - @ @ - 518 , 7 + 526 , 7 @ @ 
 + @ @ - 516 , 7 + 524 , 7 @ @ 
 this . field _ 71452 _ i = new EffectRenderer ( this . field _ 71441 _ e , this . field _ 71446 _ o ) ; 
 FMLClientHandler . instance ( ) . finishMinecraftLoading ( ) ; 
 this . func _ 71361 _ d ( " Post startup " ) ; 
 @ @ - 42 , 7 + 42 , 7 @ @ 
 
 if ( this . field _ 71475 _ ae ! = null ) 
 { 
 - @ @ - 701 , 11 + 709 , 6 @ @ 
 + @ @ - 699 , 11 + 707 , 6 @ @ 
 
 public void func _ 147108 _ a ( GuiScreen p _ 147108 _ 1 _ ) 
 { 
 @ @ - 54 , 7 + 54 , 7 @ @ 
 if ( p _ 147108 _ 1 _ = = null & & this . field _ 71441 _ e = = null ) 
 { 
 p _ 147108 _ 1 _ = new GuiMainMenu ( ) ; 
 - @ @ - 715 , 6 + 718 , 17 @ @ 
 + @ @ - 713 , 6 + 716 , 17 @ @ 
 p _ 147108 _ 1 _ = new GuiGameOver ( ) ; 
 } 
 
 @ @ - 72 , 7 + 72 , 7 @ @ 
 if ( p _ 147108 _ 1 _ instanceof GuiMainMenu ) 
 { 
 this . field _ 71474 _ y . field _ 74330 _ P = false ; 
 - @ @ - 1297 , 7 + 1311 , 7 @ @ 
 + @ @ - 1295 , 7 + 1309 , 7 @ @ 
 
 if ( this . field _ 71439 _ g . func _ 82246 _ f ( i , j , k ) ) 
 { 
 @ @ - 81 , 7 + 81 , 7 @ @ 
 this . field _ 71439 _ g . func _ 71038 _ i ( ) ; 
 } 
 } 
 - @ @ - 1378 , 11 + 1392 , 12 @ @ 
 + @ @ - 1376 , 11 + 1390 , 12 @ @ 
 int j = this . field _ 71476 _ x . field _ 72312 _ c ; 
 int k = this . field _ 71476 _ x . field _ 72309 _ d ; 
 
 @ @ - 96 , 7 + 96 , 7 @ @ 
 { 
 flag = false ; 
 this . field _ 71439 _ g . func _ 71038 _ i ( ) ; 
 - @ @ - 1409 , 7 + 1424 , 8 @ @ 
 + @ @ - 1407 , 7 + 1422 , 8 @ @ 
 { 
 ItemStack itemstack1 = this . field _ 71439 _ g . field _ 71071 _ by . func _ 70448 _ g ( ) ; 
 
 @ @ - 106 , 7 + 106 , 7 @ @ 
 { 
 this . field _ 71460 _ t . field _ 78516 _ c . func _ 78445 _ c ( ) ; 
 } 
 - @ @ - 1608 , 6 + 1624 , 8 @ @ 
 + @ @ - 1606 , 6 + 1622 , 8 @ @ 
 
 while ( Mouse . next ( ) ) 
 { 
 @ @ - 115 , 7 + 115 , 7 @ @ 
 i = Mouse . getEventButton ( ) ; 
 
 if ( field _ 142025 _ a & & i = = 0 & & ( Keyboard . isKeyDown ( 29 ) | | Keyboard . isKeyDown ( 157 ) ) ) 
 - @ @ - 2075 , 6 + 2093 , 11 @ @ 
 + @ @ - 2079 , 6 + 2097 , 11 @ @ 
 
 public void func _ 71353 _ a ( WorldClient p _ 71353 _ 1 _ , String p _ 71353 _ 2 _ ) 
 { 
 @ @ - 127 , 7 + 127 , 7 @ @ 
 if ( p _ 71353 _ 1 _ = = null ) 
 { 
 NetHandlerPlayClient nethandlerplayclient = this . func _ 147114 _ u ( ) ; 
 - @ @ - 2087 , 6 + 2110 , 18 @ @ 
 + @ @ - 2091 , 6 + 2114 , 18 @ @ 
 if ( this . field _ 71437 _ Z ! = null ) 
 { 
 this . field _ 71437 _ Z . func _ 71263 _ m ( ) ; 
 @ @ - 146 , 7 + 146 , 7 @ @ 
 } 
 
 this . field _ 71437 _ Z = null ; 
 - @ @ - 2235 , 113 + 2270 , 10 @ @ 
 + @ @ - 2239 , 113 + 2274 , 10 @ @ 
 if ( this . field _ 71476 _ x ! = null ) 
 { 
 boolean flag = this . field _ 71439 _ g . field _ 71075 _ bZ . field _ 75098 _ d ; 
 @ @ - 262 , 7 + 262 , 7 @ @ 
 if ( flag ) 
 { 
 j = this . field _ 71439 _ g . field _ 71069 _ bz . field _ 75151 _ b . size ( ) - 9 + this . field _ 71439 _ g . field _ 71071 _ by . field _ 70461 _ c ; 
 - @ @ - 2508 , 8 + 2440 , 15 @ @ 
 + @ @ - 2512 , 8 + 2444 , 15 @ @ 
 p _ 70001 _ 1 _ . func _ 76472 _ a ( " gl _ max _ texture _ size " , Integer . valueOf ( func _ 71369 _ N ( ) ) ) ; 
 } 
 
 @ @ - 278 , 7 + 278 , 7 @ @ 
 for ( int i = 16384 ; i > 0 ; i > > = 1 ) 
 { 
 GL11 . glTexImage2D ( GL11 . GL _ PROXY _ TEXTURE _ 2D , 0 , GL11 . GL _ RGBA , i , i , 0 , GL11 . GL _ RGBA , GL11 . GL _ UNSIGNED _ BYTE , ( ByteBuffer ) null ) ; 
 - @ @ - 2517 , 6 + 2456 , 7 @ @ 
 + @ @ - 2521 , 6 + 2460 , 7 @ @ 
 
 if ( j ! = 0 ) 
 { 
 diff - - git a / patches / minecraft / net / minecraft / client / shader / Framebuffer . java . patch b / patches / minecraft / net / minecraft / client / shader / Framebuffer . java . patch 
 index a17617b . . bf256e0 100644 
 - - - a / patches / minecraft / net / minecraft / client / shader / Framebuffer . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / shader / Framebuffer . java . patch 
 @ @ - 1 , 21 + 1 , 29 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / client / shader / Framebuffer . java 
 + + + . . / src - work / minecraft / net / minecraft / client / shader / Framebuffer . java 
 - @ @ - 6 , 6 + 6 , 7 @ @ 
 + @ @ - 6 , 6 + 6 , 9 @ @ 
 import net . minecraft . client . renderer . OpenGlHelper ; 
 import net . minecraft . client . renderer . Tessellator ; 
 import net . minecraft . client . renderer . texture . TextureUtil ; 
 + import net . minecraftforge . client . MinecraftForgeClient ; 
 + + import static org . lwjgl . opengl . EXTPackedDepthStencil . * ; 
 + + import static org . lwjgl . opengl . EXTFramebufferObject . * ; 
 import org . lwjgl . opengl . EXTFramebufferObject ; 
 import org . lwjgl . opengl . GL11 ; 
 
 - @ @ - 120 , 6 + 121 , 11 @ @ 
 + @ @ - 118 , 8 + 121 , 17 @ @ 
 + if ( this . field _ 147619 _ e ) 
 + { 
 EXTFramebufferObject . glBindRenderbufferEXT ( 36161 , this . field _ 147624 _ h ) ; 
 + + if ( MinecraftForgeClient . getStencilBits ( ) = = 0 ) 
 + + { 
 EXTFramebufferObject . glRenderbufferStorageEXT ( 36161 , 33190 , this . field _ 147622 _ a , this . field _ 147620 _ b ) ; 
 EXTFramebufferObject . glFramebufferRenderbufferEXT ( 36160 , 36096 , 36161 , this . field _ 147624 _ h ) ; 
 - + if ( MinecraftForgeClient . getStencilBits ( ) > 0 ) 
 + + } 
 + + else 
 + { 
 - + EXTFramebufferObject . glRenderbufferStorageEXT ( 36161 , EXTFramebufferObject . GL _ STENCIL _ INDEX8 _ EXT , this . field _ 147622 _ a , this . field _ 147620 _ b ) ; 
 - + EXTFramebufferObject . glFramebufferRenderbufferEXT ( 36160 , EXTFramebufferObject . GL _ STENCIL _ ATTACHMENT _ EXT , 36161 , this . field _ 147624 _ h ) ; 
 + + EXTFramebufferObject . glRenderbufferStorageEXT ( 36161 , GL _ DEPTH24 _ STENCIL8 _ EXT , this . field _ 147622 _ a , this . field _ 147620 _ b ) ; 
 + + EXTFramebufferObject . glFramebufferRenderbufferEXT ( 36160 , GL _ DEPTH _ ATTACHMENT _ EXT , GL _ RENDERBUFFER _ EXT , this . field _ 147624 _ h ) ; 
 + + EXTFramebufferObject . glFramebufferRenderbufferEXT ( 36160 , GL _ STENCIL _ ATTACHMENT _ EXT , GL _ RENDERBUFFER _ EXT , this . field _ 147624 _ h ) ; 
 + } 
 } 
 
 diff - - git a / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch b / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 index 3082905 . . fafd4c8 100644 
 - - - a / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 + + + b / patches / minecraft / net / minecraft / server / MinecraftServer . java . patch 
 @ @ - 1 , 6 + 1 , 6 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / server / MinecraftServer . java 
 + + + . . / src - work / minecraft / net / minecraft / server / MinecraftServer . java 
 - @ @ - 25 , 6 + 25 , 7 @ @ 
 + @ @ - 26 , 6 + 26 , 7 @ @ 
 import java . util . Arrays ; 
 import java . util . Collections ; 
 import java . util . Date ; 
 @ @ - 8 , 7 + 8 , 7 @ @ 
 import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . Random ; 
 - @ @ - 73 , 6 + 74 , 10 @ @ 
 + @ @ - 74 , 6 + 75 , 10 @ @ 
 import org . apache . logging . log4j . LogManager ; 
 import org . apache . logging . log4j . Logger ; 
 
 @ @ - 19 , 7 + 19 , 7 @ @ 
 public abstract class MinecraftServer implements ICommandSender , Runnable , IPlayerUsage 
 { 
 private static final Logger field _ 147145 _ h = LogManager . getLogger ( ) ; 
 - @ @ - 89 , 7 + 94 , 7 @ @ 
 + @ @ - 90 , 7 + 95 , 7 @ @ 
 @ SideOnly ( Side . SERVER ) 
 private String field _ 71320 _ r ; 
 private int field _ 71319 _ s = - 1 ; 
 @ @ - 28 , 7 + 28 , 7 @ @ 
 private ServerConfigurationManager field _ 71318 _ t ; 
 private boolean field _ 71317 _ u = true ; 
 private boolean field _ 71316 _ v ; 
 - @ @ - 106 , 7 + 111 , 8 @ @ 
 + @ @ - 107 , 7 + 112 , 8 @ @ 
 private int field _ 71280 _ D ; 
 private int field _ 143008 _ E = 0 ; 
 public final long [ ] field _ 71311 _ j = new long [ 100 ] ; 
 @ @ - 38 , 7 + 38 , 7 @ @ 
 private KeyPair field _ 71292 _ I ; 
 private String field _ 71293 _ J ; 
 private String field _ 71294 _ K ; 
 - @ @ - 182 , 8 + 188 , 6 @ @ 
 + @ @ - 183 , 8 + 189 , 6 @ @ 
 { 
 this . func _ 71237 _ c ( p _ 71247 _ 1 _ ) ; 
 this . func _ 71192 _ d ( " menu . loadingLevel " ) ; 
 @ @ - 47 , 7 + 47 , 7 @ @ 
 ISaveHandler isavehandler = this . field _ 71310 _ m . func _ 75804 _ a ( p _ 71247 _ 1 _ , true ) ; 
 WorldInfo worldinfo = isavehandler . func _ 75757 _ d ( ) ; 
 WorldSettings worldsettings ; 
 - @ @ - 203 , 46 + 207 , 21 @ @ 
 + @ @ - 204 , 46 + 208 , 21 @ @ 
 worldsettings . func _ 77159 _ a ( ) ; 
 } 
 
 @ @ - 101 , 7 + 101 , 7 @ @ 
 this . func _ 147139 _ a ( this . func _ 147135 _ j ( ) ) ; 
 this . func _ 71222 _ d ( ) ; 
 } 
 - @ @ - 309 , 6 + 288 , 7 @ @ 
 + @ @ - 310 , 6 + 289 , 7 @ @ 
 if ( ! this . field _ 71290 _ O ) 
 { 
 WorldServer [ ] aworldserver = this . field _ 71305 _ c ; 
 @ @ - 109 , 7 + 109 , 7 @ @ 
 int i = aworldserver . length ; 
 
 for ( int j = 0 ; j < i ; + + j ) 
 - @ @ - 359 , 9 + 339 , 16 @ @ 
 + @ @ - 360 , 9 + 340 , 16 @ @ 
 for ( int i = 0 ; i < this . field _ 71305 _ c . length ; + + i ) 
 { 
 WorldServer worldserver = this . field _ 71305 _ c [ i ] ; 
 @ @ - 126 , 7 + 126 , 7 @ @ 
 if ( this . field _ 71307 _ n . func _ 76468 _ d ( ) ) 
 { 
 this . field _ 71307 _ n . func _ 76470 _ e ( ) ; 
 - @ @ - 586 , 13 + 573 , 15 @ @ 
 + @ @ - 588 , 13 + 575 , 15 @ @ 
 this . field _ 71304 _ b . func _ 76320 _ a ( " levels " ) ; 
 int i ; 
 
 @ @ - 145 , 7 + 145 , 7 @ @ 
 this . field _ 71304 _ b . func _ 76320 _ a ( worldserver . func _ 72912 _ H ( ) . func _ 76065 _ j ( ) ) ; 
 this . field _ 71304 _ b . func _ 76320 _ a ( " pools " ) ; 
 worldserver . func _ 82732 _ R ( ) . func _ 72343 _ a ( ) ; 
 - @ @ - 639 , 9 + 628 , 11 @ @ 
 + @ @ - 641 , 9 + 630 , 11 @ @ 
 this . field _ 71304 _ b . func _ 76319 _ b ( ) ; 
 } 
 
 @ @ - 158 , 7 + 158 , 7 @ @ 
 this . field _ 71304 _ b . func _ 76318 _ c ( " connection " ) ; 
 this . func _ 147137 _ ag ( ) . func _ 151269 _ c ( ) ; 
 this . field _ 71304 _ b . func _ 76318 _ c ( " players " ) ; 
 - @ @ - 685 , 7 + 676 , 13 @ @ 
 + @ @ - 688 , 7 + 679 , 13 @ @ 
 
 public WorldServer func _ 71218 _ a ( int p _ 71218 _ 1 _ ) 
 { 
 @ @ - 173 , 7 + 173 , 7 @ @ 
 } 
 
 public String func _ 71249 _ w ( ) 
 - @ @ - 944 , 6 + 941 , 7 @ @ 
 + @ @ - 947 , 6 + 944 , 7 @ @ 
 
 if ( worldserver ! = null ) 
 { 
 @ @ - 181 , 7 + 181 , 7 @ @ 
 worldserver . func _ 73041 _ k ( ) ; 
 } 
 } 
 - @ @ - 1414 , 7 + 1412 , 6 @ @ 
 + @ @ - 1417 , 7 + 1415 , 6 @ @ 
 this . field _ 147141 _ M = p _ 155759 _ 1 _ ; 
 } 

