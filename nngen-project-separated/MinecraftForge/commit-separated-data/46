BLEU SCORE: 0.02407485903547034

TEST MSG: Revive CapabilityProvider on entity revive . Madders should NOT need this , as caps are copied via NBT .
GENERATED MSG: Add PlayerEvent . StartTracking and . StopTracking & make trackedEntityIDs visible

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / Entity . java . patch b / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> index 5bd851c . . 65acef1 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / Entity . java . patch <nl> @ @ - 288 , 7 + 288 , 7 @ @ <nl> this . field _ 70170 _ p . field _ 72984 _ F . func _ 76319 _ b ( ) ; <nl> worldserver . func _ 82742 _ i ( ) ; <nl> worldserver1 . func _ 82742 _ i ( ) ; <nl> - @ @ - 2592 , 4 + 2628 , 60 @ @ <nl> + @ @ - 2592 , 4 + 2628 , 63 @ @ <nl> public double func _ 212107 _ bY ( ) { <nl> return this . field _ 211517 _ W ; <nl> } <nl> @ @ - 347 , 5 + 347 , 8 @ @ <nl> + public void onRemovedFromWorld ( ) { this . isAddedToWorld = false ; } <nl> + <nl> + @ Override <nl> - + public void revive ( ) { this . field _ 70128 _ L = false ; } <nl> + + public void revive ( ) { <nl> + + this . field _ 70128 _ L = false ; <nl> + + this . reviveCaps ( ) ; <nl> + + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / capabilities / CapabilityProvider . java b / src / main / java / net / minecraftforge / common / capabilities / CapabilityProvider . java <nl> index 62de776 . . cd72371 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / capabilities / CapabilityProvider . java <nl> + + + b / src / main / java / net / minecraftforge / common / capabilities / CapabilityProvider . java <nl> @ @ - 106 , 6 + 106 , 11 @ @ public abstract class CapabilityProvider < B extends CapabilityProvider < B > > implem <nl> disp . invalidate ( ) ; <nl> } <nl> <nl> + protected void reviveCaps ( ) <nl> + { <nl> + this . valid = true ; / / Stupid players don ' t copy the entity when transporting across worlds . <nl> + } <nl> + <nl> @ Override <nl> @ Nonnull <nl> public < T > LazyOptional < T > getCapability ( @ Nonnull Capability < T > cap , @ Nullable EnumFacing side ) <nl> diff - - git a / src / main / java / net / minecraftforge / event / AttachCapabilitiesEvent . java b / src / main / java / net / minecraftforge / event / AttachCapabilitiesEvent . java <nl> index fc83992 . . 9d25d3f 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / AttachCapabilitiesEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / AttachCapabilitiesEvent . java <nl> @ @ - 82 , 9 + 82 , 8 @ @ public class AttachCapabilitiesEvent < T > extends GenericEvent < T > <nl> return view ; <nl> } <nl> <nl> - <nl> / * * <nl> - * Adds a callback that is fired when the attacked object is invalidated . <nl> + * Adds a callback that is fired when the attached object is invalidated . <nl> * Such as a Entity / TileEntity being removed from world . <nl> * All attached providers should invalidate all of their held capability instances . <nl> * /
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / EntityTracker . java . patch b / patches / minecraft / net / minecraft / entity / EntityTracker . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 0945a9e <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityTracker . java . patch <nl> @ @ - 0 , 0 + 1 , 26 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / entity / EntityTracker . java <nl> + + + + . . / src - work / minecraft / net / minecraft / entity / EntityTracker . java <nl> + @ @ - 337 , 4 + 337 , 23 @ @ <nl> + } <nl> + } <nl> + } <nl> + + <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + + <nl> + + / / don ' t expose the EntityTrackerEntry directly so mods can ' t mess with the data in there as easily <nl> + + / * * <nl> + + * Get all players tracking the given Entity . The Entity must be part of the World that this Tracker belongs to . <nl> + + * @ param entity the Entity <nl> + + * @ return all players tracking the Entity <nl> + + * / <nl> + + public Set < net . minecraft . entity . player . EntityPlayer > getTrackingPlayers ( Entity entity ) <nl> + + { <nl> + + EntityTrackerEntry entry = ( EntityTrackerEntry ) field _ 72794 _ c . func _ 76041 _ a ( entity . func _ 145782 _ y ( ) ) ; <nl> + + if ( entry = = null ) <nl> + + return java . util . Collections . emptySet ( ) ; <nl> + + else <nl> + + return java . util . Collections . unmodifiableSet ( entry . field _ 73134 _ o ) ; <nl> + + } <nl> + + <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / EntityTrackerEntry . java . patch b / patches / minecraft / net / minecraft / entity / EntityTrackerEntry . java . patch <nl> new file mode 100644 <nl> index 0000000 . . c919489 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityTrackerEntry . java . patch <nl> @ @ - 0 , 0 + 1 , 17 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / entity / EntityTrackerEntry . java <nl> + + + + . . / src - work / minecraft / net / minecraft / entity / EntityTrackerEntry . java <nl> + @ @ - 436 , 12 + 436 , 14 @ @ <nl> + p _ 73117 _ 1 _ . field _ 71135 _ a . func _ 147359 _ a ( new S1DPacketEntityEffect ( this . field _ 73132 _ a . func _ 145782 _ y ( ) , potioneffect ) ) ; <nl> + } <nl> + } <nl> + + net . minecraftforge . event . ForgeEventFactory . onStartEntityTracking ( field _ 73132 _ a , p _ 73117 _ 1 _ ) ; <nl> + } <nl> + } <nl> + else if ( this . field _ 73134 _ o . contains ( p _ 73117 _ 1 _ ) ) <nl> + { <nl> + this . field _ 73134 _ o . remove ( p _ 73117 _ 1 _ ) ; <nl> + p _ 73117 _ 1 _ . field _ 71130 _ g . add ( Integer . valueOf ( this . field _ 73132 _ a . func _ 145782 _ y ( ) ) ) ; <nl> + + net . minecraftforge . event . ForgeEventFactory . onStopEntityTracking ( field _ 73132 _ a , p _ 73117 _ 1 _ ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> index e402c62 . . 1110d00 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 155 , 4 + 155 , 14 @ @ public class ForgeEventFactory <nl> MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> return event . result ; <nl> } <nl> + <nl> + public static void onStartEntityTracking ( Entity entity , EntityPlayer player ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . post ( new PlayerEvent . StartTracking ( player , entity ) ) ; <nl> + } <nl> + <nl> + public static void onStopEntityTracking ( Entity entity , EntityPlayer player ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . post ( new PlayerEvent . StopTracking ( player , entity ) ) ; <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / player / PlayerEvent . java b / src / main / java / net / minecraftforge / event / entity / player / PlayerEvent . java <nl> index 9feb503 . . 68c60a6 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / entity / player / PlayerEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / entity / player / PlayerEvent . java <nl> @ @ - 2 , 6 + 2 , 7 @ @ package net . minecraftforge . event . entity . player ; <nl> <nl> import cpw . mods . fml . common . eventhandler . Cancelable ; <nl> import net . minecraft . block . Block ; <nl> + import net . minecraft . entity . Entity ; <nl> import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraftforge . event . entity . living . LivingEvent ; <nl> <nl> @ @ - 92 , 4 + 93 , 42 @ @ public class PlayerEvent extends LivingEvent <nl> this . wasDeath = wasDeath ; <nl> } <nl> } <nl> + <nl> + / * * <nl> + * Fired when an Entity is started to be " tracked " by this player ( the player receives updates about this entity , e . g . motion ) . <nl> + * <nl> + * / <nl> + public static class StartTracking extends PlayerEvent { <nl> + <nl> + / * * <nl> + * The Entity now being tracked . <nl> + * / <nl> + public final Entity target ; <nl> + <nl> + public StartTracking ( EntityPlayer player , Entity target ) <nl> + { <nl> + super ( player ) ; <nl> + this . target = target ; <nl> + } <nl> + <nl> + } <nl> + <nl> + / * * <nl> + * Fired when an Entity is stopped to be " tracked " by this player ( the player no longer receives updates about this entity , e . g . motion ) . <nl> + * <nl> + * / <nl> + public static class StopTracking extends PlayerEvent { <nl> + <nl> + / * * <nl> + * The Entity no longer being tracked . <nl> + * / <nl> + public final Entity target ; <nl> + <nl> + public StopTracking ( EntityPlayer player , Entity target ) <nl> + { <nl> + super ( player ) ; <nl> + this . target = target ; <nl> + } <nl> + <nl> + } <nl> }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / Entity . java . patch b / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 index 5bd851c . . 65acef1 100644 
 - - - a / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / Entity . java . patch 
 @ @ - 288 , 7 + 288 , 7 @ @ 
 this . field _ 70170 _ p . field _ 72984 _ F . func _ 76319 _ b ( ) ; 
 worldserver . func _ 82742 _ i ( ) ; 
 worldserver1 . func _ 82742 _ i ( ) ; 
 - @ @ - 2592 , 4 + 2628 , 60 @ @ 
 + @ @ - 2592 , 4 + 2628 , 63 @ @ 
 public double func _ 212107 _ bY ( ) { 
 return this . field _ 211517 _ W ; 
 } 
 @ @ - 347 , 5 + 347 , 8 @ @ 
 + public void onRemovedFromWorld ( ) { this . isAddedToWorld = false ; } 
 + 
 + @ Override 
 - + public void revive ( ) { this . field _ 70128 _ L = false ; } 
 + + public void revive ( ) { 
 + + this . field _ 70128 _ L = false ; 
 + + this . reviveCaps ( ) ; 
 + + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / capabilities / CapabilityProvider . java b / src / main / java / net / minecraftforge / common / capabilities / CapabilityProvider . java 
 index 62de776 . . cd72371 100644 
 - - - a / src / main / java / net / minecraftforge / common / capabilities / CapabilityProvider . java 
 + + + b / src / main / java / net / minecraftforge / common / capabilities / CapabilityProvider . java 
 @ @ - 106 , 6 + 106 , 11 @ @ public abstract class CapabilityProvider < B extends CapabilityProvider < B > > implem 
 disp . invalidate ( ) ; 
 } 
 
 + protected void reviveCaps ( ) 
 + { 
 + this . valid = true ; / / Stupid players don ' t copy the entity when transporting across worlds . 
 + } 
 + 
 @ Override 
 @ Nonnull 
 public < T > LazyOptional < T > getCapability ( @ Nonnull Capability < T > cap , @ Nullable EnumFacing side ) 
 diff - - git a / src / main / java / net / minecraftforge / event / AttachCapabilitiesEvent . java b / src / main / java / net / minecraftforge / event / AttachCapabilitiesEvent . java 
 index fc83992 . . 9d25d3f 100644 
 - - - a / src / main / java / net / minecraftforge / event / AttachCapabilitiesEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / AttachCapabilitiesEvent . java 
 @ @ - 82 , 9 + 82 , 8 @ @ public class AttachCapabilitiesEvent < T > extends GenericEvent < T > 
 return view ; 
 } 
 
 - 
 / * * 
 - * Adds a callback that is fired when the attacked object is invalidated . 
 + * Adds a callback that is fired when the attached object is invalidated . 
 * Such as a Entity / TileEntity being removed from world . 
 * All attached providers should invalidate all of their held capability instances . 
 * /

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / EntityTracker . java . patch b / patches / minecraft / net / minecraft / entity / EntityTracker . java . patch 
 new file mode 100644 
 index 0000000 . . 0945a9e 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / entity / EntityTracker . java . patch 
 @ @ - 0 , 0 + 1 , 26 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / entity / EntityTracker . java 
 + + + + . . / src - work / minecraft / net / minecraft / entity / EntityTracker . java 
 + @ @ - 337 , 4 + 337 , 23 @ @ 
 + } 
 + } 
 + } 
 + + 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + + 
 + + / / don ' t expose the EntityTrackerEntry directly so mods can ' t mess with the data in there as easily 
 + + / * * 
 + + * Get all players tracking the given Entity . The Entity must be part of the World that this Tracker belongs to . 
 + + * @ param entity the Entity 
 + + * @ return all players tracking the Entity 
 + + * / 
 + + public Set < net . minecraft . entity . player . EntityPlayer > getTrackingPlayers ( Entity entity ) 
 + + { 
 + + EntityTrackerEntry entry = ( EntityTrackerEntry ) field _ 72794 _ c . func _ 76041 _ a ( entity . func _ 145782 _ y ( ) ) ; 
 + + if ( entry = = null ) 
 + + return java . util . Collections . emptySet ( ) ; 
 + + else 
 + + return java . util . Collections . unmodifiableSet ( entry . field _ 73134 _ o ) ; 
 + + } 
 + + 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / entity / EntityTrackerEntry . java . patch b / patches / minecraft / net / minecraft / entity / EntityTrackerEntry . java . patch 
 new file mode 100644 
 index 0000000 . . c919489 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / entity / EntityTrackerEntry . java . patch 
 @ @ - 0 , 0 + 1 , 17 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / entity / EntityTrackerEntry . java 
 + + + + . . / src - work / minecraft / net / minecraft / entity / EntityTrackerEntry . java 
 + @ @ - 436 , 12 + 436 , 14 @ @ 
 + p _ 73117 _ 1 _ . field _ 71135 _ a . func _ 147359 _ a ( new S1DPacketEntityEffect ( this . field _ 73132 _ a . func _ 145782 _ y ( ) , potioneffect ) ) ; 
 + } 
 + } 
 + + net . minecraftforge . event . ForgeEventFactory . onStartEntityTracking ( field _ 73132 _ a , p _ 73117 _ 1 _ ) ; 
 + } 
 + } 
 + else if ( this . field _ 73134 _ o . contains ( p _ 73117 _ 1 _ ) ) 
 + { 
 + this . field _ 73134 _ o . remove ( p _ 73117 _ 1 _ ) ; 
 + p _ 73117 _ 1 _ . field _ 71130 _ g . add ( Integer . valueOf ( this . field _ 73132 _ a . func _ 145782 _ y ( ) ) ) ; 
 + + net . minecraftforge . event . ForgeEventFactory . onStopEntityTracking ( field _ 73132 _ a , p _ 73117 _ 1 _ ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 index e402c62 . . 1110d00 100644 
 - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 155 , 4 + 155 , 14 @ @ public class ForgeEventFactory 
 MinecraftForge . EVENT _ BUS . post ( event ) ; 
 return event . result ; 
 } 
 + 
 + public static void onStartEntityTracking ( Entity entity , EntityPlayer player ) 
 + { 
 + MinecraftForge . EVENT _ BUS . post ( new PlayerEvent . StartTracking ( player , entity ) ) ; 
 + } 
 + 
 + public static void onStopEntityTracking ( Entity entity , EntityPlayer player ) 
 + { 
 + MinecraftForge . EVENT _ BUS . post ( new PlayerEvent . StopTracking ( player , entity ) ) ; 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / player / PlayerEvent . java b / src / main / java / net / minecraftforge / event / entity / player / PlayerEvent . java 
 index 9feb503 . . 68c60a6 100644 
 - - - a / src / main / java / net / minecraftforge / event / entity / player / PlayerEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / entity / player / PlayerEvent . java 
 @ @ - 2 , 6 + 2 , 7 @ @ package net . minecraftforge . event . entity . player ; 
 
 import cpw . mods . fml . common . eventhandler . Cancelable ; 
 import net . minecraft . block . Block ; 
 + import net . minecraft . entity . Entity ; 
 import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraftforge . event . entity . living . LivingEvent ; 
 
 @ @ - 92 , 4 + 93 , 42 @ @ public class PlayerEvent extends LivingEvent 
 this . wasDeath = wasDeath ; 
 } 
 } 
 + 
 + / * * 
 + * Fired when an Entity is started to be " tracked " by this player ( the player receives updates about this entity , e . g . motion ) . 
 + * 
 + * / 
 + public static class StartTracking extends PlayerEvent { 
 + 
 + / * * 
 + * The Entity now being tracked . 
 + * / 
 + public final Entity target ; 
 + 
 + public StartTracking ( EntityPlayer player , Entity target ) 
 + { 
 + super ( player ) ; 
 + this . target = target ; 
 + } 
 + 
 + } 
 + 
 + / * * 
 + * Fired when an Entity is stopped to be " tracked " by this player ( the player no longer receives updates about this entity , e . g . motion ) . 
 + * 
 + * / 
 + public static class StopTracking extends PlayerEvent { 
 + 
 + / * * 
 + * The Entity no longer being tracked . 
 + * / 
 + public final Entity target ; 
 + 
 + public StopTracking ( EntityPlayer player , Entity target ) 
 + { 
 + super ( player ) ; 
 + this . target = target ; 
 + } 
 + 
 + } 
 }
