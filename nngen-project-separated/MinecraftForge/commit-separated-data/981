BLEU SCORE: 0.11156508007421491

TEST MSG: Remove patches
GENERATED MSG: Update FML to 16launch branch

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraftforge / fml / relauncher / Side . java . patch b / patches / minecraft / net / minecraftforge / fml / relauncher / Side . java . patch <nl> deleted file mode 100644 <nl> index 5c4dc68 . . 0000000 <nl> - - - a / patches / minecraft / net / minecraftforge / fml / relauncher / Side . java . patch <nl> + + + / dev / null <nl> @ @ - 1 , 47 + 0 , 0 @ @ <nl> - - - - . . / src - base / minecraft / net / minecraftforge / fml / relauncher / Side . java <nl> - + + + . . / src - work / minecraft / net / minecraftforge / fml / relauncher / Side . java <nl> - @ @ - 1 , 15 + 1 , 41 @ @ <nl> - + / * <nl> - + * Forge Mod Loader <nl> - + * Copyright ( c ) 2012 - 2013 cpw . <nl> - + * All rights reserved . This program and the accompanying materials <nl> - + * are made available under the terms of the GNU Lesser Public License v2 . 1 <nl> - + * which accompanies this distribution , and is available at <nl> - + * http : / / www . gnu . org / licenses / old - licenses / gpl - 2 . 0 . html <nl> - + * <nl> - + * Contributors : <nl> - + * cpw - implementation <nl> - + * / <nl> - + <nl> - package net . minecraftforge . fml . relauncher ; <nl> - <nl> - - public enum Side <nl> - - { <nl> - + public enum Side { <nl> - + <nl> - + / * * <nl> - + * The client side . Specifically , an environment where rendering capability exists . <nl> - + * Usually in the game client . <nl> - + * / <nl> - CLIENT , <nl> - + / * * <nl> - + * The server side . Specifically , an environment where NO rendering capability exists . <nl> - + * Usually on the dedicated server . <nl> - + * / <nl> - SERVER ; <nl> - <nl> - + / * * <nl> - + * @ return If this is the server environment <nl> - + * / <nl> - public boolean isServer ( ) <nl> - { <nl> - - return ! this . isClient ( ) ; <nl> - + return ! isClient ( ) ; <nl> - } <nl> - <nl> - + / * * <nl> - + * @ return if this is the Client environment <nl> - + * / <nl> - public boolean isClient ( ) <nl> - { <nl> - return this = = CLIENT ; <nl> diff - - git a / patches / minecraft / net / minecraftforge / fml / relauncher / SideOnly . java . patch b / patches / minecraft / net / minecraftforge / fml / relauncher / SideOnly . java . patch <nl> deleted file mode 100644 <nl> index 8e93390 . . 0000000 <nl> - - - a / patches / minecraft / net / minecraftforge / fml / relauncher / SideOnly . java . patch <nl> + + + / dev / null <nl> @ @ - 1 , 46 + 0 , 0 @ @ <nl> - - - - . . / src - base / minecraft / net / minecraftforge / fml / relauncher / SideOnly . java <nl> - + + + . . / src - work / minecraft / net / minecraftforge / fml / relauncher / SideOnly . java <nl> - @ @ - 1 , 3 + 1 , 15 @ @ <nl> - + / * <nl> - + * Forge Mod Loader <nl> - + * Copyright ( c ) 2012 - 2013 cpw . <nl> - + * All rights reserved . This program and the accompanying materials <nl> - + * are made available under the terms of the GNU Lesser Public License v2 . 1 <nl> - + * which accompanies this distribution , and is available at <nl> - + * http : / / www . gnu . org / licenses / old - licenses / gpl - 2 . 0 . html <nl> - + * <nl> - + * Contributors : <nl> - + * cpw - implementation <nl> - + * / <nl> - + <nl> - package net . minecraftforge . fml . relauncher ; <nl> - <nl> - import java . lang . annotation . ElementType ; <nl> - @ @ - 5 , 9 + 17 , 25 @ @ <nl> - import java . lang . annotation . RetentionPolicy ; <nl> - import java . lang . annotation . Target ; <nl> - <nl> - + import net . minecraftforge . fml . common . SidedProxy ; <nl> - + <nl> - + <nl> - + / * * <nl> - + * Marks the associated element as being only available on a certain { @ link Side } . This is <nl> - + * generally meant for internal Forge and FML use only and should only be used on mod classes <nl> - + * when other more common mechanisms , such as using a { @ link SidedProxy } fail to work . <nl> - + * <nl> - + * Note , this will < em > only < / em > apply to the direct element marked . This code : <nl> - + * < code > @ SideOnly public MyField field = new MyField ( ) ; < / code > will < strong > not < / strong > work , as the initializer <nl> - + * is a separate piece of code to the actual field declaration , and will not be able to find <nl> - + * it ' s field on the wrong side . <nl> - + * <nl> - + * @ author cpw <nl> - + * <nl> - + * / <nl> - @ Retention ( RetentionPolicy . RUNTIME ) <nl> - - @ Target ( { ElementType . TYPE , ElementType . FIELD , ElementType . METHOD , ElementType . CONSTRUCTOR } ) <nl> - + @ Target ( { ElementType . TYPE , ElementType . FIELD , ElementType . METHOD , ElementType . CONSTRUCTOR } ) <nl> - public @ interface SideOnly <nl> - { <nl> - - Side value ( ) ; <nl> - + public Side value ( ) ; <nl> - }
NEAREST DIFF (one line): diff - - git a / client / net / minecraftforge / client / ModCompatibilityClient . java b / client / net / minecraftforge / client / ModCompatibilityClient . java <nl> deleted file mode 100644 <nl> index d3203d6 . . 0000000 <nl> - - - a / client / net / minecraftforge / client / ModCompatibilityClient . java <nl> + + + / dev / null <nl> @ @ - 1 , 278 + 0 , 0 @ @ <nl> - package net . minecraftforge . client ; <nl> - <nl> - import java . io . File ; <nl> - import java . io . IOException ; <nl> - import java . lang . reflect . Field ; <nl> - import java . util . logging . Level ; <nl> - <nl> - import cpw . mods . fml . client . FMLClientHandler ; <nl> - import cpw . mods . fml . common . FMLLog ; <nl> - <nl> - import paulscode . sound . SoundSystemConfig ; <nl> - import paulscode . sound . codecs . CodecIBXM ; <nl> - <nl> - import net . minecraft . client . Minecraft ; <nl> - import net . minecraft . client . audio . SoundManager ; <nl> - import net . minecraft . client . audio . SoundPool ; <nl> - import net . minecraft . client . audio . SoundPoolEntry ; <nl> - import net . minecraft . entity . Entity ; <nl> - import net . minecraft . network . packet . Packet100OpenWindow ; <nl> - import net . minecraft . util . MathHelper ; <nl> - import net . minecraft . world . World ; <nl> - <nl> - public class ModCompatibilityClient <nl> - { <nl> - / * * <nl> - * Tries to get the class for the specified name , will also try the <nl> - * net . minecraft . src package in case we are in MCP <nl> - * Returns null if not found . <nl> - * <nl> - * @ param name The class name <nl> - * @ return The Class , or null if not found <nl> - * / <nl> - private static Class getClass ( String name ) <nl> - { <nl> - try <nl> - { <nl> - return Class . forName ( name ) ; <nl> - } <nl> - catch ( Exception e ) <nl> - { <nl> - try <nl> - { <nl> - return Class . forName ( " net . minecraft . src . " + name ) ; <nl> - } <nl> - catch ( Exception e2 ) <nl> - { <nl> - return null ; <nl> - } <nl> - } <nl> - } <nl> - <nl> - / * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * <nl> - * Risugami ' s AudioMod Compatibility <nl> - * http : / / www . minecraftforum . net / topic / 75440 - <nl> - * <nl> - * AudioMod adds a few extra codecs , loads audio from / resources / mods / * , <nl> - * introduces the concept of ' cave ' sounds , which are determined by if <nl> - * the player is underneath a solid block . <nl> - * <nl> - * It also lowers the interval between background music songs to 6000 <nl> - * / <nl> - public static SoundPool audioModSoundPoolCave ; <nl> - <nl> - / * * <nl> - * Populates the sound pools with with sounds from the / resources / mods folder <nl> - * And sets the interval between background music to 6000 <nl> - * <nl> - * @ param mngr The SoundManager instance <nl> - * / <nl> - public static void audioModLoad ( SoundManager mngr ) <nl> - { <nl> - audioModSoundPoolCave = new SoundPool ( ) ; <nl> - audioModLoadModAudio ( " resources / mod / sound " , mngr . soundPoolSounds ) ; <nl> - audioModLoadModAudio ( " resources / mod / streaming " , mngr . soundPoolStreaming ) ; <nl> - audioModLoadModAudio ( " resources / mod / music " , mngr . soundPoolMusic ) ; <nl> - audioModLoadModAudio ( " resources / mod / cavemusic " , audioModSoundPoolCave ) ; <nl> - <nl> - if ( mngr . MUSIC _ INTERVAL = = 12000 ) <nl> - { <nl> - mngr . MUSIC _ INTERVAL = 6000 ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Walks the given path in the Minecraft app directory and adds audio to the SoundPool <nl> - * <nl> - * @ param path The path to walk <nl> - * @ param pool The pool to add sound to <nl> - * / <nl> - private static void audioModLoadModAudio ( String path , SoundPool pool ) <nl> - { <nl> - File folder = new File ( Minecraft . getMinecraftDir ( ) , path ) ; <nl> - <nl> - try <nl> - { <nl> - audioModWalkFolder ( folder , folder , pool ) ; <nl> - } <nl> - catch ( IOException ex ) <nl> - { <nl> - FMLLog . log ( Level . FINE , ex , " Loading Mod audio failed for folder : % s " , path ) ; <nl> - ex . printStackTrace ( ) ; <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Walks the folder path recursively and calls pool . addSound on any file it finds . <nl> - * <nl> - * @ param base The base path for the folder , determines the name when calling addSound <nl> - * @ param folder The current folder <nl> - * @ param pool The SoundPool to add the sound to <nl> - * @ throws IOException <nl> - * / <nl> - private static void audioModWalkFolder ( File base , File folder , SoundPool pool ) throws IOException <nl> - { <nl> - if ( folder . exists ( ) | | folder . mkdirs ( ) ) <nl> - { <nl> - for ( File file : folder . listFiles ( ) ) <nl> - { <nl> - if ( ! file . getName ( ) . startsWith ( " . " ) ) <nl> - { <nl> - if ( file . isDirectory ( ) ) <nl> - { <nl> - audioModWalkFolder ( base , file , pool ) ; <nl> - } <nl> - else if ( file . isFile ( ) ) <nl> - { <nl> - String subpath = file . getPath ( ) . substring ( base . getPath ( ) . length ( ) + 1 ) . replace ( ' \ \ ' , ' / ' ) ; <nl> - pool . addSound ( subpath , file ) ; <nl> - } <nl> - } <nl> - } <nl> - } <nl> - } <nl> - <nl> - / * * <nl> - * Adds the IBXM codec and associates it with . xm , . s3m , and . mod <nl> - * / <nl> - public static void audioModAddCodecs ( ) <nl> - { <nl> - SoundSystemConfig . setCodec ( " xm " , CodecIBXM . class ) ; <nl> - SoundSystemConfig . setCodec ( " s3m " , CodecIBXM . class ) ; <nl> - SoundSystemConfig . setCodec ( " mod " , CodecIBXM . class ) ; <nl> - } <nl> - <nl> - / * * <nl> - * If the current player is underground , it picks a random song from the cave sound pool , <nl> - * if they are not it returns the passed in entry . <nl> - * <nl> - * @ param soundManager The SoundManager instance <nl> - * @ param current The currently selected entry <nl> - * @ return A soundPool entry to be played as the background music <nl> - * / <nl> - public static SoundPoolEntry audioModPickBackgroundMusic ( SoundManager soundManager , SoundPoolEntry current ) <nl> - { <nl> - Minecraft mc = FMLClientHandler . instance ( ) . getClient ( ) ; <nl> - if ( mc ! = null & & mc . theWorld ! = null & & audioModSoundPoolCave ! = null ) <nl> - { <nl> - Entity ent = mc . renderViewEntity ; <nl> - int x = MathHelper . truncateDoubleToInt ( ent . posX ) ; <nl> - int y = MathHelper . truncateDoubleToInt ( ent . posY ) ; <nl> - int z = MathHelper . truncateDoubleToInt ( ent . posZ ) ; <nl> - return ( mc . theWorld . canBlockSeeTheSky ( x , y , z ) ? current : audioModSoundPoolCave . getRandomSound ( ) ) ; <nl> - } <nl> - return current ; <nl> - } <nl> - <nl> - / * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * <nl> - * SDK ' s ModLoaderMP <nl> - * http : / / www . minecraftforum . net / topic / 86765 - <nl> - * <nl> - * ModLoaderMP was supposed to be a reliable server side version of ModLoader , however it has <nl> - * gotten the reputation of being really slow to update . Never having bugfixes , breaking compatibility <nl> - * with the client side ModLoader . <nl> - * <nl> - * So we have replaced it with our own system called FML ( Forge ModLoader ) <nl> - * it is a stand alone mod , that Forge relies on , and that is open source / community driven . <nl> - * https : / / github . com / cpw / FML <nl> - * <nl> - * However , for compatibilities sake , we provide the ModLoaderMP ' s hooks so that the end user <nl> - * does not need to make a choice between the two on the client side . <nl> - * * / <nl> - private static int isMLMPInstalled = - 1 ; <nl> - <nl> - / * * <nl> - * Determine if ModLoaderMP is installed by checking for the existence of the BaseModMp class . <nl> - * @ return True if BaseModMp was installed ( indicating the existance of MLMP ) <nl> - * / <nl> - public static boolean isMLMPInstalled ( ) <nl> - { <nl> - if ( isMLMPInstalled = = - 1 ) <nl> - { <nl> - isMLMPInstalled = ( getClass ( " ModLoaderMp " ) ! = null ? 1 : 0 ) ; <nl> - } <nl> - return isMLMPInstalled = = 1 ; <nl> - } <nl> - <nl> - / * * <nl> - * Attempts to spawn a vehicle using ModLoaderMP ' s vehicle spawn registry , if MLMP is not installed <nl> - * it returns the passed in currentEntity <nl> - * <nl> - * @ param type The Type ID of the vehicle <nl> - * @ param world The current world <nl> - * @ param x The spawn X position <nl> - * @ param y The spawn Y position <nl> - * @ param z The spawn Z position <nl> - * @ param thrower The entity that spawned the vehicle { possibly null } <nl> - * @ param currentEntity The current value to return if MLMP is not installed <nl> - * @ return The new spawned entity <nl> - * @ throws Exception <nl> - * / <nl> - public static Object mlmpVehicleSpawn ( int type , World world , double x , double y , double z , Entity thrower , Object currentEntity ) throws Exception <nl> - { <nl> - Class mlmp = getClass ( " ModLoaderMp " ) ; <nl> - if ( ! isMLMPInstalled ( ) | | mlmp = = null ) <nl> - { <nl> - return currentEntity ; <nl> - } <nl> - <nl> - Object entry = mlmp . getDeclaredMethod ( " handleNetClientHandlerEntities " , int . class ) . invoke ( null , type ) ; <nl> - if ( entry = = null ) <nl> - { <nl> - return currentEntity ; <nl> - } <nl> - <nl> - Class entityClass = ( Class ) entry . getClass ( ) . getDeclaredField ( " entityClass " ) . get ( entry ) ; <nl> - Object ret = ( Entity ) entityClass . getConstructor ( World . class , Double . TYPE , Double . TYPE , Double . TYPE ) . newInstance ( world , x , y , z ) ; <nl> - <nl> - if ( entry . getClass ( ) . getDeclaredField ( " entityHasOwner " ) . getBoolean ( entry ) ) <nl> - { <nl> - Field owner = entityClass . getField ( " owner " ) ; <nl> - <nl> - if ( ! Entity . class . isAssignableFrom ( owner . getType ( ) ) ) <nl> - { <nl> - throw new Exception ( String . format ( " Entity \ ' s owner field must be of type Entity , but it is of type % s . " , owner . getType ( ) ) ) ; <nl> - } <nl> - <nl> - if ( thrower = = null ) <nl> - { <nl> - System . out . println ( " Received spawn packet for entity with owner , but owner was not found . " ) ; <nl> - FMLLog . fine ( " Received spawn packet for entity with owner , but owner was not found . " ) ; <nl> - } <nl> - else <nl> - { <nl> - if ( ! owner . getType ( ) . isAssignableFrom ( thrower . getClass ( ) ) ) <nl> - { <nl> - throw new Exception ( String . format ( " Tried to assign an entity of type % s to entity owner , which is of type % s . " , thrower . getClass ( ) , owner . getType ( ) ) ) ; <nl> - } <nl> - <nl> - owner . set ( ret , thrower ) ; <nl> - } <nl> - } <nl> - return ret ; <nl> - } <nl> - <nl> - / * * <nl> - * Attempts to invoke ModLoaderMp . handleGUI if ModLoaderMP is installed . <nl> - * If not , it does nothing <nl> - * <nl> - * @ param pkt The open window packet <nl> - * / <nl> - public static void mlmpOpenWindow ( Packet100OpenWindow pkt ) <nl> - { <nl> - Class mlmp = getClass ( " ModLoaderMp " ) ; <nl> - if ( ! isMLMPInstalled ( ) | | mlmp = = null ) <nl> - { <nl> - return ; <nl> - } <nl> - <nl> - try <nl> - { <nl> - mlmp . getDeclaredMethod ( " handleGUI " , Packet100OpenWindow . class ) . invoke ( null , pkt ) ; <nl> - } <nl> - catch ( Exception e ) <nl> - { <nl> - e . printStackTrace ( ) ; <nl> - } <nl> - } <nl> - } <nl> diff - - git a / common / net / minecraftforge / common / IArmorTextureProvider . java b / common / net / minecraftforge / common / IArmorTextureProvider . java <nl> deleted file mode 100644 <nl> index 4106d17 . . 0000000 <nl> - - - a / common / net / minecraftforge / common / IArmorTextureProvider . java <nl> + + + / dev / null <nl> @ @ - 1 , 27 + 0 , 0 @ @ <nl> - / * * <nl> - * This software is provided under the terms of the Minecraft Forge Public <nl> - * License v1 . 0 . <nl> - * / <nl> - <nl> - package net . minecraftforge . common ; <nl> - <nl> - import net . minecraft . item . ItemStack ; <nl> - <nl> - / * * <nl> - * This interface has to be implemented by an instance of ItemArmor . <nl> - * It allows for the application of a custom texture file to the player skin <nl> - * when the armor is worn . <nl> - * / <nl> - @ Deprecated / / See Item . getArmorTexture <nl> - public interface IArmorTextureProvider <nl> - { <nl> - <nl> - / * * <nl> - * This interface has to return the path to a file that is the same <nl> - * format as iron _ 1 . png ( or any of the other armor files ) . It will be <nl> - * applied to the player skin when the armor is worn . <nl> - * / <nl> - public String getArmorTextureFile ( ItemStack itemstack ) ; <nl> - <nl> - } <nl> - <nl> diff - - git a / fml b / fml <nl> index 05a854c . . 2766f9a 160000 <nl> - - - a / fml <nl> + + + b / fml <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit 05a854cd2af53ca822ee8b249b0b3bbe44f94675 <nl> + Subproject commit 2766f9a293f3e1da650693991d16a43a089ae65b <nl> diff - - git a / patches / minecraft / net / minecraft / client / audio / SoundPool . java . patch b / patches / minecraft / net / minecraft / client / audio / SoundPool . java . patch <nl> deleted file mode 100644 <nl> index 996a895 . . 0000000 <nl> - - - a / patches / minecraft / net / minecraft / client / audio / SoundPool . java . patch <nl> + + + / dev / null <nl> @ @ - 1 , 53 + 0 , 0 @ @ <nl> - - - - . . / src _ base / minecraft / net / minecraft / client / audio / SoundPool . java <nl> - + + + . . / src _ work / minecraft / net / minecraft / client / audio / SoundPool . java <nl> - @ @ - 4 , 6 + 4 , 7 @ @ <nl> - import cpw . mods . fml . relauncher . SideOnly ; <nl> - import java . io . File ; <nl> - import java . net . MalformedURLException ; <nl> - + import java . net . URL ; <nl> - import java . util . ArrayList ; <nl> - import java . util . HashMap ; <nl> - import java . util . List ; <nl> - @ @ - 36 , 6 + 37 , 26 @ @ <nl> - * / <nl> - public SoundPoolEntry addSound ( String par1Str , File par2File ) <nl> - { <nl> - + try <nl> - + { <nl> - + return addSound ( par1Str , par2File . toURI ( ) . toURL ( ) ) ; <nl> - + } <nl> - + catch ( MalformedURLException ex ) <nl> - + { <nl> - + ex . printStackTrace ( ) ; <nl> - + throw new RuntimeException ( ex ) ; <nl> - + } <nl> - + } <nl> - + <nl> - + / * * <nl> - + * URL version of addSound , as the back - end sound engine has full support for various types of URLs <nl> - + * <nl> - + * @ param par1Str The name of the sound to add <nl> - + * @ param url The url of the sound resource <nl> - + * @ return A SoundPoolEntry for the newly added sound <nl> - + * / <nl> - + public SoundPoolEntry addSound ( String par1Str , URL url ) <nl> - + { <nl> - try <nl> - { <nl> - String s1 = par1Str ; <nl> - @ @ - 56 , 13 + 77 , 13 @ @ <nl> - this . nameToSoundPoolEntriesMapping . put ( par1Str , new ArrayList ( ) ) ; <nl> - } <nl> - <nl> - - SoundPoolEntry soundpoolentry = new SoundPoolEntry ( s1 , par2File . toURI ( ) . toURL ( ) ) ; <nl> - + SoundPoolEntry soundpoolentry = new SoundPoolEntry ( s1 , url ) ; <nl> - ( ( List ) this . nameToSoundPoolEntriesMapping . get ( par1Str ) ) . add ( soundpoolentry ) ; <nl> - this . allSoundPoolEntries . add ( soundpoolentry ) ; <nl> - + + this . numberOfSoundPoolEntries ; <nl> - return soundpoolentry ; <nl> - } <nl> - - catch ( MalformedURLException malformedurlexception ) <nl> - + catch ( Exception malformedurlexception ) <nl> - { <nl> - malformedurlexception . printStackTrace ( ) ; <nl> - throw new RuntimeException ( malformedurlexception ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / RunnableTitleScreen . java . patch b / patches / minecraft / net / minecraft / client / gui / RunnableTitleScreen . java . patch <nl> deleted file mode 100644 <nl> index 23c473d . . 0000000 <nl> - - - a / patches / minecraft / net / minecraft / client / gui / RunnableTitleScreen . java . patch <nl> + + + / dev / null <nl> @ @ - 1 , 13 + 0 , 0 @ @ <nl> - - - - . . / src _ base / minecraft / net / minecraft / client / gui / RunnableTitleScreen . java <nl> - + + + . . / src _ work / minecraft / net / minecraft / client / gui / RunnableTitleScreen . java <nl> - @ @ - 40 , 6 + 40 , 10 @ @ <nl> - } <nl> - } <nl> - } <nl> - + catch ( java . io . FileNotFoundException e ) <nl> - + { <nl> - + / / NomNomNom , Don ' t print the error when the flag isn ' t found . <nl> - + } <nl> - catch ( Throwable throwable ) <nl> - { <nl> - throwable . printStackTrace ( ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch b / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch <nl> deleted file mode 100644 <nl> index cdc1e66 . . 0000000 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch <nl> + + + / dev / null <nl> @ @ - 1 , 50 + 0 , 0 @ @ <nl> - - - - . . / src _ base / minecraft / net / minecraft / client / renderer / texture / TextureManager . java <nl> - + + + . . / src _ work / minecraft / net / minecraft / client / renderer / texture / TextureManager . java <nl> - @ @ - 66 , 17 + 66 , 42 @ @ <nl> - <nl> - public List createTexture ( String par1Str ) <nl> - { <nl> - + return createNewTexture ( par1Str , par1Str , null ) ; <nl> - + } <nl> - + <nl> - + public List createNewTexture ( String textureName , String textureFile , TextureStitched stitched ) <nl> - + { <nl> - + String par1Str = textureFile ; <nl> - ArrayList arraylist = new ArrayList ( ) ; <nl> - ITexturePack itexturepack = Minecraft . getMinecraft ( ) . texturePackList . getSelectedTexturePack ( ) ; <nl> - <nl> - try <nl> - { <nl> - - BufferedImage bufferedimage = ImageIO . read ( itexturepack . getResourceAsStream ( " / " + par1Str ) ) ; <nl> - - int i = bufferedimage . getHeight ( ) ; <nl> - - int j = bufferedimage . getWidth ( ) ; <nl> - - String s1 = this . getBasename ( par1Str ) ; <nl> - + BufferedImage bufferedimage = null ; <nl> - + int i = 0 ; <nl> - + int j = 0 ; <nl> - + FileNotFoundException fnfe = null ; <nl> - + try <nl> - + { <nl> - + bufferedimage = ImageIO . read ( itexturepack . getResourceAsStream ( " / " + textureFile ) ) ; <nl> - + i = bufferedimage . getHeight ( ) ; <nl> - + j = bufferedimage . getWidth ( ) ; <nl> - + } <nl> - + catch ( FileNotFoundException e ) <nl> - + { <nl> - + fnfe = e ; <nl> - + } <nl> - + String s1 = textureName ; <nl> - <nl> - - if ( this . hasAnimationTxt ( par1Str , itexturepack ) ) <nl> - + if ( stitched ! = null & & stitched . loadTexture ( this , itexturepack , textureName , textureFile , bufferedimage , arraylist ) ) <nl> - + { <nl> - + ; <nl> - + } <nl> - + else if ( fnfe ! = null ) <nl> - + { <nl> - + throw fnfe ; <nl> - + } <nl> - + else if ( this . hasAnimationTxt ( par1Str , itexturepack ) ) <nl> - { <nl> - int k = j ; <nl> - int l = j ; <nl> diff - - git a / patches / minecraft / net / minecraft / client / renderer / texture / TextureStitched . java . patch b / patches / minecraft / net / minecraft / client / renderer / texture / TextureStitched . java . patch <nl> deleted file mode 100644 <nl> index 2337b1e . . 0000000 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / texture / TextureStitched . java . patch <nl> + + + / dev / null <nl> @ @ - 1 , 45 + 0 , 0 @ @ <nl> - - - - . . / src _ base / minecraft / net / minecraft / client / renderer / texture / TextureStitched . java <nl> - + + + . . / src _ work / minecraft / net / minecraft / client / renderer / texture / TextureStitched . java <nl> - @ @ - 3 , 9 + 3 , 13 @ @ <nl> - import cpw . mods . fml . client . TextureFXManager ; <nl> - import cpw . mods . fml . relauncher . Side ; <nl> - import cpw . mods . fml . relauncher . SideOnly ; <nl> - + <nl> - + import java . awt . image . BufferedImage ; <nl> - import java . io . BufferedReader ; <nl> - import java . util . ArrayList ; <nl> - import java . util . List ; <nl> - + <nl> - + import net . minecraft . client . texturepacks . ITexturePack ; <nl> - import net . minecraft . util . Icon ; <nl> - import net . minecraft . util . Tuple ; <nl> - <nl> - @ @ - 252 , 4 + 256 , 28 @ @ <nl> - t . createAndUploadTexture ( ) ; <nl> - } <nl> - } <nl> - + <nl> - + / / = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> - + / / Forge Start <nl> - + / / = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> - + / * * <nl> - + * Called when texture packs are refreshed , from TextureManager . createNewTexture , <nl> - + * allows for finer control over loading the animation lists and verification of the image . <nl> - + * If the return value from this is true , no further loading will be done by vanilla code . <nl> - + * <nl> - + * You need to add all Texture ' s to the textures argument . At the end of this function at least one <nl> - + * entry should be in that argument , or a error should of been thrown . <nl> - + * <nl> - + * @ param manager The invoking manager <nl> - + * @ param texturepack Current texture pack <nl> - + * @ param name The name of the texture <nl> - + * @ param fileName Resource path for this texture <nl> - + * @ param image Buffered image of the loaded resource <nl> - + * @ param textures ArrayList of element type Texture , split textures should be added to this list for the stitcher to handle . <nl> - + * @ return Return true to skip further vanilla texture loading for this texture <nl> - + * / <nl> - + public boolean loadTexture ( TextureManager manager , ITexturePack texturepack , String name , String fileName , BufferedImage image , ArrayList textures ) <nl> - + { <nl> - + return false ; <nl> - + } <nl> - } <nl> diff - - git a / patches / minecraft / net / minecraft / util / ChunkCoordinates . java . patch b / patches / minecraft / net / minecraft / util / ChunkCoordinates . java . patch <nl> deleted file mode 100644 <nl> index df4f80f . . 0000000 <nl> - - - a / patches / minecraft / net / minecraft / util / ChunkCoordinates . java . patch <nl> + + + / dev / null <nl> @ @ - 1 , 17 + 0 , 0 @ @ <nl> - - - - . . / src _ base / minecraft / net / minecraft / util / ChunkCoordinates . java <nl> - + + + . . / src _ work / minecraft / net / minecraft / util / ChunkCoordinates . java <nl> - @ @ - 64 , 10 + 64 , 10 @ @ <nl> - * / <nl> - public float getDistanceSquared ( int par1 , int par2 , int par3 ) <nl> - { <nl> - - int l = this . posX - par1 ; <nl> - - int i1 = this . posY - par2 ; <nl> - - int j1 = this . posZ - par3 ; <nl> - - return ( float ) ( l * l + i1 * i1 + j1 * j1 ) ; <nl> - + float l = this . posX - par1 ; <nl> - + float i1 = this . posY - par2 ; <nl> - + float j1 = this . posZ - par3 ; <nl> - + return l * l + i1 * i1 + j1 * j1 ; <nl> - } <nl> - <nl> - / * * <nl> diff - - git a / patches / minecraft / net / minecraft / util / ThreadDownloadResources . java . patch b / patches / minecraft / net / minecraft / util / ThreadDownloadResources . java . patch <nl> deleted file mode 100644 <nl> index cf4942a . . 0000000 <nl> - - - a / patches / minecraft / net / minecraft / util / ThreadDownloadResources . java . patch <nl> + + + / dev / null <nl> @ @ - 1 , 37 + 0 , 0 @ @ <nl> - - - - . . / src _ base / minecraft / net / minecraft / util / ThreadDownloadResources . java <nl> - + + + . . / src _ work / minecraft / net / minecraft / util / ThreadDownloadResources . java <nl> - @ @ - 8 , 6 + 8 , 8 @ @ <nl> - import java . io . FileOutputStream ; <nl> - import java . io . IOException ; <nl> - import java . net . URL ; <nl> - + import java . net . URLConnection ; <nl> - + <nl> - import javax . xml . parsers . DocumentBuilder ; <nl> - import javax . xml . parsers . DocumentBuilderFactory ; <nl> - import net . minecraft . client . Minecraft ; <nl> - @ @ - 48 , 7 + 50 , 11 @ @ <nl> - URL url = new URL ( " http : / / s3 . amazonaws . com / MinecraftResources / " ) ; <nl> - DocumentBuilderFactory documentbuilderfactory = DocumentBuilderFactory . newInstance ( ) ; <nl> - DocumentBuilder documentbuilder = documentbuilderfactory . newDocumentBuilder ( ) ; <nl> - - Document document = documentbuilder . parse ( url . openStream ( ) ) ; <nl> - + / / Add a timeout of 60 seconds to getting the list , MC stalls without sound for some users . <nl> - + URLConnection con = url . openConnection ( ) ; <nl> - + con . setConnectTimeout ( 60000 ) ; <nl> - + con . setReadTimeout ( 60000 ) ; <nl> - + Document document = documentbuilder . parse ( con . getInputStream ( ) ) ; <nl> - NodeList nodelist = document . getElementsByTagName ( " Contents " ) ; <nl> - <nl> - for ( int i = 0 ; i < 2 ; + + i ) <nl> - @ @ - 168 , 7 + 174 , 11 @ @ <nl> - private void downloadResource ( URL par1URL , File par2File , long par3 ) throws IOException <nl> - { <nl> - byte [ ] abyte = new byte [ 4096 ] ; <nl> - - DataInputStream datainputstream = new DataInputStream ( par1URL . openStream ( ) ) ; <nl> - + / / Add a timeout of 60 seconds to getting the list , MC stalls without sound for some users . <nl> - + URLConnection con = par1URL . openConnection ( ) ; <nl> - + con . setConnectTimeout ( 60000 ) ; <nl> - + con . setReadTimeout ( 60000 ) ; <nl> - + DataInputStream datainputstream = new DataInputStream ( con . getInputStream ( ) ) ; <nl> - DataOutputStream dataoutputstream = new DataOutputStream ( new FileOutputStream ( par2File ) ) ; <nl> - boolean flag = false ; <nl> -

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraftforge / fml / relauncher / Side . java . patch b / patches / minecraft / net / minecraftforge / fml / relauncher / Side . java . patch 
 deleted file mode 100644 
 index 5c4dc68 . . 0000000 
 - - - a / patches / minecraft / net / minecraftforge / fml / relauncher / Side . java . patch 
 + + + / dev / null 
 @ @ - 1 , 47 + 0 , 0 @ @ 
 - - - - . . / src - base / minecraft / net / minecraftforge / fml / relauncher / Side . java 
 - + + + . . / src - work / minecraft / net / minecraftforge / fml / relauncher / Side . java 
 - @ @ - 1 , 15 + 1 , 41 @ @ 
 - + / * 
 - + * Forge Mod Loader 
 - + * Copyright ( c ) 2012 - 2013 cpw . 
 - + * All rights reserved . This program and the accompanying materials 
 - + * are made available under the terms of the GNU Lesser Public License v2 . 1 
 - + * which accompanies this distribution , and is available at 
 - + * http : / / www . gnu . org / licenses / old - licenses / gpl - 2 . 0 . html 
 - + * 
 - + * Contributors : 
 - + * cpw - implementation 
 - + * / 
 - + 
 - package net . minecraftforge . fml . relauncher ; 
 - 
 - - public enum Side 
 - - { 
 - + public enum Side { 
 - + 
 - + / * * 
 - + * The client side . Specifically , an environment where rendering capability exists . 
 - + * Usually in the game client . 
 - + * / 
 - CLIENT , 
 - + / * * 
 - + * The server side . Specifically , an environment where NO rendering capability exists . 
 - + * Usually on the dedicated server . 
 - + * / 
 - SERVER ; 
 - 
 - + / * * 
 - + * @ return If this is the server environment 
 - + * / 
 - public boolean isServer ( ) 
 - { 
 - - return ! this . isClient ( ) ; 
 - + return ! isClient ( ) ; 
 - } 
 - 
 - + / * * 
 - + * @ return if this is the Client environment 
 - + * / 
 - public boolean isClient ( ) 
 - { 
 - return this = = CLIENT ; 
 diff - - git a / patches / minecraft / net / minecraftforge / fml / relauncher / SideOnly . java . patch b / patches / minecraft / net / minecraftforge / fml / relauncher / SideOnly . java . patch 
 deleted file mode 100644 
 index 8e93390 . . 0000000 
 - - - a / patches / minecraft / net / minecraftforge / fml / relauncher / SideOnly . java . patch 
 + + + / dev / null 
 @ @ - 1 , 46 + 0 , 0 @ @ 
 - - - - . . / src - base / minecraft / net / minecraftforge / fml / relauncher / SideOnly . java 
 - + + + . . / src - work / minecraft / net / minecraftforge / fml / relauncher / SideOnly . java 
 - @ @ - 1 , 3 + 1 , 15 @ @ 
 - + / * 
 - + * Forge Mod Loader 
 - + * Copyright ( c ) 2012 - 2013 cpw . 
 - + * All rights reserved . This program and the accompanying materials 
 - + * are made available under the terms of the GNU Lesser Public License v2 . 1 
 - + * which accompanies this distribution , and is available at 
 - + * http : / / www . gnu . org / licenses / old - licenses / gpl - 2 . 0 . html 
 - + * 
 - + * Contributors : 
 - + * cpw - implementation 
 - + * / 
 - + 
 - package net . minecraftforge . fml . relauncher ; 
 - 
 - import java . lang . annotation . ElementType ; 
 - @ @ - 5 , 9 + 17 , 25 @ @ 
 - import java . lang . annotation . RetentionPolicy ; 
 - import java . lang . annotation . Target ; 
 - 
 - + import net . minecraftforge . fml . common . SidedProxy ; 
 - + 
 - + 
 - + / * * 
 - + * Marks the associated element as being only available on a certain { @ link Side } . This is 
 - + * generally meant for internal Forge and FML use only and should only be used on mod classes 
 - + * when other more common mechanisms , such as using a { @ link SidedProxy } fail to work . 
 - + * 
 - + * Note , this will < em > only < / em > apply to the direct element marked . This code : 
 - + * < code > @ SideOnly public MyField field = new MyField ( ) ; < / code > will < strong > not < / strong > work , as the initializer 
 - + * is a separate piece of code to the actual field declaration , and will not be able to find 
 - + * it ' s field on the wrong side . 
 - + * 
 - + * @ author cpw 
 - + * 
 - + * / 
 - @ Retention ( RetentionPolicy . RUNTIME ) 
 - - @ Target ( { ElementType . TYPE , ElementType . FIELD , ElementType . METHOD , ElementType . CONSTRUCTOR } ) 
 - + @ Target ( { ElementType . TYPE , ElementType . FIELD , ElementType . METHOD , ElementType . CONSTRUCTOR } ) 
 - public @ interface SideOnly 
 - { 
 - - Side value ( ) ; 
 - + public Side value ( ) ; 
 - }

NEAREST DIFF:
diff - - git a / client / net / minecraftforge / client / ModCompatibilityClient . java b / client / net / minecraftforge / client / ModCompatibilityClient . java 
 deleted file mode 100644 
 index d3203d6 . . 0000000 
 - - - a / client / net / minecraftforge / client / ModCompatibilityClient . java 
 + + + / dev / null 
 @ @ - 1 , 278 + 0 , 0 @ @ 
 - package net . minecraftforge . client ; 
 - 
 - import java . io . File ; 
 - import java . io . IOException ; 
 - import java . lang . reflect . Field ; 
 - import java . util . logging . Level ; 
 - 
 - import cpw . mods . fml . client . FMLClientHandler ; 
 - import cpw . mods . fml . common . FMLLog ; 
 - 
 - import paulscode . sound . SoundSystemConfig ; 
 - import paulscode . sound . codecs . CodecIBXM ; 
 - 
 - import net . minecraft . client . Minecraft ; 
 - import net . minecraft . client . audio . SoundManager ; 
 - import net . minecraft . client . audio . SoundPool ; 
 - import net . minecraft . client . audio . SoundPoolEntry ; 
 - import net . minecraft . entity . Entity ; 
 - import net . minecraft . network . packet . Packet100OpenWindow ; 
 - import net . minecraft . util . MathHelper ; 
 - import net . minecraft . world . World ; 
 - 
 - public class ModCompatibilityClient 
 - { 
 - / * * 
 - * Tries to get the class for the specified name , will also try the 
 - * net . minecraft . src package in case we are in MCP 
 - * Returns null if not found . 
 - * 
 - * @ param name The class name 
 - * @ return The Class , or null if not found 
 - * / 
 - private static Class getClass ( String name ) 
 - { 
 - try 
 - { 
 - return Class . forName ( name ) ; 
 - } 
 - catch ( Exception e ) 
 - { 
 - try 
 - { 
 - return Class . forName ( " net . minecraft . src . " + name ) ; 
 - } 
 - catch ( Exception e2 ) 
 - { 
 - return null ; 
 - } 
 - } 
 - } 
 - 
 - / * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 - * Risugami ' s AudioMod Compatibility 
 - * http : / / www . minecraftforum . net / topic / 75440 - 
 - * 
 - * AudioMod adds a few extra codecs , loads audio from / resources / mods / * , 
 - * introduces the concept of ' cave ' sounds , which are determined by if 
 - * the player is underneath a solid block . 
 - * 
 - * It also lowers the interval between background music songs to 6000 
 - * / 
 - public static SoundPool audioModSoundPoolCave ; 
 - 
 - / * * 
 - * Populates the sound pools with with sounds from the / resources / mods folder 
 - * And sets the interval between background music to 6000 
 - * 
 - * @ param mngr The SoundManager instance 
 - * / 
 - public static void audioModLoad ( SoundManager mngr ) 
 - { 
 - audioModSoundPoolCave = new SoundPool ( ) ; 
 - audioModLoadModAudio ( " resources / mod / sound " , mngr . soundPoolSounds ) ; 
 - audioModLoadModAudio ( " resources / mod / streaming " , mngr . soundPoolStreaming ) ; 
 - audioModLoadModAudio ( " resources / mod / music " , mngr . soundPoolMusic ) ; 
 - audioModLoadModAudio ( " resources / mod / cavemusic " , audioModSoundPoolCave ) ; 
 - 
 - if ( mngr . MUSIC _ INTERVAL = = 12000 ) 
 - { 
 - mngr . MUSIC _ INTERVAL = 6000 ; 
 - } 
 - } 
 - 
 - / * * 
 - * Walks the given path in the Minecraft app directory and adds audio to the SoundPool 
 - * 
 - * @ param path The path to walk 
 - * @ param pool The pool to add sound to 
 - * / 
 - private static void audioModLoadModAudio ( String path , SoundPool pool ) 
 - { 
 - File folder = new File ( Minecraft . getMinecraftDir ( ) , path ) ; 
 - 
 - try 
 - { 
 - audioModWalkFolder ( folder , folder , pool ) ; 
 - } 
 - catch ( IOException ex ) 
 - { 
 - FMLLog . log ( Level . FINE , ex , " Loading Mod audio failed for folder : % s " , path ) ; 
 - ex . printStackTrace ( ) ; 
 - } 
 - } 
 - 
 - / * * 
 - * Walks the folder path recursively and calls pool . addSound on any file it finds . 
 - * 
 - * @ param base The base path for the folder , determines the name when calling addSound 
 - * @ param folder The current folder 
 - * @ param pool The SoundPool to add the sound to 
 - * @ throws IOException 
 - * / 
 - private static void audioModWalkFolder ( File base , File folder , SoundPool pool ) throws IOException 
 - { 
 - if ( folder . exists ( ) | | folder . mkdirs ( ) ) 
 - { 
 - for ( File file : folder . listFiles ( ) ) 
 - { 
 - if ( ! file . getName ( ) . startsWith ( " . " ) ) 
 - { 
 - if ( file . isDirectory ( ) ) 
 - { 
 - audioModWalkFolder ( base , file , pool ) ; 
 - } 
 - else if ( file . isFile ( ) ) 
 - { 
 - String subpath = file . getPath ( ) . substring ( base . getPath ( ) . length ( ) + 1 ) . replace ( ' \ \ ' , ' / ' ) ; 
 - pool . addSound ( subpath , file ) ; 
 - } 
 - } 
 - } 
 - } 
 - } 
 - 
 - / * * 
 - * Adds the IBXM codec and associates it with . xm , . s3m , and . mod 
 - * / 
 - public static void audioModAddCodecs ( ) 
 - { 
 - SoundSystemConfig . setCodec ( " xm " , CodecIBXM . class ) ; 
 - SoundSystemConfig . setCodec ( " s3m " , CodecIBXM . class ) ; 
 - SoundSystemConfig . setCodec ( " mod " , CodecIBXM . class ) ; 
 - } 
 - 
 - / * * 
 - * If the current player is underground , it picks a random song from the cave sound pool , 
 - * if they are not it returns the passed in entry . 
 - * 
 - * @ param soundManager The SoundManager instance 
 - * @ param current The currently selected entry 
 - * @ return A soundPool entry to be played as the background music 
 - * / 
 - public static SoundPoolEntry audioModPickBackgroundMusic ( SoundManager soundManager , SoundPoolEntry current ) 
 - { 
 - Minecraft mc = FMLClientHandler . instance ( ) . getClient ( ) ; 
 - if ( mc ! = null & & mc . theWorld ! = null & & audioModSoundPoolCave ! = null ) 
 - { 
 - Entity ent = mc . renderViewEntity ; 
 - int x = MathHelper . truncateDoubleToInt ( ent . posX ) ; 
 - int y = MathHelper . truncateDoubleToInt ( ent . posY ) ; 
 - int z = MathHelper . truncateDoubleToInt ( ent . posZ ) ; 
 - return ( mc . theWorld . canBlockSeeTheSky ( x , y , z ) ? current : audioModSoundPoolCave . getRandomSound ( ) ) ; 
 - } 
 - return current ; 
 - } 
 - 
 - / * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 - * SDK ' s ModLoaderMP 
 - * http : / / www . minecraftforum . net / topic / 86765 - 
 - * 
 - * ModLoaderMP was supposed to be a reliable server side version of ModLoader , however it has 
 - * gotten the reputation of being really slow to update . Never having bugfixes , breaking compatibility 
 - * with the client side ModLoader . 
 - * 
 - * So we have replaced it with our own system called FML ( Forge ModLoader ) 
 - * it is a stand alone mod , that Forge relies on , and that is open source / community driven . 
 - * https : / / github . com / cpw / FML 
 - * 
 - * However , for compatibilities sake , we provide the ModLoaderMP ' s hooks so that the end user 
 - * does not need to make a choice between the two on the client side . 
 - * * / 
 - private static int isMLMPInstalled = - 1 ; 
 - 
 - / * * 
 - * Determine if ModLoaderMP is installed by checking for the existence of the BaseModMp class . 
 - * @ return True if BaseModMp was installed ( indicating the existance of MLMP ) 
 - * / 
 - public static boolean isMLMPInstalled ( ) 
 - { 
 - if ( isMLMPInstalled = = - 1 ) 
 - { 
 - isMLMPInstalled = ( getClass ( " ModLoaderMp " ) ! = null ? 1 : 0 ) ; 
 - } 
 - return isMLMPInstalled = = 1 ; 
 - } 
 - 
 - / * * 
 - * Attempts to spawn a vehicle using ModLoaderMP ' s vehicle spawn registry , if MLMP is not installed 
 - * it returns the passed in currentEntity 
 - * 
 - * @ param type The Type ID of the vehicle 
 - * @ param world The current world 
 - * @ param x The spawn X position 
 - * @ param y The spawn Y position 
 - * @ param z The spawn Z position 
 - * @ param thrower The entity that spawned the vehicle { possibly null } 
 - * @ param currentEntity The current value to return if MLMP is not installed 
 - * @ return The new spawned entity 
 - * @ throws Exception 
 - * / 
 - public static Object mlmpVehicleSpawn ( int type , World world , double x , double y , double z , Entity thrower , Object currentEntity ) throws Exception 
 - { 
 - Class mlmp = getClass ( " ModLoaderMp " ) ; 
 - if ( ! isMLMPInstalled ( ) | | mlmp = = null ) 
 - { 
 - return currentEntity ; 
 - } 
 - 
 - Object entry = mlmp . getDeclaredMethod ( " handleNetClientHandlerEntities " , int . class ) . invoke ( null , type ) ; 
 - if ( entry = = null ) 
 - { 
 - return currentEntity ; 
 - } 
 - 
 - Class entityClass = ( Class ) entry . getClass ( ) . getDeclaredField ( " entityClass " ) . get ( entry ) ; 
 - Object ret = ( Entity ) entityClass . getConstructor ( World . class , Double . TYPE , Double . TYPE , Double . TYPE ) . newInstance ( world , x , y , z ) ; 
 - 
 - if ( entry . getClass ( ) . getDeclaredField ( " entityHasOwner " ) . getBoolean ( entry ) ) 
 - { 
 - Field owner = entityClass . getField ( " owner " ) ; 
 - 
 - if ( ! Entity . class . isAssignableFrom ( owner . getType ( ) ) ) 
 - { 
 - throw new Exception ( String . format ( " Entity \ ' s owner field must be of type Entity , but it is of type % s . " , owner . getType ( ) ) ) ; 
 - } 
 - 
 - if ( thrower = = null ) 
 - { 
 - System . out . println ( " Received spawn packet for entity with owner , but owner was not found . " ) ; 
 - FMLLog . fine ( " Received spawn packet for entity with owner , but owner was not found . " ) ; 
 - } 
 - else 
 - { 
 - if ( ! owner . getType ( ) . isAssignableFrom ( thrower . getClass ( ) ) ) 
 - { 
 - throw new Exception ( String . format ( " Tried to assign an entity of type % s to entity owner , which is of type % s . " , thrower . getClass ( ) , owner . getType ( ) ) ) ; 
 - } 
 - 
 - owner . set ( ret , thrower ) ; 
 - } 
 - } 
 - return ret ; 
 - } 
 - 
 - / * * 
 - * Attempts to invoke ModLoaderMp . handleGUI if ModLoaderMP is installed . 
 - * If not , it does nothing 
 - * 
 - * @ param pkt The open window packet 
 - * / 
 - public static void mlmpOpenWindow ( Packet100OpenWindow pkt ) 
 - { 
 - Class mlmp = getClass ( " ModLoaderMp " ) ; 
 - if ( ! isMLMPInstalled ( ) | | mlmp = = null ) 
 - { 
 - return ; 
 - } 
 - 
 - try 
 - { 
 - mlmp . getDeclaredMethod ( " handleGUI " , Packet100OpenWindow . class ) . invoke ( null , pkt ) ; 
 - } 
 - catch ( Exception e ) 
 - { 
 - e . printStackTrace ( ) ; 
 - } 
 - } 
 - } 
 diff - - git a / common / net / minecraftforge / common / IArmorTextureProvider . java b / common / net / minecraftforge / common / IArmorTextureProvider . java 
 deleted file mode 100644 
 index 4106d17 . . 0000000 
 - - - a / common / net / minecraftforge / common / IArmorTextureProvider . java 
 + + + / dev / null 
 @ @ - 1 , 27 + 0 , 0 @ @ 
 - / * * 
 - * This software is provided under the terms of the Minecraft Forge Public 
 - * License v1 . 0 . 
 - * / 
 - 
 - package net . minecraftforge . common ; 
 - 
 - import net . minecraft . item . ItemStack ; 
 - 
 - / * * 
 - * This interface has to be implemented by an instance of ItemArmor . 
 - * It allows for the application of a custom texture file to the player skin 
 - * when the armor is worn . 
 - * / 
 - @ Deprecated / / See Item . getArmorTexture 
 - public interface IArmorTextureProvider 
 - { 
 - 
 - / * * 
 - * This interface has to return the path to a file that is the same 
 - * format as iron _ 1 . png ( or any of the other armor files ) . It will be 
 - * applied to the player skin when the armor is worn . 
 - * / 
 - public String getArmorTextureFile ( ItemStack itemstack ) ; 
 - 
 - } 
 - 
 diff - - git a / fml b / fml 
 index 05a854c . . 2766f9a 160000 
 - - - a / fml 
 + + + b / fml 
 @ @ - 1 + 1 @ @ 
 - Subproject commit 05a854cd2af53ca822ee8b249b0b3bbe44f94675 
 + Subproject commit 2766f9a293f3e1da650693991d16a43a089ae65b 
 diff - - git a / patches / minecraft / net / minecraft / client / audio / SoundPool . java . patch b / patches / minecraft / net / minecraft / client / audio / SoundPool . java . patch 
 deleted file mode 100644 
 index 996a895 . . 0000000 
 - - - a / patches / minecraft / net / minecraft / client / audio / SoundPool . java . patch 
 + + + / dev / null 
 @ @ - 1 , 53 + 0 , 0 @ @ 
 - - - - . . / src _ base / minecraft / net / minecraft / client / audio / SoundPool . java 
 - + + + . . / src _ work / minecraft / net / minecraft / client / audio / SoundPool . java 
 - @ @ - 4 , 6 + 4 , 7 @ @ 
 - import cpw . mods . fml . relauncher . SideOnly ; 
 - import java . io . File ; 
 - import java . net . MalformedURLException ; 
 - + import java . net . URL ; 
 - import java . util . ArrayList ; 
 - import java . util . HashMap ; 
 - import java . util . List ; 
 - @ @ - 36 , 6 + 37 , 26 @ @ 
 - * / 
 - public SoundPoolEntry addSound ( String par1Str , File par2File ) 
 - { 
 - + try 
 - + { 
 - + return addSound ( par1Str , par2File . toURI ( ) . toURL ( ) ) ; 
 - + } 
 - + catch ( MalformedURLException ex ) 
 - + { 
 - + ex . printStackTrace ( ) ; 
 - + throw new RuntimeException ( ex ) ; 
 - + } 
 - + } 
 - + 
 - + / * * 
 - + * URL version of addSound , as the back - end sound engine has full support for various types of URLs 
 - + * 
 - + * @ param par1Str The name of the sound to add 
 - + * @ param url The url of the sound resource 
 - + * @ return A SoundPoolEntry for the newly added sound 
 - + * / 
 - + public SoundPoolEntry addSound ( String par1Str , URL url ) 
 - + { 
 - try 
 - { 
 - String s1 = par1Str ; 
 - @ @ - 56 , 13 + 77 , 13 @ @ 
 - this . nameToSoundPoolEntriesMapping . put ( par1Str , new ArrayList ( ) ) ; 
 - } 
 - 
 - - SoundPoolEntry soundpoolentry = new SoundPoolEntry ( s1 , par2File . toURI ( ) . toURL ( ) ) ; 
 - + SoundPoolEntry soundpoolentry = new SoundPoolEntry ( s1 , url ) ; 
 - ( ( List ) this . nameToSoundPoolEntriesMapping . get ( par1Str ) ) . add ( soundpoolentry ) ; 
 - this . allSoundPoolEntries . add ( soundpoolentry ) ; 
 - + + this . numberOfSoundPoolEntries ; 
 - return soundpoolentry ; 
 - } 
 - - catch ( MalformedURLException malformedurlexception ) 
 - + catch ( Exception malformedurlexception ) 
 - { 
 - malformedurlexception . printStackTrace ( ) ; 
 - throw new RuntimeException ( malformedurlexception ) ; 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / RunnableTitleScreen . java . patch b / patches / minecraft / net / minecraft / client / gui / RunnableTitleScreen . java . patch 
 deleted file mode 100644 
 index 23c473d . . 0000000 
 - - - a / patches / minecraft / net / minecraft / client / gui / RunnableTitleScreen . java . patch 
 + + + / dev / null 
 @ @ - 1 , 13 + 0 , 0 @ @ 
 - - - - . . / src _ base / minecraft / net / minecraft / client / gui / RunnableTitleScreen . java 
 - + + + . . / src _ work / minecraft / net / minecraft / client / gui / RunnableTitleScreen . java 
 - @ @ - 40 , 6 + 40 , 10 @ @ 
 - } 
 - } 
 - } 
 - + catch ( java . io . FileNotFoundException e ) 
 - + { 
 - + / / NomNomNom , Don ' t print the error when the flag isn ' t found . 
 - + } 
 - catch ( Throwable throwable ) 
 - { 
 - throwable . printStackTrace ( ) ; 
 diff - - git a / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch b / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch 
 deleted file mode 100644 
 index cdc1e66 . . 0000000 
 - - - a / patches / minecraft / net / minecraft / client / renderer / texture / TextureManager . java . patch 
 + + + / dev / null 
 @ @ - 1 , 50 + 0 , 0 @ @ 
 - - - - . . / src _ base / minecraft / net / minecraft / client / renderer / texture / TextureManager . java 
 - + + + . . / src _ work / minecraft / net / minecraft / client / renderer / texture / TextureManager . java 
 - @ @ - 66 , 17 + 66 , 42 @ @ 
 - 
 - public List createTexture ( String par1Str ) 
 - { 
 - + return createNewTexture ( par1Str , par1Str , null ) ; 
 - + } 
 - + 
 - + public List createNewTexture ( String textureName , String textureFile , TextureStitched stitched ) 
 - + { 
 - + String par1Str = textureFile ; 
 - ArrayList arraylist = new ArrayList ( ) ; 
 - ITexturePack itexturepack = Minecraft . getMinecraft ( ) . texturePackList . getSelectedTexturePack ( ) ; 
 - 
 - try 
 - { 
 - - BufferedImage bufferedimage = ImageIO . read ( itexturepack . getResourceAsStream ( " / " + par1Str ) ) ; 
 - - int i = bufferedimage . getHeight ( ) ; 
 - - int j = bufferedimage . getWidth ( ) ; 
 - - String s1 = this . getBasename ( par1Str ) ; 
 - + BufferedImage bufferedimage = null ; 
 - + int i = 0 ; 
 - + int j = 0 ; 
 - + FileNotFoundException fnfe = null ; 
 - + try 
 - + { 
 - + bufferedimage = ImageIO . read ( itexturepack . getResourceAsStream ( " / " + textureFile ) ) ; 
 - + i = bufferedimage . getHeight ( ) ; 
 - + j = bufferedimage . getWidth ( ) ; 
 - + } 
 - + catch ( FileNotFoundException e ) 
 - + { 
 - + fnfe = e ; 
 - + } 
 - + String s1 = textureName ; 
 - 
 - - if ( this . hasAnimationTxt ( par1Str , itexturepack ) ) 
 - + if ( stitched ! = null & & stitched . loadTexture ( this , itexturepack , textureName , textureFile , bufferedimage , arraylist ) ) 
 - + { 
 - + ; 
 - + } 
 - + else if ( fnfe ! = null ) 
 - + { 
 - + throw fnfe ; 
 - + } 
 - + else if ( this . hasAnimationTxt ( par1Str , itexturepack ) ) 
 - { 
 - int k = j ; 
 - int l = j ; 
 diff - - git a / patches / minecraft / net / minecraft / client / renderer / texture / TextureStitched . java . patch b / patches / minecraft / net / minecraft / client / renderer / texture / TextureStitched . java . patch 
 deleted file mode 100644 
 index 2337b1e . . 0000000 
 - - - a / patches / minecraft / net / minecraft / client / renderer / texture / TextureStitched . java . patch 
 + + + / dev / null 
 @ @ - 1 , 45 + 0 , 0 @ @ 
 - - - - . . / src _ base / minecraft / net / minecraft / client / renderer / texture / TextureStitched . java 
 - + + + . . / src _ work / minecraft / net / minecraft / client / renderer / texture / TextureStitched . java 
 - @ @ - 3 , 9 + 3 , 13 @ @ 
 - import cpw . mods . fml . client . TextureFXManager ; 
 - import cpw . mods . fml . relauncher . Side ; 
 - import cpw . mods . fml . relauncher . SideOnly ; 
 - + 
 - + import java . awt . image . BufferedImage ; 
 - import java . io . BufferedReader ; 
 - import java . util . ArrayList ; 
 - import java . util . List ; 
 - + 
 - + import net . minecraft . client . texturepacks . ITexturePack ; 
 - import net . minecraft . util . Icon ; 
 - import net . minecraft . util . Tuple ; 
 - 
 - @ @ - 252 , 4 + 256 , 28 @ @ 
 - t . createAndUploadTexture ( ) ; 
 - } 
 - } 
 - + 
 - + / / = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
 - + / / Forge Start 
 - + / / = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
 - + / * * 
 - + * Called when texture packs are refreshed , from TextureManager . createNewTexture , 
 - + * allows for finer control over loading the animation lists and verification of the image . 
 - + * If the return value from this is true , no further loading will be done by vanilla code . 
 - + * 
 - + * You need to add all Texture ' s to the textures argument . At the end of this function at least one 
 - + * entry should be in that argument , or a error should of been thrown . 
 - + * 
 - + * @ param manager The invoking manager 
 - + * @ param texturepack Current texture pack 
 - + * @ param name The name of the texture 
 - + * @ param fileName Resource path for this texture 
 - + * @ param image Buffered image of the loaded resource 
 - + * @ param textures ArrayList of element type Texture , split textures should be added to this list for the stitcher to handle . 
 - + * @ return Return true to skip further vanilla texture loading for this texture 
 - + * / 
 - + public boolean loadTexture ( TextureManager manager , ITexturePack texturepack , String name , String fileName , BufferedImage image , ArrayList textures ) 
 - + { 
 - + return false ; 
 - + } 
 - } 
 diff - - git a / patches / minecraft / net / minecraft / util / ChunkCoordinates . java . patch b / patches / minecraft / net / minecraft / util / ChunkCoordinates . java . patch 
 deleted file mode 100644 
 index df4f80f . . 0000000 
 - - - a / patches / minecraft / net / minecraft / util / ChunkCoordinates . java . patch 
 + + + / dev / null 
 @ @ - 1 , 17 + 0 , 0 @ @ 
 - - - - . . / src _ base / minecraft / net / minecraft / util / ChunkCoordinates . java 
 - + + + . . / src _ work / minecraft / net / minecraft / util / ChunkCoordinates . java 
 - @ @ - 64 , 10 + 64 , 10 @ @ 
 - * / 
 - public float getDistanceSquared ( int par1 , int par2 , int par3 ) 
 - { 
 - - int l = this . posX - par1 ; 
 - - int i1 = this . posY - par2 ; 
 - - int j1 = this . posZ - par3 ; 
 - - return ( float ) ( l * l + i1 * i1 + j1 * j1 ) ; 
 - + float l = this . posX - par1 ; 
 - + float i1 = this . posY - par2 ; 
 - + float j1 = this . posZ - par3 ; 
 - + return l * l + i1 * i1 + j1 * j1 ; 
 - } 
 - 
 - / * * 
 diff - - git a / patches / minecraft / net / minecraft / util / ThreadDownloadResources . java . patch b / patches / minecraft / net / minecraft / util / ThreadDownloadResources . java . patch 
 deleted file mode 100644 
 index cf4942a . . 0000000 
 - - - a / patches / minecraft / net / minecraft / util / ThreadDownloadResources . java . patch 
 + + + / dev / null 
 @ @ - 1 , 37 + 0 , 0 @ @ 
 - - - - . . / src _ base / minecraft / net / minecraft / util / ThreadDownloadResources . java 
 - + + + . . / src _ work / minecraft / net / minecraft / util / ThreadDownloadResources . java 
 - @ @ - 8 , 6 + 8 , 8 @ @ 
 - import java . io . FileOutputStream ; 
 - import java . io . IOException ; 
 - import java . net . URL ; 
 - + import java . net . URLConnection ; 
 - + 
 - import javax . xml . parsers . DocumentBuilder ; 
 - import javax . xml . parsers . DocumentBuilderFactory ; 
 - import net . minecraft . client . Minecraft ; 
 - @ @ - 48 , 7 + 50 , 11 @ @ 
 - URL url = new URL ( " http : / / s3 . amazonaws . com / MinecraftResources / " ) ; 
 - DocumentBuilderFactory documentbuilderfactory = DocumentBuilderFactory . newInstance ( ) ; 
 - DocumentBuilder documentbuilder = documentbuilderfactory . newDocumentBuilder ( ) ; 
 - - Document document = documentbuilder . parse ( url . openStream ( ) ) ; 
 - + / / Add a timeout of 60 seconds to getting the list , MC stalls without sound for some users . 
 - + URLConnection con = url . openConnection ( ) ; 
 - + con . setConnectTimeout ( 60000 ) ; 
 - + con . setReadTimeout ( 60000 ) ; 
 - + Document document = documentbuilder . parse ( con . getInputStream ( ) ) ; 
 - NodeList nodelist = document . getElementsByTagName ( " Contents " ) ; 
 - 
 - for ( int i = 0 ; i < 2 ; + + i ) 
 - @ @ - 168 , 7 + 174 , 11 @ @ 
 - private void downloadResource ( URL par1URL , File par2File , long par3 ) throws IOException 
 - { 
 - byte [ ] abyte = new byte [ 4096 ] ; 
 - - DataInputStream datainputstream = new DataInputStream ( par1URL . openStream ( ) ) ; 
 - + / / Add a timeout of 60 seconds to getting the list , MC stalls without sound for some users . 
 - + URLConnection con = par1URL . openConnection ( ) ; 
 - + con . setConnectTimeout ( 60000 ) ; 
 - + con . setReadTimeout ( 60000 ) ; 
 - + DataInputStream datainputstream = new DataInputStream ( con . getInputStream ( ) ) ; 
 - DataOutputStream dataoutputstream = new DataOutputStream ( new FileOutputStream ( par2File ) ) ; 
 - boolean flag = false ; 
 -
