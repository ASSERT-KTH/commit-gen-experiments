BLEU SCORE: 6.992295190747032E-7

TEST MSG: ServerPinger
GENERATED MSG: PlayerManager , PlayerProfileCache , ServerConfigurationManager , NetHandlerHandshakeTCP rejects fixed ; ItemInWorldManager patch error fixed .

TEST DIFF (one line): diff - - git a / patches . mcp / minecraft / net / minecraft / client / network / ServerPinger . java . patch b / patches . mcp / minecraft / net / minecraft / client / network / ServerPinger . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 9323892 <nl> - - - / dev / null <nl> + + + b / patches . mcp / minecraft / net / minecraft / client / network / ServerPinger . java . patch <nl> @ @ - 0 , 0 + 1 , 10 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / network / ServerPinger . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / network / ServerPinger . java <nl> + @ @ - 150 , 6 + 150 , 7 @ @ <nl> + server . setBase64EncodedIconData ( ( String ) null ) ; <nl> + } <nl> + <nl> + + net . minecraftforge . fml . client . FMLClientHandler . instance ( ) . bindServerListData ( server , serverstatusresponse ) ; <nl> + this . field _ 175092 _ e = Minecraft . getSystemTime ( ) ; <nl> + networkmanager . sendPacket ( new CPacketPing ( this . field _ 175092 _ e ) ) ; <nl> + this . field _ 147403 _ d = true ; <nl> diff - - git a / patches . mcp / minecraft / net / minecraft / server / management / PlayerList . java . patch b / patches . mcp / minecraft / net / minecraft / server / management / PlayerList . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 8ee09c0 <nl> - - - / dev / null <nl> + + + b / patches . mcp / minecraft / net / minecraft / server / management / PlayerList . java . patch <nl> @ @ - 0 , 0 + 1 , 229 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / server / management / PlayerList . java <nl> + + + + . . / src - work / minecraft / net / minecraft / server / management / PlayerList . java <nl> + @ @ - 101 , 7 + 101 , 7 @ @ <nl> + this . maxPlayers = 8 ; <nl> + } <nl> + <nl> + - public void initializeConnectionToPlayer ( NetworkManager netManager , EntityPlayerMP playerIn ) <nl> + + public void initializeConnectionToPlayer ( NetworkManager netManager , EntityPlayerMP playerIn , NetHandlerPlayServer nethandlerplayserver ) <nl> + { <nl> + GameProfile gameprofile = playerIn . getGameProfile ( ) ; <nl> + PlayerProfileCache playerprofilecache = this . mcServer . getPlayerProfileCache ( ) ; <nl> + @ @ - 110 , 6 + 110 , 17 @ @ <nl> + playerprofilecache . addEntry ( gameprofile ) ; <nl> + NBTTagCompound nbttagcompound = this . readPlayerDataFromFile ( playerIn ) ; <nl> + playerIn . setWorld ( this . mcServer . worldServerForDimension ( playerIn . dimension ) ) ; <nl> + + <nl> + + World playerWorld = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; <nl> + + if ( playerWorld = = null ) <nl> + + { <nl> + + playerIn . dimension = 0 ; <nl> + + playerWorld = this . mcServer . worldServerForDimension ( 0 ) ; <nl> + + BlockPos spawnPoint = playerWorld . provider . getRandomizedSpawnPoint ( ) ; <nl> + + playerIn . setPosition ( spawnPoint . getX ( ) , spawnPoint . getY ( ) , spawnPoint . getZ ( ) ) ; <nl> + + } <nl> + + <nl> + + playerIn . setWorld ( playerWorld ) ; <nl> + playerIn . theItemInWorldManager . setWorld ( ( WorldServer ) playerIn . worldObj ) ; <nl> + String s1 = " local " ; <nl> + <nl> + @ @ - 123 , 7 + 134 , 7 @ @ <nl> + WorldInfo worldinfo = worldserver . getWorldInfo ( ) ; <nl> + BlockPos blockpos = worldserver . getSpawnPoint ( ) ; <nl> + this . setPlayerGameTypeBasedOnOther ( playerIn , ( EntityPlayerMP ) null , worldserver ) ; <nl> + - NetHandlerPlayServer nethandlerplayserver = new NetHandlerPlayServer ( this . mcServer , netManager , playerIn ) ; <nl> + + playerIn . playerNetServerHandler = nethandlerplayserver ; <nl> + nethandlerplayserver . sendPacket ( new SPacketJoinGame ( playerIn . getEntityId ( ) , playerIn . theItemInWorldManager . getGameType ( ) , worldinfo . isHardcoreModeEnabled ( ) , worldserver . provider . func _ 186058 _ p ( ) . func _ 186068 _ a ( ) , worldserver . getDifficulty ( ) , this . getMaxPlayers ( ) , worldinfo . getTerrainType ( ) , worldserver . getGameRules ( ) . getBoolean ( " reducedDebugInfo " ) ) ) ; <nl> + nethandlerplayserver . sendPacket ( new SPacketCustomPayload ( " MC | Brand " , ( new PacketBuffer ( Unpooled . buffer ( ) ) ) . writeString ( this . getServerInstance ( ) . getServerModName ( ) ) ) ) ; <nl> + nethandlerplayserver . sendPacket ( new SPacketServerDifficulty ( worldinfo . getDifficulty ( ) , worldinfo . isDifficultyLocked ( ) ) ) ; <nl> + @ @ - 213 , 6 + 224 , 7 @ @ <nl> + } <nl> + <nl> + playerIn . addSelfToInternalCraftingInventory ( ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerLoggedIn ( playerIn ) ; <nl> + } <nl> + <nl> + protected void sendScoreboard ( ServerScoreboard scoreboardIn , EntityPlayerMP playerIn ) <nl> + @ @ - 302 , 6 + 314 , 7 @ @ <nl> + nbttagcompound1 = this . mcServer . func _ 184110 _ aI ( ) . func _ 188257 _ a ( FixTypes . PLAYER , nbttagcompound ) ; <nl> + playerIn . readFromNBT ( nbttagcompound1 ) ; <nl> + logger . debug ( " loading single player " ) ; <nl> + + net . minecraftforge . event . ForgeEventFactory . firePlayerLoadingEvent ( playerIn , this . playerNBTManagerObj , playerIn . getUniqueID ( ) . toString ( ) ) ; <nl> + } <nl> + else <nl> + { <nl> + @ @ - 311 , 8 + 324 , 24 @ @ <nl> + return nbttagcompound1 ; <nl> + } <nl> + <nl> + + public NBTTagCompound getPlayerNBT ( EntityPlayerMP player ) <nl> + + { <nl> + + / / Hacky method to allow loading the NBT for a player prior to login <nl> + + NBTTagCompound nbttagcompound = this . mcServer . worldServers [ 0 ] . getWorldInfo ( ) . getPlayerNBTTagCompound ( ) ; <nl> + + if ( player . getName ( ) . equals ( this . mcServer . getServerOwner ( ) ) & & nbttagcompound ! = null ) <nl> + + { <nl> + + return nbttagcompound ; <nl> + + } <nl> + + else <nl> + + { <nl> + + return ( ( net . minecraft . world . storage . SaveHandler ) this . playerNBTManagerObj ) . getPlayerNBT ( player ) ; <nl> + + } <nl> + + } <nl> + + <nl> + protected void writePlayerData ( EntityPlayerMP playerIn ) <nl> + { <nl> + + if ( playerIn . playerNetServerHandler = = null ) return ; <nl> + + <nl> + this . playerNBTManagerObj . writePlayerData ( playerIn ) ; <nl> + StatisticsFile statisticsfile = ( StatisticsFile ) this . playerStatFiles . get ( playerIn . getUniqueID ( ) ) ; <nl> + <nl> + @ @ - 334 , 6 + 363 , 7 @ @ <nl> + playerIn . playerNetServerHandler . sendPacket ( new SPacketPlayerListItem ( SPacketPlayerListItem . Action . ADD _ PLAYER , new EntityPlayerMP [ ] { ( EntityPlayerMP ) this . playerEntityList . get ( i ) } ) ) ; <nl> + } <nl> + <nl> + + net . minecraftforge . common . chunkio . ChunkIOExecutor . adjustPoolSize ( this . getCurrentPlayerCount ( ) ) ; <nl> + worldserver . spawnEntityInWorld ( playerIn ) ; <nl> + this . preparePlayer ( playerIn , ( WorldServer ) null ) ; <nl> + } <nl> + @ @ - 345 , 6 + 375 , 7 @ @ <nl> + <nl> + public void playerLoggedOut ( EntityPlayerMP playerIn ) <nl> + { <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerLoggedOut ( playerIn ) ; <nl> + WorldServer worldserver = playerIn . getServerForPlayer ( ) ; <nl> + playerIn . triggerAchievement ( StatList . leaveGameStat ) ; <nl> + this . writePlayerData ( playerIn ) ; <nl> + @ @ - 379 , 6 + 410 , 7 @ @ <nl> + this . uuidToPlayerMap . remove ( uuid ) ; <nl> + this . playerStatFiles . remove ( uuid ) ; <nl> + } <nl> + + net . minecraftforge . common . chunkio . ChunkIOExecutor . adjustPoolSize ( this . getCurrentPlayerCount ( ) ) ; <nl> + <nl> + this . sendPacketToAllPlayers ( new SPacketPlayerListItem ( SPacketPlayerListItem . Action . REMOVE _ PLAYER , new EntityPlayerMP [ ] { playerIn } ) ) ; <nl> + } <nl> + @ @ - 462 , 13 + 494 , 23 @ @ <nl> + <nl> + public EntityPlayerMP recreatePlayerEntity ( EntityPlayerMP playerIn , int dimension , boolean conqueredEnd ) <nl> + { <nl> + + World world = mcServer . worldServerForDimension ( dimension ) ; <nl> + + if ( world = = null ) <nl> + + { <nl> + + dimension = 0 ; <nl> + + } <nl> + + else if ( ! world . provider . canRespawnHere ( ) ) <nl> + + { <nl> + + dimension = world . provider . getRespawnDimension ( playerIn ) ; <nl> + + } <nl> + + <nl> + playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . removePlayerFromTrackers ( playerIn ) ; <nl> + playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . untrackEntity ( playerIn ) ; <nl> + playerIn . getServerForPlayer ( ) . func _ 184164 _ w ( ) . removePlayer ( playerIn ) ; <nl> + this . playerEntityList . remove ( playerIn ) ; <nl> + this . mcServer . worldServerForDimension ( playerIn . dimension ) . removePlayerEntityDangerously ( playerIn ) ; <nl> + - BlockPos blockpos = playerIn . getBedLocation ( ) ; <nl> + - boolean flag = playerIn . isSpawnForced ( ) ; <nl> + + BlockPos blockpos = playerIn . getBedLocation ( dimension ) ; <nl> + + boolean flag = playerIn . isSpawnForced ( dimension ) ; <nl> + playerIn . dimension = dimension ; <nl> + PlayerInteractionManager playerinteractionmanager ; <nl> + <nl> + @ @ - 484 , 7 + 526 , 8 @ @ <nl> + EntityPlayerMP entityplayermp = new EntityPlayerMP ( this . mcServer , this . mcServer . worldServerForDimension ( playerIn . dimension ) , playerIn . getGameProfile ( ) , playerinteractionmanager ) ; <nl> + entityplayermp . playerNetServerHandler = playerIn . playerNetServerHandler ; <nl> + entityplayermp . clonePlayer ( playerIn , conqueredEnd ) ; <nl> + - entityplayermp . setEntityId ( playerIn . getEntityId ( ) ) ; <nl> + + entityplayermp . dimension = dimension ; <nl> + + entityplayermp . setEntityId ( playerIn . getEntityId ( ) ) ; <nl> + entityplayermp . func _ 174817 _ o ( playerIn ) ; <nl> + entityplayermp . func _ 184819 _ a ( playerIn . func _ 184591 _ cq ( ) ) ; <nl> + <nl> + @ @ - 531 , 6 + 574 , 7 @ @ <nl> + this . uuidToPlayerMap . put ( entityplayermp . getUniqueID ( ) , entityplayermp ) ; <nl> + entityplayermp . addSelfToInternalCraftingInventory ( ) ; <nl> + entityplayermp . setHealth ( entityplayermp . getHealth ( ) ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerRespawnEvent ( entityplayermp ) ; <nl> + return entityplayermp ; <nl> + } <nl> + <nl> + @ @ - 545 , 15 + 589 , 20 @ @ <nl> + <nl> + public void func _ 187242 _ a ( EntityPlayerMP p _ 187242 _ 1 _ , int p _ 187242 _ 2 _ ) <nl> + { <nl> + + transferPlayerToDimension ( p _ 187242 _ 1 _ , p _ 187242 _ 2 _ , mcServer . worldServerForDimension ( p _ 187242 _ 2 _ ) . getDefaultTeleporter ( ) ) ; <nl> + + } <nl> + + <nl> + + public void transferPlayerToDimension ( EntityPlayerMP p _ 187242 _ 1 _ , int p _ 187242 _ 2 _ , net . minecraft . world . Teleporter teleporter ) <nl> + + { <nl> + int i = p _ 187242 _ 1 _ . dimension ; <nl> + WorldServer worldserver = this . mcServer . worldServerForDimension ( p _ 187242 _ 1 _ . dimension ) ; <nl> + p _ 187242 _ 1 _ . dimension = p _ 187242 _ 2 _ ; <nl> + WorldServer worldserver1 = this . mcServer . worldServerForDimension ( p _ 187242 _ 1 _ . dimension ) ; <nl> + - p _ 187242 _ 1 _ . playerNetServerHandler . sendPacket ( new SPacketRespawn ( p _ 187242 _ 1 _ . dimension , p _ 187242 _ 1 _ . worldObj . getDifficulty ( ) , p _ 187242 _ 1 _ . worldObj . getWorldInfo ( ) . getTerrainType ( ) , p _ 187242 _ 1 _ . theItemInWorldManager . getGameType ( ) ) ) ; <nl> + + p _ 187242 _ 1 _ . playerNetServerHandler . sendPacket ( new SPacketRespawn ( p _ 187242 _ 1 _ . dimension , worldserver1 . getDifficulty ( ) , worldserver1 . getWorldInfo ( ) . getTerrainType ( ) , p _ 187242 _ 1 _ . theItemInWorldManager . getGameType ( ) ) ) ; <nl> + this . func _ 187243 _ f ( p _ 187242 _ 1 _ ) ; <nl> + worldserver . removePlayerEntityDangerously ( p _ 187242 _ 1 _ ) ; <nl> + p _ 187242 _ 1 _ . isDead = false ; <nl> + - this . transferEntityToWorld ( p _ 187242 _ 1 _ , i , worldserver , worldserver1 ) ; <nl> + + this . transferEntityToWorld ( p _ 187242 _ 1 _ , i , worldserver , worldserver1 , teleporter ) ; <nl> + this . preparePlayer ( p _ 187242 _ 1 _ , worldserver ) ; <nl> + p _ 187242 _ 1 _ . playerNetServerHandler . setPlayerLocation ( p _ 187242 _ 1 _ . posX , p _ 187242 _ 1 _ . posY , p _ 187242 _ 1 _ . posZ , p _ 187242 _ 1 _ . rotationYaw , p _ 187242 _ 1 _ . rotationPitch ) ; <nl> + p _ 187242 _ 1 _ . theItemInWorldManager . setWorld ( worldserver1 ) ; <nl> + @ @ - 565 , 17 + 614 , 27 @ @ <nl> + { <nl> + p _ 187242 _ 1 _ . playerNetServerHandler . sendPacket ( new SPacketEntityEffect ( p _ 187242 _ 1 _ . getEntityId ( ) , potioneffect ) ) ; <nl> + } <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerChangedDimensionEvent ( p _ 187242 _ 1 _ , i , p _ 187242 _ 2 _ ) ; <nl> + } <nl> + <nl> + public void transferEntityToWorld ( Entity entityIn , int p _ 82448 _ 2 _ , WorldServer p _ 82448 _ 3 _ , WorldServer p _ 82448 _ 4 _ ) <nl> + { <nl> + - double d0 = entityIn . posX ; <nl> + - double d1 = entityIn . posZ ; <nl> + + transferEntityToWorld ( entityIn , p _ 82448 _ 2 _ , p _ 82448 _ 3 _ , p _ 82448 _ 4 _ , p _ 82448 _ 4 _ . getDefaultTeleporter ( ) ) ; <nl> + + } <nl> + + <nl> + + @ SuppressWarnings ( " unused " ) <nl> + + public void transferEntityToWorld ( Entity entityIn , int p _ 82448 _ 2 _ , WorldServer p _ 82448 _ 3 _ , WorldServer p _ 82448 _ 4 _ , net . minecraft . world . Teleporter teleporter ) <nl> + + { <nl> + + net . minecraft . world . WorldProvider pOld = p _ 82448 _ 3 _ . provider ; <nl> + + net . minecraft . world . WorldProvider pNew = p _ 82448 _ 4 _ . provider ; <nl> + + double moveFactor = pOld . getMovementFactor ( ) / pNew . getMovementFactor ( ) ; <nl> + + double d0 = entityIn . posX * moveFactor ; <nl> + + double d1 = entityIn . posZ * moveFactor ; <nl> + double d2 = 8 . 0D ; <nl> + float f = entityIn . rotationYaw ; <nl> + p _ 82448 _ 3 _ . theProfiler . startSection ( " moving " ) ; <nl> + <nl> + - if ( entityIn . dimension = = - 1 ) <nl> + + if ( false & & entityIn . dimension = = - 1 ) <nl> + { <nl> + d0 = MathHelper . clamp _ double ( d0 / d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minX ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxX ( ) - 16 . 0D ) ; <nl> + d1 = MathHelper . clamp _ double ( d1 / d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minZ ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxZ ( ) - 16 . 0D ) ; <nl> + @ @ - 586 , 7 + 645 , 7 @ @ <nl> + p _ 82448 _ 3 _ . updateEntityWithOptionalForce ( entityIn , false ) ; <nl> + } <nl> + } <nl> + - else if ( entityIn . dimension = = 0 ) <nl> + + else if ( false & & entityIn . dimension = = 0 ) <nl> + { <nl> + d0 = MathHelper . clamp _ double ( d0 * d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minX ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxX ( ) - 16 . 0D ) ; <nl> + d1 = MathHelper . clamp _ double ( d1 * d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minZ ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxZ ( ) - 16 . 0D ) ; <nl> + @ @ - 597 , 7 + 656 , 8 @ @ <nl> + p _ 82448 _ 3 _ . updateEntityWithOptionalForce ( entityIn , false ) ; <nl> + } <nl> + } <nl> + - else <nl> + + <nl> + + if ( entityIn . dimension = = 1 ) <nl> + { <nl> + BlockPos blockpos ; <nl> + <nl> + @ @ - 632 , 7 + 692 , 7 @ @ <nl> + if ( entityIn . isEntityAlive ( ) ) <nl> + { <nl> + entityIn . setLocationAndAngles ( d0 , entityIn . posY , d1 , entityIn . rotationYaw , entityIn . rotationPitch ) ; <nl> + - p _ 82448 _ 4 _ . getDefaultTeleporter ( ) . placeInPortal ( entityIn , f ) ; <nl> + + teleporter . placeInPortal ( entityIn , f ) ; <nl> + p _ 82448 _ 4 _ . spawnEntityInWorld ( entityIn ) ; <nl> + p _ 82448 _ 4 _ . updateEntityWithOptionalForce ( entityIn , false ) ; <nl> + } <nl> diff - - git a / rejects / minecraft / net / minecraft / client / network / OldServerPinger . java . patch . rej b / rejects / minecraft / net / minecraft / client / network / OldServerPinger . java . patch . rej <nl> deleted file mode 100644 <nl> index b9e4af4 . . 0000000 <nl> - - - a / rejects / minecraft / net / minecraft / client / network / OldServerPinger . java . patch . rej <nl> + + + / dev / null <nl> @ @ - 1 , 9 + 0 , 0 @ @ <nl> - + + + + REJECTED PATCH 1 <nl> - server . setBase64EncodedIconData ( ( String ) null ) ; <nl> - } <nl> - <nl> - + net . minecraftforge . fml . client . FMLClientHandler . instance ( ) . bindServerListData ( server , serverstatusresponse ) ; <nl> - this . field _ 175092 _ e = Minecraft . getSystemTime ( ) ; <nl> - networkmanager . sendPacket ( new C01PacketPing ( this . field _ 175092 _ e ) ) ; <nl> - this . field _ 147403 _ d = true ; <nl> - + + + + END PATCH <nl> diff - - git a / rejects / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch . rej b / rejects / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch . rej <nl> deleted file mode 100644 <nl> index 44d627c . . 0000000 <nl> - - - a / rejects / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch . rej <nl> + + + / dev / null <nl> @ @ - 1 , 237 + 0 , 0 @ @ <nl> - + + + + REJECTED PATCH 1 <nl> - this . maxPlayers = 8 ; <nl> - } <nl> - <nl> - - public void initializeConnectionToPlayer ( NetworkManager netManager , EntityPlayerMP playerIn ) <nl> - + public void initializeConnectionToPlayer ( NetworkManager netManager , EntityPlayerMP playerIn , NetHandlerPlayServer nethandlerplayserver ) <nl> - { <nl> - GameProfile gameprofile = playerIn . getGameProfile ( ) ; <nl> - PlayerProfileCache playerprofilecache = this . mcServer . getPlayerProfileCache ( ) ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 2 <nl> - playerprofilecache . addEntry ( gameprofile ) ; <nl> - NBTTagCompound nbttagcompound = this . readPlayerDataFromFile ( playerIn ) ; <nl> - playerIn . setWorld ( this . mcServer . worldServerForDimension ( playerIn . dimension ) ) ; <nl> - + <nl> - + World playerWorld = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; <nl> - + if ( playerWorld = = null ) <nl> - + { <nl> - + playerIn . dimension = 0 ; <nl> - + playerWorld = this . mcServer . worldServerForDimension ( 0 ) ; <nl> - + BlockPos spawnPoint = playerWorld . provider . getRandomizedSpawnPoint ( ) ; <nl> - + playerIn . setPosition ( spawnPoint . getX ( ) , spawnPoint . getY ( ) , spawnPoint . getZ ( ) ) ; <nl> - + } <nl> - + <nl> - + playerIn . setWorld ( playerWorld ) ; <nl> - playerIn . theItemInWorldManager . setWorld ( ( WorldServer ) playerIn . worldObj ) ; <nl> - String s1 = " local " ; <nl> - <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 3 <nl> - WorldInfo worldinfo = worldserver . getWorldInfo ( ) ; <nl> - BlockPos blockpos = worldserver . getSpawnPoint ( ) ; <nl> - this . setPlayerGameTypeBasedOnOther ( playerIn , ( EntityPlayerMP ) null , worldserver ) ; <nl> - - NetHandlerPlayServer nethandlerplayserver = new NetHandlerPlayServer ( this . mcServer , netManager , playerIn ) ; <nl> - + playerIn . playerNetServerHandler = nethandlerplayserver ; <nl> - nethandlerplayserver . sendPacket ( new S01PacketJoinGame ( playerIn . getEntityId ( ) , playerIn . theItemInWorldManager . getGameType ( ) , worldinfo . isHardcoreModeEnabled ( ) , worldserver . provider . getDimensionId ( ) , worldserver . getDifficulty ( ) , this . getMaxPlayers ( ) , worldinfo . getTerrainType ( ) , worldserver . getGameRules ( ) . getBoolean ( " reducedDebugInfo " ) ) ) ; <nl> - nethandlerplayserver . sendPacket ( new S3FPacketCustomPayload ( " MC | Brand " , ( new PacketBuffer ( Unpooled . buffer ( ) ) ) . writeString ( this . getServerInstance ( ) . getServerModName ( ) ) ) ) ; <nl> - nethandlerplayserver . sendPacket ( new S41PacketServerDifficulty ( worldinfo . getDifficulty ( ) , worldinfo . isDifficultyLocked ( ) ) ) ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 4 <nl> - <nl> - playerIn . addSelfToInternalCraftingInventory ( ) ; <nl> - <nl> - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerLoggedIn ( playerIn ) ; <nl> - if ( nbttagcompound ! = null & & nbttagcompound . hasKey ( " Riding " , 10 ) ) <nl> - { <nl> - Entity entity = EntityList . createEntityFromNBT ( nbttagcompound . getCompoundTag ( " Riding " ) , worldserver ) ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 5 <nl> - playerIn . readFromNBT ( nbttagcompound ) ; <nl> - nbttagcompound1 = nbttagcompound ; <nl> - logger . debug ( " loading single player " ) ; <nl> - + net . minecraftforge . event . ForgeEventFactory . firePlayerLoadingEvent ( playerIn , this . playerNBTManagerObj , playerIn . getUniqueID ( ) . toString ( ) ) ; <nl> - } <nl> - else <nl> - { <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 6 <nl> - return nbttagcompound1 ; <nl> - } <nl> - <nl> - + public NBTTagCompound getPlayerNBT ( EntityPlayerMP player ) <nl> - + { <nl> - + / / Hacky method to allow loading the NBT for a player prior to login <nl> - + NBTTagCompound nbttagcompound = this . mcServer . worldServers [ 0 ] . getWorldInfo ( ) . getPlayerNBTTagCompound ( ) ; <nl> - + if ( player . getName ( ) . equals ( this . mcServer . getServerOwner ( ) ) & & nbttagcompound ! = null ) <nl> - + { <nl> - + return nbttagcompound ; <nl> - + } <nl> - + else <nl> - + { <nl> - + return ( ( net . minecraft . world . storage . SaveHandler ) this . playerNBTManagerObj ) . getPlayerNBT ( player ) ; <nl> - + } <nl> - + } <nl> - protected void writePlayerData ( EntityPlayerMP playerIn ) <nl> - { <nl> - + if ( playerIn . playerNetServerHandler = = null ) return ; <nl> - + <nl> - this . playerNBTManagerObj . writePlayerData ( playerIn ) ; <nl> - StatisticsFile statisticsfile = ( StatisticsFile ) this . playerStatFiles . get ( playerIn . getUniqueID ( ) ) ; <nl> - <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 7 <nl> - this . uuidToPlayerMap . put ( playerIn . getUniqueID ( ) , playerIn ) ; <nl> - this . sendPacketToAllPlayers ( new S38PacketPlayerListItem ( S38PacketPlayerListItem . Action . ADD _ PLAYER , new EntityPlayerMP [ ] { playerIn } ) ) ; <nl> - WorldServer worldserver = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; <nl> - + net . minecraftforge . common . chunkio . ChunkIOExecutor . adjustPoolSize ( this . getCurrentPlayerCount ( ) ) ; <nl> - worldserver . spawnEntityInWorld ( playerIn ) ; <nl> - this . preparePlayer ( playerIn , ( WorldServer ) null ) ; <nl> - <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 8 <nl> - <nl> - public void playerLoggedOut ( EntityPlayerMP playerIn ) <nl> - { <nl> - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerLoggedOut ( playerIn ) ; <nl> - playerIn . triggerAchievement ( StatList . leaveGameStat ) ; <nl> - this . writePlayerData ( playerIn ) ; <nl> - WorldServer worldserver = playerIn . getServerForPlayer ( ) ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 9 <nl> - this . uuidToPlayerMap . remove ( uuid ) ; <nl> - this . playerStatFiles . remove ( uuid ) ; <nl> - } <nl> - + net . minecraftforge . common . chunkio . ChunkIOExecutor . adjustPoolSize ( this . getCurrentPlayerCount ( ) ) ; <nl> - <nl> - this . sendPacketToAllPlayers ( new S38PacketPlayerListItem ( S38PacketPlayerListItem . Action . REMOVE _ PLAYER , new EntityPlayerMP [ ] { playerIn } ) ) ; <nl> - } <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 10 <nl> - <nl> - public EntityPlayerMP recreatePlayerEntity ( EntityPlayerMP playerIn , int dimension , boolean conqueredEnd ) <nl> - { <nl> - + World world = mcServer . worldServerForDimension ( dimension ) ; <nl> - + if ( world = = null ) <nl> - + { <nl> - + dimension = 0 ; <nl> - + } <nl> - + else if ( ! world . provider . canRespawnHere ( ) ) <nl> - + { <nl> - + dimension = world . provider . getRespawnDimension ( playerIn ) ; <nl> - + } <nl> - + <nl> - playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . removePlayerFromTrackers ( playerIn ) ; <nl> - playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . untrackEntity ( playerIn ) ; <nl> - playerIn . getServerForPlayer ( ) . getPlayerManager ( ) . removePlayer ( playerIn ) ; <nl> - this . playerEntityList . remove ( playerIn ) ; <nl> - this . mcServer . worldServerForDimension ( playerIn . dimension ) . removePlayerEntityDangerously ( playerIn ) ; <nl> - - BlockPos blockpos = playerIn . getBedLocation ( ) ; <nl> - - boolean flag = playerIn . isSpawnForced ( ) ; <nl> - + BlockPos blockpos = playerIn . getBedLocation ( dimension ) ; <nl> - + boolean flag = playerIn . isSpawnForced ( dimension ) ; <nl> - playerIn . dimension = dimension ; <nl> - ItemInWorldManager iteminworldmanager ; <nl> - <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 11 <nl> - EntityPlayerMP entityplayermp = new EntityPlayerMP ( this . mcServer , this . mcServer . worldServerForDimension ( playerIn . dimension ) , playerIn . getGameProfile ( ) , iteminworldmanager ) ; <nl> - entityplayermp . playerNetServerHandler = playerIn . playerNetServerHandler ; <nl> - entityplayermp . clonePlayer ( playerIn , conqueredEnd ) ; <nl> - + entityplayermp . dimension = dimension ; <nl> - entityplayermp . setEntityId ( playerIn . getEntityId ( ) ) ; <nl> - entityplayermp . func _ 174817 _ o ( playerIn ) ; <nl> - WorldServer worldserver = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 12 <nl> - this . uuidToPlayerMap . put ( entityplayermp . getUniqueID ( ) , entityplayermp ) ; <nl> - entityplayermp . addSelfToInternalCraftingInventory ( ) ; <nl> - entityplayermp . setHealth ( entityplayermp . getHealth ( ) ) ; <nl> - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerRespawnEvent ( entityplayermp ) ; <nl> - return entityplayermp ; <nl> - } <nl> - <nl> - public void transferPlayerToDimension ( EntityPlayerMP playerIn , int dimension ) <nl> - { <nl> - + transferPlayerToDimension ( playerIn , dimension , mcServer . worldServerForDimension ( dimension ) . getDefaultTeleporter ( ) ) ; <nl> - + } <nl> - + <nl> - + public void transferPlayerToDimension ( EntityPlayerMP playerIn , int dimension , net . minecraft . world . Teleporter teleporter ) <nl> - + { <nl> - int i = playerIn . dimension ; <nl> - WorldServer worldserver = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; <nl> - playerIn . dimension = dimension ; <nl> - WorldServer worldserver1 = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; <nl> - - playerIn . playerNetServerHandler . sendPacket ( new S07PacketRespawn ( playerIn . dimension , playerIn . worldObj . getDifficulty ( ) , playerIn . worldObj . getWorldInfo ( ) . getTerrainType ( ) , playerIn . theItemInWorldManager . getGameType ( ) ) ) ; <nl> - + playerIn . playerNetServerHandler . sendPacket ( new S07PacketRespawn ( playerIn . dimension , worldserver1 . getDifficulty ( ) , worldserver1 . getWorldInfo ( ) . getTerrainType ( ) , playerIn . theItemInWorldManager . getGameType ( ) ) ) ; <nl> - worldserver . removePlayerEntityDangerously ( playerIn ) ; <nl> - playerIn . isDead = false ; <nl> - - this . transferEntityToWorld ( playerIn , i , worldserver , worldserver1 ) ; <nl> - + this . transferEntityToWorld ( playerIn , i , worldserver , worldserver1 , teleporter ) ; <nl> - this . preparePlayer ( playerIn , worldserver ) ; <nl> - playerIn . playerNetServerHandler . setPlayerLocation ( playerIn . posX , playerIn . posY , playerIn . posZ , playerIn . rotationYaw , playerIn . rotationPitch ) ; <nl> - playerIn . theItemInWorldManager . setWorld ( worldserver1 ) ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 13 <nl> - { <nl> - playerIn . playerNetServerHandler . sendPacket ( new S1DPacketEntityEffect ( playerIn . getEntityId ( ) , potioneffect ) ) ; <nl> - } <nl> - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerChangedDimensionEvent ( playerIn , i , dimension ) ; <nl> - } <nl> - <nl> - public void transferEntityToWorld ( Entity entityIn , int p _ 82448 _ 2 _ , WorldServer p _ 82448 _ 3 _ , WorldServer p _ 82448 _ 4 _ ) <nl> - { <nl> - - double d0 = entityIn . posX ; <nl> - - double d1 = entityIn . posZ ; <nl> - + transferEntityToWorld ( entityIn , p _ 82448 _ 2 _ , p _ 82448 _ 3 _ , p _ 82448 _ 4 _ , p _ 82448 _ 4 _ . getDefaultTeleporter ( ) ) ; <nl> - + } <nl> - + <nl> - + @ SuppressWarnings ( " unused " ) <nl> - + public void transferEntityToWorld ( Entity entityIn , int p _ 82448 _ 2 _ , WorldServer p _ 82448 _ 3 _ , WorldServer p _ 82448 _ 4 _ , net . minecraft . world . Teleporter teleporter ) <nl> - + { <nl> - + net . minecraft . world . WorldProvider pOld = p _ 82448 _ 3 _ . provider ; <nl> - + net . minecraft . world . WorldProvider pNew = p _ 82448 _ 4 _ . provider ; <nl> - + double moveFactor = pOld . getMovementFactor ( ) / pNew . getMovementFactor ( ) ; <nl> - + double d0 = entityIn . posX * moveFactor ; <nl> - + double d1 = entityIn . posZ * moveFactor ; <nl> - double d2 = 8 . 0D ; <nl> - float f = entityIn . rotationYaw ; <nl> - p _ 82448 _ 3 _ . theProfiler . startSection ( " moving " ) ; <nl> - <nl> - - if ( entityIn . dimension = = - 1 ) <nl> - + if ( false & & entityIn . dimension = = - 1 ) / / Forge Kill it but dont comment out so we can rename it . <nl> - { <nl> - d0 = MathHelper . clamp _ double ( d0 / d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minX ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxX ( ) - 16 . 0D ) ; <nl> - d1 = MathHelper . clamp _ double ( d1 / d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minZ ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxZ ( ) - 16 . 0D ) ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 14 <nl> - p _ 82448 _ 3 _ . updateEntityWithOptionalForce ( entityIn , false ) ; <nl> - } <nl> - } <nl> - - else if ( entityIn . dimension = = 0 ) <nl> - + else if ( false & & entityIn . dimension = = 0 ) / / Forge Kill it but dont comment out so we can rename it . <nl> - { <nl> - d0 = MathHelper . clamp _ double ( d0 * d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minX ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxX ( ) - 16 . 0D ) ; <nl> - d1 = MathHelper . clamp _ double ( d1 * d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minZ ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxZ ( ) - 16 . 0D ) ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 15 <nl> - p _ 82448 _ 3 _ . updateEntityWithOptionalForce ( entityIn , false ) ; <nl> - } <nl> - } <nl> - - else <nl> - + <nl> - + if ( entityIn . dimension = = 1 ) <nl> - { <nl> - BlockPos blockpos ; <nl> - <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 16 <nl> - if ( entityIn . isEntityAlive ( ) ) <nl> - { <nl> - entityIn . setLocationAndAngles ( d0 , entityIn . posY , d1 , entityIn . rotationYaw , entityIn . rotationPitch ) ; <nl> - - p _ 82448 _ 4 _ . getDefaultTeleporter ( ) . placeInPortal ( entityIn , f ) ; <nl> - + teleporter . placeInPortal ( entityIn , f ) ; <nl> - p _ 82448 _ 4 _ . spawnEntityInWorld ( entityIn ) ; <nl> - p _ 82448 _ 4 _ . updateEntityWithOptionalForce ( entityIn , false ) ; <nl> - } <nl> - + + + + END PATCH
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / server / management / ItemInWorldManager . java . patch b / patches / minecraft / net / minecraft / server / management / ItemInWorldManager . java . patch <nl> index 2a343d6 . . 17cf566 100644 <nl> - - - a / patches / minecraft / net / minecraft / server / management / ItemInWorldManager . java . patch <nl> + + + b / patches / minecraft / net / minecraft / server / management / ItemInWorldManager . java . patch <nl> @ @ - 167 , 7 + 167 , 7 @ @ <nl> if ( itemstack . stackSize = = 0 ) <nl> { <nl> player . inventory . mainInventory [ player . inventory . currentItem ] = null ; <nl> - + net . minecraftforge . event . ForgeEventFactory . onPlayerDestroyItem ( player , itemstack1 ) ; <nl> + + net . minecraftforge . event . ForgeEventFactory . onPlayerDestroyItem ( player , itemstack ) ; <nl> } <nl> <nl> if ( ! player . isUsingItem ( ) ) <nl> diff - - git a / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch b / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch <nl> index 309ef6e . . 259f162 100644 <nl> - - - a / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch <nl> + + + b / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch <nl> @ @ - 5 , 7 + 5 , 7 @ @ <nl> p _ 72683 _ 1 _ . managedPosX = p _ 72683 _ 1 _ . posX ; <nl> p _ 72683 _ 1 _ . managedPosZ = p _ 72683 _ 1 _ . posZ ; <nl> + / / Load nearby chunks first <nl> - + List < ChunkCoordIntPair > chunkList = new ArrayList < ChunkCoordIntPair > ( ) ; <nl> + + List < ChunkCoordIntPair > chunkList = Lists . newArrayList ( ) ; <nl> <nl> for ( int k = i - this . playerViewRadius ; k < = i + this . playerViewRadius ; + + k ) <nl> { <nl> @ @ - 30 , 7 + 30 , 7 @ @ <nl> int i1 = this . playerViewRadius ; <nl> int j1 = i - k ; <nl> int k1 = j - l ; <nl> - + List < ChunkCoordIntPair > chunksToLoad = new ArrayList < ChunkCoordIntPair > ( ) ; <nl> + + List < ChunkCoordIntPair > chunksToLoad = Lists . newArrayList ( ) ; <nl> <nl> if ( j1 ! = 0 | | k1 ! = 0 ) <nl> { <nl> @ @ - 176 , 7 + 176 , 7 @ @ <nl> public void onUpdate ( ) <nl> { <nl> if ( this . numBlocksToUpdate ! = 0 ) <nl> - @ @ - 441 , 7 + 515 , 7 @ @ <nl> + @ @ - 441 , 18 + 515 , 19 @ @ <nl> BlockPos blockpos = new BlockPos ( i , j , k ) ; <nl> this . sendToAllPlayersWatchingChunk ( new S23PacketBlockChange ( PlayerManager . this . theWorldServer , blockpos ) ) ; <nl> <nl> @ @ - 185 , 3 + 185 , 37 @ @ <nl> { <nl> this . sendTileToAllPlayersWatchingChunk ( PlayerManager . this . theWorldServer . getTileEntity ( blockpos ) ) ; <nl> } <nl> + } <nl> + - else if ( this . numBlocksToUpdate = = 64 ) <nl> + + else if ( this . numBlocksToUpdate > = net . minecraftforge . common . ForgeModContainer . clumpingThreshold ) <nl> + { <nl> + int i1 = this . chunkCoords . chunkXPos * 16 ; <nl> + int k1 = this . chunkCoords . chunkZPos * 16 ; <nl> + this . sendToAllPlayersWatchingChunk ( new S21PacketChunkData ( PlayerManager . this . theWorldServer . getChunkFromChunkCoords ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos ) , false , this . flagsYAreasToUpdate ) ) ; <nl> + <nl> + - for ( int i2 = 0 ; i2 < 16 ; + + i2 ) <nl> + + / / Forge : Grabs ALL tile entities is costly on a modded server , only send needed ones <nl> + + for ( int i2 = 0 ; false & & i2 < 16 ; + + i2 ) <nl> + { <nl> + if ( ( this . flagsYAreasToUpdate & 1 < < i2 ) ! = 0 ) <nl> + { <nl> + @ @ - 469 , 7 + 544 , 9 @ @ <nl> + else <nl> + { <nl> + this . sendToAllPlayersWatchingChunk ( new S22PacketMultiBlockChange ( this . numBlocksToUpdate , this . locationOfBlockChange , PlayerManager . this . theWorldServer . getChunkFromChunkCoords ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos ) ) ) ; <nl> + - <nl> + + } <nl> + + { / / Forge : Send only the tile entities that are updated , Adding this brace lets us keep the indent and the patch small <nl> + + WorldServer world = PlayerManager . this . theWorldServer ; <nl> + for ( int j1 = 0 ; j1 < this . numBlocksToUpdate ; + + j1 ) <nl> + { <nl> + int l1 = ( this . locationOfBlockChange [ j1 ] > > 12 & 15 ) + this . chunkCoords . chunkXPos * 16 ; <nl> + @ @ - 477 , 7 + 554 , 7 @ @ <nl> + int l2 = ( this . locationOfBlockChange [ j1 ] > > 8 & 15 ) + this . chunkCoords . chunkZPos * 16 ; <nl> + BlockPos blockpos1 = new BlockPos ( l1 , j2 , l2 ) ; <nl> + <nl> + - if ( PlayerManager . this . theWorldServer . getBlockState ( blockpos1 ) . getBlock ( ) . hasTileEntity ( ) ) <nl> + + if ( world . getBlockState ( blockpos1 ) . getBlock ( ) . hasTileEntity ( world . getBlockState ( blockpos1 ) ) ) <nl> + { <nl> + this . sendTileToAllPlayersWatchingChunk ( PlayerManager . this . theWorldServer . getTileEntity ( blockpos1 ) ) ; <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / server / management / PlayerProfileCache . java . patch b / patches / minecraft / net / minecraft / server / management / PlayerProfileCache . java . patch <nl> deleted file mode 100644 <nl> index c622cc3 . . 0000000 <nl> - - - a / patches / minecraft / net / minecraft / server / management / PlayerProfileCache . java . patch <nl> + + + / dev / null <nl> @ @ - 1 , 23 + 0 , 0 @ @ <nl> - - - - . . / src - base / minecraft / net / minecraft / server / management / PlayerProfileCache . java <nl> - + + + . . / src - work / minecraft / net / minecraft / server / management / PlayerProfileCache . java <nl> - @ @ - 229 , 6 + 229 , 20 @ @ <nl> - { <nl> - IOUtils . closeQuietly ( ( Reader ) bufferedreader ) ; <nl> - } <nl> - + } <nl> - + catch ( FileNotFoundException filenotfoundexception ) <nl> - + { <nl> - + ; <nl> - + } <nl> - + catch ( com . google . gson . JsonParseException parsefail ) <nl> - + { <nl> - + / / No op - the cache can quietly rebuild if it ' s junk <nl> - + } <nl> - + finally <nl> - + { <nl> - + IOUtils . closeQuietly ( bufferedreader ) ; <nl> - + } <nl> - + } <nl> - } <nl> - <nl> - public void func _ 152658 _ c ( ) <nl> diff - - git a / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch b / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch <nl> index 39f1733 . . b4c725a 100644 <nl> - - - a / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch <nl> + + + b / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch <nl> @ @ - 92 , 11 + 92 , 81 @ @ <nl> playerIn . triggerAchievement ( StatList . leaveGameStat ) ; <nl> this . writePlayerData ( playerIn ) ; <nl> WorldServer worldserver = playerIn . getServerForPlayer ( ) ; <nl> - @ @ - 495 , 17 + 525 , 27 @ @ <nl> + @ @ - 328 , 6 + 358 , 7 @ @ <nl> + this . uuidToPlayerMap . remove ( uuid ) ; <nl> + this . playerStatFiles . remove ( uuid ) ; <nl> + } <nl> + + net . minecraftforge . common . chunkio . ChunkIOExecutor . adjustPoolSize ( this . getCurrentPlayerCount ( ) ) ; <nl> + <nl> + this . sendPacketToAllPlayers ( new S38PacketPlayerListItem ( S38PacketPlayerListItem . Action . REMOVE _ PLAYER , new EntityPlayerMP [ ] { playerIn } ) ) ; <nl> + } <nl> + @ @ - 411 , 13 + 442 , 23 @ @ <nl> + <nl> + public EntityPlayerMP recreatePlayerEntity ( EntityPlayerMP playerIn , int dimension , boolean conqueredEnd ) <nl> + { <nl> + + World world = mcServer . worldServerForDimension ( dimension ) ; <nl> + + if ( world = = null ) <nl> + + { <nl> + + dimension = 0 ; <nl> + + } <nl> + + else if ( ! world . provider . canRespawnHere ( ) ) <nl> + + { <nl> + + dimension = world . provider . getRespawnDimension ( playerIn ) ; <nl> + + } <nl> + + <nl> + playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . removePlayerFromTrackers ( playerIn ) ; <nl> + playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . untrackEntity ( playerIn ) ; <nl> + playerIn . getServerForPlayer ( ) . getPlayerManager ( ) . removePlayer ( playerIn ) ; <nl> + this . playerEntityList . remove ( playerIn ) ; <nl> + this . mcServer . worldServerForDimension ( playerIn . dimension ) . removePlayerEntityDangerously ( playerIn ) ; <nl> + - BlockPos blockpos = playerIn . getBedLocation ( ) ; <nl> + - boolean flag = playerIn . isSpawnForced ( ) ; <nl> + + BlockPos blockpos = playerIn . getBedLocation ( dimension ) ; <nl> + + boolean flag = playerIn . isSpawnForced ( dimension ) ; <nl> + playerIn . dimension = dimension ; <nl> + ItemInWorldManager iteminworldmanager ; <nl> + <nl> + @ @ - 433 , 6 + 474 , 7 @ @ <nl> + EntityPlayerMP entityplayermp = new EntityPlayerMP ( this . mcServer , this . mcServer . worldServerForDimension ( playerIn . dimension ) , playerIn . getGameProfile ( ) , iteminworldmanager ) ; <nl> + entityplayermp . playerNetServerHandler = playerIn . playerNetServerHandler ; <nl> + entityplayermp . clonePlayer ( playerIn , conqueredEnd ) ; <nl> + + entityplayermp . dimension = dimension ; <nl> + entityplayermp . setEntityId ( playerIn . getEntityId ( ) ) ; <nl> + entityplayermp . func _ 174817 _ o ( playerIn ) ; <nl> + WorldServer worldserver = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; <nl> + @ @ - 472 , 19 + 514 , 25 @ @ <nl> + this . uuidToPlayerMap . put ( entityplayermp . getUniqueID ( ) , entityplayermp ) ; <nl> + entityplayermp . addSelfToInternalCraftingInventory ( ) ; <nl> + entityplayermp . setHealth ( entityplayermp . getHealth ( ) ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerRespawnEvent ( entityplayermp ) ; <nl> + return entityplayermp ; <nl> + } <nl> + <nl> + public void transferPlayerToDimension ( EntityPlayerMP playerIn , int dimension ) <nl> + { <nl> + + transferPlayerToDimension ( playerIn , dimension , mcServer . worldServerForDimension ( dimension ) . getDefaultTeleporter ( ) ) ; <nl> + + } <nl> + + <nl> + + public void transferPlayerToDimension ( EntityPlayerMP playerIn , int dimension , net . minecraft . world . Teleporter teleporter ) <nl> + + { <nl> + int i = playerIn . dimension ; <nl> + WorldServer worldserver = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; <nl> + playerIn . dimension = dimension ; <nl> + WorldServer worldserver1 = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; <nl> + - playerIn . playerNetServerHandler . sendPacket ( new S07PacketRespawn ( playerIn . dimension , playerIn . worldObj . getDifficulty ( ) , playerIn . worldObj . getWorldInfo ( ) . getTerrainType ( ) , playerIn . theItemInWorldManager . getGameType ( ) ) ) ; <nl> + + playerIn . playerNetServerHandler . sendPacket ( new S07PacketRespawn ( playerIn . dimension , worldserver1 . getDifficulty ( ) , worldserver1 . getWorldInfo ( ) . getTerrainType ( ) , playerIn . theItemInWorldManager . getGameType ( ) ) ) ; <nl> + worldserver . removePlayerEntityDangerously ( playerIn ) ; <nl> + playerIn . isDead = false ; <nl> + - this . transferEntityToWorld ( playerIn , i , worldserver , worldserver1 ) ; <nl> + + this . transferEntityToWorld ( playerIn , i , worldserver , worldserver1 , teleporter ) ; <nl> + this . func _ 72375 _ a ( playerIn , worldserver ) ; <nl> + playerIn . playerNetServerHandler . setPlayerLocation ( playerIn . posX , playerIn . posY , playerIn . posZ , playerIn . rotationYaw , playerIn . rotationPitch ) ; <nl> + playerIn . theItemInWorldManager . setWorld ( worldserver1 ) ; <nl> + @ @ - 495 , 17 + 543 , 27 @ @ <nl> { <nl> playerIn . playerNetServerHandler . sendPacket ( new S1DPacketEntityEffect ( playerIn . getEntityId ( ) , potioneffect ) ) ; <nl> } <nl> - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerChangedDimensionEvent ( playerIn , j , dimension ) ; <nl> + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerChangedDimensionEvent ( playerIn , i , dimension ) ; <nl> } <nl> <nl> public void transferEntityToWorld ( Entity entityIn , int p _ 82448 _ 2 _ , WorldServer p _ 82448 _ 3 _ , WorldServer p _ 82448 _ 4 _ ) <nl> @ @ - 123 , 7 + 193 , 7 @ @ <nl> { <nl> d0 = MathHelper . clamp _ double ( d0 / d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minX ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxX ( ) - 16 . 0D ) ; <nl> d1 = MathHelper . clamp _ double ( d1 / d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minZ ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxZ ( ) - 16 . 0D ) ; <nl> - @ @ - 516 , 7 + 556 , 7 @ @ <nl> + @ @ - 516 , 7 + 574 , 7 @ @ <nl> p _ 82448 _ 3 _ . updateEntityWithOptionalForce ( entityIn , false ) ; <nl> } <nl> } <nl> @ @ - 132 , 7 + 202 , 7 @ @ <nl> { <nl> d0 = MathHelper . clamp _ double ( d0 * d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minX ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxX ( ) - 16 . 0D ) ; <nl> d1 = MathHelper . clamp _ double ( d1 * d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minZ ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxZ ( ) - 16 . 0D ) ; <nl> - @ @ - 527 , 7 + 567 , 8 @ @ <nl> + @ @ - 527 , 7 + 585 , 8 @ @ <nl> p _ 82448 _ 3 _ . updateEntityWithOptionalForce ( entityIn , false ) ; <nl> } <nl> } <nl> @ @ - 142 , 7 + 212 , 7 @ @ <nl> { <nl> BlockPos blockpos ; <nl> <nl> - @ @ - 562 , 7 + 603 , 7 @ @ <nl> + @ @ - 562 , 7 + 621 , 7 @ @ <nl> if ( entityIn . isEntityAlive ( ) ) <nl> { <nl> entityIn . setLocationAndAngles ( d0 , entityIn . posY , d1 , entityIn . rotationYaw , entityIn . rotationPitch ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch b / patches / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch <nl> new file mode 100644 <nl> index 0000000 . . f4e6fa5 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java <nl> + + + + . . / src - work / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java <nl> + @ @ - 23 , 6 + 23 , 8 @ @ <nl> + <nl> + public void processHandshake ( C00Handshake packetIn ) <nl> + { <nl> + + if ( ! net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . handleServerHandshake ( packetIn , this . networkManager ) ) return ; <nl> + + <nl> + switch ( packetIn . getRequestedState ( ) ) <nl> + { <nl> + case LOGIN : <nl> diff - - git a / rejects / minecraft / net / minecraft / server / management / PlayerManager . java . patch . rej b / rejects / minecraft / net / minecraft / server / management / PlayerManager . java . patch . rej <nl> deleted file mode 100644 <nl> index fa38e89 . . 0000000 <nl> - - - a / rejects / minecraft / net / minecraft / server / management / PlayerManager . java . patch . rej <nl> + + + / dev / null <nl> @ @ - 1 , 40 + 0 , 0 @ @ <nl> - + + + + REJECTED PATCH 13 <nl> - { <nl> - int i1 ; <nl> - <nl> - - if ( this . numBlocksToUpdate = = 64 ) <nl> - + if ( this . numBlocksToUpdate > = net . minecraftforge . common . ForgeModContainer . clumpingThreshold ) <nl> - { <nl> - i = this . chunkCoords . chunkXPos * 16 ; <nl> - j = this . chunkCoords . chunkZPos * 16 ; <nl> - this . sendToAllPlayersWatchingChunk ( new S21PacketChunkData ( PlayerManager . this . theWorldServer . getChunkFromChunkCoords ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos ) , false , this . flagsYAreasToUpdate ) ) ; <nl> - <nl> - - for ( k = 0 ; k < 16 ; + + k ) <nl> - + / / Forge : Grabs ALL tile entities is costly on a modded server , only send needed ones <nl> - + for ( k = 0 ; false & & k < 16 ; + + k ) <nl> - { <nl> - if ( ( this . flagsYAreasToUpdate & 1 < < k ) ! = 0 ) <nl> - { <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 14 <nl> - else <nl> - { <nl> - this . sendToAllPlayersWatchingChunk ( new S22PacketMultiBlockChange ( this . numBlocksToUpdate , this . locationOfBlockChange , PlayerManager . this . theWorldServer . getChunkFromChunkCoords ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos ) ) ) ; <nl> - + } <nl> - <nl> - + { / / Forge : Send only the tile entities that are updated , Adding this brace lets us keep the indent and the patch small <nl> - + WorldServer world = PlayerManager . this . theWorldServer ; <nl> - for ( i = 0 ; i < this . numBlocksToUpdate ; + + i ) <nl> - { <nl> - j = ( this . locationOfBlockChange [ i ] > > 12 & 15 ) + this . chunkCoords . chunkXPos * 16 ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 15 <nl> - i1 = ( this . locationOfBlockChange [ i ] > > 8 & 15 ) + this . chunkCoords . chunkZPos * 16 ; <nl> - BlockPos blockpos1 = new BlockPos ( j , k , i1 ) ; <nl> - <nl> - - if ( PlayerManager . this . theWorldServer . getBlockState ( blockpos1 ) . getBlock ( ) . hasTileEntity ( ) ) <nl> - + if ( world . getBlockState ( blockpos1 ) . getBlock ( ) . hasTileEntity ( world . getBlockState ( blockpos1 ) ) ) <nl> - { <nl> - this . sendTileToAllPlayersWatchingChunk ( PlayerManager . this . theWorldServer . getTileEntity ( blockpos1 ) ) ; <nl> - } <nl> - + + + + END PATCH <nl> diff - - git a / rejects / minecraft / net / minecraft / server / management / PlayerProfileCache . java . patch . rej b / rejects / minecraft / net / minecraft / server / management / PlayerProfileCache . java . patch . rej <nl> deleted file mode 100644 <nl> index 5572faf . . 0000000 <nl> - - - a / rejects / minecraft / net / minecraft / server / management / PlayerProfileCache . java . patch . rej <nl> + + + / dev / null <nl> @ @ - 1 , 28 + 0 , 0 @ @ <nl> - + + + + REJECTED PATCH 1 <nl> - { <nl> - List list = null ; <nl> - BufferedReader bufferedreader = null ; <nl> - - label64 : <nl> - { <nl> - try <nl> - { <nl> - bufferedreader = Files . newReader ( this . usercacheFile , Charsets . UTF _ 8 ) ; <nl> - list = ( List ) this . gson . fromJson ( bufferedreader , field _ 152666 _ h ) ; <nl> - - break label64 ; <nl> - - } <nl> - - catch ( FileNotFoundException filenotfoundexception ) <nl> - - { <nl> - - ; <nl> - - } <nl> - - finally <nl> - - { <nl> - - IOUtils . closeQuietly ( bufferedreader ) ; <nl> - - } <nl> - <nl> - - return ; <nl> - - } <nl> - - <nl> - if ( list ! = null ) <nl> - { <nl> - this . field _ 152661 _ c . clear ( ) ; <nl> - + + + + END PATCH <nl> diff - - git a / rejects / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch . rej b / rejects / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch . rej <nl> deleted file mode 100644 <nl> index 29f9d27 . . 0000000 <nl> - - - a / rejects / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch . rej <nl> + + + / dev / null <nl> @ @ - 1 , 74 + 0 , 0 @ @ <nl> - + + + + REJECTED PATCH 9 <nl> - this . playerEntityList . remove ( playerIn ) ; <nl> - this . uuidToPlayerMap . remove ( playerIn . getUniqueID ( ) ) ; <nl> - this . playerStatFiles . remove ( playerIn . getUniqueID ( ) ) ; <nl> - + net . minecraftforge . common . chunkio . ChunkIOExecutor . adjustPoolSize ( this . getCurrentPlayerCount ( ) ) ; <nl> - this . sendPacketToAllPlayers ( new S38PacketPlayerListItem ( S38PacketPlayerListItem . Action . REMOVE _ PLAYER , new EntityPlayerMP [ ] { playerIn } ) ) ; <nl> - } <nl> - <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 10 <nl> - <nl> - public EntityPlayerMP recreatePlayerEntity ( EntityPlayerMP playerIn , int dimension , boolean conqueredEnd ) <nl> - { <nl> - + World world = mcServer . worldServerForDimension ( dimension ) ; <nl> - + if ( world = = null ) <nl> - + { <nl> - + dimension = 0 ; <nl> - + } <nl> - + else if ( ! world . provider . canRespawnHere ( ) ) <nl> - + { <nl> - + dimension = world . provider . getRespawnDimension ( playerIn ) ; <nl> - + } <nl> - + <nl> - playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . removePlayerFromTrackers ( playerIn ) ; <nl> - playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . untrackEntity ( playerIn ) ; <nl> - playerIn . getServerForPlayer ( ) . getPlayerManager ( ) . removePlayer ( playerIn ) ; <nl> - this . playerEntityList . remove ( playerIn ) ; <nl> - this . mcServer . worldServerForDimension ( playerIn . dimension ) . removePlayerEntityDangerously ( playerIn ) ; <nl> - - BlockPos blockpos = playerIn . getBedLocation ( ) ; <nl> - - boolean flag1 = playerIn . isSpawnForced ( ) ; <nl> - + BlockPos blockpos = playerIn . getBedLocation ( dimension ) ; <nl> - + boolean flag1 = playerIn . isSpawnForced ( dimension ) ; <nl> - playerIn . dimension = dimension ; <nl> - Object object ; <nl> - <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 11 <nl> - EntityPlayerMP entityplayermp1 = new EntityPlayerMP ( this . mcServer , this . mcServer . worldServerForDimension ( playerIn . dimension ) , playerIn . getGameProfile ( ) , ( ItemInWorldManager ) object ) ; <nl> - entityplayermp1 . playerNetServerHandler = playerIn . playerNetServerHandler ; <nl> - entityplayermp1 . clonePlayer ( playerIn , conqueredEnd ) ; <nl> - + entityplayermp1 . dimension = dimension ; <nl> - entityplayermp1 . setEntityId ( playerIn . getEntityId ( ) ) ; <nl> - entityplayermp1 . func _ 174817 _ o ( playerIn ) ; <nl> - WorldServer worldserver = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; <nl> - + + + + END PATCH <nl> - + + + + REJECTED PATCH 12 <nl> - this . uuidToPlayerMap . put ( entityplayermp1 . getUniqueID ( ) , entityplayermp1 ) ; <nl> - entityplayermp1 . addSelfToInternalCraftingInventory ( ) ; <nl> - entityplayermp1 . setHealth ( entityplayermp1 . getHealth ( ) ) ; <nl> - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerRespawnEvent ( entityplayermp1 ) ; <nl> - return entityplayermp1 ; <nl> - } <nl> - <nl> - public void transferPlayerToDimension ( EntityPlayerMP playerIn , int dimension ) <nl> - { <nl> - + transferPlayerToDimension ( playerIn , dimension , mcServer . worldServerForDimension ( dimension ) . getDefaultTeleporter ( ) ) ; <nl> - + } <nl> - + <nl> - + public void transferPlayerToDimension ( EntityPlayerMP playerIn , int dimension , net . minecraft . world . Teleporter teleporter ) <nl> - + { <nl> - int j = playerIn . dimension ; <nl> - WorldServer worldserver = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; <nl> - playerIn . dimension = dimension ; <nl> - WorldServer worldserver1 = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; <nl> - - playerIn . playerNetServerHandler . sendPacket ( new S07PacketRespawn ( playerIn . dimension , playerIn . worldObj . getDifficulty ( ) , playerIn . worldObj . getWorldInfo ( ) . getTerrainType ( ) , playerIn . theItemInWorldManager . getGameType ( ) ) ) ; <nl> - + playerIn . playerNetServerHandler . sendPacket ( new S07PacketRespawn ( playerIn . dimension , worldserver1 . getDifficulty ( ) , worldserver1 . getWorldInfo ( ) . getTerrainType ( ) , playerIn . theItemInWorldManager . getGameType ( ) ) ) ; / / Forge : Use new dimensions information <nl> - worldserver . removePlayerEntityDangerously ( playerIn ) ; <nl> - playerIn . isDead = false ; <nl> - - this . transferEntityToWorld ( playerIn , j , worldserver , worldserver1 ) ; <nl> - + this . transferEntityToWorld ( playerIn , j , worldserver , worldserver1 , teleporter ) ; <nl> - this . func _ 72375 _ a ( playerIn , worldserver ) ; <nl> - playerIn . playerNetServerHandler . setPlayerLocation ( playerIn . posX , playerIn . posY , playerIn . posZ , playerIn . rotationYaw , playerIn . rotationPitch ) ; <nl> - playerIn . theItemInWorldManager . setWorld ( worldserver1 ) ; <nl> - + + + + END PATCH <nl> diff - - git a / rejects / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch . rej b / rejects / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch . rej <nl> deleted file mode 100644 <nl> index 8e844f9 . . 0000000 <nl> - - - a / rejects / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch . rej <nl> + + + / dev / null <nl> @ @ - 1 , 10 + 0 , 0 @ @ <nl> - + + + + REJECTED PATCH 1 <nl> - <nl> - public void processHandshake ( C00Handshake packetIn ) <nl> - { <nl> - + if ( ! net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . handleServerHandshake ( packetIn , this . networkManager ) ) return ; <nl> - + <nl> - switch ( NetHandlerHandshakeTCP . SwitchEnumConnectionState . VALUES [ packetIn . getRequestedState ( ) . ordinal ( ) ] ) <nl> - { <nl> - case 1 : <nl> - + + + + END PATCH

TEST DIFF:
diff - - git a / patches . mcp / minecraft / net / minecraft / client / network / ServerPinger . java . patch b / patches . mcp / minecraft / net / minecraft / client / network / ServerPinger . java . patch 
 new file mode 100644 
 index 0000000 . . 9323892 
 - - - / dev / null 
 + + + b / patches . mcp / minecraft / net / minecraft / client / network / ServerPinger . java . patch 
 @ @ - 0 , 0 + 1 , 10 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / network / ServerPinger . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / network / ServerPinger . java 
 + @ @ - 150 , 6 + 150 , 7 @ @ 
 + server . setBase64EncodedIconData ( ( String ) null ) ; 
 + } 
 + 
 + + net . minecraftforge . fml . client . FMLClientHandler . instance ( ) . bindServerListData ( server , serverstatusresponse ) ; 
 + this . field _ 175092 _ e = Minecraft . getSystemTime ( ) ; 
 + networkmanager . sendPacket ( new CPacketPing ( this . field _ 175092 _ e ) ) ; 
 + this . field _ 147403 _ d = true ; 
 diff - - git a / patches . mcp / minecraft / net / minecraft / server / management / PlayerList . java . patch b / patches . mcp / minecraft / net / minecraft / server / management / PlayerList . java . patch 
 new file mode 100644 
 index 0000000 . . 8ee09c0 
 - - - / dev / null 
 + + + b / patches . mcp / minecraft / net / minecraft / server / management / PlayerList . java . patch 
 @ @ - 0 , 0 + 1 , 229 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / server / management / PlayerList . java 
 + + + + . . / src - work / minecraft / net / minecraft / server / management / PlayerList . java 
 + @ @ - 101 , 7 + 101 , 7 @ @ 
 + this . maxPlayers = 8 ; 
 + } 
 + 
 + - public void initializeConnectionToPlayer ( NetworkManager netManager , EntityPlayerMP playerIn ) 
 + + public void initializeConnectionToPlayer ( NetworkManager netManager , EntityPlayerMP playerIn , NetHandlerPlayServer nethandlerplayserver ) 
 + { 
 + GameProfile gameprofile = playerIn . getGameProfile ( ) ; 
 + PlayerProfileCache playerprofilecache = this . mcServer . getPlayerProfileCache ( ) ; 
 + @ @ - 110 , 6 + 110 , 17 @ @ 
 + playerprofilecache . addEntry ( gameprofile ) ; 
 + NBTTagCompound nbttagcompound = this . readPlayerDataFromFile ( playerIn ) ; 
 + playerIn . setWorld ( this . mcServer . worldServerForDimension ( playerIn . dimension ) ) ; 
 + + 
 + + World playerWorld = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; 
 + + if ( playerWorld = = null ) 
 + + { 
 + + playerIn . dimension = 0 ; 
 + + playerWorld = this . mcServer . worldServerForDimension ( 0 ) ; 
 + + BlockPos spawnPoint = playerWorld . provider . getRandomizedSpawnPoint ( ) ; 
 + + playerIn . setPosition ( spawnPoint . getX ( ) , spawnPoint . getY ( ) , spawnPoint . getZ ( ) ) ; 
 + + } 
 + + 
 + + playerIn . setWorld ( playerWorld ) ; 
 + playerIn . theItemInWorldManager . setWorld ( ( WorldServer ) playerIn . worldObj ) ; 
 + String s1 = " local " ; 
 + 
 + @ @ - 123 , 7 + 134 , 7 @ @ 
 + WorldInfo worldinfo = worldserver . getWorldInfo ( ) ; 
 + BlockPos blockpos = worldserver . getSpawnPoint ( ) ; 
 + this . setPlayerGameTypeBasedOnOther ( playerIn , ( EntityPlayerMP ) null , worldserver ) ; 
 + - NetHandlerPlayServer nethandlerplayserver = new NetHandlerPlayServer ( this . mcServer , netManager , playerIn ) ; 
 + + playerIn . playerNetServerHandler = nethandlerplayserver ; 
 + nethandlerplayserver . sendPacket ( new SPacketJoinGame ( playerIn . getEntityId ( ) , playerIn . theItemInWorldManager . getGameType ( ) , worldinfo . isHardcoreModeEnabled ( ) , worldserver . provider . func _ 186058 _ p ( ) . func _ 186068 _ a ( ) , worldserver . getDifficulty ( ) , this . getMaxPlayers ( ) , worldinfo . getTerrainType ( ) , worldserver . getGameRules ( ) . getBoolean ( " reducedDebugInfo " ) ) ) ; 
 + nethandlerplayserver . sendPacket ( new SPacketCustomPayload ( " MC | Brand " , ( new PacketBuffer ( Unpooled . buffer ( ) ) ) . writeString ( this . getServerInstance ( ) . getServerModName ( ) ) ) ) ; 
 + nethandlerplayserver . sendPacket ( new SPacketServerDifficulty ( worldinfo . getDifficulty ( ) , worldinfo . isDifficultyLocked ( ) ) ) ; 
 + @ @ - 213 , 6 + 224 , 7 @ @ 
 + } 
 + 
 + playerIn . addSelfToInternalCraftingInventory ( ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerLoggedIn ( playerIn ) ; 
 + } 
 + 
 + protected void sendScoreboard ( ServerScoreboard scoreboardIn , EntityPlayerMP playerIn ) 
 + @ @ - 302 , 6 + 314 , 7 @ @ 
 + nbttagcompound1 = this . mcServer . func _ 184110 _ aI ( ) . func _ 188257 _ a ( FixTypes . PLAYER , nbttagcompound ) ; 
 + playerIn . readFromNBT ( nbttagcompound1 ) ; 
 + logger . debug ( " loading single player " ) ; 
 + + net . minecraftforge . event . ForgeEventFactory . firePlayerLoadingEvent ( playerIn , this . playerNBTManagerObj , playerIn . getUniqueID ( ) . toString ( ) ) ; 
 + } 
 + else 
 + { 
 + @ @ - 311 , 8 + 324 , 24 @ @ 
 + return nbttagcompound1 ; 
 + } 
 + 
 + + public NBTTagCompound getPlayerNBT ( EntityPlayerMP player ) 
 + + { 
 + + / / Hacky method to allow loading the NBT for a player prior to login 
 + + NBTTagCompound nbttagcompound = this . mcServer . worldServers [ 0 ] . getWorldInfo ( ) . getPlayerNBTTagCompound ( ) ; 
 + + if ( player . getName ( ) . equals ( this . mcServer . getServerOwner ( ) ) & & nbttagcompound ! = null ) 
 + + { 
 + + return nbttagcompound ; 
 + + } 
 + + else 
 + + { 
 + + return ( ( net . minecraft . world . storage . SaveHandler ) this . playerNBTManagerObj ) . getPlayerNBT ( player ) ; 
 + + } 
 + + } 
 + + 
 + protected void writePlayerData ( EntityPlayerMP playerIn ) 
 + { 
 + + if ( playerIn . playerNetServerHandler = = null ) return ; 
 + + 
 + this . playerNBTManagerObj . writePlayerData ( playerIn ) ; 
 + StatisticsFile statisticsfile = ( StatisticsFile ) this . playerStatFiles . get ( playerIn . getUniqueID ( ) ) ; 
 + 
 + @ @ - 334 , 6 + 363 , 7 @ @ 
 + playerIn . playerNetServerHandler . sendPacket ( new SPacketPlayerListItem ( SPacketPlayerListItem . Action . ADD _ PLAYER , new EntityPlayerMP [ ] { ( EntityPlayerMP ) this . playerEntityList . get ( i ) } ) ) ; 
 + } 
 + 
 + + net . minecraftforge . common . chunkio . ChunkIOExecutor . adjustPoolSize ( this . getCurrentPlayerCount ( ) ) ; 
 + worldserver . spawnEntityInWorld ( playerIn ) ; 
 + this . preparePlayer ( playerIn , ( WorldServer ) null ) ; 
 + } 
 + @ @ - 345 , 6 + 375 , 7 @ @ 
 + 
 + public void playerLoggedOut ( EntityPlayerMP playerIn ) 
 + { 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerLoggedOut ( playerIn ) ; 
 + WorldServer worldserver = playerIn . getServerForPlayer ( ) ; 
 + playerIn . triggerAchievement ( StatList . leaveGameStat ) ; 
 + this . writePlayerData ( playerIn ) ; 
 + @ @ - 379 , 6 + 410 , 7 @ @ 
 + this . uuidToPlayerMap . remove ( uuid ) ; 
 + this . playerStatFiles . remove ( uuid ) ; 
 + } 
 + + net . minecraftforge . common . chunkio . ChunkIOExecutor . adjustPoolSize ( this . getCurrentPlayerCount ( ) ) ; 
 + 
 + this . sendPacketToAllPlayers ( new SPacketPlayerListItem ( SPacketPlayerListItem . Action . REMOVE _ PLAYER , new EntityPlayerMP [ ] { playerIn } ) ) ; 
 + } 
 + @ @ - 462 , 13 + 494 , 23 @ @ 
 + 
 + public EntityPlayerMP recreatePlayerEntity ( EntityPlayerMP playerIn , int dimension , boolean conqueredEnd ) 
 + { 
 + + World world = mcServer . worldServerForDimension ( dimension ) ; 
 + + if ( world = = null ) 
 + + { 
 + + dimension = 0 ; 
 + + } 
 + + else if ( ! world . provider . canRespawnHere ( ) ) 
 + + { 
 + + dimension = world . provider . getRespawnDimension ( playerIn ) ; 
 + + } 
 + + 
 + playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . removePlayerFromTrackers ( playerIn ) ; 
 + playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . untrackEntity ( playerIn ) ; 
 + playerIn . getServerForPlayer ( ) . func _ 184164 _ w ( ) . removePlayer ( playerIn ) ; 
 + this . playerEntityList . remove ( playerIn ) ; 
 + this . mcServer . worldServerForDimension ( playerIn . dimension ) . removePlayerEntityDangerously ( playerIn ) ; 
 + - BlockPos blockpos = playerIn . getBedLocation ( ) ; 
 + - boolean flag = playerIn . isSpawnForced ( ) ; 
 + + BlockPos blockpos = playerIn . getBedLocation ( dimension ) ; 
 + + boolean flag = playerIn . isSpawnForced ( dimension ) ; 
 + playerIn . dimension = dimension ; 
 + PlayerInteractionManager playerinteractionmanager ; 
 + 
 + @ @ - 484 , 7 + 526 , 8 @ @ 
 + EntityPlayerMP entityplayermp = new EntityPlayerMP ( this . mcServer , this . mcServer . worldServerForDimension ( playerIn . dimension ) , playerIn . getGameProfile ( ) , playerinteractionmanager ) ; 
 + entityplayermp . playerNetServerHandler = playerIn . playerNetServerHandler ; 
 + entityplayermp . clonePlayer ( playerIn , conqueredEnd ) ; 
 + - entityplayermp . setEntityId ( playerIn . getEntityId ( ) ) ; 
 + + entityplayermp . dimension = dimension ; 
 + + entityplayermp . setEntityId ( playerIn . getEntityId ( ) ) ; 
 + entityplayermp . func _ 174817 _ o ( playerIn ) ; 
 + entityplayermp . func _ 184819 _ a ( playerIn . func _ 184591 _ cq ( ) ) ; 
 + 
 + @ @ - 531 , 6 + 574 , 7 @ @ 
 + this . uuidToPlayerMap . put ( entityplayermp . getUniqueID ( ) , entityplayermp ) ; 
 + entityplayermp . addSelfToInternalCraftingInventory ( ) ; 
 + entityplayermp . setHealth ( entityplayermp . getHealth ( ) ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerRespawnEvent ( entityplayermp ) ; 
 + return entityplayermp ; 
 + } 
 + 
 + @ @ - 545 , 15 + 589 , 20 @ @ 
 + 
 + public void func _ 187242 _ a ( EntityPlayerMP p _ 187242 _ 1 _ , int p _ 187242 _ 2 _ ) 
 + { 
 + + transferPlayerToDimension ( p _ 187242 _ 1 _ , p _ 187242 _ 2 _ , mcServer . worldServerForDimension ( p _ 187242 _ 2 _ ) . getDefaultTeleporter ( ) ) ; 
 + + } 
 + + 
 + + public void transferPlayerToDimension ( EntityPlayerMP p _ 187242 _ 1 _ , int p _ 187242 _ 2 _ , net . minecraft . world . Teleporter teleporter ) 
 + + { 
 + int i = p _ 187242 _ 1 _ . dimension ; 
 + WorldServer worldserver = this . mcServer . worldServerForDimension ( p _ 187242 _ 1 _ . dimension ) ; 
 + p _ 187242 _ 1 _ . dimension = p _ 187242 _ 2 _ ; 
 + WorldServer worldserver1 = this . mcServer . worldServerForDimension ( p _ 187242 _ 1 _ . dimension ) ; 
 + - p _ 187242 _ 1 _ . playerNetServerHandler . sendPacket ( new SPacketRespawn ( p _ 187242 _ 1 _ . dimension , p _ 187242 _ 1 _ . worldObj . getDifficulty ( ) , p _ 187242 _ 1 _ . worldObj . getWorldInfo ( ) . getTerrainType ( ) , p _ 187242 _ 1 _ . theItemInWorldManager . getGameType ( ) ) ) ; 
 + + p _ 187242 _ 1 _ . playerNetServerHandler . sendPacket ( new SPacketRespawn ( p _ 187242 _ 1 _ . dimension , worldserver1 . getDifficulty ( ) , worldserver1 . getWorldInfo ( ) . getTerrainType ( ) , p _ 187242 _ 1 _ . theItemInWorldManager . getGameType ( ) ) ) ; 
 + this . func _ 187243 _ f ( p _ 187242 _ 1 _ ) ; 
 + worldserver . removePlayerEntityDangerously ( p _ 187242 _ 1 _ ) ; 
 + p _ 187242 _ 1 _ . isDead = false ; 
 + - this . transferEntityToWorld ( p _ 187242 _ 1 _ , i , worldserver , worldserver1 ) ; 
 + + this . transferEntityToWorld ( p _ 187242 _ 1 _ , i , worldserver , worldserver1 , teleporter ) ; 
 + this . preparePlayer ( p _ 187242 _ 1 _ , worldserver ) ; 
 + p _ 187242 _ 1 _ . playerNetServerHandler . setPlayerLocation ( p _ 187242 _ 1 _ . posX , p _ 187242 _ 1 _ . posY , p _ 187242 _ 1 _ . posZ , p _ 187242 _ 1 _ . rotationYaw , p _ 187242 _ 1 _ . rotationPitch ) ; 
 + p _ 187242 _ 1 _ . theItemInWorldManager . setWorld ( worldserver1 ) ; 
 + @ @ - 565 , 17 + 614 , 27 @ @ 
 + { 
 + p _ 187242 _ 1 _ . playerNetServerHandler . sendPacket ( new SPacketEntityEffect ( p _ 187242 _ 1 _ . getEntityId ( ) , potioneffect ) ) ; 
 + } 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerChangedDimensionEvent ( p _ 187242 _ 1 _ , i , p _ 187242 _ 2 _ ) ; 
 + } 
 + 
 + public void transferEntityToWorld ( Entity entityIn , int p _ 82448 _ 2 _ , WorldServer p _ 82448 _ 3 _ , WorldServer p _ 82448 _ 4 _ ) 
 + { 
 + - double d0 = entityIn . posX ; 
 + - double d1 = entityIn . posZ ; 
 + + transferEntityToWorld ( entityIn , p _ 82448 _ 2 _ , p _ 82448 _ 3 _ , p _ 82448 _ 4 _ , p _ 82448 _ 4 _ . getDefaultTeleporter ( ) ) ; 
 + + } 
 + + 
 + + @ SuppressWarnings ( " unused " ) 
 + + public void transferEntityToWorld ( Entity entityIn , int p _ 82448 _ 2 _ , WorldServer p _ 82448 _ 3 _ , WorldServer p _ 82448 _ 4 _ , net . minecraft . world . Teleporter teleporter ) 
 + + { 
 + + net . minecraft . world . WorldProvider pOld = p _ 82448 _ 3 _ . provider ; 
 + + net . minecraft . world . WorldProvider pNew = p _ 82448 _ 4 _ . provider ; 
 + + double moveFactor = pOld . getMovementFactor ( ) / pNew . getMovementFactor ( ) ; 
 + + double d0 = entityIn . posX * moveFactor ; 
 + + double d1 = entityIn . posZ * moveFactor ; 
 + double d2 = 8 . 0D ; 
 + float f = entityIn . rotationYaw ; 
 + p _ 82448 _ 3 _ . theProfiler . startSection ( " moving " ) ; 
 + 
 + - if ( entityIn . dimension = = - 1 ) 
 + + if ( false & & entityIn . dimension = = - 1 ) 
 + { 
 + d0 = MathHelper . clamp _ double ( d0 / d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minX ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxX ( ) - 16 . 0D ) ; 
 + d1 = MathHelper . clamp _ double ( d1 / d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minZ ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxZ ( ) - 16 . 0D ) ; 
 + @ @ - 586 , 7 + 645 , 7 @ @ 
 + p _ 82448 _ 3 _ . updateEntityWithOptionalForce ( entityIn , false ) ; 
 + } 
 + } 
 + - else if ( entityIn . dimension = = 0 ) 
 + + else if ( false & & entityIn . dimension = = 0 ) 
 + { 
 + d0 = MathHelper . clamp _ double ( d0 * d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minX ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxX ( ) - 16 . 0D ) ; 
 + d1 = MathHelper . clamp _ double ( d1 * d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minZ ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxZ ( ) - 16 . 0D ) ; 
 + @ @ - 597 , 7 + 656 , 8 @ @ 
 + p _ 82448 _ 3 _ . updateEntityWithOptionalForce ( entityIn , false ) ; 
 + } 
 + } 
 + - else 
 + + 
 + + if ( entityIn . dimension = = 1 ) 
 + { 
 + BlockPos blockpos ; 
 + 
 + @ @ - 632 , 7 + 692 , 7 @ @ 
 + if ( entityIn . isEntityAlive ( ) ) 
 + { 
 + entityIn . setLocationAndAngles ( d0 , entityIn . posY , d1 , entityIn . rotationYaw , entityIn . rotationPitch ) ; 
 + - p _ 82448 _ 4 _ . getDefaultTeleporter ( ) . placeInPortal ( entityIn , f ) ; 
 + + teleporter . placeInPortal ( entityIn , f ) ; 
 + p _ 82448 _ 4 _ . spawnEntityInWorld ( entityIn ) ; 
 + p _ 82448 _ 4 _ . updateEntityWithOptionalForce ( entityIn , false ) ; 
 + } 
 diff - - git a / rejects / minecraft / net / minecraft / client / network / OldServerPinger . java . patch . rej b / rejects / minecraft / net / minecraft / client / network / OldServerPinger . java . patch . rej 
 deleted file mode 100644 
 index b9e4af4 . . 0000000 
 - - - a / rejects / minecraft / net / minecraft / client / network / OldServerPinger . java . patch . rej 
 + + + / dev / null 
 @ @ - 1 , 9 + 0 , 0 @ @ 
 - + + + + REJECTED PATCH 1 
 - server . setBase64EncodedIconData ( ( String ) null ) ; 
 - } 
 - 
 - + net . minecraftforge . fml . client . FMLClientHandler . instance ( ) . bindServerListData ( server , serverstatusresponse ) ; 
 - this . field _ 175092 _ e = Minecraft . getSystemTime ( ) ; 
 - networkmanager . sendPacket ( new C01PacketPing ( this . field _ 175092 _ e ) ) ; 
 - this . field _ 147403 _ d = true ; 
 - + + + + END PATCH 
 diff - - git a / rejects / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch . rej b / rejects / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch . rej 
 deleted file mode 100644 
 index 44d627c . . 0000000 
 - - - a / rejects / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch . rej 
 + + + / dev / null 
 @ @ - 1 , 237 + 0 , 0 @ @ 
 - + + + + REJECTED PATCH 1 
 - this . maxPlayers = 8 ; 
 - } 
 - 
 - - public void initializeConnectionToPlayer ( NetworkManager netManager , EntityPlayerMP playerIn ) 
 - + public void initializeConnectionToPlayer ( NetworkManager netManager , EntityPlayerMP playerIn , NetHandlerPlayServer nethandlerplayserver ) 
 - { 
 - GameProfile gameprofile = playerIn . getGameProfile ( ) ; 
 - PlayerProfileCache playerprofilecache = this . mcServer . getPlayerProfileCache ( ) ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 2 
 - playerprofilecache . addEntry ( gameprofile ) ; 
 - NBTTagCompound nbttagcompound = this . readPlayerDataFromFile ( playerIn ) ; 
 - playerIn . setWorld ( this . mcServer . worldServerForDimension ( playerIn . dimension ) ) ; 
 - + 
 - + World playerWorld = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; 
 - + if ( playerWorld = = null ) 
 - + { 
 - + playerIn . dimension = 0 ; 
 - + playerWorld = this . mcServer . worldServerForDimension ( 0 ) ; 
 - + BlockPos spawnPoint = playerWorld . provider . getRandomizedSpawnPoint ( ) ; 
 - + playerIn . setPosition ( spawnPoint . getX ( ) , spawnPoint . getY ( ) , spawnPoint . getZ ( ) ) ; 
 - + } 
 - + 
 - + playerIn . setWorld ( playerWorld ) ; 
 - playerIn . theItemInWorldManager . setWorld ( ( WorldServer ) playerIn . worldObj ) ; 
 - String s1 = " local " ; 
 - 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 3 
 - WorldInfo worldinfo = worldserver . getWorldInfo ( ) ; 
 - BlockPos blockpos = worldserver . getSpawnPoint ( ) ; 
 - this . setPlayerGameTypeBasedOnOther ( playerIn , ( EntityPlayerMP ) null , worldserver ) ; 
 - - NetHandlerPlayServer nethandlerplayserver = new NetHandlerPlayServer ( this . mcServer , netManager , playerIn ) ; 
 - + playerIn . playerNetServerHandler = nethandlerplayserver ; 
 - nethandlerplayserver . sendPacket ( new S01PacketJoinGame ( playerIn . getEntityId ( ) , playerIn . theItemInWorldManager . getGameType ( ) , worldinfo . isHardcoreModeEnabled ( ) , worldserver . provider . getDimensionId ( ) , worldserver . getDifficulty ( ) , this . getMaxPlayers ( ) , worldinfo . getTerrainType ( ) , worldserver . getGameRules ( ) . getBoolean ( " reducedDebugInfo " ) ) ) ; 
 - nethandlerplayserver . sendPacket ( new S3FPacketCustomPayload ( " MC | Brand " , ( new PacketBuffer ( Unpooled . buffer ( ) ) ) . writeString ( this . getServerInstance ( ) . getServerModName ( ) ) ) ) ; 
 - nethandlerplayserver . sendPacket ( new S41PacketServerDifficulty ( worldinfo . getDifficulty ( ) , worldinfo . isDifficultyLocked ( ) ) ) ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 4 
 - 
 - playerIn . addSelfToInternalCraftingInventory ( ) ; 
 - 
 - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerLoggedIn ( playerIn ) ; 
 - if ( nbttagcompound ! = null & & nbttagcompound . hasKey ( " Riding " , 10 ) ) 
 - { 
 - Entity entity = EntityList . createEntityFromNBT ( nbttagcompound . getCompoundTag ( " Riding " ) , worldserver ) ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 5 
 - playerIn . readFromNBT ( nbttagcompound ) ; 
 - nbttagcompound1 = nbttagcompound ; 
 - logger . debug ( " loading single player " ) ; 
 - + net . minecraftforge . event . ForgeEventFactory . firePlayerLoadingEvent ( playerIn , this . playerNBTManagerObj , playerIn . getUniqueID ( ) . toString ( ) ) ; 
 - } 
 - else 
 - { 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 6 
 - return nbttagcompound1 ; 
 - } 
 - 
 - + public NBTTagCompound getPlayerNBT ( EntityPlayerMP player ) 
 - + { 
 - + / / Hacky method to allow loading the NBT for a player prior to login 
 - + NBTTagCompound nbttagcompound = this . mcServer . worldServers [ 0 ] . getWorldInfo ( ) . getPlayerNBTTagCompound ( ) ; 
 - + if ( player . getName ( ) . equals ( this . mcServer . getServerOwner ( ) ) & & nbttagcompound ! = null ) 
 - + { 
 - + return nbttagcompound ; 
 - + } 
 - + else 
 - + { 
 - + return ( ( net . minecraft . world . storage . SaveHandler ) this . playerNBTManagerObj ) . getPlayerNBT ( player ) ; 
 - + } 
 - + } 
 - protected void writePlayerData ( EntityPlayerMP playerIn ) 
 - { 
 - + if ( playerIn . playerNetServerHandler = = null ) return ; 
 - + 
 - this . playerNBTManagerObj . writePlayerData ( playerIn ) ; 
 - StatisticsFile statisticsfile = ( StatisticsFile ) this . playerStatFiles . get ( playerIn . getUniqueID ( ) ) ; 
 - 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 7 
 - this . uuidToPlayerMap . put ( playerIn . getUniqueID ( ) , playerIn ) ; 
 - this . sendPacketToAllPlayers ( new S38PacketPlayerListItem ( S38PacketPlayerListItem . Action . ADD _ PLAYER , new EntityPlayerMP [ ] { playerIn } ) ) ; 
 - WorldServer worldserver = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; 
 - + net . minecraftforge . common . chunkio . ChunkIOExecutor . adjustPoolSize ( this . getCurrentPlayerCount ( ) ) ; 
 - worldserver . spawnEntityInWorld ( playerIn ) ; 
 - this . preparePlayer ( playerIn , ( WorldServer ) null ) ; 
 - 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 8 
 - 
 - public void playerLoggedOut ( EntityPlayerMP playerIn ) 
 - { 
 - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerLoggedOut ( playerIn ) ; 
 - playerIn . triggerAchievement ( StatList . leaveGameStat ) ; 
 - this . writePlayerData ( playerIn ) ; 
 - WorldServer worldserver = playerIn . getServerForPlayer ( ) ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 9 
 - this . uuidToPlayerMap . remove ( uuid ) ; 
 - this . playerStatFiles . remove ( uuid ) ; 
 - } 
 - + net . minecraftforge . common . chunkio . ChunkIOExecutor . adjustPoolSize ( this . getCurrentPlayerCount ( ) ) ; 
 - 
 - this . sendPacketToAllPlayers ( new S38PacketPlayerListItem ( S38PacketPlayerListItem . Action . REMOVE _ PLAYER , new EntityPlayerMP [ ] { playerIn } ) ) ; 
 - } 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 10 
 - 
 - public EntityPlayerMP recreatePlayerEntity ( EntityPlayerMP playerIn , int dimension , boolean conqueredEnd ) 
 - { 
 - + World world = mcServer . worldServerForDimension ( dimension ) ; 
 - + if ( world = = null ) 
 - + { 
 - + dimension = 0 ; 
 - + } 
 - + else if ( ! world . provider . canRespawnHere ( ) ) 
 - + { 
 - + dimension = world . provider . getRespawnDimension ( playerIn ) ; 
 - + } 
 - + 
 - playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . removePlayerFromTrackers ( playerIn ) ; 
 - playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . untrackEntity ( playerIn ) ; 
 - playerIn . getServerForPlayer ( ) . getPlayerManager ( ) . removePlayer ( playerIn ) ; 
 - this . playerEntityList . remove ( playerIn ) ; 
 - this . mcServer . worldServerForDimension ( playerIn . dimension ) . removePlayerEntityDangerously ( playerIn ) ; 
 - - BlockPos blockpos = playerIn . getBedLocation ( ) ; 
 - - boolean flag = playerIn . isSpawnForced ( ) ; 
 - + BlockPos blockpos = playerIn . getBedLocation ( dimension ) ; 
 - + boolean flag = playerIn . isSpawnForced ( dimension ) ; 
 - playerIn . dimension = dimension ; 
 - ItemInWorldManager iteminworldmanager ; 
 - 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 11 
 - EntityPlayerMP entityplayermp = new EntityPlayerMP ( this . mcServer , this . mcServer . worldServerForDimension ( playerIn . dimension ) , playerIn . getGameProfile ( ) , iteminworldmanager ) ; 
 - entityplayermp . playerNetServerHandler = playerIn . playerNetServerHandler ; 
 - entityplayermp . clonePlayer ( playerIn , conqueredEnd ) ; 
 - + entityplayermp . dimension = dimension ; 
 - entityplayermp . setEntityId ( playerIn . getEntityId ( ) ) ; 
 - entityplayermp . func _ 174817 _ o ( playerIn ) ; 
 - WorldServer worldserver = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 12 
 - this . uuidToPlayerMap . put ( entityplayermp . getUniqueID ( ) , entityplayermp ) ; 
 - entityplayermp . addSelfToInternalCraftingInventory ( ) ; 
 - entityplayermp . setHealth ( entityplayermp . getHealth ( ) ) ; 
 - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerRespawnEvent ( entityplayermp ) ; 
 - return entityplayermp ; 
 - } 
 - 
 - public void transferPlayerToDimension ( EntityPlayerMP playerIn , int dimension ) 
 - { 
 - + transferPlayerToDimension ( playerIn , dimension , mcServer . worldServerForDimension ( dimension ) . getDefaultTeleporter ( ) ) ; 
 - + } 
 - + 
 - + public void transferPlayerToDimension ( EntityPlayerMP playerIn , int dimension , net . minecraft . world . Teleporter teleporter ) 
 - + { 
 - int i = playerIn . dimension ; 
 - WorldServer worldserver = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; 
 - playerIn . dimension = dimension ; 
 - WorldServer worldserver1 = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; 
 - - playerIn . playerNetServerHandler . sendPacket ( new S07PacketRespawn ( playerIn . dimension , playerIn . worldObj . getDifficulty ( ) , playerIn . worldObj . getWorldInfo ( ) . getTerrainType ( ) , playerIn . theItemInWorldManager . getGameType ( ) ) ) ; 
 - + playerIn . playerNetServerHandler . sendPacket ( new S07PacketRespawn ( playerIn . dimension , worldserver1 . getDifficulty ( ) , worldserver1 . getWorldInfo ( ) . getTerrainType ( ) , playerIn . theItemInWorldManager . getGameType ( ) ) ) ; 
 - worldserver . removePlayerEntityDangerously ( playerIn ) ; 
 - playerIn . isDead = false ; 
 - - this . transferEntityToWorld ( playerIn , i , worldserver , worldserver1 ) ; 
 - + this . transferEntityToWorld ( playerIn , i , worldserver , worldserver1 , teleporter ) ; 
 - this . preparePlayer ( playerIn , worldserver ) ; 
 - playerIn . playerNetServerHandler . setPlayerLocation ( playerIn . posX , playerIn . posY , playerIn . posZ , playerIn . rotationYaw , playerIn . rotationPitch ) ; 
 - playerIn . theItemInWorldManager . setWorld ( worldserver1 ) ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 13 
 - { 
 - playerIn . playerNetServerHandler . sendPacket ( new S1DPacketEntityEffect ( playerIn . getEntityId ( ) , potioneffect ) ) ; 
 - } 
 - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerChangedDimensionEvent ( playerIn , i , dimension ) ; 
 - } 
 - 
 - public void transferEntityToWorld ( Entity entityIn , int p _ 82448 _ 2 _ , WorldServer p _ 82448 _ 3 _ , WorldServer p _ 82448 _ 4 _ ) 
 - { 
 - - double d0 = entityIn . posX ; 
 - - double d1 = entityIn . posZ ; 
 - + transferEntityToWorld ( entityIn , p _ 82448 _ 2 _ , p _ 82448 _ 3 _ , p _ 82448 _ 4 _ , p _ 82448 _ 4 _ . getDefaultTeleporter ( ) ) ; 
 - + } 
 - + 
 - + @ SuppressWarnings ( " unused " ) 
 - + public void transferEntityToWorld ( Entity entityIn , int p _ 82448 _ 2 _ , WorldServer p _ 82448 _ 3 _ , WorldServer p _ 82448 _ 4 _ , net . minecraft . world . Teleporter teleporter ) 
 - + { 
 - + net . minecraft . world . WorldProvider pOld = p _ 82448 _ 3 _ . provider ; 
 - + net . minecraft . world . WorldProvider pNew = p _ 82448 _ 4 _ . provider ; 
 - + double moveFactor = pOld . getMovementFactor ( ) / pNew . getMovementFactor ( ) ; 
 - + double d0 = entityIn . posX * moveFactor ; 
 - + double d1 = entityIn . posZ * moveFactor ; 
 - double d2 = 8 . 0D ; 
 - float f = entityIn . rotationYaw ; 
 - p _ 82448 _ 3 _ . theProfiler . startSection ( " moving " ) ; 
 - 
 - - if ( entityIn . dimension = = - 1 ) 
 - + if ( false & & entityIn . dimension = = - 1 ) / / Forge Kill it but dont comment out so we can rename it . 
 - { 
 - d0 = MathHelper . clamp _ double ( d0 / d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minX ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxX ( ) - 16 . 0D ) ; 
 - d1 = MathHelper . clamp _ double ( d1 / d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minZ ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxZ ( ) - 16 . 0D ) ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 14 
 - p _ 82448 _ 3 _ . updateEntityWithOptionalForce ( entityIn , false ) ; 
 - } 
 - } 
 - - else if ( entityIn . dimension = = 0 ) 
 - + else if ( false & & entityIn . dimension = = 0 ) / / Forge Kill it but dont comment out so we can rename it . 
 - { 
 - d0 = MathHelper . clamp _ double ( d0 * d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minX ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxX ( ) - 16 . 0D ) ; 
 - d1 = MathHelper . clamp _ double ( d1 * d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minZ ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxZ ( ) - 16 . 0D ) ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 15 
 - p _ 82448 _ 3 _ . updateEntityWithOptionalForce ( entityIn , false ) ; 
 - } 
 - } 
 - - else 
 - + 
 - + if ( entityIn . dimension = = 1 ) 
 - { 
 - BlockPos blockpos ; 
 - 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 16 
 - if ( entityIn . isEntityAlive ( ) ) 
 - { 
 - entityIn . setLocationAndAngles ( d0 , entityIn . posY , d1 , entityIn . rotationYaw , entityIn . rotationPitch ) ; 
 - - p _ 82448 _ 4 _ . getDefaultTeleporter ( ) . placeInPortal ( entityIn , f ) ; 
 - + teleporter . placeInPortal ( entityIn , f ) ; 
 - p _ 82448 _ 4 _ . spawnEntityInWorld ( entityIn ) ; 
 - p _ 82448 _ 4 _ . updateEntityWithOptionalForce ( entityIn , false ) ; 
 - } 
 - + + + + END PATCH

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / server / management / ItemInWorldManager . java . patch b / patches / minecraft / net / minecraft / server / management / ItemInWorldManager . java . patch 
 index 2a343d6 . . 17cf566 100644 
 - - - a / patches / minecraft / net / minecraft / server / management / ItemInWorldManager . java . patch 
 + + + b / patches / minecraft / net / minecraft / server / management / ItemInWorldManager . java . patch 
 @ @ - 167 , 7 + 167 , 7 @ @ 
 if ( itemstack . stackSize = = 0 ) 
 { 
 player . inventory . mainInventory [ player . inventory . currentItem ] = null ; 
 - + net . minecraftforge . event . ForgeEventFactory . onPlayerDestroyItem ( player , itemstack1 ) ; 
 + + net . minecraftforge . event . ForgeEventFactory . onPlayerDestroyItem ( player , itemstack ) ; 
 } 
 
 if ( ! player . isUsingItem ( ) ) 
 diff - - git a / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch b / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch 
 index 309ef6e . . 259f162 100644 
 - - - a / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch 
 + + + b / patches / minecraft / net / minecraft / server / management / PlayerManager . java . patch 
 @ @ - 5 , 7 + 5 , 7 @ @ 
 p _ 72683 _ 1 _ . managedPosX = p _ 72683 _ 1 _ . posX ; 
 p _ 72683 _ 1 _ . managedPosZ = p _ 72683 _ 1 _ . posZ ; 
 + / / Load nearby chunks first 
 - + List < ChunkCoordIntPair > chunkList = new ArrayList < ChunkCoordIntPair > ( ) ; 
 + + List < ChunkCoordIntPair > chunkList = Lists . newArrayList ( ) ; 
 
 for ( int k = i - this . playerViewRadius ; k < = i + this . playerViewRadius ; + + k ) 
 { 
 @ @ - 30 , 7 + 30 , 7 @ @ 
 int i1 = this . playerViewRadius ; 
 int j1 = i - k ; 
 int k1 = j - l ; 
 - + List < ChunkCoordIntPair > chunksToLoad = new ArrayList < ChunkCoordIntPair > ( ) ; 
 + + List < ChunkCoordIntPair > chunksToLoad = Lists . newArrayList ( ) ; 
 
 if ( j1 ! = 0 | | k1 ! = 0 ) 
 { 
 @ @ - 176 , 7 + 176 , 7 @ @ 
 public void onUpdate ( ) 
 { 
 if ( this . numBlocksToUpdate ! = 0 ) 
 - @ @ - 441 , 7 + 515 , 7 @ @ 
 + @ @ - 441 , 18 + 515 , 19 @ @ 
 BlockPos blockpos = new BlockPos ( i , j , k ) ; 
 this . sendToAllPlayersWatchingChunk ( new S23PacketBlockChange ( PlayerManager . this . theWorldServer , blockpos ) ) ; 
 
 @ @ - 185 , 3 + 185 , 37 @ @ 
 { 
 this . sendTileToAllPlayersWatchingChunk ( PlayerManager . this . theWorldServer . getTileEntity ( blockpos ) ) ; 
 } 
 + } 
 + - else if ( this . numBlocksToUpdate = = 64 ) 
 + + else if ( this . numBlocksToUpdate > = net . minecraftforge . common . ForgeModContainer . clumpingThreshold ) 
 + { 
 + int i1 = this . chunkCoords . chunkXPos * 16 ; 
 + int k1 = this . chunkCoords . chunkZPos * 16 ; 
 + this . sendToAllPlayersWatchingChunk ( new S21PacketChunkData ( PlayerManager . this . theWorldServer . getChunkFromChunkCoords ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos ) , false , this . flagsYAreasToUpdate ) ) ; 
 + 
 + - for ( int i2 = 0 ; i2 < 16 ; + + i2 ) 
 + + / / Forge : Grabs ALL tile entities is costly on a modded server , only send needed ones 
 + + for ( int i2 = 0 ; false & & i2 < 16 ; + + i2 ) 
 + { 
 + if ( ( this . flagsYAreasToUpdate & 1 < < i2 ) ! = 0 ) 
 + { 
 + @ @ - 469 , 7 + 544 , 9 @ @ 
 + else 
 + { 
 + this . sendToAllPlayersWatchingChunk ( new S22PacketMultiBlockChange ( this . numBlocksToUpdate , this . locationOfBlockChange , PlayerManager . this . theWorldServer . getChunkFromChunkCoords ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos ) ) ) ; 
 + - 
 + + } 
 + + { / / Forge : Send only the tile entities that are updated , Adding this brace lets us keep the indent and the patch small 
 + + WorldServer world = PlayerManager . this . theWorldServer ; 
 + for ( int j1 = 0 ; j1 < this . numBlocksToUpdate ; + + j1 ) 
 + { 
 + int l1 = ( this . locationOfBlockChange [ j1 ] > > 12 & 15 ) + this . chunkCoords . chunkXPos * 16 ; 
 + @ @ - 477 , 7 + 554 , 7 @ @ 
 + int l2 = ( this . locationOfBlockChange [ j1 ] > > 8 & 15 ) + this . chunkCoords . chunkZPos * 16 ; 
 + BlockPos blockpos1 = new BlockPos ( l1 , j2 , l2 ) ; 
 + 
 + - if ( PlayerManager . this . theWorldServer . getBlockState ( blockpos1 ) . getBlock ( ) . hasTileEntity ( ) ) 
 + + if ( world . getBlockState ( blockpos1 ) . getBlock ( ) . hasTileEntity ( world . getBlockState ( blockpos1 ) ) ) 
 + { 
 + this . sendTileToAllPlayersWatchingChunk ( PlayerManager . this . theWorldServer . getTileEntity ( blockpos1 ) ) ; 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / server / management / PlayerProfileCache . java . patch b / patches / minecraft / net / minecraft / server / management / PlayerProfileCache . java . patch 
 deleted file mode 100644 
 index c622cc3 . . 0000000 
 - - - a / patches / minecraft / net / minecraft / server / management / PlayerProfileCache . java . patch 
 + + + / dev / null 
 @ @ - 1 , 23 + 0 , 0 @ @ 
 - - - - . . / src - base / minecraft / net / minecraft / server / management / PlayerProfileCache . java 
 - + + + . . / src - work / minecraft / net / minecraft / server / management / PlayerProfileCache . java 
 - @ @ - 229 , 6 + 229 , 20 @ @ 
 - { 
 - IOUtils . closeQuietly ( ( Reader ) bufferedreader ) ; 
 - } 
 - + } 
 - + catch ( FileNotFoundException filenotfoundexception ) 
 - + { 
 - + ; 
 - + } 
 - + catch ( com . google . gson . JsonParseException parsefail ) 
 - + { 
 - + / / No op - the cache can quietly rebuild if it ' s junk 
 - + } 
 - + finally 
 - + { 
 - + IOUtils . closeQuietly ( bufferedreader ) ; 
 - + } 
 - + } 
 - } 
 - 
 - public void func _ 152658 _ c ( ) 
 diff - - git a / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch b / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch 
 index 39f1733 . . b4c725a 100644 
 - - - a / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch 
 + + + b / patches / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch 
 @ @ - 92 , 11 + 92 , 81 @ @ 
 playerIn . triggerAchievement ( StatList . leaveGameStat ) ; 
 this . writePlayerData ( playerIn ) ; 
 WorldServer worldserver = playerIn . getServerForPlayer ( ) ; 
 - @ @ - 495 , 17 + 525 , 27 @ @ 
 + @ @ - 328 , 6 + 358 , 7 @ @ 
 + this . uuidToPlayerMap . remove ( uuid ) ; 
 + this . playerStatFiles . remove ( uuid ) ; 
 + } 
 + + net . minecraftforge . common . chunkio . ChunkIOExecutor . adjustPoolSize ( this . getCurrentPlayerCount ( ) ) ; 
 + 
 + this . sendPacketToAllPlayers ( new S38PacketPlayerListItem ( S38PacketPlayerListItem . Action . REMOVE _ PLAYER , new EntityPlayerMP [ ] { playerIn } ) ) ; 
 + } 
 + @ @ - 411 , 13 + 442 , 23 @ @ 
 + 
 + public EntityPlayerMP recreatePlayerEntity ( EntityPlayerMP playerIn , int dimension , boolean conqueredEnd ) 
 + { 
 + + World world = mcServer . worldServerForDimension ( dimension ) ; 
 + + if ( world = = null ) 
 + + { 
 + + dimension = 0 ; 
 + + } 
 + + else if ( ! world . provider . canRespawnHere ( ) ) 
 + + { 
 + + dimension = world . provider . getRespawnDimension ( playerIn ) ; 
 + + } 
 + + 
 + playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . removePlayerFromTrackers ( playerIn ) ; 
 + playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . untrackEntity ( playerIn ) ; 
 + playerIn . getServerForPlayer ( ) . getPlayerManager ( ) . removePlayer ( playerIn ) ; 
 + this . playerEntityList . remove ( playerIn ) ; 
 + this . mcServer . worldServerForDimension ( playerIn . dimension ) . removePlayerEntityDangerously ( playerIn ) ; 
 + - BlockPos blockpos = playerIn . getBedLocation ( ) ; 
 + - boolean flag = playerIn . isSpawnForced ( ) ; 
 + + BlockPos blockpos = playerIn . getBedLocation ( dimension ) ; 
 + + boolean flag = playerIn . isSpawnForced ( dimension ) ; 
 + playerIn . dimension = dimension ; 
 + ItemInWorldManager iteminworldmanager ; 
 + 
 + @ @ - 433 , 6 + 474 , 7 @ @ 
 + EntityPlayerMP entityplayermp = new EntityPlayerMP ( this . mcServer , this . mcServer . worldServerForDimension ( playerIn . dimension ) , playerIn . getGameProfile ( ) , iteminworldmanager ) ; 
 + entityplayermp . playerNetServerHandler = playerIn . playerNetServerHandler ; 
 + entityplayermp . clonePlayer ( playerIn , conqueredEnd ) ; 
 + + entityplayermp . dimension = dimension ; 
 + entityplayermp . setEntityId ( playerIn . getEntityId ( ) ) ; 
 + entityplayermp . func _ 174817 _ o ( playerIn ) ; 
 + WorldServer worldserver = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; 
 + @ @ - 472 , 19 + 514 , 25 @ @ 
 + this . uuidToPlayerMap . put ( entityplayermp . getUniqueID ( ) , entityplayermp ) ; 
 + entityplayermp . addSelfToInternalCraftingInventory ( ) ; 
 + entityplayermp . setHealth ( entityplayermp . getHealth ( ) ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerRespawnEvent ( entityplayermp ) ; 
 + return entityplayermp ; 
 + } 
 + 
 + public void transferPlayerToDimension ( EntityPlayerMP playerIn , int dimension ) 
 + { 
 + + transferPlayerToDimension ( playerIn , dimension , mcServer . worldServerForDimension ( dimension ) . getDefaultTeleporter ( ) ) ; 
 + + } 
 + + 
 + + public void transferPlayerToDimension ( EntityPlayerMP playerIn , int dimension , net . minecraft . world . Teleporter teleporter ) 
 + + { 
 + int i = playerIn . dimension ; 
 + WorldServer worldserver = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; 
 + playerIn . dimension = dimension ; 
 + WorldServer worldserver1 = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; 
 + - playerIn . playerNetServerHandler . sendPacket ( new S07PacketRespawn ( playerIn . dimension , playerIn . worldObj . getDifficulty ( ) , playerIn . worldObj . getWorldInfo ( ) . getTerrainType ( ) , playerIn . theItemInWorldManager . getGameType ( ) ) ) ; 
 + + playerIn . playerNetServerHandler . sendPacket ( new S07PacketRespawn ( playerIn . dimension , worldserver1 . getDifficulty ( ) , worldserver1 . getWorldInfo ( ) . getTerrainType ( ) , playerIn . theItemInWorldManager . getGameType ( ) ) ) ; 
 + worldserver . removePlayerEntityDangerously ( playerIn ) ; 
 + playerIn . isDead = false ; 
 + - this . transferEntityToWorld ( playerIn , i , worldserver , worldserver1 ) ; 
 + + this . transferEntityToWorld ( playerIn , i , worldserver , worldserver1 , teleporter ) ; 
 + this . func _ 72375 _ a ( playerIn , worldserver ) ; 
 + playerIn . playerNetServerHandler . setPlayerLocation ( playerIn . posX , playerIn . posY , playerIn . posZ , playerIn . rotationYaw , playerIn . rotationPitch ) ; 
 + playerIn . theItemInWorldManager . setWorld ( worldserver1 ) ; 
 + @ @ - 495 , 17 + 543 , 27 @ @ 
 { 
 playerIn . playerNetServerHandler . sendPacket ( new S1DPacketEntityEffect ( playerIn . getEntityId ( ) , potioneffect ) ) ; 
 } 
 - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerChangedDimensionEvent ( playerIn , j , dimension ) ; 
 + + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerChangedDimensionEvent ( playerIn , i , dimension ) ; 
 } 
 
 public void transferEntityToWorld ( Entity entityIn , int p _ 82448 _ 2 _ , WorldServer p _ 82448 _ 3 _ , WorldServer p _ 82448 _ 4 _ ) 
 @ @ - 123 , 7 + 193 , 7 @ @ 
 { 
 d0 = MathHelper . clamp _ double ( d0 / d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minX ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxX ( ) - 16 . 0D ) ; 
 d1 = MathHelper . clamp _ double ( d1 / d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minZ ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxZ ( ) - 16 . 0D ) ; 
 - @ @ - 516 , 7 + 556 , 7 @ @ 
 + @ @ - 516 , 7 + 574 , 7 @ @ 
 p _ 82448 _ 3 _ . updateEntityWithOptionalForce ( entityIn , false ) ; 
 } 
 } 
 @ @ - 132 , 7 + 202 , 7 @ @ 
 { 
 d0 = MathHelper . clamp _ double ( d0 * d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minX ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxX ( ) - 16 . 0D ) ; 
 d1 = MathHelper . clamp _ double ( d1 * d2 , p _ 82448 _ 4 _ . getWorldBorder ( ) . minZ ( ) + 16 . 0D , p _ 82448 _ 4 _ . getWorldBorder ( ) . maxZ ( ) - 16 . 0D ) ; 
 - @ @ - 527 , 7 + 567 , 8 @ @ 
 + @ @ - 527 , 7 + 585 , 8 @ @ 
 p _ 82448 _ 3 _ . updateEntityWithOptionalForce ( entityIn , false ) ; 
 } 
 } 
 @ @ - 142 , 7 + 212 , 7 @ @ 
 { 
 BlockPos blockpos ; 
 
 - @ @ - 562 , 7 + 603 , 7 @ @ 
 + @ @ - 562 , 7 + 621 , 7 @ @ 
 if ( entityIn . isEntityAlive ( ) ) 
 { 
 entityIn . setLocationAndAngles ( d0 , entityIn . posY , d1 , entityIn . rotationYaw , entityIn . rotationPitch ) ; 
 diff - - git a / patches / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch b / patches / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch 
 new file mode 100644 
 index 0000000 . . f4e6fa5 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java 
 + + + + . . / src - work / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java 
 + @ @ - 23 , 6 + 23 , 8 @ @ 
 + 
 + public void processHandshake ( C00Handshake packetIn ) 
 + { 
 + + if ( ! net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . handleServerHandshake ( packetIn , this . networkManager ) ) return ; 
 + + 
 + switch ( packetIn . getRequestedState ( ) ) 
 + { 
 + case LOGIN : 
 diff - - git a / rejects / minecraft / net / minecraft / server / management / PlayerManager . java . patch . rej b / rejects / minecraft / net / minecraft / server / management / PlayerManager . java . patch . rej 
 deleted file mode 100644 
 index fa38e89 . . 0000000 
 - - - a / rejects / minecraft / net / minecraft / server / management / PlayerManager . java . patch . rej 
 + + + / dev / null 
 @ @ - 1 , 40 + 0 , 0 @ @ 
 - + + + + REJECTED PATCH 13 
 - { 
 - int i1 ; 
 - 
 - - if ( this . numBlocksToUpdate = = 64 ) 
 - + if ( this . numBlocksToUpdate > = net . minecraftforge . common . ForgeModContainer . clumpingThreshold ) 
 - { 
 - i = this . chunkCoords . chunkXPos * 16 ; 
 - j = this . chunkCoords . chunkZPos * 16 ; 
 - this . sendToAllPlayersWatchingChunk ( new S21PacketChunkData ( PlayerManager . this . theWorldServer . getChunkFromChunkCoords ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos ) , false , this . flagsYAreasToUpdate ) ) ; 
 - 
 - - for ( k = 0 ; k < 16 ; + + k ) 
 - + / / Forge : Grabs ALL tile entities is costly on a modded server , only send needed ones 
 - + for ( k = 0 ; false & & k < 16 ; + + k ) 
 - { 
 - if ( ( this . flagsYAreasToUpdate & 1 < < k ) ! = 0 ) 
 - { 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 14 
 - else 
 - { 
 - this . sendToAllPlayersWatchingChunk ( new S22PacketMultiBlockChange ( this . numBlocksToUpdate , this . locationOfBlockChange , PlayerManager . this . theWorldServer . getChunkFromChunkCoords ( this . chunkCoords . chunkXPos , this . chunkCoords . chunkZPos ) ) ) ; 
 - + } 
 - 
 - + { / / Forge : Send only the tile entities that are updated , Adding this brace lets us keep the indent and the patch small 
 - + WorldServer world = PlayerManager . this . theWorldServer ; 
 - for ( i = 0 ; i < this . numBlocksToUpdate ; + + i ) 
 - { 
 - j = ( this . locationOfBlockChange [ i ] > > 12 & 15 ) + this . chunkCoords . chunkXPos * 16 ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 15 
 - i1 = ( this . locationOfBlockChange [ i ] > > 8 & 15 ) + this . chunkCoords . chunkZPos * 16 ; 
 - BlockPos blockpos1 = new BlockPos ( j , k , i1 ) ; 
 - 
 - - if ( PlayerManager . this . theWorldServer . getBlockState ( blockpos1 ) . getBlock ( ) . hasTileEntity ( ) ) 
 - + if ( world . getBlockState ( blockpos1 ) . getBlock ( ) . hasTileEntity ( world . getBlockState ( blockpos1 ) ) ) 
 - { 
 - this . sendTileToAllPlayersWatchingChunk ( PlayerManager . this . theWorldServer . getTileEntity ( blockpos1 ) ) ; 
 - } 
 - + + + + END PATCH 
 diff - - git a / rejects / minecraft / net / minecraft / server / management / PlayerProfileCache . java . patch . rej b / rejects / minecraft / net / minecraft / server / management / PlayerProfileCache . java . patch . rej 
 deleted file mode 100644 
 index 5572faf . . 0000000 
 - - - a / rejects / minecraft / net / minecraft / server / management / PlayerProfileCache . java . patch . rej 
 + + + / dev / null 
 @ @ - 1 , 28 + 0 , 0 @ @ 
 - + + + + REJECTED PATCH 1 
 - { 
 - List list = null ; 
 - BufferedReader bufferedreader = null ; 
 - - label64 : 
 - { 
 - try 
 - { 
 - bufferedreader = Files . newReader ( this . usercacheFile , Charsets . UTF _ 8 ) ; 
 - list = ( List ) this . gson . fromJson ( bufferedreader , field _ 152666 _ h ) ; 
 - - break label64 ; 
 - - } 
 - - catch ( FileNotFoundException filenotfoundexception ) 
 - - { 
 - - ; 
 - - } 
 - - finally 
 - - { 
 - - IOUtils . closeQuietly ( bufferedreader ) ; 
 - - } 
 - 
 - - return ; 
 - - } 
 - - 
 - if ( list ! = null ) 
 - { 
 - this . field _ 152661 _ c . clear ( ) ; 
 - + + + + END PATCH 
 diff - - git a / rejects / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch . rej b / rejects / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch . rej 
 deleted file mode 100644 
 index 29f9d27 . . 0000000 
 - - - a / rejects / minecraft / net / minecraft / server / management / ServerConfigurationManager . java . patch . rej 
 + + + / dev / null 
 @ @ - 1 , 74 + 0 , 0 @ @ 
 - + + + + REJECTED PATCH 9 
 - this . playerEntityList . remove ( playerIn ) ; 
 - this . uuidToPlayerMap . remove ( playerIn . getUniqueID ( ) ) ; 
 - this . playerStatFiles . remove ( playerIn . getUniqueID ( ) ) ; 
 - + net . minecraftforge . common . chunkio . ChunkIOExecutor . adjustPoolSize ( this . getCurrentPlayerCount ( ) ) ; 
 - this . sendPacketToAllPlayers ( new S38PacketPlayerListItem ( S38PacketPlayerListItem . Action . REMOVE _ PLAYER , new EntityPlayerMP [ ] { playerIn } ) ) ; 
 - } 
 - 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 10 
 - 
 - public EntityPlayerMP recreatePlayerEntity ( EntityPlayerMP playerIn , int dimension , boolean conqueredEnd ) 
 - { 
 - + World world = mcServer . worldServerForDimension ( dimension ) ; 
 - + if ( world = = null ) 
 - + { 
 - + dimension = 0 ; 
 - + } 
 - + else if ( ! world . provider . canRespawnHere ( ) ) 
 - + { 
 - + dimension = world . provider . getRespawnDimension ( playerIn ) ; 
 - + } 
 - + 
 - playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . removePlayerFromTrackers ( playerIn ) ; 
 - playerIn . getServerForPlayer ( ) . getEntityTracker ( ) . untrackEntity ( playerIn ) ; 
 - playerIn . getServerForPlayer ( ) . getPlayerManager ( ) . removePlayer ( playerIn ) ; 
 - this . playerEntityList . remove ( playerIn ) ; 
 - this . mcServer . worldServerForDimension ( playerIn . dimension ) . removePlayerEntityDangerously ( playerIn ) ; 
 - - BlockPos blockpos = playerIn . getBedLocation ( ) ; 
 - - boolean flag1 = playerIn . isSpawnForced ( ) ; 
 - + BlockPos blockpos = playerIn . getBedLocation ( dimension ) ; 
 - + boolean flag1 = playerIn . isSpawnForced ( dimension ) ; 
 - playerIn . dimension = dimension ; 
 - Object object ; 
 - 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 11 
 - EntityPlayerMP entityplayermp1 = new EntityPlayerMP ( this . mcServer , this . mcServer . worldServerForDimension ( playerIn . dimension ) , playerIn . getGameProfile ( ) , ( ItemInWorldManager ) object ) ; 
 - entityplayermp1 . playerNetServerHandler = playerIn . playerNetServerHandler ; 
 - entityplayermp1 . clonePlayer ( playerIn , conqueredEnd ) ; 
 - + entityplayermp1 . dimension = dimension ; 
 - entityplayermp1 . setEntityId ( playerIn . getEntityId ( ) ) ; 
 - entityplayermp1 . func _ 174817 _ o ( playerIn ) ; 
 - WorldServer worldserver = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; 
 - + + + + END PATCH 
 - + + + + REJECTED PATCH 12 
 - this . uuidToPlayerMap . put ( entityplayermp1 . getUniqueID ( ) , entityplayermp1 ) ; 
 - entityplayermp1 . addSelfToInternalCraftingInventory ( ) ; 
 - entityplayermp1 . setHealth ( entityplayermp1 . getHealth ( ) ) ; 
 - + net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . firePlayerRespawnEvent ( entityplayermp1 ) ; 
 - return entityplayermp1 ; 
 - } 
 - 
 - public void transferPlayerToDimension ( EntityPlayerMP playerIn , int dimension ) 
 - { 
 - + transferPlayerToDimension ( playerIn , dimension , mcServer . worldServerForDimension ( dimension ) . getDefaultTeleporter ( ) ) ; 
 - + } 
 - + 
 - + public void transferPlayerToDimension ( EntityPlayerMP playerIn , int dimension , net . minecraft . world . Teleporter teleporter ) 
 - + { 
 - int j = playerIn . dimension ; 
 - WorldServer worldserver = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; 
 - playerIn . dimension = dimension ; 
 - WorldServer worldserver1 = this . mcServer . worldServerForDimension ( playerIn . dimension ) ; 
 - - playerIn . playerNetServerHandler . sendPacket ( new S07PacketRespawn ( playerIn . dimension , playerIn . worldObj . getDifficulty ( ) , playerIn . worldObj . getWorldInfo ( ) . getTerrainType ( ) , playerIn . theItemInWorldManager . getGameType ( ) ) ) ; 
 - + playerIn . playerNetServerHandler . sendPacket ( new S07PacketRespawn ( playerIn . dimension , worldserver1 . getDifficulty ( ) , worldserver1 . getWorldInfo ( ) . getTerrainType ( ) , playerIn . theItemInWorldManager . getGameType ( ) ) ) ; / / Forge : Use new dimensions information 
 - worldserver . removePlayerEntityDangerously ( playerIn ) ; 
 - playerIn . isDead = false ; 
 - - this . transferEntityToWorld ( playerIn , j , worldserver , worldserver1 ) ; 
 - + this . transferEntityToWorld ( playerIn , j , worldserver , worldserver1 , teleporter ) ; 
 - this . func _ 72375 _ a ( playerIn , worldserver ) ; 
 - playerIn . playerNetServerHandler . setPlayerLocation ( playerIn . posX , playerIn . posY , playerIn . posZ , playerIn . rotationYaw , playerIn . rotationPitch ) ; 
 - playerIn . theItemInWorldManager . setWorld ( worldserver1 ) ; 
 - + + + + END PATCH 
 diff - - git a / rejects / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch . rej b / rejects / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch . rej 
 deleted file mode 100644 
 index 8e844f9 . . 0000000 
 - - - a / rejects / minecraft / net / minecraft / server / network / NetHandlerHandshakeTCP . java . patch . rej 
 + + + / dev / null 
 @ @ - 1 , 10 + 0 , 0 @ @ 
 - + + + + REJECTED PATCH 1 
 - 
 - public void processHandshake ( C00Handshake packetIn ) 
 - { 
 - + if ( ! net . minecraftforge . fml . common . FMLCommonHandler . instance ( ) . handleServerHandshake ( packetIn , this . networkManager ) ) return ; 
 - + 
 - switch ( NetHandlerHandshakeTCP . SwitchEnumConnectionState . VALUES [ packetIn . getRequestedState ( ) . ordinal ( ) ] ) 
 - { 
 - case 1 : 
 - + + + + END PATCH
