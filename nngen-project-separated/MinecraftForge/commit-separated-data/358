BLEU SCORE: 0.018738883683389617

TEST MSG: Fixed ShapedOre recipes not laying out correctly with the guidebook .
GENERATED MSG: Update forge

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeBook . java . patch b / patches / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeBook . java . patch <nl> new file mode 100644 <nl> index 0000000 . . b7c6c0e <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeBook . java . patch <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeBook . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeBook . java <nl> + @ @ - 485 , 7 + 485 , 7 @ @ <nl> + this . field _ 191915 _ z . func _ 194187 _ a ( Ingredient . func _ 193369 _ a ( itemstack ) , ( p _ 193951 _ 2 _ . get ( 0 ) ) . field _ 75223 _ e , ( p _ 193951 _ 2 _ . get ( 0 ) ) . field _ 75221 _ f ) ; <nl> + int i = this . field _ 193961 _ o . func _ 174922 _ i ( ) ; <nl> + int j = this . field _ 193961 _ o . func _ 174923 _ h ( ) ; <nl> + - int k = p _ 193951 _ 1 _ instanceof ShapedRecipes ? ( ( ShapedRecipes ) p _ 193951 _ 1 _ ) . func _ 192403 _ f ( ) : i ; <nl> + + int k = p _ 193951 _ 1 _ instanceof net . minecraftforge . common . crafting . IShapedRecipe ? ( ( net . minecraftforge . common . crafting . IShapedRecipe ) p _ 193951 _ 1 _ ) . getRecipeWidth ( ) : i ; <nl> + int l = 1 ; <nl> + Iterator < Ingredient > iterator = p _ 193951 _ 1 _ . func _ 192400 _ c ( ) . iterator ( ) ; <nl> + <nl> diff - - git a / patches / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeOverlay . java . patch b / patches / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeOverlay . java . patch <nl> new file mode 100644 <nl> index 0000000 . . c95bd2b <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeOverlay . java . patch <nl> @ @ - 0 , 0 + 1 , 18 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeOverlay . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeOverlay . java <nl> + @ @ - 230 , 11 + 230 , 11 @ @ <nl> + int k = 3 ; <nl> + int l = 3 ; <nl> + <nl> + - if ( this . field _ 193924 _ p instanceof ShapedRecipes ) <nl> + + if ( this . field _ 193924 _ p instanceof net . minecraftforge . common . crafting . IShapedRecipe ) <nl> + { <nl> + - ShapedRecipes shapedrecipes = ( ShapedRecipes ) this . field _ 193924 _ p ; <nl> + - k = shapedrecipes . func _ 192403 _ f ( ) ; <nl> + - l = shapedrecipes . func _ 192404 _ g ( ) ; <nl> + + net . minecraftforge . common . crafting . IShapedRecipe shapedrecipes = ( net . minecraftforge . common . crafting . IShapedRecipe ) this . field _ 193924 _ p ; <nl> + + k = shapedrecipes . getRecipeWidth ( ) ; <nl> + + l = shapedrecipes . getRecipeHeight ( ) ; <nl> + } <nl> + <nl> + Iterator < Ingredient > iterator = this . field _ 193924 _ p . func _ 192400 _ c ( ) . iterator ( ) ; <nl> diff - - git a / patches / minecraft / net / minecraft / item / crafting / ShapedRecipes . java . patch b / patches / minecraft / net / minecraft / item / crafting / ShapedRecipes . java . patch <nl> index d0891d5 . . 7bc05b4 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / crafting / ShapedRecipes . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / crafting / ShapedRecipes . java . patch <nl> @ @ - 8 , 7 + 8 , 7 @ @ <nl> - import net . minecraftforge . fml . relauncher . SideOnly ; <nl> <nl> - public class ShapedRecipes implements IRecipe <nl> - + public class ShapedRecipes extends net . minecraftforge . registries . IForgeRegistryEntry . Impl < IRecipe > implements IRecipe <nl> + + public class ShapedRecipes extends net . minecraftforge . registries . IForgeRegistryEntry . Impl < IRecipe > implements net . minecraftforge . common . crafting . IShapedRecipe <nl> { <nl> public final int field _ 77576 _ b ; <nl> public final int field _ 77577 _ c ; <nl> @ @ - 40 , 3 + 40 , 20 @ @ <nl> public boolean func _ 194133 _ a ( int p _ 194133 _ 1 _ , int p _ 194133 _ 2 _ ) <nl> { <nl> return p _ 194133 _ 1 _ > = this . field _ 77576 _ b & & p _ 194133 _ 2 _ > = this . field _ 77577 _ c ; <nl> + @ @ - 379 , 4 + 372 , 16 @ @ <nl> + return new ItemStack ( item , j , i ) ; <nl> + } <nl> + } <nl> + + <nl> + + / / = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = <nl> + + @ Override <nl> + + public int getRecipeWidth ( ) <nl> + + { <nl> + + return this . func _ 192403 _ f ( ) ; <nl> + + } <nl> + + @ Override <nl> + + public int getRecipeHeight ( ) <nl> + + { <nl> + + return this . func _ 192404 _ g ( ) ; <nl> + + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / util / ServerRecipeBookHelper . java . patch b / patches / minecraft / net / minecraft / util / ServerRecipeBookHelper . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 55545f2 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / util / ServerRecipeBookHelper . java . patch <nl> @ @ - 0 , 0 + 1 , 18 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / util / ServerRecipeBookHelper . java <nl> + + + + . . / src - work / minecraft / net / minecraft / util / ServerRecipeBookHelper . java <nl> + @ @ - 199 , 11 + 199 , 11 @ @ <nl> + int i = this . field _ 194336 _ g . func _ 174922 _ i ( ) ; <nl> + int j = this . field _ 194336 _ g . func _ 174923 _ h ( ) ; <nl> + <nl> + - if ( this . field _ 194333 _ d instanceof ShapedRecipes ) <nl> + + if ( this . field _ 194333 _ d instanceof net . minecraftforge . common . crafting . IShapedRecipe ) <nl> + { <nl> + - ShapedRecipes shapedrecipes = ( ShapedRecipes ) this . field _ 194333 _ d ; <nl> + - i = shapedrecipes . func _ 192403 _ f ( ) ; <nl> + - j = shapedrecipes . func _ 192404 _ g ( ) ; <nl> + + net . minecraftforge . common . crafting . IShapedRecipe shapedrecipes = ( net . minecraftforge . common . crafting . IShapedRecipe ) this . field _ 194333 _ d ; <nl> + + i = shapedrecipes . getRecipeWidth ( ) ; <nl> + + j = shapedrecipes . getRecipeHeight ( ) ; <nl> + } <nl> + <nl> + int j1 = 1 ; <nl> diff - - git a / src / main / java / net / minecraftforge / common / crafting / IShapedRecipe . java b / src / main / java / net / minecraftforge / common / crafting / IShapedRecipe . java <nl> new file mode 100644 <nl> index 0000000 . . 4b7ead4 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / common / crafting / IShapedRecipe . java <nl> @ @ - 0 , 0 + 1 , 32 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + package net . minecraftforge . common . crafting ; <nl> + <nl> + import net . minecraft . item . crafting . IRecipe ; <nl> + <nl> + / * * <nl> + * Used to mark a recipe that shape matters so that the recipe <nl> + * book and auto crafting picks the correct shape . <nl> + * Note : These methods can ' t be named ' getHeight ' or ' getWidth ' due to obfusication issues . <nl> + * / <nl> + public interface IShapedRecipe extends IRecipe <nl> + { <nl> + public int getRecipeWidth ( ) ; <nl> + public int getRecipeHeight ( ) ; <nl> + } <nl> diff - - git a / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java b / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java <nl> index 805fd18 . . d300098 100644 <nl> - - - a / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java <nl> + + + b / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java <nl> @ @ - 32 , 6 + 32 , 7 @ @ import net . minecraft . world . World ; <nl> import net . minecraftforge . common . ForgeHooks ; <nl> import net . minecraftforge . common . crafting . CraftingHelper ; <nl> import net . minecraftforge . common . crafting . CraftingHelper . ShapedPrimer ; <nl> + import net . minecraftforge . common . crafting . IShapedRecipe ; <nl> import net . minecraftforge . registries . IForgeRegistryEntry ; <nl> import net . minecraftforge . common . crafting . JsonContext ; <nl> <nl> @ @ - 49 , 7 + 50 , 7 @ @ import com . google . gson . JsonElement ; <nl> import com . google . gson . JsonObject ; <nl> import com . google . gson . JsonSyntaxException ; <nl> <nl> - public class ShapedOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implements IRecipe <nl> + public class ShapedOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implements IShapedRecipe <nl> { <nl> / / Added in for future ease of change , but hard coded for now . <nl> public static final int MAX _ CRAFT _ GRID _ WIDTH = 3 ; <nl> @ @ - 154 , 17 + 155 , 31 @ @ public class ShapedOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implement <nl> return this . input ; <nl> } <nl> <nl> + @ Deprecated / / Use IShapedRecipe . getRecipeWidth <nl> public int getWidth ( ) <nl> { <nl> return width ; <nl> } <nl> <nl> + @ Override <nl> + public int getRecipeWidth ( ) <nl> + { <nl> + return this . getWidth ( ) ; <nl> + } <nl> + <nl> + @ Deprecated / / Use IShapedRecipe . getRecipeHeight <nl> public int getHeight ( ) <nl> { <nl> return height ; <nl> } <nl> <nl> @ Override <nl> + public int getRecipeHeight ( ) <nl> + { <nl> + return this . getHeight ( ) ; <nl> + } <nl> + <nl> + @ Override <nl> @ Nonnull <nl> public String getGroup ( ) <nl> { <nl> diff - - git a / src / main / resources / forge . srg b / src / main / resources / forge . srg <nl> index 38de807 . . e8eb7d4 100644 <nl> - - - a / src / main / resources / forge . srg <nl> + + + b / src / main / resources / forge . srg <nl> @ @ - 1 , 2 + 1 @ @ <nl> MD : net / minecraft / server / management / ServerConfigurationManager / initializeConnectionToPlayer ( Lnet / minecraft / network / NetworkManager ; Lnet / minecraft / entity / player / EntityPlayerMP ; Lnet / minecraft / network / NetHandlerPlayServer ; ) V net / minecraft / server / management / ServerConfigurationManager / func _ 72355 _ a ( Lnet / minecraft / network / NetworkManager ; Lnet / minecraft / entity / player / EntityPlayerMP ; Lnet / minecraft / network / NetHandlerPlayServer ; ) V <nl> - MD : net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry / getKeys ( ) Ljava / util / Set ; net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry / getKeys ( ) Ljava / util / Set ; <nl> diff - - git a / src / test / resources / assets / forge / recipes / ore _ shaped . json b / src / test / resources / assets / forge / recipes / ore _ shaped . json <nl> new file mode 100644 <nl> index 0000000 . . c06ac54 <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / forge / recipes / ore _ shaped . json <nl> @ @ - 0 , 0 + 1 , 21 @ @ <nl> + { <nl> + " type " : " forge : ore _ shaped " , <nl> + " pattern " : [ <nl> + " X " , <nl> + " X " , <nl> + " # " <nl> + ] , <nl> + " key " : { <nl> + " # " : { <nl> + " type " : " forge : ore _ dict " , <nl> + " ore " : " stickWood " <nl> + } , <nl> + " X " : { <nl> + " item " : " minecraft : beetroot " <nl> + } <nl> + } , <nl> + " result " : { <nl> + " item " : " minecraft : dirt " , <nl> + " data " : 0 <nl> + } <nl> + } <nl> \ No newline at end of file
NEAREST DIFF (one line): diff - - git a / fml b / fml <nl> index a6dc03a . . 4d46abf 160000 <nl> - - - a / fml <nl> + + + b / fml <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c <nl> + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e <nl> diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> index 0ef9b48 . . 63a9622 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> @ @ - 21 , 10 + 21 , 10 @ @ <nl> this . disconnected = true ; <nl> this . mc . loadWorld ( ( WorldClient ) null ) ; <nl> <nl> - @ @ - 866 , 7 + 871 , 11 @ @ <nl> - public void handleChat ( Packet3Chat par1Packet3Chat ) <nl> - { <nl> - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; <nl> + @ @ - 870 , 7 + 875 , 11 @ @ <nl> + { <nl> + return ; <nl> + } <nl> - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; <nl> + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; <nl> + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) <nl> @ @ - 34 , 7 + 34 , 7 @ @ <nl> } <nl> <nl> public void handleAnimation ( Packet18Animation par1Packet18Animation ) <nl> - @ @ - 1354 , 6 + 1363 , 10 @ @ <nl> + @ @ - 1358 , 6 + 1367 , 10 @ @ <nl> { <nl> tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> index 6d2c8e1 . . a186e0f 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> @ @ - 13 , 11 + 13 , 16 @ @ <nl> public class EntityPlayerMP extends EntityPlayer implements ICrafting <nl> { <nl> private String translator = " en _ US " ; <nl> - @ @ - 165 , 18 + 171 , 10 @ @ <nl> + @ @ - 164 , 19 + 170 , 14 @ @ <nl> + super ( par2World , par3Str ) ; <nl> par4ItemInWorldManager . thisPlayerMP = this ; <nl> this . theItemInWorldManager = par4ItemInWorldManager ; <nl> - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; <nl> + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . <nl> + + this . renderDistance = 0 ; <nl> + + else <nl> + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; <nl> int i = chunkcoordinates . posX ; <nl> int j = chunkcoordinates . posZ ; <nl> @ @ - 33 , 7 + 38 , 7 @ @ <nl> <nl> this . mcServer = par1MinecraftServer ; <nl> this . stepHeight = 0 . 0F ; <nl> - @ @ - 240 , 11 + 238 , 6 @ @ <nl> + @ @ - 240 , 11 + 241 , 6 @ @ <nl> this . yOffset = 0 . 0F ; <nl> } <nl> <nl> @ @ - 45 , 7 + 50 , 7 @ @ <nl> / * * <nl> * Called to update the entity ' s position / logic . <nl> * / <nl> - @ @ - 254 , 7 + 247 , 7 @ @ <nl> + @ @ - 254 , 7 + 250 , 7 @ @ <nl> - - this . initialInvulnerability ; <nl> this . openContainer . detectAndSendChanges ( ) ; <nl> <nl> @ @ - 54 , 7 + 59 , 7 @ @ <nl> { <nl> this . closeScreen ( ) ; <nl> this . openContainer = this . inventoryContainer ; <nl> - @ @ - 290 , 7 + 283 , 10 @ @ <nl> + @ @ - 290 , 7 + 286 , 10 @ @ <nl> if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) <nl> { <nl> arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; <nl> @ @ - 66 , 7 + 71 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 311 , 6 + 307 , 7 @ @ <nl> + @ @ - 311 , 6 + 310 , 7 @ @ <nl> { <nl> Chunk chunk = ( Chunk ) iterator2 . next ( ) ; <nl> this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; <nl> @ @ - 74 , 7 + 79 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 383 , 11 + 380 , 25 @ @ <nl> + @ @ - 383 , 11 + 383 , 25 @ @ <nl> * / <nl> public void onDeath ( DamageSource par1DamageSource ) <nl> { <nl> @ @ - 100 , 7 + 105 , 7 @ @ <nl> } <nl> <nl> Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; <nl> - @ @ - 1054 , 4 + 1065 , 16 @ @ <nl> + @ @ - 1054 , 4 + 1068 , 16 @ @ <nl> { <nl> this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> index d28a430 . . 7e6a155 100644 <nl> - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> @ @ - 127 , 7 + 127 , 7 @ @ <nl> { <nl> this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; <nl> } <nl> - @ @ - 695 , 6 + 733 , 8 @ @ <nl> + @ @ - 698 , 6 + 736 , 8 @ @ <nl> } <nl> <nl> ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; <nl> @ @ - 136 , 7 + 136 , 7 @ @ <nl> this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; <nl> } <nl> <nl> - @ @ - 849 , 7 + 889 , 7 @ @ <nl> + @ @ - 852 , 7 + 892 , 7 @ @ <nl> return ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> index 7d63255 . . 7413a7d 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> @ @ - 1 , 11 + 1 , 15 @ @ <nl> package net . minecraftforge . common ; <nl> <nl> import cpw . mods . fml . common . FMLCommonHandler ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . entity . player . EntityPlayerMP ; <nl> import net . minecraft . item . ItemInWorldManager ; <nl> + import net . minecraft . network . packet . Packet204ClientInfo ; <nl> import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . stats . StatBase ; <nl> import net . minecraft . util . ChatMessageComponent ; <nl> import net . minecraft . util . ChunkCoordinates ; <nl> + import net . minecraft . util . DamageSource ; <nl> import net . minecraft . world . World ; <nl> <nl> / / Preliminary , simple Fake Player class <nl> @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP <nl> <nl> @ Override <nl> public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } <nl> + @ Override <nl> + public void addStat ( StatBase par1StatBase , int par2 ) { } <nl> + @ Override <nl> + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } <nl> + @ Override <nl> + public boolean isEntityInvulnerable ( ) { return true ; } <nl> + @ Override <nl> + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } <nl> + @ Override <nl> + public void onDeath ( DamageSource source ) { return ; } <nl> + @ Override <nl> + public void onUpdate ( ) { return ; } <nl> + @ Override <nl> + public void travelToDimension ( int dim ) { return ; } <nl> + @ Override <nl> + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 43dbe83 . . 8d98241 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; <nl> import net . minecraft . item . ItemStack ; <nl> import net . minecraft . item . ItemSword ; <nl> import net . minecraft . network . NetServerHandler ; <nl> + import net . minecraft . network . packet . Packet ; <nl> import net . minecraft . network . packet . Packet53BlockChange ; <nl> import net . minecraft . tileentity . TileEntity ; <nl> import net . minecraft . util . AxisAlignedBB ; <nl> @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks <nl> TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; <nl> if ( tileentity ! = null ) <nl> { <nl> - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; <nl> + Packet pkt = tileentity . getDescriptionPacket ( ) ; <nl> + if ( pkt ! = null ) <nl> + { <nl> + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; <nl> + } <nl> } <nl> } <nl> return event ; <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> index 5031fa6 . . 16d011f 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; <nl> import java . util . Map ; <nl> <nl> import net . minecraft . block . Block ; <nl> + import net . minecraft . util . StatCollector ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . event . Event ; <nl> <nl> @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry <nl> static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; <nl> static BiMap < Block , Fluid > fluidBlocks ; <nl> <nl> - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> + public static final Fluid WATER = new Fluid ( " water " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . water . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> + <nl> + public static final Fluid LAVA = new Fluid ( " lava " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . lava . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> <nl> public static int renderIdFluid = - 1 ; <nl>

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeBook . java . patch b / patches / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeBook . java . patch 
 new file mode 100644 
 index 0000000 . . b7c6c0e 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeBook . java . patch 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeBook . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeBook . java 
 + @ @ - 485 , 7 + 485 , 7 @ @ 
 + this . field _ 191915 _ z . func _ 194187 _ a ( Ingredient . func _ 193369 _ a ( itemstack ) , ( p _ 193951 _ 2 _ . get ( 0 ) ) . field _ 75223 _ e , ( p _ 193951 _ 2 _ . get ( 0 ) ) . field _ 75221 _ f ) ; 
 + int i = this . field _ 193961 _ o . func _ 174922 _ i ( ) ; 
 + int j = this . field _ 193961 _ o . func _ 174923 _ h ( ) ; 
 + - int k = p _ 193951 _ 1 _ instanceof ShapedRecipes ? ( ( ShapedRecipes ) p _ 193951 _ 1 _ ) . func _ 192403 _ f ( ) : i ; 
 + + int k = p _ 193951 _ 1 _ instanceof net . minecraftforge . common . crafting . IShapedRecipe ? ( ( net . minecraftforge . common . crafting . IShapedRecipe ) p _ 193951 _ 1 _ ) . getRecipeWidth ( ) : i ; 
 + int l = 1 ; 
 + Iterator < Ingredient > iterator = p _ 193951 _ 1 _ . func _ 192400 _ c ( ) . iterator ( ) ; 
 + 
 diff - - git a / patches / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeOverlay . java . patch b / patches / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeOverlay . java . patch 
 new file mode 100644 
 index 0000000 . . c95bd2b 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeOverlay . java . patch 
 @ @ - 0 , 0 + 1 , 18 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeOverlay . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / gui / recipebook / GuiRecipeOverlay . java 
 + @ @ - 230 , 11 + 230 , 11 @ @ 
 + int k = 3 ; 
 + int l = 3 ; 
 + 
 + - if ( this . field _ 193924 _ p instanceof ShapedRecipes ) 
 + + if ( this . field _ 193924 _ p instanceof net . minecraftforge . common . crafting . IShapedRecipe ) 
 + { 
 + - ShapedRecipes shapedrecipes = ( ShapedRecipes ) this . field _ 193924 _ p ; 
 + - k = shapedrecipes . func _ 192403 _ f ( ) ; 
 + - l = shapedrecipes . func _ 192404 _ g ( ) ; 
 + + net . minecraftforge . common . crafting . IShapedRecipe shapedrecipes = ( net . minecraftforge . common . crafting . IShapedRecipe ) this . field _ 193924 _ p ; 
 + + k = shapedrecipes . getRecipeWidth ( ) ; 
 + + l = shapedrecipes . getRecipeHeight ( ) ; 
 + } 
 + 
 + Iterator < Ingredient > iterator = this . field _ 193924 _ p . func _ 192400 _ c ( ) . iterator ( ) ; 
 diff - - git a / patches / minecraft / net / minecraft / item / crafting / ShapedRecipes . java . patch b / patches / minecraft / net / minecraft / item / crafting / ShapedRecipes . java . patch 
 index d0891d5 . . 7bc05b4 100644 
 - - - a / patches / minecraft / net / minecraft / item / crafting / ShapedRecipes . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / crafting / ShapedRecipes . java . patch 
 @ @ - 8 , 7 + 8 , 7 @ @ 
 - import net . minecraftforge . fml . relauncher . SideOnly ; 
 
 - public class ShapedRecipes implements IRecipe 
 - + public class ShapedRecipes extends net . minecraftforge . registries . IForgeRegistryEntry . Impl < IRecipe > implements IRecipe 
 + + public class ShapedRecipes extends net . minecraftforge . registries . IForgeRegistryEntry . Impl < IRecipe > implements net . minecraftforge . common . crafting . IShapedRecipe 
 { 
 public final int field _ 77576 _ b ; 
 public final int field _ 77577 _ c ; 
 @ @ - 40 , 3 + 40 , 20 @ @ 
 public boolean func _ 194133 _ a ( int p _ 194133 _ 1 _ , int p _ 194133 _ 2 _ ) 
 { 
 return p _ 194133 _ 1 _ > = this . field _ 77576 _ b & & p _ 194133 _ 2 _ > = this . field _ 77577 _ c ; 
 + @ @ - 379 , 4 + 372 , 16 @ @ 
 + return new ItemStack ( item , j , i ) ; 
 + } 
 + } 
 + + 
 + + / / = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
 + + @ Override 
 + + public int getRecipeWidth ( ) 
 + + { 
 + + return this . func _ 192403 _ f ( ) ; 
 + + } 
 + + @ Override 
 + + public int getRecipeHeight ( ) 
 + + { 
 + + return this . func _ 192404 _ g ( ) ; 
 + + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / util / ServerRecipeBookHelper . java . patch b / patches / minecraft / net / minecraft / util / ServerRecipeBookHelper . java . patch 
 new file mode 100644 
 index 0000000 . . 55545f2 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / util / ServerRecipeBookHelper . java . patch 
 @ @ - 0 , 0 + 1 , 18 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / util / ServerRecipeBookHelper . java 
 + + + + . . / src - work / minecraft / net / minecraft / util / ServerRecipeBookHelper . java 
 + @ @ - 199 , 11 + 199 , 11 @ @ 
 + int i = this . field _ 194336 _ g . func _ 174922 _ i ( ) ; 
 + int j = this . field _ 194336 _ g . func _ 174923 _ h ( ) ; 
 + 
 + - if ( this . field _ 194333 _ d instanceof ShapedRecipes ) 
 + + if ( this . field _ 194333 _ d instanceof net . minecraftforge . common . crafting . IShapedRecipe ) 
 + { 
 + - ShapedRecipes shapedrecipes = ( ShapedRecipes ) this . field _ 194333 _ d ; 
 + - i = shapedrecipes . func _ 192403 _ f ( ) ; 
 + - j = shapedrecipes . func _ 192404 _ g ( ) ; 
 + + net . minecraftforge . common . crafting . IShapedRecipe shapedrecipes = ( net . minecraftforge . common . crafting . IShapedRecipe ) this . field _ 194333 _ d ; 
 + + i = shapedrecipes . getRecipeWidth ( ) ; 
 + + j = shapedrecipes . getRecipeHeight ( ) ; 
 + } 
 + 
 + int j1 = 1 ; 
 diff - - git a / src / main / java / net / minecraftforge / common / crafting / IShapedRecipe . java b / src / main / java / net / minecraftforge / common / crafting / IShapedRecipe . java 
 new file mode 100644 
 index 0000000 . . 4b7ead4 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / common / crafting / IShapedRecipe . java 
 @ @ - 0 , 0 + 1 , 32 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + package net . minecraftforge . common . crafting ; 
 + 
 + import net . minecraft . item . crafting . IRecipe ; 
 + 
 + / * * 
 + * Used to mark a recipe that shape matters so that the recipe 
 + * book and auto crafting picks the correct shape . 
 + * Note : These methods can ' t be named ' getHeight ' or ' getWidth ' due to obfusication issues . 
 + * / 
 + public interface IShapedRecipe extends IRecipe 
 + { 
 + public int getRecipeWidth ( ) ; 
 + public int getRecipeHeight ( ) ; 
 + } 
 diff - - git a / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java b / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java 
 index 805fd18 . . d300098 100644 
 - - - a / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java 
 + + + b / src / main / java / net / minecraftforge / oredict / ShapedOreRecipe . java 
 @ @ - 32 , 6 + 32 , 7 @ @ import net . minecraft . world . World ; 
 import net . minecraftforge . common . ForgeHooks ; 
 import net . minecraftforge . common . crafting . CraftingHelper ; 
 import net . minecraftforge . common . crafting . CraftingHelper . ShapedPrimer ; 
 + import net . minecraftforge . common . crafting . IShapedRecipe ; 
 import net . minecraftforge . registries . IForgeRegistryEntry ; 
 import net . minecraftforge . common . crafting . JsonContext ; 
 
 @ @ - 49 , 7 + 50 , 7 @ @ import com . google . gson . JsonElement ; 
 import com . google . gson . JsonObject ; 
 import com . google . gson . JsonSyntaxException ; 
 
 - public class ShapedOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implements IRecipe 
 + public class ShapedOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implements IShapedRecipe 
 { 
 / / Added in for future ease of change , but hard coded for now . 
 public static final int MAX _ CRAFT _ GRID _ WIDTH = 3 ; 
 @ @ - 154 , 17 + 155 , 31 @ @ public class ShapedOreRecipe extends IForgeRegistryEntry . Impl < IRecipe > implement 
 return this . input ; 
 } 
 
 + @ Deprecated / / Use IShapedRecipe . getRecipeWidth 
 public int getWidth ( ) 
 { 
 return width ; 
 } 
 
 + @ Override 
 + public int getRecipeWidth ( ) 
 + { 
 + return this . getWidth ( ) ; 
 + } 
 + 
 + @ Deprecated / / Use IShapedRecipe . getRecipeHeight 
 public int getHeight ( ) 
 { 
 return height ; 
 } 
 
 @ Override 
 + public int getRecipeHeight ( ) 
 + { 
 + return this . getHeight ( ) ; 
 + } 
 + 
 + @ Override 
 @ Nonnull 
 public String getGroup ( ) 
 { 
 diff - - git a / src / main / resources / forge . srg b / src / main / resources / forge . srg 
 index 38de807 . . e8eb7d4 100644 
 - - - a / src / main / resources / forge . srg 
 + + + b / src / main / resources / forge . srg 
 @ @ - 1 , 2 + 1 @ @ 
 MD : net / minecraft / server / management / ServerConfigurationManager / initializeConnectionToPlayer ( Lnet / minecraft / network / NetworkManager ; Lnet / minecraft / entity / player / EntityPlayerMP ; Lnet / minecraft / network / NetHandlerPlayServer ; ) V net / minecraft / server / management / ServerConfigurationManager / func _ 72355 _ a ( Lnet / minecraft / network / NetworkManager ; Lnet / minecraft / entity / player / EntityPlayerMP ; Lnet / minecraft / network / NetHandlerPlayServer ; ) V 
 - MD : net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry / getKeys ( ) Ljava / util / Set ; net / minecraftforge / fml / common / registry / FMLControlledNamespacedRegistry / getKeys ( ) Ljava / util / Set ; 
 diff - - git a / src / test / resources / assets / forge / recipes / ore _ shaped . json b / src / test / resources / assets / forge / recipes / ore _ shaped . json 
 new file mode 100644 
 index 0000000 . . c06ac54 
 - - - / dev / null 
 + + + b / src / test / resources / assets / forge / recipes / ore _ shaped . json 
 @ @ - 0 , 0 + 1 , 21 @ @ 
 + { 
 + " type " : " forge : ore _ shaped " , 
 + " pattern " : [ 
 + " X " , 
 + " X " , 
 + " # " 
 + ] , 
 + " key " : { 
 + " # " : { 
 + " type " : " forge : ore _ dict " , 
 + " ore " : " stickWood " 
 + } , 
 + " X " : { 
 + " item " : " minecraft : beetroot " 
 + } 
 + } , 
 + " result " : { 
 + " item " : " minecraft : dirt " , 
 + " data " : 0 
 + } 
 + } 
 \ No newline at end of file

NEAREST DIFF:
diff - - git a / fml b / fml 
 index a6dc03a . . 4d46abf 160000 
 - - - a / fml 
 + + + b / fml 
 @ @ - 1 + 1 @ @ 
 - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c 
 + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e 
 diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 index 0ef9b48 . . 63a9622 100644 
 - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 @ @ - 21 , 10 + 21 , 10 @ @ 
 this . disconnected = true ; 
 this . mc . loadWorld ( ( WorldClient ) null ) ; 
 
 - @ @ - 866 , 7 + 871 , 11 @ @ 
 - public void handleChat ( Packet3Chat par1Packet3Chat ) 
 - { 
 - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; 
 + @ @ - 870 , 7 + 875 , 11 @ @ 
 + { 
 + return ; 
 + } 
 - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; 
 + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; 
 + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) 
 @ @ - 34 , 7 + 34 , 7 @ @ 
 } 
 
 public void handleAnimation ( Packet18Animation par1Packet18Animation ) 
 - @ @ - 1354 , 6 + 1363 , 10 @ @ 
 + @ @ - 1358 , 6 + 1367 , 10 @ @ 
 { 
 tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 index 6d2c8e1 . . a186e0f 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 @ @ - 13 , 11 + 13 , 16 @ @ 
 public class EntityPlayerMP extends EntityPlayer implements ICrafting 
 { 
 private String translator = " en _ US " ; 
 - @ @ - 165 , 18 + 171 , 10 @ @ 
 + @ @ - 164 , 19 + 170 , 14 @ @ 
 + super ( par2World , par3Str ) ; 
 par4ItemInWorldManager . thisPlayerMP = this ; 
 this . theItemInWorldManager = par4ItemInWorldManager ; 
 - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; 
 + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . 
 + + this . renderDistance = 0 ; 
 + + else 
 + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; 
 int i = chunkcoordinates . posX ; 
 int j = chunkcoordinates . posZ ; 
 @ @ - 33 , 7 + 38 , 7 @ @ 
 
 this . mcServer = par1MinecraftServer ; 
 this . stepHeight = 0 . 0F ; 
 - @ @ - 240 , 11 + 238 , 6 @ @ 
 + @ @ - 240 , 11 + 241 , 6 @ @ 
 this . yOffset = 0 . 0F ; 
 } 
 
 @ @ - 45 , 7 + 50 , 7 @ @ 
 / * * 
 * Called to update the entity ' s position / logic . 
 * / 
 - @ @ - 254 , 7 + 247 , 7 @ @ 
 + @ @ - 254 , 7 + 250 , 7 @ @ 
 - - this . initialInvulnerability ; 
 this . openContainer . detectAndSendChanges ( ) ; 
 
 @ @ - 54 , 7 + 59 , 7 @ @ 
 { 
 this . closeScreen ( ) ; 
 this . openContainer = this . inventoryContainer ; 
 - @ @ - 290 , 7 + 283 , 10 @ @ 
 + @ @ - 290 , 7 + 286 , 10 @ @ 
 if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) 
 { 
 arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; 
 @ @ - 66 , 7 + 71 , 7 @ @ 
 } 
 } 
 
 - @ @ - 311 , 6 + 307 , 7 @ @ 
 + @ @ - 311 , 6 + 310 , 7 @ @ 
 { 
 Chunk chunk = ( Chunk ) iterator2 . next ( ) ; 
 this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; 
 @ @ - 74 , 7 + 79 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 383 , 11 + 380 , 25 @ @ 
 + @ @ - 383 , 11 + 383 , 25 @ @ 
 * / 
 public void onDeath ( DamageSource par1DamageSource ) 
 { 
 @ @ - 100 , 7 + 105 , 7 @ @ 
 } 
 
 Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; 
 - @ @ - 1054 , 4 + 1065 , 16 @ @ 
 + @ @ - 1054 , 4 + 1068 , 16 @ @ 
 { 
 this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 index d28a430 . . 7e6a155 100644 
 - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 @ @ - 127 , 7 + 127 , 7 @ @ 
 { 
 this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; 
 } 
 - @ @ - 695 , 6 + 733 , 8 @ @ 
 + @ @ - 698 , 6 + 736 , 8 @ @ 
 } 
 
 ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; 
 @ @ - 136 , 7 + 136 , 7 @ @ 
 this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; 
 } 
 
 - @ @ - 849 , 7 + 889 , 7 @ @ 
 + @ @ - 852 , 7 + 892 , 7 @ @ 
 return ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 index 7d63255 . . 7413a7d 100644 
 - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java 
 + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 @ @ - 1 , 11 + 1 , 15 @ @ 
 package net . minecraftforge . common ; 
 
 import cpw . mods . fml . common . FMLCommonHandler ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . entity . player . EntityPlayerMP ; 
 import net . minecraft . item . ItemInWorldManager ; 
 + import net . minecraft . network . packet . Packet204ClientInfo ; 
 import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . stats . StatBase ; 
 import net . minecraft . util . ChatMessageComponent ; 
 import net . minecraft . util . ChunkCoordinates ; 
 + import net . minecraft . util . DamageSource ; 
 import net . minecraft . world . World ; 
 
 / / Preliminary , simple Fake Player class 
 @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP 
 
 @ Override 
 public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } 
 + @ Override 
 + public void addStat ( StatBase par1StatBase , int par2 ) { } 
 + @ Override 
 + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } 
 + @ Override 
 + public boolean isEntityInvulnerable ( ) { return true ; } 
 + @ Override 
 + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } 
 + @ Override 
 + public void onDeath ( DamageSource source ) { return ; } 
 + @ Override 
 + public void onUpdate ( ) { return ; } 
 + @ Override 
 + public void travelToDimension ( int dim ) { return ; } 
 + @ Override 
 + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 43dbe83 . . 8d98241 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; 
 import net . minecraft . item . ItemStack ; 
 import net . minecraft . item . ItemSword ; 
 import net . minecraft . network . NetServerHandler ; 
 + import net . minecraft . network . packet . Packet ; 
 import net . minecraft . network . packet . Packet53BlockChange ; 
 import net . minecraft . tileentity . TileEntity ; 
 import net . minecraft . util . AxisAlignedBB ; 
 @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks 
 TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; 
 if ( tileentity ! = null ) 
 { 
 - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; 
 + Packet pkt = tileentity . getDescriptionPacket ( ) ; 
 + if ( pkt ! = null ) 
 + { 
 + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; 
 + } 
 } 
 } 
 return event ; 
 diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 index 5031fa6 . . 16d011f 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; 
 import java . util . Map ; 
 
 import net . minecraft . block . Block ; 
 + import net . minecraft . util . StatCollector ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . event . Event ; 
 
 @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry 
 static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; 
 static BiMap < Block , Fluid > fluidBlocks ; 
 
 - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 + public static final Fluid WATER = new Fluid ( " water " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . water . name " ) ; 
 + } 
 + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 + 
 + public static final Fluid LAVA = new Fluid ( " lava " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . lava . name " ) ; 
 + } 
 + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 
 public static int renderIdFluid = - 1 ; 

