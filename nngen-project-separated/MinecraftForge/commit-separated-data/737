BLEU SCORE: 0.041961149062965476

TEST MSG: Fixed mod languages not being loaded on the server .
GENERATED MSG: Allow server side lang file injection , hopefully

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> index b80bf1e . . 0a798eb 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java <nl> @ @ - 12 , 18 + 12 , 21 @ @ <nl> * / <nl> package net . minecraftforge . fml . server ; <nl> <nl> - import java . io . File ; <nl> + import java . io . * ; <nl> import java . util . Iterator ; <nl> import java . util . List ; <nl> import java . util . Set ; <nl> + import java . util . zip . ZipFile ; <nl> <nl> import net . minecraft . command . ServerCommand ; <nl> + import net . minecraft . launchwrapper . Launch ; <nl> import net . minecraft . network . INetHandler ; <nl> import net . minecraft . network . NetHandlerPlayServer ; <nl> import net . minecraft . network . NetworkManager ; <nl> import net . minecraft . server . MinecraftServer ; <nl> import net . minecraft . server . dedicated . DedicatedServer ; <nl> import net . minecraft . util . IThreadListener ; <nl> + import net . minecraft . util . text . translation . LanguageMap ; <nl> import net . minecraft . world . storage . SaveFormatOld ; <nl> import net . minecraftforge . fml . common . FMLCommonHandler ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> @ @ - 37 , 6 + 40 , 7 @ @ import net . minecraftforge . fml . common . network . FMLNetworkEvent ; <nl> import net . minecraftforge . fml . relauncher . Side ; <nl> <nl> import com . google . common . collect . ImmutableList ; <nl> + import org . apache . commons . io . IOUtils ; <nl> <nl> / * * <nl> * Handles primary communication from hooked code into the system <nl> @ @ - 218 , 7 + 222 , 42 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> @ Override <nl> public void addModAsResource ( ModContainer container ) <nl> { <nl> - / / NOOP <nl> + String langFile = " assets / " + container . getModId ( ) . toLowerCase ( ) + " / lang / en _ US . lang " ; <nl> + File source = container . getSource ( ) ; <nl> + InputStream stream = null ; <nl> + ZipFile zip = null ; <nl> + try <nl> + { <nl> + if ( source . isDirectory ( ) & & ( Boolean ) Launch . blackboard . get ( " fml . deobfuscatedEnvironment " ) ) <nl> + { <nl> + stream = new FileInputStream ( new File ( source . toURI ( ) . resolve ( langFile ) . getPath ( ) ) ) ; <nl> + } <nl> + else <nl> + { <nl> + try <nl> + { <nl> + zip = new ZipFile ( source ) ; <nl> + stream = zip . getInputStream ( zip . getEntry ( langFile ) ) ; <nl> + } <nl> + finally <nl> + { <nl> + if ( zip ! = null ) zip . close ( ) ; <nl> + } <nl> + } <nl> + LanguageMap . inject ( stream ) ; <nl> + } <nl> + catch ( IOException e ) <nl> + { <nl> + / / hush <nl> + } <nl> + catch ( Exception e ) <nl> + { <nl> + FMLLog . getLogger ( ) . error ( e ) ; <nl> + } <nl> + finally <nl> + { <nl> + IOUtils . closeQuietly ( stream ) ; <nl> + } <nl> } <nl> <nl> @ Override
NEAREST DIFF (one line): diff - - git a / fml / common / cpw / mods / fml / server / FMLServerHandler . java b / fml / common / cpw / mods / fml / server / FMLServerHandler . java <nl> index ae40c70 . . c94ab2d 100644 <nl> - - - a / fml / common / cpw / mods / fml / server / FMLServerHandler . java <nl> + + + b / fml / common / cpw / mods / fml / server / FMLServerHandler . java <nl> @ @ - 12 , 7 + 12 , 18 @ @ <nl> * / <nl> package cpw . mods . fml . server ; <nl> <nl> + import java . io . File ; <nl> + import java . io . FileInputStream ; <nl> + import java . io . FileNotFoundException ; <nl> + import java . io . IOException ; <nl> + import java . util . Collections ; <nl> import java . util . List ; <nl> + import java . util . regex . Matcher ; <nl> + import java . util . regex . Pattern ; <nl> + import java . util . zip . ZipEntry ; <nl> + import java . util . zip . ZipFile ; <nl> + <nl> + import org . apache . commons . io . IOUtils ; <nl> <nl> import com . google . common . collect . ImmutableList ; <nl> import com . google . common . collect . MapDifference ; <nl> @ @ - 23 , 8 + 34 , 10 @ @ import net . minecraft . network . packet . NetHandler ; <nl> import net . minecraft . network . packet . Packet ; <nl> import net . minecraft . network . packet . Packet131MapData ; <nl> import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . util . StringTranslate ; <nl> import net . minecraft . world . World ; <nl> import cpw . mods . fml . common . FMLCommonHandler ; <nl> + import cpw . mods . fml . common . FMLLog ; <nl> import cpw . mods . fml . common . IFMLSidedHandler ; <nl> import cpw . mods . fml . common . Loader ; <nl> import cpw . mods . fml . common . ModContainer ; <nl> @ @ - 193 , 11 + 206 , 58 @ @ public class FMLServerHandler implements IFMLSidedHandler <nl> @ Override <nl> public void addModAsResource ( ModContainer container ) <nl> { <nl> - / / NOOP on server <nl> + File source = container . getSource ( ) ; <nl> + try <nl> + { <nl> + if ( source . isDirectory ( ) ) <nl> + { <nl> + searchDirForENUSLanguage ( source , " " ) ; <nl> + } <nl> + else <nl> + { <nl> + searchZipForENUSLanguage ( source ) ; <nl> + } <nl> + } <nl> + catch ( IOException ioe ) <nl> + { <nl> + <nl> + } <nl> + } <nl> + private static final Pattern assetENUSLang = Pattern . compile ( " assets / ( . * ) / lang / en _ US . lang " ) ; <nl> + private void searchZipForENUSLanguage ( File source ) throws IOException <nl> + { <nl> + ZipFile zf = new ZipFile ( source ) ; <nl> + for ( ZipEntry ze : Collections . list ( zf . entries ( ) ) ) <nl> + { <nl> + Matcher matcher = assetENUSLang . matcher ( ze . getName ( ) ) ; <nl> + if ( matcher . matches ( ) ) <nl> + { <nl> + FMLLog . fine ( " Injecting found translation data in zip file % s at % s into language system " , source . getName ( ) , ze . getName ( ) ) ; <nl> + StringTranslate . inject ( zf . getInputStream ( ze ) ) ; <nl> + } <nl> + } <nl> + IOUtils . closeQuietly ( zf ) ; <nl> + } <nl> + private void searchDirForENUSLanguage ( File source , String path ) throws IOException <nl> + { <nl> + for ( File file : source . listFiles ( ) ) <nl> + { <nl> + String currPath = path + file . getName ( ) ; <nl> + if ( file . isDirectory ( ) ) <nl> + { <nl> + searchDirForENUSLanguage ( file , currPath + ' / ' ) ; <nl> + } <nl> + Matcher matcher = assetENUSLang . matcher ( currPath ) ; <nl> + if ( matcher . matches ( ) ) <nl> + { <nl> + FMLLog . fine ( " Injecting found translation data at % s into language system " , currPath ) ; <nl> + StringTranslate . inject ( new FileInputStream ( file ) ) ; <nl> + } <nl> + } <nl> } <nl> @ Override <nl> public void updateResourcePackList ( ) <nl> { <nl> - / / NOOP on server <nl> + <nl> } <nl> } <nl> diff - - git a / fml / patches / minecraft / net / minecraft / util / StringTranslate . java . patch b / fml / patches / minecraft / net / minecraft / util / StringTranslate . java . patch <nl> index d7c87e5 . . 0a593e6 100644 <nl> - - - a / fml / patches / minecraft / net / minecraft / util / StringTranslate . java . patch <nl> + + + b / fml / patches / minecraft / net / minecraft / util / StringTranslate . java . patch <nl> @ @ - 9 , 7 + 9 , 28 @ @ <nl> import cpw . mods . fml . relauncher . Side ; <nl> import cpw . mods . fml . relauncher . SideOnly ; <nl> import java . io . IOException ; <nl> - @ @ - 45 , 7 + 47 , 7 @ @ <nl> + @ @ - 23 , 9 + 25 , 19 @ @ <nl> + <nl> + public StringTranslate ( ) <nl> + { <nl> + + InputStream inputstream = StringTranslate . class . getResourceAsStream ( " / assets / minecraft / lang / en _ US . lang " ) ; <nl> + + localInject ( inputstream ) ; <nl> + + } <nl> + + <nl> + + public static void inject ( InputStream inputstream ) <nl> + + { <nl> + + field _ 74817 _ a . localInject ( inputstream ) ; <nl> + + } <nl> + + <nl> + + private void localInject ( InputStream inputstream ) <nl> + + { <nl> + try <nl> + { <nl> + - InputStream inputstream = StringTranslate . class . getResourceAsStream ( " / assets / minecraft / lang / en _ US . lang " ) ; <nl> + Iterator iterator = IOUtils . readLines ( inputstream , Charsets . UTF _ 8 ) . iterator ( ) ; <nl> + <nl> + while ( iterator . hasNext ( ) ) <nl> + @ @ - 45 , 7 + 57 , 7 @ @ <nl> } <nl> } <nl> }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 index b80bf1e . . 0a798eb 100644 
 - - - a / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 + + + b / src / main / java / net / minecraftforge / fml / server / FMLServerHandler . java 
 @ @ - 12 , 18 + 12 , 21 @ @ 
 * / 
 package net . minecraftforge . fml . server ; 
 
 - import java . io . File ; 
 + import java . io . * ; 
 import java . util . Iterator ; 
 import java . util . List ; 
 import java . util . Set ; 
 + import java . util . zip . ZipFile ; 
 
 import net . minecraft . command . ServerCommand ; 
 + import net . minecraft . launchwrapper . Launch ; 
 import net . minecraft . network . INetHandler ; 
 import net . minecraft . network . NetHandlerPlayServer ; 
 import net . minecraft . network . NetworkManager ; 
 import net . minecraft . server . MinecraftServer ; 
 import net . minecraft . server . dedicated . DedicatedServer ; 
 import net . minecraft . util . IThreadListener ; 
 + import net . minecraft . util . text . translation . LanguageMap ; 
 import net . minecraft . world . storage . SaveFormatOld ; 
 import net . minecraftforge . fml . common . FMLCommonHandler ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 @ @ - 37 , 6 + 40 , 7 @ @ import net . minecraftforge . fml . common . network . FMLNetworkEvent ; 
 import net . minecraftforge . fml . relauncher . Side ; 
 
 import com . google . common . collect . ImmutableList ; 
 + import org . apache . commons . io . IOUtils ; 
 
 / * * 
 * Handles primary communication from hooked code into the system 
 @ @ - 218 , 7 + 222 , 42 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 @ Override 
 public void addModAsResource ( ModContainer container ) 
 { 
 - / / NOOP 
 + String langFile = " assets / " + container . getModId ( ) . toLowerCase ( ) + " / lang / en _ US . lang " ; 
 + File source = container . getSource ( ) ; 
 + InputStream stream = null ; 
 + ZipFile zip = null ; 
 + try 
 + { 
 + if ( source . isDirectory ( ) & & ( Boolean ) Launch . blackboard . get ( " fml . deobfuscatedEnvironment " ) ) 
 + { 
 + stream = new FileInputStream ( new File ( source . toURI ( ) . resolve ( langFile ) . getPath ( ) ) ) ; 
 + } 
 + else 
 + { 
 + try 
 + { 
 + zip = new ZipFile ( source ) ; 
 + stream = zip . getInputStream ( zip . getEntry ( langFile ) ) ; 
 + } 
 + finally 
 + { 
 + if ( zip ! = null ) zip . close ( ) ; 
 + } 
 + } 
 + LanguageMap . inject ( stream ) ; 
 + } 
 + catch ( IOException e ) 
 + { 
 + / / hush 
 + } 
 + catch ( Exception e ) 
 + { 
 + FMLLog . getLogger ( ) . error ( e ) ; 
 + } 
 + finally 
 + { 
 + IOUtils . closeQuietly ( stream ) ; 
 + } 
 } 
 
 @ Override

NEAREST DIFF:
diff - - git a / fml / common / cpw / mods / fml / server / FMLServerHandler . java b / fml / common / cpw / mods / fml / server / FMLServerHandler . java 
 index ae40c70 . . c94ab2d 100644 
 - - - a / fml / common / cpw / mods / fml / server / FMLServerHandler . java 
 + + + b / fml / common / cpw / mods / fml / server / FMLServerHandler . java 
 @ @ - 12 , 7 + 12 , 18 @ @ 
 * / 
 package cpw . mods . fml . server ; 
 
 + import java . io . File ; 
 + import java . io . FileInputStream ; 
 + import java . io . FileNotFoundException ; 
 + import java . io . IOException ; 
 + import java . util . Collections ; 
 import java . util . List ; 
 + import java . util . regex . Matcher ; 
 + import java . util . regex . Pattern ; 
 + import java . util . zip . ZipEntry ; 
 + import java . util . zip . ZipFile ; 
 + 
 + import org . apache . commons . io . IOUtils ; 
 
 import com . google . common . collect . ImmutableList ; 
 import com . google . common . collect . MapDifference ; 
 @ @ - 23 , 8 + 34 , 10 @ @ import net . minecraft . network . packet . NetHandler ; 
 import net . minecraft . network . packet . Packet ; 
 import net . minecraft . network . packet . Packet131MapData ; 
 import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . util . StringTranslate ; 
 import net . minecraft . world . World ; 
 import cpw . mods . fml . common . FMLCommonHandler ; 
 + import cpw . mods . fml . common . FMLLog ; 
 import cpw . mods . fml . common . IFMLSidedHandler ; 
 import cpw . mods . fml . common . Loader ; 
 import cpw . mods . fml . common . ModContainer ; 
 @ @ - 193 , 11 + 206 , 58 @ @ public class FMLServerHandler implements IFMLSidedHandler 
 @ Override 
 public void addModAsResource ( ModContainer container ) 
 { 
 - / / NOOP on server 
 + File source = container . getSource ( ) ; 
 + try 
 + { 
 + if ( source . isDirectory ( ) ) 
 + { 
 + searchDirForENUSLanguage ( source , " " ) ; 
 + } 
 + else 
 + { 
 + searchZipForENUSLanguage ( source ) ; 
 + } 
 + } 
 + catch ( IOException ioe ) 
 + { 
 + 
 + } 
 + } 
 + private static final Pattern assetENUSLang = Pattern . compile ( " assets / ( . * ) / lang / en _ US . lang " ) ; 
 + private void searchZipForENUSLanguage ( File source ) throws IOException 
 + { 
 + ZipFile zf = new ZipFile ( source ) ; 
 + for ( ZipEntry ze : Collections . list ( zf . entries ( ) ) ) 
 + { 
 + Matcher matcher = assetENUSLang . matcher ( ze . getName ( ) ) ; 
 + if ( matcher . matches ( ) ) 
 + { 
 + FMLLog . fine ( " Injecting found translation data in zip file % s at % s into language system " , source . getName ( ) , ze . getName ( ) ) ; 
 + StringTranslate . inject ( zf . getInputStream ( ze ) ) ; 
 + } 
 + } 
 + IOUtils . closeQuietly ( zf ) ; 
 + } 
 + private void searchDirForENUSLanguage ( File source , String path ) throws IOException 
 + { 
 + for ( File file : source . listFiles ( ) ) 
 + { 
 + String currPath = path + file . getName ( ) ; 
 + if ( file . isDirectory ( ) ) 
 + { 
 + searchDirForENUSLanguage ( file , currPath + ' / ' ) ; 
 + } 
 + Matcher matcher = assetENUSLang . matcher ( currPath ) ; 
 + if ( matcher . matches ( ) ) 
 + { 
 + FMLLog . fine ( " Injecting found translation data at % s into language system " , currPath ) ; 
 + StringTranslate . inject ( new FileInputStream ( file ) ) ; 
 + } 
 + } 
 } 
 @ Override 
 public void updateResourcePackList ( ) 
 { 
 - / / NOOP on server 
 + 
 } 
 } 
 diff - - git a / fml / patches / minecraft / net / minecraft / util / StringTranslate . java . patch b / fml / patches / minecraft / net / minecraft / util / StringTranslate . java . patch 
 index d7c87e5 . . 0a593e6 100644 
 - - - a / fml / patches / minecraft / net / minecraft / util / StringTranslate . java . patch 
 + + + b / fml / patches / minecraft / net / minecraft / util / StringTranslate . java . patch 
 @ @ - 9 , 7 + 9 , 28 @ @ 
 import cpw . mods . fml . relauncher . Side ; 
 import cpw . mods . fml . relauncher . SideOnly ; 
 import java . io . IOException ; 
 - @ @ - 45 , 7 + 47 , 7 @ @ 
 + @ @ - 23 , 9 + 25 , 19 @ @ 
 + 
 + public StringTranslate ( ) 
 + { 
 + + InputStream inputstream = StringTranslate . class . getResourceAsStream ( " / assets / minecraft / lang / en _ US . lang " ) ; 
 + + localInject ( inputstream ) ; 
 + + } 
 + + 
 + + public static void inject ( InputStream inputstream ) 
 + + { 
 + + field _ 74817 _ a . localInject ( inputstream ) ; 
 + + } 
 + + 
 + + private void localInject ( InputStream inputstream ) 
 + + { 
 + try 
 + { 
 + - InputStream inputstream = StringTranslate . class . getResourceAsStream ( " / assets / minecraft / lang / en _ US . lang " ) ; 
 + Iterator iterator = IOUtils . readLines ( inputstream , Charsets . UTF _ 8 ) . iterator ( ) ; 
 + 
 + while ( iterator . hasNext ( ) ) 
 + @ @ - 45 , 7 + 57 , 7 @ @ 
 } 
 } 
 }
