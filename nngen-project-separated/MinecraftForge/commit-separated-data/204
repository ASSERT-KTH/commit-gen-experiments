BLEU SCORE: 0.07986788803078405

TEST MSG: Allow custom SpawnPlacementType registration
GENERATED MSG: Update forge

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / EntityLiving . java . patch b / patches / minecraft / net / minecraft / entity / EntityLiving . java . patch <nl> index 78f792a . . d23ec22 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntityLiving . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityLiving . java . patch <nl> @ @ - 66 , 3 + 66 , 23 @ @ <nl> } <nl> } <nl> else <nl> + @ @ - 1434 , 5 + 1448 , 19 @ @ <nl> + ON _ GROUND , <nl> + IN _ AIR , <nl> + IN _ WATER ; <nl> + + <nl> + + private final java . util . function . BiPredicate < net . minecraft . world . IBlockAccess , BlockPos > spawnPredicate ; <nl> + + <nl> + + SpawnPlacementType ( ) { this . spawnPredicate = null ; } <nl> + + <nl> + + SpawnPlacementType ( java . util . function . BiPredicate < net . minecraft . world . IBlockAccess , BlockPos > spawnPredicate ) <nl> + + { <nl> + + this . spawnPredicate = spawnPredicate ; <nl> + + } <nl> + + <nl> + + public boolean canSpawnAt ( World world , BlockPos pos ) <nl> + + { <nl> + + return this . spawnPredicate ! = null ? this . spawnPredicate . test ( world , pos ) : net . minecraft . world . WorldEntitySpawner . canCreatureTypeSpawnBody ( this , world , pos ) ; <nl> + + } <nl> + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / EntitySpawnPlacementRegistry . java . patch b / patches / minecraft / net / minecraft / entity / EntitySpawnPlacementRegistry . java . patch <nl> index b21656f . . daaee18 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntitySpawnPlacementRegistry . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntitySpawnPlacementRegistry . java . patch <nl> @ @ - 1 , 13 + 1 , 16 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / entity / EntitySpawnPlacementRegistry . java <nl> + + + . . / src - work / minecraft / net / minecraft / entity / EntitySpawnPlacementRegistry . java <nl> - @ @ - 53 , 6 + 53 , 12 @ @ <nl> - return field _ 180110 _ a . get ( p _ 180109 _ 0 _ ) ; <nl> + @ @ - 50 , 9 + 50 , 14 @ @ <nl> + <nl> + public static EntityLiving . SpawnPlacementType func _ 180109 _ a ( Class < ? > p _ 180109 _ 0 _ ) <nl> + { <nl> + - return field _ 180110 _ a . get ( p _ 180109 _ 0 _ ) ; <nl> + + return field _ 180110 _ a . getOrDefault ( p _ 180109 _ 0 _ , EntityLiving . SpawnPlacementType . ON _ GROUND ) ; <nl> } <nl> <nl> + public static void setPlacementType ( Class < ? extends Entity > entityClass , EntityLiving . SpawnPlacementType placementType ) <nl> + { <nl> - + if ( ! field _ 180110 _ a . containsKey ( entityClass ) ) <nl> - + field _ 180110 _ a . put ( entityClass , placementType ) ; <nl> + + field _ 180110 _ a . putIfAbsent ( entityClass , placementType ) ; <nl> + } <nl> + <nl> static <nl> diff - - git a / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch b / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch <nl> index 1ed609c . . fa33427 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch <nl> @ @ - 50 , 7 + 50 , 21 @ @ <nl> { <nl> continue label134 ; <nl> } <nl> - @ @ - 228 , 8 + 232 , 9 @ @ <nl> + @ @ - 219 , 6 + 223 , 13 @ @ <nl> + } <nl> + else <nl> + { <nl> + + return p _ 180267 _ 0 _ . canSpawnAt ( p _ 180267 _ 1 _ , p _ 180267 _ 2 _ ) ; <nl> + + } <nl> + + } <nl> + + <nl> + + public static boolean canCreatureTypeSpawnBody ( EntityLiving . SpawnPlacementType p _ 180267 _ 0 _ , World p _ 180267 _ 1 _ , BlockPos p _ 180267 _ 2 _ ) <nl> + + { <nl> + + { <nl> + IBlockState iblockstate = p _ 180267 _ 1 _ . func _ 180495 _ p ( p _ 180267 _ 2 _ ) ; <nl> + <nl> + if ( p _ 180267 _ 0 _ = = EntityLiving . SpawnPlacementType . IN _ WATER ) <nl> + @ @ - 228 , 8 + 239 , 9 @ @ <nl> else <nl> { <nl> BlockPos blockpos = p _ 180267 _ 2 _ . func _ 177977 _ b ( ) ; <nl> @ @ - 61 , 7 + 75 , 7 @ @ <nl> { <nl> return false ; <nl> } <nl> - @ @ - 273 , 7 + 278 , 7 @ @ <nl> + @ @ - 273 , 7 + 285 , 7 @ @ <nl> <nl> try <nl> { <nl> @ @ - 70 , 7 + 84 , 7 @ @ <nl> } <nl> catch ( Exception exception ) <nl> { <nl> - @ @ - 281 , 6 + 286 , 7 @ @ <nl> + @ @ - 281 , 6 + 293 , 7 @ @ <nl> continue ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / util / EnumHelper . java b / src / main / java / net / minecraftforge / common / util / EnumHelper . java <nl> index e3f71c7 . . 7d885c1 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / util / EnumHelper . java <nl> + + + b / src / main / java / net / minecraftforge / common / util / EnumHelper . java <nl> @ @ - 21 , 20 + 21 , 22 @ @ package net . minecraftforge . common . util ; <nl> <nl> import java . lang . reflect . * ; <nl> import java . util . * ; <nl> + import java . util . function . BiPredicate ; <nl> <nl> import com . google . common . base . Predicate ; <nl> import com . google . common . collect . Lists ; <nl> <nl> - import net . minecraft . entity . passive . IAnimals ; <nl> import net . minecraftforge . fml . common . EnhancedRuntimeException ; <nl> import net . minecraftforge . fml . common . FMLLog ; <nl> import net . minecraft . block . BlockPressurePlate . Sensitivity ; <nl> import net . minecraft . block . material . Material ; <nl> import net . minecraft . enchantment . EnumEnchantmentType ; <nl> + import net . minecraft . entity . EntityLiving ; <nl> import net . minecraft . entity . EnumCreatureAttribute ; <nl> import net . minecraft . entity . EnumCreatureType ; <nl> import net . minecraft . entity . item . EntityPainting . EnumArt ; <nl> import net . minecraft . entity . passive . HorseArmorType ; <nl> + import net . minecraft . entity . passive . IAnimals ; <nl> import net . minecraft . entity . player . EntityPlayer . SleepResult ; <nl> import net . minecraft . item . EnumAction ; <nl> import net . minecraft . item . EnumRarity ; <nl> @ @ - 42 , 9 + 44 , 11 @ @ import net . minecraft . item . Item ; <nl> import net . minecraft . item . Item . ToolMaterial ; <nl> import net . minecraft . item . ItemArmor . ArmorMaterial ; <nl> import net . minecraft . util . SoundEvent ; <nl> + import net . minecraft . util . math . BlockPos ; <nl> import net . minecraft . util . math . RayTraceResult ; <nl> import net . minecraft . util . text . TextFormatting ; <nl> import net . minecraft . world . EnumSkyBlock ; <nl> + import net . minecraft . world . IBlockAccess ; <nl> import net . minecraft . world . gen . structure . StructureStrongholdPieces . Stronghold . Door ; <nl> import net . minecraftforge . classloading . FMLForgePlugin ; <nl> import org . apache . commons . lang3 . ArrayUtils ; <nl> @ @ - 76 , 7 + 80 , 8 @ @ public class EnumHelper <nl> { SleepResult . class } , <nl> { ToolMaterial . class , int . class , int . class , float . class , float . class , int . class } , <nl> { EnumRarity . class , TextFormatting . class , String . class } , <nl> - { HorseArmorType . class , String . class , int . class } <nl> + { HorseArmorType . class , String . class , int . class } , <nl> + { EntityLiving . SpawnPlacementType . class , BiPredicate . class } <nl> } ; <nl> <nl> @ Nullable <nl> @ @ - 145 , 6 + 150 , 12 @ @ public class EnumHelper <nl> return addEnum ( EnumRarity . class , name , color , displayName ) ; <nl> } <nl> <nl> + @ Nullable <nl> + public static EntityLiving . SpawnPlacementType addSpawnPlacementType ( String name , BiPredicate < IBlockAccess , BlockPos > predicate ) <nl> + { <nl> + return addEnum ( EntityLiving . SpawnPlacementType . class , name , predicate ) ; <nl> + } <nl> + <nl> / * * <nl> * <nl> * @ param name the name of the new { @ code HorseArmorType } <nl> diff - - git a / src / main / resources / forge . exc b / src / main / resources / forge . exc <nl> index 3cbcfe1 . . ff2c10d 100644 <nl> - - - a / src / main / resources / forge . exc <nl> + + + b / src / main / resources / forge . exc <nl> @ @ - 27 , 6 + 27 , 8 @ @ net / minecraft / world / World . getBiomeForCoordsBody ( Lnet / minecraft / util / math / BlockPo <nl> net / minecraft / world / World . markAndNotifyBlock ( Lnet / minecraft / util / math / BlockPos ; Lnet / minecraft / world / chunk / Chunk ; Lnet / minecraft / block / state / IBlockState ; Lnet / minecraft / block / state / IBlockState ; I ) V = | p _ 180501 _ 1 _ , chunk , iblockstate , p _ 180501 _ 2 _ , p _ 180501 _ 3 _ <nl> net / minecraft / world / World . getCloudColorBody ( F ) Lnet / minecraft / util / math / Vec3d ; = | p _ 72824 _ 1 _ <nl> net / minecraft / world / WorldServer . canMineBlockBody ( Lnet / minecraft / entity / player / EntityPlayer ; Lnet / minecraft / util / math / BlockPos ; ) Z = | p _ 175660 _ 1 _ , p _ 175660 _ 2 _ <nl> + net / minecraft / world / WorldEntitySpawner . canCreatureTypeSpawnBody ( Lnet / minecraft / entity / EntityLiving $ SpawnPlacementType ; Lnet / minecraft / world / World ; Lnet / minecraft / util / math / BlockPos ; ) Z = | p _ 180267 _ 0 _ , p _ 180267 _ 1 _ , p _ 180267 _ 2 _ <nl> + <nl> net / minecraft / world / biome / Biome . < init > ( IZ ) V = | p _ i1971 _ 1 _ , register <nl> net / minecraft / world / chunk / storage / AnvilChunkLoader . loadChunk _ _ Async ( Lnet / minecraft / world / World ; II ) [ Ljava / lang / Object ; = | p _ 75815 _ 1 _ , p _ 75815 _ 2 _ , p _ 75815 _ 3 _ <nl> net / minecraft / world / chunk / storage / AnvilChunkLoader . checkedReadChunkFromNBT _ _ Async ( Lnet / minecraft / world / World ; IILnet / minecraft / nbt / NBTTagCompound ; ) [ Ljava / lang / Object ; = | p _ 75822 _ 1 _ , p _ 75822 _ 2 _ , p _ 75822 _ 3 _ , p _ 75822 _ 4 _ <nl> diff - - git a / src / test / java / net / minecraftforge / debug / entity / living / CustomSpawnPlacementTest . java b / src / test / java / net / minecraftforge / debug / entity / living / CustomSpawnPlacementTest . java <nl> new file mode 100644 <nl> index 0000000 . . ba36a82 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / entity / living / CustomSpawnPlacementTest . java <nl> @ @ - 0 , 0 + 1 , 46 @ @ <nl> + / * <nl> + * Minecraft Forge <nl> + * Copyright ( c ) 2016 - 2018 . <nl> + * <nl> + * This library is free software ; you can redistribute it and / or <nl> + * modify it under the terms of the GNU Lesser General Public <nl> + * License as published by the Free Software Foundation version 2 . 1 <nl> + * of the License . <nl> + * <nl> + * This library is distributed in the hope that it will be useful , <nl> + * but WITHOUT ANY WARRANTY ; without even the implied warranty of <nl> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU <nl> + * Lesser General Public License for more details . <nl> + * <nl> + * You should have received a copy of the GNU Lesser General Public <nl> + * License along with this library ; if not , write to the Free Software <nl> + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA <nl> + * / <nl> + <nl> + package net . minecraftforge . debug . entity . living ; <nl> + <nl> + import net . minecraft . block . material . Material ; <nl> + import net . minecraft . entity . EntityLiving ; <nl> + import net . minecraft . entity . EntitySpawnPlacementRegistry ; <nl> + import net . minecraft . entity . monster . EntityStray ; <nl> + import net . minecraftforge . common . util . EnumHelper ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> + <nl> + @ Mod ( modid = CustomSpawnPlacementTest . MOD _ ID , name = " Custom SpawnPlacementType test mod " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> + public class CustomSpawnPlacementTest <nl> + { <nl> + static final String MOD _ ID = " custom _ spawn _ placement _ test " ; <nl> + static final boolean ENABLED = false ; <nl> + static final EntityLiving . SpawnPlacementType CUSTOM = EnumHelper . addSpawnPlacementType ( " CUSTOM " , ( world , pos ) - > world . getBlockState ( pos . down ( ) ) . getMaterial ( ) = = Material . ICE ) ; <nl> + <nl> + @ Mod . EventHandler <nl> + public void preInit ( FMLPreInitializationEvent event ) <nl> + { <nl> + if ( ENABLED ) <nl> + { <nl> + / / needs edit to EntitySpawnPlacementRegistry to work <nl> + EntitySpawnPlacementRegistry . setPlacementType ( EntityStray . class , CUSTOM ) ; <nl> + } <nl> + } <nl> + } <nl> diff - - git a / src / test / java / net / minecraftforge / test / EnumHelperTest . java b / src / test / java / net / minecraftforge / test / EnumHelperTest . java <nl> index 4a2f5e5 . . db2db44 100644 <nl> - - - a / src / test / java / net / minecraftforge / test / EnumHelperTest . java <nl> + + + b / src / test / java / net / minecraftforge / test / EnumHelperTest . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ package net . minecraftforge . test ; <nl> import com . google . common . base . Joiner ; <nl> import com . google . common . base . Throwables ; <nl> import net . minecraft . enchantment . EnumEnchantmentType ; <nl> + import net . minecraft . entity . EntityLiving ; <nl> import net . minecraft . entity . passive . HorseArmorType ; <nl> import net . minecraft . init . Bootstrap ; <nl> import net . minecraftforge . client . EnumHelperClient ; <nl> @ @ - 110 , 6 + 111 , 10 @ @ public class EnumHelperTest <nl> { <nl> filter = true ; / / We don ' t want people using this method . <nl> } <nl> + if ( returnType = = EntityLiving . SpawnPlacementType . class & & declaredConstructor . getParameterTypes ( ) . length = = 2 ) <nl> + { <nl> + filter = true ; / / We don ' t want people using this method . <nl> + } <nl> if ( returnType = = HorseArmorType . class & & ( declaredConstructor . getParameterTypes ( ) . length = = 3 | | declaredConstructor . getParameterTypes ( ) [ 2 ] = = int . class ) ) <nl> { <nl> filter = true ; / / We don ' t want people using either of these methods .
NEAREST DIFF (one line): diff - - git a / fml b / fml <nl> index a6dc03a . . 4d46abf 160000 <nl> - - - a / fml <nl> + + + b / fml <nl> @ @ - 1 + 1 @ @ <nl> - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c <nl> + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e <nl> diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> index 0ef9b48 . . 63a9622 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch <nl> @ @ - 21 , 10 + 21 , 10 @ @ <nl> this . disconnected = true ; <nl> this . mc . loadWorld ( ( WorldClient ) null ) ; <nl> <nl> - @ @ - 866 , 7 + 871 , 11 @ @ <nl> - public void handleChat ( Packet3Chat par1Packet3Chat ) <nl> - { <nl> - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; <nl> + @ @ - 870 , 7 + 875 , 11 @ @ <nl> + { <nl> + return ; <nl> + } <nl> - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; <nl> + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; <nl> + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) <nl> @ @ - 34 , 7 + 34 , 7 @ @ <nl> } <nl> <nl> public void handleAnimation ( Packet18Animation par1Packet18Animation ) <nl> - @ @ - 1354 , 6 + 1363 , 10 @ @ <nl> + @ @ - 1358 , 6 + 1367 , 10 @ @ <nl> { <nl> tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> index 6d2c8e1 . . a186e0f 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch <nl> @ @ - 13 , 11 + 13 , 16 @ @ <nl> public class EntityPlayerMP extends EntityPlayer implements ICrafting <nl> { <nl> private String translator = " en _ US " ; <nl> - @ @ - 165 , 18 + 171 , 10 @ @ <nl> + @ @ - 164 , 19 + 170 , 14 @ @ <nl> + super ( par2World , par3Str ) ; <nl> par4ItemInWorldManager . thisPlayerMP = this ; <nl> this . theItemInWorldManager = par4ItemInWorldManager ; <nl> - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; <nl> + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . <nl> + + this . renderDistance = 0 ; <nl> + + else <nl> + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; <nl> + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; <nl> int i = chunkcoordinates . posX ; <nl> int j = chunkcoordinates . posZ ; <nl> @ @ - 33 , 7 + 38 , 7 @ @ <nl> <nl> this . mcServer = par1MinecraftServer ; <nl> this . stepHeight = 0 . 0F ; <nl> - @ @ - 240 , 11 + 238 , 6 @ @ <nl> + @ @ - 240 , 11 + 241 , 6 @ @ <nl> this . yOffset = 0 . 0F ; <nl> } <nl> <nl> @ @ - 45 , 7 + 50 , 7 @ @ <nl> / * * <nl> * Called to update the entity ' s position / logic . <nl> * / <nl> - @ @ - 254 , 7 + 247 , 7 @ @ <nl> + @ @ - 254 , 7 + 250 , 7 @ @ <nl> - - this . initialInvulnerability ; <nl> this . openContainer . detectAndSendChanges ( ) ; <nl> <nl> @ @ - 54 , 7 + 59 , 7 @ @ <nl> { <nl> this . closeScreen ( ) ; <nl> this . openContainer = this . inventoryContainer ; <nl> - @ @ - 290 , 7 + 283 , 10 @ @ <nl> + @ @ - 290 , 7 + 286 , 10 @ @ <nl> if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) <nl> { <nl> arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; <nl> @ @ - 66 , 7 + 71 , 7 @ @ <nl> } <nl> } <nl> <nl> - @ @ - 311 , 6 + 307 , 7 @ @ <nl> + @ @ - 311 , 6 + 310 , 7 @ @ <nl> { <nl> Chunk chunk = ( Chunk ) iterator2 . next ( ) ; <nl> this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; <nl> @ @ - 74 , 7 + 79 , 7 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 383 , 11 + 380 , 25 @ @ <nl> + @ @ - 383 , 11 + 383 , 25 @ @ <nl> * / <nl> public void onDeath ( DamageSource par1DamageSource ) <nl> { <nl> @ @ - 100 , 7 + 105 , 7 @ @ <nl> } <nl> <nl> Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; <nl> - @ @ - 1054 , 4 + 1065 , 16 @ @ <nl> + @ @ - 1054 , 4 + 1068 , 16 @ @ <nl> { <nl> this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> index d28a430 . . 7e6a155 100644 <nl> - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch <nl> @ @ - 127 , 7 + 127 , 7 @ @ <nl> { <nl> this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; <nl> } <nl> - @ @ - 695 , 6 + 733 , 8 @ @ <nl> + @ @ - 698 , 6 + 736 , 8 @ @ <nl> } <nl> <nl> ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; <nl> @ @ - 136 , 7 + 136 , 7 @ @ <nl> this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; <nl> } <nl> <nl> - @ @ - 849 , 7 + 889 , 7 @ @ <nl> + @ @ - 852 , 7 + 892 , 7 @ @ <nl> return ; <nl> } <nl> <nl> diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> index 7d63255 . . 7413a7d 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java <nl> @ @ - 1 , 11 + 1 , 15 @ @ <nl> package net . minecraftforge . common ; <nl> <nl> import cpw . mods . fml . common . FMLCommonHandler ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> import net . minecraft . entity . player . EntityPlayerMP ; <nl> import net . minecraft . item . ItemInWorldManager ; <nl> + import net . minecraft . network . packet . Packet204ClientInfo ; <nl> import net . minecraft . server . MinecraftServer ; <nl> + import net . minecraft . stats . StatBase ; <nl> import net . minecraft . util . ChatMessageComponent ; <nl> import net . minecraft . util . ChunkCoordinates ; <nl> + import net . minecraft . util . DamageSource ; <nl> import net . minecraft . world . World ; <nl> <nl> / / Preliminary , simple Fake Player class <nl> @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP <nl> <nl> @ Override <nl> public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } <nl> + @ Override <nl> + public void addStat ( StatBase par1StatBase , int par2 ) { } <nl> + @ Override <nl> + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } <nl> + @ Override <nl> + public boolean isEntityInvulnerable ( ) { return true ; } <nl> + @ Override <nl> + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } <nl> + @ Override <nl> + public void onDeath ( DamageSource source ) { return ; } <nl> + @ Override <nl> + public void onUpdate ( ) { return ; } <nl> + @ Override <nl> + public void travelToDimension ( int dim ) { return ; } <nl> + @ Override <nl> + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> index 43dbe83 . . 8d98241 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java <nl> @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; <nl> import net . minecraft . item . ItemStack ; <nl> import net . minecraft . item . ItemSword ; <nl> import net . minecraft . network . NetServerHandler ; <nl> + import net . minecraft . network . packet . Packet ; <nl> import net . minecraft . network . packet . Packet53BlockChange ; <nl> import net . minecraft . tileentity . TileEntity ; <nl> import net . minecraft . util . AxisAlignedBB ; <nl> @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks <nl> TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; <nl> if ( tileentity ! = null ) <nl> { <nl> - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; <nl> + Packet pkt = tileentity . getDescriptionPacket ( ) ; <nl> + if ( pkt ! = null ) <nl> + { <nl> + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; <nl> + } <nl> } <nl> } <nl> return event ; <nl> diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> index 5031fa6 . . 16d011f 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java <nl> @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; <nl> import java . util . Map ; <nl> <nl> import net . minecraft . block . Block ; <nl> + import net . minecraft . util . StatCollector ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . event . Event ; <nl> <nl> @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry <nl> static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; <nl> static BiMap < Block , Fluid > fluidBlocks ; <nl> <nl> - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> + public static final Fluid WATER = new Fluid ( " water " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . water . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; <nl> + <nl> + public static final Fluid LAVA = new Fluid ( " lava " ) { <nl> + @ Override <nl> + public String getLocalizedName ( ) { <nl> + return StatCollector . translateToLocal ( " tile . lava . name " ) ; <nl> + } <nl> + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; <nl> <nl> public static int renderIdFluid = - 1 ; <nl>

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / EntityLiving . java . patch b / patches / minecraft / net / minecraft / entity / EntityLiving . java . patch 
 index 78f792a . . d23ec22 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntityLiving . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntityLiving . java . patch 
 @ @ - 66 , 3 + 66 , 23 @ @ 
 } 
 } 
 else 
 + @ @ - 1434 , 5 + 1448 , 19 @ @ 
 + ON _ GROUND , 
 + IN _ AIR , 
 + IN _ WATER ; 
 + + 
 + + private final java . util . function . BiPredicate < net . minecraft . world . IBlockAccess , BlockPos > spawnPredicate ; 
 + + 
 + + SpawnPlacementType ( ) { this . spawnPredicate = null ; } 
 + + 
 + + SpawnPlacementType ( java . util . function . BiPredicate < net . minecraft . world . IBlockAccess , BlockPos > spawnPredicate ) 
 + + { 
 + + this . spawnPredicate = spawnPredicate ; 
 + + } 
 + + 
 + + public boolean canSpawnAt ( World world , BlockPos pos ) 
 + + { 
 + + return this . spawnPredicate ! = null ? this . spawnPredicate . test ( world , pos ) : net . minecraft . world . WorldEntitySpawner . canCreatureTypeSpawnBody ( this , world , pos ) ; 
 + + } 
 + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / entity / EntitySpawnPlacementRegistry . java . patch b / patches / minecraft / net / minecraft / entity / EntitySpawnPlacementRegistry . java . patch 
 index b21656f . . daaee18 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntitySpawnPlacementRegistry . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntitySpawnPlacementRegistry . java . patch 
 @ @ - 1 , 13 + 1 , 16 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / entity / EntitySpawnPlacementRegistry . java 
 + + + . . / src - work / minecraft / net / minecraft / entity / EntitySpawnPlacementRegistry . java 
 - @ @ - 53 , 6 + 53 , 12 @ @ 
 - return field _ 180110 _ a . get ( p _ 180109 _ 0 _ ) ; 
 + @ @ - 50 , 9 + 50 , 14 @ @ 
 + 
 + public static EntityLiving . SpawnPlacementType func _ 180109 _ a ( Class < ? > p _ 180109 _ 0 _ ) 
 + { 
 + - return field _ 180110 _ a . get ( p _ 180109 _ 0 _ ) ; 
 + + return field _ 180110 _ a . getOrDefault ( p _ 180109 _ 0 _ , EntityLiving . SpawnPlacementType . ON _ GROUND ) ; 
 } 
 
 + public static void setPlacementType ( Class < ? extends Entity > entityClass , EntityLiving . SpawnPlacementType placementType ) 
 + { 
 - + if ( ! field _ 180110 _ a . containsKey ( entityClass ) ) 
 - + field _ 180110 _ a . put ( entityClass , placementType ) ; 
 + + field _ 180110 _ a . putIfAbsent ( entityClass , placementType ) ; 
 + } 
 + 
 static 
 diff - - git a / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch b / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch 
 index 1ed609c . . fa33427 100644 
 - - - a / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch 
 @ @ - 50 , 7 + 50 , 21 @ @ 
 { 
 continue label134 ; 
 } 
 - @ @ - 228 , 8 + 232 , 9 @ @ 
 + @ @ - 219 , 6 + 223 , 13 @ @ 
 + } 
 + else 
 + { 
 + + return p _ 180267 _ 0 _ . canSpawnAt ( p _ 180267 _ 1 _ , p _ 180267 _ 2 _ ) ; 
 + + } 
 + + } 
 + + 
 + + public static boolean canCreatureTypeSpawnBody ( EntityLiving . SpawnPlacementType p _ 180267 _ 0 _ , World p _ 180267 _ 1 _ , BlockPos p _ 180267 _ 2 _ ) 
 + + { 
 + + { 
 + IBlockState iblockstate = p _ 180267 _ 1 _ . func _ 180495 _ p ( p _ 180267 _ 2 _ ) ; 
 + 
 + if ( p _ 180267 _ 0 _ = = EntityLiving . SpawnPlacementType . IN _ WATER ) 
 + @ @ - 228 , 8 + 239 , 9 @ @ 
 else 
 { 
 BlockPos blockpos = p _ 180267 _ 2 _ . func _ 177977 _ b ( ) ; 
 @ @ - 61 , 7 + 75 , 7 @ @ 
 { 
 return false ; 
 } 
 - @ @ - 273 , 7 + 278 , 7 @ @ 
 + @ @ - 273 , 7 + 285 , 7 @ @ 
 
 try 
 { 
 @ @ - 70 , 7 + 84 , 7 @ @ 
 } 
 catch ( Exception exception ) 
 { 
 - @ @ - 281 , 6 + 286 , 7 @ @ 
 + @ @ - 281 , 6 + 293 , 7 @ @ 
 continue ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / util / EnumHelper . java b / src / main / java / net / minecraftforge / common / util / EnumHelper . java 
 index e3f71c7 . . 7d885c1 100644 
 - - - a / src / main / java / net / minecraftforge / common / util / EnumHelper . java 
 + + + b / src / main / java / net / minecraftforge / common / util / EnumHelper . java 
 @ @ - 21 , 20 + 21 , 22 @ @ package net . minecraftforge . common . util ; 
 
 import java . lang . reflect . * ; 
 import java . util . * ; 
 + import java . util . function . BiPredicate ; 
 
 import com . google . common . base . Predicate ; 
 import com . google . common . collect . Lists ; 
 
 - import net . minecraft . entity . passive . IAnimals ; 
 import net . minecraftforge . fml . common . EnhancedRuntimeException ; 
 import net . minecraftforge . fml . common . FMLLog ; 
 import net . minecraft . block . BlockPressurePlate . Sensitivity ; 
 import net . minecraft . block . material . Material ; 
 import net . minecraft . enchantment . EnumEnchantmentType ; 
 + import net . minecraft . entity . EntityLiving ; 
 import net . minecraft . entity . EnumCreatureAttribute ; 
 import net . minecraft . entity . EnumCreatureType ; 
 import net . minecraft . entity . item . EntityPainting . EnumArt ; 
 import net . minecraft . entity . passive . HorseArmorType ; 
 + import net . minecraft . entity . passive . IAnimals ; 
 import net . minecraft . entity . player . EntityPlayer . SleepResult ; 
 import net . minecraft . item . EnumAction ; 
 import net . minecraft . item . EnumRarity ; 
 @ @ - 42 , 9 + 44 , 11 @ @ import net . minecraft . item . Item ; 
 import net . minecraft . item . Item . ToolMaterial ; 
 import net . minecraft . item . ItemArmor . ArmorMaterial ; 
 import net . minecraft . util . SoundEvent ; 
 + import net . minecraft . util . math . BlockPos ; 
 import net . minecraft . util . math . RayTraceResult ; 
 import net . minecraft . util . text . TextFormatting ; 
 import net . minecraft . world . EnumSkyBlock ; 
 + import net . minecraft . world . IBlockAccess ; 
 import net . minecraft . world . gen . structure . StructureStrongholdPieces . Stronghold . Door ; 
 import net . minecraftforge . classloading . FMLForgePlugin ; 
 import org . apache . commons . lang3 . ArrayUtils ; 
 @ @ - 76 , 7 + 80 , 8 @ @ public class EnumHelper 
 { SleepResult . class } , 
 { ToolMaterial . class , int . class , int . class , float . class , float . class , int . class } , 
 { EnumRarity . class , TextFormatting . class , String . class } , 
 - { HorseArmorType . class , String . class , int . class } 
 + { HorseArmorType . class , String . class , int . class } , 
 + { EntityLiving . SpawnPlacementType . class , BiPredicate . class } 
 } ; 
 
 @ Nullable 
 @ @ - 145 , 6 + 150 , 12 @ @ public class EnumHelper 
 return addEnum ( EnumRarity . class , name , color , displayName ) ; 
 } 
 
 + @ Nullable 
 + public static EntityLiving . SpawnPlacementType addSpawnPlacementType ( String name , BiPredicate < IBlockAccess , BlockPos > predicate ) 
 + { 
 + return addEnum ( EntityLiving . SpawnPlacementType . class , name , predicate ) ; 
 + } 
 + 
 / * * 
 * 
 * @ param name the name of the new { @ code HorseArmorType } 
 diff - - git a / src / main / resources / forge . exc b / src / main / resources / forge . exc 
 index 3cbcfe1 . . ff2c10d 100644 
 - - - a / src / main / resources / forge . exc 
 + + + b / src / main / resources / forge . exc 
 @ @ - 27 , 6 + 27 , 8 @ @ net / minecraft / world / World . getBiomeForCoordsBody ( Lnet / minecraft / util / math / BlockPo 
 net / minecraft / world / World . markAndNotifyBlock ( Lnet / minecraft / util / math / BlockPos ; Lnet / minecraft / world / chunk / Chunk ; Lnet / minecraft / block / state / IBlockState ; Lnet / minecraft / block / state / IBlockState ; I ) V = | p _ 180501 _ 1 _ , chunk , iblockstate , p _ 180501 _ 2 _ , p _ 180501 _ 3 _ 
 net / minecraft / world / World . getCloudColorBody ( F ) Lnet / minecraft / util / math / Vec3d ; = | p _ 72824 _ 1 _ 
 net / minecraft / world / WorldServer . canMineBlockBody ( Lnet / minecraft / entity / player / EntityPlayer ; Lnet / minecraft / util / math / BlockPos ; ) Z = | p _ 175660 _ 1 _ , p _ 175660 _ 2 _ 
 + net / minecraft / world / WorldEntitySpawner . canCreatureTypeSpawnBody ( Lnet / minecraft / entity / EntityLiving $ SpawnPlacementType ; Lnet / minecraft / world / World ; Lnet / minecraft / util / math / BlockPos ; ) Z = | p _ 180267 _ 0 _ , p _ 180267 _ 1 _ , p _ 180267 _ 2 _ 
 + 
 net / minecraft / world / biome / Biome . < init > ( IZ ) V = | p _ i1971 _ 1 _ , register 
 net / minecraft / world / chunk / storage / AnvilChunkLoader . loadChunk _ _ Async ( Lnet / minecraft / world / World ; II ) [ Ljava / lang / Object ; = | p _ 75815 _ 1 _ , p _ 75815 _ 2 _ , p _ 75815 _ 3 _ 
 net / minecraft / world / chunk / storage / AnvilChunkLoader . checkedReadChunkFromNBT _ _ Async ( Lnet / minecraft / world / World ; IILnet / minecraft / nbt / NBTTagCompound ; ) [ Ljava / lang / Object ; = | p _ 75822 _ 1 _ , p _ 75822 _ 2 _ , p _ 75822 _ 3 _ , p _ 75822 _ 4 _ 
 diff - - git a / src / test / java / net / minecraftforge / debug / entity / living / CustomSpawnPlacementTest . java b / src / test / java / net / minecraftforge / debug / entity / living / CustomSpawnPlacementTest . java 
 new file mode 100644 
 index 0000000 . . ba36a82 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / entity / living / CustomSpawnPlacementTest . java 
 @ @ - 0 , 0 + 1 , 46 @ @ 
 + / * 
 + * Minecraft Forge 
 + * Copyright ( c ) 2016 - 2018 . 
 + * 
 + * This library is free software ; you can redistribute it and / or 
 + * modify it under the terms of the GNU Lesser General Public 
 + * License as published by the Free Software Foundation version 2 . 1 
 + * of the License . 
 + * 
 + * This library is distributed in the hope that it will be useful , 
 + * but WITHOUT ANY WARRANTY ; without even the implied warranty of 
 + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE . See the GNU 
 + * Lesser General Public License for more details . 
 + * 
 + * You should have received a copy of the GNU Lesser General Public 
 + * License along with this library ; if not , write to the Free Software 
 + * Foundation , Inc . , 51 Franklin Street , Fifth Floor , Boston , MA 02110 - 1301 USA 
 + * / 
 + 
 + package net . minecraftforge . debug . entity . living ; 
 + 
 + import net . minecraft . block . material . Material ; 
 + import net . minecraft . entity . EntityLiving ; 
 + import net . minecraft . entity . EntitySpawnPlacementRegistry ; 
 + import net . minecraft . entity . monster . EntityStray ; 
 + import net . minecraftforge . common . util . EnumHelper ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 + 
 + @ Mod ( modid = CustomSpawnPlacementTest . MOD _ ID , name = " Custom SpawnPlacementType test mod " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 + public class CustomSpawnPlacementTest 
 + { 
 + static final String MOD _ ID = " custom _ spawn _ placement _ test " ; 
 + static final boolean ENABLED = false ; 
 + static final EntityLiving . SpawnPlacementType CUSTOM = EnumHelper . addSpawnPlacementType ( " CUSTOM " , ( world , pos ) - > world . getBlockState ( pos . down ( ) ) . getMaterial ( ) = = Material . ICE ) ; 
 + 
 + @ Mod . EventHandler 
 + public void preInit ( FMLPreInitializationEvent event ) 
 + { 
 + if ( ENABLED ) 
 + { 
 + / / needs edit to EntitySpawnPlacementRegistry to work 
 + EntitySpawnPlacementRegistry . setPlacementType ( EntityStray . class , CUSTOM ) ; 
 + } 
 + } 
 + } 
 diff - - git a / src / test / java / net / minecraftforge / test / EnumHelperTest . java b / src / test / java / net / minecraftforge / test / EnumHelperTest . java 
 index 4a2f5e5 . . db2db44 100644 
 - - - a / src / test / java / net / minecraftforge / test / EnumHelperTest . java 
 + + + b / src / test / java / net / minecraftforge / test / EnumHelperTest . java 
 @ @ - 22 , 6 + 22 , 7 @ @ package net . minecraftforge . test ; 
 import com . google . common . base . Joiner ; 
 import com . google . common . base . Throwables ; 
 import net . minecraft . enchantment . EnumEnchantmentType ; 
 + import net . minecraft . entity . EntityLiving ; 
 import net . minecraft . entity . passive . HorseArmorType ; 
 import net . minecraft . init . Bootstrap ; 
 import net . minecraftforge . client . EnumHelperClient ; 
 @ @ - 110 , 6 + 111 , 10 @ @ public class EnumHelperTest 
 { 
 filter = true ; / / We don ' t want people using this method . 
 } 
 + if ( returnType = = EntityLiving . SpawnPlacementType . class & & declaredConstructor . getParameterTypes ( ) . length = = 2 ) 
 + { 
 + filter = true ; / / We don ' t want people using this method . 
 + } 
 if ( returnType = = HorseArmorType . class & & ( declaredConstructor . getParameterTypes ( ) . length = = 3 | | declaredConstructor . getParameterTypes ( ) [ 2 ] = = int . class ) ) 
 { 
 filter = true ; / / We don ' t want people using either of these methods .

NEAREST DIFF:
diff - - git a / fml b / fml 
 index a6dc03a . . 4d46abf 160000 
 - - - a / fml 
 + + + b / fml 
 @ @ - 1 + 1 @ @ 
 - Subproject commit a6dc03aa7e956841ce74feda3b3058934606600c 
 + Subproject commit 4d46abf761c681010f338a27978e87cd56c5e32e 
 diff - - git a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 index 0ef9b48 . . 63a9622 100644 
 - - - a / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / multiplayer / NetClientHandler . java . patch 
 @ @ - 21 , 10 + 21 , 10 @ @ 
 this . disconnected = true ; 
 this . mc . loadWorld ( ( WorldClient ) null ) ; 
 
 - @ @ - 866 , 7 + 871 , 11 @ @ 
 - public void handleChat ( Packet3Chat par1Packet3Chat ) 
 - { 
 - par1Packet3Chat = FMLNetworkHandler . handleChatMessage ( this , par1Packet3Chat ) ; 
 + @ @ - 870 , 7 + 875 , 11 @ @ 
 + { 
 + return ; 
 + } 
 - this . mc . ingameGUI . getChatGUI ( ) . printChatMessage ( ChatMessageComponent . createFromJson ( par1Packet3Chat . message ) . toStringWithFormatting ( true ) ) ; 
 + ClientChatReceivedEvent event = new ClientChatReceivedEvent ( par1Packet3Chat . message ) ; 
 + if ( ! MinecraftForge . EVENT _ BUS . post ( event ) & & event . message ! = null ) 
 @ @ - 34 , 7 + 34 , 7 @ @ 
 } 
 
 public void handleAnimation ( Packet18Animation par1Packet18Animation ) 
 - @ @ - 1354 , 6 + 1363 , 10 @ @ 
 + @ @ - 1358 , 6 + 1367 , 10 @ @ 
 { 
 tileentity . readFromNBT ( par1Packet132TileEntityData . data ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 index 6d2c8e1 . . a186e0f 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / EntityPlayerMP . java . patch 
 @ @ - 13 , 11 + 13 , 16 @ @ 
 public class EntityPlayerMP extends EntityPlayer implements ICrafting 
 { 
 private String translator = " en _ US " ; 
 - @ @ - 165 , 18 + 171 , 10 @ @ 
 + @ @ - 164 , 19 + 170 , 14 @ @ 
 + super ( par2World , par3Str ) ; 
 par4ItemInWorldManager . thisPlayerMP = this ; 
 this . theItemInWorldManager = par4ItemInWorldManager ; 
 - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + - this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 - ChunkCoordinates chunkcoordinates = par2World . getSpawnPoint ( ) ; 
 + + if ( par1MinecraftServer = = null ) / / ToDo : Remove this in 1 . 7 , Fake players shouldn ' t be used purely client side . 
 + + this . renderDistance = 0 ; 
 + + else 
 + + this . renderDistance = par1MinecraftServer . getConfigurationManager ( ) . getViewDistance ( ) ; 
 + ChunkCoordinates chunkcoordinates = par2World . provider . getRandomizedSpawnPoint ( ) ; 
 int i = chunkcoordinates . posX ; 
 int j = chunkcoordinates . posZ ; 
 @ @ - 33 , 7 + 38 , 7 @ @ 
 
 this . mcServer = par1MinecraftServer ; 
 this . stepHeight = 0 . 0F ; 
 - @ @ - 240 , 11 + 238 , 6 @ @ 
 + @ @ - 240 , 11 + 241 , 6 @ @ 
 this . yOffset = 0 . 0F ; 
 } 
 
 @ @ - 45 , 7 + 50 , 7 @ @ 
 / * * 
 * Called to update the entity ' s position / logic . 
 * / 
 - @ @ - 254 , 7 + 247 , 7 @ @ 
 + @ @ - 254 , 7 + 250 , 7 @ @ 
 - - this . initialInvulnerability ; 
 this . openContainer . detectAndSendChanges ( ) ; 
 
 @ @ - 54 , 7 + 59 , 7 @ @ 
 { 
 this . closeScreen ( ) ; 
 this . openContainer = this . inventoryContainer ; 
 - @ @ - 290 , 7 + 283 , 10 @ @ 
 + @ @ - 290 , 7 + 286 , 10 @ @ 
 if ( chunkcoordintpair ! = null & & this . worldObj . blockExists ( chunkcoordintpair . chunkXPos < < 4 , 0 , chunkcoordintpair . chunkZPos < < 4 ) ) 
 { 
 arraylist . add ( this . worldObj . getChunkFromChunkCoords ( chunkcoordintpair . chunkXPos , chunkcoordintpair . chunkZPos ) ) ; 
 @ @ - 66 , 7 + 71 , 7 @ @ 
 } 
 } 
 
 - @ @ - 311 , 6 + 307 , 7 @ @ 
 + @ @ - 311 , 6 + 310 , 7 @ @ 
 { 
 Chunk chunk = ( Chunk ) iterator2 . next ( ) ; 
 this . getServerForPlayer ( ) . getEntityTracker ( ) . func _ 85172 _ a ( this , chunk ) ; 
 @ @ - 74 , 7 + 79 , 7 @ @ 
 } 
 } 
 } 
 - @ @ - 383 , 11 + 380 , 25 @ @ 
 + @ @ - 383 , 11 + 383 , 25 @ @ 
 * / 
 public void onDeath ( DamageSource par1DamageSource ) 
 { 
 @ @ - 100 , 7 + 105 , 7 @ @ 
 } 
 
 Collection collection = this . worldObj . getScoreboard ( ) . func _ 96520 _ a ( ScoreObjectiveCriteria . deathCount ) ; 
 - @ @ - 1054 , 4 + 1065 , 16 @ @ 
 + @ @ - 1054 , 4 + 1068 , 16 @ @ 
 { 
 this . field _ 143005 _ bX = MinecraftServer . getSystemTimeMillis ( ) ; 
 } 
 diff - - git a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 index d28a430 . . 7e6a155 100644 
 - - - a / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 + + + b / patches / minecraft / net / minecraft / network / NetServerHandler . java . patch 
 @ @ - 127 , 7 + 127 , 7 @ @ 
 { 
 this . playerEntity . theItemInWorldManager . activateBlockOrUseItem ( this . playerEntity , worldserver , itemstack , i , j , k , l , par1Packet15Place . getXOffset ( ) , par1Packet15Place . getYOffset ( ) , par1Packet15Place . getZOffset ( ) ) ; 
 } 
 - @ @ - 695 , 6 + 733 , 8 @ @ 
 + @ @ - 698 , 6 + 736 , 8 @ @ 
 } 
 
 ChatMessageComponent chatmessagecomponent = ChatMessageComponent . createFromTranslationWithSubstitutions ( " chat . type . text " , new Object [ ] { this . playerEntity . getTranslatedEntityName ( ) , s } ) ; 
 @ @ - 136 , 7 + 136 , 7 @ @ 
 this . mcServer . getConfigurationManager ( ) . func _ 110459 _ a ( chatmessagecomponent , false ) ; 
 } 
 
 - @ @ - 849 , 7 + 889 , 7 @ @ 
 + @ @ - 852 , 7 + 892 , 7 @ @ 
 return ; 
 } 
 
 diff - - git a / src / main / java / net / minecraftforge / common / FakePlayer . java b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 index 7d63255 . . 7413a7d 100644 
 - - - a / src / main / java / net / minecraftforge / common / FakePlayer . java 
 + + + b / src / main / java / net / minecraftforge / common / FakePlayer . java 
 @ @ - 1 , 11 + 1 , 15 @ @ 
 package net . minecraftforge . common ; 
 
 import cpw . mods . fml . common . FMLCommonHandler ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 import net . minecraft . entity . player . EntityPlayerMP ; 
 import net . minecraft . item . ItemInWorldManager ; 
 + import net . minecraft . network . packet . Packet204ClientInfo ; 
 import net . minecraft . server . MinecraftServer ; 
 + import net . minecraft . stats . StatBase ; 
 import net . minecraft . util . ChatMessageComponent ; 
 import net . minecraft . util . ChunkCoordinates ; 
 + import net . minecraft . util . DamageSource ; 
 import net . minecraft . world . World ; 
 
 / / Preliminary , simple Fake Player class 
 @ @ - 25 , 4 + 29 , 20 @ @ public class FakePlayer extends EntityPlayerMP 
 
 @ Override 
 public void sendChatToPlayer ( ChatMessageComponent chatmessagecomponent ) { } 
 + @ Override 
 + public void addStat ( StatBase par1StatBase , int par2 ) { } 
 + @ Override 
 + public void openGui ( Object mod , int modGuiId , World world , int x , int y , int z ) { } 
 + @ Override 
 + public boolean isEntityInvulnerable ( ) { return true ; } 
 + @ Override 
 + public boolean canAttackPlayer ( EntityPlayer player ) { return false ; } 
 + @ Override 
 + public void onDeath ( DamageSource source ) { return ; } 
 + @ Override 
 + public void onUpdate ( ) { return ; } 
 + @ Override 
 + public void travelToDimension ( int dim ) { return ; } 
 + @ Override 
 + public void updateClientInfo ( Packet204ClientInfo pkt ) { return ; } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / common / ForgeHooks . java b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 index 43dbe83 . . 8d98241 100644 
 - - - a / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 + + + b / src / main / java / net / minecraftforge / common / ForgeHooks . java 
 @ @ - 22 , 6 + 22 , 7 @ @ import net . minecraft . item . ItemSpade ; 
 import net . minecraft . item . ItemStack ; 
 import net . minecraft . item . ItemSword ; 
 import net . minecraft . network . NetServerHandler ; 
 + import net . minecraft . network . packet . Packet ; 
 import net . minecraft . network . packet . Packet53BlockChange ; 
 import net . minecraft . tileentity . TileEntity ; 
 import net . minecraft . util . AxisAlignedBB ; 
 @ @ - 487 , 7 + 488 , 11 @ @ public class ForgeHooks 
 TileEntity tileentity = world . getBlockTileEntity ( x , y , z ) ; 
 if ( tileentity ! = null ) 
 { 
 - entityPlayer . playerNetServerHandler . sendPacketToPlayer ( tileentity . getDescriptionPacket ( ) ) ; 
 + Packet pkt = tileentity . getDescriptionPacket ( ) ; 
 + if ( pkt ! = null ) 
 + { 
 + entityPlayer . playerNetServerHandler . sendPacketToPlayer ( pkt ) ; 
 + } 
 } 
 } 
 return event ; 
 diff - - git a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 index 5031fa6 . . 16d011f 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 + + + b / src / main / java / net / minecraftforge / fluids / FluidRegistry . java 
 @ @ - 4 , 6 + 4 , 7 @ @ import java . util . HashMap ; 
 import java . util . Map ; 
 
 import net . minecraft . block . Block ; 
 + import net . minecraft . util . StatCollector ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . event . Event ; 
 
 @ @ - 25 , 8 + 26 , 19 @ @ public abstract class FluidRegistry 
 static BiMap < String , Integer > fluidIDs = HashBiMap . create ( ) ; 
 static BiMap < Block , Fluid > fluidBlocks ; 
 
 - public static final Fluid WATER = new Fluid ( " water " ) . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 - public static final Fluid LAVA = new Fluid ( " lava " ) . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 + public static final Fluid WATER = new Fluid ( " water " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . water . name " ) ; 
 + } 
 + } . setBlockID ( Block . waterStill . blockID ) . setUnlocalizedName ( Block . waterStill . getUnlocalizedName ( ) ) ; 
 + 
 + public static final Fluid LAVA = new Fluid ( " lava " ) { 
 + @ Override 
 + public String getLocalizedName ( ) { 
 + return StatCollector . translateToLocal ( " tile . lava . name " ) ; 
 + } 
 + } . setBlockID ( Block . lavaStill . blockID ) . setLuminosity ( 15 ) . setDensity ( 3000 ) . setViscosity ( 6000 ) . setTemperature ( 1300 ) . setUnlocalizedName ( Block . lavaStill . getUnlocalizedName ( ) ) ; 
 
 public static int renderIdFluid = - 1 ; 

