BLEU SCORE: 0.007869270985473822

TEST MSG: Use instanceof ItemFishingRod instead of item equality
GENERATED MSG: Tipped arrows are now not affected by infinite enchantment but are still effected by creative mode .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / entity / RenderFish . java . patch b / patches / minecraft / net / minecraft / client / renderer / entity / RenderFish . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 7ab7bcb <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / entity / RenderFish . java . patch <nl> @ @ - 0 , 0 + 1 , 11 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / client / renderer / entity / RenderFish . java <nl> + + + + . . / src - work / minecraft / net / minecraft / client / renderer / entity / RenderFish . java <nl> + @ @ - 75 , 7 + 75 , 7 @ @ <nl> + int k = entityplayer . func _ 184591 _ cq ( ) = = EnumHandSide . RIGHT ? 1 : - 1 ; <nl> + ItemStack itemstack = entityplayer . func _ 184614 _ ca ( ) ; <nl> + <nl> + - if ( itemstack . func _ 77973 _ b ( ) ! = Items . field _ 151112 _ aM ) <nl> + + if ( ! ( itemstack . func _ 77973 _ b ( ) instanceof net . minecraft . item . ItemFishingRod ) ) <nl> + { <nl> + k = - k ; <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch b / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch <nl> index a6b56d4 . . 1a66d57 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch <nl> @ @ - 1 , 5 + 1 , 16 @ @ <nl> - - - . . / src - base / minecraft / net / minecraft / entity / projectile / EntityFishHook . java <nl> + + + . . / src - work / minecraft / net / minecraft / entity / projectile / EntityFishHook . java <nl> + @ @ - 269 , 8 + 269 , 8 @ @ <nl> + { <nl> + ItemStack itemstack = this . field _ 146042 _ b . func _ 184614 _ ca ( ) ; <nl> + ItemStack itemstack1 = this . field _ 146042 _ b . func _ 184592 _ cb ( ) ; <nl> + - boolean flag = itemstack . func _ 77973 _ b ( ) = = Items . field _ 151112 _ aM ; <nl> + - boolean flag1 = itemstack1 . func _ 77973 _ b ( ) = = Items . field _ 151112 _ aM ; <nl> + + boolean flag = itemstack . func _ 77973 _ b ( ) instanceof net . minecraft . item . ItemFishingRod ; <nl> + + boolean flag1 = itemstack1 . func _ 77973 _ b ( ) instanceof net . minecraft . item . ItemFishingRod ; <nl> + <nl> + if ( ! this . field _ 146042 _ b . field _ 70128 _ L & & this . field _ 146042 _ b . func _ 70089 _ S ( ) & & ( flag | | flag1 ) & & this . func _ 70068 _ e ( this . field _ 146042 _ b ) < = 1024 . 0D ) <nl> + { <nl> @ @ - 506 , 6 + 506 , 7 @ @ <nl> { <nl> int i = 0 ;
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / item / ItemArrow . java . patch b / patches / minecraft / net / minecraft / item / ItemArrow . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 01363b4 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / item / ItemArrow . java . patch <nl> @ @ - 0 , 0 + 1 , 13 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / item / ItemArrow . java <nl> + + + + . . / src - work / minecraft / net / minecraft / item / ItemArrow . java <nl> + @ @ - 19 , 4 + 19 , 10 @ @ <nl> + entitytippedarrow . func _ 184555 _ a ( p _ 185052 _ 2 _ ) ; <nl> + return entitytippedarrow ; <nl> + } <nl> + + <nl> + + public boolean isInfinite ( ItemStack stack , ItemStack bow , net . minecraft . entity . player . EntityPlayer player ) <nl> + + { <nl> + + int enchant = net . minecraft . enchantment . EnchantmentHelper . func _ 77506 _ a ( net . minecraft . init . Enchantments . field _ 185312 _ x , bow ) ; <nl> + + return enchant < = 0 ? false : this . getClass ( ) = = ItemArrow . class ; <nl> + + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / item / ItemBow . java . patch b / patches / minecraft / net / minecraft / item / ItemBow . java . patch <nl> index ffd7dfd . . eef4d43 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / ItemBow . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / ItemBow . java . patch <nl> @ @ - 21 , 7 + 21 , 7 @ @ <nl> if ( ( double ) f > = 0 . 1D ) <nl> { <nl> - boolean flag1 = flag & & itemstack . func _ 77973 _ b ( ) = = Items . field _ 151032 _ g ; <nl> - + boolean flag1 = flag & & itemstack . func _ 77973 _ b ( ) instanceof ItemArrow ; / / Forge : Fix consuming custom arrows . <nl> + + boolean flag1 = entityplayer . field _ 71075 _ bZ . field _ 75098 _ d | | ( itemstack . func _ 77973 _ b ( ) instanceof ItemArrow ? ( ( ItemArrow ) itemstack . func _ 77973 _ b ( ) ) . isInfinite ( itemstack , p _ 77615 _ 1 _ , entityplayer ) : false ) ; <nl> <nl> if ( ! p _ 77615 _ 2 _ . field _ 72995 _ K ) <nl> {

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / entity / RenderFish . java . patch b / patches / minecraft / net / minecraft / client / renderer / entity / RenderFish . java . patch 
 new file mode 100644 
 index 0000000 . . 7ab7bcb 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / client / renderer / entity / RenderFish . java . patch 
 @ @ - 0 , 0 + 1 , 11 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / client / renderer / entity / RenderFish . java 
 + + + + . . / src - work / minecraft / net / minecraft / client / renderer / entity / RenderFish . java 
 + @ @ - 75 , 7 + 75 , 7 @ @ 
 + int k = entityplayer . func _ 184591 _ cq ( ) = = EnumHandSide . RIGHT ? 1 : - 1 ; 
 + ItemStack itemstack = entityplayer . func _ 184614 _ ca ( ) ; 
 + 
 + - if ( itemstack . func _ 77973 _ b ( ) ! = Items . field _ 151112 _ aM ) 
 + + if ( ! ( itemstack . func _ 77973 _ b ( ) instanceof net . minecraft . item . ItemFishingRod ) ) 
 + { 
 + k = - k ; 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch b / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch 
 index a6b56d4 . . 1a66d57 100644 
 - - - a / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / projectile / EntityFishHook . java . patch 
 @ @ - 1 , 5 + 1 , 16 @ @ 
 - - - . . / src - base / minecraft / net / minecraft / entity / projectile / EntityFishHook . java 
 + + + . . / src - work / minecraft / net / minecraft / entity / projectile / EntityFishHook . java 
 + @ @ - 269 , 8 + 269 , 8 @ @ 
 + { 
 + ItemStack itemstack = this . field _ 146042 _ b . func _ 184614 _ ca ( ) ; 
 + ItemStack itemstack1 = this . field _ 146042 _ b . func _ 184592 _ cb ( ) ; 
 + - boolean flag = itemstack . func _ 77973 _ b ( ) = = Items . field _ 151112 _ aM ; 
 + - boolean flag1 = itemstack1 . func _ 77973 _ b ( ) = = Items . field _ 151112 _ aM ; 
 + + boolean flag = itemstack . func _ 77973 _ b ( ) instanceof net . minecraft . item . ItemFishingRod ; 
 + + boolean flag1 = itemstack1 . func _ 77973 _ b ( ) instanceof net . minecraft . item . ItemFishingRod ; 
 + 
 + if ( ! this . field _ 146042 _ b . field _ 70128 _ L & & this . field _ 146042 _ b . func _ 70089 _ S ( ) & & ( flag | | flag1 ) & & this . func _ 70068 _ e ( this . field _ 146042 _ b ) < = 1024 . 0D ) 
 + { 
 @ @ - 506 , 6 + 506 , 7 @ @ 
 { 
 int i = 0 ;

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / item / ItemArrow . java . patch b / patches / minecraft / net / minecraft / item / ItemArrow . java . patch 
 new file mode 100644 
 index 0000000 . . 01363b4 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / item / ItemArrow . java . patch 
 @ @ - 0 , 0 + 1 , 13 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / item / ItemArrow . java 
 + + + + . . / src - work / minecraft / net / minecraft / item / ItemArrow . java 
 + @ @ - 19 , 4 + 19 , 10 @ @ 
 + entitytippedarrow . func _ 184555 _ a ( p _ 185052 _ 2 _ ) ; 
 + return entitytippedarrow ; 
 + } 
 + + 
 + + public boolean isInfinite ( ItemStack stack , ItemStack bow , net . minecraft . entity . player . EntityPlayer player ) 
 + + { 
 + + int enchant = net . minecraft . enchantment . EnchantmentHelper . func _ 77506 _ a ( net . minecraft . init . Enchantments . field _ 185312 _ x , bow ) ; 
 + + return enchant < = 0 ? false : this . getClass ( ) = = ItemArrow . class ; 
 + + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / item / ItemBow . java . patch b / patches / minecraft / net / minecraft / item / ItemBow . java . patch 
 index ffd7dfd . . eef4d43 100644 
 - - - a / patches / minecraft / net / minecraft / item / ItemBow . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / ItemBow . java . patch 
 @ @ - 21 , 7 + 21 , 7 @ @ 
 if ( ( double ) f > = 0 . 1D ) 
 { 
 - boolean flag1 = flag & & itemstack . func _ 77973 _ b ( ) = = Items . field _ 151032 _ g ; 
 - + boolean flag1 = flag & & itemstack . func _ 77973 _ b ( ) instanceof ItemArrow ; / / Forge : Fix consuming custom arrows . 
 + + boolean flag1 = entityplayer . field _ 71075 _ bZ . field _ 75098 _ d | | ( itemstack . func _ 77973 _ b ( ) instanceof ItemArrow ? ( ( ItemArrow ) itemstack . func _ 77973 _ b ( ) ) . isInfinite ( itemstack , p _ 77615 _ 1 _ , entityplayer ) : false ) ; 
 
 if ( ! p _ 77615 _ 2 _ . field _ 72995 _ K ) 
 {
