BLEU SCORE: 0.027611988917697356

TEST MSG: Remove unnecessary maxStackSize restrictions on brewing potions .
GENERATED MSG: Fixed NPE when calling canBrew

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / brewing / AbstractBrewingRecipe . java b / src / main / java / net / minecraftforge / common / brewing / AbstractBrewingRecipe . java <nl> index 2a96a27 . . eaab7ac 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / brewing / AbstractBrewingRecipe . java <nl> + + + b / src / main / java / net / minecraftforge / common / brewing / AbstractBrewingRecipe . java <nl> @ @ - 36 , 11 + 36 , 6 @ @ public abstract class AbstractBrewingRecipe < T > implements IBrewingRecipe <nl> this . input = input ; <nl> this . ingredient = ingredient ; <nl> this . output = output ; <nl> - <nl> - if ( this . getInput ( ) . getMaxStackSize ( ) ! = 1 ) <nl> - { <nl> - throw new IllegalArgumentException ( " Inputs must have a max size of 1 just like water bottles . Brewing Stands override the input with the output when the brewing is done , items that stack would end up getting lost . " ) ; <nl> - } <nl> } <nl> <nl> @ Override <nl> diff - - git a / src / main / java / net / minecraftforge / common / brewing / BrewingRecipeRegistry . java b / src / main / java / net / minecraftforge / common / brewing / BrewingRecipeRegistry . java <nl> index d855607 . . ccce0d7 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / brewing / BrewingRecipeRegistry . java <nl> + + + b / src / main / java / net / minecraftforge / common / brewing / BrewingRecipeRegistry . java <nl> @ @ - 90 , 7 + 90 , 7 @ @ public class BrewingRecipeRegistry { <nl> @ Nonnull <nl> public static ItemStack getOutput ( @ Nonnull ItemStack input , @ Nonnull ItemStack ingredient ) <nl> { <nl> - if ( input . isEmpty ( ) | | input . getMaxStackSize ( ) ! = 1 | | input . getCount ( ) ! = 1 ) return ItemStack . EMPTY ; <nl> + if ( input . isEmpty ( ) | | input . getCount ( ) ! = 1 ) return ItemStack . EMPTY ; <nl> if ( ingredient . isEmpty ( ) ) return ItemStack . EMPTY ; <nl> <nl> for ( IBrewingRecipe recipe : recipes ) <nl> @ @ - 172 , 7 + 172 , 7 @ @ public class BrewingRecipeRegistry { <nl> * / <nl> public static boolean isValidInput ( @ Nonnull ItemStack stack ) <nl> { <nl> - if ( stack . getMaxStackSize ( ) ! = 1 | | stack . getCount ( ) ! = 1 ) return false ; <nl> + if ( stack . getCount ( ) ! = 1 ) return false ; <nl> <nl> for ( IBrewingRecipe recipe : recipes ) <nl> {
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / brewing / VanillaBrewingRecipe . java b / src / main / java / net / minecraftforge / common / brewing / VanillaBrewingRecipe . java <nl> index cf94bc1 . . ead5c93 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / brewing / VanillaBrewingRecipe . java <nl> + + + b / src / main / java / net / minecraftforge / common / brewing / VanillaBrewingRecipe . java <nl> @ @ - 40 , 7 + 40 , 7 @ @ public class VanillaBrewingRecipe implements IBrewingRecipe { <nl> @ Override <nl> public ItemStack getOutput ( ItemStack input , ItemStack ingredient ) <nl> { <nl> - if ( ingredient ! = null & & input ! = null & & input . getItem ( ) instanceof ItemPotion ) <nl> + if ( ingredient ! = null & & input ! = null & & input . getItem ( ) instanceof ItemPotion & & isIngredient ( ingredient ) ) <nl> { <nl> int inputMeta = input . getMetadata ( ) ; <nl> int outputMeta = PotionHelper . applyIngredient ( inputMeta , ingredient . getItem ( ) . getPotionEffect ( ingredient ) ) ; <nl> @ @ - 72 , 4 + 72 , 4 @ @ public class VanillaBrewingRecipe implements IBrewingRecipe { <nl> <nl> return null ; <nl> } <nl> - } <nl> \ No newline at end of file <nl> + }

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / brewing / AbstractBrewingRecipe . java b / src / main / java / net / minecraftforge / common / brewing / AbstractBrewingRecipe . java 
 index 2a96a27 . . eaab7ac 100644 
 - - - a / src / main / java / net / minecraftforge / common / brewing / AbstractBrewingRecipe . java 
 + + + b / src / main / java / net / minecraftforge / common / brewing / AbstractBrewingRecipe . java 
 @ @ - 36 , 11 + 36 , 6 @ @ public abstract class AbstractBrewingRecipe < T > implements IBrewingRecipe 
 this . input = input ; 
 this . ingredient = ingredient ; 
 this . output = output ; 
 - 
 - if ( this . getInput ( ) . getMaxStackSize ( ) ! = 1 ) 
 - { 
 - throw new IllegalArgumentException ( " Inputs must have a max size of 1 just like water bottles . Brewing Stands override the input with the output when the brewing is done , items that stack would end up getting lost . " ) ; 
 - } 
 } 
 
 @ Override 
 diff - - git a / src / main / java / net / minecraftforge / common / brewing / BrewingRecipeRegistry . java b / src / main / java / net / minecraftforge / common / brewing / BrewingRecipeRegistry . java 
 index d855607 . . ccce0d7 100644 
 - - - a / src / main / java / net / minecraftforge / common / brewing / BrewingRecipeRegistry . java 
 + + + b / src / main / java / net / minecraftforge / common / brewing / BrewingRecipeRegistry . java 
 @ @ - 90 , 7 + 90 , 7 @ @ public class BrewingRecipeRegistry { 
 @ Nonnull 
 public static ItemStack getOutput ( @ Nonnull ItemStack input , @ Nonnull ItemStack ingredient ) 
 { 
 - if ( input . isEmpty ( ) | | input . getMaxStackSize ( ) ! = 1 | | input . getCount ( ) ! = 1 ) return ItemStack . EMPTY ; 
 + if ( input . isEmpty ( ) | | input . getCount ( ) ! = 1 ) return ItemStack . EMPTY ; 
 if ( ingredient . isEmpty ( ) ) return ItemStack . EMPTY ; 
 
 for ( IBrewingRecipe recipe : recipes ) 
 @ @ - 172 , 7 + 172 , 7 @ @ public class BrewingRecipeRegistry { 
 * / 
 public static boolean isValidInput ( @ Nonnull ItemStack stack ) 
 { 
 - if ( stack . getMaxStackSize ( ) ! = 1 | | stack . getCount ( ) ! = 1 ) return false ; 
 + if ( stack . getCount ( ) ! = 1 ) return false ; 
 
 for ( IBrewingRecipe recipe : recipes ) 
 {

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / brewing / VanillaBrewingRecipe . java b / src / main / java / net / minecraftforge / common / brewing / VanillaBrewingRecipe . java 
 index cf94bc1 . . ead5c93 100644 
 - - - a / src / main / java / net / minecraftforge / common / brewing / VanillaBrewingRecipe . java 
 + + + b / src / main / java / net / minecraftforge / common / brewing / VanillaBrewingRecipe . java 
 @ @ - 40 , 7 + 40 , 7 @ @ public class VanillaBrewingRecipe implements IBrewingRecipe { 
 @ Override 
 public ItemStack getOutput ( ItemStack input , ItemStack ingredient ) 
 { 
 - if ( ingredient ! = null & & input ! = null & & input . getItem ( ) instanceof ItemPotion ) 
 + if ( ingredient ! = null & & input ! = null & & input . getItem ( ) instanceof ItemPotion & & isIngredient ( ingredient ) ) 
 { 
 int inputMeta = input . getMetadata ( ) ; 
 int outputMeta = PotionHelper . applyIngredient ( inputMeta , ingredient . getItem ( ) . getPotionEffect ( ingredient ) ) ; 
 @ @ - 72 , 4 + 72 , 4 @ @ public class VanillaBrewingRecipe implements IBrewingRecipe { 
 
 return null ; 
 } 
 - } 
 \ No newline at end of file 
 + }
