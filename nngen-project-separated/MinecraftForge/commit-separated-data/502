BLEU SCORE: 0.15619699684601276

TEST MSG: Make getRGBDurabilityForDisplay use getDurailityForDisplay by default . Closes # 3670
GENERATED MSG: Fixed damage bar color . Closes # 3389

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / item / Item . java . patch b / patches / minecraft / net / minecraft / item / Item . java . patch <nl> index 8134478 . . 8825417 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / Item . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / Item . java . patch <nl> @ @ - 454 , 7 + 454 , 7 @ @ <nl> + * Queries the percentage of the ' Durability ' bar that should be drawn . <nl> + * <nl> + * @ param stack The current ItemStack <nl> - + * @ return 1 . 0 for 100 % 0 for 0 % <nl> + + * @ return 0 . 0 for 100 % ( no damage / full bar ) , 1 . 0 for 0 % ( fully damaged / empty bar ) <nl> + * / <nl> + public double getDurabilityForDisplay ( ItemStack stack ) <nl> + { <nl> @ @ - 463 , 14 + 463 , 14 @ @ <nl> + <nl> + / * * <nl> + * Returns the packed int RGB value used to render the durability bar in the GUI . <nl> - + * Defaults to a value based on the hue scaled as the damage decreases , but can be overriden . <nl> + + * Defaults to a value based on the hue scaled based on { @ link # getDurabilityForDisplay } , but can be overriden . <nl> + * <nl> + * @ param stack Stack to get durability from <nl> + * @ return A packed RGB value for the durability colour ( 0x00RRGGBB ) <nl> + * / <nl> + public int getRGBDurabilityForDisplay ( ItemStack stack ) <nl> + { <nl> - + return MathHelper . func _ 181758 _ c ( Math . max ( 0 . 0F , ( float ) ( stack . func _ 77958 _ k ( ) - stack . func _ 77952 _ i ( ) ) / stack . func _ 77958 _ k ( ) ) / 3 . 0F , 1 . 0F , 1 . 0F ) ; <nl> + + return MathHelper . func _ 181758 _ c ( Math . max ( 0 . 0F , ( float ) ( 1 . 0F - getDurabilityForDisplay ( stack ) ) ) / 3 . 0F , 1 . 0F , 1 . 0F ) ; <nl> + } <nl> + / * * <nl> + * Return the maxDamage for this ItemStack . Defaults to the maxDamage field in this item ,
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / item / Item . java . patch b / patches / minecraft / net / minecraft / item / Item . java . patch <nl> index 0dc056d . . 3694952 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / Item . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / Item . java . patch <nl> @ @ - 466 , 7 + 466 , 7 @ @ <nl> + * / <nl> + public int getRGBDurabilityForDisplay ( ItemStack stack ) <nl> + { <nl> - + return MathHelper . func _ 181758 _ c ( Math . max ( 0 . 0F , ( stack . func _ 77958 _ k ( ) - stack . func _ 77952 _ i ( ) ) / stack . func _ 77958 _ k ( ) ) / 3 . 0F , 1 . 0F , 1 . 0F ) ; <nl> + + return MathHelper . func _ 181758 _ c ( Math . max ( 0 . 0F , ( float ) ( stack . func _ 77958 _ k ( ) - stack . func _ 77952 _ i ( ) ) / stack . func _ 77958 _ k ( ) ) / 3 . 0F , 1 . 0F , 1 . 0F ) ; <nl> + } <nl> + / * * <nl> + * Return the maxDamage for this ItemStack . Defaults to the maxDamage field in this item ,

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / item / Item . java . patch b / patches / minecraft / net / minecraft / item / Item . java . patch 
 index 8134478 . . 8825417 100644 
 - - - a / patches / minecraft / net / minecraft / item / Item . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / Item . java . patch 
 @ @ - 454 , 7 + 454 , 7 @ @ 
 + * Queries the percentage of the ' Durability ' bar that should be drawn . 
 + * 
 + * @ param stack The current ItemStack 
 - + * @ return 1 . 0 for 100 % 0 for 0 % 
 + + * @ return 0 . 0 for 100 % ( no damage / full bar ) , 1 . 0 for 0 % ( fully damaged / empty bar ) 
 + * / 
 + public double getDurabilityForDisplay ( ItemStack stack ) 
 + { 
 @ @ - 463 , 14 + 463 , 14 @ @ 
 + 
 + / * * 
 + * Returns the packed int RGB value used to render the durability bar in the GUI . 
 - + * Defaults to a value based on the hue scaled as the damage decreases , but can be overriden . 
 + + * Defaults to a value based on the hue scaled based on { @ link # getDurabilityForDisplay } , but can be overriden . 
 + * 
 + * @ param stack Stack to get durability from 
 + * @ return A packed RGB value for the durability colour ( 0x00RRGGBB ) 
 + * / 
 + public int getRGBDurabilityForDisplay ( ItemStack stack ) 
 + { 
 - + return MathHelper . func _ 181758 _ c ( Math . max ( 0 . 0F , ( float ) ( stack . func _ 77958 _ k ( ) - stack . func _ 77952 _ i ( ) ) / stack . func _ 77958 _ k ( ) ) / 3 . 0F , 1 . 0F , 1 . 0F ) ; 
 + + return MathHelper . func _ 181758 _ c ( Math . max ( 0 . 0F , ( float ) ( 1 . 0F - getDurabilityForDisplay ( stack ) ) ) / 3 . 0F , 1 . 0F , 1 . 0F ) ; 
 + } 
 + / * * 
 + * Return the maxDamage for this ItemStack . Defaults to the maxDamage field in this item ,

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / item / Item . java . patch b / patches / minecraft / net / minecraft / item / Item . java . patch 
 index 0dc056d . . 3694952 100644 
 - - - a / patches / minecraft / net / minecraft / item / Item . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / Item . java . patch 
 @ @ - 466 , 7 + 466 , 7 @ @ 
 + * / 
 + public int getRGBDurabilityForDisplay ( ItemStack stack ) 
 + { 
 - + return MathHelper . func _ 181758 _ c ( Math . max ( 0 . 0F , ( stack . func _ 77958 _ k ( ) - stack . func _ 77952 _ i ( ) ) / stack . func _ 77958 _ k ( ) ) / 3 . 0F , 1 . 0F , 1 . 0F ) ; 
 + + return MathHelper . func _ 181758 _ c ( Math . max ( 0 . 0F , ( float ) ( stack . func _ 77958 _ k ( ) - stack . func _ 77952 _ i ( ) ) / stack . func _ 77958 _ k ( ) ) / 3 . 0F , 1 . 0F , 1 . 0F ) ; 
 + } 
 + / * * 
 + * Return the maxDamage for this ItemStack . Defaults to the maxDamage field in this item ,
