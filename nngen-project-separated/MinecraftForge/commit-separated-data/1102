BLEU SCORE: 0.028465126651392333

TEST MSG: Fix scala mods , Closes # 621
GENERATED MSG: Fixed getEffectiveSide ( ) for Netty Server threads

TEST DIFF (one line): diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java b / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java <nl> index 844d21b . . 885fd85 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java <nl> @ @ - 19 , 7 + 19 , 8 @ @ import net . minecraftforge . fml . common . ModContainer ; <nl> <nl> public interface ITypeDiscoverer <nl> { <nl> - public static Pattern classFile = Pattern . compile ( " [ ^ \ \ s ] + \ \ . class $ " ) ; <nl> + / / main class part , followed by an optional $ and an " inner class " part . $ cannot be last , otherwise scala breaks <nl> + public static Pattern classFile = Pattern . compile ( " [ ^ \ \ s \ \ $ ] + ( \ \ $ [ ^ \ \ s ] + ) ? \ \ . class $ " ) ; <nl> <nl> public List < ModContainer > discover ( ModCandidate candidate , ASMDataTable table ) ; <nl> }
NEAREST DIFF (one line): diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> index 521f2f1 . . 391ecf9 100644 <nl> - - - a / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> + + + b / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java <nl> @ @ - 160 , 7 + 160 , 7 @ @ public class FMLCommonHandler <nl> public Side getEffectiveSide ( ) <nl> { <nl> Thread thr = Thread . currentThread ( ) ; <nl> - if ( ( thr . getName ( ) . equals ( " Server thread " ) ) ) <nl> + if ( thr . getName ( ) . equals ( " Server thread " ) | | thr . getName ( ) . startsWith ( " Netty Server IO " ) ) <nl> { <nl> return Side . SERVER ; <nl> }

TEST DIFF:
diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java b / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java 
 index 844d21b . . 885fd85 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / discovery / ITypeDiscoverer . java 
 @ @ - 19 , 7 + 19 , 8 @ @ import net . minecraftforge . fml . common . ModContainer ; 
 
 public interface ITypeDiscoverer 
 { 
 - public static Pattern classFile = Pattern . compile ( " [ ^ \ \ s ] + \ \ . class $ " ) ; 
 + / / main class part , followed by an optional $ and an " inner class " part . $ cannot be last , otherwise scala breaks 
 + public static Pattern classFile = Pattern . compile ( " [ ^ \ \ s \ \ $ ] + ( \ \ $ [ ^ \ \ s ] + ) ? \ \ . class $ " ) ; 
 
 public List < ModContainer > discover ( ModCandidate candidate , ASMDataTable table ) ; 
 }

NEAREST DIFF:
diff - - git a / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java b / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 index 521f2f1 . . 391ecf9 100644 
 - - - a / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 + + + b / fml / src / main / java / net / minecraftforge / fml / common / FMLCommonHandler . java 
 @ @ - 160 , 7 + 160 , 7 @ @ public class FMLCommonHandler 
 public Side getEffectiveSide ( ) 
 { 
 Thread thr = Thread . currentThread ( ) ; 
 - if ( ( thr . getName ( ) . equals ( " Server thread " ) ) ) 
 + if ( thr . getName ( ) . equals ( " Server thread " ) | | thr . getName ( ) . startsWith ( " Netty Server IO " ) ) 
 { 
 return Side . SERVER ; 
 }
