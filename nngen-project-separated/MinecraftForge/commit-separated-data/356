BLEU SCORE: 0.0367352656298894

TEST MSG: Fix chunk gen mobs not firing the CheckSpawn event . Closes # 4394
GENERATED MSG: Added maxCanSpawnInChunk event to allow overriding of creature chunk spawn cap

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch b / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch <nl> index 0f281cb . . 1ed609c 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch <nl> @ @ - 70 , 3 + 70 , 11 @ @ <nl> } <nl> catch ( Exception exception ) <nl> { <nl> + @ @ - 281 , 6 + 286 , 7 @ @ <nl> + continue ; <nl> + } <nl> + <nl> + + if ( net . minecraftforge . event . ForgeEventFactory . canEntitySpawn ( entityliving , p _ 77191 _ 0 _ , j + 0 . 5f , ( float ) blockpos . func _ 177956 _ o ( ) , k + 0 . 5f , false ) = = net . minecraftforge . fml . common . eventhandler . Event . Result . DENY ) continue ; <nl> + entityliving . func _ 70012 _ b ( ( double ) ( ( float ) j + 0 . 5F ) , ( double ) blockpos . func _ 177956 _ o ( ) , ( double ) ( ( float ) k + 0 . 5F ) , p _ 77191 _ 6 _ . nextFloat ( ) * 360 . 0F , 0 . 0F ) ; <nl> + p _ 77191 _ 0 _ . func _ 72838 _ d ( entityliving ) ; <nl> + ientitylivingdata = entityliving . func _ 180482 _ a ( p _ 77191 _ 0 _ . func _ 175649 _ E ( new BlockPos ( entityliving ) ) , ientitylivingdata ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / CheckSpawnTest . java b / src / test / java / net / minecraftforge / debug / CheckSpawnTest . java <nl> new file mode 100644 <nl> index 0000000 . . a1ca982 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / debug / CheckSpawnTest . java <nl> @ @ - 0 , 0 + 1 , 31 @ @ <nl> + package net . minecraftforge . debug ; <nl> + <nl> + import net . minecraftforge . common . MinecraftForge ; <nl> + import net . minecraftforge . event . entity . living . LivingSpawnEvent . CheckSpawn ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . Mod . EventHandler ; <nl> + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> + import net . minecraftforge . fml . common . eventhandler . Event . Result ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + <nl> + @ Mod ( modid = CheckSpawnTest . MODID , name = " CheckSpawnTest " , version = " 1 . 0 " ) <nl> + public class CheckSpawnTest <nl> + { <nl> + public static final String MODID = " checkspawntest " ; <nl> + public static final boolean ENABLED = false ; <nl> + <nl> + @ EventHandler <nl> + public void onPreInit ( FMLPreInitializationEvent event ) <nl> + { 	 <nl> + 	 if ( ENABLED ) <nl> + 	 { 	 	 <nl> + 	 	 MinecraftForge . EVENT _ BUS . register ( this ) ; <nl> + 	 } <nl> + } <nl> + <nl> + @ SubscribeEvent <nl> + public void canMobSpawn ( CheckSpawn event ) <nl> + { 	 <nl> + 	 event . setResult ( Result . DENY ) ; <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / common / net / minecraftforge / event / ForgeEventFactory . java b / common / net / minecraftforge / event / ForgeEventFactory . java <nl> index 48f7742 . . e78ac6b 100644 <nl> - - - a / common / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / common / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 11 , 6 + 11 , 7 @ @ import net . minecraft . world . World ; <nl> import net . minecraft . world . WorldServer ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . event . Event . Result ; <nl> + import net . minecraftforge . event . entity . living . LivingMaxCanSpawnEvent ; <nl> import net . minecraftforge . event . entity . living . LivingSpawnEvent ; <nl> import net . minecraftforge . event . entity . player . PlayerDestroyItemEvent ; <nl> import net . minecraftforge . event . entity . player . PlayerEvent ; <nl> @ @ - 67 , 4 + 68 , 11 @ @ public class ForgeEventFactory <nl> } <nl> return event . list ; <nl> } <nl> + <nl> + public static int getMaxSpawnedInChunk ( EntityLiving entity ) <nl> + { <nl> + LivingMaxCanSpawnEvent maxCanSpawnEvent = new LivingMaxCanSpawnEvent ( entity ) ; <nl> + MinecraftForge . EVENT _ BUS . post ( maxCanSpawnEvent ) ; <nl> + return maxCanSpawnEvent . getResult ( ) = = Result . ALLOW ? maxCanSpawnEvent . maxSpawnInChunk : entity . getMaxSpawnedInChunk ( ) ; <nl> + } <nl> } <nl> diff - - git a / common / net / minecraftforge / event / entity / living / LivingMaxCanSpawnEvent . java b / common / net / minecraftforge / event / entity / living / LivingMaxCanSpawnEvent . java <nl> new file mode 100644 <nl> index 0000000 . . d419869 <nl> - - - / dev / null <nl> + + + b / common / net / minecraftforge / event / entity / living / LivingMaxCanSpawnEvent . java <nl> @ @ - 0 , 0 + 1 , 23 @ @ <nl> + package net . minecraftforge . event . entity . living ; <nl> + <nl> + import net . minecraft . entity . EntityLiving ; <nl> + import net . minecraftforge . event . Event . HasResult ; <nl> + <nl> + @ HasResult <nl> + public class LivingMaxCanSpawnEvent extends LivingEvent <nl> + { <nl> + / * * <nl> + * This event is fired when the spawning system tries to determine the <nl> + * maximum amount of the entity can spawn in a chunk . <nl> + * <nl> + * If you set the result to ' ALLOW ' , it means that you want to return <nl> + * the value of maxSpawnInChunk as the maximum amount allowed in the <nl> + * chunk . <nl> + * / <nl> + public int maxSpawnInChunk ; <nl> + <nl> + public LivingMaxCanSpawnEvent ( EntityLiving entity ) <nl> + { <nl> + super ( entity ) ; <nl> + } <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / world / SpawnerAnimals . java . patch b / patches / minecraft / net / minecraft / world / SpawnerAnimals . java . patch <nl> index aab5f13 . . 1d6b4ae 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / SpawnerAnimals . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / SpawnerAnimals . java . patch <nl> @ @ - 33 , 7 + 33 , 7 @ @ <nl> label110 : <nl> <nl> while ( iterator . hasNext ( ) ) <nl> - @ @ - 169 , 7 + 178 , 8 @ @ <nl> + @ @ - 169 , 13 + 178 , 14 @ @ <nl> <nl> entityliving . setLocationAndAngles ( ( double ) f , ( double ) f1 , ( double ) f2 , par0WorldServer . rand . nextFloat ( ) * 360 . 0F , 0 . 0F ) ; <nl> <nl> @ @ - 43 , 6 + 43 , 13 @ @ <nl> { <nl> + + j2 ; <nl> par0WorldServer . spawnEntityInWorld ( entityliving ) ; <nl> + creatureSpecificInit ( entityliving , par0WorldServer , f , f1 , f2 ) ; <nl> + <nl> + - if ( j2 > = entityliving . getMaxSpawnedInChunk ( ) ) <nl> + + if ( j2 > = ForgeEventFactory . getMaxSpawnedInChunk ( entityliving ) ) <nl> + { <nl> + continue label110 ; <nl> + } <nl> @ @ - 221 , 7 + 231 , 8 @ @ <nl> else <nl> {

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch b / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch 
 index 0f281cb . . 1ed609c 100644 
 - - - a / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / WorldEntitySpawner . java . patch 
 @ @ - 70 , 3 + 70 , 11 @ @ 
 } 
 catch ( Exception exception ) 
 { 
 + @ @ - 281 , 6 + 286 , 7 @ @ 
 + continue ; 
 + } 
 + 
 + + if ( net . minecraftforge . event . ForgeEventFactory . canEntitySpawn ( entityliving , p _ 77191 _ 0 _ , j + 0 . 5f , ( float ) blockpos . func _ 177956 _ o ( ) , k + 0 . 5f , false ) = = net . minecraftforge . fml . common . eventhandler . Event . Result . DENY ) continue ; 
 + entityliving . func _ 70012 _ b ( ( double ) ( ( float ) j + 0 . 5F ) , ( double ) blockpos . func _ 177956 _ o ( ) , ( double ) ( ( float ) k + 0 . 5F ) , p _ 77191 _ 6 _ . nextFloat ( ) * 360 . 0F , 0 . 0F ) ; 
 + p _ 77191 _ 0 _ . func _ 72838 _ d ( entityliving ) ; 
 + ientitylivingdata = entityliving . func _ 180482 _ a ( p _ 77191 _ 0 _ . func _ 175649 _ E ( new BlockPos ( entityliving ) ) , ientitylivingdata ) ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / CheckSpawnTest . java b / src / test / java / net / minecraftforge / debug / CheckSpawnTest . java 
 new file mode 100644 
 index 0000000 . . a1ca982 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / debug / CheckSpawnTest . java 
 @ @ - 0 , 0 + 1 , 31 @ @ 
 + package net . minecraftforge . debug ; 
 + 
 + import net . minecraftforge . common . MinecraftForge ; 
 + import net . minecraftforge . event . entity . living . LivingSpawnEvent . CheckSpawn ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . Mod . EventHandler ; 
 + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 + import net . minecraftforge . fml . common . eventhandler . Event . Result ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + 
 + @ Mod ( modid = CheckSpawnTest . MODID , name = " CheckSpawnTest " , version = " 1 . 0 " ) 
 + public class CheckSpawnTest 
 + { 
 + public static final String MODID = " checkspawntest " ; 
 + public static final boolean ENABLED = false ; 
 + 
 + @ EventHandler 
 + public void onPreInit ( FMLPreInitializationEvent event ) 
 + { 	 
 + 	 if ( ENABLED ) 
 + 	 { 	 	 
 + 	 	 MinecraftForge . EVENT _ BUS . register ( this ) ; 
 + 	 } 
 + } 
 + 
 + @ SubscribeEvent 
 + public void canMobSpawn ( CheckSpawn event ) 
 + { 	 
 + 	 event . setResult ( Result . DENY ) ; 
 + } 
 + }

NEAREST DIFF:
diff - - git a / common / net / minecraftforge / event / ForgeEventFactory . java b / common / net / minecraftforge / event / ForgeEventFactory . java 
 index 48f7742 . . e78ac6b 100644 
 - - - a / common / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / common / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 11 , 6 + 11 , 7 @ @ import net . minecraft . world . World ; 
 import net . minecraft . world . WorldServer ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . event . Event . Result ; 
 + import net . minecraftforge . event . entity . living . LivingMaxCanSpawnEvent ; 
 import net . minecraftforge . event . entity . living . LivingSpawnEvent ; 
 import net . minecraftforge . event . entity . player . PlayerDestroyItemEvent ; 
 import net . minecraftforge . event . entity . player . PlayerEvent ; 
 @ @ - 67 , 4 + 68 , 11 @ @ public class ForgeEventFactory 
 } 
 return event . list ; 
 } 
 + 
 + public static int getMaxSpawnedInChunk ( EntityLiving entity ) 
 + { 
 + LivingMaxCanSpawnEvent maxCanSpawnEvent = new LivingMaxCanSpawnEvent ( entity ) ; 
 + MinecraftForge . EVENT _ BUS . post ( maxCanSpawnEvent ) ; 
 + return maxCanSpawnEvent . getResult ( ) = = Result . ALLOW ? maxCanSpawnEvent . maxSpawnInChunk : entity . getMaxSpawnedInChunk ( ) ; 
 + } 
 } 
 diff - - git a / common / net / minecraftforge / event / entity / living / LivingMaxCanSpawnEvent . java b / common / net / minecraftforge / event / entity / living / LivingMaxCanSpawnEvent . java 
 new file mode 100644 
 index 0000000 . . d419869 
 - - - / dev / null 
 + + + b / common / net / minecraftforge / event / entity / living / LivingMaxCanSpawnEvent . java 
 @ @ - 0 , 0 + 1 , 23 @ @ 
 + package net . minecraftforge . event . entity . living ; 
 + 
 + import net . minecraft . entity . EntityLiving ; 
 + import net . minecraftforge . event . Event . HasResult ; 
 + 
 + @ HasResult 
 + public class LivingMaxCanSpawnEvent extends LivingEvent 
 + { 
 + / * * 
 + * This event is fired when the spawning system tries to determine the 
 + * maximum amount of the entity can spawn in a chunk . 
 + * 
 + * If you set the result to ' ALLOW ' , it means that you want to return 
 + * the value of maxSpawnInChunk as the maximum amount allowed in the 
 + * chunk . 
 + * / 
 + public int maxSpawnInChunk ; 
 + 
 + public LivingMaxCanSpawnEvent ( EntityLiving entity ) 
 + { 
 + super ( entity ) ; 
 + } 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / world / SpawnerAnimals . java . patch b / patches / minecraft / net / minecraft / world / SpawnerAnimals . java . patch 
 index aab5f13 . . 1d6b4ae 100644 
 - - - a / patches / minecraft / net / minecraft / world / SpawnerAnimals . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / SpawnerAnimals . java . patch 
 @ @ - 33 , 7 + 33 , 7 @ @ 
 label110 : 
 
 while ( iterator . hasNext ( ) ) 
 - @ @ - 169 , 7 + 178 , 8 @ @ 
 + @ @ - 169 , 13 + 178 , 14 @ @ 
 
 entityliving . setLocationAndAngles ( ( double ) f , ( double ) f1 , ( double ) f2 , par0WorldServer . rand . nextFloat ( ) * 360 . 0F , 0 . 0F ) ; 
 
 @ @ - 43 , 6 + 43 , 13 @ @ 
 { 
 + + j2 ; 
 par0WorldServer . spawnEntityInWorld ( entityliving ) ; 
 + creatureSpecificInit ( entityliving , par0WorldServer , f , f1 , f2 ) ; 
 + 
 + - if ( j2 > = entityliving . getMaxSpawnedInChunk ( ) ) 
 + + if ( j2 > = ForgeEventFactory . getMaxSpawnedInChunk ( entityliving ) ) 
 + { 
 + continue label110 ; 
 + } 
 @ @ - 221 , 7 + 231 , 8 @ @ 
 else 
 {
