BLEU SCORE: 0.04380815453270746

TEST MSG: Allow block to specify their type for AI pathfinding
GENERATED MSG: Add hook to allow any block to respond to filtered block updates like the Observer block

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> index c485d39 . . 8df9a21 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / Block . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> @ @ - 197 , 7 + 197 , 7 @ @ <nl> public SoundType func _ 185467 _ w ( ) <nl> { <nl> return this . field _ 149762 _ H ; <nl> - @ @ - 908 , 6 + 932 , 1177 @ @ <nl> + @ @ - 908 , 6 + 932 , 1188 @ @ <nl> { <nl> } <nl> <nl> @ @ - 1370 , 12 + 1370 , 23 @ @ <nl> + return false ; <nl> + } <nl> + <nl> + + / * * <nl> + + * Get the { @ code PathNodeType } for this block . Return { @ code null } for vanilla behavior . <nl> + + * <nl> + + * @ return the PathNodeType <nl> + + * / <nl> + + @ Nullable <nl> + + public net . minecraft . pathfinding . PathNodeType getAiPathNodeType ( IBlockState state , IBlockAccess world , BlockPos pos ) <nl> + + { <nl> + + return isBurning ( world , pos ) ? net . minecraft . pathfinding . PathNodeType . DAMAGE _ FIRE : null ; <nl> + + } <nl> + + <nl> + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + <nl> public static void func _ 149671 _ p ( ) <nl> { <nl> func _ 176215 _ a ( 0 , field _ 176230 _ a , ( new BlockAir ( ) ) . func _ 149663 _ c ( " air " ) ) ; <nl> - @ @ - 1201 , 14 + 2396 , 7 @ @ <nl> + @ @ - 1201 , 14 + 2407 , 7 @ @ <nl> } <nl> else <nl> { <nl> diff - - git a / patches / minecraft / net / minecraft / pathfinding / WalkNodeProcessor . java . patch b / patches / minecraft / net / minecraft / pathfinding / WalkNodeProcessor . java . patch <nl> index 8e91a44 . . 7f95fbf 100644 <nl> - - - a / patches / minecraft / net / minecraft / pathfinding / WalkNodeProcessor . java . patch <nl> + + + b / patches / minecraft / net / minecraft / pathfinding / WalkNodeProcessor . java . patch <nl> @ @ - 8 , 11 + 8 , 12 @ @ <nl> } <nl> } <nl> } <nl> - @ @ - 430 , 6 + 431 , 7 @ @ <nl> + @ @ - 430 , 6 + 431 , 8 @ @ <nl> IBlockState iblockstate = p _ 189553 _ 1 _ . func _ 180495 _ p ( blockpos ) ; <nl> Block block = iblockstate . func _ 177230 _ c ( ) ; <nl> Material material = iblockstate . func _ 185904 _ a ( ) ; <nl> - + if ( block . isBurning ( p _ 189553 _ 1 _ , blockpos ) ) return PathNodeType . DAMAGE _ FIRE ; <nl> + + PathNodeType type = block . getAiPathNodeType ( iblockstate , p _ 189553 _ 1 _ , blockpos ) ; <nl> + + if ( type ! = null ) return type ; <nl> return material = = Material . field _ 151579 _ a ? PathNodeType . OPEN : ( block ! = Blocks . field _ 150415 _ aT & & block ! = Blocks . field _ 180400 _ cw & & block ! = Blocks . field _ 150392 _ bi ? ( block = = Blocks . field _ 150480 _ ab ? PathNodeType . DAMAGE _ FIRE : ( block = = Blocks . field _ 150434 _ aF ? PathNodeType . DAMAGE _ CACTUS : ( block instanceof BlockDoor & & material = = Material . field _ 151575 _ d & & ! ( ( Boolean ) iblockstate . func _ 177229 _ b ( BlockDoor . field _ 176519 _ b ) ) . booleanValue ( ) ? PathNodeType . DOOR _ WOOD _ CLOSED : ( block instanceof BlockDoor & & material = = Material . field _ 151573 _ f & & ! ( ( Boolean ) iblockstate . func _ 177229 _ b ( BlockDoor . field _ 176519 _ b ) ) . booleanValue ( ) ? PathNodeType . DOOR _ IRON _ CLOSED : ( block instanceof BlockDoor & & ( ( Boolean ) iblockstate . func _ 177229 _ b ( BlockDoor . field _ 176519 _ b ) ) . booleanValue ( ) ? PathNodeType . DOOR _ OPEN : ( block instanceof BlockRailBase ? PathNodeType . RAIL : ( ! ( block instanceof BlockFence ) & & ! ( block instanceof BlockWall ) & & ( ! ( block instanceof BlockFenceGate ) | | ( ( Boolean ) iblockstate . func _ 177229 _ b ( BlockFenceGate . field _ 176466 _ a ) ) . booleanValue ( ) ) ? ( material = = Material . field _ 151586 _ h ? PathNodeType . WATER : ( material = = Material . field _ 151587 _ i ? PathNodeType . LAVA : ( block . func _ 176205 _ b ( p _ 189553 _ 1 _ , blockpos ) ? PathNodeType . OPEN : PathNodeType . BLOCKED ) ) ) : PathNodeType . FENCE ) ) ) ) ) ) ) : PathNodeType . TRAPDOOR ) ; <nl> } <nl> } <nl> diff - - git a / src / test / java / net / minecraftforge / test / BlockAiNodeTypeTest . java b / src / test / java / net / minecraftforge / test / BlockAiNodeTypeTest . java <nl> new file mode 100644 <nl> index 0000000 . . b265445 <nl> - - - / dev / null <nl> + + + b / src / test / java / net / minecraftforge / test / BlockAiNodeTypeTest . java <nl> @ @ - 0 , 0 + 1 , 44 @ @ <nl> + package net . minecraftforge . test ; <nl> + <nl> + import javax . annotation . Nullable ; <nl> + <nl> + import net . minecraft . block . Block ; <nl> + import net . minecraft . block . material . Material ; <nl> + import net . minecraft . block . state . IBlockState ; <nl> + import net . minecraft . pathfinding . PathNodeType ; <nl> + import net . minecraft . util . math . BlockPos ; <nl> + import net . minecraft . world . IBlockAccess ; <nl> + import net . minecraftforge . event . RegistryEvent ; <nl> + import net . minecraftforge . fml . common . Mod ; <nl> + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> + <nl> + @ Mod ( modid = " ainodetypetest " , name = " AiNodeTypeTest " , version = " 1 . 0 " ) <nl> + @ Mod . EventBusSubscriber <nl> + public class BlockAiNodeTypeTest <nl> + { <nl> + <nl> + private static final Block TEST _ BLOCK = new TestBlock ( ) ; <nl> + <nl> + @ SubscribeEvent <nl> + public static void register ( RegistryEvent . Register < Block > event ) <nl> + { <nl> + event . getRegistry ( ) . register ( TEST _ BLOCK ) ; <nl> + } <nl> + <nl> + private static final class TestBlock extends Block { <nl> + <nl> + TestBlock ( ) { <nl> + super ( Material . ROCK ) ; <nl> + setRegistryName ( " testblock " ) ; <nl> + } <nl> + <nl> + @ Nullable <nl> + @ Override <nl> + public PathNodeType getAiPathNodeType ( IBlockState state , IBlockAccess world , BlockPos pos ) <nl> + { <nl> + return PathNodeType . DOOR _ OPEN ; <nl> + } <nl> + } <nl> + <nl> + }
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> index 7c4bbad . . c485d39 100644 <nl> - - - a / patches / minecraft / net / minecraft / block / Block . java . patch <nl> + + + b / patches / minecraft / net / minecraft / block / Block . java . patch <nl> @ @ - 197 , 7 + 197 , 7 @ @ <nl> public SoundType func _ 185467 _ w ( ) <nl> { <nl> return this . field _ 149762 _ H ; <nl> - @ @ - 908 , 6 + 932 , 1166 @ @ <nl> + @ @ - 908 , 6 + 932 , 1177 @ @ <nl> { <nl> } <nl> <nl> @ @ - 1130 , 6 + 1130 , 17 @ @ <nl> + public void onNeighborChange ( IBlockAccess world , BlockPos pos , BlockPos neighbor ) { } <nl> + <nl> + / * * <nl> + + * Called on an Observer block whenever an update for an Observer is received . <nl> + + * <nl> + + * @ param observerState The Observer block ' s state . <nl> + + * @ param world The current world . <nl> + + * @ param observerPos The Observer block ' s position . <nl> + + * @ param changedBlock The updated block . <nl> + + * @ param changedBlockPos The updated block ' s position . <nl> + + * / <nl> + + public void observedNeighborChange ( IBlockState observerState , World world , BlockPos observerPos , Block changedBlock , BlockPos changedBlockPos ) { } <nl> + + <nl> + + / * * <nl> + * Called to determine whether to allow the a block to handle its own indirect power rather than using the default rules . <nl> + * @ param world The world <nl> + * @ param pos Block position in world <nl> @ @ - 1364 , 7 + 1375 , 7 @ @ <nl> public static void func _ 149671 _ p ( ) <nl> { <nl> func _ 176215 _ a ( 0 , field _ 176230 _ a , ( new BlockAir ( ) ) . func _ 149663 _ c ( " air " ) ) ; <nl> - @ @ - 1201 , 14 + 2385 , 7 @ @ <nl> + @ @ - 1201 , 14 + 2396 , 7 @ @ <nl> } <nl> else <nl> { <nl> diff - - git a / patches / minecraft / net / minecraft / block / BlockObserver . java . patch b / patches / minecraft / net / minecraft / block / BlockObserver . java . patch <nl> new file mode 100644 <nl> index 0000000 . . ba62fd8 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / block / BlockObserver . java . patch <nl> @ @ - 0 , 0 + 1 , 15 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / block / BlockObserver . java <nl> + + + + . . / src - work / minecraft / net / minecraft / block / BlockObserver . java <nl> + @ @ - 145 , 4 + 145 , 12 @ @ <nl> + { <nl> + return this . func _ 176223 _ P ( ) . func _ 177226 _ a ( field _ 176387 _ N , EnumFacing . func _ 82600 _ a ( p _ 176203 _ 1 _ & 7 ) ) ; <nl> + } <nl> + + <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + + @ Override <nl> + + public void observedNeighborChange ( IBlockState observerState , World world , BlockPos observerPos , Block changedBlock , BlockPos changedBlockPos ) <nl> + + { <nl> + + func _ 190962 _ b ( observerState , world , observerPos , changedBlock , changedBlockPos ) ; <nl> + + } <nl> + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / <nl> + } <nl> diff - - git a / patches / minecraft / net / minecraft / world / World . java . patch b / patches / minecraft / net / minecraft / world / World . java . patch <nl> index 553beaa . . 0d877dc 100644 <nl> - - - a / patches / minecraft / net / minecraft / world / World . java . patch <nl> + + + b / patches / minecraft / net / minecraft / world / World . java . patch <nl> @ @ - 153 , 6 + 153 , 20 @ @ <nl> if ( p _ 175695 _ 3 _ ! = EnumFacing . WEST ) <nl> { <nl> this . func _ 190524 _ a ( p _ 175695 _ 1 _ . func _ 177976 _ e ( ) , p _ 175695 _ 2 _ , p _ 175695 _ 1 _ ) ; <nl> + @ @ - 521 , 11 + 572 , 11 @ @ <nl> + { <nl> + IBlockState iblockstate = this . func _ 180495 _ p ( p _ 190529 _ 1 _ ) ; <nl> + <nl> + - if ( iblockstate . func _ 177230 _ c ( ) = = Blocks . field _ 190976 _ dk ) <nl> + + if ( true ) <nl> + { <nl> + try <nl> + { <nl> + - ( ( BlockObserver ) iblockstate . func _ 177230 _ c ( ) ) . func _ 190962 _ b ( iblockstate , this , p _ 190529 _ 1 _ , p _ 190529 _ 2 _ , p _ 190529 _ 3 _ ) ; <nl> + + iblockstate . func _ 177230 _ c ( ) . observedNeighborChange ( iblockstate , this , p _ 190529 _ 1 _ , p _ 190529 _ 2 _ , p _ 190529 _ 3 _ ) ; <nl> + } <nl> + catch ( Throwable throwable ) <nl> + { <nl> @ @ - 582 , 7 + 633 , 7 @ @ <nl> { <nl> IBlockState iblockstate = this . func _ 180495 _ p ( blockpos ) ;

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch 
 index c485d39 . . 8df9a21 100644 
 - - - a / patches / minecraft / net / minecraft / block / Block . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / Block . java . patch 
 @ @ - 197 , 7 + 197 , 7 @ @ 
 public SoundType func _ 185467 _ w ( ) 
 { 
 return this . field _ 149762 _ H ; 
 - @ @ - 908 , 6 + 932 , 1177 @ @ 
 + @ @ - 908 , 6 + 932 , 1188 @ @ 
 { 
 } 
 
 @ @ - 1370 , 12 + 1370 , 23 @ @ 
 + return false ; 
 + } 
 + 
 + + / * * 
 + + * Get the { @ code PathNodeType } for this block . Return { @ code null } for vanilla behavior . 
 + + * 
 + + * @ return the PathNodeType 
 + + * / 
 + + @ Nullable 
 + + public net . minecraft . pathfinding . PathNodeType getAiPathNodeType ( IBlockState state , IBlockAccess world , BlockPos pos ) 
 + + { 
 + + return isBurning ( world , pos ) ? net . minecraft . pathfinding . PathNodeType . DAMAGE _ FIRE : null ; 
 + + } 
 + + 
 + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + 
 public static void func _ 149671 _ p ( ) 
 { 
 func _ 176215 _ a ( 0 , field _ 176230 _ a , ( new BlockAir ( ) ) . func _ 149663 _ c ( " air " ) ) ; 
 - @ @ - 1201 , 14 + 2396 , 7 @ @ 
 + @ @ - 1201 , 14 + 2407 , 7 @ @ 
 } 
 else 
 { 
 diff - - git a / patches / minecraft / net / minecraft / pathfinding / WalkNodeProcessor . java . patch b / patches / minecraft / net / minecraft / pathfinding / WalkNodeProcessor . java . patch 
 index 8e91a44 . . 7f95fbf 100644 
 - - - a / patches / minecraft / net / minecraft / pathfinding / WalkNodeProcessor . java . patch 
 + + + b / patches / minecraft / net / minecraft / pathfinding / WalkNodeProcessor . java . patch 
 @ @ - 8 , 11 + 8 , 12 @ @ 
 } 
 } 
 } 
 - @ @ - 430 , 6 + 431 , 7 @ @ 
 + @ @ - 430 , 6 + 431 , 8 @ @ 
 IBlockState iblockstate = p _ 189553 _ 1 _ . func _ 180495 _ p ( blockpos ) ; 
 Block block = iblockstate . func _ 177230 _ c ( ) ; 
 Material material = iblockstate . func _ 185904 _ a ( ) ; 
 - + if ( block . isBurning ( p _ 189553 _ 1 _ , blockpos ) ) return PathNodeType . DAMAGE _ FIRE ; 
 + + PathNodeType type = block . getAiPathNodeType ( iblockstate , p _ 189553 _ 1 _ , blockpos ) ; 
 + + if ( type ! = null ) return type ; 
 return material = = Material . field _ 151579 _ a ? PathNodeType . OPEN : ( block ! = Blocks . field _ 150415 _ aT & & block ! = Blocks . field _ 180400 _ cw & & block ! = Blocks . field _ 150392 _ bi ? ( block = = Blocks . field _ 150480 _ ab ? PathNodeType . DAMAGE _ FIRE : ( block = = Blocks . field _ 150434 _ aF ? PathNodeType . DAMAGE _ CACTUS : ( block instanceof BlockDoor & & material = = Material . field _ 151575 _ d & & ! ( ( Boolean ) iblockstate . func _ 177229 _ b ( BlockDoor . field _ 176519 _ b ) ) . booleanValue ( ) ? PathNodeType . DOOR _ WOOD _ CLOSED : ( block instanceof BlockDoor & & material = = Material . field _ 151573 _ f & & ! ( ( Boolean ) iblockstate . func _ 177229 _ b ( BlockDoor . field _ 176519 _ b ) ) . booleanValue ( ) ? PathNodeType . DOOR _ IRON _ CLOSED : ( block instanceof BlockDoor & & ( ( Boolean ) iblockstate . func _ 177229 _ b ( BlockDoor . field _ 176519 _ b ) ) . booleanValue ( ) ? PathNodeType . DOOR _ OPEN : ( block instanceof BlockRailBase ? PathNodeType . RAIL : ( ! ( block instanceof BlockFence ) & & ! ( block instanceof BlockWall ) & & ( ! ( block instanceof BlockFenceGate ) | | ( ( Boolean ) iblockstate . func _ 177229 _ b ( BlockFenceGate . field _ 176466 _ a ) ) . booleanValue ( ) ) ? ( material = = Material . field _ 151586 _ h ? PathNodeType . WATER : ( material = = Material . field _ 151587 _ i ? PathNodeType . LAVA : ( block . func _ 176205 _ b ( p _ 189553 _ 1 _ , blockpos ) ? PathNodeType . OPEN : PathNodeType . BLOCKED ) ) ) : PathNodeType . FENCE ) ) ) ) ) ) ) : PathNodeType . TRAPDOOR ) ; 
 } 
 } 
 diff - - git a / src / test / java / net / minecraftforge / test / BlockAiNodeTypeTest . java b / src / test / java / net / minecraftforge / test / BlockAiNodeTypeTest . java 
 new file mode 100644 
 index 0000000 . . b265445 
 - - - / dev / null 
 + + + b / src / test / java / net / minecraftforge / test / BlockAiNodeTypeTest . java 
 @ @ - 0 , 0 + 1 , 44 @ @ 
 + package net . minecraftforge . test ; 
 + 
 + import javax . annotation . Nullable ; 
 + 
 + import net . minecraft . block . Block ; 
 + import net . minecraft . block . material . Material ; 
 + import net . minecraft . block . state . IBlockState ; 
 + import net . minecraft . pathfinding . PathNodeType ; 
 + import net . minecraft . util . math . BlockPos ; 
 + import net . minecraft . world . IBlockAccess ; 
 + import net . minecraftforge . event . RegistryEvent ; 
 + import net . minecraftforge . fml . common . Mod ; 
 + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 + import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 + 
 + @ Mod ( modid = " ainodetypetest " , name = " AiNodeTypeTest " , version = " 1 . 0 " ) 
 + @ Mod . EventBusSubscriber 
 + public class BlockAiNodeTypeTest 
 + { 
 + 
 + private static final Block TEST _ BLOCK = new TestBlock ( ) ; 
 + 
 + @ SubscribeEvent 
 + public static void register ( RegistryEvent . Register < Block > event ) 
 + { 
 + event . getRegistry ( ) . register ( TEST _ BLOCK ) ; 
 + } 
 + 
 + private static final class TestBlock extends Block { 
 + 
 + TestBlock ( ) { 
 + super ( Material . ROCK ) ; 
 + setRegistryName ( " testblock " ) ; 
 + } 
 + 
 + @ Nullable 
 + @ Override 
 + public PathNodeType getAiPathNodeType ( IBlockState state , IBlockAccess world , BlockPos pos ) 
 + { 
 + return PathNodeType . DOOR _ OPEN ; 
 + } 
 + } 
 + 
 + }

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / block / Block . java . patch b / patches / minecraft / net / minecraft / block / Block . java . patch 
 index 7c4bbad . . c485d39 100644 
 - - - a / patches / minecraft / net / minecraft / block / Block . java . patch 
 + + + b / patches / minecraft / net / minecraft / block / Block . java . patch 
 @ @ - 197 , 7 + 197 , 7 @ @ 
 public SoundType func _ 185467 _ w ( ) 
 { 
 return this . field _ 149762 _ H ; 
 - @ @ - 908 , 6 + 932 , 1166 @ @ 
 + @ @ - 908 , 6 + 932 , 1177 @ @ 
 { 
 } 
 
 @ @ - 1130 , 6 + 1130 , 17 @ @ 
 + public void onNeighborChange ( IBlockAccess world , BlockPos pos , BlockPos neighbor ) { } 
 + 
 + / * * 
 + + * Called on an Observer block whenever an update for an Observer is received . 
 + + * 
 + + * @ param observerState The Observer block ' s state . 
 + + * @ param world The current world . 
 + + * @ param observerPos The Observer block ' s position . 
 + + * @ param changedBlock The updated block . 
 + + * @ param changedBlockPos The updated block ' s position . 
 + + * / 
 + + public void observedNeighborChange ( IBlockState observerState , World world , BlockPos observerPos , Block changedBlock , BlockPos changedBlockPos ) { } 
 + + 
 + + / * * 
 + * Called to determine whether to allow the a block to handle its own indirect power rather than using the default rules . 
 + * @ param world The world 
 + * @ param pos Block position in world 
 @ @ - 1364 , 7 + 1375 , 7 @ @ 
 public static void func _ 149671 _ p ( ) 
 { 
 func _ 176215 _ a ( 0 , field _ 176230 _ a , ( new BlockAir ( ) ) . func _ 149663 _ c ( " air " ) ) ; 
 - @ @ - 1201 , 14 + 2385 , 7 @ @ 
 + @ @ - 1201 , 14 + 2396 , 7 @ @ 
 } 
 else 
 { 
 diff - - git a / patches / minecraft / net / minecraft / block / BlockObserver . java . patch b / patches / minecraft / net / minecraft / block / BlockObserver . java . patch 
 new file mode 100644 
 index 0000000 . . ba62fd8 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / block / BlockObserver . java . patch 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / block / BlockObserver . java 
 + + + + . . / src - work / minecraft / net / minecraft / block / BlockObserver . java 
 + @ @ - 145 , 4 + 145 , 12 @ @ 
 + { 
 + return this . func _ 176223 _ P ( ) . func _ 177226 _ a ( field _ 176387 _ N , EnumFacing . func _ 82600 _ a ( p _ 176203 _ 1 _ & 7 ) ) ; 
 + } 
 + + 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE START = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + + @ Override 
 + + public void observedNeighborChange ( IBlockState observerState , World world , BlockPos observerPos , Block changedBlock , BlockPos changedBlockPos ) 
 + + { 
 + + func _ 190962 _ b ( observerState , world , observerPos , changedBlock , changedBlockPos ) ; 
 + + } 
 + + / * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = FORGE END = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = * / 
 + } 
 diff - - git a / patches / minecraft / net / minecraft / world / World . java . patch b / patches / minecraft / net / minecraft / world / World . java . patch 
 index 553beaa . . 0d877dc 100644 
 - - - a / patches / minecraft / net / minecraft / world / World . java . patch 
 + + + b / patches / minecraft / net / minecraft / world / World . java . patch 
 @ @ - 153 , 6 + 153 , 20 @ @ 
 if ( p _ 175695 _ 3 _ ! = EnumFacing . WEST ) 
 { 
 this . func _ 190524 _ a ( p _ 175695 _ 1 _ . func _ 177976 _ e ( ) , p _ 175695 _ 2 _ , p _ 175695 _ 1 _ ) ; 
 + @ @ - 521 , 11 + 572 , 11 @ @ 
 + { 
 + IBlockState iblockstate = this . func _ 180495 _ p ( p _ 190529 _ 1 _ ) ; 
 + 
 + - if ( iblockstate . func _ 177230 _ c ( ) = = Blocks . field _ 190976 _ dk ) 
 + + if ( true ) 
 + { 
 + try 
 + { 
 + - ( ( BlockObserver ) iblockstate . func _ 177230 _ c ( ) ) . func _ 190962 _ b ( iblockstate , this , p _ 190529 _ 1 _ , p _ 190529 _ 2 _ , p _ 190529 _ 3 _ ) ; 
 + + iblockstate . func _ 177230 _ c ( ) . observedNeighborChange ( iblockstate , this , p _ 190529 _ 1 _ , p _ 190529 _ 2 _ , p _ 190529 _ 3 _ ) ; 
 + } 
 + catch ( Throwable throwable ) 
 + { 
 @ @ - 582 , 7 + 633 , 7 @ @ 
 { 
 IBlockState iblockstate = this . func _ 180495 _ p ( blockpos ) ;
