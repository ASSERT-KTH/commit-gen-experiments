BLEU SCORE: 0.00882875838860343

TEST MSG: Fix case error in AutomaticEventSubscriber
GENERATED MSG: Move @ EventBusSubscriber application to just after construction instead of pre - init .

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java b / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java <nl> index 31aa8a5 . . 1f06449 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java <nl> + + + b / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java <nl> @ @ - 60 , 7 + 60 , 7 @ @ public class AutomaticEventSubscriber <nl> getOrDefault ( " value " , Arrays . asList ( new ModAnnotation . EnumHolder ( null , " CLIENT " ) , new ModAnnotation . EnumHolder ( null , " DEDICATED _ SERVER " ) ) ) ; <nl> final EnumSet < Dist > sides = sidesValue . stream ( ) . map ( eh - > Dist . valueOf ( eh . getValue ( ) ) ) . <nl> collect ( Collectors . toCollection ( ( ) - > EnumSet . noneOf ( Dist . class ) ) ) ; <nl> - final String modId = ( String ) ad . getAnnotationData ( ) . getOrDefault ( " modId " , mod . getModId ( ) ) ; <nl> + final String modId = ( String ) ad . getAnnotationData ( ) . getOrDefault ( " modid " , mod . getModId ( ) ) ; <nl> final Mod . EventBusSubscriber . Bus busTarget = ( Mod . EventBusSubscriber . Bus ) ad . getAnnotationData ( ) . getOrDefault ( " bus " , Mod . EventBusSubscriber . Bus . FORGE ) ; <nl> if ( Objects . equals ( mod . getModId ( ) , modId ) & & sides . contains ( FMLEnvironment . dist ) ) { <nl> try
NEAREST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java b / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java <nl> index 3967759 . . 2621914 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java <nl> + + + b / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java <nl> @ @ - 44 , 12 + 44 , 13 @ @ import static net . minecraftforge . fml . Logging . LOADING ; <nl> public class AutomaticEventSubscriber <nl> { <nl> private static final Logger LOGGER = LogManager . getLogger ( ) ; <nl> + private static final Type AUTO _ SUBSCRIBER = Type . getType ( Mod . EventBusSubscriber . class ) ; <nl> public static void inject ( final ModContainer mod , final ModFileScanData scanData , final ClassLoader loader ) <nl> { <nl> if ( scanData = = null ) return ; <nl> LOGGER . debug ( LOADING , " Attempting to inject @ EventBusSubscriber classes into the eventbus for { } " , mod . getModId ( ) ) ; <nl> List < ModFileScanData . AnnotationData > ebsTargets = scanData . getAnnotations ( ) . stream ( ) . <nl> - filter ( annotationData - > Objects . equals ( annotationData . getAnnotationType ( ) , Type . getType ( Mod . EventBusSubscriber . class ) ) ) . <nl> + filter ( annotationData - > AUTO _ SUBSCRIBER . equals ( annotationData . getAnnotationType ( ) ) ) . <nl> collect ( Collectors . toList ( ) ) ; <nl> <nl> ebsTargets . forEach ( ad - > { <nl> diff - - git a / src / main / java / net / minecraftforge / fml / javafmlmod / FMLModContainer . java b / src / main / java / net / minecraftforge / fml / javafmlmod / FMLModContainer . java <nl> index 5b7b0c3 . . 150f89f 100644 <nl> - - - a / src / main / java / net / minecraftforge / fml / javafmlmod / FMLModContainer . java <nl> + + + b / src / main / java / net / minecraftforge / fml / javafmlmod / FMLModContainer . java <nl> @ @ - 120 , 9 + 120 , 6 @ @ public class FMLModContainer extends ModContainer <nl> <nl> private void preinitMod ( LifecycleEventProvider . LifecycleEvent lifecycleEvent ) <nl> { <nl> - LOGGER . debug ( LOADING , " Injecting Automatic event subscribers for { } " , getModId ( ) ) ; <nl> - AutomaticEventSubscriber . inject ( this , this . scanResults , this . modClass . getClassLoader ( ) ) ; <nl> - LOGGER . debug ( LOADING , " Completed Automatic event subscribers for { } " , getModId ( ) ) ; <nl> } <nl> <nl> private void constructMod ( LifecycleEventProvider . LifecycleEvent event ) <nl> @ @ - 138 , 6 + 135 , 9 @ @ public class FMLModContainer extends ModContainer <nl> LOGGER . error ( LOADING , " Failed to create mod instance . ModID : { } , class { } " , getModId ( ) , modClass . getName ( ) , e ) ; <nl> throw new ModLoadingException ( modInfo , event . fromStage ( ) , " fml . modloading . failedtoloadmod " , e , modClass ) ; <nl> } <nl> + LOGGER . debug ( LOADING , " Injecting Automatic event subscribers for { } " , getModId ( ) ) ; <nl> + AutomaticEventSubscriber . inject ( this , this . scanResults , this . modClass . getClassLoader ( ) ) ; <nl> + LOGGER . debug ( LOADING , " Completed Automatic event subscribers for { } " , getModId ( ) ) ; <nl> } <nl> <nl> @ Override

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java b / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java 
 index 31aa8a5 . . 1f06449 100644 
 - - - a / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java 
 + + + b / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java 
 @ @ - 60 , 7 + 60 , 7 @ @ public class AutomaticEventSubscriber 
 getOrDefault ( " value " , Arrays . asList ( new ModAnnotation . EnumHolder ( null , " CLIENT " ) , new ModAnnotation . EnumHolder ( null , " DEDICATED _ SERVER " ) ) ) ; 
 final EnumSet < Dist > sides = sidesValue . stream ( ) . map ( eh - > Dist . valueOf ( eh . getValue ( ) ) ) . 
 collect ( Collectors . toCollection ( ( ) - > EnumSet . noneOf ( Dist . class ) ) ) ; 
 - final String modId = ( String ) ad . getAnnotationData ( ) . getOrDefault ( " modId " , mod . getModId ( ) ) ; 
 + final String modId = ( String ) ad . getAnnotationData ( ) . getOrDefault ( " modid " , mod . getModId ( ) ) ; 
 final Mod . EventBusSubscriber . Bus busTarget = ( Mod . EventBusSubscriber . Bus ) ad . getAnnotationData ( ) . getOrDefault ( " bus " , Mod . EventBusSubscriber . Bus . FORGE ) ; 
 if ( Objects . equals ( mod . getModId ( ) , modId ) & & sides . contains ( FMLEnvironment . dist ) ) { 
 try

NEAREST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java b / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java 
 index 3967759 . . 2621914 100644 
 - - - a / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java 
 + + + b / src / main / java / net / minecraftforge / fml / AutomaticEventSubscriber . java 
 @ @ - 44 , 12 + 44 , 13 @ @ import static net . minecraftforge . fml . Logging . LOADING ; 
 public class AutomaticEventSubscriber 
 { 
 private static final Logger LOGGER = LogManager . getLogger ( ) ; 
 + private static final Type AUTO _ SUBSCRIBER = Type . getType ( Mod . EventBusSubscriber . class ) ; 
 public static void inject ( final ModContainer mod , final ModFileScanData scanData , final ClassLoader loader ) 
 { 
 if ( scanData = = null ) return ; 
 LOGGER . debug ( LOADING , " Attempting to inject @ EventBusSubscriber classes into the eventbus for { } " , mod . getModId ( ) ) ; 
 List < ModFileScanData . AnnotationData > ebsTargets = scanData . getAnnotations ( ) . stream ( ) . 
 - filter ( annotationData - > Objects . equals ( annotationData . getAnnotationType ( ) , Type . getType ( Mod . EventBusSubscriber . class ) ) ) . 
 + filter ( annotationData - > AUTO _ SUBSCRIBER . equals ( annotationData . getAnnotationType ( ) ) ) . 
 collect ( Collectors . toList ( ) ) ; 
 
 ebsTargets . forEach ( ad - > { 
 diff - - git a / src / main / java / net / minecraftforge / fml / javafmlmod / FMLModContainer . java b / src / main / java / net / minecraftforge / fml / javafmlmod / FMLModContainer . java 
 index 5b7b0c3 . . 150f89f 100644 
 - - - a / src / main / java / net / minecraftforge / fml / javafmlmod / FMLModContainer . java 
 + + + b / src / main / java / net / minecraftforge / fml / javafmlmod / FMLModContainer . java 
 @ @ - 120 , 9 + 120 , 6 @ @ public class FMLModContainer extends ModContainer 
 
 private void preinitMod ( LifecycleEventProvider . LifecycleEvent lifecycleEvent ) 
 { 
 - LOGGER . debug ( LOADING , " Injecting Automatic event subscribers for { } " , getModId ( ) ) ; 
 - AutomaticEventSubscriber . inject ( this , this . scanResults , this . modClass . getClassLoader ( ) ) ; 
 - LOGGER . debug ( LOADING , " Completed Automatic event subscribers for { } " , getModId ( ) ) ; 
 } 
 
 private void constructMod ( LifecycleEventProvider . LifecycleEvent event ) 
 @ @ - 138 , 6 + 135 , 9 @ @ public class FMLModContainer extends ModContainer 
 LOGGER . error ( LOADING , " Failed to create mod instance . ModID : { } , class { } " , getModId ( ) , modClass . getName ( ) , e ) ; 
 throw new ModLoadingException ( modInfo , event . fromStage ( ) , " fml . modloading . failedtoloadmod " , e , modClass ) ; 
 } 
 + LOGGER . debug ( LOADING , " Injecting Automatic event subscribers for { } " , getModId ( ) ) ; 
 + AutomaticEventSubscriber . inject ( this , this . scanResults , this . modClass . getClassLoader ( ) ) ; 
 + LOGGER . debug ( LOADING , " Completed Automatic event subscribers for { } " , getModId ( ) ) ; 
 } 
 
 @ Override
