BLEU SCORE: 0.018977423949228533

TEST MSG: Make EntityShulker fire EnderTeleportEvent . Closes # 3383
GENERATED MSG: Added LivingExperienceDropsEvent to change the amount of experience an entity drops

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / monster / EntityShulker . java . patch b / patches / minecraft / net / minecraft / entity / monster / EntityShulker . java . patch <nl> new file mode 100644 <nl> index 0000000 . . c9e4dd3 <nl> - - - / dev / null <nl> + + + b / patches / minecraft / net / minecraft / entity / monster / EntityShulker . java . patch <nl> @ @ - 0 , 0 + 1 , 16 @ @ <nl> + - - - . . / src - base / minecraft / net / minecraft / entity / monster / EntityShulker . java <nl> + + + + . . / src - work / minecraft / net / minecraft / entity / monster / EntityShulker . java <nl> + @ @ - 426 , 6 + 426 , 13 @ @ <nl> + <nl> + if ( flag ) <nl> + { <nl> + + net . minecraftforge . event . entity . living . EnderTeleportEvent event = new net . minecraftforge . event . entity . living . EnderTeleportEvent ( this , blockpos1 . func _ 177958 _ n ( ) , blockpos1 . func _ 177956 _ o ( ) , blockpos1 . func _ 177952 _ p ( ) , 0 ) ; <nl> + + if ( net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( event ) ) flag = false ; <nl> + + blockpos1 = new BlockPos ( event . getTargetX ( ) , event . getTargetY ( ) , event . getTargetZ ( ) ) ; <nl> + + } <nl> + + <nl> + + if ( flag ) <nl> + + { <nl> + this . func _ 184185 _ a ( SoundEvents . field _ 187791 _ eX , 1 . 0F , 1 . 0F ) ; <nl> + this . field _ 70180 _ af . func _ 187227 _ b ( field _ 184701 _ b , Optional . of ( blockpos1 ) ) ; <nl> + this . field _ 70180 _ af . func _ 187227 _ b ( field _ 184702 _ c , Byte . valueOf ( ( byte ) 0 ) ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / living / EnderTeleportEvent . java b / src / main / java / net / minecraftforge / event / entity / living / EnderTeleportEvent . java <nl> index 710b6b7 . . 584613a 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / entity / living / EnderTeleportEvent . java <nl> + + + b / src / main / java / net / minecraftforge / event / entity / living / EnderTeleportEvent . java <nl> @ @ - 23 , 7 + 23 , 7 @ @ import net . minecraftforge . fml . common . eventhandler . Cancelable ; <nl> import net . minecraft . entity . EntityLivingBase ; <nl> <nl> / * * <nl> - * Event for when an Enderman teleports or an ender pearl is used . Can be used to either modify the target position , or cancel the teleport outright . <nl> + * Event for when an Enderman / Shulker teleports or an ender pearl is used . Can be used to either modify the target position , or cancel the teleport outright . <nl> * @ author Mithion <nl> * <nl> * /
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> index 3fd0d26 . . 95ebf1e 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch <nl> @ @ - 9 , 6 + 9 , 15 @ @ <nl> { <nl> this . func _ 70078 _ a ( ( Entity ) null ) ; <nl> } <nl> + @ @ - 316 , 7 + 316 , 7 @ @ <nl> + if ( ! this . field _ 70170 _ p . field _ 72995 _ K & & ( this . field _ 70718 _ bc > 0 | | this . func _ 70684 _ aJ ( ) ) & & this . func _ 146066 _ aG ( ) & & this . field _ 70170 _ p . func _ 82736 _ K ( ) . func _ 82766 _ b ( " doMobLoot " ) ) <nl> + { <nl> + i = this . func _ 70693 _ a ( this . field _ 70717 _ bb ) ; <nl> + - <nl> + + i = net . minecraftforge . event . ForgeEventFactory . getExperienceDrop ( this , this . field _ 70717 _ bb , i ) ; <nl> + while ( i > 0 ) <nl> + { <nl> + int j = EntityXPOrb . func _ 70527 _ a ( i ) ; <nl> @ @ - 377 , 6 + 377 , 7 @ @ <nl> { <nl> this . field _ 70755 _ b = p _ 70604 _ 1 _ ; <nl> diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> index 744a185 . . 4e793a6 100644 <nl> - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java <nl> @ @ - 43 , 6 + 43 , 7 @ @ import net . minecraftforge . event . entity . EntityMountEvent ; <nl> import net . minecraftforge . event . entity . EntityStruckByLightningEvent ; <nl> import net . minecraftforge . event . entity . PlaySoundAtEntityEvent ; <nl> import net . minecraftforge . event . entity . item . ItemExpireEvent ; <nl> + import net . minecraftforge . event . entity . living . LivingExperienceDropEvent ; <nl> import net . minecraftforge . event . entity . living . LivingHealEvent ; <nl> import net . minecraftforge . event . entity . living . LivingPackSizeEvent ; <nl> import net . minecraftforge . event . entity . living . LivingSpawnEvent ; <nl> @ @ - 143 , 6 + 144 , 16 @ @ public class ForgeEventFactory <nl> MinecraftForge . EVENT _ BUS . post ( event ) ; <nl> return event . getResult ( ) ; <nl> } <nl> + <nl> + public static int getExperienceDrop ( EntityLivingBase entity , EntityPlayer attackingPlayer , int originalExperience ) <nl> + { <nl> + LivingExperienceDropEvent event = new LivingExperienceDropEvent ( entity , attackingPlayer , originalExperience ) ; <nl> + if ( MinecraftForge . EVENT _ BUS . post ( event ) ) <nl> + { <nl> + return 0 ; <nl> + } <nl> + return event . getDroppedExperience ( ) ; <nl> + } <nl> <nl> public static List < BiomeGenBase . SpawnListEntry > getPotentialSpawns ( WorldServer world , EnumCreatureType type , BlockPos pos , List < BiomeGenBase . SpawnListEntry > oldList ) <nl> { <nl> diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LivingExperienceDropEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LivingExperienceDropEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 8c96c0c <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / event / entity / living / LivingExperienceDropEvent . java <nl> @ @ - 0 , 0 + 1 , 47 @ @ <nl> + package net . minecraftforge . event . entity . living ; <nl> + <nl> + import net . minecraft . entity . EntityLivingBase ; <nl> + import net . minecraft . entity . player . EntityPlayer ; <nl> + import net . minecraftforge . fml . common . eventhandler . Cancelable ; <nl> + <nl> + / * * <nl> + * Event for when an entity drops experience on its death , can be used to change <nl> + * the amount of experience points dropped or completely prevent dropping of experience <nl> + * by canceling the event . <nl> + * / <nl> + @ Cancelable <nl> + public class LivingExperienceDropEvent extends LivingEvent <nl> + { <nl> + final EntityPlayer attackingPlayer ; <nl> + final int originalExperiencePoints ; <nl> + <nl> + int droppedExperiencePoints ; <nl> + <nl> + public LivingExperienceDropEvent ( EntityLivingBase entity , EntityPlayer attackingPlayer , int originalExperience ) <nl> + { <nl> + super ( entity ) ; <nl> + <nl> + this . attackingPlayer = attackingPlayer ; <nl> + this . originalExperiencePoints = this . droppedExperiencePoints = originalExperience ; <nl> + } <nl> + <nl> + public int getDroppedExperience ( ) <nl> + { <nl> + return droppedExperiencePoints ; <nl> + } <nl> + <nl> + public void setDroppedExperience ( int droppedExperience ) <nl> + { <nl> + this . droppedExperiencePoints = droppedExperience ; <nl> + } <nl> + <nl> + public EntityPlayer getAttackingPlayer ( ) <nl> + { <nl> + return attackingPlayer ; <nl> + } <nl> + <nl> + public int getOriginalExperience ( ) <nl> + { <nl> + return originalExperiencePoints ; <nl> + } <nl> + }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / monster / EntityShulker . java . patch b / patches / minecraft / net / minecraft / entity / monster / EntityShulker . java . patch 
 new file mode 100644 
 index 0000000 . . c9e4dd3 
 - - - / dev / null 
 + + + b / patches / minecraft / net / minecraft / entity / monster / EntityShulker . java . patch 
 @ @ - 0 , 0 + 1 , 16 @ @ 
 + - - - . . / src - base / minecraft / net / minecraft / entity / monster / EntityShulker . java 
 + + + + . . / src - work / minecraft / net / minecraft / entity / monster / EntityShulker . java 
 + @ @ - 426 , 6 + 426 , 13 @ @ 
 + 
 + if ( flag ) 
 + { 
 + + net . minecraftforge . event . entity . living . EnderTeleportEvent event = new net . minecraftforge . event . entity . living . EnderTeleportEvent ( this , blockpos1 . func _ 177958 _ n ( ) , blockpos1 . func _ 177956 _ o ( ) , blockpos1 . func _ 177952 _ p ( ) , 0 ) ; 
 + + if ( net . minecraftforge . common . MinecraftForge . EVENT _ BUS . post ( event ) ) flag = false ; 
 + + blockpos1 = new BlockPos ( event . getTargetX ( ) , event . getTargetY ( ) , event . getTargetZ ( ) ) ; 
 + + } 
 + + 
 + + if ( flag ) 
 + + { 
 + this . func _ 184185 _ a ( SoundEvents . field _ 187791 _ eX , 1 . 0F , 1 . 0F ) ; 
 + this . field _ 70180 _ af . func _ 187227 _ b ( field _ 184701 _ b , Optional . of ( blockpos1 ) ) ; 
 + this . field _ 70180 _ af . func _ 187227 _ b ( field _ 184702 _ c , Byte . valueOf ( ( byte ) 0 ) ) ; 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / living / EnderTeleportEvent . java b / src / main / java / net / minecraftforge / event / entity / living / EnderTeleportEvent . java 
 index 710b6b7 . . 584613a 100644 
 - - - a / src / main / java / net / minecraftforge / event / entity / living / EnderTeleportEvent . java 
 + + + b / src / main / java / net / minecraftforge / event / entity / living / EnderTeleportEvent . java 
 @ @ - 23 , 7 + 23 , 7 @ @ import net . minecraftforge . fml . common . eventhandler . Cancelable ; 
 import net . minecraft . entity . EntityLivingBase ; 
 
 / * * 
 - * Event for when an Enderman teleports or an ender pearl is used . Can be used to either modify the target position , or cancel the teleport outright . 
 + * Event for when an Enderman / Shulker teleports or an ender pearl is used . Can be used to either modify the target position , or cancel the teleport outright . 
 * @ author Mithion 
 * 
 * /

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 index 3fd0d26 . . 95ebf1e 100644 
 - - - a / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / EntityLivingBase . java . patch 
 @ @ - 9 , 6 + 9 , 15 @ @ 
 { 
 this . func _ 70078 _ a ( ( Entity ) null ) ; 
 } 
 + @ @ - 316 , 7 + 316 , 7 @ @ 
 + if ( ! this . field _ 70170 _ p . field _ 72995 _ K & & ( this . field _ 70718 _ bc > 0 | | this . func _ 70684 _ aJ ( ) ) & & this . func _ 146066 _ aG ( ) & & this . field _ 70170 _ p . func _ 82736 _ K ( ) . func _ 82766 _ b ( " doMobLoot " ) ) 
 + { 
 + i = this . func _ 70693 _ a ( this . field _ 70717 _ bb ) ; 
 + - 
 + + i = net . minecraftforge . event . ForgeEventFactory . getExperienceDrop ( this , this . field _ 70717 _ bb , i ) ; 
 + while ( i > 0 ) 
 + { 
 + int j = EntityXPOrb . func _ 70527 _ a ( i ) ; 
 @ @ - 377 , 6 + 377 , 7 @ @ 
 { 
 this . field _ 70755 _ b = p _ 70604 _ 1 _ ; 
 diff - - git a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 index 744a185 . . 4e793a6 100644 
 - - - a / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 + + + b / src / main / java / net / minecraftforge / event / ForgeEventFactory . java 
 @ @ - 43 , 6 + 43 , 7 @ @ import net . minecraftforge . event . entity . EntityMountEvent ; 
 import net . minecraftforge . event . entity . EntityStruckByLightningEvent ; 
 import net . minecraftforge . event . entity . PlaySoundAtEntityEvent ; 
 import net . minecraftforge . event . entity . item . ItemExpireEvent ; 
 + import net . minecraftforge . event . entity . living . LivingExperienceDropEvent ; 
 import net . minecraftforge . event . entity . living . LivingHealEvent ; 
 import net . minecraftforge . event . entity . living . LivingPackSizeEvent ; 
 import net . minecraftforge . event . entity . living . LivingSpawnEvent ; 
 @ @ - 143 , 6 + 144 , 16 @ @ public class ForgeEventFactory 
 MinecraftForge . EVENT _ BUS . post ( event ) ; 
 return event . getResult ( ) ; 
 } 
 + 
 + public static int getExperienceDrop ( EntityLivingBase entity , EntityPlayer attackingPlayer , int originalExperience ) 
 + { 
 + LivingExperienceDropEvent event = new LivingExperienceDropEvent ( entity , attackingPlayer , originalExperience ) ; 
 + if ( MinecraftForge . EVENT _ BUS . post ( event ) ) 
 + { 
 + return 0 ; 
 + } 
 + return event . getDroppedExperience ( ) ; 
 + } 
 
 public static List < BiomeGenBase . SpawnListEntry > getPotentialSpawns ( WorldServer world , EnumCreatureType type , BlockPos pos , List < BiomeGenBase . SpawnListEntry > oldList ) 
 { 
 diff - - git a / src / main / java / net / minecraftforge / event / entity / living / LivingExperienceDropEvent . java b / src / main / java / net / minecraftforge / event / entity / living / LivingExperienceDropEvent . java 
 new file mode 100644 
 index 0000000 . . 8c96c0c 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / event / entity / living / LivingExperienceDropEvent . java 
 @ @ - 0 , 0 + 1 , 47 @ @ 
 + package net . minecraftforge . event . entity . living ; 
 + 
 + import net . minecraft . entity . EntityLivingBase ; 
 + import net . minecraft . entity . player . EntityPlayer ; 
 + import net . minecraftforge . fml . common . eventhandler . Cancelable ; 
 + 
 + / * * 
 + * Event for when an entity drops experience on its death , can be used to change 
 + * the amount of experience points dropped or completely prevent dropping of experience 
 + * by canceling the event . 
 + * / 
 + @ Cancelable 
 + public class LivingExperienceDropEvent extends LivingEvent 
 + { 
 + final EntityPlayer attackingPlayer ; 
 + final int originalExperiencePoints ; 
 + 
 + int droppedExperiencePoints ; 
 + 
 + public LivingExperienceDropEvent ( EntityLivingBase entity , EntityPlayer attackingPlayer , int originalExperience ) 
 + { 
 + super ( entity ) ; 
 + 
 + this . attackingPlayer = attackingPlayer ; 
 + this . originalExperiencePoints = this . droppedExperiencePoints = originalExperience ; 
 + } 
 + 
 + public int getDroppedExperience ( ) 
 + { 
 + return droppedExperiencePoints ; 
 + } 
 + 
 + public void setDroppedExperience ( int droppedExperience ) 
 + { 
 + this . droppedExperiencePoints = droppedExperience ; 
 + } 
 + 
 + public EntityPlayer getAttackingPlayer ( ) 
 + { 
 + return attackingPlayer ; 
 + } 
 + 
 + public int getOriginalExperience ( ) 
 + { 
 + return originalExperiencePoints ; 
 + } 
 + }
