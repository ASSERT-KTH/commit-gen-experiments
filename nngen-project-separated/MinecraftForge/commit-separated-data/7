BLEU SCORE: 0.014779632632337215

TEST MSG: Sync up canPlaceTorchOnTop logic with BlockTorch # isValidPosition
GENERATED MSG: Remove the single use interface ITickingArmor , and apply to Item directly .

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / item / BlockItemUseContext . java . patch b / patches / minecraft / net / minecraft / item / BlockItemUseContext . java . patch <nl> index 9ab96fa . . 3d882cf 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / BlockItemUseContext . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / BlockItemUseContext . java . patch <nl> @ @ - 1 , 14 + 1 , 6 @ @ <nl> - - - a / net / minecraft / item / BlockItemUseContext . java <nl> + + + b / net / minecraft / item / BlockItemUseContext . java <nl> - @ @ - 5 , 6 + 5 , 7 @ @ <nl> - import net . minecraft . util . EnumFacing ; <nl> - import net . minecraft . util . math . BlockPos ; <nl> - import net . minecraft . world . World ; <nl> - + import net . minecraftforge . event . terraingen . BiomeEvent . GetGrassColor ; <nl> - <nl> - public class BlockItemUseContext extends ItemUseContext { <nl> - private final BlockPos field _ 196014 _ j ; <nl> - @ @ - 25 , 7 + 26 , 7 @ @ <nl> + @ @ - 25 , 7 + 25 , 7 @ @ <nl> } <nl> <nl> public boolean func _ 196011 _ b ( ) { <nl> diff - - git a / src / main / java / net / minecraftforge / common / extensions / IForgeBlock . java b / src / main / java / net / minecraftforge / common / extensions / IForgeBlock . java <nl> index 54f7444 . . bf2b201 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / extensions / IForgeBlock . java <nl> + + + b / src / main / java / net / minecraftforge / common / extensions / IForgeBlock . java <nl> @ @ - 465 , 9 + 465 , 10 @ @ public interface IForgeBlock <nl> * / <nl> default boolean canPlaceTorchOnTop ( IBlockState state , IWorldReaderBase world , BlockPos pos ) <nl> { <nl> + / / Keep conditionals in sync with BlockTorch # isValidPosition <nl> if ( this = = Blocks . END _ GATEWAY ) { <nl> return false ; <nl> - } else if ( state . isTopSolid ( ) | | this instanceof BlockFence | | this = = Blocks . GLASS | | this = = Blocks . COBBLESTONE _ WALL | | this instanceof BlockStainedGlass ) { <nl> + } else if ( this instanceof BlockFence | | this instanceof BlockStainedGlass | | this = = Blocks . GLASS | | this = = Blocks . COBBLESTONE _ WALL | | this = = Blocks . MOSSY _ COBBLESTONE _ WALL | | state . isTopSolid ( ) ) { <nl> return true ; <nl> } else { <nl> BlockFaceShape shape = state . getBlockFaceShape ( world , pos , EnumFacing . UP ) ;
NEAREST DIFF (one line): diff - - git a / common / net / minecraftforge / common / ITickingArmor . java b / common / net / minecraftforge / common / ITickingArmor . java <nl> deleted file mode 100644 <nl> index 3c240d3 . . 0000000 <nl> - - - a / common / net / minecraftforge / common / ITickingArmor . java <nl> + + + / dev / null <nl> @ @ - 1 , 15 + 0 , 0 @ @ <nl> - package net . minecraftforge . common ; <nl> - <nl> - import net . minecraft . entity . player . EntityPlayer ; <nl> - import net . minecraft . item . ItemStack ; <nl> - import net . minecraft . world . World ; <nl> - <nl> - / * * <nl> - * A simple interface to receive ticks from armor items when placed in armor slots . <nl> - * <nl> - * @ author cpw <nl> - * <nl> - * / <nl> - public interface ITickingArmor { <nl> - void onArmorTickUpdate ( World worldObj , EntityPlayer player , ItemStack itemStack ) ; <nl> - } <nl> diff - - git a / patches / minecraft / net / minecraft / entity / player / InventoryPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / InventoryPlayer . java . patch <nl> index 74f1567 . . 9f0a109 100644 <nl> - - - a / patches / minecraft / net / minecraft / entity / player / InventoryPlayer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / entity / player / InventoryPlayer . java . patch <nl> @ @ - 1 , 23 + 1 , 15 @ @ <nl> - - - . . / src _ base / minecraft / net / minecraft / entity / player / InventoryPlayer . java <nl> + + + . . / src _ work / minecraft / net / minecraft / entity / player / InventoryPlayer . java <nl> - @ @ - 10 , 6 + 10 , 7 @ @ <nl> - import net . minecraft . item . ItemStack ; <nl> - import net . minecraft . nbt . NBTTagCompound ; <nl> - import net . minecraft . nbt . NBTTagList ; <nl> - + import net . minecraftforge . common . ITickingArmor ; <nl> - <nl> - public class InventoryPlayer implements IInventory <nl> - { <nl> - @ @ - 337 , 6 + 338 , 14 @ @ <nl> + @ @ - 337 , 6 + 337 , 14 @ @ <nl> this . mainInventory [ var1 ] . updateAnimation ( this . player . worldObj , this . player , var1 , this . currentItem = = var1 ) ; <nl> } <nl> } <nl> + <nl> + for ( int i = 0 ; i < this . armorInventory . length ; i + + ) <nl> + { <nl> - + if ( this . armorInventory [ i ] ! = null & & this . armorInventory [ i ] . getItem ( ) instanceof ITickingArmor ) <nl> + + if ( this . armorInventory [ i ] ! = null ) <nl> + { <nl> - + ( ( ITickingArmor ) this . armorInventory [ i ] . getItem ( ) ) . onArmorTickUpdate ( this . player . worldObj , this . player , this . armorInventory [ i ] ) ; <nl> + + this . armorInventory [ i ] . getItem ( ) . onArmorTickUpdate ( this . player . worldObj , this . player , this . armorInventory [ i ] ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / patches / minecraft / net / minecraft / item / Item . java . patch b / patches / minecraft / net / minecraft / item / Item . java . patch <nl> index 4061dc3 . . 7b248a4 100644 <nl> - - - a / patches / minecraft / net / minecraft / item / Item . java . patch <nl> + + + b / patches / minecraft / net / minecraft / item / Item . java . patch <nl> @ @ - 57 , 7 + 57 , 7 @ @ <nl> Vec3 var23 = var13 . addVector ( ( double ) var18 * var21 , ( double ) var17 * var21 , ( double ) var20 * var21 ) ; <nl> return par1World . rayTraceBlocks _ do _ do ( var13 , var23 , par3 , ! par3 ) ; <nl> } <nl> - @ @ - 701 , 4 + 716 , 304 @ @ <nl> + @ @ - 701 , 4 + 716 , 318 @ @ <nl> { <nl> StatList . initStats ( ) ; <nl> } <nl> @ @ - 361 , 4 + 361 , 18 @ @ <nl> + { <nl> + return false ; <nl> + } <nl> + + <nl> + + <nl> + + / * * <nl> + + * Called to tick armor in the armor slot . Override to do something <nl> + + * <nl> + + * @ param world <nl> + + * @ param player <nl> + + * @ param itemStack <nl> + + * / <nl> + + public void onArmorTickUpdate ( World world , EntityPlayer player , ItemStack itemStack ) <nl> + + { <nl> + + <nl> + + } <nl> + + <nl> }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / item / BlockItemUseContext . java . patch b / patches / minecraft / net / minecraft / item / BlockItemUseContext . java . patch 
 index 9ab96fa . . 3d882cf 100644 
 - - - a / patches / minecraft / net / minecraft / item / BlockItemUseContext . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / BlockItemUseContext . java . patch 
 @ @ - 1 , 14 + 1 , 6 @ @ 
 - - - a / net / minecraft / item / BlockItemUseContext . java 
 + + + b / net / minecraft / item / BlockItemUseContext . java 
 - @ @ - 5 , 6 + 5 , 7 @ @ 
 - import net . minecraft . util . EnumFacing ; 
 - import net . minecraft . util . math . BlockPos ; 
 - import net . minecraft . world . World ; 
 - + import net . minecraftforge . event . terraingen . BiomeEvent . GetGrassColor ; 
 - 
 - public class BlockItemUseContext extends ItemUseContext { 
 - private final BlockPos field _ 196014 _ j ; 
 - @ @ - 25 , 7 + 26 , 7 @ @ 
 + @ @ - 25 , 7 + 25 , 7 @ @ 
 } 
 
 public boolean func _ 196011 _ b ( ) { 
 diff - - git a / src / main / java / net / minecraftforge / common / extensions / IForgeBlock . java b / src / main / java / net / minecraftforge / common / extensions / IForgeBlock . java 
 index 54f7444 . . bf2b201 100644 
 - - - a / src / main / java / net / minecraftforge / common / extensions / IForgeBlock . java 
 + + + b / src / main / java / net / minecraftforge / common / extensions / IForgeBlock . java 
 @ @ - 465 , 9 + 465 , 10 @ @ public interface IForgeBlock 
 * / 
 default boolean canPlaceTorchOnTop ( IBlockState state , IWorldReaderBase world , BlockPos pos ) 
 { 
 + / / Keep conditionals in sync with BlockTorch # isValidPosition 
 if ( this = = Blocks . END _ GATEWAY ) { 
 return false ; 
 - } else if ( state . isTopSolid ( ) | | this instanceof BlockFence | | this = = Blocks . GLASS | | this = = Blocks . COBBLESTONE _ WALL | | this instanceof BlockStainedGlass ) { 
 + } else if ( this instanceof BlockFence | | this instanceof BlockStainedGlass | | this = = Blocks . GLASS | | this = = Blocks . COBBLESTONE _ WALL | | this = = Blocks . MOSSY _ COBBLESTONE _ WALL | | state . isTopSolid ( ) ) { 
 return true ; 
 } else { 
 BlockFaceShape shape = state . getBlockFaceShape ( world , pos , EnumFacing . UP ) ;

NEAREST DIFF:
diff - - git a / common / net / minecraftforge / common / ITickingArmor . java b / common / net / minecraftforge / common / ITickingArmor . java 
 deleted file mode 100644 
 index 3c240d3 . . 0000000 
 - - - a / common / net / minecraftforge / common / ITickingArmor . java 
 + + + / dev / null 
 @ @ - 1 , 15 + 0 , 0 @ @ 
 - package net . minecraftforge . common ; 
 - 
 - import net . minecraft . entity . player . EntityPlayer ; 
 - import net . minecraft . item . ItemStack ; 
 - import net . minecraft . world . World ; 
 - 
 - / * * 
 - * A simple interface to receive ticks from armor items when placed in armor slots . 
 - * 
 - * @ author cpw 
 - * 
 - * / 
 - public interface ITickingArmor { 
 - void onArmorTickUpdate ( World worldObj , EntityPlayer player , ItemStack itemStack ) ; 
 - } 
 diff - - git a / patches / minecraft / net / minecraft / entity / player / InventoryPlayer . java . patch b / patches / minecraft / net / minecraft / entity / player / InventoryPlayer . java . patch 
 index 74f1567 . . 9f0a109 100644 
 - - - a / patches / minecraft / net / minecraft / entity / player / InventoryPlayer . java . patch 
 + + + b / patches / minecraft / net / minecraft / entity / player / InventoryPlayer . java . patch 
 @ @ - 1 , 23 + 1 , 15 @ @ 
 - - - . . / src _ base / minecraft / net / minecraft / entity / player / InventoryPlayer . java 
 + + + . . / src _ work / minecraft / net / minecraft / entity / player / InventoryPlayer . java 
 - @ @ - 10 , 6 + 10 , 7 @ @ 
 - import net . minecraft . item . ItemStack ; 
 - import net . minecraft . nbt . NBTTagCompound ; 
 - import net . minecraft . nbt . NBTTagList ; 
 - + import net . minecraftforge . common . ITickingArmor ; 
 - 
 - public class InventoryPlayer implements IInventory 
 - { 
 - @ @ - 337 , 6 + 338 , 14 @ @ 
 + @ @ - 337 , 6 + 337 , 14 @ @ 
 this . mainInventory [ var1 ] . updateAnimation ( this . player . worldObj , this . player , var1 , this . currentItem = = var1 ) ; 
 } 
 } 
 + 
 + for ( int i = 0 ; i < this . armorInventory . length ; i + + ) 
 + { 
 - + if ( this . armorInventory [ i ] ! = null & & this . armorInventory [ i ] . getItem ( ) instanceof ITickingArmor ) 
 + + if ( this . armorInventory [ i ] ! = null ) 
 + { 
 - + ( ( ITickingArmor ) this . armorInventory [ i ] . getItem ( ) ) . onArmorTickUpdate ( this . player . worldObj , this . player , this . armorInventory [ i ] ) ; 
 + + this . armorInventory [ i ] . getItem ( ) . onArmorTickUpdate ( this . player . worldObj , this . player , this . armorInventory [ i ] ) ; 
 + } 
 + } 
 } 
 diff - - git a / patches / minecraft / net / minecraft / item / Item . java . patch b / patches / minecraft / net / minecraft / item / Item . java . patch 
 index 4061dc3 . . 7b248a4 100644 
 - - - a / patches / minecraft / net / minecraft / item / Item . java . patch 
 + + + b / patches / minecraft / net / minecraft / item / Item . java . patch 
 @ @ - 57 , 7 + 57 , 7 @ @ 
 Vec3 var23 = var13 . addVector ( ( double ) var18 * var21 , ( double ) var17 * var21 , ( double ) var20 * var21 ) ; 
 return par1World . rayTraceBlocks _ do _ do ( var13 , var23 , par3 , ! par3 ) ; 
 } 
 - @ @ - 701 , 4 + 716 , 304 @ @ 
 + @ @ - 701 , 4 + 716 , 318 @ @ 
 { 
 StatList . initStats ( ) ; 
 } 
 @ @ - 361 , 4 + 361 , 18 @ @ 
 + { 
 + return false ; 
 + } 
 + + 
 + + 
 + + / * * 
 + + * Called to tick armor in the armor slot . Override to do something 
 + + * 
 + + * @ param world 
 + + * @ param player 
 + + * @ param itemStack 
 + + * / 
 + + public void onArmorTickUpdate ( World world , EntityPlayer player , ItemStack itemStack ) 
 + + { 
 + + 
 + + } 
 + + 
 }
