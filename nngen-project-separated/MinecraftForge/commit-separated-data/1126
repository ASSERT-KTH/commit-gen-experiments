BLEU SCORE: 0.03283637368030199

TEST MSG: RenderItem can now use baked quad color
GENERATED MSG: Added world display list render events

TEST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / entity / RenderItem . java . patch b / patches / minecraft / net / minecraft / client / renderer / entity / RenderItem . java . patch <nl> index 498fc5d . . 25a088e 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / entity / RenderItem . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / entity / RenderItem . java . patch <nl> @ @ - 9 , 7 + 9 , 17 @ @ <nl> this . func _ 175041 _ b ( ) ; <nl> } <nl> <nl> - @ @ - 302 , 6 + 302 , 10 @ @ <nl> + @ @ - 212 , 6 + 212 , 9 @ @ <nl> + private void func _ 175033 _ a ( WorldRenderer p _ 175033 _ 1 _ , BakedQuad p _ 175033 _ 2 _ , int p _ 175033 _ 3 _ ) <nl> + { <nl> + p _ 175033 _ 1 _ . func _ 178981 _ a ( p _ 175033 _ 2 _ . func _ 178209 _ a ( ) ) ; <nl> + + if ( p _ 175033 _ 2 _ instanceof net . minecraftforge . client . model . IColoredBakedQuad ) <nl> + + net . minecraftforge . client . ForgeHooksClient . putQuadColor ( p _ 175033 _ 1 _ , p _ 175033 _ 2 _ , p _ 175033 _ 3 _ ) ; <nl> + + else <nl> + p _ 175033 _ 1 _ . func _ 178968 _ d ( p _ 175033 _ 3 _ ) ; <nl> + this . func _ 175038 _ a ( p _ 175033 _ 1 _ , p _ 175033 _ 2 _ ) ; <nl> + } <nl> + @ @ - 302 , 6 + 305 , 10 @ @ <nl> modelresourcelocation = new ModelResourceLocation ( " bow _ pulling _ 0 " , " inventory " ) ; <nl> } <nl> } <nl> @ @ - 20 , 7 + 30 , 7 @ @ <nl> <nl> if ( modelresourcelocation ! = null ) <nl> { <nl> - @ @ - 314 , 6 + 318 , 11 @ @ <nl> + @ @ - 314 , 6 + 321 , 11 @ @ <nl> <nl> protected void func _ 175034 _ a ( ItemTransformVec3f p _ 175034 _ 1 _ ) <nl> { <nl> @ @ - 32 , 7 + 42 , 7 @ @ <nl> if ( p _ 175034 _ 1 _ ! = ItemTransformVec3f . field _ 178366 _ a ) <nl> { <nl> GlStateManager . func _ 179109 _ b ( p _ 175034 _ 1 _ . field _ 178365 _ c . x + field _ 175055 _ b , p _ 175034 _ 1 _ . field _ 178365 _ c . y + field _ 175056 _ c , p _ 175034 _ 1 _ . field _ 178365 _ c . z + field _ 175053 _ d ) ; <nl> - @ @ - 335 , 23 + 344 , 7 @ @ <nl> + @ @ - 335 , 23 + 347 , 7 @ @ <nl> GlStateManager . func _ 179120 _ a ( 770 , 771 , 1 , 0 ) ; <nl> GlStateManager . func _ 179094 _ E ( ) ; <nl> <nl> @ @ - 57 , 7 + 67 , 7 @ @ <nl> <nl> this . func _ 180454 _ a ( p _ 175040 _ 1 _ , p _ 175040 _ 2 _ ) ; <nl> GlStateManager . func _ 179121 _ F ( ) ; <nl> - @ @ - 485 , 10 + 478 , 11 @ @ <nl> + @ @ - 485 , 10 + 481 , 11 @ @ <nl> GlStateManager . func _ 179126 _ j ( ) ; <nl> } <nl> <nl> @ @ - 72 , 7 + 82 , 7 @ @ <nl> GlStateManager . func _ 179140 _ f ( ) ; <nl> GlStateManager . func _ 179097 _ i ( ) ; <nl> GlStateManager . func _ 179090 _ x ( ) ; <nl> - @ @ - 501 , 7 + 495 , 7 @ @ <nl> + @ @ - 501 , 7 + 498 , 7 @ @ <nl> this . func _ 175044 _ a ( worldrenderer , p _ 180453 _ 3 _ + 2 , p _ 180453 _ 4 _ + 13 , 13 , 2 , 0 ) ; <nl> this . func _ 175044 _ a ( worldrenderer , p _ 180453 _ 3 _ + 2 , p _ 180453 _ 4 _ + 13 , 12 , 1 , i1 ) ; <nl> this . func _ 175044 _ a ( worldrenderer , p _ 180453 _ 3 _ + 2 , p _ 180453 _ 4 _ + 13 , j1 , 1 , l ) ; <nl> @ @ - 81 , 7 + 91 , 7 @ @ <nl> GlStateManager . func _ 179141 _ d ( ) ; <nl> GlStateManager . func _ 179098 _ w ( ) ; <nl> GlStateManager . func _ 179145 _ e ( ) ; <nl> - @ @ - 1072 , 12 + 1066 , 26 @ @ <nl> + @ @ - 1072 , 12 + 1069 , 26 @ @ <nl> this . func _ 175029 _ a ( Blocks . field _ 150420 _ aW , BlockHugeMushroom . EnumType . ALL _ INSIDE . func _ 176896 _ a ( ) , " brown _ mushroom _ block " ) ; <nl> this . func _ 175029 _ a ( Blocks . field _ 150419 _ aX , BlockHugeMushroom . EnumType . ALL _ INSIDE . func _ 176896 _ a ( ) , " red _ mushroom _ block " ) ; <nl> this . func _ 175031 _ a ( Blocks . field _ 150380 _ bt , " dragon _ egg " ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index 2d4f7f9 . . e236112 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 26 , 6 + 26 , 8 @ @ import net . minecraft . client . renderer . EntityRenderer ; <nl> import net . minecraft . client . renderer . GlStateManager ; <nl> import net . minecraft . client . renderer . OpenGlHelper ; <nl> import net . minecraft . client . renderer . RenderGlobal ; <nl> + import net . minecraft . client . renderer . WorldRenderer ; <nl> + import net . minecraft . client . renderer . block . model . BakedQuad ; <nl> import net . minecraft . client . renderer . block . model . ItemCameraTransforms ; <nl> import net . minecraft . client . renderer . block . model . ItemTransformVec3f ; <nl> import net . minecraft . client . renderer . entity . RenderItem ; <nl> @ @ - 656 , 4 + 658 , 25 @ @ public class ForgeHooksClient <nl> ret . mul ( tmp ) ; <nl> return ret ; <nl> } <nl> + <nl> + public static void putQuadColor ( WorldRenderer renderer , BakedQuad quad , int color ) <nl> + { <nl> + float cr = color & 0xFF ; <nl> + float cg = ( color > > > 8 ) & 0xFF ; <nl> + float cb = ( color > > > 16 ) & 0xFF ; <nl> + float ca = ( color > > > 24 ) & 0xFF ; <nl> + for ( int i = 0 ; i < 4 ; i + + ) <nl> + { <nl> + int vc = quad . getVertexData ( ) [ 3 + 7 * i ] ; <nl> + float vcr = vc & 0xFF ; <nl> + float vcg = ( vc > > > 8 ) & 0xFF ; <nl> + float vcb = ( vc > > > 16 ) & 0xFF ; <nl> + float vca = ( vc > > > 24 ) & 0xFF ; <nl> + int ncr = Math . min ( 0xFF , ( int ) ( cr * vcr / 0xFF ) ) ; <nl> + int ncg = Math . min ( 0xFF , ( int ) ( cg * vcg / 0xFF ) ) ; <nl> + int ncb = Math . min ( 0xFF , ( int ) ( cb * vcb / 0xFF ) ) ; <nl> + int nca = Math . min ( 0xFF , ( int ) ( ca * vca / 0xFF ) ) ; <nl> + renderer . putColorRGBA ( renderer . getColorIndex ( i + 1 ) , ncr , ncg , ncb , nca ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / IColoredBakedQuad . java b / src / main / java / net / minecraftforge / client / model / IColoredBakedQuad . java <nl> new file mode 100644 <nl> index 0000000 . . 95fce88 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / model / IColoredBakedQuad . java <nl> @ @ - 0 , 0 + 1 , 14 @ @ <nl> + package net . minecraftforge . client . model ; <nl> + <nl> + import net . minecraft . client . renderer . block . model . BakedQuad ; <nl> + import net . minecraft . util . EnumFacing ; <nl> + <nl> + public interface IColoredBakedQuad { <nl> + public static class ColoredBakedQuad extends BakedQuad implements IColoredBakedQuad <nl> + { <nl> + public ColoredBakedQuad ( int [ ] data , int tintIndex , EnumFacing side ) <nl> + { <nl> + super ( data , tintIndex , side ) ; <nl> + } <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> index ca0f3fb . . ca6ab30 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> + + + b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java <nl> @ @ - 26 , 6 + 26 , 7 @ @ import net . minecraft . item . ItemStack ; <nl> import net . minecraft . util . EnumFacing ; <nl> import net . minecraft . util . ResourceLocation ; <nl> import net . minecraftforge . client . model . Attributes ; <nl> + import net . minecraftforge . client . model . IColoredBakedQuad . ColoredBakedQuad ; <nl> import net . minecraftforge . client . model . ICustomModelLoader ; <nl> import net . minecraftforge . client . model . IFlexibleBakedModel ; <nl> import net . minecraftforge . client . model . IModel ; <nl> @ @ - 465 , 7 + 466 , 7 @ @ public class B3DLoader implements ICustomModelLoader <nl> buf . flip ( ) ; <nl> int [ ] data = new int [ VERTICES _ IN _ QUAD * format . getNextOffset ( ) / BYTES _ IN _ INT ] ; <nl> buf . asIntBuffer ( ) . get ( data ) ; <nl> - builder . add ( new BakedQuad ( data , - 1 , EnumFacing . getFacingFromVector ( f . getNormal ( ) . x , f . getNormal ( ) . y , f . getNormal ( ) . z ) ) ) ; <nl> + builder . add ( new ColoredBakedQuad ( data , - 1 , EnumFacing . getFacingFromVector ( f . getNormal ( ) . x , f . getNormal ( ) . y , f . getNormal ( ) . z ) ) ) ; <nl> } <nl> quads = builder . build ( ) ; <nl> } <nl> diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg <nl> index 1aa9b2a . . 8016e3a 100644 <nl> - - - a / src / main / resources / forge _ at . cfg <nl> + + + b / src / main / resources / forge _ at . cfg <nl> @ @ - 152 , 3 + 152 , 5 @ @ public net . minecraft . client . resources . model . WeightedBakedModel field _ 177565 _ b # <nl> # EnumFacing <nl> public net . minecraft . util . EnumFacing field _ 82609 _ l # VALUES <nl> public net . minecraft . util . EnumFacing field _ 176754 _ o # HORIZONTALS <nl> + public net . minecraft . client . renderer . WorldRenderer func _ 78909 _ a ( I ) I # getColorIndex <nl> + public net . minecraft . client . renderer . WorldRenderer func _ 178972 _ a ( IIIII ) V # putColorRGBA
NEAREST DIFF (one line): diff - - git a / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch <nl> index 8e74e13 . . db5e237 100644 <nl> - - - a / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch <nl> + + + b / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch <nl> @ @ - 9 , 7 + 9 , 15 @ @ <nl> public static int field _ 78922 _ b ; <nl> public int field _ 78923 _ c ; <nl> public int field _ 78920 _ d ; <nl> - @ @ - 157 , 7 + 157 , 7 @ @ <nl> + @ @ - 132 , 6 + 132 , 7 @ @ <nl> + { <nl> + + + field _ 78922 _ b ; <nl> + RenderBlocks renderblocks = new RenderBlocks ( chunkcache ) ; <nl> + + net . minecraftforge . client . ForgeHooksClient . setWorldRendererRB ( renderblocks ) ; <nl> + this . field _ 78917 _ C = 0 ; <nl> + this . field _ 147894 _ y = null ; <nl> + <nl> + @ @ - 157 , 7 + 158 , 7 @ @ <nl> this . func _ 147890 _ b ( k2 ) ; <nl> } <nl> <nl> @ @ - 18 , 7 + 26 , 7 @ @ <nl> { <nl> TileEntity tileentity = chunkcache . func _ 147438 _ o ( j3 , l2 , i3 ) ; <nl> <nl> - @ @ - 173 , 7 + 173 , 9 @ @ <nl> + @ @ - 173 , 7 + 174 , 9 @ @ <nl> { <nl> flag = true ; <nl> } <nl> @ @ - 29 , 12 + 37 , 21 @ @ <nl> { <nl> flag1 | = renderblocks . func _ 147805 _ b ( block , j3 , l2 , i3 ) ; <nl> <nl> - @ @ - 232 , 21 + 234 , 22 @ @ <nl> + @ @ - 210 , 6 + 213 , 7 @ @ <nl> + break ; <nl> + } <nl> + } <nl> + + net . minecraftforge . client . ForgeHooksClient . setWorldRendererRB ( null ) ; <nl> + } <nl> + <nl> + HashSet hashset1 = new HashSet ( ) ; <nl> + @ @ - 232 , 21 + 236 , 23 @ @ <nl> GL11 . glTranslatef ( - 8 . 0F , - 8 . 0F , - 8 . 0F ) ; <nl> GL11 . glScalef ( f , f , f ) ; <nl> GL11 . glTranslatef ( 8 . 0F , 8 . 0F , 8 . 0F ) ; <nl> - field _ 78941 _ z . func _ 78382 _ b ( ) ; <nl> - field _ 78941 _ z . func _ 78373 _ b ( ( double ) ( - this . field _ 78923 _ c ) , ( double ) ( - this . field _ 78920 _ d ) , ( double ) ( - this . field _ 78921 _ e ) ) ; <nl> + + net . minecraftforge . client . ForgeHooksClient . onPreRenderWorld ( this , p _ 147890 _ 1 _ ) ; <nl> + Tessellator . field _ 78398 _ a . func _ 78382 _ b ( ) ; <nl> + Tessellator . field _ 78398 _ a . func _ 78373 _ b ( ( double ) ( - this . field _ 78923 _ c ) , ( double ) ( - this . field _ 78920 _ d ) , ( double ) ( - this . field _ 78921 _ e ) ) ; <nl> } <nl> @ @ - 48 , 8 + 65 , 8 @ @ <nl> } <nl> <nl> - this . field _ 78917 _ C + = field _ 78941 _ z . func _ 78381 _ a ( ) ; <nl> - + / / ForgeHooksClient . afterRenderPass ( l1 ) ; Noop fo now , TODO : Event if anyone needs <nl> + this . field _ 78917 _ C + = Tessellator . field _ 78398 _ a . func _ 78381 _ a ( ) ; <nl> + + net . minecraftforge . client . ForgeHooksClient . onPostRenderWorld ( this , p _ 147891 _ 1 _ ) ; <nl> GL11 . glPopMatrix ( ) ; <nl> GL11 . glEndList ( ) ; <nl> - field _ 78941 _ z . func _ 78373 _ b ( 0 . 0D , 0 . 0D , 0 . 0D ) ; <nl> @ @ - 57 , 7 + 74 , 7 @ @ <nl> } <nl> <nl> public void func _ 147889 _ b ( EntityLivingBase p _ 147889 _ 1 _ ) <nl> - @ @ - 254 , 7 + 257 , 7 @ @ <nl> + @ @ - 254 , 7 + 260 , 7 @ @ <nl> if ( this . field _ 147894 _ y ! = null & & ! this . field _ 78928 _ m [ 1 ] ) <nl> { <nl> this . func _ 147890 _ b ( 1 ) ; <nl> diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> index d80abf1 . . b960a31 100644 <nl> - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java <nl> @ @ - 35 , 6 + 35 , 7 @ @ import net . minecraft . util . ChatComponentTranslation ; <nl> import net . minecraft . util . EnumChatFormatting ; <nl> import net . minecraft . util . MathHelper ; <nl> import net . minecraft . util . MovingObjectPosition ; <nl> + import net . minecraft . world . ChunkCache ; <nl> import net . minecraft . world . World ; <nl> import net . minecraft . world . biome . BiomeGenBase ; <nl> import net . minecraft . client . model . ModelBiped ; <nl> @ @ - 42 , 6 + 43 , 7 @ @ import net . minecraft . client . renderer . OpenGlHelper ; <nl> import net . minecraft . client . renderer . RenderBlocks ; <nl> import net . minecraft . client . renderer . RenderGlobal ; <nl> import net . minecraft . client . renderer . Tessellator ; <nl> + import net . minecraft . client . renderer . WorldRenderer ; <nl> import net . minecraft . client . renderer . entity . RenderItem ; <nl> import net . minecraft . client . renderer . texture . TextureManager ; <nl> import net . minecraft . client . renderer . texture . TextureMap ; <nl> @ @ - 49 , 6 + 51 , 7 @ @ import net . minecraft . client . settings . GameSettings ; <nl> import net . minecraftforge . client . IItemRenderer . ItemRenderType ; <nl> import net . minecraftforge . client . event . DrawBlockHighlightEvent ; <nl> import net . minecraftforge . client . event . RenderHandEvent ; <nl> + import net . minecraftforge . client . event . RenderWorldEvent ; <nl> import net . minecraftforge . client . event . RenderWorldLastEvent ; <nl> import net . minecraftforge . client . event . TextureStitchEvent ; <nl> import net . minecraftforge . client . event . sound . PlaySoundEvent17 ; <nl> @ @ - 453 , 4 + 456 , 35 @ @ public class ForgeHooksClient <nl> MinecraftForge . EVENT _ BUS . post ( e ) ; <nl> return e . result ; <nl> } <nl> + <nl> + static RenderBlocks worldRendererRB ; <nl> + static int worldRenderPass ; <nl> + <nl> + public static int getWorldRenderPass ( ) <nl> + { <nl> + return worldRenderPass ; <nl> + } <nl> + <nl> + public static void setWorldRendererRB ( RenderBlocks renderBlocks ) <nl> + { <nl> + worldRendererRB = renderBlocks ; <nl> + } <nl> + <nl> + public static void onPreRenderWorld ( WorldRenderer worldRenderer , int pass ) <nl> + { <nl> + if ( worldRendererRB ! = null ) <nl> + { <nl> + worldRenderPass = pass ; <nl> + MinecraftForge . EVENT _ BUS . post ( new RenderWorldEvent . Pre ( worldRenderer , ( ChunkCache ) worldRendererRB . blockAccess , worldRendererRB , pass ) ) ; <nl> + } <nl> + } <nl> + <nl> + public static void onPostRenderWorld ( WorldRenderer worldRenderer , int pass ) <nl> + { <nl> + if ( worldRendererRB ! = null ) <nl> + { <nl> + MinecraftForge . EVENT _ BUS . post ( new RenderWorldEvent . Post ( worldRenderer , ( ChunkCache ) worldRendererRB . blockAccess , worldRendererRB , pass ) ) ; <nl> + worldRenderPass = - 1 ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / src / main / java / net / minecraftforge / client / event / RenderWorldEvent . java b / src / main / java / net / minecraftforge / client / event / RenderWorldEvent . java <nl> new file mode 100644 <nl> index 0000000 . . 5b353f3 <nl> - - - / dev / null <nl> + + + b / src / main / java / net / minecraftforge / client / event / RenderWorldEvent . java <nl> @ @ - 0 , 0 + 1 , 39 @ @ <nl> + package net . minecraftforge . client . event ; <nl> + <nl> + import cpw . mods . fml . common . eventhandler . Event ; <nl> + import net . minecraft . client . renderer . RenderBlocks ; <nl> + import net . minecraft . client . renderer . WorldRenderer ; <nl> + import net . minecraft . world . ChunkCache ; <nl> + <nl> + public abstract class RenderWorldEvent extends Event <nl> + { <nl> + public final WorldRenderer renderer ; <nl> + public final ChunkCache chunkCache ; <nl> + public final RenderBlocks renderBlocks ; <nl> + public final int pass ; <nl> + <nl> + public RenderWorldEvent ( WorldRenderer renderer , ChunkCache chunkCache , RenderBlocks renderBlocks , int pass ) <nl> + { <nl> + this . renderer = renderer ; <nl> + this . chunkCache = chunkCache ; <nl> + this . renderBlocks = renderBlocks ; <nl> + this . pass = pass ; <nl> + } <nl> + <nl> + / * * <nl> + * Fired when 16x16x16 chunk area is being redrawn . <nl> + * Fired after GL state is setup , before tessellator is started . <nl> + * / <nl> + public static class Pre extends RenderWorldEvent <nl> + { <nl> + public Pre ( WorldRenderer renderer , ChunkCache chunkCache , RenderBlocks renderBlocks , int pass ) { super ( renderer , chunkCache , renderBlocks , pass ) ; } <nl> + } <nl> + <nl> + / * * <nl> + * Fired after the tessellator is stopped , before the display list is ended . <nl> + * / <nl> + public static class Post extends RenderWorldEvent <nl> + { <nl> + public Post ( WorldRenderer renderer , ChunkCache chunkCache , RenderBlocks renderBlocks , int pass ) { super ( renderer , chunkCache , renderBlocks , pass ) ; } <nl> + } <nl> + }

TEST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / entity / RenderItem . java . patch b / patches / minecraft / net / minecraft / client / renderer / entity / RenderItem . java . patch 
 index 498fc5d . . 25a088e 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / entity / RenderItem . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / entity / RenderItem . java . patch 
 @ @ - 9 , 7 + 9 , 17 @ @ 
 this . func _ 175041 _ b ( ) ; 
 } 
 
 - @ @ - 302 , 6 + 302 , 10 @ @ 
 + @ @ - 212 , 6 + 212 , 9 @ @ 
 + private void func _ 175033 _ a ( WorldRenderer p _ 175033 _ 1 _ , BakedQuad p _ 175033 _ 2 _ , int p _ 175033 _ 3 _ ) 
 + { 
 + p _ 175033 _ 1 _ . func _ 178981 _ a ( p _ 175033 _ 2 _ . func _ 178209 _ a ( ) ) ; 
 + + if ( p _ 175033 _ 2 _ instanceof net . minecraftforge . client . model . IColoredBakedQuad ) 
 + + net . minecraftforge . client . ForgeHooksClient . putQuadColor ( p _ 175033 _ 1 _ , p _ 175033 _ 2 _ , p _ 175033 _ 3 _ ) ; 
 + + else 
 + p _ 175033 _ 1 _ . func _ 178968 _ d ( p _ 175033 _ 3 _ ) ; 
 + this . func _ 175038 _ a ( p _ 175033 _ 1 _ , p _ 175033 _ 2 _ ) ; 
 + } 
 + @ @ - 302 , 6 + 305 , 10 @ @ 
 modelresourcelocation = new ModelResourceLocation ( " bow _ pulling _ 0 " , " inventory " ) ; 
 } 
 } 
 @ @ - 20 , 7 + 30 , 7 @ @ 
 
 if ( modelresourcelocation ! = null ) 
 { 
 - @ @ - 314 , 6 + 318 , 11 @ @ 
 + @ @ - 314 , 6 + 321 , 11 @ @ 
 
 protected void func _ 175034 _ a ( ItemTransformVec3f p _ 175034 _ 1 _ ) 
 { 
 @ @ - 32 , 7 + 42 , 7 @ @ 
 if ( p _ 175034 _ 1 _ ! = ItemTransformVec3f . field _ 178366 _ a ) 
 { 
 GlStateManager . func _ 179109 _ b ( p _ 175034 _ 1 _ . field _ 178365 _ c . x + field _ 175055 _ b , p _ 175034 _ 1 _ . field _ 178365 _ c . y + field _ 175056 _ c , p _ 175034 _ 1 _ . field _ 178365 _ c . z + field _ 175053 _ d ) ; 
 - @ @ - 335 , 23 + 344 , 7 @ @ 
 + @ @ - 335 , 23 + 347 , 7 @ @ 
 GlStateManager . func _ 179120 _ a ( 770 , 771 , 1 , 0 ) ; 
 GlStateManager . func _ 179094 _ E ( ) ; 
 
 @ @ - 57 , 7 + 67 , 7 @ @ 
 
 this . func _ 180454 _ a ( p _ 175040 _ 1 _ , p _ 175040 _ 2 _ ) ; 
 GlStateManager . func _ 179121 _ F ( ) ; 
 - @ @ - 485 , 10 + 478 , 11 @ @ 
 + @ @ - 485 , 10 + 481 , 11 @ @ 
 GlStateManager . func _ 179126 _ j ( ) ; 
 } 
 
 @ @ - 72 , 7 + 82 , 7 @ @ 
 GlStateManager . func _ 179140 _ f ( ) ; 
 GlStateManager . func _ 179097 _ i ( ) ; 
 GlStateManager . func _ 179090 _ x ( ) ; 
 - @ @ - 501 , 7 + 495 , 7 @ @ 
 + @ @ - 501 , 7 + 498 , 7 @ @ 
 this . func _ 175044 _ a ( worldrenderer , p _ 180453 _ 3 _ + 2 , p _ 180453 _ 4 _ + 13 , 13 , 2 , 0 ) ; 
 this . func _ 175044 _ a ( worldrenderer , p _ 180453 _ 3 _ + 2 , p _ 180453 _ 4 _ + 13 , 12 , 1 , i1 ) ; 
 this . func _ 175044 _ a ( worldrenderer , p _ 180453 _ 3 _ + 2 , p _ 180453 _ 4 _ + 13 , j1 , 1 , l ) ; 
 @ @ - 81 , 7 + 91 , 7 @ @ 
 GlStateManager . func _ 179141 _ d ( ) ; 
 GlStateManager . func _ 179098 _ w ( ) ; 
 GlStateManager . func _ 179145 _ e ( ) ; 
 - @ @ - 1072 , 12 + 1066 , 26 @ @ 
 + @ @ - 1072 , 12 + 1069 , 26 @ @ 
 this . func _ 175029 _ a ( Blocks . field _ 150420 _ aW , BlockHugeMushroom . EnumType . ALL _ INSIDE . func _ 176896 _ a ( ) , " brown _ mushroom _ block " ) ; 
 this . func _ 175029 _ a ( Blocks . field _ 150419 _ aX , BlockHugeMushroom . EnumType . ALL _ INSIDE . func _ 176896 _ a ( ) , " red _ mushroom _ block " ) ; 
 this . func _ 175031 _ a ( Blocks . field _ 150380 _ bt , " dragon _ egg " ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index 2d4f7f9 . . e236112 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 26 , 6 + 26 , 8 @ @ import net . minecraft . client . renderer . EntityRenderer ; 
 import net . minecraft . client . renderer . GlStateManager ; 
 import net . minecraft . client . renderer . OpenGlHelper ; 
 import net . minecraft . client . renderer . RenderGlobal ; 
 + import net . minecraft . client . renderer . WorldRenderer ; 
 + import net . minecraft . client . renderer . block . model . BakedQuad ; 
 import net . minecraft . client . renderer . block . model . ItemCameraTransforms ; 
 import net . minecraft . client . renderer . block . model . ItemTransformVec3f ; 
 import net . minecraft . client . renderer . entity . RenderItem ; 
 @ @ - 656 , 4 + 658 , 25 @ @ public class ForgeHooksClient 
 ret . mul ( tmp ) ; 
 return ret ; 
 } 
 + 
 + public static void putQuadColor ( WorldRenderer renderer , BakedQuad quad , int color ) 
 + { 
 + float cr = color & 0xFF ; 
 + float cg = ( color > > > 8 ) & 0xFF ; 
 + float cb = ( color > > > 16 ) & 0xFF ; 
 + float ca = ( color > > > 24 ) & 0xFF ; 
 + for ( int i = 0 ; i < 4 ; i + + ) 
 + { 
 + int vc = quad . getVertexData ( ) [ 3 + 7 * i ] ; 
 + float vcr = vc & 0xFF ; 
 + float vcg = ( vc > > > 8 ) & 0xFF ; 
 + float vcb = ( vc > > > 16 ) & 0xFF ; 
 + float vca = ( vc > > > 24 ) & 0xFF ; 
 + int ncr = Math . min ( 0xFF , ( int ) ( cr * vcr / 0xFF ) ) ; 
 + int ncg = Math . min ( 0xFF , ( int ) ( cg * vcg / 0xFF ) ) ; 
 + int ncb = Math . min ( 0xFF , ( int ) ( cb * vcb / 0xFF ) ) ; 
 + int nca = Math . min ( 0xFF , ( int ) ( ca * vca / 0xFF ) ) ; 
 + renderer . putColorRGBA ( renderer . getColorIndex ( i + 1 ) , ncr , ncg , ncb , nca ) ; 
 + } 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / model / IColoredBakedQuad . java b / src / main / java / net / minecraftforge / client / model / IColoredBakedQuad . java 
 new file mode 100644 
 index 0000000 . . 95fce88 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / model / IColoredBakedQuad . java 
 @ @ - 0 , 0 + 1 , 14 @ @ 
 + package net . minecraftforge . client . model ; 
 + 
 + import net . minecraft . client . renderer . block . model . BakedQuad ; 
 + import net . minecraft . util . EnumFacing ; 
 + 
 + public interface IColoredBakedQuad { 
 + public static class ColoredBakedQuad extends BakedQuad implements IColoredBakedQuad 
 + { 
 + public ColoredBakedQuad ( int [ ] data , int tintIndex , EnumFacing side ) 
 + { 
 + super ( data , tintIndex , side ) ; 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 index ca0f3fb . . ca6ab30 100644 
 - - - a / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 + + + b / src / main / java / net / minecraftforge / client / model / b3d / B3DLoader . java 
 @ @ - 26 , 6 + 26 , 7 @ @ import net . minecraft . item . ItemStack ; 
 import net . minecraft . util . EnumFacing ; 
 import net . minecraft . util . ResourceLocation ; 
 import net . minecraftforge . client . model . Attributes ; 
 + import net . minecraftforge . client . model . IColoredBakedQuad . ColoredBakedQuad ; 
 import net . minecraftforge . client . model . ICustomModelLoader ; 
 import net . minecraftforge . client . model . IFlexibleBakedModel ; 
 import net . minecraftforge . client . model . IModel ; 
 @ @ - 465 , 7 + 466 , 7 @ @ public class B3DLoader implements ICustomModelLoader 
 buf . flip ( ) ; 
 int [ ] data = new int [ VERTICES _ IN _ QUAD * format . getNextOffset ( ) / BYTES _ IN _ INT ] ; 
 buf . asIntBuffer ( ) . get ( data ) ; 
 - builder . add ( new BakedQuad ( data , - 1 , EnumFacing . getFacingFromVector ( f . getNormal ( ) . x , f . getNormal ( ) . y , f . getNormal ( ) . z ) ) ) ; 
 + builder . add ( new ColoredBakedQuad ( data , - 1 , EnumFacing . getFacingFromVector ( f . getNormal ( ) . x , f . getNormal ( ) . y , f . getNormal ( ) . z ) ) ) ; 
 } 
 quads = builder . build ( ) ; 
 } 
 diff - - git a / src / main / resources / forge _ at . cfg b / src / main / resources / forge _ at . cfg 
 index 1aa9b2a . . 8016e3a 100644 
 - - - a / src / main / resources / forge _ at . cfg 
 + + + b / src / main / resources / forge _ at . cfg 
 @ @ - 152 , 3 + 152 , 5 @ @ public net . minecraft . client . resources . model . WeightedBakedModel field _ 177565 _ b # 
 # EnumFacing 
 public net . minecraft . util . EnumFacing field _ 82609 _ l # VALUES 
 public net . minecraft . util . EnumFacing field _ 176754 _ o # HORIZONTALS 
 + public net . minecraft . client . renderer . WorldRenderer func _ 78909 _ a ( I ) I # getColorIndex 
 + public net . minecraft . client . renderer . WorldRenderer func _ 178972 _ a ( IIIII ) V # putColorRGBA

NEAREST DIFF:
diff - - git a / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch b / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch 
 index 8e74e13 . . db5e237 100644 
 - - - a / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch 
 + + + b / patches / minecraft / net / minecraft / client / renderer / WorldRenderer . java . patch 
 @ @ - 9 , 7 + 9 , 15 @ @ 
 public static int field _ 78922 _ b ; 
 public int field _ 78923 _ c ; 
 public int field _ 78920 _ d ; 
 - @ @ - 157 , 7 + 157 , 7 @ @ 
 + @ @ - 132 , 6 + 132 , 7 @ @ 
 + { 
 + + + field _ 78922 _ b ; 
 + RenderBlocks renderblocks = new RenderBlocks ( chunkcache ) ; 
 + + net . minecraftforge . client . ForgeHooksClient . setWorldRendererRB ( renderblocks ) ; 
 + this . field _ 78917 _ C = 0 ; 
 + this . field _ 147894 _ y = null ; 
 + 
 + @ @ - 157 , 7 + 158 , 7 @ @ 
 this . func _ 147890 _ b ( k2 ) ; 
 } 
 
 @ @ - 18 , 7 + 26 , 7 @ @ 
 { 
 TileEntity tileentity = chunkcache . func _ 147438 _ o ( j3 , l2 , i3 ) ; 
 
 - @ @ - 173 , 7 + 173 , 9 @ @ 
 + @ @ - 173 , 7 + 174 , 9 @ @ 
 { 
 flag = true ; 
 } 
 @ @ - 29 , 12 + 37 , 21 @ @ 
 { 
 flag1 | = renderblocks . func _ 147805 _ b ( block , j3 , l2 , i3 ) ; 
 
 - @ @ - 232 , 21 + 234 , 22 @ @ 
 + @ @ - 210 , 6 + 213 , 7 @ @ 
 + break ; 
 + } 
 + } 
 + + net . minecraftforge . client . ForgeHooksClient . setWorldRendererRB ( null ) ; 
 + } 
 + 
 + HashSet hashset1 = new HashSet ( ) ; 
 + @ @ - 232 , 21 + 236 , 23 @ @ 
 GL11 . glTranslatef ( - 8 . 0F , - 8 . 0F , - 8 . 0F ) ; 
 GL11 . glScalef ( f , f , f ) ; 
 GL11 . glTranslatef ( 8 . 0F , 8 . 0F , 8 . 0F ) ; 
 - field _ 78941 _ z . func _ 78382 _ b ( ) ; 
 - field _ 78941 _ z . func _ 78373 _ b ( ( double ) ( - this . field _ 78923 _ c ) , ( double ) ( - this . field _ 78920 _ d ) , ( double ) ( - this . field _ 78921 _ e ) ) ; 
 + + net . minecraftforge . client . ForgeHooksClient . onPreRenderWorld ( this , p _ 147890 _ 1 _ ) ; 
 + Tessellator . field _ 78398 _ a . func _ 78382 _ b ( ) ; 
 + Tessellator . field _ 78398 _ a . func _ 78373 _ b ( ( double ) ( - this . field _ 78923 _ c ) , ( double ) ( - this . field _ 78920 _ d ) , ( double ) ( - this . field _ 78921 _ e ) ) ; 
 } 
 @ @ - 48 , 8 + 65 , 8 @ @ 
 } 
 
 - this . field _ 78917 _ C + = field _ 78941 _ z . func _ 78381 _ a ( ) ; 
 - + / / ForgeHooksClient . afterRenderPass ( l1 ) ; Noop fo now , TODO : Event if anyone needs 
 + this . field _ 78917 _ C + = Tessellator . field _ 78398 _ a . func _ 78381 _ a ( ) ; 
 + + net . minecraftforge . client . ForgeHooksClient . onPostRenderWorld ( this , p _ 147891 _ 1 _ ) ; 
 GL11 . glPopMatrix ( ) ; 
 GL11 . glEndList ( ) ; 
 - field _ 78941 _ z . func _ 78373 _ b ( 0 . 0D , 0 . 0D , 0 . 0D ) ; 
 @ @ - 57 , 7 + 74 , 7 @ @ 
 } 
 
 public void func _ 147889 _ b ( EntityLivingBase p _ 147889 _ 1 _ ) 
 - @ @ - 254 , 7 + 257 , 7 @ @ 
 + @ @ - 254 , 7 + 260 , 7 @ @ 
 if ( this . field _ 147894 _ y ! = null & & ! this . field _ 78928 _ m [ 1 ] ) 
 { 
 this . func _ 147890 _ b ( 1 ) ; 
 diff - - git a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 index d80abf1 . . b960a31 100644 
 - - - a / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 + + + b / src / main / java / net / minecraftforge / client / ForgeHooksClient . java 
 @ @ - 35 , 6 + 35 , 7 @ @ import net . minecraft . util . ChatComponentTranslation ; 
 import net . minecraft . util . EnumChatFormatting ; 
 import net . minecraft . util . MathHelper ; 
 import net . minecraft . util . MovingObjectPosition ; 
 + import net . minecraft . world . ChunkCache ; 
 import net . minecraft . world . World ; 
 import net . minecraft . world . biome . BiomeGenBase ; 
 import net . minecraft . client . model . ModelBiped ; 
 @ @ - 42 , 6 + 43 , 7 @ @ import net . minecraft . client . renderer . OpenGlHelper ; 
 import net . minecraft . client . renderer . RenderBlocks ; 
 import net . minecraft . client . renderer . RenderGlobal ; 
 import net . minecraft . client . renderer . Tessellator ; 
 + import net . minecraft . client . renderer . WorldRenderer ; 
 import net . minecraft . client . renderer . entity . RenderItem ; 
 import net . minecraft . client . renderer . texture . TextureManager ; 
 import net . minecraft . client . renderer . texture . TextureMap ; 
 @ @ - 49 , 6 + 51 , 7 @ @ import net . minecraft . client . settings . GameSettings ; 
 import net . minecraftforge . client . IItemRenderer . ItemRenderType ; 
 import net . minecraftforge . client . event . DrawBlockHighlightEvent ; 
 import net . minecraftforge . client . event . RenderHandEvent ; 
 + import net . minecraftforge . client . event . RenderWorldEvent ; 
 import net . minecraftforge . client . event . RenderWorldLastEvent ; 
 import net . minecraftforge . client . event . TextureStitchEvent ; 
 import net . minecraftforge . client . event . sound . PlaySoundEvent17 ; 
 @ @ - 453 , 4 + 456 , 35 @ @ public class ForgeHooksClient 
 MinecraftForge . EVENT _ BUS . post ( e ) ; 
 return e . result ; 
 } 
 + 
 + static RenderBlocks worldRendererRB ; 
 + static int worldRenderPass ; 
 + 
 + public static int getWorldRenderPass ( ) 
 + { 
 + return worldRenderPass ; 
 + } 
 + 
 + public static void setWorldRendererRB ( RenderBlocks renderBlocks ) 
 + { 
 + worldRendererRB = renderBlocks ; 
 + } 
 + 
 + public static void onPreRenderWorld ( WorldRenderer worldRenderer , int pass ) 
 + { 
 + if ( worldRendererRB ! = null ) 
 + { 
 + worldRenderPass = pass ; 
 + MinecraftForge . EVENT _ BUS . post ( new RenderWorldEvent . Pre ( worldRenderer , ( ChunkCache ) worldRendererRB . blockAccess , worldRendererRB , pass ) ) ; 
 + } 
 + } 
 + 
 + public static void onPostRenderWorld ( WorldRenderer worldRenderer , int pass ) 
 + { 
 + if ( worldRendererRB ! = null ) 
 + { 
 + MinecraftForge . EVENT _ BUS . post ( new RenderWorldEvent . Post ( worldRenderer , ( ChunkCache ) worldRendererRB . blockAccess , worldRendererRB , pass ) ) ; 
 + worldRenderPass = - 1 ; 
 + } 
 + } 
 } 
 diff - - git a / src / main / java / net / minecraftforge / client / event / RenderWorldEvent . java b / src / main / java / net / minecraftforge / client / event / RenderWorldEvent . java 
 new file mode 100644 
 index 0000000 . . 5b353f3 
 - - - / dev / null 
 + + + b / src / main / java / net / minecraftforge / client / event / RenderWorldEvent . java 
 @ @ - 0 , 0 + 1 , 39 @ @ 
 + package net . minecraftforge . client . event ; 
 + 
 + import cpw . mods . fml . common . eventhandler . Event ; 
 + import net . minecraft . client . renderer . RenderBlocks ; 
 + import net . minecraft . client . renderer . WorldRenderer ; 
 + import net . minecraft . world . ChunkCache ; 
 + 
 + public abstract class RenderWorldEvent extends Event 
 + { 
 + public final WorldRenderer renderer ; 
 + public final ChunkCache chunkCache ; 
 + public final RenderBlocks renderBlocks ; 
 + public final int pass ; 
 + 
 + public RenderWorldEvent ( WorldRenderer renderer , ChunkCache chunkCache , RenderBlocks renderBlocks , int pass ) 
 + { 
 + this . renderer = renderer ; 
 + this . chunkCache = chunkCache ; 
 + this . renderBlocks = renderBlocks ; 
 + this . pass = pass ; 
 + } 
 + 
 + / * * 
 + * Fired when 16x16x16 chunk area is being redrawn . 
 + * Fired after GL state is setup , before tessellator is started . 
 + * / 
 + public static class Pre extends RenderWorldEvent 
 + { 
 + public Pre ( WorldRenderer renderer , ChunkCache chunkCache , RenderBlocks renderBlocks , int pass ) { super ( renderer , chunkCache , renderBlocks , pass ) ; } 
 + } 
 + 
 + / * * 
 + * Fired after the tessellator is stopped , before the display list is ended . 
 + * / 
 + public static class Post extends RenderWorldEvent 
 + { 
 + public Post ( WorldRenderer renderer , ChunkCache chunkCache , RenderBlocks renderBlocks , int pass ) { super ( renderer , chunkCache , renderBlocks , pass ) ; } 
 + } 
 + }
