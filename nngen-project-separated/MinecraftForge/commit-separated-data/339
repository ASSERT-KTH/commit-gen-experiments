BLEU SCORE: 0.014199193612838947

TEST MSG: Changed BlockFluidBase " fog " color use color from Fluid getColor ( ) method
GENERATED MSG: Fix errors in test mods

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java <nl> index 00c2bb0 . . fa338dd 100644 <nl> - - - a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java <nl> + + + b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java <nl> @ @ - 22 , 6 + 22 , 11 @ @ package net . minecraftforge . fluids ; <nl> import java . util . Map ; <nl> import java . util . Random ; <nl> <nl> + import javax . annotation . Nonnull ; <nl> + <nl> + import com . google . common . collect . ImmutableList ; <nl> + import com . google . common . collect . Maps ; <nl> + <nl> import net . minecraft . block . Block ; <nl> import net . minecraft . block . BlockLiquid ; <nl> import net . minecraft . block . material . Material ; <nl> @ @ - 34 , 10 + 39 , 10 @ @ import net . minecraft . entity . Entity ; <nl> import net . minecraft . init . Blocks ; <nl> import net . minecraft . init . Items ; <nl> import net . minecraft . item . Item ; <nl> + import net . minecraft . util . BlockRenderLayer ; <nl> + import net . minecraft . util . EnumFacing ; <nl> import net . minecraft . util . math . AxisAlignedBB ; <nl> import net . minecraft . util . math . BlockPos ; <nl> - import net . minecraft . util . EnumFacing ; <nl> - import net . minecraft . util . BlockRenderLayer ; <nl> import net . minecraft . util . math . Vec3d ; <nl> import net . minecraft . world . IBlockAccess ; <nl> import net . minecraft . world . World ; <nl> @ @ - 48 , 11 + 53 , 6 @ @ import net . minecraftforge . common . property . PropertyFloat ; <nl> import net . minecraftforge . fml . relauncher . Side ; <nl> import net . minecraftforge . fml . relauncher . SideOnly ; <nl> <nl> - import com . google . common . collect . ImmutableList ; <nl> - import com . google . common . collect . Maps ; <nl> - <nl> - import javax . annotation . Nonnull ; <nl> - <nl> / * * <nl> * This is a base implementation for Fluid blocks . <nl> * <nl> @ @ - 728 , 4 + 728 , 22 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock <nl> { <nl> return NULL _ AABB ; <nl> } <nl> + <nl> + @ Override <nl> + @ SideOnly ( Side . CLIENT ) <nl> + public Vec3d getFogColor ( World world , BlockPos pos , IBlockState state , Entity entity , Vec3d originalColor , float partialTicks ) <nl> + { <nl> + if ( getFluid ( ) ! = null ) <nl> + { <nl> + int color = getFluid ( ) . getColor ( ) ; <nl> + float red = ( color > > 16 & 0xFF ) / 255 . 0F ; <nl> + float green = ( color > > 8 & 0xFF ) / 255 . 0F ; <nl> + float blue = ( color & 0xFF ) / 255 . 0F ; <nl> + return new Vec3d ( red , green , blue ) ; <nl> + } <nl> + else <nl> + { <nl> + return super . getFogColor ( world , pos , state , entity , originalColor , partialTicks ) ; <nl> + } <nl> + } <nl> } <nl> diff - - git a / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java <nl> index ff28315 . . be2b67c 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java <nl> @ @ - 17 , 72 + 17 , 111 @ @ import net . minecraft . world . World ; <nl> import net . minecraftforge . client . event . ModelRegistryEvent ; <nl> import net . minecraftforge . client . model . ModelLoader ; <nl> import net . minecraftforge . event . RegistryEvent ; <nl> + import net . minecraftforge . fluids . BlockFluidBase ; <nl> import net . minecraftforge . fluids . BlockFluidClassic ; <nl> import net . minecraftforge . fluids . Fluid ; <nl> import net . minecraftforge . fluids . FluidRegistry ; <nl> import net . minecraftforge . fml . common . Mod ; <nl> import net . minecraftforge . fml . common . Mod . EventBusSubscriber ; <nl> + import net . minecraftforge . fml . common . Mod . EventHandler ; <nl> + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; <nl> import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; <nl> import net . minecraftforge . fml . common . registry . GameRegistry . ObjectHolder ; <nl> import net . minecraftforge . fml . relauncher . Side ; <nl> <nl> @ EventBusSubscriber <nl> - @ Mod ( modid = FogColorInsideMaterialTest . MOD _ ID , name = " FogColor inside material debug . " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> + @ Mod ( modid = FogColorInsideMaterialTest . MODID , name = " FogColor inside material debug . " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) <nl> public class FogColorInsideMaterialTest <nl> { <nl> + static final boolean ENABLED = false ; / / < - - enable mod <nl> + static int color = 0xFFd742f4 ; / / < - - change value for testing <nl> <nl> - public static final String MOD _ ID = " fogcolorinsidematerialtest " ; <nl> + public static final String MODID = " fogcolorinsidematerialtest " ; <nl> <nl> - @ ObjectHolder ( " test _ fluid " ) <nl> + static <nl> + { <nl> + if ( ENABLED ) <nl> + { <nl> + FluidRegistry . enableUniversalBucket ( ) ; <nl> + } <nl> + } <nl> + <nl> + public static final Fluid SLIME = new Fluid ( " slime " , new ResourceLocation ( MODID , " slime _ still " ) , new ResourceLocation ( MODID , " slime _ flow " ) ) { <nl> + @ Override <nl> + public int getColor ( ) <nl> + { <nl> + return color ; <nl> + } <nl> + } ; <nl> + <nl> + @ ObjectHolder ( " slime " ) <nl> + public static final BlockFluidBase SLIME _ BLOCK = null ; <nl> + @ ObjectHolder ( " test _ fluid " ) <nl> public static final Block FLUID _ BLOCK = null ; <nl> - @ ObjectHolder ( " test _ fluid " ) <nl> + @ ObjectHolder ( " test _ fluid " ) <nl> public static final Item FLUID _ ITEM = null ; <nl> <nl> - private static final ResourceLocation testFluidRegistryName = new ResourceLocation ( MOD _ ID , " test _ fluid " ) ; <nl> + private static final ResourceLocation RES _ LOC = new ResourceLocation ( MODID , " slime " ) ; <nl> + private static final ResourceLocation testFluidRegistryName = new ResourceLocation ( MODID , " test _ fluid " ) ; <nl> + <nl> + @ EventHandler <nl> + public void preInit ( FMLPreInitializationEvent event ) <nl> + { <nl> + if ( ENABLED ) <nl> + { <nl> + FluidRegistry . registerFluid ( SLIME ) ; <nl> + FluidRegistry . addBucketForFluid ( SLIME ) ; <nl> + } <nl> + } <nl> <nl> @ SubscribeEvent <nl> public static void registerBlocks ( RegistryEvent . Register < Block > event ) <nl> { <nl> - Fluid fluid = new Fluid ( " fog _ test " , Blocks . WATER . getRegistryName ( ) , Blocks . FLOWING _ WATER . getRegistryName ( ) ) ; <nl> - FluidRegistry . registerFluid ( fluid ) ; <nl> - Block fluidBlock = new BlockFluidClassic ( fluid , Material . WATER ) <nl> + if ( ENABLED ) <nl> { <nl> - @ Override <nl> - public Vec3d getFogColor ( World world , BlockPos pos , IBlockState state , Entity entity , Vec3d originalColor , float partialTicks ) <nl> + event . getRegistry ( ) . register ( ( new BlockFluidClassic ( SLIME , Material . WATER ) ) . setRegistryName ( RES _ LOC ) . setUnlocalizedName ( RES _ LOC . toString ( ) ) ) ; <nl> + Fluid fluid = new Fluid ( " fog _ test " , Blocks . WATER . getRegistryName ( ) , Blocks . FLOWING _ WATER . getRegistryName ( ) ) ; <nl> + FluidRegistry . registerFluid ( fluid ) ; <nl> + Block fluidBlock = new BlockFluidClassic ( fluid , Material . WATER ) <nl> { <nl> - return new Vec3d ( 0 . 6F , 0 . 1F , 0 . 0F ) ; <nl> - } <nl> - } ; <nl> - fluidBlock . setCreativeTab ( CreativeTabs . BUILDING _ BLOCKS ) ; <nl> - fluidBlock . setUnlocalizedName ( MOD _ ID + " . test _ fluid " ) ; <nl> - fluidBlock . setRegistryName ( testFluidRegistryName ) ; <nl> - event . getRegistry ( ) . register ( fluidBlock ) ; <nl> + @ Override <nl> + public Vec3d getFogColor ( World world , BlockPos pos , IBlockState state , Entity entity , Vec3d originalColor , float partialTicks ) <nl> + { <nl> + return new Vec3d ( 0 . 6F , 0 . 1F , 0 . 0F ) ; <nl> + } <nl> + } ; <nl> + event . getRegistry ( ) . register ( fluidBlock . setCreativeTab ( CreativeTabs . BUILDING _ BLOCKS ) . setUnlocalizedName ( MODID + " . test _ fluid " ) . setRegistryName ( testFluidRegistryName ) ) ; <nl> + } <nl> } <nl> <nl> @ SubscribeEvent <nl> public static void registerItems ( RegistryEvent . Register < Item > event ) <nl> { <nl> - event . getRegistry ( ) . register ( new ItemBlock ( FLUID _ BLOCK ) . setRegistryName ( testFluidRegistryName ) ) ; <nl> + if ( ENABLED ) <nl> + { <nl> + event . getRegistry ( ) . register ( new ItemBlock ( FLUID _ BLOCK ) . setRegistryName ( testFluidRegistryName ) ) ; <nl> + } <nl> } <nl> <nl> - @ EventBusSubscriber ( value = Side . CLIENT , modid = MOD _ ID ) <nl> + @ EventBusSubscriber ( value = Side . CLIENT , modid = MODID ) <nl> public static class ClientEventHandler <nl> { <nl> @ SubscribeEvent <nl> public static void registerModels ( ModelRegistryEvent event ) <nl> { <nl> - ModelResourceLocation fluidLocation = new ModelResourceLocation ( testFluidRegistryName , " fluid " ) ; <nl> - ModelLoader . registerItemVariants ( FLUID _ ITEM ) ; <nl> - ModelLoader . setCustomMeshDefinition ( FLUID _ ITEM , stack - > fluidLocation ) ; <nl> - ModelLoader . setCustomStateMapper ( FLUID _ BLOCK , new StateMapperBase ( ) <nl> + if ( ENABLED ) <nl> { <nl> - @ Override <nl> - protected ModelResourceLocation getModelResourceLocation ( IBlockState state ) <nl> - { <nl> - return fluidLocation ; <nl> - } <nl> - } ) ; <nl> + ModelResourceLocation fluidLocation = new ModelResourceLocation ( testFluidRegistryName , " fluid " ) ; <nl> + ModelLoader . registerItemVariants ( FLUID _ ITEM ) ; <nl> + ModelLoader . setCustomMeshDefinition ( FLUID _ ITEM , stack - > fluidLocation ) ; <nl> + ModelLoader . setCustomStateMapper ( FLUID _ BLOCK , new StateMapperBase ( ) { <nl> + @ Override <nl> + protected ModelResourceLocation getModelResourceLocation ( IBlockState state ) <nl> + { <nl> + return fluidLocation ; <nl> + } <nl> + } ) ; <nl> + } <nl> } <nl> } <nl> - <nl> } <nl> diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / slime . json b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / slime . json <nl> new file mode 100644 <nl> index 0000000 . . edce38c <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / slime . json <nl> @ @ - 0 , 0 + 1 , 38 @ @ <nl> + { <nl> + " forge _ marker " : 1 , <nl> + " defaults " : { <nl> + " textures " : { <nl> + " particle " : " blocks / slime " , <nl> + " all " : " examplemod : blocks / slime _ flow " <nl> + } , <nl> + " model " : " forge : fluid " , <nl> + 	 " custom " : { " fluid " : " slime " } , <nl> + 	 " uvlock " : false <nl> + } , <nl> + " variants " : { <nl> + " normal " : [ { <nl> + <nl> + } ] , <nl> + " inventory " : [ { <nl> + <nl> + } ] , <nl> + " level " : { <nl> + " 0 " : { } , <nl> + " 1 " : { } , <nl> + " 2 " : { } , <nl> + " 3 " : { } , <nl> + " 4 " : { } , <nl> + " 5 " : { } , <nl> + " 6 " : { } , <nl> + " 7 " : { } , <nl> + " 8 " : { } , <nl> + " 9 " : { } , <nl> + " 10 " : { } , <nl> + " 11 " : { } , <nl> + " 12 " : { } , <nl> + " 13 " : { } , <nl> + " 14 " : { } , <nl> + " 15 " : { } <nl> + } <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json <nl> deleted file mode 100644 <nl> index f3e391e . . 0000000 <nl> - - - a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json <nl> + + + / dev / null <nl> @ @ - 1 , 15 + 0 , 0 @ @ <nl> - { <nl> - 	 " forge _ marker " : 1 , <nl> - 	 " defaults " : { <nl> - 	 	 " model " : " forge : fluid " <nl> - 	 } , <nl> - 	 " variants " : { <nl> - 	 	 " fluid " : [ <nl> - 	 	 	 { <nl> - 	 	 	 	 " custom " : { <nl> - 	 	 	 	 	 " fluid " : " water " <nl> - 	 	 	 	 } <nl> - 	 	 	 } <nl> - 	 	 ] <nl> - 	 } <nl> - } <nl> diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / pack . mcmeta b / src / test / resources / assets / fogcolorinsidematerialtest / pack . mcmeta <nl> new file mode 100644 <nl> index 0000000 . . 0e24fc3 <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / fogcolorinsidematerialtest / pack . mcmeta <nl> @ @ - 0 , 0 + 1 , 7 @ @ <nl> + { <nl> + " pack " : { <nl> + " description " : " mod resources " , <nl> + " pack _ format " : 3 , <nl> + " _ comment " : " A pack _ format of 3 should be used starting with Minecraft 1 . 11 . All resources , including language files , should be lowercase ( eg : en _ us . lang ) . A pack _ format of 2 will load your mod resources with LegacyV2Adapter , which requires language files to have uppercase letters ( eg : en _ US . lang ) . " <nl> + } <nl> + } <nl> diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / test _ fluid . json b / src / test / resources / assets / fogcolorinsidematerialtest / test _ fluid . json <nl> new file mode 100644 <nl> index 0000000 . . f3e391e <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / fogcolorinsidematerialtest / test _ fluid . json <nl> @ @ - 0 , 0 + 1 , 15 @ @ <nl> + { <nl> + 	 " forge _ marker " : 1 , <nl> + 	 " defaults " : { <nl> + 	 	 " model " : " forge : fluid " <nl> + 	 } , <nl> + 	 " variants " : { <nl> + 	 	 " fluid " : [ <nl> + 	 	 	 { <nl> + 	 	 	 	 " custom " : { <nl> + 	 	 	 	 	 " fluid " : " water " <nl> + 	 	 	 	 } <nl> + 	 	 	 } <nl> + 	 	 ] <nl> + 	 } <nl> + } <nl> diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ flow . png b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ flow . png <nl> new file mode 100644 <nl> index 0000000 . . a141405 <nl> Binary files / dev / null and b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ flow . png differ <nl> diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ flow . png . mcmeta b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ flow . png . mcmeta <nl> new file mode 100644 <nl> index 0000000 . . 058b84f <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ flow . png . mcmeta <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + { <nl> + " animation " : { <nl> + " frametime " : 20 <nl> + } <nl> + } <nl> + <nl> diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ overlay . png b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ overlay . png <nl> new file mode 100644 <nl> index 0000000 . . 2c19ed5 <nl> Binary files / dev / null and b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ overlay . png differ <nl> diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ still . png b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ still . png <nl> new file mode 100644 <nl> index 0000000 . . 9538697 <nl> Binary files / dev / null and b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ still . png differ <nl> diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ still . png . mcmeta b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ still . png . mcmeta <nl> new file mode 100644 <nl> index 0000000 . . 090b11d <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ still . png . mcmeta <nl> @ @ - 0 , 0 + 1 , 5 @ @ <nl> + { <nl> + " animation " : { <nl> + " frametime " : 20 <nl> + } <nl> + }
NEAREST DIFF (one line): diff - - git a / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java b / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java <nl> index 274f40e . . d38ee01 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java <nl> @ @ - 19 , 6 + 19 , 7 @ @ import net . minecraft . nbt . NBTTagCompound ; <nl> import net . minecraft . util . NonNullList ; <nl> import net . minecraft . util . ResourceLocation ; <nl> import net . minecraft . world . World ; <nl> + import net . minecraftforge . client . event . ModelRegistryEvent ; <nl> import net . minecraftforge . client . model . ModelLoader ; <nl> import net . minecraftforge . common . MinecraftForge ; <nl> import net . minecraftforge . common . capabilities . ICapabilityProvider ; <nl> @ @ - 52 , 23 + 53 , 11 @ @ public class FluidPlacementTest <nl> <nl> public static final boolean ENABLE = true ; <nl> <nl> - @ SidedProxy <nl> - public static CommonProxy proxy ; <nl> - <nl> - @ EventHandler <nl> - public void preInit ( FMLPreInitializationEvent event ) <nl> - { <nl> - if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) <nl> - return ; <nl> - proxy . preInit ( ) ; <nl> - } <nl> - <nl> - <nl> @ Mod . EventBusSubscriber ( modid = MODID ) <nl> public static class Registration <nl> { <nl> @ SubscribeEvent <nl> - public static void registrBlocks ( RegistryEvent . Register < Block > event ) <nl> + public static void registerBlocks ( RegistryEvent . Register < Block > event ) <nl> { <nl> if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) <nl> return ; <nl> @ @ - 76 , 8 + 65 , 9 @ @ public class FluidPlacementTest <nl> FiniteFluidBlock . instance <nl> ) ; <nl> } <nl> + <nl> @ SubscribeEvent <nl> - public static void registrItems ( RegistryEvent . Register < Item > event ) <nl> + public static void registerItems ( RegistryEvent . Register < Item > event ) <nl> { <nl> if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) <nl> return ; <nl> @ @ - 90 , 20 + 80 , 14 @ @ public class FluidPlacementTest <nl> ) ; <nl> MinecraftForge . EVENT _ BUS . register ( FluidContainer . instance ) ; <nl> } <nl> - } <nl> - <nl> - public static class CommonProxy { <nl> - public void preInit ( ) { } <nl> - } <nl> - public static class ServerProxy extends CommonProxy { } <nl> - <nl> - public static class ClientProxy extends CommonProxy <nl> - { <nl> - private static ModelResourceLocation fluidLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + FiniteFluidBlock . name , " normal " ) ; <nl> <nl> - @ Override <nl> - public void preInit ( ) <nl> + @ SubscribeEvent <nl> + public static void registerModels ( ModelRegistryEvent event ) <nl> { <nl> + if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) <nl> + return ; <nl> + ModelResourceLocation fluidLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + FiniteFluidBlock . name , " normal " ) ; <nl> + <nl> Item fluid = Item . getItemFromBlock ( FiniteFluidBlock . instance ) ; <nl> ModelLoader . setCustomModelResourceLocation ( EmptyFluidContainer . instance , 0 , new ModelResourceLocation ( " forge : bucket " , " inventory " ) ) ; <nl> ModelLoader . setBucketModelDefinition ( FluidContainer . instance ) ; <nl> diff - - git a / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java <nl> index caa4e3a . . 839227a 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java <nl> @ @ - 9 , 6 + 9 , 7 @ @ import net . minecraft . creativetab . CreativeTabs ; <nl> import net . minecraft . entity . Entity ; <nl> import net . minecraft . item . Item ; <nl> import net . minecraft . item . ItemBlock ; <nl> + import net . minecraft . util . ResourceLocation ; <nl> import net . minecraft . util . math . BlockPos ; <nl> import net . minecraft . util . math . Vec3d ; <nl> import net . minecraft . world . World ; <nl> @ @ - 34 , 6 + 35 , 8 @ @ public class FogColorInsideMaterialTest <nl> @ ObjectHolder ( " test _ fluid " ) <nl> public static final Item FLUID _ ITEM = null ; <nl> <nl> + private static final ResourceLocation testFluidRegistryName = new ResourceLocation ( MOD _ ID , " test _ fluid " ) ; <nl> + <nl> @ SubscribeEvent <nl> public static void registerBlocks ( RegistryEvent . Register < Block > event ) <nl> { <nl> @ @ - 46 , 21 + 49 , 21 @ @ public class FogColorInsideMaterialTest <nl> } <nl> } ; <nl> fluid . setCreativeTab ( CreativeTabs . BUILDING _ BLOCKS ) ; <nl> - fluid . setUnlocalizedName ( MOD _ ID + " : " + " test _ fluid " ) ; <nl> - fluid . setRegistryName ( " test _ fluid " ) ; <nl> + fluid . setUnlocalizedName ( testFluidRegistryName . toString ( ) ) ; <nl> + fluid . setRegistryName ( testFluidRegistryName ) ; <nl> event . getRegistry ( ) . register ( fluid ) ; <nl> } <nl> <nl> @ SubscribeEvent <nl> public static void registerItems ( RegistryEvent . Register < Item > event ) <nl> { <nl> - event . getRegistry ( ) . register ( new ItemBlock ( FLUID _ BLOCK ) . setRegistryName ( FLUID _ BLOCK . getRegistryName ( ) ) ) ; <nl> + event . getRegistry ( ) . register ( new ItemBlock ( FLUID _ BLOCK ) . setRegistryName ( testFluidRegistryName ) ) ; <nl> } <nl> <nl> @ SubscribeEvent <nl> public static void registerModels ( ModelRegistryEvent event ) <nl> { <nl> - ModelResourceLocation fluidLocation = new ModelResourceLocation ( MOD _ ID . toLowerCase ( ) + " : test _ fluid " , " fluid " ) ; <nl> + ModelResourceLocation fluidLocation = new ModelResourceLocation ( testFluidRegistryName , " fluid " ) ; <nl> ModelLoader . registerItemVariants ( FLUID _ ITEM ) ; <nl> ModelLoader . setCustomMeshDefinition ( FLUID _ ITEM , stack - > fluidLocation ) ; <nl> ModelLoader . setCustomStateMapper ( FLUID _ BLOCK , new StateMapperBase ( ) <nl> diff - - git a / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java b / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java <nl> index 12e330c . . e397359 100644 <nl> - - - a / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java <nl> + + + b / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java <nl> @ @ - 20 , 7 + 20 , 7 @ @ public class ItemCanDestroyBlocksInCreativeTest <nl> public static class Registration <nl> { <nl> @ SubscribeEvent <nl> - public static void registrItems ( RegistryEvent . Register < Item > event ) <nl> + public static void registerItems ( RegistryEvent . Register < Item > event ) <nl> { <nl> if ( ! ENABLE ) <nl> return ; <nl> diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json <nl> index c9f4933 . . f3e391e 100644 <nl> - - - a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json <nl> + + + b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json <nl> @ @ - 7 , 7 + 7 , 7 @ @ <nl> 	 	 " fluid " : [ <nl> 	 	 	 { <nl> 	 	 	 	 " custom " : { <nl> - 	 	 	 	 	 " fluid " : " test _ fluid " <nl> + 	 	 	 	 	 " fluid " : " water " <nl> 	 	 	 	 } <nl> 	 	 	 } <nl> 	 	 ] <nl> diff - - git a / src / test / resources / assets / item _ can _ destroy _ blocks _ in _ creative _ test / models / item / item _ test . json b / src / test / resources / assets / item _ can _ destroy _ blocks _ in _ creative _ test / models / item / item _ test . json <nl> new file mode 100644 <nl> index 0000000 . . 15928e0 <nl> - - - / dev / null <nl> + + + b / src / test / resources / assets / item _ can _ destroy _ blocks _ in _ creative _ test / models / item / item _ test . json <nl> @ @ - 0 , 0 + 1 , 6 @ @ <nl> + { <nl> + " parent " : " item / generated " , <nl> + " textures " : { <nl> + " layer0 " : " items / beef _ cooked " <nl> + } <nl> + } <nl> \ No newline at end of file

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java 
 index 00c2bb0 . . fa338dd 100644 
 - - - a / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java 
 + + + b / src / main / java / net / minecraftforge / fluids / BlockFluidBase . java 
 @ @ - 22 , 6 + 22 , 11 @ @ package net . minecraftforge . fluids ; 
 import java . util . Map ; 
 import java . util . Random ; 
 
 + import javax . annotation . Nonnull ; 
 + 
 + import com . google . common . collect . ImmutableList ; 
 + import com . google . common . collect . Maps ; 
 + 
 import net . minecraft . block . Block ; 
 import net . minecraft . block . BlockLiquid ; 
 import net . minecraft . block . material . Material ; 
 @ @ - 34 , 10 + 39 , 10 @ @ import net . minecraft . entity . Entity ; 
 import net . minecraft . init . Blocks ; 
 import net . minecraft . init . Items ; 
 import net . minecraft . item . Item ; 
 + import net . minecraft . util . BlockRenderLayer ; 
 + import net . minecraft . util . EnumFacing ; 
 import net . minecraft . util . math . AxisAlignedBB ; 
 import net . minecraft . util . math . BlockPos ; 
 - import net . minecraft . util . EnumFacing ; 
 - import net . minecraft . util . BlockRenderLayer ; 
 import net . minecraft . util . math . Vec3d ; 
 import net . minecraft . world . IBlockAccess ; 
 import net . minecraft . world . World ; 
 @ @ - 48 , 11 + 53 , 6 @ @ import net . minecraftforge . common . property . PropertyFloat ; 
 import net . minecraftforge . fml . relauncher . Side ; 
 import net . minecraftforge . fml . relauncher . SideOnly ; 
 
 - import com . google . common . collect . ImmutableList ; 
 - import com . google . common . collect . Maps ; 
 - 
 - import javax . annotation . Nonnull ; 
 - 
 / * * 
 * This is a base implementation for Fluid blocks . 
 * 
 @ @ - 728 , 4 + 728 , 22 @ @ public abstract class BlockFluidBase extends Block implements IFluidBlock 
 { 
 return NULL _ AABB ; 
 } 
 + 
 + @ Override 
 + @ SideOnly ( Side . CLIENT ) 
 + public Vec3d getFogColor ( World world , BlockPos pos , IBlockState state , Entity entity , Vec3d originalColor , float partialTicks ) 
 + { 
 + if ( getFluid ( ) ! = null ) 
 + { 
 + int color = getFluid ( ) . getColor ( ) ; 
 + float red = ( color > > 16 & 0xFF ) / 255 . 0F ; 
 + float green = ( color > > 8 & 0xFF ) / 255 . 0F ; 
 + float blue = ( color & 0xFF ) / 255 . 0F ; 
 + return new Vec3d ( red , green , blue ) ; 
 + } 
 + else 
 + { 
 + return super . getFogColor ( world , pos , state , entity , originalColor , partialTicks ) ; 
 + } 
 + } 
 } 
 diff - - git a / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java 
 index ff28315 . . be2b67c 100644 
 - - - a / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java 
 @ @ - 17 , 72 + 17 , 111 @ @ import net . minecraft . world . World ; 
 import net . minecraftforge . client . event . ModelRegistryEvent ; 
 import net . minecraftforge . client . model . ModelLoader ; 
 import net . minecraftforge . event . RegistryEvent ; 
 + import net . minecraftforge . fluids . BlockFluidBase ; 
 import net . minecraftforge . fluids . BlockFluidClassic ; 
 import net . minecraftforge . fluids . Fluid ; 
 import net . minecraftforge . fluids . FluidRegistry ; 
 import net . minecraftforge . fml . common . Mod ; 
 import net . minecraftforge . fml . common . Mod . EventBusSubscriber ; 
 + import net . minecraftforge . fml . common . Mod . EventHandler ; 
 + import net . minecraftforge . fml . common . event . FMLPreInitializationEvent ; 
 import net . minecraftforge . fml . common . eventhandler . SubscribeEvent ; 
 import net . minecraftforge . fml . common . registry . GameRegistry . ObjectHolder ; 
 import net . minecraftforge . fml . relauncher . Side ; 
 
 @ EventBusSubscriber 
 - @ Mod ( modid = FogColorInsideMaterialTest . MOD _ ID , name = " FogColor inside material debug . " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 + @ Mod ( modid = FogColorInsideMaterialTest . MODID , name = " FogColor inside material debug . " , version = " 1 . 0 " , acceptableRemoteVersions = " * " ) 
 public class FogColorInsideMaterialTest 
 { 
 + static final boolean ENABLED = false ; / / < - - enable mod 
 + static int color = 0xFFd742f4 ; / / < - - change value for testing 
 
 - public static final String MOD _ ID = " fogcolorinsidematerialtest " ; 
 + public static final String MODID = " fogcolorinsidematerialtest " ; 
 
 - @ ObjectHolder ( " test _ fluid " ) 
 + static 
 + { 
 + if ( ENABLED ) 
 + { 
 + FluidRegistry . enableUniversalBucket ( ) ; 
 + } 
 + } 
 + 
 + public static final Fluid SLIME = new Fluid ( " slime " , new ResourceLocation ( MODID , " slime _ still " ) , new ResourceLocation ( MODID , " slime _ flow " ) ) { 
 + @ Override 
 + public int getColor ( ) 
 + { 
 + return color ; 
 + } 
 + } ; 
 + 
 + @ ObjectHolder ( " slime " ) 
 + public static final BlockFluidBase SLIME _ BLOCK = null ; 
 + @ ObjectHolder ( " test _ fluid " ) 
 public static final Block FLUID _ BLOCK = null ; 
 - @ ObjectHolder ( " test _ fluid " ) 
 + @ ObjectHolder ( " test _ fluid " ) 
 public static final Item FLUID _ ITEM = null ; 
 
 - private static final ResourceLocation testFluidRegistryName = new ResourceLocation ( MOD _ ID , " test _ fluid " ) ; 
 + private static final ResourceLocation RES _ LOC = new ResourceLocation ( MODID , " slime " ) ; 
 + private static final ResourceLocation testFluidRegistryName = new ResourceLocation ( MODID , " test _ fluid " ) ; 
 + 
 + @ EventHandler 
 + public void preInit ( FMLPreInitializationEvent event ) 
 + { 
 + if ( ENABLED ) 
 + { 
 + FluidRegistry . registerFluid ( SLIME ) ; 
 + FluidRegistry . addBucketForFluid ( SLIME ) ; 
 + } 
 + } 
 
 @ SubscribeEvent 
 public static void registerBlocks ( RegistryEvent . Register < Block > event ) 
 { 
 - Fluid fluid = new Fluid ( " fog _ test " , Blocks . WATER . getRegistryName ( ) , Blocks . FLOWING _ WATER . getRegistryName ( ) ) ; 
 - FluidRegistry . registerFluid ( fluid ) ; 
 - Block fluidBlock = new BlockFluidClassic ( fluid , Material . WATER ) 
 + if ( ENABLED ) 
 { 
 - @ Override 
 - public Vec3d getFogColor ( World world , BlockPos pos , IBlockState state , Entity entity , Vec3d originalColor , float partialTicks ) 
 + event . getRegistry ( ) . register ( ( new BlockFluidClassic ( SLIME , Material . WATER ) ) . setRegistryName ( RES _ LOC ) . setUnlocalizedName ( RES _ LOC . toString ( ) ) ) ; 
 + Fluid fluid = new Fluid ( " fog _ test " , Blocks . WATER . getRegistryName ( ) , Blocks . FLOWING _ WATER . getRegistryName ( ) ) ; 
 + FluidRegistry . registerFluid ( fluid ) ; 
 + Block fluidBlock = new BlockFluidClassic ( fluid , Material . WATER ) 
 { 
 - return new Vec3d ( 0 . 6F , 0 . 1F , 0 . 0F ) ; 
 - } 
 - } ; 
 - fluidBlock . setCreativeTab ( CreativeTabs . BUILDING _ BLOCKS ) ; 
 - fluidBlock . setUnlocalizedName ( MOD _ ID + " . test _ fluid " ) ; 
 - fluidBlock . setRegistryName ( testFluidRegistryName ) ; 
 - event . getRegistry ( ) . register ( fluidBlock ) ; 
 + @ Override 
 + public Vec3d getFogColor ( World world , BlockPos pos , IBlockState state , Entity entity , Vec3d originalColor , float partialTicks ) 
 + { 
 + return new Vec3d ( 0 . 6F , 0 . 1F , 0 . 0F ) ; 
 + } 
 + } ; 
 + event . getRegistry ( ) . register ( fluidBlock . setCreativeTab ( CreativeTabs . BUILDING _ BLOCKS ) . setUnlocalizedName ( MODID + " . test _ fluid " ) . setRegistryName ( testFluidRegistryName ) ) ; 
 + } 
 } 
 
 @ SubscribeEvent 
 public static void registerItems ( RegistryEvent . Register < Item > event ) 
 { 
 - event . getRegistry ( ) . register ( new ItemBlock ( FLUID _ BLOCK ) . setRegistryName ( testFluidRegistryName ) ) ; 
 + if ( ENABLED ) 
 + { 
 + event . getRegistry ( ) . register ( new ItemBlock ( FLUID _ BLOCK ) . setRegistryName ( testFluidRegistryName ) ) ; 
 + } 
 } 
 
 - @ EventBusSubscriber ( value = Side . CLIENT , modid = MOD _ ID ) 
 + @ EventBusSubscriber ( value = Side . CLIENT , modid = MODID ) 
 public static class ClientEventHandler 
 { 
 @ SubscribeEvent 
 public static void registerModels ( ModelRegistryEvent event ) 
 { 
 - ModelResourceLocation fluidLocation = new ModelResourceLocation ( testFluidRegistryName , " fluid " ) ; 
 - ModelLoader . registerItemVariants ( FLUID _ ITEM ) ; 
 - ModelLoader . setCustomMeshDefinition ( FLUID _ ITEM , stack - > fluidLocation ) ; 
 - ModelLoader . setCustomStateMapper ( FLUID _ BLOCK , new StateMapperBase ( ) 
 + if ( ENABLED ) 
 { 
 - @ Override 
 - protected ModelResourceLocation getModelResourceLocation ( IBlockState state ) 
 - { 
 - return fluidLocation ; 
 - } 
 - } ) ; 
 + ModelResourceLocation fluidLocation = new ModelResourceLocation ( testFluidRegistryName , " fluid " ) ; 
 + ModelLoader . registerItemVariants ( FLUID _ ITEM ) ; 
 + ModelLoader . setCustomMeshDefinition ( FLUID _ ITEM , stack - > fluidLocation ) ; 
 + ModelLoader . setCustomStateMapper ( FLUID _ BLOCK , new StateMapperBase ( ) { 
 + @ Override 
 + protected ModelResourceLocation getModelResourceLocation ( IBlockState state ) 
 + { 
 + return fluidLocation ; 
 + } 
 + } ) ; 
 + } 
 } 
 } 
 - 
 } 
 diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / slime . json b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / slime . json 
 new file mode 100644 
 index 0000000 . . edce38c 
 - - - / dev / null 
 + + + b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / slime . json 
 @ @ - 0 , 0 + 1 , 38 @ @ 
 + { 
 + " forge _ marker " : 1 , 
 + " defaults " : { 
 + " textures " : { 
 + " particle " : " blocks / slime " , 
 + " all " : " examplemod : blocks / slime _ flow " 
 + } , 
 + " model " : " forge : fluid " , 
 + 	 " custom " : { " fluid " : " slime " } , 
 + 	 " uvlock " : false 
 + } , 
 + " variants " : { 
 + " normal " : [ { 
 + 
 + } ] , 
 + " inventory " : [ { 
 + 
 + } ] , 
 + " level " : { 
 + " 0 " : { } , 
 + " 1 " : { } , 
 + " 2 " : { } , 
 + " 3 " : { } , 
 + " 4 " : { } , 
 + " 5 " : { } , 
 + " 6 " : { } , 
 + " 7 " : { } , 
 + " 8 " : { } , 
 + " 9 " : { } , 
 + " 10 " : { } , 
 + " 11 " : { } , 
 + " 12 " : { } , 
 + " 13 " : { } , 
 + " 14 " : { } , 
 + " 15 " : { } 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json 
 deleted file mode 100644 
 index f3e391e . . 0000000 
 - - - a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json 
 + + + / dev / null 
 @ @ - 1 , 15 + 0 , 0 @ @ 
 - { 
 - 	 " forge _ marker " : 1 , 
 - 	 " defaults " : { 
 - 	 	 " model " : " forge : fluid " 
 - 	 } , 
 - 	 " variants " : { 
 - 	 	 " fluid " : [ 
 - 	 	 	 { 
 - 	 	 	 	 " custom " : { 
 - 	 	 	 	 	 " fluid " : " water " 
 - 	 	 	 	 } 
 - 	 	 	 } 
 - 	 	 ] 
 - 	 } 
 - } 
 diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / pack . mcmeta b / src / test / resources / assets / fogcolorinsidematerialtest / pack . mcmeta 
 new file mode 100644 
 index 0000000 . . 0e24fc3 
 - - - / dev / null 
 + + + b / src / test / resources / assets / fogcolorinsidematerialtest / pack . mcmeta 
 @ @ - 0 , 0 + 1 , 7 @ @ 
 + { 
 + " pack " : { 
 + " description " : " mod resources " , 
 + " pack _ format " : 3 , 
 + " _ comment " : " A pack _ format of 3 should be used starting with Minecraft 1 . 11 . All resources , including language files , should be lowercase ( eg : en _ us . lang ) . A pack _ format of 2 will load your mod resources with LegacyV2Adapter , which requires language files to have uppercase letters ( eg : en _ US . lang ) . " 
 + } 
 + } 
 diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / test _ fluid . json b / src / test / resources / assets / fogcolorinsidematerialtest / test _ fluid . json 
 new file mode 100644 
 index 0000000 . . f3e391e 
 - - - / dev / null 
 + + + b / src / test / resources / assets / fogcolorinsidematerialtest / test _ fluid . json 
 @ @ - 0 , 0 + 1 , 15 @ @ 
 + { 
 + 	 " forge _ marker " : 1 , 
 + 	 " defaults " : { 
 + 	 	 " model " : " forge : fluid " 
 + 	 } , 
 + 	 " variants " : { 
 + 	 	 " fluid " : [ 
 + 	 	 	 { 
 + 	 	 	 	 " custom " : { 
 + 	 	 	 	 	 " fluid " : " water " 
 + 	 	 	 	 } 
 + 	 	 	 } 
 + 	 	 ] 
 + 	 } 
 + } 
 diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ flow . png b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ flow . png 
 new file mode 100644 
 index 0000000 . . a141405 
 Binary files / dev / null and b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ flow . png differ 
 diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ flow . png . mcmeta b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ flow . png . mcmeta 
 new file mode 100644 
 index 0000000 . . 058b84f 
 - - - / dev / null 
 + + + b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ flow . png . mcmeta 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + { 
 + " animation " : { 
 + " frametime " : 20 
 + } 
 + } 
 + 
 diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ overlay . png b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ overlay . png 
 new file mode 100644 
 index 0000000 . . 2c19ed5 
 Binary files / dev / null and b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ overlay . png differ 
 diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ still . png b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ still . png 
 new file mode 100644 
 index 0000000 . . 9538697 
 Binary files / dev / null and b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ still . png differ 
 diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ still . png . mcmeta b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ still . png . mcmeta 
 new file mode 100644 
 index 0000000 . . 090b11d 
 - - - / dev / null 
 + + + b / src / test / resources / assets / fogcolorinsidematerialtest / textures / slime _ still . png . mcmeta 
 @ @ - 0 , 0 + 1 , 5 @ @ 
 + { 
 + " animation " : { 
 + " frametime " : 20 
 + } 
 + }

NEAREST DIFF:
diff - - git a / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java b / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java 
 index 274f40e . . d38ee01 100644 
 - - - a / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / FluidPlacementTest . java 
 @ @ - 19 , 6 + 19 , 7 @ @ import net . minecraft . nbt . NBTTagCompound ; 
 import net . minecraft . util . NonNullList ; 
 import net . minecraft . util . ResourceLocation ; 
 import net . minecraft . world . World ; 
 + import net . minecraftforge . client . event . ModelRegistryEvent ; 
 import net . minecraftforge . client . model . ModelLoader ; 
 import net . minecraftforge . common . MinecraftForge ; 
 import net . minecraftforge . common . capabilities . ICapabilityProvider ; 
 @ @ - 52 , 23 + 53 , 11 @ @ public class FluidPlacementTest 
 
 public static final boolean ENABLE = true ; 
 
 - @ SidedProxy 
 - public static CommonProxy proxy ; 
 - 
 - @ EventHandler 
 - public void preInit ( FMLPreInitializationEvent event ) 
 - { 
 - if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) 
 - return ; 
 - proxy . preInit ( ) ; 
 - } 
 - 
 - 
 @ Mod . EventBusSubscriber ( modid = MODID ) 
 public static class Registration 
 { 
 @ SubscribeEvent 
 - public static void registrBlocks ( RegistryEvent . Register < Block > event ) 
 + public static void registerBlocks ( RegistryEvent . Register < Block > event ) 
 { 
 if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) 
 return ; 
 @ @ - 76 , 8 + 65 , 9 @ @ public class FluidPlacementTest 
 FiniteFluidBlock . instance 
 ) ; 
 } 
 + 
 @ SubscribeEvent 
 - public static void registrItems ( RegistryEvent . Register < Item > event ) 
 + public static void registerItems ( RegistryEvent . Register < Item > event ) 
 { 
 if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) 
 return ; 
 @ @ - 90 , 20 + 80 , 14 @ @ public class FluidPlacementTest 
 ) ; 
 MinecraftForge . EVENT _ BUS . register ( FluidContainer . instance ) ; 
 } 
 - } 
 - 
 - public static class CommonProxy { 
 - public void preInit ( ) { } 
 - } 
 - public static class ServerProxy extends CommonProxy { } 
 - 
 - public static class ClientProxy extends CommonProxy 
 - { 
 - private static ModelResourceLocation fluidLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + FiniteFluidBlock . name , " normal " ) ; 
 
 - @ Override 
 - public void preInit ( ) 
 + @ SubscribeEvent 
 + public static void registerModels ( ModelRegistryEvent event ) 
 { 
 + if ( ! ENABLE | | ! ModelFluidDebug . ENABLE ) 
 + return ; 
 + ModelResourceLocation fluidLocation = new ModelResourceLocation ( MODID . toLowerCase ( ) + " : " + FiniteFluidBlock . name , " normal " ) ; 
 + 
 Item fluid = Item . getItemFromBlock ( FiniteFluidBlock . instance ) ; 
 ModelLoader . setCustomModelResourceLocation ( EmptyFluidContainer . instance , 0 , new ModelResourceLocation ( " forge : bucket " , " inventory " ) ) ; 
 ModelLoader . setBucketModelDefinition ( FluidContainer . instance ) ; 
 diff - - git a / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java 
 index caa4e3a . . 839227a 100644 
 - - - a / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / FogColorInsideMaterialTest . java 
 @ @ - 9 , 6 + 9 , 7 @ @ import net . minecraft . creativetab . CreativeTabs ; 
 import net . minecraft . entity . Entity ; 
 import net . minecraft . item . Item ; 
 import net . minecraft . item . ItemBlock ; 
 + import net . minecraft . util . ResourceLocation ; 
 import net . minecraft . util . math . BlockPos ; 
 import net . minecraft . util . math . Vec3d ; 
 import net . minecraft . world . World ; 
 @ @ - 34 , 6 + 35 , 8 @ @ public class FogColorInsideMaterialTest 
 @ ObjectHolder ( " test _ fluid " ) 
 public static final Item FLUID _ ITEM = null ; 
 
 + private static final ResourceLocation testFluidRegistryName = new ResourceLocation ( MOD _ ID , " test _ fluid " ) ; 
 + 
 @ SubscribeEvent 
 public static void registerBlocks ( RegistryEvent . Register < Block > event ) 
 { 
 @ @ - 46 , 21 + 49 , 21 @ @ public class FogColorInsideMaterialTest 
 } 
 } ; 
 fluid . setCreativeTab ( CreativeTabs . BUILDING _ BLOCKS ) ; 
 - fluid . setUnlocalizedName ( MOD _ ID + " : " + " test _ fluid " ) ; 
 - fluid . setRegistryName ( " test _ fluid " ) ; 
 + fluid . setUnlocalizedName ( testFluidRegistryName . toString ( ) ) ; 
 + fluid . setRegistryName ( testFluidRegistryName ) ; 
 event . getRegistry ( ) . register ( fluid ) ; 
 } 
 
 @ SubscribeEvent 
 public static void registerItems ( RegistryEvent . Register < Item > event ) 
 { 
 - event . getRegistry ( ) . register ( new ItemBlock ( FLUID _ BLOCK ) . setRegistryName ( FLUID _ BLOCK . getRegistryName ( ) ) ) ; 
 + event . getRegistry ( ) . register ( new ItemBlock ( FLUID _ BLOCK ) . setRegistryName ( testFluidRegistryName ) ) ; 
 } 
 
 @ SubscribeEvent 
 public static void registerModels ( ModelRegistryEvent event ) 
 { 
 - ModelResourceLocation fluidLocation = new ModelResourceLocation ( MOD _ ID . toLowerCase ( ) + " : test _ fluid " , " fluid " ) ; 
 + ModelResourceLocation fluidLocation = new ModelResourceLocation ( testFluidRegistryName , " fluid " ) ; 
 ModelLoader . registerItemVariants ( FLUID _ ITEM ) ; 
 ModelLoader . setCustomMeshDefinition ( FLUID _ ITEM , stack - > fluidLocation ) ; 
 ModelLoader . setCustomStateMapper ( FLUID _ BLOCK , new StateMapperBase ( ) 
 diff - - git a / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java b / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java 
 index 12e330c . . e397359 100644 
 - - - a / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java 
 + + + b / src / test / java / net / minecraftforge / debug / ItemCanDestroyBlocksInCreativeTest . java 
 @ @ - 20 , 7 + 20 , 7 @ @ public class ItemCanDestroyBlocksInCreativeTest 
 public static class Registration 
 { 
 @ SubscribeEvent 
 - public static void registrItems ( RegistryEvent . Register < Item > event ) 
 + public static void registerItems ( RegistryEvent . Register < Item > event ) 
 { 
 if ( ! ENABLE ) 
 return ; 
 diff - - git a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json 
 index c9f4933 . . f3e391e 100644 
 - - - a / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json 
 + + + b / src / test / resources / assets / fogcolorinsidematerialtest / blockstates / test _ fluid . json 
 @ @ - 7 , 7 + 7 , 7 @ @ 
 	 	 " fluid " : [ 
 	 	 	 { 
 	 	 	 	 " custom " : { 
 - 	 	 	 	 	 " fluid " : " test _ fluid " 
 + 	 	 	 	 	 " fluid " : " water " 
 	 	 	 	 } 
 	 	 	 } 
 	 	 ] 
 diff - - git a / src / test / resources / assets / item _ can _ destroy _ blocks _ in _ creative _ test / models / item / item _ test . json b / src / test / resources / assets / item _ can _ destroy _ blocks _ in _ creative _ test / models / item / item _ test . json 
 new file mode 100644 
 index 0000000 . . 15928e0 
 - - - / dev / null 
 + + + b / src / test / resources / assets / item _ can _ destroy _ blocks _ in _ creative _ test / models / item / item _ test . json 
 @ @ - 0 , 0 + 1 , 6 @ @ 
 + { 
 + " parent " : " item / generated " , 
 + " textures " : { 
 + " layer0 " : " items / beef _ cooked " 
 + } 
 + } 
 \ No newline at end of file
