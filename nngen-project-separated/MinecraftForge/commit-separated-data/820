BLEU SCORE: 0.012637829447572243

TEST MSG: Updated BiomeManager to 1 . 9
GENERATED MSG: Added Stonghold , Village , and Spawn biome management helpers for PR 207

TEST DIFF (one line): diff - - git a / src / main / java / net / minecraftforge / common / BiomeManager . java b / src / main / java / net / minecraftforge / common / BiomeManager . java <nl> index 474bf18 . . 8eb1315 100644 <nl> - - - a / src / main / java / net / minecraftforge / common / BiomeManager . java <nl> + + + b / src / main / java / net / minecraftforge / common / BiomeManager . java <nl> @ @ - 7 , 9 + 7 , 10 @ @ import java . util . List ; <nl> <nl> import com . google . common . collect . ImmutableList ; <nl> <nl> + import net . minecraft . init . Biomes ; <nl> import net . minecraft . util . WeightedRandom ; <nl> import net . minecraft . world . biome . BiomeGenBase ; <nl> - import net . minecraft . world . biome . WorldChunkManager ; <nl> + import net . minecraft . world . biome . BiomeProvider ; <nl> import net . minecraft . world . gen . structure . MapGenVillage ; <nl> import net . minecraftforge . common . util . EnumHelper ; <nl> <nl> @ @ - 24 , 9 + 25 , 9 @ @ public class BiomeManager <nl> <nl> static <nl> { <nl> - oceanBiomes . add ( BiomeGenBase . ocean ) ; <nl> - oceanBiomes . add ( BiomeGenBase . deepOcean ) ; <nl> - oceanBiomes . add ( BiomeGenBase . frozenOcean ) ; <nl> + oceanBiomes . add ( Biomes . ocean ) ; <nl> + oceanBiomes . add ( Biomes . deepOcean ) ; <nl> + oceanBiomes . add ( Biomes . frozenOcean ) ; <nl> } <nl> <nl> private static TrackedList < BiomeEntry > [ ] setupBiomes ( ) <nl> @ @ - 35 , 26 + 36 , 26 @ @ public class BiomeManager <nl> TrackedList < BiomeEntry > [ ] currentBiomes = new TrackedList [ BiomeType . values ( ) . length ] ; <nl> List < BiomeEntry > list = new ArrayList < BiomeEntry > ( ) ; <nl> <nl> - list . add ( new BiomeEntry ( BiomeGenBase . forest , 10 ) ) ; <nl> - list . add ( new BiomeEntry ( BiomeGenBase . roofedForest , 10 ) ) ; <nl> - list . add ( new BiomeEntry ( BiomeGenBase . extremeHills , 10 ) ) ; <nl> - list . add ( new BiomeEntry ( BiomeGenBase . plains , 10 ) ) ; <nl> - list . add ( new BiomeEntry ( BiomeGenBase . birchForest , 10 ) ) ; <nl> - list . add ( new BiomeEntry ( BiomeGenBase . swampland , 10 ) ) ; <nl> + list . add ( new BiomeEntry ( Biomes . forest , 10 ) ) ; <nl> + list . add ( new BiomeEntry ( Biomes . roofedForest , 10 ) ) ; <nl> + list . add ( new BiomeEntry ( Biomes . extremeHills , 10 ) ) ; <nl> + list . add ( new BiomeEntry ( Biomes . plains , 10 ) ) ; <nl> + list . add ( new BiomeEntry ( Biomes . birchForest , 10 ) ) ; <nl> + list . add ( new BiomeEntry ( Biomes . swampland , 10 ) ) ; <nl> <nl> currentBiomes [ BiomeType . WARM . ordinal ( ) ] = new TrackedList < BiomeEntry > ( list ) ; <nl> list . clear ( ) ; <nl> <nl> - list . add ( new BiomeEntry ( BiomeGenBase . forest , 10 ) ) ; <nl> - list . add ( new BiomeEntry ( BiomeGenBase . extremeHills , 10 ) ) ; <nl> - list . add ( new BiomeEntry ( BiomeGenBase . taiga , 10 ) ) ; <nl> - list . add ( new BiomeEntry ( BiomeGenBase . plains , 10 ) ) ; <nl> + list . add ( new BiomeEntry ( Biomes . forest , 10 ) ) ; <nl> + list . add ( new BiomeEntry ( Biomes . extremeHills , 10 ) ) ; <nl> + list . add ( new BiomeEntry ( Biomes . taiga , 10 ) ) ; <nl> + list . add ( new BiomeEntry ( Biomes . plains , 10 ) ) ; <nl> <nl> currentBiomes [ BiomeType . COOL . ordinal ( ) ] = new TrackedList < BiomeEntry > ( list ) ; <nl> list . clear ( ) ; <nl> <nl> - list . add ( new BiomeEntry ( BiomeGenBase . icePlains , 30 ) ) ; <nl> - list . add ( new BiomeEntry ( BiomeGenBase . coldTaiga , 10 ) ) ; <nl> + list . add ( new BiomeEntry ( Biomes . icePlains , 30 ) ) ; <nl> + list . add ( new BiomeEntry ( Biomes . coldTaiga , 10 ) ) ; <nl> <nl> currentBiomes [ BiomeType . ICY . ordinal ( ) ] = new TrackedList < BiomeEntry > ( list ) ; <nl> list . clear ( ) ; <nl> @ @ - 102 , 17 + 103 , 17 @ @ public class BiomeManager <nl> <nl> public static void addSpawnBiome ( BiomeGenBase biome ) <nl> { <nl> - if ( ! WorldChunkManager . allowedBiomes . contains ( biome ) ) <nl> + if ( ! BiomeProvider . allowedBiomes . contains ( biome ) ) <nl> { <nl> - WorldChunkManager . allowedBiomes . add ( biome ) ; <nl> + BiomeProvider . allowedBiomes . add ( biome ) ; <nl> } <nl> } <nl> <nl> public static void removeSpawnBiome ( BiomeGenBase biome ) <nl> { <nl> - if ( WorldChunkManager . allowedBiomes . contains ( biome ) ) <nl> + if ( BiomeProvider . allowedBiomes . contains ( biome ) ) <nl> { <nl> - WorldChunkManager . allowedBiomes . remove ( biome ) ; <nl> + BiomeProvider . allowedBiomes . remove ( biome ) ; <nl> } <nl> } <nl>
NEAREST DIFF (one line): diff - - git a / common / forge _ at . cfg b / common / forge _ at . cfg <nl> index 181de9d . . b9fb01b 100644 <nl> - - - a / common / forge _ at . cfg <nl> + + + b / common / forge _ at . cfg <nl> @ @ - 88 , 4 + 88 , 8 @ @ public xe . H # World / field _ 72993 _ I activeChunkSet <nl> public ln . bc # EntityLiving / field _ 70728 _ aV experienceValue <nl> # GuiFlatPresets <nl> public asr . a ( Ljava / lang / String ; ILxz ; Ljava / util / List ; [ Labm ; ) V # GuiFlatPresets / func _ 82294 _ a <nl> - public asr . a ( Ljava / lang / String ; ILxz ; [ Labm ; ) V # GuiFlatPresets / func _ 82297 _ a <nl> \ No newline at end of file <nl> + public asr . a ( Ljava / lang / String ; ILxz ; [ Labm ; ) V # GuiFlatPresets / func _ 82297 _ a <nl> + # BiomeGenBase <nl> + public xz . * ( ) # Everything protected - > public <nl> + # MapGenVillage <nl> + public - f aea . e # MapGenVillage / field _ 75055 _ e villageSpawnBiomes <nl> \ No newline at end of file <nl> diff - - git a / common / net / minecraftforge / common / BiomeManager . java b / common / net / minecraftforge / common / BiomeManager . java <nl> new file mode 100644 <nl> index 0000000 . . ccf6bdf <nl> - - - / dev / null <nl> + + + b / common / net / minecraftforge / common / BiomeManager . java <nl> @ @ - 0 , 0 + 1 , 70 @ @ <nl> + package net . minecraftforge . common ; <nl> + <nl> + import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> + import java . util . HashSet ; <nl> + import java . util . Set ; <nl> + <nl> + import net . minecraft . src . BiomeGenBase ; <nl> + import net . minecraft . src . ChunkProviderGenerate ; <nl> + import net . minecraft . src . IChunkProvider ; <nl> + import net . minecraft . src . MapGenStronghold ; <nl> + import net . minecraft . src . MapGenVillage ; <nl> + import net . minecraft . src . WorldChunkManager ; <nl> + <nl> + import com . google . common . collect . Lists ; <nl> + <nl> + public class BiomeManager <nl> + { <nl> + public static void addVillageBiome ( BiomeGenBase biome , boolean canSpawn ) <nl> + { <nl> + if ( ! MapGenVillage . villageSpawnBiomes . contains ( biome ) ) <nl> + { <nl> + ArrayList < BiomeGenBase > biomes = new ArrayList < BiomeGenBase > ( MapGenVillage . villageSpawnBiomes ) ; <nl> + biomes . add ( biome ) ; <nl> + MapGenVillage . villageSpawnBiomes = biomes ; <nl> + } <nl> + } <nl> + <nl> + public static void removeVillageBiome ( BiomeGenBase biome ) <nl> + { <nl> + if ( MapGenVillage . villageSpawnBiomes . contains ( biome ) ) <nl> + { <nl> + ArrayList < BiomeGenBase > biomes = new ArrayList < BiomeGenBase > ( MapGenVillage . villageSpawnBiomes ) ; <nl> + biomes . remove ( biome ) ; <nl> + MapGenVillage . villageSpawnBiomes = biomes ; <nl> + } <nl> + } <nl> + <nl> + public static void addStrongholdBiome ( BiomeGenBase biome ) <nl> + { <nl> + if ( ! MapGenStronghold . allowedBiomes . contains ( biome ) ) <nl> + { <nl> + MapGenStronghold . allowedBiomes . add ( biome ) ; <nl> + } <nl> + } <nl> + <nl> + public static void removeStrongholdBiome ( BiomeGenBase biome ) <nl> + { <nl> + if ( MapGenStronghold . allowedBiomes . contains ( biome ) ) <nl> + { <nl> + MapGenStronghold . allowedBiomes . remove ( biome ) ; <nl> + } <nl> + } <nl> + <nl> + public static void addSpawnBiome ( BiomeGenBase biome ) <nl> + { <nl> + if ( ! WorldChunkManager . allowedBiomes . contains ( biome ) ) <nl> + { <nl> + WorldChunkManager . allowedBiomes . add ( biome ) ; <nl> + } <nl> + } <nl> + <nl> + public static void removeSpawnBiome ( BiomeGenBase biome ) <nl> + { <nl> + if ( WorldChunkManager . allowedBiomes . contains ( biome ) ) <nl> + { <nl> + WorldChunkManager . allowedBiomes . remove ( biome ) ; <nl> + } <nl> + } <nl> + } <nl> \ No newline at end of file <nl> diff - - git a / patches / common / net / minecraft / src / MapGenStronghold . java . patch b / patches / common / net / minecraft / src / MapGenStronghold . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 0837f33 <nl> - - - / dev / null <nl> + + + b / patches / common / net / minecraft / src / MapGenStronghold . java . patch <nl> @ @ - 0 , 0 + 1 , 36 @ @ <nl> + - - - . . / src _ base / common / net / minecraft / src / MapGenStronghold . java <nl> + + + + . . / src _ work / common / net / minecraft / src / MapGenStronghold . java <nl> + @ @ - 1 , 6 + 1 , 7 @ @ <nl> + package net . minecraft . src ; <nl> + <nl> + import java . util . ArrayList ; <nl> + + import java . util . Arrays ; <nl> + import java . util . Collections ; <nl> + import java . util . Iterator ; <nl> + import java . util . List ; <nl> + @ @ - 10 , 6 + 11 , 7 @ @ <nl> + <nl> + public class MapGenStronghold extends MapGenStructure <nl> + { <nl> + + public static ArrayList < BiomeGenBase > allowedBiomes = new ArrayList < BiomeGenBase > ( Arrays . asList ( BiomeGenBase . desert , BiomeGenBase . forest , BiomeGenBase . extremeHills , BiomeGenBase . swampland , BiomeGenBase . taiga , BiomeGenBase . icePlains , BiomeGenBase . iceMountains , BiomeGenBase . desertHills , BiomeGenBase . forestHills , BiomeGenBase . extremeHillsEdge , BiomeGenBase . jungle , BiomeGenBase . jungleHills ) ) ; <nl> + public BiomeGenBase [ ] allowedBiomeGenBases ; <nl> + <nl> + / * * <nl> + @ @ - 22 , 7 + 24 , 7 @ @ <nl> + <nl> + public MapGenStronghold ( ) <nl> + { <nl> + - this . allowedBiomeGenBases = new BiomeGenBase [ ] { BiomeGenBase . desert , BiomeGenBase . forest , BiomeGenBase . extremeHills , BiomeGenBase . swampland , BiomeGenBase . taiga , BiomeGenBase . icePlains , BiomeGenBase . iceMountains , BiomeGenBase . desertHills , BiomeGenBase . forestHills , BiomeGenBase . extremeHillsEdge , BiomeGenBase . jungle , BiomeGenBase . jungleHills } ; <nl> + + this . allowedBiomeGenBases = allowedBiomes . toArray ( new BiomeGenBase [ 0 ] ) ; <nl> + this . structureCoords = new ChunkCoordIntPair [ 3 ] ; <nl> + this . field _ 82671 _ h = 32 . 0D ; <nl> + this . field _ 82672 _ i = 3 ; <nl> + @ @ - 30 , 7 + 32 , 7 @ @ <nl> + <nl> + public MapGenStronghold ( Map par1Map ) <nl> + { <nl> + - this . allowedBiomeGenBases = new BiomeGenBase [ ] { BiomeGenBase . desert , BiomeGenBase . forest , BiomeGenBase . extremeHills , BiomeGenBase . swampland , BiomeGenBase . taiga , BiomeGenBase . icePlains , BiomeGenBase . iceMountains , BiomeGenBase . desertHills , BiomeGenBase . forestHills , BiomeGenBase . extremeHillsEdge , BiomeGenBase . jungle , BiomeGenBase . jungleHills } ; <nl> + + this . allowedBiomeGenBases = allowedBiomes . toArray ( new BiomeGenBase [ 0 ] ) ; <nl> + this . structureCoords = new ChunkCoordIntPair [ 3 ] ; <nl> + this . field _ 82671 _ h = 32 . 0D ; <nl> + this . field _ 82672 _ i = 3 ; <nl> diff - - git a / patches / common / net / minecraft / src / WorldChunkManager . java . patch b / patches / common / net / minecraft / src / WorldChunkManager . java . patch <nl> new file mode 100644 <nl> index 0000000 . . 429a2d5 <nl> - - - / dev / null <nl> + + + b / patches / common / net / minecraft / src / WorldChunkManager . java . patch <nl> @ @ - 0 , 0 + 1 , 32 @ @ <nl> + - - - . . / src _ base / common / net / minecraft / src / WorldChunkManager . java <nl> + + + + . . / src _ work / common / net / minecraft / src / WorldChunkManager . java <nl> + @ @ - 3 , 11 + 3 , 14 @ @ <nl> + import cpw . mods . fml . common . Side ; <nl> + import cpw . mods . fml . common . asm . SideOnly ; <nl> + import java . util . ArrayList ; <nl> + + import java . util . Arrays ; <nl> + import java . util . List ; <nl> + import java . util . Random ; <nl> + + import static net . minecraft . src . BiomeGenBase . * ; <nl> + <nl> + public class WorldChunkManager <nl> + { <nl> + + public static ArrayList < BiomeGenBase > allowedBiomes = new ArrayList < BiomeGenBase > ( Arrays . asList ( forest , plains , taiga , taigaHills , forestHills , jungle . jungleHills ) ) ; <nl> + private GenLayer genBiomes ; <nl> + <nl> + / * * A GenLayer containing the indices into BiomeGenBase . biomeList [ ] * / <nl> + @ @ - 23 , 13 + 26 , 7 @ @ <nl> + { <nl> + this . biomeCache = new BiomeCache ( this ) ; <nl> + this . biomesToSpawnIn = new ArrayList ( ) ; <nl> + - this . biomesToSpawnIn . add ( BiomeGenBase . forest ) ; <nl> + - this . biomesToSpawnIn . add ( BiomeGenBase . plains ) ; <nl> + - this . biomesToSpawnIn . add ( BiomeGenBase . taiga ) ; <nl> + - this . biomesToSpawnIn . add ( BiomeGenBase . taigaHills ) ; <nl> + - this . biomesToSpawnIn . add ( BiomeGenBase . forestHills ) ; <nl> + - this . biomesToSpawnIn . add ( BiomeGenBase . jungle ) ; <nl> + - this . biomesToSpawnIn . add ( BiomeGenBase . jungleHills ) ; <nl> + + this . biomesToSpawnIn . addAll ( allowedBiomes ) ; <nl> + } <nl> + <nl> + public WorldChunkManager ( long par1 , WorldType par3WorldType )

TEST DIFF:
diff - - git a / src / main / java / net / minecraftforge / common / BiomeManager . java b / src / main / java / net / minecraftforge / common / BiomeManager . java 
 index 474bf18 . . 8eb1315 100644 
 - - - a / src / main / java / net / minecraftforge / common / BiomeManager . java 
 + + + b / src / main / java / net / minecraftforge / common / BiomeManager . java 
 @ @ - 7 , 9 + 7 , 10 @ @ import java . util . List ; 
 
 import com . google . common . collect . ImmutableList ; 
 
 + import net . minecraft . init . Biomes ; 
 import net . minecraft . util . WeightedRandom ; 
 import net . minecraft . world . biome . BiomeGenBase ; 
 - import net . minecraft . world . biome . WorldChunkManager ; 
 + import net . minecraft . world . biome . BiomeProvider ; 
 import net . minecraft . world . gen . structure . MapGenVillage ; 
 import net . minecraftforge . common . util . EnumHelper ; 
 
 @ @ - 24 , 9 + 25 , 9 @ @ public class BiomeManager 
 
 static 
 { 
 - oceanBiomes . add ( BiomeGenBase . ocean ) ; 
 - oceanBiomes . add ( BiomeGenBase . deepOcean ) ; 
 - oceanBiomes . add ( BiomeGenBase . frozenOcean ) ; 
 + oceanBiomes . add ( Biomes . ocean ) ; 
 + oceanBiomes . add ( Biomes . deepOcean ) ; 
 + oceanBiomes . add ( Biomes . frozenOcean ) ; 
 } 
 
 private static TrackedList < BiomeEntry > [ ] setupBiomes ( ) 
 @ @ - 35 , 26 + 36 , 26 @ @ public class BiomeManager 
 TrackedList < BiomeEntry > [ ] currentBiomes = new TrackedList [ BiomeType . values ( ) . length ] ; 
 List < BiomeEntry > list = new ArrayList < BiomeEntry > ( ) ; 
 
 - list . add ( new BiomeEntry ( BiomeGenBase . forest , 10 ) ) ; 
 - list . add ( new BiomeEntry ( BiomeGenBase . roofedForest , 10 ) ) ; 
 - list . add ( new BiomeEntry ( BiomeGenBase . extremeHills , 10 ) ) ; 
 - list . add ( new BiomeEntry ( BiomeGenBase . plains , 10 ) ) ; 
 - list . add ( new BiomeEntry ( BiomeGenBase . birchForest , 10 ) ) ; 
 - list . add ( new BiomeEntry ( BiomeGenBase . swampland , 10 ) ) ; 
 + list . add ( new BiomeEntry ( Biomes . forest , 10 ) ) ; 
 + list . add ( new BiomeEntry ( Biomes . roofedForest , 10 ) ) ; 
 + list . add ( new BiomeEntry ( Biomes . extremeHills , 10 ) ) ; 
 + list . add ( new BiomeEntry ( Biomes . plains , 10 ) ) ; 
 + list . add ( new BiomeEntry ( Biomes . birchForest , 10 ) ) ; 
 + list . add ( new BiomeEntry ( Biomes . swampland , 10 ) ) ; 
 
 currentBiomes [ BiomeType . WARM . ordinal ( ) ] = new TrackedList < BiomeEntry > ( list ) ; 
 list . clear ( ) ; 
 
 - list . add ( new BiomeEntry ( BiomeGenBase . forest , 10 ) ) ; 
 - list . add ( new BiomeEntry ( BiomeGenBase . extremeHills , 10 ) ) ; 
 - list . add ( new BiomeEntry ( BiomeGenBase . taiga , 10 ) ) ; 
 - list . add ( new BiomeEntry ( BiomeGenBase . plains , 10 ) ) ; 
 + list . add ( new BiomeEntry ( Biomes . forest , 10 ) ) ; 
 + list . add ( new BiomeEntry ( Biomes . extremeHills , 10 ) ) ; 
 + list . add ( new BiomeEntry ( Biomes . taiga , 10 ) ) ; 
 + list . add ( new BiomeEntry ( Biomes . plains , 10 ) ) ; 
 
 currentBiomes [ BiomeType . COOL . ordinal ( ) ] = new TrackedList < BiomeEntry > ( list ) ; 
 list . clear ( ) ; 
 
 - list . add ( new BiomeEntry ( BiomeGenBase . icePlains , 30 ) ) ; 
 - list . add ( new BiomeEntry ( BiomeGenBase . coldTaiga , 10 ) ) ; 
 + list . add ( new BiomeEntry ( Biomes . icePlains , 30 ) ) ; 
 + list . add ( new BiomeEntry ( Biomes . coldTaiga , 10 ) ) ; 
 
 currentBiomes [ BiomeType . ICY . ordinal ( ) ] = new TrackedList < BiomeEntry > ( list ) ; 
 list . clear ( ) ; 
 @ @ - 102 , 17 + 103 , 17 @ @ public class BiomeManager 
 
 public static void addSpawnBiome ( BiomeGenBase biome ) 
 { 
 - if ( ! WorldChunkManager . allowedBiomes . contains ( biome ) ) 
 + if ( ! BiomeProvider . allowedBiomes . contains ( biome ) ) 
 { 
 - WorldChunkManager . allowedBiomes . add ( biome ) ; 
 + BiomeProvider . allowedBiomes . add ( biome ) ; 
 } 
 } 
 
 public static void removeSpawnBiome ( BiomeGenBase biome ) 
 { 
 - if ( WorldChunkManager . allowedBiomes . contains ( biome ) ) 
 + if ( BiomeProvider . allowedBiomes . contains ( biome ) ) 
 { 
 - WorldChunkManager . allowedBiomes . remove ( biome ) ; 
 + BiomeProvider . allowedBiomes . remove ( biome ) ; 
 } 
 } 


NEAREST DIFF:
diff - - git a / common / forge _ at . cfg b / common / forge _ at . cfg 
 index 181de9d . . b9fb01b 100644 
 - - - a / common / forge _ at . cfg 
 + + + b / common / forge _ at . cfg 
 @ @ - 88 , 4 + 88 , 8 @ @ public xe . H # World / field _ 72993 _ I activeChunkSet 
 public ln . bc # EntityLiving / field _ 70728 _ aV experienceValue 
 # GuiFlatPresets 
 public asr . a ( Ljava / lang / String ; ILxz ; Ljava / util / List ; [ Labm ; ) V # GuiFlatPresets / func _ 82294 _ a 
 - public asr . a ( Ljava / lang / String ; ILxz ; [ Labm ; ) V # GuiFlatPresets / func _ 82297 _ a 
 \ No newline at end of file 
 + public asr . a ( Ljava / lang / String ; ILxz ; [ Labm ; ) V # GuiFlatPresets / func _ 82297 _ a 
 + # BiomeGenBase 
 + public xz . * ( ) # Everything protected - > public 
 + # MapGenVillage 
 + public - f aea . e # MapGenVillage / field _ 75055 _ e villageSpawnBiomes 
 \ No newline at end of file 
 diff - - git a / common / net / minecraftforge / common / BiomeManager . java b / common / net / minecraftforge / common / BiomeManager . java 
 new file mode 100644 
 index 0000000 . . ccf6bdf 
 - - - / dev / null 
 + + + b / common / net / minecraftforge / common / BiomeManager . java 
 @ @ - 0 , 0 + 1 , 70 @ @ 
 + package net . minecraftforge . common ; 
 + 
 + import java . util . ArrayList ; 
 + import java . util . Arrays ; 
 + import java . util . HashSet ; 
 + import java . util . Set ; 
 + 
 + import net . minecraft . src . BiomeGenBase ; 
 + import net . minecraft . src . ChunkProviderGenerate ; 
 + import net . minecraft . src . IChunkProvider ; 
 + import net . minecraft . src . MapGenStronghold ; 
 + import net . minecraft . src . MapGenVillage ; 
 + import net . minecraft . src . WorldChunkManager ; 
 + 
 + import com . google . common . collect . Lists ; 
 + 
 + public class BiomeManager 
 + { 
 + public static void addVillageBiome ( BiomeGenBase biome , boolean canSpawn ) 
 + { 
 + if ( ! MapGenVillage . villageSpawnBiomes . contains ( biome ) ) 
 + { 
 + ArrayList < BiomeGenBase > biomes = new ArrayList < BiomeGenBase > ( MapGenVillage . villageSpawnBiomes ) ; 
 + biomes . add ( biome ) ; 
 + MapGenVillage . villageSpawnBiomes = biomes ; 
 + } 
 + } 
 + 
 + public static void removeVillageBiome ( BiomeGenBase biome ) 
 + { 
 + if ( MapGenVillage . villageSpawnBiomes . contains ( biome ) ) 
 + { 
 + ArrayList < BiomeGenBase > biomes = new ArrayList < BiomeGenBase > ( MapGenVillage . villageSpawnBiomes ) ; 
 + biomes . remove ( biome ) ; 
 + MapGenVillage . villageSpawnBiomes = biomes ; 
 + } 
 + } 
 + 
 + public static void addStrongholdBiome ( BiomeGenBase biome ) 
 + { 
 + if ( ! MapGenStronghold . allowedBiomes . contains ( biome ) ) 
 + { 
 + MapGenStronghold . allowedBiomes . add ( biome ) ; 
 + } 
 + } 
 + 
 + public static void removeStrongholdBiome ( BiomeGenBase biome ) 
 + { 
 + if ( MapGenStronghold . allowedBiomes . contains ( biome ) ) 
 + { 
 + MapGenStronghold . allowedBiomes . remove ( biome ) ; 
 + } 
 + } 
 + 
 + public static void addSpawnBiome ( BiomeGenBase biome ) 
 + { 
 + if ( ! WorldChunkManager . allowedBiomes . contains ( biome ) ) 
 + { 
 + WorldChunkManager . allowedBiomes . add ( biome ) ; 
 + } 
 + } 
 + 
 + public static void removeSpawnBiome ( BiomeGenBase biome ) 
 + { 
 + if ( WorldChunkManager . allowedBiomes . contains ( biome ) ) 
 + { 
 + WorldChunkManager . allowedBiomes . remove ( biome ) ; 
 + } 
 + } 
 + } 
 \ No newline at end of file 
 diff - - git a / patches / common / net / minecraft / src / MapGenStronghold . java . patch b / patches / common / net / minecraft / src / MapGenStronghold . java . patch 
 new file mode 100644 
 index 0000000 . . 0837f33 
 - - - / dev / null 
 + + + b / patches / common / net / minecraft / src / MapGenStronghold . java . patch 
 @ @ - 0 , 0 + 1 , 36 @ @ 
 + - - - . . / src _ base / common / net / minecraft / src / MapGenStronghold . java 
 + + + + . . / src _ work / common / net / minecraft / src / MapGenStronghold . java 
 + @ @ - 1 , 6 + 1 , 7 @ @ 
 + package net . minecraft . src ; 
 + 
 + import java . util . ArrayList ; 
 + + import java . util . Arrays ; 
 + import java . util . Collections ; 
 + import java . util . Iterator ; 
 + import java . util . List ; 
 + @ @ - 10 , 6 + 11 , 7 @ @ 
 + 
 + public class MapGenStronghold extends MapGenStructure 
 + { 
 + + public static ArrayList < BiomeGenBase > allowedBiomes = new ArrayList < BiomeGenBase > ( Arrays . asList ( BiomeGenBase . desert , BiomeGenBase . forest , BiomeGenBase . extremeHills , BiomeGenBase . swampland , BiomeGenBase . taiga , BiomeGenBase . icePlains , BiomeGenBase . iceMountains , BiomeGenBase . desertHills , BiomeGenBase . forestHills , BiomeGenBase . extremeHillsEdge , BiomeGenBase . jungle , BiomeGenBase . jungleHills ) ) ; 
 + public BiomeGenBase [ ] allowedBiomeGenBases ; 
 + 
 + / * * 
 + @ @ - 22 , 7 + 24 , 7 @ @ 
 + 
 + public MapGenStronghold ( ) 
 + { 
 + - this . allowedBiomeGenBases = new BiomeGenBase [ ] { BiomeGenBase . desert , BiomeGenBase . forest , BiomeGenBase . extremeHills , BiomeGenBase . swampland , BiomeGenBase . taiga , BiomeGenBase . icePlains , BiomeGenBase . iceMountains , BiomeGenBase . desertHills , BiomeGenBase . forestHills , BiomeGenBase . extremeHillsEdge , BiomeGenBase . jungle , BiomeGenBase . jungleHills } ; 
 + + this . allowedBiomeGenBases = allowedBiomes . toArray ( new BiomeGenBase [ 0 ] ) ; 
 + this . structureCoords = new ChunkCoordIntPair [ 3 ] ; 
 + this . field _ 82671 _ h = 32 . 0D ; 
 + this . field _ 82672 _ i = 3 ; 
 + @ @ - 30 , 7 + 32 , 7 @ @ 
 + 
 + public MapGenStronghold ( Map par1Map ) 
 + { 
 + - this . allowedBiomeGenBases = new BiomeGenBase [ ] { BiomeGenBase . desert , BiomeGenBase . forest , BiomeGenBase . extremeHills , BiomeGenBase . swampland , BiomeGenBase . taiga , BiomeGenBase . icePlains , BiomeGenBase . iceMountains , BiomeGenBase . desertHills , BiomeGenBase . forestHills , BiomeGenBase . extremeHillsEdge , BiomeGenBase . jungle , BiomeGenBase . jungleHills } ; 
 + + this . allowedBiomeGenBases = allowedBiomes . toArray ( new BiomeGenBase [ 0 ] ) ; 
 + this . structureCoords = new ChunkCoordIntPair [ 3 ] ; 
 + this . field _ 82671 _ h = 32 . 0D ; 
 + this . field _ 82672 _ i = 3 ; 
 diff - - git a / patches / common / net / minecraft / src / WorldChunkManager . java . patch b / patches / common / net / minecraft / src / WorldChunkManager . java . patch 
 new file mode 100644 
 index 0000000 . . 429a2d5 
 - - - / dev / null 
 + + + b / patches / common / net / minecraft / src / WorldChunkManager . java . patch 
 @ @ - 0 , 0 + 1 , 32 @ @ 
 + - - - . . / src _ base / common / net / minecraft / src / WorldChunkManager . java 
 + + + + . . / src _ work / common / net / minecraft / src / WorldChunkManager . java 
 + @ @ - 3 , 11 + 3 , 14 @ @ 
 + import cpw . mods . fml . common . Side ; 
 + import cpw . mods . fml . common . asm . SideOnly ; 
 + import java . util . ArrayList ; 
 + + import java . util . Arrays ; 
 + import java . util . List ; 
 + import java . util . Random ; 
 + + import static net . minecraft . src . BiomeGenBase . * ; 
 + 
 + public class WorldChunkManager 
 + { 
 + + public static ArrayList < BiomeGenBase > allowedBiomes = new ArrayList < BiomeGenBase > ( Arrays . asList ( forest , plains , taiga , taigaHills , forestHills , jungle . jungleHills ) ) ; 
 + private GenLayer genBiomes ; 
 + 
 + / * * A GenLayer containing the indices into BiomeGenBase . biomeList [ ] * / 
 + @ @ - 23 , 13 + 26 , 7 @ @ 
 + { 
 + this . biomeCache = new BiomeCache ( this ) ; 
 + this . biomesToSpawnIn = new ArrayList ( ) ; 
 + - this . biomesToSpawnIn . add ( BiomeGenBase . forest ) ; 
 + - this . biomesToSpawnIn . add ( BiomeGenBase . plains ) ; 
 + - this . biomesToSpawnIn . add ( BiomeGenBase . taiga ) ; 
 + - this . biomesToSpawnIn . add ( BiomeGenBase . taigaHills ) ; 
 + - this . biomesToSpawnIn . add ( BiomeGenBase . forestHills ) ; 
 + - this . biomesToSpawnIn . add ( BiomeGenBase . jungle ) ; 
 + - this . biomesToSpawnIn . add ( BiomeGenBase . jungleHills ) ; 
 + + this . biomesToSpawnIn . addAll ( allowedBiomes ) ; 
 + } 
 + 
 + public WorldChunkManager ( long par1 , WorldType par3WorldType )
