BLEU SCORE: 0.017911710595643587

TEST MSG: Clean up transformers a bit . Can ' t use COMPUTE _ FRAMES even though it ' s required - the game refuses to even
GENERATED MSG: Add some null checks , and throw descriptive exception when SideTransformer prevents a class from loading .

TEST DIFF (one line): diff - - git a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / EventSubscriptionTransformer . java b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / EventSubscriptionTransformer . java <nl> index fd77ebc . . 0062ab8 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / EventSubscriptionTransformer . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / EventSubscriptionTransformer . java <nl> @ @ - 65 , 7 + 65 , 7 @ @ public class EventSubscriptionTransformer implements IClassTransformer <nl> { <nl> if ( buildEvents ( classNode ) ) <nl> { <nl> - ClassWriter cw = new ClassWriter ( COMPUTE _ MAXS | COMPUTE _ FRAMES ) ; <nl> + ClassWriter cw = new ClassWriter ( COMPUTE _ FRAMES ) ; <nl> classNode . accept ( cw ) ; <nl> return cw . toByteArray ( ) ; <nl> } <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java <nl> index 8f05923 . . 30abc68 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java <nl> @ @ - 100 , 7 + 100 , 7 @ @ public class MarkerTransformer implements IClassTransformer <nl> @ Override <nl> public byte [ ] transform ( String name , String transformedName , byte [ ] bytes ) <nl> { <nl> - 	 if ( bytes = = null ) { return null ; } <nl> + if ( bytes = = null ) { return null ; } <nl> if ( ! markers . containsKey ( name ) ) { return bytes ; } <nl> <nl> ClassNode classNode = new ClassNode ( ) ; <nl> diff - - git a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / SideTransformer . java b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / SideTransformer . java <nl> index 3f45115 . . 4904613 100644 <nl> - - - a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / SideTransformer . java <nl> + + + b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / SideTransformer . java <nl> @ @ - 35 , 7 + 35 , 7 @ @ public class SideTransformer implements IClassTransformer <nl> @ Override <nl> public byte [ ] transform ( String name , String transformedName , byte [ ] bytes ) <nl> { <nl> - 	 if ( bytes = = null ) { return null ; } <nl> + if ( bytes = = null ) { return null ; } <nl> <nl> ClassNode classNode = new ClassNode ( ) ; <nl> ClassReader classReader = new ClassReader ( bytes ) ;
NEAREST DIFF (one line): diff - - git a / fml / common / cpw / mods / fml / common / asm / transformers / AccessTransformer . java b / fml / common / cpw / mods / fml / common / asm / transformers / AccessTransformer . java <nl> index 65a0461 . . bc1a376 100644 <nl> - - - a / fml / common / cpw / mods / fml / common / asm / transformers / AccessTransformer . java <nl> + + + b / fml / common / cpw / mods / fml / common / asm / transformers / AccessTransformer . java <nl> @ @ - 145 , 6 + 145 , 7 @ @ public class AccessTransformer implements IClassTransformer <nl> @ Override <nl> public byte [ ] transform ( String name , byte [ ] bytes ) <nl> { <nl> + 	 if ( bytes = = null ) { return null ; } <nl> if ( ! modifiers . containsKey ( name ) ) { return bytes ; } <nl> <nl> ClassNode classNode = new ClassNode ( ) ; <nl> diff - - git a / fml / common / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java b / fml / common / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java <nl> index 6551b03 . . f9a2985 100644 <nl> - - - a / fml / common / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java <nl> + + + b / fml / common / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java <nl> @ @ - 89 , 6 + 89 , 7 @ @ public class MarkerTransformer implements IClassTransformer <nl> @ Override <nl> public byte [ ] transform ( String name , byte [ ] bytes ) <nl> { <nl> + 	 if ( bytes = = null ) { return null ; } <nl> if ( ! markers . containsKey ( name ) ) { return bytes ; } <nl> <nl> ClassNode classNode = new ClassNode ( ) ; <nl> diff - - git a / fml / common / cpw / mods / fml / common / asm / transformers / SideTransformer . java b / fml / common / cpw / mods / fml / common / asm / transformers / SideTransformer . java <nl> index 27b89c6 . . 87716bb 100644 <nl> - - - a / fml / common / cpw / mods / fml / common / asm / transformers / SideTransformer . java <nl> + + + b / fml / common / cpw / mods / fml / common / asm / transformers / SideTransformer . java <nl> @ @ - 23 , 6 + 23 , 8 @ @ public class SideTransformer implements IClassTransformer <nl> @ Override <nl> public byte [ ] transform ( String name , byte [ ] bytes ) <nl> { <nl> + 	 if ( bytes = = null ) { return null ; } <nl> + <nl> ClassNode classNode = new ClassNode ( ) ; <nl> ClassReader classReader = new ClassReader ( bytes ) ; <nl> classReader . accept ( classNode , 0 ) ; <nl> @ @ - 33 , 7 + 35 , 7 @ @ public class SideTransformer implements IClassTransformer <nl> { <nl> System . out . println ( String . format ( " Attempted to load class % s for invalid side % s " , classNode . name , SIDE ) ) ; <nl> } <nl> - return null ; <nl> + throw new RuntimeException ( String . format ( " Attempted to load class % s for invalid side % s " , classNode . name , SIDE ) ) ; <nl> } <nl> <nl> Iterator < FieldNode > fields = classNode . fields . iterator ( ) ;

TEST DIFF:
diff - - git a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / EventSubscriptionTransformer . java b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / EventSubscriptionTransformer . java 
 index fd77ebc . . 0062ab8 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / EventSubscriptionTransformer . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / EventSubscriptionTransformer . java 
 @ @ - 65 , 7 + 65 , 7 @ @ public class EventSubscriptionTransformer implements IClassTransformer 
 { 
 if ( buildEvents ( classNode ) ) 
 { 
 - ClassWriter cw = new ClassWriter ( COMPUTE _ MAXS | COMPUTE _ FRAMES ) ; 
 + ClassWriter cw = new ClassWriter ( COMPUTE _ FRAMES ) ; 
 classNode . accept ( cw ) ; 
 return cw . toByteArray ( ) ; 
 } 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java 
 index 8f05923 . . 30abc68 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java 
 @ @ - 100 , 7 + 100 , 7 @ @ public class MarkerTransformer implements IClassTransformer 
 @ Override 
 public byte [ ] transform ( String name , String transformedName , byte [ ] bytes ) 
 { 
 - 	 if ( bytes = = null ) { return null ; } 
 + if ( bytes = = null ) { return null ; } 
 if ( ! markers . containsKey ( name ) ) { return bytes ; } 
 
 ClassNode classNode = new ClassNode ( ) ; 
 diff - - git a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / SideTransformer . java b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / SideTransformer . java 
 index 3f45115 . . 4904613 100644 
 - - - a / fml / src / main / java / cpw / mods / fml / common / asm / transformers / SideTransformer . java 
 + + + b / fml / src / main / java / cpw / mods / fml / common / asm / transformers / SideTransformer . java 
 @ @ - 35 , 7 + 35 , 7 @ @ public class SideTransformer implements IClassTransformer 
 @ Override 
 public byte [ ] transform ( String name , String transformedName , byte [ ] bytes ) 
 { 
 - 	 if ( bytes = = null ) { return null ; } 
 + if ( bytes = = null ) { return null ; } 
 
 ClassNode classNode = new ClassNode ( ) ; 
 ClassReader classReader = new ClassReader ( bytes ) ;

NEAREST DIFF:
diff - - git a / fml / common / cpw / mods / fml / common / asm / transformers / AccessTransformer . java b / fml / common / cpw / mods / fml / common / asm / transformers / AccessTransformer . java 
 index 65a0461 . . bc1a376 100644 
 - - - a / fml / common / cpw / mods / fml / common / asm / transformers / AccessTransformer . java 
 + + + b / fml / common / cpw / mods / fml / common / asm / transformers / AccessTransformer . java 
 @ @ - 145 , 6 + 145 , 7 @ @ public class AccessTransformer implements IClassTransformer 
 @ Override 
 public byte [ ] transform ( String name , byte [ ] bytes ) 
 { 
 + 	 if ( bytes = = null ) { return null ; } 
 if ( ! modifiers . containsKey ( name ) ) { return bytes ; } 
 
 ClassNode classNode = new ClassNode ( ) ; 
 diff - - git a / fml / common / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java b / fml / common / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java 
 index 6551b03 . . f9a2985 100644 
 - - - a / fml / common / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java 
 + + + b / fml / common / cpw / mods / fml / common / asm / transformers / MarkerTransformer . java 
 @ @ - 89 , 6 + 89 , 7 @ @ public class MarkerTransformer implements IClassTransformer 
 @ Override 
 public byte [ ] transform ( String name , byte [ ] bytes ) 
 { 
 + 	 if ( bytes = = null ) { return null ; } 
 if ( ! markers . containsKey ( name ) ) { return bytes ; } 
 
 ClassNode classNode = new ClassNode ( ) ; 
 diff - - git a / fml / common / cpw / mods / fml / common / asm / transformers / SideTransformer . java b / fml / common / cpw / mods / fml / common / asm / transformers / SideTransformer . java 
 index 27b89c6 . . 87716bb 100644 
 - - - a / fml / common / cpw / mods / fml / common / asm / transformers / SideTransformer . java 
 + + + b / fml / common / cpw / mods / fml / common / asm / transformers / SideTransformer . java 
 @ @ - 23 , 6 + 23 , 8 @ @ public class SideTransformer implements IClassTransformer 
 @ Override 
 public byte [ ] transform ( String name , byte [ ] bytes ) 
 { 
 + 	 if ( bytes = = null ) { return null ; } 
 + 
 ClassNode classNode = new ClassNode ( ) ; 
 ClassReader classReader = new ClassReader ( bytes ) ; 
 classReader . accept ( classNode , 0 ) ; 
 @ @ - 33 , 7 + 35 , 7 @ @ public class SideTransformer implements IClassTransformer 
 { 
 System . out . println ( String . format ( " Attempted to load class % s for invalid side % s " , classNode . name , SIDE ) ) ; 
 } 
 - return null ; 
 + throw new RuntimeException ( String . format ( " Attempted to load class % s for invalid side % s " , classNode . name , SIDE ) ) ; 
 } 
 
 Iterator < FieldNode > fields = classNode . fields . iterator ( ) ;
